Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 17-1minus-mlpconcat-crazystuff-2
MLPSCALE: 2
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config) 
========
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights * x + (1-xWeights)*machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=True
MLP_SCALE=2
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 6, with 45,318,144 parameters
num non-decayed parameter tensors: 6, with 5,376 parameters
@ 0 train 10.9393 , allloss: 27.6262, dt: 2610.74ms, fracRes: 0.0062, norm(attn): 0.0327, norm(output): 0.0505, norm(x): 0.0523, norm(y): 0.9985, norm:24.1771, tok/sec: 50204.96, flops:19.56, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4863, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3926, 0.3359, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.2695, 0.2354, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1953, 0.2070, 0.3027, 0.1235, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.1924, 0.1875, 0.1309, 0.1050, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1357, 0.1504, 0.1289, 0.1621, 0.1670, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.1299, 0.2539, 0.0884, 0.0796, 0.0579, 0.0908, 0.1934, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.1279, 0.0796, 0.0664, 0.1855, 0.0684, 0.1494, 0.1138, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.0942, 0.0530, 0.0547, 0.0889, 0.0933, 0.1738, 0.0928, 0.1074, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.1050, 0.1245, 0.0845, 0.0562, 0.1709, 0.0674, 0.0649, 0.0674, 0.1069, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.1016, 0.1079, 0.1128, 0.0649, 0.0640, 0.1250, 0.0674, 0.0815, 0.0457, 0.0688, 0.0825, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.0640, 0.1338, 0.0791, 0.0996, 0.0596, 0.0574, 0.0454, 0.1035, 0.0518, 0.0645, 0.1006, 0.0635, 0.0000, 0.0000],
        [0.0713, 0.0864, 0.0342, 0.0503, 0.0972, 0.0776, 0.0732, 0.0532, 0.0747, 0.0859, 0.0513, 0.0786, 0.0928, 0.0728, 0.0000],
        [0.0732, 0.0542, 0.0908, 0.0500, 0.0718, 0.0630, 0.0762, 0.0439, 0.0801, 0.0552, 0.0659, 0.0757, 0.0679, 0.0698, 0.0623]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0014, -0.0011, -0.0308,  ...,  0.0348,  0.0110, -0.0423],
        [ 0.0017,  0.0222,  0.0302,  ..., -0.0008, -0.0020,  0.0208],
        [ 0.0090, -0.0285, -0.0409,  ...,  0.0227,  0.0150, -0.0349],
        ...,
        [-0.0036,  0.0002,  0.0051,  ..., -0.0002,  0.0012,  0.0450],
        [ 0.0191,  0.0258, -0.0196,  ...,  0.0219,  0.0015,  0.0014],
        [-0.0156, -0.0056, -0.0058,  ...,  0.0260, -0.0336, -0.0052]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5625, -0.3730,  0.6914, -0.2578,  0.3301,  0.7695,  0.5742, -0.0820,  0.8633,  0.1699,  0.1328,  0.8281,  0.1934, -0.2754, -0.2578, -0.1089,  0.0204, -0.3164, -0.5938, -0.4648,  0.1699, -0.1641, -0.0356, -0.2471,  0.1738,  0.7188, -0.6328,  1.4453,  0.0806, -0.0173,  0.1465,  0.6758,
        -0.7383,  0.2148,  0.2393, -0.5039,  0.1060, -0.5234,  0.2402,  0.2480,  0.9492, -0.1855,  0.5898,  0.9609, -0.1230, -0.4902,  0.9180,  0.0898,  0.6562, -1.5938,  0.0173, -0.5039,  0.2656, -0.4434,  0.8867,  0.8672, -0.2695, -0.0057,  0.5742,  1.6641, -0.4746,  0.1357, -0.6055,  0.5273],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0096,  0.0162,  ..., -0.0195, -0.0096,  0.0293],
        [ 0.0251,  0.0323, -0.0724,  ..., -0.0037, -0.0060, -0.0169],
        [ 0.0335, -0.0157,  0.0331,  ..., -0.0279, -0.0341, -0.0400],
        ...,
        [-0.0179,  0.0096,  0.0185,  ..., -0.0060,  0.0143,  0.0033],
        [-0.0557, -0.0011, -0.0343,  ..., -0.0105, -0.0117,  0.0089],
        [-0.0194,  0.0003, -0.0036,  ...,  0.0070,  0.0038, -0.0018]], device='cuda:0', requires_grad=True)
Q: tensor([     0.9531,      0.0693,     -0.2051,      0.0415,      0.3750,     -0.1289,     -0.5117,      0.3262,      0.6914,     -0.1865,     -0.5156,     -0.7070,     -0.0674,      0.5117,     -1.4609,      0.0583,      0.3848,      0.0830,      0.0128,      0.8242,     -0.6484,      0.3457,
            -0.6172,      0.0166,      0.0986,      0.6250,     -0.1240,      0.5352,     -0.2539,      0.2715,      0.5977,     -0.0179,      0.0080,     -0.5508,      0.3223,      0.2100,     -0.6094,      0.8555,     -0.1064,     -0.5586,      0.0574,      0.7734,     -0.2275,      0.1387,
            -0.3320,      0.8047,     -0.0089,      0.2773,     -0.1167,      0.3438,     -0.2061,      1.1875,     -0.5547,     -0.5820,     -0.0417,      0.2100,     -0.8555,      0.0013,     -0.2100,      0.0322,     -0.2236,      0.5547,      0.1943,     -0.5039], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0532,      0.0864,      0.5312,     -0.0432,     -0.3457,      0.7617,      0.0840,      0.3047,      0.1768,      0.2793,      0.1172,     -0.1660,      0.3086,     -0.4395],
        [     0.0000,     -0.1572,     -0.3711,     -0.5625,     -0.1553,     -0.1748,      0.1504,      0.4414,     -0.3438,     -0.5820,     -0.7305,      0.3359,      0.0366,      0.3457,      0.3105],
        [     0.0000,     -0.2500,     -0.3809,     -0.8320,     -0.4141,     -0.5352,     -0.0811,      0.3340,     -0.3398,      0.7031,     -0.0679,     -0.2637,      0.5977,      0.4531,     -0.4043],
        [     0.0000,      0.0591,      0.4395,     -0.4551,     -0.1226,     -0.6133,      0.2910,      0.0537,      0.1523,     -0.1416,     -0.4551,      0.4062,      0.0859,     -0.0452,      0.2236],
        [     0.0000,      0.2393,      0.2100,     -0.1455,     -0.3711,      0.4258,     -0.2158,      0.1387,     -0.0845,      0.1475,     -0.2676,     -0.1748,     -0.0005,      0.2754,     -0.2539],
        [     0.0000,      0.0815,      0.1836,      0.0299,      0.2598,      0.2891,      0.0459,     -0.2441,      0.5391,     -0.2930,     -0.1982,     -0.2832,      0.0645,      0.3027,      0.0747],
        [     0.0000,      0.2031,      0.8750,     -0.1807,     -0.2832,     -0.6055,     -0.1533,      0.6016,      0.2168,     -0.2305,     -0.1445,      0.1719,      0.0128,      0.4785,     -0.2207],
        [     0.0000,      0.1689,     -0.3027,     -0.4805,      0.5469,     -0.4570,      0.3281,      0.0562,     -0.0608,      0.5195,     -0.1855,      0.2441,     -0.1953,     -0.1895,      0.3262],
        [     0.0000,      0.0258,     -0.5469,     -0.5156,     -0.0294,      0.0161,      0.6406,      0.0132,      0.1572,      0.4922,      0.0967,     -0.1113,      0.3418,      0.2891,      0.1050],
        [     0.0000,      0.3730,      0.5430,      0.1533,     -0.2539,      0.8555,     -0.0698,     -0.1108,     -0.0718,      0.3906,      0.1099,     -0.3359,     -0.7578,      0.0422,     -0.2314],
        [     0.0000,      0.2773,      0.3359,      0.3789,     -0.1689,     -0.1836,      0.4844,     -0.1328,      0.0596,     -0.5273,     -0.1118,      0.0708,      0.0625,      0.1138,     -0.0019],
        [     0.0000,     -0.1807,      0.5586,      0.0312,      0.2598,     -0.2559,     -0.2910,     -0.5273,      0.2988,     -0.3945,     -0.1768,      0.2695,     -0.1904,      0.1738,      0.0830],
        [     0.0000,      0.1924,     -0.7383,     -0.3535,      0.3086,      0.0820,      0.0284,     -0.2930,      0.0479,      0.1836,     -0.3340,      0.0957,      0.2637,      0.0201,      0.1992],
        [     0.0000,     -0.2988,      0.2178,     -0.3770,     -0.0195,     -0.1523,      0.0449,     -0.5117,      0.0928,     -0.2812,     -0.1045,      0.0381,     -0.0708,     -0.0474,     -0.1582]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4697],
        [0.3245],
        [0.2459],
        [0.1951],
        [0.1596],
        [0.1338],
        [0.1211],
        [0.1055],
        [0.0976],
        [0.0821],
        [0.0771],
        [0.0757],
        [0.0696],
        [0.0662]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4668, 0.5312, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.3301, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3359, 0.2734, 0.2178, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.2207, 0.2891, 0.1357, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.1748, 0.2012, 0.1553, 0.1099, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1416, 0.1377, 0.1118, 0.1748, 0.1680, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.1089, 0.2314, 0.0864, 0.0801, 0.0620, 0.0908, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1055, 0.0864, 0.0952, 0.0806, 0.1504, 0.0830, 0.1719, 0.1211, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0962, 0.0530, 0.0586, 0.0845, 0.1328, 0.1416, 0.0752, 0.1162, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0967, 0.1221, 0.0903, 0.0520, 0.1494, 0.0859, 0.0781, 0.0579, 0.0869, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0703, 0.0933, 0.1201, 0.0732, 0.0640, 0.1426, 0.0786, 0.0684, 0.0508, 0.0610, 0.1011, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0703, 0.1201, 0.1035, 0.0996, 0.0684, 0.0815, 0.0552, 0.0908, 0.0442, 0.0581, 0.0757, 0.0564, 0.0000, 0.0000],
        [0.0654, 0.0708, 0.0442, 0.0649, 0.0815, 0.0708, 0.0928, 0.0449, 0.0771, 0.0981, 0.0620, 0.0615, 0.0762, 0.0898, 0.0000],
        [0.0674, 0.0693, 0.0996, 0.0688, 0.0845, 0.0718, 0.0732, 0.0574, 0.0674, 0.0601, 0.0469, 0.0544, 0.0659, 0.0503, 0.0630]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0014, -0.0011, -0.0308,  ...,  0.0348,  0.0110, -0.0423],
        [ 0.0017,  0.0222,  0.0302,  ..., -0.0008, -0.0020,  0.0208],
        [ 0.0090, -0.0285, -0.0409,  ...,  0.0227,  0.0150, -0.0349],
        ...,
        [-0.0036,  0.0002,  0.0051,  ..., -0.0002,  0.0012,  0.0450],
        [ 0.0191,  0.0258, -0.0196,  ...,  0.0219,  0.0015,  0.0014],
        [-0.0156, -0.0056, -0.0058,  ...,  0.0260, -0.0336, -0.0052]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3887, -0.0308,  0.8008, -0.6406, -0.3867,  0.1396,  1.0781, -0.2295,  0.7188, -0.0164,  0.0175,  1.0391,  0.9297, -0.4980, -0.5703, -0.3926,  0.5352,  0.2305, -0.7539,  0.1836, -0.4023, -0.3340, -0.1836,  0.2275,  0.2930,  1.0000, -0.8828,  0.6953,  0.2852,  0.6406,  0.0713,  0.6953,
        -0.6172,  0.6016, -0.3477, -0.2637, -0.4082, -0.8750, -0.0281, -0.5078,  0.4258,  0.4238,  0.4062,  1.0078, -0.6562, -0.4688,  0.7188, -0.4512,  0.2314, -1.3125,  0.6602, -0.4082, -0.2441, -0.2812,  0.9375,  0.7852,  0.1035, -0.1387,  0.7266,  1.2578,  0.0952,  0.1406, -0.4336,  1.0781],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0096,  0.0162,  ..., -0.0195, -0.0096,  0.0293],
        [ 0.0251,  0.0323, -0.0724,  ..., -0.0037, -0.0060, -0.0169],
        [ 0.0335, -0.0157,  0.0331,  ..., -0.0279, -0.0341, -0.0400],
        ...,
        [-0.0179,  0.0096,  0.0185,  ..., -0.0060,  0.0143,  0.0033],
        [-0.0557, -0.0011, -0.0343,  ..., -0.0105, -0.0117,  0.0089],
        [-0.0194,  0.0003, -0.0036,  ...,  0.0070,  0.0038, -0.0018]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0540,  0.1562, -0.3047,  0.8359,  0.0219, -0.7188, -0.0718,  0.2949,  0.4844, -0.3750, -0.2988, -0.8789, -0.3633,  0.9336, -1.1562, -0.0474, -0.2676, -0.1865, -0.1226,  1.1250, -0.2793, -0.1309, -1.0000, -0.5820, -0.3887,  0.4629, -0.7969,  0.1982, -0.1045,  0.4980,  0.5859, -0.0981,
         0.0786, -0.3164, -0.0439, -0.5312, -0.9102,  1.1875, -0.3320,  0.0251,  0.1719,  0.7070, -0.5781,  0.3281, -0.4512, -0.1621,  0.1729,  0.1963,  0.5547,  0.2422,  0.4277,  1.1953,  0.0923, -0.4355, -0.6719,  0.0820, -1.0234, -0.1572, -0.2930,  0.1807, -0.1230,  0.2676,  0.0200,  0.1816],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1299,  0.0962,  0.5625,  0.0486, -0.1455,  0.8203,  0.1963,  0.2246,  0.1699,  0.5469,  0.0549, -0.2139,  0.3242, -0.5039],
        [ 0.0000, -0.1914, -0.3887, -0.5820, -0.1836, -0.2490,  0.2695,  0.3555, -0.2451, -0.3848, -0.4004,  0.0850, -0.0210,  0.3301,  0.1270],
        [ 0.0000, -0.2031, -0.4316, -0.6680, -0.4941, -0.3457,  0.0310,  0.2793, -0.2451,  0.8164,  0.0535, -0.0297,  0.8359,  0.4980, -0.4492],
        [ 0.0000,  0.1895,  0.4570, -0.3008, -0.0620, -0.5234,  0.4473,  0.0442,  0.2139, -0.1084, -0.2988,  0.0913,  0.1787,  0.0530,  0.3320],
        [ 0.0000,  0.1572,  0.2988,  0.0378, -0.3086,  0.3301, -0.1108,  0.0064, -0.2793,  0.4258, -0.0601, -0.0728,  0.1973, -0.0281, -0.4219],
        [ 0.0000,  0.0189, -0.0044, -0.2168,  0.2324,  0.1904, -0.0796, -0.2676,  0.4258, -0.2295, -0.4434, -0.3359,  0.2148,  0.2217,  0.3535],
        [ 0.0000,  0.0095,  0.7656, -0.2227, -0.2969, -0.5508, -0.1729,  0.7656,  0.1953, -0.1758, -0.1318,  0.2285,  0.0996,  0.3027, -0.1543],
        [ 0.0000, -0.2002, -0.1045, -0.2695,  0.3555, -0.2422,  0.4883,  0.1396,  0.0035,  0.4414,  0.1348,  0.2119,  0.1846,  0.0898,  0.0193],
        [ 0.0000,  0.1270, -0.4727, -0.3711, -0.0038,  0.4492,  0.5117, -0.1206,  0.3125,  0.6094,  0.3574, -0.0977,  0.3301,  0.4902,  0.1846],
        [ 0.0000,  0.2656,  0.4980,  0.1953, -0.3535,  0.6992,  0.1504,  0.0540, -0.2480,  0.1602,  0.3633,  0.0752, -0.4922,  0.4258, -0.4082],
        [ 0.0000, -0.0762,  0.2070,  0.4609, -0.0369, -0.1680,  0.6289,  0.0374, -0.1060, -0.4023, -0.2188,  0.2871,  0.2441,  0.3906, -0.0483],
        [ 0.0000, -0.0659,  0.4707,  0.3203,  0.2832, -0.0952,  0.0835, -0.3086,  0.1914, -0.5312, -0.2578,  0.0098, -0.2891,  0.0388,  0.0505],
        [ 0.0000,  0.0815, -0.3926, -0.0083,  0.2197,  0.0820,  0.3516, -0.3730,  0.1641,  0.4062, -0.0542, -0.0586,  0.1523,  0.3164, -0.1973],
        [ 0.0000,  0.0325,  0.3926,  0.0231,  0.2285,  0.0630,  0.0879, -0.1572,  0.0025, -0.1152, -0.3594, -0.2109, -0.0222, -0.2930, -0.0659]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4681],
        [0.3244],
        [0.2443],
        [0.1937],
        [0.1577],
        [0.1344],
        [0.1200],
        [0.1060],
        [0.0968],
        [0.0816],
        [0.0780],
        [0.0763],
        [0.0694],
        [0.0659]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4492, 0.5508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4043, 0.3223, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.2793, 0.2002, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.2285, 0.2695, 0.1582, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.1572, 0.2080, 0.1738, 0.1230, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.1465, 0.1226, 0.1011, 0.1904, 0.1514, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1172, 0.0991, 0.2021, 0.0913, 0.0977, 0.0786, 0.0928, 0.2217, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.0613, 0.1011, 0.1035, 0.1196, 0.0981, 0.1504, 0.1396, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.0981, 0.0583, 0.0669, 0.0859, 0.1670, 0.1182, 0.0649, 0.1069, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.0811, 0.1074, 0.0864, 0.0605, 0.1123, 0.1045, 0.0854, 0.0620, 0.0869, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0623, 0.0825, 0.1196, 0.0903, 0.0718, 0.1226, 0.0845, 0.0713, 0.0571, 0.0630, 0.1011, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0674, 0.1074, 0.1157, 0.0947, 0.0752, 0.0854, 0.0630, 0.0850, 0.0498, 0.0540, 0.0635, 0.0654, 0.0000, 0.0000],
        [0.0649, 0.0566, 0.0481, 0.0854, 0.0757, 0.0723, 0.0864, 0.0518, 0.0718, 0.0894, 0.0603, 0.0688, 0.0771, 0.0913, 0.0000],
        [0.0664, 0.0742, 0.1006, 0.0811, 0.0728, 0.0820, 0.0732, 0.0693, 0.0491, 0.0476, 0.0413, 0.0491, 0.0649, 0.0557, 0.0728]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0014, -0.0011, -0.0308,  ...,  0.0348,  0.0110, -0.0423],
        [ 0.0017,  0.0222,  0.0302,  ..., -0.0008, -0.0020,  0.0208],
        [ 0.0090, -0.0285, -0.0409,  ...,  0.0227,  0.0150, -0.0349],
        ...,
        [-0.0036,  0.0002,  0.0051,  ..., -0.0002,  0.0012,  0.0450],
        [ 0.0191,  0.0258, -0.0196,  ...,  0.0219,  0.0015,  0.0014],
        [-0.0156, -0.0056, -0.0058,  ...,  0.0260, -0.0336, -0.0052]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0277,  0.1797,  0.7422, -0.9492, -0.6953, -0.1245,  0.9453, -0.4102,  0.5156, -0.1318,  0.0967,  0.8750,  0.9922, -0.5469, -0.6484, -0.4531,  0.6680,  0.6484, -0.8398,  0.6875, -0.5352, -0.4746, -0.2676,  0.6328,  0.5703,  1.1250, -0.7031,  0.0206,  0.2500,  0.6406,  0.0713,  0.1045,
        -0.2100,  0.5352, -0.3262,  0.1396, -0.6523, -0.9414, -0.3809, -0.9219,  0.3496,  0.8242,  0.0245,  0.7695, -0.6328, -0.4102,  0.7695, -0.4590, -0.1826, -0.9141,  0.7500, -0.4395, -0.4961, -0.5039,  0.5391,  0.6914,  0.1885, -0.0183,  0.6758,  1.0703,  0.3633,  0.0388, -0.0226,  0.9844],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0096,  0.0162,  ..., -0.0195, -0.0096,  0.0293],
        [ 0.0251,  0.0323, -0.0724,  ..., -0.0037, -0.0060, -0.0169],
        [ 0.0335, -0.0157,  0.0331,  ..., -0.0279, -0.0341, -0.0400],
        ...,
        [-0.0179,  0.0096,  0.0185,  ..., -0.0060,  0.0143,  0.0033],
        [-0.0557, -0.0011, -0.0343,  ..., -0.0105, -0.0117,  0.0089],
        [-0.0194,  0.0003, -0.0036,  ...,  0.0070,  0.0038, -0.0018]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4004,  0.0025, -0.1729,  0.9531, -0.1777, -1.1406,  0.1895,  0.3145,  0.4512, -0.4570, -0.4512, -0.6406, -0.3262,  0.8125, -0.7539, -0.1533, -0.5312, -0.5586, -0.4746,  1.0000,  0.1338, -0.3535, -0.7305, -0.7188, -0.7148,  0.4238, -1.0625,  0.4141, -0.0125,  0.5781,  0.4922,  0.0182,
        -0.1001, -0.0928, -0.3184, -0.7461, -0.9648,  1.1172, -0.3477,  0.3359,  0.3340,  0.5469, -0.1670,  0.4023, -0.3574, -0.7227,  0.1973, -0.0742,  0.6953,  0.2021,  0.6523,  0.8438,  0.2246, -0.2734, -0.9453, -0.0250, -1.2031, -0.2129, -0.4844,  0.3828, -0.2852, -0.0334, -0.0737,  0.5586],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2021,      0.1011,      0.5820,      0.1250,      0.0496,      0.7500,      0.2227,      0.1348,      0.1641,      0.5859,     -0.1099,     -0.2256,      0.1943,     -0.4395],
        [     0.0000,     -0.2275,     -0.3945,     -0.5859,     -0.2090,     -0.2793,      0.3223,      0.2617,     -0.2139,     -0.2793,     -0.0908,     -0.2295,     -0.1279,      0.2441,     -0.0532],
        [     0.0000,     -0.1494,     -0.4824,     -0.4941,     -0.5391,     -0.1689,      0.0601,      0.0603,     -0.0840,      0.7578,      0.1514,      0.0479,      0.8047,      0.5156,     -0.4824],
        [     0.0000,      0.2871,      0.4492,     -0.0806,     -0.0004,     -0.3730,      0.5391,      0.0586,      0.2188,      0.0264,     -0.1816,     -0.1328,      0.0884,      0.1211,      0.4375],
        [     0.0000,      0.0596,      0.3379,      0.1553,     -0.1875,      0.2441,      0.0034,     -0.0615,     -0.4258,      0.4492,      0.0293,     -0.0025,      0.1973,     -0.1553,     -0.3164],
        [     0.0000,     -0.0361,     -0.2129,     -0.4082,      0.2285,     -0.0003,     -0.1084,     -0.2773,      0.3477,     -0.0957,     -0.5234,     -0.1270,      0.2285,      0.3242,      0.4434],
        [     0.0000,     -0.1641,      0.5469,     -0.2500,     -0.1826,     -0.4004,     -0.2344,      0.6406,      0.1602,     -0.1338,     -0.1875,      0.3164,      0.0540,      0.2988,     -0.2617],
        [     0.0000,     -0.5156,     -0.0132,      0.0071,      0.1543,     -0.0430,      0.3828,      0.3047,      0.1846,      0.1895,      0.1943,      0.3262,      0.3750,      0.3848,     -0.1338],
        [     0.0000,      0.1504,     -0.3672,     -0.2305,      0.0204,      0.6875,      0.3379,     -0.2578,      0.2393,      0.5703,      0.6562,     -0.1650,      0.2656,      0.3398,      0.2441],
        [     0.0000,      0.0308,      0.3145,      0.0962,     -0.2578,      0.3594,      0.2871,      0.0864,     -0.2324,      0.1060,      0.5469,      0.3750,      0.0461,      0.5039,     -0.5820],
        [     0.0000,     -0.1699,      0.1133,      0.4863,      0.2051,     -0.0227,      0.5078,      0.1367,     -0.0342,     -0.2559,     -0.1553,      0.3164,      0.3633,      0.6797,      0.0287],
        [     0.0000,     -0.1025,      0.3633,      0.4375,      0.2363,      0.0049,      0.1338,     -0.1680,      0.1279,     -0.4043,     -0.3242,     -0.1641,     -0.1318,      0.0461,     -0.2217],
        [     0.0000,     -0.1338,     -0.3008,      0.2734,      0.1543,      0.1069,      0.2871,     -0.2256,      0.1021,      0.3223,     -0.0718,      0.0613,      0.1758,      0.3438,     -0.3496],
        [     0.0000,      0.1128,      0.4160,      0.2002,      0.0894,      0.2148,      0.0996,      0.0474,     -0.3008,     -0.3301,     -0.4746,     -0.3027,     -0.0209,     -0.1768,      0.0938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4679],
        [0.3250],
        [0.2433],
        [0.1920],
        [0.1561],
        [0.1346],
        [0.1202],
        [0.1075],
        [0.0962],
        [0.0833],
        [0.0786],
        [0.0757],
        [0.0691],
        [0.0645]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3887, 0.6094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.3008, 0.2988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.2578, 0.1377, 0.3105, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.1807, 0.1484, 0.3691, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1572, 0.1094, 0.1904, 0.1396, 0.2754, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1631, 0.1172, 0.0962, 0.1875, 0.1885, 0.1436, 0.1040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.0962, 0.1250, 0.1216, 0.1611, 0.1504, 0.0864, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.0618, 0.1074, 0.1221, 0.1699, 0.1064, 0.0957, 0.1250, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.0488, 0.0776, 0.1436, 0.1250, 0.1289, 0.1030, 0.0649, 0.0957, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.0645, 0.0635, 0.0815, 0.1035, 0.1069, 0.0649, 0.1108, 0.0879, 0.1196, 0.1021, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0576, 0.0544, 0.0549, 0.0840, 0.1118, 0.0913, 0.0488, 0.0532, 0.0806, 0.1104, 0.1357, 0.1167, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.0420, 0.1250, 0.0530, 0.0640, 0.0530, 0.0613, 0.0728, 0.0845, 0.0684, 0.0908, 0.1338, 0.0894, 0.0000, 0.0000],
        [0.0613, 0.0603, 0.0408, 0.0718, 0.1260, 0.0513, 0.0476, 0.0552, 0.0684, 0.1245, 0.0742, 0.0840, 0.0564, 0.0786, 0.0000],
        [0.0635, 0.0540, 0.0684, 0.0354, 0.0503, 0.0771, 0.0464, 0.0635, 0.0762, 0.0713, 0.0403, 0.0864, 0.0791, 0.0977, 0.0913]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0014, -0.0011, -0.0308,  ...,  0.0348,  0.0110, -0.0423],
        [ 0.0017,  0.0222,  0.0302,  ..., -0.0008, -0.0020,  0.0208],
        [ 0.0090, -0.0285, -0.0409,  ...,  0.0227,  0.0150, -0.0349],
        ...,
        [-0.0036,  0.0002,  0.0051,  ..., -0.0002,  0.0012,  0.0450],
        [ 0.0191,  0.0258, -0.0196,  ...,  0.0219,  0.0015,  0.0014],
        [-0.0156, -0.0056, -0.0058,  ...,  0.0260, -0.0336, -0.0052]], device='cuda:0', requires_grad=True)
K: tensor([-0.7422, -0.6328, -0.3496, -0.3477,  0.2314, -0.6602,  0.5391,  0.0383,  0.7227, -0.8789,  0.0659, -0.4414, -0.4922,  0.3633, -1.1641, -0.2930, -0.1011,  0.2158,  1.0391,  1.7344, -0.8672, -0.8125, -0.0247,  0.8125,  0.0654, -0.2334,  0.1748,  0.0459, -0.8711,  0.7578,  0.1729, -1.3750,
        -0.1016, -0.4336, -0.1416,  1.0156,  0.0371,  0.3027,  0.0635,  0.3965, -0.7305,  0.2734,  0.6992,  0.2969, -0.2754,  0.3301,  0.0801,  0.0430, -0.3027, -0.9766, -0.7773, -1.4609, -0.5977, -1.2734, -1.5547,  0.8242, -0.1235,  0.2812,  0.8828,  1.0156,  0.6758,  0.2637,  0.4980, -0.3379],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0096,  0.0162,  ..., -0.0195, -0.0096,  0.0293],
        [ 0.0251,  0.0323, -0.0724,  ..., -0.0037, -0.0060, -0.0169],
        [ 0.0335, -0.0157,  0.0331,  ..., -0.0279, -0.0341, -0.0400],
        ...,
        [-0.0179,  0.0096,  0.0185,  ..., -0.0060,  0.0143,  0.0033],
        [-0.0557, -0.0011, -0.0343,  ..., -0.0105, -0.0117,  0.0089],
        [-0.0194,  0.0003, -0.0036,  ...,  0.0070,  0.0038, -0.0018]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0178,  0.5781,  0.3164, -0.0205,  0.8945, -0.3027, -0.1826, -0.3594,  0.3066, -0.3789,  0.4980,  0.1367, -0.2158,  1.5078, -0.3340, -0.4199,  0.3164, -0.7500,  0.0728, -0.3457, -0.9844,  0.1611, -0.4316, -0.0574,  0.0923,  0.5039, -0.6641, -0.0957, -0.5703, -0.4648,  0.4922, -0.0933,
         0.0148,  0.4277, -0.2988, -0.1562,  0.7969,  0.6406, -0.2148, -1.0312,  0.4258, -0.0537,  0.0903,  0.5664,  0.5195,  0.3379,  0.9531, -0.1641, -0.3301,  0.5312, -1.1719, -0.3105, -0.0574,  0.0305,  0.0520,  0.9570, -0.7031,  0.2109, -0.1050,  0.2441,  0.2422,  0.0107, -0.4902,  0.2207],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.4512,     -0.0031,      0.5000,      0.1196,      0.3105,      0.1504,     -0.0928,      0.0007,      0.1289,      0.1914,     -0.1123,     -0.7031,     -0.2363,     -0.0747],
        [     0.0000,     -0.2871,     -0.2910,     -0.3672,     -0.0415,      0.0659,     -0.1143,      0.2295,     -0.1807,     -0.1484,     -0.2441,     -0.0903,     -0.0791,     -0.1426,     -0.3828],
        [     0.0000,     -0.1377,     -0.7656,      0.0513,     -0.1924,     -0.0283,      0.0027,     -0.4180,     -0.0140,      0.4883,      0.4355,      0.3125,     -0.7148,      0.0596,     -0.0200],
        [     0.0000,      0.2295,      0.0332,      0.9414,      0.0864,      0.5469,      0.0869,      0.1621,      0.2393,      0.7891,      0.2910,      0.3750,     -0.2266,      0.5469,      0.6211],
        [     0.0000,     -0.3652,      0.1895,     -0.1216,      0.5625,     -0.2041,     -0.1445,      0.5430,     -0.0145,     -0.1514,      0.0684,      0.6445,      0.0613,      0.0820,      0.2871],
        [     0.0000,     -0.3301,     -0.5234,      0.1416,      0.1475,     -0.1279,     -0.4492,     -0.3809,     -0.0232,      0.2275,      0.1211,      0.2148,     -0.1299,      0.6758,      0.2363],
        [     0.0000,     -0.3516,     -0.0884,     -0.1147,      0.1660,      0.0952,     -0.4609,     -0.1025,     -0.2041,      0.6719,      0.2793,      0.9141,     -0.4062,      0.2363,      0.3438],
        [     0.0000,     -0.6250,     -0.0723,      0.0574,      0.3867,     -0.0776,     -0.1855,      0.0815,     -0.1816,      0.7227,     -0.1030,      0.2168,     -0.3281,     -0.3164,      0.1118],
        [     0.0000,     -0.6797,     -0.2217,      0.3965,      0.2559,      0.2852,      0.0635,     -0.3945,     -0.0095,      0.1816,      0.1924,      0.2891,     -0.4707,     -0.1758,      0.1387],
        [     0.0000,     -0.3867,     -0.4004,     -0.1523,      0.0850,      0.1177,     -0.3828,      0.1533,     -0.0781,      0.2314,      0.0698,      0.4121,     -0.2910,      0.4141,     -0.0187],
        [     0.0000,     -0.0579,     -0.0493,      0.3770,      0.6602,      0.4629,     -0.1641,     -0.0786,      0.3340,      0.6484,      0.8594,      0.7070,     -0.0317,      0.7969,      0.1709],
        [     0.0000,     -0.4023,      0.6836,     -0.1738,      0.0149,     -0.1738,     -0.0265,      0.1426,      0.2949,      0.0845,      0.3652,      0.7539,      0.3496,      0.1680,      0.3633],
        [     0.0000,     -0.0176,     -0.4102,      0.1553,      0.7188,     -0.1768,     -0.2520,     -0.1045,      0.1099,      0.7109,      0.1934,      0.3145,     -0.0845,      0.2500,      0.2520],
        [     0.0000,     -0.1650,      0.0669,     -0.5898,     -0.2373,      0.1895,     -0.3184,     -0.0018,      0.1777,      0.1113,     -0.4609,      0.3066,      0.2148,      0.4258,      0.3574]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4800],
        [0.3348],
        [0.2506],
        [0.1902],
        [0.1509],
        [0.1389],
        [0.1237],
        [0.1152],
        [0.0950],
        [0.0901],
        [0.0802],
        [0.0709],
        [0.0697],
        [0.0682]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3906, 0.6094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3965, 0.3047, 0.2988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.2520, 0.1387, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.1787, 0.1436, 0.3652, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1553, 0.1104, 0.1865, 0.1396, 0.2812, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.1118, 0.0991, 0.1943, 0.1777, 0.1582, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.0947, 0.1235, 0.1240, 0.1514, 0.1582, 0.0835, 0.1245, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1172, 0.0659, 0.1128, 0.1138, 0.1748, 0.1069, 0.0962, 0.1182, 0.0942, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.0505, 0.0737, 0.1396, 0.1245, 0.1299, 0.1001, 0.0654, 0.1001, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.0654, 0.0659, 0.0762, 0.1035, 0.1084, 0.0640, 0.1089, 0.0913, 0.1201, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0549, 0.0496, 0.0542, 0.0845, 0.1099, 0.0942, 0.0510, 0.0510, 0.0889, 0.1187, 0.1270, 0.1172, 0.0000, 0.0000, 0.0000],
        [0.0618, 0.0417, 0.1182, 0.0525, 0.0674, 0.0554, 0.0562, 0.0688, 0.0830, 0.0762, 0.0894, 0.1445, 0.0850, 0.0000, 0.0000],
        [0.0605, 0.0640, 0.0417, 0.0688, 0.1182, 0.0537, 0.0483, 0.0544, 0.0703, 0.1270, 0.0747, 0.0874, 0.0520, 0.0791, 0.0000],
        [0.0603, 0.0547, 0.0623, 0.0386, 0.0532, 0.0723, 0.0447, 0.0613, 0.0742, 0.0737, 0.0393, 0.0933, 0.0752, 0.0996, 0.0977]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0014, -0.0011, -0.0308,  ...,  0.0348,  0.0110, -0.0423],
        [ 0.0017,  0.0222,  0.0302,  ..., -0.0008, -0.0020,  0.0208],
        [ 0.0090, -0.0285, -0.0409,  ...,  0.0227,  0.0150, -0.0349],
        ...,
        [-0.0036,  0.0002,  0.0051,  ..., -0.0002,  0.0012,  0.0450],
        [ 0.0191,  0.0258, -0.0196,  ...,  0.0219,  0.0015,  0.0014],
        [-0.0156, -0.0056, -0.0058,  ...,  0.0260, -0.0336, -0.0052]], device='cuda:0', requires_grad=True)
K: tensor([-0.5625, -0.4980, -0.2061, -0.2793,  0.3457, -0.5781,  0.5820,  0.1377,  0.6836, -0.7969,  0.0359, -0.2246, -0.5312,  0.5664, -1.0938, -0.3203, -0.2227,  0.2070,  0.9297,  1.6406, -0.8398, -0.8281, -0.0840,  0.7070,  0.0840, -0.0493,  0.1196,  0.0082, -1.0156,  0.9531,  0.3047, -1.3516,
        -0.1172, -0.3945, -0.0928,  0.9922,  0.0569,  0.3242,  0.1001,  0.4785, -0.7656,  0.2598,  0.8750,  0.3535, -0.2617,  0.1670,  0.1885,  0.0096, -0.3164, -1.1094, -0.7539, -1.6484, -0.4727, -1.1328, -1.6172,  0.9883, -0.0364,  0.4512,  0.9648,  1.0312,  0.5430,  0.0840,  0.4160, -0.3047],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0096,  0.0162,  ..., -0.0195, -0.0096,  0.0293],
        [ 0.0251,  0.0323, -0.0724,  ..., -0.0037, -0.0060, -0.0169],
        [ 0.0335, -0.0157,  0.0331,  ..., -0.0279, -0.0341, -0.0400],
        ...,
        [-0.0179,  0.0096,  0.0185,  ..., -0.0060,  0.0143,  0.0033],
        [-0.0557, -0.0011, -0.0343,  ..., -0.0105, -0.0117,  0.0089],
        [-0.0194,  0.0003, -0.0036,  ...,  0.0070,  0.0038, -0.0018]], device='cuda:0', requires_grad=True)
Q: tensor([     0.1348,      0.6602,      0.3809,      0.0256,      0.7891,     -0.3281,     -0.1338,     -0.3496,      0.1279,     -0.3145,      0.5664,      0.1475,     -0.1670,      1.4453,     -0.2471,     -0.6406,      0.3047,     -0.7344,      0.1689,     -0.3613,     -0.9258,      0.1602,
            -0.4160,      0.1328,      0.0008,      0.5625,     -0.6602,     -0.1167,     -0.4160,     -0.4805,      0.4219,     -0.2119,     -0.0172,      0.4082,     -0.1709,     -0.0080,      0.8633,      0.7578,     -0.3496,     -0.8828,      0.4336,     -0.0186,      0.0796,      0.6133,
             0.4062,      0.3711,      0.9023,     -0.1904,     -0.3242,      0.5352,     -1.0938,     -0.3770,     -0.1006,     -0.1504,      0.1152,      1.0391,     -0.5312,      0.3320,     -0.0559,      0.2578,      0.2910,      0.1621,     -0.6094,      0.4707], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4453, -0.0195,  0.4707,  0.0894,  0.2969,  0.1699, -0.1260,  0.0461,  0.0388,  0.1543, -0.0479, -0.7148, -0.2197, -0.0693],
        [ 0.0000, -0.2617, -0.2852, -0.3301,  0.0166,  0.0427, -0.1797,  0.2344, -0.2002, -0.1475, -0.3105, -0.0811, -0.0503, -0.1680, -0.3750],
        [ 0.0000, -0.1709, -0.7656,  0.0315, -0.1270, -0.0476,  0.0464, -0.3789,  0.0134,  0.4219,  0.3359,  0.2656, -0.6992,  0.0115,  0.0469],
        [ 0.0000,  0.2129, -0.0047,  0.9258,  0.1514,  0.6016,  0.0859,  0.0903,  0.2480,  0.7891,  0.2969,  0.4023, -0.2598,  0.5234,  0.6289],
        [ 0.0000, -0.3438,  0.1816, -0.1030,  0.5938, -0.1953, -0.1045,  0.5469,  0.0033, -0.1553,  0.0664,  0.7578,  0.0215,  0.1543,  0.3613],
        [ 0.0000, -0.3516, -0.4727,  0.2012,  0.1118, -0.0029, -0.4531, -0.3281, -0.0486,  0.1924,  0.0371,  0.1709, -0.1621,  0.5586,  0.2773],
        [ 0.0000, -0.3867, -0.1196, -0.1187,  0.0854,  0.1289, -0.5117, -0.1133, -0.2041,  0.6445,  0.2695,  0.9414, -0.4297,  0.2500,  0.3379],
        [ 0.0000, -0.5742, -0.0366, -0.0284,  0.4023, -0.0903, -0.1943,  0.0099, -0.2188,  0.6680, -0.2119,  0.1592, -0.4141, -0.3027,  0.2070],
        [ 0.0000, -0.6367, -0.2598,  0.3770,  0.2637,  0.3047,  0.0469, -0.3809,  0.0449,  0.2451,  0.1406,  0.2891, -0.5039, -0.1001,  0.2578],
        [ 0.0000, -0.3496, -0.3496, -0.1992,  0.1035,  0.1514, -0.3730,  0.1572, -0.0177,  0.2520,  0.0972,  0.4043, -0.2676,  0.3965, -0.0045],
        [ 0.0000, -0.1035, -0.0146,  0.4258,  0.6914,  0.5352, -0.0742, -0.0747,  0.4785,  0.7695,  0.8359,  0.7539, -0.0630,  0.7656,  0.2793],
        [ 0.0000, -0.3926,  0.6523, -0.1631,  0.0859, -0.1060, -0.0933,  0.1074,  0.2969,  0.2080,  0.3672,  0.8555,  0.3223,  0.2197,  0.4863],
        [ 0.0000,  0.0537, -0.3711,  0.1270,  0.6680, -0.1216, -0.2266, -0.1060,  0.1514,  0.7383,  0.2090,  0.3652, -0.1514,  0.2656,  0.3008],
        [ 0.0000, -0.0986,  0.0327, -0.4492, -0.1245,  0.1826, -0.2988,  0.0147,  0.2109,  0.1982, -0.4297,  0.4336,  0.2197,  0.5000,  0.4844]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4818],
        [0.3354],
        [0.2521],
        [0.1912],
        [0.1521],
        [0.1395],
        [0.1248],
        [0.1159],
        [0.0949],
        [0.0901],
        [0.0801],
        [0.0713],
        [0.0701],
        [0.0675]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( options:0.0002 rankings:0.0002 wholly:0.0002 Jak:0.0002 websites:0.0002Critical:0.0002 Galactic:0.0002.):0.0002)
.)
------
		( rankings:0.0002 wholly:0.0002 Jak:0.0002 websites:0.0002Critical:0.0002 Galactic:0.0002.):0.0002ah:0.0002)
ahconsAgain Export scoredClimate deliveredicrobialKo invasiongar tour diarrhea Peru Response
@ 1 train 10.9289 , allloss: 27.5892, dt: 1666.15ms, fracRes: 0.0062, norm(attn): 0.0330, norm(output): 0.0505, norm(x): 0.0523, norm(y): 0.9985, norm:25.1935, tok/sec: 78667.37, flops:30.65, batch-reuse:1
@ 2 train 10.9130 , allloss: 27.5032, dt: 1101.43ms, fracRes: 0.0062, norm(attn): 0.0330, norm(output): 0.0505, norm(x): 0.0523, norm(y): 0.9985, norm:22.9235, tok/sec: 119001.23, flops:46.36, batch-reuse:1
@ 3 train 10.8888 , allloss: 27.3620, dt: 1078.29ms, fracRes: 0.0062, norm(attn): 0.0332, norm(output): 0.0505, norm(x): 0.0524, norm(y): 0.9985, norm:21.8647, tok/sec: 121554.94, flops:47.36, batch-reuse:1
@ 4 train 10.8536 , allloss: 27.1321, dt: 1088.39ms, fracRes: 0.0062, norm(attn): 0.0334, norm(output): 0.0505, norm(x): 0.0525, norm(y): 0.9985, norm:20.5143, tok/sec: 120427.20, flops:46.92, batch-reuse:1
@ 5 train 10.8238 , allloss: 26.8491, dt: 1088.23ms, fracRes: 0.0062, norm(attn): 0.0347, norm(output): 0.0505, norm(x): 0.0527, norm(y): 0.9985, norm:18.6225, tok/sec: 120445.01, flops:46.93, batch-reuse:1
@ 6 train 10.7794 , allloss: 26.4892, dt: 1097.91ms, fracRes: 0.0062, norm(attn): 0.0352, norm(output): 0.0510, norm(x): 0.0530, norm(y): 0.9985, norm:19.1524, tok/sec: 119382.89, flops:46.51, batch-reuse:1
@ 7 train 10.7390 , allloss: 26.0949, dt: 1093.93ms, fracRes: 0.0062, norm(attn): 0.0356, norm(output): 0.0510, norm(x): 0.0534, norm(y): 0.9985, norm:18.8935, tok/sec: 119817.75, flops:46.68, batch-reuse:1
@ 8 train 10.7041 , allloss: 25.6981, dt: 1102.88ms, fracRes: 0.0063, norm(attn): 0.0371, norm(output): 0.0518, norm(x): 0.0537, norm(y): 0.9985, norm:18.9263, tok/sec: 118845.67, flops:46.30, batch-reuse:1
@ 9 train 10.6593 , allloss: 25.2985, dt: 1087.32ms, fracRes: 0.0063, norm(attn): 0.0378, norm(output): 0.0518, norm(x): 0.0542, norm(y): 0.9986, norm:19.4872, tok/sec: 120545.55, flops:46.96, batch-reuse:1
@ 10 train 10.6222 , allloss: 24.9124, dt: 1087.30ms, fracRes: 0.0063, norm(attn): 0.0391, norm(output): 0.0518, norm(x): 0.0545, norm(y): 0.9986, norm:19.3352, tok/sec: 120547.72, flops:46.97, batch-reuse:1
@ 11 train 10.6031 , allloss: 24.5502, dt: 1092.95ms, fracRes: 0.0064, norm(attn): 0.0396, norm(output): 0.0537, norm(x): 0.0550, norm(y): 0.9986, norm:19.2367, tok/sec: 119924.81, flops:46.72, batch-reuse:1
@ 12 train 10.5386 , allloss: 24.1517, dt: 1101.05ms, fracRes: 0.0065, norm(attn): 0.0405, norm(output): 0.0537, norm(x): 0.0554, norm(y): 0.9986, norm:20.3283, tok/sec: 119043.13, flops:46.38, batch-reuse:1
@ 13 train 10.5116 , allloss: 23.8042, dt: 1098.50ms, fracRes: 0.0065, norm(attn): 0.0417, norm(output): 0.0544, norm(x): 0.0558, norm(y): 0.9986, norm:21.0438, tok/sec: 119318.66, flops:46.49, batch-reuse:1
@ 14 train 10.4777 , allloss: 23.4692, dt: 1092.11ms, fracRes: 0.0066, norm(attn): 0.0427, norm(output): 0.0544, norm(x): 0.0563, norm(y): 0.9986, norm:21.6792, tok/sec: 120017.04, flops:46.76, batch-reuse:1
@ 15 train 10.4442 , allloss: 23.1579, dt: 1100.84ms, fracRes: 0.0067, norm(attn): 0.0430, norm(output): 0.0547, norm(x): 0.0567, norm(y): 0.9986, norm:22.3182, tok/sec: 119065.30, flops:46.39, batch-reuse:1
@ 16 train 10.4188 , allloss: 22.8708, dt: 1095.45ms, fracRes: 0.0067, norm(attn): 0.0432, norm(output): 0.0547, norm(x): 0.0571, norm(y): 0.9987, norm:23.2056, tok/sec: 119650.98, flops:46.62, batch-reuse:1
@ 17 train 10.3834 , allloss: 22.5939, dt: 1095.76ms, fracRes: 0.0068, norm(attn): 0.0442, norm(output): 0.0549, norm(x): 0.0575, norm(y): 0.9987, norm:23.9318, tok/sec: 119617.42, flops:46.60, batch-reuse:1
@ 18 train 10.3736 , allloss: 22.3534, dt: 1129.69ms, fracRes: 0.0069, norm(attn): 0.0442, norm(output): 0.0549, norm(x): 0.0579, norm(y): 0.9987, norm:24.7712, tok/sec: 116024.56, flops:45.20, batch-reuse:1
@ 19 train 10.3291 , allloss: 22.0881, dt: 1122.76ms, fracRes: 0.0070, norm(attn): 0.0454, norm(output): 0.0549, norm(x): 0.0583, norm(y): 0.9987, norm:25.9524, tok/sec: 116741.06, flops:45.48, batch-reuse:1
@ 20 train 10.3353 , allloss: 21.8790, dt: 1104.29ms, fracRes: 0.0070, norm(attn): 0.0464, norm(output): 0.0554, norm(x): 0.0586, norm(y): 0.9987, norm:26.5626, tok/sec: 118693.18, flops:46.24, batch-reuse:1
@ 21 train 10.3284 , allloss: 21.6721, dt: 1122.40ms, fracRes: 0.0071, norm(attn): 0.0466, norm(output): 0.0557, norm(x): 0.0589, norm(y): 0.9987, norm:27.2646, tok/sec: 116778.43, flops:45.50, batch-reuse:1
@ 22 train 10.3176 , allloss: 21.4648, dt: 1124.08ms, fracRes: 0.0072, norm(attn): 0.0469, norm(output): 0.0576, norm(x): 0.0592, norm(y): 0.9987, norm:27.4060, tok/sec: 116603.71, flops:45.43, batch-reuse:1
@ 23 train 10.3325 , allloss: 21.3156, dt: 1103.55ms, fracRes: 0.0072, norm(attn): 0.0471, norm(output): 0.0576, norm(x): 0.0594, norm(y): 0.9987, norm:27.8119, tok/sec: 118773.52, flops:46.27, batch-reuse:1
@ 24 train 10.3209 , allloss: 21.1477, dt: 1115.39ms, fracRes: 0.0073, norm(attn): 0.0481, norm(output): 0.0576, norm(x): 0.0595, norm(y): 0.9987, norm:28.2482, tok/sec: 117512.18, flops:45.78, batch-reuse:1
@ 25 train 10.2830 , allloss: 21.0040, dt: 1114.12ms, fracRes: 0.0074, norm(attn): 0.0483, norm(output): 0.0576, norm(x): 0.0595, norm(y): 0.9986, norm:29.1956, tok/sec: 117646.69, flops:45.84, batch-reuse:1
@ 26 train 10.2941 , allloss: 20.9340, dt: 1116.54ms, fracRes: 0.0074, norm(attn): 0.0498, norm(output): 0.0576, norm(x): 0.0594, norm(y): 0.9986, norm:29.5027, tok/sec: 117391.13, flops:45.74, batch-reuse:1
@ 27 train 10.2882 , allloss: 20.8708, dt: 1118.38ms, fracRes: 0.0075, norm(attn): 0.0505, norm(output): 0.0557, norm(x): 0.0593, norm(y): 0.9986, norm:29.8878, tok/sec: 117198.46, flops:45.66, batch-reuse:1
@ 28 train 10.2727 , allloss: 20.8022, dt: 1124.80ms, fracRes: 0.0075, norm(attn): 0.0508, norm(output): 0.0554, norm(x): 0.0591, norm(y): 0.9986, norm:29.6062, tok/sec: 116529.29, flops:45.40, batch-reuse:1
@ 29 train 10.2583 , allloss: 20.7523, dt: 1123.60ms, fracRes: 0.0075, norm(attn): 0.0510, norm(output): 0.0549, norm(x): 0.0588, norm(y): 0.9986, norm:28.9531, tok/sec: 116653.79, flops:45.45, batch-reuse:1
@ 30 train 10.2385 , allloss: 20.6749, dt: 1094.58ms, fracRes: 0.0076, norm(attn): 0.0518, norm(output): 0.0549, norm(x): 0.0587, norm(y): 0.9985, norm:29.3108, tok/sec: 119745.92, flops:46.65, batch-reuse:1
@ 31 train 10.2508 , allloss: 20.6213, dt: 1094.99ms, fracRes: 0.0076, norm(attn): 0.0537, norm(output): 0.0549, norm(x): 0.0585, norm(y): 0.9985, norm:29.7231, tok/sec: 119701.57, flops:46.64, batch-reuse:1
@ 32 train 10.2429 , allloss: 20.5375, dt: 1108.48ms, fracRes: 0.0076, norm(attn): 0.0544, norm(output): 0.0549, norm(x): 0.0584, norm(y): 0.9985, norm:29.5427, tok/sec: 118244.86, flops:46.07, batch-reuse:1
@ 33 train 10.2189 , allloss: 20.4224, dt: 1116.06ms, fracRes: 0.0076, norm(attn): 0.0549, norm(output): 0.0549, norm(x): 0.0583, norm(y): 0.9985, norm:29.1490, tok/sec: 117441.74, flops:45.76, batch-reuse:1
@ 34 train 10.2224 , allloss: 20.3564, dt: 1121.24ms, fracRes: 0.0076, norm(attn): 0.0557, norm(output): 0.0549, norm(x): 0.0582, norm(y): 0.9984, norm:28.3913, tok/sec: 116899.46, flops:45.54, batch-reuse:1
@ 35 train 10.2223 , allloss: 20.3227, dt: 1095.55ms, fracRes: 0.0076, norm(attn): 0.0576, norm(output): 0.0547, norm(x): 0.0580, norm(y): 0.9984, norm:28.5000, tok/sec: 119640.51, flops:46.61, batch-reuse:1
@ 36 train 10.2059 , allloss: 20.3072, dt: 1109.81ms, fracRes: 0.0075, norm(attn): 0.0583, norm(output): 0.0547, norm(x): 0.0578, norm(y): 0.9984, norm:28.3644, tok/sec: 118102.96, flops:46.01, batch-reuse:1
@ 37 train 10.2001 , allloss: 20.3614, dt: 1112.34ms, fracRes: 0.0075, norm(attn): 0.0586, norm(output): 0.0544, norm(x): 0.0575, norm(y): 0.9984, norm:28.9820, tok/sec: 117834.88, flops:45.91, batch-reuse:1
@ 38 train 10.1792 , allloss: 20.4446, dt: 1108.03ms, fracRes: 0.0074, norm(attn): 0.0588, norm(output): 0.0544, norm(x): 0.0571, norm(y): 0.9983, norm:29.9613, tok/sec: 118292.69, flops:46.09, batch-reuse:1
@ 39 train 10.1798 , allloss: 20.5652, dt: 1117.96ms, fracRes: 0.0074, norm(attn): 0.0588, norm(output): 0.0537, norm(x): 0.0568, norm(y): 0.9983, norm:29.4654, tok/sec: 117242.57, flops:45.68, batch-reuse:1
@ 40 train 10.1484 , allloss: 20.6660, dt: 1111.63ms, fracRes: 0.0074, norm(attn): 0.0586, norm(output): 0.0537, norm(x): 0.0566, norm(y): 0.9983, norm:31.6182, tok/sec: 117909.92, flops:45.94, batch-reuse:1
@ 41 train 10.1227 , allloss: 20.7666, dt: 1114.15ms, fracRes: 0.0074, norm(attn): 0.0586, norm(output): 0.0537, norm(x): 0.0566, norm(y): 0.9982, norm:33.5037, tok/sec: 117642.81, flops:45.83, batch-reuse:1
@ 42 train 10.0928 , allloss: 20.8197, dt: 1109.55ms, fracRes: 0.0074, norm(attn): 0.0588, norm(output): 0.0537, norm(x): 0.0567, norm(y): 0.9982, norm:34.7060, tok/sec: 118130.70, flops:46.02, batch-reuse:1
@ 43 train 10.0661 , allloss: 20.8273, dt: 1101.01ms, fracRes: 0.0075, norm(attn): 0.0615, norm(output): 0.0537, norm(x): 0.0569, norm(y): 0.9982, norm:34.9091, tok/sec: 119046.76, flops:46.38, batch-reuse:1
@ 44 train 10.0489 , allloss: 20.7948, dt: 1119.17ms, fracRes: 0.0075, norm(attn): 0.0618, norm(output): 0.0537, norm(x): 0.0573, norm(y): 0.9982, norm:34.9019, tok/sec: 117115.62, flops:45.63, batch-reuse:1
@ 45 train 10.0165 , allloss: 20.7211, dt: 1106.21ms, fracRes: 0.0076, norm(attn): 0.0623, norm(output): 0.0537, norm(x): 0.0577, norm(y): 0.9982, norm:35.6622, tok/sec: 118487.19, flops:46.16, batch-reuse:1
@ 46 train 9.9996 , allloss: 20.7209, dt: 1114.37ms, fracRes: 0.0076, norm(attn): 0.0630, norm(output): 0.0544, norm(x): 0.0580, norm(y): 0.9982, norm:36.3632, tok/sec: 117619.58, flops:45.82, batch-reuse:1
@ 47 train 9.9781 , allloss: 20.7654, dt: 1122.33ms, fracRes: 0.0076, norm(attn): 0.0635, norm(output): 0.0544, norm(x): 0.0582, norm(y): 0.9982, norm:36.6762, tok/sec: 116785.30, flops:45.50, batch-reuse:1
@ 48 train 9.9730 , allloss: 20.8267, dt: 1117.58ms, fracRes: 0.0076, norm(attn): 0.0635, norm(output): 0.0547, norm(x): 0.0583, norm(y): 0.9982, norm:37.3318, tok/sec: 117281.94, flops:45.69, batch-reuse:1
@ 49 train 9.9693 , allloss: 20.8781, dt: 1130.03ms, fracRes: 0.0076, norm(attn): 0.0654, norm(output): 0.0544, norm(x): 0.0584, norm(y): 0.9982, norm:37.3214, tok/sec: 115989.90, flops:45.19, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4902, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3926, 0.3320, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3398, 0.2734, 0.2373, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.2070, 0.3027, 0.1240, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.1943, 0.1875, 0.1318, 0.1060, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1367, 0.1504, 0.1289, 0.1641, 0.1660, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1055, 0.1289, 0.2598, 0.0898, 0.0791, 0.0581, 0.0903, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1084, 0.1260, 0.0806, 0.0674, 0.1865, 0.0684, 0.1484, 0.1128, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.0938, 0.0532, 0.0552, 0.0889, 0.0933, 0.1738, 0.0928, 0.1064, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.1040, 0.1250, 0.0850, 0.0564, 0.1709, 0.0664, 0.0669, 0.0664, 0.1060, 0.0801, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.1006, 0.1089, 0.1128, 0.0649, 0.0635, 0.1250, 0.0679, 0.0815, 0.0452, 0.0693, 0.0825, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.0640, 0.1348, 0.0781, 0.0981, 0.0586, 0.0576, 0.0457, 0.1030, 0.0513, 0.0649, 0.1040, 0.0635, 0.0000, 0.0000],
        [0.0723, 0.0845, 0.0349, 0.0508, 0.0977, 0.0781, 0.0723, 0.0532, 0.0742, 0.0859, 0.0515, 0.0781, 0.0952, 0.0713, 0.0000],
        [0.0732, 0.0547, 0.0903, 0.0498, 0.0732, 0.0630, 0.0771, 0.0432, 0.0801, 0.0554, 0.0659, 0.0752, 0.0669, 0.0698, 0.0620]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0010, -0.0006, -0.0314,  ...,  0.0342,  0.0106, -0.0422],
        [ 0.0011,  0.0216,  0.0306,  ..., -0.0009, -0.0028,  0.0208],
        [ 0.0094, -0.0287, -0.0404,  ...,  0.0233,  0.0153, -0.0345],
        ...,
        [-0.0035, -0.0001,  0.0056,  ...,  0.0004,  0.0016,  0.0453],
        [ 0.0189,  0.0259, -0.0191,  ...,  0.0226,  0.0022,  0.0020],
        [-0.0156, -0.0059, -0.0054,  ...,  0.0267, -0.0334, -0.0051]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5664, -0.3535,  0.7031, -0.2539,  0.2969,  0.7695,  0.5938, -0.0894,  0.8633,  0.1768,  0.1348,  0.8203,  0.1836, -0.2852, -0.2695, -0.1260,  0.0383, -0.3086, -0.6094, -0.4727,  0.1758, -0.1816, -0.0605, -0.2578,  0.1807,  0.7070, -0.6562,  1.4453,  0.0972, -0.0415,  0.1670,  0.6914,
        -0.7461,  0.2266,  0.2598, -0.4805,  0.1201, -0.5234,  0.2520,  0.2363,  0.9453, -0.1992,  0.5898,  0.9727, -0.0908, -0.4980,  0.9453,  0.0874,  0.6758, -1.5859,  0.0311, -0.5000,  0.2559, -0.4316,  0.8867,  0.8789, -0.2793,  0.0087,  0.6055,  1.6719, -0.4688,  0.1113, -0.5898,  0.5195],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0006, -0.0098,  0.0167,  ..., -0.0189, -0.0090,  0.0298],
        [ 0.0246,  0.0317, -0.0720,  ..., -0.0038, -0.0067, -0.0170],
        [ 0.0334, -0.0154,  0.0325,  ..., -0.0286, -0.0345, -0.0405],
        ...,
        [-0.0176,  0.0090,  0.0184,  ..., -0.0063,  0.0136,  0.0029],
        [-0.0562, -0.0012, -0.0348,  ..., -0.0112, -0.0124,  0.0084],
        [-0.0196,  0.0003, -0.0041,  ...,  0.0064,  0.0032, -0.0024]], device='cuda:0', requires_grad=True)
Q: tensor([     0.9336,      0.0898,     -0.1875,      0.0439,      0.3496,     -0.1299,     -0.5156,      0.3340,      0.6836,     -0.1953,     -0.5078,     -0.7266,     -0.0742,      0.5078,     -1.4766,      0.0645,      0.3848,      0.0996,      0.0247,      0.8242,     -0.6445,      0.3398,
            -0.6328,     -0.0137,      0.1074,      0.6172,     -0.1367,      0.5625,     -0.2295,      0.2471,      0.5977,     -0.0099,     -0.0020,     -0.5703,      0.3398,      0.2256,     -0.6055,      0.8789,     -0.1147,     -0.5664,      0.0688,      0.7539,     -0.2197,      0.1206,
            -0.3145,      0.8086,     -0.0059,      0.2715,     -0.1108,      0.3496,     -0.2031,      1.1953,     -0.5898,     -0.5859,     -0.0613,      0.2070,     -0.8867,      0.0005,     -0.1895,      0.0374,     -0.2236,      0.5508,      0.1914,     -0.5039], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0410,  0.1089,  0.5430, -0.0349, -0.3418,  0.7344,  0.0596,  0.2949,  0.1816,  0.2949,  0.1040, -0.1631,  0.2949, -0.4492],
        [ 0.0000, -0.1650, -0.3555, -0.5625, -0.1631, -0.1875,  0.1270,  0.4453, -0.3535, -0.5859, -0.7383,  0.3359,  0.0461,  0.3340,  0.2988],
        [ 0.0000, -0.2188, -0.3594, -0.8125, -0.3906, -0.5156, -0.0728,  0.3086, -0.3223,  0.7305, -0.0588, -0.2715,  0.5938,  0.4648, -0.3926],
        [ 0.0000,  0.0669,  0.4473, -0.4473, -0.1201, -0.6133,  0.2910,  0.0427,  0.1543, -0.1318, -0.4434,  0.3965,  0.0718, -0.0376,  0.2324],
        [ 0.0000,  0.2500,  0.2119, -0.1377, -0.3555,  0.4141, -0.2178,  0.1348, -0.0962,  0.1514, -0.2793, -0.1855, -0.0055,  0.2598, -0.2578],
        [ 0.0000,  0.0869,  0.1826,  0.0300,  0.2695,  0.2812,  0.0356, -0.2305,  0.5195, -0.3047, -0.2168, -0.2910,  0.0659,  0.2930,  0.0747],
        [ 0.0000,  0.2031,  0.9023, -0.1592, -0.2852, -0.5977, -0.1543,  0.5781,  0.2324, -0.2314, -0.1108,  0.1709,  0.0194,  0.4922, -0.2178],
        [ 0.0000,  0.1514, -0.2969, -0.4746,  0.5430, -0.4629,  0.3125,  0.0381, -0.0747,  0.5156, -0.1768,  0.2363, -0.1914, -0.2012,  0.3203],
        [ 0.0000,  0.0131, -0.5508, -0.5156, -0.0432,  0.0096,  0.6328,  0.0034,  0.1406,  0.4805,  0.0806, -0.1250,  0.3457,  0.2695,  0.1011],
        [ 0.0000,  0.3535,  0.5391,  0.1494, -0.2598,  0.8477, -0.0952, -0.0889, -0.0938,  0.3711,  0.0933, -0.3418, -0.7305,  0.0258, -0.2451],
        [ 0.0000,  0.2637,  0.3418,  0.3770, -0.1738, -0.1943,  0.4785, -0.1299,  0.0522, -0.5391, -0.1104,  0.0649,  0.0718,  0.0986, -0.0267],
        [ 0.0000, -0.1836,  0.5586,  0.0192,  0.2441, -0.2695, -0.2871, -0.5156,  0.2969, -0.4043, -0.1650,  0.3047, -0.1895,  0.1787,  0.0703],
        [ 0.0000,  0.1592, -0.7266, -0.3516,  0.3008,  0.0781,  0.0031, -0.3086,  0.0265,  0.1768, -0.3379,  0.0771,  0.2734, -0.0151,  0.1660],
        [ 0.0000, -0.2910,  0.2139, -0.3828,  0.0057, -0.1455,  0.0542, -0.5273,  0.0947, -0.2754, -0.1030,  0.0293, -0.0850, -0.0474, -0.1631]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4736],
        [0.3242],
        [0.2453],
        [0.1947],
        [0.1595],
        [0.1337],
        [0.1213],
        [0.1059],
        [0.0979],
        [0.0826],
        [0.0774],
        [0.0756],
        [0.0698],
        [0.0662]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4727, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3984, 0.3281, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3262, 0.2754, 0.2227, 0.1748, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.2207, 0.2891, 0.1367, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1787, 0.2012, 0.1582, 0.1094, 0.2051, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1426, 0.1396, 0.1152, 0.1758, 0.1680, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.1113, 0.2412, 0.0933, 0.0811, 0.0610, 0.0918, 0.2139, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.0879, 0.0981, 0.0854, 0.1543, 0.0825, 0.1699, 0.1167, 0.0991, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0874, 0.0996, 0.0557, 0.0620, 0.0859, 0.1328, 0.1406, 0.0728, 0.1128, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0942, 0.1289, 0.0991, 0.0510, 0.1416, 0.0859, 0.0796, 0.0554, 0.0869, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.0737, 0.1025, 0.1309, 0.0728, 0.0645, 0.1377, 0.0742, 0.0625, 0.0481, 0.0605, 0.0942, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0688, 0.1250, 0.1069, 0.1011, 0.0698, 0.0815, 0.0518, 0.0840, 0.0430, 0.0608, 0.0786, 0.0542, 0.0000, 0.0000],
        [0.0732, 0.0776, 0.0513, 0.0767, 0.0845, 0.0742, 0.0879, 0.0432, 0.0698, 0.0957, 0.0605, 0.0586, 0.0742, 0.0728, 0.0000],
        [0.0688, 0.0703, 0.1025, 0.0728, 0.0913, 0.0747, 0.0757, 0.0535, 0.0630, 0.0618, 0.0479, 0.0559, 0.0623, 0.0469, 0.0530]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0010, -0.0006, -0.0314,  ...,  0.0342,  0.0106, -0.0422],
        [ 0.0011,  0.0216,  0.0306,  ..., -0.0009, -0.0028,  0.0208],
        [ 0.0094, -0.0287, -0.0404,  ...,  0.0233,  0.0153, -0.0345],
        ...,
        [-0.0035, -0.0001,  0.0056,  ...,  0.0004,  0.0016,  0.0453],
        [ 0.0189,  0.0259, -0.0191,  ...,  0.0226,  0.0022,  0.0020],
        [-0.0156, -0.0059, -0.0054,  ...,  0.0267, -0.0334, -0.0051]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4922, -0.0021,  0.6562, -0.6445, -0.4238,  0.1338,  0.9336, -0.0659,  0.4844,  0.0205, -0.1069,  0.9219,  0.9258, -0.6172, -0.6953, -0.3828,  0.5469,  0.1650, -0.7461,  0.1680, -0.3379, -0.4199, -0.2969,  0.0089,  0.4023,  0.8086, -0.8672,  0.5195,  0.4004,  0.5508,  0.3340,  0.7578,
        -0.7305,  0.7305, -0.2275, -0.2002, -0.3711, -1.1094,  0.2891, -0.4668,  0.4688,  0.4785,  0.2773,  1.1406, -0.5312, -0.4727,  0.6445, -0.5586,  0.2354, -1.3984,  0.6250, -0.2988, -0.1562, -0.2793,  1.0859,  0.7617,  0.1562, -0.0352,  0.7383,  1.3750,  0.2354,  0.1709, -0.2832,  1.0391],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0006, -0.0098,  0.0167,  ..., -0.0189, -0.0090,  0.0298],
        [ 0.0246,  0.0317, -0.0720,  ..., -0.0038, -0.0067, -0.0170],
        [ 0.0334, -0.0154,  0.0325,  ..., -0.0286, -0.0345, -0.0405],
        ...,
        [-0.0176,  0.0090,  0.0184,  ..., -0.0063,  0.0136,  0.0029],
        [-0.0562, -0.0012, -0.0348,  ..., -0.0112, -0.0124,  0.0084],
        [-0.0196,  0.0003, -0.0041,  ...,  0.0064,  0.0032, -0.0024]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0051,  0.0396, -0.3691,  0.7500, -0.1270, -0.6680, -0.0026,  0.3633,  0.3848, -0.1709, -0.2432, -0.9297, -0.3262,  0.9844, -1.1875, -0.0137, -0.2520, -0.2695, -0.2539,  1.1562, -0.3418, -0.1377, -1.0000, -0.7109, -0.3965,  0.2812, -0.8633,  0.2334,  0.0101,  0.3965,  0.6523, -0.0767,
         0.0820, -0.3066,  0.1699, -0.4824, -0.7695,  1.3828, -0.4258,  0.0420,  0.2539,  0.6641, -0.6016,  0.1396, -0.4668, -0.2354,  0.1387,  0.2949,  0.4590,  0.3418,  0.3496,  1.1016, -0.1543, -0.3906, -0.9219,  0.0150, -1.0625, -0.2676, -0.4551,  0.1377, -0.2441,  0.1914,  0.0457,  0.0452],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1089,  0.1240,  0.5742,  0.0364, -0.1455,  0.7812,  0.1719,  0.2197,  0.1406,  0.5820,  0.0574, -0.2393,  0.3145, -0.5703],
        [ 0.0000, -0.1973, -0.3770, -0.5859, -0.1973, -0.2715,  0.1982,  0.3281, -0.3008, -0.4277, -0.4902,  0.0476, -0.0234,  0.2363,  0.0232],
        [ 0.0000, -0.1699, -0.3809, -0.6289, -0.4375, -0.2949,  0.0718,  0.2891, -0.2207,  0.8711,  0.0275,  0.0121,  0.8828,  0.5117, -0.3789],
        [ 0.0000,  0.1973,  0.4668, -0.2793, -0.0439, -0.5000,  0.4551,  0.0184,  0.2412, -0.1138, -0.2539,  0.1235,  0.1582,  0.0840,  0.2715],
        [ 0.0000,  0.1895,  0.3086,  0.0698, -0.3008,  0.3281, -0.1367, -0.0247, -0.3516,  0.3828, -0.1099, -0.1147,  0.1406, -0.1099, -0.5195],
        [ 0.0000,  0.0459,  0.0247, -0.1660,  0.2578,  0.2119, -0.0981, -0.3301,  0.3652, -0.2871, -0.4336, -0.3984,  0.1494,  0.1641,  0.2314],
        [ 0.0000,  0.0398,  0.8125, -0.1377, -0.2812, -0.5625, -0.1553,  0.6914,  0.1416, -0.2119, -0.1553,  0.1611,  0.0374,  0.2617, -0.2637],
        [ 0.0000, -0.1836, -0.0757, -0.2139,  0.3730, -0.2520,  0.4746,  0.0986, -0.0645,  0.4297,  0.1167,  0.1953,  0.1543, -0.0221, -0.0791],
        [ 0.0000,  0.1260, -0.4551, -0.3438, -0.0176,  0.4160,  0.4707, -0.1885,  0.2500,  0.5430,  0.2832, -0.1504,  0.2559,  0.3750, -0.0233],
        [ 0.0000,  0.2637,  0.5703,  0.3125, -0.3535,  0.6680,  0.1709,  0.0933, -0.2695,  0.1826,  0.3613,  0.0806, -0.4375,  0.3457, -0.3809],
        [ 0.0000, -0.0615,  0.2695,  0.5117, -0.0732, -0.1934,  0.5625, -0.0559, -0.2256, -0.4863, -0.2578,  0.1865,  0.1484,  0.2119, -0.2969],
        [ 0.0000, -0.0850,  0.5117,  0.3574,  0.2988, -0.0718,  0.0859, -0.3691,  0.1177, -0.5547, -0.2100,  0.0486, -0.3223, -0.0371, -0.1377],
        [ 0.0000,  0.0586, -0.3574,  0.0430,  0.1396,  0.0090,  0.1836, -0.5312, -0.0505,  0.2656, -0.1934, -0.2256,  0.0124, -0.0073, -0.5273],
        [ 0.0000,  0.0229,  0.4023,  0.0547,  0.2832,  0.0854,  0.0991, -0.2520, -0.0884, -0.1050, -0.3613, -0.2051, -0.0962, -0.3828, -0.2578]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4728],
        [0.3255],
        [0.2428],
        [0.1932],
        [0.1575],
        [0.1349],
        [0.1226],
        [0.1086],
        [0.0987],
        [0.0827],
        [0.0797],
        [0.0782],
        [0.0730],
        [0.0681]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4570, 0.5430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4043, 0.3223, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.2773, 0.2070, 0.2041, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.2266, 0.2676, 0.1602, 0.1748, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.1631, 0.2070, 0.1826, 0.1196, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.1475, 0.1250, 0.1079, 0.1885, 0.1562, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.1064, 0.2129, 0.1055, 0.0967, 0.0762, 0.0928, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.0684, 0.1084, 0.1196, 0.1240, 0.0962, 0.1455, 0.1289, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0874, 0.1050, 0.0618, 0.0737, 0.0874, 0.1660, 0.1128, 0.0630, 0.1001, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.0825, 0.1206, 0.1079, 0.0574, 0.1069, 0.1021, 0.0850, 0.0544, 0.0845, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.0669, 0.0933, 0.1426, 0.0889, 0.0737, 0.1133, 0.0747, 0.0596, 0.0530, 0.0654, 0.0918, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0684, 0.1099, 0.1279, 0.0977, 0.0781, 0.0874, 0.0579, 0.0742, 0.0464, 0.0579, 0.0649, 0.0549, 0.0000, 0.0000],
        [0.0786, 0.0708, 0.0630, 0.1167, 0.0762, 0.0767, 0.0786, 0.0466, 0.0581, 0.0811, 0.0618, 0.0608, 0.0693, 0.0613, 0.0000],
        [0.0693, 0.0771, 0.1074, 0.0918, 0.0820, 0.0859, 0.0732, 0.0618, 0.0442, 0.0505, 0.0432, 0.0525, 0.0557, 0.0461, 0.0588]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0010, -0.0006, -0.0314,  ...,  0.0342,  0.0106, -0.0422],
        [ 0.0011,  0.0216,  0.0306,  ..., -0.0009, -0.0028,  0.0208],
        [ 0.0094, -0.0287, -0.0404,  ...,  0.0233,  0.0153, -0.0345],
        ...,
        [-0.0035, -0.0001,  0.0056,  ...,  0.0004,  0.0016,  0.0453],
        [ 0.0189,  0.0259, -0.0191,  ...,  0.0226,  0.0022,  0.0020],
        [-0.0156, -0.0059, -0.0054,  ...,  0.0267, -0.0334, -0.0051]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2656,  0.2676,  0.5000, -0.9688, -0.8906, -0.2217,  0.7266,  0.0026,  0.0654, -0.0977, -0.2520,  0.7461,  0.9844, -0.7344, -0.8008, -0.4316,  0.6133,  0.5117, -0.8477,  0.6406, -0.4609, -0.6172, -0.4082,  0.2852,  0.7109,  0.9414, -0.7266, -0.2227,  0.4941,  0.5430,  0.4980,  0.1172,
        -0.3457,  0.8242, -0.1934,  0.2188, -0.5742, -1.3516,  0.1235, -0.8359,  0.4375,  0.8516, -0.1152,  1.0156, -0.5078, -0.4492,  0.5547, -0.6836, -0.0635, -1.0234,  0.6758, -0.3398, -0.2637, -0.4766,  0.6406,  0.5820,  0.2637,  0.1719,  0.6719,  1.2578,  0.4414,  0.1660,  0.2559,  0.8945],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0006, -0.0098,  0.0167,  ..., -0.0189, -0.0090,  0.0298],
        [ 0.0246,  0.0317, -0.0720,  ..., -0.0038, -0.0067, -0.0170],
        [ 0.0334, -0.0154,  0.0325,  ..., -0.0286, -0.0345, -0.0405],
        ...,
        [-0.0176,  0.0090,  0.0184,  ..., -0.0063,  0.0136,  0.0029],
        [-0.0562, -0.0012, -0.0348,  ..., -0.0112, -0.0124,  0.0084],
        [-0.0196,  0.0003, -0.0041,  ...,  0.0064,  0.0032, -0.0024]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4004, -0.2344, -0.2832,  0.8906, -0.3652, -0.9805,  0.3359,  0.4844,  0.3359, -0.1875, -0.3770, -0.7031, -0.1299,  0.9688, -0.7617, -0.1152, -0.4668, -0.5156, -0.6914,  1.0547,  0.0547, -0.3438, -0.7500, -0.8359, -0.8594,  0.1982, -1.1172,  0.2969,  0.2559,  0.2891,  0.6172,  0.0107,
        -0.0723, -0.1143,  0.0693, -0.7227, -0.7930,  1.3984, -0.4219,  0.3789,  0.4102,  0.4316, -0.3828,  0.0474, -0.4375, -0.9219,  0.0491,  0.1729,  0.5430,  0.2754,  0.5469,  0.6406, -0.2363, -0.1875, -1.3828, -0.1348, -1.1094, -0.4863, -0.6680,  0.1836, -0.3594, -0.1963, -0.1123,  0.4492],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1738,  0.1367,  0.5977,  0.0898,  0.0410,  0.7188,  0.2256,  0.1523,  0.1270,  0.6367, -0.0486, -0.2490,  0.2256, -0.5117],
        [ 0.0000, -0.2295, -0.3906, -0.5898, -0.2344, -0.3164,  0.2207,  0.2168, -0.3184, -0.3418, -0.2432, -0.2734, -0.0986,  0.1055, -0.1895],
        [ 0.0000, -0.1196, -0.4102, -0.4277, -0.4609, -0.1001,  0.1084,  0.1138, -0.0962,  0.8047,  0.1108,  0.1289,  0.8789,  0.5039, -0.3691],
        [ 0.0000,  0.2891,  0.4570, -0.0615,  0.0266, -0.3379,  0.5312,  0.0461,  0.2539,  0.0101, -0.1128, -0.0479,  0.0732,  0.1826,  0.3105],
        [ 0.0000,  0.1191,  0.3594,  0.2305, -0.1885,  0.2393, -0.0160, -0.1191, -0.5664,  0.4043, -0.0698, -0.0693,  0.1396, -0.3184, -0.4473],
        [ 0.0000,  0.0053, -0.1562, -0.3066,  0.2539,  0.0645, -0.1357, -0.3457,  0.2520, -0.1660, -0.5156, -0.1924,  0.1445,  0.2441,  0.3398],
        [ 0.0000, -0.1060,  0.5859, -0.1157, -0.2041, -0.4395, -0.2471,  0.4766, -0.0413, -0.2520, -0.2617,  0.1807, -0.1377,  0.0435, -0.4336],
        [ 0.0000, -0.4395,  0.0234,  0.1211,  0.1592, -0.0967,  0.3203,  0.1953, -0.0217,  0.1147,  0.1299,  0.2305,  0.2598,  0.0640, -0.3242],
        [ 0.0000,  0.1816, -0.3496, -0.1699, -0.0014,  0.6406,  0.2520, -0.3301,  0.1338,  0.4805,  0.5273, -0.2139,  0.1475,  0.2021, -0.0820],
        [ 0.0000,  0.0547,  0.4375,  0.3242, -0.3066,  0.3145,  0.2676,  0.0835, -0.3613,  0.0806,  0.4375,  0.3516,  0.0403,  0.2617, -0.6289],
        [ 0.0000, -0.1494,  0.1797,  0.6016,  0.1289, -0.0564,  0.3730, -0.0449, -0.2715, -0.3848, -0.1738,  0.1611,  0.1699,  0.3496, -0.3301],
        [ 0.0000, -0.0864,  0.3867,  0.5391,  0.2715,  0.0447,  0.1582, -0.2559, -0.0036, -0.4746, -0.2520, -0.1367, -0.3066, -0.1299, -0.4668],
        [ 0.0000, -0.1030, -0.2217,  0.3965, -0.0280, -0.0227,  0.0010, -0.5234, -0.3027,  0.0306, -0.2412, -0.2578, -0.1230, -0.2471, -0.8750],
        [ 0.0000,  0.1099,  0.4395,  0.2812,  0.1699,  0.2148,  0.0557, -0.1152, -0.4531, -0.3145, -0.4727, -0.2773, -0.2207, -0.4062, -0.1650]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4731],
        [0.3280],
        [0.2415],
        [0.1932],
        [0.1569],
        [0.1376],
        [0.1270],
        [0.1146],
        [0.1011],
        [0.0873],
        [0.0826],
        [0.0808],
        [0.0777],
        [0.0708]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4141, 0.5859, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4219, 0.3047, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.2480, 0.1318, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.1719, 0.1533, 0.3672, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.1416, 0.1748, 0.1787, 0.1924, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.1318, 0.1001, 0.1738, 0.1670, 0.1226, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.0991, 0.1270, 0.1533, 0.1426, 0.1045, 0.1104, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.0713, 0.0996, 0.1699, 0.1060, 0.1089, 0.0991, 0.1416, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.0835, 0.0884, 0.1504, 0.1196, 0.1089, 0.0996, 0.0654, 0.1006, 0.0625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1108, 0.0723, 0.0952, 0.1157, 0.1143, 0.0933, 0.0977, 0.0884, 0.0728, 0.0659, 0.0728, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.0674, 0.0603, 0.1089, 0.1250, 0.0850, 0.0718, 0.0752, 0.0688, 0.0767, 0.0898, 0.0869, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.0674, 0.1318, 0.1035, 0.0923, 0.0732, 0.0796, 0.0723, 0.0640, 0.0540, 0.0471, 0.0591, 0.0493, 0.0000, 0.0000],
        [0.0898, 0.0559, 0.0747, 0.1099, 0.1177, 0.0723, 0.0688, 0.0732, 0.0537, 0.0569, 0.0569, 0.0669, 0.0564, 0.0466, 0.0000],
        [0.0972, 0.0791, 0.0864, 0.0830, 0.0630, 0.0747, 0.0737, 0.0579, 0.0679, 0.0496, 0.0493, 0.0654, 0.0452, 0.0513, 0.0566]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0010, -0.0006, -0.0314,  ...,  0.0342,  0.0106, -0.0422],
        [ 0.0011,  0.0216,  0.0306,  ..., -0.0009, -0.0028,  0.0208],
        [ 0.0094, -0.0287, -0.0404,  ...,  0.0233,  0.0153, -0.0345],
        ...,
        [-0.0035, -0.0001,  0.0056,  ...,  0.0004,  0.0016,  0.0453],
        [ 0.0189,  0.0259, -0.0191,  ...,  0.0226,  0.0022,  0.0020],
        [-0.0156, -0.0059, -0.0054,  ...,  0.0267, -0.0334, -0.0051]], device='cuda:0', requires_grad=True)
K: tensor([-0.8008, -0.8516,  0.6172, -0.2412, -0.6875, -0.5078, -0.4434, -0.2695,  0.1963, -0.9766,  0.1680, -0.0339,  0.0967, -0.5781,  0.5273,  0.2520,  0.3398,  0.1592,  0.4941,  0.6719, -0.8516, -0.5469,  0.7148,  0.0237,  0.6016,  0.8594, -0.4414,  0.5078,  0.4766,  0.7969, -0.2451, -0.9883,
         0.6836, -0.0806, -0.2090,  0.4883, -0.3047, -0.0889, -0.9062,  0.0583,  0.2754, -0.6562,  0.1299,  0.0918,  0.0040,  0.5820, -0.1797, -0.3418,  0.1562, -0.4082,  0.1816, -0.5273,  0.6953, -0.9844, -0.5156, -0.5820, -0.4336,  1.0859,  0.5391,  0.9062, -0.8398,  0.0947,  1.1484,  0.0938],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0006, -0.0098,  0.0167,  ..., -0.0189, -0.0090,  0.0298],
        [ 0.0246,  0.0317, -0.0720,  ..., -0.0038, -0.0067, -0.0170],
        [ 0.0334, -0.0154,  0.0325,  ..., -0.0286, -0.0345, -0.0405],
        ...,
        [-0.0176,  0.0090,  0.0184,  ..., -0.0063,  0.0136,  0.0029],
        [-0.0562, -0.0012, -0.0348,  ..., -0.0112, -0.0124,  0.0084],
        [-0.0196,  0.0003, -0.0041,  ...,  0.0064,  0.0032, -0.0024]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.2344,      0.2275,     -0.2129,     -0.0640,      0.7852,     -0.2930,      0.2051,      0.2656,      0.8672,     -0.3320,     -0.3105,      0.7969,      0.2480,      0.5859,     -0.2891,      0.2002,      0.0525,      0.3672,     -0.1206,      0.5195,      0.2715,      0.4590,
            -0.9453,      0.1855,     -1.3047,     -0.1035,      0.0645,     -0.2832,      0.6523,     -0.9062,     -0.3789,      0.1934,      0.1943,     -1.1484,      0.4785,      0.0571,     -0.0430,     -0.1001,     -0.0791,      0.8281,     -0.2383,     -0.0442,      0.4980,      0.4844,
             0.0337,     -0.0002,     -0.5820,      0.2480,     -0.2617,     -0.0908,      0.0894,      0.5703,     -0.1670,      0.4043,     -0.4082,      0.7305,     -0.4453,     -0.0952,      0.2969,     -0.1748,     -0.0309,     -0.9297,     -0.6094,      0.0084], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3496,  0.0474,  0.5312,  0.1079,  0.3457,  0.2598, -0.0118, -0.0623,  0.1768,  0.4336,  0.0645, -0.2002, -0.1079,  0.2471],
        [ 0.0000, -0.3301, -0.4375, -0.4434, -0.2559, -0.0791, -0.0815,  0.1040, -0.5977, -0.2715, -0.1934, -0.3320, -0.1270, -0.1309, -0.0427],
        [ 0.0000, -0.1426, -0.7734,  0.1562, -0.2812,  0.1143,  0.1299, -0.3301, -0.1465,  0.0312,  0.3750,  0.2197, -0.1650,  0.0742, -0.0018],
        [ 0.0000,  0.1108, -0.0049,  0.8711, -0.0024,  0.2637, -0.0148,  0.1885,  0.0374,  0.4785,  0.2256,  0.0991, -0.1553, -0.0664,  0.2188],
        [ 0.0000, -0.3027, -0.0913, -0.0674,  0.0033, -0.4590, -0.2578,  0.0143, -0.4082, -0.7578, -0.2695, -0.3066, -0.3926, -0.3750, -0.4082],
        [ 0.0000, -0.3379, -0.6094, -0.0610, -0.0972, -0.4062, -0.4277, -0.5117, -0.3242, -0.5781, -0.5039, -0.2266, -0.5508, -0.5469, -0.5781],
        [ 0.0000, -0.5195, -0.2695, -0.0820, -0.1553, -0.4668, -0.4121, -0.5586, -1.0000, -0.7070, -0.7305, -0.4512, -0.8633, -0.9531, -0.7422],
        [ 0.0000, -0.6328, -0.2969,  0.2393, -0.2354, -0.2100, -0.3008,  0.0542, -0.6719, -0.3945, -0.4141, -0.3262, -0.5625, -0.6094, -0.3867],
        [ 0.0000, -0.3789, -0.3184,  0.2148, -0.0147, -0.1118, -0.1992, -0.6211, -0.1914, -0.6641, -0.3066, -0.2080, -0.7383, -0.5938, -0.3594],
        [ 0.0000, -0.4297, -0.1543,  0.0432,  0.0299, -0.1729, -0.1270, -0.2256, -0.4219, -0.5234, -0.4219, -0.2246, -0.5859, -0.4551, -0.4004],
        [ 0.0000, -0.2139, -0.3281,  0.2617,  0.4004,  0.0119, -0.1523, -0.1074, -0.1934, -0.0859,  0.0693,  0.0376, -0.2539, -0.2754, -0.0732],
        [ 0.0000, -0.4707,  0.2021, -0.0393, -0.1543, -0.3828, -0.3008, -0.3945, -0.5156, -0.6914, -0.8242, -0.5977, -0.7812, -0.8594, -0.6641],
        [ 0.0000, -0.4766, -0.1895,  0.2012,  0.2676, -0.2188, -0.2695, -0.2061, -0.5156, -0.4590, -0.4590, -0.2949, -0.4668, -0.6602, -0.3906],
        [ 0.0000, -0.2080, -0.1162, -0.1572, -0.4297, -0.2637, -0.2773, -0.5195, -0.3594, -0.6719, -0.6758, -0.3926, -0.7695, -0.6406, -0.5391]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5024],
        [0.3646],
        [0.2721],
        [0.2144],
        [0.1815],
        [0.1835],
        [0.1567],
        [0.1449],
        [0.1296],
        [0.1194],
        [0.1101],
        [0.0910],
        [0.0916],
        [0.0906]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4160, 0.5820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4219, 0.3066, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.2441, 0.1309, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.1689, 0.1514, 0.3691, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1943, 0.1426, 0.1709, 0.1738, 0.1943, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.1309, 0.1030, 0.1748, 0.1611, 0.1270, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1729, 0.0996, 0.1270, 0.1533, 0.1406, 0.1016, 0.1123, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.0762, 0.1001, 0.1621, 0.1128, 0.1099, 0.1025, 0.1328, 0.0674, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1245, 0.0845, 0.0889, 0.1514, 0.1201, 0.1035, 0.1021, 0.0654, 0.0952, 0.0645, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.0737, 0.0957, 0.1104, 0.1221, 0.0918, 0.0967, 0.0850, 0.0723, 0.0693, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.0674, 0.0601, 0.1099, 0.1260, 0.0859, 0.0747, 0.0723, 0.0664, 0.0811, 0.0854, 0.0840, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.0698, 0.1289, 0.0996, 0.1006, 0.0718, 0.0781, 0.0693, 0.0615, 0.0549, 0.0474, 0.0593, 0.0510, 0.0000, 0.0000],
        [0.0884, 0.0588, 0.0757, 0.1035, 0.1211, 0.0737, 0.0684, 0.0688, 0.0530, 0.0630, 0.0574, 0.0669, 0.0535, 0.0486, 0.0000],
        [0.0952, 0.0776, 0.0850, 0.0806, 0.0693, 0.0718, 0.0723, 0.0549, 0.0654, 0.0525, 0.0500, 0.0659, 0.0452, 0.0540, 0.0598]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0010, -0.0006, -0.0314,  ...,  0.0342,  0.0106, -0.0422],
        [ 0.0011,  0.0216,  0.0306,  ..., -0.0009, -0.0028,  0.0208],
        [ 0.0094, -0.0287, -0.0404,  ...,  0.0233,  0.0153, -0.0345],
        ...,
        [-0.0035, -0.0001,  0.0056,  ...,  0.0004,  0.0016,  0.0453],
        [ 0.0189,  0.0259, -0.0191,  ...,  0.0226,  0.0022,  0.0020],
        [-0.0156, -0.0059, -0.0054,  ...,  0.0267, -0.0334, -0.0051]], device='cuda:0', requires_grad=True)
K: tensor([-0.8594, -0.8086,  0.8203, -0.2041, -0.6289, -0.3652, -0.5039, -0.4238,  0.1377, -0.9961,  0.3184,  0.0801,  0.0649, -0.4863,  0.6406,  0.3164,  0.3691,  0.0664,  0.4883,  0.6133, -0.8828, -0.5508,  0.8828, -0.1147,  0.5977,  0.7891, -0.5352,  0.6484,  0.4766,  0.8164, -0.1260, -0.8359,
         0.6992, -0.2246, -0.2891,  0.4512, -0.3359,  0.1260, -1.0156,  0.2051,  0.2109, -0.6562,  0.1006,  0.0859,  0.1245,  0.6211, -0.1602, -0.3281,  0.1660, -0.3066,  0.2373, -0.4688,  0.6758, -0.8555, -0.4082, -0.4941, -0.4648,  1.0156,  0.5469,  0.6719, -0.9219,  0.0405,  1.0547,  0.0645],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0006, -0.0098,  0.0167,  ..., -0.0189, -0.0090,  0.0298],
        [ 0.0246,  0.0317, -0.0720,  ..., -0.0038, -0.0067, -0.0170],
        [ 0.0334, -0.0154,  0.0325,  ..., -0.0286, -0.0345, -0.0405],
        ...,
        [-0.0176,  0.0090,  0.0184,  ..., -0.0063,  0.0136,  0.0029],
        [-0.0562, -0.0012, -0.0348,  ..., -0.0112, -0.0124,  0.0084],
        [-0.0196,  0.0003, -0.0041,  ...,  0.0064,  0.0032, -0.0024]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1924,  0.2520, -0.3184, -0.0227,  0.8750, -0.2500,  0.1768,  0.1992,  0.7891, -0.3438, -0.2305,  0.8320,  0.2383,  0.4316, -0.2832,  0.2188,  0.0659,  0.3477,  0.0251,  0.5508,  0.2109,  0.4688, -0.9727,  0.2217, -1.2969, -0.1055,  0.1709, -0.2754,  0.7070, -0.8320, -0.4395,  0.2334,
         0.1729, -1.1719,  0.5508,  0.1191,  0.0137, -0.2148, -0.1514,  0.9141, -0.3027, -0.0544,  0.5117,  0.5820,  0.0165,  0.1875, -0.5664,  0.3379, -0.2754, -0.1523,  0.0679,  0.5508, -0.0405,  0.3828, -0.2559,  0.7695, -0.3652, -0.0067,  0.3691, -0.1240, -0.0898, -0.8711, -0.5664, -0.0143],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.3359,      0.0286,      0.5039,      0.0771,      0.3281,      0.2598,     -0.0471,     -0.0583,      0.1572,      0.4082,      0.0801,     -0.2178,     -0.1289,      0.2354],
        [     0.0000,     -0.3164,     -0.4434,     -0.4258,     -0.2520,     -0.0913,     -0.1025,      0.0796,     -0.5977,     -0.2441,     -0.2080,     -0.3223,     -0.1533,     -0.1738,     -0.0292],
        [     0.0000,     -0.1797,     -0.8047,      0.1357,     -0.2676,      0.0791,      0.1660,     -0.2969,     -0.1484,     -0.0325,      0.2852,      0.1348,     -0.2109,     -0.0080,     -0.0046],
        [     0.0000,      0.0762,     -0.0330,      0.8594,     -0.0032,      0.2773,     -0.0112,      0.1387,      0.0106,      0.4746,      0.2148,      0.1060,     -0.1875,     -0.0957,      0.1807],
        [     0.0000,     -0.3105,     -0.1289,     -0.1113,      0.0002,     -0.4609,     -0.2637,      0.0215,     -0.3770,     -0.7539,     -0.2676,     -0.3008,     -0.3965,     -0.3770,     -0.3438],
        [     0.0000,     -0.3535,     -0.5898,     -0.0618,     -0.1406,     -0.3828,     -0.4473,     -0.5234,     -0.4082,     -0.6406,     -0.5586,     -0.3477,     -0.6133,     -0.6172,     -0.5859],
        [     0.0000,     -0.5508,     -0.3066,     -0.1226,     -0.2100,     -0.5312,     -0.4336,     -0.6250,     -1.0469,     -0.7773,     -0.7852,     -0.6055,     -0.9062,     -0.9805,     -0.7891],
        [     0.0000,     -0.5820,     -0.3086,      0.1729,     -0.1904,     -0.2168,     -0.2871,     -0.0267,     -0.7031,     -0.4023,     -0.4238,     -0.3340,     -0.5664,     -0.5977,     -0.3613],
        [     0.0000,     -0.3887,     -0.3340,      0.1934,     -0.0347,     -0.1816,     -0.1963,     -0.6406,     -0.2656,     -0.6602,     -0.3652,     -0.2539,     -0.7812,     -0.5859,     -0.3711],
        [     0.0000,     -0.4121,     -0.1543,     -0.0094,      0.0908,     -0.1953,     -0.1445,     -0.2734,     -0.4355,     -0.4766,     -0.4375,     -0.2637,     -0.6289,     -0.4453,     -0.3672],
        [     0.0000,     -0.2441,     -0.3555,      0.2471,      0.3867,      0.0031,     -0.1367,     -0.1709,     -0.2598,     -0.0554,     -0.0069,     -0.0204,     -0.3301,     -0.3359,     -0.0742],
        [     0.0000,     -0.4414,      0.1680,     -0.0874,     -0.0796,     -0.4160,     -0.3320,     -0.4492,     -0.5703,     -0.6836,     -0.8281,     -0.6055,     -0.7578,     -0.7930,     -0.6562],
        [     0.0000,     -0.4062,     -0.1533,      0.1592,      0.3184,     -0.1807,     -0.2559,     -0.2480,     -0.5117,     -0.3359,     -0.4277,     -0.2793,     -0.4980,     -0.5938,     -0.3281],
        [     0.0000,     -0.2031,     -0.1128,     -0.1660,     -0.3164,     -0.2832,     -0.2773,     -0.5508,     -0.3750,     -0.5977,     -0.6445,     -0.3711,     -0.7461,     -0.5703,     -0.4648]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5078],
        [0.3682],
        [0.2782],
        [0.2192],
        [0.1855],
        [0.1883],
        [0.1585],
        [0.1462],
        [0.1320],
        [0.1195],
        [0.1111],
        [0.0902],
        [0.0906],
        [0.0883]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( proclamation:0.0002slave:0.0003 copyright:0.0002 true:0.0002 pharmaceutical:0.0002slave:0.0002 hypothesis:0.0002 hypothesis:0.0002)
 hypothesis
------
		(slave:0.0003 copyright:0.0002 true:0.0002 pharmaceutical:0.0002slave:0.0002 hypothesis:0.0002 hypothesis:0.0002 ISS:0.0002)
 ISS hypothesis formatting conspiring� conspiringmulti��multimultimultimultimulti conspiring
@ 50 train 9.9412 , allloss: 20.9327, dt: 1530.26ms, fracRes: 0.0076, norm(attn): 0.0659, norm(output): 0.0547, norm(x): 0.0583, norm(y): 0.9981, norm:37.3967, tok/sec: 85653.60, flops:33.37, batch-reuse:1
@ 51 train 9.9506 , allloss: 21.0250, dt: 1119.75ms, fracRes: 0.0076, norm(attn): 0.0664, norm(output): 0.0547, norm(x): 0.0583, norm(y): 0.9981, norm:37.9376, tok/sec: 117055.00, flops:45.60, batch-reuse:1
@ 52 train 9.8968 , allloss: 20.9797, dt: 1151.53ms, fracRes: 0.0076, norm(attn): 0.0669, norm(output): 0.0544, norm(x): 0.0583, norm(y): 0.9981, norm:38.3072, tok/sec: 113824.12, flops:44.35, batch-reuse:1
@ 53 train 9.9097 , allloss: 20.9414, dt: 1103.76ms, fracRes: 0.0077, norm(attn): 0.0693, norm(output): 0.0544, norm(x): 0.0583, norm(y): 0.9981, norm:38.7201, tok/sec: 118750.30, flops:46.27, batch-reuse:1
@ 54 train 9.9044 , allloss: 20.8754, dt: 1128.59ms, fracRes: 0.0077, norm(attn): 0.0698, norm(output): 0.0544, norm(x): 0.0583, norm(y): 0.9981, norm:39.0163, tok/sec: 116137.41, flops:45.25, batch-reuse:1
@ 55 train 9.9276 , allloss: 20.8398, dt: 1101.85ms, fracRes: 0.0077, norm(attn): 0.0698, norm(output): 0.0544, norm(x): 0.0582, norm(y): 0.9980, norm:38.6445, tok/sec: 118955.94, flops:46.35, batch-reuse:1
@ 56 train 9.8535 , allloss: 20.6867, dt: 1131.56ms, fracRes: 0.0077, norm(attn): 0.0703, norm(output): 0.0544, norm(x): 0.0580, norm(y): 0.9980, norm:39.1331, tok/sec: 115833.12, flops:45.13, batch-reuse:1
@ 57 train 9.8123 , allloss: 20.5396, dt: 1123.21ms, fracRes: 0.0078, norm(attn): 0.0708, norm(output): 0.0544, norm(x): 0.0579, norm(y): 0.9980, norm:39.2910, tok/sec: 116694.25, flops:45.46, batch-reuse:1
@ 58 train 9.8212 , allloss: 20.4929, dt: 1121.58ms, fracRes: 0.0078, norm(attn): 0.0713, norm(output): 0.0540, norm(x): 0.0578, norm(y): 0.9979, norm:38.6515, tok/sec: 116863.97, flops:45.53, batch-reuse:1
@ 59 train 9.7444 , allloss: 20.4690, dt: 1128.20ms, fracRes: 0.0079, norm(attn): 0.0723, norm(output): 0.0537, norm(x): 0.0576, norm(y): 0.9979, norm:38.3443, tok/sec: 116178.22, flops:45.26, batch-reuse:1
@ 60 train 9.7518 , allloss: 20.5110, dt: 1119.83ms, fracRes: 0.0079, norm(attn): 0.0728, norm(output): 0.0537, norm(x): 0.0575, norm(y): 0.9979, norm:38.0223, tok/sec: 117045.85, flops:45.60, batch-reuse:1
@ 61 train 9.7325 , allloss: 20.4546, dt: 1115.06ms, fracRes: 0.0080, norm(attn): 0.0732, norm(output): 0.0537, norm(x): 0.0574, norm(y): 0.9978, norm:36.8692, tok/sec: 117546.93, flops:45.80, batch-reuse:1
@ 62 train 9.6996 , allloss: 20.4127, dt: 1121.84ms, fracRes: 0.0081, norm(attn): 0.0747, norm(output): 0.0537, norm(x): 0.0573, norm(y): 0.9978, norm:37.8664, tok/sec: 116836.92, flops:45.52, batch-reuse:1
@ 63 train 9.7146 , allloss: 20.4698, dt: 1131.11ms, fracRes: 0.0082, norm(attn): 0.0752, norm(output): 0.0537, norm(x): 0.0571, norm(y): 0.9978, norm:37.7688, tok/sec: 115878.68, flops:45.15, batch-reuse:1
@ 64 train 9.6914 , allloss: 20.4839, dt: 1124.51ms, fracRes: 0.0083, norm(attn): 0.0752, norm(output): 0.0518, norm(x): 0.0570, norm(y): 0.9977, norm:37.2276, tok/sec: 116558.81, flops:45.41, batch-reuse:1
@ 65 train 9.6910 , allloss: 20.5090, dt: 1121.89ms, fracRes: 0.0084, norm(attn): 0.0771, norm(output): 0.0518, norm(x): 0.0569, norm(y): 0.9977, norm:38.7056, tok/sec: 116830.96, flops:45.52, batch-reuse:1
@ 66 train 9.6897 , allloss: 20.3321, dt: 1122.64ms, fracRes: 0.0085, norm(attn): 0.0776, norm(output): 0.0518, norm(x): 0.0571, norm(y): 0.9977, norm:49.5188, tok/sec: 116753.20, flops:45.49, batch-reuse:1
@ 67 train 9.6539 , allloss: 20.4486, dt: 1142.42ms, fracRes: 0.0086, norm(attn): 0.0781, norm(output): 0.0515, norm(x): 0.0566, norm(y): 0.9976, norm:54.5315, tok/sec: 114732.14, flops:44.70, batch-reuse:1
@ 68 train 9.6817 , allloss: 20.2660, dt: 1127.67ms, fracRes: 0.0087, norm(attn): 0.0786, norm(output): 0.0518, norm(x): 0.0569, norm(y): 0.9977, norm:45.1754, tok/sec: 116232.73, flops:45.28, batch-reuse:1
@ 69 train 9.6452 , allloss: 20.2467, dt: 1138.64ms, fracRes: 0.0087, norm(attn): 0.0791, norm(output): 0.0518, norm(x): 0.0567, norm(y): 0.9976, norm:36.9522, tok/sec: 115112.68, flops:44.85, batch-reuse:1
@ 70 train 9.6192 , allloss: 20.1678, dt: 1117.47ms, fracRes: 0.0088, norm(attn): 0.0811, norm(output): 0.0510, norm(x): 0.0566, norm(y): 0.9976, norm:32.3739, tok/sec: 117294.05, flops:45.70, batch-reuse:1
@ 71 train 9.5843 , allloss: 20.1835, dt: 1119.01ms, fracRes: 0.0089, norm(attn): 0.0835, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9975, norm:32.2719, tok/sec: 117131.79, flops:45.63, batch-reuse:1
@ 72 train 9.5753 , allloss: 19.8383, dt: 1127.07ms, fracRes: 0.0092, norm(attn): 0.0859, norm(output): 0.0510, norm(x): 0.0563, norm(y): 0.9975, norm:36.7322, tok/sec: 116294.10, flops:45.31, batch-reuse:1
@ 73 train 9.5798 , allloss: 19.7288, dt: 1111.63ms, fracRes: 0.0091, norm(attn): 0.0879, norm(output): 0.0510, norm(x): 0.0560, norm(y): 0.9975, norm:46.0096, tok/sec: 117909.49, flops:45.94, batch-reuse:1
@ 74 train 9.5609 , allloss: 19.3188, dt: 1126.00ms, fracRes: 0.0094, norm(attn): 0.0884, norm(output): 0.0510, norm(x): 0.0564, norm(y): 0.9975, norm:48.8137, tok/sec: 116404.93, flops:45.35, batch-reuse:1
@ 75 train 9.7023 , allloss: 19.3458, dt: 1124.63ms, fracRes: 0.0094, norm(attn): 0.0928, norm(output): 0.0508, norm(x): 0.0563, norm(y): 0.9974, norm:34.0879, tok/sec: 116547.05, flops:45.41, batch-reuse:1
@ 76 train 9.4982 , allloss: 19.0009, dt: 1132.54ms, fracRes: 0.0096, norm(attn): 0.0938, norm(output): 0.0508, norm(x): 0.0562, norm(y): 0.9974, norm:34.3256, tok/sec: 115732.56, flops:45.09, batch-reuse:1
@ 77 train 9.7065 , allloss: 19.1613, dt: 1119.45ms, fracRes: 0.0096, norm(attn): 0.0942, norm(output): 0.0505, norm(x): 0.0559, norm(y): 0.9974, norm:35.9170, tok/sec: 117086.38, flops:45.62, batch-reuse:1
@ 78 train 9.5457 , allloss: 18.8579, dt: 1128.09ms, fracRes: 0.0098, norm(attn): 0.0962, norm(output): 0.0505, norm(x): 0.0559, norm(y): 0.9973, norm:39.2973, tok/sec: 116188.81, flops:45.27, batch-reuse:1
@ 79 train 9.4301 , allloss: 18.6113, dt: 1126.53ms, fracRes: 0.0100, norm(attn): 0.0991, norm(output): 0.0505, norm(x): 0.0558, norm(y): 0.9973, norm:54.9757, tok/sec: 116350.34, flops:45.33, batch-reuse:1
@ 80 train 9.4372 , allloss: 18.5264, dt: 1122.13ms, fracRes: 0.0104, norm(attn): 0.0996, norm(output): 0.0505, norm(x): 0.0563, norm(y): 0.9973, norm:48.5724, tok/sec: 116805.94, flops:45.51, batch-reuse:1
@ 81 train 9.4191 , allloss: 18.5019, dt: 1132.39ms, fracRes: 0.0105, norm(attn): 0.1016, norm(output): 0.0505, norm(x): 0.0564, norm(y): 0.9973, norm:42.0334, tok/sec: 115747.72, flops:45.10, batch-reuse:1
@ 82 train 9.3491 , allloss: 18.2649, dt: 1116.99ms, fracRes: 0.0108, norm(attn): 0.1021, norm(output): 0.0505, norm(x): 0.0563, norm(y): 0.9972, norm:31.3899, tok/sec: 117344.22, flops:45.72, batch-reuse:1
@ 83 train 9.3482 , allloss: 18.3276, dt: 1114.06ms, fracRes: 0.0110, norm(attn): 0.1021, norm(output): 0.0498, norm(x): 0.0559, norm(y): 0.9972, norm:38.3695, tok/sec: 117652.78, flops:45.84, batch-reuse:1
@ 84 train 9.3506 , allloss: 18.4558, dt: 1123.11ms, fracRes: 0.0110, norm(attn): 0.1074, norm(output): 0.0496, norm(x): 0.0557, norm(y): 0.9972, norm:40.8669, tok/sec: 116704.77, flops:45.47, batch-reuse:1
@ 85 train 9.3277 , allloss: 18.6527, dt: 1119.77ms, fracRes: 0.0111, norm(attn): 0.1094, norm(output): 0.0498, norm(x): 0.0559, norm(y): 0.9971, norm:46.4842, tok/sec: 117052.45, flops:45.60, batch-reuse:1
@ 86 train 9.3408 , allloss: 18.3524, dt: 1134.80ms, fracRes: 0.0110, norm(attn): 0.1108, norm(output): 0.0503, norm(x): 0.0563, norm(y): 0.9971, norm:48.6623, tok/sec: 115502.03, flops:45.00, batch-reuse:1
@ 87 train 9.3211 , allloss: 18.8199, dt: 1136.64ms, fracRes: 0.0111, norm(attn): 0.1152, norm(output): 0.0496, norm(x): 0.0558, norm(y): 0.9971, norm:39.6008, tok/sec: 115315.40, flops:44.93, batch-reuse:1
@ 88 train 9.3196 , allloss: 19.0520, dt: 1128.12ms, fracRes: 0.0111, norm(attn): 0.1167, norm(output): 0.0483, norm(x): 0.0553, norm(y): 0.9970, norm:53.2346, tok/sec: 116185.91, flops:45.27, batch-reuse:1
@ 89 train 9.2591 , allloss: 18.9573, dt: 1130.12ms, fracRes: 0.0110, norm(attn): 0.1177, norm(output): 0.0498, norm(x): 0.0557, norm(y): 0.9970, norm:40.1485, tok/sec: 115980.26, flops:45.19, batch-reuse:1
@ 90 train 9.2446 , allloss: 18.9930, dt: 1135.81ms, fracRes: 0.0110, norm(attn): 0.1230, norm(output): 0.0496, norm(x): 0.0553, norm(y): 0.9970, norm:36.9480, tok/sec: 115399.50, flops:44.96, batch-reuse:1
@ 91 train 9.2432 , allloss: 19.4062, dt: 1105.31ms, fracRes: 0.0110, norm(attn): 0.1245, norm(output): 0.0481, norm(x): 0.0547, norm(y): 0.9969, norm:59.6490, tok/sec: 118584.16, flops:46.20, batch-reuse:1
@ 92 train 9.1743 , allloss: 19.2134, dt: 1123.80ms, fracRes: 0.0109, norm(attn): 0.1250, norm(output): 0.0496, norm(x): 0.0554, norm(y): 0.9969, norm:37.0107, tok/sec: 116633.05, flops:45.44, batch-reuse:1
@ 93 train 9.1464 , allloss: 19.1601, dt: 1128.72ms, fracRes: 0.0109, norm(attn): 0.1270, norm(output): 0.0496, norm(x): 0.0552, norm(y): 0.9969, norm:41.0653, tok/sec: 116124.45, flops:45.24, batch-reuse:1
@ 94 train 9.2001 , allloss: 19.9637, dt: 1144.87ms, fracRes: 0.0109, norm(attn): 0.1270, norm(output): 0.0496, norm(x): 0.0551, norm(y): 0.9968, norm:56.5019, tok/sec: 114486.62, flops:44.60, batch-reuse:1
@ 95 train 9.1290 , allloss: 19.1935, dt: 1123.20ms, fracRes: 0.0109, norm(attn): 0.1318, norm(output): 0.0491, norm(x): 0.0548, norm(y): 0.9968, norm:65.3746, tok/sec: 116695.46, flops:45.46, batch-reuse:1
@ 96 train 9.0612 , allloss: 19.3498, dt: 1142.27ms, fracRes: 0.0108, norm(attn): 0.1318, norm(output): 0.0498, norm(x): 0.0555, norm(y): 0.9968, norm:45.2243, tok/sec: 114746.73, flops:44.71, batch-reuse:1
@ 97 train 9.0246 , allloss: 19.4872, dt: 1135.13ms, fracRes: 0.0109, norm(attn): 0.1328, norm(output): 0.0503, norm(x): 0.0555, norm(y): 0.9967, norm:35.4668, tok/sec: 115469.06, flops:44.99, batch-reuse:1
@ 98 train 9.0235 , allloss: 19.7522, dt: 1117.84ms, fracRes: 0.0109, norm(attn): 0.1338, norm(output): 0.0496, norm(x): 0.0548, norm(y): 0.9967, norm:56.3830, tok/sec: 117254.88, flops:45.68, batch-reuse:1
@ 99 train 9.0297 , allloss: 19.9428, dt: 1113.01ms, fracRes: 0.0108, norm(attn): 0.1338, norm(output): 0.0503, norm(x): 0.0558, norm(y): 0.9967, norm:45.1495, tok/sec: 117763.60, flops:45.88, batch-reuse:1
@ 100 train 8.9857 , allloss: 19.7055, dt: 1142.82ms, fracRes: 0.0110, norm(attn): 0.1338, norm(output): 0.0496, norm(x): 0.0553, norm(y): 0.9966, norm:37.1916, tok/sec: 114691.95, flops:44.68, batch-reuse:1
@ 101 train 8.9599 , allloss: 20.0170, dt: 1112.39ms, fracRes: 0.0113, norm(attn): 0.1338, norm(output): 0.0479, norm(x): 0.0546, norm(y): 0.9966, norm:75.5808, tok/sec: 117829.60, flops:45.91, batch-reuse:1
@ 102 train 8.9574 , allloss: 19.8560, dt: 1115.25ms, fracRes: 0.0122, norm(attn): 0.1338, norm(output): 0.0505, norm(x): 0.0570, norm(y): 0.9967, norm:41.2813, tok/sec: 117526.92, flops:45.79, batch-reuse:1
@ 103 train 8.9724 , allloss: 19.8011, dt: 1134.79ms, fracRes: 0.0124, norm(attn): 0.1348, norm(output): 0.0508, norm(x): 0.0577, norm(y): 0.9967, norm:39.1033, tok/sec: 115503.17, flops:45.00, batch-reuse:1
@ 104 train 9.0003 , allloss: 20.0411, dt: 1122.37ms, fracRes: 0.0120, norm(attn): 0.1377, norm(output): 0.0505, norm(x): 0.0568, norm(y): 0.9966, norm:48.0565, tok/sec: 116780.96, flops:45.50, batch-reuse:1
@ 105 train 8.9756 , allloss: 19.7394, dt: 1137.49ms, fracRes: 0.0126, norm(attn): 0.1396, norm(output): 0.0505, norm(x): 0.0573, norm(y): 0.9966, norm:35.6988, tok/sec: 115229.60, flops:44.89, batch-reuse:1
@ 106 train 8.9751 , allloss: 19.8184, dt: 1127.27ms, fracRes: 0.0127, norm(attn): 0.1387, norm(output): 0.0505, norm(x): 0.0575, norm(y): 0.9966, norm:37.4305, tok/sec: 116273.61, flops:45.30, batch-reuse:1
@ 107 train 8.9861 , allloss: 19.9713, dt: 1125.49ms, fracRes: 0.0123, norm(attn): 0.1396, norm(output): 0.0498, norm(x): 0.0568, norm(y): 0.9965, norm:58.5464, tok/sec: 116457.85, flops:45.37, batch-reuse:1
@ 108 train 9.0627 , allloss: 18.9371, dt: 1105.30ms, fracRes: 0.0141, norm(attn): 0.1396, norm(output): 0.0515, norm(x): 0.0593, norm(y): 0.9966, norm:58.0188, tok/sec: 118585.31, flops:46.20, batch-reuse:1
@ 109 train 8.9520 , allloss: 19.1559, dt: 1119.23ms, fracRes: 0.0129, norm(attn): 0.1406, norm(output): 0.0505, norm(x): 0.0572, norm(y): 0.9965, norm:38.7597, tok/sec: 117108.71, flops:45.63, batch-reuse:1
@ 110 train 9.5496 , allloss: 21.0928, dt: 1117.98ms, fracRes: 0.0115, norm(attn): 0.1484, norm(output): 0.0481, norm(x): 0.0549, norm(y): 0.9964, norm:296.3398, tok/sec: 117240.35, flops:45.68, batch-reuse:1
@ 111 train 9.1377 , allloss: 20.7724, dt: 1112.19ms, fracRes: 0.0116, norm(attn): 0.1602, norm(output): 0.0515, norm(x): 0.0584, norm(y): 0.9965, norm:73.0485, tok/sec: 117850.44, flops:45.91, batch-reuse:1
@ 112 train 9.1581 , allloss: 19.9235, dt: 1134.66ms, fracRes: 0.0123, norm(attn): 0.1562, norm(output): 0.0532, norm(x): 0.0596, norm(y): 0.9965, norm:45.0598, tok/sec: 115516.54, flops:45.01, batch-reuse:1
@ 113 train 9.1359 , allloss: 19.5589, dt: 1122.13ms, fracRes: 0.0131, norm(attn): 0.1562, norm(output): 0.0537, norm(x): 0.0606, norm(y): 0.9965, norm:43.8219, tok/sec: 116806.17, flops:45.51, batch-reuse:1
@ 114 train 9.0208 , allloss: 19.5872, dt: 1103.21ms, fracRes: 0.0131, norm(attn): 0.1504, norm(output): 0.0537, norm(x): 0.0606, norm(y): 0.9964, norm:38.7932, tok/sec: 118809.12, flops:46.29, batch-reuse:1
@ 115 train 8.9174 , allloss: 19.9439, dt: 1121.20ms, fracRes: 0.0124, norm(attn): 0.1514, norm(output): 0.0532, norm(x): 0.0595, norm(y): 0.9964, norm:37.2902, tok/sec: 116903.01, flops:45.55, batch-reuse:1
@ 116 train 8.8468 , allloss: 19.2708, dt: 1119.73ms, fracRes: 0.0132, norm(attn): 0.1465, norm(output): 0.0505, norm(x): 0.0578, norm(y): 0.9964, norm:41.0524, tok/sec: 117056.37, flops:45.61, batch-reuse:1
@ 117 train 8.7940 , allloss: 17.6496, dt: 1131.08ms, fracRes: 0.0155, norm(attn): 0.1562, norm(output): 0.0505, norm(x): 0.0592, norm(y): 0.9964, norm:43.2859, tok/sec: 115882.08, flops:45.15, batch-reuse:1
@ 118 train 8.6963 , allloss: 17.5066, dt: 1125.84ms, fracRes: 0.0133, norm(attn): 0.1562, norm(output): 0.0471, norm(x): 0.0555, norm(y): 0.9962, norm:33.6086, tok/sec: 116421.20, flops:45.36, batch-reuse:1
@ 119 train 8.9022 , allloss: 18.2989, dt: 1098.83ms, fracRes: 0.0111, norm(attn): 0.1602, norm(output): 0.0442, norm(x): 0.0516, norm(y): 0.9959, norm:277.5828, tok/sec: 119283.19, flops:46.47, batch-reuse:1
@ 120 train 8.7608 , allloss: 17.6959, dt: 1122.57ms, fracRes: 0.0099, norm(attn): 0.1504, norm(output): 0.0483, norm(x): 0.0535, norm(y): 0.9960, norm:45.9924, tok/sec: 116760.47, flops:45.49, batch-reuse:1
@ 121 train 8.7112 , allloss: 17.6081, dt: 1118.18ms, fracRes: 0.0103, norm(attn): 0.1533, norm(output): 0.0505, norm(x): 0.0551, norm(y): 0.9960, norm:35.8895, tok/sec: 117219.50, flops:45.67, batch-reuse:1
@ 122 train 8.6705 , allloss: 18.0152, dt: 1127.11ms, fracRes: 0.0104, norm(attn): 0.1709, norm(output): 0.0479, norm(x): 0.0539, norm(y): 0.9959, norm:44.6286, tok/sec: 116289.92, flops:45.31, batch-reuse:1
@ 123 train 8.5568 , allloss: 17.7758, dt: 1134.85ms, fracRes: 0.0100, norm(attn): 0.1738, norm(output): 0.0474, norm(x): 0.0533, norm(y): 0.9958, norm:37.4521, tok/sec: 115497.52, flops:45.00, batch-reuse:1
@ 124 train 8.5144 , allloss: 18.3751, dt: 1141.45ms, fracRes: 0.0091, norm(attn): 0.1729, norm(output): 0.0471, norm(x): 0.0523, norm(y): 0.9957, norm:39.7532, tok/sec: 114829.32, flops:44.74, batch-reuse:1
@ 125 train 8.4567 , allloss: 17.9831, dt: 1134.50ms, fracRes: 0.0086, norm(attn): 0.1641, norm(output): 0.0483, norm(x): 0.0527, norm(y): 0.9957, norm:32.9373, tok/sec: 115532.71, flops:45.01, batch-reuse:1
@ 126 train 8.4339 , allloss: 17.7308, dt: 1121.71ms, fracRes: 0.0083, norm(attn): 0.1670, norm(output): 0.0471, norm(x): 0.0515, norm(y): 0.9956, norm:33.4209, tok/sec: 116850.56, flops:45.52, batch-reuse:1
@ 127 train 8.3934 , allloss: 16.8609, dt: 1132.03ms, fracRes: 0.0083, norm(attn): 0.1758, norm(output): 0.0464, norm(x): 0.0506, norm(y): 0.9955, norm:37.8141, tok/sec: 115784.48, flops:45.11, batch-reuse:1
@ 128 train 8.4455 , allloss: 17.7551, dt: 1125.98ms, fracRes: 0.0082, norm(attn): 0.1777, norm(output): 0.0454, norm(x): 0.0495, norm(y): 0.9954, norm:145.1462, tok/sec: 116406.58, flops:45.35, batch-reuse:1
@ 129 train 8.5890 , allloss: 16.0404, dt: 1134.52ms, fracRes: 0.0084, norm(attn): 0.1982, norm(output): 0.0464, norm(x): 0.0502, norm(y): 0.9954, norm:59.7544, tok/sec: 115530.45, flops:45.01, batch-reuse:1
@ 130 train 8.4153 , allloss: 16.4877, dt: 1121.05ms, fracRes: 0.0080, norm(attn): 0.1865, norm(output): 0.0464, norm(x): 0.0499, norm(y): 0.9953, norm:43.6551, tok/sec: 116919.22, flops:45.55, batch-reuse:1
@ 131 train 8.5872 , allloss: 18.6015, dt: 1132.07ms, fracRes: 0.0077, norm(attn): 0.1816, norm(output): 0.0444, norm(x): 0.0485, norm(y): 0.9952, norm:188.8047, tok/sec: 115780.41, flops:45.11, batch-reuse:1
@ 132 train 8.4108 , allloss: 17.4110, dt: 1132.34ms, fracRes: 0.0077, norm(attn): 0.1875, norm(output): 0.0466, norm(x): 0.0493, norm(y): 0.9952, norm:53.1098, tok/sec: 115752.93, flops:45.10, batch-reuse:1
@ 133 train 8.3404 , allloss: 16.7638, dt: 1113.44ms, fracRes: 0.0076, norm(attn): 0.1807, norm(output): 0.0483, norm(x): 0.0514, norm(y): 0.9953, norm:44.9597, tok/sec: 117718.16, flops:45.86, batch-reuse:1
@ 134 train 8.3402 , allloss: 16.6058, dt: 1122.31ms, fracRes: 0.0077, norm(attn): 0.1885, norm(output): 0.0481, norm(x): 0.0516, norm(y): 0.9952, norm:40.8709, tok/sec: 116787.95, flops:45.50, batch-reuse:1
@ 135 train 8.2865 , allloss: 17.7017, dt: 1128.05ms, fracRes: 0.0077, norm(attn): 0.1885, norm(output): 0.0488, norm(x): 0.0520, norm(y): 0.9952, norm:44.1473, tok/sec: 116193.42, flops:45.27, batch-reuse:1
@ 136 train 8.2568 , allloss: 17.8514, dt: 1143.66ms, fracRes: 0.0077, norm(attn): 0.1855, norm(output): 0.0481, norm(x): 0.0517, norm(y): 0.9951, norm:39.0233, tok/sec: 114607.77, flops:44.65, batch-reuse:1
@ 137 train 8.2220 , allloss: 17.7701, dt: 1145.95ms, fracRes: 0.0078, norm(attn): 0.1758, norm(output): 0.0471, norm(x): 0.0512, norm(y): 0.9950, norm:58.8632, tok/sec: 114378.84, flops:44.56, batch-reuse:1
@ 138 train 8.4789 , allloss: 19.3989, dt: 1113.59ms, fracRes: 0.0076, norm(attn): 0.1855, norm(output): 0.0508, norm(x): 0.0538, norm(y): 0.9951, norm:146.3632, tok/sec: 117702.38, flops:45.86, batch-reuse:1
@ 139 train 8.3445 , allloss: 17.1749, dt: 1110.93ms, fracRes: 0.0079, norm(attn): 0.1875, norm(output): 0.0479, norm(x): 0.0516, norm(y): 0.9949, norm:72.4192, tok/sec: 117983.50, flops:45.97, batch-reuse:1
@ 140 train 8.2833 , allloss: 17.6266, dt: 1122.89ms, fracRes: 0.0083, norm(attn): 0.1826, norm(output): 0.0476, norm(x): 0.0519, norm(y): 0.9949, norm:66.4988, tok/sec: 116727.40, flops:45.48, batch-reuse:1
@ 141 train 8.2552 , allloss: 19.7747, dt: 1107.70ms, fracRes: 0.0082, norm(attn): 0.1885, norm(output): 0.0518, norm(x): 0.0553, norm(y): 0.9950, norm:63.1492, tok/sec: 118327.60, flops:46.10, batch-reuse:1
@ 142 train 8.2639 , allloss: 18.8203, dt: 1123.45ms, fracRes: 0.0083, norm(attn): 0.1816, norm(output): 0.0498, norm(x): 0.0534, norm(y): 0.9949, norm:45.1740, tok/sec: 116668.76, flops:45.45, batch-reuse:1
@ 143 train 8.2109 , allloss: 17.9017, dt: 1129.48ms, fracRes: 0.0083, norm(attn): 0.1816, norm(output): 0.0466, norm(x): 0.0505, norm(y): 0.9947, norm:48.9832, tok/sec: 116045.89, flops:45.21, batch-reuse:1
@ 144 train 8.1053 , allloss: 18.2456, dt: 1114.24ms, fracRes: 0.0087, norm(attn): 0.1709, norm(output): 0.0493, norm(x): 0.0533, norm(y): 0.9948, norm:43.1086, tok/sec: 117633.48, flops:45.83, batch-reuse:1
@ 145 train 8.0670 , allloss: 18.5199, dt: 1125.75ms, fracRes: 0.0086, norm(attn): 0.1621, norm(output): 0.0479, norm(x): 0.0526, norm(y): 0.9949, norm:43.6725, tok/sec: 116430.55, flops:45.36, batch-reuse:1
@ 146 train 8.3321 , allloss: 18.2896, dt: 1114.22ms, fracRes: 0.0094, norm(attn): 0.1777, norm(output): 0.0471, norm(x): 0.0521, norm(y): 0.9948, norm:96.0177, tok/sec: 117636.09, flops:45.83, batch-reuse:1
@ 147 train 8.2285 , allloss: 16.1904, dt: 1122.64ms, fracRes: 0.0122, norm(attn): 0.2012, norm(output): 0.0437, norm(x): 0.0504, norm(y): 0.9947, norm:57.6322, tok/sec: 116753.08, flops:45.49, batch-reuse:1
@ 148 train 8.1530 , allloss: 18.3672, dt: 1134.17ms, fracRes: 0.0090, norm(attn): 0.1729, norm(output): 0.0466, norm(x): 0.0502, norm(y): 0.9947, norm:57.1531, tok/sec: 115566.61, flops:45.02, batch-reuse:1
@ 149 train 8.1168 , allloss: 18.8654, dt: 1138.84ms, fracRes: 0.0085, norm(attn): 0.1924, norm(output): 0.0466, norm(x): 0.0506, norm(y): 0.9946, norm:78.1144, tok/sec: 115092.63, flops:44.84, batch-reuse:1
@ 150 train 8.3302 , allloss: 15.9634, dt: 1128.91ms, fracRes: 0.0100, norm(attn): 0.2217, norm(output): 0.0432, norm(x): 0.0485, norm(y): 0.9945, norm:60.3092, tok/sec: 116105.37, flops:45.23, batch-reuse:1
@ 151 train 8.2016 , allloss: 16.8819, dt: 1114.19ms, fracRes: 0.0077, norm(attn): 0.1855, norm(output): 0.0488, norm(x): 0.0515, norm(y): 0.9946, norm:72.7942, tok/sec: 117638.81, flops:45.83, batch-reuse:1
@ 152 train 8.0635 , allloss: 14.8136, dt: 1116.23ms, fracRes: 0.0083, norm(attn): 0.2197, norm(output): 0.0417, norm(x): 0.0461, norm(y): 0.9944, norm:35.4467, tok/sec: 117423.75, flops:45.75, batch-reuse:1
@ 153 train 8.0290 , allloss: 15.3391, dt: 1120.18ms, fracRes: 0.0077, norm(attn): 0.2012, norm(output): 0.0415, norm(x): 0.0454, norm(y): 0.9944, norm:35.0480, tok/sec: 117009.93, flops:45.59, batch-reuse:1
@ 154 train 8.1758 , allloss: 17.9550, dt: 1139.51ms, fracRes: 0.0075, norm(attn): 0.1689, norm(output): 0.0454, norm(x): 0.0489, norm(y): 0.9947, norm:111.4857, tok/sec: 115024.72, flops:44.81, batch-reuse:1
@ 155 train 8.1172 , allloss: 15.1170, dt: 1119.79ms, fracRes: 0.0098, norm(attn): 0.1816, norm(output): 0.0430, norm(x): 0.0487, norm(y): 0.9947, norm:36.8558, tok/sec: 117050.21, flops:45.60, batch-reuse:1
@ 156 train 8.0015 , allloss: 14.5562, dt: 1127.98ms, fracRes: 0.0113, norm(attn): 0.1885, norm(output): 0.0427, norm(x): 0.0491, norm(y): 0.9948, norm:39.1590, tok/sec: 116200.79, flops:45.27, batch-reuse:1
@ 157 train 8.2190 , allloss: 17.3501, dt: 1115.11ms, fracRes: 0.0079, norm(attn): 0.1729, norm(output): 0.0447, norm(x): 0.0482, norm(y): 0.9946, norm:131.7479, tok/sec: 117541.37, flops:45.79, batch-reuse:1
@ 158 train 8.1050 , allloss: 15.2514, dt: 1125.28ms, fracRes: 0.0091, norm(attn): 0.1885, norm(output): 0.0442, norm(x): 0.0495, norm(y): 0.9948, norm:46.9314, tok/sec: 116479.71, flops:45.38, batch-reuse:1
@ 159 train 8.1342 , allloss: 14.5493, dt: 1137.19ms, fracRes: 0.0084, norm(attn): 0.2012, norm(output): 0.0454, norm(x): 0.0491, norm(y): 0.9947, norm:50.5776, tok/sec: 115259.29, flops:44.91, batch-reuse:1
@ 160 train 8.1109 , allloss: 16.0756, dt: 1114.61ms, fracRes: 0.0073, norm(attn): 0.1787, norm(output): 0.0505, norm(x): 0.0527, norm(y): 0.9949, norm:44.8303, tok/sec: 117594.50, flops:45.81, batch-reuse:1
@ 161 train 8.0089 , allloss: 17.1623, dt: 1134.70ms, fracRes: 0.0076, norm(attn): 0.1836, norm(output): 0.0520, norm(x): 0.0552, norm(y): 0.9949, norm:38.7395, tok/sec: 115512.27, flops:45.00, batch-reuse:1
@ 162 train 8.1998 , allloss: 17.0365, dt: 1137.96ms, fracRes: 0.0081, norm(attn): 0.2061, norm(output): 0.0522, norm(x): 0.0560, norm(y): 0.9949, norm:70.6910, tok/sec: 115181.73, flops:44.87, batch-reuse:1
@ 163 train 8.0925 , allloss: 16.3396, dt: 1112.76ms, fracRes: 0.0082, norm(attn): 0.2061, norm(output): 0.0535, norm(x): 0.0557, norm(y): 0.9948, norm:60.2141, tok/sec: 117789.56, flops:45.89, batch-reuse:1
@ 164 train 8.1372 , allloss: 18.6624, dt: 1125.93ms, fracRes: 0.0082, norm(attn): 0.2021, norm(output): 0.0588, norm(x): 0.0620, norm(y): 0.9950, norm:78.9509, tok/sec: 116411.96, flops:45.35, batch-reuse:1
@ 165 train 8.1242 , allloss: 19.2232, dt: 1113.53ms, fracRes: 0.0079, norm(attn): 0.2432, norm(output): 0.0640, norm(x): 0.0657, norm(y): 0.9950, norm:53.5068, tok/sec: 117708.38, flops:45.86, batch-reuse:1
@ 166 train 8.1676 , allloss: 19.0224, dt: 1112.97ms, fracRes: 0.0083, norm(attn): 0.2559, norm(output): 0.0576, norm(x): 0.0597, norm(y): 0.9947, norm:77.0182, tok/sec: 117767.81, flops:45.88, batch-reuse:1
@ 167 train 8.0699 , allloss: 19.9931, dt: 1120.76ms, fracRes: 0.0082, norm(attn): 0.2500, norm(output): 0.0630, norm(x): 0.0653, norm(y): 0.9948, norm:54.0456, tok/sec: 116949.22, flops:45.56, batch-reuse:1
@ 168 train 8.4180 , allloss: 20.6967, dt: 1123.28ms, fracRes: 0.0086, norm(attn): 0.2178, norm(output): 0.0542, norm(x): 0.0586, norm(y): 0.9946, norm:384.4470, tok/sec: 116686.35, flops:45.46, batch-reuse:1
@ 169 train 8.1473 , allloss: 22.5021, dt: 1119.67ms, fracRes: 0.0093, norm(attn): 0.2363, norm(output): 0.0693, norm(x): 0.0713, norm(y): 0.9949, norm:59.7245, tok/sec: 117062.97, flops:45.61, batch-reuse:1
@ 170 train 8.0881 , allloss: 20.3559, dt: 1119.64ms, fracRes: 0.0100, norm(attn): 0.2188, norm(output): 0.0659, norm(x): 0.0696, norm(y): 0.9949, norm:54.8438, tok/sec: 117065.84, flops:45.61, batch-reuse:1
@ 171 train 7.9656 , allloss: 17.8255, dt: 1114.05ms, fracRes: 0.0117, norm(attn): 0.1924, norm(output): 0.0588, norm(x): 0.0650, norm(y): 0.9948, norm:46.5799, tok/sec: 117654.02, flops:45.84, batch-reuse:1
@ 172 train 7.9449 , allloss: 18.3820, dt: 1133.77ms, fracRes: 0.0118, norm(attn): 0.2051, norm(output): 0.0564, norm(x): 0.0631, norm(y): 0.9946, norm:46.2786, tok/sec: 115607.61, flops:45.04, batch-reuse:1
@ 173 train 7.8881 , allloss: 18.3898, dt: 1125.16ms, fracRes: 0.0106, norm(attn): 0.2002, norm(output): 0.0547, norm(x): 0.0600, norm(y): 0.9945, norm:42.8235, tok/sec: 116491.43, flops:45.39, batch-reuse:1
@ 174 train 7.9619 , allloss: 17.3486, dt: 1133.74ms, fracRes: 0.0140, norm(attn): 0.2041, norm(output): 0.0481, norm(x): 0.0566, norm(y): 0.9945, norm:36.1895, tok/sec: 115610.68, flops:45.04, batch-reuse:1
@ 175 train 7.8841 , allloss: 16.1991, dt: 1123.10ms, fracRes: 0.0173, norm(attn): 0.2041, norm(output): 0.0435, norm(x): 0.0542, norm(y): 0.9944, norm:37.6592, tok/sec: 116705.74, flops:45.47, batch-reuse:1
@ 176 train 8.2222 , allloss: 18.7860, dt: 1139.07ms, fracRes: 0.0113, norm(attn): 0.2480, norm(output): 0.0396, norm(x): 0.0460, norm(y): 0.9930, norm:209.7344, tok/sec: 115069.74, flops:44.83, batch-reuse:1
@ 177 train 7.9501 , allloss: 14.4247, dt: 1126.24ms, fracRes: 0.0195, norm(attn): 0.2637, norm(output): 0.0374, norm(x): 0.0514, norm(y): 0.9941, norm:42.2776, tok/sec: 116380.14, flops:45.34, batch-reuse:1
@ 178 train 7.9733 , allloss: 14.7568, dt: 1113.63ms, fracRes: 0.0202, norm(attn): 0.2578, norm(output): 0.0393, norm(x): 0.0534, norm(y): 0.9944, norm:43.7447, tok/sec: 117697.59, flops:45.85, batch-reuse:1
@ 179 train 7.8910 , allloss: 15.3024, dt: 1112.33ms, fracRes: 0.0128, norm(attn): 0.2500, norm(output): 0.0391, norm(x): 0.0476, norm(y): 0.9940, norm:43.6822, tok/sec: 117836.04, flops:45.91, batch-reuse:1
@ 180 train 8.0181 , allloss: 14.4517, dt: 1120.33ms, fracRes: 0.0104, norm(attn): 0.3105, norm(output): 0.0332, norm(x): 0.0407, norm(y): 0.9930, norm:85.5416, tok/sec: 116994.56, flops:45.58, batch-reuse:1
@ 181 train 7.9524 , allloss: 14.7446, dt: 1122.99ms, fracRes: 0.0107, norm(attn): 0.3105, norm(output): 0.0354, norm(x): 0.0427, norm(y): 0.9934, norm:48.3037, tok/sec: 116716.99, flops:45.47, batch-reuse:1
@ 182 train 7.8908 , allloss: 14.4492, dt: 1118.91ms, fracRes: 0.0103, norm(attn): 0.3242, norm(output): 0.0349, norm(x): 0.0421, norm(y): 0.9932, norm:31.5802, tok/sec: 117142.24, flops:45.64, batch-reuse:1
@ 183 train 7.8534 , allloss: 13.8708, dt: 1123.27ms, fracRes: 0.0092, norm(attn): 0.3496, norm(output): 0.0325, norm(x): 0.0394, norm(y): 0.9926, norm:34.0027, tok/sec: 116687.61, flops:45.46, batch-reuse:1
@ 184 train 7.7608 , allloss: 13.3657, dt: 1120.91ms, fracRes: 0.0086, norm(attn): 0.3926, norm(output): 0.0308, norm(x): 0.0375, norm(y): 0.9921, norm:42.4868, tok/sec: 116933.87, flops:45.56, batch-reuse:1
@ 185 train 7.8433 , allloss: 12.7788, dt: 1119.42ms, fracRes: 0.0075, norm(attn): 0.4082, norm(output): 0.0295, norm(x): 0.0358, norm(y): 0.9918, norm:64.0098, tok/sec: 117089.15, flops:45.62, batch-reuse:1
@ 186 train 7.9755 , allloss: 13.0853, dt: 1123.75ms, fracRes: 0.0067, norm(attn): 0.3828, norm(output): 0.0332, norm(x): 0.0387, norm(y): 0.9924, norm:33.3921, tok/sec: 116638.49, flops:45.44, batch-reuse:1
@ 187 train 7.9580 , allloss: 12.4781, dt: 1118.73ms, fracRes: 0.0072, norm(attn): 0.4668, norm(output): 0.0297, norm(x): 0.0358, norm(y): 0.9917, norm:32.9691, tok/sec: 117161.12, flops:45.65, batch-reuse:1
@ 188 train 7.7923 , allloss: 12.0737, dt: 1139.67ms, fracRes: 0.0072, norm(attn): 0.5000, norm(output): 0.0292, norm(x): 0.0351, norm(y): 0.9916, norm:25.7032, tok/sec: 115009.10, flops:44.81, batch-reuse:1
@ 189 train 7.8982 , allloss: 11.9755, dt: 1135.73ms, fracRes: 0.0068, norm(attn): 0.5312, norm(output): 0.0288, norm(x): 0.0346, norm(y): 0.9914, norm:24.8848, tok/sec: 115407.44, flops:44.96, batch-reuse:1
@ 190 train 7.9244 , allloss: 11.3528, dt: 1128.18ms, fracRes: 0.0067, norm(attn): 0.6289, norm(output): 0.0261, norm(x): 0.0320, norm(y): 0.9907, norm:51.0409, tok/sec: 116179.60, flops:45.26, batch-reuse:1
@ 191 train 7.8431 , allloss: 10.9838, dt: 1150.13ms, fracRes: 0.0065, norm(attn): 0.6562, norm(output): 0.0255, norm(x): 0.0314, norm(y): 0.9903, norm:26.1355, tok/sec: 113962.84, flops:44.40, batch-reuse:1
@ 192 train 7.9073 , allloss: 10.9057, dt: 1125.94ms, fracRes: 0.0064, norm(attn): 0.7344, norm(output): 0.0249, norm(x): 0.0308, norm(y): 0.9896, norm:32.2363, tok/sec: 116411.07, flops:45.35, batch-reuse:1
@ 193 train 7.9520 , allloss: 10.8394, dt: 1137.35ms, fracRes: 0.0065, norm(attn): 0.8047, norm(output): 0.0247, norm(x): 0.0310, norm(y): 0.9890, norm:90.7124, tok/sec: 115242.91, flops:44.90, batch-reuse:1
@ 194 train 8.0540 , allloss: 11.0552, dt: 1142.89ms, fracRes: 0.0064, norm(attn): 0.8594, norm(output): 0.0266, norm(x): 0.0324, norm(y): 0.9898, norm:49.4060, tok/sec: 114684.71, flops:44.68, batch-reuse:1
@ 195 train 8.1636 , allloss: 11.3399, dt: 1138.88ms, fracRes: 0.0066, norm(attn): 0.8867, norm(output): 0.0294, norm(x): 0.0355, norm(y): 0.9907, norm:89.1843, tok/sec: 115088.22, flops:44.84, batch-reuse:1
@ 196 train 8.2766 , allloss: 11.4880, dt: 1132.30ms, fracRes: 0.0068, norm(attn): 0.9102, norm(output): 0.0315, norm(x): 0.0375, norm(y): 0.9921, norm:62.8946, tok/sec: 115757.32, flops:45.10, batch-reuse:1
@ 197 train 8.2356 , allloss: 11.6557, dt: 1137.18ms, fracRes: 0.0069, norm(attn): 0.9336, norm(output): 0.0339, norm(x): 0.0397, norm(y): 0.9929, norm:40.9969, tok/sec: 115260.62, flops:44.91, batch-reuse:1
@ 198 train 8.2781 , allloss: 11.9007, dt: 1147.14ms, fracRes: 0.0073, norm(attn): 0.9844, norm(output): 0.0364, norm(x): 0.0422, norm(y): 0.9937, norm:37.7205, tok/sec: 114260.09, flops:44.52, batch-reuse:1
@ 199 train 8.4939 , allloss: 12.4171, dt: 1109.10ms, fracRes: 0.0082, norm(attn): 1.0156, norm(output): 0.0398, norm(x): 0.0462, norm(y): 0.9945, norm:37.0392, tok/sec: 118178.31, flops:46.04, batch-reuse:1
@ 200 train 8.7838 , allloss: 13.4022, dt: 1116.95ms, fracRes: 0.0096, norm(attn): 0.9844, norm(output): 0.0498, norm(x): 0.0559, norm(y): 0.9953, norm:30.1448, tok/sec: 117348.36, flops:45.72, batch-reuse:1
@ 201 train 8.9508 , allloss: 13.5758, dt: 1134.27ms, fracRes: 0.0108, norm(attn): 0.9805, norm(output): 0.0571, norm(x): 0.0628, norm(y): 0.9958, norm:25.7920, tok/sec: 115556.56, flops:45.02, batch-reuse:1
@ 202 train 9.2559 , allloss: 14.8226, dt: 1141.67ms, fracRes: 0.0109, norm(attn): 0.8867, norm(output): 0.0640, norm(x): 0.0693, norm(y): 0.9959, norm:29.1439, tok/sec: 114806.97, flops:44.73, batch-reuse:1
@ 203 train 9.5101 , allloss: 15.1916, dt: 1137.82ms, fracRes: 0.0105, norm(attn): 0.8516, norm(output): 0.0732, norm(x): 0.0775, norm(y): 0.9960, norm:40.8531, tok/sec: 115195.80, flops:44.88, batch-reuse:1
@ 204 train 9.7891 , allloss: 16.1227, dt: 1127.81ms, fracRes: 0.0087, norm(attn): 0.7773, norm(output): 0.0815, norm(x): 0.0822, norm(y): 0.9959, norm:55.4625, tok/sec: 116218.18, flops:45.28, batch-reuse:1
@ 205 train 9.9642 , allloss: 16.8049, dt: 1141.65ms, fracRes: 0.0068, norm(attn): 0.6953, norm(output): 0.0771, norm(x): 0.0772, norm(y): 0.9958, norm:63.4856, tok/sec: 114809.13, flops:44.73, batch-reuse:1
@ 206 train 10.0315 , allloss: 17.5685, dt: 1123.99ms, fracRes: 0.0056, norm(attn): 0.6133, norm(output): 0.0698, norm(x): 0.0694, norm(y): 0.9955, norm:65.2156, tok/sec: 116613.63, flops:45.43, batch-reuse:1
@ 207 train 9.8335 , allloss: 17.8859, dt: 1133.13ms, fracRes: 0.0054, norm(attn): 0.5234, norm(output): 0.0664, norm(x): 0.0664, norm(y): 0.9953, norm:64.5446, tok/sec: 115672.36, flops:45.07, batch-reuse:1
@ 208 train 9.3790 , allloss: 17.7337, dt: 1116.15ms, fracRes: 0.0058, norm(attn): 0.4883, norm(output): 0.0630, norm(x): 0.0634, norm(y): 0.9952, norm:64.1317, tok/sec: 117431.85, flops:45.75, batch-reuse:1
@ 209 train 8.7861 , allloss: 17.0599, dt: 1124.66ms, fracRes: 0.0063, norm(attn): 0.4961, norm(output): 0.0601, norm(x): 0.0613, norm(y): 0.9953, norm:59.8614, tok/sec: 116543.39, flops:45.41, batch-reuse:1
@ 210 train 8.2679 , allloss: 16.1656, dt: 1126.04ms, fracRes: 0.0069, norm(attn): 0.5195, norm(output): 0.0574, norm(x): 0.0597, norm(y): 0.9953, norm:50.4661, tok/sec: 116400.54, flops:45.35, batch-reuse:1
@ 211 train 8.0061 , allloss: 15.5288, dt: 1139.45ms, fracRes: 0.0073, norm(attn): 0.5195, norm(output): 0.0544, norm(x): 0.0573, norm(y): 0.9950, norm:44.7443, tok/sec: 115030.78, flops:44.82, batch-reuse:1
@ 212 train 8.1067 , allloss: 15.3559, dt: 1126.05ms, fracRes: 0.0074, norm(attn): 0.5078, norm(output): 0.0510, norm(x): 0.0550, norm(y): 0.9947, norm:55.1462, tok/sec: 116399.36, flops:45.35, batch-reuse:1
@ 213 train 7.9432 , allloss: 14.7926, dt: 1114.89ms, fracRes: 0.0081, norm(attn): 0.5312, norm(output): 0.0503, norm(x): 0.0545, norm(y): 0.9946, norm:52.9311, tok/sec: 117565.15, flops:45.80, batch-reuse:1
@ 214 train 8.1089 , allloss: 14.7756, dt: 1123.38ms, fracRes: 0.0087, norm(attn): 0.5273, norm(output): 0.0500, norm(x): 0.0549, norm(y): 0.9945, norm:89.2759, tok/sec: 116676.64, flops:45.46, batch-reuse:1
@ 215 train 7.9648 , allloss: 14.6280, dt: 1134.70ms, fracRes: 0.0086, norm(attn): 0.5234, norm(output): 0.0510, norm(x): 0.0560, norm(y): 0.9945, norm:51.7032, tok/sec: 115512.46, flops:45.00, batch-reuse:1
@ 216 train 8.1874 , allloss: 14.6806, dt: 1143.18ms, fracRes: 0.0085, norm(attn): 0.5000, norm(output): 0.0525, norm(x): 0.0575, norm(y): 0.9944, norm:69.2233, tok/sec: 114655.74, flops:44.67, batch-reuse:1
@ 217 train 8.3131 , allloss: 14.8291, dt: 1148.90ms, fracRes: 0.0084, norm(attn): 0.4707, norm(output): 0.0544, norm(x): 0.0588, norm(y): 0.9943, norm:67.1150, tok/sec: 114084.47, flops:44.45, batch-reuse:1
@ 218 train 8.2562 , allloss: 14.8391, dt: 1108.96ms, fracRes: 0.0081, norm(attn): 0.4336, norm(output): 0.0549, norm(x): 0.0599, norm(y): 0.9940, norm:54.4429, tok/sec: 118193.63, flops:46.05, batch-reuse:1
@ 219 train 8.3619 , allloss: 15.0581, dt: 1115.62ms, fracRes: 0.0081, norm(attn): 0.3750, norm(output): 0.0557, norm(x): 0.0611, norm(y): 0.9937, norm:64.3771, tok/sec: 117487.84, flops:45.77, batch-reuse:1
@ 220 train 8.2727 , allloss: 15.2433, dt: 1123.18ms, fracRes: 0.0079, norm(attn): 0.3418, norm(output): 0.0583, norm(x): 0.0632, norm(y): 0.9934, norm:83.5969, tok/sec: 116697.27, flops:45.47, batch-reuse:1
@ 221 train 8.5420 , allloss: 16.7227, dt: 1125.00ms, fracRes: 0.0076, norm(attn): 0.2930, norm(output): 0.0615, norm(x): 0.0650, norm(y): 0.9934, norm:378.3110, tok/sec: 116507.98, flops:45.39, batch-reuse:1
@ 222 train 12.3335 , allloss: 16.8408, dt: 1109.17ms, fracRes: 0.0078, norm(attn): 0.3535, norm(output): 0.0820, norm(x): 0.0849, norm(y): 0.9937, norm:136.4255, tok/sec: 118171.43, flops:46.04, batch-reuse:1
@ 223 train 12.2926 , allloss: 16.4184, dt: 1123.09ms, fracRes: 0.0075, norm(attn): 0.3242, norm(output): 0.1089, norm(x): 0.1071, norm(y): 0.9939, norm:88.4187, tok/sec: 116706.66, flops:45.47, batch-reuse:1
@ 224 train 12.1052 , allloss: 16.6435, dt: 1143.69ms, fracRes: 0.0073, norm(attn): 0.2930, norm(output): 0.1396, norm(x): 0.1346, norm(y): 0.9940, norm:54.9586, tok/sec: 114604.52, flops:44.65, batch-reuse:1
@ 225 train 11.9488 , allloss: 17.5033, dt: 1143.84ms, fracRes: 0.0073, norm(attn): 0.2793, norm(output): 0.1719, norm(x): 0.1661, norm(y): 0.9940, norm:43.2140, tok/sec: 114589.06, flops:44.64, batch-reuse:1
@ 226 train 11.8773 , allloss: 18.8991, dt: 1162.22ms, fracRes: 0.0076, norm(attn): 0.2695, norm(output): 0.2168, norm(x): 0.2025, norm(y): 0.9940, norm:40.7258, tok/sec: 112777.04, flops:43.94, batch-reuse:1
@ 227 train 11.8675 , allloss: 20.7554, dt: 1129.80ms, fracRes: 0.0084, norm(attn): 0.2852, norm(output): 0.2637, norm(x): 0.2485, norm(y): 0.9940, norm:51.7795, tok/sec: 116013.96, flops:45.20, batch-reuse:1
@ 228 train 11.8796 , allloss: 22.9873, dt: 1125.62ms, fracRes: 0.0099, norm(attn): 0.3145, norm(output): 0.3320, norm(x): 0.3084, norm(y): 0.9940, norm:84.0195, tok/sec: 116443.89, flops:45.37, batch-reuse:1
@ 229 train 11.9111 , allloss: 25.5598, dt: 1136.10ms, fracRes: 0.0123, norm(attn): 0.3730, norm(output): 0.4141, norm(x): 0.3866, norm(y): 0.9941, norm:91.8105, tok/sec: 115370.22, flops:44.95, batch-reuse:1
@ 230 train 11.9755 , allloss: 28.6310, dt: 1118.28ms, fracRes: 0.0159, norm(attn): 0.4395, norm(output): 0.5273, norm(x): 0.4848, norm(y): 0.9941, norm:97.1176, tok/sec: 117208.35, flops:45.66, batch-reuse:1
@ 231 train 12.0761 , allloss: 32.3054, dt: 1121.65ms, fracRes: 0.0215, norm(attn): 0.5273, norm(output): 0.6484, norm(x): 0.6043, norm(y): 0.9942, norm:94.8611, tok/sec: 116856.42, flops:45.53, batch-reuse:1
@ 232 train 12.1433 , allloss: 36.6551, dt: 1107.28ms, fracRes: 0.0294, norm(attn): 0.6289, norm(output): 0.8164, norm(x): 0.7462, norm(y): 0.9943, norm:95.2042, tok/sec: 118372.72, flops:46.12, batch-reuse:1
@ 233 train 12.1715 , allloss: 41.7238, dt: 1129.70ms, fracRes: 0.0380, norm(attn): 0.7422, norm(output): 1.0000, norm(x): 0.9119, norm(y): 0.9944, norm:82.4500, tok/sec: 116023.24, flops:45.20, batch-reuse:1
@ 234 train 12.2497 , allloss: 47.7976, dt: 1160.99ms, fracRes: 0.0423, norm(attn): 0.8594, norm(output): 1.2344, norm(x): 1.1061, norm(y): 0.9945, norm:67.8258, tok/sec: 112897.10, flops:43.98, batch-reuse:1
@ 235 train 12.2214 , allloss: 54.4699, dt: 1122.96ms, fracRes: 0.0423, norm(attn): 1.0000, norm(output): 1.4844, norm(x): 1.3250, norm(y): 0.9946, norm:66.6761, tok/sec: 116720.58, flops:45.47, batch-reuse:1
@ 236 train 12.2563 , allloss: 60.5631, dt: 1139.19ms, fracRes: 0.0430, norm(attn): 1.1250, norm(output): 1.7188, norm(x): 1.5206, norm(y): 0.9947, norm:116.7242, tok/sec: 115056.93, flops:44.83, batch-reuse:1
@ 237 train 12.1862 , allloss: 64.1346, dt: 1145.04ms, fracRes: 0.0506, norm(attn): 1.1875, norm(output): 1.8438, norm(x): 1.6354, norm(y): 0.9947, norm:177.7996, tok/sec: 114469.74, flops:44.60, batch-reuse:1
@ 238 train 12.1492 , allloss: 64.8340, dt: 1138.45ms, fracRes: 0.0674, norm(attn): 1.2109, norm(output): 1.8828, norm(x): 1.6564, norm(y): 0.9947, norm:230.1251, tok/sec: 115132.04, flops:44.86, batch-reuse:1
@ 239 train 12.0922 , allloss: 62.7186, dt: 1132.59ms, fracRes: 0.0982, norm(attn): 1.1641, norm(output): 1.7812, norm(x): 1.5853, norm(y): 0.9947, norm:261.8986, tok/sec: 115727.44, flops:45.09, batch-reuse:1
@ 240 train 11.9980 , allloss: 58.2130, dt: 1142.71ms, fracRes: 0.1521, norm(attn): 1.0625, norm(output): 1.7031, norm(x): 1.4362, norm(y): 0.9947, norm:250.4376, tok/sec: 114702.44, flops:44.69, batch-reuse:1
@ 241 train 11.9343 , allloss: 52.4150, dt: 1133.22ms, fracRes: 0.2363, norm(attn): 0.9062, norm(output): 1.4609, norm(x): 1.2307, norm(y): 0.9947, norm:182.7116, tok/sec: 115663.26, flops:45.06, batch-reuse:1
@ 242 train 11.7927 , allloss: 46.6991, dt: 1116.01ms, fracRes: 0.3537, norm(attn): 0.6914, norm(output): 1.2266, norm(x): 1.0236, norm(y): 0.9947, norm:93.5027, tok/sec: 117446.86, flops:45.76, batch-reuse:1
@ 243 train 11.6960 , allloss: 41.7097, dt: 1115.45ms, fracRes: 0.4724, norm(attn): 0.5078, norm(output): 1.0078, norm(x): 0.8887, norm(y): 0.9947, norm:109.4832, tok/sec: 117506.25, flops:45.78, batch-reuse:1
@ 244 train 11.5449 , allloss: 38.8633, dt: 1135.80ms, fracRes: 0.5376, norm(attn): 0.3594, norm(output): 0.8125, norm(x): 0.7975, norm(y): 0.9947, norm:119.3820, tok/sec: 115400.56, flops:44.96, batch-reuse:1
@ 245 train 11.5027 , allloss: 37.6285, dt: 1119.18ms, fracRes: 0.5976, norm(attn): 0.2656, norm(output): 0.6562, norm(x): 0.7442, norm(y): 0.9947, norm:95.2350, tok/sec: 117114.54, flops:45.63, batch-reuse:1
@ 246 train 11.4254 , allloss: 36.5692, dt: 1103.95ms, fracRes: 0.5919, norm(attn): 0.2080, norm(output): 0.5000, norm(x): 0.6896, norm(y): 0.9947, norm:92.5579, tok/sec: 118729.68, flops:46.26, batch-reuse:1
@ 247 train 11.4802 , allloss: 38.2158, dt: 1135.25ms, fracRes: 0.4761, norm(attn): 0.2012, norm(output): 0.3496, norm(x): 0.5663, norm(y): 0.9946, norm:161.6359, tok/sec: 115456.60, flops:44.98, batch-reuse:1
@ 248 train 11.6248 , allloss: 76.5587, dt: 1119.08ms, fracRes: 0.0727, norm(attn): 0.3066, norm(output): 0.1680, norm(x): 0.2028, norm(y): 0.9946, norm:597.4927, tok/sec: 117124.72, flops:45.63, batch-reuse:1
@ 249 train 12.0831 , allloss: 35.7797, dt: 1102.17ms, fracRes: 0.0880, norm(attn): 0.2148, norm(output): 0.1758, norm(x): 0.2144, norm(y): 0.9947, norm:142.5991, tok/sec: 118921.61, flops:46.33, batch-reuse:1
@ 250 train 12.0014 , allloss: 28.7596, dt: 1130.25ms, fracRes: 0.1212, norm(attn): 0.2070, norm(output): 0.1826, norm(x): 0.2512, norm(y): 0.9947, norm:165.4071, tok/sec: 115967.71, flops:45.18, batch-reuse:1
@ 251 train 11.2719 , allloss: 27.9832, dt: 1115.60ms, fracRes: 0.1366, norm(attn): 0.1660, norm(output): 0.1338, norm(x): 0.2294, norm(y): 0.9950, norm:120.4636, tok/sec: 117489.80, flops:45.77, batch-reuse:1
@ 252 train 8.8113 , allloss: 24.7660, dt: 1141.49ms, fracRes: 0.1689, norm(attn): 0.2002, norm(output): 0.1030, norm(x): 0.2299, norm(y): 0.9957, norm:96.6537, tok/sec: 114825.70, flops:44.74, batch-reuse:1
@ 253 train 7.7956 , allloss: 22.9824, dt: 1112.12ms, fracRes: 0.1208, norm(attn): 0.2832, norm(output): 0.0928, norm(x): 0.1824, norm(y): 0.9961, norm:72.2087, tok/sec: 117858.07, flops:45.92, batch-reuse:1
@ 254 train 7.7800 , allloss: 22.3971, dt: 1137.18ms, fracRes: 0.0634, norm(attn): 0.3320, norm(output): 0.0835, norm(x): 0.1287, norm(y): 0.9960, norm:48.5260, tok/sec: 115260.21, flops:44.91, batch-reuse:1
@ 255 train 7.7715 , allloss: 21.8321, dt: 1141.96ms, fracRes: 0.0391, norm(attn): 0.3242, norm(output): 0.0752, norm(x): 0.1018, norm(y): 0.9958, norm:39.5182, tok/sec: 114778.52, flops:44.72, batch-reuse:1
@ 256 train 7.8367 , allloss: 18.3651, dt: 1122.51ms, fracRes: 0.0320, norm(attn): 0.2852, norm(output): 0.0698, norm(x): 0.0911, norm(y): 0.9956, norm:47.9748, tok/sec: 116766.82, flops:45.49, batch-reuse:1
@ 257 train 7.8384 , allloss: 19.0116, dt: 1127.52ms, fracRes: 0.0269, norm(attn): 0.2490, norm(output): 0.0664, norm(x): 0.0839, norm(y): 0.9952, norm:37.2139, tok/sec: 116247.92, flops:45.29, batch-reuse:1
@ 258 train 7.7903 , allloss: 20.8044, dt: 1144.19ms, fracRes: 0.0312, norm(attn): 0.2197, norm(output): 0.0674, norm(x): 0.0892, norm(y): 0.9949, norm:54.2072, tok/sec: 114554.49, flops:44.63, batch-reuse:1
@ 259 train 7.9273 , allloss: 21.4277, dt: 1134.20ms, fracRes: 0.0676, norm(attn): 0.1943, norm(output): 0.0752, norm(x): 0.1195, norm(y): 0.9949, norm:165.4879, tok/sec: 115563.16, flops:45.02, batch-reuse:1
@ 260 train 8.0764 , allloss: 22.4737, dt: 1120.22ms, fracRes: 0.0457, norm(attn): 0.1826, norm(output): 0.0742, norm(x): 0.1022, norm(y): 0.9945, norm:143.4066, tok/sec: 117005.62, flops:45.59, batch-reuse:1
@ 261 train 7.8983 , allloss: 24.1783, dt: 1118.77ms, fracRes: 0.0119, norm(attn): 0.1836, norm(output): 0.0708, norm(x): 0.0748, norm(y): 0.9939, norm:50.4157, tok/sec: 117157.32, flops:45.64, batch-reuse:1
@ 262 train 9.0656 , allloss: 31.6917, dt: 1134.77ms, fracRes: 0.0073, norm(attn): 0.2021, norm(output): 0.0703, norm(x): 0.0706, norm(y): 0.9933, norm:239.9645, tok/sec: 115505.30, flops:45.00, batch-reuse:1
@ 263 train 8.0431 , allloss: 22.2924, dt: 1131.26ms, fracRes: 0.0069, norm(attn): 0.2109, norm(output): 0.0708, norm(x): 0.0713, norm(y): 0.9937, norm:64.6887, tok/sec: 115864.05, flops:45.14, batch-reuse:1
@ 264 train 7.7572 , allloss: 18.6931, dt: 1152.30ms, fracRes: 0.0058, norm(attn): 0.2393, norm(output): 0.0723, norm(x): 0.0719, norm(y): 0.9939, norm:37.2457, tok/sec: 113748.50, flops:44.32, batch-reuse:1
@ 265 train 7.8352 , allloss: 18.5293, dt: 1139.94ms, fracRes: 0.0052, norm(attn): 0.2539, norm(output): 0.0693, norm(x): 0.0687, norm(y): 0.9939, norm:45.0431, tok/sec: 114981.92, flops:44.80, batch-reuse:1
@ 266 train 7.9814 , allloss: 15.3318, dt: 1125.21ms, fracRes: 0.0062, norm(attn): 0.2676, norm(output): 0.0688, norm(x): 0.0691, norm(y): 0.9940, norm:75.1470, tok/sec: 116486.84, flops:45.38, batch-reuse:1
@ 267 train 8.8712 , allloss: 14.3705, dt: 1112.87ms, fracRes: 0.0101, norm(attn): 0.3203, norm(output): 0.0752, norm(x): 0.0786, norm(y): 0.9942, norm:154.8482, tok/sec: 117777.91, flops:45.89, batch-reuse:1
@ 268 train 8.1176 , allloss: 15.9444, dt: 1115.98ms, fracRes: 0.0100, norm(attn): 0.2949, norm(output): 0.0703, norm(x): 0.0739, norm(y): 0.9937, norm:137.9764, tok/sec: 117450.39, flops:45.76, batch-reuse:1
@ 269 train 8.1502 , allloss: 14.1332, dt: 1116.16ms, fracRes: 0.0198, norm(attn): 0.3125, norm(output): 0.0781, norm(x): 0.0874, norm(y): 0.9938, norm:99.9863, tok/sec: 117430.83, flops:45.75, batch-reuse:1
@ 270 train 8.3729 , allloss: 14.1396, dt: 1122.58ms, fracRes: 0.0144, norm(attn): 0.2773, norm(output): 0.0723, norm(x): 0.0790, norm(y): 0.9936, norm:111.5355, tok/sec: 116759.33, flops:45.49, batch-reuse:1
@ 271 train 8.7258 , allloss: 14.3710, dt: 1115.38ms, fracRes: 0.0065, norm(attn): 0.2412, norm(output): 0.0598, norm(x): 0.0622, norm(y): 0.9932, norm:220.7349, tok/sec: 117513.01, flops:45.78, batch-reuse:1
@ 272 train 8.0288 , allloss: 17.7088, dt: 1133.30ms, fracRes: 0.0072, norm(attn): 0.2070, norm(output): 0.0596, norm(x): 0.0621, norm(y): 0.9927, norm:53.6616, tok/sec: 115655.04, flops:45.06, batch-reuse:1
@ 273 train 8.0830 , allloss: 19.0714, dt: 1136.36ms, fracRes: 0.0074, norm(attn): 0.2188, norm(output): 0.0586, norm(x): 0.0609, norm(y): 0.9925, norm:81.3574, tok/sec: 115344.08, flops:44.94, batch-reuse:1
@ 274 train 8.4497 , allloss: 14.4085, dt: 1124.48ms, fracRes: 0.0076, norm(attn): 0.2490, norm(output): 0.0588, norm(x): 0.0628, norm(y): 0.9929, norm:294.1325, tok/sec: 116561.85, flops:45.41, batch-reuse:1
@ 275 train 8.0098 , allloss: 16.0517, dt: 1112.64ms, fracRes: 0.0073, norm(attn): 0.2559, norm(output): 0.0623, norm(x): 0.0645, norm(y): 0.9928, norm:162.8481, tok/sec: 117802.84, flops:45.90, batch-reuse:1
@ 276 train 8.9374 , allloss: 14.9557, dt: 1134.12ms, fracRes: 0.0069, norm(attn): 0.2637, norm(output): 0.0659, norm(x): 0.0676, norm(y): 0.9931, norm:200.3203, tok/sec: 115571.69, flops:45.03, batch-reuse:1
@ 277 train 8.1747 , allloss: 15.3718, dt: 1120.04ms, fracRes: 0.0071, norm(attn): 0.2373, norm(output): 0.0698, norm(x): 0.0707, norm(y): 0.9929, norm:85.1407, tok/sec: 117024.80, flops:45.59, batch-reuse:1
@ 278 train 7.8613 , allloss: 16.2891, dt: 1121.31ms, fracRes: 0.0071, norm(attn): 0.2178, norm(output): 0.0713, norm(x): 0.0726, norm(y): 0.9927, norm:66.1626, tok/sec: 116891.63, flops:45.54, batch-reuse:1
@ 279 train 8.1935 , allloss: 16.1809, dt: 1134.19ms, fracRes: 0.0080, norm(attn): 0.2031, norm(output): 0.0698, norm(x): 0.0713, norm(y): 0.9927, norm:133.2529, tok/sec: 115563.92, flops:45.02, batch-reuse:1
@ 280 train 7.9113 , allloss: 16.7307, dt: 1119.45ms, fracRes: 0.0068, norm(attn): 0.2041, norm(output): 0.0723, norm(x): 0.0734, norm(y): 0.9924, norm:68.6891, tok/sec: 117085.93, flops:45.62, batch-reuse:1
@ 281 train 8.0809 , allloss: 16.5983, dt: 1113.11ms, fracRes: 0.0069, norm(attn): 0.2314, norm(output): 0.0713, norm(x): 0.0732, norm(y): 0.9924, norm:82.1344, tok/sec: 117752.98, flops:45.88, batch-reuse:1
@ 282 train 8.2551 , allloss: 18.1371, dt: 1118.70ms, fracRes: 0.0073, norm(attn): 0.2363, norm(output): 0.0684, norm(x): 0.0708, norm(y): 0.9924, norm:152.4068, tok/sec: 117164.16, flops:45.65, batch-reuse:1
@ 283 train 10.5569 , allloss: 16.7087, dt: 1122.78ms, fracRes: 0.0064, norm(attn): 0.2715, norm(output): 0.0698, norm(x): 0.0714, norm(y): 0.9929, norm:853.3158, tok/sec: 116738.60, flops:45.48, batch-reuse:1
@ 284 train 8.2227 , allloss: 21.0541, dt: 1129.61ms, fracRes: 0.0066, norm(attn): 0.2002, norm(output): 0.0732, norm(x): 0.0742, norm(y): 0.9922, norm:415.5687, tok/sec: 116032.64, flops:45.21, batch-reuse:1
@ 285 train 8.3741 , allloss: 18.2971, dt: 1104.89ms, fracRes: 0.0058, norm(attn): 0.1924, norm(output): 0.0854, norm(x): 0.0829, norm(y): 0.9924, norm:144.7352, tok/sec: 118628.51, flops:46.22, batch-reuse:1
@ 286 train 8.0935 , allloss: 20.7927, dt: 1123.27ms, fracRes: 0.0062, norm(attn): 0.2109, norm(output): 0.0933, norm(x): 0.0900, norm(y): 0.9924, norm:92.6023, tok/sec: 116688.23, flops:45.46, batch-reuse:1
@ 287 train 8.1852 , allloss: 19.6994, dt: 1142.34ms, fracRes: 0.0059, norm(attn): 0.2041, norm(output): 0.0933, norm(x): 0.0902, norm(y): 0.9924, norm:101.6158, tok/sec: 114739.57, flops:44.70, batch-reuse:1
@ 288 train 7.9554 , allloss: 20.2571, dt: 1122.40ms, fracRes: 0.0059, norm(attn): 0.2148, norm(output): 0.0923, norm(x): 0.0907, norm(y): 0.9924, norm:82.9767, tok/sec: 116778.40, flops:45.50, batch-reuse:1
@ 289 train 9.7687 , allloss: 26.9277, dt: 1106.17ms, fracRes: 0.0058, norm(attn): 0.2324, norm(output): 0.0845, norm(x): 0.0858, norm(y): 0.9925, norm:1105.5073, tok/sec: 118491.20, flops:46.16, batch-reuse:1
@ 290 train 12.4756 , allloss: 20.9935, dt: 1133.19ms, fracRes: 0.0056, norm(attn): 0.2676, norm(output): 0.0864, norm(x): 0.0857, norm(y): 0.9922, norm:852.3605, tok/sec: 115666.77, flops:45.06, batch-reuse:1
@ 291 train 10.4964 , allloss: 22.5613, dt: 1110.93ms, fracRes: 0.0054, norm(attn): 0.2373, norm(output): 0.0938, norm(x): 0.0908, norm(y): 0.9919, norm:330.6347, tok/sec: 117983.53, flops:45.97, batch-reuse:1
@ 292 train 8.3412 , allloss: 23.3430, dt: 1131.29ms, fracRes: 0.0061, norm(attn): 0.2617, norm(output): 0.0996, norm(x): 0.0957, norm(y): 0.9920, norm:106.2031, tok/sec: 115861.03, flops:45.14, batch-reuse:1
@ 293 train 8.6408 , allloss: 25.6703, dt: 1118.59ms, fracRes: 0.0062, norm(attn): 0.2832, norm(output): 0.0962, norm(x): 0.0911, norm(y): 0.9921, norm:263.1787, tok/sec: 117176.55, flops:45.65, batch-reuse:1
@ 294 train 8.6304 , allloss: 33.4024, dt: 1132.04ms, fracRes: 0.0072, norm(attn): 0.2490, norm(output): 0.1021, norm(x): 0.1037, norm(y): 0.9923, norm:378.0397, tok/sec: 115784.40, flops:45.11, batch-reuse:1
@ 295 train 7.9451 , allloss: 29.4124, dt: 1131.53ms, fracRes: 0.0071, norm(attn): 0.2656, norm(output): 0.1167, norm(x): 0.1134, norm(y): 0.9923, norm:80.2298, tok/sec: 115836.10, flops:45.13, batch-reuse:1
@ 296 train 8.7204 , allloss: 28.4764, dt: 1145.25ms, fracRes: 0.0070, norm(attn): 0.2832, norm(output): 0.1167, norm(x): 0.1048, norm(y): 0.9919, norm:134.9016, tok/sec: 114448.82, flops:44.59, batch-reuse:1
@ 297 train 8.4788 , allloss: 29.4337, dt: 1117.82ms, fracRes: 0.0072, norm(attn): 0.2812, norm(output): 0.1260, norm(x): 0.1147, norm(y): 0.9919, norm:89.9093, tok/sec: 117257.25, flops:45.68, batch-reuse:1
@ 298 train 8.4436 , allloss: 29.0804, dt: 1136.28ms, fracRes: 0.0073, norm(attn): 0.2773, norm(output): 0.1328, norm(x): 0.1208, norm(y): 0.9920, norm:81.8108, tok/sec: 115352.18, flops:44.94, batch-reuse:1
@ 299 train 8.5824 , allloss: 26.1816, dt: 1126.28ms, fracRes: 0.0067, norm(attn): 0.2344, norm(output): 0.1177, norm(x): 0.1077, norm(y): 0.9921, norm:80.2799, tok/sec: 116376.22, flops:45.34, batch-reuse:1
@ 300 train 8.4877 , allloss: 24.2187, dt: 1142.02ms, fracRes: 0.0067, norm(attn): 0.2314, norm(output): 0.0854, norm(x): 0.0811, norm(y): 0.9923, norm:68.9351, tok/sec: 114771.90, flops:44.72, batch-reuse:1
@ 301 train 8.1463 , allloss: 21.8818, dt: 1140.57ms, fracRes: 0.0112, norm(attn): 0.2490, norm(output): 0.0806, norm(x): 0.0798, norm(y): 0.9926, norm:76.4410, tok/sec: 114917.92, flops:44.77, batch-reuse:1
@ 302 train 8.0810 , allloss: 22.0514, dt: 1140.98ms, fracRes: 0.0112, norm(attn): 0.2910, norm(output): 0.0659, norm(x): 0.0699, norm(y): 0.9926, norm:97.5446, tok/sec: 114876.78, flops:44.76, batch-reuse:1
@ 303 train 7.8717 , allloss: 20.0979, dt: 1117.60ms, fracRes: 0.0147, norm(attn): 0.3164, norm(output): 0.0610, norm(x): 0.0673, norm(y): 0.9927, norm:47.1641, tok/sec: 117280.06, flops:45.69, batch-reuse:1
@ 304 train 7.7423 , allloss: 16.6593, dt: 1125.16ms, fracRes: 0.0186, norm(attn): 0.3438, norm(output): 0.0583, norm(x): 0.0664, norm(y): 0.9929, norm:66.5363, tok/sec: 116492.32, flops:45.39, batch-reuse:1
@ 305 train 8.9688 , allloss: 14.0248, dt: 1133.46ms, fracRes: 0.0086, norm(attn): 0.4688, norm(output): 0.0510, norm(x): 0.0566, norm(y): 0.9932, norm:187.8998, tok/sec: 115638.47, flops:45.05, batch-reuse:1
@ 306 train 7.8577 , allloss: 13.8297, dt: 1110.70ms, fracRes: 0.0091, norm(attn): 0.4062, norm(output): 0.0532, norm(x): 0.0578, norm(y): 0.9932, norm:92.1033, tok/sec: 118007.97, flops:45.98, batch-reuse:1
@ 307 train 8.7683 , allloss: 12.7999, dt: 1141.92ms, fracRes: 0.0070, norm(attn): 0.5742, norm(output): 0.0684, norm(x): 0.0698, norm(y): 0.9945, norm:131.0188, tok/sec: 114782.23, flops:44.72, batch-reuse:1
@ 308 train 7.7244 , allloss: 12.8977, dt: 1125.77ms, fracRes: 0.0092, norm(attn): 0.4316, norm(output): 0.0630, norm(x): 0.0670, norm(y): 0.9938, norm:77.5460, tok/sec: 116428.57, flops:45.36, batch-reuse:1
@ 309 train 7.9873 , allloss: 12.3588, dt: 1139.99ms, fracRes: 0.0074, norm(attn): 0.5000, norm(output): 0.0674, norm(x): 0.0704, norm(y): 0.9940, norm:76.8742, tok/sec: 114976.65, flops:44.79, batch-reuse:1
@ 310 train 8.0739 , allloss: 12.4467, dt: 1124.56ms, fracRes: 0.0066, norm(attn): 0.5391, norm(output): 0.0698, norm(x): 0.0715, norm(y): 0.9939, norm:80.5254, tok/sec: 116554.31, flops:45.41, batch-reuse:1
@ 311 train 7.9718 , allloss: 12.6504, dt: 1123.76ms, fracRes: 0.0067, norm(attn): 0.5391, norm(output): 0.0713, norm(x): 0.0737, norm(y): 0.9938, norm:78.9510, tok/sec: 116636.93, flops:45.44, batch-reuse:1
@ 312 train 7.9385 , allloss: 13.1292, dt: 1139.06ms, fracRes: 0.0077, norm(attn): 0.4961, norm(output): 0.0732, norm(x): 0.0767, norm(y): 0.9935, norm:68.0389, tok/sec: 115070.10, flops:44.83, batch-reuse:1
@ 313 train 8.6211 , allloss: 12.7350, dt: 1137.87ms, fracRes: 0.0082, norm(attn): 0.6289, norm(output): 0.0972, norm(x): 0.0975, norm(y): 0.9942, norm:151.0752, tok/sec: 115190.56, flops:44.88, batch-reuse:1
@ 314 train 7.8417 , allloss: 19.8586, dt: 1122.47ms, fracRes: 0.0119, norm(attn): 0.3145, norm(output): 0.0718, norm(x): 0.0770, norm(y): 0.9927, norm:190.3055, tok/sec: 116770.99, flops:45.49, batch-reuse:1
@ 315 train 7.7513 , allloss: 13.2523, dt: 1116.23ms, fracRes: 0.0221, norm(attn): 0.3535, norm(output): 0.0854, norm(x): 0.0989, norm(y): 0.9932, norm:71.9978, tok/sec: 117423.83, flops:45.75, batch-reuse:1
@ 316 train 8.6227 , allloss: 13.1479, dt: 1137.59ms, fracRes: 0.0180, norm(attn): 0.5352, norm(output): 0.1270, norm(x): 0.1322, norm(y): 0.9940, norm:123.6790, tok/sec: 115218.88, flops:44.89, batch-reuse:1
@ 317 train 8.4195 , allloss: 12.9302, dt: 1137.39ms, fracRes: 0.0215, norm(attn): 0.4258, norm(output): 0.1235, norm(x): 0.1306, norm(y): 0.9936, norm:80.2152, tok/sec: 115239.60, flops:44.90, batch-reuse:1
@ 318 train 8.1654 , allloss: 12.3505, dt: 1127.36ms, fracRes: 0.0220, norm(attn): 0.3105, norm(output): 0.1035, norm(x): 0.1154, norm(y): 0.9932, norm:90.6069, tok/sec: 116264.34, flops:45.30, batch-reuse:1
@ 319 train 8.0068 , allloss: 15.8740, dt: 1136.48ms, fracRes: 0.0153, norm(attn): 0.2656, norm(output): 0.0850, norm(x): 0.0912, norm(y): 0.9928, norm:40.7425, tok/sec: 115331.06, flops:44.93, batch-reuse:1
@ 320 train 9.4012 , allloss: 31.7553, dt: 1138.13ms, fracRes: 0.0170, norm(attn): 0.3633, norm(output): 0.0796, norm(x): 0.0858, norm(y): 0.9926, norm:299.7242, tok/sec: 115164.31, flops:44.87, batch-reuse:1
@ 321 train 8.0511 , allloss: 27.6562, dt: 1106.93ms, fracRes: 0.0216, norm(attn): 0.3711, norm(output): 0.0718, norm(x): 0.0812, norm(y): 0.9924, norm:151.2535, tok/sec: 118410.86, flops:46.13, batch-reuse:1
@ 322 train 7.8589 , allloss: 16.0418, dt: 1138.51ms, fracRes: 0.0131, norm(attn): 0.2969, norm(output): 0.0669, norm(x): 0.0736, norm(y): 0.9922, norm:39.4403, tok/sec: 115126.32, flops:44.85, batch-reuse:1
@ 323 train 7.7744 , allloss: 19.1540, dt: 1128.44ms, fracRes: 0.0090, norm(attn): 0.3438, norm(output): 0.0698, norm(x): 0.0728, norm(y): 0.9922, norm:38.7280, tok/sec: 116153.43, flops:45.25, batch-reuse:1
@ 324 train 7.7859 , allloss: 12.6694, dt: 1132.59ms, fracRes: 0.0079, norm(attn): 0.3594, norm(output): 0.0728, norm(x): 0.0758, norm(y): 0.9923, norm:40.7198, tok/sec: 115727.66, flops:45.09, batch-reuse:1
@ 325 train 7.9466 , allloss: 11.5903, dt: 1124.79ms, fracRes: 0.0036, norm(attn): 0.4414, norm(output): 0.0869, norm(x): 0.0850, norm(y): 0.9929, norm:47.8910, tok/sec: 116529.91, flops:45.40, batch-reuse:1
@ 326 train 8.7048 , allloss: 12.2995, dt: 1122.65ms, fracRes: 0.0022, norm(attn): 0.6953, norm(output): 0.1162, norm(x): 0.1088, norm(y): 0.9938, norm:129.0622, tok/sec: 116751.96, flops:45.49, batch-reuse:1
@ 327 train 8.7338 , allloss: 12.2549, dt: 1105.16ms, fracRes: 0.0021, norm(attn): 0.6641, norm(output): 0.1108, norm(x): 0.1060, norm(y): 0.9937, norm:56.1642, tok/sec: 118600.43, flops:46.21, batch-reuse:1
@ 328 train 8.4348 , allloss: 11.9400, dt: 1157.37ms, fracRes: 0.0025, norm(attn): 0.5039, norm(output): 0.0991, norm(x): 0.0953, norm(y): 0.9933, norm:41.1782, tok/sec: 113249.81, flops:44.12, batch-reuse:1
@ 329 train 8.1896 , allloss: 11.7223, dt: 1110.21ms, fracRes: 0.0023, norm(attn): 0.4727, norm(output): 0.0991, norm(x): 0.0946, norm(y): 0.9932, norm:28.2486, tok/sec: 118061.01, flops:46.00, batch-reuse:1
@ 330 train 7.8897 , allloss: 11.3386, dt: 1128.96ms, fracRes: 0.0020, norm(attn): 0.5312, norm(output): 0.0962, norm(x): 0.0927, norm(y): 0.9931, norm:23.6239, tok/sec: 116099.51, flops:45.23, batch-reuse:1
@ 331 train 7.7099 , allloss: 10.9387, dt: 1125.73ms, fracRes: 0.0016, norm(attn): 0.6406, norm(output): 0.0913, norm(x): 0.0861, norm(y): 0.9931, norm:31.3861, tok/sec: 116433.01, flops:45.36, batch-reuse:1
@ 332 train 7.7743 , allloss: 10.7742, dt: 1116.90ms, fracRes: 0.0014, norm(attn): 0.8203, norm(output): 0.0830, norm(x): 0.0796, norm(y): 0.9934, norm:32.5830, tok/sec: 117353.14, flops:45.72, batch-reuse:1
@ 333 train 8.0059 , allloss: 10.9969, dt: 1116.98ms, fracRes: 0.0015, norm(attn): 0.9023, norm(output): 0.0845, norm(x): 0.0803, norm(y): 0.9935, norm:70.1623, tok/sec: 117344.68, flops:45.72, batch-reuse:1
@ 334 train 7.7420 , allloss: 10.9190, dt: 1127.13ms, fracRes: 0.0016, norm(attn): 0.7305, norm(output): 0.0776, norm(x): 0.0746, norm(y): 0.9927, norm:30.6991, tok/sec: 116288.34, flops:45.31, batch-reuse:1
@ 335 train 7.8214 , allloss: 11.5530, dt: 1124.37ms, fracRes: 0.0021, norm(attn): 0.5625, norm(output): 0.0752, norm(x): 0.0730, norm(y): 0.9923, norm:39.7974, tok/sec: 116573.52, flops:45.42, batch-reuse:1
@ 336 train 7.9215 , allloss: 11.1104, dt: 1118.61ms, fracRes: 0.0021, norm(attn): 0.7148, norm(output): 0.0796, norm(x): 0.0770, norm(y): 0.9927, norm:37.1833, tok/sec: 117174.05, flops:45.65, batch-reuse:1
@ 337 train 8.3146 , allloss: 11.5999, dt: 1121.14ms, fracRes: 0.0030, norm(attn): 0.7773, norm(output): 0.0879, norm(x): 0.0858, norm(y): 0.9932, norm:46.4984, tok/sec: 116909.97, flops:45.55, batch-reuse:1
@ 338 train 8.2796 , allloss: 11.6273, dt: 1127.09ms, fracRes: 0.0032, norm(attn): 0.8086, norm(output): 0.1011, norm(x): 0.0958, norm(y): 0.9936, norm:39.5793, tok/sec: 116292.06, flops:45.31, batch-reuse:1
@ 339 train 8.2381 , allloss: 11.7844, dt: 1127.69ms, fracRes: 0.0029, norm(attn): 0.8242, norm(output): 0.1143, norm(x): 0.1089, norm(y): 0.9939, norm:29.0368, tok/sec: 116230.30, flops:45.28, batch-reuse:1
@ 340 train 8.1281 , allloss: 11.8165, dt: 1140.74ms, fracRes: 0.0025, norm(attn): 0.8242, norm(output): 0.1250, norm(x): 0.1185, norm(y): 0.9941, norm:45.6290, tok/sec: 114900.45, flops:44.77, batch-reuse:1
@ 341 train 7.8308 , allloss: 11.2365, dt: 1119.64ms, fracRes: 0.0020, norm(attn): 0.7188, norm(output): 0.1133, norm(x): 0.1078, norm(y): 0.9938, norm:59.5644, tok/sec: 117065.81, flops:45.61, batch-reuse:1
@ 342 train 13.1614 , allloss: 58.1228, dt: 1115.71ms, fracRes: 0.0042, norm(attn): 0.3340, norm(output): 0.2910, norm(x): 0.2649, norm(y): 0.9919, norm:101.0742, tok/sec: 117479.08, flops:45.77, batch-reuse:1
@ 343 train 8.0048 , allloss: 59.0238, dt: 1128.98ms, fracRes: 0.0064, norm(attn): 0.3613, norm(output): 0.2051, norm(x): 0.2032, norm(y): 0.9926, norm:117.3442, tok/sec: 116098.09, flops:45.23, batch-reuse:1
@ 344 train 8.5746 , allloss: 59.1427, dt: 1130.10ms, fracRes: 0.0089, norm(attn): 0.3672, norm(output): 0.2051, norm(x): 0.2042, norm(y): 0.9927, norm:220.5061, tok/sec: 115982.97, flops:45.19, batch-reuse:1
@ 345 train 11.1822 , allloss: 57.8533, dt: 1109.95ms, fracRes: 0.0110, norm(attn): 0.3027, norm(output): 0.3047, norm(x): 0.2931, norm(y): 0.9922, norm:300.1132, tok/sec: 118088.02, flops:46.01, batch-reuse:1
@ 346 train 12.6853 , allloss: 54.9994, dt: 1122.00ms, fracRes: 0.0099, norm(attn): 0.3457, norm(output): 0.3535, norm(x): 0.3286, norm(y): 0.9918, norm:253.3996, tok/sec: 116820.14, flops:45.51, batch-reuse:1
@ 347 train 13.1207 , allloss: 53.0348, dt: 1137.72ms, fracRes: 0.0101, norm(attn): 0.3516, norm(output): 0.3848, norm(x): 0.3530, norm(y): 0.9918, norm:220.2416, tok/sec: 115205.79, flops:44.88, batch-reuse:1
@ 348 train 13.5088 , allloss: 52.0502, dt: 1130.43ms, fracRes: 0.0106, norm(attn): 0.3457, norm(output): 0.4258, norm(x): 0.3831, norm(y): 0.9917, norm:184.0002, tok/sec: 115948.65, flops:45.17, batch-reuse:1
@ 349 train 13.8552 , allloss: 51.5787, dt: 1148.29ms, fracRes: 0.0125, norm(attn): 0.3242, norm(output): 0.4375, norm(x): 0.3865, norm(y): 0.9917, norm:117.7532, tok/sec: 114145.27, flops:44.47, batch-reuse:1
@ 350 train 12.3993 , allloss: 35.0704, dt: 1118.40ms, fracRes: 0.0222, norm(attn): 0.2930, norm(output): 0.1816, norm(x): 0.1650, norm(y): 0.9916, norm:969.8777, tok/sec: 117196.03, flops:45.66, batch-reuse:1
@ 351 train 8.0000 , allloss: 14.6506, dt: 1108.77ms, fracRes: 0.0318, norm(attn): 0.3242, norm(output): 0.1006, norm(x): 0.1191, norm(y): 0.9919, norm:64.2151, tok/sec: 118213.96, flops:46.06, batch-reuse:1
@ 352 train 7.8542 , allloss: 11.5997, dt: 1129.73ms, fracRes: 0.0037, norm(attn): 0.4297, norm(output): 0.1021, norm(x): 0.0981, norm(y): 0.9925, norm:29.9071, tok/sec: 116021.06, flops:45.20, batch-reuse:1
@ 353 train 7.7758 , allloss: 11.3711, dt: 1123.65ms, fracRes: 0.0028, norm(attn): 0.5195, norm(output): 0.1079, norm(x): 0.1023, norm(y): 0.9928, norm:34.2285, tok/sec: 116648.91, flops:45.45, batch-reuse:1
@ 354 train 7.8777 , allloss: 11.5145, dt: 1130.47ms, fracRes: 0.0028, norm(attn): 0.5508, norm(output): 0.1138, norm(x): 0.1081, norm(y): 0.9928, norm:46.7581, tok/sec: 115944.99, flops:45.17, batch-reuse:1
@ 355 train 8.0036 , allloss: 11.8545, dt: 1117.21ms, fracRes: 0.0033, norm(attn): 0.4766, norm(output): 0.1201, norm(x): 0.1153, norm(y): 0.9926, norm:72.1906, tok/sec: 117321.09, flops:45.71, batch-reuse:1
@ 356 train 8.0065 , allloss: 13.2594, dt: 1133.20ms, fracRes: 0.0117, norm(attn): 0.3164, norm(output): 0.1357, norm(x): 0.1345, norm(y): 0.9922, norm:35.5812, tok/sec: 115665.50, flops:45.06, batch-reuse:1
@ 357 train 8.0297 , allloss: 16.7479, dt: 1112.32ms, fracRes: 0.0341, norm(attn): 0.3633, norm(output): 0.1406, norm(x): 0.1572, norm(y): 0.9920, norm:911.8474, tok/sec: 117836.22, flops:45.91, batch-reuse:1
@ 358 train 7.9266 , allloss: 18.1495, dt: 1122.16ms, fracRes: 0.0756, norm(attn): 0.4277, norm(output): 0.1436, norm(x): 0.1912, norm(y): 0.9918, norm:63.7265, tok/sec: 116803.14, flops:45.51, batch-reuse:1
@ 359 train 8.1459 , allloss: 17.3547, dt: 1116.46ms, fracRes: 0.0934, norm(attn): 0.5117, norm(output): 0.1484, norm(x): 0.2084, norm(y): 0.9915, norm:83.3493, tok/sec: 117399.90, flops:45.74, batch-reuse:1
@ 360 train 8.2879 , allloss: 20.8147, dt: 1125.19ms, fracRes: 0.1115, norm(attn): 0.5117, norm(output): 0.1826, norm(x): 0.2515, norm(y): 0.9912, norm:74.5616, tok/sec: 116488.57, flops:45.38, batch-reuse:1
@ 361 train 8.3778 , allloss: 20.2508, dt: 1127.45ms, fracRes: 0.1294, norm(attn): 0.4844, norm(output): 0.1768, norm(x): 0.2597, norm(y): 0.9908, norm:70.5864, tok/sec: 116255.51, flops:45.29, batch-reuse:1
@ 362 train 8.2146 , allloss: 21.3980, dt: 1116.02ms, fracRes: 0.1537, norm(attn): 0.4727, norm(output): 0.1836, norm(x): 0.2816, norm(y): 0.9905, norm:99.9791, tok/sec: 117445.80, flops:45.76, batch-reuse:1
@ 363 train 8.2386 , allloss: 22.7841, dt: 1127.91ms, fracRes: 0.1077, norm(attn): 0.4746, norm(output): 0.2178, norm(x): 0.2771, norm(y): 0.9901, norm:388.3400, tok/sec: 116207.94, flops:45.27, batch-reuse:1
@ 364 train 13.9134 , allloss: 126.0266, dt: 1126.47ms, fracRes: 0.0080, norm(attn): 0.4746, norm(output): 1.4297, norm(x): 1.2283, norm(y): 0.9918, norm:763.6997, tok/sec: 116355.90, flops:45.33, batch-reuse:1
@ 365 train 14.3949 , allloss: 92.2102, dt: 1115.77ms, fracRes: 0.0086, norm(attn): 0.3477, norm(output): 0.8086, norm(x): 0.7175, norm(y): 0.9922, norm:232.9113, tok/sec: 117472.55, flops:45.77, batch-reuse:1
@ 366 train 14.4540 , allloss: 88.1447, dt: 1120.93ms, fracRes: 0.0279, norm(attn): 0.3535, norm(output): 0.8164, norm(x): 0.7230, norm(y): 0.9923, norm:188.4506, tok/sec: 116930.96, flops:45.56, batch-reuse:1
@ 367 train 14.4099 , allloss: 79.2607, dt: 1107.09ms, fracRes: 0.0526, norm(attn): 0.3418, norm(output): 0.7812, norm(x): 0.6984, norm(y): 0.9926, norm:248.8578, tok/sec: 118393.50, flops:46.13, batch-reuse:1
@ 368 train 13.5527 , allloss: 73.7057, dt: 1120.40ms, fracRes: 0.0899, norm(attn): 0.3164, norm(output): 0.5039, norm(x): 0.4713, norm(y): 0.9932, norm:391.9884, tok/sec: 116987.12, flops:45.58, batch-reuse:1
@ 369 train 8.2668 , allloss: 48.9633, dt: 1119.46ms, fracRes: 0.0167, norm(attn): 0.3320, norm(output): 0.1406, norm(x): 0.1390, norm(y): 0.9922, norm:238.6013, tok/sec: 117085.01, flops:45.62, batch-reuse:1
@ 370 train 8.2061 , allloss: 41.3591, dt: 1119.60ms, fracRes: 0.0096, norm(attn): 0.3418, norm(output): 0.1406, norm(x): 0.1358, norm(y): 0.9917, norm:106.4633, tok/sec: 117070.60, flops:45.61, batch-reuse:1
@ 371 train 7.8235 , allloss: 31.0649, dt: 1112.88ms, fracRes: 0.0087, norm(attn): 0.3164, norm(output): 0.1406, norm(x): 0.1354, norm(y): 0.9915, norm:66.5304, tok/sec: 117776.95, flops:45.89, batch-reuse:1
@ 372 train 7.8176 , allloss: 18.9183, dt: 1122.27ms, fracRes: 0.0045, norm(attn): 0.2969, norm(output): 0.1416, norm(x): 0.1352, norm(y): 0.9910, norm:36.6505, tok/sec: 116792.00, flops:45.50, batch-reuse:1
@ 373 train 7.8568 , allloss: 15.7220, dt: 1127.09ms, fracRes: 0.0053, norm(attn): 0.3262, norm(output): 0.1426, norm(x): 0.1384, norm(y): 0.9904, norm:44.9742, tok/sec: 116292.13, flops:45.31, batch-reuse:1
@ 374 train 10.3664 , allloss: 19.2681, dt: 1122.57ms, fracRes: 0.0050, norm(attn): 0.4785, norm(output): 0.1387, norm(x): 0.1326, norm(y): 0.9889, norm:755.5247, tok/sec: 116761.09, flops:45.49, batch-reuse:1
@ 375 train 9.1967 , allloss: 14.2051, dt: 1142.96ms, fracRes: 0.0042, norm(attn): 0.4121, norm(output): 0.1689, norm(x): 0.1579, norm(y): 0.9885, norm:42.3852, tok/sec: 114677.67, flops:44.68, batch-reuse:1
@ 376 train 8.9192 , allloss: 13.8854, dt: 1141.85ms, fracRes: 0.0042, norm(attn): 0.4297, norm(output): 0.1689, norm(x): 0.1578, norm(y): 0.9887, norm:38.5718, tok/sec: 114788.80, flops:44.72, batch-reuse:1
@ 377 train 8.5271 , allloss: 13.6612, dt: 1120.87ms, fracRes: 0.0073, norm(attn): 0.4727, norm(output): 0.1504, norm(x): 0.1444, norm(y): 0.9898, norm:43.3183, tok/sec: 116938.17, flops:45.56, batch-reuse:1
@ 378 train 8.3523 , allloss: 14.3618, dt: 1136.74ms, fracRes: 0.0188, norm(attn): 0.4980, norm(output): 0.1299, norm(x): 0.1329, norm(y): 0.9911, norm:111.7277, tok/sec: 115305.17, flops:44.92, batch-reuse:1
@ 379 train 8.0752 , allloss: 14.8711, dt: 1118.09ms, fracRes: 0.0197, norm(attn): 0.5039, norm(output): 0.1079, norm(x): 0.1140, norm(y): 0.9918, norm:100.2765, tok/sec: 117228.65, flops:45.67, batch-reuse:1
@ 380 train 8.1298 , allloss: 14.4971, dt: 1119.05ms, fracRes: 0.0056, norm(attn): 0.4492, norm(output): 0.0938, norm(x): 0.0927, norm(y): 0.9905, norm:85.2718, tok/sec: 117128.19, flops:45.63, batch-reuse:1
@ 381 train 8.0442 , allloss: 16.5944, dt: 1116.65ms, fracRes: 0.0074, norm(attn): 0.5430, norm(output): 0.0864, norm(x): 0.0883, norm(y): 0.9918, norm:59.8871, tok/sec: 117379.40, flops:45.73, batch-reuse:1
@ 382 train 7.8347 , allloss: 17.4615, dt: 1115.97ms, fracRes: 0.0089, norm(attn): 0.5195, norm(output): 0.0928, norm(x): 0.0950, norm(y): 0.9914, norm:86.3282, tok/sec: 117451.42, flops:45.76, batch-reuse:1
@ 383 train 8.4550 , allloss: 16.8955, dt: 1120.88ms, fracRes: 0.0303, norm(attn): 0.4043, norm(output): 0.1406, norm(x): 0.1519, norm(y): 0.9889, norm:63.5247, tok/sec: 116937.03, flops:45.56, batch-reuse:1
@ 384 train 8.2143 , allloss: 16.0804, dt: 1124.53ms, fracRes: 0.0251, norm(attn): 0.3516, norm(output): 0.1514, norm(x): 0.1592, norm(y): 0.9886, norm:68.3734, tok/sec: 116556.66, flops:45.41, batch-reuse:1
@ 385 train 7.9449 , allloss: 14.8575, dt: 1113.56ms, fracRes: 0.0139, norm(attn): 0.3809, norm(output): 0.1504, norm(x): 0.1515, norm(y): 0.9892, norm:101.6436, tok/sec: 117705.63, flops:45.86, batch-reuse:1
@ 386 train 9.2264 , allloss: 18.3175, dt: 1120.54ms, fracRes: 0.0171, norm(attn): 0.5234, norm(output): 0.1621, norm(x): 0.1636, norm(y): 0.9913, norm:252.1407, tok/sec: 116972.53, flops:45.57, batch-reuse:1
@ 387 train 8.5335 , allloss: 15.0032, dt: 1133.80ms, fracRes: 0.0176, norm(attn): 0.4570, norm(output): 0.1846, norm(x): 0.1828, norm(y): 0.9897, norm:76.6441, tok/sec: 115603.99, flops:45.04, batch-reuse:1
@ 388 train 8.6459 , allloss: 15.4844, dt: 1146.42ms, fracRes: 0.0181, norm(attn): 0.4355, norm(output): 0.1885, norm(x): 0.1874, norm(y): 0.9892, norm:100.8448, tok/sec: 114331.21, flops:44.54, batch-reuse:1
@ 389 train 9.3151 , allloss: 16.9605, dt: 1134.00ms, fracRes: 0.0148, norm(attn): 0.4180, norm(output): 0.1826, norm(x): 0.1798, norm(y): 0.9894, norm:84.9246, tok/sec: 115583.38, flops:45.03, batch-reuse:1
@ 390 train 10.0178 , allloss: 22.9695, dt: 1117.14ms, fracRes: 0.0052, norm(attn): 0.3906, norm(output): 0.1621, norm(x): 0.1555, norm(y): 0.9912, norm:102.3823, tok/sec: 117328.35, flops:45.71, batch-reuse:1
@ 391 train 9.5400 , allloss: 33.5361, dt: 1112.32ms, fracRes: 0.0065, norm(attn): 0.3438, norm(output): 0.1387, norm(x): 0.1323, norm(y): 0.9920, norm:319.2390, tok/sec: 117836.22, flops:45.91, batch-reuse:1
@ 392 train 8.9377 , allloss: 26.7726, dt: 1107.49ms, fracRes: 0.0087, norm(attn): 0.3770, norm(output): 0.1299, norm(x): 0.1296, norm(y): 0.9917, norm:109.6339, tok/sec: 118350.45, flops:46.11, batch-reuse:1
@ 393 train 8.4335 , allloss: 23.8611, dt: 1114.84ms, fracRes: 0.0304, norm(attn): 0.3887, norm(output): 0.1455, norm(x): 0.1581, norm(y): 0.9929, norm:102.6755, tok/sec: 117570.43, flops:45.81, batch-reuse:1
@ 394 train 8.6012 , allloss: 24.1225, dt: 1125.56ms, fracRes: 0.0322, norm(attn): 0.4199, norm(output): 0.1572, norm(x): 0.1706, norm(y): 0.9927, norm:120.3068, tok/sec: 116450.79, flops:45.37, batch-reuse:1
@ 395 train 8.7152 , allloss: 26.2286, dt: 1147.08ms, fracRes: 0.0152, norm(attn): 0.4258, norm(output): 0.1621, norm(x): 0.1641, norm(y): 0.9921, norm:122.1960, tok/sec: 114266.03, flops:44.52, batch-reuse:1
@ 396 train 8.1668 , allloss: 42.7966, dt: 1121.78ms, fracRes: 0.0085, norm(attn): 0.4395, norm(output): 0.1758, norm(x): 0.1709, norm(y): 0.9917, norm:95.8882, tok/sec: 116843.01, flops:45.52, batch-reuse:1
@ 397 train 10.5509 , allloss: 31.4735, dt: 1123.11ms, fracRes: 0.0051, norm(attn): 0.4688, norm(output): 0.1963, norm(x): 0.1886, norm(y): 0.9906, norm:415.8166, tok/sec: 116704.58, flops:45.47, batch-reuse:1
@ 398 train 8.2500 , allloss: 43.9300, dt: 1124.69ms, fracRes: 0.0055, norm(attn): 0.4355, norm(output): 0.1885, norm(x): 0.1810, norm(y): 0.9908, norm:126.8193, tok/sec: 116540.38, flops:45.40, batch-reuse:1
@ 399 train 8.7630 , allloss: 29.7163, dt: 1138.92ms, fracRes: 0.0046, norm(attn): 0.4395, norm(output): 0.2021, norm(x): 0.1937, norm(y): 0.9897, norm:257.8556, tok/sec: 115084.22, flops:44.84, batch-reuse:1
@ 400 train 10.2642 , allloss: 49.5370, dt: 1132.57ms, fracRes: 0.0052, norm(attn): 0.4629, norm(output): 0.3125, norm(x): 0.2608, norm(y): 0.9907, norm:291.4967, tok/sec: 115729.78, flops:45.09, batch-reuse:1
@ 401 train 9.8417 , allloss: 50.9933, dt: 1124.40ms, fracRes: 0.0068, norm(attn): 0.4746, norm(output): 0.3594, norm(x): 0.3121, norm(y): 0.9906, norm:223.8755, tok/sec: 116570.72, flops:45.42, batch-reuse:1
@ 402 train 15.8030 , allloss: 36.3244, dt: 1142.45ms, fracRes: 0.0027, norm(attn): 0.4727, norm(output): 0.2793, norm(x): 0.2652, norm(y): 0.9887, norm:854.7499, tok/sec: 114728.84, flops:44.70, batch-reuse:1
@ 403 train 7.9004 , allloss: 57.9490, dt: 1133.88ms, fracRes: 0.0067, norm(attn): 0.5039, norm(output): 0.3496, norm(x): 0.3258, norm(y): 0.9901, norm:250.2057, tok/sec: 115595.60, flops:45.04, batch-reuse:1
@ 404 train 7.8465 , allloss: 60.1272, dt: 1141.18ms, fracRes: 0.0032, norm(attn): 0.5312, norm(output): 0.3770, norm(x): 0.3372, norm(y): 0.9892, norm:276.2086, tok/sec: 114856.84, flops:44.75, batch-reuse:1
@ 405 train 17.4622 , allloss: 34.2138, dt: 1126.70ms, fracRes: 0.0033, norm(attn): 0.6289, norm(output): 0.4082, norm(x): 0.3840, norm(y): 0.9880, norm:302.5768, tok/sec: 116332.27, flops:45.32, batch-reuse:1
@ 406 train 16.9973 , allloss: 35.1928, dt: 1116.24ms, fracRes: 0.0036, norm(attn): 0.8242, norm(output): 0.5312, norm(x): 0.4871, norm(y): 0.9883, norm:189.3935, tok/sec: 117422.80, flops:45.75, batch-reuse:1
@ 407 train 16.5567 , allloss: 38.7577, dt: 1126.36ms, fracRes: 0.0041, norm(attn): 1.0156, norm(output): 0.6875, norm(x): 0.6230, norm(y): 0.9886, norm:148.3041, tok/sec: 116368.19, flops:45.34, batch-reuse:1
@ 408 train 16.0944 , allloss: 44.4505, dt: 1113.33ms, fracRes: 0.0045, norm(attn): 1.2422, norm(output): 0.8789, norm(x): 0.8046, norm(y): 0.9889, norm:102.3354, tok/sec: 117729.73, flops:45.87, batch-reuse:1
@ 409 train 15.7153 , allloss: 52.3271, dt: 1120.62ms, fracRes: 0.0048, norm(attn): 1.4219, norm(output): 1.1250, norm(x): 1.0159, norm(y): 0.9893, norm:114.0493, tok/sec: 116963.82, flops:45.57, batch-reuse:1
@ 410 train 15.2111 , allloss: 58.6280, dt: 1141.39ms, fracRes: 0.0050, norm(attn): 1.4531, norm(output): 1.1797, norm(x): 1.0619, norm(y): 0.9898, norm:242.6657, tok/sec: 114835.15, flops:44.74, batch-reuse:1
@ 411 train 14.5553 , allloss: 63.3856, dt: 1136.95ms, fracRes: 0.0051, norm(attn): 1.2969, norm(output): 1.0391, norm(x): 0.9257, norm(y): 0.9904, norm:209.5908, tok/sec: 115284.04, flops:44.91, batch-reuse:1
@ 412 train 8.2113 , allloss: 48.2209, dt: 1129.99ms, fracRes: 0.0043, norm(attn): 1.0625, norm(output): 1.2109, norm(x): 1.0906, norm(y): 0.9925, norm:704.2972, tok/sec: 115994.28, flops:45.19, batch-reuse:1
@ 413 train 7.6647 , allloss: 51.0813, dt: 1115.88ms, fracRes: 0.0060, norm(attn): 1.2266, norm(output): 1.3906, norm(x): 1.2626, norm(y): 0.9924, norm:524.1147, tok/sec: 117460.76, flops:45.76, batch-reuse:1
@ 414 train 7.8819 , allloss: 43.5309, dt: 1116.83ms, fracRes: 0.0087, norm(attn): 1.1797, norm(output): 1.1172, norm(x): 1.0171, norm(y): 0.9921, norm:448.4536, tok/sec: 117360.96, flops:45.72, batch-reuse:1
@ 415 train 7.7889 , allloss: 35.2867, dt: 1120.45ms, fracRes: 0.0159, norm(attn): 1.0938, norm(output): 0.7578, norm(x): 0.6911, norm(y): 0.9917, norm:317.0384, tok/sec: 116981.77, flops:45.58, batch-reuse:1
@ 416 train 10.0989 , allloss: 52.8353, dt: 1124.76ms, fracRes: 0.0157, norm(attn): 0.7344, norm(output): 0.3926, norm(x): 0.3503, norm(y): 0.9906, norm:232.5109, tok/sec: 116533.68, flops:45.40, batch-reuse:1
@ 417 train 8.3885 , allloss: 51.0607, dt: 1133.74ms, fracRes: 0.0100, norm(attn): 0.6914, norm(output): 0.3477, norm(x): 0.3204, norm(y): 0.9899, norm:98.1794, tok/sec: 115609.92, flops:45.04, batch-reuse:1
@ 418 train 8.7355 , allloss: 48.2718, dt: 1127.27ms, fracRes: 0.0105, norm(attn): 0.8086, norm(output): 0.3770, norm(x): 0.3502, norm(y): 0.9894, norm:120.9118, tok/sec: 116274.32, flops:45.30, batch-reuse:1
@ 419 train 10.7135 , allloss: 51.4041, dt: 1131.44ms, fracRes: 0.0095, norm(attn): 0.6133, norm(output): 0.4336, norm(x): 0.3908, norm(y): 0.9895, norm:346.3447, tok/sec: 115845.62, flops:45.13, batch-reuse:1
@ 420 train 8.7448 , allloss: 37.1509, dt: 1129.94ms, fracRes: 0.0191, norm(attn): 0.9336, norm(output): 0.4375, norm(x): 0.4049, norm(y): 0.9893, norm:207.6324, tok/sec: 115999.54, flops:45.19, batch-reuse:1
@ 421 train 8.4588 , allloss: 36.3713, dt: 1130.78ms, fracRes: 0.0074, norm(attn): 0.8828, norm(output): 0.4023, norm(x): 0.3669, norm(y): 0.9901, norm:180.9734, tok/sec: 115913.11, flops:45.16, batch-reuse:1
@ 422 train 8.3325 , allloss: 32.3052, dt: 1145.22ms, fracRes: 0.0048, norm(attn): 0.7305, norm(output): 0.3086, norm(x): 0.2833, norm(y): 0.9913, norm:117.6690, tok/sec: 114451.87, flops:44.59, batch-reuse:1
@ 423 train 8.3567 , allloss: 30.7225, dt: 1136.14ms, fracRes: 0.0091, norm(attn): 0.4824, norm(output): 0.1895, norm(x): 0.1763, norm(y): 0.9919, norm:99.6108, tok/sec: 115366.51, flops:44.95, batch-reuse:1
@ 424 train 7.8063 , allloss: 20.4443, dt: 1125.20ms, fracRes: 0.0030, norm(attn): 0.5781, norm(output): 0.1357, norm(x): 0.1295, norm(y): 0.9903, norm:77.5633, tok/sec: 116487.49, flops:45.38, batch-reuse:1
@ 425 train 7.9541 , allloss: 19.5264, dt: 1137.70ms, fracRes: 0.0137, norm(attn): 0.4766, norm(output): 0.1299, norm(x): 0.1324, norm(y): 0.9902, norm:56.6457, tok/sec: 115207.65, flops:44.88, batch-reuse:1
@ 426 train 7.8221 , allloss: 18.8898, dt: 1137.07ms, fracRes: 0.0262, norm(attn): 0.4668, norm(output): 0.1396, norm(x): 0.1482, norm(y): 0.9908, norm:81.5732, tok/sec: 115272.17, flops:44.91, batch-reuse:1
@ 427 train 7.9584 , allloss: 18.3560, dt: 1135.05ms, fracRes: 0.0277, norm(attn): 0.4414, norm(output): 0.1504, norm(x): 0.1599, norm(y): 0.9912, norm:71.7405, tok/sec: 115476.48, flops:44.99, batch-reuse:1
@ 428 train 8.0957 , allloss: 17.8201, dt: 1124.31ms, fracRes: 0.0324, norm(attn): 0.4316, norm(output): 0.1543, norm(x): 0.1678, norm(y): 0.9914, norm:74.7587, tok/sec: 116580.37, flops:45.42, batch-reuse:1
@ 429 train 8.1555 , allloss: 16.4688, dt: 1116.64ms, fracRes: 0.0139, norm(attn): 0.4629, norm(output): 0.1504, norm(x): 0.1509, norm(y): 0.9910, norm:66.1881, tok/sec: 117380.28, flops:45.73, batch-reuse:1
@ 430 train 8.0713 , allloss: 16.2915, dt: 1130.55ms, fracRes: 0.0072, norm(attn): 0.4824, norm(output): 0.1562, norm(x): 0.1515, norm(y): 0.9906, norm:98.9330, tok/sec: 115936.62, flops:45.17, batch-reuse:1
@ 431 train 7.8028 , allloss: 16.2322, dt: 1122.80ms, fracRes: 0.0057, norm(attn): 0.4941, norm(output): 0.1748, norm(x): 0.1673, norm(y): 0.9909, norm:104.5495, tok/sec: 116736.84, flops:45.48, batch-reuse:1
@ 432 train 7.8072 , allloss: 16.5517, dt: 1143.46ms, fracRes: 0.0061, norm(attn): 0.5195, norm(output): 0.2314, norm(x): 0.2153, norm(y): 0.9917, norm:79.9511, tok/sec: 114627.87, flops:44.66, batch-reuse:1
@ 433 train 7.8358 , allloss: 17.7221, dt: 1111.34ms, fracRes: 0.0101, norm(attn): 0.5703, norm(output): 0.3008, norm(x): 0.2829, norm(y): 0.9926, norm:40.6511, tok/sec: 117941.03, flops:45.95, batch-reuse:1
@ 434 train 8.4936 , allloss: 19.2397, dt: 1123.81ms, fracRes: 0.0202, norm(attn): 0.5977, norm(output): 0.3652, norm(x): 0.3446, norm(y): 0.9930, norm:154.1282, tok/sec: 116632.18, flops:45.44, batch-reuse:1
@ 435 train 7.8370 , allloss: 20.1848, dt: 1110.71ms, fracRes: 0.0323, norm(attn): 0.6250, norm(output): 0.4375, norm(x): 0.4132, norm(y): 0.9934, norm:111.2893, tok/sec: 118006.95, flops:45.98, batch-reuse:1
@ 436 train 7.8850 , allloss: 21.0686, dt: 1112.56ms, fracRes: 0.0364, norm(attn): 0.6133, norm(output): 0.4785, norm(x): 0.4573, norm(y): 0.9930, norm:122.2674, tok/sec: 117810.87, flops:45.90, batch-reuse:1
@ 437 train 7.7874 , allloss: 20.9220, dt: 1118.38ms, fracRes: 0.0429, norm(attn): 0.5703, norm(output): 0.5000, norm(x): 0.4777, norm(y): 0.9925, norm:105.8850, tok/sec: 117198.38, flops:45.66, batch-reuse:1
@ 438 train 7.8954 , allloss: 20.9262, dt: 1147.88ms, fracRes: 0.0434, norm(attn): 0.5039, norm(output): 0.4883, norm(x): 0.4653, norm(y): 0.9918, norm:100.2821, tok/sec: 114186.45, flops:44.49, batch-reuse:1
@ 439 train 7.7461 , allloss: 19.9557, dt: 1122.37ms, fracRes: 0.0424, norm(attn): 0.4453, norm(output): 0.4414, norm(x): 0.4316, norm(y): 0.9910, norm:93.2874, tok/sec: 116781.25, flops:45.50, batch-reuse:1
@ 440 train 7.8310 , allloss: 20.4296, dt: 1136.81ms, fracRes: 0.0370, norm(attn): 0.4062, norm(output): 0.4023, norm(x): 0.3865, norm(y): 0.9902, norm:85.5535, tok/sec: 115297.60, flops:44.92, batch-reuse:1
@ 441 train 8.3737 , allloss: 19.8034, dt: 1121.77ms, fracRes: 0.0173, norm(attn): 0.3828, norm(output): 0.3438, norm(x): 0.3275, norm(y): 0.9895, norm:141.8491, tok/sec: 116843.83, flops:45.52, batch-reuse:1
@ 442 train 8.4211 , allloss: 18.5293, dt: 1126.37ms, fracRes: 0.0103, norm(attn): 0.3906, norm(output): 0.3418, norm(x): 0.3192, norm(y): 0.9885, norm:73.0105, tok/sec: 116367.21, flops:45.34, batch-reuse:1
@ 443 train 8.1940 , allloss: 17.1404, dt: 1137.35ms, fracRes: 0.0123, norm(attn): 0.4102, norm(output): 0.3301, norm(x): 0.3104, norm(y): 0.9878, norm:49.6725, tok/sec: 115242.91, flops:44.90, batch-reuse:1
@ 444 train 8.0244 , allloss: 15.5642, dt: 1141.46ms, fracRes: 0.0125, norm(attn): 0.4375, norm(output): 0.2832, norm(x): 0.2711, norm(y): 0.9872, norm:65.5792, tok/sec: 114828.17, flops:44.74, batch-reuse:1
@ 445 train 7.8543 , allloss: 14.0930, dt: 1133.03ms, fracRes: 0.0135, norm(attn): 0.4355, norm(output): 0.2207, norm(x): 0.2119, norm(y): 0.9869, norm:77.8884, tok/sec: 115682.34, flops:45.07, batch-reuse:1
@ 446 train 7.8638 , allloss: 14.7924, dt: 1129.88ms, fracRes: 0.0075, norm(attn): 0.4375, norm(output): 0.1562, norm(x): 0.1506, norm(y): 0.9866, norm:49.4475, tok/sec: 116004.88, flops:45.20, batch-reuse:1
@ 447 train 8.0279 , allloss: 24.2936, dt: 1134.96ms, fracRes: 0.0031, norm(attn): 0.4375, norm(output): 0.1206, norm(x): 0.1148, norm(y): 0.9873, norm:96.6563, tok/sec: 115486.01, flops:44.99, batch-reuse:1
@ 448 train 7.7728 , allloss: 22.7104, dt: 1136.10ms, fracRes: 0.0014, norm(attn): 0.4883, norm(output): 0.1006, norm(x): 0.0943, norm(y): 0.9882, norm:37.2420, tok/sec: 115369.95, flops:44.95, batch-reuse:1
@ 449 train 7.6738 , allloss: 22.6044, dt: 1111.48ms, fracRes: 0.0009, norm(attn): 0.5625, norm(output): 0.0884, norm(x): 0.0845, norm(y): 0.9890, norm:45.4887, tok/sec: 117925.22, flops:45.94, batch-reuse:1
@ 450 train 7.7725 , allloss: 14.9304, dt: 1126.83ms, fracRes: 0.0008, norm(attn): 0.6055, norm(output): 0.0771, norm(x): 0.0729, norm(y): 0.9898, norm:29.1398, tok/sec: 116319.17, flops:45.32, batch-reuse:1
@ 451 train 8.5164 , allloss: 17.5163, dt: 1139.24ms, fracRes: 0.0036, norm(attn): 0.5391, norm(output): 0.0664, norm(x): 0.0649, norm(y): 0.9905, norm:562.0876, tok/sec: 115052.16, flops:44.82, batch-reuse:1
@ 452 train 8.6306 , allloss: 15.5646, dt: 1119.08ms, fracRes: 0.0022, norm(attn): 0.6953, norm(output): 0.1006, norm(x): 0.0957, norm(y): 0.9899, norm:69.3202, tok/sec: 117124.95, flops:45.63, batch-reuse:1
@ 453 train 8.1923 , allloss: 16.3241, dt: 1135.20ms, fracRes: 0.0174, norm(attn): 0.6875, norm(output): 0.1201, norm(x): 0.1251, norm(y): 0.9903, norm:62.5700, tok/sec: 115461.74, flops:44.98, batch-reuse:1
@ 454 train 7.8113 , allloss: 15.3828, dt: 1135.20ms, fracRes: 0.0324, norm(attn): 0.6055, norm(output): 0.1143, norm(x): 0.1293, norm(y): 0.9907, norm:87.3632, tok/sec: 115461.49, flops:44.98, batch-reuse:1
@ 455 train 8.3032 , allloss: 14.1275, dt: 1115.96ms, fracRes: 0.0063, norm(attn): 0.5312, norm(output): 0.0996, norm(x): 0.0970, norm(y): 0.9900, norm:122.7894, tok/sec: 117452.60, flops:45.76, batch-reuse:1
@ 456 train 7.7978 , allloss: 17.6442, dt: 1127.66ms, fracRes: 0.0270, norm(attn): 0.5234, norm(output): 0.1094, norm(x): 0.1203, norm(y): 0.9896, norm:63.3227, tok/sec: 116233.42, flops:45.28, batch-reuse:1
@ 457 train 7.9952 , allloss: 22.2639, dt: 1125.45ms, fracRes: 0.0294, norm(attn): 0.4961, norm(output): 0.1074, norm(x): 0.1215, norm(y): 0.9888, norm:54.8013, tok/sec: 116462.29, flops:45.37, batch-reuse:1
@ 458 train 8.2187 , allloss: 27.3575, dt: 1116.70ms, fracRes: 0.0029, norm(attn): 0.4609, norm(output): 0.1021, norm(x): 0.1004, norm(y): 0.9876, norm:81.3037, tok/sec: 117373.89, flops:45.73, batch-reuse:1
@ 459 train 7.8890 , allloss: 30.2729, dt: 1116.99ms, fracRes: 0.0056, norm(attn): 0.4668, norm(output): 0.1016, norm(x): 0.1013, norm(y): 0.9872, norm:73.8241, tok/sec: 117344.27, flops:45.72, batch-reuse:1
@ 460 train 10.9431 , allloss: 25.7439, dt: 1124.52ms, fracRes: 0.0086, norm(attn): 0.5273, norm(output): 0.1338, norm(x): 0.1292, norm(y): 0.9873, norm:79.7380, tok/sec: 116558.61, flops:45.41, batch-reuse:1
@ 461 train 11.0967 , allloss: 24.9032, dt: 1126.13ms, fracRes: 0.0095, norm(attn): 0.5117, norm(output): 0.1445, norm(x): 0.1383, norm(y): 0.9871, norm:76.3630, tok/sec: 116391.67, flops:45.35, batch-reuse:1
@ 462 train 10.4533 , allloss: 25.7203, dt: 1124.83ms, fracRes: 0.0131, norm(attn): 0.4707, norm(output): 0.1504, norm(x): 0.1467, norm(y): 0.9866, norm:169.4003, tok/sec: 116526.25, flops:45.40, batch-reuse:1
@ 463 train 8.6479 , allloss: 30.0849, dt: 1124.08ms, fracRes: 0.0034, norm(attn): 0.4609, norm(output): 0.1055, norm(x): 0.1021, norm(y): 0.9862, norm:139.7591, tok/sec: 116604.20, flops:45.43, batch-reuse:1
@ 464 train 7.8762 , allloss: 29.5211, dt: 1136.71ms, fracRes: 0.0025, norm(attn): 0.4375, norm(output): 0.1240, norm(x): 0.1187, norm(y): 0.9866, norm:60.7118, tok/sec: 115308.58, flops:44.92, batch-reuse:1
@ 465 train 10.0060 , allloss: 25.3407, dt: 1120.29ms, fracRes: 0.0022, norm(attn): 0.4727, norm(output): 0.1611, norm(x): 0.1494, norm(y): 0.9867, norm:149.1521, tok/sec: 116997.97, flops:45.58, batch-reuse:1
@ 466 train 7.9417 , allloss: 13.3324, dt: 1137.61ms, fracRes: 0.0015, norm(attn): 0.5703, norm(output): 0.1201, norm(x): 0.1130, norm(y): 0.9877, norm:51.2567, tok/sec: 115217.33, flops:44.89, batch-reuse:1
@ 467 train 7.8014 , allloss: 12.0562, dt: 1130.51ms, fracRes: 0.0014, norm(attn): 0.6875, norm(output): 0.1318, norm(x): 0.1221, norm(y): 0.9886, norm:24.5849, tok/sec: 115941.02, flops:45.17, batch-reuse:1
@ 468 train 7.6775 , allloss: 11.6122, dt: 1131.26ms, fracRes: 0.0019, norm(attn): 0.7383, norm(output): 0.1465, norm(x): 0.1387, norm(y): 0.9891, norm:22.9344, tok/sec: 115863.86, flops:45.14, batch-reuse:1
@ 469 train 7.6341 , allloss: 11.3495, dt: 1125.99ms, fracRes: 0.0063, norm(attn): 0.7148, norm(output): 0.1611, norm(x): 0.1550, norm(y): 0.9893, norm:26.8697, tok/sec: 116406.14, flops:45.35, batch-reuse:1
@ 470 train 7.7098 , allloss: 11.1745, dt: 1138.83ms, fracRes: 0.0082, norm(attn): 0.6914, norm(output): 0.1572, norm(x): 0.1520, norm(y): 0.9894, norm:44.5738, tok/sec: 115093.57, flops:44.84, batch-reuse:1
@ 471 train 7.5815 , allloss: 10.6841, dt: 1136.23ms, fracRes: 0.0061, norm(attn): 0.6406, norm(output): 0.1338, norm(x): 0.1300, norm(y): 0.9894, norm:35.6546, tok/sec: 115356.49, flops:44.94, batch-reuse:1
@ 472 train 7.7402 , allloss: 10.8537, dt: 1113.52ms, fracRes: 0.0059, norm(attn): 0.6328, norm(output): 0.1094, norm(x): 0.1075, norm(y): 0.9891, norm:45.0890, tok/sec: 117709.97, flops:45.86, batch-reuse:1
@ 473 train 7.7113 , allloss: 10.4923, dt: 1134.81ms, fracRes: 0.0040, norm(attn): 0.7266, norm(output): 0.1045, norm(x): 0.1011, norm(y): 0.9889, norm:31.2484, tok/sec: 115500.91, flops:45.00, batch-reuse:1
@ 474 train 7.6475 , allloss: 10.2526, dt: 1134.48ms, fracRes: 0.0029, norm(attn): 0.9961, norm(output): 0.1143, norm(x): 0.1091, norm(y): 0.9895, norm:94.1452, tok/sec: 115535.26, flops:45.01, batch-reuse:1
@ 475 train 8.5957 , allloss: 12.5026, dt: 1132.43ms, fracRes: 0.0015, norm(attn): 1.3906, norm(output): 0.1187, norm(x): 0.1114, norm(y): 0.9896, norm:588.5216, tok/sec: 115744.04, flops:45.09, batch-reuse:1
@ 476 train 7.7919 , allloss: 10.4919, dt: 1139.64ms, fracRes: 0.0010, norm(attn): 1.4141, norm(output): 0.1104, norm(x): 0.1037, norm(y): 0.9899, norm:85.8368, tok/sec: 115012.04, flops:44.81, batch-reuse:1
@ 477 train 7.9358 , allloss: 10.9338, dt: 1143.96ms, fracRes: 0.0015, norm(attn): 1.5078, norm(output): 0.1006, norm(x): 0.0956, norm(y): 0.9897, norm:87.2059, tok/sec: 114577.70, flops:44.64, batch-reuse:1
@ 478 train 8.8551 , allloss: 13.9481, dt: 1101.74ms, fracRes: 0.0459, norm(attn): 1.4922, norm(output): 0.1035, norm(x): 0.1319, norm(y): 0.9887, norm:411.6910, tok/sec: 118968.60, flops:46.35, batch-reuse:1
@ 479 train 7.8737 , allloss: 13.2291, dt: 1111.40ms, fracRes: 0.0055, norm(attn): 1.3047, norm(output): 0.0732, norm(x): 0.0744, norm(y): 0.9886, norm:81.9351, tok/sec: 117934.55, flops:45.95, batch-reuse:1
@ 480 train 7.7018 , allloss: 15.2719, dt: 1128.90ms, fracRes: 0.0161, norm(attn): 1.3594, norm(output): 0.0732, norm(x): 0.0837, norm(y): 0.9882, norm:93.3509, tok/sec: 116105.64, flops:45.23, batch-reuse:1
@ 481 train 8.0380 , allloss: 16.6567, dt: 1118.89ms, fracRes: 0.0388, norm(attn): 1.4297, norm(output): 0.0854, norm(x): 0.1143, norm(y): 0.9879, norm:106.9315, tok/sec: 117145.06, flops:45.64, batch-reuse:1
@ 482 train 8.5370 , allloss: 16.8594, dt: 1125.97ms, fracRes: 0.0957, norm(attn): 1.4375, norm(output): 0.1157, norm(x): 0.1830, norm(y): 0.9879, norm:109.6494, tok/sec: 116408.43, flops:45.35, batch-reuse:1
@ 483 train 9.1000 , allloss: 17.9106, dt: 1128.13ms, fracRes: 0.1308, norm(attn): 1.4766, norm(output): 0.1602, norm(x): 0.2456, norm(y): 0.9877, norm:69.6124, tok/sec: 116185.69, flops:45.27, batch-reuse:1
@ 484 train 9.5014 , allloss: 19.7207, dt: 1134.46ms, fracRes: 0.1895, norm(attn): 1.3828, norm(output): 0.2002, norm(x): 0.3171, norm(y): 0.9874, norm:88.9110, tok/sec: 115537.13, flops:45.01, batch-reuse:1
@ 485 train 9.5302 , allloss: 20.0618, dt: 1120.13ms, fracRes: 0.1998, norm(attn): 1.3047, norm(output): 0.2090, norm(x): 0.3313, norm(y): 0.9873, norm:195.2411, tok/sec: 117015.13, flops:45.59, batch-reuse:1
@ 486 train 9.2785 , allloss: 19.1281, dt: 1144.63ms, fracRes: 0.1610, norm(attn): 1.3125, norm(output): 0.1973, norm(x): 0.2918, norm(y): 0.9874, norm:107.5016, tok/sec: 114510.66, flops:44.61, batch-reuse:1
@ 487 train 8.5840 , allloss: 17.4582, dt: 1125.34ms, fracRes: 0.1146, norm(attn): 1.1641, norm(output): 0.1445, norm(x): 0.2162, norm(y): 0.9876, norm:119.7144, tok/sec: 116472.80, flops:45.38, batch-reuse:1
@ 488 train 7.7491 , allloss: 15.9855, dt: 1128.68ms, fracRes: 0.1312, norm(attn): 1.0156, norm(output): 0.0981, norm(x): 0.1940, norm(y): 0.9880, norm:98.8472, tok/sec: 116128.38, flops:45.24, batch-reuse:1
@ 489 train 7.8889 , allloss: 16.3790, dt: 1136.68ms, fracRes: 0.0780, norm(attn): 0.8672, norm(output): 0.0679, norm(x): 0.1291, norm(y): 0.9879, norm:55.0071, tok/sec: 115311.58, flops:44.93, batch-reuse:1
@ 490 train 7.8048 , allloss: 17.0776, dt: 1133.53ms, fracRes: 0.0303, norm(attn): 0.7852, norm(output): 0.0596, norm(x): 0.0802, norm(y): 0.9872, norm:69.8892, tok/sec: 115631.73, flops:45.05, batch-reuse:1
@ 491 train 8.7990 , allloss: 25.2389, dt: 1142.30ms, fracRes: 0.0185, norm(attn): 0.7812, norm(output): 0.0894, norm(x): 0.0947, norm(y): 0.9873, norm:135.5279, tok/sec: 114743.90, flops:44.70, batch-reuse:1
@ 492 train 9.2689 , allloss: 28.7228, dt: 1137.87ms, fracRes: 0.0781, norm(attn): 0.8086, norm(output): 0.1309, norm(x): 0.1758, norm(y): 0.9877, norm:83.4067, tok/sec: 115190.78, flops:44.88, batch-reuse:1
@ 493 train 9.0224 , allloss: 39.3781, dt: 1119.40ms, fracRes: 0.0971, norm(attn): 0.7344, norm(output): 0.1562, norm(x): 0.2129, norm(y): 0.9875, norm:96.4146, tok/sec: 117091.27, flops:45.62, batch-reuse:1
@ 494 train 8.8310 , allloss: 38.4740, dt: 1116.30ms, fracRes: 0.1009, norm(attn): 0.6523, norm(output): 0.1416, norm(x): 0.2030, norm(y): 0.9874, norm:113.4435, tok/sec: 117415.98, flops:45.75, batch-reuse:1
@ 495 train 8.2003 , allloss: 34.6103, dt: 1124.09ms, fracRes: 0.0374, norm(attn): 0.5781, norm(output): 0.1025, norm(x): 0.1247, norm(y): 0.9871, norm:121.1746, tok/sec: 116602.62, flops:45.43, batch-reuse:1
@ 496 train 8.1710 , allloss: 30.4074, dt: 1120.21ms, fracRes: 0.0134, norm(attn): 0.5977, norm(output): 0.0771, norm(x): 0.0835, norm(y): 0.9864, norm:72.5966, tok/sec: 117006.99, flops:45.59, batch-reuse:1
@ 497 train 7.7751 , allloss: 27.7657, dt: 1121.66ms, fracRes: 0.0047, norm(attn): 0.6406, norm(output): 0.0723, norm(x): 0.0729, norm(y): 0.9865, norm:52.2965, tok/sec: 116855.10, flops:45.53, batch-reuse:1
@ 498 train 7.8917 , allloss: 24.5356, dt: 1128.71ms, fracRes: 0.0026, norm(attn): 0.8516, norm(output): 0.0703, norm(x): 0.0705, norm(y): 0.9876, norm:40.4394, tok/sec: 116125.46, flops:45.24, batch-reuse:1
@ 499 train 7.8693 , allloss: 18.8577, dt: 1133.27ms, fracRes: 0.0019, norm(attn): 0.9727, norm(output): 0.0771, norm(x): 0.0750, norm(y): 0.9889, norm:35.9583, tok/sec: 115658.32, flops:45.06, batch-reuse:1
@ 500 train 7.7433 , allloss: 16.9545, dt: 1133.47ms, fracRes: 0.0023, norm(attn): 0.9805, norm(output): 0.0845, norm(x): 0.0816, norm(y): 0.9893, norm:43.0550, tok/sec: 115637.79, flops:45.05, batch-reuse:1
@ 501 train 7.7170 , allloss: 15.4533, dt: 1107.22ms, fracRes: 0.0023, norm(attn): 0.9922, norm(output): 0.0928, norm(x): 0.0890, norm(y): 0.9897, norm:55.3783, tok/sec: 118379.63, flops:46.12, batch-reuse:1
@ 502 train 7.9488 , allloss: 17.4190, dt: 1115.27ms, fracRes: 0.0071, norm(attn): 0.9336, norm(output): 0.1045, norm(x): 0.1033, norm(y): 0.9899, norm:60.9089, tok/sec: 117524.46, flops:45.79, batch-reuse:1
@ 503 train 8.7796 , allloss: 22.3774, dt: 1122.06ms, fracRes: 0.0586, norm(attn): 0.6953, norm(output): 0.1123, norm(x): 0.1479, norm(y): 0.9905, norm:95.2827, tok/sec: 116813.29, flops:45.51, batch-reuse:1
@ 504 train 8.9342 , allloss: 25.5692, dt: 1126.64ms, fracRes: 0.0183, norm(attn): 0.5742, norm(output): 0.1118, norm(x): 0.1183, norm(y): 0.9906, norm:91.0979, tok/sec: 116338.45, flops:45.33, batch-reuse:1
@ 505 train 7.9337 , allloss: 23.0778, dt: 1105.33ms, fracRes: 0.0150, norm(attn): 0.6484, norm(output): 0.0972, norm(x): 0.1027, norm(y): 0.9907, norm:68.7020, tok/sec: 118581.50, flops:46.20, batch-reuse:1
@ 506 train 7.8680 , allloss: 18.3418, dt: 1116.31ms, fracRes: 0.0276, norm(attn): 0.6562, norm(output): 0.0991, norm(x): 0.1158, norm(y): 0.9910, norm:84.6115, tok/sec: 117415.38, flops:45.75, batch-reuse:1
@ 507 train 8.5198 , allloss: 16.7909, dt: 1117.57ms, fracRes: 0.0820, norm(attn): 0.6992, norm(output): 0.1357, norm(x): 0.1860, norm(y): 0.9911, norm:132.2771, tok/sec: 117283.52, flops:45.69, batch-reuse:1
@ 508 train 8.7000 , allloss: 17.6320, dt: 1130.40ms, fracRes: 0.1299, norm(attn): 0.7344, norm(output): 0.1318, norm(x): 0.2185, norm(y): 0.9899, norm:180.0605, tok/sec: 115951.78, flops:45.17, batch-reuse:1
@ 509 train 8.1553 , allloss: 15.7743, dt: 1125.49ms, fracRes: 0.1217, norm(attn): 0.7578, norm(output): 0.1011, norm(x): 0.1882, norm(y): 0.9884, norm:207.4830, tok/sec: 116458.02, flops:45.37, batch-reuse:1
@ 510 train 7.7337 , allloss: 14.3645, dt: 1121.76ms, fracRes: 0.0573, norm(attn): 0.9062, norm(output): 0.0811, norm(x): 0.1211, norm(y): 0.9874, norm:102.5146, tok/sec: 116845.42, flops:45.52, batch-reuse:1
@ 511 train 7.7781 , allloss: 13.9538, dt: 1127.39ms, fracRes: 0.0298, norm(attn): 1.0078, norm(output): 0.0781, norm(x): 0.0948, norm(y): 0.9862, norm:146.4168, tok/sec: 116261.09, flops:45.30, batch-reuse:1
@ 512 train 8.6978 , allloss: 13.5458, dt: 1136.04ms, fracRes: 0.0163, norm(attn): 1.0078, norm(output): 0.0703, norm(x): 0.0803, norm(y): 0.9843, norm:180.1110, tok/sec: 115376.49, flops:44.95, batch-reuse:1
@ 513 train 7.8001 , allloss: 13.6146, dt: 1147.48ms, fracRes: 0.0141, norm(attn): 1.0938, norm(output): 0.0703, norm(x): 0.0793, norm(y): 0.9853, norm:75.5581, tok/sec: 114225.50, flops:44.50, batch-reuse:1
@ 514 train 7.7334 , allloss: 14.8139, dt: 1139.90ms, fracRes: 0.0545, norm(attn): 1.0625, norm(output): 0.0781, norm(x): 0.1191, norm(y): 0.9861, norm:76.9656, tok/sec: 114985.10, flops:44.80, batch-reuse:1
@ 515 train 7.7430 , allloss: 16.1523, dt: 1134.44ms, fracRes: 0.1343, norm(attn): 1.0156, norm(output): 0.0942, norm(x): 0.1924, norm(y): 0.9859, norm:197.4296, tok/sec: 115539.10, flops:45.01, batch-reuse:1
@ 516 train 7.8652 , allloss: 14.7595, dt: 1122.18ms, fracRes: 0.0900, norm(attn): 1.0078, norm(output): 0.0991, norm(x): 0.1606, norm(y): 0.9851, norm:225.6567, tok/sec: 116801.67, flops:45.51, batch-reuse:1
@ 517 train 7.9952 , allloss: 13.9331, dt: 1126.86ms, fracRes: 0.0364, norm(attn): 0.9297, norm(output): 0.0830, norm(x): 0.1059, norm(y): 0.9840, norm:121.9853, tok/sec: 116316.34, flops:45.32, batch-reuse:1
@ 518 train 7.8120 , allloss: 20.7200, dt: 1118.79ms, fracRes: 0.0086, norm(attn): 0.8086, norm(output): 0.0664, norm(x): 0.0698, norm(y): 0.9830, norm:48.2445, tok/sec: 117155.32, flops:45.64, batch-reuse:1
@ 519 train 7.8239 , allloss: 16.2222, dt: 1129.91ms, fracRes: 0.0084, norm(attn): 0.9531, norm(output): 0.0664, norm(x): 0.0687, norm(y): 0.9845, norm:81.8528, tok/sec: 116001.65, flops:45.19, batch-reuse:1
@ 520 train 8.3272 , allloss: 16.9591, dt: 1119.47ms, fracRes: 0.0051, norm(attn): 0.9336, norm(output): 0.0732, norm(x): 0.0728, norm(y): 0.9840, norm:109.7762, tok/sec: 117083.82, flops:45.62, batch-reuse:1
@ 521 train 7.9472 , allloss: 17.6971, dt: 1129.95ms, fracRes: 0.0054, norm(attn): 0.7773, norm(output): 0.0688, norm(x): 0.0701, norm(y): 0.9836, norm:64.6219, tok/sec: 115998.32, flops:45.19, batch-reuse:1
@ 522 train 7.6738 , allloss: 13.8053, dt: 1128.95ms, fracRes: 0.0026, norm(attn): 0.8242, norm(output): 0.0649, norm(x): 0.0645, norm(y): 0.9833, norm:57.4744, tok/sec: 116100.91, flops:45.23, batch-reuse:1
@ 523 train 9.8151 , allloss: 21.6834, dt: 1129.68ms, fracRes: 0.0027, norm(attn): 0.6250, norm(output): 0.0820, norm(x): 0.0799, norm(y): 0.9823, norm:301.9334, tok/sec: 116025.42, flops:45.20, batch-reuse:1
@ 524 train 8.1418 , allloss: 11.8058, dt: 1136.59ms, fracRes: 0.0024, norm(attn): 0.8281, norm(output): 0.0757, norm(x): 0.0743, norm(y): 0.9833, norm:82.5346, tok/sec: 115320.27, flops:44.93, batch-reuse:1
@ 525 train 7.7269 , allloss: 11.4724, dt: 1132.34ms, fracRes: 0.0017, norm(attn): 0.9336, norm(output): 0.0796, norm(x): 0.0772, norm(y): 0.9846, norm:60.2638, tok/sec: 115753.00, flops:45.10, batch-reuse:1
@ 526 train 7.7097 , allloss: 11.4498, dt: 1113.26ms, fracRes: 0.0015, norm(attn): 0.8867, norm(output): 0.0942, norm(x): 0.0906, norm(y): 0.9854, norm:54.5137, tok/sec: 117737.45, flops:45.87, batch-reuse:1
@ 527 train 7.7712 , allloss: 11.6624, dt: 1129.84ms, fracRes: 0.0027, norm(attn): 0.7969, norm(output): 0.1187, norm(x): 0.1132, norm(y): 0.9854, norm:34.9097, tok/sec: 116009.82, flops:45.20, batch-reuse:1
@ 528 train 7.8285 , allloss: 12.9529, dt: 1136.82ms, fracRes: 0.0047, norm(attn): 0.7500, norm(output): 0.1270, norm(x): 0.1230, norm(y): 0.9847, norm:40.0369, tok/sec: 115297.53, flops:44.92, batch-reuse:1
@ 529 train 8.0120 , allloss: 15.8509, dt: 1128.87ms, fracRes: 0.0112, norm(attn): 0.7109, norm(output): 0.1162, norm(x): 0.1157, norm(y): 0.9834, norm:152.6055, tok/sec: 116108.54, flops:45.24, batch-reuse:1
@ 530 train 7.8518 , allloss: 18.5248, dt: 1120.53ms, fracRes: 0.0023, norm(attn): 0.7617, norm(output): 0.1177, norm(x): 0.1111, norm(y): 0.9847, norm:56.3031, tok/sec: 116972.76, flops:45.57, batch-reuse:1
@ 531 train 8.0462 , allloss: 28.0823, dt: 1141.00ms, fracRes: 0.0161, norm(attn): 0.6328, norm(output): 0.1191, norm(x): 0.1227, norm(y): 0.9847, norm:84.1889, tok/sec: 114874.79, flops:44.76, batch-reuse:1
@ 532 train 7.6281 , allloss: 22.2781, dt: 1132.54ms, fracRes: 0.0119, norm(attn): 0.6797, norm(output): 0.1157, norm(x): 0.1160, norm(y): 0.9851, norm:77.1166, tok/sec: 115732.29, flops:45.09, batch-reuse:1
@ 533 train 7.7369 , allloss: 13.5886, dt: 1119.70ms, fracRes: 0.0011, norm(attn): 0.8633, norm(output): 0.1406, norm(x): 0.1311, norm(y): 0.9863, norm:64.3376, tok/sec: 117059.43, flops:45.61, batch-reuse:1
@ 534 train 7.6011 , allloss: 12.8333, dt: 1129.83ms, fracRes: 0.0012, norm(attn): 0.9492, norm(output): 0.1270, norm(x): 0.1194, norm(y): 0.9865, norm:64.7578, tok/sec: 116010.78, flops:45.20, batch-reuse:1
@ 535 train 8.1386 , allloss: 13.7313, dt: 1115.81ms, fracRes: 0.0018, norm(attn): 1.0547, norm(output): 0.0942, norm(x): 0.0909, norm(y): 0.9862, norm:111.6055, tok/sec: 117467.84, flops:45.77, batch-reuse:1
@ 536 train 8.4453 , allloss: 14.2888, dt: 1109.69ms, fracRes: 0.0045, norm(attn): 0.8477, norm(output): 0.1030, norm(x): 0.1010, norm(y): 0.9856, norm:75.4056, tok/sec: 118116.13, flops:46.02, batch-reuse:1
@ 537 train 7.8856 , allloss: 14.3734, dt: 1124.36ms, fracRes: 0.0062, norm(attn): 0.8242, norm(output): 0.1094, norm(x): 0.1073, norm(y): 0.9862, norm:46.1443, tok/sec: 116574.70, flops:45.42, batch-reuse:1
@ 538 train 7.6053 , allloss: 14.7178, dt: 1141.64ms, fracRes: 0.0125, norm(attn): 0.8086, norm(output): 0.1050, norm(x): 0.1087, norm(y): 0.9866, norm:48.2412, tok/sec: 114810.25, flops:44.73, batch-reuse:1
@ 539 train 8.3985 , allloss: 17.3437, dt: 1114.73ms, fracRes: 0.0259, norm(attn): 0.7188, norm(output): 0.1064, norm(x): 0.1193, norm(y): 0.9859, norm:68.9139, tok/sec: 117581.62, flops:45.81, batch-reuse:1
@ 540 train 9.4939 , allloss: 19.8602, dt: 1116.65ms, fracRes: 0.0169, norm(attn): 0.7500, norm(output): 0.0913, norm(x): 0.0988, norm(y): 0.9852, norm:124.1441, tok/sec: 117379.38, flops:45.73, batch-reuse:1
@ 541 train 8.1855 , allloss: 17.6516, dt: 1103.68ms, fracRes: 0.0137, norm(attn): 0.7461, norm(output): 0.0811, norm(x): 0.0875, norm(y): 0.9855, norm:75.3666, tok/sec: 118758.94, flops:46.27, batch-reuse:1
@ 542 train 7.8459 , allloss: 19.0906, dt: 1119.66ms, fracRes: 0.0123, norm(attn): 0.6562, norm(output): 0.0815, norm(x): 0.0874, norm(y): 0.9857, norm:41.4400, tok/sec: 117064.59, flops:45.61, batch-reuse:1
@ 543 train 8.9602 , allloss: 23.6863, dt: 1134.25ms, fracRes: 0.0585, norm(attn): 0.5938, norm(output): 0.0825, norm(x): 0.1252, norm(y): 0.9852, norm:279.4428, tok/sec: 115558.62, flops:45.02, batch-reuse:1
@ 544 train 7.9509 , allloss: 23.5880, dt: 1113.09ms, fracRes: 0.1146, norm(attn): 0.5898, norm(output): 0.1777, norm(x): 0.2489, norm(y): 0.9858, norm:110.5468, tok/sec: 117754.87, flops:45.88, batch-reuse:1
@ 545 train 10.0466 , allloss: 24.9837, dt: 1107.75ms, fracRes: 0.0738, norm(attn): 0.5352, norm(output): 0.3418, norm(x): 0.3558, norm(y): 0.9843, norm:185.6294, tok/sec: 118322.81, flops:46.10, batch-reuse:1
@ 546 train 10.6566 , allloss: 39.1056, dt: 1123.75ms, fracRes: 0.0719, norm(attn): 0.5078, norm(output): 0.7500, norm(x): 0.6777, norm(y): 0.9836, norm:837.0241, tok/sec: 116637.85, flops:45.44, batch-reuse:1
@ 547 train 10.6647 , allloss: 30.3661, dt: 1117.02ms, fracRes: 0.0704, norm(attn): 0.5312, norm(output): 0.6562, norm(x): 0.6087, norm(y): 0.9838, norm:554.3562, tok/sec: 117340.64, flops:45.72, batch-reuse:1
@ 548 train 10.4835 , allloss: 25.4599, dt: 1126.93ms, fracRes: 0.0609, norm(attn): 0.5938, norm(output): 0.5469, norm(x): 0.5226, norm(y): 0.9839, norm:110.2000, tok/sec: 116308.93, flops:45.31, batch-reuse:1
@ 549 train 9.8310 , allloss: 21.7549, dt: 1125.11ms, fracRes: 0.0370, norm(attn): 0.6250, norm(output): 0.4590, norm(x): 0.4312, norm(y): 0.9838, norm:97.2890, tok/sec: 116496.94, flops:45.39, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0135, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3086, 0.4629, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.7266, 0.1338, 0.0508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0113, 0.6953, 0.0388, 0.0349, 0.2188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0153, 0.6016, 0.0449, 0.0552, 0.2070, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0361, 0.3516, 0.0859, 0.0781, 0.2471, 0.1025, 0.0977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.0203, 0.1621, 0.0425, 0.0061, 0.0085, 0.0204, 0.6016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0068, 0.4609, 0.0187, 0.0210, 0.2793, 0.0320, 0.0466, 0.0081, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0518, 0.1523, 0.0471, 0.0620, 0.1211, 0.0942, 0.1348, 0.0378, 0.1631, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0044, 0.3457, 0.0173, 0.0247, 0.1797, 0.0820, 0.0294, 0.0030, 0.1289, 0.1338, 0.0498, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.0708, 0.1167, 0.1045, 0.0356, 0.0471, 0.1079, 0.0996, 0.0630, 0.0435, 0.0603, 0.1514, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.0388, 0.1094, 0.0762, 0.0315, 0.0320, 0.0391, 0.1289, 0.0344, 0.0410, 0.0308, 0.2158, 0.1143, 0.0000, 0.0000],
        [0.0075, 0.2656, 0.0103, 0.0177, 0.2090, 0.0466, 0.0415, 0.0050, 0.1279, 0.1084, 0.0342, 0.0062, 0.0067, 0.1133, 0.0000],
        [0.0303, 0.1846, 0.0640, 0.0339, 0.0991, 0.0474, 0.0608, 0.0145, 0.1328, 0.0645, 0.0615, 0.0334, 0.0266, 0.1074, 0.0396]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0020,  0.0007, -0.0335,  ...,  0.0361,  0.0120, -0.0395],
        [-0.0048,  0.0120,  0.0248,  ..., -0.0052, -0.0057,  0.0297],
        [ 0.0113, -0.0306, -0.0371,  ...,  0.0208,  0.0128, -0.0307],
        ...,
        [-0.0043, -0.0063,  0.0075,  ..., -0.0086,  0.0002,  0.0472],
        [ 0.0256,  0.0231, -0.0276,  ...,  0.0173,  0.0086,  0.0101],
        [-0.0206, -0.0129, -0.0038,  ...,  0.0151, -0.0359, -0.0022]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4805,  0.1768,  0.5234, -0.0581,  0.2002,  0.1533,  0.6445,  0.1040,  0.6094,  0.0913, -0.1030,  0.2432, -0.3613, -0.0928, -0.0449, -0.3203,  0.4062,  0.1494, -0.3691, -0.5625, -0.2227, -0.7891, -0.3711, -0.3965, -0.0374,  0.9844, -0.5703,  1.1484, -0.1953, -0.2197, -0.0461,  0.8008,
        -0.1436,  0.1670,  0.8984, -0.6445,  0.5039, -0.5469,  0.2500,  0.2715,  0.6719, -0.0271,  0.6016,  1.0234, -0.0767, -0.3398,  0.6250,  0.2891,  1.1328, -1.7969,  0.0386,  0.0072, -0.0215,  0.1475,  1.1016,  0.9336,  0.0415,  0.3945,  0.8945,  1.8984, -0.8672,  0.2852, -0.0737,  0.3984],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0113,  0.0149,  ..., -0.0245, -0.0077,  0.0408],
        [ 0.0244,  0.0291, -0.0756,  ...,  0.0036, -0.0080, -0.0254],
        [ 0.0323, -0.0044,  0.0288,  ..., -0.0345, -0.0395, -0.0289],
        ...,
        [-0.0085,  0.0111,  0.0179,  ..., -0.0018,  0.0181, -0.0038],
        [-0.0599,  0.0009, -0.0368,  ..., -0.0157, -0.0232,  0.0045],
        [-0.0163,  0.0048, -0.0046,  ...,  0.0149,  0.0155, -0.0086]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5508,  0.6992, -0.7266,  0.5508,  0.1709,  0.4824, -0.1436,  0.7773,  0.6875, -1.0156, -0.3887, -1.2188, -0.6836,  0.7578, -0.9492, -0.0742,  0.9727,  0.0928,  0.0352,  0.1885, -1.0625,  0.9961, -0.9570, -0.8125, -0.2559,  1.2891, -0.7266,  0.7891, -0.0830, -0.3750,  0.4883, -0.2139,
         0.1465, -0.9453,  1.3828, -0.0767, -0.2949,  0.9023, -0.3887,  0.1689,  0.3125,  0.8047, -0.3359,  0.1660, -0.4805,  1.4922, -0.3691,  0.3320,  0.3145,  0.4355,  0.1846,  1.3047, -0.7578, -0.4668, -0.3770,  0.0201, -1.2812,  0.4648,  0.0503, -0.2031, -0.2373,  0.2637, -0.0603, -0.9453],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.2812,  1.3594,  1.3359,  1.5703, -0.0050,  1.1094,  0.7109,  1.9062,  2.0469,  0.2852,  0.2471,  0.1523,  1.8594,  0.6719],
        [ 0.0000,  0.4062, -0.2891, -0.4277, -0.3027, -0.4121,  0.1289,  0.6602, -0.3457, -0.5508, -0.8164,  0.2314,  0.1465,  0.2773,  0.4043],
        [ 0.0000,  2.0938,  0.4023, -0.5625,  1.1016,  0.2910,  0.5117,  0.6523,  0.9844,  2.0625,  0.2910, -0.2471,  0.3945,  1.6016,  0.7500],
        [ 0.0000,  4.1250,  1.2344,  1.1328,  2.9688,  1.3516,  1.8203, -0.1514,  3.1250,  2.4062,  1.5703,  0.1523, -0.4570,  2.8594,  1.5391],
        [ 0.0000,  3.6719,  1.0781,  1.2812,  2.6094,  1.6172,  1.2266,  0.1201,  2.5312,  2.5000,  1.3516, -0.3379, -0.3672,  2.6406,  0.9883],
        [ 0.0000,  2.2812,  0.8633,  0.7695,  1.9219,  1.0391,  0.9961, -0.0854,  2.0938,  1.3203,  0.7656, -0.1113, -0.3301,  1.9297,  0.9570],
        [ 0.0000, -1.9297,  0.1465, -1.1953, -3.1406, -2.7969, -1.9297,  1.4531, -2.7031, -1.9062, -2.5156,  0.8320,  0.6289, -2.6094, -1.1250],
        [ 0.0000,  4.2188,  1.0156,  1.1328,  3.7188,  1.5547,  1.9297,  0.1816,  2.9375,  3.0625,  1.5859,  0.0099, -0.3027,  2.7031,  1.6797],
        [ 0.0000,  1.0781, -0.0962,  0.1787,  0.8477,  0.6016,  0.9570, -0.3164,  1.1484,  0.9648,  0.8633, -0.2578, -0.0469,  1.2031,  0.4414],
        [ 0.0000,  4.3750,  1.3828,  1.7344,  3.7188,  2.9375,  1.9141, -0.3887,  3.3906,  3.4219,  2.4375, -0.6797, -1.0625,  3.3750,  1.5625],
        [ 0.0000, -0.3340,  0.1670,  0.0547, -1.0234, -0.7422,  0.0884,  0.0089, -0.4551, -0.8242, -0.4961,  0.4258, -0.1016, -0.3809, -0.3125],
        [ 0.0000, -1.0312,  0.0052, -0.3555, -1.2422, -1.2188, -1.0234,  0.1680, -1.1484, -0.9766, -1.2656,  0.6836,  0.0510, -1.1953, -0.2930],
        [ 0.0000,  3.5625,  0.3086,  0.8594,  3.3281,  1.8281,  1.7109, -0.4082,  2.8281,  2.6719,  1.5078, -0.1904, -0.1069,  2.7188,  1.5391],
        [ 0.0000,  1.8047,  0.7461,  0.1123,  1.1875,  0.4473,  0.6953, -0.7383,  1.4766,  0.7539,  0.7109,  0.1021, -0.1318,  1.2656,  0.2637]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0419],
        [0.1260],
        [0.0736],
        [0.0181],
        [0.0105],
        [0.0137],
        [0.2362],
        [0.0076],
        [0.0302],
        [0.0044],
        [0.0976],
        [0.1159],
        [0.0057],
        [0.0274]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0054, 0.9961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.4434, 0.4082, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.5547, 0.2812, 0.0942, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.4277, 0.3008, 0.0996, 0.0874, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0942, 0.2461, 0.3340, 0.1172, 0.1079, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.3047, 0.2773, 0.0845, 0.0879, 0.0693, 0.0947, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.0576, 0.1807, 0.0684, 0.0952, 0.0942, 0.1152, 0.2871, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0483, 0.3223, 0.1992, 0.0635, 0.0537, 0.0408, 0.0579, 0.1406, 0.0737, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0654, 0.1377, 0.1738, 0.0566, 0.0569, 0.0530, 0.0645, 0.2441, 0.0654, 0.0825, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0610, 0.2070, 0.1689, 0.0569, 0.0505, 0.0391, 0.0549, 0.1846, 0.0613, 0.0684, 0.0483, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.0391, 0.1455, 0.0488, 0.0508, 0.0544, 0.0613, 0.1523, 0.0483, 0.0757, 0.0791, 0.1680, 0.0000, 0.0000, 0.0000],
        [0.0461, 0.0182, 0.0728, 0.0388, 0.0510, 0.0640, 0.0598, 0.1611, 0.0442, 0.0679, 0.0718, 0.1206, 0.1836, 0.0000, 0.0000],
        [0.0311, 0.1670, 0.1289, 0.0383, 0.0347, 0.0283, 0.0381, 0.0874, 0.0461, 0.0493, 0.0294, 0.1309, 0.1387, 0.0520, 0.0000],
        [0.0381, 0.0972, 0.1074, 0.0322, 0.0308, 0.0250, 0.0339, 0.1050, 0.0366, 0.0430, 0.0315, 0.1904, 0.1104, 0.0413, 0.0767]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0020,  0.0007, -0.0335,  ...,  0.0361,  0.0120, -0.0395],
        [-0.0048,  0.0120,  0.0248,  ..., -0.0052, -0.0057,  0.0297],
        [ 0.0113, -0.0306, -0.0371,  ...,  0.0208,  0.0128, -0.0307],
        ...,
        [-0.0043, -0.0063,  0.0075,  ..., -0.0086,  0.0002,  0.0472],
        [ 0.0256,  0.0231, -0.0276,  ...,  0.0173,  0.0086,  0.0101],
        [-0.0206, -0.0129, -0.0038,  ...,  0.0151, -0.0359, -0.0022]], device='cuda:0', requires_grad=True)
K: tensor([-1.1562,  0.2285, -0.5898, -0.2949,  0.4258, -0.0938,  0.3516,  0.5391,  0.7773, -1.3125,  0.9766,  0.0369, -0.7773,  1.3359, -0.0513, -0.6523,  0.4082, -0.9336, -0.6914, -0.3320, -0.2598, -0.4863, -0.2715, -0.1768, -0.2344,  0.6172, -1.1172,  0.4102,  1.3828,  0.0049, -0.5391, -0.6328,
         0.0061,  0.3398, -0.3477, -0.7734,  0.1245,  0.1230,  0.3828, -0.3730, -0.7148, -0.5664, -1.1328,  0.6523,  1.0547,  0.1562,  0.4355, -0.2910,  0.6758,  1.5859,  0.8242, -0.1118, -1.2266,  0.0869, -0.3066,  0.3906, -0.0115, -0.3242,  1.6562,  0.6875, -0.2812, -0.5781, -0.1885,  0.7344],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0113,  0.0149,  ..., -0.0245, -0.0077,  0.0408],
        [ 0.0244,  0.0291, -0.0756,  ...,  0.0036, -0.0080, -0.0254],
        [ 0.0323, -0.0044,  0.0288,  ..., -0.0345, -0.0395, -0.0289],
        ...,
        [-0.0085,  0.0111,  0.0179,  ..., -0.0018,  0.0181, -0.0038],
        [-0.0599,  0.0009, -0.0368,  ..., -0.0157, -0.0232,  0.0045],
        [-0.0163,  0.0048, -0.0046,  ...,  0.0149,  0.0155, -0.0086]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4453, -0.5117,  0.7578, -0.3789, -0.2461, -2.2969,  0.0135,  1.1250, -0.0830,  0.5430, -0.8984, -0.5586,  0.1914, -0.4902, -0.5273, -1.2109, -0.2617, -1.0078,  0.1143,  0.2832,  0.7578,  0.8594,  0.5156,  0.5742, -0.2344,  1.9453, -0.7422,  2.0469, -0.3770,  0.6367, -0.7305, -0.1631,
        -1.6016,  1.2344, -0.6328,  0.3848,  0.5586, -0.5078, -0.3457, -0.7773, -0.1582,  0.4863, -0.0962, -0.0510,  1.2422,  0.9648, -0.4277, -1.6719, -0.7070,  1.0938,  0.8125,  0.7070, -1.1562,  0.1572, -0.1660,  0.2363, -0.4727, -0.9414,  0.6992, -0.8984,  0.7070,  1.2500, -1.1875, -1.3125],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      5.2188,      2.6094,      1.7578,      1.7109,      1.0703,      1.6953,      1.8359,      2.2656,      1.6172,      0.7383,      2.1250,      1.3047,      2.4375,      2.5781],
        [     0.0000,      1.0859,      1.0000,     -0.0483,      0.2578,      0.1768,      0.3750,      1.3984,      0.3867,      0.4824,      0.1562,      1.1797,      1.5234,      0.4590,      0.7930],
        [     0.0000,      2.0938,      1.4141,      0.3164,      0.2070,      0.0298,      0.3223,      1.3984,      0.6016,      0.5664,     -0.0366,      1.7031,      1.1953,      0.7383,      1.1875],
        [     0.0000,      1.6328,      1.2734,      0.1719,      0.0439,     -0.2070,      0.1016,      1.0156,      0.2930,      0.3262,     -0.1235,      1.4609,      1.0469,      0.4336,      0.8984],
        [     0.0000,      0.9570,      1.2656,      0.2168,      0.1367,      0.0664,      0.2334,      1.0156,      0.2949,      0.5625,      0.1157,      1.2578,      1.5469,      0.4082,      0.8047],
        [     0.0000,      1.3438,      1.2500,      0.0586,      0.0962,     -0.1426,      0.1738,      1.2891,      0.2793,      0.3887,      0.0255,      1.6875,      1.3281,      0.4102,      1.0000],
        [     0.0000,     -0.5742,      0.5664,     -0.4062,     -0.0767,     -0.0850,      0.1167,      1.0234,     -0.2090,      0.1172,      0.4277,      0.8477,      1.0156,     -0.2930,      0.3867],
        [     0.0000,      1.8984,      1.4219,      0.2734,      0.1060,     -0.1699,      0.1836,      1.0703,      0.4258,      0.4023,     -0.0918,      1.5234,      1.2500,      0.5625,      0.9961],
        [     0.0000,      0.7422,      0.9805,     -0.1436,     -0.1367,     -0.2080,     -0.0111,      1.3203,     -0.0013,      0.2314,     -0.0623,      1.6094,      1.2812,      0.1631,      0.7656],
        [     0.0000,      1.2188,      1.0156,     -0.0723,     -0.1885,     -0.4492,     -0.1074,      1.1016,      0.0027,      0.1104,     -0.2344,      1.5938,      0.8828,      0.1484,      0.7812],
        [     0.0000,     -0.6719,      0.6367,     -0.4492,     -0.4141,     -0.3438,     -0.2236,      0.6836,     -0.4629,     -0.0112,      0.0337,      0.7852,      1.5547,     -0.4180,      0.0095],
        [     0.0000,     -0.9336,      0.4551,     -0.1738,      0.0977,      0.3262,      0.2617,      1.2500,     -0.0415,      0.3848,      0.4395,      0.9609,      1.3828,     -0.0322,      0.5859],
        [     0.0000,      1.6797,      1.4219,      0.2041,      0.1064,     -0.0952,      0.1973,      1.0312,      0.3906,      0.4570,     -0.0593,      1.4375,      1.4922,      0.5117,      0.9453],
        [     0.0000,      0.9336,      1.0312,     -0.1709,     -0.2148,     -0.4219,     -0.1191,      1.0156,     -0.0398,      0.1196,     -0.1934,      1.6094,      1.0625,      0.0806,      0.6992]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1541],
        [0.2744],
        [0.2724],
        [0.2646],
        [0.2662],
        [0.2325],
        [0.2753],
        [0.1725],
        [0.2054],
        [0.1740],
        [0.2080],
        [0.1287],
        [0.1355],
        [0.1613]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0417, 0.9570, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.4961, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0435, 0.4453, 0.3477, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0439, 0.3379, 0.3125, 0.1445, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0383, 0.2559, 0.2754, 0.1299, 0.1494, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0317, 0.2451, 0.2285, 0.1055, 0.1250, 0.1201, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0532, 0.1021, 0.1494, 0.0767, 0.1094, 0.1094, 0.1245, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0192, 0.1797, 0.1621, 0.0771, 0.0879, 0.0859, 0.1016, 0.1611, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0210, 0.1475, 0.1377, 0.0669, 0.0786, 0.0781, 0.0903, 0.1699, 0.1064, 0.1040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0193, 0.1377, 0.1309, 0.0623, 0.0713, 0.0693, 0.0825, 0.1543, 0.0972, 0.0962, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0251, 0.0811, 0.1108, 0.0552, 0.0674, 0.0718, 0.0791, 0.1338, 0.0859, 0.0908, 0.0845, 0.1147, 0.0000, 0.0000, 0.0000],
        [0.0168, 0.0630, 0.0742, 0.0444, 0.0620, 0.0703, 0.0693, 0.1533, 0.0713, 0.0747, 0.0659, 0.0859, 0.1484, 0.0000, 0.0000],
        [0.0102, 0.0977, 0.0898, 0.0430, 0.0505, 0.0510, 0.0583, 0.0918, 0.0718, 0.0703, 0.0547, 0.0869, 0.1396, 0.0854, 0.0000],
        [0.0128, 0.0889, 0.0835, 0.0400, 0.0464, 0.0449, 0.0535, 0.0938, 0.0635, 0.0615, 0.0510, 0.0981, 0.1104, 0.0752, 0.0776]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0020,  0.0007, -0.0335,  ...,  0.0361,  0.0120, -0.0395],
        [-0.0048,  0.0120,  0.0248,  ..., -0.0052, -0.0057,  0.0297],
        [ 0.0113, -0.0306, -0.0371,  ...,  0.0208,  0.0128, -0.0307],
        ...,
        [-0.0043, -0.0063,  0.0075,  ..., -0.0086,  0.0002,  0.0472],
        [ 0.0256,  0.0231, -0.0276,  ...,  0.0173,  0.0086,  0.0101],
        [-0.0206, -0.0129, -0.0038,  ...,  0.0151, -0.0359, -0.0022]], device='cuda:0', requires_grad=True)
K: tensor([-0.9375,  0.2773, -0.5156, -0.6602, -0.1030, -0.2617,  0.3145,  0.6250,  0.8594, -0.8672,  0.7344, -0.2334, -0.5430,  0.1592,  0.0444, -1.1094,  0.7305, -0.8477, -0.4395, -0.3066, -0.3770, -0.4258, -0.4492, -0.1943, -0.5039,  0.5820, -0.7227,  0.5117,  1.2656,  0.2559, -0.1328, -0.6719,
        -0.1738,  0.6719, -0.2217, -0.8281,  0.9805,  0.0221, -0.1089, -0.9180, -0.4355, -0.6914, -1.4766,  0.0801,  0.7812,  0.1128,  0.0618, -0.5977,  0.5781,  1.9453,  0.4141, -0.4668, -1.3594,  0.1963, -0.1914, -0.1729, -0.4863,  0.3867,  1.8125,  1.0078,  0.1650, -0.8359, -0.0206, -0.1406],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0113,  0.0149,  ..., -0.0245, -0.0077,  0.0408],
        [ 0.0244,  0.0291, -0.0756,  ...,  0.0036, -0.0080, -0.0254],
        [ 0.0323, -0.0044,  0.0288,  ..., -0.0345, -0.0395, -0.0289],
        ...,
        [-0.0085,  0.0111,  0.0179,  ..., -0.0018,  0.0181, -0.0038],
        [-0.0599,  0.0009, -0.0368,  ..., -0.0157, -0.0232,  0.0045],
        [-0.0163,  0.0048, -0.0046,  ...,  0.0149,  0.0155, -0.0086]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2520, -0.1387,  0.6719, -0.4512, -0.4844, -2.0781,  0.2715,  0.8633,  0.3574,  0.2598, -0.7344, -1.0938, -0.5938, -0.8945, -0.9766, -1.2031,  0.2266, -1.3281,  0.0542, -0.1221,  0.4727,  0.1182,  0.7227, -0.2734, -0.4141,  1.1953, -0.3340,  1.7500, -0.3535,  0.8438, -1.0547,  0.3594,
        -0.8398,  1.4922, -0.2969,  0.1016,  0.7891, -0.3867, -0.2891, -0.6641,  0.0491,  0.4180, -0.2715, -0.2852,  0.9375,  0.7891,  0.0080, -1.6875, -0.3809,  1.3984,  0.7344,  0.6328, -1.2500,  0.1865, -0.4258,  0.5195, -0.1230, -0.8750,  1.1406, -0.3320,  0.7188,  0.8086, -0.7773, -0.8359],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 3.1406, 2.6562, 1.9688, 2.0938, 2.0000, 2.2031, 2.3906, 2.4688, 2.3438, 2.0000, 2.3906, 2.7188, 2.6250, 2.5781],
        [0.0000, 1.9375, 1.8047, 1.0859, 1.3594, 1.3516, 1.4922, 2.0469, 1.6562, 1.6172, 1.4375, 1.8516, 2.3438, 1.8047, 1.7734],
        [0.0000, 2.3281, 2.0781, 1.3281, 1.4062, 1.3672, 1.5625, 2.0469, 1.7969, 1.7266, 1.4766, 2.1875, 2.2031, 1.9766, 1.9844],
        [0.0000, 2.0469, 1.9609, 1.1953, 1.3047, 1.2578, 1.4453, 1.9453, 1.6406, 1.6094, 1.3984, 2.0469, 2.2031, 1.8203, 1.8438],
        [0.0000, 1.9062, 1.9688, 1.2266, 1.3672, 1.3750, 1.5000, 1.9844, 1.6797, 1.6953, 1.5000, 2.0156, 2.4219, 1.8516, 1.8516],
        [0.0000, 2.0469, 1.9766, 1.2031, 1.3750, 1.3281, 1.5078, 2.0938, 1.6875, 1.6562, 1.4766, 2.1250, 2.2969, 1.8594, 1.8984],
        [0.0000, 0.6484, 1.0312, 0.3672, 0.7227, 0.7227, 0.8516, 1.6484, 0.7852, 0.8203, 0.9336, 1.2188, 1.5156, 0.8242, 0.9922],
        [0.0000, 2.2344, 2.1406, 1.3906, 1.5234, 1.5000, 1.6641, 2.1250, 1.8750, 1.8438, 1.6094, 2.1562, 2.4844, 2.0625, 2.0469],
        [0.0000, 1.9453, 1.8750, 1.1641, 1.3203, 1.3125, 1.4609, 2.0938, 1.6250, 1.6016, 1.4141, 2.0625, 2.1875, 1.7969, 1.8281],
        [0.0000, 1.9688, 1.9141, 1.1719, 1.3047, 1.2812, 1.4531, 2.0781, 1.6172, 1.6016, 1.4062, 2.0781, 2.2031, 1.7891, 1.8359],
        [0.0000, 1.1719, 1.4844, 0.7852, 0.9844, 1.0469, 1.1406, 1.6719, 1.2266, 1.2812, 1.2109, 1.5156, 2.2656, 1.3750, 1.3359],
        [0.0000, 1.3203, 1.4766, 0.9688, 1.3047, 1.4297, 1.4141, 2.2031, 1.4453, 1.4922, 1.3594, 1.6250, 2.1719, 1.5234, 1.5938],
        [0.0000, 2.2500, 2.1719, 1.4375, 1.6016, 1.6094, 1.7422, 2.1875, 1.9453, 1.9297, 1.6797, 2.1406, 2.6094, 2.1250, 2.0938],
        [0.0000, 1.9375, 1.8750, 1.1328, 1.2812, 1.2500, 1.4297, 1.9844, 1.6016, 1.5703, 1.3828, 2.0312, 2.1562, 1.7656, 1.7969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2995],
        [0.2382],
        [0.2420],
        [0.2254],
        [0.2175],
        [0.1940],
        [0.2193],
        [0.1598],
        [0.1660],
        [0.1565],
        [0.1526],
        [0.1097],
        [0.1232],
        [0.1296]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0432, 0.9570, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0240, 0.4980, 0.4785, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0170, 0.3379, 0.3262, 0.3184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0131, 0.2578, 0.2480, 0.2422, 0.2393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0107, 0.2070, 0.2002, 0.1953, 0.1934, 0.1934, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0090, 0.1738, 0.1680, 0.1641, 0.1621, 0.1621, 0.1611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0079, 0.1494, 0.1445, 0.1416, 0.1396, 0.1396, 0.1387, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0070, 0.1318, 0.1270, 0.1245, 0.1230, 0.1230, 0.1221, 0.1211, 0.1206, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0063, 0.1177, 0.1138, 0.1108, 0.1099, 0.1099, 0.1089, 0.1079, 0.1074, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.1060, 0.1025, 0.1001, 0.0991, 0.0991, 0.0981, 0.0977, 0.0972, 0.0972, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0052, 0.0967, 0.0933, 0.0913, 0.0903, 0.0903, 0.0898, 0.0889, 0.0884, 0.0889, 0.0884, 0.0884, 0.0000, 0.0000, 0.0000],
        [0.0048, 0.0889, 0.0859, 0.0840, 0.0830, 0.0830, 0.0825, 0.0820, 0.0815, 0.0815, 0.0811, 0.0815, 0.0811, 0.0000, 0.0000],
        [0.0044, 0.0820, 0.0796, 0.0776, 0.0771, 0.0767, 0.0762, 0.0757, 0.0752, 0.0752, 0.0752, 0.0752, 0.0752, 0.0747, 0.0000],
        [0.0041, 0.0762, 0.0737, 0.0723, 0.0718, 0.0713, 0.0708, 0.0703, 0.0703, 0.0703, 0.0698, 0.0703, 0.0698, 0.0698, 0.0693]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0020,  0.0007, -0.0335,  ...,  0.0361,  0.0120, -0.0395],
        [-0.0048,  0.0120,  0.0248,  ..., -0.0052, -0.0057,  0.0297],
        [ 0.0113, -0.0306, -0.0371,  ...,  0.0208,  0.0128, -0.0307],
        ...,
        [-0.0043, -0.0063,  0.0075,  ..., -0.0086,  0.0002,  0.0472],
        [ 0.0256,  0.0231, -0.0276,  ...,  0.0173,  0.0086,  0.0101],
        [-0.0206, -0.0129, -0.0038,  ...,  0.0151, -0.0359, -0.0022]], device='cuda:0', requires_grad=True)
K: tensor([-0.6641,  0.4512, -0.1807, -0.9375, -0.4531, -0.8086,  0.3477,  0.7461,  0.7500, -0.5156,  0.4785, -0.5391, -0.5156, -0.6719,  0.1797, -1.3359,  0.8672, -0.6055, -0.2598, -0.5859, -0.4727, -0.4102, -0.4609, -0.2129, -0.5273,  0.5273, -0.2754,  0.5586,  0.9375,  0.2637,  0.1025, -0.8008,
        -0.1250,  0.6758,  0.0645, -0.8203,  1.6797,  0.0325, -0.6289, -1.2578, -0.2295, -0.6680, -1.4922, -0.4922,  0.3027,  0.0237, -0.4473, -1.1172,  0.6562,  2.0312,  0.1797, -0.6055, -1.5703,  0.3809,  0.0762, -0.3203, -0.6523,  0.9570,  1.8047,  1.1406,  0.6406, -0.8867,  0.2969, -0.8359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0113,  0.0149,  ..., -0.0245, -0.0077,  0.0408],
        [ 0.0244,  0.0291, -0.0756,  ...,  0.0036, -0.0080, -0.0254],
        [ 0.0323, -0.0044,  0.0288,  ..., -0.0345, -0.0395, -0.0289],
        ...,
        [-0.0085,  0.0111,  0.0179,  ..., -0.0018,  0.0181, -0.0038],
        [-0.0599,  0.0009, -0.0368,  ..., -0.0157, -0.0232,  0.0045],
        [-0.0163,  0.0048, -0.0046,  ...,  0.0149,  0.0155, -0.0086]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0342,  0.3730,  0.2695, -0.2559, -0.6641, -1.6250,  0.5195,  0.7539,  0.6758, -0.1001, -0.4824, -1.4766, -1.3125, -1.0547, -1.0234, -1.1016,  0.4570, -1.4453,  0.0381, -0.5742,  0.0427, -0.6133,  0.5977, -1.1328, -0.7070,  0.8359, -0.0366,  1.4609, -0.3730,  0.7617, -1.2891,  0.5117,
        -0.0226,  1.5938,  0.2188, -0.0205,  1.0078, -0.3477, -0.4238, -0.4375,  0.4629,  0.2139, -0.3359, -0.2812,  0.4922,  0.8359,  0.4219, -1.3984, -0.0981,  1.4531,  0.8203,  0.4316, -1.4766,  0.0918, -0.4355,  0.7695, -0.0439, -0.4785,  1.4453,  0.2139,  0.7070,  0.3340, -0.4453, -0.6680],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 3.0938, 3.0625, 3.0312, 3.0156, 3.0156, 3.0000, 3.0000, 2.9844, 2.9844, 2.9844, 2.9844, 2.9844, 2.9844, 2.9844],
        [0.0000, 3.0312, 2.9844, 2.9688, 2.9531, 2.9531, 2.9375, 2.9375, 2.9219, 2.9219, 2.9219, 2.9219, 2.9219, 2.9219, 2.9219],
        [0.0000, 3.0000, 2.9531, 2.9375, 2.9219, 2.9219, 2.9062, 2.9062, 2.9062, 2.9062, 2.8906, 2.8906, 2.8906, 2.8906, 2.8906],
        [0.0000, 2.9844, 2.9375, 2.9219, 2.9062, 2.9062, 2.8906, 2.8906, 2.8906, 2.8906, 2.8750, 2.8906, 2.8750, 2.8750, 2.8750],
        [0.0000, 2.9688, 2.9375, 2.9062, 2.8906, 2.8906, 2.8906, 2.8750, 2.8750, 2.8750, 2.8750, 2.8750, 2.8750, 2.8594, 2.8594],
        [0.0000, 2.9531, 2.9219, 2.8906, 2.8906, 2.8906, 2.8750, 2.8750, 2.8594, 2.8594, 2.8594, 2.8594, 2.8594, 2.8594, 2.8594],
        [0.0000, 2.9531, 2.9062, 2.8906, 2.8750, 2.8750, 2.8750, 2.8594, 2.8594, 2.8594, 2.8594, 2.8594, 2.8594, 2.8438, 2.8438],
        [0.0000, 2.9375, 2.9062, 2.8906, 2.8750, 2.8750, 2.8594, 2.8594, 2.8594, 2.8594, 2.8438, 2.8594, 2.8438, 2.8438, 2.8438],
        [0.0000, 2.9375, 2.9062, 2.8750, 2.8594, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438],
        [0.0000, 2.9375, 2.8906, 2.8750, 2.8594, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281],
        [0.0000, 2.9375, 2.8906, 2.8750, 2.8594, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281],
        [0.0000, 2.9219, 2.8906, 2.8750, 2.8594, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281, 2.8281],
        [0.0000, 2.9219, 2.8906, 2.8750, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281, 2.8438, 2.8281, 2.8281, 2.8281],
        [0.0000, 2.9219, 2.8906, 2.8750, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281, 2.8438, 2.8281, 2.8281, 2.8281]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2469],
        [0.2001],
        [0.1744],
        [0.1575],
        [0.1453],
        [0.1362],
        [0.1283],
        [0.1220],
        [0.1168],
        [0.1123],
        [0.1085],
        [0.1050],
        [0.1018],
        [0.0989]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0432, 0.9570, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0242, 0.4980, 0.4785, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0170, 0.3398, 0.3262, 0.3184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0131, 0.2578, 0.2480, 0.2422, 0.2393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0107, 0.2080, 0.2002, 0.1953, 0.1934, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0091, 0.1738, 0.1680, 0.1641, 0.1621, 0.1621, 0.1611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0079, 0.1504, 0.1445, 0.1416, 0.1396, 0.1396, 0.1387, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0070, 0.1318, 0.1270, 0.1245, 0.1230, 0.1226, 0.1221, 0.1211, 0.1206, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0062, 0.1177, 0.1138, 0.1108, 0.1099, 0.1094, 0.1089, 0.1079, 0.1074, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.1064, 0.1025, 0.1001, 0.0991, 0.0991, 0.0981, 0.0977, 0.0972, 0.0972, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0052, 0.0967, 0.0933, 0.0913, 0.0903, 0.0903, 0.0894, 0.0889, 0.0889, 0.0889, 0.0884, 0.0884, 0.0000, 0.0000, 0.0000],
        [0.0048, 0.0889, 0.0859, 0.0840, 0.0830, 0.0830, 0.0825, 0.0815, 0.0815, 0.0815, 0.0815, 0.0811, 0.0811, 0.0000, 0.0000],
        [0.0044, 0.0820, 0.0796, 0.0776, 0.0767, 0.0767, 0.0762, 0.0757, 0.0752, 0.0757, 0.0752, 0.0752, 0.0752, 0.0747, 0.0000],
        [0.0041, 0.0767, 0.0737, 0.0723, 0.0713, 0.0713, 0.0708, 0.0703, 0.0703, 0.0703, 0.0698, 0.0698, 0.0698, 0.0693, 0.0693]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0020,  0.0007, -0.0335,  ...,  0.0361,  0.0120, -0.0395],
        [-0.0048,  0.0120,  0.0248,  ..., -0.0052, -0.0057,  0.0297],
        [ 0.0113, -0.0306, -0.0371,  ...,  0.0208,  0.0128, -0.0307],
        ...,
        [-0.0043, -0.0063,  0.0075,  ..., -0.0086,  0.0002,  0.0472],
        [ 0.0256,  0.0231, -0.0276,  ...,  0.0173,  0.0086,  0.0101],
        [-0.0206, -0.0129, -0.0038,  ...,  0.0151, -0.0359, -0.0022]], device='cuda:0', requires_grad=True)
K: tensor([-0.6680,  0.4512, -0.1807, -0.9375, -0.4531, -0.8086,  0.3496,  0.7461,  0.7539, -0.5195,  0.4785, -0.5352, -0.5156, -0.6719,  0.1797, -1.3281,  0.8672, -0.6055, -0.2598, -0.5898, -0.4707, -0.4121, -0.4629, -0.2139, -0.5273,  0.5273, -0.2734,  0.5586,  0.9375,  0.2637,  0.1016, -0.8008,
        -0.1260,  0.6758,  0.0654, -0.8203,  1.6875,  0.0325, -0.6289, -1.2578, -0.2285, -0.6680, -1.4922, -0.4922,  0.3027,  0.0223, -0.4473, -1.1172,  0.6523,  2.0312,  0.1816, -0.6016, -1.5703,  0.3809,  0.0767, -0.3223, -0.6523,  0.9570,  1.8047,  1.1484,  0.6367, -0.8867,  0.2969, -0.8359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0113,  0.0149,  ..., -0.0245, -0.0077,  0.0408],
        [ 0.0244,  0.0291, -0.0756,  ...,  0.0036, -0.0080, -0.0254],
        [ 0.0323, -0.0044,  0.0288,  ..., -0.0345, -0.0395, -0.0289],
        ...,
        [-0.0085,  0.0111,  0.0179,  ..., -0.0018,  0.0181, -0.0038],
        [-0.0599,  0.0009, -0.0368,  ..., -0.0157, -0.0232,  0.0045],
        [-0.0163,  0.0048, -0.0046,  ...,  0.0149,  0.0155, -0.0086]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0347,  0.3730,  0.2715, -0.2559, -0.6680, -1.6250,  0.5195,  0.7539,  0.6758, -0.1006, -0.4824, -1.4766, -1.3047, -1.0547, -1.0234, -1.1016,  0.4570, -1.4453,  0.0369, -0.5742,  0.0425, -0.6133,  0.5977, -1.1328, -0.7070,  0.8398, -0.0356,  1.4609, -0.3730,  0.7617, -1.2891,  0.5078,
        -0.0221,  1.5938,  0.2207, -0.0190,  1.0078, -0.3477, -0.4258, -0.4355,  0.4629,  0.2129, -0.3359, -0.2832,  0.4883,  0.8359,  0.4238, -1.3984, -0.0991,  1.4531,  0.8164,  0.4316, -1.4844,  0.0918, -0.4355,  0.7656, -0.0420, -0.4785,  1.4453,  0.2139,  0.7070,  0.3340, -0.4434, -0.6680],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 3.0938, 3.0469, 3.0312, 3.0156, 3.0156, 3.0000, 2.9844, 2.9844, 2.9844, 2.9844, 2.9844, 2.9844, 2.9688, 2.9688],
        [0.0000, 3.0312, 2.9844, 2.9688, 2.9531, 2.9375, 2.9375, 2.9219, 2.9219, 2.9219, 2.9219, 2.9219, 2.9219, 2.9219, 2.9219],
        [0.0000, 3.0000, 2.9531, 2.9375, 2.9219, 2.9219, 2.9062, 2.9062, 2.8906, 2.9062, 2.8906, 2.8906, 2.8906, 2.8906, 2.8906],
        [0.0000, 2.9688, 2.9375, 2.9062, 2.9062, 2.9062, 2.8906, 2.8906, 2.8750, 2.8750, 2.8750, 2.8750, 2.8750, 2.8750, 2.8750],
        [0.0000, 2.9688, 2.9219, 2.9062, 2.8906, 2.8906, 2.8906, 2.8750, 2.8750, 2.8750, 2.8750, 2.8750, 2.8750, 2.8594, 2.8594],
        [0.0000, 2.9531, 2.9219, 2.8906, 2.8750, 2.8750, 2.8750, 2.8594, 2.8594, 2.8594, 2.8594, 2.8594, 2.8594, 2.8438, 2.8594],
        [0.0000, 2.9531, 2.9219, 2.8906, 2.8750, 2.8750, 2.8750, 2.8594, 2.8594, 2.8594, 2.8594, 2.8594, 2.8594, 2.8438, 2.8438],
        [0.0000, 2.9375, 2.9062, 2.8750, 2.8750, 2.8750, 2.8594, 2.8594, 2.8438, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438],
        [0.0000, 2.9375, 2.9062, 2.8750, 2.8750, 2.8594, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438],
        [0.0000, 2.9375, 2.8906, 2.8750, 2.8594, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281, 2.8281],
        [0.0000, 2.9375, 2.8906, 2.8750, 2.8594, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281, 2.8281],
        [0.0000, 2.9219, 2.8906, 2.8750, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281, 2.8281],
        [0.0000, 2.9219, 2.8906, 2.8750, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281, 2.8281, 2.8281, 2.8281],
        [0.0000, 2.9219, 2.8906, 2.8750, 2.8594, 2.8594, 2.8438, 2.8438, 2.8438, 2.8438, 2.8438, 2.8281, 2.8281, 2.8281, 2.8281]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2468],
        [0.2005],
        [0.1745],
        [0.1576],
        [0.1453],
        [0.1360],
        [0.1283],
        [0.1220],
        [0.1169],
        [0.1123],
        [0.1082],
        [0.1050],
        [0.1018],
        [0.0989]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( in:0.0022 in:0.0021 in:0.0020 in:0.0020 in:0.0020 in:0.0020 in:0.0019 in:0.0019)
 in
------
		( in:0.0021 in:0.0020 in:0.0020 in:0.0020 in:0.0020 in:0.0019 in:0.0019 in:0.0019)
 in in in in in in in in in in in in in in in
@ 550 train 8.7439 , allloss: 18.2896, dt: 1488.07ms, fracRes: 0.0183, norm(attn): 0.6289, norm(output): 0.3418, norm(x): 0.3221, norm(y): 0.9839, norm:52.3557, tok/sec: 88082.13, flops:34.32, batch-reuse:1
@ 551 train 7.7629 , allloss: 16.2785, dt: 1122.45ms, fracRes: 0.0147, norm(attn): 0.6016, norm(output): 0.2354, norm(x): 0.2294, norm(y): 0.9842, norm:36.9787, tok/sec: 116773.29, flops:45.49, batch-reuse:1
@ 552 train 7.7249 , allloss: 17.0285, dt: 1119.74ms, fracRes: 0.0362, norm(attn): 0.5625, norm(output): 0.1777, norm(x): 0.1910, norm(y): 0.9843, norm:66.2486, tok/sec: 117055.92, flops:45.60, batch-reuse:1
@ 553 train 7.7165 , allloss: 16.6934, dt: 1126.82ms, fracRes: 0.0506, norm(attn): 0.5664, norm(output): 0.1484, norm(x): 0.1754, norm(y): 0.9836, norm:76.1521, tok/sec: 116319.86, flops:45.32, batch-reuse:1
@ 554 train 8.2695 , allloss: 16.9632, dt: 1126.23ms, fracRes: 0.0274, norm(attn): 0.6562, norm(output): 0.1167, norm(x): 0.1277, norm(y): 0.9825, norm:134.7776, tok/sec: 116380.81, flops:45.34, batch-reuse:1
@ 555 train 9.3500 , allloss: 33.0879, dt: 1134.72ms, fracRes: 0.0085, norm(attn): 0.5625, norm(output): 0.1016, norm(x): 0.1018, norm(y): 0.9818, norm:107.6323, tok/sec: 115510.91, flops:45.00, batch-reuse:1
@ 556 train 8.0755 , allloss: 73.7671, dt: 1129.31ms, fracRes: 0.0079, norm(attn): 0.4609, norm(output): 0.1641, norm(x): 0.1515, norm(y): 0.9820, norm:142.6114, tok/sec: 116064.07, flops:45.22, batch-reuse:1
@ 557 train 8.4843 , allloss: 91.1762, dt: 1126.44ms, fracRes: 0.0098, norm(attn): 0.5273, norm(output): 0.2061, norm(x): 0.2023, norm(y): 0.9823, norm:231.3839, tok/sec: 116359.55, flops:45.33, batch-reuse:1
@ 558 train 9.3633 , allloss: 66.8586, dt: 1114.25ms, fracRes: 0.0132, norm(attn): 0.5469, norm(output): 0.2354, norm(x): 0.2339, norm(y): 0.9827, norm:241.0243, tok/sec: 117632.67, flops:45.83, batch-reuse:1
@ 559 train 8.1027 , allloss: 61.3402, dt: 1115.24ms, fracRes: 0.0244, norm(attn): 0.7266, norm(output): 0.5312, norm(x): 0.4882, norm(y): 0.9821, norm:267.4788, tok/sec: 117527.78, flops:45.79, batch-reuse:1
@ 560 train 8.6942 , allloss: 60.2742, dt: 1128.41ms, fracRes: 0.0412, norm(attn): 0.7227, norm(output): 0.5195, norm(x): 0.4535, norm(y): 0.9819, norm:213.0169, tok/sec: 116156.06, flops:45.25, batch-reuse:1
@ 561 train 8.6913 , allloss: 23.9581, dt: 1126.14ms, fracRes: 0.0597, norm(attn): 0.6680, norm(output): 0.1216, norm(x): 0.1534, norm(y): 0.9823, norm:113.5442, tok/sec: 116390.34, flops:45.35, batch-reuse:1
@ 562 train 8.1017 , allloss: 18.5527, dt: 1127.35ms, fracRes: 0.0282, norm(attn): 0.7617, norm(output): 0.1045, norm(x): 0.1173, norm(y): 0.9822, norm:64.7413, tok/sec: 116265.89, flops:45.30, batch-reuse:1
@ 563 train 7.9371 , allloss: 15.9456, dt: 1121.40ms, fracRes: 0.0178, norm(attn): 0.8828, norm(output): 0.0913, norm(x): 0.0991, norm(y): 0.9810, norm:80.8900, tok/sec: 116882.08, flops:45.54, batch-reuse:1
@ 564 train 12.7210 , allloss: 22.5895, dt: 1138.39ms, fracRes: 0.0819, norm(attn): 1.0234, norm(output): 0.0986, norm(x): 0.1543, norm(y): 0.9789, norm:207.7286, tok/sec: 115137.63, flops:44.86, batch-reuse:1
@ 565 train 8.7683 , allloss: 25.0321, dt: 1127.94ms, fracRes: 0.0365, norm(attn): 0.8398, norm(output): 0.1138, norm(x): 0.1337, norm(y): 0.9813, norm:155.2018, tok/sec: 116205.14, flops:45.27, batch-reuse:1
@ 566 train 8.1286 , allloss: 16.9852, dt: 1118.94ms, fracRes: 0.0037, norm(attn): 0.7617, norm(output): 0.0708, norm(x): 0.0698, norm(y): 0.9833, norm:51.9012, tok/sec: 117139.20, flops:45.64, batch-reuse:1
@ 567 train 7.8773 , allloss: 17.7653, dt: 1124.64ms, fracRes: 0.0026, norm(attn): 0.8750, norm(output): 0.0698, norm(x): 0.0680, norm(y): 0.9831, norm:37.6134, tok/sec: 116545.22, flops:45.41, batch-reuse:1
@ 568 train 7.9354 , allloss: 14.1849, dt: 1133.04ms, fracRes: 0.0032, norm(attn): 1.0781, norm(output): 0.0664, norm(x): 0.0660, norm(y): 0.9833, norm:30.4248, tok/sec: 115681.95, flops:45.07, batch-reuse:1
@ 569 train 7.9330 , allloss: 13.3392, dt: 1112.60ms, fracRes: 0.0130, norm(attn): 1.3750, norm(output): 0.0747, norm(x): 0.0810, norm(y): 0.9825, norm:98.4912, tok/sec: 117807.01, flops:45.90, batch-reuse:1
@ 570 train 8.2143 , allloss: 13.7723, dt: 1131.28ms, fracRes: 0.0064, norm(attn): 1.6562, norm(output): 0.0752, norm(x): 0.0767, norm(y): 0.9820, norm:55.3834, tok/sec: 115861.73, flops:45.14, batch-reuse:1
@ 571 train 8.0470 , allloss: 13.7766, dt: 1119.57ms, fracRes: 0.0043, norm(attn): 1.7891, norm(output): 0.0771, norm(x): 0.0761, norm(y): 0.9827, norm:60.7055, tok/sec: 117073.27, flops:45.61, batch-reuse:1
@ 572 train 7.7699 , allloss: 13.5868, dt: 1119.10ms, fracRes: 0.0078, norm(attn): 1.6094, norm(output): 0.0723, norm(x): 0.0753, norm(y): 0.9838, norm:74.8537, tok/sec: 117122.28, flops:45.63, batch-reuse:1
@ 573 train 7.8565 , allloss: 14.9168, dt: 1113.44ms, fracRes: 0.0046, norm(attn): 1.1719, norm(output): 0.0552, norm(x): 0.0580, norm(y): 0.9847, norm:45.4174, tok/sec: 117717.73, flops:45.86, batch-reuse:1
@ 574 train 7.7668 , allloss: 14.5443, dt: 1115.22ms, fracRes: 0.0091, norm(attn): 1.1484, norm(output): 0.0640, norm(x): 0.0688, norm(y): 0.9852, norm:42.4513, tok/sec: 117529.76, flops:45.79, batch-reuse:1
@ 575 train 7.8759 , allloss: 18.2109, dt: 1108.76ms, fracRes: 0.0118, norm(attn): 0.8828, norm(output): 0.0781, norm(x): 0.0828, norm(y): 0.9849, norm:3876.5889, tok/sec: 118214.93, flops:46.06, batch-reuse:1
@ 576 train 8.5679 , allloss: 13.4053, dt: 1110.96ms, fracRes: 0.0039, norm(attn): 0.8984, norm(output): 0.0786, norm(x): 0.0780, norm(y): 0.9845, norm:70.9453, tok/sec: 117981.07, flops:45.97, batch-reuse:1
@ 577 train 7.8550 , allloss: 13.9649, dt: 1122.15ms, fracRes: 0.0043, norm(attn): 1.0781, norm(output): 0.0693, norm(x): 0.0690, norm(y): 0.9847, norm:58.4020, tok/sec: 116804.85, flops:45.51, batch-reuse:1
@ 578 train 8.3108 , allloss: 16.6294, dt: 1126.06ms, fracRes: 0.0032, norm(attn): 1.2109, norm(output): 0.0630, norm(x): 0.0645, norm(y): 0.9829, norm:147.9126, tok/sec: 116399.14, flops:45.35, batch-reuse:1
@ 579 train 10.6570 , allloss: 101.1507, dt: 1138.34ms, fracRes: 0.0609, norm(attn): 0.8398, norm(output): 0.7070, norm(x): 0.3947, norm(y): 0.9824, norm:1871.5692, tok/sec: 115142.96, flops:44.86, batch-reuse:1
@ 580 train 10.4939 , allloss: 92.5129, dt: 1142.85ms, fracRes: 0.1013, norm(attn): 0.8125, norm(output): 1.1719, norm(x): 0.7760, norm(y): 0.9821, norm:1052.1213, tok/sec: 114688.75, flops:44.68, batch-reuse:1
@ 581 train 9.8791 , allloss: 77.1355, dt: 1121.35ms, fracRes: 0.1135, norm(attn): 0.7422, norm(output): 0.6953, norm(x): 0.4644, norm(y): 0.9824, norm:1784.3237, tok/sec: 116887.87, flops:45.54, batch-reuse:1
@ 582 train 9.0152 , allloss: 51.4522, dt: 1139.65ms, fracRes: 0.1317, norm(attn): 0.7656, norm(output): 0.3730, norm(x): 0.2942, norm(y): 0.9825, norm:1820.1017, tok/sec: 115010.38, flops:44.81, batch-reuse:1
@ 583 train 7.9809 , allloss: 35.6236, dt: 1135.03ms, fracRes: 0.0669, norm(attn): 0.9258, norm(output): 0.1436, norm(x): 0.1703, norm(y): 0.9826, norm:1973.5510, tok/sec: 115478.54, flops:44.99, batch-reuse:1
@ 584 train 7.9426 , allloss: 37.7954, dt: 1121.42ms, fracRes: 0.0264, norm(attn): 1.0703, norm(output): 0.1514, norm(x): 0.1604, norm(y): 0.9823, norm:509.6179, tok/sec: 116880.67, flops:45.54, batch-reuse:1
@ 585 train 7.8986 , allloss: 33.4298, dt: 1127.09ms, fracRes: 0.0136, norm(attn): 1.2812, norm(output): 0.1553, norm(x): 0.1549, norm(y): 0.9822, norm:1194.1766, tok/sec: 116292.77, flops:45.31, batch-reuse:1
@ 586 train 7.9821 , allloss: 25.6955, dt: 1133.97ms, fracRes: 0.0044, norm(attn): 1.5312, norm(output): 0.1543, norm(x): 0.1457, norm(y): 0.9822, norm:1071.6141, tok/sec: 115586.88, flops:45.03, batch-reuse:1
@ 587 train 7.9152 , allloss: 20.7590, dt: 1131.29ms, fracRes: 0.0036, norm(attn): 1.3359, norm(output): 0.1416, norm(x): 0.1345, norm(y): 0.9826, norm:62.3219, tok/sec: 115860.44, flops:45.14, batch-reuse:1
@ 588 train 7.7934 , allloss: 16.4493, dt: 1150.73ms, fracRes: 0.0020, norm(attn): 1.0625, norm(output): 0.1279, norm(x): 0.1221, norm(y): 0.9834, norm:66.6738, tok/sec: 113903.81, flops:44.38, batch-reuse:1
@ 589 train 7.8237 , allloss: 14.8049, dt: 1111.85ms, fracRes: 0.0021, norm(attn): 1.0781, norm(output): 0.1279, norm(x): 0.1217, norm(y): 0.9841, norm:75.6636, tok/sec: 117886.76, flops:45.93, batch-reuse:1
@ 590 train 7.9686 , allloss: 14.2547, dt: 1106.18ms, fracRes: 0.0023, norm(attn): 1.2031, norm(output): 0.1260, norm(x): 0.1204, norm(y): 0.9842, norm:80.7241, tok/sec: 118490.54, flops:46.16, batch-reuse:1
@ 591 train 8.2540 , allloss: 15.3336, dt: 1128.97ms, fracRes: 0.0063, norm(attn): 1.3203, norm(output): 0.1221, norm(x): 0.1191, norm(y): 0.9838, norm:114.8616, tok/sec: 116098.83, flops:45.23, batch-reuse:1
@ 592 train 8.3588 , allloss: 16.1588, dt: 1126.35ms, fracRes: 0.0344, norm(attn): 1.2734, norm(output): 0.1436, norm(x): 0.1609, norm(y): 0.9840, norm:83.4609, tok/sec: 116368.32, flops:45.34, batch-reuse:1
@ 593 train 8.2673 , allloss: 16.8873, dt: 1121.81ms, fracRes: 0.0441, norm(attn): 1.2109, norm(output): 0.1748, norm(x): 0.1949, norm(y): 0.9844, norm:54.7366, tok/sec: 116839.75, flops:45.52, batch-reuse:1
@ 594 train 8.0225 , allloss: 17.8121, dt: 1163.43ms, fracRes: 0.0537, norm(attn): 1.2266, norm(output): 0.1992, norm(x): 0.2201, norm(y): 0.9849, norm:47.4393, tok/sec: 112659.50, flops:43.89, batch-reuse:1
@ 595 train 7.7948 , allloss: 18.4548, dt: 1130.88ms, fracRes: 0.0639, norm(attn): 1.1641, norm(output): 0.2178, norm(x): 0.2447, norm(y): 0.9853, norm:48.3679, tok/sec: 115902.94, flops:45.16, batch-reuse:1
@ 596 train 7.7603 , allloss: 19.1199, dt: 1136.74ms, fracRes: 0.0684, norm(attn): 1.0781, norm(output): 0.2383, norm(x): 0.2675, norm(y): 0.9856, norm:44.9912, tok/sec: 115305.10, flops:44.92, batch-reuse:1
@ 597 train 7.7569 , allloss: 20.0839, dt: 1118.36ms, fracRes: 0.1055, norm(attn): 0.9570, norm(output): 0.2578, norm(x): 0.3088, norm(y): 0.9860, norm:46.5861, tok/sec: 117200.11, flops:45.66, batch-reuse:1
@ 598 train 7.8833 , allloss: 21.0819, dt: 1123.42ms, fracRes: 0.1425, norm(attn): 0.8750, norm(output): 0.2812, norm(x): 0.3491, norm(y): 0.9862, norm:65.7610, tok/sec: 116672.18, flops:45.46, batch-reuse:1
@ 599 train 7.9149 , allloss: 21.5864, dt: 1113.71ms, fracRes: 0.1799, norm(attn): 0.8125, norm(output): 0.2852, norm(x): 0.3776, norm(y): 0.9861, norm:59.3428, tok/sec: 117689.58, flops:45.85, batch-reuse:1
@ 600 train 7.8263 , allloss: 22.0198, dt: 1121.05ms, fracRes: 0.1814, norm(attn): 0.7578, norm(output): 0.2734, norm(x): 0.3721, norm(y): 0.9858, norm:62.1588, tok/sec: 116919.05, flops:45.55, batch-reuse:1
@ 601 train 7.8739 , allloss: 22.9574, dt: 1117.92ms, fracRes: 0.1536, norm(attn): 0.7109, norm(output): 0.2480, norm(x): 0.3334, norm(y): 0.9854, norm:113.3846, tok/sec: 117246.60, flops:45.68, batch-reuse:1
@ 602 train 7.9198 , allloss: 25.4333, dt: 1120.32ms, fracRes: 0.1824, norm(attn): 0.6172, norm(output): 0.2197, norm(x): 0.3340, norm(y): 0.9854, norm:107.4711, tok/sec: 116994.81, flops:45.58, batch-reuse:1
@ 603 train 7.9964 , allloss: 35.2415, dt: 1114.01ms, fracRes: 0.1419, norm(attn): 0.6562, norm(output): 0.1807, norm(x): 0.2716, norm(y): 0.9850, norm:63.2536, tok/sec: 117657.90, flops:45.84, batch-reuse:1
@ 604 train 7.7951 , allloss: 37.1123, dt: 1122.11ms, fracRes: 0.1041, norm(attn): 0.6875, norm(output): 0.1670, norm(x): 0.2343, norm(y): 0.9844, norm:36.2463, tok/sec: 116808.10, flops:45.51, batch-reuse:1
@ 605 train 8.8223 , allloss: 38.3673, dt: 1121.56ms, fracRes: 0.0732, norm(attn): 0.6367, norm(output): 0.1592, norm(x): 0.2071, norm(y): 0.9833, norm:173.6042, tok/sec: 116866.11, flops:45.53, batch-reuse:1
@ 606 train 7.9866 , allloss: 33.5321, dt: 1124.39ms, fracRes: 0.1528, norm(attn): 0.5273, norm(output): 0.1807, norm(x): 0.2896, norm(y): 0.9840, norm:68.8317, tok/sec: 116571.24, flops:45.42, batch-reuse:1
@ 607 train 7.8907 , allloss: 30.8210, dt: 1123.37ms, fracRes: 0.2363, norm(attn): 0.4707, norm(output): 0.2080, norm(x): 0.3702, norm(y): 0.9847, norm:54.5117, tok/sec: 116677.75, flops:45.46, batch-reuse:1
@ 608 train 7.8378 , allloss: 24.8185, dt: 1134.18ms, fracRes: 0.3360, norm(attn): 0.4727, norm(output): 0.2432, norm(x): 0.4644, norm(y): 0.9853, norm:50.7618, tok/sec: 115565.54, flops:45.02, batch-reuse:1
@ 609 train 7.8571 , allloss: 22.7840, dt: 1134.52ms, fracRes: 0.3923, norm(attn): 0.5117, norm(output): 0.2578, norm(x): 0.5098, norm(y): 0.9858, norm:52.0793, tok/sec: 115531.11, flops:45.01, batch-reuse:1
@ 610 train 7.9764 , allloss: 22.3402, dt: 1125.43ms, fracRes: 0.3975, norm(attn): 0.5508, norm(output): 0.2578, norm(x): 0.5107, norm(y): 0.9859, norm:61.5893, tok/sec: 116464.04, flops:45.37, batch-reuse:1
@ 611 train 7.8695 , allloss: 22.3238, dt: 1119.85ms, fracRes: 0.4000, norm(attn): 0.6094, norm(output): 0.2500, norm(x): 0.5081, norm(y): 0.9858, norm:83.9185, tok/sec: 117044.11, flops:45.60, batch-reuse:1
@ 612 train 8.0119 , allloss: 22.0747, dt: 1137.16ms, fracRes: 0.4112, norm(attn): 0.6641, norm(output): 0.2432, norm(x): 0.5121, norm(y): 0.9855, norm:75.0725, tok/sec: 115262.34, flops:44.91, batch-reuse:1
@ 613 train 8.4572 , allloss: 22.6074, dt: 1126.23ms, fracRes: 0.3630, norm(attn): 0.7148, norm(output): 0.2373, norm(x): 0.4758, norm(y): 0.9848, norm:71.5549, tok/sec: 116381.47, flops:45.34, batch-reuse:1
@ 614 train 8.8253 , allloss: 23.7787, dt: 1121.82ms, fracRes: 0.3127, norm(attn): 0.8359, norm(output): 0.2041, norm(x): 0.4219, norm(y): 0.9842, norm:70.5864, tok/sec: 116838.79, flops:45.52, batch-reuse:1
@ 615 train 8.3376 , allloss: 23.8262, dt: 1118.61ms, fracRes: 0.2758, norm(attn): 1.0625, norm(output): 0.1445, norm(x): 0.3583, norm(y): 0.9844, norm:78.2111, tok/sec: 117173.60, flops:45.65, batch-reuse:1
@ 616 train 8.0564 , allloss: 23.4258, dt: 1118.70ms, fracRes: 0.2837, norm(attn): 1.1953, norm(output): 0.1299, norm(x): 0.3537, norm(y): 0.9847, norm:66.9570, tok/sec: 117164.99, flops:45.65, batch-reuse:1
@ 617 train 7.9915 , allloss: 23.4677, dt: 1124.56ms, fracRes: 0.2995, norm(attn): 1.2734, norm(output): 0.1377, norm(x): 0.3675, norm(y): 0.9847, norm:70.7831, tok/sec: 116554.12, flops:45.41, batch-reuse:1
@ 618 train 8.0154 , allloss: 23.2260, dt: 1123.29ms, fracRes: 0.2979, norm(attn): 1.3750, norm(output): 0.1309, norm(x): 0.3610, norm(y): 0.9848, norm:92.4181, tok/sec: 116686.32, flops:45.46, batch-reuse:1
@ 619 train 7.9684 , allloss: 23.9089, dt: 1142.78ms, fracRes: 0.2494, norm(attn): 1.4922, norm(output): 0.1201, norm(x): 0.3170, norm(y): 0.9847, norm:95.1627, tok/sec: 114695.90, flops:44.69, batch-reuse:1
@ 620 train 7.9837 , allloss: 24.4419, dt: 1135.49ms, fracRes: 0.1508, norm(attn): 1.6172, norm(output): 0.1108, norm(x): 0.2321, norm(y): 0.9844, norm:91.2590, tok/sec: 115431.96, flops:44.97, batch-reuse:1
@ 621 train 7.8516 , allloss: 25.3303, dt: 1129.13ms, fracRes: 0.1436, norm(attn): 1.5312, norm(output): 0.1011, norm(x): 0.2168, norm(y): 0.9849, norm:51.6667, tok/sec: 116081.86, flops:45.23, batch-reuse:1
@ 622 train 7.8891 , allloss: 27.8953, dt: 1133.85ms, fracRes: 0.1133, norm(attn): 1.5000, norm(output): 0.1050, norm(x): 0.1946, norm(y): 0.9845, norm:80.3788, tok/sec: 115598.81, flops:45.04, batch-reuse:1
@ 623 train 7.8813 , allloss: 27.0402, dt: 1131.91ms, fracRes: 0.0731, norm(attn): 1.5000, norm(output): 0.1001, norm(x): 0.1586, norm(y): 0.9840, norm:54.2511, tok/sec: 115797.35, flops:45.11, batch-reuse:1
@ 624 train 8.0597 , allloss: 29.9072, dt: 1134.94ms, fracRes: 0.0490, norm(attn): 1.3750, norm(output): 0.1006, norm(x): 0.1413, norm(y): 0.9839, norm:119.1572, tok/sec: 115487.96, flops:44.99, batch-reuse:1
@ 625 train 8.5332 , allloss: 29.4371, dt: 1136.01ms, fracRes: 0.0901, norm(attn): 1.4531, norm(output): 0.1250, norm(x): 0.1965, norm(y): 0.9836, norm:105.1584, tok/sec: 115379.18, flops:44.95, batch-reuse:1
@ 626 train 8.6923 , allloss: 30.1814, dt: 1134.55ms, fracRes: 0.0984, norm(attn): 1.4922, norm(output): 0.1592, norm(x): 0.2316, norm(y): 0.9835, norm:133.0756, tok/sec: 115527.68, flops:45.01, batch-reuse:1
@ 627 train 8.6791 , allloss: 30.2260, dt: 1139.96ms, fracRes: 0.1179, norm(attn): 1.5781, norm(output): 0.2031, norm(x): 0.2833, norm(y): 0.9839, norm:174.2301, tok/sec: 114979.52, flops:44.80, batch-reuse:1
@ 628 train 8.4478 , allloss: 30.0513, dt: 1120.41ms, fracRes: 0.1559, norm(attn): 1.6562, norm(output): 0.2676, norm(x): 0.3603, norm(y): 0.9843, norm:221.7690, tok/sec: 116985.40, flops:45.58, batch-reuse:1
@ 629 train 8.1431 , allloss: 28.8344, dt: 1102.79ms, fracRes: 0.2555, norm(attn): 1.6641, norm(output): 0.3438, norm(x): 0.4795, norm(y): 0.9849, norm:217.1842, tok/sec: 118855.12, flops:46.31, batch-reuse:1
@ 630 train 8.0257 , allloss: 27.6137, dt: 1121.65ms, fracRes: 0.3233, norm(attn): 1.7422, norm(output): 0.4375, norm(x): 0.5808, norm(y): 0.9853, norm:181.1062, tok/sec: 116856.15, flops:45.53, batch-reuse:1
@ 631 train 7.8547 , allloss: 25.7352, dt: 1125.07ms, fracRes: 0.3649, norm(attn): 1.7578, norm(output): 0.5547, norm(x): 0.6660, norm(y): 0.9856, norm:186.1642, tok/sec: 116500.69, flops:45.39, batch-reuse:1
@ 632 train 7.9420 , allloss: 24.9603, dt: 1127.88ms, fracRes: 0.3949, norm(attn): 1.7656, norm(output): 0.6680, norm(x): 0.7418, norm(y): 0.9860, norm:173.3531, tok/sec: 116211.35, flops:45.28, batch-reuse:1
@ 633 train 7.9027 , allloss: 25.2958, dt: 1120.70ms, fracRes: 0.4054, norm(attn): 1.8906, norm(output): 0.8281, norm(x): 0.8284, norm(y): 0.9862, norm:173.8977, tok/sec: 116955.56, flops:45.57, batch-reuse:1
@ 634 train 7.6970 , allloss: 26.0873, dt: 1123.74ms, fracRes: 0.3822, norm(attn): 2.2344, norm(output): 1.1094, norm(x): 0.9663, norm(y): 0.9864, norm:180.5482, tok/sec: 116639.23, flops:45.44, batch-reuse:1
@ 635 train 7.8904 , allloss: 28.9647, dt: 1135.68ms, fracRes: 0.3686, norm(attn): 2.5000, norm(output): 1.4141, norm(x): 1.1357, norm(y): 0.9866, norm:176.2458, tok/sec: 115412.43, flops:44.96, batch-reuse:1
@ 636 train 7.8962 , allloss: 31.1275, dt: 1117.72ms, fracRes: 0.3671, norm(attn): 2.6250, norm(output): 1.6719, norm(x): 1.2760, norm(y): 0.9870, norm:179.9936, tok/sec: 117267.18, flops:45.69, batch-reuse:1
@ 637 train 7.7656 , allloss: 31.8365, dt: 1121.64ms, fracRes: 0.3715, norm(attn): 2.7344, norm(output): 1.8672, norm(x): 1.3704, norm(y): 0.9874, norm:182.4781, tok/sec: 116857.56, flops:45.53, batch-reuse:1
@ 638 train 7.7801 , allloss: 32.5359, dt: 1118.92ms, fracRes: 0.3727, norm(attn): 2.7344, norm(output): 1.9688, norm(x): 1.4097, norm(y): 0.9877, norm:179.8081, tok/sec: 117141.10, flops:45.64, batch-reuse:1
@ 639 train 7.8751 , allloss: 32.6674, dt: 1143.30ms, fracRes: 0.3736, norm(attn): 2.6406, norm(output): 1.8750, norm(x): 1.3991, norm(y): 0.9879, norm:170.0361, tok/sec: 114643.24, flops:44.67, batch-reuse:1
@ 640 train 7.7854 , allloss: 30.8898, dt: 1133.06ms, fracRes: 0.3741, norm(attn): 2.5000, norm(output): 1.8438, norm(x): 1.3680, norm(y): 0.9881, norm:157.0948, tok/sec: 115679.42, flops:45.07, batch-reuse:1
@ 641 train 7.8754 , allloss: 29.9643, dt: 1121.09ms, fracRes: 0.3750, norm(attn): 2.3750, norm(output): 1.7422, norm(x): 1.3177, norm(y): 0.9881, norm:136.2240, tok/sec: 116914.35, flops:45.55, batch-reuse:1
@ 642 train 7.7137 , allloss: 29.2541, dt: 1133.68ms, fracRes: 0.3763, norm(attn): 2.2656, norm(output): 1.7266, norm(x): 1.2979, norm(y): 0.9882, norm:131.5298, tok/sec: 115616.07, flops:45.04, batch-reuse:1
@ 643 train 7.7518 , allloss: 30.1538, dt: 1125.89ms, fracRes: 0.3766, norm(attn): 2.2344, norm(output): 1.7656, norm(x): 1.3277, norm(y): 0.9883, norm:118.3527, tok/sec: 116416.84, flops:45.36, batch-reuse:1
@ 644 train 7.8917 , allloss: 33.0410, dt: 1131.26ms, fracRes: 0.3789, norm(attn): 2.2656, norm(output): 1.9609, norm(x): 1.4165, norm(y): 0.9885, norm:94.8001, tok/sec: 115863.69, flops:45.14, batch-reuse:1
@ 645 train 7.8116 , allloss: 34.4975, dt: 1125.78ms, fracRes: 0.3807, norm(attn): 2.3594, norm(output): 2.1250, norm(x): 1.5234, norm(y): 0.9888, norm:89.9073, tok/sec: 116427.54, flops:45.36, batch-reuse:1
@ 646 train 7.7031 , allloss: 37.2750, dt: 1119.04ms, fracRes: 0.3791, norm(attn): 2.4375, norm(output): 2.2656, norm(x): 1.5861, norm(y): 0.9891, norm:109.0112, tok/sec: 117128.74, flops:45.63, batch-reuse:1
@ 647 train 7.7586 , allloss: 36.7115, dt: 1126.54ms, fracRes: 0.3797, norm(attn): 2.4062, norm(output): 2.2500, norm(x): 1.5793, norm(y): 0.9893, norm:126.0929, tok/sec: 116349.08, flops:45.33, batch-reuse:1
@ 648 train 7.6844 , allloss: 34.9038, dt: 1113.52ms, fracRes: 0.3800, norm(attn): 2.2500, norm(output): 2.1094, norm(x): 1.4989, norm(y): 0.9894, norm:138.6358, tok/sec: 117709.87, flops:45.86, batch-reuse:1
@ 649 train 7.8717 , allloss: 34.9097, dt: 1131.62ms, fracRes: 0.3810, norm(attn): 2.0781, norm(output): 1.8438, norm(x): 1.3613, norm(y): 0.9895, norm:154.3255, tok/sec: 115826.73, flops:45.13, batch-reuse:1
@ 650 train 7.7945 , allloss: 34.3380, dt: 1132.68ms, fracRes: 0.3854, norm(attn): 1.8516, norm(output): 1.5234, norm(x): 1.1904, norm(y): 0.9894, norm:162.4733, tok/sec: 115718.77, flops:45.08, batch-reuse:1
@ 651 train 7.8719 , allloss: 31.7490, dt: 1129.68ms, fracRes: 0.4058, norm(attn): 1.5625, norm(output): 1.1641, norm(x): 1.0022, norm(y): 0.9892, norm:167.1152, tok/sec: 116025.39, flops:45.20, batch-reuse:1
@ 652 train 7.7474 , allloss: 34.4580, dt: 1133.96ms, fracRes: 0.4368, norm(attn): 1.2656, norm(output): 0.8242, norm(x): 0.8371, norm(y): 0.9890, norm:147.1340, tok/sec: 115588.34, flops:45.03, batch-reuse:1
@ 653 train 7.7155 , allloss: 40.6975, dt: 1131.01ms, fracRes: 0.4403, norm(attn): 1.0000, norm(output): 0.5508, norm(x): 0.7151, norm(y): 0.9886, norm:147.6123, tok/sec: 115889.80, flops:45.15, batch-reuse:1
@ 654 train 7.7188 , allloss: 44.6071, dt: 1133.55ms, fracRes: 0.4084, norm(attn): 0.8867, norm(output): 0.3848, norm(x): 0.6217, norm(y): 0.9879, norm:138.0159, tok/sec: 115629.28, flops:45.05, batch-reuse:1
@ 655 train 7.7744 , allloss: 48.7594, dt: 1132.71ms, fracRes: 0.4459, norm(attn): 0.8516, norm(output): 0.3965, norm(x): 0.6694, norm(y): 0.9883, norm:143.9855, tok/sec: 115715.19, flops:45.08, batch-reuse:1
@ 656 train 7.8307 , allloss: 55.3942, dt: 1137.94ms, fracRes: 0.4705, norm(attn): 0.8398, norm(output): 0.6172, norm(x): 0.8139, norm(y): 0.9880, norm:338.9442, tok/sec: 115183.61, flops:44.88, batch-reuse:1
@ 657 train 7.6789 , allloss: 57.5210, dt: 1126.81ms, fracRes: 0.4058, norm(attn): 1.0938, norm(output): 1.7891, norm(x): 1.3912, norm(y): 0.9875, norm:1461.8951, tok/sec: 116321.29, flops:45.32, batch-reuse:1
@ 658 train 7.7563 , allloss: 51.4905, dt: 1121.34ms, fracRes: 0.3815, norm(attn): 1.4141, norm(output): 3.5625, norm(x): 2.3801, norm(y): 0.9871, norm:477.0484, tok/sec: 116888.89, flops:45.54, batch-reuse:1
@ 659 train 7.6941 , allloss: 56.9432, dt: 1122.15ms, fracRes: 0.3800, norm(attn): 1.7812, norm(output): 5.9062, norm(x): 3.6195, norm(y): 0.9868, norm:373.2210, tok/sec: 116803.83, flops:45.51, batch-reuse:1
@ 660 train 7.7835 , allloss: 74.4979, dt: 1143.42ms, fracRes: 0.3795, norm(attn): 2.1406, norm(output): 8.7500, norm(x): 5.2006, norm(y): 0.9864, norm:191.9939, tok/sec: 114631.33, flops:44.66, batch-reuse:1
@ 661 train 7.8393 , allloss: 94.1164, dt: 1128.88ms, fracRes: 0.3886, norm(attn): 2.4062, norm(output): 11.3750, norm(x): 6.5261, norm(y): 0.9859, norm:320.7105, tok/sec: 116108.07, flops:45.24, batch-reuse:1
@ 662 train 7.9616 , allloss: 128.7189, dt: 1119.84ms, fracRes: 0.4460, norm(attn): 2.3281, norm(output): 11.4375, norm(x): 5.9811, norm(y): 0.9854, norm:155.4413, tok/sec: 117045.25, flops:45.60, batch-reuse:1
@ 663 train 8.0289 , allloss: 115.2895, dt: 1132.89ms, fracRes: 0.4546, norm(attn): 2.3281, norm(output): 11.6875, norm(x): 6.0390, norm(y): 0.9848, norm:206.0645, tok/sec: 115696.73, flops:45.08, batch-reuse:1
@ 664 train 7.9960 , allloss: 112.9821, dt: 1130.85ms, fracRes: 0.4531, norm(attn): 2.3438, norm(output): 12.8125, norm(x): 6.5368, norm(y): 0.9844, norm:195.7658, tok/sec: 115906.04, flops:45.16, batch-reuse:1
@ 665 train 7.9355 , allloss: 119.3074, dt: 1133.27ms, fracRes: 0.4513, norm(attn): 2.5000, norm(output): 14.9375, norm(x): 7.5548, norm(y): 0.9843, norm:204.7782, tok/sec: 115658.30, flops:45.06, batch-reuse:1
@ 666 train 7.7025 , allloss: 146.0357, dt: 1111.57ms, fracRes: 0.4496, norm(attn): 2.7656, norm(output): 17.8750, norm(x): 9.0499, norm(y): 0.9845, norm:222.1762, tok/sec: 117916.21, flops:45.94, batch-reuse:1
@ 667 train 7.6150 , allloss: 152.5912, dt: 1129.51ms, fracRes: 0.4486, norm(attn): 2.9844, norm(output): 20.1250, norm(x): 10.1395, norm(y): 0.9848, norm:342.9034, tok/sec: 116042.83, flops:45.21, batch-reuse:1
@ 668 train 7.6990 , allloss: 176.3557, dt: 1114.82ms, fracRes: 0.4463, norm(attn): 3.1250, norm(output): 21.2500, norm(x): 10.6034, norm(y): 0.9850, norm:392.6074, tok/sec: 117572.37, flops:45.81, batch-reuse:1
@ 669 train 7.6665 , allloss: 166.9758, dt: 1134.54ms, fracRes: 0.4502, norm(attn): 3.1562, norm(output): 21.2500, norm(x): 10.4238, norm(y): 0.9852, norm:381.9239, tok/sec: 115528.41, flops:45.01, batch-reuse:1
@ 670 train 7.7915 , allloss: 160.9088, dt: 1116.33ms, fracRes: 0.4644, norm(attn): 2.9219, norm(output): 18.8750, norm(x): 8.9870, norm(y): 0.9852, norm:1405.9303, tok/sec: 117413.04, flops:45.74, batch-reuse:1
@ 671 train 7.6956 , allloss: 124.3783, dt: 1127.58ms, fracRes: 0.5845, norm(attn): 2.2031, norm(output): 13.1875, norm(x): 5.1383, norm(y): 0.9854, norm:406.6501, tok/sec: 116242.36, flops:45.29, batch-reuse:1
@ 672 train 7.7803 , allloss: 97.5160, dt: 1120.84ms, fracRes: 0.5867, norm(attn): 2.0156, norm(output): 11.0625, norm(x): 4.3282, norm(y): 0.9854, norm:167.0235, tok/sec: 116940.53, flops:45.56, batch-reuse:1
@ 673 train 7.7852 , allloss: 75.2532, dt: 1112.74ms, fracRes: 0.5953, norm(attn): 1.9219, norm(output): 9.6250, norm(x): 3.7029, norm(y): 0.9853, norm:171.0249, tok/sec: 117792.64, flops:45.89, batch-reuse:1
@ 674 train 7.8450 , allloss: 76.6754, dt: 1117.97ms, fracRes: 0.5873, norm(attn): 1.7188, norm(output): 7.4062, norm(x): 3.0173, norm(y): 0.9851, norm:157.3027, tok/sec: 117240.70, flops:45.68, batch-reuse:1
@ 675 train 7.6708 , allloss: 65.9371, dt: 1131.25ms, fracRes: 0.5848, norm(attn): 1.4922, norm(output): 5.4375, norm(x): 2.3041, norm(y): 0.9849, norm:331.6717, tok/sec: 115865.18, flops:45.14, batch-reuse:1
@ 676 train 7.7787 , allloss: 80.8996, dt: 1139.12ms, fracRes: 0.6152, norm(attn): 1.1953, norm(output): 3.4844, norm(x): 1.5301, norm(y): 0.9847, norm:1895.3400, tok/sec: 115064.32, flops:44.83, batch-reuse:1
@ 677 train 7.8984 , allloss: 81.3064, dt: 1124.46ms, fracRes: 0.5655, norm(attn): 1.0469, norm(output): 2.1875, norm(x): 1.1765, norm(y): 0.9844, norm:645.1274, tok/sec: 116564.32, flops:45.41, batch-reuse:1
@ 678 train 7.7762 , allloss: 102.5479, dt: 1122.73ms, fracRes: 0.3546, norm(attn): 0.8828, norm(output): 0.6562, norm(x): 0.6740, norm(y): 0.9836, norm:1042939.6875, tok/sec: 116744.11, flops:45.48, batch-reuse:1
@ 679 train 8.1775 , allloss: 152.2480, dt: 1130.64ms, fracRes: 0.0748, norm(attn): 0.9648, norm(output): 0.3828, norm(x): 0.4012, norm(y): 0.9822, norm:12918847.0000, tok/sec: 115927.55, flops:45.17, batch-reuse:1
@ 680 train 7.9635 , allloss: 126.9162, dt: 1141.43ms, fracRes: 0.0728, norm(attn): 1.0547, norm(output): 0.3672, norm(x): 0.3909, norm(y): 0.9820, norm:14338638.0000, tok/sec: 114831.14, flops:44.74, batch-reuse:1
@ 681 train 7.8671 , allloss: 113.7406, dt: 1135.40ms, fracRes: 0.0695, norm(attn): 1.1484, norm(output): 0.3887, norm(x): 0.4012, norm(y): 0.9817, norm:108198480.0000, tok/sec: 115441.39, flops:44.98, batch-reuse:1
@ 682 train 7.9034 , allloss: 195.7368, dt: 1134.84ms, fracRes: 0.0535, norm(attn): 1.1641, norm(output): 0.5469, norm(x): 0.5366, norm(y): 0.9807, norm:334989952.0000, tok/sec: 115498.58, flops:45.00, batch-reuse:1
@ 683 train 7.9873 , allloss: 154.6757, dt: 1111.78ms, fracRes: 0.0458, norm(attn): 1.2969, norm(output): 0.5469, norm(x): 0.5318, norm(y): 0.9807, norm:2772959.2500, tok/sec: 117894.01, flops:45.93, batch-reuse:1
@ 684 train 7.8990 , allloss: 131.7020, dt: 1113.52ms, fracRes: 0.0493, norm(attn): 1.3906, norm(output): 0.5508, norm(x): 0.5363, norm(y): 0.9805, norm:1694155.6250, tok/sec: 117709.79, flops:45.86, batch-reuse:1
@ 685 train 7.9316 , allloss: 127.1799, dt: 1130.11ms, fracRes: 0.0419, norm(attn): 1.4609, norm(output): 0.5703, norm(x): 0.5505, norm(y): 0.9803, norm:189580.1250, tok/sec: 115981.33, flops:45.19, batch-reuse:1
@ 686 train 8.0765 , allloss: 122.0376, dt: 1119.42ms, fracRes: 0.0321, norm(attn): 1.5156, norm(output): 0.5664, norm(x): 0.5392, norm(y): 0.9800, norm:234205.1406, tok/sec: 117089.30, flops:45.62, batch-reuse:1
@ 687 train 8.2231 , allloss: 152.9105, dt: 1114.19ms, fracRes: 0.0108, norm(attn): 1.4922, norm(output): 0.6406, norm(x): 0.5999, norm(y): 0.9794, norm:145922.4219, tok/sec: 117638.71, flops:45.83, batch-reuse:1
@ 688 train 9.8250 , allloss: 310.9531, dt: 1115.67ms, fracRes: 0.0120, norm(attn): 1.2031, norm(output): 0.9297, norm(x): 0.8547, norm(y): 0.9782, norm:57855.4531, tok/sec: 117482.47, flops:45.77, batch-reuse:1
@ 689 train 10.7718 , allloss: 293.3549, dt: 1120.96ms, fracRes: 0.0126, norm(attn): 1.2344, norm(output): 1.1250, norm(x): 1.0192, norm(y): 0.9782, norm:128924.2344, tok/sec: 116927.95, flops:45.56, batch-reuse:1
@ 690 train 9.7185 , allloss: 182.9510, dt: 1117.41ms, fracRes: 0.0132, norm(attn): 1.5469, norm(output): 1.0703, norm(x): 0.9684, norm(y): 0.9796, norm:35380.7930, tok/sec: 117300.31, flops:45.70, batch-reuse:1
@ 691 train 9.6192 , allloss: 105.1843, dt: 1123.66ms, fracRes: 0.0186, norm(attn): 1.6250, norm(output): 1.1250, norm(x): 1.0289, norm(y): 0.9801, norm:11883.5703, tok/sec: 116647.72, flops:45.45, batch-reuse:1
@ 692 train 9.2088 , allloss: 61.5375, dt: 1118.19ms, fracRes: 0.0254, norm(attn): 1.7656, norm(output): 1.0938, norm(x): 0.9999, norm(y): 0.9808, norm:470.2703, tok/sec: 117217.90, flops:45.67, batch-reuse:1
@ 693 train 9.3101 , allloss: 56.8062, dt: 1122.26ms, fracRes: 0.0099, norm(attn): 1.8047, norm(output): 0.9922, norm(x): 0.8997, norm(y): 0.9812, norm:310.9465, tok/sec: 116792.49, flops:45.50, batch-reuse:1
@ 694 train 8.9246 , allloss: 53.5895, dt: 1134.64ms, fracRes: 0.0585, norm(attn): 2.1406, norm(output): 0.8750, norm(x): 0.8016, norm(y): 0.9821, norm:581.0441, tok/sec: 115518.87, flops:45.01, batch-reuse:1
@ 695 train 7.9193 , allloss: 48.5001, dt: 1120.67ms, fracRes: 0.5732, norm(attn): 1.5000, norm(output): 0.5430, norm(x): 0.7687, norm(y): 0.9846, norm:96.9079, tok/sec: 116958.92, flops:45.57, batch-reuse:1
@ 696 train 7.8359 , allloss: 42.2247, dt: 1123.50ms, fracRes: 0.6021, norm(attn): 1.4609, norm(output): 0.5156, norm(x): 0.7579, norm(y): 0.9852, norm:85.1117, tok/sec: 116664.26, flops:45.45, batch-reuse:1
@ 697 train 7.9379 , allloss: 36.7404, dt: 1108.75ms, fracRes: 0.6160, norm(attn): 1.4375, norm(output): 0.4727, norm(x): 0.7404, norm(y): 0.9857, norm:92.6497, tok/sec: 118215.87, flops:46.06, batch-reuse:1
@ 698 train 8.1208 , allloss: 33.9200, dt: 1114.58ms, fracRes: 0.6095, norm(attn): 1.4766, norm(output): 0.4199, norm(x): 0.7186, norm(y): 0.9864, norm:106.4531, tok/sec: 117597.34, flops:45.82, batch-reuse:1
@ 699 train 8.2161 , allloss: 31.2592, dt: 1102.97ms, fracRes: 0.5388, norm(attn): 1.6484, norm(output): 0.3867, norm(x): 0.6716, norm(y): 0.9868, norm:131.2622, tok/sec: 118835.80, flops:46.30, batch-reuse:1
@ 700 train 7.8107 , allloss: 27.0411, dt: 1117.21ms, fracRes: 0.1046, norm(attn): 2.5000, norm(output): 0.6172, norm(x): 0.5951, norm(y): 0.9856, norm:223.5625, tok/sec: 117320.36, flops:45.71, batch-reuse:1
@ 701 train 8.0460 , allloss: 28.5117, dt: 1124.35ms, fracRes: 0.1353, norm(attn): 2.0469, norm(output): 0.6094, norm(x): 0.6028, norm(y): 0.9847, norm:319.4360, tok/sec: 116575.52, flops:45.42, batch-reuse:1
@ 702 train 8.2798 , allloss: 29.6986, dt: 1131.24ms, fracRes: 0.1446, norm(attn): 2.0000, norm(output): 0.7500, norm(x): 0.7094, norm(y): 0.9839, norm:102.9058, tok/sec: 115865.93, flops:45.14, batch-reuse:1
@ 703 train 8.5055 , allloss: 32.3509, dt: 1140.66ms, fracRes: 0.1475, norm(attn): 2.0312, norm(output): 0.9180, norm(x): 0.8321, norm(y): 0.9830, norm:262.9458, tok/sec: 114909.36, flops:44.77, batch-reuse:1
@ 704 train 8.6483 , allloss: 32.9244, dt: 1110.63ms, fracRes: 0.1699, norm(attn): 1.8828, norm(output): 0.8750, norm(x): 0.8112, norm(y): 0.9821, norm:381.5322, tok/sec: 118015.77, flops:45.98, batch-reuse:1
@ 705 train 8.6559 , allloss: 32.8282, dt: 1115.58ms, fracRes: 0.2649, norm(attn): 1.4688, norm(output): 0.6484, norm(x): 0.6687, norm(y): 0.9816, norm:360.4908, tok/sec: 117492.36, flops:45.78, batch-reuse:1
@ 706 train 9.0636 , allloss: 46.7043, dt: 1129.41ms, fracRes: 0.3102, norm(attn): 1.0234, norm(output): 0.4082, norm(x): 0.5311, norm(y): 0.9810, norm:131.4675, tok/sec: 116053.73, flops:45.21, batch-reuse:1
@ 707 train 9.5918 , allloss: 62.2683, dt: 1109.54ms, fracRes: 0.2694, norm(attn): 0.8125, norm(output): 0.3789, norm(x): 0.4854, norm(y): 0.9803, norm:195.0343, tok/sec: 118131.99, flops:46.02, batch-reuse:1
@ 708 train 8.6537 , allloss: 28.0053, dt: 1107.65ms, fracRes: 0.3139, norm(attn): 1.1250, norm(output): 0.3008, norm(x): 0.4633, norm(y): 0.9806, norm:189.6813, tok/sec: 118333.56, flops:46.10, batch-reuse:1
@ 709 train 8.1393 , allloss: 22.6514, dt: 1118.85ms, fracRes: 0.2019, norm(attn): 1.2422, norm(output): 0.2490, norm(x): 0.3574, norm(y): 0.9798, norm:277.4695, tok/sec: 117148.93, flops:45.64, batch-reuse:1
@ 710 train 7.9530 , allloss: 23.2487, dt: 1133.47ms, fracRes: 0.0655, norm(attn): 1.2578, norm(output): 0.1895, norm(x): 0.2215, norm(y): 0.9786, norm:120.5021, tok/sec: 115637.77, flops:45.05, batch-reuse:1
@ 711 train 8.0195 , allloss: 31.1279, dt: 1142.92ms, fracRes: 0.0348, norm(attn): 1.2656, norm(output): 0.1357, norm(x): 0.1513, norm(y): 0.9782, norm:66.7535, tok/sec: 114681.31, flops:44.68, batch-reuse:1
@ 712 train 7.8495 , allloss: 24.3456, dt: 1108.81ms, fracRes: 0.1115, norm(attn): 1.2500, norm(output): 0.1172, norm(x): 0.1916, norm(y): 0.9806, norm:151.0336, tok/sec: 118209.57, flops:46.05, batch-reuse:1
@ 713 train 8.0087 , allloss: 27.2381, dt: 1116.86ms, fracRes: 0.1014, norm(attn): 1.3594, norm(output): 0.0986, norm(x): 0.1677, norm(y): 0.9810, norm:116.3996, tok/sec: 117357.65, flops:45.72, batch-reuse:1
@ 714 train 8.2261 , allloss: 46.6112, dt: 1124.94ms, fracRes: 0.0349, norm(attn): 1.2188, norm(output): 0.1157, norm(x): 0.1343, norm(y): 0.9802, norm:19880.8555, tok/sec: 116514.96, flops:45.39, batch-reuse:1
@ 715 train 9.0940 , allloss: 64.7076, dt: 1118.41ms, fracRes: 0.0126, norm(attn): 1.0938, norm(output): 0.1387, norm(x): 0.1366, norm(y): 0.9798, norm:63118.0664, tok/sec: 117194.83, flops:45.66, batch-reuse:1
@ 716 train 8.8131 , allloss: 64.9484, dt: 1140.34ms, fracRes: 0.0072, norm(attn): 1.0625, norm(output): 0.1514, norm(x): 0.1405, norm(y): 0.9798, norm:178076.2812, tok/sec: 114940.91, flops:44.78, batch-reuse:1
@ 717 train 8.6631 , allloss: 60.2203, dt: 1136.73ms, fracRes: 0.0081, norm(attn): 1.1172, norm(output): 0.1475, norm(x): 0.1402, norm(y): 0.9796, norm:6454.2319, tok/sec: 115306.17, flops:44.92, batch-reuse:1
@ 718 train 9.1907 , allloss: 88.2063, dt: 1138.51ms, fracRes: 0.0045, norm(attn): 0.9922, norm(output): 0.1865, norm(x): 0.1707, norm(y): 0.9794, norm:42607.1719, tok/sec: 115126.18, flops:44.85, batch-reuse:1
@ 719 train 9.3625 , allloss: 96.3342, dt: 1126.54ms, fracRes: 0.0027, norm(attn): 1.1250, norm(output): 0.2188, norm(x): 0.2002, norm(y): 0.9795, norm:114288.1641, tok/sec: 116349.23, flops:45.33, batch-reuse:1
@ 720 train 9.9211 , allloss: 92.4490, dt: 1131.97ms, fracRes: 0.0026, norm(attn): 1.2031, norm(output): 0.2266, norm(x): 0.2117, norm(y): 0.9793, norm:311519.4375, tok/sec: 115791.16, flops:45.11, batch-reuse:1
@ 721 train 9.8613 , allloss: 135.0506, dt: 1108.79ms, fracRes: 0.0048, norm(attn): 1.0469, norm(output): 0.3164, norm(x): 0.2934, norm(y): 0.9794, norm:122476.5156, tok/sec: 118211.85, flops:46.06, batch-reuse:1
@ 722 train 10.2061 , allloss: 134.1569, dt: 1118.82ms, fracRes: 0.0047, norm(attn): 1.1719, norm(output): 0.3086, norm(x): 0.2890, norm(y): 0.9794, norm:426587.0000, tok/sec: 117151.48, flops:45.64, batch-reuse:1
@ 723 train 10.2088 , allloss: 190.0126, dt: 1132.99ms, fracRes: 0.0047, norm(attn): 1.1562, norm(output): 0.3965, norm(x): 0.3712, norm(y): 0.9795, norm:1420946.7500, tok/sec: 115686.41, flops:45.07, batch-reuse:1
@ 724 train 10.4772 , allloss: 167.6265, dt: 1111.47ms, fracRes: 0.0051, norm(attn): 1.4609, norm(output): 0.3652, norm(x): 0.3372, norm(y): 0.9796, norm:416354.2812, tok/sec: 117926.41, flops:45.94, batch-reuse:1
@ 725 train 10.2738 , allloss: 163.1228, dt: 1106.19ms, fracRes: 0.0075, norm(attn): 1.6016, norm(output): 0.3730, norm(x): 0.3507, norm(y): 0.9801, norm:132812.4062, tok/sec: 118489.13, flops:46.16, batch-reuse:1
@ 726 train 10.4792 , allloss: 129.1478, dt: 1103.67ms, fracRes: 0.0085, norm(attn): 1.7891, norm(output): 0.3457, norm(x): 0.3295, norm(y): 0.9805, norm:1964908.1250, tok/sec: 118760.59, flops:46.27, batch-reuse:1
@ 727 train 10.4230 , allloss: 104.3057, dt: 1118.44ms, fracRes: 0.0120, norm(attn): 1.8516, norm(output): 0.3340, norm(x): 0.3152, norm(y): 0.9808, norm:539316.8125, tok/sec: 117191.86, flops:45.66, batch-reuse:1
@ 728 train 10.1977 , allloss: 94.8576, dt: 1133.63ms, fracRes: 0.0146, norm(attn): 1.9141, norm(output): 0.3457, norm(x): 0.3289, norm(y): 0.9810, norm:1114763.0000, tok/sec: 115621.42, flops:45.05, batch-reuse:1
@ 729 train 10.0502 , allloss: 82.2241, dt: 1137.16ms, fracRes: 0.0193, norm(attn): 2.0625, norm(output): 0.3691, norm(x): 0.3504, norm(y): 0.9812, norm:420391.9375, tok/sec: 115262.14, flops:44.91, batch-reuse:1
@ 730 train 10.0356 , allloss: 71.2839, dt: 1113.93ms, fracRes: 0.0299, norm(attn): 2.1875, norm(output): 0.3984, norm(x): 0.3798, norm(y): 0.9813, norm:462340.8750, tok/sec: 117666.68, flops:45.84, batch-reuse:1
@ 731 train 9.9790 , allloss: 65.2517, dt: 1117.62ms, fracRes: 0.0507, norm(attn): 2.2344, norm(output): 0.4199, norm(x): 0.4120, norm(y): 0.9814, norm:65562.3984, tok/sec: 117278.19, flops:45.69, batch-reuse:1
@ 732 train 9.8192 , allloss: 61.1156, dt: 1134.86ms, fracRes: 0.0678, norm(attn): 2.1250, norm(output): 0.4336, norm(x): 0.4296, norm(y): 0.9815, norm:76674.9609, tok/sec: 115496.04, flops:45.00, batch-reuse:1
@ 733 train 9.6294 , allloss: 58.6458, dt: 1107.20ms, fracRes: 0.0846, norm(attn): 1.9922, norm(output): 0.4336, norm(x): 0.4406, norm(y): 0.9815, norm:1170.7621, tok/sec: 118381.13, flops:46.12, batch-reuse:1
@ 734 train 9.3959 , allloss: 64.0108, dt: 1101.14ms, fracRes: 0.1129, norm(attn): 1.7500, norm(output): 0.4277, norm(x): 0.4487, norm(y): 0.9816, norm:1234.4495, tok/sec: 119033.46, flops:46.38, batch-reuse:1
@ 735 train 9.0077 , allloss: 72.8838, dt: 1121.39ms, fracRes: 0.1439, norm(attn): 1.4609, norm(output): 0.4102, norm(x): 0.4490, norm(y): 0.9817, norm:430.2194, tok/sec: 116883.95, flops:45.54, batch-reuse:1
@ 736 train 8.5734 , allloss: 70.2131, dt: 1090.50ms, fracRes: 0.1758, norm(attn): 1.3047, norm(output): 0.3965, norm(x): 0.4599, norm(y): 0.9818, norm:1399.8510, tok/sec: 120194.26, flops:46.83, batch-reuse:1
@ 737 train 8.1695 , allloss: 61.1767, dt: 1132.27ms, fracRes: 0.2490, norm(attn): 1.0312, norm(output): 0.3555, norm(x): 0.4744, norm(y): 0.9823, norm:2968.1399, tok/sec: 115760.49, flops:45.10, batch-reuse:1
@ 738 train 8.0121 , allloss: 49.6577, dt: 1115.11ms, fracRes: 0.3351, norm(attn): 0.8359, norm(output): 0.3359, norm(x): 0.5141, norm(y): 0.9828, norm:79.3639, tok/sec: 117541.27, flops:45.79, batch-reuse:1
@ 739 train 7.9000 , allloss: 42.6534, dt: 1108.13ms, fracRes: 0.4415, norm(attn): 0.7070, norm(output): 0.3438, norm(x): 0.5890, norm(y): 0.9832, norm:88.5946, tok/sec: 118281.70, flops:46.08, batch-reuse:1
@ 740 train 8.0109 , allloss: 36.1724, dt: 1103.01ms, fracRes: 0.5342, norm(attn): 0.8047, norm(output): 0.3828, norm(x): 0.6594, norm(y): 0.9826, norm:117.6014, tok/sec: 118831.28, flops:46.30, batch-reuse:1
@ 741 train 8.2910 , allloss: 35.5613, dt: 1112.22ms, fracRes: 0.5514, norm(attn): 0.7891, norm(output): 0.3789, norm(x): 0.6662, norm(y): 0.9818, norm:84.3845, tok/sec: 117846.88, flops:45.91, batch-reuse:1
@ 742 train 8.1893 , allloss: 39.1382, dt: 1121.13ms, fracRes: 0.5797, norm(attn): 0.6797, norm(output): 0.3867, norm(x): 0.6794, norm(y): 0.9808, norm:80.6369, tok/sec: 116910.82, flops:45.55, batch-reuse:1
@ 743 train 8.4014 , allloss: 45.2631, dt: 1108.50ms, fracRes: 0.5588, norm(attn): 0.6719, norm(output): 0.3887, norm(x): 0.6623, norm(y): 0.9796, norm:97.6809, tok/sec: 118242.26, flops:46.07, batch-reuse:1
@ 744 train 9.1125 , allloss: 52.1288, dt: 1112.90ms, fracRes: 0.5347, norm(attn): 0.7344, norm(output): 0.3613, norm(x): 0.6374, norm(y): 0.9784, norm:112.7931, tok/sec: 117775.26, flops:45.89, batch-reuse:1
@ 745 train 8.9222 , allloss: 70.2023, dt: 1130.36ms, fracRes: 0.4514, norm(attn): 0.8477, norm(output): 0.3359, norm(x): 0.5802, norm(y): 0.9772, norm:21164.3652, tok/sec: 115955.97, flops:45.18, batch-reuse:1
@ 746 train 9.6284 , allloss: 115.6017, dt: 1099.58ms, fracRes: 0.3030, norm(attn): 0.9844, norm(output): 0.3594, norm(x): 0.4918, norm(y): 0.9763, norm:980307.5000, tok/sec: 119201.35, flops:46.44, batch-reuse:1
@ 747 train 12.0194 , allloss: 208.1261, dt: 1103.68ms, fracRes: 0.0948, norm(attn): 1.3203, norm(output): 0.4395, norm(x): 0.4488, norm(y): 0.9756, norm:1082255.3750, tok/sec: 118759.46, flops:46.27, batch-reuse:1
@ 748 train 11.9991 , allloss: 152.7674, dt: 1106.84ms, fracRes: 0.0877, norm(attn): 1.4062, norm(output): 0.3633, norm(x): 0.3751, norm(y): 0.9752, norm:1909895.8750, tok/sec: 118420.40, flops:46.14, batch-reuse:1
@ 749 train 11.9885 , allloss: 100.0249, dt: 1101.53ms, fracRes: 0.1190, norm(attn): 1.4062, norm(output): 0.2969, norm(x): 0.3457, norm(y): 0.9748, norm:86630.7500, tok/sec: 118991.24, flops:46.36, batch-reuse:1
@ 750 train 11.7631 , allloss: 51.9883, dt: 1123.51ms, fracRes: 0.2471, norm(attn): 1.4922, norm(output): 0.2451, norm(x): 0.4032, norm(y): 0.9755, norm:2283.1272, tok/sec: 116663.04, flops:45.45, batch-reuse:1
@ 751 train 13.5963 , allloss: 37.3019, dt: 1118.45ms, fracRes: 0.3918, norm(attn): 1.8047, norm(output): 0.2480, norm(x): 0.5046, norm(y): 0.9773, norm:147.7317, tok/sec: 117191.01, flops:45.66, batch-reuse:1
@ 752 train 11.6938 , allloss: 32.1270, dt: 1104.74ms, fracRes: 0.4232, norm(attn): 2.1875, norm(output): 0.2871, norm(x): 0.5488, norm(y): 0.9787, norm:158.3779, tok/sec: 118644.63, flops:46.22, batch-reuse:1
@ 753 train 9.8412 , allloss: 28.6342, dt: 1102.95ms, fracRes: 0.3905, norm(attn): 2.5000, norm(output): 0.3125, norm(x): 0.5396, norm(y): 0.9796, norm:171.3444, tok/sec: 118837.45, flops:46.30, batch-reuse:1
@ 754 train 8.5673 , allloss: 26.9939, dt: 1111.53ms, fracRes: 0.3647, norm(attn): 2.7344, norm(output): 0.3105, norm(x): 0.5207, norm(y): 0.9801, norm:131.5802, tok/sec: 117920.31, flops:45.94, batch-reuse:1
@ 755 train 8.2032 , allloss: 26.7893, dt: 1109.82ms, fracRes: 0.3296, norm(attn): 2.8281, norm(output): 0.2832, norm(x): 0.4840, norm(y): 0.9797, norm:160.5779, tok/sec: 118101.56, flops:46.01, batch-reuse:1
@ 756 train 7.9468 , allloss: 26.5370, dt: 1120.86ms, fracRes: 0.2836, norm(attn): 2.8281, norm(output): 0.2354, norm(x): 0.4245, norm(y): 0.9790, norm:170.1775, tok/sec: 116939.12, flops:45.56, batch-reuse:1
@ 757 train 8.1632 , allloss: 27.4910, dt: 1122.28ms, fracRes: 0.2822, norm(attn): 2.7969, norm(output): 0.2148, norm(x): 0.4111, norm(y): 0.9778, norm:184.8234, tok/sec: 116790.88, flops:45.50, batch-reuse:1
@ 758 train 9.0620 , allloss: 27.7091, dt: 1114.63ms, fracRes: 0.2870, norm(attn): 2.7500, norm(output): 0.2148, norm(x): 0.4152, norm(y): 0.9762, norm:174.3281, tok/sec: 117592.36, flops:45.81, batch-reuse:1
@ 759 train 10.9201 , allloss: 29.4511, dt: 1131.23ms, fracRes: 0.2878, norm(attn): 2.7188, norm(output): 0.2422, norm(x): 0.4372, norm(y): 0.9748, norm:186.4746, tok/sec: 115866.98, flops:45.14, batch-reuse:1
@ 760 train 12.0058 , allloss: 29.5029, dt: 1123.68ms, fracRes: 0.2882, norm(attn): 2.6562, norm(output): 0.3164, norm(x): 0.4874, norm(y): 0.9742, norm:241.3337, tok/sec: 116645.40, flops:45.45, batch-reuse:1
@ 761 train 11.6342 , allloss: 29.3566, dt: 1134.30ms, fracRes: 0.2891, norm(attn): 2.7500, norm(output): 0.4648, norm(x): 0.5767, norm(y): 0.9744, norm:274.3341, tok/sec: 115552.91, flops:45.02, batch-reuse:1
@ 762 train 10.9920 , allloss: 30.2587, dt: 1150.44ms, fracRes: 0.2881, norm(attn): 3.0000, norm(output): 0.6484, norm(x): 0.6971, norm(y): 0.9748, norm:235.1412, tok/sec: 113932.30, flops:44.39, batch-reuse:1
@ 763 train 10.4234 , allloss: 32.8684, dt: 1119.49ms, fracRes: 0.2893, norm(attn): 3.2812, norm(output): 0.8828, norm(x): 0.8517, norm(y): 0.9754, norm:193.6913, tok/sec: 117082.37, flops:45.62, batch-reuse:1
@ 764 train 9.8895 , allloss: 36.2994, dt: 1124.14ms, fracRes: 0.2893, norm(attn): 3.6875, norm(output): 1.2266, norm(x): 1.0459, norm(y): 0.9761, norm:185.1742, tok/sec: 116598.04, flops:45.43, batch-reuse:1
@ 765 train 9.3850 , allloss: 40.7001, dt: 1114.03ms, fracRes: 0.2906, norm(attn): 4.0312, norm(output): 1.6250, norm(x): 1.2974, norm(y): 0.9768, norm:198.9806, tok/sec: 117655.81, flops:45.84, batch-reuse:1
@ 766 train 8.9442 , allloss: 46.3537, dt: 1119.66ms, fracRes: 0.2912, norm(attn): 4.5000, norm(output): 2.1406, norm(x): 1.6152, norm(y): 0.9777, norm:207.2554, tok/sec: 117063.75, flops:45.61, batch-reuse:1
@ 767 train 8.5886 , allloss: 52.9090, dt: 1118.16ms, fracRes: 0.2922, norm(attn): 5.0000, norm(output): 2.7344, norm(x): 1.9968, norm(y): 0.9786, norm:148.4829, tok/sec: 117220.97, flops:45.67, batch-reuse:1
@ 768 train 8.3336 , allloss: 57.7276, dt: 1104.20ms, fracRes: 0.2941, norm(attn): 5.4688, norm(output): 3.4375, norm(x): 2.4082, norm(y): 0.9795, norm:271.4165, tok/sec: 118703.09, flops:46.25, batch-reuse:1
@ 769 train 8.0467 , allloss: 62.9925, dt: 1129.72ms, fracRes: 0.2988, norm(attn): 5.8438, norm(output): 4.0000, norm(x): 2.7770, norm(y): 0.9804, norm:332.0898, tok/sec: 116021.92, flops:45.20, batch-reuse:1
@ 770 train 7.9349 , allloss: 69.6166, dt: 1130.42ms, fracRes: 0.3011, norm(attn): 6.0000, norm(output): 4.4688, norm(x): 3.0087, norm(y): 0.9811, norm:410.4819, tok/sec: 115949.85, flops:45.17, batch-reuse:1
@ 771 train 7.8134 , allloss: 71.8124, dt: 1125.79ms, fracRes: 0.3020, norm(attn): 5.9688, norm(output): 4.5312, norm(x): 3.0867, norm(y): 0.9817, norm:582.1650, tok/sec: 116426.60, flops:45.36, batch-reuse:1
@ 772 train 7.8155 , allloss: 72.3090, dt: 1110.36ms, fracRes: 0.3031, norm(attn): 5.8438, norm(output): 4.5000, norm(x): 3.0457, norm(y): 0.9822, norm:450.9951, tok/sec: 118044.81, flops:45.99, batch-reuse:1
@ 773 train 7.9401 , allloss: 71.0667, dt: 1117.60ms, fracRes: 0.3023, norm(attn): 5.5312, norm(output): 4.2500, norm(x): 2.8706, norm(y): 0.9825, norm:519.8799, tok/sec: 117279.54, flops:45.69, batch-reuse:1
@ 774 train 7.9041 , allloss: 65.9692, dt: 1123.36ms, fracRes: 0.3017, norm(attn): 5.1875, norm(output): 3.7500, norm(x): 2.6023, norm(y): 0.9828, norm:427.2416, tok/sec: 116678.94, flops:45.46, batch-reuse:1
@ 775 train 8.0019 , allloss: 59.9392, dt: 1129.83ms, fracRes: 0.3023, norm(attn): 4.7188, norm(output): 3.2344, norm(x): 2.2664, norm(y): 0.9829, norm:437.9296, tok/sec: 116010.31, flops:45.20, batch-reuse:1
@ 776 train 7.8141 , allloss: 51.6120, dt: 1130.61ms, fracRes: 0.3033, norm(attn): 4.2500, norm(output): 2.6406, norm(x): 1.8996, norm(y): 0.9830, norm:446.8223, tok/sec: 115930.51, flops:45.17, batch-reuse:1
@ 777 train 7.8934 , allloss: 46.6516, dt: 1126.94ms, fracRes: 0.3020, norm(attn): 3.6562, norm(output): 2.0312, norm(x): 1.5376, norm(y): 0.9831, norm:330.3756, tok/sec: 116308.00, flops:45.31, batch-reuse:1
@ 778 train 7.8910 , allloss: 41.0139, dt: 1126.10ms, fracRes: 0.3029, norm(attn): 3.0000, norm(output): 1.4922, norm(x): 1.1937, norm(y): 0.9831, norm:279.2126, tok/sec: 116395.05, flops:45.35, batch-reuse:1
@ 779 train 7.9110 , allloss: 38.0411, dt: 1112.83ms, fracRes: 0.3013, norm(attn): 2.4844, norm(output): 0.9688, norm(x): 0.8794, norm(y): 0.9830, norm:219.7970, tok/sec: 117783.00, flops:45.89, batch-reuse:1
@ 780 train 7.8084 , allloss: 35.8658, dt: 1126.61ms, fracRes: 0.3014, norm(attn): 1.8984, norm(output): 0.5469, norm(x): 0.6187, norm(y): 0.9829, norm:125.7696, tok/sec: 116341.67, flops:45.33, batch-reuse:1
@ 781 train 7.8670 , allloss: 42.4557, dt: 1119.14ms, fracRes: 0.2921, norm(attn): 1.5859, norm(output): 0.3320, norm(x): 0.4781, norm(y): 0.9820, norm:211383.0625, tok/sec: 117118.66, flops:45.63, batch-reuse:1
@ 782 train 8.8535 , allloss: 124.5386, dt: 1128.88ms, fracRes: 0.1819, norm(attn): 1.3047, norm(output): 0.3555, norm(x): 0.4373, norm(y): 0.9797, norm:1625079.7500, tok/sec: 116107.63, flops:45.24, batch-reuse:1
@ 783 train 9.6778 , allloss: 208.0909, dt: 1121.19ms, fracRes: 0.0999, norm(attn): 1.3281, norm(output): 0.4668, norm(x): 0.4779, norm(y): 0.9778, norm:6360154.0000, tok/sec: 116904.78, flops:45.55, batch-reuse:1
@ 784 train 9.6771 , allloss: 370.4835, dt: 1137.38ms, fracRes: 0.0749, norm(attn): 1.3047, norm(output): 1.0781, norm(x): 0.9000, norm(y): 0.9764, norm:18488954.0000, tok/sec: 115239.94, flops:44.90, batch-reuse:1
@ 785 train 10.3864 , allloss: 364.7281, dt: 1132.65ms, fracRes: 0.0560, norm(attn): 1.3984, norm(output): 0.9609, norm(x): 0.7912, norm(y): 0.9760, norm:15466223.0000, tok/sec: 115721.50, flops:45.09, batch-reuse:1
@ 786 train 10.2637 , allloss: 402.4970, dt: 1129.24ms, fracRes: 0.0218, norm(attn): 1.3906, norm(output): 0.8750, norm(x): 0.7507, norm(y): 0.9755, norm:17206848.0000, tok/sec: 116070.57, flops:45.22, batch-reuse:1
@ 787 train 10.3947 , allloss: 346.7870, dt: 1140.13ms, fracRes: 0.0266, norm(attn): 1.4375, norm(output): 0.8984, norm(x): 0.7679, norm(y): 0.9755, norm:5678753.5000, tok/sec: 114962.08, flops:44.79, batch-reuse:1
@ 788 train 11.1646 , allloss: 264.6685, dt: 1138.95ms, fracRes: 0.0394, norm(attn): 1.5234, norm(output): 0.8555, norm(x): 0.7490, norm(y): 0.9755, norm:16883382.0000, tok/sec: 115081.16, flops:44.84, batch-reuse:1
@ 789 train 11.8751 , allloss: 245.9995, dt: 1136.23ms, fracRes: 0.0526, norm(attn): 1.5703, norm(output): 0.8633, norm(x): 0.7846, norm(y): 0.9755, norm:2726124.7500, tok/sec: 115357.02, flops:44.94, batch-reuse:1
@ 790 train 11.9720 , allloss: 289.9783, dt: 1130.03ms, fracRes: 0.0523, norm(attn): 1.5312, norm(output): 1.1172, norm(x): 1.0277, norm(y): 0.9757, norm:76166296.0000, tok/sec: 115989.97, flops:45.19, batch-reuse:1
@ 791 train 11.7560 , allloss: 330.6793, dt: 1117.02ms, fracRes: 0.0545, norm(attn): 1.5156, norm(output): 1.3359, norm(x): 1.2455, norm(y): 0.9758, norm:23120218.0000, tok/sec: 117340.62, flops:45.72, batch-reuse:1
@ 792 train 11.9290 , allloss: 321.1723, dt: 1134.31ms, fracRes: 0.0564, norm(attn): 1.5312, norm(output): 1.2188, norm(x): 1.1522, norm(y): 0.9758, norm:543160960.0000, tok/sec: 115551.70, flops:45.02, batch-reuse:1
@ 793 train 12.1259 , allloss: 308.2378, dt: 1119.29ms, fracRes: 0.0686, norm(attn): 1.5234, norm(output): 1.0859, norm(x): 1.0236, norm(y): 0.9757, norm:107942912.0000, tok/sec: 117102.37, flops:45.62, batch-reuse:1
@ 794 train 12.4537 , allloss: 251.1529, dt: 1125.70ms, fracRes: 0.0812, norm(attn): 1.5547, norm(output): 0.8008, norm(x): 0.7639, norm(y): 0.9756, norm:321122688.0000, tok/sec: 116435.92, flops:45.36, batch-reuse:1
@ 795 train 12.7539 , allloss: 215.2963, dt: 1140.10ms, fracRes: 0.0982, norm(attn): 1.5938, norm(output): 0.6602, norm(x): 0.6507, norm(y): 0.9755, norm:356477312.0000, tok/sec: 114965.07, flops:44.79, batch-reuse:1
@ 796 train 12.6670 , allloss: 278.5644, dt: 1121.56ms, fracRes: 0.0909, norm(attn): 1.5312, norm(output): 0.7539, norm(x): 0.7245, norm(y): 0.9756, norm:280488736.0000, tok/sec: 116866.13, flops:45.53, batch-reuse:1
@ 797 train 12.4810 , allloss: 324.5827, dt: 1123.84ms, fracRes: 0.0896, norm(attn): 1.4922, norm(output): 0.7812, norm(x): 0.7526, norm(y): 0.9756, norm:255084880.0000, tok/sec: 116629.06, flops:45.44, batch-reuse:1
@ 798 train 12.4809 , allloss: 345.9884, dt: 1145.74ms, fracRes: 0.0914, norm(attn): 1.4844, norm(output): 0.7773, norm(x): 0.7597, norm(y): 0.9756, norm:1579283200.0000, tok/sec: 114399.40, flops:44.57, batch-reuse:1
@ 799 train 12.6226 , allloss: 324.0365, dt: 1136.57ms, fracRes: 0.1038, norm(attn): 1.4766, norm(output): 0.7305, norm(x): 0.7149, norm(y): 0.9756, norm:316477184.0000, tok/sec: 115322.13, flops:44.93, batch-reuse:1
@ 800 train 13.2525 , allloss: 257.1473, dt: 1142.65ms, fracRes: 0.1343, norm(attn): 1.5078, norm(output): 0.5977, norm(x): 0.6131, norm(y): 0.9756, norm:484314336.0000, tok/sec: 114709.21, flops:44.69, batch-reuse:1
@ 801 train 13.5287 , allloss: 287.6504, dt: 1120.66ms, fracRes: 0.1410, norm(attn): 1.4844, norm(output): 0.6406, norm(x): 0.6684, norm(y): 0.9756, norm:574869440.0000, tok/sec: 116959.24, flops:45.57, batch-reuse:1
@ 802 train 13.8314 , allloss: 237.0415, dt: 1139.08ms, fracRes: 0.1676, norm(attn): 1.4922, norm(output): 0.5703, norm(x): 0.6213, norm(y): 0.9754, norm:401659104.0000, tok/sec: 115068.51, flops:44.83, batch-reuse:1
@ 803 train 13.7574 , allloss: 258.2176, dt: 1136.02ms, fracRes: 0.1542, norm(attn): 1.4844, norm(output): 0.6016, norm(x): 0.6396, norm(y): 0.9752, norm:1717979648.0000, tok/sec: 115378.21, flops:44.95, batch-reuse:1
@ 804 train 14.0573 , allloss: 250.9442, dt: 1115.63ms, fracRes: 0.1602, norm(attn): 1.5000, norm(output): 0.5898, norm(x): 0.6346, norm(y): 0.9752, norm:185249040.0000, tok/sec: 117486.96, flops:45.77, batch-reuse:1
@ 805 train 14.0529 , allloss: 229.6506, dt: 1119.83ms, fracRes: 0.1684, norm(attn): 1.5156, norm(output): 0.5547, norm(x): 0.6030, norm(y): 0.9752, norm:269046112.0000, tok/sec: 117046.00, flops:45.60, batch-reuse:1
@ 806 train 14.3298 , allloss: 225.8120, dt: 1124.36ms, fracRes: 0.1967, norm(attn): 1.5312, norm(output): 0.5547, norm(x): 0.6232, norm(y): 0.9752, norm:284434208.0000, tok/sec: 116575.27, flops:45.42, batch-reuse:1
@ 807 train 13.8992 , allloss: 296.7372, dt: 1106.17ms, fracRes: 0.1617, norm(attn): 1.5234, norm(output): 0.6523, norm(x): 0.6881, norm(y): 0.9752, norm:1408785152.0000, tok/sec: 118492.10, flops:46.16, batch-reuse:1
@ 808 train 13.1380 , allloss: 547.0016, dt: 1109.85ms, fracRes: 0.0945, norm(attn): 1.5078, norm(output): 1.0078, norm(x): 0.9858, norm(y): 0.9750, norm:1524519680.0000, tok/sec: 118099.13, flops:46.01, batch-reuse:1
@ 809 train 12.9303 , allloss: 636.9487, dt: 1136.57ms, fracRes: 0.0795, norm(attn): 1.5234, norm(output): 1.1797, norm(x): 1.1269, norm(y): 0.9749, norm:263573424.0000, tok/sec: 115322.03, flops:44.93, batch-reuse:1
@ 810 train 12.5360 , allloss: 724.1040, dt: 1115.48ms, fracRes: 0.0727, norm(attn): 1.5469, norm(output): 1.3203, norm(x): 1.2389, norm(y): 0.9749, norm:1313316096.0000, tok/sec: 117503.24, flops:45.78, batch-reuse:1
@ 811 train 12.3447 , allloss: 759.3314, dt: 1119.18ms, fracRes: 0.0695, norm(attn): 1.5859, norm(output): 1.3516, norm(x): 1.2870, norm(y): 0.9749, norm:60045307904.0000, tok/sec: 117113.82, flops:45.63, batch-reuse:1
@ 812 train 12.5861 , allloss: 756.2083, dt: 1119.90ms, fracRes: 0.0649, norm(attn): 1.5781, norm(output): 1.3750, norm(x): 1.2956, norm(y): 0.9749, norm:408471136.0000, tok/sec: 117038.97, flops:45.60, batch-reuse:1
@ 813 train 11.8803 , allloss: 765.5085, dt: 1128.14ms, fracRes: 0.0620, norm(attn): 1.5781, norm(output): 1.3906, norm(x): 1.2969, norm(y): 0.9748, norm:1340303104.0000, tok/sec: 116184.48, flops:45.27, batch-reuse:1
@ 814 train 12.3474 , allloss: 711.3458, dt: 1143.78ms, fracRes: 0.0679, norm(attn): 1.5859, norm(output): 1.3203, norm(x): 1.2507, norm(y): 0.9748, norm:577989312.0000, tok/sec: 114595.13, flops:44.65, batch-reuse:1
@ 815 train 12.7412 , allloss: 655.6786, dt: 1143.18ms, fracRes: 0.0858, norm(attn): 1.5703, norm(output): 1.2891, norm(x): 1.2194, norm(y): 0.9748, norm:183101696.0000, tok/sec: 114655.52, flops:44.67, batch-reuse:1
@ 816 train 13.6079 , allloss: 342.1051, dt: 1117.35ms, fracRes: 0.2032, norm(attn): 1.5859, norm(output): 0.7969, norm(x): 0.8380, norm(y): 0.9750, norm:167799040.0000, tok/sec: 117306.12, flops:45.70, batch-reuse:1
@ 817 train 14.6506 , allloss: 93.2728, dt: 1132.44ms, fracRes: 0.3818, norm(attn): 1.5469, norm(output): 0.4648, norm(x): 0.6524, norm(y): 0.9756, norm:32729264.0000, tok/sec: 115742.96, flops:45.09, batch-reuse:1
@ 818 train 14.8020 , allloss: 73.7928, dt: 1112.40ms, fracRes: 0.4072, norm(attn): 1.6406, norm(output): 0.4961, norm(x): 0.6877, norm(y): 0.9759, norm:133.2758, tok/sec: 117828.39, flops:45.91, batch-reuse:1
@ 819 train 14.7963 , allloss: 69.5563, dt: 1117.91ms, fracRes: 0.4331, norm(attn): 1.7969, norm(output): 0.5547, norm(x): 0.7366, norm(y): 0.9745, norm:195.3382, tok/sec: 117247.07, flops:45.68, batch-reuse:1
@ 820 train 16.1804 , allloss: 65.6303, dt: 1130.41ms, fracRes: 0.3669, norm(attn): 2.3438, norm(output): 0.6992, norm(x): 0.7751, norm(y): 0.9723, norm:235.0472, tok/sec: 115951.17, flops:45.17, batch-reuse:1
@ 821 train 16.8344 , allloss: 64.0165, dt: 1106.94ms, fracRes: 0.3765, norm(attn): 2.5000, norm(output): 0.8125, norm(x): 0.8397, norm(y): 0.9707, norm:259.9291, tok/sec: 118409.08, flops:46.13, batch-reuse:1
@ 822 train 16.7462 , allloss: 68.2898, dt: 1104.29ms, fracRes: 0.4034, norm(attn): 2.5781, norm(output): 0.9531, norm(x): 0.9284, norm(y): 0.9697, norm:258.3184, tok/sec: 118693.00, flops:46.24, batch-reuse:1
@ 823 train 16.5324 , allloss: 71.4228, dt: 1121.28ms, fracRes: 0.4439, norm(attn): 2.7344, norm(output): 1.1328, norm(x): 1.0163, norm(y): 0.9692, norm:231.8465, tok/sec: 116895.45, flops:45.54, batch-reuse:1
@ 824 train 15.8410 , allloss: 80.7280, dt: 1124.47ms, fracRes: 0.4446, norm(attn): 2.9062, norm(output): 1.3750, norm(x): 1.1339, norm(y): 0.9690, norm:203.9264, tok/sec: 116563.04, flops:45.41, batch-reuse:1
@ 825 train 15.4396 , allloss: 85.5762, dt: 1117.43ms, fracRes: 0.4389, norm(attn): 3.2188, norm(output): 1.6406, norm(x): 1.2642, norm(y): 0.9692, norm:195.3128, tok/sec: 117297.28, flops:45.70, batch-reuse:1
@ 826 train 14.9232 , allloss: 89.5303, dt: 1127.96ms, fracRes: 0.3891, norm(attn): 3.6875, norm(output): 2.0156, norm(x): 1.4778, norm(y): 0.9695, norm:190.1246, tok/sec: 116202.68, flops:45.27, batch-reuse:1
@ 827 train 14.1532 , allloss: 102.5715, dt: 1134.47ms, fracRes: 0.3862, norm(attn): 3.9844, norm(output): 2.3594, norm(x): 1.6560, norm(y): 0.9701, norm:211.0544, tok/sec: 115535.99, flops:45.01, batch-reuse:1
@ 828 train 13.5261 , allloss: 108.5496, dt: 1131.97ms, fracRes: 0.3788, norm(attn): 4.2812, norm(output): 2.7031, norm(x): 1.8283, norm(y): 0.9708, norm:211.5829, tok/sec: 115791.18, flops:45.11, batch-reuse:1
@ 829 train 12.8104 , allloss: 110.0242, dt: 1111.92ms, fracRes: 0.3874, norm(attn): 4.4688, norm(output): 2.8438, norm(x): 1.8894, norm(y): 0.9715, norm:203.8849, tok/sec: 117878.49, flops:45.93, batch-reuse:1
@ 830 train 12.0831 , allloss: 107.6931, dt: 1112.17ms, fracRes: 0.4026, norm(attn): 4.5000, norm(output): 2.8281, norm(x): 1.8485, norm(y): 0.9722, norm:212.3085, tok/sec: 117852.41, flops:45.92, batch-reuse:1
@ 831 train 11.3657 , allloss: 99.3753, dt: 1113.14ms, fracRes: 0.4038, norm(attn): 4.3125, norm(output): 2.7500, norm(x): 1.7628, norm(y): 0.9730, norm:188.7508, tok/sec: 117750.18, flops:45.88, batch-reuse:1
@ 832 train 10.6743 , allloss: 99.4317, dt: 1133.91ms, fracRes: 0.3694, norm(attn): 4.2500, norm(output): 2.5156, norm(x): 1.7030, norm(y): 0.9738, norm:212.7434, tok/sec: 115593.20, flops:45.04, batch-reuse:1
@ 833 train 9.9557 , allloss: 104.8627, dt: 1120.34ms, fracRes: 0.3322, norm(attn): 4.0938, norm(output): 2.3750, norm(x): 1.6369, norm(y): 0.9746, norm:331.3676, tok/sec: 116992.72, flops:45.58, batch-reuse:1
@ 834 train 9.1902 , allloss: 107.4292, dt: 1123.97ms, fracRes: 0.3286, norm(attn): 3.5156, norm(output): 1.8594, norm(x): 1.3636, norm(y): 0.9758, norm:715.3945, tok/sec: 116614.74, flops:45.43, batch-reuse:1
@ 835 train 8.3140 , allloss: 141.6304, dt: 1129.00ms, fracRes: 0.3134, norm(attn): 2.0938, norm(output): 0.9844, norm(x): 0.8818, norm(y): 0.9776, norm:1727.0730, tok/sec: 116095.20, flops:45.23, batch-reuse:1
@ 836 train 8.9925 , allloss: 380.9042, dt: 1113.98ms, fracRes: 0.0438, norm(attn): 1.2344, norm(output): 1.0781, norm(x): 0.9666, norm(y): 0.9791, norm:17993790.0000, tok/sec: 117661.32, flops:45.84, batch-reuse:1
@ 837 train 9.4557 , allloss: 490.1821, dt: 1116.63ms, fracRes: 0.1719, norm(attn): 1.2500, norm(output): 4.3125, norm(x): 3.0003, norm(y): 0.9807, norm:306861.1875, tok/sec: 117381.31, flops:45.73, batch-reuse:1
@ 838 train 9.4583 , allloss: 518.0933, dt: 1123.38ms, fracRes: 0.1686, norm(attn): 1.2500, norm(output): 4.7188, norm(x): 3.3351, norm(y): 0.9807, norm:630980.8125, tok/sec: 116676.14, flops:45.46, batch-reuse:1
@ 839 train 9.4473 , allloss: 564.3630, dt: 1121.98ms, fracRes: 0.1388, norm(attn): 1.2031, norm(output): 4.1875, norm(x): 3.0378, norm(y): 0.9805, norm:224576.8906, tok/sec: 116821.95, flops:45.51, batch-reuse:1
@ 840 train 9.7512 , allloss: 518.4847, dt: 1136.39ms, fracRes: 0.1373, norm(attn): 1.2188, norm(output): 3.9375, norm(x): 2.8662, norm(y): 0.9801, norm:12314432.0000, tok/sec: 115340.69, flops:44.94, batch-reuse:1
@ 841 train 9.7629 , allloss: 438.9823, dt: 1126.94ms, fracRes: 0.1845, norm(attn): 1.2500, norm(output): 4.1562, norm(x): 2.8351, norm(y): 0.9798, norm:27829174.0000, tok/sec: 116307.46, flops:45.31, batch-reuse:1
@ 842 train 9.9115 , allloss: 463.0481, dt: 1113.58ms, fracRes: 0.2030, norm(attn): 1.2500, norm(output): 4.1875, norm(x): 2.8714, norm(y): 0.9797, norm:13311406.0000, tok/sec: 117703.62, flops:45.86, batch-reuse:1
@ 843 train 9.9410 , allloss: 483.1511, dt: 1122.98ms, fracRes: 0.1899, norm(attn): 1.2656, norm(output): 3.7031, norm(x): 2.6025, norm(y): 0.9796, norm:35457900.0000, tok/sec: 116718.43, flops:45.47, batch-reuse:1
@ 844 train 9.9427 , allloss: 489.2625, dt: 1127.58ms, fracRes: 0.2041, norm(attn): 1.2891, norm(output): 3.8906, norm(x): 2.7210, norm(y): 0.9796, norm:4206230.0000, tok/sec: 116242.17, flops:45.29, batch-reuse:1
@ 845 train 9.9078 , allloss: 522.4919, dt: 1122.37ms, fracRes: 0.2413, norm(attn): 1.2891, norm(output): 4.5312, norm(x): 3.0876, norm(y): 0.9799, norm:31574134.0000, tok/sec: 116781.60, flops:45.50, batch-reuse:1
@ 846 train 9.9659 , allloss: 499.6870, dt: 1113.68ms, fracRes: 0.2581, norm(attn): 1.2969, norm(output): 4.9062, norm(x): 3.2670, norm(y): 0.9802, norm:1658911.6250, tok/sec: 117692.25, flops:45.85, batch-reuse:1
@ 847 train 10.0382 , allloss: 508.2897, dt: 1110.80ms, fracRes: 0.2605, norm(attn): 1.3516, norm(output): 5.0000, norm(x): 3.2940, norm(y): 0.9804, norm:993330.5000, tok/sec: 117997.43, flops:45.97, batch-reuse:1
@ 848 train 10.0576 , allloss: 506.8720, dt: 1105.40ms, fracRes: 0.2643, norm(attn): 1.3594, norm(output): 4.7812, norm(x): 3.1347, norm(y): 0.9805, norm:18402524.0000, tok/sec: 118574.19, flops:46.20, batch-reuse:1
@ 849 train 10.0575 , allloss: 540.0052, dt: 1123.91ms, fracRes: 0.2364, norm(attn): 1.3594, norm(output): 4.3438, norm(x): 2.8901, norm(y): 0.9804, norm:17755598.0000, tok/sec: 116621.17, flops:45.44, batch-reuse:1
@ 850 train 10.1580 , allloss: 608.2684, dt: 1141.91ms, fracRes: 0.1940, norm(attn): 1.3750, norm(output): 3.7500, norm(x): 2.6038, norm(y): 0.9803, norm:12333624.0000, tok/sec: 114783.48, flops:44.72, batch-reuse:1
@ 851 train 10.2251 , allloss: 604.7798, dt: 1122.73ms, fracRes: 0.1921, norm(attn): 1.3750, norm(output): 3.5000, norm(x): 2.4652, norm(y): 0.9803, norm:27340642.0000, tok/sec: 116744.45, flops:45.48, batch-reuse:1
@ 852 train 10.0525 , allloss: 683.0485, dt: 1120.64ms, fracRes: 0.1489, norm(attn): 1.3750, norm(output): 2.9844, norm(x): 2.2066, norm(y): 0.9803, norm:141926848.0000, tok/sec: 116961.63, flops:45.57, batch-reuse:1
@ 853 train 10.2043 , allloss: 678.1888, dt: 1110.74ms, fracRes: 0.1338, norm(attn): 1.3672, norm(output): 2.6250, norm(x): 1.9896, norm(y): 0.9803, norm:345469664.0000, tok/sec: 118003.89, flops:45.97, batch-reuse:1
@ 854 train 10.1436 , allloss: 657.3190, dt: 1124.89ms, fracRes: 0.1012, norm(attn): 1.3750, norm(output): 2.0781, norm(x): 1.6862, norm(y): 0.9804, norm:696059200.0000, tok/sec: 116520.15, flops:45.40, batch-reuse:1
@ 855 train 10.1194 , allloss: 638.0416, dt: 1132.76ms, fracRes: 0.0949, norm(attn): 1.3594, norm(output): 1.8672, norm(x): 1.5846, norm(y): 0.9806, norm:498658624.0000, tok/sec: 115709.81, flops:45.08, batch-reuse:1
@ 856 train 10.1643 , allloss: 712.0292, dt: 1137.23ms, fracRes: 0.0732, norm(attn): 1.3906, norm(output): 1.8516, norm(x): 1.5977, norm(y): 0.9807, norm:258552240.0000, tok/sec: 115255.04, flops:44.90, batch-reuse:1
@ 857 train 10.1909 , allloss: 624.5988, dt: 1145.86ms, fracRes: 0.0329, norm(attn): 1.5234, norm(output): 1.4766, norm(x): 1.2501, norm(y): 0.9805, norm:554186624.0000, tok/sec: 114387.90, flops:44.57, batch-reuse:1
@ 858 train 10.1141 , allloss: 591.9091, dt: 1142.58ms, fracRes: 0.0255, norm(attn): 1.6094, norm(output): 1.3438, norm(x): 1.1755, norm(y): 0.9804, norm:322379392.0000, tok/sec: 114715.46, flops:44.69, batch-reuse:1
@ 859 train 9.8258 , allloss: 563.4430, dt: 1132.81ms, fracRes: 0.0210, norm(attn): 1.6641, norm(output): 1.2500, norm(x): 1.0808, norm(y): 0.9805, norm:296107904.0000, tok/sec: 115705.25, flops:45.08, batch-reuse:1
@ 860 train 10.0152 , allloss: 652.5654, dt: 1114.76ms, fracRes: 0.0220, norm(attn): 1.7344, norm(output): 1.3594, norm(x): 1.1984, norm(y): 0.9806, norm:686555136.0000, tok/sec: 117578.88, flops:45.81, batch-reuse:1
@ 861 train 9.8019 , allloss: 816.9901, dt: 1110.99ms, fracRes: 0.0327, norm(attn): 1.7422, norm(output): 1.6094, norm(x): 1.4299, norm(y): 0.9808, norm:1325489920.0000, tok/sec: 117977.71, flops:45.96, batch-reuse:1
@ 862 train 9.9530 , allloss: 861.0130, dt: 1110.29ms, fracRes: 0.0361, norm(attn): 1.7500, norm(output): 1.7031, norm(x): 1.4117, norm(y): 0.9811, norm:171910256.0000, tok/sec: 118052.49, flops:45.99, batch-reuse:1
@ 863 train 10.4128 , allloss: 765.9426, dt: 1122.30ms, fracRes: 0.0563, norm(attn): 1.6875, norm(output): 1.6641, norm(x): 1.3478, norm(y): 0.9816, norm:577461376.0000, tok/sec: 116788.30, flops:45.50, batch-reuse:1
@ 864 train 10.3574 , allloss: 950.0659, dt: 1116.76ms, fracRes: 0.0770, norm(attn): 1.7500, norm(output): 2.0625, norm(x): 1.5820, norm(y): 0.9820, norm:48642596.0000, tok/sec: 117367.67, flops:45.73, batch-reuse:1
@ 865 train 10.5211 , allloss: 1166.1454, dt: 1119.35ms, fracRes: 0.1136, norm(attn): 1.7500, norm(output): 2.5469, norm(x): 1.8438, norm(y): 0.9822, norm:306726656.0000, tok/sec: 117096.26, flops:45.62, batch-reuse:1
@ 866 train 10.5408 , allloss: 1267.6168, dt: 1137.06ms, fracRes: 0.1361, norm(attn): 1.7656, norm(output): 2.7969, norm(x): 1.9864, norm(y): 0.9826, norm:40584492.0000, tok/sec: 115273.09, flops:44.91, batch-reuse:1
@ 867 train 10.5669 , allloss: 1262.8005, dt: 1133.01ms, fracRes: 0.1282, norm(attn): 1.7656, norm(output): 2.7656, norm(x): 1.9490, norm(y): 0.9827, norm:21642180.0000, tok/sec: 115684.66, flops:45.07, batch-reuse:1
@ 868 train 10.7529 , allloss: 1393.9093, dt: 1118.09ms, fracRes: 0.1372, norm(attn): 1.8125, norm(output): 3.0781, norm(x): 2.1308, norm(y): 0.9826, norm:9033419.0000, tok/sec: 117228.57, flops:45.67, batch-reuse:1
@ 869 train 10.8461 , allloss: 1344.5820, dt: 1116.51ms, fracRes: 0.1445, norm(attn): 1.8047, norm(output): 3.0000, norm(x): 2.0829, norm(y): 0.9826, norm:5111702.5000, tok/sec: 117394.87, flops:45.74, batch-reuse:1
@ 870 train 11.1393 , allloss: 1311.2192, dt: 1123.06ms, fracRes: 0.1545, norm(attn): 1.6797, norm(output): 2.9062, norm(x): 2.1152, norm(y): 0.9822, norm:957682.3125, tok/sec: 116709.95, flops:45.47, batch-reuse:1
@ 871 train 11.5611 , allloss: 1433.7461, dt: 1136.23ms, fracRes: 0.1754, norm(attn): 1.6328, norm(output): 3.2969, norm(x): 2.3906, norm(y): 0.9816, norm:114560.9141, tok/sec: 115356.76, flops:44.94, batch-reuse:1
@ 872 train 11.6548 , allloss: 1960.0620, dt: 1133.35ms, fracRes: 0.1929, norm(attn): 1.7656, norm(output): 4.6250, norm(x): 3.3305, norm(y): 0.9809, norm:9498.3682, tok/sec: 115649.83, flops:45.06, batch-reuse:1
@ 873 train 11.8265 , allloss: 2528.6951, dt: 1133.94ms, fracRes: 0.2171, norm(attn): 2.1250, norm(output): 6.2500, norm(x): 4.4999, norm(y): 0.9805, norm:3840.2102, tok/sec: 115589.87, flops:45.03, batch-reuse:1
@ 874 train 11.5976 , allloss: 1399.2192, dt: 1125.56ms, fracRes: 0.2127, norm(attn): 2.4688, norm(output): 5.4688, norm(x): 3.9941, norm(y): 0.9804, norm:2547.3201, tok/sec: 116450.89, flops:45.37, batch-reuse:1
@ 875 train 11.2239 , allloss: 342.9181, dt: 1121.66ms, fracRes: 0.2683, norm(attn): 2.7812, norm(output): 4.1562, norm(x): 2.9635, norm(y): 0.9806, norm:430.6402, tok/sec: 116855.65, flops:45.53, batch-reuse:1
@ 876 train 10.4122 , allloss: 103.1140, dt: 1123.38ms, fracRes: 0.2775, norm(attn): 3.1562, norm(output): 2.8594, norm(x): 2.1001, norm(y): 0.9813, norm:264.0730, tok/sec: 116676.34, flops:45.46, batch-reuse:1
@ 877 train 8.7642 , allloss: 74.5631, dt: 1109.64ms, fracRes: 0.2859, norm(attn): 2.8125, norm(output): 1.3828, norm(x): 1.1847, norm(y): 0.9820, norm:188.5743, tok/sec: 118120.93, flops:46.02, batch-reuse:1
@ 878 train 8.2454 , allloss: 273.7115, dt: 1112.36ms, fracRes: 0.1577, norm(attn): 1.7812, norm(output): 0.9531, norm(x): 0.8663, norm(y): 0.9810, norm:5574.8027, tok/sec: 117831.88, flops:45.91, batch-reuse:1
@ 879 train 8.2828 , allloss: 156.6936, dt: 1123.30ms, fracRes: 0.2444, norm(attn): 1.9219, norm(output): 0.8594, norm(x): 0.8222, norm(y): 0.9826, norm:184.2937, tok/sec: 116685.11, flops:45.46, batch-reuse:1
@ 880 train 8.4610 , allloss: 137.1915, dt: 1117.76ms, fracRes: 0.1958, norm(attn): 2.2969, norm(output): 1.0469, norm(x): 0.9820, norm(y): 0.9827, norm:169.7501, tok/sec: 117262.65, flops:45.69, batch-reuse:1
@ 881 train 8.4119 , allloss: 91.4979, dt: 1138.06ms, fracRes: 0.2241, norm(attn): 2.3906, norm(output): 1.0000, norm(x): 0.9485, norm(y): 0.9830, norm:372.3712, tok/sec: 115171.06, flops:44.87, batch-reuse:1
@ 882 train 8.3916 , allloss: 79.5244, dt: 1129.30ms, fracRes: 0.2209, norm(attn): 2.5312, norm(output): 0.9531, norm(x): 0.9205, norm(y): 0.9831, norm:345.6653, tok/sec: 116065.20, flops:45.22, batch-reuse:1
@ 883 train 8.2201 , allloss: 138.3119, dt: 1128.18ms, fracRes: 0.2120, norm(attn): 2.4531, norm(output): 0.9062, norm(x): 0.8837, norm(y): 0.9819, norm:415.4291, tok/sec: 116179.87, flops:45.26, batch-reuse:1
@ 884 train 8.8470 , allloss: 402.3607, dt: 1144.36ms, fracRes: 0.1576, norm(attn): 2.5625, norm(output): 1.3359, norm(x): 1.2143, norm(y): 0.9804, norm:426917.5625, tok/sec: 114537.21, flops:44.62, batch-reuse:1
@ 885 train 9.4289 , allloss: 569.1968, dt: 1134.52ms, fracRes: 0.1418, norm(attn): 2.2656, norm(output): 1.6250, norm(x): 1.4045, norm(y): 0.9779, norm:463066.9688, tok/sec: 115530.91, flops:45.01, batch-reuse:1
@ 886 train 9.0600 , allloss: 573.6562, dt: 1139.09ms, fracRes: 0.1767, norm(attn): 2.0625, norm(output): 1.8594, norm(x): 1.5773, norm(y): 0.9761, norm:135963.8125, tok/sec: 115067.79, flops:44.83, batch-reuse:1
@ 887 train 9.8473 , allloss: 613.9299, dt: 1139.52ms, fracRes: 0.2137, norm(attn): 1.8594, norm(output): 1.8125, norm(x): 1.5267, norm(y): 0.9747, norm:42812.5938, tok/sec: 115023.37, flops:44.81, batch-reuse:1
@ 888 train 10.3293 , allloss: 698.1551, dt: 1129.71ms, fracRes: 0.2033, norm(attn): 1.7812, norm(output): 1.9453, norm(x): 1.6524, norm(y): 0.9741, norm:35764.5039, tok/sec: 116022.55, flops:45.20, batch-reuse:1
@ 889 train 9.9931 , allloss: 505.7835, dt: 1124.45ms, fracRes: 0.2913, norm(attn): 1.7109, norm(output): 1.6875, norm(x): 1.4441, norm(y): 0.9745, norm:24950.9902, tok/sec: 116565.36, flops:45.41, batch-reuse:1
@ 890 train 9.6872 , allloss: 313.8811, dt: 1131.61ms, fracRes: 0.3640, norm(attn): 1.6562, norm(output): 1.6406, norm(x): 1.4061, norm(y): 0.9743, norm:20604.8516, tok/sec: 115828.27, flops:45.13, batch-reuse:1
@ 891 train 9.5348 , allloss: 214.8280, dt: 1140.84ms, fracRes: 0.4040, norm(attn): 1.6641, norm(output): 1.6953, norm(x): 1.4059, norm(y): 0.9738, norm:13645.6738, tok/sec: 114891.21, flops:44.76, batch-reuse:1
@ 892 train 9.3349 , allloss: 127.7468, dt: 1121.77ms, fracRes: 0.4586, norm(attn): 1.5859, norm(output): 1.5938, norm(x): 1.2913, norm(y): 0.9734, norm:312.8253, tok/sec: 116843.95, flops:45.52, batch-reuse:1
@ 893 train 8.5671 , allloss: 73.6366, dt: 1120.61ms, fracRes: 0.5760, norm(attn): 1.4375, norm(output): 0.9727, norm(x): 0.9749, norm(y): 0.9754, norm:200.9163, tok/sec: 116964.49, flops:45.57, batch-reuse:1
@ 894 train 8.8105 , allloss: 53.4914, dt: 1124.25ms, fracRes: 0.6251, norm(attn): 1.5469, norm(output): 1.1016, norm(x): 1.0077, norm(y): 0.9768, norm:97.3281, tok/sec: 116585.80, flops:45.42, batch-reuse:1
@ 895 train 8.8017 , allloss: 53.6102, dt: 1111.10ms, fracRes: 0.6343, norm(attn): 1.6875, norm(output): 1.3438, norm(x): 1.0772, norm(y): 0.9770, norm:109.4173, tok/sec: 117965.73, flops:45.96, batch-reuse:1
@ 896 train 8.5603 , allloss: 51.3349, dt: 1114.92ms, fracRes: 0.6466, norm(attn): 1.7578, norm(output): 1.5469, norm(x): 1.1258, norm(y): 0.9772, norm:106.2272, tok/sec: 117561.61, flops:45.80, batch-reuse:1
@ 897 train 8.5868 , allloss: 54.4062, dt: 1153.73ms, fracRes: 0.6575, norm(attn): 1.7578, norm(output): 1.7578, norm(x): 1.1735, norm(y): 0.9774, norm:96.4266, tok/sec: 113607.30, flops:44.26, batch-reuse:1
@ 898 train 8.6506 , allloss: 60.7870, dt: 1120.29ms, fracRes: 0.7021, norm(attn): 1.4688, norm(output): 1.5234, norm(x): 1.1187, norm(y): 0.9779, norm:137.7049, tok/sec: 116998.20, flops:45.58, batch-reuse:1
@ 899 train 8.5242 , allloss: 61.8071, dt: 1121.50ms, fracRes: 0.6726, norm(attn): 1.6875, norm(output): 1.9844, norm(x): 1.2279, norm(y): 0.9777, norm:480.0754, tok/sec: 116872.07, flops:45.53, batch-reuse:1
@ 900 train 8.5506 , allloss: 66.0714, dt: 1139.34ms, fracRes: 0.6508, norm(attn): 1.9609, norm(output): 2.5156, norm(x): 1.3919, norm(y): 0.9776, norm:747.2257, tok/sec: 115041.95, flops:44.82, batch-reuse:1
@ 901 train 8.4011 , allloss: 65.6954, dt: 1136.85ms, fracRes: 0.6681, norm(attn): 1.8828, norm(output): 2.5938, norm(x): 1.3947, norm(y): 0.9779, norm:256.5141, tok/sec: 115293.59, flops:44.92, batch-reuse:1
@ 902 train 8.3722 , allloss: 71.8241, dt: 1117.20ms, fracRes: 0.6686, norm(attn): 1.8672, norm(output): 2.6562, norm(x): 1.4096, norm(y): 0.9784, norm:154.4033, tok/sec: 117322.14, flops:45.71, batch-reuse:1
@ 903 train 8.3771 , allloss: 72.1870, dt: 1130.00ms, fracRes: 0.6726, norm(attn): 1.7578, norm(output): 2.5312, norm(x): 1.3913, norm(y): 0.9792, norm:159.3748, tok/sec: 115992.49, flops:45.19, batch-reuse:1
@ 904 train 8.3301 , allloss: 79.4207, dt: 1149.09ms, fracRes: 0.6719, norm(attn): 1.6406, norm(output): 2.3594, norm(x): 1.3548, norm(y): 0.9801, norm:180.8361, tok/sec: 114066.17, flops:44.44, batch-reuse:1
@ 905 train 8.4506 , allloss: 88.4385, dt: 1131.49ms, fracRes: 0.6693, norm(attn): 1.4688, norm(output): 2.0000, norm(x): 1.2940, norm(y): 0.9813, norm:179.9947, tok/sec: 115840.20, flops:45.13, batch-reuse:1
@ 906 train 8.4388 , allloss: 98.2372, dt: 1125.34ms, fracRes: 0.6665, norm(attn): 1.2422, norm(output): 1.5078, norm(x): 1.2137, norm(y): 0.9830, norm:141.0614, tok/sec: 116473.66, flops:45.38, batch-reuse:1
@ 907 train 9.8360 , allloss: 114.0572, dt: 1124.05ms, fracRes: 0.5874, norm(attn): 1.3516, norm(output): 1.6250, norm(x): 1.3033, norm(y): 0.9853, norm:213.2389, tok/sec: 116607.37, flops:45.43, batch-reuse:1
@ 908 train 9.4996 , allloss: 120.2897, dt: 1137.02ms, fracRes: 0.5675, norm(attn): 1.3906, norm(output): 1.7969, norm(x): 1.3944, norm(y): 0.9856, norm:166.5727, tok/sec: 115276.52, flops:44.91, batch-reuse:1
@ 909 train 9.5405 , allloss: 124.7379, dt: 1122.30ms, fracRes: 0.5995, norm(attn): 1.2578, norm(output): 1.6094, norm(x): 1.3282, norm(y): 0.9855, norm:140.1347, tok/sec: 116788.80, flops:45.50, batch-reuse:1
@ 910 train 9.1791 , allloss: 132.6274, dt: 1121.88ms, fracRes: 0.6001, norm(attn): 1.1172, norm(output): 1.3750, norm(x): 1.2863, norm(y): 0.9851, norm:150.1283, tok/sec: 116831.96, flops:45.52, batch-reuse:1
@ 911 train 9.1244 , allloss: 149.0185, dt: 1139.22ms, fracRes: 0.5985, norm(attn): 1.0391, norm(output): 1.4688, norm(x): 1.3505, norm(y): 0.9844, norm:188.0480, tok/sec: 115054.18, flops:44.83, batch-reuse:1
@ 912 train 8.6614 , allloss: 161.6582, dt: 1119.15ms, fracRes: 0.6001, norm(attn): 1.0469, norm(output): 1.7734, norm(x): 1.4923, norm(y): 0.9835, norm:225.9707, tok/sec: 117117.11, flops:45.63, batch-reuse:1
@ 913 train 8.3661 , allloss: 186.5497, dt: 1150.91ms, fracRes: 0.5952, norm(attn): 1.1484, norm(output): 2.4688, norm(x): 1.7725, norm(y): 0.9825, norm:224.6199, tok/sec: 113885.80, flops:44.37, batch-reuse:1
@ 914 train 8.1767 , allloss: 204.9941, dt: 1122.55ms, fracRes: 0.5880, norm(attn): 1.2500, norm(output): 3.4219, norm(x): 2.1453, norm(y): 0.9815, norm:196.9695, tok/sec: 116762.95, flops:45.49, batch-reuse:1
@ 915 train 8.0587 , allloss: 227.0207, dt: 1135.10ms, fracRes: 0.5403, norm(attn): 1.5000, norm(output): 4.7188, norm(x): 2.7909, norm(y): 0.9807, norm:501.6004, tok/sec: 115471.80, flops:44.99, batch-reuse:1
@ 916 train 7.9252 , allloss: 230.4086, dt: 1131.66ms, fracRes: 0.3488, norm(attn): 1.9297, norm(output): 7.0312, norm(x): 4.6742, norm(y): 0.9801, norm:574.2529, tok/sec: 115822.31, flops:45.12, batch-reuse:1
@ 917 train 7.9190 , allloss: 247.8936, dt: 1139.12ms, fracRes: 0.2960, norm(attn): 2.1406, norm(output): 9.3750, norm(x): 6.4784, norm(y): 0.9792, norm:425.6149, tok/sec: 115063.82, flops:44.83, batch-reuse:1
@ 918 train 7.9060 , allloss: 333.5675, dt: 1143.19ms, fracRes: 0.2372, norm(attn): 2.2344, norm(output): 11.0625, norm(x): 8.1441, norm(y): 0.9784, norm:2402.7170, tok/sec: 114654.19, flops:44.67, batch-reuse:1
@ 919 train 7.8518 , allloss: 361.0894, dt: 1117.72ms, fracRes: 0.2262, norm(attn): 2.3438, norm(output): 12.5000, norm(x): 9.1088, norm(y): 0.9782, norm:1400.1638, tok/sec: 117267.53, flops:45.69, batch-reuse:1
@ 920 train 7.8864 , allloss: 329.0573, dt: 1118.21ms, fracRes: 0.1607, norm(attn): 3.0625, norm(output): 17.8750, norm(x): 13.6193, norm(y): 0.9785, norm:781.0109, tok/sec: 117215.72, flops:45.67, batch-reuse:1
@ 921 train 7.8129 , allloss: 367.7880, dt: 1119.92ms, fracRes: 0.2284, norm(attn): 3.2344, norm(output): 19.2500, norm(x): 13.7047, norm(y): 0.9794, norm:573.1237, tok/sec: 117037.43, flops:45.60, batch-reuse:1
@ 922 train 7.8545 , allloss: 403.3551, dt: 1138.69ms, fracRes: 0.2258, norm(attn): 3.4375, norm(output): 21.8750, norm(x): 15.4882, norm(y): 0.9798, norm:867.9225, tok/sec: 115107.90, flops:44.85, batch-reuse:1
@ 923 train 7.7893 , allloss: 411.0104, dt: 1125.94ms, fracRes: 0.1990, norm(attn): 3.7656, norm(output): 25.8750, norm(x): 18.7826, norm(y): 0.9801, norm:3132.8391, tok/sec: 116410.82, flops:45.35, batch-reuse:1
@ 924 train 7.7645 , allloss: 417.1424, dt: 1134.91ms, fracRes: 0.1536, norm(attn): 4.3750, norm(output): 31.5000, norm(x): 23.8178, norm(y): 0.9802, norm:865.1482, tok/sec: 115490.84, flops:45.00, batch-reuse:1
@ 925 train 7.8106 , allloss: 477.1172, dt: 1116.35ms, fracRes: 0.1477, norm(attn): 4.6875, norm(output): 35.5000, norm(x): 27.1980, norm(y): 0.9803, norm:1543.7610, tok/sec: 117411.39, flops:45.74, batch-reuse:1
@ 926 train 7.7891 , allloss: 525.2883, dt: 1131.94ms, fracRes: 0.1499, norm(attn): 4.6250, norm(output): 35.2500, norm(x): 26.9354, norm(y): 0.9803, norm:2301.0750, tok/sec: 115794.28, flops:45.11, batch-reuse:1
@ 927 train 7.8366 , allloss: 497.2216, dt: 1121.11ms, fracRes: 0.1994, norm(attn): 3.9062, norm(output): 29.0000, norm(x): 20.9821, norm(y): 0.9802, norm:4637.7344, tok/sec: 116912.41, flops:45.55, batch-reuse:1
@ 928 train 7.9862 , allloss: 578.4564, dt: 1122.26ms, fracRes: 0.2230, norm(attn): 3.2812, norm(output): 23.2500, norm(x): 16.3027, norm(y): 0.9799, norm:2136.6147, tok/sec: 116792.67, flops:45.50, batch-reuse:1
@ 929 train 8.2772 , allloss: 1109.5464, dt: 1114.61ms, fracRes: 0.3158, norm(attn): 2.3125, norm(output): 13.9375, norm(x): 8.9105, norm(y): 0.9787, norm:1443.0334, tok/sec: 117594.70, flops:45.81, batch-reuse:1
@ 930 train 8.2837 , allloss: 1623.0892, dt: 1121.95ms, fracRes: 0.2890, norm(attn): 1.6250, norm(output): 7.5625, norm(x): 5.2988, norm(y): 0.9771, norm:50509.7773, tok/sec: 116825.65, flops:45.52, batch-reuse:1
@ 931 train 9.2153 , allloss: 1278.9714, dt: 1126.39ms, fracRes: 0.3051, norm(attn): 1.5938, norm(output): 7.4375, norm(x): 5.2805, norm(y): 0.9771, norm:6653.8901, tok/sec: 116364.84, flops:45.34, batch-reuse:1
@ 932 train 9.0648 , allloss: 1492.6113, dt: 1119.46ms, fracRes: 0.2721, norm(attn): 1.5156, norm(output): 5.9375, norm(x): 4.4383, norm(y): 0.9766, norm:6538.4648, tok/sec: 117084.71, flops:45.62, batch-reuse:1
@ 933 train 9.1092 , allloss: 1299.5983, dt: 1133.34ms, fracRes: 0.3158, norm(attn): 1.3750, norm(output): 5.0312, norm(x): 3.8575, norm(y): 0.9763, norm:36000.3359, tok/sec: 115650.71, flops:45.06, batch-reuse:1
@ 934 train 9.1959 , allloss: 1207.6399, dt: 1121.22ms, fracRes: 0.3385, norm(attn): 1.3594, norm(output): 4.5312, norm(x): 3.5366, norm(y): 0.9762, norm:14214.7178, tok/sec: 116901.05, flops:45.54, batch-reuse:1
@ 935 train 8.7478 , allloss: 1149.8385, dt: 1119.30ms, fracRes: 0.3416, norm(attn): 1.3438, norm(output): 4.5000, norm(x): 3.4774, norm(y): 0.9767, norm:7264.3838, tok/sec: 117101.25, flops:45.62, batch-reuse:1
@ 936 train 9.0593 , allloss: 1151.0988, dt: 1133.45ms, fracRes: 0.3233, norm(attn): 1.4062, norm(output): 4.1562, norm(x): 3.3398, norm(y): 0.9766, norm:111927.0234, tok/sec: 115639.69, flops:45.05, batch-reuse:1
@ 937 train 8.9415 , allloss: 1114.5022, dt: 1120.21ms, fracRes: 0.3099, norm(attn): 1.4453, norm(output): 3.8906, norm(x): 3.1822, norm(y): 0.9767, norm:5075.1836, tok/sec: 117006.14, flops:45.59, batch-reuse:1
@ 938 train 8.6094 , allloss: 1047.3544, dt: 1136.37ms, fracRes: 0.3215, norm(attn): 1.4531, norm(output): 3.6406, norm(x): 3.0989, norm(y): 0.9770, norm:4530.2993, tok/sec: 115342.48, flops:44.94, batch-reuse:1
@ 939 train 8.6167 , allloss: 960.9228, dt: 1124.74ms, fracRes: 0.4013, norm(attn): 1.3047, norm(output): 3.4844, norm(x): 2.9944, norm(y): 0.9769, norm:1014.7225, tok/sec: 116535.27, flops:45.40, batch-reuse:1
@ 940 train 8.3357 , allloss: 899.6962, dt: 1127.16ms, fracRes: 0.4072, norm(attn): 1.1094, norm(output): 3.5000, norm(x): 2.9480, norm(y): 0.9771, norm:636.5291, tok/sec: 116285.32, flops:45.30, batch-reuse:1
@ 941 train 8.0195 , allloss: 852.1180, dt: 1147.16ms, fracRes: 0.3731, norm(attn): 1.0938, norm(output): 3.7812, norm(x): 3.0365, norm(y): 0.9776, norm:581.1404, tok/sec: 114257.51, flops:44.51, batch-reuse:1
@ 942 train 8.0817 , allloss: 556.5581, dt: 1109.98ms, fracRes: 0.3286, norm(attn): 1.2500, norm(output): 3.9062, norm(x): 3.0515, norm(y): 0.9782, norm:515.0280, tok/sec: 118084.75, flops:46.01, batch-reuse:1
@ 943 train 8.7925 , allloss: 496.9280, dt: 1136.62ms, fracRes: 0.2229, norm(attn): 2.2188, norm(output): 3.7344, norm(x): 3.1363, norm(y): 0.9789, norm:364.3568, tok/sec: 115316.86, flops:44.93, batch-reuse:1
@ 944 train 12.4369 , allloss: 684.6042, dt: 1148.18ms, fracRes: 0.0371, norm(attn): 2.4062, norm(output): 9.1875, norm(x): 8.1667, norm(y): 0.9726, norm:1060.7423, tok/sec: 114155.87, flops:44.48, batch-reuse:1
@ 945 train 12.4405 , allloss: 733.9524, dt: 1121.45ms, fracRes: 0.0211, norm(attn): 2.4844, norm(output): 11.3125, norm(x): 9.9806, norm(y): 0.9715, norm:1831.9049, tok/sec: 116877.61, flops:45.54, batch-reuse:1
@ 946 train 13.2137 , allloss: 853.1064, dt: 1128.64ms, fracRes: 0.0152, norm(attn): 2.2500, norm(output): 11.2500, norm(x): 9.8584, norm(y): 0.9688, norm:5834.2676, tok/sec: 116132.50, flops:45.25, batch-reuse:1
@ 947 train 12.3110 , allloss: 594.8842, dt: 1123.01ms, fracRes: 0.0217, norm(attn): 2.2812, norm(output): 6.6250, norm(x): 5.8379, norm(y): 0.9704, norm:11933.2461, tok/sec: 116714.98, flops:45.47, batch-reuse:1
@ 948 train 10.0110 , allloss: 433.2434, dt: 1139.22ms, fracRes: 0.0651, norm(attn): 2.6719, norm(output): 2.9531, norm(x): 2.6269, norm(y): 0.9757, norm:80040.9688, tok/sec: 115054.64, flops:44.83, batch-reuse:1
@ 949 train 8.9040 , allloss: 306.8486, dt: 1125.32ms, fracRes: 0.1547, norm(attn): 2.3594, norm(output): 1.4844, norm(x): 1.3903, norm(y): 0.9765, norm:22693.8164, tok/sec: 116474.85, flops:45.38, batch-reuse:1
@ 950 train 9.0204 , allloss: 291.6147, dt: 1130.07ms, fracRes: 0.3504, norm(attn): 1.8750, norm(output): 1.0625, norm(x): 1.1732, norm(y): 0.9745, norm:7903.3882, tok/sec: 115985.57, flops:45.19, batch-reuse:1
@ 951 train 9.3373 , allloss: 256.4998, dt: 1135.54ms, fracRes: 0.3791, norm(attn): 2.1250, norm(output): 1.0391, norm(x): 1.1516, norm(y): 0.9734, norm:262.9288, tok/sec: 115426.58, flops:44.97, batch-reuse:1
@ 952 train 12.0158 , allloss: 204.8270, dt: 1115.85ms, fracRes: 0.2530, norm(attn): 2.4688, norm(output): 1.2969, norm(x): 1.2460, norm(y): 0.9707, norm:329.5507, tok/sec: 117464.20, flops:45.76, batch-reuse:1
@ 953 train 13.7526 , allloss: 190.7395, dt: 1140.10ms, fracRes: 0.2968, norm(attn): 1.9922, norm(output): 1.8125, norm(x): 1.5313, norm(y): 0.9689, norm:469.2551, tok/sec: 114965.21, flops:44.79, batch-reuse:1
@ 954 train 13.9759 , allloss: 171.0945, dt: 1143.29ms, fracRes: 0.3153, norm(attn): 2.0156, norm(output): 1.7578, norm(x): 1.4951, norm(y): 0.9685, norm:246.2593, tok/sec: 114644.43, flops:44.67, batch-reuse:1
@ 955 train 14.0580 , allloss: 149.4049, dt: 1107.90ms, fracRes: 0.2774, norm(attn): 2.5938, norm(output): 1.8750, norm(x): 1.5549, norm(y): 0.9680, norm:261.5264, tok/sec: 118306.49, flops:46.09, batch-reuse:1
@ 956 train 14.1394 , allloss: 151.8778, dt: 1119.64ms, fracRes: 0.2744, norm(attn): 2.7031, norm(output): 2.1719, norm(x): 1.7292, norm(y): 0.9668, norm:182.6664, tok/sec: 117066.66, flops:45.61, batch-reuse:1
@ 957 train 13.8833 , allloss: 147.4017, dt: 1117.99ms, fracRes: 0.2664, norm(attn): 2.7500, norm(output): 2.4375, norm(x): 1.9055, norm(y): 0.9653, norm:320.8311, tok/sec: 117239.12, flops:45.68, batch-reuse:1
@ 958 train 13.3181 , allloss: 150.5267, dt: 1128.91ms, fracRes: 0.2689, norm(attn): 2.7500, norm(output): 2.4688, norm(x): 1.9256, norm(y): 0.9636, norm:420.0059, tok/sec: 116105.30, flops:45.23, batch-reuse:1
@ 959 train 12.6193 , allloss: 139.8353, dt: 1139.88ms, fracRes: 0.3182, norm(attn): 2.9688, norm(output): 2.2500, norm(x): 1.7481, norm(y): 0.9621, norm:453.4082, tok/sec: 114987.14, flops:44.80, batch-reuse:1
@ 960 train 10.1224 , allloss: 129.5655, dt: 1132.54ms, fracRes: 0.4807, norm(attn): 1.5469, norm(output): 1.4922, norm(x): 1.3028, norm(y): 0.9626, norm:255.4199, tok/sec: 115732.88, flops:45.09, batch-reuse:1
@ 961 train 9.6009 , allloss: 136.4852, dt: 1119.76ms, fracRes: 0.5016, norm(attn): 1.2656, norm(output): 1.6797, norm(x): 1.4005, norm(y): 0.9629, norm:257.3516, tok/sec: 117054.00, flops:45.60, batch-reuse:1
@ 962 train 10.3869 , allloss: 133.9789, dt: 1130.43ms, fracRes: 0.4883, norm(attn): 1.4688, norm(output): 2.3125, norm(x): 1.6748, norm(y): 0.9619, norm:380.8004, tok/sec: 115948.92, flops:45.17, batch-reuse:1
@ 963 train 10.7112 , allloss: 147.4586, dt: 1128.38ms, fracRes: 0.4134, norm(attn): 1.8750, norm(output): 3.2656, norm(x): 2.2689, norm(y): 0.9615, norm:389.0664, tok/sec: 116159.12, flops:45.26, batch-reuse:1
@ 964 train 10.8736 , allloss: 162.1852, dt: 1129.66ms, fracRes: 0.3665, norm(attn): 2.2344, norm(output): 4.6250, norm(x): 3.0824, norm(y): 0.9615, norm:380.0553, tok/sec: 116027.92, flops:45.20, batch-reuse:1
@ 965 train 11.0094 , allloss: 194.7851, dt: 1111.45ms, fracRes: 0.3544, norm(attn): 2.5781, norm(output): 6.4375, norm(x): 4.1436, norm(y): 0.9616, norm:284.7554, tok/sec: 117929.01, flops:45.95, batch-reuse:1
@ 966 train 11.1617 , allloss: 244.6260, dt: 1117.53ms, fracRes: 0.3510, norm(attn): 2.9844, norm(output): 8.8125, norm(x): 5.5063, norm(y): 0.9618, norm:351.2531, tok/sec: 117287.40, flops:45.70, batch-reuse:1
@ 967 train 11.2948 , allloss: 303.6411, dt: 1135.57ms, fracRes: 0.3059, norm(attn): 3.4844, norm(output): 11.9375, norm(x): 7.7276, norm(y): 0.9620, norm:790.2552, tok/sec: 115424.14, flops:44.97, batch-reuse:1
@ 968 train 11.4081 , allloss: 371.2771, dt: 1120.13ms, fracRes: 0.2856, norm(attn): 3.9844, norm(output): 15.8125, norm(x): 10.2911, norm(y): 0.9622, norm:276.1650, tok/sec: 117015.03, flops:45.59, batch-reuse:1
@ 969 train 11.5655 , allloss: 421.3836, dt: 1137.25ms, fracRes: 0.2872, norm(attn): 4.5312, norm(output): 20.1250, norm(x): 13.1342, norm(y): 0.9625, norm:313.6993, tok/sec: 115253.49, flops:44.90, batch-reuse:1
@ 970 train 11.7716 , allloss: 442.0607, dt: 1135.22ms, fracRes: 0.2904, norm(attn): 5.0938, norm(output): 25.3750, norm(x): 16.2168, norm(y): 0.9627, norm:413.4806, tok/sec: 115459.82, flops:44.98, batch-reuse:1
@ 971 train 12.0008 , allloss: 464.1922, dt: 1104.65ms, fracRes: 0.2950, norm(attn): 5.5312, norm(output): 30.1250, norm(x): 19.0724, norm(y): 0.9629, norm:698.7405, tok/sec: 118654.39, flops:46.23, batch-reuse:1
@ 972 train 12.2160 , allloss: 453.1352, dt: 1133.16ms, fracRes: 0.3598, norm(attn): 5.1875, norm(output): 30.1250, norm(x): 17.3691, norm(y): 0.9629, norm:605.5143, tok/sec: 115669.78, flops:45.06, batch-reuse:1
@ 973 train 12.4212 , allloss: 404.9362, dt: 1120.28ms, fracRes: 0.3708, norm(attn): 5.1250, norm(output): 30.1250, norm(x): 17.1651, norm(y): 0.9629, norm:872.2711, tok/sec: 116998.90, flops:45.58, batch-reuse:1
@ 974 train 12.6467 , allloss: 393.2233, dt: 1121.43ms, fracRes: 0.3924, norm(attn): 4.7500, norm(output): 28.2500, norm(x): 15.2990, norm(y): 0.9627, norm:1418.2179, tok/sec: 116879.30, flops:45.54, batch-reuse:1
@ 975 train 12.8053 , allloss: 389.2827, dt: 1131.12ms, fracRes: 0.3813, norm(attn): 4.5312, norm(output): 27.2500, norm(x): 14.8352, norm(y): 0.9626, norm:972.9147, tok/sec: 115877.90, flops:45.15, batch-reuse:1
@ 976 train 12.9534 , allloss: 393.6300, dt: 1136.49ms, fracRes: 0.4158, norm(attn): 3.6250, norm(output): 21.5000, norm(x): 11.0782, norm(y): 0.9624, norm:2383.1760, tok/sec: 115330.33, flops:44.93, batch-reuse:1
@ 977 train 13.0789 , allloss: 278.3391, dt: 1115.95ms, fracRes: 0.4355, norm(attn): 2.9844, norm(output): 17.2500, norm(x): 8.6613, norm(y): 0.9622, norm:735.3007, tok/sec: 117453.23, flops:45.76, batch-reuse:1
@ 978 train 13.3039 , allloss: 256.0127, dt: 1104.54ms, fracRes: 0.4294, norm(attn): 2.5312, norm(output): 14.0000, norm(x): 7.1684, norm(y): 0.9619, norm:690.5554, tok/sec: 118666.28, flops:46.23, batch-reuse:1
@ 979 train 13.5549 , allloss: 224.0453, dt: 1134.30ms, fracRes: 0.4313, norm(attn): 2.0000, norm(output): 10.5000, norm(x): 5.4836, norm(y): 0.9615, norm:687.3342, tok/sec: 115552.89, flops:45.02, batch-reuse:1
@ 980 train 13.9188 , allloss: 225.3268, dt: 1109.76ms, fracRes: 0.4702, norm(attn): 1.2969, norm(output): 7.0312, norm(x): 3.6602, norm(y): 0.9609, norm:347.8531, tok/sec: 118108.06, flops:46.01, batch-reuse:1
@ 981 train 14.2903 , allloss: 248.3486, dt: 1124.52ms, fracRes: 0.4733, norm(attn): 0.9688, norm(output): 6.5312, norm(x): 3.3943, norm(y): 0.9601, norm:551.2861, tok/sec: 116558.42, flops:45.41, batch-reuse:1
@ 982 train 14.0382 , allloss: 306.0995, dt: 1125.95ms, fracRes: 0.4832, norm(attn): 1.0312, norm(output): 7.9375, norm(x): 3.9320, norm(y): 0.9600, norm:498.7512, tok/sec: 116410.18, flops:45.35, batch-reuse:1
@ 983 train 12.4659 , allloss: 380.0186, dt: 1123.64ms, fracRes: 0.4664, norm(attn): 1.3125, norm(output): 8.5625, norm(x): 4.3964, norm(y): 0.9612, norm:498.2757, tok/sec: 116649.53, flops:45.45, batch-reuse:1
@ 984 train 9.9773 , allloss: 498.9588, dt: 1133.25ms, fracRes: 0.4104, norm(attn): 1.7812, norm(output): 8.5000, norm(x): 4.7212, norm(y): 0.9645, norm:651.9780, tok/sec: 115660.66, flops:45.06, batch-reuse:1
@ 985 train 8.0417 , allloss: 450.0241, dt: 1119.42ms, fracRes: 0.4526, norm(attn): 1.5000, norm(output): 4.5000, norm(x): 2.8226, norm(y): 0.9705, norm:529.4868, tok/sec: 117089.10, flops:45.62, batch-reuse:1
@ 986 train 8.1462 , allloss: 333.2533, dt: 1140.33ms, fracRes: 0.5149, norm(attn): 1.3438, norm(output): 3.0625, norm(x): 1.9673, norm(y): 0.9726, norm:306.4520, tok/sec: 114941.97, flops:44.78, batch-reuse:1
@ 987 train 8.1160 , allloss: 294.7690, dt: 1145.80ms, fracRes: 0.4804, norm(attn): 1.3906, norm(output): 2.5156, norm(x): 1.7660, norm(y): 0.9717, norm:320.3465, tok/sec: 114393.83, flops:44.57, batch-reuse:1
@ 988 train 8.4720 , allloss: 287.8186, dt: 1131.86ms, fracRes: 0.3874, norm(attn): 1.5859, norm(output): 2.4062, norm(x): 1.9332, norm(y): 0.9679, norm:387262.1875, tok/sec: 115802.53, flops:45.12, batch-reuse:1
@ 989 train 9.1995 , allloss: 341.2241, dt: 1126.54ms, fracRes: 0.2842, norm(attn): 1.7031, norm(output): 2.9844, norm(x): 2.6217, norm(y): 0.9648, norm:40794.2227, tok/sec: 116349.67, flops:45.33, batch-reuse:1
@ 990 train 9.7442 , allloss: 412.8906, dt: 1136.38ms, fracRes: 0.2461, norm(attn): 1.7812, norm(output): 3.3750, norm(x): 2.9877, norm(y): 0.9641, norm:69753.8359, tok/sec: 115341.82, flops:44.94, batch-reuse:1
@ 991 train 9.9914 , allloss: 334.8213, dt: 1131.26ms, fracRes: 0.3010, norm(attn): 1.8516, norm(output): 3.0312, norm(x): 2.6027, norm(y): 0.9649, norm:10123.4336, tok/sec: 115863.86, flops:45.14, batch-reuse:1
@ 992 train 9.7217 , allloss: 318.7324, dt: 1136.36ms, fracRes: 0.3487, norm(attn): 1.8281, norm(output): 2.5625, norm(x): 2.1301, norm(y): 0.9648, norm:150858.7500, tok/sec: 115343.64, flops:44.94, batch-reuse:1
@ 993 train 10.0565 , allloss: 388.4347, dt: 1141.16ms, fracRes: 0.2744, norm(attn): 1.9844, norm(output): 2.8906, norm(x): 2.4438, norm(y): 0.9641, norm:1416561.8750, tok/sec: 114858.16, flops:44.75, batch-reuse:1
@ 994 train 10.8356 , allloss: 481.3251, dt: 1140.88ms, fracRes: 0.1698, norm(attn): 2.2188, norm(output): 3.4375, norm(x): 3.0010, norm(y): 0.9641, norm:518229.5000, tok/sec: 114886.60, flops:44.76, batch-reuse:1
@ 995 train 11.2706 , allloss: 489.6649, dt: 1139.00ms, fracRes: 0.1037, norm(attn): 2.4375, norm(output): 3.7031, norm(x): 3.2679, norm(y): 0.9650, norm:751404416.0000, tok/sec: 115076.24, flops:44.83, batch-reuse:1
@ 996 train 11.3424 , allloss: 500.1215, dt: 1139.30ms, fracRes: 0.0707, norm(attn): 2.5156, norm(output): 3.7812, norm(x): 3.3393, norm(y): 0.9657, norm:7438218.0000, tok/sec: 115046.02, flops:44.82, batch-reuse:1
@ 997 train 11.3729 , allloss: 515.2032, dt: 1129.05ms, fracRes: 0.0583, norm(attn): 2.6250, norm(output): 3.7188, norm(x): 3.3459, norm(y): 0.9657, norm:126809648.0000, tok/sec: 116090.71, flops:45.23, batch-reuse:1
@ 998 train 11.3571 , allloss: 526.8730, dt: 1126.38ms, fracRes: 0.0488, norm(attn): 2.7344, norm(output): 3.7656, norm(x): 3.3736, norm(y): 0.9654, norm:6142101.0000, tok/sec: 116365.19, flops:45.34, batch-reuse:1
@ 999 train 11.3307 , allloss: 505.6731, dt: 1136.65ms, fracRes: 0.0519, norm(attn): 2.7969, norm(output): 3.7656, norm(x): 3.3758, norm(y): 0.9654, norm:5404342.0000, tok/sec: 115314.00, flops:44.93, batch-reuse:1
@ 1000 train 11.4028 , allloss: 486.5553, dt: 1125.83ms, fracRes: 0.0531, norm(attn): 2.7812, norm(output): 3.8594, norm(x): 3.4658, norm(y): 0.9652, norm:469732.6250, tok/sec: 116422.29, flops:45.36, batch-reuse:1
@ 1001 train 11.7131 , allloss: 472.0450, dt: 1121.73ms, fracRes: 0.0377, norm(attn): 2.8750, norm(output): 4.0938, norm(x): 3.6810, norm(y): 0.9653, norm:1033757.6875, tok/sec: 116848.35, flops:45.52, batch-reuse:1
@ 1002 train 11.9091 , allloss: 471.3734, dt: 1113.52ms, fracRes: 0.0298, norm(attn): 2.8438, norm(output): 4.2812, norm(x): 3.8380, norm(y): 0.9654, norm:471168.2188, tok/sec: 117709.82, flops:45.86, batch-reuse:1
@ 1003 train 12.0563 , allloss: 480.9951, dt: 1113.23ms, fracRes: 0.0190, norm(attn): 2.8438, norm(output): 4.4375, norm(x): 4.0099, norm(y): 0.9661, norm:4754677.0000, tok/sec: 117740.07, flops:45.87, batch-reuse:1
@ 1004 train 11.7712 , allloss: 494.5755, dt: 1111.71ms, fracRes: 0.0091, norm(attn): 2.7812, norm(output): 4.5000, norm(x): 4.1147, norm(y): 0.9682, norm:2488671.0000, tok/sec: 117901.70, flops:45.93, batch-reuse:1
@ 1005 train 11.2001 , allloss: 531.9808, dt: 1137.90ms, fracRes: 0.0043, norm(attn): 2.7188, norm(output): 4.7500, norm(x): 4.3143, norm(y): 0.9720, norm:679675.4375, tok/sec: 115187.33, flops:44.88, batch-reuse:1
@ 1006 train 10.3561 , allloss: 601.0723, dt: 1116.24ms, fracRes: 0.0026, norm(attn): 2.7188, norm(output): 5.3125, norm(x): 4.8357, norm(y): 0.9761, norm:312647.8438, tok/sec: 117422.60, flops:45.75, batch-reuse:1
@ 1007 train 9.9590 , allloss: 700.8876, dt: 1117.65ms, fracRes: 0.0020, norm(attn): 2.7500, norm(output): 5.8750, norm(x): 5.3181, norm(y): 0.9784, norm:2515138.2500, tok/sec: 117274.99, flops:45.69, batch-reuse:1
@ 1008 train 9.5893 , allloss: 806.0705, dt: 1123.59ms, fracRes: 0.0017, norm(attn): 2.7969, norm(output): 6.4688, norm(x): 5.8490, norm(y): 0.9798, norm:260737296.0000, tok/sec: 116654.18, flops:45.45, batch-reuse:1
@ 1009 train 9.7383 , allloss: 836.8049, dt: 1116.32ms, fracRes: 0.0017, norm(attn): 2.7812, norm(output): 6.7500, norm(x): 6.0709, norm(y): 0.9797, norm:7224768.5000, tok/sec: 117414.50, flops:45.74, batch-reuse:1
@ 1010 train 9.5105 , allloss: 882.6965, dt: 1134.71ms, fracRes: 0.0015, norm(attn): 2.7812, norm(output): 6.9375, norm(x): 6.2692, norm(y): 0.9796, norm:16302405.0000, tok/sec: 115511.64, flops:45.00, batch-reuse:1
@ 1011 train 9.2270 , allloss: 954.3252, dt: 1115.14ms, fracRes: 0.0016, norm(attn): 2.9375, norm(output): 7.8438, norm(x): 7.0729, norm(y): 0.9805, norm:15667848.0000, tok/sec: 117538.08, flops:45.79, batch-reuse:1
@ 1012 train 9.3177 , allloss: 1040.9526, dt: 1127.66ms, fracRes: 0.0026, norm(attn): 3.0625, norm(output): 9.0625, norm(x): 8.1457, norm(y): 0.9814, norm:13688833.0000, tok/sec: 116233.61, flops:45.28, batch-reuse:1
@ 1013 train 9.0284 , allloss: 1101.9135, dt: 1125.92ms, fracRes: 0.0054, norm(attn): 3.1562, norm(output): 9.5625, norm(x): 8.6558, norm(y): 0.9820, norm:224929952.0000, tok/sec: 116413.58, flops:45.35, batch-reuse:1
@ 1014 train 9.0457 , allloss: 1180.9701, dt: 1150.60ms, fracRes: 0.0129, norm(attn): 3.1094, norm(output): 9.2500, norm(x): 8.6324, norm(y): 0.9822, norm:25605634.0000, tok/sec: 113915.84, flops:44.38, batch-reuse:1
@ 1015 train 9.2118 , allloss: 1193.8954, dt: 1114.34ms, fracRes: 0.0384, norm(attn): 3.0312, norm(output): 9.0625, norm(x): 8.4206, norm(y): 0.9825, norm:49656476.0000, tok/sec: 117623.38, flops:45.83, batch-reuse:1
@ 1016 train 9.4619 , allloss: 1217.6891, dt: 1120.05ms, fracRes: 0.0856, norm(attn): 2.9219, norm(output): 8.4375, norm(x): 7.9154, norm(y): 0.9827, norm:3033230.2500, tok/sec: 117023.13, flops:45.59, batch-reuse:1
@ 1017 train 8.9900 , allloss: 1046.6813, dt: 1119.51ms, fracRes: 0.2364, norm(attn): 2.3750, norm(output): 6.1250, norm(x): 5.3341, norm(y): 0.9830, norm:238089.6875, tok/sec: 117079.88, flops:45.61, batch-reuse:1
@ 1018 train 9.8012 , allloss: 671.2427, dt: 1115.16ms, fracRes: 0.3884, norm(attn): 1.8594, norm(output): 4.4688, norm(x): 3.3725, norm(y): 0.9829, norm:1941.7212, tok/sec: 117536.32, flops:45.79, batch-reuse:1
@ 1019 train 9.8830 , allloss: 524.5182, dt: 1135.97ms, fracRes: 0.4250, norm(attn): 1.7422, norm(output): 3.9688, norm(x): 2.7858, norm(y): 0.9828, norm:419.2900, tok/sec: 115382.88, flops:44.95, batch-reuse:1
@ 1020 train 9.5352 , allloss: 415.6354, dt: 1125.95ms, fracRes: 0.4222, norm(attn): 1.7031, norm(output): 3.3281, norm(x): 2.3154, norm(y): 0.9830, norm:433.0503, tok/sec: 116409.76, flops:45.35, batch-reuse:1
@ 1021 train 9.0171 , allloss: 411.0299, dt: 1150.93ms, fracRes: 0.3601, norm(attn): 1.7500, norm(output): 2.6094, norm(x): 1.9439, norm(y): 0.9829, norm:25956.3574, tok/sec: 113883.73, flops:44.37, batch-reuse:1
@ 1022 train 8.6301 , allloss: 474.7684, dt: 1140.62ms, fracRes: 0.2710, norm(attn): 1.8438, norm(output): 2.2656, norm(x): 1.7941, norm(y): 0.9817, norm:406032.3125, tok/sec: 114913.35, flops:44.77, batch-reuse:1
@ 1023 train 8.8936 , allloss: 614.2274, dt: 1133.01ms, fracRes: 0.1743, norm(attn): 2.0000, norm(output): 2.3125, norm(x): 1.9386, norm(y): 0.9796, norm:1955980.8750, tok/sec: 115684.80, flops:45.07, batch-reuse:1
@ 1024 train 9.1224 , allloss: 674.3199, dt: 1132.91ms, fracRes: 0.1323, norm(attn): 2.0625, norm(output): 2.4062, norm(x): 2.0880, norm(y): 0.9778, norm:6104216.5000, tok/sec: 115694.56, flops:45.07, batch-reuse:1
@ 1025 train 9.7978 , allloss: 748.2689, dt: 1129.19ms, fracRes: 0.1221, norm(attn): 2.0938, norm(output): 2.5938, norm(x): 2.2628, norm(y): 0.9764, norm:17749958.0000, tok/sec: 116076.50, flops:45.22, batch-reuse:1
@ 1026 train 10.1452 , allloss: 910.3652, dt: 1146.88ms, fracRes: 0.0729, norm(attn): 2.1250, norm(output): 2.8906, norm(x): 2.5482, norm(y): 0.9753, norm:15155938.0000, tok/sec: 114285.41, flops:44.53, batch-reuse:1
@ 1027 train 10.3464 , allloss: 1011.3404, dt: 1131.91ms, fracRes: 0.0289, norm(attn): 2.1250, norm(output): 2.9844, norm(x): 2.6943, norm(y): 0.9748, norm:65830988.0000, tok/sec: 115796.89, flops:45.11, batch-reuse:1
@ 1028 train 10.1684 , allloss: 1032.0172, dt: 1122.34ms, fracRes: 0.0222, norm(attn): 2.0625, norm(output): 3.0000, norm(x): 2.7593, norm(y): 0.9742, norm:13981238.0000, tok/sec: 116784.88, flops:45.50, batch-reuse:1
@ 1029 train 10.1596 , allloss: 938.6892, dt: 1123.43ms, fracRes: 0.0278, norm(attn): 1.9844, norm(output): 3.0938, norm(x): 2.7896, norm(y): 0.9721, norm:7168509.5000, tok/sec: 116671.78, flops:45.46, batch-reuse:1
@ 1030 train 10.3526 , allloss: 851.0320, dt: 1131.19ms, fracRes: 0.0324, norm(attn): 1.8828, norm(output): 3.3125, norm(x): 2.9928, norm(y): 0.9701, norm:20761014.0000, tok/sec: 115870.70, flops:45.14, batch-reuse:1
@ 1031 train 10.3907 , allloss: 734.9412, dt: 1120.47ms, fracRes: 0.0402, norm(attn): 1.7734, norm(output): 3.4062, norm(x): 3.0697, norm(y): 0.9688, norm:46591668.0000, tok/sec: 116979.05, flops:45.58, batch-reuse:1
@ 1032 train 10.1886 , allloss: 704.4641, dt: 1112.35ms, fracRes: 0.0446, norm(attn): 1.7188, norm(output): 3.7188, norm(x): 3.3027, norm(y): 0.9675, norm:22895450.0000, tok/sec: 117833.42, flops:45.91, batch-reuse:1
@ 1033 train 10.1369 , allloss: 656.1368, dt: 1112.36ms, fracRes: 0.0537, norm(attn): 1.6953, norm(output): 4.1875, norm(x): 3.7142, norm(y): 0.9663, norm:324255.0938, tok/sec: 117832.43, flops:45.91, batch-reuse:1
@ 1034 train 9.8294 , allloss: 712.7979, dt: 1120.04ms, fracRes: 0.0539, norm(attn): 1.6797, norm(output): 4.4688, norm(x): 3.9935, norm(y): 0.9664, norm:165379.2812, tok/sec: 117023.88, flops:45.59, batch-reuse:1
@ 1035 train 10.0104 , allloss: 682.5223, dt: 1123.27ms, fracRes: 0.0404, norm(attn): 1.7188, norm(output): 4.6562, norm(x): 4.1898, norm(y): 0.9665, norm:12696.1396, tok/sec: 116687.51, flops:45.46, batch-reuse:1
@ 1036 train 10.2248 , allloss: 316.2452, dt: 1122.37ms, fracRes: 0.0296, norm(attn): 1.7578, norm(output): 5.9375, norm(x): 5.3494, norm(y): 0.9677, norm:1659.0157, tok/sec: 116781.50, flops:45.50, batch-reuse:1
@ 1037 train 9.5556 , allloss: 245.7209, dt: 1115.07ms, fracRes: 0.0255, norm(attn): 2.0469, norm(output): 8.5000, norm(x): 7.5641, norm(y): 0.9702, norm:907.2191, tok/sec: 117545.90, flops:45.80, batch-reuse:1
@ 1038 train 9.7419 , allloss: 193.7356, dt: 1124.39ms, fracRes: 0.0611, norm(attn): 2.2656, norm(output): 9.3125, norm(x): 8.1336, norm(y): 0.9703, norm:745.2081, tok/sec: 116572.11, flops:45.42, batch-reuse:1
@ 1039 train 9.8371 , allloss: 185.8098, dt: 1108.75ms, fracRes: 0.0628, norm(attn): 2.4531, norm(output): 9.5000, norm(x): 8.3342, norm(y): 0.9701, norm:2155.9666, tok/sec: 118215.97, flops:46.06, batch-reuse:1
@ 1040 train 9.6061 , allloss: 193.6092, dt: 1110.44ms, fracRes: 0.1188, norm(attn): 2.4844, norm(output): 10.2500, norm(x): 8.6283, norm(y): 0.9704, norm:2686.2893, tok/sec: 118035.79, flops:45.99, batch-reuse:1
@ 1041 train 9.3926 , allloss: 238.9448, dt: 1116.50ms, fracRes: 0.1165, norm(attn): 2.7656, norm(output): 12.7500, norm(x): 10.4691, norm(y): 0.9705, norm:2519.9348, tok/sec: 117395.59, flops:45.74, batch-reuse:1
@ 1042 train 9.2460 , allloss: 288.5425, dt: 1139.99ms, fracRes: 0.0683, norm(attn): 3.4375, norm(output): 17.1250, norm(x): 14.6875, norm(y): 0.9701, norm:529.1008, tok/sec: 114976.70, flops:44.79, batch-reuse:1
@ 1043 train 9.0105 , allloss: 374.5509, dt: 1115.88ms, fracRes: 0.0757, norm(attn): 3.7031, norm(output): 20.1250, norm(x): 17.1236, norm(y): 0.9701, norm:1169.7837, tok/sec: 117460.38, flops:45.76, batch-reuse:1
@ 1044 train 8.8436 , allloss: 408.0115, dt: 1129.92ms, fracRes: 0.0795, norm(attn): 3.7656, norm(output): 20.5000, norm(x): 17.3562, norm(y): 0.9700, norm:2032.7728, tok/sec: 116001.47, flops:45.19, batch-reuse:1
@ 1045 train 8.6204 , allloss: 631.4998, dt: 1127.24ms, fracRes: 0.1887, norm(attn): 3.2969, norm(output): 15.0625, norm(x): 11.8931, norm(y): 0.9690, norm:3248.9604, tok/sec: 116276.78, flops:45.30, batch-reuse:1
@ 1046 train 8.4663 , allloss: 1185.5156, dt: 1127.78ms, fracRes: 0.3958, norm(attn): 2.7500, norm(output): 11.3125, norm(x): 7.2493, norm(y): 0.9687, norm:19793.8672, tok/sec: 116221.03, flops:45.28, batch-reuse:1
@ 1047 train 8.3508 , allloss: 817.5345, dt: 1139.72ms, fracRes: 0.5258, norm(attn): 2.5000, norm(output): 8.9375, norm(x): 5.2343, norm(y): 0.9688, norm:474.6181, tok/sec: 115003.38, flops:44.81, batch-reuse:1
@ 1048 train 8.2697 , allloss: 645.6474, dt: 1139.30ms, fracRes: 0.5394, norm(attn): 2.4844, norm(output): 8.3125, norm(x): 4.6668, norm(y): 0.9690, norm:508.5208, tok/sec: 115046.09, flops:44.82, batch-reuse:1
@ 1049 train 8.2151 , allloss: 475.1907, dt: 1125.23ms, fracRes: 0.5462, norm(attn): 2.3750, norm(output): 7.5000, norm(x): 4.0863, norm(y): 0.9693, norm:387.1641, tok/sec: 116485.14, flops:45.38, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0189,     0.0115,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0222,     0.0000,     0.9766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0410,     0.1367,     0.8242,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0001,     0.7578,     0.0240,     0.0225,     0.1914,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2891,     0.1167,     0.0498,     0.0201,     0.0330,     0.0060,     0.1514,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1260,     0.0002,     0.0005,     0.8750,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.4102,     0.0039,     0.0072,     0.5781,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0952,     0.3320,     0.0168,     0.0118,     0.0052,     0.0034,     0.1001,     0.2100,     0.0854,     0.0559,     0.0157,     0.0679,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1650,     0.0000,     0.0000,     0.0043,     0.2080,     0.0000,     0.0000,     0.5234,     0.0000,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0001,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0009,     0.0000,     0.0000,     0.0000],
        [    0.0732,     0.0203,     0.1504,     0.0542,     0.0952,     0.0549,     0.0781,     0.0281,     0.0510,     0.0179,     0.0464,     0.0342,     0.0496,     0.2109,     0.0364]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0117, -0.0096, -0.0461,  ...,  0.0166,  0.0190, -0.0390],
        [-0.0056,  0.0170,  0.0384,  ...,  0.0090, -0.0152,  0.0391],
        [ 0.0196, -0.0347, -0.0529,  ..., -0.0001,  0.0164, -0.0351],
        ...,
        [-0.0116, -0.0023,  0.0004,  ..., -0.0193,  0.0360,  0.0289],
        [-0.0027,  0.0176, -0.0405,  ...,  0.0028,  0.0179,  0.0041],
        [-0.0119, -0.0147, -0.0026,  ...,  0.0195, -0.0640,  0.0096]], device='cuda:0', requires_grad=True)
K: tensor([-1.3281, -0.4238,  1.0625,  0.3184,  0.2812, -0.1221,  1.0547, -0.9453, -0.2441,  0.1943,  0.8281, -0.1680, -0.0403, -1.2031, -0.0073, -0.4766,  1.1953,  1.1172, -1.7031,  0.3184,  0.2891,  0.4609,  0.1484,  0.0620,  0.4414,  1.7266, -0.4004,  0.0277,  0.0179, -0.8281,  0.8555,  0.9570,
         0.4434,  0.6484,  0.8672, -0.4297,  2.3125, -0.5156, -0.6055, -0.0613,  1.2891,  0.0366, -0.6133,  1.0781,  0.7812, -1.4219,  0.5234,  0.4746, -0.2422, -2.6406,  0.8594,  0.5625,  0.2080,  0.5039,  1.5938,  1.9453, -0.9883,  1.2031,  1.0625,  3.2969, -0.1226,  0.3262, -0.9922,  1.1250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0038, -0.0048,  0.0476,  ..., -0.0145, -0.0168,  0.0289],
        [ 0.0366,  0.0240, -0.1067,  ..., -0.0204,  0.0063,  0.0073],
        [ 0.0276, -0.0009,  0.0642,  ..., -0.0225, -0.0601, -0.0601],
        ...,
        [-0.0057,  0.0166,  0.0527,  ...,  0.0014, -0.0024, -0.0122],
        [-0.0388,  0.0181, -0.0274,  ..., -0.0019, -0.0180, -0.0010],
        [-0.0140,  0.0170, -0.0344,  ...,  0.0220,  0.0333, -0.0183]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4961, -0.6172, -0.0913, -0.5156, -0.6797,  0.8008, -0.4277,  0.4336,  0.3379, -0.6445, -0.1387, -0.4492, -0.5352,  0.1289, -0.9180,  0.2539, -0.0684, -0.2334,  0.0737,  0.4551, -0.9766,  0.2969, -0.5156, -0.8945, -0.0137,  0.4434, -0.1177,  0.3145, -0.2578,  0.0613,  0.4668, -0.0067,
         0.1367, -0.9570,  0.8828,  0.7773, -0.1953,  0.4727, -0.4668, -0.7539,  0.6328,  0.3770,  0.0732,  0.0830, -0.9766,  1.0859, -0.2910,  0.0503, -0.5547,  0.3418, -0.0197,  0.3027, -1.0078, -0.6602, -0.1816,  0.1836, -1.3203,  0.3184, -0.5469, -0.1680,  0.5039, -0.3926,  0.0356, -0.9336],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -14.1250,  11.8750,   4.7812,   3.9062,   4.3438,  -0.4707,  -1.7656, -12.3125,  -7.4375,  -4.3750,   3.0156,  -1.6797,  -3.7344,   2.0156],
        [  0.0000,  -3.9375,  -4.4375,  -9.6875, -12.6250, -16.2500,  -3.9375,   8.5625,  -4.4688,   1.4453, -11.1875,   3.8438,  10.8125, -10.3750,  -4.4688],
        [  0.0000, -15.5000,   3.7812,  -9.8125, -13.7500, -16.7500,  -7.5625,  10.6250, -20.0000,  -6.4062, -20.0000,   7.1875,  12.5625, -19.7500,  -5.1250],
        [  0.0000,   1.9766,   7.0000,   8.1875,  10.0000,  14.8125,   3.8125,  -4.1875,   0.7227,  -2.1094,   7.4062,  -0.7500,  -7.2812,   5.2188,   5.2500],
        [  0.0000, -16.8750,   7.2812,  -3.9688,  -7.6562,  -9.0625,  -5.5625,   7.4375, -19.7500,  -7.2500, -14.5625,   7.1250,   9.5625, -17.2500,  -2.2031],
        [  0.0000,  -2.9062,   6.2500,   2.7812,   2.7188,   4.8438,  -0.3984,   0.1060,  -5.8750,  -2.2812,  -0.9648,   2.8281,  -0.0330,  -3.5469,   1.9688],
        [  0.0000,  -0.9023,  -1.7578,  -2.6562,  -2.1719,  -3.8750,  -0.6406,   0.1484,   1.3984,  -0.6797,  -1.4609,  -1.2500,  -0.4414,   1.4531,  -2.0625],
        [  0.0000, -15.9375,  23.3750,  17.0000,  17.8750,  25.3750,   1.9766,  -6.8750, -19.8750, -13.1875,   2.6094,   3.9062, -11.0000,  -3.5312,   8.6875],
        [  0.0000,  -9.5000,  11.1250,   6.4688,   7.0938,  11.5000,   1.7891,  -2.5156, -11.5625, -10.4375,  -0.5078,   0.4531,  -6.4062,  -1.7109,   3.9062],
        [  0.0000, -21.8750,  21.2500,   7.9062,   5.5000,   9.1875,  -3.2031,   1.3984, -28.6250, -13.5625, -10.3125,   8.6250,   0.2539, -16.3750,   3.7656],
        [  0.0000,   1.2500,  -1.7344,  -2.0938,  -2.9062,  -3.3281,   0.0486,   0.7930,  -0.1064,  -0.5312,  -1.8047,  -0.3398,   0.2119,  -0.2197,  -1.4688],
        [  0.0000,  15.0625,  -3.0625,   5.7812,  11.4375,  15.3125,   5.9688,  -8.5625,  16.2500,   0.6836,  14.5625,  -9.1250, -14.8750,  19.2500,   3.0312],
        [  0.0000, -16.3750,  14.6250,   5.5312,   3.5938,   6.6250,  -2.2344,   1.6328, -20.2500,  -8.2500,  -7.5000,   7.5938,   1.3516, -12.9375,   2.9375],
        [  0.0000,  -1.2891,   0.7148,  -0.3027,   0.2578,  -0.2891,   0.0610,  -0.9609,  -0.3633,  -1.4062,  -0.4590,  -0.7656,  -0.3926,   1.0547,  -0.7031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.6315],
        [    0.2833],
        [    0.0239],
        [    0.0591],
        [    0.0907],
        [    0.0904],
        [    0.1913],
        [    0.0287],
        [    0.0476],
        [    0.0000],
        [    0.0223],
        [    0.0128],
        [    0.0023],
        [    0.0112]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0008,     0.8906,     0.0206,     0.0000,     0.0457,     0.0439,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0231,     0.0008,     0.0000,     0.0020,     0.0024,     0.0000,     0.6523,     0.1069,     0.2129,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0117, -0.0096, -0.0461,  ...,  0.0166,  0.0190, -0.0390],
        [-0.0056,  0.0170,  0.0384,  ...,  0.0090, -0.0152,  0.0391],
        [ 0.0196, -0.0347, -0.0529,  ..., -0.0001,  0.0164, -0.0351],
        ...,
        [-0.0116, -0.0023,  0.0004,  ..., -0.0193,  0.0360,  0.0289],
        [-0.0027,  0.0176, -0.0405,  ...,  0.0028,  0.0179,  0.0041],
        [-0.0119, -0.0147, -0.0026,  ...,  0.0195, -0.0640,  0.0096]], device='cuda:0', requires_grad=True)
K: tensor([    -0.2734,      2.4375,     -2.3750,      1.1641,     -1.6406,     -0.4727,      2.1250,      3.3906,      1.5547,     -3.0312,     -0.1348,      0.0767,      0.0786,      1.5859,      0.2676,     -0.5195,      4.6562,      0.2168,     -0.9922,     -3.5000,      0.0046,      1.0938,
            -0.9688,     -1.4922,     -0.3750,      3.1875,     -0.7891,     -0.8477,      1.2891,     -2.6562,      0.9688,     -1.5625,     -0.9922,     -0.5625,      1.8438,     -3.0156,      2.3594,      2.0156,      1.5312,      3.1875,      0.1416,     -0.7578,     -4.0625,      0.3281,
             1.8281,      0.1777,      0.5586,     -1.1094,      1.9609,      0.0713,     -0.2773,      2.1250,     -4.0312,     -0.5117,     -0.7773,     -1.2891,     -1.0391,      1.7578,      3.0625,      0.4805,     -2.2188,     -0.6289,     -0.9297,      3.4219], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0038, -0.0048,  0.0476,  ..., -0.0145, -0.0168,  0.0289],
        [ 0.0366,  0.0240, -0.1067,  ..., -0.0204,  0.0063,  0.0073],
        [ 0.0276, -0.0009,  0.0642,  ..., -0.0225, -0.0601, -0.0601],
        ...,
        [-0.0057,  0.0166,  0.0527,  ...,  0.0014, -0.0024, -0.0122],
        [-0.0388,  0.0181, -0.0274,  ..., -0.0019, -0.0180, -0.0010],
        [-0.0140,  0.0170, -0.0344,  ...,  0.0220,  0.0333, -0.0183]], device='cuda:0', requires_grad=True)
Q: tensor([-3.2344, -1.4375,  2.0312, -0.4141,  0.1689,  1.5391, -2.0312, -4.4062, -1.5000,  1.6328,  2.9375, -1.4375, -1.2500, -3.2969, -0.6719, -2.5000, -0.3203,  1.6484, -0.0454,  2.1562, -0.7852, -0.1108,  2.3281,  0.2656,  1.6328, -3.7500,  1.3828, -2.2812, -0.0630, -1.7656,  1.2188,  2.6875,
         3.4688, -0.1367, -1.6797,  2.8906,  1.8047,  0.1406, -1.7266, -2.7500,  1.6328, -1.1719,  1.3516, -0.8477, -3.2500, -0.9414, -0.1406,  0.9570, -2.8438, -3.7656,  1.3203, -0.3984,  3.6406,  0.3418,  2.3750,  2.1875, -2.2656,  1.8516, -1.5000,  2.5938,  2.7188, -1.3516, -1.0234, -2.2500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -25.3750,  -33.5000,  -32.5000,  -28.5000,  -32.0000,  -31.3750,   40.7500,  -27.5000,  -28.6250,  -30.0000,  -26.5000,   25.2500,  -29.0000,  -22.2500],
        [   0.0000,  -33.2500,  -41.5000,  -40.2500,  -35.5000,  -39.7500,  -39.0000,   51.5000,  -36.0000,  -36.7500,  -38.2500,  -31.5000,   33.0000,  -37.2500,  -26.3750],
        [   0.0000,  -34.7500,  -42.7500,  -41.5000,  -36.7500,  -41.0000,  -40.2500,   53.0000,  -37.5000,  -38.2500,  -39.5000,  -32.5000,   33.7500,  -38.5000,  -27.1250],
        [   0.0000,  -29.8750,  -36.0000,  -35.0000,  -31.5000,  -34.5000,  -34.0000,   42.5000,  -32.0000,  -32.7500,  -33.7500,  -27.5000,   26.3750,  -33.0000,  -23.5000],
        [   0.0000,  -35.7500,  -43.7500,  -42.2500,  -37.7500,  -41.7500,  -41.2500,   55.0000,  -38.7500,  -39.5000,  -40.7500,  -32.5000,   35.5000,  -39.7500,  -27.2500],
        [   0.0000,  -35.5000,  -43.5000,  -42.0000,  -37.5000,  -41.5000,  -41.0000,   55.0000,  -38.5000,  -39.2500,  -40.5000,  -32.2500,   35.7500,  -39.5000,  -27.0000],
        [   0.0000,   74.0000,   81.0000,   77.5000,   70.0000,   78.0000,   78.0000, -145.0000,   82.5000,   81.0000,   82.5000,   43.5000, -109.0000,   82.5000,   32.7500],
        [   0.0000,  -32.2500,  -39.7500,  -38.5000,  -34.7500,  -38.2500,  -37.5000,   52.0000,  -35.2500,  -35.7500,  -37.0000,  -28.8750,   33.7500,  -36.2500,  -24.5000],
        [   0.0000,  -31.7500,  -39.2500,  -38.0000,  -34.0000,  -37.5000,  -37.0000,   49.7500,  -34.2500,  -35.0000,  -36.5000,  -29.2500,   31.8750,  -35.5000,  -24.7500],
        [   0.0000,  -34.5000,  -42.2500,  -40.7500,  -36.5000,  -40.5000,  -40.0000,   54.5000,  -37.5000,  -38.2500,  -39.5000,  -31.0000,   35.5000,  -38.7500,  -26.0000],
        [   0.0000,  -12.2500,  -20.6250,  -20.3750,  -16.6250,  -19.6250,  -18.8750,   14.1875,  -13.1250,  -14.6250,  -16.1250,  -21.5000,    4.8438,  -14.6875,  -18.5000],
        [   0.0000,   64.5000,   69.0000,   65.5000,   59.5000,   66.5000,   66.5000, -128.0000,   72.0000,   70.5000,   71.0000,   34.2500,  -98.5000,   71.5000,   25.1250],
        [   0.0000,  -34.2500,  -41.5000,  -40.2500,  -36.2500,  -40.0000,  -39.2500,   54.0000,  -37.2500,  -37.7500,  -39.0000,  -30.3750,   35.0000,  -38.2500,  -25.6250],
        [   0.0000,  -11.0000,  -16.7500,  -16.6250,  -14.1875,  -16.0000,  -15.4375,    6.8125,  -11.1250,  -12.3750,  -13.3750,  -18.3750,   -0.7031,  -12.2500,  -16.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.5853],
        [    0.5924],
        [    0.6021],
        [    0.6667],
        [    0.6156],
        [    0.5924],
        [    0.0833],
        [    0.0833],
        [    0.0833],
        [    0.0833],
        [    0.0003],
        [    0.0843],
        [    0.0833],
        [    0.0834]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0117, -0.0096, -0.0461,  ...,  0.0166,  0.0190, -0.0390],
        [-0.0056,  0.0170,  0.0384,  ...,  0.0090, -0.0152,  0.0391],
        [ 0.0196, -0.0347, -0.0529,  ..., -0.0001,  0.0164, -0.0351],
        ...,
        [-0.0116, -0.0023,  0.0004,  ..., -0.0193,  0.0360,  0.0289],
        [-0.0027,  0.0176, -0.0405,  ...,  0.0028,  0.0179,  0.0041],
        [-0.0119, -0.0147, -0.0026,  ...,  0.0195, -0.0640,  0.0096]], device='cuda:0', requires_grad=True)
K: tensor([-2.5156,  3.2500, -3.1250,  2.5312, -2.5938,  1.9375,  3.6406,  3.0781,  1.1328, -4.1250,  2.0156, -1.5547, -2.0781,  1.3750, -0.2246, -2.4375,  6.3750,  1.5391, -1.0625, -3.8438, -2.0938,  2.6250,  1.1406, -2.7031, -1.7266,  3.3906, -2.3281, -3.2031,  3.3438, -4.6875,  2.0469, -1.4297,
         0.8789, -2.5156,  3.1406, -4.5312,  3.6250,  3.5781,  0.7891,  4.0625,  2.6719, -0.3066, -4.6875,  2.2969,  2.6719,  1.1484,  2.5312,  0.9883,  3.1094, -2.0156,  1.4297,  3.3125, -4.2500, -0.3281,  0.2451, -2.1719, -2.6719,  4.0312,  4.1250,  1.3047, -2.3750, -2.6562, -2.5000,  3.7656],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0038, -0.0048,  0.0476,  ..., -0.0145, -0.0168,  0.0289],
        [ 0.0366,  0.0240, -0.1067,  ..., -0.0204,  0.0063,  0.0073],
        [ 0.0276, -0.0009,  0.0642,  ..., -0.0225, -0.0601, -0.0601],
        ...,
        [-0.0057,  0.0166,  0.0527,  ...,  0.0014, -0.0024, -0.0122],
        [-0.0388,  0.0181, -0.0274,  ..., -0.0019, -0.0180, -0.0010],
        [-0.0140,  0.0170, -0.0344,  ...,  0.0220,  0.0333, -0.0183]], device='cuda:0', requires_grad=True)
Q: tensor([-1.4297, -1.7578,  2.1562, -2.0312,  0.2021, -0.3066, -4.4062, -3.1875,  0.3496,  2.2344,  1.9766,  0.7734,  0.1133, -2.8281,  0.3633, -0.3477, -2.0312, -1.3750,  0.8008,  1.3906,  0.8867, -2.5938,  0.4023, -0.4883,  3.0469, -4.3125,  3.8906, -0.6797, -2.0781,  1.6016,  0.3535,  1.6016,
         2.3906,  1.0234, -1.8984,  4.6875,  0.3965, -1.0625, -0.1436, -4.3750, -0.0151, -1.9297,  1.1719, -2.3125, -3.7656, -1.7656, -1.2500, -0.2305, -4.0000, -0.8125, -1.4609, -2.2344,  3.8594, -1.1328,  1.0312,  2.3594,  0.1895, -0.3711, -2.5312,  2.1875,  2.2812,  0.5117,  1.5859, -2.3438],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -39.7500, -40.0000, -39.7500, -38.0000, -39.5000, -39.5000, -34.7500, -37.2500, -37.2500, -37.2500, -37.0000, -37.2500, -37.2500, -37.7500],
        [  0.0000, -39.7500, -40.0000, -39.7500, -38.0000, -39.5000, -39.5000, -34.5000, -37.2500, -37.5000, -37.2500, -37.2500, -37.2500, -37.5000, -37.7500],
        [  0.0000, -39.7500, -40.0000, -39.5000, -38.0000, -39.5000, -39.5000, -34.7500, -37.2500, -37.5000, -37.2500, -37.2500, -37.2500, -37.5000, -37.7500],
        [  0.0000, -38.0000, -38.0000, -37.7500, -36.2500, -37.5000, -37.7500, -32.7500, -35.7500, -35.7500, -35.7500, -35.7500, -35.5000, -35.7500, -36.2500],
        [  0.0000, -40.0000, -40.0000, -39.7500, -38.0000, -39.5000, -39.5000, -34.7500, -37.5000, -37.5000, -37.5000, -37.2500, -37.2500, -37.5000, -38.0000],
        [  0.0000, -40.0000, -40.2500, -39.7500, -38.2500, -39.5000, -39.7500, -34.7500, -37.5000, -37.5000, -37.5000, -37.5000, -37.2500, -37.5000, -38.0000],
        [  0.0000, -44.5000, -44.7500, -44.2500, -42.2500, -44.0000, -44.2500, -40.2500, -42.2500, -42.2500, -42.0000, -41.7500, -42.5000, -42.2500, -42.5000],
        [  0.0000, -35.0000, -35.2500, -35.0000, -33.7500, -34.7500, -35.0000, -29.5000, -32.5000, -32.7500, -32.5000, -32.5000, -32.2500, -32.7500, -33.0000],
        [  0.0000, -35.0000, -35.2500, -35.0000, -33.7500, -34.7500, -35.0000, -29.3750, -32.5000, -32.5000, -32.5000, -32.5000, -32.2500, -32.5000, -33.0000],
        [  0.0000, -35.0000, -35.2500, -34.7500, -33.5000, -34.5000, -34.7500, -29.2500, -32.5000, -32.5000, -32.2500, -32.2500, -32.0000, -32.5000, -32.7500],
        [  0.0000, -34.2500, -34.5000, -34.2500, -33.0000, -34.0000, -34.0000, -28.7500, -31.7500, -31.7500, -31.7500, -31.7500, -31.5000, -31.7500, -32.2500],
        [  0.0000, -42.2500, -42.5000, -42.0000, -40.5000, -41.7500, -42.0000, -36.7500, -40.5000, -40.5000, -40.5000, -40.2500, -40.0000, -40.5000, -40.7500],
        [  0.0000, -35.0000, -35.2500, -35.0000, -33.7500, -34.7500, -35.0000, -29.3750, -32.5000, -32.5000, -32.5000, -32.5000, -32.2500, -32.5000, -33.0000],
        [  0.0000, -35.2500, -35.5000, -35.2500, -34.0000, -35.0000, -35.2500, -29.7500, -32.7500, -32.7500, -32.7500, -32.7500, -32.5000, -32.7500, -33.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.5025],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.5833],
        [0.6667],
        [0.6667]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0117, -0.0096, -0.0461,  ...,  0.0166,  0.0190, -0.0390],
        [-0.0056,  0.0170,  0.0384,  ...,  0.0090, -0.0152,  0.0391],
        [ 0.0196, -0.0347, -0.0529,  ..., -0.0001,  0.0164, -0.0351],
        ...,
        [-0.0116, -0.0023,  0.0004,  ..., -0.0193,  0.0360,  0.0289],
        [-0.0027,  0.0176, -0.0405,  ...,  0.0028,  0.0179,  0.0041],
        [-0.0119, -0.0147, -0.0026,  ...,  0.0195, -0.0640,  0.0096]], device='cuda:0', requires_grad=True)
K: tensor([-1.8359,  3.2188, -3.4375,  2.7656, -2.1406,  1.5938,  3.5000,  3.5156,  1.1641, -4.0312,  2.0469, -1.7500, -2.0469,  2.2656,  0.0703, -2.1406,  5.7500,  1.3906, -0.7383, -3.8906, -2.0312,  2.7344,  0.9219, -2.5469, -2.1719,  3.3281, -2.4688, -2.6406,  3.2656, -4.3750,  2.1719, -1.7031,
         0.5312, -2.6406,  2.8281, -4.5625,  2.7031,  3.5312,  0.8633,  4.0938,  2.0781, -0.1514, -4.3438,  2.6250,  2.3906,  1.4141,  2.3594,  0.7656,  3.5469, -1.6328,  1.4609,  3.0938, -4.4062, -0.1455,  0.4668, -2.5000, -2.3750,  3.6094,  3.5938,  0.7109, -2.7969, -2.5312, -2.4844,  3.3594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0038, -0.0048,  0.0476,  ..., -0.0145, -0.0168,  0.0289],
        [ 0.0366,  0.0240, -0.1067,  ..., -0.0204,  0.0063,  0.0073],
        [ 0.0276, -0.0009,  0.0642,  ..., -0.0225, -0.0601, -0.0601],
        ...,
        [-0.0057,  0.0166,  0.0527,  ...,  0.0014, -0.0024, -0.0122],
        [-0.0388,  0.0181, -0.0274,  ..., -0.0019, -0.0180, -0.0010],
        [-0.0140,  0.0170, -0.0344,  ...,  0.0220,  0.0333, -0.0183]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7305, -1.5859,  1.7734, -1.8828,  0.9922, -0.3848, -4.7812, -2.6562,  0.5820,  2.4219,  2.0938,  0.7461,  0.2080, -2.2344,  0.3223, -0.1426, -3.1719, -1.7500,  1.2969,  1.2734,  0.7773, -3.0156, -0.0081, -0.5352,  2.9375, -4.6875,  4.0312,  0.0598, -2.2969,  2.1562, -0.2031,  1.3281,
         2.4375,  1.0156, -2.0625,  4.8750, -0.3711, -1.1016,  0.2949, -4.2500, -0.6680, -1.5859,  2.0781, -2.1875, -3.8594, -1.3438, -1.4219, -0.1226, -3.7188, -0.2236, -1.7109, -2.6719,  4.0312, -1.4844,  0.5547,  2.0156,  0.6289, -1.2422, -3.0312,  1.4453,  1.9062,  0.5352,  1.8750, -2.7969],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0117, -0.0096, -0.0461,  ...,  0.0166,  0.0190, -0.0390],
        [-0.0056,  0.0170,  0.0384,  ...,  0.0090, -0.0152,  0.0391],
        [ 0.0196, -0.0347, -0.0529,  ..., -0.0001,  0.0164, -0.0351],
        ...,
        [-0.0116, -0.0023,  0.0004,  ..., -0.0193,  0.0360,  0.0289],
        [-0.0027,  0.0176, -0.0405,  ...,  0.0028,  0.0179,  0.0041],
        [-0.0119, -0.0147, -0.0026,  ...,  0.0195, -0.0640,  0.0096]], device='cuda:0', requires_grad=True)
K: tensor([-1.8359,  3.2188, -3.4375,  2.7500, -2.1406,  1.5938,  3.5000,  3.5156,  1.1641, -4.0312,  2.0469, -1.7500, -2.0469,  2.2656,  0.0713, -2.1250,  5.7500,  1.3984, -0.7344, -3.8906, -2.0312,  2.7344,  0.9219, -2.5469, -2.1562,  3.3281, -2.4688, -2.6406,  3.2656, -4.3750,  2.1719, -1.7109,
         0.5312, -2.6406,  2.8281, -4.5625,  2.7031,  3.5312,  0.8633,  4.0938,  2.0938, -0.1523, -4.3438,  2.6250,  2.3906,  1.4141,  2.3594,  0.7656,  3.5469, -1.6328,  1.4609,  3.0938, -4.4062, -0.1475,  0.4648, -2.5000, -2.3750,  3.6094,  3.5938,  0.7148, -2.7969, -2.5312, -2.4844,  3.3594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0038, -0.0048,  0.0476,  ..., -0.0145, -0.0168,  0.0289],
        [ 0.0366,  0.0240, -0.1067,  ..., -0.0204,  0.0063,  0.0073],
        [ 0.0276, -0.0009,  0.0642,  ..., -0.0225, -0.0601, -0.0601],
        ...,
        [-0.0057,  0.0166,  0.0527,  ...,  0.0014, -0.0024, -0.0122],
        [-0.0388,  0.0181, -0.0274,  ..., -0.0019, -0.0180, -0.0010],
        [-0.0140,  0.0170, -0.0344,  ...,  0.0220,  0.0333, -0.0183]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7344, -1.5859,  1.7734, -1.8828,  0.9922, -0.3828, -4.7812, -2.6562,  0.5820,  2.4219,  2.0938,  0.7461,  0.2061, -2.2344,  0.3203, -0.1426, -3.1719, -1.7500,  1.2969,  1.2734,  0.7773, -3.0156, -0.0059, -0.5391,  2.9375, -4.6875,  4.0312,  0.0579, -2.2969,  2.1562, -0.2031,  1.3281,
         2.4375,  1.0234, -2.0625,  4.8750, -0.3691, -1.1016,  0.2969, -4.2500, -0.6680, -1.5859,  2.0781, -2.1875, -3.8594, -1.3359, -1.4219, -0.1201, -3.7031, -0.2246, -1.7109, -2.6719,  4.0312, -1.4844,  0.5547,  2.0156,  0.6289, -1.2422, -3.0312,  1.4453,  1.9062,  0.5352,  1.8672, -2.7969],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500],
        [  0.0000, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500, -38.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6667]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( of:0.0344 of:0.0344 of:0.0344 of:0.0344 of:0.0344 of:0.0344 of:0.0344 of:0.0344)
 of
------
		( of:0.0344 of:0.0344 of:0.0344 of:0.0344 of:0.0344 of:0.0344 of:0.0344 of:0.0344)
 of of of of of of of of of of of of of of of
@ 1050 train 8.1820 , allloss: 338.8937, dt: 1502.77ms, fracRes: 0.5411, norm(attn): 2.3438, norm(output): 6.4375, norm(x): 3.5223, norm(y): 0.9696, norm:187.8677, tok/sec: 87220.20, flops:33.98, batch-reuse:1
@ 1051 train 8.1016 , allloss: 250.0463, dt: 1111.42ms, fracRes: 0.5232, norm(attn): 2.2969, norm(output): 5.5312, norm(x): 3.1108, norm(y): 0.9701, norm:248.4630, tok/sec: 117931.67, flops:45.95, batch-reuse:1
@ 1052 train 8.0144 , allloss: 203.5158, dt: 1113.94ms, fracRes: 0.4383, norm(attn): 2.4062, norm(output): 5.9688, norm(x): 3.4801, norm(y): 0.9707, norm:772.6394, tok/sec: 117665.73, flops:45.84, batch-reuse:1
@ 1053 train 8.0376 , allloss: 181.9993, dt: 1125.88ms, fracRes: 0.3986, norm(attn): 2.5000, norm(output): 6.5000, norm(x): 3.8793, norm(y): 0.9713, norm:261.6496, tok/sec: 116417.73, flops:45.36, batch-reuse:1
@ 1054 train 7.9888 , allloss: 186.3583, dt: 1106.62ms, fracRes: 0.3846, norm(attn): 2.5469, norm(output): 7.5312, norm(x): 4.4648, norm(y): 0.9721, norm:861.3854, tok/sec: 118444.05, flops:46.15, batch-reuse:1
@ 1055 train 7.9805 , allloss: 186.5413, dt: 1119.00ms, fracRes: 0.3310, norm(attn): 2.7344, norm(output): 8.9375, norm(x): 5.5043, norm(y): 0.9728, norm:196.3662, tok/sec: 117132.68, flops:45.63, batch-reuse:1
@ 1056 train 7.9564 , allloss: 186.7042, dt: 1129.86ms, fracRes: 0.3256, norm(attn): 2.8281, norm(output): 10.3750, norm(x): 6.3369, norm(y): 0.9737, norm:202.3220, tok/sec: 116006.79, flops:45.20, batch-reuse:1
@ 1057 train 8.0360 , allloss: 229.6659, dt: 1128.84ms, fracRes: 0.3143, norm(attn): 2.8281, norm(output): 10.9375, norm(x): 6.5561, norm(y): 0.9746, norm:466.4186, tok/sec: 116112.04, flops:45.24, batch-reuse:1
@ 1058 train 7.9958 , allloss: 286.5332, dt: 1122.95ms, fracRes: 0.3088, norm(attn): 2.3438, norm(output): 8.6875, norm(x): 4.9264, norm(y): 0.9757, norm:465.6733, tok/sec: 116720.78, flops:45.47, batch-reuse:1
@ 1059 train 7.9807 , allloss: 408.1334, dt: 1116.81ms, fracRes: 0.2285, norm(attn): 1.9766, norm(output): 5.1875, norm(x): 3.1093, norm(y): 0.9771, norm:15182.0283, tok/sec: 117363.04, flops:45.72, batch-reuse:1
@ 1060 train 8.9533 , allloss: 373.6463, dt: 1115.55ms, fracRes: 0.2846, norm(attn): 1.5938, norm(output): 3.2656, norm(x): 2.3906, norm(y): 0.9787, norm:65040.3828, tok/sec: 117494.90, flops:45.78, batch-reuse:1
@ 1061 train 9.4556 , allloss: 351.5096, dt: 1108.63ms, fracRes: 0.3031, norm(attn): 1.6328, norm(output): 4.0938, norm(x): 2.8637, norm(y): 0.9796, norm:15313.3906, tok/sec: 118228.89, flops:46.06, batch-reuse:1
@ 1062 train 9.4409 , allloss: 371.2131, dt: 1108.90ms, fracRes: 0.2920, norm(attn): 1.7422, norm(output): 4.6250, norm(x): 3.2107, norm(y): 0.9796, norm:373.0927, tok/sec: 118200.14, flops:46.05, batch-reuse:1
@ 1063 train 8.1853 , allloss: 480.9709, dt: 1113.19ms, fracRes: 0.2253, norm(attn): 1.7812, norm(output): 3.9688, norm(x): 2.7050, norm(y): 0.9765, norm:51675.4531, tok/sec: 117744.43, flops:45.87, batch-reuse:1
@ 1064 train 8.2080 , allloss: 453.7376, dt: 1123.97ms, fracRes: 0.1726, norm(attn): 2.0156, norm(output): 3.0781, norm(x): 2.2952, norm(y): 0.9774, norm:427875.4688, tok/sec: 116614.86, flops:45.43, batch-reuse:1
@ 1065 train 8.2743 , allloss: 466.6461, dt: 1107.85ms, fracRes: 0.1521, norm(attn): 2.1719, norm(output): 2.9375, norm(x): 2.2815, norm(y): 0.9772, norm:149019.8438, tok/sec: 118312.11, flops:46.09, batch-reuse:1
@ 1066 train 8.3006 , allloss: 521.3022, dt: 1126.65ms, fracRes: 0.1508, norm(attn): 2.1250, norm(output): 3.2031, norm(x): 2.4769, norm(y): 0.9761, norm:94930.6875, tok/sec: 116338.18, flops:45.33, batch-reuse:1
@ 1067 train 8.3817 , allloss: 508.0667, dt: 1114.38ms, fracRes: 0.1966, norm(attn): 1.9062, norm(output): 3.5156, norm(x): 2.6189, norm(y): 0.9746, norm:804077.0000, tok/sec: 117619.05, flops:45.82, batch-reuse:1
@ 1068 train 8.2749 , allloss: 565.2333, dt: 1119.57ms, fracRes: 0.2430, norm(attn): 1.6484, norm(output): 3.6719, norm(x): 2.7718, norm(y): 0.9737, norm:855818.3125, tok/sec: 117073.57, flops:45.61, batch-reuse:1
@ 1069 train 8.1525 , allloss: 652.6369, dt: 1120.05ms, fracRes: 0.3158, norm(attn): 1.3984, norm(output): 4.5312, norm(x): 3.3841, norm(y): 0.9718, norm:2389.4822, tok/sec: 117023.33, flops:45.59, batch-reuse:1
@ 1070 train 8.8203 , allloss: 661.9860, dt: 1117.24ms, fracRes: 0.3373, norm(attn): 1.4609, norm(output): 6.0625, norm(x): 4.3345, norm(y): 0.9663, norm:698.0748, tok/sec: 117317.86, flops:45.71, batch-reuse:1
@ 1071 train 11.6491 , allloss: 620.6838, dt: 1121.31ms, fracRes: 0.3116, norm(attn): 2.1406, norm(output): 10.1250, norm(x): 6.7467, norm(y): 0.9642, norm:576.2645, tok/sec: 116891.73, flops:45.54, batch-reuse:1
@ 1072 train 11.8982 , allloss: 664.9393, dt: 1130.24ms, fracRes: 0.2704, norm(attn): 2.3125, norm(output): 10.4375, norm(x): 7.3099, norm(y): 0.9655, norm:1227.0817, tok/sec: 115968.17, flops:45.18, batch-reuse:1
@ 1073 train 12.0404 , allloss: 527.0823, dt: 1141.65ms, fracRes: 0.2514, norm(attn): 2.2656, norm(output): 8.4375, norm(x): 6.0179, norm(y): 0.9678, norm:1177.0029, tok/sec: 114808.96, flops:44.73, batch-reuse:1
@ 1074 train 11.4445 , allloss: 258.1867, dt: 1117.75ms, fracRes: 0.3940, norm(attn): 2.0469, norm(output): 4.6250, norm(x): 2.9007, norm(y): 0.9743, norm:745.3455, tok/sec: 117264.55, flops:45.69, batch-reuse:1
@ 1075 train 8.7406 , allloss: 187.6574, dt: 1140.22ms, fracRes: 0.5636, norm(attn): 1.3750, norm(output): 1.9609, norm(x): 1.4411, norm(y): 0.9811, norm:1089.7501, tok/sec: 114953.41, flops:44.79, batch-reuse:1
@ 1076 train 8.9116 , allloss: 163.8571, dt: 1139.72ms, fracRes: 0.5846, norm(attn): 1.3594, norm(output): 1.7969, norm(x): 1.3624, norm(y): 0.9816, norm:2891.0593, tok/sec: 115003.47, flops:44.81, batch-reuse:1
@ 1077 train 8.8199 , allloss: 145.3277, dt: 1131.54ms, fracRes: 0.5979, norm(attn): 1.3125, norm(output): 1.7734, norm(x): 1.3468, norm(y): 0.9819, norm:134.3917, tok/sec: 115834.86, flops:45.13, batch-reuse:1
@ 1078 train 8.8169 , allloss: 133.6927, dt: 1122.31ms, fracRes: 0.6260, norm(attn): 1.1875, norm(output): 1.9375, norm(x): 1.3966, norm(y): 0.9821, norm:117.2569, tok/sec: 116787.90, flops:45.50, batch-reuse:1
@ 1079 train 8.4593 , allloss: 132.7873, dt: 1137.67ms, fracRes: 0.6480, norm(attn): 1.1406, norm(output): 2.5781, norm(x): 1.6120, norm(y): 0.9818, norm:179.8843, tok/sec: 115210.91, flops:44.89, batch-reuse:1
@ 1080 train 8.5701 , allloss: 128.6752, dt: 1137.38ms, fracRes: 0.6618, norm(attn): 1.1328, norm(output): 3.1562, norm(x): 1.7156, norm(y): 0.9817, norm:226.4084, tok/sec: 115240.52, flops:44.90, batch-reuse:1
@ 1081 train 8.5392 , allloss: 130.6792, dt: 1123.95ms, fracRes: 0.6654, norm(attn): 1.2188, norm(output): 4.2500, norm(x): 2.0212, norm(y): 0.9816, norm:237.9181, tok/sec: 116617.04, flops:45.43, batch-reuse:1
@ 1082 train 8.5868 , allloss: 159.0096, dt: 1106.48ms, fracRes: 0.6645, norm(attn): 1.3828, norm(output): 5.7500, norm(x): 2.4923, norm(y): 0.9815, norm:400.7672, tok/sec: 118458.06, flops:46.15, batch-reuse:1
@ 1083 train 8.3748 , allloss: 177.9634, dt: 1113.27ms, fracRes: 0.6610, norm(attn): 1.5859, norm(output): 7.8438, norm(x): 3.0831, norm(y): 0.9815, norm:423.3173, tok/sec: 117735.78, flops:45.87, batch-reuse:1
@ 1084 train 8.3362 , allloss: 202.8441, dt: 1126.92ms, fracRes: 0.6049, norm(attn): 1.9922, norm(output): 10.7500, norm(x): 4.4345, norm(y): 0.9813, norm:612.1428, tok/sec: 116309.50, flops:45.31, batch-reuse:1
@ 1085 train 8.6114 , allloss: 287.4295, dt: 1118.86ms, fracRes: 0.5888, norm(attn): 2.2812, norm(output): 14.6250, norm(x): 5.9966, norm(y): 0.9815, norm:640.7659, tok/sec: 117148.28, flops:45.64, batch-reuse:1
@ 1086 train 8.2624 , allloss: 324.6950, dt: 1124.23ms, fracRes: 0.5261, norm(attn): 2.7500, norm(output): 20.0000, norm(x): 9.0600, norm(y): 0.9818, norm:787.9755, tok/sec: 116588.15, flops:45.42, batch-reuse:1
@ 1087 train 8.1634 , allloss: 440.5008, dt: 1130.53ms, fracRes: 0.5198, norm(attn): 3.2500, norm(output): 27.3750, norm(x): 12.1046, norm(y): 0.9823, norm:451.6753, tok/sec: 115938.65, flops:45.17, batch-reuse:1
@ 1088 train 8.2164 , allloss: 542.7330, dt: 1123.48ms, fracRes: 0.5181, norm(attn): 3.7500, norm(output): 36.0000, norm(x): 15.8692, norm(y): 0.9828, norm:998.8498, tok/sec: 116666.46, flops:45.45, batch-reuse:1
@ 1089 train 8.1388 , allloss: 607.1180, dt: 1137.47ms, fracRes: 0.4718, norm(attn): 4.3125, norm(output): 46.7500, norm(x): 22.1909, norm(y): 0.9832, norm:2768.6006, tok/sec: 115231.48, flops:44.89, batch-reuse:1
@ 1090 train 8.0957 , allloss: 651.0032, dt: 1138.15ms, fracRes: 0.4511, norm(attn): 4.9375, norm(output): 59.7500, norm(x): 28.9221, norm(y): 0.9837, norm:758.8555, tok/sec: 115161.99, flops:44.87, batch-reuse:1
@ 1091 train 8.0614 , allloss: 709.6972, dt: 1130.12ms, fracRes: 0.4513, norm(attn): 5.5938, norm(output): 74.5000, norm(x): 36.2997, norm(y): 0.9841, norm:714.2568, tok/sec: 115980.26, flops:45.19, batch-reuse:1
@ 1092 train 8.2296 , allloss: 872.8308, dt: 1122.92ms, fracRes: 0.4503, norm(attn): 6.4688, norm(output): 95.0000, norm(x): 45.2680, norm(y): 0.9845, norm:714.0391, tok/sec: 116724.18, flops:45.48, batch-reuse:1
@ 1093 train 7.9824 , allloss: 880.8004, dt: 1123.91ms, fracRes: 0.4510, norm(attn): 7.0312, norm(output): 118.0000, norm(x): 55.6768, norm(y): 0.9849, norm:732.5681, tok/sec: 116621.89, flops:45.44, batch-reuse:1
@ 1094 train 8.0297 , allloss: 997.5902, dt: 1145.19ms, fracRes: 0.4514, norm(attn): 7.8750, norm(output): 136.0000, norm(x): 65.3633, norm(y): 0.9852, norm:1170.5372, tok/sec: 114454.37, flops:44.59, batch-reuse:1
@ 1095 train 7.9955 , allloss: 1119.7297, dt: 1117.67ms, fracRes: 0.4516, norm(attn): 8.2500, norm(output): 149.0000, norm(x): 70.9978, norm(y): 0.9851, norm:1977.2306, tok/sec: 117272.38, flops:45.69, batch-reuse:1
@ 1096 train 8.0210 , allloss: 1199.8295, dt: 1129.97ms, fracRes: 0.4513, norm(attn): 8.2500, norm(output): 151.0000, norm(x): 72.2289, norm(y): 0.9849, norm:2277.6743, tok/sec: 115995.55, flops:45.19, batch-reuse:1
@ 1097 train 7.9904 , allloss: 1268.0385, dt: 1118.22ms, fracRes: 0.4511, norm(attn): 8.0625, norm(output): 146.0000, norm(x): 69.5801, norm(y): 0.9845, norm:2669.2864, tok/sec: 117214.85, flops:45.67, batch-reuse:1
@ 1098 train 7.9511 , allloss: 1234.6111, dt: 1122.45ms, fracRes: 0.4527, norm(attn): 7.9062, norm(output): 137.0000, norm(x): 64.4472, norm(y): 0.9840, norm:3318.1877, tok/sec: 116772.70, flops:45.49, batch-reuse:1
@ 1099 train 8.0372 , allloss: 1212.2310, dt: 1113.11ms, fracRes: 0.4544, norm(attn): 7.3750, norm(output): 120.5000, norm(x): 56.0124, norm(y): 0.9833, norm:3460.9226, tok/sec: 117752.65, flops:45.88, batch-reuse:1
@ 1100 train 7.9992 , allloss: 1122.7747, dt: 1122.96ms, fracRes: 0.4573, norm(attn): 6.7812, norm(output): 103.0000, norm(x): 47.6330, norm(y): 0.9826, norm:3614.7483, tok/sec: 116720.21, flops:45.47, batch-reuse:1
@ 1101 train 8.0415 , allloss: 1024.4169, dt: 1135.64ms, fracRes: 0.5071, norm(attn): 5.0625, norm(output): 63.5000, norm(x): 27.0405, norm(y): 0.9817, norm:5858.5029, tok/sec: 115416.48, flops:44.97, batch-reuse:1
@ 1102 train 7.9901 , allloss: 841.2482, dt: 1128.23ms, fracRes: 0.5302, norm(attn): 4.2500, norm(output): 41.7500, norm(x): 17.3581, norm(y): 0.9810, norm:2580.4351, tok/sec: 116174.96, flops:45.26, batch-reuse:1
@ 1103 train 8.0075 , allloss: 685.1649, dt: 1118.54ms, fracRes: 0.5810, norm(attn): 3.1875, norm(output): 17.7500, norm(x): 7.5577, norm(y): 0.9811, norm:819.3065, tok/sec: 117181.40, flops:45.65, batch-reuse:1
@ 1104 train 8.2351 , allloss: 435.3620, dt: 1130.56ms, fracRes: 0.5832, norm(attn): 3.2656, norm(output): 14.8125, norm(x): 6.1753, norm(y): 0.9811, norm:261.3255, tok/sec: 115935.35, flops:45.17, batch-reuse:1
@ 1105 train 7.9955 , allloss: 370.2831, dt: 1118.11ms, fracRes: 0.5829, norm(attn): 3.2500, norm(output): 12.1875, norm(x): 5.1888, norm(y): 0.9811, norm:327.5232, tok/sec: 117225.87, flops:45.67, batch-reuse:1
@ 1106 train 7.8943 , allloss: 307.1437, dt: 1123.92ms, fracRes: 0.5793, norm(attn): 3.0625, norm(output): 9.3750, norm(x): 4.1243, norm(y): 0.9815, norm:225.3742, tok/sec: 116620.70, flops:45.44, batch-reuse:1
@ 1107 train 8.1269 , allloss: 288.8855, dt: 1130.40ms, fracRes: 0.5530, norm(attn): 2.7500, norm(output): 6.8438, norm(x): 3.3864, norm(y): 0.9813, norm:3909.3518, tok/sec: 115951.69, flops:45.17, batch-reuse:1
@ 1108 train 8.0972 , allloss: 337.8817, dt: 1137.05ms, fracRes: 0.5219, norm(attn): 2.3594, norm(output): 7.0312, norm(x): 3.4205, norm(y): 0.9790, norm:2196.2834, tok/sec: 115273.57, flops:44.91, batch-reuse:1
@ 1109 train 8.1939 , allloss: 302.6145, dt: 1113.58ms, fracRes: 0.5332, norm(attn): 1.9609, norm(output): 5.0625, norm(x): 2.5869, norm(y): 0.9805, norm:791.0095, tok/sec: 117703.44, flops:45.86, batch-reuse:1
@ 1110 train 8.3889 , allloss: 264.1958, dt: 1109.66ms, fracRes: 0.5411, norm(attn): 1.6875, norm(output): 3.4688, norm(x): 2.0174, norm(y): 0.9825, norm:503.1030, tok/sec: 118119.38, flops:46.02, batch-reuse:1
@ 1111 train 8.9838 , allloss: 235.6212, dt: 1124.73ms, fracRes: 0.4979, norm(attn): 1.7188, norm(output): 2.3125, norm(x): 1.6781, norm(y): 0.9832, norm:3119.2678, tok/sec: 116536.62, flops:45.40, batch-reuse:1
@ 1112 train 9.1368 , allloss: 259.4352, dt: 1120.63ms, fracRes: 0.4557, norm(attn): 1.8281, norm(output): 2.3281, norm(x): 1.7051, norm(y): 0.9822, norm:9519.6621, tok/sec: 116962.33, flops:45.57, batch-reuse:1
@ 1113 train 9.0381 , allloss: 291.1500, dt: 1131.58ms, fracRes: 0.4304, norm(attn): 1.9922, norm(output): 2.4531, norm(x): 1.7678, norm(y): 0.9817, norm:19453.1211, tok/sec: 115831.37, flops:45.13, batch-reuse:1
@ 1114 train 8.8646 , allloss: 384.4848, dt: 1143.45ms, fracRes: 0.3898, norm(attn): 2.0781, norm(output): 2.6094, norm(x): 1.8940, norm(y): 0.9805, norm:2960189.2500, tok/sec: 114628.46, flops:44.66, batch-reuse:1
@ 1115 train 8.9181 , allloss: 360.8453, dt: 1112.42ms, fracRes: 0.4145, norm(attn): 2.2344, norm(output): 2.7969, norm(x): 1.9207, norm(y): 0.9808, norm:1448750.6250, tok/sec: 117826.04, flops:45.91, batch-reuse:1
@ 1116 train 8.7857 , allloss: 340.3726, dt: 1117.75ms, fracRes: 0.4486, norm(attn): 2.3594, norm(output): 3.0000, norm(x): 1.9693, norm(y): 0.9812, norm:134051.4375, tok/sec: 117264.40, flops:45.69, batch-reuse:1
@ 1117 train 8.7850 , allloss: 315.0854, dt: 1126.58ms, fracRes: 0.4941, norm(attn): 2.6406, norm(output): 3.3906, norm(x): 2.0451, norm(y): 0.9814, norm:376.7717, tok/sec: 116344.65, flops:45.33, batch-reuse:1
@ 1118 train 8.7213 , allloss: 289.4242, dt: 1120.61ms, fracRes: 0.5123, norm(attn): 3.4531, norm(output): 4.5938, norm(x): 2.3880, norm(y): 0.9808, norm:348.2523, tok/sec: 116964.62, flops:45.57, batch-reuse:1
@ 1119 train 8.4562 , allloss: 341.0525, dt: 1130.88ms, fracRes: 0.5455, norm(attn): 3.9375, norm(output): 5.5000, norm(x): 2.5174, norm(y): 0.9800, norm:661.2228, tok/sec: 115902.40, flops:45.16, batch-reuse:1
@ 1120 train 8.8699 , allloss: 322.6457, dt: 1112.77ms, fracRes: 0.4837, norm(attn): 3.9531, norm(output): 5.9062, norm(x): 2.8178, norm(y): 0.9796, norm:669.3645, tok/sec: 117789.16, flops:45.89, batch-reuse:1
@ 1121 train 9.2824 , allloss: 365.5756, dt: 1112.72ms, fracRes: 0.4009, norm(attn): 3.3438, norm(output): 5.0312, norm(x): 2.7134, norm(y): 0.9780, norm:118376.0312, tok/sec: 117793.98, flops:45.89, batch-reuse:1
@ 1122 train 10.6152 , allloss: 655.3351, dt: 1110.04ms, fracRes: 0.1391, norm(attn): 2.5625, norm(output): 3.4688, norm(x): 2.6841, norm(y): 0.9709, norm:1518286208.0000, tok/sec: 118078.91, flops:46.00, batch-reuse:1
@ 1123 train 11.2006 , allloss: 1007.4365, dt: 1156.26ms, fracRes: 0.0603, norm(attn): 2.5781, norm(output): 3.7031, norm(x): 3.1982, norm(y): 0.9656, norm:45763312.0000, tok/sec: 113358.42, flops:44.16, batch-reuse:1
@ 1124 train 12.1321 , allloss: 830.6451, dt: 1119.50ms, fracRes: 0.0825, norm(attn): 2.8125, norm(output): 4.0625, norm(x): 3.4528, norm(y): 0.9654, norm:7167792.5000, tok/sec: 117080.45, flops:45.61, batch-reuse:1
@ 1125 train 12.0199 , allloss: 475.3136, dt: 1138.16ms, fracRes: 0.1575, norm(attn): 2.7969, norm(output): 4.0938, norm(x): 3.2453, norm(y): 0.9699, norm:652760.4375, tok/sec: 115161.29, flops:44.87, batch-reuse:1
@ 1126 train 10.5067 , allloss: 269.4840, dt: 1132.68ms, fracRes: 0.2798, norm(attn): 2.7031, norm(output): 3.9062, norm(x): 2.7110, norm(y): 0.9753, norm:185788.8438, tok/sec: 115718.82, flops:45.08, batch-reuse:1
@ 1127 train 9.4000 , allloss: 152.4322, dt: 1135.63ms, fracRes: 0.4206, norm(attn): 2.5000, norm(output): 4.5312, norm(x): 2.5753, norm(y): 0.9798, norm:778.8995, tok/sec: 115417.62, flops:44.97, batch-reuse:1
@ 1128 train 9.3266 , allloss: 132.1952, dt: 1119.28ms, fracRes: 0.4432, norm(attn): 2.3438, norm(output): 4.2188, norm(x): 2.4204, norm(y): 0.9801, norm:339.2652, tok/sec: 117103.67, flops:45.62, batch-reuse:1
@ 1129 train 9.2235 , allloss: 136.6715, dt: 1120.35ms, fracRes: 0.4311, norm(attn): 2.1719, norm(output): 3.3125, norm(x): 2.1081, norm(y): 0.9791, norm:625.2930, tok/sec: 116992.50, flops:45.58, batch-reuse:1
@ 1130 train 9.2230 , allloss: 161.0828, dt: 1122.84ms, fracRes: 0.3870, norm(attn): 2.1719, norm(output): 2.8281, norm(x): 2.0524, norm(y): 0.9770, norm:14679.7324, tok/sec: 116732.11, flops:45.48, batch-reuse:1
@ 1131 train 9.3581 , allloss: 160.1635, dt: 1131.43ms, fracRes: 0.3853, norm(attn): 2.1719, norm(output): 2.5938, norm(x): 1.9592, norm(y): 0.9759, norm:21711.1914, tok/sec: 115846.21, flops:45.13, batch-reuse:1
@ 1132 train 9.3507 , allloss: 184.2377, dt: 1140.18ms, fracRes: 0.3621, norm(attn): 2.2031, norm(output): 2.7188, norm(x): 2.0578, norm(y): 0.9745, norm:2257.5520, tok/sec: 114957.08, flops:44.79, batch-reuse:1
@ 1133 train 8.8787 , allloss: 205.7340, dt: 1133.10ms, fracRes: 0.3912, norm(attn): 2.1094, norm(output): 2.7812, norm(x): 2.0670, norm(y): 0.9743, norm:12334.9355, tok/sec: 115675.46, flops:45.07, batch-reuse:1
@ 1134 train 8.6406 , allloss: 221.1798, dt: 1116.18ms, fracRes: 0.3795, norm(attn): 2.1406, norm(output): 3.0312, norm(x): 2.1890, norm(y): 0.9733, norm:1741.4525, tok/sec: 117429.37, flops:45.75, batch-reuse:1
@ 1135 train 8.6927 , allloss: 244.4627, dt: 1132.52ms, fracRes: 0.3804, norm(attn): 2.1875, norm(output): 3.3906, norm(x): 2.3916, norm(y): 0.9721, norm:1849.5614, tok/sec: 115734.95, flops:45.09, batch-reuse:1
@ 1136 train 8.7338 , allloss: 259.7551, dt: 1121.74ms, fracRes: 0.3694, norm(attn): 2.2188, norm(output): 3.7500, norm(x): 2.6105, norm(y): 0.9712, norm:681.4926, tok/sec: 116847.45, flops:45.52, batch-reuse:1
@ 1137 train 8.7158 , allloss: 229.1802, dt: 1143.97ms, fracRes: 0.3956, norm(attn): 2.2031, norm(output): 4.1562, norm(x): 2.7707, norm(y): 0.9712, norm:370.9245, tok/sec: 114576.41, flops:44.64, batch-reuse:1
@ 1138 train 9.0004 , allloss: 226.8598, dt: 1123.47ms, fracRes: 0.4014, norm(attn): 2.3594, norm(output): 4.9688, norm(x): 3.1564, norm(y): 0.9708, norm:450.1440, tok/sec: 116667.06, flops:45.45, batch-reuse:1
@ 1139 train 9.3060 , allloss: 227.7852, dt: 1135.70ms, fracRes: 0.4049, norm(attn): 2.6094, norm(output): 6.0625, norm(x): 3.7237, norm(y): 0.9704, norm:563.0199, tok/sec: 115410.86, flops:44.96, batch-reuse:1
@ 1140 train 9.8414 , allloss: 230.0334, dt: 1133.69ms, fracRes: 0.3075, norm(attn): 3.0156, norm(output): 7.7188, norm(x): 5.1279, norm(y): 0.9703, norm:2285.6521, tok/sec: 115615.29, flops:45.04, batch-reuse:1
@ 1141 train 10.0864 , allloss: 259.7458, dt: 1142.64ms, fracRes: 0.2942, norm(attn): 3.3125, norm(output): 9.9375, norm(x): 6.4545, norm(y): 0.9705, norm:521.3105, tok/sec: 114710.29, flops:44.69, batch-reuse:1
@ 1142 train 10.3519 , allloss: 276.7890, dt: 1133.58ms, fracRes: 0.2943, norm(attn): 3.4844, norm(output): 10.6250, norm(x): 6.9736, norm(y): 0.9706, norm:515.5360, tok/sec: 115626.82, flops:45.05, batch-reuse:1
@ 1143 train 10.5187 , allloss: 262.7727, dt: 1111.79ms, fracRes: 0.2946, norm(attn): 3.3438, norm(output): 10.4375, norm(x): 6.8807, norm(y): 0.9706, norm:522.1054, tok/sec: 117892.60, flops:45.93, batch-reuse:1
@ 1144 train 10.5466 , allloss: 235.6430, dt: 1141.41ms, fracRes: 0.2957, norm(attn): 3.2188, norm(output): 9.8750, norm(x): 6.3704, norm(y): 0.9706, norm:486.3240, tok/sec: 114833.18, flops:44.74, batch-reuse:1
@ 1145 train 10.3207 , allloss: 245.9417, dt: 1127.18ms, fracRes: 0.3560, norm(attn): 2.6250, norm(output): 7.0000, norm(x): 4.2765, norm(y): 0.9705, norm:493.3056, tok/sec: 116283.25, flops:45.30, batch-reuse:1
@ 1146 train 10.1846 , allloss: 183.4556, dt: 1119.87ms, fracRes: 0.3565, norm(attn): 2.4062, norm(output): 5.5312, norm(x): 3.4463, norm(y): 0.9704, norm:443.5851, tok/sec: 117042.24, flops:45.60, batch-reuse:1
@ 1147 train 10.0100 , allloss: 154.5071, dt: 1127.45ms, fracRes: 0.3444, norm(attn): 2.4062, norm(output): 5.0312, norm(x): 3.1932, norm(y): 0.9701, norm:390.1486, tok/sec: 116255.49, flops:45.29, batch-reuse:1
@ 1148 train 9.7782 , allloss: 151.8680, dt: 1146.90ms, fracRes: 0.3418, norm(attn): 2.4688, norm(output): 4.7812, norm(x): 2.9704, norm(y): 0.9698, norm:898.7610, tok/sec: 114283.87, flops:44.52, batch-reuse:1
@ 1149 train 9.0158 , allloss: 122.4387, dt: 1132.53ms, fracRes: 0.3510, norm(attn): 2.7031, norm(output): 3.0469, norm(x): 1.9736, norm(y): 0.9695, norm:868.1833, tok/sec: 115733.34, flops:45.09, batch-reuse:1
@ 1150 train 8.7570 , allloss: 120.0810, dt: 1132.85ms, fracRes: 0.3616, norm(attn): 3.0312, norm(output): 1.9453, norm(x): 1.3862, norm(y): 0.9685, norm:405.7555, tok/sec: 115701.09, flops:45.08, batch-reuse:1
@ 1151 train 12.6228 , allloss: 183.3475, dt: 1133.72ms, fracRes: 0.3669, norm(attn): 3.0781, norm(output): 1.6094, norm(x): 1.2168, norm(y): 0.9760, norm:3885.9871, tok/sec: 115612.79, flops:45.04, batch-reuse:1
@ 1152 train 12.9940 , allloss: 146.0745, dt: 1134.89ms, fracRes: 0.4070, norm(attn): 3.1250, norm(output): 1.5078, norm(x): 1.1570, norm(y): 0.9790, norm:383.3035, tok/sec: 115493.39, flops:45.00, batch-reuse:1
@ 1153 train 11.8912 , allloss: 140.3775, dt: 1128.17ms, fracRes: 0.3842, norm(attn): 3.3906, norm(output): 1.4922, norm(x): 1.1596, norm(y): 0.9793, norm:2937.3967, tok/sec: 116180.60, flops:45.26, batch-reuse:1
@ 1154 train 10.8414 , allloss: 127.4307, dt: 1129.94ms, fracRes: 0.3779, norm(attn): 3.5469, norm(output): 1.3828, norm(x): 1.1197, norm(y): 0.9803, norm:1050.6899, tok/sec: 115999.54, flops:45.19, batch-reuse:1
@ 1155 train 10.4399 , allloss: 125.1227, dt: 1120.05ms, fracRes: 0.3974, norm(attn): 3.5156, norm(output): 1.4141, norm(x): 1.1391, norm(y): 0.9798, norm:2404.4761, tok/sec: 117022.88, flops:45.59, batch-reuse:1
@ 1156 train 10.2210 , allloss: 189.5808, dt: 1130.20ms, fracRes: 0.3257, norm(attn): 3.4844, norm(output): 1.5547, norm(x): 1.2480, norm(y): 0.9772, norm:9894.2812, tok/sec: 115971.89, flops:45.18, batch-reuse:1
@ 1157 train 10.5324 , allloss: 178.2647, dt: 1138.93ms, fracRes: 0.3623, norm(attn): 3.4062, norm(output): 1.5156, norm(x): 1.1748, norm(y): 0.9759, norm:10902.6846, tok/sec: 115083.54, flops:44.84, batch-reuse:1
@ 1158 train 10.7886 , allloss: 217.0746, dt: 1175.96ms, fracRes: 0.3827, norm(attn): 3.1719, norm(output): 1.6406, norm(x): 1.2108, norm(y): 0.9740, norm:9829.3789, tok/sec: 111459.57, flops:43.42, batch-reuse:1
@ 1159 train 10.7745 , allloss: 222.9016, dt: 1116.50ms, fracRes: 0.3709, norm(attn): 3.2188, norm(output): 1.6641, norm(x): 1.2493, norm(y): 0.9727, norm:11503.4561, tok/sec: 117395.37, flops:45.74, batch-reuse:1
@ 1160 train 10.6028 , allloss: 206.8039, dt: 1123.16ms, fracRes: 0.3695, norm(attn): 3.2031, norm(output): 1.6016, norm(x): 1.2187, norm(y): 0.9717, norm:8776.4424, tok/sec: 116699.65, flops:45.47, batch-reuse:1
@ 1161 train 10.6551 , allloss: 319.7415, dt: 1140.85ms, fracRes: 0.3020, norm(attn): 3.2031, norm(output): 1.7031, norm(x): 1.3121, norm(y): 0.9693, norm:4619413.5000, tok/sec: 114889.48, flops:44.76, batch-reuse:1
@ 1162 train 10.8813 , allloss: 517.8082, dt: 1137.68ms, fracRes: 0.2138, norm(attn): 3.1562, norm(output): 1.9766, norm(x): 1.5789, norm(y): 0.9665, norm:679054.8750, tok/sec: 115210.21, flops:44.89, batch-reuse:1
@ 1163 train 11.3913 , allloss: 467.7960, dt: 1108.25ms, fracRes: 0.2413, norm(attn): 3.1719, norm(output): 2.0156, norm(x): 1.5760, norm(y): 0.9659, norm:357378.1875, tok/sec: 118269.20, flops:46.08, batch-reuse:1
@ 1164 train 11.3131 , allloss: 516.8883, dt: 1124.45ms, fracRes: 0.2437, norm(attn): 3.1562, norm(output): 2.2031, norm(x): 1.6512, norm(y): 0.9649, norm:281005.7188, tok/sec: 116565.36, flops:45.41, batch-reuse:1
@ 1165 train 11.0093 , allloss: 573.1301, dt: 1121.15ms, fracRes: 0.2675, norm(attn): 3.0312, norm(output): 2.4688, norm(x): 1.7744, norm(y): 0.9638, norm:1250335.1250, tok/sec: 116908.36, flops:45.55, batch-reuse:1
@ 1166 train 10.7969 , allloss: 603.9397, dt: 1122.23ms, fracRes: 0.2949, norm(attn): 3.0625, norm(output): 2.8125, norm(x): 1.8592, norm(y): 0.9636, norm:124956.9062, tok/sec: 116796.17, flops:45.50, batch-reuse:1
@ 1167 train 10.5756 , allloss: 691.2081, dt: 1133.70ms, fracRes: 0.2674, norm(attn): 3.1250, norm(output): 3.0625, norm(x): 2.0685, norm(y): 0.9621, norm:114486.5938, tok/sec: 115614.52, flops:45.04, batch-reuse:1
@ 1168 train 10.9355 , allloss: 616.9462, dt: 1110.71ms, fracRes: 0.2614, norm(attn): 3.2188, norm(output): 3.0000, norm(x): 2.0291, norm(y): 0.9616, norm:703300.1250, tok/sec: 118007.23, flops:45.98, batch-reuse:1
@ 1169 train 11.1948 , allloss: 589.0251, dt: 1113.63ms, fracRes: 0.2661, norm(attn): 3.2188, norm(output): 3.0000, norm(x): 2.0667, norm(y): 0.9610, norm:131714.9844, tok/sec: 117698.25, flops:45.86, batch-reuse:1
@ 1170 train 11.4195 , allloss: 497.6256, dt: 1124.35ms, fracRes: 0.3038, norm(attn): 3.1719, norm(output): 2.9375, norm(x): 1.9495, norm(y): 0.9610, norm:9848.0264, tok/sec: 116575.79, flops:45.42, batch-reuse:1
@ 1171 train 10.9200 , allloss: 486.1226, dt: 1126.95ms, fracRes: 0.3257, norm(attn): 3.2031, norm(output): 3.0625, norm(x): 1.9737, norm(y): 0.9606, norm:20026.2578, tok/sec: 116306.40, flops:45.31, batch-reuse:1
@ 1172 train 11.3182 , allloss: 385.1270, dt: 1130.44ms, fracRes: 0.3450, norm(attn): 3.3125, norm(output): 2.9062, norm(x): 1.9223, norm(y): 0.9608, norm:22910.6543, tok/sec: 115947.41, flops:45.17, batch-reuse:1
@ 1173 train 10.7999 , allloss: 386.4354, dt: 1134.95ms, fracRes: 0.3812, norm(attn): 3.1719, norm(output): 3.0000, norm(x): 1.8637, norm(y): 0.9611, norm:4439.2729, tok/sec: 115486.99, flops:44.99, batch-reuse:1
@ 1174 train 10.5596 , allloss: 254.3817, dt: 1119.11ms, fracRes: 0.3798, norm(attn): 3.2500, norm(output): 2.2656, norm(x): 1.5528, norm(y): 0.9644, norm:2311.8132, tok/sec: 117121.70, flops:45.63, batch-reuse:1
@ 1175 train 10.2447 , allloss: 175.7870, dt: 1120.78ms, fracRes: 0.3684, norm(attn): 3.4375, norm(output): 1.8750, norm(x): 1.4226, norm(y): 0.9672, norm:554.5713, tok/sec: 116946.85, flops:45.56, batch-reuse:1
@ 1176 train 9.5396 , allloss: 151.1071, dt: 1118.40ms, fracRes: 0.4202, norm(attn): 3.5000, norm(output): 2.0000, norm(x): 1.4909, norm(y): 0.9700, norm:189.0602, tok/sec: 117196.16, flops:45.66, batch-reuse:1
@ 1177 train 9.4849 , allloss: 120.2963, dt: 1110.60ms, fracRes: 0.5503, norm(attn): 3.5312, norm(output): 2.5000, norm(x): 1.6034, norm(y): 0.9719, norm:321.0269, tok/sec: 118018.81, flops:45.98, batch-reuse:1
@ 1178 train 9.0698 , allloss: 120.6453, dt: 1122.43ms, fracRes: 0.5650, norm(attn): 4.4688, norm(output): 3.6719, norm(x): 1.9798, norm(y): 0.9739, norm:505.2797, tok/sec: 116775.62, flops:45.50, batch-reuse:1
@ 1179 train 8.8824 , allloss: 143.3467, dt: 1125.44ms, fracRes: 0.5695, norm(attn): 5.1562, norm(output): 5.0312, norm(x): 2.4471, norm(y): 0.9750, norm:426.0229, tok/sec: 116462.44, flops:45.37, batch-reuse:1
@ 1180 train 8.8412 , allloss: 169.8575, dt: 1119.58ms, fracRes: 0.5729, norm(attn): 5.8438, norm(output): 6.8750, norm(x): 3.0582, norm(y): 0.9758, norm:382.5777, tok/sec: 117072.40, flops:45.61, batch-reuse:1
@ 1181 train 8.7437 , allloss: 200.9177, dt: 1111.81ms, fracRes: 0.5742, norm(attn): 6.4688, norm(output): 9.0625, norm(x): 3.8167, norm(y): 0.9762, norm:312.6104, tok/sec: 117890.95, flops:45.93, batch-reuse:1
@ 1182 train 8.9423 , allloss: 243.1452, dt: 1111.87ms, fracRes: 0.5746, norm(attn): 7.0000, norm(output): 11.9375, norm(x): 4.7611, norm(y): 0.9764, norm:287.6511, tok/sec: 117884.43, flops:45.93, batch-reuse:1
@ 1183 train 8.7991 , allloss: 272.0778, dt: 1116.90ms, fracRes: 0.5761, norm(attn): 7.5000, norm(output): 14.9375, norm(x): 5.8317, norm(y): 0.9764, norm:221.8295, tok/sec: 117353.37, flops:45.72, batch-reuse:1
@ 1184 train 8.7750 , allloss: 311.6859, dt: 1133.19ms, fracRes: 0.5757, norm(attn): 8.0000, norm(output): 18.6250, norm(x): 7.1157, norm(y): 0.9762, norm:285.5788, tok/sec: 115666.28, flops:45.06, batch-reuse:1
@ 1185 train 8.9099 , allloss: 338.6786, dt: 1134.04ms, fracRes: 0.5292, norm(attn): 8.5000, norm(output): 23.6250, norm(x): 9.6986, norm(y): 0.9760, norm:1893.0432, tok/sec: 115579.90, flops:45.03, batch-reuse:1
@ 1186 train 8.8769 , allloss: 350.3571, dt: 1138.43ms, fracRes: 0.4628, norm(attn): 9.0000, norm(output): 27.8750, norm(x): 13.0757, norm(y): 0.9759, norm:3575.5549, tok/sec: 115134.08, flops:44.86, batch-reuse:1
@ 1187 train 8.8837 , allloss: 327.9052, dt: 1131.03ms, fracRes: 0.5107, norm(attn): 9.0625, norm(output): 30.1250, norm(x): 13.1468, norm(y): 0.9759, norm:488.9747, tok/sec: 115887.40, flops:45.15, batch-reuse:1
@ 1188 train 8.6762 , allloss: 296.6376, dt: 1124.06ms, fracRes: 0.5131, norm(attn): 9.5000, norm(output): 32.5000, norm(x): 14.0082, norm(y): 0.9764, norm:723.7009, tok/sec: 116605.44, flops:45.43, batch-reuse:1
@ 1189 train 8.7503 , allloss: 282.6889, dt: 1138.25ms, fracRes: 0.5138, norm(attn): 9.7500, norm(output): 36.0000, norm(x): 15.2235, norm(y): 0.9769, norm:706.4315, tok/sec: 115152.27, flops:44.86, batch-reuse:1
@ 1190 train 8.9690 , allloss: 303.6941, dt: 1121.67ms, fracRes: 0.5142, norm(attn): 10.0000, norm(output): 39.7500, norm(x): 16.4950, norm(y): 0.9774, norm:522.4603, tok/sec: 116854.51, flops:45.53, batch-reuse:1
@ 1191 train 8.7787 , allloss: 327.7482, dt: 1124.30ms, fracRes: 0.5149, norm(attn): 10.2500, norm(output): 42.5000, norm(x): 17.5177, norm(y): 0.9782, norm:789.5787, tok/sec: 116580.59, flops:45.42, batch-reuse:1
@ 1192 train 8.5485 , allloss: 351.5750, dt: 1119.66ms, fracRes: 0.5153, norm(attn): 10.2500, norm(output): 43.7500, norm(x): 18.0451, norm(y): 0.9789, norm:817.3683, tok/sec: 117064.07, flops:45.61, batch-reuse:1
@ 1193 train 8.5889 , allloss: 378.1694, dt: 1106.86ms, fracRes: 0.5155, norm(attn): 10.1250, norm(output): 42.7500, norm(x): 17.5473, norm(y): 0.9795, norm:1229.4531, tok/sec: 118418.05, flops:46.14, batch-reuse:1
@ 1194 train 8.6421 , allloss: 405.0753, dt: 1120.99ms, fracRes: 0.5156, norm(attn): 9.6875, norm(output): 40.0000, norm(x): 16.4813, norm(y): 0.9800, norm:1005.8691, tok/sec: 116924.99, flops:45.55, batch-reuse:1
@ 1195 train 8.4528 , allloss: 413.0960, dt: 1111.00ms, fracRes: 0.5161, norm(attn): 9.3125, norm(output): 36.0000, norm(x): 14.8543, norm(y): 0.9804, norm:783.4816, tok/sec: 117976.39, flops:45.96, batch-reuse:1
@ 1196 train 8.5959 , allloss: 415.3796, dt: 1102.54ms, fracRes: 0.5160, norm(attn): 8.8750, norm(output): 31.7500, norm(x): 12.9581, norm(y): 0.9806, norm:739.9966, tok/sec: 118882.26, flops:46.32, batch-reuse:1
@ 1197 train 8.5541 , allloss: 391.3866, dt: 1099.41ms, fracRes: 0.5159, norm(attn): 8.1250, norm(output): 26.1250, norm(x): 10.9485, norm(y): 0.9807, norm:692.1999, tok/sec: 119220.48, flops:46.45, batch-reuse:1
@ 1198 train 8.4706 , allloss: 355.7633, dt: 1129.56ms, fracRes: 0.5155, norm(attn): 7.4688, norm(output): 21.2500, norm(x): 8.9463, norm(y): 0.9808, norm:517.2103, tok/sec: 116038.57, flops:45.21, batch-reuse:1
@ 1199 train 8.5342 , allloss: 318.0542, dt: 1128.74ms, fracRes: 0.5134, norm(attn): 6.6250, norm(output): 16.5000, norm(x): 7.1793, norm(y): 0.9809, norm:444.7435, tok/sec: 116122.27, flops:45.24, batch-reuse:1
@ 1200 train 8.5358 , allloss: 271.7290, dt: 1106.08ms, fracRes: 0.5106, norm(attn): 6.0312, norm(output): 12.7500, norm(x): 5.6274, norm(y): 0.9808, norm:485.2690, tok/sec: 118501.14, flops:46.17, batch-reuse:1
@ 1201 train 8.5633 , allloss: 236.8433, dt: 1117.94ms, fracRes: 0.5268, norm(attn): 5.4688, norm(output): 9.8125, norm(x): 4.3877, norm(y): 0.9808, norm:261.9158, tok/sec: 117243.92, flops:45.68, batch-reuse:1
@ 1202 train 8.5754 , allloss: 202.7387, dt: 1123.18ms, fracRes: 0.5776, norm(attn): 5.3750, norm(output): 8.6250, norm(x): 3.5774, norm(y): 0.9810, norm:377.8065, tok/sec: 116696.87, flops:45.47, batch-reuse:1
@ 1203 train 8.7565 , allloss: 175.3871, dt: 1136.18ms, fracRes: 0.5785, norm(attn): 4.8125, norm(output): 6.4688, norm(x): 2.8476, norm(y): 0.9812, norm:354.6260, tok/sec: 115361.67, flops:44.94, batch-reuse:1
@ 1204 train 8.6865 , allloss: 147.8803, dt: 1138.41ms, fracRes: 0.5792, norm(attn): 4.3125, norm(output): 4.5000, norm(x): 2.2160, norm(y): 0.9817, norm:358.4545, tok/sec: 115135.94, flops:44.86, batch-reuse:1
@ 1205 train 8.8568 , allloss: 140.2132, dt: 1130.51ms, fracRes: 0.5776, norm(attn): 3.5156, norm(output): 2.7656, norm(x): 1.6594, norm(y): 0.9821, norm:290.4860, tok/sec: 115940.12, flops:45.17, batch-reuse:1
@ 1206 train 9.1234 , allloss: 142.9429, dt: 1118.23ms, fracRes: 0.5707, norm(attn): 2.9062, norm(output): 1.6641, norm(x): 1.3126, norm(y): 0.9821, norm:334.5605, tok/sec: 117214.05, flops:45.67, batch-reuse:1
@ 1207 train 8.8626 , allloss: 143.5392, dt: 1124.15ms, fracRes: 0.5642, norm(attn): 3.0156, norm(output): 1.7031, norm(x): 1.3305, norm(y): 0.9820, norm:305.3197, tok/sec: 116596.24, flops:45.43, batch-reuse:1
@ 1208 train 8.4827 , allloss: 128.7592, dt: 1133.79ms, fracRes: 0.5638, norm(attn): 3.2500, norm(output): 1.9688, norm(x): 1.3905, norm(y): 0.9816, norm:271.8952, tok/sec: 115605.30, flops:45.04, batch-reuse:1
@ 1209 train 8.3239 , allloss: 125.6062, dt: 1118.69ms, fracRes: 0.5566, norm(attn): 3.5312, norm(output): 2.3594, norm(x): 1.5171, norm(y): 0.9801, norm:255.7713, tok/sec: 117166.04, flops:45.65, batch-reuse:1
@ 1210 train 8.3739 , allloss: 118.2545, dt: 1106.30ms, fracRes: 0.5135, norm(attn): 3.8125, norm(output): 2.6094, norm(x): 1.6752, norm(y): 0.9757, norm:370.5043, tok/sec: 118477.80, flops:46.16, batch-reuse:1
@ 1211 train 8.4428 , allloss: 112.1122, dt: 1096.43ms, fracRes: 0.5095, norm(attn): 3.7812, norm(output): 3.0781, norm(x): 1.8718, norm(y): 0.9727, norm:364.5839, tok/sec: 119544.31, flops:46.57, batch-reuse:1
@ 1212 train 8.3894 , allloss: 108.7348, dt: 1119.98ms, fracRes: 0.5128, norm(attn): 3.8906, norm(output): 3.8125, norm(x): 2.1453, norm(y): 0.9717, norm:284.4124, tok/sec: 117030.68, flops:45.60, batch-reuse:1
@ 1213 train 8.3981 , allloss: 111.2132, dt: 1118.60ms, fracRes: 0.5146, norm(attn): 3.9219, norm(output): 4.7188, norm(x): 2.4907, norm(y): 0.9702, norm:295.4012, tok/sec: 117174.93, flops:45.65, batch-reuse:1
@ 1214 train 8.6174 , allloss: 118.0378, dt: 1139.19ms, fracRes: 0.5150, norm(attn): 3.8594, norm(output): 5.7500, norm(x): 2.9043, norm(y): 0.9676, norm:295.7525, tok/sec: 115056.86, flops:44.83, batch-reuse:1
@ 1215 train 8.9624 , allloss: 132.1608, dt: 1134.22ms, fracRes: 0.5153, norm(attn): 3.7500, norm(output): 6.8750, norm(x): 3.3803, norm(y): 0.9642, norm:278.8686, tok/sec: 115561.08, flops:45.02, batch-reuse:1
@ 1216 train 9.4535 , allloss: 243.7361, dt: 1129.80ms, fracRes: 0.6110, norm(attn): 3.1562, norm(output): 7.4688, norm(x): 3.0506, norm(y): 0.9609, norm:502.1982, tok/sec: 116013.15, flops:45.20, batch-reuse:1
@ 1217 train 9.4899 , allloss: 193.9306, dt: 1137.64ms, fracRes: 0.6358, norm(attn): 3.1406, norm(output): 8.5625, norm(x): 3.2578, norm(y): 0.9602, norm:340.2451, tok/sec: 115213.76, flops:44.89, batch-reuse:1
@ 1218 train 9.4630 , allloss: 167.7564, dt: 1137.03ms, fracRes: 0.5935, norm(attn): 3.6875, norm(output): 11.1250, norm(x): 4.3281, norm(y): 0.9610, norm:510.2831, tok/sec: 115275.85, flops:44.91, batch-reuse:1
@ 1219 train 9.1828 , allloss: 184.7922, dt: 1135.99ms, fracRes: 0.6608, norm(attn): 3.7188, norm(output): 12.0000, norm(x): 3.8716, norm(y): 0.9633, norm:462.8476, tok/sec: 115381.69, flops:44.95, batch-reuse:1
@ 1220 train 8.9448 , allloss: 174.7758, dt: 1135.86ms, fracRes: 0.6639, norm(attn): 4.0000, norm(output): 13.9375, norm(x): 4.3105, norm(y): 0.9651, norm:403.0189, tok/sec: 115394.68, flops:44.96, batch-reuse:1
@ 1221 train 8.3567 , allloss: 236.9369, dt: 1129.99ms, fracRes: 0.7303, norm(attn): 2.7812, norm(output): 9.8750, norm(x): 2.9162, norm(y): 0.9699, norm:531.4672, tok/sec: 115993.59, flops:45.19, batch-reuse:1
@ 1222 train 8.3574 , allloss: 246.3854, dt: 1135.15ms, fracRes: 0.7320, norm(attn): 2.8750, norm(output): 10.7500, norm(x): 3.0414, norm(y): 0.9705, norm:277.8869, tok/sec: 115466.61, flops:44.99, batch-reuse:1
@ 1223 train 8.3668 , allloss: 267.1277, dt: 1122.91ms, fracRes: 0.7242, norm(attn): 2.9219, norm(output): 11.6875, norm(x): 3.2996, norm(y): 0.9707, norm:283.3549, tok/sec: 116724.92, flops:45.48, batch-reuse:1
@ 1224 train 8.2523 , allloss: 326.3791, dt: 1142.30ms, fracRes: 0.7123, norm(attn): 2.9531, norm(output): 12.2500, norm(x): 3.5228, norm(y): 0.9709, norm:3953.8953, tok/sec: 114744.36, flops:44.70, batch-reuse:1
@ 1225 train 8.2395 , allloss: 240.2645, dt: 1135.31ms, fracRes: 0.7244, norm(attn): 2.9219, norm(output): 12.1250, norm(x): 3.3544, norm(y): 0.9711, norm:793.7249, tok/sec: 115450.32, flops:44.98, batch-reuse:1
@ 1226 train 8.2347 , allloss: 219.1036, dt: 1150.44ms, fracRes: 0.7346, norm(attn): 2.7656, norm(output): 11.9375, norm(x): 3.1419, norm(y): 0.9713, norm:376.5884, tok/sec: 113932.20, flops:44.39, batch-reuse:1
@ 1227 train 8.2072 , allloss: 204.6764, dt: 1116.17ms, fracRes: 0.7340, norm(attn): 2.7656, norm(output): 11.6250, norm(x): 3.0811, norm(y): 0.9716, norm:386.7610, tok/sec: 117430.25, flops:45.75, batch-reuse:1
@ 1228 train 8.1843 , allloss: 230.1679, dt: 1116.24ms, fracRes: 0.7039, norm(attn): 3.0000, norm(output): 14.0000, norm(x): 3.9066, norm(y): 0.9712, norm:10035.6729, tok/sec: 117422.60, flops:45.75, batch-reuse:1
@ 1229 train 8.1858 , allloss: 171.5260, dt: 1102.83ms, fracRes: 0.6659, norm(attn): 3.2656, norm(output): 18.0000, norm(x): 5.1442, norm(y): 0.9708, norm:375.5579, tok/sec: 118850.81, flops:46.30, batch-reuse:1
@ 1230 train 8.1173 , allloss: 167.8669, dt: 1122.55ms, fracRes: 0.6650, norm(attn): 3.2344, norm(output): 16.0000, norm(x): 4.7408, norm(y): 0.9712, norm:349.7362, tok/sec: 116762.50, flops:45.49, batch-reuse:1
@ 1231 train 8.1240 , allloss: 155.9088, dt: 1128.96ms, fracRes: 0.6628, norm(attn): 3.0469, norm(output): 13.9375, norm(x): 4.1313, norm(y): 0.9718, norm:296.8147, tok/sec: 116100.20, flops:45.23, batch-reuse:1
@ 1232 train 8.0726 , allloss: 153.5105, dt: 1129.97ms, fracRes: 0.6122, norm(attn): 3.0469, norm(output): 11.3750, norm(x): 4.1230, norm(y): 0.9724, norm:1401.6439, tok/sec: 115996.14, flops:45.19, batch-reuse:1
@ 1233 train 8.0372 , allloss: 125.3845, dt: 1124.42ms, fracRes: 0.6642, norm(attn): 2.8281, norm(output): 8.3125, norm(x): 2.8332, norm(y): 0.9734, norm:319.3603, tok/sec: 116568.10, flops:45.41, batch-reuse:1
@ 1234 train 8.0220 , allloss: 120.5012, dt: 1120.31ms, fracRes: 0.6642, norm(attn): 2.9844, norm(output): 7.2812, norm(x): 2.5728, norm(y): 0.9739, norm:299.1433, tok/sec: 116995.73, flops:45.58, batch-reuse:1
@ 1235 train 8.0570 , allloss: 119.9134, dt: 1130.59ms, fracRes: 0.6646, norm(attn): 3.0781, norm(output): 7.0625, norm(x): 2.5224, norm(y): 0.9741, norm:199.7494, tok/sec: 115931.98, flops:45.17, batch-reuse:1
@ 1236 train 8.1264 , allloss: 116.5292, dt: 1110.32ms, fracRes: 0.6652, norm(attn): 3.2656, norm(output): 7.0625, norm(x): 2.5177, norm(y): 0.9743, norm:258.5778, tok/sec: 118048.71, flops:45.99, batch-reuse:1
@ 1237 train 8.1111 , allloss: 116.4136, dt: 1120.91ms, fracRes: 0.6642, norm(attn): 3.4531, norm(output): 6.6875, norm(x): 2.4110, norm(y): 0.9747, norm:307.8129, tok/sec: 116933.25, flops:45.56, batch-reuse:1
@ 1238 train 8.0880 , allloss: 112.6310, dt: 1131.65ms, fracRes: 0.6630, norm(attn): 3.5156, norm(output): 6.0000, norm(x): 2.2317, norm(y): 0.9752, norm:335.2747, tok/sec: 115824.19, flops:45.13, batch-reuse:1
@ 1239 train 8.2014 , allloss: 111.3598, dt: 1130.27ms, fracRes: 0.6587, norm(attn): 3.5625, norm(output): 5.0312, norm(x): 2.0079, norm(y): 0.9757, norm:368.2419, tok/sec: 115965.16, flops:45.18, batch-reuse:1
@ 1240 train 8.2495 , allloss: 103.2432, dt: 1132.83ms, fracRes: 0.6507, norm(attn): 3.6094, norm(output): 3.9844, norm(x): 1.7416, norm(y): 0.9757, norm:348.2023, tok/sec: 115703.01, flops:45.08, batch-reuse:1
@ 1241 train 8.2737 , allloss: 113.7291, dt: 1118.16ms, fracRes: 0.6044, norm(attn): 3.6719, norm(output): 2.8438, norm(x): 1.4776, norm(y): 0.9726, norm:304.2340, tok/sec: 117221.10, flops:45.67, batch-reuse:1
@ 1242 train 9.5025 , allloss: 383.2509, dt: 1122.86ms, fracRes: 0.3436, norm(attn): 4.2500, norm(output): 1.9766, norm(x): 1.4755, norm(y): 0.9571, norm:323645.3125, tok/sec: 116730.55, flops:45.48, batch-reuse:1
@ 1243 train 11.1546 , allloss: 511.4760, dt: 1113.53ms, fracRes: 0.2354, norm(attn): 5.0938, norm(output): 2.8750, norm(x): 2.2363, norm(y): 0.9508, norm:15850.3037, tok/sec: 117708.48, flops:45.86, batch-reuse:1
@ 1244 train 11.7647 , allloss: 390.9238, dt: 1128.92ms, fracRes: 0.2524, norm(attn): 5.1875, norm(output): 3.3438, norm(x): 2.4708, norm(y): 0.9492, norm:658.3854, tok/sec: 116103.78, flops:45.23, batch-reuse:1
@ 1245 train 11.8554 , allloss: 302.0834, dt: 1138.43ms, fracRes: 0.2853, norm(attn): 4.6875, norm(output): 2.9688, norm(x): 2.1264, norm(y): 0.9495, norm:30934.0234, tok/sec: 115133.75, flops:44.86, batch-reuse:1
@ 1246 train 11.7997 , allloss: 296.1548, dt: 1145.75ms, fracRes: 0.3841, norm(attn): 4.5000, norm(output): 3.2344, norm(x): 1.9527, norm(y): 0.9511, norm:1700.6178, tok/sec: 114398.69, flops:44.57, batch-reuse:1
@ 1247 train 9.0077 , allloss: 129.5180, dt: 1111.69ms, fracRes: 0.3766, norm(attn): 5.6875, norm(output): 2.3281, norm(x): 1.6535, norm(y): 0.9621, norm:350.4807, tok/sec: 117903.70, flops:45.94, batch-reuse:1
@ 1248 train 8.8401 , allloss: 130.7789, dt: 1126.45ms, fracRes: 0.3606, norm(attn): 5.6562, norm(output): 1.8906, norm(x): 1.4351, norm(y): 0.9625, norm:1017.6905, tok/sec: 116358.79, flops:45.33, batch-reuse:1
@ 1249 train 8.9521 , allloss: 791.0510, dt: 1131.20ms, fracRes: 0.1844, norm(attn): 4.9688, norm(output): 2.7188, norm(x): 2.3083, norm(y): 0.9640, norm:2171496.7500, tok/sec: 115870.16, flops:45.14, batch-reuse:1
@ 1250 train 8.8505 , allloss: 1794.3223, dt: 1130.38ms, fracRes: 0.1048, norm(attn): 4.5938, norm(output): 4.5312, norm(x): 3.9960, norm(y): 0.9662, norm:35476540.0000, tok/sec: 115954.30, flops:45.18, batch-reuse:1
@ 1251 train 8.4531 , allloss: 3026.4802, dt: 1146.15ms, fracRes: 0.0612, norm(attn): 4.5000, norm(output): 6.4375, norm(x): 5.7178, norm(y): 0.9664, norm:6340447.5000, tok/sec: 114358.90, flops:44.55, batch-reuse:1
@ 1252 train 8.7583 , allloss: 2909.4353, dt: 1147.50ms, fracRes: 0.0384, norm(attn): 4.5312, norm(output): 6.2188, norm(x): 5.6439, norm(y): 0.9670, norm:98423920.0000, tok/sec: 114223.68, flops:44.50, batch-reuse:1
@ 1253 train 8.5856 , allloss: 2681.0991, dt: 1132.57ms, fracRes: 0.0358, norm(attn): 4.4375, norm(output): 5.8438, norm(x): 5.2843, norm(y): 0.9672, norm:474029696.0000, tok/sec: 115729.30, flops:45.09, batch-reuse:1
@ 1254 train 8.7005 , allloss: 2675.6768, dt: 1126.50ms, fracRes: 0.0304, norm(attn): 4.3750, norm(output): 5.6875, norm(x): 5.2008, norm(y): 0.9680, norm:1245218432.0000, tok/sec: 116352.90, flops:45.33, batch-reuse:1
@ 1255 train 8.8404 , allloss: 2599.6282, dt: 1119.50ms, fracRes: 0.0319, norm(attn): 4.3125, norm(output): 5.5000, norm(x): 4.9842, norm(y): 0.9679, norm:1777369600.0000, tok/sec: 117080.77, flops:45.61, batch-reuse:1
@ 1256 train 8.8816 , allloss: 2519.2505, dt: 1131.65ms, fracRes: 0.0267, norm(attn): 4.2500, norm(output): 5.1875, norm(x): 4.6745, norm(y): 0.9672, norm:1441136768.0000, tok/sec: 115823.39, flops:45.12, batch-reuse:1
@ 1257 train 9.0165 , allloss: 2483.0911, dt: 1122.78ms, fracRes: 0.0268, norm(attn): 4.2188, norm(output): 5.0312, norm(x): 4.5352, norm(y): 0.9665, norm:805810816.0000, tok/sec: 116739.25, flops:45.48, batch-reuse:1
@ 1258 train 9.0760 , allloss: 2345.1479, dt: 1142.41ms, fracRes: 0.0259, norm(attn): 4.0625, norm(output): 4.7500, norm(x): 4.2504, norm(y): 0.9656, norm:1785947904.0000, tok/sec: 114732.72, flops:44.70, batch-reuse:1
@ 1259 train 9.1466 , allloss: 2140.2886, dt: 1143.00ms, fracRes: 0.0291, norm(attn): 4.0000, norm(output): 4.3125, norm(x): 3.8469, norm(y): 0.9646, norm:414692352.0000, tok/sec: 114673.87, flops:44.68, batch-reuse:1
@ 1260 train 9.0851 , allloss: 1729.1730, dt: 1136.23ms, fracRes: 0.0564, norm(attn): 4.0000, norm(output): 3.7344, norm(x): 3.3499, norm(y): 0.9641, norm:195654592.0000, tok/sec: 115356.81, flops:44.94, batch-reuse:1
@ 1261 train 9.1014 , allloss: 1320.8256, dt: 1109.74ms, fracRes: 0.1095, norm(attn): 3.9688, norm(output): 3.2031, norm(x): 2.8433, norm(y): 0.9651, norm:119134016.0000, tok/sec: 118111.08, flops:46.02, batch-reuse:1
@ 1262 train 9.2168 , allloss: 670.3766, dt: 1102.39ms, fracRes: 0.2486, norm(attn): 3.8125, norm(output): 2.3594, norm(x): 2.0232, norm(y): 0.9662, norm:230425008.0000, tok/sec: 118898.46, flops:46.32, batch-reuse:1
@ 1263 train 9.2034 , allloss: 236.3196, dt: 1107.25ms, fracRes: 0.4134, norm(attn): 3.7812, norm(output): 1.8828, norm(x): 1.4526, norm(y): 0.9661, norm:4048680.0000, tok/sec: 118376.03, flops:46.12, batch-reuse:1
@ 1264 train 9.4388 , allloss: 197.4424, dt: 1123.56ms, fracRes: 0.4576, norm(attn): 3.7656, norm(output): 1.8906, norm(x): 1.4182, norm(y): 0.9661, norm:2123.1018, tok/sec: 116657.60, flops:45.45, batch-reuse:1
@ 1265 train 9.2219 , allloss: 186.2634, dt: 1126.43ms, fracRes: 0.4746, norm(attn): 3.9375, norm(output): 2.0156, norm(x): 1.4643, norm(y): 0.9662, norm:615.8410, tok/sec: 116360.95, flops:45.33, batch-reuse:1
@ 1266 train 9.2960 , allloss: 153.6242, dt: 1110.32ms, fracRes: 0.5112, norm(attn): 4.1562, norm(output): 2.4062, norm(x): 1.5589, norm(y): 0.9672, norm:333.2753, tok/sec: 118049.07, flops:45.99, batch-reuse:1
@ 1267 train 9.4521 , allloss: 147.1224, dt: 1111.02ms, fracRes: 0.5865, norm(attn): 4.2188, norm(output): 2.7812, norm(x): 1.6355, norm(y): 0.9696, norm:520.6083, tok/sec: 117974.57, flops:45.96, batch-reuse:1
@ 1268 train 9.4676 , allloss: 153.5935, dt: 1121.33ms, fracRes: 0.6152, norm(attn): 4.2500, norm(output): 3.2656, norm(x): 1.7310, norm(y): 0.9714, norm:492.3280, tok/sec: 116889.94, flops:45.54, batch-reuse:1
@ 1269 train 9.4158 , allloss: 156.4861, dt: 1129.74ms, fracRes: 0.5880, norm(attn): 4.2812, norm(output): 3.7812, norm(x): 1.9587, norm(y): 0.9727, norm:383.6641, tok/sec: 116019.17, flops:45.20, batch-reuse:1
@ 1270 train 9.1464 , allloss: 163.7884, dt: 1128.89ms, fracRes: 0.5783, norm(attn): 4.4062, norm(output): 4.2500, norm(x): 2.1497, norm(y): 0.9737, norm:329.1940, tok/sec: 116106.97, flops:45.24, batch-reuse:1
@ 1271 train 8.8222 , allloss: 169.3938, dt: 1116.13ms, fracRes: 0.5716, norm(attn): 4.2812, norm(output): 4.5312, norm(x): 2.2788, norm(y): 0.9741, norm:263.4443, tok/sec: 117434.21, flops:45.75, batch-reuse:1
@ 1272 train 8.6295 , allloss: 207.1537, dt: 1119.18ms, fracRes: 0.5198, norm(attn): 4.1562, norm(output): 4.7188, norm(x): 2.5734, norm(y): 0.9721, norm:830.5395, tok/sec: 117114.72, flops:45.63, batch-reuse:1
@ 1273 train 9.1989 , allloss: 275.7164, dt: 1112.32ms, fracRes: 0.5462, norm(attn): 3.3750, norm(output): 4.2812, norm(x): 2.4641, norm(y): 0.9695, norm:491.0255, tok/sec: 117837.05, flops:45.91, batch-reuse:1
@ 1274 train 8.8985 , allloss: 237.3215, dt: 1132.12ms, fracRes: 0.5282, norm(attn): 3.9219, norm(output): 5.9375, norm(x): 3.1281, norm(y): 0.9716, norm:1145.1283, tok/sec: 115775.58, flops:45.11, batch-reuse:1
@ 1275 train 8.9325 , allloss: 230.4488, dt: 1122.16ms, fracRes: 0.4392, norm(attn): 4.5312, norm(output): 8.1250, norm(x): 4.4950, norm(y): 0.9735, norm:421.9233, tok/sec: 116802.94, flops:45.51, batch-reuse:1
@ 1276 train 8.8841 , allloss: 250.7957, dt: 1110.99ms, fracRes: 0.4405, norm(attn): 5.0000, norm(output): 10.6250, norm(x): 5.6924, norm(y): 0.9744, norm:304.2647, tok/sec: 117977.55, flops:45.96, batch-reuse:1
@ 1277 train 8.9281 , allloss: 272.1244, dt: 1109.47ms, fracRes: 0.4405, norm(attn): 5.4688, norm(output): 13.8125, norm(x): 7.1684, norm(y): 0.9752, norm:224.2847, tok/sec: 118139.38, flops:46.03, batch-reuse:1
@ 1278 train 9.0011 , allloss: 289.4939, dt: 1113.56ms, fracRes: 0.4406, norm(attn): 5.8125, norm(output): 17.0000, norm(x): 8.6739, norm(y): 0.9758, norm:292.8199, tok/sec: 117705.71, flops:45.86, batch-reuse:1
@ 1279 train 9.1055 , allloss: 282.4971, dt: 1126.25ms, fracRes: 0.4398, norm(attn): 6.0000, norm(output): 19.2500, norm(x): 9.7245, norm(y): 0.9761, norm:247.9702, tok/sec: 116378.69, flops:45.34, batch-reuse:1
@ 1280 train 9.0636 , allloss: 269.6481, dt: 1117.02ms, fracRes: 0.4389, norm(attn): 6.0000, norm(output): 20.5000, norm(x): 10.4894, norm(y): 0.9761, norm:354.3753, tok/sec: 117341.07, flops:45.72, batch-reuse:1
@ 1281 train 9.1339 , allloss: 263.5687, dt: 1123.96ms, fracRes: 0.4378, norm(attn): 5.6875, norm(output): 20.1250, norm(x): 10.3084, norm(y): 0.9757, norm:535.0491, tok/sec: 116615.90, flops:45.43, batch-reuse:1
@ 1282 train 9.1695 , allloss: 283.7661, dt: 1124.95ms, fracRes: 0.4366, norm(attn): 5.3125, norm(output): 18.6250, norm(x): 9.5501, norm(y): 0.9748, norm:284.5416, tok/sec: 116513.19, flops:45.39, batch-reuse:1
@ 1283 train 9.2720 , allloss: 312.4500, dt: 1117.84ms, fracRes: 0.4373, norm(attn): 4.5312, norm(output): 15.7500, norm(x): 8.1247, norm(y): 0.9736, norm:595.9269, tok/sec: 117254.60, flops:45.68, batch-reuse:1
@ 1284 train 9.2803 , allloss: 342.8673, dt: 1131.60ms, fracRes: 0.4380, norm(attn): 4.1250, norm(output): 14.0625, norm(x): 7.5203, norm(y): 0.9723, norm:991.2483, tok/sec: 115828.88, flops:45.13, batch-reuse:1
@ 1285 train 9.3191 , allloss: 349.8275, dt: 1120.88ms, fracRes: 0.4387, norm(attn): 4.0000, norm(output): 14.2500, norm(x): 7.6448, norm(y): 0.9714, norm:1201.6776, tok/sec: 116936.41, flops:45.56, batch-reuse:1
@ 1286 train 9.3427 , allloss: 356.6272, dt: 1110.66ms, fracRes: 0.4390, norm(attn): 4.0938, norm(output): 16.2500, norm(x): 8.5865, norm(y): 0.9710, norm:1295.9001, tok/sec: 118012.50, flops:45.98, batch-reuse:1
@ 1287 train 9.2302 , allloss: 367.4138, dt: 1113.43ms, fracRes: 0.4396, norm(attn): 4.5000, norm(output): 20.2500, norm(x): 10.5158, norm(y): 0.9710, norm:1269.7860, tok/sec: 117719.24, flops:45.86, batch-reuse:1
@ 1288 train 9.2135 , allloss: 365.0662, dt: 1112.21ms, fracRes: 0.4401, norm(attn): 5.0938, norm(output): 26.2500, norm(x): 13.6243, norm(y): 0.9713, norm:1222.5011, tok/sec: 117848.14, flops:45.91, batch-reuse:1
@ 1289 train 9.0738 , allloss: 399.3499, dt: 1118.72ms, fracRes: 0.4408, norm(attn): 6.0312, norm(output): 36.0000, norm(x): 18.1653, norm(y): 0.9718, norm:1248.5640, tok/sec: 117162.92, flops:45.65, batch-reuse:1
@ 1290 train 9.0174 , allloss: 454.4577, dt: 1102.89ms, fracRes: 0.4416, norm(attn): 7.0312, norm(output): 49.5000, norm(x): 24.4818, norm(y): 0.9724, norm:1184.1996, tok/sec: 118843.84, flops:46.30, batch-reuse:1
@ 1291 train 8.9754 , allloss: 564.4675, dt: 1117.37ms, fracRes: 0.4421, norm(attn): 8.3750, norm(output): 67.5000, norm(x): 32.8058, norm(y): 0.9731, norm:1039.7355, tok/sec: 117303.76, flops:45.70, batch-reuse:1
@ 1292 train 8.9623 , allloss: 735.7272, dt: 1130.10ms, fracRes: 0.4433, norm(attn): 9.5000, norm(output): 88.5000, norm(x): 43.3584, norm(y): 0.9738, norm:891.5811, tok/sec: 115982.88, flops:45.19, batch-reuse:1
@ 1293 train 8.9063 , allloss: 927.5024, dt: 1120.68ms, fracRes: 0.4440, norm(attn): 11.0000, norm(output): 117.5000, norm(x): 56.3770, norm(y): 0.9745, norm:974.1507, tok/sec: 116957.85, flops:45.57, batch-reuse:1
@ 1294 train 8.8381 , allloss: 1126.7390, dt: 1137.18ms, fracRes: 0.4454, norm(attn): 12.3125, norm(output): 146.0000, norm(x): 70.3180, norm(y): 0.9753, norm:1137.6970, tok/sec: 115260.43, flops:44.91, batch-reuse:1
@ 1295 train 8.8590 , allloss: 1386.7830, dt: 1131.24ms, fracRes: 0.4500, norm(attn): 13.0625, norm(output): 168.0000, norm(x): 80.0095, norm(y): 0.9759, norm:12128.3096, tok/sec: 115865.96, flops:45.14, batch-reuse:1
@ 1296 train 8.8477 , allloss: 1616.7716, dt: 1132.34ms, fracRes: 0.4462, norm(attn): 14.1875, norm(output): 193.0000, norm(x): 91.8767, norm(y): 0.9764, norm:2848.9546, tok/sec: 115753.47, flops:45.10, batch-reuse:1
@ 1297 train 8.8327 , allloss: 1752.0896, dt: 1121.91ms, fracRes: 0.4481, norm(attn): 14.9375, norm(output): 207.0000, norm(x): 96.8879, norm(y): 0.9766, norm:4572.0059, tok/sec: 116829.05, flops:45.52, batch-reuse:1
@ 1298 train 8.8519 , allloss: 1794.1609, dt: 1148.52ms, fracRes: 0.4477, norm(attn): 15.0000, norm(output): 209.0000, norm(x): 99.6140, norm(y): 0.9767, norm:3637.5869, tok/sec: 114122.10, flops:44.46, batch-reuse:1
@ 1299 train 8.8551 , allloss: 1792.1090, dt: 1156.08ms, fracRes: 0.4476, norm(attn): 14.9375, norm(output): 207.0000, norm(x): 96.5063, norm(y): 0.9767, norm:3939.5554, tok/sec: 113376.63, flops:44.17, batch-reuse:1
@ 1300 train 8.8310 , allloss: 1670.9268, dt: 1137.87ms, fracRes: 0.4484, norm(attn): 14.2500, norm(output): 192.0000, norm(x): 89.8138, norm(y): 0.9765, norm:3681.2173, tok/sec: 115190.61, flops:44.88, batch-reuse:1
@ 1301 train 8.8264 , allloss: 1557.1077, dt: 1130.21ms, fracRes: 0.4483, norm(attn): 13.7500, norm(output): 170.0000, norm(x): 79.8829, norm(y): 0.9761, norm:3866.4067, tok/sec: 115971.06, flops:45.18, batch-reuse:1
@ 1302 train 8.8474 , allloss: 1460.2047, dt: 1128.87ms, fracRes: 0.4485, norm(attn): 13.0000, norm(output): 145.0000, norm(x): 68.4300, norm(y): 0.9757, norm:3275.6008, tok/sec: 116109.15, flops:45.24, batch-reuse:1
@ 1303 train 8.8823 , allloss: 1351.8345, dt: 1125.11ms, fracRes: 0.4488, norm(attn): 12.0625, norm(output): 119.5000, norm(x): 56.1223, norm(y): 0.9751, norm:2360.5491, tok/sec: 116497.11, flops:45.39, batch-reuse:1
@ 1304 train 8.8513 , allloss: 1247.2498, dt: 1124.06ms, fracRes: 0.4488, norm(attn): 10.9375, norm(output): 91.0000, norm(x): 43.6970, norm(y): 0.9744, norm:1212.0522, tok/sec: 116606.13, flops:45.43, batch-reuse:1
@ 1305 train 8.8475 , allloss: 1295.2264, dt: 1125.88ms, fracRes: 0.5064, norm(attn): 7.3438, norm(output): 50.7500, norm(x): 21.8598, norm(y): 0.9729, norm:768.3850, tok/sec: 116417.40, flops:45.36, batch-reuse:1
@ 1306 train 8.8627 , allloss: 1293.2278, dt: 1116.98ms, fracRes: 0.5039, norm(attn): 6.9688, norm(output): 40.5000, norm(x): 17.9713, norm(y): 0.9727, norm:1252.5149, tok/sec: 117345.40, flops:45.72, batch-reuse:1
@ 1307 train 8.8392 , allloss: 975.7164, dt: 1127.23ms, fracRes: 0.4482, norm(attn): 8.4375, norm(output): 46.5000, norm(x): 22.4280, norm(y): 0.9732, norm:2726.1182, tok/sec: 116277.77, flops:45.30, batch-reuse:1
@ 1308 train 8.8455 , allloss: 942.3064, dt: 1107.67ms, fracRes: 0.4467, norm(attn): 8.3125, norm(output): 45.0000, norm(x): 21.8258, norm(y): 0.9730, norm:1499.4152, tok/sec: 118331.49, flops:46.10, batch-reuse:1
@ 1309 train 8.8579 , allloss: 932.4349, dt: 1122.05ms, fracRes: 0.4466, norm(attn): 8.3750, norm(output): 48.2500, norm(x): 23.1291, norm(y): 0.9726, norm:1022.9734, tok/sec: 116815.23, flops:45.51, batch-reuse:1
@ 1310 train 8.8411 , allloss: 946.3932, dt: 1110.24ms, fracRes: 0.4469, norm(attn): 8.5000, norm(output): 53.2500, norm(x): 25.7297, norm(y): 0.9720, norm:1031.9796, tok/sec: 118057.84, flops:46.00, batch-reuse:1
@ 1311 train 8.8643 , allloss: 949.4259, dt: 1117.16ms, fracRes: 0.4476, norm(attn): 8.8125, norm(output): 61.7500, norm(x): 29.4181, norm(y): 0.9712, norm:544.1819, tok/sec: 117325.69, flops:45.71, batch-reuse:1
@ 1312 train 8.8152 , allloss: 924.6577, dt: 1124.01ms, fracRes: 0.4470, norm(attn): 9.0625, norm(output): 70.0000, norm(x): 33.3468, norm(y): 0.9707, norm:432.3949, tok/sec: 116611.20, flops:45.43, batch-reuse:1
@ 1313 train 8.7956 , allloss: 930.7254, dt: 1118.10ms, fracRes: 0.4473, norm(attn): 9.6250, norm(output): 78.0000, norm(x): 37.1948, norm(y): 0.9705, norm:446.4702, tok/sec: 117227.40, flops:45.67, batch-reuse:1
@ 1314 train 8.7001 , allloss: 890.5099, dt: 1109.54ms, fracRes: 0.4474, norm(attn): 9.8750, norm(output): 82.5000, norm(x): 39.5871, norm(y): 0.9702, norm:694.1594, tok/sec: 118132.17, flops:46.02, batch-reuse:1
@ 1315 train 8.6614 , allloss: 894.0800, dt: 1119.21ms, fracRes: 0.4477, norm(attn): 10.0000, norm(output): 85.5000, norm(x): 40.3677, norm(y): 0.9700, norm:927.6910, tok/sec: 117111.00, flops:45.63, batch-reuse:1
@ 1316 train 8.6188 , allloss: 816.6716, dt: 1135.01ms, fracRes: 0.4477, norm(attn): 9.9375, norm(output): 82.5000, norm(x): 39.5854, norm(y): 0.9697, norm:1404.7472, tok/sec: 115481.38, flops:44.99, batch-reuse:1
@ 1317 train 8.6911 , allloss: 775.6385, dt: 1121.15ms, fracRes: 0.4477, norm(attn): 9.8750, norm(output): 79.5000, norm(x): 37.4272, norm(y): 0.9694, norm:1167.6791, tok/sec: 116908.43, flops:45.55, batch-reuse:1
@ 1318 train 8.5241 , allloss: 702.1494, dt: 1143.31ms, fracRes: 0.4476, norm(attn): 9.3750, norm(output): 72.0000, norm(x): 34.4085, norm(y): 0.9692, norm:1502.0554, tok/sec: 114642.11, flops:44.66, batch-reuse:1
@ 1319 train 8.5665 , allloss: 643.8987, dt: 1133.12ms, fracRes: 0.4477, norm(attn): 9.0000, norm(output): 64.5000, norm(x): 30.8683, norm(y): 0.9688, norm:1327.5472, tok/sec: 115673.26, flops:45.07, batch-reuse:1
@ 1320 train 8.5273 , allloss: 573.3882, dt: 1111.49ms, fracRes: 0.4485, norm(attn): 8.4375, norm(output): 56.2500, norm(x): 26.9800, norm(y): 0.9685, norm:1169.2158, tok/sec: 117925.02, flops:45.94, batch-reuse:1
@ 1321 train 8.4967 , allloss: 497.9403, dt: 1110.34ms, fracRes: 0.4486, norm(attn): 7.8750, norm(output): 48.2500, norm(x): 23.0501, norm(y): 0.9681, norm:895.4937, tok/sec: 118046.94, flops:45.99, batch-reuse:1
@ 1322 train 8.4602 , allloss: 428.4724, dt: 1112.03ms, fracRes: 0.4487, norm(attn): 7.0312, norm(output): 39.7500, norm(x): 19.0659, norm(y): 0.9678, norm:523.1159, tok/sec: 117867.45, flops:45.92, batch-reuse:1
@ 1323 train 8.4438 , allloss: 348.3531, dt: 1103.75ms, fracRes: 0.4494, norm(attn): 6.4688, norm(output): 32.0000, norm(x): 15.4419, norm(y): 0.9675, norm:497.3540, tok/sec: 118751.66, flops:46.27, batch-reuse:1
@ 1324 train 8.4663 , allloss: 276.7566, dt: 1115.76ms, fracRes: 0.4497, norm(attn): 5.8438, norm(output): 24.5000, norm(x): 12.1635, norm(y): 0.9673, norm:336.5735, tok/sec: 117472.93, flops:45.77, batch-reuse:1
@ 1325 train 8.3632 , allloss: 231.5378, dt: 1118.11ms, fracRes: 0.4496, norm(attn): 5.3125, norm(output): 18.7500, norm(x): 9.4049, norm(y): 0.9675, norm:234.2499, tok/sec: 117226.82, flops:45.67, batch-reuse:1
@ 1326 train 8.2415 , allloss: 198.1021, dt: 1119.33ms, fracRes: 0.4502, norm(attn): 4.9688, norm(output): 14.0625, norm(x): 7.2804, norm(y): 0.9681, norm:303.6712, tok/sec: 117098.53, flops:45.62, batch-reuse:1
@ 1327 train 8.3213 , allloss: 203.0386, dt: 1113.31ms, fracRes: 0.4494, norm(attn): 4.7188, norm(output): 10.5000, norm(x): 5.5585, norm(y): 0.9690, norm:549.4635, tok/sec: 117731.62, flops:45.87, batch-reuse:1
@ 1328 train 8.2524 , allloss: 220.0451, dt: 1110.92ms, fracRes: 0.4475, norm(attn): 4.5312, norm(output): 7.5000, norm(x): 4.1782, norm(y): 0.9702, norm:546.8936, tok/sec: 117984.95, flops:45.97, batch-reuse:1
@ 1329 train 8.2951 , allloss: 248.7932, dt: 1106.30ms, fracRes: 0.4461, norm(attn): 4.6875, norm(output): 5.1250, norm(x): 3.1410, norm(y): 0.9710, norm:718.3364, tok/sec: 118478.03, flops:46.16, batch-reuse:1
@ 1330 train 8.4199 , allloss: 380.9839, dt: 1123.65ms, fracRes: 0.4352, norm(attn): 4.5625, norm(output): 4.1875, norm(x): 2.6983, norm(y): 0.9692, norm:1862.1643, tok/sec: 116648.41, flops:45.45, batch-reuse:1
@ 1331 train 8.3281 , allloss: 243.6346, dt: 1110.55ms, fracRes: 0.4427, norm(attn): 4.1562, norm(output): 3.7656, norm(x): 2.5155, norm(y): 0.9679, norm:517.3745, tok/sec: 118024.23, flops:45.98, batch-reuse:1
@ 1332 train 8.2452 , allloss: 249.1362, dt: 1137.85ms, fracRes: 0.4925, norm(attn): 4.3438, norm(output): 5.0000, norm(x): 2.9845, norm(y): 0.9697, norm:523.6377, tok/sec: 115193.00, flops:44.88, batch-reuse:1
@ 1333 train 8.3063 , allloss: 503.7460, dt: 1111.67ms, fracRes: 0.5182, norm(attn): 4.5312, norm(output): 6.5312, norm(x): 3.5931, norm(y): 0.9698, norm:890.6585, tok/sec: 117905.95, flops:45.94, batch-reuse:1
@ 1334 train 8.2958 , allloss: 312.3257, dt: 1125.59ms, fracRes: 0.5440, norm(attn): 4.5312, norm(output): 7.0000, norm(x): 3.6652, norm(y): 0.9686, norm:505.2191, tok/sec: 116447.17, flops:45.37, batch-reuse:1
@ 1335 train 8.2233 , allloss: 342.9751, dt: 1113.30ms, fracRes: 0.4836, norm(attn): 5.0000, norm(output): 8.1875, norm(x): 4.5293, norm(y): 0.9656, norm:1085.8566, tok/sec: 117732.48, flops:45.87, batch-reuse:1
@ 1336 train 8.2442 , allloss: 374.5381, dt: 1109.91ms, fracRes: 0.5039, norm(attn): 6.0000, norm(output): 10.7500, norm(x): 5.3042, norm(y): 0.9621, norm:367.9203, tok/sec: 118092.30, flops:46.01, batch-reuse:1
@ 1337 train 8.1723 , allloss: 376.9978, dt: 1109.80ms, fracRes: 0.5586, norm(attn): 5.8125, norm(output): 13.1250, norm(x): 5.7310, norm(y): 0.9622, norm:473.9744, tok/sec: 118104.00, flops:46.01, batch-reuse:1
@ 1338 train 8.0745 , allloss: 331.1147, dt: 1113.53ms, fracRes: 0.5033, norm(attn): 6.5000, norm(output): 14.2500, norm(x): 6.8271, norm(y): 0.9592, norm:331.8327, tok/sec: 117708.13, flops:45.86, batch-reuse:1
@ 1339 train 8.2913 , allloss: 311.3983, dt: 1128.46ms, fracRes: 0.4997, norm(attn): 6.0312, norm(output): 12.3750, norm(x): 6.0021, norm(y): 0.9562, norm:910.8866, tok/sec: 116151.20, flops:45.25, batch-reuse:1
@ 1340 train 8.2045 , allloss: 315.5762, dt: 1117.93ms, fracRes: 0.4457, norm(attn): 6.0000, norm(output): 13.0000, norm(x): 6.8231, norm(y): 0.9559, norm:422.2215, tok/sec: 117245.15, flops:45.68, batch-reuse:1
@ 1341 train 8.0831 , allloss: 328.6788, dt: 1128.65ms, fracRes: 0.4336, norm(attn): 6.0312, norm(output): 15.9375, norm(x): 8.1295, norm(y): 0.9575, norm:480.7158, tok/sec: 116132.13, flops:45.25, batch-reuse:1
@ 1342 train 8.1020 , allloss: 416.2526, dt: 1115.74ms, fracRes: 0.4161, norm(attn): 6.2812, norm(output): 18.2500, norm(x): 9.3873, norm(y): 0.9599, norm:720.4395, tok/sec: 117475.11, flops:45.77, batch-reuse:1
@ 1343 train 7.8890 , allloss: 599.8234, dt: 1103.96ms, fracRes: 0.4564, norm(attn): 6.0000, norm(output): 19.8750, norm(x): 9.1857, norm(y): 0.9621, norm:689.5093, tok/sec: 118728.88, flops:46.26, batch-reuse:1
@ 1344 train 7.9291 , allloss: 670.8181, dt: 1122.62ms, fracRes: 0.4626, norm(attn): 6.3438, norm(output): 24.8750, norm(x): 11.0168, norm(y): 0.9635, norm:915.0656, tok/sec: 116755.36, flops:45.49, batch-reuse:1
@ 1345 train 7.8580 , allloss: 714.4276, dt: 1122.95ms, fracRes: 0.4783, norm(attn): 6.5625, norm(output): 29.5000, norm(x): 12.4025, norm(y): 0.9648, norm:3692.7131, tok/sec: 116720.73, flops:45.47, batch-reuse:1
@ 1346 train 7.9903 , allloss: 850.4087, dt: 1129.65ms, fracRes: 0.5000, norm(attn): 6.3750, norm(output): 30.2500, norm(x): 11.4815, norm(y): 0.9655, norm:3265238.7500, tok/sec: 116028.43, flops:45.20, batch-reuse:1
@ 1347 train 7.9438 , allloss: 959.4346, dt: 1131.34ms, fracRes: 0.4894, norm(attn): 6.3438, norm(output): 32.0000, norm(x): 12.1230, norm(y): 0.9660, norm:33127218.0000, tok/sec: 115855.38, flops:45.14, batch-reuse:1
@ 1348 train 8.0439 , allloss: 999.9515, dt: 1123.52ms, fracRes: 0.5065, norm(attn): 6.4375, norm(output): 36.0000, norm(x): 13.1574, norm(y): 0.9663, norm:78928896.0000, tok/sec: 116661.46, flops:45.45, batch-reuse:1
@ 1349 train 8.0182 , allloss: 1109.1775, dt: 1117.73ms, fracRes: 0.5453, norm(attn): 6.2812, norm(output): 39.0000, norm(x): 13.3369, norm(y): 0.9666, norm:8984999.0000, tok/sec: 117266.26, flops:45.69, batch-reuse:1
@ 1350 train 8.0367 , allloss: 1202.8506, dt: 1137.84ms, fracRes: 0.5515, norm(attn): 5.4062, norm(output): 36.2500, norm(x): 11.6186, norm(y): 0.9666, norm:173974112.0000, tok/sec: 115193.58, flops:44.88, batch-reuse:1
@ 1351 train 8.1449 , allloss: 1264.8307, dt: 1134.29ms, fracRes: 0.5596, norm(attn): 5.3750, norm(output): 38.5000, norm(x): 12.0383, norm(y): 0.9667, norm:316134816.0000, tok/sec: 115554.03, flops:45.02, batch-reuse:1
@ 1352 train 8.1551 , allloss: 2146.5474, dt: 1117.94ms, fracRes: 0.5156, norm(attn): 5.3125, norm(output): 38.5000, norm(x): 12.9330, norm(y): 0.9661, norm:113238.9453, tok/sec: 117244.67, flops:45.68, batch-reuse:1
@ 1353 train 8.1295 , allloss: 2160.9468, dt: 1130.16ms, fracRes: 0.5276, norm(attn): 5.3125, norm(output): 41.5000, norm(x): 13.5321, norm(y): 0.9664, norm:2691280.5000, tok/sec: 115976.66, flops:45.18, batch-reuse:1
@ 1354 train 8.1415 , allloss: 2448.3569, dt: 1117.62ms, fracRes: 0.5088, norm(attn): 5.3125, norm(output): 41.2500, norm(x): 13.8944, norm(y): 0.9663, norm:5838.3916, tok/sec: 117277.89, flops:45.69, batch-reuse:1
@ 1355 train 8.0789 , allloss: 2739.6245, dt: 1115.44ms, fracRes: 0.4630, norm(attn): 5.1250, norm(output): 38.7500, norm(x): 13.6204, norm(y): 0.9660, norm:3319520768.0000, tok/sec: 117506.70, flops:45.78, batch-reuse:1
@ 1356 train 8.3332 , allloss: 3578.7964, dt: 1111.07ms, fracRes: 0.3620, norm(attn): 4.6562, norm(output): 30.6250, norm(x): 12.6817, norm(y): 0.9648, norm:23610324992.0000, tok/sec: 117968.69, flops:45.96, batch-reuse:1
@ 1357 train 8.2793 , allloss: 2821.9734, dt: 1111.75ms, fracRes: 0.3632, norm(attn): 4.4688, norm(output): 29.2500, norm(x): 11.8291, norm(y): 0.9646, norm:7543518208.0000, tok/sec: 117897.07, flops:45.93, batch-reuse:1
@ 1358 train 9.5026 , allloss: 1463.2209, dt: 1110.30ms, fracRes: 0.1578, norm(attn): 4.4375, norm(output): 14.8750, norm(x): 9.7652, norm(y): 0.9560, norm:747.9769, tok/sec: 118051.15, flops:45.99, batch-reuse:1
@ 1359 train 9.6412 , allloss: 1365.5432, dt: 1106.27ms, fracRes: 0.1445, norm(attn): 4.5625, norm(output): 14.3125, norm(x): 10.0273, norm(y): 0.9553, norm:957.8928, tok/sec: 118481.19, flops:46.16, batch-reuse:1
@ 1360 train 9.6867 , allloss: 1290.1960, dt: 1121.77ms, fracRes: 0.1355, norm(attn): 4.9375, norm(output): 14.7500, norm(x): 10.9444, norm(y): 0.9549, norm:522.0303, tok/sec: 116843.45, flops:45.52, batch-reuse:1
@ 1361 train 9.7492 , allloss: 1219.7836, dt: 1125.51ms, fracRes: 0.1284, norm(attn): 5.3125, norm(output): 15.7500, norm(x): 12.1241, norm(y): 0.9546, norm:627.3292, tok/sec: 116455.60, flops:45.37, batch-reuse:1
@ 1362 train 9.8463 , allloss: 1242.3330, dt: 1139.72ms, fracRes: 0.1230, norm(attn): 5.9688, norm(output): 18.0000, norm(x): 14.2925, norm(y): 0.9545, norm:681.5314, tok/sec: 115003.71, flops:44.81, batch-reuse:1
@ 1363 train 9.8369 , allloss: 1233.6433, dt: 1138.96ms, fracRes: 0.1317, norm(attn): 6.5000, norm(output): 20.7500, norm(x): 16.4114, norm(y): 0.9549, norm:733.5497, tok/sec: 115080.46, flops:44.84, batch-reuse:1
@ 1364 train 9.8858 , allloss: 1442.7114, dt: 1139.78ms, fracRes: 0.1446, norm(attn): 6.8438, norm(output): 22.0000, norm(x): 17.5760, norm(y): 0.9559, norm:2043.8085, tok/sec: 114997.82, flops:44.80, batch-reuse:1
@ 1365 train 9.9739 , allloss: 1431.5907, dt: 1129.82ms, fracRes: 0.2031, norm(attn): 5.8438, norm(output): 17.6250, norm(x): 13.0005, norm(y): 0.9600, norm:13515.6523, tok/sec: 116011.76, flops:45.20, batch-reuse:1
@ 1366 train 8.3861 , allloss: 788.3959, dt: 1105.09ms, fracRes: 0.2431, norm(attn): 4.2188, norm(output): 9.8750, norm(x): 7.6952, norm(y): 0.9657, norm:584.6326, tok/sec: 118607.85, flops:46.21, batch-reuse:1
@ 1367 train 8.3528 , allloss: 1026.1924, dt: 1122.36ms, fracRes: 0.2368, norm(attn): 4.4062, norm(output): 12.0000, norm(x): 9.3404, norm(y): 0.9660, norm:2276.5469, tok/sec: 116782.92, flops:45.50, batch-reuse:1
@ 1368 train 8.3810 , allloss: 952.7963, dt: 1110.52ms, fracRes: 0.2234, norm(attn): 4.5938, norm(output): 12.8125, norm(x): 9.8784, norm(y): 0.9661, norm:1101.0924, tok/sec: 118027.91, flops:45.98, batch-reuse:1
@ 1369 train 8.3266 , allloss: 774.1711, dt: 1119.89ms, fracRes: 0.2497, norm(attn): 5.7812, norm(output): 26.2500, norm(x): 18.0574, norm(y): 0.9660, norm:1250.8186, tok/sec: 117040.02, flops:45.60, batch-reuse:1
@ 1370 train 8.2796 , allloss: 3248.9304, dt: 1120.11ms, fracRes: 0.2235, norm(attn): 5.8438, norm(output): 22.2500, norm(x): 15.8830, norm(y): 0.9661, norm:9234.1133, tok/sec: 117016.68, flops:45.59, batch-reuse:1
@ 1371 train 8.2700 , allloss: 861.6002, dt: 1131.71ms, fracRes: 0.2287, norm(attn): 6.0000, norm(output): 21.3750, norm(x): 14.9484, norm(y): 0.9661, norm:1726.7292, tok/sec: 115817.72, flops:45.12, batch-reuse:1
@ 1372 train 8.2554 , allloss: 676.2871, dt: 1134.77ms, fracRes: 0.2301, norm(attn): 5.8750, norm(output): 15.8125, norm(x): 11.2277, norm(y): 0.9666, norm:1943.0033, tok/sec: 115505.33, flops:45.00, batch-reuse:1
@ 1373 train 8.1873 , allloss: 325.1596, dt: 1129.11ms, fracRes: 0.2586, norm(attn): 5.5312, norm(output): 11.8125, norm(x): 8.0690, norm(y): 0.9672, norm:421.5894, tok/sec: 116084.41, flops:45.23, batch-reuse:1
@ 1374 train 8.0723 , allloss: 299.4271, dt: 1116.93ms, fracRes: 0.4035, norm(attn): 5.4375, norm(output): 10.1875, norm(x): 5.5894, norm(y): 0.9678, norm:414.2230, tok/sec: 117350.54, flops:45.72, batch-reuse:1
@ 1375 train 8.0276 , allloss: 279.0974, dt: 1122.49ms, fracRes: 0.4900, norm(attn): 5.3125, norm(output): 9.9375, norm(x): 4.8510, norm(y): 0.9680, norm:458.1118, tok/sec: 116769.00, flops:45.49, batch-reuse:1
@ 1376 train 7.9113 , allloss: 298.7444, dt: 1113.20ms, fracRes: 0.5987, norm(attn): 5.0312, norm(output): 10.4375, norm(x): 4.2303, norm(y): 0.9684, norm:514.4262, tok/sec: 117743.02, flops:45.87, batch-reuse:1
@ 1377 train 7.9621 , allloss: 317.2748, dt: 1114.72ms, fracRes: 0.6109, norm(attn): 5.4062, norm(output): 11.8125, norm(x): 4.5351, norm(y): 0.9682, norm:612.2636, tok/sec: 117582.65, flops:45.81, batch-reuse:1
@ 1378 train 8.0939 , allloss: 314.7774, dt: 1122.17ms, fracRes: 0.5690, norm(attn): 6.5000, norm(output): 14.1250, norm(x): 5.7970, norm(y): 0.9679, norm:448.7873, tok/sec: 116802.15, flops:45.51, batch-reuse:1
@ 1379 train 8.0469 , allloss: 339.0193, dt: 1121.09ms, fracRes: 0.5713, norm(attn): 6.7188, norm(output): 17.0000, norm(x): 6.6768, norm(y): 0.9675, norm:517.9036, tok/sec: 116914.42, flops:45.55, batch-reuse:1
@ 1380 train 7.8992 , allloss: 364.6587, dt: 1132.47ms, fracRes: 0.5734, norm(attn): 7.1250, norm(output): 20.6250, norm(x): 7.8229, norm(y): 0.9673, norm:458.8870, tok/sec: 115739.50, flops:45.09, batch-reuse:1
@ 1381 train 7.9382 , allloss: 390.7262, dt: 1126.09ms, fracRes: 0.5726, norm(attn): 7.5938, norm(output): 24.7500, norm(x): 9.3209, norm(y): 0.9670, norm:452.1945, tok/sec: 116396.08, flops:45.35, batch-reuse:1
@ 1382 train 7.9451 , allloss: 410.7683, dt: 1128.06ms, fracRes: 0.5724, norm(attn): 8.0000, norm(output): 30.1250, norm(x): 11.1213, norm(y): 0.9669, norm:585.0256, tok/sec: 116192.59, flops:45.27, batch-reuse:1
@ 1383 train 8.0310 , allloss: 427.6816, dt: 1111.52ms, fracRes: 0.5716, norm(attn): 8.5625, norm(output): 36.5000, norm(x): 13.2291, norm(y): 0.9669, norm:481.9641, tok/sec: 117921.17, flops:45.94, batch-reuse:1
@ 1384 train 7.9432 , allloss: 433.4871, dt: 1131.24ms, fracRes: 0.5719, norm(attn): 9.1250, norm(output): 44.0000, norm(x): 15.4577, norm(y): 0.9669, norm:612.6750, tok/sec: 115866.18, flops:45.14, batch-reuse:1
@ 1385 train 7.9705 , allloss: 432.5128, dt: 1122.67ms, fracRes: 0.5731, norm(attn): 9.6250, norm(output): 51.0000, norm(x): 17.6984, norm(y): 0.9670, norm:749.1349, tok/sec: 116750.25, flops:45.49, batch-reuse:1
@ 1386 train 7.8992 , allloss: 458.8816, dt: 1106.19ms, fracRes: 0.5730, norm(attn): 9.9375, norm(output): 57.0000, norm(x): 19.5488, norm(y): 0.9670, norm:508.0729, tok/sec: 118489.67, flops:46.16, batch-reuse:1
@ 1387 train 7.8890 , allloss: 570.6951, dt: 1118.81ms, fracRes: 0.5724, norm(attn): 9.9375, norm(output): 60.2500, norm(x): 20.5020, norm(y): 0.9669, norm:848.9343, tok/sec: 117153.40, flops:45.64, batch-reuse:1
@ 1388 train 7.9381 , allloss: 736.8409, dt: 1114.56ms, fracRes: 0.5688, norm(attn): 9.8750, norm(output): 60.7500, norm(x): 20.5322, norm(y): 0.9666, norm:745.4191, tok/sec: 117599.86, flops:45.82, batch-reuse:1
@ 1389 train 7.8650 , allloss: 816.4291, dt: 1109.52ms, fracRes: 0.5623, norm(attn): 9.5000, norm(output): 58.2500, norm(x): 19.7241, norm(y): 0.9662, norm:796.4306, tok/sec: 118134.48, flops:46.03, batch-reuse:1
@ 1390 train 8.0970 , allloss: 869.0928, dt: 1123.19ms, fracRes: 0.5548, norm(attn): 8.9375, norm(output): 52.7500, norm(x): 17.9287, norm(y): 0.9655, norm:1336.0659, tok/sec: 116695.81, flops:45.46, batch-reuse:1
@ 1391 train 7.9091 , allloss: 1109.9802, dt: 1139.34ms, fracRes: 0.5070, norm(attn): 8.1250, norm(output): 41.7500, norm(x): 14.9863, norm(y): 0.9645, norm:1271.7244, tok/sec: 115041.86, flops:44.82, batch-reuse:1
@ 1392 train 7.8612 , allloss: 1164.9263, dt: 1128.61ms, fracRes: 0.4547, norm(attn): 7.2812, norm(output): 31.0000, norm(x): 11.2254, norm(y): 0.9629, norm:178322.0469, tok/sec: 116136.25, flops:45.25, batch-reuse:1
@ 1393 train 8.2107 , allloss: 1212.7472, dt: 1097.95ms, fracRes: 0.3540, norm(attn): 6.3438, norm(output): 17.0000, norm(x): 7.0828, norm(y): 0.9592, norm:2507571.0000, tok/sec: 119378.40, flops:46.51, batch-reuse:1
@ 1394 train 8.9103 , allloss: 1334.0931, dt: 1112.63ms, fracRes: 0.2783, norm(attn): 6.1875, norm(output): 9.5625, norm(x): 5.2401, norm(y): 0.9559, norm:91954040.0000, tok/sec: 117803.27, flops:45.90, batch-reuse:1
@ 1395 train 9.4436 , allloss: 1530.0991, dt: 1107.40ms, fracRes: 0.2398, norm(attn): 6.3750, norm(output): 7.1562, norm(x): 4.9391, norm(y): 0.9544, norm:7094530.5000, tok/sec: 118359.75, flops:46.11, batch-reuse:1
@ 1396 train 10.0690 , allloss: 1619.0520, dt: 1124.20ms, fracRes: 0.2127, norm(attn): 6.9375, norm(output): 6.7500, norm(x): 5.3413, norm(y): 0.9538, norm:287803.7812, tok/sec: 116591.24, flops:45.42, batch-reuse:1
@ 1397 train 10.3842 , allloss: 1514.5980, dt: 1109.66ms, fracRes: 0.2096, norm(attn): 7.3750, norm(output): 7.1562, norm(x): 5.7260, norm(y): 0.9531, norm:68875.3125, tok/sec: 118119.02, flops:46.02, batch-reuse:1
@ 1398 train 10.5717 , allloss: 1580.8185, dt: 1136.55ms, fracRes: 0.2047, norm(attn): 7.9688, norm(output): 8.1250, norm(x): 6.4594, norm(y): 0.9519, norm:82524.9609, tok/sec: 115324.84, flops:44.93, batch-reuse:1
@ 1399 train 10.5728 , allloss: 1553.4773, dt: 1109.59ms, fracRes: 0.1916, norm(attn): 8.5000, norm(output): 9.0625, norm(x): 7.2331, norm(y): 0.9513, norm:11258.1475, tok/sec: 118126.92, flops:46.02, batch-reuse:1
@ 1400 train 10.4515 , allloss: 1619.4315, dt: 1112.79ms, fracRes: 0.2017, norm(attn): 8.5625, norm(output): 9.0625, norm(x): 7.2307, norm(y): 0.9505, norm:1763765.5000, tok/sec: 117786.48, flops:45.89, batch-reuse:1
@ 1401 train 11.1530 , allloss: 1578.5704, dt: 1125.71ms, fracRes: 0.2087, norm(attn): 8.3125, norm(output): 9.0000, norm(x): 7.1151, norm(y): 0.9500, norm:29743.3047, tok/sec: 116435.45, flops:45.36, batch-reuse:1
@ 1402 train 10.7881 , allloss: 1556.2377, dt: 1135.91ms, fracRes: 0.2511, norm(attn): 7.5938, norm(output): 8.6250, norm(x): 6.6766, norm(y): 0.9500, norm:116621.3750, tok/sec: 115388.98, flops:44.96, batch-reuse:1
@ 1403 train 11.2259 , allloss: 1545.9165, dt: 1113.92ms, fracRes: 0.2517, norm(attn): 7.6250, norm(output): 8.8125, norm(x): 6.6795, norm(y): 0.9497, norm:409792.2812, tok/sec: 117667.79, flops:45.84, batch-reuse:1
@ 1404 train 11.1445 , allloss: 1553.4694, dt: 1139.67ms, fracRes: 0.2877, norm(attn): 7.0938, norm(output): 8.5000, norm(x): 6.3640, norm(y): 0.9496, norm:239954.7656, tok/sec: 115008.72, flops:44.81, batch-reuse:1
@ 1405 train 11.0128 , allloss: 1482.0483, dt: 1111.35ms, fracRes: 0.3235, norm(attn): 6.4062, norm(output): 8.0000, norm(x): 5.8637, norm(y): 0.9499, norm:308319.8125, tok/sec: 117939.54, flops:45.95, batch-reuse:1
@ 1406 train 10.7986 , allloss: 1573.8109, dt: 1117.43ms, fracRes: 0.3488, norm(attn): 6.0625, norm(output): 8.0625, norm(x): 5.7393, norm(y): 0.9512, norm:1070319.1250, tok/sec: 117298.11, flops:45.70, batch-reuse:1
@ 1407 train 10.4809 , allloss: 1621.5317, dt: 1110.24ms, fracRes: 0.3580, norm(attn): 5.8750, norm(output): 8.0625, norm(x): 5.7495, norm(y): 0.9523, norm:3890343.7500, tok/sec: 118056.95, flops:45.99, batch-reuse:1
@ 1408 train 10.5575 , allloss: 1699.6899, dt: 1125.63ms, fracRes: 0.3712, norm(attn): 5.5000, norm(output): 8.1250, norm(x): 5.7192, norm(y): 0.9530, norm:2458901.0000, tok/sec: 116443.05, flops:45.37, batch-reuse:1
@ 1409 train 10.2063 , allloss: 2231.4358, dt: 1116.05ms, fracRes: 0.3787, norm(attn): 5.5625, norm(output): 9.1875, norm(x): 6.4186, norm(y): 0.9551, norm:570067.8750, tok/sec: 117443.24, flops:45.76, batch-reuse:1
@ 1410 train 10.0858 , allloss: 2840.7563, dt: 1150.52ms, fracRes: 0.3955, norm(attn): 5.7188, norm(output): 11.8750, norm(x): 7.2645, norm(y): 0.9567, norm:14154.3975, tok/sec: 113924.48, flops:44.38, batch-reuse:1
@ 1411 train 10.2031 , allloss: 3790.6350, dt: 1116.16ms, fracRes: 0.3215, norm(attn): 5.8438, norm(output): 14.2500, norm(x): 9.2093, norm(y): 0.9574, norm:11155.0381, tok/sec: 117431.55, flops:45.75, batch-reuse:1
@ 1412 train 10.4409 , allloss: 4633.5869, dt: 1117.14ms, fracRes: 0.2439, norm(attn): 6.0625, norm(output): 18.3750, norm(x): 12.6092, norm(y): 0.9586, norm:254287.0938, tok/sec: 117328.57, flops:45.71, batch-reuse:1
@ 1413 train 10.8903 , allloss: 4537.8057, dt: 1118.22ms, fracRes: 0.2802, norm(attn): 4.6250, norm(output): 22.5000, norm(x): 15.5244, norm(y): 0.9588, norm:7756.9692, tok/sec: 117214.35, flops:45.67, batch-reuse:1
@ 1414 train 11.1357 , allloss: 3840.2666, dt: 1119.11ms, fracRes: 0.3070, norm(attn): 4.4062, norm(output): 23.0000, norm(x): 15.3054, norm(y): 0.9588, norm:2193.2395, tok/sec: 117121.61, flops:45.63, batch-reuse:1
@ 1415 train 11.1808 , allloss: 2694.0950, dt: 1120.46ms, fracRes: 0.3415, norm(attn): 4.0938, norm(output): 22.0000, norm(x): 13.8802, norm(y): 0.9584, norm:1872.8940, tok/sec: 116980.97, flops:45.58, batch-reuse:1
@ 1416 train 11.2998 , allloss: 1795.9663, dt: 1112.94ms, fracRes: 0.4219, norm(attn): 4.5000, norm(output): 22.1250, norm(x): 12.2767, norm(y): 0.9581, norm:2851.4041, tok/sec: 117770.59, flops:45.88, batch-reuse:1
@ 1417 train 11.4320 , allloss: 1783.6962, dt: 1120.10ms, fracRes: 0.4316, norm(attn): 4.3750, norm(output): 21.8750, norm(x): 11.8055, norm(y): 0.9571, norm:6004.9136, tok/sec: 117018.00, flops:45.59, batch-reuse:1
@ 1418 train 11.4884 , allloss: 1328.8409, dt: 1113.44ms, fracRes: 0.5265, norm(attn): 4.1562, norm(output): 19.0000, norm(x): 9.3725, norm(y): 0.9564, norm:1562.6183, tok/sec: 117718.06, flops:45.86, batch-reuse:1
@ 1419 train 11.1403 , allloss: 1460.6614, dt: 1120.12ms, fracRes: 0.4466, norm(attn): 5.1875, norm(output): 25.0000, norm(x): 12.7234, norm(y): 0.9556, norm:1621.6252, tok/sec: 117016.15, flops:45.59, batch-reuse:1
@ 1420 train 11.1901 , allloss: 1708.4698, dt: 1119.22ms, fracRes: 0.4439, norm(attn): 5.2812, norm(output): 22.7500, norm(x): 11.8829, norm(y): 0.9543, norm:1904.7574, tok/sec: 117110.08, flops:45.63, batch-reuse:1
@ 1421 train 11.2241 , allloss: 1924.6102, dt: 1132.84ms, fracRes: 0.4570, norm(attn): 5.0625, norm(output): 18.0000, norm(x): 9.8497, norm(y): 0.9534, norm:6217.7944, tok/sec: 115702.43, flops:45.08, batch-reuse:1
@ 1422 train 11.4175 , allloss: 1583.8958, dt: 1117.58ms, fracRes: 0.4416, norm(attn): 5.1250, norm(output): 15.0625, norm(x): 8.9886, norm(y): 0.9527, norm:5810.8315, tok/sec: 117281.54, flops:45.69, batch-reuse:1
@ 1423 train 11.9673 , allloss: 2136.4958, dt: 1120.22ms, fracRes: 0.3656, norm(attn): 5.5000, norm(output): 15.0000, norm(x): 9.6759, norm(y): 0.9516, norm:8121.6484, tok/sec: 117005.67, flops:45.59, batch-reuse:1
@ 1424 train 12.5112 , allloss: 2039.3185, dt: 1119.73ms, fracRes: 0.2844, norm(attn): 5.5625, norm(output): 12.5000, norm(x): 9.6736, norm(y): 0.9504, norm:28967240.0000, tok/sec: 117056.69, flops:45.61, batch-reuse:1
@ 1425 train 11.5107 , allloss: 1869.5906, dt: 1128.82ms, fracRes: 0.0837, norm(attn): 6.9062, norm(output): 12.2500, norm(x): 10.8417, norm(y): 0.9501, norm:3584852992.0000, tok/sec: 116114.03, flops:45.24, batch-reuse:1
@ 1426 train 11.3212 , allloss: 1669.0726, dt: 1111.03ms, fracRes: 0.0260, norm(attn): 7.6875, norm(output): 12.0000, norm(x): 10.9414, norm(y): 0.9494, norm:7841775.5000, tok/sec: 117973.17, flops:45.96, batch-reuse:1
@ 1427 train 11.3804 , allloss: 1633.5333, dt: 1122.42ms, fracRes: 0.0175, norm(attn): 7.6875, norm(output): 11.7500, norm(x): 10.7594, norm(y): 0.9489, norm:12153718.0000, tok/sec: 116776.76, flops:45.50, batch-reuse:1
@ 1428 train 11.3578 , allloss: 1580.7909, dt: 1104.71ms, fracRes: 0.0114, norm(attn): 7.7188, norm(output): 11.3125, norm(x): 10.3949, norm(y): 0.9483, norm:45492372.0000, tok/sec: 118647.94, flops:46.23, batch-reuse:1
@ 1429 train 10.9112 , allloss: 1643.7439, dt: 1132.66ms, fracRes: 0.0102, norm(attn): 7.4062, norm(output): 11.3125, norm(x): 10.4013, norm(y): 0.9484, norm:85270144.0000, tok/sec: 115720.23, flops:45.08, batch-reuse:1
@ 1430 train 10.7278 , allloss: 1691.4429, dt: 1127.21ms, fracRes: 0.0074, norm(attn): 7.3750, norm(output): 12.0625, norm(x): 11.1231, norm(y): 0.9486, norm:26930436.0000, tok/sec: 116280.10, flops:45.30, batch-reuse:1
@ 1431 train 10.7590 , allloss: 1918.8522, dt: 1120.49ms, fracRes: 0.0110, norm(attn): 7.1562, norm(output): 12.0625, norm(x): 11.0694, norm(y): 0.9484, norm:26834622.0000, tok/sec: 116977.91, flops:45.57, batch-reuse:1
@ 1432 train 10.7975 , allloss: 2884.9609, dt: 1118.85ms, fracRes: 0.0386, norm(attn): 7.1562, norm(output): 13.4375, norm(x): 11.8235, norm(y): 0.9485, norm:115969032.0000, tok/sec: 117148.68, flops:45.64, batch-reuse:1
@ 1433 train 10.9539 , allloss: 3354.9961, dt: 1115.19ms, fracRes: 0.0515, norm(attn): 7.1875, norm(output): 14.0000, norm(x): 12.3484, norm(y): 0.9484, norm:31723720.0000, tok/sec: 117532.96, flops:45.79, batch-reuse:1
@ 1434 train 11.1274 , allloss: 3253.6921, dt: 1128.09ms, fracRes: 0.0522, norm(attn): 7.2188, norm(output): 14.3125, norm(x): 12.8344, norm(y): 0.9481, norm:34494808.0000, tok/sec: 116189.69, flops:45.27, batch-reuse:1
@ 1435 train 10.6425 , allloss: 3581.7578, dt: 1112.60ms, fracRes: 0.0444, norm(attn): 7.4062, norm(output): 15.1250, norm(x): 13.3741, norm(y): 0.9478, norm:13059739.0000, tok/sec: 117807.43, flops:45.90, batch-reuse:1
@ 1436 train 10.6637 , allloss: 4575.3926, dt: 1114.97ms, fracRes: 0.0978, norm(attn): 7.1875, norm(output): 16.2500, norm(x): 14.0046, norm(y): 0.9479, norm:71021752.0000, tok/sec: 117556.63, flops:45.80, batch-reuse:1
@ 1437 train 10.3750 , allloss: 4542.1699, dt: 1121.71ms, fracRes: 0.1104, norm(attn): 7.2812, norm(output): 16.8750, norm(x): 14.2210, norm(y): 0.9480, norm:7763232.5000, tok/sec: 116849.69, flops:45.52, batch-reuse:1
@ 1438 train 11.1314 , allloss: 4805.9678, dt: 1114.12ms, fracRes: 0.1075, norm(attn): 7.4375, norm(output): 17.0000, norm(x): 14.4820, norm(y): 0.9477, norm:30227084.0000, tok/sec: 117645.76, flops:45.83, batch-reuse:1
@ 1439 train 10.9488 , allloss: 4317.5957, dt: 1119.63ms, fracRes: 0.1095, norm(attn): 7.7188, norm(output): 17.2500, norm(x): 14.9751, norm(y): 0.9479, norm:23457270.0000, tok/sec: 117067.41, flops:45.61, batch-reuse:1
@ 1440 train 10.3807 , allloss: 4553.1782, dt: 1119.70ms, fracRes: 0.1103, norm(attn): 7.7500, norm(output): 17.5000, norm(x): 15.3493, norm(y): 0.9479, norm:435426.4062, tok/sec: 117059.53, flops:45.61, batch-reuse:1
@ 1441 train 10.6242 , allloss: 4080.9963, dt: 1119.87ms, fracRes: 0.1280, norm(attn): 7.7500, norm(output): 16.7500, norm(x): 14.6665, norm(y): 0.9481, norm:687677.9375, tok/sec: 117041.66, flops:45.60, batch-reuse:1
@ 1442 train 10.5647 , allloss: 4395.7944, dt: 1129.48ms, fracRes: 0.1438, norm(attn): 7.7500, norm(output): 17.1250, norm(x): 14.8380, norm(y): 0.9482, norm:236886.7344, tok/sec: 116046.53, flops:45.21, batch-reuse:1
@ 1443 train 10.1642 , allloss: 3549.3503, dt: 1118.79ms, fracRes: 0.1092, norm(attn): 8.0625, norm(output): 16.6250, norm(x): 14.8959, norm(y): 0.9478, norm:1941941.8750, tok/sec: 117155.37, flops:45.64, batch-reuse:1
@ 1444 train 9.9945 , allloss: 3467.6208, dt: 1114.15ms, fracRes: 0.0527, norm(attn): 9.4375, norm(output): 19.2500, norm(x): 17.2876, norm(y): 0.9478, norm:5398878.0000, tok/sec: 117642.56, flops:45.83, batch-reuse:1
@ 1445 train 9.9828 , allloss: 3346.5508, dt: 1130.42ms, fracRes: 0.0345, norm(attn): 9.5000, norm(output): 19.8750, norm(x): 17.9732, norm(y): 0.9480, norm:11825746.0000, tok/sec: 115949.51, flops:45.17, batch-reuse:1
@ 1446 train 9.9130 , allloss: 2903.5754, dt: 1129.55ms, fracRes: 0.0249, norm(attn): 9.6875, norm(output): 20.3750, norm(x): 18.3165, norm(y): 0.9481, norm:6734836.0000, tok/sec: 116039.48, flops:45.21, batch-reuse:1
@ 1447 train 9.8950 , allloss: 2645.5637, dt: 1116.27ms, fracRes: 0.0168, norm(attn): 9.6250, norm(output): 20.5000, norm(x): 18.5419, norm(y): 0.9484, norm:3037746.7500, tok/sec: 117419.91, flops:45.75, batch-reuse:1
@ 1448 train 9.6887 , allloss: 3158.0283, dt: 1120.88ms, fracRes: 0.0309, norm(attn): 8.6250, norm(output): 20.3750, norm(x): 18.0807, norm(y): 0.9489, norm:115838864.0000, tok/sec: 116936.65, flops:45.56, batch-reuse:1
@ 1449 train 9.5959 , allloss: 3547.7834, dt: 1132.12ms, fracRes: 0.0302, norm(attn): 8.1875, norm(output): 20.3750, norm(x): 17.8536, norm(y): 0.9490, norm:156742000.0000, tok/sec: 115775.72, flops:45.11, batch-reuse:1
@ 1450 train 9.6106 , allloss: 4428.6846, dt: 1115.34ms, fracRes: 0.0380, norm(attn): 7.4688, norm(output): 20.1250, norm(x): 17.5906, norm(y): 0.9492, norm:2030031360.0000, tok/sec: 117517.30, flops:45.78, batch-reuse:1
@ 1451 train 9.5572 , allloss: 5061.7661, dt: 1134.38ms, fracRes: 0.0344, norm(attn): 6.9688, norm(output): 20.1250, norm(x): 17.8814, norm(y): 0.9496, norm:122726424.0000, tok/sec: 115545.39, flops:45.02, batch-reuse:1
@ 1452 train 9.5609 , allloss: 6110.2334, dt: 1133.95ms, fracRes: 0.0346, norm(attn): 6.5938, norm(output): 21.3750, norm(x): 18.6698, norm(y): 0.9500, norm:1190363392.0000, tok/sec: 115588.70, flops:45.03, batch-reuse:1
@ 1453 train 9.4934 , allloss: 7049.1929, dt: 1155.79ms, fracRes: 0.0362, norm(attn): 6.1562, norm(output): 22.1250, norm(x): 19.5374, norm(y): 0.9505, norm:5440725504.0000, tok/sec: 113404.82, flops:44.18, batch-reuse:1
@ 1454 train 9.6664 , allloss: 7731.1626, dt: 1116.46ms, fracRes: 0.0366, norm(attn): 5.8125, norm(output): 23.0000, norm(x): 20.6292, norm(y): 0.9511, norm:179087680.0000, tok/sec: 117399.33, flops:45.74, batch-reuse:1
@ 1455 train 9.7546 , allloss: 7922.8315, dt: 1135.32ms, fracRes: 0.0371, norm(attn): 5.6875, norm(output): 23.1250, norm(x): 20.5779, norm(y): 0.9515, norm:1696145280.0000, tok/sec: 115449.85, flops:44.98, batch-reuse:1
@ 1456 train 9.6649 , allloss: 8151.5591, dt: 1118.48ms, fracRes: 0.0316, norm(attn): 5.6250, norm(output): 22.8750, norm(x): 20.4483, norm(y): 0.9517, norm:78089280.0000, tok/sec: 117187.64, flops:45.66, batch-reuse:1
@ 1457 train 9.6578 , allloss: 8551.5879, dt: 1136.69ms, fracRes: 0.0332, norm(attn): 5.5938, norm(output): 23.2500, norm(x): 20.7115, norm(y): 0.9519, norm:710400512.0000, tok/sec: 115310.49, flops:44.92, batch-reuse:1
@ 1458 train 9.8211 , allloss: 8648.3574, dt: 1115.80ms, fracRes: 0.0356, norm(attn): 5.7188, norm(output): 23.1250, norm(x): 20.6918, norm(y): 0.9519, norm:447668384.0000, tok/sec: 117469.17, flops:45.77, batch-reuse:1
@ 1459 train 9.6936 , allloss: 8936.2002, dt: 1104.38ms, fracRes: 0.0351, norm(attn): 5.5625, norm(output): 24.6250, norm(x): 21.7700, norm(y): 0.9524, norm:1801499136.0000, tok/sec: 118684.00, flops:46.24, batch-reuse:1
@ 1460 train 9.7335 , allloss: 9023.5098, dt: 1119.71ms, fracRes: 0.0393, norm(attn): 5.5625, norm(output): 24.8750, norm(x): 22.1838, norm(y): 0.9527, norm:705749696.0000, tok/sec: 117058.86, flops:45.61, batch-reuse:1
@ 1461 train 9.9490 , allloss: 9171.5938, dt: 1115.12ms, fracRes: 0.0412, norm(attn): 5.4688, norm(output): 26.2500, norm(x): 23.4063, norm(y): 0.9530, norm:137785088.0000, tok/sec: 117540.52, flops:45.79, batch-reuse:1
@ 1462 train 9.8839 , allloss: 8772.5576, dt: 1111.40ms, fracRes: 0.0456, norm(attn): 5.5000, norm(output): 25.3750, norm(x): 22.9345, norm(y): 0.9530, norm:505015968.0000, tok/sec: 117933.90, flops:45.95, batch-reuse:1
@ 1463 train 9.9894 , allloss: 8788.5918, dt: 1118.21ms, fracRes: 0.0511, norm(attn): 5.5000, norm(output): 26.2500, norm(x): 23.3763, norm(y): 0.9530, norm:761896000.0000, tok/sec: 117215.62, flops:45.67, batch-reuse:1
@ 1464 train 9.8335 , allloss: 8896.0234, dt: 1141.09ms, fracRes: 0.0581, norm(attn): 5.4375, norm(output): 28.1250, norm(x): 24.7225, norm(y): 0.9532, norm:1245017600.0000, tok/sec: 114865.76, flops:44.75, batch-reuse:1
@ 1465 train 9.9379 , allloss: 8845.7520, dt: 1114.02ms, fracRes: 0.0755, norm(attn): 5.4375, norm(output): 28.8750, norm(x): 25.2013, norm(y): 0.9531, norm:142373712.0000, tok/sec: 117657.14, flops:45.84, batch-reuse:1
@ 1466 train 9.7370 , allloss: 9025.5986, dt: 1108.84ms, fracRes: 0.0889, norm(attn): 5.4375, norm(output): 30.2500, norm(x): 26.4519, norm(y): 0.9531, norm:35074860.0000, tok/sec: 118206.36, flops:46.05, batch-reuse:1
@ 1467 train 10.0193 , allloss: 9334.1738, dt: 1116.24ms, fracRes: 0.1114, norm(attn): 5.4375, norm(output): 31.6250, norm(x): 27.2255, norm(y): 0.9530, norm:1150242560.0000, tok/sec: 117422.80, flops:45.75, batch-reuse:1
@ 1468 train 9.8362 , allloss: 9206.7979, dt: 1122.93ms, fracRes: 0.1169, norm(attn): 5.4375, norm(output): 30.6250, norm(x): 25.7680, norm(y): 0.9527, norm:531456800.0000, tok/sec: 116723.31, flops:45.48, batch-reuse:1
@ 1469 train 10.1004 , allloss: 8965.8975, dt: 1117.35ms, fracRes: 0.1330, norm(attn): 5.4688, norm(output): 29.6250, norm(x): 25.1291, norm(y): 0.9526, norm:921801792.0000, tok/sec: 117305.84, flops:45.70, batch-reuse:1
@ 1470 train 9.9864 , allloss: 8758.6465, dt: 1133.16ms, fracRes: 0.1413, norm(attn): 5.4375, norm(output): 29.5000, norm(x): 24.8583, norm(y): 0.9527, norm:166242816.0000, tok/sec: 115669.18, flops:45.06, batch-reuse:1
@ 1471 train 9.8783 , allloss: 8795.4541, dt: 1111.67ms, fracRes: 0.1412, norm(attn): 5.4688, norm(output): 30.1250, norm(x): 25.6178, norm(y): 0.9530, norm:3106053888.0000, tok/sec: 117905.95, flops:45.94, batch-reuse:1
@ 1472 train 9.6518 , allloss: 9122.2695, dt: 1119.72ms, fracRes: 0.1066, norm(attn): 5.3438, norm(output): 32.2500, norm(x): 28.1299, norm(y): 0.9538, norm:461695168.0000, tok/sec: 117057.81, flops:45.61, batch-reuse:1
@ 1473 train 9.7237 , allloss: 8914.2871, dt: 1133.92ms, fracRes: 0.0876, norm(attn): 5.3125, norm(output): 27.2500, norm(x): 23.9891, norm(y): 0.9536, norm:81493528.0000, tok/sec: 115592.30, flops:45.03, batch-reuse:1
@ 1474 train 9.7819 , allloss: 9652.5010, dt: 1124.28ms, fracRes: 0.0692, norm(attn): 5.5000, norm(output): 24.6250, norm(x): 22.1511, norm(y): 0.9531, norm:330741312.0000, tok/sec: 116582.54, flops:45.42, batch-reuse:1
@ 1475 train 9.7137 , allloss: 9694.2988, dt: 1114.48ms, fracRes: 0.0774, norm(attn): 5.6250, norm(output): 24.0000, norm(x): 21.3467, norm(y): 0.9533, norm:3725437696.0000, tok/sec: 117608.13, flops:45.82, batch-reuse:1
@ 1476 train 9.7953 , allloss: 9619.1738, dt: 1111.90ms, fracRes: 0.0792, norm(attn): 5.7188, norm(output): 23.0000, norm(x): 20.8187, norm(y): 0.9534, norm:340447808.0000, tok/sec: 117881.47, flops:45.93, batch-reuse:1
@ 1477 train 9.7371 , allloss: 9432.0322, dt: 1115.13ms, fracRes: 0.0862, norm(attn): 5.9062, norm(output): 22.6250, norm(x): 20.0695, norm(y): 0.9535, norm:1252483456.0000, tok/sec: 117539.16, flops:45.79, batch-reuse:1
@ 1478 train 9.7217 , allloss: 8970.4990, dt: 1135.70ms, fracRes: 0.1031, norm(attn): 6.1562, norm(output): 21.8750, norm(x): 19.4109, norm(y): 0.9536, norm:2562315008.0000, tok/sec: 115410.81, flops:44.96, batch-reuse:1
@ 1479 train 9.7476 , allloss: 8202.9141, dt: 1128.87ms, fracRes: 0.1144, norm(attn): 6.5938, norm(output): 20.8750, norm(x): 18.3331, norm(y): 0.9536, norm:3274151424.0000, tok/sec: 116109.35, flops:45.24, batch-reuse:1
@ 1480 train 9.8200 , allloss: 7565.3311, dt: 1127.62ms, fracRes: 0.1457, norm(attn): 6.8750, norm(output): 20.5000, norm(x): 17.5948, norm(y): 0.9537, norm:307623200.0000, tok/sec: 116238.13, flops:45.29, batch-reuse:1
@ 1481 train 9.9295 , allloss: 7071.0298, dt: 1128.99ms, fracRes: 0.1715, norm(attn): 7.1562, norm(output): 20.7500, norm(x): 17.0257, norm(y): 0.9536, norm:259027328.0000, tok/sec: 116097.11, flops:45.23, batch-reuse:1
@ 1482 train 10.1237 , allloss: 6642.3462, dt: 1121.43ms, fracRes: 0.2163, norm(attn): 7.4688, norm(output): 21.0000, norm(x): 16.7698, norm(y): 0.9537, norm:40859324416.0000, tok/sec: 116879.35, flops:45.54, batch-reuse:1
@ 1483 train 10.2732 , allloss: 6609.9062, dt: 1117.05ms, fracRes: 0.2513, norm(attn): 7.4375, norm(output): 21.8750, norm(x): 17.0143, norm(y): 0.9538, norm:1826180.2500, tok/sec: 117337.31, flops:45.71, batch-reuse:1
@ 1484 train 10.2107 , allloss: 6329.3032, dt: 1133.21ms, fracRes: 0.2763, norm(attn): 7.6562, norm(output): 21.8750, norm(x): 16.8680, norm(y): 0.9537, norm:1291936.0000, tok/sec: 115663.87, flops:45.06, batch-reuse:1
@ 1485 train 9.8532 , allloss: 6282.5796, dt: 1113.00ms, fracRes: 0.2926, norm(attn): 8.0000, norm(output): 21.8750, norm(x): 16.0416, norm(y): 0.9538, norm:5917.9531, tok/sec: 117765.09, flops:45.88, batch-reuse:1
@ 1486 train 9.8068 , allloss: 4700.8530, dt: 1137.23ms, fracRes: 0.3188, norm(attn): 7.5938, norm(output): 20.7500, norm(x): 14.9063, norm(y): 0.9542, norm:3687.3687, tok/sec: 115255.28, flops:44.90, batch-reuse:1
@ 1487 train 9.5618 , allloss: 3647.7910, dt: 1125.39ms, fracRes: 0.4788, norm(attn): 5.6875, norm(output): 16.5000, norm(x): 11.6609, norm(y): 0.9553, norm:30271.7129, tok/sec: 116468.14, flops:45.38, batch-reuse:1
@ 1488 train 10.2230 , allloss: 3482.8745, dt: 1115.92ms, fracRes: 0.4584, norm(attn): 5.5938, norm(output): 15.1875, norm(x): 11.0082, norm(y): 0.9542, norm:12133.7666, tok/sec: 117456.72, flops:45.76, batch-reuse:1
@ 1489 train 9.9313 , allloss: 3498.9062, dt: 1124.41ms, fracRes: 0.4249, norm(attn): 5.4062, norm(output): 14.3750, norm(x): 11.2559, norm(y): 0.9536, norm:5122.0913, tok/sec: 116570.01, flops:45.42, batch-reuse:1
@ 1490 train 9.8877 , allloss: 2785.2705, dt: 1128.22ms, fracRes: 0.4318, norm(attn): 5.1562, norm(output): 13.0000, norm(x): 10.4978, norm(y): 0.9537, norm:9917.0078, tok/sec: 116176.16, flops:45.26, batch-reuse:1
@ 1491 train 10.2569 , allloss: 4426.8340, dt: 1109.44ms, fracRes: 0.2592, norm(attn): 6.8750, norm(output): 15.8125, norm(x): 13.1071, norm(y): 0.9528, norm:7460.9819, tok/sec: 118141.99, flops:46.03, batch-reuse:1
@ 1492 train 10.4852 , allloss: 4515.1304, dt: 1114.35ms, fracRes: 0.2252, norm(attn): 7.4375, norm(output): 16.0000, norm(x): 13.5039, norm(y): 0.9513, norm:24159.6934, tok/sec: 117622.10, flops:45.83, batch-reuse:1
@ 1493 train 10.8836 , allloss: 4272.7607, dt: 1118.77ms, fracRes: 0.1691, norm(attn): 7.0625, norm(output): 14.3125, norm(x): 12.6184, norm(y): 0.9495, norm:62141.8477, tok/sec: 117157.55, flops:45.64, batch-reuse:1
@ 1494 train 10.9978 , allloss: 4819.3198, dt: 1128.35ms, fracRes: 0.2395, norm(attn): 6.1875, norm(output): 14.6250, norm(x): 12.1098, norm(y): 0.9497, norm:37464.8672, tok/sec: 116162.88, flops:45.26, batch-reuse:1
@ 1495 train 10.4094 , allloss: 7675.0938, dt: 1108.86ms, fracRes: 0.2328, norm(attn): 6.1562, norm(output): 18.5000, norm(x): 15.1314, norm(y): 0.9503, norm:279535.7188, tok/sec: 118204.74, flops:46.05, batch-reuse:1
@ 1496 train 9.8571 , allloss: 8309.2070, dt: 1123.09ms, fracRes: 0.2627, norm(attn): 6.0938, norm(output): 19.6250, norm(x): 15.6692, norm(y): 0.9499, norm:1324471.7500, tok/sec: 116706.66, flops:45.47, batch-reuse:1
@ 1497 train 10.5356 , allloss: 8158.2964, dt: 1139.81ms, fracRes: 0.2629, norm(attn): 6.0625, norm(output): 18.8750, norm(x): 15.4746, norm(y): 0.9489, norm:36321452.0000, tok/sec: 114995.05, flops:44.80, batch-reuse:1
@ 1498 train 11.8721 , allloss: 6064.6528, dt: 1103.87ms, fracRes: 0.2441, norm(attn): 6.6250, norm(output): 15.3750, norm(x): 13.4615, norm(y): 0.9482, norm:944686.1250, tok/sec: 118738.40, flops:46.26, batch-reuse:1
@ 1499 train 11.6566 , allloss: 4015.2759, dt: 1132.48ms, fracRes: 0.2015, norm(attn): 6.9688, norm(output): 12.7500, norm(x): 11.3024, norm(y): 0.9461, norm:198593.3750, tok/sec: 115738.68, flops:45.09, batch-reuse:1
@ 1500 train 12.4335 , allloss: 3409.2805, dt: 1116.33ms, fracRes: 0.1847, norm(attn): 7.7500, norm(output): 12.3750, norm(x): 10.7930, norm(y): 0.9432, norm:114235.9453, tok/sec: 117413.27, flops:45.74, batch-reuse:1
@ 1501 train 12.2726 , allloss: 3049.0405, dt: 1117.37ms, fracRes: 0.1010, norm(attn): 9.1250, norm(output): 12.5000, norm(x): 11.4786, norm(y): 0.9432, norm:2017239.7500, tok/sec: 117303.66, flops:45.70, batch-reuse:1
@ 1502 train 11.8705 , allloss: 2917.2085, dt: 1118.52ms, fracRes: 0.0806, norm(attn): 9.6250, norm(output): 12.5000, norm(x): 11.5116, norm(y): 0.9443, norm:24160.3926, tok/sec: 117183.07, flops:45.65, batch-reuse:1
@ 1503 train 11.8271 , allloss: 2999.1284, dt: 1117.14ms, fracRes: 0.2961, norm(attn): 10.3750, norm(output): 12.3750, norm(x): 10.9890, norm(y): 0.9451, norm:784.0017, tok/sec: 117327.75, flops:45.71, batch-reuse:1
@ 1504 train 11.1320 , allloss: 2657.7446, dt: 1136.84ms, fracRes: 0.4818, norm(attn): 8.5000, norm(output): 11.8125, norm(x): 10.1019, norm(y): 0.9450, norm:993.1259, tok/sec: 115295.09, flops:44.92, batch-reuse:1
@ 1505 train 10.9821 , allloss: 2653.9128, dt: 1136.24ms, fracRes: 0.5325, norm(attn): 8.0625, norm(output): 12.6875, norm(x): 10.3163, norm(y): 0.9453, norm:583.7963, tok/sec: 115355.62, flops:44.94, batch-reuse:1
@ 1506 train 11.2019 , allloss: 2647.5210, dt: 1122.16ms, fracRes: 0.5386, norm(attn): 8.0625, norm(output): 13.4375, norm(x): 10.5901, norm(y): 0.9452, norm:649.5247, tok/sec: 116802.94, flops:45.51, batch-reuse:1
@ 1507 train 11.6350 , allloss: 2784.4492, dt: 1138.36ms, fracRes: 0.4900, norm(attn): 9.1250, norm(output): 15.2500, norm(x): 11.8576, norm(y): 0.9452, norm:726.8352, tok/sec: 115141.22, flops:44.86, batch-reuse:1
@ 1508 train 11.6210 , allloss: 2964.8523, dt: 1127.49ms, fracRes: 0.4512, norm(attn): 9.6250, norm(output): 17.0000, norm(x): 13.0642, norm(y): 0.9452, norm:972.9129, tok/sec: 116251.63, flops:45.29, batch-reuse:1
@ 1509 train 11.5654 , allloss: 3022.3125, dt: 1122.09ms, fracRes: 0.4711, norm(attn): 8.8750, norm(output): 17.2500, norm(x): 13.0249, norm(y): 0.9456, norm:858.4292, tok/sec: 116810.93, flops:45.51, batch-reuse:1
@ 1510 train 11.5503 , allloss: 2945.3474, dt: 1121.12ms, fracRes: 0.5090, norm(attn): 7.1875, norm(output): 16.1250, norm(x): 12.4839, norm(y): 0.9459, norm:992.6253, tok/sec: 116911.84, flops:45.55, batch-reuse:1
@ 1511 train 11.3561 , allloss: 3066.2512, dt: 1138.70ms, fracRes: 0.5095, norm(attn): 7.5312, norm(output): 18.6250, norm(x): 13.8567, norm(y): 0.9468, norm:1041.9330, tok/sec: 115106.72, flops:44.85, batch-reuse:1
@ 1512 train 11.1622 , allloss: 3076.7290, dt: 1101.36ms, fracRes: 0.5100, norm(attn): 8.0000, norm(output): 21.7500, norm(x): 15.1554, norm(y): 0.9476, norm:1127.5040, tok/sec: 119008.70, flops:46.37, batch-reuse:1
@ 1513 train 10.9388 , allloss: 3178.9092, dt: 1112.57ms, fracRes: 0.5099, norm(attn): 8.6875, norm(output): 26.2500, norm(x): 17.2065, norm(y): 0.9486, norm:1297.1515, tok/sec: 117810.19, flops:45.90, batch-reuse:1
@ 1514 train 10.7918 , allloss: 3254.6636, dt: 1119.74ms, fracRes: 0.5097, norm(attn): 9.3750, norm(output): 31.7500, norm(x): 19.5441, norm(y): 0.9496, norm:1178.9860, tok/sec: 117055.94, flops:45.60, batch-reuse:1
@ 1515 train 10.6247 , allloss: 3368.4648, dt: 1128.19ms, fracRes: 0.5106, norm(attn): 10.3125, norm(output): 38.5000, norm(x): 22.4175, norm(y): 0.9505, norm:1387.0853, tok/sec: 116179.13, flops:45.26, batch-reuse:1
@ 1516 train 10.4324 , allloss: 3668.2693, dt: 1108.90ms, fracRes: 0.5109, norm(attn): 11.3125, norm(output): 47.0000, norm(x): 26.5627, norm(y): 0.9515, norm:1433.8136, tok/sec: 118200.01, flops:46.05, batch-reuse:1
@ 1517 train 10.3163 , allloss: 3868.8081, dt: 1117.80ms, fracRes: 0.5114, norm(attn): 12.1875, norm(output): 56.7500, norm(x): 30.5143, norm(y): 0.9524, norm:2559.6353, tok/sec: 117258.70, flops:45.68, batch-reuse:1
@ 1518 train 10.1919 , allloss: 4339.3979, dt: 1132.77ms, fracRes: 0.5203, norm(attn): 12.9375, norm(output): 66.0000, norm(x): 34.2434, norm(y): 0.9532, norm:4809.2686, tok/sec: 115709.42, flops:45.08, batch-reuse:1
@ 1519 train 10.0935 , allloss: 4584.0718, dt: 1132.40ms, fracRes: 0.5150, norm(attn): 14.1250, norm(output): 79.5000, norm(x): 39.8287, norm(y): 0.9538, norm:5027.3882, tok/sec: 115746.94, flops:45.10, batch-reuse:1
@ 1520 train 10.0234 , allloss: 4718.8447, dt: 1136.57ms, fracRes: 0.5092, norm(attn): 15.1875, norm(output): 92.0000, norm(x): 45.8385, norm(y): 0.9544, norm:1417.0457, tok/sec: 115322.54, flops:44.93, batch-reuse:1
@ 1521 train 9.8751 , allloss: 5134.8804, dt: 1128.51ms, fracRes: 0.5076, norm(attn): 16.5000, norm(output): 104.0000, norm(x): 51.7638, norm(y): 0.9550, norm:1489.2410, tok/sec: 116146.31, flops:45.25, batch-reuse:1
@ 1522 train 9.7772 , allloss: 5585.4556, dt: 1104.98ms, fracRes: 0.5058, norm(attn): 17.7500, norm(output): 120.0000, norm(x): 58.4182, norm(y): 0.9557, norm:1519.9076, tok/sec: 118619.73, flops:46.21, batch-reuse:1
@ 1523 train 9.6775 , allloss: 5980.2534, dt: 1145.31ms, fracRes: 0.5042, norm(attn): 18.7500, norm(output): 135.0000, norm(x): 65.3324, norm(y): 0.9563, norm:2527.9814, tok/sec: 114441.91, flops:44.59, batch-reuse:1
@ 1524 train 9.4864 , allloss: 5503.5005, dt: 1122.32ms, fracRes: 0.4360, norm(attn): 23.2500, norm(output): 174.0000, norm(x): 90.9377, norm(y): 0.9568, norm:1602.2754, tok/sec: 116786.39, flops:45.50, batch-reuse:1
@ 1525 train 9.3894 , allloss: 5573.1548, dt: 1435.33ms, fracRes: 0.4350, norm(attn): 24.3750, norm(output): 192.0000, norm(x): 100.6324, norm(y): 0.9574, norm:1873.3248, tok/sec: 91318.50, flops:35.58, batch-reuse:1
@ 1526 train 9.3628 , allloss: 5759.2656, dt: 1123.34ms, fracRes: 0.4346, norm(attn): 25.8750, norm(output): 212.0000, norm(x): 110.5025, norm(y): 0.9579, norm:1820.2167, tok/sec: 116680.33, flops:45.46, batch-reuse:1
@ 1527 train 9.2672 , allloss: 6664.7783, dt: 1123.64ms, fracRes: 0.5030, norm(attn): 24.2500, norm(output): 212.0000, norm(x): 97.5717, norm(y): 0.9584, norm:1920.2539, tok/sec: 116649.92, flops:45.45, batch-reuse:1
@ 1528 train 9.2174 , allloss: 6519.7441, dt: 1109.87ms, fracRes: 0.5038, norm(attn): 25.5000, norm(output): 225.0000, norm(x): 102.8638, norm(y): 0.9587, norm:2451.9092, tok/sec: 118096.24, flops:46.01, batch-reuse:1
@ 1529 train 9.1235 , allloss: 6281.9756, dt: 1126.75ms, fracRes: 0.5033, norm(attn): 25.8750, norm(output): 242.0000, norm(x): 108.9512, norm(y): 0.9589, norm:11191.7979, tok/sec: 116327.59, flops:45.32, batch-reuse:1
@ 1530 train 9.1375 , allloss: 5381.5166, dt: 1136.78ms, fracRes: 0.4361, norm(attn): 28.1250, norm(output): 274.0000, norm(x): 137.6107, norm(y): 0.9591, norm:2165.2612, tok/sec: 115301.11, flops:44.92, batch-reuse:1
@ 1531 train 9.0219 , allloss: 5051.2686, dt: 1117.22ms, fracRes: 0.4372, norm(attn): 29.6250, norm(output): 288.0000, norm(x): 144.1340, norm(y): 0.9593, norm:2905.0618, tok/sec: 117319.56, flops:45.71, batch-reuse:1
@ 1532 train 9.0256 , allloss: 4677.3335, dt: 1142.41ms, fracRes: 0.4385, norm(attn): 29.8750, norm(output): 304.0000, norm(x): 151.9232, norm(y): 0.9595, norm:2119.7136, tok/sec: 114733.39, flops:44.70, batch-reuse:1
@ 1533 train 8.9997 , allloss: 5327.4614, dt: 1130.82ms, fracRes: 0.5090, norm(attn): 28.0000, norm(output): 294.0000, norm(x): 128.5425, norm(y): 0.9597, norm:1937.0114, tok/sec: 115908.37, flops:45.16, batch-reuse:1
@ 1534 train 9.0289 , allloss: 5198.2666, dt: 1116.95ms, fracRes: 0.5096, norm(attn): 28.1250, norm(output): 318.0000, norm(x): 134.8311, norm(y): 0.9599, norm:1469.1700, tok/sec: 117347.93, flops:45.72, batch-reuse:1
@ 1535 train 9.0567 , allloss: 4787.0117, dt: 1133.91ms, fracRes: 0.5102, norm(attn): 29.5000, norm(output): 324.0000, norm(x): 140.6646, norm(y): 0.9601, norm:3169.7964, tok/sec: 115592.59, flops:45.03, batch-reuse:1
@ 1536 train 8.9949 , allloss: 4314.5239, dt: 1124.42ms, fracRes: 0.5110, norm(attn): 29.5000, norm(output): 340.0000, norm(x): 144.1230, norm(y): 0.9602, norm:1708.7758, tok/sec: 116568.40, flops:45.42, batch-reuse:1
@ 1537 train 8.9701 , allloss: 3742.6301, dt: 1112.45ms, fracRes: 0.5123, norm(attn): 29.5000, norm(output): 342.0000, norm(x): 144.7651, norm(y): 0.9603, norm:2073.2644, tok/sec: 117823.24, flops:45.90, batch-reuse:1
@ 1538 train 8.9729 , allloss: 3462.4141, dt: 1113.71ms, fracRes: 0.5156, norm(attn): 29.5000, norm(output): 342.0000, norm(x): 143.7393, norm(y): 0.9603, norm:10317.1201, tok/sec: 117689.41, flops:45.85, batch-reuse:1
@ 1539 train 9.0557 , allloss: 4411.1416, dt: 1126.08ms, fracRes: 0.5255, norm(attn): 28.2500, norm(output): 332.0000, norm(x): 137.4342, norm(y): 0.9603, norm:35491.8008, tok/sec: 116397.09, flops:45.35, batch-reuse:1
@ 1540 train 8.9914 , allloss: 3501.9390, dt: 1133.24ms, fracRes: 0.5149, norm(attn): 28.5000, norm(output): 342.0000, norm(x): 143.3387, norm(y): 0.9603, norm:30139.6816, tok/sec: 115661.46, flops:45.06, batch-reuse:1
@ 1541 train 9.0096 , allloss: 2681.9133, dt: 1124.66ms, fracRes: 0.4457, norm(attn): 28.5000, norm(output): 350.0000, norm(x): 167.0675, norm(y): 0.9603, norm:3261.1262, tok/sec: 116543.54, flops:45.41, batch-reuse:1
@ 1542 train 9.0251 , allloss: 2757.5686, dt: 1140.13ms, fracRes: 0.4463, norm(attn): 28.2500, norm(output): 332.0000, norm(x): 161.4202, norm(y): 0.9602, norm:3927.5603, tok/sec: 114962.25, flops:44.79, batch-reuse:1
@ 1543 train 9.2947 , allloss: 2860.8171, dt: 1150.05ms, fracRes: 0.4467, norm(attn): 27.5000, norm(output): 316.0000, norm(x): 152.1114, norm(y): 0.9599, norm:4078.4541, tok/sec: 113970.33, flops:44.40, batch-reuse:1
@ 1544 train 8.9401 , allloss: 3036.9185, dt: 1114.25ms, fracRes: 0.4484, norm(attn): 26.0000, norm(output): 290.0000, norm(x): 141.4185, norm(y): 0.9597, norm:1766.1019, tok/sec: 117632.80, flops:45.83, batch-reuse:1
@ 1545 train 9.0922 , allloss: 3115.3630, dt: 1129.64ms, fracRes: 0.4473, norm(attn): 24.5000, norm(output): 268.0000, norm(x): 129.5294, norm(y): 0.9593, norm:3209.4277, tok/sec: 116030.10, flops:45.21, batch-reuse:1
@ 1546 train 9.1121 , allloss: 3247.9771, dt: 1118.34ms, fracRes: 0.4466, norm(attn): 24.0000, norm(output): 244.0000, norm(x): 120.6363, norm(y): 0.9589, norm:1606.5413, tok/sec: 117201.78, flops:45.66, batch-reuse:1
@ 1547 train 8.9626 , allloss: 3281.5034, dt: 1101.62ms, fracRes: 0.4458, norm(attn): 23.3750, norm(output): 227.0000, norm(x): 114.3358, norm(y): 0.9587, norm:1411.3339, tok/sec: 118981.17, flops:46.36, batch-reuse:1
@ 1548 train 9.0339 , allloss: 3169.2102, dt: 1132.56ms, fracRes: 0.4448, norm(attn): 23.3750, norm(output): 224.0000, norm(x): 112.0462, norm(y): 0.9585, norm:2542.7234, tok/sec: 115731.15, flops:45.09, batch-reuse:1
@ 1549 train 8.9413 , allloss: 2976.3496, dt: 1137.40ms, fracRes: 0.4440, norm(attn): 23.3750, norm(output): 225.0000, norm(x): 112.2691, norm(y): 0.9583, norm:1385.9580, tok/sec: 115237.84, flops:44.90, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0054,     0.0000,     0.0058,     0.9062,     0.0136,     0.0513,     0.0178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.9922,     0.0000,     0.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0071,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.9766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0219,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0006,     0.0006,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0126,  0.0030, -0.0409,  ...,  0.0060,  0.0193, -0.0269],
        [-0.0038,  0.0125,  0.0307,  ...,  0.0155, -0.0168,  0.0335],
        [ 0.0175, -0.0285, -0.0411,  ..., -0.0091,  0.0139, -0.0220],
        ...,
        [-0.0011,  0.0001, -0.0290,  ..., -0.0125,  0.0538,  0.0366],
        [-0.0118,  0.0238, -0.0383,  ...,  0.0191,  0.0460, -0.0212],
        [-0.0097, -0.0130,  0.0025,  ...,  0.0172, -0.0909, -0.0143]], device='cuda:0', requires_grad=True)
K: tensor([-2.4219,  0.9180,  0.1377,  1.6797,  0.3379,  0.3633,  1.6250, -0.2793, -2.0000, -0.1270,  2.2500, -2.0625, -1.1953, -0.1235,  1.1484, -1.9219,  2.2500,  1.9766, -2.7031, -0.4336, -0.6367,  0.7773,  1.3984,  0.1777,  0.5039,  1.7812, -0.9453, -0.8984,  0.4434, -1.6562,  0.6328,  1.2109,
         1.2266, -0.7031,  2.4375, -0.9414,  3.6094,  0.7188,  0.2637,  0.7070,  2.2344,  1.1172, -1.3125,  1.1875,  0.9062,  0.2295,  0.9453,  1.2578,  0.1699, -3.5000,  2.0156,  1.2578,  0.0801,  1.9531,  1.4609,  0.9492, -1.7891,  2.2188,  1.3125,  3.4688, -0.5586,  0.0250, -1.8047,  1.6797],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0155,  0.0535,  ..., -0.0100, -0.0349,  0.0424],
        [ 0.0288,  0.0056, -0.0959,  ..., -0.0148,  0.0279, -0.0072],
        [ 0.0294,  0.0108,  0.0709,  ..., -0.0181, -0.0779, -0.0378],
        ...,
        [ 0.0061,  0.0042,  0.0404,  ..., -0.0193, -0.0391,  0.0153],
        [-0.0258,  0.0031, -0.0304,  ..., -0.0300, -0.0408,  0.0319],
        [-0.0377,  0.0341, -0.0132,  ...,  0.0333,  0.0809, -0.0339]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.7344, -1.5391,  0.4434, -1.8281, -0.3691, -0.3027, -2.1250,  1.7734,  2.1562, -0.1709, -1.3984,  1.1719,  1.3828,  0.5156,  1.0078,  2.1094, -1.8750, -2.0938,  0.4492,  0.0435,  1.2969, -0.8047, -2.5625, -1.0312,  0.2305,  1.5078,  1.2109,  1.8125, -1.5078,  2.0781,  0.8867, -1.8047,
        -1.9375,  0.5938, -0.2422,  1.5234, -1.8047, -0.8438,  0.4375, -1.9688, -1.2031, -0.7773,  0.8281, -1.1562, -0.8867,  0.2539, -0.8789, -1.2188, -1.2344,  2.5000, -0.9648, -0.4648, -1.7891, -1.2734, -0.1689,  1.0312,  0.5742, -2.2500, -1.3047, -1.4531, -0.0156,  1.2656,  1.8750, -1.0312],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -68.0000,    -10.2500,     15.1875,    -16.7500,    -29.7500,     -2.3906,    -14.8750,    -25.5000,     -4.6562,     -3.5312,     -3.7656,     13.7500,     -3.5625,    -22.7500],
        [     0.0000,    -30.6250,     -5.4688,     14.9375,     -5.8750,     -5.5312,      0.6133,     -8.0625,     -6.0000,      3.7969,      4.1250,     -5.4375,      2.2500,      9.6875,     -6.6562],
        [     0.0000,     63.2500,     21.5000,    -48.2500,    -11.9375,      6.3125,     -4.5000,     37.7500,      1.6328,    -19.0000,    -31.7500,     20.3750,      1.5391,    -35.0000,     13.5625],
        [     0.0000,     23.0000,     10.6875,    -16.5000,     -4.4375,      2.6719,     -2.8125,     12.3750,     -0.1147,     -5.6250,    -12.6875,      8.5625,      0.3887,    -13.2500,      6.4688],
        [     0.0000,    -35.5000,     -6.6562,     11.2500,     -7.8750,     -9.8125,      0.7461,     -7.6875,    -12.6250,     -1.3125,      1.0312,     -6.5625,      6.0000,      4.1875,     -8.7500],
        [     0.0000,     -6.1250,      0.0693,      5.1250,      0.9219,      2.2500,      1.1875,     -3.1875,     -0.8906,      1.6797,      2.6250,     -2.1562,     -0.0327,      4.4688,      0.6328],
        [     0.0000,    -41.0000,    -11.6250,     12.5625,     -6.6250,    -14.6250,      0.5391,     -9.8750,    -11.3125,     -0.6445,      4.2188,     -6.6875,      5.5938,      4.5000,    -13.2500],
        [     0.0000,     56.7500,     17.7500,    -33.0000,      4.9062,      8.5625,     -3.5938,     20.8750,      5.6250,     -9.6875,    -17.1250,     16.1250,     -3.1562,    -26.0000,     12.7500],
        [     0.0000,     13.3750,     10.9375,    -31.1250,    -20.0000,    -11.7500,     -3.4844,     24.1250,    -13.1875,    -19.8750,    -27.6250,     14.6875,     10.6250,    -32.5000,     -1.5234],
        [     0.0000,    100.0000,     34.7500,    -61.7500,     -1.9141,     16.8750,     -6.6250,     44.5000,      6.4375,    -20.7500,    -37.2500,     28.3750,     -2.1875,    -48.2500,     24.5000],
        [     0.0000,    -25.1250,     -6.2812,     10.1250,     -2.1562,     -6.4688,      2.8438,     -8.1250,     -7.1562,      0.0535,      5.1875,     -4.4375,      3.7344,      2.7812,     -6.6250],
        [     0.0000,    -27.2500,    -16.0000,     29.5000,     14.3750,      2.5938,      4.2812,    -22.8750,      8.6875,     16.6250,     25.7500,    -13.8125,     -8.3125,     30.0000,     -6.2500],
        [     0.0000,     63.5000,     25.3750,    -43.5000,     -9.3125,      8.1250,     -6.7500,     33.2500,      2.5625,    -13.9375,    -31.1250,     22.0000,     -1.0312,    -33.5000,     14.6875],
        [     0.0000,    -46.7500,     -8.2500,     15.2500,    -11.0000,    -15.6875,     -0.2061,    -12.2500,    -13.3125,      0.5547,      1.1875,     -7.3750,      7.7812,      7.7812,    -13.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.5845],
        [    0.2680],
        [    0.0004],
        [    0.0833],
        [    0.0013],
        [    0.0072],
        [    0.0005],
        [    0.0000],
        [    0.0021],
        [    0.0000],
        [    0.0022],
        [    0.0018],
        [    0.0001],
        [    0.0020]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1504,     0.8477,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0806,     0.6758,     0.2451,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0317,     0.7891,     0.1768,     0.0037,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0527,     0.6914,     0.2090,     0.0098,     0.0374,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0417,     0.7109,     0.1914,     0.0065,     0.0283,     0.0208,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0229,     0.0825,     0.0444,     0.0106,     0.0211,     0.0178,     0.8008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0027,     0.0243,     0.0085,     0.0007,     0.0021,     0.0017,     0.9570,     0.0038,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0017,     0.0188,     0.0061,     0.0004,     0.0013,     0.0010,     0.9648,     0.0026,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0008,     0.0115,     0.0032,     0.0001,     0.0005,     0.0004,     0.9805,     0.0012,     0.0008,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0007,     0.0109,     0.0030,     0.0001,     0.0005,     0.0003,     0.9805,     0.0011,     0.0008,     0.0003,     0.0007,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0310,     0.0830,     0.0500,     0.0200,     0.0344,     0.0303,     0.5586,     0.0337,     0.0312,     0.0259,     0.0388,     0.0620,     0.0000,     0.0000],
        [    0.0000,     0.0014,     0.0160,     0.0049,     0.0003,     0.0010,     0.0008,     0.9453,     0.0020,     0.0015,     0.0007,     0.0015,     0.0247,     0.0017,     0.0000],
        [    0.0000,     0.0030,     0.0255,     0.0093,     0.0008,     0.0024,     0.0018,     0.8867,     0.0043,     0.0032,     0.0017,     0.0033,     0.0334,     0.0037,     0.0212]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0126,  0.0030, -0.0409,  ...,  0.0060,  0.0193, -0.0269],
        [-0.0038,  0.0125,  0.0307,  ...,  0.0155, -0.0168,  0.0335],
        [ 0.0175, -0.0285, -0.0411,  ..., -0.0091,  0.0139, -0.0220],
        ...,
        [-0.0011,  0.0001, -0.0290,  ..., -0.0125,  0.0538,  0.0366],
        [-0.0118,  0.0238, -0.0383,  ...,  0.0191,  0.0460, -0.0212],
        [-0.0097, -0.0130,  0.0025,  ...,  0.0172, -0.0909, -0.0143]], device='cuda:0', requires_grad=True)
K: tensor([ 6.1250, -6.1562,  4.0625, -6.1875,  7.5625, -4.9688, -4.7812, -4.1875,  0.6172,  3.3594, -6.3438,  5.6875,  6.5312, -6.5312,  6.2812,  4.7188, -1.5000, -4.2500, -2.3281,  7.5938,  7.3750, -0.2656, -2.0156,  1.1406,  4.4062, -0.9062,  6.8750, -0.6562, -1.6641,  4.7188,  3.9844, -0.6406,
        -6.3750,  6.6250, -6.9688,  2.9062, -5.0938, -6.9062, -1.8594, -5.3750, -6.5625, -4.0000,  5.6250, -1.5312, -5.5938, -5.5938, -1.2734, -5.7500, -8.5000,  5.2500, -2.7188, -5.4375,  5.3438, -1.5547,  4.3438,  7.8125,  3.1562, -6.8750, -5.1250, -7.4375,  2.8438,  5.4375,  2.4531, -6.5312],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0155,  0.0535,  ..., -0.0100, -0.0349,  0.0424],
        [ 0.0288,  0.0056, -0.0959,  ..., -0.0148,  0.0279, -0.0072],
        [ 0.0294,  0.0108,  0.0709,  ..., -0.0181, -0.0779, -0.0378],
        ...,
        [ 0.0061,  0.0042,  0.0404,  ..., -0.0193, -0.0391,  0.0153],
        [-0.0258,  0.0031, -0.0304,  ..., -0.0300, -0.0408,  0.0319],
        [-0.0377,  0.0341, -0.0132,  ...,  0.0333,  0.0809, -0.0339]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.8086,      0.4609,      3.4219,     -2.5312,      1.4141,     -3.7344,     -3.4219,     -2.6094,     -0.2773,      1.6562,      0.5469,     -0.9648,      2.1406,     -2.5312,      1.9453,      0.6992,      0.2041,     -0.7461,     -2.5938,      1.6016,      0.6680,      1.2656,
             0.1875,     -0.3555,      1.9062,      1.2500,      2.4844,     -2.0312,     -1.6328,      1.7656,      1.7266,     -1.6328,      0.1328,      3.2812,     -0.4199,      2.3906,      1.2500,     -2.3125,     -1.5234,     -4.7812,      0.0018,     -0.3301,      2.7656,     -0.1182,
            -2.6875,     -1.6641,      0.3418,     -2.6094,     -2.5625,     -0.8047,     -0.1846,     -0.8906,      2.8438,     -0.7070,      2.4531,      1.2422,      0.9336,      0.4238,     -1.4531,      2.4375,      1.8125,      3.6406,      0.7578,     -2.5000], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 48.0000, 50.0000, 49.0000, 46.5000, 47.7500, 47.5000, 53.5000, 48.2500, 48.0000, 47.5000, 48.0000, 50.2500, 48.2500, 49.7500],
        [ 0.0000, 40.5000, 42.0000, 41.2500, 39.2500, 40.2500, 40.0000, 45.0000, 40.7500, 40.5000, 40.0000, 40.5000, 42.2500, 40.5000, 42.0000],
        [ 0.0000, 47.2500, 49.2500, 48.2500, 45.7500, 47.0000, 46.7500, 52.7500, 47.5000, 47.2500, 46.7500, 47.2500, 49.5000, 47.2500, 49.2500],
        [ 0.0000, 68.5000, 71.5000, 70.0000, 66.5000, 68.0000, 67.5000, 77.0000, 69.0000, 68.5000, 67.5000, 68.5000, 72.5000, 69.0000, 71.0000],
        [ 0.0000, 58.2500, 60.7500, 59.5000, 56.5000, 57.7500, 57.5000, 65.0000, 58.7500, 58.2500, 57.5000, 58.2500, 61.2500, 58.5000, 60.5000],
        [ 0.0000, 62.7500, 65.5000, 64.5000, 61.0000, 62.2500, 62.0000, 70.0000, 63.2500, 62.7500, 62.0000, 62.7500, 66.0000, 63.0000, 65.0000],
        [ 0.0000, 33.5000, 34.7500, 34.2500, 32.7500, 33.5000, 33.2500, 37.0000, 33.7500, 33.5000, 33.2500, 33.5000, 34.7500, 33.5000, 34.7500],
        [ 0.0000, 49.0000, 51.0000, 50.0000, 47.5000, 48.7500, 48.5000, 54.7500, 49.2500, 49.0000, 48.2500, 49.0000, 51.5000, 49.0000, 51.0000],
        [ 0.0000, 52.5000, 54.7500, 53.7500, 51.0000, 52.2500, 52.0000, 58.7500, 52.7500, 52.5000, 51.7500, 52.5000, 55.2500, 52.7500, 54.5000],
        [ 0.0000, 59.0000, 61.5000, 60.2500, 57.0000, 58.5000, 58.2500, 66.0000, 59.2500, 59.0000, 58.2500, 59.0000, 62.2500, 59.2500, 61.2500],
        [ 0.0000, 61.0000, 63.7500, 62.5000, 59.2500, 60.7500, 60.2500, 68.5000, 61.5000, 61.2500, 60.2500, 61.0000, 64.5000, 61.2500, 63.5000],
        [ 0.0000, 26.0000, 26.8750, 26.3750, 25.5000, 26.0000, 25.8750, 28.8750, 26.0000, 26.0000, 25.7500, 26.1250, 26.6250, 26.0000, 27.1250],
        [ 0.0000, 53.2500, 55.7500, 54.7500, 51.7500, 53.0000, 52.7500, 60.0000, 53.7500, 53.5000, 52.7500, 53.5000, 56.2500, 53.5000, 55.5000],
        [ 0.0000, 49.0000, 51.0000, 50.0000, 47.5000, 48.7500, 48.5000, 54.7500, 49.2500, 49.0000, 48.5000, 49.0000, 51.2500, 49.2500, 51.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5039,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3359,     0.3340,     0.3301,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2480,     0.2461,     0.2539,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1992,     0.1982,     0.1963,     0.2031,     0.2031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1650,     0.1641,     0.1631,     0.1680,     0.1689,     0.1709,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1416,     0.1406,     0.1396,     0.1445,     0.1445,     0.1465,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1240,     0.1230,     0.1221,     0.1260,     0.1260,     0.1279,     0.1270,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1104,     0.1094,     0.1084,     0.1123,     0.1123,     0.1138,     0.1123,     0.1108,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0991,     0.0986,     0.0977,     0.1011,     0.1011,     0.1025,     0.1016,     0.0996,     0.1001,     0.0981,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0903,     0.0898,     0.0894,     0.0923,     0.0923,     0.0938,     0.0923,     0.0908,     0.0913,     0.0894,     0.0884,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0825,     0.0820,     0.0815,     0.0845,     0.0845,     0.0854,     0.0845,     0.0830,     0.0835,     0.0815,     0.0811,     0.0864,     0.0000,     0.0000],
        [    0.0000,     0.0762,     0.0757,     0.0752,     0.0776,     0.0776,     0.0791,     0.0781,     0.0767,     0.0771,     0.0752,     0.0747,     0.0796,     0.0767,     0.0000],
        [    0.0000,     0.0713,     0.0703,     0.0698,     0.0723,     0.0723,     0.0732,     0.0728,     0.0713,     0.0718,     0.0703,     0.0693,     0.0742,     0.0713,     0.0698]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0126,  0.0030, -0.0409,  ...,  0.0060,  0.0193, -0.0269],
        [-0.0038,  0.0125,  0.0307,  ...,  0.0155, -0.0168,  0.0335],
        [ 0.0175, -0.0285, -0.0411,  ..., -0.0091,  0.0139, -0.0220],
        ...,
        [-0.0011,  0.0001, -0.0290,  ..., -0.0125,  0.0538,  0.0366],
        [-0.0118,  0.0238, -0.0383,  ...,  0.0191,  0.0460, -0.0212],
        [-0.0097, -0.0130,  0.0025,  ...,  0.0172, -0.0909, -0.0143]], device='cuda:0', requires_grad=True)
K: tensor([ 6.0625, -6.0938,  3.7812, -6.0625,  7.6562, -4.7812, -4.7812, -4.0000,  0.6914,  3.3438, -6.4062,  5.9375,  6.4688, -6.6875,  6.0312,  4.6562, -1.3125, -4.3750, -2.0469,  7.6250,  7.1875, -0.5117, -2.1719,  1.0000,  4.4375, -0.9844,  6.9688, -0.5781, -1.6875,  4.8125,  3.3906, -0.7539,
        -6.0000,  6.5625, -7.0938,  2.9375, -5.0938, -6.7500, -1.4141, -5.2812, -6.5625, -3.9062,  5.6562, -1.4922, -5.5312, -5.4688, -1.1875, -5.3750, -8.5000,  5.0625, -2.9531, -5.5938,  5.4688, -1.9062,  3.9375,  7.7188,  3.3438, -7.0000, -5.1250, -7.3438,  2.6250,  5.1875,  2.7812, -6.3438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0155,  0.0535,  ..., -0.0100, -0.0349,  0.0424],
        [ 0.0288,  0.0056, -0.0959,  ..., -0.0148,  0.0279, -0.0072],
        [ 0.0294,  0.0108,  0.0709,  ..., -0.0181, -0.0779, -0.0378],
        ...,
        [ 0.0061,  0.0042,  0.0404,  ..., -0.0193, -0.0391,  0.0153],
        [-0.0258,  0.0031, -0.0304,  ..., -0.0300, -0.0408,  0.0319],
        [-0.0377,  0.0341, -0.0132,  ...,  0.0333,  0.0809, -0.0339]], device='cuda:0', requires_grad=True)
Q: tensor([    -1.5469,      1.0547,      3.1094,     -1.7344,      0.8320,     -2.7969,     -2.2812,     -2.5312,     -0.4551,      1.0469,      0.8281,     -1.3047,      1.3672,     -2.2656,      1.4766,     -0.0027,      1.1328,     -0.1426,     -2.6094,      1.0781,     -0.2041,      1.6797,
             0.6680,     -0.5469,      1.1953,      1.5547,      1.3828,     -2.4219,     -0.8281,      0.7969,      1.7891,     -1.5703,      0.4902,      2.6094,      0.3574,      1.5156,      1.9766,     -1.4297,     -1.5938,     -3.8906,      0.9492,     -0.2266,      2.1094,      0.4785,
            -2.0781,     -1.2266,      0.9258,     -1.7812,     -1.8281,     -1.6797,      0.2227,     -0.2285,      2.2344,     -0.4922,      2.5000,      0.7227,      0.4160,      1.5312,     -0.6875,      2.8594,      1.4688,      2.9688,      0.3906,     -1.8281], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 27.2500, 27.1250, 27.1250, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.1250, 27.1250, 27.2500, 27.2500, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500],
        [ 0.0000, 27.2500, 27.2500, 27.2500, 27.3750, 27.3750, 27.3750, 27.3750, 27.2500, 27.3750, 27.2500, 27.2500, 27.3750, 27.2500, 27.2500],
        [ 0.0000, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500],
        [ 0.0000, 27.2500, 27.2500, 27.1250, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.1250, 27.1250, 27.2500, 27.2500, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500, 27.2500],
        [ 0.0000, 27.3750, 27.3750, 27.2500, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.2500, 27.2500, 27.3750, 27.3750, 27.2500],
        [ 0.0000, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750],
        [ 0.0000, 27.3750, 27.3750, 27.3750, 27.5000, 27.5000, 27.5000, 27.5000, 27.3750, 27.3750, 27.3750, 27.3750, 27.5000, 27.3750, 27.3750],
        [ 0.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000, 27.0000],
        [ 0.0000, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750],
        [ 0.0000, 27.2500, 27.2500, 27.2500, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.3750, 27.2500, 27.2500, 27.3750, 27.2500, 27.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3340,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2500,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2002,     0.2002,     0.2002,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1670,     0.1670,     0.1670,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0000],
        [    0.0000,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0126,  0.0030, -0.0409,  ...,  0.0060,  0.0193, -0.0269],
        [-0.0038,  0.0125,  0.0307,  ...,  0.0155, -0.0168,  0.0335],
        [ 0.0175, -0.0285, -0.0411,  ..., -0.0091,  0.0139, -0.0220],
        ...,
        [-0.0011,  0.0001, -0.0290,  ..., -0.0125,  0.0538,  0.0366],
        [-0.0118,  0.0238, -0.0383,  ...,  0.0191,  0.0460, -0.0212],
        [-0.0097, -0.0130,  0.0025,  ...,  0.0172, -0.0909, -0.0143]], device='cuda:0', requires_grad=True)
K: tensor([ 6.0625, -6.0938,  3.7812, -6.0625,  7.6562, -4.7812, -4.7812, -4.0000,  0.6914,  3.3438, -6.4062,  5.9375,  6.4688, -6.7188,  6.0312,  4.6562, -1.3047, -4.3750, -2.0469,  7.5938,  7.1562, -0.5156, -2.1719,  0.9961,  4.4375, -0.9883,  6.9688, -0.5859, -1.6875,  4.8125,  3.3750, -0.7539,
        -5.9688,  6.5625, -7.0938,  2.9375, -5.0938, -6.7500, -1.4062, -5.2812, -6.5625, -3.8906,  5.6562, -1.4844, -5.5312, -5.5000, -1.1797, -5.3750, -8.5000,  5.0312, -2.9531, -5.5938,  5.4688, -1.9219,  3.9375,  7.7188,  3.3438, -7.0000, -5.1250, -7.3438,  2.6250,  5.1875,  2.7812, -6.3438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0155,  0.0535,  ..., -0.0100, -0.0349,  0.0424],
        [ 0.0288,  0.0056, -0.0959,  ..., -0.0148,  0.0279, -0.0072],
        [ 0.0294,  0.0108,  0.0709,  ..., -0.0181, -0.0779, -0.0378],
        ...,
        [ 0.0061,  0.0042,  0.0404,  ..., -0.0193, -0.0391,  0.0153],
        [-0.0258,  0.0031, -0.0304,  ..., -0.0300, -0.0408,  0.0319],
        [-0.0377,  0.0341, -0.0132,  ...,  0.0333,  0.0809, -0.0339]], device='cuda:0', requires_grad=True)
Q: tensor([-1.5547,  1.0625,  3.1094, -1.7266,  0.8281, -2.7812, -2.2812, -2.5312, -0.4551,  1.0391,  0.8281, -1.3047,  1.3594, -2.2656,  1.4766, -0.0115,  1.1406, -0.1387, -2.6094,  1.0703, -0.2080,  1.6875,  0.6758, -0.5508,  1.1875,  1.5625,  1.3672, -2.4219, -0.8164,  0.7891,  1.7891, -1.5703,
         0.4902,  2.5938,  0.3633,  1.5000,  1.9844, -1.4141, -1.5938, -3.8750,  0.9570, -0.2275,  2.1094,  0.4844, -2.0625, -1.2188,  0.9375, -1.7734, -1.8281, -1.6797,  0.2314, -0.2217,  2.2344, -0.4883,  2.5000,  0.7188,  0.4121,  1.5469, -0.6836,  2.8750,  1.4609,  2.9531,  0.3867, -1.8203],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250],
        [ 0.0000, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250, 27.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3340,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2500,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2002,     0.2002,     0.2002,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1670,     0.1670,     0.1670,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0000],
        [    0.0000,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0126,  0.0030, -0.0409,  ...,  0.0060,  0.0193, -0.0269],
        [-0.0038,  0.0125,  0.0307,  ...,  0.0155, -0.0168,  0.0335],
        [ 0.0175, -0.0285, -0.0411,  ..., -0.0091,  0.0139, -0.0220],
        ...,
        [-0.0011,  0.0001, -0.0290,  ..., -0.0125,  0.0538,  0.0366],
        [-0.0118,  0.0238, -0.0383,  ...,  0.0191,  0.0460, -0.0212],
        [-0.0097, -0.0130,  0.0025,  ...,  0.0172, -0.0909, -0.0143]], device='cuda:0', requires_grad=True)
K: tensor([ 6.0625, -6.0938,  3.7812, -6.0625,  7.6562, -4.7812, -4.7812, -4.0000,  0.6914,  3.3438, -6.4062,  5.9375,  6.4688, -6.7188,  6.0312,  4.6562, -1.3047, -4.3750, -2.0469,  7.5938,  7.1562, -0.5156, -2.1719,  0.9961,  4.4375, -0.9883,  6.9688, -0.5820, -1.6875,  4.8125,  3.3750, -0.7539,
        -5.9688,  6.5625, -7.0938,  2.9375, -5.0938, -6.7500, -1.4062, -5.2812, -6.5625, -3.8906,  5.6562, -1.4844, -5.5312, -5.5000, -1.1797, -5.3750, -8.5000,  5.0312, -2.9531, -5.5938,  5.4688, -1.9219,  3.9375,  7.7188,  3.3438, -7.0000, -5.1250, -7.3438,  2.6250,  5.1875,  2.7812, -6.3438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0155,  0.0535,  ..., -0.0100, -0.0349,  0.0424],
        [ 0.0288,  0.0056, -0.0959,  ..., -0.0148,  0.0279, -0.0072],
        [ 0.0294,  0.0108,  0.0709,  ..., -0.0181, -0.0779, -0.0378],
        ...,
        [ 0.0061,  0.0042,  0.0404,  ..., -0.0193, -0.0391,  0.0153],
        [-0.0258,  0.0031, -0.0304,  ..., -0.0300, -0.0408,  0.0319],
        [-0.0377,  0.0341, -0.0132,  ...,  0.0333,  0.0809, -0.0339]], device='cuda:0', requires_grad=True)
Q: tensor([-1.5547,  1.0625,  3.1094, -1.7266,  0.8281, -2.7812, -2.2812, -2.5312, -0.4551,  1.0312,  0.8281, -1.3047,  1.3594, -2.2656,  1.4766, -0.0127,  1.1406, -0.1396, -2.6094,  1.0703, -0.2090,  1.6875,  0.6758, -0.5469,  1.1875,  1.5625,  1.3672, -2.4219, -0.8164,  0.7891,  1.7891, -1.5703,
         0.4902,  2.5938,  0.3652,  1.5000,  1.9844, -1.4141, -1.5938, -3.8750,  0.9570, -0.2266,  2.1094,  0.4844, -2.0625, -1.2188,  0.9375, -1.7656, -1.8281, -1.6797,  0.2314, -0.2217,  2.2344, -0.4883,  2.5000,  0.7188,  0.4121,  1.5469, -0.6836,  2.8750,  1.4609,  2.9531,  0.3867, -1.8203],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.],
        [ 0., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( of:0.1758 of:0.1758 of:0.1758 of:0.1758 of:0.1758 of:0.1758 of:0.1758 of:0.1758)
 of
------
		( of:0.1758 of:0.1758 of:0.1758 of:0.1758 of:0.1758 of:0.1758 of:0.1758 of:0.1758)
 of of of of of of of of of of of of of of of
@ 1550 train 8.8611 , allloss: 2941.2688, dt: 1495.94ms, fracRes: 0.4441, norm(attn): 23.8750, norm(output): 229.0000, norm(x): 115.8586, norm(y): 0.9583, norm:2017.4093, tok/sec: 87618.56, flops:34.14, batch-reuse:1
@ 1551 train 8.8755 , allloss: 2862.7358, dt: 1109.70ms, fracRes: 0.4434, norm(attn): 24.6250, norm(output): 245.0000, norm(x): 121.4775, norm(y): 0.9583, norm:2224.0667, tok/sec: 118114.30, flops:46.02, batch-reuse:1
@ 1552 train 8.7044 , allloss: 2680.1057, dt: 1123.50ms, fracRes: 0.4434, norm(attn): 26.1250, norm(output): 260.0000, norm(x): 130.1251, norm(y): 0.9585, norm:3169.4890, tok/sec: 116664.13, flops:45.45, batch-reuse:1
@ 1553 train 8.7354 , allloss: 2635.6021, dt: 1117.51ms, fracRes: 0.4431, norm(attn): 27.7500, norm(output): 286.0000, norm(x): 140.0849, norm(y): 0.9586, norm:3348.9417, tok/sec: 117288.87, flops:45.70, batch-reuse:1
@ 1554 train 8.6936 , allloss: 2840.2576, dt: 1110.17ms, fracRes: 0.4428, norm(attn): 28.5000, norm(output): 308.0000, norm(x): 152.7127, norm(y): 0.9589, norm:3365.9768, tok/sec: 118065.24, flops:46.00, batch-reuse:1
@ 1555 train 8.7010 , allloss: 3129.8826, dt: 1117.35ms, fracRes: 0.4428, norm(attn): 30.3750, norm(output): 342.0000, norm(x): 168.1947, norm(y): 0.9592, norm:2770.3528, tok/sec: 117306.29, flops:45.70, batch-reuse:1
@ 1556 train 8.5939 , allloss: 3428.9761, dt: 1144.43ms, fracRes: 0.4428, norm(attn): 32.5000, norm(output): 382.0000, norm(x): 185.9808, norm(y): 0.9596, norm:3701.8521, tok/sec: 114529.88, flops:44.62, batch-reuse:1
@ 1557 train 8.6278 , allloss: 4122.1040, dt: 1128.03ms, fracRes: 0.4424, norm(attn): 34.5000, norm(output): 422.0000, norm(x): 206.1886, norm(y): 0.9600, norm:2409.7461, tok/sec: 116195.46, flops:45.27, batch-reuse:1
@ 1558 train 8.5649 , allloss: 4680.2627, dt: 1116.99ms, fracRes: 0.4428, norm(attn): 36.5000, norm(output): 472.0000, norm(x): 226.6803, norm(y): 0.9605, norm:2887.9443, tok/sec: 117343.90, flops:45.72, batch-reuse:1
@ 1559 train 8.6206 , allloss: 5113.3730, dt: 1113.05ms, fracRes: 0.4434, norm(attn): 38.5000, norm(output): 512.0000, norm(x): 247.2007, norm(y): 0.9610, norm:5292.7178, tok/sec: 117759.41, flops:45.88, batch-reuse:1
@ 1560 train 8.5702 , allloss: 5526.7900, dt: 1115.37ms, fracRes: 0.4432, norm(attn): 40.2500, norm(output): 556.0000, norm(x): 267.8559, norm(y): 0.9614, norm:4304.9321, tok/sec: 117514.11, flops:45.78, batch-reuse:1
@ 1561 train 8.6033 , allloss: 5649.3516, dt: 1112.48ms, fracRes: 0.4443, norm(attn): 41.5000, norm(output): 600.0000, norm(x): 287.3102, norm(y): 0.9618, norm:4978.9053, tok/sec: 117819.20, flops:45.90, batch-reuse:1
@ 1562 train 8.5872 , allloss: 5644.6621, dt: 1119.19ms, fracRes: 0.4452, norm(attn): 43.7500, norm(output): 636.0000, norm(x): 304.3715, norm(y): 0.9621, norm:5029.0928, tok/sec: 117113.35, flops:45.63, batch-reuse:1
@ 1563 train 8.5833 , allloss: 5699.0430, dt: 1115.07ms, fracRes: 0.4469, norm(attn): 44.0000, norm(output): 664.0000, norm(x): 317.6392, norm(y): 0.9624, norm:6922.3804, tok/sec: 117546.15, flops:45.80, batch-reuse:1
@ 1564 train 8.5754 , allloss: 5664.8203, dt: 1098.39ms, fracRes: 0.4475, norm(attn): 44.2500, norm(output): 692.0000, norm(x): 325.9682, norm(y): 0.9626, norm:6947.9185, tok/sec: 119331.04, flops:46.49, batch-reuse:1
@ 1565 train 8.5712 , allloss: 5791.0811, dt: 1112.96ms, fracRes: 0.4479, norm(attn): 45.2500, norm(output): 700.0000, norm(x): 328.7992, norm(y): 0.9626, norm:6128.7358, tok/sec: 117769.25, flops:45.88, batch-reuse:1
@ 1566 train 8.6102 , allloss: 5670.7964, dt: 1119.78ms, fracRes: 0.4496, norm(attn): 44.2500, norm(output): 696.0000, norm(x): 323.9187, norm(y): 0.9625, norm:8631.4775, tok/sec: 117051.11, flops:45.60, batch-reuse:1
@ 1567 train 8.4838 , allloss: 5527.2202, dt: 1124.06ms, fracRes: 0.4510, norm(attn): 43.7500, norm(output): 660.0000, norm(x): 315.0513, norm(y): 0.9623, norm:7578.3184, tok/sec: 116605.98, flops:45.43, batch-reuse:1
@ 1568 train 8.5124 , allloss: 5275.3374, dt: 1108.15ms, fracRes: 0.4519, norm(attn): 43.5000, norm(output): 640.0000, norm(x): 302.6058, norm(y): 0.9619, norm:6758.0889, tok/sec: 118279.61, flops:46.08, batch-reuse:1
@ 1569 train 8.4160 , allloss: 4984.3115, dt: 1124.85ms, fracRes: 0.4527, norm(attn): 41.5000, norm(output): 608.0000, norm(x): 286.5692, norm(y): 0.9615, norm:6879.4570, tok/sec: 116524.42, flops:45.40, batch-reuse:1
@ 1570 train 8.4352 , allloss: 4739.4902, dt: 1108.47ms, fracRes: 0.4532, norm(attn): 40.2500, norm(output): 572.0000, norm(x): 269.6053, norm(y): 0.9610, norm:5700.9673, tok/sec: 118245.57, flops:46.07, batch-reuse:1
@ 1571 train 8.4806 , allloss: 4569.0142, dt: 1129.78ms, fracRes: 0.4533, norm(attn): 38.7500, norm(output): 520.0000, norm(x): 251.3480, norm(y): 0.9605, norm:4918.9966, tok/sec: 116015.99, flops:45.20, batch-reuse:1
@ 1572 train 8.4918 , allloss: 4498.2778, dt: 1105.97ms, fracRes: 0.4535, norm(attn): 37.5000, norm(output): 484.0000, norm(x): 232.5138, norm(y): 0.9599, norm:4261.0229, tok/sec: 118513.22, flops:46.17, batch-reuse:1
@ 1573 train 8.5126 , allloss: 4543.0249, dt: 1117.79ms, fracRes: 0.4536, norm(attn): 35.5000, norm(output): 450.0000, norm(x): 213.5429, norm(y): 0.9593, norm:3535.6958, tok/sec: 117259.78, flops:45.68, batch-reuse:1
@ 1574 train 8.4873 , allloss: 4538.7368, dt: 1123.47ms, fracRes: 0.4537, norm(attn): 34.0000, norm(output): 416.0000, norm(x): 196.3979, norm(y): 0.9587, norm:2400.2004, tok/sec: 116667.01, flops:45.45, batch-reuse:1
@ 1575 train 8.4394 , allloss: 4561.4688, dt: 1137.56ms, fracRes: 0.4540, norm(attn): 32.2500, norm(output): 378.0000, norm(x): 180.7241, norm(y): 0.9581, norm:3067.1333, tok/sec: 115222.33, flops:44.89, batch-reuse:1
@ 1576 train 8.4604 , allloss: 4505.2393, dt: 1130.01ms, fracRes: 0.4539, norm(attn): 30.5000, norm(output): 350.0000, norm(x): 165.4222, norm(y): 0.9574, norm:3922.7024, tok/sec: 115991.91, flops:45.19, batch-reuse:1
@ 1577 train 8.2844 , allloss: 4465.7446, dt: 1110.07ms, fracRes: 0.4541, norm(attn): 29.8750, norm(output): 320.0000, norm(x): 153.2259, norm(y): 0.9569, norm:1580.1349, tok/sec: 118075.23, flops:46.00, batch-reuse:1
@ 1578 train 8.4719 , allloss: 4429.2617, dt: 1106.58ms, fracRes: 0.4541, norm(attn): 28.1250, norm(output): 294.0000, norm(x): 142.2754, norm(y): 0.9564, norm:2580.1226, tok/sec: 118448.11, flops:46.15, batch-reuse:1
@ 1579 train 8.3052 , allloss: 4487.9570, dt: 1134.22ms, fracRes: 0.4541, norm(attn): 27.2500, norm(output): 270.0000, norm(x): 132.5145, norm(y): 0.9560, norm:2183.2659, tok/sec: 115561.85, flops:45.02, batch-reuse:1
@ 1580 train 8.3513 , allloss: 4432.7583, dt: 1098.38ms, fracRes: 0.4540, norm(attn): 26.0000, norm(output): 255.0000, norm(x): 123.3395, norm(y): 0.9555, norm:2600.6245, tok/sec: 119332.49, flops:46.49, batch-reuse:1
@ 1581 train 8.3737 , allloss: 4344.2603, dt: 1135.90ms, fracRes: 0.4541, norm(attn): 25.7500, norm(output): 238.0000, norm(x): 115.2403, norm(y): 0.9550, norm:1197.3392, tok/sec: 115390.12, flops:44.96, batch-reuse:1
@ 1582 train 8.3385 , allloss: 4039.2917, dt: 1107.14ms, fracRes: 0.4541, norm(attn): 24.1250, norm(output): 219.0000, norm(x): 106.7369, norm(y): 0.9546, norm:1941.0045, tok/sec: 118387.81, flops:46.12, batch-reuse:1
@ 1583 train 8.3056 , allloss: 4115.8867, dt: 1112.79ms, fracRes: 0.4538, norm(attn): 23.6250, norm(output): 205.0000, norm(x): 100.0420, norm(y): 0.9542, norm:2189.8777, tok/sec: 117786.33, flops:45.89, batch-reuse:1
@ 1584 train 8.2681 , allloss: 4101.9463, dt: 1125.91ms, fracRes: 0.4539, norm(attn): 23.0000, norm(output): 188.0000, norm(x): 93.2777, norm(y): 0.9537, norm:1275.0587, tok/sec: 116414.13, flops:45.35, batch-reuse:1
@ 1585 train 8.3318 , allloss: 4002.7444, dt: 1107.84ms, fracRes: 0.4535, norm(attn): 21.8750, norm(output): 173.0000, norm(x): 85.9762, norm(y): 0.9532, norm:1223.4650, tok/sec: 118312.70, flops:46.09, batch-reuse:1
@ 1586 train 8.2986 , allloss: 3717.4492, dt: 1124.30ms, fracRes: 0.4538, norm(attn): 20.7500, norm(output): 155.0000, norm(x): 78.2953, norm(y): 0.9526, norm:1708.3972, tok/sec: 116581.45, flops:45.42, batch-reuse:1
@ 1587 train 8.3537 , allloss: 3867.0991, dt: 1143.61ms, fracRes: 0.4536, norm(attn): 20.1250, norm(output): 143.0000, norm(x): 72.4340, norm(y): 0.9521, norm:1461.0431, tok/sec: 114612.28, flops:44.65, batch-reuse:1
@ 1588 train 8.3462 , allloss: 3749.3208, dt: 1124.94ms, fracRes: 0.4533, norm(attn): 19.2500, norm(output): 128.0000, norm(x): 65.9648, norm(y): 0.9515, norm:661.3491, tok/sec: 116514.25, flops:45.39, batch-reuse:1
@ 1589 train 8.2955 , allloss: 3607.6362, dt: 1128.37ms, fracRes: 0.4532, norm(attn): 18.2500, norm(output): 114.0000, norm(x): 60.5486, norm(y): 0.9509, norm:1290.7930, tok/sec: 116160.62, flops:45.26, batch-reuse:1
@ 1590 train 8.2960 , allloss: 3655.3235, dt: 1120.48ms, fracRes: 0.4532, norm(attn): 17.8750, norm(output): 104.5000, norm(x): 56.0705, norm(y): 0.9504, norm:517.2375, tok/sec: 116978.66, flops:45.57, batch-reuse:1
@ 1591 train 8.2621 , allloss: 3445.3955, dt: 1114.18ms, fracRes: 0.4531, norm(attn): 16.8750, norm(output): 96.0000, norm(x): 51.4240, norm(y): 0.9499, norm:1239.0000, tok/sec: 117640.25, flops:45.83, batch-reuse:1
@ 1592 train 8.2955 , allloss: 3502.1270, dt: 1133.60ms, fracRes: 0.4530, norm(attn): 16.3750, norm(output): 88.5000, norm(x): 48.4205, norm(y): 0.9494, norm:1003.8994, tok/sec: 115624.85, flops:45.05, batch-reuse:1
@ 1593 train 8.3094 , allloss: 3521.1941, dt: 1123.55ms, fracRes: 0.4528, norm(attn): 16.0000, norm(output): 86.0000, norm(x): 47.2262, norm(y): 0.9492, norm:1936.5530, tok/sec: 116658.56, flops:45.45, batch-reuse:1
@ 1594 train 8.2110 , allloss: 3329.8672, dt: 1119.77ms, fracRes: 0.4531, norm(attn): 16.1250, norm(output): 85.5000, norm(x): 46.7649, norm(y): 0.9491, norm:2165.1667, tok/sec: 117052.75, flops:45.60, batch-reuse:1
@ 1595 train 8.3341 , allloss: 3451.0750, dt: 1128.18ms, fracRes: 0.4534, norm(attn): 16.8750, norm(output): 90.0000, norm(x): 48.5678, norm(y): 0.9491, norm:2092.6057, tok/sec: 116179.62, flops:45.26, batch-reuse:1
@ 1596 train 8.1817 , allloss: 3378.5281, dt: 1094.86ms, fracRes: 0.4527, norm(attn): 17.0000, norm(output): 96.0000, norm(x): 51.1699, norm(y): 0.9493, norm:1805.5286, tok/sec: 119716.07, flops:46.64, batch-reuse:1
@ 1597 train 8.2279 , allloss: 3326.3105, dt: 1117.60ms, fracRes: 0.4526, norm(attn): 17.8750, norm(output): 102.0000, norm(x): 54.5664, norm(y): 0.9495, norm:1738.7858, tok/sec: 117279.86, flops:45.69, batch-reuse:1
@ 1598 train 8.2477 , allloss: 3414.5947, dt: 1123.03ms, fracRes: 0.4526, norm(attn): 18.6250, norm(output): 112.5000, norm(x): 59.3864, norm(y): 0.9498, norm:2354.1455, tok/sec: 116712.53, flops:45.47, batch-reuse:1
@ 1599 train 8.2237 , allloss: 3393.0491, dt: 1105.43ms, fracRes: 0.4525, norm(attn): 19.8750, norm(output): 126.0000, norm(x): 64.7462, norm(y): 0.9501, norm:2357.6216, tok/sec: 118570.91, flops:46.20, batch-reuse:1
@ 1600 train 8.1697 , allloss: 3365.7578, dt: 1116.42ms, fracRes: 0.4525, norm(attn): 21.2500, norm(output): 136.0000, norm(x): 70.8693, norm(y): 0.9506, norm:2759.7051, tok/sec: 117403.52, flops:45.74, batch-reuse:1
@ 1601 train 8.1389 , allloss: 3357.4153, dt: 1123.77ms, fracRes: 0.4525, norm(attn): 22.1250, norm(output): 152.0000, norm(x): 78.0497, norm(y): 0.9510, norm:1892.3925, tok/sec: 116636.44, flops:45.44, batch-reuse:1
@ 1602 train 8.0701 , allloss: 3329.6218, dt: 1111.76ms, fracRes: 0.4525, norm(attn): 23.8750, norm(output): 170.0000, norm(x): 86.3494, norm(y): 0.9516, norm:2156.2268, tok/sec: 117895.50, flops:45.93, batch-reuse:1
@ 1603 train 8.0189 , allloss: 3360.4688, dt: 1113.40ms, fracRes: 0.4524, norm(attn): 25.3750, norm(output): 192.0000, norm(x): 95.6110, norm(y): 0.9521, norm:2618.0295, tok/sec: 117722.34, flops:45.86, batch-reuse:1
@ 1604 train 8.0559 , allloss: 3461.1133, dt: 1135.07ms, fracRes: 0.4525, norm(attn): 26.5000, norm(output): 210.0000, norm(x): 105.7818, norm(y): 0.9527, norm:2585.8816, tok/sec: 115475.24, flops:44.99, batch-reuse:1
@ 1605 train 8.0181 , allloss: 3605.3303, dt: 1102.41ms, fracRes: 0.4524, norm(attn): 28.1250, norm(output): 238.0000, norm(x): 116.8106, norm(y): 0.9533, norm:1896.2064, tok/sec: 118895.71, flops:46.32, batch-reuse:1
@ 1606 train 7.9939 , allloss: 3797.4746, dt: 1115.98ms, fracRes: 0.4525, norm(attn): 29.8750, norm(output): 258.0000, norm(x): 128.7822, norm(y): 0.9540, norm:2710.3926, tok/sec: 117449.64, flops:45.76, batch-reuse:1
@ 1607 train 7.9818 , allloss: 3862.0857, dt: 1116.31ms, fracRes: 0.4526, norm(attn): 31.8750, norm(output): 286.0000, norm(x): 141.3512, norm(y): 0.9547, norm:3304.2776, tok/sec: 117415.48, flops:45.75, batch-reuse:1
@ 1608 train 8.0239 , allloss: 3352.9119, dt: 1128.56ms, fracRes: 0.3865, norm(attn): 35.2500, norm(output): 326.0000, norm(x): 180.1397, norm(y): 0.9553, norm:4445.3960, tok/sec: 116140.97, flops:45.25, batch-reuse:1
@ 1609 train 7.9988 , allloss: 3472.1772, dt: 1115.72ms, fracRes: 0.3834, norm(attn): 36.5000, norm(output): 362.0000, norm(x): 199.0810, norm(y): 0.9560, norm:3371.0066, tok/sec: 117477.22, flops:45.77, batch-reuse:1
@ 1610 train 7.9600 , allloss: 3756.4783, dt: 1115.76ms, fracRes: 0.3834, norm(attn): 39.5000, norm(output): 390.0000, norm(x): 216.4293, norm(y): 0.9567, norm:4107.1499, tok/sec: 117473.01, flops:45.77, batch-reuse:1
@ 1611 train 7.9613 , allloss: 3969.0603, dt: 1119.88ms, fracRes: 0.3833, norm(attn): 40.2500, norm(output): 418.0000, norm(x): 233.4501, norm(y): 0.9573, norm:4912.9556, tok/sec: 117041.51, flops:45.60, batch-reuse:1
@ 1612 train 7.9757 , allloss: 4077.9497, dt: 1133.39ms, fracRes: 0.3833, norm(attn): 42.5000, norm(output): 454.0000, norm(x): 250.3121, norm(y): 0.9578, norm:4754.9966, tok/sec: 115646.01, flops:45.06, batch-reuse:1
@ 1613 train 7.9151 , allloss: 4155.4487, dt: 1122.47ms, fracRes: 0.3833, norm(attn): 44.0000, norm(output): 480.0000, norm(x): 264.1470, norm(y): 0.9583, norm:5152.5391, tok/sec: 116770.94, flops:45.49, batch-reuse:1
@ 1614 train 7.9377 , allloss: 4514.7583, dt: 1116.33ms, fracRes: 0.3840, norm(attn): 44.5000, norm(output): 506.0000, norm(x): 275.8291, norm(y): 0.9587, norm:6356.4272, tok/sec: 117413.60, flops:45.74, batch-reuse:1
@ 1615 train 7.9985 , allloss: 4780.3208, dt: 1132.70ms, fracRes: 0.3853, norm(attn): 45.2500, norm(output): 516.0000, norm(x): 282.8142, norm(y): 0.9590, norm:5505.1968, tok/sec: 115716.48, flops:45.08, batch-reuse:1
@ 1616 train 7.9663 , allloss: 4631.1943, dt: 1127.25ms, fracRes: 0.4318, norm(attn): 44.5000, norm(output): 510.0000, norm(x): 256.9147, norm(y): 0.9591, norm:28362.2949, tok/sec: 116275.55, flops:45.30, batch-reuse:1
@ 1617 train 7.9860 , allloss: 4955.7832, dt: 1124.85ms, fracRes: 0.3930, norm(attn): 46.7500, norm(output): 540.0000, norm(x): 285.7661, norm(y): 0.9592, norm:5324.3467, tok/sec: 116524.42, flops:45.40, batch-reuse:1
@ 1618 train 7.9064 , allloss: 4821.8608, dt: 1135.67ms, fracRes: 0.4143, norm(attn): 45.2500, norm(output): 520.0000, norm(x): 272.4089, norm(y): 0.9593, norm:18697.9004, tok/sec: 115414.01, flops:44.97, batch-reuse:1
@ 1619 train 7.9160 , allloss: 4966.3535, dt: 1137.82ms, fracRes: 0.3906, norm(attn): 47.5000, norm(output): 540.0000, norm(x): 287.2701, norm(y): 0.9593, norm:8900.7139, tok/sec: 115195.94, flops:44.88, batch-reuse:1
@ 1620 train 7.9649 , allloss: 4688.8926, dt: 1133.18ms, fracRes: 0.3975, norm(attn): 45.2500, norm(output): 520.0000, norm(x): 279.0577, norm(y): 0.9592, norm:6387.0918, tok/sec: 115667.20, flops:45.06, batch-reuse:1
@ 1621 train 7.9763 , allloss: 4819.4951, dt: 1127.87ms, fracRes: 0.3880, norm(attn): 45.2500, norm(output): 516.0000, norm(x): 281.0256, norm(y): 0.9591, norm:6281.6694, tok/sec: 116212.14, flops:45.28, batch-reuse:1
@ 1622 train 7.9762 , allloss: 5432.0967, dt: 1125.69ms, fracRes: 0.4562, norm(attn): 36.0000, norm(output): 406.0000, norm(x): 196.4526, norm(y): 0.9588, norm:11176.6396, tok/sec: 116437.30, flops:45.36, batch-reuse:1
@ 1623 train 7.9010 , allloss: 4220.3745, dt: 1122.12ms, fracRes: 0.3860, norm(attn): 44.2500, norm(output): 490.0000, norm(x): 266.0089, norm(y): 0.9586, norm:4497.0352, tok/sec: 116807.36, flops:45.51, batch-reuse:1
@ 1624 train 7.8397 , allloss: 3887.9543, dt: 1115.88ms, fracRes: 0.3852, norm(attn): 43.7500, norm(output): 476.0000, norm(x): 255.4886, norm(y): 0.9584, norm:7641.1748, tok/sec: 117460.56, flops:45.76, batch-reuse:1
@ 1625 train 8.0555 , allloss: 3726.0554, dt: 1115.43ms, fracRes: 0.3851, norm(attn): 41.5000, norm(output): 442.0000, norm(x): 241.3679, norm(y): 0.9579, norm:5251.1372, tok/sec: 117508.06, flops:45.78, batch-reuse:1
@ 1626 train 7.9415 , allloss: 3418.9536, dt: 1135.27ms, fracRes: 0.3848, norm(attn): 40.0000, norm(output): 414.0000, norm(x): 224.9438, norm(y): 0.9575, norm:5896.9927, tok/sec: 115454.36, flops:44.98, batch-reuse:1
@ 1627 train 7.9099 , allloss: 3122.9875, dt: 1112.92ms, fracRes: 0.3843, norm(attn): 38.7500, norm(output): 384.0000, norm(x): 208.3109, norm(y): 0.9569, norm:5223.9312, tok/sec: 117772.61, flops:45.88, batch-reuse:1
@ 1628 train 7.8456 , allloss: 2929.8074, dt: 1118.46ms, fracRes: 0.3840, norm(attn): 36.2500, norm(output): 350.0000, norm(x): 190.7168, norm(y): 0.9563, norm:4670.3452, tok/sec: 117189.36, flops:45.66, batch-reuse:1
@ 1629 train 7.8435 , allloss: 2785.9717, dt: 1110.89ms, fracRes: 0.3839, norm(attn): 34.2500, norm(output): 316.0000, norm(x): 172.9945, norm(y): 0.9557, norm:4181.4819, tok/sec: 117988.24, flops:45.97, batch-reuse:1
@ 1630 train 7.9074 , allloss: 2716.4619, dt: 1125.71ms, fracRes: 0.3838, norm(attn): 32.2500, norm(output): 280.0000, norm(x): 155.8164, norm(y): 0.9550, norm:3964.4685, tok/sec: 116434.64, flops:45.36, batch-reuse:1
@ 1631 train 7.8523 , allloss: 2632.5366, dt: 1121.82ms, fracRes: 0.3836, norm(attn): 30.1250, norm(output): 247.0000, norm(x): 139.2568, norm(y): 0.9543, norm:2777.7427, tok/sec: 116838.81, flops:45.52, batch-reuse:1
@ 1632 train 7.8778 , allloss: 2814.6548, dt: 1137.05ms, fracRes: 0.3834, norm(attn): 28.1250, norm(output): 224.0000, norm(x): 124.7389, norm(y): 0.9535, norm:2952.1252, tok/sec: 115273.96, flops:44.91, batch-reuse:1
@ 1633 train 7.7836 , allloss: 2949.8953, dt: 1143.42ms, fracRes: 0.3835, norm(attn): 26.3750, norm(output): 193.0000, norm(x): 111.0101, norm(y): 0.9528, norm:1002.2836, tok/sec: 114631.47, flops:44.66, batch-reuse:1
@ 1634 train 7.8905 , allloss: 3004.1394, dt: 1144.35ms, fracRes: 0.3834, norm(attn): 24.6250, norm(output): 174.0000, norm(x): 98.7452, norm(y): 0.9520, norm:1148.4927, tok/sec: 114538.55, flops:44.62, batch-reuse:1
@ 1635 train 7.8746 , allloss: 3192.2698, dt: 1111.80ms, fracRes: 0.3835, norm(attn): 23.2500, norm(output): 159.0000, norm(x): 90.1535, norm(y): 0.9513, norm:2875.5107, tok/sec: 117892.07, flops:45.93, batch-reuse:1
@ 1636 train 7.7808 , allloss: 3327.5986, dt: 1119.42ms, fracRes: 0.3834, norm(attn): 22.1250, norm(output): 144.0000, norm(x): 84.0162, norm(y): 0.9506, norm:3094.3674, tok/sec: 117089.55, flops:45.62, batch-reuse:1
@ 1637 train 7.8430 , allloss: 3254.3025, dt: 1122.91ms, fracRes: 0.3834, norm(attn): 21.3750, norm(output): 137.0000, norm(x): 80.1523, norm(y): 0.9501, norm:2762.6582, tok/sec: 116725.74, flops:45.48, batch-reuse:1
@ 1638 train 7.8960 , allloss: 3358.8716, dt: 1110.91ms, fracRes: 0.3833, norm(attn): 21.2500, norm(output): 136.0000, norm(x): 79.5821, norm(y): 0.9498, norm:3321.3042, tok/sec: 117986.24, flops:45.97, batch-reuse:1
@ 1639 train 7.7129 , allloss: 3265.9690, dt: 1119.67ms, fracRes: 0.3831, norm(attn): 21.3750, norm(output): 136.0000, norm(x): 80.2923, norm(y): 0.9497, norm:3270.4866, tok/sec: 117062.57, flops:45.61, batch-reuse:1
@ 1640 train 7.7802 , allloss: 3263.5820, dt: 1092.21ms, fracRes: 0.3831, norm(attn): 21.7500, norm(output): 143.0000, norm(x): 82.9973, norm(y): 0.9496, norm:3592.2444, tok/sec: 120006.56, flops:46.75, batch-reuse:1
@ 1641 train 7.6674 , allloss: 3402.7383, dt: 1110.95ms, fracRes: 0.3830, norm(attn): 22.1250, norm(output): 150.0000, norm(x): 87.5238, norm(y): 0.9496, norm:3369.2898, tok/sec: 117981.76, flops:45.97, batch-reuse:1
@ 1642 train 7.8043 , allloss: 3138.3569, dt: 1122.15ms, fracRes: 0.3830, norm(attn): 22.6250, norm(output): 160.0000, norm(x): 92.1513, norm(y): 0.9497, norm:3934.8054, tok/sec: 116804.60, flops:45.51, batch-reuse:1
@ 1643 train 7.8186 , allloss: 3004.4988, dt: 1103.62ms, fracRes: 0.3830, norm(attn): 24.0000, norm(output): 172.0000, norm(x): 98.7269, norm(y): 0.9500, norm:3915.5327, tok/sec: 118765.95, flops:46.27, batch-reuse:1
@ 1644 train 7.7863 , allloss: 2893.1355, dt: 1117.97ms, fracRes: 0.3829, norm(attn): 25.3750, norm(output): 190.0000, norm(x): 106.6409, norm(y): 0.9503, norm:4151.2617, tok/sec: 117240.90, flops:45.68, batch-reuse:1
@ 1645 train 7.8824 , allloss: 2816.4817, dt: 1104.55ms, fracRes: 0.3828, norm(attn): 26.2500, norm(output): 206.0000, norm(x): 116.0361, norm(y): 0.9506, norm:3910.3889, tok/sec: 118665.17, flops:46.23, batch-reuse:1
@ 1646 train 7.8388 , allloss: 2809.5747, dt: 1115.65ms, fracRes: 0.3828, norm(attn): 28.1250, norm(output): 225.0000, norm(x): 127.3904, norm(y): 0.9510, norm:4104.6011, tok/sec: 117484.60, flops:45.77, batch-reuse:1
@ 1647 train 7.8178 , allloss: 2841.0884, dt: 1119.43ms, fracRes: 0.3827, norm(attn): 29.8750, norm(output): 250.0000, norm(x): 140.3333, norm(y): 0.9515, norm:5054.7485, tok/sec: 117087.66, flops:45.62, batch-reuse:1
@ 1648 train 7.7921 , allloss: 2941.0513, dt: 1108.74ms, fracRes: 0.3826, norm(attn): 31.5000, norm(output): 278.0000, norm(x): 155.2284, norm(y): 0.9521, norm:4813.3369, tok/sec: 118216.84, flops:46.06, batch-reuse:1
@ 1649 train 7.7017 , allloss: 2960.3601, dt: 1118.00ms, fracRes: 0.3826, norm(attn): 33.5000, norm(output): 308.0000, norm(x): 170.8398, norm(y): 0.9527, norm:3594.3992, tok/sec: 117238.17, flops:45.68, batch-reuse:1
@ 1650 train 7.6385 , allloss: 3062.0715, dt: 1112.55ms, fracRes: 0.3826, norm(attn): 35.7500, norm(output): 348.0000, norm(x): 189.9483, norm(y): 0.9533, norm:5278.2563, tok/sec: 117812.03, flops:45.90, batch-reuse:1
@ 1651 train 7.7491 , allloss: 3375.2053, dt: 1131.22ms, fracRes: 0.3826, norm(attn): 37.5000, norm(output): 382.0000, norm(x): 209.3968, norm(y): 0.9540, norm:5263.5796, tok/sec: 115867.33, flops:45.14, batch-reuse:1
@ 1652 train 7.7829 , allloss: 3516.3247, dt: 1116.86ms, fracRes: 0.3826, norm(attn): 39.7500, norm(output): 418.0000, norm(x): 231.7011, norm(y): 0.9547, norm:5619.0713, tok/sec: 117358.05, flops:45.72, batch-reuse:1
@ 1653 train 7.7895 , allloss: 3850.4573, dt: 1105.69ms, fracRes: 0.3826, norm(attn): 42.5000, norm(output): 456.0000, norm(x): 255.1672, norm(y): 0.9554, norm:5723.8364, tok/sec: 118542.94, flops:46.18, batch-reuse:1
@ 1654 train 7.7071 , allloss: 4246.2266, dt: 1111.91ms, fracRes: 0.3825, norm(attn): 44.2500, norm(output): 510.0000, norm(x): 280.9645, norm(y): 0.9562, norm:6632.2510, tok/sec: 117879.81, flops:45.93, batch-reuse:1
@ 1655 train 7.8070 , allloss: 4570.8804, dt: 1128.63ms, fracRes: 0.3825, norm(attn): 47.7500, norm(output): 568.0000, norm(x): 306.0747, norm(y): 0.9569, norm:4288.5366, tok/sec: 116133.97, flops:45.25, batch-reuse:1
@ 1656 train 7.6668 , allloss: 5189.1436, dt: 1130.41ms, fracRes: 0.3825, norm(attn): 49.0000, norm(output): 608.0000, norm(x): 330.3642, norm(y): 0.9576, norm:5365.0718, tok/sec: 115951.27, flops:45.17, batch-reuse:1
@ 1657 train 7.7079 , allloss: 5687.6768, dt: 1128.21ms, fracRes: 0.3825, norm(attn): 51.0000, norm(output): 644.0000, norm(x): 352.5205, norm(y): 0.9582, norm:5085.0703, tok/sec: 116176.70, flops:45.26, batch-reuse:1
@ 1658 train 7.7245 , allloss: 5980.1104, dt: 1095.83ms, fracRes: 0.3825, norm(attn): 52.2500, norm(output): 680.0000, norm(x): 367.2195, norm(y): 0.9586, norm:8418.2695, tok/sec: 119610.24, flops:46.60, batch-reuse:1
@ 1659 train 7.7282 , allloss: 6254.2002, dt: 1098.88ms, fracRes: 0.3826, norm(attn): 52.2500, norm(output): 696.0000, norm(x): 374.2806, norm(y): 0.9588, norm:9210.7637, tok/sec: 119278.32, flops:46.47, batch-reuse:1
@ 1660 train 7.7792 , allloss: 6251.8872, dt: 1108.37ms, fracRes: 0.3827, norm(attn): 52.5000, norm(output): 696.0000, norm(x): 375.6639, norm(y): 0.9588, norm:9650.2461, tok/sec: 118256.81, flops:46.07, batch-reuse:1
@ 1661 train 7.7429 , allloss: 5995.0293, dt: 1098.71ms, fracRes: 0.3827, norm(attn): 52.2500, norm(output): 684.0000, norm(x): 371.7913, norm(y): 0.9588, norm:10138.1992, tok/sec: 119296.21, flops:46.48, batch-reuse:1
@ 1662 train 7.6766 , allloss: 5725.3647, dt: 1107.48ms, fracRes: 0.3829, norm(attn): 52.2500, norm(output): 664.0000, norm(x): 362.5462, norm(y): 0.9586, norm:10170.6074, tok/sec: 118351.92, flops:46.11, batch-reuse:1
@ 1663 train 7.7446 , allloss: 5453.9180, dt: 1127.95ms, fracRes: 0.3831, norm(attn): 52.0000, norm(output): 636.0000, norm(x): 349.0189, norm(y): 0.9583, norm:9638.9580, tok/sec: 116203.57, flops:45.27, batch-reuse:1
@ 1664 train 7.7016 , allloss: 5101.5737, dt: 1099.30ms, fracRes: 0.3834, norm(attn): 49.5000, norm(output): 616.0000, norm(x): 332.2267, norm(y): 0.9579, norm:8477.6475, tok/sec: 119232.04, flops:46.45, batch-reuse:1
@ 1665 train 7.7101 , allloss: 5103.5894, dt: 1102.56ms, fracRes: 0.3846, norm(attn): 48.2500, norm(output): 576.0000, norm(x): 312.4511, norm(y): 0.9575, norm:9793.2559, tok/sec: 118879.67, flops:46.32, batch-reuse:1
@ 1666 train 7.7709 , allloss: 4750.5537, dt: 1100.36ms, fracRes: 0.4556, norm(attn): 36.5000, norm(output): 430.0000, norm(x): 207.1278, norm(y): 0.9570, norm:3878.8735, tok/sec: 119116.98, flops:46.41, batch-reuse:1
@ 1667 train 7.7945 , allloss: 4200.0156, dt: 1109.58ms, fracRes: 0.4572, norm(attn): 35.5000, norm(output): 396.0000, norm(x): 193.0007, norm(y): 0.9565, norm:4564.1558, tok/sec: 118127.52, flops:46.02, batch-reuse:1
@ 1668 train 7.7242 , allloss: 3894.9033, dt: 1120.20ms, fracRes: 0.4577, norm(attn): 34.0000, norm(output): 376.0000, norm(x): 179.9789, norm(y): 0.9561, norm:3752.7363, tok/sec: 117007.59, flops:45.59, batch-reuse:1
@ 1669 train 7.8002 , allloss: 3891.2866, dt: 1113.60ms, fracRes: 0.4585, norm(attn): 32.7500, norm(output): 352.0000, norm(x): 169.5100, norm(y): 0.9557, norm:2401.7463, tok/sec: 117700.74, flops:45.86, batch-reuse:1
@ 1670 train 7.8656 , allloss: 3979.9316, dt: 1126.85ms, fracRes: 0.4589, norm(attn): 32.0000, norm(output): 322.0000, norm(x): 158.9387, norm(y): 0.9552, norm:1382.0471, tok/sec: 116316.71, flops:45.32, batch-reuse:1
@ 1671 train 7.7899 , allloss: 3699.5276, dt: 1133.81ms, fracRes: 0.4590, norm(attn): 30.1250, norm(output): 300.0000, norm(x): 147.4915, norm(y): 0.9547, norm:2682.1467, tok/sec: 115603.09, flops:45.04, batch-reuse:1
@ 1672 train 7.7379 , allloss: 3630.7729, dt: 1099.38ms, fracRes: 0.4592, norm(attn): 29.5000, norm(output): 280.0000, norm(x): 137.6797, norm(y): 0.9542, norm:2961.2725, tok/sec: 119223.64, flops:46.45, batch-reuse:1
@ 1673 train 7.7273 , allloss: 3779.6660, dt: 1101.12ms, fracRes: 0.4593, norm(attn): 28.0000, norm(output): 260.0000, norm(x): 129.1504, norm(y): 0.9538, norm:2352.0305, tok/sec: 119034.86, flops:46.38, batch-reuse:1
@ 1674 train 7.6897 , allloss: 3822.5688, dt: 1127.53ms, fracRes: 0.4593, norm(attn): 26.5000, norm(output): 243.0000, norm(x): 120.4644, norm(y): 0.9533, norm:3670.2930, tok/sec: 116246.91, flops:45.29, batch-reuse:1
@ 1675 train 7.7441 , allloss: 3682.9260, dt: 1103.51ms, fracRes: 0.4593, norm(attn): 26.0000, norm(output): 224.0000, norm(x): 111.3237, norm(y): 0.9528, norm:2091.3604, tok/sec: 118777.01, flops:46.28, batch-reuse:1
@ 1676 train 7.7681 , allloss: 3661.4263, dt: 1111.61ms, fracRes: 0.4593, norm(attn): 24.7500, norm(output): 208.0000, norm(x): 103.1908, norm(y): 0.9523, norm:2035.8899, tok/sec: 117911.59, flops:45.94, batch-reuse:1
@ 1677 train 7.7673 , allloss: 3721.0464, dt: 1107.89ms, fracRes: 0.4593, norm(attn): 23.8750, norm(output): 191.0000, norm(x): 96.1957, norm(y): 0.9518, norm:2131.4937, tok/sec: 118307.63, flops:46.09, batch-reuse:1
@ 1678 train 7.7370 , allloss: 3765.3196, dt: 1101.42ms, fracRes: 0.4593, norm(attn): 22.6250, norm(output): 177.0000, norm(x): 89.5888, norm(y): 0.9513, norm:1635.1842, tok/sec: 119002.26, flops:46.36, batch-reuse:1
@ 1679 train 7.7744 , allloss: 3791.7830, dt: 1105.89ms, fracRes: 0.4594, norm(attn): 21.8750, norm(output): 162.0000, norm(x): 82.8325, norm(y): 0.9509, norm:913.3249, tok/sec: 118521.93, flops:46.18, batch-reuse:1
@ 1680 train 7.6174 , allloss: 3805.4880, dt: 1120.64ms, fracRes: 0.4594, norm(attn): 20.7500, norm(output): 147.0000, norm(x): 76.4738, norm(y): 0.9504, norm:1136.7722, tok/sec: 116961.46, flops:45.57, batch-reuse:1
@ 1681 train 7.7340 , allloss: 3716.8699, dt: 1108.11ms, fracRes: 0.4593, norm(attn): 19.8750, norm(output): 136.0000, norm(x): 70.0427, norm(y): 0.9499, norm:1527.1678, tok/sec: 118284.21, flops:46.08, batch-reuse:1
@ 1682 train 7.6926 , allloss: 3962.1492, dt: 1101.06ms, fracRes: 0.4593, norm(attn): 19.0000, norm(output): 126.5000, norm(x): 65.8699, norm(y): 0.9494, norm:1683.9628, tok/sec: 119041.17, flops:46.38, batch-reuse:1
@ 1683 train 7.7144 , allloss: 3859.8416, dt: 1102.26ms, fracRes: 0.4593, norm(attn): 18.2500, norm(output): 119.5000, norm(x): 62.5980, norm(y): 0.9491, norm:2064.6816, tok/sec: 118912.12, flops:46.33, batch-reuse:1
@ 1684 train 7.7102 , allloss: 3895.6934, dt: 1107.25ms, fracRes: 0.4593, norm(attn): 18.1250, norm(output): 114.0000, norm(x): 61.6103, norm(y): 0.9488, norm:2148.2805, tok/sec: 118375.96, flops:46.12, batch-reuse:1
@ 1685 train 7.7292 , allloss: 4010.4626, dt: 1093.24ms, fracRes: 0.4592, norm(attn): 18.0000, norm(output): 117.5000, norm(x): 62.3754, norm(y): 0.9487, norm:2545.7012, tok/sec: 119893.03, flops:46.71, batch-reuse:1
@ 1686 train 7.8208 , allloss: 3990.7073, dt: 1098.82ms, fracRes: 0.4592, norm(attn): 18.1250, norm(output): 121.0000, norm(x): 64.1068, norm(y): 0.9487, norm:2316.1230, tok/sec: 119284.20, flops:46.47, batch-reuse:1
@ 1687 train 7.7826 , allloss: 3996.7893, dt: 1097.71ms, fracRes: 0.4592, norm(attn): 18.5000, norm(output): 128.0000, norm(x): 67.3249, norm(y): 0.9488, norm:2874.8232, tok/sec: 119404.72, flops:46.52, batch-reuse:1
@ 1688 train 7.6992 , allloss: 3899.8765, dt: 1094.29ms, fracRes: 0.4590, norm(attn): 19.2500, norm(output): 137.0000, norm(x): 71.4021, norm(y): 0.9490, norm:3034.4448, tok/sec: 119778.54, flops:46.67, batch-reuse:1
@ 1689 train 7.7847 , allloss: 3830.2527, dt: 1103.88ms, fracRes: 0.4590, norm(attn): 19.8750, norm(output): 149.0000, norm(x): 76.4431, norm(y): 0.9492, norm:3108.8862, tok/sec: 118737.42, flops:46.26, batch-reuse:1
@ 1690 train 7.8683 , allloss: 3673.7295, dt: 1118.32ms, fracRes: 0.4590, norm(attn): 20.7500, norm(output): 160.0000, norm(x): 82.2478, norm(y): 0.9496, norm:3477.7683, tok/sec: 117204.53, flops:45.66, batch-reuse:1
@ 1691 train 7.6966 , allloss: 3599.3130, dt: 1111.93ms, fracRes: 0.4588, norm(attn): 21.8750, norm(output): 176.0000, norm(x): 89.4585, norm(y): 0.9500, norm:3495.9963, tok/sec: 117878.09, flops:45.93, batch-reuse:1
@ 1692 train 7.6445 , allloss: 3604.3752, dt: 1110.05ms, fracRes: 0.4588, norm(attn): 23.0000, norm(output): 193.0000, norm(x): 97.9904, norm(y): 0.9504, norm:3506.7014, tok/sec: 118077.21, flops:46.00, batch-reuse:1
@ 1693 train 7.8320 , allloss: 3359.5562, dt: 1105.27ms, fracRes: 0.4589, norm(attn): 24.1250, norm(output): 215.0000, norm(x): 106.5977, norm(y): 0.9509, norm:3524.2766, tok/sec: 118587.87, flops:46.20, batch-reuse:1
@ 1694 train 7.8279 , allloss: 3448.3745, dt: 1121.63ms, fracRes: 0.4587, norm(attn): 25.8750, norm(output): 239.0000, norm(x): 118.1902, norm(y): 0.9515, norm:3786.0178, tok/sec: 116858.16, flops:45.53, batch-reuse:1
@ 1695 train 7.6990 , allloss: 3244.0317, dt: 1115.42ms, fracRes: 0.4587, norm(attn): 27.5000, norm(output): 262.0000, norm(x): 129.8087, norm(y): 0.9521, norm:4603.9824, tok/sec: 117509.54, flops:45.78, batch-reuse:1
@ 1696 train 7.6731 , allloss: 3182.6064, dt: 1121.36ms, fracRes: 0.4587, norm(attn): 29.8750, norm(output): 290.0000, norm(x): 143.2660, norm(y): 0.9528, norm:3573.9854, tok/sec: 116886.73, flops:45.54, batch-reuse:1
@ 1697 train 7.7657 , allloss: 3299.4690, dt: 1123.97ms, fracRes: 0.4583, norm(attn): 31.5000, norm(output): 324.0000, norm(x): 158.9775, norm(y): 0.9535, norm:3077.9487, tok/sec: 116615.28, flops:45.43, batch-reuse:1
@ 1698 train 7.6489 , allloss: 3120.2090, dt: 1115.54ms, fracRes: 0.4587, norm(attn): 33.7500, norm(output): 372.0000, norm(x): 176.0338, norm(y): 0.9543, norm:3872.1748, tok/sec: 117496.86, flops:45.78, batch-reuse:1
@ 1699 train 7.7027 , allloss: 3299.8909, dt: 1098.29ms, fracRes: 0.4586, norm(attn): 35.7500, norm(output): 414.0000, norm(x): 195.7294, norm(y): 0.9551, norm:3669.0088, tok/sec: 119341.99, flops:46.50, batch-reuse:1
@ 1700 train 7.7249 , allloss: 3448.5527, dt: 1112.05ms, fracRes: 0.4587, norm(attn): 38.0000, norm(output): 450.0000, norm(x): 216.0412, norm(y): 0.9559, norm:3383.0503, tok/sec: 117865.10, flops:45.92, batch-reuse:1
@ 1701 train 7.6321 , allloss: 3737.4490, dt: 1096.25ms, fracRes: 0.4589, norm(attn): 40.2500, norm(output): 508.0000, norm(x): 238.4538, norm(y): 0.9567, norm:4376.4658, tok/sec: 119563.86, flops:46.58, batch-reuse:1
@ 1702 train 7.7482 , allloss: 4232.5957, dt: 1105.65ms, fracRes: 0.4616, norm(attn): 42.5000, norm(output): 548.0000, norm(x): 259.2875, norm(y): 0.9575, norm:7088.1484, tok/sec: 118547.06, flops:46.19, batch-reuse:1
@ 1703 train 7.7833 , allloss: 4667.2119, dt: 1124.42ms, fracRes: 0.4589, norm(attn): 44.5000, norm(output): 608.0000, norm(x): 284.9189, norm(y): 0.9583, norm:2509.3625, tok/sec: 116568.60, flops:45.42, batch-reuse:1
@ 1704 train 7.6547 , allloss: 4756.9531, dt: 1115.63ms, fracRes: 0.4590, norm(attn): 47.7500, norm(output): 648.0000, norm(x): 309.8677, norm(y): 0.9591, norm:3482.3579, tok/sec: 117487.29, flops:45.77, batch-reuse:1
@ 1705 train 7.7783 , allloss: 5484.9727, dt: 1119.11ms, fracRes: 0.4590, norm(attn): 49.5000, norm(output): 708.0000, norm(x): 332.3682, norm(y): 0.9598, norm:5666.8018, tok/sec: 117121.73, flops:45.63, batch-reuse:1
@ 1706 train 7.6361 , allloss: 6157.1450, dt: 1115.60ms, fracRes: 0.4589, norm(attn): 51.5000, norm(output): 764.0000, norm(x): 353.8266, norm(y): 0.9605, norm:4393.4565, tok/sec: 117490.20, flops:45.77, batch-reuse:1
@ 1707 train 7.6858 , allloss: 6361.2661, dt: 1121.81ms, fracRes: 0.4589, norm(attn): 53.0000, norm(output): 816.0000, norm(x): 375.0105, norm(y): 0.9611, norm:7665.0967, tok/sec: 116839.51, flops:45.52, batch-reuse:1
@ 1708 train 7.6970 , allloss: 6605.6489, dt: 1135.25ms, fracRes: 0.4589, norm(attn): 55.7500, norm(output): 836.0000, norm(x): 391.9447, norm(y): 0.9615, norm:9546.3975, tok/sec: 115456.18, flops:44.98, batch-reuse:1
@ 1709 train 7.7494 , allloss: 7257.7969, dt: 1106.74ms, fracRes: 0.4590, norm(attn): 55.7500, norm(output): 848.0000, norm(x): 402.1520, norm(y): 0.9618, norm:8302.0752, tok/sec: 118430.96, flops:46.14, batch-reuse:1
@ 1710 train 7.7100 , allloss: 7182.5493, dt: 1113.36ms, fracRes: 0.4591, norm(attn): 56.0000, norm(output): 892.0000, norm(x): 407.5771, norm(y): 0.9619, norm:10826.8936, tok/sec: 117726.13, flops:45.87, batch-reuse:1
@ 1711 train 7.6995 , allloss: 7468.0513, dt: 1113.99ms, fracRes: 0.4591, norm(attn): 55.7500, norm(output): 864.0000, norm(x): 405.2491, norm(y): 0.9619, norm:11137.1260, tok/sec: 117660.41, flops:45.84, batch-reuse:1
@ 1712 train 7.7352 , allloss: 7075.0322, dt: 1128.76ms, fracRes: 0.4593, norm(attn): 55.7500, norm(output): 848.0000, norm(x): 399.5264, norm(y): 0.9617, norm:10950.2266, tok/sec: 116120.63, flops:45.24, batch-reuse:1
@ 1713 train 7.5859 , allloss: 6916.9844, dt: 1110.91ms, fracRes: 0.4593, norm(attn): 55.2500, norm(output): 836.0000, norm(x): 387.9244, norm(y): 0.9614, norm:12449.5918, tok/sec: 117986.21, flops:45.97, batch-reuse:1
@ 1714 train 7.7033 , allloss: 6517.1450, dt: 1131.44ms, fracRes: 0.4595, norm(attn): 52.5000, norm(output): 812.0000, norm(x): 373.3625, norm(y): 0.9609, norm:9187.8926, tok/sec: 115845.35, flops:45.13, batch-reuse:1
@ 1715 train 7.6896 , allloss: 6076.9614, dt: 1118.26ms, fracRes: 0.4596, norm(attn): 52.2500, norm(output): 764.0000, norm(x): 355.6507, norm(y): 0.9604, norm:10244.7451, tok/sec: 117210.98, flops:45.67, batch-reuse:1
@ 1716 train 7.7422 , allloss: 5627.6978, dt: 1127.02ms, fracRes: 0.4598, norm(attn): 50.5000, norm(output): 712.0000, norm(x): 335.5729, norm(y): 0.9597, norm:9500.2578, tok/sec: 116299.22, flops:45.31, batch-reuse:1
@ 1717 train 7.8912 , allloss: 5188.0068, dt: 1113.18ms, fracRes: 0.4603, norm(attn): 48.5000, norm(output): 664.0000, norm(x): 313.5834, norm(y): 0.9591, norm:8060.9033, tok/sec: 117746.05, flops:45.87, batch-reuse:1
@ 1718 train 7.6772 , allloss: 4654.4585, dt: 1129.99ms, fracRes: 0.4619, norm(attn): 47.2500, norm(output): 632.0000, norm(x): 290.6233, norm(y): 0.9584, norm:7836.8896, tok/sec: 115993.57, flops:45.19, batch-reuse:1
@ 1719 train 7.7350 , allloss: 4086.9731, dt: 1118.85ms, fracRes: 0.5299, norm(attn): 43.7500, norm(output): 572.0000, norm(x): 227.4280, norm(y): 0.9576, norm:4557.8569, tok/sec: 117148.86, flops:45.64, batch-reuse:1
@ 1720 train 7.7463 , allloss: 3706.0400, dt: 1109.37ms, fracRes: 0.5233, norm(attn): 41.5000, norm(output): 520.0000, norm(x): 215.0861, norm(y): 0.9570, norm:39604.0977, tok/sec: 118150.30, flops:46.03, batch-reuse:1
@ 1721 train 7.6878 , allloss: 3564.9973, dt: 1117.27ms, fracRes: 0.4611, norm(attn): 41.2500, norm(output): 498.0000, norm(x): 232.8978, norm(y): 0.9564, norm:9261.9551, tok/sec: 117314.05, flops:45.71, batch-reuse:1
@ 1722 train 7.8096 , allloss: 3397.7800, dt: 1112.53ms, fracRes: 0.4610, norm(attn): 39.5000, norm(output): 452.0000, norm(x): 215.8352, norm(y): 0.9557, norm:4907.5059, tok/sec: 117813.87, flops:45.90, batch-reuse:1
@ 1723 train 7.6838 , allloss: 3087.1619, dt: 1111.53ms, fracRes: 0.4609, norm(attn): 37.5000, norm(output): 420.0000, norm(x): 197.4046, norm(y): 0.9551, norm:6599.3174, tok/sec: 117920.39, flops:45.94, batch-reuse:1
@ 1724 train 7.7051 , allloss: 2942.4016, dt: 1107.60ms, fracRes: 0.4608, norm(attn): 35.7500, norm(output): 386.0000, norm(x): 181.5274, norm(y): 0.9544, norm:5213.6636, tok/sec: 118338.52, flops:46.10, batch-reuse:1
@ 1725 train 7.7316 , allloss: 2830.1638, dt: 1108.00ms, fracRes: 0.4610, norm(attn): 33.7500, norm(output): 342.0000, norm(x): 164.3261, norm(y): 0.9536, norm:4656.3696, tok/sec: 118296.48, flops:46.09, batch-reuse:1
@ 1726 train 7.6400 , allloss: 2867.8579, dt: 1127.50ms, fracRes: 0.4609, norm(attn): 31.8750, norm(output): 312.0000, norm(x): 148.5983, norm(y): 0.9529, norm:3544.3748, tok/sec: 116250.01, flops:45.29, batch-reuse:1
@ 1727 train 7.6291 , allloss: 2896.7881, dt: 1122.95ms, fracRes: 0.4610, norm(attn): 30.1250, norm(output): 274.0000, norm(x): 133.1019, norm(y): 0.9522, norm:4476.4829, tok/sec: 116721.25, flops:45.47, batch-reuse:1
@ 1728 train 7.7088 , allloss: 2931.9995, dt: 1115.58ms, fracRes: 0.4614, norm(attn): 28.1250, norm(output): 242.0000, norm(x): 118.3313, norm(y): 0.9514, norm:3655.8850, tok/sec: 117492.64, flops:45.78, batch-reuse:1
@ 1729 train 7.7591 , allloss: 3142.8701, dt: 1137.72ms, fracRes: 0.4612, norm(attn): 26.2500, norm(output): 220.0000, norm(x): 105.4752, norm(y): 0.9505, norm:2555.0234, tok/sec: 115205.82, flops:44.88, batch-reuse:1
@ 1730 train 7.7248 , allloss: 3224.8970, dt: 1117.95ms, fracRes: 0.4613, norm(attn): 25.1250, norm(output): 189.0000, norm(x): 93.1680, norm(y): 0.9497, norm:2889.0410, tok/sec: 117243.40, flops:45.68, batch-reuse:1
@ 1731 train 7.7669 , allloss: 3309.9436, dt: 1118.75ms, fracRes: 0.4614, norm(attn): 23.7500, norm(output): 165.0000, norm(x): 82.1905, norm(y): 0.9487, norm:2046.3201, tok/sec: 117159.84, flops:45.65, batch-reuse:1
@ 1732 train 7.6754 , allloss: 3483.4905, dt: 1105.76ms, fracRes: 0.4613, norm(attn): 22.1250, norm(output): 145.0000, norm(x): 74.1812, norm(y): 0.9475, norm:1859.3827, tok/sec: 118536.17, flops:46.18, batch-reuse:1
@ 1733 train 7.6986 , allloss: 3592.7444, dt: 1116.50ms, fracRes: 0.4615, norm(attn): 20.7500, norm(output): 138.0000, norm(x): 71.3486, norm(y): 0.9460, norm:3947.1714, tok/sec: 117395.42, flops:45.74, batch-reuse:1
@ 1734 train 7.9429 , allloss: 4080.7170, dt: 1138.52ms, fracRes: 0.4618, norm(attn): 20.1250, norm(output): 147.0000, norm(x): 75.7756, norm(y): 0.9444, norm:4475.4111, tok/sec: 115125.04, flops:44.85, batch-reuse:1
@ 1735 train 7.9135 , allloss: 4157.5571, dt: 1124.29ms, fracRes: 0.4620, norm(attn): 19.8750, norm(output): 173.0000, norm(x): 85.4990, norm(y): 0.9430, norm:5087.0786, tok/sec: 116581.63, flops:45.42, batch-reuse:1
@ 1736 train 7.9857 , allloss: 4486.9214, dt: 1133.23ms, fracRes: 0.4627, norm(attn): 19.7500, norm(output): 210.0000, norm(x): 105.5863, norm(y): 0.9421, norm:3952.4397, tok/sec: 115662.12, flops:45.06, batch-reuse:1
@ 1737 train 7.9071 , allloss: 4839.6245, dt: 1129.59ms, fracRes: 0.4634, norm(attn): 19.8750, norm(output): 286.0000, norm(x): 136.1220, norm(y): 0.9417, norm:6881.4219, tok/sec: 116034.58, flops:45.21, batch-reuse:1
@ 1738 train 7.8053 , allloss: 5435.4443, dt: 1127.61ms, fracRes: 0.4639, norm(attn): 20.1250, norm(output): 376.0000, norm(x): 179.7176, norm(y): 0.9417, norm:10043.3389, tok/sec: 116238.97, flops:45.29, batch-reuse:1
@ 1739 train 7.7848 , allloss: 6269.5435, dt: 1096.21ms, fracRes: 0.4650, norm(attn): 21.2500, norm(output): 506.0000, norm(x): 236.7345, norm(y): 0.9420, norm:7842.6704, tok/sec: 119568.54, flops:46.58, batch-reuse:1
@ 1740 train 7.6733 , allloss: 7611.7378, dt: 1116.32ms, fracRes: 0.4662, norm(attn): 22.2500, norm(output): 648.0000, norm(x): 302.9411, norm(y): 0.9425, norm:6796.5635, tok/sec: 117414.55, flops:45.74, batch-reuse:1
@ 1741 train 7.6491 , allloss: 9271.9375, dt: 1129.13ms, fracRes: 0.4676, norm(attn): 24.0000, norm(output): 832.0000, norm(x): 380.3598, norm(y): 0.9430, norm:6737.6997, tok/sec: 116081.81, flops:45.23, batch-reuse:1
@ 1742 train 7.7923 , allloss: 11816.8623, dt: 1120.12ms, fracRes: 0.4699, norm(attn): 25.8750, norm(output): 1016.0000, norm(x): 464.6316, norm(y): 0.9437, norm:6141.6602, tok/sec: 117016.05, flops:45.59, batch-reuse:1
@ 1743 train 7.9062 , allloss: 15023.7949, dt: 1127.33ms, fracRes: 0.4718, norm(attn): 27.5000, norm(output): 1208.0000, norm(x): 554.2567, norm(y): 0.9444, norm:6616.0464, tok/sec: 116267.56, flops:45.30, batch-reuse:1
@ 1744 train 7.8967 , allloss: 18748.0254, dt: 1118.33ms, fracRes: 0.4751, norm(attn): 28.1250, norm(output): 1368.0000, norm(x): 621.7292, norm(y): 0.9451, norm:7705.8623, tok/sec: 117203.03, flops:45.66, batch-reuse:1
@ 1745 train 7.9803 , allloss: 20808.3125, dt: 1112.92ms, fracRes: 0.4764, norm(attn): 29.7500, norm(output): 1448.0000, norm(x): 662.5574, norm(y): 0.9454, norm:14144.6445, tok/sec: 117773.04, flops:45.88, batch-reuse:1
@ 1746 train 8.0553 , allloss: 87503.6953, dt: 1142.15ms, fracRes: 0.5224, norm(attn): 25.3750, norm(output): 1200.0000, norm(x): 505.1011, norm(y): 0.9453, norm:1976394.1250, tok/sec: 114759.13, flops:44.71, batch-reuse:1
@ 1747 train 7.9447 , allloss: 12971.8809, dt: 1113.70ms, fracRes: 0.5491, norm(attn): 22.6250, norm(output): 1080.0000, norm(x): 406.7425, norm(y): 0.9453, norm:4487.9409, tok/sec: 117690.41, flops:45.85, batch-reuse:1
@ 1748 train 7.8791 , allloss: 12942.9355, dt: 1121.60ms, fracRes: 0.5498, norm(attn): 22.1250, norm(output): 1048.0000, norm(x): 398.6970, norm(y): 0.9453, norm:3887.9346, tok/sec: 116861.34, flops:45.53, batch-reuse:1
@ 1749 train 8.0313 , allloss: 12584.2441, dt: 1120.80ms, fracRes: 0.5500, norm(attn): 21.8750, norm(output): 1020.0000, norm(x): 381.7370, norm(y): 0.9451, norm:5016.0503, tok/sec: 116945.11, flops:45.56, batch-reuse:1
@ 1750 train 8.0127 , allloss: 11809.6143, dt: 1126.82ms, fracRes: 0.5498, norm(attn): 20.7500, norm(output): 956.0000, norm(x): 360.8435, norm(y): 0.9449, norm:3943.4229, tok/sec: 116320.28, flops:45.32, batch-reuse:1
@ 1751 train 8.1409 , allloss: 11097.7705, dt: 1109.40ms, fracRes: 0.5502, norm(attn): 20.1250, norm(output): 892.0000, norm(x): 334.1424, norm(y): 0.9447, norm:3523.9697, tok/sec: 118146.77, flops:46.03, batch-reuse:1
@ 1752 train 8.0486 , allloss: 10297.8662, dt: 1105.45ms, fracRes: 0.5501, norm(attn): 19.2500, norm(output): 816.0000, norm(x): 307.2164, norm(y): 0.9443, norm:2919.7629, tok/sec: 118569.02, flops:46.19, batch-reuse:1
@ 1753 train 7.8520 , allloss: 9490.9404, dt: 1112.18ms, fracRes: 0.5500, norm(attn): 18.2500, norm(output): 744.0000, norm(x): 281.0391, norm(y): 0.9441, norm:2315.0647, tok/sec: 117851.45, flops:45.91, batch-reuse:1
@ 1754 train 7.8000 , allloss: 8945.2959, dt: 1104.81ms, fracRes: 0.5505, norm(attn): 17.7500, norm(output): 684.0000, norm(x): 258.2204, norm(y): 0.9438, norm:1904.5692, tok/sec: 118638.11, flops:46.22, batch-reuse:1
@ 1755 train 7.7911 , allloss: 8362.7070, dt: 1160.58ms, fracRes: 0.5503, norm(attn): 17.0000, norm(output): 636.0000, norm(x): 238.3333, norm(y): 0.9435, norm:2183.9795, tok/sec: 112936.64, flops:44.00, batch-reuse:1
@ 1756 train 7.7577 , allloss: 7874.9829, dt: 1122.99ms, fracRes: 0.5509, norm(attn): 16.1250, norm(output): 576.0000, norm(x): 217.5683, norm(y): 0.9431, norm:1239.8401, tok/sec: 116717.11, flops:45.47, batch-reuse:1
@ 1757 train 7.7630 , allloss: 7466.9468, dt: 1135.93ms, fracRes: 0.5513, norm(attn): 15.7500, norm(output): 532.0000, norm(x): 201.8006, norm(y): 0.9428, norm:1778.6177, tok/sec: 115387.77, flops:44.96, batch-reuse:1
@ 1758 train 7.6928 , allloss: 7216.4028, dt: 1141.09ms, fracRes: 0.5517, norm(attn): 15.0000, norm(output): 508.0000, norm(x): 189.5650, norm(y): 0.9426, norm:3399.7861, tok/sec: 114865.16, flops:44.75, batch-reuse:1
@ 1759 train 7.7482 , allloss: 6881.3091, dt: 1133.16ms, fracRes: 0.5519, norm(attn): 14.2500, norm(output): 468.0000, norm(x): 176.1270, norm(y): 0.9422, norm:3370.9773, tok/sec: 115669.95, flops:45.07, batch-reuse:1
@ 1760 train 7.7328 , allloss: 6658.0684, dt: 1132.46ms, fracRes: 0.5521, norm(attn): 13.9375, norm(output): 418.0000, norm(x): 160.6670, norm(y): 0.9417, norm:2775.4941, tok/sec: 115740.89, flops:45.09, batch-reuse:1
@ 1761 train 7.7460 , allloss: 6292.5850, dt: 1131.11ms, fracRes: 0.5530, norm(attn): 12.9375, norm(output): 366.0000, norm(x): 141.4736, norm(y): 0.9412, norm:3483.9712, tok/sec: 115879.34, flops:45.15, batch-reuse:1
@ 1762 train 7.7155 , allloss: 6047.6035, dt: 1125.91ms, fracRes: 0.5550, norm(attn): 11.7500, norm(output): 318.0000, norm(x): 121.8839, norm(y): 0.9408, norm:2662.2573, tok/sec: 116414.40, flops:45.36, batch-reuse:1
@ 1763 train 7.7827 , allloss: 5697.3691, dt: 1117.69ms, fracRes: 0.5553, norm(attn): 11.0000, norm(output): 268.0000, norm(x): 103.6175, norm(y): 0.9400, norm:2713.3611, tok/sec: 117270.68, flops:45.69, batch-reuse:1
@ 1764 train 7.8060 , allloss: 5445.6465, dt: 1104.46ms, fracRes: 0.5560, norm(attn): 9.7500, norm(output): 212.0000, norm(x): 85.3930, norm(y): 0.9393, norm:5395.0244, tok/sec: 118675.50, flops:46.24, batch-reuse:1
@ 1765 train 7.8586 , allloss: 10521.0479, dt: 1111.61ms, fracRes: 0.5917, norm(attn): 8.0625, norm(output): 156.0000, norm(x): 58.7052, norm(y): 0.9389, norm:18206.6562, tok/sec: 117911.41, flops:45.94, batch-reuse:1
@ 1766 train 8.2779 , allloss: 9161.7988, dt: 1112.47ms, fracRes: 0.6497, norm(attn): 6.0625, norm(output): 95.0000, norm(x): 36.5448, norm(y): 0.9438, norm:45816.7617, tok/sec: 117820.64, flops:45.90, batch-reuse:1
@ 1767 train 8.2581 , allloss: 7911.1104, dt: 1152.64ms, fracRes: 0.6457, norm(attn): 5.4375, norm(output): 77.5000, norm(x): 31.7943, norm(y): 0.9413, norm:19331.5859, tok/sec: 113714.92, flops:44.30, batch-reuse:1
@ 1768 train 8.4245 , allloss: 5944.2378, dt: 1107.46ms, fracRes: 0.6514, norm(attn): 4.8125, norm(output): 60.0000, norm(x): 24.6736, norm(y): 0.9390, norm:18439.0000, tok/sec: 118353.43, flops:46.11, batch-reuse:1
@ 1769 train 8.2416 , allloss: 5412.9980, dt: 1133.93ms, fracRes: 0.6136, norm(attn): 4.2812, norm(output): 43.7500, norm(x): 21.6323, norm(y): 0.9351, norm:1079609.3750, tok/sec: 115590.69, flops:45.03, batch-reuse:1
@ 1770 train 8.2616 , allloss: 7459.7900, dt: 1115.17ms, fracRes: 0.6019, norm(attn): 4.3438, norm(output): 40.2500, norm(x): 21.4959, norm(y): 0.9363, norm:352070.4062, tok/sec: 117535.34, flops:45.79, batch-reuse:1
@ 1771 train 8.1535 , allloss: 9388.8223, dt: 1113.89ms, fracRes: 0.5883, norm(attn): 4.5625, norm(output): 39.5000, norm(x): 21.8915, norm(y): 0.9385, norm:43806228480.0000, tok/sec: 117670.14, flops:45.84, batch-reuse:1
@ 1772 train 8.1606 , allloss: 8079.7627, dt: 1115.77ms, fracRes: 0.5796, norm(attn): 4.3125, norm(output): 33.5000, norm(x): 19.3956, norm(y): 0.9402, norm:116746968.0000, tok/sec: 117472.03, flops:45.77, batch-reuse:1
@ 1773 train 8.0741 , allloss: 7326.0146, dt: 1111.23ms, fracRes: 0.5782, norm(attn): 4.2188, norm(output): 30.6250, norm(x): 18.3173, norm(y): 0.9413, norm:370120640.0000, tok/sec: 117951.81, flops:45.95, batch-reuse:1
@ 1774 train 8.1127 , allloss: 5949.7114, dt: 1112.60ms, fracRes: 0.5898, norm(attn): 3.9375, norm(output): 26.8750, norm(x): 16.2388, norm(y): 0.9438, norm:38942872.0000, tok/sec: 117807.16, flops:45.90, batch-reuse:1
@ 1775 train 8.1224 , allloss: 6374.6050, dt: 1104.59ms, fracRes: 0.5753, norm(attn): 4.1875, norm(output): 28.6250, norm(x): 17.0845, norm(y): 0.9442, norm:1029628288.0000, tok/sec: 118660.95, flops:46.23, batch-reuse:1
@ 1776 train 8.1305 , allloss: 5750.2939, dt: 1122.40ms, fracRes: 0.6050, norm(attn): 4.0312, norm(output): 27.3750, norm(x): 15.8833, norm(y): 0.9472, norm:12651926.0000, tok/sec: 116778.63, flops:45.50, batch-reuse:1
@ 1777 train 8.1822 , allloss: 5127.6895, dt: 1127.02ms, fracRes: 0.6364, norm(attn): 3.7969, norm(output): 26.6250, norm(x): 15.0695, norm(y): 0.9493, norm:12861649.0000, tok/sec: 116299.56, flops:45.31, batch-reuse:1
@ 1778 train 8.3741 , allloss: 4196.1885, dt: 1122.84ms, fracRes: 0.6427, norm(attn): 3.6562, norm(output): 24.6250, norm(x): 13.7846, norm(y): 0.9488, norm:63966568.0000, tok/sec: 116732.63, flops:45.48, batch-reuse:1
@ 1779 train 8.1585 , allloss: 4235.9722, dt: 1127.12ms, fracRes: 0.6672, norm(attn): 3.6406, norm(output): 26.1250, norm(x): 14.2014, norm(y): 0.9501, norm:7631668.0000, tok/sec: 116289.30, flops:45.31, batch-reuse:1
@ 1780 train 8.3143 , allloss: 4149.6558, dt: 1129.53ms, fracRes: 0.6838, norm(attn): 3.6094, norm(output): 26.7500, norm(x): 14.0510, norm(y): 0.9508, norm:3662954.2500, tok/sec: 116041.56, flops:45.21, batch-reuse:1
@ 1781 train 8.3591 , allloss: 3945.9768, dt: 1114.89ms, fracRes: 0.6968, norm(attn): 3.5781, norm(output): 27.2500, norm(x): 14.1080, norm(y): 0.9516, norm:87392280.0000, tok/sec: 117564.93, flops:45.80, batch-reuse:1
@ 1782 train 8.3886 , allloss: 4097.9229, dt: 1119.43ms, fracRes: 0.6944, norm(attn): 3.6406, norm(output): 28.3750, norm(x): 14.7339, norm(y): 0.9513, norm:17681016.0000, tok/sec: 117087.95, flops:45.62, batch-reuse:1
@ 1783 train 8.5404 , allloss: 4921.6797, dt: 1125.16ms, fracRes: 0.6497, norm(attn): 4.0312, norm(output): 30.3750, norm(x): 16.2807, norm(y): 0.9493, norm:148347232.0000, tok/sec: 116492.10, flops:45.39, batch-reuse:1
@ 1784 train 8.5901 , allloss: 6563.9097, dt: 1127.63ms, fracRes: 0.5876, norm(attn): 4.6875, norm(output): 34.0000, norm(x): 19.7680, norm(y): 0.9475, norm:3484727040.0000, tok/sec: 116236.32, flops:45.29, batch-reuse:1
@ 1785 train 8.6978 , allloss: 6319.6401, dt: 1101.32ms, fracRes: 0.5936, norm(attn): 4.6250, norm(output): 35.5000, norm(x): 19.7876, norm(y): 0.9487, norm:622087040.0000, tok/sec: 119013.75, flops:46.37, batch-reuse:1
@ 1786 train 8.5447 , allloss: 5966.4761, dt: 1112.10ms, fracRes: 0.6065, norm(attn): 4.5312, norm(output): 36.0000, norm(x): 19.0880, norm(y): 0.9499, norm:6536203.5000, tok/sec: 117859.74, flops:45.92, batch-reuse:1
@ 1787 train 8.6446 , allloss: 6349.5547, dt: 1121.65ms, fracRes: 0.5918, norm(attn): 4.6875, norm(output): 39.0000, norm(x): 21.0673, norm(y): 0.9503, norm:86698688.0000, tok/sec: 116856.05, flops:45.53, batch-reuse:1
@ 1788 train 8.6579 , allloss: 4318.9785, dt: 1112.19ms, fracRes: 0.7034, norm(attn): 3.8750, norm(output): 38.2500, norm(x): 17.0145, norm(y): 0.9547, norm:33516736.0000, tok/sec: 117849.86, flops:45.91, batch-reuse:1
@ 1789 train 8.6195 , allloss: 3701.4475, dt: 1116.88ms, fracRes: 0.7300, norm(attn): 3.7031, norm(output): 39.0000, norm(x): 16.0987, norm(y): 0.9563, norm:649.7417, tok/sec: 117355.97, flops:45.72, batch-reuse:1
@ 1790 train 8.8649 , allloss: 3582.0095, dt: 1122.03ms, fracRes: 0.7430, norm(attn): 3.7812, norm(output): 43.5000, norm(x): 16.5465, norm(y): 0.9569, norm:316.7898, tok/sec: 116816.57, flops:45.51, batch-reuse:1
@ 1791 train 8.9122 , allloss: 3540.0718, dt: 1131.21ms, fracRes: 0.7569, norm(attn): 3.8750, norm(output): 52.0000, norm(x): 17.7490, norm(y): 0.9575, norm:252.8076, tok/sec: 115869.33, flops:45.14, batch-reuse:1
@ 1792 train 8.9057 , allloss: 3633.5908, dt: 1117.41ms, fracRes: 0.7570, norm(attn): 4.0938, norm(output): 60.0000, norm(x): 19.5529, norm(y): 0.9573, norm:491.2856, tok/sec: 117300.11, flops:45.70, batch-reuse:1
@ 1793 train 8.7690 , allloss: 3547.6221, dt: 1107.90ms, fracRes: 0.7537, norm(attn): 4.4688, norm(output): 68.0000, norm(x): 20.9417, norm(y): 0.9568, norm:379.8329, tok/sec: 118306.61, flops:46.09, batch-reuse:1
@ 1794 train 8.9460 , allloss: 3475.1582, dt: 1114.21ms, fracRes: 0.7585, norm(attn): 4.7500, norm(output): 79.5000, norm(x): 22.5247, norm(y): 0.9561, norm:589.2794, tok/sec: 117637.20, flops:45.83, batch-reuse:1
@ 1795 train 8.6840 , allloss: 3656.2810, dt: 1132.88ms, fracRes: 0.7568, norm(attn): 5.1250, norm(output): 95.0000, norm(x): 25.7786, norm(y): 0.9554, norm:989.2308, tok/sec: 115697.78, flops:45.08, batch-reuse:1
@ 1796 train 8.4963 , allloss: 3961.1726, dt: 1135.00ms, fracRes: 0.7536, norm(attn): 5.5625, norm(output): 112.0000, norm(x): 30.1272, norm(y): 0.9548, norm:1175.4171, tok/sec: 115481.60, flops:44.99, batch-reuse:1
@ 1797 train 8.4612 , allloss: 4221.7593, dt: 1137.39ms, fracRes: 0.7537, norm(attn): 6.1562, norm(output): 136.0000, norm(x): 35.3256, norm(y): 0.9542, norm:2230.0051, tok/sec: 115239.26, flops:44.90, batch-reuse:1
@ 1798 train 8.3375 , allloss: 4786.0547, dt: 1114.76ms, fracRes: 0.7496, norm(attn): 6.6250, norm(output): 168.0000, norm(x): 43.0266, norm(y): 0.9536, norm:2642.1931, tok/sec: 117578.58, flops:45.81, batch-reuse:1
@ 1799 train 8.3197 , allloss: 5615.7012, dt: 1112.02ms, fracRes: 0.7463, norm(attn): 7.4375, norm(output): 208.0000, norm(x): 52.9175, norm(y): 0.9531, norm:3282.8298, tok/sec: 117868.46, flops:45.92, batch-reuse:1
@ 1800 train 8.1953 , allloss: 6592.4810, dt: 1112.51ms, fracRes: 0.7446, norm(attn): 7.9688, norm(output): 252.0000, norm(x): 64.0297, norm(y): 0.9526, norm:2377.4026, tok/sec: 117815.99, flops:45.90, batch-reuse:1
@ 1801 train 8.2594 , allloss: 7606.1802, dt: 1112.71ms, fracRes: 0.7421, norm(attn): 8.6250, norm(output): 308.0000, norm(x): 76.8180, norm(y): 0.9522, norm:2156.8506, tok/sec: 117794.86, flops:45.89, batch-reuse:1
@ 1802 train 8.1809 , allloss: 9183.4814, dt: 1130.78ms, fracRes: 0.7405, norm(attn): 9.3750, norm(output): 376.0000, norm(x): 93.4366, norm(y): 0.9520, norm:2131.7383, tok/sec: 115913.08, flops:45.16, batch-reuse:1
@ 1803 train 8.2075 , allloss: 10839.8516, dt: 1109.80ms, fracRes: 0.7407, norm(attn): 10.1250, norm(output): 448.0000, norm(x): 110.8622, norm(y): 0.9519, norm:2152.0608, tok/sec: 118104.23, flops:46.01, batch-reuse:1
@ 1804 train 7.9205 , allloss: 12584.6094, dt: 1124.48ms, fracRes: 0.7404, norm(attn): 11.0000, norm(output): 544.0000, norm(x): 132.3399, norm(y): 0.9518, norm:1630.7856, tok/sec: 116562.10, flops:45.41, batch-reuse:1
@ 1805 train 8.2073 , allloss: 15076.3896, dt: 1112.29ms, fracRes: 0.7390, norm(attn): 11.9375, norm(output): 652.0000, norm(x): 156.5002, norm(y): 0.9518, norm:2148.7080, tok/sec: 117839.68, flops:45.91, batch-reuse:1
@ 1806 train 8.0250 , allloss: 17250.7871, dt: 1127.15ms, fracRes: 0.7394, norm(attn): 12.9375, norm(output): 772.0000, norm(x): 182.6207, norm(y): 0.9519, norm:2193.5884, tok/sec: 116285.78, flops:45.30, batch-reuse:1
@ 1807 train 8.0933 , allloss: 18958.0352, dt: 1123.32ms, fracRes: 0.7387, norm(attn): 13.7500, norm(output): 884.0000, norm(x): 205.0871, norm(y): 0.9519, norm:2048.6792, tok/sec: 116682.31, flops:45.46, batch-reuse:1
@ 1808 train 8.3498 , allloss: 20241.8301, dt: 1116.59ms, fracRes: 0.7386, norm(attn): 14.1875, norm(output): 1008.0000, norm(x): 227.5357, norm(y): 0.9520, norm:1929.9426, tok/sec: 117386.02, flops:45.73, batch-reuse:1
@ 1809 train 7.9879 , allloss: 21025.5488, dt: 1133.19ms, fracRes: 0.7391, norm(attn): 15.0625, norm(output): 1104.0000, norm(x): 251.9137, norm(y): 0.9522, norm:2688.5872, tok/sec: 115666.67, flops:45.06, batch-reuse:1
@ 1810 train 8.0420 , allloss: 22347.3418, dt: 1111.11ms, fracRes: 0.7384, norm(attn): 16.1250, norm(output): 1232.0000, norm(x): 276.3437, norm(y): 0.9523, norm:1986.6233, tok/sec: 117964.54, flops:45.96, batch-reuse:1
@ 1811 train 8.0395 , allloss: 22575.7129, dt: 1118.48ms, fracRes: 0.7390, norm(attn): 17.0000, norm(output): 1344.0000, norm(x): 298.9045, norm(y): 0.9524, norm:2287.3064, tok/sec: 117187.59, flops:45.66, batch-reuse:1
@ 1812 train 7.9624 , allloss: 22378.7090, dt: 1123.57ms, fracRes: 0.7384, norm(attn): 17.8750, norm(output): 1496.0000, norm(x): 325.8830, norm(y): 0.9526, norm:4010.7866, tok/sec: 116657.23, flops:45.45, batch-reuse:1
@ 1813 train 7.9556 , allloss: 23733.2832, dt: 1121.85ms, fracRes: 0.7388, norm(attn): 18.7500, norm(output): 1664.0000, norm(x): 359.8987, norm(y): 0.9529, norm:3637.5430, tok/sec: 116835.98, flops:45.52, batch-reuse:1
@ 1814 train 7.9743 , allloss: 25627.9199, dt: 1122.67ms, fracRes: 0.7381, norm(attn): 20.1250, norm(output): 1856.0000, norm(x): 402.5164, norm(y): 0.9533, norm:4650.3442, tok/sec: 116750.55, flops:45.49, batch-reuse:1
@ 1815 train 7.9055 , allloss: 28304.8750, dt: 1115.92ms, fracRes: 0.7379, norm(attn): 21.6250, norm(output): 2112.0000, norm(x): 449.7557, norm(y): 0.9537, norm:4956.4146, tok/sec: 117456.12, flops:45.76, batch-reuse:1
@ 1816 train 7.9124 , allloss: 31381.7715, dt: 1136.63ms, fracRes: 0.7389, norm(attn): 22.6250, norm(output): 2400.0000, norm(x): 507.8922, norm(y): 0.9542, norm:3415.8354, tok/sec: 115316.23, flops:44.93, batch-reuse:1
@ 1817 train 8.0147 , allloss: 35718.9688, dt: 1114.90ms, fracRes: 0.7377, norm(attn): 24.1250, norm(output): 2736.0000, norm(x): 572.1245, norm(y): 0.9548, norm:3445.0845, tok/sec: 117564.30, flops:45.80, batch-reuse:1
@ 1818 train 7.9562 , allloss: 39202.0938, dt: 1135.42ms, fracRes: 0.7379, norm(attn): 25.8750, norm(output): 3072.0000, norm(x): 645.3968, norm(y): 0.9554, norm:6254.8003, tok/sec: 115439.36, flops:44.98, batch-reuse:1
@ 1819 train 7.9510 , allloss: 42983.1211, dt: 1132.26ms, fracRes: 0.7378, norm(attn): 27.5000, norm(output): 3488.0000, norm(x): 720.9542, norm(y): 0.9560, norm:4461.5547, tok/sec: 115761.17, flops:45.10, batch-reuse:1
@ 1820 train 7.9147 , allloss: 40105.2539, dt: 1125.90ms, fracRes: 0.6821, norm(attn): 28.1250, norm(output): 3840.0000, norm(x): 997.4412, norm(y): 0.9567, norm:361402.1875, tok/sec: 116415.75, flops:45.36, batch-reuse:1
@ 1821 train 7.9053 , allloss: 41071.2617, dt: 1136.46ms, fracRes: 0.6685, norm(attn): 29.8750, norm(output): 4160.0000, norm(x): 1152.5017, norm(y): 0.9573, norm:7735.1050, tok/sec: 115333.77, flops:44.93, batch-reuse:1
@ 1822 train 7.8805 , allloss: 43812.0898, dt: 1127.57ms, fracRes: 0.6684, norm(attn): 31.5000, norm(output): 4672.0000, norm(x): 1275.5295, norm(y): 0.9579, norm:7908.5742, tok/sec: 116243.12, flops:45.29, batch-reuse:1
@ 1823 train 7.8917 , allloss: 46936.5859, dt: 1120.08ms, fracRes: 0.6683, norm(attn): 32.5000, norm(output): 5280.0000, norm(x): 1420.4966, norm(y): 0.9586, norm:7855.8760, tok/sec: 117020.29, flops:45.59, batch-reuse:1
@ 1824 train 7.9376 , allloss: 51247.9102, dt: 1128.82ms, fracRes: 0.6681, norm(attn): 35.2500, norm(output): 5760.0000, norm(x): 1578.3694, norm(y): 0.9593, norm:7181.3018, tok/sec: 116114.47, flops:45.24, batch-reuse:1
@ 1825 train 7.9356 , allloss: 55853.7891, dt: 1125.57ms, fracRes: 0.6685, norm(attn): 36.5000, norm(output): 6528.0000, norm(x): 1754.8384, norm(y): 0.9601, norm:12731.9512, tok/sec: 116449.68, flops:45.37, batch-reuse:1
@ 1826 train 7.9565 , allloss: 46469.2383, dt: 1125.04ms, fracRes: 0.6076, norm(attn): 39.7500, norm(output): 7296.0000, norm(x): 2402.6960, norm(y): 0.9608, norm:671837.3750, tok/sec: 116504.35, flops:45.39, batch-reuse:1
@ 1827 train 8.0193 , allloss: 48498.2500, dt: 1106.87ms, fracRes: 0.5984, norm(attn): 41.2500, norm(output): 8160.0000, norm(x): 2711.9753, norm(y): 0.9615, norm:11517.7861, tok/sec: 118416.60, flops:46.14, batch-reuse:1
@ 1828 train 7.9253 , allloss: 50066.5195, dt: 1120.04ms, fracRes: 0.5982, norm(attn): 43.7500, norm(output): 8896.0000, norm(x): 2975.5632, norm(y): 0.9623, norm:8457.4580, tok/sec: 117024.20, flops:45.59, batch-reuse:1
@ 1829 train 7.9488 , allloss: 53566.8008, dt: 1133.74ms, fracRes: 0.5992, norm(attn): 45.2500, norm(output): 9856.0000, norm(x): 3263.9116, norm(y): 0.9630, norm:11466.7920, tok/sec: 115610.29, flops:45.04, batch-reuse:1
@ 1830 train 7.8015 , allloss: 53389.3945, dt: 1117.02ms, fracRes: 0.5994, norm(attn): 47.7500, norm(output): 10624.0000, norm(x): 3577.7910, norm(y): 0.9638, norm:16328.3955, tok/sec: 117341.17, flops:45.72, batch-reuse:1
@ 1831 train 7.9338 , allloss: 56648.3047, dt: 1116.40ms, fracRes: 0.5991, norm(attn): 49.2500, norm(output): 11904.0000, norm(x): 3904.8499, norm(y): 0.9646, norm:17893.3867, tok/sec: 117406.35, flops:45.74, batch-reuse:1
@ 1832 train 7.9426 , allloss: 57871.9570, dt: 1116.95ms, fracRes: 0.6003, norm(attn): 52.0000, norm(output): 12672.0000, norm(x): 4233.8145, norm(y): 0.9654, norm:13403.7471, tok/sec: 117348.43, flops:45.72, batch-reuse:1
@ 1833 train 7.9203 , allloss: 60599.0039, dt: 1135.29ms, fracRes: 0.6005, norm(attn): 54.5000, norm(output): 14144.0000, norm(x): 4577.5259, norm(y): 0.9661, norm:16392.1992, tok/sec: 115452.42, flops:44.98, batch-reuse:1
@ 1834 train 7.8966 , allloss: 65740.6484, dt: 1129.53ms, fracRes: 0.6007, norm(attn): 55.7500, norm(output): 15104.0000, norm(x): 4917.7720, norm(y): 0.9669, norm:19110.1172, tok/sec: 116040.72, flops:45.21, batch-reuse:1
@ 1835 train 7.8449 , allloss: 69842.0781, dt: 1126.37ms, fracRes: 0.6012, norm(attn): 57.0000, norm(output): 16128.0000, norm(x): 5239.8892, norm(y): 0.9675, norm:18712.0957, tok/sec: 116366.40, flops:45.34, batch-reuse:1
@ 1836 train 7.9906 , allloss: 72309.4609, dt: 1108.64ms, fracRes: 0.6007, norm(attn): 60.0000, norm(output): 16640.0000, norm(x): 5511.5439, norm(y): 0.9680, norm:18469.0605, tok/sec: 118227.59, flops:46.06, batch-reuse:1
@ 1837 train 7.9050 , allloss: 74807.4922, dt: 1127.80ms, fracRes: 0.6010, norm(attn): 60.2500, norm(output): 17536.0000, norm(x): 5759.1870, norm(y): 0.9685, norm:18643.0137, tok/sec: 116218.85, flops:45.28, batch-reuse:1
@ 1838 train 7.9198 , allloss: 76961.9453, dt: 1130.46ms, fracRes: 0.6013, norm(attn): 60.7500, norm(output): 18304.0000, norm(x): 5958.8667, norm(y): 0.9689, norm:20040.4238, tok/sec: 115945.87, flops:45.17, batch-reuse:1
@ 1839 train 7.8845 , allloss: 78445.6484, dt: 1110.92ms, fracRes: 0.6005, norm(attn): 63.7500, norm(output): 18560.0000, norm(x): 6154.4219, norm(y): 0.9692, norm:22068.0742, tok/sec: 117984.79, flops:45.97, batch-reuse:1
@ 1840 train 7.9009 , allloss: 75229.9609, dt: 1111.89ms, fracRes: 0.6018, norm(attn): 64.0000, norm(output): 19200.0000, norm(x): 6336.6777, norm(y): 0.9696, norm:21283.8262, tok/sec: 117881.65, flops:45.93, batch-reuse:1
@ 1841 train 7.8782 , allloss: 72353.0000, dt: 1103.46ms, fracRes: 0.6021, norm(attn): 65.0000, norm(output): 19840.0000, norm(x): 6512.3618, norm(y): 0.9700, norm:31403.7188, tok/sec: 118782.83, flops:46.28, batch-reuse:1
@ 1842 train 7.8440 , allloss: 73154.8906, dt: 1155.89ms, fracRes: 0.6020, norm(attn): 66.0000, norm(output): 20352.0000, norm(x): 6694.7939, norm(y): 0.9703, norm:16628.7715, tok/sec: 113394.73, flops:44.18, batch-reuse:1
@ 1843 train 7.9307 , allloss: 72782.9297, dt: 1122.82ms, fracRes: 0.6024, norm(attn): 67.5000, norm(output): 21120.0000, norm(x): 6897.5161, norm(y): 0.9707, norm:26720.3867, tok/sec: 116734.29, flops:45.48, batch-reuse:1
@ 1844 train 7.8447 , allloss: 70948.2656, dt: 1131.92ms, fracRes: 0.6032, norm(attn): 68.5000, norm(output): 22272.0000, norm(x): 7154.4424, norm(y): 0.9712, norm:11960.6611, tok/sec: 115796.13, flops:45.11, batch-reuse:1
@ 1845 train 7.8838 , allloss: 74961.7969, dt: 1136.37ms, fracRes: 0.6022, norm(attn): 71.5000, norm(output): 22528.0000, norm(x): 7452.1792, norm(y): 0.9718, norm:11294.2207, tok/sec: 115342.96, flops:44.94, batch-reuse:1
@ 1846 train 7.8560 , allloss: 75465.4297, dt: 1126.88ms, fracRes: 0.6025, norm(attn): 72.0000, norm(output): 23936.0000, norm(x): 7791.7876, norm(y): 0.9724, norm:17671.0977, tok/sec: 116314.55, flops:45.32, batch-reuse:1
@ 1847 train 7.8550 , allloss: 76982.5703, dt: 1129.40ms, fracRes: 0.6022, norm(attn): 73.0000, norm(output): 24704.0000, norm(x): 8120.9702, norm(y): 0.9729, norm:28476.8555, tok/sec: 116054.76, flops:45.21, batch-reuse:1
@ 1848 train 7.8011 , allloss: 78438.5000, dt: 1122.91ms, fracRes: 0.6016, norm(attn): 74.5000, norm(output): 25216.0000, norm(x): 8376.2500, norm(y): 0.9733, norm:31998.8516, tok/sec: 116725.39, flops:45.48, batch-reuse:1
@ 1849 train 7.8599 , allloss: 80986.7500, dt: 1144.96ms, fracRes: 0.6009, norm(attn): 75.0000, norm(output): 25600.0000, norm(x): 8502.1777, norm(y): 0.9735, norm:57650.1680, tok/sec: 114477.73, flops:44.60, batch-reuse:1
@ 1850 train 7.7701 , allloss: 81531.7578, dt: 1138.94ms, fracRes: 0.5999, norm(attn): 74.0000, norm(output): 26112.0000, norm(x): 8496.7227, norm(y): 0.9735, norm:71429.4609, tok/sec: 115082.07, flops:44.84, batch-reuse:1
@ 1851 train 7.8177 , allloss: 84702.2266, dt: 1138.37ms, fracRes: 0.5994, norm(attn): 73.0000, norm(output): 25216.0000, norm(x): 8350.8086, norm(y): 0.9733, norm:87890.1953, tok/sec: 115140.47, flops:44.86, batch-reuse:1
@ 1852 train 7.9165 , allloss: 88597.9062, dt: 1124.93ms, fracRes: 0.5989, norm(attn): 72.0000, norm(output): 24704.0000, norm(x): 8134.4072, norm(y): 0.9729, norm:81745.9219, tok/sec: 116516.12, flops:45.39, batch-reuse:1
@ 1853 train 7.8716 , allloss: 90750.4219, dt: 1112.39ms, fracRes: 0.5988, norm(attn): 71.0000, norm(output): 23936.0000, norm(x): 7839.2773, norm(y): 0.9724, norm:83915.1172, tok/sec: 117829.33, flops:45.91, batch-reuse:1
@ 1854 train 7.9128 , allloss: 92847.1328, dt: 1118.76ms, fracRes: 0.5982, norm(attn): 68.5000, norm(output): 22528.0000, norm(x): 7474.0352, norm(y): 0.9718, norm:88629.8438, tok/sec: 117158.47, flops:45.64, batch-reuse:1
@ 1855 train 7.9809 , allloss: 97493.6641, dt: 1124.57ms, fracRes: 0.5946, norm(attn): 65.0000, norm(output): 21248.0000, norm(x): 7039.2773, norm(y): 0.9712, norm:109221.4062, tok/sec: 116553.47, flops:45.41, batch-reuse:1
@ 1856 train 7.8345 , allloss: 102277.1484, dt: 1134.23ms, fracRes: 0.5879, norm(attn): 60.7500, norm(output): 19456.0000, norm(x): 6538.9482, norm(y): 0.9704, norm:111494.4375, tok/sec: 115560.61, flops:45.02, batch-reuse:1
@ 1857 train 7.9711 , allloss: 95904.9297, dt: 1131.73ms, fracRes: 0.5713, norm(attn): 53.5000, norm(output): 16640.0000, norm(x): 5822.2896, norm(y): 0.9695, norm:119542.4766, tok/sec: 115815.36, flops:45.12, batch-reuse:1
@ 1858 train 7.7058 , allloss: 89422.5781, dt: 1136.92ms, fracRes: 0.5509, norm(attn): 44.5000, norm(output): 13184.0000, norm(x): 4962.2993, norm(y): 0.9684, norm:150793.0312, tok/sec: 115287.18, flops:44.92, batch-reuse:1
@ 1859 train 7.9526 , allloss: 65812.2344, dt: 1135.29ms, fracRes: 0.5428, norm(attn): 39.0000, norm(output): 11072.0000, norm(x): 4310.3770, norm(y): 0.9674, norm:40920.9062, tok/sec: 115452.06, flops:44.98, batch-reuse:1
@ 1860 train 8.0975 , allloss: 64169.0938, dt: 1121.76ms, fracRes: 0.5418, norm(attn): 35.2500, norm(output): 9600.0000, norm(x): 3779.8567, norm(y): 0.9665, norm:24881.3984, tok/sec: 116844.50, flops:45.52, batch-reuse:1
@ 1861 train 7.9510 , allloss: 64305.3789, dt: 1133.10ms, fracRes: 0.5399, norm(attn): 31.5000, norm(output): 8320.0000, norm(x): 3288.8989, norm(y): 0.9657, norm:7499.4653, tok/sec: 115675.11, flops:45.07, batch-reuse:1
@ 1862 train 7.9001 , allloss: 59652.4883, dt: 1132.69ms, fracRes: 0.5398, norm(attn): 28.7500, norm(output): 7168.0000, norm(x): 2881.6851, norm(y): 0.9650, norm:7154.4736, tok/sec: 115717.43, flops:45.08, batch-reuse:1
@ 1863 train 7.9778 , allloss: 56986.5117, dt: 1123.10ms, fracRes: 0.5394, norm(attn): 26.1250, norm(output): 6272.0000, norm(x): 2534.5745, norm(y): 0.9642, norm:8955.7393, tok/sec: 116705.99, flops:45.47, batch-reuse:1
@ 1864 train 7.9407 , allloss: 58141.1875, dt: 1136.80ms, fracRes: 0.5393, norm(attn): 24.5000, norm(output): 5696.0000, norm(x): 2294.9143, norm(y): 0.9636, norm:9724.6865, tok/sec: 115299.32, flops:44.92, batch-reuse:1
@ 1865 train 7.9174 , allloss: 58148.6953, dt: 1111.59ms, fracRes: 0.5395, norm(attn): 23.5000, norm(output): 5312.0000, norm(x): 2144.8013, norm(y): 0.9630, norm:20448.3730, tok/sec: 117914.24, flops:45.94, batch-reuse:1
@ 1866 train 8.2371 , allloss: 54942.1016, dt: 1114.65ms, fracRes: 0.5384, norm(attn): 22.5000, norm(output): 4928.0000, norm(x): 2010.4315, norm(y): 0.9625, norm:18398.6895, tok/sec: 117590.65, flops:45.81, batch-reuse:1
@ 1867 train 7.8009 , allloss: 54991.7383, dt: 1116.85ms, fracRes: 0.5407, norm(attn): 23.1250, norm(output): 5088.0000, norm(x): 2037.1752, norm(y): 0.9623, norm:25213.0020, tok/sec: 117358.73, flops:45.72, batch-reuse:1
@ 1868 train 7.9343 , allloss: 53404.4766, dt: 1129.11ms, fracRes: 0.5391, norm(attn): 22.8750, norm(output): 4864.0000, norm(x): 1996.4513, norm(y): 0.9620, norm:25795.9062, tok/sec: 116084.22, flops:45.23, batch-reuse:1
@ 1869 train 7.9181 , allloss: 53632.4219, dt: 1137.00ms, fracRes: 0.5411, norm(attn): 23.6250, norm(output): 5120.0000, norm(x): 2071.8572, norm(y): 0.9618, norm:55835.7812, tok/sec: 115278.72, flops:44.91, batch-reuse:1
@ 1870 train 7.9628 , allloss: 52452.0000, dt: 1104.47ms, fracRes: 0.5430, norm(attn): 24.2500, norm(output): 5280.0000, norm(x): 2137.3633, norm(y): 0.9616, norm:69229.7031, tok/sec: 118673.88, flops:46.24, batch-reuse:1
@ 1871 train 7.8843 , allloss: 50813.8008, dt: 1126.02ms, fracRes: 0.5428, norm(attn): 25.6250, norm(output): 5696.0000, norm(x): 2262.6711, norm(y): 0.9617, norm:75707.1250, tok/sec: 116402.64, flops:45.35, batch-reuse:1
@ 1872 train 8.0062 , allloss: 56089.8203, dt: 1114.28ms, fracRes: 0.5429, norm(attn): 28.2500, norm(output): 6336.0000, norm(x): 2528.1938, norm(y): 0.9617, norm:31404.5156, tok/sec: 117629.05, flops:45.83, batch-reuse:1
@ 1873 train 7.9541 , allloss: 61361.3164, dt: 1112.86ms, fracRes: 0.5440, norm(attn): 31.6250, norm(output): 7232.0000, norm(x): 2830.4104, norm(y): 0.9618, norm:69596.0703, tok/sec: 117778.91, flops:45.89, batch-reuse:1
@ 1874 train 7.9039 , allloss: 59936.0430, dt: 1133.91ms, fracRes: 0.5444, norm(attn): 32.2500, norm(output): 7328.0000, norm(x): 2881.5117, norm(y): 0.9621, norm:119725.3203, tok/sec: 115592.44, flops:45.03, batch-reuse:1
@ 1875 train 7.7871 , allloss: 85999.6328, dt: 1135.25ms, fracRes: 0.5648, norm(attn): 40.2500, norm(output): 9216.0000, norm(x): 3327.6296, norm(y): 0.9629, norm:26553.3047, tok/sec: 115456.52, flops:44.98, batch-reuse:1
@ 1876 train 7.9668 , allloss: 77721.2500, dt: 1142.99ms, fracRes: 0.5742, norm(attn): 44.2500, norm(output): 10240.0000, norm(x): 3602.4155, norm(y): 0.9631, norm:26694.1035, tok/sec: 114674.44, flops:44.68, batch-reuse:1
@ 1877 train 7.9653 , allloss: 74326.7969, dt: 1136.82ms, fracRes: 0.5683, norm(attn): 44.0000, norm(output): 10304.0000, norm(x): 3673.6833, norm(y): 0.9632, norm:33481.2344, tok/sec: 115297.56, flops:44.92, batch-reuse:1
@ 1878 train 7.8968 , allloss: 55668.4609, dt: 1105.67ms, fracRes: 0.5477, norm(attn): 41.5000, norm(output): 9664.0000, norm(x): 3709.8767, norm(y): 0.9630, norm:18031.7305, tok/sec: 118545.57, flops:46.19, batch-reuse:1
@ 1879 train 7.8990 , allloss: 51028.5352, dt: 1126.79ms, fracRes: 0.5441, norm(attn): 42.0000, norm(output): 9664.0000, norm(x): 3794.3738, norm(y): 0.9629, norm:9550.2676, tok/sec: 116322.86, flops:45.32, batch-reuse:1
@ 1880 train 7.8808 , allloss: 49466.3477, dt: 1112.32ms, fracRes: 0.5437, norm(attn): 43.2500, norm(output): 9920.0000, norm(x): 3876.9424, norm(y): 0.9629, norm:8226.6602, tok/sec: 117836.60, flops:45.91, batch-reuse:1
@ 1881 train 7.8730 , allloss: 47311.4219, dt: 1121.09ms, fracRes: 0.5434, norm(attn): 44.0000, norm(output): 10240.0000, norm(x): 3965.1099, norm(y): 0.9629, norm:16521.6738, tok/sec: 116914.47, flops:45.55, batch-reuse:1
@ 1882 train 7.8725 , allloss: 49678.1680, dt: 1122.87ms, fracRes: 0.5497, norm(attn): 46.7500, norm(output): 10816.0000, norm(x): 4128.8867, norm(y): 0.9630, norm:21923.2324, tok/sec: 116729.16, flops:45.48, batch-reuse:1
@ 1883 train 7.8672 , allloss: 56758.6719, dt: 1116.65ms, fracRes: 0.5713, norm(attn): 52.5000, norm(output): 12224.0000, norm(x): 4355.9805, norm(y): 0.9635, norm:18577.4102, tok/sec: 117379.60, flops:45.73, batch-reuse:1
@ 1884 train 7.8275 , allloss: 57964.2656, dt: 1117.30ms, fracRes: 0.5850, norm(attn): 56.0000, norm(output): 13248.0000, norm(x): 4550.3789, norm(y): 0.9638, norm:44135.2891, tok/sec: 117311.62, flops:45.70, batch-reuse:1
@ 1885 train 7.8218 , allloss: 62693.6562, dt: 1118.77ms, fracRes: 0.5897, norm(attn): 59.2500, norm(output): 13824.0000, norm(x): 4752.2256, norm(y): 0.9642, norm:65542.6406, tok/sec: 117157.35, flops:45.64, batch-reuse:1
@ 1886 train 7.9096 , allloss: 66042.2188, dt: 1106.43ms, fracRes: 0.5924, norm(attn): 60.0000, norm(output): 14464.0000, norm(x): 4981.6216, norm(y): 0.9645, norm:60715.6602, tok/sec: 118463.63, flops:46.15, batch-reuse:1
@ 1887 train 7.8545 , allloss: 72941.0156, dt: 1106.88ms, fracRes: 0.5934, norm(attn): 63.2500, norm(output): 15424.0000, norm(x): 5277.2769, norm(y): 0.9650, norm:52864.7422, tok/sec: 118415.20, flops:46.13, batch-reuse:1
@ 1888 train 7.9315 , allloss: 78103.8828, dt: 1116.41ms, fracRes: 0.5951, norm(attn): 64.5000, norm(output): 16512.0000, norm(x): 5606.2021, norm(y): 0.9656, norm:67161.4141, tok/sec: 117404.82, flops:45.74, batch-reuse:1
@ 1889 train 7.9022 , allloss: 84622.0625, dt: 1120.75ms, fracRes: 0.5944, norm(attn): 67.0000, norm(output): 17664.0000, norm(x): 5997.9502, norm(y): 0.9662, norm:79152.2422, tok/sec: 116950.66, flops:45.56, batch-reuse:1
@ 1890 train 7.9628 , allloss: 94230.6172, dt: 1132.53ms, fracRes: 0.5934, norm(attn): 69.0000, norm(output): 18688.0000, norm(x): 6442.2500, norm(y): 0.9668, norm:89352.3984, tok/sec: 115733.61, flops:45.09, batch-reuse:1
@ 1891 train 7.8743 , allloss: 101821.8359, dt: 1143.58ms, fracRes: 0.5934, norm(attn): 72.0000, norm(output): 20480.0000, norm(x): 6928.2983, norm(y): 0.9675, norm:102373.8359, tok/sec: 114615.51, flops:44.65, batch-reuse:1
@ 1892 train 7.8884 , allloss: 112692.3594, dt: 1139.48ms, fracRes: 0.5928, norm(attn): 75.0000, norm(output): 22272.0000, norm(x): 7483.6079, norm(y): 0.9683, norm:109747.8047, tok/sec: 115027.94, flops:44.81, batch-reuse:1
@ 1893 train 7.8859 , allloss: 124337.2031, dt: 1131.92ms, fracRes: 0.5911, norm(attn): 77.5000, norm(output): 23936.0000, norm(x): 8091.7354, norm(y): 0.9691, norm:128596.3125, tok/sec: 115795.87, flops:45.11, batch-reuse:1
@ 1894 train 7.8706 , allloss: 136398.4844, dt: 1135.56ms, fracRes: 0.5910, norm(attn): 80.5000, norm(output): 25344.0000, norm(x): 8753.6611, norm(y): 0.9699, norm:127122.8516, tok/sec: 115425.08, flops:44.97, batch-reuse:1
@ 1895 train 7.9117 , allloss: 145593.3750, dt: 1129.23ms, fracRes: 0.5923, norm(attn): 83.0000, norm(output): 28160.0000, norm(x): 9440.7344, norm(y): 0.9708, norm:117901.9922, tok/sec: 116072.53, flops:45.22, batch-reuse:1
@ 1896 train 7.8521 , allloss: 161183.4844, dt: 1120.67ms, fracRes: 0.5930, norm(attn): 88.0000, norm(output): 30080.0000, norm(x): 10228.6113, norm(y): 0.9717, norm:123118.5625, tok/sec: 116958.80, flops:45.57, batch-reuse:1
@ 1897 train 7.8690 , allloss: 175232.4062, dt: 1123.63ms, fracRes: 0.5944, norm(attn): 90.5000, norm(output): 32640.0000, norm(x): 11047.5137, norm(y): 0.9727, norm:124196.8984, tok/sec: 116650.52, flops:45.45, batch-reuse:1
@ 1898 train 7.8637 , allloss: 190273.4531, dt: 1128.61ms, fracRes: 0.5946, norm(attn): 95.0000, norm(output): 35072.0000, norm(x): 11968.8857, norm(y): 0.9737, norm:130810.8281, tok/sec: 116135.67, flops:45.25, batch-reuse:1
@ 1899 train 7.8871 , allloss: 209783.7500, dt: 1105.03ms, fracRes: 0.5946, norm(attn): 97.5000, norm(output): 38400.0000, norm(x): 12932.4014, norm(y): 0.9746, norm:132640.8438, tok/sec: 118614.04, flops:46.21, batch-reuse:1
@ 1900 train 7.8232 , allloss: 227363.2188, dt: 1120.89ms, fracRes: 0.5950, norm(attn): 101.5000, norm(output): 41472.0000, norm(x): 14017.2314, norm(y): 0.9757, norm:143655.0938, tok/sec: 116935.71, flops:45.56, batch-reuse:1
@ 1901 train 7.8784 , allloss: 254358.4531, dt: 1136.04ms, fracRes: 0.5949, norm(attn): 104.5000, norm(output): 45056.0000, norm(x): 15132.0234, norm(y): 0.9767, norm:142169.5938, tok/sec: 115375.83, flops:44.95, batch-reuse:1
@ 1902 train 7.8692 , allloss: 265652.6250, dt: 1114.39ms, fracRes: 0.5945, norm(attn): 111.0000, norm(output): 48896.0000, norm(x): 16364.0713, norm(y): 0.9777, norm:147979.2812, tok/sec: 117617.67, flops:45.82, batch-reuse:1
@ 1903 train 7.8343 , allloss: 288704.1875, dt: 1101.81ms, fracRes: 0.5959, norm(attn): 112.5000, norm(output): 52480.0000, norm(x): 17639.5234, norm(y): 0.9788, norm:147086.8594, tok/sec: 118960.36, flops:46.35, batch-reuse:1
@ 1904 train 7.8038 , allloss: 321638.1562, dt: 1113.13ms, fracRes: 0.5950, norm(attn): 118.5000, norm(output): 57088.0000, norm(x): 19098.5918, norm(y): 0.9799, norm:162022.2031, tok/sec: 117751.14, flops:45.88, batch-reuse:1
@ 1905 train 7.7503 , allloss: 335895.2188, dt: 1097.65ms, fracRes: 0.5945, norm(attn): 121.0000, norm(output): 61184.0000, norm(x): 20612.2246, norm(y): 0.9810, norm:171870.3594, tok/sec: 119411.67, flops:46.52, batch-reuse:1
@ 1906 train 7.7842 , allloss: 366627.6562, dt: 1110.17ms, fracRes: 0.5950, norm(attn): 127.5000, norm(output): 65536.0000, norm(x): 22209.5488, norm(y): 0.9821, norm:175271.0781, tok/sec: 118065.02, flops:46.00, batch-reuse:1
@ 1907 train 7.7875 , allloss: 392477.3438, dt: 1123.80ms, fracRes: 0.5952, norm(attn): 131.0000, norm(output): 70656.0000, norm(x): 23885.0742, norm(y): 0.9832, norm:182644.6094, tok/sec: 116632.90, flops:45.44, batch-reuse:1
@ 1908 train 7.8693 , allloss: 422538.8438, dt: 1120.17ms, fracRes: 0.5951, norm(attn): 135.0000, norm(output): 76288.0000, norm(x): 25666.8496, norm(y): 0.9843, norm:175879.6250, tok/sec: 117011.12, flops:45.59, batch-reuse:1
@ 1909 train 7.7933 , allloss: 455468.9688, dt: 1099.07ms, fracRes: 0.5943, norm(attn): 140.0000, norm(output): 81920.0000, norm(x): 27640.7480, norm(y): 0.9854, norm:166440.5000, tok/sec: 119257.31, flops:46.46, batch-reuse:1
@ 1910 train 7.8054 , allloss: 489209.5938, dt: 1124.26ms, fracRes: 0.5952, norm(attn): 145.0000, norm(output): 87552.0000, norm(x): 29592.2383, norm(y): 0.9865, norm:166362.0938, tok/sec: 116585.04, flops:45.42, batch-reuse:1
@ 1911 train 7.7790 , allloss: 522367.9375, dt: 1116.97ms, fracRes: 0.5946, norm(attn): 149.0000, norm(output): 95744.0000, norm(x): 31809.0449, norm(y): 0.9877, norm:170976.2500, tok/sec: 117346.23, flops:45.72, batch-reuse:1
@ 1912 train 7.8088 , allloss: 563774.1250, dt: 1124.53ms, fracRes: 0.5938, norm(attn): 155.0000, norm(output): 100864.0000, norm(x): 34126.2539, norm(y): 0.9888, norm:215844.5000, tok/sec: 116557.35, flops:45.41, batch-reuse:1
@ 1913 train 7.8240 , allloss: 604097.3750, dt: 1111.43ms, fracRes: 0.5947, norm(attn): 160.0000, norm(output): 107008.0000, norm(x): 36474.9023, norm(y): 0.9899, norm:166967.0156, tok/sec: 117931.19, flops:45.95, batch-reuse:1
@ 1914 train 7.8366 , allloss: 646253.2500, dt: 1123.16ms, fracRes: 0.5953, norm(attn): 166.0000, norm(output): 114688.0000, norm(x): 38955.8984, norm(y): 0.9911, norm:166860.2188, tok/sec: 116699.08, flops:45.47, batch-reuse:1
@ 1915 train 7.7471 , allloss: 690451.2500, dt: 1102.48ms, fracRes: 0.5946, norm(attn): 169.0000, norm(output): 123392.0000, norm(x): 41696.7031, norm(y): 0.9923, norm:153366.6250, tok/sec: 118888.69, flops:46.32, batch-reuse:1
@ 1916 train 7.8858 , allloss: 743487.4375, dt: 1122.65ms, fracRes: 0.5939, norm(attn): 176.0000, norm(output): 131072.0000, norm(x): 44449.8984, norm(y): 0.9933, norm:169510.8594, tok/sec: 116752.81, flops:45.49, batch-reuse:1
@ 1917 train 7.8387 , allloss: 783669.7500, dt: 1119.02ms, fracRes: 0.5945, norm(attn): 178.0000, norm(output): 140288.0000, norm(x): 47456.9258, norm(y): 0.9946, norm:129982.5547, tok/sec: 117130.96, flops:45.63, batch-reuse:1
@ 1918 train 7.8200 , allloss: 843225.5000, dt: 1124.81ms, fracRes: 0.5943, norm(attn): 189.0000, norm(output): 148480.0000, norm(x): 50545.8047, norm(y): 0.9957, norm:135098.7656, tok/sec: 116527.78, flops:45.40, batch-reuse:1
@ 1919 train 7.9510 , allloss: 912765.7500, dt: 1129.08ms, fracRes: 0.5924, norm(attn): 191.0000, norm(output): 159744.0000, norm(x): 53743.1250, norm(y): 0.9968, norm:117030.8906, tok/sec: 116087.38, flops:45.23, batch-reuse:1
@ 1920 train 7.8058 , allloss: 966453.6250, dt: 1108.06ms, fracRes: 0.5889, norm(attn): 197.0000, norm(output): 167936.0000, norm(x): 57718.8242, norm(y): 0.9979, norm:159560.8125, tok/sec: 118289.46, flops:46.09, batch-reuse:1
@ 1921 train 7.8336 , allloss: 1019593.0000, dt: 1114.73ms, fracRes: 0.5827, norm(attn): 202.0000, norm(output): 179200.0000, norm(x): 61502.0273, norm(y): 0.9988, norm:72308.1328, tok/sec: 117581.42, flops:45.81, batch-reuse:1
@ 1922 train 7.7844 , allloss: 1070560.0000, dt: 1118.80ms, fracRes: 0.5830, norm(attn): 208.0000, norm(output): 187392.0000, norm(x): 64946.1328, norm(y): 1.0000, norm:83864.7266, tok/sec: 117153.73, flops:45.64, batch-reuse:1
@ 1923 train 7.9040 , allloss: 1152986.2500, dt: 1122.23ms, fracRes: 0.5820, norm(attn): 210.0000, norm(output): 196608.0000, norm(x): 68028.1328, norm(y): 1.0008, norm:209335.5625, tok/sec: 116796.17, flops:45.50, batch-reuse:1
@ 1924 train 7.8519 , allloss: 1197340.0000, dt: 1112.06ms, fracRes: 0.5864, norm(attn): 223.0000, norm(output): 208896.0000, norm(x): 71837.3984, norm(y): 1.0024, norm:106548.9766, tok/sec: 117864.01, flops:45.92, batch-reuse:1
@ 1925 train 7.8732 , allloss: 1307983.5000, dt: 1110.54ms, fracRes: 0.5830, norm(attn): 224.0000, norm(output): 215040.0000, norm(x): 75871.8281, norm(y): 1.0033, norm:128327.5547, tok/sec: 118025.96, flops:45.98, batch-reuse:1
@ 1926 train 7.8473 , allloss: 1434113.3750, dt: 1113.88ms, fracRes: 0.5827, norm(attn): 228.0000, norm(output): 228352.0000, norm(x): 79152.0234, norm(y): 1.0043, norm:1231916.7500, tok/sec: 117671.12, flops:45.84, batch-reuse:1
@ 1927 train 7.8747 , allloss: 1445015.1250, dt: 1106.26ms, fracRes: 0.5848, norm(attn): 235.0000, norm(output): 233472.0000, norm(x): 81420.2969, norm(y): 1.0050, norm:191528.8438, tok/sec: 118481.88, flops:46.16, batch-reuse:1
@ 1928 train 7.8045 , allloss: 1469729.0000, dt: 1106.45ms, fracRes: 0.5833, norm(attn): 237.0000, norm(output): 241664.0000, norm(x): 84167.7266, norm(y): 1.0056, norm:673408.0625, tok/sec: 118462.15, flops:46.15, batch-reuse:1
@ 1929 train 7.7669 , allloss: 1505630.5000, dt: 1112.93ms, fracRes: 0.5817, norm(attn): 241.0000, norm(output): 246784.0000, norm(x): 86754.5703, norm(y): 1.0062, norm:156475.7500, tok/sec: 117772.03, flops:45.88, batch-reuse:1
@ 1930 train 7.8169 , allloss: 1021099.0625, dt: 1134.28ms, fracRes: 0.5360, norm(attn): 239.0000, norm(output): 247808.0000, norm(x): 98169.0469, norm(y): 1.0066, norm:96087000.0000, tok/sec: 115555.12, flops:45.02, batch-reuse:1
@ 1931 train 7.8549 , allloss: 1172689.7500, dt: 1124.33ms, fracRes: 0.5973, norm(attn): 226.0000, norm(output): 240640.0000, norm(x): 80722.5156, norm(y): 1.0064, norm:945894.0625, tok/sec: 116578.17, flops:45.42, batch-reuse:1
@ 1932 train 7.8037 , allloss: 1208297.1250, dt: 1130.63ms, fracRes: 0.5938, norm(attn): 228.0000, norm(output): 244736.0000, norm(x): 81767.5000, norm(y): 1.0068, norm:424941.5625, tok/sec: 115928.46, flops:45.17, batch-reuse:1
@ 1933 train 7.8954 , allloss: 1252151.5000, dt: 1106.78ms, fracRes: 0.5942, norm(attn): 230.0000, norm(output): 246784.0000, norm(x): 82629.8359, norm(y): 1.0071, norm:143529.5625, tok/sec: 118426.80, flops:46.14, batch-reuse:1
@ 1934 train 7.9172 , allloss: 1270700.6250, dt: 1114.45ms, fracRes: 0.5943, norm(attn): 232.0000, norm(output): 253952.0000, norm(x): 84429.4062, norm(y): 1.0077, norm:141404.5312, tok/sec: 117611.63, flops:45.82, batch-reuse:1
@ 1935 train 7.8121 , allloss: 1283961.0000, dt: 1119.13ms, fracRes: 0.5955, norm(attn): 239.0000, norm(output): 260096.0000, norm(x): 86685.5859, norm(y): 1.0082, norm:134413.8906, tok/sec: 117119.91, flops:45.63, batch-reuse:1
@ 1936 train 7.7953 , allloss: 1354760.2500, dt: 1115.27ms, fracRes: 0.5953, norm(attn): 240.0000, norm(output): 266240.0000, norm(x): 89178.5859, norm(y): 1.0088, norm:79366.6094, tok/sec: 117524.54, flops:45.79, batch-reuse:1
@ 1937 train 7.8042 , allloss: 1413842.1250, dt: 1105.21ms, fracRes: 0.5951, norm(attn): 243.0000, norm(output): 278528.0000, norm(x): 91625.8750, norm(y): 1.0095, norm:97870.5625, tok/sec: 118594.83, flops:46.20, batch-reuse:1
@ 1938 train 7.8677 , allloss: 1389596.0000, dt: 1110.12ms, fracRes: 0.5958, norm(attn): 247.0000, norm(output): 282624.0000, norm(x): 93797.6250, norm(y): 1.0101, norm:271335.7500, tok/sec: 118069.63, flops:46.00, batch-reuse:1
@ 1939 train 7.8972 , allloss: 1452248.8750, dt: 1114.60ms, fracRes: 0.5946, norm(attn): 252.0000, norm(output): 292864.0000, norm(x): 96486.8047, norm(y): 1.0108, norm:123722.8594, tok/sec: 117595.10, flops:45.82, batch-reuse:1
@ 1940 train 7.9608 , allloss: 1491907.6250, dt: 1138.16ms, fracRes: 0.5879, norm(attn): 253.0000, norm(output): 296960.0000, norm(x): 99028.4844, norm(y): 1.0115, norm:632297.9375, tok/sec: 115161.24, flops:44.87, batch-reuse:1
@ 1941 train 7.8304 , allloss: 954635.8125, dt: 1113.11ms, fracRes: 0.5266, norm(attn): 254.0000, norm(output): 301056.0000, norm(x): 120897.0234, norm(y): 1.0122, norm:467674.7188, tok/sec: 117753.31, flops:45.88, batch-reuse:1
@ 1942 train 7.8198 , allloss: 1022620.5000, dt: 1103.62ms, fracRes: 0.5252, norm(attn): 255.0000, norm(output): 303104.0000, norm(x): 121927.9766, norm(y): 1.0126, norm:525645.8750, tok/sec: 118765.54, flops:46.27, batch-reuse:1
@ 1943 train 7.8002 , allloss: 1415326.3750, dt: 1111.81ms, fracRes: 0.5247, norm(attn): 250.0000, norm(output): 303104.0000, norm(x): 121227.2344, norm(y): 1.0128, norm:13416609.0000, tok/sec: 117890.75, flops:45.93, batch-reuse:1
@ 1944 train 7.8066 , allloss: 972715.1875, dt: 1132.56ms, fracRes: 0.5243, norm(attn): 225.0000, norm(output): 276480.0000, norm(x): 109975.4219, norm(y): 1.0130, norm:381147.3438, tok/sec: 115731.10, flops:45.09, batch-reuse:1
@ 1945 train 7.8245 , allloss: 970628.8125, dt: 1131.43ms, fracRes: 0.5252, norm(attn): 224.0000, norm(output): 272384.0000, norm(x): 108871.3281, norm(y): 1.0129, norm:361716.6875, tok/sec: 115845.86, flops:45.13, batch-reuse:1
@ 1946 train 7.8984 , allloss: 969848.6250, dt: 1122.64ms, fracRes: 0.5256, norm(attn): 222.0000, norm(output): 268288.0000, norm(x): 107052.9219, norm(y): 1.0127, norm:646079.1875, tok/sec: 116753.63, flops:45.49, batch-reuse:1
@ 1947 train 7.8831 , allloss: 936381.8125, dt: 1118.91ms, fracRes: 0.5259, norm(attn): 221.0000, norm(output): 264192.0000, norm(x): 106112.6406, norm(y): 1.0125, norm:337107.5000, tok/sec: 117143.09, flops:45.64, batch-reuse:1
@ 1948 train 7.8716 , allloss: 919816.2500, dt: 1135.81ms, fracRes: 0.5254, norm(attn): 220.0000, norm(output): 261120.0000, norm(x): 104584.2891, norm(y): 1.0122, norm:290336.6250, tok/sec: 115399.59, flops:44.96, batch-reuse:1
@ 1949 train 7.8397 , allloss: 917949.1875, dt: 1138.43ms, fracRes: 0.5255, norm(attn): 216.0000, norm(output): 258048.0000, norm(x): 102399.1875, norm(y): 1.0117, norm:241763.1875, tok/sec: 115133.53, flops:44.86, batch-reuse:1
@ 1950 train 7.9263 , allloss: 896343.8125, dt: 1137.02ms, fracRes: 0.5252, norm(attn): 209.0000, norm(output): 249856.0000, norm(x): 99609.2812, norm(y): 1.0112, norm:205205.9531, tok/sec: 115277.13, flops:44.91, batch-reuse:1
@ 1951 train 7.8956 , allloss: 1355387.1250, dt: 1116.73ms, fracRes: 0.5321, norm(attn): 193.0000, norm(output): 227328.0000, norm(x): 89200.5781, norm(y): 1.0106, norm:79067792.0000, tok/sec: 117371.41, flops:45.73, batch-reuse:1
@ 1952 train 7.9170 , allloss: 892095.0000, dt: 1133.05ms, fracRes: 0.5252, norm(attn): 205.0000, norm(output): 231424.0000, norm(x): 94206.7031, norm(y): 1.0101, norm:121817.0156, tok/sec: 115680.86, flops:45.07, batch-reuse:1
@ 1953 train 7.9333 , allloss: 904057.3750, dt: 1128.63ms, fracRes: 0.5258, norm(attn): 202.0000, norm(output): 230400.0000, norm(x): 91783.8281, norm(y): 1.0096, norm:4583294.5000, tok/sec: 116133.38, flops:45.25, batch-reuse:1
@ 1954 train 7.8309 , allloss: 861768.6875, dt: 1113.80ms, fracRes: 0.5256, norm(attn): 199.0000, norm(output): 226304.0000, norm(x): 90439.1641, norm(y): 1.0092, norm:90817.0781, tok/sec: 117680.21, flops:45.85, batch-reuse:1
@ 1955 train 7.8967 , allloss: 867607.5000, dt: 1109.36ms, fracRes: 0.5250, norm(attn): 194.0000, norm(output): 224256.0000, norm(x): 88995.9531, norm(y): 1.0089, norm:140181.3438, tok/sec: 118151.19, flops:46.03, batch-reuse:1
@ 1956 train 7.8148 , allloss: 870283.3125, dt: 1115.75ms, fracRes: 0.5253, norm(attn): 194.0000, norm(output): 223232.0000, norm(x): 88630.8359, norm(y): 1.0088, norm:519545.8125, tok/sec: 117474.16, flops:45.77, batch-reuse:1
@ 1957 train 7.8940 , allloss: 866751.6875, dt: 1142.12ms, fracRes: 0.5245, norm(attn): 193.0000, norm(output): 218112.0000, norm(x): 87857.3281, norm(y): 1.0085, norm:144641.1875, tok/sec: 114761.87, flops:44.71, batch-reuse:1
@ 1958 train 7.9128 , allloss: 875414.7500, dt: 1131.01ms, fracRes: 0.5246, norm(attn): 194.0000, norm(output): 219136.0000, norm(x): 87455.8672, norm(y): 1.0084, norm:353543.2812, tok/sec: 115889.36, flops:45.15, batch-reuse:1
@ 1959 train 7.8562 , allloss: 2075371.2500, dt: 1128.28ms, fracRes: 0.5832, norm(attn): 88.5000, norm(output): 92672.0000, norm(x): 34661.9141, norm(y): 1.0084, norm:906730.1875, tok/sec: 116169.29, flops:45.26, batch-reuse:1
@ 1960 train 7.8397 , allloss: 2154909.7500, dt: 1129.28ms, fracRes: 0.5804, norm(attn): 95.5000, norm(output): 99840.0000, norm(x): 37141.0195, norm(y): 1.0084, norm:18670268.0000, tok/sec: 116066.69, flops:45.22, batch-reuse:1
@ 1961 train 7.9483 , allloss: 965126.7500, dt: 1123.03ms, fracRes: 0.5230, norm(attn): 193.0000, norm(output): 215040.0000, norm(x): 87517.8672, norm(y): 1.0083, norm:329485.8750, tok/sec: 116712.78, flops:45.47, batch-reuse:1
@ 1962 train 7.7893 , allloss: 1065917.5000, dt: 1103.29ms, fracRes: 0.5221, norm(attn): 195.0000, norm(output): 219136.0000, norm(x): 88919.8672, norm(y): 1.0085, norm:651150.1875, tok/sec: 118801.49, flops:46.29, batch-reuse:1
@ 1963 train 7.9457 , allloss: 1276664.5000, dt: 1124.89ms, fracRes: 0.5142, norm(attn): 194.0000, norm(output): 223232.0000, norm(x): 91104.7891, norm(y): 1.0085, norm:8430225.0000, tok/sec: 116519.68, flops:45.40, batch-reuse:1
@ 1964 train 7.9267 , allloss: 1333277.5000, dt: 1101.45ms, fracRes: 0.4968, norm(attn): 196.0000, norm(output): 225280.0000, norm(x): 96613.3984, norm(y): 1.0087, norm:13989256.0000, tok/sec: 118999.48, flops:46.36, batch-reuse:1
@ 1965 train 7.8140 , allloss: 1301533.5000, dt: 1113.62ms, fracRes: 0.5183, norm(attn): 198.0000, norm(output): 226304.0000, norm(x): 92218.1484, norm(y): 1.0089, norm:1970514.2500, tok/sec: 117698.73, flops:45.86, batch-reuse:1
@ 1966 train 7.9108 , allloss: 1164045.1250, dt: 1128.25ms, fracRes: 0.5210, norm(attn): 197.0000, norm(output): 225280.0000, norm(x): 91438.0625, norm(y): 1.0089, norm:367569.9062, tok/sec: 116172.87, flops:45.26, batch-reuse:1
@ 1967 train 7.8166 , allloss: 1139502.6250, dt: 1112.21ms, fracRes: 0.5221, norm(attn): 200.0000, norm(output): 230400.0000, norm(x): 92938.7188, norm(y): 1.0092, norm:540911.9375, tok/sec: 117848.02, flops:45.91, batch-reuse:1
@ 1968 train 7.8197 , allloss: 1145407.8750, dt: 1125.75ms, fracRes: 0.5217, norm(attn): 203.0000, norm(output): 230400.0000, norm(x): 93710.9531, norm(y): 1.0094, norm:446421.6562, tok/sec: 116431.19, flops:45.36, batch-reuse:1
@ 1969 train 7.8344 , allloss: 1233447.6250, dt: 1137.84ms, fracRes: 0.5210, norm(attn): 206.0000, norm(output): 231424.0000, norm(x): 95256.5938, norm(y): 1.0096, norm:377360.1875, tok/sec: 115194.18, flops:44.88, batch-reuse:1
@ 1970 train 7.8384 , allloss: 1333199.6250, dt: 1134.66ms, fracRes: 0.5199, norm(attn): 207.0000, norm(output): 237568.0000, norm(x): 97395.2578, norm(y): 1.0100, norm:330587.2188, tok/sec: 115516.47, flops:45.01, batch-reuse:1
@ 1971 train 7.8858 , allloss: 1201138.2500, dt: 1133.03ms, fracRes: 0.4918, norm(attn): 208.0000, norm(output): 244736.0000, norm(x): 107025.5781, norm(y): 1.0104, norm:14362095.0000, tok/sec: 115683.20, flops:45.07, batch-reuse:1
@ 1972 train 7.9056 , allloss: 928488.0000, dt: 1117.65ms, fracRes: 0.4669, norm(attn): 209.0000, norm(output): 246784.0000, norm(x): 116983.7188, norm(y): 1.0107, norm:749701.8125, tok/sec: 117274.74, flops:45.69, batch-reuse:1
@ 1973 train 7.8995 , allloss: 964340.3125, dt: 1134.83ms, fracRes: 0.4605, norm(attn): 216.0000, norm(output): 256000.0000, norm(x): 120415.7344, norm(y): 1.0112, norm:489000.1875, tok/sec: 115499.29, flops:45.00, batch-reuse:1
@ 1974 train 7.9770 , allloss: 991487.9375, dt: 1131.85ms, fracRes: 0.4585, norm(attn): 220.0000, norm(output): 260096.0000, norm(x): 123974.4609, norm(y): 1.0117, norm:467402.9688, tok/sec: 115803.40, flops:45.12, batch-reuse:1
@ 1975 train 7.8871 , allloss: 1036430.8750, dt: 1112.41ms, fracRes: 0.4585, norm(attn): 225.0000, norm(output): 274432.0000, norm(x): 129027.1953, norm(y): 1.0125, norm:421939.3125, tok/sec: 117826.65, flops:45.91, batch-reuse:1
@ 1976 train 7.9659 , allloss: 1059931.1250, dt: 1112.95ms, fracRes: 0.4584, norm(attn): 226.0000, norm(output): 280576.0000, norm(x): 133567.0781, norm(y): 1.0132, norm:396367.9375, tok/sec: 117769.73, flops:45.88, batch-reuse:1
@ 1977 train 7.8755 , allloss: 1123265.1250, dt: 1110.55ms, fracRes: 0.4586, norm(attn): 233.0000, norm(output): 292864.0000, norm(x): 139520.6875, norm(y): 1.0141, norm:535208.1875, tok/sec: 118024.18, flops:45.98, batch-reuse:1
@ 1978 train 7.8700 , allloss: 1157698.7500, dt: 1110.94ms, fracRes: 0.4586, norm(attn): 240.0000, norm(output): 305152.0000, norm(x): 145144.2188, norm(y): 1.0149, norm:380862.7500, tok/sec: 117983.45, flops:45.97, batch-reuse:1
@ 1979 train 7.8955 , allloss: 1219832.2500, dt: 1125.67ms, fracRes: 0.4586, norm(attn): 244.0000, norm(output): 321536.0000, norm(x): 151317.9375, norm(y): 1.0157, norm:346225.4375, tok/sec: 116439.30, flops:45.36, batch-reuse:1
@ 1980 train 7.9059 , allloss: 1327048.2500, dt: 1125.23ms, fracRes: 0.4588, norm(attn): 253.0000, norm(output): 329728.0000, norm(x): 158394.3906, norm(y): 1.0167, norm:225705.4531, tok/sec: 116484.30, flops:45.38, batch-reuse:1
@ 1981 train 7.8800 , allloss: 1427633.0000, dt: 1116.99ms, fracRes: 0.4589, norm(attn): 256.0000, norm(output): 350208.0000, norm(x): 164603.9844, norm(y): 1.0176, norm:304573.1562, tok/sec: 117343.97, flops:45.72, batch-reuse:1
@ 1982 train 7.7780 , allloss: 1469215.2500, dt: 1123.25ms, fracRes: 0.4590, norm(attn): 264.0000, norm(output): 366592.0000, norm(x): 172653.3125, norm(y): 1.0186, norm:290238.4688, tok/sec: 116689.57, flops:45.46, batch-reuse:1
@ 1983 train 7.8297 , allloss: 1561582.2500, dt: 1108.97ms, fracRes: 0.4590, norm(attn): 272.0000, norm(output): 380928.0000, norm(x): 179660.1250, norm(y): 1.0196, norm:253603.5312, tok/sec: 118192.82, flops:46.05, batch-reuse:1
@ 1984 train 7.8009 , allloss: 1623514.0000, dt: 1099.32ms, fracRes: 0.4589, norm(attn): 274.0000, norm(output): 395264.0000, norm(x): 186411.9062, norm(y): 1.0204, norm:240626.2969, tok/sec: 119230.13, flops:46.45, batch-reuse:1
@ 1985 train 7.8129 , allloss: 1728201.3750, dt: 1116.23ms, fracRes: 0.4590, norm(attn): 282.0000, norm(output): 413696.0000, norm(x): 192721.7500, norm(y): 1.0212, norm:253166.9844, tok/sec: 117423.45, flops:45.75, batch-reuse:1
@ 1986 train 7.9068 , allloss: 1824830.7500, dt: 1116.06ms, fracRes: 0.4591, norm(attn): 286.0000, norm(output): 421888.0000, norm(x): 198404.0781, norm(y): 1.0220, norm:247071.3906, tok/sec: 117441.64, flops:45.76, batch-reuse:1
@ 1987 train 7.9141 , allloss: 1931951.2500, dt: 1129.50ms, fracRes: 0.4592, norm(attn): 290.0000, norm(output): 425984.0000, norm(x): 202618.2031, norm(y): 1.0226, norm:252945.8438, tok/sec: 116044.62, flops:45.21, batch-reuse:1
@ 1988 train 7.7860 , allloss: 1973662.8750, dt: 1119.76ms, fracRes: 0.4591, norm(attn): 292.0000, norm(output): 446464.0000, norm(x): 208896.0625, norm(y): 1.0233, norm:270797.9062, tok/sec: 117053.95, flops:45.60, batch-reuse:1
@ 1989 train 7.8392 , allloss: 2016946.5000, dt: 1110.00ms, fracRes: 0.4588, norm(attn): 298.0000, norm(output): 450560.0000, norm(x): 212658.5312, norm(y): 1.0238, norm:388311.7500, tok/sec: 118082.67, flops:46.01, batch-reuse:1
@ 1990 train 7.8610 , allloss: 2084959.7500, dt: 1131.81ms, fracRes: 0.4535, norm(attn): 300.0000, norm(output): 458752.0000, norm(x): 215833.7188, norm(y): 1.0243, norm:226407.6562, tok/sec: 115807.06, flops:45.12, batch-reuse:1
@ 1991 train 7.8245 , allloss: 2134231.2500, dt: 1106.64ms, fracRes: 0.4507, norm(attn): 302.0000, norm(output): 460800.0000, norm(x): 220276.9688, norm(y): 1.0249, norm:512619.9062, tok/sec: 118441.07, flops:46.14, batch-reuse:1
@ 1992 train 7.8078 , allloss: 2228847.0000, dt: 1131.00ms, fracRes: 0.4514, norm(attn): 306.0000, norm(output): 468992.0000, norm(x): 222614.6875, norm(y): 1.0252, norm:575907.0625, tok/sec: 115890.28, flops:45.15, batch-reuse:1
@ 1993 train 7.7956 , allloss: 2252060.7500, dt: 1133.43ms, fracRes: 0.4519, norm(attn): 310.0000, norm(output): 479232.0000, norm(x): 224008.6719, norm(y): 1.0253, norm:781486.3750, tok/sec: 115642.05, flops:45.05, batch-reuse:1
@ 1994 train 7.8457 , allloss: 2215655.2500, dt: 1118.79ms, fracRes: 0.4514, norm(attn): 308.0000, norm(output): 466944.0000, norm(x): 221127.5938, norm(y): 1.0251, norm:543655.6250, tok/sec: 117155.62, flops:45.64, batch-reuse:1
@ 1995 train 7.7813 , allloss: 2076024.2500, dt: 1105.67ms, fracRes: 0.4508, norm(attn): 300.0000, norm(output): 458752.0000, norm(x): 217621.0469, norm(y): 1.0248, norm:408899.0000, tok/sec: 118545.52, flops:46.19, batch-reuse:1
@ 1996 train 7.8448 , allloss: 2014948.0000, dt: 1125.32ms, fracRes: 0.4504, norm(attn): 298.0000, norm(output): 450560.0000, norm(x): 212767.8906, norm(y): 1.0244, norm:516244.8438, tok/sec: 116475.79, flops:45.38, batch-reuse:1
@ 1997 train 7.7824 , allloss: 1925048.2500, dt: 1117.80ms, fracRes: 0.4507, norm(attn): 292.0000, norm(output): 450560.0000, norm(x): 208870.3125, norm(y): 1.0240, norm:419072.9688, tok/sec: 117259.18, flops:45.68, batch-reuse:1
@ 1998 train 7.7912 , allloss: 1847211.5000, dt: 1131.21ms, fracRes: 0.4504, norm(attn): 292.0000, norm(output): 430080.0000, norm(x): 203212.4531, norm(y): 1.0233, norm:391605.8750, tok/sec: 115868.96, flops:45.14, batch-reuse:1
@ 1999 train 7.8018 , allloss: 1766449.2500, dt: 1133.37ms, fracRes: 0.4502, norm(attn): 288.0000, norm(output): 423936.0000, norm(x): 197724.7969, norm(y): 1.0227, norm:640031.0000, tok/sec: 115647.79, flops:45.06, batch-reuse:1
@ 2000 val 7.8547
@ 2000 train 7.7914 , allloss: 1654813.1250, dt: 1640.46ms, fracRes: 0.4501, norm(attn): 286.0000, norm(output): 407552.0000, norm(x): 191783.9375, norm(y): 1.0220, norm:418363.9688, tok/sec: 79899.40, flops:31.13, batch-reuse:1
@ 2001 train 7.8612 , allloss: 1567762.0000, dt: 1124.56ms, fracRes: 0.4499, norm(attn): 274.0000, norm(output): 393216.0000, norm(x): 185114.6875, norm(y): 1.0212, norm:453391.9688, tok/sec: 116554.14, flops:45.41, batch-reuse:1
@ 2002 train 7.8202 , allloss: 1457599.7500, dt: 1119.30ms, fracRes: 0.4496, norm(attn): 272.0000, norm(output): 372736.0000, norm(x): 178419.3750, norm(y): 1.0203, norm:468612.4688, tok/sec: 117101.67, flops:45.62, batch-reuse:1
@ 2003 train 7.8763 , allloss: 1427122.3750, dt: 1115.60ms, fracRes: 0.4494, norm(attn): 268.0000, norm(output): 362496.0000, norm(x): 171451.8125, norm(y): 1.0194, norm:476769.4062, tok/sec: 117490.48, flops:45.77, batch-reuse:1
@ 2004 train 7.8217 , allloss: 1354499.3750, dt: 1129.74ms, fracRes: 0.4496, norm(attn): 260.0000, norm(output): 350208.0000, norm(x): 164907.0469, norm(y): 1.0186, norm:515127.3125, tok/sec: 116019.52, flops:45.20, batch-reuse:1
@ 2005 train 7.7713 , allloss: 1241472.5000, dt: 1125.66ms, fracRes: 0.4498, norm(attn): 255.0000, norm(output): 329728.0000, norm(x): 158253.6250, norm(y): 1.0177, norm:426853.9688, tok/sec: 116439.67, flops:45.36, batch-reuse:1
@ 2006 train 7.8791 , allloss: 1178772.0000, dt: 1115.11ms, fracRes: 0.4492, norm(attn): 252.0000, norm(output): 319488.0000, norm(x): 150386.6875, norm(y): 1.0166, norm:443240.2812, tok/sec: 117542.10, flops:45.79, batch-reuse:1
@ 2007 train 7.7720 , allloss: 1108810.6250, dt: 1098.33ms, fracRes: 0.4495, norm(attn): 242.0000, norm(output): 299008.0000, norm(x): 143903.7969, norm(y): 1.0156, norm:528806.6250, tok/sec: 119337.62, flops:46.49, batch-reuse:1
@ 2008 train 7.7959 , allloss: 1027899.3750, dt: 1105.13ms, fracRes: 0.4493, norm(attn): 239.0000, norm(output): 290816.0000, norm(x): 136975.1719, norm(y): 1.0146, norm:502518.2812, tok/sec: 118603.17, flops:46.21, batch-reuse:1
@ 2009 train 7.8075 , allloss: 962627.5625, dt: 1113.26ms, fracRes: 0.4493, norm(attn): 227.0000, norm(output): 276480.0000, norm(x): 130215.2422, norm(y): 1.0136, norm:126209.4609, tok/sec: 117736.84, flops:45.87, batch-reuse:1
@ 2010 train 7.7877 , allloss: 899862.9375, dt: 1123.55ms, fracRes: 0.4491, norm(attn): 224.0000, norm(output): 260096.0000, norm(x): 123584.5078, norm(y): 1.0126, norm:198093.9844, tok/sec: 116659.11, flops:45.45, batch-reuse:1
@ 2011 train 7.9400 , allloss: 845380.9375, dt: 1124.37ms, fracRes: 0.4488, norm(attn): 220.0000, norm(output): 246784.0000, norm(x): 117204.9062, norm(y): 1.0115, norm:122771.2812, tok/sec: 116574.21, flops:45.42, batch-reuse:1
@ 2012 train 7.8229 , allloss: 813558.7500, dt: 1113.47ms, fracRes: 0.4490, norm(attn): 212.0000, norm(output): 233472.0000, norm(x): 112033.3984, norm(y): 1.0107, norm:99739.5547, tok/sec: 117715.26, flops:45.86, batch-reuse:1
@ 2013 train 7.8068 , allloss: 781033.8750, dt: 1113.54ms, fracRes: 0.4492, norm(attn): 207.0000, norm(output): 226304.0000, norm(x): 107184.6484, norm(y): 1.0098, norm:116841.8750, tok/sec: 117707.62, flops:45.86, batch-reuse:1
@ 2014 train 7.8120 , allloss: 813035.2500, dt: 1092.83ms, fracRes: 0.3825, norm(attn): 152.0000, norm(output): 157696.0000, norm(x): 87893.4375, norm(y): 1.0091, norm:88223.6953, tok/sec: 119938.23, flops:46.73, batch-reuse:1
@ 2015 train 7.7903 , allloss: 834681.0000, dt: 1103.95ms, fracRes: 0.3824, norm(attn): 150.0000, norm(output): 153600.0000, norm(x): 85444.5703, norm(y): 1.0085, norm:299394.1562, tok/sec: 118729.86, flops:46.26, batch-reuse:1
@ 2016 train 7.7442 , allloss: 797917.1875, dt: 1117.99ms, fracRes: 0.3825, norm(attn): 150.0000, norm(output): 152576.0000, norm(x): 84058.2656, norm(y): 1.0081, norm:270773.1875, tok/sec: 117239.15, flops:45.68, batch-reuse:1
@ 2017 train 7.8309 , allloss: 767088.6250, dt: 1107.28ms, fracRes: 0.3824, norm(attn): 150.0000, norm(output): 150528.0000, norm(x): 83370.9922, norm(y): 1.0077, norm:298120.8125, tok/sec: 118372.90, flops:46.12, batch-reuse:1
@ 2018 train 7.8198 , allloss: 758347.8125, dt: 1124.18ms, fracRes: 0.3824, norm(attn): 150.0000, norm(output): 152576.0000, norm(x): 83728.9609, norm(y): 1.0075, norm:225550.1875, tok/sec: 116593.10, flops:45.42, batch-reuse:1
@ 2019 train 7.8379 , allloss: 776453.4375, dt: 1122.35ms, fracRes: 0.3824, norm(attn): 154.0000, norm(output): 153600.0000, norm(x): 85408.9688, norm(y): 1.0075, norm:400177.1875, tok/sec: 116783.66, flops:45.50, batch-reuse:1
@ 2020 train 7.7693 , allloss: 743168.8750, dt: 1122.70ms, fracRes: 0.3824, norm(attn): 158.0000, norm(output): 157696.0000, norm(x): 87191.4375, norm(y): 1.0075, norm:285163.4062, tok/sec: 116747.63, flops:45.48, batch-reuse:1
@ 2021 train 7.7793 , allloss: 754978.0625, dt: 1122.42ms, fracRes: 0.3823, norm(attn): 160.0000, norm(output): 162816.0000, norm(x): 89505.8906, norm(y): 1.0075, norm:256723.4375, tok/sec: 116776.17, flops:45.50, batch-reuse:1
@ 2022 train 7.8162 , allloss: 731919.3750, dt: 1117.68ms, fracRes: 0.3823, norm(attn): 161.0000, norm(output): 165888.0000, norm(x): 92249.4141, norm(y): 1.0077, norm:243932.8125, tok/sec: 117271.96, flops:45.69, batch-reuse:1
@ 2023 train 7.8338 , allloss: 726874.0000, dt: 1107.72ms, fracRes: 0.3824, norm(attn): 166.0000, norm(output): 175104.0000, norm(x): 95654.6562, norm(y): 1.0080, norm:265909.2812, tok/sec: 118325.56, flops:46.10, batch-reuse:1
@ 2024 train 7.7438 , allloss: 736543.1875, dt: 1120.14ms, fracRes: 0.3824, norm(attn): 174.0000, norm(output): 180224.0000, norm(x): 99742.3828, norm(y): 1.0083, norm:196781.5938, tok/sec: 117013.84, flops:45.59, batch-reuse:1
@ 2025 train 7.7878 , allloss: 738980.3750, dt: 1115.39ms, fracRes: 0.3822, norm(attn): 176.0000, norm(output): 188416.0000, norm(x): 103598.2344, norm(y): 1.0086, norm:177246.8438, tok/sec: 117511.78, flops:45.78, batch-reuse:1
@ 2026 train 7.8254 , allloss: 789202.7500, dt: 1110.17ms, fracRes: 0.3733, norm(attn): 175.0000, norm(output): 195584.0000, norm(x): 107492.0000, norm(y): 1.0090, norm:938811.3125, tok/sec: 118064.56, flops:46.00, batch-reuse:1
@ 2027 train 7.7559 , allloss: 787166.1250, dt: 1114.61ms, fracRes: 0.3731, norm(attn): 179.0000, norm(output): 200704.0000, norm(x): 112062.1719, norm(y): 1.0095, norm:216358.4844, tok/sec: 117594.40, flops:45.81, batch-reuse:1
@ 2028 train 7.9465 , allloss: 834066.1250, dt: 1098.91ms, fracRes: 0.3730, norm(attn): 184.0000, norm(output): 210944.0000, norm(x): 115975.2891, norm(y): 1.0099, norm:168731.4688, tok/sec: 119274.62, flops:46.47, batch-reuse:1
@ 2029 train 7.8863 , allloss: 869252.2500, dt: 1107.52ms, fracRes: 0.3731, norm(attn): 188.0000, norm(output): 219136.0000, norm(x): 120256.4297, norm(y): 1.0104, norm:154684.4375, tok/sec: 118347.06, flops:46.11, batch-reuse:1
@ 2030 train 7.7435 , allloss: 939445.0000, dt: 1113.81ms, fracRes: 0.3735, norm(attn): 193.0000, norm(output): 228352.0000, norm(x): 124559.8750, norm(y): 1.0110, norm:164423.7500, tok/sec: 117679.00, flops:45.85, batch-reuse:1
@ 2031 train 7.8394 , allloss: 978988.1875, dt: 1128.46ms, fracRes: 0.3739, norm(attn): 194.0000, norm(output): 232448.0000, norm(x): 126770.3203, norm(y): 1.0113, norm:140046.3750, tok/sec: 116150.76, flops:45.25, batch-reuse:1
@ 2032 train 7.7242 , allloss: 984617.5625, dt: 1118.16ms, fracRes: 0.3744, norm(attn): 196.0000, norm(output): 233472.0000, norm(x): 129487.7344, norm(y): 1.0117, norm:219351.7031, tok/sec: 117221.00, flops:45.67, batch-reuse:1
@ 2033 train 7.7715 , allloss: 1008699.2500, dt: 1117.02ms, fracRes: 0.3741, norm(attn): 201.0000, norm(output): 237568.0000, norm(x): 130877.8359, norm(y): 1.0120, norm:205765.0781, tok/sec: 117340.84, flops:45.72, batch-reuse:1
@ 2034 train 7.7257 , allloss: 1007191.4375, dt: 1109.65ms, fracRes: 0.3741, norm(attn): 206.0000, norm(output): 243712.0000, norm(x): 132380.6406, norm(y): 1.0123, norm:217314.0781, tok/sec: 118120.44, flops:46.02, batch-reuse:1
@ 2035 train 7.7594 , allloss: 1022366.1875, dt: 1113.52ms, fracRes: 0.3743, norm(attn): 205.0000, norm(output): 241664.0000, norm(x): 132544.8594, norm(y): 1.0124, norm:188839.1250, tok/sec: 117710.04, flops:45.86, batch-reuse:1
@ 2036 train 7.7052 , allloss: 1034510.2500, dt: 1121.06ms, fracRes: 0.3741, norm(attn): 205.0000, norm(output): 240640.0000, norm(x): 132032.2188, norm(y): 1.0125, norm:261031.0000, tok/sec: 116917.75, flops:45.55, batch-reuse:1
@ 2037 train 7.8013 , allloss: 1020142.2500, dt: 1103.10ms, fracRes: 0.3742, norm(attn): 205.0000, norm(output): 233472.0000, norm(x): 130341.2734, norm(y): 1.0124, norm:271529280.0000, tok/sec: 118821.37, flops:46.29, batch-reuse:1
@ 2038 train 7.7952 , allloss: 991372.3750, dt: 1095.09ms, fracRes: 0.3742, norm(attn): 202.0000, norm(output): 233472.0000, norm(x): 129567.0469, norm(y): 1.0125, norm:246972.0625, tok/sec: 119690.55, flops:46.63, batch-reuse:1
@ 2039 train 7.8485 , allloss: 969521.3125, dt: 1104.30ms, fracRes: 0.3742, norm(attn): 201.0000, norm(output): 231424.0000, norm(x): 127586.7031, norm(y): 1.0123, norm:208363.5312, tok/sec: 118692.89, flops:46.24, batch-reuse:1
@ 2040 train 7.7759 , allloss: 912300.4375, dt: 1104.96ms, fracRes: 0.3747, norm(attn): 197.0000, norm(output): 230400.0000, norm(x): 125182.9609, norm(y): 1.0122, norm:245971.0312, tok/sec: 118621.88, flops:46.22, batch-reuse:1
@ 2041 train 7.8319 , allloss: 897333.0000, dt: 1104.83ms, fracRes: 0.3741, norm(attn): 194.0000, norm(output): 224256.0000, norm(x): 122162.0625, norm(y): 1.0119, norm:144120.3906, tok/sec: 118635.26, flops:46.22, batch-reuse:1
@ 2042 train 7.8889 , allloss: 858039.6250, dt: 1125.11ms, fracRes: 0.3746, norm(attn): 193.0000, norm(output): 215040.0000, norm(x): 119421.3125, norm(y): 1.0117, norm:190889.2344, tok/sec: 116497.26, flops:45.39, batch-reuse:1
@ 2043 train 7.7461 , allloss: 828975.7500, dt: 1109.88ms, fracRes: 0.3750, norm(attn): 192.0000, norm(output): 212992.0000, norm(x): 117997.8984, norm(y): 1.0118, norm:137490.0469, tok/sec: 118095.96, flops:46.01, batch-reuse:1
@ 2044 train 7.8496 , allloss: 800128.0000, dt: 1103.70ms, fracRes: 0.3747, norm(attn): 191.0000, norm(output): 211968.0000, norm(x): 115481.4297, norm(y): 1.0117, norm:103564.5938, tok/sec: 118756.71, flops:46.27, batch-reuse:1
@ 2045 train 7.7900 , allloss: 814860.3750, dt: 1099.25ms, fracRes: 0.3750, norm(attn): 189.0000, norm(output): 208896.0000, norm(x): 113564.6172, norm(y): 1.0116, norm:105050.8906, tok/sec: 119237.94, flops:46.46, batch-reuse:1
@ 2046 train 7.8606 , allloss: 805145.9375, dt: 1102.93ms, fracRes: 0.3747, norm(attn): 186.0000, norm(output): 199680.0000, norm(x): 111225.7422, norm(y): 1.0115, norm:121652.2266, tok/sec: 118839.50, flops:46.30, batch-reuse:1
@ 2047 train 7.8827 , allloss: 780917.0000, dt: 1109.35ms, fracRes: 0.3748, norm(attn): 187.0000, norm(output): 198656.0000, norm(x): 111197.7188, norm(y): 1.0117, norm:163417.3438, tok/sec: 118151.67, flops:46.03, batch-reuse:1
@ 2048 train 7.8329 , allloss: 764077.3125, dt: 1109.42ms, fracRes: 0.3752, norm(attn): 187.0000, norm(output): 198656.0000, norm(x): 111062.3438, norm(y): 1.0119, norm:125766.7266, tok/sec: 118145.04, flops:46.03, batch-reuse:1
@ 2049 train 7.8256 , allloss: 773651.1875, dt: 1103.99ms, fracRes: 0.3755, norm(attn): 187.0000, norm(output): 200704.0000, norm(x): 111357.3359, norm(y): 1.0122, norm:104823.1562, tok/sec: 118725.96, flops:46.26, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0000,     0.0153,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0007,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0000,     0.0000,     1.0000,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9453,     0.0000,     0.0019,     0.0003,     0.0016,     0.0024,     0.0000,     0.0000,     0.0000,     0.0001,     0.0479,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0073,  0.0022, -0.0353,  ...,  0.0185,  0.0102, -0.0399],
        [ 0.0026,  0.0094,  0.0219,  ...,  0.0035, -0.0100,  0.0407],
        [ 0.0125, -0.0261, -0.0345,  ...,  0.0016,  0.0052, -0.0339],
        ...,
        [-0.0212,  0.0259, -0.0068,  ..., -0.0443,  0.0793,  0.0613],
        [-0.0275,  0.0446, -0.0207,  ..., -0.0167,  0.0682,  0.0018],
        [ 0.0025, -0.0292, -0.0102,  ...,  0.0488, -0.1079, -0.0313]], device='cuda:0', requires_grad=True)
K: tensor([-0.7070, -0.1846,  0.6719, -0.1680,  2.3438, -1.2656,  0.1001, -1.9844, -0.5156,  0.6797,  0.8750, -1.5547,  0.5234, -1.3906,  3.3281, -0.2852,  2.4219, -0.3027, -5.0625,  1.7969,  1.1953,  2.6094,  0.1992, -1.3359,  1.9062,  3.2969,  1.2734, -2.5469,  0.6641,  0.1152,  2.6719, -1.0938,
        -0.5977,  1.2031,  0.7266, -0.2539,  2.3125, -1.2891, -1.6719, -0.5859,  0.5820, -0.7617,  1.0938,  3.1875, -0.3711, -1.2969,  2.5625, -0.6406, -1.8125, -2.5000,  0.8438, -0.4414,  1.7891,  0.5664,  3.5625,  2.9062, -0.0449,  0.8594, -0.3535,  2.0312, -0.4121,  1.8672,  0.0145, -0.1914],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0276,  0.0325,  0.0601,  ..., -0.0180, -0.0200,  0.0526],
        [ 0.0500, -0.0099, -0.1025,  ..., -0.0041,  0.0166, -0.0224],
        [ 0.0136,  0.0275,  0.0783,  ..., -0.0247, -0.0629, -0.0238],
        ...,
        [-0.0196,  0.0238,  0.0765,  ...,  0.0211, -0.0326,  0.0460],
        [-0.0338,  0.0241,  0.0040,  ...,  0.0056, -0.0223,  0.0781],
        [-0.0150,  0.0122, -0.0484,  ..., -0.0012,  0.0709, -0.0690]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2637, -0.9336, -0.7070, -0.3184, -2.8438,  2.9844, -0.5859,  5.1875, -1.0625, -1.7578,  0.2471, -0.0483, -1.4609,  0.5352, -1.4375, -0.2949, -0.2773,  1.1797,  1.9375, -3.2500,  0.5703, -1.0859, -1.7891, -0.8906, -0.7539,  1.6562, -0.0156,  1.9062, -0.3301,  1.5078, -1.9922, -0.3887,
         1.2578, -0.8281,  0.6133, -0.0315, -0.3477,  0.5742,  2.3906, -0.1777, -0.5117,  2.5156, -2.0781, -0.5859, -0.5547,  1.4297, -0.3047,  2.4531, -0.4551,  2.2500, -0.2695, -0.0654, -3.0625,  1.2344, -3.1094, -1.3984, -2.6719, -1.1328,  1.6562,  0.0591, -1.2109, -2.3906, -1.0625,  2.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   38.7500,   12.9375,  -54.2500,  -59.2500,  -45.5000,   -2.4844,   22.1250,  -32.2500,   26.3750,  -54.5000,   27.6250,   -8.3750,  -49.7500,    3.9531],
        [   0.0000,  -54.5000,   -4.1562,   51.5000,   56.7500,   31.8750,    0.4844,  -18.2500,   30.3750,  -27.2500,   50.7500,  -20.6250,   15.6250,   49.2500,   -9.0625],
        [   0.0000,  -70.0000,    2.1562,   35.0000,   34.2500,   24.3750,    1.7344,   -5.0000,   -2.2344,  -66.0000,   27.8750,  -18.0000,   27.7500,    6.0312,  -28.5000],
        [   0.0000,  -89.0000,    2.8906,   65.5000,   76.5000,   48.2500,    2.3125,  -18.8750,   21.7500,  -78.5000,   61.0000,  -27.6250,   29.0000,   33.7500,  -29.8750],
        [   0.0000,  -66.5000,   -9.7500,   46.5000,   35.0000,    7.4375,  -12.8750,  -20.1250,   18.3750,  -10.0625,   33.7500,  -23.3750,   26.6250,   52.2500,  -11.6250],
        [   0.0000,  -39.0000,    1.2734,   35.0000,   42.5000,   25.3750,    0.6953,  -10.7500,   20.2500,  -26.8750,   35.5000,  -13.4375,   11.5000,   29.5000,   -8.3125],
        [   0.0000,  -22.6250,   -6.6562,    8.3125,    1.8281,   -8.3750,   -4.0312,   -5.0312,    0.1602,    1.0547,    5.3438,   -5.6250,   10.3125,   12.8125,   -4.7188],
        [   0.0000,  -54.2500,   13.3125,   45.5000,   82.0000,   61.0000,   19.5000,   -6.7188,   20.7500,  -95.0000,   59.7500,  -14.4375,   10.0625,    3.4688,  -28.5000],
        [   0.0000,   24.1250,   30.1250,  -47.7500,  -25.0000,    1.4922,   24.3750,   37.0000,  -38.2500,  -61.7500,  -32.0000,   26.2500,   -6.4375,  -89.0000,  -16.3750],
        [   0.0000,  -89.5000,   13.8750,   62.0000,   87.0000,   63.0000,   11.6250,   -9.8750,   15.0000, -112.5000,   63.7500,  -25.1250,   27.7500,    9.8125,  -39.2500],
        [   0.0000,  -42.5000,    3.2500,   30.3750,   40.7500,   25.5000,    7.6875,   -6.3125,    9.8750,  -47.2500,   34.2500,  -11.5000,   13.6875,    9.9375,  -16.2500],
        [   0.0000,   26.0000,  -14.0000,   -5.4688,   -9.1875,   -5.9062,   -5.1562,   -7.0938,    7.3438,   37.7500,   -4.7500,   -1.2031,  -13.4375,   15.2500,   13.1875],
        [   0.0000,  -72.5000,   18.7500,   50.2500,   78.5000,   63.0000,   17.1250,   -3.8438,   15.0000, -107.0000,   57.0000,  -15.5625,   18.8750,    0.6211,  -34.5000],
        [   0.0000,  -19.6250,   11.5000,    0.2734,    5.2500,    3.4844,    5.0938,    5.5000,   -7.5312,  -31.7500,    1.3125,    1.9453,    8.5000,  -15.1250,  -12.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.4167],
        [    0.2490],
        [    0.0164],
        [    0.0005],
        [    0.0911],
        [    0.0882],
        [    0.0058],
        [    0.0576],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0002],
        [    0.0106],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0036,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9961,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0073,  0.0022, -0.0353,  ...,  0.0185,  0.0102, -0.0399],
        [ 0.0026,  0.0094,  0.0219,  ...,  0.0035, -0.0100,  0.0407],
        [ 0.0125, -0.0261, -0.0345,  ...,  0.0016,  0.0052, -0.0339],
        ...,
        [-0.0212,  0.0259, -0.0068,  ..., -0.0443,  0.0793,  0.0613],
        [-0.0275,  0.0446, -0.0207,  ..., -0.0167,  0.0682,  0.0018],
        [ 0.0025, -0.0292, -0.0102,  ...,  0.0488, -0.1079, -0.0313]], device='cuda:0', requires_grad=True)
K: tensor([-2.2969, -4.5000,  0.9023, -4.9062, -2.4375,  4.3125, -4.5000,  1.7656,  0.4688,  1.3281, -0.6641,  1.3984, -4.0000, -4.2500,  1.0156, -3.9375,  1.2969,  1.6172, -3.5312, -2.2188,  5.6875,  4.0312, -1.9922, -0.3789,  3.9375,  1.7188,  6.0938, -1.3516, -0.4199,  4.7500,  0.3438, -1.4922,
         2.7656,  4.1875, -5.5625, -0.0933, -1.0859, -4.7188, -1.3359, -2.3438, -6.3438,  1.1641,  1.2188,  2.5625, -4.6562, -2.8281,  2.8594,  2.9062, -6.9375,  3.9062, -1.4062, -4.5625,  4.5312,  2.4688,  0.7031, -2.4844, -1.9609, -5.3125,  2.7969, -0.5352,  1.2578, -3.0781, -3.9219,  3.4531],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0276,  0.0325,  0.0601,  ..., -0.0180, -0.0200,  0.0526],
        [ 0.0500, -0.0099, -0.1025,  ..., -0.0041,  0.0166, -0.0224],
        [ 0.0136,  0.0275,  0.0783,  ..., -0.0247, -0.0629, -0.0238],
        ...,
        [-0.0196,  0.0238,  0.0765,  ...,  0.0211, -0.0326,  0.0460],
        [-0.0338,  0.0241,  0.0040,  ...,  0.0056, -0.0223,  0.0781],
        [-0.0150,  0.0122, -0.0484,  ..., -0.0012,  0.0709, -0.0690]], device='cuda:0', requires_grad=True)
Q: tensor([-20.3750,  -9.7500,   4.0625,  -1.6719, -16.3750,  19.2500,  -8.3125,  29.2500, -31.5000,   1.0938,   9.3750,   1.4609, -14.6875, -11.9375, -17.0000, -14.0000,  -1.6719,  25.6250,  18.1250, -22.7500,   9.0625, -12.3125,  -1.6328,  13.8125,   6.4688, -11.5625,   6.8438,   8.5000,  -4.5625,
         10.1250, -23.0000,  22.6250,  22.3750,  -0.1123,  -9.3125,   3.4062,   3.4219,  -4.4375,  18.6250,  -6.0938,  -6.8125,  26.5000, -22.0000,  -9.8750, -12.0000,  -3.3438,  -9.8750,  23.3750, -11.2500,  10.5625,  -3.7031, -11.8125,   1.1953,  23.3750, -23.5000, -13.0000, -27.1250,  -6.6562,
         13.5000,   9.4375,   3.6562, -23.5000, -21.2500,  21.2500], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, 171.0000, 460.0000, 171.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 117.0000, 292.0000, 117.0000, 117.0000, 117.0000, 117.0000, 117.0000, 117.0000, 116.5000, 117.0000, 117.0000, 298.0000, 117.0000, 117.0000],
        [  0.0000, 171.0000, 462.0000, 171.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 172.0000, 460.0000, 171.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 172.0000, 462.0000, 172.0000, 172.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 171.0000, 462.0000, 171.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 172.0000, 462.0000, 172.0000, 172.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 172.0000, 460.0000, 172.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 171.0000, 460.0000, 171.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 172.0000, 460.0000, 171.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 172.0000, 460.0000, 172.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 117.0000, 290.0000, 117.0000, 117.0000, 117.0000, 117.0000, 117.5000, 117.5000, 117.0000, 117.0000, 117.0000, 296.0000, 117.0000, 117.0000],
        [  0.0000, 172.0000, 460.0000, 172.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000],
        [  0.0000, 171.0000, 460.0000, 171.0000, 171.0000, 172.0000, 172.0000, 172.0000, 172.0000, 171.0000, 172.0000, 172.0000, 470.0000, 172.0000, 172.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5833],
        [0.3333],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.3333],
        [0.4167],
        [0.4167]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.4805, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5195, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.4609, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5391, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.4609, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5391, 0.0000, 0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0073,  0.0022, -0.0353,  ...,  0.0185,  0.0102, -0.0399],
        [ 0.0026,  0.0094,  0.0219,  ...,  0.0035, -0.0100,  0.0407],
        [ 0.0125, -0.0261, -0.0345,  ...,  0.0016,  0.0052, -0.0339],
        ...,
        [-0.0212,  0.0259, -0.0068,  ..., -0.0443,  0.0793,  0.0613],
        [-0.0275,  0.0446, -0.0207,  ..., -0.0167,  0.0682,  0.0018],
        [ 0.0025, -0.0292, -0.0102,  ...,  0.0488, -0.1079, -0.0313]], device='cuda:0', requires_grad=True)
K: tensor([-2.2969, -4.5000,  0.8984, -4.9062, -2.4375,  4.3125, -4.5000,  1.7734,  0.4727,  1.3203, -0.6641,  1.3984, -4.0000, -4.2500,  1.0156, -3.9531,  1.2969,  1.6172, -3.5312, -2.2188,  5.6875,  4.0000, -1.9844, -0.3848,  3.9375,  1.7266,  6.0938, -1.3516, -0.4160,  4.7500,  0.3418, -1.5000,
         2.7656,  4.1875, -5.5625, -0.1001, -1.0859, -4.7188, -1.3359, -2.3281, -6.3438,  1.1641,  1.2188,  2.5625, -4.6250, -2.8281,  2.8750,  2.9062, -6.9375,  3.9062, -1.4062, -4.5625,  4.5312,  2.4688,  0.6953, -2.4844, -1.9609, -5.3125,  2.7969, -0.5352,  1.2500, -3.0781, -3.9219,  3.4688],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0276,  0.0325,  0.0601,  ..., -0.0180, -0.0200,  0.0526],
        [ 0.0500, -0.0099, -0.1025,  ..., -0.0041,  0.0166, -0.0224],
        [ 0.0136,  0.0275,  0.0783,  ..., -0.0247, -0.0629, -0.0238],
        ...,
        [-0.0196,  0.0238,  0.0765,  ...,  0.0211, -0.0326,  0.0460],
        [-0.0338,  0.0241,  0.0040,  ...,  0.0056, -0.0223,  0.0781],
        [-0.0150,  0.0122, -0.0484,  ..., -0.0012,  0.0709, -0.0690]], device='cuda:0', requires_grad=True)
Q: tensor([-20.3750,  -9.7500,   4.0625,  -1.6719, -16.3750,  19.2500,  -8.3125,  29.2500, -31.5000,   1.0938,   9.3750,   1.4609, -14.6875, -11.9375, -17.0000, -14.0000,  -1.6719,  25.6250,  18.1250, -22.7500,   9.1250, -12.3125,  -1.6328,  13.8125,   6.4688, -11.5625,   6.8438,   8.5000,  -4.5625,
         10.1250, -23.0000,  22.6250,  22.3750,  -0.1118,  -9.3125,   3.4062,   3.4219,  -4.4375,  18.6250,  -6.0938,  -6.8125,  26.5000, -22.0000,  -9.8750, -12.0000,  -3.3438,  -9.8750,  23.3750, -11.2500,  10.5625,  -3.7188, -11.8125,   1.1953,  23.3750, -23.5000, -13.0000, -27.1250,  -6.6562,
         13.5000,   9.4375,   3.6562, -23.5000, -21.2500,  21.2500], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 117., 294., 117., 117., 117., 117., 117., 117., 117., 117., 117., 294., 117., 117.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 117., 294., 117., 117., 117., 117., 117., 117., 117., 117., 117., 294., 117., 117.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5833],
        [0.3333],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.3333],
        [0.4167],
        [0.4167]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5000, 0.0000, 0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0073,  0.0022, -0.0353,  ...,  0.0185,  0.0102, -0.0399],
        [ 0.0026,  0.0094,  0.0219,  ...,  0.0035, -0.0100,  0.0407],
        [ 0.0125, -0.0261, -0.0345,  ...,  0.0016,  0.0052, -0.0339],
        ...,
        [-0.0212,  0.0259, -0.0068,  ..., -0.0443,  0.0793,  0.0613],
        [-0.0275,  0.0446, -0.0207,  ..., -0.0167,  0.0682,  0.0018],
        [ 0.0025, -0.0292, -0.0102,  ...,  0.0488, -0.1079, -0.0313]], device='cuda:0', requires_grad=True)
K: tensor([-2.2969, -4.5000,  0.9023, -4.9062, -2.4375,  4.3125, -4.5000,  1.7734,  0.4727,  1.3203, -0.6641,  1.3906, -4.0000, -4.2500,  1.0156, -3.9531,  1.2969,  1.6172, -3.5312, -2.2188,  5.6875,  4.0000, -1.9844, -0.3848,  3.9375,  1.7266,  6.0938, -1.3516, -0.4180,  4.7500,  0.3418, -1.5000,
         2.7656,  4.1875, -5.5625, -0.0977, -1.0859, -4.7188, -1.3359, -2.3281, -6.3438,  1.1641,  1.2188,  2.5625, -4.6250, -2.8281,  2.8750,  2.9062, -6.9375,  3.9062, -1.4062, -4.5625,  4.5312,  2.4688,  0.6953, -2.5000, -1.9609, -5.3125,  2.7969, -0.5352,  1.2500, -3.0781, -3.9219,  3.4688],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0276,  0.0325,  0.0601,  ..., -0.0180, -0.0200,  0.0526],
        [ 0.0500, -0.0099, -0.1025,  ..., -0.0041,  0.0166, -0.0224],
        [ 0.0136,  0.0275,  0.0783,  ..., -0.0247, -0.0629, -0.0238],
        ...,
        [-0.0196,  0.0238,  0.0765,  ...,  0.0211, -0.0326,  0.0460],
        [-0.0338,  0.0241,  0.0040,  ...,  0.0056, -0.0223,  0.0781],
        [-0.0150,  0.0122, -0.0484,  ..., -0.0012,  0.0709, -0.0690]], device='cuda:0', requires_grad=True)
Q: tensor([-20.3750,  -9.7500,   4.0625,  -1.6719, -16.3750,  19.2500,  -8.3125,  29.2500, -31.5000,   1.0938,   9.3750,   1.4609, -14.6875, -11.9375, -17.0000, -14.0000,  -1.6719,  25.6250,  18.1250, -22.7500,   9.1250, -12.3125,  -1.6328,  13.8125,   6.4688, -11.5625,   6.8438,   8.5000,  -4.5625,
         10.1250, -23.0000,  22.6250,  22.3750,  -0.1118,  -9.3125,   3.4062,   3.4219,  -4.4375,  18.6250,  -6.0938,  -6.8125,  26.5000, -22.0000,  -9.8750, -12.0000,  -3.3438,  -9.8750,  23.3750, -11.2500,  10.5625,  -3.7188, -11.8125,   1.1953,  23.3750, -23.5000, -13.0000, -27.1250,  -6.6562,
         13.5000,   9.4375,   3.6562, -23.5000, -21.2500,  21.2500], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 117., 294., 117., 117., 117., 117., 117., 117., 117., 117., 117., 294., 117., 117.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 117., 294., 117., 117., 117., 117., 117., 117., 117., 117., 117., 294., 117., 117.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5833],
        [0.3333],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.3333],
        [0.4167],
        [0.4167]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5000, 0.0000, 0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0073,  0.0022, -0.0353,  ...,  0.0185,  0.0102, -0.0399],
        [ 0.0026,  0.0094,  0.0219,  ...,  0.0035, -0.0100,  0.0407],
        [ 0.0125, -0.0261, -0.0345,  ...,  0.0016,  0.0052, -0.0339],
        ...,
        [-0.0212,  0.0259, -0.0068,  ..., -0.0443,  0.0793,  0.0613],
        [-0.0275,  0.0446, -0.0207,  ..., -0.0167,  0.0682,  0.0018],
        [ 0.0025, -0.0292, -0.0102,  ...,  0.0488, -0.1079, -0.0313]], device='cuda:0', requires_grad=True)
K: tensor([-2.2969, -4.5000,  0.9023, -4.9062, -2.4375,  4.3125, -4.5000,  1.7734,  0.4727,  1.3203, -0.6641,  1.3906, -4.0000, -4.2500,  1.0156, -3.9531,  1.2969,  1.6172, -3.5312, -2.2188,  5.6875,  4.0000, -1.9844, -0.3848,  3.9375,  1.7266,  6.0938, -1.3516, -0.4180,  4.7500,  0.3418, -1.5000,
         2.7656,  4.1875, -5.5625, -0.0977, -1.0859, -4.7188, -1.3359, -2.3281, -6.3438,  1.1641,  1.2188,  2.5625, -4.6250, -2.8281,  2.8750,  2.9062, -6.9375,  3.9062, -1.4062, -4.5625,  4.5312,  2.4688,  0.6953, -2.5000, -1.9609, -5.3125,  2.7969, -0.5352,  1.2500, -3.0781, -3.9219,  3.4688],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0276,  0.0325,  0.0601,  ..., -0.0180, -0.0200,  0.0526],
        [ 0.0500, -0.0099, -0.1025,  ..., -0.0041,  0.0166, -0.0224],
        [ 0.0136,  0.0275,  0.0783,  ..., -0.0247, -0.0629, -0.0238],
        ...,
        [-0.0196,  0.0238,  0.0765,  ...,  0.0211, -0.0326,  0.0460],
        [-0.0338,  0.0241,  0.0040,  ...,  0.0056, -0.0223,  0.0781],
        [-0.0150,  0.0122, -0.0484,  ..., -0.0012,  0.0709, -0.0690]], device='cuda:0', requires_grad=True)
Q: tensor([-20.3750,  -9.7500,   4.0625,  -1.6719, -16.3750,  19.2500,  -8.3125,  29.2500, -31.5000,   1.0938,   9.3750,   1.4609, -14.6875, -11.9375, -17.0000, -14.0000,  -1.6719,  25.6250,  18.1250, -22.7500,   9.1250, -12.3125,  -1.6328,  13.8125,   6.4688, -11.5625,   6.8438,   8.5000,  -4.5625,
         10.1250, -23.0000,  22.6250,  22.3750,  -0.1118,  -9.3125,   3.4062,   3.4219,  -4.4375,  18.6250,  -6.0938,  -6.8125,  26.5000, -22.0000,  -9.8750, -12.0000,  -3.3438,  -9.8750,  23.3750, -11.2500,  10.5625,  -3.7188, -11.8125,   1.1953,  23.3750, -23.5000, -13.0000, -27.1250,  -6.6562,
         13.5000,   9.4375,   3.6562, -23.5000, -21.2500,  21.2500], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 117., 294., 117., 117., 117., 117., 117., 117., 117., 117., 117., 294., 117., 117.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 117., 294., 117., 117., 117., 117., 117., 117., 117., 117., 117., 294., 117., 117.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.],
        [  0., 172., 464., 172., 172., 172., 172., 172., 172., 172., 172., 172., 464., 172., 172.]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5833],
        [0.3333],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.3333],
        [0.4167],
        [0.4167]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( the:0.0327 the:0.0327 the:0.0327 the:0.0327 the:0.0327,:0.0248 the:0.0327 the:0.0327)
 the
------
		( the:0.0327 the:0.0327 the:0.0327 the:0.0327,:0.0248 the:0.0327 the:0.0327 the:0.0327)
 the the the the the the the the the the the the the the the
@ 2050 train 7.8675 , allloss: 783794.0625, dt: 1488.07ms, fracRes: 0.3751, norm(attn): 188.0000, norm(output): 200704.0000, norm(x): 111883.4219, norm(y): 1.0125, norm:91081.3516, tok/sec: 88081.69, flops:34.32, batch-reuse:1
@ 2051 train 7.9079 , allloss: 782645.4375, dt: 1110.04ms, fracRes: 0.3748, norm(attn): 190.0000, norm(output): 204800.0000, norm(x): 113098.4141, norm(y): 1.0128, norm:171705.4688, tok/sec: 118078.33, flops:46.00, batch-reuse:1
@ 2052 train 7.7951 , allloss: 781718.6250, dt: 1110.62ms, fracRes: 0.3758, norm(attn): 192.0000, norm(output): 211968.0000, norm(x): 115549.4844, norm(y): 1.0134, norm:247324.3125, tok/sec: 118016.58, flops:45.98, batch-reuse:1
@ 2053 train 7.7912 , allloss: 791705.2500, dt: 1109.60ms, fracRes: 0.3757, norm(attn): 193.0000, norm(output): 212992.0000, norm(x): 117582.0859, norm(y): 1.0138, norm:147759.0469, tok/sec: 118125.85, flops:46.02, batch-reuse:1
@ 2054 train 7.8083 , allloss: 824216.3125, dt: 1108.67ms, fracRes: 0.3755, norm(attn): 195.0000, norm(output): 215040.0000, norm(x): 120057.4766, norm(y): 1.0144, norm:85599.9922, tok/sec: 118224.57, flops:46.06, batch-reuse:1
@ 2055 train 7.8550 , allloss: 1128257.6250, dt: 1123.70ms, fracRes: 0.3142, norm(attn): 142.0000, norm(output): 154624.0000, norm(x): 95188.5078, norm(y): 1.0149, norm:6952472.5000, tok/sec: 116643.12, flops:45.44, batch-reuse:1
@ 2056 train 7.8901 , allloss: 814807.1250, dt: 1102.45ms, fracRes: 0.3755, norm(attn): 205.0000, norm(output): 228352.0000, norm(x): 124949.0859, norm(y): 1.0154, norm:122209.6484, tok/sec: 118891.65, flops:46.32, batch-reuse:1
@ 2057 train 7.8568 , allloss: 842975.2500, dt: 1119.42ms, fracRes: 0.3760, norm(attn): 207.0000, norm(output): 229376.0000, norm(x): 126478.6406, norm(y): 1.0157, norm:126547.6250, tok/sec: 117089.25, flops:45.62, batch-reuse:1
@ 2058 train 7.9292 , allloss: 835975.1250, dt: 1113.83ms, fracRes: 0.3760, norm(attn): 207.0000, norm(output): 231424.0000, norm(x): 127249.1797, norm(y): 1.0160, norm:122684.7969, tok/sec: 117677.04, flops:45.85, batch-reuse:1
@ 2059 train 7.7996 , allloss: 849632.0625, dt: 1112.05ms, fracRes: 0.3764, norm(attn): 208.0000, norm(output): 232448.0000, norm(x): 128188.6406, norm(y): 1.0165, norm:111669.2188, tok/sec: 117865.65, flops:45.92, batch-reuse:1
@ 2060 train 7.7155 , allloss: 836267.5000, dt: 1102.78ms, fracRes: 0.3764, norm(attn): 208.0000, norm(output): 232448.0000, norm(x): 128304.0625, norm(y): 1.0167, norm:157496.6406, tok/sec: 118856.20, flops:46.31, batch-reuse:1
@ 2061 train 7.9401 , allloss: 832925.2500, dt: 1122.38ms, fracRes: 0.3755, norm(attn): 206.0000, norm(output): 228352.0000, norm(x): 125873.5469, norm(y): 1.0166, norm:128015.2578, tok/sec: 116780.93, flops:45.50, batch-reuse:1
@ 2062 train 7.7896 , allloss: 809642.5000, dt: 1101.45ms, fracRes: 0.3762, norm(attn): 207.0000, norm(output): 228352.0000, norm(x): 125241.7188, norm(y): 1.0168, norm:129065.0078, tok/sec: 118999.50, flops:46.36, batch-reuse:1
@ 2063 train 7.8751 , allloss: 801297.1875, dt: 1101.83ms, fracRes: 0.3758, norm(attn): 198.0000, norm(output): 225280.0000, norm(x): 122560.1094, norm(y): 1.0166, norm:104036.3438, tok/sec: 118958.61, flops:46.35, batch-reuse:1
@ 2064 train 7.7449 , allloss: 770787.1875, dt: 1113.72ms, fracRes: 0.3767, norm(attn): 197.0000, norm(output): 221184.0000, norm(x): 121577.6484, norm(y): 1.0168, norm:175471.5781, tok/sec: 117688.40, flops:45.85, batch-reuse:1
@ 2065 train 7.9305 , allloss: 755590.3125, dt: 1093.11ms, fracRes: 0.3761, norm(attn): 194.0000, norm(output): 214016.0000, norm(x): 118532.6484, norm(y): 1.0166, norm:146397.0625, tok/sec: 119906.89, flops:46.72, batch-reuse:1
@ 2066 train 7.8097 , allloss: 741946.9375, dt: 1083.78ms, fracRes: 0.3761, norm(attn): 193.0000, norm(output): 212992.0000, norm(x): 116845.1172, norm(y): 1.0166, norm:110812.5078, tok/sec: 120939.70, flops:47.12, batch-reuse:1
@ 2067 train 7.8331 , allloss: 727984.3125, dt: 1102.69ms, fracRes: 0.3756, norm(attn): 192.0000, norm(output): 210944.0000, norm(x): 114972.0625, norm(y): 1.0165, norm:84409.5391, tok/sec: 118866.04, flops:46.31, batch-reuse:1
@ 2068 train 7.8066 , allloss: 716607.5625, dt: 1100.88ms, fracRes: 0.3763, norm(attn): 190.0000, norm(output): 206848.0000, norm(x): 113540.9453, norm(y): 1.0166, norm:96676.3906, tok/sec: 119061.61, flops:46.39, batch-reuse:1
@ 2069 train 7.9103 , allloss: 707420.9375, dt: 1102.27ms, fracRes: 0.3786, norm(attn): 190.0000, norm(output): 201728.0000, norm(x): 111479.6562, norm(y): 1.0165, norm:196070.2031, tok/sec: 118910.96, flops:46.33, batch-reuse:1
@ 2070 train 7.9413 , allloss: 1025684.8750, dt: 1105.41ms, fracRes: 0.4364, norm(attn): 183.0000, norm(output): 196608.0000, norm(x): 96976.7500, norm(y): 1.0166, norm:10370881.0000, tok/sec: 118573.37, flops:46.20, batch-reuse:1
@ 2071 train 7.8610 , allloss: 699010.1875, dt: 1113.99ms, fracRes: 0.3768, norm(attn): 189.0000, norm(output): 198656.0000, norm(x): 110545.9609, norm(y): 1.0169, norm:78537.0078, tok/sec: 117659.89, flops:45.84, batch-reuse:1
@ 2072 train 7.8486 , allloss: 670691.1875, dt: 1121.96ms, fracRes: 0.3768, norm(attn): 187.0000, norm(output): 198656.0000, norm(x): 109767.6875, norm(y): 1.0169, norm:114223.7344, tok/sec: 116824.48, flops:45.51, batch-reuse:1
@ 2073 train 7.7954 , allloss: 664665.3750, dt: 1092.34ms, fracRes: 0.3770, norm(attn): 187.0000, norm(output): 197632.0000, norm(x): 108884.0859, norm(y): 1.0170, norm:175745.1875, tok/sec: 119992.42, flops:46.75, batch-reuse:1
@ 2074 train 7.8200 , allloss: 1126343.7500, dt: 1099.47ms, fracRes: 0.3961, norm(attn): 193.0000, norm(output): 212992.0000, norm(x): 113987.3906, norm(y): 1.0183, norm:401978.1562, tok/sec: 119214.20, flops:46.45, batch-reuse:1
@ 2075 train 7.7483 , allloss: 879873.5000, dt: 1104.36ms, fracRes: 0.3799, norm(attn): 187.0000, norm(output): 202752.0000, norm(x): 111970.3672, norm(y): 1.0178, norm:1574094.3750, tok/sec: 118686.33, flops:46.24, batch-reuse:1
@ 2076 train 7.8234 , allloss: 665373.0625, dt: 1092.70ms, fracRes: 0.3765, norm(attn): 184.0000, norm(output): 194560.0000, norm(x): 106890.1875, norm(y): 1.0171, norm:103839.2734, tok/sec: 119952.83, flops:46.73, batch-reuse:1
@ 2077 train 7.7637 , allloss: 658428.4375, dt: 1109.99ms, fracRes: 0.3769, norm(attn): 184.0000, norm(output): 193536.0000, norm(x): 105930.3594, norm(y): 1.0171, norm:90355.5938, tok/sec: 118084.29, flops:46.01, batch-reuse:1
@ 2078 train 7.7666 , allloss: 653309.1875, dt: 1102.67ms, fracRes: 0.3765, norm(attn): 183.0000, norm(output): 190464.0000, norm(x): 104961.9297, norm(y): 1.0170, norm:125339.7422, tok/sec: 118867.95, flops:46.31, batch-reuse:1
@ 2079 train 7.8035 , allloss: 657947.4375, dt: 1119.20ms, fracRes: 0.3764, norm(attn): 181.0000, norm(output): 190464.0000, norm(x): 104141.0938, norm(y): 1.0170, norm:151916.7812, tok/sec: 117112.50, flops:45.63, batch-reuse:1
@ 2080 train 7.8389 , allloss: 658100.1250, dt: 1119.01ms, fracRes: 0.3761, norm(attn): 181.0000, norm(output): 190464.0000, norm(x): 104025.0391, norm(y): 1.0171, norm:132362.7500, tok/sec: 117132.34, flops:45.63, batch-reuse:1
@ 2081 train 7.7891 , allloss: 681126.3125, dt: 1118.28ms, fracRes: 0.3761, norm(attn): 181.0000, norm(output): 190464.0000, norm(x): 104846.5312, norm(y): 1.0173, norm:98260.3359, tok/sec: 117208.60, flops:45.66, batch-reuse:1
@ 2082 train 7.7531 , allloss: 656618.1250, dt: 1112.51ms, fracRes: 0.3766, norm(attn): 184.0000, norm(output): 193536.0000, norm(x): 105872.4297, norm(y): 1.0176, norm:151047.9062, tok/sec: 117816.14, flops:45.90, batch-reuse:1
@ 2083 train 7.8333 , allloss: 659180.7500, dt: 1125.09ms, fracRes: 0.3762, norm(attn): 186.0000, norm(output): 194560.0000, norm(x): 106862.5000, norm(y): 1.0179, norm:143589.6094, tok/sec: 116499.31, flops:45.39, batch-reuse:1
@ 2084 train 7.7864 , allloss: 652192.6250, dt: 1124.23ms, fracRes: 0.3764, norm(attn): 186.0000, norm(output): 196608.0000, norm(x): 108784.2188, norm(y): 1.0183, norm:124771.1406, tok/sec: 116587.88, flops:45.42, batch-reuse:1
@ 2085 train 7.7777 , allloss: 682314.9375, dt: 1124.95ms, fracRes: 0.3764, norm(attn): 190.0000, norm(output): 200704.0000, norm(x): 110996.4766, norm(y): 1.0187, norm:104371.8203, tok/sec: 116514.12, flops:45.39, batch-reuse:1
@ 2086 train 7.7827 , allloss: 698435.1250, dt: 1121.07ms, fracRes: 0.3767, norm(attn): 192.0000, norm(output): 201728.0000, norm(x): 112428.9062, norm(y): 1.0189, norm:161513.5781, tok/sec: 116916.66, flops:45.55, batch-reuse:1
@ 2087 train 7.7685 , allloss: 687920.2500, dt: 1120.22ms, fracRes: 0.3767, norm(attn): 193.0000, norm(output): 210944.0000, norm(x): 114643.2109, norm(y): 1.0194, norm:119571.6719, tok/sec: 117006.09, flops:45.59, batch-reuse:1
@ 2088 train 7.8263 , allloss: 703205.8125, dt: 1121.26ms, fracRes: 0.3766, norm(attn): 195.0000, norm(output): 212992.0000, norm(x): 116657.5547, norm(y): 1.0198, norm:188052.1562, tok/sec: 116896.57, flops:45.54, batch-reuse:1
@ 2089 train 7.7892 , allloss: 676035.0000, dt: 1112.10ms, fracRes: 0.3761, norm(attn): 196.0000, norm(output): 212992.0000, norm(x): 117648.9141, norm(y): 1.0200, norm:149276.8750, tok/sec: 117859.84, flops:45.92, batch-reuse:1
@ 2090 train 7.8300 , allloss: 683824.5625, dt: 1124.15ms, fracRes: 0.3762, norm(attn): 196.0000, norm(output): 212992.0000, norm(x): 117422.6094, norm(y): 1.0201, norm:178645.6094, tok/sec: 116596.04, flops:45.43, batch-reuse:1
@ 2091 train 7.7642 , allloss: 685315.4375, dt: 1121.86ms, fracRes: 0.3767, norm(attn): 196.0000, norm(output): 212992.0000, norm(x): 117708.5234, norm(y): 1.0202, norm:71149.4844, tok/sec: 116834.59, flops:45.52, batch-reuse:1
@ 2092 train 7.8710 , allloss: 795321.8125, dt: 1126.81ms, fracRes: 0.3684, norm(attn): 191.0000, norm(output): 200704.0000, norm(x): 113341.4453, norm(y): 1.0201, norm:7139804.5000, tok/sec: 116321.76, flops:45.32, batch-reuse:1
@ 2093 train 7.6707 , allloss: 679689.6875, dt: 1123.95ms, fracRes: 0.3774, norm(attn): 196.0000, norm(output): 212992.0000, norm(x): 117767.1953, norm(y): 1.0204, norm:78969.6016, tok/sec: 116616.82, flops:45.43, batch-reuse:1
@ 2094 train 7.7604 , allloss: 679577.8125, dt: 1120.77ms, fracRes: 0.3770, norm(attn): 196.0000, norm(output): 212992.0000, norm(x): 117350.9688, norm(y): 1.0204, norm:97053.3281, tok/sec: 116948.00, flops:45.56, batch-reuse:1
@ 2095 train 7.7180 , allloss: 703980.1250, dt: 1122.17ms, fracRes: 0.3765, norm(attn): 196.0000, norm(output): 212992.0000, norm(x): 117928.6250, norm(y): 1.0207, norm:191773.5469, tok/sec: 116802.32, flops:45.51, batch-reuse:1
@ 2096 train 7.7411 , allloss: 680818.3750, dt: 1113.33ms, fracRes: 0.3769, norm(attn): 198.0000, norm(output): 212992.0000, norm(x): 118320.8281, norm(y): 1.0210, norm:139416.5625, tok/sec: 117729.30, flops:45.87, batch-reuse:1
@ 2097 train 7.6993 , allloss: 710201.5625, dt: 1129.46ms, fracRes: 0.3775, norm(attn): 206.0000, norm(output): 217088.0000, norm(x): 120005.3359, norm(y): 1.0214, norm:362035.2812, tok/sec: 116048.27, flops:45.21, batch-reuse:1
@ 2098 train 7.7200 , allloss: 1021051.6250, dt: 1128.64ms, fracRes: 0.3743, norm(attn): 199.0000, norm(output): 223232.0000, norm(x): 120874.8828, norm(y): 1.0219, norm:305205.8750, tok/sec: 116132.21, flops:45.25, batch-reuse:1
@ 2099 train 7.7548 , allloss: 1048810.6250, dt: 1102.63ms, fracRes: 0.3739, norm(attn): 203.0000, norm(output): 225280.0000, norm(x): 122257.3203, norm(y): 1.0222, norm:156911.0781, tok/sec: 118872.19, flops:46.31, batch-reuse:1
@ 2100 train 7.7604 , allloss: 1004529.3125, dt: 1120.59ms, fracRes: 0.3735, norm(attn): 204.0000, norm(output): 225280.0000, norm(x): 123709.1328, norm(y): 1.0225, norm:191301.1094, tok/sec: 116967.28, flops:45.57, batch-reuse:1
@ 2101 train 7.6791 , allloss: 721900.4375, dt: 1116.97ms, fracRes: 0.3771, norm(attn): 208.0000, norm(output): 229376.0000, norm(x): 126245.8203, norm(y): 1.0228, norm:768436.8125, tok/sec: 117346.45, flops:45.72, batch-reuse:1
@ 2102 train 7.7399 , allloss: 718398.3750, dt: 1117.79ms, fracRes: 0.3776, norm(attn): 209.0000, norm(output): 230400.0000, norm(x): 126945.4062, norm(y): 1.0230, norm:171656.6094, tok/sec: 117260.28, flops:45.68, batch-reuse:1
@ 2103 train 7.6656 , allloss: 712324.5000, dt: 1111.99ms, fracRes: 0.3771, norm(attn): 208.0000, norm(output): 230400.0000, norm(x): 127237.1641, norm(y): 1.0231, norm:154296.4375, tok/sec: 117872.07, flops:45.92, batch-reuse:1
@ 2104 train 7.7581 , allloss: 706646.0000, dt: 1125.67ms, fracRes: 0.3767, norm(attn): 208.0000, norm(output): 230400.0000, norm(x): 127148.7109, norm(y): 1.0232, norm:121904.0547, tok/sec: 116439.13, flops:45.36, batch-reuse:1
@ 2105 train 7.8059 , allloss: 697112.1875, dt: 1122.29ms, fracRes: 0.3765, norm(attn): 208.0000, norm(output): 229376.0000, norm(x): 126074.0312, norm(y): 1.0232, norm:106993.2500, tok/sec: 116790.19, flops:45.50, batch-reuse:1
@ 2106 train 7.7607 , allloss: 1090074.3750, dt: 1130.61ms, fracRes: 0.3181, norm(attn): 152.0000, norm(output): 162816.0000, norm(x): 99958.7344, norm(y): 1.0233, norm:14416915.0000, tok/sec: 115930.56, flops:45.17, batch-reuse:1
@ 2107 train 7.7388 , allloss: 695188.3125, dt: 1123.66ms, fracRes: 0.3764, norm(attn): 208.0000, norm(output): 225280.0000, norm(x): 123468.2578, norm(y): 1.0233, norm:21111.9727, tok/sec: 116647.15, flops:45.45, batch-reuse:1
@ 2108 train 7.7993 , allloss: 675693.9375, dt: 1120.64ms, fracRes: 0.3760, norm(attn): 207.0000, norm(output): 223232.0000, norm(x): 122198.5156, norm(y): 1.0231, norm:120880.7500, tok/sec: 116961.28, flops:45.57, batch-reuse:1
@ 2109 train 7.7956 , allloss: 727096.3125, dt: 1115.84ms, fracRes: 0.3706, norm(attn): 195.0000, norm(output): 211968.0000, norm(x): 117425.4062, norm(y): 1.0230, norm:87835.2188, tok/sec: 117464.40, flops:45.76, batch-reuse:1
@ 2110 train 7.6906 , allloss: 685550.5625, dt: 1104.71ms, fracRes: 0.3762, norm(attn): 196.0000, norm(output): 212992.0000, norm(x): 117029.7656, norm(y): 1.0228, norm:135794.5000, tok/sec: 118648.19, flops:46.23, batch-reuse:1
@ 2111 train 7.6969 , allloss: 665423.7500, dt: 1100.54ms, fracRes: 0.3772, norm(attn): 195.0000, norm(output): 210944.0000, norm(x): 114885.2734, norm(y): 1.0227, norm:135483.5156, tok/sec: 119097.80, flops:46.40, batch-reuse:1
@ 2112 train 7.6545 , allloss: 661568.0000, dt: 1116.08ms, fracRes: 0.3776, norm(attn): 194.0000, norm(output): 202752.0000, norm(x): 112991.4219, norm(y): 1.0227, norm:131774.6250, tok/sec: 117439.58, flops:45.75, batch-reuse:1
@ 2113 train 7.7470 , allloss: 643573.1875, dt: 1097.83ms, fracRes: 0.3761, norm(attn): 192.0000, norm(output): 198656.0000, norm(x): 109902.8438, norm(y): 1.0224, norm:95013.4766, tok/sec: 119391.44, flops:46.51, batch-reuse:1
@ 2114 train 7.7651 , allloss: 651214.3125, dt: 1117.21ms, fracRes: 0.3759, norm(attn): 189.0000, norm(output): 196608.0000, norm(x): 107901.3281, norm(y): 1.0224, norm:79285.1094, tok/sec: 117320.53, flops:45.71, batch-reuse:1
@ 2115 train 7.7050 , allloss: 642663.8750, dt: 1102.14ms, fracRes: 0.3765, norm(attn): 187.0000, norm(output): 191488.0000, norm(x): 106407.1484, norm(y): 1.0226, norm:128265.5156, tok/sec: 118924.98, flops:46.33, batch-reuse:1
@ 2116 train 7.7517 , allloss: 653381.6250, dt: 1098.57ms, fracRes: 0.3764, norm(attn): 187.0000, norm(output): 190464.0000, norm(x): 105197.0000, norm(y): 1.0226, norm:122214.8359, tok/sec: 119311.17, flops:46.48, batch-reuse:1
@ 2117 train 7.7743 , allloss: 637102.4375, dt: 1103.34ms, fracRes: 0.3766, norm(attn): 186.0000, norm(output): 191488.0000, norm(x): 105041.9062, norm(y): 1.0229, norm:2827649.7500, tok/sec: 118795.33, flops:46.28, batch-reuse:1
@ 2118 train 7.7611 , allloss: 624058.6250, dt: 1104.57ms, fracRes: 0.3765, norm(attn): 187.0000, norm(output): 191488.0000, norm(x): 105781.4688, norm(y): 1.0233, norm:79769.3047, tok/sec: 118663.64, flops:46.23, batch-reuse:1
@ 2119 train 7.7583 , allloss: 604006.4375, dt: 1118.04ms, fracRes: 0.3764, norm(attn): 186.0000, norm(output): 191488.0000, norm(x): 105591.0391, norm(y): 1.0236, norm:110804.2578, tok/sec: 117233.55, flops:45.67, batch-reuse:1
@ 2120 train 7.6893 , allloss: 610376.4375, dt: 1104.64ms, fracRes: 0.3768, norm(attn): 187.0000, norm(output): 194560.0000, norm(x): 106709.1172, norm(y): 1.0240, norm:133138.4062, tok/sec: 118655.95, flops:46.23, batch-reuse:1
@ 2121 train 7.7763 , allloss: 600100.6250, dt: 1108.19ms, fracRes: 0.3763, norm(attn): 188.0000, norm(output): 196608.0000, norm(x): 107826.4219, norm(y): 1.0244, norm:232837.3594, tok/sec: 118276.10, flops:46.08, batch-reuse:1
@ 2122 train 7.7971 , allloss: 618848.0000, dt: 1104.04ms, fracRes: 0.3761, norm(attn): 191.0000, norm(output): 198656.0000, norm(x): 110203.8594, norm(y): 1.0248, norm:109444.3203, tok/sec: 118720.04, flops:46.25, batch-reuse:1
@ 2123 train 7.7389 , allloss: 616993.5000, dt: 1105.18ms, fracRes: 0.3768, norm(attn): 192.0000, norm(output): 201728.0000, norm(x): 112409.9141, norm(y): 1.0254, norm:110574.2578, tok/sec: 118598.41, flops:46.21, batch-reuse:1
@ 2124 train 7.7277 , allloss: 629647.2500, dt: 1103.74ms, fracRes: 0.3772, norm(attn): 193.0000, norm(output): 210944.0000, norm(x): 114526.7578, norm(y): 1.0259, norm:82436.6094, tok/sec: 118752.79, flops:46.27, batch-reuse:1
@ 2125 train 7.6654 , allloss: 632420.2500, dt: 1097.46ms, fracRes: 0.3768, norm(attn): 195.0000, norm(output): 212992.0000, norm(x): 116717.1016, norm(y): 1.0265, norm:87199.9297, tok/sec: 119431.93, flops:46.53, batch-reuse:1
@ 2126 train 7.6724 , allloss: 602535.1875, dt: 1098.50ms, fracRes: 0.3772, norm(attn): 196.0000, norm(output): 212992.0000, norm(x): 118074.4219, norm(y): 1.0271, norm:111425.3438, tok/sec: 119318.60, flops:46.49, batch-reuse:1
@ 2127 train 7.7094 , allloss: 617857.1875, dt: 1104.77ms, fracRes: 0.3771, norm(attn): 197.0000, norm(output): 214016.0000, norm(x): 119050.7656, norm(y): 1.0277, norm:150555.9375, tok/sec: 118641.90, flops:46.22, batch-reuse:1
@ 2128 train 7.6955 , allloss: 641722.4375, dt: 1107.46ms, fracRes: 0.3780, norm(attn): 200.0000, norm(output): 217088.0000, norm(x): 119584.7422, norm(y): 1.0282, norm:319114.5000, tok/sec: 118354.12, flops:46.11, batch-reuse:1
@ 2129 train 7.6844 , allloss: 629388.3750, dt: 1124.38ms, fracRes: 0.3775, norm(attn): 198.0000, norm(output): 214016.0000, norm(x): 119214.6406, norm(y): 1.0285, norm:167255.6562, tok/sec: 116572.83, flops:45.42, batch-reuse:1
@ 2130 train 7.7433 , allloss: 614909.3125, dt: 1120.34ms, fracRes: 0.3763, norm(attn): 197.0000, norm(output): 212992.0000, norm(x): 118507.1016, norm(y): 1.0288, norm:212780.7656, tok/sec: 116993.39, flops:45.58, batch-reuse:1
@ 2131 train 7.7048 , allloss: 615993.0000, dt: 1118.26ms, fracRes: 0.3763, norm(attn): 197.0000, norm(output): 212992.0000, norm(x): 118561.2969, norm(y): 1.0292, norm:197509.3438, tok/sec: 117210.63, flops:45.67, batch-reuse:1
@ 2132 train 7.8461 , allloss: 632836.0625, dt: 1119.59ms, fracRes: 0.3757, norm(attn): 197.0000, norm(output): 215040.0000, norm(x): 119098.5156, norm(y): 1.0296, norm:163951.7031, tok/sec: 117070.97, flops:45.61, batch-reuse:1
@ 2133 train 7.7181 , allloss: 629890.3125, dt: 1120.98ms, fracRes: 0.3765, norm(attn): 203.0000, norm(output): 217088.0000, norm(x): 120588.4141, norm(y): 1.0302, norm:124120.0547, tok/sec: 116926.16, flops:45.55, batch-reuse:1
@ 2134 train 7.6880 , allloss: 609870.1250, dt: 1119.09ms, fracRes: 0.3764, norm(attn): 206.0000, norm(output): 221184.0000, norm(x): 121392.7422, norm(y): 1.0308, norm:84143.0234, tok/sec: 117123.95, flops:45.63, batch-reuse:1
@ 2135 train 7.6925 , allloss: 644142.9375, dt: 1127.89ms, fracRes: 0.3767, norm(attn): 207.0000, norm(output): 224256.0000, norm(x): 122577.0547, norm(y): 1.0314, norm:160397.5938, tok/sec: 116209.51, flops:45.28, batch-reuse:1
@ 2136 train 7.6846 , allloss: 646098.6250, dt: 1116.73ms, fracRes: 0.3765, norm(attn): 207.0000, norm(output): 225280.0000, norm(x): 124374.8672, norm(y): 1.0321, norm:125380.8828, tok/sec: 117371.11, flops:45.73, batch-reuse:1
@ 2137 train 7.6375 , allloss: 646226.2500, dt: 1113.83ms, fracRes: 0.3765, norm(attn): 207.0000, norm(output): 225280.0000, norm(x): 124528.9062, norm(y): 1.0326, norm:151670.0156, tok/sec: 117677.16, flops:45.85, batch-reuse:1
@ 2138 train 7.6936 , allloss: 666797.1250, dt: 1108.00ms, fracRes: 0.3765, norm(attn): 208.0000, norm(output): 226304.0000, norm(x): 124869.8359, norm(y): 1.0331, norm:171349.0469, tok/sec: 118295.85, flops:46.09, batch-reuse:1
@ 2139 train 7.7557 , allloss: 657506.3750, dt: 1119.34ms, fracRes: 0.3765, norm(attn): 208.0000, norm(output): 227328.0000, norm(x): 124630.6797, norm(y): 1.0336, norm:124948.8828, tok/sec: 117097.91, flops:45.62, batch-reuse:1
@ 2140 train 7.7083 , allloss: 638697.5000, dt: 1121.13ms, fracRes: 0.3763, norm(attn): 207.0000, norm(output): 227328.0000, norm(x): 124284.4688, norm(y): 1.0342, norm:275356.9062, tok/sec: 116910.87, flops:45.55, batch-reuse:1
@ 2141 train 7.7147 , allloss: 630842.3750, dt: 1115.92ms, fracRes: 0.3758, norm(attn): 207.0000, norm(output): 224256.0000, norm(x): 122893.4375, norm(y): 1.0345, norm:100995.6484, tok/sec: 117456.82, flops:45.76, batch-reuse:1
@ 2142 train 7.6769 , allloss: 635101.0625, dt: 1124.21ms, fracRes: 0.3762, norm(attn): 207.0000, norm(output): 224256.0000, norm(x): 122474.4531, norm(y): 1.0350, norm:134683.6719, tok/sec: 116589.91, flops:45.42, batch-reuse:1
@ 2143 train 7.7174 , allloss: 632449.8750, dt: 1121.75ms, fracRes: 0.3762, norm(attn): 207.0000, norm(output): 223232.0000, norm(x): 121948.5625, norm(y): 1.0355, norm:165303.0000, tok/sec: 116845.86, flops:45.52, batch-reuse:1
@ 2144 train 7.7416 , allloss: 643253.1875, dt: 1120.97ms, fracRes: 0.3760, norm(attn): 205.0000, norm(output): 222208.0000, norm(x): 121640.4219, norm(y): 1.0361, norm:176549.1406, tok/sec: 116927.15, flops:45.55, batch-reuse:1
@ 2145 train 7.8186 , allloss: 686596.8125, dt: 1115.42ms, fracRes: 0.3759, norm(attn): 207.0000, norm(output): 224256.0000, norm(x): 122062.2266, norm(y): 1.0367, norm:187690.1875, tok/sec: 117509.37, flops:45.78, batch-reuse:1
@ 2146 train 7.8630 , allloss: 637327.3125, dt: 1133.53ms, fracRes: 0.3758, norm(attn): 207.0000, norm(output): 225280.0000, norm(x): 122931.3828, norm(y): 1.0374, norm:101821.6484, tok/sec: 115631.49, flops:45.05, batch-reuse:1
@ 2147 train 7.6250 , allloss: 633563.6875, dt: 1109.13ms, fracRes: 0.3767, norm(attn): 208.0000, norm(output): 228352.0000, norm(x): 125470.3047, norm(y): 1.0384, norm:131342.2500, tok/sec: 118175.90, flops:46.04, batch-reuse:1
@ 2148 train 7.6510 , allloss: 768257.0000, dt: 1106.94ms, fracRes: 0.3738, norm(attn): 208.0000, norm(output): 230400.0000, norm(x): 127230.1719, norm(y): 1.0392, norm:3299803.2500, tok/sec: 118409.71, flops:46.13, batch-reuse:1
@ 2149 train 7.6918 , allloss: 661016.6875, dt: 1104.82ms, fracRes: 0.3765, norm(attn): 209.0000, norm(output): 232448.0000, norm(x): 128426.0547, norm(y): 1.0398, norm:446107.2812, tok/sec: 118636.03, flops:46.22, batch-reuse:1
@ 2150 train 7.7261 , allloss: 690900.6250, dt: 1124.90ms, fracRes: 0.3766, norm(attn): 214.0000, norm(output): 232448.0000, norm(x): 129499.8906, norm(y): 1.0404, norm:201842.5000, tok/sec: 116518.84, flops:45.40, batch-reuse:1
@ 2151 train 7.6523 , allloss: 673075.2500, dt: 1094.43ms, fracRes: 0.3766, norm(attn): 211.0000, norm(output): 233472.0000, norm(x): 129279.1719, norm(y): 1.0409, norm:120604.5312, tok/sec: 119762.93, flops:46.66, batch-reuse:1
@ 2152 train 7.6793 , allloss: 644585.4375, dt: 1106.18ms, fracRes: 0.3764, norm(attn): 209.0000, norm(output): 231424.0000, norm(x): 127155.0078, norm(y): 1.0411, norm:116306.0938, tok/sec: 118490.31, flops:46.16, batch-reuse:1
@ 2153 train 7.6474 , allloss: 649984.1250, dt: 1097.62ms, fracRes: 0.3766, norm(attn): 208.0000, norm(output): 227328.0000, norm(x): 125701.0156, norm(y): 1.0414, norm:149251.0469, tok/sec: 119414.89, flops:46.52, batch-reuse:1
@ 2154 train 7.7127 , allloss: 925140.6250, dt: 1118.55ms, fracRes: 0.3532, norm(attn): 176.0000, norm(output): 191488.0000, norm(x): 110162.5469, norm(y): 1.0417, norm:26833278.0000, tok/sec: 117180.80, flops:45.65, batch-reuse:1
@ 2155 train 7.7010 , allloss: 686737.6875, dt: 1110.79ms, fracRes: 0.3763, norm(attn): 207.0000, norm(output): 219136.0000, norm(x): 120539.4141, norm(y): 1.0420, norm:106545.2969, tok/sec: 117998.98, flops:45.97, batch-reuse:1
@ 2156 train 7.6601 , allloss: 605937.7500, dt: 1115.98ms, fracRes: 0.3766, norm(attn): 202.0000, norm(output): 214016.0000, norm(x): 118622.2344, norm(y): 1.0425, norm:121345.0781, tok/sec: 117450.52, flops:45.76, batch-reuse:1
@ 2157 train 7.7484 , allloss: 602472.9375, dt: 1105.91ms, fracRes: 0.3759, norm(attn): 196.0000, norm(output): 210944.0000, norm(x): 115113.4531, norm(y): 1.0426, norm:109476.3203, tok/sec: 118519.23, flops:46.18, batch-reuse:1
@ 2158 train 7.6831 , allloss: 598442.6875, dt: 1105.96ms, fracRes: 0.3765, norm(attn): 193.0000, norm(output): 204800.0000, norm(x): 113296.3516, norm(y): 1.0430, norm:89269.9922, tok/sec: 118514.24, flops:46.17, batch-reuse:1
@ 2159 train 7.7087 , allloss: 599313.2500, dt: 1097.71ms, fracRes: 0.3760, norm(attn): 192.0000, norm(output): 199680.0000, norm(x): 110096.5469, norm(y): 1.0431, norm:104794.7188, tok/sec: 119404.46, flops:46.52, batch-reuse:1
@ 2160 train 7.8850 , allloss: 605999.8125, dt: 1109.84ms, fracRes: 0.3757, norm(attn): 189.0000, norm(output): 193536.0000, norm(x): 106535.7969, norm(y): 1.0431, norm:133323.5469, tok/sec: 118100.40, flops:46.01, batch-reuse:1
@ 2161 train 7.8634 , allloss: 571574.6250, dt: 1131.21ms, fracRes: 0.3756, norm(attn): 187.0000, norm(output): 190464.0000, norm(x): 104288.7891, norm(y): 1.0433, norm:490956.1250, tok/sec: 115869.16, flops:45.14, batch-reuse:1
@ 2162 train 7.6528 , allloss: 560684.8125, dt: 1107.01ms, fracRes: 0.3764, norm(attn): 186.0000, norm(output): 190464.0000, norm(x): 103477.2188, norm(y): 1.0439, norm:551716.0625, tok/sec: 118401.99, flops:46.13, batch-reuse:1
@ 2163 train 7.6910 , allloss: 568908.8125, dt: 1095.68ms, fracRes: 0.3763, norm(attn): 182.0000, norm(output): 185344.0000, norm(x): 101862.6797, norm(y): 1.0443, norm:119333.1016, tok/sec: 119626.48, flops:46.61, batch-reuse:1
@ 2164 train 7.6634 , allloss: 549201.0000, dt: 1114.54ms, fracRes: 0.3767, norm(attn): 181.0000, norm(output): 183296.0000, norm(x): 101026.2422, norm(y): 1.0449, norm:182062.1719, tok/sec: 117602.12, flops:45.82, batch-reuse:1
@ 2165 train 7.5812 , allloss: 557348.9375, dt: 1115.15ms, fracRes: 0.3767, norm(attn): 181.0000, norm(output): 182272.0000, norm(x): 101392.8281, norm(y): 1.0455, norm:122134.0156, tok/sec: 117537.60, flops:45.79, batch-reuse:1
@ 2166 train 7.6577 , allloss: 558644.3750, dt: 1126.39ms, fracRes: 0.3766, norm(attn): 181.0000, norm(output): 183296.0000, norm(x): 101431.7500, norm(y): 1.0461, norm:152893.3594, tok/sec: 116364.18, flops:45.34, batch-reuse:1
@ 2167 train 7.6587 , allloss: 566424.1250, dt: 1147.73ms, fracRes: 0.3765, norm(attn): 186.0000, norm(output): 186368.0000, norm(x): 102666.1719, norm(y): 1.0468, norm:104722.6719, tok/sec: 114201.18, flops:44.49, batch-reuse:1
@ 2168 train 7.6323 , allloss: 578405.7500, dt: 1119.70ms, fracRes: 0.3767, norm(attn): 186.0000, norm(output): 190464.0000, norm(x): 104745.8828, norm(y): 1.0476, norm:126172.6328, tok/sec: 117060.23, flops:45.61, batch-reuse:1
@ 2169 train 7.7541 , allloss: 559988.3125, dt: 1133.38ms, fracRes: 0.3766, norm(attn): 187.0000, norm(output): 193536.0000, norm(x): 106847.9688, norm(y): 1.0483, norm:87433.8047, tok/sec: 115646.81, flops:45.06, batch-reuse:1
@ 2170 train 7.7403 , allloss: 575703.3750, dt: 1107.30ms, fracRes: 0.3764, norm(attn): 191.0000, norm(output): 198656.0000, norm(x): 109627.1172, norm(y): 1.0491, norm:99912.3750, tok/sec: 118371.27, flops:46.12, batch-reuse:1
@ 2171 train 7.7005 , allloss: 548039.6875, dt: 1108.71ms, fracRes: 0.3775, norm(attn): 194.0000, norm(output): 202752.0000, norm(x): 112821.3047, norm(y): 1.0500, norm:149122.0625, tok/sec: 118220.47, flops:46.06, batch-reuse:1
@ 2172 train 7.6764 , allloss: 590595.9375, dt: 1109.16ms, fracRes: 0.3772, norm(attn): 195.0000, norm(output): 211968.0000, norm(x): 115143.6484, norm(y): 1.0507, norm:136139.3750, tok/sec: 118172.11, flops:46.04, batch-reuse:1
@ 2173 train 7.6846 , allloss: 621207.5625, dt: 1126.66ms, fracRes: 0.3769, norm(attn): 196.0000, norm(output): 212992.0000, norm(x): 117462.0234, norm(y): 1.0515, norm:134682.5312, tok/sec: 116336.87, flops:45.32, batch-reuse:1
@ 2174 train 7.7146 , allloss: 608549.3125, dt: 1129.71ms, fracRes: 0.3772, norm(attn): 201.0000, norm(output): 216064.0000, norm(x): 119766.5156, norm(y): 1.0521, norm:183729.2188, tok/sec: 116022.70, flops:45.20, batch-reuse:1
@ 2175 train 7.6721 , allloss: 595588.8750, dt: 1118.31ms, fracRes: 0.3774, norm(attn): 207.0000, norm(output): 225280.0000, norm(x): 122220.3516, norm(y): 1.0527, norm:85256.6562, tok/sec: 117204.95, flops:45.66, batch-reuse:1
@ 2176 train 7.6428 , allloss: 653670.5000, dt: 1108.98ms, fracRes: 0.3775, norm(attn): 208.0000, norm(output): 228352.0000, norm(x): 125292.3203, norm(y): 1.0534, norm:235351.1719, tok/sec: 118191.90, flops:46.05, batch-reuse:1
@ 2177 train 7.5951 , allloss: 649801.1250, dt: 1093.24ms, fracRes: 0.3777, norm(attn): 208.0000, norm(output): 230400.0000, norm(x): 127770.9766, norm(y): 1.0541, norm:200239.6406, tok/sec: 119893.37, flops:46.71, batch-reuse:1
@ 2178 train 7.7344 , allloss: 659259.9375, dt: 1109.92ms, fracRes: 0.3771, norm(attn): 210.0000, norm(output): 233472.0000, norm(x): 130291.8438, norm(y): 1.0547, norm:211519.5469, tok/sec: 118091.87, flops:46.01, batch-reuse:1
@ 2179 train 7.6791 , allloss: 685930.1875, dt: 1116.34ms, fracRes: 0.3772, norm(attn): 220.0000, norm(output): 244736.0000, norm(x): 133348.1875, norm(y): 1.0556, norm:228986.0781, tok/sec: 117412.04, flops:45.74, batch-reuse:1
@ 2180 train 7.6255 , allloss: 734195.8750, dt: 1129.77ms, fracRes: 0.3777, norm(attn): 221.0000, norm(output): 246784.0000, norm(x): 136627.6562, norm(y): 1.0565, norm:212426.2031, tok/sec: 116016.51, flops:45.20, batch-reuse:1
@ 2181 train 7.6442 , allloss: 692178.6250, dt: 1128.66ms, fracRes: 0.3777, norm(attn): 223.0000, norm(output): 252928.0000, norm(x): 138971.1250, norm(y): 1.0571, norm:151230.8906, tok/sec: 116130.76, flops:45.24, batch-reuse:1
@ 2182 train 7.7631 , allloss: 756334.1875, dt: 1124.08ms, fracRes: 0.3773, norm(attn): 225.0000, norm(output): 261120.0000, norm(x): 141960.3906, norm(y): 1.0576, norm:200132.8438, tok/sec: 116603.48, flops:45.43, batch-reuse:1
@ 2183 train 7.6538 , allloss: 762252.9375, dt: 1120.57ms, fracRes: 0.3779, norm(attn): 228.0000, norm(output): 266240.0000, norm(x): 146829.0312, norm(y): 1.0585, norm:239485.2812, tok/sec: 116969.32, flops:45.57, batch-reuse:1
@ 2184 train 7.6708 , allloss: 781770.7500, dt: 1109.79ms, fracRes: 0.3781, norm(attn): 231.0000, norm(output): 276480.0000, norm(x): 150519.0469, norm(y): 1.0592, norm:1319500.1250, tok/sec: 118105.52, flops:46.01, batch-reuse:1
@ 2185 train 7.7244 , allloss: 828246.7500, dt: 1103.77ms, fracRes: 0.3775, norm(attn): 238.0000, norm(output): 280576.0000, norm(x): 154315.8750, norm(y): 1.0600, norm:334249.7188, tok/sec: 118749.89, flops:46.26, batch-reuse:1
@ 2186 train 7.6205 , allloss: 856046.3125, dt: 1133.18ms, fracRes: 0.3785, norm(attn): 241.0000, norm(output): 290816.0000, norm(x): 159951.7656, norm(y): 1.0610, norm:278629.7188, tok/sec: 115667.38, flops:45.06, batch-reuse:1
@ 2187 train 7.6369 , allloss: 1064848.2500, dt: 1104.64ms, fracRes: 0.3804, norm(attn): 246.0000, norm(output): 299008.0000, norm(x): 164917.2656, norm(y): 1.0619, norm:1678834.5000, tok/sec: 118655.75, flops:46.23, batch-reuse:1
@ 2188 train 7.5944 , allloss: 1646883.0000, dt: 1100.34ms, fracRes: 0.4208, norm(attn): 242.0000, norm(output): 305152.0000, norm(x): 154839.4219, norm(y): 1.0628, norm:6972954.5000, tok/sec: 119119.92, flops:46.41, batch-reuse:1
@ 2189 train 7.6433 , allloss: 1408030.0000, dt: 1103.51ms, fracRes: 0.3798, norm(attn): 255.0000, norm(output): 315392.0000, norm(x): 173204.9062, norm(y): 1.0635, norm:976552.2500, tok/sec: 118777.16, flops:46.28, batch-reuse:1
@ 2190 train 7.7043 , allloss: 1795109.6250, dt: 1105.02ms, fracRes: 0.3778, norm(attn): 256.0000, norm(output): 325632.0000, norm(x): 177060.5469, norm(y): 1.0642, norm:582081.3750, tok/sec: 118615.58, flops:46.21, batch-reuse:1
@ 2191 train 7.7273 , allloss: 2097925.0000, dt: 1106.73ms, fracRes: 0.3779, norm(attn): 260.0000, norm(output): 327680.0000, norm(x): 182203.9844, norm(y): 1.0648, norm:3166969.0000, tok/sec: 118431.65, flops:46.14, batch-reuse:1
@ 2192 train 7.7878 , allloss: 5088988.0000, dt: 1117.67ms, fracRes: 0.3743, norm(attn): 276.0000, norm(output): 358400.0000, norm(x): 194297.4531, norm(y): 1.0647, norm:1312587.0000, tok/sec: 117272.68, flops:45.69, batch-reuse:1
@ 2193 train 7.6532 , allloss: 5123934.0000, dt: 1110.65ms, fracRes: 0.4122, norm(attn): 290.0000, norm(output): 378880.0000, norm(x): 195381.0781, norm(y): 1.0670, norm:5882099.0000, tok/sec: 118013.36, flops:45.98, batch-reuse:1
@ 2194 train 7.6315 , allloss: 4196698.0000, dt: 1110.46ms, fracRes: 0.4238, norm(attn): 294.0000, norm(output): 389120.0000, norm(x): 195948.2344, norm(y): 1.0679, norm:5273103.5000, tok/sec: 118033.66, flops:45.99, batch-reuse:1
@ 2195 train 7.7571 , allloss: 5513025.0000, dt: 1120.91ms, fracRes: 0.3885, norm(attn): 290.0000, norm(output): 382976.0000, norm(x): 204511.7656, norm(y): 1.0668, norm:961592.3750, tok/sec: 116933.10, flops:45.56, batch-reuse:1
@ 2196 train 7.6806 , allloss: 5795051.0000, dt: 1109.61ms, fracRes: 0.3781, norm(attn): 290.0000, norm(output): 385024.0000, norm(x): 208277.7812, norm(y): 1.0663, norm:1342367.8750, tok/sec: 118124.38, flops:46.02, batch-reuse:1
@ 2197 train 7.7740 , allloss: 4951778.0000, dt: 1129.90ms, fracRes: 0.3801, norm(attn): 298.0000, norm(output): 393216.0000, norm(x): 214347.2031, norm(y): 1.0667, norm:1052947.2500, tok/sec: 116003.36, flops:45.19, batch-reuse:1
@ 2198 train 7.6866 , allloss: 4801220.0000, dt: 1110.52ms, fracRes: 0.3913, norm(attn): 314.0000, norm(output): 421888.0000, norm(x): 224144.8906, norm(y): 1.0683, norm:831838.1250, tok/sec: 118028.08, flops:45.98, batch-reuse:1
@ 2199 train 7.7023 , allloss: 5077747.5000, dt: 1095.61ms, fracRes: 0.3929, norm(attn): 316.0000, norm(output): 423936.0000, norm(x): 223250.3438, norm(y): 1.0679, norm:1390908.6250, tok/sec: 119633.82, flops:46.61, batch-reuse:1
@ 2200 train 7.7043 , allloss: 4972420.5000, dt: 1099.51ms, fracRes: 0.3856, norm(attn): 318.0000, norm(output): 425984.0000, norm(x): 229621.3438, norm(y): 1.0685, norm:1157596.3750, tok/sec: 119209.24, flops:46.44, batch-reuse:1
@ 2201 train 7.8296 , allloss: 4179744.0000, dt: 1105.21ms, fracRes: 0.3711, norm(attn): 312.0000, norm(output): 417792.0000, norm(x): 227992.2969, norm(y): 1.0665, norm:1092811.8750, tok/sec: 118594.55, flops:46.20, batch-reuse:1
@ 2202 train 7.8663 , allloss: 3020682.7500, dt: 1125.15ms, fracRes: 0.3716, norm(attn): 310.0000, norm(output): 415744.0000, norm(x): 226313.6562, norm(y): 1.0662, norm:1257251.0000, tok/sec: 116493.29, flops:45.39, batch-reuse:1
@ 2203 train 7.7512 , allloss: 1485596.1250, dt: 1103.41ms, fracRes: 0.3777, norm(attn): 316.0000, norm(output): 409600.0000, norm(x): 224747.4531, norm(y): 1.0664, norm:2313941.2500, tok/sec: 118788.12, flops:46.28, batch-reuse:1
@ 2204 train 7.7583 , allloss: 1284799.5000, dt: 1120.31ms, fracRes: 0.3769, norm(attn): 314.0000, norm(output): 397312.0000, norm(x): 219362.0312, norm(y): 1.0659, norm:5175112.5000, tok/sec: 116995.81, flops:45.58, batch-reuse:1
@ 2205 train 7.8239 , allloss: 1534555.5000, dt: 1111.59ms, fracRes: 0.4384, norm(attn): 304.0000, norm(output): 393216.0000, norm(x): 188524.6094, norm(y): 1.0652, norm:4417544.0000, tok/sec: 117913.91, flops:45.94, batch-reuse:1
@ 2206 train 7.7557 , allloss: 1229906.1250, dt: 1124.24ms, fracRes: 0.4348, norm(attn): 300.0000, norm(output): 385024.0000, norm(x): 185493.1406, norm(y): 1.0653, norm:991960.1875, tok/sec: 116587.31, flops:45.42, batch-reuse:1
@ 2207 train 7.8081 , allloss: 1168007.6250, dt: 1131.13ms, fracRes: 0.4345, norm(attn): 300.0000, norm(output): 385024.0000, norm(x): 183218.6875, norm(y): 1.0652, norm:656726.5625, tok/sec: 115877.27, flops:45.15, batch-reuse:1
@ 2208 train 7.8952 , allloss: 1225817.6250, dt: 1123.31ms, fracRes: 0.4337, norm(attn): 300.0000, norm(output): 380928.0000, norm(x): 182839.1250, norm(y): 1.0651, norm:725308.6250, tok/sec: 116683.89, flops:45.46, batch-reuse:1
@ 2209 train 7.7758 , allloss: 1158036.3750, dt: 1111.33ms, fracRes: 0.4356, norm(attn): 300.0000, norm(output): 385024.0000, norm(x): 184515.2188, norm(y): 1.0657, norm:754306.6250, tok/sec: 117941.36, flops:45.95, batch-reuse:1
@ 2210 train 7.8268 , allloss: 1200555.7500, dt: 1133.39ms, fracRes: 0.4387, norm(attn): 300.0000, norm(output): 391168.0000, norm(x): 186934.0938, norm(y): 1.0660, norm:1464638.7500, tok/sec: 115645.94, flops:45.06, batch-reuse:1
@ 2211 train 7.8522 , allloss: 1170156.5000, dt: 1129.11ms, fracRes: 0.4389, norm(attn): 306.0000, norm(output): 395264.0000, norm(x): 189744.0781, norm(y): 1.0665, norm:641852.6875, tok/sec: 116084.05, flops:45.23, batch-reuse:1
@ 2212 train 7.7733 , allloss: 1222115.0000, dt: 1132.58ms, fracRes: 0.4384, norm(attn): 312.0000, norm(output): 401408.0000, norm(x): 194640.0938, norm(y): 1.0675, norm:595362.6875, tok/sec: 115728.20, flops:45.09, batch-reuse:1
@ 2213 train 8.1081 , allloss: 1283495.1250, dt: 1111.50ms, fracRes: 0.4332, norm(attn): 316.0000, norm(output): 417792.0000, norm(x): 198184.9375, norm(y): 1.0671, norm:581864.3750, tok/sec: 117923.04, flops:45.94, batch-reuse:1
@ 2214 train 7.9688 , allloss: 1172168.6250, dt: 1113.11ms, fracRes: 0.4335, norm(attn): 320.0000, norm(output): 425984.0000, norm(x): 204064.0156, norm(y): 1.0681, norm:491969.6875, tok/sec: 117752.75, flops:45.88, batch-reuse:1
@ 2215 train 7.8520 , allloss: 1181362.5000, dt: 1125.98ms, fracRes: 0.4348, norm(attn): 322.0000, norm(output): 444416.0000, norm(x): 212278.2344, norm(y): 1.0696, norm:1425793.0000, tok/sec: 116406.56, flops:45.35, batch-reuse:1
@ 2216 train 7.8865 , allloss: 1150725.3750, dt: 1114.91ms, fracRes: 0.3742, norm(attn): 300.0000, norm(output): 411648.0000, norm(x): 223118.3594, norm(y): 1.0703, norm:670955.1250, tok/sec: 117562.51, flops:45.80, batch-reuse:1
@ 2217 train 7.7712 , allloss: 1115129.0000, dt: 1105.14ms, fracRes: 0.3637, norm(attn): 302.0000, norm(output): 425984.0000, norm(x): 233385.7969, norm(y): 1.0717, norm:506585.4062, tok/sec: 118601.69, flops:46.21, batch-reuse:1
@ 2218 train 7.8295 , allloss: 1193987.5000, dt: 1116.11ms, fracRes: 0.3630, norm(attn): 308.0000, norm(output): 436224.0000, norm(x): 242917.3594, norm(y): 1.0724, norm:5336908.0000, tok/sec: 117436.75, flops:45.75, batch-reuse:1
@ 2219 train 7.8377 , allloss: 1127126.2500, dt: 1109.97ms, fracRes: 0.3627, norm(attn): 320.0000, norm(output): 456704.0000, norm(x): 252324.3438, norm(y): 1.0733, norm:334700.8125, tok/sec: 118086.32, flops:46.01, batch-reuse:1
@ 2220 train 7.7720 , allloss: 1175323.0000, dt: 1131.81ms, fracRes: 0.3631, norm(attn): 322.0000, norm(output): 468992.0000, norm(x): 262813.3125, norm(y): 1.0744, norm:739019.3125, tok/sec: 115807.72, flops:45.12, batch-reuse:1
@ 2221 train 7.9066 , allloss: 1226816.1250, dt: 1130.81ms, fracRes: 0.3618, norm(attn): 334.0000, norm(output): 493568.0000, norm(x): 272530.4062, norm(y): 1.0750, norm:439154.0312, tok/sec: 115909.69, flops:45.16, batch-reuse:1
@ 2222 train 7.8099 , allloss: 1204893.2500, dt: 1113.34ms, fracRes: 0.3625, norm(attn): 348.0000, norm(output): 520192.0000, norm(x): 282450.4375, norm(y): 1.0760, norm:307877.6875, tok/sec: 117728.97, flops:45.87, batch-reuse:1
@ 2223 train 7.7884 , allloss: 1335215.6250, dt: 1112.91ms, fracRes: 0.3631, norm(attn): 350.0000, norm(output): 524288.0000, norm(x): 289972.2188, norm(y): 1.0768, norm:530082.8125, tok/sec: 117774.47, flops:45.88, batch-reuse:1
@ 2224 train 8.0828 , allloss: 1448715.7500, dt: 1104.97ms, fracRes: 0.3593, norm(attn): 350.0000, norm(output): 524288.0000, norm(x): 292046.0000, norm(y): 1.0764, norm:426058.9062, tok/sec: 118620.55, flops:46.21, batch-reuse:1
@ 2225 train 7.7897 , allloss: 1373214.6250, dt: 1121.43ms, fracRes: 0.3645, norm(attn): 352.0000, norm(output): 532480.0000, norm(x): 296302.7500, norm(y): 1.0778, norm:561376.1250, tok/sec: 116879.42, flops:45.54, batch-reuse:1
@ 2226 train 7.7850 , allloss: 1299919.0000, dt: 1112.90ms, fracRes: 0.3663, norm(attn): 352.0000, norm(output): 532480.0000, norm(x): 296812.7500, norm(y): 1.0783, norm:752036.6250, tok/sec: 117775.26, flops:45.89, batch-reuse:1
@ 2227 train 7.7357 , allloss: 1314078.0000, dt: 1134.91ms, fracRes: 0.3701, norm(attn): 350.0000, norm(output): 532480.0000, norm(x): 295859.2500, norm(y): 1.0788, norm:588833.3125, tok/sec: 115490.99, flops:45.00, batch-reuse:1
@ 2228 train 7.7399 , allloss: 1483913.0000, dt: 1098.78ms, fracRes: 0.3728, norm(attn): 350.0000, norm(output): 532480.0000, norm(x): 293558.1875, norm(y): 1.0792, norm:3510415.0000, tok/sec: 119288.34, flops:46.47, batch-reuse:1
@ 2229 train 7.8362 , allloss: 1277149.5000, dt: 1155.01ms, fracRes: 0.3783, norm(attn): 348.0000, norm(output): 524288.0000, norm(x): 290178.0625, norm(y): 1.0795, norm:1296670.5000, tok/sec: 113481.41, flops:44.21, batch-reuse:1
@ 2230 train 7.8038 , allloss: 3201555.5000, dt: 1122.65ms, fracRes: 0.3803, norm(attn): 340.0000, norm(output): 520192.0000, norm(x): 285127.7812, norm(y): 1.0811, norm:11022090.0000, tok/sec: 116752.16, flops:45.49, batch-reuse:1
@ 2231 train 7.7987 , allloss: 3450586.2500, dt: 1135.07ms, fracRes: 0.3784, norm(attn): 342.0000, norm(output): 516096.0000, norm(x): 281417.0938, norm(y): 1.0811, norm:2476486.5000, tok/sec: 115475.20, flops:44.99, batch-reuse:1
@ 2232 train 7.7587 , allloss: 3118759.5000, dt: 1127.65ms, fracRes: 0.4150, norm(attn): 340.0000, norm(output): 516096.0000, norm(x): 266058.1562, norm(y): 1.0829, norm:3089111.2500, tok/sec: 116235.14, flops:45.29, batch-reuse:1
@ 2233 train 7.7229 , allloss: 3196303.0000, dt: 1126.36ms, fracRes: 0.4043, norm(attn): 332.0000, norm(output): 497664.0000, norm(x): 265364.6875, norm(y): 1.0830, norm:3482643.0000, tok/sec: 116367.97, flops:45.34, batch-reuse:1
@ 2234 train 7.8653 , allloss: 3074108.7500, dt: 1109.07ms, fracRes: 0.3987, norm(attn): 324.0000, norm(output): 491520.0000, norm(x): 260179.9219, norm(y): 1.0831, norm:5539887.0000, tok/sec: 118182.27, flops:46.04, batch-reuse:1
@ 2235 train 7.7759 , allloss: 3739296.0000, dt: 1111.27ms, fracRes: 0.3938, norm(attn): 322.0000, norm(output): 489472.0000, norm(x): 259507.9062, norm(y): 1.0835, norm:17278478.0000, tok/sec: 117947.89, flops:45.95, batch-reuse:1
@ 2236 train 7.7804 , allloss: 5336590.5000, dt: 1128.48ms, fracRes: 0.3663, norm(attn): 320.0000, norm(output): 479232.0000, norm(x): 268757.9688, norm(y): 1.0834, norm:2037007.5000, tok/sec: 116149.09, flops:45.25, batch-reuse:1
@ 2237 train 7.8697 , allloss: 5312860.0000, dt: 1123.86ms, fracRes: 0.3656, norm(attn): 312.0000, norm(output): 460800.0000, norm(x): 256944.6719, norm(y): 1.0834, norm:15284882.0000, tok/sec: 116627.03, flops:45.44, batch-reuse:1
@ 2238 train 7.7264 , allloss: 4243112.5000, dt: 1128.66ms, fracRes: 0.3661, norm(attn): 316.0000, norm(output): 460800.0000, norm(x): 258454.5156, norm(y): 1.0838, norm:4424525.0000, tok/sec: 116130.78, flops:45.24, batch-reuse:1
@ 2239 train 7.7256 , allloss: 3703502.2500, dt: 1131.73ms, fracRes: 0.3760, norm(attn): 316.0000, norm(output): 466944.0000, norm(x): 256138.3125, norm(y): 1.0841, norm:1660759.6250, tok/sec: 115815.38, flops:45.12, batch-reuse:1
@ 2240 train 7.7313 , allloss: 3509566.0000, dt: 1131.54ms, fracRes: 0.3809, norm(attn): 318.0000, norm(output): 475136.0000, norm(x): 257970.8125, norm(y): 1.0843, norm:2069184.6250, tok/sec: 115834.93, flops:45.13, batch-reuse:1
@ 2241 train 7.8798 , allloss: 3418500.5000, dt: 1128.00ms, fracRes: 0.3806, norm(attn): 320.0000, norm(output): 485376.0000, norm(x): 262065.2812, norm(y): 1.0844, norm:1545422.0000, tok/sec: 116198.80, flops:45.27, batch-reuse:1
@ 2242 train 7.7068 , allloss: 3403683.0000, dt: 1136.65ms, fracRes: 0.3765, norm(attn): 322.0000, norm(output): 489472.0000, norm(x): 268418.8438, norm(y): 1.0845, norm:1884633.2500, tok/sec: 115314.10, flops:44.93, batch-reuse:1
@ 2243 train 7.8601 , allloss: 3508160.0000, dt: 1116.74ms, fracRes: 0.3728, norm(attn): 324.0000, norm(output): 493568.0000, norm(x): 275717.5625, norm(y): 1.0846, norm:942000.5625, tok/sec: 117370.58, flops:45.73, batch-reuse:1
@ 2244 train 7.8390 , allloss: 3640864.5000, dt: 1137.44ms, fracRes: 0.3736, norm(attn): 332.0000, norm(output): 499712.0000, norm(x): 279514.5625, norm(y): 1.0846, norm:1019615.6250, tok/sec: 115234.12, flops:44.90, batch-reuse:1
@ 2245 train 7.7537 , allloss: 4237302.0000, dt: 1119.21ms, fracRes: 0.3534, norm(attn): 332.0000, norm(output): 509952.0000, norm(x): 289674.8750, norm(y): 1.0847, norm:1292778.8750, tok/sec: 117111.53, flops:45.63, batch-reuse:1
@ 2246 train 7.7791 , allloss: 5312781.0000, dt: 1133.33ms, fracRes: 0.3432, norm(attn): 328.0000, norm(output): 503808.0000, norm(x): 293293.7188, norm(y): 1.0844, norm:2984098.7500, tok/sec: 115651.90, flops:45.06, batch-reuse:1
@ 2247 train 7.7867 , allloss: 3677519.7500, dt: 1129.24ms, fracRes: 0.3585, norm(attn): 344.0000, norm(output): 524288.0000, norm(x): 298165.3125, norm(y): 1.0839, norm:9422573.0000, tok/sec: 116070.61, flops:45.22, batch-reuse:1
@ 2248 train 7.8348 , allloss: 3293709.7500, dt: 1128.16ms, fracRes: 0.3508, norm(attn): 344.0000, norm(output): 528384.0000, norm(x): 301529.4062, norm(y): 1.0832, norm:1852836.3750, tok/sec: 116182.03, flops:45.26, batch-reuse:1
@ 2249 train 7.7745 , allloss: 2175221.0000, dt: 1130.79ms, fracRes: 0.3680, norm(attn): 356.0000, norm(output): 552960.0000, norm(x): 307249.2188, norm(y): 1.0818, norm:990755.6250, tok/sec: 115911.42, flops:45.16, batch-reuse:1
@ 2250 train 8.0298 , allloss: 1800556.6250, dt: 1122.11ms, fracRes: 0.3591, norm(attn): 358.0000, norm(output): 552960.0000, norm(x): 304863.6562, norm(y): 1.0806, norm:614757.3750, tok/sec: 116808.55, flops:45.51, batch-reuse:1
@ 2251 train 7.9751 , allloss: 1563990.2500, dt: 1125.67ms, fracRes: 0.3565, norm(attn): 356.0000, norm(output): 552960.0000, norm(x): 302468.5312, norm(y): 1.0801, norm:1252871.7500, tok/sec: 116439.08, flops:45.36, batch-reuse:1
@ 2252 train 7.9031 , allloss: 1658324.6250, dt: 1135.77ms, fracRes: 0.3587, norm(attn): 354.0000, norm(output): 548864.0000, norm(x): 303031.5625, norm(y): 1.0806, norm:3145533.0000, tok/sec: 115404.00, flops:44.96, batch-reuse:1
@ 2253 train 7.8703 , allloss: 1481321.7500, dt: 1134.91ms, fracRes: 0.3603, norm(attn): 354.0000, norm(output): 548864.0000, norm(x): 301391.5000, norm(y): 1.0807, norm:796371.8750, tok/sec: 115491.13, flops:45.00, batch-reuse:1
@ 2254 train 7.9096 , allloss: 1879654.3750, dt: 1131.80ms, fracRes: 0.3674, norm(attn): 352.0000, norm(output): 536576.0000, norm(x): 294236.1250, norm(y): 1.0804, norm:7326042.0000, tok/sec: 115808.50, flops:45.12, batch-reuse:1
@ 2255 train 7.9467 , allloss: 1963979.1250, dt: 1131.11ms, fracRes: 0.3715, norm(attn): 354.0000, norm(output): 532480.0000, norm(x): 290554.3750, norm(y): 1.0801, norm:17075106.0000, tok/sec: 115879.27, flops:45.15, batch-reuse:1
@ 2256 train 8.0281 , allloss: 1921436.0000, dt: 1124.13ms, fracRes: 0.3602, norm(attn): 352.0000, norm(output): 528384.0000, norm(x): 292695.7500, norm(y): 1.0796, norm:5493160.0000, tok/sec: 116599.11, flops:45.43, batch-reuse:1
@ 2257 train 7.9450 , allloss: 1955694.2500, dt: 1120.18ms, fracRes: 0.4108, norm(attn): 350.0000, norm(output): 524288.0000, norm(x): 265144.1250, norm(y): 1.0799, norm:10189424.0000, tok/sec: 117009.68, flops:45.59, batch-reuse:1
@ 2258 train 7.9246 , allloss: 1934221.7500, dt: 1146.88ms, fracRes: 0.3926, norm(attn): 350.0000, norm(output): 524288.0000, norm(x): 274076.7500, norm(y): 1.0802, norm:39691488.0000, tok/sec: 114285.91, flops:44.53, batch-reuse:1
@ 2259 train 7.9521 , allloss: 1930273.1250, dt: 1125.94ms, fracRes: 0.3568, norm(attn): 350.0000, norm(output): 524288.0000, norm(x): 291808.0938, norm(y): 1.0801, norm:1222125.6250, tok/sec: 116410.85, flops:45.35, batch-reuse:1
@ 2260 train 7.9429 , allloss: 1600365.1250, dt: 1106.41ms, fracRes: 0.3576, norm(attn): 350.0000, norm(output): 522240.0000, norm(x): 290421.3750, norm(y): 1.0802, norm:765615.5625, tok/sec: 118466.15, flops:46.15, batch-reuse:1
@ 2261 train 7.9456 , allloss: 1740584.5000, dt: 1106.46ms, fracRes: 0.3561, norm(attn): 350.0000, norm(output): 522240.0000, norm(x): 289483.4062, norm(y): 1.0801, norm:1631324.3750, tok/sec: 118460.44, flops:46.15, batch-reuse:1
@ 2262 train 7.9447 , allloss: 1790138.5000, dt: 1110.84ms, fracRes: 0.3606, norm(attn): 350.0000, norm(output): 524288.0000, norm(x): 287305.9375, norm(y): 1.0805, norm:1171147.6250, tok/sec: 117994.04, flops:45.97, batch-reuse:1
@ 2263 train 7.9651 , allloss: 1598731.8750, dt: 1105.29ms, fracRes: 0.3603, norm(attn): 348.0000, norm(output): 520192.0000, norm(x): 283560.9375, norm(y): 1.0803, norm:3368895.5000, tok/sec: 118586.49, flops:46.20, batch-reuse:1
@ 2264 train 8.0051 , allloss: 1527425.0000, dt: 1112.99ms, fracRes: 0.3560, norm(attn): 348.0000, norm(output): 516096.0000, norm(x): 283159.4375, norm(y): 1.0802, norm:919319.3750, tok/sec: 117765.95, flops:45.88, batch-reuse:1
@ 2265 train 8.0129 , allloss: 1463853.7500, dt: 1116.25ms, fracRes: 0.3567, norm(attn): 342.0000, norm(output): 509952.0000, norm(x): 278872.8438, norm(y): 1.0801, norm:496259.8750, tok/sec: 117422.00, flops:45.75, batch-reuse:1
@ 2266 train 7.9017 , allloss: 1393235.2500, dt: 1120.48ms, fracRes: 0.3594, norm(attn): 340.0000, norm(output): 493568.0000, norm(x): 275829.9375, norm(y): 1.0808, norm:516450.2500, tok/sec: 116978.06, flops:45.57, batch-reuse:1
@ 2267 train 7.9520 , allloss: 1738471.0000, dt: 1119.11ms, fracRes: 0.3873, norm(attn): 332.0000, norm(output): 491520.0000, norm(x): 255771.9844, norm(y): 1.0803, norm:50731504.0000, tok/sec: 117121.53, flops:45.63, batch-reuse:1
@ 2268 train 7.9913 , allloss: 1650202.8750, dt: 1120.20ms, fracRes: 0.3882, norm(attn): 328.0000, norm(output): 475136.0000, norm(x): 250036.2656, norm(y): 1.0799, norm:27107746.0000, tok/sec: 117008.01, flops:45.59, batch-reuse:1
@ 2269 train 7.9805 , allloss: 1821961.2500, dt: 1115.83ms, fracRes: 0.4237, norm(attn): 322.0000, norm(output): 464896.0000, norm(x): 229224.3906, norm(y): 1.0799, norm:5747908.0000, tok/sec: 117465.83, flops:45.76, batch-reuse:1
@ 2270 train 8.0370 , allloss: 1728244.5000, dt: 1125.04ms, fracRes: 0.4215, norm(attn): 320.0000, norm(output): 460800.0000, norm(x): 225522.0938, norm(y): 1.0794, norm:3503119.7500, tok/sec: 116503.90, flops:45.39, batch-reuse:1
@ 2271 train 7.9470 , allloss: 1560212.8750, dt: 1138.27ms, fracRes: 0.3949, norm(attn): 320.0000, norm(output): 460800.0000, norm(x): 237117.8750, norm(y): 1.0797, norm:14367254.0000, tok/sec: 115149.90, flops:44.86, batch-reuse:1
@ 2272 train 7.8383 , allloss: 1669481.8750, dt: 1123.24ms, fracRes: 0.3856, norm(attn): 320.0000, norm(output): 458752.0000, norm(x): 240795.9375, norm(y): 1.0801, norm:61604516.0000, tok/sec: 116691.45, flops:45.46, batch-reuse:1
@ 2273 train 7.9787 , allloss: 1710928.5000, dt: 1135.06ms, fracRes: 0.3145, norm(attn): 322.0000, norm(output): 456704.0000, norm(x): 272878.6875, norm(y): 1.0797, norm:68139872.0000, tok/sec: 115476.07, flops:44.99, batch-reuse:1
@ 2274 train 7.9029 , allloss: 1755068.1250, dt: 1131.29ms, fracRes: 0.2879, norm(attn): 320.0000, norm(output): 454656.0000, norm(x): 283615.1562, norm(y): 1.0799, norm:958675.0625, tok/sec: 115860.68, flops:45.14, batch-reuse:1
@ 2275 train 7.9298 , allloss: 1670784.0000, dt: 1116.80ms, fracRes: 0.2862, norm(attn): 320.0000, norm(output): 450560.0000, norm(x): 278156.0312, norm(y): 1.0794, norm:1467182.5000, tok/sec: 117364.37, flops:45.73, batch-reuse:1
@ 2276 train 7.8575 , allloss: 1687849.5000, dt: 1133.76ms, fracRes: 0.2869, norm(attn): 316.0000, norm(output): 430080.0000, norm(x): 271986.9375, norm(y): 1.0797, norm:1399276.7500, tok/sec: 115607.98, flops:45.04, batch-reuse:1
@ 2277 train 7.8848 , allloss: 1615311.7500, dt: 1101.95ms, fracRes: 0.2865, norm(attn): 304.0000, norm(output): 421888.0000, norm(x): 262850.1562, norm(y): 1.0795, norm:547070.8750, tok/sec: 118945.56, flops:46.34, batch-reuse:1
@ 2278 train 8.0500 , allloss: 1531525.8750, dt: 1118.06ms, fracRes: 0.2845, norm(attn): 298.0000, norm(output): 397312.0000, norm(x): 251094.1875, norm(y): 1.0783, norm:1598981.8750, tok/sec: 117231.67, flops:45.67, batch-reuse:1
@ 2279 train 7.8614 , allloss: 1511039.1250, dt: 1120.74ms, fracRes: 0.2860, norm(attn): 290.0000, norm(output): 387072.0000, norm(x): 242056.5625, norm(y): 1.0788, norm:359912.5000, tok/sec: 116951.80, flops:45.56, batch-reuse:1
@ 2280 train 7.8476 , allloss: 1413551.1250, dt: 1131.76ms, fracRes: 0.2861, norm(attn): 286.0000, norm(output): 372736.0000, norm(x): 232810.0625, norm(y): 1.0788, norm:451371.0000, tok/sec: 115812.31, flops:45.12, batch-reuse:1
@ 2281 train 7.9068 , allloss: 1339887.7500, dt: 1115.44ms, fracRes: 0.2855, norm(attn): 272.0000, norm(output): 358400.0000, norm(x): 222408.8438, norm(y): 1.0784, norm:409596.5938, tok/sec: 117506.70, flops:45.78, batch-reuse:1
@ 2282 train 7.8961 , allloss: 1410295.2500, dt: 1130.73ms, fracRes: 0.2849, norm(attn): 268.0000, norm(output): 335872.0000, norm(x): 212994.1875, norm(y): 1.0783, norm:465299.9062, tok/sec: 115918.44, flops:45.16, batch-reuse:1
@ 2283 train 7.8917 , allloss: 1296124.5000, dt: 1131.01ms, fracRes: 0.2857, norm(attn): 258.0000, norm(output): 327680.0000, norm(x): 204258.9219, norm(y): 1.0783, norm:429304.2812, tok/sec: 115889.33, flops:45.15, batch-reuse:1
@ 2284 train 7.8410 , allloss: 1297962.8750, dt: 1098.23ms, fracRes: 0.2869, norm(attn): 255.0000, norm(output): 311296.0000, norm(x): 196281.1250, norm(y): 1.0787, norm:327712.1250, tok/sec: 119348.11, flops:46.50, batch-reuse:1
@ 2285 train 7.8496 , allloss: 1264721.1250, dt: 1119.90ms, fracRes: 0.2864, norm(attn): 245.0000, norm(output): 301056.0000, norm(x): 189736.3906, norm(y): 1.0789, norm:729331.6875, tok/sec: 117039.32, flops:45.60, batch-reuse:1
@ 2286 train 7.8817 , allloss: 1202061.3750, dt: 1109.31ms, fracRes: 0.2866, norm(attn): 242.0000, norm(output): 292864.0000, norm(x): 183928.3125, norm(y): 1.0791, norm:489601.0000, tok/sec: 118156.04, flops:46.03, batch-reuse:1
@ 2287 train 7.8185 , allloss: 1191309.2500, dt: 1115.91ms, fracRes: 0.2875, norm(attn): 241.0000, norm(output): 290816.0000, norm(x): 181260.3281, norm(y): 1.0799, norm:270672.2500, tok/sec: 117457.90, flops:45.76, batch-reuse:1
@ 2288 train 7.8057 , allloss: 1213926.0000, dt: 1410.05ms, fracRes: 0.3052, norm(attn): 241.0000, norm(output): 284672.0000, norm(x): 175575.6719, norm(y): 1.0804, norm:8404321.0000, tok/sec: 92955.42, flops:36.22, batch-reuse:1
@ 2289 train 7.8823 , allloss: 1109966.5000, dt: 1129.09ms, fracRes: 0.3022, norm(attn): 242.0000, norm(output): 282624.0000, norm(x): 174251.5156, norm(y): 1.0803, norm:20253728.0000, tok/sec: 116086.37, flops:45.23, batch-reuse:1
@ 2290 train 7.8655 , allloss: 960003.3750, dt: 1125.58ms, fracRes: 0.2884, norm(attn): 241.0000, norm(output): 282624.0000, norm(x): 177580.9531, norm(y): 1.0809, norm:878023.2500, tok/sec: 116448.48, flops:45.37, batch-reuse:1
@ 2291 train 7.8658 , allloss: 974917.5625, dt: 1127.67ms, fracRes: 0.2883, norm(attn): 242.0000, norm(output): 286720.0000, norm(x): 178550.7031, norm(y): 1.0813, norm:406906.2500, tok/sec: 116232.53, flops:45.28, batch-reuse:1
@ 2292 train 7.9154 , allloss: 906784.1875, dt: 1117.56ms, fracRes: 0.2881, norm(attn): 243.0000, norm(output): 288768.0000, norm(x): 181102.9062, norm(y): 1.0816, norm:296612.9375, tok/sec: 117284.32, flops:45.69, batch-reuse:1
@ 2293 train 7.8702 , allloss: 852767.1875, dt: 1135.78ms, fracRes: 0.2888, norm(attn): 255.0000, norm(output): 294912.0000, norm(x): 185933.6406, norm(y): 1.0823, norm:4006055.5000, tok/sec: 115402.14, flops:44.96, batch-reuse:1
@ 2294 train 7.8524 , allloss: 873449.5625, dt: 1132.69ms, fracRes: 0.2889, norm(attn): 256.0000, norm(output): 305152.0000, norm(x): 190540.9531, norm(y): 1.0830, norm:656180.7500, tok/sec: 115716.99, flops:45.08, batch-reuse:1
@ 2295 train 7.8345 , allloss: 867794.5625, dt: 1130.55ms, fracRes: 0.2896, norm(attn): 258.0000, norm(output): 309248.0000, norm(x): 194891.2812, norm(y): 1.0837, norm:763137.1875, tok/sec: 115936.75, flops:45.17, batch-reuse:1
@ 2296 train 7.9036 , allloss: 823449.9375, dt: 1121.59ms, fracRes: 0.2890, norm(attn): 266.0000, norm(output): 319488.0000, norm(x): 199602.2188, norm(y): 1.0842, norm:255565.3750, tok/sec: 116863.10, flops:45.53, batch-reuse:1
@ 2297 train 7.8505 , allloss: 815288.8125, dt: 1105.12ms, fracRes: 0.2892, norm(attn): 270.0000, norm(output): 327680.0000, norm(x): 204748.4219, norm(y): 1.0850, norm:681339.8125, tok/sec: 118604.04, flops:46.21, batch-reuse:1
@ 2298 train 7.8721 , allloss: 837696.1875, dt: 1122.06ms, fracRes: 0.2899, norm(attn): 276.0000, norm(output): 333824.0000, norm(x): 210766.6875, norm(y): 1.0860, norm:711216.8125, tok/sec: 116813.81, flops:45.51, batch-reuse:1
@ 2299 train 7.8625 , allloss: 876951.2500, dt: 1118.76ms, fracRes: 0.2898, norm(attn): 282.0000, norm(output): 342016.0000, norm(x): 216446.3281, norm(y): 1.0870, norm:815805.5000, tok/sec: 117158.67, flops:45.65, batch-reuse:1
@ 2300 train 7.8724 , allloss: 976298.4375, dt: 1115.20ms, fracRes: 0.2902, norm(attn): 286.0000, norm(output): 356352.0000, norm(x): 221988.0312, norm(y): 1.0880, norm:367470.6875, tok/sec: 117532.80, flops:45.79, batch-reuse:1
@ 2301 train 7.8986 , allloss: 899493.3125, dt: 1127.78ms, fracRes: 0.2901, norm(attn): 288.0000, norm(output): 358400.0000, norm(x): 225195.7969, norm(y): 1.0886, norm:478630.5000, tok/sec: 116221.13, flops:45.28, batch-reuse:1
@ 2302 train 7.8724 , allloss: 925932.6250, dt: 1129.89ms, fracRes: 0.2906, norm(attn): 290.0000, norm(output): 360448.0000, norm(x): 227708.4375, norm(y): 1.0897, norm:450730.8750, tok/sec: 116004.12, flops:45.20, batch-reuse:1
@ 2303 train 7.7862 , allloss: 928327.8125, dt: 1118.13ms, fracRes: 0.2907, norm(attn): 290.0000, norm(output): 362496.0000, norm(x): 229235.9375, norm(y): 1.0906, norm:518373.6562, tok/sec: 117224.65, flops:45.67, batch-reuse:1
@ 2304 train 7.9040 , allloss: 1112939.8750, dt: 1113.22ms, fracRes: 0.2886, norm(attn): 290.0000, norm(output): 360448.0000, norm(x): 227596.6406, norm(y): 1.0905, norm:521623.0625, tok/sec: 117741.43, flops:45.87, batch-reuse:1
@ 2305 train 7.8247 , allloss: 1098193.8750, dt: 1124.28ms, fracRes: 0.2900, norm(attn): 290.0000, norm(output): 360448.0000, norm(x): 227183.6406, norm(y): 1.0918, norm:600926.1250, tok/sec: 116582.99, flops:45.42, batch-reuse:1
@ 2306 train 7.9235 , allloss: 1737563.6250, dt: 1124.23ms, fracRes: 0.2871, norm(attn): 288.0000, norm(output): 358400.0000, norm(x): 224841.1562, norm(y): 1.0921, norm:1083006.3750, tok/sec: 116588.70, flops:45.42, batch-reuse:1
@ 2307 train 7.8005 , allloss: 2216379.7500, dt: 1114.29ms, fracRes: 0.2234, norm(attn): 284.0000, norm(output): 356352.0000, norm(x): 243554.9062, norm(y): 1.0932, norm:2894635.0000, tok/sec: 117628.54, flops:45.83, batch-reuse:1
@ 2308 train 7.8475 , allloss: 3771637.2500, dt: 1112.16ms, fracRes: 0.0826, norm(attn): 292.0000, norm(output): 360448.0000, norm(x): 300100.9062, norm(y): 1.0943, norm:12121732.0000, tok/sec: 117853.78, flops:45.92, batch-reuse:1
@ 2309 train 7.5475 , allloss: 7616827.5000, dt: 1108.37ms, fracRes: 0.2103, norm(attn): 294.0000, norm(output): 366592.0000, norm(x): 266096.9688, norm(y): 1.0999, norm:8746506.0000, tok/sec: 118256.43, flops:46.07, batch-reuse:1
@ 2310 train 7.6544 , allloss: 8931287.0000, dt: 1111.54ms, fracRes: 0.3266, norm(attn): 288.0000, norm(output): 358400.0000, norm(x): 217407.7188, norm(y): 1.1005, norm:1433062.2500, tok/sec: 117919.55, flops:45.94, batch-reuse:1
@ 2311 train 7.7075 , allloss: 8773018.0000, dt: 1146.01ms, fracRes: 0.3349, norm(attn): 284.0000, norm(output): 350208.0000, norm(x): 209426.8438, norm(y): 1.1008, norm:1436694.5000, tok/sec: 114372.53, flops:44.56, batch-reuse:1
@ 2312 train 7.7097 , allloss: 8812707.0000, dt: 1110.48ms, fracRes: 0.3373, norm(attn): 284.0000, norm(output): 335872.0000, norm(x): 203634.2031, norm(y): 1.1012, norm:2652004.5000, tok/sec: 118032.34, flops:45.99, batch-reuse:1
@ 2313 train 7.6772 , allloss: 8320685.5000, dt: 1119.54ms, fracRes: 0.3398, norm(attn): 276.0000, norm(output): 329728.0000, norm(x): 197233.3438, norm(y): 1.1018, norm:1058208.5000, tok/sec: 117076.46, flops:45.61, batch-reuse:1
@ 2314 train 7.6866 , allloss: 7599237.5000, dt: 1132.71ms, fracRes: 0.3420, norm(attn): 270.0000, norm(output): 317440.0000, norm(x): 189498.0312, norm(y): 1.1021, norm:1694639.7500, tok/sec: 115715.09, flops:45.08, batch-reuse:1
@ 2315 train 7.6405 , allloss: 6928530.0000, dt: 1129.52ms, fracRes: 0.3432, norm(attn): 262.0000, norm(output): 307200.0000, norm(x): 182725.1719, norm(y): 1.1025, norm:838154.2500, tok/sec: 116042.32, flops:45.21, batch-reuse:1
@ 2316 train 7.5389 , allloss: 6059206.0000, dt: 1116.57ms, fracRes: 0.3438, norm(attn): 256.0000, norm(output): 294912.0000, norm(x): 175690.3594, norm(y): 1.1029, norm:1240736.6250, tok/sec: 117388.35, flops:45.73, batch-reuse:1
@ 2317 train 7.6291 , allloss: 5547398.5000, dt: 1126.90ms, fracRes: 0.3442, norm(attn): 255.0000, norm(output): 282624.0000, norm(x): 168775.6875, norm(y): 1.1032, norm:7336747.5000, tok/sec: 116312.28, flops:45.32, batch-reuse:1
@ 2318 train 7.7122 , allloss: 5055112.0000, dt: 1098.79ms, fracRes: 0.3459, norm(attn): 242.0000, norm(output): 276480.0000, norm(x): 162264.2344, norm(y): 1.1036, norm:835745.2500, tok/sec: 119287.30, flops:46.47, batch-reuse:1
@ 2319 train 7.7126 , allloss: 4584359.5000, dt: 1116.90ms, fracRes: 0.3475, norm(attn): 241.0000, norm(output): 264192.0000, norm(x): 155828.3750, norm(y): 1.1040, norm:906343.8125, tok/sec: 117353.09, flops:45.72, batch-reuse:1
@ 2320 train 7.6686 , allloss: 4049429.0000, dt: 1128.13ms, fracRes: 0.3476, norm(attn): 234.0000, norm(output): 249856.0000, norm(x): 149461.6250, norm(y): 1.1045, norm:568837.0625, tok/sec: 116185.44, flops:45.27, batch-reuse:1
@ 2321 train 7.7379 , allloss: 3652738.2500, dt: 1099.58ms, fracRes: 0.3469, norm(attn): 227.0000, norm(output): 241664.0000, norm(x): 143011.5312, norm(y): 1.1049, norm:2115400.5000, tok/sec: 119201.98, flops:46.44, batch-reuse:1
@ 2322 train 7.6573 , allloss: 3189172.7500, dt: 1125.47ms, fracRes: 0.3468, norm(attn): 223.0000, norm(output): 232448.0000, norm(x): 137225.5781, norm(y): 1.1055, norm:2479175.0000, tok/sec: 116459.82, flops:45.37, batch-reuse:1
@ 2323 train 7.6797 , allloss: 2819605.0000, dt: 1112.09ms, fracRes: 0.3478, norm(attn): 209.0000, norm(output): 225280.0000, norm(x): 131275.7500, norm(y): 1.1061, norm:915274.1875, tok/sec: 117860.60, flops:45.92, batch-reuse:1
@ 2324 train 7.6208 , allloss: 2406962.0000, dt: 1113.69ms, fracRes: 0.3504, norm(attn): 208.0000, norm(output): 212992.0000, norm(x): 125844.8750, norm(y): 1.1066, norm:2983910.7500, tok/sec: 117691.25, flops:45.85, batch-reuse:1
@ 2325 train 7.6809 , allloss: 2122667.0000, dt: 1121.02ms, fracRes: 0.3512, norm(attn): 207.0000, norm(output): 210944.0000, norm(x): 121404.7500, norm(y): 1.1071, norm:2195851.2500, tok/sec: 116922.25, flops:45.55, batch-reuse:1
@ 2326 train 7.6974 , allloss: 1905125.3750, dt: 1118.25ms, fracRes: 0.3503, norm(attn): 198.0000, norm(output): 199680.0000, norm(x): 117823.1562, norm(y): 1.1077, norm:809705.9375, tok/sec: 117211.40, flops:45.67, batch-reuse:1
@ 2327 train 7.6143 , allloss: 1744815.6250, dt: 1109.86ms, fracRes: 0.3527, norm(attn): 196.0000, norm(output): 197632.0000, norm(x): 115963.0312, norm(y): 1.1084, norm:632342.5000, tok/sec: 118098.29, flops:46.01, batch-reuse:1
@ 2328 train 7.6442 , allloss: 1628426.0000, dt: 1115.80ms, fracRes: 0.3536, norm(attn): 197.0000, norm(output): 198656.0000, norm(x): 116329.8125, norm(y): 1.1091, norm:779332.0000, tok/sec: 117468.84, flops:45.77, batch-reuse:1
@ 2329 train 8.6291 , allloss: 1775559.3750, dt: 1114.11ms, fracRes: 0.3538, norm(attn): 203.0000, norm(output): 199680.0000, norm(x): 117391.4609, norm(y): 1.1094, norm:432921.4062, tok/sec: 117647.65, flops:45.84, batch-reuse:1
@ 2330 train 7.7179 , allloss: 1596937.5000, dt: 1125.43ms, fracRes: 0.3549, norm(attn): 207.0000, norm(output): 211968.0000, norm(x): 121646.5312, norm(y): 1.1104, norm:1615061.7500, tok/sec: 116463.79, flops:45.37, batch-reuse:1
@ 2331 train 7.7604 , allloss: 1561425.8750, dt: 1129.67ms, fracRes: 0.3544, norm(attn): 209.0000, norm(output): 217088.0000, norm(x): 125368.6172, norm(y): 1.1111, norm:713556.2500, tok/sec: 116026.91, flops:45.20, batch-reuse:1
@ 2332 train 7.6748 , allloss: 1634147.2500, dt: 1128.19ms, fracRes: 0.3539, norm(attn): 220.0000, norm(output): 226304.0000, norm(x): 130655.3672, norm(y): 1.1118, norm:919030.1875, tok/sec: 116179.18, flops:45.26, batch-reuse:1
@ 2333 train 7.6670 , allloss: 1672748.2500, dt: 1133.85ms, fracRes: 0.3545, norm(attn): 224.0000, norm(output): 231424.0000, norm(x): 136022.6094, norm(y): 1.1124, norm:4117028.0000, tok/sec: 115598.96, flops:45.04, batch-reuse:1
@ 2334 train 7.5686 , allloss: 1673324.7500, dt: 1118.55ms, fracRes: 0.3557, norm(attn): 227.0000, norm(output): 245760.0000, norm(x): 141529.7812, norm(y): 1.1131, norm:493636.0312, tok/sec: 117180.27, flops:45.65, batch-reuse:1
@ 2335 train 7.6684 , allloss: 1779143.5000, dt: 1140.02ms, fracRes: 0.3544, norm(attn): 239.0000, norm(output): 258048.0000, norm(x): 148135.3594, norm(y): 1.1137, norm:690759.7500, tok/sec: 114973.67, flops:44.79, batch-reuse:1
@ 2336 train 7.7182 , allloss: 1798591.5000, dt: 1135.92ms, fracRes: 0.3560, norm(attn): 245.0000, norm(output): 266240.0000, norm(x): 154763.5469, norm(y): 1.1144, norm:673403.2500, tok/sec: 115388.60, flops:44.96, batch-reuse:1
@ 2337 train 7.5831 , allloss: 1898854.1250, dt: 1140.58ms, fracRes: 0.3558, norm(attn): 254.0000, norm(output): 280576.0000, norm(x): 162206.1250, norm(y): 1.1152, norm:614106.1250, tok/sec: 114916.67, flops:44.77, batch-reuse:1
@ 2338 train 7.7047 , allloss: 1900605.8750, dt: 1129.24ms, fracRes: 0.3568, norm(attn): 258.0000, norm(output): 296960.0000, norm(x): 169360.7812, norm(y): 1.1159, norm:656477.7500, tok/sec: 116071.03, flops:45.22, batch-reuse:1
@ 2339 train 7.6593 , allloss: 1862422.6250, dt: 1123.07ms, fracRes: 0.3575, norm(attn): 270.0000, norm(output): 309248.0000, norm(x): 177510.9531, norm(y): 1.1166, norm:1895596.6250, tok/sec: 116708.17, flops:45.47, batch-reuse:1
@ 2340 train 7.6292 , allloss: 2154227.2500, dt: 1125.22ms, fracRes: 0.3505, norm(attn): 272.0000, norm(output): 315392.0000, norm(x): 183039.1875, norm(y): 1.1174, norm:22678046.0000, tok/sec: 116486.00, flops:45.38, batch-reuse:1
@ 2341 train 7.6644 , allloss: 2033129.7500, dt: 1109.83ms, fracRes: 0.3565, norm(attn): 284.0000, norm(output): 335872.0000, norm(x): 192627.1875, norm(y): 1.1181, norm:477957.0312, tok/sec: 118100.70, flops:46.01, batch-reuse:1
@ 2342 train 7.6491 , allloss: 2110007.0000, dt: 1120.08ms, fracRes: 0.3569, norm(attn): 290.0000, norm(output): 348160.0000, norm(x): 199999.3281, norm(y): 1.1189, norm:2804169.7500, tok/sec: 117020.16, flops:45.59, batch-reuse:1
@ 2343 train 7.6545 , allloss: 2101241.0000, dt: 1130.65ms, fracRes: 0.3577, norm(attn): 292.0000, norm(output): 362496.0000, norm(x): 206964.1094, norm(y): 1.1197, norm:541445.3125, tok/sec: 115925.96, flops:45.16, batch-reuse:1
@ 2344 train 7.7902 , allloss: 2110199.0000, dt: 1114.21ms, fracRes: 0.3566, norm(attn): 300.0000, norm(output): 370688.0000, norm(x): 213837.7812, norm(y): 1.1204, norm:693014.5000, tok/sec: 117636.42, flops:45.83, batch-reuse:1
@ 2345 train 7.5920 , allloss: 1954773.5000, dt: 1125.15ms, fracRes: 0.3572, norm(attn): 308.0000, norm(output): 391168.0000, norm(x): 221383.5469, norm(y): 1.1212, norm:1142807.0000, tok/sec: 116492.40, flops:45.39, batch-reuse:1
@ 2346 train 7.7180 , allloss: 2032740.3750, dt: 1132.39ms, fracRes: 0.3554, norm(attn): 316.0000, norm(output): 397312.0000, norm(x): 228273.6719, norm(y): 1.1220, norm:522309.7188, tok/sec: 115748.59, flops:45.10, batch-reuse:1
@ 2347 train 7.5966 , allloss: 1797300.2500, dt: 1116.87ms, fracRes: 0.3580, norm(attn): 318.0000, norm(output): 415744.0000, norm(x): 235097.6094, norm(y): 1.1228, norm:685551.1250, tok/sec: 117356.90, flops:45.72, batch-reuse:1
@ 2348 train 7.6884 , allloss: 1767396.8750, dt: 1105.26ms, fracRes: 0.3562, norm(attn): 320.0000, norm(output): 425984.0000, norm(x): 242065.4688, norm(y): 1.1235, norm:570433.3125, tok/sec: 118589.76, flops:46.20, batch-reuse:1
@ 2349 train 7.6681 , allloss: 1710702.7500, dt: 1115.66ms, fracRes: 0.3583, norm(attn): 326.0000, norm(output): 434176.0000, norm(x): 248963.9531, norm(y): 1.1242, norm:1036253.7500, tok/sec: 117483.95, flops:45.77, batch-reuse:1
@ 2350 train 7.6382 , allloss: 2661168.2500, dt: 1115.49ms, fracRes: 0.4260, norm(attn): 318.0000, norm(output): 430080.0000, norm(x): 217870.5938, norm(y): 1.1250, norm:3857075.2500, tok/sec: 117501.40, flops:45.78, batch-reuse:1
@ 2351 train 7.7130 , allloss: 1694520.6250, dt: 1105.52ms, fracRes: 0.3597, norm(attn): 332.0000, norm(output): 458752.0000, norm(x): 258815.3438, norm(y): 1.1257, norm:1564139.0000, tok/sec: 118561.68, flops:46.19, batch-reuse:1
@ 2352 train 7.6924 , allloss: 1787644.5000, dt: 1130.77ms, fracRes: 0.3581, norm(attn): 332.0000, norm(output): 458752.0000, norm(x): 259950.7031, norm(y): 1.1262, norm:1508334.5000, tok/sec: 115913.64, flops:45.16, batch-reuse:1
@ 2353 train 7.7495 , allloss: 1917870.5000, dt: 1121.25ms, fracRes: 0.3583, norm(attn): 332.0000, norm(output): 456704.0000, norm(x): 258285.8750, norm(y): 1.1266, norm:1139330.8750, tok/sec: 116898.41, flops:45.54, batch-reuse:1
@ 2354 train 7.7350 , allloss: 2036341.5000, dt: 1115.53ms, fracRes: 0.3584, norm(attn): 328.0000, norm(output): 456704.0000, norm(x): 254469.4844, norm(y): 1.1269, norm:902350.3125, tok/sec: 117497.56, flops:45.78, batch-reuse:1
@ 2355 train 7.6726 , allloss: 2193941.5000, dt: 1139.43ms, fracRes: 0.3580, norm(attn): 322.0000, norm(output): 446464.0000, norm(x): 249238.0312, norm(y): 1.1271, norm:782314.0625, tok/sec: 115033.26, flops:44.82, batch-reuse:1
@ 2356 train 7.6362 , allloss: 2328487.0000, dt: 1121.98ms, fracRes: 0.3588, norm(attn): 318.0000, norm(output): 428032.0000, norm(x): 242308.0938, norm(y): 1.1273, norm:947537.4375, tok/sec: 116821.63, flops:45.51, batch-reuse:1
@ 2357 train 7.6826 , allloss: 2443152.7500, dt: 1135.04ms, fracRes: 0.3574, norm(attn): 308.0000, norm(output): 413696.0000, norm(x): 234023.1406, norm(y): 1.1276, norm:795611.6875, tok/sec: 115477.65, flops:44.99, batch-reuse:1
@ 2358 train 7.7081 , allloss: 2592890.7500, dt: 1129.90ms, fracRes: 0.3563, norm(attn): 304.0000, norm(output): 401408.0000, norm(x): 226410.4375, norm(y): 1.1277, norm:713049.8750, tok/sec: 116002.97, flops:45.19, batch-reuse:1
@ 2359 train 7.7034 , allloss: 2636484.5000, dt: 1118.36ms, fracRes: 0.3572, norm(attn): 292.0000, norm(output): 385024.0000, norm(x): 217185.7188, norm(y): 1.1277, norm:705008.8750, tok/sec: 117200.03, flops:45.66, batch-reuse:1
@ 2360 train 7.5951 , allloss: 2582901.5000, dt: 1123.35ms, fracRes: 0.3566, norm(attn): 288.0000, norm(output): 364544.0000, norm(x): 208710.2344, norm(y): 1.1277, norm:937729.8750, tok/sec: 116679.86, flops:45.46, batch-reuse:1
@ 2361 train 7.6384 , allloss: 2363621.5000, dt: 1108.02ms, fracRes: 0.3547, norm(attn): 286.0000, norm(output): 358400.0000, norm(x): 200664.9531, norm(y): 1.1276, norm:2622206.7500, tok/sec: 118293.71, flops:46.09, batch-reuse:1
@ 2362 train 7.6646 , allloss: 2136835.0000, dt: 1112.82ms, fracRes: 0.3501, norm(attn): 272.0000, norm(output): 339968.0000, norm(x): 193685.7188, norm(y): 1.1275, norm:2101682.0000, tok/sec: 117783.73, flops:45.89, batch-reuse:1
@ 2363 train 7.6668 , allloss: 2070730.8750, dt: 1105.42ms, fracRes: 0.3491, norm(attn): 264.0000, norm(output): 327680.0000, norm(x): 185879.6406, norm(y): 1.1276, norm:728401.6250, tok/sec: 118572.45, flops:46.20, batch-reuse:1
@ 2364 train 7.8163 , allloss: 2180163.5000, dt: 1112.94ms, fracRes: 0.3487, norm(attn): 258.0000, norm(output): 315392.0000, norm(x): 178097.4062, norm(y): 1.1276, norm:20053948.0000, tok/sec: 117770.89, flops:45.88, batch-reuse:1
@ 2365 train 7.7542 , allloss: 2207598.0000, dt: 1106.36ms, fracRes: 0.3487, norm(attn): 254.0000, norm(output): 299008.0000, norm(x): 171492.6875, norm(y): 1.1279, norm:432233.3125, tok/sec: 118470.90, flops:46.16, batch-reuse:1
@ 2366 train 7.6989 , allloss: 2140807.7500, dt: 1110.22ms, fracRes: 0.3503, norm(attn): 242.0000, norm(output): 292864.0000, norm(x): 164285.1719, norm(y): 1.1281, norm:3389096.5000, tok/sec: 118058.98, flops:46.00, batch-reuse:1
@ 2367 train 7.5842 , allloss: 2148393.5000, dt: 1126.63ms, fracRes: 0.3480, norm(attn): 239.0000, norm(output): 278528.0000, norm(x): 157409.0625, norm(y): 1.1285, norm:583120.4375, tok/sec: 116340.07, flops:45.33, batch-reuse:1
@ 2368 train 7.6240 , allloss: 2068286.5000, dt: 1117.53ms, fracRes: 0.3481, norm(attn): 230.0000, norm(output): 264192.0000, norm(x): 150742.0312, norm(y): 1.1289, norm:566360.0625, tok/sec: 117287.50, flops:45.70, batch-reuse:1
@ 2369 train 7.6114 , allloss: 2022568.7500, dt: 1121.72ms, fracRes: 0.3487, norm(attn): 224.0000, norm(output): 249856.0000, norm(x): 144121.2344, norm(y): 1.1291, norm:623331.5000, tok/sec: 116848.87, flops:45.52, batch-reuse:1
@ 2370 train 7.7399 , allloss: 2020074.8750, dt: 1128.29ms, fracRes: 0.3470, norm(attn): 221.0000, norm(output): 244736.0000, norm(x): 137838.5625, norm(y): 1.1291, norm:424588.7188, tok/sec: 116168.55, flops:45.26, batch-reuse:1
@ 2371 train 7.5655 , allloss: 2074710.2500, dt: 1115.78ms, fracRes: 0.3291, norm(attn): 216.0000, norm(output): 231424.0000, norm(x): 137060.6875, norm(y): 1.1292, norm:67755232.0000, tok/sec: 117470.97, flops:45.77, batch-reuse:1
@ 2372 train 7.5458 , allloss: 1729864.3750, dt: 1116.90ms, fracRes: 0.3463, norm(attn): 208.0000, norm(output): 221184.0000, norm(x): 126293.9453, norm(y): 1.1291, norm:389303.4688, tok/sec: 117353.87, flops:45.72, batch-reuse:1
@ 2373 train 7.6236 , allloss: 1616273.8750, dt: 1130.99ms, fracRes: 0.3465, norm(attn): 203.0000, norm(output): 212992.0000, norm(x): 121428.1016, norm(y): 1.1289, norm:10937132.0000, tok/sec: 115890.97, flops:45.15, batch-reuse:1
@ 2374 train 7.6326 , allloss: 1514751.5000, dt: 1109.55ms, fracRes: 0.3464, norm(attn): 198.0000, norm(output): 202752.0000, norm(x): 117026.6953, norm(y): 1.1290, norm:426022.9688, tok/sec: 118130.52, flops:46.02, batch-reuse:1
@ 2375 train 7.5725 , allloss: 1376776.8750, dt: 1124.70ms, fracRes: 0.3466, norm(attn): 192.0000, norm(output): 196608.0000, norm(x): 113086.5469, norm(y): 1.1291, norm:318559.1250, tok/sec: 116539.96, flops:45.40, batch-reuse:1
@ 2376 train 7.6010 , allloss: 1236141.8750, dt: 1122.02ms, fracRes: 0.3463, norm(attn): 190.0000, norm(output): 191488.0000, norm(x): 108692.0000, norm(y): 1.1291, norm:1383496.7500, tok/sec: 116817.86, flops:45.51, batch-reuse:1
@ 2377 train 7.6988 , allloss: 1167115.6250, dt: 1116.28ms, fracRes: 0.3448, norm(attn): 181.0000, norm(output): 181248.0000, norm(x): 104839.7891, norm(y): 1.1290, norm:487164.8125, tok/sec: 117418.08, flops:45.75, batch-reuse:1
@ 2378 train 7.6619 , allloss: 1064939.3750, dt: 1132.31ms, fracRes: 0.3452, norm(attn): 177.0000, norm(output): 174080.0000, norm(x): 100721.0781, norm(y): 1.1287, norm:1083519.5000, tok/sec: 115756.47, flops:45.10, batch-reuse:1
@ 2379 train 7.6243 , allloss: 990153.6250, dt: 1126.92ms, fracRes: 0.3467, norm(attn): 175.0000, norm(output): 166912.0000, norm(x): 96856.0078, norm(y): 1.1283, norm:531990.4375, tok/sec: 116309.48, flops:45.31, batch-reuse:1
@ 2380 train 7.9440 , allloss: 1096735.0000, dt: 1124.04ms, fracRes: 0.3423, norm(attn): 172.0000, norm(output): 163840.0000, norm(x): 94902.0000, norm(y): 1.1279, norm:1063062.2500, tok/sec: 116608.18, flops:45.43, batch-reuse:1
@ 2381 train 7.6110 , allloss: 1033875.4375, dt: 1105.03ms, fracRes: 0.3429, norm(attn): 172.0000, norm(output): 162816.0000, norm(x): 94627.7578, norm(y): 1.1279, norm:725206.6875, tok/sec: 118614.35, flops:46.21, batch-reuse:1
