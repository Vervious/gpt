Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 16-attentionsink-noreuse-efficientresw
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = VanillaExecute(config)
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = y + machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=True
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True

Warmup steps: 100
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 124,354,560 parameters
num non-decayed parameter tensors: 86, with 112,128 parameters
@ 0 train 11.0245 , allloss: 11.0245, dt: 1883.71ms, fracRes: 0.0063, norm(attn): 0.0422, norm(output): 0.0859, norm(x): 0.0876, norm(y): 0.9995, norm:22.9433, tok/sec: 69581.71, flops:60.94, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6172, 0.3828, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3203, 0.5117, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.1895, 0.2852, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2080, 0.2676, 0.1543, 0.2158, 0.1543, 0.0000, 0.0000, 0.0000],
        [0.1235, 0.1631, 0.1396, 0.1387, 0.1387, 0.2969, 0.0000, 0.0000],
        [0.1670, 0.1455, 0.1348, 0.1729, 0.1484, 0.0718, 0.1602, 0.0000],
        [0.1201, 0.0898, 0.2061, 0.0903, 0.1108, 0.1279, 0.1030, 0.1514]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000],
        [    -0.0000,     -0.4805,     -0.1270,      0.0728,      0.2695,     -0.2578,     -0.4082,      0.0781],
        [    -0.0000,      0.4648,     -0.6484,      0.2539,     -0.1797,     -0.1719,      0.0262,      0.1992],
        [    -0.0000,     -0.3516,      0.0579,     -0.0513,     -0.1094,      0.2119,     -0.1670,     -0.2061],
        [    -0.0000,      0.2480,     -0.2988,      0.0344,     -0.3008,     -0.3164,      0.0923,      0.7461],
        [    -0.0000,      0.2773,      0.1270,      0.1143,      0.1157,      0.8789,      0.8711,      0.2451],
        [     0.0000,     -0.1387,     -0.2178,      0.0305,     -0.1235,     -0.8516,     -0.0447,      0.3164],
        [     0.0000,     -0.2910,      0.5391,     -0.2832,     -0.0801,      0.0620,     -0.1562,      0.2275]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5321],
        [0.3354],
        [0.2262],
        [0.1988],
        [0.1591],
        [0.1479],
        [0.1200],
        [0.1009],
        [0.0968],
        [0.0881],
        [0.0803],
        [0.0724],
        [0.0658],
        [0.0628]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3672, 0.6328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3203, 0.4355, 0.2451, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2314, 0.3145, 0.2598, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.1895, 0.1875, 0.1367, 0.3008, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.1006, 0.2578, 0.2119, 0.1377, 0.1279, 0.0000, 0.0000],
        [0.1250, 0.1953, 0.1543, 0.1060, 0.1250, 0.1436, 0.1504, 0.0000],
        [0.1196, 0.0918, 0.1621, 0.1582, 0.1050, 0.0820, 0.1089, 0.1719]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000],
        [     0.0000,      0.5430,      0.3418,     -0.1934,     -0.2539,      0.5547,      0.4121,     -0.1738],
        [     0.0000,      0.3086,     -0.2676,     -0.0278,      0.0500,      0.6523,      0.1973,     -0.2324],
        [     0.0000,      0.3066,      0.1167,     -0.1758,      0.0330,      0.5156,      0.2021,      0.0957],
        [    -0.0000,      0.0193,      0.0119,     -0.3027,      0.4824,     -0.5508,      0.6602,      0.0811],
        [    -0.0000,     -0.4961,      0.4414,      0.2451,     -0.1846,     -0.2598,     -0.0669,     -0.0043],
        [     0.0000,      0.4414,      0.2051,     -0.1680,     -0.0012,      0.1328,      0.1816,      0.2393],
        [    -0.0000,     -0.2637,      0.3047,      0.2832,     -0.1289,     -0.3770,     -0.0923,      0.3633]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4574],
        [0.3363],
        [0.2265],
        [0.2018],
        [0.1685],
        [0.1372],
        [0.1222],
        [0.1059],
        [0.0924],
        [0.0881],
        [0.0789],
        [0.0739],
        [0.0654],
        [0.0627]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4531, 0.5469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.1934, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2422, 0.1631, 0.2471, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1953, 0.1621, 0.2471, 0.1592, 0.2354, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.2061, 0.1367, 0.1426, 0.1338, 0.2188, 0.0000, 0.0000],
        [0.1143, 0.1196, 0.1631, 0.1270, 0.1621, 0.1631, 0.1504, 0.0000],
        [0.1494, 0.0698, 0.1279, 0.1553, 0.1738, 0.0903, 0.1079, 0.1250]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1875,     -0.5195,     -0.2002,      0.1221,      0.2480,      0.5898,     -0.3828],
        [    -0.0000,     -0.4082,      0.5781,      0.2559,      0.2188,      0.6562,      0.3398,      0.4199],
        [     0.0000,     -0.3945,      0.0184,      0.3594,      0.0540,      0.0588,     -0.4980,      0.1387],
        [    -0.0000,     -0.1836,      0.2363,     -0.2041,      0.1875,     -0.1895,     -0.0884,     -0.1416],
        [     0.0000,      0.2354,     -0.1709,     -0.1309,     -0.1953,      0.2949,      0.3711,      0.6328],
        [     0.0000,      0.0474,      0.3574,      0.1025,      0.3477,      0.3594,      0.2754,     -0.1045],
        [     0.0000,     -0.7656,     -0.1592,      0.0371,      0.1514,     -0.5078,     -0.3242,     -0.1787]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5046],
        [0.3109],
        [0.2344],
        [0.1982],
        [0.1683],
        [0.1281],
        [0.1245],
        [0.1125],
        [0.1022],
        [0.0860],
        [0.0786],
        [0.0734],
        [0.0723],
        [0.0665]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.4980, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3203, 0.3848, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2598, 0.1650, 0.3379, 0.2373, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2178, 0.1660, 0.1875, 0.2480, 0.1807, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.1738, 0.1543, 0.1729, 0.1865, 0.1318, 0.0000, 0.0000],
        [0.1299, 0.1924, 0.1172, 0.1270, 0.1006, 0.2197, 0.1128, 0.0000],
        [0.1182, 0.1138, 0.1069, 0.1025, 0.1416, 0.0894, 0.1758, 0.1514]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000],
        [    -0.0000,     -0.0096,     -0.2812,      0.0231,      0.0096,      0.5117,     -0.2656,      0.6875],
        [    -0.0000,      0.1807,     -0.0884,     -0.7422,      0.2451,     -0.4727,     -0.3184,     -0.0513],
        [     0.0000,     -0.4531,      0.2598,     -0.0918,     -0.2061,     -0.2070,      0.1895,     -0.2930],
        [    -0.0000,     -0.2676,     -0.1475,      0.1328,     -0.1875,     -0.2676,      0.4902,      0.0908],
        [    -0.0000,     -0.0374,     -0.1582,     -0.0442,      0.0352,     -0.3145,      0.3633,     -0.0081],
        [    -0.0000,      0.3926,     -0.1060,     -0.0255,     -0.2598,      0.5234,     -0.1406,     -0.8984],
        [    -0.0000,     -0.0376,     -0.1021,     -0.1426,      0.1826,     -0.2773,      0.3945,      0.2451]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4925],
        [0.3309],
        [0.2441],
        [0.1949],
        [0.1658],
        [0.1320],
        [0.1213],
        [0.1066],
        [0.0942],
        [0.0870],
        [0.0705],
        [0.0749],
        [0.0672],
        [0.0613]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3984, 0.6016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.4238, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.2480, 0.2188, 0.2617, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.1924, 0.2031, 0.1328, 0.2559, 0.0000, 0.0000, 0.0000],
        [0.1245, 0.1064, 0.2734, 0.1865, 0.2188, 0.0903, 0.0000, 0.0000],
        [0.1777, 0.1631, 0.1240, 0.1230, 0.1338, 0.1289, 0.1494, 0.0000],
        [0.1338, 0.1060, 0.0923, 0.1260, 0.1855, 0.0947, 0.1250, 0.1367]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000],
        [     0.0000,      0.4160,     -0.2988,     -0.0581,      0.2295,      0.4316,      0.2930,      0.4746],
        [    -0.0000,      0.3379,     -0.1030,      0.0286,      0.2852,      0.0337,     -0.1514,     -0.1436],
        [     0.0000,     -0.0918,     -0.2178,     -0.0369,     -0.1436,     -0.3965,      0.1641,      0.0908],
        [     0.0000,     -0.1182,     -0.0649,     -0.4902,      0.1680,     -0.5430,      0.0811,     -0.4355],
        [     0.0000,     -0.1582,      0.7891,      0.4023,      0.5664,     -0.3203,     -0.0109,      0.1025],
        [    -0.0000,     -0.0815,     -0.3574,     -0.3672,     -0.2793,     -0.3223,     -0.1709,      0.3652],
        [     0.0000,     -0.2314,     -0.3730,     -0.0596,      0.3301,     -0.3438,     -0.0674,      0.0233]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4922],
        [0.3460],
        [0.2477],
        [0.1915],
        [0.1617],
        [0.1466],
        [0.1194],
        [0.1015],
        [0.0966],
        [0.0868],
        [0.0765],
        [0.0723],
        [0.0653],
        [0.0582]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5977, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3906, 0.2354, 0.3750, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2480, 0.1660, 0.4004, 0.1855, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.1572, 0.2148, 0.1494, 0.3105, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.1660, 0.2441, 0.1787, 0.1592, 0.1006, 0.0000, 0.0000],
        [0.1641, 0.1128, 0.0972, 0.1270, 0.1338, 0.1777, 0.1875, 0.0000],
        [0.1040, 0.1309, 0.1206, 0.1543, 0.1396, 0.0947, 0.1206, 0.1357]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000],
        [    -0.0000,     -0.3926,      0.0442,     -0.3652,     -0.0608,      0.2656,      0.5000,      0.5391],
        [    -0.0000,     -0.5039,     -0.0420,      0.1582,     -0.1060,      0.1025,      0.4160,      0.6523],
        [    -0.0000,     -0.4023,      0.4805,     -0.2891,     -0.2617,     -0.7148,      0.3828,      0.1777],
        [    -0.0000,     -0.0674,      0.2471,     -0.1177,      0.6133,     -0.1777,      0.5195,      0.0176],
        [    -0.0000,      0.0991,      0.4824,      0.1719,      0.0557,     -0.4023,     -0.0781,     -0.0204],
        [    -0.0000,     -0.3730,     -0.5195,     -0.2539,     -0.2021,      0.0850,      0.1387,      0.0327],
        [    -0.0000,      0.2275,      0.1465,      0.3945,      0.2910,     -0.0957,      0.1475,      0.2637]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5054],
        [0.3252],
        [0.2356],
        [0.2164],
        [0.1654],
        [0.1545],
        [0.1191],
        [0.1088],
        [0.0977],
        [0.0887],
        [0.0822],
        [0.0782],
        [0.0684],
        [0.0636]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.6523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.4434, 0.2422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2090, 0.1826, 0.2871, 0.3223, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1943, 0.2080, 0.3066, 0.1406, 0.1504, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.2393, 0.1455, 0.1025, 0.2256, 0.1240, 0.0000, 0.0000],
        [0.1602, 0.2305, 0.1094, 0.1152, 0.1094, 0.1172, 0.1582, 0.0000],
        [0.1118, 0.1230, 0.1025, 0.1387, 0.1426, 0.1162, 0.1279, 0.1367]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [     0.0000,      0.6211,     -0.1514,     -0.3926,      0.1328,      0.2324,     -0.2617,      0.9453],
        [     0.0000,      0.3398,     -0.2637,     -0.1157,     -0.1689,      0.1865,      0.2324,      0.1270],
        [    -0.0000,     -0.1338,      0.3164,      0.4336,     -0.3613,      0.0320,     -0.3652,      0.0197],
        [     0.0000,      0.0684,      0.4570,     -0.3262,     -0.2559,     -0.2393,     -0.4844,     -0.1494],
        [     0.0000,      0.3789,     -0.1172,     -0.4668,      0.3184,     -0.2773,     -0.2852,      0.4902],
        [     0.0000,      0.3613,     -0.3828,     -0.3301,     -0.3828,     -0.3164,     -0.0124,      0.4883],
        [     0.0000,      0.0947,     -0.0854,      0.2158,      0.2461,      0.0383,      0.1377,      0.2041]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4868],
        [0.3351],
        [0.2489],
        [0.2037],
        [0.1648],
        [0.1322],
        [0.1154],
        [0.1093],
        [0.1002],
        [0.0912],
        [0.0855],
        [0.0792],
        [0.0727],
        [0.0657]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4434, 0.5586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3516, 0.3008, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3281, 0.2344, 0.1934, 0.2451, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2031, 0.2559, 0.1865, 0.1436, 0.2119, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.1621, 0.1099, 0.1816, 0.1943, 0.1699, 0.0000, 0.0000],
        [0.1807, 0.1167, 0.1338, 0.1338, 0.1338, 0.1602, 0.1406, 0.0000],
        [0.1309, 0.0898, 0.1357, 0.1445, 0.1089, 0.1328, 0.1221, 0.1357]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000],
        [    -0.0000,      0.2305,     -0.3691,      0.3262,     -0.3535,      0.3008,     -0.1729,     -0.0908],
        [     0.0000,     -0.1562,     -0.0072,     -0.5820,     -0.0771,      0.0811,     -0.4199,     -0.3438],
        [     0.0000,     -0.3359,     -0.5273,     -0.2910,      0.1138,     -0.2207,      0.0981,      0.2695],
        [     0.0000,      0.2314,     -0.0859,     -0.3457,      0.0449,      0.1758,     -0.3887,      0.1484],
        [     0.0000,     -0.1108,     -0.5000,      0.0031,      0.0698,     -0.0654,     -0.4043,     -0.2285],
        [     0.0000,     -0.4355,     -0.2988,     -0.3008,     -0.2988,     -0.1196,     -0.2480,      0.1426],
        [     0.0000,     -0.3770,      0.0398,      0.0991,     -0.1807,      0.0134,     -0.0674,      0.0364]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4842],
        [0.3475],
        [0.2520],
        [0.1925],
        [0.1683],
        [0.1436],
        [0.1233],
        [0.1094],
        [0.0931],
        [0.0884],
        [0.0806],
        [0.0718],
        [0.0719],
        [0.0608]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.5547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4102, 0.2148, 0.3750, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.2852, 0.2188, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2002, 0.1699, 0.1416, 0.2988, 0.1895, 0.0000, 0.0000, 0.0000],
        [0.2148, 0.1621, 0.2070, 0.1592, 0.1465, 0.1113, 0.0000, 0.0000],
        [0.1504, 0.1650, 0.0864, 0.1177, 0.1709, 0.1240, 0.1855, 0.0000],
        [0.1196, 0.2139, 0.0986, 0.0972, 0.1719, 0.1016, 0.0854, 0.1118]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2158,      0.0046,      0.1279,      0.3164,      0.0238,     -0.0352,     -0.1167],
        [     0.0000,     -0.6445,     -0.0933,     -0.1025,      0.1030,      0.1543,     -0.1099,     -0.1270],
        [     0.0000,      0.1182,     -0.1514,     -0.0530,      0.3203,     -0.0175,      0.0305,      0.0947],
        [     0.0000,     -0.1670,     -0.3477,      0.3984,     -0.0579,     -0.3066,     -0.0294,     -0.2637],
        [     0.0000,     -0.2832,     -0.0381,     -0.3008,     -0.3809,     -0.6562,     -0.2910,     -0.4473],
        [     0.0000,      0.0947,     -0.5508,     -0.2402,      0.1328,     -0.1885,      0.2139,      0.0080],
        [     0.0000,      0.5820,     -0.1934,     -0.2070,      0.3652,     -0.1621,     -0.3320,     -0.0645]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4666],
        [0.3354],
        [0.2377],
        [0.1966],
        [0.1669],
        [0.1315],
        [0.1115],
        [0.1071],
        [0.0921],
        [0.0940],
        [0.0799],
        [0.0747],
        [0.0698],
        [0.0644]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5898, 0.4102, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2891, 0.3281, 0.3828, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.3008, 0.2314, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2402, 0.2031, 0.1592, 0.2227, 0.1748, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.1709, 0.1172, 0.1787, 0.1328, 0.2305, 0.0000, 0.0000],
        [0.1270, 0.1436, 0.1299, 0.1904, 0.1147, 0.1865, 0.1084, 0.0000],
        [0.1396, 0.1982, 0.0845, 0.1069, 0.1357, 0.1187, 0.1357, 0.0806]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,     -0.3613,      0.1201,     -0.5195,     -0.1396,     -0.1357,     -0.7070,     -0.2168],
        [    -0.0000,      0.1289,      0.2812,      0.7227,     -0.2520,      0.2715,      0.0398,     -0.0060],
        [    -0.0000,      0.4863,      0.2236,      0.4219,      0.1445,      0.6211,      0.6172,      0.0447],
        [    -0.0000,     -0.1660,     -0.4121,     -0.0786,     -0.3203,     -0.2891,      0.1670,     -0.8555],
        [    -0.0000,      0.0131,     -0.3672,      0.0581,     -0.2393,      0.3125,      0.0111,     -0.2129],
        [    -0.0000,      0.1187,      0.0172,      0.4023,     -0.1040,      0.3809,     -0.1631,     -0.0654],
        [    -0.0000,      0.3496,     -0.5000,     -0.2656,     -0.0271,     -0.1621,     -0.0309,     -0.5508]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5199],
        [0.3319],
        [0.2465],
        [0.2153],
        [0.1782],
        [0.1503],
        [0.1265],
        [0.1204],
        [0.0995],
        [0.0986],
        [0.0881],
        [0.0815],
        [0.0784],
        [0.0640]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4609, 0.5391, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.3203, 0.4629, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.3477, 0.2793, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.1865, 0.2637, 0.1729, 0.2275, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.1904, 0.2061, 0.0869, 0.1436, 0.2402, 0.0000, 0.0000],
        [0.1416, 0.1133, 0.1426, 0.1367, 0.1699, 0.1484, 0.1475, 0.0000],
        [0.0972, 0.0957, 0.1001, 0.1133, 0.1406, 0.1729, 0.1504, 0.1299]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,      0.1582,      0.4062,      0.0649,      0.2598,      0.0991,      0.3418,     -0.1982],
        [     0.0000,      0.3789,      0.7500,      0.6055,      0.5781,      0.7617,      0.8242,      0.8242],
        [     0.0000,      0.5430,      0.3223,     -0.1719,      0.2578,      0.1533,     -0.2695,      0.0835],
        [    -0.0000,      0.2236,      0.5703,      0.1455,      0.4219,      0.5352,      0.1250,     -0.1738],
        [     0.0000,      0.3555,      0.4336,     -0.4258,      0.0732,      0.5898,     -0.1699,      0.5312],
        [    -0.0000,     -0.2275,      0.0073,     -0.0415,      0.1777,      0.0454,      0.0366,      0.2119],
        [    -0.0000,     -0.0127,      0.0298,      0.1533,      0.3730,      0.5742,      0.4375,      0.2871]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5368],
        [0.3428],
        [0.2622],
        [0.2006],
        [0.1612],
        [0.1462],
        [0.1152],
        [0.1014],
        [0.0933],
        [0.0869],
        [0.0752],
        [0.0732],
        [0.0670],
        [0.0591]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4434, 0.5586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.2695, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.2373, 0.2002, 0.3438, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.1079, 0.2168, 0.3711, 0.1445, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.1445, 0.1582, 0.3047, 0.0593, 0.1934, 0.0000, 0.0000],
        [0.1250, 0.0850, 0.1562, 0.2412, 0.1035, 0.1226, 0.1670, 0.0000],
        [0.1133, 0.1235, 0.1216, 0.2344, 0.0806, 0.1152, 0.0796, 0.1328]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,      0.2275,      0.0471,      0.4531,     -0.0157,     -0.0957,      0.1562,     -0.2031],
        [    -0.0000,     -0.2373,      0.1348,      0.5312,      0.2266,      0.2559,      0.2158,      0.4141],
        [    -0.0000,      0.0767,     -0.0928,      0.4453,     -0.5273,     -0.0908,     -0.1650,      0.2324],
        [    -0.0000,     -0.3926,      0.3047,      0.8438,     -0.0996,      0.2383,      0.1367,     -0.0552],
        [    -0.0000,      0.0295,      0.1240,      0.7734,     -0.8594,      0.3223,      0.0854,      0.3398],
        [    -0.0000,     -0.3887,      0.2207,      0.6562,     -0.1924,     -0.0219,      0.2852,      0.3926],
        [    -0.0000,      0.0850,      0.0713,      0.7266,     -0.3438,      0.0161,     -0.3555,      0.1572]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5050],
        [0.3179],
        [0.2402],
        [0.1854],
        [0.1615],
        [0.1385],
        [0.1266],
        [0.1119],
        [0.1009],
        [0.0892],
        [0.0834],
        [0.0781],
        [0.0706],
        [0.0670]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Temp:0.0002 Lowell:0.0002 tanker:0.0002 Drama:0.0002 Synt:0.0001dit:0.0001 Powder:0.0002 compilation:0.0001)
 compilation
------
		( Lowell:0.0002 tanker:0.0002 Drama:0.0002 Synt:0.0001dit:0.0001 Powder:0.0002 compilation:0.0001 muzzle:0.0002)
 muzzleGh hypotTotal acre hypot decap hypot decap helium architectures Finding248 Finding decap
@ 1 train 10.6079 , allloss: 10.6079, dt: 1347.69ms, fracRes: 0.0063, norm(attn): 0.0432, norm(output): 0.0879, norm(x): 0.0900, norm(y): 0.9995, norm:16.8441, tok/sec: 97256.87, flops:85.18, batch-reuse:1
@ 2 train 10.2331 , allloss: 10.2331, dt: 667.34ms, fracRes: 0.0063, norm(attn): 0.0466, norm(output): 0.0933, norm(x): 0.0945, norm(y): 0.9996, norm:10.6872, tok/sec: 196408.49, flops:172.03, batch-reuse:1
@ 3 train 9.9849 , allloss: 9.9849, dt: 671.89ms, fracRes: 0.0063, norm(attn): 0.0503, norm(output): 0.0991, norm(x): 0.1009, norm(y): 0.9997, norm:6.8967, tok/sec: 195079.34, flops:170.86, batch-reuse:1
@ 4 train 9.8312 , allloss: 9.8312, dt: 672.75ms, fracRes: 0.0062, norm(attn): 0.0518, norm(output): 0.1040, norm(x): 0.1071, norm(y): 0.9997, norm:4.2068, tok/sec: 194829.00, flops:170.64, batch-reuse:1
@ 5 train 9.7782 , allloss: 9.7782, dt: 673.13ms, fracRes: 0.0062, norm(attn): 0.0554, norm(output): 0.1113, norm(x): 0.1149, norm(y): 0.9998, norm:2.9988, tok/sec: 194718.80, flops:170.55, batch-reuse:1
@ 6 train 9.6585 , allloss: 9.6585, dt: 669.73ms, fracRes: 0.0060, norm(attn): 0.0588, norm(output): 0.1245, norm(x): 0.1247, norm(y): 0.9998, norm:2.7446, tok/sec: 195709.57, flops:171.41, batch-reuse:1
@ 7 train 9.6281 , allloss: 9.6281, dt: 671.90ms, fracRes: 0.0059, norm(attn): 0.0630, norm(output): 0.1338, norm(x): 0.1360, norm(y): 0.9999, norm:2.4121, tok/sec: 195075.60, flops:170.86, batch-reuse:1
@ 8 train 9.6067 , allloss: 9.6067, dt: 676.13ms, fracRes: 0.0057, norm(attn): 0.0664, norm(output): 0.1465, norm(x): 0.1486, norm(y): 1.0000, norm:2.3392, tok/sec: 193855.58, flops:169.79, batch-reuse:1
@ 9 train 9.5216 , allloss: 9.5216, dt: 676.40ms, fracRes: 0.0055, norm(attn): 0.0703, norm(output): 0.1582, norm(x): 0.1616, norm(y): 1.0000, norm:2.2844, tok/sec: 193780.14, flops:169.72, batch-reuse:1
@ 10 train 9.4665 , allloss: 9.4665, dt: 679.43ms, fracRes: 0.0053, norm(attn): 0.0737, norm(output): 0.1719, norm(x): 0.1740, norm(y): 1.0000, norm:2.1824, tok/sec: 192914.92, flops:168.97, batch-reuse:1
@ 11 train 9.4445 , allloss: 9.4445, dt: 674.77ms, fracRes: 0.0051, norm(attn): 0.0771, norm(output): 0.1826, norm(x): 0.1849, norm(y): 1.0001, norm:2.0779, tok/sec: 194247.10, flops:170.13, batch-reuse:1
@ 12 train 9.3394 , allloss: 9.3394, dt: 672.56ms, fracRes: 0.0049, norm(attn): 0.0781, norm(output): 0.1895, norm(x): 0.1936, norm(y): 1.0001, norm:2.1878, tok/sec: 194884.12, flops:170.69, batch-reuse:1
@ 13 train 9.2583 , allloss: 9.2583, dt: 678.55ms, fracRes: 0.0047, norm(attn): 0.0786, norm(output): 0.1992, norm(x): 0.1998, norm(y): 1.0001, norm:2.1679, tok/sec: 193165.04, flops:169.18, batch-reuse:1
@ 14 train 9.1601 , allloss: 9.1601, dt: 680.98ms, fracRes: 0.0046, norm(attn): 0.0781, norm(output): 0.2021, norm(x): 0.2037, norm(y): 1.0001, norm:2.0864, tok/sec: 192476.30, flops:168.58, batch-reuse:1
@ 15 train 9.0816 , allloss: 9.0816, dt: 679.18ms, fracRes: 0.0044, norm(attn): 0.0771, norm(output): 0.2031, norm(x): 0.2054, norm(y): 1.0001, norm:1.9230, tok/sec: 192985.21, flops:169.03, batch-reuse:1
@ 16 train 9.0087 , allloss: 9.0087, dt: 673.42ms, fracRes: 0.0042, norm(attn): 0.0762, norm(output): 0.2041, norm(x): 0.2073, norm(y): 1.0001, norm:1.7550, tok/sec: 194636.76, flops:170.47, batch-reuse:1
@ 17 train 8.9337 , allloss: 8.9337, dt: 674.45ms, fracRes: 0.0041, norm(attn): 0.0776, norm(output): 0.2148, norm(x): 0.2156, norm(y): 1.0001, norm:1.8485, tok/sec: 194339.46, flops:170.21, batch-reuse:1
@ 18 train 8.8576 , allloss: 8.8576, dt: 688.37ms, fracRes: 0.0040, norm(attn): 0.0811, norm(output): 0.2305, norm(x): 0.2307, norm(y): 1.0002, norm:1.8359, tok/sec: 190409.82, flops:166.77, batch-reuse:1
@ 19 train 8.7159 , allloss: 8.7159, dt: 676.94ms, fracRes: 0.0039, norm(attn): 0.0850, norm(output): 0.2373, norm(x): 0.2424, norm(y): 1.0002, norm:1.8436, tok/sec: 193624.67, flops:169.59, batch-reuse:1
@ 20 train 8.6543 , allloss: 8.6543, dt: 677.93ms, fracRes: 0.0039, norm(attn): 0.0859, norm(output): 0.2490, norm(x): 0.2506, norm(y): 1.0002, norm:1.6524, tok/sec: 193340.85, flops:169.34, batch-reuse:1
@ 21 train 8.5604 , allloss: 8.5604, dt: 682.23ms, fracRes: 0.0039, norm(attn): 0.0859, norm(output): 0.2520, norm(x): 0.2570, norm(y): 1.0002, norm:1.6538, tok/sec: 192122.29, flops:168.27, batch-reuse:1
@ 22 train 8.4707 , allloss: 8.4707, dt: 679.64ms, fracRes: 0.0040, norm(attn): 0.0884, norm(output): 0.2676, norm(x): 0.2711, norm(y): 1.0002, norm:1.5246, tok/sec: 192854.08, flops:168.91, batch-reuse:1
@ 23 train 8.4741 , allloss: 8.4741, dt: 678.27ms, fracRes: 0.0041, norm(attn): 0.0913, norm(output): 0.2812, norm(x): 0.2841, norm(y): 1.0002, norm:1.4219, tok/sec: 193245.02, flops:169.25, batch-reuse:1
@ 24 train 8.4193 , allloss: 8.4193, dt: 692.37ms, fracRes: 0.0041, norm(attn): 0.0928, norm(output): 0.2910, norm(x): 0.2935, norm(y): 1.0002, norm:1.4216, tok/sec: 189308.75, flops:165.81, batch-reuse:1
@ 25 train 8.1628 , allloss: 8.1628, dt: 684.74ms, fracRes: 0.0041, norm(attn): 0.0933, norm(output): 0.2969, norm(x): 0.2998, norm(y): 1.0002, norm:1.4170, tok/sec: 191419.76, flops:167.66, batch-reuse:1
@ 26 train 8.1652 , allloss: 8.1652, dt: 692.95ms, fracRes: 0.0040, norm(attn): 0.0942, norm(output): 0.3027, norm(x): 0.3059, norm(y): 1.0002, norm:1.3476, tok/sec: 189150.08, flops:165.67, batch-reuse:1
@ 27 train 8.0678 , allloss: 8.0678, dt: 685.04ms, fracRes: 0.0039, norm(attn): 0.0952, norm(output): 0.3125, norm(x): 0.3134, norm(y): 1.0002, norm:1.2039, tok/sec: 191335.15, flops:167.58, batch-reuse:1
@ 28 train 7.9934 , allloss: 7.9934, dt: 684.91ms, fracRes: 0.0039, norm(attn): 0.0957, norm(output): 0.3145, norm(x): 0.3200, norm(y): 1.0002, norm:1.0430, tok/sec: 191371.31, flops:167.61, batch-reuse:1
@ 29 train 7.9759 , allloss: 7.9759, dt: 688.29ms, fracRes: 0.0039, norm(attn): 0.0957, norm(output): 0.3164, norm(x): 0.3226, norm(y): 1.0002, norm:0.9038, tok/sec: 190431.13, flops:166.79, batch-reuse:1
@ 30 train 7.8098 , allloss: 7.8098, dt: 689.59ms, fracRes: 0.0037, norm(attn): 0.0942, norm(output): 0.3223, norm(x): 0.3223, norm(y): 1.0002, norm:0.9342, tok/sec: 190072.89, flops:166.48, batch-reuse:1
@ 31 train 7.8071 , allloss: 7.8071, dt: 694.97ms, fracRes: 0.0037, norm(attn): 0.0942, norm(output): 0.3164, norm(x): 0.3212, norm(y): 1.0002, norm:0.8964, tok/sec: 188600.20, flops:165.19, batch-reuse:1
@ 32 train 7.7422 , allloss: 7.7422, dt: 688.83ms, fracRes: 0.0037, norm(attn): 0.0928, norm(output): 0.3145, norm(x): 0.3152, norm(y): 1.0002, norm:1.2557, tok/sec: 190280.78, flops:166.66, batch-reuse:1
@ 33 train 7.6505 , allloss: 7.6505, dt: 681.32ms, fracRes: 0.0038, norm(attn): 0.0938, norm(output): 0.3223, norm(x): 0.3240, norm(y): 1.0002, norm:1.4252, tok/sec: 192379.65, flops:168.50, batch-reuse:1
@ 34 train 7.6087 , allloss: 7.6087, dt: 696.27ms, fracRes: 0.0038, norm(attn): 0.0933, norm(output): 0.3223, norm(x): 0.3251, norm(y): 1.0002, norm:0.7481, tok/sec: 188249.72, flops:164.88, batch-reuse:1
@ 35 train 7.5749 , allloss: 7.5749, dt: 698.99ms, fracRes: 0.0040, norm(attn): 0.0879, norm(output): 0.3145, norm(x): 0.3171, norm(y): 1.0002, norm:1.2672, tok/sec: 187517.20, flops:164.24, batch-reuse:1
@ 36 train 7.4705 , allloss: 7.4705, dt: 672.27ms, fracRes: 0.0041, norm(attn): 0.0908, norm(output): 0.3223, norm(x): 0.3263, norm(y): 1.0002, norm:0.9555, tok/sec: 194969.20, flops:170.76, batch-reuse:1
@ 37 train 7.4791 , allloss: 7.4791, dt: 683.35ms, fracRes: 0.0041, norm(attn): 0.0957, norm(output): 0.3418, norm(x): 0.3419, norm(y): 1.0002, norm:0.7935, tok/sec: 191807.51, flops:168.00, batch-reuse:1
@ 38 train 7.4121 , allloss: 7.4121, dt: 695.93ms, fracRes: 0.0044, norm(attn): 0.0933, norm(output): 0.3398, norm(x): 0.3381, norm(y): 1.0001, norm:1.1366, tok/sec: 188341.94, flops:164.96, batch-reuse:1
@ 39 train 7.4283 , allloss: 7.4283, dt: 674.98ms, fracRes: 0.0047, norm(attn): 0.0942, norm(output): 0.3418, norm(x): 0.3409, norm(y): 1.0001, norm:0.6371, tok/sec: 194187.20, flops:170.08, batch-reuse:1
@ 40 train 7.4380 , allloss: 7.4380, dt: 690.02ms, fracRes: 0.0049, norm(attn): 0.0884, norm(output): 0.3320, norm(x): 0.3324, norm(y): 1.0001, norm:0.8698, tok/sec: 189953.63, flops:166.37, batch-reuse:1
@ 41 train 7.3658 , allloss: 7.3658, dt: 687.50ms, fracRes: 0.0050, norm(attn): 0.0850, norm(output): 0.3223, norm(x): 0.3252, norm(y): 1.0001, norm:0.5100, tok/sec: 190650.05, flops:166.98, batch-reuse:1
@ 42 train 7.3426 , allloss: 7.3426, dt: 690.21ms, fracRes: 0.0053, norm(attn): 0.0801, norm(output): 0.3125, norm(x): 0.3155, norm(y): 1.0001, norm:0.9632, tok/sec: 189901.66, flops:166.33, batch-reuse:1
@ 43 train 7.3176 , allloss: 7.3176, dt: 692.94ms, fracRes: 0.0054, norm(attn): 0.0786, norm(output): 0.3105, norm(x): 0.3127, norm(y): 1.0001, norm:0.8015, tok/sec: 189153.66, flops:165.67, batch-reuse:1
@ 44 train 7.3221 , allloss: 7.3221, dt: 694.72ms, fracRes: 0.0051, norm(attn): 0.0806, norm(output): 0.3164, norm(x): 0.3213, norm(y): 1.0001, norm:0.6441, tok/sec: 188669.20, flops:165.25, batch-reuse:1
@ 45 train 7.2643 , allloss: 7.2643, dt: 692.54ms, fracRes: 0.0051, norm(attn): 0.0771, norm(output): 0.3105, norm(x): 0.3144, norm(y): 1.0000, norm:3.4473, tok/sec: 189263.19, flops:165.77, batch-reuse:1
@ 46 train 7.2619 , allloss: 7.2619, dt: 693.39ms, fracRes: 0.0039, norm(attn): 0.0913, norm(output): 0.3418, norm(x): 0.3430, norm(y): 1.0001, norm:0.9230, tok/sec: 189030.60, flops:165.56, batch-reuse:1
@ 47 train 7.1884 , allloss: 7.1884, dt: 693.31ms, fracRes: 0.0039, norm(attn): 0.0942, norm(output): 0.3535, norm(x): 0.3568, norm(y): 1.0001, norm:0.5826, tok/sec: 189052.25, flops:165.58, batch-reuse:1
@ 48 train 7.1903 , allloss: 7.1903, dt: 692.63ms, fracRes: 0.0041, norm(attn): 0.0967, norm(output): 0.3652, norm(x): 0.3669, norm(y): 1.0002, norm:0.8975, tok/sec: 189238.95, flops:165.75, batch-reuse:1
@ 49 train 7.1865 , allloss: 7.1865, dt: 693.23ms, fracRes: 0.0045, norm(attn): 0.0923, norm(output): 0.3516, norm(x): 0.3573, norm(y): 1.0001, norm:0.6976, tok/sec: 189075.01, flops:165.60, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0309, 0.9688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.8281, 0.0850, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.3945, 0.2520, 0.2676, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.5000, 0.1357, 0.1699, 0.0947, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.2471, 0.1426, 0.1270, 0.0977, 0.3145, 0.0000, 0.0000],
        [0.1182, 0.2275, 0.1279, 0.2002, 0.1118, 0.0593, 0.1553, 0.0000],
        [0.0981, 0.1758, 0.1602, 0.0815, 0.1172, 0.0996, 0.0903, 0.1777]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0048,      0.0017,      0.0017,     -0.0005,      0.0008,      0.0002,      0.0005],
        [     0.0005,      3.4375,     -0.2236,      0.0474,      0.1377,     -0.2480,     -0.7227,      0.5039],
        [     0.0001,      2.2344,     -0.0359,      0.0894,     -0.2412,     -0.3340,     -0.2734,      0.4980],
        [     0.0001,      1.5000,      1.0469,      1.1094,      0.1816,      0.7070,     -0.0664,     -0.2354],
        [     0.0002,      1.6172,      0.3066,      0.5352,     -0.0530,     -0.1260,      0.2188,      0.7773],
        [    -0.0000,      1.2500,      0.6992,      0.5820,      0.3184,      1.4922,      0.7031,      0.4043],
        [     0.0001,      0.6562,      0.0791,      0.5273,     -0.0549,     -0.6875,      0.2715,      0.4805],
        [     0.0002,      0.5820,      0.4922,     -0.1865,      0.1797,      0.0140,     -0.0820,      0.5938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0224],
        [0.0833],
        [0.0798],
        [0.0973],
        [0.0853],
        [0.1101],
        [0.0975],
        [0.0897],
        [0.0823],
        [0.0667],
        [0.0775],
        [0.0656],
        [0.0626],
        [0.0573]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.7656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.4512, 0.4746, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0625, 0.3105, 0.4531, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0586, 0.2793, 0.2852, 0.2188, 0.1592, 0.0000, 0.0000, 0.0000],
        [0.1055, 0.1553, 0.2100, 0.1777, 0.2559, 0.0977, 0.0000, 0.0000],
        [0.0664, 0.2207, 0.2520, 0.2158, 0.0889, 0.1108, 0.0466, 0.0000],
        [0.0986, 0.2852, 0.1689, 0.1279, 0.1367, 0.0854, 0.0698, 0.0282]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0016,      0.0007,      0.0002,      0.0025,      0.0005,      0.0016,     -0.0063],
        [    -0.0003,      1.1875,      1.2188,      0.8125,      1.2969,      0.3594,      0.9648,     -1.2969],
        [    -0.0003,      1.8125,      1.8672,      1.1406,      1.3516,      1.0156,      0.3262,     -1.6641],
        [    -0.0002,      1.6016,      1.9844,      1.0234,      1.1953,      0.7305,      0.8008,     -1.5781],
        [     0.0001,      1.5625,      1.5781,      1.3203,      0.9961,      0.8359,      0.6680,      0.5078],
        [    -0.0002,      0.3828,      0.6836,      0.5195,      0.8828,     -0.0796,      0.8281,     -1.7500],
        [     0.0002,      1.2031,      1.3281,      1.1797,      0.2930,      0.5117,     -0.3535,      1.9062],
        [    -0.0004,      1.0625,      0.5430,      0.2578,      0.3301,     -0.1406,     -0.3438,     -1.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2122],
        [0.1003],
        [0.0935],
        [0.0719],
        [0.0807],
        [0.0626],
        [0.0987],
        [0.0726],
        [0.0958],
        [0.0910],
        [0.0704],
        [0.0814],
        [0.0638],
        [0.0407]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4902, 0.5078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6367, 0.2168, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5742, 0.2080, 0.1226, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1108, 0.1914, 0.3047, 0.2793, 0.1143, 0.0000, 0.0000, 0.0000],
        [0.1924, 0.2090, 0.1006, 0.1240, 0.2432, 0.1318, 0.0000, 0.0000],
        [0.1157, 0.1221, 0.1973, 0.2148, 0.1138, 0.1572, 0.0796, 0.0000],
        [0.1167, 0.0240, 0.0176, 0.0106, 0.0493, 0.0173, 0.7422, 0.0217]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0018,     -0.0026,     -0.0036,     -0.0003,     -0.0031,      0.0014,     -0.0035],
        [    -0.0001,      0.0361,     -0.1094,     -0.4297,     -0.0654,     -0.5625,     -0.7188,     -0.1240],
        [    -0.0003,     -1.0781,     -1.4688,     -1.8047,     -0.4375,     -1.5703,      0.7070,     -1.4062],
        [    -0.0003,     -1.0156,     -1.5391,     -1.7891,     -0.4023,     -1.6875,      0.5703,     -1.3906],
        [     0.0001,      0.5430,      1.0078,      0.9258,      0.0312,      0.0084,     -1.8047,      0.9727],
        [    -0.0001,      0.0820,     -0.6484,     -0.4395,      0.2334,     -0.3770,     -1.2734,     -0.4785],
        [     0.0002,      0.0549,      0.5352,      0.6211,     -0.0146,      0.3047,     -0.3711,      0.5820],
        [    -0.0003,     -1.5781,     -1.8906,     -2.4062,     -0.8594,     -1.9062,      1.8516,     -1.6797]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6592],
        [0.6250],
        [0.5734],
        [0.2288],
        [0.2192],
        [0.0917],
        [0.1458],
        [0.1410],
        [0.1306],
        [0.0939],
        [0.1031],
        [0.1040],
        [0.1012],
        [0.0575]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3223, 0.6758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3848, 0.2949, 0.3184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2930, 0.3730, 0.1738, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.3164, 0.0752, 0.1768, 0.3027, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.2217, 0.1025, 0.1436, 0.2598, 0.1216, 0.0000, 0.0000],
        [0.1357, 0.0781, 0.2246, 0.1309, 0.0623, 0.1270, 0.2412, 0.0000],
        [0.1396, 0.0845, 0.0835, 0.0413, 0.0874, 0.0562, 0.4473, 0.0608]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0011,     -0.0021,     -0.0024,      0.0001,     -0.0024,      0.0020,     -0.0022],
        [     0.0001,      0.7422,     -0.4062,      0.2285,      0.8789,      0.1582,     -0.6172,     -0.4512],
        [    -0.0002,     -0.2656,     -0.1875,     -0.8008,     -0.3457,     -0.8008,      0.9375,     -0.5195],
        [    -0.0001,      0.2373,     -0.5234,     -0.6094,      0.2949,     -0.4160,      0.3633,     -0.8203],
        [     0.0003,      0.8945,     -0.5430,      0.3105,      0.8477,      0.7656,     -1.1328,     -0.5742],
        [     0.0000,      0.3945,     -0.3750,     -0.0381,      0.5547,     -0.2061,     -0.1348,     -0.4355],
        [    -0.0001,     -0.5586,      0.5000,     -0.0410,     -0.7812,     -0.0718,      0.5703,      0.7227],
        [    -0.0002,     -0.5000,     -0.5156,     -1.2109,     -0.4648,     -0.9062,      1.1641,     -0.8320]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5075],
        [0.4535],
        [0.3840],
        [0.1700],
        [0.1971],
        [0.0822],
        [0.1178],
        [0.1137],
        [0.1244],
        [0.0987],
        [0.0923],
        [0.0862],
        [0.0723],
        [0.0448]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.7969, 0.0830, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.5742, 0.0723, 0.1846, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4473, 0.1045, 0.1904, 0.1221, 0.1357, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.1455, 0.1152, 0.1069, 0.1992, 0.0908, 0.0000, 0.0000],
        [0.0767, 0.2090, 0.1270, 0.1709, 0.1846, 0.1855, 0.0466, 0.0000],
        [0.0366, 0.2988, 0.0186, 0.0703, 0.3711, 0.1797, 0.0134, 0.0099]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0002,     -0.0017,     -0.0012,      0.0012,     -0.0008,      0.0014,     -0.0021],
        [    -0.0002,     -0.9766,     -1.0156,     -1.1406,     -0.6250,     -1.4531,      1.5391,     -0.7578],
        [    -0.0002,      1.8750,     -0.3867,      0.7188,      2.0156,      1.2891,     -0.6328,     -0.9180],
        [    -0.0002,      1.2344,     -0.8398,      0.0947,      1.4922,      0.6172,      0.1138,     -1.2031],
        [    -0.0001,     -1.4531,     -0.8555,     -1.2969,     -1.1953,     -1.6719,      1.7188,     -0.5469],
        [    -0.0001,     -0.8555,     -1.0859,     -1.1641,     -0.5391,     -1.3203,      1.0625,     -0.8906],
        [     0.0001,      1.0000,      0.5078,      0.8008,      0.8789,      0.8867,     -0.4980,      0.2100],
        [    -0.0002,      2.1094,     -0.6797,      0.6562,      2.3125,      1.5938,     -1.0078,     -1.3047]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5386],
        [0.2941],
        [0.2550],
        [0.2231],
        [0.2083],
        [0.0925],
        [0.0851],
        [0.0891],
        [0.0810],
        [0.0875],
        [0.0578],
        [0.0550],
        [0.0638],
        [0.0537]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4922, 0.5078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.6523, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.5195, 0.0879, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2080, 0.1748, 0.2158, 0.1924, 0.2080, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.1865, 0.1216, 0.1318, 0.2490, 0.1416, 0.0000, 0.0000],
        [0.1123, 0.1279, 0.0728, 0.0679, 0.2188, 0.0791, 0.3203, 0.0000],
        [0.0830, 0.2012, 0.0217, 0.0376, 0.3867, 0.1309, 0.1240, 0.0152]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0025,      0.0014,      0.0022,      0.0028,      0.0015,      0.0040,      0.0006],
        [     0.0001,      0.0315,      0.0928,      0.1001,      0.2275,     -0.1128,      1.5000,     -0.0757],
        [    -0.0001,      0.9414,     -0.9961,     -0.4727,      1.5000,      0.5352,      0.5859,     -1.3359],
        [    -0.0000,      0.7188,     -1.0625,     -0.6250,      1.2891,      0.3066,      1.0625,     -1.4141],
        [     0.0002,     -0.1758,      0.0354,     -0.0771,      0.0001,     -0.4062,      1.9141,     -0.1416],
        [     0.0001,      0.0938,     -0.3320,     -0.2500,      0.3828,     -0.1826,      1.3984,     -0.5391],
        [     0.0001,      0.1328,     -0.4316,     -0.5039,      0.6641,     -0.3535,      1.0469,     -0.6094],
        [    -0.0001,      0.8867,     -1.3359,     -0.7891,      1.5391,      0.4551,      0.4023,     -1.6953]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4342],
        [0.1748],
        [0.1375],
        [0.1279],
        [0.1180],
        [0.0877],
        [0.0600],
        [0.0532],
        [0.0456],
        [0.0428],
        [0.0356],
        [0.0337],
        [0.0358],
        [0.0362]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3730, 0.6250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1787, 0.5117, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.3945, 0.2324, 0.2422, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1123, 0.1328, 0.3027, 0.2402, 0.2119, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.1680, 0.1641, 0.1514, 0.2949, 0.1328, 0.0000, 0.0000],
        [0.0364, 0.0693, 0.0654, 0.0574, 0.2520, 0.0554, 0.4648, 0.0000],
        [0.0386, 0.0996, 0.0645, 0.0674, 0.3027, 0.0942, 0.2695, 0.0640]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0020,      0.0047,      0.0045,      0.0035,      0.0025,      0.0079,      0.0050],
        [     0.0001,      0.5156,      0.7812,      0.6953,      0.6562,      0.3652,      1.3594,      0.7539],
        [    -0.0002,      1.0547,      0.5430,      0.6055,      2.1562,      0.9805,      2.0156,      0.5312],
        [    -0.0002,      1.1016,      0.5742,      0.6133,      2.1094,      0.9258,      2.0156,      0.5312],
        [     0.0001,      0.1650,      0.9922,      0.7617,      0.6328,      0.0320,      2.0625,      1.0078],
        [    -0.0000,      0.6406,      0.6211,      0.5391,      1.2031,      0.4082,      1.5859,      0.5625],
        [    -0.0002,      0.6445,      0.5859,      0.4531,      1.9297,      0.4180,      2.5469,      0.6133],
        [    -0.0003,      0.9492,      0.5078,      0.5508,      2.0469,      0.8906,      1.9453,      0.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3968],
        [0.1546],
        [0.1190],
        [0.0882],
        [0.0777],
        [0.0335],
        [0.0326],
        [0.0319],
        [0.0240],
        [0.0216],
        [0.0173],
        [0.0164],
        [0.0198],
        [0.0111]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3281, 0.6719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.5312, 0.2988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.4062, 0.2373, 0.2188, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.2598, 0.2100, 0.2012, 0.2168, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.2305, 0.1729, 0.1592, 0.2031, 0.1367, 0.0000, 0.0000],
        [0.0791, 0.2422, 0.0991, 0.0967, 0.2500, 0.1206, 0.1118, 0.0000],
        [0.0688, 0.2119, 0.1021, 0.0967, 0.2148, 0.1069, 0.1084, 0.0903]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0035,      0.0041,      0.0041,      0.0046,      0.0042,      0.0040,      0.0038],
        [    -0.0001,      0.7148,      1.0469,      1.0078,      0.4336,      0.6758,      0.7305,      0.9336],
        [    -0.0002,      1.1406,      0.5664,      0.4863,      1.1016,      0.4922,      0.5469,      0.3867],
        [    -0.0002,      1.0781,      0.5391,      0.4570,      1.0312,      0.4434,      0.5195,      0.3730],
        [    -0.0002,      0.8164,      0.6016,      0.5586,      0.6367,      0.4395,      0.5000,      0.5000],
        [    -0.0002,      0.8633,      0.5742,      0.4980,      0.7383,      0.3457,      0.5039,      0.4375],
        [    -0.0002,      1.1172,      0.2227,      0.1992,      1.1484,      0.4180,      0.3438,      0.1475],
        [    -0.0002,      1.1250,      0.3965,      0.3418,      1.1406,      0.4434,      0.4551,      0.2754]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3177],
        [0.1761],
        [0.1415],
        [0.0996],
        [0.0924],
        [0.0743],
        [0.0658],
        [0.0570],
        [0.0537],
        [0.0436],
        [0.0440],
        [0.0414],
        [0.0378],
        [0.0349]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.7344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.3555, 0.5195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.2363, 0.3438, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.2031, 0.2617, 0.2490, 0.1787, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.1582, 0.2188, 0.2129, 0.1641, 0.1807, 0.0000, 0.0000],
        [0.0615, 0.1299, 0.1846, 0.1797, 0.1348, 0.1523, 0.1572, 0.0000],
        [0.0452, 0.1089, 0.1553, 0.1533, 0.1201, 0.1328, 0.1387, 0.1445]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0051,     0.0058,     0.0060,     0.0058,     0.0060,     0.0061,     0.0061],
        [    0.0003,     1.0156,     1.0234,     1.0000,     0.6367,     0.8008,     0.7734,     0.8633],
        [    0.0006,     1.0391,     1.4141,     1.3906,     1.1016,     1.2266,     1.2422,     1.2969],
        [    0.0006,     1.0547,     1.4375,     1.4141,     1.1484,     1.2578,     1.2812,     1.3359],
        [    0.0005,     0.6406,     0.8906,     0.8438,     0.5156,     0.6484,     0.6602,     0.7188],
        [    0.0005,     0.8945,     1.2188,     1.1875,     0.9258,     1.0234,     1.0547,     1.1016],
        [    0.0006,     0.7461,     1.0938,     1.0703,     0.7891,     0.9062,     0.9375,     0.9883],
        [    0.0006,     0.8789,     1.2344,     1.2266,     0.9805,     1.0781,     1.1250,     1.1641]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2535],
        [0.1049],
        [0.0703],
        [0.0841],
        [0.0573],
        [0.0503],
        [0.0395],
        [0.0465],
        [0.0329],
        [0.0413],
        [0.0284],
        [0.0262],
        [0.0319],
        [0.0272]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.8828, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0518, 0.5469, 0.4004, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0364, 0.3867, 0.2949, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0312, 0.3047, 0.2295, 0.2207, 0.2139, 0.0000, 0.0000, 0.0000],
        [0.0243, 0.2451, 0.1914, 0.1846, 0.1777, 0.1768, 0.0000, 0.0000],
        [0.0210, 0.2061, 0.1641, 0.1582, 0.1523, 0.1523, 0.1465, 0.0000],
        [0.0179, 0.1777, 0.1436, 0.1387, 0.1328, 0.1328, 0.1279, 0.1289]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0033,     0.0038,     0.0036,     0.0033,     0.0034,     0.0033,     0.0034],
        [    0.0000,     2.0000,     1.5156,     1.4688,     1.4531,     1.4297,     1.3594,     1.3516],
        [    0.0000,     2.3594,     2.0469,     1.9922,     1.9531,     1.9375,     1.8984,     1.8984],
        [    0.0000,     2.3594,     2.0938,     2.0469,     2.0000,     2.0000,     1.9609,     1.9609],
        [    0.0000,     2.2812,     1.9922,     1.9609,     1.9297,     1.9219,     1.8750,     1.8750],
        [    0.0000,     2.3125,     2.0625,     2.0312,     1.9844,     1.9844,     1.9453,     1.9453],
        [    0.0000,     2.2812,     2.0625,     2.0156,     1.9844,     1.9844,     1.9453,     1.9453],
        [    0.0000,     2.2969,     2.0781,     2.0469,     2.0000,     2.0000,     1.9688,     1.9688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2610],
        [0.1527],
        [0.1114],
        [0.1088],
        [0.0814],
        [0.0725],
        [0.0610],
        [0.0602],
        [0.0497],
        [0.0513],
        [0.0423],
        [0.0391],
        [0.0398],
        [0.0361]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4355, 0.5625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.3262, 0.4492, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.2207, 0.3086, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1123, 0.1680, 0.2314, 0.2490, 0.2383, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.1338, 0.1875, 0.2021, 0.1924, 0.2041, 0.0000, 0.0000],
        [0.0669, 0.1108, 0.1553, 0.1680, 0.1592, 0.1689, 0.1709, 0.0000],
        [0.0549, 0.0938, 0.1328, 0.1436, 0.1357, 0.1445, 0.1455, 0.1484]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0044,     0.0055,     0.0057,     0.0056,     0.0057,     0.0058,     0.0058],
        [    0.0001,     0.2559,     0.4570,     0.5234,     0.4961,     0.5469,     0.5508,     0.5703],
        [    0.0002,     0.3633,     0.6836,     0.7578,     0.7109,     0.7695,     0.7812,     0.8008],
        [    0.0002,     0.4570,     0.7930,     0.8672,     0.8203,     0.8789,     0.8867,     0.9062],
        [    0.0002,     0.4023,     0.7227,     0.7969,     0.7500,     0.8047,     0.8164,     0.8359],
        [    0.0002,     0.4922,     0.8281,     0.9062,     0.8555,     0.9141,     0.9219,     0.9414],
        [    0.0002,     0.5000,     0.8398,     0.9180,     0.8672,     0.9258,     0.9336,     0.9531],
        [    0.0002,     0.5391,     0.8828,     0.9609,     0.9062,     0.9688,     0.9766,     0.9961]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4510],
        [0.2411],
        [0.1562],
        [0.1249],
        [0.0932],
        [0.0767],
        [0.0634],
        [0.0562],
        [0.0478],
        [0.0440],
        [0.0384],
        [0.0348],
        [0.0324],
        [0.0296]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9375, 0.0608, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7773, 0.0757, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5625, 0.0767, 0.1494, 0.2109, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4141, 0.0659, 0.1289, 0.1807, 0.2090, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.0562, 0.1099, 0.1533, 0.1777, 0.2109, 0.0000, 0.0000],
        [0.2197, 0.0469, 0.0918, 0.1279, 0.1475, 0.1748, 0.1924, 0.0000],
        [0.1689, 0.0396, 0.0776, 0.1079, 0.1240, 0.1465, 0.1611, 0.1748]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0004,      0.0007,      0.0012,      0.0013,      0.0015,      0.0016,      0.0017],
        [     0.0001,     -2.7344,     -2.1250,     -1.7891,     -1.6250,     -1.4453,     -1.3438,     -1.2578],
        [     0.0001,     -2.3281,     -1.6641,     -1.3125,     -1.1562,     -0.9727,     -0.8672,     -0.7773],
        [     0.0001,     -1.9922,     -1.3203,     -0.9805,     -0.8281,     -0.6484,     -0.5508,     -0.4629],
        [     0.0001,     -1.8359,     -1.1719,     -0.8320,     -0.6836,     -0.5078,     -0.4082,     -0.3242],
        [     0.0001,     -1.6484,     -0.9766,     -0.6406,     -0.4980,     -0.3242,     -0.2285,     -0.1445],
        [     0.0001,     -1.5391,     -0.8711,     -0.5391,     -0.3984,     -0.2266,     -0.1328,     -0.0508],
        [     0.0001,     -1.4453,     -0.7773,     -0.4473,     -0.3086,     -0.1387,     -0.0459,      0.0352]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9417],
        [0.7760],
        [0.5610],
        [0.4202],
        [0.2961],
        [0.2236],
        [0.1715],
        [0.1398],
        [0.1136],
        [0.0971],
        [0.0824],
        [0.0718],
        [0.0638],
        [0.0569]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(
:0.0884
:0.0854
:0.0854
:0.0854
:0.0859
:0.0835
:0.0835
:0.0835)


------
		(
:0.0854
:0.0854
:0.0854
:0.0859
:0.0835
:0.0835
:0.0835
:0.0835)
















@ 50 train 7.2803 , allloss: 7.2803, dt: 1116.52ms, fracRes: 0.0045, norm(attn): 0.1030, norm(output): 0.3828, norm(x): 0.3869, norm(y): 1.0002, norm:0.6358, tok/sec: 117393.44, flops:102.82, batch-reuse:1
@ 51 train 7.3354 , allloss: 7.3354, dt: 691.23ms, fracRes: 0.0045, norm(attn): 0.1011, norm(output): 0.3867, norm(x): 0.3897, norm(y): 1.0002, norm:0.8624, tok/sec: 189621.38, flops:166.08, batch-reuse:1
@ 52 train 7.1295 , allloss: 7.1295, dt: 689.20ms, fracRes: 0.0046, norm(attn): 0.1011, norm(output): 0.3906, norm(x): 0.3941, norm(y): 1.0002, norm:0.7531, tok/sec: 190180.27, flops:166.57, batch-reuse:1
@ 53 train 7.0815 , allloss: 7.0815, dt: 693.96ms, fracRes: 0.0046, norm(attn): 0.1045, norm(output): 0.4043, norm(x): 0.4058, norm(y): 1.0002, norm:0.6760, tok/sec: 188875.19, flops:165.43, batch-reuse:1
@ 54 train 7.1997 , allloss: 7.1997, dt: 676.14ms, fracRes: 0.0045, norm(attn): 0.1006, norm(output): 0.4023, norm(x): 0.4018, norm(y): 1.0002, norm:1.0432, tok/sec: 193854.21, flops:169.79, batch-reuse:1
@ 55 train 7.2562 , allloss: 7.2562, dt: 691.61ms, fracRes: 0.0041, norm(attn): 0.1123, norm(output): 0.4160, norm(x): 0.4243, norm(y): 1.0002, norm:0.9434, tok/sec: 189517.58, flops:165.99, batch-reuse:1
@ 56 train 7.0399 , allloss: 7.0399, dt: 701.70ms, fracRes: 0.0038, norm(attn): 0.1094, norm(output): 0.4102, norm(x): 0.4160, norm(y): 1.0002, norm:0.7695, tok/sec: 186792.21, flops:163.60, batch-reuse:1
@ 57 train 6.9551 , allloss: 6.9551, dt: 701.36ms, fracRes: 0.0038, norm(attn): 0.1123, norm(output): 0.4180, norm(x): 0.4223, norm(y): 1.0002, norm:0.9155, tok/sec: 186881.55, flops:163.68, batch-reuse:1
@ 58 train 7.0064 , allloss: 7.0064, dt: 703.55ms, fracRes: 0.0036, norm(attn): 0.1143, norm(output): 0.4355, norm(x): 0.4358, norm(y): 1.0002, norm:0.7979, tok/sec: 186299.87, flops:163.17, batch-reuse:1
@ 59 train 6.7867 , allloss: 6.7867, dt: 701.63ms, fracRes: 0.0036, norm(attn): 0.1167, norm(output): 0.4336, norm(x): 0.4359, norm(y): 1.0002, norm:0.6437, tok/sec: 186810.94, flops:163.62, batch-reuse:1
@ 60 train 6.9910 , allloss: 6.9910, dt: 705.25ms, fracRes: 0.0036, norm(attn): 0.1172, norm(output): 0.4375, norm(x): 0.4401, norm(y): 1.0002, norm:0.8203, tok/sec: 185851.63, flops:162.78, batch-reuse:1
@ 61 train 6.9245 , allloss: 6.9245, dt: 694.95ms, fracRes: 0.0036, norm(attn): 0.1089, norm(output): 0.4355, norm(x): 0.4346, norm(y): 1.0002, norm:0.8422, tok/sec: 188605.57, flops:165.19, batch-reuse:1
@ 62 train 6.9698 , allloss: 6.9698, dt: 703.37ms, fracRes: 0.0036, norm(attn): 0.1187, norm(output): 0.4453, norm(x): 0.4558, norm(y): 1.0002, norm:1.2311, tok/sec: 186348.11, flops:163.21, batch-reuse:1
@ 63 train 6.9410 , allloss: 6.9410, dt: 692.50ms, fracRes: 0.0037, norm(attn): 0.1245, norm(output): 0.4609, norm(x): 0.4644, norm(y): 1.0002, norm:0.9528, tok/sec: 189274.59, flops:165.78, batch-reuse:1
@ 64 train 6.9305 , allloss: 6.9305, dt: 692.56ms, fracRes: 0.0035, norm(attn): 0.1113, norm(output): 0.4414, norm(x): 0.4448, norm(y): 1.0001, norm:1.2169, tok/sec: 189257.72, flops:165.76, batch-reuse:1
@ 65 train 6.9894 , allloss: 6.9894, dt: 681.52ms, fracRes: 0.0036, norm(attn): 0.1147, norm(output): 0.4570, norm(x): 0.4592, norm(y): 1.0001, norm:0.7584, tok/sec: 192324.39, flops:168.45, batch-reuse:1
@ 66 train 7.0290 , allloss: 7.0290, dt: 693.67ms, fracRes: 0.0036, norm(attn): 0.1177, norm(output): 0.4805, norm(x): 0.4800, norm(y): 1.0001, norm:0.9047, tok/sec: 188953.29, flops:165.50, batch-reuse:1
@ 67 train 6.9147 , allloss: 6.9147, dt: 694.52ms, fracRes: 0.0036, norm(attn): 0.1104, norm(output): 0.4727, norm(x): 0.4724, norm(y): 1.0001, norm:0.9534, tok/sec: 188722.63, flops:165.29, batch-reuse:1
@ 68 train 6.9305 , allloss: 6.9305, dt: 683.90ms, fracRes: 0.0036, norm(attn): 0.1104, norm(output): 0.4707, norm(x): 0.4709, norm(y): 1.0001, norm:0.5655, tok/sec: 191654.59, flops:167.86, batch-reuse:1
@ 69 train 6.8244 , allloss: 6.8244, dt: 689.95ms, fracRes: 0.0037, norm(attn): 0.1177, norm(output): 0.4727, norm(x): 0.4725, norm(y): 1.0001, norm:0.8929, tok/sec: 189973.98, flops:166.39, batch-reuse:1
@ 70 train 6.8185 , allloss: 6.8185, dt: 696.26ms, fracRes: 0.0038, norm(attn): 0.1172, norm(output): 0.4707, norm(x): 0.4722, norm(y): 1.0001, norm:0.7163, tok/sec: 188250.30, flops:164.88, batch-reuse:1
@ 71 train 6.7772 , allloss: 6.7772, dt: 692.45ms, fracRes: 0.0038, norm(attn): 0.1089, norm(output): 0.4531, norm(x): 0.4579, norm(y): 1.0000, norm:0.5670, tok/sec: 189287.76, flops:165.79, batch-reuse:1
@ 72 train 6.8276 , allloss: 6.8276, dt: 690.78ms, fracRes: 0.0036, norm(attn): 0.1118, norm(output): 0.4727, norm(x): 0.4721, norm(y): 1.0000, norm:0.7432, tok/sec: 189744.03, flops:166.19, batch-reuse:1
@ 73 train 6.9274 , allloss: 6.9274, dt: 694.07ms, fracRes: 0.0036, norm(attn): 0.1138, norm(output): 0.4785, norm(x): 0.4818, norm(y): 1.0000, norm:0.6151, tok/sec: 188844.44, flops:165.40, batch-reuse:1
@ 74 train 6.8400 , allloss: 6.8400, dt: 690.96ms, fracRes: 0.0036, norm(attn): 0.1133, norm(output): 0.4766, norm(x): 0.4794, norm(y): 1.0000, norm:0.6827, tok/sec: 189695.06, flops:166.15, batch-reuse:1
@ 75 train 7.4818 , allloss: 7.4818, dt: 692.24ms, fracRes: 0.0036, norm(attn): 0.1221, norm(output): 0.5039, norm(x): 0.5109, norm(y): 1.0000, norm:0.8908, tok/sec: 189345.19, flops:165.84, batch-reuse:1
@ 76 train 6.8060 , allloss: 6.8060, dt: 683.37ms, fracRes: 0.0034, norm(attn): 0.1133, norm(output): 0.4902, norm(x): 0.4903, norm(y): 1.0000, norm:0.8079, tok/sec: 191802.23, flops:167.99, batch-reuse:1
@ 77 train 7.6337 , allloss: 7.6337, dt: 694.42ms, fracRes: 0.0039, norm(attn): 0.1206, norm(output): 0.4902, norm(x): 0.4951, norm(y): 0.9999, norm:2.2278, tok/sec: 188751.66, flops:165.32, batch-reuse:1
@ 78 train 7.0801 , allloss: 7.0801, dt: 696.48ms, fracRes: 0.0038, norm(attn): 0.1138, norm(output): 0.4766, norm(x): 0.4810, norm(y): 0.9999, norm:1.0292, tok/sec: 188191.59, flops:164.83, batch-reuse:1
@ 79 train 6.7730 , allloss: 6.7730, dt: 693.46ms, fracRes: 0.0037, norm(attn): 0.1030, norm(output): 0.4707, norm(x): 0.4733, norm(y): 0.9999, norm:1.1559, tok/sec: 189012.15, flops:165.55, batch-reuse:1
@ 80 train 6.8038 , allloss: 6.8038, dt: 695.95ms, fracRes: 0.0037, norm(attn): 0.1260, norm(output): 0.5039, norm(x): 0.5120, norm(y): 0.9999, norm:1.2891, tok/sec: 188336.46, flops:164.96, batch-reuse:1
@ 81 train 6.7994 , allloss: 6.7994, dt: 688.34ms, fracRes: 0.0036, norm(attn): 0.1240, norm(output): 0.5312, norm(x): 0.5286, norm(y): 0.9999, norm:0.7237, tok/sec: 190416.35, flops:166.78, batch-reuse:1
@ 82 train 6.7991 , allloss: 6.7991, dt: 693.47ms, fracRes: 0.0035, norm(attn): 0.1152, norm(output): 0.5312, norm(x): 0.5358, norm(y): 0.9998, norm:0.8757, tok/sec: 189008.51, flops:165.54, batch-reuse:1
@ 83 train 6.7495 , allloss: 6.7495, dt: 689.13ms, fracRes: 0.0038, norm(attn): 0.1191, norm(output): 0.5430, norm(x): 0.5426, norm(y): 0.9998, norm:0.7574, tok/sec: 190199.94, flops:166.59, batch-reuse:1
@ 84 train 6.7809 , allloss: 6.7809, dt: 703.95ms, fracRes: 0.0041, norm(attn): 0.1211, norm(output): 0.5430, norm(x): 0.5451, norm(y): 0.9998, norm:0.5778, tok/sec: 186196.13, flops:163.08, batch-reuse:1
@ 85 train 6.7197 , allloss: 6.7197, dt: 697.62ms, fracRes: 0.0043, norm(attn): 0.1172, norm(output): 0.5430, norm(x): 0.5445, norm(y): 0.9998, norm:0.7177, tok/sec: 187883.90, flops:164.56, batch-reuse:1
@ 86 train 6.6766 , allloss: 6.6766, dt: 713.09ms, fracRes: 0.0045, norm(attn): 0.1187, norm(output): 0.5547, norm(x): 0.5583, norm(y): 0.9997, norm:0.5407, tok/sec: 183807.71, flops:160.99, batch-reuse:1
@ 87 train 6.7438 , allloss: 6.7438, dt: 691.93ms, fracRes: 0.0042, norm(attn): 0.1147, norm(output): 0.5430, norm(x): 0.5469, norm(y): 0.9997, norm:0.7222, tok/sec: 189430.86, flops:165.91, batch-reuse:1
@ 88 train 6.7021 , allloss: 6.7021, dt: 693.51ms, fracRes: 0.0042, norm(attn): 0.1177, norm(output): 0.5469, norm(x): 0.5494, norm(y): 0.9997, norm:0.5343, tok/sec: 188997.14, flops:165.53, batch-reuse:1
@ 89 train 6.6446 , allloss: 6.6446, dt: 694.78ms, fracRes: 0.0041, norm(attn): 0.1162, norm(output): 0.5469, norm(x): 0.5485, norm(y): 0.9997, norm:0.5008, tok/sec: 188652.56, flops:165.23, batch-reuse:1
@ 90 train 6.6614 , allloss: 6.6614, dt: 688.22ms, fracRes: 0.0044, norm(attn): 0.1152, norm(output): 0.5469, norm(x): 0.5516, norm(y): 0.9996, norm:0.5846, tok/sec: 190450.00, flops:166.81, batch-reuse:1
@ 91 train 6.6336 , allloss: 6.6336, dt: 699.57ms, fracRes: 0.0042, norm(attn): 0.1172, norm(output): 0.5508, norm(x): 0.5495, norm(y): 0.9996, norm:0.5477, tok/sec: 187360.63, flops:164.10, batch-reuse:1
@ 92 train 6.6118 , allloss: 6.6118, dt: 703.98ms, fracRes: 0.0042, norm(attn): 0.1211, norm(output): 0.5508, norm(x): 0.5540, norm(y): 0.9996, norm:0.5849, tok/sec: 186186.86, flops:163.07, batch-reuse:1
@ 93 train 6.5936 , allloss: 6.5936, dt: 695.83ms, fracRes: 0.0040, norm(attn): 0.1260, norm(output): 0.5625, norm(x): 0.5602, norm(y): 0.9996, norm:0.4231, tok/sec: 188366.72, flops:164.98, batch-reuse:1
@ 94 train 6.8914 , allloss: 6.8914, dt: 682.50ms, fracRes: 0.0039, norm(attn): 0.1357, norm(output): 0.5781, norm(x): 0.5801, norm(y): 0.9996, norm:0.8069, tok/sec: 192045.85, flops:168.20, batch-reuse:1
@ 95 train 6.6261 , allloss: 6.6261, dt: 682.10ms, fracRes: 0.0036, norm(attn): 0.1196, norm(output): 0.5352, norm(x): 0.5407, norm(y): 0.9995, norm:0.7734, tok/sec: 192160.50, flops:168.30, batch-reuse:1
@ 96 train 6.5330 , allloss: 6.5330, dt: 702.45ms, fracRes: 0.0035, norm(attn): 0.1484, norm(output): 0.5742, norm(x): 0.5836, norm(y): 0.9996, norm:0.9018, tok/sec: 186592.00, flops:163.43, batch-reuse:1
@ 97 train 6.5694 , allloss: 6.5694, dt: 700.42ms, fracRes: 0.0036, norm(attn): 0.1348, norm(output): 0.5664, norm(x): 0.5709, norm(y): 0.9994, norm:0.7702, tok/sec: 187132.76, flops:163.90, batch-reuse:1
@ 98 train 6.6178 , allloss: 6.6178, dt: 691.85ms, fracRes: 0.0033, norm(attn): 0.1455, norm(output): 0.6211, norm(x): 0.6165, norm(y): 0.9995, norm:0.5666, tok/sec: 189450.11, flops:165.93, batch-reuse:1
@ 99 train 6.5265 , allloss: 6.5265, dt: 691.65ms, fracRes: 0.0032, norm(attn): 0.1523, norm(output): 0.6211, norm(x): 0.6242, norm(y): 0.9995, norm:0.6483, tok/sec: 189506.60, flops:165.98, batch-reuse:1
@ 100 train 6.5628 , allloss: 6.5628, dt: 687.03ms, fracRes: 0.0034, norm(attn): 0.1533, norm(output): 0.6094, norm(x): 0.6162, norm(y): 0.9995, norm:0.7067, tok/sec: 190781.51, flops:167.10, batch-reuse:1
@ 101 train 6.3909 , allloss: 6.3909, dt: 696.71ms, fracRes: 0.0033, norm(attn): 0.1621, norm(output): 0.6289, norm(x): 0.6347, norm(y): 0.9996, norm:0.5704, tok/sec: 188128.93, flops:164.77, batch-reuse:1
@ 102 train 6.4877 , allloss: 6.4877, dt: 697.43ms, fracRes: 0.0032, norm(attn): 0.1680, norm(output): 0.6406, norm(x): 0.6463, norm(y): 0.9996, norm:0.4736, tok/sec: 187935.22, flops:164.60, batch-reuse:1
@ 103 train 6.4763 , allloss: 6.4763, dt: 699.38ms, fracRes: 0.0034, norm(attn): 0.1680, norm(output): 0.6328, norm(x): 0.6406, norm(y): 0.9995, norm:0.5979, tok/sec: 187410.45, flops:164.14, batch-reuse:1
@ 104 train 6.5738 , allloss: 6.5738, dt: 695.65ms, fracRes: 0.0034, norm(attn): 0.1602, norm(output): 0.6328, norm(x): 0.6424, norm(y): 0.9995, norm:0.4948, tok/sec: 188416.50, flops:165.03, batch-reuse:1
@ 105 train 6.5429 , allloss: 6.5429, dt: 689.45ms, fracRes: 0.0036, norm(attn): 0.1641, norm(output): 0.6484, norm(x): 0.6559, norm(y): 0.9995, norm:0.5760, tok/sec: 190111.28, flops:166.51, batch-reuse:1
@ 106 train 6.4275 , allloss: 6.4275, dt: 709.15ms, fracRes: 0.0037, norm(attn): 0.1621, norm(output): 0.6445, norm(x): 0.6547, norm(y): 0.9994, norm:0.4391, tok/sec: 184829.27, flops:161.88, batch-reuse:1
@ 107 train 6.4561 , allloss: 6.4561, dt: 705.60ms, fracRes: 0.0038, norm(attn): 0.1592, norm(output): 0.6445, norm(x): 0.6498, norm(y): 0.9994, norm:0.4985, tok/sec: 185759.07, flops:162.70, batch-reuse:1
@ 108 train 6.4235 , allloss: 6.4235, dt: 707.33ms, fracRes: 0.0044, norm(attn): 0.1650, norm(output): 0.6445, norm(x): 0.6540, norm(y): 0.9994, norm:0.4677, tok/sec: 185304.43, flops:162.30, batch-reuse:1
@ 109 train 6.4137 , allloss: 6.4137, dt: 702.30ms, fracRes: 0.0040, norm(attn): 0.1621, norm(output): 0.6445, norm(x): 0.6496, norm(y): 0.9994, norm:0.4560, tok/sec: 186632.73, flops:163.46, batch-reuse:1
@ 110 train 6.4236 , allloss: 6.4236, dt: 695.04ms, fracRes: 0.0038, norm(attn): 0.1553, norm(output): 0.6289, norm(x): 0.6383, norm(y): 0.9993, norm:0.3676, tok/sec: 188581.37, flops:165.17, batch-reuse:1
@ 111 train 6.4417 , allloss: 6.4417, dt: 701.15ms, fracRes: 0.0038, norm(attn): 0.1572, norm(output): 0.6289, norm(x): 0.6321, norm(y): 0.9993, norm:0.5732, tok/sec: 186937.47, flops:163.73, batch-reuse:1
@ 112 train 6.4546 , allloss: 6.4546, dt: 699.28ms, fracRes: 0.0038, norm(attn): 0.1553, norm(output): 0.6250, norm(x): 0.6302, norm(y): 0.9993, norm:0.4350, tok/sec: 187439.59, flops:164.17, batch-reuse:1
@ 113 train 6.4171 , allloss: 6.4171, dt: 700.86ms, fracRes: 0.0037, norm(attn): 0.1484, norm(output): 0.6211, norm(x): 0.6213, norm(y): 0.9993, norm:0.4888, tok/sec: 187016.71, flops:163.80, batch-reuse:1
@ 114 train 6.4103 , allloss: 6.4103, dt: 695.49ms, fracRes: 0.0035, norm(attn): 0.1572, norm(output): 0.6289, norm(x): 0.6351, norm(y): 0.9993, norm:0.3586, tok/sec: 188461.26, flops:165.06, batch-reuse:1
@ 115 train 6.3464 , allloss: 6.3464, dt: 690.87ms, fracRes: 0.0035, norm(attn): 0.1562, norm(output): 0.6289, norm(x): 0.6302, norm(y): 0.9992, norm:0.4679, tok/sec: 189720.85, flops:166.17, batch-reuse:1
@ 116 train 6.3302 , allloss: 6.3302, dt: 693.95ms, fracRes: 0.0036, norm(attn): 0.1592, norm(output): 0.6250, norm(x): 0.6295, norm(y): 0.9992, norm:0.3962, tok/sec: 188878.83, flops:165.43, batch-reuse:1
@ 117 train 6.3604 , allloss: 6.3604, dt: 699.96ms, fracRes: 0.0036, norm(attn): 0.1582, norm(output): 0.6289, norm(x): 0.6350, norm(y): 0.9992, norm:0.4825, tok/sec: 187256.35, flops:164.01, batch-reuse:1
@ 118 train 6.3616 , allloss: 6.3616, dt: 697.91ms, fracRes: 0.0035, norm(attn): 0.1523, norm(output): 0.6211, norm(x): 0.6194, norm(y): 0.9992, norm:0.3658, tok/sec: 187807.39, flops:164.49, batch-reuse:1
@ 119 train 6.3030 , allloss: 6.3030, dt: 702.14ms, fracRes: 0.0035, norm(attn): 0.1533, norm(output): 0.6094, norm(x): 0.6154, norm(y): 0.9992, norm:0.4180, tok/sec: 186675.57, flops:163.50, batch-reuse:1
@ 120 train 6.4575 , allloss: 6.4575, dt: 699.20ms, fracRes: 0.0035, norm(attn): 0.1523, norm(output): 0.6172, norm(x): 0.6182, norm(y): 0.9991, norm:0.3586, tok/sec: 187460.87, flops:164.19, batch-reuse:1
@ 121 train 6.5154 , allloss: 6.5154, dt: 702.46ms, fracRes: 0.0035, norm(attn): 0.1533, norm(output): 0.6211, norm(x): 0.6176, norm(y): 0.9991, norm:0.4509, tok/sec: 186589.78, flops:163.43, batch-reuse:1
@ 122 train 6.4883 , allloss: 6.4883, dt: 692.79ms, fracRes: 0.0036, norm(attn): 0.1533, norm(output): 0.6211, norm(x): 0.6238, norm(y): 0.9991, norm:0.4091, tok/sec: 189193.89, flops:165.71, batch-reuse:1
@ 123 train 6.3617 , allloss: 6.3617, dt: 691.52ms, fracRes: 0.0035, norm(attn): 0.1445, norm(output): 0.6094, norm(x): 0.6084, norm(y): 0.9990, norm:0.4158, tok/sec: 189541.43, flops:166.01, batch-reuse:1
@ 124 train 6.3853 , allloss: 6.3853, dt: 701.25ms, fracRes: 0.0035, norm(attn): 0.1494, norm(output): 0.6211, norm(x): 0.6183, norm(y): 0.9990, norm:0.3279, tok/sec: 186912.43, flops:163.71, batch-reuse:1
@ 125 train 6.4173 , allloss: 6.4173, dt: 698.46ms, fracRes: 0.0035, norm(attn): 0.1523, norm(output): 0.6172, norm(x): 0.6183, norm(y): 0.9990, norm:0.4264, tok/sec: 187659.62, flops:164.36, batch-reuse:1
@ 126 train 6.4128 , allloss: 6.4128, dt: 704.64ms, fracRes: 0.0037, norm(attn): 0.1592, norm(output): 0.6172, norm(x): 0.6159, norm(y): 0.9990, norm:0.4817, tok/sec: 186012.11, flops:162.92, batch-reuse:1
@ 127 train 6.3316 , allloss: 6.3316, dt: 691.85ms, fracRes: 0.0037, norm(attn): 0.1523, norm(output): 0.6016, norm(x): 0.6058, norm(y): 0.9990, norm:0.4803, tok/sec: 189452.46, flops:165.93, batch-reuse:1
@ 128 train 6.3013 , allloss: 6.3013, dt: 695.14ms, fracRes: 0.0039, norm(attn): 0.1523, norm(output): 0.6133, norm(x): 0.6125, norm(y): 0.9990, norm:0.3537, tok/sec: 188554.40, flops:165.15, batch-reuse:1
@ 129 train 6.4178 , allloss: 6.4178, dt: 703.05ms, fracRes: 0.0041, norm(attn): 0.1602, norm(output): 0.6211, norm(x): 0.6201, norm(y): 0.9989, norm:0.5229, tok/sec: 186432.60, flops:163.29, batch-reuse:1
@ 130 train 6.4154 , allloss: 6.4154, dt: 699.20ms, fracRes: 0.0036, norm(attn): 0.1514, norm(output): 0.6094, norm(x): 0.6073, norm(y): 0.9988, norm:0.4615, tok/sec: 187461.13, flops:164.19, batch-reuse:1
@ 131 train 6.4249 , allloss: 6.4249, dt: 702.49ms, fracRes: 0.0035, norm(attn): 0.1553, norm(output): 0.6211, norm(x): 0.6175, norm(y): 0.9988, norm:0.4951, tok/sec: 186581.17, flops:163.42, batch-reuse:1
@ 132 train 6.4683 , allloss: 6.4683, dt: 700.33ms, fracRes: 0.0034, norm(attn): 0.1523, norm(output): 0.6094, norm(x): 0.6122, norm(y): 0.9988, norm:0.5734, tok/sec: 187157.73, flops:163.92, batch-reuse:1
@ 133 train 6.3661 , allloss: 6.3661, dt: 706.65ms, fracRes: 0.0034, norm(attn): 0.1523, norm(output): 0.6211, norm(x): 0.6155, norm(y): 0.9988, norm:0.5698, tok/sec: 185483.68, flops:162.46, batch-reuse:1
@ 134 train 6.4456 , allloss: 6.4456, dt: 716.40ms, fracRes: 0.0033, norm(attn): 0.1602, norm(output): 0.6211, norm(x): 0.6171, norm(y): 0.9987, norm:0.6473, tok/sec: 182959.08, flops:160.25, batch-reuse:1
@ 135 train 6.3180 , allloss: 6.3180, dt: 714.55ms, fracRes: 0.0035, norm(attn): 0.1416, norm(output): 0.6016, norm(x): 0.6021, norm(y): 0.9986, norm:0.6034, tok/sec: 183431.76, flops:160.66, batch-reuse:1
@ 136 train 6.3640 , allloss: 6.3640, dt: 687.85ms, fracRes: 0.0033, norm(attn): 0.1660, norm(output): 0.6250, norm(x): 0.6327, norm(y): 0.9987, norm:0.7415, tok/sec: 190552.38, flops:166.90, batch-reuse:1
@ 137 train 6.2370 , allloss: 6.2370, dt: 692.92ms, fracRes: 0.0033, norm(attn): 0.1543, norm(output): 0.6172, norm(x): 0.6127, norm(y): 0.9987, norm:0.5362, tok/sec: 189158.47, flops:165.68, batch-reuse:1
@ 138 train 6.2439 , allloss: 6.2439, dt: 693.75ms, fracRes: 0.0033, norm(attn): 0.1562, norm(output): 0.6055, norm(x): 0.6085, norm(y): 0.9987, norm:0.4939, tok/sec: 188931.34, flops:165.48, batch-reuse:1
@ 139 train 6.2329 , allloss: 6.2329, dt: 686.04ms, fracRes: 0.0034, norm(attn): 0.1650, norm(output): 0.6289, norm(x): 0.6363, norm(y): 0.9987, norm:0.5465, tok/sec: 191055.01, flops:167.34, batch-reuse:1
@ 140 train 6.2234 , allloss: 6.2234, dt: 688.96ms, fracRes: 0.0034, norm(attn): 0.1582, norm(output): 0.6250, norm(x): 0.6281, norm(y): 0.9987, norm:0.3687, tok/sec: 190247.20, flops:166.63, batch-reuse:1
@ 141 train 6.2311 , allloss: 6.2311, dt: 695.79ms, fracRes: 0.0033, norm(attn): 0.1504, norm(output): 0.6133, norm(x): 0.6162, norm(y): 0.9986, norm:0.6107, tok/sec: 188379.70, flops:164.99, batch-reuse:1
@ 142 train 6.3146 , allloss: 6.3146, dt: 694.38ms, fracRes: 0.0034, norm(attn): 0.1582, norm(output): 0.6406, norm(x): 0.6390, norm(y): 0.9986, norm:0.4713, tok/sec: 188761.90, flops:165.33, batch-reuse:1
@ 143 train 6.2460 , allloss: 6.2460, dt: 685.82ms, fracRes: 0.0034, norm(attn): 0.1592, norm(output): 0.6328, norm(x): 0.6365, norm(y): 0.9986, norm:0.3714, tok/sec: 191116.31, flops:167.39, batch-reuse:1
@ 144 train 6.2328 , allloss: 6.2328, dt: 683.17ms, fracRes: 0.0033, norm(attn): 0.1523, norm(output): 0.6211, norm(x): 0.6233, norm(y): 0.9986, norm:0.4196, tok/sec: 191858.18, flops:168.04, batch-reuse:1
@ 145 train 6.2329 , allloss: 6.2329, dt: 677.03ms, fracRes: 0.0033, norm(attn): 0.1543, norm(output): 0.6211, norm(x): 0.6242, norm(y): 0.9985, norm:0.4275, tok/sec: 193597.46, flops:169.56, batch-reuse:1
@ 146 train 6.3979 , allloss: 6.3979, dt: 694.03ms, fracRes: 0.0033, norm(attn): 0.1621, norm(output): 0.6289, norm(x): 0.6352, norm(y): 0.9985, norm:0.3757, tok/sec: 188856.96, flops:165.41, batch-reuse:1
@ 147 train 6.2510 , allloss: 6.2510, dt: 701.94ms, fracRes: 0.0033, norm(attn): 0.1562, norm(output): 0.6250, norm(x): 0.6282, norm(y): 0.9985, norm:0.4528, tok/sec: 186726.99, flops:163.55, batch-reuse:1
@ 148 train 6.1946 , allloss: 6.1946, dt: 688.41ms, fracRes: 0.0034, norm(attn): 0.1572, norm(output): 0.6094, norm(x): 0.6137, norm(y): 0.9985, norm:0.3153, tok/sec: 190398.35, flops:166.76, batch-reuse:1
@ 149 train 6.0854 , allloss: 6.0854, dt: 697.50ms, fracRes: 0.0039, norm(attn): 0.1602, norm(output): 0.6250, norm(x): 0.6251, norm(y): 0.9985, norm:0.4175, tok/sec: 187917.88, flops:164.59, batch-reuse:1
@ 150 train 6.3163 , allloss: 6.3163, dt: 691.28ms, fracRes: 0.0039, norm(attn): 0.1611, norm(output): 0.6289, norm(x): 0.6291, norm(y): 0.9984, norm:0.3113, tok/sec: 189608.37, flops:166.07, batch-reuse:1
@ 151 train 6.1166 , allloss: 6.1166, dt: 695.95ms, fracRes: 0.0039, norm(attn): 0.1621, norm(output): 0.6250, norm(x): 0.6248, norm(y): 0.9984, norm:0.3893, tok/sec: 188336.26, flops:164.96, batch-reuse:1
@ 152 train 6.1514 , allloss: 6.1514, dt: 696.97ms, fracRes: 0.0039, norm(attn): 0.1494, norm(output): 0.6211, norm(x): 0.6200, norm(y): 0.9984, norm:0.5400, tok/sec: 188059.17, flops:164.71, batch-reuse:1
@ 153 train 6.0999 , allloss: 6.0999, dt: 684.35ms, fracRes: 0.0036, norm(attn): 0.1572, norm(output): 0.6250, norm(x): 0.6265, norm(y): 0.9983, norm:0.5813, tok/sec: 191527.86, flops:167.75, batch-reuse:1
@ 154 train 6.1992 , allloss: 6.1992, dt: 712.35ms, fracRes: 0.0038, norm(attn): 0.1582, norm(output): 0.6211, norm(x): 0.6193, norm(y): 0.9983, norm:0.3791, tok/sec: 183998.23, flops:161.16, batch-reuse:1
@ 155 train 6.3571 , allloss: 6.3571, dt: 710.56ms, fracRes: 0.0039, norm(attn): 0.1602, norm(output): 0.6250, norm(x): 0.6244, norm(y): 0.9983, norm:0.5671, tok/sec: 184462.01, flops:161.56, batch-reuse:1
@ 156 train 6.1681 , allloss: 6.1681, dt: 693.44ms, fracRes: 0.0038, norm(attn): 0.1621, norm(output): 0.6211, norm(x): 0.6216, norm(y): 0.9982, norm:0.4761, tok/sec: 189017.80, flops:165.55, batch-reuse:1
@ 157 train 6.2789 , allloss: 6.2789, dt: 705.61ms, fracRes: 0.0037, norm(attn): 0.1699, norm(output): 0.6250, norm(x): 0.6286, norm(y): 0.9982, norm:0.4878, tok/sec: 185756.74, flops:162.70, batch-reuse:1
@ 158 train 6.2373 , allloss: 6.2373, dt: 686.88ms, fracRes: 0.0037, norm(attn): 0.1680, norm(output): 0.6250, norm(x): 0.6269, norm(y): 0.9982, norm:0.4520, tok/sec: 190822.90, flops:167.13, batch-reuse:1
@ 159 train 6.2758 , allloss: 6.2758, dt: 698.32ms, fracRes: 0.0037, norm(attn): 0.1699, norm(output): 0.6250, norm(x): 0.6282, norm(y): 0.9982, norm:0.4069, tok/sec: 187695.44, flops:164.39, batch-reuse:1
@ 160 train 6.1623 , allloss: 6.1623, dt: 692.51ms, fracRes: 0.0037, norm(attn): 0.1602, norm(output): 0.6211, norm(x): 0.6204, norm(y): 0.9982, norm:0.4106, tok/sec: 189271.86, flops:165.77, batch-reuse:1
@ 161 train 6.1479 , allloss: 6.1479, dt: 698.86ms, fracRes: 0.0037, norm(attn): 0.1641, norm(output): 0.6133, norm(x): 0.6155, norm(y): 0.9982, norm:0.3716, tok/sec: 187551.30, flops:164.27, batch-reuse:1
@ 162 train 6.2954 , allloss: 6.2954, dt: 700.35ms, fracRes: 0.0039, norm(attn): 0.1631, norm(output): 0.6172, norm(x): 0.6148, norm(y): 0.9981, norm:0.3572, tok/sec: 187151.68, flops:163.92, batch-reuse:1
@ 163 train 6.1895 , allloss: 6.1895, dt: 685.60ms, fracRes: 0.0041, norm(attn): 0.1602, norm(output): 0.6133, norm(x): 0.6157, norm(y): 0.9981, norm:0.4468, tok/sec: 191177.85, flops:167.44, batch-reuse:1
@ 164 train 6.1094 , allloss: 6.1094, dt: 695.29ms, fracRes: 0.0042, norm(attn): 0.1504, norm(output): 0.6055, norm(x): 0.6061, norm(y): 0.9980, norm:0.4078, tok/sec: 188514.70, flops:165.11, batch-reuse:1
@ 165 train 6.2421 , allloss: 6.2421, dt: 697.57ms, fracRes: 0.0048, norm(attn): 0.1660, norm(output): 0.6328, norm(x): 0.6364, norm(y): 0.9980, norm:0.6637, tok/sec: 187898.09, flops:164.57, batch-reuse:1
@ 166 train 6.2401 , allloss: 6.2401, dt: 700.80ms, fracRes: 0.0042, norm(attn): 0.1602, norm(output): 0.6289, norm(x): 0.6298, norm(y): 0.9979, norm:0.9079, tok/sec: 187031.47, flops:163.81, batch-reuse:1
@ 167 train 6.2879 , allloss: 6.2879, dt: 687.75ms, fracRes: 0.0035, norm(attn): 0.1895, norm(output): 0.6602, norm(x): 0.6566, norm(y): 0.9981, norm:0.8967, tok/sec: 190581.58, flops:166.92, batch-reuse:1
@ 168 train 6.1041 , allloss: 6.1041, dt: 689.43ms, fracRes: 0.0034, norm(attn): 0.1738, norm(output): 0.6484, norm(x): 0.6573, norm(y): 0.9980, norm:0.5164, tok/sec: 190115.16, flops:166.51, batch-reuse:1
@ 169 train 6.1693 , allloss: 6.1693, dt: 694.73ms, fracRes: 0.0033, norm(attn): 0.1670, norm(output): 0.6484, norm(x): 0.6553, norm(y): 0.9980, norm:0.6256, tok/sec: 188666.48, flops:165.24, batch-reuse:1
@ 170 train 6.1574 , allloss: 6.1574, dt: 695.53ms, fracRes: 0.0034, norm(attn): 0.1826, norm(output): 0.6836, norm(x): 0.6783, norm(y): 0.9980, norm:0.8343, tok/sec: 188449.76, flops:165.05, batch-reuse:1
@ 171 train 6.1276 , allloss: 6.1276, dt: 696.87ms, fracRes: 0.0034, norm(attn): 0.1748, norm(output): 0.6836, norm(x): 0.6805, norm(y): 0.9979, norm:0.4942, tok/sec: 188087.41, flops:164.74, batch-reuse:1
@ 172 train 6.1735 , allloss: 6.1735, dt: 692.85ms, fracRes: 0.0035, norm(attn): 0.1768, norm(output): 0.6836, norm(x): 0.6815, norm(y): 0.9979, norm:0.5348, tok/sec: 189176.96, flops:165.69, batch-reuse:1
@ 173 train 6.1437 , allloss: 6.1437, dt: 698.49ms, fracRes: 0.0036, norm(attn): 0.1787, norm(output): 0.6875, norm(x): 0.6929, norm(y): 0.9979, norm:0.4218, tok/sec: 187650.98, flops:164.36, batch-reuse:1
@ 174 train 6.2955 , allloss: 6.2955, dt: 702.14ms, fracRes: 0.0039, norm(attn): 0.1846, norm(output): 0.6875, norm(x): 0.6922, norm(y): 0.9979, norm:0.4902, tok/sec: 186675.19, flops:163.50, batch-reuse:1
@ 175 train 6.1630 , allloss: 6.1630, dt: 701.26ms, fracRes: 0.0038, norm(attn): 0.1875, norm(output): 0.6836, norm(x): 0.6860, norm(y): 0.9978, norm:1.2283, tok/sec: 186910.40, flops:163.71, batch-reuse:1
@ 176 train 6.2234 , allloss: 6.2234, dt: 704.78ms, fracRes: 0.0041, norm(attn): 0.1846, norm(output): 0.6914, norm(x): 0.6964, norm(y): 0.9978, norm:0.4597, tok/sec: 185974.98, flops:162.89, batch-reuse:1
@ 177 train 6.1746 , allloss: 6.1746, dt: 698.65ms, fracRes: 0.0039, norm(attn): 0.1855, norm(output): 0.6875, norm(x): 0.6922, norm(y): 0.9978, norm:0.4552, tok/sec: 187607.43, flops:164.32, batch-reuse:1
@ 178 train 6.2223 , allloss: 6.2223, dt: 701.81ms, fracRes: 0.0039, norm(attn): 0.1855, norm(output): 0.6875, norm(x): 0.6880, norm(y): 0.9978, norm:0.4048, tok/sec: 186762.26, flops:163.58, batch-reuse:1
@ 179 train 6.0940 , allloss: 6.0940, dt: 695.34ms, fracRes: 0.0038, norm(attn): 0.1855, norm(output): 0.6836, norm(x): 0.6790, norm(y): 0.9977, norm:0.4838, tok/sec: 188501.26, flops:165.10, batch-reuse:1
@ 180 train 6.2133 , allloss: 6.2133, dt: 705.61ms, fracRes: 0.0036, norm(attn): 0.1885, norm(output): 0.6875, norm(x): 0.6884, norm(y): 0.9977, norm:0.5809, tok/sec: 185757.06, flops:162.70, batch-reuse:1
@ 181 train 6.0795 , allloss: 6.0795, dt: 709.04ms, fracRes: 0.0034, norm(attn): 0.1875, norm(output): 0.6836, norm(x): 0.6778, norm(y): 0.9977, norm:0.4798, tok/sec: 184858.92, flops:161.91, batch-reuse:1
@ 182 train 6.2023 , allloss: 6.2023, dt: 702.35ms, fracRes: 0.0033, norm(attn): 0.1934, norm(output): 0.6914, norm(x): 0.6955, norm(y): 0.9977, norm:0.4110, tok/sec: 186620.12, flops:163.45, batch-reuse:1
@ 183 train 6.1469 , allloss: 6.1469, dt: 699.64ms, fracRes: 0.0034, norm(attn): 0.1982, norm(output): 0.6914, norm(x): 0.7029, norm(y): 0.9977, norm:0.3764, tok/sec: 187342.31, flops:164.08, batch-reuse:1
@ 184 train 6.0380 , allloss: 6.0380, dt: 695.91ms, fracRes: 0.0034, norm(attn): 0.1973, norm(output): 0.6992, norm(x): 0.7047, norm(y): 0.9976, norm:0.3752, tok/sec: 188347.10, flops:164.96, batch-reuse:1
@ 185 train 6.0677 , allloss: 6.0677, dt: 698.37ms, fracRes: 0.0033, norm(attn): 0.2061, norm(output): 0.7031, norm(x): 0.7121, norm(y): 0.9976, norm:0.4740, tok/sec: 187683.07, flops:164.38, batch-reuse:1
@ 186 train 6.2194 , allloss: 6.2194, dt: 694.57ms, fracRes: 0.0033, norm(attn): 0.2031, norm(output): 0.7070, norm(x): 0.7072, norm(y): 0.9976, norm:0.3633, tok/sec: 188709.41, flops:165.28, batch-reuse:1
@ 187 train 6.3584 , allloss: 6.3584, dt: 695.65ms, fracRes: 0.0033, norm(attn): 0.2002, norm(output): 0.7031, norm(x): 0.7102, norm(y): 0.9976, norm:0.4957, tok/sec: 188415.53, flops:165.02, batch-reuse:1
@ 188 train 6.2019 , allloss: 6.2019, dt: 697.32ms, fracRes: 0.0034, norm(attn): 0.2070, norm(output): 0.7070, norm(x): 0.7157, norm(y): 0.9975, norm:0.3594, tok/sec: 187965.68, flops:164.63, batch-reuse:1
@ 189 train 6.3230 , allloss: 6.3230, dt: 676.64ms, fracRes: 0.0035, norm(attn): 0.2080, norm(output): 0.7266, norm(x): 0.7170, norm(y): 0.9975, norm:0.4360, tok/sec: 193708.72, flops:169.66, batch-reuse:1
@ 190 train 6.2767 , allloss: 6.2767, dt: 708.84ms, fracRes: 0.0035, norm(attn): 0.2021, norm(output): 0.7031, norm(x): 0.7094, norm(y): 0.9975, norm:0.3859, tok/sec: 184910.40, flops:161.95, batch-reuse:1
@ 191 train 6.2541 , allloss: 6.2541, dt: 709.32ms, fracRes: 0.0036, norm(attn): 0.1963, norm(output): 0.6914, norm(x): 0.7069, norm(y): 0.9975, norm:0.4648, tok/sec: 184785.29, flops:161.85, batch-reuse:1
@ 192 train 6.3078 , allloss: 6.3078, dt: 711.88ms, fracRes: 0.0036, norm(attn): 0.1875, norm(output): 0.6914, norm(x): 0.6982, norm(y): 0.9974, norm:0.3035, tok/sec: 184121.67, flops:161.26, batch-reuse:1
@ 193 train 6.1882 , allloss: 6.1882, dt: 708.01ms, fracRes: 0.0037, norm(attn): 0.1914, norm(output): 0.6836, norm(x): 0.6896, norm(y): 0.9974, norm:0.4692, tok/sec: 185127.59, flops:162.15, batch-reuse:1
@ 194 train 6.3291 , allloss: 6.3291, dt: 706.89ms, fracRes: 0.0038, norm(attn): 0.2129, norm(output): 0.7070, norm(x): 0.7131, norm(y): 0.9975, norm:0.5700, tok/sec: 185420.49, flops:162.40, batch-reuse:1
@ 195 train 6.2863 , allloss: 6.2863, dt: 683.23ms, fracRes: 0.0035, norm(attn): 0.1914, norm(output): 0.6953, norm(x): 0.7044, norm(y): 0.9974, norm:0.4636, tok/sec: 191841.78, flops:168.03, batch-reuse:1
@ 196 train 6.1817 , allloss: 6.1817, dt: 695.38ms, fracRes: 0.0034, norm(attn): 0.1855, norm(output): 0.6914, norm(x): 0.6950, norm(y): 0.9974, norm:0.4027, tok/sec: 188489.17, flops:165.09, batch-reuse:1
@ 197 train 6.1828 , allloss: 6.1828, dt: 695.96ms, fracRes: 0.0034, norm(attn): 0.1855, norm(output): 0.6953, norm(x): 0.7029, norm(y): 0.9974, norm:0.3363, tok/sec: 188333.30, flops:164.95, batch-reuse:1
@ 198 train 6.1663 , allloss: 6.1663, dt: 688.57ms, fracRes: 0.0035, norm(attn): 0.1836, norm(output): 0.7031, norm(x): 0.7084, norm(y): 0.9973, norm:0.3416, tok/sec: 190354.64, flops:166.72, batch-reuse:1
@ 199 train 6.2778 , allloss: 6.2778, dt: 702.03ms, fracRes: 0.0035, norm(attn): 0.1934, norm(output): 0.7070, norm(x): 0.7168, norm(y): 0.9972, norm:0.3908, tok/sec: 186703.34, flops:163.53, batch-reuse:1
@ 200 train 6.2794 , allloss: 6.2794, dt: 709.66ms, fracRes: 0.0035, norm(attn): 0.1904, norm(output): 0.7031, norm(x): 0.7154, norm(y): 0.9972, norm:0.3487, tok/sec: 184697.57, flops:161.77, batch-reuse:1
@ 201 train 6.1793 , allloss: 6.1793, dt: 696.48ms, fracRes: 0.0036, norm(attn): 0.1904, norm(output): 0.7031, norm(x): 0.7016, norm(y): 0.9971, norm:0.3800, tok/sec: 188191.91, flops:164.83, batch-reuse:1
@ 202 train 6.2812 , allloss: 6.2812, dt: 695.79ms, fracRes: 0.0036, norm(attn): 0.1875, norm(output): 0.6914, norm(x): 0.6985, norm(y): 0.9971, norm:0.3041, tok/sec: 188378.92, flops:164.99, batch-reuse:1
@ 203 train 6.2313 , allloss: 6.2313, dt: 697.21ms, fracRes: 0.0036, norm(attn): 0.1973, norm(output): 0.6914, norm(x): 0.7012, norm(y): 0.9970, norm:0.4514, tok/sec: 187994.99, flops:164.66, batch-reuse:1
@ 204 train 6.2250 , allloss: 6.2250, dt: 698.69ms, fracRes: 0.0036, norm(attn): 0.2031, norm(output): 0.6914, norm(x): 0.7000, norm(y): 0.9970, norm:0.3576, tok/sec: 187596.68, flops:164.31, batch-reuse:1
@ 205 train 6.2123 , allloss: 6.2123, dt: 696.77ms, fracRes: 0.0038, norm(attn): 0.1953, norm(output): 0.6914, norm(x): 0.6975, norm(y): 0.9971, norm:0.3735, tok/sec: 188112.58, flops:164.76, batch-reuse:1
@ 206 train 6.2338 , allloss: 6.2338, dt: 693.90ms, fracRes: 0.0039, norm(attn): 0.1982, norm(output): 0.6914, norm(x): 0.6975, norm(y): 0.9971, norm:0.3058, tok/sec: 188892.91, flops:165.44, batch-reuse:1
@ 207 train 6.1483 , allloss: 6.1483, dt: 708.06ms, fracRes: 0.0041, norm(attn): 0.1914, norm(output): 0.6914, norm(x): 0.6920, norm(y): 0.9970, norm:0.3582, tok/sec: 185114.12, flops:162.13, batch-reuse:1
@ 208 train 6.1910 , allloss: 6.1910, dt: 704.57ms, fracRes: 0.0042, norm(attn): 0.1934, norm(output): 0.6953, norm(x): 0.7042, norm(y): 0.9970, norm:0.3114, tok/sec: 186031.94, flops:162.94, batch-reuse:1
@ 209 train 6.2594 , allloss: 6.2594, dt: 702.60ms, fracRes: 0.0039, norm(attn): 0.1855, norm(output): 0.6914, norm(x): 0.6939, norm(y): 0.9970, norm:0.4516, tok/sec: 186553.06, flops:163.39, batch-reuse:1
@ 210 train 6.2172 , allloss: 6.2172, dt: 690.40ms, fracRes: 0.0038, norm(attn): 0.1934, norm(output): 0.6914, norm(x): 0.6992, norm(y): 0.9970, norm:0.3271, tok/sec: 189849.53, flops:166.28, batch-reuse:1
@ 211 train 6.1246 , allloss: 6.1246, dt: 700.15ms, fracRes: 0.0038, norm(attn): 0.1895, norm(output): 0.6914, norm(x): 0.6971, norm(y): 0.9969, norm:0.3118, tok/sec: 187204.45, flops:163.96, batch-reuse:1
@ 212 train 6.1871 , allloss: 6.1871, dt: 690.77ms, fracRes: 0.0037, norm(attn): 0.1934, norm(output): 0.6875, norm(x): 0.6909, norm(y): 0.9969, norm:0.3012, tok/sec: 189746.58, flops:166.19, batch-reuse:1
@ 213 train 6.1337 , allloss: 6.1337, dt: 697.82ms, fracRes: 0.0037, norm(attn): 0.1914, norm(output): 0.6953, norm(x): 0.6976, norm(y): 0.9969, norm:0.3463, tok/sec: 187831.97, flops:164.51, batch-reuse:1
@ 214 train 6.1556 , allloss: 6.1556, dt: 701.71ms, fracRes: 0.0038, norm(attn): 0.1973, norm(output): 0.6953, norm(x): 0.7034, norm(y): 0.9969, norm:0.3879, tok/sec: 186788.34, flops:163.60, batch-reuse:1
@ 215 train 6.0578 , allloss: 6.0578, dt: 687.78ms, fracRes: 0.0042, norm(attn): 0.1953, norm(output): 0.7031, norm(x): 0.7079, norm(y): 0.9969, norm:0.3673, tok/sec: 190572.46, flops:166.91, batch-reuse:1
@ 216 train 6.0549 , allloss: 6.0549, dt: 698.48ms, fracRes: 0.0050, norm(attn): 0.1992, norm(output): 0.6914, norm(x): 0.6984, norm(y): 0.9969, norm:0.3571, tok/sec: 187652.77, flops:164.36, batch-reuse:1
@ 217 train 6.1474 , allloss: 6.1474, dt: 702.09ms, fracRes: 0.0047, norm(attn): 0.1895, norm(output): 0.6836, norm(x): 0.6842, norm(y): 0.9968, norm:0.3585, tok/sec: 186689.45, flops:163.51, batch-reuse:1
@ 218 train 6.0493 , allloss: 6.0493, dt: 697.95ms, fracRes: 0.0041, norm(attn): 0.1963, norm(output): 0.6914, norm(x): 0.6913, norm(y): 0.9969, norm:0.3810, tok/sec: 187794.56, flops:164.48, batch-reuse:1
@ 219 train 6.2771 , allloss: 6.2771, dt: 695.43ms, fracRes: 0.0036, norm(attn): 0.1924, norm(output): 0.6875, norm(x): 0.6885, norm(y): 0.9968, norm:0.4157, tok/sec: 188476.70, flops:165.08, batch-reuse:1
@ 220 train 6.1927 , allloss: 6.1927, dt: 686.26ms, fracRes: 0.0037, norm(attn): 0.2002, norm(output): 0.6914, norm(x): 0.6938, norm(y): 0.9968, norm:0.3427, tok/sec: 190993.68, flops:167.28, batch-reuse:1
@ 221 train 6.0959 , allloss: 6.0959, dt: 681.35ms, fracRes: 0.0037, norm(attn): 0.2021, norm(output): 0.6914, norm(x): 0.6897, norm(y): 0.9967, norm:0.4867, tok/sec: 192370.49, flops:168.49, batch-reuse:1
@ 222 train 6.1255 , allloss: 6.1255, dt: 693.30ms, fracRes: 0.0036, norm(attn): 0.2031, norm(output): 0.6875, norm(x): 0.6873, norm(y): 0.9967, norm:0.7465, tok/sec: 189055.24, flops:165.59, batch-reuse:1
@ 223 train 6.1494 , allloss: 6.1494, dt: 704.78ms, fracRes: 0.0036, norm(attn): 0.2002, norm(output): 0.6914, norm(x): 0.6948, norm(y): 0.9967, norm:0.4494, tok/sec: 185976.93, flops:162.89, batch-reuse:1
@ 224 train 6.0785 , allloss: 6.0785, dt: 691.80ms, fracRes: 0.0037, norm(attn): 0.2100, norm(output): 0.6914, norm(x): 0.6989, norm(y): 0.9967, norm:0.5984, tok/sec: 189466.24, flops:165.95, batch-reuse:1
@ 225 train 6.1585 , allloss: 6.1585, dt: 686.17ms, fracRes: 0.0038, norm(attn): 0.1973, norm(output): 0.6914, norm(x): 0.6963, norm(y): 0.9966, norm:0.5786, tok/sec: 191018.69, flops:167.30, batch-reuse:1
@ 226 train 6.1890 , allloss: 6.1890, dt: 693.12ms, fracRes: 0.0038, norm(attn): 0.2432, norm(output): 0.7383, norm(x): 0.7356, norm(y): 0.9965, norm:0.7239, tok/sec: 189104.47, flops:165.63, batch-reuse:1
@ 227 train 6.1599 , allloss: 6.1599, dt: 688.37ms, fracRes: 0.0040, norm(attn): 0.2197, norm(output): 0.7383, norm(x): 0.7339, norm(y): 0.9967, norm:0.4530, tok/sec: 190407.85, flops:166.77, batch-reuse:1
@ 228 train 6.1602 , allloss: 6.1602, dt: 690.79ms, fracRes: 0.0042, norm(attn): 0.2266, norm(output): 0.7461, norm(x): 0.7477, norm(y): 0.9968, norm:0.4710, tok/sec: 189741.21, flops:166.19, batch-reuse:1
@ 229 train 6.1829 , allloss: 6.1829, dt: 676.23ms, fracRes: 0.0047, norm(attn): 0.2217, norm(output): 0.7500, norm(x): 0.7493, norm(y): 0.9967, norm:0.4087, tok/sec: 193828.45, flops:169.77, batch-reuse:1
@ 230 train 6.1697 , allloss: 6.1697, dt: 694.65ms, fracRes: 0.0052, norm(attn): 0.2383, norm(output): 0.7734, norm(x): 0.7770, norm(y): 0.9967, norm:0.4620, tok/sec: 188688.49, flops:165.26, batch-reuse:1
@ 231 train 6.1052 , allloss: 6.1052, dt: 685.06ms, fracRes: 0.0047, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.7747, norm(y): 0.9968, norm:0.4378, tok/sec: 191328.42, flops:167.58, batch-reuse:1
@ 232 train 6.0554 , allloss: 6.0554, dt: 691.50ms, fracRes: 0.0046, norm(attn): 0.2617, norm(output): 0.7773, norm(x): 0.7771, norm(y): 0.9968, norm:0.4010, tok/sec: 189547.96, flops:166.02, batch-reuse:1
@ 233 train 6.1464 , allloss: 6.1464, dt: 685.00ms, fracRes: 0.0043, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.7675, norm(y): 0.9968, norm:0.3944, tok/sec: 191345.14, flops:167.59, batch-reuse:1
@ 234 train 5.9973 , allloss: 5.9973, dt: 681.30ms, fracRes: 0.0040, norm(attn): 0.2598, norm(output): 0.7773, norm(x): 0.7817, norm(y): 0.9968, norm:0.3695, tok/sec: 192385.91, flops:168.50, batch-reuse:1
@ 235 train 6.1224 , allloss: 6.1224, dt: 684.00ms, fracRes: 0.0040, norm(attn): 0.2451, norm(output): 0.7656, norm(x): 0.7781, norm(y): 0.9967, norm:0.3839, tok/sec: 191624.99, flops:167.84, batch-reuse:1
@ 236 train 6.0356 , allloss: 6.0356, dt: 688.97ms, fracRes: 0.0041, norm(attn): 0.2480, norm(output): 0.7891, norm(x): 0.7895, norm(y): 0.9968, norm:0.4343, tok/sec: 190243.58, flops:166.63, batch-reuse:1
@ 237 train 6.1311 , allloss: 6.1311, dt: 686.14ms, fracRes: 0.0041, norm(attn): 0.2461, norm(output): 0.7930, norm(x): 0.7965, norm(y): 0.9968, norm:0.6735, tok/sec: 191027.19, flops:167.31, batch-reuse:1
@ 238 train 6.0819 , allloss: 6.0819, dt: 687.13ms, fracRes: 0.0045, norm(attn): 0.2402, norm(output): 0.7656, norm(x): 0.7731, norm(y): 0.9967, norm:0.5043, tok/sec: 190751.46, flops:167.07, batch-reuse:1
@ 239 train 6.0779 , allloss: 6.0779, dt: 680.28ms, fracRes: 0.0071, norm(attn): 0.2412, norm(output): 0.7930, norm(x): 0.7903, norm(y): 0.9967, norm:0.3712, tok/sec: 192673.68, flops:168.75, batch-reuse:1
@ 240 train 6.1249 , allloss: 6.1249, dt: 671.77ms, fracRes: 0.0072, norm(attn): 0.2402, norm(output): 0.7812, norm(x): 0.7813, norm(y): 0.9966, norm:0.3704, tok/sec: 195113.82, flops:170.89, batch-reuse:1
@ 241 train 6.1141 , allloss: 6.1141, dt: 678.69ms, fracRes: 0.0052, norm(attn): 0.2490, norm(output): 0.7656, norm(x): 0.7743, norm(y): 0.9967, norm:0.4650, tok/sec: 193126.29, flops:169.15, batch-reuse:1
@ 242 train 6.0870 , allloss: 6.0870, dt: 690.80ms, fracRes: 0.0042, norm(attn): 0.2539, norm(output): 0.7578, norm(x): 0.7662, norm(y): 0.9967, norm:0.4954, tok/sec: 189739.18, flops:166.18, batch-reuse:1
@ 243 train 6.0146 , allloss: 6.0146, dt: 685.68ms, fracRes: 0.0044, norm(attn): 0.2617, norm(output): 0.7656, norm(x): 0.7764, norm(y): 0.9967, norm:0.4869, tok/sec: 191156.78, flops:167.43, batch-reuse:1
@ 244 train 6.1227 , allloss: 6.1227, dt: 696.27ms, fracRes: 0.0047, norm(attn): 0.2520, norm(output): 0.7617, norm(x): 0.7626, norm(y): 0.9966, norm:0.4489, tok/sec: 188249.39, flops:164.88, batch-reuse:1
@ 245 train 5.8957 , allloss: 5.8957, dt: 682.89ms, fracRes: 0.0047, norm(attn): 0.2480, norm(output): 0.7617, norm(x): 0.7654, norm(y): 0.9967, norm:0.3850, tok/sec: 191937.69, flops:168.11, batch-reuse:1
@ 246 train 6.2012 , allloss: 6.2012, dt: 684.12ms, fracRes: 0.0051, norm(attn): 0.2559, norm(output): 0.7773, norm(x): 0.7843, norm(y): 0.9967, norm:0.6177, tok/sec: 191593.14, flops:167.81, batch-reuse:1
@ 247 train 6.0861 , allloss: 6.0861, dt: 688.13ms, fracRes: 0.0049, norm(attn): 0.2275, norm(output): 0.8008, norm(x): 0.7938, norm(y): 0.9966, norm:0.4921, tok/sec: 190474.81, flops:166.83, batch-reuse:1
@ 248 train 6.0102 , allloss: 6.0102, dt: 688.49ms, fracRes: 0.0048, norm(attn): 0.2373, norm(output): 0.8008, norm(x): 0.7989, norm(y): 0.9966, norm:0.3638, tok/sec: 190376.99, flops:166.74, batch-reuse:1
@ 249 train 6.0150 , allloss: 6.0150, dt: 676.48ms, fracRes: 0.0047, norm(attn): 0.2451, norm(output): 0.8086, norm(x): 0.8060, norm(y): 0.9966, norm:0.5161, tok/sec: 193755.76, flops:169.70, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0228, 0.9766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1768, 0.4238, 0.3984, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.5781, 0.0874, 0.2539, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.4141, 0.1846, 0.0461, 0.0498, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.3691, 0.1226, 0.0532, 0.0742, 0.2793, 0.0000, 0.0000],
        [0.0437, 0.5938, 0.0588, 0.1182, 0.0496, 0.0237, 0.1108, 0.0000],
        [0.0247, 0.1143, 0.0693, 0.3066, 0.1777, 0.0576, 0.1279, 0.1221]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.0284,     -0.0175,     -0.0493,     -0.0669,     -0.0203,     -0.0342,     -0.0166],
        [     0.0028,      3.7656,     -0.1416,      0.3828,      0.3281,     -0.3496,     -0.3047,      0.5859],
        [     0.0056,      0.8789,      0.8164,      1.2812,      0.4785,     -0.5977,      0.4375,      1.1016],
        [    -0.0023,      1.9688,      0.0796,      1.1484,     -0.7930,      0.0923,     -0.5195,     -0.1162],
        [    -0.0018,      0.3008,     -0.5039,     -1.8906,     -1.8203,     -0.5859,     -1.0703,     -0.1855],
        [    -0.0076,      1.2812,      0.1807,     -0.6562,     -0.3184,      1.0078,     -0.2090,     -0.4492],
        [     0.0032,      2.6094,      0.3008,      1.0000,      0.1279,     -0.6094,      0.9336,      1.3438],
        [     0.0127,      1.5469,      1.0469,      2.5312,      1.9922,      0.8633,      1.6641,      1.6094]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0769],
        [0.0584],
        [0.0602],
        [0.4027],
        [0.2288],
        [0.0925],
        [0.0196],
        [0.1889],
        [0.0718],
        [0.2741],
        [0.0240],
        [0.0218],
        [0.1725],
        [0.0516]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2480, 0.7500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1729, 0.5977, 0.2314, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.5156, 0.1260, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.1025, 0.4551, 0.0864, 0.0737, 0.0000, 0.0000, 0.0000],
        [0.0981, 0.2559, 0.2275, 0.2539, 0.0806, 0.0854, 0.0000, 0.0000],
        [0.0869, 0.2773, 0.1270, 0.1504, 0.0295, 0.0635, 0.2656, 0.0000],
        [0.1338, 0.3105, 0.1099, 0.2002, 0.0315, 0.0267, 0.0664, 0.1196]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0082,     -0.0066,     -0.0159,     -0.0156,      0.0051,      0.0002,     -0.0109],
        [     0.0051,      1.1094,      1.3906,      0.6641,     -0.9258,     -1.3594,     -0.8633,     -2.6250],
        [     0.0042,      1.2422,      0.3008,     -0.1748,     -0.8984,     -2.0312,     -0.5781,     -2.3125],
        [     0.0058,      1.6719,      0.2617,      0.9844,      0.4062,     -2.2031,     -1.3203,     -2.2969],
        [     0.0017,     -1.0078,      0.4805,     -1.1797,     -1.3359,      0.7695,     -0.2207,     -1.6797],
        [     0.0001,      0.9570,      0.8438,      0.9492,     -0.1943,     -0.1377,      0.6719,      0.8672],
        [    -0.0002,      1.1562,      0.3730,      0.5469,     -1.0859,     -0.3184,      1.1094,      1.7734],
        [     0.0034,      0.8438,     -0.1943,      0.4043,     -1.4453,     -1.6094,     -0.6992,     -0.1089]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5184],
        [0.2576],
        [0.3437],
        [0.2233],
        [0.3346],
        [0.2219],
        [0.3680],
        [0.1000],
        [0.1813],
        [0.2247],
        [0.0895],
        [0.1499],
        [0.0583],
        [0.0409]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7266,     0.2734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4531,     0.3945,     0.1523,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4395,     0.3008,     0.1348,     0.1260,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3691,     0.4395,     0.1138,     0.0315,     0.0457,     0.0000,     0.0000,     0.0000],
        [    0.2617,     0.0186,     0.0011,     0.0001,     0.2441,     0.4746,     0.0000,     0.0000],
        [    0.0280,     0.0030,     0.0001,     0.0000,     0.0342,     0.8984,     0.0366,     0.0000],
        [    0.1226,     0.0051,     0.0002,     0.0000,     0.2812,     0.5547,     0.0342,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0119,     -0.0221,     -0.0299,     -0.0100,      0.0039,     -0.0081,     -0.0283],
        [     0.0142,     -0.9609,     -3.5156,     -5.4062,     -0.8984,      0.9766,     -1.5625,     -5.5938],
        [     0.0087,     -0.1328,     -1.0781,     -1.7891,      0.0327,      0.0757,     -0.8398,     -4.0625],
        [     0.0084,     -0.3730,     -1.1797,     -1.2422,      0.0698,     -0.1641,     -0.5469,     -3.5938],
        [    -0.0065,      0.1670,     -1.1797,     -2.4688,     -2.0938,      2.5781,     -0.2598,      1.3125],
        [     0.0299,     -2.6250,     -5.4375,     -7.4375,     -0.0417,      0.6211,     -0.8203,     -8.3125],
        [     0.0298,     -2.1875,     -6.2812,     -8.1250,      0.2295,      3.5000,      0.3008,     -5.9688],
        [     0.0403,     -3.1250,     -6.3125,     -7.8125,      0.8711,      1.5547,     -1.2422,    -12.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7539],
        [0.5944],
        [0.5401],
        [0.6172],
        [0.2733],
        [0.1945],
        [0.1524],
        [0.2365],
        [0.1579],
        [0.1800],
        [0.0874],
        [0.0831],
        [0.1612],
        [0.1296]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5547,     0.4453,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2832,     0.1553,     0.5625,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2676,     0.1074,     0.2871,     0.3379,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1328,     0.1592,     0.2324,     0.4766,     0.0002,     0.0000,     0.0000,     0.0000],
        [    0.1025,     0.1562,     0.1611,     0.4277,     0.0027,     0.1494,     0.0000,     0.0000],
        [    0.1191,     0.1387,     0.1416,     0.3574,     0.0004,     0.2373,     0.0055,     0.0000],
        [    0.0630,     0.0359,     0.0752,     0.3359,     0.0000,     0.1348,     0.0005,     0.3535]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0024,      0.0056,      0.0130,     -0.0586,     -0.0033,     -0.0315,      0.0142],
        [     0.0143,     -0.2070,      1.7266,      2.5000,     -7.9688,     -1.0625,     -4.0312,      2.4531],
        [     0.0053,     -0.5977,      0.6914,      0.8398,     -3.4375,     -0.9141,     -1.2812,      1.0781],
        [     0.0060,     -0.9023,      0.0815,      0.2432,     -3.0312,     -0.2236,     -1.0234,      0.9531],
        [     0.0125,      0.1924,      0.5703,      1.2891,     -6.6562,      0.0986,     -3.2969,      1.4922],
        [     0.0106,      0.4297,      0.4629,      1.4375,     -3.6094,      0.3848,     -2.6250,      0.3887],
        [     0.0141,      0.1670,      0.1875,      1.1172,     -5.7188,      0.7070,     -3.0625,      0.7188],
        [     0.0216,     -0.5469,      0.1963,      1.6953,     -8.8750,      0.7812,     -4.8125,      1.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6579],
        [0.4319],
        [0.4073],
        [0.3798],
        [0.2400],
        [0.1661],
        [0.1386],
        [0.1653],
        [0.1211],
        [0.1584],
        [0.1018],
        [0.1145],
        [0.1275],
        [0.1004]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7695, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.0457, 0.7891, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.0337, 0.2480, 0.5781, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1982, 0.0206, 0.1689, 0.6094, 0.0049, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.1514, 0.3047, 0.1250, 0.0371, 0.2754, 0.0000, 0.0000],
        [0.0874, 0.1719, 0.1299, 0.0559, 0.2275, 0.1348, 0.1924, 0.0000],
        [0.1099, 0.0162, 0.0361, 0.0645, 0.0732, 0.3770, 0.1455, 0.1787]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0087,     -0.0018,      0.0024,     -0.0166,      0.0087,      0.0005,      0.0034],
        [    -0.0009,     -1.2031,      1.9219,      2.8438,     -4.2188,      0.0435,     -1.8125,      0.0120],
        [    -0.0005,     -1.2969,      1.5547,      2.4688,     -3.2344,     -0.0059,     -1.4297,      0.2520],
        [     0.0005,     -1.4141,      0.5781,      1.4219,     -2.6406,      0.0562,     -1.0234,      0.3418],
        [     0.0030,     -2.2656,     -0.1582,      1.1250,     -3.7031,      0.7422,     -1.1250,      0.3594],
        [    -0.0010,      0.3477,      1.0547,      0.1572,     -1.0547,      0.9453,      1.0859,     -0.2256],
        [    -0.0009,      0.6719,      0.3965,     -0.4473,      0.9531,      0.4336,      0.7891,     -0.3438],
        [     0.0015,     -1.9062,     -1.1094,     -0.5312,     -0.4004,      1.2344,      0.2832,      0.4883]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4974],
        [0.2037],
        [0.1693],
        [0.2069],
        [0.1570],
        [0.0829],
        [0.0707],
        [0.0646],
        [0.1012],
        [0.0810],
        [0.0578],
        [0.0538],
        [0.0463],
        [0.0464]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6094, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3555, 0.3320, 0.3125, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.2676, 0.2061, 0.2539, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2598, 0.3066, 0.1846, 0.1318, 0.1172, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.3730, 0.1357, 0.0894, 0.0952, 0.0603, 0.0000, 0.0000],
        [0.1777, 0.0786, 0.0713, 0.0713, 0.0830, 0.1118, 0.4062, 0.0000],
        [0.0737, 0.0238, 0.0972, 0.1992, 0.1318, 0.1187, 0.1445, 0.2109]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0007,     -0.0022,     -0.0025,     -0.0058,     -0.0050,      0.0089,      0.0014],
        [    -0.0007,     -0.4473,     -0.1182,      0.0767,     -0.3086,     -0.0986,     -0.0530,     -0.4648],
        [    -0.0002,     -0.0703,     -0.1328,      0.0491,      0.3145,      0.0197,      1.4844,      0.2236],
        [    -0.0004,     -0.0168,     -0.2812,     -0.0688,      0.2891,     -0.2227,      1.5469,      0.3086],
        [     0.0008,      0.1680,     -0.3398,     -0.6797,     -0.7930,     -0.3672,     -0.5469,     -0.5742],
        [     0.0015,      0.4141,     -0.5898,     -1.0156,     -0.9492,     -1.4062,      1.2344,     -0.1250],
        [     0.0004,     -0.8164,     -0.9102,     -0.9141,     -0.7617,     -0.4668,      0.8242,     -0.0796],
        [    -0.0020,     -1.1328,      0.2754,      0.9922,      0.5781,      0.4746,      0.6680,      1.0547]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4842],
        [0.4541],
        [0.4160],
        [0.1908],
        [0.2229],
        [0.1317],
        [0.0911],
        [0.1135],
        [0.0841],
        [0.0826],
        [0.0758],
        [0.0829],
        [0.0994],
        [0.0572]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5391, 0.2773, 0.1855, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5117, 0.2656, 0.1328, 0.0898, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2559, 0.1494, 0.2314, 0.2734, 0.0884, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.2256, 0.1152, 0.1030, 0.1475, 0.0630, 0.0000, 0.0000],
        [0.1250, 0.0684, 0.3223, 0.3672, 0.0476, 0.0483, 0.0214, 0.0000],
        [0.1914, 0.0815, 0.0811, 0.0835, 0.0444, 0.0381, 0.0845, 0.3945]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0030,      0.0092,      0.0107,      0.0009,      0.0034,      0.0051,      0.0074],
        [     0.0003,     -0.8164,     -0.3262,     -0.4863,     -0.5391,     -0.9648,      1.2812,     -0.0154],
        [     0.0022,     -0.6641,     -1.0625,     -1.2969,      0.1357,     -0.7773,      1.7500,     -0.1465],
        [     0.0022,     -0.6484,     -1.3438,     -1.7344,      0.0337,     -0.8438,      1.7812,     -0.4023],
        [     0.0010,     -0.5391,     -0.1011,      0.0645,     -1.0625,     -1.3438,      0.7031,      1.2812],
        [     0.0016,     -0.4238,     -1.0938,     -1.2031,     -0.8516,     -1.6953,      1.6719,      0.5547],
        [     0.0002,     -0.6016,      0.9492,      1.0781,     -0.9648,     -0.9453,     -1.7656,      0.7969],
        [     0.0017,     -0.8516,     -0.8594,     -0.8242,     -1.4609,     -1.6094,     -0.8203,      0.7266]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7059],
        [0.5117],
        [0.4524],
        [0.2876],
        [0.3438],
        [0.0893],
        [0.1503],
        [0.1804],
        [0.1015],
        [0.1354],
        [0.1341],
        [0.1181],
        [0.1430],
        [0.0727]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.8633, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.8516, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.7852, 0.0757, 0.0449, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0250, 0.6758, 0.0613, 0.0275, 0.2119, 0.0000, 0.0000, 0.0000],
        [0.0391, 0.5117, 0.0559, 0.0272, 0.1689, 0.1963, 0.0000, 0.0000],
        [0.0253, 0.2432, 0.1021, 0.0583, 0.2676, 0.2598, 0.0437, 0.0000],
        [0.0308, 0.4648, 0.0620, 0.0330, 0.1777, 0.1738, 0.0508, 0.0072]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0120,      0.0074,      0.0026,      0.0101,      0.0114,      0.0002,     -0.0082],
        [     0.0029,      1.8281,      0.3945,     -0.1504,      1.0156,      1.2266,     -0.1475,     -1.3125],
        [     0.0037,      2.4062,     -0.1001,     -0.6797,      0.9336,      1.0469,     -0.1924,     -1.7891],
        [     0.0036,      2.1406,     -0.2051,     -0.7266,      0.8086,      0.8555,     -0.1299,     -1.7578],
        [     0.0052,      3.2969,      0.9023,      0.1025,      2.1406,      2.2656,      0.1621,     -1.8203],
        [     0.0048,      2.5781,      0.3652,     -0.3574,      1.4688,      1.6172,     -0.0801,     -2.1875],
        [     0.0030,      2.2656,      1.3984,      0.8398,      2.3594,      2.3281,      0.5508,     -0.5703],
        [     0.0044,      2.7188,      0.7031,      0.0752,      1.7578,      1.7344,      0.5039,     -1.4453]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2446],
        [0.1610],
        [0.1498],
        [0.0325],
        [0.0641],
        [0.0072],
        [0.0212],
        [0.0213],
        [0.0092],
        [0.0163],
        [0.0107],
        [0.0117],
        [0.0113],
        [0.0048]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.8945,     0.1050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8438,     0.0820,     0.0742,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.8242,     0.0879,     0.0786,     0.0082,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.8125,     0.0879,     0.0801,     0.0081,     0.0103,     0.0000,     0.0000],
        [    0.0002,     0.8125,     0.0884,     0.0796,     0.0082,     0.0104,     0.0019,     0.0000],
        [    0.0001,     0.8398,     0.0732,     0.0664,     0.0052,     0.0070,     0.0010,     0.0057]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0413,     0.0302,     0.0311,     0.0178,     0.0199,     0.0101,     0.0205],
        [    0.0013,     7.0312,     5.1875,     5.0625,     3.1875,     3.3594,     1.9297,     3.2344],
        [    0.0012,     8.0625,     5.9062,     5.7812,     3.7031,     3.8906,     2.3125,     3.7500],
        [    0.0012,     8.8750,     6.5625,     6.4375,     4.0625,     4.3125,     2.5156,     4.1562],
        [    0.0012,     8.5625,     6.3125,     6.2188,     3.9375,     4.1875,     2.4375,     3.9844],
        [    0.0011,     8.5000,     6.2812,     6.1562,     3.8750,     4.1250,     2.3594,     3.9375],
        [    0.0012,     8.5000,     6.2812,     6.1875,     3.9062,     4.1562,     2.4219,     4.0000],
        [    0.0011,     9.3125,     6.8750,     6.7500,     4.2188,     4.5000,     2.5625,     4.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0110],
        [    0.0038],
        [    0.0014],
        [    0.0012],
        [    0.0013],
        [    0.0009],
        [    0.0008],
        [    0.0011],
        [    0.0010],
        [    0.0007],
        [    0.0006],
        [    0.0006],
        [    0.0009],
        [    0.0006]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.6016,     0.4004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.4590,     0.3047,     0.2363,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.3730,     0.2500,     0.1943,     0.1826,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.3066,     0.2041,     0.1592,     0.1494,     0.1807,     0.0000,     0.0000],
        [    0.0001,     0.2617,     0.1758,     0.1367,     0.1289,     0.1562,     0.1396,     0.0000],
        [    0.0001,     0.2363,     0.1572,     0.1221,     0.1147,     0.1387,     0.1235,     0.1069]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0349,      0.0337,      0.0327,      0.0325,      0.0332,      0.0330,      0.0322],
        [    -0.0148,      8.3125,      7.8750,      7.6250,      7.5625,      7.7500,      7.6250,      7.5000],
        [    -0.0147,      8.2500,      7.8438,      7.5938,      7.5312,      7.7188,      7.6250,      7.4688],
        [    -0.0150,      8.3750,      7.9688,      7.7188,      7.6562,      7.8750,      7.7500,      7.5938],
        [    -0.0146,      8.2500,      7.8438,      7.5938,      7.5312,      7.7188,      7.6250,      7.4688],
        [    -0.0148,      8.3125,      7.9062,      7.6562,      7.5938,      7.7812,      7.6562,      7.5312],
        [    -0.0146,      8.2500,      7.8438,      7.5938,      7.5312,      7.7188,      7.6250,      7.4688],
        [    -0.0148,      8.3750,      7.9688,      7.7188,      7.6562,      7.8438,      7.7188,      7.5938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0008],
        [    0.0006],
        [    0.0004],
        [    0.0003],
        [    0.0003],
        [    0.0002],
        [    0.0002],
        [    0.0002],
        [    0.0002],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.7148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1631, 0.4160, 0.4219, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.2949, 0.2988, 0.2930, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.2256, 0.2295, 0.2256, 0.2324, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.1836, 0.1855, 0.1826, 0.1885, 0.1885, 0.0000, 0.0000],
        [0.0588, 0.1543, 0.1562, 0.1533, 0.1582, 0.1582, 0.1611, 0.0000],
        [0.0513, 0.1328, 0.1348, 0.1318, 0.1367, 0.1367, 0.1396, 0.1357]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0063,      0.0065,      0.0065,      0.0067,      0.0067,      0.0068,      0.0067],
        [    -0.0008,      0.9180,      0.9336,      0.9141,      0.9492,      0.9453,      0.9727,      0.9375],
        [    -0.0008,      0.9375,      0.9492,      0.9336,      0.9648,      0.9648,      0.9883,      0.9570],
        [    -0.0008,      0.9336,      0.9453,      0.9258,      0.9609,      0.9609,      0.9844,      0.9531],
        [    -0.0008,      0.9531,      0.9648,      0.9492,      0.9805,      0.9805,      1.0000,      0.9727],
        [    -0.0008,      0.9453,      0.9609,      0.9414,      0.9727,      0.9727,      0.9961,      0.9648],
        [    -0.0008,      0.9609,      0.9727,      0.9570,      0.9883,      0.9844,      1.0078,      0.9805],
        [    -0.0008,      0.9531,      0.9648,      0.9492,      0.9805,      0.9805,      1.0000,      0.9727]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2743],
        [0.1752],
        [0.1268],
        [0.1016],
        [0.0840],
        [0.0724],
        [0.0619],
        [0.0556],
        [0.0500],
        [0.0448],
        [0.0407],
        [0.0378],
        [0.0354],
        [0.0331]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8945,     0.1050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8711,     0.1021,     0.0253,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8633,     0.1011,     0.0249,     0.0128,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8555,     0.1006,     0.0248,     0.0128,     0.0073,     0.0000,     0.0000],
        [    0.0000,     0.8516,     0.1001,     0.0248,     0.0128,     0.0072,     0.0052,     0.0000],
        [    0.0000,     0.8438,     0.1006,     0.0249,     0.0129,     0.0073,     0.0053,     0.0036]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0276,      0.0223,      0.0189,      0.0173,      0.0160,      0.0151,      0.0142],
        [    -0.0051,     10.9375,      8.8125,      7.4688,      6.8125,      6.2500,      5.9375,      5.5625],
        [    -0.0054,     11.4375,      9.3125,      7.9062,      7.2500,      6.6875,      6.3750,      5.9688],
        [    -0.0056,     11.6250,      9.5000,      8.1250,      7.4375,      6.8750,      6.5625,      6.1562],
        [    -0.0057,     11.7500,      9.5625,      8.1875,      7.5312,      6.9688,      6.6250,      6.2188],
        [    -0.0057,     11.8125,      9.6250,      8.2500,      7.5938,      7.0312,      6.6875,      6.2812],
        [    -0.0057,     11.8125,      9.6875,      8.3125,      7.6250,      7.0625,      6.7188,      6.3125],
        [    -0.0058,     11.8125,      9.6875,      8.3125,      7.6562,      7.0625,      6.7500,      6.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0171],
        [    0.0064],
        [    0.0039],
        [    0.0029],
        [    0.0023],
        [    0.0019],
        [    0.0017],
        [    0.0015],
        [    0.0014],
        [    0.0012],
        [    0.0011],
        [    0.0011],
        [    0.0010],
        [    0.0009]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(;:0.0015;:0.0016;:0.0017;:0.0020;:0.0021;:0.0021;:0.0021;:0.0021)
;
------
		(;:0.0016;:0.0017;:0.0020;:0.0021;:0.0021;:0.0021;:0.0021;:0.0024)
;;;;;;;;;;;;;;;
@ 250 train 6.0647 , allloss: 6.0647, dt: 1103.48ms, fracRes: 0.0047, norm(attn): 0.2344, norm(output): 0.8047, norm(x): 0.7951, norm(y): 0.9966, norm:0.3414, tok/sec: 118780.68, flops:104.03, batch-reuse:1
@ 251 train 6.0015 , allloss: 6.0015, dt: 687.95ms, fracRes: 0.0047, norm(attn): 0.2295, norm(output): 0.7852, norm(x): 0.7864, norm(y): 0.9965, norm:0.3955, tok/sec: 190525.44, flops:166.87, batch-reuse:1
@ 252 train 6.1315 , allloss: 6.1315, dt: 698.86ms, fracRes: 0.0048, norm(attn): 0.2295, norm(output): 0.7852, norm(x): 0.7817, norm(y): 0.9964, norm:0.4892, tok/sec: 187551.88, flops:164.27, batch-reuse:1
@ 253 train 6.0105 , allloss: 6.0105, dt: 706.97ms, fracRes: 0.0049, norm(attn): 0.2246, norm(output): 0.7734, norm(x): 0.7789, norm(y): 0.9964, norm:0.3151, tok/sec: 185400.29, flops:162.38, batch-reuse:1
@ 254 train 5.9545 , allloss: 5.9545, dt: 695.32ms, fracRes: 0.0049, norm(attn): 0.2217, norm(output): 0.7617, norm(x): 0.7719, norm(y): 0.9964, norm:0.4217, tok/sec: 188504.68, flops:165.10, batch-reuse:1
@ 255 train 5.9577 , allloss: 5.9577, dt: 704.86ms, fracRes: 0.0052, norm(attn): 0.2275, norm(output): 0.7656, norm(x): 0.7694, norm(y): 0.9964, norm:0.3588, tok/sec: 185954.48, flops:162.87, batch-reuse:1
@ 256 train 6.0202 , allloss: 6.0202, dt: 697.92ms, fracRes: 0.0055, norm(attn): 0.2324, norm(output): 0.7539, norm(x): 0.7626, norm(y): 0.9964, norm:0.4304, tok/sec: 187804.51, flops:164.49, batch-reuse:1
@ 257 train 6.0174 , allloss: 6.0174, dt: 701.59ms, fracRes: 0.0060, norm(attn): 0.2373, norm(output): 0.7539, norm(x): 0.7662, norm(y): 0.9964, norm:0.3556, tok/sec: 186821.28, flops:163.63, batch-reuse:1
@ 258 train 5.9463 , allloss: 5.9463, dt: 702.79ms, fracRes: 0.0064, norm(attn): 0.2422, norm(output): 0.7734, norm(x): 0.7808, norm(y): 0.9964, norm:0.3505, tok/sec: 186501.60, flops:163.35, batch-reuse:1
@ 259 train 5.9965 , allloss: 5.9965, dt: 702.51ms, fracRes: 0.0063, norm(attn): 0.2461, norm(output): 0.7734, norm(x): 0.7806, norm(y): 0.9964, norm:0.3227, tok/sec: 186577.37, flops:163.41, batch-reuse:1
@ 260 train 6.0450 , allloss: 6.0450, dt: 700.90ms, fracRes: 0.0063, norm(attn): 0.2461, norm(output): 0.7656, norm(x): 0.7733, norm(y): 0.9964, norm:0.3334, tok/sec: 187005.26, flops:163.79, batch-reuse:1
@ 261 train 6.0184 , allloss: 6.0184, dt: 707.81ms, fracRes: 0.0062, norm(attn): 0.2471, norm(output): 0.7656, norm(x): 0.7712, norm(y): 0.9964, norm:0.3155, tok/sec: 185179.10, flops:162.19, batch-reuse:1
@ 262 train 6.0895 , allloss: 6.0895, dt: 711.85ms, fracRes: 0.0060, norm(attn): 0.2480, norm(output): 0.7617, norm(x): 0.7694, norm(y): 0.9964, norm:0.4209, tok/sec: 184129.19, flops:161.27, batch-reuse:1
@ 263 train 6.0048 , allloss: 6.0048, dt: 703.52ms, fracRes: 0.0059, norm(attn): 0.2461, norm(output): 0.7656, norm(x): 0.7696, norm(y): 0.9964, norm:0.3703, tok/sec: 186309.72, flops:163.18, batch-reuse:1
@ 264 train 6.0009 , allloss: 6.0009, dt: 704.52ms, fracRes: 0.0064, norm(attn): 0.2432, norm(output): 0.7500, norm(x): 0.7575, norm(y): 0.9964, norm:0.4161, tok/sec: 186045.16, flops:162.95, batch-reuse:1
@ 265 train 6.0014 , allloss: 6.0014, dt: 699.03ms, fracRes: 0.0063, norm(attn): 0.2393, norm(output): 0.7500, norm(x): 0.7470, norm(y): 0.9963, norm:0.3449, tok/sec: 187504.48, flops:164.23, batch-reuse:1
@ 266 train 5.9442 , allloss: 5.9442, dt: 688.58ms, fracRes: 0.0065, norm(attn): 0.2383, norm(output): 0.7461, norm(x): 0.7420, norm(y): 0.9963, norm:0.3549, tok/sec: 190351.48, flops:166.72, batch-reuse:1
@ 267 train 5.9843 , allloss: 5.9843, dt: 700.35ms, fracRes: 0.0065, norm(attn): 0.2354, norm(output): 0.7461, norm(x): 0.7472, norm(y): 0.9963, norm:0.3267, tok/sec: 187153.02, flops:163.92, batch-reuse:1
@ 268 train 6.0655 , allloss: 6.0655, dt: 701.99ms, fracRes: 0.0066, norm(attn): 0.2363, norm(output): 0.7500, norm(x): 0.7521, norm(y): 0.9963, norm:0.4152, tok/sec: 186715.00, flops:163.54, batch-reuse:1
@ 269 train 6.0128 , allloss: 6.0128, dt: 702.70ms, fracRes: 0.0068, norm(attn): 0.2285, norm(output): 0.7461, norm(x): 0.7508, norm(y): 0.9962, norm:0.3703, tok/sec: 186525.08, flops:163.37, batch-reuse:1
@ 270 train 6.0833 , allloss: 6.0833, dt: 687.66ms, fracRes: 0.0064, norm(attn): 0.2324, norm(output): 0.7500, norm(x): 0.7485, norm(y): 0.9963, norm:0.3136, tok/sec: 190605.04, flops:166.94, batch-reuse:1
@ 271 train 5.9613 , allloss: 5.9613, dt: 690.40ms, fracRes: 0.0063, norm(attn): 0.2363, norm(output): 0.7383, norm(x): 0.7387, norm(y): 0.9963, norm:0.4237, tok/sec: 189849.13, flops:166.28, batch-reuse:1
@ 272 train 5.9858 , allloss: 5.9858, dt: 704.17ms, fracRes: 0.0070, norm(attn): 0.2334, norm(output): 0.7305, norm(x): 0.7318, norm(y): 0.9962, norm:0.3528, tok/sec: 186136.94, flops:163.03, batch-reuse:1
@ 273 train 6.0176 , allloss: 6.0176, dt: 704.88ms, fracRes: 0.0066, norm(attn): 0.2363, norm(output): 0.7227, norm(x): 0.7235, norm(y): 0.9962, norm:0.4572, tok/sec: 185949.07, flops:162.86, batch-reuse:1
@ 274 train 5.9898 , allloss: 5.9898, dt: 698.72ms, fracRes: 0.0071, norm(attn): 0.2373, norm(output): 0.7461, norm(x): 0.7427, norm(y): 0.9962, norm:0.3395, tok/sec: 187587.97, flops:164.30, batch-reuse:1
@ 275 train 5.9716 , allloss: 5.9716, dt: 674.41ms, fracRes: 0.0074, norm(attn): 0.2344, norm(output): 0.7422, norm(x): 0.7419, norm(y): 0.9961, norm:0.2808, tok/sec: 194350.86, flops:170.22, batch-reuse:1
@ 276 train 5.9540 , allloss: 5.9540, dt: 692.41ms, fracRes: 0.0087, norm(attn): 0.2246, norm(output): 0.7266, norm(x): 0.7288, norm(y): 0.9961, norm:0.3750, tok/sec: 189299.03, flops:165.80, batch-reuse:1
@ 277 train 5.8001 , allloss: 5.8001, dt: 707.73ms, fracRes: 0.0091, norm(attn): 0.2236, norm(output): 0.7305, norm(x): 0.7360, norm(y): 0.9961, norm:0.4918, tok/sec: 185199.31, flops:162.21, batch-reuse:1
@ 278 train 5.9542 , allloss: 5.9542, dt: 700.83ms, fracRes: 0.0080, norm(attn): 0.2266, norm(output): 0.7344, norm(x): 0.7313, norm(y): 0.9962, norm:0.4560, tok/sec: 187022.75, flops:163.80, batch-reuse:1
@ 279 train 5.8542 , allloss: 5.8542, dt: 698.27ms, fracRes: 0.0082, norm(attn): 0.2383, norm(output): 0.7383, norm(x): 0.7381, norm(y): 0.9962, norm:0.3544, tok/sec: 187709.99, flops:164.41, batch-reuse:1
@ 280 train 5.9875 , allloss: 5.9875, dt: 700.05ms, fracRes: 0.0081, norm(attn): 0.2480, norm(output): 0.7383, norm(x): 0.7355, norm(y): 0.9962, norm:0.5051, tok/sec: 187231.29, flops:163.99, batch-reuse:1
@ 281 train 5.8931 , allloss: 5.8931, dt: 697.08ms, fracRes: 0.0079, norm(attn): 0.2344, norm(output): 0.7266, norm(x): 0.7312, norm(y): 0.9961, norm:0.3974, tok/sec: 188028.75, flops:164.69, batch-reuse:1
@ 282 train 5.8742 , allloss: 5.8742, dt: 699.17ms, fracRes: 0.0080, norm(attn): 0.2451, norm(output): 0.7461, norm(x): 0.7441, norm(y): 0.9961, norm:0.4501, tok/sec: 187466.82, flops:164.19, batch-reuse:1
@ 283 train 5.8296 , allloss: 5.8296, dt: 696.38ms, fracRes: 0.0076, norm(attn): 0.2520, norm(output): 0.7500, norm(x): 0.7501, norm(y): 0.9961, norm:0.4126, tok/sec: 188219.10, flops:164.85, batch-reuse:1
@ 284 train 5.9028 , allloss: 5.9028, dt: 695.92ms, fracRes: 0.0077, norm(attn): 0.2520, norm(output): 0.7305, norm(x): 0.7376, norm(y): 0.9961, norm:0.3410, tok/sec: 188343.75, flops:164.96, batch-reuse:1
@ 285 train 5.9229 , allloss: 5.9229, dt: 695.61ms, fracRes: 0.0079, norm(attn): 0.2500, norm(output): 0.7266, norm(x): 0.7261, norm(y): 0.9962, norm:0.3263, tok/sec: 188427.86, flops:165.04, batch-reuse:1
@ 286 train 5.9009 , allloss: 5.9009, dt: 686.48ms, fracRes: 0.0077, norm(attn): 0.2402, norm(output): 0.7188, norm(x): 0.7220, norm(y): 0.9961, norm:0.4212, tok/sec: 190934.17, flops:167.23, batch-reuse:1
@ 287 train 5.9321 , allloss: 5.9321, dt: 690.35ms, fracRes: 0.0086, norm(attn): 0.2441, norm(output): 0.7344, norm(x): 0.7328, norm(y): 0.9960, norm:0.3908, tok/sec: 189863.62, flops:166.29, batch-reuse:1
@ 288 train 5.8826 , allloss: 5.8826, dt: 692.06ms, fracRes: 0.0084, norm(attn): 0.2373, norm(output): 0.7383, norm(x): 0.7365, norm(y): 0.9959, norm:0.4648, tok/sec: 189394.31, flops:165.88, batch-reuse:1
@ 289 train 5.8814 , allloss: 5.8814, dt: 692.16ms, fracRes: 0.0088, norm(attn): 0.2314, norm(output): 0.7344, norm(x): 0.7321, norm(y): 0.9959, norm:0.3025, tok/sec: 189367.63, flops:165.86, batch-reuse:1
@ 290 train 5.9035 , allloss: 5.9035, dt: 702.73ms, fracRes: 0.0098, norm(attn): 0.2314, norm(output): 0.7148, norm(x): 0.7199, norm(y): 0.9959, norm:0.3656, tok/sec: 186517.93, flops:163.36, batch-reuse:1
@ 291 train 5.7983 , allloss: 5.7983, dt: 694.79ms, fracRes: 0.0099, norm(attn): 0.2314, norm(output): 0.7031, norm(x): 0.7159, norm(y): 0.9959, norm:0.3276, tok/sec: 188650.23, flops:165.23, batch-reuse:1
@ 292 train 5.8189 , allloss: 5.8189, dt: 706.20ms, fracRes: 0.0104, norm(attn): 0.2334, norm(output): 0.7070, norm(x): 0.7156, norm(y): 0.9959, norm:0.3728, tok/sec: 185603.10, flops:162.56, batch-reuse:1
@ 293 train 5.8846 , allloss: 5.8846, dt: 702.35ms, fracRes: 0.0108, norm(attn): 0.2383, norm(output): 0.7148, norm(x): 0.7224, norm(y): 0.9958, norm:0.3126, tok/sec: 186620.44, flops:163.45, batch-reuse:1
@ 294 train 5.8915 , allloss: 5.8915, dt: 702.55ms, fracRes: 0.0092, norm(attn): 0.2334, norm(output): 0.6992, norm(x): 0.7105, norm(y): 0.9958, norm:0.3816, tok/sec: 186565.15, flops:163.40, batch-reuse:1
@ 295 train 5.8964 , allloss: 5.8964, dt: 699.57ms, fracRes: 0.0095, norm(attn): 0.2354, norm(output): 0.7109, norm(x): 0.7188, norm(y): 0.9959, norm:0.4283, tok/sec: 187359.74, flops:164.10, batch-reuse:1
@ 296 train 5.8024 , allloss: 5.8024, dt: 695.43ms, fracRes: 0.0094, norm(attn): 0.2432, norm(output): 0.7266, norm(x): 0.7225, norm(y): 0.9959, norm:0.4503, tok/sec: 188477.15, flops:165.08, batch-reuse:1
@ 297 train 5.7813 , allloss: 5.7813, dt: 708.80ms, fracRes: 0.0095, norm(attn): 0.2480, norm(output): 0.7344, norm(x): 0.7318, norm(y): 0.9959, norm:0.3854, tok/sec: 184921.97, flops:161.96, batch-reuse:1
@ 298 train 5.8408 , allloss: 5.8408, dt: 711.63ms, fracRes: 0.0092, norm(attn): 0.2441, norm(output): 0.7109, norm(x): 0.7174, norm(y): 0.9959, norm:0.4341, tok/sec: 184184.59, flops:161.32, batch-reuse:1
@ 299 train 5.8277 , allloss: 5.8277, dt: 701.71ms, fracRes: 0.0094, norm(attn): 0.2480, norm(output): 0.7266, norm(x): 0.7278, norm(y): 0.9959, norm:0.3633, tok/sec: 186790.43, flops:163.60, batch-reuse:1
@ 300 train 5.8297 , allloss: 5.8297, dt: 688.40ms, fracRes: 0.0096, norm(attn): 0.2412, norm(output): 0.7188, norm(x): 0.7223, norm(y): 0.9958, norm:0.3792, tok/sec: 190401.19, flops:166.76, batch-reuse:1
@ 301 train 5.9396 , allloss: 5.9396, dt: 681.65ms, fracRes: 0.0096, norm(attn): 0.2490, norm(output): 0.7188, norm(x): 0.7212, norm(y): 0.9958, norm:0.4098, tok/sec: 192287.73, flops:168.42, batch-reuse:1
@ 302 train 5.8067 , allloss: 5.8067, dt: 696.69ms, fracRes: 0.0103, norm(attn): 0.2441, norm(output): 0.7109, norm(x): 0.7195, norm(y): 0.9958, norm:0.4617, tok/sec: 188134.60, flops:164.78, batch-reuse:1
@ 303 train 5.8404 , allloss: 5.8404, dt: 689.52ms, fracRes: 0.0108, norm(attn): 0.2539, norm(output): 0.7227, norm(x): 0.7258, norm(y): 0.9958, norm:0.5397, tok/sec: 190091.23, flops:166.49, batch-reuse:1
@ 304 train 5.7887 , allloss: 5.7887, dt: 701.24ms, fracRes: 0.0106, norm(attn): 0.2383, norm(output): 0.7188, norm(x): 0.7284, norm(y): 0.9957, norm:0.5226, tok/sec: 186915.35, flops:163.71, batch-reuse:1
@ 305 train 5.7641 , allloss: 5.7641, dt: 700.57ms, fracRes: 0.0116, norm(attn): 0.2490, norm(output): 0.7305, norm(x): 0.7355, norm(y): 0.9958, norm:0.3626, tok/sec: 187092.70, flops:163.87, batch-reuse:1
@ 306 train 5.7799 , allloss: 5.7799, dt: 689.06ms, fracRes: 0.0118, norm(attn): 0.2520, norm(output): 0.7344, norm(x): 0.7366, norm(y): 0.9958, norm:0.3626, tok/sec: 190219.82, flops:166.61, batch-reuse:1
@ 307 train 5.9132 , allloss: 5.9132, dt: 695.56ms, fracRes: 0.0112, norm(attn): 0.2656, norm(output): 0.7422, norm(x): 0.7401, norm(y): 0.9958, norm:0.4688, tok/sec: 188441.10, flops:165.05, batch-reuse:1
@ 308 train 5.7819 , allloss: 5.7819, dt: 696.63ms, fracRes: 0.0105, norm(attn): 0.2676, norm(output): 0.7461, norm(x): 0.7473, norm(y): 0.9958, norm:0.3738, tok/sec: 188150.37, flops:164.79, batch-reuse:1
@ 309 train 5.8118 , allloss: 5.8118, dt: 709.47ms, fracRes: 0.0098, norm(attn): 0.2734, norm(output): 0.7500, norm(x): 0.7518, norm(y): 0.9957, norm:0.3281, tok/sec: 184746.85, flops:161.81, batch-reuse:1
@ 310 train 5.8673 , allloss: 5.8673, dt: 707.05ms, fracRes: 0.0102, norm(attn): 0.2754, norm(output): 0.7422, norm(x): 0.7440, norm(y): 0.9957, norm:0.3992, tok/sec: 185377.54, flops:162.36, batch-reuse:1
@ 311 train 5.9010 , allloss: 5.9010, dt: 706.04ms, fracRes: 0.0104, norm(attn): 0.2754, norm(output): 0.7305, norm(x): 0.7355, norm(y): 0.9957, norm:0.3424, tok/sec: 185644.52, flops:162.60, batch-reuse:1
@ 312 train 5.9133 , allloss: 5.9133, dt: 706.00ms, fracRes: 0.0103, norm(attn): 0.2754, norm(output): 0.7383, norm(x): 0.7379, norm(y): 0.9957, norm:0.3688, tok/sec: 185654.30, flops:162.61, batch-reuse:1
@ 313 train 5.7820 , allloss: 5.7820, dt: 709.97ms, fracRes: 0.0102, norm(attn): 0.2754, norm(output): 0.7344, norm(x): 0.7350, norm(y): 0.9958, norm:0.3094, tok/sec: 184615.51, flops:161.70, batch-reuse:1
@ 314 train 5.7810 , allloss: 5.7810, dt: 691.68ms, fracRes: 0.0102, norm(attn): 0.2773, norm(output): 0.7344, norm(x): 0.7342, norm(y): 0.9957, norm:0.3996, tok/sec: 189496.87, flops:165.97, batch-reuse:1
@ 315 train 5.7767 , allloss: 5.7767, dt: 701.08ms, fracRes: 0.0109, norm(attn): 0.2637, norm(output): 0.7266, norm(x): 0.7247, norm(y): 0.9956, norm:0.4278, tok/sec: 186956.61, flops:163.75, batch-reuse:1
@ 316 train 5.8129 , allloss: 5.8129, dt: 703.71ms, fracRes: 0.0115, norm(attn): 0.2656, norm(output): 0.7461, norm(x): 0.7487, norm(y): 0.9957, norm:0.4746, tok/sec: 186257.32, flops:163.13, batch-reuse:1
@ 317 train 5.8699 , allloss: 5.8699, dt: 694.05ms, fracRes: 0.0116, norm(attn): 0.2656, norm(output): 0.7383, norm(x): 0.7423, norm(y): 0.9957, norm:0.5001, tok/sec: 188849.76, flops:165.41, batch-reuse:1
@ 318 train 5.7325 , allloss: 5.7325, dt: 706.36ms, fracRes: 0.0121, norm(attn): 0.2773, norm(output): 0.7461, norm(x): 0.7460, norm(y): 0.9958, norm:0.4500, tok/sec: 185560.81, flops:162.52, batch-reuse:1
@ 319 train 5.6845 , allloss: 5.6845, dt: 709.13ms, fracRes: 0.0119, norm(attn): 0.2773, norm(output): 0.7461, norm(x): 0.7495, norm(y): 0.9959, norm:0.3266, tok/sec: 184835.55, flops:161.89, batch-reuse:1
@ 320 train 5.7778 , allloss: 5.7778, dt: 694.16ms, fracRes: 0.0121, norm(attn): 0.2773, norm(output): 0.7461, norm(x): 0.7462, norm(y): 0.9958, norm:0.3544, tok/sec: 188820.38, flops:165.38, batch-reuse:1
@ 321 train 5.8192 , allloss: 5.8192, dt: 686.11ms, fracRes: 0.0125, norm(attn): 0.2812, norm(output): 0.7461, norm(x): 0.7491, norm(y): 0.9957, norm:0.4209, tok/sec: 191036.88, flops:167.32, batch-reuse:1
@ 322 train 5.7205 , allloss: 5.7205, dt: 699.11ms, fracRes: 0.0116, norm(attn): 0.2656, norm(output): 0.7461, norm(x): 0.7471, norm(y): 0.9957, norm:0.3970, tok/sec: 187483.82, flops:164.21, batch-reuse:1
@ 323 train 5.7980 , allloss: 5.7980, dt: 699.97ms, fracRes: 0.0123, norm(attn): 0.2754, norm(output): 0.7461, norm(x): 0.7442, norm(y): 0.9957, norm:0.3454, tok/sec: 187254.76, flops:164.01, batch-reuse:1
@ 324 train 5.6787 , allloss: 5.6787, dt: 693.74ms, fracRes: 0.0130, norm(attn): 0.2734, norm(output): 0.7344, norm(x): 0.7337, norm(y): 0.9958, norm:0.3426, tok/sec: 188934.78, flops:165.48, batch-reuse:1
@ 325 train 5.7043 , allloss: 5.7043, dt: 701.14ms, fracRes: 0.0130, norm(attn): 0.2656, norm(output): 0.7344, norm(x): 0.7325, norm(y): 0.9957, norm:0.3582, tok/sec: 186940.27, flops:163.73, batch-reuse:1
@ 326 train 5.7823 , allloss: 5.7823, dt: 703.96ms, fracRes: 0.0138, norm(attn): 0.2637, norm(output): 0.7383, norm(x): 0.7370, norm(y): 0.9958, norm:0.3269, tok/sec: 186192.10, flops:163.08, batch-reuse:1
@ 327 train 5.8039 , allloss: 5.8039, dt: 708.15ms, fracRes: 0.0129, norm(attn): 0.2676, norm(output): 0.7422, norm(x): 0.7387, norm(y): 0.9957, norm:0.3969, tok/sec: 185090.32, flops:162.11, batch-reuse:1
@ 328 train 5.7716 , allloss: 5.7716, dt: 692.43ms, fracRes: 0.0130, norm(attn): 0.2656, norm(output): 0.7422, norm(x): 0.7356, norm(y): 0.9957, norm:0.3902, tok/sec: 189293.62, flops:165.79, batch-reuse:1
@ 329 train 5.7102 , allloss: 5.7102, dt: 697.98ms, fracRes: 0.0122, norm(attn): 0.2637, norm(output): 0.7383, norm(x): 0.7353, norm(y): 0.9957, norm:0.3832, tok/sec: 187787.64, flops:164.47, batch-reuse:1
@ 330 train 5.7118 , allloss: 5.7118, dt: 698.44ms, fracRes: 0.0121, norm(attn): 0.2617, norm(output): 0.7305, norm(x): 0.7313, norm(y): 0.9957, norm:0.3092, tok/sec: 187664.37, flops:164.37, batch-reuse:1
@ 331 train 5.6926 , allloss: 5.6926, dt: 706.56ms, fracRes: 0.0127, norm(attn): 0.2539, norm(output): 0.7227, norm(x): 0.7266, norm(y): 0.9957, norm:0.3256, tok/sec: 185507.96, flops:162.48, batch-reuse:1
@ 332 train 5.6325 , allloss: 5.6325, dt: 692.45ms, fracRes: 0.0130, norm(attn): 0.2617, norm(output): 0.7227, norm(x): 0.7235, norm(y): 0.9957, norm:0.3477, tok/sec: 189287.17, flops:165.79, batch-reuse:1
@ 333 train 5.7333 , allloss: 5.7333, dt: 693.88ms, fracRes: 0.0130, norm(attn): 0.2637, norm(output): 0.7227, norm(x): 0.7256, norm(y): 0.9957, norm:0.4636, tok/sec: 188897.00, flops:165.45, batch-reuse:1
@ 334 train 5.6489 , allloss: 5.6489, dt: 696.55ms, fracRes: 0.0122, norm(attn): 0.2598, norm(output): 0.7031, norm(x): 0.7164, norm(y): 0.9956, norm:0.4157, tok/sec: 188173.55, flops:164.81, batch-reuse:1
@ 335 train 5.6241 , allloss: 5.6241, dt: 701.94ms, fracRes: 0.0118, norm(attn): 0.2695, norm(output): 0.7188, norm(x): 0.7259, norm(y): 0.9956, norm:0.3941, tok/sec: 186727.12, flops:163.55, batch-reuse:1
@ 336 train 5.6928 , allloss: 5.6928, dt: 698.93ms, fracRes: 0.0125, norm(attn): 0.2656, norm(output): 0.7031, norm(x): 0.7159, norm(y): 0.9956, norm:0.4045, tok/sec: 187533.45, flops:164.25, batch-reuse:1
@ 337 train 5.6547 , allloss: 5.6547, dt: 703.12ms, fracRes: 0.0126, norm(attn): 0.2656, norm(output): 0.7070, norm(x): 0.7171, norm(y): 0.9957, norm:0.3962, tok/sec: 186416.10, flops:163.27, batch-reuse:1
@ 338 train 5.6455 , allloss: 5.6455, dt: 696.87ms, fracRes: 0.0131, norm(attn): 0.2656, norm(output): 0.7148, norm(x): 0.7168, norm(y): 0.9957, norm:0.3229, tok/sec: 188087.41, flops:164.74, batch-reuse:1
@ 339 train 5.7254 , allloss: 5.7254, dt: 696.95ms, fracRes: 0.0133, norm(attn): 0.2695, norm(output): 0.7109, norm(x): 0.7181, norm(y): 0.9956, norm:0.3620, tok/sec: 188066.37, flops:164.72, batch-reuse:1
@ 340 train 5.6841 , allloss: 5.6841, dt: 695.47ms, fracRes: 0.0126, norm(attn): 0.2637, norm(output): 0.7109, norm(x): 0.7193, norm(y): 0.9956, norm:0.3536, tok/sec: 188464.17, flops:165.07, batch-reuse:1
@ 341 train 5.6484 , allloss: 5.6484, dt: 698.73ms, fracRes: 0.0128, norm(attn): 0.2637, norm(output): 0.7070, norm(x): 0.7192, norm(y): 0.9956, norm:0.5122, tok/sec: 187585.99, flops:164.30, batch-reuse:1
@ 342 train 5.5797 , allloss: 5.5797, dt: 696.11ms, fracRes: 0.0128, norm(attn): 0.2598, norm(output): 0.7109, norm(x): 0.7173, norm(y): 0.9956, norm:0.4943, tok/sec: 188292.92, flops:164.92, batch-reuse:1
@ 343 train 5.6666 , allloss: 5.6666, dt: 699.17ms, fracRes: 0.0136, norm(attn): 0.2637, norm(output): 0.7188, norm(x): 0.7215, norm(y): 0.9957, norm:0.4643, tok/sec: 187468.80, flops:164.20, batch-reuse:1
@ 344 train 5.6234 , allloss: 5.6234, dt: 699.37ms, fracRes: 0.0137, norm(attn): 0.2578, norm(output): 0.7109, norm(x): 0.7164, norm(y): 0.9956, norm:0.3727, tok/sec: 187414.67, flops:164.15, batch-reuse:1
@ 345 train 5.5952 , allloss: 5.5952, dt: 698.33ms, fracRes: 0.0131, norm(attn): 0.2578, norm(output): 0.7070, norm(x): 0.7127, norm(y): 0.9956, norm:0.3434, tok/sec: 187692.75, flops:164.39, batch-reuse:1
@ 346 train 5.6603 , allloss: 5.6603, dt: 702.83ms, fracRes: 0.0135, norm(attn): 0.2617, norm(output): 0.7109, norm(x): 0.7165, norm(y): 0.9955, norm:0.3979, tok/sec: 186491.80, flops:163.34, batch-reuse:1
@ 347 train 5.6487 , allloss: 5.6487, dt: 691.23ms, fracRes: 0.0135, norm(attn): 0.2676, norm(output): 0.6953, norm(x): 0.7052, norm(y): 0.9956, norm:0.3424, tok/sec: 189620.21, flops:166.08, batch-reuse:1
@ 348 train 5.6636 , allloss: 5.6636, dt: 701.67ms, fracRes: 0.0143, norm(attn): 0.2656, norm(output): 0.7031, norm(x): 0.7111, norm(y): 0.9955, norm:0.4240, tok/sec: 186799.64, flops:163.61, batch-reuse:1
@ 349 train 5.7040 , allloss: 5.7040, dt: 704.10ms, fracRes: 0.0135, norm(attn): 0.2695, norm(output): 0.6992, norm(x): 0.7096, norm(y): 0.9956, norm:0.3174, tok/sec: 186156.54, flops:163.05, batch-reuse:1
@ 350 train 5.6843 , allloss: 5.6843, dt: 706.25ms, fracRes: 0.0138, norm(attn): 0.2734, norm(output): 0.7070, norm(x): 0.7163, norm(y): 0.9956, norm:0.3385, tok/sec: 185587.56, flops:162.55, batch-reuse:1
@ 351 train 5.6923 , allloss: 5.6923, dt: 707.87ms, fracRes: 0.0138, norm(attn): 0.2773, norm(output): 0.7031, norm(x): 0.7157, norm(y): 0.9955, norm:0.3618, tok/sec: 185163.63, flops:162.18, batch-reuse:1
@ 352 train 5.6851 , allloss: 5.6851, dt: 703.21ms, fracRes: 0.0141, norm(attn): 0.2793, norm(output): 0.6914, norm(x): 0.7073, norm(y): 0.9956, norm:0.3450, tok/sec: 186391.45, flops:163.25, batch-reuse:1
@ 353 train 5.6588 , allloss: 5.6588, dt: 695.82ms, fracRes: 0.0131, norm(attn): 0.2793, norm(output): 0.6953, norm(x): 0.7091, norm(y): 0.9956, norm:0.4185, tok/sec: 188369.82, flops:164.98, batch-reuse:1
@ 354 train 5.6524 , allloss: 5.6524, dt: 709.96ms, fracRes: 0.0129, norm(attn): 0.2793, norm(output): 0.7031, norm(x): 0.7119, norm(y): 0.9956, norm:0.4587, tok/sec: 184619.60, flops:161.70, batch-reuse:1
@ 355 train 5.6423 , allloss: 5.6423, dt: 711.17ms, fracRes: 0.0126, norm(attn): 0.2773, norm(output): 0.6953, norm(x): 0.7055, norm(y): 0.9956, norm:0.4860, tok/sec: 184305.24, flops:161.42, batch-reuse:1
@ 356 train 5.6647 , allloss: 5.6647, dt: 684.55ms, fracRes: 0.0123, norm(attn): 0.2715, norm(output): 0.6875, norm(x): 0.6969, norm(y): 0.9956, norm:0.3472, tok/sec: 191470.42, flops:167.70, batch-reuse:1
@ 357 train 5.6804 , allloss: 5.6804, dt: 693.53ms, fracRes: 0.0127, norm(attn): 0.2695, norm(output): 0.6914, norm(x): 0.6966, norm(y): 0.9956, norm:0.3765, tok/sec: 188992.46, flops:165.53, batch-reuse:1
@ 358 train 5.6211 , allloss: 5.6211, dt: 708.57ms, fracRes: 0.0126, norm(attn): 0.2754, norm(output): 0.6875, norm(x): 0.6944, norm(y): 0.9956, norm:0.4440, tok/sec: 184980.64, flops:162.02, batch-reuse:1
@ 359 train 5.7715 , allloss: 5.7715, dt: 710.62ms, fracRes: 0.0129, norm(attn): 0.2773, norm(output): 0.6953, norm(x): 0.7005, norm(y): 0.9954, norm:0.6227, tok/sec: 184447.40, flops:161.55, batch-reuse:1
@ 360 train 5.6516 , allloss: 5.6516, dt: 696.53ms, fracRes: 0.0128, norm(attn): 0.2832, norm(output): 0.7266, norm(x): 0.7203, norm(y): 0.9954, norm:0.4814, tok/sec: 188177.55, flops:164.82, batch-reuse:1
@ 361 train 5.6682 , allloss: 5.6682, dt: 691.33ms, fracRes: 0.0133, norm(attn): 0.2793, norm(output): 0.7070, norm(x): 0.7193, norm(y): 0.9955, norm:0.5058, tok/sec: 189593.39, flops:166.06, batch-reuse:1
@ 362 train 5.6119 , allloss: 5.6119, dt: 690.51ms, fracRes: 0.0144, norm(attn): 0.2715, norm(output): 0.7227, norm(x): 0.7267, norm(y): 0.9955, norm:0.4801, tok/sec: 189817.86, flops:166.25, batch-reuse:1
@ 363 train 5.6456 , allloss: 5.6456, dt: 691.27ms, fracRes: 0.0153, norm(attn): 0.2773, norm(output): 0.7109, norm(x): 0.7227, norm(y): 0.9954, norm:0.4773, tok/sec: 189610.13, flops:166.07, batch-reuse:1
@ 364 train 5.6507 , allloss: 5.6507, dt: 689.66ms, fracRes: 0.0155, norm(attn): 0.2812, norm(output): 0.7188, norm(x): 0.7235, norm(y): 0.9954, norm:0.5960, tok/sec: 190054.10, flops:166.46, batch-reuse:1
@ 365 train 5.6473 , allloss: 5.6473, dt: 687.59ms, fracRes: 0.0146, norm(attn): 0.2754, norm(output): 0.7070, norm(x): 0.7123, norm(y): 0.9954, norm:0.5750, tok/sec: 190625.00, flops:166.96, batch-reuse:1
@ 366 train 5.7241 , allloss: 5.7241, dt: 698.16ms, fracRes: 0.0149, norm(attn): 0.2812, norm(output): 0.7070, norm(x): 0.7162, norm(y): 0.9955, norm:0.4215, tok/sec: 187739.67, flops:164.43, batch-reuse:1
@ 367 train 5.5945 , allloss: 5.5945, dt: 686.18ms, fracRes: 0.0141, norm(attn): 0.2910, norm(output): 0.7266, norm(x): 0.7297, norm(y): 0.9955, norm:0.3999, tok/sec: 191017.77, flops:167.30, batch-reuse:1
@ 368 train 5.7084 , allloss: 5.7084, dt: 693.42ms, fracRes: 0.0134, norm(attn): 0.2871, norm(output): 0.7344, norm(x): 0.7393, norm(y): 0.9954, norm:0.3872, tok/sec: 189021.24, flops:165.56, batch-reuse:1
@ 369 train 5.5945 , allloss: 5.5945, dt: 690.97ms, fracRes: 0.0134, norm(attn): 0.2832, norm(output): 0.7344, norm(x): 0.7354, norm(y): 0.9954, norm:0.3813, tok/sec: 189693.75, flops:166.14, batch-reuse:1
@ 370 train 5.7611 , allloss: 5.7611, dt: 684.09ms, fracRes: 0.0135, norm(attn): 0.2793, norm(output): 0.7266, norm(x): 0.7320, norm(y): 0.9954, norm:0.4898, tok/sec: 191600.01, flops:167.81, batch-reuse:1
@ 371 train 5.7296 , allloss: 5.7296, dt: 695.32ms, fracRes: 0.0136, norm(attn): 0.2969, norm(output): 0.7422, norm(x): 0.7398, norm(y): 0.9954, norm:0.5836, tok/sec: 188506.88, flops:165.10, batch-reuse:1
@ 372 train 5.7783 , allloss: 5.7783, dt: 698.79ms, fracRes: 0.0131, norm(attn): 0.3008, norm(output): 0.7344, norm(x): 0.7379, norm(y): 0.9954, norm:0.4614, tok/sec: 187570.88, flops:164.29, batch-reuse:1
@ 373 train 5.6961 , allloss: 5.6961, dt: 698.30ms, fracRes: 0.0135, norm(attn): 0.3008, norm(output): 0.7305, norm(x): 0.7318, norm(y): 0.9954, norm:0.3931, tok/sec: 187701.14, flops:164.40, batch-reuse:1
@ 374 train 5.7447 , allloss: 5.7447, dt: 696.24ms, fracRes: 0.0131, norm(attn): 0.2969, norm(output): 0.7227, norm(x): 0.7302, norm(y): 0.9954, norm:0.3335, tok/sec: 188257.32, flops:164.89, batch-reuse:1
@ 375 train 5.8379 , allloss: 5.8379, dt: 698.40ms, fracRes: 0.0137, norm(attn): 0.2891, norm(output): 0.7266, norm(x): 0.7276, norm(y): 0.9954, norm:0.3519, tok/sec: 187676.02, flops:164.38, batch-reuse:1
@ 376 train 5.8718 , allloss: 5.8718, dt: 697.73ms, fracRes: 0.0136, norm(attn): 0.2871, norm(output): 0.7266, norm(x): 0.7238, norm(y): 0.9954, norm:0.4157, tok/sec: 187854.88, flops:164.53, batch-reuse:1
@ 377 train 5.7558 , allloss: 5.7558, dt: 686.51ms, fracRes: 0.0136, norm(attn): 0.2812, norm(output): 0.7188, norm(x): 0.7221, norm(y): 0.9953, norm:0.3984, tok/sec: 190924.96, flops:167.22, batch-reuse:1
@ 378 train 5.7211 , allloss: 5.7211, dt: 697.00ms, fracRes: 0.0134, norm(attn): 0.2812, norm(output): 0.6992, norm(x): 0.7087, norm(y): 0.9952, norm:0.4574, tok/sec: 188052.48, flops:164.71, batch-reuse:1
@ 379 train 5.8375 , allloss: 5.8375, dt: 694.10ms, fracRes: 0.0135, norm(attn): 0.2812, norm(output): 0.7031, norm(x): 0.7106, norm(y): 0.9953, norm:0.4155, tok/sec: 188837.30, flops:165.39, batch-reuse:1
@ 380 train 5.8467 , allloss: 5.8467, dt: 690.98ms, fracRes: 0.0134, norm(attn): 0.2793, norm(output): 0.7070, norm(x): 0.7142, norm(y): 0.9952, norm:0.4454, tok/sec: 189691.13, flops:166.14, batch-reuse:1
@ 381 train 5.7654 , allloss: 5.7654, dt: 691.38ms, fracRes: 0.0136, norm(attn): 0.2832, norm(output): 0.7109, norm(x): 0.7215, norm(y): 0.9953, norm:0.3772, tok/sec: 189579.47, flops:166.04, batch-reuse:1
@ 382 train 5.7303 , allloss: 5.7303, dt: 696.20ms, fracRes: 0.0134, norm(attn): 0.2852, norm(output): 0.7188, norm(x): 0.7229, norm(y): 0.9953, norm:0.3830, tok/sec: 188268.93, flops:164.90, batch-reuse:1
@ 383 train 5.7459 , allloss: 5.7459, dt: 699.78ms, fracRes: 0.0138, norm(attn): 0.2910, norm(output): 0.7148, norm(x): 0.7221, norm(y): 0.9953, norm:0.3319, tok/sec: 187304.84, flops:164.05, batch-reuse:1
@ 384 train 5.6986 , allloss: 5.6986, dt: 703.87ms, fracRes: 0.0143, norm(attn): 0.2891, norm(output): 0.7070, norm(x): 0.7159, norm(y): 0.9953, norm:0.3921, tok/sec: 186217.26, flops:163.10, batch-reuse:1
@ 385 train 5.6961 , allloss: 5.6961, dt: 707.48ms, fracRes: 0.0140, norm(attn): 0.2930, norm(output): 0.7070, norm(x): 0.7170, norm(y): 0.9952, norm:0.3285, tok/sec: 185264.97, flops:162.27, batch-reuse:1
@ 386 train 5.8020 , allloss: 5.8020, dt: 704.03ms, fracRes: 0.0138, norm(attn): 0.2930, norm(output): 0.7227, norm(x): 0.7179, norm(y): 0.9952, norm:0.3917, tok/sec: 186172.68, flops:163.06, batch-reuse:1
@ 387 train 5.7392 , allloss: 5.7392, dt: 716.28ms, fracRes: 0.0141, norm(attn): 0.2969, norm(output): 0.7109, norm(x): 0.7170, norm(y): 0.9953, norm:0.3918, tok/sec: 182989.04, flops:160.27, batch-reuse:1
@ 388 train 5.6133 , allloss: 5.6133, dt: 704.36ms, fracRes: 0.0143, norm(attn): 0.2949, norm(output): 0.7070, norm(x): 0.7174, norm(y): 0.9953, norm:0.3748, tok/sec: 186087.22, flops:162.99, batch-reuse:1
@ 389 train 5.6860 , allloss: 5.6860, dt: 698.03ms, fracRes: 0.0139, norm(attn): 0.2988, norm(output): 0.7031, norm(x): 0.7124, norm(y): 0.9953, norm:0.3445, tok/sec: 187773.33, flops:164.46, batch-reuse:1
@ 390 train 5.7368 , allloss: 5.7368, dt: 698.05ms, fracRes: 0.0132, norm(attn): 0.2930, norm(output): 0.7031, norm(x): 0.7119, norm(y): 0.9952, norm:0.3441, tok/sec: 187770.06, flops:164.46, batch-reuse:1
@ 391 train 5.6620 , allloss: 5.6620, dt: 684.13ms, fracRes: 0.0124, norm(attn): 0.2949, norm(output): 0.7070, norm(x): 0.7185, norm(y): 0.9952, norm:0.4199, tok/sec: 191588.53, flops:167.80, batch-reuse:1
@ 392 train 5.7843 , allloss: 5.7843, dt: 693.95ms, fracRes: 0.0127, norm(attn): 0.2910, norm(output): 0.7070, norm(x): 0.7137, norm(y): 0.9951, norm:0.5369, tok/sec: 188877.33, flops:165.43, batch-reuse:1
@ 393 train 5.7412 , allloss: 5.7412, dt: 696.76ms, fracRes: 0.0126, norm(attn): 0.2930, norm(output): 0.7188, norm(x): 0.7202, norm(y): 0.9951, norm:0.6982, tok/sec: 188116.05, flops:164.76, batch-reuse:1
@ 394 train 5.6983 , allloss: 5.6983, dt: 691.46ms, fracRes: 0.0128, norm(attn): 0.2871, norm(output): 0.7148, norm(x): 0.7213, norm(y): 0.9951, norm:0.7329, tok/sec: 189557.83, flops:166.03, batch-reuse:1
@ 395 train 5.7610 , allloss: 5.7610, dt: 699.57ms, fracRes: 0.0138, norm(attn): 0.2988, norm(output): 0.7148, norm(x): 0.7287, norm(y): 0.9951, norm:0.8865, tok/sec: 187361.08, flops:164.10, batch-reuse:1
@ 396 train 5.6510 , allloss: 5.6510, dt: 701.52ms, fracRes: 0.0147, norm(attn): 0.2988, norm(output): 0.7305, norm(x): 0.7360, norm(y): 0.9951, norm:0.5686, tok/sec: 186840.71, flops:163.65, batch-reuse:1
@ 397 train 5.7912 , allloss: 5.7912, dt: 696.39ms, fracRes: 0.0153, norm(attn): 0.3008, norm(output): 0.7500, norm(x): 0.7543, norm(y): 0.9951, norm:0.7300, tok/sec: 188216.27, flops:164.85, batch-reuse:1
@ 398 train 5.7458 , allloss: 5.7458, dt: 694.43ms, fracRes: 0.0154, norm(attn): 0.2949, norm(output): 0.7461, norm(x): 0.7500, norm(y): 0.9951, norm:0.4872, tok/sec: 188747.19, flops:165.32, batch-reuse:1
@ 399 train 5.7500 , allloss: 5.7500, dt: 690.20ms, fracRes: 0.0152, norm(attn): 0.3047, norm(output): 0.7461, norm(x): 0.7505, norm(y): 0.9951, norm:0.5329, tok/sec: 189905.53, flops:166.33, batch-reuse:1
@ 400 train 5.7805 , allloss: 5.7805, dt: 686.34ms, fracRes: 0.0155, norm(attn): 0.3086, norm(output): 0.7461, norm(x): 0.7462, norm(y): 0.9951, norm:0.5329, tok/sec: 190972.38, flops:167.26, batch-reuse:1
@ 401 train 5.6956 , allloss: 5.6956, dt: 696.63ms, fracRes: 0.0159, norm(attn): 0.3105, norm(output): 0.7422, norm(x): 0.7438, norm(y): 0.9950, norm:0.5218, tok/sec: 188150.69, flops:164.79, batch-reuse:1
@ 402 train 5.6986 , allloss: 5.6986, dt: 684.31ms, fracRes: 0.0158, norm(attn): 0.3125, norm(output): 0.7461, norm(x): 0.7466, norm(y): 0.9950, norm:0.3988, tok/sec: 191537.73, flops:167.76, batch-reuse:1
@ 403 train 5.7626 , allloss: 5.7626, dt: 708.66ms, fracRes: 0.0156, norm(attn): 0.3125, norm(output): 0.7500, norm(x): 0.7492, norm(y): 0.9950, norm:0.3850, tok/sec: 184958.24, flops:162.00, batch-reuse:1
@ 404 train 5.6510 , allloss: 5.6510, dt: 715.24ms, fracRes: 0.0156, norm(attn): 0.3145, norm(output): 0.7461, norm(x): 0.7458, norm(y): 0.9951, norm:0.4438, tok/sec: 183256.09, flops:160.51, batch-reuse:1
@ 405 train 5.6905 , allloss: 5.6905, dt: 692.19ms, fracRes: 0.0161, norm(attn): 0.3145, norm(output): 0.7344, norm(x): 0.7382, norm(y): 0.9952, norm:0.3322, tok/sec: 189357.98, flops:165.85, batch-reuse:1
@ 406 train 5.6829 , allloss: 5.6829, dt: 702.81ms, fracRes: 0.0162, norm(attn): 0.3164, norm(output): 0.7383, norm(x): 0.7405, norm(y): 0.9951, norm:0.3739, tok/sec: 186496.29, flops:163.34, batch-reuse:1
@ 407 train 5.6750 , allloss: 5.6750, dt: 705.60ms, fracRes: 0.0162, norm(attn): 0.3203, norm(output): 0.7344, norm(x): 0.7371, norm(y): 0.9951, norm:0.3847, tok/sec: 185760.32, flops:162.70, batch-reuse:1
@ 408 train 5.6634 , allloss: 5.6634, dt: 686.84ms, fracRes: 0.0166, norm(attn): 0.3125, norm(output): 0.7383, norm(x): 0.7341, norm(y): 0.9951, norm:0.3871, tok/sec: 190834.29, flops:167.14, batch-reuse:1
@ 409 train 5.6173 , allloss: 5.6173, dt: 684.61ms, fracRes: 0.0163, norm(attn): 0.3125, norm(output): 0.7305, norm(x): 0.7354, norm(y): 0.9951, norm:0.4451, tok/sec: 191453.75, flops:167.69, batch-reuse:1
@ 410 train 5.6921 , allloss: 5.6921, dt: 701.10ms, fracRes: 0.0165, norm(attn): 0.3086, norm(output): 0.7344, norm(x): 0.7380, norm(y): 0.9951, norm:0.5489, tok/sec: 186953.24, flops:163.74, batch-reuse:1
@ 411 train 5.7226 , allloss: 5.7226, dt: 698.57ms, fracRes: 0.0168, norm(attn): 0.3086, norm(output): 0.7500, norm(x): 0.7567, norm(y): 0.9952, norm:0.5113, tok/sec: 187627.99, flops:164.34, batch-reuse:1
@ 412 train 5.7092 , allloss: 5.7092, dt: 680.51ms, fracRes: 0.0163, norm(attn): 0.3047, norm(output): 0.7500, norm(x): 0.7610, norm(y): 0.9952, norm:0.4511, tok/sec: 192609.28, flops:168.70, batch-reuse:1
@ 413 train 5.3716 , allloss: 5.3716, dt: 695.96ms, fracRes: 0.0149, norm(attn): 0.3086, norm(output): 0.7461, norm(x): 0.7468, norm(y): 0.9952, norm:0.6690, tok/sec: 188332.84, flops:164.95, batch-reuse:1
@ 414 train 5.6735 , allloss: 5.6735, dt: 686.17ms, fracRes: 0.0153, norm(attn): 0.3105, norm(output): 0.7500, norm(x): 0.7559, norm(y): 0.9951, norm:0.6920, tok/sec: 191018.36, flops:167.30, batch-reuse:1
@ 415 train 5.6035 , allloss: 5.6035, dt: 704.77ms, fracRes: 0.0161, norm(attn): 0.3125, norm(output): 0.7500, norm(x): 0.7577, norm(y): 0.9952, norm:0.4339, tok/sec: 185978.70, flops:162.89, batch-reuse:1
@ 416 train 5.7440 , allloss: 5.7440, dt: 682.28ms, fracRes: 0.0167, norm(attn): 0.3223, norm(output): 0.7500, norm(x): 0.7516, norm(y): 0.9952, norm:0.5295, tok/sec: 192108.26, flops:168.26, batch-reuse:1
@ 417 train 5.6396 , allloss: 5.6396, dt: 702.88ms, fracRes: 0.0180, norm(attn): 0.3184, norm(output): 0.7422, norm(x): 0.7459, norm(y): 0.9951, norm:0.4342, tok/sec: 186479.72, flops:163.33, batch-reuse:1
@ 418 train 5.7102 , allloss: 5.7102, dt: 680.12ms, fracRes: 0.0180, norm(attn): 0.3223, norm(output): 0.7422, norm(x): 0.7393, norm(y): 0.9951, norm:0.4471, tok/sec: 192718.19, flops:168.79, batch-reuse:1
@ 419 train 5.6414 , allloss: 5.6414, dt: 694.50ms, fracRes: 0.0181, norm(attn): 0.3320, norm(output): 0.7461, norm(x): 0.7478, norm(y): 0.9951, norm:0.4753, tok/sec: 188729.24, flops:165.30, batch-reuse:1
@ 420 train 5.6148 , allloss: 5.6148, dt: 695.72ms, fracRes: 0.0177, norm(attn): 0.3262, norm(output): 0.7500, norm(x): 0.7646, norm(y): 0.9951, norm:0.4408, tok/sec: 188398.09, flops:165.01, batch-reuse:1
@ 421 train 5.6974 , allloss: 5.6974, dt: 717.83ms, fracRes: 0.0174, norm(attn): 0.3184, norm(output): 0.7500, norm(x): 0.7582, norm(y): 0.9951, norm:0.4267, tok/sec: 182593.69, flops:159.93, batch-reuse:1
@ 422 train 5.6308 , allloss: 5.6308, dt: 695.24ms, fracRes: 0.0172, norm(attn): 0.3145, norm(output): 0.7500, norm(x): 0.7531, norm(y): 0.9951, norm:0.4241, tok/sec: 188526.73, flops:165.12, batch-reuse:1
@ 423 train 5.5598 , allloss: 5.5598, dt: 703.23ms, fracRes: 0.0167, norm(attn): 0.3105, norm(output): 0.7461, norm(x): 0.7533, norm(y): 0.9950, norm:0.4429, tok/sec: 186386.84, flops:163.25, batch-reuse:1
@ 424 train 5.6622 , allloss: 5.6622, dt: 704.52ms, fracRes: 0.0178, norm(attn): 0.3105, norm(output): 0.7500, norm(x): 0.7525, norm(y): 0.9950, norm:0.3799, tok/sec: 186045.47, flops:162.95, batch-reuse:1
@ 425 train 5.6684 , allloss: 5.6684, dt: 693.36ms, fracRes: 0.0188, norm(attn): 0.3105, norm(output): 0.7383, norm(x): 0.7435, norm(y): 0.9950, norm:0.3746, tok/sec: 189038.66, flops:165.57, batch-reuse:1
@ 426 train 5.5353 , allloss: 5.5353, dt: 698.39ms, fracRes: 0.0192, norm(attn): 0.3008, norm(output): 0.7305, norm(x): 0.7348, norm(y): 0.9950, norm:0.3556, tok/sec: 187676.54, flops:164.38, batch-reuse:1
@ 427 train 5.6046 , allloss: 5.6046, dt: 697.51ms, fracRes: 0.0184, norm(attn): 0.2969, norm(output): 0.7266, norm(x): 0.7279, norm(y): 0.9949, norm:0.4204, tok/sec: 187913.25, flops:164.58, batch-reuse:1
@ 428 train 5.5541 , allloss: 5.5541, dt: 689.16ms, fracRes: 0.0173, norm(attn): 0.2969, norm(output): 0.7188, norm(x): 0.7268, norm(y): 0.9949, norm:0.3900, tok/sec: 190189.87, flops:166.58, batch-reuse:1
@ 429 train 5.5366 , allloss: 5.5366, dt: 698.03ms, fracRes: 0.0171, norm(attn): 0.2988, norm(output): 0.7383, norm(x): 0.7372, norm(y): 0.9949, norm:0.3706, tok/sec: 187775.06, flops:164.46, batch-reuse:1
@ 430 train 5.6070 , allloss: 5.6070, dt: 700.96ms, fracRes: 0.0172, norm(attn): 0.2969, norm(output): 0.7305, norm(x): 0.7346, norm(y): 0.9948, norm:0.3730, tok/sec: 186990.44, flops:163.78, batch-reuse:1
@ 431 train 5.5928 , allloss: 5.5928, dt: 705.31ms, fracRes: 0.0180, norm(attn): 0.3008, norm(output): 0.7188, norm(x): 0.7252, norm(y): 0.9948, norm:0.4006, tok/sec: 185836.43, flops:162.77, batch-reuse:1
@ 432 train 5.6775 , allloss: 5.6775, dt: 690.08ms, fracRes: 0.0181, norm(attn): 0.3047, norm(output): 0.7266, norm(x): 0.7261, norm(y): 0.9949, norm:0.4761, tok/sec: 189937.75, flops:166.36, batch-reuse:1
@ 433 train 5.6010 , allloss: 5.6010, dt: 677.46ms, fracRes: 0.0181, norm(attn): 0.3066, norm(output): 0.7227, norm(x): 0.7266, norm(y): 0.9949, norm:0.3774, tok/sec: 193475.91, flops:169.46, batch-reuse:1
@ 434 train 5.6263 , allloss: 5.6263, dt: 697.61ms, fracRes: 0.0183, norm(attn): 0.3145, norm(output): 0.7266, norm(x): 0.7318, norm(y): 0.9950, norm:0.3985, tok/sec: 187887.69, flops:164.56, batch-reuse:1
@ 435 train 5.5033 , allloss: 5.5033, dt: 698.44ms, fracRes: 0.0184, norm(attn): 0.3164, norm(output): 0.7305, norm(x): 0.7346, norm(y): 0.9950, norm:0.3418, tok/sec: 187663.02, flops:164.37, batch-reuse:1
@ 436 train 5.6937 , allloss: 5.6937, dt: 688.74ms, fracRes: 0.0183, norm(attn): 0.3164, norm(output): 0.7305, norm(x): 0.7341, norm(y): 0.9950, norm:0.3741, tok/sec: 190307.33, flops:166.68, batch-reuse:1
@ 437 train 5.5299 , allloss: 5.5299, dt: 698.38ms, fracRes: 0.0178, norm(attn): 0.3125, norm(output): 0.7305, norm(x): 0.7346, norm(y): 0.9950, norm:0.3636, tok/sec: 187681.15, flops:164.38, batch-reuse:1
@ 438 train 5.5674 , allloss: 5.5674, dt: 701.25ms, fracRes: 0.0180, norm(attn): 0.3125, norm(output): 0.7266, norm(x): 0.7295, norm(y): 0.9949, norm:0.4731, tok/sec: 186911.03, flops:163.71, batch-reuse:1
@ 439 train 5.5138 , allloss: 5.5138, dt: 706.34ms, fracRes: 0.0180, norm(attn): 0.3086, norm(output): 0.7109, norm(x): 0.7233, norm(y): 0.9950, norm:0.3915, tok/sec: 185564.57, flops:162.53, batch-reuse:1
@ 440 train 5.5017 , allloss: 5.5017, dt: 705.97ms, fracRes: 0.0177, norm(attn): 0.3066, norm(output): 0.7109, norm(x): 0.7219, norm(y): 0.9949, norm:0.5007, tok/sec: 185662.02, flops:162.61, batch-reuse:1
@ 441 train 5.5985 , allloss: 5.5985, dt: 694.15ms, fracRes: 0.0171, norm(attn): 0.2988, norm(output): 0.7148, norm(x): 0.7215, norm(y): 0.9949, norm:0.4720, tok/sec: 188823.62, flops:165.38, batch-reuse:1
@ 442 train 5.6155 , allloss: 5.6155, dt: 704.72ms, fracRes: 0.0197, norm(attn): 0.2988, norm(output): 0.7070, norm(x): 0.7205, norm(y): 0.9948, norm:0.3462, tok/sec: 185992.92, flops:162.90, batch-reuse:1
@ 443 train 5.6028 , allloss: 5.6028, dt: 699.77ms, fracRes: 0.0202, norm(attn): 0.3066, norm(output): 0.7188, norm(x): 0.7234, norm(y): 0.9947, norm:0.4570, tok/sec: 187306.63, flops:164.05, batch-reuse:1
@ 444 train 5.5836 , allloss: 5.5836, dt: 695.82ms, fracRes: 0.0204, norm(attn): 0.3105, norm(output): 0.7031, norm(x): 0.7124, norm(y): 0.9949, norm:0.4832, tok/sec: 188369.95, flops:164.98, batch-reuse:1
@ 445 train 5.5510 , allloss: 5.5510, dt: 702.09ms, fracRes: 0.0193, norm(attn): 0.3223, norm(output): 0.7266, norm(x): 0.7276, norm(y): 0.9949, norm:0.6282, tok/sec: 186688.25, flops:163.51, batch-reuse:1
@ 446 train 5.5216 , allloss: 5.5216, dt: 686.95ms, fracRes: 0.0193, norm(attn): 0.3145, norm(output): 0.7266, norm(x): 0.7280, norm(y): 0.9950, norm:0.6695, tok/sec: 190801.77, flops:167.11, batch-reuse:1
@ 447 train 5.5817 , allloss: 5.5817, dt: 702.55ms, fracRes: 0.0200, norm(attn): 0.3145, norm(output): 0.7305, norm(x): 0.7320, norm(y): 0.9950, norm:0.6576, tok/sec: 186565.65, flops:163.40, batch-reuse:1
@ 448 train 5.5179 , allloss: 5.5179, dt: 686.83ms, fracRes: 0.0204, norm(attn): 0.3125, norm(output): 0.7227, norm(x): 0.7312, norm(y): 0.9949, norm:0.4764, tok/sec: 190836.81, flops:167.15, batch-reuse:1
@ 449 train 5.5490 , allloss: 5.5490, dt: 688.47ms, fracRes: 0.0206, norm(attn): 0.3145, norm(output): 0.7266, norm(x): 0.7285, norm(y): 0.9949, norm:0.4820, tok/sec: 190380.61, flops:166.75, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0135, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0212, 0.5703, 0.4082, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0309, 0.2344, 0.1289, 0.6055, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0322, 0.6797, 0.1543, 0.0820, 0.0498, 0.0000, 0.0000, 0.0000],
        [0.0204, 0.5469, 0.1602, 0.0659, 0.0767, 0.1289, 0.0000, 0.0000],
        [0.0089, 0.5273, 0.1582, 0.1406, 0.0586, 0.0405, 0.0654, 0.0000],
        [0.0188, 0.1992, 0.1611, 0.2012, 0.1006, 0.0845, 0.0996, 0.1348]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0004,     -0.1846,     -0.1982,     -0.2676,     -0.2734,     -0.2148,     -0.1914,     -0.1943],
        [     0.0089,      4.3125,      1.8125,      2.7031,      1.7969,      1.2109,      1.3281,      2.3594],
        [     0.0142,      3.3125,      2.9688,      3.9062,      2.7031,      1.6250,      2.3906,      3.4688],
        [    -0.0013,      2.0312,      1.4297,      2.9688,      0.7188,      0.8164,      0.9258,      1.1016],
        [     0.0045,      3.0469,      1.5703,      0.9375,      0.4355,      0.8164,      0.8047,      1.6953],
        [     0.0036,      3.2969,      2.0625,      1.1797,      1.3281,      1.8516,      1.0625,      1.5703],
        [     0.0055,      4.0938,      2.8906,      2.7656,      1.8906,      1.5234,      2.0000,      2.7031],
        [     0.0052,      2.3750,      2.1562,      2.3750,      1.6875,      1.5078,      1.6719,      1.9766]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4392],
        [0.0480],
        [0.0868],
        [0.2049],
        [0.1240],
        [0.0920],
        [0.0521],
        [0.1769],
        [0.0515],
        [0.2440],
        [0.0055],
        [0.0427],
        [0.1813],
        [0.0343]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.8711, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2256, 0.6562, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.3965, 0.0430, 0.0574, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0454, 0.3379, 0.2754, 0.1553, 0.1865, 0.0000, 0.0000, 0.0000],
        [0.0593, 0.6055, 0.1279, 0.0579, 0.1216, 0.0261, 0.0000, 0.0000],
        [0.0347, 0.3535, 0.1436, 0.0187, 0.1182, 0.0347, 0.2969, 0.0000],
        [0.1992, 0.5312, 0.0986, 0.0244, 0.0227, 0.0129, 0.0513, 0.0588]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0527,     -0.0571,     -0.0654,     -0.0942,     -0.0649,     -0.0864,     -0.0835],
        [     0.0234,      1.9375,     -0.3672,     -1.5938,     -1.9766,     -2.8750,     -2.6250,     -3.3594],
        [     0.0184,      1.0859,     -0.6133,     -2.8125,     -2.7031,     -3.0938,     -2.3906,     -2.9062],
        [     0.0151,     -0.2197,     -2.4531,     -2.1562,     -4.0938,     -3.6875,     -3.7812,     -3.5625],
        [     0.0167,      2.0156,      1.8203,      1.2500,      1.4297,      1.6562,      1.9297,      0.3555],
        [     0.0164,      2.3438,      0.7891,     -0.0056,      0.7383,     -0.8047,      1.2109,     -0.0055],
        [     0.0089,      2.3281,      1.4297,     -0.6094,      1.2344,      0.0098,      2.1562,      1.6172],
        [     0.0135,      0.9961,     -0.6914,     -2.0781,     -2.1562,     -2.7188,     -1.3438,     -1.2031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2761],
        [0.2514],
        [0.2955],
        [0.1839],
        [0.2814],
        [0.1635],
        [0.2636],
        [0.1847],
        [0.2583],
        [0.1956],
        [0.1122],
        [0.2354],
        [0.1640],
        [0.0600]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.7227,     0.2734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.6758,     0.1904,     0.1318,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.5039,     0.2217,     0.1367,     0.1387,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.3047,     0.0522,     0.0175,     0.2002,     0.4238,     0.0000,     0.0000],
        [    0.0011,     0.1084,     0.0250,     0.0085,     0.0586,     0.1826,     0.6172,     0.0000],
        [    0.0000,     0.0864,     0.0142,     0.0051,     0.0703,     0.2402,     0.5742,     0.0117]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.1001,     -0.0957,     -0.1094,     -0.1094,     -0.0879,     -0.0815,     -0.1455],
        [     0.0046,      6.8438,      5.5625,      4.6562,      5.1562,      6.6875,      7.5625,      4.3125],
        [     0.0029,      5.6875,      4.7188,      3.9844,      4.6562,      5.8750,      6.7188,      3.9375],
        [     0.0072,      8.5625,      7.2812,      6.9062,      7.6250,      8.5625,      9.3125,      7.3750],
        [     0.0186,      8.5000,      7.7188,      7.2188,      7.2500,      8.6875,     10.2500,      8.7500],
        [     0.0026,      6.6562,      4.9062,      3.8125,      6.2500,      7.0000,      8.3750,      4.6562],
        [     0.0026,      4.5938,      3.1406,      2.0625,      3.9844,      5.1250,      6.3438,      2.2656],
        [     0.0045,      7.6250,      5.8125,      4.7812,      7.4062,      8.6250,      9.5000,      5.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6343],
        [0.5550],
        [0.5228],
        [0.6589],
        [0.6416],
        [0.6372],
        [0.5608],
        [0.6035],
        [0.5425],
        [0.5623],
        [0.3381],
        [0.5260],
        [0.5478],
        [0.5006]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0339,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8008,     0.1196,     0.0806,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0913,     0.0503,     0.0398,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0299,     0.0148,     0.0042,     0.0003,     0.0000,     0.0000,     0.0000],
        [    0.8672,     0.0361,     0.0198,     0.0074,     0.0012,     0.0664,     0.0000,     0.0000],
        [    0.8008,     0.0483,     0.0364,     0.0062,     0.0009,     0.0913,     0.0178,     0.0000],
        [    0.2598,     0.0623,     0.0195,     0.0070,     0.0007,     0.2930,     0.0459,     0.3125]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,     -0.1338,     -0.1177,     -0.1436,     -0.1670,     -0.1533,     -0.1816,     -0.1816],
        [    -0.0044,     -3.3594,     -3.2031,     -3.9062,     -6.6562,     -2.4531,     -3.7812,     -2.4062],
        [    -0.0015,     -1.8984,     -2.2969,     -2.5625,     -4.2500,     -1.9766,     -2.0469,     -0.7227],
        [    -0.0055,     -2.2031,     -2.7969,     -3.0312,     -3.9219,     -1.5469,     -1.5078,     -0.9062],
        [    -0.0035,     -3.4688,     -4.1562,     -5.4375,     -7.9375,     -2.5156,     -5.3750,     -3.6875],
        [    -0.0024,     -3.1875,     -3.7812,     -4.7812,     -6.6250,     -2.5781,     -4.7812,     -3.4375],
        [    -0.0016,     -2.8125,     -3.0938,     -4.8750,     -6.8438,     -2.1719,     -3.7969,     -2.5469],
        [    -0.0050,     -1.4297,     -2.5938,     -3.6094,     -5.9062,      0.1167,     -1.7422,      0.1777]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8132],
        [0.5781],
        [0.5892],
        [0.7103],
        [0.5833],
        [0.4233],
        [0.2424],
        [0.4090],
        [0.4793],
        [0.2586],
        [0.0668],
        [0.2575],
        [0.2550],
        [0.0881]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0190,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0036,     0.0091,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0027,     0.0056,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7422,     0.0452,     0.0247,     0.0129,     0.1748,     0.0000,     0.0000,     0.0000],
        [    0.3691,     0.0074,     0.0105,     0.0030,     0.2217,     0.3887,     0.0000,     0.0000],
        [    0.0046,     0.0002,     0.0007,     0.0004,     0.0011,     0.0107,     0.9844,     0.0000],
        [    0.1035,     0.0000,     0.0001,     0.0000,     0.0045,     0.0006,     0.4062,     0.4844]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0564,     -0.0791,     -0.0981,     -0.0197,     -0.0972,     -0.0894,     -0.1270],
        [     0.0037,     -3.9375,     -3.9062,     -4.4375,     -0.6484,     -6.9062,     -6.2812,     -6.5000],
        [     0.0060,     -5.5938,     -4.6875,     -5.0938,     -0.3926,     -8.0000,     -6.3125,     -6.1250],
        [     0.0045,     -5.9062,     -5.1562,     -5.4375,     -0.9531,     -8.2500,     -5.9688,     -5.8750],
        [     0.0075,     -2.7969,     -3.3906,     -4.0312,     -1.4375,     -7.0625,     -5.4062,     -5.1875],
        [     0.0060,     -3.9062,     -3.5469,     -4.8125,     -0.5000,      0.0608,      1.1094,     -1.5000],
        [     0.0023,     -3.0781,     -1.9531,     -2.5625,     -1.4766,      0.8359,      5.3438,      4.4062],
        [     0.0054,     -9.4375,     -7.1250,     -7.9375,     -3.1250,     -5.0625,      1.3750,      1.5469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7700],
        [0.6321],
        [0.5503],
        [0.6271],
        [0.4699],
        [0.2432],
        [0.2936],
        [0.2712],
        [0.4504],
        [0.6976],
        [0.2315],
        [0.4505],
        [0.2566],
        [0.2356]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0415,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0160,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0069,     0.0007,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0035,     0.0005,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0039,     0.0003,     0.0001,     0.0001,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0488,     -0.0679,     -0.0840,     -0.0762,     -0.0757,     -0.0757,     -0.0569],
        [     0.0005,     -3.1406,     -4.7188,     -5.6250,     -4.8438,     -6.0625,     -5.1875,     -3.5000],
        [     0.0011,     -4.1250,     -6.4375,     -7.7500,     -6.3750,     -7.4375,     -7.0312,     -5.6562],
        [     0.0022,     -4.9688,     -7.2812,     -8.9375,     -7.4375,     -7.8750,     -8.0625,     -6.6250],
        [     0.0015,     -5.6250,     -7.6250,     -9.8750,     -9.0625,     -8.3125,     -9.1875,     -7.6250],
        [    -0.0011,     -5.5625,     -7.9688,     -9.8125,     -9.3750,     -8.5000,    -10.0000,     -7.2188],
        [     0.0024,     -7.6875,    -10.6250,    -13.3750,    -11.6875,    -10.1875,    -12.6875,    -12.3125],
        [     0.0045,     -9.5625,    -12.9375,    -16.3750,    -14.5625,    -13.6875,    -15.0000,    -13.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4923],
        [0.4208],
        [0.4151],
        [0.4229],
        [0.3638],
        [0.4070],
        [0.3398],
        [0.2771],
        [0.1851],
        [0.2964],
        [0.1822],
        [0.3265],
        [0.2296],
        [0.1575]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6758, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.2061, 0.2930, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.1650, 0.2500, 0.2773, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6836, 0.0688, 0.0645, 0.0581, 0.1260, 0.0000, 0.0000, 0.0000],
        [0.4219, 0.1426, 0.0830, 0.0879, 0.0786, 0.1855, 0.0000, 0.0000],
        [0.2793, 0.1289, 0.1094, 0.1167, 0.1167, 0.1123, 0.1377, 0.0000],
        [0.1748, 0.0459, 0.0757, 0.0981, 0.1113, 0.2090, 0.1514, 0.1348]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0039,     -0.0057,     -0.0035,     -0.0067,     -0.0046,     -0.0014,     -0.0022],
        [    -0.0004,     -0.7305,     -0.2256,     -0.1011,     -0.6680,      0.2734,      0.8594,      0.4668],
        [     0.0008,     -0.8828,     -0.5352,     -0.3633,      0.0850,     -0.2695,      0.2275,      0.5156],
        [     0.0012,     -0.6172,     -0.2021,     -0.1035,      0.1826,     -0.2871,      0.3613,      0.6914],
        [     0.0009,     -2.2969,     -2.3594,     -2.4531,     -1.6953,     -0.8906,     -2.0781,     -1.8047],
        [     0.0000,     -1.0859,     -1.6328,     -1.5703,     -1.6797,     -0.8203,     -2.2500,     -1.3438],
        [    -0.0005,     -0.7734,     -0.9336,     -0.8711,     -0.8711,     -0.9062,     -0.7031,     -0.1768],
        [    -0.0003,     -1.3359,     -0.8359,     -0.5742,     -0.4512,      0.1816,     -0.1445,     -0.2617]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7043],
        [0.5583],
        [0.4679],
        [0.5085],
        [0.3260],
        [0.3284],
        [0.3510],
        [0.3787],
        [0.1492],
        [0.1990],
        [0.1216],
        [0.2127],
        [0.1720],
        [0.1021]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7578, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7969, 0.1611, 0.0405, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7383, 0.1738, 0.0461, 0.0408, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.3789, 0.0291, 0.0420, 0.4199, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.2021, 0.0108, 0.0164, 0.6562, 0.0245, 0.0000, 0.0000],
        [0.1758, 0.2002, 0.0664, 0.0603, 0.1514, 0.2207, 0.1250, 0.0000],
        [0.5391, 0.0525, 0.0459, 0.0337, 0.0684, 0.1787, 0.0376, 0.0425]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,      0.0033,     -0.0079,     -0.0076,      0.0028,     -0.0069,     -0.0002,     -0.0085],
        [     0.0070,     -1.1328,     -3.1719,     -2.9688,      0.1240,     -1.3594,     -0.7500,     -2.2188],
        [     0.0019,     -1.6016,     -2.9844,     -3.0781,     -0.7109,     -1.1250,     -1.7578,     -2.5000],
        [     0.0017,     -1.4453,     -2.7656,     -2.8906,     -0.7422,     -0.8398,     -1.7266,     -2.2188],
        [     0.0121,      1.0859,     -1.4844,     -1.1172,      1.1875,     -0.1729,      0.9609,     -0.7852],
        [     0.0171,      0.8086,     -2.1094,     -1.7031,      1.9844,     -1.2969,      1.1328,     -1.7422],
        [     0.0034,      0.1367,     -0.9688,     -1.0625,     -0.1445,      0.2324,     -0.3359,     -0.6992],
        [    -0.0031,     -2.3438,     -2.4688,     -2.7812,     -2.0781,     -1.1094,     -2.6719,     -2.5469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3301],
        [0.5329],
        [0.4338],
        [0.0642],
        [0.0476],
        [0.0385],
        [0.1159],
        [0.0080],
        [0.0271],
        [0.0098],
        [0.0146],
        [0.0078],
        [0.0049],
        [0.0232]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0071,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0040,     0.6797,     0.3164,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.7500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.7617,     0.2393,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.7461,     0.2539,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0004,     0.7344,     0.2656,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0001,     0.0811,     0.1191,     0.1133,     0.0408,     0.0393,     0.0317,     0.0530],
        [    0.0217,    13.0625,    19.6250,    18.7500,     6.5000,     6.3750,     5.0938,     8.6250],
        [    0.0162,     9.9375,    14.8750,    14.1250,     4.9688,     4.8750,     3.8906,     6.5938],
        [    0.0171,    10.0000,    15.1250,    14.3750,     4.8750,     4.7812,     3.7812,     6.6250],
        [    0.0253,    14.6250,    22.3750,    21.2500,     7.0938,     6.9688,     5.4688,     9.6875],
        [    0.0267,    15.2500,    23.3750,    22.2500,     7.2500,     7.0938,     5.5000,     9.9375],
        [    0.0256,    15.0625,    22.7500,    21.7500,     7.3438,     7.1562,     5.6562,     9.8750],
        [    0.0245,    14.5000,    21.8750,    20.8750,     7.1250,     6.9688,     5.5625,     9.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0029],
        [    0.0019],
        [    0.0008],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0001],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.4668,     0.5312,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.3223,     0.3730,     0.3047,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.2656,     0.3027,     0.2461,     0.1855,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.2314,     0.2656,     0.2148,     0.1602,     0.1270,     0.0000,     0.0000],
        [    0.0002,     0.2129,     0.2422,     0.1953,     0.1475,     0.1167,     0.0845,     0.0000],
        [    0.0002,     0.1875,     0.2148,     0.1738,     0.1299,     0.1030,     0.0747,     0.1162]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0388,      0.0400,      0.0388,      0.0371,      0.0359,      0.0342,      0.0366],
        [    -0.0057,      6.5000,      6.6250,      6.4375,      6.1562,      5.9375,      5.6250,      6.0625],
        [    -0.0056,      6.0625,      6.2188,      6.0000,      5.7500,      5.5312,      5.2500,      5.6562],
        [    -0.0058,      6.4062,      6.5312,      6.3438,      6.0625,      5.8438,      5.5312,      5.9375],
        [    -0.0059,      6.8438,      6.9688,      6.7812,      6.4688,      6.2500,      5.9375,      6.3750],
        [    -0.0060,      6.9688,      7.0938,      6.8750,      6.5938,      6.3750,      6.0312,      6.4688],
        [    -0.0060,      7.0000,      7.1250,      6.9062,      6.6250,      6.3750,      6.0625,      6.5000],
        [    -0.0060,      6.8438,      7.0000,      6.7812,      6.5000,      6.2500,      5.9375,      6.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1513],
        [0.1839],
        [0.1312],
        [0.0689],
        [0.0615],
        [0.0503],
        [0.0590],
        [0.0391],
        [0.0357],
        [0.0322],
        [0.0332],
        [0.0284],
        [0.0277],
        [0.0276]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5312, 0.2461, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4180, 0.1963, 0.1826, 0.2021, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.1631, 0.1543, 0.1660, 0.1826, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.1377, 0.1318, 0.1406, 0.1533, 0.1543, 0.0000, 0.0000],
        [0.2441, 0.1191, 0.1138, 0.1216, 0.1318, 0.1328, 0.1357, 0.0000],
        [0.2148, 0.1045, 0.0996, 0.1069, 0.1172, 0.1177, 0.1206, 0.1191]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0014,     -0.0015,     -0.0017,     -0.0018,     -0.0018,     -0.0018,     -0.0018],
        [    -0.0001,     -0.7266,     -0.8008,     -0.6992,     -0.5742,     -0.5625,     -0.5352,     -0.5508],
        [    -0.0001,     -0.7656,     -0.8555,     -0.7383,     -0.5898,     -0.5742,     -0.5430,     -0.5625],
        [    -0.0001,     -0.7539,     -0.8281,     -0.7266,     -0.6016,     -0.5898,     -0.5625,     -0.5781],
        [     0.0000,     -0.7188,     -0.7695,     -0.6953,     -0.6055,     -0.5977,     -0.5742,     -0.5859],
        [     0.0000,     -0.7148,     -0.7617,     -0.6953,     -0.6055,     -0.6016,     -0.5781,     -0.5898],
        [     0.0001,     -0.7188,     -0.7617,     -0.6953,     -0.6094,     -0.6055,     -0.5820,     -0.5938],
        [     0.0001,     -0.7227,     -0.7695,     -0.6992,     -0.6055,     -0.5977,     -0.5781,     -0.5898]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5963],
        [0.5080],
        [0.4110],
        [0.3247],
        [0.2760],
        [0.2377],
        [0.2126],
        [0.1861],
        [0.1676],
        [0.1521],
        [0.1393],
        [0.1279],
        [0.1191],
        [0.1111]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6289,     0.3691,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4980,     0.2871,     0.2148,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4434,     0.2520,     0.1885,     0.1172,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4180,     0.2363,     0.1768,     0.1089,     0.0601,     0.0000,     0.0000],
        [    0.0000,     0.4043,     0.2285,     0.1699,     0.1045,     0.0571,     0.0347,     0.0000],
        [    0.0000,     0.3965,     0.2236,     0.1660,     0.1016,     0.0554,     0.0337,     0.0229]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0522,      0.0503,      0.0496,      0.0481,      0.0461,      0.0447,      0.0435],
        [    -0.0030,     12.0000,     11.4375,     11.1875,     10.8125,     10.2500,      9.8750,      9.5625],
        [    -0.0033,     12.5625,     12.0000,     11.7500,     11.3125,     10.8125,     10.3750,     10.0625],
        [    -0.0038,     13.5000,     12.9375,     12.6250,     12.1875,     11.6250,     11.1875,     10.8125],
        [    -0.0042,     14.2500,     13.6875,     13.4375,     12.9375,     12.3750,     11.8750,     11.5000],
        [    -0.0045,     14.6875,     14.1250,     13.8125,     13.3125,     12.7500,     12.2500,     11.8750],
        [    -0.0046,     14.9375,     14.3125,     14.0625,     13.5625,     12.9375,     12.4375,     12.0625],
        [    -0.0048,     15.0625,     14.5000,     14.1875,     13.6875,     13.0625,     12.5625,     12.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3486],
        [0.2674],
        [0.1600],
        [0.0983],
        [0.0738],
        [0.0483],
        [0.0337],
        [0.0178],
        [0.0112],
        [0.0076],
        [0.0056],
        [0.0042],
        [0.0033],
        [0.0027]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( professor:0.0009 Pacers:0.0009 Pacers:0.0010 Abyssal:0.0011 Abyssal:0.0012 Abyssal:0.0013 Abyssal:0.0013 Abyssal:0.0014)
 Abyssal
------
		( Pacers:0.0009 Pacers:0.0010 Abyssal:0.0011 Abyssal:0.0012 Abyssal:0.0013 Abyssal:0.0013 Abyssal:0.0014                :0.0014)
                                                                                                                                                                                                                                                
@ 450 train 5.5444 , allloss: 5.5444, dt: 1103.05ms, fracRes: 0.0201, norm(attn): 0.3203, norm(output): 0.7383, norm(x): 0.7357, norm(y): 0.9949, norm:0.3849, tok/sec: 118826.50, flops:104.07, batch-reuse:1
@ 451 train 5.5329 , allloss: 5.5329, dt: 702.10ms, fracRes: 0.0201, norm(attn): 0.3164, norm(output): 0.7344, norm(x): 0.7354, norm(y): 0.9948, norm:0.4143, tok/sec: 186686.15, flops:163.51, batch-reuse:1
@ 452 train 5.5017 , allloss: 5.5017, dt: 702.67ms, fracRes: 0.0192, norm(attn): 0.3125, norm(output): 0.7344, norm(x): 0.7363, norm(y): 0.9948, norm:0.4869, tok/sec: 186535.27, flops:163.38, batch-reuse:1
@ 453 train 5.5154 , allloss: 5.5154, dt: 701.40ms, fracRes: 0.0208, norm(attn): 0.3125, norm(output): 0.7266, norm(x): 0.7284, norm(y): 0.9948, norm:0.4838, tok/sec: 186872.98, flops:163.67, batch-reuse:1
@ 454 train 5.5608 , allloss: 5.5608, dt: 689.74ms, fracRes: 0.0211, norm(attn): 0.3125, norm(output): 0.7188, norm(x): 0.7218, norm(y): 0.9949, norm:0.4488, tok/sec: 190029.73, flops:166.44, batch-reuse:1
@ 455 train 5.5200 , allloss: 5.5200, dt: 702.71ms, fracRes: 0.0224, norm(attn): 0.3125, norm(output): 0.7148, norm(x): 0.7241, norm(y): 0.9948, norm:0.4233, tok/sec: 186524.51, flops:163.37, batch-reuse:1
@ 456 train 5.5968 , allloss: 5.5968, dt: 704.74ms, fracRes: 0.0217, norm(attn): 0.3125, norm(output): 0.7070, norm(x): 0.7177, norm(y): 0.9948, norm:0.3954, tok/sec: 185987.00, flops:162.90, batch-reuse:1
@ 457 train 5.6092 , allloss: 5.6092, dt: 690.36ms, fracRes: 0.0224, norm(attn): 0.3086, norm(output): 0.7109, norm(x): 0.7155, norm(y): 0.9948, norm:0.4271, tok/sec: 189860.61, flops:166.29, batch-reuse:1
@ 458 train 5.6168 , allloss: 5.6168, dt: 697.85ms, fracRes: 0.0217, norm(attn): 0.3125, norm(output): 0.7109, norm(x): 0.7176, norm(y): 0.9947, norm:0.4402, tok/sec: 187823.82, flops:164.51, batch-reuse:1
@ 459 train 5.5371 , allloss: 5.5371, dt: 706.33ms, fracRes: 0.0222, norm(attn): 0.3086, norm(output): 0.7031, norm(x): 0.7114, norm(y): 0.9948, norm:0.4245, tok/sec: 185568.58, flops:162.53, batch-reuse:1
@ 460 train 5.5250 , allloss: 5.5250, dt: 704.52ms, fracRes: 0.0223, norm(attn): 0.3066, norm(output): 0.6992, norm(x): 0.7136, norm(y): 0.9947, norm:0.4904, tok/sec: 186044.21, flops:162.95, batch-reuse:1
@ 461 train 5.5204 , allloss: 5.5204, dt: 701.24ms, fracRes: 0.0230, norm(attn): 0.3105, norm(output): 0.7188, norm(x): 0.7247, norm(y): 0.9947, norm:0.5669, tok/sec: 186913.32, flops:163.71, batch-reuse:1
@ 462 train 5.6326 , allloss: 5.6326, dt: 686.68ms, fracRes: 0.0222, norm(attn): 0.3105, norm(output): 0.7070, norm(x): 0.7196, norm(y): 0.9947, norm:0.4664, tok/sec: 190878.75, flops:167.18, batch-reuse:1
@ 463 train 5.5741 , allloss: 5.5741, dt: 681.31ms, fracRes: 0.0238, norm(attn): 0.3125, norm(output): 0.7109, norm(x): 0.7244, norm(y): 0.9948, norm:0.4598, tok/sec: 192383.69, flops:168.50, batch-reuse:1
@ 464 train 5.5478 , allloss: 5.5478, dt: 685.50ms, fracRes: 0.0235, norm(attn): 0.3203, norm(output): 0.7109, norm(x): 0.7231, norm(y): 0.9948, norm:0.5086, tok/sec: 191206.18, flops:167.47, batch-reuse:1
@ 465 train 5.5004 , allloss: 5.5004, dt: 691.51ms, fracRes: 0.0236, norm(attn): 0.3203, norm(output): 0.7109, norm(x): 0.7206, norm(y): 0.9948, norm:0.6640, tok/sec: 189544.89, flops:166.01, batch-reuse:1
@ 466 train 5.6239 , allloss: 5.6239, dt: 689.87ms, fracRes: 0.0229, norm(attn): 0.3203, norm(output): 0.7109, norm(x): 0.7216, norm(y): 0.9947, norm:0.8504, tok/sec: 189994.20, flops:166.41, batch-reuse:1
@ 467 train 5.5179 , allloss: 5.5179, dt: 691.23ms, fracRes: 0.0225, norm(attn): 0.3262, norm(output): 0.7305, norm(x): 0.7307, norm(y): 0.9947, norm:1.0310, tok/sec: 189621.19, flops:166.08, batch-reuse:1
@ 468 train 5.4651 , allloss: 5.4651, dt: 692.39ms, fracRes: 0.0256, norm(attn): 0.3320, norm(output): 0.7266, norm(x): 0.7316, norm(y): 0.9948, norm:0.4285, tok/sec: 189303.86, flops:165.80, batch-reuse:1
@ 469 train 5.4635 , allloss: 5.4635, dt: 689.22ms, fracRes: 0.0269, norm(attn): 0.3418, norm(output): 0.7305, norm(x): 0.7388, norm(y): 0.9948, norm:0.4718, tok/sec: 190175.33, flops:166.57, batch-reuse:1
@ 470 train 5.5305 , allloss: 5.5305, dt: 695.95ms, fracRes: 0.0263, norm(attn): 0.3340, norm(output): 0.7383, norm(x): 0.7418, norm(y): 0.9947, norm:0.4559, tok/sec: 188334.46, flops:164.95, batch-reuse:1
@ 471 train 5.4587 , allloss: 5.4587, dt: 685.08ms, fracRes: 0.0269, norm(attn): 0.3262, norm(output): 0.7344, norm(x): 0.7416, norm(y): 0.9946, norm:0.4645, tok/sec: 191322.69, flops:167.57, batch-reuse:1
@ 472 train 5.5673 , allloss: 5.5673, dt: 690.71ms, fracRes: 0.0278, norm(attn): 0.3359, norm(output): 0.7500, norm(x): 0.7515, norm(y): 0.9946, norm:0.5010, tok/sec: 189765.51, flops:166.21, batch-reuse:1
@ 473 train 5.4897 , allloss: 5.4897, dt: 683.40ms, fracRes: 0.0283, norm(attn): 0.3281, norm(output): 0.7500, norm(x): 0.7526, norm(y): 0.9946, norm:0.4386, tok/sec: 191794.86, flops:167.98, batch-reuse:1
@ 474 train 5.4247 , allloss: 5.4247, dt: 703.21ms, fracRes: 0.0268, norm(attn): 0.3184, norm(output): 0.7266, norm(x): 0.7330, norm(y): 0.9947, norm:0.4203, tok/sec: 186392.28, flops:163.25, batch-reuse:1
@ 475 train 5.4497 , allloss: 5.4497, dt: 694.28ms, fracRes: 0.0264, norm(attn): 0.3184, norm(output): 0.7266, norm(x): 0.7318, norm(y): 0.9946, norm:0.3585, tok/sec: 188787.76, flops:165.35, batch-reuse:1
@ 476 train 5.4517 , allloss: 5.4517, dt: 708.49ms, fracRes: 0.0263, norm(attn): 0.3203, norm(output): 0.7305, norm(x): 0.7365, norm(y): 0.9945, norm:0.4351, tok/sec: 185001.81, flops:162.03, batch-reuse:1
@ 477 train 5.5293 , allloss: 5.5293, dt: 704.00ms, fracRes: 0.0262, norm(attn): 0.3242, norm(output): 0.7266, norm(x): 0.7281, norm(y): 0.9946, norm:0.4451, tok/sec: 186182.26, flops:163.07, batch-reuse:1
@ 478 train 5.4275 , allloss: 5.4275, dt: 710.81ms, fracRes: 0.0254, norm(attn): 0.3223, norm(output): 0.7266, norm(x): 0.7290, norm(y): 0.9945, norm:0.3054, tok/sec: 184398.78, flops:161.51, batch-reuse:1
@ 479 train 5.4984 , allloss: 5.4984, dt: 714.40ms, fracRes: 0.0249, norm(attn): 0.3223, norm(output): 0.7266, norm(x): 0.7283, norm(y): 0.9945, norm:0.3956, tok/sec: 183471.25, flops:160.69, batch-reuse:1
@ 480 train 5.3847 , allloss: 5.3847, dt: 715.21ms, fracRes: 0.0239, norm(attn): 0.3340, norm(output): 0.7109, norm(x): 0.7260, norm(y): 0.9945, norm:0.4028, tok/sec: 183264.03, flops:160.51, batch-reuse:1
@ 481 train 5.4618 , allloss: 5.4618, dt: 710.39ms, fracRes: 0.0250, norm(attn): 0.3457, norm(output): 0.7188, norm(x): 0.7248, norm(y): 0.9947, norm:0.3936, tok/sec: 184506.77, flops:161.60, batch-reuse:1
@ 482 train 5.4424 , allloss: 5.4424, dt: 708.75ms, fracRes: 0.0260, norm(attn): 0.3398, norm(output): 0.7031, norm(x): 0.7205, norm(y): 0.9947, norm:0.4740, tok/sec: 184933.41, flops:161.97, batch-reuse:1
@ 483 train 5.5511 , allloss: 5.5511, dt: 708.59ms, fracRes: 0.0277, norm(attn): 0.3418, norm(output): 0.7305, norm(x): 0.7334, norm(y): 0.9948, norm:0.5347, tok/sec: 184975.10, flops:162.01, batch-reuse:1
@ 484 train 5.3681 , allloss: 5.3681, dt: 711.73ms, fracRes: 0.0285, norm(attn): 0.3281, norm(output): 0.7383, norm(x): 0.7420, norm(y): 0.9946, norm:0.5903, tok/sec: 184158.55, flops:161.30, batch-reuse:1
@ 485 train 5.3469 , allloss: 5.3469, dt: 701.88ms, fracRes: 0.0279, norm(attn): 0.3184, norm(output): 0.7500, norm(x): 0.7517, norm(y): 0.9945, norm:0.5966, tok/sec: 186742.85, flops:163.56, batch-reuse:1
@ 486 train 5.5071 , allloss: 5.5071, dt: 694.04ms, fracRes: 0.0305, norm(attn): 0.3223, norm(output): 0.7461, norm(x): 0.7503, norm(y): 0.9945, norm:0.4620, tok/sec: 188852.55, flops:165.41, batch-reuse:1
@ 487 train 5.3972 , allloss: 5.3972, dt: 710.65ms, fracRes: 0.0335, norm(attn): 0.3281, norm(output): 0.7422, norm(x): 0.7428, norm(y): 0.9946, norm:0.4432, tok/sec: 184440.10, flops:161.54, batch-reuse:1
@ 488 train 5.3582 , allloss: 5.3582, dt: 699.30ms, fracRes: 0.0349, norm(attn): 0.3379, norm(output): 0.7383, norm(x): 0.7425, norm(y): 0.9947, norm:0.4039, tok/sec: 187432.24, flops:164.16, batch-reuse:1
@ 489 train 5.3969 , allloss: 5.3969, dt: 695.24ms, fracRes: 0.0346, norm(attn): 0.3320, norm(output): 0.7344, norm(x): 0.7416, norm(y): 0.9947, norm:0.4315, tok/sec: 188528.93, flops:165.12, batch-reuse:1
@ 490 train 5.5062 , allloss: 5.5062, dt: 684.21ms, fracRes: 0.0338, norm(attn): 0.3320, norm(output): 0.7266, norm(x): 0.7368, norm(y): 0.9947, norm:0.4093, tok/sec: 191567.30, flops:167.79, batch-reuse:1
@ 491 train 5.4957 , allloss: 5.4957, dt: 693.31ms, fracRes: 0.0329, norm(attn): 0.3281, norm(output): 0.7305, norm(x): 0.7365, norm(y): 0.9947, norm:0.4601, tok/sec: 189053.68, flops:165.58, batch-reuse:1
@ 492 train 5.4974 , allloss: 5.4974, dt: 697.21ms, fracRes: 0.0300, norm(attn): 0.3164, norm(output): 0.7188, norm(x): 0.7332, norm(y): 0.9945, norm:0.5527, tok/sec: 187994.92, flops:164.66, batch-reuse:1
@ 493 train 5.4363 , allloss: 5.4363, dt: 694.38ms, fracRes: 0.0287, norm(attn): 0.3164, norm(output): 0.7227, norm(x): 0.7333, norm(y): 0.9945, norm:0.4379, tok/sec: 188762.48, flops:165.33, batch-reuse:1
@ 494 train 5.4379 , allloss: 5.4379, dt: 683.84ms, fracRes: 0.0281, norm(attn): 0.3184, norm(output): 0.7188, norm(x): 0.7366, norm(y): 0.9945, norm:0.3826, tok/sec: 191670.69, flops:167.88, batch-reuse:1
@ 495 train 5.3283 , allloss: 5.3283, dt: 695.26ms, fracRes: 0.0295, norm(attn): 0.3242, norm(output): 0.7344, norm(x): 0.7380, norm(y): 0.9946, norm:0.3658, tok/sec: 188521.10, flops:165.12, batch-reuse:1
@ 496 train 5.4227 , allloss: 5.4227, dt: 694.55ms, fracRes: 0.0323, norm(attn): 0.3262, norm(output): 0.7266, norm(x): 0.7354, norm(y): 0.9946, norm:0.4053, tok/sec: 188713.82, flops:165.29, batch-reuse:1
@ 497 train 5.3557 , allloss: 5.3557, dt: 696.99ms, fracRes: 0.0338, norm(attn): 0.3320, norm(output): 0.7148, norm(x): 0.7301, norm(y): 0.9946, norm:0.3382, tok/sec: 188053.06, flops:164.71, batch-reuse:1
@ 498 train 5.4827 , allloss: 5.4827, dt: 696.71ms, fracRes: 0.0336, norm(attn): 0.3379, norm(output): 0.7227, norm(x): 0.7315, norm(y): 0.9945, norm:0.3956, tok/sec: 188131.12, flops:164.78, batch-reuse:1
@ 499 train 5.4488 , allloss: 5.4488, dt: 687.34ms, fracRes: 0.0338, norm(attn): 0.3359, norm(output): 0.7305, norm(x): 0.7361, norm(y): 0.9946, norm:0.3803, tok/sec: 190694.29, flops:167.02, batch-reuse:1
@ 500 train 5.3505 , allloss: 5.3505, dt: 694.40ms, fracRes: 0.0345, norm(attn): 0.3398, norm(output): 0.7227, norm(x): 0.7332, norm(y): 0.9946, norm:0.4171, tok/sec: 188754.90, flops:165.32, batch-reuse:1
@ 501 train 5.4749 , allloss: 5.4749, dt: 711.48ms, fracRes: 0.0344, norm(attn): 0.3418, norm(output): 0.7227, norm(x): 0.7318, norm(y): 0.9946, norm:0.3897, tok/sec: 184224.21, flops:161.35, batch-reuse:1
@ 502 train 5.4516 , allloss: 5.4516, dt: 700.42ms, fracRes: 0.0340, norm(attn): 0.3418, norm(output): 0.7188, norm(x): 0.7289, norm(y): 0.9946, norm:0.4088, tok/sec: 187133.84, flops:163.90, batch-reuse:1
@ 503 train 5.4014 , allloss: 5.4014, dt: 698.10ms, fracRes: 0.0344, norm(attn): 0.3340, norm(output): 0.7070, norm(x): 0.7265, norm(y): 0.9946, norm:0.4405, tok/sec: 187756.34, flops:164.45, batch-reuse:1
@ 504 train 5.4314 , allloss: 5.4314, dt: 695.03ms, fracRes: 0.0340, norm(attn): 0.3379, norm(output): 0.7188, norm(x): 0.7290, norm(y): 0.9946, norm:0.4770, tok/sec: 188585.71, flops:165.17, batch-reuse:1
@ 505 train 5.3601 , allloss: 5.3601, dt: 694.82ms, fracRes: 0.0363, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7252, norm(y): 0.9946, norm:0.4221, tok/sec: 188641.10, flops:165.22, batch-reuse:1
@ 506 train 5.4310 , allloss: 5.4310, dt: 690.24ms, fracRes: 0.0387, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7257, norm(y): 0.9946, norm:0.4134, tok/sec: 189893.92, flops:166.32, batch-reuse:1
@ 507 train 5.3824 , allloss: 5.3824, dt: 689.33ms, fracRes: 0.0382, norm(attn): 0.3398, norm(output): 0.7070, norm(x): 0.7263, norm(y): 0.9945, norm:0.4423, tok/sec: 190145.14, flops:166.54, batch-reuse:1
@ 508 train 5.3016 , allloss: 5.3016, dt: 691.02ms, fracRes: 0.0379, norm(attn): 0.3281, norm(output): 0.7031, norm(x): 0.7203, norm(y): 0.9945, norm:0.4729, tok/sec: 189678.30, flops:166.13, batch-reuse:1
@ 509 train 5.4046 , allloss: 5.4046, dt: 690.02ms, fracRes: 0.0382, norm(attn): 0.3301, norm(output): 0.7070, norm(x): 0.7219, norm(y): 0.9945, norm:0.3743, tok/sec: 189954.15, flops:166.37, batch-reuse:1
@ 510 train 5.3467 , allloss: 5.3467, dt: 695.01ms, fracRes: 0.0378, norm(attn): 0.3320, norm(output): 0.7109, norm(x): 0.7229, norm(y): 0.9945, norm:0.4511, tok/sec: 188589.85, flops:165.18, batch-reuse:1
@ 511 train 5.4148 , allloss: 5.4148, dt: 686.23ms, fracRes: 0.0377, norm(attn): 0.3281, norm(output): 0.7070, norm(x): 0.7229, norm(y): 0.9945, norm:0.3885, tok/sec: 191004.23, flops:167.29, batch-reuse:1
@ 512 train 5.3322 , allloss: 5.3322, dt: 696.44ms, fracRes: 0.0385, norm(attn): 0.3301, norm(output): 0.7109, norm(x): 0.7260, norm(y): 0.9945, norm:0.4448, tok/sec: 188203.19, flops:164.84, batch-reuse:1
@ 513 train 5.3096 , allloss: 5.3096, dt: 693.77ms, fracRes: 0.0380, norm(attn): 0.3281, norm(output): 0.7109, norm(x): 0.7255, norm(y): 0.9945, norm:0.4233, tok/sec: 188927.18, flops:165.47, batch-reuse:1
@ 514 train 5.3193 , allloss: 5.3193, dt: 697.22ms, fracRes: 0.0392, norm(attn): 0.3301, norm(output): 0.6992, norm(x): 0.7179, norm(y): 0.9946, norm:0.5692, tok/sec: 187991.97, flops:164.65, batch-reuse:1
@ 515 train 5.2595 , allloss: 5.2595, dt: 700.11ms, fracRes: 0.0380, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7168, norm(y): 0.9946, norm:0.6167, tok/sec: 187216.50, flops:163.97, batch-reuse:1
@ 516 train 5.2728 , allloss: 5.2728, dt: 677.68ms, fracRes: 0.0398, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7151, norm(y): 0.9946, norm:0.5399, tok/sec: 193413.29, flops:169.40, batch-reuse:1
@ 517 train 5.2527 , allloss: 5.2527, dt: 690.26ms, fracRes: 0.0407, norm(attn): 0.3320, norm(output): 0.7031, norm(x): 0.7202, norm(y): 0.9946, norm:0.5169, tok/sec: 189888.67, flops:166.32, batch-reuse:1
@ 518 train 5.3229 , allloss: 5.3229, dt: 670.97ms, fracRes: 0.0407, norm(attn): 0.3359, norm(output): 0.7109, norm(x): 0.7270, norm(y): 0.9946, norm:0.5279, tok/sec: 195345.80, flops:171.09, batch-reuse:1
@ 519 train 5.2958 , allloss: 5.2958, dt: 682.54ms, fracRes: 0.0425, norm(attn): 0.3379, norm(output): 0.7109, norm(x): 0.7270, norm(y): 0.9946, norm:0.5427, tok/sec: 192035.11, flops:168.20, batch-reuse:1
@ 520 train 5.3412 , allloss: 5.3412, dt: 684.70ms, fracRes: 0.0413, norm(attn): 0.3359, norm(output): 0.7070, norm(x): 0.7227, norm(y): 0.9946, norm:0.5794, tok/sec: 191429.95, flops:167.66, batch-reuse:1
@ 521 train 5.4277 , allloss: 5.4277, dt: 675.99ms, fracRes: 0.0411, norm(attn): 0.3340, norm(output): 0.7109, norm(x): 0.7249, norm(y): 0.9945, norm:0.4155, tok/sec: 193895.03, flops:169.82, batch-reuse:1
@ 522 train 5.2613 , allloss: 5.2613, dt: 683.16ms, fracRes: 0.0433, norm(attn): 0.3320, norm(output): 0.7031, norm(x): 0.7197, norm(y): 0.9945, norm:0.4658, tok/sec: 191862.40, flops:168.04, batch-reuse:1
@ 523 train 5.3284 , allloss: 5.3284, dt: 700.35ms, fracRes: 0.0439, norm(attn): 0.3340, norm(output): 0.6914, norm(x): 0.7162, norm(y): 0.9944, norm:0.4847, tok/sec: 187153.46, flops:163.92, batch-reuse:1
@ 524 train 5.2271 , allloss: 5.2271, dt: 703.93ms, fracRes: 0.0428, norm(attn): 0.3340, norm(output): 0.6992, norm(x): 0.7156, norm(y): 0.9945, norm:0.5085, tok/sec: 186199.35, flops:163.08, batch-reuse:1
@ 525 train 5.3115 , allloss: 5.3115, dt: 706.64ms, fracRes: 0.0407, norm(attn): 0.3418, norm(output): 0.7188, norm(x): 0.7280, norm(y): 0.9946, norm:0.5757, tok/sec: 185486.18, flops:162.46, batch-reuse:1
@ 526 train 5.3136 , allloss: 5.3136, dt: 698.53ms, fracRes: 0.0415, norm(attn): 0.3379, norm(output): 0.7148, norm(x): 0.7274, norm(y): 0.9945, norm:0.4836, tok/sec: 187640.09, flops:164.35, batch-reuse:1
@ 527 train 5.3130 , allloss: 5.3130, dt: 712.16ms, fracRes: 0.0421, norm(attn): 0.3340, norm(output): 0.7031, norm(x): 0.7263, norm(y): 0.9945, norm:0.4021, tok/sec: 184047.70, flops:161.20, batch-reuse:1
@ 528 train 5.2297 , allloss: 5.2297, dt: 710.61ms, fracRes: 0.0425, norm(attn): 0.3340, norm(output): 0.7070, norm(x): 0.7249, norm(y): 0.9945, norm:0.4114, tok/sec: 184450.74, flops:161.55, batch-reuse:1
@ 529 train 5.2783 , allloss: 5.2783, dt: 708.19ms, fracRes: 0.0408, norm(attn): 0.3320, norm(output): 0.7070, norm(x): 0.7261, norm(y): 0.9945, norm:0.3905, tok/sec: 185080.60, flops:162.10, batch-reuse:1
@ 530 train 5.3286 , allloss: 5.3286, dt: 701.66ms, fracRes: 0.0407, norm(attn): 0.3340, norm(output): 0.7070, norm(x): 0.7245, norm(y): 0.9945, norm:0.3982, tok/sec: 186801.99, flops:163.61, batch-reuse:1
@ 531 train 5.4872 , allloss: 5.4872, dt: 690.47ms, fracRes: 0.0415, norm(attn): 0.3340, norm(output): 0.7031, norm(x): 0.7211, norm(y): 0.9945, norm:0.4083, tok/sec: 189828.81, flops:166.26, batch-reuse:1
@ 532 train 5.1766 , allloss: 5.1766, dt: 697.23ms, fracRes: 0.0409, norm(attn): 0.3398, norm(output): 0.6953, norm(x): 0.7156, norm(y): 0.9944, norm:0.5400, tok/sec: 187989.33, flops:164.65, batch-reuse:1
@ 533 train 5.2750 , allloss: 5.2750, dt: 694.53ms, fracRes: 0.0385, norm(attn): 0.3359, norm(output): 0.7031, norm(x): 0.7197, norm(y): 0.9944, norm:0.5263, tok/sec: 188719.33, flops:165.29, batch-reuse:1
@ 534 train 5.2078 , allloss: 5.2078, dt: 693.36ms, fracRes: 0.0396, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7190, norm(y): 0.9944, norm:0.4937, tok/sec: 189040.22, flops:165.57, batch-reuse:1
@ 535 train 5.3552 , allloss: 5.3552, dt: 693.07ms, fracRes: 0.0402, norm(attn): 0.3418, norm(output): 0.7070, norm(x): 0.7174, norm(y): 0.9944, norm:0.5221, tok/sec: 189118.13, flops:165.64, batch-reuse:1
@ 536 train 5.2382 , allloss: 5.2382, dt: 683.06ms, fracRes: 0.0413, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7151, norm(y): 0.9945, norm:0.4869, tok/sec: 191890.06, flops:168.07, batch-reuse:1
@ 537 train 5.2326 , allloss: 5.2326, dt: 692.63ms, fracRes: 0.0439, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7126, norm(y): 0.9945, norm:0.4624, tok/sec: 189239.21, flops:165.75, batch-reuse:1
@ 538 train 5.3543 , allloss: 5.3543, dt: 690.72ms, fracRes: 0.0447, norm(attn): 0.3379, norm(output): 0.6914, norm(x): 0.7125, norm(y): 0.9945, norm:0.5303, tok/sec: 189761.26, flops:166.20, batch-reuse:1
@ 539 train 5.2755 , allloss: 5.2755, dt: 702.02ms, fracRes: 0.0438, norm(attn): 0.3359, norm(output): 0.6992, norm(x): 0.7185, norm(y): 0.9943, norm:0.5598, tok/sec: 186707.65, flops:163.53, batch-reuse:1
@ 540 train 5.2991 , allloss: 5.2991, dt: 700.00ms, fracRes: 0.0433, norm(attn): 0.3320, norm(output): 0.6992, norm(x): 0.7171, norm(y): 0.9943, norm:0.4599, tok/sec: 187246.47, flops:164.00, batch-reuse:1
@ 541 train 5.2928 , allloss: 5.2928, dt: 700.79ms, fracRes: 0.0451, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7160, norm(y): 0.9943, norm:0.4597, tok/sec: 187035.16, flops:163.82, batch-reuse:1
@ 542 train 5.2485 , allloss: 5.2485, dt: 690.44ms, fracRes: 0.0467, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7179, norm(y): 0.9943, norm:0.4748, tok/sec: 189837.40, flops:166.27, batch-reuse:1
@ 543 train 5.2925 , allloss: 5.2925, dt: 696.38ms, fracRes: 0.0470, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7202, norm(y): 0.9943, norm:0.4377, tok/sec: 188217.88, flops:164.85, batch-reuse:1
@ 544 train 5.2247 , allloss: 5.2247, dt: 712.91ms, fracRes: 0.0474, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7158, norm(y): 0.9943, norm:0.4366, tok/sec: 183855.47, flops:161.03, batch-reuse:1
@ 545 train 5.2611 , allloss: 5.2611, dt: 708.94ms, fracRes: 0.0462, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7173, norm(y): 0.9943, norm:0.4630, tok/sec: 184885.71, flops:161.93, batch-reuse:1
@ 546 train 5.1463 , allloss: 5.1463, dt: 709.73ms, fracRes: 0.0442, norm(attn): 0.3398, norm(output): 0.6953, norm(x): 0.7158, norm(y): 0.9944, norm:0.4185, tok/sec: 184679.26, flops:161.75, batch-reuse:1
@ 547 train 5.3151 , allloss: 5.3151, dt: 693.32ms, fracRes: 0.0456, norm(attn): 0.3340, norm(output): 0.6875, norm(x): 0.7138, norm(y): 0.9943, norm:0.4862, tok/sec: 189050.95, flops:165.58, batch-reuse:1
@ 548 train 5.2800 , allloss: 5.2800, dt: 689.90ms, fracRes: 0.0456, norm(attn): 0.3320, norm(output): 0.6875, norm(x): 0.7084, norm(y): 0.9943, norm:0.4671, tok/sec: 189985.66, flops:166.40, batch-reuse:1
@ 549 train 5.1975 , allloss: 5.1975, dt: 697.56ms, fracRes: 0.0461, norm(attn): 0.3301, norm(output): 0.6875, norm(x): 0.7059, norm(y): 0.9942, norm:0.4058, tok/sec: 187899.38, flops:164.57, batch-reuse:1
@ 550 train 5.2420 , allloss: 5.2420, dt: 695.22ms, fracRes: 0.0468, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7196, norm(y): 0.9943, norm:0.4490, tok/sec: 188533.26, flops:165.13, batch-reuse:1
@ 551 train 5.3299 , allloss: 5.3299, dt: 683.00ms, fracRes: 0.0466, norm(attn): 0.3398, norm(output): 0.6953, norm(x): 0.7163, norm(y): 0.9943, norm:0.4696, tok/sec: 191905.60, flops:168.08, batch-reuse:1
@ 552 train 5.1654 , allloss: 5.1654, dt: 706.00ms, fracRes: 0.0468, norm(attn): 0.3438, norm(output): 0.6953, norm(x): 0.7179, norm(y): 0.9943, norm:0.4493, tok/sec: 185654.81, flops:162.61, batch-reuse:1
@ 553 train 5.3220 , allloss: 5.3220, dt: 693.03ms, fracRes: 0.0454, norm(attn): 0.3418, norm(output): 0.7109, norm(x): 0.7232, norm(y): 0.9943, norm:0.4755, tok/sec: 189127.63, flops:165.65, batch-reuse:1
@ 554 train 5.1834 , allloss: 5.1834, dt: 696.23ms, fracRes: 0.0466, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7179, norm(y): 0.9943, norm:0.4399, tok/sec: 188259.19, flops:164.89, batch-reuse:1
@ 555 train 5.2566 , allloss: 5.2566, dt: 709.44ms, fracRes: 0.0470, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7091, norm(y): 0.9943, norm:0.5187, tok/sec: 184754.24, flops:161.82, batch-reuse:1
@ 556 train 5.1711 , allloss: 5.1711, dt: 707.83ms, fracRes: 0.0480, norm(attn): 0.3379, norm(output): 0.6836, norm(x): 0.7041, norm(y): 0.9943, norm:0.5469, tok/sec: 185175.48, flops:162.19, batch-reuse:1
@ 557 train 5.2608 , allloss: 5.2608, dt: 715.33ms, fracRes: 0.0481, norm(attn): 0.3359, norm(output): 0.6875, norm(x): 0.7073, norm(y): 0.9943, norm:0.5226, tok/sec: 183233.31, flops:160.49, batch-reuse:1
@ 558 train 5.4298 , allloss: 5.4298, dt: 715.26ms, fracRes: 0.0470, norm(attn): 0.3398, norm(output): 0.6914, norm(x): 0.7122, norm(y): 0.9943, norm:0.4623, tok/sec: 183251.75, flops:160.50, batch-reuse:1
@ 559 train 5.5071 , allloss: 5.5071, dt: 707.14ms, fracRes: 0.0482, norm(attn): 0.3438, norm(output): 0.6953, norm(x): 0.7157, norm(y): 0.9943, norm:0.5266, tok/sec: 185356.23, flops:162.35, batch-reuse:1
@ 560 train 5.4108 , allloss: 5.4108, dt: 709.42ms, fracRes: 0.0509, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7122, norm(y): 0.9943, norm:0.4925, tok/sec: 184758.46, flops:161.82, batch-reuse:1
@ 561 train 5.5300 , allloss: 5.5300, dt: 703.87ms, fracRes: 0.0509, norm(attn): 0.3438, norm(output): 0.6953, norm(x): 0.7164, norm(y): 0.9943, norm:0.5873, tok/sec: 186217.32, flops:163.10, batch-reuse:1
@ 562 train 5.4330 , allloss: 5.4330, dt: 707.21ms, fracRes: 0.0497, norm(attn): 0.3398, norm(output): 0.7031, norm(x): 0.7237, norm(y): 0.9943, norm:0.6322, tok/sec: 185336.73, flops:162.33, batch-reuse:1
@ 563 train 5.5197 , allloss: 5.5197, dt: 706.30ms, fracRes: 0.0502, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7174, norm(y): 0.9944, norm:0.6401, tok/sec: 185575.09, flops:162.54, batch-reuse:1
@ 564 train 5.3173 , allloss: 5.3173, dt: 703.73ms, fracRes: 0.0497, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7190, norm(y): 0.9943, norm:0.3997, tok/sec: 186252.40, flops:163.13, batch-reuse:1
@ 565 train 5.3122 , allloss: 5.3122, dt: 706.93ms, fracRes: 0.0501, norm(attn): 0.3438, norm(output): 0.6953, norm(x): 0.7173, norm(y): 0.9943, norm:0.6572, tok/sec: 185410.30, flops:162.39, batch-reuse:1
@ 566 train 5.4364 , allloss: 5.4364, dt: 708.45ms, fracRes: 0.0503, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7200, norm(y): 0.9942, norm:0.7039, tok/sec: 185011.15, flops:162.04, batch-reuse:1
@ 567 train 5.4581 , allloss: 5.4581, dt: 717.28ms, fracRes: 0.0501, norm(attn): 0.3418, norm(output): 0.7070, norm(x): 0.7290, norm(y): 0.9941, norm:0.6216, tok/sec: 182734.92, flops:160.05, batch-reuse:1
@ 568 train 5.4865 , allloss: 5.4865, dt: 703.58ms, fracRes: 0.0509, norm(attn): 0.3418, norm(output): 0.7109, norm(x): 0.7318, norm(y): 0.9942, norm:0.4848, tok/sec: 186294.06, flops:163.17, batch-reuse:1
@ 569 train 5.4251 , allloss: 5.4251, dt: 707.43ms, fracRes: 0.0520, norm(attn): 0.3418, norm(output): 0.7109, norm(x): 0.7304, norm(y): 0.9942, norm:0.4570, tok/sec: 185279.89, flops:162.28, batch-reuse:1
@ 570 train 5.3617 , allloss: 5.3617, dt: 711.90ms, fracRes: 0.0525, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7303, norm(y): 0.9942, norm:0.4952, tok/sec: 184115.81, flops:161.26, batch-reuse:1
@ 571 train 5.3165 , allloss: 5.3165, dt: 709.55ms, fracRes: 0.0527, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7275, norm(y): 0.9942, norm:0.4105, tok/sec: 184726.24, flops:161.79, batch-reuse:1
@ 572 train 5.2952 , allloss: 5.2952, dt: 689.78ms, fracRes: 0.0534, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7255, norm(y): 0.9941, norm:0.4543, tok/sec: 190020.73, flops:166.43, batch-reuse:1
@ 573 train 5.3687 , allloss: 5.3687, dt: 681.87ms, fracRes: 0.0537, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7242, norm(y): 0.9942, norm:0.4164, tok/sec: 192223.79, flops:168.36, batch-reuse:1
@ 574 train 5.3782 , allloss: 5.3782, dt: 688.37ms, fracRes: 0.0533, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7257, norm(y): 0.9942, norm:0.4338, tok/sec: 190407.85, flops:166.77, batch-reuse:1
@ 575 train 5.3150 , allloss: 5.3150, dt: 686.41ms, fracRes: 0.0523, norm(attn): 0.3457, norm(output): 0.7070, norm(x): 0.7301, norm(y): 0.9941, norm:0.4174, tok/sec: 190954.27, flops:167.25, batch-reuse:1
@ 576 train 5.3279 , allloss: 5.3279, dt: 691.58ms, fracRes: 0.0529, norm(attn): 0.3457, norm(output): 0.6992, norm(x): 0.7253, norm(y): 0.9941, norm:0.4253, tok/sec: 189524.50, flops:166.00, batch-reuse:1
@ 577 train 5.3636 , allloss: 5.3636, dt: 696.24ms, fracRes: 0.0522, norm(attn): 0.3457, norm(output): 0.7070, norm(x): 0.7293, norm(y): 0.9940, norm:0.5139, tok/sec: 188255.58, flops:164.88, batch-reuse:1
@ 578 train 5.3350 , allloss: 5.3350, dt: 704.03ms, fracRes: 0.0524, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7340, norm(y): 0.9940, norm:0.5343, tok/sec: 186173.56, flops:163.06, batch-reuse:1
@ 579 train 5.3290 , allloss: 5.3290, dt: 702.37ms, fracRes: 0.0528, norm(attn): 0.3535, norm(output): 0.7305, norm(x): 0.7443, norm(y): 0.9941, norm:0.5914, tok/sec: 186613.47, flops:163.45, batch-reuse:1
@ 580 train 5.3258 , allloss: 5.3258, dt: 686.17ms, fracRes: 0.0554, norm(attn): 0.3535, norm(output): 0.7266, norm(x): 0.7440, norm(y): 0.9941, norm:0.5072, tok/sec: 191019.76, flops:167.31, batch-reuse:1
@ 581 train 5.3126 , allloss: 5.3126, dt: 697.07ms, fracRes: 0.0564, norm(attn): 0.3535, norm(output): 0.7109, norm(x): 0.7381, norm(y): 0.9941, norm:0.4724, tok/sec: 188032.28, flops:164.69, batch-reuse:1
@ 582 train 5.2749 , allloss: 5.2749, dt: 698.96ms, fracRes: 0.0561, norm(attn): 0.3516, norm(output): 0.7070, norm(x): 0.7358, norm(y): 0.9941, norm:0.4924, tok/sec: 187524.50, flops:164.24, batch-reuse:1
@ 583 train 5.2370 , allloss: 5.2370, dt: 689.68ms, fracRes: 0.0570, norm(attn): 0.3477, norm(output): 0.7031, norm(x): 0.7296, norm(y): 0.9941, norm:0.4546, tok/sec: 190046.81, flops:166.45, batch-reuse:1
@ 584 train 5.3469 , allloss: 5.3469, dt: 701.84ms, fracRes: 0.0566, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7280, norm(y): 0.9941, norm:0.3976, tok/sec: 186755.34, flops:163.57, batch-reuse:1
@ 585 train 5.2856 , allloss: 5.2856, dt: 708.92ms, fracRes: 0.0566, norm(attn): 0.3457, norm(output): 0.7070, norm(x): 0.7252, norm(y): 0.9941, norm:0.4833, tok/sec: 184888.94, flops:161.94, batch-reuse:1
@ 586 train 5.3017 , allloss: 5.3017, dt: 700.64ms, fracRes: 0.0567, norm(attn): 0.3457, norm(output): 0.6992, norm(x): 0.7274, norm(y): 0.9940, norm:0.4156, tok/sec: 187074.68, flops:163.85, batch-reuse:1
@ 587 train 5.3365 , allloss: 5.3365, dt: 690.71ms, fracRes: 0.0579, norm(attn): 0.3477, norm(output): 0.7070, norm(x): 0.7291, norm(y): 0.9941, norm:0.3831, tok/sec: 189763.29, flops:166.21, batch-reuse:1
@ 588 train 5.3666 , allloss: 5.3666, dt: 699.71ms, fracRes: 0.0578, norm(attn): 0.3457, norm(output): 0.7070, norm(x): 0.7326, norm(y): 0.9941, norm:0.3530, tok/sec: 187324.37, flops:164.07, batch-reuse:1
@ 589 train 5.3244 , allloss: 5.3244, dt: 686.05ms, fracRes: 0.0569, norm(attn): 0.3457, norm(output): 0.7109, norm(x): 0.7323, norm(y): 0.9941, norm:0.3471, tok/sec: 191052.82, flops:167.33, batch-reuse:1
@ 590 train 5.3384 , allloss: 5.3384, dt: 695.81ms, fracRes: 0.0582, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7288, norm(y): 0.9942, norm:0.4032, tok/sec: 188374.53, flops:164.99, batch-reuse:1
@ 591 train 5.2565 , allloss: 5.2565, dt: 681.51ms, fracRes: 0.0592, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7231, norm(y): 0.9942, norm:0.4063, tok/sec: 192326.07, flops:168.45, batch-reuse:1
@ 592 train 5.3161 , allloss: 5.3161, dt: 687.16ms, fracRes: 0.0593, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7213, norm(y): 0.9941, norm:0.4492, tok/sec: 190744.38, flops:167.06, batch-reuse:1
@ 593 train 5.2984 , allloss: 5.2984, dt: 693.53ms, fracRes: 0.0596, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7148, norm(y): 0.9941, norm:0.3787, tok/sec: 188992.72, flops:165.53, batch-reuse:1
@ 594 train 5.5422 , allloss: 5.5422, dt: 693.29ms, fracRes: 0.0602, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7123, norm(y): 0.9941, norm:0.5036, tok/sec: 189057.32, flops:165.59, batch-reuse:1
@ 595 train 5.2234 , allloss: 5.2234, dt: 706.40ms, fracRes: 0.0587, norm(attn): 0.3418, norm(output): 0.6875, norm(x): 0.7125, norm(y): 0.9940, norm:0.5004, tok/sec: 185549.72, flops:162.51, batch-reuse:1
@ 596 train 5.2837 , allloss: 5.2837, dt: 706.31ms, fracRes: 0.0591, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7132, norm(y): 0.9940, norm:0.4986, tok/sec: 185572.33, flops:162.53, batch-reuse:1
@ 597 train 5.3061 , allloss: 5.3061, dt: 707.25ms, fracRes: 0.0603, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7129, norm(y): 0.9941, norm:0.4881, tok/sec: 185326.05, flops:162.32, batch-reuse:1
@ 598 train 5.3205 , allloss: 5.3205, dt: 699.11ms, fracRes: 0.0605, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7158, norm(y): 0.9941, norm:0.4866, tok/sec: 187485.29, flops:164.21, batch-reuse:1
@ 599 train 5.2659 , allloss: 5.2659, dt: 692.14ms, fracRes: 0.0603, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7231, norm(y): 0.9941, norm:0.5768, tok/sec: 189371.93, flops:165.86, batch-reuse:1
@ 600 train 5.2640 , allloss: 5.2640, dt: 699.15ms, fracRes: 0.0608, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7248, norm(y): 0.9940, norm:0.4886, tok/sec: 187473.98, flops:164.20, batch-reuse:1
@ 601 train 5.3286 , allloss: 5.3286, dt: 682.09ms, fracRes: 0.0608, norm(attn): 0.3438, norm(output): 0.7109, norm(x): 0.7290, norm(y): 0.9940, norm:0.4422, tok/sec: 192161.91, flops:168.31, batch-reuse:1
@ 602 train 5.3235 , allloss: 5.3235, dt: 679.66ms, fracRes: 0.0622, norm(attn): 0.3457, norm(output): 0.6992, norm(x): 0.7289, norm(y): 0.9940, norm:0.4301, tok/sec: 192848.06, flops:168.91, batch-reuse:1
@ 603 train 5.2516 , allloss: 5.2516, dt: 697.31ms, fracRes: 0.0639, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7184, norm(y): 0.9940, norm:0.4256, tok/sec: 187968.25, flops:164.63, batch-reuse:1
@ 604 train 5.1843 , allloss: 5.1843, dt: 699.36ms, fracRes: 0.0654, norm(attn): 0.3418, norm(output): 0.6836, norm(x): 0.7095, norm(y): 0.9940, norm:0.4388, tok/sec: 187416.20, flops:164.15, batch-reuse:1
@ 605 train 5.1819 , allloss: 5.1819, dt: 698.65ms, fracRes: 0.0669, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7159, norm(y): 0.9940, norm:0.4939, tok/sec: 187606.28, flops:164.32, batch-reuse:1
@ 606 train 5.2324 , allloss: 5.2324, dt: 701.60ms, fracRes: 0.0658, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7202, norm(y): 0.9940, norm:0.4176, tok/sec: 186818.81, flops:163.63, batch-reuse:1
@ 607 train 5.2274 , allloss: 5.2274, dt: 688.68ms, fracRes: 0.0659, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7156, norm(y): 0.9940, norm:0.4825, tok/sec: 190324.85, flops:166.70, batch-reuse:1
@ 608 train 5.1636 , allloss: 5.1636, dt: 698.64ms, fracRes: 0.0666, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7165, norm(y): 0.9940, norm:0.4121, tok/sec: 187608.97, flops:164.32, batch-reuse:1
@ 609 train 5.2023 , allloss: 5.2023, dt: 695.05ms, fracRes: 0.0675, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7185, norm(y): 0.9940, norm:0.4301, tok/sec: 188578.40, flops:165.17, batch-reuse:1
@ 610 train 5.3726 , allloss: 5.3726, dt: 695.12ms, fracRes: 0.0687, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7250, norm(y): 0.9940, norm:0.4528, tok/sec: 188561.52, flops:165.15, batch-reuse:1
@ 611 train 5.2334 , allloss: 5.2334, dt: 706.06ms, fracRes: 0.0703, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7198, norm(y): 0.9939, norm:0.4380, tok/sec: 185637.38, flops:162.59, batch-reuse:1
@ 612 train 5.2265 , allloss: 5.2265, dt: 702.94ms, fracRes: 0.0685, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7138, norm(y): 0.9939, norm:0.3919, tok/sec: 186461.63, flops:163.31, batch-reuse:1
@ 613 train 5.2946 , allloss: 5.2946, dt: 700.26ms, fracRes: 0.0681, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7136, norm(y): 0.9939, norm:0.4992, tok/sec: 187176.66, flops:163.94, batch-reuse:1
@ 614 train 5.2673 , allloss: 5.2673, dt: 709.16ms, fracRes: 0.0687, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7212, norm(y): 0.9939, norm:0.4767, tok/sec: 184826.35, flops:161.88, batch-reuse:1
@ 615 train 5.2812 , allloss: 5.2812, dt: 690.53ms, fracRes: 0.0685, norm(attn): 0.3477, norm(output): 0.6914, norm(x): 0.7204, norm(y): 0.9939, norm:0.4446, tok/sec: 189813.93, flops:166.25, batch-reuse:1
@ 616 train 5.2349 , allloss: 5.2349, dt: 700.66ms, fracRes: 0.0689, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7156, norm(y): 0.9939, norm:0.4430, tok/sec: 187068.45, flops:163.84, batch-reuse:1
@ 617 train 5.1080 , allloss: 5.1080, dt: 686.63ms, fracRes: 0.0691, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7102, norm(y): 0.9939, norm:0.4005, tok/sec: 190893.00, flops:167.19, batch-reuse:1
@ 618 train 5.1789 , allloss: 5.1789, dt: 697.40ms, fracRes: 0.0680, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7119, norm(y): 0.9939, norm:0.4457, tok/sec: 187942.93, flops:164.61, batch-reuse:1
@ 619 train 5.1911 , allloss: 5.1911, dt: 698.81ms, fracRes: 0.0694, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7128, norm(y): 0.9938, norm:0.4158, tok/sec: 187564.36, flops:164.28, batch-reuse:1
@ 620 train 5.1979 , allloss: 5.1979, dt: 701.02ms, fracRes: 0.0689, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7137, norm(y): 0.9938, norm:0.3930, tok/sec: 186973.01, flops:163.76, batch-reuse:1
@ 621 train 5.2497 , allloss: 5.2497, dt: 698.19ms, fracRes: 0.0675, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7145, norm(y): 0.9938, norm:0.4118, tok/sec: 187730.18, flops:164.42, batch-reuse:1
@ 622 train 5.1805 , allloss: 5.1805, dt: 698.61ms, fracRes: 0.0679, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7110, norm(y): 0.9938, norm:0.4715, tok/sec: 187617.80, flops:164.33, batch-reuse:1
@ 623 train 5.1443 , allloss: 5.1443, dt: 701.71ms, fracRes: 0.0695, norm(attn): 0.3398, norm(output): 0.6875, norm(x): 0.7090, norm(y): 0.9939, norm:0.6271, tok/sec: 186790.24, flops:163.60, batch-reuse:1
@ 624 train 5.1843 , allloss: 5.1843, dt: 701.62ms, fracRes: 0.0689, norm(attn): 0.3359, norm(output): 0.6875, norm(x): 0.7088, norm(y): 0.9939, norm:0.5268, tok/sec: 186812.20, flops:163.62, batch-reuse:1
@ 625 train 5.2396 , allloss: 5.2396, dt: 705.43ms, fracRes: 0.0695, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7097, norm(y): 0.9939, norm:0.4973, tok/sec: 185805.53, flops:162.74, batch-reuse:1
@ 626 train 5.1847 , allloss: 5.1847, dt: 700.58ms, fracRes: 0.0717, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7104, norm(y): 0.9938, norm:0.4711, tok/sec: 187089.39, flops:163.86, batch-reuse:1
@ 627 train 5.1311 , allloss: 5.1311, dt: 697.21ms, fracRes: 0.0732, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7161, norm(y): 0.9938, norm:0.7099, tok/sec: 187995.76, flops:164.66, batch-reuse:1
@ 628 train 5.2883 , allloss: 5.2883, dt: 709.17ms, fracRes: 0.0743, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7102, norm(y): 0.9939, norm:0.5962, tok/sec: 184824.92, flops:161.88, batch-reuse:1
@ 629 train 5.3303 , allloss: 5.3303, dt: 706.32ms, fracRes: 0.0767, norm(attn): 0.3418, norm(output): 0.6875, norm(x): 0.7161, norm(y): 0.9939, norm:0.4667, tok/sec: 185571.46, flops:162.53, batch-reuse:1
@ 630 train 5.2545 , allloss: 5.2545, dt: 697.96ms, fracRes: 0.0772, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7217, norm(y): 0.9939, norm:0.5011, tok/sec: 187792.19, flops:164.48, batch-reuse:1
@ 631 train 5.2311 , allloss: 5.2311, dt: 692.83ms, fracRes: 0.0764, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7205, norm(y): 0.9938, norm:0.4926, tok/sec: 189182.95, flops:165.70, batch-reuse:1
@ 632 train 5.5254 , allloss: 5.5254, dt: 689.07ms, fracRes: 0.0757, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7159, norm(y): 0.9938, norm:0.6280, tok/sec: 190215.93, flops:166.60, batch-reuse:1
@ 633 train 5.2418 , allloss: 5.2418, dt: 697.51ms, fracRes: 0.0746, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7201, norm(y): 0.9938, norm:0.5287, tok/sec: 187913.12, flops:164.58, batch-reuse:1
@ 634 train 5.2489 , allloss: 5.2489, dt: 694.82ms, fracRes: 0.0753, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7128, norm(y): 0.9939, norm:0.5591, tok/sec: 188640.65, flops:165.22, batch-reuse:1
@ 635 train 5.1934 , allloss: 5.1934, dt: 694.13ms, fracRes: 0.0759, norm(attn): 0.3457, norm(output): 0.6953, norm(x): 0.7237, norm(y): 0.9938, norm:0.4905, tok/sec: 188828.29, flops:165.39, batch-reuse:1
@ 636 train 5.2845 , allloss: 5.2845, dt: 696.88ms, fracRes: 0.0769, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7222, norm(y): 0.9938, norm:0.4403, tok/sec: 188084.97, flops:164.74, batch-reuse:1
@ 637 train 5.1655 , allloss: 5.1655, dt: 685.91ms, fracRes: 0.0764, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7141, norm(y): 0.9938, norm:0.5455, tok/sec: 191091.47, flops:167.37, batch-reuse:1
@ 638 train 5.1694 , allloss: 5.1694, dt: 700.56ms, fracRes: 0.0766, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7174, norm(y): 0.9939, norm:0.5156, tok/sec: 187095.76, flops:163.87, batch-reuse:1
@ 639 train 5.2128 , allloss: 5.2128, dt: 703.06ms, fracRes: 0.0757, norm(attn): 0.3535, norm(output): 0.6953, norm(x): 0.7253, norm(y): 0.9939, norm:0.4440, tok/sec: 186430.52, flops:163.29, batch-reuse:1
@ 640 train 5.1359 , allloss: 5.1359, dt: 697.43ms, fracRes: 0.0725, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7242, norm(y): 0.9939, norm:0.4097, tok/sec: 187934.51, flops:164.60, batch-reuse:1
@ 641 train 5.1051 , allloss: 5.1051, dt: 704.55ms, fracRes: 0.0729, norm(attn): 0.3555, norm(output): 0.6992, norm(x): 0.7263, norm(y): 0.9938, norm:0.4960, tok/sec: 186035.97, flops:162.94, batch-reuse:1
@ 642 train 5.1010 , allloss: 5.1010, dt: 684.23ms, fracRes: 0.0734, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7200, norm(y): 0.9938, norm:0.4529, tok/sec: 191562.56, flops:167.78, batch-reuse:1
@ 643 train 5.1924 , allloss: 5.1924, dt: 688.35ms, fracRes: 0.0760, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7135, norm(y): 0.9938, norm:0.4302, tok/sec: 190414.04, flops:166.78, batch-reuse:1
@ 644 train 5.2853 , allloss: 5.2853, dt: 684.30ms, fracRes: 0.0772, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7148, norm(y): 0.9937, norm:0.4391, tok/sec: 191540.94, flops:167.76, batch-reuse:1
@ 645 train 5.2163 , allloss: 5.2163, dt: 714.00ms, fracRes: 0.0789, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7170, norm(y): 0.9937, norm:0.5021, tok/sec: 183575.09, flops:160.79, batch-reuse:1
@ 646 train 5.1720 , allloss: 5.1720, dt: 678.03ms, fracRes: 0.0758, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7223, norm(y): 0.9937, norm:0.4314, tok/sec: 193311.89, flops:169.31, batch-reuse:1
@ 647 train 5.2222 , allloss: 5.2222, dt: 691.19ms, fracRes: 0.0748, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7264, norm(y): 0.9937, norm:0.4403, tok/sec: 189631.91, flops:166.09, batch-reuse:1
@ 648 train 5.1582 , allloss: 5.1582, dt: 696.29ms, fracRes: 0.0730, norm(attn): 0.3477, norm(output): 0.6914, norm(x): 0.7248, norm(y): 0.9937, norm:0.4213, tok/sec: 188244.37, flops:164.87, batch-reuse:1
@ 649 train 5.1872 , allloss: 5.1872, dt: 692.45ms, fracRes: 0.0729, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7198, norm(y): 0.9936, norm:0.4101, tok/sec: 189286.39, flops:165.79, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0295, 0.9688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0098, 0.3789, 0.6094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0515, 0.2129, 0.2891, 0.4473, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0337, 0.3926, 0.2500, 0.2217, 0.1030, 0.0000, 0.0000, 0.0000],
        [0.0198, 0.3574, 0.2656, 0.1128, 0.1108, 0.1338, 0.0000, 0.0000],
        [0.0112, 0.1689, 0.2754, 0.1602, 0.1523, 0.1157, 0.1157, 0.0000],
        [0.0148, 0.1279, 0.2197, 0.1211, 0.1177, 0.1094, 0.1133, 0.1768]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.1865,     -0.2285,     -0.2812,     -0.3066,     -0.2754,     -0.2158,     -0.2129],
        [     0.0086,      3.5000,      2.0156,      1.8125,      1.4062,      1.5000,      0.7617,      2.0781],
        [     0.0116,      3.6719,      4.1562,      4.6875,      4.5312,      3.7031,      3.6719,      4.5625],
        [    -0.0017,      1.4141,      1.7266,      2.1562,      1.2188,      1.5547,      1.2656,      2.0312],
        [    -0.0036,      2.4531,      2.0000,      1.8828,      1.1172,      1.5156,      1.0625,      1.8203],
        [    -0.0041,      2.8906,      2.5938,      1.7422,      1.7188,      1.9141,      1.4531,      1.8047],
        [    -0.0031,      2.7031,      3.2031,      2.6562,      2.6094,      2.3281,      2.3281,      2.7812],
        [     0.0046,      2.1562,      2.7031,      2.1094,      2.0781,      2.0000,      2.0469,      2.4844]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6389],
        [0.1735],
        [0.2260],
        [0.3484],
        [0.2504],
        [0.1457],
        [0.1103],
        [0.2055],
        [0.0869],
        [0.2310],
        [0.0560],
        [0.0636],
        [0.1736],
        [0.0658]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7930, 0.2090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7617, 0.2119, 0.0272, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7812, 0.1318, 0.0261, 0.0613, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5469, 0.1040, 0.2461, 0.0811, 0.0216, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.1748, 0.1865, 0.1050, 0.0537, 0.0452, 0.0000, 0.0000],
        [0.3887, 0.0850, 0.1426, 0.0342, 0.0248, 0.0564, 0.2695, 0.0000],
        [0.4258, 0.1562, 0.0728, 0.0850, 0.0197, 0.0302, 0.1289, 0.0825]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0361,     -0.0386,     -0.0483,     -0.1006,     -0.0503,     -0.0869,     -0.0811],
        [     0.0305,     -1.3047,     -2.8438,     -3.2969,     -5.7812,     -4.7812,     -5.5938,     -5.9688],
        [     0.0225,     -1.2578,     -3.3125,     -2.7969,     -5.7812,     -4.8438,     -4.2812,     -4.5000],
        [     0.0208,     -1.7656,     -3.3750,     -2.5312,     -5.2812,     -4.0312,     -3.8594,     -4.2188],
        [     0.0203,     -1.6406,     -0.7773,     -1.8906,     -3.2188,     -0.6055,     -1.9922,     -2.1875],
        [     0.0243,     -0.8828,     -0.8242,     -1.3984,     -2.0625,     -2.2344,     -1.4062,     -2.4531],
        [     0.0096,     -1.5156,     -0.9961,     -2.4219,     -2.7500,     -1.9219,     -0.3594,     -1.1406],
        [     0.0153,     -0.9883,     -1.7500,     -1.5938,     -3.0625,     -2.6250,     -1.1797,     -1.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5896],
        [0.4699],
        [0.4785],
        [0.4171],
        [0.4148],
        [0.3439],
        [0.3708],
        [0.3167],
        [0.3247],
        [0.2592],
        [0.2300],
        [0.3395],
        [0.2827],
        [0.2248]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0140,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0236,     0.8359,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.7031,     0.1118,     0.1826,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0066,     0.5117,     0.0894,     0.0776,     0.3145,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.2754,     0.0654,     0.0649,     0.3457,     0.2471,     0.0000,     0.0000],
        [    0.0050,     0.3105,     0.0605,     0.0542,     0.2695,     0.2188,     0.0820,     0.0000],
        [    0.0022,     0.2852,     0.0410,     0.0520,     0.1914,     0.2080,     0.0854,     0.1338]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0006,     -0.0820,     -0.1138,     -0.1230,     -0.0957,     -0.1108,     -0.1016,     -0.1367],
        [     0.0786,      4.3438,      2.0312,      2.1875,      3.7969,      3.8281,      3.0469,      3.5000],
        [     0.0674,      3.6406,      1.8594,      1.9297,      3.5469,      3.2500,      2.7188,      3.5156],
        [     0.0728,      5.9062,      4.0625,      4.5625,      5.8438,      5.6562,      5.0312,      6.0625],
        [     0.0742,      4.4375,      2.6875,      2.5312,      3.9375,      4.0312,      3.0938,      3.9062],
        [     0.0791,      5.8125,      4.3750,      4.3750,      6.0312,      5.7188,      4.7812,      5.8125],
        [     0.0693,      4.1875,      2.5625,      2.4531,      4.0625,      3.8438,      2.8594,      3.4531],
        [     0.0698,      4.9375,      3.0000,      3.2344,      4.5312,      4.6250,      3.7344,      4.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7467],
        [0.6573],
        [0.6383],
        [0.6315],
        [0.5881],
        [0.5628],
        [0.5522],
        [0.4411],
        [0.5550],
        [0.4617],
        [0.4109],
        [0.4320],
        [0.3785],
        [0.3813]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9805, 0.0184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.5508, 0.1191, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.4824, 0.1235, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8633, 0.0413, 0.0623, 0.0243, 0.0076, 0.0000, 0.0000, 0.0000],
        [0.6797, 0.0576, 0.0903, 0.0576, 0.0237, 0.0918, 0.0000, 0.0000],
        [0.6562, 0.0977, 0.0942, 0.1250, 0.0025, 0.0152, 0.0111, 0.0000],
        [0.3809, 0.0593, 0.0239, 0.0156, 0.0025, 0.0366, 0.0151, 0.4648]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0003,     -0.1069,     -0.0723,     -0.1309,     -0.1865,     -0.1611,     -0.2188,     -0.1729],
        [     0.0013,     -3.9688,     -1.8516,     -3.5781,     -4.7812,     -3.2500,     -3.5000,     -1.4375],
        [    -0.0123,      0.4922,     -1.0391,     -0.5430,     -1.1875,     -0.3438,      0.2891,      2.4375],
        [    -0.0079,      0.6641,     -0.6992,     -0.5156,     -0.1455,      1.5156,      2.2500,      3.9531],
        [    -0.0072,     -3.0469,     -2.6406,     -3.5781,     -4.7500,     -1.7734,     -3.3281,      0.6094],
        [     0.0029,     -2.4688,     -2.0156,     -2.4688,     -3.3594,     -2.0000,     -2.9375,      0.4746],
        [     0.0101,     -1.8906,     -1.9297,     -1.6406,     -5.5625,     -3.7500,     -4.0625,     -0.3008],
        [     0.0101,     -1.8516,     -2.7656,     -3.1875,     -5.0312,     -2.3281,     -3.2188,      0.2080]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8215],
        [0.3801],
        [0.4831],
        [0.4839],
        [0.4121],
        [0.3365],
        [0.2425],
        [0.1716],
        [0.1751],
        [0.2101],
        [0.1000],
        [0.1543],
        [0.1327],
        [0.0915]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8086,     0.1924,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1167,     0.3438,     0.5391,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1699,     0.3223,     0.1797,     0.3281,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.0007,     0.0013,     0.0021,     0.9922,     0.0000,     0.0000,     0.0000],
        [    0.2773,     0.0014,     0.0021,     0.0010,     0.5664,     0.1504,     0.0000,     0.0000],
        [    0.0004,     0.0000,     0.0000,     0.0000,     0.0001,     0.0006,     1.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0205,     0.9805]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0236,     -0.0903,     -0.1055,     -0.0464,     -0.1191,     -0.1118,     -0.1396],
        [    -0.0006,     -1.4375,     -3.3281,     -3.4531,      0.3379,     -4.0938,     -2.3750,     -1.2578],
        [     0.0007,      1.0781,      1.5312,      0.9844,      3.3750,     -4.9375,     -4.2500,     -2.7812],
        [    -0.0011,      0.6367,      0.0515,      0.6562,      3.4062,     -3.2031,     -4.1250,     -2.8594],
        [     0.0119,     -1.6797,     -1.0469,     -0.5273,      5.6250,     -3.3906,     -5.1875,     -2.8594],
        [     0.0112,     -5.3125,     -4.8750,     -5.5938,      0.7266,     -0.5977,      0.6289,      0.3262],
        [     0.0269,     -4.3438,     -2.0312,     -4.1875,     -1.5000,      0.4785,      7.9375,      8.5000],
        [     0.0284,     -8.1250,     -5.7812,     -8.8125,     -4.3438,     -1.5469,      8.5000,     12.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8768],
        [0.4874],
        [0.4759],
        [0.5445],
        [0.5207],
        [0.3541],
        [0.3256],
        [0.3643],
        [0.2662],
        [0.3116],
        [0.2553],
        [0.2860],
        [0.3168],
        [0.2751]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0021,     -0.1875,     -0.2832,     -0.2256,     -0.2812,     -0.2373,     -0.3555,     -0.3027],
        [    -0.1079,     -9.4375,    -15.4375,    -12.0000,    -15.1250,    -12.7500,    -19.1250,    -15.6875],
        [    -0.1416,    -12.1875,    -19.8750,    -16.2500,    -19.2500,    -16.5000,    -24.5000,    -20.1250],
        [    -0.1387,    -12.8750,    -19.8750,    -16.2500,    -19.6250,    -16.3750,    -24.2500,    -20.3750],
        [    -0.1807,    -15.6875,    -25.6250,    -21.1250,    -24.5000,    -21.0000,    -31.8750,    -27.2500],
        [    -0.1426,    -13.2500,    -19.5000,    -15.8125,    -19.7500,    -15.5000,    -24.6250,    -20.5000],
        [    -0.1758,    -16.1250,    -24.1250,    -19.2500,    -24.5000,    -20.1250,    -30.0000,    -25.5000],
        [    -0.1846,    -17.5000,    -25.5000,    -20.2500,    -26.2500,    -21.7500,    -31.0000,    -26.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6036],
        [0.4814],
        [0.5037],
        [0.4628],
        [0.5601],
        [0.4589],
        [0.4077],
        [0.4066],
        [0.3860],
        [0.4377],
        [0.3966],
        [0.4828],
        [0.3722],
        [0.4126]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.1235,     -0.1289,     -0.1260,     -0.1133,     -0.1226,     -0.1338,     -0.1123],
        [    -0.0278,    -19.8750,    -20.0000,    -20.1250,    -18.1250,    -19.0000,    -21.6250,    -17.7500],
        [    -0.0164,    -10.3125,    -11.3750,    -11.0625,     -9.8125,    -10.8125,    -11.6875,    -10.1875],
        [    -0.0203,    -13.9375,    -15.2500,    -15.0000,    -12.9375,    -14.3125,    -15.7500,    -13.5000],
        [    -0.0209,    -15.4375,    -16.2500,    -16.3750,    -13.6250,    -15.1250,    -17.1250,    -14.6250],
        [    -0.0267,    -18.5000,    -20.3750,    -20.3750,    -17.3750,    -19.1250,    -21.2500,    -18.2500],
        [    -0.0171,     -9.7500,    -10.5625,    -10.3750,     -9.1875,     -9.6250,    -11.0000,     -9.0000],
        [    -0.0144,    -11.1250,    -11.8125,    -11.6875,    -10.7500,    -11.0625,    -12.8125,    -10.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9111],
        [0.4976],
        [0.4972],
        [0.7295],
        [0.7366],
        [0.4827],
        [0.4381],
        [0.8079],
        [0.6254],
        [0.7116],
        [0.1498],
        [0.6847],
        [0.6346],
        [0.5734]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.3633, 0.3672, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5820, 0.1924, 0.1758, 0.0488, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.2363, 0.1299, 0.1118, 0.4336, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.0854, 0.0332, 0.0420, 0.1611, 0.2451, 0.0000, 0.0000],
        [0.0471, 0.1084, 0.0933, 0.0854, 0.2734, 0.0981, 0.2949, 0.0000],
        [0.3477, 0.0732, 0.0544, 0.0498, 0.1611, 0.1768, 0.0864, 0.0498]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0021,     -0.0162,     -0.0128,      0.0006,     -0.0038,     -0.0118,     -0.0131],
        [    -0.0012,     -1.6016,     -2.1406,     -2.5156,     -0.9648,     -0.3711,     -1.2266,     -2.0469],
        [     0.0063,      0.3125,      0.3223,     -0.7578,      2.2188,      0.9453,      2.8906,      0.2334],
        [     0.0039,     -1.1094,     -1.1953,     -2.4688,      0.4824,      0.4551,      1.0859,     -1.4141],
        [     0.0042,      0.9883,      0.3848,      0.2363,      1.5938,      0.6523,      1.0547,      0.5859],
        [    -0.0013,     -1.6250,     -2.5625,     -2.3281,     -0.9844,     -0.5703,     -2.4062,     -2.0000],
        [     0.0043,      0.8359,      0.6875,      0.5977,      1.7656,      0.7422,      1.8359,      0.6875],
        [    -0.0003,     -1.5547,     -1.8516,     -1.9453,     -0.7734,     -0.6797,     -1.3906,     -1.9453]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6284],
        [0.3097],
        [0.4698],
        [0.1015],
        [0.3962],
        [0.0568],
        [0.3898],
        [0.1998],
        [0.4391],
        [0.1993],
        [0.0146],
        [0.2791],
        [0.1924],
        [0.1397]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0825,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0280,     0.6406,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2734,     0.2178,     0.2930,     0.2168,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.3945,     0.1299,     0.3848,     0.0879,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.4512,     0.0767,     0.3203,     0.0361,     0.1152,     0.0000,     0.0000],
        [    0.0076,     0.2910,     0.1064,     0.2812,     0.0757,     0.1816,     0.0562,     0.0000],
        [    0.0046,     0.2041,     0.0894,     0.1582,     0.0610,     0.0977,     0.0574,     0.3262]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,      0.0532,      0.0417,      0.0493,      0.0361,      0.0469,      0.0332,      0.0569],
        [     0.0058,      2.4062,      2.1094,      2.4375,      2.0312,      2.4688,      2.0000,      2.8438],
        [     0.0072,      3.1406,      2.4844,      2.8750,      2.4375,      3.0156,      2.2344,      3.6094],
        [     0.0010,     -0.2236,      0.0703,     -0.2314,      0.4609,      0.4336,      0.3418,      0.0996],
        [     0.0103,      4.7188,      3.5938,      4.6875,      3.2188,      4.0625,      3.0625,      5.1875],
        [     0.0152,      7.4688,      5.6875,      7.1250,      4.9375,      6.0938,      4.9062,      8.1250],
        [     0.0080,      3.6562,      2.6562,      3.6250,      2.3125,      3.1875,      2.0156,      4.0000],
        [     0.0074,      3.7969,      2.9688,      3.5469,      2.5938,      3.0625,      2.5312,      4.2812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0439],
        [    0.0113],
        [    0.0338],
        [    0.0060],
        [    0.0012],
        [    0.0087],
        [    0.0044],
        [    0.0009],
        [    0.0033],
        [    0.0011],
        [    0.0046],
        [    0.0003],
        [    0.0007],
        [    0.0014]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.8906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0400, 0.6680, 0.2930, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1084, 0.4629, 0.2617, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0084, 0.2637, 0.1123, 0.0801, 0.5352, 0.0000, 0.0000, 0.0000],
        [0.0197, 0.2207, 0.1079, 0.0732, 0.4512, 0.1270, 0.0000, 0.0000],
        [0.0043, 0.1650, 0.0679, 0.0491, 0.3340, 0.0806, 0.3008, 0.0000],
        [0.0299, 0.1387, 0.0786, 0.0498, 0.2930, 0.0923, 0.2852, 0.0320]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0317,      0.0254,      0.0243,      0.0352,      0.0258,      0.0342,      0.0193],
        [    -0.0041,      2.1094,      1.4375,      1.0156,      2.8281,      1.5781,      2.7812,      0.4941],
        [    -0.0046,      2.8125,      1.9844,      1.6016,      3.5469,      2.1562,      3.4688,      1.0000],
        [    -0.0034,      1.4453,      0.8750,      0.4277,      2.1875,      1.0391,      2.1562,     -0.0260],
        [    -0.0049,      3.4375,      2.5938,      2.2500,      4.1562,      2.7500,      4.0625,      1.6172],
        [    -0.0041,      2.4219,      1.6953,      1.3125,      3.1250,      1.8594,      3.0625,      0.7734],
        [    -0.0050,      3.6406,      2.7500,      2.4219,      4.3438,      2.9219,      4.2188,      1.7656],
        [    -0.0033,      1.5312,      0.9609,      0.5039,      2.2812,      1.1250,      2.2500,      0.0649]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3615],
        [0.2759],
        [0.4304],
        [0.0539],
        [0.2231],
        [0.0272],
        [0.3584],
        [0.0333],
        [0.1278],
        [0.0227],
        [0.0128],
        [0.0539],
        [0.0215],
        [0.0077]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8828, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7109, 0.1230, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7461, 0.0771, 0.1260, 0.0508, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.1611, 0.1592, 0.1621, 0.1826, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.0840, 0.1040, 0.0698, 0.2441, 0.1338, 0.0000, 0.0000],
        [0.2295, 0.1348, 0.1260, 0.1416, 0.1216, 0.1240, 0.1221, 0.0000],
        [0.2695, 0.0378, 0.0554, 0.0272, 0.2207, 0.0840, 0.2656, 0.0413]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0014,      0.0003,      0.0019,     -0.0028,     -0.0006,     -0.0034,      0.0013],
        [    -0.0020,     -2.0000,     -1.6016,     -2.3594,     -0.1465,     -1.1641,      0.0510,     -1.9219],
        [    -0.0016,     -1.7500,     -1.4453,     -2.0312,     -0.2637,     -1.0938,     -0.1035,     -1.6875],
        [    -0.0022,     -2.2656,     -1.7812,     -2.6875,     -0.0747,     -1.2656,      0.1572,     -2.1719],
        [    -0.0003,     -0.7305,     -0.7383,     -0.7227,     -0.6055,     -0.7070,     -0.5742,     -0.7188],
        [    -0.0011,     -1.4688,     -1.2578,     -1.6484,     -0.4023,     -1.0000,     -0.2852,     -1.4141],
        [    -0.0001,     -0.5352,     -0.5977,     -0.4863,     -0.6367,     -0.6172,     -0.6328,     -0.5391],
        [    -0.0019,     -1.9609,     -1.5781,     -2.2969,     -0.2002,     -1.1641,     -0.0139,     -1.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8407],
        [0.7394],
        [0.7873],
        [0.4444],
        [0.5067],
        [0.3130],
        [0.4338],
        [0.2633],
        [0.2843],
        [0.2079],
        [0.1807],
        [0.1828],
        [0.1590],
        [0.1405]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0101,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.3730,     0.6250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0033,     0.3086,     0.4902,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.1533,     0.2832,     0.0874,     0.4746,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.1216,     0.2168,     0.0718,     0.3535,     0.2363,     0.0000,     0.0000],
        [    0.0001,     0.1016,     0.1934,     0.0574,     0.3145,     0.2070,     0.1260,     0.0000],
        [    0.0003,     0.0981,     0.1768,     0.0579,     0.2832,     0.1914,     0.1270,     0.0654]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0249,      0.0275,      0.0226,      0.0293,      0.0277,      0.0258,      0.0231],
        [    -0.0035,      4.5938,      5.0312,      4.1562,      5.4375,      5.1250,      4.8438,      4.2500],
        [    -0.0042,      5.3125,      5.8125,      4.8125,      6.2812,      5.9062,      5.5938,      4.9375],
        [    -0.0037,      4.5312,      5.0000,      4.0938,      5.3750,      5.0625,      4.7500,      4.1875],
        [    -0.0053,      6.4375,      7.0625,      5.9062,      7.5938,      7.1562,      6.7188,      6.0000],
        [    -0.0048,      5.9062,      6.4688,      5.3750,      6.9688,      6.5625,      6.1562,      5.5000],
        [    -0.0057,      6.7188,      7.3750,      6.1562,      7.8750,      7.4375,      6.9375,      6.2500],
        [    -0.0051,      5.9062,      6.4688,      5.3750,      6.9688,      6.5625,      6.1562,      5.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.3549],
        [    0.1763],
        [    0.2775],
        [    0.0093],
        [    0.0292],
        [    0.0030],
        [    0.0389],
        [    0.0020],
        [    0.0030],
        [    0.0013],
        [    0.0012],
        [    0.0012],
        [    0.0010],
        [    0.0009]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(====:0.0016====:0.0019 ><:0.0020:0.0020:0.0020:0.0021:0.0022:0.0020)

------
		(====:0.0019 ><:0.0020:0.0020:0.0020:0.0021:0.0022:0.0020:0.0020)
フフフフ
@ 650 train 5.0862 , allloss: 5.0862, dt: 1108.40ms, fracRes: 0.0747, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7134, norm(y): 0.9936, norm:0.3954, tok/sec: 118253.78, flops:103.57, batch-reuse:1
@ 651 train 5.1286 , allloss: 5.1286, dt: 690.09ms, fracRes: 0.0763, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7128, norm(y): 0.9936, norm:0.4958, tok/sec: 189934.47, flops:166.36, batch-reuse:1
@ 652 train 5.1097 , allloss: 5.1097, dt: 687.89ms, fracRes: 0.0763, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7143, norm(y): 0.9936, norm:0.5080, tok/sec: 190541.62, flops:166.89, batch-reuse:1
@ 653 train 5.0906 , allloss: 5.0906, dt: 694.73ms, fracRes: 0.0779, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7256, norm(y): 0.9938, norm:0.4849, tok/sec: 188666.87, flops:165.24, batch-reuse:1
@ 654 train 5.1054 , allloss: 5.1054, dt: 689.43ms, fracRes: 0.0779, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7280, norm(y): 0.9938, norm:0.4306, tok/sec: 190115.68, flops:166.51, batch-reuse:1
@ 655 train 5.1398 , allloss: 5.1398, dt: 693.95ms, fracRes: 0.0804, norm(attn): 0.3457, norm(output): 0.6953, norm(x): 0.7319, norm(y): 0.9938, norm:0.3932, tok/sec: 188879.02, flops:165.43, batch-reuse:1
@ 656 train 4.9618 , allloss: 4.9618, dt: 686.85ms, fracRes: 0.0814, norm(attn): 0.3477, norm(output): 0.6914, norm(x): 0.7269, norm(y): 0.9938, norm:0.4690, tok/sec: 190831.84, flops:167.14, batch-reuse:1
@ 657 train 5.0489 , allloss: 5.0489, dt: 684.23ms, fracRes: 0.0814, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7197, norm(y): 0.9937, norm:0.4138, tok/sec: 191561.96, flops:167.78, batch-reuse:1
@ 658 train 5.1431 , allloss: 5.1431, dt: 696.76ms, fracRes: 0.0804, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7215, norm(y): 0.9936, norm:0.4525, tok/sec: 188117.15, flops:164.76, batch-reuse:1
@ 659 train 5.1410 , allloss: 5.1410, dt: 687.45ms, fracRes: 0.0817, norm(attn): 0.3477, norm(output): 0.6914, norm(x): 0.7232, norm(y): 0.9937, norm:0.4300, tok/sec: 190663.60, flops:166.99, batch-reuse:1
@ 660 train 5.1382 , allloss: 5.1382, dt: 686.27ms, fracRes: 0.0816, norm(attn): 0.3535, norm(output): 0.6953, norm(x): 0.7231, norm(y): 0.9938, norm:0.4338, tok/sec: 190992.28, flops:167.28, batch-reuse:1
@ 661 train 5.0564 , allloss: 5.0564, dt: 695.89ms, fracRes: 0.0823, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7223, norm(y): 0.9938, norm:0.4307, tok/sec: 188351.04, flops:164.97, batch-reuse:1
@ 662 train 5.1920 , allloss: 5.1920, dt: 708.59ms, fracRes: 0.0831, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7232, norm(y): 0.9938, norm:0.4154, tok/sec: 184976.35, flops:162.01, batch-reuse:1
@ 663 train 5.1187 , allloss: 5.1187, dt: 691.37ms, fracRes: 0.0848, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7233, norm(y): 0.9938, norm:0.4288, tok/sec: 189582.93, flops:166.05, batch-reuse:1
@ 664 train 5.0546 , allloss: 5.0546, dt: 693.29ms, fracRes: 0.0842, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7167, norm(y): 0.9937, norm:0.3967, tok/sec: 189057.91, flops:165.59, batch-reuse:1
@ 665 train 5.0843 , allloss: 5.0843, dt: 703.33ms, fracRes: 0.0834, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7128, norm(y): 0.9936, norm:0.4218, tok/sec: 186358.79, flops:163.22, batch-reuse:1
@ 666 train 5.0126 , allloss: 5.0126, dt: 690.94ms, fracRes: 0.0841, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7118, norm(y): 0.9936, norm:0.5771, tok/sec: 189700.95, flops:166.15, batch-reuse:1
@ 667 train 4.9710 , allloss: 4.9710, dt: 676.23ms, fracRes: 0.0847, norm(attn): 0.3477, norm(output): 0.6836, norm(x): 0.7113, norm(y): 0.9935, norm:0.8968, tok/sec: 193826.74, flops:169.76, batch-reuse:1
@ 668 train 5.1623 , allloss: 5.1623, dt: 683.10ms, fracRes: 0.0824, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7243, norm(y): 0.9934, norm:0.6635, tok/sec: 191879.48, flops:168.06, batch-reuse:1
@ 669 train 5.0809 , allloss: 5.0809, dt: 693.37ms, fracRes: 0.0822, norm(attn): 0.3477, norm(output): 0.6953, norm(x): 0.7337, norm(y): 0.9936, norm:0.6255, tok/sec: 189036.78, flops:165.57, batch-reuse:1
@ 670 train 5.1877 , allloss: 5.1877, dt: 704.21ms, fracRes: 0.0831, norm(attn): 0.3555, norm(output): 0.7070, norm(x): 0.7431, norm(y): 0.9937, norm:0.4549, tok/sec: 186126.66, flops:163.02, batch-reuse:1
@ 671 train 5.0683 , allloss: 5.0683, dt: 703.54ms, fracRes: 0.0827, norm(attn): 0.3594, norm(output): 0.7148, norm(x): 0.7452, norm(y): 0.9937, norm:0.4615, tok/sec: 186304.35, flops:163.18, batch-reuse:1
@ 672 train 5.1462 , allloss: 5.1462, dt: 690.16ms, fracRes: 0.0839, norm(attn): 0.3535, norm(output): 0.7031, norm(x): 0.7372, norm(y): 0.9936, norm:0.5580, tok/sec: 189914.26, flops:166.34, batch-reuse:1
@ 673 train 5.1738 , allloss: 5.1738, dt: 687.09ms, fracRes: 0.0868, norm(attn): 0.3477, norm(output): 0.7070, norm(x): 0.7402, norm(y): 0.9937, norm:0.5541, tok/sec: 190762.78, flops:167.08, batch-reuse:1
@ 674 train 5.1275 , allloss: 5.1275, dt: 689.58ms, fracRes: 0.0878, norm(attn): 0.3516, norm(output): 0.6953, norm(x): 0.7386, norm(y): 0.9937, norm:0.4666, tok/sec: 190075.72, flops:166.48, batch-reuse:1
@ 675 train 5.0281 , allloss: 5.0281, dt: 695.06ms, fracRes: 0.0883, norm(attn): 0.3496, norm(output): 0.7109, norm(x): 0.7438, norm(y): 0.9936, norm:0.4364, tok/sec: 188577.17, flops:165.17, batch-reuse:1
@ 676 train 5.0225 , allloss: 5.0225, dt: 687.68ms, fracRes: 0.0884, norm(attn): 0.3477, norm(output): 0.7070, norm(x): 0.7443, norm(y): 0.9936, norm:0.4352, tok/sec: 190599.09, flops:166.94, batch-reuse:1
@ 677 train 5.1756 , allloss: 5.1756, dt: 691.98ms, fracRes: 0.0895, norm(attn): 0.3516, norm(output): 0.7070, norm(x): 0.7414, norm(y): 0.9936, norm:0.4951, tok/sec: 189414.74, flops:165.90, batch-reuse:1
@ 678 train 5.0154 , allloss: 5.0154, dt: 705.22ms, fracRes: 0.0880, norm(attn): 0.3516, norm(output): 0.6992, norm(x): 0.7383, norm(y): 0.9937, norm:0.4218, tok/sec: 185860.11, flops:162.79, batch-reuse:1
@ 679 train 5.0395 , allloss: 5.0395, dt: 696.66ms, fracRes: 0.0870, norm(attn): 0.3555, norm(output): 0.6992, norm(x): 0.7364, norm(y): 0.9937, norm:0.4052, tok/sec: 188142.45, flops:164.79, batch-reuse:1
@ 680 train 5.0353 , allloss: 5.0353, dt: 690.35ms, fracRes: 0.0870, norm(attn): 0.3594, norm(output): 0.6992, norm(x): 0.7368, norm(y): 0.9937, norm:0.4510, tok/sec: 189863.62, flops:166.29, batch-reuse:1
@ 681 train 5.0663 , allloss: 5.0663, dt: 703.44ms, fracRes: 0.0899, norm(attn): 0.3574, norm(output): 0.6992, norm(x): 0.7361, norm(y): 0.9937, norm:0.4301, tok/sec: 186330.68, flops:163.20, batch-reuse:1
@ 682 train 5.0736 , allloss: 5.0736, dt: 705.32ms, fracRes: 0.0905, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7313, norm(y): 0.9936, norm:0.4227, tok/sec: 185833.91, flops:162.76, batch-reuse:1
@ 683 train 5.0208 , allloss: 5.0208, dt: 694.02ms, fracRes: 0.0893, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7310, norm(y): 0.9936, norm:0.4803, tok/sec: 188858.58, flops:165.41, batch-reuse:1
@ 684 train 4.9989 , allloss: 4.9989, dt: 702.64ms, fracRes: 0.0886, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7269, norm(y): 0.9936, norm:0.4859, tok/sec: 186543.05, flops:163.38, batch-reuse:1
@ 685 train 5.0894 , allloss: 5.0894, dt: 711.27ms, fracRes: 0.0883, norm(attn): 0.3691, norm(output): 0.6914, norm(x): 0.7341, norm(y): 0.9936, norm:0.6711, tok/sec: 184278.62, flops:161.40, batch-reuse:1
@ 686 train 5.1267 , allloss: 5.1267, dt: 684.36ms, fracRes: 0.0889, norm(attn): 0.3574, norm(output): 0.7031, norm(x): 0.7392, norm(y): 0.9936, norm:0.5604, tok/sec: 191524.72, flops:167.75, batch-reuse:1
@ 687 train 5.1004 , allloss: 5.1004, dt: 685.15ms, fracRes: 0.0892, norm(attn): 0.3516, norm(output): 0.6992, norm(x): 0.7414, norm(y): 0.9936, norm:0.4653, tok/sec: 191303.92, flops:167.55, batch-reuse:1
@ 688 train 4.9949 , allloss: 4.9949, dt: 695.78ms, fracRes: 0.0904, norm(attn): 0.3457, norm(output): 0.6953, norm(x): 0.7370, norm(y): 0.9936, norm:0.5036, tok/sec: 188380.21, flops:164.99, batch-reuse:1
@ 689 train 5.0365 , allloss: 5.0365, dt: 691.69ms, fracRes: 0.0924, norm(attn): 0.3535, norm(output): 0.6992, norm(x): 0.7394, norm(y): 0.9936, norm:0.6097, tok/sec: 189496.09, flops:165.97, batch-reuse:1
@ 690 train 4.9762 , allloss: 4.9762, dt: 694.68ms, fracRes: 0.0924, norm(attn): 0.3457, norm(output): 0.6992, norm(x): 0.7384, norm(y): 0.9937, norm:0.5281, tok/sec: 188678.97, flops:165.26, batch-reuse:1
@ 691 train 5.0741 , allloss: 5.0741, dt: 693.63ms, fracRes: 0.0930, norm(attn): 0.3477, norm(output): 0.6953, norm(x): 0.7409, norm(y): 0.9936, norm:0.4198, tok/sec: 188966.54, flops:165.51, batch-reuse:1
@ 692 train 5.0329 , allloss: 5.0329, dt: 695.07ms, fracRes: 0.0956, norm(attn): 0.3496, norm(output): 0.6992, norm(x): 0.7415, norm(y): 0.9936, norm:0.4503, tok/sec: 188574.39, flops:165.16, batch-reuse:1
@ 693 train 5.0865 , allloss: 5.0865, dt: 683.09ms, fracRes: 0.0971, norm(attn): 0.3457, norm(output): 0.6953, norm(x): 0.7422, norm(y): 0.9935, norm:0.4720, tok/sec: 191880.08, flops:168.06, batch-reuse:1
@ 694 train 4.9540 , allloss: 4.9540, dt: 698.19ms, fracRes: 0.0971, norm(attn): 0.3496, norm(output): 0.6875, norm(x): 0.7356, norm(y): 0.9935, norm:0.4234, tok/sec: 187731.59, flops:164.43, batch-reuse:1
@ 695 train 5.0175 , allloss: 5.0175, dt: 685.32ms, fracRes: 0.0957, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7373, norm(y): 0.9934, norm:0.4885, tok/sec: 191255.94, flops:167.51, batch-reuse:1
@ 696 train 4.9065 , allloss: 4.9065, dt: 679.45ms, fracRes: 0.0969, norm(attn): 0.3496, norm(output): 0.6953, norm(x): 0.7392, norm(y): 0.9933, norm:0.4737, tok/sec: 192907.81, flops:168.96, batch-reuse:1
@ 697 train 4.9123 , allloss: 4.9123, dt: 693.05ms, fracRes: 0.0988, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7384, norm(y): 0.9933, norm:0.4176, tok/sec: 189124.31, flops:165.65, batch-reuse:1
@ 698 train 5.0179 , allloss: 5.0179, dt: 693.98ms, fracRes: 0.0969, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7340, norm(y): 0.9934, norm:0.4499, tok/sec: 188869.81, flops:165.42, batch-reuse:1
@ 699 train 4.9973 , allloss: 4.9973, dt: 698.67ms, fracRes: 0.0962, norm(attn): 0.3535, norm(output): 0.6953, norm(x): 0.7335, norm(y): 0.9934, norm:0.4491, tok/sec: 187601.09, flops:164.31, batch-reuse:1
@ 700 train 4.9574 , allloss: 4.9574, dt: 697.59ms, fracRes: 0.0977, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7326, norm(y): 0.9934, norm:0.4443, tok/sec: 187893.66, flops:164.57, batch-reuse:1
@ 701 train 4.9874 , allloss: 4.9874, dt: 693.46ms, fracRes: 0.0961, norm(attn): 0.3496, norm(output): 0.6914, norm(x): 0.7352, norm(y): 0.9934, norm:0.4575, tok/sec: 189010.59, flops:165.55, batch-reuse:1
@ 702 train 4.9527 , allloss: 4.9527, dt: 692.19ms, fracRes: 0.0979, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7391, norm(y): 0.9934, norm:0.4943, tok/sec: 189357.19, flops:165.85, batch-reuse:1
@ 703 train 5.0172 , allloss: 5.0172, dt: 690.45ms, fracRes: 0.0975, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7353, norm(y): 0.9934, norm:0.4495, tok/sec: 189836.22, flops:166.27, batch-reuse:1
@ 704 train 4.8990 , allloss: 4.8990, dt: 695.62ms, fracRes: 0.0975, norm(attn): 0.3438, norm(output): 0.6953, norm(x): 0.7407, norm(y): 0.9934, norm:0.3970, tok/sec: 188424.89, flops:165.03, batch-reuse:1
@ 705 train 5.0123 , allloss: 5.0123, dt: 694.81ms, fracRes: 0.0974, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7412, norm(y): 0.9934, norm:0.3985, tok/sec: 188643.82, flops:165.22, batch-reuse:1
@ 706 train 4.9194 , allloss: 4.9194, dt: 694.30ms, fracRes: 0.0950, norm(attn): 0.3496, norm(output): 0.6992, norm(x): 0.7384, norm(y): 0.9935, norm:0.3980, tok/sec: 188783.87, flops:165.35, batch-reuse:1
@ 707 train 4.9558 , allloss: 4.9558, dt: 694.66ms, fracRes: 0.0957, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7339, norm(y): 0.9935, norm:0.4340, tok/sec: 188684.80, flops:165.26, batch-reuse:1
@ 708 train 4.9743 , allloss: 4.9743, dt: 683.48ms, fracRes: 0.0974, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7363, norm(y): 0.9934, norm:0.4025, tok/sec: 191771.58, flops:167.96, batch-reuse:1
@ 709 train 4.9486 , allloss: 4.9486, dt: 682.45ms, fracRes: 0.1001, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7259, norm(y): 0.9934, norm:0.4526, tok/sec: 192061.61, flops:168.22, batch-reuse:1
@ 710 train 5.1264 , allloss: 5.1264, dt: 689.68ms, fracRes: 0.1000, norm(attn): 0.3438, norm(output): 0.6836, norm(x): 0.7219, norm(y): 0.9934, norm:0.4571, tok/sec: 190048.25, flops:166.45, batch-reuse:1
@ 711 train 5.0275 , allloss: 5.0275, dt: 690.19ms, fracRes: 0.0990, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7179, norm(y): 0.9935, norm:0.4452, tok/sec: 189907.43, flops:166.33, batch-reuse:1
@ 712 train 4.9631 , allloss: 4.9631, dt: 693.50ms, fracRes: 0.0990, norm(attn): 0.3457, norm(output): 0.6797, norm(x): 0.7167, norm(y): 0.9935, norm:0.4929, tok/sec: 188999.86, flops:165.54, batch-reuse:1
@ 713 train 4.9319 , allloss: 4.9319, dt: 692.09ms, fracRes: 0.0996, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7201, norm(y): 0.9934, norm:0.4885, tok/sec: 189386.35, flops:165.88, batch-reuse:1
@ 714 train 4.9063 , allloss: 4.9063, dt: 697.82ms, fracRes: 0.1017, norm(attn): 0.3496, norm(output): 0.6914, norm(x): 0.7354, norm(y): 0.9935, norm:0.5157, tok/sec: 187830.62, flops:164.51, batch-reuse:1
@ 715 train 4.9059 , allloss: 4.9059, dt: 686.46ms, fracRes: 0.1014, norm(attn): 0.3574, norm(output): 0.6953, norm(x): 0.7446, norm(y): 0.9935, norm:0.4251, tok/sec: 190937.76, flops:167.23, batch-reuse:1
@ 716 train 4.9383 , allloss: 4.9383, dt: 698.59ms, fracRes: 0.0988, norm(attn): 0.3613, norm(output): 0.6992, norm(x): 0.7456, norm(y): 0.9935, norm:0.4737, tok/sec: 187624.85, flops:164.33, batch-reuse:1
@ 717 train 4.8519 , allloss: 4.8519, dt: 699.49ms, fracRes: 0.1001, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7384, norm(y): 0.9934, norm:0.5157, tok/sec: 187381.71, flops:164.12, batch-reuse:1
@ 718 train 4.9207 , allloss: 4.9207, dt: 696.08ms, fracRes: 0.1005, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7418, norm(y): 0.9934, norm:0.4332, tok/sec: 188299.11, flops:164.92, batch-reuse:1
@ 719 train 4.8961 , allloss: 4.8961, dt: 696.55ms, fracRes: 0.1003, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7379, norm(y): 0.9934, norm:0.4670, tok/sec: 188172.85, flops:164.81, batch-reuse:1
@ 720 train 4.8689 , allloss: 4.8689, dt: 688.40ms, fracRes: 0.1014, norm(attn): 0.3496, norm(output): 0.6914, norm(x): 0.7313, norm(y): 0.9934, norm:0.4507, tok/sec: 190400.00, flops:166.76, batch-reuse:1
@ 721 train 4.7929 , allloss: 4.7929, dt: 697.53ms, fracRes: 0.1015, norm(attn): 0.3496, norm(output): 0.6953, norm(x): 0.7367, norm(y): 0.9934, norm:0.5085, tok/sec: 187908.88, flops:164.58, batch-reuse:1
@ 722 train 4.8665 , allloss: 4.8665, dt: 685.14ms, fracRes: 0.1030, norm(attn): 0.3477, norm(output): 0.6914, norm(x): 0.7355, norm(y): 0.9934, norm:0.4659, tok/sec: 191307.38, flops:167.56, batch-reuse:1
@ 723 train 5.0045 , allloss: 5.0045, dt: 706.37ms, fracRes: 0.1036, norm(attn): 0.3477, norm(output): 0.6914, norm(x): 0.7360, norm(y): 0.9934, norm:0.4407, tok/sec: 185558.43, flops:162.52, batch-reuse:1
@ 724 train 4.9165 , allloss: 4.9165, dt: 692.78ms, fracRes: 0.1041, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7342, norm(y): 0.9933, norm:0.4196, tok/sec: 189197.53, flops:165.71, batch-reuse:1
@ 725 train 4.9105 , allloss: 4.9105, dt: 692.33ms, fracRes: 0.1033, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7292, norm(y): 0.9933, norm:0.4263, tok/sec: 189320.48, flops:165.82, batch-reuse:1
@ 726 train 4.9347 , allloss: 4.9347, dt: 683.39ms, fracRes: 0.1054, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7314, norm(y): 0.9933, norm:0.3877, tok/sec: 191796.34, flops:167.99, batch-reuse:1
@ 727 train 4.8925 , allloss: 4.8925, dt: 697.25ms, fracRes: 0.1050, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7321, norm(y): 0.9934, norm:0.4379, tok/sec: 187984.77, flops:164.65, batch-reuse:1
@ 728 train 4.9445 , allloss: 4.9445, dt: 696.05ms, fracRes: 0.1041, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7308, norm(y): 0.9934, norm:0.4825, tok/sec: 188307.30, flops:164.93, batch-reuse:1
@ 729 train 4.9036 , allloss: 4.9036, dt: 701.65ms, fracRes: 0.1015, norm(attn): 0.3594, norm(output): 0.6875, norm(x): 0.7297, norm(y): 0.9934, norm:0.5248, tok/sec: 186804.21, flops:163.61, batch-reuse:1
@ 730 train 4.8991 , allloss: 4.8991, dt: 697.38ms, fracRes: 0.1023, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7270, norm(y): 0.9934, norm:0.4579, tok/sec: 187947.88, flops:164.62, batch-reuse:1
@ 731 train 4.9304 , allloss: 4.9304, dt: 693.49ms, fracRes: 0.1052, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7253, norm(y): 0.9934, norm:0.4090, tok/sec: 189002.20, flops:165.54, batch-reuse:1
@ 732 train 4.8631 , allloss: 4.8631, dt: 704.50ms, fracRes: 0.1065, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7230, norm(y): 0.9934, norm:0.4298, tok/sec: 186050.82, flops:162.95, batch-reuse:1
@ 733 train 4.9300 , allloss: 4.9300, dt: 705.03ms, fracRes: 0.1104, norm(attn): 0.3477, norm(output): 0.6797, norm(x): 0.7230, norm(y): 0.9933, norm:0.4371, tok/sec: 185908.63, flops:162.83, batch-reuse:1
@ 734 train 4.9199 , allloss: 4.9199, dt: 709.22ms, fracRes: 0.1101, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7244, norm(y): 0.9933, norm:0.3893, tok/sec: 184812.25, flops:161.87, batch-reuse:1
@ 735 train 4.9365 , allloss: 4.9365, dt: 696.55ms, fracRes: 0.1061, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7238, norm(y): 0.9934, norm:0.4019, tok/sec: 188172.59, flops:164.81, batch-reuse:1
@ 736 train 4.9972 , allloss: 4.9972, dt: 704.14ms, fracRes: 0.1034, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7268, norm(y): 0.9934, norm:0.4285, tok/sec: 186144.18, flops:163.04, batch-reuse:1
@ 737 train 4.9111 , allloss: 4.9111, dt: 695.08ms, fracRes: 0.1026, norm(attn): 0.3496, norm(output): 0.6875, norm(x): 0.7266, norm(y): 0.9934, norm:0.4263, tok/sec: 188570.83, flops:165.16, batch-reuse:1
@ 738 train 4.9373 , allloss: 4.9373, dt: 690.79ms, fracRes: 0.1044, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7286, norm(y): 0.9934, norm:0.3855, tok/sec: 189743.24, flops:166.19, batch-reuse:1
@ 739 train 4.8700 , allloss: 4.8700, dt: 694.26ms, fracRes: 0.1052, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7299, norm(y): 0.9934, norm:0.4518, tok/sec: 188793.86, flops:165.36, batch-reuse:1
@ 740 train 4.9096 , allloss: 4.9096, dt: 688.96ms, fracRes: 0.1037, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7271, norm(y): 0.9934, norm:0.4169, tok/sec: 190247.46, flops:166.63, batch-reuse:1
@ 741 train 5.0439 , allloss: 5.0439, dt: 679.35ms, fracRes: 0.1035, norm(attn): 0.3496, norm(output): 0.6875, norm(x): 0.7251, norm(y): 0.9934, norm:0.4823, tok/sec: 192935.97, flops:168.98, batch-reuse:1
@ 742 train 5.0616 , allloss: 5.0616, dt: 695.13ms, fracRes: 0.1044, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7234, norm(y): 0.9934, norm:0.4429, tok/sec: 188557.44, flops:165.15, batch-reuse:1
@ 743 train 5.0519 , allloss: 5.0519, dt: 693.67ms, fracRes: 0.1055, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7235, norm(y): 0.9933, norm:0.6020, tok/sec: 188953.87, flops:165.50, batch-reuse:1
@ 744 train 5.0459 , allloss: 5.0459, dt: 704.83ms, fracRes: 0.1066, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7260, norm(y): 0.9933, norm:0.6662, tok/sec: 185961.90, flops:162.88, batch-reuse:1
@ 745 train 5.0651 , allloss: 5.0651, dt: 696.87ms, fracRes: 0.1085, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7283, norm(y): 0.9933, norm:0.6634, tok/sec: 188086.06, flops:164.74, batch-reuse:1
@ 746 train 5.0812 , allloss: 5.0812, dt: 697.00ms, fracRes: 0.1076, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7346, norm(y): 0.9935, norm:0.5858, tok/sec: 188052.29, flops:164.71, batch-reuse:1
@ 747 train 5.0696 , allloss: 5.0696, dt: 696.89ms, fracRes: 0.1062, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7389, norm(y): 0.9934, norm:0.4876, tok/sec: 188081.62, flops:164.73, batch-reuse:1
@ 748 train 5.0564 , allloss: 5.0564, dt: 678.28ms, fracRes: 0.1067, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7357, norm(y): 0.9934, norm:0.4792, tok/sec: 193240.88, flops:169.25, batch-reuse:1
@ 749 train 5.0913 , allloss: 5.0913, dt: 690.02ms, fracRes: 0.1080, norm(attn): 0.3496, norm(output): 0.6914, norm(x): 0.7384, norm(y): 0.9933, norm:0.4973, tok/sec: 189954.42, flops:166.37, batch-reuse:1
@ 750 train 5.1810 , allloss: 5.1810, dt: 696.25ms, fracRes: 0.1075, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7368, norm(y): 0.9933, norm:0.5275, tok/sec: 188255.39, flops:164.88, batch-reuse:1
@ 751 train 5.0661 , allloss: 5.0661, dt: 703.24ms, fracRes: 0.1068, norm(attn): 0.3496, norm(output): 0.6914, norm(x): 0.7355, norm(y): 0.9933, norm:0.6168, tok/sec: 186382.42, flops:163.24, batch-reuse:1
@ 752 train 4.9729 , allloss: 4.9729, dt: 693.10ms, fracRes: 0.1090, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7396, norm(y): 0.9932, norm:0.5050, tok/sec: 189110.00, flops:165.63, batch-reuse:1
@ 753 train 5.0455 , allloss: 5.0455, dt: 697.66ms, fracRes: 0.1071, norm(attn): 0.3457, norm(output): 0.6914, norm(x): 0.7401, norm(y): 0.9933, norm:0.4632, tok/sec: 187873.05, flops:164.55, batch-reuse:1
@ 754 train 5.0364 , allloss: 5.0364, dt: 699.94ms, fracRes: 0.1058, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7375, norm(y): 0.9933, norm:0.4576, tok/sec: 187261.77, flops:164.01, batch-reuse:1
@ 755 train 5.1358 , allloss: 5.1358, dt: 696.65ms, fracRes: 0.1057, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7405, norm(y): 0.9933, norm:0.4781, tok/sec: 188147.09, flops:164.79, batch-reuse:1
@ 756 train 5.0162 , allloss: 5.0162, dt: 693.50ms, fracRes: 0.1065, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7382, norm(y): 0.9933, norm:0.4261, tok/sec: 188999.41, flops:165.54, batch-reuse:1
@ 757 train 5.0663 , allloss: 5.0663, dt: 688.52ms, fracRes: 0.1055, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7355, norm(y): 0.9933, norm:0.4001, tok/sec: 190367.43, flops:166.73, batch-reuse:1
@ 758 train 5.0207 , allloss: 5.0207, dt: 695.27ms, fracRes: 0.1047, norm(attn): 0.3613, norm(output): 0.6914, norm(x): 0.7322, norm(y): 0.9933, norm:0.4581, tok/sec: 188520.84, flops:165.12, batch-reuse:1
@ 759 train 5.0886 , allloss: 5.0886, dt: 717.43ms, fracRes: 0.1054, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7384, norm(y): 0.9934, norm:0.4695, tok/sec: 182695.87, flops:160.02, batch-reuse:1
@ 760 train 5.1100 , allloss: 5.1100, dt: 700.18ms, fracRes: 0.1070, norm(attn): 0.3594, norm(output): 0.7031, norm(x): 0.7425, norm(y): 0.9934, norm:0.5649, tok/sec: 187198.07, flops:163.96, batch-reuse:1
@ 761 train 5.1180 , allloss: 5.1180, dt: 704.32ms, fracRes: 0.1091, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7415, norm(y): 0.9934, norm:0.5578, tok/sec: 186096.67, flops:162.99, batch-reuse:1
@ 762 train 5.0496 , allloss: 5.0496, dt: 751.85ms, fracRes: 0.1116, norm(attn): 0.3477, norm(output): 0.6914, norm(x): 0.7400, norm(y): 0.9932, norm:0.4863, tok/sec: 174331.68, flops:152.69, batch-reuse:1
@ 763 train 5.0924 , allloss: 5.0924, dt: 704.08ms, fracRes: 0.1120, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7343, norm(y): 0.9932, norm:0.4121, tok/sec: 186160.32, flops:163.05, batch-reuse:1
@ 764 train 5.0016 , allloss: 5.0016, dt: 673.82ms, fracRes: 0.1110, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7286, norm(y): 0.9932, norm:0.5028, tok/sec: 194519.62, flops:170.37, batch-reuse:1
@ 765 train 4.9936 , allloss: 4.9936, dt: 691.50ms, fracRes: 0.1109, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7244, norm(y): 0.9933, norm:0.5963, tok/sec: 189546.20, flops:166.02, batch-reuse:1
@ 766 train 4.9387 , allloss: 4.9387, dt: 710.50ms, fracRes: 0.1140, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7338, norm(y): 0.9932, norm:0.5192, tok/sec: 184478.29, flops:161.58, batch-reuse:1
@ 767 train 5.0855 , allloss: 5.0855, dt: 707.52ms, fracRes: 0.1155, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7401, norm(y): 0.9932, norm:0.4585, tok/sec: 185255.29, flops:162.26, batch-reuse:1
@ 768 train 5.1812 , allloss: 5.1812, dt: 702.14ms, fracRes: 0.1146, norm(attn): 0.3438, norm(output): 0.6875, norm(x): 0.7405, norm(y): 0.9931, norm:0.4799, tok/sec: 186674.49, flops:163.50, batch-reuse:1
@ 769 train 5.0501 , allloss: 5.0501, dt: 707.18ms, fracRes: 0.1175, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7389, norm(y): 0.9931, norm:0.4629, tok/sec: 185344.29, flops:162.33, batch-reuse:1
@ 770 train 4.9874 , allloss: 4.9874, dt: 701.96ms, fracRes: 0.1154, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7381, norm(y): 0.9932, norm:0.4662, tok/sec: 186723.31, flops:163.54, batch-reuse:1
@ 771 train 5.0187 , allloss: 5.0187, dt: 712.19ms, fracRes: 0.1127, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7377, norm(y): 0.9934, norm:0.5013, tok/sec: 184041.91, flops:161.19, batch-reuse:1
@ 772 train 5.0054 , allloss: 5.0054, dt: 706.65ms, fracRes: 0.1125, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7405, norm(y): 0.9934, norm:0.4301, tok/sec: 185482.36, flops:162.46, batch-reuse:1
@ 773 train 5.0546 , allloss: 5.0546, dt: 707.08ms, fracRes: 0.1132, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7456, norm(y): 0.9933, norm:0.4322, tok/sec: 185371.16, flops:162.36, batch-reuse:1
@ 774 train 4.9096 , allloss: 4.9096, dt: 691.89ms, fracRes: 0.1125, norm(attn): 0.3613, norm(output): 0.6992, norm(x): 0.7470, norm(y): 0.9933, norm:0.5226, tok/sec: 189441.69, flops:165.92, batch-reuse:1
@ 775 train 5.0465 , allloss: 5.0465, dt: 699.74ms, fracRes: 0.1128, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7402, norm(y): 0.9933, norm:0.4641, tok/sec: 187316.01, flops:164.06, batch-reuse:1
@ 776 train 4.9357 , allloss: 4.9357, dt: 695.77ms, fracRes: 0.1143, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7362, norm(y): 0.9933, norm:0.5462, tok/sec: 188383.63, flops:165.00, batch-reuse:1
@ 777 train 4.9782 , allloss: 4.9782, dt: 694.85ms, fracRes: 0.1155, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7407, norm(y): 0.9933, norm:0.5045, tok/sec: 188634.11, flops:165.22, batch-reuse:1
@ 778 train 4.9744 , allloss: 4.9744, dt: 675.81ms, fracRes: 0.1149, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7408, norm(y): 0.9933, norm:0.4886, tok/sec: 193948.39, flops:169.87, batch-reuse:1
@ 779 train 5.0443 , allloss: 5.0443, dt: 680.36ms, fracRes: 0.1154, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7373, norm(y): 0.9934, norm:0.4711, tok/sec: 192649.64, flops:168.73, batch-reuse:1
@ 780 train 5.0252 , allloss: 5.0252, dt: 705.11ms, fracRes: 0.1165, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7344, norm(y): 0.9934, norm:0.4932, tok/sec: 185889.21, flops:162.81, batch-reuse:1
@ 781 train 5.0160 , allloss: 5.0160, dt: 680.48ms, fracRes: 0.1164, norm(attn): 0.3496, norm(output): 0.6914, norm(x): 0.7394, norm(y): 0.9933, norm:0.4272, tok/sec: 192617.92, flops:168.71, batch-reuse:1
@ 782 train 5.0231 , allloss: 5.0231, dt: 675.83ms, fracRes: 0.1148, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7373, norm(y): 0.9932, norm:0.4312, tok/sec: 193941.89, flops:169.87, batch-reuse:1
@ 783 train 4.9748 , allloss: 4.9748, dt: 694.65ms, fracRes: 0.1143, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7356, norm(y): 0.9931, norm:0.5482, tok/sec: 188687.07, flops:165.26, batch-reuse:1
@ 784 train 4.9586 , allloss: 4.9586, dt: 694.52ms, fracRes: 0.1139, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7276, norm(y): 0.9932, norm:0.5425, tok/sec: 188724.18, flops:165.30, batch-reuse:1
@ 785 train 4.9496 , allloss: 4.9496, dt: 691.65ms, fracRes: 0.1132, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7324, norm(y): 0.9933, norm:0.4318, tok/sec: 189506.34, flops:165.98, batch-reuse:1
@ 786 train 4.9138 , allloss: 4.9138, dt: 710.69ms, fracRes: 0.1158, norm(attn): 0.3613, norm(output): 0.6914, norm(x): 0.7384, norm(y): 0.9932, norm:0.3857, tok/sec: 184429.15, flops:161.53, batch-reuse:1
@ 787 train 4.9375 , allloss: 4.9375, dt: 705.52ms, fracRes: 0.1185, norm(attn): 0.3652, norm(output): 0.6875, norm(x): 0.7403, norm(y): 0.9932, norm:0.4626, tok/sec: 185780.85, flops:162.72, batch-reuse:1
@ 788 train 5.0336 , allloss: 5.0336, dt: 706.34ms, fracRes: 0.1190, norm(attn): 0.3633, norm(output): 0.6875, norm(x): 0.7374, norm(y): 0.9932, norm:0.4437, tok/sec: 185565.88, flops:162.53, batch-reuse:1
@ 789 train 4.9208 , allloss: 4.9208, dt: 701.70ms, fracRes: 0.1171, norm(attn): 0.3574, norm(output): 0.6875, norm(x): 0.7321, norm(y): 0.9932, norm:0.4315, tok/sec: 186790.81, flops:163.60, batch-reuse:1
@ 790 train 4.8959 , allloss: 4.8959, dt: 693.12ms, fracRes: 0.1157, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7349, norm(y): 0.9932, norm:0.4896, tok/sec: 189103.43, flops:165.63, batch-reuse:1
@ 791 train 5.0742 , allloss: 5.0742, dt: 690.68ms, fracRes: 0.1138, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7353, norm(y): 0.9932, norm:0.4780, tok/sec: 189773.24, flops:166.21, batch-reuse:1
@ 792 train 4.9841 , allloss: 4.9841, dt: 682.83ms, fracRes: 0.1168, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7382, norm(y): 0.9932, norm:0.4331, tok/sec: 191952.71, flops:168.12, batch-reuse:1
@ 793 train 4.9656 , allloss: 4.9656, dt: 725.58ms, fracRes: 0.1155, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7387, norm(y): 0.9932, norm:0.4007, tok/sec: 180644.34, flops:158.22, batch-reuse:1
@ 794 train 4.9946 , allloss: 4.9946, dt: 700.04ms, fracRes: 0.1153, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7393, norm(y): 0.9932, norm:0.4669, tok/sec: 187234.67, flops:163.99, batch-reuse:1
@ 795 train 4.8540 , allloss: 4.8540, dt: 682.48ms, fracRes: 0.1149, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7394, norm(y): 0.9932, norm:0.4006, tok/sec: 192053.02, flops:168.21, batch-reuse:1
@ 796 train 4.7909 , allloss: 4.7909, dt: 710.82ms, fracRes: 0.1175, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7370, norm(y): 0.9932, norm:0.4648, tok/sec: 184394.32, flops:161.50, batch-reuse:1
@ 797 train 4.9582 , allloss: 4.9582, dt: 712.69ms, fracRes: 0.1206, norm(attn): 0.3438, norm(output): 0.6836, norm(x): 0.7320, norm(y): 0.9932, norm:0.3911, tok/sec: 183912.18, flops:161.08, batch-reuse:1
@ 798 train 4.9421 , allloss: 4.9421, dt: 705.22ms, fracRes: 0.1223, norm(attn): 0.3438, norm(output): 0.6797, norm(x): 0.7269, norm(y): 0.9931, norm:0.4353, tok/sec: 185859.55, flops:162.79, batch-reuse:1
@ 799 train 4.9599 , allloss: 4.9599, dt: 705.46ms, fracRes: 0.1252, norm(attn): 0.3457, norm(output): 0.6719, norm(x): 0.7257, norm(y): 0.9931, norm:0.4314, tok/sec: 185797.55, flops:162.73, batch-reuse:1
@ 800 train 4.9374 , allloss: 4.9374, dt: 705.10ms, fracRes: 0.1231, norm(attn): 0.3438, norm(output): 0.6836, norm(x): 0.7325, norm(y): 0.9932, norm:0.4627, tok/sec: 185890.78, flops:162.81, batch-reuse:1
@ 801 train 4.9445 , allloss: 4.9445, dt: 707.69ms, fracRes: 0.1193, norm(attn): 0.3496, norm(output): 0.6914, norm(x): 0.7399, norm(y): 0.9933, norm:0.4506, tok/sec: 185210.85, flops:162.22, batch-reuse:1
@ 802 train 4.9327 , allloss: 4.9327, dt: 703.00ms, fracRes: 0.1211, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7408, norm(y): 0.9933, norm:0.4296, tok/sec: 186447.71, flops:163.30, batch-reuse:1
@ 803 train 4.9618 , allloss: 4.9618, dt: 701.32ms, fracRes: 0.1235, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7357, norm(y): 0.9932, norm:0.4206, tok/sec: 186894.51, flops:163.69, batch-reuse:1
@ 804 train 4.9487 , allloss: 4.9487, dt: 714.58ms, fracRes: 0.1225, norm(attn): 0.3496, norm(output): 0.6836, norm(x): 0.7332, norm(y): 0.9932, norm:0.4703, tok/sec: 183425.09, flops:160.65, batch-reuse:1
@ 805 train 4.9892 , allloss: 4.9892, dt: 702.53ms, fracRes: 0.1250, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7387, norm(y): 0.9932, norm:0.5072, tok/sec: 186570.21, flops:163.41, batch-reuse:1
@ 806 train 4.9643 , allloss: 4.9643, dt: 698.97ms, fracRes: 0.1259, norm(attn): 0.3496, norm(output): 0.6875, norm(x): 0.7380, norm(y): 0.9931, norm:0.4825, tok/sec: 187522.90, flops:164.24, batch-reuse:1
@ 807 train 4.9018 , allloss: 4.9018, dt: 699.30ms, fracRes: 0.1217, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7360, norm(y): 0.9932, norm:0.4281, tok/sec: 187432.18, flops:164.16, batch-reuse:1
@ 808 train 4.9858 , allloss: 4.9858, dt: 692.72ms, fracRes: 0.1207, norm(attn): 0.3555, norm(output): 0.6836, norm(x): 0.7332, norm(y): 0.9932, norm:0.4973, tok/sec: 189214.40, flops:165.72, batch-reuse:1
@ 809 train 4.9380 , allloss: 4.9380, dt: 697.49ms, fracRes: 0.1183, norm(attn): 0.3555, norm(output): 0.6836, norm(x): 0.7328, norm(y): 0.9933, norm:0.4968, tok/sec: 187920.12, flops:164.59, batch-reuse:1
@ 810 train 4.9395 , allloss: 4.9395, dt: 685.15ms, fracRes: 0.1181, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7348, norm(y): 0.9932, norm:0.4480, tok/sec: 191303.72, flops:167.55, batch-reuse:1
@ 811 train 4.9057 , allloss: 4.9057, dt: 691.00ms, fracRes: 0.1194, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7387, norm(y): 0.9932, norm:0.4515, tok/sec: 189684.85, flops:166.14, batch-reuse:1
@ 812 train 4.8597 , allloss: 4.8597, dt: 689.00ms, fracRes: 0.1218, norm(attn): 0.3496, norm(output): 0.6875, norm(x): 0.7404, norm(y): 0.9932, norm:0.4279, tok/sec: 190233.90, flops:166.62, batch-reuse:1
@ 813 train 4.9422 , allloss: 4.9422, dt: 707.49ms, fracRes: 0.1209, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7382, norm(y): 0.9931, norm:0.4824, tok/sec: 185263.84, flops:162.26, batch-reuse:1
@ 814 train 4.9715 , allloss: 4.9715, dt: 704.98ms, fracRes: 0.1251, norm(attn): 0.3477, norm(output): 0.6836, norm(x): 0.7362, norm(y): 0.9930, norm:0.4176, tok/sec: 185923.85, flops:162.84, batch-reuse:1
@ 815 train 4.9022 , allloss: 4.9022, dt: 714.40ms, fracRes: 0.1239, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7344, norm(y): 0.9931, norm:0.4345, tok/sec: 183472.72, flops:160.70, batch-reuse:1
@ 816 train 4.8908 , allloss: 4.8908, dt: 712.26ms, fracRes: 0.1261, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7337, norm(y): 0.9930, norm:0.4468, tok/sec: 184023.24, flops:161.18, batch-reuse:1
@ 817 train 4.8816 , allloss: 4.8816, dt: 686.91ms, fracRes: 0.1262, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7290, norm(y): 0.9930, norm:0.4906, tok/sec: 190813.30, flops:167.12, batch-reuse:1
@ 818 train 4.8841 , allloss: 4.8841, dt: 692.00ms, fracRes: 0.1242, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7310, norm(y): 0.9931, norm:0.4623, tok/sec: 189409.06, flops:165.89, batch-reuse:1
@ 819 train 5.0625 , allloss: 5.0625, dt: 703.64ms, fracRes: 0.1228, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7305, norm(y): 0.9930, norm:0.4521, tok/sec: 186277.96, flops:163.15, batch-reuse:1
@ 820 train 5.0590 , allloss: 5.0590, dt: 704.36ms, fracRes: 0.1208, norm(attn): 0.3496, norm(output): 0.6836, norm(x): 0.7325, norm(y): 0.9930, norm:0.4934, tok/sec: 186086.91, flops:162.99, batch-reuse:1
@ 821 train 4.9344 , allloss: 4.9344, dt: 705.67ms, fracRes: 0.1238, norm(attn): 0.3496, norm(output): 0.6875, norm(x): 0.7351, norm(y): 0.9930, norm:0.5074, tok/sec: 185742.50, flops:162.68, batch-reuse:1
@ 822 train 4.8562 , allloss: 4.8562, dt: 703.97ms, fracRes: 0.1238, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7334, norm(y): 0.9930, norm:0.6757, tok/sec: 186190.96, flops:163.08, batch-reuse:1
@ 823 train 4.8512 , allloss: 4.8512, dt: 706.63ms, fracRes: 0.1230, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7352, norm(y): 0.9931, norm:0.4833, tok/sec: 185489.56, flops:162.46, batch-reuse:1
@ 824 train 4.9633 , allloss: 4.9633, dt: 704.12ms, fracRes: 0.1210, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7417, norm(y): 0.9931, norm:0.6175, tok/sec: 186148.91, flops:163.04, batch-reuse:1
@ 825 train 4.9388 , allloss: 4.9388, dt: 687.84ms, fracRes: 0.1251, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7449, norm(y): 0.9931, norm:0.4921, tok/sec: 190554.96, flops:166.90, batch-reuse:1
@ 826 train 4.9536 , allloss: 4.9536, dt: 700.09ms, fracRes: 0.1236, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7460, norm(y): 0.9932, norm:0.4166, tok/sec: 187220.83, flops:163.98, batch-reuse:1
@ 827 train 4.9921 , allloss: 4.9921, dt: 701.74ms, fracRes: 0.1249, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7448, norm(y): 0.9931, norm:0.8746, tok/sec: 186781.36, flops:163.59, batch-reuse:1
@ 828 train 4.9986 , allloss: 4.9986, dt: 690.37ms, fracRes: 0.1211, norm(attn): 0.3672, norm(output): 0.6914, norm(x): 0.7407, norm(y): 0.9932, norm:0.5997, tok/sec: 189856.87, flops:166.29, batch-reuse:1
@ 829 train 4.9633 , allloss: 4.9633, dt: 694.80ms, fracRes: 0.1221, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7404, norm(y): 0.9931, norm:0.4748, tok/sec: 188646.28, flops:165.23, batch-reuse:1
@ 830 train 4.9820 , allloss: 4.9820, dt: 696.66ms, fracRes: 0.1232, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7391, norm(y): 0.9930, norm:0.4717, tok/sec: 188144.25, flops:164.79, batch-reuse:1
@ 831 train 4.9261 , allloss: 4.9261, dt: 695.87ms, fracRes: 0.1241, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7396, norm(y): 0.9928, norm:0.5060, tok/sec: 188357.04, flops:164.97, batch-reuse:1
@ 832 train 4.9691 , allloss: 4.9691, dt: 687.61ms, fracRes: 0.1239, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7370, norm(y): 0.9928, norm:0.5077, tok/sec: 190618.32, flops:166.95, batch-reuse:1
@ 833 train 4.8790 , allloss: 4.8790, dt: 684.19ms, fracRes: 0.1269, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7427, norm(y): 0.9929, norm:0.6051, tok/sec: 191572.51, flops:167.79, batch-reuse:1
@ 834 train 4.9126 , allloss: 4.9126, dt: 694.44ms, fracRes: 0.1292, norm(attn): 0.3633, norm(output): 0.7031, norm(x): 0.7544, norm(y): 0.9929, norm:0.5236, tok/sec: 188745.70, flops:165.31, batch-reuse:1
@ 835 train 4.8075 , allloss: 4.8075, dt: 690.13ms, fracRes: 0.1310, norm(attn): 0.3672, norm(output): 0.6992, norm(x): 0.7578, norm(y): 0.9930, norm:0.3998, tok/sec: 189924.95, flops:166.35, batch-reuse:1
@ 836 train 4.8244 , allloss: 4.8244, dt: 697.92ms, fracRes: 0.1321, norm(attn): 0.3691, norm(output): 0.6992, norm(x): 0.7611, norm(y): 0.9929, norm:0.4653, tok/sec: 187804.44, flops:164.49, batch-reuse:1
@ 837 train 4.7827 , allloss: 4.7827, dt: 700.58ms, fracRes: 0.1331, norm(attn): 0.3613, norm(output): 0.6953, norm(x): 0.7603, norm(y): 0.9930, norm:0.4638, tok/sec: 187089.96, flops:163.86, batch-reuse:1
@ 838 train 4.8878 , allloss: 4.8878, dt: 689.22ms, fracRes: 0.1343, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7495, norm(y): 0.9930, norm:0.4490, tok/sec: 190174.08, flops:166.57, batch-reuse:1
@ 839 train 4.8768 , allloss: 4.8768, dt: 709.26ms, fracRes: 0.1286, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7508, norm(y): 0.9930, norm:0.5440, tok/sec: 184800.57, flops:161.86, batch-reuse:1
@ 840 train 4.8558 , allloss: 4.8558, dt: 710.42ms, fracRes: 0.1284, norm(attn): 0.3594, norm(output): 0.6953, norm(x): 0.7531, norm(y): 0.9930, norm:0.4659, tok/sec: 184499.52, flops:161.59, batch-reuse:1
@ 841 train 4.8313 , allloss: 4.8313, dt: 716.19ms, fracRes: 0.1291, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7498, norm(y): 0.9930, norm:0.4707, tok/sec: 183013.53, flops:160.29, batch-reuse:1
@ 842 train 4.8878 , allloss: 4.8878, dt: 712.06ms, fracRes: 0.1283, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7483, norm(y): 0.9930, norm:0.4192, tok/sec: 184073.46, flops:161.22, batch-reuse:1
@ 843 train 4.9131 , allloss: 4.9131, dt: 698.71ms, fracRes: 0.1302, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7502, norm(y): 0.9930, norm:0.4267, tok/sec: 187590.66, flops:164.30, batch-reuse:1
@ 844 train 4.9332 , allloss: 4.9332, dt: 697.47ms, fracRes: 0.1321, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7532, norm(y): 0.9930, norm:0.4612, tok/sec: 187924.24, flops:164.59, batch-reuse:1
@ 845 train 4.8779 , allloss: 4.8779, dt: 691.96ms, fracRes: 0.1335, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7524, norm(y): 0.9930, norm:0.4947, tok/sec: 189421.26, flops:165.91, batch-reuse:1
@ 846 train 4.8513 , allloss: 4.8513, dt: 695.20ms, fracRes: 0.1309, norm(attn): 0.3574, norm(output): 0.7031, norm(x): 0.7580, norm(y): 0.9930, norm:0.3914, tok/sec: 188537.52, flops:165.13, batch-reuse:1
@ 847 train 4.9302 , allloss: 4.9302, dt: 695.50ms, fracRes: 0.1290, norm(attn): 0.3555, norm(output): 0.6992, norm(x): 0.7556, norm(y): 0.9930, norm:0.3995, tok/sec: 188457.58, flops:165.06, batch-reuse:1
@ 848 train 4.8522 , allloss: 4.8522, dt: 696.49ms, fracRes: 0.1297, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7538, norm(y): 0.9930, norm:0.4592, tok/sec: 188188.89, flops:164.83, batch-reuse:1
@ 849 train 4.8477 , allloss: 4.8477, dt: 693.85ms, fracRes: 0.1282, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7488, norm(y): 0.9930, norm:0.5391, tok/sec: 188906.22, flops:165.45, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0216, 0.9766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0066, 0.2949, 0.6992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.2480, 0.4355, 0.2285, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0332, 0.3750, 0.3359, 0.1270, 0.1279, 0.0000, 0.0000, 0.0000],
        [0.0339, 0.2832, 0.4297, 0.0913, 0.0767, 0.0859, 0.0000, 0.0000],
        [0.0130, 0.0698, 0.2910, 0.0698, 0.2305, 0.1299, 0.1953, 0.0000],
        [0.0143, 0.0732, 0.2090, 0.0474, 0.1748, 0.1367, 0.1855, 0.1592]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0022,     -0.2217,     -0.2871,     -0.2617,     -0.3984,     -0.3438,     -0.2578,     -0.2246],
        [     0.0026,      3.8125,      2.8125,      1.6094,      2.1250,      2.2188,      1.4688,      2.2031],
        [    -0.0237,      3.7812,      4.6250,      3.8281,      5.4375,      4.4688,      3.9375,      4.4062],
        [    -0.0078,      1.0391,      1.6016,      0.9609,      1.3906,      1.9375,      1.2188,      1.8594],
        [    -0.0017,      2.4219,      2.3125,      1.3438,      1.3516,      1.7578,      1.5469,      1.9062],
        [    -0.0001,      2.1250,      2.5312,      0.9922,      0.8125,      0.9297,      1.3516,      1.7344],
        [    -0.0217,      1.6641,      3.0938,      1.6562,      2.8594,      2.2812,      2.6875,      2.3594],
        [    -0.0134,      1.6172,      2.6719,      1.1797,      2.4844,      2.2500,      2.5469,      2.3906]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6617],
        [0.2315],
        [0.2302],
        [0.3524],
        [0.3125],
        [0.2173],
        [0.1818],
        [0.2391],
        [0.1536],
        [0.2251],
        [0.1235],
        [0.1153],
        [0.2107],
        [0.1022]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0752,     0.0062,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0315,     0.0078,     0.0557,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7930,     0.0161,     0.1572,     0.0312,     0.0020,     0.0000,     0.0000,     0.0000],
        [    0.8047,     0.0405,     0.0840,     0.0388,     0.0017,     0.0288,     0.0000,     0.0000],
        [    0.7539,     0.0244,     0.0820,     0.0227,     0.0011,     0.0361,     0.0811,     0.0000],
        [    0.7695,     0.0276,     0.0146,     0.0220,     0.0008,     0.0197,     0.0310,     0.1147]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0005,     -0.0508,     -0.0317,     -0.0410,     -0.1104,     -0.0576,     -0.0874,     -0.0649],
        [    -0.0101,     -4.0625,     -4.1250,     -4.3125,     -8.9375,     -5.9688,     -6.3750,     -4.9062],
        [    -0.0083,     -2.5156,     -5.0000,     -2.1406,     -8.7500,     -6.6875,     -5.1875,     -4.1562],
        [    -0.0172,     -3.3750,     -4.7812,     -2.8125,     -7.8750,     -6.0938,     -4.8750,     -3.7969],
        [    -0.0104,     -3.9062,     -1.6250,     -3.2500,     -6.0000,     -2.4688,     -4.0000,     -3.1875],
        [    -0.0047,     -3.0000,     -2.2656,     -3.0312,     -6.1875,     -3.3438,     -3.0312,     -2.8281],
        [    -0.0176,     -3.4531,     -2.2344,     -3.5156,     -6.5625,     -3.0625,     -2.2500,     -2.2656],
        [    -0.0201,     -3.3438,     -3.9844,     -3.5781,     -6.8438,     -3.6875,     -3.2344,     -1.9219]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5889],
        [0.5387],
        [0.5022],
        [0.3984],
        [0.4212],
        [0.3822],
        [0.4284],
        [0.2959],
        [0.4015],
        [0.2573],
        [0.3622],
        [0.4146],
        [0.2602],
        [0.2836]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0142,     0.5469,     0.4375,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.4492,     0.2891,     0.2578,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.3477,     0.2178,     0.1973,     0.2354,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.2617,     0.1338,     0.1172,     0.2188,     0.2676,     0.0000,     0.0000],
        [    0.0014,     0.2227,     0.0894,     0.0894,     0.1299,     0.2051,     0.2617,     0.0000],
        [    0.0024,     0.1748,     0.0576,     0.0527,     0.1201,     0.1270,     0.2949,     0.1709]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0025,     -0.1182,     -0.1357,     -0.1475,     -0.1235,     -0.1436,     -0.1055,     -0.1484],
        [     0.0737,      6.5625,      5.6562,      5.5625,      6.5000,      6.4062,      6.9062,      7.0312],
        [     0.0654,      3.7188,      3.5000,      3.2812,      4.3438,      3.8594,      4.5312,      4.6562],
        [     0.0771,      5.4062,      4.9375,      4.8438,      5.4062,      5.3750,      5.9688,      6.2188],
        [     0.0830,      5.6875,      5.2188,      5.1250,      5.3125,      5.6562,      6.0938,      6.4375],
        [     0.0625,      7.5000,      6.8438,      6.7188,      7.3438,      7.5312,      7.6250,      8.1875],
        [     0.0806,      5.1250,      4.2188,      4.2188,      4.5938,      5.0312,      5.2812,      5.3125],
        [     0.0962,      4.4062,      3.2812,      3.2031,      4.0312,      4.0625,      4.9062,      4.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8445],
        [0.7290],
        [0.6992],
        [0.6093],
        [0.6136],
        [0.5224],
        [0.5419],
        [0.4749],
        [0.4972],
        [0.5047],
        [0.4789],
        [0.4644],
        [0.4475],
        [0.4220]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4180, 0.1650, 0.4160, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2480, 0.0986, 0.5273, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.0308, 0.4297, 0.1206, 0.2334, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.0178, 0.4570, 0.0742, 0.1147, 0.1099, 0.0000, 0.0000],
        [0.0253, 0.0291, 0.2676, 0.2949, 0.1377, 0.2178, 0.0271, 0.0000],
        [0.0732, 0.0240, 0.0938, 0.0471, 0.0459, 0.2734, 0.0239, 0.4180]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0012,     -0.1035,     -0.0728,     -0.1543,     -0.2285,     -0.1797,     -0.2676,     -0.1963],
        [    -0.0079,     -2.2188,      2.5156,      0.7461,     -0.1289,      1.2109,     -0.9180,      1.2188],
        [    -0.0189,     -0.9492,     -0.0231,     -0.8398,     -1.1797,     -0.1436,     -2.1719,      0.6016],
        [    -0.0262,     -0.9531,      0.7266,     -0.7148,     -0.5000,      1.1172,     -1.1797,      1.3594],
        [    -0.0535,     -1.8438,      0.7891,     -0.4824,      0.1807,      2.1562,     -0.8086,      2.8750],
        [    -0.0267,     -2.5625,      0.6758,     -1.1406,     -0.7070,     -0.7500,     -3.4062,      1.0547],
        [    -0.0413,      0.0981,      2.3125,      2.4062,      1.6484,      2.1094,      0.0254,      3.9219],
        [    -0.0322,     -1.1406,      0.2129,     -0.4746,     -0.4980,      1.2891,     -1.1562,      1.7109]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7089],
        [0.5391],
        [0.5542],
        [0.4937],
        [0.4252],
        [0.3001],
        [0.2691],
        [0.2810],
        [0.2242],
        [0.2573],
        [0.2651],
        [0.2343],
        [0.2003],
        [0.1565]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5039,     0.4961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0189,     0.9609,     0.0211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0222,     0.3223,     0.0100,     0.6445,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0000,     0.0002,     0.0028,     0.9961,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.0000,     0.0000,     0.0000,     0.7695,     0.2285,     0.0000,     0.0000],
        [    0.0003,     0.0000,     0.0000,     0.0000,     0.0007,     0.0095,     0.9883,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.1235,     0.8750]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.0591,     -0.0942,     -0.1069,     -0.0679,     -0.0869,     -0.1147,     -0.1299],
        [     0.0062,     -0.0109,     -2.6406,     -2.2500,     -1.3984,     -4.2812,     -0.7031,      0.2539],
        [    -0.0254,      3.9062,      0.0864,      3.5312,     -0.1206,     -3.2188,     -0.2930,     -0.4062],
        [    -0.0280,      2.6406,     -0.8242,      3.3438,      2.5000,      0.3340,      2.6406,      1.3047],
        [    -0.0092,     -3.0938,     -1.4531,      1.1406,      7.0312,      1.5469,      0.4922,     -1.4531],
        [    -0.0209,     -7.7188,     -6.3438,     -6.0000,      5.8125,      4.5938,      1.5312,     -0.0535],
        [     0.0052,     -5.7188,     -5.8125,     -6.4375,      0.6914,      3.3438,      8.0000,      8.3125],
        [     0.0120,     -6.8750,     -7.6250,    -10.3125,     -1.0781,      2.7188,     12.9375,     14.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7655],
        [0.5107],
        [0.4611],
        [0.4594],
        [0.4571],
        [0.3631],
        [0.3726],
        [0.3850],
        [0.3232],
        [0.3192],
        [0.3306],
        [0.2896],
        [0.3056],
        [0.2884]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0045,     -0.3965,     -0.5234,     -0.4453,     -0.4434,     -0.4102,     -0.5234,     -0.5000],
        [    -0.2578,    -22.8750,    -30.7500,    -26.1250,    -27.3750,    -25.8750,    -31.3750,    -29.5000],
        [    -0.3066,    -27.1250,    -35.7500,    -31.0000,    -31.2500,    -29.0000,    -36.2500,    -34.5000],
        [    -0.2930,    -26.6250,    -35.0000,    -30.5000,    -30.6250,    -27.7500,    -36.2500,    -34.2500],
        [    -0.1943,    -18.1250,    -23.1250,    -20.2500,    -19.8750,    -17.7500,    -24.0000,    -23.3750],
        [    -0.2090,    -18.8750,    -24.1250,    -20.6250,    -21.2500,    -18.3750,    -24.3750,    -23.3750],
        [    -0.3418,    -30.1250,    -40.2500,    -34.5000,    -35.2500,    -32.2500,    -41.2500,    -38.7500],
        [    -0.3359,    -29.7500,    -40.5000,    -34.0000,    -35.0000,    -33.0000,    -40.5000,    -38.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6025],
        [0.4291],
        [0.4478],
        [0.4937],
        [0.5689],
        [0.5173],
        [0.4605],
        [0.5160],
        [0.4837],
        [0.5579],
        [0.4057],
        [0.5077],
        [0.4562],
        [0.4205]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9961,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0011,     -0.3047,     -0.2285,     -0.2559,     -0.3359,     -0.2930,     -0.2891,     -0.3301],
        [    -0.1001,    -31.2500,    -22.6250,    -25.8750,    -32.7500,    -28.2500,    -29.0000,    -32.5000],
        [     0.0540,     16.7500,     10.9375,     13.1250,     19.5000,     15.5000,     15.5625,     17.7500],
        [    -0.0396,    -11.0000,     -9.1250,     -9.7500,    -10.5625,     -9.8125,     -9.1875,    -11.5000],
        [    -0.0972,    -29.7500,    -22.5000,    -25.3750,    -31.2500,    -27.3750,    -27.5000,    -31.0000],
        [    -0.0879,    -27.8750,    -21.0000,    -23.5000,    -29.0000,    -25.3750,    -25.2500,    -29.7500],
        [    -0.0674,    -19.3750,    -15.7500,    -16.3750,    -20.1250,    -17.1250,    -17.0000,    -19.2500],
        [    -0.0859,    -26.8750,    -20.0000,    -22.6250,    -28.6250,    -24.7500,    -25.5000,    -28.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9388],
        [0.1076],
        [0.4521],
        [0.7673],
        [0.7852],
        [0.6533],
        [0.6451],
        [0.6720],
        [0.5782],
        [0.6774],
        [0.2741],
        [0.7383],
        [0.6114],
        [0.3038]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6875,     0.3105,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3359,     0.6211,     0.0405,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3730,     0.1602,     0.0938,     0.0732,     0.3008,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000],
        [    0.0289,     0.2930,     0.0981,     0.1201,     0.2754,     0.0977,     0.0869,     0.0000],
        [    0.7539,     0.0114,     0.0033,     0.0041,     0.0386,     0.1621,     0.0211,     0.0059]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.0549,     -0.0854,     -0.0679,     -0.0464,     -0.0349,     -0.0574,     -0.0649],
        [    -0.0334,    -11.5000,    -15.6875,    -12.9375,    -10.0000,     -7.0312,    -10.8750,    -12.8750],
        [     0.0422,     12.8125,     12.0000,      9.3750,     12.3750,      9.8750,     10.5000,     10.7500],
        [     0.0344,     10.8125,     11.4375,      8.6875,     10.0625,      8.6250,      9.2500,     10.0000],
        [     0.0003,     -0.8398,     -1.3750,     -1.6250,     -0.2139,      0.1250,     -0.9766,     -1.3047],
        [    -0.0383,    -11.4375,    -14.5000,    -10.8125,    -10.7500,     -8.7500,    -11.0000,    -11.7500],
        [     0.0044,      2.3281,      1.2266,      1.4297,      2.2500,      1.2188,      1.1016,      2.1875],
        [    -0.0081,     -4.2188,     -5.4375,     -5.2188,     -2.9844,     -1.5469,     -3.5781,     -4.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.9824],
        [    0.0040],
        [    0.0050],
        [    0.3271],
        [    0.9150],
        [    0.1016],
        [    0.6081],
        [    0.4336],
        [    0.2815],
        [    0.7364],
        [    0.0005],
        [    0.7948],
        [    0.5928],
        [    0.1591]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8867, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0488, 0.8906, 0.0608, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0613, 0.7188, 0.0723, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0115, 0.3691, 0.1147, 0.3047, 0.2002, 0.0000, 0.0000, 0.0000],
        [0.0574, 0.3770, 0.0530, 0.1475, 0.1533, 0.2119, 0.0000, 0.0000],
        [0.0103, 0.4629, 0.0371, 0.1016, 0.1206, 0.2295, 0.0383, 0.0000],
        [0.0085, 0.2520, 0.0938, 0.1934, 0.1045, 0.1299, 0.0928, 0.1260]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0138,      0.0029,      0.0069,      0.0081,      0.0126,     -0.0001,      0.0114],
        [    -0.0013,     -2.0781,      0.5039,      0.1875,     -0.5156,     -1.2734,      0.8125,     -0.4961],
        [     0.0065,      2.9062,      0.2256,      1.0547,      1.5391,      2.3750,      0.1504,      1.9141],
        [     0.0059,      2.4688,      0.1729,      0.8867,      1.3906,      1.9531,      0.2871,      1.7656],
        [     0.0120,      3.4844,      2.3125,      3.2812,      2.8750,      2.8438,      2.5312,      3.4688],
        [     0.0098,      1.8906,     -0.0679,      0.9570,      0.9922,      1.3203,      0.3535,      2.5000],
        [     0.0097,      3.8281,      1.2969,      2.2969,      2.4688,      3.1094,      1.3281,      2.8750],
        [     0.0099,      3.3906,      2.4062,      3.1250,      2.5156,      2.7344,      2.3906,      2.7031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3925],
        [0.1673],
        [0.1232],
        [0.0505],
        [0.1915],
        [0.0474],
        [0.0787],
        [0.2046],
        [0.0780],
        [0.1809],
        [0.0508],
        [0.0557],
        [0.1324],
        [0.0390]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8164, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.2285, 0.6719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.1670, 0.4961, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0618, 0.1206, 0.3086, 0.1797, 0.3301, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.0889, 0.2461, 0.1465, 0.2393, 0.1758, 0.0000, 0.0000],
        [0.0216, 0.0747, 0.1973, 0.1074, 0.2217, 0.1670, 0.2100, 0.0000],
        [0.0415, 0.0566, 0.1865, 0.1001, 0.1875, 0.1309, 0.1914, 0.1060]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0142,      0.0219,      0.0177,      0.0255,      0.0201,      0.0253,      0.0209],
        [    -0.0027,     -1.5000,     -0.6914,     -0.9844,     -0.8281,     -1.0234,     -0.7891,     -1.1641],
        [    -0.0066,      0.8125,      1.8906,      1.2500,      1.9141,      1.5625,      1.8750,      1.3594],
        [    -0.0067,      0.7773,      1.8672,      1.2109,      1.9141,      1.5391,      1.8906,      1.3516],
        [    -0.0057,      0.6641,      1.6016,      1.0625,      1.6719,      1.4453,      1.6328,      1.2266],
        [    -0.0052,     -0.1572,      0.8594,      0.3457,      0.8320,      0.5234,      0.8477,      0.3438],
        [    -0.0067,      1.2344,      2.2031,      1.6016,      2.3281,      2.0469,      2.2656,      1.8359],
        [    -0.0063,      0.3086,      1.5000,      0.8750,      1.5078,      1.1406,      1.5234,      0.9336]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6405],
        [0.1116],
        [0.0894],
        [0.0783],
        [0.2582],
        [0.0252],
        [0.1213],
        [0.0235],
        [0.0150],
        [0.0162],
        [0.0069],
        [0.2598],
        [0.0111],
        [0.0046]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9922, 0.0074, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6602, 0.1172, 0.2217, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.1270, 0.1934, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3438, 0.1396, 0.1689, 0.1729, 0.1748, 0.0000, 0.0000, 0.0000],
        [0.4883, 0.0388, 0.1147, 0.1279, 0.1436, 0.0864, 0.0000, 0.0000],
        [0.1914, 0.1543, 0.1318, 0.1299, 0.1260, 0.1387, 0.1279, 0.0000],
        [0.2422, 0.0771, 0.1074, 0.1113, 0.1147, 0.0996, 0.1309, 0.1162]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0001,      0.0004,      0.0004,      0.0003,      0.0011,      0.0000,      0.0003],
        [    -0.0065,     -4.9062,     -2.5000,     -2.2656,     -2.0000,     -3.1094,     -1.3906,     -2.1094],
        [    -0.0028,     -1.7344,     -1.0938,     -1.0312,     -0.9727,     -1.2500,     -0.7734,     -0.9766],
        [    -0.0024,     -1.3281,     -0.9023,     -0.8633,     -0.8242,     -0.9961,     -0.6719,     -0.8086],
        [    -0.0018,     -0.9023,     -0.7070,     -0.6914,     -0.6758,     -0.7422,     -0.5742,     -0.6484],
        [    -0.0037,     -2.5312,     -1.4531,     -1.3438,     -1.2266,     -1.7344,     -0.9102,     -1.2578],
        [    -0.0009,     -0.2178,     -0.3730,     -0.3887,     -0.4141,     -0.3203,     -0.4004,     -0.3711],
        [    -0.0020,     -1.1484,     -0.8164,     -0.7812,     -0.7500,     -0.8945,     -0.6172,     -0.7383]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9098],
        [0.6102],
        [0.4911],
        [0.3963],
        [0.4506],
        [0.2664],
        [0.2887],
        [0.2125],
        [0.1777],
        [0.1613],
        [0.1418],
        [0.1936],
        [0.1264],
        [0.1135]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0518,     0.9492,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.3730,     0.6250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.2480,     0.4258,     0.3242,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.2012,     0.3496,     0.2617,     0.1885,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.1660,     0.2871,     0.2158,     0.1553,     0.1738,     0.0000,     0.0000],
        [    0.0003,     0.1553,     0.2754,     0.2031,     0.1436,     0.1670,     0.0542,     0.0000],
        [    0.0004,     0.1475,     0.2598,     0.1914,     0.1357,     0.1572,     0.0522,     0.0562]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0293,      0.0315,      0.0304,      0.0288,      0.0295,      0.0244,      0.0247],
        [    -0.0030,      2.9062,      3.3281,      3.0781,      2.8281,      2.8906,      2.2188,      2.2500],
        [    -0.0052,      5.3438,      5.8438,      5.5938,      5.3125,      5.4062,      4.4688,      4.5000],
        [    -0.0057,      5.6562,      6.2188,      5.9375,      5.6250,      5.7188,      4.7188,      4.7812],
        [    -0.0060,      5.8125,      6.3750,      6.0625,      5.7500,      5.8750,      4.8125,      4.8750],
        [    -0.0055,      5.2812,      5.8125,      5.5312,      5.2188,      5.3125,      4.3438,      4.3750],
        [    -0.0065,      6.1875,      6.7500,      6.4375,      6.0938,      6.2500,      5.1250,      5.1875],
        [    -0.0063,      5.9375,      6.5000,      6.2188,      5.8750,      6.0000,      4.9062,      4.9688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6071],
        [0.0245],
        [0.0090],
        [0.0043],
        [0.0159],
        [0.0018],
        [0.0029],
        [0.0015],
        [0.0013],
        [0.0014],
        [0.0012],
        [0.0032],
        [0.0012],
        [0.0011]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Zerg:0.0046 Zerg:0.0056 Zerg:0.0056 Zerg:0.0057 Zerg:0.0057 Zerg:0.0060 Zerg:0.0057 Zerg:0.0054)
 Zerg
------
		( Zerg:0.0056 Zerg:0.0056 Zerg:0.0057 Zerg:0.0057 Zerg:0.0060 Zerg:0.0057 Zerg:0.0054 Zerg:0.0054)
 Zerg actionGroup Zerg actionGroup Zerg actionGroup Zerg actionGroup actionGroup actionGroup actionGroup actionGroup actionGroup actionGroup actionGroup
@ 850 train 4.7949 , allloss: 4.7949, dt: 1129.86ms, fracRes: 0.1310, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7523, norm(y): 0.9930, norm:0.5865, tok/sec: 116006.81, flops:101.61, batch-reuse:1
@ 851 train 5.0865 , allloss: 5.0865, dt: 697.12ms, fracRes: 0.1334, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7556, norm(y): 0.9930, norm:0.5961, tok/sec: 188020.32, flops:164.68, batch-reuse:1
@ 852 train 4.9165 , allloss: 4.9165, dt: 693.20ms, fracRes: 0.1335, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7537, norm(y): 0.9930, norm:0.5526, tok/sec: 189083.01, flops:165.61, batch-reuse:1
@ 853 train 4.8874 , allloss: 4.8874, dt: 688.48ms, fracRes: 0.1365, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7505, norm(y): 0.9930, norm:0.4622, tok/sec: 190378.04, flops:166.74, batch-reuse:1
@ 854 train 4.8745 , allloss: 4.8745, dt: 698.94ms, fracRes: 0.1362, norm(attn): 0.3574, norm(output): 0.6875, norm(x): 0.7504, norm(y): 0.9930, norm:0.5284, tok/sec: 187529.55, flops:164.25, batch-reuse:1
@ 855 train 4.8706 , allloss: 4.8706, dt: 715.85ms, fracRes: 0.1318, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7507, norm(y): 0.9930, norm:0.4795, tok/sec: 183098.81, flops:160.37, batch-reuse:1
@ 856 train 4.8500 , allloss: 4.8500, dt: 717.58ms, fracRes: 0.1283, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7451, norm(y): 0.9931, norm:0.4242, tok/sec: 182659.51, flops:159.98, batch-reuse:1
@ 857 train 4.8005 , allloss: 4.8005, dt: 714.44ms, fracRes: 0.1296, norm(attn): 0.3652, norm(output): 0.6992, norm(x): 0.7515, norm(y): 0.9931, norm:0.4317, tok/sec: 183460.17, flops:160.68, batch-reuse:1
@ 858 train 4.9347 , allloss: 4.9347, dt: 699.76ms, fracRes: 0.1299, norm(attn): 0.3672, norm(output): 0.6992, norm(x): 0.7564, norm(y): 0.9930, norm:0.3918, tok/sec: 187311.09, flops:164.06, batch-reuse:1
@ 859 train 4.8593 , allloss: 4.8593, dt: 693.91ms, fracRes: 0.1309, norm(attn): 0.3555, norm(output): 0.6953, norm(x): 0.7511, norm(y): 0.9930, norm:0.4043, tok/sec: 188889.60, flops:165.44, batch-reuse:1
@ 860 train 4.8862 , allloss: 4.8862, dt: 701.02ms, fracRes: 0.1334, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7469, norm(y): 0.9929, norm:0.4458, tok/sec: 186973.71, flops:163.76, batch-reuse:1
@ 861 train 4.8894 , allloss: 4.8894, dt: 700.58ms, fracRes: 0.1373, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7469, norm(y): 0.9929, norm:0.4100, tok/sec: 187090.66, flops:163.86, batch-reuse:1
@ 862 train 4.8595 , allloss: 4.8595, dt: 702.09ms, fracRes: 0.1376, norm(attn): 0.3574, norm(output): 0.6875, norm(x): 0.7503, norm(y): 0.9929, norm:0.4419, tok/sec: 186687.55, flops:163.51, batch-reuse:1
@ 863 train 4.8363 , allloss: 4.8363, dt: 699.14ms, fracRes: 0.1365, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7507, norm(y): 0.9929, norm:0.4194, tok/sec: 187475.45, flops:164.20, batch-reuse:1
@ 864 train 4.8444 , allloss: 4.8444, dt: 701.66ms, fracRes: 0.1331, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7474, norm(y): 0.9930, norm:0.4094, tok/sec: 186801.79, flops:163.61, batch-reuse:1
@ 865 train 4.7601 , allloss: 4.7601, dt: 680.84ms, fracRes: 0.1299, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7498, norm(y): 0.9930, norm:0.4344, tok/sec: 192514.58, flops:168.61, batch-reuse:1
@ 866 train 4.7753 , allloss: 4.7753, dt: 704.46ms, fracRes: 0.1301, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7458, norm(y): 0.9930, norm:0.4836, tok/sec: 186059.33, flops:162.96, batch-reuse:1
@ 867 train 4.8155 , allloss: 4.8155, dt: 709.29ms, fracRes: 0.1323, norm(attn): 0.3496, norm(output): 0.6875, norm(x): 0.7460, norm(y): 0.9930, norm:0.4910, tok/sec: 184793.73, flops:161.85, batch-reuse:1
@ 868 train 4.8391 , allloss: 4.8391, dt: 710.64ms, fracRes: 0.1343, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7472, norm(y): 0.9930, norm:0.4716, tok/sec: 184442.82, flops:161.55, batch-reuse:1
@ 869 train 4.8435 , allloss: 4.8435, dt: 697.48ms, fracRes: 0.1355, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7476, norm(y): 0.9931, norm:0.4737, tok/sec: 187921.86, flops:164.59, batch-reuse:1
@ 870 train 4.8479 , allloss: 4.8479, dt: 707.69ms, fracRes: 0.1357, norm(attn): 0.3594, norm(output): 0.6875, norm(x): 0.7470, norm(y): 0.9931, norm:0.4338, tok/sec: 185210.04, flops:162.22, batch-reuse:1
@ 871 train 4.8502 , allloss: 4.8502, dt: 707.68ms, fracRes: 0.1366, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7497, norm(y): 0.9930, norm:0.4833, tok/sec: 185214.47, flops:162.22, batch-reuse:1
@ 872 train 4.8191 , allloss: 4.8191, dt: 711.85ms, fracRes: 0.1361, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7438, norm(y): 0.9930, norm:0.4888, tok/sec: 184128.82, flops:161.27, batch-reuse:1
@ 873 train 4.8484 , allloss: 4.8484, dt: 712.62ms, fracRes: 0.1352, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7459, norm(y): 0.9930, norm:0.5350, tok/sec: 183930.70, flops:161.10, batch-reuse:1
@ 874 train 4.7528 , allloss: 4.7528, dt: 683.92ms, fracRes: 0.1348, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7460, norm(y): 0.9930, norm:0.4140, tok/sec: 191647.97, flops:167.86, batch-reuse:1
@ 875 train 4.8115 , allloss: 4.8115, dt: 687.78ms, fracRes: 0.1361, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7442, norm(y): 0.9930, norm:0.4691, tok/sec: 190573.19, flops:166.91, batch-reuse:1
@ 876 train 4.8318 , allloss: 4.8318, dt: 697.47ms, fracRes: 0.1371, norm(attn): 0.3457, norm(output): 0.6875, norm(x): 0.7471, norm(y): 0.9930, norm:0.4235, tok/sec: 187923.79, flops:164.59, batch-reuse:1
@ 877 train 4.8241 , allloss: 4.8241, dt: 695.74ms, fracRes: 0.1359, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7450, norm(y): 0.9929, norm:0.4306, tok/sec: 188392.41, flops:165.00, batch-reuse:1
@ 878 train 4.8228 , allloss: 4.8228, dt: 697.36ms, fracRes: 0.1368, norm(attn): 0.3574, norm(output): 0.6875, norm(x): 0.7434, norm(y): 0.9929, norm:0.4970, tok/sec: 187954.50, flops:164.62, batch-reuse:1
@ 879 train 4.7349 , allloss: 4.7349, dt: 695.51ms, fracRes: 0.1369, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7453, norm(y): 0.9928, norm:0.4176, tok/sec: 188453.44, flops:165.06, batch-reuse:1
@ 880 train 4.8788 , allloss: 4.8788, dt: 703.21ms, fracRes: 0.1371, norm(attn): 0.3477, norm(output): 0.6836, norm(x): 0.7410, norm(y): 0.9929, norm:0.4681, tok/sec: 186390.57, flops:163.25, batch-reuse:1
@ 881 train 4.7144 , allloss: 4.7144, dt: 693.95ms, fracRes: 0.1379, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7429, norm(y): 0.9930, norm:0.5055, tok/sec: 188878.70, flops:165.43, batch-reuse:1
@ 882 train 4.6975 , allloss: 4.6975, dt: 693.01ms, fracRes: 0.1389, norm(attn): 0.3535, norm(output): 0.6836, norm(x): 0.7420, norm(y): 0.9930, norm:0.4747, tok/sec: 189134.07, flops:165.65, batch-reuse:1
@ 883 train 4.7064 , allloss: 4.7064, dt: 694.81ms, fracRes: 0.1399, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7471, norm(y): 0.9930, norm:0.4829, tok/sec: 188644.92, flops:165.23, batch-reuse:1
@ 884 train 4.6864 , allloss: 4.6864, dt: 695.16ms, fracRes: 0.1376, norm(attn): 0.3613, norm(output): 0.6875, norm(x): 0.7500, norm(y): 0.9930, norm:0.4590, tok/sec: 188548.65, flops:165.14, batch-reuse:1
@ 885 train 4.7125 , allloss: 4.7125, dt: 690.50ms, fracRes: 0.1392, norm(attn): 0.3594, norm(output): 0.6875, norm(x): 0.7490, norm(y): 0.9930, norm:0.4468, tok/sec: 189820.75, flops:166.26, batch-reuse:1
@ 886 train 4.7957 , allloss: 4.7957, dt: 691.47ms, fracRes: 0.1418, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7492, norm(y): 0.9929, norm:0.4930, tok/sec: 189555.28, flops:166.02, batch-reuse:1
@ 887 train 4.8092 , allloss: 4.8092, dt: 707.00ms, fracRes: 0.1399, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7452, norm(y): 0.9930, norm:0.4407, tok/sec: 185392.35, flops:162.38, batch-reuse:1
@ 888 train 4.6890 , allloss: 4.6890, dt: 707.33ms, fracRes: 0.1416, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7462, norm(y): 0.9929, norm:0.4590, tok/sec: 185304.18, flops:162.30, batch-reuse:1
@ 889 train 4.7804 , allloss: 4.7804, dt: 708.28ms, fracRes: 0.1423, norm(attn): 0.3535, norm(output): 0.6836, norm(x): 0.7416, norm(y): 0.9930, norm:0.4131, tok/sec: 185056.98, flops:162.08, batch-reuse:1
@ 890 train 4.7287 , allloss: 4.7287, dt: 695.43ms, fracRes: 0.1423, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7448, norm(y): 0.9930, norm:0.4512, tok/sec: 188477.35, flops:165.08, batch-reuse:1
@ 891 train 4.7174 , allloss: 4.7174, dt: 705.40ms, fracRes: 0.1380, norm(attn): 0.3516, norm(output): 0.6836, norm(x): 0.7391, norm(y): 0.9929, norm:0.4884, tok/sec: 185812.31, flops:162.74, batch-reuse:1
@ 892 train 4.7061 , allloss: 4.7061, dt: 708.58ms, fracRes: 0.1371, norm(attn): 0.3477, norm(output): 0.6836, norm(x): 0.7380, norm(y): 0.9929, norm:0.4418, tok/sec: 184977.53, flops:162.01, batch-reuse:1
@ 893 train 4.6671 , allloss: 4.6671, dt: 706.95ms, fracRes: 0.1379, norm(attn): 0.3496, norm(output): 0.6875, norm(x): 0.7434, norm(y): 0.9929, norm:0.4404, tok/sec: 185404.05, flops:162.39, batch-reuse:1
@ 894 train 4.7356 , allloss: 4.7356, dt: 708.29ms, fracRes: 0.1410, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7453, norm(y): 0.9929, norm:0.4767, tok/sec: 185054.80, flops:162.08, batch-reuse:1
@ 895 train 4.7020 , allloss: 4.7020, dt: 710.97ms, fracRes: 0.1438, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7476, norm(y): 0.9929, norm:0.4459, tok/sec: 184356.79, flops:161.47, batch-reuse:1
@ 896 train 4.6685 , allloss: 4.6685, dt: 702.78ms, fracRes: 0.1446, norm(attn): 0.3496, norm(output): 0.6836, norm(x): 0.7446, norm(y): 0.9929, norm:0.4288, tok/sec: 186505.65, flops:163.35, batch-reuse:1
@ 897 train 4.7209 , allloss: 4.7209, dt: 694.85ms, fracRes: 0.1440, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7451, norm(y): 0.9929, norm:0.4556, tok/sec: 188634.11, flops:165.22, batch-reuse:1
@ 898 train 4.7681 , allloss: 4.7681, dt: 710.98ms, fracRes: 0.1420, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7432, norm(y): 0.9929, norm:0.4147, tok/sec: 184353.33, flops:161.47, batch-reuse:1
@ 899 train 4.7470 , allloss: 4.7470, dt: 706.58ms, fracRes: 0.1419, norm(attn): 0.3535, norm(output): 0.6836, norm(x): 0.7434, norm(y): 0.9929, norm:0.4237, tok/sec: 185501.70, flops:162.47, batch-reuse:1
@ 900 train 4.7786 , allloss: 4.7786, dt: 684.96ms, fracRes: 0.1444, norm(attn): 0.3516, norm(output): 0.6836, norm(x): 0.7440, norm(y): 0.9928, norm:0.4192, tok/sec: 191356.79, flops:167.60, batch-reuse:1
@ 901 train 4.7596 , allloss: 4.7596, dt: 692.35ms, fracRes: 0.1428, norm(attn): 0.3496, norm(output): 0.6836, norm(x): 0.7419, norm(y): 0.9928, norm:0.4387, tok/sec: 189314.22, flops:165.81, batch-reuse:1
@ 902 train 4.7314 , allloss: 4.7314, dt: 689.04ms, fracRes: 0.1408, norm(attn): 0.3457, norm(output): 0.6836, norm(x): 0.7372, norm(y): 0.9929, norm:0.4888, tok/sec: 190223.11, flops:166.61, batch-reuse:1
@ 903 train 4.6962 , allloss: 4.6962, dt: 700.38ms, fracRes: 0.1402, norm(attn): 0.3477, norm(output): 0.6836, norm(x): 0.7397, norm(y): 0.9929, norm:0.5091, tok/sec: 187144.93, flops:163.91, batch-reuse:1
@ 904 train 4.6357 , allloss: 4.6357, dt: 700.28ms, fracRes: 0.1398, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7431, norm(y): 0.9930, norm:0.4802, tok/sec: 187169.78, flops:163.93, batch-reuse:1
@ 905 train 4.6774 , allloss: 4.6774, dt: 702.42ms, fracRes: 0.1430, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7492, norm(y): 0.9929, norm:0.4541, tok/sec: 186600.17, flops:163.43, batch-reuse:1
@ 906 train 4.7053 , allloss: 4.7053, dt: 698.70ms, fracRes: 0.1427, norm(attn): 0.3477, norm(output): 0.6875, norm(x): 0.7429, norm(y): 0.9928, norm:0.4223, tok/sec: 187594.50, flops:164.31, batch-reuse:1
@ 907 train 4.5142 , allloss: 4.5142, dt: 690.06ms, fracRes: 0.1446, norm(attn): 0.3516, norm(output): 0.6836, norm(x): 0.7383, norm(y): 0.9928, norm:0.4855, tok/sec: 189943.85, flops:166.36, batch-reuse:1
@ 908 train 4.7370 , allloss: 4.7370, dt: 707.06ms, fracRes: 0.1464, norm(attn): 0.3535, norm(output): 0.6836, norm(x): 0.7384, norm(y): 0.9927, norm:0.4680, tok/sec: 185376.41, flops:162.36, batch-reuse:1
@ 909 train 4.9966 , allloss: 4.9966, dt: 709.15ms, fracRes: 0.1447, norm(attn): 0.3535, norm(output): 0.6836, norm(x): 0.7390, norm(y): 0.9928, norm:0.5779, tok/sec: 184829.71, flops:161.88, batch-reuse:1
@ 910 train 4.7210 , allloss: 4.7210, dt: 711.53ms, fracRes: 0.1456, norm(attn): 0.3535, norm(output): 0.6836, norm(x): 0.7381, norm(y): 0.9927, norm:0.5678, tok/sec: 184210.75, flops:161.34, batch-reuse:1
@ 911 train 4.7229 , allloss: 4.7229, dt: 709.96ms, fracRes: 0.1479, norm(attn): 0.3516, norm(output): 0.6836, norm(x): 0.7406, norm(y): 0.9927, norm:0.6106, tok/sec: 184619.79, flops:161.70, batch-reuse:1
@ 912 train 4.7098 , allloss: 4.7098, dt: 706.20ms, fracRes: 0.1421, norm(attn): 0.3594, norm(output): 0.6875, norm(x): 0.7465, norm(y): 0.9929, norm:0.7419, tok/sec: 185600.78, flops:162.56, batch-reuse:1
@ 913 train 4.6744 , allloss: 4.6744, dt: 687.21ms, fracRes: 0.1392, norm(attn): 0.3574, norm(output): 0.6875, norm(x): 0.7508, norm(y): 0.9929, norm:0.5266, tok/sec: 190731.01, flops:167.05, batch-reuse:1
@ 914 train 4.7352 , allloss: 4.7352, dt: 694.55ms, fracRes: 0.1394, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7497, norm(y): 0.9929, norm:0.5215, tok/sec: 188714.99, flops:165.29, batch-reuse:1
@ 915 train 4.7804 , allloss: 4.7804, dt: 701.44ms, fracRes: 0.1401, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7478, norm(y): 0.9928, norm:0.5034, tok/sec: 186860.97, flops:163.66, batch-reuse:1
@ 916 train 4.6391 , allloss: 4.6391, dt: 690.72ms, fracRes: 0.1438, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7494, norm(y): 0.9928, norm:0.4991, tok/sec: 189761.32, flops:166.20, batch-reuse:1
@ 917 train 4.6965 , allloss: 4.6965, dt: 700.40ms, fracRes: 0.1442, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7579, norm(y): 0.9929, norm:0.5088, tok/sec: 187137.98, flops:163.91, batch-reuse:1
@ 918 train 4.7061 , allloss: 4.7061, dt: 715.13ms, fracRes: 0.1454, norm(attn): 0.3730, norm(output): 0.6914, norm(x): 0.7602, norm(y): 0.9930, norm:0.4752, tok/sec: 183285.42, flops:160.53, batch-reuse:1
@ 919 train 4.6328 , allloss: 4.6328, dt: 704.36ms, fracRes: 0.1477, norm(attn): 0.3691, norm(output): 0.6953, norm(x): 0.7613, norm(y): 0.9930, norm:0.5062, tok/sec: 186087.79, flops:162.99, batch-reuse:1
@ 920 train 4.7334 , allloss: 4.7334, dt: 697.87ms, fracRes: 0.1506, norm(attn): 0.3711, norm(output): 0.6914, norm(x): 0.7592, norm(y): 0.9930, norm:0.4696, tok/sec: 187816.18, flops:164.50, batch-reuse:1
@ 921 train 4.6796 , allloss: 4.6796, dt: 703.35ms, fracRes: 0.1476, norm(attn): 0.3691, norm(output): 0.6914, norm(x): 0.7554, norm(y): 0.9930, norm:0.4317, tok/sec: 186353.35, flops:163.22, batch-reuse:1
@ 922 train 4.6811 , allloss: 4.6811, dt: 696.99ms, fracRes: 0.1464, norm(attn): 0.3730, norm(output): 0.6953, norm(x): 0.7594, norm(y): 0.9929, norm:0.4462, tok/sec: 188053.77, flops:164.71, batch-reuse:1
@ 923 train 4.6853 , allloss: 4.6853, dt: 690.00ms, fracRes: 0.1447, norm(attn): 0.3691, norm(output): 0.6875, norm(x): 0.7514, norm(y): 0.9929, norm:0.4526, tok/sec: 189959.54, flops:166.38, batch-reuse:1
@ 924 train 4.6428 , allloss: 4.6428, dt: 688.37ms, fracRes: 0.1499, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7518, norm(y): 0.9927, norm:0.4462, tok/sec: 190410.55, flops:166.77, batch-reuse:1
@ 925 train 4.6912 , allloss: 4.6912, dt: 709.72ms, fracRes: 0.1521, norm(attn): 0.3496, norm(output): 0.6875, norm(x): 0.7512, norm(y): 0.9927, norm:0.4549, tok/sec: 184680.50, flops:161.75, batch-reuse:1
@ 926 train 4.6637 , allloss: 4.6637, dt: 686.10ms, fracRes: 0.1492, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7508, norm(y): 0.9929, norm:0.3900, tok/sec: 191039.01, flops:167.32, batch-reuse:1
@ 927 train 4.6308 , allloss: 4.6308, dt: 696.02ms, fracRes: 0.1478, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7565, norm(y): 0.9930, norm:0.4131, tok/sec: 188315.81, flops:164.94, batch-reuse:1
@ 928 train 4.8259 , allloss: 4.8259, dt: 695.22ms, fracRes: 0.1481, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7570, norm(y): 0.9929, norm:0.4520, tok/sec: 188533.06, flops:165.13, batch-reuse:1
@ 929 train 4.8313 , allloss: 4.8313, dt: 690.30ms, fracRes: 0.1491, norm(attn): 0.3555, norm(output): 0.6953, norm(x): 0.7637, norm(y): 0.9929, norm:0.4201, tok/sec: 189875.56, flops:166.30, batch-reuse:1
@ 930 train 4.8624 , allloss: 4.8624, dt: 688.90ms, fracRes: 0.1518, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7635, norm(y): 0.9928, norm:0.4310, tok/sec: 190262.54, flops:166.64, batch-reuse:1
@ 931 train 4.9122 , allloss: 4.9122, dt: 692.69ms, fracRes: 0.1560, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7659, norm(y): 0.9928, norm:0.4723, tok/sec: 189221.43, flops:165.73, batch-reuse:1
@ 932 train 4.9109 , allloss: 4.9109, dt: 694.02ms, fracRes: 0.1529, norm(attn): 0.3594, norm(output): 0.6953, norm(x): 0.7676, norm(y): 0.9929, norm:0.4463, tok/sec: 188858.19, flops:165.41, batch-reuse:1
@ 933 train 4.8948 , allloss: 4.8948, dt: 705.50ms, fracRes: 0.1507, norm(attn): 0.3652, norm(output): 0.6953, norm(x): 0.7613, norm(y): 0.9930, norm:0.5114, tok/sec: 185785.31, flops:162.72, batch-reuse:1
@ 934 train 4.8499 , allloss: 4.8499, dt: 687.45ms, fracRes: 0.1465, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7600, norm(y): 0.9931, norm:0.4974, tok/sec: 190663.74, flops:166.99, batch-reuse:1
@ 935 train 4.7707 , allloss: 4.7707, dt: 699.41ms, fracRes: 0.1474, norm(attn): 0.3672, norm(output): 0.6914, norm(x): 0.7588, norm(y): 0.9930, norm:0.4715, tok/sec: 187404.83, flops:164.14, batch-reuse:1
@ 936 train 4.8623 , allloss: 4.8623, dt: 699.89ms, fracRes: 0.1481, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7603, norm(y): 0.9930, norm:0.4771, tok/sec: 187275.11, flops:164.03, batch-reuse:1
@ 937 train 4.8727 , allloss: 4.8727, dt: 694.90ms, fracRes: 0.1478, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7593, norm(y): 0.9929, norm:0.5074, tok/sec: 188620.26, flops:165.20, batch-reuse:1
@ 938 train 4.8362 , allloss: 4.8362, dt: 698.78ms, fracRes: 0.1510, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7613, norm(y): 0.9929, norm:0.4618, tok/sec: 187573.76, flops:164.29, batch-reuse:1
@ 939 train 4.8742 , allloss: 4.8742, dt: 696.93ms, fracRes: 0.1513, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7567, norm(y): 0.9929, norm:0.4972, tok/sec: 188071.52, flops:164.72, batch-reuse:1
@ 940 train 4.8747 , allloss: 4.8747, dt: 699.65ms, fracRes: 0.1508, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7522, norm(y): 0.9929, norm:0.4617, tok/sec: 187339.12, flops:164.08, batch-reuse:1
@ 941 train 4.8706 , allloss: 4.8706, dt: 696.12ms, fracRes: 0.1510, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7512, norm(y): 0.9929, norm:0.4742, tok/sec: 188289.88, flops:164.91, batch-reuse:1
@ 942 train 4.9772 , allloss: 4.9772, dt: 695.18ms, fracRes: 0.1498, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7558, norm(y): 0.9929, norm:0.4646, tok/sec: 188544.83, flops:165.14, batch-reuse:1
@ 943 train 4.7924 , allloss: 4.7924, dt: 680.34ms, fracRes: 0.1542, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7618, norm(y): 0.9929, norm:0.4175, tok/sec: 192655.38, flops:168.74, batch-reuse:1
@ 944 train 4.8592 , allloss: 4.8592, dt: 706.25ms, fracRes: 0.1547, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7610, norm(y): 0.9929, norm:0.4345, tok/sec: 185589.50, flops:162.55, batch-reuse:1
@ 945 train 4.9122 , allloss: 4.9122, dt: 710.11ms, fracRes: 0.1570, norm(attn): 0.3613, norm(output): 0.6875, norm(x): 0.7616, norm(y): 0.9928, norm:0.5532, tok/sec: 184578.69, flops:161.66, batch-reuse:1
@ 946 train 4.8522 , allloss: 4.8522, dt: 712.50ms, fracRes: 0.1529, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7610, norm(y): 0.9928, norm:0.5555, tok/sec: 183959.51, flops:161.12, batch-reuse:1
@ 947 train 4.8879 , allloss: 4.8879, dt: 713.76ms, fracRes: 0.1494, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7626, norm(y): 0.9928, norm:0.5348, tok/sec: 183637.21, flops:160.84, batch-reuse:1
@ 948 train 4.8887 , allloss: 4.8887, dt: 702.39ms, fracRes: 0.1488, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7654, norm(y): 0.9928, norm:0.5051, tok/sec: 186607.83, flops:163.44, batch-reuse:1
@ 949 train 4.8787 , allloss: 4.8787, dt: 687.56ms, fracRes: 0.1518, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7675, norm(y): 0.9928, norm:0.4790, tok/sec: 190634.71, flops:166.97, batch-reuse:1
@ 950 train 4.8262 , allloss: 4.8262, dt: 687.10ms, fracRes: 0.1539, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7644, norm(y): 0.9929, norm:0.4165, tok/sec: 190760.13, flops:167.08, batch-reuse:1
@ 951 train 4.8371 , allloss: 4.8371, dt: 702.30ms, fracRes: 0.1533, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7579, norm(y): 0.9928, norm:0.4802, tok/sec: 186631.71, flops:163.46, batch-reuse:1
@ 952 train 4.7925 , allloss: 4.7925, dt: 698.51ms, fracRes: 0.1539, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7619, norm(y): 0.9928, norm:0.4626, tok/sec: 187645.60, flops:164.35, batch-reuse:1
@ 953 train 4.8178 , allloss: 4.8178, dt: 691.42ms, fracRes: 0.1552, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7628, norm(y): 0.9928, norm:0.4801, tok/sec: 189570.06, flops:166.04, batch-reuse:1
@ 954 train 4.7536 , allloss: 4.7536, dt: 696.79ms, fracRes: 0.1528, norm(attn): 0.3594, norm(output): 0.6875, norm(x): 0.7533, norm(y): 0.9929, norm:0.4446, tok/sec: 188107.56, flops:164.76, batch-reuse:1
@ 955 train 4.8543 , allloss: 4.8543, dt: 696.15ms, fracRes: 0.1520, norm(attn): 0.3594, norm(output): 0.6875, norm(x): 0.7504, norm(y): 0.9929, norm:0.4011, tok/sec: 188280.08, flops:164.91, batch-reuse:1
@ 956 train 4.7866 , allloss: 4.7866, dt: 697.78ms, fracRes: 0.1548, norm(attn): 0.3574, norm(output): 0.6875, norm(x): 0.7533, norm(y): 0.9929, norm:0.4423, tok/sec: 187841.15, flops:164.52, batch-reuse:1
@ 957 train 4.8217 , allloss: 4.8217, dt: 697.06ms, fracRes: 0.1533, norm(attn): 0.3613, norm(output): 0.6914, norm(x): 0.7589, norm(y): 0.9929, norm:0.4118, tok/sec: 188035.24, flops:164.69, batch-reuse:1
@ 958 train 4.8251 , allloss: 4.8251, dt: 699.79ms, fracRes: 0.1552, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7605, norm(y): 0.9929, norm:0.4189, tok/sec: 187301.20, flops:164.05, batch-reuse:1
@ 959 train 4.7101 , allloss: 4.7101, dt: 690.87ms, fracRes: 0.1569, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7583, norm(y): 0.9929, norm:0.4479, tok/sec: 189720.39, flops:166.17, batch-reuse:1
@ 960 train 4.8497 , allloss: 4.8497, dt: 695.17ms, fracRes: 0.1549, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7568, norm(y): 0.9929, norm:0.4532, tok/sec: 188546.19, flops:165.14, batch-reuse:1
@ 961 train 4.7560 , allloss: 4.7560, dt: 684.14ms, fracRes: 0.1559, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7580, norm(y): 0.9929, norm:0.4495, tok/sec: 191586.26, flops:167.80, batch-reuse:1
@ 962 train 4.8642 , allloss: 4.8642, dt: 694.00ms, fracRes: 0.1544, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7509, norm(y): 0.9929, norm:0.4572, tok/sec: 188865.85, flops:165.42, batch-reuse:1
@ 963 train 4.8520 , allloss: 4.8520, dt: 692.40ms, fracRes: 0.1518, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7520, norm(y): 0.9929, norm:0.4277, tok/sec: 189301.64, flops:165.80, batch-reuse:1
@ 964 train 4.8775 , allloss: 4.8775, dt: 680.54ms, fracRes: 0.1543, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7572, norm(y): 0.9929, norm:0.4189, tok/sec: 192600.85, flops:168.69, batch-reuse:1
@ 965 train 4.8631 , allloss: 4.8631, dt: 694.51ms, fracRes: 0.1543, norm(attn): 0.3633, norm(output): 0.6875, norm(x): 0.7572, norm(y): 0.9929, norm:0.4568, tok/sec: 188724.77, flops:165.30, batch-reuse:1
@ 966 train 4.7844 , allloss: 4.7844, dt: 690.42ms, fracRes: 0.1527, norm(attn): 0.3691, norm(output): 0.6914, norm(x): 0.7561, norm(y): 0.9929, norm:0.4456, tok/sec: 189844.94, flops:166.28, batch-reuse:1
@ 967 train 4.6439 , allloss: 4.6439, dt: 696.52ms, fracRes: 0.1495, norm(attn): 0.3691, norm(output): 0.6875, norm(x): 0.7464, norm(y): 0.9929, norm:0.7283, tok/sec: 188181.93, flops:164.82, batch-reuse:1
@ 968 train 4.9729 , allloss: 4.9729, dt: 694.06ms, fracRes: 0.1539, norm(attn): 0.3574, norm(output): 0.6875, norm(x): 0.7525, norm(y): 0.9929, norm:0.7109, tok/sec: 188849.31, flops:165.40, batch-reuse:1
@ 969 train 4.8549 , allloss: 4.8549, dt: 694.36ms, fracRes: 0.1559, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7640, norm(y): 0.9928, norm:0.7700, tok/sec: 188766.31, flops:165.33, batch-reuse:1
@ 970 train 4.8276 , allloss: 4.8276, dt: 690.94ms, fracRes: 0.1553, norm(attn): 0.3613, norm(output): 0.6914, norm(x): 0.7681, norm(y): 0.9929, norm:0.6434, tok/sec: 189702.19, flops:166.15, batch-reuse:1
@ 971 train 4.8821 , allloss: 4.8821, dt: 704.84ms, fracRes: 0.1570, norm(attn): 0.3691, norm(output): 0.6953, norm(x): 0.7697, norm(y): 0.9930, norm:0.6045, tok/sec: 185961.14, flops:162.88, batch-reuse:1
@ 972 train 4.8717 , allloss: 4.8717, dt: 692.22ms, fracRes: 0.1569, norm(attn): 0.3711, norm(output): 0.7070, norm(x): 0.7740, norm(y): 0.9929, norm:0.5897, tok/sec: 189350.80, flops:165.84, batch-reuse:1
@ 973 train 4.8714 , allloss: 4.8714, dt: 701.63ms, fracRes: 0.1582, norm(attn): 0.3574, norm(output): 0.7031, norm(x): 0.7738, norm(y): 0.9928, norm:0.5585, tok/sec: 186810.11, flops:163.62, batch-reuse:1
@ 974 train 4.8264 , allloss: 4.8264, dt: 701.17ms, fracRes: 0.1578, norm(attn): 0.3574, norm(output): 0.7031, norm(x): 0.7735, norm(y): 0.9928, norm:0.5353, tok/sec: 186933.66, flops:163.73, batch-reuse:1
@ 975 train 4.8602 , allloss: 4.8602, dt: 704.01ms, fracRes: 0.1616, norm(attn): 0.3633, norm(output): 0.7070, norm(x): 0.7783, norm(y): 0.9928, norm:0.5274, tok/sec: 186178.48, flops:163.07, batch-reuse:1
@ 976 train 4.7894 , allloss: 4.7894, dt: 692.75ms, fracRes: 0.1601, norm(attn): 0.3652, norm(output): 0.7031, norm(x): 0.7761, norm(y): 0.9929, norm:0.5239, tok/sec: 189204.24, flops:165.72, batch-reuse:1
@ 977 train 4.8174 , allloss: 4.8174, dt: 690.87ms, fracRes: 0.1586, norm(attn): 0.3672, norm(output): 0.7070, norm(x): 0.7753, norm(y): 0.9929, norm:0.4358, tok/sec: 189720.72, flops:166.17, batch-reuse:1
@ 978 train 4.8166 , allloss: 4.8166, dt: 699.66ms, fracRes: 0.1572, norm(attn): 0.3594, norm(output): 0.7070, norm(x): 0.7715, norm(y): 0.9929, norm:0.4753, tok/sec: 187337.65, flops:164.08, batch-reuse:1
@ 979 train 4.7175 , allloss: 4.7175, dt: 699.71ms, fracRes: 0.1582, norm(attn): 0.3691, norm(output): 0.7031, norm(x): 0.7702, norm(y): 0.9929, norm:0.4352, tok/sec: 187324.43, flops:164.07, batch-reuse:1
@ 980 train 4.7127 , allloss: 4.7127, dt: 692.31ms, fracRes: 0.1590, norm(attn): 0.3711, norm(output): 0.6953, norm(x): 0.7670, norm(y): 0.9928, norm:0.4396, tok/sec: 189324.52, flops:165.82, batch-reuse:1
@ 981 train 4.7100 , allloss: 4.7100, dt: 694.68ms, fracRes: 0.1590, norm(attn): 0.3691, norm(output): 0.6953, norm(x): 0.7665, norm(y): 0.9928, norm:0.4543, tok/sec: 188679.17, flops:165.26, batch-reuse:1
@ 982 train 4.7245 , allloss: 4.7245, dt: 695.90ms, fracRes: 0.1600, norm(attn): 0.3691, norm(output): 0.6914, norm(x): 0.7624, norm(y): 0.9927, norm:0.4422, tok/sec: 188348.52, flops:164.97, batch-reuse:1
@ 983 train 4.7806 , allloss: 4.7806, dt: 693.67ms, fracRes: 0.1578, norm(attn): 0.3750, norm(output): 0.6992, norm(x): 0.7678, norm(y): 0.9928, norm:0.5025, tok/sec: 188954.98, flops:165.50, batch-reuse:1
@ 984 train 4.7377 , allloss: 4.7377, dt: 694.62ms, fracRes: 0.1579, norm(attn): 0.3711, norm(output): 0.7031, norm(x): 0.7726, norm(y): 0.9929, norm:0.5303, tok/sec: 188696.72, flops:165.27, batch-reuse:1
@ 985 train 4.7700 , allloss: 4.7700, dt: 691.41ms, fracRes: 0.1620, norm(attn): 0.3691, norm(output): 0.6992, norm(x): 0.7752, norm(y): 0.9930, norm:0.5197, tok/sec: 189573.06, flops:166.04, batch-reuse:1
@ 986 train 4.7853 , allloss: 4.7853, dt: 683.42ms, fracRes: 0.1643, norm(attn): 0.3652, norm(output): 0.6992, norm(x): 0.7775, norm(y): 0.9930, norm:0.4435, tok/sec: 191787.24, flops:167.98, batch-reuse:1
@ 987 train 4.7093 , allloss: 4.7093, dt: 697.86ms, fracRes: 0.1643, norm(attn): 0.3594, norm(output): 0.6992, norm(x): 0.7760, norm(y): 0.9929, norm:0.4209, tok/sec: 187821.19, flops:164.50, batch-reuse:1
@ 988 train 4.8372 , allloss: 4.8372, dt: 699.08ms, fracRes: 0.1607, norm(attn): 0.3594, norm(output): 0.7031, norm(x): 0.7727, norm(y): 0.9929, norm:0.4520, tok/sec: 187491.69, flops:164.22, batch-reuse:1
@ 989 train 4.8418 , allloss: 4.8418, dt: 695.15ms, fracRes: 0.1596, norm(attn): 0.3496, norm(output): 0.7031, norm(x): 0.7723, norm(y): 0.9929, norm:0.5110, tok/sec: 188551.43, flops:165.14, batch-reuse:1
@ 990 train 4.7575 , allloss: 4.7575, dt: 695.63ms, fracRes: 0.1648, norm(attn): 0.3555, norm(output): 0.7070, norm(x): 0.7787, norm(y): 0.9929, norm:0.5598, tok/sec: 188421.28, flops:165.03, batch-reuse:1
@ 991 train 4.7325 , allloss: 4.7325, dt: 695.27ms, fracRes: 0.1619, norm(attn): 0.3633, norm(output): 0.7031, norm(x): 0.7779, norm(y): 0.9930, norm:0.4610, tok/sec: 188519.36, flops:165.12, batch-reuse:1
@ 992 train 4.8126 , allloss: 4.8126, dt: 688.56ms, fracRes: 0.1625, norm(attn): 0.3652, norm(output): 0.7070, norm(x): 0.7760, norm(y): 0.9930, norm:0.4876, tok/sec: 190357.28, flops:166.73, batch-reuse:1
@ 993 train 4.6664 , allloss: 4.6664, dt: 689.52ms, fracRes: 0.1599, norm(attn): 0.3633, norm(output): 0.6953, norm(x): 0.7688, norm(y): 0.9930, norm:0.4859, tok/sec: 190090.64, flops:166.49, batch-reuse:1
@ 994 train 4.7462 , allloss: 4.7462, dt: 690.96ms, fracRes: 0.1616, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7645, norm(y): 0.9929, norm:0.4347, tok/sec: 189695.58, flops:166.15, batch-reuse:1
@ 995 train 4.6882 , allloss: 4.6882, dt: 689.07ms, fracRes: 0.1631, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7657, norm(y): 0.9929, norm:0.4282, tok/sec: 190214.95, flops:166.60, batch-reuse:1
@ 996 train 4.5895 , allloss: 4.5895, dt: 697.02ms, fracRes: 0.1601, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7617, norm(y): 0.9930, norm:0.5355, tok/sec: 188045.47, flops:164.70, batch-reuse:1
@ 997 train 4.7497 , allloss: 4.7497, dt: 689.47ms, fracRes: 0.1619, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7675, norm(y): 0.9930, norm:0.5864, tok/sec: 190105.30, flops:166.50, batch-reuse:1
@ 998 train 4.8997 , allloss: 4.8997, dt: 685.01ms, fracRes: 0.1625, norm(attn): 0.3652, norm(output): 0.7031, norm(x): 0.7750, norm(y): 0.9929, norm:0.4880, tok/sec: 191344.07, flops:167.59, batch-reuse:1
@ 999 train 4.6851 , allloss: 4.6851, dt: 680.49ms, fracRes: 0.1629, norm(attn): 0.3672, norm(output): 0.6992, norm(x): 0.7753, norm(y): 0.9930, norm:0.4483, tok/sec: 192615.15, flops:168.70, batch-reuse:1
@ 1000 train 4.6721 , allloss: 4.6721, dt: 689.65ms, fracRes: 0.1634, norm(attn): 0.3711, norm(output): 0.7070, norm(x): 0.7798, norm(y): 0.9930, norm:0.4491, tok/sec: 190055.28, flops:166.46, batch-reuse:1
@ 1001 train 4.8119 , allloss: 4.8119, dt: 690.61ms, fracRes: 0.1623, norm(attn): 0.3730, norm(output): 0.7031, norm(x): 0.7768, norm(y): 0.9930, norm:0.4388, tok/sec: 189791.26, flops:166.23, batch-reuse:1
@ 1002 train 4.7611 , allloss: 4.7611, dt: 704.34ms, fracRes: 0.1635, norm(attn): 0.3691, norm(output): 0.6992, norm(x): 0.7728, norm(y): 0.9930, norm:0.4511, tok/sec: 186091.00, flops:162.99, batch-reuse:1
@ 1003 train 4.7926 , allloss: 4.7926, dt: 706.79ms, fracRes: 0.1664, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7697, norm(y): 0.9929, norm:0.5064, tok/sec: 185447.01, flops:162.42, batch-reuse:1
@ 1004 train 4.6928 , allloss: 4.6928, dt: 689.18ms, fracRes: 0.1644, norm(attn): 0.3672, norm(output): 0.6914, norm(x): 0.7706, norm(y): 0.9929, norm:0.4371, tok/sec: 190186.39, flops:166.58, batch-reuse:1
@ 1005 train 4.7644 , allloss: 4.7644, dt: 694.04ms, fracRes: 0.1639, norm(attn): 0.3652, norm(output): 0.6953, norm(x): 0.7725, norm(y): 0.9929, norm:0.4764, tok/sec: 188852.94, flops:165.41, batch-reuse:1
@ 1006 train 4.7844 , allloss: 4.7844, dt: 688.83ms, fracRes: 0.1655, norm(attn): 0.3652, norm(output): 0.6992, norm(x): 0.7737, norm(y): 0.9929, norm:0.4054, tok/sec: 190282.17, flops:166.66, batch-reuse:1
@ 1007 train 4.7478 , allloss: 4.7478, dt: 692.63ms, fracRes: 0.1669, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7721, norm(y): 0.9930, norm:0.4095, tok/sec: 189237.91, flops:165.75, batch-reuse:1
@ 1008 train 4.7286 , allloss: 4.7286, dt: 700.52ms, fracRes: 0.1666, norm(attn): 0.3672, norm(output): 0.6914, norm(x): 0.7700, norm(y): 0.9930, norm:0.4208, tok/sec: 187107.22, flops:163.88, batch-reuse:1
@ 1009 train 4.6949 , allloss: 4.6949, dt: 701.28ms, fracRes: 0.1608, norm(attn): 0.3613, norm(output): 0.6953, norm(x): 0.7688, norm(y): 0.9930, norm:0.4716, tok/sec: 186903.41, flops:163.70, batch-reuse:1
@ 1010 train 4.7610 , allloss: 4.7610, dt: 685.24ms, fracRes: 0.1636, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7680, norm(y): 0.9929, norm:0.3828, tok/sec: 191277.96, flops:167.53, batch-reuse:1
@ 1011 train 4.7124 , allloss: 4.7124, dt: 682.56ms, fracRes: 0.1623, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7643, norm(y): 0.9929, norm:0.4245, tok/sec: 192028.67, flops:168.19, batch-reuse:1
@ 1012 train 4.7295 , allloss: 4.7295, dt: 685.45ms, fracRes: 0.1646, norm(attn): 0.3633, norm(output): 0.6953, norm(x): 0.7700, norm(y): 0.9928, norm:0.3878, tok/sec: 191221.61, flops:167.48, batch-reuse:1
@ 1013 train 4.7652 , allloss: 4.7652, dt: 698.28ms, fracRes: 0.1646, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7708, norm(y): 0.9929, norm:0.4157, tok/sec: 187705.69, flops:164.40, batch-reuse:1
@ 1014 train 4.7305 , allloss: 4.7305, dt: 704.82ms, fracRes: 0.1657, norm(attn): 0.3672, norm(output): 0.6914, norm(x): 0.7762, norm(y): 0.9930, norm:0.4139, tok/sec: 185964.10, flops:162.88, batch-reuse:1
@ 1015 train 4.8037 , allloss: 4.8037, dt: 682.31ms, fracRes: 0.1678, norm(attn): 0.3691, norm(output): 0.6953, norm(x): 0.7727, norm(y): 0.9929, norm:0.4990, tok/sec: 192101.28, flops:168.25, batch-reuse:1
@ 1016 train 4.8699 , allloss: 4.8699, dt: 682.86ms, fracRes: 0.1723, norm(attn): 0.3711, norm(output): 0.6914, norm(x): 0.7743, norm(y): 0.9928, norm:0.4696, tok/sec: 191946.41, flops:168.12, batch-reuse:1
@ 1017 train 4.7091 , allloss: 4.7091, dt: 690.30ms, fracRes: 0.1702, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7725, norm(y): 0.9928, norm:0.4568, tok/sec: 189875.88, flops:166.30, batch-reuse:1
@ 1018 train 4.7980 , allloss: 4.7980, dt: 693.63ms, fracRes: 0.1666, norm(attn): 0.3711, norm(output): 0.6914, norm(x): 0.7722, norm(y): 0.9930, norm:0.4170, tok/sec: 188965.89, flops:165.51, batch-reuse:1
@ 1019 train 4.7335 , allloss: 4.7335, dt: 707.14ms, fracRes: 0.1650, norm(attn): 0.3652, norm(output): 0.6953, norm(x): 0.7745, norm(y): 0.9929, norm:0.5270, tok/sec: 185356.35, flops:162.35, batch-reuse:1
@ 1020 train 4.6913 , allloss: 4.6913, dt: 690.88ms, fracRes: 0.1669, norm(attn): 0.3633, norm(output): 0.6953, norm(x): 0.7769, norm(y): 0.9930, norm:0.5648, tok/sec: 189716.92, flops:166.16, batch-reuse:1
@ 1021 train 4.6721 , allloss: 4.6721, dt: 704.14ms, fracRes: 0.1662, norm(attn): 0.3594, norm(output): 0.6953, norm(x): 0.7764, norm(y): 0.9930, norm:0.5142, tok/sec: 186144.44, flops:163.04, batch-reuse:1
@ 1022 train 4.5934 , allloss: 4.5934, dt: 685.79ms, fracRes: 0.1657, norm(attn): 0.3574, norm(output): 0.6953, norm(x): 0.7735, norm(y): 0.9930, norm:0.4718, tok/sec: 191126.41, flops:167.40, batch-reuse:1
@ 1023 train 4.6359 , allloss: 4.6359, dt: 689.80ms, fracRes: 0.1657, norm(attn): 0.3555, norm(output): 0.6953, norm(x): 0.7705, norm(y): 0.9930, norm:0.5044, tok/sec: 190014.42, flops:166.43, batch-reuse:1
@ 1024 train 4.6411 , allloss: 4.6411, dt: 704.23ms, fracRes: 0.1670, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7722, norm(y): 0.9929, norm:0.5317, tok/sec: 186120.80, flops:163.01, batch-reuse:1
@ 1025 train 4.6784 , allloss: 4.6784, dt: 701.41ms, fracRes: 0.1720, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7679, norm(y): 0.9928, norm:0.4856, tok/sec: 186870.43, flops:163.67, batch-reuse:1
@ 1026 train 4.6929 , allloss: 4.6929, dt: 689.10ms, fracRes: 0.1759, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7669, norm(y): 0.9928, norm:0.5145, tok/sec: 190207.71, flops:166.59, batch-reuse:1
@ 1027 train 4.7302 , allloss: 4.7302, dt: 692.37ms, fracRes: 0.1729, norm(attn): 0.3516, norm(output): 0.6875, norm(x): 0.7660, norm(y): 0.9927, norm:0.4803, tok/sec: 189308.03, flops:165.81, batch-reuse:1
@ 1028 train 4.6785 , allloss: 4.6785, dt: 701.92ms, fracRes: 0.1693, norm(attn): 0.3535, norm(output): 0.6875, norm(x): 0.7633, norm(y): 0.9928, norm:0.4785, tok/sec: 186734.35, flops:163.55, batch-reuse:1
@ 1029 train 4.6881 , allloss: 4.6881, dt: 700.31ms, fracRes: 0.1664, norm(attn): 0.3555, norm(output): 0.6875, norm(x): 0.7579, norm(y): 0.9928, norm:0.4495, tok/sec: 187163.40, flops:163.93, batch-reuse:1
@ 1030 train 4.6285 , allloss: 4.6285, dt: 694.32ms, fracRes: 0.1711, norm(attn): 0.3594, norm(output): 0.6875, norm(x): 0.7666, norm(y): 0.9929, norm:0.4434, tok/sec: 188778.49, flops:165.34, batch-reuse:1
@ 1031 train 4.7189 , allloss: 4.7189, dt: 708.08ms, fracRes: 0.1664, norm(attn): 0.3613, norm(output): 0.6914, norm(x): 0.7671, norm(y): 0.9929, norm:0.4893, tok/sec: 185108.27, flops:162.13, batch-reuse:1
@ 1032 train 4.6234 , allloss: 4.6234, dt: 708.96ms, fracRes: 0.1652, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7673, norm(y): 0.9930, norm:0.4753, tok/sec: 184878.37, flops:161.93, batch-reuse:1
@ 1033 train 4.6717 , allloss: 4.6717, dt: 707.85ms, fracRes: 0.1664, norm(attn): 0.3711, norm(output): 0.6914, norm(x): 0.7720, norm(y): 0.9930, norm:0.4318, tok/sec: 185168.74, flops:162.18, batch-reuse:1
@ 1034 train 4.6612 , allloss: 4.6612, dt: 705.80ms, fracRes: 0.1727, norm(attn): 0.3711, norm(output): 0.6953, norm(x): 0.7770, norm(y): 0.9930, norm:0.5360, tok/sec: 185706.11, flops:162.65, batch-reuse:1
@ 1035 train 4.6521 , allloss: 4.6521, dt: 707.15ms, fracRes: 0.1708, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7753, norm(y): 0.9930, norm:0.5133, tok/sec: 185352.79, flops:162.34, batch-reuse:1
@ 1036 train 4.6867 , allloss: 4.6867, dt: 708.38ms, fracRes: 0.1714, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7730, norm(y): 0.9930, norm:0.4205, tok/sec: 185030.39, flops:162.06, batch-reuse:1
@ 1037 train 4.6537 , allloss: 4.6537, dt: 709.91ms, fracRes: 0.1709, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7721, norm(y): 0.9930, norm:0.5504, tok/sec: 184632.12, flops:161.71, batch-reuse:1
@ 1038 train 4.6232 , allloss: 4.6232, dt: 692.98ms, fracRes: 0.1721, norm(attn): 0.3594, norm(output): 0.6992, norm(x): 0.7756, norm(y): 0.9929, norm:0.5054, tok/sec: 189141.62, flops:165.66, batch-reuse:1
@ 1039 train 4.6711 , allloss: 4.6711, dt: 703.96ms, fracRes: 0.1686, norm(attn): 0.3652, norm(output): 0.6953, norm(x): 0.7727, norm(y): 0.9930, norm:0.4288, tok/sec: 186193.11, flops:163.08, batch-reuse:1
@ 1040 train 4.6096 , allloss: 4.6096, dt: 699.88ms, fracRes: 0.1662, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7658, norm(y): 0.9931, norm:0.5953, tok/sec: 187279.00, flops:164.03, batch-reuse:1
@ 1041 train 4.6893 , allloss: 4.6893, dt: 704.71ms, fracRes: 0.1679, norm(attn): 0.3613, norm(output): 0.7031, norm(x): 0.7761, norm(y): 0.9930, norm:0.5704, tok/sec: 185993.80, flops:162.90, batch-reuse:1
@ 1042 train 4.5887 , allloss: 4.5887, dt: 694.96ms, fracRes: 0.1721, norm(attn): 0.3555, norm(output): 0.7070, norm(x): 0.7797, norm(y): 0.9930, norm:0.4665, tok/sec: 188604.66, flops:165.19, batch-reuse:1
@ 1043 train 4.6774 , allloss: 4.6774, dt: 703.05ms, fracRes: 0.1712, norm(attn): 0.3535, norm(output): 0.6992, norm(x): 0.7774, norm(y): 0.9930, norm:0.5028, tok/sec: 186434.69, flops:163.29, batch-reuse:1
@ 1044 train 4.6246 , allloss: 4.6246, dt: 705.64ms, fracRes: 0.1740, norm(attn): 0.3535, norm(output): 0.6953, norm(x): 0.7733, norm(y): 0.9930, norm:0.4712, tok/sec: 185750.40, flops:162.69, batch-reuse:1
@ 1045 train 4.6942 , allloss: 4.6942, dt: 713.55ms, fracRes: 0.1737, norm(attn): 0.3574, norm(output): 0.6875, norm(x): 0.7690, norm(y): 0.9930, norm:0.4925, tok/sec: 183690.53, flops:160.89, batch-reuse:1
@ 1046 train 4.6992 , allloss: 4.6992, dt: 692.93ms, fracRes: 0.1740, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7698, norm(y): 0.9930, norm:0.4116, tok/sec: 189155.55, flops:165.67, batch-reuse:1
@ 1047 train 4.6079 , allloss: 4.6079, dt: 709.82ms, fracRes: 0.1759, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7724, norm(y): 0.9929, norm:0.4730, tok/sec: 184654.08, flops:161.73, batch-reuse:1
@ 1048 train 4.6356 , allloss: 4.6356, dt: 714.45ms, fracRes: 0.1755, norm(attn): 0.3672, norm(output): 0.6953, norm(x): 0.7713, norm(y): 0.9929, norm:0.4663, tok/sec: 183458.82, flops:160.68, batch-reuse:1
@ 1049 train 4.5793 , allloss: 4.5793, dt: 709.93ms, fracRes: 0.1747, norm(attn): 0.3633, norm(output): 0.6953, norm(x): 0.7740, norm(y): 0.9929, norm:0.4373, tok/sec: 184626.54, flops:161.71, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0142, 0.9844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0049, 0.2412, 0.7539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0216, 0.2256, 0.4746, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0381, 0.4512, 0.3262, 0.1147, 0.0713, 0.0000, 0.0000, 0.0000],
        [0.0527, 0.2617, 0.4766, 0.0786, 0.0537, 0.0757, 0.0000, 0.0000],
        [0.0300, 0.0942, 0.2812, 0.0869, 0.1562, 0.1572, 0.1953, 0.0000],
        [0.0135, 0.0527, 0.1924, 0.0801, 0.1514, 0.1543, 0.1816, 0.1729]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0044,     -0.2910,     -0.3594,     -0.3574,     -0.4805,     -0.4219,     -0.3086,     -0.2578],
        [    -0.0118,      4.2188,      3.1719,      1.7344,      2.5781,      2.8438,      1.9062,      2.5469],
        [    -0.0500,      3.8594,      5.0000,      5.3125,      6.1875,      4.6250,      4.1250,      4.2812],
        [    -0.0352,      2.3125,      3.0469,      2.5156,      3.4688,      3.5000,      2.2812,      2.9375],
        [    -0.0077,      2.4531,      2.1406,      1.0938,      0.6133,      1.3828,      0.9180,      1.7031],
        [    -0.0123,      1.5938,      2.1875,      0.3887,      0.0091,      0.3516,      0.9102,      1.7500],
        [    -0.0288,      1.1094,      2.2031,      1.0312,      1.6172,      1.6250,      1.8438,      1.9609],
        [    -0.0281,      1.3359,      2.6250,      1.7500,      2.3906,      2.4062,      2.5781,      2.5156]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7124],
        [0.2396],
        [0.2000],
        [0.3489],
        [0.3344],
        [0.2019],
        [0.1811],
        [0.2416],
        [0.1640],
        [0.2643],
        [0.1283],
        [0.1089],
        [0.2040],
        [0.0804]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0031,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0007,     0.0007,     0.0131,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0003,     0.0237,     0.0018,     0.0002,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0026,     0.0123,     0.0017,     0.0005,     0.0079,     0.0000,     0.0000],
        [    0.9844,     0.0040,     0.0046,     0.0011,     0.0004,     0.0021,     0.0041,     0.0000],
        [    0.9609,     0.0109,     0.0035,     0.0041,     0.0004,     0.0038,     0.0024,     0.0129]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0014,     -0.0889,     -0.0352,     -0.0583,     -0.1445,     -0.0923,     -0.1226,     -0.0806],
        [    -0.0236,     -6.2500,     -4.2500,     -5.9375,     -9.3125,     -7.9375,     -8.5625,     -7.4375],
        [    -0.0618,     -5.8125,     -7.0938,     -4.2812,    -10.6875,    -10.1250,     -8.2500,     -7.9688],
        [    -0.0601,     -7.2812,     -7.2812,     -4.3750,     -9.9375,    -10.5000,     -8.6250,     -7.1875],
        [    -0.0669,     -8.1250,     -3.7812,     -6.3750,     -8.4375,     -4.8750,     -7.5625,     -5.7188],
        [    -0.0155,     -5.9375,     -4.4062,     -6.3438,     -7.6562,     -4.8125,     -6.1250,     -4.8125],
        [    -0.0630,     -5.5938,     -5.4375,     -6.9062,     -7.8438,     -6.2188,     -5.5312,     -6.0000],
        [    -0.0635,     -4.5312,     -5.6875,     -5.5312,     -7.9062,     -5.5938,     -6.0625,     -4.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6352],
        [0.6108],
        [0.6245],
        [0.5795],
        [0.5913],
        [0.5163],
        [0.5315],
        [0.4753],
        [0.5356],
        [0.4234],
        [0.4472],
        [0.5108],
        [0.4400],
        [0.4053]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0037,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0227,     0.6211,     0.3574,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.5898,     0.2500,     0.1592,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.3848,     0.2373,     0.1270,     0.2500,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.3594,     0.1250,     0.0737,     0.2168,     0.2236,     0.0000,     0.0000],
        [    0.0008,     0.3086,     0.1191,     0.0679,     0.1562,     0.2227,     0.1240,     0.0000],
        [    0.0012,     0.3242,     0.0908,     0.0464,     0.1514,     0.1826,     0.1147,     0.0879]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0053,     -0.0776,     -0.1025,     -0.1133,     -0.0918,     -0.1157,     -0.1211,     -0.1475],
        [     0.0410,      5.6250,      4.6250,      4.0938,      5.3125,      5.0625,      4.8125,      4.6562],
        [     0.0378,      3.3438,      2.7969,      2.3438,      3.2656,      2.8594,      2.7812,      2.5156],
        [     0.0017,      5.5625,      4.6875,      4.2500,      4.9688,      5.2500,      5.0000,      4.8750],
        [     0.0038,      5.8750,      5.4062,      4.7812,      5.4375,      6.0312,      5.5938,      5.5938],
        [     0.0312,      5.8438,      4.7812,      4.2500,      5.3438,      5.3750,      5.0625,      4.9375],
        [     0.0273,      6.0312,      5.0938,      4.5312,      5.3750,      5.7188,      5.1250,      5.1875],
        [     0.0540,      5.6875,      4.4062,      3.7344,      4.9375,      5.1250,      4.6562,      4.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8222],
        [0.7036],
        [0.6614],
        [0.6008],
        [0.5793],
        [0.5146],
        [0.5401],
        [0.4819],
        [0.5019],
        [0.4764],
        [0.4881],
        [0.4974],
        [0.4652],
        [0.4622]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9609, 0.0383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.2539, 0.4160, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0583, 0.1748, 0.6719, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.1289, 0.4766, 0.0684, 0.0146, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.0933, 0.4980, 0.0977, 0.1094, 0.1299, 0.0000, 0.0000],
        [0.0206, 0.0850, 0.3828, 0.1572, 0.0444, 0.2715, 0.0374, 0.0000],
        [0.0189, 0.1348, 0.2158, 0.1445, 0.0432, 0.2354, 0.0435, 0.1641]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0019,     -0.1787,     -0.1416,     -0.2314,     -0.2617,     -0.2285,     -0.3379,     -0.2891],
        [    -0.0630,     -3.2812,      1.0000,     -1.0391,     -1.5000,     -0.0625,     -2.1562,      0.0522],
        [    -0.0732,     -0.3359,      0.1621,     -0.8633,     -1.4219,      0.6172,     -1.1797,      1.0234],
        [    -0.0869,      1.0078,      2.3594,      0.4004,      0.4844,      2.4688,      0.7422,      2.8438],
        [    -0.1133,     -0.9961,      0.3145,     -1.6250,     -3.1719,      0.2324,     -2.3906,      0.1484],
        [    -0.1094,      0.1484,      1.8203,      0.1973,      0.3086,      0.4824,     -0.7031,      1.8984],
        [    -0.1230,      1.2969,      2.7969,      1.9062,      0.6445,      2.4531,      0.4727,      3.3281],
        [    -0.1006,      1.8672,      2.3281,      1.9297,      0.7266,      2.4219,      0.7305,      2.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7447],
        [0.4391],
        [0.3665],
        [0.3858],
        [0.3292],
        [0.2749],
        [0.2188],
        [0.2092],
        [0.1716],
        [0.2165],
        [0.1979],
        [0.1835],
        [0.1714],
        [0.1514]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.3086,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0065,     0.9570,     0.0369,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0155,     0.6836,     0.1113,     0.1904,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0240,     0.0071,     0.0013,     0.9688,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.0006,     0.0001,     0.0000,     0.9297,     0.0698,     0.0000,     0.0000],
        [    0.0004,     0.0001,     0.0000,     0.0000,     0.0003,     0.0344,     0.9648,     0.0000],
        [    0.0006,     0.0002,     0.0000,     0.0000,     0.0003,     0.0030,     0.9570,     0.0381]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0320,     -0.1680,     -0.2070,     -0.0811,     -0.1157,     -0.1387,     -0.1670],
        [    -0.0039,     -0.8086,     -8.3125,     -9.9375,     -3.2969,     -6.0938,     -5.5938,     -5.4688],
        [    -0.0266,      4.9688,      1.7109,      1.5312,      3.6406,     -0.3691,      1.2031,      0.1963],
        [    -0.0154,      3.7656,      1.9609,      2.5000,      5.2500,      2.2656,      3.4062,      1.5234],
        [     0.0127,      3.9375,      2.7188,      1.0156,      7.6250,      1.8281,     -0.3945,     -2.9219],
        [     0.0145,     -0.8281,     -2.6875,     -4.6250,      6.5312,      3.9531,     -0.2871,     -3.1406],
        [     0.0096,     -1.3516,     -4.1250,     -5.7812,     -0.3027,      4.5312,      7.8438,      3.2812],
        [     0.0059,     -1.2656,     -6.5000,     -8.9375,     -0.7617,      1.5469,      7.3125,      4.0938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8354],
        [0.4772],
        [0.4640],
        [0.4275],
        [0.4387],
        [0.3806],
        [0.3879],
        [0.3683],
        [0.3390],
        [0.3516],
        [0.3451],
        [0.3031],
        [0.2816],
        [0.3228]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0061,     -0.4844,     -0.6094,     -0.5820,     -0.5156,     -0.5352,     -0.6758,     -0.7383],
        [    -0.3379,    -27.6250,    -35.0000,    -34.0000,    -29.8750,    -31.0000,    -37.7500,    -42.2500],
        [    -0.3164,    -26.5000,    -32.5000,    -32.2500,    -28.6250,    -29.0000,    -35.7500,    -40.7500],
        [    -0.3574,    -30.2500,    -37.5000,    -36.7500,    -33.0000,    -32.7500,    -41.5000,    -46.5000],
        [    -0.3027,    -24.6250,    -31.5000,    -30.7500,    -27.8750,    -26.7500,    -35.7500,    -38.7500],
        [    -0.2969,    -23.1250,    -28.0000,    -26.5000,    -23.1250,    -24.7500,    -31.5000,    -34.7500],
        [    -0.3516,    -27.5000,    -34.5000,    -33.2500,    -29.7500,    -29.3750,    -38.0000,    -42.5000],
        [    -0.3867,    -31.3750,    -39.7500,    -38.0000,    -33.7500,    -34.5000,    -43.0000,    -48.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6047],
        [0.4630],
        [0.5302],
        [0.5593],
        [0.5153],
        [0.4397],
        [0.4781],
        [0.5399],
        [0.5198],
        [0.5441],
        [0.3968],
        [0.5157],
        [0.4900],
        [0.4276]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5703,     0.2314,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0018,     -0.3652,     -0.2070,     -0.3438,     -0.4414,     -0.3574,     -0.4199,     -0.3828],
        [    -0.1230,    -26.1250,    -15.5000,    -26.5000,    -32.0000,    -24.7500,    -30.8750,    -29.1250],
        [    -0.0026,     -0.9023,     -1.0547,     -0.6602,     -1.1250,     -2.9688,     -2.8438,     -0.5938],
        [    -0.0845,    -17.2500,     -9.3750,    -15.3750,    -20.0000,    -17.8750,    -19.8750,    -16.8750],
        [    -0.1133,    -23.6250,    -13.7500,    -22.5000,    -28.0000,    -23.1250,    -28.1250,    -24.6250],
        [    -0.1191,    -24.8750,    -14.1250,    -23.3750,    -28.5000,    -23.0000,    -27.3750,    -25.1250],
        [    -0.1035,    -20.1250,    -11.4375,    -17.5000,    -22.6250,    -18.5000,    -20.2500,    -17.1250],
        [    -0.1084,    -22.2500,    -12.0625,    -20.2500,    -25.7500,    -20.5000,    -24.0000,    -21.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8773],
        [0.3485],
        [0.4812],
        [0.7093],
        [0.6886],
        [0.6703],
        [0.5656],
        [0.7528],
        [0.4698],
        [0.5893],
        [0.2052],
        [0.6888],
        [0.6616],
        [0.2854]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0525,     0.8711,     0.0757,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5547,     0.4160,     0.0120,     0.0161,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2373,     0.3477,     0.0442,     0.0625,     0.1660,     0.0698,     0.0732,     0.0000],
        [    0.9492,     0.0227,     0.0007,     0.0009,     0.0108,     0.0051,     0.0056,     0.0039]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0007,     -0.1099,     -0.1816,     -0.1631,     -0.1318,     -0.1318,     -0.1289,     -0.1328],
        [    -0.0908,    -14.8125,    -21.8750,    -20.0000,    -16.1250,    -15.9375,    -14.8125,    -17.2500],
        [     0.0087,      2.8125,      0.3711,      0.4688,      2.1250,      0.9844,      0.3301,      1.0781],
        [    -0.0068,     -0.2930,     -3.8438,     -3.5469,     -1.1172,     -2.2031,     -3.5000,     -2.4688],
        [    -0.0603,     -8.8125,    -14.0625,    -11.8750,    -10.9375,    -10.5625,     -9.6875,     -9.8125],
        [    -0.0659,    -10.0000,    -16.6250,    -14.6250,    -12.3750,    -12.6250,    -12.0625,    -12.7500],
        [    -0.0058,      0.3730,     -1.6875,     -1.3438,     -0.3672,     -1.2266,     -1.1875,     -0.9961],
        [    -0.0251,     -3.7656,     -7.2188,     -7.0312,     -4.5000,     -5.2500,     -5.1562,     -5.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.1602],
        [0.2207],
        [0.8460],
        [0.9993],
        [0.5776],
        [0.5939],
        [0.8607],
        [0.9300],
        [0.9954],
        [0.0046],
        [0.9886],
        [0.9906],
        [0.5689]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9453, 0.0562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0209, 0.7773, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0250, 0.5938, 0.1836, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0132, 0.0664, 0.4727, 0.4160, 0.0325, 0.0000, 0.0000, 0.0000],
        [0.7891, 0.0654, 0.0042, 0.0083, 0.1245, 0.0099, 0.0000, 0.0000],
        [0.0096, 0.1934, 0.1221, 0.1172, 0.0566, 0.3906, 0.1113, 0.0000],
        [0.0574, 0.2178, 0.0515, 0.0549, 0.1328, 0.2500, 0.1226, 0.1128]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0088,     -0.0065,     -0.0068,      0.0013,      0.0014,     -0.0075,     -0.0043],
        [    -0.0039,     -2.8281,     -5.0625,     -4.7812,     -2.4844,     -4.7188,     -3.3281,     -2.8438],
        [     0.0013,      3.6250,      2.2656,      2.2812,      1.9844,      4.3125,      1.7422,      1.7656],
        [     0.0023,      3.1719,      1.9922,      2.0625,      1.8125,      3.8594,      1.8359,      1.7344],
        [     0.0068,      1.6172,      3.5781,      3.4531,      0.9062,      3.3281,      3.1250,      2.6094],
        [    -0.0030,     -2.5000,     -5.2500,     -4.5625,     -1.8438,     -4.3750,     -3.0938,     -2.5156],
        [     0.0027,      3.0000,      2.5469,      2.5000,      1.7812,      3.7031,      2.4531,      2.1719],
        [     0.0035,      1.3359,     -0.1040,     -0.0410,      0.8438,      1.4766,      0.7656,      0.6797]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8924],
        [0.0340],
        [0.0304],
        [0.2391],
        [0.6056],
        [0.0443],
        [0.2777],
        [0.7977],
        [0.4137],
        [0.6919],
        [0.0267],
        [0.5583],
        [0.8470],
        [0.0188]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5234, 0.4746, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0325, 0.8867, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0342, 0.7812, 0.0859, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0640, 0.5664, 0.0659, 0.0747, 0.2285, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.1699, 0.0457, 0.0415, 0.0398, 0.0811, 0.0000, 0.0000],
        [0.0134, 0.3984, 0.0315, 0.0381, 0.1865, 0.2891, 0.0442, 0.0000],
        [0.0119, 0.3457, 0.0286, 0.0366, 0.2070, 0.2129, 0.0437, 0.1138]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0161,     -0.0012,     -0.0005,      0.0112,      0.0183,     -0.0010,      0.0074],
        [    -0.0026,     -0.1016,     -0.8477,     -0.9023,     -0.7344,     -0.2061,     -1.1016,     -0.7109],
        [    -0.0050,      3.2969,      0.9062,      1.0938,      2.5938,      3.0625,      1.2422,      2.0938],
        [    -0.0042,      3.1250,      0.9180,      1.0703,      2.4062,      2.8906,      1.2188,      1.9531],
        [    -0.0056,      2.1875,      0.0270,      0.1533,      1.2656,      1.4922,      0.1904,      0.9062],
        [    -0.0020,     -1.3047,     -2.6250,     -2.7031,     -2.7500,     -2.0469,     -3.0000,     -2.6250],
        [    -0.0057,      3.3906,      0.8438,      1.0391,      2.6250,      3.0625,      1.1797,      2.0938],
        [    -0.0070,      3.3594,      0.8672,      1.1172,      2.8438,      2.8750,      1.2891,      2.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7211],
        [0.0636],
        [0.0612],
        [0.1065],
        [0.4160],
        [0.0190],
        [0.0200],
        [0.1126],
        [0.0645],
        [0.0302],
        [0.0089],
        [0.0288],
        [0.1024],
        [0.0095]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9688, 0.0322, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.7539, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.6797, 0.1226, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.5625, 0.1172, 0.1152, 0.1367, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.0535, 0.1807, 0.1816, 0.1738, 0.0786, 0.0000, 0.0000],
        [0.0222, 0.5586, 0.0493, 0.0483, 0.0618, 0.2314, 0.0291, 0.0000],
        [0.0188, 0.5703, 0.0437, 0.0430, 0.0547, 0.2217, 0.0249, 0.0238]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0151,      0.0049,      0.0045,      0.0049,      0.0118,      0.0006,     -0.0004],
        [    -0.0024,     -3.4062,     -0.7383,     -0.7539,     -1.0156,     -2.2344,     -0.3184,     -0.2949],
        [     0.0011,      2.0625,      0.4414,      0.4297,      0.6758,      1.4688,      0.1406,      0.1416],
        [     0.0011,      2.1875,      0.4766,      0.4648,      0.7109,      1.5781,      0.1533,      0.1543],
        [     0.0012,      2.1094,      0.5312,      0.5195,      0.6914,      1.5469,      0.1885,      0.1719],
        [    -0.0009,     -1.8281,     -0.6094,     -0.6016,     -0.6484,     -1.4453,     -0.2754,     -0.2422],
        [     0.0018,      3.2188,      0.7969,      0.7812,      1.0234,      2.3438,      0.2695,      0.2334],
        [     0.0019,      3.4219,      0.8477,      0.8281,      1.0703,      2.4688,      0.2852,      0.2412]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8870],
        [0.4858],
        [0.3882],
        [0.3595],
        [0.4951],
        [0.2172],
        [0.1892],
        [0.1835],
        [0.1566],
        [0.1254],
        [0.1132],
        [0.1119],
        [0.1011],
        [0.0880]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1045,     0.8945,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0035,     0.3164,     0.6797,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.1963,     0.4883,     0.3125,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.1562,     0.4258,     0.2676,     0.1484,     0.0000,     0.0000,     0.0000],
        [    0.0053,     0.1582,     0.2793,     0.2051,     0.1406,     0.2119,     0.0000,     0.0000],
        [    0.0008,     0.1079,     0.3496,     0.2100,     0.1118,     0.1660,     0.0540,     0.0000],
        [    0.0007,     0.0991,     0.3438,     0.2051,     0.1074,     0.1572,     0.0513,     0.0342]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0265,      0.0309,      0.0284,      0.0254,      0.0278,      0.0216,      0.0195],
        [    -0.0021,      2.1406,      2.4531,      2.2812,      2.0781,      2.2812,      1.7734,      1.6250],
        [    -0.0060,      4.5000,      5.2500,      4.8750,      4.3438,      4.8125,      3.7500,      3.4219],
        [    -0.0065,      4.6875,      5.5938,      5.1562,      4.5625,      5.0312,      3.9375,      3.5781],
        [    -0.0068,      4.7188,      5.7188,      5.2500,      4.6875,      5.1250,      4.0000,      3.6250],
        [    -0.0042,      3.3906,      3.9531,      3.6406,      3.2656,      3.6875,      2.7812,      2.5312],
        [    -0.0074,      4.8750,      6.0312,      5.5312,      4.9062,      5.3125,      4.1875,      3.7812],
        [    -0.0076,      4.9062,      6.1562,      5.6250,      4.9688,      5.3750,      4.2500,      3.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1266],
        [0.0038],
        [0.0024],
        [0.0023],
        [0.0065],
        [0.0017],
        [0.0018],
        [0.0020],
        [0.0017],
        [0.0019],
        [0.0018],
        [0.0018],
        [0.0018],
        [0.0017]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( disapp:0.0045 disapp:0.0039 disapp:0.0044 disapp:0.0039 disapp:0.0037 disapp:0.0042 cannabin:0.0036 disapp:0.0038)
 disapp
------
		( disapp:0.0039 disapp:0.0044 disapp:0.0039 disapp:0.0037 disapp:0.0042 cannabin:0.0036 disapp:0.0038ンジ:0.0037)
ンジンジンジンジ SetTextColor cannabin SetTextColor SetTextColor SetTextColor SetTextColorィィィ SetTextColor SetTextColor
@ 1050 train 4.6827 , allloss: 4.6827, dt: 1142.23ms, fracRes: 0.1728, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7745, norm(y): 0.9929, norm:0.3781, tok/sec: 114750.97, flops:100.51, batch-reuse:1
@ 1051 train 4.6345 , allloss: 4.6345, dt: 699.59ms, fracRes: 0.1718, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7713, norm(y): 0.9929, norm:0.4380, tok/sec: 187354.63, flops:164.10, batch-reuse:1
@ 1052 train 4.6593 , allloss: 4.6593, dt: 703.92ms, fracRes: 0.1697, norm(attn): 0.3711, norm(output): 0.6953, norm(x): 0.7749, norm(y): 0.9930, norm:0.4296, tok/sec: 186201.81, flops:163.09, batch-reuse:1
@ 1053 train 4.6247 , allloss: 4.6247, dt: 698.43ms, fracRes: 0.1727, norm(attn): 0.3711, norm(output): 0.7031, norm(x): 0.7809, norm(y): 0.9930, norm:0.4533, tok/sec: 187666.16, flops:164.37, batch-reuse:1
@ 1054 train 4.5883 , allloss: 4.5883, dt: 701.88ms, fracRes: 0.1738, norm(attn): 0.3711, norm(output): 0.7031, norm(x): 0.7794, norm(y): 0.9930, norm:0.4373, tok/sec: 186743.86, flops:163.56, batch-reuse:1
@ 1055 train 4.6091 , allloss: 4.6091, dt: 703.82ms, fracRes: 0.1735, norm(attn): 0.3672, norm(output): 0.6953, norm(x): 0.7751, norm(y): 0.9930, norm:0.4211, tok/sec: 186229.31, flops:163.11, batch-reuse:1
@ 1056 train 4.6026 , allloss: 4.6026, dt: 700.25ms, fracRes: 0.1753, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7754, norm(y): 0.9929, norm:0.4417, tok/sec: 187177.81, flops:163.94, batch-reuse:1
@ 1057 train 4.6154 , allloss: 4.6154, dt: 702.06ms, fracRes: 0.1768, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7736, norm(y): 0.9929, norm:0.4816, tok/sec: 186696.49, flops:163.52, batch-reuse:1
@ 1058 train 4.6766 , allloss: 4.6766, dt: 701.64ms, fracRes: 0.1767, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7682, norm(y): 0.9928, norm:0.4421, tok/sec: 186806.87, flops:163.62, batch-reuse:1
@ 1059 train 4.6463 , allloss: 4.6463, dt: 690.14ms, fracRes: 0.1757, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7684, norm(y): 0.9929, norm:0.4491, tok/sec: 189921.93, flops:166.34, batch-reuse:1
@ 1060 train 4.6868 , allloss: 4.6868, dt: 701.36ms, fracRes: 0.1767, norm(attn): 0.3613, norm(output): 0.6914, norm(x): 0.7703, norm(y): 0.9930, norm:0.4302, tok/sec: 186882.31, flops:163.68, batch-reuse:1
@ 1061 train 4.6704 , allloss: 4.6704, dt: 705.10ms, fracRes: 0.1745, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7712, norm(y): 0.9930, norm:0.4517, tok/sec: 185891.35, flops:162.81, batch-reuse:1
@ 1062 train 4.5521 , allloss: 4.5521, dt: 689.73ms, fracRes: 0.1739, norm(attn): 0.3516, norm(output): 0.6953, norm(x): 0.7764, norm(y): 0.9930, norm:0.4368, tok/sec: 190033.74, flops:166.44, batch-reuse:1
@ 1063 train 4.5431 , allloss: 4.5431, dt: 696.35ms, fracRes: 0.1742, norm(attn): 0.3594, norm(output): 0.7031, norm(x): 0.7799, norm(y): 0.9930, norm:0.4151, tok/sec: 188228.06, flops:164.86, batch-reuse:1
@ 1064 train 4.7095 , allloss: 4.7095, dt: 697.25ms, fracRes: 0.1763, norm(attn): 0.3672, norm(output): 0.6914, norm(x): 0.7753, norm(y): 0.9930, norm:0.4480, tok/sec: 187984.13, flops:164.65, batch-reuse:1
@ 1065 train 4.7327 , allloss: 4.7327, dt: 693.97ms, fracRes: 0.1791, norm(attn): 0.3613, norm(output): 0.6914, norm(x): 0.7731, norm(y): 0.9930, norm:0.5224, tok/sec: 188872.40, flops:165.42, batch-reuse:1
@ 1066 train 4.6502 , allloss: 4.6502, dt: 710.11ms, fracRes: 0.1783, norm(attn): 0.3633, norm(output): 0.6875, norm(x): 0.7721, norm(y): 0.9930, norm:0.4957, tok/sec: 184580.11, flops:161.67, batch-reuse:1
@ 1067 train 4.5226 , allloss: 4.5226, dt: 679.56ms, fracRes: 0.1791, norm(attn): 0.3594, norm(output): 0.6914, norm(x): 0.7779, norm(y): 0.9930, norm:0.4598, tok/sec: 192876.74, flops:168.93, batch-reuse:1
@ 1068 train 4.5996 , allloss: 4.5996, dt: 689.06ms, fracRes: 0.1768, norm(attn): 0.3691, norm(output): 0.6914, norm(x): 0.7751, norm(y): 0.9931, norm:0.4327, tok/sec: 190217.71, flops:166.60, batch-reuse:1
@ 1069 train 4.5372 , allloss: 4.5372, dt: 692.43ms, fracRes: 0.1802, norm(attn): 0.3633, norm(output): 0.6914, norm(x): 0.7769, norm(y): 0.9930, norm:0.4907, tok/sec: 189291.67, flops:165.79, batch-reuse:1
@ 1070 train 4.5618 , allloss: 4.5618, dt: 691.49ms, fracRes: 0.1769, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7703, norm(y): 0.9930, norm:0.4365, tok/sec: 189549.27, flops:166.02, batch-reuse:1
@ 1071 train 4.4421 , allloss: 4.4421, dt: 704.80ms, fracRes: 0.1770, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7691, norm(y): 0.9930, norm:0.4280, tok/sec: 185969.70, flops:162.88, batch-reuse:1
@ 1072 train 4.5706 , allloss: 4.5706, dt: 684.07ms, fracRes: 0.1757, norm(attn): 0.3574, norm(output): 0.6875, norm(x): 0.7681, norm(y): 0.9930, norm:0.4749, tok/sec: 191606.02, flops:167.82, batch-reuse:1
@ 1073 train 4.4776 , allloss: 4.4776, dt: 686.24ms, fracRes: 0.1750, norm(attn): 0.3633, norm(output): 0.6875, norm(x): 0.7724, norm(y): 0.9930, norm:0.4352, tok/sec: 191001.24, flops:167.29, batch-reuse:1
@ 1074 train 4.4662 , allloss: 4.4662, dt: 696.47ms, fracRes: 0.1739, norm(attn): 0.3672, norm(output): 0.6914, norm(x): 0.7731, norm(y): 0.9930, norm:0.4498, tok/sec: 188195.91, flops:164.83, batch-reuse:1
@ 1075 train 4.5491 , allloss: 4.5491, dt: 696.27ms, fracRes: 0.1724, norm(attn): 0.3652, norm(output): 0.6914, norm(x): 0.7698, norm(y): 0.9930, norm:0.4204, tok/sec: 188248.69, flops:164.88, batch-reuse:1
@ 1076 train 4.6192 , allloss: 4.6192, dt: 697.99ms, fracRes: 0.1707, norm(attn): 0.3613, norm(output): 0.6914, norm(x): 0.7700, norm(y): 0.9931, norm:0.4076, tok/sec: 187783.72, flops:164.47, batch-reuse:1
@ 1077 train 4.4537 , allloss: 4.4537, dt: 696.83ms, fracRes: 0.1741, norm(attn): 0.3594, norm(output): 0.6875, norm(x): 0.7683, norm(y): 0.9930, norm:0.4552, tok/sec: 188098.16, flops:164.75, batch-reuse:1
@ 1078 train 4.7689 , allloss: 4.7689, dt: 691.03ms, fracRes: 0.1781, norm(attn): 0.3594, norm(output): 0.6875, norm(x): 0.7693, norm(y): 0.9930, norm:0.7760, tok/sec: 189676.21, flops:166.13, batch-reuse:1
@ 1079 train 4.4858 , allloss: 4.4858, dt: 688.53ms, fracRes: 0.1715, norm(attn): 0.3633, norm(output): 0.6875, norm(x): 0.7610, norm(y): 0.9930, norm:0.8431, tok/sec: 190365.12, flops:166.73, batch-reuse:1
@ 1080 train 4.6061 , allloss: 4.6061, dt: 684.78ms, fracRes: 0.1756, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7750, norm(y): 0.9930, norm:0.6788, tok/sec: 191408.76, flops:167.65, batch-reuse:1
@ 1081 train 4.5881 , allloss: 4.5881, dt: 692.84ms, fracRes: 0.1792, norm(attn): 0.3652, norm(output): 0.7070, norm(x): 0.7796, norm(y): 0.9930, norm:0.5912, tok/sec: 189180.67, flops:165.69, batch-reuse:1
@ 1082 train 4.7298 , allloss: 4.7298, dt: 689.61ms, fracRes: 0.1775, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7820, norm(y): 0.9930, norm:0.6600, tok/sec: 190067.64, flops:166.47, batch-reuse:1
@ 1083 train 4.5432 , allloss: 4.5432, dt: 688.83ms, fracRes: 0.1790, norm(attn): 0.3691, norm(output): 0.7070, norm(x): 0.7852, norm(y): 0.9929, norm:0.5491, tok/sec: 190280.78, flops:166.66, batch-reuse:1
@ 1084 train 4.5070 , allloss: 4.5070, dt: 696.62ms, fracRes: 0.1803, norm(attn): 0.3633, norm(output): 0.6992, norm(x): 0.7832, norm(y): 0.9929, norm:0.4514, tok/sec: 188153.98, flops:164.80, batch-reuse:1
@ 1085 train 4.5169 , allloss: 4.5169, dt: 691.83ms, fracRes: 0.1838, norm(attn): 0.3594, norm(output): 0.6992, norm(x): 0.7876, norm(y): 0.9929, norm:0.6726, tok/sec: 189457.69, flops:165.94, batch-reuse:1
@ 1086 train 4.5809 , allloss: 4.5809, dt: 700.47ms, fracRes: 0.1765, norm(attn): 0.3535, norm(output): 0.6914, norm(x): 0.7738, norm(y): 0.9930, norm:0.5416, tok/sec: 187121.29, flops:163.89, batch-reuse:1
@ 1087 train 4.5508 , allloss: 4.5508, dt: 688.45ms, fracRes: 0.1800, norm(attn): 0.3516, norm(output): 0.6914, norm(x): 0.7766, norm(y): 0.9929, norm:0.5118, tok/sec: 190386.88, flops:166.75, batch-reuse:1
@ 1088 train 4.5962 , allloss: 4.5962, dt: 684.41ms, fracRes: 0.1783, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7786, norm(y): 0.9930, norm:0.4775, tok/sec: 191509.98, flops:167.74, batch-reuse:1
@ 1089 train 4.5054 , allloss: 4.5054, dt: 695.94ms, fracRes: 0.1833, norm(attn): 0.3555, norm(output): 0.6914, norm(x): 0.7824, norm(y): 0.9929, norm:0.5431, tok/sec: 188337.10, flops:164.96, batch-reuse:1
@ 1090 train 4.5003 , allloss: 4.5003, dt: 696.39ms, fracRes: 0.1784, norm(attn): 0.3574, norm(output): 0.6914, norm(x): 0.7775, norm(y): 0.9929, norm:0.4223, tok/sec: 188215.11, flops:164.85, batch-reuse:1
@ 1091 train 4.5837 , allloss: 4.5837, dt: 697.14ms, fracRes: 0.1762, norm(attn): 0.3594, norm(output): 0.6992, norm(x): 0.7776, norm(y): 0.9930, norm:0.4645, tok/sec: 188013.12, flops:164.67, batch-reuse:1
@ 1092 train 4.6574 , allloss: 4.6574, dt: 684.69ms, fracRes: 0.1749, norm(attn): 0.3633, norm(output): 0.7070, norm(x): 0.7774, norm(y): 0.9930, norm:0.5125, tok/sec: 191431.89, flops:167.67, batch-reuse:1
@ 1093 train 4.5488 , allloss: 4.5488, dt: 691.82ms, fracRes: 0.1759, norm(attn): 0.3691, norm(output): 0.6953, norm(x): 0.7757, norm(y): 0.9930, norm:0.4777, tok/sec: 189459.84, flops:165.94, batch-reuse:1
@ 1094 train 4.4950 , allloss: 4.4950, dt: 696.75ms, fracRes: 0.1793, norm(attn): 0.3730, norm(output): 0.6992, norm(x): 0.7818, norm(y): 0.9930, norm:0.4677, tok/sec: 188118.89, flops:164.76, batch-reuse:1
@ 1095 train 4.5086 , allloss: 4.5086, dt: 684.00ms, fracRes: 0.1783, norm(attn): 0.3750, norm(output): 0.7031, norm(x): 0.7834, norm(y): 0.9931, norm:0.4512, tok/sec: 191624.86, flops:167.84, batch-reuse:1
@ 1096 train 4.5540 , allloss: 4.5540, dt: 694.20ms, fracRes: 0.1801, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7861, norm(y): 0.9931, norm:0.4279, tok/sec: 188811.43, flops:165.37, batch-reuse:1
@ 1097 train 4.4596 , allloss: 4.4596, dt: 689.87ms, fracRes: 0.1810, norm(attn): 0.3730, norm(output): 0.7031, norm(x): 0.7864, norm(y): 0.9932, norm:0.3958, tok/sec: 189995.25, flops:166.41, batch-reuse:1
@ 1098 train 4.4608 , allloss: 4.4608, dt: 727.15ms, fracRes: 0.1803, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7847, norm(y): 0.9932, norm:0.3818, tok/sec: 180255.61, flops:157.88, batch-reuse:1
@ 1099 train 4.5124 , allloss: 4.5124, dt: 695.79ms, fracRes: 0.1791, norm(attn): 0.3770, norm(output): 0.7148, norm(x): 0.7886, norm(y): 0.9932, norm:0.3887, tok/sec: 188378.53, flops:164.99, batch-reuse:1
@ 1100 train 4.4742 , allloss: 4.4742, dt: 685.82ms, fracRes: 0.1800, norm(attn): 0.3750, norm(output): 0.7148, norm(x): 0.7899, norm(y): 0.9931, norm:0.4005, tok/sec: 191117.37, flops:167.39, batch-reuse:1
@ 1101 train 4.6115 , allloss: 4.6115, dt: 702.20ms, fracRes: 0.1812, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7857, norm(y): 0.9930, norm:0.4702, tok/sec: 186659.60, flops:163.49, batch-reuse:1
@ 1102 train 4.5455 , allloss: 4.5455, dt: 702.21ms, fracRes: 0.1813, norm(attn): 0.3750, norm(output): 0.7031, norm(x): 0.7877, norm(y): 0.9930, norm:0.4111, tok/sec: 186657.57, flops:163.49, batch-reuse:1
@ 1103 train 4.5994 , allloss: 4.5994, dt: 686.01ms, fracRes: 0.1834, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7887, norm(y): 0.9930, norm:0.4275, tok/sec: 191062.91, flops:167.34, batch-reuse:1
@ 1104 train 4.5574 , allloss: 4.5574, dt: 693.34ms, fracRes: 0.1849, norm(attn): 0.3691, norm(output): 0.6992, norm(x): 0.7900, norm(y): 0.9930, norm:0.5300, tok/sec: 189043.02, flops:165.57, batch-reuse:1
@ 1105 train 4.5209 , allloss: 4.5209, dt: 710.95ms, fracRes: 0.1825, norm(attn): 0.3652, norm(output): 0.6953, norm(x): 0.7800, norm(y): 0.9930, norm:0.4638, tok/sec: 184361.80, flops:161.47, batch-reuse:1
@ 1106 train 4.5602 , allloss: 4.5602, dt: 700.35ms, fracRes: 0.1802, norm(attn): 0.3691, norm(output): 0.6914, norm(x): 0.7748, norm(y): 0.9930, norm:0.5420, tok/sec: 187152.95, flops:163.92, batch-reuse:1
@ 1107 train 4.5863 , allloss: 4.5863, dt: 696.83ms, fracRes: 0.1787, norm(attn): 0.3711, norm(output): 0.6953, norm(x): 0.7780, norm(y): 0.9930, norm:0.6357, tok/sec: 188098.35, flops:164.75, batch-reuse:1
@ 1108 train 4.5110 , allloss: 4.5110, dt: 698.39ms, fracRes: 0.1818, norm(attn): 0.3691, norm(output): 0.6992, norm(x): 0.7805, norm(y): 0.9930, norm:0.5394, tok/sec: 187677.37, flops:164.38, batch-reuse:1
@ 1109 train 4.5287 , allloss: 4.5287, dt: 695.67ms, fracRes: 0.1801, norm(attn): 0.3730, norm(output): 0.6992, norm(x): 0.7830, norm(y): 0.9931, norm:0.5113, tok/sec: 188411.72, flops:165.02, batch-reuse:1
@ 1110 train 4.5432 , allloss: 4.5432, dt: 698.27ms, fracRes: 0.1751, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7842, norm(y): 0.9932, norm:0.4877, tok/sec: 187709.80, flops:164.41, batch-reuse:1
@ 1111 train 4.5346 , allloss: 4.5346, dt: 693.80ms, fracRes: 0.1776, norm(attn): 0.3711, norm(output): 0.7070, norm(x): 0.7862, norm(y): 0.9932, norm:0.4653, tok/sec: 188918.03, flops:165.46, batch-reuse:1
@ 1112 train 4.6315 , allloss: 4.6315, dt: 697.41ms, fracRes: 0.1811, norm(attn): 0.3633, norm(output): 0.7070, norm(x): 0.7869, norm(y): 0.9932, norm:0.4754, tok/sec: 187941.13, flops:164.61, batch-reuse:1
@ 1113 train 4.6711 , allloss: 4.6711, dt: 695.77ms, fracRes: 0.1864, norm(attn): 0.3652, norm(output): 0.7031, norm(x): 0.7874, norm(y): 0.9931, norm:0.4537, tok/sec: 188383.70, flops:165.00, batch-reuse:1
@ 1114 train 4.8607 , allloss: 4.8607, dt: 701.87ms, fracRes: 0.1842, norm(attn): 0.3711, norm(output): 0.7031, norm(x): 0.7874, norm(y): 0.9931, norm:0.6091, tok/sec: 186746.02, flops:163.56, batch-reuse:1
@ 1115 train 4.7529 , allloss: 4.7529, dt: 693.81ms, fracRes: 0.1834, norm(attn): 0.3652, norm(output): 0.6992, norm(x): 0.7888, norm(y): 0.9931, norm:0.7759, tok/sec: 188916.08, flops:165.46, batch-reuse:1
@ 1116 train 4.5974 , allloss: 4.5974, dt: 694.22ms, fracRes: 0.1799, norm(attn): 0.3672, norm(output): 0.6992, norm(x): 0.7829, norm(y): 0.9930, norm:0.6184, tok/sec: 188805.53, flops:165.37, batch-reuse:1
@ 1117 train 4.6433 , allloss: 4.6433, dt: 709.28ms, fracRes: 0.1815, norm(attn): 0.3730, norm(output): 0.7031, norm(x): 0.7817, norm(y): 0.9931, norm:0.5458, tok/sec: 184796.40, flops:161.85, batch-reuse:1
@ 1118 train 4.7194 , allloss: 4.7194, dt: 708.49ms, fracRes: 0.1785, norm(attn): 0.3770, norm(output): 0.7070, norm(x): 0.7857, norm(y): 0.9933, norm:0.5031, tok/sec: 185002.56, flops:162.04, batch-reuse:1
@ 1119 train 4.7590 , allloss: 4.7590, dt: 696.53ms, fracRes: 0.1772, norm(attn): 0.3789, norm(output): 0.7188, norm(x): 0.7874, norm(y): 0.9932, norm:0.5187, tok/sec: 188178.32, flops:164.82, batch-reuse:1
@ 1120 train 4.6978 , allloss: 4.6978, dt: 698.14ms, fracRes: 0.1828, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7886, norm(y): 0.9931, norm:0.4876, tok/sec: 187744.67, flops:164.44, batch-reuse:1
@ 1121 train 4.7165 , allloss: 4.7165, dt: 697.76ms, fracRes: 0.1857, norm(attn): 0.3711, norm(output): 0.7148, norm(x): 0.7959, norm(y): 0.9931, norm:0.4771, tok/sec: 187845.58, flops:164.53, batch-reuse:1
@ 1122 train 4.6932 , allloss: 4.6932, dt: 698.15ms, fracRes: 0.1871, norm(attn): 0.3672, norm(output): 0.7227, norm(x): 0.7981, norm(y): 0.9930, norm:0.4572, tok/sec: 187741.08, flops:164.43, batch-reuse:1
@ 1123 train 4.7326 , allloss: 4.7326, dt: 715.21ms, fracRes: 0.1866, norm(attn): 0.3691, norm(output): 0.7070, norm(x): 0.7931, norm(y): 0.9930, norm:0.4771, tok/sec: 183262.45, flops:160.51, batch-reuse:1
@ 1124 train 4.6833 , allloss: 4.6833, dt: 699.07ms, fracRes: 0.1864, norm(attn): 0.3633, norm(output): 0.6953, norm(x): 0.7890, norm(y): 0.9929, norm:0.5103, tok/sec: 187493.61, flops:164.22, batch-reuse:1
@ 1125 train 4.6607 , allloss: 4.6607, dt: 687.76ms, fracRes: 0.1890, norm(attn): 0.3594, norm(output): 0.6953, norm(x): 0.7895, norm(y): 0.9929, norm:0.4783, tok/sec: 190579.00, flops:166.92, batch-reuse:1
@ 1126 train 4.7314 , allloss: 4.7314, dt: 699.75ms, fracRes: 0.1857, norm(attn): 0.3672, norm(output): 0.7109, norm(x): 0.7912, norm(y): 0.9930, norm:0.4506, tok/sec: 187312.88, flops:164.06, batch-reuse:1
@ 1127 train 4.6789 , allloss: 4.6789, dt: 695.74ms, fracRes: 0.1812, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.7920, norm(y): 0.9932, norm:0.4928, tok/sec: 188391.12, flops:165.00, batch-reuse:1
@ 1128 train 4.6337 , allloss: 4.6337, dt: 705.75ms, fracRes: 0.1826, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.7973, norm(y): 0.9932, norm:0.4736, tok/sec: 185719.03, flops:162.66, batch-reuse:1
@ 1129 train 4.6676 , allloss: 4.6676, dt: 696.91ms, fracRes: 0.1821, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.7941, norm(y): 0.9931, norm:0.4492, tok/sec: 188074.74, flops:164.73, batch-reuse:1
@ 1130 train 4.6340 , allloss: 4.6340, dt: 704.09ms, fracRes: 0.1846, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7897, norm(y): 0.9931, norm:0.4608, tok/sec: 186158.93, flops:163.05, batch-reuse:1
@ 1131 train 4.6662 , allloss: 4.6662, dt: 706.56ms, fracRes: 0.1836, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7910, norm(y): 0.9931, norm:0.4206, tok/sec: 185507.40, flops:162.48, batch-reuse:1
@ 1132 train 4.6573 , allloss: 4.6573, dt: 729.25ms, fracRes: 0.1831, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7942, norm(y): 0.9931, norm:0.4432, tok/sec: 179735.41, flops:157.42, batch-reuse:1
@ 1133 train 4.6557 , allloss: 4.6557, dt: 700.55ms, fracRes: 0.1849, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7940, norm(y): 0.9932, norm:0.4440, tok/sec: 187097.67, flops:163.87, batch-reuse:1
@ 1134 train 4.6117 , allloss: 4.6117, dt: 698.68ms, fracRes: 0.1845, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7942, norm(y): 0.9932, norm:0.3978, tok/sec: 187600.20, flops:164.31, batch-reuse:1
@ 1135 train 4.6806 , allloss: 4.6806, dt: 689.25ms, fracRes: 0.1840, norm(attn): 0.3770, norm(output): 0.7188, norm(x): 0.7938, norm(y): 0.9933, norm:0.4219, tok/sec: 190165.20, flops:166.56, batch-reuse:1
@ 1136 train 4.6858 , allloss: 4.6858, dt: 690.57ms, fracRes: 0.1849, norm(attn): 0.3750, norm(output): 0.7188, norm(x): 0.7991, norm(y): 0.9932, norm:0.4409, tok/sec: 189802.59, flops:166.24, batch-reuse:1
@ 1137 train 4.6803 , allloss: 4.6803, dt: 691.84ms, fracRes: 0.1864, norm(attn): 0.3730, norm(output): 0.7148, norm(x): 0.8020, norm(y): 0.9931, norm:0.4078, tok/sec: 189453.57, flops:165.93, batch-reuse:1
@ 1138 train 4.8327 , allloss: 4.8327, dt: 693.50ms, fracRes: 0.1853, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.7998, norm(y): 0.9932, norm:0.4664, tok/sec: 189002.01, flops:165.54, batch-reuse:1
@ 1139 train 4.5986 , allloss: 4.5986, dt: 719.18ms, fracRes: 0.1880, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.7987, norm(y): 0.9931, norm:0.4652, tok/sec: 182252.53, flops:159.63, batch-reuse:1
@ 1140 train 4.6221 , allloss: 4.6221, dt: 703.52ms, fracRes: 0.1908, norm(attn): 0.3711, norm(output): 0.7148, norm(x): 0.7962, norm(y): 0.9931, norm:0.4187, tok/sec: 186308.26, flops:163.18, batch-reuse:1
@ 1141 train 4.5305 , allloss: 4.5305, dt: 702.24ms, fracRes: 0.1884, norm(attn): 0.3691, norm(output): 0.7070, norm(x): 0.7928, norm(y): 0.9931, norm:0.4570, tok/sec: 186648.51, flops:163.48, batch-reuse:1
@ 1142 train 4.5990 , allloss: 4.5990, dt: 700.26ms, fracRes: 0.1869, norm(attn): 0.3711, norm(output): 0.7070, norm(x): 0.7911, norm(y): 0.9931, norm:0.4305, tok/sec: 187177.36, flops:163.94, batch-reuse:1
@ 1143 train 4.6253 , allloss: 4.6253, dt: 702.38ms, fracRes: 0.1872, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7949, norm(y): 0.9932, norm:0.9580, tok/sec: 186612.52, flops:163.45, batch-reuse:1
@ 1144 train 4.6897 , allloss: 4.6897, dt: 700.78ms, fracRes: 0.1875, norm(attn): 0.3730, norm(output): 0.7148, norm(x): 0.7927, norm(y): 0.9931, norm:0.7162, tok/sec: 187037.64, flops:163.82, batch-reuse:1
@ 1145 train 4.7184 , allloss: 4.7184, dt: 695.30ms, fracRes: 0.1911, norm(attn): 0.3691, norm(output): 0.7109, norm(x): 0.7974, norm(y): 0.9930, norm:0.5918, tok/sec: 188512.05, flops:165.11, batch-reuse:1
@ 1146 train 4.6660 , allloss: 4.6660, dt: 701.12ms, fracRes: 0.1885, norm(attn): 0.3691, norm(output): 0.7109, norm(x): 0.7994, norm(y): 0.9931, norm:0.5767, tok/sec: 186946.37, flops:163.74, batch-reuse:1
@ 1147 train 4.6633 , allloss: 4.6633, dt: 702.64ms, fracRes: 0.1813, norm(attn): 0.3730, norm(output): 0.7188, norm(x): 0.7971, norm(y): 0.9933, norm:0.5170, tok/sec: 186542.61, flops:163.38, batch-reuse:1
@ 1148 train 4.6192 , allloss: 4.6192, dt: 703.07ms, fracRes: 0.1758, norm(attn): 0.3750, norm(output): 0.7227, norm(x): 0.7947, norm(y): 0.9934, norm:0.4525, tok/sec: 186427.99, flops:163.28, batch-reuse:1
@ 1149 train 4.6615 , allloss: 4.6615, dt: 698.53ms, fracRes: 0.1777, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.7978, norm(y): 0.9933, norm:0.4937, tok/sec: 187638.42, flops:164.34, batch-reuse:1
@ 1150 train 4.6940 , allloss: 4.6940, dt: 680.99ms, fracRes: 0.1798, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.7991, norm(y): 0.9932, norm:0.4600, tok/sec: 192472.59, flops:168.58, batch-reuse:1
@ 1151 train 4.7080 , allloss: 4.7080, dt: 696.36ms, fracRes: 0.1825, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8015, norm(y): 0.9930, norm:0.4940, tok/sec: 188225.42, flops:164.86, batch-reuse:1
@ 1152 train 4.5685 , allloss: 4.5685, dt: 701.01ms, fracRes: 0.1856, norm(attn): 0.3672, norm(output): 0.7188, norm(x): 0.8013, norm(y): 0.9930, norm:0.5136, tok/sec: 186977.02, flops:163.76, batch-reuse:1
@ 1153 train 4.5814 , allloss: 4.5814, dt: 698.91ms, fracRes: 0.1920, norm(attn): 0.3711, norm(output): 0.7109, norm(x): 0.7988, norm(y): 0.9930, norm:0.4890, tok/sec: 187538.51, flops:164.26, batch-reuse:1
@ 1154 train 4.6516 , allloss: 4.6516, dt: 692.30ms, fracRes: 0.1948, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.7986, norm(y): 0.9930, norm:0.4901, tok/sec: 189328.56, flops:165.82, batch-reuse:1
@ 1155 train 4.6052 , allloss: 4.6052, dt: 705.39ms, fracRes: 0.1945, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7964, norm(y): 0.9931, norm:0.4692, tok/sec: 185813.94, flops:162.75, batch-reuse:1
@ 1156 train 4.6014 , allloss: 4.6014, dt: 691.79ms, fracRes: 0.1901, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7966, norm(y): 0.9932, norm:0.4537, tok/sec: 189468.79, flops:165.95, batch-reuse:1
@ 1157 train 4.6045 , allloss: 4.6045, dt: 685.17ms, fracRes: 0.1904, norm(attn): 0.3750, norm(output): 0.7109, norm(x): 0.7974, norm(y): 0.9933, norm:0.4201, tok/sec: 191297.86, flops:167.55, batch-reuse:1
@ 1158 train 4.6184 , allloss: 4.6184, dt: 692.37ms, fracRes: 0.1858, norm(attn): 0.3750, norm(output): 0.7070, norm(x): 0.7955, norm(y): 0.9933, norm:0.4457, tok/sec: 189308.35, flops:165.81, batch-reuse:1
@ 1159 train 4.6485 , allloss: 4.6485, dt: 688.43ms, fracRes: 0.1864, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7968, norm(y): 0.9933, norm:0.5041, tok/sec: 190391.29, flops:166.76, batch-reuse:1
@ 1160 train 4.7180 , allloss: 4.7180, dt: 697.67ms, fracRes: 0.1842, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7957, norm(y): 0.9933, norm:0.5267, tok/sec: 187870.35, flops:164.55, batch-reuse:1
@ 1161 train 4.5452 , allloss: 4.5452, dt: 698.61ms, fracRes: 0.1851, norm(attn): 0.3711, norm(output): 0.7109, norm(x): 0.7941, norm(y): 0.9933, norm:0.5165, tok/sec: 187617.68, flops:164.33, batch-reuse:1
@ 1162 train 4.5146 , allloss: 4.5146, dt: 699.52ms, fracRes: 0.1855, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.7922, norm(y): 0.9934, norm:0.4562, tok/sec: 187373.34, flops:164.11, batch-reuse:1
@ 1163 train 4.6067 , allloss: 4.6067, dt: 700.90ms, fracRes: 0.1871, norm(attn): 0.3711, norm(output): 0.7070, norm(x): 0.7912, norm(y): 0.9933, norm:0.4057, tok/sec: 187005.64, flops:163.79, batch-reuse:1
@ 1164 train 4.6053 , allloss: 4.6053, dt: 692.06ms, fracRes: 0.1903, norm(attn): 0.3730, norm(output): 0.6992, norm(x): 0.7896, norm(y): 0.9931, norm:0.4850, tok/sec: 189393.46, flops:165.88, batch-reuse:1
@ 1165 train 4.5570 , allloss: 4.5570, dt: 696.25ms, fracRes: 0.1918, norm(attn): 0.3672, norm(output): 0.6992, norm(x): 0.7927, norm(y): 0.9931, norm:0.5285, tok/sec: 188255.33, flops:164.88, batch-reuse:1
@ 1166 train 4.6125 , allloss: 4.6125, dt: 702.33ms, fracRes: 0.1910, norm(attn): 0.3672, norm(output): 0.7109, norm(x): 0.7952, norm(y): 0.9931, norm:0.4637, tok/sec: 186624.24, flops:163.46, batch-reuse:1
@ 1167 train 4.5605 , allloss: 4.5605, dt: 685.57ms, fracRes: 0.1914, norm(attn): 0.3691, norm(output): 0.7109, norm(x): 0.7947, norm(y): 0.9931, norm:0.4144, tok/sec: 191186.36, flops:167.45, batch-reuse:1
@ 1168 train 4.4903 , allloss: 4.4903, dt: 703.00ms, fracRes: 0.1894, norm(attn): 0.3730, norm(output): 0.7031, norm(x): 0.7885, norm(y): 0.9931, norm:0.4559, tok/sec: 186446.45, flops:163.30, batch-reuse:1
@ 1169 train 4.5510 , allloss: 4.5510, dt: 702.41ms, fracRes: 0.1856, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.7928, norm(y): 0.9932, norm:0.4989, tok/sec: 186604.54, flops:163.44, batch-reuse:1
@ 1170 train 4.5530 , allloss: 4.5530, dt: 709.91ms, fracRes: 0.1861, norm(attn): 0.3691, norm(output): 0.7188, norm(x): 0.7933, norm(y): 0.9932, norm:0.4925, tok/sec: 184632.43, flops:161.71, batch-reuse:1
@ 1171 train 4.6116 , allloss: 4.6116, dt: 708.12ms, fracRes: 0.1865, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.7954, norm(y): 0.9933, norm:0.4655, tok/sec: 185098.17, flops:162.12, batch-reuse:1
@ 1172 train 4.6312 , allloss: 4.6312, dt: 705.85ms, fracRes: 0.1893, norm(attn): 0.3730, norm(output): 0.7188, norm(x): 0.7984, norm(y): 0.9933, norm:0.4816, tok/sec: 185694.69, flops:162.64, batch-reuse:1
@ 1173 train 4.5384 , allloss: 4.5384, dt: 706.27ms, fracRes: 0.1912, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7964, norm(y): 0.9933, norm:0.4671, tok/sec: 185582.73, flops:162.54, batch-reuse:1
@ 1174 train 4.5391 , allloss: 4.5391, dt: 696.85ms, fracRes: 0.1893, norm(attn): 0.3691, norm(output): 0.7031, norm(x): 0.7929, norm(y): 0.9932, norm:0.4437, tok/sec: 188093.34, flops:164.74, batch-reuse:1
@ 1175 train 4.6283 , allloss: 4.6283, dt: 693.89ms, fracRes: 0.1891, norm(attn): 0.3691, norm(output): 0.7070, norm(x): 0.7944, norm(y): 0.9932, norm:0.4458, tok/sec: 188894.60, flops:165.44, batch-reuse:1
@ 1176 train 4.5183 , allloss: 4.5183, dt: 696.67ms, fracRes: 0.1875, norm(attn): 0.3672, norm(output): 0.7070, norm(x): 0.7906, norm(y): 0.9932, norm:0.4675, tok/sec: 188140.00, flops:164.78, batch-reuse:1
@ 1177 train 4.5652 , allloss: 4.5652, dt: 681.48ms, fracRes: 0.1891, norm(attn): 0.3672, norm(output): 0.7070, norm(x): 0.7921, norm(y): 0.9932, norm:0.4596, tok/sec: 192333.27, flops:168.46, batch-reuse:1
@ 1178 train 4.7373 , allloss: 4.7373, dt: 691.22ms, fracRes: 0.1900, norm(attn): 0.3691, norm(output): 0.7070, norm(x): 0.7940, norm(y): 0.9932, norm:0.4189, tok/sec: 189624.98, flops:166.08, batch-reuse:1
@ 1179 train 4.6000 , allloss: 4.6000, dt: 687.13ms, fracRes: 0.1900, norm(attn): 0.3711, norm(output): 0.7031, norm(x): 0.7930, norm(y): 0.9931, norm:0.5020, tok/sec: 190751.52, flops:167.07, batch-reuse:1
@ 1180 train 4.5905 , allloss: 4.5905, dt: 703.69ms, fracRes: 0.1905, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7929, norm(y): 0.9932, norm:0.5301, tok/sec: 186264.71, flops:163.14, batch-reuse:1
@ 1181 train 4.5595 , allloss: 4.5595, dt: 692.14ms, fracRes: 0.1913, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.7946, norm(y): 0.9933, norm:0.4814, tok/sec: 189372.72, flops:165.86, batch-reuse:1
@ 1182 train 4.5611 , allloss: 4.5611, dt: 697.19ms, fracRes: 0.1895, norm(attn): 0.3770, norm(output): 0.7109, norm(x): 0.7979, norm(y): 0.9934, norm:0.6567, tok/sec: 187999.42, flops:164.66, batch-reuse:1
@ 1183 train 4.6055 , allloss: 4.6055, dt: 695.72ms, fracRes: 0.1900, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7930, norm(y): 0.9934, norm:0.6745, tok/sec: 188396.55, flops:165.01, batch-reuse:1
@ 1184 train 4.6200 , allloss: 4.6200, dt: 689.28ms, fracRes: 0.1907, norm(attn): 0.3711, norm(output): 0.7148, norm(x): 0.8013, norm(y): 0.9933, norm:0.6059, tok/sec: 190159.09, flops:166.55, batch-reuse:1
@ 1185 train 4.5582 , allloss: 4.5582, dt: 683.95ms, fracRes: 0.1932, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8078, norm(y): 0.9934, norm:0.5056, tok/sec: 191640.42, flops:167.85, batch-reuse:1
@ 1186 train 4.5965 , allloss: 4.5965, dt: 694.30ms, fracRes: 0.1905, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8092, norm(y): 0.9934, norm:0.5041, tok/sec: 188782.64, flops:165.35, batch-reuse:1
@ 1187 train 4.5889 , allloss: 4.5889, dt: 701.01ms, fracRes: 0.1892, norm(attn): 0.3691, norm(output): 0.7227, norm(x): 0.8051, norm(y): 0.9934, norm:0.4497, tok/sec: 186977.08, flops:163.76, batch-reuse:1
@ 1188 train 4.4927 , allloss: 4.4927, dt: 699.57ms, fracRes: 0.1915, norm(attn): 0.3652, norm(output): 0.7109, norm(x): 0.7977, norm(y): 0.9933, norm:0.4479, tok/sec: 187359.67, flops:164.10, batch-reuse:1
@ 1189 train 4.5357 , allloss: 4.5357, dt: 695.12ms, fracRes: 0.1933, norm(attn): 0.3672, norm(output): 0.7070, norm(x): 0.7966, norm(y): 0.9933, norm:0.4500, tok/sec: 188561.13, flops:165.15, batch-reuse:1
@ 1190 train 4.5539 , allloss: 4.5539, dt: 707.60ms, fracRes: 0.1957, norm(attn): 0.3691, norm(output): 0.7188, norm(x): 0.8064, norm(y): 0.9933, norm:0.5549, tok/sec: 185234.38, flops:162.24, batch-reuse:1
@ 1191 train 4.6698 , allloss: 4.6698, dt: 703.32ms, fracRes: 0.1928, norm(attn): 0.3711, norm(output): 0.7188, norm(x): 0.8029, norm(y): 0.9933, norm:0.4595, tok/sec: 186362.07, flops:163.23, batch-reuse:1
@ 1192 train 4.5619 , allloss: 4.5619, dt: 709.86ms, fracRes: 0.1910, norm(attn): 0.3652, norm(output): 0.7188, norm(x): 0.7992, norm(y): 0.9932, norm:0.4434, tok/sec: 184646.08, flops:161.72, batch-reuse:1
@ 1193 train 4.5765 , allloss: 4.5765, dt: 707.64ms, fracRes: 0.1914, norm(attn): 0.3691, norm(output): 0.7109, norm(x): 0.7983, norm(y): 0.9932, norm:0.4192, tok/sec: 185225.20, flops:162.23, batch-reuse:1
@ 1194 train 4.5857 , allloss: 4.5857, dt: 707.43ms, fracRes: 0.1923, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.8000, norm(y): 0.9933, norm:0.4602, tok/sec: 185280.26, flops:162.28, batch-reuse:1
@ 1195 train 4.5595 , allloss: 4.5595, dt: 697.61ms, fracRes: 0.1914, norm(attn): 0.3750, norm(output): 0.7188, norm(x): 0.8011, norm(y): 0.9932, norm:0.4327, tok/sec: 187886.60, flops:164.56, batch-reuse:1
@ 1196 train 4.5006 , allloss: 4.5006, dt: 687.41ms, fracRes: 0.1881, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8031, norm(y): 0.9933, norm:0.4338, tok/sec: 190676.50, flops:167.01, batch-reuse:1
@ 1197 train 4.4737 , allloss: 4.4737, dt: 696.73ms, fracRes: 0.1907, norm(attn): 0.3750, norm(output): 0.7227, norm(x): 0.8043, norm(y): 0.9933, norm:0.4307, tok/sec: 188125.45, flops:164.77, batch-reuse:1
@ 1198 train 4.5136 , allloss: 4.5136, dt: 682.27ms, fracRes: 0.1932, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8024, norm(y): 0.9933, norm:0.4073, tok/sec: 192111.95, flops:168.26, batch-reuse:1
@ 1199 train 4.5817 , allloss: 4.5817, dt: 693.89ms, fracRes: 0.1927, norm(attn): 0.3730, norm(output): 0.7227, norm(x): 0.8031, norm(y): 0.9933, norm:0.4525, tok/sec: 188894.21, flops:165.44, batch-reuse:1
@ 1200 train 4.4844 , allloss: 4.4844, dt: 698.79ms, fracRes: 0.1904, norm(attn): 0.3750, norm(output): 0.7109, norm(x): 0.7994, norm(y): 0.9933, norm:0.4693, tok/sec: 187570.11, flops:164.28, batch-reuse:1
@ 1201 train 4.5252 , allloss: 4.5252, dt: 691.95ms, fracRes: 0.1888, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.7964, norm(y): 0.9933, norm:0.5265, tok/sec: 189424.26, flops:165.91, batch-reuse:1
@ 1202 train 4.5616 , allloss: 4.5616, dt: 684.28ms, fracRes: 0.1896, norm(attn): 0.3691, norm(output): 0.7109, norm(x): 0.7980, norm(y): 0.9933, norm:0.4507, tok/sec: 191547.34, flops:167.77, batch-reuse:1
@ 1203 train 4.9890 , allloss: 4.9890, dt: 698.48ms, fracRes: 0.1906, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8046, norm(y): 0.9935, norm:0.7436, tok/sec: 187653.03, flops:164.36, batch-reuse:1
@ 1204 train 4.5198 , allloss: 4.5198, dt: 702.42ms, fracRes: 0.1957, norm(attn): 0.3711, norm(output): 0.7227, norm(x): 0.8040, norm(y): 0.9934, norm:0.5254, tok/sec: 186601.43, flops:163.44, batch-reuse:1
@ 1205 train 4.4850 , allloss: 4.4850, dt: 689.95ms, fracRes: 0.1960, norm(attn): 0.3711, norm(output): 0.7266, norm(x): 0.8058, norm(y): 0.9933, norm:0.5080, tok/sec: 189974.50, flops:166.39, batch-reuse:1
@ 1206 train 4.4980 , allloss: 4.4980, dt: 702.54ms, fracRes: 0.1901, norm(attn): 0.3730, norm(output): 0.7188, norm(x): 0.8018, norm(y): 0.9934, norm:0.5079, tok/sec: 186567.49, flops:163.41, batch-reuse:1
@ 1207 train 4.4821 , allloss: 4.4821, dt: 694.37ms, fracRes: 0.1878, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8012, norm(y): 0.9935, norm:0.5438, tok/sec: 188763.26, flops:165.33, batch-reuse:1
@ 1208 train 4.4699 , allloss: 4.4699, dt: 682.51ms, fracRes: 0.1875, norm(attn): 0.3730, norm(output): 0.7148, norm(x): 0.8000, norm(y): 0.9934, norm:0.4824, tok/sec: 192043.43, flops:168.20, batch-reuse:1
@ 1209 train 4.6139 , allloss: 4.6139, dt: 692.34ms, fracRes: 0.1904, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8048, norm(y): 0.9934, norm:0.4887, tok/sec: 189316.44, flops:165.81, batch-reuse:1
@ 1210 train 4.4332 , allloss: 4.4332, dt: 698.17ms, fracRes: 0.1922, norm(attn): 0.3730, norm(output): 0.7188, norm(x): 0.8042, norm(y): 0.9935, norm:0.4980, tok/sec: 187736.85, flops:164.43, batch-reuse:1
@ 1211 train 4.5339 , allloss: 4.5339, dt: 690.72ms, fracRes: 0.1910, norm(attn): 0.3770, norm(output): 0.7227, norm(x): 0.8039, norm(y): 0.9935, norm:0.4415, tok/sec: 189761.45, flops:166.20, batch-reuse:1
@ 1212 train 4.6205 , allloss: 4.6205, dt: 702.30ms, fracRes: 0.1944, norm(attn): 0.3750, norm(output): 0.7188, norm(x): 0.8032, norm(y): 0.9934, norm:0.4563, tok/sec: 186633.04, flops:163.46, batch-reuse:1
@ 1213 train 4.4156 , allloss: 4.4156, dt: 697.59ms, fracRes: 0.1949, norm(attn): 0.3750, norm(output): 0.7109, norm(x): 0.8018, norm(y): 0.9933, norm:0.4139, tok/sec: 187893.02, flops:164.57, batch-reuse:1
@ 1214 train 4.4792 , allloss: 4.4792, dt: 698.52ms, fracRes: 0.1950, norm(attn): 0.3750, norm(output): 0.7227, norm(x): 0.8024, norm(y): 0.9933, norm:0.4362, tok/sec: 187642.52, flops:164.35, batch-reuse:1
@ 1215 train 4.5598 , allloss: 4.5598, dt: 697.56ms, fracRes: 0.1942, norm(attn): 0.3750, norm(output): 0.7188, norm(x): 0.8007, norm(y): 0.9933, norm:0.4242, tok/sec: 187899.57, flops:164.57, batch-reuse:1
@ 1216 train 4.4765 , allloss: 4.4765, dt: 692.88ms, fracRes: 0.1936, norm(attn): 0.3750, norm(output): 0.7148, norm(x): 0.7983, norm(y): 0.9934, norm:0.4100, tok/sec: 189169.21, flops:165.68, batch-reuse:1
@ 1217 train 4.5173 , allloss: 4.5173, dt: 702.39ms, fracRes: 0.1907, norm(attn): 0.3750, norm(output): 0.7109, norm(x): 0.7950, norm(y): 0.9935, norm:0.4097, tok/sec: 186607.70, flops:163.44, batch-reuse:1
@ 1218 train 4.3487 , allloss: 4.3487, dt: 704.02ms, fracRes: 0.1893, norm(attn): 0.3730, norm(output): 0.7188, norm(x): 0.7991, norm(y): 0.9934, norm:0.6111, tok/sec: 186175.83, flops:163.06, batch-reuse:1
@ 1219 train 4.4297 , allloss: 4.4297, dt: 699.79ms, fracRes: 0.1959, norm(attn): 0.3672, norm(output): 0.7266, norm(x): 0.8018, norm(y): 0.9933, norm:0.3970, tok/sec: 187300.69, flops:164.05, batch-reuse:1
@ 1220 train 4.5241 , allloss: 4.5241, dt: 711.32ms, fracRes: 0.1949, norm(attn): 0.3672, norm(output): 0.7266, norm(x): 0.8040, norm(y): 0.9934, norm:0.4438, tok/sec: 184265.15, flops:161.39, batch-reuse:1
@ 1221 train 4.5020 , allloss: 4.5020, dt: 711.91ms, fracRes: 0.1965, norm(attn): 0.3652, norm(output): 0.7266, norm(x): 0.8043, norm(y): 0.9933, norm:0.4774, tok/sec: 184113.16, flops:161.26, batch-reuse:1
@ 1222 train 4.4577 , allloss: 4.4577, dt: 695.15ms, fracRes: 0.1951, norm(attn): 0.3652, norm(output): 0.7266, norm(x): 0.8073, norm(y): 0.9934, norm:0.4330, tok/sec: 188550.91, flops:165.14, batch-reuse:1
@ 1223 train 4.4253 , allloss: 4.4253, dt: 689.17ms, fracRes: 0.1968, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8096, norm(y): 0.9934, norm:0.4722, tok/sec: 190187.97, flops:166.58, batch-reuse:1
@ 1224 train 4.4058 , allloss: 4.4058, dt: 704.83ms, fracRes: 0.1956, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.7997, norm(y): 0.9934, norm:0.4375, tok/sec: 185963.47, flops:162.88, batch-reuse:1
@ 1225 train 4.4283 , allloss: 4.4283, dt: 699.78ms, fracRes: 0.1941, norm(attn): 0.3691, norm(output): 0.7266, norm(x): 0.8001, norm(y): 0.9934, norm:0.4564, tok/sec: 187304.20, flops:164.05, batch-reuse:1
@ 1226 train 4.5217 , allloss: 4.5217, dt: 704.08ms, fracRes: 0.1904, norm(attn): 0.3633, norm(output): 0.7266, norm(x): 0.7978, norm(y): 0.9935, norm:0.3781, tok/sec: 186159.88, flops:163.05, batch-reuse:1
@ 1227 train 4.4100 , allloss: 4.4100, dt: 702.83ms, fracRes: 0.1944, norm(attn): 0.3691, norm(output): 0.7266, norm(x): 0.8013, norm(y): 0.9935, norm:0.4069, tok/sec: 186491.42, flops:163.34, batch-reuse:1
@ 1228 train 4.4198 , allloss: 4.4198, dt: 707.77ms, fracRes: 0.1959, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8032, norm(y): 0.9935, norm:0.4224, tok/sec: 185191.14, flops:162.20, batch-reuse:1
@ 1229 train 4.4511 , allloss: 4.4511, dt: 703.87ms, fracRes: 0.1971, norm(attn): 0.3730, norm(output): 0.7227, norm(x): 0.8021, norm(y): 0.9935, norm:0.4161, tok/sec: 186216.69, flops:163.10, batch-reuse:1
@ 1230 train 4.5248 , allloss: 4.5248, dt: 692.68ms, fracRes: 0.1950, norm(attn): 0.3691, norm(output): 0.7148, norm(x): 0.8010, norm(y): 0.9935, norm:0.4457, tok/sec: 189223.52, flops:165.73, batch-reuse:1
@ 1231 train 4.4200 , allloss: 4.4200, dt: 705.34ms, fracRes: 0.1931, norm(attn): 0.3730, norm(output): 0.7227, norm(x): 0.8024, norm(y): 0.9936, norm:0.4269, tok/sec: 185828.95, flops:162.76, batch-reuse:1
@ 1232 train 4.4154 , allloss: 4.4154, dt: 696.17ms, fracRes: 0.1940, norm(attn): 0.3730, norm(output): 0.7188, norm(x): 0.8044, norm(y): 0.9936, norm:0.4206, tok/sec: 188276.47, flops:164.90, batch-reuse:1
@ 1233 train 4.4669 , allloss: 4.4669, dt: 704.01ms, fracRes: 0.1969, norm(attn): 0.3711, norm(output): 0.7148, norm(x): 0.8047, norm(y): 0.9935, norm:0.4059, tok/sec: 186179.04, flops:163.07, batch-reuse:1
@ 1234 train 4.4855 , allloss: 4.4855, dt: 708.97ms, fracRes: 0.1964, norm(attn): 0.3691, norm(output): 0.7188, norm(x): 0.8076, norm(y): 0.9935, norm:0.4459, tok/sec: 184876.32, flops:161.92, batch-reuse:1
@ 1235 train 4.5220 , allloss: 4.5220, dt: 710.45ms, fracRes: 0.1944, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8064, norm(y): 0.9934, norm:0.4862, tok/sec: 184490.79, flops:161.59, batch-reuse:1
@ 1236 train 4.4152 , allloss: 4.4152, dt: 709.98ms, fracRes: 0.1983, norm(attn): 0.3750, norm(output): 0.7188, norm(x): 0.8028, norm(y): 0.9934, norm:0.4916, tok/sec: 184614.83, flops:161.70, batch-reuse:1
@ 1237 train 4.5015 , allloss: 4.5015, dt: 707.10ms, fracRes: 0.1965, norm(attn): 0.3750, norm(output): 0.7109, norm(x): 0.8000, norm(y): 0.9935, norm:0.4960, tok/sec: 185364.66, flops:162.35, batch-reuse:1
@ 1238 train 4.4446 , allloss: 4.4446, dt: 709.48ms, fracRes: 0.1970, norm(attn): 0.3750, norm(output): 0.7109, norm(x): 0.8002, norm(y): 0.9935, norm:0.4419, tok/sec: 184743.18, flops:161.81, batch-reuse:1
@ 1239 train 4.3558 , allloss: 4.3558, dt: 711.26ms, fracRes: 0.1974, norm(attn): 0.3750, norm(output): 0.7188, norm(x): 0.8010, norm(y): 0.9935, norm:0.4887, tok/sec: 184280.22, flops:161.40, batch-reuse:1
@ 1240 train 4.3951 , allloss: 4.3951, dt: 705.29ms, fracRes: 0.1971, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8054, norm(y): 0.9935, norm:0.4703, tok/sec: 185840.07, flops:162.77, batch-reuse:1
@ 1241 train 4.3823 , allloss: 4.3823, dt: 691.26ms, fracRes: 0.1956, norm(attn): 0.3770, norm(output): 0.7188, norm(x): 0.8074, norm(y): 0.9936, norm:0.4376, tok/sec: 189614.52, flops:166.07, batch-reuse:1
@ 1242 train 4.4728 , allloss: 4.4728, dt: 695.70ms, fracRes: 0.1948, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8050, norm(y): 0.9935, norm:0.4336, tok/sec: 188401.90, flops:165.01, batch-reuse:1
@ 1243 train 4.4584 , allloss: 4.4584, dt: 699.95ms, fracRes: 0.1931, norm(attn): 0.3750, norm(output): 0.7188, norm(x): 0.7997, norm(y): 0.9936, norm:0.4615, tok/sec: 187259.29, flops:164.01, batch-reuse:1
@ 1244 train 4.4605 , allloss: 4.4605, dt: 697.95ms, fracRes: 0.1972, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.8007, norm(y): 0.9935, norm:0.4204, tok/sec: 187795.85, flops:164.48, batch-reuse:1
@ 1245 train 4.4829 , allloss: 4.4829, dt: 697.58ms, fracRes: 0.1996, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7974, norm(y): 0.9934, norm:0.4342, tok/sec: 187895.40, flops:164.57, batch-reuse:1
@ 1246 train 4.4382 , allloss: 4.4382, dt: 688.79ms, fracRes: 0.1983, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8019, norm(y): 0.9934, norm:0.4242, tok/sec: 190292.97, flops:166.67, batch-reuse:1
@ 1247 train 4.3456 , allloss: 4.3456, dt: 696.13ms, fracRes: 0.1989, norm(attn): 0.3711, norm(output): 0.7266, norm(x): 0.8038, norm(y): 0.9934, norm:0.4406, tok/sec: 188287.82, flops:164.91, batch-reuse:1
@ 1248 train 4.4902 , allloss: 4.4902, dt: 699.35ms, fracRes: 0.1954, norm(attn): 0.3691, norm(output): 0.7188, norm(x): 0.8045, norm(y): 0.9935, norm:0.3995, tok/sec: 187420.29, flops:164.15, batch-reuse:1
@ 1249 train 4.3754 , allloss: 4.3754, dt: 700.70ms, fracRes: 0.1974, norm(attn): 0.3711, norm(output): 0.7227, norm(x): 0.8034, norm(y): 0.9935, norm:0.4162, tok/sec: 187059.34, flops:163.84, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0090, 0.9922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0029, 0.5469, 0.4512, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0250, 0.3730, 0.3164, 0.2852, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0242, 0.4883, 0.2715, 0.1797, 0.0371, 0.0000, 0.0000, 0.0000],
        [0.0393, 0.2910, 0.4746, 0.1455, 0.0167, 0.0325, 0.0000, 0.0000],
        [0.0219, 0.1895, 0.3242, 0.1680, 0.0669, 0.1157, 0.1133, 0.0000],
        [0.0107, 0.1650, 0.2031, 0.1108, 0.1035, 0.1855, 0.1338, 0.0869]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0059,     -0.3926,     -0.4023,     -0.4336,     -0.5430,     -0.5039,     -0.3652,     -0.2617],
        [    -0.0135,      4.6875,      3.1719,      2.2344,      2.6094,      3.0469,      1.8047,      1.6562],
        [    -0.0559,      5.1562,      4.9688,      5.6875,      5.4062,      5.0625,      4.0938,      4.2500],
        [    -0.0325,      2.6719,      2.5000,      2.4062,      2.0781,      3.0781,      1.5938,      1.8828],
        [    -0.0015,      3.0000,      2.4219,      2.0000,      0.4297,      1.2891,      0.7773,      1.3125],
        [    -0.0026,      2.0000,      2.4844,      1.3047,     -0.8633,     -0.1982,      0.6055,      1.5000],
        [    -0.0286,      2.1250,      2.6719,      2.0156,      1.0859,      1.6328,      1.6172,      1.8516],
        [    -0.0332,      2.7031,      2.9219,      2.3125,      2.2344,      2.8281,      2.5000,      2.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7546],
        [0.2318],
        [0.1867],
        [0.3375],
        [0.3091],
        [0.1538],
        [0.1816],
        [0.2138],
        [0.1468],
        [0.2369],
        [0.1205],
        [0.0811],
        [0.1877],
        [0.0713]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0165,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0026,     0.0035,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0005,     0.0620,     0.0005,     0.0016,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0018,     0.0128,     0.0009,     0.0007,     0.0109,     0.0000,     0.0000],
        [    0.9805,     0.0014,     0.0162,     0.0001,     0.0001,     0.0006,     0.0006,     0.0000],
        [    0.9805,     0.0029,     0.0100,     0.0003,     0.0001,     0.0008,     0.0001,     0.0066]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0008,     -0.0835,     -0.0349,     -0.0757,     -0.1523,     -0.0923,     -0.1299,     -0.0747],
        [     0.0280,     -6.6562,     -2.2031,     -7.8125,     -7.4688,     -7.4062,     -7.8125,     -7.1875],
        [    -0.0238,     -4.1250,     -7.7812,     -2.2500,     -9.2500,     -9.8750,     -8.5625,     -7.4062],
        [    -0.0197,     -5.9688,     -5.6562,     -5.5000,     -7.4688,     -9.1250,     -6.3125,     -4.0312],
        [    -0.0410,     -7.5000,     -2.7500,     -7.5938,     -6.3750,     -3.8125,     -6.9688,     -4.8438],
        [     0.0066,     -6.2812,     -4.3125,     -6.9375,     -7.2188,     -4.4688,     -4.0938,     -3.5469],
        [    -0.0491,     -6.5938,     -4.1562,     -8.8750,     -9.5000,     -7.5000,     -7.5000,     -5.2812],
        [    -0.0815,     -5.9062,     -4.6562,     -8.2500,     -9.9375,     -7.2188,     -9.5000,     -5.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6347],
        [0.6140],
        [0.6346],
        [0.6862],
        [0.7300],
        [0.5620],
        [0.5857],
        [0.5715],
        [0.5669],
        [0.4922],
        [0.5867],
        [0.5924],
        [0.5321],
        [0.4932]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0109,     0.8242,     0.1650,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.8047,     0.1436,     0.0515,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0034,     0.6094,     0.0962,     0.0471,     0.2451,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.3945,     0.0732,     0.0352,     0.2178,     0.2773,     0.0000,     0.0000],
        [    0.0020,     0.3398,     0.0649,     0.0311,     0.1738,     0.2383,     0.1504,     0.0000],
        [    0.0006,     0.3418,     0.0425,     0.0178,     0.1670,     0.1924,     0.1387,     0.1001]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0090,     -0.1025,     -0.1416,     -0.1367,     -0.0771,     -0.1226,     -0.1074,     -0.1680],
        [    -0.0334,      6.2188,      4.5938,      3.6562,      5.7188,      5.9688,      5.6562,      5.4062],
        [     0.0141,      4.3438,      2.7344,      2.0625,      4.1875,      4.0938,      3.7344,      3.2500],
        [    -0.0605,      6.8438,      5.1250,      4.0938,      5.8750,      6.4688,      6.0000,      5.9375],
        [     0.0184,      5.2188,      3.3594,      2.6562,      4.3125,      4.8125,      4.4062,      3.9219],
        [    -0.0337,      5.3750,      3.6875,      2.9531,      4.7812,      5.0312,      4.8438,      4.3750],
        [    -0.0044,      5.1250,      3.4688,      2.7344,      4.4688,      4.7812,      4.3125,      3.9375],
        [    -0.0200,      6.3438,      4.2500,      3.3750,      5.6250,      5.7500,      5.4375,      5.0938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8084],
        [0.6575],
        [0.6219],
        [0.6286],
        [0.5775],
        [0.5013],
        [0.4691],
        [0.4697],
        [0.4572],
        [0.4546],
        [0.4183],
        [0.4230],
        [0.4203],
        [0.4226]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0859, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1230, 0.3301, 0.5469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0908, 0.4219, 0.4102, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.0698, 0.3691, 0.3008, 0.0413, 0.0000, 0.0000, 0.0000],
        [0.0312, 0.0306, 0.2412, 0.3281, 0.1865, 0.1826, 0.0000, 0.0000],
        [0.0112, 0.0226, 0.1943, 0.4668, 0.0645, 0.1914, 0.0493, 0.0000],
        [0.0074, 0.0240, 0.0854, 0.2891, 0.0282, 0.1250, 0.0669, 0.3730]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0030,     -0.2832,     -0.2295,     -0.3340,     -0.3145,     -0.2832,     -0.3848,     -0.3848],
        [    -0.0850,     -2.4531,      1.3047,      0.7031,      0.4336,      1.4531,      0.2344,      2.3906],
        [    -0.1060,      0.8789,      1.3906,      2.7812,      1.3906,      2.8906,      2.2344,      4.7812],
        [    -0.0986,      0.0649,      1.6016,      1.5781,      0.3477,      2.3125,      1.4375,      3.2500],
        [    -0.1279,     -1.2734,      0.3965,      0.1885,     -1.7969,      1.4375,     -0.3945,      2.0469],
        [    -0.1367,     -0.1582,      1.9062,      2.2188,      1.6484,      1.6250,      0.8047,      4.4375],
        [    -0.1484,      0.5547,      2.7031,      3.5781,      1.6016,      2.6875,      1.3359,      5.2812],
        [    -0.1309,      1.0469,      2.3125,      3.5312,      1.2031,      2.7031,      2.0625,      3.7812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6771],
        [0.3551],
        [0.3523],
        [0.3302],
        [0.2855],
        [0.2451],
        [0.2063],
        [0.1721],
        [0.1714],
        [0.1944],
        [0.1834],
        [0.1653],
        [0.1569],
        [0.1682]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8086,     0.1904,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.8945,     0.1016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0977,     0.6016,     0.1543,     0.1465,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0032,     0.0007,     0.0008,     0.9961,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0005,     0.0000,     0.0000,     0.7852,     0.2119,     0.0000,     0.0000],
        [    0.0288,     0.0034,     0.0001,     0.0002,     0.0583,     0.6875,     0.2227,     0.0000],
        [    0.0025,     0.0009,     0.0000,     0.0000,     0.0014,     0.0171,     0.3027,     0.6758]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0850,     -0.2070,     -0.2051,     -0.0708,     -0.0840,     -0.1089,     -0.1973],
        [    -0.0050,     -1.4531,     -8.3125,     -8.8750,     -1.2969,     -2.5156,     -2.4531,     -5.8438],
        [    -0.0294,      5.9062,      3.7188,      2.6562,      0.9336,     -0.8945,      2.5625,     -0.6992],
        [    -0.0518,      1.7656,      0.4062,      0.3496,      2.3906,      2.1562,      3.4844,     -0.0996],
        [    -0.0123,      1.9375,      0.3965,      0.5117,      7.6562,      5.4062,      2.0938,      1.1406],
        [    -0.0244,     -1.0312,     -4.8750,     -4.0312,      6.4062,      5.0938,     -0.0659,     -0.8398],
        [    -0.0540,     -2.2031,     -5.7188,     -5.0312,      0.6523,      3.1094,      1.9922,      1.4219],
        [    -0.0659,     -1.0547,     -6.7500,     -6.8125,     -0.6211,      1.8750,      4.7500,      5.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8074],
        [0.4422],
        [0.4783],
        [0.4674],
        [0.4494],
        [0.3896],
        [0.3740],
        [0.3362],
        [0.3477],
        [0.3546],
        [0.3397],
        [0.3253],
        [0.2826],
        [0.3110]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0064,     -0.5469,     -0.7344,     -0.5977,     -0.6797,     -0.5312,     -0.6797,     -0.5898],
        [    -0.2852,    -24.8750,    -33.0000,    -27.0000,    -30.2500,    -24.1250,    -29.3750,    -26.0000],
        [    -0.2168,    -20.0000,    -26.1250,    -22.2500,    -25.0000,    -19.2500,    -24.1250,    -21.5000],
        [    -0.2598,    -23.2500,    -32.0000,    -26.8750,    -30.2500,    -23.1250,    -30.0000,    -26.5000],
        [    -0.3477,    -30.2500,    -41.7500,    -34.2500,    -39.5000,    -29.8750,    -39.0000,    -34.0000],
        [    -0.3438,    -31.2500,    -42.2500,    -34.5000,    -38.2500,    -30.2500,    -38.0000,    -33.5000],
        [    -0.3770,    -33.2500,    -45.0000,    -37.2500,    -41.7500,    -31.8750,    -40.7500,    -35.7500],
        [    -0.2773,    -25.2500,    -34.2500,    -28.1250,    -31.1250,    -24.5000,    -30.5000,    -26.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6620],
        [0.4313],
        [0.4855],
        [0.6364],
        [0.5862],
        [0.5117],
        [0.5101],
        [0.5477],
        [0.5241],
        [0.5418],
        [0.4315],
        [0.5102],
        [0.4438],
        [0.3718]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3340,     0.6172,     0.0045,     0.0444,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0040,     -0.5586,     -0.3223,     -0.4277,     -0.5625,     -0.4980,     -0.5742,     -0.5898],
        [    -0.2002,    -28.7500,    -17.3750,    -23.0000,    -29.7500,    -25.2500,    -28.7500,    -30.3750],
        [     0.0688,     11.2500,      1.7656,      5.5625,      8.6875,      6.2500,      6.6875,      7.2188],
        [    -0.0086,      0.6094,     -4.3125,     -2.0156,      0.7422,     -1.8047,     -1.9297,     -2.4531],
        [    -0.1553,    -21.6250,    -14.4375,    -17.6250,    -20.0000,    -18.6250,    -21.5000,    -21.5000],
        [    -0.1914,    -27.3750,    -15.0625,    -20.3750,    -25.6250,    -22.7500,    -25.6250,    -26.2500],
        [    -0.2080,    -29.2500,    -18.6250,    -23.6250,    -27.6250,    -25.1250,    -29.2500,    -29.6250],
        [    -0.1719,    -24.7500,    -15.2500,    -19.3750,    -23.8750,    -22.0000,    -25.3750,    -25.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9118],
        [0.1143],
        [0.3562],
        [0.7142],
        [0.7270],
        [0.7600],
        [0.6037],
        [0.7485],
        [0.4930],
        [0.5849],
        [0.0053],
        [0.6794],
        [0.5901],
        [0.3379]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0164,     0.9805,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0067,     0.8516,     0.0713,     0.0713,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0013,     0.0006,     0.0012,     0.0004,     0.0009,     0.0013,     0.0000],
        [    0.9961,     0.0003,     0.0002,     0.0010,     0.0001,     0.0002,     0.0003,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0016,     -0.2178,     -0.2178,     -0.1865,     -0.2461,     -0.2275,     -0.2090,     -0.2578],
        [    -0.1025,    -15.0000,    -13.4375,    -11.8125,    -16.2500,    -15.5000,    -13.2500,    -17.8750],
        [     0.0083,      4.0938,     -2.1250,     -0.7383,      3.0625,      2.8281,      1.3125,      1.7812],
        [     0.0261,      4.8750,      2.3906,      2.4062,      4.0938,      4.5312,      2.6094,      4.2812],
        [    -0.1025,    -13.0000,    -12.8125,    -11.1250,    -15.5625,    -13.6250,    -12.5625,    -15.3125],
        [    -0.1348,    -19.1250,    -17.5000,    -15.3125,    -22.2500,    -20.2500,    -18.2500,    -22.8750],
        [    -0.0515,     -6.7188,     -7.5312,     -6.7812,     -7.9062,     -7.1250,     -6.6562,     -9.1875],
        [    -0.0586,     -8.3125,     -8.5625,     -7.0000,     -9.7500,     -8.5000,     -8.1875,    -10.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9974],
        [0.1309],
        [0.0082],
        [0.9281],
        [0.9928],
        [0.9069],
        [0.6542],
        [0.9370],
        [0.8390],
        [1.0000],
        [0.1034],
        [0.9997],
        [0.9984],
        [0.2633]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5820,     0.4180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.8242,     0.1748,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.8477,     0.0439,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0625,     0.0664,     0.3281,     0.4238,     0.1177,     0.0000,     0.0000,     0.0000],
        [    0.8320,     0.0325,     0.0728,     0.0403,     0.0126,     0.0110,     0.0000,     0.0000],
        [    0.0432,     0.1494,     0.1069,     0.1367,     0.0962,     0.2871,     0.1816,     0.0000],
        [    0.0034,     0.1914,     0.0126,     0.0182,     0.2402,     0.3496,     0.0986,     0.0850]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0117,     -0.0137,     -0.0118,     -0.0010,     -0.0004,     -0.0090,     -0.0099],
        [    -0.0076,     -0.3398,     -2.1250,     -2.3438,     -0.5742,     -0.8164,     -0.3555,     -1.0234],
        [     0.0405,      7.2500,      5.7188,      6.9375,      8.3125,     10.2500,      8.0000,      7.7188],
        [     0.0284,      6.3438,      3.3906,      4.2812,      6.5312,      7.7812,      5.9375,      5.5312],
        [     0.0097,      0.0703,      1.6641,      1.9219,      0.6406,      1.8125,      1.6406,      2.4062],
        [    -0.0214,     -3.2656,     -2.4531,     -3.0469,     -4.2188,     -4.3438,     -3.9531,     -3.4375],
        [     0.0056,      1.2422,      0.9102,      1.1562,      0.8086,      1.8984,      1.4375,      1.5000],
        [     0.0179,      4.0625,      1.3281,      1.6953,      4.2812,      4.6562,      3.3906,      3.2344]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.7101],
        [    0.0007],
        [    0.0018],
        [    0.4112],
        [    0.7816],
        [    0.2481],
        [    0.1724],
        [    0.7352],
        [    0.1688],
        [    0.9590],
        [    0.0006],
        [    0.8514],
        [    0.8827],
        [    0.0003]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0703,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0737,     0.5625,     0.3652,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0559,     0.4785,     0.2656,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0361,     0.3281,     0.3047,     0.1934,     0.1357,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0007,     0.0001,     0.0002,     0.0002,     0.0004,     0.0000,     0.0000],
        [    0.0442,     0.2793,     0.1914,     0.1279,     0.1055,     0.1797,     0.0723,     0.0000],
        [    0.1387,     0.2773,     0.1201,     0.0908,     0.0869,     0.1699,     0.0664,     0.0498]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0271,     -0.0376,     -0.0371,     -0.0266,     -0.0269,     -0.0376,     -0.0391],
        [     0.0040,     -2.5781,     -3.4219,     -3.1094,     -2.9062,     -3.1094,     -2.7344,     -2.8750],
        [    -0.0049,      2.0312,      1.5938,      1.5000,      1.7422,      1.7891,      1.6641,      1.3516],
        [    -0.0070,      2.1406,      1.5469,      1.2734,      1.5938,      1.8125,      1.1719,      0.8984],
        [    -0.0078,      2.2031,      2.1250,      1.6719,      1.3203,      1.5078,      1.0000,      0.9141],
        [     0.0047,     -7.2812,     -9.4375,     -8.7500,     -8.3125,     -7.7812,     -8.4375,     -8.8125],
        [    -0.0081,      1.8359,      1.4609,      1.0547,      0.8633,      1.3984,      0.4824,      0.2930],
        [    -0.0058,      0.6875,     -0.1514,     -0.4297,     -0.4707,      0.1982,     -0.7461,     -1.0312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8247],
        [0.1399],
        [0.0726],
        [0.1456],
        [0.7977],
        [0.0731],
        [0.1248],
        [0.2627],
        [0.1041],
        [0.3839],
        [0.0219],
        [0.6240],
        [0.5198],
        [0.0205]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8359, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3438, 0.4395, 0.2148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2363, 0.4590, 0.1631, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.3281, 0.1533, 0.1367, 0.1484, 0.0000, 0.0000, 0.0000],
        [0.3184, 0.0693, 0.1797, 0.1885, 0.2002, 0.0437, 0.0000, 0.0000],
        [0.1309, 0.2773, 0.0903, 0.0781, 0.0869, 0.2617, 0.0747, 0.0000],
        [0.1387, 0.2188, 0.0947, 0.0840, 0.0938, 0.2021, 0.0815, 0.0869]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0101,     -0.0019,     -0.0032,     -0.0023,      0.0106,     -0.0036,     -0.0021],
        [    -0.0020,     -1.6406,     -0.2393,     -0.1475,     -0.1641,     -1.6797,     -0.1069,     -0.2637],
        [    -0.0006,      0.2441,     -0.4727,     -0.5859,     -0.4395,      0.1377,     -0.5898,     -0.5508],
        [     0.0002,      0.6641,     -0.3691,     -0.5117,     -0.3906,      0.5938,     -0.5469,     -0.4609],
        [     0.0002,      0.3398,     -0.4238,     -0.5312,     -0.4551,      0.3047,     -0.5625,     -0.5000],
        [    -0.0031,     -1.5312,     -0.5781,     -0.5273,     -0.4707,     -1.9922,     -0.5078,     -0.6562],
        [     0.0004,      0.7500,     -0.3711,     -0.5195,     -0.4082,      0.6914,     -0.5625,     -0.4648],
        [    -0.0001,      0.4570,     -0.3828,     -0.5000,     -0.3906,      0.3750,     -0.5312,     -0.4668]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8223],
        [0.5405],
        [0.4086],
        [0.4149],
        [0.4998],
        [0.2804],
        [0.2957],
        [0.2225],
        [0.2236],
        [0.1415],
        [0.1370],
        [0.1827],
        [0.0992],
        [0.0882]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0330,     0.9688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.1836,     0.8125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.0977,     0.5273,     0.3711,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0757,     0.4297,     0.2988,     0.1943,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.0771,     0.3828,     0.2695,     0.1855,     0.0815,     0.0000,     0.0000],
        [    0.0008,     0.0591,     0.3770,     0.2520,     0.1602,     0.0586,     0.0938,     0.0000],
        [    0.0008,     0.0537,     0.3320,     0.2236,     0.1436,     0.0532,     0.0854,     0.1069]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0311,      0.0420,      0.0391,      0.0359,      0.0297,      0.0317,      0.0334],
        [    -0.0076,      3.3750,      4.8438,      4.5625,      4.2188,      3.4531,      3.8438,      4.0312],
        [    -0.0084,      3.8125,      5.2812,      5.0000,      4.6250,      3.7812,      4.2188,      4.4062],
        [    -0.0096,      4.1250,      5.8125,      5.4375,      5.0312,      4.0625,      4.5625,      4.7812],
        [    -0.0098,      4.1250,      5.8750,      5.5000,      5.0625,      4.1250,      4.5938,      4.8125],
        [    -0.0085,      3.3125,      4.9062,      4.5625,      4.1875,      3.3594,      3.7344,      3.9219],
        [    -0.0106,      4.2500,      6.0938,      5.6875,      5.2500,      4.2500,      4.7188,      4.9375],
        [    -0.0104,      4.1562,      6.0000,      5.5938,      5.1562,      4.1562,      4.6250,      4.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0858],
        [    0.0035],
        [    0.0017],
        [    0.0016],
        [    0.0082],
        [    0.0011],
        [    0.0011],
        [    0.0013],
        [    0.0010],
        [    0.0014],
        [    0.0010],
        [    0.0018],
        [    0.0013],
        [    0.0010]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(ェ:0.0039ェ:0.0040ェ:0.0041 actionGroup:0.0043ェ:0.0048ティ:0.0049ティ:0.0052ティ:0.0053)
ティ
------
		(ェ:0.0040ェ:0.0041 actionGroup:0.0043ェ:0.0048ティ:0.0049ティ:0.0052ティ:0.0053ティ:0.0051)
ティティティティティティティティティティティティティティティ
@ 1250 train 4.4616 , allloss: 4.4616, dt: 1120.26ms, fracRes: 0.2003, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8060, norm(y): 0.9935, norm:0.3971, tok/sec: 117001.41, flops:102.48, batch-reuse:1
@ 1251 train 4.3661 , allloss: 4.3661, dt: 697.04ms, fracRes: 0.2023, norm(attn): 0.3691, norm(output): 0.7266, norm(x): 0.8032, norm(y): 0.9934, norm:0.4445, tok/sec: 188041.61, flops:164.70, batch-reuse:1
@ 1252 train 4.3974 , allloss: 4.3974, dt: 699.61ms, fracRes: 0.2013, norm(attn): 0.3672, norm(output): 0.7148, norm(x): 0.8024, norm(y): 0.9933, norm:0.4322, tok/sec: 187348.82, flops:164.09, batch-reuse:1
@ 1253 train 4.2632 , allloss: 4.2632, dt: 702.82ms, fracRes: 0.2012, norm(attn): 0.3652, norm(output): 0.7148, norm(x): 0.8015, norm(y): 0.9934, norm:0.4788, tok/sec: 186494.71, flops:163.34, batch-reuse:1
@ 1254 train 4.3561 , allloss: 4.3561, dt: 687.20ms, fracRes: 0.2000, norm(attn): 0.3652, norm(output): 0.7188, norm(x): 0.8033, norm(y): 0.9934, norm:0.4653, tok/sec: 190732.20, flops:167.05, batch-reuse:1
@ 1255 train 4.3954 , allloss: 4.3954, dt: 692.54ms, fracRes: 0.1959, norm(attn): 0.3672, norm(output): 0.7109, norm(x): 0.7965, norm(y): 0.9935, norm:0.4380, tok/sec: 189262.86, flops:165.77, batch-reuse:1
@ 1256 train 4.3215 , allloss: 4.3215, dt: 690.46ms, fracRes: 0.1990, norm(attn): 0.3711, norm(output): 0.7070, norm(x): 0.7984, norm(y): 0.9935, norm:0.4434, tok/sec: 189833.53, flops:166.27, batch-reuse:1
@ 1257 train 4.4110 , allloss: 4.4110, dt: 677.64ms, fracRes: 0.2027, norm(attn): 0.3633, norm(output): 0.7070, norm(x): 0.7972, norm(y): 0.9934, norm:0.4288, tok/sec: 193423.70, flops:169.41, batch-reuse:1
@ 1258 train 4.3744 , allloss: 4.3744, dt: 689.73ms, fracRes: 0.2015, norm(attn): 0.3652, norm(output): 0.7109, norm(x): 0.7978, norm(y): 0.9935, norm:0.4481, tok/sec: 190033.60, flops:166.44, batch-reuse:1
@ 1259 train 4.4129 , allloss: 4.4129, dt: 673.32ms, fracRes: 0.1974, norm(attn): 0.3711, norm(output): 0.7070, norm(x): 0.8009, norm(y): 0.9936, norm:0.4661, tok/sec: 194666.40, flops:170.50, batch-reuse:1
@ 1260 train 4.3525 , allloss: 4.3525, dt: 672.76ms, fracRes: 0.2005, norm(attn): 0.3652, norm(output): 0.7109, norm(x): 0.8018, norm(y): 0.9935, norm:0.4444, tok/sec: 194826.72, flops:170.64, batch-reuse:1
@ 1261 train 4.3575 , allloss: 4.3575, dt: 667.90ms, fracRes: 0.1996, norm(attn): 0.3691, norm(output): 0.7188, norm(x): 0.8049, norm(y): 0.9935, norm:0.4284, tok/sec: 196245.34, flops:171.88, batch-reuse:1
@ 1262 train 4.2772 , allloss: 4.2772, dt: 686.06ms, fracRes: 0.1945, norm(attn): 0.3711, norm(output): 0.7188, norm(x): 0.8032, norm(y): 0.9937, norm:0.4378, tok/sec: 191050.36, flops:167.33, batch-reuse:1
@ 1263 train 4.3337 , allloss: 4.3337, dt: 689.60ms, fracRes: 0.1938, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8029, norm(y): 0.9937, norm:0.4487, tok/sec: 190069.02, flops:166.47, batch-reuse:1
@ 1264 train 4.3926 , allloss: 4.3926, dt: 700.64ms, fracRes: 0.1957, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8074, norm(y): 0.9936, norm:0.5271, tok/sec: 187073.41, flops:163.85, batch-reuse:1
@ 1265 train 4.4076 , allloss: 4.4076, dt: 691.53ms, fracRes: 0.1986, norm(attn): 0.3750, norm(output): 0.7148, norm(x): 0.8012, norm(y): 0.9936, norm:0.4283, tok/sec: 189537.77, flops:166.01, batch-reuse:1
@ 1266 train 4.3868 , allloss: 4.3868, dt: 699.24ms, fracRes: 0.2010, norm(attn): 0.3750, norm(output): 0.7109, norm(x): 0.8009, norm(y): 0.9936, norm:0.4891, tok/sec: 187448.02, flops:164.18, batch-reuse:1
@ 1267 train 4.4507 , allloss: 4.4507, dt: 701.25ms, fracRes: 0.2018, norm(attn): 0.3750, norm(output): 0.7109, norm(x): 0.7995, norm(y): 0.9936, norm:0.4744, tok/sec: 186910.91, flops:163.71, batch-reuse:1
@ 1268 train 4.3613 , allloss: 4.3613, dt: 695.97ms, fracRes: 0.1983, norm(attn): 0.3750, norm(output): 0.7109, norm(x): 0.7985, norm(y): 0.9936, norm:0.4481, tok/sec: 188329.81, flops:164.95, batch-reuse:1
@ 1269 train 4.3629 , allloss: 4.3629, dt: 685.34ms, fracRes: 0.1968, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.7984, norm(y): 0.9937, norm:0.4142, tok/sec: 191250.48, flops:167.51, batch-reuse:1
@ 1270 train 4.2277 , allloss: 4.2277, dt: 691.04ms, fracRes: 0.1956, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7986, norm(y): 0.9937, norm:0.4732, tok/sec: 189672.28, flops:166.13, batch-reuse:1
@ 1271 train 4.3215 , allloss: 4.3215, dt: 685.03ms, fracRes: 0.1956, norm(attn): 0.3730, norm(output): 0.7148, norm(x): 0.7989, norm(y): 0.9937, norm:0.4474, tok/sec: 191336.61, flops:167.58, batch-reuse:1
@ 1272 train 4.2827 , allloss: 4.2827, dt: 686.29ms, fracRes: 0.1976, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.8000, norm(y): 0.9938, norm:0.4497, tok/sec: 190985.91, flops:167.28, batch-reuse:1
@ 1273 train 4.5071 , allloss: 4.5071, dt: 688.55ms, fracRes: 0.2004, norm(attn): 0.3711, norm(output): 0.7109, norm(x): 0.8033, norm(y): 0.9938, norm:0.5555, tok/sec: 190360.51, flops:166.73, batch-reuse:1
@ 1274 train 4.2965 , allloss: 4.2965, dt: 687.39ms, fracRes: 0.2041, norm(attn): 0.3691, norm(output): 0.7188, norm(x): 0.8067, norm(y): 0.9937, norm:0.4806, tok/sec: 190680.80, flops:167.01, batch-reuse:1
@ 1275 train 4.4727 , allloss: 4.4727, dt: 674.13ms, fracRes: 0.1967, norm(attn): 0.3691, norm(output): 0.7188, norm(x): 0.8041, norm(y): 0.9938, norm:0.4531, tok/sec: 194432.04, flops:170.29, batch-reuse:1
@ 1276 train 4.2876 , allloss: 4.2876, dt: 682.74ms, fracRes: 0.1965, norm(attn): 0.3711, norm(output): 0.7188, norm(x): 0.8030, norm(y): 0.9938, norm:0.4753, tok/sec: 191979.79, flops:168.15, batch-reuse:1
@ 1277 train 4.2885 , allloss: 4.2885, dt: 682.84ms, fracRes: 0.1984, norm(attn): 0.3691, norm(output): 0.7148, norm(x): 0.7991, norm(y): 0.9937, norm:0.5009, tok/sec: 191950.83, flops:168.12, batch-reuse:1
@ 1278 train 4.4052 , allloss: 4.4052, dt: 680.65ms, fracRes: 0.1998, norm(attn): 0.3652, norm(output): 0.7227, norm(x): 0.8010, norm(y): 0.9936, norm:0.4607, tok/sec: 192568.60, flops:168.66, batch-reuse:1
@ 1279 train 4.4743 , allloss: 4.4743, dt: 681.30ms, fracRes: 0.1997, norm(attn): 0.3652, norm(output): 0.7109, norm(x): 0.7999, norm(y): 0.9937, norm:0.4721, tok/sec: 192385.77, flops:168.50, batch-reuse:1
@ 1280 train 4.2748 , allloss: 4.2748, dt: 698.19ms, fracRes: 0.2059, norm(attn): 0.3652, norm(output): 0.7070, norm(x): 0.7998, norm(y): 0.9937, norm:0.4175, tok/sec: 187730.05, flops:164.42, batch-reuse:1
@ 1281 train 4.2895 , allloss: 4.2895, dt: 712.76ms, fracRes: 0.2090, norm(attn): 0.3711, norm(output): 0.7070, norm(x): 0.8003, norm(y): 0.9936, norm:0.4642, tok/sec: 183893.97, flops:161.06, batch-reuse:1
@ 1282 train 4.3105 , allloss: 4.3105, dt: 704.37ms, fracRes: 0.2057, norm(attn): 0.3711, norm(output): 0.7070, norm(x): 0.7972, norm(y): 0.9936, norm:0.4645, tok/sec: 186083.07, flops:162.98, batch-reuse:1
@ 1283 train 4.3820 , allloss: 4.3820, dt: 690.59ms, fracRes: 0.2002, norm(attn): 0.3633, norm(output): 0.7148, norm(x): 0.7987, norm(y): 0.9936, norm:0.4268, tok/sec: 189796.83, flops:166.23, batch-reuse:1
@ 1284 train 4.2757 , allloss: 4.2757, dt: 695.52ms, fracRes: 0.1994, norm(attn): 0.3691, norm(output): 0.7070, norm(x): 0.8025, norm(y): 0.9936, norm:0.4564, tok/sec: 188450.99, flops:165.06, batch-reuse:1
@ 1285 train 4.1953 , allloss: 4.1953, dt: 699.34ms, fracRes: 0.1995, norm(attn): 0.3730, norm(output): 0.7188, norm(x): 0.8008, norm(y): 0.9937, norm:0.4781, tok/sec: 187423.36, flops:164.16, batch-reuse:1
@ 1286 train 4.4788 , allloss: 4.4788, dt: 688.25ms, fracRes: 0.1961, norm(attn): 0.3711, norm(output): 0.7148, norm(x): 0.8000, norm(y): 0.9937, norm:0.4770, tok/sec: 190441.95, flops:166.80, batch-reuse:1
@ 1287 train 4.3631 , allloss: 4.3631, dt: 702.19ms, fracRes: 0.1983, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.8012, norm(y): 0.9937, norm:0.4385, tok/sec: 186661.88, flops:163.49, batch-reuse:1
@ 1288 train 4.3164 , allloss: 4.3164, dt: 681.62ms, fracRes: 0.2014, norm(attn): 0.3750, norm(output): 0.7148, norm(x): 0.8019, norm(y): 0.9936, norm:0.4851, tok/sec: 192295.47, flops:168.42, batch-reuse:1
@ 1289 train 4.2664 , allloss: 4.2664, dt: 694.14ms, fracRes: 0.2015, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8017, norm(y): 0.9936, norm:0.4485, tok/sec: 188825.57, flops:165.38, batch-reuse:1
@ 1290 train 4.2666 , allloss: 4.2666, dt: 685.43ms, fracRes: 0.2016, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.7966, norm(y): 0.9937, norm:0.4968, tok/sec: 191226.66, flops:167.49, batch-reuse:1
@ 1291 train 4.3144 , allloss: 4.3144, dt: 696.10ms, fracRes: 0.2059, norm(attn): 0.3672, norm(output): 0.7031, norm(x): 0.7958, norm(y): 0.9936, norm:0.4384, tok/sec: 188294.92, flops:164.92, batch-reuse:1
@ 1292 train 4.2943 , allloss: 4.2943, dt: 691.53ms, fracRes: 0.2043, norm(attn): 0.3691, norm(output): 0.7109, norm(x): 0.7989, norm(y): 0.9937, norm:0.4936, tok/sec: 189538.29, flops:166.01, batch-reuse:1
@ 1293 train 4.3598 , allloss: 4.3598, dt: 683.97ms, fracRes: 0.1984, norm(attn): 0.3711, norm(output): 0.7109, norm(x): 0.7989, norm(y): 0.9938, norm:0.5391, tok/sec: 191634.74, flops:167.84, batch-reuse:1
@ 1294 train 4.2829 , allloss: 4.2829, dt: 686.69ms, fracRes: 0.1974, norm(attn): 0.3691, norm(output): 0.7109, norm(x): 0.8003, norm(y): 0.9938, norm:0.5086, tok/sec: 190876.23, flops:167.18, batch-reuse:1
@ 1295 train 4.3917 , allloss: 4.3917, dt: 685.35ms, fracRes: 0.1942, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.7985, norm(y): 0.9938, norm:0.4419, tok/sec: 191248.48, flops:167.51, batch-reuse:1
@ 1296 train 4.3845 , allloss: 4.3845, dt: 681.85ms, fracRes: 0.2003, norm(attn): 0.3730, norm(output): 0.7188, norm(x): 0.8030, norm(y): 0.9937, norm:0.4634, tok/sec: 192230.65, flops:168.37, batch-reuse:1
@ 1297 train 4.4666 , allloss: 4.4666, dt: 695.60ms, fracRes: 0.2016, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8041, norm(y): 0.9937, norm:0.4690, tok/sec: 188430.96, flops:165.04, batch-reuse:1
@ 1298 train 4.5488 , allloss: 4.5488, dt: 689.39ms, fracRes: 0.2011, norm(attn): 0.3770, norm(output): 0.7227, norm(x): 0.8055, norm(y): 0.9937, norm:0.4372, tok/sec: 190128.37, flops:166.53, batch-reuse:1
@ 1299 train 4.5251 , allloss: 4.5251, dt: 683.01ms, fracRes: 0.2042, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8049, norm(y): 0.9936, norm:0.4020, tok/sec: 191904.73, flops:168.08, batch-reuse:1
@ 1300 train 4.4547 , allloss: 4.4547, dt: 671.57ms, fracRes: 0.2046, norm(attn): 0.3730, norm(output): 0.7070, norm(x): 0.8031, norm(y): 0.9937, norm:0.4584, tok/sec: 195173.53, flops:170.94, batch-reuse:1
@ 1301 train 4.5533 , allloss: 4.5533, dt: 685.35ms, fracRes: 0.2038, norm(attn): 0.3730, norm(output): 0.7109, norm(x): 0.8018, norm(y): 0.9937, norm:0.4402, tok/sec: 191248.88, flops:167.51, batch-reuse:1
@ 1302 train 4.5218 , allloss: 4.5218, dt: 674.12ms, fracRes: 0.2012, norm(attn): 0.3711, norm(output): 0.7188, norm(x): 0.8014, norm(y): 0.9937, norm:0.4839, tok/sec: 194432.86, flops:170.30, batch-reuse:1
@ 1303 train 4.5589 , allloss: 4.5589, dt: 683.94ms, fracRes: 0.1985, norm(attn): 0.3750, norm(output): 0.7188, norm(x): 0.8006, norm(y): 0.9939, norm:0.5758, tok/sec: 191643.83, flops:167.85, batch-reuse:1
@ 1304 train 4.5427 , allloss: 4.5427, dt: 689.79ms, fracRes: 0.1982, norm(attn): 0.3750, norm(output): 0.7227, norm(x): 0.8014, norm(y): 0.9939, norm:0.4923, tok/sec: 190016.79, flops:166.43, batch-reuse:1
@ 1305 train 4.4541 , allloss: 4.4541, dt: 686.91ms, fracRes: 0.2056, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8063, norm(y): 0.9938, norm:0.5057, tok/sec: 190813.30, flops:167.12, batch-reuse:1
@ 1306 train 4.3747 , allloss: 4.3747, dt: 691.56ms, fracRes: 0.2061, norm(attn): 0.3770, norm(output): 0.7266, norm(x): 0.8079, norm(y): 0.9938, norm:0.6794, tok/sec: 189529.86, flops:166.00, batch-reuse:1
@ 1307 train 4.6042 , allloss: 4.6042, dt: 689.23ms, fracRes: 0.2038, norm(attn): 0.3730, norm(output): 0.7188, norm(x): 0.8058, norm(y): 0.9938, norm:0.5681, tok/sec: 190172.57, flops:166.56, batch-reuse:1
@ 1308 train 4.5812 , allloss: 4.5812, dt: 696.96ms, fracRes: 0.2006, norm(attn): 0.3691, norm(output): 0.7266, norm(x): 0.8099, norm(y): 0.9939, norm:0.5801, tok/sec: 188061.61, flops:164.71, batch-reuse:1
@ 1309 train 4.4890 , allloss: 4.4890, dt: 696.15ms, fracRes: 0.1989, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8139, norm(y): 0.9939, norm:0.6085, tok/sec: 188281.50, flops:164.91, batch-reuse:1
@ 1310 train 4.5185 , allloss: 4.5185, dt: 693.86ms, fracRes: 0.1980, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8108, norm(y): 0.9938, norm:0.6075, tok/sec: 188902.52, flops:165.45, batch-reuse:1
@ 1311 train 4.4194 , allloss: 4.4194, dt: 692.57ms, fracRes: 0.1988, norm(attn): 0.3711, norm(output): 0.7305, norm(x): 0.8097, norm(y): 0.9937, norm:0.5419, tok/sec: 189253.68, flops:165.76, batch-reuse:1
@ 1312 train 4.5430 , allloss: 4.5430, dt: 699.06ms, fracRes: 0.1991, norm(attn): 0.3711, norm(output): 0.7266, norm(x): 0.8086, norm(y): 0.9939, norm:0.4845, tok/sec: 187497.63, flops:164.22, batch-reuse:1
@ 1313 train 4.5516 , allloss: 4.5516, dt: 679.72ms, fracRes: 0.2016, norm(attn): 0.3770, norm(output): 0.7305, norm(x): 0.8141, norm(y): 0.9939, norm:0.4789, tok/sec: 192831.15, flops:168.89, batch-reuse:1
@ 1314 train 4.5049 , allloss: 4.5049, dt: 704.50ms, fracRes: 0.2012, norm(attn): 0.3828, norm(output): 0.7305, norm(x): 0.8113, norm(y): 0.9939, norm:0.5252, tok/sec: 186049.00, flops:162.95, batch-reuse:1
@ 1315 train 4.5035 , allloss: 4.5035, dt: 702.68ms, fracRes: 0.2047, norm(attn): 0.3789, norm(output): 0.7266, norm(x): 0.8082, norm(y): 0.9938, norm:0.4686, tok/sec: 186531.98, flops:163.38, batch-reuse:1
@ 1316 train 4.4397 , allloss: 4.4397, dt: 706.47ms, fracRes: 0.2035, norm(attn): 0.3789, norm(output): 0.7305, norm(x): 0.8089, norm(y): 0.9938, norm:0.4323, tok/sec: 185530.31, flops:162.50, batch-reuse:1
@ 1317 train 4.4361 , allloss: 4.4361, dt: 675.74ms, fracRes: 0.2040, norm(attn): 0.3789, norm(output): 0.7383, norm(x): 0.8161, norm(y): 0.9938, norm:0.4699, tok/sec: 193968.78, flops:169.89, batch-reuse:1
@ 1318 train 4.4459 , allloss: 4.4459, dt: 692.50ms, fracRes: 0.2082, norm(attn): 0.3789, norm(output): 0.7383, norm(x): 0.8184, norm(y): 0.9938, norm:0.4660, tok/sec: 189274.27, flops:165.78, batch-reuse:1
@ 1319 train 4.5114 , allloss: 4.5114, dt: 683.98ms, fracRes: 0.2070, norm(attn): 0.3770, norm(output): 0.7266, norm(x): 0.8170, norm(y): 0.9938, norm:0.5025, tok/sec: 191631.81, flops:167.84, batch-reuse:1
@ 1320 train 4.5606 , allloss: 4.5606, dt: 694.52ms, fracRes: 0.2026, norm(attn): 0.3750, norm(output): 0.7188, norm(x): 0.8078, norm(y): 0.9938, norm:0.5824, tok/sec: 188723.47, flops:165.29, batch-reuse:1
@ 1321 train 4.5072 , allloss: 4.5072, dt: 688.97ms, fracRes: 0.2060, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8161, norm(y): 0.9938, norm:0.4241, tok/sec: 190243.05, flops:166.63, batch-reuse:1
@ 1322 train 4.4871 , allloss: 4.4871, dt: 698.30ms, fracRes: 0.2083, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8222, norm(y): 0.9938, norm:0.4601, tok/sec: 187701.78, flops:164.40, batch-reuse:1
@ 1323 train 4.4668 , allloss: 4.4668, dt: 705.39ms, fracRes: 0.2074, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8279, norm(y): 0.9938, norm:0.4895, tok/sec: 185815.20, flops:162.75, batch-reuse:1
@ 1324 train 4.4807 , allloss: 4.4807, dt: 699.65ms, fracRes: 0.2089, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8256, norm(y): 0.9939, norm:0.4630, tok/sec: 187338.16, flops:164.08, batch-reuse:1
@ 1325 train 4.4470 , allloss: 4.4470, dt: 702.22ms, fracRes: 0.2080, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8216, norm(y): 0.9939, norm:0.4383, tok/sec: 186653.77, flops:163.48, batch-reuse:1
@ 1326 train 4.4526 , allloss: 4.4526, dt: 698.72ms, fracRes: 0.2094, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8231, norm(y): 0.9938, norm:0.4279, tok/sec: 187590.02, flops:164.30, batch-reuse:1
@ 1327 train 4.4882 , allloss: 4.4882, dt: 702.23ms, fracRes: 0.2043, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8224, norm(y): 0.9939, norm:0.4620, tok/sec: 186651.10, flops:163.48, batch-reuse:1
@ 1328 train 4.4804 , allloss: 4.4804, dt: 718.35ms, fracRes: 0.2045, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8235, norm(y): 0.9940, norm:0.4349, tok/sec: 182461.64, flops:159.81, batch-reuse:1
@ 1329 train 4.5241 , allloss: 4.5241, dt: 714.51ms, fracRes: 0.2078, norm(attn): 0.3730, norm(output): 0.7383, norm(x): 0.8223, norm(y): 0.9939, norm:0.3947, tok/sec: 183444.25, flops:160.67, batch-reuse:1
@ 1330 train 4.5471 , allloss: 4.5471, dt: 712.98ms, fracRes: 0.2116, norm(attn): 0.3672, norm(output): 0.7344, norm(x): 0.8184, norm(y): 0.9938, norm:0.4604, tok/sec: 183836.05, flops:161.01, batch-reuse:1
@ 1331 train 4.5395 , allloss: 4.5395, dt: 708.46ms, fracRes: 0.2068, norm(attn): 0.3730, norm(output): 0.7383, norm(x): 0.8181, norm(y): 0.9939, norm:0.4208, tok/sec: 185009.84, flops:162.04, batch-reuse:1
@ 1332 train 4.4417 , allloss: 4.4417, dt: 695.53ms, fracRes: 0.2067, norm(attn): 0.3730, norm(output): 0.7344, norm(x): 0.8166, norm(y): 0.9939, norm:0.4494, tok/sec: 188449.76, flops:165.05, batch-reuse:1
@ 1333 train 4.4529 , allloss: 4.4529, dt: 683.27ms, fracRes: 0.2065, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8178, norm(y): 0.9940, norm:0.4410, tok/sec: 191829.93, flops:168.02, batch-reuse:1
@ 1334 train 4.4600 , allloss: 4.4600, dt: 699.72ms, fracRes: 0.2077, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8195, norm(y): 0.9940, norm:0.4233, tok/sec: 187320.80, flops:164.07, batch-reuse:1
@ 1335 train 4.5277 , allloss: 4.5277, dt: 701.77ms, fracRes: 0.2123, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8198, norm(y): 0.9939, norm:0.4713, tok/sec: 186773.74, flops:163.59, batch-reuse:1
@ 1336 train 4.4088 , allloss: 4.4088, dt: 697.25ms, fracRes: 0.2081, norm(attn): 0.3770, norm(output): 0.7305, norm(x): 0.8194, norm(y): 0.9939, norm:0.5064, tok/sec: 187984.51, flops:164.65, batch-reuse:1
@ 1337 train 4.4714 , allloss: 4.4714, dt: 685.63ms, fracRes: 0.2091, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8252, norm(y): 0.9940, norm:0.5068, tok/sec: 191168.81, flops:167.44, batch-reuse:1
@ 1338 train 4.4622 , allloss: 4.4622, dt: 678.34ms, fracRes: 0.2095, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8268, norm(y): 0.9941, norm:0.4816, tok/sec: 193223.90, flops:169.24, batch-reuse:1
@ 1339 train 4.4541 , allloss: 4.4541, dt: 688.30ms, fracRes: 0.2050, norm(attn): 0.3809, norm(output): 0.7422, norm(x): 0.8234, norm(y): 0.9941, norm:0.5049, tok/sec: 190429.74, flops:166.79, batch-reuse:1
@ 1340 train 4.4702 , allloss: 4.4702, dt: 688.10ms, fracRes: 0.2061, norm(attn): 0.3789, norm(output): 0.7344, norm(x): 0.8191, norm(y): 0.9941, norm:0.4856, tok/sec: 190484.11, flops:166.84, batch-reuse:1
@ 1341 train 4.5335 , allloss: 4.5335, dt: 695.98ms, fracRes: 0.2039, norm(attn): 0.3828, norm(output): 0.7344, norm(x): 0.8125, norm(y): 0.9941, norm:0.4641, tok/sec: 188326.59, flops:164.95, batch-reuse:1
@ 1342 train 4.5354 , allloss: 4.5354, dt: 686.47ms, fracRes: 0.2051, norm(attn): 0.3789, norm(output): 0.7344, norm(x): 0.8143, norm(y): 0.9940, norm:0.5137, tok/sec: 190935.90, flops:167.23, batch-reuse:1
@ 1343 train 4.4366 , allloss: 4.4366, dt: 691.73ms, fracRes: 0.2094, norm(attn): 0.3770, norm(output): 0.7305, norm(x): 0.8129, norm(y): 0.9939, norm:0.4889, tok/sec: 189485.44, flops:165.96, batch-reuse:1
@ 1344 train 4.4434 , allloss: 4.4434, dt: 683.07ms, fracRes: 0.2110, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8114, norm(y): 0.9939, norm:0.5147, tok/sec: 191887.45, flops:168.07, batch-reuse:1
@ 1345 train 4.3946 , allloss: 4.3946, dt: 684.89ms, fracRes: 0.2119, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8166, norm(y): 0.9939, norm:0.4701, tok/sec: 191376.51, flops:167.62, batch-reuse:1
@ 1346 train 4.4129 , allloss: 4.4129, dt: 683.30ms, fracRes: 0.2074, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8145, norm(y): 0.9940, norm:0.4049, tok/sec: 191820.96, flops:168.01, batch-reuse:1
@ 1347 train 4.3957 , allloss: 4.3957, dt: 684.52ms, fracRes: 0.2099, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8115, norm(y): 0.9939, norm:0.4578, tok/sec: 191479.96, flops:167.71, batch-reuse:1
@ 1348 train 4.4408 , allloss: 4.4408, dt: 683.85ms, fracRes: 0.2098, norm(attn): 0.3711, norm(output): 0.7266, norm(x): 0.8141, norm(y): 0.9939, norm:0.4660, tok/sec: 191668.28, flops:167.87, batch-reuse:1
@ 1349 train 4.4864 , allloss: 4.4864, dt: 675.91ms, fracRes: 0.2082, norm(attn): 0.3730, norm(output): 0.7344, norm(x): 0.8162, norm(y): 0.9939, norm:0.4184, tok/sec: 193920.34, flops:169.85, batch-reuse:1
@ 1350 train 4.3434 , allloss: 4.3434, dt: 694.48ms, fracRes: 0.2059, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8185, norm(y): 0.9940, norm:0.4173, tok/sec: 188733.00, flops:165.30, batch-reuse:1
@ 1351 train 4.3379 , allloss: 4.3379, dt: 674.89ms, fracRes: 0.2094, norm(attn): 0.3730, norm(output): 0.7383, norm(x): 0.8184, norm(y): 0.9939, norm:0.4312, tok/sec: 194212.65, flops:170.10, batch-reuse:1
@ 1352 train 4.5061 , allloss: 4.5061, dt: 691.95ms, fracRes: 0.2105, norm(attn): 0.3730, norm(output): 0.7344, norm(x): 0.8186, norm(y): 0.9940, norm:0.4847, tok/sec: 189423.94, flops:165.91, batch-reuse:1
@ 1353 train 4.4207 , allloss: 4.4207, dt: 682.05ms, fracRes: 0.2082, norm(attn): 0.3711, norm(output): 0.7344, norm(x): 0.8167, norm(y): 0.9940, norm:0.4754, tok/sec: 192173.80, flops:168.32, batch-reuse:1
@ 1354 train 4.4142 , allloss: 4.4142, dt: 686.86ms, fracRes: 0.2097, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8148, norm(y): 0.9940, norm:0.4665, tok/sec: 190828.93, flops:167.14, batch-reuse:1
@ 1355 train 4.5211 , allloss: 4.5211, dt: 677.50ms, fracRes: 0.2084, norm(attn): 0.3770, norm(output): 0.7344, norm(x): 0.8180, norm(y): 0.9941, norm:0.4949, tok/sec: 193463.59, flops:169.45, batch-reuse:1
@ 1356 train 4.4077 , allloss: 4.4077, dt: 679.88ms, fracRes: 0.2109, norm(attn): 0.3770, norm(output): 0.7344, norm(x): 0.8228, norm(y): 0.9940, norm:0.5706, tok/sec: 192786.92, flops:168.85, batch-reuse:1
@ 1357 train 4.4856 , allloss: 4.4856, dt: 691.59ms, fracRes: 0.2050, norm(attn): 0.3809, norm(output): 0.7422, norm(x): 0.8195, norm(y): 0.9941, norm:0.5398, tok/sec: 189523.39, flops:166.00, batch-reuse:1
@ 1358 train 4.4410 , allloss: 4.4410, dt: 687.12ms, fracRes: 0.2110, norm(attn): 0.3770, norm(output): 0.7383, norm(x): 0.8238, norm(y): 0.9940, norm:0.4900, tok/sec: 190754.77, flops:167.07, batch-reuse:1
@ 1359 train 4.3595 , allloss: 4.3595, dt: 697.47ms, fracRes: 0.2128, norm(attn): 0.3809, norm(output): 0.7383, norm(x): 0.8248, norm(y): 0.9940, norm:0.4627, tok/sec: 187925.65, flops:164.60, batch-reuse:1
@ 1360 train 4.3680 , allloss: 4.3680, dt: 674.89ms, fracRes: 0.2126, norm(attn): 0.3809, norm(output): 0.7422, norm(x): 0.8204, norm(y): 0.9939, norm:0.4495, tok/sec: 194213.75, flops:170.10, batch-reuse:1
@ 1361 train 4.4412 , allloss: 4.4412, dt: 681.70ms, fracRes: 0.2043, norm(attn): 0.3867, norm(output): 0.7344, norm(x): 0.8141, norm(y): 0.9941, norm:0.4622, tok/sec: 192271.12, flops:168.40, batch-reuse:1
@ 1362 train 4.5081 , allloss: 4.5081, dt: 686.53ms, fracRes: 0.2045, norm(attn): 0.3789, norm(output): 0.7383, norm(x): 0.8186, norm(y): 0.9940, norm:0.4254, tok/sec: 190920.38, flops:167.22, batch-reuse:1
@ 1363 train 4.4775 , allloss: 4.4775, dt: 688.97ms, fracRes: 0.2071, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8225, norm(y): 0.9939, norm:0.4734, tok/sec: 190242.59, flops:166.63, batch-reuse:1
@ 1364 train 4.3484 , allloss: 4.3484, dt: 678.36ms, fracRes: 0.2083, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8229, norm(y): 0.9940, norm:0.4547, tok/sec: 193218.06, flops:169.23, batch-reuse:1
@ 1365 train 4.4333 , allloss: 4.4333, dt: 679.10ms, fracRes: 0.2101, norm(attn): 0.3770, norm(output): 0.7383, norm(x): 0.8218, norm(y): 0.9940, norm:0.4503, tok/sec: 193007.23, flops:169.05, batch-reuse:1
@ 1366 train 4.4108 , allloss: 4.4108, dt: 681.57ms, fracRes: 0.2139, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8216, norm(y): 0.9939, norm:0.4286, tok/sec: 192308.52, flops:168.43, batch-reuse:1
@ 1367 train 4.3654 , allloss: 4.3654, dt: 684.15ms, fracRes: 0.2132, norm(attn): 0.3730, norm(output): 0.7344, norm(x): 0.8179, norm(y): 0.9939, norm:0.3682, tok/sec: 191582.85, flops:167.80, batch-reuse:1
@ 1368 train 4.4977 , allloss: 4.4977, dt: 667.03ms, fracRes: 0.2076, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8122, norm(y): 0.9940, norm:0.4261, tok/sec: 196500.74, flops:172.11, batch-reuse:1
@ 1369 train 4.5464 , allloss: 4.5464, dt: 685.42ms, fracRes: 0.2123, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8139, norm(y): 0.9939, norm:0.4432, tok/sec: 191229.19, flops:167.49, batch-reuse:1
@ 1370 train 4.4128 , allloss: 4.4128, dt: 692.28ms, fracRes: 0.2122, norm(attn): 0.3730, norm(output): 0.7344, norm(x): 0.8218, norm(y): 0.9940, norm:0.4305, tok/sec: 189332.67, flops:165.83, batch-reuse:1
@ 1371 train 4.6255 , allloss: 4.6255, dt: 677.24ms, fracRes: 0.2099, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8272, norm(y): 0.9941, norm:0.5116, tok/sec: 193537.69, flops:169.51, batch-reuse:1
@ 1372 train 4.3764 , allloss: 4.3764, dt: 688.09ms, fracRes: 0.2142, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8255, norm(y): 0.9940, norm:0.4990, tok/sec: 190487.74, flops:166.84, batch-reuse:1
@ 1373 train 4.4019 , allloss: 4.4019, dt: 677.67ms, fracRes: 0.2161, norm(attn): 0.3770, norm(output): 0.7305, norm(x): 0.8202, norm(y): 0.9940, norm:0.4142, tok/sec: 193416.97, flops:169.41, batch-reuse:1
@ 1374 train 4.3563 , allloss: 4.3563, dt: 678.43ms, fracRes: 0.2122, norm(attn): 0.3770, norm(output): 0.7344, norm(x): 0.8211, norm(y): 0.9941, norm:0.4689, tok/sec: 193197.96, flops:169.21, batch-reuse:1
@ 1375 train 4.3732 , allloss: 4.3732, dt: 683.91ms, fracRes: 0.2116, norm(attn): 0.3770, norm(output): 0.7344, norm(x): 0.8185, norm(y): 0.9941, norm:0.4116, tok/sec: 191650.64, flops:167.86, batch-reuse:1
@ 1376 train 4.3489 , allloss: 4.3489, dt: 670.59ms, fracRes: 0.2107, norm(attn): 0.3770, norm(output): 0.7305, norm(x): 0.8162, norm(y): 0.9940, norm:0.5388, tok/sec: 195456.36, flops:171.19, batch-reuse:1
@ 1377 train 4.3224 , allloss: 4.3224, dt: 685.95ms, fracRes: 0.2124, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8143, norm(y): 0.9939, norm:0.4780, tok/sec: 191081.90, flops:167.36, batch-reuse:1
@ 1378 train 4.4424 , allloss: 4.4424, dt: 690.50ms, fracRes: 0.2125, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8180, norm(y): 0.9939, norm:0.4823, tok/sec: 189822.98, flops:166.26, batch-reuse:1
@ 1379 train 4.3964 , allloss: 4.3964, dt: 698.96ms, fracRes: 0.2107, norm(attn): 0.3730, norm(output): 0.7422, norm(x): 0.8234, norm(y): 0.9940, norm:0.4600, tok/sec: 187525.01, flops:164.24, batch-reuse:1
@ 1380 train 4.3613 , allloss: 4.3613, dt: 687.02ms, fracRes: 0.2097, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8235, norm(y): 0.9942, norm:0.4094, tok/sec: 190783.90, flops:167.10, batch-reuse:1
@ 1381 train 4.3732 , allloss: 4.3732, dt: 688.06ms, fracRes: 0.2084, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8199, norm(y): 0.9942, norm:0.4369, tok/sec: 190494.87, flops:166.85, batch-reuse:1
@ 1382 train 4.3684 , allloss: 4.3684, dt: 677.59ms, fracRes: 0.2108, norm(attn): 0.3730, norm(output): 0.7383, norm(x): 0.8182, norm(y): 0.9941, norm:0.4378, tok/sec: 193438.54, flops:169.42, batch-reuse:1
@ 1383 train 4.3938 , allloss: 4.3938, dt: 699.94ms, fracRes: 0.2103, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8161, norm(y): 0.9940, norm:0.4282, tok/sec: 187262.92, flops:164.02, batch-reuse:1
@ 1384 train 4.2683 , allloss: 4.2683, dt: 695.48ms, fracRes: 0.2123, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8113, norm(y): 0.9939, norm:0.4555, tok/sec: 188462.55, flops:165.07, batch-reuse:1
@ 1385 train 4.3863 , allloss: 4.3863, dt: 706.25ms, fracRes: 0.2119, norm(attn): 0.3711, norm(output): 0.7266, norm(x): 0.8085, norm(y): 0.9939, norm:0.4439, tok/sec: 185588.87, flops:162.55, batch-reuse:1
@ 1386 train 4.3680 , allloss: 4.3680, dt: 703.83ms, fracRes: 0.2098, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8094, norm(y): 0.9941, norm:0.4892, tok/sec: 186226.85, flops:163.11, batch-reuse:1
@ 1387 train 4.3791 , allloss: 4.3791, dt: 697.72ms, fracRes: 0.2079, norm(attn): 0.3770, norm(output): 0.7266, norm(x): 0.8102, norm(y): 0.9942, norm:0.4582, tok/sec: 187858.67, flops:164.54, batch-reuse:1
@ 1388 train 4.4234 , allloss: 4.4234, dt: 703.66ms, fracRes: 0.2120, norm(attn): 0.3770, norm(output): 0.7305, norm(x): 0.8127, norm(y): 0.9941, norm:0.4608, tok/sec: 186271.02, flops:163.15, batch-reuse:1
@ 1389 train 4.2661 , allloss: 4.2661, dt: 700.89ms, fracRes: 0.2168, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8222, norm(y): 0.9940, norm:0.4530, tok/sec: 187006.91, flops:163.79, batch-reuse:1
@ 1390 train 4.4429 , allloss: 4.4429, dt: 691.16ms, fracRes: 0.2106, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8189, norm(y): 0.9940, norm:0.5785, tok/sec: 189639.50, flops:166.10, batch-reuse:1
@ 1391 train 4.3499 , allloss: 4.3499, dt: 692.08ms, fracRes: 0.2059, norm(attn): 0.3828, norm(output): 0.7344, norm(x): 0.8154, norm(y): 0.9941, norm:0.5400, tok/sec: 189389.55, flops:165.88, batch-reuse:1
@ 1392 train 4.3591 , allloss: 4.3591, dt: 688.30ms, fracRes: 0.2099, norm(attn): 0.3789, norm(output): 0.7305, norm(x): 0.8165, norm(y): 0.9940, norm:0.5039, tok/sec: 190427.43, flops:166.79, batch-reuse:1
@ 1393 train 4.3702 , allloss: 4.3702, dt: 693.04ms, fracRes: 0.2127, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8173, norm(y): 0.9939, norm:0.4403, tok/sec: 189126.46, flops:165.65, batch-reuse:1
@ 1394 train 4.3148 , allloss: 4.3148, dt: 693.18ms, fracRes: 0.2104, norm(attn): 0.3730, norm(output): 0.7344, norm(x): 0.8147, norm(y): 0.9939, norm:0.4376, tok/sec: 189087.69, flops:165.61, batch-reuse:1
@ 1395 train 4.3503 , allloss: 4.3503, dt: 702.60ms, fracRes: 0.2093, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8124, norm(y): 0.9940, norm:0.4436, tok/sec: 186551.66, flops:163.39, batch-reuse:1
@ 1396 train 4.3552 , allloss: 4.3552, dt: 702.54ms, fracRes: 0.2106, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8153, norm(y): 0.9940, norm:0.4412, tok/sec: 186567.49, flops:163.41, batch-reuse:1
@ 1397 train 4.3622 , allloss: 4.3622, dt: 702.41ms, fracRes: 0.2112, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8189, norm(y): 0.9941, norm:0.4083, tok/sec: 186603.90, flops:163.44, batch-reuse:1
@ 1398 train 4.3258 , allloss: 4.3258, dt: 694.70ms, fracRes: 0.2132, norm(attn): 0.3730, norm(output): 0.7383, norm(x): 0.8204, norm(y): 0.9940, norm:0.4096, tok/sec: 188674.83, flops:165.25, batch-reuse:1
@ 1399 train 4.2970 , allloss: 4.2970, dt: 709.98ms, fracRes: 0.2158, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8232, norm(y): 0.9940, norm:0.4148, tok/sec: 184613.03, flops:161.69, batch-reuse:1
@ 1400 train 4.4219 , allloss: 4.4219, dt: 709.65ms, fracRes: 0.2153, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8208, norm(y): 0.9940, norm:0.4248, tok/sec: 184699.49, flops:161.77, batch-reuse:1
@ 1401 train 4.3005 , allloss: 4.3005, dt: 710.85ms, fracRes: 0.2127, norm(attn): 0.3730, norm(output): 0.7422, norm(x): 0.8205, norm(y): 0.9939, norm:0.4187, tok/sec: 184388.14, flops:161.50, batch-reuse:1
@ 1402 train 4.2789 , allloss: 4.2789, dt: 699.80ms, fracRes: 0.2141, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8192, norm(y): 0.9939, norm:0.4661, tok/sec: 187298.84, flops:164.05, batch-reuse:1
@ 1403 train 4.3799 , allloss: 4.3799, dt: 698.36ms, fracRes: 0.2152, norm(attn): 0.3711, norm(output): 0.7305, norm(x): 0.8188, norm(y): 0.9938, norm:0.4608, tok/sec: 187685.57, flops:164.39, batch-reuse:1
@ 1404 train 4.3007 , allloss: 4.3007, dt: 689.11ms, fracRes: 0.2163, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8172, norm(y): 0.9937, norm:0.4133, tok/sec: 190204.68, flops:166.59, batch-reuse:1
@ 1405 train 4.2986 , allloss: 4.2986, dt: 688.34ms, fracRes: 0.2143, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8151, norm(y): 0.9937, norm:0.4259, tok/sec: 190417.74, flops:166.78, batch-reuse:1
@ 1406 train 4.4596 , allloss: 4.4596, dt: 695.02ms, fracRes: 0.2150, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8135, norm(y): 0.9938, norm:0.4150, tok/sec: 188588.23, flops:165.18, batch-reuse:1
@ 1407 train 4.3183 , allloss: 4.3183, dt: 686.77ms, fracRes: 0.2165, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8140, norm(y): 0.9938, norm:0.4557, tok/sec: 190853.04, flops:167.16, batch-reuse:1
@ 1408 train 4.2983 , allloss: 4.2983, dt: 693.73ms, fracRes: 0.2166, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8192, norm(y): 0.9938, norm:0.4375, tok/sec: 188937.25, flops:165.48, batch-reuse:1
@ 1409 train 4.3314 , allloss: 4.3314, dt: 693.95ms, fracRes: 0.2136, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8184, norm(y): 0.9940, norm:0.4332, tok/sec: 188877.01, flops:165.43, batch-reuse:1
@ 1410 train 4.3251 , allloss: 4.3251, dt: 692.19ms, fracRes: 0.2149, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8186, norm(y): 0.9940, norm:0.3861, tok/sec: 189358.89, flops:165.85, batch-reuse:1
@ 1411 train 4.2971 , allloss: 4.2971, dt: 695.01ms, fracRes: 0.2111, norm(attn): 0.3770, norm(output): 0.7266, norm(x): 0.8113, norm(y): 0.9941, norm:0.4670, tok/sec: 188589.14, flops:165.18, batch-reuse:1
@ 1412 train 4.2612 , allloss: 4.2612, dt: 695.14ms, fracRes: 0.2145, norm(attn): 0.3730, norm(output): 0.7227, norm(x): 0.8147, norm(y): 0.9939, norm:0.4692, tok/sec: 188555.11, flops:165.15, batch-reuse:1
@ 1413 train 4.3531 , allloss: 4.3531, dt: 692.73ms, fracRes: 0.2175, norm(attn): 0.3691, norm(output): 0.7188, norm(x): 0.8097, norm(y): 0.9939, norm:0.4388, tok/sec: 189210.62, flops:165.72, batch-reuse:1
@ 1414 train 4.2541 , allloss: 4.2541, dt: 686.57ms, fracRes: 0.2157, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8139, norm(y): 0.9939, norm:0.3942, tok/sec: 190908.32, flops:167.21, batch-reuse:1
@ 1415 train 4.4269 , allloss: 4.4269, dt: 701.60ms, fracRes: 0.2122, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8158, norm(y): 0.9940, norm:0.4558, tok/sec: 186817.54, flops:163.63, batch-reuse:1
@ 1416 train 4.3076 , allloss: 4.3076, dt: 694.91ms, fracRes: 0.2110, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8220, norm(y): 0.9940, norm:0.4486, tok/sec: 188617.61, flops:165.20, batch-reuse:1
@ 1417 train 4.3806 , allloss: 4.3806, dt: 696.30ms, fracRes: 0.2115, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8241, norm(y): 0.9940, norm:0.4335, tok/sec: 188240.63, flops:164.87, batch-reuse:1
@ 1418 train 4.3099 , allloss: 4.3099, dt: 698.07ms, fracRes: 0.2107, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8222, norm(y): 0.9941, norm:0.4577, tok/sec: 187763.26, flops:164.45, batch-reuse:1
@ 1419 train 4.3859 , allloss: 4.3859, dt: 693.57ms, fracRes: 0.2137, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8194, norm(y): 0.9940, norm:0.4388, tok/sec: 188980.37, flops:165.52, batch-reuse:1
@ 1420 train 4.3738 , allloss: 4.3738, dt: 678.91ms, fracRes: 0.2164, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8209, norm(y): 0.9940, norm:0.4766, tok/sec: 193062.54, flops:169.09, batch-reuse:1
@ 1421 train 4.3191 , allloss: 4.3191, dt: 695.43ms, fracRes: 0.2120, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8167, norm(y): 0.9940, norm:0.4535, tok/sec: 188477.09, flops:165.08, batch-reuse:1
@ 1422 train 4.3147 , allloss: 4.3147, dt: 691.18ms, fracRes: 0.2146, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8193, norm(y): 0.9939, norm:0.4015, tok/sec: 189635.97, flops:166.09, batch-reuse:1
@ 1423 train 4.2825 , allloss: 4.2825, dt: 697.17ms, fracRes: 0.2160, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8192, norm(y): 0.9938, norm:0.4722, tok/sec: 188007.01, flops:164.67, batch-reuse:1
@ 1424 train 4.3238 , allloss: 4.3238, dt: 698.52ms, fracRes: 0.2176, norm(attn): 0.3770, norm(output): 0.7305, norm(x): 0.8190, norm(y): 0.9939, norm:0.4502, tok/sec: 187641.56, flops:164.35, batch-reuse:1
@ 1425 train 4.3130 , allloss: 4.3130, dt: 694.86ms, fracRes: 0.2204, norm(attn): 0.3770, norm(output): 0.7305, norm(x): 0.8196, norm(y): 0.9939, norm:0.4182, tok/sec: 188631.13, flops:165.21, batch-reuse:1
@ 1426 train 4.1972 , allloss: 4.1972, dt: 691.69ms, fracRes: 0.2197, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8200, norm(y): 0.9939, norm:0.3947, tok/sec: 189496.48, flops:165.97, batch-reuse:1
@ 1427 train 4.2907 , allloss: 4.2907, dt: 694.15ms, fracRes: 0.2178, norm(attn): 0.3711, norm(output): 0.7305, norm(x): 0.8193, norm(y): 0.9938, norm:0.4100, tok/sec: 188823.81, flops:165.38, batch-reuse:1
@ 1428 train 4.2810 , allloss: 4.2810, dt: 678.67ms, fracRes: 0.2181, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8176, norm(y): 0.9938, norm:0.3897, tok/sec: 193129.89, flops:169.15, batch-reuse:1
@ 1429 train 4.2504 , allloss: 4.2504, dt: 687.95ms, fracRes: 0.2131, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8166, norm(y): 0.9939, norm:0.5144, tok/sec: 190524.64, flops:166.87, batch-reuse:1
@ 1430 train 4.3428 , allloss: 4.3428, dt: 705.24ms, fracRes: 0.2155, norm(attn): 0.3730, norm(output): 0.7266, norm(x): 0.8158, norm(y): 0.9939, norm:0.4336, tok/sec: 185854.71, flops:162.78, batch-reuse:1
@ 1431 train 4.2754 , allloss: 4.2754, dt: 690.46ms, fracRes: 0.2147, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8178, norm(y): 0.9939, norm:0.3974, tok/sec: 189833.66, flops:166.27, batch-reuse:1
@ 1432 train 4.2560 , allloss: 4.2560, dt: 706.01ms, fracRes: 0.2169, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8181, norm(y): 0.9939, norm:0.4281, tok/sec: 185651.36, flops:162.60, batch-reuse:1
@ 1433 train 4.3014 , allloss: 4.3014, dt: 705.02ms, fracRes: 0.2178, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8187, norm(y): 0.9939, norm:0.4316, tok/sec: 185911.65, flops:162.83, batch-reuse:1
@ 1434 train 4.3108 , allloss: 4.3108, dt: 696.50ms, fracRes: 0.2180, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8169, norm(y): 0.9939, norm:0.4216, tok/sec: 188185.66, flops:164.82, batch-reuse:1
@ 1435 train 4.2566 , allloss: 4.2566, dt: 693.34ms, fracRes: 0.2179, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8134, norm(y): 0.9939, norm:0.4408, tok/sec: 189045.36, flops:165.58, batch-reuse:1
@ 1436 train 4.2709 , allloss: 4.2709, dt: 695.10ms, fracRes: 0.2181, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8160, norm(y): 0.9938, norm:0.4387, tok/sec: 188566.82, flops:165.16, batch-reuse:1
@ 1437 train 4.2749 , allloss: 4.2749, dt: 679.73ms, fracRes: 0.2141, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8178, norm(y): 0.9939, norm:0.4320, tok/sec: 192830.67, flops:168.89, batch-reuse:1
@ 1438 train 4.1643 , allloss: 4.1643, dt: 696.16ms, fracRes: 0.2145, norm(attn): 0.3770, norm(output): 0.7383, norm(x): 0.8227, norm(y): 0.9940, norm:0.4269, tok/sec: 188277.70, flops:164.90, batch-reuse:1
@ 1439 train 4.1969 , allloss: 4.1969, dt: 696.94ms, fracRes: 0.2148, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8243, norm(y): 0.9939, norm:0.4610, tok/sec: 188069.14, flops:164.72, batch-reuse:1
@ 1440 train 4.2211 , allloss: 4.2211, dt: 694.83ms, fracRes: 0.2185, norm(attn): 0.3730, norm(output): 0.7344, norm(x): 0.8229, norm(y): 0.9938, norm:0.4200, tok/sec: 188639.68, flops:165.22, batch-reuse:1
@ 1441 train 4.2103 , allloss: 4.2103, dt: 695.71ms, fracRes: 0.2211, norm(attn): 0.3691, norm(output): 0.7305, norm(x): 0.8194, norm(y): 0.9938, norm:0.4340, tok/sec: 188400.87, flops:165.01, batch-reuse:1
@ 1442 train 4.2206 , allloss: 4.2206, dt: 686.02ms, fracRes: 0.2186, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8209, norm(y): 0.9939, norm:0.5139, tok/sec: 191062.78, flops:167.34, batch-reuse:1
@ 1443 train 4.1980 , allloss: 4.1980, dt: 700.44ms, fracRes: 0.2208, norm(attn): 0.3730, norm(output): 0.7344, norm(x): 0.8246, norm(y): 0.9938, norm:0.4306, tok/sec: 187126.96, flops:163.90, batch-reuse:1
@ 1444 train 4.1834 , allloss: 4.1834, dt: 699.96ms, fracRes: 0.2189, norm(attn): 0.3711, norm(output): 0.7344, norm(x): 0.8248, norm(y): 0.9939, norm:0.4273, tok/sec: 187256.86, flops:164.01, batch-reuse:1
@ 1445 train 4.1903 , allloss: 4.1903, dt: 691.48ms, fracRes: 0.2190, norm(attn): 0.3730, norm(output): 0.7383, norm(x): 0.8263, norm(y): 0.9940, norm:0.4841, tok/sec: 189551.95, flops:166.02, batch-reuse:1
@ 1446 train 4.2424 , allloss: 4.2424, dt: 694.61ms, fracRes: 0.2200, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8267, norm(y): 0.9940, norm:0.4600, tok/sec: 188699.50, flops:165.27, batch-reuse:1
@ 1447 train 4.2229 , allloss: 4.2229, dt: 685.43ms, fracRes: 0.2259, norm(attn): 0.3770, norm(output): 0.7344, norm(x): 0.8283, norm(y): 0.9939, norm:0.4552, tok/sec: 191226.00, flops:167.49, batch-reuse:1
@ 1448 train 4.2220 , allloss: 4.2220, dt: 684.45ms, fracRes: 0.2232, norm(attn): 0.3730, norm(output): 0.7383, norm(x): 0.8277, norm(y): 0.9939, norm:0.4801, tok/sec: 191500.24, flops:167.73, batch-reuse:1
@ 1449 train 4.3232 , allloss: 4.3232, dt: 698.16ms, fracRes: 0.2187, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8249, norm(y): 0.9941, norm:0.4390, tok/sec: 187738.19, flops:164.43, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0054, 0.9961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0030, 0.4023, 0.5938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0466, 0.2676, 0.4961, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0193, 0.4492, 0.3711, 0.1230, 0.0366, 0.0000, 0.0000, 0.0000],
        [0.0198, 0.3242, 0.4473, 0.1289, 0.0366, 0.0430, 0.0000, 0.0000],
        [0.0070, 0.1602, 0.3281, 0.1523, 0.1240, 0.1099, 0.1177, 0.0000],
        [0.0097, 0.0796, 0.2090, 0.0869, 0.1006, 0.1982, 0.2061, 0.1104]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0080, -0.4395, -0.5039, -0.4922, -0.6133, -0.5586, -0.4277, -0.2910],
        [-0.0427,  5.1875,  4.5312,  3.0469,  3.8906,  3.8750,  3.0156,  2.5781],
        [-0.0679,  4.8438,  5.2188,  5.0000,  5.4062,  4.8438,  4.1875,  3.9062],
        [-0.0513,  1.6953,  2.3125,  1.3438,  2.5469,  2.6250,  1.7891,  1.3828],
        [-0.0087,  3.1406,  2.9531,  1.8438,  0.6328,  1.3984,  1.3359,  1.3438],
        [-0.0168,  2.7812,  3.0938,  1.8516,  0.5977,  0.7539,  1.6406,  1.4531],
        [-0.0659,  3.0625,  3.7812,  3.0156,  2.7969,  2.6875,  2.7500,  2.2031],
        [-0.0569,  2.0469,  3.0156,  2.1406,  2.2812,  2.9531,  3.0000,  2.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7481],
        [0.2277],
        [0.1954],
        [0.3294],
        [0.2769],
        [0.1385],
        [0.1491],
        [0.2209],
        [0.1329],
        [0.2483],
        [0.0893],
        [0.1066],
        [0.2035],
        [0.0855]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0056,     0.0066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0014,     0.0102,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0002,     0.0092,     0.0001,     0.0015,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0015,     0.0168,     0.0008,     0.0003,     0.0006,     0.0000,     0.0000],
        [    0.9688,     0.0009,     0.0282,     0.0001,     0.0001,     0.0002,     0.0002,     0.0000],
        [    0.9219,     0.0006,     0.0078,     0.0002,     0.0001,     0.0002,     0.0001,     0.0708]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0015,     -0.0991,     -0.0126,     -0.1299,     -0.1748,     -0.1021,     -0.1533,     -0.0894],
        [    -0.0050,     -6.0625,     -1.2969,     -8.1875,     -7.3125,     -7.7188,     -9.5625,     -7.6562],
        [    -0.0275,     -5.1875,     -5.0312,     -1.5156,     -7.5000,    -10.3750,     -8.0625,     -7.3125],
        [    -0.0591,     -6.6562,     -4.6250,     -6.0625,     -4.5000,     -8.9375,     -7.7188,     -4.0625],
        [    -0.0801,     -8.3750,     -4.7500,     -9.4375,     -6.5938,     -4.1875,     -9.1250,     -5.3125],
        [    -0.0393,     -6.5000,     -4.0938,     -7.1250,     -8.1875,     -7.4688,     -5.3438,     -3.6250],
        [    -0.0840,     -7.0938,     -3.6250,     -8.8750,     -9.8125,     -8.5000,     -8.5000,     -2.3281],
        [    -0.1187,     -7.5000,     -4.9062,     -8.5000,     -9.7500,     -8.8125,     -9.7500,     -2.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6919],
        [0.6853],
        [0.6861],
        [0.7835],
        [0.7874],
        [0.6394],
        [0.5889],
        [0.5340],
        [0.5603],
        [0.5665],
        [0.5066],
        [0.5304],
        [0.5085],
        [0.5670]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0160, 0.9844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0522, 0.7227, 0.2266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0104, 0.4531, 0.1504, 0.3867, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0139, 0.2773, 0.0923, 0.1621, 0.4551, 0.0000, 0.0000, 0.0000],
        [0.0033, 0.1875, 0.0593, 0.1118, 0.2930, 0.3457, 0.0000, 0.0000],
        [0.0045, 0.1445, 0.0557, 0.1021, 0.2197, 0.2539, 0.2178, 0.0000],
        [0.0042, 0.1133, 0.0334, 0.0806, 0.2451, 0.2129, 0.2090, 0.1006]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0135,     -0.1113,     -0.1357,     -0.1660,     -0.0874,     -0.1562,     -0.1328,     -0.1973],
        [    -0.0044,      4.1250,      2.7656,      3.4062,      4.5625,      4.5938,      4.6250,      3.7969],
        [     0.0243,      2.6406,      1.4922,      2.1406,      3.4219,      3.1406,      3.2969,      2.2969],
        [    -0.0532,      3.7188,      2.6094,      3.5625,      4.1875,      4.3438,      4.3750,      3.9531],
        [     0.0388,      3.0312,      1.9297,      2.5000,      3.5312,      3.5938,      3.6562,      2.8750],
        [    -0.0474,      4.0000,      2.8438,      3.4688,      4.4375,      4.5938,      4.7812,      4.0625],
        [    -0.0209,      3.4688,      2.5000,      3.1094,      3.8750,      4.0312,      3.8750,      3.1719],
        [     0.0047,      3.2969,      2.0781,      2.9531,      4.0625,      3.9219,      3.9062,      3.1719]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8324],
        [0.6709],
        [0.6821],
        [0.6666],
        [0.6146],
        [0.5082],
        [0.4861],
        [0.4550],
        [0.4692],
        [0.4631],
        [0.4366],
        [0.4298],
        [0.4229],
        [0.4195]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9688, 0.0306, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1211, 0.3770, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3379, 0.1177, 0.3652, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.1216, 0.2490, 0.2988, 0.0275, 0.0000, 0.0000, 0.0000],
        [0.0598, 0.0620, 0.1953, 0.3340, 0.1226, 0.2266, 0.0000, 0.0000],
        [0.1279, 0.0840, 0.2852, 0.2295, 0.0500, 0.1270, 0.0972, 0.0000],
        [0.0183, 0.0369, 0.0903, 0.1035, 0.0220, 0.0771, 0.2100, 0.4414]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0042, -0.3105, -0.2461, -0.2930, -0.3105, -0.2930, -0.4023, -0.4043],
        [-0.0271, -3.4844, -0.1748, -0.9258, -1.9688, -1.0391, -1.6562, -0.9180],
        [-0.0659,  1.0703,  1.3594,  2.2344,  1.0234,  2.4375,  2.1875,  3.8594],
        [-0.0500, -1.1094,  0.0258, -0.6914, -1.0781,  0.2637, -0.2305,  0.4336],
        [-0.1128, -1.0312, -0.3105, -0.1279, -2.5156,  0.5977, -0.4590,  1.1641],
        [-0.1128, -0.0757,  1.0703,  1.6094,  0.6055,  1.2188,  1.5391,  3.9062],
        [-0.1318, -0.5547,  0.6680,  0.4531, -1.0703, -0.1436, -0.4043,  2.6094],
        [-0.1338,  0.5664,  1.4609,  1.6016,  0.0510,  1.3125,  2.3125,  3.0469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6914],
        [0.2847],
        [0.4462],
        [0.3466],
        [0.2841],
        [0.2395],
        [0.1865],
        [0.1767],
        [0.1769],
        [0.1731],
        [0.1717],
        [0.1703],
        [0.1679],
        [0.1702]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6953,     0.3047,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.9414,     0.0586,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2119,     0.7617,     0.0013,     0.0249,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0219,     0.0000,     0.0003,     0.9766,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0001,     0.0000,     0.0000,     0.8203,     0.1777,     0.0000,     0.0000],
        [    0.0046,     0.0014,     0.0000,     0.0001,     0.0188,     0.8633,     0.1138,     0.0000],
        [    0.0005,     0.0006,     0.0000,     0.0000,     0.0013,     0.0043,     0.2617,     0.7305]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0004,     -0.1211,     -0.2500,     -0.2207,     -0.0928,     -0.1318,     -0.1621,     -0.2168],
        [    -0.0243,     -0.8516,     -8.3125,     -5.6250,     -1.3906,     -2.5312,     -2.9375,     -3.3281],
        [    -0.0374,      6.8750,      4.0938,      4.7188,      1.2344,     -0.9102,      2.0781,      0.3398],
        [    -0.0537,      1.2266,     -5.1250,     -2.2031,      0.1230,     -1.1016,      0.3203,     -3.7812],
        [    -0.0354,      3.0625,     -3.0938,     -1.1719,      6.8750,      3.6562,      0.6562,     -0.1816],
        [    -0.0552,     -1.6562,     -8.1875,     -6.1250,      7.1562,      5.6250,      0.1270,     -2.8438],
        [    -0.0806,     -1.2578,     -5.5000,     -3.9844,      1.3281,      5.1562,      3.1250,      1.1094],
        [    -0.0952,      0.1260,     -6.7500,     -6.0938,      0.8516,      2.0312,      6.1562,      7.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8470],
        [0.4277],
        [0.5138],
        [0.5016],
        [0.4555],
        [0.4227],
        [0.4061],
        [0.3488],
        [0.3577],
        [0.3466],
        [0.3168],
        [0.2980],
        [0.2717],
        [0.3053]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0050,     -0.3926,     -0.5781,     -0.5820,     -0.4395,     -0.4180,     -0.5859,     -0.4609],
        [    -0.2109,    -17.0000,    -24.3750,    -24.6250,    -17.7500,    -16.8750,    -22.3750,    -18.0000],
        [    -0.1953,    -15.6250,    -20.8750,    -21.2500,    -15.8125,    -14.0625,    -21.0000,    -16.5000],
        [    -0.1738,    -16.0000,    -22.6250,    -22.7500,    -17.5000,    -16.1250,    -21.7500,    -16.6250],
        [    -0.1934,    -16.7500,    -26.5000,    -25.6250,    -19.5000,    -18.2500,    -24.7500,    -19.3750],
        [    -0.1680,    -14.6250,    -21.0000,    -21.3750,    -15.7500,    -14.5000,    -20.6250,    -15.7500],
        [    -0.2500,    -21.2500,    -33.2500,    -32.2500,    -23.8750,    -22.7500,    -30.8750,    -24.0000],
        [    -0.1777,    -15.5625,    -23.3750,    -22.6250,    -15.6250,    -15.0000,    -19.1250,    -14.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7047],
        [0.4153],
        [0.5004],
        [0.6138],
        [0.5413],
        [0.5039],
        [0.4848],
        [0.5243],
        [0.5229],
        [0.5519],
        [0.4573],
        [0.5186],
        [0.4639],
        [0.3713]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0928,     0.8633,     0.0432,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8828,     0.0586,     0.0056,     0.0537,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0063,     -0.4492,     -0.3516,     -0.5547,     -0.7031,     -0.3906,     -0.6445,     -0.6367],
        [    -0.2207,    -14.5000,    -14.8750,    -20.0000,    -24.1250,    -14.5000,    -22.0000,    -21.1250],
        [     0.0432,      2.2656,     -0.7266,      2.6875,      3.0156,      0.6797,      2.0000,      2.6719],
        [    -0.0361,     -2.7500,     -5.0938,     -2.8281,     -2.5938,     -3.2031,     -4.0625,     -3.5938],
        [    -0.1689,    -11.5000,    -10.9375,    -14.3750,    -17.6250,    -11.0000,    -16.3750,    -15.3125],
        [    -0.2129,    -14.0000,    -11.3750,    -17.2500,    -20.6250,    -11.3125,    -19.1250,    -18.3750],
        [    -0.2500,    -17.6250,    -14.8750,    -21.0000,    -25.8750,    -14.7500,    -23.8750,    -22.8750],
        [    -0.2354,    -16.6250,    -12.5625,    -20.7500,    -25.8750,    -13.6875,    -23.1250,    -23.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8389],
        [0.2142],
        [0.4226],
        [0.7355],
        [0.5821],
        [0.7159],
        [0.6724],
        [0.7009],
        [0.5710],
        [0.5958],
        [0.2811],
        [0.7348],
        [0.5790],
        [0.2817]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4453,     0.5234,     0.0298,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0386,     0.0022,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0029,     -0.2656,     -0.4355,     -0.4141,     -0.3730,     -0.3535,     -0.3848,     -0.3574],
        [    -0.1406,    -14.1250,    -20.3750,    -19.8750,    -17.0000,    -17.1250,    -17.0000,    -17.8750],
        [    -0.0031,      0.1582,     -2.7031,     -2.4375,     -1.1250,     -0.5469,     -2.7812,     -0.8750],
        [    -0.0413,     -3.2500,     -6.0938,     -6.0938,     -6.0312,     -5.8125,     -6.5938,     -5.0312],
        [    -0.1387,    -11.6250,    -19.2500,    -18.0000,    -17.2500,    -16.0000,    -15.9375,    -15.3750],
        [    -0.2539,    -22.0000,    -37.0000,    -35.0000,    -32.5000,    -30.5000,    -32.7500,    -31.0000],
        [    -0.0962,     -7.6562,    -13.9375,    -12.3125,    -11.3125,    -11.1250,    -11.4375,    -10.9375],
        [    -0.1260,    -11.3750,    -19.1250,    -18.1250,    -16.2500,    -14.8125,    -16.3750,    -16.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9922],
        [0.2069],
        [0.4214],
        [0.9421],
        [0.9964],
        [0.8316],
        [0.9486],
        [0.9958],
        [0.8908],
        [1.0000],
        [0.1729],
        [1.0000],
        [1.0000],
        [0.3684]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8281,     0.1709,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.7656,     0.2314,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.3125,     0.0864,     0.6016,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0938,     0.0134,     0.6914,     0.1865,     0.0159,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0006,     0.0077,     0.0006,     0.0009,     0.0004,     0.0000,     0.0000],
        [    0.0117,     0.0664,     0.1504,     0.2090,     0.0564,     0.2695,     0.2373,     0.0000],
        [    0.1465,     0.1582,     0.0732,     0.1143,     0.1689,     0.0894,     0.1196,     0.1299]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0032,     -0.0100,     -0.0110,     -0.0101,     -0.0049,     -0.0114,     -0.0107],
        [    -0.0139,     -1.5938,     -1.5469,     -1.7266,     -1.7188,     -1.5234,     -1.4141,     -1.4609],
        [     0.0376,      5.6875,      4.5000,      5.7812,      5.6875,      6.5000,      5.9062,      5.1875],
        [     0.0508,      7.3125,      6.0312,      7.9688,      7.2188,      8.6250,      7.5938,      7.3750],
        [     0.0016,     -1.9453,      2.0000,      0.6875,     -1.7812,     -0.4375,      0.1572,      0.1768],
        [    -0.0479,     -7.5000,     -4.9062,     -7.5312,     -7.0312,     -7.8125,     -7.2188,     -6.2812],
        [     0.0152,      1.7500,      2.5625,      2.9062,      1.5859,      3.1562,      3.0312,      2.4844],
        [    -0.0034,      0.0732,     -0.6953,     -0.2500,      0.1406,     -0.4961,     -0.2041,     -0.1201]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.5456],
        [    0.0005],
        [    0.0001],
        [    0.6165],
        [    0.9443],
        [    0.1169],
        [    0.5427],
        [    0.9743],
        [    0.4858],
        [    0.9997],
        [    0.0046],
        [    0.9990],
        [    0.9401],
        [    0.0185]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1348,     0.8672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0288,     0.4883,     0.4824,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0171,     0.3301,     0.3574,     0.2949,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0029,     0.1797,     0.3672,     0.3184,     0.1309,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0015,     0.0004,     0.0004,     0.0008,     0.0007,     0.0000,     0.0000],
        [    0.0060,     0.1641,     0.1885,     0.1514,     0.1045,     0.2500,     0.1357,     0.0000],
        [    0.0474,     0.1699,     0.1699,     0.1367,     0.0830,     0.1787,     0.1177,     0.0977]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0317,     -0.0359,     -0.0354,     -0.0298,     -0.0308,     -0.0369,     -0.0347],
        [     0.0003,      1.8594,      3.1094,      2.9531,      2.0312,      2.0312,      2.8125,      2.0312],
        [    -0.0031,      2.8281,      2.8125,      2.6250,      2.6562,      3.5625,      2.6562,      2.4062],
        [    -0.0027,      2.9531,      3.0312,      2.8438,      2.6562,      3.6406,      2.8438,      2.5469],
        [    -0.0003,      4.1250,      4.8438,      4.7188,      3.8125,      3.9531,      4.5625,      3.7812],
        [    -0.0024,     -6.4688,     -7.8438,     -7.7812,     -7.0625,     -7.2812,     -8.0000,     -7.1562],
        [    -0.0037,      3.2969,      3.4375,      3.2188,      2.8438,      3.7344,      3.1094,      2.7500],
        [    -0.0021,      1.2734,      1.2734,      1.0547,      0.5586,      1.3281,      0.9062,      0.7227]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3519],
        [0.0368],
        [0.0269],
        [0.0812],
        [0.8745],
        [0.0260],
        [0.2562],
        [0.5819],
        [0.2949],
        [0.8206],
        [0.0077],
        [0.7357],
        [0.4774],
        [0.0062]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6094, 0.3926, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3672, 0.3496, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.2793, 0.2227, 0.2188, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.2090, 0.1963, 0.1973, 0.1904, 0.0000, 0.0000, 0.0000],
        [0.3730, 0.1221, 0.1621, 0.1465, 0.1768, 0.0188, 0.0000, 0.0000],
        [0.1465, 0.1445, 0.1240, 0.1245, 0.1260, 0.2188, 0.1157, 0.0000],
        [0.1748, 0.1201, 0.1270, 0.1235, 0.1279, 0.0845, 0.1240, 0.1187]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0012,     -0.0033,     -0.0032,     -0.0016,      0.0002,     -0.0036,     -0.0022],
        [     0.0000,     -0.4395,     -0.1475,     -0.1719,     -0.2295,     -0.6523,     -0.1924,     -0.3164],
        [     0.0002,     -0.0505,     -0.2637,     -0.2734,     -0.1777,      0.1797,     -0.3145,     -0.0605],
        [     0.0003,     -0.0022,     -0.2256,     -0.2441,     -0.1260,      0.2148,     -0.2715,     -0.0194],
        [     0.0005,      0.0100,     -0.0496,     -0.0449,     -0.0791,      0.3789,     -0.1182,      0.0605],
        [    -0.0028,     -1.1250,     -0.8359,     -0.9375,     -0.7539,     -3.0000,     -0.8008,     -1.2578],
        [     0.0005,     -0.0152,     -0.1670,     -0.1660,     -0.1533,      0.3965,     -0.2393,      0.0254],
        [    -0.0007,     -0.3789,     -0.3262,     -0.3516,     -0.3164,     -0.7266,     -0.3477,     -0.3926]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8037],
        [0.5664],
        [0.4608],
        [0.4005],
        [0.6391],
        [0.2370],
        [0.3888],
        [0.3700],
        [0.3989],
        [0.3644],
        [0.1489],
        [0.3495],
        [0.3120],
        [0.1078]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0070, 0.9922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0022, 0.3809, 0.6172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0011, 0.2412, 0.4082, 0.3496, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0011, 0.2021, 0.3477, 0.2910, 0.1592, 0.0000, 0.0000, 0.0000],
        [0.0061, 0.1943, 0.3027, 0.2559, 0.1562, 0.0850, 0.0000, 0.0000],
        [0.0015, 0.1787, 0.2910, 0.2412, 0.1338, 0.0581, 0.0957, 0.0000],
        [0.0013, 0.1572, 0.2578, 0.2168, 0.1235, 0.0537, 0.0894, 0.0996]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0359,      0.0393,      0.0378,      0.0332,      0.0281,      0.0304,      0.0315],
        [    -0.0105,      4.9375,      5.4688,      5.3750,      4.8438,      4.0625,      4.5938,      4.6562],
        [    -0.0107,      5.1562,      5.6562,      5.5312,      5.0312,      4.2500,      4.7500,      4.8438],
        [    -0.0118,      5.3750,      5.9062,      5.7500,      5.1875,      4.3125,      4.8750,      4.9688],
        [    -0.0122,      5.2188,      5.7812,      5.5938,      5.0000,      4.1250,      4.6562,      4.7500],
        [    -0.0089,      3.4531,      3.8906,      3.7344,      3.2344,      2.6250,      2.9844,      3.0625],
        [    -0.0118,      4.7812,      5.2812,      5.0938,      4.5000,      3.6719,      4.1562,      4.2812],
        [    -0.0115,      4.8125,      5.3125,      5.1250,      4.5625,      3.7344,      4.2500,      4.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0410],
        [0.0037],
        [0.0023],
        [0.0021],
        [0.0463],
        [0.0015],
        [0.0024],
        [0.0033],
        [0.0023],
        [0.0034],
        [0.0012],
        [0.0029],
        [0.0015],
        [0.0011]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( cannabin:0.0033 cannabin:0.0038 cannabin:0.0034装:0.0041ェ:0.0047装:0.0037ェ:0.0043ェ:0.0052)
ェ
------
		( cannabin:0.0038 cannabin:0.0034装:0.0041ェ:0.0047装:0.0037ェ:0.0043ェ:0.0052ェ:0.0052)
ェェェェ装装装装装装装装装装装
@ 1450 train 4.2769 , allloss: 4.2769, dt: 1106.64ms, fracRes: 0.2189, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8253, norm(y): 0.9941, norm:0.4855, tok/sec: 118441.55, flops:103.74, batch-reuse:1
@ 1451 train 4.2022 , allloss: 4.2022, dt: 700.18ms, fracRes: 0.2191, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8263, norm(y): 0.9940, norm:0.4707, tok/sec: 187197.12, flops:163.96, batch-reuse:1
@ 1452 train 4.1965 , allloss: 4.1965, dt: 687.92ms, fracRes: 0.2179, norm(attn): 0.3770, norm(output): 0.7383, norm(x): 0.8266, norm(y): 0.9941, norm:0.4350, tok/sec: 190534.62, flops:166.88, batch-reuse:1
@ 1453 train 4.2978 , allloss: 4.2978, dt: 698.03ms, fracRes: 0.2185, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8272, norm(y): 0.9941, norm:0.4891, tok/sec: 187775.38, flops:164.46, batch-reuse:1
@ 1454 train 4.2466 , allloss: 4.2466, dt: 702.46ms, fracRes: 0.2171, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8238, norm(y): 0.9940, norm:0.4500, tok/sec: 186590.10, flops:163.43, batch-reuse:1
@ 1455 train 4.1482 , allloss: 4.1482, dt: 706.27ms, fracRes: 0.2186, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8241, norm(y): 0.9939, norm:0.4426, tok/sec: 185582.55, flops:162.54, batch-reuse:1
@ 1456 train 4.1993 , allloss: 4.1993, dt: 697.62ms, fracRes: 0.2173, norm(attn): 0.3711, norm(output): 0.7344, norm(x): 0.8177, norm(y): 0.9938, norm:0.4891, tok/sec: 187885.32, flops:164.56, batch-reuse:1
@ 1457 train 4.2304 , allloss: 4.2304, dt: 692.50ms, fracRes: 0.2176, norm(attn): 0.3711, norm(output): 0.7227, norm(x): 0.8135, norm(y): 0.9938, norm:0.4427, tok/sec: 189273.09, flops:165.78, batch-reuse:1
@ 1458 train 4.2499 , allloss: 4.2499, dt: 698.51ms, fracRes: 0.2184, norm(attn): 0.3750, norm(output): 0.7266, norm(x): 0.8165, norm(y): 0.9939, norm:0.4690, tok/sec: 187645.02, flops:164.35, batch-reuse:1
@ 1459 train 4.2643 , allloss: 4.2643, dt: 690.86ms, fracRes: 0.2177, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8194, norm(y): 0.9939, norm:0.4758, tok/sec: 189723.93, flops:166.17, batch-reuse:1
@ 1460 train 4.2726 , allloss: 4.2726, dt: 703.38ms, fracRes: 0.2176, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8218, norm(y): 0.9939, norm:0.4136, tok/sec: 186344.64, flops:163.21, batch-reuse:1
@ 1461 train 4.1650 , allloss: 4.1650, dt: 699.71ms, fracRes: 0.2189, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8248, norm(y): 0.9939, norm:0.4298, tok/sec: 187324.31, flops:164.07, batch-reuse:1
@ 1462 train 4.1976 , allloss: 4.1976, dt: 680.84ms, fracRes: 0.2222, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8242, norm(y): 0.9938, norm:0.4196, tok/sec: 192514.72, flops:168.62, batch-reuse:1
@ 1463 train 4.2293 , allloss: 4.2293, dt: 689.39ms, fracRes: 0.2229, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8249, norm(y): 0.9938, norm:0.4145, tok/sec: 190128.57, flops:166.53, batch-reuse:1
@ 1464 train 4.2408 , allloss: 4.2408, dt: 690.19ms, fracRes: 0.2232, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8250, norm(y): 0.9939, norm:0.4282, tok/sec: 189906.91, flops:166.33, batch-reuse:1
@ 1465 train 4.1174 , allloss: 4.1174, dt: 700.77ms, fracRes: 0.2228, norm(attn): 0.3730, norm(output): 0.7344, norm(x): 0.8247, norm(y): 0.9938, norm:0.4135, tok/sec: 187038.72, flops:163.82, batch-reuse:1
@ 1466 train 4.1184 , allloss: 4.1184, dt: 684.68ms, fracRes: 0.2221, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8215, norm(y): 0.9937, norm:0.4109, tok/sec: 191436.55, flops:167.67, batch-reuse:1
@ 1467 train 4.2162 , allloss: 4.2162, dt: 701.29ms, fracRes: 0.2219, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8279, norm(y): 0.9938, norm:0.4008, tok/sec: 186901.82, flops:163.70, batch-reuse:1
@ 1468 train 4.2337 , allloss: 4.2337, dt: 687.28ms, fracRes: 0.2234, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8275, norm(y): 0.9938, norm:0.4073, tok/sec: 190711.69, flops:167.04, batch-reuse:1
@ 1469 train 4.3040 , allloss: 4.3040, dt: 693.60ms, fracRes: 0.2152, norm(attn): 0.3809, norm(output): 0.7422, norm(x): 0.8287, norm(y): 0.9939, norm:0.5275, tok/sec: 188973.81, flops:165.51, batch-reuse:1
@ 1470 train 4.2705 , allloss: 4.2705, dt: 694.26ms, fracRes: 0.2236, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8259, norm(y): 0.9938, norm:0.4550, tok/sec: 188793.66, flops:165.36, batch-reuse:1
@ 1471 train 4.1448 , allloss: 4.1448, dt: 692.63ms, fracRes: 0.2274, norm(attn): 0.3730, norm(output): 0.7305, norm(x): 0.8227, norm(y): 0.9937, norm:0.4111, tok/sec: 189237.91, flops:165.75, batch-reuse:1
@ 1472 train 4.1499 , allloss: 4.1499, dt: 696.06ms, fracRes: 0.2235, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8216, norm(y): 0.9937, norm:0.4472, tok/sec: 188306.59, flops:164.93, batch-reuse:1
@ 1473 train 4.2579 , allloss: 4.2579, dt: 693.68ms, fracRes: 0.2191, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8191, norm(y): 0.9939, norm:0.4303, tok/sec: 188952.57, flops:165.50, batch-reuse:1
@ 1474 train 4.3867 , allloss: 4.3867, dt: 692.77ms, fracRes: 0.2159, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8223, norm(y): 0.9940, norm:0.5041, tok/sec: 189200.98, flops:165.71, batch-reuse:1
@ 1475 train 4.2013 , allloss: 4.2013, dt: 693.42ms, fracRes: 0.2202, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8287, norm(y): 0.9939, norm:0.5165, tok/sec: 189021.76, flops:165.56, batch-reuse:1
@ 1476 train 4.1610 , allloss: 4.1610, dt: 697.55ms, fracRes: 0.2218, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8283, norm(y): 0.9939, norm:0.4918, tok/sec: 187904.13, flops:164.58, batch-reuse:1
@ 1477 train 4.1798 , allloss: 4.1798, dt: 698.81ms, fracRes: 0.2241, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8291, norm(y): 0.9939, norm:0.4777, tok/sec: 187563.78, flops:164.28, batch-reuse:1
@ 1478 train 4.1745 , allloss: 4.1745, dt: 689.31ms, fracRes: 0.2231, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8290, norm(y): 0.9939, norm:0.4511, tok/sec: 190149.62, flops:166.54, batch-reuse:1
@ 1479 train 4.1688 , allloss: 4.1688, dt: 682.12ms, fracRes: 0.2253, norm(attn): 0.3750, norm(output): 0.7305, norm(x): 0.8279, norm(y): 0.9938, norm:0.4177, tok/sec: 192154.05, flops:168.30, batch-reuse:1
@ 1480 train 4.2186 , allloss: 4.2186, dt: 682.48ms, fracRes: 0.2273, norm(attn): 0.3730, norm(output): 0.7383, norm(x): 0.8296, norm(y): 0.9937, norm:0.4103, tok/sec: 192051.28, flops:168.21, batch-reuse:1
@ 1481 train 4.1635 , allloss: 4.1635, dt: 701.19ms, fracRes: 0.2263, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8270, norm(y): 0.9937, norm:0.4237, tok/sec: 186927.94, flops:163.72, batch-reuse:1
@ 1482 train 4.2397 , allloss: 4.2397, dt: 698.35ms, fracRes: 0.2205, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8241, norm(y): 0.9938, norm:0.4237, tok/sec: 187687.05, flops:164.39, batch-reuse:1
@ 1483 train 4.2481 , allloss: 4.2481, dt: 698.79ms, fracRes: 0.2227, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8276, norm(y): 0.9938, norm:0.4419, tok/sec: 187569.67, flops:164.28, batch-reuse:1
@ 1484 train 4.2984 , allloss: 4.2984, dt: 691.58ms, fracRes: 0.2259, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8325, norm(y): 0.9937, norm:0.4222, tok/sec: 189526.79, flops:166.00, batch-reuse:1
@ 1485 train 4.3650 , allloss: 4.3650, dt: 697.69ms, fracRes: 0.2239, norm(attn): 0.3770, norm(output): 0.7383, norm(x): 0.8279, norm(y): 0.9938, norm:0.4705, tok/sec: 187866.76, flops:164.54, batch-reuse:1
@ 1486 train 4.3897 , allloss: 4.3897, dt: 698.33ms, fracRes: 0.2227, norm(attn): 0.3770, norm(output): 0.7383, norm(x): 0.8291, norm(y): 0.9940, norm:0.4894, tok/sec: 187694.80, flops:164.39, batch-reuse:1
@ 1487 train 4.3995 , allloss: 4.3995, dt: 699.06ms, fracRes: 0.2242, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8317, norm(y): 0.9938, norm:0.4650, tok/sec: 187498.02, flops:164.22, batch-reuse:1
@ 1488 train 4.3465 , allloss: 4.3465, dt: 700.52ms, fracRes: 0.2254, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8320, norm(y): 0.9938, norm:0.4931, tok/sec: 187107.98, flops:163.88, batch-reuse:1
@ 1489 train 4.4629 , allloss: 4.4629, dt: 689.71ms, fracRes: 0.2191, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8312, norm(y): 0.9939, norm:0.4367, tok/sec: 190039.32, flops:166.45, batch-reuse:1
@ 1490 train 4.4969 , allloss: 4.4969, dt: 710.46ms, fracRes: 0.2181, norm(attn): 0.3730, norm(output): 0.7422, norm(x): 0.8295, norm(y): 0.9940, norm:0.4551, tok/sec: 184489.62, flops:161.59, batch-reuse:1
@ 1491 train 4.4198 , allloss: 4.4198, dt: 708.87ms, fracRes: 0.2193, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8295, norm(y): 0.9940, norm:0.5510, tok/sec: 184903.93, flops:161.95, batch-reuse:1
@ 1492 train 4.3344 , allloss: 4.3344, dt: 683.17ms, fracRes: 0.2219, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8282, norm(y): 0.9939, norm:0.4982, tok/sec: 191857.92, flops:168.04, batch-reuse:1
@ 1493 train 4.3186 , allloss: 4.3186, dt: 681.23ms, fracRes: 0.2240, norm(attn): 0.3789, norm(output): 0.7422, norm(x): 0.8292, norm(y): 0.9939, norm:0.4443, tok/sec: 192404.83, flops:168.52, batch-reuse:1
@ 1494 train 4.3492 , allloss: 4.3492, dt: 690.21ms, fracRes: 0.2236, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8319, norm(y): 0.9939, norm:0.4564, tok/sec: 189902.51, flops:166.33, batch-reuse:1
@ 1495 train 4.3654 , allloss: 4.3654, dt: 684.67ms, fracRes: 0.2249, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8341, norm(y): 0.9938, norm:0.4807, tok/sec: 191437.29, flops:167.67, batch-reuse:1
@ 1496 train 4.3652 , allloss: 4.3652, dt: 698.10ms, fracRes: 0.2216, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8346, norm(y): 0.9940, norm:0.4689, tok/sec: 187755.70, flops:164.45, batch-reuse:1
@ 1497 train 4.2228 , allloss: 4.2228, dt: 691.34ms, fracRes: 0.2271, norm(attn): 0.3809, norm(output): 0.7461, norm(x): 0.8397, norm(y): 0.9940, norm:0.5269, tok/sec: 189590.58, flops:166.05, batch-reuse:1
@ 1498 train 4.3973 , allloss: 4.3973, dt: 706.88ms, fracRes: 0.2235, norm(attn): 0.3789, norm(output): 0.7422, norm(x): 0.8311, norm(y): 0.9940, norm:0.4657, tok/sec: 185424.31, flops:162.40, batch-reuse:1
@ 1499 train 4.2827 , allloss: 4.2827, dt: 708.74ms, fracRes: 0.2258, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8360, norm(y): 0.9938, norm:0.5426, tok/sec: 184936.59, flops:161.98, batch-reuse:1
@ 1500 train 4.3837 , allloss: 4.3837, dt: 693.38ms, fracRes: 0.2266, norm(attn): 0.3770, norm(output): 0.7383, norm(x): 0.8333, norm(y): 0.9938, norm:0.5286, tok/sec: 189033.85, flops:165.57, batch-reuse:1
@ 1501 train 4.3231 , allloss: 4.3231, dt: 691.06ms, fracRes: 0.2240, norm(attn): 0.3789, norm(output): 0.7383, norm(x): 0.8284, norm(y): 0.9938, norm:0.4913, tok/sec: 189668.81, flops:166.12, batch-reuse:1
@ 1502 train 4.3154 , allloss: 4.3154, dt: 693.15ms, fracRes: 0.2207, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8280, norm(y): 0.9939, norm:0.4747, tok/sec: 189095.82, flops:165.62, batch-reuse:1
@ 1503 train 4.4299 , allloss: 4.4299, dt: 698.88ms, fracRes: 0.2208, norm(attn): 0.3730, norm(output): 0.7422, norm(x): 0.8293, norm(y): 0.9940, norm:0.5498, tok/sec: 187545.48, flops:164.26, batch-reuse:1
@ 1504 train 4.4071 , allloss: 4.4071, dt: 710.67ms, fracRes: 0.2168, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8276, norm(y): 0.9941, norm:0.4780, tok/sec: 184433.29, flops:161.54, batch-reuse:1
@ 1505 train 4.3576 , allloss: 4.3576, dt: 688.95ms, fracRes: 0.2157, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8320, norm(y): 0.9941, norm:0.4536, tok/sec: 190247.60, flops:166.63, batch-reuse:1
@ 1506 train 4.4090 , allloss: 4.4090, dt: 691.13ms, fracRes: 0.2208, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8378, norm(y): 0.9941, norm:0.4615, tok/sec: 189649.64, flops:166.11, batch-reuse:1
@ 1507 train 4.3036 , allloss: 4.3036, dt: 693.76ms, fracRes: 0.2268, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8427, norm(y): 0.9939, norm:0.4802, tok/sec: 188930.37, flops:165.48, batch-reuse:1
@ 1508 train 4.3800 , allloss: 4.3800, dt: 691.60ms, fracRes: 0.2265, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8403, norm(y): 0.9940, norm:0.4286, tok/sec: 189519.28, flops:165.99, batch-reuse:1
@ 1509 train 4.3693 , allloss: 4.3693, dt: 680.52ms, fracRes: 0.2241, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8335, norm(y): 0.9940, norm:0.4928, tok/sec: 192606.38, flops:168.70, batch-reuse:1
@ 1510 train 4.3449 , allloss: 4.3449, dt: 683.11ms, fracRes: 0.2254, norm(attn): 0.3828, norm(output): 0.7422, norm(x): 0.8382, norm(y): 0.9940, norm:0.4156, tok/sec: 191876.53, flops:168.06, batch-reuse:1
@ 1511 train 4.3924 , allloss: 4.3924, dt: 686.91ms, fracRes: 0.2252, norm(attn): 0.3867, norm(output): 0.7461, norm(x): 0.8379, norm(y): 0.9940, norm:0.4851, tok/sec: 190815.22, flops:167.13, batch-reuse:1
@ 1512 train 4.4508 , allloss: 4.4508, dt: 695.27ms, fracRes: 0.2244, norm(attn): 0.3848, norm(output): 0.7461, norm(x): 0.8410, norm(y): 0.9940, norm:0.4801, tok/sec: 188518.58, flops:165.12, batch-reuse:1
@ 1513 train 4.3654 , allloss: 4.3654, dt: 702.84ms, fracRes: 0.2211, norm(attn): 0.3867, norm(output): 0.7500, norm(x): 0.8376, norm(y): 0.9940, norm:0.4724, tok/sec: 186487.88, flops:163.34, batch-reuse:1
@ 1514 train 4.3848 , allloss: 4.3848, dt: 705.01ms, fracRes: 0.2209, norm(attn): 0.3945, norm(output): 0.7500, norm(x): 0.8389, norm(y): 0.9941, norm:0.5116, tok/sec: 185916.18, flops:162.84, batch-reuse:1
@ 1515 train 4.3586 , allloss: 4.3586, dt: 703.97ms, fracRes: 0.2226, norm(attn): 0.3906, norm(output): 0.7461, norm(x): 0.8379, norm(y): 0.9940, norm:0.4595, tok/sec: 186189.58, flops:163.08, batch-reuse:1
@ 1516 train 4.2627 , allloss: 4.2627, dt: 694.27ms, fracRes: 0.2265, norm(attn): 0.3867, norm(output): 0.7461, norm(x): 0.8430, norm(y): 0.9940, norm:0.4461, tok/sec: 188792.30, flops:165.35, batch-reuse:1
@ 1517 train 4.3285 , allloss: 4.3285, dt: 708.23ms, fracRes: 0.2256, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8389, norm(y): 0.9940, norm:0.4503, tok/sec: 185069.51, flops:162.09, batch-reuse:1
@ 1518 train 4.3358 , allloss: 4.3358, dt: 698.02ms, fracRes: 0.2262, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8376, norm(y): 0.9940, norm:0.3925, tok/sec: 187776.60, flops:164.47, batch-reuse:1
@ 1519 train 4.3529 , allloss: 4.3529, dt: 710.82ms, fracRes: 0.2247, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8377, norm(y): 0.9939, norm:0.4090, tok/sec: 184396.67, flops:161.50, batch-reuse:1
@ 1520 train 4.3342 , allloss: 4.3342, dt: 714.15ms, fracRes: 0.2267, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8407, norm(y): 0.9939, norm:0.4331, tok/sec: 183535.44, flops:160.75, batch-reuse:1
@ 1521 train 4.3015 , allloss: 4.3015, dt: 694.27ms, fracRes: 0.2271, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8437, norm(y): 0.9940, norm:0.4152, tok/sec: 188790.74, flops:165.35, batch-reuse:1
@ 1522 train 4.3393 , allloss: 4.3393, dt: 695.11ms, fracRes: 0.2260, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8396, norm(y): 0.9940, norm:0.4123, tok/sec: 188564.17, flops:165.15, batch-reuse:1
@ 1523 train 4.3392 , allloss: 4.3392, dt: 717.39ms, fracRes: 0.2271, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8394, norm(y): 0.9939, norm:0.4547, tok/sec: 182706.68, flops:160.02, batch-reuse:1
@ 1524 train 4.3992 , allloss: 4.3992, dt: 712.88ms, fracRes: 0.2255, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8392, norm(y): 0.9941, norm:0.4824, tok/sec: 183862.98, flops:161.04, batch-reuse:1
@ 1525 train 4.3572 , allloss: 4.3572, dt: 754.68ms, fracRes: 0.2242, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8383, norm(y): 0.9941, norm:0.3958, tok/sec: 173678.49, flops:152.12, batch-reuse:1
@ 1526 train 4.3778 , allloss: 4.3778, dt: 702.34ms, fracRes: 0.2249, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8401, norm(y): 0.9941, norm:0.4302, tok/sec: 186621.45, flops:163.45, batch-reuse:1
@ 1527 train 4.2775 , allloss: 4.2775, dt: 707.95ms, fracRes: 0.2234, norm(attn): 0.3809, norm(output): 0.7461, norm(x): 0.8391, norm(y): 0.9941, norm:0.4417, tok/sec: 185141.74, flops:162.16, batch-reuse:1
@ 1528 train 4.3516 , allloss: 4.3516, dt: 702.52ms, fracRes: 0.2247, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8428, norm(y): 0.9939, norm:0.4186, tok/sec: 186572.94, flops:163.41, batch-reuse:1
@ 1529 train 4.2690 , allloss: 4.2690, dt: 691.97ms, fracRes: 0.2276, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8418, norm(y): 0.9939, norm:0.4068, tok/sec: 189419.24, flops:165.90, batch-reuse:1
@ 1530 train 4.2887 , allloss: 4.2887, dt: 708.12ms, fracRes: 0.2264, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8368, norm(y): 0.9939, norm:0.4618, tok/sec: 185098.98, flops:162.12, batch-reuse:1
@ 1531 train 4.2689 , allloss: 4.2689, dt: 695.39ms, fracRes: 0.2291, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8372, norm(y): 0.9938, norm:0.4479, tok/sec: 188488.14, flops:165.09, batch-reuse:1
@ 1532 train 4.3418 , allloss: 4.3418, dt: 690.26ms, fracRes: 0.2284, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8346, norm(y): 0.9938, norm:0.4631, tok/sec: 189886.84, flops:166.31, batch-reuse:1
@ 1533 train 4.2588 , allloss: 4.2588, dt: 694.58ms, fracRes: 0.2242, norm(attn): 0.3730, norm(output): 0.7383, norm(x): 0.8296, norm(y): 0.9939, norm:0.4349, tok/sec: 188707.54, flops:165.28, batch-reuse:1
@ 1534 train 4.3437 , allloss: 4.3437, dt: 690.63ms, fracRes: 0.2271, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8322, norm(y): 0.9937, norm:0.4544, tok/sec: 189785.82, flops:166.22, batch-reuse:1
@ 1535 train 4.3570 , allloss: 4.3570, dt: 683.91ms, fracRes: 0.2256, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8374, norm(y): 0.9939, norm:0.4346, tok/sec: 191649.84, flops:167.86, batch-reuse:1
@ 1536 train 4.3760 , allloss: 4.3760, dt: 683.18ms, fracRes: 0.2235, norm(attn): 0.3809, norm(output): 0.7461, norm(x): 0.8378, norm(y): 0.9940, norm:0.4928, tok/sec: 191856.04, flops:168.04, batch-reuse:1
@ 1537 train 4.3621 , allloss: 4.3621, dt: 682.57ms, fracRes: 0.2278, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8422, norm(y): 0.9940, norm:0.4791, tok/sec: 192026.93, flops:168.19, batch-reuse:1
@ 1538 train 4.2377 , allloss: 4.2377, dt: 694.70ms, fracRes: 0.2324, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8412, norm(y): 0.9937, norm:0.4597, tok/sec: 188673.66, flops:165.25, batch-reuse:1
@ 1539 train 4.2979 , allloss: 4.2979, dt: 692.31ms, fracRes: 0.2301, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8410, norm(y): 0.9939, norm:0.4209, tok/sec: 189324.98, flops:165.82, batch-reuse:1
@ 1540 train 4.3341 , allloss: 4.3341, dt: 694.79ms, fracRes: 0.2292, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8423, norm(y): 0.9939, norm:0.4000, tok/sec: 188648.87, flops:165.23, batch-reuse:1
@ 1541 train 4.2700 , allloss: 4.2700, dt: 695.09ms, fracRes: 0.2248, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8390, norm(y): 0.9940, norm:0.4086, tok/sec: 188568.37, flops:165.16, batch-reuse:1
@ 1542 train 4.2847 , allloss: 4.2847, dt: 692.06ms, fracRes: 0.2275, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8392, norm(y): 0.9940, norm:0.4228, tok/sec: 189392.81, flops:165.88, batch-reuse:1
@ 1543 train 4.4609 , allloss: 4.4609, dt: 683.97ms, fracRes: 0.2218, norm(attn): 0.3809, norm(output): 0.7461, norm(x): 0.8390, norm(y): 0.9943, norm:0.6897, tok/sec: 191635.28, flops:167.84, batch-reuse:1
@ 1544 train 4.2120 , allloss: 4.2120, dt: 703.77ms, fracRes: 0.2305, norm(attn): 0.3809, norm(output): 0.7461, norm(x): 0.8395, norm(y): 0.9939, norm:0.6274, tok/sec: 186243.76, flops:163.12, batch-reuse:1
@ 1545 train 4.3045 , allloss: 4.3045, dt: 708.65ms, fracRes: 0.2296, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8445, norm(y): 0.9939, norm:0.4721, tok/sec: 184960.17, flops:162.00, batch-reuse:1
@ 1546 train 4.8395 , allloss: 4.8395, dt: 716.96ms, fracRes: 0.2270, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8493, norm(y): 0.9942, norm:0.6639, tok/sec: 182816.71, flops:160.12, batch-reuse:1
@ 1547 train 4.3384 , allloss: 4.3384, dt: 692.80ms, fracRes: 0.2252, norm(attn): 0.3828, norm(output): 0.7500, norm(x): 0.8467, norm(y): 0.9943, norm:0.6759, tok/sec: 189192.91, flops:165.71, batch-reuse:1
@ 1548 train 4.4275 , allloss: 4.4275, dt: 696.03ms, fracRes: 0.2271, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8369, norm(y): 0.9942, norm:0.6380, tok/sec: 188314.97, flops:164.94, batch-reuse:1
@ 1549 train 4.4103 , allloss: 4.4103, dt: 685.16ms, fracRes: 0.2340, norm(attn): 0.3691, norm(output): 0.7461, norm(x): 0.8432, norm(y): 0.9939, norm:0.5329, tok/sec: 191300.39, flops:167.55, batch-reuse:1
@ 1550 train 4.3825 , allloss: 4.3825, dt: 691.85ms, fracRes: 0.2323, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8451, norm(y): 0.9938, norm:0.5230, tok/sec: 189450.51, flops:165.93, batch-reuse:1
@ 1551 train 4.2948 , allloss: 4.2948, dt: 689.02ms, fracRes: 0.2201, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8467, norm(y): 0.9942, norm:0.5741, tok/sec: 190228.83, flops:166.61, batch-reuse:1
@ 1552 train 4.1612 , allloss: 4.1612, dt: 692.68ms, fracRes: 0.2245, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8458, norm(y): 0.9940, norm:0.4937, tok/sec: 189224.82, flops:165.73, batch-reuse:1
@ 1553 train 4.3116 , allloss: 4.3116, dt: 690.45ms, fracRes: 0.2254, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8429, norm(y): 0.9939, norm:0.4252, tok/sec: 189836.09, flops:166.27, batch-reuse:1
@ 1554 train 4.2772 , allloss: 4.2772, dt: 699.08ms, fracRes: 0.2281, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8398, norm(y): 0.9939, norm:0.4317, tok/sec: 187490.98, flops:164.22, batch-reuse:1
@ 1555 train 4.3868 , allloss: 4.3868, dt: 683.86ms, fracRes: 0.2268, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8382, norm(y): 0.9940, norm:0.3920, tok/sec: 191666.28, flops:167.87, batch-reuse:1
@ 1556 train 4.4925 , allloss: 4.4925, dt: 698.45ms, fracRes: 0.2310, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8422, norm(y): 0.9940, norm:0.4348, tok/sec: 187660.14, flops:164.36, batch-reuse:1
@ 1557 train 4.3596 , allloss: 4.3596, dt: 698.89ms, fracRes: 0.2329, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8461, norm(y): 0.9938, norm:0.4605, tok/sec: 187544.07, flops:164.26, batch-reuse:1
@ 1558 train 4.2855 , allloss: 4.2855, dt: 684.31ms, fracRes: 0.2343, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8462, norm(y): 0.9938, norm:0.4394, tok/sec: 191537.60, flops:167.76, batch-reuse:1
@ 1559 train 4.3504 , allloss: 4.3504, dt: 700.67ms, fracRes: 0.2319, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8439, norm(y): 0.9939, norm:0.4087, tok/sec: 187066.28, flops:163.84, batch-reuse:1
@ 1560 train 4.3635 , allloss: 4.3635, dt: 693.48ms, fracRes: 0.2306, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8416, norm(y): 0.9940, norm:0.3829, tok/sec: 189006.17, flops:165.54, batch-reuse:1
@ 1561 train 4.3092 , allloss: 4.3092, dt: 707.62ms, fracRes: 0.2291, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8425, norm(y): 0.9941, norm:0.4404, tok/sec: 185228.70, flops:162.23, batch-reuse:1
@ 1562 train 4.2045 , allloss: 4.2045, dt: 700.15ms, fracRes: 0.2305, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8478, norm(y): 0.9941, norm:0.4178, tok/sec: 187206.04, flops:163.97, batch-reuse:1
@ 1563 train 4.2713 , allloss: 4.2713, dt: 706.54ms, fracRes: 0.2294, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8421, norm(y): 0.9939, norm:0.4164, tok/sec: 185512.03, flops:162.48, batch-reuse:1
@ 1564 train 4.2851 , allloss: 4.2851, dt: 697.54ms, fracRes: 0.2325, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8436, norm(y): 0.9938, norm:0.3807, tok/sec: 187906.38, flops:164.58, batch-reuse:1
@ 1565 train 4.2512 , allloss: 4.2512, dt: 693.38ms, fracRes: 0.2313, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8429, norm(y): 0.9939, norm:0.4534, tok/sec: 189034.05, flops:165.57, batch-reuse:1
@ 1566 train 4.2922 , allloss: 4.2922, dt: 702.37ms, fracRes: 0.2303, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8408, norm(y): 0.9939, norm:0.3966, tok/sec: 186613.34, flops:163.45, batch-reuse:1
@ 1567 train 4.2848 , allloss: 4.2848, dt: 702.04ms, fracRes: 0.2313, norm(attn): 0.3828, norm(output): 0.7461, norm(x): 0.8489, norm(y): 0.9939, norm:0.4365, tok/sec: 186700.86, flops:163.52, batch-reuse:1
@ 1568 train 4.2762 , allloss: 4.2762, dt: 705.27ms, fracRes: 0.2286, norm(attn): 0.3828, norm(output): 0.7500, norm(x): 0.8497, norm(y): 0.9941, norm:0.4343, tok/sec: 185845.98, flops:162.77, batch-reuse:1
@ 1569 train 4.1842 , allloss: 4.1842, dt: 693.46ms, fracRes: 0.2260, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8437, norm(y): 0.9940, norm:0.3809, tok/sec: 189011.11, flops:165.55, batch-reuse:1
@ 1570 train 4.3020 , allloss: 4.3020, dt: 702.47ms, fracRes: 0.2243, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8413, norm(y): 0.9940, norm:0.4017, tok/sec: 186586.30, flops:163.42, batch-reuse:1
@ 1571 train 4.3081 , allloss: 4.3081, dt: 693.70ms, fracRes: 0.2269, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8449, norm(y): 0.9942, norm:0.4479, tok/sec: 188945.89, flops:165.49, batch-reuse:1
@ 1572 train 4.2458 , allloss: 4.2458, dt: 685.76ms, fracRes: 0.2307, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8484, norm(y): 0.9940, norm:0.3963, tok/sec: 191134.38, flops:167.41, batch-reuse:1
@ 1573 train 4.2645 , allloss: 4.2645, dt: 701.70ms, fracRes: 0.2334, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8480, norm(y): 0.9938, norm:0.4340, tok/sec: 186792.34, flops:163.60, batch-reuse:1
@ 1574 train 4.2541 , allloss: 4.2541, dt: 686.43ms, fracRes: 0.2293, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8419, norm(y): 0.9940, norm:0.4624, tok/sec: 190947.31, flops:167.24, batch-reuse:1
@ 1575 train 4.2633 , allloss: 4.2633, dt: 700.19ms, fracRes: 0.2316, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8462, norm(y): 0.9939, norm:0.4185, tok/sec: 187195.91, flops:163.96, batch-reuse:1
@ 1576 train 4.2765 , allloss: 4.2765, dt: 702.81ms, fracRes: 0.2329, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8473, norm(y): 0.9938, norm:0.4078, tok/sec: 186496.92, flops:163.34, batch-reuse:1
@ 1577 train 4.2606 , allloss: 4.2606, dt: 702.84ms, fracRes: 0.2336, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8449, norm(y): 0.9939, norm:0.3973, tok/sec: 186490.41, flops:163.34, batch-reuse:1
@ 1578 train 4.2071 , allloss: 4.2071, dt: 704.78ms, fracRes: 0.2280, norm(attn): 0.3809, norm(output): 0.7461, norm(x): 0.8386, norm(y): 0.9937, norm:0.4140, tok/sec: 185975.24, flops:162.89, batch-reuse:1
@ 1579 train 4.1937 , allloss: 4.1937, dt: 690.86ms, fracRes: 0.2322, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8382, norm(y): 0.9936, norm:0.4087, tok/sec: 189722.81, flops:166.17, batch-reuse:1
@ 1580 train 4.2120 , allloss: 4.2120, dt: 702.64ms, fracRes: 0.2289, norm(attn): 0.3750, norm(output): 0.7344, norm(x): 0.8312, norm(y): 0.9936, norm:0.4396, tok/sec: 186541.60, flops:163.38, batch-reuse:1
@ 1581 train 4.0966 , allloss: 4.0966, dt: 704.09ms, fracRes: 0.2316, norm(attn): 0.3750, norm(output): 0.7422, norm(x): 0.8366, norm(y): 0.9936, norm:0.3948, tok/sec: 186158.05, flops:163.05, batch-reuse:1
@ 1582 train 4.2189 , allloss: 4.2189, dt: 703.49ms, fracRes: 0.2347, norm(attn): 0.3750, norm(output): 0.7383, norm(x): 0.8379, norm(y): 0.9937, norm:0.4099, tok/sec: 186317.73, flops:163.19, batch-reuse:1
@ 1583 train 4.1622 , allloss: 4.1622, dt: 697.91ms, fracRes: 0.2368, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8442, norm(y): 0.9938, norm:0.3713, tok/sec: 187807.27, flops:164.49, batch-reuse:1
@ 1584 train 4.2621 , allloss: 4.2621, dt: 699.91ms, fracRes: 0.2326, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8448, norm(y): 0.9939, norm:0.4106, tok/sec: 187269.94, flops:164.02, batch-reuse:1
@ 1585 train 4.2414 , allloss: 4.2414, dt: 707.56ms, fracRes: 0.2313, norm(attn): 0.3730, norm(output): 0.7500, norm(x): 0.8456, norm(y): 0.9939, norm:0.3828, tok/sec: 185243.93, flops:162.25, batch-reuse:1
@ 1586 train 4.2355 , allloss: 4.2355, dt: 707.21ms, fracRes: 0.2330, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8467, norm(y): 0.9938, norm:0.4192, tok/sec: 185335.79, flops:162.33, batch-reuse:1
@ 1587 train 4.2716 , allloss: 4.2716, dt: 700.47ms, fracRes: 0.2241, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8441, norm(y): 0.9939, norm:0.3940, tok/sec: 187119.13, flops:163.89, batch-reuse:1
@ 1588 train 4.2545 , allloss: 4.2545, dt: 695.60ms, fracRes: 0.2246, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8423, norm(y): 0.9940, norm:0.3672, tok/sec: 188430.32, flops:165.04, batch-reuse:1
@ 1589 train 4.1671 , allloss: 4.1671, dt: 708.53ms, fracRes: 0.2286, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8423, norm(y): 0.9939, norm:1.5716, tok/sec: 184990.35, flops:162.02, batch-reuse:1
@ 1590 train 4.3008 , allloss: 4.3008, dt: 701.52ms, fracRes: 0.2348, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8441, norm(y): 0.9938, norm:0.3756, tok/sec: 186840.97, flops:163.65, batch-reuse:1
@ 1591 train 4.1313 , allloss: 4.1313, dt: 706.76ms, fracRes: 0.2349, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8412, norm(y): 0.9939, norm:0.4435, tok/sec: 185453.83, flops:162.43, batch-reuse:1
@ 1592 train 4.2891 , allloss: 4.2891, dt: 688.17ms, fracRes: 0.2351, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8435, norm(y): 0.9938, norm:0.3931, tok/sec: 190464.38, flops:166.82, batch-reuse:1
@ 1593 train 4.2538 , allloss: 4.2538, dt: 705.23ms, fracRes: 0.2363, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8434, norm(y): 0.9938, norm:0.3997, tok/sec: 185856.66, flops:162.78, batch-reuse:1
@ 1594 train 4.1379 , allloss: 4.1379, dt: 691.00ms, fracRes: 0.2374, norm(attn): 0.3770, norm(output): 0.7344, norm(x): 0.8384, norm(y): 0.9937, norm:0.3710, tok/sec: 189683.28, flops:166.14, batch-reuse:1
@ 1595 train 4.2809 , allloss: 4.2809, dt: 694.90ms, fracRes: 0.2298, norm(attn): 0.3770, norm(output): 0.7422, norm(x): 0.8351, norm(y): 0.9938, norm:0.4085, tok/sec: 188619.55, flops:165.20, batch-reuse:1
@ 1596 train 4.2060 , allloss: 4.2060, dt: 698.90ms, fracRes: 0.2357, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8408, norm(y): 0.9937, norm:0.4095, tok/sec: 187539.66, flops:164.26, batch-reuse:1
@ 1597 train 4.2267 , allloss: 4.2267, dt: 698.14ms, fracRes: 0.2370, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8456, norm(y): 0.9936, norm:0.4334, tok/sec: 187744.73, flops:164.44, batch-reuse:1
@ 1598 train 4.1866 , allloss: 4.1866, dt: 700.12ms, fracRes: 0.2401, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8456, norm(y): 0.9935, norm:0.4286, tok/sec: 187213.18, flops:163.97, batch-reuse:1
@ 1599 train 4.2972 , allloss: 4.2972, dt: 689.11ms, fracRes: 0.2383, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8452, norm(y): 0.9935, norm:0.3720, tok/sec: 190204.22, flops:166.59, batch-reuse:1
@ 1600 train 4.1667 , allloss: 4.1667, dt: 697.04ms, fracRes: 0.2392, norm(attn): 0.3711, norm(output): 0.7461, norm(x): 0.8461, norm(y): 0.9935, norm:0.3941, tok/sec: 188041.42, flops:164.70, batch-reuse:1
@ 1601 train 4.3424 , allloss: 4.3424, dt: 679.36ms, fracRes: 0.2354, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8433, norm(y): 0.9937, norm:0.4175, tok/sec: 192934.82, flops:168.98, batch-reuse:1
@ 1602 train 4.1789 , allloss: 4.1789, dt: 704.57ms, fracRes: 0.2293, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8430, norm(y): 0.9938, norm:0.4051, tok/sec: 186030.17, flops:162.94, batch-reuse:1
@ 1603 train 4.1770 , allloss: 4.1770, dt: 705.63ms, fracRes: 0.2331, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8434, norm(y): 0.9936, norm:0.4256, tok/sec: 185752.60, flops:162.69, batch-reuse:1
@ 1604 train 4.1799 , allloss: 4.1799, dt: 702.64ms, fracRes: 0.2328, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8470, norm(y): 0.9937, norm:0.4135, tok/sec: 186543.50, flops:163.39, batch-reuse:1
@ 1605 train 4.2548 , allloss: 4.2548, dt: 683.88ms, fracRes: 0.2353, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8502, norm(y): 0.9938, norm:0.3931, tok/sec: 191659.66, flops:167.87, batch-reuse:1
@ 1606 train 4.2440 , allloss: 4.2440, dt: 694.55ms, fracRes: 0.2365, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8503, norm(y): 0.9937, norm:0.3613, tok/sec: 188714.73, flops:165.29, batch-reuse:1
@ 1607 train 4.2172 , allloss: 4.2172, dt: 698.76ms, fracRes: 0.2395, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8487, norm(y): 0.9936, norm:0.3885, tok/sec: 187578.75, flops:164.29, batch-reuse:1
@ 1608 train 4.2457 , allloss: 4.2457, dt: 699.62ms, fracRes: 0.2374, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8507, norm(y): 0.9937, norm:0.4202, tok/sec: 187347.61, flops:164.09, batch-reuse:1
@ 1609 train 4.2008 , allloss: 4.2008, dt: 695.12ms, fracRes: 0.2334, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8456, norm(y): 0.9938, norm:0.4180, tok/sec: 188558.99, flops:165.15, batch-reuse:1
@ 1610 train 4.1388 , allloss: 4.1388, dt: 694.67ms, fracRes: 0.2346, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8424, norm(y): 0.9938, norm:0.4579, tok/sec: 188681.31, flops:165.26, batch-reuse:1
@ 1611 train 4.1662 , allloss: 4.1662, dt: 694.76ms, fracRes: 0.2315, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8437, norm(y): 0.9938, norm:0.4042, tok/sec: 188659.10, flops:165.24, batch-reuse:1
@ 1612 train 4.2109 , allloss: 4.2109, dt: 698.23ms, fracRes: 0.2357, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8456, norm(y): 0.9937, norm:0.4007, tok/sec: 187720.88, flops:164.42, batch-reuse:1
@ 1613 train 4.2284 , allloss: 4.2284, dt: 698.95ms, fracRes: 0.2391, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8501, norm(y): 0.9936, norm:0.4167, tok/sec: 187526.67, flops:164.25, batch-reuse:1
@ 1614 train 4.3124 , allloss: 4.3124, dt: 694.52ms, fracRes: 0.2370, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8486, norm(y): 0.9937, norm:0.4527, tok/sec: 188724.38, flops:165.30, batch-reuse:1
@ 1615 train 4.1548 , allloss: 4.1548, dt: 691.67ms, fracRes: 0.2350, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8439, norm(y): 0.9936, norm:0.4171, tok/sec: 189500.92, flops:165.98, batch-reuse:1
@ 1616 train 4.2591 , allloss: 4.2591, dt: 697.38ms, fracRes: 0.2339, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8436, norm(y): 0.9936, norm:0.4102, tok/sec: 187948.84, flops:164.62, batch-reuse:1
@ 1617 train 4.1926 , allloss: 4.1926, dt: 684.28ms, fracRes: 0.2357, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8462, norm(y): 0.9936, norm:0.4685, tok/sec: 191547.21, flops:167.77, batch-reuse:1
@ 1618 train 4.2661 , allloss: 4.2661, dt: 684.82ms, fracRes: 0.2396, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8495, norm(y): 0.9937, norm:0.4601, tok/sec: 191396.36, flops:167.64, batch-reuse:1
@ 1619 train 4.1197 , allloss: 4.1197, dt: 681.14ms, fracRes: 0.2394, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8497, norm(y): 0.9936, norm:0.4194, tok/sec: 192429.01, flops:168.54, batch-reuse:1
@ 1620 train 4.0932 , allloss: 4.0932, dt: 691.72ms, fracRes: 0.2377, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8471, norm(y): 0.9936, norm:0.4493, tok/sec: 189485.83, flops:165.96, batch-reuse:1
@ 1621 train 4.2073 , allloss: 4.2073, dt: 685.66ms, fracRes: 0.2354, norm(attn): 0.3809, norm(output): 0.7461, norm(x): 0.8465, norm(y): 0.9938, norm:0.4585, tok/sec: 191161.10, flops:167.43, batch-reuse:1
@ 1622 train 4.2226 , allloss: 4.2226, dt: 703.52ms, fracRes: 0.2366, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8494, norm(y): 0.9938, norm:0.4128, tok/sec: 186309.84, flops:163.18, batch-reuse:1
@ 1623 train 4.1485 , allloss: 4.1485, dt: 684.93ms, fracRes: 0.2410, norm(attn): 0.3730, norm(output): 0.7500, norm(x): 0.8539, norm(y): 0.9938, norm:0.4288, tok/sec: 191364.38, flops:167.61, batch-reuse:1
@ 1624 train 4.0953 , allloss: 4.0953, dt: 691.39ms, fracRes: 0.2460, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8516, norm(y): 0.9935, norm:0.4170, tok/sec: 189577.70, flops:166.04, batch-reuse:1
@ 1625 train 4.0969 , allloss: 4.0969, dt: 691.89ms, fracRes: 0.2437, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8513, norm(y): 0.9936, norm:0.4012, tok/sec: 189439.60, flops:165.92, batch-reuse:1
@ 1626 train 4.1626 , allloss: 4.1626, dt: 682.65ms, fracRes: 0.2420, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8474, norm(y): 0.9937, norm:0.3946, tok/sec: 192004.26, flops:168.17, batch-reuse:1
@ 1627 train 4.0828 , allloss: 4.0828, dt: 701.70ms, fracRes: 0.2412, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8499, norm(y): 0.9938, norm:0.4315, tok/sec: 186792.66, flops:163.60, batch-reuse:1
@ 1628 train 4.0924 , allloss: 4.0924, dt: 685.19ms, fracRes: 0.2424, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8495, norm(y): 0.9937, norm:0.4079, tok/sec: 191293.87, flops:167.55, batch-reuse:1
@ 1629 train 4.0749 , allloss: 4.0749, dt: 700.28ms, fracRes: 0.2397, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8440, norm(y): 0.9937, norm:0.4214, tok/sec: 187171.50, flops:163.94, batch-reuse:1
@ 1630 train 4.1307 , allloss: 4.1307, dt: 691.88ms, fracRes: 0.2408, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8456, norm(y): 0.9936, norm:0.4191, tok/sec: 189443.46, flops:165.93, batch-reuse:1
@ 1631 train 4.0319 , allloss: 4.0319, dt: 694.95ms, fracRes: 0.2376, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8431, norm(y): 0.9938, norm:0.3970, tok/sec: 188607.32, flops:165.19, batch-reuse:1
@ 1632 train 4.1688 , allloss: 4.1688, dt: 681.00ms, fracRes: 0.2394, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8454, norm(y): 0.9939, norm:0.4539, tok/sec: 192470.57, flops:168.58, batch-reuse:1
@ 1633 train 4.1510 , allloss: 4.1510, dt: 684.42ms, fracRes: 0.2398, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8486, norm(y): 0.9937, norm:0.4290, tok/sec: 191507.11, flops:167.73, batch-reuse:1
@ 1634 train 4.1368 , allloss: 4.1368, dt: 693.37ms, fracRes: 0.2366, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8446, norm(y): 0.9938, norm:0.4112, tok/sec: 189036.13, flops:165.57, batch-reuse:1
@ 1635 train 4.0335 , allloss: 4.0335, dt: 693.74ms, fracRes: 0.2366, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8461, norm(y): 0.9938, norm:0.3771, tok/sec: 188934.52, flops:165.48, batch-reuse:1
@ 1636 train 4.0662 , allloss: 4.0662, dt: 696.67ms, fracRes: 0.2396, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8459, norm(y): 0.9938, norm:0.3721, tok/sec: 188140.39, flops:164.78, batch-reuse:1
@ 1637 train 4.1426 , allloss: 4.1426, dt: 694.98ms, fracRes: 0.2397, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8481, norm(y): 0.9938, norm:0.3740, tok/sec: 188598.78, flops:165.19, batch-reuse:1
@ 1638 train 4.1207 , allloss: 4.1207, dt: 693.20ms, fracRes: 0.2414, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8513, norm(y): 0.9937, norm:0.4197, tok/sec: 189083.33, flops:165.61, batch-reuse:1
@ 1639 train 4.0965 , allloss: 4.0965, dt: 694.53ms, fracRes: 0.2406, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8471, norm(y): 0.9937, norm:0.3779, tok/sec: 188720.36, flops:165.29, batch-reuse:1
@ 1640 train 4.1332 , allloss: 4.1332, dt: 694.64ms, fracRes: 0.2411, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8464, norm(y): 0.9936, norm:0.4204, tok/sec: 188690.76, flops:165.27, batch-reuse:1
@ 1641 train 4.1328 , allloss: 4.1328, dt: 692.32ms, fracRes: 0.2389, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8476, norm(y): 0.9936, norm:0.4419, tok/sec: 189322.50, flops:165.82, batch-reuse:1
@ 1642 train 4.1181 , allloss: 4.1181, dt: 693.79ms, fracRes: 0.2385, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8507, norm(y): 0.9937, norm:0.5073, tok/sec: 188921.15, flops:165.47, batch-reuse:1
@ 1643 train 4.1345 , allloss: 4.1345, dt: 691.86ms, fracRes: 0.2407, norm(attn): 0.3789, norm(output): 0.7461, norm(x): 0.8517, norm(y): 0.9937, norm:0.4463, tok/sec: 189448.48, flops:165.93, batch-reuse:1
@ 1644 train 4.1821 , allloss: 4.1821, dt: 695.04ms, fracRes: 0.2436, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8525, norm(y): 0.9938, norm:0.3827, tok/sec: 188582.86, flops:165.17, batch-reuse:1
@ 1645 train 4.0263 , allloss: 4.0263, dt: 693.57ms, fracRes: 0.2408, norm(attn): 0.3809, norm(output): 0.7500, norm(x): 0.8531, norm(y): 0.9938, norm:0.5330, tok/sec: 188982.39, flops:165.52, batch-reuse:1
@ 1646 train 4.1316 , allloss: 4.1316, dt: 697.83ms, fracRes: 0.2405, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8510, norm(y): 0.9936, norm:0.4514, tok/sec: 187829.21, flops:164.51, batch-reuse:1
@ 1647 train 4.1644 , allloss: 4.1644, dt: 691.62ms, fracRes: 0.2390, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8465, norm(y): 0.9937, norm:0.4801, tok/sec: 189513.85, flops:165.99, batch-reuse:1
@ 1648 train 4.1025 , allloss: 4.1025, dt: 691.47ms, fracRes: 0.2412, norm(attn): 0.3730, norm(output): 0.7461, norm(x): 0.8481, norm(y): 0.9937, norm:0.4370, tok/sec: 189555.68, flops:166.02, batch-reuse:1
@ 1649 train 4.1076 , allloss: 4.1076, dt: 704.85ms, fracRes: 0.2397, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8455, norm(y): 0.9936, norm:0.4501, tok/sec: 185957.87, flops:162.87, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0145, 0.9844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0033, 0.1426, 0.8555, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0535, 0.2656, 0.5078, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0090, 0.2891, 0.4375, 0.2041, 0.0610, 0.0000, 0.0000, 0.0000],
        [0.0270, 0.2129, 0.3809, 0.2412, 0.0347, 0.1040, 0.0000, 0.0000],
        [0.0110, 0.1191, 0.3223, 0.1631, 0.1250, 0.1748, 0.0840, 0.0000],
        [0.0060, 0.0435, 0.1367, 0.0845, 0.2305, 0.1895, 0.2393, 0.0703]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0107, -0.4844, -0.5977, -0.5391, -0.6992, -0.5977, -0.4414, -0.2871],
        [-0.0713,  4.1562,  4.5000,  2.8125,  4.2188,  4.1250,  2.8594,  2.4844],
        [-0.1001,  3.6562,  5.4375,  5.2500,  6.4062,  5.4375,  4.2812,  3.5469],
        [-0.0679,  1.5391,  2.1875,  1.1016,  3.0781,  3.0781,  1.3906,  1.1016],
        [-0.0293,  3.4375,  3.8594,  3.0938,  1.8906,  3.0000,  2.4844,  2.1406],
        [-0.0261,  2.0469,  2.6250,  2.1562,  0.2256,  1.3203,  2.1094,  1.6094],
        [-0.0742,  2.2969,  3.2969,  2.6250,  2.3438,  2.6875,  1.9531,  1.7188],
        [-0.0684,  1.9062,  3.0469,  2.5781,  3.5781,  3.3750,  3.6094,  2.3906]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6051],
        [0.2025],
        [0.1552],
        [0.2500],
        [0.2445],
        [0.1391],
        [0.1195],
        [0.2069],
        [0.0893],
        [0.2088],
        [0.0745],
        [0.1344],
        [0.1890],
        [0.0829]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0033,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0032,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0022,     0.0001,     0.0001,     0.0009,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0046,     0.0000,     0.0000,     0.0001,     0.0006,     0.0000],
        [    0.5703,     0.0002,     0.0009,     0.0001,     0.0000,     0.0000,     0.0001,     0.4277]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0021,     -0.1260,     -0.0337,     -0.2080,     -0.2490,     -0.1235,     -0.1689,     -0.0684],
        [    -0.0209,     -7.0938,     -1.5859,    -10.4375,     -9.1875,     -7.6250,     -9.1250,     -5.9375],
        [    -0.0454,     -8.8750,     -6.2812,     -2.1250,     -8.6875,     -9.6875,     -9.0625,     -6.5938],
        [    -0.1006,     -8.6250,     -5.8125,     -6.9062,     -4.1875,     -8.8125,     -9.2500,     -5.7812],
        [    -0.1006,     -8.8125,     -5.8438,    -10.5625,     -8.8125,     -4.5625,     -8.5000,     -4.7500],
        [    -0.0649,     -7.9375,     -6.1875,     -9.6250,     -9.5000,     -7.0938,     -4.4688,     -2.6094],
        [    -0.1064,     -8.3750,     -5.4688,    -10.8125,    -11.1875,     -9.1250,     -7.4375,     -0.1484],
        [    -0.1245,     -8.3125,     -6.5625,     -8.7500,    -10.9375,    -10.0625,     -9.0625,     -0.4121]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7383],
        [0.7607],
        [0.6681],
        [0.7931],
        [0.8162],
        [0.7657],
        [0.6403],
        [0.6244],
        [0.6827],
        [0.6466],
        [0.6322],
        [0.5455],
        [0.5709],
        [0.6520]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0188,     0.8555,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.8359,     0.0879,     0.0728,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.6289,     0.0864,     0.0623,     0.2197,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.5664,     0.0505,     0.0547,     0.1289,     0.1992,     0.0000,     0.0000],
        [    0.0025,     0.4355,     0.0640,     0.0503,     0.1299,     0.1895,     0.1279,     0.0000],
        [    0.0012,     0.4023,     0.0415,     0.0405,     0.1279,     0.1943,     0.1162,     0.0752]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0190, -0.1680, -0.1445, -0.1982, -0.1289, -0.1816, -0.1406, -0.2100],
        [-0.0771,  6.9375,  4.5312,  4.3438,  5.6250,  6.0312,  5.6562,  5.1875],
        [ 0.0491,  3.8594,  1.9531,  1.5859,  3.1250,  2.9062,  3.0781,  2.1250],
        [-0.0967,  5.9375,  3.7031,  3.5156,  4.7500,  5.0938,  4.6875,  4.2188],
        [ 0.0297,  5.0312,  3.0469,  2.7188,  3.9844,  4.1562,  4.0625,  3.3281],
        [-0.0796,  6.3750,  3.9531,  4.0312,  4.9062,  5.3125,  5.0938,  4.5000],
        [-0.0275,  5.1250,  3.1875,  2.9531,  3.9062,  4.2812,  3.8906,  3.2656],
        [-0.0767,  5.7500,  3.4844,  3.4531,  4.5938,  5.0312,  4.5000,  4.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8568],
        [0.7295],
        [0.6506],
        [0.6596],
        [0.5879],
        [0.5089],
        [0.4967],
        [0.4925],
        [0.5292],
        [0.5052],
        [0.4780],
        [0.4363],
        [0.4418],
        [0.4583]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9883, 0.0121, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2969, 0.1699, 0.5312, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.0991, 0.5664, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.0623, 0.3320, 0.2734, 0.0275, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.0471, 0.1992, 0.3398, 0.0830, 0.1113, 0.0000, 0.0000],
        [0.5625, 0.0311, 0.1885, 0.1299, 0.0243, 0.0388, 0.0266, 0.0000],
        [0.0439, 0.0417, 0.1514, 0.2109, 0.0454, 0.0908, 0.1719, 0.2441]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0036,     -0.4590,     -0.3457,     -0.4297,     -0.4648,     -0.4473,     -0.5273,     -0.4922],
        [    -0.0096,     -4.4062,     -1.5234,     -2.4844,     -3.3281,     -2.8281,     -2.9688,     -2.1250],
        [    -0.0371,     -0.5938,      0.5469,      0.4902,     -0.5234,      0.1602,      0.0247,      1.6328],
        [    -0.0525,      0.2695,      2.0156,      1.2422,      0.9609,      1.9297,      1.7109,      2.5938],
        [    -0.0649,     -1.6484,      0.0205,     -0.1719,     -2.4688,     -0.1309,     -1.0547,      0.2891],
        [    -0.0569,     -1.5938,     -0.1504,      0.3867,     -1.0234,     -0.7344,     -0.6914,      0.9727],
        [    -0.0554,     -2.9531,     -1.1484,     -1.5156,     -3.2031,     -2.7344,     -3.1094,     -1.0078],
        [    -0.0698,     -0.1206,      1.1641,      1.4922,     -0.0415,      0.6523,      1.2891,      1.6406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4820],
        [0.2906],
        [0.2630],
        [0.2829],
        [0.2653],
        [0.2492],
        [0.1645],
        [0.1917],
        [0.1584],
        [0.1885],
        [0.1515],
        [0.1742],
        [0.1784],
        [0.1621]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3828,     0.6172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.9883,     0.0087,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0057,     0.9492,     0.0142,     0.0325,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.9023,     0.0977,     0.0000,     0.0000],
        [    0.0117,     0.0007,     0.0000,     0.0000,     0.0962,     0.5820,     0.3105,     0.0000],
        [    0.0002,     0.0001,     0.0000,     0.0000,     0.0085,     0.0134,     0.9023,     0.0752]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0009,     -0.2217,     -0.2578,     -0.2773,     -0.1582,     -0.1670,     -0.1445,     -0.2129],
        [     0.0033,      0.4805,     -4.8750,     -4.6250,     -2.8438,     -2.7812,     -0.8203,     -2.2812],
        [    -0.0413,      6.3438,      1.6172,      1.9609,     -1.4453,     -2.6719,      1.9062,      0.4355],
        [    -0.0535,      5.0625,      0.8672,      1.6953,      1.8516,      1.6328,      3.1250,      1.2031],
        [     0.0160,      1.1094,     -1.4766,     -0.8203,     10.0625,      6.8438,      2.3438,      0.7852],
        [     0.0102,     -2.7969,     -5.1250,     -5.7188,     11.0000,      8.7500,      2.1094,     -1.3281],
        [    -0.0427,     -2.8125,     -6.3750,     -7.9062,      2.0625,      3.8594,      3.2344,     -0.4883],
        [    -0.0603,     -0.4297,     -4.9375,     -6.4062,      3.8125,      4.2812,      8.5000,      6.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7211],
        [0.3951],
        [0.4050],
        [0.4469],
        [0.3955],
        [0.4135],
        [0.3895],
        [0.3483],
        [0.3380],
        [0.3164],
        [0.3139],
        [0.3113],
        [0.2793],
        [0.2858]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0068,     -0.5508,     -0.6602,     -0.5781,     -0.4902,     -0.4902,     -0.5938,     -0.4922],
        [    -0.2500,    -21.1250,    -25.2500,    -22.2500,    -18.2500,    -18.7500,    -21.1250,    -17.5000],
        [    -0.3027,    -25.5000,    -30.7500,    -25.7500,    -21.7500,    -21.6250,    -25.2500,    -20.8750],
        [    -0.1973,    -18.7500,    -22.3750,    -19.5000,    -17.1250,    -16.3750,    -19.1250,    -14.5625],
        [    -0.2480,    -25.0000,    -30.0000,    -25.6250,    -21.5000,    -22.0000,    -24.1250,    -19.0000],
        [    -0.2676,    -24.0000,    -29.5000,    -25.5000,    -21.6250,    -21.6250,    -24.6250,    -20.5000],
        [    -0.2891,    -24.7500,    -30.0000,    -26.1250,    -21.6250,    -21.0000,    -25.2500,    -20.3750],
        [    -0.2412,    -22.0000,    -25.8750,    -22.2500,    -18.7500,    -17.8750,    -20.5000,    -15.9375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7514],
        [0.5538],
        [0.4949],
        [0.5812],
        [0.5629],
        [0.5018],
        [0.5042],
        [0.5051],
        [0.4802],
        [0.4988],
        [0.3824],
        [0.4693],
        [0.4241],
        [0.3479]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1338,     0.8555,     0.0120,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0645,     0.0044,     0.0231,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0109,     -0.6406,     -0.6016,     -0.6797,     -0.8008,     -0.4668,     -0.5547,     -0.6172],
        [    -0.2090,    -12.0625,    -13.5625,    -12.6875,    -15.6250,    -10.4375,    -11.0000,    -11.2500],
        [     0.1270,      1.9844,     -2.2812,      1.6094,      8.0625,     -0.4551,      3.8125,      5.6250],
        [     0.0270,     -2.6094,     -5.3125,     -3.6406,      1.9141,     -2.5156,      0.3789,      0.3125],
        [    -0.2715,    -16.1250,    -16.2500,    -17.1250,    -19.0000,    -12.3125,    -13.8125,    -13.7500],
        [    -0.3438,    -19.6250,    -19.8750,    -21.0000,    -22.0000,    -13.4375,    -16.2500,    -16.7500],
        [    -0.3418,    -20.6250,    -19.6250,    -21.1250,    -24.3750,    -14.5625,    -17.2500,    -17.7500],
        [    -0.3359,    -19.5000,    -19.3750,    -21.6250,    -25.3750,    -14.1875,    -17.3750,    -19.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6965],
        [0.5043],
        [0.5647],
        [0.7511],
        [0.6776],
        [0.7780],
        [0.6788],
        [0.6865],
        [0.5333],
        [0.6229],
        [0.3272],
        [0.7026],
        [0.6448],
        [0.5145]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0070,     0.4531,     0.3262,     0.2129,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0033,     -0.5859,     -0.5664,     -0.5039,     -0.5312,     -0.4727,     -0.4473,     -0.4863],
        [    -0.2334,    -44.2500,    -40.0000,    -36.0000,    -37.7500,    -34.0000,    -31.3750,    -35.7500],
        [    -0.0388,     -9.1250,    -11.3125,     -9.8125,     -8.0000,     -8.5625,     -8.6875,     -8.4375],
        [     0.0398,      4.2188,      3.8906,      3.4688,      4.2500,      2.1719,      2.0156,      2.4375],
        [    -0.1885,    -35.0000,    -31.5000,    -28.3750,    -30.0000,    -26.6250,    -24.2500,    -27.2500],
        [    -0.2500,    -43.2500,    -41.0000,    -37.2500,    -40.0000,    -35.2500,    -33.0000,    -36.5000],
        [    -0.1196,    -21.6250,    -20.3750,    -18.0000,    -19.2500,    -18.0000,    -16.3750,    -18.3750],
        [    -0.0845,    -17.3750,    -15.9375,    -14.3750,    -15.3750,    -14.1250,    -13.3750,    -15.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9355],
        [0.2519],
        [0.1453],
        [0.9056],
        [0.9494],
        [0.9149],
        [0.9115],
        [0.9928],
        [0.9583],
        [1.0000],
        [0.2764],
        [0.9997],
        [0.9997],
        [0.1445]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1133,     0.8867,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.1167,     0.8828,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0522,     0.4160,     0.5312,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0457,     0.0991,     0.3652,     0.4102,     0.0791,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0068,     0.0004,     0.0004,     0.0080,     0.0041,     0.0000,     0.0000],
        [    0.0065,     0.1855,     0.0806,     0.0894,     0.2002,     0.2207,     0.2178,     0.0000],
        [    0.0576,     0.1611,     0.0625,     0.0791,     0.2578,     0.1133,     0.1680,     0.1016]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0037,     -0.0229,     -0.0238,      0.0054,     -0.0028,     -0.0031,     -0.0056],
        [     0.0183,      2.0781,      1.9922,      1.7812,      2.0312,      1.7500,      1.4844,      1.0234],
        [     0.0491,      6.0938,      8.1250,      8.3750,      6.5000,      6.5312,      5.6250,      4.8750],
        [     0.0486,      6.0625,      8.1250,      8.3750,      6.4375,      6.4375,      5.7500,      4.9688],
        [     0.0052,      0.7852,      2.0938,      2.2031,      0.5547,      1.5859,      1.5469,      1.1641],
        [    -0.0515,     -5.0312,     -7.8438,     -7.8438,     -4.8438,     -5.5312,     -4.7188,     -5.3750],
        [     0.0240,      3.3750,      2.5312,      2.6406,      3.4375,      3.5469,      3.5312,      2.4219],
        [     0.0040,      1.0312,      0.0874,      0.3184,      1.5000,      0.6797,      1.0703,      0.5664]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.3487],
        [    0.0078],
        [    0.0081],
        [    0.7016],
        [    0.8233],
        [    0.4713],
        [    0.5878],
        [    0.9844],
        [    0.6235],
        [    0.9993],
        [    0.0002],
        [    0.9987],
        [    0.9749],
        [    0.0004]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0298,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.2598,     0.7383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0037,     0.1572,     0.4277,     0.4102,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0227,     0.2334,     0.3262,     0.3457,     0.0723,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0001,     0.0001,     0.0003,     0.0002,     0.0000,     0.0000],
        [    0.0041,     0.1836,     0.2334,     0.2490,     0.1245,     0.1260,     0.0796,     0.0000],
        [    0.0874,     0.1348,     0.1582,     0.1611,     0.1138,     0.1367,     0.0889,     0.1187]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0608,     -0.0713,     -0.0718,     -0.0564,     -0.0625,     -0.0635,     -0.0618],
        [    -0.0024,     -3.4844,     -3.1875,     -3.3281,     -1.9766,     -3.0625,     -2.7344,     -2.9062],
        [    -0.0019,      4.6562,      5.7188,      5.7188,      5.4688,      5.1562,      4.8125,      4.7188],
        [    -0.0017,      3.7500,      4.7500,      4.7188,      4.5312,      4.2500,      3.9531,      3.9531],
        [     0.0023,      2.3281,      2.6719,      2.7188,      1.1562,      1.5938,      1.7266,      1.9375],
        [    -0.0000,     -8.5000,     -9.3750,     -9.4375,     -8.2500,     -8.5625,     -8.3125,     -8.1875],
        [    -0.0031,      3.8125,      4.0625,      4.1250,      3.4219,      3.4375,      2.9688,      3.1562],
        [    -0.0013,      0.4336,      0.5938,      0.6133,      0.2598,      0.4414,      0.0139,      0.3027]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5515],
        [0.0073],
        [0.0057],
        [0.2389],
        [0.7902],
        [0.1063],
        [0.2236],
        [0.7924],
        [0.3958],
        [0.9364],
        [0.0187],
        [0.9256],
        [0.7983],
        [0.0257]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.2734, 0.1904, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4805, 0.2139, 0.1562, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4434, 0.1455, 0.1533, 0.1523, 0.1060, 0.0000, 0.0000, 0.0000],
        [0.5664, 0.0618, 0.1094, 0.0962, 0.1055, 0.0608, 0.0000, 0.0000],
        [0.3242, 0.1201, 0.1094, 0.1074, 0.1074, 0.1396, 0.0923, 0.0000],
        [0.3438, 0.0903, 0.0972, 0.0928, 0.0996, 0.1001, 0.0811, 0.0947]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0082,     -0.0109,     -0.0110,     -0.0129,     -0.0072,     -0.0129,     -0.0108],
        [    -0.0006,     -1.7578,     -1.3438,     -1.4297,     -1.2812,     -1.7422,     -1.4609,     -1.4844],
        [    -0.0014,     -0.6758,     -1.0391,     -1.0547,     -0.8047,     -0.5469,     -1.0625,     -0.8008],
        [    -0.0012,     -0.8125,     -1.1250,     -1.1641,     -0.8945,     -0.6680,     -1.1562,     -0.8945],
        [     0.0001,     -1.1094,     -1.0625,     -1.0625,     -1.4297,     -0.9336,     -1.3047,     -1.1328],
        [    -0.0013,     -2.2188,     -1.6484,     -1.7734,     -1.6797,     -2.2344,     -1.8594,     -1.8828],
        [    -0.0013,     -0.9922,     -1.0859,     -1.1016,     -1.1016,     -0.8438,     -1.2578,     -1.0391],
        [    -0.0015,     -1.3359,     -1.2656,     -1.3125,     -1.2422,     -1.2344,     -1.4453,     -1.2891]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8692],
        [0.5791],
        [0.5044],
        [0.4945],
        [0.7240],
        [0.3444],
        [0.4333],
        [0.4756],
        [0.3516],
        [0.3689],
        [0.1446],
        [0.3621],
        [0.3375],
        [0.1025]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0152,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.3008,     0.6953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.1973,     0.4492,     0.3516,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.1689,     0.3652,     0.2852,     0.1807,     0.0000,     0.0000,     0.0000],
        [    0.0030,     0.1660,     0.3027,     0.2402,     0.1592,     0.1299,     0.0000,     0.0000],
        [    0.0010,     0.1289,     0.2832,     0.2188,     0.1357,     0.0996,     0.1328,     0.0000],
        [    0.0008,     0.1104,     0.2432,     0.1885,     0.1177,     0.0854,     0.1162,     0.1367]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0410,      0.0503,      0.0479,      0.0427,      0.0391,      0.0417,      0.0435],
        [    -0.0085,      4.1562,      4.8750,      4.6875,      4.2812,      4.0625,      4.3438,      4.4375],
        [    -0.0097,      4.8125,      5.6562,      5.4062,      5.0000,      4.6875,      5.0625,      5.1875],
        [    -0.0104,      4.9375,      5.7500,      5.5000,      5.0625,      4.7500,      5.0938,      5.2500],
        [    -0.0104,      4.7812,      5.5625,      5.3125,      4.8438,      4.5625,      4.8438,      5.0000],
        [    -0.0090,      4.0000,      4.5938,      4.3750,      3.9531,      3.7500,      3.9688,      4.0938],
        [    -0.0108,      4.8438,      5.6250,      5.3750,      4.9062,      4.5938,      4.8750,      5.0625],
        [    -0.0108,      4.8750,      5.6875,      5.4375,      4.9688,      4.6250,      4.9375,      5.0938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2485],
        [0.0450],
        [0.0233],
        [0.0355],
        [0.1703],
        [0.0074],
        [0.0209],
        [0.0538],
        [0.0200],
        [0.0142],
        [0.0020],
        [0.0173],
        [0.0077],
        [0.0016]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Scythe:0.0077 Scythe:0.0085 Scythe:0.0088 Scythe:0.0076 Scythe:0.0064 Scythe:0.0065 Scythe:0.0084��:0.0058)
��
------
		( Scythe:0.0085 Scythe:0.0088 Scythe:0.0076 Scythe:0.0064 Scythe:0.0065 Scythe:0.0084��:0.0058��:0.0059)
������������������������������
@ 1650 train 4.1307 , allloss: 4.1307, dt: 1122.26ms, fracRes: 0.2407, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8451, norm(y): 0.9937, norm:0.4190, tok/sec: 116792.74, flops:102.29, batch-reuse:1
@ 1651 train 4.2517 , allloss: 4.2517, dt: 696.39ms, fracRes: 0.2358, norm(attn): 0.3750, norm(output): 0.7539, norm(x): 0.8491, norm(y): 0.9938, norm:0.4708, tok/sec: 188215.49, flops:164.85, batch-reuse:1
@ 1652 train 4.1993 , allloss: 4.1993, dt: 697.80ms, fracRes: 0.2371, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8454, norm(y): 0.9937, norm:0.4917, tok/sec: 187836.78, flops:164.52, batch-reuse:1
@ 1653 train 4.1638 , allloss: 4.1638, dt: 703.50ms, fracRes: 0.2333, norm(attn): 0.3809, norm(output): 0.7461, norm(x): 0.8440, norm(y): 0.9938, norm:0.5211, tok/sec: 186313.88, flops:163.18, batch-reuse:1
@ 1654 train 4.1044 , allloss: 4.1044, dt: 689.07ms, fracRes: 0.2329, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8506, norm(y): 0.9940, norm:0.5221, tok/sec: 190215.47, flops:166.60, batch-reuse:1
@ 1655 train 4.0356 , allloss: 4.0356, dt: 682.91ms, fracRes: 0.2347, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8550, norm(y): 0.9938, norm:0.4896, tok/sec: 191932.27, flops:168.10, batch-reuse:1
@ 1656 train 4.0654 , allloss: 4.0654, dt: 703.23ms, fracRes: 0.2336, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8539, norm(y): 0.9938, norm:0.4653, tok/sec: 186385.51, flops:163.25, batch-reuse:1
@ 1657 train 4.1617 , allloss: 4.1617, dt: 685.16ms, fracRes: 0.2303, norm(attn): 0.3828, norm(output): 0.7500, norm(x): 0.8502, norm(y): 0.9941, norm:0.4646, tok/sec: 191300.26, flops:167.55, batch-reuse:1
@ 1658 train 4.1658 , allloss: 4.1658, dt: 698.06ms, fracRes: 0.2340, norm(attn): 0.3848, norm(output): 0.7539, norm(x): 0.8522, norm(y): 0.9940, norm:0.4367, tok/sec: 187766.09, flops:164.46, batch-reuse:1
@ 1659 train 4.0657 , allloss: 4.0657, dt: 691.49ms, fracRes: 0.2386, norm(attn): 0.3828, norm(output): 0.7461, norm(x): 0.8483, norm(y): 0.9937, norm:0.4592, tok/sec: 189549.60, flops:166.02, batch-reuse:1
@ 1660 train 4.0765 , allloss: 4.0765, dt: 699.03ms, fracRes: 0.2445, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8527, norm(y): 0.9936, norm:0.4906, tok/sec: 187504.54, flops:164.23, batch-reuse:1
@ 1661 train 4.1261 , allloss: 4.1261, dt: 699.60ms, fracRes: 0.2427, norm(attn): 0.3730, norm(output): 0.7500, norm(x): 0.8541, norm(y): 0.9935, norm:0.4144, tok/sec: 187353.93, flops:164.09, batch-reuse:1
@ 1662 train 4.1877 , allloss: 4.1877, dt: 681.16ms, fracRes: 0.2455, norm(attn): 0.3730, norm(output): 0.7500, norm(x): 0.8552, norm(y): 0.9936, norm:0.4226, tok/sec: 192424.43, flops:168.54, batch-reuse:1
@ 1663 train 4.1758 , allloss: 4.1758, dt: 688.67ms, fracRes: 0.2442, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8579, norm(y): 0.9939, norm:0.4509, tok/sec: 190326.04, flops:166.70, batch-reuse:1
@ 1664 train 4.0842 , allloss: 4.0842, dt: 696.29ms, fracRes: 0.2416, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8518, norm(y): 0.9938, norm:0.4475, tok/sec: 188243.66, flops:164.87, batch-reuse:1
@ 1665 train 4.1239 , allloss: 4.1239, dt: 690.34ms, fracRes: 0.2429, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8510, norm(y): 0.9938, norm:0.4164, tok/sec: 189865.79, flops:166.30, batch-reuse:1
@ 1666 train 4.1644 , allloss: 4.1644, dt: 690.16ms, fracRes: 0.2373, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8525, norm(y): 0.9939, norm:0.4308, tok/sec: 189915.44, flops:166.34, batch-reuse:1
@ 1667 train 4.3298 , allloss: 4.3298, dt: 680.85ms, fracRes: 0.2378, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8605, norm(y): 0.9939, norm:0.3919, tok/sec: 192511.42, flops:168.61, batch-reuse:1
@ 1668 train 4.3218 , allloss: 4.3218, dt: 704.07ms, fracRes: 0.2369, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8624, norm(y): 0.9942, norm:0.5198, tok/sec: 186163.28, flops:163.05, batch-reuse:1
@ 1669 train 4.3417 , allloss: 4.3417, dt: 691.08ms, fracRes: 0.2431, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8659, norm(y): 0.9939, norm:0.5007, tok/sec: 189663.84, flops:166.12, batch-reuse:1
@ 1670 train 4.4117 , allloss: 4.4117, dt: 695.88ms, fracRes: 0.2367, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8606, norm(y): 0.9939, norm:0.6157, tok/sec: 188355.62, flops:164.97, batch-reuse:1
@ 1671 train 4.3476 , allloss: 4.3476, dt: 696.84ms, fracRes: 0.2391, norm(attn): 0.3750, norm(output): 0.7461, norm(x): 0.8519, norm(y): 0.9937, norm:0.4916, tok/sec: 188093.72, flops:164.74, batch-reuse:1
@ 1672 train 4.3491 , allloss: 4.3491, dt: 693.62ms, fracRes: 0.2408, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8568, norm(y): 0.9938, norm:0.6441, tok/sec: 188968.75, flops:165.51, batch-reuse:1
@ 1673 train 4.2534 , allloss: 4.2534, dt: 696.63ms, fracRes: 0.2437, norm(attn): 0.3770, norm(output): 0.7461, norm(x): 0.8543, norm(y): 0.9937, norm:0.5068, tok/sec: 188151.01, flops:164.79, batch-reuse:1
@ 1674 train 4.3058 , allloss: 4.3058, dt: 697.93ms, fracRes: 0.2425, norm(attn): 0.3809, norm(output): 0.7500, norm(x): 0.8556, norm(y): 0.9939, norm:0.4631, tok/sec: 187801.75, flops:164.49, batch-reuse:1
@ 1675 train 4.4336 , allloss: 4.4336, dt: 694.34ms, fracRes: 0.2417, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8622, norm(y): 0.9941, norm:0.4809, tok/sec: 188772.01, flops:165.34, batch-reuse:1
@ 1676 train 4.4330 , allloss: 4.4330, dt: 700.28ms, fracRes: 0.2404, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8628, norm(y): 0.9940, norm:0.4782, tok/sec: 187170.73, flops:163.93, batch-reuse:1
@ 1677 train 4.2457 , allloss: 4.2457, dt: 695.40ms, fracRes: 0.2416, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8628, norm(y): 0.9939, norm:0.4545, tok/sec: 188483.36, flops:165.08, batch-reuse:1
@ 1678 train 4.2743 , allloss: 4.2743, dt: 692.87ms, fracRes: 0.2425, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8616, norm(y): 0.9937, norm:0.4389, tok/sec: 189172.21, flops:165.69, batch-reuse:1
@ 1679 train 4.3853 , allloss: 4.3853, dt: 687.15ms, fracRes: 0.2385, norm(attn): 0.3809, norm(output): 0.7578, norm(x): 0.8638, norm(y): 0.9941, norm:0.3934, tok/sec: 190746.76, flops:167.07, batch-reuse:1
@ 1680 train 4.3347 , allloss: 4.3347, dt: 691.59ms, fracRes: 0.2421, norm(attn): 0.3848, norm(output): 0.7617, norm(x): 0.8673, norm(y): 0.9942, norm:0.4024, tok/sec: 189521.56, flops:165.99, batch-reuse:1
@ 1681 train 4.3140 , allloss: 4.3140, dt: 685.65ms, fracRes: 0.2415, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8648, norm(y): 0.9940, norm:0.4194, tok/sec: 191163.83, flops:167.43, batch-reuse:1
@ 1682 train 4.3432 , allloss: 4.3432, dt: 694.07ms, fracRes: 0.2419, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8651, norm(y): 0.9939, norm:0.4009, tok/sec: 188845.54, flops:165.40, batch-reuse:1
@ 1683 train 4.1972 , allloss: 4.1972, dt: 694.05ms, fracRes: 0.2416, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8571, norm(y): 0.9936, norm:0.3695, tok/sec: 188850.15, flops:165.41, batch-reuse:1
@ 1684 train 4.2580 , allloss: 4.2580, dt: 702.48ms, fracRes: 0.2431, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8633, norm(y): 0.9937, norm:0.4008, tok/sec: 186584.97, flops:163.42, batch-reuse:1
@ 1685 train 4.3293 , allloss: 4.3293, dt: 700.70ms, fracRes: 0.2444, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8688, norm(y): 0.9938, norm:0.3553, tok/sec: 187059.79, flops:163.84, batch-reuse:1
@ 1686 train 4.2811 , allloss: 4.2811, dt: 701.24ms, fracRes: 0.2412, norm(attn): 0.3867, norm(output): 0.7539, norm(x): 0.8672, norm(y): 0.9939, norm:0.3879, tok/sec: 186914.85, flops:163.71, batch-reuse:1
@ 1687 train 4.3413 , allloss: 4.3413, dt: 700.10ms, fracRes: 0.2408, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8651, norm(y): 0.9940, norm:0.3715, tok/sec: 187217.77, flops:163.98, batch-reuse:1
@ 1688 train 4.4177 , allloss: 4.4177, dt: 705.83ms, fracRes: 0.2415, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8668, norm(y): 0.9941, norm:0.4200, tok/sec: 185698.01, flops:162.64, batch-reuse:1
@ 1689 train 4.2834 , allloss: 4.2834, dt: 690.77ms, fracRes: 0.2402, norm(attn): 0.3867, norm(output): 0.7578, norm(x): 0.8682, norm(y): 0.9942, norm:0.4160, tok/sec: 189748.35, flops:166.19, batch-reuse:1
@ 1690 train 4.2771 , allloss: 4.2771, dt: 690.82ms, fracRes: 0.2349, norm(attn): 0.3828, norm(output): 0.7500, norm(x): 0.8613, norm(y): 0.9941, norm:0.4184, tok/sec: 189733.42, flops:166.18, batch-reuse:1
@ 1691 train 4.2251 , allloss: 4.2251, dt: 688.48ms, fracRes: 0.2424, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8594, norm(y): 0.9939, norm:0.4273, tok/sec: 190379.69, flops:166.75, batch-reuse:1
@ 1692 train 4.2123 , allloss: 4.2123, dt: 701.59ms, fracRes: 0.2442, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8604, norm(y): 0.9939, norm:0.4166, tok/sec: 186820.14, flops:163.63, batch-reuse:1
@ 1693 train 4.4846 , allloss: 4.4846, dt: 695.81ms, fracRes: 0.2390, norm(attn): 0.3809, norm(output): 0.7578, norm(x): 0.8654, norm(y): 0.9939, norm:0.4895, tok/sec: 188373.18, flops:164.99, batch-reuse:1
@ 1694 train 4.4053 , allloss: 4.4053, dt: 689.21ms, fracRes: 0.2414, norm(attn): 0.3809, norm(output): 0.7617, norm(x): 0.8728, norm(y): 0.9938, norm:0.5099, tok/sec: 190177.44, flops:166.57, batch-reuse:1
@ 1695 train 4.3313 , allloss: 4.3313, dt: 686.75ms, fracRes: 0.2421, norm(attn): 0.3789, norm(output): 0.7617, norm(x): 0.8723, norm(y): 0.9939, norm:0.5252, tok/sec: 190859.01, flops:167.16, batch-reuse:1
@ 1696 train 4.3130 , allloss: 4.3130, dt: 697.21ms, fracRes: 0.2447, norm(attn): 0.3789, norm(output): 0.7617, norm(x): 0.8726, norm(y): 0.9938, norm:0.4529, tok/sec: 187995.95, flops:164.66, batch-reuse:1
@ 1697 train 4.2786 , allloss: 4.2786, dt: 696.74ms, fracRes: 0.2448, norm(attn): 0.3770, norm(output): 0.7578, norm(x): 0.8667, norm(y): 0.9938, norm:0.4391, tok/sec: 188120.75, flops:164.77, batch-reuse:1
@ 1698 train 4.2655 , allloss: 4.2655, dt: 697.81ms, fracRes: 0.2420, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8616, norm(y): 0.9939, norm:0.4638, tok/sec: 187833.51, flops:164.52, batch-reuse:1
@ 1699 train 4.2622 , allloss: 4.2622, dt: 693.59ms, fracRes: 0.2407, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8613, norm(y): 0.9939, norm:0.4284, tok/sec: 188975.57, flops:165.52, batch-reuse:1
@ 1700 train 4.3066 , allloss: 4.3066, dt: 711.39ms, fracRes: 0.2430, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8653, norm(y): 0.9938, norm:0.3817, tok/sec: 184248.72, flops:161.38, batch-reuse:1
@ 1701 train 4.3016 , allloss: 4.3016, dt: 707.76ms, fracRes: 0.2490, norm(attn): 0.3750, norm(output): 0.7578, norm(x): 0.8709, norm(y): 0.9937, norm:0.4157, tok/sec: 185193.13, flops:162.20, batch-reuse:1
@ 1702 train 4.2670 , allloss: 4.2670, dt: 694.36ms, fracRes: 0.2472, norm(attn): 0.3750, norm(output): 0.7539, norm(x): 0.8648, norm(y): 0.9935, norm:0.4432, tok/sec: 188766.37, flops:165.33, batch-reuse:1
@ 1703 train 4.2233 , allloss: 4.2233, dt: 700.42ms, fracRes: 0.2481, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8611, norm(y): 0.9934, norm:0.4092, tok/sec: 187132.89, flops:163.90, batch-reuse:1
@ 1704 train 4.2995 , allloss: 4.2995, dt: 693.39ms, fracRes: 0.2492, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8589, norm(y): 0.9935, norm:0.4287, tok/sec: 189031.32, flops:165.56, batch-reuse:1
@ 1705 train 4.2073 , allloss: 4.2073, dt: 697.21ms, fracRes: 0.2483, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8612, norm(y): 0.9937, norm:0.6000, tok/sec: 187994.86, flops:164.66, batch-reuse:1
@ 1706 train 4.2267 , allloss: 4.2267, dt: 692.31ms, fracRes: 0.2410, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8573, norm(y): 0.9937, norm:0.5569, tok/sec: 189326.02, flops:165.82, batch-reuse:1
@ 1707 train 4.1989 , allloss: 4.1989, dt: 696.31ms, fracRes: 0.2339, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8560, norm(y): 0.9939, norm:0.4942, tok/sec: 188238.89, flops:164.87, batch-reuse:1
@ 1708 train 4.1882 , allloss: 4.1882, dt: 696.06ms, fracRes: 0.2331, norm(attn): 0.3867, norm(output): 0.7539, norm(x): 0.8582, norm(y): 0.9941, norm:0.5042, tok/sec: 188305.94, flops:164.93, batch-reuse:1
@ 1709 train 4.2708 , allloss: 4.2708, dt: 692.96ms, fracRes: 0.2394, norm(attn): 0.3828, norm(output): 0.7578, norm(x): 0.8656, norm(y): 0.9940, norm:0.4721, tok/sec: 189148.84, flops:165.67, batch-reuse:1
@ 1710 train 4.2174 , allloss: 4.2174, dt: 695.04ms, fracRes: 0.2422, norm(attn): 0.3848, norm(output): 0.7578, norm(x): 0.8695, norm(y): 0.9939, norm:0.4534, tok/sec: 188582.80, flops:165.17, batch-reuse:1
@ 1711 train 4.2453 , allloss: 4.2453, dt: 697.04ms, fracRes: 0.2433, norm(attn): 0.3867, norm(output): 0.7539, norm(x): 0.8696, norm(y): 0.9941, norm:0.4478, tok/sec: 188042.06, flops:164.70, batch-reuse:1
@ 1712 train 4.4120 , allloss: 4.4120, dt: 690.73ms, fracRes: 0.2451, norm(attn): 0.3809, norm(output): 0.7656, norm(x): 0.8760, norm(y): 0.9942, norm:0.4180, tok/sec: 189757.52, flops:166.20, batch-reuse:1
@ 1713 train 4.1467 , allloss: 4.1467, dt: 694.78ms, fracRes: 0.2497, norm(attn): 0.3828, norm(output): 0.7578, norm(x): 0.8751, norm(y): 0.9940, norm:0.4487, tok/sec: 188651.65, flops:165.23, batch-reuse:1
@ 1714 train 4.2297 , allloss: 4.2297, dt: 682.42ms, fracRes: 0.2467, norm(attn): 0.3828, norm(output): 0.7578, norm(x): 0.8715, norm(y): 0.9940, norm:0.4185, tok/sec: 192070.67, flops:168.23, batch-reuse:1
@ 1715 train 4.2123 , allloss: 4.2123, dt: 691.57ms, fracRes: 0.2430, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8680, norm(y): 0.9940, norm:0.4139, tok/sec: 189528.16, flops:166.00, batch-reuse:1
@ 1716 train 4.3087 , allloss: 4.3087, dt: 694.64ms, fracRes: 0.2414, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8693, norm(y): 0.9941, norm:0.4017, tok/sec: 188691.60, flops:165.27, batch-reuse:1
@ 1717 train 4.4305 , allloss: 4.4305, dt: 683.03ms, fracRes: 0.2433, norm(attn): 0.3828, norm(output): 0.7656, norm(x): 0.8735, norm(y): 0.9940, norm:0.5246, tok/sec: 191897.03, flops:168.07, batch-reuse:1
@ 1718 train 4.3805 , allloss: 4.3805, dt: 693.17ms, fracRes: 0.2435, norm(attn): 0.3867, norm(output): 0.7656, norm(x): 0.8766, norm(y): 0.9941, norm:0.5419, tok/sec: 189091.53, flops:165.62, batch-reuse:1
@ 1719 train 4.3562 , allloss: 4.3562, dt: 684.17ms, fracRes: 0.2473, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8697, norm(y): 0.9937, norm:0.5611, tok/sec: 191579.32, flops:167.80, batch-reuse:1
@ 1720 train 4.2605 , allloss: 4.2605, dt: 686.57ms, fracRes: 0.2479, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8725, norm(y): 0.9938, norm:0.4776, tok/sec: 190908.51, flops:167.21, batch-reuse:1
@ 1721 train 4.3500 , allloss: 4.3500, dt: 693.78ms, fracRes: 0.2515, norm(attn): 0.3750, norm(output): 0.7578, norm(x): 0.8756, norm(y): 0.9937, norm:0.4911, tok/sec: 188924.52, flops:165.47, batch-reuse:1
@ 1722 train 4.3461 , allloss: 4.3461, dt: 705.33ms, fracRes: 0.2523, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8774, norm(y): 0.9937, norm:0.5046, tok/sec: 185829.89, flops:162.76, batch-reuse:1
@ 1723 train 4.2885 , allloss: 4.2885, dt: 695.37ms, fracRes: 0.2468, norm(attn): 0.3770, norm(output): 0.7578, norm(x): 0.8734, norm(y): 0.9938, norm:0.4737, tok/sec: 188492.02, flops:165.09, batch-reuse:1
@ 1724 train 4.1682 , allloss: 4.1682, dt: 710.37ms, fracRes: 0.2395, norm(attn): 0.3867, norm(output): 0.7578, norm(x): 0.8683, norm(y): 0.9939, norm:0.4475, tok/sec: 184512.22, flops:161.61, batch-reuse:1
@ 1725 train 4.2690 , allloss: 4.2690, dt: 705.98ms, fracRes: 0.2418, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8606, norm(y): 0.9938, norm:0.4896, tok/sec: 185658.76, flops:162.61, batch-reuse:1
@ 1726 train 4.2576 , allloss: 4.2576, dt: 712.73ms, fracRes: 0.2470, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8623, norm(y): 0.9936, norm:0.4262, tok/sec: 183900.86, flops:161.07, batch-reuse:1
@ 1727 train 4.1792 , allloss: 4.1792, dt: 684.04ms, fracRes: 0.2491, norm(attn): 0.3750, norm(output): 0.7578, norm(x): 0.8709, norm(y): 0.9936, norm:0.4169, tok/sec: 191614.11, flops:167.83, batch-reuse:1
@ 1728 train 4.3775 , allloss: 4.3775, dt: 693.96ms, fracRes: 0.2463, norm(attn): 0.3770, norm(output): 0.7617, norm(x): 0.8736, norm(y): 0.9939, norm:0.4507, tok/sec: 188876.36, flops:165.43, batch-reuse:1
@ 1729 train 4.4918 , allloss: 4.4918, dt: 698.31ms, fracRes: 0.2500, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8844, norm(y): 0.9939, norm:0.4812, tok/sec: 187699.41, flops:164.40, batch-reuse:1
@ 1730 train 4.2761 , allloss: 4.2761, dt: 690.83ms, fracRes: 0.2467, norm(attn): 0.3789, norm(output): 0.7695, norm(x): 0.8774, norm(y): 0.9937, norm:0.4230, tok/sec: 189730.54, flops:166.18, batch-reuse:1
@ 1731 train 4.2301 , allloss: 4.2301, dt: 707.46ms, fracRes: 0.2473, norm(attn): 0.3789, norm(output): 0.7656, norm(x): 0.8742, norm(y): 0.9937, norm:0.4398, tok/sec: 185271.83, flops:162.27, batch-reuse:1
@ 1732 train 4.2065 , allloss: 4.2065, dt: 710.55ms, fracRes: 0.2502, norm(attn): 0.3770, norm(output): 0.7617, norm(x): 0.8741, norm(y): 0.9937, norm:0.4082, tok/sec: 184464.30, flops:161.56, batch-reuse:1
@ 1733 train 4.2518 , allloss: 4.2518, dt: 715.63ms, fracRes: 0.2474, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8650, norm(y): 0.9939, norm:0.3704, tok/sec: 183155.78, flops:160.42, batch-reuse:1
@ 1734 train 4.6679 , allloss: 4.6679, dt: 711.48ms, fracRes: 0.2447, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8611, norm(y): 0.9943, norm:0.5349, tok/sec: 184224.77, flops:161.35, batch-reuse:1
@ 1735 train 4.2691 , allloss: 4.2691, dt: 710.10ms, fracRes: 0.2493, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8689, norm(y): 0.9939, norm:0.4903, tok/sec: 184583.65, flops:161.67, batch-reuse:1
@ 1736 train 4.2308 , allloss: 4.2308, dt: 685.56ms, fracRes: 0.2514, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8692, norm(y): 0.9937, norm:0.4153, tok/sec: 191190.42, flops:167.46, batch-reuse:1
@ 1737 train 4.1606 , allloss: 4.1606, dt: 689.51ms, fracRes: 0.2510, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8625, norm(y): 0.9937, norm:0.4567, tok/sec: 190094.06, flops:166.49, batch-reuse:1
@ 1738 train 4.2094 , allloss: 4.2094, dt: 687.58ms, fracRes: 0.2453, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8633, norm(y): 0.9940, norm:0.4585, tok/sec: 190627.44, flops:166.96, batch-reuse:1
@ 1739 train 4.2000 , allloss: 4.2000, dt: 689.50ms, fracRes: 0.2471, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8696, norm(y): 0.9939, norm:0.4129, tok/sec: 190096.29, flops:166.50, batch-reuse:1
@ 1740 train 4.1774 , allloss: 4.1774, dt: 697.36ms, fracRes: 0.2522, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8721, norm(y): 0.9937, norm:0.4036, tok/sec: 187955.72, flops:164.62, batch-reuse:1
@ 1741 train 4.3154 , allloss: 4.3154, dt: 701.60ms, fracRes: 0.2500, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8688, norm(y): 0.9938, norm:0.4197, tok/sec: 186817.66, flops:163.63, batch-reuse:1
@ 1742 train 4.2460 , allloss: 4.2460, dt: 699.44ms, fracRes: 0.2543, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8721, norm(y): 0.9936, norm:0.4034, tok/sec: 187396.84, flops:164.13, batch-reuse:1
@ 1743 train 4.2909 , allloss: 4.2909, dt: 702.32ms, fracRes: 0.2507, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8735, norm(y): 0.9938, norm:0.4326, tok/sec: 186627.28, flops:163.46, batch-reuse:1
@ 1744 train 4.1933 , allloss: 4.1933, dt: 698.12ms, fracRes: 0.2492, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8695, norm(y): 0.9938, norm:0.3968, tok/sec: 187749.35, flops:164.44, batch-reuse:1
@ 1745 train 4.1781 , allloss: 4.1781, dt: 687.97ms, fracRes: 0.2443, norm(attn): 0.3887, norm(output): 0.7539, norm(x): 0.8658, norm(y): 0.9940, norm:0.4009, tok/sec: 190520.88, flops:166.87, batch-reuse:1
@ 1746 train 4.2769 , allloss: 4.2769, dt: 687.07ms, fracRes: 0.2435, norm(attn): 0.3848, norm(output): 0.7539, norm(x): 0.8682, norm(y): 0.9940, norm:0.4140, tok/sec: 190770.39, flops:167.09, batch-reuse:1
@ 1747 train 4.1241 , allloss: 4.1241, dt: 692.00ms, fracRes: 0.2525, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8678, norm(y): 0.9937, norm:0.3987, tok/sec: 189411.34, flops:165.90, batch-reuse:1
@ 1748 train 4.2008 , allloss: 4.2008, dt: 697.72ms, fracRes: 0.2506, norm(attn): 0.3828, norm(output): 0.7500, norm(x): 0.8688, norm(y): 0.9939, norm:0.4461, tok/sec: 187856.68, flops:164.54, batch-reuse:1
@ 1749 train 4.2941 , allloss: 4.2941, dt: 683.60ms, fracRes: 0.2501, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8685, norm(y): 0.9938, norm:0.3977, tok/sec: 191737.61, flops:167.93, batch-reuse:1
@ 1750 train 4.2752 , allloss: 4.2752, dt: 698.64ms, fracRes: 0.2519, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8673, norm(y): 0.9936, norm:0.3716, tok/sec: 187609.99, flops:164.32, batch-reuse:1
@ 1751 train 4.3747 , allloss: 4.3747, dt: 691.05ms, fracRes: 0.2468, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8683, norm(y): 0.9936, norm:0.5456, tok/sec: 189670.45, flops:166.12, batch-reuse:1
@ 1752 train 4.4375 , allloss: 4.4375, dt: 702.80ms, fracRes: 0.2440, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8668, norm(y): 0.9939, norm:0.5038, tok/sec: 186500.66, flops:163.35, batch-reuse:1
@ 1753 train 4.2593 , allloss: 4.2593, dt: 703.05ms, fracRes: 0.2490, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8665, norm(y): 0.9937, norm:0.4161, tok/sec: 186434.44, flops:163.29, batch-reuse:1
@ 1754 train 4.2362 , allloss: 4.2362, dt: 702.08ms, fracRes: 0.2538, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8706, norm(y): 0.9936, norm:0.4399, tok/sec: 186691.16, flops:163.51, batch-reuse:1
@ 1755 train 4.2190 , allloss: 4.2190, dt: 708.07ms, fracRes: 0.2490, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8673, norm(y): 0.9937, norm:0.3947, tok/sec: 185112.57, flops:162.13, batch-reuse:1
@ 1756 train 4.2027 , allloss: 4.2027, dt: 698.66ms, fracRes: 0.2455, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8677, norm(y): 0.9939, norm:0.3964, tok/sec: 187603.53, flops:164.31, batch-reuse:1
@ 1757 train 4.2765 , allloss: 4.2765, dt: 705.77ms, fracRes: 0.2471, norm(attn): 0.3770, norm(output): 0.7578, norm(x): 0.8683, norm(y): 0.9938, norm:0.3976, tok/sec: 185713.63, flops:162.66, batch-reuse:1
@ 1758 train 4.3328 , allloss: 4.3328, dt: 706.69ms, fracRes: 0.2493, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8716, norm(y): 0.9939, norm:0.5259, tok/sec: 185474.29, flops:162.45, batch-reuse:1
@ 1759 train 4.3170 , allloss: 4.3170, dt: 703.84ms, fracRes: 0.2426, norm(attn): 0.3789, norm(output): 0.7500, norm(x): 0.8640, norm(y): 0.9940, norm:0.5039, tok/sec: 186224.77, flops:163.11, batch-reuse:1
@ 1760 train 4.1462 , allloss: 4.1462, dt: 706.74ms, fracRes: 0.2467, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8637, norm(y): 0.9936, norm:0.4474, tok/sec: 185459.52, flops:162.44, batch-reuse:1
@ 1761 train 4.1064 , allloss: 4.1064, dt: 696.78ms, fracRes: 0.2546, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8696, norm(y): 0.9934, norm:0.3851, tok/sec: 188111.87, flops:164.76, batch-reuse:1
@ 1762 train 3.9840 , allloss: 3.9840, dt: 704.27ms, fracRes: 0.2503, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8675, norm(y): 0.9938, norm:0.4526, tok/sec: 186111.10, flops:163.01, batch-reuse:1
@ 1763 train 4.1853 , allloss: 4.1853, dt: 713.62ms, fracRes: 0.2535, norm(attn): 0.3809, norm(output): 0.7578, norm(x): 0.8765, norm(y): 0.9939, norm:0.4020, tok/sec: 183672.06, flops:160.87, batch-reuse:1
@ 1764 train 4.1967 , allloss: 4.1967, dt: 710.67ms, fracRes: 0.2539, norm(attn): 0.3750, norm(output): 0.7578, norm(x): 0.8747, norm(y): 0.9938, norm:0.3995, tok/sec: 184434.97, flops:161.54, batch-reuse:1
@ 1765 train 4.1833 , allloss: 4.1833, dt: 708.72ms, fracRes: 0.2515, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8757, norm(y): 0.9938, norm:0.4071, tok/sec: 184942.25, flops:161.98, batch-reuse:1
@ 1766 train 4.0790 , allloss: 4.0790, dt: 703.45ms, fracRes: 0.2529, norm(attn): 0.3809, norm(output): 0.7617, norm(x): 0.8760, norm(y): 0.9936, norm:0.3868, tok/sec: 186326.32, flops:163.19, batch-reuse:1
@ 1767 train 4.1957 , allloss: 4.1957, dt: 699.46ms, fracRes: 0.2496, norm(attn): 0.3809, norm(output): 0.7617, norm(x): 0.8750, norm(y): 0.9938, norm:0.3857, tok/sec: 187389.31, flops:164.13, batch-reuse:1
@ 1768 train 4.2380 , allloss: 4.2380, dt: 701.08ms, fracRes: 0.2490, norm(attn): 0.3848, norm(output): 0.7617, norm(x): 0.8724, norm(y): 0.9939, norm:0.3903, tok/sec: 186958.39, flops:163.75, batch-reuse:1
@ 1769 train 4.1298 , allloss: 4.1298, dt: 698.15ms, fracRes: 0.2474, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8686, norm(y): 0.9940, norm:0.3703, tok/sec: 187743.19, flops:164.44, batch-reuse:1
@ 1770 train 4.1276 , allloss: 4.1276, dt: 709.37ms, fracRes: 0.2492, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8670, norm(y): 0.9938, norm:0.4022, tok/sec: 184772.55, flops:161.83, batch-reuse:1
@ 1771 train 4.1318 , allloss: 4.1318, dt: 708.60ms, fracRes: 0.2501, norm(attn): 0.3750, norm(output): 0.7578, norm(x): 0.8692, norm(y): 0.9936, norm:0.3851, tok/sec: 184972.99, flops:162.01, batch-reuse:1
@ 1772 train 4.1189 , allloss: 4.1189, dt: 710.97ms, fracRes: 0.2509, norm(attn): 0.3770, norm(output): 0.7617, norm(x): 0.8725, norm(y): 0.9935, norm:0.3713, tok/sec: 184357.04, flops:161.47, batch-reuse:1
@ 1773 train 4.0510 , allloss: 4.0510, dt: 710.72ms, fracRes: 0.2509, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8723, norm(y): 0.9936, norm:0.3732, tok/sec: 184420.36, flops:161.53, batch-reuse:1
@ 1774 train 4.2457 , allloss: 4.2457, dt: 706.01ms, fracRes: 0.2502, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8732, norm(y): 0.9939, norm:0.3671, tok/sec: 185651.48, flops:162.60, batch-reuse:1
@ 1775 train 4.1277 , allloss: 4.1277, dt: 704.70ms, fracRes: 0.2505, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8712, norm(y): 0.9939, norm:0.3604, tok/sec: 185997.26, flops:162.91, batch-reuse:1
@ 1776 train 4.1180 , allloss: 4.1180, dt: 713.94ms, fracRes: 0.2508, norm(attn): 0.3867, norm(output): 0.7500, norm(x): 0.8662, norm(y): 0.9940, norm:0.3630, tok/sec: 183589.44, flops:160.80, batch-reuse:1
@ 1777 train 4.0457 , allloss: 4.0457, dt: 708.38ms, fracRes: 0.2510, norm(attn): 0.3809, norm(output): 0.7500, norm(x): 0.8625, norm(y): 0.9938, norm:0.3837, tok/sec: 185030.76, flops:162.06, batch-reuse:1
@ 1778 train 4.2571 , allloss: 4.2571, dt: 709.37ms, fracRes: 0.2421, norm(attn): 0.3848, norm(output): 0.7617, norm(x): 0.8650, norm(y): 0.9941, norm:0.5137, tok/sec: 184771.87, flops:161.83, batch-reuse:1
@ 1779 train 4.1059 , allloss: 4.1059, dt: 709.73ms, fracRes: 0.2515, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8674, norm(y): 0.9937, norm:0.4212, tok/sec: 184678.08, flops:161.75, batch-reuse:1
@ 1780 train 4.1748 , allloss: 4.1748, dt: 711.73ms, fracRes: 0.2507, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8687, norm(y): 0.9937, norm:0.5009, tok/sec: 184160.89, flops:161.30, batch-reuse:1
@ 1781 train 4.1756 , allloss: 4.1756, dt: 703.82ms, fracRes: 0.2522, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8704, norm(y): 0.9937, norm:0.4180, tok/sec: 186230.51, flops:163.11, batch-reuse:1
@ 1782 train 4.2019 , allloss: 4.2019, dt: 692.52ms, fracRes: 0.2532, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8723, norm(y): 0.9937, norm:0.3913, tok/sec: 189268.79, flops:165.77, batch-reuse:1
@ 1783 train 4.1853 , allloss: 4.1853, dt: 696.67ms, fracRes: 0.2540, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8700, norm(y): 0.9937, norm:0.3641, tok/sec: 188140.90, flops:164.78, batch-reuse:1
@ 1784 train 4.0869 , allloss: 4.0869, dt: 692.06ms, fracRes: 0.2548, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8690, norm(y): 0.9938, norm:0.4091, tok/sec: 189394.51, flops:165.88, batch-reuse:1
@ 1785 train 4.1196 , allloss: 4.1196, dt: 680.07ms, fracRes: 0.2548, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8694, norm(y): 0.9937, norm:0.4068, tok/sec: 192732.04, flops:168.81, batch-reuse:1
@ 1786 train 4.1809 , allloss: 4.1809, dt: 692.13ms, fracRes: 0.2549, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8675, norm(y): 0.9937, norm:0.3734, tok/sec: 189375.85, flops:165.87, batch-reuse:1
@ 1787 train 4.1364 , allloss: 4.1364, dt: 699.00ms, fracRes: 0.2575, norm(attn): 0.3770, norm(output): 0.7500, norm(x): 0.8693, norm(y): 0.9936, norm:0.3691, tok/sec: 187513.24, flops:164.23, batch-reuse:1
@ 1788 train 4.1976 , allloss: 4.1976, dt: 696.32ms, fracRes: 0.2530, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8735, norm(y): 0.9938, norm:0.3630, tok/sec: 188235.28, flops:164.87, batch-reuse:1
@ 1789 train 4.2108 , allloss: 4.2108, dt: 700.76ms, fracRes: 0.2528, norm(attn): 0.3770, norm(output): 0.7578, norm(x): 0.8783, norm(y): 0.9941, norm:0.4346, tok/sec: 187041.65, flops:163.82, batch-reuse:1
@ 1790 train 4.2146 , allloss: 4.2146, dt: 694.36ms, fracRes: 0.2512, norm(attn): 0.3750, norm(output): 0.7617, norm(x): 0.8749, norm(y): 0.9939, norm:0.4761, tok/sec: 188766.05, flops:165.33, batch-reuse:1
@ 1791 train 4.1652 , allloss: 4.1652, dt: 687.72ms, fracRes: 0.2539, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8728, norm(y): 0.9936, norm:0.4471, tok/sec: 190589.44, flops:166.93, batch-reuse:1
@ 1792 train 4.2522 , allloss: 4.2522, dt: 686.29ms, fracRes: 0.2569, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8718, norm(y): 0.9937, norm:0.4669, tok/sec: 190986.24, flops:167.28, batch-reuse:1
@ 1793 train 4.2530 , allloss: 4.2530, dt: 694.02ms, fracRes: 0.2541, norm(attn): 0.3770, norm(output): 0.7617, norm(x): 0.8756, norm(y): 0.9940, norm:0.4544, tok/sec: 188858.97, flops:165.41, batch-reuse:1
@ 1794 train 4.1528 , allloss: 4.1528, dt: 693.52ms, fracRes: 0.2501, norm(attn): 0.3867, norm(output): 0.7656, norm(x): 0.8817, norm(y): 0.9942, norm:0.4718, tok/sec: 188995.32, flops:165.53, batch-reuse:1
@ 1795 train 4.2075 , allloss: 4.2075, dt: 690.60ms, fracRes: 0.2501, norm(attn): 0.3828, norm(output): 0.7656, norm(x): 0.8785, norm(y): 0.9941, norm:0.4044, tok/sec: 189795.12, flops:166.23, batch-reuse:1
@ 1796 train 4.0877 , allloss: 4.0877, dt: 693.55ms, fracRes: 0.2514, norm(attn): 0.3848, norm(output): 0.7578, norm(x): 0.8757, norm(y): 0.9939, norm:0.3753, tok/sec: 188986.03, flops:165.52, batch-reuse:1
@ 1797 train 4.1329 , allloss: 4.1329, dt: 706.56ms, fracRes: 0.2524, norm(attn): 0.3828, norm(output): 0.7578, norm(x): 0.8722, norm(y): 0.9938, norm:0.4143, tok/sec: 185508.02, flops:162.48, batch-reuse:1
@ 1798 train 4.1305 , allloss: 4.1305, dt: 703.14ms, fracRes: 0.2552, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8723, norm(y): 0.9937, norm:0.4027, tok/sec: 186409.15, flops:163.27, batch-reuse:1
@ 1799 train 4.1688 , allloss: 4.1688, dt: 690.40ms, fracRes: 0.2519, norm(attn): 0.3750, norm(output): 0.7539, norm(x): 0.8719, norm(y): 0.9938, norm:0.3577, tok/sec: 189850.57, flops:166.28, batch-reuse:1
@ 1800 train 4.1224 , allloss: 4.1224, dt: 701.21ms, fracRes: 0.2505, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8676, norm(y): 0.9938, norm:0.4163, tok/sec: 186921.46, flops:163.72, batch-reuse:1
@ 1801 train 4.0525 , allloss: 4.0525, dt: 702.31ms, fracRes: 0.2504, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8693, norm(y): 0.9938, norm:0.3648, tok/sec: 186630.51, flops:163.46, batch-reuse:1
@ 1802 train 4.2743 , allloss: 4.2743, dt: 700.08ms, fracRes: 0.2495, norm(attn): 0.3770, norm(output): 0.7578, norm(x): 0.8704, norm(y): 0.9940, norm:0.4110, tok/sec: 187223.89, flops:163.98, batch-reuse:1
@ 1803 train 4.1695 , allloss: 4.1695, dt: 699.24ms, fracRes: 0.2470, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8694, norm(y): 0.9940, norm:0.4470, tok/sec: 187449.17, flops:164.18, batch-reuse:1
@ 1804 train 4.1935 , allloss: 4.1935, dt: 701.75ms, fracRes: 0.2508, norm(attn): 0.3750, norm(output): 0.7617, norm(x): 0.8754, norm(y): 0.9939, norm:0.5090, tok/sec: 186778.38, flops:163.59, batch-reuse:1
@ 1805 train 4.1558 , allloss: 4.1558, dt: 702.32ms, fracRes: 0.2556, norm(attn): 0.3750, norm(output): 0.7617, norm(x): 0.8793, norm(y): 0.9935, norm:0.4934, tok/sec: 186627.41, flops:163.46, batch-reuse:1
@ 1806 train 4.2127 , allloss: 4.2127, dt: 700.88ms, fracRes: 0.2509, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8722, norm(y): 0.9937, norm:0.4457, tok/sec: 187011.87, flops:163.80, batch-reuse:1
@ 1807 train 4.2271 , allloss: 4.2271, dt: 699.77ms, fracRes: 0.2521, norm(attn): 0.3750, norm(output): 0.7539, norm(x): 0.8699, norm(y): 0.9937, norm:0.4829, tok/sec: 187307.78, flops:164.05, batch-reuse:1
@ 1808 train 4.0591 , allloss: 4.0591, dt: 698.28ms, fracRes: 0.2435, norm(attn): 0.3809, norm(output): 0.7617, norm(x): 0.8706, norm(y): 0.9938, norm:0.5351, tok/sec: 187706.08, flops:164.40, batch-reuse:1
@ 1809 train 4.0863 , allloss: 4.0863, dt: 699.18ms, fracRes: 0.2541, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8748, norm(y): 0.9936, norm:0.4289, tok/sec: 187465.99, flops:164.19, batch-reuse:1
@ 1810 train 3.9868 , allloss: 3.9868, dt: 682.40ms, fracRes: 0.2520, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8686, norm(y): 0.9936, norm:0.4991, tok/sec: 192073.82, flops:168.23, batch-reuse:1
@ 1811 train 4.0427 , allloss: 4.0427, dt: 690.73ms, fracRes: 0.2528, norm(attn): 0.3809, norm(output): 0.7539, norm(x): 0.8673, norm(y): 0.9937, norm:0.4568, tok/sec: 189758.37, flops:166.20, batch-reuse:1
@ 1812 train 4.1201 , allloss: 4.1201, dt: 703.76ms, fracRes: 0.2516, norm(attn): 0.3828, norm(output): 0.7617, norm(x): 0.8749, norm(y): 0.9939, norm:0.4223, tok/sec: 186246.22, flops:163.12, batch-reuse:1
@ 1813 train 4.0124 , allloss: 4.0124, dt: 694.71ms, fracRes: 0.2546, norm(attn): 0.3809, norm(output): 0.7578, norm(x): 0.8768, norm(y): 0.9938, norm:0.4180, tok/sec: 188670.82, flops:165.25, batch-reuse:1
@ 1814 train 4.1574 , allloss: 4.1574, dt: 697.82ms, fracRes: 0.2548, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8723, norm(y): 0.9936, norm:0.4268, tok/sec: 187829.92, flops:164.51, batch-reuse:1
@ 1815 train 4.0695 , allloss: 4.0695, dt: 693.31ms, fracRes: 0.2549, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8698, norm(y): 0.9934, norm:0.4220, tok/sec: 189052.58, flops:165.58, batch-reuse:1
@ 1816 train 4.0437 , allloss: 4.0437, dt: 683.88ms, fracRes: 0.2573, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8713, norm(y): 0.9936, norm:0.3948, tok/sec: 191658.66, flops:167.87, batch-reuse:1
@ 1817 train 4.0402 , allloss: 4.0402, dt: 701.09ms, fracRes: 0.2571, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8711, norm(y): 0.9936, norm:0.4444, tok/sec: 186953.62, flops:163.74, batch-reuse:1
@ 1818 train 4.0342 , allloss: 4.0342, dt: 706.13ms, fracRes: 0.2572, norm(attn): 0.3770, norm(output): 0.7578, norm(x): 0.8746, norm(y): 0.9934, norm:0.4044, tok/sec: 185620.71, flops:162.58, batch-reuse:1
@ 1819 train 4.1914 , allloss: 4.1914, dt: 691.62ms, fracRes: 0.2564, norm(attn): 0.3789, norm(output): 0.7617, norm(x): 0.8769, norm(y): 0.9936, norm:0.4165, tok/sec: 189514.70, flops:165.99, batch-reuse:1
@ 1820 train 4.0932 , allloss: 4.0932, dt: 691.05ms, fracRes: 0.2582, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8784, norm(y): 0.9935, norm:0.3751, tok/sec: 189669.73, flops:166.12, batch-reuse:1
@ 1821 train 3.9759 , allloss: 3.9759, dt: 682.65ms, fracRes: 0.2583, norm(attn): 0.3770, norm(output): 0.7617, norm(x): 0.8782, norm(y): 0.9934, norm:0.3932, tok/sec: 192004.66, flops:168.17, batch-reuse:1
@ 1822 train 3.9432 , allloss: 3.9432, dt: 703.55ms, fracRes: 0.2548, norm(attn): 0.3809, norm(output): 0.7617, norm(x): 0.8777, norm(y): 0.9936, norm:0.3853, tok/sec: 186300.37, flops:163.17, batch-reuse:1
@ 1823 train 3.9943 , allloss: 3.9943, dt: 691.24ms, fracRes: 0.2558, norm(attn): 0.3770, norm(output): 0.7617, norm(x): 0.8777, norm(y): 0.9936, norm:0.3871, tok/sec: 189619.88, flops:166.08, batch-reuse:1
@ 1824 train 4.0346 , allloss: 4.0346, dt: 698.64ms, fracRes: 0.2602, norm(attn): 0.3770, norm(output): 0.7617, norm(x): 0.8814, norm(y): 0.9935, norm:0.3955, tok/sec: 187609.93, flops:164.32, batch-reuse:1
@ 1825 train 4.0770 , allloss: 4.0770, dt: 698.00ms, fracRes: 0.2601, norm(attn): 0.3770, norm(output): 0.7578, norm(x): 0.8812, norm(y): 0.9936, norm:0.3979, tok/sec: 187781.16, flops:164.47, batch-reuse:1
@ 1826 train 4.0595 , allloss: 4.0595, dt: 694.08ms, fracRes: 0.2619, norm(attn): 0.3809, norm(output): 0.7578, norm(x): 0.8778, norm(y): 0.9935, norm:0.4269, tok/sec: 188841.91, flops:165.40, batch-reuse:1
@ 1827 train 4.1109 , allloss: 4.1109, dt: 706.98ms, fracRes: 0.2640, norm(attn): 0.3828, norm(output): 0.7578, norm(x): 0.8839, norm(y): 0.9935, norm:0.4774, tok/sec: 185395.86, flops:162.38, batch-reuse:1
@ 1828 train 4.0632 , allloss: 4.0632, dt: 706.42ms, fracRes: 0.2617, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8764, norm(y): 0.9934, norm:0.3795, tok/sec: 185544.59, flops:162.51, batch-reuse:1
@ 1829 train 4.1089 , allloss: 4.1089, dt: 697.12ms, fracRes: 0.2592, norm(attn): 0.3789, norm(output): 0.7539, norm(x): 0.8757, norm(y): 0.9935, norm:0.4437, tok/sec: 188018.59, flops:164.68, batch-reuse:1
@ 1830 train 4.0172 , allloss: 4.0172, dt: 691.61ms, fracRes: 0.2611, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8760, norm(y): 0.9935, norm:0.3823, tok/sec: 189517.77, flops:165.99, batch-reuse:1
@ 1831 train 4.0390 , allloss: 4.0390, dt: 706.35ms, fracRes: 0.2576, norm(attn): 0.3828, norm(output): 0.7539, norm(x): 0.8751, norm(y): 0.9937, norm:0.4007, tok/sec: 185561.44, flops:162.53, batch-reuse:1
@ 1832 train 4.0544 , allloss: 4.0544, dt: 698.09ms, fracRes: 0.2561, norm(attn): 0.3789, norm(output): 0.7578, norm(x): 0.8769, norm(y): 0.9937, norm:0.3828, tok/sec: 187758.71, flops:164.45, batch-reuse:1
@ 1833 train 4.2215 , allloss: 4.2215, dt: 712.00ms, fracRes: 0.2575, norm(attn): 0.3770, norm(output): 0.7578, norm(x): 0.8786, norm(y): 0.9937, norm:0.4934, tok/sec: 184088.87, flops:161.24, batch-reuse:1
@ 1834 train 4.0654 , allloss: 4.0654, dt: 707.06ms, fracRes: 0.2522, norm(attn): 0.3828, norm(output): 0.7656, norm(x): 0.8841, norm(y): 0.9941, norm:0.5079, tok/sec: 185375.66, flops:162.36, batch-reuse:1
@ 1835 train 3.9758 , allloss: 3.9758, dt: 696.16ms, fracRes: 0.2566, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8803, norm(y): 0.9936, norm:0.4272, tok/sec: 188278.41, flops:164.90, batch-reuse:1
@ 1836 train 4.0784 , allloss: 4.0784, dt: 704.51ms, fracRes: 0.2547, norm(attn): 0.3750, norm(output): 0.7578, norm(x): 0.8793, norm(y): 0.9937, norm:0.4293, tok/sec: 186047.55, flops:162.95, batch-reuse:1
@ 1837 train 4.1513 , allloss: 4.1513, dt: 708.05ms, fracRes: 0.2550, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8790, norm(y): 0.9939, norm:0.4692, tok/sec: 185115.74, flops:162.13, batch-reuse:1
@ 1838 train 4.0952 , allloss: 4.0952, dt: 693.17ms, fracRes: 0.2553, norm(attn): 0.3828, norm(output): 0.7695, norm(x): 0.8839, norm(y): 0.9941, norm:0.3972, tok/sec: 189089.96, flops:165.62, batch-reuse:1
@ 1839 train 4.0278 , allloss: 4.0278, dt: 701.62ms, fracRes: 0.2593, norm(attn): 0.3828, norm(output): 0.7578, norm(x): 0.8852, norm(y): 0.9939, norm:0.4313, tok/sec: 186814.30, flops:163.62, batch-reuse:1
@ 1840 train 4.0256 , allloss: 4.0256, dt: 704.24ms, fracRes: 0.2609, norm(attn): 0.3770, norm(output): 0.7617, norm(x): 0.8859, norm(y): 0.9938, norm:0.4164, tok/sec: 186118.22, flops:163.01, batch-reuse:1
@ 1841 train 4.1388 , allloss: 4.1388, dt: 698.90ms, fracRes: 0.2615, norm(attn): 0.3750, norm(output): 0.7617, norm(x): 0.8814, norm(y): 0.9937, norm:0.3738, tok/sec: 187540.36, flops:164.26, batch-reuse:1
@ 1842 train 4.0461 , allloss: 4.0461, dt: 707.93ms, fracRes: 0.2598, norm(attn): 0.3789, norm(output): 0.7617, norm(x): 0.8783, norm(y): 0.9937, norm:0.3971, tok/sec: 185147.79, flops:162.16, batch-reuse:1
@ 1843 train 4.0413 , allloss: 4.0413, dt: 684.12ms, fracRes: 0.2588, norm(attn): 0.3789, norm(output): 0.7656, norm(x): 0.8826, norm(y): 0.9938, norm:0.4021, tok/sec: 191591.60, flops:167.81, batch-reuse:1
@ 1844 train 4.0643 , allloss: 4.0643, dt: 696.85ms, fracRes: 0.2624, norm(attn): 0.3809, norm(output): 0.7695, norm(x): 0.8863, norm(y): 0.9938, norm:0.3603, tok/sec: 188092.76, flops:164.74, batch-reuse:1
@ 1845 train 4.0235 , allloss: 4.0235, dt: 691.88ms, fracRes: 0.2632, norm(attn): 0.3789, norm(output): 0.7617, norm(x): 0.8820, norm(y): 0.9937, norm:0.3793, tok/sec: 189443.26, flops:165.92, batch-reuse:1
@ 1846 train 4.0550 , allloss: 4.0550, dt: 704.18ms, fracRes: 0.2615, norm(attn): 0.3809, norm(output): 0.7578, norm(x): 0.8824, norm(y): 0.9937, norm:0.3833, tok/sec: 186133.85, flops:163.03, batch-reuse:1
@ 1847 train 4.0063 , allloss: 4.0063, dt: 696.86ms, fracRes: 0.2589, norm(attn): 0.3789, norm(output): 0.7617, norm(x): 0.8818, norm(y): 0.9937, norm:0.3895, tok/sec: 188088.44, flops:164.74, batch-reuse:1
@ 1848 train 3.8641 , allloss: 3.8641, dt: 692.61ms, fracRes: 0.2601, norm(attn): 0.3809, norm(output): 0.7578, norm(x): 0.8797, norm(y): 0.9936, norm:0.3837, tok/sec: 189243.58, flops:165.75, batch-reuse:1
@ 1849 train 4.1047 , allloss: 4.1047, dt: 693.85ms, fracRes: 0.2565, norm(attn): 0.3828, norm(output): 0.7578, norm(x): 0.8797, norm(y): 0.9938, norm:0.4186, tok/sec: 188904.14, flops:165.45, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.9961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0030, 0.3906, 0.6055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0138, 0.4258, 0.3594, 0.2021, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0176, 0.3145, 0.4570, 0.1611, 0.0498, 0.0000, 0.0000, 0.0000],
        [0.0109, 0.1934, 0.5000, 0.1885, 0.0354, 0.0708, 0.0000, 0.0000],
        [0.0066, 0.1582, 0.3125, 0.1504, 0.1328, 0.1650, 0.0757, 0.0000],
        [0.0128, 0.1226, 0.1816, 0.1001, 0.0923, 0.1396, 0.2363, 0.1143]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0137, -0.5859, -0.6523, -0.6133, -0.7266, -0.6289, -0.4863, -0.3203],
        [-0.0718,  5.1250,  5.0312,  3.3125,  4.3750,  4.4062,  3.4688,  2.2812],
        [-0.1045,  4.7812,  5.2188,  5.3750,  6.1250,  5.2500,  4.3125,  3.0938],
        [-0.0894,  3.3438,  3.1719,  2.5938,  4.9688,  4.5312,  2.8125,  1.7500],
        [-0.0162,  2.8594,  3.2344,  2.1875,  1.0234,  1.6641,  1.9453,  1.2578],
        [-0.0188,  2.8594,  3.8125,  2.8281,  1.1641,  1.8594,  2.8750,  1.3203],
        [-0.0771,  3.0938,  3.7812,  3.0469,  2.9219,  3.1406,  2.3594,  1.4219],
        [-0.0430,  2.2188,  2.6094,  2.0156,  1.9375,  2.3594,  2.8750,  2.1562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7302],
        [0.2040],
        [0.1532],
        [0.2487],
        [0.2388],
        [0.1120],
        [0.1368],
        [0.1746],
        [0.1191],
        [0.1736],
        [0.0464],
        [0.1351],
        [0.1509],
        [0.0576]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0010,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0016,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0013,     0.0067,     0.0004,     0.0031,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0010,     0.0010,     0.0003,     0.0008,     0.0010,     0.0000,     0.0000],
        [    0.9844,     0.0015,     0.0064,     0.0002,     0.0004,     0.0007,     0.0070,     0.0000],
        [    0.8359,     0.0011,     0.0020,     0.0004,     0.0005,     0.0002,     0.0014,     0.1572]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0018,     -0.1035,     -0.0718,     -0.2139,     -0.2324,     -0.1172,     -0.1660,     -0.0859],
        [     0.0098,     -6.0625,     -1.0625,     -7.4062,     -7.8750,     -7.7188,     -9.5625,     -5.1562],
        [    -0.0295,     -6.9375,     -6.9062,     -1.9219,     -6.7812,     -8.7500,     -8.6250,     -6.6250],
        [    -0.0781,     -7.8438,     -6.5000,     -6.2188,     -1.6250,     -7.7500,     -8.6875,     -5.2500],
        [    -0.1064,     -6.7188,     -5.0938,     -7.8438,     -5.8438,     -2.4219,     -7.2500,     -3.3438],
        [    -0.0471,     -7.0000,     -6.9375,     -8.2500,     -7.1875,     -6.9062,     -2.8438,     -2.6562],
        [    -0.0923,     -6.5938,     -5.1250,     -8.4375,     -7.9062,     -7.4062,     -5.0312,      0.1797],
        [    -0.1016,     -6.7812,     -6.1562,     -7.6562,     -7.5312,     -8.5625,     -6.5000,     -1.7734]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7405],
        [0.7970],
        [0.8053],
        [0.7757],
        [0.8551],
        [0.7264],
        [0.7446],
        [0.7174],
        [0.7545],
        [0.6130],
        [0.6778],
        [0.6430],
        [0.6565],
        [0.6763]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0033, 0.9961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0136, 0.8516, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0052, 0.8047, 0.1416, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0045, 0.7148, 0.0830, 0.0294, 0.1680, 0.0000, 0.0000, 0.0000],
        [0.0018, 0.6797, 0.0544, 0.0193, 0.1069, 0.1367, 0.0000, 0.0000],
        [0.0027, 0.5117, 0.0535, 0.0195, 0.1099, 0.1475, 0.1543, 0.0000],
        [0.0029, 0.4941, 0.0522, 0.0192, 0.1177, 0.1328, 0.1348, 0.0466]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0248, -0.1719, -0.1611, -0.1895, -0.1318, -0.2002, -0.1826, -0.2734],
        [-0.0139,  5.6875,  3.3906,  2.3594,  4.1875,  4.3125,  4.5000,  3.3125],
        [ 0.0095,  4.1562,  2.3125,  1.4922,  3.0312,  3.1562,  3.3125,  2.3125],
        [-0.0708,  4.9688,  3.2500,  2.1406,  3.8281,  3.9688,  4.0938,  3.3125],
        [ 0.0396,  5.1250,  2.9531,  1.9219,  3.6562,  3.6562,  3.9062,  2.8125],
        [-0.0427,  5.8750,  3.3594,  2.3281,  4.0312,  4.2812,  4.4688,  3.3750],
        [-0.0083,  5.2500,  2.9688,  1.9688,  3.7031,  3.9844,  4.0312,  2.9844],
        [ 0.0261,  5.1562,  2.9062,  1.9062,  3.7188,  3.8438,  3.8594,  2.7969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8831],
        [0.7340],
        [0.6202],
        [0.6751],
        [0.5861],
        [0.4855],
        [0.4716],
        [0.4643],
        [0.4805],
        [0.4716],
        [0.4550],
        [0.4225],
        [0.4275],
        [0.4266]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9961, 0.0023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.1699, 0.3848, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.1162, 0.5312, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.0894, 0.3574, 0.3711, 0.0391, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.0583, 0.2285, 0.2891, 0.0884, 0.2422, 0.0000, 0.0000],
        [0.1143, 0.0679, 0.3359, 0.2168, 0.0369, 0.1514, 0.0757, 0.0000],
        [0.0225, 0.0383, 0.1592, 0.1387, 0.0356, 0.1504, 0.1572, 0.2988]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0042,     -0.4629,     -0.3652,     -0.3926,     -0.4648,     -0.4277,     -0.5742,     -0.5391],
        [     0.0088,     -6.0625,     -2.2031,     -2.8125,     -4.2812,     -3.0469,     -4.6875,     -3.4531],
        [    -0.0352,     -0.9961,     -0.1777,      0.0354,     -1.0391,      0.4199,     -0.2139,      1.0703],
        [    -0.0503,     -0.1680,      1.3516,      0.4746,      0.0159,      1.6016,      0.9570,      1.7500],
        [    -0.0815,     -0.5547,      0.8320,      0.8672,     -1.3828,      1.7031,      0.8164,      2.3281],
        [    -0.0815,     -0.5352,      0.8320,      1.0703,     -0.1182,      0.8906,      1.0859,      3.1562],
        [    -0.0859,     -0.6055,      0.9922,      0.5547,     -1.2188,      0.1963,     -0.5000,      1.7578],
        [    -0.0889,      0.4453,      1.8672,      1.7266,      0.3711,      1.8125,      1.8516,      2.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6585],
        [0.3801],
        [0.3657],
        [0.2739],
        [0.2363],
        [0.1984],
        [0.1635],
        [0.1683],
        [0.1377],
        [0.1714],
        [0.1524],
        [0.1591],
        [0.1651],
        [0.1521]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7188,     0.2832,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0053,     0.9883,     0.0054,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1152,     0.5898,     0.0201,     0.2754,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.0238,     0.0028,     0.0054,     0.9648,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0001,     0.0000,     0.0000,     0.7539,     0.2451,     0.0000,     0.0000],
        [    0.0427,     0.0040,     0.0003,     0.0005,     0.0327,     0.4922,     0.4277,     0.0000],
        [    0.0005,     0.0002,     0.0000,     0.0000,     0.0005,     0.0010,     0.8672,     0.1318]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0014,     -0.1768,     -0.2207,     -0.2061,     -0.1484,     -0.1445,     -0.1689,     -0.2188],
        [     0.0182,     -0.9141,     -5.4688,     -4.0000,     -4.0625,     -4.5000,     -3.3281,     -3.6719],
        [    -0.0292,      5.1875,     -0.0149,      3.2656,     -4.3438,     -5.4062,     -2.3125,     -1.9141],
        [    -0.0332,      1.6016,     -1.7734,      0.8398,     -1.7422,     -2.9844,      0.2227,     -1.8125],
        [     0.0339,      2.8438,      0.7070,      1.3594,      6.5312,      5.1250,      0.6641,      0.7305],
        [     0.0239,     -1.0703,     -4.3125,     -5.2188,      7.7812,      6.6562,     -0.4004,     -2.9844],
        [    -0.0435,     -2.4219,     -4.9375,     -4.4062,     -0.3105,      2.4062,      2.2656,     -0.7383],
        [    -0.0835,     -1.0078,     -4.8750,     -3.9219,     -0.0086,      0.5664,      7.3438,      5.4688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8535],
        [0.5143],
        [0.5086],
        [0.4904],
        [0.4960],
        [0.4581],
        [0.4170],
        [0.3697],
        [0.3451],
        [0.3377],
        [0.2990],
        [0.3436],
        [0.2956],
        [0.3152]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0076,     -0.5312,     -0.6406,     -0.6172,     -0.6094,     -0.5703,     -0.6758,     -0.6445],
        [    -0.2676,    -18.1250,    -21.2500,    -20.3750,    -20.1250,    -18.7500,    -21.2500,    -21.5000],
        [    -0.2461,    -16.3750,    -19.2500,    -18.8750,    -18.7500,    -17.0000,    -19.3750,    -19.5000],
        [    -0.1826,    -13.0000,    -15.5625,    -14.6250,    -16.7500,    -13.5625,    -16.0000,    -14.8750],
        [    -0.2080,    -17.1250,    -21.2500,    -19.7500,    -18.8750,    -18.2500,    -20.3750,    -18.3750],
        [    -0.2559,    -18.3750,    -22.5000,    -22.1250,    -21.0000,    -19.5000,    -22.8750,    -22.0000],
        [    -0.2695,    -19.7500,    -24.1250,    -23.3750,    -23.3750,    -20.8750,    -24.2500,    -23.1250],
        [    -0.1533,    -12.6250,    -15.4375,    -13.9375,    -15.2500,    -13.0625,    -15.0000,    -13.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7845],
        [0.6225],
        [0.5111],
        [0.6445],
        [0.6797],
        [0.5496],
        [0.5188],
        [0.5575],
        [0.5245],
        [0.5568],
        [0.4232],
        [0.5658],
        [0.4902],
        [0.4258]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8398,     0.1318,     0.0078,     0.0211,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0160,     -0.6758,     -0.5430,     -0.7539,     -0.9922,     -0.4258,     -0.7305,     -0.7148],
        [    -0.3086,    -13.0625,    -11.3750,    -13.9375,    -18.8750,     -9.1875,    -14.0625,    -11.8125],
        [     0.3926,     15.1875,      6.8750,     13.8125,     24.8750,      6.4062,     14.5625,     13.3125],
        [    -0.0005,     -1.8516,     -4.6875,     -3.6875,      1.2969,     -1.8672,     -1.5391,     -2.5312],
        [    -0.4102,    -17.6250,    -16.0000,    -20.3750,    -23.3750,    -10.8750,    -19.2500,    -17.7500],
        [    -0.4082,    -18.0000,    -14.1250,    -18.3750,    -20.7500,     -8.9375,    -17.0000,    -15.0625],
        [    -0.4824,    -21.2500,    -19.0000,    -23.7500,    -28.6250,    -13.5625,    -22.5000,    -21.7500],
        [    -0.4102,    -18.3750,    -16.8750,    -20.8750,    -26.6250,    -12.6250,    -20.7500,    -19.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6343],
        [0.2589],
        [0.4516],
        [0.7672],
        [0.5441],
        [0.7119],
        [0.6263],
        [0.6739],
        [0.5322],
        [0.6061],
        [0.2097],
        [0.6722],
        [0.6158],
        [0.3406]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0033,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0045,     -0.6133,     -0.6562,     -0.7812,     -0.6562,     -0.7344,     -0.7109,     -0.7461],
        [    -0.2109,    -30.2500,    -30.6250,    -36.7500,    -29.8750,    -34.0000,    -32.5000,    -34.7500],
        [    -0.0194,     -4.9688,    -10.0625,     -9.5625,     -3.3125,     -5.7812,     -6.4375,     -7.2188],
        [    -0.0288,     -5.7188,     -9.4375,     -9.8750,     -5.7500,     -7.7812,     -8.3125,     -8.9375],
        [    -0.1865,    -26.1250,    -26.7500,    -32.2500,    -26.5000,    -29.8750,    -28.6250,    -30.0000],
        [    -0.3145,    -41.5000,    -43.2500,    -52.7500,    -45.2500,    -49.2500,    -47.7500,    -50.5000],
        [    -0.1670,    -23.6250,    -25.6250,    -30.1250,    -24.5000,    -28.7500,    -27.3750,    -29.0000],
        [    -0.1504,    -21.5000,    -24.0000,    -28.0000,    -22.8750,    -25.5000,    -25.1250,    -27.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9469],
        [0.2610],
        [0.2973],
        [0.9424],
        [0.9974],
        [0.9070],
        [0.9471],
        [0.9980],
        [0.9489],
        [1.0000],
        [0.8160],
        [1.0000],
        [1.0000],
        [0.6215]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4570,     0.5430,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7578,     0.2432,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.5820,     0.1167,     0.3008,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1982,     0.0791,     0.3184,     0.3027,     0.1016,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0011,     0.0000,     0.0000,     0.0000],
        [    0.0344,     0.2871,     0.0498,     0.0518,     0.1099,     0.2148,     0.2520,     0.0000],
        [    0.7695,     0.0289,     0.0294,     0.0236,     0.0859,     0.0099,     0.0364,     0.0147]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0004,     -0.0166,     -0.0291,     -0.0356,     -0.0212,     -0.0334,     -0.0211,     -0.0366],
        [     0.0081,      0.1807,      1.7031,      1.7891,      0.0508,      0.8516,      0.6719,     -0.1245],
        [     0.0947,      8.7500,      7.6250,      8.6875,      6.0312,     10.1250,      7.8750,      7.5938],
        [     0.0830,      7.8438,      6.2500,      7.1875,      5.5000,      9.0000,      7.7500,      6.7188],
        [    -0.0108,     -0.9336,      0.4609,      0.4102,     -0.6836,     -0.4961,      0.2773,     -0.7539],
        [    -0.1245,     -9.0000,    -10.0625,    -11.0625,     -6.9062,    -11.8750,     -9.1875,    -10.9375],
        [     0.0115,      2.1406,      0.3809,      0.4219,      1.1719,      1.8438,      2.0000,      0.4980],
        [    -0.0364,     -3.3281,     -3.2969,     -3.5312,     -2.2344,     -4.3750,     -3.0938,     -4.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5484],
        [0.0022],
        [0.0021],
        [0.8551],
        [0.9818],
        [0.5364],
        [0.7619],
        [0.9834],
        [0.9059],
        [1.0000],
        [0.0633],
        [1.0000],
        [0.9987],
        [0.0026]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0292,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.4551,     0.5430,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0089,     0.2275,     0.4141,     0.3496,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1426,     0.2754,     0.2227,     0.2109,     0.1465,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0366,     0.2520,     0.1533,     0.1602,     0.1572,     0.1455,     0.0952,     0.0000],
        [    0.9492,     0.0055,     0.0056,     0.0053,     0.0181,     0.0079,     0.0057,     0.0027]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0006,     -0.1079,     -0.1040,     -0.1035,     -0.0791,     -0.0933,     -0.0967,     -0.1118],
        [    -0.0060,     -3.5156,     -2.3594,     -2.5312,     -1.5312,     -2.5156,     -1.6797,     -2.4375],
        [     0.0239,      5.2812,      5.4375,      5.4062,      4.5938,      5.6562,      4.3125,      5.5625],
        [     0.0166,      3.2500,      3.8594,      3.6875,      3.1719,      3.9062,      2.6719,      3.6250],
        [     0.0045,      0.6641,      0.4492,      0.3945,      0.0317,     -0.0942,      0.5078,      0.2354],
        [    -0.1011,    -20.7500,    -20.3750,    -20.2500,    -15.8125,    -19.0000,    -18.0000,    -22.0000],
        [     0.0041,      1.9297,      1.4375,      1.4766,      1.4609,      1.3828,      0.9570,      1.3203],
        [    -0.0258,     -5.1875,     -5.1562,     -5.2188,     -3.9844,     -4.8125,     -5.1562,     -5.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4263],
        [0.0105],
        [0.0110],
        [0.3016],
        [0.9997],
        [0.1772],
        [0.6560],
        [0.6914],
        [0.8361],
        [0.9971],
        [0.0064],
        [0.9993],
        [0.9655],
        [0.0152]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4941, 0.2520, 0.2539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4062, 0.1943, 0.2070, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3398, 0.1494, 0.2100, 0.1953, 0.1055, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.0620, 0.1270, 0.1279, 0.0918, 0.0544, 0.0000, 0.0000],
        [0.2656, 0.1089, 0.1279, 0.1245, 0.0986, 0.1699, 0.1040, 0.0000],
        [0.3418, 0.0767, 0.1172, 0.1196, 0.0840, 0.1025, 0.0894, 0.0679]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0100,     -0.0079,     -0.0081,     -0.0123,     -0.0042,     -0.0086,     -0.0084],
        [     0.0006,     -1.7500,     -1.0625,     -1.1484,     -1.4844,     -1.0859,     -1.1875,     -1.3828],
        [    -0.0000,     -0.6758,     -0.6641,     -0.7109,     -0.7500,     -0.1426,     -0.7227,     -0.4785],
        [     0.0002,     -0.7344,     -0.6758,     -0.7500,     -0.7930,     -0.1143,     -0.7344,     -0.4688],
        [     0.0004,     -0.8164,     -0.4805,     -0.5508,     -1.1641,     -0.1147,     -0.7109,     -0.5156],
        [    -0.0009,     -2.1562,     -1.4453,     -1.4297,     -1.7656,     -2.2969,     -1.6641,     -2.4219],
        [    -0.0004,     -0.8945,     -0.7305,     -0.7578,     -0.9922,     -0.4453,     -0.9375,     -0.8281],
        [    -0.0011,     -1.4922,     -1.0703,     -1.0547,     -1.4062,     -1.2031,     -1.3438,     -1.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8080],
        [0.5642],
        [0.4668],
        [0.3949],
        [0.8626],
        [0.2246],
        [0.5409],
        [0.4603],
        [0.6502],
        [0.7203],
        [0.0905],
        [0.6642],
        [0.5213],
        [0.0702]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0081, 0.9922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0062, 0.3672, 0.6289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0029, 0.2471, 0.4199, 0.3301, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0012, 0.2393, 0.3906, 0.2793, 0.0884, 0.0000, 0.0000, 0.0000],
        [0.0025, 0.2393, 0.3672, 0.2598, 0.0845, 0.0464, 0.0000, 0.0000],
        [0.0020, 0.2168, 0.3359, 0.2432, 0.0840, 0.0417, 0.0762, 0.0000],
        [0.0015, 0.1914, 0.3047, 0.2207, 0.0767, 0.0366, 0.0713, 0.0967]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0498,      0.0542,      0.0508,      0.0391,      0.0303,      0.0374,      0.0400],
        [    -0.0095,      4.8125,      5.3750,      5.1250,      4.1562,      3.4531,      4.1875,      4.3125],
        [    -0.0082,      4.0625,      4.5938,      4.4062,      3.5625,      2.9062,      3.5938,      3.6875],
        [    -0.0093,      4.4375,      4.9688,      4.7188,      3.7812,      3.0781,      3.7656,      3.9219],
        [    -0.0117,      5.2500,      5.7500,      5.4062,      4.2812,      3.5000,      4.1875,      4.5000],
        [    -0.0110,      4.5312,      4.9688,      4.6250,      3.5000,      2.8906,      3.4219,      3.7969],
        [    -0.0108,      4.6562,      5.0938,      4.7812,      3.7031,      3.0000,      3.6094,      3.9219],
        [    -0.0109,      4.8750,      5.3438,      5.0000,      3.9531,      3.2188,      3.8750,      4.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1640],
        [0.0274],
        [0.0159],
        [0.0085],
        [0.1661],
        [0.0051],
        [0.0347],
        [0.0137],
        [0.0936],
        [0.0196],
        [0.0022],
        [0.0591],
        [0.0099],
        [0.0019]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( /*:0.0077 accomp:0.0088 Metroid:0.0064 Kislyak:0.0067 /*:0.0098 Mages:0.0081 Mages:0.0073��:0.0107)
��
------
		( accomp:0.0088 Metroid:0.0064 Kislyak:0.0067 /*:0.0098 Mages:0.0081 Mages:0.0073��:0.0107��:0.0101)
������������������������������
@ 1850 train 3.9596 , allloss: 3.9596, dt: 1134.92ms, fracRes: 0.2604, norm(attn): 0.3770, norm(output): 0.7539, norm(x): 0.8815, norm(y): 0.9934, norm:0.4267, tok/sec: 115489.92, flops:101.15, batch-reuse:1
@ 1851 train 3.9053 , allloss: 3.9053, dt: 705.71ms, fracRes: 0.2650, norm(attn): 0.3750, norm(output): 0.7617, norm(x): 0.8842, norm(y): 0.9933, norm:0.3790, tok/sec: 185731.08, flops:162.67, batch-reuse:1
@ 1852 train 4.0187 , allloss: 4.0187, dt: 703.98ms, fracRes: 0.2606, norm(attn): 0.3789, norm(output): 0.7617, norm(x): 0.8838, norm(y): 0.9937, norm:0.3820, tok/sec: 186186.42, flops:163.07, batch-reuse:1
@ 1853 train 4.0169 , allloss: 4.0169, dt: 679.97ms, fracRes: 0.2624, norm(attn): 0.3789, norm(output): 0.7656, norm(x): 0.8839, norm(y): 0.9937, norm:0.3844, tok/sec: 192760.96, flops:168.83, batch-reuse:1
@ 1854 train 4.0740 , allloss: 4.0740, dt: 689.70ms, fracRes: 0.2624, norm(attn): 0.3789, norm(output): 0.7656, norm(x): 0.8848, norm(y): 0.9938, norm:0.3799, tok/sec: 190041.55, flops:166.45, batch-reuse:1
@ 1855 train 4.1438 , allloss: 4.1438, dt: 698.18ms, fracRes: 0.2587, norm(attn): 0.3809, norm(output): 0.7734, norm(x): 0.8907, norm(y): 0.9939, norm:0.4831, tok/sec: 187733.19, flops:164.43, batch-reuse:1
@ 1856 train 4.1506 , allloss: 4.1506, dt: 697.93ms, fracRes: 0.2594, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8842, norm(y): 0.9937, norm:0.4132, tok/sec: 187800.08, flops:164.49, batch-reuse:1
@ 1857 train 4.0717 , allloss: 4.0717, dt: 702.66ms, fracRes: 0.2557, norm(attn): 0.3828, norm(output): 0.7695, norm(x): 0.8854, norm(y): 0.9938, norm:0.4453, tok/sec: 186536.73, flops:163.38, batch-reuse:1
@ 1858 train 4.3278 , allloss: 4.3278, dt: 697.15ms, fracRes: 0.2592, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8853, norm(y): 0.9941, norm:0.5215, tok/sec: 188011.06, flops:164.67, batch-reuse:1
@ 1859 train 4.2067 , allloss: 4.2067, dt: 699.29ms, fracRes: 0.2657, norm(attn): 0.3770, norm(output): 0.7617, norm(x): 0.8856, norm(y): 0.9933, norm:0.5324, tok/sec: 187437.16, flops:164.17, batch-reuse:1
@ 1860 train 4.2040 , allloss: 4.2040, dt: 693.79ms, fracRes: 0.2711, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8946, norm(y): 0.9933, norm:0.5109, tok/sec: 188920.82, flops:165.47, batch-reuse:1
@ 1861 train 4.1306 , allloss: 4.1306, dt: 696.58ms, fracRes: 0.2638, norm(attn): 0.3809, norm(output): 0.7656, norm(x): 0.8892, norm(y): 0.9938, norm:0.4897, tok/sec: 188163.70, flops:164.80, batch-reuse:1
@ 1862 train 4.1943 , allloss: 4.1943, dt: 702.48ms, fracRes: 0.2532, norm(attn): 0.3789, norm(output): 0.7617, norm(x): 0.8765, norm(y): 0.9938, norm:0.4753, tok/sec: 186585.79, flops:163.42, batch-reuse:1
@ 1863 train 4.2255 , allloss: 4.2255, dt: 700.49ms, fracRes: 0.2542, norm(attn): 0.3789, norm(output): 0.7656, norm(x): 0.8800, norm(y): 0.9938, norm:0.4229, tok/sec: 187113.84, flops:163.88, batch-reuse:1
@ 1864 train 4.1729 , allloss: 4.1729, dt: 688.58ms, fracRes: 0.2577, norm(attn): 0.3789, norm(output): 0.7617, norm(x): 0.8822, norm(y): 0.9937, norm:0.4470, tok/sec: 190350.42, flops:166.72, batch-reuse:1
@ 1865 train 4.1887 , allloss: 4.1887, dt: 698.26ms, fracRes: 0.2612, norm(attn): 0.3809, norm(output): 0.7617, norm(x): 0.8840, norm(y): 0.9936, norm:0.4071, tok/sec: 187711.97, flops:164.41, batch-reuse:1
@ 1866 train 4.4991 , allloss: 4.4991, dt: 699.97ms, fracRes: 0.2584, norm(attn): 0.3828, norm(output): 0.7656, norm(x): 0.8837, norm(y): 0.9937, norm:0.6182, tok/sec: 187252.91, flops:164.01, batch-reuse:1
@ 1867 train 4.2297 , allloss: 4.2297, dt: 700.89ms, fracRes: 0.2592, norm(attn): 0.3828, norm(output): 0.7617, norm(x): 0.8840, norm(y): 0.9938, norm:0.4589, tok/sec: 187007.99, flops:163.79, batch-reuse:1
@ 1868 train 4.2739 , allloss: 4.2739, dt: 698.11ms, fracRes: 0.2516, norm(attn): 0.3848, norm(output): 0.7656, norm(x): 0.8799, norm(y): 0.9939, norm:0.4767, tok/sec: 187752.23, flops:164.44, batch-reuse:1
@ 1869 train 4.1790 , allloss: 4.1790, dt: 683.17ms, fracRes: 0.2555, norm(attn): 0.3809, norm(output): 0.7656, norm(x): 0.8824, norm(y): 0.9939, norm:0.4455, tok/sec: 191858.39, flops:168.04, batch-reuse:1
@ 1870 train 4.1277 , allloss: 4.1277, dt: 691.10ms, fracRes: 0.2579, norm(attn): 0.3809, norm(output): 0.7695, norm(x): 0.8851, norm(y): 0.9937, norm:0.4490, tok/sec: 189657.17, flops:166.11, batch-reuse:1
@ 1871 train 4.1560 , allloss: 4.1560, dt: 686.10ms, fracRes: 0.2593, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8862, norm(y): 0.9936, norm:0.4362, tok/sec: 191040.07, flops:167.32, batch-reuse:1
@ 1872 train 4.2325 , allloss: 4.2325, dt: 687.54ms, fracRes: 0.2587, norm(attn): 0.3809, norm(output): 0.7773, norm(x): 0.8918, norm(y): 0.9940, norm:0.4592, tok/sec: 190638.02, flops:166.97, batch-reuse:1
@ 1873 train 4.2538 , allloss: 4.2538, dt: 690.86ms, fracRes: 0.2616, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.8958, norm(y): 0.9941, norm:0.4207, tok/sec: 189722.68, flops:166.17, batch-reuse:1
@ 1874 train 4.1039 , allloss: 4.1039, dt: 700.09ms, fracRes: 0.2664, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8915, norm(y): 0.9937, norm:0.4035, tok/sec: 187222.81, flops:163.98, batch-reuse:1
@ 1875 train 4.2093 , allloss: 4.2093, dt: 698.14ms, fracRes: 0.2610, norm(attn): 0.3809, norm(output): 0.7656, norm(x): 0.8855, norm(y): 0.9939, norm:0.4164, tok/sec: 187744.15, flops:164.44, batch-reuse:1
@ 1876 train 4.2632 , allloss: 4.2632, dt: 701.64ms, fracRes: 0.2605, norm(attn): 0.3828, norm(output): 0.7656, norm(x): 0.8850, norm(y): 0.9937, norm:0.4341, tok/sec: 186807.70, flops:163.62, batch-reuse:1
@ 1877 train 4.2061 , allloss: 4.2061, dt: 696.00ms, fracRes: 0.2669, norm(attn): 0.3770, norm(output): 0.7734, norm(x): 0.8941, norm(y): 0.9937, norm:0.4218, tok/sec: 188320.72, flops:164.94, batch-reuse:1
@ 1878 train 4.2025 , allloss: 4.2025, dt: 693.61ms, fracRes: 0.2665, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8908, norm(y): 0.9938, norm:0.4802, tok/sec: 188971.80, flops:165.51, batch-reuse:1
@ 1879 train 4.2411 , allloss: 4.2411, dt: 694.77ms, fracRes: 0.2622, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8908, norm(y): 0.9939, norm:0.4224, tok/sec: 188654.37, flops:165.23, batch-reuse:1
@ 1880 train 4.1464 , allloss: 4.1464, dt: 689.74ms, fracRes: 0.2594, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8909, norm(y): 0.9939, norm:0.4251, tok/sec: 190032.16, flops:166.44, batch-reuse:1
@ 1881 train 4.1378 , allloss: 4.1378, dt: 688.18ms, fracRes: 0.2600, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8893, norm(y): 0.9937, norm:0.4301, tok/sec: 190460.95, flops:166.82, batch-reuse:1
@ 1882 train 4.2727 , allloss: 4.2727, dt: 696.43ms, fracRes: 0.2674, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8935, norm(y): 0.9934, norm:0.4604, tok/sec: 188205.57, flops:164.84, batch-reuse:1
@ 1883 train 4.1354 , allloss: 4.1354, dt: 696.91ms, fracRes: 0.2695, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8949, norm(y): 0.9933, norm:0.4250, tok/sec: 188074.67, flops:164.73, batch-reuse:1
@ 1884 train 4.0776 , allloss: 4.0776, dt: 699.23ms, fracRes: 0.2678, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8940, norm(y): 0.9935, norm:0.3925, tok/sec: 187451.48, flops:164.18, batch-reuse:1
@ 1885 train 4.1955 , allloss: 4.1955, dt: 697.52ms, fracRes: 0.2632, norm(attn): 0.3789, norm(output): 0.7695, norm(x): 0.8899, norm(y): 0.9939, norm:0.3944, tok/sec: 187911.90, flops:164.58, batch-reuse:1
@ 1886 train 4.0993 , allloss: 4.0993, dt: 693.20ms, fracRes: 0.2607, norm(attn): 0.3848, norm(output): 0.7656, norm(x): 0.8871, norm(y): 0.9940, norm:0.3883, tok/sec: 189082.75, flops:165.61, batch-reuse:1
@ 1887 train 4.0765 , allloss: 4.0765, dt: 697.28ms, fracRes: 0.2624, norm(attn): 0.3867, norm(output): 0.7656, norm(x): 0.8847, norm(y): 0.9940, norm:0.3558, tok/sec: 187975.06, flops:164.64, batch-reuse:1
@ 1888 train 4.2483 , allloss: 4.2483, dt: 700.00ms, fracRes: 0.2549, norm(attn): 0.3906, norm(output): 0.7773, norm(x): 0.8912, norm(y): 0.9944, norm:0.4372, tok/sec: 187244.62, flops:164.00, batch-reuse:1
@ 1889 train 4.0999 , allloss: 4.0999, dt: 703.03ms, fracRes: 0.2594, norm(attn): 0.3945, norm(output): 0.7734, norm(x): 0.8939, norm(y): 0.9942, norm:0.3983, tok/sec: 186438.92, flops:163.29, batch-reuse:1
@ 1890 train 4.2552 , allloss: 4.2552, dt: 692.35ms, fracRes: 0.2616, norm(attn): 0.3984, norm(output): 0.7812, norm(x): 0.8979, norm(y): 0.9942, norm:0.4225, tok/sec: 189314.55, flops:165.81, batch-reuse:1
@ 1891 train 4.2095 , allloss: 4.2095, dt: 692.73ms, fracRes: 0.2717, norm(attn): 0.3887, norm(output): 0.7734, norm(x): 0.9024, norm(y): 0.9938, norm:0.4574, tok/sec: 189210.62, flops:165.72, batch-reuse:1
@ 1892 train 4.1147 , allloss: 4.1147, dt: 693.53ms, fracRes: 0.2716, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8974, norm(y): 0.9936, norm:0.4057, tok/sec: 188992.65, flops:165.53, batch-reuse:1
@ 1893 train 4.2339 , allloss: 4.2339, dt: 696.52ms, fracRes: 0.2658, norm(attn): 0.3809, norm(output): 0.7656, norm(x): 0.8899, norm(y): 0.9937, norm:0.4529, tok/sec: 188182.06, flops:164.82, batch-reuse:1
@ 1894 train 4.0427 , allloss: 4.0427, dt: 694.30ms, fracRes: 0.2726, norm(attn): 0.3809, norm(output): 0.7656, norm(x): 0.8939, norm(y): 0.9933, norm:0.4500, tok/sec: 188783.35, flops:165.35, batch-reuse:1
@ 1895 train 4.2235 , allloss: 4.2235, dt: 692.19ms, fracRes: 0.2675, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8945, norm(y): 0.9935, norm:0.4465, tok/sec: 189357.19, flops:165.85, batch-reuse:1
@ 1896 train 4.3361 , allloss: 4.3361, dt: 677.77ms, fracRes: 0.2643, norm(attn): 0.3828, norm(output): 0.7852, norm(x): 0.9012, norm(y): 0.9939, norm:0.4510, tok/sec: 193386.55, flops:169.38, batch-reuse:1
@ 1897 train 4.2354 , allloss: 4.2354, dt: 692.78ms, fracRes: 0.2603, norm(attn): 0.3848, norm(output): 0.7695, norm(x): 0.8894, norm(y): 0.9940, norm:0.4740, tok/sec: 189196.10, flops:165.71, batch-reuse:1
@ 1898 train 4.2247 , allloss: 4.2247, dt: 689.65ms, fracRes: 0.2539, norm(attn): 0.3809, norm(output): 0.7617, norm(x): 0.8838, norm(y): 0.9938, norm:0.4838, tok/sec: 190055.02, flops:166.46, batch-reuse:1
@ 1899 train 4.1723 , allloss: 4.1723, dt: 694.36ms, fracRes: 0.2556, norm(attn): 0.3828, norm(output): 0.7617, norm(x): 0.8855, norm(y): 0.9937, norm:0.4770, tok/sec: 188765.33, flops:165.33, batch-reuse:1
@ 1900 train 4.1792 , allloss: 4.1792, dt: 695.89ms, fracRes: 0.2569, norm(attn): 0.3848, norm(output): 0.7734, norm(x): 0.8880, norm(y): 0.9939, norm:0.4317, tok/sec: 188351.56, flops:164.97, batch-reuse:1
@ 1901 train 4.2176 , allloss: 4.2176, dt: 694.50ms, fracRes: 0.2592, norm(attn): 0.3848, norm(output): 0.7734, norm(x): 0.8924, norm(y): 0.9939, norm:0.4355, tok/sec: 188728.46, flops:165.30, batch-reuse:1
@ 1902 train 4.1723 , allloss: 4.1723, dt: 698.28ms, fracRes: 0.2630, norm(attn): 0.3809, norm(output): 0.7734, norm(x): 0.8930, norm(y): 0.9937, norm:0.4350, tok/sec: 187706.40, flops:164.40, batch-reuse:1
@ 1903 train 4.1952 , allloss: 4.1952, dt: 695.41ms, fracRes: 0.2631, norm(attn): 0.3789, norm(output): 0.7734, norm(x): 0.8936, norm(y): 0.9937, norm:0.4223, tok/sec: 188481.68, flops:165.08, batch-reuse:1
@ 1904 train 4.1644 , allloss: 4.1644, dt: 693.46ms, fracRes: 0.2622, norm(attn): 0.3828, norm(output): 0.7695, norm(x): 0.8886, norm(y): 0.9938, norm:0.4092, tok/sec: 189011.69, flops:165.55, batch-reuse:1
@ 1905 train 4.1303 , allloss: 4.1303, dt: 688.44ms, fracRes: 0.2716, norm(attn): 0.3770, norm(output): 0.7578, norm(x): 0.8873, norm(y): 0.9935, norm:0.4005, tok/sec: 190389.98, flops:166.75, batch-reuse:1
@ 1906 train 4.1579 , allloss: 4.1579, dt: 692.82ms, fracRes: 0.2701, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8936, norm(y): 0.9937, norm:0.4053, tok/sec: 189186.92, flops:165.70, batch-reuse:1
@ 1907 train 4.1923 , allloss: 4.1923, dt: 688.01ms, fracRes: 0.2648, norm(attn): 0.3770, norm(output): 0.7734, norm(x): 0.8944, norm(y): 0.9939, norm:0.3952, tok/sec: 190509.20, flops:166.86, batch-reuse:1
@ 1908 train 4.1874 , allloss: 4.1874, dt: 692.51ms, fracRes: 0.2640, norm(attn): 0.3789, norm(output): 0.7812, norm(x): 0.8966, norm(y): 0.9939, norm:0.4334, tok/sec: 189270.23, flops:165.77, batch-reuse:1
@ 1909 train 4.4027 , allloss: 4.4027, dt: 686.71ms, fracRes: 0.2677, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8997, norm(y): 0.9942, norm:0.4310, tok/sec: 190868.15, flops:167.17, batch-reuse:1
@ 1910 train 4.2386 , allloss: 4.2386, dt: 691.70ms, fracRes: 0.2716, norm(attn): 0.3789, norm(output): 0.7852, norm(x): 0.8999, norm(y): 0.9940, norm:0.4092, tok/sec: 189493.60, flops:165.97, batch-reuse:1
@ 1911 train 4.2541 , allloss: 4.2541, dt: 710.20ms, fracRes: 0.2723, norm(attn): 0.3789, norm(output): 0.7734, norm(x): 0.9018, norm(y): 0.9940, norm:0.4887, tok/sec: 184555.33, flops:161.64, batch-reuse:1
@ 1912 train 4.1775 , allloss: 4.1775, dt: 711.61ms, fracRes: 0.2714, norm(attn): 0.3789, norm(output): 0.7656, norm(x): 0.8979, norm(y): 0.9939, norm:0.4535, tok/sec: 184191.68, flops:161.33, batch-reuse:1
@ 1913 train 4.1828 , allloss: 4.1828, dt: 707.40ms, fracRes: 0.2719, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8923, norm(y): 0.9935, norm:0.4008, tok/sec: 185286.94, flops:162.28, batch-reuse:1
@ 1914 train 4.1210 , allloss: 4.1210, dt: 708.14ms, fracRes: 0.2676, norm(attn): 0.3789, norm(output): 0.7695, norm(x): 0.8940, norm(y): 0.9935, norm:0.4773, tok/sec: 185092.56, flops:162.11, batch-reuse:1
@ 1915 train 4.1557 , allloss: 4.1557, dt: 696.49ms, fracRes: 0.2672, norm(attn): 0.3789, norm(output): 0.7656, norm(x): 0.8909, norm(y): 0.9937, norm:0.4732, tok/sec: 188188.11, flops:164.83, batch-reuse:1
@ 1916 train 4.2754 , allloss: 4.2754, dt: 697.96ms, fracRes: 0.2601, norm(attn): 0.3887, norm(output): 0.7812, norm(x): 0.8945, norm(y): 0.9941, norm:0.4689, tok/sec: 187793.73, flops:164.48, batch-reuse:1
@ 1917 train 4.2015 , allloss: 4.2015, dt: 693.99ms, fracRes: 0.2588, norm(attn): 0.3867, norm(output): 0.7656, norm(x): 0.8893, norm(y): 0.9941, norm:0.5203, tok/sec: 188866.11, flops:165.42, batch-reuse:1
@ 1918 train 4.2734 , allloss: 4.2734, dt: 704.32ms, fracRes: 0.2624, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8917, norm(y): 0.9939, norm:0.3683, tok/sec: 186096.23, flops:162.99, batch-reuse:1
@ 1919 train 4.1042 , allloss: 4.1042, dt: 698.74ms, fracRes: 0.2623, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8914, norm(y): 0.9937, norm:0.4734, tok/sec: 187583.55, flops:164.30, batch-reuse:1
@ 1920 train 4.1971 , allloss: 4.1971, dt: 708.09ms, fracRes: 0.2646, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8921, norm(y): 0.9938, norm:0.3788, tok/sec: 185105.15, flops:162.13, batch-reuse:1
@ 1921 train 4.1823 , allloss: 4.1823, dt: 698.49ms, fracRes: 0.2632, norm(attn): 0.3809, norm(output): 0.7773, norm(x): 0.8953, norm(y): 0.9940, norm:0.4140, tok/sec: 187650.66, flops:164.35, batch-reuse:1
@ 1922 train 4.1016 , allloss: 4.1016, dt: 690.13ms, fracRes: 0.2637, norm(attn): 0.3789, norm(output): 0.7695, norm(x): 0.8904, norm(y): 0.9939, norm:0.3924, tok/sec: 189923.11, flops:166.35, batch-reuse:1
@ 1923 train 4.1583 , allloss: 4.1583, dt: 696.46ms, fracRes: 0.2651, norm(attn): 0.3789, norm(output): 0.7695, norm(x): 0.8908, norm(y): 0.9937, norm:0.3903, tok/sec: 188198.10, flops:164.83, batch-reuse:1
@ 1924 train 4.1788 , allloss: 4.1788, dt: 691.59ms, fracRes: 0.2672, norm(attn): 0.3809, norm(output): 0.7695, norm(x): 0.8940, norm(y): 0.9937, norm:0.4258, tok/sec: 189523.46, flops:166.00, batch-reuse:1
@ 1925 train 4.1617 , allloss: 4.1617, dt: 706.37ms, fracRes: 0.2669, norm(attn): 0.3809, norm(output): 0.7656, norm(x): 0.8912, norm(y): 0.9939, norm:0.3782, tok/sec: 185555.99, flops:162.52, batch-reuse:1
@ 1926 train 4.2129 , allloss: 4.2129, dt: 703.46ms, fracRes: 0.2641, norm(attn): 0.3848, norm(output): 0.7656, norm(x): 0.8912, norm(y): 0.9940, norm:0.4222, tok/sec: 186323.86, flops:163.19, batch-reuse:1
@ 1927 train 4.1554 , allloss: 4.1554, dt: 692.39ms, fracRes: 0.2617, norm(attn): 0.3828, norm(output): 0.7656, norm(x): 0.8899, norm(y): 0.9940, norm:0.4064, tok/sec: 189303.46, flops:165.80, batch-reuse:1
@ 1928 train 4.1872 , allloss: 4.1872, dt: 693.62ms, fracRes: 0.2704, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8925, norm(y): 0.9935, norm:0.4007, tok/sec: 188967.77, flops:165.51, batch-reuse:1
@ 1929 train 4.1771 , allloss: 4.1771, dt: 705.21ms, fracRes: 0.2731, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8961, norm(y): 0.9935, norm:0.3554, tok/sec: 185861.50, flops:162.79, batch-reuse:1
@ 1930 train 4.1089 , allloss: 4.1089, dt: 707.65ms, fracRes: 0.2694, norm(attn): 0.3770, norm(output): 0.7734, norm(x): 0.8968, norm(y): 0.9936, norm:0.3852, tok/sec: 185220.96, flops:162.23, batch-reuse:1
@ 1931 train 4.2355 , allloss: 4.2355, dt: 706.54ms, fracRes: 0.2652, norm(attn): 0.3809, norm(output): 0.7695, norm(x): 0.8934, norm(y): 0.9937, norm:0.3991, tok/sec: 185513.47, flops:162.48, batch-reuse:1
@ 1932 train 4.2875 , allloss: 4.2875, dt: 705.27ms, fracRes: 0.2648, norm(attn): 0.3809, norm(output): 0.7812, norm(x): 0.8974, norm(y): 0.9940, norm:0.4357, tok/sec: 185846.54, flops:162.77, batch-reuse:1
@ 1933 train 4.2240 , allloss: 4.2240, dt: 702.09ms, fracRes: 0.2634, norm(attn): 0.3828, norm(output): 0.7695, norm(x): 0.8934, norm(y): 0.9940, norm:0.4119, tok/sec: 186689.39, flops:163.51, batch-reuse:1
@ 1934 train 4.1837 , allloss: 4.1837, dt: 704.82ms, fracRes: 0.2619, norm(attn): 0.3867, norm(output): 0.7773, norm(x): 0.8941, norm(y): 0.9939, norm:0.4373, tok/sec: 185964.67, flops:162.88, batch-reuse:1
@ 1935 train 4.1313 , allloss: 4.1313, dt: 712.67ms, fracRes: 0.2694, norm(attn): 0.3809, norm(output): 0.7656, norm(x): 0.8933, norm(y): 0.9935, norm:0.3728, tok/sec: 183916.55, flops:161.08, batch-reuse:1
@ 1936 train 4.1655 , allloss: 4.1655, dt: 694.69ms, fracRes: 0.2685, norm(attn): 0.3809, norm(output): 0.7734, norm(x): 0.8962, norm(y): 0.9938, norm:0.3773, tok/sec: 188677.10, flops:165.25, batch-reuse:1
@ 1937 train 4.1284 , allloss: 4.1284, dt: 687.79ms, fracRes: 0.2646, norm(attn): 0.3809, norm(output): 0.7734, norm(x): 0.8946, norm(y): 0.9938, norm:0.3762, tok/sec: 190568.76, flops:166.91, batch-reuse:1
@ 1938 train 4.1525 , allloss: 4.1525, dt: 699.97ms, fracRes: 0.2601, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8930, norm(y): 0.9942, norm:0.3693, tok/sec: 187254.18, flops:164.01, batch-reuse:1
@ 1939 train 4.1413 , allloss: 4.1413, dt: 708.55ms, fracRes: 0.2635, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8954, norm(y): 0.9943, norm:0.3981, tok/sec: 184986.06, flops:162.02, batch-reuse:1
@ 1940 train 4.2421 , allloss: 4.2421, dt: 689.02ms, fracRes: 0.2662, norm(attn): 0.3828, norm(output): 0.7812, norm(x): 0.8977, norm(y): 0.9940, norm:0.4209, tok/sec: 190229.76, flops:166.61, batch-reuse:1
@ 1941 train 4.2326 , allloss: 4.2326, dt: 711.66ms, fracRes: 0.2672, norm(attn): 0.3848, norm(output): 0.7695, norm(x): 0.8890, norm(y): 0.9939, norm:0.4214, tok/sec: 184177.31, flops:161.31, batch-reuse:1
@ 1942 train 4.1442 , allloss: 4.1442, dt: 706.74ms, fracRes: 0.2684, norm(attn): 0.3809, norm(output): 0.7695, norm(x): 0.8899, norm(y): 0.9939, norm:0.4303, tok/sec: 185459.34, flops:162.44, batch-reuse:1
@ 1943 train 4.2338 , allloss: 4.2338, dt: 707.40ms, fracRes: 0.2712, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8916, norm(y): 0.9937, norm:0.3792, tok/sec: 185288.01, flops:162.29, batch-reuse:1
@ 1944 train 4.1753 , allloss: 4.1753, dt: 700.80ms, fracRes: 0.2735, norm(attn): 0.3789, norm(output): 0.7656, norm(x): 0.8909, norm(y): 0.9934, norm:0.3832, tok/sec: 187033.25, flops:163.81, batch-reuse:1
@ 1945 train 4.1131 , allloss: 4.1131, dt: 708.39ms, fracRes: 0.2682, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8893, norm(y): 0.9936, norm:0.3925, tok/sec: 185026.90, flops:162.06, batch-reuse:1
@ 1946 train 4.0690 , allloss: 4.0690, dt: 709.58ms, fracRes: 0.2635, norm(attn): 0.3789, norm(output): 0.7656, norm(x): 0.8874, norm(y): 0.9937, norm:0.3484, tok/sec: 184717.18, flops:161.79, batch-reuse:1
@ 1947 train 4.2710 , allloss: 4.2710, dt: 705.79ms, fracRes: 0.2623, norm(attn): 0.3789, norm(output): 0.7695, norm(x): 0.8895, norm(y): 0.9940, norm:0.3824, tok/sec: 185709.31, flops:162.65, batch-reuse:1
@ 1948 train 4.0468 , allloss: 4.0468, dt: 709.70ms, fracRes: 0.2603, norm(attn): 0.3809, norm(output): 0.7734, norm(x): 0.8928, norm(y): 0.9941, norm:0.3906, tok/sec: 184687.45, flops:161.76, batch-reuse:1
@ 1949 train 4.1884 , allloss: 4.1884, dt: 707.11ms, fracRes: 0.2621, norm(attn): 0.3809, norm(output): 0.7734, norm(x): 0.8923, norm(y): 0.9942, norm:0.3668, tok/sec: 185363.60, flops:162.35, batch-reuse:1
@ 1950 train 4.2273 , allloss: 4.2273, dt: 704.61ms, fracRes: 0.2589, norm(attn): 0.3848, norm(output): 0.7891, norm(x): 0.8950, norm(y): 0.9944, norm:0.4030, tok/sec: 186020.42, flops:162.93, batch-reuse:1
@ 1951 train 4.1089 , allloss: 4.1089, dt: 701.75ms, fracRes: 0.2669, norm(attn): 0.3867, norm(output): 0.7852, norm(x): 0.8986, norm(y): 0.9940, norm:0.4400, tok/sec: 186778.31, flops:163.59, batch-reuse:1
@ 1952 train 4.1313 , allloss: 4.1313, dt: 708.95ms, fracRes: 0.2690, norm(attn): 0.3828, norm(output): 0.7891, norm(x): 0.9011, norm(y): 0.9938, norm:0.4300, tok/sec: 184883.16, flops:161.93, batch-reuse:1
@ 1953 train 4.1212 , allloss: 4.1212, dt: 706.58ms, fracRes: 0.2729, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.9037, norm(y): 0.9936, norm:0.3756, tok/sec: 185502.39, flops:162.47, batch-reuse:1
@ 1954 train 4.1244 , allloss: 4.1244, dt: 706.70ms, fracRes: 0.2684, norm(attn): 0.3828, norm(output): 0.7812, norm(x): 0.8967, norm(y): 0.9938, norm:0.4362, tok/sec: 185470.60, flops:162.45, batch-reuse:1
@ 1955 train 4.1026 , allloss: 4.1026, dt: 706.18ms, fracRes: 0.2659, norm(attn): 0.3867, norm(output): 0.7812, norm(x): 0.8954, norm(y): 0.9942, norm:0.4142, tok/sec: 185607.48, flops:162.57, batch-reuse:1
@ 1956 train 4.0180 , allloss: 4.0180, dt: 707.84ms, fracRes: 0.2703, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8975, norm(y): 0.9939, norm:0.3938, tok/sec: 185171.61, flops:162.18, batch-reuse:1
@ 1957 train 4.0876 , allloss: 4.0876, dt: 707.57ms, fracRes: 0.2712, norm(attn): 0.3887, norm(output): 0.7969, norm(x): 0.9060, norm(y): 0.9939, norm:0.3884, tok/sec: 185243.68, flops:162.25, batch-reuse:1
@ 1958 train 4.1224 , allloss: 4.1224, dt: 703.13ms, fracRes: 0.2755, norm(attn): 0.3867, norm(output): 0.7852, norm(x): 0.9076, norm(y): 0.9938, norm:0.4181, tok/sec: 186413.20, flops:163.27, batch-reuse:1
@ 1959 train 4.0487 , allloss: 4.0487, dt: 706.06ms, fracRes: 0.2690, norm(attn): 0.3867, norm(output): 0.7734, norm(x): 0.8975, norm(y): 0.9938, norm:0.3836, tok/sec: 185638.51, flops:162.59, batch-reuse:1
@ 1960 train 3.9985 , allloss: 3.9985, dt: 682.46ms, fracRes: 0.2673, norm(attn): 0.3848, norm(output): 0.7656, norm(x): 0.8918, norm(y): 0.9938, norm:0.4003, tok/sec: 192057.18, flops:168.21, batch-reuse:1
@ 1961 train 4.1352 , allloss: 4.1352, dt: 690.69ms, fracRes: 0.2651, norm(attn): 0.3848, norm(output): 0.7812, norm(x): 0.8961, norm(y): 0.9940, norm:0.3832, tok/sec: 189769.12, flops:166.21, batch-reuse:1
@ 1962 train 4.0729 , allloss: 4.0729, dt: 700.43ms, fracRes: 0.2685, norm(attn): 0.3828, norm(output): 0.7695, norm(x): 0.8937, norm(y): 0.9939, norm:0.4384, tok/sec: 187130.78, flops:163.90, batch-reuse:1
@ 1963 train 4.1671 , allloss: 4.1671, dt: 700.61ms, fracRes: 0.2651, norm(attn): 0.3848, norm(output): 0.7773, norm(x): 0.8955, norm(y): 0.9941, norm:0.3637, tok/sec: 187081.62, flops:163.86, batch-reuse:1
@ 1964 train 4.0854 , allloss: 4.0854, dt: 693.80ms, fracRes: 0.2645, norm(attn): 0.3867, norm(output): 0.7734, norm(x): 0.8949, norm(y): 0.9940, norm:0.4618, tok/sec: 188920.11, flops:165.47, batch-reuse:1
@ 1965 train 4.1548 , allloss: 4.1548, dt: 701.66ms, fracRes: 0.2711, norm(attn): 0.3809, norm(output): 0.7656, norm(x): 0.8910, norm(y): 0.9937, norm:0.4202, tok/sec: 186802.87, flops:163.61, batch-reuse:1
@ 1966 train 4.0323 , allloss: 4.0323, dt: 694.75ms, fracRes: 0.2725, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8918, norm(y): 0.9937, norm:0.4371, tok/sec: 188661.75, flops:165.24, batch-reuse:1
@ 1967 train 4.0818 , allloss: 4.0818, dt: 699.42ms, fracRes: 0.2722, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8946, norm(y): 0.9937, norm:0.4074, tok/sec: 187402.02, flops:164.14, batch-reuse:1
@ 1968 train 4.0919 , allloss: 4.0919, dt: 703.70ms, fracRes: 0.2672, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8941, norm(y): 0.9939, norm:0.4195, tok/sec: 186260.29, flops:163.14, batch-reuse:1
@ 1969 train 4.1962 , allloss: 4.1962, dt: 693.20ms, fracRes: 0.2664, norm(attn): 0.3770, norm(output): 0.7734, norm(x): 0.8968, norm(y): 0.9942, norm:0.4167, tok/sec: 189082.88, flops:165.61, batch-reuse:1
@ 1970 train 4.0702 , allloss: 4.0702, dt: 707.35ms, fracRes: 0.2690, norm(attn): 0.3789, norm(output): 0.7734, norm(x): 0.8962, norm(y): 0.9941, norm:0.4149, tok/sec: 185301.18, flops:162.30, batch-reuse:1
@ 1971 train 4.1177 , allloss: 4.1177, dt: 709.29ms, fracRes: 0.2691, norm(attn): 0.3770, norm(output): 0.7773, norm(x): 0.8960, norm(y): 0.9940, norm:0.4278, tok/sec: 184792.93, flops:161.85, batch-reuse:1
@ 1972 train 4.0810 , allloss: 4.0810, dt: 708.58ms, fracRes: 0.2716, norm(attn): 0.3770, norm(output): 0.7734, norm(x): 0.8995, norm(y): 0.9939, norm:0.3802, tok/sec: 184978.53, flops:162.01, batch-reuse:1
@ 1973 train 4.0868 , allloss: 4.0868, dt: 710.60ms, fracRes: 0.2669, norm(attn): 0.3789, norm(output): 0.7773, norm(x): 0.9005, norm(y): 0.9941, norm:0.4234, tok/sec: 184451.61, flops:161.55, batch-reuse:1
@ 1974 train 4.1230 , allloss: 4.1230, dt: 708.50ms, fracRes: 0.2685, norm(attn): 0.3770, norm(output): 0.7852, norm(x): 0.9059, norm(y): 0.9941, norm:0.4303, tok/sec: 184999.38, flops:162.03, batch-reuse:1
@ 1975 train 3.9489 , allloss: 3.9489, dt: 692.35ms, fracRes: 0.2783, norm(attn): 0.3789, norm(output): 0.7773, norm(x): 0.9053, norm(y): 0.9936, norm:0.4430, tok/sec: 189315.26, flops:165.81, batch-reuse:1
@ 1976 train 4.1377 , allloss: 4.1377, dt: 688.55ms, fracRes: 0.2724, norm(attn): 0.3809, norm(output): 0.7852, norm(x): 0.9049, norm(y): 0.9941, norm:0.4180, tok/sec: 190360.11, flops:166.73, batch-reuse:1
@ 1977 train 4.0131 , allloss: 4.0131, dt: 686.05ms, fracRes: 0.2715, norm(attn): 0.3828, norm(output): 0.7773, norm(x): 0.9007, norm(y): 0.9940, norm:0.4517, tok/sec: 191051.95, flops:167.33, batch-reuse:1
@ 1978 train 4.1395 , allloss: 4.1395, dt: 698.05ms, fracRes: 0.2722, norm(attn): 0.3789, norm(output): 0.7930, norm(x): 0.9075, norm(y): 0.9941, norm:0.4009, tok/sec: 187768.27, flops:164.46, batch-reuse:1
@ 1979 train 4.1222 , allloss: 4.1222, dt: 696.40ms, fracRes: 0.2716, norm(attn): 0.3867, norm(output): 0.7852, norm(x): 0.9040, norm(y): 0.9940, norm:0.4328, tok/sec: 188212.66, flops:164.85, batch-reuse:1
@ 1980 train 4.0983 , allloss: 4.0983, dt: 697.97ms, fracRes: 0.2738, norm(attn): 0.3848, norm(output): 0.7891, norm(x): 0.9077, norm(y): 0.9941, norm:0.3853, tok/sec: 187790.39, flops:164.48, batch-reuse:1
@ 1981 train 4.1003 , allloss: 4.1003, dt: 693.97ms, fracRes: 0.2774, norm(attn): 0.3789, norm(output): 0.7891, norm(x): 0.9120, norm(y): 0.9940, norm:0.4521, tok/sec: 188872.99, flops:165.43, batch-reuse:1
@ 1982 train 4.0777 , allloss: 4.0777, dt: 706.18ms, fracRes: 0.2747, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.9018, norm(y): 0.9938, norm:0.3761, tok/sec: 185607.11, flops:162.57, batch-reuse:1
@ 1983 train 4.1566 , allloss: 4.1566, dt: 706.02ms, fracRes: 0.2663, norm(attn): 0.3906, norm(output): 0.7812, norm(x): 0.8997, norm(y): 0.9944, norm:0.4187, tok/sec: 185649.10, flops:162.60, batch-reuse:1
@ 1984 train 4.1103 , allloss: 4.1103, dt: 700.29ms, fracRes: 0.2692, norm(attn): 0.3828, norm(output): 0.7891, norm(x): 0.9009, norm(y): 0.9941, norm:0.4057, tok/sec: 187168.95, flops:163.93, batch-reuse:1
@ 1985 train 4.0963 , allloss: 4.0963, dt: 694.83ms, fracRes: 0.2730, norm(attn): 0.3809, norm(output): 0.7812, norm(x): 0.9026, norm(y): 0.9938, norm:0.3909, tok/sec: 188638.90, flops:165.22, batch-reuse:1
@ 1986 train 4.1556 , allloss: 4.1556, dt: 696.39ms, fracRes: 0.2734, norm(attn): 0.3809, norm(output): 0.7891, norm(x): 0.9067, norm(y): 0.9937, norm:0.3886, tok/sec: 188217.69, flops:164.85, batch-reuse:1
@ 1987 train 4.1466 , allloss: 4.1466, dt: 716.06ms, fracRes: 0.2730, norm(attn): 0.3828, norm(output): 0.7852, norm(x): 0.9067, norm(y): 0.9936, norm:0.3831, tok/sec: 183046.01, flops:160.32, batch-reuse:1
@ 1988 train 4.0974 , allloss: 4.0974, dt: 713.70ms, fracRes: 0.2768, norm(attn): 0.3828, norm(output): 0.7812, norm(x): 0.9064, norm(y): 0.9937, norm:0.3683, tok/sec: 183651.20, flops:160.85, batch-reuse:1
@ 1989 train 4.1261 , allloss: 4.1261, dt: 710.05ms, fracRes: 0.2784, norm(attn): 0.3828, norm(output): 0.7812, norm(x): 0.9048, norm(y): 0.9936, norm:0.3917, tok/sec: 184594.87, flops:161.68, batch-reuse:1
@ 1990 train 4.1573 , allloss: 4.1573, dt: 692.08ms, fracRes: 0.2735, norm(attn): 0.3828, norm(output): 0.7812, norm(x): 0.9042, norm(y): 0.9938, norm:0.3481, tok/sec: 189388.77, flops:165.88, batch-reuse:1
@ 1991 train 4.0341 , allloss: 4.0341, dt: 697.18ms, fracRes: 0.2680, norm(attn): 0.3867, norm(output): 0.7812, norm(x): 0.9025, norm(y): 0.9940, norm:0.3828, tok/sec: 188002.45, flops:164.66, batch-reuse:1
@ 1992 train 4.1274 , allloss: 4.1274, dt: 697.87ms, fracRes: 0.2665, norm(attn): 0.3906, norm(output): 0.7852, norm(x): 0.9031, norm(y): 0.9943, norm:0.3759, tok/sec: 187816.12, flops:164.50, batch-reuse:1
@ 1993 train 3.9749 , allloss: 3.9749, dt: 696.69ms, fracRes: 0.2716, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8999, norm(y): 0.9937, norm:0.3818, tok/sec: 188134.34, flops:164.78, batch-reuse:1
@ 1994 train 3.9943 , allloss: 3.9943, dt: 695.97ms, fracRes: 0.2705, norm(attn): 0.3867, norm(output): 0.7812, norm(x): 0.8993, norm(y): 0.9939, norm:0.3964, tok/sec: 188329.04, flops:164.95, batch-reuse:1
@ 1995 train 4.0123 , allloss: 4.0123, dt: 686.17ms, fracRes: 0.2687, norm(attn): 0.3828, norm(output): 0.7617, norm(x): 0.8911, norm(y): 0.9938, norm:0.3736, tok/sec: 191020.29, flops:167.31, batch-reuse:1
@ 1996 train 4.0625 , allloss: 4.0625, dt: 700.30ms, fracRes: 0.2728, norm(attn): 0.3770, norm(output): 0.7695, norm(x): 0.8944, norm(y): 0.9936, norm:0.3753, tok/sec: 187165.19, flops:163.93, batch-reuse:1
@ 1997 train 4.0148 , allloss: 4.0148, dt: 692.62ms, fracRes: 0.2723, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8981, norm(y): 0.9936, norm:0.3903, tok/sec: 189241.23, flops:165.75, batch-reuse:1
@ 1998 train 3.9839 , allloss: 3.9839, dt: 699.63ms, fracRes: 0.2737, norm(attn): 0.3730, norm(output): 0.7734, norm(x): 0.8973, norm(y): 0.9936, norm:0.4217, tok/sec: 187344.22, flops:164.09, batch-reuse:1
@ 1999 train 3.9132 , allloss: 3.9132, dt: 699.36ms, fracRes: 0.2770, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8974, norm(y): 0.9933, norm:0.3606, tok/sec: 187417.67, flops:164.15, batch-reuse:1
@ 2000 val 4.0825
@ 2000 train 3.9961 , allloss: 3.9961, dt: 1164.54ms, fracRes: 0.2687, norm(attn): 0.3750, norm(output): 0.7695, norm(x): 0.8895, norm(y): 0.9936, norm:0.3830, tok/sec: 112552.22, flops:98.58, batch-reuse:1
@ 2001 train 4.0593 , allloss: 4.0593, dt: 698.98ms, fracRes: 0.2690, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8940, norm(y): 0.9937, norm:0.3838, tok/sec: 187518.80, flops:164.24, batch-reuse:1
@ 2002 train 4.0352 , allloss: 4.0352, dt: 693.27ms, fracRes: 0.2662, norm(attn): 0.3809, norm(output): 0.7812, norm(x): 0.8990, norm(y): 0.9942, norm:0.3749, tok/sec: 189063.11, flops:165.59, batch-reuse:1
@ 2003 train 4.0384 , allloss: 4.0384, dt: 694.41ms, fracRes: 0.2708, norm(attn): 0.3809, norm(output): 0.7852, norm(x): 0.8995, norm(y): 0.9940, norm:0.4054, tok/sec: 188752.63, flops:165.32, batch-reuse:1
@ 2004 train 4.0369 , allloss: 4.0369, dt: 691.44ms, fracRes: 0.2709, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8987, norm(y): 0.9941, norm:0.4053, tok/sec: 189563.71, flops:166.03, batch-reuse:1
@ 2005 train 3.9222 , allloss: 3.9222, dt: 690.74ms, fracRes: 0.2749, norm(attn): 0.3809, norm(output): 0.7773, norm(x): 0.8987, norm(y): 0.9937, norm:0.4289, tok/sec: 189755.43, flops:166.20, batch-reuse:1
@ 2006 train 4.0775 , allloss: 4.0775, dt: 692.33ms, fracRes: 0.2691, norm(attn): 0.3809, norm(output): 0.7891, norm(x): 0.9015, norm(y): 0.9939, norm:0.3953, tok/sec: 189321.46, flops:165.82, batch-reuse:1
@ 2007 train 3.9761 , allloss: 3.9761, dt: 693.76ms, fracRes: 0.2716, norm(attn): 0.3809, norm(output): 0.7734, norm(x): 0.8977, norm(y): 0.9937, norm:0.3921, tok/sec: 188928.74, flops:165.47, batch-reuse:1
@ 2008 train 4.0256 , allloss: 4.0256, dt: 694.90ms, fracRes: 0.2717, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8944, norm(y): 0.9938, norm:0.4363, tok/sec: 188621.10, flops:165.20, batch-reuse:1
@ 2009 train 3.9875 , allloss: 3.9875, dt: 689.83ms, fracRes: 0.2701, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.8964, norm(y): 0.9941, norm:0.4322, tok/sec: 190007.27, flops:166.42, batch-reuse:1
@ 2010 train 4.0967 , allloss: 4.0967, dt: 690.79ms, fracRes: 0.2730, norm(attn): 0.3789, norm(output): 0.7734, norm(x): 0.8974, norm(y): 0.9940, norm:0.4038, tok/sec: 189742.13, flops:166.19, batch-reuse:1
@ 2011 train 3.9001 , allloss: 3.9001, dt: 685.66ms, fracRes: 0.2745, norm(attn): 0.3789, norm(output): 0.7812, norm(x): 0.9059, norm(y): 0.9940, norm:0.4495, tok/sec: 191160.57, flops:167.43, batch-reuse:1
@ 2012 train 3.9138 , allloss: 3.9138, dt: 696.92ms, fracRes: 0.2698, norm(attn): 0.3828, norm(output): 0.7695, norm(x): 0.8962, norm(y): 0.9937, norm:0.4162, tok/sec: 188072.49, flops:164.72, batch-reuse:1
@ 2013 train 3.9893 , allloss: 3.9893, dt: 695.85ms, fracRes: 0.2698, norm(attn): 0.3770, norm(output): 0.7734, norm(x): 0.8957, norm(y): 0.9937, norm:0.3955, tok/sec: 188361.17, flops:164.98, batch-reuse:1
@ 2014 train 3.9846 , allloss: 3.9846, dt: 694.51ms, fracRes: 0.2727, norm(attn): 0.3809, norm(output): 0.7773, norm(x): 0.9033, norm(y): 0.9941, norm:0.4209, tok/sec: 188725.42, flops:165.30, batch-reuse:1
@ 2015 train 3.9417 , allloss: 3.9417, dt: 692.25ms, fracRes: 0.2763, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.9038, norm(y): 0.9940, norm:0.4156, tok/sec: 189341.87, flops:165.84, batch-reuse:1
@ 2016 train 4.0343 , allloss: 4.0343, dt: 699.23ms, fracRes: 0.2780, norm(attn): 0.3848, norm(output): 0.7734, norm(x): 0.9022, norm(y): 0.9940, norm:0.4109, tok/sec: 187450.96, flops:164.18, batch-reuse:1
@ 2017 train 3.9793 , allloss: 3.9793, dt: 698.56ms, fracRes: 0.2760, norm(attn): 0.3828, norm(output): 0.7734, norm(x): 0.9022, norm(y): 0.9939, norm:0.4129, tok/sec: 187631.96, flops:164.34, batch-reuse:1
@ 2018 train 4.0229 , allloss: 4.0229, dt: 689.36ms, fracRes: 0.2736, norm(attn): 0.3848, norm(output): 0.7734, norm(x): 0.9003, norm(y): 0.9941, norm:0.4085, tok/sec: 190136.99, flops:166.53, batch-reuse:1
@ 2019 train 4.0464 , allloss: 4.0464, dt: 703.55ms, fracRes: 0.2706, norm(attn): 0.3828, norm(output): 0.7656, norm(x): 0.8971, norm(y): 0.9940, norm:0.3971, tok/sec: 186302.08, flops:163.17, batch-reuse:1
@ 2020 train 3.9565 , allloss: 3.9565, dt: 690.42ms, fracRes: 0.2745, norm(attn): 0.3828, norm(output): 0.7656, norm(x): 0.8973, norm(y): 0.9937, norm:0.4006, tok/sec: 189842.58, flops:166.27, batch-reuse:1
@ 2021 train 3.9743 , allloss: 3.9743, dt: 693.09ms, fracRes: 0.2712, norm(attn): 0.3809, norm(output): 0.7812, norm(x): 0.9005, norm(y): 0.9940, norm:0.3927, tok/sec: 189112.21, flops:165.63, batch-reuse:1
@ 2022 train 4.0256 , allloss: 4.0256, dt: 693.81ms, fracRes: 0.2749, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.9034, norm(y): 0.9938, norm:0.4158, tok/sec: 188916.34, flops:165.46, batch-reuse:1
@ 2023 train 4.0318 , allloss: 4.0318, dt: 698.61ms, fracRes: 0.2735, norm(attn): 0.3770, norm(output): 0.7734, norm(x): 0.9011, norm(y): 0.9940, norm:0.4005, tok/sec: 187618.00, flops:164.33, batch-reuse:1
@ 2024 train 3.9899 , allloss: 3.9899, dt: 696.51ms, fracRes: 0.2752, norm(attn): 0.3828, norm(output): 0.7773, norm(x): 0.9002, norm(y): 0.9941, norm:0.3971, tok/sec: 188184.18, flops:164.82, batch-reuse:1
@ 2025 train 4.0572 , allloss: 4.0572, dt: 684.53ms, fracRes: 0.2730, norm(attn): 0.3848, norm(output): 0.7930, norm(x): 0.9054, norm(y): 0.9943, norm:0.3997, tok/sec: 191477.43, flops:167.71, batch-reuse:1
@ 2026 train 3.9666 , allloss: 3.9666, dt: 681.15ms, fracRes: 0.2727, norm(attn): 0.3867, norm(output): 0.7891, norm(x): 0.9038, norm(y): 0.9941, norm:0.3832, tok/sec: 192427.46, flops:168.54, batch-reuse:1
@ 2027 train 4.0368 , allloss: 4.0368, dt: 700.28ms, fracRes: 0.2753, norm(attn): 0.3828, norm(output): 0.7930, norm(x): 0.9026, norm(y): 0.9938, norm:0.3814, tok/sec: 187171.81, flops:163.94, batch-reuse:1
@ 2028 train 4.3509 , allloss: 4.3509, dt: 696.48ms, fracRes: 0.2706, norm(attn): 0.3887, norm(output): 0.7930, norm(x): 0.9079, norm(y): 0.9942, norm:0.5005, tok/sec: 188193.14, flops:164.83, batch-reuse:1
@ 2029 train 3.9815 , allloss: 3.9815, dt: 702.91ms, fracRes: 0.2755, norm(attn): 0.3906, norm(output): 0.7891, norm(x): 0.9080, norm(y): 0.9939, norm:0.4958, tok/sec: 186471.68, flops:163.32, batch-reuse:1
@ 2030 train 3.8237 , allloss: 3.8237, dt: 705.27ms, fracRes: 0.2777, norm(attn): 0.3809, norm(output): 0.7734, norm(x): 0.9014, norm(y): 0.9935, norm:0.3714, tok/sec: 185846.73, flops:162.77, batch-reuse:1
@ 2031 train 3.9044 , allloss: 3.9044, dt: 706.90ms, fracRes: 0.2803, norm(attn): 0.3828, norm(output): 0.7812, norm(x): 0.9049, norm(y): 0.9936, norm:0.4374, tok/sec: 185416.87, flops:162.40, batch-reuse:1
@ 2032 train 3.9370 , allloss: 3.9370, dt: 705.25ms, fracRes: 0.2837, norm(attn): 0.3809, norm(output): 0.7734, norm(x): 0.9099, norm(y): 0.9935, norm:0.4155, tok/sec: 185851.25, flops:162.78, batch-reuse:1
@ 2033 train 3.8755 , allloss: 3.8755, dt: 700.75ms, fracRes: 0.2856, norm(attn): 0.3789, norm(output): 0.7852, norm(x): 0.9071, norm(y): 0.9934, norm:0.4066, tok/sec: 187046.04, flops:163.83, batch-reuse:1
@ 2034 train 3.9733 , allloss: 3.9733, dt: 709.64ms, fracRes: 0.2796, norm(attn): 0.3789, norm(output): 0.7852, norm(x): 0.9037, norm(y): 0.9937, norm:0.3855, tok/sec: 184701.10, flops:161.77, batch-reuse:1
@ 2035 train 3.9152 , allloss: 3.9152, dt: 710.76ms, fracRes: 0.2766, norm(attn): 0.3789, norm(output): 0.7891, norm(x): 0.9049, norm(y): 0.9936, norm:0.4128, tok/sec: 184410.16, flops:161.52, batch-reuse:1
@ 2036 train 3.9721 , allloss: 3.9721, dt: 696.51ms, fracRes: 0.2805, norm(attn): 0.3809, norm(output): 0.7852, norm(x): 0.9054, norm(y): 0.9938, norm:0.3873, tok/sec: 188183.22, flops:164.82, batch-reuse:1
@ 2037 train 3.9139 , allloss: 3.9139, dt: 696.50ms, fracRes: 0.2773, norm(attn): 0.3867, norm(output): 0.7930, norm(x): 0.9081, norm(y): 0.9941, norm:0.3785, tok/sec: 188187.60, flops:164.83, batch-reuse:1
@ 2038 train 3.9618 , allloss: 3.9618, dt: 687.45ms, fracRes: 0.2793, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9117, norm(y): 0.9939, norm:0.4231, tok/sec: 190663.80, flops:166.99, batch-reuse:1
@ 2039 train 4.0421 , allloss: 4.0421, dt: 694.19ms, fracRes: 0.2778, norm(attn): 0.3789, norm(output): 0.7930, norm(x): 0.9114, norm(y): 0.9939, norm:0.3890, tok/sec: 188813.18, flops:165.37, batch-reuse:1
@ 2040 train 4.1161 , allloss: 4.1161, dt: 700.28ms, fracRes: 0.2787, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.9110, norm(y): 0.9941, norm:0.3957, tok/sec: 187171.62, flops:163.94, batch-reuse:1
@ 2041 train 4.0277 , allloss: 4.0277, dt: 700.22ms, fracRes: 0.2728, norm(attn): 0.3887, norm(output): 0.7969, norm(x): 0.9089, norm(y): 0.9943, norm:0.4373, tok/sec: 187187.62, flops:163.95, batch-reuse:1
@ 2042 train 4.1762 , allloss: 4.1762, dt: 697.23ms, fracRes: 0.2741, norm(attn): 0.3867, norm(output): 0.7891, norm(x): 0.9086, norm(y): 0.9944, norm:0.4559, tok/sec: 187990.10, flops:164.65, batch-reuse:1
@ 2043 train 4.1989 , allloss: 4.1989, dt: 692.55ms, fracRes: 0.2830, norm(attn): 0.3828, norm(output): 0.7852, norm(x): 0.9100, norm(y): 0.9941, norm:0.4716, tok/sec: 189261.23, flops:165.77, batch-reuse:1
@ 2044 train 4.2492 , allloss: 4.2492, dt: 700.49ms, fracRes: 0.2807, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9178, norm(y): 0.9940, norm:0.4677, tok/sec: 187113.52, flops:163.88, batch-reuse:1
@ 2045 train 4.1338 , allloss: 4.1338, dt: 701.58ms, fracRes: 0.2755, norm(attn): 0.3867, norm(output): 0.7891, norm(x): 0.9104, norm(y): 0.9942, norm:0.3888, tok/sec: 186823.63, flops:163.63, batch-reuse:1
@ 2046 train 4.2319 , allloss: 4.2319, dt: 700.62ms, fracRes: 0.2724, norm(attn): 0.3926, norm(output): 0.7930, norm(x): 0.9089, norm(y): 0.9944, norm:0.5009, tok/sec: 187080.41, flops:163.86, batch-reuse:1
@ 2047 train 4.1080 , allloss: 4.1080, dt: 705.97ms, fracRes: 0.2701, norm(attn): 0.3945, norm(output): 0.7852, norm(x): 0.9047, norm(y): 0.9944, norm:0.4588, tok/sec: 185661.51, flops:162.61, batch-reuse:1
@ 2048 train 4.0880 , allloss: 4.0880, dt: 699.65ms, fracRes: 0.2774, norm(attn): 0.3848, norm(output): 0.7852, norm(x): 0.9081, norm(y): 0.9938, norm:0.4531, tok/sec: 187340.52, flops:164.08, batch-reuse:1
@ 2049 train 4.1880 , allloss: 4.1880, dt: 703.78ms, fracRes: 0.2748, norm(attn): 0.3848, norm(output): 0.7891, norm(x): 0.9096, norm(y): 0.9941, norm:0.4254, tok/sec: 186241.11, flops:163.12, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0052, 0.9961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0055, 0.4844, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0244, 0.2773, 0.3242, 0.3750, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0090, 0.3906, 0.4043, 0.1670, 0.0282, 0.0000, 0.0000, 0.0000],
        [0.0190, 0.2227, 0.5781, 0.1436, 0.0140, 0.0248, 0.0000, 0.0000],
        [0.0221, 0.2285, 0.3066, 0.1777, 0.0747, 0.1016, 0.0869, 0.0000],
        [0.0139, 0.0835, 0.1177, 0.1118, 0.1299, 0.1377, 0.2832, 0.1216]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0161,     -0.6523,     -0.6719,     -0.6797,     -0.7578,     -0.6836,     -0.4766,     -0.3008],
        [    -0.0801,      5.1562,      5.1562,      3.7031,      4.5625,      4.3125,      3.1094,      2.0000],
        [    -0.1055,      4.3750,      4.4375,      5.2500,      5.3438,      4.9375,      4.1875,      3.0625],
        [    -0.0728,      2.3594,      2.5156,      2.6562,      4.2812,      4.0312,      2.6406,      1.4609],
        [    -0.0141,      3.7656,      3.7969,      2.9062,      1.1328,      1.4766,      1.6094,      1.1406],
        [     0.0001,      2.4531,      3.4062,      2.0156,     -0.3105,      0.2637,      2.3750,      0.8516],
        [    -0.0603,      2.2812,      2.5781,      2.0312,      1.1641,      1.4688,      1.3125,      0.6328],
        [    -0.0376,      1.7578,      2.1094,      2.0469,      2.2031,      2.2500,      2.9844,      2.1406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7491],
        [0.2234],
        [0.1346],
        [0.2564],
        [0.2439],
        [0.1458],
        [0.1616],
        [0.1714],
        [0.1157],
        [0.1525],
        [0.0485],
        [0.1284],
        [0.1349],
        [0.0862]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0036,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0035,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0013,     0.0014,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0016,     0.0074,     0.0003,     0.0015,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0008,     0.0005,     0.0002,     0.0004,     0.0006,     0.0000,     0.0000],
        [    0.9766,     0.0013,     0.0099,     0.0002,     0.0001,     0.0005,     0.0106,     0.0000],
        [    0.6875,     0.0020,     0.0013,     0.0004,     0.0002,     0.0001,     0.0020,     0.3047]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0016,     -0.1172,     -0.0698,     -0.2617,     -0.2578,     -0.1387,     -0.1611,     -0.0708],
        [     0.0260,     -5.5938,     -1.4766,     -7.9062,     -8.6250,     -7.7188,     -9.3750,     -6.3750],
        [     0.0078,     -5.6562,     -7.1250,     -1.4297,     -8.0625,     -8.8750,     -8.2500,     -7.0625],
        [    -0.0439,     -6.7188,     -6.5625,     -5.5312,     -1.0078,     -7.2188,     -8.1875,     -6.3125],
        [    -0.0767,     -6.4688,     -4.9688,     -8.2500,     -6.5625,     -3.2500,     -6.6250,     -3.8750],
        [    -0.0505,     -7.2500,     -7.6250,     -8.8125,     -7.9688,     -7.5000,     -1.8750,     -3.2344],
        [    -0.0942,     -6.7188,     -4.6875,     -8.6875,     -9.0000,     -7.5938,     -4.6250,      0.4785],
        [    -0.1050,     -5.9375,     -6.3750,     -7.5938,     -8.2500,     -9.2500,     -5.9688,     -0.9180]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7830],
        [0.8349],
        [0.7964],
        [0.8221],
        [0.7876],
        [0.7863],
        [0.7103],
        [0.6941],
        [0.7297],
        [0.5583],
        [0.7261],
        [0.6339],
        [0.6175],
        [0.7608]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0121, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0156, 0.8086, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0045, 0.7188, 0.1855, 0.0903, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0059, 0.4238, 0.1050, 0.0596, 0.4043, 0.0000, 0.0000, 0.0000],
        [0.0021, 0.3809, 0.0679, 0.0396, 0.3008, 0.2090, 0.0000, 0.0000],
        [0.0035, 0.2285, 0.0544, 0.0291, 0.2773, 0.1562, 0.2500, 0.0000],
        [0.0038, 0.1670, 0.0354, 0.0204, 0.3379, 0.1260, 0.2305, 0.0781]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0306,     -0.2002,     -0.2168,     -0.2559,     -0.1719,     -0.2256,     -0.1768,     -0.2715],
        [    -0.0072,      4.4062,      3.0312,      2.5781,      4.6875,      4.1250,      4.5938,      3.9375],
        [     0.0378,      3.9844,      2.4688,      1.8125,      4.1250,      3.3906,      4.0312,      3.2812],
        [    -0.0957,      4.9688,      3.6094,      2.8906,      5.1875,      4.5625,      4.8750,      4.4688],
        [     0.0117,      4.2812,      2.8906,      2.3281,      4.2500,      3.8281,      4.4062,      3.7031],
        [    -0.0913,      5.1250,      3.4062,      2.8594,      4.8750,      4.5312,      4.9688,      4.4375],
        [     0.0032,      4.1875,      2.7500,      2.1250,      4.3750,      3.8125,      4.2812,      3.3594],
        [     0.0356,      3.8125,      2.2656,      1.7188,      4.5312,      3.5312,      4.1562,      3.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8822],
        [0.7412],
        [0.6539],
        [0.7259],
        [0.6532],
        [0.5331],
        [0.5294],
        [0.5026],
        [0.5043],
        [0.5020],
        [0.5189],
        [0.4663],
        [0.4635],
        [0.4707]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9531, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2490, 0.4277, 0.3223, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0542, 0.1875, 0.6484, 0.1104, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4492, 0.0835, 0.2461, 0.1660, 0.0557, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.1118, 0.1348, 0.1914, 0.1357, 0.1807, 0.0000, 0.0000],
        [0.5391, 0.0850, 0.1748, 0.0713, 0.0322, 0.0593, 0.0378, 0.0000],
        [0.0256, 0.0491, 0.1104, 0.0791, 0.0415, 0.0908, 0.2217, 0.3828]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0067,     -0.5117,     -0.4141,     -0.4727,     -0.5312,     -0.4902,     -0.6328,     -0.5898],
        [    -0.0026,     -3.0312,     -0.0271,     -0.8711,     -1.7500,     -0.8086,     -1.4141,     -0.7695],
        [    -0.0381,      0.5039,      0.2188,      0.5156,      0.0742,      0.8789,      1.2656,      1.8594],
        [    -0.0693,      1.1719,      2.4062,      0.6445,      1.4531,      2.5625,      2.9531,      3.2031],
        [    -0.0417,     -1.7266,     -0.6445,     -1.0391,     -2.1250,      0.1064,     -0.7109,      0.5078],
        [    -0.0542,     -0.8438,     -0.6523,     -0.3066,     -0.6484,     -0.3652,      0.0864,      1.5234],
        [    -0.0588,     -1.9062,     -1.1875,     -2.0938,     -2.8750,     -2.2656,     -2.7188,     -0.7305],
        [    -0.0762,      0.5742,      1.3828,      1.0547,      0.4102,      1.1875,      2.0781,      2.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6378],
        [0.3404],
        [0.3062],
        [0.3201],
        [0.3286],
        [0.2837],
        [0.1893],
        [0.2143],
        [0.1921],
        [0.2045],
        [0.1733],
        [0.1841],
        [0.1875],
        [0.1765]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0447,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0289,     0.9414,     0.0306,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1475,     0.7617,     0.0378,     0.0530,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.0154,     0.0022,     0.0039,     0.9766,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.0010,     0.0001,     0.0000,     0.9219,     0.0728,     0.0000,     0.0000],
        [    0.1216,     0.0090,     0.0007,     0.0002,     0.0115,     0.7617,     0.0947,     0.0000],
        [    0.0045,     0.0018,     0.0001,     0.0000,     0.0021,     0.0420,     0.7969,     0.1514]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0023,     -0.1934,     -0.2441,     -0.2559,     -0.1406,     -0.0952,     -0.1758,     -0.2129],
        [     0.0461,     -3.0156,     -7.3125,     -7.9062,     -4.4062,     -2.9531,     -3.2656,     -3.9844],
        [     0.0179,      3.5000,      0.0728,      0.8555,     -3.5938,     -3.2969,     -1.7031,     -1.0859],
        [     0.0060,      1.6484,     -1.3516,     -1.0156,     -0.9414,     -0.0364,     -0.6875,     -1.6250],
        [     0.0466,      2.1094,      0.1855,      0.7266,      6.2500,      4.4375,      0.7383,      0.3730],
        [     0.0378,     -1.0078,     -3.9531,     -4.5938,      5.8438,      3.2969,     -0.8867,     -3.2031],
        [    -0.0315,     -2.6250,     -5.2188,     -6.4375,     -2.3906,      1.8047,     -0.2793,     -1.8281],
        [    -0.0698,     -1.0078,     -3.9219,     -5.7500,     -0.8477,      2.1719,      5.0938,      3.4531]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8477],
        [0.4744],
        [0.4778],
        [0.4943],
        [0.5119],
        [0.4505],
        [0.3874],
        [0.3892],
        [0.3404],
        [0.3263],
        [0.2794],
        [0.3432],
        [0.2665],
        [0.2759]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0104,     -0.7227,     -0.7930,     -0.6641,     -0.6250,     -0.5352,     -0.7461,     -0.7266],
        [    -0.3340,    -23.2500,    -24.8750,    -20.7500,    -19.1250,    -17.6250,    -22.6250,    -22.0000],
        [    -0.3496,    -24.8750,    -27.3750,    -22.6250,    -20.7500,    -19.0000,    -24.2500,    -24.1250],
        [    -0.2891,    -21.8750,    -23.6250,    -18.3750,    -18.7500,    -16.8750,    -21.8750,    -20.0000],
        [    -0.2793,    -21.3750,    -23.3750,    -19.7500,    -17.7500,    -16.8750,    -20.8750,    -19.0000],
        [    -0.3184,    -22.0000,    -24.5000,    -21.3750,    -17.3750,    -17.5000,    -20.7500,    -20.8750],
        [    -0.3965,    -28.5000,    -30.8750,    -26.2500,    -23.8750,    -21.2500,    -27.2500,    -26.0000],
        [    -0.2793,    -21.0000,    -23.1250,    -19.5000,    -17.8750,    -16.3750,    -19.6250,    -17.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8213],
        [0.6725],
        [0.5740],
        [0.6251],
        [0.7320],
        [0.5995],
        [0.5356],
        [0.5478],
        [0.5208],
        [0.5445],
        [0.4589],
        [0.5197],
        [0.4882],
        [0.4034]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.5391,     0.4609,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0864,     0.4473,     0.1582,     0.3066,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ -0.0270,  -0.5898,  -0.6992,  -0.6758,  -1.0078,  -0.5430,  -0.7031,  -0.7891],
        [ -0.3535,  -7.9688, -10.6250,  -9.9375, -12.6250,  -7.5312,  -8.8125,  -8.8750],
        [  0.4590,   7.6562,   7.5000,   7.5938,  16.1250,   5.9688,  10.9375,   8.5000],
        [  0.1445,   1.7891,   0.7461,   1.4062,   5.4062,   0.6289,   3.5469,   0.8086],
        [ -0.6406, -14.1875, -18.3750, -17.7500, -22.2500, -12.4375, -16.5000, -18.3750],
        [ -0.7031, -15.2500, -19.1250, -17.5000, -21.1250, -11.1250, -15.8750, -17.5000],
        [ -0.5703, -12.5625, -16.8750, -15.7500, -19.1250, -11.5625, -14.3750, -16.0000],
        [ -0.5938, -13.8750, -18.8750, -18.3750, -22.0000, -12.4375, -17.2500, -17.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7152],
        [0.3102],
        [0.2821],
        [0.8193],
        [0.6296],
        [0.7251],
        [0.6877],
        [0.6849],
        [0.5525],
        [0.5905],
        [0.3973],
        [0.6602],
        [0.6431],
        [0.3812]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0056,     -0.8516,     -0.6406,     -0.6797,     -0.9062,     -0.9102,     -0.7266,     -0.8242],
        [    -0.2480,    -40.2500,    -28.6250,    -30.1250,    -40.0000,    -40.7500,    -31.5000,    -37.0000],
        [    -0.1270,    -21.3750,    -19.0000,    -19.8750,    -22.5000,    -22.7500,    -19.1250,    -21.5000],
        [    -0.0806,    -14.3125,    -12.6875,    -13.5000,    -15.6875,    -16.3750,    -13.9375,    -15.3750],
        [    -0.2246,    -32.0000,    -21.0000,    -23.2500,    -34.5000,    -33.5000,    -26.1250,    -29.1250],
        [    -0.3301,    -48.2500,    -36.0000,    -38.7500,    -51.7500,    -50.7500,    -40.7500,    -46.0000],
        [    -0.1484,    -23.5000,    -17.5000,    -18.6250,    -24.5000,    -24.8750,    -19.8750,    -23.0000],
        [    -0.2061,    -33.2500,    -27.5000,    -28.6250,    -34.5000,    -34.0000,    -28.5000,    -33.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9964],
        [0.3693],
        [0.3874],
        [0.9704],
        [0.9997],
        [0.8795],
        [0.9935],
        [0.9954],
        [0.9912],
        [0.9984],
        [0.7961],
        [0.9993],
        [0.9993],
        [0.6037]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9219,     0.0762,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.7266,     0.2715,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7070,     0.1670,     0.1260,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6953,     0.0317,     0.0952,     0.1030,     0.0747,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000],
        [    0.0845,     0.1592,     0.0483,     0.0479,     0.1670,     0.2295,     0.2637,     0.0000],
        [    0.9766,     0.0007,     0.0005,     0.0006,     0.0148,     0.0011,     0.0011,     0.0034]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0007,     -0.0251,     -0.0432,     -0.0505,     -0.0159,     -0.0300,     -0.0317,     -0.0403],
        [    -0.0513,     -2.5469,     -3.4062,     -3.5000,     -1.4844,     -2.4688,     -3.0156,     -3.3594],
        [     0.1069,      7.5312,      6.5625,      6.2812,      4.6250,      7.3125,      6.6875,      5.4375],
        [     0.1484,     10.2500,      8.8125,      8.5000,      6.5000,      9.6875,      9.6250,      6.9062],
        [    -0.0557,     -3.1406,     -2.0469,     -1.9688,     -2.2969,     -1.8359,     -2.0156,     -2.1562],
        [    -0.2227,    -13.1250,    -14.3750,    -14.2500,     -8.3125,    -12.8125,    -12.7500,    -11.5000],
        [    -0.0026,      0.6328,     -0.5625,     -0.5703,      0.6836,      1.0000,      1.1328,     -0.3203],
        [    -0.1240,     -7.3750,     -7.6250,     -7.5938,     -4.3125,     -6.9688,     -6.8750,     -5.7812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.7114],
        [    0.0025],
        [    0.0003],
        [    0.9661],
        [    0.9837],
        [    0.6488],
        [    0.9229],
        [    0.9964],
        [    0.9154],
        [    0.9980],
        [    0.0202],
        [    0.9971],
        [    0.9958],
        [    0.0027]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1196,     0.2305,     0.6484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0280,     0.1367,     0.4219,     0.4141,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8867,     0.0258,     0.0122,     0.0138,     0.0620,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0193,     0.2109,     0.1914,     0.2100,     0.0342,     0.2871,     0.0474,     0.0000],
        [    0.9883,     0.0004,     0.0004,     0.0005,     0.0084,     0.0014,     0.0009,     0.0008]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0013,     -0.1514,     -0.1475,     -0.1445,     -0.0859,     -0.1299,     -0.1348,     -0.1328],
        [    -0.0557,     -7.8125,     -6.8125,     -6.5000,     -3.0938,     -6.0625,     -5.6875,     -6.0625],
        [     0.0052,      0.6641,      1.6953,      1.7891,      0.6641,      1.3281,      0.1602,      0.6836],
        [     0.0140,      1.6016,      2.7344,      2.7188,      1.0703,      2.1250,      0.9219,      1.5781],
        [    -0.0297,     -3.5625,     -4.3125,     -4.1875,     -2.6875,     -3.5000,     -3.4375,     -3.6250],
        [    -0.2031,    -24.2500,    -26.1250,    -25.8750,    -14.9375,    -22.6250,    -21.2500,    -22.2500],
        [     0.0182,      2.4062,      2.3125,      2.4062,      0.5938,      2.7188,      0.9180,      1.6797],
        [    -0.0649,     -7.8438,     -7.9375,     -7.6250,     -4.8125,     -6.6562,     -7.0625,     -7.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7339],
        [0.1197],
        [0.0612],
        [0.6152],
        [1.0000],
        [0.1891],
        [0.6689],
        [0.8009],
        [0.6066],
        [0.9945],
        [0.0236],
        [0.9867],
        [0.9162],
        [0.0422]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9961, 0.0033, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6523, 0.1123, 0.2363, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4648, 0.1035, 0.2109, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5859, 0.0240, 0.1582, 0.1885, 0.0417, 0.0000, 0.0000, 0.0000],
        [0.8633, 0.0043, 0.0378, 0.0449, 0.0238, 0.0242, 0.0000, 0.0000],
        [0.3496, 0.0356, 0.1396, 0.1572, 0.0669, 0.1709, 0.0796, 0.0000],
        [0.5820, 0.0115, 0.0874, 0.1040, 0.0361, 0.0737, 0.0615, 0.0437]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0227,     -0.0161,     -0.0150,     -0.0189,     -0.0162,     -0.0176,     -0.0203],
        [    -0.0002,     -5.7188,     -3.2188,     -2.9844,     -3.5312,     -3.4219,     -3.2500,     -3.8906],
        [    -0.0010,     -1.7578,     -1.0156,     -0.9414,     -1.2500,     -0.8438,     -1.2734,     -1.2188],
        [    -0.0008,     -1.5000,     -0.7891,     -0.7422,     -1.1562,     -0.8047,     -1.0859,     -1.0234],
        [    -0.0005,     -3.2031,     -1.3125,     -1.1328,     -2.6406,     -1.7578,     -1.7266,     -2.0625],
        [    -0.0003,     -5.3125,     -3.1250,     -2.9531,     -3.5938,     -3.5781,     -3.2188,     -3.7812],
        [    -0.0025,     -2.2812,     -0.9258,     -0.8047,     -1.6562,     -0.7188,     -1.4844,     -1.3906],
        [    -0.0009,     -3.9219,     -1.8984,     -1.7266,     -2.7812,     -2.0625,     -2.2500,     -2.5938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8599],
        [0.7327],
        [0.6605],
        [0.4234],
        [0.9756],
        [0.2413],
        [0.5383],
        [0.5222],
        [0.3708],
        [0.8054],
        [0.2493],
        [0.8099],
        [0.5292],
        [0.1800]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.8633, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0231, 0.2793, 0.6953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0071, 0.1523, 0.4512, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0052, 0.1387, 0.4453, 0.3418, 0.0713, 0.0000, 0.0000, 0.0000],
        [0.0215, 0.1523, 0.3574, 0.2949, 0.0869, 0.0859, 0.0000, 0.0000],
        [0.0052, 0.1226, 0.3848, 0.2988, 0.0659, 0.0581, 0.0654, 0.0000],
        [0.0052, 0.1147, 0.3438, 0.2715, 0.0630, 0.0520, 0.0625, 0.0859]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0337,      0.0481,      0.0449,      0.0254,      0.0249,      0.0255,      0.0292],
        [    -0.0066,      1.8359,      2.5312,      2.4062,      1.4531,      1.3438,      1.4922,      1.7031],
        [    -0.0067,      2.4844,      3.4062,      3.3125,      2.3906,      2.0938,      2.5000,      2.5781],
        [    -0.0085,      3.0469,      4.1250,      3.9844,      2.7969,      2.5156,      2.9062,      3.0469],
        [    -0.0110,      3.2656,      4.4375,      4.1875,      2.6094,      2.4844,      2.5938,      2.9531],
        [    -0.0081,      1.9531,      2.8125,      2.6094,      1.3906,      1.3750,      1.3828,      1.7266],
        [    -0.0106,      3.1406,      4.2812,      4.0312,      2.5156,      2.3906,      2.5156,      2.8438],
        [    -0.0104,      3.0781,      4.1875,      3.9375,      2.4844,      2.2812,      2.4688,      2.7812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4141],
        [0.1277],
        [0.0662],
        [0.0430],
        [0.5190],
        [0.0133],
        [0.0980],
        [0.1086],
        [0.0502],
        [0.2851],
        [0.0063],
        [0.2690],
        [0.0979],
        [0.0048]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( /*:0.0089 Miko:0.0099 Miko:0.0165ギ:0.0038 Miko:0.0096 Miko:0.0036 Miko:0.0112 Miko:0.0121)
 Miko
------
		( Miko:0.0099 Miko:0.0165ギ:0.0038 Miko:0.0096 Miko:0.0036 Miko:0.0112 Miko:0.0121 Miko:0.0133)
 Miko Miko Miko Miko Miko Miko Miko Miko Miko Miko Miko Miko Miko Miko Miko
@ 2050 train 4.0891 , allloss: 4.0891, dt: 1127.74ms, fracRes: 0.2764, norm(attn): 0.3848, norm(output): 0.7773, norm(x): 0.9063, norm(y): 0.9940, norm:0.4323, tok/sec: 116225.75, flops:101.80, batch-reuse:1
@ 2051 train 4.1555 , allloss: 4.1555, dt: 696.54ms, fracRes: 0.2775, norm(attn): 0.3887, norm(output): 0.7734, norm(x): 0.9058, norm(y): 0.9940, norm:0.4375, tok/sec: 188176.84, flops:164.82, batch-reuse:1
@ 2052 train 4.1460 , allloss: 4.1460, dt: 697.79ms, fracRes: 0.2849, norm(attn): 0.3828, norm(output): 0.7773, norm(x): 0.9114, norm(y): 0.9937, norm:0.3991, tok/sec: 187838.97, flops:164.52, batch-reuse:1
@ 2053 train 4.1711 , allloss: 4.1711, dt: 685.04ms, fracRes: 0.2833, norm(attn): 0.3789, norm(output): 0.7891, norm(x): 0.9104, norm(y): 0.9938, norm:0.4191, tok/sec: 191333.88, flops:167.58, batch-reuse:1
@ 2054 train 4.1308 , allloss: 4.1308, dt: 692.93ms, fracRes: 0.2814, norm(attn): 0.3828, norm(output): 0.7891, norm(x): 0.9125, norm(y): 0.9938, norm:0.4024, tok/sec: 189156.07, flops:165.67, batch-reuse:1
@ 2055 train 4.1519 , allloss: 4.1519, dt: 691.65ms, fracRes: 0.2732, norm(attn): 0.3828, norm(output): 0.7852, norm(x): 0.9077, norm(y): 0.9941, norm:0.3683, tok/sec: 189506.34, flops:165.98, batch-reuse:1
@ 2056 train 4.1397 , allloss: 4.1397, dt: 685.92ms, fracRes: 0.2726, norm(attn): 0.3828, norm(output): 0.7930, norm(x): 0.9072, norm(y): 0.9942, norm:0.4089, tok/sec: 191089.74, flops:167.37, batch-reuse:1
@ 2057 train 4.2638 , allloss: 4.2638, dt: 697.33ms, fracRes: 0.2744, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.9086, norm(y): 0.9942, norm:0.5029, tok/sec: 187961.89, flops:164.63, batch-reuse:1
@ 2058 train 4.0777 , allloss: 4.0777, dt: 700.88ms, fracRes: 0.2803, norm(attn): 0.3887, norm(output): 0.7969, norm(x): 0.9129, norm(y): 0.9941, norm:0.4830, tok/sec: 187011.11, flops:163.79, batch-reuse:1
@ 2059 train 4.1024 , allloss: 4.1024, dt: 693.26ms, fracRes: 0.2868, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.9195, norm(y): 0.9937, norm:0.3930, tok/sec: 189065.64, flops:165.59, batch-reuse:1
@ 2060 train 4.1536 , allloss: 4.1536, dt: 694.32ms, fracRes: 0.2831, norm(attn): 0.3789, norm(output): 0.7891, norm(x): 0.9178, norm(y): 0.9941, norm:0.4047, tok/sec: 188777.26, flops:165.34, batch-reuse:1
@ 2061 train 4.1362 , allloss: 4.1362, dt: 682.94ms, fracRes: 0.2767, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9135, norm(y): 0.9942, norm:0.4582, tok/sec: 191922.15, flops:168.10, batch-reuse:1
@ 2062 train 4.0914 , allloss: 4.0914, dt: 696.74ms, fracRes: 0.2756, norm(attn): 0.3828, norm(output): 0.7812, norm(x): 0.9046, norm(y): 0.9941, norm:0.4479, tok/sec: 188121.33, flops:164.77, batch-reuse:1
@ 2063 train 4.2350 , allloss: 4.2350, dt: 698.73ms, fracRes: 0.2709, norm(attn): 0.3867, norm(output): 0.7852, norm(x): 0.9049, norm(y): 0.9944, norm:0.4076, tok/sec: 187584.90, flops:164.30, batch-reuse:1
@ 2064 train 4.1396 , allloss: 4.1396, dt: 696.15ms, fracRes: 0.2774, norm(attn): 0.3809, norm(output): 0.7812, norm(x): 0.9047, norm(y): 0.9942, norm:0.3793, tok/sec: 188282.34, flops:164.91, batch-reuse:1
@ 2065 train 5.0080 , allloss: 5.0080, dt: 699.12ms, fracRes: 0.2815, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.9182, norm(y): 0.9955, norm:0.7335, tok/sec: 187480.88, flops:164.21, batch-reuse:1
@ 2066 train 4.2638 , allloss: 4.2638, dt: 696.17ms, fracRes: 0.2839, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9233, norm(y): 0.9946, norm:0.8698, tok/sec: 188276.54, flops:164.90, batch-reuse:1
@ 2067 train 4.1289 , allloss: 4.1289, dt: 689.78ms, fracRes: 0.2872, norm(attn): 0.3789, norm(output): 0.8008, norm(x): 0.9196, norm(y): 0.9937, norm:0.5594, tok/sec: 190020.01, flops:166.43, batch-reuse:1
@ 2068 train 4.2074 , allloss: 4.2074, dt: 696.88ms, fracRes: 0.2834, norm(attn): 0.3809, norm(output): 0.7969, norm(x): 0.9207, norm(y): 0.9938, norm:0.4945, tok/sec: 188082.85, flops:164.73, batch-reuse:1
@ 2069 train 4.1694 , allloss: 4.1694, dt: 686.67ms, fracRes: 0.2788, norm(attn): 0.3906, norm(output): 0.8047, norm(x): 0.9312, norm(y): 0.9942, norm:0.5746, tok/sec: 190879.42, flops:167.18, batch-reuse:1
@ 2070 train 4.2257 , allloss: 4.2257, dt: 694.57ms, fracRes: 0.2768, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9289, norm(y): 0.9941, norm:0.5102, tok/sec: 188710.52, flops:165.28, batch-reuse:1
@ 2071 train 4.1958 , allloss: 4.1958, dt: 696.80ms, fracRes: 0.2791, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9267, norm(y): 0.9940, norm:0.4476, tok/sec: 188104.34, flops:164.75, batch-reuse:1
@ 2072 train 4.1706 , allloss: 4.1706, dt: 696.27ms, fracRes: 0.2837, norm(attn): 0.3926, norm(output): 0.8047, norm(x): 0.9249, norm(y): 0.9940, norm:0.4280, tok/sec: 188248.49, flops:164.88, batch-reuse:1
@ 2073 train 4.1523 , allloss: 4.1523, dt: 683.36ms, fracRes: 0.2887, norm(attn): 0.3887, norm(output): 0.8047, norm(x): 0.9256, norm(y): 0.9938, norm:0.4067, tok/sec: 191805.57, flops:167.99, batch-reuse:1
@ 2074 train 4.1739 , allloss: 4.1739, dt: 698.24ms, fracRes: 0.2847, norm(attn): 0.3906, norm(output): 0.8008, norm(x): 0.9208, norm(y): 0.9940, norm:0.4351, tok/sec: 187716.97, flops:164.41, batch-reuse:1
@ 2075 train 4.1214 , allloss: 4.1214, dt: 713.09ms, fracRes: 0.2818, norm(attn): 0.3984, norm(output): 0.8008, norm(x): 0.9183, norm(y): 0.9943, norm:0.4542, tok/sec: 183807.22, flops:160.99, batch-reuse:1
@ 2076 train 4.0749 , allloss: 4.0749, dt: 719.30ms, fracRes: 0.2866, norm(attn): 0.3887, norm(output): 0.7969, norm(x): 0.9198, norm(y): 0.9939, norm:0.4116, tok/sec: 182221.66, flops:159.60, batch-reuse:1
@ 2077 train 4.1843 , allloss: 4.1843, dt: 714.51ms, fracRes: 0.2895, norm(attn): 0.3906, norm(output): 0.7969, norm(x): 0.9231, norm(y): 0.9939, norm:0.4133, tok/sec: 183443.27, flops:160.67, batch-reuse:1
@ 2078 train 4.4627 , allloss: 4.4627, dt: 713.01ms, fracRes: 0.2849, norm(attn): 0.3945, norm(output): 0.8047, norm(x): 0.9299, norm(y): 0.9942, norm:0.5888, tok/sec: 183829.04, flops:161.01, batch-reuse:1
@ 2079 train 4.2386 , allloss: 4.2386, dt: 716.91ms, fracRes: 0.2869, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9356, norm(y): 0.9941, norm:0.5743, tok/sec: 182828.93, flops:160.13, batch-reuse:1
@ 2080 train 4.1411 , allloss: 4.1411, dt: 714.14ms, fracRes: 0.2878, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9282, norm(y): 0.9938, norm:0.4490, tok/sec: 183537.46, flops:160.75, batch-reuse:1
@ 2081 train 4.2115 , allloss: 4.2115, dt: 718.85ms, fracRes: 0.2834, norm(attn): 0.3848, norm(output): 0.8086, norm(x): 0.9233, norm(y): 0.9938, norm:0.4371, tok/sec: 182335.94, flops:159.70, batch-reuse:1
@ 2082 train 4.1675 , allloss: 4.1675, dt: 718.88ms, fracRes: 0.2819, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9171, norm(y): 0.9939, norm:0.3922, tok/sec: 182328.32, flops:159.69, batch-reuse:1
@ 2083 train 4.0511 , allloss: 4.0511, dt: 708.20ms, fracRes: 0.2745, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9167, norm(y): 0.9944, norm:0.4200, tok/sec: 185078.29, flops:162.10, batch-reuse:1
@ 2084 train 4.3328 , allloss: 4.3328, dt: 694.86ms, fracRes: 0.2744, norm(attn): 0.3848, norm(output): 0.8008, norm(x): 0.9180, norm(y): 0.9949, norm:0.5182, tok/sec: 188631.97, flops:165.21, batch-reuse:1
@ 2085 train 4.1477 , allloss: 4.1477, dt: 687.45ms, fracRes: 0.2851, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9249, norm(y): 0.9940, norm:0.5150, tok/sec: 190664.07, flops:166.99, batch-reuse:1
@ 2086 train 4.0523 , allloss: 4.0523, dt: 698.99ms, fracRes: 0.2919, norm(attn): 0.3828, norm(output): 0.8008, norm(x): 0.9281, norm(y): 0.9936, norm:0.4371, tok/sec: 187517.59, flops:164.24, batch-reuse:1
@ 2087 train 4.0733 , allloss: 4.0733, dt: 696.75ms, fracRes: 0.2869, norm(attn): 0.3848, norm(output): 0.7969, norm(x): 0.9213, norm(y): 0.9937, norm:0.4967, tok/sec: 188120.30, flops:164.77, batch-reuse:1
@ 2088 train 4.2031 , allloss: 4.2031, dt: 697.40ms, fracRes: 0.2848, norm(attn): 0.3926, norm(output): 0.7930, norm(x): 0.9207, norm(y): 0.9938, norm:0.4609, tok/sec: 187944.73, flops:164.61, batch-reuse:1
@ 2089 train 4.1411 , allloss: 4.1411, dt: 684.54ms, fracRes: 0.2879, norm(attn): 0.3906, norm(output): 0.8047, norm(x): 0.9288, norm(y): 0.9939, norm:0.4209, tok/sec: 191475.76, flops:167.71, batch-reuse:1
@ 2090 train 4.1262 , allloss: 4.1262, dt: 684.50ms, fracRes: 0.2869, norm(attn): 0.3906, norm(output): 0.8047, norm(x): 0.9283, norm(y): 0.9940, norm:0.4451, tok/sec: 191485.90, flops:167.71, batch-reuse:1
@ 2091 train 4.1428 , allloss: 4.1428, dt: 693.97ms, fracRes: 0.2818, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9266, norm(y): 0.9942, norm:0.3896, tok/sec: 188872.66, flops:165.43, batch-reuse:1
@ 2092 train 4.1163 , allloss: 4.1163, dt: 690.27ms, fracRes: 0.2788, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9282, norm(y): 0.9944, norm:0.4178, tok/sec: 189886.31, flops:166.31, batch-reuse:1
@ 2093 train 4.1485 , allloss: 4.1485, dt: 688.24ms, fracRes: 0.2842, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9253, norm(y): 0.9945, norm:0.3982, tok/sec: 190446.56, flops:166.80, batch-reuse:1
@ 2094 train 4.1213 , allloss: 4.1213, dt: 694.94ms, fracRes: 0.2865, norm(attn): 0.3945, norm(output): 0.8008, norm(x): 0.9275, norm(y): 0.9944, norm:0.4152, tok/sec: 188608.48, flops:165.19, batch-reuse:1
@ 2095 train 4.0398 , allloss: 4.0398, dt: 697.45ms, fracRes: 0.2915, norm(attn): 0.3867, norm(output): 0.8008, norm(x): 0.9284, norm(y): 0.9940, norm:0.3607, tok/sec: 187930.21, flops:164.60, batch-reuse:1
@ 2096 train 4.2209 , allloss: 4.2209, dt: 695.85ms, fracRes: 0.2904, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9301, norm(y): 0.9940, norm:0.3838, tok/sec: 188361.17, flops:164.98, batch-reuse:1
@ 2097 train 4.1524 , allloss: 4.1524, dt: 709.54ms, fracRes: 0.2897, norm(attn): 0.3887, norm(output): 0.8047, norm(x): 0.9288, norm(y): 0.9939, norm:0.3856, tok/sec: 184728.10, flops:161.80, batch-reuse:1
@ 2098 train 4.0347 , allloss: 4.0347, dt: 709.26ms, fracRes: 0.2875, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9280, norm(y): 0.9940, norm:0.3823, tok/sec: 184801.75, flops:161.86, batch-reuse:1
@ 2099 train 4.1375 , allloss: 4.1375, dt: 706.43ms, fracRes: 0.2876, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9296, norm(y): 0.9941, norm:0.3806, tok/sec: 185542.65, flops:162.51, batch-reuse:1
@ 2100 train 4.1064 , allloss: 4.1064, dt: 687.46ms, fracRes: 0.2857, norm(attn): 0.3906, norm(output): 0.8047, norm(x): 0.9271, norm(y): 0.9941, norm:0.3603, tok/sec: 190660.96, flops:166.99, batch-reuse:1
@ 2101 train 4.1223 , allloss: 4.1223, dt: 698.24ms, fracRes: 0.2899, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9243, norm(y): 0.9938, norm:0.3316, tok/sec: 187716.85, flops:164.41, batch-reuse:1
@ 2102 train 4.0680 , allloss: 4.0680, dt: 700.18ms, fracRes: 0.2899, norm(attn): 0.3887, norm(output): 0.7930, norm(x): 0.9231, norm(y): 0.9939, norm:0.4026, tok/sec: 187197.50, flops:163.96, batch-reuse:1
@ 2103 train 4.1131 , allloss: 4.1131, dt: 686.71ms, fracRes: 0.2923, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9255, norm(y): 0.9940, norm:0.3621, tok/sec: 190869.94, flops:167.17, batch-reuse:1
@ 2104 train 4.1035 , allloss: 4.1035, dt: 693.50ms, fracRes: 0.2898, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9240, norm(y): 0.9940, norm:0.3662, tok/sec: 189000.71, flops:165.54, batch-reuse:1
@ 2105 train 4.0335 , allloss: 4.0335, dt: 696.41ms, fracRes: 0.2855, norm(attn): 0.3887, norm(output): 0.7969, norm(x): 0.9224, norm(y): 0.9942, norm:0.4377, tok/sec: 188211.43, flops:164.85, batch-reuse:1
@ 2106 train 4.0856 , allloss: 4.0856, dt: 700.47ms, fracRes: 0.2869, norm(attn): 0.3906, norm(output): 0.7969, norm(x): 0.9183, norm(y): 0.9939, norm:0.3800, tok/sec: 187118.94, flops:163.89, batch-reuse:1
@ 2107 train 4.1361 , allloss: 4.1361, dt: 702.27ms, fracRes: 0.2826, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9160, norm(y): 0.9942, norm:0.4252, tok/sec: 186641.79, flops:163.47, batch-reuse:1
@ 2108 train 4.2505 , allloss: 4.2505, dt: 706.06ms, fracRes: 0.2822, norm(attn): 0.3887, norm(output): 0.7969, norm(x): 0.9215, norm(y): 0.9945, norm:0.4662, tok/sec: 185638.63, flops:162.59, batch-reuse:1
@ 2109 train 4.0745 , allloss: 4.0745, dt: 703.40ms, fracRes: 0.2853, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9251, norm(y): 0.9943, norm:0.4776, tok/sec: 186339.40, flops:163.21, batch-reuse:1
@ 2110 train 4.0800 , allloss: 4.0800, dt: 701.98ms, fracRes: 0.2857, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9231, norm(y): 0.9942, norm:0.4290, tok/sec: 186717.54, flops:163.54, batch-reuse:1
@ 2111 train 4.0729 , allloss: 4.0729, dt: 686.29ms, fracRes: 0.2894, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9211, norm(y): 0.9937, norm:0.3947, tok/sec: 190985.51, flops:167.28, batch-reuse:1
@ 2112 train 4.1159 , allloss: 4.1159, dt: 690.30ms, fracRes: 0.2809, norm(attn): 0.3828, norm(output): 0.8008, norm(x): 0.9218, norm(y): 0.9944, norm:0.3729, tok/sec: 189876.61, flops:166.30, batch-reuse:1
@ 2113 train 4.0794 , allloss: 4.0794, dt: 688.52ms, fracRes: 0.2821, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9259, norm(y): 0.9943, norm:0.5319, tok/sec: 190367.82, flops:166.73, batch-reuse:1
@ 2114 train 4.1190 , allloss: 4.1190, dt: 685.80ms, fracRes: 0.2884, norm(attn): 0.3867, norm(output): 0.8008, norm(x): 0.9260, norm(y): 0.9939, norm:0.4218, tok/sec: 191123.62, flops:167.40, batch-reuse:1
@ 2115 train 4.1319 , allloss: 4.1319, dt: 690.79ms, fracRes: 0.2899, norm(attn): 0.3945, norm(output): 0.7969, norm(x): 0.9288, norm(y): 0.9941, norm:0.3963, tok/sec: 189741.61, flops:166.19, batch-reuse:1
@ 2116 train 4.1578 , allloss: 4.1578, dt: 689.09ms, fracRes: 0.2833, norm(attn): 0.3984, norm(output): 0.8047, norm(x): 0.9237, norm(y): 0.9945, norm:0.4016, tok/sec: 190210.73, flops:166.60, batch-reuse:1
@ 2117 train 4.0722 , allloss: 4.0722, dt: 706.58ms, fracRes: 0.2865, norm(attn): 0.3945, norm(output): 0.7969, norm(x): 0.9249, norm(y): 0.9942, norm:0.3963, tok/sec: 185501.95, flops:162.47, batch-reuse:1
@ 2118 train 4.0208 , allloss: 4.0208, dt: 704.90ms, fracRes: 0.2904, norm(attn): 0.3906, norm(output): 0.7930, norm(x): 0.9229, norm(y): 0.9939, norm:0.3777, tok/sec: 185944.10, flops:162.86, batch-reuse:1
@ 2119 train 4.1782 , allloss: 4.1782, dt: 706.39ms, fracRes: 0.2922, norm(attn): 0.3926, norm(output): 0.7930, norm(x): 0.9236, norm(y): 0.9939, norm:0.3525, tok/sec: 185551.04, flops:162.52, batch-reuse:1
@ 2120 train 4.1012 , allloss: 4.1012, dt: 704.86ms, fracRes: 0.2884, norm(attn): 0.4023, norm(output): 0.8008, norm(x): 0.9239, norm(y): 0.9942, norm:0.3798, tok/sec: 185954.73, flops:162.87, batch-reuse:1
@ 2121 train 4.0568 , allloss: 4.0568, dt: 705.13ms, fracRes: 0.2819, norm(attn): 0.4043, norm(output): 0.8008, norm(x): 0.9227, norm(y): 0.9945, norm:0.4357, tok/sec: 185884.12, flops:162.81, batch-reuse:1
@ 2122 train 4.0769 , allloss: 4.0769, dt: 706.63ms, fracRes: 0.2825, norm(attn): 0.3984, norm(output): 0.8008, norm(x): 0.9219, norm(y): 0.9943, norm:0.3951, tok/sec: 185489.37, flops:162.46, batch-reuse:1
@ 2123 train 4.1376 , allloss: 4.1376, dt: 705.93ms, fracRes: 0.2862, norm(attn): 0.3945, norm(output): 0.7969, norm(x): 0.9210, norm(y): 0.9941, norm:0.3778, tok/sec: 185672.61, flops:162.62, batch-reuse:1
@ 2124 train 4.0437 , allloss: 4.0437, dt: 689.59ms, fracRes: 0.2826, norm(attn): 0.3965, norm(output): 0.8008, norm(x): 0.9218, norm(y): 0.9943, norm:0.3797, tok/sec: 190071.58, flops:166.48, batch-reuse:1
@ 2125 train 4.1502 , allloss: 4.1502, dt: 694.87ms, fracRes: 0.2904, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9297, norm(y): 0.9940, norm:0.4024, tok/sec: 188627.31, flops:165.21, batch-reuse:1
@ 2126 train 4.1197 , allloss: 4.1197, dt: 696.83ms, fracRes: 0.2888, norm(attn): 0.3887, norm(output): 0.8086, norm(x): 0.9304, norm(y): 0.9940, norm:0.4225, tok/sec: 188097.65, flops:164.75, batch-reuse:1
@ 2127 train 4.1541 , allloss: 4.1541, dt: 689.94ms, fracRes: 0.2886, norm(attn): 0.3828, norm(output): 0.8047, norm(x): 0.9304, norm(y): 0.9939, norm:0.4087, tok/sec: 189975.22, flops:166.39, batch-reuse:1
@ 2128 train 4.0116 , allloss: 4.0116, dt: 707.04ms, fracRes: 0.2900, norm(attn): 0.3848, norm(output): 0.8008, norm(x): 0.9233, norm(y): 0.9940, norm:0.3849, tok/sec: 185381.73, flops:162.37, batch-reuse:1
@ 2129 train 4.1414 , allloss: 4.1414, dt: 708.69ms, fracRes: 0.2934, norm(attn): 0.3906, norm(output): 0.8008, norm(x): 0.9250, norm(y): 0.9942, norm:0.4541, tok/sec: 184949.71, flops:161.99, batch-reuse:1
@ 2130 train 4.0114 , allloss: 4.0114, dt: 708.77ms, fracRes: 0.2946, norm(attn): 0.3867, norm(output): 0.8008, norm(x): 0.9283, norm(y): 0.9939, norm:0.4350, tok/sec: 184928.38, flops:161.97, batch-reuse:1
@ 2131 train 4.1064 , allloss: 4.1064, dt: 710.35ms, fracRes: 0.2867, norm(attn): 0.3887, norm(output): 0.8008, norm(x): 0.9252, norm(y): 0.9944, norm:0.3806, tok/sec: 184517.17, flops:161.61, batch-reuse:1
@ 2132 train 4.1003 , allloss: 4.1003, dt: 701.02ms, fracRes: 0.2792, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9280, norm(y): 0.9948, norm:0.4470, tok/sec: 186972.76, flops:163.76, batch-reuse:1
@ 2133 train 4.0974 , allloss: 4.0974, dt: 710.24ms, fracRes: 0.2880, norm(attn): 0.3848, norm(output): 0.7969, norm(x): 0.9268, norm(y): 0.9943, norm:0.4000, tok/sec: 184546.90, flops:161.64, batch-reuse:1
@ 2134 train 4.0592 , allloss: 4.0592, dt: 704.95ms, fracRes: 0.2939, norm(attn): 0.3809, norm(output): 0.8008, norm(x): 0.9271, norm(y): 0.9939, norm:0.3969, tok/sec: 185932.02, flops:162.85, batch-reuse:1
@ 2135 train 4.1604 , allloss: 4.1604, dt: 708.41ms, fracRes: 0.2980, norm(attn): 0.3809, norm(output): 0.8008, norm(x): 0.9276, norm(y): 0.9935, norm:0.4073, tok/sec: 185022.04, flops:162.05, batch-reuse:1
@ 2136 train 4.0508 , allloss: 4.0508, dt: 705.14ms, fracRes: 0.2951, norm(attn): 0.3828, norm(output): 0.7930, norm(x): 0.9224, norm(y): 0.9935, norm:0.3811, tok/sec: 185879.97, flops:162.80, batch-reuse:1
@ 2137 train 4.0215 , allloss: 4.0215, dt: 681.09ms, fracRes: 0.2890, norm(attn): 0.3945, norm(output): 0.7930, norm(x): 0.9162, norm(y): 0.9939, norm:0.4208, tok/sec: 192443.29, flops:168.55, batch-reuse:1
@ 2138 train 4.0657 , allloss: 4.0657, dt: 687.24ms, fracRes: 0.2879, norm(attn): 0.3906, norm(output): 0.7930, norm(x): 0.9136, norm(y): 0.9940, norm:0.4729, tok/sec: 190722.74, flops:167.05, batch-reuse:1
@ 2139 train 4.0665 , allloss: 4.0665, dt: 708.34ms, fracRes: 0.2865, norm(attn): 0.3867, norm(output): 0.7930, norm(x): 0.9191, norm(y): 0.9940, norm:0.4021, tok/sec: 185041.54, flops:162.07, batch-reuse:1
@ 2140 train 4.0887 , allloss: 4.0887, dt: 704.31ms, fracRes: 0.2861, norm(attn): 0.3906, norm(output): 0.7969, norm(x): 0.9205, norm(y): 0.9941, norm:0.4080, tok/sec: 186100.52, flops:163.00, batch-reuse:1
@ 2141 train 3.9890 , allloss: 3.9890, dt: 707.56ms, fracRes: 0.2842, norm(attn): 0.3945, norm(output): 0.7930, norm(x): 0.9189, norm(y): 0.9941, norm:0.3988, tok/sec: 185244.18, flops:162.25, batch-reuse:1
@ 2142 train 4.0175 , allloss: 4.0175, dt: 708.29ms, fracRes: 0.2850, norm(attn): 0.3945, norm(output): 0.7969, norm(x): 0.9197, norm(y): 0.9940, norm:0.3888, tok/sec: 185053.50, flops:162.08, batch-reuse:1
@ 2143 train 4.0813 , allloss: 4.0813, dt: 702.91ms, fracRes: 0.2829, norm(attn): 0.3984, norm(output): 0.8047, norm(x): 0.9240, norm(y): 0.9941, norm:0.3657, tok/sec: 186471.75, flops:163.32, batch-reuse:1
@ 2144 train 4.0612 , allloss: 4.0612, dt: 694.68ms, fracRes: 0.2896, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9311, norm(y): 0.9941, norm:0.4088, tok/sec: 188679.82, flops:165.26, batch-reuse:1
@ 2145 train 3.9981 , allloss: 3.9981, dt: 706.67ms, fracRes: 0.2938, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9333, norm(y): 0.9941, norm:0.4065, tok/sec: 185477.61, flops:162.45, batch-reuse:1
@ 2146 train 4.2935 , allloss: 4.2935, dt: 688.10ms, fracRes: 0.2898, norm(attn): 0.4023, norm(output): 0.8086, norm(x): 0.9337, norm(y): 0.9946, norm:0.5123, tok/sec: 190484.57, flops:166.84, batch-reuse:1
@ 2147 train 4.0285 , allloss: 4.0285, dt: 686.65ms, fracRes: 0.2929, norm(attn): 0.3945, norm(output): 0.7969, norm(x): 0.9268, norm(y): 0.9939, norm:0.4522, tok/sec: 190885.71, flops:167.19, batch-reuse:1
@ 2148 train 4.0609 , allloss: 4.0609, dt: 676.39ms, fracRes: 0.2909, norm(attn): 0.3848, norm(output): 0.7969, norm(x): 0.9245, norm(y): 0.9937, norm:0.3885, tok/sec: 193780.28, flops:169.72, batch-reuse:1
@ 2149 train 4.0668 , allloss: 4.0668, dt: 691.80ms, fracRes: 0.2863, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9243, norm(y): 0.9939, norm:0.3867, tok/sec: 189465.59, flops:165.94, batch-reuse:1
@ 2150 train 4.0602 , allloss: 4.0602, dt: 691.57ms, fracRes: 0.2842, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9238, norm(y): 0.9940, norm:0.4444, tok/sec: 189528.95, flops:166.00, batch-reuse:1
@ 2151 train 4.0305 , allloss: 4.0305, dt: 694.77ms, fracRes: 0.2855, norm(attn): 0.3887, norm(output): 0.7969, norm(x): 0.9223, norm(y): 0.9940, norm:0.3831, tok/sec: 188655.73, flops:165.24, batch-reuse:1
@ 2152 train 4.1363 , allloss: 4.1363, dt: 694.78ms, fracRes: 0.2898, norm(attn): 0.3828, norm(output): 0.7852, norm(x): 0.9197, norm(y): 0.9939, norm:0.4038, tok/sec: 188652.36, flops:165.23, batch-reuse:1
@ 2153 train 4.0449 , allloss: 4.0449, dt: 694.21ms, fracRes: 0.2889, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9201, norm(y): 0.9942, norm:0.4239, tok/sec: 188808.70, flops:165.37, batch-reuse:1
@ 2154 train 4.1212 , allloss: 4.1212, dt: 699.24ms, fracRes: 0.2900, norm(attn): 0.3809, norm(output): 0.7969, norm(x): 0.9261, norm(y): 0.9943, norm:0.4000, tok/sec: 187449.75, flops:164.18, batch-reuse:1
@ 2155 train 4.0538 , allloss: 4.0538, dt: 686.81ms, fracRes: 0.2959, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9244, norm(y): 0.9936, norm:0.4007, tok/sec: 190842.18, flops:167.15, batch-reuse:1
@ 2156 train 4.0676 , allloss: 4.0676, dt: 691.46ms, fracRes: 0.2939, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9233, norm(y): 0.9939, norm:0.4255, tok/sec: 189557.70, flops:166.03, batch-reuse:1
@ 2157 train 4.0773 , allloss: 4.0773, dt: 692.51ms, fracRes: 0.2873, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9284, norm(y): 0.9943, norm:0.4322, tok/sec: 189271.59, flops:165.77, batch-reuse:1
@ 2158 train 4.0769 , allloss: 4.0769, dt: 691.26ms, fracRes: 0.2828, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9181, norm(y): 0.9942, norm:0.4072, tok/sec: 189614.25, flops:166.07, batch-reuse:1
@ 2159 train 4.0323 , allloss: 4.0323, dt: 695.49ms, fracRes: 0.2849, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9164, norm(y): 0.9941, norm:0.4128, tok/sec: 188458.61, flops:165.06, batch-reuse:1
@ 2160 train 3.9937 , allloss: 3.9937, dt: 703.25ms, fracRes: 0.2844, norm(attn): 0.3848, norm(output): 0.8047, norm(x): 0.9258, norm(y): 0.9943, norm:0.4098, tok/sec: 186381.22, flops:163.24, batch-reuse:1
@ 2161 train 3.9872 , allloss: 3.9872, dt: 711.84ms, fracRes: 0.2870, norm(attn): 0.3965, norm(output): 0.8047, norm(x): 0.9263, norm(y): 0.9941, norm:0.5097, tok/sec: 184131.35, flops:161.27, batch-reuse:1
@ 2162 train 3.9896 , allloss: 3.9896, dt: 712.57ms, fracRes: 0.2900, norm(attn): 0.3965, norm(output): 0.8008, norm(x): 0.9254, norm(y): 0.9941, norm:0.4286, tok/sec: 183943.38, flops:161.11, batch-reuse:1
@ 2163 train 4.0873 , allloss: 4.0873, dt: 698.79ms, fracRes: 0.2927, norm(attn): 0.3906, norm(output): 0.8008, norm(x): 0.9277, norm(y): 0.9940, norm:0.3840, tok/sec: 187570.24, flops:164.28, batch-reuse:1
@ 2164 train 3.9634 , allloss: 3.9634, dt: 683.47ms, fracRes: 0.2974, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9264, norm(y): 0.9934, norm:0.4185, tok/sec: 191775.46, flops:167.97, batch-reuse:1
@ 2165 train 3.9818 , allloss: 3.9818, dt: 695.29ms, fracRes: 0.3000, norm(attn): 0.3809, norm(output): 0.7930, norm(x): 0.9226, norm(y): 0.9935, norm:0.3761, tok/sec: 188514.70, flops:165.11, batch-reuse:1
@ 2166 train 4.0135 , allloss: 4.0135, dt: 696.80ms, fracRes: 0.2952, norm(attn): 0.3887, norm(output): 0.7969, norm(x): 0.9239, norm(y): 0.9939, norm:0.3787, tok/sec: 188104.34, flops:164.75, batch-reuse:1
@ 2167 train 4.0471 , allloss: 4.0471, dt: 693.64ms, fracRes: 0.2930, norm(attn): 0.3848, norm(output): 0.8008, norm(x): 0.9292, norm(y): 0.9941, norm:0.3922, tok/sec: 188962.84, flops:165.50, batch-reuse:1
@ 2168 train 4.0876 , allloss: 4.0876, dt: 694.16ms, fracRes: 0.2975, norm(attn): 0.3828, norm(output): 0.8008, norm(x): 0.9320, norm(y): 0.9939, norm:0.3667, tok/sec: 188820.25, flops:165.38, batch-reuse:1
@ 2169 train 4.0776 , allloss: 4.0776, dt: 696.01ms, fracRes: 0.2965, norm(attn): 0.3906, norm(output): 0.8047, norm(x): 0.9325, norm(y): 0.9941, norm:0.3509, tok/sec: 188320.39, flops:164.94, batch-reuse:1
@ 2170 train 4.0924 , allloss: 4.0924, dt: 692.14ms, fracRes: 0.3006, norm(attn): 0.3945, norm(output): 0.8008, norm(x): 0.9333, norm(y): 0.9939, norm:0.3809, tok/sec: 189371.54, flops:165.86, batch-reuse:1
@ 2171 train 4.0869 , allloss: 4.0869, dt: 696.51ms, fracRes: 0.2995, norm(attn): 0.3945, norm(output): 0.8008, norm(x): 0.9319, norm(y): 0.9941, norm:0.3578, tok/sec: 188184.76, flops:164.82, batch-reuse:1
@ 2172 train 4.1366 , allloss: 4.1366, dt: 693.74ms, fracRes: 0.2906, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9312, norm(y): 0.9944, norm:0.3426, tok/sec: 188934.65, flops:165.48, batch-reuse:1
@ 2173 train 4.0299 , allloss: 4.0299, dt: 690.39ms, fracRes: 0.2870, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9326, norm(y): 0.9944, norm:0.3632, tok/sec: 189852.41, flops:166.28, batch-reuse:1
@ 2174 train 4.0583 , allloss: 4.0583, dt: 683.70ms, fracRes: 0.2839, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9310, norm(y): 0.9944, norm:0.3778, tok/sec: 191709.59, flops:167.91, batch-reuse:1
@ 2175 train 4.0189 , allloss: 4.0189, dt: 684.83ms, fracRes: 0.2870, norm(attn): 0.3945, norm(output): 0.8008, norm(x): 0.9294, norm(y): 0.9941, norm:0.3520, tok/sec: 191393.70, flops:167.63, batch-reuse:1
@ 2176 train 4.0470 , allloss: 4.0470, dt: 697.15ms, fracRes: 0.2922, norm(attn): 0.3906, norm(output): 0.8008, norm(x): 0.9286, norm(y): 0.9940, norm:0.3714, tok/sec: 188010.68, flops:164.67, batch-reuse:1
@ 2177 train 4.0646 , allloss: 4.0646, dt: 689.40ms, fracRes: 0.2930, norm(attn): 0.3887, norm(output): 0.8008, norm(x): 0.9297, norm(y): 0.9941, norm:0.3514, tok/sec: 190124.82, flops:166.52, batch-reuse:1
@ 2178 train 4.0710 , allloss: 4.0710, dt: 687.99ms, fracRes: 0.2918, norm(attn): 0.3848, norm(output): 0.8047, norm(x): 0.9297, norm(y): 0.9940, norm:0.3765, tok/sec: 190513.29, flops:166.86, batch-reuse:1
@ 2179 train 4.0542 , allloss: 4.0542, dt: 699.26ms, fracRes: 0.2903, norm(attn): 0.3828, norm(output): 0.8008, norm(x): 0.9286, norm(y): 0.9940, norm:0.4066, tok/sec: 187443.55, flops:164.17, batch-reuse:1
@ 2180 train 3.9924 , allloss: 3.9924, dt: 696.30ms, fracRes: 0.2902, norm(attn): 0.3848, norm(output): 0.7969, norm(x): 0.9234, norm(y): 0.9939, norm:0.3733, tok/sec: 188239.53, flops:164.87, batch-reuse:1
@ 2181 train 3.9845 , allloss: 3.9845, dt: 692.90ms, fracRes: 0.2898, norm(attn): 0.3906, norm(output): 0.8008, norm(x): 0.9257, norm(y): 0.9941, norm:0.3893, tok/sec: 189164.01, flops:165.68, batch-reuse:1
@ 2182 train 4.0145 , allloss: 4.0145, dt: 703.78ms, fracRes: 0.2919, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9336, norm(y): 0.9940, norm:0.4262, tok/sec: 186240.86, flops:163.12, batch-reuse:1
@ 2183 train 3.8773 , allloss: 3.8773, dt: 695.48ms, fracRes: 0.2865, norm(attn): 0.3926, norm(output): 0.8047, norm(x): 0.9289, norm(y): 0.9940, norm:0.3749, tok/sec: 188462.16, flops:165.07, batch-reuse:1
@ 2184 train 3.7889 , allloss: 3.7889, dt: 706.53ms, fracRes: 0.2851, norm(attn): 0.3906, norm(output): 0.8008, norm(x): 0.9207, norm(y): 0.9939, norm:0.4197, tok/sec: 185514.79, flops:162.48, batch-reuse:1
@ 2185 train 3.9936 , allloss: 3.9936, dt: 705.62ms, fracRes: 0.2878, norm(attn): 0.3984, norm(output): 0.8008, norm(x): 0.9236, norm(y): 0.9941, norm:0.4108, tok/sec: 185755.17, flops:162.69, batch-reuse:1
@ 2186 train 3.9482 , allloss: 3.9482, dt: 699.07ms, fracRes: 0.2961, norm(attn): 0.3984, norm(output): 0.7969, norm(x): 0.9257, norm(y): 0.9939, norm:0.4087, tok/sec: 187495.52, flops:164.22, batch-reuse:1
@ 2187 train 3.9195 , allloss: 3.9195, dt: 683.06ms, fracRes: 0.2946, norm(attn): 0.3965, norm(output): 0.8008, norm(x): 0.9271, norm(y): 0.9941, norm:0.3722, tok/sec: 191890.46, flops:168.07, batch-reuse:1
@ 2188 train 3.9420 , allloss: 3.9420, dt: 687.26ms, fracRes: 0.2970, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9252, norm(y): 0.9940, norm:0.3934, tok/sec: 190715.92, flops:167.04, batch-reuse:1
@ 2189 train 3.9609 , allloss: 3.9609, dt: 692.94ms, fracRes: 0.2936, norm(attn): 0.3945, norm(output): 0.7969, norm(x): 0.9252, norm(y): 0.9941, norm:0.3846, tok/sec: 189153.27, flops:165.67, batch-reuse:1
@ 2190 train 3.7958 , allloss: 3.7958, dt: 692.38ms, fracRes: 0.2909, norm(attn): 0.3926, norm(output): 0.8047, norm(x): 0.9276, norm(y): 0.9940, norm:0.5168, tok/sec: 189306.33, flops:165.81, batch-reuse:1
@ 2191 train 3.9456 , allloss: 3.9456, dt: 688.90ms, fracRes: 0.2917, norm(attn): 0.3848, norm(output): 0.7969, norm(x): 0.9261, norm(y): 0.9936, norm:0.3907, tok/sec: 190262.21, flops:166.64, batch-reuse:1
@ 2192 train 3.9199 , allloss: 3.9199, dt: 698.75ms, fracRes: 0.2921, norm(attn): 0.3887, norm(output): 0.8008, norm(x): 0.9279, norm(y): 0.9940, norm:0.3966, tok/sec: 187580.16, flops:164.29, batch-reuse:1
@ 2193 train 3.8848 , allloss: 3.8848, dt: 681.03ms, fracRes: 0.2927, norm(attn): 0.3906, norm(output): 0.8047, norm(x): 0.9299, norm(y): 0.9941, norm:0.4042, tok/sec: 192461.34, flops:168.57, batch-reuse:1
@ 2194 train 4.0470 , allloss: 4.0470, dt: 689.87ms, fracRes: 0.2939, norm(attn): 0.3828, norm(output): 0.7930, norm(x): 0.9226, norm(y): 0.9938, norm:0.3984, tok/sec: 189995.77, flops:166.41, batch-reuse:1
@ 2195 train 3.9675 , allloss: 3.9675, dt: 688.40ms, fracRes: 0.2907, norm(attn): 0.3906, norm(output): 0.7969, norm(x): 0.9229, norm(y): 0.9940, norm:0.4574, tok/sec: 190399.60, flops:166.76, batch-reuse:1
@ 2196 train 4.0417 , allloss: 4.0417, dt: 691.94ms, fracRes: 0.2918, norm(attn): 0.3848, norm(output): 0.8008, norm(x): 0.9285, norm(y): 0.9946, norm:0.4145, tok/sec: 189426.22, flops:165.91, batch-reuse:1
@ 2197 train 3.8833 , allloss: 3.8833, dt: 693.56ms, fracRes: 0.2941, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9312, norm(y): 0.9942, norm:0.4415, tok/sec: 188983.82, flops:165.52, batch-reuse:1
@ 2198 train 3.9356 , allloss: 3.9356, dt: 680.82ms, fracRes: 0.2972, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.9210, norm(y): 0.9933, norm:0.4122, tok/sec: 192521.19, flops:168.62, batch-reuse:1
@ 2199 train 4.0304 , allloss: 4.0304, dt: 687.89ms, fracRes: 0.2937, norm(attn): 0.3789, norm(output): 0.7930, norm(x): 0.9220, norm(y): 0.9940, norm:0.4387, tok/sec: 190542.87, flops:166.89, batch-reuse:1
@ 2200 train 3.9091 , allloss: 3.9091, dt: 693.81ms, fracRes: 0.2942, norm(attn): 0.3887, norm(output): 0.7969, norm(x): 0.9249, norm(y): 0.9939, norm:0.3991, tok/sec: 188915.82, flops:165.46, batch-reuse:1
@ 2201 train 3.9658 , allloss: 3.9658, dt: 688.17ms, fracRes: 0.3004, norm(attn): 0.3848, norm(output): 0.7969, norm(x): 0.9271, norm(y): 0.9937, norm:0.4444, tok/sec: 190464.71, flops:166.82, batch-reuse:1
@ 2202 train 3.9987 , allloss: 3.9987, dt: 693.04ms, fracRes: 0.2948, norm(attn): 0.3926, norm(output): 0.8047, norm(x): 0.9289, norm(y): 0.9941, norm:0.4461, tok/sec: 189125.87, flops:165.65, batch-reuse:1
@ 2203 train 3.9640 , allloss: 3.9640, dt: 696.58ms, fracRes: 0.2914, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9297, norm(y): 0.9941, norm:0.4383, tok/sec: 188163.70, flops:164.80, batch-reuse:1
@ 2204 train 4.0069 , allloss: 4.0069, dt: 697.24ms, fracRes: 0.2905, norm(attn): 0.3906, norm(output): 0.8047, norm(x): 0.9297, norm(y): 0.9942, norm:0.4059, tok/sec: 187985.60, flops:164.65, batch-reuse:1
@ 2205 train 3.9554 , allloss: 3.9554, dt: 697.98ms, fracRes: 0.2922, norm(attn): 0.3926, norm(output): 0.8008, norm(x): 0.9281, norm(y): 0.9938, norm:0.4298, tok/sec: 187787.19, flops:164.47, batch-reuse:1
@ 2206 train 3.9002 , allloss: 3.9002, dt: 699.71ms, fracRes: 0.2944, norm(attn): 0.3945, norm(output): 0.8047, norm(x): 0.9295, norm(y): 0.9939, norm:0.4468, tok/sec: 187323.16, flops:164.07, batch-reuse:1
@ 2207 train 3.9134 , allloss: 3.9134, dt: 697.10ms, fracRes: 0.2993, norm(attn): 0.3945, norm(output): 0.8047, norm(x): 0.9342, norm(y): 0.9939, norm:0.3726, tok/sec: 188025.53, flops:164.68, batch-reuse:1
@ 2208 train 3.9808 , allloss: 3.9808, dt: 698.10ms, fracRes: 0.3001, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9365, norm(y): 0.9939, norm:0.4090, tok/sec: 187756.53, flops:164.45, batch-reuse:1
@ 2209 train 3.8867 , allloss: 3.8867, dt: 693.13ms, fracRes: 0.3097, norm(attn): 0.3848, norm(output): 0.7969, norm(x): 0.9378, norm(y): 0.9931, norm:0.3683, tok/sec: 189100.83, flops:165.63, batch-reuse:1
@ 2210 train 3.8303 , allloss: 3.8303, dt: 693.27ms, fracRes: 0.3068, norm(attn): 0.3906, norm(output): 0.8047, norm(x): 0.9392, norm(y): 0.9934, norm:0.3774, tok/sec: 189064.08, flops:165.59, batch-reuse:1
@ 2211 train 3.9228 , allloss: 3.9228, dt: 681.36ms, fracRes: 0.3003, norm(attn): 0.3965, norm(output): 0.8047, norm(x): 0.9362, norm(y): 0.9938, norm:0.3597, tok/sec: 192368.27, flops:168.49, batch-reuse:1
@ 2212 train 3.8407 , allloss: 3.8407, dt: 678.58ms, fracRes: 0.2997, norm(attn): 0.3984, norm(output): 0.8008, norm(x): 0.9329, norm(y): 0.9938, norm:0.3656, tok/sec: 193155.67, flops:169.18, batch-reuse:1
@ 2213 train 4.2021 , allloss: 4.2021, dt: 689.63ms, fracRes: 0.2857, norm(attn): 0.4023, norm(output): 0.8125, norm(x): 0.9330, norm(y): 0.9944, norm:0.5500, tok/sec: 190062.45, flops:166.47, batch-reuse:1
@ 2214 train 4.0409 , allloss: 4.0409, dt: 685.57ms, fracRes: 0.2890, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9352, norm(y): 0.9941, norm:0.4028, tok/sec: 191186.70, flops:167.45, batch-reuse:1
@ 2215 train 3.9254 , allloss: 3.9254, dt: 695.00ms, fracRes: 0.2846, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9310, norm(y): 0.9943, norm:0.4131, tok/sec: 188593.15, flops:165.18, batch-reuse:1
@ 2216 train 3.9858 , allloss: 3.9858, dt: 696.66ms, fracRes: 0.2901, norm(attn): 0.3945, norm(output): 0.8008, norm(x): 0.9266, norm(y): 0.9942, norm:0.3928, tok/sec: 188142.39, flops:164.79, batch-reuse:1
@ 2217 train 3.9846 , allloss: 3.9846, dt: 685.41ms, fracRes: 0.3009, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.9288, norm(y): 0.9940, norm:0.3613, tok/sec: 191230.46, flops:167.49, batch-reuse:1
@ 2218 train 3.8869 , allloss: 3.8869, dt: 694.58ms, fracRes: 0.2997, norm(attn): 0.3828, norm(output): 0.7930, norm(x): 0.9272, norm(y): 0.9938, norm:0.3701, tok/sec: 188707.67, flops:165.28, batch-reuse:1
@ 2219 train 3.9761 , allloss: 3.9761, dt: 692.95ms, fracRes: 0.3000, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.9265, norm(y): 0.9937, norm:0.3682, tok/sec: 189150.01, flops:165.67, batch-reuse:1
@ 2220 train 4.0304 , allloss: 4.0304, dt: 687.87ms, fracRes: 0.2973, norm(attn): 0.3887, norm(output): 0.8047, norm(x): 0.9301, norm(y): 0.9940, norm:0.3934, tok/sec: 190548.09, flops:166.89, batch-reuse:1
@ 2221 train 3.8276 , allloss: 3.8276, dt: 702.05ms, fracRes: 0.2923, norm(attn): 0.3887, norm(output): 0.8047, norm(x): 0.9311, norm(y): 0.9943, norm:0.3784, tok/sec: 186697.63, flops:163.52, batch-reuse:1
@ 2222 train 3.9577 , allloss: 3.9577, dt: 691.48ms, fracRes: 0.2947, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9365, norm(y): 0.9945, norm:0.3655, tok/sec: 189553.98, flops:166.02, batch-reuse:1
@ 2223 train 3.9145 , allloss: 3.9145, dt: 703.02ms, fracRes: 0.3011, norm(attn): 0.3945, norm(output): 0.8008, norm(x): 0.9330, norm(y): 0.9937, norm:0.4101, tok/sec: 186442.02, flops:163.30, batch-reuse:1
@ 2224 train 3.9299 , allloss: 3.9299, dt: 696.56ms, fracRes: 0.3007, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9359, norm(y): 0.9939, norm:0.4704, tok/sec: 188171.36, flops:164.81, batch-reuse:1
@ 2225 train 4.0602 , allloss: 4.0602, dt: 686.60ms, fracRes: 0.3029, norm(attn): 0.3926, norm(output): 0.8008, norm(x): 0.9367, norm(y): 0.9939, norm:0.4816, tok/sec: 190899.37, flops:167.20, batch-reuse:1
@ 2226 train 4.0119 , allloss: 4.0119, dt: 693.56ms, fracRes: 0.2964, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9386, norm(y): 0.9942, norm:0.3921, tok/sec: 188984.73, flops:165.52, batch-reuse:1
@ 2227 train 3.9330 , allloss: 3.9330, dt: 694.85ms, fracRes: 0.2928, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9348, norm(y): 0.9942, norm:0.4047, tok/sec: 188633.07, flops:165.22, batch-reuse:1
@ 2228 train 3.9126 , allloss: 3.9126, dt: 697.90ms, fracRes: 0.2990, norm(attn): 0.3906, norm(output): 0.7969, norm(x): 0.9331, norm(y): 0.9936, norm:0.3883, tok/sec: 187809.77, flops:164.49, batch-reuse:1
@ 2229 train 4.1103 , allloss: 4.1103, dt: 695.62ms, fracRes: 0.3003, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9353, norm(y): 0.9939, norm:0.4244, tok/sec: 188423.41, flops:165.03, batch-reuse:1
@ 2230 train 4.0689 , allloss: 4.0689, dt: 697.53ms, fracRes: 0.3040, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9387, norm(y): 0.9939, norm:0.4534, tok/sec: 187908.88, flops:164.58, batch-reuse:1
@ 2231 train 4.1843 , allloss: 4.1843, dt: 696.07ms, fracRes: 0.3064, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9449, norm(y): 0.9937, norm:0.3894, tok/sec: 188304.07, flops:164.93, batch-reuse:1
@ 2232 train 4.1288 , allloss: 4.1288, dt: 693.97ms, fracRes: 0.3081, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9427, norm(y): 0.9932, norm:0.3840, tok/sec: 188872.14, flops:165.42, batch-reuse:1
@ 2233 train 4.0695 , allloss: 4.0695, dt: 683.67ms, fracRes: 0.3060, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9443, norm(y): 0.9936, norm:0.3857, tok/sec: 191717.01, flops:167.92, batch-reuse:1
@ 2234 train 4.1249 , allloss: 4.1249, dt: 692.27ms, fracRes: 0.2985, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9420, norm(y): 0.9942, norm:0.4694, tok/sec: 189335.41, flops:165.83, batch-reuse:1
@ 2235 train 4.0593 , allloss: 4.0593, dt: 685.40ms, fracRes: 0.2961, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9377, norm(y): 0.9943, norm:0.4297, tok/sec: 191235.51, flops:167.49, batch-reuse:1
@ 2236 train 4.0323 , allloss: 4.0323, dt: 687.76ms, fracRes: 0.2909, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9383, norm(y): 0.9946, norm:0.4440, tok/sec: 190577.09, flops:166.92, batch-reuse:1
@ 2237 train 4.0816 , allloss: 4.0816, dt: 695.49ms, fracRes: 0.2933, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9375, norm(y): 0.9943, norm:0.4216, tok/sec: 188460.03, flops:165.06, batch-reuse:1
@ 2238 train 4.0253 , allloss: 4.0253, dt: 694.20ms, fracRes: 0.2934, norm(attn): 0.3965, norm(output): 0.8086, norm(x): 0.9366, norm(y): 0.9944, norm:0.4073, tok/sec: 188810.65, flops:165.37, batch-reuse:1
@ 2239 train 4.0315 , allloss: 4.0315, dt: 693.17ms, fracRes: 0.2992, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9377, norm(y): 0.9941, norm:0.4037, tok/sec: 189090.35, flops:165.62, batch-reuse:1
@ 2240 train 4.1142 , allloss: 4.1142, dt: 689.90ms, fracRes: 0.2998, norm(attn): 0.3926, norm(output): 0.8047, norm(x): 0.9381, norm(y): 0.9943, norm:0.4009, tok/sec: 189987.44, flops:166.40, batch-reuse:1
@ 2241 train 4.1422 , allloss: 4.1422, dt: 680.02ms, fracRes: 0.2969, norm(attn): 0.3945, norm(output): 0.8047, norm(x): 0.9377, norm(y): 0.9943, norm:0.4201, tok/sec: 192747.25, flops:168.82, batch-reuse:1
@ 2242 train 4.0876 , allloss: 4.0876, dt: 702.54ms, fracRes: 0.3019, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9388, norm(y): 0.9939, norm:0.3936, tok/sec: 186567.55, flops:163.41, batch-reuse:1
@ 2243 train 4.0843 , allloss: 4.0843, dt: 699.06ms, fracRes: 0.3018, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9384, norm(y): 0.9937, norm:0.4445, tok/sec: 187498.66, flops:164.22, batch-reuse:1
@ 2244 train 4.1270 , allloss: 4.1270, dt: 675.75ms, fracRes: 0.2960, norm(attn): 0.3965, norm(output): 0.8086, norm(x): 0.9397, norm(y): 0.9940, norm:0.4312, tok/sec: 193966.04, flops:169.89, batch-reuse:1
@ 2245 train 4.0397 , allloss: 4.0397, dt: 681.13ms, fracRes: 0.3002, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9429, norm(y): 0.9941, norm:0.3997, tok/sec: 192432.84, flops:168.54, batch-reuse:1
@ 2246 train 4.0344 , allloss: 4.0344, dt: 685.27ms, fracRes: 0.3012, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9506, norm(y): 0.9943, norm:0.3762, tok/sec: 191270.91, flops:167.53, batch-reuse:1
@ 2247 train 4.0852 , allloss: 4.0852, dt: 692.37ms, fracRes: 0.2974, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9432, norm(y): 0.9941, norm:0.3783, tok/sec: 189309.20, flops:165.81, batch-reuse:1
@ 2248 train 4.1388 , allloss: 4.1388, dt: 706.01ms, fracRes: 0.2994, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9419, norm(y): 0.9941, norm:0.3542, tok/sec: 185652.49, flops:162.60, batch-reuse:1
@ 2249 train 4.0011 , allloss: 4.0011, dt: 706.90ms, fracRes: 0.3030, norm(attn): 0.3965, norm(output): 0.8047, norm(x): 0.9416, norm(y): 0.9939, norm:0.3778, tok/sec: 185417.49, flops:162.40, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0075, 0.9922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0107, 0.5156, 0.4746, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0417, 0.3633, 0.3359, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0132, 0.1904, 0.6172, 0.1445, 0.0332, 0.0000, 0.0000, 0.0000],
        [0.0189, 0.0933, 0.7305, 0.1182, 0.0155, 0.0228, 0.0000, 0.0000],
        [0.0179, 0.1631, 0.4199, 0.1680, 0.0933, 0.0845, 0.0535, 0.0000],
        [0.0120, 0.1206, 0.1475, 0.0972, 0.0874, 0.1328, 0.2969, 0.1055]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0187, -0.6641, -0.7188, -0.6641, -0.7656, -0.6953, -0.5156, -0.3262],
        [-0.0825,  4.8125,  5.1875,  3.1562,  4.2500,  3.7812,  3.0000,  2.5000],
        [-0.1060,  3.7656,  3.6719,  3.4219,  4.1875,  3.9375,  3.4375,  2.6562],
        [-0.0708,  2.0938,  2.0156,  1.7578,  3.2031,  3.3906,  2.2188,  1.6719],
        [-0.0182,  2.6562,  3.8281,  2.3750,  0.9062,  1.6406,  2.2031,  1.2969],
        [-0.0109,  1.5859,  3.6406,  1.8203, -0.2100,  0.1777,  2.1094,  0.9766],
        [-0.0737,  2.1406,  3.0781,  2.1562,  1.5781,  1.4766,  1.0156,  1.3203],
        [-0.0405,  2.2656,  2.4688,  2.0625,  1.9453,  2.3594,  3.1719,  2.1406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7564],
        [0.2529],
        [0.1676],
        [0.2537],
        [0.2308],
        [0.1150],
        [0.1506],
        [0.1906],
        [0.1130],
        [0.1638],
        [0.0731],
        [0.1145],
        [0.1511],
        [0.0580]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0072,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0016,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0014,     0.0002,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0019,     0.0027,     0.0002,     0.0006,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0010,     0.0001,     0.0002,     0.0004,     0.0001,     0.0000,     0.0000],
        [    0.9922,     0.0012,     0.0015,     0.0002,     0.0001,     0.0001,     0.0047,     0.0000],
        [    0.6992,     0.0019,     0.0005,     0.0005,     0.0005,     0.0001,     0.0020,     0.2949]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0014,     -0.1406,     -0.1104,     -0.2891,     -0.2812,     -0.1895,     -0.2139,     -0.1001],
        [     0.0287,     -4.9062,     -2.0000,     -8.7500,     -9.6250,     -8.8125,     -9.9375,     -6.9688],
        [     0.0208,     -6.4062,     -9.0000,     -2.5469,     -8.7500,     -9.9375,     -9.1250,     -8.0625],
        [    -0.0221,     -6.5625,     -8.7500,     -5.5312,     -2.6562,     -8.9375,     -9.0000,     -7.3438],
        [    -0.0327,     -6.2812,     -5.9375,     -8.5000,     -7.3750,     -5.3125,     -7.4375,     -4.9375],
        [    -0.0022,     -6.9062,     -9.0625,     -8.3125,     -7.8438,     -8.9375,     -4.1875,     -4.5000],
        [    -0.0757,     -6.7812,     -6.5938,     -8.5000,     -8.9375,     -8.9375,     -5.4375,     -0.0261],
        [    -0.0757,     -5.9688,     -7.4062,     -7.2500,     -7.3125,     -9.3125,     -5.9375,     -0.9375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7966],
        [0.8776],
        [0.7985],
        [0.8311],
        [0.8010],
        [0.7659],
        [0.6795],
        [0.5750],
        [0.7086],
        [0.6058],
        [0.6544],
        [0.6711],
        [0.5383],
        [0.6786]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0037,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0075,     0.7031,     0.2891,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0052,     0.6719,     0.2490,     0.0757,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.4004,     0.1196,     0.0432,     0.4355,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.3262,     0.0923,     0.0302,     0.3477,     0.2041,     0.0000,     0.0000],
        [    0.0005,     0.2324,     0.0688,     0.0258,     0.3184,     0.1621,     0.1914,     0.0000],
        [    0.0024,     0.2402,     0.0664,     0.0249,     0.3301,     0.1177,     0.1426,     0.0762]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0374, -0.2100, -0.2412, -0.2500, -0.2324, -0.2930, -0.2559, -0.3203],
        [-0.0337,  5.5625,  4.5312,  3.6719,  6.0625,  5.3750,  5.5938,  4.6875],
        [-0.0332,  4.5000,  3.6250,  2.6562,  5.0312,  4.3125,  4.5938,  4.1250],
        [-0.0267,  4.8438,  3.8438,  2.6562,  5.0938,  4.3750,  4.5625,  4.1250],
        [-0.0383,  5.8438,  4.6250,  3.6094,  5.9062,  5.4062,  5.6562,  5.1250],
        [-0.0879,  6.7188,  5.4688,  4.3438,  6.7812,  6.2500,  6.5938,  5.8750],
        [-0.0684,  6.1562,  4.9375,  3.9531,  6.4688,  5.8125,  5.9688,  5.4062],
        [ 0.0718,  4.6562,  3.3750,  2.3906,  4.9688,  3.9531,  4.1250,  3.5156]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8691],
        [0.7267],
        [0.6559],
        [0.6574],
        [0.5565],
        [0.5095],
        [0.5221],
        [0.4992],
        [0.5067],
        [0.5071],
        [0.4956],
        [0.4721],
        [0.4648],
        [0.4794]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9844, 0.0168, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4316, 0.2129, 0.3535, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.0991, 0.5977, 0.1699, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.0640, 0.3203, 0.3613, 0.0669, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.0552, 0.1309, 0.2305, 0.0894, 0.3105, 0.0000, 0.0000],
        [0.2891, 0.0742, 0.1699, 0.1660, 0.0461, 0.1592, 0.0962, 0.0000],
        [0.0219, 0.0217, 0.0654, 0.0542, 0.0269, 0.1572, 0.3301, 0.3223]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0078, -0.5664, -0.4551, -0.4844, -0.6172, -0.6133, -0.7383, -0.6719],
        [-0.0064, -4.0625, -0.8086, -0.9609, -2.8438, -1.8828, -2.3750, -1.2969],
        [-0.0476, -0.7578, -0.2471,  0.1846, -0.4414,  0.4004,  0.8398,  1.3906],
        [-0.0771, -0.3789,  1.4141,  0.1562,  0.8320,  2.5938,  2.7188,  2.9375],
        [-0.0957, -1.1641,  0.4453,  0.5625, -1.1250,  1.8516,  1.3438,  2.5312],
        [-0.0898, -1.2891, -0.4316,  0.1367, -0.8125,  0.4336,  0.9102,  2.1250],
        [-0.0869, -1.4453, -0.6172, -0.6406, -1.9219, -0.6836, -1.1875,  0.5547],
        [-0.1157, -0.1206,  0.9805,  0.7930,  0.0928,  1.8594,  2.6094,  2.5781]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6579],
        [0.3545],
        [0.3143],
        [0.3233],
        [0.2896],
        [0.2453],
        [0.1762],
        [0.1915],
        [0.1546],
        [0.1574],
        [0.1699],
        [0.1726],
        [0.1692],
        [0.1339]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6406,     0.3613,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.9922,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0159,     0.9688,     0.0039,     0.0129,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0103,     0.0004,     0.0021,     0.9883,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0003,     0.0000,     0.0000,     0.8398,     0.1582,     0.0000,     0.0000],
        [    0.0425,     0.0571,     0.0013,     0.0006,     0.0145,     0.2500,     0.6328,     0.0000],
        [    0.0002,     0.0007,     0.0000,     0.0000,     0.0001,     0.0001,     0.9141,     0.0864]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0030,     -0.1475,     -0.2559,     -0.2480,     -0.1787,     -0.1602,     -0.1699,     -0.2227],
        [     0.0640,     -0.5078,     -6.6250,     -5.9375,     -4.0000,     -3.1875,     -2.5469,     -3.4531],
        [     0.0415,      5.4688,     -0.3652,      0.8867,     -3.0469,     -3.1875,     -1.1719,     -1.8672],
        [     0.0312,      4.1562,     -1.3750,     -0.1748,     -1.3359,     -1.3750,     -0.8438,     -2.2031],
        [     0.0898,      3.3125,      0.0894,      1.7031,      7.8750,      5.4375,      1.2500,     -0.7734],
        [     0.0576,      1.5547,     -1.1641,     -2.1250,      9.6250,      7.9688,      2.1719,      0.4668],
        [    -0.0046,      0.2949,     -3.4688,     -4.2188,     -1.0781,      1.7656,      2.7031,      0.6367],
        [    -0.0359,      1.0156,     -5.3750,     -5.6250,     -0.8359,     -1.2188,      8.1875,      5.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8379],
        [0.4814],
        [0.4568],
        [0.4749],
        [0.4979],
        [0.4187],
        [0.3934],
        [0.3804],
        [0.3559],
        [0.3339],
        [0.3488],
        [0.3497],
        [0.3048],
        [0.2783]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0140,     -0.5430,     -0.6016,     -0.5312,     -0.7031,     -0.5820,     -0.7578,     -0.8164],
        [    -0.3926,    -15.1875,    -16.5000,    -14.4375,    -17.8750,    -17.0000,    -19.8750,    -21.1250],
        [    -0.4355,    -16.5000,    -19.1250,    -16.3750,    -20.5000,    -19.5000,    -22.2500,    -26.1250],
        [    -0.2715,    -11.9375,    -13.8125,    -11.1250,    -16.0000,    -13.9375,    -16.3750,    -16.7500],
        [    -0.2285,    -11.6250,    -13.1875,    -11.1875,    -13.4375,    -12.6250,    -15.5625,    -13.5000],
        [    -0.4023,    -15.8750,    -17.6250,    -16.0000,    -18.2500,    -16.8750,    -21.6250,    -23.7500],
        [    -0.4922,    -19.1250,    -21.5000,    -19.5000,    -23.8750,    -21.2500,    -25.6250,    -27.2500],
        [    -0.3477,    -14.4375,    -16.2500,    -14.3125,    -18.8750,    -16.5000,    -19.2500,    -18.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7848],
        [0.5947],
        [0.5592],
        [0.5750],
        [0.6439],
        [0.5416],
        [0.5197],
        [0.5894],
        [0.5283],
        [0.5673],
        [0.4940],
        [0.5002],
        [0.5237],
        [0.4403]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9844,     0.0151,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0408,     0.0160,     0.0095,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ -0.0403,  -0.7500,  -0.7383,  -0.9023,  -1.0703,  -0.6719,  -0.8789,  -0.9961],
        [ -0.5469,  -8.6250, -11.4375, -13.0000, -13.2500,  -8.5000, -10.8125, -12.9375],
        [  0.5273,  12.0625,   7.9062,  11.0000,  14.1250,   7.9062,  12.1875,   8.6875],
        [ -0.2832,  -3.4062,  -4.3438,  -4.8750,  -8.6250,  -5.0000,  -5.9062,  -9.5625],
        [ -0.8008, -15.9375, -15.7500, -18.5000, -19.3750, -13.5000, -17.5000, -18.7500],
        [ -0.9805, -18.3750, -16.7500, -20.2500, -21.8750, -13.6875, -19.3750, -21.7500],
        [ -0.8008, -14.5000, -15.3125, -17.7500, -19.3750, -12.3750, -16.8750, -19.7500],
        [ -0.8516, -17.0000, -19.0000, -22.1250, -23.7500, -13.3750, -18.8750, -20.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7235],
        [0.2931],
        [0.5082],
        [0.7218],
        [0.6140],
        [0.7456],
        [0.7412],
        [0.7228],
        [0.6493],
        [0.7521],
        [0.3305],
        [0.7454],
        [0.6815],
        [0.5000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0006,     0.0005,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0068,     -0.7930,     -0.7852,     -0.9023,     -0.8125,     -0.9297,     -0.7617,     -1.0156],
        [    -0.2354,    -29.7500,    -28.7500,    -32.7500,    -27.3750,    -33.0000,    -26.2500,    -35.7500],
        [    -0.1162,    -16.8750,    -18.2500,    -20.7500,    -18.1250,    -21.1250,    -18.0000,    -23.5000],
        [    -0.0527,     -7.5000,     -7.6875,     -9.3125,     -9.0625,    -11.5000,     -9.3750,    -12.5625],
        [    -0.2363,    -26.5000,    -24.3750,    -29.2500,    -26.0000,    -31.5000,    -24.6250,    -33.0000],
        [    -0.3340,    -38.7500,    -37.5000,    -43.5000,    -37.5000,    -44.0000,    -35.2500,    -47.2500],
        [    -0.1973,    -23.7500,    -22.3750,    -26.0000,    -23.1250,    -27.5000,    -21.8750,    -29.5000],
        [    -0.2559,    -29.8750,    -29.3750,    -34.0000,    -30.7500,    -33.7500,    -28.5000,    -38.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9478],
        [0.4062],
        [0.4254],
        [0.9984],
        [0.9886],
        [0.9925],
        [0.9997],
        [1.0000],
        [0.9821],
        [0.9984],
        [0.8052],
        [0.9997],
        [0.9997],
        [0.7182]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2207,     0.7812,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.6719,     0.3223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.4512,     0.0513,     0.4961,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0471,     0.0762,     0.0255,     0.0308,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0014,     0.0005,     0.0000,     0.0009,     0.0036,     0.0000,     0.0000],
        [    0.5312,     0.0747,     0.0259,     0.0121,     0.1055,     0.1177,     0.1328,     0.0000],
        [    0.9844,     0.0014,     0.0018,     0.0001,     0.0016,     0.0055,     0.0029,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0013,     -0.0332,     -0.0518,     -0.0737,     -0.0474,     -0.0286,     -0.0422,     -0.0654],
        [     0.0327,      1.2969,      1.1562,      1.4922,      1.6484,      1.5469,      1.1953,      0.7227],
        [     0.1147,      5.1875,      4.4688,      6.1562,      5.6250,      4.2188,      4.5000,      5.9062],
        [     0.1436,      7.0938,      4.9062,      7.1875,      7.0000,      5.8750,      6.0625,      6.8125],
        [    -0.0630,     -2.9219,     -2.4375,     -3.5312,     -3.3438,     -1.8906,     -2.0469,     -3.3281],
        [    -0.1826,     -6.7188,     -7.8125,    -11.0625,     -7.1875,     -5.7812,     -6.4062,     -9.1875],
        [    -0.0547,     -2.0156,     -3.0781,     -3.8281,     -1.6719,     -1.5625,     -1.4453,     -3.5000],
        [    -0.1641,     -6.7188,     -6.5000,     -9.1875,     -6.6250,     -5.3438,     -6.0000,     -7.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5494],
        [0.0603],
        [0.0010],
        [0.9619],
        [0.8818],
        [0.8883],
        [0.8800],
        [1.0000],
        [0.8545],
        [0.9997],
        [0.2483],
        [0.9954],
        [0.9997],
        [0.2538]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0054,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0148,     0.4648,     0.5195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0061,     0.2168,     0.3086,     0.4688,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0005,     0.0003,     0.0013,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9102,     0.0096,     0.0097,     0.0067,     0.0165,     0.0317,     0.0176,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0016,     -0.2354,     -0.2080,     -0.2256,     -0.1572,     -0.1855,     -0.1680,     -0.2266],
        [    -0.0260,     -5.2500,     -4.4688,     -4.7500,     -3.7188,     -4.6562,     -3.4688,     -5.1562],
        [     0.0227,      3.4688,      3.5781,      4.2188,      1.5703,      3.0156,      2.1250,      2.9688],
        [     0.0227,      3.5938,      3.9531,      4.3750,      2.0469,      3.4219,      2.1094,      3.3281],
        [    -0.0488,     -7.7188,     -7.6562,     -8.2500,     -6.6562,     -6.1562,     -6.1875,     -7.5625],
        [    -0.1807,    -27.8750,    -25.0000,    -27.3750,    -18.3750,    -22.2500,    -19.0000,    -27.5000],
        [    -0.0309,     -4.5625,     -4.5625,     -4.9375,     -4.0312,     -3.3906,     -3.9844,     -4.3438],
        [    -0.1201,    -19.1250,    -17.1250,    -18.7500,    -13.8125,    -15.8750,    -13.3125,    -19.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5509],
        [0.0660],
        [0.1155],
        [0.7622],
        [0.9987],
        [0.3325],
        [0.8763],
        [0.9984],
        [0.8498],
        [1.0000],
        [0.2231],
        [0.9941],
        [0.9993],
        [0.2278]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9531, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.2432, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.1758, 0.2314, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.1167, 0.1826, 0.1533, 0.0332, 0.0000, 0.0000, 0.0000],
        [0.9688, 0.0051, 0.0094, 0.0062, 0.0042, 0.0059, 0.0000, 0.0000],
        [0.6016, 0.0635, 0.0811, 0.0620, 0.0151, 0.1562, 0.0193, 0.0000],
        [0.7383, 0.0349, 0.0620, 0.0471, 0.0188, 0.0483, 0.0188, 0.0303]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0332,     -0.0315,     -0.0330,     -0.0459,     -0.0354,     -0.0415,     -0.0410],
        [     0.0004,     -3.0156,     -2.2500,     -2.5312,     -3.4531,     -2.7656,     -3.3125,     -3.0312],
        [    -0.0004,     -0.6719,     -0.5273,     -0.6562,     -1.5391,     -0.3555,     -1.2109,     -0.7695],
        [     0.0000,     -0.8125,     -0.5352,     -0.6953,     -1.6016,     -0.5625,     -1.2422,     -0.8789],
        [    -0.0006,     -1.4844,     -1.0391,     -1.2109,     -2.7500,     -1.0391,     -2.1094,     -1.8203],
        [     0.0008,     -5.2500,     -4.6250,     -5.0625,     -5.4375,     -5.0938,     -5.8750,     -5.5312],
        [    -0.0020,     -2.2500,     -2.0156,     -2.2812,     -3.6875,     -1.3516,     -3.4375,     -2.5312],
        [    -0.0003,     -3.0469,     -2.4844,     -2.7500,     -3.6719,     -2.7344,     -3.6719,     -3.2031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8190],
        [0.3618],
        [0.2695],
        [0.2244],
        [0.9727],
        [0.1891],
        [0.5697],
        [0.8018],
        [0.3584],
        [0.9609],
        [0.0456],
        [0.7869],
        [0.7612],
        [0.0239]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.4492,     0.5508,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.3594,     0.3887,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.3828,     0.3398,     0.2012,     0.0757,     0.0000,     0.0000,     0.0000],
        [    0.0165,     0.3281,     0.2969,     0.1836,     0.0781,     0.0967,     0.0000,     0.0000],
        [    0.0016,     0.3008,     0.2910,     0.1787,     0.0698,     0.0796,     0.0791,     0.0000],
        [    0.0004,     0.3184,     0.3008,     0.1562,     0.0457,     0.0532,     0.0544,     0.0703]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0199,      0.0122,      0.0076,     -0.0000,      0.0068,      0.0017,      0.0055],
        [    -0.0083,      5.5625,      5.8438,      5.4375,      4.5938,      4.4062,      4.6875,      4.7812],
        [    -0.0081,      5.3438,      5.5625,      5.1562,      4.3750,      4.3125,      4.4375,      4.5938],
        [    -0.0086,      5.0625,      5.1562,      4.7188,      3.8594,      3.8906,      3.9531,      4.1250],
        [    -0.0101,      5.0938,      4.9688,      4.4375,      3.4688,      3.6562,      3.6094,      3.8594],
        [    -0.0082,      2.9844,      2.8906,      2.4062,      1.5469,      1.7656,      1.7500,      1.9141],
        [    -0.0098,      5.1875,      5.1562,      4.6875,      3.7344,      3.8594,      3.8594,      4.0938],
        [    -0.0129,      6.5625,      6.5312,      5.8750,      4.6250,      4.7812,      4.8125,      5.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1160],
        [0.0432],
        [0.0396],
        [0.0090],
        [0.3893],
        [0.0097],
        [0.0859],
        [0.1266],
        [0.0642],
        [0.2447],
        [0.0118],
        [0.0882],
        [0.0852],
        [0.0109]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(¯:0.0055 Miko:0.0092 Miko:0.0125--------:0.0060--------:0.0176 Miko:0.0099 Miko:0.0112--------:0.0171)
--------
------
		( Miko:0.0092 Miko:0.0125--------:0.0060--------:0.0176 Miko:0.0099 Miko:0.0112--------:0.0171--------:0.0161)
------------------------------------------------------------------------------------------------------------------------
@ 2250 train 4.1194 , allloss: 4.1194, dt: 1127.61ms, fracRes: 0.3000, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9396, norm(y): 0.9941, norm:0.3774, tok/sec: 116238.97, flops:101.81, batch-reuse:1
@ 2251 train 4.0505 , allloss: 4.0505, dt: 678.19ms, fracRes: 0.2993, norm(attn): 0.4004, norm(output): 0.8086, norm(x): 0.9419, norm(y): 0.9945, norm:0.4879, tok/sec: 193266.08, flops:169.27, batch-reuse:1
@ 2252 train 4.0298 , allloss: 4.0298, dt: 698.88ms, fracRes: 0.3043, norm(attn): 0.3926, norm(output): 0.8047, norm(x): 0.9398, norm(y): 0.9938, norm:0.4347, tok/sec: 187546.95, flops:164.26, batch-reuse:1
@ 2253 train 4.0416 , allloss: 4.0416, dt: 692.81ms, fracRes: 0.3066, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9396, norm(y): 0.9936, norm:0.3796, tok/sec: 189188.68, flops:165.70, batch-reuse:1
@ 2254 train 4.1411 , allloss: 4.1411, dt: 686.85ms, fracRes: 0.3052, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9433, norm(y): 0.9936, norm:0.4597, tok/sec: 190831.97, flops:167.14, batch-reuse:1
@ 2255 train 4.0674 , allloss: 4.0674, dt: 695.16ms, fracRes: 0.2972, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9420, norm(y): 0.9941, norm:0.4311, tok/sec: 188549.88, flops:165.14, batch-reuse:1
@ 2256 train 4.1026 , allloss: 4.1026, dt: 697.02ms, fracRes: 0.2947, norm(attn): 0.3848, norm(output): 0.8125, norm(x): 0.9453, norm(y): 0.9942, norm:0.4516, tok/sec: 188046.75, flops:164.70, batch-reuse:1
@ 2257 train 4.0878 , allloss: 4.0878, dt: 708.53ms, fracRes: 0.2990, norm(attn): 0.3789, norm(output): 0.8086, norm(x): 0.9445, norm(y): 0.9939, norm:0.4422, tok/sec: 184992.66, flops:162.03, batch-reuse:1
@ 2258 train 4.0284 , allloss: 4.0284, dt: 698.14ms, fracRes: 0.3010, norm(attn): 0.3809, norm(output): 0.8086, norm(x): 0.9414, norm(y): 0.9938, norm:0.3986, tok/sec: 187743.90, flops:164.44, batch-reuse:1
@ 2259 train 4.1781 , allloss: 4.1781, dt: 708.23ms, fracRes: 0.2998, norm(attn): 0.3887, norm(output): 0.8086, norm(x): 0.9417, norm(y): 0.9944, norm:0.4505, tok/sec: 185070.88, flops:162.10, batch-reuse:1
@ 2260 train 4.0351 , allloss: 4.0351, dt: 701.13ms, fracRes: 0.3024, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9437, norm(y): 0.9941, norm:0.4106, tok/sec: 186944.72, flops:163.74, batch-reuse:1
@ 2261 train 4.0853 , allloss: 4.0853, dt: 705.68ms, fracRes: 0.2978, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9447, norm(y): 0.9943, norm:0.4148, tok/sec: 185737.98, flops:162.68, batch-reuse:1
@ 2262 train 4.0223 , allloss: 4.0223, dt: 690.30ms, fracRes: 0.2992, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9416, norm(y): 0.9937, norm:0.3874, tok/sec: 189875.95, flops:166.30, batch-reuse:1
@ 2263 train 4.1639 , allloss: 4.1639, dt: 695.78ms, fracRes: 0.3002, norm(attn): 0.3926, norm(output): 0.8047, norm(x): 0.9389, norm(y): 0.9937, norm:0.4392, tok/sec: 188380.92, flops:164.99, batch-reuse:1
@ 2264 train 4.0673 , allloss: 4.0673, dt: 699.06ms, fracRes: 0.2959, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9415, norm(y): 0.9942, norm:0.4073, tok/sec: 187498.34, flops:164.22, batch-reuse:1
@ 2265 train 4.0597 , allloss: 4.0597, dt: 708.62ms, fracRes: 0.2952, norm(attn): 0.4043, norm(output): 0.8125, norm(x): 0.9422, norm(y): 0.9944, norm:0.4554, tok/sec: 184969.01, flops:162.01, batch-reuse:1
@ 2266 train 3.9570 , allloss: 3.9570, dt: 686.84ms, fracRes: 0.3021, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9387, norm(y): 0.9938, norm:0.4288, tok/sec: 190832.84, flops:167.14, batch-reuse:1
@ 2267 train 4.0640 , allloss: 4.0640, dt: 701.10ms, fracRes: 0.3021, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9456, norm(y): 0.9937, norm:0.4314, tok/sec: 186950.82, flops:163.74, batch-reuse:1
@ 2268 train 4.1029 , allloss: 4.1029, dt: 705.28ms, fracRes: 0.3030, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9493, norm(y): 0.9938, norm:0.4104, tok/sec: 185843.65, flops:162.77, batch-reuse:1
@ 2269 train 4.1301 , allloss: 4.1301, dt: 703.60ms, fracRes: 0.3022, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9479, norm(y): 0.9943, norm:0.4069, tok/sec: 186288.19, flops:163.16, batch-reuse:1
@ 2270 train 4.1641 , allloss: 4.1641, dt: 703.38ms, fracRes: 0.3030, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9500, norm(y): 0.9944, norm:0.4379, tok/sec: 186346.79, flops:163.21, batch-reuse:1
@ 2271 train 4.0362 , allloss: 4.0362, dt: 701.29ms, fracRes: 0.3060, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9490, norm(y): 0.9939, norm:0.4182, tok/sec: 186901.95, flops:163.70, batch-reuse:1
@ 2272 train 4.0119 , allloss: 4.0119, dt: 685.82ms, fracRes: 0.3012, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9466, norm(y): 0.9939, norm:0.3830, tok/sec: 191116.24, flops:167.39, batch-reuse:1
@ 2273 train 4.1327 , allloss: 4.1327, dt: 696.51ms, fracRes: 0.2966, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9476, norm(y): 0.9941, norm:0.4043, tok/sec: 188183.92, flops:164.82, batch-reuse:1
@ 2274 train 4.0386 , allloss: 4.0386, dt: 705.66ms, fracRes: 0.3002, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9470, norm(y): 0.9939, norm:0.4707, tok/sec: 185743.06, flops:162.68, batch-reuse:1
@ 2275 train 4.0777 , allloss: 4.0777, dt: 696.23ms, fracRes: 0.3066, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9502, norm(y): 0.9940, norm:0.4328, tok/sec: 188258.61, flops:164.89, batch-reuse:1
@ 2276 train 4.1637 , allloss: 4.1637, dt: 692.50ms, fracRes: 0.3063, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9532, norm(y): 0.9944, norm:0.4115, tok/sec: 189274.85, flops:165.78, batch-reuse:1
@ 2277 train 4.0888 , allloss: 4.0888, dt: 683.72ms, fracRes: 0.3027, norm(attn): 0.3887, norm(output): 0.8086, norm(x): 0.9462, norm(y): 0.9943, norm:0.4118, tok/sec: 191703.51, flops:167.90, batch-reuse:1
@ 2278 train 4.0611 , allloss: 4.0611, dt: 682.20ms, fracRes: 0.2945, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9435, norm(y): 0.9945, norm:0.4302, tok/sec: 192130.21, flops:168.28, batch-reuse:1
@ 2279 train 4.0550 , allloss: 4.0550, dt: 694.11ms, fracRes: 0.2967, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9412, norm(y): 0.9944, norm:0.3874, tok/sec: 188833.28, flops:165.39, batch-reuse:1
@ 2280 train 4.0534 , allloss: 4.0534, dt: 692.73ms, fracRes: 0.3026, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9478, norm(y): 0.9941, norm:0.4056, tok/sec: 189211.08, flops:165.72, batch-reuse:1
@ 2281 train 3.9787 , allloss: 3.9787, dt: 690.35ms, fracRes: 0.3019, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9483, norm(y): 0.9942, norm:0.4240, tok/sec: 189864.21, flops:166.29, batch-reuse:1
@ 2282 train 4.2144 , allloss: 4.2144, dt: 702.72ms, fracRes: 0.3013, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9487, norm(y): 0.9945, norm:0.4739, tok/sec: 186520.27, flops:163.36, batch-reuse:1
@ 2283 train 4.0067 , allloss: 4.0067, dt: 704.77ms, fracRes: 0.3014, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9467, norm(y): 0.9943, norm:0.4234, tok/sec: 185978.44, flops:162.89, batch-reuse:1
@ 2284 train 3.9902 , allloss: 3.9902, dt: 703.08ms, fracRes: 0.3049, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9476, norm(y): 0.9943, norm:0.4346, tok/sec: 186424.64, flops:163.28, batch-reuse:1
@ 2285 train 4.0272 , allloss: 4.0272, dt: 702.97ms, fracRes: 0.3073, norm(attn): 0.3887, norm(output): 0.8047, norm(x): 0.9432, norm(y): 0.9938, norm:0.4401, tok/sec: 186453.47, flops:163.31, batch-reuse:1
@ 2286 train 4.0920 , allloss: 4.0920, dt: 706.76ms, fracRes: 0.3048, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9448, norm(y): 0.9940, norm:0.3637, tok/sec: 185455.96, flops:162.43, batch-reuse:1
@ 2287 train 4.1361 , allloss: 4.1361, dt: 684.59ms, fracRes: 0.3052, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9508, norm(y): 0.9946, norm:0.4109, tok/sec: 191459.22, flops:167.69, batch-reuse:1
@ 2288 train 4.1743 , allloss: 4.1743, dt: 961.78ms, fracRes: 0.3049, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9517, norm(y): 0.9947, norm:0.4202, tok/sec: 136280.74, flops:119.36, batch-reuse:1
@ 2289 train 4.0392 , allloss: 4.0392, dt: 715.48ms, fracRes: 0.3078, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9518, norm(y): 0.9940, norm:0.4288, tok/sec: 183195.03, flops:160.45, batch-reuse:1
@ 2290 train 3.9559 , allloss: 3.9559, dt: 706.07ms, fracRes: 0.3103, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9468, norm(y): 0.9936, norm:0.4170, tok/sec: 185636.75, flops:162.59, batch-reuse:1
@ 2291 train 4.1806 , allloss: 4.1806, dt: 707.78ms, fracRes: 0.3062, norm(attn): 0.3965, norm(output): 0.8086, norm(x): 0.9484, norm(y): 0.9942, norm:0.3759, tok/sec: 185186.52, flops:162.20, batch-reuse:1
@ 2292 train 4.0185 , allloss: 4.0185, dt: 706.85ms, fracRes: 0.3019, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9476, norm(y): 0.9943, norm:0.3718, tok/sec: 185431.88, flops:162.41, batch-reuse:1
@ 2293 train 4.1242 , allloss: 4.1242, dt: 702.90ms, fracRes: 0.3019, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9481, norm(y): 0.9944, norm:0.3841, tok/sec: 186473.33, flops:163.32, batch-reuse:1
@ 2294 train 4.0687 , allloss: 4.0687, dt: 703.89ms, fracRes: 0.3005, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9460, norm(y): 0.9941, norm:0.3578, tok/sec: 186210.83, flops:163.09, batch-reuse:1
@ 2295 train 4.0587 , allloss: 4.0587, dt: 694.93ms, fracRes: 0.3006, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9498, norm(y): 0.9944, norm:0.3774, tok/sec: 188611.33, flops:165.20, batch-reuse:1
@ 2296 train 4.0354 , allloss: 4.0354, dt: 690.56ms, fracRes: 0.3064, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9549, norm(y): 0.9942, norm:0.3836, tok/sec: 189805.02, flops:166.24, batch-reuse:1
@ 2297 train 4.0210 , allloss: 4.0210, dt: 698.38ms, fracRes: 0.3062, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9532, norm(y): 0.9945, norm:0.3735, tok/sec: 187680.38, flops:164.38, batch-reuse:1
@ 2298 train 4.0415 , allloss: 4.0415, dt: 693.91ms, fracRes: 0.3068, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9493, norm(y): 0.9942, norm:0.3662, tok/sec: 188889.41, flops:165.44, batch-reuse:1
@ 2299 train 4.0382 , allloss: 4.0382, dt: 689.81ms, fracRes: 0.3083, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9483, norm(y): 0.9941, norm:0.3615, tok/sec: 190010.75, flops:166.42, batch-reuse:1
@ 2300 train 3.9135 , allloss: 3.9135, dt: 694.42ms, fracRes: 0.3037, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9429, norm(y): 0.9940, norm:0.3857, tok/sec: 188750.56, flops:165.32, batch-reuse:1
@ 2301 train 4.0272 , allloss: 4.0272, dt: 697.56ms, fracRes: 0.3019, norm(attn): 0.3926, norm(output): 0.8047, norm(x): 0.9429, norm(y): 0.9941, norm:0.3628, tok/sec: 187901.88, flops:164.57, batch-reuse:1
@ 2302 train 4.0421 , allloss: 4.0421, dt: 697.49ms, fracRes: 0.3029, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9499, norm(y): 0.9942, norm:0.3751, tok/sec: 187919.16, flops:164.59, batch-reuse:1
@ 2303 train 4.1311 , allloss: 4.1311, dt: 694.20ms, fracRes: 0.3053, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9522, norm(y): 0.9945, norm:0.4044, tok/sec: 188808.90, flops:165.37, batch-reuse:1
@ 2304 train 4.0520 , allloss: 4.0520, dt: 695.40ms, fracRes: 0.3048, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9548, norm(y): 0.9943, norm:0.3908, tok/sec: 188484.97, flops:165.09, batch-reuse:1
@ 2305 train 4.0111 , allloss: 4.0111, dt: 690.91ms, fracRes: 0.3068, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9466, norm(y): 0.9939, norm:0.3606, tok/sec: 189710.24, flops:166.16, batch-reuse:1
@ 2306 train 4.0460 , allloss: 4.0460, dt: 696.07ms, fracRes: 0.3059, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9468, norm(y): 0.9940, norm:0.4002, tok/sec: 188301.75, flops:164.93, batch-reuse:1
@ 2307 train 4.0920 , allloss: 4.0920, dt: 685.77ms, fracRes: 0.3095, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9494, norm(y): 0.9941, norm:0.4071, tok/sec: 191131.19, flops:167.40, batch-reuse:1
@ 2308 train 4.0547 , allloss: 4.0547, dt: 694.90ms, fracRes: 0.3111, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9482, norm(y): 0.9938, norm:0.3730, tok/sec: 188619.68, flops:165.20, batch-reuse:1
@ 2309 train 4.0466 , allloss: 4.0466, dt: 693.80ms, fracRes: 0.3053, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9428, norm(y): 0.9943, norm:0.4287, tok/sec: 188919.07, flops:165.47, batch-reuse:1
@ 2310 train 4.1417 , allloss: 4.1417, dt: 692.04ms, fracRes: 0.3031, norm(attn): 0.3848, norm(output): 0.8086, norm(x): 0.9455, norm(y): 0.9942, norm:0.3855, tok/sec: 189399.92, flops:165.89, batch-reuse:1
@ 2311 train 4.0728 , allloss: 4.0728, dt: 702.70ms, fracRes: 0.3073, norm(attn): 0.3848, norm(output): 0.8125, norm(x): 0.9499, norm(y): 0.9941, norm:0.3812, tok/sec: 186526.92, flops:163.37, batch-reuse:1
@ 2312 train 4.0828 , allloss: 4.0828, dt: 689.06ms, fracRes: 0.3093, norm(attn): 0.3848, norm(output): 0.8086, norm(x): 0.9477, norm(y): 0.9939, norm:0.3861, tok/sec: 190218.63, flops:166.60, batch-reuse:1
@ 2313 train 4.1100 , allloss: 4.1100, dt: 698.57ms, fracRes: 0.3059, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9474, norm(y): 0.9942, norm:0.3469, tok/sec: 187628.11, flops:164.34, batch-reuse:1
@ 2314 train 4.0952 , allloss: 4.0952, dt: 694.89ms, fracRes: 0.3056, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9465, norm(y): 0.9943, norm:0.3589, tok/sec: 188622.07, flops:165.21, batch-reuse:1
@ 2315 train 4.0387 , allloss: 4.0387, dt: 690.76ms, fracRes: 0.3086, norm(attn): 0.3926, norm(output): 0.8047, norm(x): 0.9446, norm(y): 0.9941, norm:0.3584, tok/sec: 189749.40, flops:166.19, batch-reuse:1
@ 2316 train 4.1530 , allloss: 4.1530, dt: 689.19ms, fracRes: 0.3107, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9543, norm(y): 0.9946, norm:0.3979, tok/sec: 190182.83, flops:166.57, batch-reuse:1
@ 2317 train 4.0282 , allloss: 4.0282, dt: 683.95ms, fracRes: 0.3066, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9457, norm(y): 0.9943, norm:0.3939, tok/sec: 191638.75, flops:167.85, batch-reuse:1
@ 2318 train 4.0432 , allloss: 4.0432, dt: 691.97ms, fracRes: 0.3041, norm(attn): 0.4004, norm(output): 0.8086, norm(x): 0.9474, norm(y): 0.9944, norm:0.3815, tok/sec: 189419.11, flops:165.90, batch-reuse:1
@ 2319 train 4.0370 , allloss: 4.0370, dt: 695.56ms, fracRes: 0.3066, norm(attn): 0.4004, norm(output): 0.8086, norm(x): 0.9473, norm(y): 0.9941, norm:0.3692, tok/sec: 188441.23, flops:165.05, batch-reuse:1
@ 2320 train 4.0023 , allloss: 4.0023, dt: 692.07ms, fracRes: 0.3059, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9491, norm(y): 0.9942, norm:0.3694, tok/sec: 189390.40, flops:165.88, batch-reuse:1
@ 2321 train 3.9066 , allloss: 3.9066, dt: 691.78ms, fracRes: 0.3058, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9531, norm(y): 0.9943, norm:0.4939, tok/sec: 189470.29, flops:165.95, batch-reuse:1
@ 2322 train 4.0437 , allloss: 4.0437, dt: 700.18ms, fracRes: 0.3101, norm(attn): 0.3965, norm(output): 0.8086, norm(x): 0.9489, norm(y): 0.9943, norm:0.4515, tok/sec: 187198.84, flops:163.96, batch-reuse:1
@ 2323 train 3.9094 , allloss: 3.9094, dt: 697.84ms, fracRes: 0.3085, norm(attn): 0.3965, norm(output): 0.8047, norm(x): 0.9458, norm(y): 0.9941, norm:0.3566, tok/sec: 187826.00, flops:164.51, batch-reuse:1
@ 2324 train 4.0973 , allloss: 4.0973, dt: 682.39ms, fracRes: 0.3012, norm(attn): 0.3965, norm(output): 0.8086, norm(x): 0.9428, norm(y): 0.9947, norm:0.3837, tok/sec: 192079.06, flops:168.23, batch-reuse:1
@ 2325 train 4.0723 , allloss: 4.0723, dt: 691.79ms, fracRes: 0.3001, norm(attn): 0.4023, norm(output): 0.8086, norm(x): 0.9443, norm(y): 0.9948, norm:0.3985, tok/sec: 189469.24, flops:165.95, batch-reuse:1
@ 2326 train 3.9902 , allloss: 3.9902, dt: 693.15ms, fracRes: 0.3029, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9499, norm(y): 0.9947, norm:0.3617, tok/sec: 189095.36, flops:165.62, batch-reuse:1
@ 2327 train 4.0302 , allloss: 4.0302, dt: 706.40ms, fracRes: 0.3097, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9510, norm(y): 0.9943, norm:0.3574, tok/sec: 185550.48, flops:162.52, batch-reuse:1
@ 2328 train 3.9783 , allloss: 3.9783, dt: 691.56ms, fracRes: 0.3086, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9498, norm(y): 0.9943, norm:0.3948, tok/sec: 189529.99, flops:166.00, batch-reuse:1
@ 2329 train 3.7472 , allloss: 3.7472, dt: 679.31ms, fracRes: 0.2706, norm(attn): 0.4199, norm(output): 0.8203, norm(x): 0.9379, norm(y): 0.9960, norm:2.0625, tok/sec: 192947.69, flops:168.99, batch-reuse:1
@ 2330 train 4.0493 , allloss: 4.0493, dt: 685.80ms, fracRes: 0.3023, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9535, norm(y): 0.9948, norm:0.4860, tok/sec: 191123.69, flops:167.40, batch-reuse:1
@ 2331 train 3.8850 , allloss: 3.8850, dt: 698.27ms, fracRes: 0.3102, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9558, norm(y): 0.9940, norm:0.4068, tok/sec: 187710.50, flops:164.41, batch-reuse:1
@ 2332 train 4.0399 , allloss: 4.0399, dt: 689.97ms, fracRes: 0.3155, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9576, norm(y): 0.9940, norm:0.4752, tok/sec: 189967.41, flops:166.38, batch-reuse:1
@ 2333 train 3.9052 , allloss: 3.9052, dt: 680.11ms, fracRes: 0.3103, norm(attn): 0.4023, norm(output): 0.8125, norm(x): 0.9524, norm(y): 0.9939, norm:0.4362, tok/sec: 192720.49, flops:168.80, batch-reuse:1
@ 2334 train 3.9115 , allloss: 3.9115, dt: 703.06ms, fracRes: 0.3094, norm(attn): 0.4004, norm(output): 0.8086, norm(x): 0.9493, norm(y): 0.9941, norm:0.3911, tok/sec: 186431.78, flops:163.29, batch-reuse:1
@ 2335 train 4.0182 , allloss: 4.0182, dt: 696.75ms, fracRes: 0.3048, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9473, norm(y): 0.9940, norm:0.3805, tok/sec: 188119.66, flops:164.77, batch-reuse:1
@ 2336 train 4.0990 , allloss: 4.0990, dt: 699.90ms, fracRes: 0.3050, norm(attn): 0.4023, norm(output): 0.8125, norm(x): 0.9483, norm(y): 0.9938, norm:0.3864, tok/sec: 187273.70, flops:164.02, batch-reuse:1
@ 2337 train 3.9900 , allloss: 3.9900, dt: 697.50ms, fracRes: 0.3128, norm(attn): 0.4023, norm(output): 0.8125, norm(x): 0.9497, norm(y): 0.9936, norm:0.3648, tok/sec: 187917.49, flops:164.59, batch-reuse:1
@ 2338 train 4.0155 , allloss: 4.0155, dt: 687.16ms, fracRes: 0.3151, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9554, norm(y): 0.9938, norm:0.3776, tok/sec: 190744.31, flops:167.06, batch-reuse:1
@ 2339 train 3.9714 , allloss: 3.9714, dt: 692.95ms, fracRes: 0.3157, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9563, norm(y): 0.9935, norm:0.3444, tok/sec: 189149.62, flops:165.67, batch-reuse:1
@ 2340 train 4.0162 , allloss: 4.0162, dt: 689.42ms, fracRes: 0.3137, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9570, norm(y): 0.9937, norm:0.3565, tok/sec: 190120.09, flops:166.52, batch-reuse:1
@ 2341 train 3.9979 , allloss: 3.9979, dt: 706.02ms, fracRes: 0.3108, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9587, norm(y): 0.9937, norm:0.3392, tok/sec: 185649.41, flops:162.60, batch-reuse:1
@ 2342 train 3.9276 , allloss: 3.9276, dt: 702.74ms, fracRes: 0.3098, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9612, norm(y): 0.9938, norm:0.3928, tok/sec: 186515.02, flops:163.36, batch-reuse:1
@ 2343 train 4.0042 , allloss: 4.0042, dt: 707.92ms, fracRes: 0.3067, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9555, norm(y): 0.9941, norm:0.3658, tok/sec: 185149.72, flops:162.16, batch-reuse:1
@ 2344 train 4.0583 , allloss: 4.0583, dt: 704.51ms, fracRes: 0.3078, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9545, norm(y): 0.9941, norm:0.3946, tok/sec: 186047.99, flops:162.95, batch-reuse:1
@ 2345 train 3.9338 , allloss: 3.9338, dt: 697.20ms, fracRes: 0.3133, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9541, norm(y): 0.9940, norm:0.3930, tok/sec: 187998.46, flops:164.66, batch-reuse:1
@ 2346 train 4.0246 , allloss: 4.0246, dt: 695.20ms, fracRes: 0.3148, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9558, norm(y): 0.9941, norm:0.3645, tok/sec: 188538.43, flops:165.13, batch-reuse:1
@ 2347 train 3.9462 , allloss: 3.9462, dt: 700.01ms, fracRes: 0.3185, norm(attn): 0.3926, norm(output): 0.8086, norm(x): 0.9490, norm(y): 0.9935, norm:0.3576, tok/sec: 187243.66, flops:164.00, batch-reuse:1
@ 2348 train 4.0387 , allloss: 4.0387, dt: 695.70ms, fracRes: 0.3144, norm(attn): 0.3965, norm(output): 0.8086, norm(x): 0.9536, norm(y): 0.9939, norm:0.3608, tok/sec: 188403.20, flops:165.01, batch-reuse:1
@ 2349 train 4.0675 , allloss: 4.0675, dt: 694.36ms, fracRes: 0.3077, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9587, norm(y): 0.9947, norm:0.3870, tok/sec: 188765.59, flops:165.33, batch-reuse:1
@ 2350 train 3.9552 , allloss: 3.9552, dt: 694.73ms, fracRes: 0.3135, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9561, norm(y): 0.9939, norm:0.3511, tok/sec: 188666.28, flops:165.24, batch-reuse:1
@ 2351 train 4.0733 , allloss: 4.0733, dt: 685.89ms, fracRes: 0.3095, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9561, norm(y): 0.9943, norm:0.3630, tok/sec: 191098.24, flops:167.37, batch-reuse:1
@ 2352 train 4.0083 , allloss: 4.0083, dt: 697.86ms, fracRes: 0.3135, norm(attn): 0.4023, norm(output): 0.8164, norm(x): 0.9588, norm(y): 0.9943, norm:0.4026, tok/sec: 187818.62, flops:164.50, batch-reuse:1
@ 2353 train 3.9878 , allloss: 3.9878, dt: 696.29ms, fracRes: 0.3134, norm(attn): 0.4023, norm(output): 0.8125, norm(x): 0.9585, norm(y): 0.9940, norm:0.3896, tok/sec: 188243.98, flops:164.87, batch-reuse:1
@ 2354 train 4.0491 , allloss: 4.0491, dt: 695.12ms, fracRes: 0.3158, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9626, norm(y): 0.9941, norm:0.3764, tok/sec: 188558.99, flops:165.15, batch-reuse:1
@ 2355 train 3.9611 , allloss: 3.9611, dt: 695.85ms, fracRes: 0.3146, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9584, norm(y): 0.9939, norm:0.3774, tok/sec: 188361.82, flops:164.98, batch-reuse:1
@ 2356 train 4.1401 , allloss: 4.1401, dt: 698.67ms, fracRes: 0.3108, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9561, norm(y): 0.9944, norm:0.3865, tok/sec: 187602.44, flops:164.31, batch-reuse:1
@ 2357 train 4.0596 , allloss: 4.0596, dt: 689.74ms, fracRes: 0.3072, norm(attn): 0.4023, norm(output): 0.8125, norm(x): 0.9558, norm(y): 0.9944, norm:0.3964, tok/sec: 190031.17, flops:166.44, batch-reuse:1
@ 2358 train 4.0467 , allloss: 4.0467, dt: 709.42ms, fracRes: 0.3100, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9618, norm(y): 0.9944, norm:0.4192, tok/sec: 184759.14, flops:161.82, batch-reuse:1
@ 2359 train 4.0099 , allloss: 4.0099, dt: 713.43ms, fracRes: 0.3159, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9583, norm(y): 0.9942, norm:0.4473, tok/sec: 183720.61, flops:160.91, batch-reuse:1
@ 2360 train 4.0748 , allloss: 4.0748, dt: 710.68ms, fracRes: 0.3188, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9590, norm(y): 0.9941, norm:0.3793, tok/sec: 184431.81, flops:161.54, batch-reuse:1
@ 2361 train 4.0255 , allloss: 4.0255, dt: 705.57ms, fracRes: 0.3166, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9599, norm(y): 0.9941, norm:0.4080, tok/sec: 185768.11, flops:162.71, batch-reuse:1
@ 2362 train 4.0163 , allloss: 4.0163, dt: 697.17ms, fracRes: 0.3107, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9533, norm(y): 0.9941, norm:0.3689, tok/sec: 188004.89, flops:164.67, batch-reuse:1
@ 2363 train 4.0728 , allloss: 4.0728, dt: 692.51ms, fracRes: 0.3045, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9504, norm(y): 0.9947, norm:0.4007, tok/sec: 189269.97, flops:165.77, batch-reuse:1
@ 2364 train 3.9886 , allloss: 3.9886, dt: 690.60ms, fracRes: 0.3052, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9499, norm(y): 0.9943, norm:0.4143, tok/sec: 189794.86, flops:166.23, batch-reuse:1
@ 2365 train 4.0015 , allloss: 4.0015, dt: 697.10ms, fracRes: 0.3062, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9516, norm(y): 0.9943, norm:0.3927, tok/sec: 188023.54, flops:164.68, batch-reuse:1
@ 2366 train 4.0272 , allloss: 4.0272, dt: 698.47ms, fracRes: 0.3103, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9510, norm(y): 0.9942, norm:0.3917, tok/sec: 187656.55, flops:164.36, batch-reuse:1
@ 2367 train 3.9568 , allloss: 3.9568, dt: 692.90ms, fracRes: 0.3115, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9479, norm(y): 0.9941, norm:0.4178, tok/sec: 189163.29, flops:165.68, batch-reuse:1
@ 2368 train 3.8220 , allloss: 3.8220, dt: 682.08ms, fracRes: 0.3124, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9493, norm(y): 0.9937, norm:0.3709, tok/sec: 192166.07, flops:168.31, batch-reuse:1
@ 2369 train 3.8923 , allloss: 3.8923, dt: 693.20ms, fracRes: 0.3105, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9482, norm(y): 0.9939, norm:0.4069, tok/sec: 189081.64, flops:165.61, batch-reuse:1
@ 2370 train 3.9267 , allloss: 3.9267, dt: 704.26ms, fracRes: 0.3071, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9489, norm(y): 0.9941, norm:0.4337, tok/sec: 186112.80, flops:163.01, batch-reuse:1
@ 2371 train 3.7826 , allloss: 3.7826, dt: 699.99ms, fracRes: 0.3167, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9529, norm(y): 0.9934, norm:0.3542, tok/sec: 187247.87, flops:164.00, batch-reuse:1
@ 2372 train 3.8338 , allloss: 3.8338, dt: 704.36ms, fracRes: 0.3130, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9541, norm(y): 0.9939, norm:0.3716, tok/sec: 186086.72, flops:162.99, batch-reuse:1
@ 2373 train 3.9295 , allloss: 3.9295, dt: 715.89ms, fracRes: 0.3147, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9544, norm(y): 0.9940, norm:0.3833, tok/sec: 183089.17, flops:160.36, batch-reuse:1
@ 2374 train 3.8698 , allloss: 3.8698, dt: 714.88ms, fracRes: 0.3132, norm(attn): 0.4023, norm(output): 0.8125, norm(x): 0.9541, norm(y): 0.9940, norm:0.3667, tok/sec: 183347.95, flops:160.59, batch-reuse:1
@ 2375 train 3.9249 , allloss: 3.9249, dt: 704.60ms, fracRes: 0.3160, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9511, norm(y): 0.9938, norm:0.3580, tok/sec: 186023.06, flops:162.93, batch-reuse:1
@ 2376 train 3.9470 , allloss: 3.9470, dt: 689.69ms, fracRes: 0.3117, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9538, norm(y): 0.9943, norm:0.3672, tok/sec: 190043.79, flops:166.45, batch-reuse:1
@ 2377 train 3.8704 , allloss: 3.8704, dt: 692.73ms, fracRes: 0.3119, norm(attn): 0.4043, norm(output): 0.8125, norm(x): 0.9535, norm(y): 0.9941, norm:0.3662, tok/sec: 189211.73, flops:165.72, batch-reuse:1
@ 2378 train 3.8778 , allloss: 3.8778, dt: 696.74ms, fracRes: 0.3143, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.9573, norm(y): 0.9939, norm:0.3567, tok/sec: 188122.94, flops:164.77, batch-reuse:1
@ 2379 train 3.8520 , allloss: 3.8520, dt: 694.26ms, fracRes: 0.3165, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9555, norm(y): 0.9937, norm:0.3477, tok/sec: 188793.27, flops:165.36, batch-reuse:1
@ 2380 train 3.9426 , allloss: 3.9426, dt: 687.02ms, fracRes: 0.3050, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9611, norm(y): 0.9941, norm:0.6505, tok/sec: 190783.43, flops:167.10, batch-reuse:1
@ 2381 train 3.9737 , allloss: 3.9737, dt: 684.07ms, fracRes: 0.3127, norm(attn): 0.4023, norm(output): 0.8125, norm(x): 0.9586, norm(y): 0.9944, norm:0.3943, tok/sec: 191605.36, flops:167.82, batch-reuse:1
@ 2382 train 3.9389 , allloss: 3.9389, dt: 694.39ms, fracRes: 0.3148, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9565, norm(y): 0.9942, norm:0.3984, tok/sec: 188759.69, flops:165.33, batch-reuse:1
@ 2383 train 3.8814 , allloss: 3.8814, dt: 685.06ms, fracRes: 0.3174, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9517, norm(y): 0.9937, norm:0.3745, tok/sec: 191328.75, flops:167.58, batch-reuse:1
@ 2384 train 3.8922 , allloss: 3.8922, dt: 698.28ms, fracRes: 0.3160, norm(attn): 0.3984, norm(output): 0.8086, norm(x): 0.9536, norm(y): 0.9937, norm:0.3751, tok/sec: 187706.91, flops:164.40, batch-reuse:1
@ 2385 train 3.8760 , allloss: 3.8760, dt: 696.42ms, fracRes: 0.3166, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9541, norm(y): 0.9939, norm:0.3948, tok/sec: 188209.44, flops:164.84, batch-reuse:1
@ 2386 train 3.8400 , allloss: 3.8400, dt: 710.15ms, fracRes: 0.3177, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9552, norm(y): 0.9938, norm:0.3923, tok/sec: 184568.96, flops:161.66, batch-reuse:1
@ 2387 train 3.9057 , allloss: 3.9057, dt: 696.25ms, fracRes: 0.3179, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9590, norm(y): 0.9938, norm:0.3836, tok/sec: 188254.75, flops:164.88, batch-reuse:1
@ 2388 train 3.9317 , allloss: 3.9317, dt: 688.53ms, fracRes: 0.3150, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9613, norm(y): 0.9944, norm:0.3906, tok/sec: 190364.00, flops:166.73, batch-reuse:1
@ 2389 train 3.8809 , allloss: 3.8809, dt: 688.20ms, fracRes: 0.3232, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9603, norm(y): 0.9939, norm:0.3878, tok/sec: 190457.06, flops:166.81, batch-reuse:1
@ 2390 train 3.9137 , allloss: 3.9137, dt: 690.12ms, fracRes: 0.3206, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9627, norm(y): 0.9940, norm:0.4120, tok/sec: 189926.07, flops:166.35, batch-reuse:1
@ 2391 train 3.9626 , allloss: 3.9626, dt: 695.78ms, fracRes: 0.3136, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9585, norm(y): 0.9940, norm:0.4345, tok/sec: 188382.02, flops:165.00, batch-reuse:1
@ 2392 train 3.9845 , allloss: 3.9845, dt: 692.30ms, fracRes: 0.3192, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9626, norm(y): 0.9941, norm:0.3476, tok/sec: 189329.41, flops:165.83, batch-reuse:1
@ 2393 train 4.0028 , allloss: 4.0028, dt: 695.26ms, fracRes: 0.3142, norm(attn): 0.3965, norm(output): 0.8164, norm(x): 0.9641, norm(y): 0.9947, norm:0.4305, tok/sec: 188522.65, flops:165.12, batch-reuse:1
@ 2394 train 3.9232 , allloss: 3.9232, dt: 694.09ms, fracRes: 0.3205, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9605, norm(y): 0.9939, norm:0.3924, tok/sec: 188840.81, flops:165.40, batch-reuse:1
@ 2395 train 3.8578 , allloss: 3.8578, dt: 690.57ms, fracRes: 0.3229, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9640, norm(y): 0.9935, norm:0.3731, tok/sec: 189802.86, flops:166.24, batch-reuse:1
@ 2396 train 3.9022 , allloss: 3.9022, dt: 689.88ms, fracRes: 0.3251, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9637, norm(y): 0.9936, norm:0.4046, tok/sec: 189993.08, flops:166.41, batch-reuse:1
@ 2397 train 3.8693 , allloss: 3.8693, dt: 684.69ms, fracRes: 0.3208, norm(attn): 0.4023, norm(output): 0.8125, norm(x): 0.9619, norm(y): 0.9939, norm:0.4263, tok/sec: 191432.29, flops:167.67, batch-reuse:1
@ 2398 train 3.9134 , allloss: 3.9134, dt: 690.82ms, fracRes: 0.3155, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9646, norm(y): 0.9941, norm:0.3733, tok/sec: 189733.36, flops:166.18, batch-reuse:1
@ 2399 train 3.8940 , allloss: 3.8940, dt: 696.94ms, fracRes: 0.3130, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9614, norm(y): 0.9942, norm:0.3993, tok/sec: 188067.92, flops:164.72, batch-reuse:1
@ 2400 train 3.8728 , allloss: 3.8728, dt: 695.56ms, fracRes: 0.3181, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9625, norm(y): 0.9941, norm:0.3609, tok/sec: 188440.39, flops:165.05, batch-reuse:1
@ 2401 train 3.9655 , allloss: 3.9655, dt: 699.94ms, fracRes: 0.3207, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9607, norm(y): 0.9940, norm:0.3606, tok/sec: 187261.71, flops:164.01, batch-reuse:1
@ 2402 train 3.9111 , allloss: 3.9111, dt: 696.04ms, fracRes: 0.3211, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9631, norm(y): 0.9937, norm:0.3725, tok/sec: 188310.78, flops:164.93, batch-reuse:1
@ 2403 train 3.7955 , allloss: 3.7955, dt: 698.80ms, fracRes: 0.3221, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9688, norm(y): 0.9937, norm:0.3740, tok/sec: 187566.53, flops:164.28, batch-reuse:1
@ 2404 train 3.8234 , allloss: 3.8234, dt: 701.49ms, fracRes: 0.3275, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9668, norm(y): 0.9937, norm:0.3362, tok/sec: 186848.52, flops:163.65, batch-reuse:1
@ 2405 train 3.9022 , allloss: 3.9022, dt: 710.04ms, fracRes: 0.3240, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9616, norm(y): 0.9937, norm:0.3547, tok/sec: 184597.90, flops:161.68, batch-reuse:1
@ 2406 train 3.8593 , allloss: 3.8593, dt: 683.33ms, fracRes: 0.3231, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9601, norm(y): 0.9939, norm:0.3619, tok/sec: 191812.40, flops:168.00, batch-reuse:1
@ 2407 train 3.8344 , allloss: 3.8344, dt: 692.45ms, fracRes: 0.3204, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9597, norm(y): 0.9941, norm:0.3792, tok/sec: 189286.13, flops:165.79, batch-reuse:1
@ 2408 train 3.8796 , allloss: 3.8796, dt: 696.47ms, fracRes: 0.3241, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9593, norm(y): 0.9936, norm:0.3655, tok/sec: 188195.59, flops:164.83, batch-reuse:1
@ 2409 train 3.8708 , allloss: 3.8708, dt: 692.94ms, fracRes: 0.3251, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9622, norm(y): 0.9933, norm:0.3781, tok/sec: 189154.11, flops:165.67, batch-reuse:1
@ 2410 train 3.8215 , allloss: 3.8215, dt: 702.48ms, fracRes: 0.3247, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9622, norm(y): 0.9934, norm:0.3738, tok/sec: 186584.65, flops:163.42, batch-reuse:1
@ 2411 train 3.9440 , allloss: 3.9440, dt: 705.28ms, fracRes: 0.3264, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9640, norm(y): 0.9941, norm:0.4014, tok/sec: 185843.53, flops:162.77, batch-reuse:1
@ 2412 train 3.9079 , allloss: 3.9079, dt: 691.83ms, fracRes: 0.3212, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9639, norm(y): 0.9941, norm:0.3887, tok/sec: 189455.92, flops:165.94, batch-reuse:1
@ 2413 train 3.9713 , allloss: 3.9713, dt: 697.83ms, fracRes: 0.3211, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9657, norm(y): 0.9942, norm:0.4191, tok/sec: 187827.48, flops:164.51, batch-reuse:1
@ 2414 train 3.9030 , allloss: 3.9030, dt: 695.00ms, fracRes: 0.3132, norm(attn): 0.3965, norm(output): 0.8164, norm(x): 0.9591, norm(y): 0.9943, norm:0.3997, tok/sec: 188593.34, flops:165.18, batch-reuse:1
@ 2415 train 4.0378 , allloss: 4.0378, dt: 697.20ms, fracRes: 0.3114, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9662, norm(y): 0.9946, norm:0.4745, tok/sec: 187996.79, flops:164.66, batch-reuse:1
@ 2416 train 3.9923 , allloss: 3.9923, dt: 705.85ms, fracRes: 0.3134, norm(attn): 0.4062, norm(output): 0.8164, norm(x): 0.9638, norm(y): 0.9945, norm:0.4390, tok/sec: 185695.07, flops:162.64, batch-reuse:1
@ 2417 train 4.0315 , allloss: 4.0315, dt: 705.22ms, fracRes: 0.3203, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9728, norm(y): 0.9946, norm:0.4639, tok/sec: 185858.42, flops:162.79, batch-reuse:1
@ 2418 train 4.0642 , allloss: 4.0642, dt: 700.27ms, fracRes: 0.3243, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9694, norm(y): 0.9942, norm:0.4808, tok/sec: 187173.28, flops:163.94, batch-reuse:1
@ 2419 train 4.0453 , allloss: 4.0453, dt: 688.72ms, fracRes: 0.3228, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9744, norm(y): 0.9942, norm:0.4584, tok/sec: 190312.01, flops:166.69, batch-reuse:1
@ 2420 train 4.0281 , allloss: 4.0281, dt: 703.18ms, fracRes: 0.3281, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9733, norm(y): 0.9938, norm:0.4314, tok/sec: 186400.05, flops:163.26, batch-reuse:1
@ 2421 train 4.0498 , allloss: 4.0498, dt: 702.81ms, fracRes: 0.3242, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9685, norm(y): 0.9942, norm:0.4232, tok/sec: 186495.85, flops:163.34, batch-reuse:1
@ 2422 train 4.0543 , allloss: 4.0543, dt: 692.87ms, fracRes: 0.3247, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9672, norm(y): 0.9942, norm:0.4563, tok/sec: 189172.27, flops:165.69, batch-reuse:1
@ 2423 train 4.1753 , allloss: 4.1753, dt: 705.42ms, fracRes: 0.3164, norm(attn): 0.4023, norm(output): 0.8164, norm(x): 0.9658, norm(y): 0.9951, norm:0.4038, tok/sec: 185806.28, flops:162.74, batch-reuse:1
@ 2424 train 4.0409 , allloss: 4.0409, dt: 693.33ms, fracRes: 0.3097, norm(attn): 0.4062, norm(output): 0.8203, norm(x): 0.9635, norm(y): 0.9955, norm:0.4796, tok/sec: 189046.79, flops:165.58, batch-reuse:1
@ 2425 train 3.9814 , allloss: 3.9814, dt: 681.32ms, fracRes: 0.3138, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9667, norm(y): 0.9946, norm:0.4154, tok/sec: 192379.85, flops:168.50, batch-reuse:1
@ 2426 train 3.9783 , allloss: 3.9783, dt: 687.02ms, fracRes: 0.3236, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9655, norm(y): 0.9937, norm:0.4837, tok/sec: 190783.90, flops:167.10, batch-reuse:1
@ 2427 train 4.1752 , allloss: 4.1752, dt: 685.97ms, fracRes: 0.3244, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9697, norm(y): 0.9944, norm:0.4152, tok/sec: 191075.46, flops:167.35, batch-reuse:1
@ 2428 train 4.0677 , allloss: 4.0677, dt: 691.15ms, fracRes: 0.3213, norm(attn): 0.4062, norm(output): 0.8203, norm(x): 0.9720, norm(y): 0.9947, norm:0.4649, tok/sec: 189643.23, flops:166.10, batch-reuse:1
@ 2429 train 4.0169 , allloss: 4.0169, dt: 697.37ms, fracRes: 0.3226, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9661, norm(y): 0.9944, norm:0.4881, tok/sec: 187950.96, flops:164.62, batch-reuse:1
@ 2430 train 4.0592 , allloss: 4.0592, dt: 695.92ms, fracRes: 0.3191, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9598, norm(y): 0.9946, norm:0.4476, tok/sec: 188344.39, flops:164.96, batch-reuse:1
@ 2431 train 4.0654 , allloss: 4.0654, dt: 699.74ms, fracRes: 0.3189, norm(attn): 0.4004, norm(output): 0.8125, norm(x): 0.9624, norm(y): 0.9947, norm:0.3775, tok/sec: 187315.37, flops:164.06, batch-reuse:1
@ 2432 train 3.9446 , allloss: 3.9446, dt: 702.83ms, fracRes: 0.3186, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9578, norm(y): 0.9943, norm:0.4243, tok/sec: 186493.06, flops:163.34, batch-reuse:1
@ 2433 train 4.0290 , allloss: 4.0290, dt: 689.47ms, fracRes: 0.3233, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9636, norm(y): 0.9943, norm:0.4041, tok/sec: 190104.57, flops:166.50, batch-reuse:1
@ 2434 train 4.0797 , allloss: 4.0797, dt: 705.65ms, fracRes: 0.3195, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9663, norm(y): 0.9945, norm:0.3899, tok/sec: 185746.83, flops:162.69, batch-reuse:1
@ 2435 train 4.1228 , allloss: 4.1228, dt: 703.17ms, fracRes: 0.3236, norm(attn): 0.3926, norm(output): 0.8203, norm(x): 0.9744, norm(y): 0.9948, norm:0.4114, tok/sec: 186401.38, flops:163.26, batch-reuse:1
@ 2436 train 4.0196 , allloss: 4.0196, dt: 696.13ms, fracRes: 0.3220, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9702, norm(y): 0.9947, norm:0.4035, tok/sec: 188287.37, flops:164.91, batch-reuse:1
@ 2437 train 3.9520 , allloss: 3.9520, dt: 693.87ms, fracRes: 0.3212, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9671, norm(y): 0.9944, norm:0.3990, tok/sec: 188898.95, flops:165.45, batch-reuse:1
@ 2438 train 3.9861 , allloss: 3.9861, dt: 689.30ms, fracRes: 0.3211, norm(attn): 0.3906, norm(output): 0.8203, norm(x): 0.9707, norm(y): 0.9946, norm:0.3919, tok/sec: 190153.43, flops:166.55, batch-reuse:1
@ 2439 train 4.0611 , allloss: 4.0611, dt: 687.37ms, fracRes: 0.3266, norm(attn): 0.3926, norm(output): 0.8242, norm(x): 0.9750, norm(y): 0.9943, norm:0.3689, tok/sec: 190685.76, flops:167.01, batch-reuse:1
@ 2440 train 3.9896 , allloss: 3.9896, dt: 693.93ms, fracRes: 0.3197, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9788, norm(y): 0.9954, norm:0.5655, tok/sec: 188884.93, flops:165.44, batch-reuse:1
@ 2441 train 3.9706 , allloss: 3.9706, dt: 685.93ms, fracRes: 0.3290, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9750, norm(y): 0.9945, norm:0.5023, tok/sec: 191086.15, flops:167.36, batch-reuse:1
@ 2442 train 3.9903 , allloss: 3.9903, dt: 700.54ms, fracRes: 0.3330, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9770, norm(y): 0.9941, norm:0.4338, tok/sec: 187100.60, flops:163.87, batch-reuse:1
@ 2443 train 4.1050 , allloss: 4.1050, dt: 702.03ms, fracRes: 0.3262, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9702, norm(y): 0.9941, norm:0.3773, tok/sec: 186704.03, flops:163.53, batch-reuse:1
@ 2444 train 3.9933 , allloss: 3.9933, dt: 701.53ms, fracRes: 0.3198, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9651, norm(y): 0.9944, norm:0.4022, tok/sec: 186837.28, flops:163.64, batch-reuse:1
@ 2445 train 3.9738 , allloss: 3.9738, dt: 692.98ms, fracRes: 0.3212, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9673, norm(y): 0.9945, norm:0.3713, tok/sec: 189142.66, flops:165.66, batch-reuse:1
@ 2446 train 4.2110 , allloss: 4.2110, dt: 692.24ms, fracRes: 0.3157, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9689, norm(y): 0.9951, norm:0.3902, tok/sec: 189346.04, flops:165.84, batch-reuse:1
@ 2447 train 4.0878 , allloss: 4.0878, dt: 690.71ms, fracRes: 0.3175, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9713, norm(y): 0.9951, norm:0.4351, tok/sec: 189765.25, flops:166.21, batch-reuse:1
@ 2448 train 4.0350 , allloss: 4.0350, dt: 690.13ms, fracRes: 0.3206, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9758, norm(y): 0.9951, norm:0.3834, tok/sec: 189923.05, flops:166.35, batch-reuse:1
@ 2449 train 4.0235 , allloss: 4.0235, dt: 695.71ms, fracRes: 0.3253, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9729, norm(y): 0.9947, norm:0.3817, tok/sec: 188401.58, flops:165.01, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0106, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0126, 0.5664, 0.4199, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0222, 0.2637, 0.3262, 0.3867, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0103, 0.1992, 0.5625, 0.1602, 0.0669, 0.0000, 0.0000, 0.0000],
        [0.0095, 0.0767, 0.7305, 0.1167, 0.0327, 0.0320, 0.0000, 0.0000],
        [0.0101, 0.1748, 0.4258, 0.1689, 0.1074, 0.0654, 0.0471, 0.0000],
        [0.0074, 0.1387, 0.1748, 0.1025, 0.1992, 0.1260, 0.1924, 0.0596]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0199, -0.6523, -0.7109, -0.6914, -0.8594, -0.7266, -0.5508, -0.2432],
        [-0.0732,  4.4688,  5.1250,  3.4219,  4.7812,  3.5625,  3.6094,  1.9531],
        [-0.1025,  3.7031,  3.4062,  3.8438,  5.2500,  3.9531,  3.8906,  2.4531],
        [-0.0781,  2.3906,  2.6094,  2.7812,  4.1562,  3.7031,  2.5312,  1.8203],
        [-0.0195,  2.9375,  3.9844,  2.7188,  1.8516,  2.5156,  3.0469,  1.5000],
        [-0.0134,  2.0781,  4.3438,  2.5000,  1.2266,  1.2109,  3.0000,  1.9062],
        [-0.0554,  2.7969,  3.6875,  2.7656,  2.3125,  1.8203,  1.4922,  1.0234],
        [-0.0486,  2.8750,  3.1094,  2.5781,  3.2344,  2.7812,  3.2031,  2.0312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7450],
        [0.2403],
        [0.1386],
        [0.2148],
        [0.2386],
        [0.1136],
        [0.1285],
        [0.1845],
        [0.0752],
        [0.1480],
        [0.0622],
        [0.1221],
        [0.1197],
        [0.0489]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0055,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0034,     0.0017,     0.0197,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0072,     0.0220,     0.0005,     0.0041,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0042,     0.0035,     0.0015,     0.0059,     0.0063,     0.0000,     0.0000],
        [    0.9531,     0.0062,     0.0072,     0.0003,     0.0009,     0.0013,     0.0305,     0.0000],
        [    0.7344,     0.0029,     0.0013,     0.0007,     0.0020,     0.0004,     0.0054,     0.2539]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0008,     -0.1025,     -0.0583,     -0.2617,     -0.2305,     -0.1216,     -0.1846,     -0.0439],
        [     0.0045,     -4.9375,     -0.8867,     -7.0938,     -8.7500,     -7.6875,     -8.8125,     -7.5938],
        [    -0.0033,     -5.1875,     -7.2500,     -0.4531,     -6.1250,     -7.4062,     -6.4062,     -6.7500],
        [    -0.0498,     -5.7188,     -6.4062,     -3.9531,      1.0625,     -5.4062,     -5.5938,     -3.9219],
        [    -0.0554,     -4.9375,     -3.8438,     -7.5938,     -5.5312,     -1.6562,     -5.9375,     -1.6719],
        [    -0.0208,     -5.4688,     -5.6562,     -6.5000,     -5.1250,     -5.0625,     -0.6211,     -1.1016],
        [    -0.0811,     -5.1250,     -4.9688,     -8.0000,     -7.0000,     -6.6875,     -3.5156,      0.9219],
        [    -0.0869,     -5.6250,     -6.4062,     -6.9688,     -5.9688,     -7.7188,     -5.0000,     -1.1484]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8105],
        [0.9154],
        [0.8480],
        [0.8278],
        [0.7839],
        [0.7453],
        [0.7533],
        [0.6131],
        [0.7791],
        [0.5802],
        [0.7738],
        [0.6954],
        [0.5394],
        [0.7381]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0146,     0.5742,     0.4102,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0094,     0.5898,     0.2656,     0.1377,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0030,     0.4570,     0.2363,     0.0776,     0.2266,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.3652,     0.1660,     0.0640,     0.1992,     0.2051,     0.0000,     0.0000],
        [    0.0009,     0.2812,     0.1445,     0.0598,     0.1680,     0.1855,     0.1602,     0.0000],
        [    0.0042,     0.1768,     0.1108,     0.0613,     0.1670,     0.1855,     0.1621,     0.1318]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0439, -0.3086, -0.2812, -0.2793, -0.2344, -0.3184, -0.3027, -0.3516],
        [-0.0825,  6.0000,  5.3438,  4.2188,  5.4375,  5.7188,  5.6250,  5.0312],
        [-0.0110,  3.6562,  3.3281,  2.4844,  3.5625,  3.5469,  3.5781,  3.1719],
        [-0.0203,  4.1250,  3.3125,  2.6719,  3.6875,  3.7812,  3.9531,  3.5000],
        [-0.0145,  5.0312,  4.3438,  3.2500,  4.3125,  4.5312,  4.4688,  4.0625],
        [-0.0630,  5.3750,  4.5938,  3.6406,  4.7812,  4.8125,  4.8125,  4.5938],
        [-0.1377,  5.6250,  4.9688,  4.0938,  5.1250,  5.2188,  5.0625,  5.0000],
        [-0.0508,  3.6875,  3.2188,  2.6250,  3.6250,  3.7344,  3.5938,  3.3906]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8732],
        [0.7227],
        [0.6494],
        [0.6538],
        [0.6370],
        [0.5657],
        [0.5580],
        [0.5278],
        [0.5450],
        [0.5307],
        [0.5276],
        [0.4950],
        [0.4908],
        [0.5154]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9961, 0.0054, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.3340, 0.4141, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.1226, 0.5625, 0.2344, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.0493, 0.3242, 0.2754, 0.0391, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0854, 0.1641, 0.3633, 0.1689, 0.1455, 0.0000, 0.0000],
        [0.2090, 0.0972, 0.2305, 0.2451, 0.0549, 0.1045, 0.0591, 0.0000],
        [0.0119, 0.0432, 0.1172, 0.1514, 0.0386, 0.0952, 0.1367, 0.4062]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0090,     -0.6641,     -0.5430,     -0.6172,     -0.6797,     -0.6445,     -0.7695,     -0.7305],
        [     0.0112,     -5.1875,     -2.1562,     -2.5781,     -4.2500,     -3.5312,     -4.3125,     -2.9219],
        [    -0.0366,      0.2393,      0.4551,      1.3984,      0.6172,      0.9102,      1.3359,      2.6250],
        [    -0.0889,      0.3145,      1.8359,      0.9609,      0.9492,      2.1562,      1.8750,      3.2500],
        [    -0.0688,     -1.9141,     -0.0291,     -0.1914,     -2.1406,      0.1484,     -0.5234,      1.0625],
        [    -0.0845,      0.0781,      0.7305,      1.5234,      0.7617,      0.6094,      1.5625,      3.5469],
        [    -0.0981,     -0.8633,      0.0018,      0.0630,     -1.4297,     -0.7891,     -1.3594,      0.9961],
        [    -0.1387,      1.1484,      2.1406,      2.4062,      1.0312,      1.9375,      2.2969,      3.3906]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7010],
        [0.3601],
        [0.2530],
        [0.3794],
        [0.3288],
        [0.2625],
        [0.2103],
        [0.2066],
        [0.1808],
        [0.2054],
        [0.1870],
        [0.2088],
        [0.1980],
        [0.1889]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9141,     0.0840,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0483,     0.8867,     0.0669,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0134,     0.8516,     0.0549,     0.0801,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.0410,     0.0027,     0.0143,     0.9375,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0007,     0.0000,     0.0000,     0.7734,     0.2275,     0.0000,     0.0000],
        [    0.0635,     0.0991,     0.0011,     0.0007,     0.0483,     0.4668,     0.3203,     0.0000],
        [    0.0139,     0.0381,     0.0001,     0.0001,     0.0090,     0.0361,     0.7734,     0.1299]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0031,     -0.1758,     -0.3105,     -0.3535,     -0.1846,     -0.1660,     -0.2471,     -0.2949],
        [     0.0669,     -2.3281,     -8.3125,     -8.9375,     -3.4062,     -2.7969,     -3.8125,     -4.9688],
        [     0.0226,      2.9375,      0.3477,      0.6914,     -1.0156,     -2.2969,     -2.5781,     -2.7812],
        [    -0.0152,      4.1250,      1.3984,      1.7734,      1.1641,      1.2500,     -0.1377,     -1.0625],
        [     0.0874,      2.2188,     -0.5117,      1.1641,      5.3438,      3.4844,      0.7031,     -0.6055],
        [     0.0791,      1.7188,     -3.0156,     -3.1250,      8.7500,      7.5625,      1.8203,     -1.4375],
        [     0.0023,      0.4453,     -4.0312,     -4.5000,     -0.2734,      1.9922,      1.6172,     -0.8086],
        [    -0.0444,      0.9648,     -4.7812,     -5.0312,     -0.4688,      0.9180,      3.9844,      2.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8444],
        [0.5068],
        [0.4579],
        [0.4755],
        [0.4869],
        [0.4787],
        [0.4424],
        [0.3866],
        [0.3648],
        [0.3115],
        [0.3368],
        [0.3397],
        [0.2919],
        [0.2714]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0203,     -0.4805,     -0.5742,     -0.5820,     -0.7070,     -0.3770,     -0.6758,     -0.7227],
        [    -0.5195,    -12.5000,    -14.5000,    -15.1250,    -16.6250,    -12.0625,    -16.1250,    -17.5000],
        [    -0.7227,    -16.6250,    -19.8750,    -20.6250,    -23.5000,    -16.3750,    -22.0000,    -25.1250],
        [    -0.4766,    -11.5625,    -14.0625,    -14.5000,    -18.5000,    -11.5000,    -16.3750,    -18.2500],
        [    -0.4688,    -13.2500,    -15.7500,    -15.6250,    -17.0000,    -11.7500,    -17.8750,    -17.8750],
        [    -0.4531,    -12.5000,    -14.4375,    -14.6250,    -14.5000,    -10.8125,    -15.6250,    -16.5000],
        [    -0.5977,    -15.0625,    -17.7500,    -19.2500,    -21.1250,    -13.5625,    -19.5000,    -20.7500],
        [    -0.5547,    -13.9375,    -17.1250,    -17.3750,    -18.8750,    -12.1250,    -18.5000,    -18.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7938],
        [0.6478],
        [0.5554],
        [0.6390],
        [0.6924],
        [0.5868],
        [0.5498],
        [0.5961],
        [0.5419],
        [0.5784],
        [0.5426],
        [0.5577],
        [0.5525],
        [0.4922]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9688,     0.0315,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6055,     0.2021,     0.1089,     0.0854,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ -0.0574,  -0.8164,  -0.9609,  -0.9531,  -1.3359,  -0.6016,  -0.9141,  -0.9805],
        [ -0.6953,  -8.3750, -13.2500, -13.5000, -14.6250,  -7.1562, -10.2500, -12.0000],
        [  0.6055,  10.9375,   7.5312,   7.2188,  18.0000,   5.3750,  11.6250,   8.0625],
        [ -0.2441,  -1.3359,  -1.9531,  -2.2031,  -5.6875,  -3.3438,  -2.8594,  -5.8125],
        [ -1.3125, -18.8750, -23.1250, -22.2500, -29.1250, -13.3750, -20.5000, -22.0000],
        [ -1.1562, -15.9375, -19.0000, -18.0000, -23.1250,  -9.6875, -16.1250, -17.1250],
        [ -1.1250, -15.2500, -19.6250, -18.6250, -24.0000, -11.4375, -17.1250, -18.8750],
        [ -1.1484, -15.5000, -20.6250, -20.2500, -26.3750, -11.4375, -18.2500, -19.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7340],
        [0.3907],
        [0.3522],
        [0.8774],
        [0.6960],
        [0.7735],
        [0.7106],
        [0.7027],
        [0.6133],
        [0.7171],
        [0.1165],
        [0.7052],
        [0.7082],
        [0.5768]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0054,     -0.7461,     -0.7109,     -0.9062,     -0.8164,     -0.6602,     -0.7812,     -0.9609],
        [    -0.2021,    -31.1250,    -29.3750,    -36.0000,    -30.6250,    -25.5000,    -30.0000,    -38.0000],
        [    -0.1045,    -15.9375,    -17.5000,    -22.8750,    -17.0000,    -12.5625,    -17.1250,    -22.2500],
        [    -0.0791,    -10.3125,    -11.1875,    -16.1250,    -12.1875,     -8.8125,    -12.1875,    -16.7500],
        [    -0.1475,    -20.5000,    -18.3750,    -23.6250,    -21.2500,    -18.1250,    -21.0000,    -23.8750],
        [    -0.2451,    -33.7500,    -31.6250,    -40.0000,    -35.7500,    -29.5000,    -34.0000,    -42.2500],
        [    -0.1592,    -22.6250,    -21.3750,    -27.1250,    -23.8750,    -19.0000,    -23.1250,    -27.7500],
        [    -0.1875,    -26.3750,    -25.1250,    -32.7500,    -28.8750,    -22.2500,    -27.3750,    -35.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9967],
        [0.6565],
        [0.5633],
        [0.9248],
        [0.9919],
        [0.9964],
        [0.9951],
        [0.9997],
        [0.9886],
        [0.9896],
        [0.8502],
        [0.9993],
        [0.9990],
        [0.8397]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0067,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7695,     0.2305,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6836,     0.1475,     0.1689,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.1089,     0.4648,     0.4102,     0.0117,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0001,     0.0001,     0.0004,     0.0005,     0.0000,     0.0000],
        [    0.8125,     0.0542,     0.0334,     0.0151,     0.0167,     0.0393,     0.0276,     0.0000],
        [    0.9688,     0.0045,     0.0098,     0.0046,     0.0027,     0.0037,     0.0058,     0.0007]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0014,     -0.0435,     -0.0688,     -0.0820,     -0.0466,     -0.0420,     -0.0481,     -0.0806],
        [     0.1152,      5.1250,      6.3125,      6.2812,      3.5469,      3.2500,      3.7500,      4.5312],
        [     0.1748,      9.3125,      8.1250,      8.2500,      6.9688,      6.9062,      7.2500,      7.6250],
        [     0.2617,     13.8125,     12.3125,     12.4375,     10.8125,     10.8750,     11.4375,     11.5000],
        [     0.0608,      3.0312,      4.5000,      4.3438,      0.8047,      1.9844,      1.9531,      1.8438],
        [    -0.2217,     -8.6875,     -9.1250,     -9.8125,     -8.1250,     -7.8438,     -8.1250,    -10.6875],
        [    -0.0996,     -2.8125,     -3.2812,     -4.0938,     -3.9844,     -3.1250,     -3.4844,     -5.3438],
        [    -0.1445,     -5.5000,     -4.7500,     -5.4688,     -6.0312,     -5.7188,     -5.2812,     -7.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.4384],
        [    0.0030],
        [    0.0001],
        [    0.7573],
        [    0.9151],
        [    0.9430],
        [    0.8494],
        [    1.0000],
        [    0.7745],
        [    0.9997],
        [    0.0048],
        [    0.9987],
        [    1.0000],
        [    0.2433]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2070,     0.2070,     0.5859,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1670,     0.0972,     0.3730,     0.3633,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0003,     0.0011,     0.0005,     0.0003,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0004,     0.0002,     0.0002,     0.0003,     0.0001,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0022,     -0.2891,     -0.2188,     -0.2451,     -0.2676,     -0.2695,     -0.2676,     -0.2891],
        [    -0.0786,    -12.0625,     -8.5000,     -9.1250,     -9.8750,    -10.1250,    -10.1250,    -11.3750],
        [    -0.0058,     -0.0062,      1.0312,      1.2500,     -0.3848,      0.2471,     -0.6758,     -0.7812],
        [    -0.0118,     -0.5508,      0.7930,      0.7656,     -1.0859,     -0.3887,     -1.5000,     -1.4375],
        [    -0.0593,     -8.2500,     -6.8750,     -7.6250,     -8.3125,     -7.7188,     -7.8125,     -8.5000],
        [    -0.2021,    -29.0000,    -22.8750,    -25.3750,    -25.8750,    -26.5000,    -25.6250,    -28.1250],
        [    -0.0723,     -9.8125,     -7.9375,     -8.7500,     -8.7500,     -8.2500,     -9.0000,     -9.1250],
        [    -0.1436,    -20.2500,    -16.2500,    -18.0000,    -18.8750,    -18.5000,    -18.3750,    -20.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7495],
        [0.2458],
        [0.2030],
        [0.4321],
        [1.0000],
        [0.5190],
        [0.7876],
        [0.9993],
        [0.8388],
        [1.0000],
        [0.2109],
        [1.0000],
        [1.0000],
        [0.2451]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9766, 0.0237, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6289, 0.1182, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.1494, 0.2949, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.1436, 0.2754, 0.2490, 0.1250, 0.0000, 0.0000, 0.0000],
        [0.8438, 0.0068, 0.0376, 0.0369, 0.0376, 0.0393, 0.0000, 0.0000],
        [0.1953, 0.0320, 0.0908, 0.0991, 0.0845, 0.4570, 0.0413, 0.0000],
        [0.2852, 0.0527, 0.1177, 0.1118, 0.0747, 0.2109, 0.0522, 0.0942]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0491,     -0.0488,     -0.0474,     -0.0459,     -0.0422,     -0.0557,     -0.0522],
        [    -0.0025,     -3.7188,     -1.6250,     -1.4844,     -0.8125,      0.9375,     -1.8984,     -0.6094],
        [    -0.0003,     -1.6719,     -0.9219,     -0.8867,     -0.8203,      0.4785,     -1.4766,     -0.6719],
        [    -0.0011,     -0.6016,      0.0840,      0.0417,     -0.1895,      0.9609,     -0.5859,      0.0859],
        [    -0.0024,     -0.3730,      0.2812,      0.1816,     -0.5078,      0.3066,     -0.5586,     -0.2344],
        [    -0.0028,     -4.8125,     -3.1094,     -3.1406,     -3.1094,     -3.0625,     -3.7500,     -3.3281],
        [    -0.0019,     -1.8125,     -0.7695,     -0.6797,     -0.8398,      0.8477,     -1.5547,     -0.5938],
        [    -0.0029,     -1.6875,     -0.8867,     -0.9414,     -1.3438,     -0.3027,     -1.7031,     -1.1094]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9046],
        [0.7230],
        [0.5047],
        [0.2483],
        [0.8564],
        [0.3258],
        [0.4460],
        [0.8610],
        [0.4105],
        [0.9580],
        [0.2601],
        [0.9587],
        [0.9714],
        [0.0795]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.3848,     0.6133,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.2773,     0.4688,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.2656,     0.4590,     0.2188,     0.0562,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.2715,     0.4395,     0.1787,     0.0356,     0.0752,     0.0000,     0.0000],
        [    0.0006,     0.2236,     0.4180,     0.1904,     0.0432,     0.0801,     0.0454,     0.0000],
        [    0.0002,     0.2256,     0.4395,     0.1719,     0.0304,     0.0603,     0.0337,     0.0383]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0058,     -0.0008,     -0.0081,     -0.0200,     -0.0121,     -0.0197,     -0.0178],
        [    -0.0087,      5.4688,      5.7812,      5.1875,      4.0938,      4.5625,      4.2812,      4.2812],
        [    -0.0087,      6.1250,      6.5938,      6.0625,      5.0000,      5.4062,      5.1250,      5.1562],
        [    -0.0099,      6.1562,      6.6875,      6.0625,      4.8438,      5.3125,      4.9375,      5.0000],
        [    -0.0111,      5.3125,      5.8750,      5.1250,      3.7656,      4.3438,      3.8125,      3.9688],
        [    -0.0123,      5.6875,      6.1875,      5.2812,      3.6719,      4.4062,      3.8125,      3.9062],
        [    -0.0121,      5.8438,      6.4688,      5.6875,      4.2188,      4.8125,      4.2500,      4.4062],
        [    -0.0140,      7.1250,      7.7812,      6.8438,      5.1250,      5.8125,      5.2188,      5.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2677],
        [0.0430],
        [0.0224],
        [0.0134],
        [0.4534],
        [0.0123],
        [0.0131],
        [0.1969],
        [0.0534],
        [0.2615],
        [0.0060],
        [0.1343],
        [0.3770],
        [0.0033]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(--------:0.0115イ:0.0082--------:0.0101イ:0.0085--------:0.0139 dst:0.0092 corrid:0.0033--------:0.0236)
--------
------
		(イ:0.0082--------:0.0101イ:0.0085--------:0.0139 dst:0.0092 corrid:0.0033--------:0.0236--------:0.0234)
------------------------------------------------------------------------------------------------------------------------
@ 2450 train 3.9812 , allloss: 3.9812, dt: 1112.86ms, fracRes: 0.3249, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.9687, norm(y): 0.9946, norm:0.3806, tok/sec: 117778.99, flops:103.16, batch-reuse:1
@ 2451 train 4.1236 , allloss: 4.1236, dt: 704.87ms, fracRes: 0.3237, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9726, norm(y): 0.9949, norm:0.4127, tok/sec: 185951.27, flops:162.87, batch-reuse:1
@ 2452 train 3.9216 , allloss: 3.9216, dt: 679.19ms, fracRes: 0.3231, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9747, norm(y): 0.9946, norm:0.4388, tok/sec: 192983.52, flops:169.03, batch-reuse:1
@ 2453 train 3.9763 , allloss: 3.9763, dt: 692.64ms, fracRes: 0.3244, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.9746, norm(y): 0.9948, norm:0.4282, tok/sec: 189236.28, flops:165.74, batch-reuse:1
@ 2454 train 3.9272 , allloss: 3.9272, dt: 691.10ms, fracRes: 0.3341, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9776, norm(y): 0.9942, norm:0.3897, tok/sec: 189657.10, flops:166.11, batch-reuse:1
@ 2455 train 4.0428 , allloss: 4.0428, dt: 701.22ms, fracRes: 0.3343, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9763, norm(y): 0.9941, norm:0.4324, tok/sec: 186919.17, flops:163.71, batch-reuse:1
@ 2456 train 4.0613 , allloss: 4.0613, dt: 698.79ms, fracRes: 0.3258, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9777, norm(y): 0.9944, norm:0.4029, tok/sec: 187570.63, flops:164.28, batch-reuse:1
@ 2457 train 4.1758 , allloss: 4.1758, dt: 692.02ms, fracRes: 0.3211, norm(attn): 0.4062, norm(output): 0.8203, norm(x): 0.9771, norm(y): 0.9947, norm:0.4119, tok/sec: 189405.93, flops:165.89, batch-reuse:1
@ 2458 train 3.8984 , allloss: 3.8984, dt: 695.59ms, fracRes: 0.3278, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9754, norm(y): 0.9942, norm:0.3975, tok/sec: 188432.64, flops:165.04, batch-reuse:1
@ 2459 train 4.0109 , allloss: 4.0109, dt: 693.19ms, fracRes: 0.3308, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.9761, norm(y): 0.9943, norm:0.3957, tok/sec: 189084.96, flops:165.61, batch-reuse:1
@ 2460 train 4.1015 , allloss: 4.1015, dt: 693.51ms, fracRes: 0.3244, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9741, norm(y): 0.9947, norm:0.4453, tok/sec: 188996.94, flops:165.53, batch-reuse:1
@ 2461 train 4.0107 , allloss: 4.0107, dt: 696.08ms, fracRes: 0.3281, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9712, norm(y): 0.9943, norm:0.4549, tok/sec: 188300.72, flops:164.92, batch-reuse:1
@ 2462 train 4.0972 , allloss: 4.0972, dt: 695.99ms, fracRes: 0.3266, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9695, norm(y): 0.9945, norm:0.4191, tok/sec: 188325.42, flops:164.95, batch-reuse:1
@ 2463 train 4.0946 , allloss: 4.0946, dt: 699.15ms, fracRes: 0.3266, norm(attn): 0.4043, norm(output): 0.8203, norm(x): 0.9755, norm(y): 0.9950, norm:0.3743, tok/sec: 187473.79, flops:164.20, batch-reuse:1
@ 2464 train 4.0273 , allloss: 4.0273, dt: 697.42ms, fracRes: 0.3202, norm(attn): 0.4062, norm(output): 0.8203, norm(x): 0.9760, norm(y): 0.9955, norm:0.4066, tok/sec: 187938.82, flops:164.61, batch-reuse:1
@ 2465 train 3.9884 , allloss: 3.9884, dt: 691.39ms, fracRes: 0.3235, norm(attn): 0.4043, norm(output): 0.8203, norm(x): 0.9734, norm(y): 0.9950, norm:0.3627, tok/sec: 189576.20, flops:166.04, batch-reuse:1
@ 2466 train 4.1062 , allloss: 4.1062, dt: 708.13ms, fracRes: 0.3204, norm(attn): 0.4043, norm(output): 0.8203, norm(x): 0.9716, norm(y): 0.9950, norm:0.3882, tok/sec: 185094.74, flops:162.12, batch-reuse:1
@ 2467 train 3.9842 , allloss: 3.9842, dt: 701.15ms, fracRes: 0.3230, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9700, norm(y): 0.9946, norm:0.4066, tok/sec: 186938.87, flops:163.73, batch-reuse:1
@ 2468 train 4.0652 , allloss: 4.0652, dt: 688.56ms, fracRes: 0.3196, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9682, norm(y): 0.9950, norm:0.3657, tok/sec: 190355.43, flops:166.72, batch-reuse:1
@ 2469 train 4.1693 , allloss: 4.1693, dt: 691.36ms, fracRes: 0.3238, norm(attn): 0.3926, norm(output): 0.8203, norm(x): 0.9762, norm(y): 0.9949, norm:0.4068, tok/sec: 189585.16, flops:166.05, batch-reuse:1
@ 2470 train 3.9509 , allloss: 3.9509, dt: 692.39ms, fracRes: 0.3261, norm(attn): 0.3945, norm(output): 0.8203, norm(x): 0.9781, norm(y): 0.9945, norm:0.3893, tok/sec: 189303.07, flops:165.80, batch-reuse:1
@ 2471 train 3.9885 , allloss: 3.9885, dt: 686.44ms, fracRes: 0.3275, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9778, norm(y): 0.9949, norm:0.4158, tok/sec: 190943.59, flops:167.24, batch-reuse:1
@ 2472 train 4.0575 , allloss: 4.0575, dt: 694.95ms, fracRes: 0.3279, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9749, norm(y): 0.9949, norm:0.4009, tok/sec: 188607.45, flops:165.19, batch-reuse:1
@ 2473 train 3.9605 , allloss: 3.9605, dt: 699.85ms, fracRes: 0.3226, norm(attn): 0.3965, norm(output): 0.8164, norm(x): 0.9711, norm(y): 0.9951, norm:0.3681, tok/sec: 187286.08, flops:164.04, batch-reuse:1
@ 2474 train 3.9615 , allloss: 3.9615, dt: 695.83ms, fracRes: 0.3212, norm(attn): 0.4023, norm(output): 0.8164, norm(x): 0.9722, norm(y): 0.9953, norm:0.4103, tok/sec: 188369.11, flops:164.98, batch-reuse:1
@ 2475 train 4.0383 , allloss: 4.0383, dt: 692.80ms, fracRes: 0.3261, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9792, norm(y): 0.9950, norm:0.4014, tok/sec: 189191.35, flops:165.70, batch-reuse:1
@ 2476 train 3.9743 , allloss: 3.9743, dt: 707.14ms, fracRes: 0.3288, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9819, norm(y): 0.9948, norm:0.4048, tok/sec: 185355.10, flops:162.34, batch-reuse:1
@ 2477 train 3.9930 , allloss: 3.9930, dt: 706.25ms, fracRes: 0.3269, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9795, norm(y): 0.9949, norm:0.4190, tok/sec: 185587.49, flops:162.55, batch-reuse:1
@ 2478 train 3.9566 , allloss: 3.9566, dt: 708.83ms, fracRes: 0.3316, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9730, norm(y): 0.9945, norm:0.3801, tok/sec: 184912.51, flops:161.96, batch-reuse:1
@ 2479 train 3.9766 , allloss: 3.9766, dt: 707.99ms, fracRes: 0.3299, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9685, norm(y): 0.9945, norm:0.4035, tok/sec: 185131.52, flops:162.15, batch-reuse:1
@ 2480 train 4.0436 , allloss: 4.0436, dt: 706.71ms, fracRes: 0.3297, norm(attn): 0.3828, norm(output): 0.8164, norm(x): 0.9724, norm(y): 0.9942, norm:0.3938, tok/sec: 185466.66, flops:162.44, batch-reuse:1
@ 2481 train 3.9570 , allloss: 3.9570, dt: 703.89ms, fracRes: 0.3271, norm(attn): 0.3906, norm(output): 0.8203, norm(x): 0.9759, norm(y): 0.9945, norm:0.3751, tok/sec: 186211.46, flops:163.09, batch-reuse:1
@ 2482 train 4.1288 , allloss: 4.1288, dt: 679.95ms, fracRes: 0.3223, norm(attn): 0.3945, norm(output): 0.8242, norm(x): 0.9803, norm(y): 0.9953, norm:0.4457, tok/sec: 192767.05, flops:168.84, batch-reuse:1
@ 2483 train 4.0242 , allloss: 4.0242, dt: 698.04ms, fracRes: 0.3268, norm(attn): 0.3926, norm(output): 0.8281, norm(x): 0.9825, norm(y): 0.9951, norm:0.4162, tok/sec: 187770.25, flops:164.46, batch-reuse:1
@ 2484 train 4.0441 , allloss: 4.0441, dt: 692.67ms, fracRes: 0.3292, norm(attn): 0.3848, norm(output): 0.8164, norm(x): 0.9817, norm(y): 0.9948, norm:0.4401, tok/sec: 189228.40, flops:165.74, batch-reuse:1
@ 2485 train 3.9442 , allloss: 3.9442, dt: 696.73ms, fracRes: 0.3320, norm(attn): 0.3867, norm(output): 0.8164, norm(x): 0.9757, norm(y): 0.9945, norm:0.4276, tok/sec: 188125.39, flops:164.77, batch-reuse:1
@ 2486 train 3.9663 , allloss: 3.9663, dt: 700.43ms, fracRes: 0.3299, norm(attn): 0.3965, norm(output): 0.8164, norm(x): 0.9732, norm(y): 0.9946, norm:0.4441, tok/sec: 187130.72, flops:163.90, batch-reuse:1
@ 2487 train 4.0418 , allloss: 4.0418, dt: 695.80ms, fracRes: 0.3328, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9800, norm(y): 0.9945, norm:0.3763, tok/sec: 188374.66, flops:164.99, batch-reuse:1
@ 2488 train 4.0175 , allloss: 4.0175, dt: 697.07ms, fracRes: 0.3324, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9786, norm(y): 0.9945, norm:0.4086, tok/sec: 188033.83, flops:164.69, batch-reuse:1
@ 2489 train 3.9964 , allloss: 3.9964, dt: 705.50ms, fracRes: 0.3250, norm(attn): 0.4043, norm(output): 0.8203, norm(x): 0.9710, norm(y): 0.9948, norm:0.3680, tok/sec: 185784.93, flops:162.72, batch-reuse:1
@ 2490 train 3.9644 , allloss: 3.9644, dt: 702.84ms, fracRes: 0.3209, norm(attn): 0.4062, norm(output): 0.8203, norm(x): 0.9702, norm(y): 0.9952, norm:0.3873, tok/sec: 186488.95, flops:163.34, batch-reuse:1
@ 2491 train 4.1214 , allloss: 4.1214, dt: 704.51ms, fracRes: 0.3174, norm(attn): 0.4043, norm(output): 0.8203, norm(x): 0.9691, norm(y): 0.9952, norm:0.3644, tok/sec: 186046.10, flops:162.95, batch-reuse:1
@ 2492 train 4.0642 , allloss: 4.0642, dt: 702.26ms, fracRes: 0.3190, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9729, norm(y): 0.9954, norm:0.3915, tok/sec: 186644.07, flops:163.47, batch-reuse:1
@ 2493 train 4.0242 , allloss: 4.0242, dt: 682.03ms, fracRes: 0.3243, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.9745, norm(y): 0.9949, norm:0.3739, tok/sec: 192179.51, flops:168.32, batch-reuse:1
@ 2494 train 4.0066 , allloss: 4.0066, dt: 692.97ms, fracRes: 0.3275, norm(attn): 0.4023, norm(output): 0.8164, norm(x): 0.9758, norm(y): 0.9945, norm:0.3672, tok/sec: 189144.48, flops:165.66, batch-reuse:1
@ 2495 train 3.9868 , allloss: 3.9868, dt: 685.26ms, fracRes: 0.3271, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9696, norm(y): 0.9944, norm:0.3656, tok/sec: 191273.77, flops:167.53, batch-reuse:1
@ 2496 train 3.9544 , allloss: 3.9544, dt: 697.96ms, fracRes: 0.3262, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9695, norm(y): 0.9946, norm:0.3793, tok/sec: 187792.06, flops:164.48, batch-reuse:1
@ 2497 train 4.0201 , allloss: 4.0201, dt: 694.12ms, fracRes: 0.3291, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9742, norm(y): 0.9948, norm:0.3713, tok/sec: 188831.01, flops:165.39, batch-reuse:1
@ 2498 train 4.0326 , allloss: 4.0326, dt: 696.08ms, fracRes: 0.3230, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9736, norm(y): 0.9951, norm:0.3832, tok/sec: 188299.69, flops:164.92, batch-reuse:1
@ 2499 train 3.9804 , allloss: 3.9804, dt: 682.45ms, fracRes: 0.3271, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9740, norm(y): 0.9949, norm:0.3688, tok/sec: 192060.14, flops:168.22, batch-reuse:1
@ 2500 train 3.9678 , allloss: 3.9678, dt: 691.29ms, fracRes: 0.3317, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9799, norm(y): 0.9946, norm:0.3778, tok/sec: 189604.58, flops:166.07, batch-reuse:1
@ 2501 train 3.9005 , allloss: 3.9005, dt: 699.96ms, fracRes: 0.3322, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9775, norm(y): 0.9944, norm:0.3616, tok/sec: 187257.12, flops:164.01, batch-reuse:1
@ 2502 train 4.0618 , allloss: 4.0618, dt: 700.38ms, fracRes: 0.3234, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9785, norm(y): 0.9952, norm:0.4029, tok/sec: 187144.67, flops:163.91, batch-reuse:1
@ 2503 train 3.9742 , allloss: 3.9742, dt: 690.70ms, fracRes: 0.3297, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9782, norm(y): 0.9949, norm:0.3752, tok/sec: 189767.22, flops:166.21, batch-reuse:1
@ 2504 train 4.0015 , allloss: 4.0015, dt: 703.20ms, fracRes: 0.3322, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9782, norm(y): 0.9945, norm:0.3926, tok/sec: 186394.17, flops:163.25, batch-reuse:1
@ 2505 train 4.0057 , allloss: 4.0057, dt: 700.04ms, fracRes: 0.3254, norm(attn): 0.4023, norm(output): 0.8242, norm(x): 0.9762, norm(y): 0.9948, norm:0.4267, tok/sec: 187235.63, flops:163.99, batch-reuse:1
@ 2506 train 4.0815 , allloss: 4.0815, dt: 705.06ms, fracRes: 0.3303, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9846, norm(y): 0.9949, norm:0.3908, tok/sec: 185902.16, flops:162.82, batch-reuse:1
@ 2507 train 3.9821 , allloss: 3.9821, dt: 703.59ms, fracRes: 0.3294, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9859, norm(y): 0.9951, norm:0.4918, tok/sec: 186290.78, flops:163.16, batch-reuse:1
@ 2508 train 3.9446 , allloss: 3.9446, dt: 699.94ms, fracRes: 0.3240, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9719, norm(y): 0.9951, norm:0.5035, tok/sec: 187262.54, flops:164.01, batch-reuse:1
@ 2509 train 3.9192 , allloss: 3.9192, dt: 700.03ms, fracRes: 0.3320, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9713, norm(y): 0.9943, norm:0.4008, tok/sec: 187238.69, flops:163.99, batch-reuse:1
@ 2510 train 4.0095 , allloss: 4.0095, dt: 705.22ms, fracRes: 0.3310, norm(attn): 0.3906, norm(output): 0.8203, norm(x): 0.9738, norm(y): 0.9950, norm:0.3856, tok/sec: 185860.43, flops:162.79, batch-reuse:1
@ 2511 train 3.9676 , allloss: 3.9676, dt: 708.50ms, fracRes: 0.3316, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9758, norm(y): 0.9951, norm:0.4206, tok/sec: 184999.01, flops:162.03, batch-reuse:1
@ 2512 train 3.9635 , allloss: 3.9635, dt: 702.59ms, fracRes: 0.3243, norm(attn): 0.3945, norm(output): 0.8203, norm(x): 0.9717, norm(y): 0.9950, norm:0.3771, tok/sec: 186554.96, flops:163.40, batch-reuse:1
@ 2513 train 4.0258 , allloss: 4.0258, dt: 711.45ms, fracRes: 0.3188, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9695, norm(y): 0.9952, norm:0.4027, tok/sec: 184231.93, flops:161.36, batch-reuse:1
@ 2514 train 4.0409 , allloss: 4.0409, dt: 706.75ms, fracRes: 0.3226, norm(attn): 0.4062, norm(output): 0.8281, norm(x): 0.9776, norm(y): 0.9954, norm:0.4023, tok/sec: 185457.46, flops:162.43, batch-reuse:1
@ 2515 train 3.9722 , allloss: 3.9722, dt: 711.31ms, fracRes: 0.3257, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9758, norm(y): 0.9951, norm:0.3960, tok/sec: 184268.67, flops:161.39, batch-reuse:1
@ 2516 train 3.8601 , allloss: 3.8601, dt: 700.73ms, fracRes: 0.3272, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9768, norm(y): 0.9948, norm:0.4008, tok/sec: 187050.43, flops:163.83, batch-reuse:1
@ 2517 train 3.9175 , allloss: 3.9175, dt: 708.69ms, fracRes: 0.3252, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9758, norm(y): 0.9950, norm:0.3528, tok/sec: 184950.27, flops:161.99, batch-reuse:1
@ 2518 train 3.8846 , allloss: 3.8846, dt: 709.12ms, fracRes: 0.3180, norm(attn): 0.4082, norm(output): 0.8203, norm(x): 0.9720, norm(y): 0.9952, norm:0.3972, tok/sec: 184836.79, flops:161.89, batch-reuse:1
@ 2519 train 4.0175 , allloss: 4.0175, dt: 701.92ms, fracRes: 0.3244, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9728, norm(y): 0.9951, norm:0.3600, tok/sec: 186733.71, flops:163.55, batch-reuse:1
@ 2520 train 4.0046 , allloss: 4.0046, dt: 694.24ms, fracRes: 0.3228, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9744, norm(y): 0.9952, norm:0.3741, tok/sec: 188798.20, flops:165.36, batch-reuse:1
@ 2521 train 3.9104 , allloss: 3.9104, dt: 705.41ms, fracRes: 0.3270, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9745, norm(y): 0.9949, norm:0.3592, tok/sec: 185810.80, flops:162.74, batch-reuse:1
@ 2522 train 4.0379 , allloss: 4.0379, dt: 689.79ms, fracRes: 0.3261, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9734, norm(y): 0.9950, norm:0.3919, tok/sec: 190017.25, flops:166.43, batch-reuse:1
@ 2523 train 3.9559 , allloss: 3.9559, dt: 702.24ms, fracRes: 0.3339, norm(attn): 0.3887, norm(output): 0.8203, norm(x): 0.9765, norm(y): 0.9945, norm:0.3606, tok/sec: 186648.06, flops:163.48, batch-reuse:1
@ 2524 train 3.9452 , allloss: 3.9452, dt: 696.42ms, fracRes: 0.3325, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9744, norm(y): 0.9946, norm:0.3767, tok/sec: 188209.44, flops:164.84, batch-reuse:1
@ 2525 train 3.9313 , allloss: 3.9313, dt: 702.90ms, fracRes: 0.3239, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9792, norm(y): 0.9951, norm:0.3685, tok/sec: 186474.02, flops:163.32, batch-reuse:1
@ 2526 train 4.0421 , allloss: 4.0421, dt: 690.46ms, fracRes: 0.3237, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9778, norm(y): 0.9954, norm:0.3916, tok/sec: 189833.99, flops:166.27, batch-reuse:1
@ 2527 train 3.9617 , allloss: 3.9617, dt: 694.97ms, fracRes: 0.3275, norm(attn): 0.3906, norm(output): 0.8242, norm(x): 0.9796, norm(y): 0.9952, norm:0.3793, tok/sec: 188599.81, flops:165.19, batch-reuse:1
@ 2528 train 3.9900 , allloss: 3.9900, dt: 704.78ms, fracRes: 0.3273, norm(attn): 0.3906, norm(output): 0.8242, norm(x): 0.9776, norm(y): 0.9950, norm:0.3548, tok/sec: 185976.05, flops:162.89, batch-reuse:1
@ 2529 train 3.9879 , allloss: 3.9879, dt: 704.91ms, fracRes: 0.3242, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9729, norm(y): 0.9953, norm:0.3642, tok/sec: 185941.39, flops:162.86, batch-reuse:1
@ 2530 train 3.9435 , allloss: 3.9435, dt: 699.57ms, fracRes: 0.3264, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9730, norm(y): 0.9950, norm:0.3587, tok/sec: 187361.27, flops:164.10, batch-reuse:1
@ 2531 train 3.8993 , allloss: 3.8993, dt: 687.46ms, fracRes: 0.3315, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9777, norm(y): 0.9950, norm:0.3453, tok/sec: 190661.36, flops:166.99, batch-reuse:1
@ 2532 train 3.9575 , allloss: 3.9575, dt: 700.16ms, fracRes: 0.3274, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9762, norm(y): 0.9950, norm:0.3592, tok/sec: 187202.22, flops:163.96, batch-reuse:1
@ 2533 train 3.9109 , allloss: 3.9109, dt: 698.08ms, fracRes: 0.3169, norm(attn): 0.4062, norm(output): 0.8320, norm(x): 0.9790, norm(y): 0.9958, norm:0.4577, tok/sec: 187759.86, flops:164.45, batch-reuse:1
@ 2534 train 4.0634 , allloss: 4.0634, dt: 688.58ms, fracRes: 0.3220, norm(attn): 0.4023, norm(output): 0.8242, norm(x): 0.9789, norm(y): 0.9955, norm:0.3904, tok/sec: 190350.69, flops:166.72, batch-reuse:1
@ 2535 train 3.9076 , allloss: 3.9076, dt: 687.94ms, fracRes: 0.3242, norm(attn): 0.4043, norm(output): 0.8203, norm(x): 0.9771, norm(y): 0.9955, norm:0.3694, tok/sec: 190527.15, flops:166.87, batch-reuse:1
@ 2536 train 3.9656 , allloss: 3.9656, dt: 685.98ms, fracRes: 0.3253, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9765, norm(y): 0.9953, norm:0.3866, tok/sec: 191071.47, flops:167.35, batch-reuse:1
@ 2537 train 3.9660 , allloss: 3.9660, dt: 689.78ms, fracRes: 0.3237, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.9721, norm(y): 0.9951, norm:0.3693, tok/sec: 190020.80, flops:166.43, batch-reuse:1
@ 2538 train 4.0674 , allloss: 4.0674, dt: 697.41ms, fracRes: 0.3246, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9714, norm(y): 0.9952, norm:0.4109, tok/sec: 187939.85, flops:164.61, batch-reuse:1
@ 2539 train 3.9506 , allloss: 3.9506, dt: 691.78ms, fracRes: 0.3277, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9731, norm(y): 0.9950, norm:0.3526, tok/sec: 189470.09, flops:165.95, batch-reuse:1
@ 2540 train 4.0153 , allloss: 4.0153, dt: 689.65ms, fracRes: 0.3367, norm(attn): 0.4023, norm(output): 0.8164, norm(x): 0.9765, norm(y): 0.9946, norm:0.3974, tok/sec: 190055.02, flops:166.46, batch-reuse:1
@ 2541 train 4.0070 , allloss: 4.0070, dt: 687.92ms, fracRes: 0.3323, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9798, norm(y): 0.9950, norm:0.3591, tok/sec: 190533.36, flops:166.88, batch-reuse:1
@ 2542 train 4.0086 , allloss: 4.0086, dt: 687.92ms, fracRes: 0.3239, norm(attn): 0.4023, norm(output): 0.8320, norm(x): 0.9837, norm(y): 0.9954, norm:0.6034, tok/sec: 190532.96, flops:166.88, batch-reuse:1
@ 2543 train 3.9566 , allloss: 3.9566, dt: 693.35ms, fracRes: 0.3330, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9800, norm(y): 0.9946, norm:0.3975, tok/sec: 189040.74, flops:165.57, batch-reuse:1
@ 2544 train 4.0343 , allloss: 4.0343, dt: 694.10ms, fracRes: 0.3309, norm(attn): 0.4004, norm(output): 0.8320, norm(x): 0.9817, norm(y): 0.9950, norm:0.4400, tok/sec: 188837.30, flops:165.39, batch-reuse:1
@ 2545 train 4.0005 , allloss: 4.0005, dt: 687.91ms, fracRes: 0.3286, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9810, norm(y): 0.9956, norm:0.3989, tok/sec: 190536.00, flops:166.88, batch-reuse:1
@ 2546 train 3.9858 , allloss: 3.9858, dt: 688.05ms, fracRes: 0.3308, norm(attn): 0.4062, norm(output): 0.8242, norm(x): 0.9767, norm(y): 0.9955, norm:0.4121, tok/sec: 190498.96, flops:166.85, batch-reuse:1
@ 2547 train 3.9988 , allloss: 3.9988, dt: 688.43ms, fracRes: 0.3320, norm(attn): 0.4023, norm(output): 0.8164, norm(x): 0.9787, norm(y): 0.9951, norm:0.3696, tok/sec: 190393.67, flops:166.76, batch-reuse:1
@ 2548 train 4.1026 , allloss: 4.1026, dt: 706.49ms, fracRes: 0.3289, norm(attn): 0.3965, norm(output): 0.8242, norm(x): 0.9798, norm(y): 0.9948, norm:0.5596, tok/sec: 185526.74, flops:162.49, batch-reuse:1
@ 2549 train 4.1034 , allloss: 4.1034, dt: 696.50ms, fracRes: 0.3204, norm(attn): 0.4043, norm(output): 0.8359, norm(x): 0.9787, norm(y): 0.9956, norm:0.4458, tok/sec: 188186.76, flops:164.82, batch-reuse:1
@ 2550 train 4.0818 , allloss: 4.0818, dt: 694.99ms, fracRes: 0.3183, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9781, norm(y): 0.9957, norm:0.4246, tok/sec: 188595.48, flops:165.18, batch-reuse:1
@ 2551 train 4.4846 , allloss: 4.4846, dt: 694.77ms, fracRes: 0.2949, norm(attn): 0.4141, norm(output): 0.8398, norm(x): 0.9744, norm(y): 0.9970, norm:1.0265, tok/sec: 188654.69, flops:165.23, batch-reuse:1
@ 2552 train 4.0254 , allloss: 4.0254, dt: 684.12ms, fracRes: 0.3211, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9774, norm(y): 0.9951, norm:0.6362, tok/sec: 191590.93, flops:167.81, batch-reuse:1
@ 2553 train 4.0334 , allloss: 4.0334, dt: 705.51ms, fracRes: 0.3265, norm(attn): 0.3945, norm(output): 0.8242, norm(x): 0.9808, norm(y): 0.9949, norm:0.4225, tok/sec: 185784.36, flops:162.72, batch-reuse:1
@ 2554 train 4.0098 , allloss: 4.0098, dt: 697.30ms, fracRes: 0.3368, norm(attn): 0.3828, norm(output): 0.8242, norm(x): 0.9843, norm(y): 0.9945, norm:0.5008, tok/sec: 187970.76, flops:164.64, batch-reuse:1
@ 2555 train 3.8174 , allloss: 3.8174, dt: 689.78ms, fracRes: 0.3417, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9864, norm(y): 0.9942, norm:0.4807, tok/sec: 190019.09, flops:166.43, batch-reuse:1
@ 2556 train 3.8964 , allloss: 3.8964, dt: 684.24ms, fracRes: 0.3330, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9812, norm(y): 0.9946, norm:0.4813, tok/sec: 191558.42, flops:167.78, batch-reuse:1
@ 2557 train 3.9255 , allloss: 3.9255, dt: 688.50ms, fracRes: 0.3300, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9754, norm(y): 0.9944, norm:0.4375, tok/sec: 190374.28, flops:166.74, batch-reuse:1
@ 2558 train 3.9690 , allloss: 3.9690, dt: 690.88ms, fracRes: 0.3260, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9788, norm(y): 0.9950, norm:0.4028, tok/sec: 189717.64, flops:166.17, batch-reuse:1
@ 2559 train 3.9227 , allloss: 3.9227, dt: 702.34ms, fracRes: 0.3250, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9838, norm(y): 0.9954, norm:0.3975, tok/sec: 186622.78, flops:163.45, batch-reuse:1
@ 2560 train 3.8325 , allloss: 3.8325, dt: 704.94ms, fracRes: 0.3266, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9831, norm(y): 0.9951, norm:0.5130, tok/sec: 185934.29, flops:162.85, batch-reuse:1
@ 2561 train 3.9067 , allloss: 3.9067, dt: 704.93ms, fracRes: 0.3308, norm(attn): 0.4043, norm(output): 0.8398, norm(x): 0.9940, norm(y): 0.9955, norm:0.4587, tok/sec: 185935.23, flops:162.85, batch-reuse:1
@ 2562 train 3.9092 , allloss: 3.9092, dt: 701.08ms, fracRes: 0.3363, norm(attn): 0.4004, norm(output): 0.8320, norm(x): 0.9894, norm(y): 0.9948, norm:0.4938, tok/sec: 186957.18, flops:163.75, batch-reuse:1
@ 2563 train 3.8723 , allloss: 3.8723, dt: 685.47ms, fracRes: 0.3349, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9858, norm(y): 0.9954, norm:0.4602, tok/sec: 191213.89, flops:167.48, batch-reuse:1
@ 2564 train 3.7970 , allloss: 3.7970, dt: 696.00ms, fracRes: 0.3323, norm(attn): 0.4023, norm(output): 0.8164, norm(x): 0.9762, norm(y): 0.9948, norm:0.4445, tok/sec: 188321.10, flops:164.94, batch-reuse:1
@ 2565 train 3.9908 , allloss: 3.9908, dt: 696.06ms, fracRes: 0.3363, norm(attn): 0.4062, norm(output): 0.8242, norm(x): 0.9851, norm(y): 0.9949, norm:0.4386, tok/sec: 188304.78, flops:164.93, batch-reuse:1
@ 2566 train 3.9193 , allloss: 3.9193, dt: 696.98ms, fracRes: 0.3440, norm(attn): 0.4043, norm(output): 0.8203, norm(x): 0.9857, norm(y): 0.9942, norm:0.4329, tok/sec: 188056.15, flops:164.71, batch-reuse:1
@ 2567 train 3.8920 , allloss: 3.8920, dt: 695.13ms, fracRes: 0.3374, norm(attn): 0.4062, norm(output): 0.8281, norm(x): 0.9873, norm(y): 0.9945, norm:0.3957, tok/sec: 188558.74, flops:165.15, batch-reuse:1
@ 2568 train 3.9112 , allloss: 3.9112, dt: 691.59ms, fracRes: 0.3301, norm(attn): 0.4082, norm(output): 0.8320, norm(x): 0.9867, norm(y): 0.9952, norm:0.4284, tok/sec: 189523.65, flops:166.00, batch-reuse:1
@ 2569 train 3.9598 , allloss: 3.9598, dt: 696.83ms, fracRes: 0.3255, norm(attn): 0.4102, norm(output): 0.8242, norm(x): 0.9812, norm(y): 0.9956, norm:0.3807, tok/sec: 188097.71, flops:164.75, batch-reuse:1
@ 2570 train 3.8817 , allloss: 3.8817, dt: 695.14ms, fracRes: 0.3269, norm(attn): 0.4082, norm(output): 0.8242, norm(x): 0.9812, norm(y): 0.9950, norm:0.4148, tok/sec: 188554.27, flops:165.15, batch-reuse:1
@ 2571 train 3.8644 , allloss: 3.8644, dt: 698.74ms, fracRes: 0.3292, norm(attn): 0.4082, norm(output): 0.8242, norm(x): 0.9840, norm(y): 0.9951, norm:0.3862, tok/sec: 187584.39, flops:164.30, batch-reuse:1
@ 2572 train 3.9890 , allloss: 3.9890, dt: 694.12ms, fracRes: 0.3337, norm(attn): 0.4062, norm(output): 0.8281, norm(x): 0.9862, norm(y): 0.9952, norm:0.4199, tok/sec: 188832.50, flops:165.39, batch-reuse:1
@ 2573 train 3.9022 , allloss: 3.9022, dt: 699.41ms, fracRes: 0.3333, norm(attn): 0.4062, norm(output): 0.8242, norm(x): 0.9858, norm(y): 0.9950, norm:0.3822, tok/sec: 187404.51, flops:164.14, batch-reuse:1
@ 2574 train 3.8523 , allloss: 3.8523, dt: 686.93ms, fracRes: 0.3382, norm(attn): 0.4062, norm(output): 0.8242, norm(x): 0.9892, norm(y): 0.9948, norm:0.4019, tok/sec: 190808.99, flops:167.12, batch-reuse:1
@ 2575 train 3.9015 , allloss: 3.9015, dt: 696.00ms, fracRes: 0.3402, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9900, norm(y): 0.9946, norm:0.3684, tok/sec: 188322.33, flops:164.94, batch-reuse:1
@ 2576 train 3.8692 , allloss: 3.8692, dt: 697.63ms, fracRes: 0.3421, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9847, norm(y): 0.9942, norm:0.3543, tok/sec: 187883.00, flops:164.56, batch-reuse:1
@ 2577 train 3.9546 , allloss: 3.9546, dt: 697.83ms, fracRes: 0.3355, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9868, norm(y): 0.9949, norm:0.3572, tok/sec: 187827.86, flops:164.51, batch-reuse:1
@ 2578 train 3.7359 , allloss: 3.7359, dt: 691.45ms, fracRes: 0.3327, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9839, norm(y): 0.9948, norm:0.3846, tok/sec: 189561.30, flops:166.03, batch-reuse:1
@ 2579 train 3.9381 , allloss: 3.9381, dt: 690.49ms, fracRes: 0.3285, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9846, norm(y): 0.9952, norm:0.3682, tok/sec: 189824.75, flops:166.26, batch-reuse:1
@ 2580 train 3.8974 , allloss: 3.8974, dt: 693.25ms, fracRes: 0.3306, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9816, norm(y): 0.9950, norm:0.3558, tok/sec: 189069.41, flops:165.60, batch-reuse:1
@ 2581 train 3.8480 , allloss: 3.8480, dt: 696.56ms, fracRes: 0.3283, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9839, norm(y): 0.9951, norm:0.3752, tok/sec: 188171.30, flops:164.81, batch-reuse:1
@ 2582 train 3.8328 , allloss: 3.8328, dt: 683.90ms, fracRes: 0.3349, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9846, norm(y): 0.9947, norm:0.3576, tok/sec: 191653.78, flops:167.86, batch-reuse:1
@ 2583 train 3.8334 , allloss: 3.8334, dt: 686.92ms, fracRes: 0.3368, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9811, norm(y): 0.9947, norm:0.3944, tok/sec: 190811.77, flops:167.12, batch-reuse:1
@ 2584 train 3.8718 , allloss: 3.8718, dt: 699.45ms, fracRes: 0.3404, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9880, norm(y): 0.9947, norm:0.3636, tok/sec: 187393.39, flops:164.13, batch-reuse:1
@ 2585 train 3.8854 , allloss: 3.8854, dt: 697.18ms, fracRes: 0.3375, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9879, norm(y): 0.9948, norm:0.3952, tok/sec: 188004.38, flops:164.66, batch-reuse:1
@ 2586 train 3.7885 , allloss: 3.7885, dt: 696.36ms, fracRes: 0.3296, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9848, norm(y): 0.9952, norm:0.3904, tok/sec: 188223.94, flops:164.86, batch-reuse:1
@ 2587 train 3.9822 , allloss: 3.9822, dt: 686.74ms, fracRes: 0.3374, norm(attn): 0.4023, norm(output): 0.8242, norm(x): 0.9916, norm(y): 0.9958, norm:0.4080, tok/sec: 190861.59, flops:167.17, batch-reuse:1
@ 2588 train 3.8248 , allloss: 3.8248, dt: 697.31ms, fracRes: 0.3350, norm(attn): 0.4043, norm(output): 0.8203, norm(x): 0.9856, norm(y): 0.9950, norm:0.3901, tok/sec: 187968.96, flops:164.63, batch-reuse:1
@ 2589 train 3.9282 , allloss: 3.9282, dt: 697.20ms, fracRes: 0.3334, norm(attn): 0.3984, norm(output): 0.8281, norm(x): 0.9882, norm(y): 0.9951, norm:0.3828, tok/sec: 187998.85, flops:164.66, batch-reuse:1
@ 2590 train 3.8477 , allloss: 3.8477, dt: 691.94ms, fracRes: 0.3311, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9826, norm(y): 0.9949, norm:0.3828, tok/sec: 189427.53, flops:165.91, batch-reuse:1
@ 2591 train 3.9185 , allloss: 3.9185, dt: 692.30ms, fracRes: 0.3309, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9800, norm(y): 0.9950, norm:0.4022, tok/sec: 189328.76, flops:165.82, batch-reuse:1
@ 2592 train 3.9483 , allloss: 3.9483, dt: 700.65ms, fracRes: 0.3321, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9832, norm(y): 0.9952, norm:0.3895, tok/sec: 187071.18, flops:163.85, batch-reuse:1
@ 2593 train 3.8352 , allloss: 3.8352, dt: 690.08ms, fracRes: 0.3271, norm(attn): 0.4062, norm(output): 0.8320, norm(x): 0.9888, norm(y): 0.9957, norm:0.3873, tok/sec: 189936.50, flops:166.36, batch-reuse:1
@ 2594 train 3.8698 , allloss: 3.8698, dt: 708.54ms, fracRes: 0.3296, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9847, norm(y): 0.9952, norm:0.3884, tok/sec: 184989.98, flops:162.02, batch-reuse:1
@ 2595 train 3.8782 , allloss: 3.8782, dt: 704.09ms, fracRes: 0.3341, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9846, norm(y): 0.9949, norm:0.3759, tok/sec: 186158.87, flops:163.05, batch-reuse:1
@ 2596 train 3.9949 , allloss: 3.9949, dt: 704.36ms, fracRes: 0.3312, norm(attn): 0.4062, norm(output): 0.8320, norm(x): 0.9891, norm(y): 0.9955, norm:0.4130, tok/sec: 186087.85, flops:162.99, batch-reuse:1
@ 2597 train 3.8255 , allloss: 3.8255, dt: 678.43ms, fracRes: 0.3324, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9870, norm(y): 0.9952, norm:0.4043, tok/sec: 193198.30, flops:169.21, batch-reuse:1
@ 2598 train 3.8315 , allloss: 3.8315, dt: 697.31ms, fracRes: 0.3303, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9800, norm(y): 0.9951, norm:0.3708, tok/sec: 187968.38, flops:164.63, batch-reuse:1
@ 2599 train 3.7842 , allloss: 3.7842, dt: 695.43ms, fracRes: 0.3360, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9832, norm(y): 0.9944, norm:0.3731, tok/sec: 188476.64, flops:165.08, batch-reuse:1
@ 2600 train 3.7798 , allloss: 3.7798, dt: 690.39ms, fracRes: 0.3369, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9835, norm(y): 0.9946, norm:0.3572, tok/sec: 189853.13, flops:166.28, batch-reuse:1
