Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.00015
Experiment name: 17-identity-test-yes-1minus-mlpconcat-noln
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config) 
========
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights * x + (1-xWeights)*machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 152,666,112 parameters
num non-decayed parameter tensors: 50, with 66,048 parameters
@ 0 train 10.9921 , allloss: 21.5893, dt: 2883.64ms, fracRes: 0.0062, norm(attn): 0.0334, norm(output): 0.0732, norm(x): 0.0732, norm(y): 0.9993, norm:22.8625, tok/sec: 45453.64, flops:47.70, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4473, 0.5508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3262, 0.2949, 0.3789, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.2910, 0.2695, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.3965, 0.1235, 0.1348, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.1875, 0.1768, 0.1279, 0.1226, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.0986, 0.1318, 0.1729, 0.1816, 0.1143, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.0898, 0.1670, 0.1846, 0.1494, 0.1172, 0.0898, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.1455, 0.0640, 0.1260, 0.1689, 0.1157, 0.0894, 0.0918, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.1348, 0.0898, 0.1162, 0.1289, 0.0737, 0.0781, 0.1396, 0.0664, 0.0703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.1147, 0.0845, 0.0864, 0.0559, 0.0859, 0.1367, 0.0469, 0.0762, 0.1245, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.0708, 0.0820, 0.0796, 0.0471, 0.0776, 0.1147, 0.0962, 0.0688, 0.0732, 0.0796, 0.1289, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.0718, 0.0732, 0.0923, 0.0913, 0.0674, 0.0549, 0.0879, 0.0835, 0.0535, 0.0791, 0.0859, 0.0820, 0.0000, 0.0000],
        [0.0737, 0.0908, 0.0635, 0.0903, 0.0903, 0.0972, 0.0610, 0.0659, 0.0393, 0.0447, 0.0659, 0.0625, 0.1079, 0.0474, 0.0000],
        [0.0659, 0.0457, 0.1094, 0.0869, 0.0708, 0.0474, 0.0645, 0.0962, 0.0527, 0.0444, 0.0718, 0.0420, 0.0854, 0.0552, 0.0610]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0089,  0.0227, -0.0314,  ..., -0.0075,  0.0251,  0.0233],
        [ 0.0561,  0.0105, -0.0069,  ..., -0.0111,  0.0046, -0.0323],
        [-0.0032,  0.0099,  0.0212,  ...,  0.0203, -0.0096, -0.0102],
        ...,
        [-0.0270,  0.0213, -0.0092,  ...,  0.0158,  0.0042,  0.0066],
        [ 0.0500, -0.0026, -0.0036,  ...,  0.0387, -0.0102, -0.0092],
        [ 0.0158,  0.0099,  0.0166,  ..., -0.0183, -0.0138,  0.0277]], device='cuda:0', requires_grad=True)
K: tensor([-0.2988,  0.4688, -0.1572, -1.1719, -0.3008, -0.2637,  0.3711,  0.1064,  0.2910,  0.3555,  0.1982,  0.9766, -0.5352,  0.9648,  0.1123, -0.1279, -0.5039,  0.4062, -0.2734,  0.4082, -0.0203, -0.4297, -0.5859, -0.4590,  0.0240,  0.1416, -0.0549, -0.5977, -0.3887,  0.4707, -0.5117, -0.0200,
        -0.2490, -0.0304, -0.0649, -0.6797,  0.4863, -0.0908,  0.3789,  0.3438,  0.5117, -0.3027,  0.0728, -0.0364, -0.7500,  0.2695, -0.3340,  0.1001,  0.4941,  0.0383,  0.0554, -0.7031, -1.5000,  0.1050,  0.6406,  0.0378,  0.6680,  0.4746, -0.9922, -0.2451,  0.4453, -0.1289, -0.6641, -0.5430],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0278,  0.0102, -0.0021,  ...,  0.0175,  0.0023, -0.0322],
        [ 0.0027,  0.0277, -0.0181,  ...,  0.0131,  0.0089, -0.0168],
        [ 0.0244, -0.0221, -0.0072,  ...,  0.0306, -0.0020, -0.0354],
        ...,
        [ 0.0135,  0.0123,  0.0171,  ..., -0.0070, -0.0201,  0.0096],
        [-0.0217, -0.0179,  0.0044,  ...,  0.0184, -0.0088,  0.0339],
        [ 0.0227, -0.0019, -0.0017,  ..., -0.0295, -0.0252, -0.0038]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5938,  0.0601, -0.4746,  0.2109,  0.5039, -0.3066,  1.2188,  0.6797, -0.1924,  0.9023, -0.7773, -0.6289,  0.0674, -0.8633, -0.4219,  0.0203, -1.4141,  0.1582, -0.1514,  0.4824,  0.4707,  0.0786, -0.1416, -0.0776, -0.2422, -0.3613, -0.6797,  0.3105, -0.8242, -0.4961, -0.6250, -0.2871,
         0.2949,  0.0045, -1.0156,  0.1631, -0.2236, -0.6250, -0.1816, -0.3594, -0.0923, -0.0781,  0.0835, -0.8594, -0.7852, -0.4297, -0.4863, -0.0718, -0.4531,  0.9180, -0.0427,  0.3965,  0.8047,  1.1016, -0.0352,  0.5000, -0.0188, -0.5352, -0.1631,  0.2324,  0.2793,  0.8438, -0.5938, -0.0908],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2119,  0.0240, -0.1621, -0.2852,  0.1680,  0.2969, -0.3965,  0.3086,  0.2354,  0.1006, -0.1406, -0.2930, -0.2363,  0.5586],
        [ 0.0000, -0.1006,  0.1523, -0.0211, -0.1445, -0.2002,  0.1572,  0.1504, -0.3906, -0.1787, -0.4590, -0.3281,  0.2988,  0.0913, -0.2090],
        [ 0.0000,  0.1060,  0.0322, -0.3730,  0.3125,  0.0249,  0.2197,  0.2500, -0.1875,  0.6602,  0.2070, -0.0693,  0.0593, -0.6875,  0.3477],
        [ 0.0000,  0.7188, -0.4453, -0.3555, -0.2354, -0.2695,  0.1001, -0.1719, -0.0298, -0.0874, -0.2314,  0.3691,  0.7305, -0.1108, -0.2393],
        [ 0.0000,  0.0177, -0.0435, -0.3652, -0.4082,  0.0811, -0.0942,  0.4297, -0.3730, -0.2695, -0.0479,  0.2988, -0.1050, -0.4004, -0.2559],
        [ 0.0000, -0.6133, -0.3262, -0.0537, -0.0064, -0.4707, -0.4336, -0.0522,  0.3867,  0.6367, -0.2559, -0.1641,  0.0850,  0.0491,  0.2441],
        [ 0.0000, -0.1196,  0.4961,  0.6016,  0.3906,  0.1445, -0.1206, -0.0094, -0.1934, -0.5664,  0.0659, -0.3574, -0.0248, -0.2461,  0.2285],
        [ 0.0000,  0.1982, -0.6250,  0.0503,  0.3457, -0.0322, -0.2949, -0.2637, -0.4277, -0.2656,  0.1147, -0.6797, -0.2197, -0.4414,  0.1602],
        [ 0.0000,  0.2852, -0.1177,  0.1406,  0.2461, -0.3145, -0.2578,  0.3203, -0.4180, -0.3652,  0.0713, -0.1113, -0.2354, -0.2910, -0.0889],
        [ 0.0000,  0.1406, -0.1611, -0.1396, -0.5781, -0.1475,  0.3184, -0.7539, -0.2656,  0.2246, -0.1187,  0.3984, -0.0209, -0.1504,  0.1680],
        [ 0.0000, -0.1348,  0.0113, -0.0165, -0.5430, -0.0427,  0.3477,  0.1709, -0.1602, -0.0981, -0.0159,  0.4668,  0.0884, -0.2139, -0.0184],
        [ 0.0000, -0.0820, -0.0635,  0.1680,  0.1592, -0.1465, -0.3516,  0.1187,  0.0664, -0.3770,  0.0177,  0.0996,  0.0488,  0.1357, -0.1475],
        [ 0.0000,  0.2119, -0.1484,  0.2070,  0.2041,  0.2773, -0.1846, -0.1084, -0.6250, -0.4980, -0.1123, -0.1582,  0.3828, -0.4414, -0.1147],
        [ 0.0000, -0.3672,  0.5039,  0.2754,  0.0649, -0.3320, -0.0248,  0.3750, -0.2256, -0.3984,  0.0830, -0.4531,  0.2539, -0.1797, -0.0781]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5277],
        [0.3296],
        [0.2493],
        [0.1960],
        [0.1628],
        [0.1371],
        [0.1213],
        [0.1070],
        [0.0973],
        [0.0852],
        [0.0830],
        [0.0780],
        [0.0685],
        [0.0629]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5664, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.2754, 0.4199, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.2354, 0.2617, 0.2402, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1904, 0.1279, 0.2910, 0.1855, 0.2051, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1963, 0.1836, 0.1650, 0.1455, 0.1963, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.1289, 0.1699, 0.1318, 0.1357, 0.1157, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.0825, 0.1621, 0.1177, 0.1436, 0.1094, 0.1387, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.0635, 0.1475, 0.1147, 0.1289, 0.0962, 0.1484, 0.1133, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1143, 0.0845, 0.0811, 0.1138, 0.1426, 0.1074, 0.1025, 0.0952, 0.0767, 0.0815, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0579, 0.0796, 0.0547, 0.0981, 0.1631, 0.0957, 0.1025, 0.0845, 0.0654, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.1182, 0.0562, 0.1270, 0.0693, 0.0786, 0.0688, 0.0564, 0.0918, 0.0674, 0.0574, 0.1367, 0.0000, 0.0000, 0.0000],
        [0.0610, 0.0869, 0.0801, 0.0908, 0.1240, 0.0559, 0.0515, 0.0649, 0.0371, 0.0933, 0.0942, 0.0698, 0.0908, 0.0000, 0.0000],
        [0.0530, 0.0757, 0.0571, 0.0491, 0.0601, 0.0564, 0.0913, 0.0747, 0.1001, 0.0547, 0.0874, 0.0840, 0.0850, 0.0713, 0.0000],
        [0.0654, 0.0630, 0.0776, 0.0791, 0.0806, 0.0618, 0.0537, 0.0713, 0.0532, 0.0474, 0.0884, 0.0564, 0.0659, 0.0713, 0.0654]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0066,  0.0186, -0.0224,  ...,  0.0163, -0.0084,  0.0199],
        [ 0.0129,  0.0229, -0.0124,  ...,  0.0560, -0.0099,  0.0013],
        [ 0.0037, -0.0164, -0.0427,  ...,  0.0240, -0.0031, -0.0045],
        ...,
        [-0.0343, -0.0125,  0.0041,  ...,  0.0183, -0.0005,  0.0404],
        [ 0.0110, -0.0023, -0.0141,  ...,  0.0199,  0.0358,  0.0102],
        [ 0.0134,  0.0189, -0.0047,  ..., -0.0056, -0.0057,  0.0385]], device='cuda:0', requires_grad=True)
K: tensor([     0.4863,      0.0039,     -1.1953,      0.1104,     -0.4453,      0.0159,      0.0684,      0.4062,      0.2930,      0.2617,      0.0742,     -0.0069,      0.1523,      0.0708,      0.0376,      0.7461,      0.2363,     -1.3594,     -0.3691,      0.5273,     -0.1177,      0.1797,
            -0.3145,     -0.7969,     -0.4766,     -1.1172,      0.2100,      0.0006,     -0.1079,      0.7695,     -0.3125,      0.1357,     -0.7695,     -0.1445,      1.1484,     -0.5586,     -0.3848,      1.0156,     -0.9141,     -0.6992,      0.8555,     -1.0938,     -0.0291,     -0.0942,
             0.1021,     -0.2656,      0.4551,      0.5703,      0.5664,      0.0835,      0.7188,     -0.0491,     -0.3301,      0.2539,      0.3945,      0.5156,     -0.5430,     -0.0055,      0.7852,     -0.1758,     -0.6016,     -1.0547,     -0.1260,     -0.2754], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0194,  0.0039, -0.0186,  ...,  0.0066,  0.0141,  0.0008],
        [ 0.0108,  0.0038,  0.0302,  ..., -0.0086, -0.0046,  0.0240],
        [ 0.0264,  0.0033,  0.0022,  ...,  0.0022,  0.0135, -0.0122],
        ...,
        [ 0.0127, -0.0219,  0.0065,  ...,  0.0020, -0.0369,  0.0158],
        [-0.0259, -0.0356, -0.0057,  ...,  0.0070, -0.0346,  0.0208],
        [-0.0022, -0.0465,  0.0414,  ...,  0.0029,  0.0248,  0.0161]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6680,  0.1602,  0.1680, -0.2334,  0.5664,  0.7461, -0.4180, -0.6289, -0.1426, -0.8086,  0.2129,  0.0293, -0.0305,  0.4336,  1.0234, -0.1172, -0.7227,  0.0222, -0.2256, -0.5391,  0.1914, -0.2256, -0.9570,  0.5391, -0.0933, -0.7617,  0.6797, -0.6641, -0.0525,  0.0510,  0.8008,  0.2051,
        -0.2354,  0.7695, -0.3047,  0.1670,  0.8828, -0.0396, -0.0732, -1.2188,  0.5352,  0.0977,  0.4785,  0.1348, -1.4375, -0.0374,  0.2754, -0.2432, -0.1953,  0.0284, -0.2393, -0.2451,  0.3652, -0.0043,  0.6602, -0.2520, -0.4531,  1.1172,  0.6406,  0.3027,  0.8750, -0.1436, -0.4219,  0.1719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.2656,      0.2559,     -0.5078,      0.3887,      0.0449,      0.0728,      0.4102,     -0.5664,     -0.2402,      0.1177,     -0.2461,      0.0386,     -0.5352,     -0.0201],
        [     0.0000,     -0.1069,      0.3145,     -0.4492,     -0.1357,      0.1572,      0.1445,      0.3672,     -0.2676,     -0.4883,     -0.0559,      0.2412,      0.1914,     -0.2441,      0.0286],
        [     0.0000,     -0.1079,     -0.0026,     -0.0859,      0.7148,      0.5742,      0.5195,      0.1855,     -0.2578,      0.1572,     -0.2383,     -0.4902,      0.0435,      0.0564,      0.2578],
        [     0.0000,     -0.3965,      0.4238,     -0.0267,      0.0723,     -0.3359,      0.1060,     -0.2559,      0.1475,     -0.4297,      0.0825,     -0.0503,     -0.0198,      0.0231,     -0.0894],
        [     0.0000,     -0.0674,     -0.1738,     -0.2988,     -0.0005,     -0.5391,     -0.3887,     -0.2695,     -0.5312,     -0.3359,     -0.0310,     -0.5938,      0.2471,     -0.2441,     -0.0349],
        [     0.0000,     -0.2578,      0.0165,     -0.2344,     -0.2100,     -0.3672,     -0.0991,     -0.3184,     -0.2295,     -0.2158,      0.4375,     -0.2598,      0.5469,     -0.1299,     -0.7031],
        [     0.0000,     -0.4883,      0.1855,     -0.1338,      0.0608,     -0.2090,      0.0305,     -0.1914,     -0.8008,     -0.1475,     -0.2080,     -0.5469,      0.3516,     -0.1689,     -0.3418],
        [     0.0000,     -0.3516,      0.4922,      0.2412,      0.3555,      0.0640,      0.5000,      0.2275,      0.0598,     -0.5273,      0.4434,     -0.0515,      0.2500,      0.0762,     -0.2637],
        [     0.0000,     -0.2988,     -0.3418,     -0.0028,      0.2256,     -0.0593,     -0.1050,     -0.1787,     -0.3945,     -0.3340,      0.2412,     -0.3809,      0.2832,     -0.6055,     -0.4512],
        [     0.0000,     -0.2910,      0.0277,     -0.3477,      0.2363,      0.7461,      0.2100,      0.2793,      0.0850,     -0.1670,      0.4395,     -0.1147,      0.2773,      0.1670,     -0.2520],
        [     0.0000,      0.4941,     -0.2490,      0.5703,     -0.0337,      0.0854,     -0.0413,     -0.2432,      0.2412,     -0.0679,     -0.2266,      0.6445,      0.3262,      0.2539,      0.1206],
        [     0.0000,      0.3496,      0.2695,      0.3945,      0.7070,     -0.0884,     -0.1719,      0.0605,     -0.5000,      0.4219,      0.4355,      0.1318,      0.3926,     -0.3496,     -0.5508],
        [     0.0000,      0.3555,      0.0742,     -0.0796,      0.1260,      0.0615,      0.5430,      0.3418,      0.6367,      0.0312,      0.5000,      0.4629,      0.4727,      0.2930,      0.0310],
        [     0.0000,     -0.0425,      0.1670,      0.1904,      0.2070,     -0.0596,     -0.1992,      0.0815,     -0.2061,     -0.3242,      0.2969,     -0.1514,      0.0091,      0.0830,     -0.0023]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5176],
        [0.3190],
        [0.2538],
        [0.2005],
        [0.1577],
        [0.1411],
        [0.1254],
        [0.1070],
        [0.0999],
        [0.0913],
        [0.0828],
        [0.0718],
        [0.0661],
        [0.0622]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4785, 0.5195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.3906, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2891, 0.2051, 0.2422, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.2041, 0.1982, 0.1631, 0.2656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.1191, 0.1074, 0.2324, 0.2080, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.1914, 0.1250, 0.0615, 0.1396, 0.1787, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.0796, 0.0825, 0.1406, 0.1455, 0.1260, 0.1904, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.0732, 0.1001, 0.1338, 0.0640, 0.1021, 0.1387, 0.1475, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.0513, 0.0562, 0.0864, 0.1206, 0.1992, 0.0981, 0.0986, 0.1104, 0.0776, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0771, 0.0840, 0.1138, 0.0923, 0.0913, 0.0601, 0.1089, 0.0962, 0.0693, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0869, 0.0623, 0.0723, 0.0996, 0.0908, 0.1006, 0.0796, 0.0825, 0.0630, 0.0728, 0.1006, 0.0000, 0.0000, 0.0000],
        [0.0535, 0.0491, 0.0703, 0.0601, 0.0771, 0.0791, 0.1128, 0.0923, 0.0728, 0.1021, 0.0693, 0.0845, 0.0767, 0.0000, 0.0000],
        [0.0635, 0.0439, 0.0654, 0.1035, 0.0464, 0.0649, 0.0723, 0.1021, 0.0564, 0.1069, 0.1069, 0.0605, 0.0588, 0.0481, 0.0000],
        [0.0498, 0.0757, 0.0479, 0.0491, 0.1025, 0.0493, 0.0825, 0.0796, 0.0483, 0.0635, 0.0635, 0.0757, 0.0513, 0.0693, 0.0913]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0061, -0.0192,  0.0059,  ..., -0.0115,  0.0328,  0.0224],
        [-0.0184, -0.0054,  0.0297,  ...,  0.0200,  0.0206,  0.0350],
        [ 0.0399, -0.0141, -0.0243,  ..., -0.0347,  0.0035,  0.0222],
        ...,
        [-0.0089,  0.0153, -0.0246,  ..., -0.0086,  0.0042, -0.0117],
        [ 0.0333, -0.0230, -0.0109,  ..., -0.0039,  0.0029,  0.0209],
        [-0.0014, -0.0017, -0.0044,  ...,  0.0301, -0.0076,  0.0006]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0664, -0.3652, -0.2070, -0.6211, -0.8086, -1.0234,  0.1768, -0.2148,  0.7891,  0.0267,  0.2676, -0.5625,  0.2793, -0.0820,  0.0201,  0.8477, -0.4648, -0.5273,  0.1943,  0.3125,  0.3574,  0.2129,  0.0408,  0.5938, -0.0510,  0.1245, -0.4609,  0.1602,  0.5273, -0.0094,  0.1836,  0.2676,
         0.7422,  0.4551,  0.1719,  0.1826, -0.6758,  0.0957,  0.2676, -0.4785,  0.3730, -0.0603, -0.2451, -0.8672,  0.0811, -0.1143, -0.3477, -0.4688, -0.8242,  0.3320,  0.3926, -0.2812,  0.7969,  0.1260,  0.9375, -0.6719, -0.1045,  0.3242, -0.5977, -0.2695,  0.3945, -0.4629,  0.0913,  0.5742],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0289,  0.0094, -0.0019,  ...,  0.0183, -0.0116, -0.0026],
        [ 0.0090,  0.0106, -0.0006,  ..., -0.0081,  0.0012,  0.0052],
        [-0.0216, -0.0183, -0.0052,  ..., -0.0181,  0.0067,  0.0132],
        ...,
        [ 0.0161,  0.0165,  0.0207,  ..., -0.0085,  0.0027,  0.0103],
        [-0.0396, -0.0274, -0.0089,  ..., -0.0176,  0.0146,  0.0100],
        [-0.0004,  0.0241, -0.0085,  ...,  0.0297, -0.0116, -0.0176]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4336, -0.5977,  0.5117,  0.4121, -0.3008, -0.0962,  0.3340,  0.6016, -0.0339, -0.6172, -1.0703,  0.0723,  1.0469,  0.5273,  1.0234,  0.6602, -1.5234, -0.4707, -0.1660, -0.9492,  0.5391, -0.3066,  0.6406, -0.6602,  0.0532,  0.4844,  0.5859,  0.2402,  1.7031, -0.0537,  0.2754,  0.5391,
        -0.1318,  0.3203,  1.1641, -0.8242, -0.1533,  0.3984,  0.5898,  0.8789,  0.4688,  0.1289, -0.3848, -0.3789, -0.0947,  0.5547, -0.8242, -0.1357, -0.1914,  0.1123,  0.7109, -0.5117,  0.1924, -0.5195,  0.3809, -0.8906, -0.2539,  0.1631,  0.1924,  0.2168, -0.2197, -0.7734, -0.7617,  0.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0845, -0.2988, -0.2715,  0.4121, -0.1934, -0.1025, -0.5078,  0.2334, -0.1826,  0.0408, -0.0037, -0.0815,  0.1543, -0.1768],
        [ 0.0000,  0.2832,  0.0684,  0.1064, -0.0108,  0.1631,  0.1934,  0.4453,  0.0291,  0.3457,  0.1680,  0.1885,  0.2852,  0.0938,  0.1836],
        [ 0.0000, -0.3418, -0.1729, -0.0879,  0.1523, -0.1182,  0.0025, -0.0256,  0.2832, -0.1260,  0.2188, -0.0776,  0.1060, -0.0086,  0.0635],
        [ 0.0000,  0.1904,  0.1621, -0.0344,  0.4492,  0.2227, -0.0537,  0.4062,  0.1768, -0.2227,  0.1973,  0.2852, -0.0537, -0.2852,  0.0486],
        [ 0.0000, -0.1992, -0.3066,  0.4668,  0.3574,  0.2500,  0.3535, -0.0081,  0.5117,  0.2100,  0.5430,  0.3770,  0.0552,  0.5156,  0.3086],
        [ 0.0000,  0.4492,  0.0229, -0.6875,  0.1338,  0.3809,  0.4004,  0.4688, -0.2793, -0.2578,  0.2656, -0.2021, -0.2139,  0.0234,  0.1406],
        [ 0.0000, -0.3535, -0.3145,  0.2178,  0.2490,  0.1079,  0.5195,  0.0820, -0.0557, -0.4883,  0.1748, -0.2324, -0.2109, -0.0952, -0.0903],
        [ 0.0000, -0.3789, -0.0625,  0.2285, -0.5117, -0.0442,  0.2598,  0.3223,  0.2236,  0.2910,  0.2500, -0.0559,  0.1592, -0.3730,  0.5273],
        [ 0.0000, -0.6875, -0.6016, -0.1680,  0.1631,  0.6641, -0.0430, -0.0349,  0.0747, -0.2773,  0.1201,  0.0718, -0.2793, -0.0471, -0.1055],
        [ 0.0000, -0.1250, -0.0405,  0.2617,  0.0503,  0.0393, -0.3770,  0.2168,  0.0938, -0.2363,  0.3027,  0.3711,  0.1934, -0.3066,  0.0654],
        [ 0.0000, -0.0273, -0.3652, -0.2168,  0.1074,  0.0164,  0.1147, -0.1206, -0.0815, -0.3535, -0.2090,  0.1152, -0.0913,  0.0776,  0.1982],
        [ 0.0000, -0.0889,  0.2754,  0.1147,  0.3633,  0.3906,  0.7461,  0.5430,  0.3086,  0.6445,  0.2598,  0.4551,  0.3613,  0.3496,  0.3164],
        [ 0.0000, -0.3652,  0.0349,  0.4902, -0.3105,  0.0272,  0.1338,  0.4766, -0.1167,  0.5234,  0.5273, -0.0432, -0.0723, -0.2734,  0.5625],
        [ 0.0000,  0.4199, -0.0430, -0.0154,  0.7227, -0.0089,  0.5078,  0.4668, -0.0297,  0.2412,  0.2422,  0.4180,  0.0289,  0.3340,  0.6055]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4932],
        [0.3498],
        [0.2504],
        [0.2065],
        [0.1659],
        [0.1311],
        [0.1257],
        [0.1080],
        [0.0990],
        [0.0936],
        [0.0828],
        [0.0708],
        [0.0670],
        [0.0658]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5508, 0.4512, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4375, 0.3555, 0.2061, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.3242, 0.2129, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.2266, 0.1562, 0.1768, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1777, 0.2949, 0.1260, 0.1299, 0.1118, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.1260, 0.1582, 0.1377, 0.1494, 0.1187, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.1396, 0.0679, 0.0967, 0.0679, 0.1226, 0.2080, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1318, 0.0767, 0.1006, 0.0757, 0.1348, 0.1338, 0.1445, 0.0762, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1338, 0.0898, 0.0898, 0.0928, 0.0840, 0.1104, 0.0967, 0.0679, 0.0874, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.1138, 0.0649, 0.0654, 0.0620, 0.0840, 0.1318, 0.0718, 0.0603, 0.1270, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.1152, 0.0708, 0.0762, 0.0613, 0.0894, 0.0918, 0.0747, 0.0564, 0.0962, 0.0952, 0.0762, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.1143, 0.0583, 0.0723, 0.0623, 0.0894, 0.1099, 0.0605, 0.0552, 0.0752, 0.0586, 0.0693, 0.0820, 0.0000, 0.0000],
        [0.0903, 0.0771, 0.0464, 0.0515, 0.0444, 0.0747, 0.0977, 0.0757, 0.0518, 0.0962, 0.0884, 0.0732, 0.0869, 0.0457, 0.0000],
        [0.0801, 0.0952, 0.0649, 0.0630, 0.0491, 0.0752, 0.0771, 0.0537, 0.0408, 0.0581, 0.0859, 0.0425, 0.0679, 0.0425, 0.1040]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0342,  0.0280,  0.0219,  ..., -0.0132,  0.0229, -0.0208],
        [-0.0044,  0.0005, -0.0287,  ..., -0.0234, -0.0370,  0.0447],
        [-0.0082, -0.0192, -0.0090,  ...,  0.0247, -0.0280,  0.0125],
        ...,
        [ 0.0313, -0.0148,  0.0147,  ..., -0.0439, -0.0158, -0.0136],
        [ 0.0082,  0.0431,  0.0315,  ...,  0.0159,  0.0029, -0.0095],
        [ 0.0099,  0.0129, -0.0316,  ...,  0.0039,  0.0202,  0.0062]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3691, -0.5391, -0.4883, -1.3125,  0.0032, -0.0669, -0.3379, -0.4668, -0.3008, -0.6094, -0.3730,  0.1240, -0.1279,  0.1924,  0.9141,  0.9531, -0.7539,  0.3730,  0.0249,  0.6523,  0.4922,  0.4883, -0.0112, -0.1543,  1.0938,  0.2178, -0.2676,  0.6055, -0.1240,  0.4316,  0.0126,  0.2422,
         0.1426, -0.2354, -0.2178, -0.3516,  0.9180,  0.1543,  0.5195, -0.3730,  0.3340,  0.8125,  0.6836, -0.4785, -0.1436, -0.4062,  0.0703,  0.0500,  0.1699, -0.0977, -0.5352, -1.0703, -0.4609,  0.7266,  0.6289,  0.0398,  0.1914,  1.0703,  0.6602,  0.3945, -0.1514, -0.4355,  0.4258,  0.0019],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0236,  0.0155, -0.0376,  ..., -0.0252, -0.0284, -0.0202],
        [-0.0287,  0.0063,  0.0221,  ..., -0.0189,  0.0170, -0.0567],
        [ 0.0161,  0.0305, -0.0273,  ...,  0.0102, -0.0193, -0.0061],
        ...,
        [ 0.0012, -0.0016, -0.0175,  ..., -0.0112,  0.0202,  0.0154],
        [ 0.0215, -0.0124, -0.0118,  ..., -0.0021,  0.0196,  0.0287],
        [ 0.0367,  0.0116,  0.0242,  ..., -0.0460, -0.0193,  0.0178]], device='cuda:0', requires_grad=True)
Q: tensor([     0.6484,     -1.2266,     -0.3789,     -0.4043,     -1.0312,      0.4004,     -0.2617,      0.2637,     -0.4531,     -0.6367,      0.5156,     -1.3516,     -0.7344,      0.2393,      0.4629,      0.4941,      0.8047,     -0.6367,      0.3223,     -0.6758,      0.1943,      0.2393,
            -0.2100,     -0.3965,     -0.1338,     -0.6445,      0.0115,      0.8477,     -0.4277,      0.3203,      0.3301,      0.8984,      0.2754,      0.3242,      0.3145,     -0.0001,     -0.0835,      0.1182,     -0.8516,      0.4180,     -0.0610,     -0.2197,      0.1719,     -0.1040,
            -0.2129,     -0.3867,      0.4492,     -0.4746,     -0.5508,     -0.4062,     -0.7930,      0.3105,     -0.0464,     -0.1953,     -0.3125,      0.1758,     -1.2188,      0.3691,      0.8359,     -0.3750,      0.7734,     -0.1299,      0.2119,      0.7695], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1992, -0.7578, -0.2559, -0.5156, -0.2715, -0.0064, -0.5156, -0.6250, -0.0586, -0.0598, -0.2275,  0.0053, -0.1367, -0.1689],
        [ 0.0000, -0.2061, -0.7539, -0.5000, -0.6250, -0.2217,  0.0400, -0.1562, -0.6133,  0.0938,  0.0272, -0.1963, -0.1040, -0.6367,  0.0835],
        [ 0.0000,  0.0952, -0.3281, -0.5625, -0.4102, -0.1670, -0.0977, -0.0801, -0.4160,  0.0151,  0.2451, -0.4414, -0.1641, -0.2441,  0.2412],
        [ 0.0000, -0.2051, -0.5742, -0.4551, -0.5391, -0.1865,  0.0801, -0.3984, -0.7852, -0.0179, -0.0432, -0.5742, -0.4707, -0.5703, -0.1631],
        [ 0.0000,  0.5078, -0.3379, -0.3105, -0.4629, -0.1001,  0.1367, -0.2246, -0.4844,  0.2080,  0.0825, -0.2002,  0.0527, -0.3281, -0.1211],
        [ 0.0000, -0.1445,  0.0854, -0.0520,  0.0269, -0.2031,  0.1245,  0.1099,  0.0325, -0.0055, -0.0588, -0.0457, -0.0757,  0.2422,  0.1826],
        [ 0.0000, -0.2676, -0.9922, -0.6406, -0.9922, -0.3965,  0.1318, -0.4688, -0.5312, -0.0264, -0.1211, -0.4277, -0.2871, -0.4023,  0.1030],
        [ 0.0000,  0.0518, -0.4922, -0.2197, -0.5039,  0.0728,  0.0649,  0.1387, -0.5000,  0.2852,  0.0175, -0.0879, -0.1162, -0.6211,  0.0615],
        [ 0.0000, -0.1011, -0.5000, -0.5000, -0.4668, -0.5664, -0.2910, -0.4277, -0.7773, -0.5273, -0.3242, -0.4336, -0.1543, -0.5547, -0.1396],
        [ 0.0000, -0.0089, -0.5664, -0.5586, -0.6133, -0.3105,  0.1367, -0.4648, -0.6406,  0.1011, -0.0874, -0.1279, -0.0280, -0.5273, -0.0469],
        [ 0.0000,  0.1758, -0.3086, -0.2344, -0.4531, -0.0757, -0.0508, -0.2539, -0.5391, -0.0052, -0.0165, -0.2393,  0.3477, -0.4766,  0.1592],
        [ 0.0000,  0.2100, -0.4648, -0.2471, -0.4004, -0.0386,  0.1719, -0.4277, -0.5195, -0.2080, -0.4570, -0.2891, -0.1216, -0.2832,  0.2949],
        [ 0.0000, -0.1611, -0.6680, -0.5664, -0.7148, -0.1904,  0.0747, -0.1807, -0.5586,  0.0605, -0.0272, -0.2139, -0.0388, -0.6875,  0.2451],
        [ 0.0000,  0.1738, -0.2061, -0.2363, -0.4902, -0.0605, -0.0388, -0.3965, -0.6758, -0.3223,  0.0693, -0.6367, -0.1660, -0.6367,  0.2637]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5166],
        [0.3473],
        [0.2607],
        [0.2091],
        [0.1729],
        [0.1453],
        [0.1276],
        [0.1219],
        [0.1064],
        [0.1001],
        [0.0875],
        [0.0810],
        [0.0746],
        [0.0704]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.4844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.2871, 0.3555, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.2148, 0.1973, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1631, 0.1748, 0.2383, 0.2402, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1201, 0.1543, 0.1787, 0.1992, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1147, 0.1177, 0.1641, 0.1748, 0.1641, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0850, 0.1089, 0.1416, 0.1592, 0.1191, 0.1592, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.0986, 0.1025, 0.0952, 0.1533, 0.0894, 0.1553, 0.1128, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1099, 0.0771, 0.0825, 0.1040, 0.1504, 0.0884, 0.0991, 0.0825, 0.0894, 0.1162, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0645, 0.0767, 0.1069, 0.1245, 0.0781, 0.1147, 0.0986, 0.0938, 0.0742, 0.0854, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.1016, 0.0664, 0.0947, 0.0825, 0.0693, 0.1064, 0.0554, 0.0830, 0.0825, 0.0903, 0.0854, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0571, 0.0820, 0.0737, 0.1021, 0.0796, 0.1128, 0.0806, 0.0500, 0.0645, 0.0786, 0.0742, 0.0742, 0.0000, 0.0000],
        [0.0535, 0.0757, 0.0542, 0.0737, 0.0923, 0.0806, 0.0723, 0.0693, 0.0698, 0.0554, 0.0747, 0.0996, 0.0447, 0.0840, 0.0000],
        [0.0645, 0.0522, 0.0598, 0.0562, 0.0762, 0.0559, 0.0894, 0.0598, 0.0645, 0.0649, 0.0723, 0.0884, 0.0620, 0.0554, 0.0786]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0116,  0.0073,  0.0144,  ..., -0.0184,  0.0357,  0.0248],
        [ 0.0015,  0.0009,  0.0091,  ..., -0.0121, -0.0427, -0.0022],
        [-0.0084, -0.0347, -0.0093,  ...,  0.0350, -0.0192,  0.0101],
        ...,
        [-0.0047,  0.0154, -0.0004,  ..., -0.0135, -0.0286,  0.0367],
        [-0.0229, -0.0018, -0.0209,  ..., -0.0081, -0.0115,  0.0047],
        [ 0.0006,  0.0035,  0.0136,  ...,  0.0114, -0.0077,  0.0222]], device='cuda:0', requires_grad=True)
K: tensor([-0.0664, -0.2734,  0.0376, -0.5078,  0.1992, -0.2139,  0.8594,  0.4805,  0.7930, -0.4941, -0.8242,  0.9180, -0.4707, -0.0016, -0.0569, -0.9570,  0.0698, -0.2266,  0.2168,  0.1611, -0.4609, -0.3066,  0.2734,  0.5078, -0.3965, -1.2188, -0.3066,  0.5156, -0.3203,  1.1328, -0.3887, -0.0664,
         0.5195, -0.5078,  0.3789,  1.2500, -0.2773, -0.1895, -0.1416,  0.2754,  1.0391,  0.5859, -0.4258,  0.4258,  0.5430, -0.1475,  0.4355,  0.0172,  0.6719, -0.8594,  0.4160,  1.2422,  0.1953,  0.1523,  0.3613, -0.2119,  0.6445,  0.6289,  0.2969, -0.1533, -0.3125,  0.3203,  0.2383,  0.6016],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0384,  0.0334, -0.0183,  ...,  0.0055,  0.0031,  0.0132],
        [-0.0216,  0.0038, -0.0177,  ..., -0.0236, -0.0067, -0.0313],
        [-0.0212, -0.0133, -0.0015,  ..., -0.0227, -0.0039, -0.0017],
        ...,
        [ 0.0126,  0.0083, -0.0331,  ..., -0.0185,  0.0211,  0.0170],
        [-0.0030, -0.0132, -0.0217,  ..., -0.0029, -0.0146,  0.0301],
        [-0.0050,  0.0248, -0.0128,  ..., -0.0103, -0.0118, -0.0143]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5820, -0.8633,  0.1777, -0.5508, -0.8008, -0.4844,  0.7812,  0.5547,  0.0146,  0.2227, -0.1118,  0.2559,  0.6172, -0.4062,  0.3223,  0.6914,  0.2197, -0.0161, -0.6211,  0.0107,  0.6602,  0.5938, -0.0334,  0.3809, -0.0187, -0.0145,  0.2852,  0.3633, -0.5195,  0.1533,  0.0449,  0.2988,
         0.1040,  0.8047,  0.0801, -0.1934, -0.1187,  0.1177,  0.5469, -0.1523, -0.3555,  1.3125,  0.0947, -0.7617,  0.9062, -0.3066,  0.6914, -0.2256, -0.0349, -1.2812, -0.1074, -0.7773,  0.6484,  0.9648,  0.2383,  0.8438,  0.1138,  0.6602, -0.8828,  0.0859, -0.9844, -0.3203,  0.2090,  0.1348],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.0613,     -0.2871,     -0.1484,      0.3770,     -0.0234,      0.3887,      0.0791,     -0.0337,     -0.0422,      0.1445,     -0.2344,      0.1064,      0.2227,      0.0771],
        [     0.0000,     -0.2148,     -0.0045,      0.0466,      0.3867,      0.1377,      0.4180,      0.1904,     -0.0082,      0.1484,      0.0659,      0.3242,     -0.0208,      0.1260,     -0.0197],
        [     0.0000,     -0.3008,     -0.3867,      0.0255,      0.2539,     -0.0226,      0.1133,     -0.2334,     -0.5820,     -0.0388,     -0.0664,     -0.0258,     -0.1582,     -0.3262,     -0.1006],
        [     0.0000,     -0.1206,     -0.0493,      0.2598,      0.2676,     -0.0654,      0.0618,     -0.2676,     -0.3359,     -0.0713,     -0.1079,     -0.0640,      0.0500,     -0.1226,      0.0154],
        [     0.0000,     -0.4238,     -0.1758,     -0.0283,      0.0850,     -0.1084,     -0.1001,     -0.3223,     -0.5742,     -0.2891,     -0.0299,     -0.0481,     -0.3438,     -0.2344,     -0.0334],
        [     0.0000,     -0.1050,     -0.0796,      0.2490,      0.3145,      0.2490,      0.0708,      0.1914,     -0.5430,     -0.1504,     -0.1455,     -0.2539,      0.3574,      0.0192,      0.0591],
        [     0.0000,     -0.0356,      0.2158,      0.4746,      0.5898,      0.3047,      0.5977,      0.4629,      0.0869,     -0.1191,      0.3965,      0.4668,      0.5391,      0.1855,      0.6914],
        [     0.0000,      0.0378,      0.0747,     -0.0007,      0.4746,     -0.0659,      0.4883,      0.1699,      0.0312,     -0.0503,      0.1069,      0.4961,     -0.1226,      0.0183,     -0.4160],
        [     0.0000,     -0.3516,     -0.2852,     -0.0571,      0.3125,     -0.2188,     -0.1050,     -0.2871,     -0.2070,      0.0547,     -0.2119,      0.0598,     -0.4629,     -0.0613,     -0.1055],
        [     0.0000,     -0.2461,     -0.0732,      0.2617,      0.4102,     -0.0518,      0.3281,      0.1797,      0.1309,     -0.1030,      0.0332,      0.2490,      0.1079,      0.2891,      0.1973],
        [     0.0000,      0.2090,     -0.2109,      0.1416,      0.0029,     -0.1738,      0.2578,     -0.3926,      0.0084,      0.0044,      0.0933,      0.0356,      0.0422,      0.0649,      0.1113],
        [     0.0000,     -0.2158,      0.1445,      0.0386,      0.3652,      0.1172,      0.4648,      0.1289,     -0.3457,     -0.0908,      0.1040,      0.0498,      0.0466,      0.0752,      0.2422],
        [     0.0000,      0.3516,      0.0157,      0.3184,      0.5469,      0.4121,      0.2988,      0.2578,      0.2676,      0.0352,      0.3379,      0.6211,     -0.1777,      0.4512,     -0.1504],
        [     0.0000,     -0.2090,     -0.0723,     -0.1367,      0.1719,     -0.1387,      0.3301,     -0.0728,      0.0017,      0.0085,      0.1147,      0.3203,     -0.0366,     -0.1465,      0.2031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4920],
        [0.3153],
        [0.2288],
        [0.1659],
        [0.1508],
        [0.1394],
        [0.1162],
        [0.0994],
        [0.0906],
        [0.0811],
        [0.0736],
        [0.0770],
        [0.0646],
        [0.0670]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(coins:0.0002 urinary:0.0002 outcome:0.0002 Blow:0.0002enery:0.0002odynamic:0.0002izophren:0.0002 2006:0.0002)
 2006
------
		( urinary:0.0002 outcome:0.0002 Blow:0.0002enery:0.0002odynamic:0.0002izophren:0.0002 2006:0.0002Aut:0.0002)
AutMagnenersoka bosses Organisation Arts psy followed Montana quittingtem Morton Morton Morton
@ 1 train 10.9854 , allloss: 21.5782, dt: 1886.73ms, fracRes: 0.0062, norm(attn): 0.0337, norm(output): 0.0732, norm(x): 0.0732, norm(y): 0.9993, norm:23.3048, tok/sec: 69470.60, flops:72.91, batch-reuse:1
@ 2 train 10.9682 , allloss: 21.5504, dt: 1233.20ms, fracRes: 0.0062, norm(attn): 0.0337, norm(output): 0.0732, norm(x): 0.0732, norm(y): 0.9993, norm:23.0809, tok/sec: 106286.20, flops:111.55, batch-reuse:1
@ 3 train 10.9434 , allloss: 21.5111, dt: 1236.66ms, fracRes: 0.0062, norm(attn): 0.0337, norm(output): 0.0732, norm(x): 0.0733, norm(y): 0.9993, norm:22.7340, tok/sec: 105988.49, flops:111.24, batch-reuse:1
@ 4 train 10.9096 , allloss: 21.4578, dt: 1243.88ms, fracRes: 0.0062, norm(attn): 0.0339, norm(output): 0.0742, norm(x): 0.0733, norm(y): 0.9993, norm:22.5047, tok/sec: 105373.89, flops:110.59, batch-reuse:1
@ 5 train 10.8728 , allloss: 21.3999, dt: 1228.01ms, fracRes: 0.0062, norm(attn): 0.0347, norm(output): 0.0742, norm(x): 0.0734, norm(y): 0.9993, norm:22.0119, tok/sec: 106734.86, flops:112.02, batch-reuse:1
@ 6 train 10.8157 , allloss: 21.3159, dt: 1233.80ms, fracRes: 0.0062, norm(attn): 0.0347, norm(output): 0.0742, norm(x): 0.0736, norm(y): 0.9993, norm:22.7140, tok/sec: 106234.16, flops:111.49, batch-reuse:1
@ 7 train 10.7668 , allloss: 21.2380, dt: 1242.52ms, fracRes: 0.0062, norm(attn): 0.0349, norm(output): 0.0742, norm(x): 0.0738, norm(y): 0.9993, norm:22.3599, tok/sec: 105489.16, flops:110.71, batch-reuse:1
@ 8 train 10.7092 , allloss: 21.1455, dt: 1238.76ms, fracRes: 0.0062, norm(attn): 0.0352, norm(output): 0.0742, norm(x): 0.0741, norm(y): 0.9993, norm:22.0878, tok/sec: 105809.32, flops:111.05, batch-reuse:1
@ 9 train 10.6430 , allloss: 21.0378, dt: 1271.17ms, fracRes: 0.0063, norm(attn): 0.0354, norm(output): 0.0752, norm(x): 0.0745, norm(y): 0.9993, norm:22.4641, tok/sec: 103111.62, flops:108.22, batch-reuse:1
@ 10 train 10.5847 , allloss: 20.9309, dt: 1288.68ms, fracRes: 0.0063, norm(attn): 0.0366, norm(output): 0.0757, norm(x): 0.0750, norm(y): 0.9993, norm:22.4636, tok/sec: 101710.35, flops:106.75, batch-reuse:1
@ 11 train 10.5436 , allloss: 20.8306, dt: 1263.47ms, fracRes: 0.0063, norm(attn): 0.0376, norm(output): 0.0771, norm(x): 0.0755, norm(y): 0.9993, norm:22.1486, tok/sec: 103739.86, flops:108.88, batch-reuse:1
@ 12 train 10.4580 , allloss: 20.6763, dt: 1264.17ms, fracRes: 0.0063, norm(attn): 0.0386, norm(output): 0.0771, norm(x): 0.0762, norm(y): 0.9993, norm:22.8234, tok/sec: 103682.11, flops:108.82, batch-reuse:1
@ 13 train 10.4131 , allloss: 20.5472, dt: 1271.54ms, fracRes: 0.0063, norm(attn): 0.0391, norm(output): 0.0776, norm(x): 0.0769, norm(y): 0.9994, norm:22.8144, tok/sec: 103081.52, flops:108.19, batch-reuse:1
@ 14 train 10.3416 , allloss: 20.3772, dt: 1273.31ms, fracRes: 0.0063, norm(attn): 0.0398, norm(output): 0.0781, norm(x): 0.0776, norm(y): 0.9994, norm:23.0722, tok/sec: 102937.65, flops:108.03, batch-reuse:1
@ 15 train 10.2984 , allloss: 20.2236, dt: 1277.46ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.0786, norm(x): 0.0784, norm(y): 0.9994, norm:23.2949, tok/sec: 102603.75, flops:107.68, batch-reuse:1
@ 16 train 10.2506 , allloss: 20.0524, dt: 1286.76ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.0791, norm(x): 0.0792, norm(y): 0.9994, norm:23.3878, tok/sec: 101862.05, flops:106.91, batch-reuse:1
@ 17 train 10.2018 , allloss: 19.8661, dt: 1278.60ms, fracRes: 0.0063, norm(attn): 0.0427, norm(output): 0.0806, norm(x): 0.0800, norm(y): 0.9994, norm:23.6638, tok/sec: 102512.51, flops:107.59, batch-reuse:1
@ 18 train 10.1583 , allloss: 19.6730, dt: 1264.67ms, fracRes: 0.0063, norm(attn): 0.0432, norm(output): 0.0811, norm(x): 0.0808, norm(y): 0.9994, norm:23.6332, tok/sec: 103641.27, flops:108.77, batch-reuse:1
@ 19 train 10.0920 , allloss: 19.4442, dt: 1272.51ms, fracRes: 0.0063, norm(attn): 0.0435, norm(output): 0.0830, norm(x): 0.0817, norm(y): 0.9995, norm:23.9534, tok/sec: 103002.43, flops:108.10, batch-reuse:1
@ 20 train 10.0491 , allloss: 19.2272, dt: 1302.45ms, fracRes: 0.0063, norm(attn): 0.0442, norm(output): 0.0830, norm(x): 0.0825, norm(y): 0.9995, norm:24.0667, tok/sec: 100635.15, flops:105.62, batch-reuse:1
@ 21 train 9.9974 , allloss: 18.9900, dt: 1276.77ms, fracRes: 0.0063, norm(attn): 0.0454, norm(output): 0.0835, norm(x): 0.0833, norm(y): 0.9995, norm:24.1210, tok/sec: 102658.85, flops:107.74, batch-reuse:1
@ 22 train 9.9684 , allloss: 18.7644, dt: 1283.11ms, fracRes: 0.0063, norm(attn): 0.0457, norm(output): 0.0854, norm(x): 0.0841, norm(y): 0.9995, norm:23.9166, tok/sec: 102151.43, flops:107.21, batch-reuse:1
@ 23 train 9.9596 , allloss: 18.5499, dt: 1271.03ms, fracRes: 0.0063, norm(attn): 0.0466, norm(output): 0.0854, norm(x): 0.0849, norm(y): 0.9995, norm:23.8396, tok/sec: 103122.28, flops:108.23, batch-reuse:1
@ 24 train 9.9409 , allloss: 18.3158, dt: 1270.98ms, fracRes: 0.0063, norm(attn): 0.0466, norm(output): 0.0864, norm(x): 0.0857, norm(y): 0.9995, norm:23.6934, tok/sec: 103126.54, flops:108.23, batch-reuse:1
@ 25 train 9.8256 , allloss: 17.9720, dt: 1285.18ms, fracRes: 0.0063, norm(attn): 0.0471, norm(output): 0.0864, norm(x): 0.0865, norm(y): 0.9995, norm:23.5853, tok/sec: 101986.98, flops:107.04, batch-reuse:1
@ 26 train 9.8401 , allloss: 17.7537, dt: 1299.38ms, fracRes: 0.0063, norm(attn): 0.0471, norm(output): 0.0869, norm(x): 0.0873, norm(y): 0.9996, norm:23.1314, tok/sec: 100872.72, flops:105.87, batch-reuse:1
@ 27 train 9.8191 , allloss: 17.4944, dt: 1281.41ms, fracRes: 0.0064, norm(attn): 0.0479, norm(output): 0.0884, norm(x): 0.0880, norm(y): 0.9996, norm:22.8504, tok/sec: 102287.08, flops:107.35, batch-reuse:1
@ 28 train 9.7877 , allloss: 17.2196, dt: 1284.65ms, fracRes: 0.0064, norm(attn): 0.0481, norm(output): 0.0884, norm(x): 0.0888, norm(y): 0.9996, norm:22.5773, tok/sec: 102029.36, flops:107.08, batch-reuse:1
@ 29 train 9.7761 , allloss: 16.9600, dt: 1271.77ms, fracRes: 0.0064, norm(attn): 0.0483, norm(output): 0.0908, norm(x): 0.0896, norm(y): 0.9996, norm:22.2183, tok/sec: 103062.29, flops:108.17, batch-reuse:1
@ 30 train 9.7223 , allloss: 16.6506, dt: 1302.84ms, fracRes: 0.0064, norm(attn): 0.0488, norm(output): 0.0913, norm(x): 0.0903, norm(y): 0.9996, norm:21.8797, tok/sec: 100605.15, flops:105.59, batch-reuse:1
@ 31 train 9.7377 , allloss: 16.4061, dt: 1276.29ms, fracRes: 0.0064, norm(attn): 0.0496, norm(output): 0.0928, norm(x): 0.0911, norm(y): 0.9996, norm:21.4144, tok/sec: 102697.65, flops:107.78, batch-reuse:1
@ 32 train 9.7071 , allloss: 16.1123, dt: 1285.99ms, fracRes: 0.0064, norm(attn): 0.0503, norm(output): 0.0933, norm(x): 0.0918, norm(y): 0.9996, norm:21.0041, tok/sec: 101923.35, flops:106.97, batch-reuse:1
@ 33 train 9.6568 , allloss: 15.7911, dt: 1280.98ms, fracRes: 0.0064, norm(attn): 0.0503, norm(output): 0.0933, norm(x): 0.0925, norm(y): 0.9996, norm:20.5448, tok/sec: 102321.37, flops:107.39, batch-reuse:1
@ 34 train 9.6548 , allloss: 15.5182, dt: 1300.79ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 0.0938, norm(x): 0.0931, norm(y): 0.9997, norm:19.9008, tok/sec: 100763.23, flops:105.75, batch-reuse:1
@ 35 train 9.6462 , allloss: 15.2352, dt: 1274.24ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 0.0938, norm(x): 0.0938, norm(y): 0.9997, norm:19.4541, tok/sec: 102863.17, flops:107.96, batch-reuse:1
@ 36 train 9.6346 , allloss: 14.9529, dt: 1285.23ms, fracRes: 0.0064, norm(attn): 0.0508, norm(output): 0.0942, norm(x): 0.0944, norm(y): 0.9997, norm:18.8267, tok/sec: 101983.18, flops:107.03, batch-reuse:1
@ 37 train 9.6207 , allloss: 14.6697, dt: 1278.00ms, fracRes: 0.0064, norm(attn): 0.0508, norm(output): 0.0942, norm(x): 0.0949, norm(y): 0.9997, norm:18.1492, tok/sec: 102560.20, flops:107.64, batch-reuse:1
@ 38 train 9.6102 , allloss: 14.3922, dt: 1289.98ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0947, norm(x): 0.0954, norm(y): 0.9997, norm:17.7499, tok/sec: 101607.61, flops:106.64, batch-reuse:1
@ 39 train 9.6046 , allloss: 14.1251, dt: 1276.07ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0957, norm(x): 0.0959, norm(y): 0.9997, norm:16.8299, tok/sec: 102715.17, flops:107.80, batch-reuse:1
@ 40 train 9.5586 , allloss: 13.8242, dt: 1286.14ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0962, norm(x): 0.0964, norm(y): 0.9997, norm:16.1878, tok/sec: 101911.36, flops:106.96, batch-reuse:1
@ 41 train 9.5526 , allloss: 13.5746, dt: 1309.32ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0967, norm(x): 0.0968, norm(y): 0.9997, norm:15.4972, tok/sec: 100107.27, flops:105.06, batch-reuse:1
@ 42 train 9.5581 , allloss: 13.3455, dt: 1320.19ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0967, norm(x): 0.0972, norm(y): 0.9997, norm:14.8286, tok/sec: 99282.36, flops:104.20, batch-reuse:1
@ 43 train 9.5723 , allloss: 13.1338, dt: 1284.66ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0991, norm(x): 0.0975, norm(y): 0.9997, norm:14.1610, tok/sec: 102028.64, flops:107.08, batch-reuse:1
@ 44 train 9.5741 , allloss: 12.9203, dt: 1264.81ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0991, norm(x): 0.0978, norm(y): 0.9997, norm:13.3975, tok/sec: 103629.92, flops:108.76, batch-reuse:1
@ 45 train 9.5508 , allloss: 12.6977, dt: 1274.28ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0991, norm(x): 0.0980, norm(y): 0.9997, norm:12.7582, tok/sec: 102859.46, flops:107.95, batch-reuse:1
@ 46 train 9.5304 , allloss: 12.4931, dt: 1281.93ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0991, norm(x): 0.0982, norm(y): 0.9997, norm:12.0926, tok/sec: 102245.47, flops:107.31, batch-reuse:1
@ 47 train 9.5051 , allloss: 12.2995, dt: 1299.31ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0991, norm(x): 0.0982, norm(y): 0.9997, norm:11.4898, tok/sec: 100878.49, flops:105.87, batch-reuse:1
@ 48 train 9.5018 , allloss: 12.1470, dt: 1325.43ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0991, norm(x): 0.0980, norm(y): 0.9997, norm:10.8685, tok/sec: 98890.16, flops:103.79, batch-reuse:1
@ 49 train 9.5126 , allloss: 12.0259, dt: 1300.64ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0977, norm(x): 0.0976, norm(y): 0.9997, norm:10.2118, tok/sec: 100775.22, flops:105.77, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.5469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3262, 0.2930, 0.3789, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.2910, 0.2695, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.3984, 0.1230, 0.1348, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.1875, 0.1768, 0.1279, 0.1230, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.0986, 0.1318, 0.1729, 0.1807, 0.1147, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.0903, 0.1660, 0.1846, 0.1504, 0.1172, 0.0898, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.1455, 0.0640, 0.1260, 0.1689, 0.1157, 0.0894, 0.0923, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.1348, 0.0898, 0.1167, 0.1299, 0.0737, 0.0786, 0.1396, 0.0659, 0.0703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.1143, 0.0850, 0.0864, 0.0557, 0.0859, 0.1367, 0.0471, 0.0762, 0.1250, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.0708, 0.0820, 0.0796, 0.0471, 0.0771, 0.1147, 0.0962, 0.0688, 0.0732, 0.0796, 0.1299, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0713, 0.0728, 0.0918, 0.0913, 0.0674, 0.0549, 0.0879, 0.0835, 0.0535, 0.0796, 0.0864, 0.0815, 0.0000, 0.0000],
        [0.0737, 0.0908, 0.0635, 0.0903, 0.0903, 0.0972, 0.0615, 0.0654, 0.0391, 0.0447, 0.0659, 0.0625, 0.1079, 0.0474, 0.0000],
        [0.0659, 0.0457, 0.1094, 0.0869, 0.0703, 0.0474, 0.0649, 0.0967, 0.0527, 0.0444, 0.0718, 0.0422, 0.0854, 0.0549, 0.0613]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0091,  0.0229, -0.0316,  ..., -0.0077,  0.0253,  0.0232],
        [ 0.0563,  0.0107, -0.0071,  ..., -0.0113,  0.0048, -0.0324],
        [-0.0034,  0.0097,  0.0213,  ...,  0.0205, -0.0097, -0.0101],
        ...,
        [-0.0272,  0.0211, -0.0090,  ...,  0.0160,  0.0041,  0.0068],
        [ 0.0502, -0.0024, -0.0038,  ...,  0.0385, -0.0100, -0.0093],
        [ 0.0156,  0.0097,  0.0168,  ..., -0.0181, -0.0140,  0.0278]], device='cuda:0', requires_grad=True)
K: tensor([-0.3027,  0.4707, -0.1592, -1.1719, -0.2910, -0.2676,  0.3672,  0.1094,  0.2910,  0.3496,  0.1953,  0.9766, -0.5352,  0.9648,  0.1108, -0.1289, -0.4980,  0.4004, -0.2793,  0.4062, -0.0239, -0.4297, -0.5742, -0.4609,  0.0223,  0.1357, -0.0476, -0.5977, -0.3848,  0.4805, -0.5156, -0.0248,
        -0.2598, -0.0299, -0.0669, -0.6758,  0.4863, -0.0894,  0.3848,  0.3418,  0.5117, -0.3047,  0.0752, -0.0417, -0.7539,  0.2695, -0.3398,  0.0996,  0.4941,  0.0461,  0.0552, -0.7070, -1.5000,  0.1060,  0.6445,  0.0371,  0.6680,  0.4727, -0.9922, -0.2441,  0.4453, -0.1289, -0.6680, -0.5469],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0280,  0.0100, -0.0019,  ...,  0.0177,  0.0021, -0.0321],
        [ 0.0029,  0.0279, -0.0183,  ...,  0.0129,  0.0091, -0.0169],
        [ 0.0242, -0.0223, -0.0070,  ...,  0.0308, -0.0022, -0.0355],
        ...,
        [ 0.0136,  0.0124,  0.0169,  ..., -0.0071, -0.0200,  0.0097],
        [-0.0219, -0.0181,  0.0046,  ...,  0.0186, -0.0090,  0.0338],
        [ 0.0225, -0.0021, -0.0015,  ..., -0.0293, -0.0254, -0.0039]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5977,  0.0552, -0.4844,  0.2100,  0.5078, -0.3066,  1.2109,  0.6875, -0.1963,  0.9023, -0.7812, -0.6289,  0.0664, -0.8633, -0.4238,  0.0190, -1.4141,  0.1631, -0.1523,  0.4805,  0.4668,  0.0684, -0.1357, -0.0806, -0.2402, -0.3613, -0.6836,  0.3164, -0.8242, -0.5000, -0.6211, -0.2832,
         0.2949,  0.0090, -1.0078,  0.1641, -0.2217, -0.6289, -0.1865, -0.3574, -0.0933, -0.0752,  0.0850, -0.8555, -0.7930, -0.4258, -0.4863, -0.0693, -0.4570,  0.9141, -0.0505,  0.3945,  0.8008,  1.1016, -0.0295,  0.5039, -0.0125, -0.5312, -0.1553,  0.2344,  0.2832,  0.8438, -0.5977, -0.0850],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1934,  0.0204, -0.1621, -0.2930,  0.1670,  0.3008, -0.3926,  0.2988,  0.2354,  0.0962, -0.1387, -0.2930, -0.2334,  0.5586],
        [ 0.0000, -0.1074,  0.1504, -0.0234, -0.1465, -0.1992,  0.1543,  0.1562, -0.3965, -0.1836, -0.4609, -0.3262,  0.3027,  0.0894, -0.2090],
        [ 0.0000,  0.1074,  0.0291, -0.3770,  0.3086,  0.0187,  0.2227,  0.2520, -0.1885,  0.6602,  0.2041, -0.0693,  0.0554, -0.6875,  0.3535],
        [ 0.0000,  0.7227, -0.4492, -0.3574, -0.2441, -0.2715,  0.1021, -0.1719, -0.0315, -0.0845, -0.2295,  0.3711,  0.7305, -0.1079, -0.2412],
        [ 0.0000,  0.0150, -0.0442, -0.3672, -0.4062,  0.0811, -0.0913,  0.4336, -0.3789, -0.2617, -0.0503,  0.2988, -0.1074, -0.3965, -0.2520],
        [ 0.0000, -0.6133, -0.3281, -0.0562, -0.0081, -0.4668, -0.4297, -0.0500,  0.3789,  0.6406, -0.2520, -0.1621,  0.0850,  0.0415,  0.2432],
        [ 0.0000, -0.1133,  0.4961,  0.6016,  0.3984,  0.1445, -0.1211, -0.0132, -0.1924, -0.5625,  0.0649, -0.3574, -0.0243, -0.2432,  0.2256],
        [ 0.0000,  0.1963, -0.6289,  0.0510,  0.3457, -0.0332, -0.2910, -0.2598, -0.4297, -0.2598,  0.1191, -0.6758, -0.2256, -0.4375,  0.1650],
        [ 0.0000,  0.2832, -0.1211,  0.1396,  0.2451, -0.3164, -0.2559,  0.3164, -0.4297, -0.3691,  0.0654, -0.1133, -0.2383, -0.2891, -0.0879],
        [ 0.0000,  0.1377, -0.1602, -0.1416, -0.5820, -0.1455,  0.3203, -0.7461, -0.2656,  0.2285, -0.1221,  0.4004, -0.0226, -0.1494,  0.1758],
        [ 0.0000, -0.1338,  0.0093, -0.0186, -0.5430, -0.0510,  0.3496,  0.1738, -0.1631, -0.0991, -0.0187,  0.4688,  0.0835, -0.2061, -0.0162],
        [ 0.0000, -0.0850, -0.0664,  0.1660,  0.1621, -0.1436, -0.3477,  0.1196,  0.0684, -0.3770,  0.0200,  0.1025,  0.0461,  0.1367, -0.1426],
        [ 0.0000,  0.2090, -0.1514,  0.2061,  0.2051,  0.2773, -0.1797, -0.1162, -0.6367, -0.4980, -0.1133, -0.1631,  0.3809, -0.4395, -0.1123],
        [ 0.0000, -0.3691,  0.5039,  0.2715,  0.0630, -0.3320, -0.0215,  0.3770, -0.2256, -0.4004,  0.0835, -0.4492,  0.2578, -0.1885, -0.0771]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5295],
        [0.3299],
        [0.2498],
        [0.1960],
        [0.1626],
        [0.1372],
        [0.1212],
        [0.1072],
        [0.0975],
        [0.0853],
        [0.0831],
        [0.0780],
        [0.0687],
        [0.0629]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5430, 0.4570, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.2812, 0.4258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.2314, 0.2715, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.1328, 0.2793, 0.1787, 0.2188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.1689, 0.1748, 0.1436, 0.2070, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1299, 0.1738, 0.1318, 0.1533, 0.1177, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1240, 0.0879, 0.1650, 0.1211, 0.1572, 0.1108, 0.1211, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.0732, 0.1484, 0.1143, 0.1445, 0.0986, 0.1260, 0.1152, 0.0840, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.0854, 0.0923, 0.1094, 0.1484, 0.1011, 0.0908, 0.0981, 0.0688, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0669, 0.0923, 0.0669, 0.1069, 0.1357, 0.0874, 0.1025, 0.0752, 0.0688, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.1079, 0.0713, 0.1182, 0.0879, 0.0811, 0.0664, 0.0654, 0.0771, 0.0674, 0.0757, 0.1089, 0.0000, 0.0000, 0.0000],
        [0.0601, 0.0825, 0.0859, 0.0879, 0.1279, 0.0601, 0.0515, 0.0693, 0.0386, 0.0806, 0.0991, 0.0645, 0.0923, 0.0000, 0.0000],
        [0.0503, 0.0757, 0.0664, 0.0559, 0.0718, 0.0598, 0.0806, 0.0771, 0.0811, 0.0557, 0.0942, 0.0767, 0.0874, 0.0674, 0.0000],
        [0.0679, 0.0635, 0.0815, 0.0757, 0.0879, 0.0615, 0.0508, 0.0703, 0.0479, 0.0471, 0.0938, 0.0537, 0.0703, 0.0659, 0.0623]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0067,  0.0185, -0.0226,  ...,  0.0161, -0.0085,  0.0200],
        [ 0.0129,  0.0227, -0.0126,  ...,  0.0559, -0.0101,  0.0015],
        [ 0.0036, -0.0166, -0.0429,  ...,  0.0238, -0.0033, -0.0043],
        ...,
        [-0.0341, -0.0123,  0.0043,  ...,  0.0185, -0.0003,  0.0402],
        [ 0.0110, -0.0025, -0.0143,  ...,  0.0197,  0.0356,  0.0104],
        [ 0.0135,  0.0191, -0.0046,  ..., -0.0054, -0.0055,  0.0383]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8828, -0.4277, -0.8906,  0.3594, -0.5469, -0.0903,  0.2021,  0.5273,  0.5234, -0.1953, -0.1045,  0.0525,  0.0742,  0.0095,  0.0151,  0.8711,  0.7070, -1.1797, -0.2852,  0.3340, -0.0308,  0.2812, -0.3359, -0.8867, -0.4766, -0.7656,  0.2451, -0.2402, -0.1260,  0.7695, -0.2852, -0.0295,
        -0.6445, -0.3770,  0.9297, -0.2812, -0.0393,  0.6875, -0.7031, -0.5703,  0.6992, -0.6797,  0.0371, -0.1631,  0.0977, -0.4707,  0.6641,  0.7891,  0.5625,  0.0486,  0.8750, -0.0840, -0.4355,  0.2334,  0.2812,  0.6641, -0.4746, -0.0359,  0.8086, -0.1211, -0.6445, -1.2422,  0.2734, -0.3398],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0195,  0.0041, -0.0184,  ...,  0.0068,  0.0143,  0.0006],
        [ 0.0109,  0.0040,  0.0303,  ..., -0.0084, -0.0044,  0.0238],
        [ 0.0265,  0.0035,  0.0023,  ...,  0.0023,  0.0136, -0.0124],
        ...,
        [ 0.0125, -0.0221,  0.0063,  ...,  0.0018, -0.0371,  0.0160],
        [-0.0258, -0.0354, -0.0057,  ...,  0.0071, -0.0345,  0.0207],
        [-0.0024, -0.0467,  0.0412,  ...,  0.0027,  0.0246,  0.0163]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.7695,  0.2090,  0.5547, -0.0825,  0.8594,  0.7422, -0.4473, -0.4473, -0.3516, -0.6289,  0.2969,  0.1328,  0.0155,  0.6406,  1.2578,  0.0439, -0.4199,  0.3594,  0.0099, -0.9531,  0.3750, -0.3984, -0.6562,  0.6758, -0.0679, -0.5078,  0.9766, -0.6680,  0.0645,  0.3555,  0.8203,  0.3379,
        -0.4805,  0.7461, -0.4863,  0.3047,  0.6875, -0.0051, -0.2256, -1.2422,  0.7188,  0.0996,  0.4531,  0.1914, -1.6562,  0.0481,  0.1885, -0.0369,  0.1143,  0.1406, -0.1836, -0.1865,  0.1533,  0.0476,  0.8438, -0.0420, -0.4531,  1.1797,  0.4941,  0.2988,  0.7344, -0.1602, -0.4297,  0.1147],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1748,  0.3223, -0.3164,  0.4590,  0.0591, -0.0025,  0.3730, -0.5586, -0.2051,  0.2373, -0.2109,  0.1118, -0.4746, -0.0381],
        [ 0.0000, -0.0332,  0.3809, -0.2539,  0.0850,  0.1650,  0.0562,  0.3457, -0.3047, -0.3789,  0.1143,  0.1523,  0.2539, -0.2178,  0.0325],
        [ 0.0000, -0.0967,  0.0664, -0.0530,  0.6797,  0.3691,  0.2539,  0.1279, -0.3750,  0.0454, -0.0471, -0.4707,  0.1079, -0.0640,  0.1357],
        [ 0.0000, -0.3555,  0.3887, -0.0588,  0.1426, -0.3340, -0.0630, -0.2158, -0.1099, -0.4336,  0.1035, -0.1748,  0.0031, -0.0996, -0.1650],
        [ 0.0000, -0.1030, -0.0659, -0.2617,  0.1040, -0.4531, -0.4355, -0.2178, -0.5977, -0.3555,  0.0859, -0.5625,  0.1904, -0.2910, -0.1260],
        [ 0.0000, -0.2188,  0.0752, -0.2041, -0.0535, -0.3164, -0.2080, -0.2451, -0.3750, -0.2773,  0.4297, -0.3262,  0.4141, -0.2119, -0.5977],
        [ 0.0000, -0.3496,  0.2812, -0.0260,  0.2324, -0.1157, -0.0249, -0.0889, -0.6875, -0.1494,  0.0120, -0.4531,  0.3789, -0.1426, -0.2393],
        [ 0.0000, -0.2734,  0.4336,  0.1709,  0.4062,  0.0262,  0.2695,  0.1836, -0.1348, -0.4805,  0.4609, -0.1592,  0.2188, -0.0236, -0.2412],
        [ 0.0000, -0.3867, -0.3086, -0.1416,  0.1650, -0.2178, -0.3242, -0.2500, -0.6055, -0.4629,  0.1797, -0.5391,  0.1089, -0.6641, -0.5156],
        [ 0.0000, -0.1025,  0.2197, -0.1035,  0.3672,  0.6055,  0.1660,  0.3262,  0.0140, -0.0684,  0.5195, -0.0114,  0.4297,  0.1318, -0.1357],
        [ 0.0000,  0.3926, -0.0255,  0.4824,  0.1826,  0.1016, -0.0947, -0.1108,  0.0535, -0.0791,  0.0347,  0.3984,  0.3574,  0.1875,  0.0791],
        [ 0.0000,  0.3164,  0.3574,  0.3828,  0.7500, -0.0020, -0.1562,  0.1426, -0.4434,  0.2930,  0.4980,  0.0713,  0.4258, -0.2676, -0.3887],
        [ 0.0000,  0.4082,  0.2773,  0.1060,  0.3555,  0.1719,  0.4668,  0.4258,  0.4766,  0.1011,  0.6250,  0.4180,  0.5508,  0.2930,  0.1250],
        [ 0.0000, -0.0674,  0.1826,  0.1118,  0.2598, -0.0962, -0.2871,  0.0344, -0.3496, -0.3613,  0.3242, -0.2305,  0.0361, -0.0283, -0.0845]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5075],
        [0.3150],
        [0.2509],
        [0.2001],
        [0.1560],
        [0.1403],
        [0.1239],
        [0.1064],
        [0.0983],
        [0.0909],
        [0.0836],
        [0.0684],
        [0.0664],
        [0.0608]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4121, 0.5898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.4082, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.2773, 0.2656, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.2295, 0.1992, 0.1807, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.1621, 0.1270, 0.2061, 0.2285, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1191, 0.1953, 0.1260, 0.0884, 0.1514, 0.1426, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.1089, 0.0947, 0.1338, 0.1367, 0.1133, 0.1787, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.1040, 0.1030, 0.1221, 0.0874, 0.0957, 0.1465, 0.1562, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0825, 0.0723, 0.0903, 0.1206, 0.1318, 0.1216, 0.1245, 0.0962, 0.0845, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0947, 0.0864, 0.1064, 0.0962, 0.0825, 0.0845, 0.1250, 0.0884, 0.0742, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.1030, 0.0728, 0.0718, 0.0928, 0.0806, 0.1040, 0.0977, 0.0776, 0.0713, 0.0742, 0.0815, 0.0000, 0.0000, 0.0000],
        [0.0479, 0.0732, 0.0679, 0.0640, 0.0811, 0.0703, 0.1113, 0.1006, 0.0674, 0.0869, 0.0723, 0.0835, 0.0742, 0.0000, 0.0000],
        [0.0493, 0.0630, 0.0698, 0.0874, 0.0645, 0.0640, 0.0864, 0.1069, 0.0583, 0.0859, 0.0806, 0.0674, 0.0654, 0.0515, 0.0000],
        [0.0410, 0.0757, 0.0527, 0.0532, 0.0879, 0.0530, 0.0913, 0.0894, 0.0510, 0.0586, 0.0596, 0.0713, 0.0542, 0.0645, 0.0972]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0062, -0.0193,  0.0058,  ..., -0.0116,  0.0330,  0.0223],
        [-0.0186, -0.0052,  0.0299,  ...,  0.0202,  0.0204,  0.0352],
        [ 0.0397, -0.0139, -0.0241,  ..., -0.0345,  0.0033,  0.0224],
        ...,
        [-0.0087,  0.0151, -0.0248,  ..., -0.0088,  0.0044, -0.0119],
        [ 0.0333, -0.0230, -0.0109,  ..., -0.0039,  0.0029,  0.0209],
        [-0.0013, -0.0019, -0.0045,  ...,  0.0299, -0.0074,  0.0004]], device='cuda:0', requires_grad=True)
K: tensor([     0.3223,     -0.0009,     -0.4062,     -0.6602,     -1.0078,     -0.9492,     -0.0933,     -0.0464,      0.4961,      0.2598,     -0.3594,     -1.1719,      0.8047,     -0.3320,      0.2227,      0.7539,     -0.7422,     -0.3242,      0.3457,      0.2227,     -0.2578,      0.1021,
             0.3223,      0.1992,     -0.1050,      0.2852,     -0.5820,      0.3984,      1.1016,     -0.0864,      0.4863,      0.3516,      0.6445,      0.1963,      0.0092,     -0.3984,     -0.3086,     -0.2109,     -0.0110,     -0.3008,      0.4395,      0.2314,     -0.1021,     -0.9531,
             0.3926,      0.1826,     -0.1660,     -0.7461,     -0.5234,      0.4785,      0.1787,     -0.0640,      0.6250,     -0.2490,      0.7500,     -0.1172,     -0.6875,      0.1001,      0.0991,     -0.3652,      0.7695,     -0.2930,      0.4648,      0.3867], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0291,  0.0092, -0.0020,  ...,  0.0181, -0.0114, -0.0028],
        [ 0.0091,  0.0104, -0.0007,  ..., -0.0082,  0.0013,  0.0051],
        [-0.0214, -0.0184, -0.0053,  ..., -0.0183,  0.0068,  0.0130],
        ...,
        [ 0.0160,  0.0167,  0.0209,  ..., -0.0083,  0.0025,  0.0105],
        [-0.0394, -0.0276, -0.0090,  ..., -0.0178,  0.0148,  0.0098],
        [-0.0005,  0.0243, -0.0084,  ...,  0.0299, -0.0118, -0.0174]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5273, -0.5547,  1.0938,  0.3926, -0.0093, -0.5469,  0.3535,  0.7812,  0.2246, -0.4805, -1.0078, -0.3125,  0.8516,  0.0598,  1.2422,  0.5469, -1.3438, -0.3379,  0.0032, -0.9609,  0.7188, -0.8086,  1.3672, -0.8984, -0.3145,  0.5234,  0.6016,  0.3359,  1.6797,  0.1367,  0.3730,  0.2158,
        -0.1895,  0.4473,  1.1562, -0.8477,  0.2227,  0.0762,  0.7578,  0.4277,  0.7695,  0.0420, -0.2275, -0.6016, -0.0452,  0.4902, -0.6797, -0.0635, -0.2969,  0.1045,  0.8008, -0.5625, -0.0093, -0.2217,  0.4746, -0.6172, -0.1182,  0.2090, -0.2178,  0.0898, -0.3086, -0.8203, -0.9219,  0.4434],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3574, -0.0498,  0.0085,  0.5391,  0.0435,  0.2412, -0.0188,  0.2051, -0.0215,  0.1562,  0.1436,  0.0525,  0.2656,  0.0991],
        [ 0.0000,  0.4336,  0.2061,  0.1777,  0.0874,  0.1187,  0.2734,  0.5312,  0.0466,  0.2812,  0.1963,  0.2617,  0.2002,  0.1367,  0.3438],
        [ 0.0000,  0.2402,  0.1982,  0.0864,  0.3496,  0.1611,  0.3926,  0.4316,  0.3203,  0.1406,  0.3418,  0.2090,  0.2246,  0.2471,  0.4668],
        [ 0.0000,  0.5469,  0.4082,  0.3125,  0.6680,  0.4277,  0.4277,  0.7148,  0.3242,  0.0466,  0.4551,  0.4727,  0.2061,  0.1943,  0.4316],
        [ 0.0000,  0.5352,  0.2930,  0.7773,  0.8789,  0.6523,  0.8711,  0.7461,  0.7891,  0.5938,  0.7148,  0.7930,  0.5195,  0.8008,  0.8164],
        [ 0.0000,  0.4941,  0.0562, -0.3008,  0.2373,  0.1797,  0.3926,  0.4844, -0.1309, -0.1572,  0.1895, -0.0339, -0.0864,  0.0806,  0.3047],
        [ 0.0000,  0.2520,  0.1128,  0.4551,  0.4824,  0.2949,  0.7500,  0.5664,  0.2061, -0.0264,  0.3105,  0.1748,  0.1289,  0.1904,  0.3164],
        [ 0.0000,  0.2490,  0.2393,  0.4082,  0.0757,  0.1680,  0.5898,  0.6602,  0.2461,  0.3887,  0.3105,  0.2354,  0.2773,  0.0073,  0.6875],
        [ 0.0000,  0.0923, -0.0378,  0.1816,  0.4707,  0.5625,  0.4824,  0.5039,  0.2441,  0.1162,  0.3633,  0.2598,  0.1025,  0.2207,  0.3691],
        [ 0.0000,  0.3281,  0.2334,  0.4434,  0.3418,  0.1904,  0.2109,  0.6016,  0.2559,  0.0786,  0.3105,  0.4219,  0.2119,  0.0474,  0.3711],
        [ 0.0000,  0.3535,  0.0029, -0.0098,  0.2490,  0.1064,  0.3633,  0.2988,  0.0674, -0.0132,  0.0278,  0.1206,  0.0405,  0.1865,  0.4551],
        [ 0.0000,  0.4277,  0.3496,  0.2910,  0.5273,  0.3887,  0.8477,  0.7461,  0.3457,  0.5977,  0.4121,  0.5625,  0.4414,  0.4844,  0.6133],
        [ 0.0000,  0.2451,  0.3496,  0.5703,  0.2715,  0.2578,  0.5625,  0.7734,  0.1699,  0.5547,  0.4922,  0.3145,  0.2871,  0.0459,  0.8164],
        [ 0.0000,  0.6094,  0.2471,  0.2578,  0.7578,  0.2520,  0.7969,  0.7773,  0.2139,  0.3535,  0.3730,  0.5469,  0.2754,  0.4492,  0.8594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5262],
        [0.3614],
        [0.2659],
        [0.2130],
        [0.1759],
        [0.1361],
        [0.1313],
        [0.1176],
        [0.1090],
        [0.1006],
        [0.0903],
        [0.0786],
        [0.0712],
        [0.0712]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3262, 0.3672, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2471, 0.2871, 0.2441, 0.2217, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.2324, 0.2031, 0.1865, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1729, 0.1992, 0.1719, 0.1582, 0.1484, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.1719, 0.1504, 0.1377, 0.1299, 0.1318, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.1514, 0.1328, 0.1221, 0.1152, 0.1167, 0.1177, 0.1128, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.1357, 0.1201, 0.1099, 0.1050, 0.1060, 0.1064, 0.1021, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1055, 0.1221, 0.1094, 0.0996, 0.0952, 0.0967, 0.0972, 0.0933, 0.0908, 0.0903, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.1138, 0.0972, 0.0913, 0.0859, 0.0864, 0.0869, 0.0840, 0.0820, 0.0811, 0.0850, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.1045, 0.0928, 0.0845, 0.0801, 0.0811, 0.0815, 0.0786, 0.0762, 0.0757, 0.0791, 0.0752, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.0957, 0.0850, 0.0786, 0.0747, 0.0757, 0.0762, 0.0732, 0.0713, 0.0708, 0.0737, 0.0698, 0.0737, 0.0000, 0.0000],
        [0.0767, 0.0889, 0.0796, 0.0732, 0.0703, 0.0708, 0.0713, 0.0684, 0.0664, 0.0659, 0.0688, 0.0654, 0.0688, 0.0649, 0.0000],
        [0.0742, 0.0864, 0.0757, 0.0688, 0.0649, 0.0654, 0.0664, 0.0635, 0.0620, 0.0615, 0.0640, 0.0608, 0.0635, 0.0601, 0.0623]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0342,  0.0281,  0.0217,  ..., -0.0134,  0.0230, -0.0210],
        [-0.0045,  0.0006, -0.0287,  ..., -0.0235, -0.0368,  0.0446],
        [-0.0081, -0.0192, -0.0090,  ...,  0.0247, -0.0280,  0.0124],
        ...,
        [ 0.0314, -0.0150,  0.0146,  ..., -0.0438, -0.0160, -0.0135],
        [ 0.0083,  0.0430,  0.0314,  ...,  0.0160,  0.0028, -0.0094],
        [ 0.0098,  0.0131, -0.0316,  ...,  0.0037,  0.0204,  0.0062]], device='cuda:0', requires_grad=True)
K: tensor([-0.4258,  0.5391, -0.6641, -0.2100, -0.2178,  1.1094, -0.1279, -0.9648,  0.6055, -0.4355, -0.8867,  0.2227, -0.9258,  1.2500, -0.7969,  0.2969, -0.2891, -0.0791, -0.6602,  0.7734,  0.8164,  0.8906,  0.4160,  0.1328,  0.5391, -0.5938, -0.2119,  0.8516,  0.7188, -1.1484,  0.2393, -0.6016,
        -0.4355,  0.1826,  0.3555,  1.1562,  1.0312,  0.0276, -0.0713, -0.6328,  0.3984, -0.2139, -0.8906, -0.6719, -0.5000, -0.7695,  0.6797,  0.3867,  0.5742, -0.4609,  0.2451, -0.1060,  0.2432, -0.2129,  0.8789, -0.4199,  0.1357,  0.2402,  0.0139, -0.1846,  0.8984, -0.0513, -0.2500, -0.0364],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0235,  0.0154, -0.0378,  ..., -0.0251, -0.0286, -0.0201],
        [-0.0288,  0.0062,  0.0222,  ..., -0.0189,  0.0169, -0.0567],
        [ 0.0160,  0.0305, -0.0271,  ...,  0.0104, -0.0194, -0.0061],
        ...,
        [ 0.0013, -0.0017, -0.0176,  ..., -0.0110,  0.0201,  0.0155],
        [ 0.0216, -0.0125, -0.0119,  ..., -0.0020,  0.0195,  0.0288],
        [ 0.0368,  0.0115,  0.0242,  ..., -0.0458, -0.0194,  0.0179]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1250, -0.7812,  0.0938,  0.3789, -0.8398,  0.3223,  0.1377, -1.2031,  0.1924, -0.1196, -0.0449,  0.0077, -0.4844,  0.3770,  0.4102,  0.4648,  0.5703,  0.2734,  0.2334, -0.8398, -0.9219,  0.3340,  0.0233,  0.3965, -0.0466,  0.7109,  0.6836,  0.8359, -0.3984, -0.3789,  0.1387,  0.4590,
         0.4766,  0.3066, -0.5938,  0.4199, -0.4355,  0.2168, -0.7539,  0.4531, -0.3496, -1.0781, -0.0532, -0.0815, -0.0273,  0.4531, -1.4609,  0.1992, -0.4473, -0.8867, -0.0679,  0.4844, -1.4531,  0.3750,  0.5273,  0.0049, -1.0000, -0.5977,  1.0000, -0.2275,  0.1406,  0.1895,  0.1250,  0.2812],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1030, -0.1206, -0.2109, -0.2773, -0.2949, -0.2793, -0.3340, -0.3301, -0.3477, -0.3105, -0.3770, -0.3379, -0.3535, -0.3574],
        [ 0.0000,  0.1206, -0.0625, -0.1582, -0.2256, -0.2188, -0.2002, -0.2559, -0.2637, -0.2754, -0.2363, -0.2949, -0.2480, -0.2871, -0.2773],
        [ 0.0000,  0.1504, -0.0130, -0.1084, -0.1689, -0.1660, -0.1494, -0.1982, -0.2158, -0.2275, -0.1904, -0.2441, -0.1973, -0.2422, -0.2256],
        [ 0.0000,  0.1387,  0.0051, -0.0806, -0.1348, -0.1245, -0.1177, -0.1611, -0.1826, -0.1914, -0.1533, -0.2021, -0.1543, -0.2070, -0.1875],
        [ 0.0000,  0.1426, -0.0054, -0.0898, -0.1533, -0.1426, -0.1338, -0.1768, -0.1963, -0.2031, -0.1709, -0.2188, -0.1699, -0.2236, -0.2061],
        [ 0.0000,  0.1650,  0.0282, -0.0583, -0.1147, -0.1021, -0.0962, -0.1387, -0.1631, -0.1719, -0.1289, -0.1836, -0.1318, -0.1914, -0.1621],
        [ 0.0000,  0.1299, -0.0029, -0.0850, -0.1416, -0.1289, -0.1221, -0.1641, -0.1885, -0.1943, -0.1553, -0.2070, -0.1553, -0.2168, -0.1914],
        [ 0.0000,  0.1689,  0.0471, -0.0422, -0.0918, -0.0825, -0.0742, -0.1157, -0.1445, -0.1543, -0.1084, -0.1641, -0.1133, -0.1719, -0.1436],
        [ 0.0000,  0.1465,  0.0366, -0.0554, -0.0996, -0.0874, -0.0820, -0.1235, -0.1484, -0.1562, -0.1108, -0.1631, -0.1172, -0.1758, -0.1426],
        [ 0.0000,  0.0630, -0.0923, -0.1572, -0.2139, -0.2080, -0.2061, -0.2373, -0.2637, -0.2754, -0.2285, -0.2812, -0.2334, -0.2891, -0.2773],
        [ 0.0000,  0.1504,  0.0283, -0.0645, -0.1162, -0.1045, -0.0996, -0.1377, -0.1670, -0.1719, -0.1309, -0.1826, -0.1348, -0.1953, -0.1631],
        [ 0.0000,  0.1445,  0.0249, -0.0544, -0.1006, -0.0928, -0.0850, -0.1245, -0.1504, -0.1592, -0.1187, -0.1689, -0.1162, -0.1758, -0.1514],
        [ 0.0000,  0.1484,  0.0364, -0.0447, -0.0908, -0.0815, -0.0747, -0.1133, -0.1436, -0.1523, -0.1089, -0.1592, -0.1099, -0.1709, -0.1406],
        [ 0.0000,  0.1523,  0.0168, -0.0791, -0.1309, -0.1230, -0.1133, -0.1562, -0.1816, -0.1875, -0.1465, -0.2002, -0.1543, -0.2139, -0.1777]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5033],
        [0.3288],
        [0.2432],
        [0.1913],
        [0.1593],
        [0.1383],
        [0.1213],
        [0.1082],
        [0.0970],
        [0.0876],
        [0.0815],
        [0.0768],
        [0.0702],
        [0.0668]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4844, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3555, 0.3340, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.2559, 0.2324, 0.2451, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2207, 0.2061, 0.1826, 0.1904, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.1709, 0.1533, 0.1602, 0.1680, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1631, 0.1504, 0.1318, 0.1367, 0.1436, 0.1387, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.1309, 0.1162, 0.1206, 0.1260, 0.1226, 0.1211, 0.1206, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1167, 0.1030, 0.1074, 0.1123, 0.1089, 0.1074, 0.1074, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.1055, 0.0933, 0.0972, 0.1016, 0.0981, 0.0972, 0.0972, 0.0996, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.0972, 0.0854, 0.0879, 0.0913, 0.0889, 0.0874, 0.0874, 0.0894, 0.0859, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.0879, 0.0776, 0.0806, 0.0840, 0.0815, 0.0806, 0.0806, 0.0820, 0.0791, 0.0874, 0.0820, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0796, 0.0718, 0.0747, 0.0776, 0.0752, 0.0747, 0.0747, 0.0762, 0.0737, 0.0811, 0.0767, 0.0752, 0.0000, 0.0000],
        [0.0820, 0.0747, 0.0664, 0.0688, 0.0723, 0.0698, 0.0693, 0.0693, 0.0708, 0.0684, 0.0752, 0.0708, 0.0698, 0.0723, 0.0000],
        [0.0786, 0.0708, 0.0623, 0.0645, 0.0669, 0.0649, 0.0645, 0.0645, 0.0659, 0.0635, 0.0698, 0.0659, 0.0649, 0.0674, 0.0664]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0115,  0.0072,  0.0145,  ..., -0.0185,  0.0357,  0.0247],
        [ 0.0017,  0.0010,  0.0089,  ..., -0.0119, -0.0426, -0.0020],
        [-0.0084, -0.0348, -0.0092,  ...,  0.0349, -0.0191,  0.0100],
        ...,
        [-0.0048,  0.0154, -0.0003,  ..., -0.0137, -0.0286,  0.0366],
        [-0.0229, -0.0020, -0.0207,  ..., -0.0083, -0.0116,  0.0045],
        [ 0.0005,  0.0034,  0.0138,  ...,  0.0113, -0.0078,  0.0221]], device='cuda:0', requires_grad=True)
K: tensor([-0.2910, -0.1348, -0.0518,  0.3438,  0.1089, -0.5469,  1.0000,  0.8164,  0.0762,  0.3691, -0.0728, -1.4219, -0.3086,  1.0625,  0.8945, -0.2930,  0.8906,  0.7266,  0.5117,  0.1875,  0.5273, -0.2041,  0.0938,  0.9844, -0.0255, -0.1748, -0.8789,  0.1084, -0.2930,  1.8906, -0.5664, -1.3516,
         0.2695,  0.3477, -0.4199, -0.5781, -0.8516, -0.4141,  0.1953,  1.0234,  0.2520,  0.7969, -0.4590,  0.3086, -0.2217,  1.4844,  0.7500,  0.3535, -0.3008, -0.0064,  1.1172,  0.7383,  0.0457, -0.1055, -0.5547, -0.7031,  0.0276,  0.7500,  0.7422, -0.6016, -0.5117, -0.0219, -0.3340,  0.1777],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0384,  0.0335, -0.0184,  ...,  0.0056,  0.0032,  0.0133],
        [-0.0216,  0.0039, -0.0179,  ..., -0.0235, -0.0066, -0.0312],
        [-0.0211, -0.0133, -0.0016,  ..., -0.0225, -0.0038, -0.0015],
        ...,
        [ 0.0126,  0.0084, -0.0332,  ..., -0.0184,  0.0211,  0.0171],
        [-0.0031, -0.0131, -0.0217,  ..., -0.0030, -0.0145,  0.0300],
        [-0.0052,  0.0248, -0.0127,  ..., -0.0105, -0.0120, -0.0145]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1187, -0.1147, -0.7930, -0.5078, -0.7109, -1.3672,  0.1992,  0.6094,  0.1299,  0.2480, -0.3535,  0.2471,  0.0243, -0.3496,  0.3047,  0.8984, -0.2041, -0.4688, -0.2109, -0.7578, -0.5156, -0.2559,  1.8281, -0.1455,  0.5117,  0.4727,  0.5156, -0.4766, -0.5938,  0.0359,  0.1797,  0.0238,
         0.4102, -0.3340, -0.1865, -0.3203, -0.9766,  0.1475,  0.0417, -0.0437,  0.0510,  1.0859,  0.4746,  0.5586, -0.6406, -0.4844,  0.3203, -0.6094,  0.9336, -0.6992, -0.4102, -0.0747,  0.3555,  0.3281, -0.6406,  0.7070, -0.2539, -0.8281, -0.3184, -0.2871, -0.0476, -0.4766,  0.2539, -0.8516],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0664,  0.0542,  0.1289,  0.2109,  0.1660,  0.1680,  0.1621,  0.1934,  0.1523,  0.2695,  0.2012,  0.1826,  0.2236,  0.2051],
        [ 0.0000, -0.0630, -0.1416, -0.0845, -0.0200, -0.0457, -0.0513, -0.0625, -0.0308, -0.0718,  0.0566, -0.0217, -0.0442, -0.0018, -0.0024],
        [ 0.0000, -0.0503, -0.1436, -0.0908, -0.0320, -0.0645, -0.0771, -0.0815, -0.0540, -0.0913,  0.0265, -0.0488, -0.0708, -0.0269, -0.0347],
        [ 0.0000, -0.0684, -0.1885, -0.1455, -0.0947, -0.1260, -0.1396, -0.1455, -0.1182, -0.1602, -0.0408, -0.1157, -0.1318, -0.0947, -0.1016],
        [ 0.0000, -0.0801, -0.1885, -0.1475, -0.0991, -0.1289, -0.1406, -0.1455, -0.1191, -0.1592, -0.0510, -0.1177, -0.1357, -0.0967, -0.1050],
        [ 0.0000, -0.0820, -0.2119, -0.1729, -0.1279, -0.1592, -0.1738, -0.1758, -0.1504, -0.1875, -0.0820, -0.1494, -0.1641, -0.1279, -0.1396],
        [ 0.0000, -0.0815, -0.1982, -0.1592, -0.1143, -0.1445, -0.1562, -0.1592, -0.1328, -0.1719, -0.0674, -0.1318, -0.1475, -0.1089, -0.1206],
        [ 0.0000, -0.0889, -0.2100, -0.1719, -0.1270, -0.1582, -0.1699, -0.1709, -0.1465, -0.1855, -0.0825, -0.1465, -0.1641, -0.1250, -0.1348],
        [ 0.0000, -0.0854, -0.2109, -0.1689, -0.1240, -0.1582, -0.1670, -0.1689, -0.1436, -0.1807, -0.0854, -0.1436, -0.1602, -0.1211, -0.1338],
        [ 0.0000, -0.0703, -0.2012, -0.1709, -0.1338, -0.1611, -0.1758, -0.1797, -0.1562, -0.1973, -0.0933, -0.1572, -0.1729, -0.1387, -0.1436],
        [ 0.0000, -0.0952, -0.2188, -0.1816, -0.1396, -0.1729, -0.1846, -0.1855, -0.1631, -0.2002, -0.1030, -0.1641, -0.1787, -0.1426, -0.1533],
        [ 0.0000, -0.1133, -0.2217, -0.1826, -0.1416, -0.1709, -0.1807, -0.1816, -0.1572, -0.1953, -0.0986, -0.1562, -0.1738, -0.1357, -0.1445],
        [ 0.0000, -0.0972, -0.2129, -0.1738, -0.1289, -0.1592, -0.1719, -0.1719, -0.1475, -0.1855, -0.0854, -0.1465, -0.1621, -0.1260, -0.1367],
        [ 0.0000, -0.1016, -0.2344, -0.1992, -0.1572, -0.1895, -0.2021, -0.2012, -0.1768, -0.2148, -0.1201, -0.1777, -0.1924, -0.1553, -0.1670]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4372],
        [0.2901],
        [0.2203],
        [0.1790],
        [0.1497],
        [0.1286],
        [0.1139],
        [0.1020],
        [0.0916],
        [0.0844],
        [0.0772],
        [0.0719],
        [0.0664],
        [0.0623]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0099,:0.0109,:0.0106 the:0.0135,:0.0106 the:0.0131 the:0.0131,:0.0106)
,
------
		(,:0.0109,:0.0106 the:0.0135,:0.0106 the:0.0131 the:0.0131,:0.0106 the:0.0153)
 the the the the the the the the the the the the the the the
@ 50 train 9.4877 , allloss: 11.9003, dt: 1729.15ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0967, norm(x): 0.0971, norm(y): 0.9997, norm:9.7486, tok/sec: 75801.21, flops:79.55, batch-reuse:1
@ 51 train 9.5172 , allloss: 11.8573, dt: 1292.22ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0964, norm(y): 0.9997, norm:9.2233, tok/sec: 101431.30, flops:106.45, batch-reuse:1
@ 52 train 9.4490 , allloss: 11.7626, dt: 1282.69ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0957, norm(x): 0.0956, norm(y): 0.9997, norm:8.7424, tok/sec: 102185.21, flops:107.25, batch-reuse:1
@ 53 train 9.4665 , allloss: 11.7851, dt: 1288.36ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0947, norm(x): 0.0948, norm(y): 0.9997, norm:8.4815, tok/sec: 101735.29, flops:106.77, batch-reuse:1
@ 54 train 9.4509 , allloss: 11.7718, dt: 1301.17ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0938, norm(y): 0.9997, norm:8.2365, tok/sec: 100734.08, flops:105.72, batch-reuse:1
@ 55 train 9.4981 , allloss: 11.8140, dt: 1285.32ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0927, norm(y): 0.9997, norm:7.8095, tok/sec: 101976.39, flops:107.03, batch-reuse:1
@ 56 train 9.4054 , allloss: 11.7264, dt: 1303.58ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0922, norm(y): 0.9997, norm:7.4044, tok/sec: 100548.11, flops:105.53, batch-reuse:1
@ 57 train 9.3704 , allloss: 11.7039, dt: 1288.45ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0922, norm(y): 0.9997, norm:7.5277, tok/sec: 101728.41, flops:106.77, batch-reuse:1
@ 58 train 9.4041 , allloss: 11.7001, dt: 1309.85ms, fracRes: 0.0062, norm(attn): 0.0505, norm(output): 0.0933, norm(x): 0.0920, norm(y): 0.9997, norm:6.8407, tok/sec: 100066.79, flops:105.02, batch-reuse:1
@ 59 train 9.3321 , allloss: 11.5880, dt: 1328.65ms, fracRes: 0.0062, norm(attn): 0.0505, norm(output): 0.0933, norm(x): 0.0919, norm(y): 0.9997, norm:8.8129, tok/sec: 98650.70, flops:103.54, batch-reuse:1
@ 60 train 9.3453 , allloss: 11.5499, dt: 1334.05ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0938, norm(x): 0.0927, norm(y): 0.9997, norm:6.9589, tok/sec: 98250.84, flops:103.12, batch-reuse:1
@ 61 train 9.3502 , allloss: 11.5114, dt: 1325.77ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0938, norm(x): 0.0935, norm(y): 0.9997, norm:6.4065, tok/sec: 98864.60, flops:103.76, batch-reuse:1
@ 62 train 9.3552 , allloss: 11.4513, dt: 1336.19ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0938, norm(x): 0.0938, norm(y): 0.9997, norm:8.6820, tok/sec: 98093.52, flops:102.95, batch-reuse:1
@ 63 train 9.3441 , allloss: 11.4382, dt: 1314.24ms, fracRes: 0.0062, norm(attn): 0.0505, norm(output): 0.0938, norm(x): 0.0936, norm(y): 0.9997, norm:7.9416, tok/sec: 99732.35, flops:104.67, batch-reuse:1
@ 64 train 9.3263 , allloss: 11.3891, dt: 1288.82ms, fracRes: 0.0061, norm(attn): 0.0505, norm(output): 0.0938, norm(x): 0.0936, norm(y): 0.9997, norm:6.3880, tok/sec: 101699.58, flops:106.74, batch-reuse:1
@ 65 train 9.3370 , allloss: 11.3901, dt: 1304.90ms, fracRes: 0.0061, norm(attn): 0.0505, norm(output): 0.0942, norm(x): 0.0942, norm(y): 0.9997, norm:6.4356, tok/sec: 100446.18, flops:105.42, batch-reuse:1
@ 66 train 9.3133 , allloss: 11.3684, dt: 1288.35ms, fracRes: 0.0061, norm(attn): 0.0508, norm(output): 0.0947, norm(x): 0.0949, norm(y): 0.9997, norm:5.4635, tok/sec: 101736.10, flops:106.77, batch-reuse:1
@ 67 train 9.2246 , allloss: 11.3391, dt: 1294.97ms, fracRes: 0.0062, norm(attn): 0.0505, norm(output): 0.0952, norm(x): 0.0949, norm(y): 0.9997, norm:6.7079, tok/sec: 101216.39, flops:106.23, batch-reuse:1
@ 68 train 9.2683 , allloss: 11.4600, dt: 1281.42ms, fracRes: 0.0061, norm(attn): 0.0503, norm(output): 0.0942, norm(x): 0.0940, norm(y): 0.9997, norm:5.6098, tok/sec: 102286.87, flops:107.35, batch-reuse:1
@ 69 train 9.2214 , allloss: 11.5797, dt: 1327.05ms, fracRes: 0.0061, norm(attn): 0.0488, norm(output): 0.0933, norm(x): 0.0926, norm(y): 0.9997, norm:6.2547, tok/sec: 98769.54, flops:103.66, batch-reuse:1
@ 70 train 9.2115 , allloss: 11.6175, dt: 1317.44ms, fracRes: 0.0061, norm(attn): 0.0481, norm(output): 0.0933, norm(x): 0.0929, norm(y): 0.9997, norm:6.0074, tok/sec: 99490.04, flops:104.42, batch-reuse:1
@ 71 train 9.2018 , allloss: 11.4877, dt: 1277.50ms, fracRes: 0.0061, norm(attn): 0.0496, norm(output): 0.0942, norm(x): 0.0943, norm(y): 0.9997, norm:5.4431, tok/sec: 102600.69, flops:107.68, batch-reuse:1
@ 72 train 9.1952 , allloss: 11.3980, dt: 1312.76ms, fracRes: 0.0061, norm(attn): 0.0498, norm(output): 0.0947, norm(x): 0.0952, norm(y): 0.9997, norm:4.5062, tok/sec: 99844.59, flops:104.79, batch-reuse:1
@ 73 train 9.2001 , allloss: 11.4238, dt: 1315.39ms, fracRes: 0.0061, norm(attn): 0.0498, norm(output): 0.0947, norm(x): 0.0953, norm(y): 0.9997, norm:5.4430, tok/sec: 99644.82, flops:104.58, batch-reuse:1
@ 74 train 9.1846 , allloss: 11.4415, dt: 1283.96ms, fracRes: 0.0061, norm(attn): 0.0493, norm(output): 0.0942, norm(x): 0.0951, norm(y): 0.9997, norm:4.7256, tok/sec: 102084.09, flops:107.14, batch-reuse:1
@ 75 train 9.4667 , allloss: 11.7151, dt: 1280.76ms, fracRes: 0.0061, norm(attn): 0.0493, norm(output): 0.0957, norm(x): 0.0955, norm(y): 0.9997, norm:5.3018, tok/sec: 102339.21, flops:107.41, batch-reuse:1
@ 76 train 9.1783 , allloss: 11.5801, dt: 1298.49ms, fracRes: 0.0062, norm(attn): 0.0481, norm(output): 0.0947, norm(x): 0.0952, norm(y): 0.9997, norm:7.2006, tok/sec: 100941.60, flops:105.94, batch-reuse:1
@ 77 train 9.4444 , allloss: 11.8551, dt: 1325.51ms, fracRes: 0.0061, norm(attn): 0.0481, norm(output): 0.0942, norm(x): 0.0949, norm(y): 0.9997, norm:7.9616, tok/sec: 98884.52, flops:103.78, batch-reuse:1
@ 78 train 9.2547 , allloss: 11.8042, dt: 1345.45ms, fracRes: 0.0061, norm(attn): 0.0474, norm(output): 0.0942, norm(x): 0.0938, norm(y): 0.9996, norm:5.6311, tok/sec: 97419.01, flops:102.24, batch-reuse:1
@ 79 train 9.0991 , allloss: 11.6712, dt: 1342.91ms, fracRes: 0.0061, norm(attn): 0.0471, norm(output): 0.0942, norm(x): 0.0942, norm(y): 0.9997, norm:8.0922, tok/sec: 97602.72, flops:102.44, batch-reuse:1
@ 80 train 9.0997 , allloss: 11.4594, dt: 1343.75ms, fracRes: 0.0061, norm(attn): 0.0479, norm(output): 0.0977, norm(x): 0.0967, norm(y): 0.9997, norm:5.0438, tok/sec: 97541.97, flops:102.37, batch-reuse:1
@ 81 train 9.1106 , allloss: 11.3860, dt: 1313.69ms, fracRes: 0.0061, norm(attn): 0.0483, norm(output): 0.0991, norm(x): 0.0979, norm(y): 0.9997, norm:5.2858, tok/sec: 99773.58, flops:104.71, batch-reuse:1
@ 82 train 9.0315 , allloss: 11.4151, dt: 1290.57ms, fracRes: 0.0061, norm(attn): 0.0471, norm(output): 0.0986, norm(x): 0.0972, norm(y): 0.9997, norm:4.3260, tok/sec: 101561.64, flops:106.59, batch-reuse:1
@ 83 train 9.0453 , allloss: 11.6448, dt: 1317.52ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0947, norm(x): 0.0954, norm(y): 0.9997, norm:4.7237, tok/sec: 99483.94, flops:104.41, batch-reuse:1
@ 84 train 9.0423 , allloss: 11.6053, dt: 1300.02ms, fracRes: 0.0061, norm(attn): 0.0466, norm(output): 0.0957, norm(x): 0.0956, norm(y): 0.9997, norm:4.2658, tok/sec: 100823.34, flops:105.82, batch-reuse:1
@ 85 train 8.9934 , allloss: 11.4099, dt: 1295.68ms, fracRes: 0.0061, norm(attn): 0.0469, norm(output): 0.0967, norm(x): 0.0969, norm(y): 0.9997, norm:3.7475, tok/sec: 101160.80, flops:106.17, batch-reuse:1
@ 86 train 8.9569 , allloss: 11.3172, dt: 1311.20ms, fracRes: 0.0061, norm(attn): 0.0471, norm(output): 0.0991, norm(x): 0.0975, norm(y): 0.9997, norm:4.2109, tok/sec: 99963.16, flops:104.91, batch-reuse:1
@ 87 train 8.9733 , allloss: 11.4460, dt: 1330.27ms, fracRes: 0.0061, norm(attn): 0.0466, norm(output): 0.0967, norm(x): 0.0966, norm(y): 0.9997, norm:3.7693, tok/sec: 98530.49, flops:103.41, batch-reuse:1
@ 88 train 8.9573 , allloss: 11.5770, dt: 1336.94ms, fracRes: 0.0061, norm(attn): 0.0459, norm(output): 0.0952, norm(x): 0.0954, norm(y): 0.9996, norm:3.7902, tok/sec: 98038.47, flops:102.89, batch-reuse:1
@ 89 train 8.9143 , allloss: 11.4596, dt: 1300.91ms, fracRes: 0.0061, norm(attn): 0.0461, norm(output): 0.0962, norm(x): 0.0961, norm(y): 0.9996, norm:3.5715, tok/sec: 100753.76, flops:105.74, batch-reuse:1
@ 90 train 8.9177 , allloss: 11.3041, dt: 1309.14ms, fracRes: 0.0061, norm(attn): 0.0469, norm(output): 0.0972, norm(x): 0.0971, norm(y): 0.9997, norm:3.7979, tok/sec: 100120.93, flops:105.08, batch-reuse:1
@ 91 train 8.9470 , allloss: 11.3402, dt: 1302.68ms, fracRes: 0.0061, norm(attn): 0.0469, norm(output): 0.0967, norm(x): 0.0972, norm(y): 0.9997, norm:5.3654, tok/sec: 100617.48, flops:105.60, batch-reuse:1
@ 92 train 8.8430 , allloss: 11.1322, dt: 1294.81ms, fracRes: 0.0061, norm(attn): 0.0469, norm(output): 0.0996, norm(x): 0.0984, norm(y): 0.9997, norm:4.1630, tok/sec: 101228.97, flops:106.24, batch-reuse:1
@ 93 train 8.8756 , allloss: 11.2380, dt: 1298.79ms, fracRes: 0.0061, norm(attn): 0.0466, norm(output): 0.0977, norm(x): 0.0976, norm(y): 0.9997, norm:3.7329, tok/sec: 100918.22, flops:105.92, batch-reuse:1
@ 94 train 9.0122 , allloss: 11.4158, dt: 1317.76ms, fracRes: 0.0061, norm(attn): 0.0461, norm(output): 0.0967, norm(x): 0.0967, norm(y): 0.9997, norm:6.9468, tok/sec: 99465.99, flops:104.39, batch-reuse:1
@ 95 train 8.8309 , allloss: 11.2018, dt: 1313.23ms, fracRes: 0.0061, norm(attn): 0.0461, norm(output): 0.0991, norm(x): 0.0975, norm(y): 0.9997, norm:3.3278, tok/sec: 99808.63, flops:104.75, batch-reuse:1
@ 96 train 8.7443 , allloss: 11.0960, dt: 1302.99ms, fracRes: 0.0061, norm(attn): 0.0464, norm(output): 0.0991, norm(x): 0.0980, norm(y): 0.9997, norm:3.6271, tok/sec: 100593.35, flops:105.57, batch-reuse:1
@ 97 train 8.8013 , allloss: 11.1973, dt: 1306.73ms, fracRes: 0.0061, norm(attn): 0.0459, norm(output): 0.0967, norm(x): 0.0972, norm(y): 0.9997, norm:3.9778, tok/sec: 100305.60, flops:105.27, batch-reuse:1
@ 98 train 8.8030 , allloss: 11.1473, dt: 1290.66ms, fracRes: 0.0061, norm(attn): 0.0461, norm(output): 0.1001, norm(x): 0.0980, norm(y): 0.9997, norm:3.4160, tok/sec: 101554.63, flops:106.58, batch-reuse:1
@ 99 train 8.7643 , allloss: 11.0772, dt: 1289.39ms, fracRes: 0.0061, norm(attn): 0.0459, norm(output): 0.1006, norm(x): 0.0987, norm(y): 0.9997, norm:4.6084, tok/sec: 101654.32, flops:106.69, batch-reuse:1
@ 100 train 8.7206 , allloss: 11.0904, dt: 1306.02ms, fracRes: 0.0061, norm(attn): 0.0449, norm(output): 0.0996, norm(x): 0.0981, norm(y): 0.9997, norm:3.1679, tok/sec: 100359.83, flops:105.33, batch-reuse:1
@ 101 train 8.6531 , allloss: 11.0287, dt: 1292.15ms, fracRes: 0.0061, norm(attn): 0.0447, norm(output): 0.0986, norm(x): 0.0977, norm(y): 0.9996, norm:5.2255, tok/sec: 101436.78, flops:106.46, batch-reuse:1
@ 102 train 8.6984 , allloss: 10.9449, dt: 1296.02ms, fracRes: 0.0061, norm(attn): 0.0457, norm(output): 0.1006, norm(x): 0.0992, norm(y): 0.9997, norm:3.5709, tok/sec: 101134.00, flops:106.14, batch-reuse:1
@ 103 train 8.7105 , allloss: 10.9545, dt: 1301.34ms, fracRes: 0.0061, norm(attn): 0.0457, norm(output): 0.1006, norm(x): 0.0990, norm(y): 0.9997, norm:2.8483, tok/sec: 100721.06, flops:105.71, batch-reuse:1
@ 104 train 8.7262 , allloss: 11.0184, dt: 1308.34ms, fracRes: 0.0061, norm(attn): 0.0442, norm(output): 0.0996, norm(x): 0.0982, norm(y): 0.9997, norm:3.3733, tok/sec: 100182.11, flops:105.14, batch-reuse:1
@ 105 train 8.6706 , allloss: 10.9023, dt: 1316.34ms, fracRes: 0.0061, norm(attn): 0.0454, norm(output): 0.1001, norm(x): 0.0992, norm(y): 0.9997, norm:3.3809, tok/sec: 99572.92, flops:104.50, batch-reuse:1
@ 106 train 8.6532 , allloss: 10.8648, dt: 1313.44ms, fracRes: 0.0061, norm(attn): 0.0452, norm(output): 0.1011, norm(x): 0.0994, norm(y): 0.9997, norm:2.8488, tok/sec: 99792.92, flops:104.73, batch-reuse:1
@ 107 train 8.6091 , allloss: 10.7698, dt: 1292.59ms, fracRes: 0.0061, norm(attn): 0.0454, norm(output): 0.1011, norm(x): 0.0997, norm(y): 0.9997, norm:2.8459, tok/sec: 101402.54, flops:106.42, batch-reuse:1
@ 108 train 8.6056 , allloss: 10.7736, dt: 1327.89ms, fracRes: 0.0061, norm(attn): 0.0447, norm(output): 0.1011, norm(x): 0.0997, norm(y): 0.9997, norm:3.6973, tok/sec: 98707.01, flops:103.59, batch-reuse:1
@ 109 train 8.5558 , allloss: 10.7500, dt: 1356.32ms, fracRes: 0.0061, norm(attn): 0.0444, norm(output): 0.1001, norm(x): 0.0987, norm(y): 0.9997, norm:4.8422, tok/sec: 96638.16, flops:101.42, batch-reuse:1
@ 110 train 8.5967 , allloss: 10.7081, dt: 1314.42ms, fracRes: 0.0061, norm(attn): 0.0449, norm(output): 0.1011, norm(x): 0.1003, norm(y): 0.9997, norm:2.9414, tok/sec: 99718.35, flops:104.66, batch-reuse:1
@ 111 train 8.5656 , allloss: 10.6940, dt: 1337.75ms, fracRes: 0.0061, norm(attn): 0.0442, norm(output): 0.1011, norm(x): 0.1001, norm(y): 0.9997, norm:2.7245, tok/sec: 97979.71, flops:102.83, batch-reuse:1
@ 112 train 8.5650 , allloss: 10.7284, dt: 1331.47ms, fracRes: 0.0061, norm(attn): 0.0439, norm(output): 0.1006, norm(x): 0.0990, norm(y): 0.9997, norm:7.5826, tok/sec: 98441.91, flops:103.32, batch-reuse:1
@ 113 train 8.5188 , allloss: 10.5979, dt: 1330.99ms, fracRes: 0.0061, norm(attn): 0.0447, norm(output): 0.1016, norm(x): 0.1005, norm(y): 0.9997, norm:3.0116, tok/sec: 98477.26, flops:103.35, batch-reuse:1
@ 114 train 8.5204 , allloss: 10.5441, dt: 1314.22ms, fracRes: 0.0061, norm(attn): 0.0449, norm(output): 0.1016, norm(x): 0.1008, norm(y): 0.9997, norm:2.8471, tok/sec: 99733.83, flops:104.67, batch-reuse:1
@ 115 train 8.4994 , allloss: 10.5789, dt: 1323.42ms, fracRes: 0.0061, norm(attn): 0.0437, norm(output): 0.1006, norm(x): 0.0993, norm(y): 0.9997, norm:7.9832, tok/sec: 99040.59, flops:103.94, batch-reuse:1
@ 116 train 8.4744 , allloss: 10.4810, dt: 1298.12ms, fracRes: 0.0061, norm(attn): 0.0442, norm(output): 0.1016, norm(x): 0.1005, norm(y): 0.9997, norm:2.7769, tok/sec: 100970.54, flops:105.97, batch-reuse:1
@ 117 train 8.4460 , allloss: 10.4077, dt: 1275.27ms, fracRes: 0.0061, norm(attn): 0.0447, norm(output): 0.1016, norm(x): 0.1015, norm(y): 0.9997, norm:3.3762, tok/sec: 102779.82, flops:107.87, batch-reuse:1
@ 118 train 8.4269 , allloss: 10.4349, dt: 1306.46ms, fracRes: 0.0061, norm(attn): 0.0439, norm(output): 0.1011, norm(x): 0.1004, norm(y): 0.9997, norm:6.1120, tok/sec: 100326.26, flops:105.29, batch-reuse:1
@ 119 train 8.4096 , allloss: 10.3761, dt: 1325.02ms, fracRes: 0.0061, norm(attn): 0.0437, norm(output): 0.1016, norm(x): 0.1014, norm(y): 0.9997, norm:3.2126, tok/sec: 98920.57, flops:103.82, batch-reuse:1
@ 120 train 8.5248 , allloss: 10.3857, dt: 1334.39ms, fracRes: 0.0062, norm(attn): 0.0449, norm(output): 0.1021, norm(x): 0.1025, norm(y): 0.9997, norm:4.2454, tok/sec: 98226.00, flops:103.09, batch-reuse:1
@ 121 train 8.5443 , allloss: 10.4833, dt: 1309.22ms, fracRes: 0.0061, norm(attn): 0.0442, norm(output): 0.1016, norm(x): 0.1007, norm(y): 0.9997, norm:4.2478, tok/sec: 100114.58, flops:105.07, batch-reuse:1
@ 122 train 8.5216 , allloss: 10.4907, dt: 1307.15ms, fracRes: 0.0062, norm(attn): 0.0435, norm(output): 0.1016, norm(x): 0.1006, norm(y): 0.9997, norm:3.3038, tok/sec: 100273.49, flops:105.24, batch-reuse:1
@ 123 train 8.4126 , allloss: 10.3268, dt: 1318.92ms, fracRes: 0.0062, norm(attn): 0.0439, norm(output): 0.1021, norm(x): 0.1021, norm(y): 0.9997, norm:3.0415, tok/sec: 99378.61, flops:104.30, batch-reuse:1
@ 124 train 8.4244 , allloss: 10.3716, dt: 1358.03ms, fracRes: 0.0061, norm(attn): 0.0437, norm(output): 0.1021, norm(x): 0.1019, norm(y): 0.9997, norm:5.7626, tok/sec: 96516.41, flops:101.30, batch-reuse:1
@ 125 train 8.4246 , allloss: 10.3273, dt: 1320.70ms, fracRes: 0.0062, norm(attn): 0.0435, norm(output): 0.1025, norm(x): 0.1032, norm(y): 0.9997, norm:2.9664, tok/sec: 99244.65, flops:104.16, batch-reuse:1
@ 126 train 8.4038 , allloss: 10.2719, dt: 1303.47ms, fracRes: 0.0062, norm(attn): 0.0437, norm(output): 0.1035, norm(x): 0.1035, norm(y): 0.9997, norm:3.4200, tok/sec: 100556.14, flops:105.54, batch-reuse:1
@ 127 train 8.3488 , allloss: 10.3101, dt: 1303.91ms, fracRes: 0.0062, norm(attn): 0.0432, norm(output): 0.1021, norm(x): 0.1017, norm(y): 0.9997, norm:3.8389, tok/sec: 100522.16, flops:105.50, batch-reuse:1
@ 128 train 8.3063 , allloss: 10.3028, dt: 1315.81ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1016, norm(x): 0.1013, norm(y): 0.9997, norm:2.8702, tok/sec: 99613.40, flops:104.55, batch-reuse:1
@ 129 train 8.4321 , allloss: 10.3859, dt: 1314.47ms, fracRes: 0.0062, norm(attn): 0.0432, norm(output): 0.1021, norm(x): 0.1021, norm(y): 0.9997, norm:2.5081, tok/sec: 99714.66, flops:104.65, batch-reuse:1
@ 130 train 8.3250 , allloss: 10.2891, dt: 1334.66ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1021, norm(x): 0.1024, norm(y): 0.9997, norm:2.3612, tok/sec: 98206.63, flops:103.07, batch-reuse:1
@ 131 train 8.3480 , allloss: 10.3019, dt: 1333.93ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1025, norm(x): 0.1028, norm(y): 0.9997, norm:2.9041, tok/sec: 98259.75, flops:103.13, batch-reuse:1
@ 132 train 8.3271 , allloss: 10.2147, dt: 1333.33ms, fracRes: 0.0062, norm(attn): 0.0430, norm(output): 0.1030, norm(x): 0.1034, norm(y): 0.9997, norm:2.6746, tok/sec: 98303.90, flops:103.17, batch-reuse:1
@ 133 train 8.2899 , allloss: 10.1504, dt: 1337.10ms, fracRes: 0.0063, norm(attn): 0.0430, norm(output): 0.1035, norm(x): 0.1035, norm(y): 0.9997, norm:2.4632, tok/sec: 98027.18, flops:102.88, batch-reuse:1
@ 134 train 8.2830 , allloss: 10.1665, dt: 1328.34ms, fracRes: 0.0062, norm(attn): 0.0430, norm(output): 0.1021, norm(x): 0.1024, norm(y): 0.9997, norm:3.5059, tok/sec: 98673.63, flops:103.56, batch-reuse:1
@ 135 train 8.2361 , allloss: 10.0659, dt: 1298.75ms, fracRes: 0.0063, norm(attn): 0.0430, norm(output): 0.1035, norm(x): 0.1037, norm(y): 0.9997, norm:3.8126, tok/sec: 100921.92, flops:105.92, batch-reuse:1
@ 136 train 8.2326 , allloss: 10.0157, dt: 1308.96ms, fracRes: 0.0063, norm(attn): 0.0430, norm(output): 0.1040, norm(x): 0.1039, norm(y): 0.9997, norm:2.3882, tok/sec: 100134.61, flops:105.09, batch-reuse:1
@ 137 train 8.1560 , allloss: 9.9626, dt: 1312.32ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1035, norm(x): 0.1035, norm(y): 0.9997, norm:3.4823, tok/sec: 99878.44, flops:104.82, batch-reuse:1
@ 138 train 8.1332 , allloss: 9.8458, dt: 1318.13ms, fracRes: 0.0063, norm(attn): 0.0432, norm(output): 0.1060, norm(x): 0.1050, norm(y): 0.9997, norm:4.3294, tok/sec: 99437.91, flops:104.36, batch-reuse:1
@ 139 train 8.0757 , allloss: 9.7932, dt: 1277.49ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1035, norm(x): 0.1041, norm(y): 0.9997, norm:2.6412, tok/sec: 102601.47, flops:107.68, batch-reuse:1
@ 140 train 8.1326 , allloss: 9.9152, dt: 1292.02ms, fracRes: 0.0062, norm(attn): 0.0425, norm(output): 0.1025, norm(x): 0.1033, norm(y): 0.9997, norm:4.8410, tok/sec: 101447.28, flops:106.47, batch-reuse:1
@ 141 train 8.1209 , allloss: 9.8121, dt: 1309.92ms, fracRes: 0.0063, norm(attn): 0.0427, norm(output): 0.1064, norm(x): 0.1052, norm(y): 0.9997, norm:3.9096, tok/sec: 100060.72, flops:105.02, batch-reuse:1
@ 142 train 8.1850 , allloss: 9.9056, dt: 1341.96ms, fracRes: 0.0063, norm(attn): 0.0427, norm(output): 0.1055, norm(x): 0.1043, norm(y): 0.9997, norm:2.3800, tok/sec: 97672.10, flops:102.51, batch-reuse:1
@ 143 train 8.1327 , allloss: 9.8914, dt: 1331.65ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.1035, norm(x): 0.1034, norm(y): 0.9997, norm:2.9326, tok/sec: 98428.58, flops:103.30, batch-reuse:1
@ 144 train 8.0786 , allloss: 9.7093, dt: 1329.05ms, fracRes: 0.0063, norm(attn): 0.0427, norm(output): 0.1074, norm(x): 0.1059, norm(y): 0.9998, norm:3.6225, tok/sec: 98621.12, flops:103.50, batch-reuse:1
@ 145 train 8.0762 , allloss: 9.7192, dt: 1288.44ms, fracRes: 0.0063, norm(attn): 0.0427, norm(output): 0.1074, norm(x): 0.1057, norm(y): 0.9998, norm:2.7071, tok/sec: 101729.02, flops:106.77, batch-reuse:1
@ 146 train 8.1698 , allloss: 9.8416, dt: 1309.73ms, fracRes: 0.0063, norm(attn): 0.0422, norm(output): 0.1055, norm(x): 0.1048, norm(y): 0.9998, norm:3.4276, tok/sec: 100075.88, flops:105.03, batch-reuse:1
@ 147 train 8.0800 , allloss: 9.7049, dt: 1309.92ms, fracRes: 0.0063, norm(attn): 0.0420, norm(output): 0.1074, norm(x): 0.1059, norm(y): 0.9998, norm:3.9290, tok/sec: 100061.36, flops:105.02, batch-reuse:1
@ 148 train 8.0344 , allloss: 9.6336, dt: 1327.08ms, fracRes: 0.0063, norm(attn): 0.0422, norm(output): 0.1074, norm(x): 0.1060, norm(y): 0.9998, norm:2.0942, tok/sec: 98767.52, flops:103.66, batch-reuse:1
@ 149 train 7.9608 , allloss: 9.5967, dt: 1298.21ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.1060, norm(x): 0.1046, norm(y): 0.9998, norm:6.9742, tok/sec: 100963.77, flops:105.96, batch-reuse:1
@ 150 train 8.0977 , allloss: 9.6654, dt: 1291.93ms, fracRes: 0.0064, norm(attn): 0.0415, norm(output): 0.1074, norm(x): 0.1063, norm(y): 0.9998, norm:2.1898, tok/sec: 101454.68, flops:106.48, batch-reuse:1
@ 151 train 7.9493 , allloss: 9.5137, dt: 1328.74ms, fracRes: 0.0064, norm(attn): 0.0415, norm(output): 0.1084, norm(x): 0.1066, norm(y): 0.9998, norm:4.1514, tok/sec: 98644.05, flops:103.53, batch-reuse:1
@ 152 train 7.9404 , allloss: 9.5238, dt: 1306.95ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.1074, norm(x): 0.1058, norm(y): 0.9998, norm:3.2893, tok/sec: 100288.19, flops:105.25, batch-reuse:1
@ 153 train 7.9134 , allloss: 9.4984, dt: 1312.15ms, fracRes: 0.0064, norm(attn): 0.0405, norm(output): 0.1074, norm(x): 0.1058, norm(y): 0.9998, norm:6.0182, tok/sec: 99890.93, flops:104.84, batch-reuse:1
@ 154 train 7.9861 , allloss: 9.4872, dt: 1344.51ms, fracRes: 0.0064, norm(attn): 0.0413, norm(output): 0.1089, norm(x): 0.1077, norm(y): 0.9998, norm:2.8486, tok/sec: 97486.86, flops:102.31, batch-reuse:1
@ 155 train 8.0425 , allloss: 9.4381, dt: 1287.65ms, fracRes: 0.0065, norm(attn): 0.0430, norm(output): 0.1099, norm(x): 0.1096, norm(y): 0.9998, norm:4.3453, tok/sec: 101791.99, flops:106.83, batch-reuse:1
@ 156 train 7.9224 , allloss: 9.4091, dt: 1303.62ms, fracRes: 0.0064, norm(attn): 0.0408, norm(output): 0.1089, norm(x): 0.1076, norm(y): 0.9998, norm:3.2610, tok/sec: 100544.87, flops:105.52, batch-reuse:1
@ 157 train 8.0035 , allloss: 9.6292, dt: 1321.36ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.1035, norm(x): 0.1045, norm(y): 0.9998, norm:7.8091, tok/sec: 99194.49, flops:104.11, batch-reuse:1
@ 158 train 7.9675 , allloss: 9.5350, dt: 1341.47ms, fracRes: 0.0064, norm(attn): 0.0396, norm(output): 0.1074, norm(x): 0.1057, norm(y): 0.9998, norm:5.6446, tok/sec: 97707.55, flops:102.55, batch-reuse:1
@ 159 train 7.9846 , allloss: 9.4006, dt: 1311.89ms, fracRes: 0.0065, norm(attn): 0.0410, norm(output): 0.1094, norm(x): 0.1090, norm(y): 0.9998, norm:3.4889, tok/sec: 99911.15, flops:104.86, batch-reuse:1
@ 160 train 7.9170 , allloss: 9.2893, dt: 1297.21ms, fracRes: 0.0065, norm(attn): 0.0405, norm(output): 0.1099, norm(x): 0.1093, norm(y): 0.9998, norm:3.5877, tok/sec: 101041.84, flops:106.05, batch-reuse:1
@ 161 train 7.9066 , allloss: 9.3104, dt: 1319.13ms, fracRes: 0.0065, norm(attn): 0.0400, norm(output): 0.1089, norm(x): 0.1076, norm(y): 0.9998, norm:4.0802, tok/sec: 99362.32, flops:104.28, batch-reuse:1
@ 162 train 7.9436 , allloss: 9.3443, dt: 1300.37ms, fracRes: 0.0065, norm(attn): 0.0396, norm(output): 0.1089, norm(x): 0.1079, norm(y): 0.9998, norm:2.9881, tok/sec: 100796.19, flops:105.79, batch-reuse:1
@ 163 train 7.8960 , allloss: 9.2629, dt: 1280.90ms, fracRes: 0.0065, norm(attn): 0.0393, norm(output): 0.1094, norm(x): 0.1091, norm(y): 0.9998, norm:2.8764, tok/sec: 102328.22, flops:107.40, batch-reuse:1
@ 164 train 7.8120 , allloss: 9.1481, dt: 1302.03ms, fracRes: 0.0065, norm(attn): 0.0396, norm(output): 0.1099, norm(x): 0.1098, norm(y): 0.9999, norm:2.6361, tok/sec: 100667.10, flops:105.65, batch-reuse:1
@ 165 train 7.8778 , allloss: 9.2151, dt: 1319.01ms, fracRes: 0.0065, norm(attn): 0.0393, norm(output): 0.1094, norm(x): 0.1093, norm(y): 0.9999, norm:2.3911, tok/sec: 99371.80, flops:104.29, batch-reuse:1
@ 166 train 7.8217 , allloss: 9.1583, dt: 1315.91ms, fracRes: 0.0065, norm(attn): 0.0388, norm(output): 0.1094, norm(x): 0.1085, norm(y): 0.9998, norm:4.5937, tok/sec: 99605.37, flops:104.54, batch-reuse:1
@ 167 train 7.8135 , allloss: 9.1217, dt: 1307.46ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1094, norm(x): 0.1092, norm(y): 0.9999, norm:2.4880, tok/sec: 100249.22, flops:105.21, batch-reuse:1
@ 168 train 7.7579 , allloss: 9.0239, dt: 1315.41ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1099, norm(x): 0.1102, norm(y): 0.9999, norm:2.8752, tok/sec: 99643.83, flops:104.58, batch-reuse:1
@ 169 train 7.7839 , allloss: 9.0603, dt: 1296.60ms, fracRes: 0.0066, norm(attn): 0.0388, norm(output): 0.1104, norm(x): 0.1098, norm(y): 0.9999, norm:2.0590, tok/sec: 101089.14, flops:106.09, batch-reuse:1
@ 170 train 7.7440 , allloss: 9.0701, dt: 1329.62ms, fracRes: 0.0065, norm(attn): 0.0386, norm(output): 0.1094, norm(x): 0.1088, norm(y): 0.9999, norm:3.3483, tok/sec: 98578.69, flops:103.46, batch-reuse:1
@ 171 train 7.7228 , allloss: 9.0241, dt: 1305.11ms, fracRes: 0.0066, norm(attn): 0.0388, norm(output): 0.1099, norm(x): 0.1094, norm(y): 0.9999, norm:2.0513, tok/sec: 100429.69, flops:105.40, batch-reuse:1
@ 172 train 7.7523 , allloss: 8.9777, dt: 1337.41ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.1099, norm(x): 0.1104, norm(y): 0.9999, norm:2.9354, tok/sec: 98004.16, flops:102.86, batch-reuse:1
@ 173 train 7.7084 , allloss: 8.9235, dt: 1307.20ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1099, norm(x): 0.1099, norm(y): 0.9999, norm:2.2741, tok/sec: 100269.39, flops:105.23, batch-reuse:1
@ 174 train 7.8408 , allloss: 9.0910, dt: 1337.17ms, fracRes: 0.0065, norm(attn): 0.0383, norm(output): 0.1094, norm(x): 0.1086, norm(y): 0.9999, norm:3.2139, tok/sec: 98021.92, flops:102.88, batch-reuse:1
@ 175 train 7.8121 , allloss: 9.0110, dt: 1322.58ms, fracRes: 0.0065, norm(attn): 0.0386, norm(output): 0.1094, norm(x): 0.1089, norm(y): 0.9999, norm:4.6222, tok/sec: 99103.24, flops:104.01, batch-reuse:1
@ 176 train 7.7375 , allloss: 8.8811, dt: 1306.50ms, fracRes: 0.0066, norm(attn): 0.0393, norm(output): 0.1099, norm(x): 0.1102, norm(y): 0.9999, norm:2.6623, tok/sec: 100323.06, flops:105.29, batch-reuse:1
@ 177 train 7.6900 , allloss: 8.8408, dt: 1296.64ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1099, norm(x): 0.1096, norm(y): 0.9999, norm:2.0681, tok/sec: 101086.19, flops:106.09, batch-reuse:1
@ 178 train 7.7418 , allloss: 8.9123, dt: 1298.62ms, fracRes: 0.0066, norm(attn): 0.0388, norm(output): 0.1094, norm(x): 0.1087, norm(y): 0.9999, norm:3.8125, tok/sec: 100931.44, flops:105.93, batch-reuse:1
@ 179 train 7.6216 , allloss: 8.7562, dt: 1320.36ms, fracRes: 0.0065, norm(attn): 0.0386, norm(output): 0.1094, norm(x): 0.1091, norm(y): 0.9999, norm:2.5419, tok/sec: 99270.19, flops:104.19, batch-reuse:1
@ 180 train 7.7299 , allloss: 8.7563, dt: 1347.65ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.1113, norm(x): 0.1117, norm(y): 0.9999, norm:2.3228, tok/sec: 97259.88, flops:102.08, batch-reuse:1
@ 181 train 7.6696 , allloss: 8.6951, dt: 1329.17ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.1108, norm(x): 0.1112, norm(y): 0.9999, norm:2.1257, tok/sec: 98611.55, flops:103.49, batch-reuse:1
@ 182 train 7.6757 , allloss: 8.7695, dt: 1350.58ms, fracRes: 0.0065, norm(attn): 0.0383, norm(output): 0.1094, norm(x): 0.1090, norm(y): 0.9999, norm:2.8473, tok/sec: 97048.64, flops:101.85, batch-reuse:1
@ 183 train 7.6179 , allloss: 8.6673, dt: 1339.74ms, fracRes: 0.0066, norm(attn): 0.0386, norm(output): 0.1099, norm(x): 0.1098, norm(y): 0.9999, norm:2.4714, tok/sec: 97833.97, flops:102.68, batch-reuse:1
@ 184 train 7.5028 , allloss: 8.4979, dt: 1346.06ms, fracRes: 0.0067, norm(attn): 0.0388, norm(output): 0.1108, norm(x): 0.1110, norm(y): 1.0000, norm:2.2223, tok/sec: 97374.30, flops:102.20, batch-reuse:1
@ 185 train 7.5283 , allloss: 8.5050, dt: 1314.80ms, fracRes: 0.0067, norm(attn): 0.0388, norm(output): 0.1113, norm(x): 0.1118, norm(y): 1.0000, norm:2.0391, tok/sec: 99689.65, flops:104.63, batch-reuse:1
@ 186 train 7.6815 , allloss: 8.6870, dt: 1279.93ms, fracRes: 0.0066, norm(attn): 0.0381, norm(output): 0.1104, norm(x): 0.1104, norm(y): 1.0000, norm:2.0004, tok/sec: 102405.78, flops:107.48, batch-reuse:1
@ 187 train 7.7646 , allloss: 8.7401, dt: 1299.28ms, fracRes: 0.0066, norm(attn): 0.0386, norm(output): 0.1104, norm(x): 0.1108, norm(y): 1.0000, norm:2.1302, tok/sec: 100880.10, flops:105.88, batch-reuse:1
@ 188 train 7.6084 , allloss: 8.5410, dt: 1316.72ms, fracRes: 0.0067, norm(attn): 0.0393, norm(output): 0.1113, norm(x): 0.1123, norm(y): 1.0000, norm:2.2523, tok/sec: 99544.03, flops:104.47, batch-reuse:1
@ 189 train 7.7019 , allloss: 8.6333, dt: 1338.78ms, fracRes: 0.0068, norm(attn): 0.0396, norm(output): 0.1113, norm(x): 0.1123, norm(y): 1.0000, norm:2.0141, tok/sec: 97904.40, flops:102.75, batch-reuse:1
@ 190 train 7.6571 , allloss: 8.5880, dt: 1343.93ms, fracRes: 0.0067, norm(attn): 0.0388, norm(output): 0.1113, norm(x): 0.1118, norm(y): 1.0000, norm:2.1219, tok/sec: 97528.87, flops:102.36, batch-reuse:1
@ 191 train 7.6058 , allloss: 8.5499, dt: 1335.62ms, fracRes: 0.0067, norm(attn): 0.0378, norm(output): 0.1108, norm(x): 0.1110, norm(y): 1.0000, norm:1.9212, tok/sec: 98135.83, flops:103.00, batch-reuse:1
@ 192 train 7.6444 , allloss: 8.5491, dt: 1299.59ms, fracRes: 0.0067, norm(attn): 0.0386, norm(output): 0.1113, norm(x): 0.1115, norm(y): 1.0000, norm:1.8833, tok/sec: 100856.67, flops:105.85, batch-reuse:1
@ 193 train 7.5843 , allloss: 8.4436, dt: 1313.28ms, fracRes: 0.0067, norm(attn): 0.0391, norm(output): 0.1147, norm(x): 0.1130, norm(y): 1.0000, norm:2.0847, tok/sec: 99805.04, flops:104.75, batch-reuse:1
@ 194 train 7.6580 , allloss: 8.4921, dt: 1305.24ms, fracRes: 0.0067, norm(attn): 0.0393, norm(output): 0.1152, norm(x): 0.1132, norm(y): 1.0000, norm:2.2661, tok/sec: 100419.96, flops:105.39, batch-reuse:1
@ 195 train 7.6231 , allloss: 8.4948, dt: 1295.34ms, fracRes: 0.0067, norm(attn): 0.0388, norm(output): 0.1118, norm(x): 0.1117, norm(y): 1.0000, norm:3.7972, tok/sec: 101187.22, flops:106.20, batch-reuse:1
@ 196 train 7.5462 , allloss: 8.3856, dt: 1308.44ms, fracRes: 0.0067, norm(attn): 0.0388, norm(output): 0.1152, norm(x): 0.1132, norm(y): 1.0000, norm:1.9062, tok/sec: 100174.51, flops:105.14, batch-reuse:1
@ 197 train 7.5275 , allloss: 8.3643, dt: 1325.63ms, fracRes: 0.0067, norm(attn): 0.0386, norm(output): 0.1147, norm(x): 0.1132, norm(y): 1.0000, norm:2.3745, tok/sec: 98875.42, flops:103.77, batch-reuse:1
@ 198 train 7.4839 , allloss: 8.3008, dt: 1306.65ms, fracRes: 0.0068, norm(attn): 0.0386, norm(output): 0.1143, norm(x): 0.1131, norm(y): 1.0000, norm:2.3490, tok/sec: 100311.47, flops:105.28, batch-reuse:1
@ 199 train 7.5668 , allloss: 8.3896, dt: 1293.95ms, fracRes: 0.0068, norm(attn): 0.0386, norm(output): 0.1123, norm(x): 0.1127, norm(y): 1.0000, norm:3.1345, tok/sec: 101295.99, flops:106.31, batch-reuse:1
@ 200 train 7.5652 , allloss: 8.3549, dt: 1303.38ms, fracRes: 0.0068, norm(attn): 0.0388, norm(output): 0.1157, norm(x): 0.1141, norm(y): 1.0001, norm:2.4156, tok/sec: 100563.39, flops:105.54, batch-reuse:1
@ 201 train 7.5401 , allloss: 8.3165, dt: 1295.88ms, fracRes: 0.0068, norm(attn): 0.0383, norm(output): 0.1162, norm(x): 0.1145, norm(y): 1.0001, norm:2.0230, tok/sec: 101144.92, flops:106.15, batch-reuse:1
@ 202 train 7.5785 , allloss: 8.3713, dt: 1319.79ms, fracRes: 0.0069, norm(attn): 0.0383, norm(output): 0.1152, norm(x): 0.1135, norm(y): 1.0001, norm:3.3061, tok/sec: 99312.89, flops:104.23, batch-reuse:1
@ 203 train 7.5550 , allloss: 8.2996, dt: 1317.77ms, fracRes: 0.0069, norm(attn): 0.0388, norm(output): 0.1167, norm(x): 0.1151, norm(y): 1.0001, norm:2.4566, tok/sec: 99465.17, flops:104.39, batch-reuse:1
@ 204 train 7.5213 , allloss: 8.2442, dt: 1289.19ms, fracRes: 0.0068, norm(attn): 0.0388, norm(output): 0.1167, norm(x): 0.1158, norm(y): 1.0001, norm:2.3161, tok/sec: 101670.15, flops:106.70, batch-reuse:1
@ 205 train 7.5044 , allloss: 8.2334, dt: 1284.37ms, fracRes: 0.0068, norm(attn): 0.0376, norm(output): 0.1167, norm(x): 0.1149, norm(y): 1.0001, norm:1.7665, tok/sec: 102051.50, flops:107.10, batch-reuse:1
@ 206 train 7.5296 , allloss: 8.2359, dt: 1303.32ms, fracRes: 0.0070, norm(attn): 0.0383, norm(output): 0.1167, norm(x): 0.1153, norm(y): 1.0001, norm:2.1914, tok/sec: 100567.91, flops:105.55, batch-reuse:1
@ 207 train 7.4215 , allloss: 8.1046, dt: 1314.68ms, fracRes: 0.0070, norm(attn): 0.0391, norm(output): 0.1172, norm(x): 0.1163, norm(y): 1.0001, norm:2.3030, tok/sec: 99698.65, flops:104.64, batch-reuse:1
@ 208 train 7.4902 , allloss: 8.2140, dt: 1302.85ms, fracRes: 0.0069, norm(attn): 0.0381, norm(output): 0.1167, norm(x): 0.1147, norm(y): 1.0001, norm:3.9078, tok/sec: 100604.35, flops:105.59, batch-reuse:1
@ 209 train 7.5080 , allloss: 8.2288, dt: 1322.72ms, fracRes: 0.0069, norm(attn): 0.0366, norm(output): 0.1167, norm(x): 0.1146, norm(y): 1.0001, norm:2.1244, tok/sec: 99092.42, flops:104.00, batch-reuse:1
@ 210 train 7.4603 , allloss: 8.1478, dt: 1320.76ms, fracRes: 0.0070, norm(attn): 0.0371, norm(output): 0.1167, norm(x): 0.1158, norm(y): 1.0001, norm:1.4869, tok/sec: 99239.53, flops:104.15, batch-reuse:1
@ 211 train 7.3976 , allloss: 8.0888, dt: 1306.00ms, fracRes: 0.0070, norm(attn): 0.0376, norm(output): 0.1167, norm(x): 0.1160, norm(y): 1.0001, norm:1.5994, tok/sec: 100361.61, flops:105.33, batch-reuse:1
@ 212 train 7.4759 , allloss: 8.1607, dt: 1327.88ms, fracRes: 0.0070, norm(attn): 0.0376, norm(output): 0.1167, norm(x): 0.1156, norm(y): 1.0001, norm:1.8208, tok/sec: 98707.49, flops:103.60, batch-reuse:1
@ 213 train 7.3789 , allloss: 8.0230, dt: 1309.93ms, fracRes: 0.0069, norm(attn): 0.0369, norm(output): 0.1172, norm(x): 0.1167, norm(y): 1.0002, norm:2.8343, tok/sec: 100060.21, flops:105.02, batch-reuse:1
@ 214 train 7.4130 , allloss: 8.0366, dt: 1296.43ms, fracRes: 0.0069, norm(attn): 0.0376, norm(output): 0.1172, norm(x): 0.1168, norm(y): 1.0002, norm:2.9124, tok/sec: 101102.08, flops:106.11, batch-reuse:1
@ 215 train 7.3246 , allloss: 7.9647, dt: 1299.03ms, fracRes: 0.0070, norm(attn): 0.0361, norm(output): 0.1172, norm(x): 0.1166, norm(y): 1.0002, norm:1.4329, tok/sec: 100899.93, flops:105.90, batch-reuse:1
@ 216 train 7.3536 , allloss: 8.0189, dt: 1306.25ms, fracRes: 0.0070, norm(attn): 0.0364, norm(output): 0.1167, norm(x): 0.1152, norm(y): 1.0002, norm:1.8695, tok/sec: 100341.85, flops:105.31, batch-reuse:1
@ 217 train 7.4075 , allloss: 8.0250, dt: 1287.88ms, fracRes: 0.0071, norm(attn): 0.0376, norm(output): 0.1172, norm(x): 0.1164, norm(y): 1.0002, norm:1.5992, tok/sec: 101773.24, flops:106.81, batch-reuse:1
@ 218 train 7.3902 , allloss: 8.0094, dt: 1310.20ms, fracRes: 0.0070, norm(attn): 0.0371, norm(output): 0.1172, norm(x): 0.1164, norm(y): 1.0002, norm:1.9455, tok/sec: 100039.85, flops:104.99, batch-reuse:1
@ 219 train 7.4848 , allloss: 8.0944, dt: 1321.26ms, fracRes: 0.0070, norm(attn): 0.0369, norm(output): 0.1167, norm(x): 0.1153, norm(y): 1.0002, norm:3.5908, tok/sec: 99202.58, flops:104.11, batch-reuse:1
@ 220 train 7.4213 , allloss: 8.0174, dt: 1299.44ms, fracRes: 0.0070, norm(attn): 0.0369, norm(output): 0.1167, norm(x): 0.1160, norm(y): 1.0002, norm:1.8681, tok/sec: 100868.24, flops:105.86, batch-reuse:1
@ 221 train 7.4358 , allloss: 7.9820, dt: 1283.15ms, fracRes: 0.0072, norm(attn): 0.0381, norm(output): 0.1177, norm(x): 0.1176, norm(y): 1.0002, norm:2.5827, tok/sec: 102148.55, flops:107.21, batch-reuse:1
@ 222 train 7.3553 , allloss: 7.9393, dt: 1296.96ms, fracRes: 0.0071, norm(attn): 0.0374, norm(output): 0.1167, norm(x): 0.1161, norm(y): 1.0002, norm:2.4549, tok/sec: 101060.67, flops:106.07, batch-reuse:1
@ 223 train 7.3953 , allloss: 7.9772, dt: 1319.59ms, fracRes: 0.0070, norm(attn): 0.0374, norm(output): 0.1167, norm(x): 0.1151, norm(y): 1.0002, norm:4.1875, tok/sec: 99327.49, flops:104.25, batch-reuse:1
@ 224 train 7.3092 , allloss: 7.8649, dt: 1320.51ms, fracRes: 0.0070, norm(attn): 0.0369, norm(output): 0.1167, norm(x): 0.1159, norm(y): 1.0003, norm:2.5710, tok/sec: 99258.91, flops:104.17, batch-reuse:1
@ 225 train 7.3398 , allloss: 7.8373, dt: 1299.59ms, fracRes: 0.0072, norm(attn): 0.0361, norm(output): 0.1177, norm(x): 0.1182, norm(y): 1.0003, norm:2.0893, tok/sec: 100856.23, flops:105.85, batch-reuse:1
@ 226 train 7.3857 , allloss: 7.8903, dt: 1308.56ms, fracRes: 0.0072, norm(attn): 0.0364, norm(output): 0.1177, norm(x): 0.1181, norm(y): 1.0003, norm:2.5420, tok/sec: 100165.26, flops:105.13, batch-reuse:1
@ 227 train 7.3660 , allloss: 7.9065, dt: 1311.20ms, fracRes: 0.0072, norm(attn): 0.0361, norm(output): 0.1177, norm(x): 0.1174, norm(y): 1.0003, norm:2.0145, tok/sec: 99963.40, flops:104.91, batch-reuse:1
@ 228 train 7.3448 , allloss: 7.8587, dt: 1294.60ms, fracRes: 0.0072, norm(attn): 0.0354, norm(output): 0.1177, norm(x): 0.1173, norm(y): 1.0003, norm:2.8014, tok/sec: 101245.40, flops:106.26, batch-reuse:1
@ 229 train 7.3805 , allloss: 7.8806, dt: 1279.65ms, fracRes: 0.0072, norm(attn): 0.0359, norm(output): 0.1182, norm(x): 0.1183, norm(y): 1.0003, norm:1.7358, tok/sec: 102427.67, flops:107.50, batch-reuse:1
@ 230 train 7.3671 , allloss: 7.8700, dt: 1289.13ms, fracRes: 0.0072, norm(attn): 0.0359, norm(output): 0.1177, norm(x): 0.1177, norm(y): 1.0003, norm:3.5652, tok/sec: 101674.81, flops:106.71, batch-reuse:1
@ 231 train 7.2782 , allloss: 7.7527, dt: 1289.26ms, fracRes: 0.0072, norm(attn): 0.0354, norm(output): 0.1187, norm(x): 0.1186, norm(y): 1.0003, norm:1.8041, tok/sec: 101664.13, flops:106.70, batch-reuse:1
@ 232 train 7.2618 , allloss: 7.7103, dt: 1301.75ms, fracRes: 0.0071, norm(attn): 0.0356, norm(output): 0.1187, norm(x): 0.1185, norm(y): 1.0003, norm:2.0219, tok/sec: 100689.39, flops:105.68, batch-reuse:1
@ 233 train 7.3233 , allloss: 7.7746, dt: 1300.67ms, fracRes: 0.0073, norm(attn): 0.0354, norm(output): 0.1191, norm(x): 0.1188, norm(y): 1.0004, norm:1.7490, tok/sec: 100772.78, flops:105.76, batch-reuse:1
@ 234 train 7.1549 , allloss: 7.6618, dt: 1298.86ms, fracRes: 0.0073, norm(attn): 0.0344, norm(output): 0.1177, norm(x): 0.1178, norm(y): 1.0003, norm:2.7649, tok/sec: 100913.49, flops:105.91, batch-reuse:1
@ 235 train 7.3052 , allloss: 7.7746, dt: 1324.82ms, fracRes: 0.0074, norm(attn): 0.0354, norm(output): 0.1187, norm(x): 0.1187, norm(y): 1.0004, norm:2.4134, tok/sec: 98935.59, flops:103.83, batch-reuse:1
@ 236 train 7.1776 , allloss: 7.6251, dt: 1322.32ms, fracRes: 0.0073, norm(attn): 0.0354, norm(output): 0.1191, norm(x): 0.1199, norm(y): 1.0004, norm:1.9705, tok/sec: 99122.93, flops:104.03, batch-reuse:1
@ 237 train 7.2746 , allloss: 7.7352, dt: 1294.69ms, fracRes: 0.0073, norm(attn): 0.0344, norm(output): 0.1191, norm(x): 0.1196, norm(y): 1.0004, norm:1.6053, tok/sec: 101238.14, flops:106.25, batch-reuse:1
@ 238 train 7.2413 , allloss: 7.7074, dt: 1298.91ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1187, norm(x): 0.1184, norm(y): 1.0004, norm:3.5179, tok/sec: 100909.14, flops:105.91, batch-reuse:1
@ 239 train 7.2399 , allloss: 7.6882, dt: 1328.73ms, fracRes: 0.0073, norm(attn): 0.0347, norm(output): 0.1196, norm(x): 0.1198, norm(y): 1.0004, norm:1.9624, tok/sec: 98644.37, flops:103.53, batch-reuse:1
@ 240 train 7.3112 , allloss: 7.6950, dt: 1313.44ms, fracRes: 0.0075, norm(attn): 0.0359, norm(output): 0.1240, norm(x): 0.1217, norm(y): 1.0004, norm:1.8059, tok/sec: 99793.18, flops:104.73, batch-reuse:1
@ 241 train 7.2540 , allloss: 7.6619, dt: 1318.32ms, fracRes: 0.0073, norm(attn): 0.0347, norm(output): 0.1191, norm(x): 0.1196, norm(y): 1.0004, norm:1.6181, tok/sec: 99423.27, flops:104.35, batch-reuse:1
@ 242 train 7.2763 , allloss: 7.6850, dt: 1313.62ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1187, norm(x): 0.1187, norm(y): 1.0004, norm:3.5407, tok/sec: 99779.07, flops:104.72, batch-reuse:1
@ 243 train 7.1121 , allloss: 7.5250, dt: 1313.08ms, fracRes: 0.0073, norm(attn): 0.0334, norm(output): 0.1177, norm(x): 0.1187, norm(y): 1.0004, norm:1.8535, tok/sec: 99820.61, flops:104.76, batch-reuse:1
@ 244 train 7.3054 , allloss: 7.6589, dt: 1332.08ms, fracRes: 0.0074, norm(attn): 0.0349, norm(output): 0.1221, norm(x): 0.1202, norm(y): 1.0005, norm:1.6947, tok/sec: 98396.20, flops:103.27, batch-reuse:1
@ 245 train 7.1289 , allloss: 7.4798, dt: 1328.98ms, fracRes: 0.0073, norm(attn): 0.0344, norm(output): 0.1221, norm(x): 0.1205, norm(y): 1.0005, norm:1.5361, tok/sec: 98625.86, flops:103.51, batch-reuse:1
@ 246 train 7.3481 , allloss: 7.6985, dt: 1335.65ms, fracRes: 0.0073, norm(attn): 0.0349, norm(output): 0.1191, norm(x): 0.1197, norm(y): 1.0005, norm:1.6375, tok/sec: 98133.74, flops:102.99, batch-reuse:1
@ 247 train 7.2304 , allloss: 7.5410, dt: 1323.86ms, fracRes: 0.0073, norm(attn): 0.0347, norm(output): 0.1226, norm(x): 0.1210, norm(y): 1.0005, norm:2.0318, tok/sec: 99007.58, flops:103.91, batch-reuse:1
@ 248 train 7.1735 , allloss: 7.4995, dt: 1325.71ms, fracRes: 0.0073, norm(attn): 0.0347, norm(output): 0.1230, norm(x): 0.1213, norm(y): 1.0005, norm:2.0655, tok/sec: 98869.44, flops:103.77, batch-reuse:1
@ 249 train 7.1369 , allloss: 7.4928, dt: 1339.53ms, fracRes: 0.0073, norm(attn): 0.0332, norm(output): 0.1191, norm(x): 0.1194, norm(y): 1.0005, norm:2.1857, tok/sec: 97849.02, flops:102.69, batch-reuse:1
@ 250 train 7.1837 , allloss: 7.5234, dt: 1342.96ms, fracRes: 0.0073, norm(attn): 0.0337, norm(output): 0.1191, norm(x): 0.1197, norm(y): 1.0005, norm:1.5815, tok/sec: 97599.06, flops:102.43, batch-reuse:1
@ 251 train 7.0977 , allloss: 7.4036, dt: 1342.99ms, fracRes: 0.0073, norm(attn): 0.0347, norm(output): 0.1230, norm(x): 0.1208, norm(y): 1.0005, norm:2.2395, tok/sec: 97597.09, flops:102.43, batch-reuse:1
@ 252 train 7.2652 , allloss: 7.5683, dt: 1340.15ms, fracRes: 0.0074, norm(attn): 0.0352, norm(output): 0.1230, norm(x): 0.1211, norm(y): 1.0006, norm:1.3604, tok/sec: 97804.13, flops:102.65, batch-reuse:1
@ 253 train 7.1046 , allloss: 7.4369, dt: 1314.24ms, fracRes: 0.0072, norm(attn): 0.0330, norm(output): 0.1187, norm(x): 0.1194, norm(y): 1.0006, norm:2.0837, tok/sec: 99732.11, flops:104.67, batch-reuse:1
@ 254 train 7.0626 , allloss: 7.3663, dt: 1313.14ms, fracRes: 0.0072, norm(attn): 0.0332, norm(output): 0.1196, norm(x): 0.1197, norm(y): 1.0006, norm:3.1525, tok/sec: 99815.50, flops:104.76, batch-reuse:1
@ 255 train 7.0872 , allloss: 7.3580, dt: 1299.36ms, fracRes: 0.0073, norm(attn): 0.0337, norm(output): 0.1230, norm(x): 0.1213, norm(y): 1.0006, norm:1.7937, tok/sec: 100874.55, flops:105.87, batch-reuse:1
@ 256 train 7.1109 , allloss: 7.3807, dt: 1318.50ms, fracRes: 0.0073, norm(attn): 0.0344, norm(output): 0.1235, norm(x): 0.1212, norm(y): 1.0006, norm:1.9226, tok/sec: 99409.84, flops:104.33, batch-reuse:1
@ 257 train 7.1603 , allloss: 7.4291, dt: 1277.56ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1230, norm(x): 0.1205, norm(y): 1.0006, norm:2.8559, tok/sec: 102595.21, flops:107.68, batch-reuse:1
@ 258 train 7.0927 , allloss: 7.3798, dt: 1287.33ms, fracRes: 0.0073, norm(attn): 0.0334, norm(output): 0.1230, norm(x): 0.1201, norm(y): 1.0006, norm:1.9545, tok/sec: 101816.66, flops:106.86, batch-reuse:1
@ 259 train 7.0850 , allloss: 7.3662, dt: 1304.22ms, fracRes: 0.0074, norm(attn): 0.0339, norm(output): 0.1235, norm(x): 0.1213, norm(y): 1.0006, norm:1.4661, tok/sec: 100498.09, flops:105.47, batch-reuse:1
@ 260 train 7.1868 , allloss: 7.4436, dt: 1333.16ms, fracRes: 0.0073, norm(attn): 0.0344, norm(output): 0.1230, norm(x): 0.1211, norm(y): 1.0006, norm:2.1897, tok/sec: 98316.47, flops:103.18, batch-reuse:1
@ 261 train 7.1097 , allloss: 7.3756, dt: 1315.02ms, fracRes: 0.0072, norm(attn): 0.0337, norm(output): 0.1201, norm(x): 0.1199, norm(y): 1.0006, norm:2.6496, tok/sec: 99672.66, flops:104.61, batch-reuse:1
@ 262 train 7.1599 , allloss: 7.4124, dt: 1285.22ms, fracRes: 0.0072, norm(attn): 0.0339, norm(output): 0.1226, norm(x): 0.1203, norm(y): 1.0007, norm:1.6098, tok/sec: 101984.27, flops:107.03, batch-reuse:1
@ 263 train 7.1113 , allloss: 7.3609, dt: 1297.46ms, fracRes: 0.0073, norm(attn): 0.0337, norm(output): 0.1230, norm(x): 0.1209, norm(y): 1.0007, norm:2.7706, tok/sec: 101021.90, flops:106.02, batch-reuse:1
@ 264 train 7.1012 , allloss: 7.3297, dt: 1306.51ms, fracRes: 0.0074, norm(attn): 0.0342, norm(output): 0.1240, norm(x): 0.1219, norm(y): 1.0007, norm:2.7170, tok/sec: 100322.36, flops:105.29, batch-reuse:1
@ 265 train 7.0826 , allloss: 7.3066, dt: 1289.15ms, fracRes: 0.0074, norm(attn): 0.0344, norm(output): 0.1245, norm(x): 0.1222, norm(y): 1.0007, norm:1.5844, tok/sec: 101673.01, flops:106.71, batch-reuse:1
@ 266 train 7.0817 , allloss: 7.3304, dt: 1300.77ms, fracRes: 0.0073, norm(attn): 0.0347, norm(output): 0.1230, norm(x): 0.1206, norm(y): 1.0007, norm:4.8574, tok/sec: 100765.06, flops:105.75, batch-reuse:1
@ 267 train 7.0605 , allloss: 7.2991, dt: 1300.49ms, fracRes: 0.0073, norm(attn): 0.0339, norm(output): 0.1230, norm(x): 0.1207, norm(y): 1.0007, norm:2.4674, tok/sec: 100786.71, flops:105.78, batch-reuse:1
@ 268 train 7.1433 , allloss: 7.3573, dt: 1305.47ms, fracRes: 0.0074, norm(attn): 0.0359, norm(output): 0.1240, norm(x): 0.1225, norm(y): 1.0007, norm:2.9451, tok/sec: 100402.30, flops:105.37, batch-reuse:1
@ 269 train 7.0787 , allloss: 7.2861, dt: 1325.96ms, fracRes: 0.0075, norm(attn): 0.0354, norm(output): 0.1245, norm(x): 0.1235, norm(y): 1.0008, norm:2.0051, tok/sec: 98850.72, flops:103.75, batch-reuse:1
@ 270 train 7.1646 , allloss: 7.4056, dt: 1312.77ms, fracRes: 0.0073, norm(attn): 0.0347, norm(output): 0.1240, norm(x): 0.1224, norm(y): 1.0008, norm:2.5234, tok/sec: 99843.58, flops:104.79, batch-reuse:1
@ 271 train 7.0182 , allloss: 7.2935, dt: 1312.25ms, fracRes: 0.0073, norm(attn): 0.0349, norm(output): 0.1235, norm(x): 0.1211, norm(y): 1.0008, norm:2.1590, tok/sec: 99883.72, flops:104.83, batch-reuse:1
@ 272 train 7.0446 , allloss: 7.2983, dt: 1278.15ms, fracRes: 0.0073, norm(attn): 0.0337, norm(output): 0.1235, norm(x): 0.1220, norm(y): 1.0008, norm:1.6115, tok/sec: 102548.40, flops:107.63, batch-reuse:1
@ 273 train 7.2023 , allloss: 7.4341, dt: 1296.78ms, fracRes: 0.0073, norm(attn): 0.0356, norm(output): 0.1245, norm(x): 0.1228, norm(y): 1.0008, norm:2.0424, tok/sec: 101075.24, flops:106.08, batch-reuse:1
@ 274 train 7.0412 , allloss: 7.2692, dt: 1335.29ms, fracRes: 0.0073, norm(attn): 0.0347, norm(output): 0.1245, norm(x): 0.1231, norm(y): 1.0008, norm:1.4588, tok/sec: 98159.73, flops:103.02, batch-reuse:1
@ 275 train 7.0339 , allloss: 7.2914, dt: 1293.00ms, fracRes: 0.0073, norm(attn): 0.0332, norm(output): 0.1230, norm(x): 0.1214, norm(y): 1.0008, norm:2.3134, tok/sec: 101370.33, flops:106.39, batch-reuse:1
@ 276 train 7.0312 , allloss: 7.2850, dt: 1283.43ms, fracRes: 0.0072, norm(attn): 0.0327, norm(output): 0.1230, norm(x): 0.1212, norm(y): 1.0008, norm:2.8500, tok/sec: 102126.00, flops:107.18, batch-reuse:1
@ 277 train 6.8979 , allloss: 7.1168, dt: 1320.10ms, fracRes: 0.0072, norm(attn): 0.0337, norm(output): 0.1245, norm(x): 0.1227, norm(y): 1.0008, norm:1.4426, tok/sec: 99289.80, flops:104.21, batch-reuse:1
@ 278 train 7.0127 , allloss: 7.2122, dt: 1338.75ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1245, norm(x): 0.1231, norm(y): 1.0009, norm:1.9604, tok/sec: 97905.99, flops:102.75, batch-reuse:1
@ 279 train 6.9569 , allloss: 7.1672, dt: 1313.50ms, fracRes: 0.0072, norm(attn): 0.0342, norm(output): 0.1245, norm(x): 0.1223, norm(y): 1.0009, norm:2.5783, tok/sec: 99788.25, flops:104.73, batch-reuse:1
@ 280 train 7.0843 , allloss: 7.2972, dt: 1325.09ms, fracRes: 0.0072, norm(attn): 0.0366, norm(output): 0.1245, norm(x): 0.1224, norm(y): 1.0009, norm:2.1565, tok/sec: 98915.41, flops:103.81, batch-reuse:1
@ 281 train 6.9512 , allloss: 7.1622, dt: 1315.57ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1245, norm(x): 0.1230, norm(y): 1.0009, norm:1.9060, tok/sec: 99631.49, flops:104.57, batch-reuse:1
@ 282 train 6.9203 , allloss: 7.1314, dt: 1313.44ms, fracRes: 0.0072, norm(attn): 0.0339, norm(output): 0.1245, norm(x): 0.1229, norm(y): 1.0009, norm:1.8697, tok/sec: 99793.07, flops:104.73, batch-reuse:1
@ 283 train 6.8803 , allloss: 7.0993, dt: 1300.04ms, fracRes: 0.0071, norm(attn): 0.0339, norm(output): 0.1245, norm(x): 0.1228, norm(y): 1.0009, norm:2.0160, tok/sec: 100821.81, flops:105.81, batch-reuse:1
@ 284 train 6.9875 , allloss: 7.1962, dt: 1296.62ms, fracRes: 0.0073, norm(attn): 0.0349, norm(output): 0.1250, norm(x): 0.1240, norm(y): 1.0009, norm:2.4751, tok/sec: 101087.67, flops:106.09, batch-reuse:1
@ 285 train 6.9967 , allloss: 7.2014, dt: 1321.48ms, fracRes: 0.0072, norm(attn): 0.0337, norm(output): 0.1250, norm(x): 0.1235, norm(y): 1.0009, norm:1.8563, tok/sec: 99185.88, flops:104.10, batch-reuse:1
@ 286 train 6.9992 , allloss: 7.1964, dt: 1288.96ms, fracRes: 0.0071, norm(attn): 0.0342, norm(output): 0.1245, norm(x): 0.1229, norm(y): 1.0009, norm:3.0775, tok/sec: 101688.18, flops:106.72, batch-reuse:1
@ 287 train 6.9933 , allloss: 7.1846, dt: 1345.42ms, fracRes: 0.0071, norm(attn): 0.0334, norm(output): 0.1245, norm(x): 0.1230, norm(y): 1.0009, norm:1.6689, tok/sec: 97421.08, flops:102.25, batch-reuse:1
@ 288 train 7.0042 , allloss: 7.1983, dt: 1348.85ms, fracRes: 0.0072, norm(attn): 0.0359, norm(output): 0.1250, norm(x): 0.1238, norm(y): 1.0010, norm:2.6671, tok/sec: 97173.22, flops:101.99, batch-reuse:1
@ 289 train 6.9760 , allloss: 7.1746, dt: 1318.26ms, fracRes: 0.0073, norm(attn): 0.0334, norm(output): 0.1245, norm(x): 0.1238, norm(y): 1.0010, norm:2.0322, tok/sec: 99428.36, flops:104.35, batch-reuse:1
@ 290 train 6.9449 , allloss: 7.1367, dt: 1288.62ms, fracRes: 0.0072, norm(attn): 0.0337, norm(output): 0.1245, norm(x): 0.1230, norm(y): 1.0010, norm:1.2879, tok/sec: 101714.92, flops:106.75, batch-reuse:1
@ 291 train 6.8604 , allloss: 7.0368, dt: 1297.15ms, fracRes: 0.0071, norm(attn): 0.0347, norm(output): 0.1245, norm(x): 0.1233, norm(y): 1.0010, norm:3.2662, tok/sec: 101046.18, flops:106.05, batch-reuse:1
@ 292 train 6.9008 , allloss: 7.0576, dt: 1288.63ms, fracRes: 0.0071, norm(attn): 0.0352, norm(output): 0.1250, norm(x): 0.1241, norm(y): 1.0010, norm:2.0721, tok/sec: 101714.24, flops:106.75, batch-reuse:1
@ 293 train 6.9643 , allloss: 7.1258, dt: 1309.12ms, fracRes: 0.0071, norm(attn): 0.0352, norm(output): 0.1250, norm(x): 0.1244, norm(y): 1.0010, norm:2.7175, tok/sec: 100122.04, flops:105.08, batch-reuse:1
@ 294 train 6.9285 , allloss: 7.1045, dt: 1314.14ms, fracRes: 0.0070, norm(attn): 0.0344, norm(output): 0.1250, norm(x): 0.1247, norm(y): 1.0010, norm:2.5007, tok/sec: 99740.02, flops:104.68, batch-reuse:1
@ 295 train 6.9573 , allloss: 7.1314, dt: 1276.11ms, fracRes: 0.0071, norm(attn): 0.0349, norm(output): 0.1260, norm(x): 0.1255, norm(y): 1.0010, norm:1.8806, tok/sec: 102711.98, flops:107.80, batch-reuse:1
@ 296 train 6.8203 , allloss: 6.9923, dt: 1329.21ms, fracRes: 0.0071, norm(attn): 0.0344, norm(output): 0.1260, norm(x): 0.1253, norm(y): 1.0011, norm:1.5515, tok/sec: 98608.63, flops:103.49, batch-reuse:1
@ 297 train 6.8066 , allloss: 6.9759, dt: 1318.99ms, fracRes: 0.0070, norm(attn): 0.0337, norm(output): 0.1250, norm(x): 0.1242, norm(y): 1.0011, norm:3.0962, tok/sec: 99372.99, flops:104.29, batch-reuse:1
@ 298 train 6.9292 , allloss: 7.0940, dt: 1306.74ms, fracRes: 0.0071, norm(attn): 0.0347, norm(output): 0.1250, norm(x): 0.1239, norm(y): 1.0011, norm:2.1551, tok/sec: 100304.96, flops:105.27, batch-reuse:1
@ 299 train 6.9154 , allloss: 7.0799, dt: 1315.85ms, fracRes: 0.0071, norm(attn): 0.0354, norm(output): 0.1260, norm(x): 0.1248, norm(y): 1.0011, norm:3.0473, tok/sec: 99610.23, flops:104.54, batch-reuse:1
@ 300 train 6.8698 , allloss: 7.0327, dt: 1301.22ms, fracRes: 0.0071, norm(attn): 0.0352, norm(output): 0.1260, norm(x): 0.1257, norm(y): 1.0011, norm:2.1860, tok/sec: 100729.90, flops:105.72, batch-reuse:1
@ 301 train 7.0492 , allloss: 7.2277, dt: 1324.69ms, fracRes: 0.0070, norm(attn): 0.0369, norm(output): 0.1260, norm(x): 0.1251, norm(y): 1.0011, norm:1.9734, tok/sec: 98945.39, flops:103.85, batch-reuse:1
@ 302 train 6.8596 , allloss: 7.0360, dt: 1346.77ms, fracRes: 0.0071, norm(attn): 0.0344, norm(output): 0.1260, norm(x): 0.1251, norm(y): 1.0011, norm:1.6864, tok/sec: 97323.34, flops:102.14, batch-reuse:1
@ 303 train 6.8841 , allloss: 7.0478, dt: 1351.75ms, fracRes: 0.0072, norm(attn): 0.0359, norm(output): 0.1260, norm(x): 0.1260, norm(y): 1.0011, norm:2.0474, tok/sec: 96964.51, flops:101.77, batch-reuse:1
@ 304 train 6.8477 , allloss: 6.9969, dt: 1346.28ms, fracRes: 0.0071, norm(attn): 0.0371, norm(output): 0.1260, norm(x): 0.1265, norm(y): 1.0011, norm:1.4861, tok/sec: 97358.81, flops:102.18, batch-reuse:1
@ 305 train 6.7755 , allloss: 6.9291, dt: 1345.88ms, fracRes: 0.0070, norm(attn): 0.0354, norm(output): 0.1260, norm(x): 0.1255, norm(y): 1.0012, norm:2.1540, tok/sec: 97387.70, flops:102.21, batch-reuse:1
@ 306 train 6.7869 , allloss: 6.9510, dt: 1318.06ms, fracRes: 0.0071, norm(attn): 0.0347, norm(output): 0.1260, norm(x): 0.1253, norm(y): 1.0012, norm:2.0656, tok/sec: 99443.02, flops:104.37, batch-reuse:1
@ 307 train 6.9956 , allloss: 7.1461, dt: 1344.01ms, fracRes: 0.0071, norm(attn): 0.0376, norm(output): 0.1260, norm(x): 0.1259, norm(y): 1.0012, norm:3.0536, tok/sec: 97523.37, flops:102.35, batch-reuse:1
@ 308 train 6.8236 , allloss: 6.9623, dt: 1340.31ms, fracRes: 0.0070, norm(attn): 0.0359, norm(output): 0.1260, norm(x): 0.1262, norm(y): 1.0012, norm:2.0233, tok/sec: 97792.64, flops:102.64, batch-reuse:1
@ 309 train 6.8616 , allloss: 6.9997, dt: 1342.91ms, fracRes: 0.0069, norm(attn): 0.0361, norm(output): 0.1260, norm(x): 0.1257, norm(y): 1.0012, norm:2.1275, tok/sec: 97602.84, flops:102.44, batch-reuse:1
@ 310 train 6.9257 , allloss: 7.0749, dt: 1326.11ms, fracRes: 0.0069, norm(attn): 0.0376, norm(output): 0.1260, norm(x): 0.1259, norm(y): 1.0012, norm:2.2355, tok/sec: 98839.47, flops:103.73, batch-reuse:1
@ 311 train 6.9274 , allloss: 7.0696, dt: 1333.61ms, fracRes: 0.0069, norm(attn): 0.0369, norm(output): 0.1260, norm(x): 0.1267, norm(y): 1.0012, norm:2.3160, tok/sec: 98283.34, flops:103.15, batch-reuse:1
@ 312 train 7.0081 , allloss: 7.1409, dt: 1328.00ms, fracRes: 0.0070, norm(attn): 0.0408, norm(output): 0.1279, norm(x): 0.1282, norm(y): 1.0012, norm:1.7279, tok/sec: 98698.47, flops:103.59, batch-reuse:1
@ 313 train 6.7763 , allloss: 6.9195, dt: 1323.62ms, fracRes: 0.0069, norm(attn): 0.0349, norm(output): 0.1270, norm(x): 0.1266, norm(y): 1.0012, norm:1.2024, tok/sec: 99025.29, flops:103.93, batch-reuse:1
@ 314 train 6.8134 , allloss: 6.9597, dt: 1335.64ms, fracRes: 0.0068, norm(attn): 0.0356, norm(output): 0.1260, norm(x): 0.1259, norm(y): 1.0012, norm:3.1205, tok/sec: 98133.99, flops:102.99, batch-reuse:1
@ 315 train 6.8402 , allloss: 6.9913, dt: 1302.22ms, fracRes: 0.0068, norm(attn): 0.0359, norm(output): 0.1260, norm(x): 0.1260, norm(y): 1.0012, norm:2.0062, tok/sec: 100652.56, flops:105.64, batch-reuse:1
@ 316 train 6.8579 , allloss: 6.9931, dt: 1291.21ms, fracRes: 0.0069, norm(attn): 0.0378, norm(output): 0.1270, norm(x): 0.1275, norm(y): 1.0013, norm:3.6868, tok/sec: 101510.75, flops:106.54, batch-reuse:1
@ 317 train 6.8760 , allloss: 6.9880, dt: 1286.74ms, fracRes: 0.0069, norm(attn): 0.0403, norm(output): 0.1309, norm(x): 0.1289, norm(y): 1.0013, norm:1.9344, tok/sec: 101864.02, flops:106.91, batch-reuse:1
@ 318 train 6.7648 , allloss: 6.8781, dt: 1308.49ms, fracRes: 0.0068, norm(attn): 0.0374, norm(output): 0.1270, norm(x): 0.1277, norm(y): 1.0013, norm:2.5395, tok/sec: 100170.08, flops:105.13, batch-reuse:1
@ 319 train 6.7094 , allloss: 6.8412, dt: 1300.04ms, fracRes: 0.0067, norm(attn): 0.0352, norm(output): 0.1260, norm(x): 0.1266, norm(y): 1.0013, norm:1.7065, tok/sec: 100821.27, flops:105.81, batch-reuse:1
@ 320 train 6.8026 , allloss: 6.9370, dt: 1306.18ms, fracRes: 0.0068, norm(attn): 0.0356, norm(output): 0.1270, norm(x): 0.1274, norm(y): 1.0013, norm:2.8936, tok/sec: 100347.67, flops:105.32, batch-reuse:1
@ 321 train 6.8359 , allloss: 6.9671, dt: 1304.84ms, fracRes: 0.0068, norm(attn): 0.0374, norm(output): 0.1289, norm(x): 0.1284, norm(y): 1.0013, norm:1.7707, tok/sec: 100450.66, flops:105.42, batch-reuse:1
@ 322 train 6.7307 , allloss: 6.8597, dt: 1315.40ms, fracRes: 0.0068, norm(attn): 0.0359, norm(output): 0.1299, norm(x): 0.1282, norm(y): 1.0013, norm:1.4687, tok/sec: 99643.90, flops:104.58, batch-reuse:1
@ 323 train 6.8263 , allloss: 6.9648, dt: 1346.78ms, fracRes: 0.0067, norm(attn): 0.0364, norm(output): 0.1270, norm(x): 0.1274, norm(y): 1.0013, norm:2.2093, tok/sec: 97322.46, flops:102.14, batch-reuse:1
@ 324 train 6.7332 , allloss: 6.8672, dt: 1343.70ms, fracRes: 0.0066, norm(attn): 0.0366, norm(output): 0.1270, norm(x): 0.1276, norm(y): 1.0013, norm:1.5718, tok/sec: 97545.76, flops:102.38, batch-reuse:1
@ 325 train 6.7744 , allloss: 6.8813, dt: 1331.08ms, fracRes: 0.0066, norm(attn): 0.0378, norm(output): 0.1279, norm(x): 0.1285, norm(y): 1.0014, norm:1.5539, tok/sec: 98470.15, flops:103.35, batch-reuse:1
@ 326 train 6.8344 , allloss: 6.9415, dt: 1340.77ms, fracRes: 0.0066, norm(attn): 0.0374, norm(output): 0.1289, norm(x): 0.1285, norm(y): 1.0014, norm:1.8581, tok/sec: 97758.85, flops:102.60, batch-reuse:1
@ 327 train 6.8827 , allloss: 6.9852, dt: 1287.92ms, fracRes: 0.0067, norm(attn): 0.0381, norm(output): 0.1299, norm(x): 0.1286, norm(y): 1.0014, norm:1.2594, tok/sec: 101769.92, flops:106.81, batch-reuse:1
@ 328 train 6.7632 , allloss: 6.8669, dt: 1291.90ms, fracRes: 0.0067, norm(attn): 0.0374, norm(output): 0.1309, norm(x): 0.1288, norm(y): 1.0014, norm:1.9514, tok/sec: 101456.98, flops:106.48, batch-reuse:1
@ 329 train 6.7698 , allloss: 6.8755, dt: 1325.16ms, fracRes: 0.0067, norm(attn): 0.0376, norm(output): 0.1309, norm(x): 0.1289, norm(y): 1.0014, norm:1.3123, tok/sec: 98910.50, flops:103.81, batch-reuse:1
@ 330 train 6.7494 , allloss: 6.8554, dt: 1302.34ms, fracRes: 0.0067, norm(attn): 0.0361, norm(output): 0.1318, norm(x): 0.1288, norm(y): 1.0014, norm:1.7423, tok/sec: 100643.29, flops:105.63, batch-reuse:1
@ 331 train 6.6837 , allloss: 6.7863, dt: 1344.40ms, fracRes: 0.0066, norm(attn): 0.0388, norm(output): 0.1318, norm(x): 0.1291, norm(y): 1.0014, norm:1.3410, tok/sec: 97494.83, flops:102.32, batch-reuse:1
@ 332 train 6.6898 , allloss: 6.7908, dt: 1348.62ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1309, norm(x): 0.1293, norm(y): 1.0014, norm:1.7245, tok/sec: 97189.66, flops:102.00, batch-reuse:1
@ 333 train 6.7484 , allloss: 6.8515, dt: 1331.53ms, fracRes: 0.0067, norm(attn): 0.0374, norm(output): 0.1318, norm(x): 0.1292, norm(y): 1.0014, norm:1.4048, tok/sec: 98437.50, flops:103.31, batch-reuse:1
@ 334 train 6.6884 , allloss: 6.7845, dt: 1294.24ms, fracRes: 0.0067, norm(attn): 0.0381, norm(output): 0.1299, norm(x): 0.1290, norm(y): 1.0015, norm:2.2080, tok/sec: 101273.41, flops:106.29, batch-reuse:1
@ 335 train 6.6631 , allloss: 6.7536, dt: 1288.65ms, fracRes: 0.0066, norm(attn): 0.0376, norm(output): 0.1309, norm(x): 0.1294, norm(y): 1.0015, norm:2.1231, tok/sec: 101712.98, flops:106.75, batch-reuse:1
@ 336 train 6.7137 , allloss: 6.7998, dt: 1303.05ms, fracRes: 0.0066, norm(attn): 0.0386, norm(output): 0.1318, norm(x): 0.1298, norm(y): 1.0015, norm:2.0550, tok/sec: 100588.56, flops:105.57, batch-reuse:1
@ 337 train 6.6923 , allloss: 6.7819, dt: 1292.65ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1318, norm(x): 0.1301, norm(y): 1.0015, norm:1.2294, tok/sec: 101398.09, flops:106.42, batch-reuse:1
@ 338 train 6.6674 , allloss: 6.7586, dt: 1312.41ms, fracRes: 0.0066, norm(attn): 0.0381, norm(output): 0.1318, norm(x): 0.1297, norm(y): 1.0015, norm:2.0061, tok/sec: 99871.06, flops:104.82, batch-reuse:1
@ 339 train 6.7728 , allloss: 6.8589, dt: 1301.94ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1309, norm(x): 0.1296, norm(y): 1.0015, norm:2.6862, tok/sec: 100674.38, flops:105.66, batch-reuse:1
@ 340 train 6.7517 , allloss: 6.8354, dt: 1303.97ms, fracRes: 0.0065, norm(attn): 0.0400, norm(output): 0.1309, norm(x): 0.1299, norm(y): 1.0015, norm:1.5461, tok/sec: 100517.81, flops:105.50, batch-reuse:1
@ 341 train 6.6903 , allloss: 6.7772, dt: 1304.10ms, fracRes: 0.0065, norm(attn): 0.0400, norm(output): 0.1318, norm(x): 0.1306, norm(y): 1.0015, norm:3.4743, tok/sec: 100507.41, flops:105.48, batch-reuse:1
@ 342 train 6.6050 , allloss: 6.6917, dt: 1320.59ms, fracRes: 0.0065, norm(attn): 0.0381, norm(output): 0.1318, norm(x): 0.1306, norm(y): 1.0016, norm:2.1648, tok/sec: 99252.96, flops:104.17, batch-reuse:1
@ 343 train 6.6793 , allloss: 6.7538, dt: 1320.64ms, fracRes: 0.0066, norm(attn): 0.0410, norm(output): 0.1318, norm(x): 0.1311, norm(y): 1.0016, norm:3.1208, tok/sec: 99248.95, flops:104.16, batch-reuse:1
@ 344 train 6.6349 , allloss: 6.7082, dt: 1316.19ms, fracRes: 0.0066, norm(attn): 0.0400, norm(output): 0.1328, norm(x): 0.1314, norm(y): 1.0016, norm:2.0414, tok/sec: 99584.77, flops:104.52, batch-reuse:1
@ 345 train 6.6318 , allloss: 6.7155, dt: 1347.70ms, fracRes: 0.0066, norm(attn): 0.0393, norm(output): 0.1328, norm(x): 0.1317, norm(y): 1.0016, norm:2.1697, tok/sec: 97256.33, flops:102.07, batch-reuse:1
@ 346 train 6.7094 , allloss: 6.8035, dt: 1328.81ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.1318, norm(x): 0.1313, norm(y): 1.0016, norm:1.7631, tok/sec: 98638.47, flops:103.52, batch-reuse:1
@ 347 train 6.6989 , allloss: 6.7885, dt: 1281.64ms, fracRes: 0.0065, norm(attn): 0.0396, norm(output): 0.1318, norm(x): 0.1309, norm(y): 1.0016, norm:2.1174, tok/sec: 102268.96, flops:107.33, batch-reuse:1
@ 348 train 6.6539 , allloss: 6.7332, dt: 1309.35ms, fracRes: 0.0065, norm(attn): 0.0381, norm(output): 0.1328, norm(x): 0.1313, norm(y): 1.0016, norm:1.7207, tok/sec: 100104.36, flops:105.06, batch-reuse:1
@ 349 train 6.6930 , allloss: 6.7717, dt: 1300.28ms, fracRes: 0.0065, norm(attn): 0.0393, norm(output): 0.1328, norm(x): 0.1320, norm(y): 1.0016, norm:2.4037, tok/sec: 100802.93, flops:105.79, batch-reuse:1
@ 350 train 6.7178 , allloss: 6.7964, dt: 1285.61ms, fracRes: 0.0065, norm(attn): 0.0400, norm(output): 0.1328, norm(x): 0.1325, norm(y): 1.0016, norm:1.5299, tok/sec: 101953.41, flops:107.00, batch-reuse:1
@ 351 train 6.7111 , allloss: 6.7952, dt: 1293.65ms, fracRes: 0.0064, norm(attn): 0.0410, norm(output): 0.1328, norm(x): 0.1319, norm(y): 1.0016, norm:2.3869, tok/sec: 101319.87, flops:106.34, batch-reuse:1
@ 352 train 6.7372 , allloss: 6.8223, dt: 1333.55ms, fracRes: 0.0066, norm(attn): 0.0398, norm(output): 0.1328, norm(x): 0.1319, norm(y): 1.0017, norm:1.3731, tok/sec: 98287.70, flops:103.15, batch-reuse:1
@ 353 train 6.6913 , allloss: 6.7764, dt: 1317.28ms, fracRes: 0.0065, norm(attn): 0.0410, norm(output): 0.1328, norm(x): 0.1327, norm(y): 1.0017, norm:1.8231, tok/sec: 99502.04, flops:104.43, batch-reuse:1
@ 354 train 6.6376 , allloss: 6.7210, dt: 1340.84ms, fracRes: 0.0065, norm(attn): 0.0403, norm(output): 0.1328, norm(x): 0.1328, norm(y): 1.0017, norm:2.2508, tok/sec: 97753.41, flops:102.59, batch-reuse:1
@ 355 train 6.6150 , allloss: 6.6931, dt: 1317.29ms, fracRes: 0.0065, norm(attn): 0.0417, norm(output): 0.1328, norm(x): 0.1325, norm(y): 1.0017, norm:1.7549, tok/sec: 99501.08, flops:104.43, batch-reuse:1
@ 356 train 6.7328 , allloss: 6.8130, dt: 1327.16ms, fracRes: 0.0065, norm(attn): 0.0415, norm(output): 0.1328, norm(x): 0.1322, norm(y): 1.0017, norm:2.5512, tok/sec: 98761.10, flops:103.65, batch-reuse:1
@ 357 train 6.6985 , allloss: 6.7807, dt: 1308.23ms, fracRes: 0.0065, norm(attn): 0.0413, norm(output): 0.1328, norm(x): 0.1320, norm(y): 1.0017, norm:1.9770, tok/sec: 100190.61, flops:105.15, batch-reuse:1
@ 358 train 6.6072 , allloss: 6.6918, dt: 1316.60ms, fracRes: 0.0066, norm(attn): 0.0398, norm(output): 0.1328, norm(x): 0.1327, norm(y): 1.0017, norm:1.3371, tok/sec: 99553.08, flops:104.48, batch-reuse:1
@ 359 train 6.8540 , allloss: 6.9306, dt: 1336.77ms, fracRes: 0.0068, norm(attn): 0.0479, norm(output): 0.1348, norm(x): 0.1339, norm(y): 1.0017, norm:1.9555, tok/sec: 98051.32, flops:102.91, batch-reuse:1
@ 360 train 6.6938 , allloss: 6.7656, dt: 1315.10ms, fracRes: 0.0067, norm(attn): 0.0425, norm(output): 0.1338, norm(x): 0.1331, norm(y): 1.0017, norm:2.4310, tok/sec: 99666.77, flops:104.60, batch-reuse:1
@ 361 train 6.6925 , allloss: 6.7628, dt: 1322.40ms, fracRes: 0.0066, norm(attn): 0.0425, norm(output): 0.1328, norm(x): 0.1325, norm(y): 1.0017, norm:1.6755, tok/sec: 99116.70, flops:104.02, batch-reuse:1
@ 362 train 6.5696 , allloss: 6.6404, dt: 1317.17ms, fracRes: 0.0065, norm(attn): 0.0398, norm(output): 0.1328, norm(x): 0.1328, norm(y): 1.0018, norm:1.3018, tok/sec: 99510.05, flops:104.44, batch-reuse:1
@ 363 train 6.6158 , allloss: 6.6858, dt: 1305.97ms, fracRes: 0.0066, norm(attn): 0.0413, norm(output): 0.1338, norm(x): 0.1337, norm(y): 1.0018, norm:1.7098, tok/sec: 100363.53, flops:105.33, batch-reuse:1
@ 364 train 6.6525 , allloss: 6.7256, dt: 1308.07ms, fracRes: 0.0066, norm(attn): 0.0376, norm(output): 0.1328, norm(x): 0.1332, norm(y): 1.0018, norm:1.7713, tok/sec: 100202.96, flops:105.16, batch-reuse:1
@ 365 train 6.6376 , allloss: 6.7044, dt: 1299.93ms, fracRes: 0.0066, norm(attn): 0.0400, norm(output): 0.1328, norm(x): 0.1331, norm(y): 1.0018, norm:1.6177, tok/sec: 100830.07, flops:105.82, batch-reuse:1
@ 366 train 6.6835 , allloss: 6.7454, dt: 1278.62ms, fracRes: 0.0065, norm(attn): 0.0403, norm(output): 0.1338, norm(x): 0.1336, norm(y): 1.0018, norm:1.3275, tok/sec: 102510.56, flops:107.59, batch-reuse:1
@ 367 train 6.5775 , allloss: 6.6420, dt: 1304.60ms, fracRes: 0.0065, norm(attn): 0.0405, norm(output): 0.1338, norm(x): 0.1340, norm(y): 1.0018, norm:1.3427, tok/sec: 100469.37, flops:105.44, batch-reuse:1
@ 368 train 6.7025 , allloss: 6.7622, dt: 1290.66ms, fracRes: 0.0065, norm(attn): 0.0403, norm(output): 0.1338, norm(x): 0.1337, norm(y): 1.0018, norm:2.0713, tok/sec: 101554.27, flops:106.58, batch-reuse:1
@ 369 train 6.6395 , allloss: 6.7000, dt: 1299.50ms, fracRes: 0.0064, norm(attn): 0.0403, norm(output): 0.1338, norm(x): 0.1335, norm(y): 1.0018, norm:2.4048, tok/sec: 100863.52, flops:105.86, batch-reuse:1
@ 370 train 6.7450 , allloss: 6.8037, dt: 1298.37ms, fracRes: 0.0065, norm(attn): 0.0405, norm(output): 0.1348, norm(x): 0.1339, norm(y): 1.0018, norm:1.4860, tok/sec: 100951.07, flops:105.95, batch-reuse:1
@ 371 train 6.6694 , allloss: 6.7292, dt: 1292.51ms, fracRes: 0.0065, norm(attn): 0.0391, norm(output): 0.1338, norm(x): 0.1340, norm(y): 1.0018, norm:1.7392, tok/sec: 101408.96, flops:106.43, batch-reuse:1
@ 372 train 6.7573 , allloss: 6.8119, dt: 1342.02ms, fracRes: 0.0066, norm(attn): 0.0405, norm(output): 0.1348, norm(x): 0.1344, norm(y): 1.0019, norm:2.2892, tok/sec: 97667.47, flops:102.50, batch-reuse:1
@ 373 train 6.7474 , allloss: 6.7969, dt: 1332.40ms, fracRes: 0.0066, norm(attn): 0.0432, norm(output): 0.1377, norm(x): 0.1350, norm(y): 1.0019, norm:1.4356, tok/sec: 98373.12, flops:103.24, batch-reuse:1
@ 374 train 6.7409 , allloss: 6.7920, dt: 1315.54ms, fracRes: 0.0066, norm(attn): 0.0427, norm(output): 0.1357, norm(x): 0.1349, norm(y): 1.0019, norm:2.3919, tok/sec: 99633.28, flops:104.57, batch-reuse:1
@ 375 train 6.8163 , allloss: 6.8682, dt: 1319.23ms, fracRes: 0.0066, norm(attn): 0.0442, norm(output): 0.1367, norm(x): 0.1352, norm(y): 1.0019, norm:1.8086, tok/sec: 99354.90, flops:104.27, batch-reuse:1
@ 376 train 6.8663 , allloss: 6.9141, dt: 1280.29ms, fracRes: 0.0067, norm(attn): 0.0452, norm(output): 0.1387, norm(x): 0.1356, norm(y): 1.0019, norm:1.7754, tok/sec: 102376.41, flops:107.45, batch-reuse:1
@ 377 train 6.7520 , allloss: 6.7959, dt: 1304.21ms, fracRes: 0.0066, norm(attn): 0.0442, norm(output): 0.1367, norm(x): 0.1352, norm(y): 1.0019, norm:2.1940, tok/sec: 100499.03, flops:105.48, batch-reuse:1
@ 378 train 6.6856 , allloss: 6.7320, dt: 1305.68ms, fracRes: 0.0066, norm(attn): 0.0432, norm(output): 0.1357, norm(x): 0.1347, norm(y): 1.0019, norm:1.7175, tok/sec: 100386.28, flops:105.36, batch-reuse:1
@ 379 train 6.7857 , allloss: 6.8315, dt: 1296.89ms, fracRes: 0.0067, norm(attn): 0.0439, norm(output): 0.1367, norm(x): 0.1354, norm(y): 1.0019, norm:1.7930, tok/sec: 101066.14, flops:106.07, batch-reuse:1
@ 380 train 6.8509 , allloss: 6.8965, dt: 1315.74ms, fracRes: 0.0068, norm(attn): 0.0469, norm(output): 0.1396, norm(x): 0.1369, norm(y): 1.0019, norm:1.9802, tok/sec: 99618.44, flops:104.55, batch-reuse:1
@ 381 train 6.7674 , allloss: 6.8105, dt: 1323.86ms, fracRes: 0.0068, norm(attn): 0.0447, norm(output): 0.1387, norm(x): 0.1368, norm(y): 1.0020, norm:1.5140, tok/sec: 99007.29, flops:103.91, batch-reuse:1
@ 382 train 6.7103 , allloss: 6.7468, dt: 1329.41ms, fracRes: 0.0067, norm(attn): 0.0427, norm(output): 0.1387, norm(x): 0.1361, norm(y): 1.0020, norm:1.2280, tok/sec: 98593.84, flops:103.48, batch-reuse:1
@ 383 train 6.7012 , allloss: 6.7412, dt: 1338.73ms, fracRes: 0.0066, norm(attn): 0.0437, norm(output): 0.1377, norm(x): 0.1356, norm(y): 1.0020, norm:1.6560, tok/sec: 97907.78, flops:102.76, batch-reuse:1
@ 384 train 6.7107 , allloss: 6.7505, dt: 1346.50ms, fracRes: 0.0067, norm(attn): 0.0454, norm(output): 0.1357, norm(x): 0.1358, norm(y): 1.0020, norm:1.6545, tok/sec: 97342.76, flops:102.16, batch-reuse:1
@ 385 train 6.6691 , allloss: 6.7090, dt: 1349.36ms, fracRes: 0.0067, norm(attn): 0.0432, norm(output): 0.1387, norm(x): 0.1366, norm(y): 1.0020, norm:2.2559, tok/sec: 97136.56, flops:101.95, batch-reuse:1
@ 386 train 6.7737 , allloss: 6.8133, dt: 1345.01ms, fracRes: 0.0067, norm(attn): 0.0439, norm(output): 0.1387, norm(x): 0.1373, norm(y): 1.0020, norm:1.8926, tok/sec: 97450.69, flops:102.28, batch-reuse:1
@ 387 train 6.7030 , allloss: 6.7448, dt: 1357.41ms, fracRes: 0.0067, norm(attn): 0.0437, norm(output): 0.1387, norm(x): 0.1371, norm(y): 1.0020, norm:1.4573, tok/sec: 96560.35, flops:101.34, batch-reuse:1
@ 388 train 6.6127 , allloss: 6.6515, dt: 1310.48ms, fracRes: 0.0067, norm(attn): 0.0400, norm(output): 0.1387, norm(x): 0.1363, norm(y): 1.0020, norm:1.7179, tok/sec: 100018.60, flops:104.97, batch-reuse:1
@ 389 train 6.6866 , allloss: 6.7170, dt: 1284.37ms, fracRes: 0.0066, norm(attn): 0.0439, norm(output): 0.1387, norm(x): 0.1366, norm(y): 1.0020, norm:1.9201, tok/sec: 102051.50, flops:107.10, batch-reuse:1
@ 390 train 6.7303 , allloss: 6.7611, dt: 1292.33ms, fracRes: 0.0066, norm(attn): 0.0459, norm(output): 0.1387, norm(x): 0.1376, norm(y): 1.0020, norm:1.3873, tok/sec: 101423.14, flops:106.45, batch-reuse:1
@ 391 train 6.6556 , allloss: 6.6909, dt: 1290.19ms, fracRes: 0.0067, norm(attn): 0.0439, norm(output): 0.1387, norm(x): 0.1375, norm(y): 1.0020, norm:1.7897, tok/sec: 101591.30, flops:106.62, batch-reuse:1
@ 392 train 6.7640 , allloss: 6.7969, dt: 1300.24ms, fracRes: 0.0066, norm(attn): 0.0461, norm(output): 0.1396, norm(x): 0.1380, norm(y): 1.0020, norm:1.7904, tok/sec: 100806.21, flops:105.80, batch-reuse:1
@ 393 train 6.6898 , allloss: 6.7196, dt: 1291.64ms, fracRes: 0.0066, norm(attn): 0.0447, norm(output): 0.1387, norm(x): 0.1375, norm(y): 1.0021, norm:1.9574, tok/sec: 101476.85, flops:106.50, batch-reuse:1
@ 394 train 6.6772 , allloss: 6.7086, dt: 1299.81ms, fracRes: 0.0067, norm(attn): 0.0439, norm(output): 0.1387, norm(x): 0.1374, norm(y): 1.0021, norm:1.9964, tok/sec: 100839.06, flops:105.83, batch-reuse:1
@ 395 train 6.7686 , allloss: 6.8012, dt: 1311.84ms, fracRes: 0.0067, norm(attn): 0.0498, norm(output): 0.1396, norm(x): 0.1384, norm(y): 1.0021, norm:1.9788, tok/sec: 99914.71, flops:104.86, batch-reuse:1
@ 396 train 6.6191 , allloss: 6.6488, dt: 1294.52ms, fracRes: 0.0067, norm(attn): 0.0466, norm(output): 0.1396, norm(x): 0.1385, norm(y): 1.0021, norm:3.5597, tok/sec: 101251.46, flops:106.27, batch-reuse:1
@ 397 train 6.7127 , allloss: 6.7374, dt: 1279.78ms, fracRes: 0.0067, norm(attn): 0.0493, norm(output): 0.1396, norm(x): 0.1388, norm(y): 1.0021, norm:1.9248, tok/sec: 102417.36, flops:107.49, batch-reuse:1
@ 398 train 6.7059 , allloss: 6.7323, dt: 1328.68ms, fracRes: 0.0067, norm(attn): 0.0508, norm(output): 0.1396, norm(x): 0.1386, norm(y): 1.0021, norm:1.4568, tok/sec: 98648.56, flops:103.53, batch-reuse:1
@ 399 train 6.6869 , allloss: 6.7185, dt: 1327.85ms, fracRes: 0.0066, norm(attn): 0.0444, norm(output): 0.1396, norm(x): 0.1379, norm(y): 1.0021, norm:1.6607, tok/sec: 98709.62, flops:103.60, batch-reuse:1
@ 400 train 6.7251 , allloss: 6.7553, dt: 1335.85ms, fracRes: 0.0065, norm(attn): 0.0430, norm(output): 0.1396, norm(x): 0.1382, norm(y): 1.0021, norm:1.8262, tok/sec: 98118.57, flops:102.98, batch-reuse:1
@ 401 train 6.7475 , allloss: 6.7765, dt: 1344.51ms, fracRes: 0.0064, norm(attn): 0.0479, norm(output): 0.1406, norm(x): 0.1389, norm(y): 1.0021, norm:2.1772, tok/sec: 97486.67, flops:102.31, batch-reuse:1
@ 402 train 6.6952 , allloss: 6.7239, dt: 1323.03ms, fracRes: 0.0064, norm(attn): 0.0437, norm(output): 0.1396, norm(x): 0.1384, norm(y): 1.0021, norm:1.5167, tok/sec: 99069.61, flops:103.98, batch-reuse:1
@ 403 train 6.7280 , allloss: 6.7572, dt: 1286.40ms, fracRes: 0.0064, norm(attn): 0.0442, norm(output): 0.1406, norm(x): 0.1396, norm(y): 1.0021, norm:1.5441, tok/sec: 101890.18, flops:106.94, batch-reuse:1
@ 404 train 6.6380 , allloss: 6.6659, dt: 1289.17ms, fracRes: 0.0065, norm(attn): 0.0435, norm(output): 0.1406, norm(x): 0.1401, norm(y): 1.0022, norm:1.3872, tok/sec: 101671.43, flops:106.71, batch-reuse:1
@ 405 train 6.6616 , allloss: 6.6914, dt: 1303.80ms, fracRes: 0.0065, norm(attn): 0.0427, norm(output): 0.1406, norm(x): 0.1397, norm(y): 1.0022, norm:1.8238, tok/sec: 100530.78, flops:105.51, batch-reuse:1
@ 406 train 6.6538 , allloss: 6.6814, dt: 1282.75ms, fracRes: 0.0066, norm(attn): 0.0447, norm(output): 0.1406, norm(x): 0.1395, norm(y): 1.0022, norm:1.6653, tok/sec: 102180.80, flops:107.24, batch-reuse:1
@ 407 train 6.6364 , allloss: 6.6631, dt: 1294.94ms, fracRes: 0.0065, norm(attn): 0.0439, norm(output): 0.1406, norm(x): 0.1398, norm(y): 1.0022, norm:1.2628, tok/sec: 101218.94, flops:106.23, batch-reuse:1
@ 408 train 6.6615 , allloss: 6.6845, dt: 1307.12ms, fracRes: 0.0066, norm(attn): 0.0447, norm(output): 0.1406, norm(x): 0.1402, norm(y): 1.0022, norm:1.2973, tok/sec: 100275.79, flops:105.24, batch-reuse:1
@ 409 train 6.5784 , allloss: 6.6012, dt: 1304.71ms, fracRes: 0.0066, norm(attn): 0.0461, norm(output): 0.1406, norm(x): 0.1400, norm(y): 1.0022, norm:1.5409, tok/sec: 100460.68, flops:105.44, batch-reuse:1
@ 410 train 6.6380 , allloss: 6.6625, dt: 1308.38ms, fracRes: 0.0066, norm(attn): 0.0442, norm(output): 0.1406, norm(x): 0.1402, norm(y): 1.0022, norm:1.9671, tok/sec: 100178.76, flops:105.14, batch-reuse:1
@ 411 train 6.6442 , allloss: 6.6684, dt: 1329.44ms, fracRes: 0.0066, norm(attn): 0.0466, norm(output): 0.1406, norm(x): 0.1404, norm(y): 1.0022, norm:1.6856, tok/sec: 98592.16, flops:103.47, batch-reuse:1
@ 412 train 6.6414 , allloss: 6.6664, dt: 1311.22ms, fracRes: 0.0065, norm(attn): 0.0461, norm(output): 0.1406, norm(x): 0.1404, norm(y): 1.0022, norm:1.7108, tok/sec: 99961.71, flops:104.91, batch-reuse:1
@ 413 train 6.3147 , allloss: 6.3473, dt: 1297.13ms, fracRes: 0.0064, norm(attn): 0.0471, norm(output): 0.1396, norm(x): 0.1398, norm(y): 1.0022, norm:2.4834, tok/sec: 101048.08, flops:106.05, batch-reuse:1
@ 414 train 6.6282 , allloss: 6.6583, dt: 1310.92ms, fracRes: 0.0065, norm(attn): 0.0479, norm(output): 0.1406, norm(x): 0.1403, norm(y): 1.0023, norm:2.2095, tok/sec: 99984.87, flops:104.94, batch-reuse:1
@ 415 train 6.5547 , allloss: 6.5792, dt: 1327.51ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.1406, norm(x): 0.1408, norm(y): 1.0022, norm:1.4463, tok/sec: 98735.52, flops:103.62, batch-reuse:1
@ 416 train 6.6956 , allloss: 6.7184, dt: 1318.72ms, fracRes: 0.0064, norm(attn): 0.0454, norm(output): 0.1416, norm(x): 0.1409, norm(y): 1.0022, norm:2.1479, tok/sec: 99393.43, flops:104.32, batch-reuse:1
@ 417 train 6.5756 , allloss: 6.5982, dt: 1320.06ms, fracRes: 0.0064, norm(attn): 0.0471, norm(output): 0.1406, norm(x): 0.1407, norm(y): 1.0023, norm:1.7452, tok/sec: 99292.29, flops:104.21, batch-reuse:1
@ 418 train 6.6653 , allloss: 6.6864, dt: 1347.26ms, fracRes: 0.0064, norm(attn): 0.0486, norm(output): 0.1406, norm(x): 0.1411, norm(y): 1.0023, norm:1.9602, tok/sec: 97287.74, flops:102.11, batch-reuse:1
@ 419 train 6.5917 , allloss: 6.6147, dt: 1323.31ms, fracRes: 0.0063, norm(attn): 0.0454, norm(output): 0.1416, norm(x): 0.1416, norm(y): 1.0023, norm:1.5612, tok/sec: 99048.78, flops:103.95, batch-reuse:1
@ 420 train 6.5571 , allloss: 6.5815, dt: 1333.02ms, fracRes: 0.0062, norm(attn): 0.0454, norm(output): 0.1416, norm(x): 0.1417, norm(y): 1.0023, norm:2.0144, tok/sec: 98327.16, flops:103.20, batch-reuse:1
@ 421 train 6.7094 , allloss: 6.7328, dt: 1310.75ms, fracRes: 0.0062, norm(attn): 0.0466, norm(output): 0.1416, norm(x): 0.1417, norm(y): 1.0023, norm:1.2804, tok/sec: 99997.62, flops:104.95, batch-reuse:1
@ 422 train 6.6199 , allloss: 6.6421, dt: 1316.21ms, fracRes: 0.0063, norm(attn): 0.0461, norm(output): 0.1416, norm(x): 0.1417, norm(y): 1.0023, norm:1.5440, tok/sec: 99582.93, flops:104.51, batch-reuse:1
@ 423 train 6.6624 , allloss: 6.6825, dt: 1326.71ms, fracRes: 0.0064, norm(attn): 0.0496, norm(output): 0.1416, norm(x): 0.1423, norm(y): 1.0023, norm:2.3398, tok/sec: 98794.98, flops:103.69, batch-reuse:1
@ 424 train 6.5982 , allloss: 6.6194, dt: 1280.96ms, fracRes: 0.0064, norm(attn): 0.0466, norm(output): 0.1416, norm(x): 0.1425, norm(y): 1.0023, norm:1.4196, tok/sec: 102323.42, flops:107.39, batch-reuse:1
@ 425 train 6.6735 , allloss: 6.6966, dt: 1322.07ms, fracRes: 0.0064, norm(attn): 0.0454, norm(output): 0.1426, norm(x): 0.1420, norm(y): 1.0023, norm:1.3694, tok/sec: 99141.18, flops:104.05, batch-reuse:1
@ 426 train 6.5139 , allloss: 6.5328, dt: 1289.32ms, fracRes: 0.0064, norm(attn): 0.0469, norm(output): 0.1416, norm(x): 0.1420, norm(y): 1.0023, norm:1.3880, tok/sec: 101659.79, flops:106.69, batch-reuse:1
@ 427 train 6.5856 , allloss: 6.6071, dt: 1295.25ms, fracRes: 0.0064, norm(attn): 0.0500, norm(output): 0.1416, norm(x): 0.1421, norm(y): 1.0024, norm:1.6263, tok/sec: 101194.57, flops:106.21, batch-reuse:1
@ 428 train 6.5288 , allloss: 6.5510, dt: 1297.28ms, fracRes: 0.0064, norm(attn): 0.0488, norm(output): 0.1416, norm(x): 0.1421, norm(y): 1.0024, norm:1.7102, tok/sec: 101035.77, flops:106.04, batch-reuse:1
@ 429 train 6.4805 , allloss: 6.5004, dt: 1299.97ms, fracRes: 0.0064, norm(attn): 0.0493, norm(output): 0.1416, norm(x): 0.1424, norm(y): 1.0024, norm:1.5981, tok/sec: 100827.06, flops:105.82, batch-reuse:1
@ 430 train 6.5740 , allloss: 6.5942, dt: 1313.58ms, fracRes: 0.0064, norm(attn): 0.0483, norm(output): 0.1426, norm(x): 0.1426, norm(y): 1.0024, norm:1.6049, tok/sec: 99782.60, flops:104.72, batch-reuse:1
@ 431 train 6.5488 , allloss: 6.5703, dt: 1293.00ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.1426, norm(x): 0.1429, norm(y): 1.0024, norm:1.4078, tok/sec: 101370.12, flops:106.39, batch-reuse:1
@ 432 train 6.6045 , allloss: 6.6218, dt: 1297.67ms, fracRes: 0.0065, norm(attn): 0.0488, norm(output): 0.1426, norm(x): 0.1431, norm(y): 1.0024, norm:1.0939, tok/sec: 101005.36, flops:106.01, batch-reuse:1
@ 433 train 6.6025 , allloss: 6.6203, dt: 1309.55ms, fracRes: 0.0065, norm(attn): 0.0479, norm(output): 0.1426, norm(x): 0.1427, norm(y): 1.0024, norm:1.1833, tok/sec: 100089.03, flops:105.05, batch-reuse:1
@ 434 train 6.6254 , allloss: 6.6427, dt: 1339.06ms, fracRes: 0.0065, norm(attn): 0.0500, norm(output): 0.1426, norm(x): 0.1427, norm(y): 1.0024, norm:1.7387, tok/sec: 97883.90, flops:102.73, batch-reuse:1
@ 435 train 6.5446 , allloss: 6.5632, dt: 1310.46ms, fracRes: 0.0065, norm(attn): 0.0496, norm(output): 0.1426, norm(x): 0.1433, norm(y): 1.0024, norm:1.7285, tok/sec: 100020.02, flops:104.97, batch-reuse:1
@ 436 train 6.6889 , allloss: 6.7075, dt: 1313.78ms, fracRes: 0.0066, norm(attn): 0.0510, norm(output): 0.1436, norm(x): 0.1436, norm(y): 1.0024, norm:1.5785, tok/sec: 99767.10, flops:104.71, batch-reuse:1
@ 437 train 6.5767 , allloss: 6.5933, dt: 1294.10ms, fracRes: 0.0066, norm(attn): 0.0483, norm(output): 0.1426, norm(x): 0.1433, norm(y): 1.0024, norm:1.4348, tok/sec: 101284.23, flops:106.30, batch-reuse:1
@ 438 train 6.6585 , allloss: 6.6768, dt: 1293.17ms, fracRes: 0.0066, norm(attn): 0.0535, norm(output): 0.1426, norm(x): 0.1433, norm(y): 1.0024, norm:1.5782, tok/sec: 101357.24, flops:106.38, batch-reuse:1
@ 439 train 6.4957 , allloss: 6.5130, dt: 1302.10ms, fracRes: 0.0065, norm(attn): 0.0461, norm(output): 0.1426, norm(x): 0.1428, norm(y): 1.0024, norm:1.8778, tok/sec: 100661.70, flops:105.65, batch-reuse:1
@ 440 train 6.4584 , allloss: 6.4736, dt: 1321.13ms, fracRes: 0.0065, norm(attn): 0.0481, norm(output): 0.1426, norm(x): 0.1434, norm(y): 1.0025, norm:1.3187, tok/sec: 99212.02, flops:104.12, batch-reuse:1
@ 441 train 6.5437 , allloss: 6.5590, dt: 1308.93ms, fracRes: 0.0066, norm(attn): 0.0498, norm(output): 0.1426, norm(x): 0.1433, norm(y): 1.0025, norm:1.9502, tok/sec: 100136.74, flops:105.10, batch-reuse:1
@ 442 train 6.6138 , allloss: 6.6302, dt: 1306.65ms, fracRes: 0.0067, norm(attn): 0.0500, norm(output): 0.1436, norm(x): 0.1438, norm(y): 1.0025, norm:1.5345, tok/sec: 100311.34, flops:105.28, batch-reuse:1
@ 443 train 6.6151 , allloss: 6.6313, dt: 1298.99ms, fracRes: 0.0068, norm(attn): 0.0515, norm(output): 0.1455, norm(x): 0.1443, norm(y): 1.0025, norm:1.5580, tok/sec: 100902.68, flops:105.90, batch-reuse:1
@ 444 train 6.6037 , allloss: 6.6208, dt: 1316.00ms, fracRes: 0.0067, norm(attn): 0.0500, norm(output): 0.1436, norm(x): 0.1437, norm(y): 1.0025, norm:2.0405, tok/sec: 99598.41, flops:104.53, batch-reuse:1
@ 445 train 6.5009 , allloss: 6.5175, dt: 1311.05ms, fracRes: 0.0066, norm(attn): 0.0493, norm(output): 0.1426, norm(x): 0.1432, norm(y): 1.0025, norm:1.7377, tok/sec: 99975.14, flops:104.93, batch-reuse:1
@ 446 train 6.5119 , allloss: 6.5295, dt: 1314.23ms, fracRes: 0.0065, norm(attn): 0.0518, norm(output): 0.1445, norm(x): 0.1444, norm(y): 1.0025, norm:1.3001, tok/sec: 99732.85, flops:104.67, batch-reuse:1
@ 447 train 6.5400 , allloss: 6.5597, dt: 1310.19ms, fracRes: 0.0066, norm(attn): 0.0474, norm(output): 0.1445, norm(x): 0.1444, norm(y): 1.0025, norm:1.5038, tok/sec: 100040.27, flops:104.99, batch-reuse:1
@ 448 train 6.5142 , allloss: 6.5321, dt: 1322.45ms, fracRes: 0.0066, norm(attn): 0.0500, norm(output): 0.1455, norm(x): 0.1446, norm(y): 1.0025, norm:1.9684, tok/sec: 99113.14, flops:104.02, batch-reuse:1
@ 449 train 6.4613 , allloss: 6.4778, dt: 1322.78ms, fracRes: 0.0067, norm(attn): 0.0488, norm(output): 0.1455, norm(x): 0.1446, norm(y): 1.0025, norm:1.4449, tok/sec: 99087.95, flops:103.99, batch-reuse:1
@ 450 train 6.5315 , allloss: 6.5485, dt: 1319.46ms, fracRes: 0.0067, norm(attn): 0.0505, norm(output): 0.1455, norm(x): 0.1448, norm(y): 1.0025, norm:1.3381, tok/sec: 99337.88, flops:104.26, batch-reuse:1
@ 451 train 6.5291 , allloss: 6.5452, dt: 1321.90ms, fracRes: 0.0066, norm(attn): 0.0491, norm(output): 0.1465, norm(x): 0.1448, norm(y): 1.0025, norm:1.4332, tok/sec: 99154.29, flops:104.06, batch-reuse:1
@ 452 train 6.5419 , allloss: 6.5590, dt: 1315.59ms, fracRes: 0.0066, norm(attn): 0.0488, norm(output): 0.1455, norm(x): 0.1448, norm(y): 1.0025, norm:1.1336, tok/sec: 99629.60, flops:104.56, batch-reuse:1
@ 453 train 6.5371 , allloss: 6.5514, dt: 1306.82ms, fracRes: 0.0065, norm(attn): 0.0496, norm(output): 0.1455, norm(x): 0.1447, norm(y): 1.0025, norm:1.3101, tok/sec: 100298.68, flops:105.27, batch-reuse:1
@ 454 train 6.5249 , allloss: 6.5393, dt: 1329.47ms, fracRes: 0.0065, norm(attn): 0.0469, norm(output): 0.1455, norm(x): 0.1448, norm(y): 1.0025, norm:1.6222, tok/sec: 98589.86, flops:103.47, batch-reuse:1
@ 455 train 6.6032 , allloss: 6.6151, dt: 1299.31ms, fracRes: 0.0065, norm(attn): 0.0500, norm(output): 0.1465, norm(x): 0.1454, norm(y): 1.0025, norm:1.1931, tok/sec: 100878.14, flops:105.87, batch-reuse:1
@ 456 train 6.5341 , allloss: 6.5467, dt: 1296.85ms, fracRes: 0.0065, norm(attn): 0.0488, norm(output): 0.1465, norm(x): 0.1452, norm(y): 1.0025, norm:1.1244, tok/sec: 101069.35, flops:106.07, batch-reuse:1
@ 457 train 6.6274 , allloss: 6.6416, dt: 1329.30ms, fracRes: 0.0065, norm(attn): 0.0510, norm(output): 0.1484, norm(x): 0.1455, norm(y): 1.0026, norm:1.6304, tok/sec: 98602.51, flops:103.49, batch-reuse:1
@ 458 train 6.6089 , allloss: 6.6220, dt: 1301.01ms, fracRes: 0.0066, norm(attn): 0.0535, norm(output): 0.1475, norm(x): 0.1461, norm(y): 1.0026, norm:1.8380, tok/sec: 100746.26, flops:105.74, batch-reuse:1
@ 459 train 6.5135 , allloss: 6.5289, dt: 1321.59ms, fracRes: 0.0066, norm(attn): 0.0483, norm(output): 0.1465, norm(x): 0.1459, norm(y): 1.0026, norm:1.9561, tok/sec: 99177.33, flops:104.09, batch-reuse:1
@ 460 train 6.4976 , allloss: 6.5141, dt: 1325.48ms, fracRes: 0.0067, norm(attn): 0.0520, norm(output): 0.1465, norm(x): 0.1461, norm(y): 1.0026, norm:2.0674, tok/sec: 98886.76, flops:103.78, batch-reuse:1
@ 461 train 6.5106 , allloss: 6.5255, dt: 1303.46ms, fracRes: 0.0067, norm(attn): 0.0503, norm(output): 0.1465, norm(x): 0.1464, norm(y): 1.0026, norm:1.5702, tok/sec: 100557.15, flops:105.54, batch-reuse:1
@ 462 train 6.5768 , allloss: 6.5939, dt: 1348.59ms, fracRes: 0.0066, norm(attn): 0.0515, norm(output): 0.1475, norm(x): 0.1461, norm(y): 1.0026, norm:1.5171, tok/sec: 97191.96, flops:102.00, batch-reuse:1
@ 463 train 6.5639 , allloss: 6.5811, dt: 1329.81ms, fracRes: 0.0068, norm(attn): 0.0505, norm(output): 0.1465, norm(x): 0.1459, norm(y): 1.0026, norm:1.5768, tok/sec: 98564.41, flops:103.45, batch-reuse:1
@ 464 train 6.4678 , allloss: 6.4800, dt: 1342.21ms, fracRes: 0.0068, norm(attn): 0.0498, norm(output): 0.1484, norm(x): 0.1465, norm(y): 1.0026, norm:1.3014, tok/sec: 97653.87, flops:102.49, batch-reuse:1
@ 465 train 6.4321 , allloss: 6.4447, dt: 1291.39ms, fracRes: 0.0068, norm(attn): 0.0525, norm(output): 0.1475, norm(x): 0.1466, norm(y): 1.0026, norm:1.2048, tok/sec: 101496.90, flops:106.52, batch-reuse:1
@ 466 train 6.5211 , allloss: 6.5369, dt: 1322.01ms, fracRes: 0.0067, norm(attn): 0.0525, norm(output): 0.1484, norm(x): 0.1469, norm(y): 1.0026, norm:1.9464, tok/sec: 99145.71, flops:104.06, batch-reuse:1
@ 467 train 6.4358 , allloss: 6.4493, dt: 1282.40ms, fracRes: 0.0068, norm(attn): 0.0503, norm(output): 0.1484, norm(x): 0.1466, norm(y): 1.0026, norm:1.4899, tok/sec: 102208.08, flops:107.27, batch-reuse:1
@ 468 train 6.3898 , allloss: 6.4004, dt: 1299.95ms, fracRes: 0.0068, norm(attn): 0.0513, norm(output): 0.1484, norm(x): 0.1467, norm(y): 1.0027, norm:1.8495, tok/sec: 100828.21, flops:105.82, batch-reuse:1
@ 469 train 6.3930 , allloss: 6.4040, dt: 1303.05ms, fracRes: 0.0068, norm(attn): 0.0525, norm(output): 0.1475, norm(x): 0.1465, norm(y): 1.0027, norm:1.4143, tok/sec: 100588.41, flops:105.57, batch-reuse:1
@ 470 train 6.4849 , allloss: 6.4973, dt: 1342.78ms, fracRes: 0.0067, norm(attn): 0.0513, norm(output): 0.1484, norm(x): 0.1472, norm(y): 1.0027, norm:1.2492, tok/sec: 97612.72, flops:102.45, batch-reuse:1
@ 471 train 6.3384 , allloss: 6.3509, dt: 1342.86ms, fracRes: 0.0067, norm(attn): 0.0525, norm(output): 0.1484, norm(x): 0.1475, norm(y): 1.0027, norm:1.3490, tok/sec: 97606.36, flops:102.44, batch-reuse:1
@ 472 train 6.4871 , allloss: 6.4992, dt: 1333.84ms, fracRes: 0.0068, norm(attn): 0.0530, norm(output): 0.1484, norm(x): 0.1473, norm(y): 1.0027, norm:1.5800, tok/sec: 98266.84, flops:103.13, batch-reuse:1
@ 473 train 6.4564 , allloss: 6.4689, dt: 1333.26ms, fracRes: 0.0067, norm(attn): 0.0515, norm(output): 0.1484, norm(x): 0.1472, norm(y): 1.0027, norm:1.8866, tok/sec: 98309.14, flops:103.18, batch-reuse:1
@ 474 train 6.3657 , allloss: 6.3783, dt: 1325.26ms, fracRes: 0.0067, norm(attn): 0.0508, norm(output): 0.1484, norm(x): 0.1471, norm(y): 1.0027, norm:1.6177, tok/sec: 98902.56, flops:103.80, batch-reuse:1
@ 475 train 6.3842 , allloss: 6.3961, dt: 1321.46ms, fracRes: 0.0068, norm(attn): 0.0496, norm(output): 0.1484, norm(x): 0.1475, norm(y): 1.0027, norm:1.4152, tok/sec: 99187.51, flops:104.10, batch-reuse:1
@ 476 train 6.3996 , allloss: 6.4104, dt: 1322.98ms, fracRes: 0.0069, norm(attn): 0.0508, norm(output): 0.1484, norm(x): 0.1478, norm(y): 1.0027, norm:1.4519, tok/sec: 99073.49, flops:103.98, batch-reuse:1
@ 477 train 6.4750 , allloss: 6.4856, dt: 1301.65ms, fracRes: 0.0069, norm(attn): 0.0515, norm(output): 0.1484, norm(x): 0.1480, norm(y): 1.0027, norm:1.1087, tok/sec: 100696.79, flops:105.68, batch-reuse:1
@ 478 train 6.4243 , allloss: 6.4367, dt: 1298.90ms, fracRes: 0.0069, norm(attn): 0.0525, norm(output): 0.1484, norm(x): 0.1477, norm(y): 1.0027, norm:1.5748, tok/sec: 100909.79, flops:105.91, batch-reuse:1
@ 479 train 6.5407 , allloss: 6.5531, dt: 1306.34ms, fracRes: 0.0068, norm(attn): 0.0525, norm(output): 0.1484, norm(x): 0.1478, norm(y): 1.0027, norm:1.2228, tok/sec: 100335.42, flops:105.30, batch-reuse:1
@ 480 train 6.3572 , allloss: 6.3715, dt: 1321.83ms, fracRes: 0.0068, norm(attn): 0.0498, norm(output): 0.1484, norm(x): 0.1476, norm(y): 1.0027, norm:2.0753, tok/sec: 99159.37, flops:104.07, batch-reuse:1
@ 481 train 6.4592 , allloss: 6.4720, dt: 1324.06ms, fracRes: 0.0069, norm(attn): 0.0530, norm(output): 0.1504, norm(x): 0.1481, norm(y): 1.0027, norm:1.5097, tok/sec: 98992.28, flops:103.89, batch-reuse:1
@ 482 train 6.4221 , allloss: 6.4348, dt: 1299.48ms, fracRes: 0.0070, norm(attn): 0.0496, norm(output): 0.1484, norm(x): 0.1478, norm(y): 1.0027, norm:1.7292, tok/sec: 100865.22, flops:105.86, batch-reuse:1
@ 483 train 6.4979 , allloss: 6.5077, dt: 1278.54ms, fracRes: 0.0069, norm(attn): 0.0525, norm(output): 0.1504, norm(x): 0.1480, norm(y): 1.0028, norm:1.8694, tok/sec: 102516.81, flops:107.59, batch-reuse:1
@ 484 train 6.3872 , allloss: 6.3977, dt: 1319.98ms, fracRes: 0.0069, norm(attn): 0.0518, norm(output): 0.1494, norm(x): 0.1482, norm(y): 1.0028, norm:2.1629, tok/sec: 99298.21, flops:104.22, batch-reuse:1
@ 485 train 6.3054 , allloss: 6.3166, dt: 1297.83ms, fracRes: 0.0069, norm(attn): 0.0515, norm(output): 0.1504, norm(x): 0.1485, norm(y): 1.0028, norm:1.3551, tok/sec: 100993.24, flops:105.99, batch-reuse:1
@ 486 train 6.4989 , allloss: 6.5107, dt: 1290.39ms, fracRes: 0.0069, norm(attn): 0.0476, norm(output): 0.1504, norm(x): 0.1485, norm(y): 1.0028, norm:1.5012, tok/sec: 101575.62, flops:106.61, batch-reuse:1
@ 487 train 6.4347 , allloss: 6.4460, dt: 1307.83ms, fracRes: 0.0069, norm(attn): 0.0527, norm(output): 0.1504, norm(x): 0.1488, norm(y): 1.0028, norm:1.4078, tok/sec: 100221.30, flops:105.18, batch-reuse:1
@ 488 train 6.3229 , allloss: 6.3333, dt: 1293.02ms, fracRes: 0.0069, norm(attn): 0.0530, norm(output): 0.1504, norm(x): 0.1485, norm(y): 1.0028, norm:2.0476, tok/sec: 101368.53, flops:106.39, batch-reuse:1
@ 489 train 6.3932 , allloss: 6.4037, dt: 1302.46ms, fracRes: 0.0068, norm(attn): 0.0493, norm(output): 0.1504, norm(x): 0.1485, norm(y): 1.0028, norm:1.5732, tok/sec: 100634.10, flops:105.62, batch-reuse:1
@ 490 train 6.4272 , allloss: 6.4369, dt: 1278.09ms, fracRes: 0.0070, norm(attn): 0.0544, norm(output): 0.1504, norm(x): 0.1491, norm(y): 1.0028, norm:1.1959, tok/sec: 102552.99, flops:107.63, batch-reuse:1
@ 491 train 6.4897 , allloss: 6.4995, dt: 1305.10ms, fracRes: 0.0071, norm(attn): 0.0532, norm(output): 0.1504, norm(x): 0.1490, norm(y): 1.0028, norm:1.3420, tok/sec: 100430.60, flops:105.40, batch-reuse:1
@ 492 train 6.4875 , allloss: 6.5015, dt: 1312.38ms, fracRes: 0.0070, norm(attn): 0.0496, norm(output): 0.1484, norm(x): 0.1481, norm(y): 1.0028, norm:1.6132, tok/sec: 99873.54, flops:104.82, batch-reuse:1
@ 493 train 6.4394 , allloss: 6.4518, dt: 1316.84ms, fracRes: 0.0069, norm(attn): 0.0488, norm(output): 0.1504, norm(x): 0.1482, norm(y): 1.0028, norm:1.7045, tok/sec: 99535.22, flops:104.46, batch-reuse:1
@ 494 train 6.4040 , allloss: 6.4138, dt: 1329.36ms, fracRes: 0.0069, norm(attn): 0.0515, norm(output): 0.1504, norm(x): 0.1490, norm(y): 1.0028, norm:1.3042, tok/sec: 98597.64, flops:103.48, batch-reuse:1
@ 495 train 6.3090 , allloss: 6.3186, dt: 1315.93ms, fracRes: 0.0070, norm(attn): 0.0520, norm(output): 0.1504, norm(x): 0.1494, norm(y): 1.0028, norm:1.6465, tok/sec: 99604.29, flops:104.54, batch-reuse:1
@ 496 train 6.4198 , allloss: 6.4305, dt: 1318.06ms, fracRes: 0.0071, norm(attn): 0.0510, norm(output): 0.1504, norm(x): 0.1489, norm(y): 1.0028, norm:1.4468, tok/sec: 99443.11, flops:104.37, batch-reuse:1
@ 497 train 6.3076 , allloss: 6.3173, dt: 1343.05ms, fracRes: 0.0070, norm(attn): 0.0488, norm(output): 0.1504, norm(x): 0.1489, norm(y): 1.0028, norm:1.7591, tok/sec: 97592.81, flops:102.43, batch-reuse:1
@ 498 train 6.4802 , allloss: 6.4892, dt: 1302.70ms, fracRes: 0.0071, norm(attn): 0.0527, norm(output): 0.1504, norm(x): 0.1493, norm(y): 1.0028, norm:2.3689, tok/sec: 100615.70, flops:105.60, batch-reuse:1
@ 499 train 6.5014 , allloss: 6.5105, dt: 1321.64ms, fracRes: 0.0073, norm(attn): 0.0535, norm(output): 0.1504, norm(x): 0.1494, norm(y): 1.0028, norm:1.3895, tok/sec: 99173.68, flops:104.08, batch-reuse:1
@ 500 train 6.4043 , allloss: 6.4133, dt: 1345.53ms, fracRes: 0.0073, norm(attn): 0.0593, norm(output): 0.1504, norm(x): 0.1495, norm(y): 1.0029, norm:2.4282, tok/sec: 97412.91, flops:102.24, batch-reuse:1
@ 501 train 6.4254 , allloss: 6.4345, dt: 1324.25ms, fracRes: 0.0070, norm(attn): 0.0530, norm(output): 0.1504, norm(x): 0.1492, norm(y): 1.0028, norm:1.4151, tok/sec: 98978.33, flops:103.88, batch-reuse:1
@ 502 train 6.4507 , allloss: 6.4605, dt: 1299.78ms, fracRes: 0.0067, norm(attn): 0.0510, norm(output): 0.1504, norm(x): 0.1496, norm(y): 1.0028, norm:2.1417, tok/sec: 100842.00, flops:105.84, batch-reuse:1
@ 503 train 6.4210 , allloss: 6.4300, dt: 1288.56ms, fracRes: 0.0067, norm(attn): 0.0505, norm(output): 0.1504, norm(x): 0.1499, norm(y): 1.0028, norm:1.6485, tok/sec: 101719.91, flops:106.76, batch-reuse:1
@ 504 train 6.4696 , allloss: 6.4784, dt: 1309.87ms, fracRes: 0.0068, norm(attn): 0.0520, norm(output): 0.1504, norm(x): 0.1498, norm(y): 1.0028, norm:1.8734, tok/sec: 100065.00, flops:105.02, batch-reuse:1
@ 505 train 6.3725 , allloss: 6.3810, dt: 1314.72ms, fracRes: 0.0067, norm(attn): 0.0535, norm(output): 0.1504, norm(x): 0.1496, norm(y): 1.0029, norm:1.6008, tok/sec: 99695.81, flops:104.63, batch-reuse:1
@ 506 train 6.3965 , allloss: 6.4065, dt: 1341.28ms, fracRes: 0.0066, norm(attn): 0.0483, norm(output): 0.1504, norm(x): 0.1499, norm(y): 1.0028, norm:1.5322, tok/sec: 97721.58, flops:102.56, batch-reuse:1
@ 507 train 6.4053 , allloss: 6.4166, dt: 1332.87ms, fracRes: 0.0067, norm(attn): 0.0540, norm(output): 0.1514, norm(x): 0.1507, norm(y): 1.0029, norm:1.2173, tok/sec: 98337.96, flops:103.21, batch-reuse:1
@ 508 train 6.3277 , allloss: 6.3387, dt: 1335.36ms, fracRes: 0.0067, norm(attn): 0.0542, norm(output): 0.1514, norm(x): 0.1501, norm(y): 1.0029, norm:1.2817, tok/sec: 98154.99, flops:103.02, batch-reuse:1
@ 509 train 6.3942 , allloss: 6.4044, dt: 1303.40ms, fracRes: 0.0067, norm(attn): 0.0535, norm(output): 0.1514, norm(x): 0.1502, norm(y): 1.0029, norm:1.3263, tok/sec: 100561.40, flops:105.54, batch-reuse:1
@ 510 train 6.3309 , allloss: 6.3403, dt: 1305.87ms, fracRes: 0.0067, norm(attn): 0.0540, norm(output): 0.1514, norm(x): 0.1507, norm(y): 1.0029, norm:1.2380, tok/sec: 100371.60, flops:105.34, batch-reuse:1
@ 511 train 6.4356 , allloss: 6.4457, dt: 1316.58ms, fracRes: 0.0068, norm(attn): 0.0532, norm(output): 0.1523, norm(x): 0.1505, norm(y): 1.0029, norm:2.0348, tok/sec: 99554.72, flops:104.48, batch-reuse:1
@ 512 train 6.3665 , allloss: 6.3772, dt: 1323.42ms, fracRes: 0.0069, norm(attn): 0.0547, norm(output): 0.1514, norm(x): 0.1503, norm(y): 1.0029, norm:1.9862, tok/sec: 99040.65, flops:103.95, batch-reuse:1
@ 513 train 6.3580 , allloss: 6.3688, dt: 1315.96ms, fracRes: 0.0068, norm(attn): 0.0530, norm(output): 0.1514, norm(x): 0.1502, norm(y): 1.0029, norm:1.1591, tok/sec: 99601.67, flops:104.53, batch-reuse:1
@ 514 train 6.3145 , allloss: 6.3236, dt: 1290.92ms, fracRes: 0.0068, norm(attn): 0.0559, norm(output): 0.1523, norm(x): 0.1507, norm(y): 1.0029, norm:1.5021, tok/sec: 101533.79, flops:106.56, batch-reuse:1
@ 515 train 6.2977 , allloss: 6.3062, dt: 1299.18ms, fracRes: 0.0068, norm(attn): 0.0552, norm(output): 0.1514, norm(x): 0.1509, norm(y): 1.0029, norm:1.6844, tok/sec: 100888.16, flops:105.88, batch-reuse:1
@ 516 train 6.2935 , allloss: 6.3006, dt: 1298.82ms, fracRes: 0.0069, norm(attn): 0.0571, norm(output): 0.1514, norm(x): 0.1509, norm(y): 1.0029, norm:1.2426, tok/sec: 100916.46, flops:105.91, batch-reuse:1
@ 517 train 6.2987 , allloss: 6.3059, dt: 1321.75ms, fracRes: 0.0072, norm(attn): 0.0586, norm(output): 0.1514, norm(x): 0.1508, norm(y): 1.0030, norm:1.9922, tok/sec: 99165.18, flops:104.08, batch-reuse:1
@ 518 train 6.3819 , allloss: 6.3905, dt: 1312.51ms, fracRes: 0.0071, norm(attn): 0.0542, norm(output): 0.1523, norm(x): 0.1512, norm(y): 1.0029, norm:1.3856, tok/sec: 99863.51, flops:104.81, batch-reuse:1
@ 519 train 6.3131 , allloss: 6.3218, dt: 1316.10ms, fracRes: 0.0071, norm(attn): 0.0530, norm(output): 0.1543, norm(x): 0.1513, norm(y): 1.0029, norm:1.8082, tok/sec: 99591.10, flops:104.52, batch-reuse:1
@ 520 train 6.3942 , allloss: 6.4035, dt: 1295.30ms, fracRes: 0.0071, norm(attn): 0.0532, norm(output): 0.1533, norm(x): 0.1516, norm(y): 1.0029, norm:2.2231, tok/sec: 101190.46, flops:106.20, batch-reuse:1
@ 521 train 6.4491 , allloss: 6.4606, dt: 1338.96ms, fracRes: 0.0073, norm(attn): 0.0540, norm(output): 0.1543, norm(x): 0.1517, norm(y): 1.0029, norm:1.7456, tok/sec: 97890.87, flops:102.74, batch-reuse:1
@ 522 train 6.2966 , allloss: 6.3050, dt: 1309.05ms, fracRes: 0.0073, norm(attn): 0.0552, norm(output): 0.1543, norm(x): 0.1515, norm(y): 1.0030, norm:1.6259, tok/sec: 100127.38, flops:105.09, batch-reuse:1
@ 523 train 6.4009 , allloss: 6.4084, dt: 1313.93ms, fracRes: 0.0072, norm(attn): 0.0552, norm(output): 0.1543, norm(x): 0.1516, norm(y): 1.0030, norm:1.7719, tok/sec: 99755.49, flops:104.70, batch-reuse:1
@ 524 train 6.3075 , allloss: 6.3145, dt: 1342.37ms, fracRes: 0.0072, norm(attn): 0.0537, norm(output): 0.1543, norm(x): 0.1518, norm(y): 1.0030, norm:1.2667, tok/sec: 97642.21, flops:102.48, batch-reuse:1
@ 525 train 6.3445 , allloss: 6.3524, dt: 1333.05ms, fracRes: 0.0072, norm(attn): 0.0532, norm(output): 0.1543, norm(x): 0.1517, norm(y): 1.0030, norm:1.4168, tok/sec: 98325.09, flops:103.19, batch-reuse:1
@ 526 train 6.3504 , allloss: 6.3585, dt: 1302.60ms, fracRes: 0.0072, norm(attn): 0.0549, norm(output): 0.1543, norm(x): 0.1520, norm(y): 1.0030, norm:1.4478, tok/sec: 100623.69, flops:105.61, batch-reuse:1
@ 527 train 6.3581 , allloss: 6.3648, dt: 1285.13ms, fracRes: 0.0074, norm(attn): 0.0562, norm(output): 0.1543, norm(x): 0.1520, norm(y): 1.0030, norm:1.4263, tok/sec: 101991.31, flops:107.04, batch-reuse:1
@ 528 train 6.3157 , allloss: 6.3218, dt: 1299.98ms, fracRes: 0.0074, norm(attn): 0.0552, norm(output): 0.1543, norm(x): 0.1519, norm(y): 1.0030, norm:1.3017, tok/sec: 100826.41, flops:105.82, batch-reuse:1
@ 529 train 6.2854 , allloss: 6.2931, dt: 1304.28ms, fracRes: 0.0072, norm(attn): 0.0542, norm(output): 0.1533, norm(x): 0.1518, norm(y): 1.0030, norm:1.5982, tok/sec: 100493.54, flops:105.47, batch-reuse:1
@ 530 train 6.3882 , allloss: 6.3968, dt: 1312.59ms, fracRes: 0.0071, norm(attn): 0.0549, norm(output): 0.1553, norm(x): 0.1522, norm(y): 1.0030, norm:1.8979, tok/sec: 99857.16, flops:104.80, batch-reuse:1
@ 531 train 6.4277 , allloss: 6.4382, dt: 1330.01ms, fracRes: 0.0071, norm(attn): 0.0557, norm(output): 0.1543, norm(x): 0.1522, norm(y): 1.0030, norm:1.3806, tok/sec: 98549.87, flops:103.43, batch-reuse:1
@ 532 train 6.2281 , allloss: 6.2374, dt: 1328.39ms, fracRes: 0.0071, norm(attn): 0.0562, norm(output): 0.1543, norm(x): 0.1525, norm(y): 1.0030, norm:1.6402, tok/sec: 98670.16, flops:103.56, batch-reuse:1
@ 533 train 6.3016 , allloss: 6.3103, dt: 1319.63ms, fracRes: 0.0071, norm(attn): 0.0540, norm(output): 0.1543, norm(x): 0.1524, norm(y): 1.0030, norm:1.1944, tok/sec: 99324.85, flops:104.24, batch-reuse:1
@ 534 train 6.2251 , allloss: 6.2329, dt: 1342.36ms, fracRes: 0.0070, norm(attn): 0.0540, norm(output): 0.1553, norm(x): 0.1526, norm(y): 1.0030, norm:1.4981, tok/sec: 97642.76, flops:102.48, batch-reuse:1
@ 535 train 6.3394 , allloss: 6.3462, dt: 1345.60ms, fracRes: 0.0070, norm(attn): 0.0537, norm(output): 0.1543, norm(x): 0.1530, norm(y): 1.0030, norm:1.9816, tok/sec: 97407.65, flops:102.23, batch-reuse:1
@ 536 train 6.3190 , allloss: 6.3252, dt: 1321.93ms, fracRes: 0.0070, norm(attn): 0.0549, norm(output): 0.1543, norm(x): 0.1533, norm(y): 1.0030, norm:2.0935, tok/sec: 99151.75, flops:104.06, batch-reuse:1
@ 537 train 6.2797 , allloss: 6.2853, dt: 1312.59ms, fracRes: 0.0070, norm(attn): 0.0566, norm(output): 0.1553, norm(x): 0.1534, norm(y): 1.0030, norm:1.7482, tok/sec: 99857.61, flops:104.80, batch-reuse:1
@ 538 train 6.2660 , allloss: 6.2712, dt: 1341.48ms, fracRes: 0.0071, norm(attn): 0.0576, norm(output): 0.1543, norm(x): 0.1531, norm(y): 1.0030, norm:2.3323, tok/sec: 97707.30, flops:102.55, batch-reuse:1
@ 539 train 6.2958 , allloss: 6.3028, dt: 1305.30ms, fracRes: 0.0070, norm(attn): 0.0562, norm(output): 0.1553, norm(x): 0.1537, norm(y): 1.0030, norm:2.0437, tok/sec: 100415.29, flops:105.39, batch-reuse:1
@ 540 train 6.3521 , allloss: 6.3594, dt: 1302.45ms, fracRes: 0.0071, norm(attn): 0.0569, norm(output): 0.1553, norm(x): 0.1544, norm(y): 1.0030, norm:1.8700, tok/sec: 100635.02, flops:105.62, batch-reuse:1
@ 541 train 6.2903 , allloss: 6.2985, dt: 1320.51ms, fracRes: 0.0072, norm(attn): 0.0566, norm(output): 0.1553, norm(x): 0.1543, norm(y): 1.0030, norm:1.8068, tok/sec: 99258.54, flops:104.17, batch-reuse:1
@ 542 train 6.3490 , allloss: 6.3584, dt: 1324.11ms, fracRes: 0.0073, norm(attn): 0.0554, norm(output): 0.1553, norm(x): 0.1535, norm(y): 1.0030, norm:1.7991, tok/sec: 98989.04, flops:103.89, batch-reuse:1
@ 543 train 6.4337 , allloss: 6.4419, dt: 1305.89ms, fracRes: 0.0070, norm(attn): 0.0569, norm(output): 0.1553, norm(x): 0.1537, norm(y): 1.0030, norm:2.1562, tok/sec: 100370.00, flops:105.34, batch-reuse:1
@ 544 train 6.3083 , allloss: 6.3146, dt: 1338.09ms, fracRes: 0.0071, norm(attn): 0.0542, norm(output): 0.1553, norm(x): 0.1537, norm(y): 1.0030, norm:1.5392, tok/sec: 97954.88, flops:102.81, batch-reuse:1
@ 545 train 6.3108 , allloss: 6.3168, dt: 1337.24ms, fracRes: 0.0070, norm(attn): 0.0544, norm(output): 0.1553, norm(x): 0.1541, norm(y): 1.0030, norm:1.2043, tok/sec: 98017.07, flops:102.87, batch-reuse:1
@ 546 train 6.2589 , allloss: 6.2645, dt: 1339.02ms, fracRes: 0.0070, norm(attn): 0.0569, norm(output): 0.1562, norm(x): 0.1540, norm(y): 1.0030, norm:1.3839, tok/sec: 97886.55, flops:102.73, batch-reuse:1
@ 547 train 6.3879 , allloss: 6.3945, dt: 1344.61ms, fracRes: 0.0071, norm(attn): 0.0605, norm(output): 0.1553, norm(x): 0.1544, norm(y): 1.0031, norm:1.3225, tok/sec: 97479.27, flops:102.31, batch-reuse:1
@ 548 train 6.4033 , allloss: 6.4098, dt: 1296.42ms, fracRes: 0.0071, norm(attn): 0.0588, norm(output): 0.1562, norm(x): 0.1545, norm(y): 1.0031, norm:1.4622, tok/sec: 101102.97, flops:106.11, batch-reuse:1
@ 549 train 6.3335 , allloss: 6.3398, dt: 1319.16ms, fracRes: 0.0072, norm(attn): 0.0613, norm(output): 0.1562, norm(x): 0.1549, norm(y): 1.0031, norm:1.6079, tok/sec: 99360.04, flops:104.28, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4355, 0.5664, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3223, 0.2344, 0.4434, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.4707, 0.1855, 0.0908, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.5938, 0.0757, 0.0569, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1924, 0.4375, 0.1357, 0.0474, 0.0869, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.1206, 0.1260, 0.1592, 0.1562, 0.1182, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0591, 0.1924, 0.2217, 0.1475, 0.1113, 0.0603, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.2988, 0.0466, 0.0508, 0.1138, 0.0742, 0.1445, 0.0879, 0.0596, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.1182, 0.0928, 0.1465, 0.1123, 0.0811, 0.0737, 0.1504, 0.0625, 0.0608, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.1680, 0.0645, 0.0508, 0.0515, 0.0679, 0.1504, 0.0374, 0.0630, 0.1650, 0.0889, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.1094, 0.0757, 0.0449, 0.0408, 0.0481, 0.1289, 0.1094, 0.0491, 0.1045, 0.0801, 0.1235, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0649, 0.0742, 0.0859, 0.0869, 0.0625, 0.0483, 0.1011, 0.0879, 0.0498, 0.0796, 0.0938, 0.0864, 0.0000, 0.0000],
        [0.0679, 0.0884, 0.0542, 0.1060, 0.0854, 0.1221, 0.0645, 0.0488, 0.0464, 0.0442, 0.0684, 0.0598, 0.0986, 0.0457, 0.0000],
        [0.0713, 0.0457, 0.0952, 0.0698, 0.0574, 0.0354, 0.0708, 0.1211, 0.0466, 0.0493, 0.0693, 0.0542, 0.0908, 0.0581, 0.0645]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0193,  0.0286, -0.0420,  ..., -0.0221,  0.0323,  0.0297],
        [ 0.0473,  0.0073,  0.0019,  ...,  0.0001, -0.0008, -0.0381],
        [ 0.0069,  0.0159,  0.0117,  ...,  0.0090, -0.0020, -0.0055],
        ...,
        [-0.0375,  0.0177,  0.0012,  ...,  0.0278, -0.0032, -0.0005],
        [ 0.0605,  0.0003, -0.0148,  ...,  0.0248, -0.0031, -0.0033],
        [ 0.0049,  0.0057,  0.0277,  ..., -0.0053, -0.0208,  0.0221]], device='cuda:0', requires_grad=True)
K: tensor([-0.3770,  0.6094, -0.0271, -1.0938, -0.2451,  0.0996,  0.3516,  0.1787,  0.2129,  0.1318,  0.6094,  0.9648, -0.4258,  0.8945,  0.1934, -0.1631, -0.5078,  0.1543, -0.3242,  0.5625,  0.1367, -0.4453, -0.4277, -0.2656,  0.1055,  0.3262,  0.0217, -0.3438, -0.5352,  0.4824, -0.6914, -0.2129,
        -0.4492, -0.3496, -0.2539, -0.4355,  0.6641, -0.2617,  0.5859,  0.6328,  0.3145, -0.1650,  0.0679,  0.2969, -0.5781,  0.1099, -0.4902, -0.2734,  0.6641,  0.2207,  0.2451, -0.5938, -1.2734,  0.3086,  0.3965,  0.1235,  0.3262,  0.3301, -1.1094, -0.0540,  0.2832, -0.1133, -0.3809, -0.7422],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0381,  0.0028,  0.0086,  ...,  0.0298, -0.0074, -0.0357],
        [ 0.0140,  0.0339, -0.0286,  ...,  0.0007,  0.0197, -0.0131],
        [ 0.0133, -0.0282,  0.0032,  ...,  0.0428, -0.0129, -0.0393],
        ...,
        [ 0.0242,  0.0178,  0.0056,  ..., -0.0216, -0.0088,  0.0131],
        [-0.0316, -0.0217,  0.0143,  ...,  0.0307, -0.0193,  0.0296],
        [ 0.0325,  0.0027, -0.0109,  ..., -0.0414, -0.0159, -0.0015]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3867, -0.0806, -0.5977,  0.0977,  0.2598, -0.5859,  1.0078,  0.5234, -0.0250,  1.0156, -1.0547, -0.5430, -0.0996, -0.5977, -0.5117,  0.1943, -1.0938,  0.1250,  0.0513,  0.1504,  0.3320,  0.1006, -0.2139, -0.2773, -0.4336, -0.5781, -0.7188,  0.0708, -0.7148, -0.4160, -0.2236, -0.2305,
         0.2256,  0.1377, -0.7539,  0.0317, -0.4043, -0.3848, -0.4336, -0.4512,  0.0244, -0.0869,  0.2617, -1.0469, -1.1016, -0.1631, -0.2275,  0.1309, -0.5859,  0.6055, -0.1475,  0.0649,  0.5820,  1.0703,  0.3164,  0.2451,  0.2041, -0.3848, -0.0679,  0.0640,  0.5469,  1.0234, -0.8477, -0.0613],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2598,  0.1021,  0.6484,  0.2578,  1.0547,  0.4570, -0.8828,  0.6250, -0.0623,  0.3945, -0.1094, -0.3320, -0.5625,  0.7344],
        [ 0.0000, -0.3203,  0.3164,  0.0474, -0.2051, -0.3750, -0.0806,  0.4180, -0.5312, -0.3008, -0.5312, -0.3750,  0.3516, -0.0415, -0.2295],
        [ 0.0000,  0.6172, -0.3145, -1.0234, -0.0540, -0.4414,  0.3262,  0.0996, -0.5312,  0.9531,  0.0996,  0.0266, -0.1953, -0.4102,  0.2930],
        [ 0.0000,  1.2500, -0.8125, -1.1016, -0.5234, -0.8008,  0.4492, -0.2500, -0.4004,  0.4434, -0.0757,  0.2021,  0.4570,  0.2930, -0.3125],
        [ 0.0000,  0.8242, -0.3457, -1.3984, -0.7891, -0.6445,  0.2207,  0.2871, -0.8633,  0.3770,  0.0309,  0.0884, -0.3848,  0.0752, -0.4258],
        [ 0.0000, -0.4316, -0.3867, -0.1543, -0.1699, -0.4512, -0.3184, -0.0564,  0.3613,  0.6484, -0.2812, -0.0708,  0.1377, -0.0530,  0.2754],
        [ 0.0000, -0.4355,  0.7461,  0.8867,  0.4805,  0.1973, -0.4180,  0.2344, -0.0630, -0.7461, -0.0078, -0.4297,  0.0889, -0.3867,  0.1826],
        [ 0.0000,  0.8984, -0.9648, -0.8789, -0.0703, -0.4980,  0.1670, -0.3281, -0.7188,  0.3672,  0.2129, -0.7266, -0.5781,  0.1196,  0.0566],
        [ 0.0000,  0.1523, -0.0913,  0.3652,  0.1011, -0.2266, -0.3203,  0.3906, -0.4863, -0.5156, -0.1123, -0.0591, -0.0618, -0.5078, -0.1416],
        [ 0.0000,  0.5977, -0.3633, -0.5977, -0.5859, -0.3086,  0.4863, -0.9102, -0.3809,  0.5820, -0.0410,  0.1245, -0.1787,  0.1406,  0.0284],
        [ 0.0000,  0.2402, -0.1289, -0.6484, -0.7461, -0.5820,  0.4043,  0.2393, -0.5625,  0.1934, -0.0732,  0.3594, -0.1670,  0.0481, -0.1562],
        [ 0.0000, -0.1914, -0.0601,  0.0884,  0.0991, -0.2295, -0.4844,  0.2500,  0.1099, -0.4590,  0.0146,  0.1729,  0.0962,  0.0942, -0.1787],
        [ 0.0000,  0.2598, -0.2275,  0.4414,  0.2266,  0.5859, -0.0544, -0.3301, -0.3848, -0.4316,  0.0079, -0.1289,  0.3711, -0.3984,  0.0041],
        [ 0.0000, -0.4473,  0.2891, -0.0231, -0.2197, -0.6992, -0.0084,  0.5273, -0.4258, -0.3711, -0.0330, -0.2773,  0.2363, -0.2080, -0.1040]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4657],
        [0.3337],
        [0.2656],
        [0.2113],
        [0.1856],
        [0.1378],
        [0.1151],
        [0.1287],
        [0.0891],
        [0.0838],
        [0.0920],
        [0.0823],
        [0.0651],
        [0.0687]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4609, 0.5391, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3828, 0.2891, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4922, 0.1436, 0.2041, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4219, 0.0850, 0.2178, 0.1348, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1787, 0.2168, 0.1455, 0.1367, 0.2031, 0.1191, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.1177, 0.1206, 0.0830, 0.1299, 0.1689, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.0708, 0.1260, 0.0781, 0.0579, 0.2637, 0.0649, 0.0271, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1631, 0.0413, 0.0747, 0.0894, 0.1143, 0.1426, 0.1709, 0.0457, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.0908, 0.0664, 0.1562, 0.1455, 0.0752, 0.1318, 0.0894, 0.0830, 0.0811, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0630, 0.0840, 0.0669, 0.0820, 0.1079, 0.1050, 0.0913, 0.0913, 0.1455, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.0635, 0.0608, 0.0552, 0.0309, 0.1069, 0.0527, 0.0295, 0.0767, 0.1602, 0.1001, 0.0986, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.0791, 0.0630, 0.0830, 0.0825, 0.0557, 0.0620, 0.0410, 0.0513, 0.1079, 0.1011, 0.0693, 0.0903, 0.0000, 0.0000],
        [0.0557, 0.0461, 0.0408, 0.0664, 0.0815, 0.0576, 0.1060, 0.0520, 0.0933, 0.1040, 0.0635, 0.0786, 0.0654, 0.0894, 0.0000],
        [0.1177, 0.0427, 0.0698, 0.0312, 0.0359, 0.1021, 0.0476, 0.0200, 0.0623, 0.1113, 0.1074, 0.0386, 0.0219, 0.1650, 0.0270]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0130,  0.0075, -0.0346,  ...,  0.0194, -0.0170,  0.0148],
        [ 0.0067,  0.0112, -0.0256,  ...,  0.0600, -0.0189, -0.0034],
        [-0.0023, -0.0267, -0.0550,  ...,  0.0268, -0.0128, -0.0082],
        ...,
        [-0.0283, -0.0014,  0.0156,  ...,  0.0156,  0.0078,  0.0441],
        [ 0.0051, -0.0135, -0.0257,  ...,  0.0227,  0.0269,  0.0077],
        [ 0.0183,  0.0295,  0.0074,  ..., -0.0090,  0.0020,  0.0410]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5781,  0.7031, -1.5625, -1.4141, -0.9531,  0.3301, -0.1709, -0.7070,  1.2266, -0.3672, -0.5039,  0.6406, -0.0032, -0.3828,  0.3301, -0.2021, -0.6016, -0.0260, -0.4375, -0.1113,  0.9023,  0.7266, -0.5664, -1.4141, -1.1875, -0.8438,  0.1709,  0.8086, -0.4414,  1.2969,  0.4961, -0.6797,
        -1.1641,  0.8672,  0.8086, -1.2188,  0.6172,  1.4609, -1.3984, -1.0469, -0.1855,  0.0055,  0.5938,  0.1138, -1.0078,  0.5859,  0.0815, -0.0515,  0.6953,  0.7656, -0.6914, -0.0466, -1.3516,  0.3359,  0.8945,  0.7188,  0.2480, -0.2275,  0.8516,  0.6250,  0.7266, -0.2559, -0.5859, -0.4316],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0270,  0.0137, -0.0068,  ...,  0.0016,  0.0242,  0.0014],
        [ 0.0184,  0.0142,  0.0423,  ..., -0.0141,  0.0058,  0.0253],
        [ 0.0337,  0.0132,  0.0138,  ..., -0.0036,  0.0233, -0.0112],
        ...,
        [ 0.0062, -0.0325, -0.0061,  ...,  0.0075, -0.0470,  0.0113],
        [-0.0196, -0.0256,  0.0066,  ...,  0.0020, -0.0253,  0.0261],
        [-0.0090, -0.0567,  0.0291,  ...,  0.0084,  0.0149,  0.0115]], device='cuda:0', requires_grad=True)
Q: tensor([     1.9609,     -0.1465,      0.6250,      0.2295,      1.3672,     -0.2656,     -0.0374,      0.3262,     -0.4766,      0.4590,      0.0298,     -1.3047,      0.8125,      1.0625,      0.0933,      0.3594,      0.0010,      0.1445,     -0.4180,      0.4980,      0.2451,     -0.9492,
             0.3496,      0.5625,      0.4238,     -0.5703,      0.3066,     -1.1641,      0.9805,     -1.0469,      0.0461,      0.9219,      0.3223,      0.1108,     -0.4883,      0.5039,      0.0021,     -0.1465,      0.0422,     -1.0078,      0.7539,     -0.8477,      0.3438,     -0.4277,
            -0.5586,     -0.7305,      0.4160,     -0.1709,     -0.7539,     -0.9023,      0.1807,      0.0212,      0.6836,      0.0280,      0.8594,     -0.4844,     -1.4375,      1.3047,     -0.4004,     -0.7109,      0.6172,     -0.0481,     -0.0708,      0.2598], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1543,      0.0479,     -0.5195,     -0.1836,      0.5469,      0.2559,     -0.3594,      0.0273,      0.1230,      0.2471,     -0.5898,     -0.5742,      0.2773,     -0.6836],
        [     0.0000,     -0.2832,     -0.1592,     -0.8555,     -0.6055,      0.0430,     -0.5312,     -0.2754,     -0.2598,     -0.0737,     -0.0549,     -0.2354,     -0.3535,     -0.0640,     -0.5234],
        [     0.0000,     -1.2344,     -0.8789,     -1.1250,     -0.7305,     -0.6328,     -0.7617,     -1.1172,     -1.4141,      0.2344,     -0.3418,     -1.4219,     -0.6719,     -0.3984,     -1.2266],
        [     0.0000,     -1.6016,     -0.6562,     -1.1406,     -1.0938,     -0.3066,     -0.5430,     -1.9688,     -0.5430,      0.1104,     -0.4180,     -0.9570,     -1.3984,      0.3535,     -1.8281],
        [     0.0000,      0.1953,     -0.2031,     -0.2715,      0.1279,     -0.4062,     -0.1670,      0.1680,     -0.3066,      0.2695,     -0.1943,     -0.2832,     -0.0019,      0.2080,     -0.6328],
        [     0.0000,     -0.6836,     -0.6562,     -1.0312,     -0.5820,     -0.3242,     -0.4668,     -1.2422,     -0.6367,      0.3535,     -0.0664,     -0.4746,     -0.4258,      0.0938,     -1.5391],
        [     0.0000,     -1.4766,     -0.9023,     -1.3750,     -1.6797,     -0.1602,     -1.5625,     -2.4375,     -1.4062,      0.1309,     -0.3711,     -1.3906,     -1.5625,     -0.1348,     -1.8047],
        [     0.0000,     -1.3750,     -0.7812,     -0.5977,     -0.3535,     -0.1357,      0.0466,     -1.2734,     -0.0253,      0.4551,      0.0483,     -0.4980,     -0.7188,      0.4414,     -1.6562],
        [     0.0000,      0.1187,     -0.1992,      0.6602,      0.5859,     -0.0737,      0.4922,      0.1011,      0.0280,      0.0001,      0.2812,      0.1406,      0.4355,     -0.2217,      0.1113],
        [     0.0000,     -0.3340,     -0.0457,     -0.2715,     -0.0659,      0.2090,      0.1807,      0.0398,      0.0388,      0.5039,     -0.1504,      0.2373,      0.4121,      0.1660,     -0.4531],
        [     0.0000,     -0.9531,     -0.9961,     -1.0938,     -1.6797,     -0.4316,     -1.1406,     -1.7188,     -0.7617,     -0.0315,     -0.5000,     -0.5156,     -1.0781,      0.0903,     -1.5469],
        [     0.0000,     -0.3652,     -0.5898,     -0.3125,     -0.3223,     -0.7109,     -0.6094,     -1.0234,     -0.8008,     -0.0535,     -0.1177,     -0.4922,     -0.2305,     -0.3223,     -1.1172],
        [     0.0000,     -0.1885,     -0.3105,      0.1748,      0.3809,      0.0364,      0.6445,     -0.0654,      0.5156,      0.6289,      0.1328,      0.3457,      0.1611,      0.4746,     -0.1299],
        [     0.0000,     -1.0078,     -0.5234,     -1.3281,     -1.1875,     -0.1426,     -0.9023,     -1.7656,     -0.6367,     -0.0554,     -0.0908,     -1.1172,     -1.6797,      0.3359,     -1.4766]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4614],
        [0.3786],
        [0.4219],
        [0.3826],
        [0.1781],
        [0.2218],
        [0.2883],
        [0.1625],
        [0.0709],
        [0.0861],
        [0.1458],
        [0.1175],
        [0.0649],
        [0.1549]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5742, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4316, 0.2910, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5117, 0.1387, 0.2148, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4785, 0.1328, 0.1973, 0.1001, 0.0908, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.1079, 0.1182, 0.2080, 0.1416, 0.3027, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2314, 0.0952, 0.1689, 0.0942, 0.0991, 0.2109, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1523, 0.0986, 0.1162, 0.1475, 0.1064, 0.1475, 0.1040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.0718, 0.0688, 0.0942, 0.0688, 0.1377, 0.1064, 0.1299, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.0669, 0.0562, 0.0747, 0.0752, 0.1416, 0.1240, 0.1099, 0.1729, 0.0479, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1553, 0.0630, 0.0649, 0.0635, 0.0845, 0.1108, 0.0693, 0.1191, 0.1729, 0.0493, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.0830, 0.0894, 0.1426, 0.0801, 0.0596, 0.1147, 0.0591, 0.0576, 0.0757, 0.1187, 0.0474, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.0566, 0.0471, 0.0287, 0.0542, 0.0996, 0.0806, 0.0796, 0.1021, 0.0286, 0.0255, 0.2578, 0.0322, 0.0000, 0.0000],
        [0.0645, 0.0527, 0.0688, 0.0737, 0.0471, 0.0581, 0.0593, 0.0840, 0.0791, 0.0986, 0.0923, 0.0645, 0.0728, 0.0845, 0.0000],
        [0.0593, 0.0532, 0.0762, 0.0767, 0.0522, 0.0398, 0.0576, 0.0957, 0.0491, 0.1187, 0.0913, 0.0435, 0.0723, 0.0476, 0.0674]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0094, -0.0195, -0.0048,  ..., -0.0026,  0.0197,  0.0326],
        [-0.0039, -0.0060,  0.0401,  ...,  0.0116,  0.0326,  0.0257],
        [ 0.0237, -0.0132, -0.0349,  ..., -0.0251, -0.0101,  0.0327],
        ...,
        [ 0.0063,  0.0148, -0.0134,  ..., -0.0171,  0.0174, -0.0219],
        [ 0.0189, -0.0234, -0.0220,  ...,  0.0035, -0.0093,  0.0298],
        [ 0.0143, -0.0015,  0.0072,  ...,  0.0214,  0.0058, -0.0104]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8945, -0.2500, -0.6016, -0.3164,  0.0845, -0.5547,  0.3652, -0.4199,  0.6133, -0.4121,  0.5586, -0.8633,  0.0459,  0.7383, -0.5078,  0.6992, -0.2227, -0.5195, -0.3477, -0.3281, -0.2812, -0.8281,  0.6992,  0.3691, -0.6211, -0.4805, -0.1475, -0.5586,  0.4023, -0.2695,  0.6094,  0.2539,
        -0.0225,  0.0459,  0.3574,  0.6914, -0.2344,  0.3828,  0.1367,  1.1406,  0.5820, -0.3301, -1.2031, -1.2500, -0.0442, -0.4844, -0.1895,  0.4141,  0.3066,  0.3223, -0.1504,  0.7930, -0.6953, -0.0640,  0.5938,  0.2832,  1.0938,  0.4590,  0.1895,  0.1543,  0.0347, -0.1777,  0.7656,  0.0439],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0430,  0.0144,  0.0094,  ...,  0.0059,  0.0008, -0.0149],
        [-0.0058,  0.0063, -0.0135,  ...,  0.0050, -0.0119,  0.0179],
        [-0.0070, -0.0142,  0.0067,  ..., -0.0314,  0.0200,  0.0005],
        ...,
        [ 0.0019,  0.0128,  0.0088,  ...,  0.0042, -0.0105,  0.0227],
        [-0.0251, -0.0231,  0.0031,  ..., -0.0304,  0.0278, -0.0030],
        [-0.0150,  0.0198, -0.0211,  ...,  0.0428, -0.0251, -0.0047]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2676, -0.5352,  0.0615, -0.3027,  0.4355,  0.0947, -0.5625,  0.3418,  0.5859, -0.1846, -0.0737, -0.3633,  0.4785,  0.4453, -0.4414, -0.0114, -0.8477, -0.4668, -0.8828, -0.5586,  0.6719, -0.7773, -0.5234,  0.4102,  0.6172,  0.5156, -0.2207,  0.3926,  0.8516,  0.0131, -0.2383, -0.5664,
        -0.2773,  0.1553,  0.4766, -0.4453, -0.1201, -0.4277,  0.0791,  0.0074, -0.3496, -0.2520,  0.3438, -0.5430, -0.9375,  0.2246, -0.3164, -0.5273,  0.1514,  0.5820,  0.3652, -0.4570,  0.1631,  0.0425,  0.4316,  0.1895, -0.2832,  0.3730, -0.9766,  0.0225,  0.2236,  0.1157, -0.2041,  1.3984],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3027, -0.0645, -0.1279, -0.3926,  0.1934, -0.2109, -0.6406,  0.3945,  0.1631, -0.1426,  0.0150, -0.6055,  0.2676,  0.0479],
        [ 0.0000, -0.3945, -0.4375, -0.4785, -0.4785,  0.1377, -0.1406,  0.3223,  0.1196,  0.2246, -0.1523,  0.3262, -0.0879,  0.4336,  0.0312],
        [ 0.0000, -1.3047, -0.8633, -1.3203, -1.2812, -0.1040, -0.5859, -0.5234, -0.2891, -0.9375, -0.8359,  0.0591, -1.1328,  0.0332, -0.2178],
        [ 0.0000, -1.2812, -0.8906, -1.5625, -1.6641,  0.4297, -1.1016,  0.0913,  0.1406, -1.0547, -0.6836,  0.9141, -1.0469,  0.5469, -0.7500],
        [ 0.0000, -0.1201, -0.0281,  0.5352,  0.1514,  0.9102,  0.2383, -0.1748,  0.3438,  0.2373,  0.7656,  0.0038,  0.1016,  0.3164, -0.1592],
        [ 0.0000, -0.8867, -0.3145, -0.8984, -0.8516, -0.0957, -0.8398,  0.4160, -0.3438, -0.5898, -0.3984,  0.4395, -0.3242, -0.1826, -0.3301],
        [ 0.0000,  0.1816, -0.2539, -0.0884,  0.1475, -0.1777,  0.1455, -0.2002, -0.1826, -0.8242, -0.7070,  0.2871, -0.3359,  0.0194,  0.2158],
        [ 0.0000, -0.5742, -0.6133, -0.2988, -0.6133,  0.0776, -0.1816,  0.0181,  0.4219, -0.1777, -0.1924,  0.5117, -0.4785,  0.6289, -0.3438],
        [ 0.0000, -0.6758, -0.8477, -0.5625, -0.5508,  0.0781, -0.0532, -0.1758,  0.2754, -1.0078, -0.7969,  0.5664, -0.9297,  0.8203, -0.7344],
        [ 0.0000, -0.9062, -0.8711, -0.8984, -0.6094, -0.3418, -0.8125, -0.2656,  0.1030, -1.1484, -1.1875,  0.7461, -0.8125,  0.1660, -0.2061],
        [ 0.0000,  0.1465,  0.2168,  0.6836,  0.1113, -0.1865,  0.4707, -0.1934, -0.2178,  0.0525,  0.5039, -0.4141,  0.1914, -0.2539,  0.1475],
        [ 0.0000, -0.6328, -0.8203, -1.3203, -0.6758, -0.0723, -0.2832, -0.2910, -0.0479, -1.3203, -1.4297,  0.8828, -1.2031,  0.4883, -0.3281],
        [ 0.0000, -0.1982,  0.0659,  0.1357, -0.3125, -0.1045, -0.0815,  0.2656,  0.2061,  0.4277,  0.3574, -0.0035,  0.1187,  0.2695, -0.0471],
        [ 0.0000, -0.1108,  0.2500,  0.2539, -0.1289, -0.4043, -0.0312,  0.4746, -0.1934,  0.6914,  0.4297, -0.3145,  0.1934, -0.2236,  0.1245]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5371],
        [0.4372],
        [0.3947],
        [0.3744],
        [0.1659],
        [0.1806],
        [0.1327],
        [0.1300],
        [0.1272],
        [0.1291],
        [0.0535],
        [0.1021],
        [0.0646],
        [0.0624]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3906, 0.6094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2383, 0.5312, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2246, 0.3613, 0.1963, 0.2168, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.2461, 0.1445, 0.1572, 0.0586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.2334, 0.0840, 0.0830, 0.0193, 0.4961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.1128, 0.0474, 0.0383, 0.0356, 0.5977, 0.0947, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0442, 0.0698, 0.0211, 0.0175, 0.0087, 0.6758, 0.0967, 0.0674, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0454, 0.0698, 0.0114, 0.0125, 0.0040, 0.7422, 0.0508, 0.0542, 0.0090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0693, 0.0981, 0.0396, 0.0361, 0.0165, 0.4863, 0.0669, 0.0952, 0.0317, 0.0605, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0486, 0.0498, 0.0168, 0.0165, 0.0112, 0.6719, 0.0693, 0.0679, 0.0189, 0.0249, 0.0039, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.1123, 0.0757, 0.0947, 0.1226, 0.0311, 0.0864, 0.0574, 0.0840, 0.0574, 0.1279, 0.0806, 0.0000, 0.0000, 0.0000],
        [0.0299, 0.0554, 0.0124, 0.0114, 0.0049, 0.7383, 0.0503, 0.0417, 0.0095, 0.0125, 0.0032, 0.0133, 0.0162, 0.0000, 0.0000],
        [0.0481, 0.0698, 0.0138, 0.0154, 0.0053, 0.6250, 0.0493, 0.0601, 0.0110, 0.0281, 0.0040, 0.0164, 0.0405, 0.0120, 0.0000],
        [0.0500, 0.0815, 0.0635, 0.0654, 0.1357, 0.0278, 0.0894, 0.0466, 0.0669, 0.0310, 0.1133, 0.0520, 0.0413, 0.0654, 0.0698]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0280,  0.0306,  0.0316,  ..., -0.0203,  0.0321, -0.0275],
        [-0.0134,  0.0020, -0.0144,  ..., -0.0328, -0.0245,  0.0321],
        [-0.0136, -0.0206,  0.0032,  ...,  0.0151, -0.0160,  0.0016],
        ...,
        [ 0.0399, -0.0161,  0.0008,  ..., -0.0334, -0.0269, -0.0031],
        [ 0.0175,  0.0418,  0.0173,  ...,  0.0268, -0.0097,  0.0031],
        [ 0.0040,  0.0155, -0.0181,  ..., -0.0053,  0.0318, -0.0064]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2656,  0.1465,  0.6406, -0.7266,  0.1260, -0.3027,  0.4395,  0.2832,  0.0598,  0.7227,  0.2158, -0.5430,  1.6094,  0.3418, -0.5742,  0.3809,  1.0781,  0.4824,  0.5430,  0.3613, -0.0537, -0.3223,  0.1865,  0.7891, -0.2539,  0.3164,  0.5547,  0.2617, -1.2266, -0.4258, -0.5938,  0.1738,
         0.2227, -0.3574, -0.4668, -0.0981, -0.5312,  0.1719,  0.1914, -0.4785,  0.7305, -0.5039, -0.0684,  0.6289, -0.5781, -0.2637, -0.9570, -0.1758,  0.3691,  0.5234, -0.6250, -0.4805, -0.2314, -0.6328, -0.1963, -0.8164,  0.6875, -0.2490,  0.3945, -0.2393,  0.5273,  1.0703,  0.9414, -0.1377],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0166,  0.0157, -0.0483,  ..., -0.0135, -0.0401, -0.0101],
        [-0.0228,  0.0070,  0.0128,  ..., -0.0074,  0.0047, -0.0458],
        [ 0.0205,  0.0316, -0.0334,  ...,  0.0189, -0.0278,  0.0005],
        ...,
        [-0.0057, -0.0026, -0.0072,  ..., -0.0217,  0.0296,  0.0014],
        [ 0.0154, -0.0147, -0.0025,  ..., -0.0118,  0.0266,  0.0174],
        [ 0.0458,  0.0116,  0.0137,  ..., -0.0341, -0.0262,  0.0294]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7969,  0.2031,  0.1992, -0.6172, -0.5156, -0.1045,  0.5039, -1.4141, -0.5195, -0.1729, -0.4082, -1.0312,  0.1787, -0.3594, -0.5820, -1.4219, -0.4297, -0.2256, -0.1069, -1.2344,  0.0693,  0.4316, -0.8828,  0.6328,  0.6328,  0.4863,  0.2002,  0.6367, -0.0215,  0.5703, -0.2070,  0.3809,
        -0.6719, -0.3574,  0.2559,  0.1768, -2.0469,  0.5078,  0.5039,  0.1934,  0.2910,  0.8945, -0.0204,  0.1494, -0.0981, -0.5938, -0.4453, -0.2461, -0.7383,  0.4648, -0.3477, -0.4395, -0.2695,  0.0092,  0.5430,  0.3828, -0.5234,  0.3340,  0.1250,  0.1006,  1.1484,  0.8242, -0.0057, -1.2266],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.4434,      0.1079,     -0.3340,     -0.0396,      0.6602,      0.4512,      0.2451,     -0.2793,      0.0608,      0.1387,     -0.3086,      0.0422,     -0.2441,      0.1001],
        [     0.0000,      0.7969,     -0.0330,     -0.0388,     -0.3652,     -0.4414,      0.6367,     -0.2676,     -0.3047,     -0.5469,      0.2734,      0.0659,     -0.5625,     -0.2969,      0.5703],
        [     0.0000,      0.4746,     -0.1357,     -0.0371,      0.0442,      0.0796,      0.4688,     -0.0562,     -0.2598,     -0.4082,      0.2578,     -0.0454,     -0.3594,     -0.2793,      0.2910],
        [     0.0000,     -0.4746,     -1.0078,     -0.9219,     -1.9062,      2.8594,      0.1416,      0.3789,     -1.3828,     -0.2734,     -2.4375,     -0.5117,     -0.3320,     -1.3203,     -0.1504],
        [     0.0000,      1.0156,     -0.0007,     -0.0145,     -1.4766,      1.7734,      0.6758,     -0.8047,     -0.7539,     -0.7773,     -1.8672,      0.1943,     -1.0547,     -0.6797,      0.6953],
        [     0.0000,      0.4102,     -0.4609,     -0.6758,     -0.7422,      2.0781,      0.2314,     -0.1504,     -0.6875,     -0.7930,     -1.5547,     -0.6250,     -0.5664,     -0.6484,     -0.0461],
        [     0.0000,      0.4551,     -0.7383,     -0.9297,     -1.6328,      2.7344,      0.7812,      0.4238,     -0.9766,     -1.0000,     -1.9062,     -0.6562,     -0.6406,     -0.9180,      0.2773],
        [     0.0000,      0.4277,     -1.3906,     -1.2969,     -2.4375,      2.7969,      0.1099,      0.1748,     -1.6250,     -0.6328,     -2.7031,     -1.1875,     -0.2520,     -1.5469,     -0.4492],
        [     0.0000,      0.3477,     -0.5625,     -0.6484,     -1.4375,      1.9453,     -0.0383,      0.3164,     -0.7812,     -0.1367,     -1.7422,     -0.3750,     -0.2637,     -0.7344,      0.1309],
        [     0.0000,      0.0215,     -1.0625,     -1.0859,     -1.4688,      2.6250,      0.3555,      0.3340,     -0.9414,     -0.6680,     -2.5312,     -0.8750,     -0.4355,     -0.9141,     -0.1357],
        [     0.0000,      0.4707,      0.0752,      0.3008,      0.5586,     -0.8125,      0.2090,     -0.2012,      0.1826,     -0.2012,      0.6055,      0.1396,     -0.0923,      0.1582,      0.2061],
        [     0.0000,      0.6172,     -0.8828,     -0.9648,     -1.7969,      3.2031,      0.5195,      0.3359,     -1.1562,     -0.8672,     -2.2188,     -0.8086,     -0.6055,     -1.0859,      0.0055],
        [     0.0000,      0.3770,     -1.2500,     -1.1328,     -2.2031,      2.5625,      0.0291,      0.2236,     -1.4688,     -0.5352,     -2.4844,     -1.0781,     -0.1670,     -1.3906,     -0.4180],
        [     0.0000,      0.4863,      0.2363,      0.2676,      1.0000,     -0.5859,      0.5781,     -0.0723,      0.2871,     -0.4805,      0.8125,      0.0339,     -0.1963,      0.2656,      0.3301]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4577],
        [0.3273],
        [0.2712],
        [0.2555],
        [0.1572],
        [0.1149],
        [0.1395],
        [0.1093],
        [0.0954],
        [0.1027],
        [0.0795],
        [0.0841],
        [0.0775],
        [0.0588]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.7227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.5117, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2100, 0.4258, 0.1729, 0.1904, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2109, 0.3984, 0.1318, 0.1172, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1689, 0.2100, 0.1670, 0.1855, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.2207, 0.0322, 0.0179, 0.0649, 0.2461, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.3281, 0.0623, 0.0427, 0.0405, 0.2139, 0.1699, 0.0183, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.0903, 0.0564, 0.0659, 0.0542, 0.2354, 0.1216, 0.0796, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.2793, 0.0347, 0.0354, 0.0815, 0.1250, 0.1543, 0.0184, 0.0957, 0.0669, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.1670, 0.0206, 0.0135, 0.0593, 0.2461, 0.1836, 0.0195, 0.0830, 0.0425, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.1143, 0.0859, 0.0981, 0.0591, 0.0815, 0.0933, 0.0493, 0.0723, 0.0569, 0.1143, 0.0796, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.2119, 0.0515, 0.0383, 0.0300, 0.1875, 0.1084, 0.0236, 0.0615, 0.0688, 0.0610, 0.0332, 0.0272, 0.0000, 0.0000],
        [0.0903, 0.0654, 0.0352, 0.0410, 0.0374, 0.1787, 0.0825, 0.0522, 0.1138, 0.0339, 0.0669, 0.0322, 0.0742, 0.0962, 0.0000],
        [0.1055, 0.1709, 0.0513, 0.0459, 0.0386, 0.1133, 0.1187, 0.0216, 0.0576, 0.0427, 0.0557, 0.0417, 0.0237, 0.0559, 0.0562]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0097,  0.0045,  0.0173,  ..., -0.0194,  0.0309,  0.0238],
        [ 0.0043,  0.0026,  0.0041,  ..., -0.0097, -0.0402,  0.0004],
        [-0.0118, -0.0336, -0.0054,  ...,  0.0328, -0.0216,  0.0072],
        ...,
        [-0.0077,  0.0162,  0.0072,  ..., -0.0183, -0.0310,  0.0340],
        [-0.0263, -0.0031, -0.0168,  ..., -0.0119, -0.0157,  0.0027],
        [ 0.0018,  0.0051,  0.0131,  ...,  0.0115, -0.0036,  0.0215]], device='cuda:0', requires_grad=True)
K: tensor([-1.0625, -0.3652,  0.2598,  0.3457,  1.2266, -0.5391,  0.9648, -0.3359, -1.0938,  0.3340, -0.2754, -0.6836, -1.4609,  0.6445, -1.0625, -0.2988,  0.5430,  0.7578,  0.3203,  0.1855,  0.0649, -1.0859,  0.5586,  0.8320, -0.6797, -0.2539, -0.5273,  0.6328, -0.0291, -0.5977, -0.1758, -0.0786,
        -0.0723,  0.3691,  0.0057,  0.6094, -0.3438, -0.0649, -1.0312, -1.2422, -0.4707,  0.0874, -0.0708, -0.0232, -0.0554,  0.8516, -0.0172, -1.4297, -0.6289,  0.8125,  0.4277, -0.0166, -0.3008,  1.0391, -0.1196, -0.3027, -0.3965, -1.2656, -1.4141,  0.1973,  0.7227, -0.3281, -0.2246,  0.8945],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0351,  0.0337, -0.0221,  ...,  0.0082,  0.0052,  0.0151],
        [-0.0247,  0.0057, -0.0143,  ..., -0.0267, -0.0094, -0.0347],
        [-0.0180, -0.0136, -0.0043,  ..., -0.0195, -0.0015,  0.0008],
        ...,
        [ 0.0142,  0.0100, -0.0380,  ..., -0.0142,  0.0225,  0.0200],
        [-0.0018, -0.0109, -0.0257,  ..., -0.0005, -0.0115,  0.0319],
        [-0.0058,  0.0232, -0.0093,  ..., -0.0135, -0.0131, -0.0170]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6367,  0.1895, -0.2422, -0.2578, -0.7188, -0.4316, -0.1982,  0.3789,  0.4023, -1.4766, -0.9141,  1.0938, -0.1484, -0.5078, -0.1494, -1.0938,  0.4180, -0.5039, -0.9688, -0.4492, -1.5078,  0.2578, -0.6797, -0.3301,  0.0299,  0.9453,  0.7070,  0.6406,  0.0396,  0.3574, -0.9570,  0.7148,
        -1.0156, -0.6367, -0.6875, -1.2578, -0.0447, -0.7969,  0.4492,  0.0496,  0.2637,  0.8594,  0.5273,  0.1992,  0.3027, -0.2217, -0.6445,  0.3125,  0.4453, -0.7539, -0.1641, -0.0156,  0.9219, -0.2930,  0.3145,  0.2617,  0.5898, -1.0703, -0.6602, -0.4434, -0.1172,  0.1250,  0.6992,  0.5859],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.9570, -0.1719, -0.1191, -0.2812,  0.2334,  0.2139, -0.4297, -0.2021, -0.2393,  0.0757, -0.4922, -0.3730, -0.1826, -0.1895],
        [ 0.0000,  0.6914, -0.1128, -0.0155, -0.6797, -0.1030,  0.2559, -0.8594, -0.2119, -0.6484,  0.3281, -0.4473, -0.7344, -0.2041, -0.0243],
        [ 0.0000,  0.7109, -0.1914, -0.0942, -0.5938, -0.0884,  0.5156, -0.6406, -0.0295, -0.5195,  0.5430, -0.4668, -0.5430, -0.0393,  0.0356],
        [ 0.0000,  0.6328, -0.4746, -0.5898, -0.4004,  0.4609,  0.4141, -0.5039, -0.0591, -0.3125, -0.2197, -0.7383, -0.1357, -0.1533, -0.6172],
        [ 0.0000,  0.2949,  0.5156,  0.2832,  0.3906,  0.1279,  0.1025,  0.3906,  0.5312,  0.2168,  0.1533,  0.4102,  0.4746,  0.5742,  0.7578],
        [ 0.0000,  0.3887, -1.5312, -2.1250, -0.8359,  0.5000,  0.5859, -1.9453, -0.4199, -1.3203, -0.9258, -1.9922, -1.6797, -0.5195, -1.2891],
        [ 0.0000,  0.9609, -0.6992, -1.0781, -1.1328,  0.5352,  0.3027, -1.9219, -0.4062, -0.4824, -0.5898, -1.2188, -1.8906, -0.4258, -0.4531],
        [ 0.0000, -0.3574, -0.8281, -0.6719, -0.8633,  0.6016, -0.0571, -0.4805,  0.2695, -0.9258, -0.2695, -0.9062, -0.1465,  0.1089, -0.6641],
        [ 0.0000,  0.9336, -1.1484, -1.1328, -0.2969,  0.1338,  0.3457, -1.7812, -0.1367, -0.4941, -0.3906, -1.5781, -1.7969, -0.1533, -1.0547],
        [ 0.0000,  0.5391, -1.5547, -1.9766, -0.4961,  0.9258,  0.6328, -1.6016, -0.1611, -0.8320, -0.3613, -1.8203, -1.1797, -0.2471, -1.2422],
        [ 0.0000,  0.1816, -0.1055,  0.0293, -0.4785, -0.1572, -0.0247, -0.6602, -0.2754, -0.5156,  0.1777, -0.1816, -0.6797, -0.2598,  0.0801],
        [ 0.0000,  0.7773, -0.6328, -0.9297, -1.1719,  0.6602,  0.1118, -1.4219, -0.4570, -0.3477, -0.4648, -1.0703, -1.2734, -0.4688, -0.3926],
        [ 0.0000, -0.3223, -0.9453, -0.7891, -0.8789,  0.6875, -0.0898, -0.5469,  0.2334, -0.9766, -0.2988, -1.0234, -0.1924,  0.0635, -0.7969],
        [ 0.0000,  0.4824, -0.7227, -0.8359, -1.0078,  0.0723,  0.1182, -1.5859, -0.6094, -0.9023, -0.6406, -0.9258, -1.4922, -0.6367, -0.6328]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3828],
        [0.3420],
        [0.2716],
        [0.2313],
        [0.1059],
        [0.1067],
        [0.0814],
        [0.0957],
        [0.0982],
        [0.0805],
        [0.0990],
        [0.0594],
        [0.0722],
        [0.0877]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.1631 a:0.0435 and:0.0527 and:0.1670in:0.0057,:0.1875 a:0.0386,:0.0143)
,
------
		( a:0.0435 and:0.0527 and:0.1670in:0.0057,:0.1875 a:0.0386,:0.0143 and:0.1885)
 and the same, and the same, and the same, and the same
@ 550 train 6.3294 , allloss: 6.3353, dt: 1701.11ms, fracRes: 0.0072, norm(attn): 0.0591, norm(output): 0.1553, norm(x): 0.1545, norm(y): 1.0031, norm:2.1977, tok/sec: 77050.90, flops:80.87, batch-reuse:1
@ 551 train 6.3397 , allloss: 6.3454, dt: 1284.34ms, fracRes: 0.0072, norm(attn): 0.0586, norm(output): 0.1562, norm(x): 0.1548, norm(y): 1.0031, norm:1.1640, tok/sec: 102054.11, flops:107.11, batch-reuse:1
@ 552 train 6.2207 , allloss: 6.2271, dt: 1304.69ms, fracRes: 0.0075, norm(attn): 0.0574, norm(output): 0.1562, norm(x): 0.1546, norm(y): 1.0031, norm:2.6634, tok/sec: 100462.46, flops:105.44, batch-reuse:1
@ 553 train 6.3471 , allloss: 6.3531, dt: 1324.22ms, fracRes: 0.0075, norm(attn): 0.0608, norm(output): 0.1553, norm(x): 0.1547, norm(y): 1.0031, norm:1.3667, tok/sec: 98980.18, flops:103.88, batch-reuse:1
@ 554 train 6.2962 , allloss: 6.3025, dt: 1319.85ms, fracRes: 0.0076, norm(attn): 0.0625, norm(output): 0.1562, norm(x): 0.1548, norm(y): 1.0032, norm:1.5367, tok/sec: 99308.04, flops:104.23, batch-reuse:1
@ 555 train 6.2942 , allloss: 6.3008, dt: 1337.31ms, fracRes: 0.0075, norm(attn): 0.0583, norm(output): 0.1553, norm(x): 0.1550, norm(y): 1.0031, norm:2.2663, tok/sec: 98011.45, flops:102.86, batch-reuse:1
@ 556 train 6.2260 , allloss: 6.2314, dt: 1346.19ms, fracRes: 0.0075, norm(attn): 0.0591, norm(output): 0.1562, norm(x): 0.1553, norm(y): 1.0032, norm:1.4202, tok/sec: 97365.30, flops:102.19, batch-reuse:1
@ 557 train 6.3062 , allloss: 6.3120, dt: 1347.55ms, fracRes: 0.0075, norm(attn): 0.0593, norm(output): 0.1562, norm(x): 0.1553, norm(y): 1.0032, norm:1.2603, tok/sec: 97267.04, flops:102.08, batch-reuse:1
@ 558 train 6.4551 , allloss: 6.4624, dt: 1301.48ms, fracRes: 0.0076, norm(attn): 0.0591, norm(output): 0.1562, norm(x): 0.1554, norm(y): 1.0032, norm:2.0327, tok/sec: 100710.34, flops:105.70, batch-reuse:1
@ 559 train 6.5655 , allloss: 6.5727, dt: 1329.61ms, fracRes: 0.0074, norm(attn): 0.0620, norm(output): 0.1562, norm(x): 0.1558, norm(y): 1.0032, norm:1.8109, tok/sec: 98579.20, flops:103.46, batch-reuse:1
@ 560 train 6.4920 , allloss: 6.5014, dt: 1287.74ms, fracRes: 0.0073, norm(attn): 0.0635, norm(output): 0.1572, norm(x): 0.1563, norm(y): 1.0032, norm:2.5489, tok/sec: 101784.52, flops:106.82, batch-reuse:1
@ 561 train 6.5660 , allloss: 6.5729, dt: 1318.55ms, fracRes: 0.0073, norm(attn): 0.0623, norm(output): 0.1572, norm(x): 0.1568, norm(y): 1.0032, norm:2.0338, tok/sec: 99406.23, flops:104.33, batch-reuse:1
@ 562 train 6.4531 , allloss: 6.4597, dt: 1319.48ms, fracRes: 0.0072, norm(attn): 0.0581, norm(output): 0.1572, norm(x): 0.1566, norm(y): 1.0032, norm:1.7631, tok/sec: 99335.84, flops:104.25, batch-reuse:1
@ 563 train 6.5567 , allloss: 6.5636, dt: 1343.69ms, fracRes: 0.0071, norm(attn): 0.0581, norm(output): 0.1562, norm(x): 0.1567, norm(y): 1.0032, norm:1.6427, tok/sec: 97546.30, flops:102.38, batch-reuse:1
@ 564 train 6.3825 , allloss: 6.3913, dt: 1342.12ms, fracRes: 0.0069, norm(attn): 0.0605, norm(output): 0.1572, norm(x): 0.1574, norm(y): 1.0031, norm:1.4349, tok/sec: 97660.51, flops:102.50, batch-reuse:1
@ 565 train 6.2558 , allloss: 6.2648, dt: 1284.66ms, fracRes: 0.0070, norm(attn): 0.0625, norm(output): 0.1572, norm(x): 0.1580, norm(y): 1.0032, norm:1.7124, tok/sec: 102028.34, flops:107.08, batch-reuse:1
@ 566 train 6.4895 , allloss: 6.4992, dt: 1301.60ms, fracRes: 0.0072, norm(attn): 0.0603, norm(output): 0.1572, norm(x): 0.1577, norm(y): 1.0032, norm:2.7147, tok/sec: 100700.36, flops:105.69, batch-reuse:1
@ 567 train 6.4895 , allloss: 6.4977, dt: 1320.75ms, fracRes: 0.0072, norm(attn): 0.0581, norm(output): 0.1572, norm(x): 0.1577, norm(y): 1.0032, norm:1.7612, tok/sec: 99240.22, flops:104.15, batch-reuse:1
@ 568 train 6.5499 , allloss: 6.5566, dt: 1315.76ms, fracRes: 0.0072, norm(attn): 0.0659, norm(output): 0.1572, norm(x): 0.1577, norm(y): 1.0032, norm:2.5381, tok/sec: 99616.71, flops:104.55, batch-reuse:1
@ 569 train 6.4737 , allloss: 6.4815, dt: 1336.88ms, fracRes: 0.0070, norm(attn): 0.0620, norm(output): 0.1572, norm(x): 0.1576, norm(y): 1.0032, norm:1.7029, tok/sec: 98043.47, flops:102.90, batch-reuse:1
@ 570 train 6.4361 , allloss: 6.4440, dt: 1298.78ms, fracRes: 0.0068, norm(attn): 0.0601, norm(output): 0.1572, norm(x): 0.1579, norm(y): 1.0031, norm:1.8071, tok/sec: 100918.96, flops:105.92, batch-reuse:1
@ 571 train 6.3991 , allloss: 6.4063, dt: 1309.55ms, fracRes: 0.0068, norm(attn): 0.0598, norm(output): 0.1572, norm(x): 0.1580, norm(y): 1.0031, norm:1.7582, tok/sec: 100089.61, flops:105.05, batch-reuse:1
@ 572 train 6.3712 , allloss: 6.3800, dt: 1333.15ms, fracRes: 0.0071, norm(attn): 0.0591, norm(output): 0.1582, norm(x): 0.1585, norm(y): 1.0032, norm:1.4286, tok/sec: 98317.38, flops:103.19, batch-reuse:1
@ 573 train 6.4095 , allloss: 6.4186, dt: 1310.30ms, fracRes: 0.0074, norm(attn): 0.0596, norm(output): 0.1582, norm(x): 0.1584, norm(y): 1.0032, norm:1.6870, tok/sec: 100032.28, flops:104.99, batch-reuse:1
@ 574 train 6.4202 , allloss: 6.4298, dt: 1287.65ms, fracRes: 0.0072, norm(attn): 0.0581, norm(output): 0.1582, norm(x): 0.1589, norm(y): 1.0031, norm:1.8478, tok/sec: 101791.78, flops:106.83, batch-reuse:1
@ 575 train 6.3663 , allloss: 6.3737, dt: 1311.07ms, fracRes: 0.0073, norm(attn): 0.0583, norm(output): 0.1611, norm(x): 0.1595, norm(y): 1.0031, norm:1.3196, tok/sec: 99973.34, flops:104.92, batch-reuse:1
@ 576 train 6.3331 , allloss: 6.3419, dt: 1326.84ms, fracRes: 0.0078, norm(attn): 0.0625, norm(output): 0.1602, norm(x): 0.1595, norm(y): 1.0032, norm:1.5748, tok/sec: 98785.36, flops:103.68, batch-reuse:1
@ 577 train 6.4477 , allloss: 6.4535, dt: 1327.03ms, fracRes: 0.0077, norm(attn): 0.0610, norm(output): 0.1592, norm(x): 0.1596, norm(y): 1.0032, norm:1.5280, tok/sec: 98770.62, flops:103.66, batch-reuse:1
@ 578 train 6.3774 , allloss: 6.3823, dt: 1329.22ms, fracRes: 0.0079, norm(attn): 0.0620, norm(output): 0.1592, norm(x): 0.1595, norm(y): 1.0032, norm:1.2219, tok/sec: 98608.34, flops:103.49, batch-reuse:1
@ 579 train 6.3786 , allloss: 6.3838, dt: 1318.71ms, fracRes: 0.0080, norm(attn): 0.0615, norm(output): 0.1602, norm(x): 0.1598, norm(y): 1.0032, norm:1.2903, tok/sec: 99394.30, flops:104.32, batch-reuse:1
@ 580 train 6.4457 , allloss: 6.4506, dt: 1335.05ms, fracRes: 0.0078, norm(attn): 0.0625, norm(output): 0.1592, norm(x): 0.1596, norm(y): 1.0032, norm:1.3416, tok/sec: 98177.38, flops:103.04, batch-reuse:1
@ 581 train 6.3668 , allloss: 6.3717, dt: 1329.04ms, fracRes: 0.0076, norm(attn): 0.0620, norm(output): 0.1592, norm(x): 0.1589, norm(y): 1.0032, norm:1.3099, tok/sec: 98621.89, flops:103.51, batch-reuse:1
@ 582 train 6.3907 , allloss: 6.3981, dt: 1343.57ms, fracRes: 0.0076, norm(attn): 0.0618, norm(output): 0.1592, norm(x): 0.1594, norm(y): 1.0032, norm:1.5300, tok/sec: 97555.07, flops:102.39, batch-reuse:1
@ 583 train 6.3278 , allloss: 6.3343, dt: 1338.05ms, fracRes: 0.0075, norm(attn): 0.0630, norm(output): 0.1611, norm(x): 0.1603, norm(y): 1.0032, norm:1.3492, tok/sec: 97957.52, flops:102.81, batch-reuse:1
@ 584 train 6.4194 , allloss: 6.4248, dt: 1288.99ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 0.1611, norm(x): 0.1606, norm(y): 1.0032, norm:1.4831, tok/sec: 101685.85, flops:106.72, batch-reuse:1
@ 585 train 6.3636 , allloss: 6.3684, dt: 1300.42ms, fracRes: 0.0073, norm(attn): 0.0620, norm(output): 0.1611, norm(x): 0.1608, norm(y): 1.0032, norm:1.4997, tok/sec: 100792.33, flops:105.78, batch-reuse:1
@ 586 train 6.3985 , allloss: 6.4033, dt: 1289.17ms, fracRes: 0.0075, norm(attn): 0.0635, norm(output): 0.1611, norm(x): 0.1606, norm(y): 1.0033, norm:1.3984, tok/sec: 101671.95, flops:106.71, batch-reuse:1
@ 587 train 6.3981 , allloss: 6.4028, dt: 1288.08ms, fracRes: 0.0074, norm(attn): 0.0605, norm(output): 0.1611, norm(x): 0.1603, norm(y): 1.0033, norm:0.9931, tok/sec: 101757.32, flops:106.80, batch-reuse:1
@ 588 train 6.4168 , allloss: 6.4228, dt: 1303.81ms, fracRes: 0.0075, norm(attn): 0.0613, norm(output): 0.1611, norm(x): 0.1608, norm(y): 1.0033, norm:1.7495, tok/sec: 100529.72, flops:105.51, batch-reuse:1
@ 589 train 6.4152 , allloss: 6.4199, dt: 1302.39ms, fracRes: 0.0077, norm(attn): 0.0664, norm(output): 0.1611, norm(x): 0.1609, norm(y): 1.0033, norm:1.1692, tok/sec: 100639.84, flops:105.62, batch-reuse:1
@ 590 train 6.4048 , allloss: 6.4100, dt: 1292.37ms, fracRes: 0.0074, norm(attn): 0.0640, norm(output): 0.1611, norm(x): 0.1608, norm(y): 1.0033, norm:1.2480, tok/sec: 101419.64, flops:106.44, batch-reuse:1
@ 591 train 6.3482 , allloss: 6.3529, dt: 1306.87ms, fracRes: 0.0074, norm(attn): 0.0640, norm(output): 0.1602, norm(x): 0.1605, norm(y): 1.0033, norm:1.3142, tok/sec: 100294.56, flops:105.26, batch-reuse:1
@ 592 train 6.3743 , allloss: 6.3805, dt: 1296.68ms, fracRes: 0.0075, norm(attn): 0.0654, norm(output): 0.1602, norm(x): 0.1608, norm(y): 1.0033, norm:2.0042, tok/sec: 101082.82, flops:106.09, batch-reuse:1
@ 593 train 6.3529 , allloss: 6.3578, dt: 1304.23ms, fracRes: 0.0077, norm(attn): 0.0596, norm(output): 0.1611, norm(x): 0.1606, norm(y): 1.0033, norm:1.1447, tok/sec: 100497.78, flops:105.47, batch-reuse:1
@ 594 train 6.5416 , allloss: 6.5456, dt: 1296.87ms, fracRes: 0.0079, norm(attn): 0.0630, norm(output): 0.1621, norm(x): 0.1611, norm(y): 1.0033, norm:1.6606, tok/sec: 101067.99, flops:106.07, batch-reuse:1
@ 595 train 6.3307 , allloss: 6.3351, dt: 1299.90ms, fracRes: 0.0080, norm(attn): 0.0620, norm(output): 0.1611, norm(x): 0.1610, norm(y): 1.0033, norm:1.7236, tok/sec: 100832.48, flops:105.83, batch-reuse:1
@ 596 train 6.3443 , allloss: 6.3490, dt: 1275.46ms, fracRes: 0.0079, norm(attn): 0.0640, norm(output): 0.1611, norm(x): 0.1610, norm(y): 1.0033, norm:1.3284, tok/sec: 102764.84, flops:107.85, batch-reuse:1
@ 597 train 6.3413 , allloss: 6.3458, dt: 1279.97ms, fracRes: 0.0077, norm(attn): 0.0640, norm(output): 0.1611, norm(x): 0.1614, norm(y): 1.0033, norm:1.4243, tok/sec: 102402.04, flops:107.47, batch-reuse:1
@ 598 train 6.4214 , allloss: 6.4259, dt: 1314.96ms, fracRes: 0.0080, norm(attn): 0.0654, norm(output): 0.1611, norm(x): 0.1615, norm(y): 1.0033, norm:1.4523, tok/sec: 99677.68, flops:104.61, batch-reuse:1
@ 599 train 6.4237 , allloss: 6.4279, dt: 1313.89ms, fracRes: 0.0084, norm(attn): 0.0684, norm(output): 0.1611, norm(x): 0.1613, norm(y): 1.0034, norm:1.5760, tok/sec: 99758.99, flops:104.70, batch-reuse:1
@ 600 train 6.3499 , allloss: 6.3538, dt: 1328.95ms, fracRes: 0.0084, norm(attn): 0.0654, norm(output): 0.1611, norm(x): 0.1610, norm(y): 1.0034, norm:1.8742, tok/sec: 98628.14, flops:103.51, batch-reuse:1
@ 601 train 6.4291 , allloss: 6.4354, dt: 1321.65ms, fracRes: 0.0085, norm(attn): 0.0664, norm(output): 0.1621, norm(x): 0.1615, norm(y): 1.0033, norm:1.7102, tok/sec: 99173.22, flops:104.08, batch-reuse:1
@ 602 train 6.3960 , allloss: 6.4005, dt: 1317.38ms, fracRes: 0.0083, norm(attn): 0.0654, norm(output): 0.1621, norm(x): 0.1617, norm(y): 1.0034, norm:1.3340, tok/sec: 99494.35, flops:104.42, batch-reuse:1
@ 603 train 6.3517 , allloss: 6.3566, dt: 1285.94ms, fracRes: 0.0083, norm(attn): 0.0679, norm(output): 0.1621, norm(x): 0.1615, norm(y): 1.0034, norm:2.0281, tok/sec: 101927.06, flops:106.97, batch-reuse:1
@ 604 train 6.2690 , allloss: 6.2730, dt: 1317.71ms, fracRes: 0.0081, norm(attn): 0.0625, norm(output): 0.1621, norm(x): 0.1618, norm(y): 1.0033, norm:1.7619, tok/sec: 99469.31, flops:104.39, batch-reuse:1
@ 605 train 6.2855 , allloss: 6.2893, dt: 1289.65ms, fracRes: 0.0082, norm(attn): 0.0664, norm(output): 0.1621, norm(x): 0.1620, norm(y): 1.0034, norm:1.2130, tok/sec: 101633.89, flops:106.67, batch-reuse:1
@ 606 train 6.3172 , allloss: 6.3211, dt: 1316.61ms, fracRes: 0.0080, norm(attn): 0.0669, norm(output): 0.1621, norm(x): 0.1625, norm(y): 1.0034, norm:1.3664, tok/sec: 99552.87, flops:104.48, batch-reuse:1
@ 607 train 6.3028 , allloss: 6.3067, dt: 1290.08ms, fracRes: 0.0081, norm(attn): 0.0630, norm(output): 0.1621, norm(x): 0.1627, norm(y): 1.0034, norm:1.3015, tok/sec: 101599.69, flops:106.63, batch-reuse:1
@ 608 train 6.2255 , allloss: 6.2291, dt: 1301.99ms, fracRes: 0.0083, norm(attn): 0.0623, norm(output): 0.1621, norm(x): 0.1623, norm(y): 1.0034, norm:1.6091, tok/sec: 100670.18, flops:105.66, batch-reuse:1
@ 609 train 6.2891 , allloss: 6.2934, dt: 1305.00ms, fracRes: 0.0082, norm(attn): 0.0618, norm(output): 0.1621, norm(x): 0.1626, norm(y): 1.0034, norm:1.1771, tok/sec: 100438.57, flops:105.41, batch-reuse:1
@ 610 train 6.4405 , allloss: 6.4453, dt: 1316.29ms, fracRes: 0.0082, norm(attn): 0.0659, norm(output): 0.1621, norm(x): 0.1626, norm(y): 1.0034, norm:1.2121, tok/sec: 99576.58, flops:104.51, batch-reuse:1
@ 611 train 6.3418 , allloss: 6.3467, dt: 1326.95ms, fracRes: 0.0086, norm(attn): 0.0645, norm(output): 0.1621, norm(x): 0.1622, norm(y): 1.0034, norm:1.4488, tok/sec: 98777.10, flops:103.67, batch-reuse:1
@ 612 train 6.3734 , allloss: 6.3769, dt: 1317.45ms, fracRes: 0.0085, norm(attn): 0.0669, norm(output): 0.1621, norm(x): 0.1623, norm(y): 1.0034, norm:1.4249, tok/sec: 99489.54, flops:104.42, batch-reuse:1
@ 613 train 6.4322 , allloss: 6.4360, dt: 1300.54ms, fracRes: 0.0084, norm(attn): 0.0679, norm(output): 0.1631, norm(x): 0.1625, norm(y): 1.0034, norm:1.3331, tok/sec: 100782.72, flops:105.77, batch-reuse:1
@ 614 train 6.3639 , allloss: 6.3687, dt: 1314.32ms, fracRes: 0.0085, norm(attn): 0.0649, norm(output): 0.1641, norm(x): 0.1629, norm(y): 1.0034, norm:1.1130, tok/sec: 99726.30, flops:104.66, batch-reuse:1
@ 615 train 6.3568 , allloss: 6.3615, dt: 1333.72ms, fracRes: 0.0083, norm(attn): 0.0645, norm(output): 0.1621, norm(x): 0.1631, norm(y): 1.0034, norm:1.1226, tok/sec: 98275.26, flops:103.14, batch-reuse:1
@ 616 train 6.3820 , allloss: 6.3862, dt: 1320.73ms, fracRes: 0.0084, norm(attn): 0.0664, norm(output): 0.1631, norm(x): 0.1631, norm(y): 1.0034, norm:1.2359, tok/sec: 99242.41, flops:104.16, batch-reuse:1
@ 617 train 6.1786 , allloss: 6.1824, dt: 1300.43ms, fracRes: 0.0083, norm(attn): 0.0674, norm(output): 0.1621, norm(x): 0.1632, norm(y): 1.0034, norm:1.3793, tok/sec: 100791.16, flops:105.78, batch-reuse:1
@ 618 train 6.3277 , allloss: 6.3338, dt: 1295.28ms, fracRes: 0.0084, norm(attn): 0.0664, norm(output): 0.1631, norm(x): 0.1632, norm(y): 1.0034, norm:1.5034, tok/sec: 101192.25, flops:106.20, batch-reuse:1
@ 619 train 6.2797 , allloss: 6.2830, dt: 1301.00ms, fracRes: 0.0086, norm(attn): 0.0688, norm(output): 0.1621, norm(x): 0.1630, norm(y): 1.0035, norm:1.4202, tok/sec: 100746.79, flops:105.74, batch-reuse:1
@ 620 train 6.2923 , allloss: 6.2957, dt: 1304.27ms, fracRes: 0.0084, norm(attn): 0.0664, norm(output): 0.1621, norm(x): 0.1629, norm(y): 1.0035, norm:1.0947, tok/sec: 100494.23, flops:105.47, batch-reuse:1
@ 621 train 6.3008 , allloss: 6.3044, dt: 1307.02ms, fracRes: 0.0081, norm(attn): 0.0664, norm(output): 0.1641, norm(x): 0.1636, norm(y): 1.0034, norm:1.7292, tok/sec: 100283.38, flops:105.25, batch-reuse:1
@ 622 train 6.2333 , allloss: 6.2385, dt: 1275.10ms, fracRes: 0.0085, norm(attn): 0.0649, norm(output): 0.1621, norm(x): 0.1628, norm(y): 1.0035, norm:1.2385, tok/sec: 102793.51, flops:107.88, batch-reuse:1
@ 623 train 6.2397 , allloss: 6.2436, dt: 1324.92ms, fracRes: 0.0085, norm(attn): 0.0688, norm(output): 0.1621, norm(x): 0.1632, norm(y): 1.0035, norm:1.3083, tok/sec: 98928.17, flops:103.83, batch-reuse:1
@ 624 train 6.3421 , allloss: 6.3454, dt: 1333.20ms, fracRes: 0.0086, norm(attn): 0.0674, norm(output): 0.1650, norm(x): 0.1635, norm(y): 1.0035, norm:1.4363, tok/sec: 98313.50, flops:103.18, batch-reuse:1
@ 625 train 6.3816 , allloss: 6.3853, dt: 1313.07ms, fracRes: 0.0085, norm(attn): 0.0684, norm(output): 0.1621, norm(x): 0.1633, norm(y): 1.0035, norm:1.3674, tok/sec: 99820.74, flops:104.76, batch-reuse:1
@ 626 train 6.3039 , allloss: 6.3072, dt: 1293.85ms, fracRes: 0.0087, norm(attn): 0.0654, norm(output): 0.1621, norm(x): 0.1633, norm(y): 1.0035, norm:1.2815, tok/sec: 101304.09, flops:106.32, batch-reuse:1
@ 627 train 6.2738 , allloss: 6.2772, dt: 1292.04ms, fracRes: 0.0091, norm(attn): 0.0703, norm(output): 0.1660, norm(x): 0.1639, norm(y): 1.0035, norm:1.5951, tok/sec: 101445.56, flops:106.47, batch-reuse:1
@ 628 train 6.3414 , allloss: 6.3448, dt: 1286.18ms, fracRes: 0.0093, norm(attn): 0.0693, norm(output): 0.1660, norm(x): 0.1642, norm(y): 1.0035, norm:1.3820, tok/sec: 101907.75, flops:106.95, batch-reuse:1
@ 629 train 6.3618 , allloss: 6.3651, dt: 1318.17ms, fracRes: 0.0096, norm(attn): 0.0703, norm(output): 0.1660, norm(x): 0.1637, norm(y): 1.0035, norm:1.3723, tok/sec: 99434.71, flops:104.36, batch-reuse:1
@ 630 train 6.4555 , allloss: 6.4590, dt: 1290.72ms, fracRes: 0.0097, norm(attn): 0.0723, norm(output): 0.1641, norm(x): 0.1636, norm(y): 1.0035, norm:2.2855, tok/sec: 101549.43, flops:106.58, batch-reuse:1
@ 631 train 6.3780 , allloss: 6.3813, dt: 1292.92ms, fracRes: 0.0100, norm(attn): 0.0669, norm(output): 0.1621, norm(x): 0.1627, norm(y): 1.0035, norm:1.5510, tok/sec: 101376.81, flops:106.40, batch-reuse:1
@ 632 train 6.5243 , allloss: 6.5272, dt: 1297.41ms, fracRes: 0.0093, norm(attn): 0.0708, norm(output): 0.1660, norm(x): 0.1638, norm(y): 1.0035, norm:1.9055, tok/sec: 101025.63, flops:106.03, batch-reuse:1
@ 633 train 6.4332 , allloss: 6.4370, dt: 1318.46ms, fracRes: 0.0095, norm(attn): 0.0723, norm(output): 0.1660, norm(x): 0.1640, norm(y): 1.0035, norm:1.9180, tok/sec: 99412.83, flops:104.34, batch-reuse:1
@ 634 train 6.2485 , allloss: 6.2525, dt: 1342.28ms, fracRes: 0.0093, norm(attn): 0.0708, norm(output): 0.1650, norm(x): 0.1641, norm(y): 1.0035, norm:1.2394, tok/sec: 97649.06, flops:102.48, batch-reuse:1
@ 635 train 6.3679 , allloss: 6.3751, dt: 1344.55ms, fracRes: 0.0098, norm(attn): 0.0708, norm(output): 0.1650, norm(x): 0.1645, norm(y): 1.0035, norm:1.7234, tok/sec: 97483.63, flops:102.31, batch-reuse:1
@ 636 train 6.3965 , allloss: 6.4033, dt: 1339.45ms, fracRes: 0.0101, norm(attn): 0.0713, norm(output): 0.1650, norm(x): 0.1637, norm(y): 1.0035, norm:1.2392, tok/sec: 97854.77, flops:102.70, batch-reuse:1
@ 637 train 6.2323 , allloss: 6.2351, dt: 1340.04ms, fracRes: 0.0100, norm(attn): 0.0674, norm(output): 0.1650, norm(x): 0.1638, norm(y): 1.0035, norm:0.9211, tok/sec: 97811.85, flops:102.66, batch-reuse:1
@ 638 train 6.2282 , allloss: 6.2310, dt: 1332.45ms, fracRes: 0.0104, norm(attn): 0.0669, norm(output): 0.1660, norm(x): 0.1647, norm(y): 1.0035, norm:1.2506, tok/sec: 98369.07, flops:103.24, batch-reuse:1
@ 639 train 6.3134 , allloss: 6.3170, dt: 1313.86ms, fracRes: 0.0099, norm(attn): 0.0708, norm(output): 0.1660, norm(x): 0.1651, norm(y): 1.0035, norm:1.3206, tok/sec: 99760.83, flops:104.70, batch-reuse:1
@ 640 train 6.2452 , allloss: 6.2482, dt: 1327.71ms, fracRes: 0.0096, norm(attn): 0.0698, norm(output): 0.1660, norm(x): 0.1648, norm(y): 1.0035, norm:1.6204, tok/sec: 98720.02, flops:103.61, batch-reuse:1
@ 641 train 6.2709 , allloss: 6.2742, dt: 1291.79ms, fracRes: 0.0095, norm(attn): 0.0732, norm(output): 0.1670, norm(x): 0.1652, norm(y): 1.0035, norm:1.3850, tok/sec: 101465.13, flops:106.49, batch-reuse:1
@ 642 train 6.2016 , allloss: 6.2042, dt: 1339.68ms, fracRes: 0.0100, norm(attn): 0.0698, norm(output): 0.1660, norm(x): 0.1649, norm(y): 1.0036, norm:1.6988, tok/sec: 97838.03, flops:102.68, batch-reuse:1
@ 643 train 6.2304 , allloss: 6.2333, dt: 1317.90ms, fracRes: 0.0100, norm(attn): 0.0718, norm(output): 0.1660, norm(x): 0.1652, norm(y): 1.0036, norm:1.3294, tok/sec: 99455.38, flops:104.38, batch-reuse:1
@ 644 train 6.4232 , allloss: 6.4265, dt: 1311.03ms, fracRes: 0.0101, norm(attn): 0.0728, norm(output): 0.1660, norm(x): 0.1650, norm(y): 1.0036, norm:1.6005, tok/sec: 99976.02, flops:104.93, batch-reuse:1
@ 645 train 6.3513 , allloss: 6.3538, dt: 1295.44ms, fracRes: 0.0097, norm(attn): 0.0698, norm(output): 0.1660, norm(x): 0.1648, norm(y): 1.0036, norm:1.2996, tok/sec: 101179.30, flops:106.19, batch-reuse:1
@ 646 train 6.2607 , allloss: 6.2632, dt: 1304.04ms, fracRes: 0.0101, norm(attn): 0.0718, norm(output): 0.1660, norm(x): 0.1646, norm(y): 1.0036, norm:1.9558, tok/sec: 100512.09, flops:105.49, batch-reuse:1
@ 647 train 6.3030 , allloss: 6.3057, dt: 1293.95ms, fracRes: 0.0100, norm(attn): 0.0723, norm(output): 0.1660, norm(x): 0.1652, norm(y): 1.0036, norm:1.1430, tok/sec: 101296.14, flops:106.31, batch-reuse:1
@ 648 train 6.1928 , allloss: 6.1959, dt: 1302.02ms, fracRes: 0.0109, norm(attn): 0.0723, norm(output): 0.1680, norm(x): 0.1654, norm(y): 1.0036, norm:1.5745, tok/sec: 100668.39, flops:105.65, batch-reuse:1
@ 649 train 6.2990 , allloss: 6.3017, dt: 1300.99ms, fracRes: 0.0106, norm(attn): 0.0732, norm(output): 0.1670, norm(x): 0.1654, norm(y): 1.0036, norm:1.7650, tok/sec: 100747.55, flops:105.74, batch-reuse:1
@ 650 train 6.1841 , allloss: 6.1870, dt: 1289.15ms, fracRes: 0.0115, norm(attn): 0.0737, norm(output): 0.1660, norm(x): 0.1649, norm(y): 1.0036, norm:1.6451, tok/sec: 101673.10, flops:106.71, batch-reuse:1
@ 651 train 6.2604 , allloss: 6.2632, dt: 1319.34ms, fracRes: 0.0112, norm(attn): 0.0737, norm(output): 0.1670, norm(x): 0.1651, norm(y): 1.0036, norm:1.0980, tok/sec: 99346.97, flops:104.27, batch-reuse:1
@ 652 train 6.1499 , allloss: 6.1527, dt: 1329.73ms, fracRes: 0.0110, norm(attn): 0.0737, norm(output): 0.1660, norm(x): 0.1654, norm(y): 1.0036, norm:1.1674, tok/sec: 98570.14, flops:103.45, batch-reuse:1
@ 653 train 6.1675 , allloss: 6.1724, dt: 1351.94ms, fracRes: 0.0108, norm(attn): 0.0767, norm(output): 0.1670, norm(x): 0.1653, norm(y): 1.0036, norm:1.9642, tok/sec: 96951.26, flops:101.75, batch-reuse:1
@ 654 train 6.2218 , allloss: 6.2259, dt: 1321.92ms, fracRes: 0.0122, norm(attn): 0.0747, norm(output): 0.1670, norm(x): 0.1652, norm(y): 1.0036, norm:2.0026, tok/sec: 99152.63, flops:104.06, batch-reuse:1
@ 655 train 6.2393 , allloss: 6.2441, dt: 1312.20ms, fracRes: 0.0120, norm(attn): 0.0762, norm(output): 0.1670, norm(x): 0.1657, norm(y): 1.0036, norm:1.2341, tok/sec: 99886.88, flops:104.83, batch-reuse:1
@ 656 train 6.1586 , allloss: 6.1617, dt: 1305.78ms, fracRes: 0.0129, norm(attn): 0.0762, norm(output): 0.1670, norm(x): 0.1658, norm(y): 1.0036, norm:1.4481, tok/sec: 100378.38, flops:105.35, batch-reuse:1
@ 657 train 6.1838 , allloss: 6.1862, dt: 1301.04ms, fracRes: 0.0127, norm(attn): 0.0757, norm(output): 0.1670, norm(x): 0.1655, norm(y): 1.0036, norm:1.2619, tok/sec: 100744.28, flops:105.73, batch-reuse:1
@ 658 train 6.2799 , allloss: 6.2825, dt: 1319.29ms, fracRes: 0.0123, norm(attn): 0.0732, norm(output): 0.1680, norm(x): 0.1661, norm(y): 1.0036, norm:1.7833, tok/sec: 99350.27, flops:104.27, batch-reuse:1
@ 659 train 6.2548 , allloss: 6.2570, dt: 1303.50ms, fracRes: 0.0099, norm(attn): 0.0786, norm(output): 0.1670, norm(x): 0.1665, norm(y): 1.0036, norm:1.5707, tok/sec: 100554.14, flops:105.53, batch-reuse:1
@ 660 train 6.2645 , allloss: 6.2674, dt: 1304.21ms, fracRes: 0.0098, norm(attn): 0.0747, norm(output): 0.1680, norm(x): 0.1666, norm(y): 1.0036, norm:1.3139, tok/sec: 100499.52, flops:105.48, batch-reuse:1
@ 661 train 6.2198 , allloss: 6.2231, dt: 1276.97ms, fracRes: 0.0098, norm(attn): 0.0732, norm(output): 0.1670, norm(x): 0.1665, norm(y): 1.0036, norm:1.2764, tok/sec: 102643.06, flops:107.73, batch-reuse:1
@ 662 train 6.2756 , allloss: 6.2807, dt: 1287.28ms, fracRes: 0.0101, norm(attn): 0.0747, norm(output): 0.1670, norm(x): 0.1665, norm(y): 1.0037, norm:1.2496, tok/sec: 101820.74, flops:106.86, batch-reuse:1
@ 663 train 6.2456 , allloss: 6.2510, dt: 1318.26ms, fracRes: 0.0106, norm(attn): 0.0732, norm(output): 0.1689, norm(x): 0.1667, norm(y): 1.0037, norm:1.8442, tok/sec: 99427.79, flops:104.35, batch-reuse:1
@ 664 train 6.1885 , allloss: 6.1942, dt: 1309.73ms, fracRes: 0.0097, norm(attn): 0.0713, norm(output): 0.1670, norm(x): 0.1663, norm(y): 1.0036, norm:1.3680, tok/sec: 100075.49, flops:105.03, batch-reuse:1
@ 665 train 6.2210 , allloss: 6.2242, dt: 1296.13ms, fracRes: 0.0098, norm(attn): 0.0747, norm(output): 0.1670, norm(x): 0.1664, norm(y): 1.0036, norm:1.4978, tok/sec: 101126.04, flops:106.13, batch-reuse:1
@ 666 train 6.0478 , allloss: 6.0508, dt: 1282.66ms, fracRes: 0.0096, norm(attn): 0.0752, norm(output): 0.1689, norm(x): 0.1677, norm(y): 1.0036, norm:2.3907, tok/sec: 102187.47, flops:107.25, batch-reuse:1
@ 667 train 6.0219 , allloss: 6.0249, dt: 1286.60ms, fracRes: 0.0098, norm(attn): 0.0771, norm(output): 0.1689, norm(x): 0.1676, norm(y): 1.0037, norm:2.2501, tok/sec: 101874.83, flops:106.92, batch-reuse:1
@ 668 train 6.2550 , allloss: 6.2576, dt: 1290.90ms, fracRes: 0.0108, norm(attn): 0.0747, norm(output): 0.1680, norm(x): 0.1666, norm(y): 1.0037, norm:2.0365, tok/sec: 101535.23, flops:106.56, batch-reuse:1
@ 669 train 6.1911 , allloss: 6.1942, dt: 1322.52ms, fracRes: 0.0099, norm(attn): 0.0718, norm(output): 0.1689, norm(x): 0.1670, norm(y): 1.0037, norm:1.3596, tok/sec: 99107.44, flops:104.02, batch-reuse:1
@ 670 train 6.2838 , allloss: 6.2871, dt: 1332.73ms, fracRes: 0.0097, norm(attn): 0.0781, norm(output): 0.1689, norm(x): 0.1671, norm(y): 1.0036, norm:1.2634, tok/sec: 98348.41, flops:103.22, batch-reuse:1
@ 671 train 6.1661 , allloss: 6.1690, dt: 1310.45ms, fracRes: 0.0103, norm(attn): 0.0757, norm(output): 0.1699, norm(x): 0.1676, norm(y): 1.0037, norm:1.4550, tok/sec: 100020.85, flops:104.97, batch-reuse:1
@ 672 train 6.1993 , allloss: 6.2013, dt: 1314.28ms, fracRes: 0.0106, norm(attn): 0.0776, norm(output): 0.1699, norm(x): 0.1681, norm(y): 1.0037, norm:1.3981, tok/sec: 99729.25, flops:104.67, batch-reuse:1
@ 673 train 6.2290 , allloss: 6.2312, dt: 1316.32ms, fracRes: 0.0108, norm(attn): 0.0742, norm(output): 0.1709, norm(x): 0.1679, norm(y): 1.0037, norm:1.6072, tok/sec: 99574.27, flops:104.51, batch-reuse:1
@ 674 train 6.2133 , allloss: 6.2156, dt: 1306.76ms, fracRes: 0.0116, norm(attn): 0.0757, norm(output): 0.1709, norm(x): 0.1679, norm(y): 1.0037, norm:1.2212, tok/sec: 100302.91, flops:105.27, batch-reuse:1
@ 675 train 6.1045 , allloss: 6.1065, dt: 1306.03ms, fracRes: 0.0127, norm(attn): 0.0771, norm(output): 0.1709, norm(x): 0.1674, norm(y): 1.0037, norm:1.6573, tok/sec: 100358.73, flops:105.33, batch-reuse:1
@ 676 train 6.1615 , allloss: 6.1638, dt: 1302.44ms, fracRes: 0.0125, norm(attn): 0.0781, norm(output): 0.1709, norm(x): 0.1679, norm(y): 1.0037, norm:1.0313, tok/sec: 100635.53, flops:105.62, batch-reuse:1
@ 677 train 6.3039 , allloss: 6.3059, dt: 1344.94ms, fracRes: 0.0125, norm(attn): 0.0840, norm(output): 0.1719, norm(x): 0.1684, norm(y): 1.0037, norm:1.6739, tok/sec: 97455.58, flops:102.28, batch-reuse:1
@ 678 train 6.1272 , allloss: 6.1292, dt: 1340.96ms, fracRes: 0.0124, norm(attn): 0.0791, norm(output): 0.1709, norm(x): 0.1679, norm(y): 1.0037, norm:0.9899, tok/sec: 97744.58, flops:102.58, batch-reuse:1
@ 679 train 6.1942 , allloss: 6.1967, dt: 1316.32ms, fracRes: 0.0120, norm(attn): 0.0786, norm(output): 0.1709, norm(x): 0.1682, norm(y): 1.0037, norm:1.6768, tok/sec: 99574.59, flops:104.51, batch-reuse:1
@ 680 train 6.1670 , allloss: 6.1700, dt: 1323.47ms, fracRes: 0.0130, norm(attn): 0.0801, norm(output): 0.1709, norm(x): 0.1686, norm(y): 1.0037, norm:1.7101, tok/sec: 99036.28, flops:103.94, batch-reuse:1
@ 681 train 6.1877 , allloss: 6.1898, dt: 1307.84ms, fracRes: 0.0123, norm(attn): 0.0835, norm(output): 0.1709, norm(x): 0.1692, norm(y): 1.0037, norm:1.3564, tok/sec: 100220.09, flops:105.18, batch-reuse:1
@ 682 train 6.2040 , allloss: 6.2060, dt: 1291.57ms, fracRes: 0.0138, norm(attn): 0.0801, norm(output): 0.1709, norm(x): 0.1686, norm(y): 1.0038, norm:1.1619, tok/sec: 101482.71, flops:106.51, batch-reuse:1
@ 683 train 6.1691 , allloss: 6.1714, dt: 1309.32ms, fracRes: 0.0150, norm(attn): 0.0811, norm(output): 0.1709, norm(x): 0.1684, norm(y): 1.0038, norm:1.9726, tok/sec: 100107.24, flops:105.06, batch-reuse:1
@ 684 train 6.1398 , allloss: 6.1425, dt: 1319.95ms, fracRes: 0.0131, norm(attn): 0.0806, norm(output): 0.1709, norm(x): 0.1685, norm(y): 1.0037, norm:1.6426, tok/sec: 99301.06, flops:104.22, batch-reuse:1
@ 685 train 6.2228 , allloss: 6.2250, dt: 1318.20ms, fracRes: 0.0115, norm(attn): 0.0840, norm(output): 0.1709, norm(x): 0.1689, norm(y): 1.0037, norm:1.4927, tok/sec: 99432.62, flops:104.36, batch-reuse:1
@ 686 train 6.2926 , allloss: 6.2953, dt: 1295.95ms, fracRes: 0.0136, norm(attn): 0.0791, norm(output): 0.1709, norm(x): 0.1688, norm(y): 1.0037, norm:1.1963, tok/sec: 101140.01, flops:106.15, batch-reuse:1
@ 687 train 6.2078 , allloss: 6.2103, dt: 1302.42ms, fracRes: 0.0130, norm(attn): 0.0811, norm(output): 0.1719, norm(x): 0.1694, norm(y): 1.0038, norm:1.8002, tok/sec: 100637.19, flops:105.62, batch-reuse:1
@ 688 train 6.2276 , allloss: 6.2299, dt: 1315.50ms, fracRes: 0.0140, norm(attn): 0.0815, norm(output): 0.1719, norm(x): 0.1693, norm(y): 1.0038, norm:1.6566, tok/sec: 99636.53, flops:104.57, batch-reuse:1
@ 689 train 6.1976 , allloss: 6.1994, dt: 1277.59ms, fracRes: 0.0136, norm(attn): 0.0781, norm(output): 0.1719, norm(x): 0.1691, norm(y): 1.0038, norm:1.4791, tok/sec: 102593.24, flops:107.67, batch-reuse:1
@ 690 train 6.1654 , allloss: 6.1672, dt: 1307.68ms, fracRes: 0.0118, norm(attn): 0.0820, norm(output): 0.1709, norm(x): 0.1691, norm(y): 1.0038, norm:1.4737, tok/sec: 100232.30, flops:105.20, batch-reuse:1
@ 691 train 6.1698 , allloss: 6.1716, dt: 1341.84ms, fracRes: 0.0125, norm(attn): 0.0811, norm(output): 0.1719, norm(x): 0.1697, norm(y): 1.0038, norm:1.2876, tok/sec: 97680.95, flops:102.52, batch-reuse:1
@ 692 train 6.1406 , allloss: 6.1425, dt: 1341.11ms, fracRes: 0.0126, norm(attn): 0.0786, norm(output): 0.1719, norm(x): 0.1695, norm(y): 1.0038, norm:1.2705, tok/sec: 97733.90, flops:102.57, batch-reuse:1
@ 693 train 6.1913 , allloss: 6.1931, dt: 1299.67ms, fracRes: 0.0132, norm(attn): 0.0806, norm(output): 0.1719, norm(x): 0.1696, norm(y): 1.0038, norm:1.3614, tok/sec: 100850.25, flops:105.84, batch-reuse:1
@ 694 train 6.0958 , allloss: 6.0980, dt: 1280.71ms, fracRes: 0.0141, norm(attn): 0.0830, norm(output): 0.1719, norm(x): 0.1696, norm(y): 1.0038, norm:1.4991, tok/sec: 102343.56, flops:107.41, batch-reuse:1
@ 695 train 6.1732 , allloss: 6.1753, dt: 1283.85ms, fracRes: 0.0186, norm(attn): 0.0811, norm(output): 0.1719, norm(x): 0.1690, norm(y): 1.0038, norm:1.5827, tok/sec: 102093.14, flops:107.15, batch-reuse:1
@ 696 train 6.0422 , allloss: 6.0438, dt: 1287.39ms, fracRes: 0.0186, norm(attn): 0.0811, norm(output): 0.1719, norm(x): 0.1690, norm(y): 1.0038, norm:1.2701, tok/sec: 101812.01, flops:106.85, batch-reuse:1
@ 697 train 6.0738 , allloss: 6.0754, dt: 1282.30ms, fracRes: 0.0180, norm(attn): 0.0815, norm(output): 0.1719, norm(x): 0.1697, norm(y): 1.0038, norm:1.5295, tok/sec: 102216.62, flops:107.28, batch-reuse:1
@ 698 train 6.1828 , allloss: 6.1847, dt: 1273.73ms, fracRes: 0.0164, norm(attn): 0.0835, norm(output): 0.1719, norm(x): 0.1697, norm(y): 1.0038, norm:1.4658, tok/sec: 102903.76, flops:108.00, batch-reuse:1
@ 699 train 6.1616 , allloss: 6.1635, dt: 1294.27ms, fracRes: 0.0148, norm(attn): 0.0820, norm(output): 0.1719, norm(x): 0.1705, norm(y): 1.0038, norm:1.2971, tok/sec: 101271.04, flops:106.29, batch-reuse:1
@ 700 train 6.1407 , allloss: 6.1428, dt: 1280.40ms, fracRes: 0.0156, norm(attn): 0.0781, norm(output): 0.1719, norm(x): 0.1696, norm(y): 1.0039, norm:1.7317, tok/sec: 102368.41, flops:107.44, batch-reuse:1
@ 701 train 6.2309 , allloss: 6.2348, dt: 1295.54ms, fracRes: 0.0145, norm(attn): 0.0830, norm(output): 0.1719, norm(x): 0.1699, norm(y): 1.0039, norm:2.1554, tok/sec: 101171.95, flops:106.18, batch-reuse:1
@ 702 train 6.2195 , allloss: 6.2213, dt: 1281.75ms, fracRes: 0.0129, norm(attn): 0.0894, norm(output): 0.1719, norm(x): 0.1705, norm(y): 1.0038, norm:1.7044, tok/sec: 102260.16, flops:107.32, batch-reuse:1
@ 703 train 6.1656 , allloss: 6.1671, dt: 1283.92ms, fracRes: 0.0147, norm(attn): 0.0835, norm(output): 0.1719, norm(x): 0.1706, norm(y): 1.0039, norm:1.6285, tok/sec: 102087.43, flops:107.14, batch-reuse:1
@ 704 train 6.1024 , allloss: 6.1044, dt: 1291.20ms, fracRes: 0.0173, norm(attn): 0.0815, norm(output): 0.1729, norm(x): 0.1702, norm(y): 1.0039, norm:2.2956, tok/sec: 101511.78, flops:106.54, batch-reuse:1
@ 705 train 6.1412 , allloss: 6.1433, dt: 1283.44ms, fracRes: 0.0186, norm(attn): 0.0825, norm(output): 0.1719, norm(x): 0.1699, norm(y): 1.0039, norm:1.2443, tok/sec: 102125.43, flops:107.18, batch-reuse:1
@ 706 train 6.1240 , allloss: 6.1256, dt: 1305.83ms, fracRes: 0.0137, norm(attn): 0.0815, norm(output): 0.1729, norm(x): 0.1715, norm(y): 1.0039, norm:1.5570, tok/sec: 100374.14, flops:105.34, batch-reuse:1
@ 707 train 6.1552 , allloss: 6.1571, dt: 1311.78ms, fracRes: 0.0118, norm(attn): 0.0884, norm(output): 0.1729, norm(x): 0.1717, norm(y): 1.0038, norm:1.8493, tok/sec: 99919.45, flops:104.87, batch-reuse:1
@ 708 train 6.1576 , allloss: 6.1596, dt: 1291.09ms, fracRes: 0.0129, norm(attn): 0.0845, norm(output): 0.1729, norm(x): 0.1720, norm(y): 1.0039, norm:1.8673, tok/sec: 101520.53, flops:106.55, batch-reuse:1
@ 709 train 6.1350 , allloss: 6.1381, dt: 1287.40ms, fracRes: 0.0110, norm(attn): 0.0859, norm(output): 0.1729, norm(x): 0.1727, norm(y): 1.0038, norm:1.4140, tok/sec: 101811.21, flops:106.85, batch-reuse:1
@ 710 train 6.2111 , allloss: 6.2142, dt: 1296.36ms, fracRes: 0.0121, norm(attn): 0.0815, norm(output): 0.1729, norm(x): 0.1730, norm(y): 1.0038, norm:1.4633, tok/sec: 101107.99, flops:106.11, batch-reuse:1
@ 711 train 6.2053 , allloss: 6.2096, dt: 1297.61ms, fracRes: 0.0130, norm(attn): 0.0820, norm(output): 0.1729, norm(x): 0.1720, norm(y): 1.0039, norm:1.7303, tok/sec: 101010.02, flops:106.01, batch-reuse:1
@ 712 train 6.1043 , allloss: 6.1069, dt: 1314.15ms, fracRes: 0.0133, norm(attn): 0.0825, norm(output): 0.1729, norm(x): 0.1723, norm(y): 1.0039, norm:1.4712, tok/sec: 99739.15, flops:104.68, batch-reuse:1
@ 713 train 6.1635 , allloss: 6.1682, dt: 1333.51ms, fracRes: 0.0146, norm(attn): 0.0854, norm(output): 0.1729, norm(x): 0.1726, norm(y): 1.0039, norm:1.4543, tok/sec: 98290.68, flops:103.16, batch-reuse:1
@ 714 train 6.0566 , allloss: 6.0595, dt: 1309.17ms, fracRes: 0.0127, norm(attn): 0.0864, norm(output): 0.1729, norm(x): 0.1731, norm(y): 1.0038, norm:1.7213, tok/sec: 100118.58, flops:105.08, batch-reuse:1
@ 715 train 6.0897 , allloss: 6.0941, dt: 1277.78ms, fracRes: 0.0127, norm(attn): 0.0835, norm(output): 0.1729, norm(x): 0.1731, norm(y): 1.0039, norm:1.2263, tok/sec: 102577.69, flops:107.66, batch-reuse:1
@ 716 train 6.1172 , allloss: 6.1190, dt: 1276.82ms, fracRes: 0.0120, norm(attn): 0.0830, norm(output): 0.1738, norm(x): 0.1736, norm(y): 1.0038, norm:1.1692, tok/sec: 102655.11, flops:107.74, batch-reuse:1
@ 717 train 5.9770 , allloss: 5.9786, dt: 1286.88ms, fracRes: 0.0122, norm(attn): 0.0854, norm(output): 0.1748, norm(x): 0.1737, norm(y): 1.0039, norm:1.4832, tok/sec: 101852.86, flops:106.90, batch-reuse:1
@ 718 train 6.1497 , allloss: 6.1517, dt: 1291.25ms, fracRes: 0.0118, norm(attn): 0.0859, norm(output): 0.1729, norm(x): 0.1732, norm(y): 1.0038, norm:1.5065, tok/sec: 101507.62, flops:106.53, batch-reuse:1
@ 719 train 6.0915 , allloss: 6.0935, dt: 1310.95ms, fracRes: 0.0121, norm(attn): 0.0850, norm(output): 0.1738, norm(x): 0.1734, norm(y): 1.0038, norm:1.5710, tok/sec: 99982.73, flops:104.93, batch-reuse:1
@ 720 train 6.0707 , allloss: 6.0721, dt: 1339.90ms, fracRes: 0.0116, norm(attn): 0.0835, norm(output): 0.1738, norm(x): 0.1739, norm(y): 1.0038, norm:1.5072, tok/sec: 97822.12, flops:102.67, batch-reuse:1
@ 721 train 6.0195 , allloss: 6.0209, dt: 1323.71ms, fracRes: 0.0113, norm(attn): 0.0884, norm(output): 0.1748, norm(x): 0.1736, norm(y): 1.0038, norm:1.4676, tok/sec: 99018.38, flops:103.92, batch-reuse:1
@ 722 train 6.0919 , allloss: 6.0937, dt: 1307.82ms, fracRes: 0.0116, norm(attn): 0.0874, norm(output): 0.1729, norm(x): 0.1730, norm(y): 1.0038, norm:1.2347, tok/sec: 100221.63, flops:105.18, batch-reuse:1
@ 723 train 6.1352 , allloss: 6.1374, dt: 1270.10ms, fracRes: 0.0137, norm(attn): 0.0854, norm(output): 0.1738, norm(x): 0.1736, norm(y): 1.0039, norm:1.1683, tok/sec: 103197.80, flops:108.31, batch-reuse:1
@ 724 train 6.1112 , allloss: 6.1128, dt: 1298.72ms, fracRes: 0.0147, norm(attn): 0.0850, norm(output): 0.1738, norm(x): 0.1737, norm(y): 1.0039, norm:1.1551, tok/sec: 100924.37, flops:105.92, batch-reuse:1
@ 725 train 6.1101 , allloss: 6.1120, dt: 1318.05ms, fracRes: 0.0148, norm(attn): 0.0889, norm(output): 0.1729, norm(x): 0.1730, norm(y): 1.0040, norm:2.2196, tok/sec: 99443.90, flops:104.37, batch-reuse:1
@ 726 train 6.1237 , allloss: 6.1264, dt: 1301.25ms, fracRes: 0.0128, norm(attn): 0.0918, norm(output): 0.1738, norm(x): 0.1742, norm(y): 1.0039, norm:1.7243, tok/sec: 100727.54, flops:105.72, batch-reuse:1
@ 727 train 6.1093 , allloss: 6.1116, dt: 1280.52ms, fracRes: 0.0129, norm(attn): 0.0894, norm(output): 0.1738, norm(x): 0.1740, norm(y): 1.0039, norm:1.2417, tok/sec: 102358.27, flops:107.43, batch-reuse:1
@ 728 train 6.1392 , allloss: 6.1415, dt: 1296.04ms, fracRes: 0.0140, norm(attn): 0.0908, norm(output): 0.1729, norm(x): 0.1735, norm(y): 1.0040, norm:2.0754, tok/sec: 101132.64, flops:106.14, batch-reuse:1
@ 729 train 6.0779 , allloss: 6.0827, dt: 1287.91ms, fracRes: 0.0154, norm(attn): 0.0938, norm(output): 0.1729, norm(x): 0.1734, norm(y): 1.0040, norm:1.7179, tok/sec: 101770.90, flops:106.81, batch-reuse:1
@ 730 train 6.0966 , allloss: 6.1003, dt: 1300.69ms, fracRes: 0.0127, norm(attn): 0.0908, norm(output): 0.1748, norm(x): 0.1742, norm(y): 1.0039, norm:1.7081, tok/sec: 100770.76, flops:105.76, batch-reuse:1
@ 731 train 6.1285 , allloss: 6.1367, dt: 1314.77ms, fracRes: 0.0126, norm(attn): 0.0884, norm(output): 0.1748, norm(x): 0.1742, norm(y): 1.0039, norm:1.4571, tok/sec: 99692.29, flops:104.63, batch-reuse:1
@ 732 train 6.0553 , allloss: 6.0591, dt: 1297.77ms, fracRes: 0.0112, norm(attn): 0.0933, norm(output): 0.1768, norm(x): 0.1751, norm(y): 1.0039, norm:1.4896, tok/sec: 100997.49, flops:106.00, batch-reuse:1
@ 733 train 6.1103 , allloss: 6.1124, dt: 1318.45ms, fracRes: 0.0126, norm(attn): 0.0889, norm(output): 0.1758, norm(x): 0.1753, norm(y): 1.0039, norm:1.6148, tok/sec: 99413.73, flops:104.34, batch-reuse:1
@ 734 train 6.1119 , allloss: 6.1142, dt: 1326.80ms, fracRes: 0.0137, norm(attn): 0.0879, norm(output): 0.1768, norm(x): 0.1747, norm(y): 1.0039, norm:1.2425, tok/sec: 98788.27, flops:103.68, batch-reuse:1
@ 735 train 6.1098 , allloss: 6.1120, dt: 1318.24ms, fracRes: 0.0155, norm(attn): 0.0869, norm(output): 0.1758, norm(x): 0.1748, norm(y): 1.0040, norm:1.4787, tok/sec: 99429.58, flops:104.35, batch-reuse:1
@ 736 train 6.1728 , allloss: 6.1746, dt: 1318.84ms, fracRes: 0.0142, norm(attn): 0.0879, norm(output): 0.1768, norm(x): 0.1748, norm(y): 1.0039, norm:1.5999, tok/sec: 99384.31, flops:104.31, batch-reuse:1
@ 737 train 6.0823 , allloss: 6.0843, dt: 1325.51ms, fracRes: 0.0168, norm(attn): 0.0894, norm(output): 0.1758, norm(x): 0.1743, norm(y): 1.0040, norm:1.2653, tok/sec: 98884.38, flops:103.78, batch-reuse:1
@ 738 train 6.1375 , allloss: 6.1391, dt: 1323.55ms, fracRes: 0.0157, norm(attn): 0.0894, norm(output): 0.1758, norm(x): 0.1753, norm(y): 1.0040, norm:1.6404, tok/sec: 99030.67, flops:103.93, batch-reuse:1
@ 739 train 6.1164 , allloss: 6.1181, dt: 1320.85ms, fracRes: 0.0166, norm(attn): 0.0884, norm(output): 0.1768, norm(x): 0.1751, norm(y): 1.0040, norm:1.3107, tok/sec: 99233.06, flops:104.15, batch-reuse:1
@ 740 train 6.0800 , allloss: 6.0816, dt: 1335.62ms, fracRes: 0.0154, norm(attn): 0.0918, norm(output): 0.1768, norm(x): 0.1751, norm(y): 1.0040, norm:1.4625, tok/sec: 98135.93, flops:103.00, batch-reuse:1
@ 741 train 6.1852 , allloss: 6.1871, dt: 1326.66ms, fracRes: 0.0167, norm(attn): 0.0913, norm(output): 0.1768, norm(x): 0.1753, norm(y): 1.0040, norm:1.4918, tok/sec: 98798.49, flops:103.69, batch-reuse:1
@ 742 train 6.2422 , allloss: 6.2448, dt: 1310.94ms, fracRes: 0.0160, norm(attn): 0.0933, norm(output): 0.1758, norm(x): 0.1747, norm(y): 1.0040, norm:1.3276, tok/sec: 99983.47, flops:104.93, batch-reuse:1
@ 743 train 6.1922 , allloss: 6.1945, dt: 1333.62ms, fracRes: 0.0154, norm(attn): 0.0977, norm(output): 0.1758, norm(x): 0.1752, norm(y): 1.0040, norm:1.3555, tok/sec: 98283.07, flops:103.15, batch-reuse:1
@ 744 train 6.1989 , allloss: 6.2002, dt: 1343.56ms, fracRes: 0.0149, norm(attn): 0.0938, norm(output): 0.1768, norm(x): 0.1758, norm(y): 1.0040, norm:1.7311, tok/sec: 97555.89, flops:102.39, batch-reuse:1
@ 745 train 6.1771 , allloss: 6.1783, dt: 1325.48ms, fracRes: 0.0154, norm(attn): 0.0923, norm(output): 0.1768, norm(x): 0.1759, norm(y): 1.0040, norm:1.4081, tok/sec: 98886.57, flops:103.78, batch-reuse:1
@ 746 train 6.2257 , allloss: 6.2273, dt: 1313.88ms, fracRes: 0.0174, norm(attn): 0.0918, norm(output): 0.1777, norm(x): 0.1762, norm(y): 1.0040, norm:1.9737, tok/sec: 99759.69, flops:104.70, batch-reuse:1
@ 747 train 6.2003 , allloss: 6.2017, dt: 1338.53ms, fracRes: 0.0168, norm(attn): 0.0933, norm(output): 0.1768, norm(x): 0.1761, norm(y): 1.0040, norm:1.5742, tok/sec: 97922.12, flops:102.77, batch-reuse:1
@ 748 train 6.2196 , allloss: 6.2210, dt: 1302.62ms, fracRes: 0.0167, norm(attn): 0.0923, norm(output): 0.1768, norm(x): 0.1761, norm(y): 1.0040, norm:1.2023, tok/sec: 100621.88, flops:105.60, batch-reuse:1
@ 749 train 6.3129 , allloss: 6.3145, dt: 1287.81ms, fracRes: 0.0174, norm(attn): 0.0947, norm(output): 0.1768, norm(x): 0.1755, norm(y): 1.0040, norm:1.5992, tok/sec: 101779.21, flops:106.82, batch-reuse:1
@ 750 train 6.2714 , allloss: 6.2735, dt: 1301.65ms, fracRes: 0.0134, norm(attn): 0.0938, norm(output): 0.1768, norm(x): 0.1768, norm(y): 1.0040, norm:1.2623, tok/sec: 100697.04, flops:105.68, batch-reuse:1
@ 751 train 6.1906 , allloss: 6.1920, dt: 1304.74ms, fracRes: 0.0139, norm(attn): 0.0938, norm(output): 0.1777, norm(x): 0.1775, norm(y): 1.0040, norm:1.5878, tok/sec: 100458.46, flops:105.43, batch-reuse:1
@ 752 train 6.1857 , allloss: 6.1882, dt: 1298.80ms, fracRes: 0.0144, norm(attn): 0.0938, norm(output): 0.1787, norm(x): 0.1769, norm(y): 1.0041, norm:1.8217, tok/sec: 100917.81, flops:105.92, batch-reuse:1
@ 753 train 6.2017 , allloss: 6.2035, dt: 1279.99ms, fracRes: 0.0142, norm(attn): 0.0972, norm(output): 0.1768, norm(x): 0.1766, norm(y): 1.0040, norm:1.5551, tok/sec: 102400.63, flops:107.47, batch-reuse:1
@ 754 train 6.1767 , allloss: 6.1780, dt: 1298.12ms, fracRes: 0.0163, norm(attn): 0.0962, norm(output): 0.1777, norm(x): 0.1768, norm(y): 1.0041, norm:1.7244, tok/sec: 100970.65, flops:105.97, batch-reuse:1
@ 755 train 6.2802 , allloss: 6.2811, dt: 1274.33ms, fracRes: 0.0154, norm(attn): 0.0996, norm(output): 0.1816, norm(x): 0.1775, norm(y): 1.0041, norm:1.4346, tok/sec: 102855.72, flops:107.95, batch-reuse:1
@ 756 train 6.1665 , allloss: 6.1678, dt: 1295.03ms, fracRes: 0.0143, norm(attn): 0.0977, norm(output): 0.1787, norm(x): 0.1779, norm(y): 1.0040, norm:1.4146, tok/sec: 101211.94, flops:106.22, batch-reuse:1
@ 757 train 6.2082 , allloss: 6.2094, dt: 1318.53ms, fracRes: 0.0151, norm(attn): 0.0933, norm(output): 0.1816, norm(x): 0.1777, norm(y): 1.0041, norm:1.9218, tok/sec: 99407.65, flops:104.33, batch-reuse:1
@ 758 train 6.1554 , allloss: 6.1567, dt: 1325.26ms, fracRes: 0.0139, norm(attn): 0.0903, norm(output): 0.1816, norm(x): 0.1786, norm(y): 1.0041, norm:1.8554, tok/sec: 98902.56, flops:103.80, batch-reuse:1
@ 759 train 6.2100 , allloss: 6.2113, dt: 1297.88ms, fracRes: 0.0128, norm(attn): 0.0942, norm(output): 0.1816, norm(x): 0.1786, norm(y): 1.0040, norm:1.1669, tok/sec: 100989.51, flops:105.99, batch-reuse:1
@ 760 train 6.2153 , allloss: 6.2166, dt: 1311.88ms, fracRes: 0.0136, norm(attn): 0.0952, norm(output): 0.1826, norm(x): 0.1787, norm(y): 1.0040, norm:1.3526, tok/sec: 99911.31, flops:104.86, batch-reuse:1
@ 761 train 6.2293 , allloss: 6.2302, dt: 1288.83ms, fracRes: 0.0152, norm(attn): 0.0938, norm(output): 0.1826, norm(x): 0.1794, norm(y): 1.0041, norm:1.8921, tok/sec: 101698.53, flops:106.73, batch-reuse:1
@ 762 train 6.2008 , allloss: 6.2021, dt: 1348.13ms, fracRes: 0.0156, norm(attn): 0.0942, norm(output): 0.1826, norm(x): 0.1790, norm(y): 1.0041, norm:1.5132, tok/sec: 97225.17, flops:102.04, batch-reuse:1
@ 763 train 6.2651 , allloss: 6.2695, dt: 1307.06ms, fracRes: 0.0188, norm(attn): 0.0967, norm(output): 0.1777, norm(x): 0.1771, norm(y): 1.0041, norm:2.2562, tok/sec: 100280.11, flops:105.25, batch-reuse:1
@ 764 train 6.2016 , allloss: 6.2054, dt: 1305.03ms, fracRes: 0.0188, norm(attn): 0.0991, norm(output): 0.1797, norm(x): 0.1775, norm(y): 1.0041, norm:1.2487, tok/sec: 100435.72, flops:105.41, batch-reuse:1
@ 765 train 6.2080 , allloss: 6.2099, dt: 1291.37ms, fracRes: 0.0174, norm(attn): 0.0986, norm(output): 0.1816, norm(x): 0.1785, norm(y): 1.0040, norm:1.5130, tok/sec: 101498.45, flops:106.52, batch-reuse:1
@ 766 train 6.1309 , allloss: 6.1330, dt: 1297.95ms, fracRes: 0.0203, norm(attn): 0.0942, norm(output): 0.1816, norm(x): 0.1784, norm(y): 1.0041, norm:2.0383, tok/sec: 100983.78, flops:105.98, batch-reuse:1
@ 767 train 6.2276 , allloss: 6.2298, dt: 1292.66ms, fracRes: 0.0199, norm(attn): 0.0938, norm(output): 0.1787, norm(x): 0.1779, norm(y): 1.0042, norm:1.7012, tok/sec: 101396.88, flops:106.42, batch-reuse:1
@ 768 train 6.3112 , allloss: 6.3152, dt: 1309.82ms, fracRes: 0.0179, norm(attn): 0.0952, norm(output): 0.1826, norm(x): 0.1794, norm(y): 1.0041, norm:1.5285, tok/sec: 100068.73, flops:105.02, batch-reuse:1
@ 769 train 6.1659 , allloss: 6.1670, dt: 1319.62ms, fracRes: 0.0187, norm(attn): 0.0942, norm(output): 0.1826, norm(x): 0.1784, norm(y): 1.0041, norm:1.3405, tok/sec: 99325.28, flops:104.24, batch-reuse:1
@ 770 train 6.1358 , allloss: 6.1379, dt: 1325.87ms, fracRes: 0.0166, norm(attn): 0.0962, norm(output): 0.1826, norm(x): 0.1799, norm(y): 1.0041, norm:1.2933, tok/sec: 98857.07, flops:103.75, batch-reuse:1
@ 771 train 6.1338 , allloss: 6.1360, dt: 1321.81ms, fracRes: 0.0163, norm(attn): 0.0977, norm(output): 0.1836, norm(x): 0.1801, norm(y): 1.0041, norm:1.6398, tok/sec: 99161.25, flops:104.07, batch-reuse:1
@ 772 train 6.1809 , allloss: 6.1821, dt: 1296.78ms, fracRes: 0.0169, norm(attn): 0.0981, norm(output): 0.1826, norm(x): 0.1793, norm(y): 1.0042, norm:1.4347, tok/sec: 101075.35, flops:106.08, batch-reuse:1
@ 773 train 6.2382 , allloss: 6.2395, dt: 1280.37ms, fracRes: 0.0170, norm(attn): 0.1006, norm(output): 0.1826, norm(x): 0.1794, norm(y): 1.0041, norm:1.2716, tok/sec: 102370.52, flops:107.44, batch-reuse:1
@ 774 train 6.1154 , allloss: 6.1188, dt: 1310.83ms, fracRes: 0.0162, norm(attn): 0.1045, norm(output): 0.1816, norm(x): 0.1799, norm(y): 1.0041, norm:2.0881, tok/sec: 99991.58, flops:104.94, batch-reuse:1
@ 775 train 6.2435 , allloss: 6.2466, dt: 1296.37ms, fracRes: 0.0150, norm(attn): 0.1030, norm(output): 0.1816, norm(x): 0.1796, norm(y): 1.0041, norm:1.3601, tok/sec: 101107.14, flops:106.11, batch-reuse:1
@ 776 train 6.0618 , allloss: 6.0631, dt: 1321.18ms, fracRes: 0.0155, norm(attn): 0.0996, norm(output): 0.1826, norm(x): 0.1803, norm(y): 1.0042, norm:1.6556, tok/sec: 99208.26, flops:104.12, batch-reuse:1
@ 777 train 6.1218 , allloss: 6.1227, dt: 1360.47ms, fracRes: 0.0159, norm(attn): 0.0962, norm(output): 0.1826, norm(x): 0.1802, norm(y): 1.0042, norm:1.3370, tok/sec: 96343.07, flops:101.11, batch-reuse:1
@ 778 train 6.1439 , allloss: 6.1449, dt: 1332.01ms, fracRes: 0.0145, norm(attn): 0.0972, norm(output): 0.1836, norm(x): 0.1814, norm(y): 1.0041, norm:2.1373, tok/sec: 98401.84, flops:103.27, batch-reuse:1
@ 779 train 6.1803 , allloss: 6.1816, dt: 1312.61ms, fracRes: 0.0137, norm(attn): 0.1030, norm(output): 0.1836, norm(x): 0.1813, norm(y): 1.0041, norm:1.3301, tok/sec: 99856.13, flops:104.80, batch-reuse:1
@ 780 train 6.1414 , allloss: 6.1436, dt: 1310.98ms, fracRes: 0.0157, norm(attn): 0.0977, norm(output): 0.1826, norm(x): 0.1808, norm(y): 1.0042, norm:1.4107, tok/sec: 99980.42, flops:104.93, batch-reuse:1
@ 781 train 6.1474 , allloss: 6.1510, dt: 1308.31ms, fracRes: 0.0172, norm(attn): 0.0942, norm(output): 0.1836, norm(x): 0.1807, norm(y): 1.0042, norm:1.9193, tok/sec: 100184.24, flops:105.15, batch-reuse:1
@ 782 train 6.1360 , allloss: 6.1384, dt: 1286.69ms, fracRes: 0.0164, norm(attn): 0.0938, norm(output): 0.1855, norm(x): 0.1819, norm(y): 1.0042, norm:1.3864, tok/sec: 101867.34, flops:106.91, batch-reuse:1
@ 783 train 6.1032 , allloss: 6.1051, dt: 1313.17ms, fracRes: 0.0154, norm(attn): 0.0952, norm(output): 0.1846, norm(x): 0.1815, norm(y): 1.0041, norm:1.1604, tok/sec: 99813.60, flops:104.76, batch-reuse:1
@ 784 train 6.1230 , allloss: 6.1241, dt: 1320.38ms, fracRes: 0.0170, norm(attn): 0.0991, norm(output): 0.1846, norm(x): 0.1812, norm(y): 1.0042, norm:1.5764, tok/sec: 99268.52, flops:104.18, batch-reuse:1
@ 785 train 6.1404 , allloss: 6.1412, dt: 1312.06ms, fracRes: 0.0170, norm(attn): 0.1006, norm(output): 0.1865, norm(x): 0.1823, norm(y): 1.0042, norm:2.1358, tok/sec: 99898.06, flops:104.84, batch-reuse:1
@ 786 train 6.0900 , allloss: 6.0910, dt: 1305.14ms, fracRes: 0.0165, norm(attn): 0.1035, norm(output): 0.1855, norm(x): 0.1815, norm(y): 1.0041, norm:1.2156, tok/sec: 100427.36, flops:105.40, batch-reuse:1
@ 787 train 6.1365 , allloss: 6.1378, dt: 1305.87ms, fracRes: 0.0214, norm(attn): 0.0967, norm(output): 0.1836, norm(x): 0.1802, norm(y): 1.0042, norm:1.7485, tok/sec: 100371.19, flops:105.34, batch-reuse:1
@ 788 train 6.1961 , allloss: 6.1975, dt: 1340.03ms, fracRes: 0.0216, norm(attn): 0.0991, norm(output): 0.1846, norm(x): 0.1806, norm(y): 1.0042, norm:1.5749, tok/sec: 97812.41, flops:102.66, batch-reuse:1
@ 789 train 6.0947 , allloss: 6.0963, dt: 1289.84ms, fracRes: 0.0223, norm(attn): 0.1001, norm(output): 0.1855, norm(x): 0.1811, norm(y): 1.0042, norm:1.4990, tok/sec: 101618.79, flops:106.65, batch-reuse:1
@ 790 train 6.0819 , allloss: 6.0829, dt: 1312.38ms, fracRes: 0.0263, norm(attn): 0.0972, norm(output): 0.1846, norm(x): 0.1804, norm(y): 1.0043, norm:1.1580, tok/sec: 99873.52, flops:104.82, batch-reuse:1
@ 791 train 6.2261 , allloss: 6.2271, dt: 1313.99ms, fracRes: 0.0220, norm(attn): 0.1040, norm(output): 0.1846, norm(x): 0.1812, norm(y): 1.0042, norm:1.5372, tok/sec: 99751.11, flops:104.69, batch-reuse:1
@ 792 train 6.1747 , allloss: 6.1769, dt: 1312.58ms, fracRes: 0.0211, norm(attn): 0.1035, norm(output): 0.1846, norm(x): 0.1813, norm(y): 1.0042, norm:1.8661, tok/sec: 99858.50, flops:104.80, batch-reuse:1
@ 793 train 6.1645 , allloss: 6.1660, dt: 1303.85ms, fracRes: 0.0206, norm(attn): 0.1035, norm(output): 0.1855, norm(x): 0.1814, norm(y): 1.0042, norm:1.6620, tok/sec: 100526.61, flops:105.50, batch-reuse:1
@ 794 train 6.2236 , allloss: 6.2246, dt: 1335.66ms, fracRes: 0.0204, norm(attn): 0.1045, norm(output): 0.1865, norm(x): 0.1826, norm(y): 1.0042, norm:1.1218, tok/sec: 98132.41, flops:102.99, batch-reuse:1
@ 795 train 6.0805 , allloss: 6.0819, dt: 1335.95ms, fracRes: 0.0176, norm(attn): 0.1035, norm(output): 0.1865, norm(x): 0.1829, norm(y): 1.0042, norm:1.8357, tok/sec: 98111.31, flops:102.97, batch-reuse:1
@ 796 train 6.0167 , allloss: 6.0184, dt: 1305.02ms, fracRes: 0.0156, norm(attn): 0.1045, norm(output): 0.1865, norm(x): 0.1835, norm(y): 1.0042, norm:1.3859, tok/sec: 100436.69, flops:105.41, batch-reuse:1
@ 797 train 6.1490 , allloss: 6.1500, dt: 1285.20ms, fracRes: 0.0163, norm(attn): 0.0986, norm(output): 0.1865, norm(x): 0.1837, norm(y): 1.0042, norm:1.3631, tok/sec: 101985.90, flops:107.04, batch-reuse:1
@ 798 train 6.1468 , allloss: 6.1490, dt: 1313.61ms, fracRes: 0.0162, norm(attn): 0.0977, norm(output): 0.1875, norm(x): 0.1840, norm(y): 1.0042, norm:1.4235, tok/sec: 99779.84, flops:104.72, batch-reuse:1
@ 799 train 6.1577 , allloss: 6.1592, dt: 1347.96ms, fracRes: 0.0157, norm(attn): 0.0996, norm(output): 0.1865, norm(x): 0.1831, norm(y): 1.0042, norm:1.4923, tok/sec: 97237.60, flops:102.05, batch-reuse:1
@ 800 train 6.0790 , allloss: 6.0798, dt: 1345.96ms, fracRes: 0.0163, norm(attn): 0.1050, norm(output): 0.1865, norm(x): 0.1838, norm(y): 1.0042, norm:1.5473, tok/sec: 97381.58, flops:102.20, batch-reuse:1
@ 801 train 6.1152 , allloss: 6.1161, dt: 1330.87ms, fracRes: 0.0197, norm(attn): 0.1011, norm(output): 0.1865, norm(x): 0.1827, norm(y): 1.0043, norm:2.0951, tok/sec: 98486.03, flops:103.36, batch-reuse:1
@ 802 train 6.1462 , allloss: 6.1472, dt: 1333.41ms, fracRes: 0.0194, norm(attn): 0.1011, norm(output): 0.1865, norm(x): 0.1835, norm(y): 1.0043, norm:1.6522, tok/sec: 98298.57, flops:103.17, batch-reuse:1
@ 803 train 6.1866 , allloss: 6.1877, dt: 1297.81ms, fracRes: 0.0160, norm(attn): 0.1040, norm(output): 0.1875, norm(x): 0.1840, norm(y): 1.0042, norm:1.6243, tok/sec: 100994.43, flops:106.00, batch-reuse:1
@ 804 train 6.0786 , allloss: 6.0800, dt: 1320.05ms, fracRes: 0.0188, norm(attn): 0.0991, norm(output): 0.1865, norm(x): 0.1837, norm(y): 1.0043, norm:1.2715, tok/sec: 99292.98, flops:104.21, batch-reuse:1
@ 805 train 6.1652 , allloss: 6.1670, dt: 1290.69ms, fracRes: 0.0183, norm(attn): 0.0996, norm(output): 0.1875, norm(x): 0.1841, norm(y): 1.0043, norm:1.5289, tok/sec: 101551.59, flops:106.58, batch-reuse:1
@ 806 train 6.0635 , allloss: 6.0645, dt: 1329.84ms, fracRes: 0.0167, norm(attn): 0.1021, norm(output): 0.1875, norm(x): 0.1847, norm(y): 1.0043, norm:1.6082, tok/sec: 98562.27, flops:103.44, batch-reuse:1
@ 807 train 6.1146 , allloss: 6.1154, dt: 1317.85ms, fracRes: 0.0173, norm(attn): 0.1011, norm(output): 0.1865, norm(x): 0.1849, norm(y): 1.0043, norm:2.0035, tok/sec: 99458.65, flops:104.38, batch-reuse:1
@ 808 train 6.0935 , allloss: 6.0943, dt: 1327.40ms, fracRes: 0.0174, norm(attn): 0.1021, norm(output): 0.1875, norm(x): 0.1846, norm(y): 1.0043, norm:1.1786, tok/sec: 98743.41, flops:103.63, batch-reuse:1
@ 809 train 6.1013 , allloss: 6.1022, dt: 1338.25ms, fracRes: 0.0189, norm(attn): 0.1001, norm(output): 0.1865, norm(x): 0.1842, norm(y): 1.0043, norm:1.6297, tok/sec: 97942.96, flops:102.79, batch-reuse:1
@ 810 train 6.1450 , allloss: 6.1458, dt: 1293.74ms, fracRes: 0.0188, norm(attn): 0.1050, norm(output): 0.1875, norm(x): 0.1848, norm(y): 1.0042, norm:1.8342, tok/sec: 101312.83, flops:106.33, batch-reuse:1
@ 811 train 6.1324 , allloss: 6.1338, dt: 1293.02ms, fracRes: 0.0204, norm(attn): 0.1045, norm(output): 0.1865, norm(x): 0.1843, norm(y): 1.0043, norm:1.1416, tok/sec: 101368.64, flops:106.39, batch-reuse:1
@ 812 train 5.9939 , allloss: 5.9957, dt: 1300.49ms, fracRes: 0.0198, norm(attn): 0.1084, norm(output): 0.1865, norm(x): 0.1844, norm(y): 1.0043, norm:1.6798, tok/sec: 100786.34, flops:105.78, batch-reuse:1
@ 813 train 6.2000 , allloss: 6.2015, dt: 1313.98ms, fracRes: 0.0222, norm(attn): 0.1050, norm(output): 0.1875, norm(x): 0.1841, norm(y): 1.0043, norm:1.5193, tok/sec: 99752.13, flops:104.69, batch-reuse:1
@ 814 train 6.1768 , allloss: 6.1779, dt: 1294.71ms, fracRes: 0.0200, norm(attn): 0.1079, norm(output): 0.1875, norm(x): 0.1851, norm(y): 1.0043, norm:1.5553, tok/sec: 101236.26, flops:106.25, batch-reuse:1
@ 815 train 6.0522 , allloss: 6.0539, dt: 1292.50ms, fracRes: 0.0175, norm(attn): 0.1123, norm(output): 0.1875, norm(x): 0.1865, norm(y): 1.0043, norm:1.7210, tok/sec: 101409.59, flops:106.43, batch-reuse:1
@ 816 train 6.0919 , allloss: 6.0940, dt: 1322.76ms, fracRes: 0.0191, norm(attn): 0.1069, norm(output): 0.1885, norm(x): 0.1854, norm(y): 1.0043, norm:1.1086, tok/sec: 99089.86, flops:104.00, batch-reuse:1
@ 817 train 6.0256 , allloss: 6.0269, dt: 1299.55ms, fracRes: 0.0193, norm(attn): 0.1025, norm(output): 0.1875, norm(x): 0.1855, norm(y): 1.0043, norm:1.3438, tok/sec: 100859.89, flops:105.85, batch-reuse:1
@ 818 train 6.0638 , allloss: 6.0651, dt: 1310.17ms, fracRes: 0.0181, norm(attn): 0.1074, norm(output): 0.1875, norm(x): 0.1863, norm(y): 1.0043, norm:1.6652, tok/sec: 100042.22, flops:105.00, batch-reuse:1
@ 819 train 6.1753 , allloss: 6.1770, dt: 1321.26ms, fracRes: 0.0198, norm(attn): 0.1045, norm(output): 0.1885, norm(x): 0.1869, norm(y): 1.0043, norm:1.8478, tok/sec: 99201.96, flops:104.11, batch-reuse:1
@ 820 train 6.2229 , allloss: 6.2239, dt: 1330.15ms, fracRes: 0.0205, norm(attn): 0.1050, norm(output): 0.1875, norm(x): 0.1856, norm(y): 1.0043, norm:1.3234, tok/sec: 98539.50, flops:103.42, batch-reuse:1
@ 821 train 6.1489 , allloss: 6.1498, dt: 1289.98ms, fracRes: 0.0199, norm(attn): 0.1055, norm(output): 0.1875, norm(x): 0.1861, norm(y): 1.0043, norm:1.8352, tok/sec: 101607.43, flops:106.64, batch-reuse:1
@ 822 train 6.1467 , allloss: 6.1546, dt: 1299.42ms, fracRes: 0.0172, norm(attn): 0.1147, norm(output): 0.1895, norm(x): 0.1883, norm(y): 1.0042, norm:1.8034, tok/sec: 100869.83, flops:105.86, batch-reuse:1
@ 823 train 6.0407 , allloss: 6.0427, dt: 1295.59ms, fracRes: 0.0194, norm(attn): 0.1025, norm(output): 0.1875, norm(x): 0.1869, norm(y): 1.0043, norm:1.4543, tok/sec: 101167.57, flops:106.18, batch-reuse:1
@ 824 train 6.1659 , allloss: 6.1773, dt: 1306.70ms, fracRes: 0.0194, norm(attn): 0.1069, norm(output): 0.1895, norm(x): 0.1877, norm(y): 1.0043, norm:1.4943, tok/sec: 100307.54, flops:105.27, batch-reuse:1
@ 825 train 6.0959 , allloss: 6.0974, dt: 1282.19ms, fracRes: 0.0198, norm(attn): 0.1050, norm(output): 0.1885, norm(x): 0.1868, norm(y): 1.0044, norm:1.3081, tok/sec: 102225.19, flops:107.29, batch-reuse:1
@ 826 train 6.0839 , allloss: 6.0851, dt: 1309.70ms, fracRes: 0.0232, norm(attn): 0.1064, norm(output): 0.1875, norm(x): 0.1862, norm(y): 1.0044, norm:2.0364, tok/sec: 100077.82, flops:105.03, batch-reuse:1
@ 827 train 6.1711 , allloss: 6.1719, dt: 1345.48ms, fracRes: 0.0213, norm(attn): 0.1118, norm(output): 0.1885, norm(x): 0.1863, norm(y): 1.0043, norm:2.5752, tok/sec: 97416.18, flops:102.24, batch-reuse:1
@ 828 train 6.0807 , allloss: 6.0824, dt: 1338.11ms, fracRes: 0.0227, norm(attn): 0.1104, norm(output): 0.1885, norm(x): 0.1869, norm(y): 1.0043, norm:1.3175, tok/sec: 97952.86, flops:102.80, batch-reuse:1
@ 829 train 6.1357 , allloss: 6.1379, dt: 1343.44ms, fracRes: 0.0261, norm(attn): 0.1074, norm(output): 0.1885, norm(x): 0.1860, norm(y): 1.0044, norm:2.3479, tok/sec: 97564.25, flops:102.40, batch-reuse:1
@ 830 train 6.1279 , allloss: 6.1316, dt: 1337.76ms, fracRes: 0.0315, norm(attn): 0.1040, norm(output): 0.1875, norm(x): 0.1851, norm(y): 1.0044, norm:1.8930, tok/sec: 97978.49, flops:102.83, batch-reuse:1
@ 831 train 6.1466 , allloss: 6.1502, dt: 1314.24ms, fracRes: 0.0251, norm(attn): 0.1060, norm(output): 0.1885, norm(x): 0.1867, norm(y): 1.0044, norm:1.7250, tok/sec: 99732.29, flops:104.67, batch-reuse:1
@ 832 train 6.1531 , allloss: 6.1545, dt: 1275.83ms, fracRes: 0.0205, norm(attn): 0.1055, norm(output): 0.1885, norm(x): 0.1869, norm(y): 1.0044, norm:1.8099, tok/sec: 102734.46, flops:107.82, batch-reuse:1
@ 833 train 6.0213 , allloss: 6.0226, dt: 1283.65ms, fracRes: 0.0209, norm(attn): 0.1074, norm(output): 0.1885, norm(x): 0.1873, norm(y): 1.0044, norm:1.2126, tok/sec: 102108.80, flops:107.17, batch-reuse:1
@ 834 train 6.0732 , allloss: 6.0754, dt: 1296.89ms, fracRes: 0.0252, norm(attn): 0.1060, norm(output): 0.1895, norm(x): 0.1878, norm(y): 1.0044, norm:1.9719, tok/sec: 101066.21, flops:106.07, batch-reuse:1
@ 835 train 5.9827 , allloss: 5.9840, dt: 1290.37ms, fracRes: 0.0252, norm(attn): 0.1074, norm(output): 0.1885, norm(x): 0.1871, norm(y): 1.0045, norm:1.3642, tok/sec: 101577.44, flops:106.61, batch-reuse:1
@ 836 train 6.0223 , allloss: 6.0261, dt: 1304.56ms, fracRes: 0.0238, norm(attn): 0.1084, norm(output): 0.1885, norm(x): 0.1878, norm(y): 1.0044, norm:1.7884, tok/sec: 100472.01, flops:105.45, batch-reuse:1
@ 837 train 6.0368 , allloss: 6.0428, dt: 1328.90ms, fracRes: 0.0199, norm(attn): 0.1118, norm(output): 0.1895, norm(x): 0.1884, norm(y): 1.0044, norm:1.3030, tok/sec: 98632.10, flops:103.52, batch-reuse:1
@ 838 train 6.0170 , allloss: 6.0269, dt: 1314.66ms, fracRes: 0.0192, norm(attn): 0.1113, norm(output): 0.1885, norm(x): 0.1883, norm(y): 1.0043, norm:1.2116, tok/sec: 99700.68, flops:104.64, batch-reuse:1
@ 839 train 5.9008 , allloss: 5.9080, dt: 1324.89ms, fracRes: 0.0205, norm(attn): 0.1030, norm(output): 0.1914, norm(x): 0.1898, norm(y): 1.0044, norm:1.2441, tok/sec: 98930.68, flops:103.83, batch-reuse:1
@ 840 train 6.0110 , allloss: 6.0234, dt: 1287.41ms, fracRes: 0.0191, norm(attn): 0.1035, norm(output): 0.1904, norm(x): 0.1902, norm(y): 1.0044, norm:1.5237, tok/sec: 101810.50, flops:106.85, batch-reuse:1
@ 841 train 5.9529 , allloss: 5.9589, dt: 1284.36ms, fracRes: 0.0182, norm(attn): 0.1055, norm(output): 0.1895, norm(x): 0.1899, norm(y): 1.0044, norm:1.6265, tok/sec: 102052.56, flops:107.11, batch-reuse:1
@ 842 train 6.0743 , allloss: 6.0822, dt: 1282.30ms, fracRes: 0.0176, norm(attn): 0.1060, norm(output): 0.1914, norm(x): 0.1901, norm(y): 1.0044, norm:1.7052, tok/sec: 102216.65, flops:107.28, batch-reuse:1
@ 843 train 6.0755 , allloss: 6.0799, dt: 1291.13ms, fracRes: 0.0186, norm(attn): 0.1079, norm(output): 0.1904, norm(x): 0.1901, norm(y): 1.0044, norm:1.2073, tok/sec: 101517.44, flops:106.54, batch-reuse:1
@ 844 train 6.0892 , allloss: 6.0935, dt: 1326.50ms, fracRes: 0.0198, norm(attn): 0.1045, norm(output): 0.1895, norm(x): 0.1897, norm(y): 1.0044, norm:1.0091, tok/sec: 98810.35, flops:103.70, batch-reuse:1
@ 845 train 6.0677 , allloss: 6.0693, dt: 1319.02ms, fracRes: 0.0197, norm(attn): 0.1064, norm(output): 0.1895, norm(x): 0.1894, norm(y): 1.0044, norm:1.5400, tok/sec: 99370.87, flops:104.29, batch-reuse:1
@ 846 train 6.0344 , allloss: 6.0360, dt: 1350.04ms, fracRes: 0.0178, norm(attn): 0.1074, norm(output): 0.1904, norm(x): 0.1895, norm(y): 1.0044, norm:1.2662, tok/sec: 97087.48, flops:101.90, batch-reuse:1
@ 847 train 6.1014 , allloss: 6.1031, dt: 1287.57ms, fracRes: 0.0203, norm(attn): 0.1113, norm(output): 0.1914, norm(x): 0.1903, norm(y): 1.0044, norm:1.8080, tok/sec: 101797.58, flops:106.84, batch-reuse:1
@ 848 train 6.0650 , allloss: 6.0664, dt: 1281.16ms, fracRes: 0.0244, norm(attn): 0.1113, norm(output): 0.1895, norm(x): 0.1890, norm(y): 1.0045, norm:1.4459, tok/sec: 102306.93, flops:107.37, batch-reuse:1
@ 849 train 6.0214 , allloss: 6.0245, dt: 1324.14ms, fracRes: 0.0180, norm(attn): 0.1089, norm(output): 0.1934, norm(x): 0.1910, norm(y): 1.0044, norm:1.4517, tok/sec: 98986.27, flops:103.89, batch-reuse:1
@ 850 train 5.9959 , allloss: 5.9984, dt: 1311.38ms, fracRes: 0.0179, norm(attn): 0.1069, norm(output): 0.1914, norm(x): 0.1908, norm(y): 1.0044, norm:1.5549, tok/sec: 99949.59, flops:104.90, batch-reuse:1
@ 851 train 6.2366 , allloss: 6.2376, dt: 1290.95ms, fracRes: 0.0173, norm(attn): 0.1074, norm(output): 0.1953, norm(x): 0.1920, norm(y): 1.0044, norm:1.6509, tok/sec: 101531.37, flops:106.56, batch-reuse:1
@ 852 train 6.0921 , allloss: 6.0936, dt: 1308.15ms, fracRes: 0.0175, norm(attn): 0.1055, norm(output): 0.1953, norm(x): 0.1922, norm(y): 1.0044, norm:1.7219, tok/sec: 100196.22, flops:105.16, batch-reuse:1
@ 853 train 6.0309 , allloss: 6.0323, dt: 1313.27ms, fracRes: 0.0168, norm(attn): 0.1108, norm(output): 0.1924, norm(x): 0.1918, norm(y): 1.0044, norm:1.4836, tok/sec: 99805.91, flops:104.75, batch-reuse:1
@ 854 train 6.0579 , allloss: 6.0596, dt: 1305.84ms, fracRes: 0.0196, norm(attn): 0.1099, norm(output): 0.1943, norm(x): 0.1916, norm(y): 1.0044, norm:1.5657, tok/sec: 100373.70, flops:105.34, batch-reuse:1
@ 855 train 6.0845 , allloss: 6.0863, dt: 1294.43ms, fracRes: 0.0240, norm(attn): 0.1113, norm(output): 0.1924, norm(x): 0.1905, norm(y): 1.0045, norm:1.8639, tok/sec: 101258.17, flops:106.27, batch-reuse:1
@ 856 train 6.0597 , allloss: 6.0620, dt: 1291.59ms, fracRes: 0.0206, norm(attn): 0.1104, norm(output): 0.1924, norm(x): 0.1913, norm(y): 1.0044, norm:1.3575, tok/sec: 101481.08, flops:106.51, batch-reuse:1
@ 857 train 6.0278 , allloss: 6.0306, dt: 1279.17ms, fracRes: 0.0182, norm(attn): 0.1123, norm(output): 0.1924, norm(x): 0.1912, norm(y): 1.0045, norm:1.1152, tok/sec: 102466.12, flops:107.54, batch-reuse:1
@ 858 train 6.1054 , allloss: 6.1084, dt: 1315.87ms, fracRes: 0.0174, norm(attn): 0.1084, norm(output): 0.1934, norm(x): 0.1918, norm(y): 1.0045, norm:1.9259, tok/sec: 99608.67, flops:104.54, batch-reuse:1
@ 859 train 6.0283 , allloss: 6.0307, dt: 1346.51ms, fracRes: 0.0168, norm(attn): 0.1094, norm(output): 0.1943, norm(x): 0.1927, norm(y): 1.0045, norm:1.6067, tok/sec: 97342.30, flops:102.16, batch-reuse:1
@ 860 train 6.0602 , allloss: 6.0618, dt: 1316.61ms, fracRes: 0.0155, norm(attn): 0.1143, norm(output): 0.1943, norm(x): 0.1933, norm(y): 1.0044, norm:1.3355, tok/sec: 99552.43, flops:104.48, batch-reuse:1
@ 861 train 6.0617 , allloss: 6.0650, dt: 1355.52ms, fracRes: 0.0167, norm(attn): 0.1099, norm(output): 0.1943, norm(x): 0.1937, norm(y): 1.0045, norm:1.7671, tok/sec: 96694.69, flops:101.48, batch-reuse:1
@ 862 train 6.1011 , allloss: 6.1049, dt: 1352.21ms, fracRes: 0.0174, norm(attn): 0.1147, norm(output): 0.1953, norm(x): 0.1931, norm(y): 1.0045, norm:1.4532, tok/sec: 96931.40, flops:101.73, batch-reuse:1
@ 863 train 6.0420 , allloss: 6.0473, dt: 1351.78ms, fracRes: 0.0177, norm(attn): 0.1147, norm(output): 0.1934, norm(x): 0.1932, norm(y): 1.0045, norm:1.4536, tok/sec: 96962.55, flops:101.76, batch-reuse:1
@ 864 train 6.0673 , allloss: 6.0781, dt: 1333.69ms, fracRes: 0.0182, norm(attn): 0.1123, norm(output): 0.1953, norm(x): 0.1934, norm(y): 1.0045, norm:1.3097, tok/sec: 98277.87, flops:103.14, batch-reuse:1
@ 865 train 5.9751 , allloss: 5.9791, dt: 1307.64ms, fracRes: 0.0189, norm(attn): 0.1104, norm(output): 0.1953, norm(x): 0.1928, norm(y): 1.0045, norm:1.2661, tok/sec: 100235.86, flops:105.20, batch-reuse:1
@ 866 train 5.9542 , allloss: 5.9596, dt: 1336.99ms, fracRes: 0.0171, norm(attn): 0.1133, norm(output): 0.1982, norm(x): 0.1937, norm(y): 1.0045, norm:1.4961, tok/sec: 98035.43, flops:102.89, batch-reuse:1
@ 867 train 6.0232 , allloss: 6.0257, dt: 1335.52ms, fracRes: 0.0163, norm(attn): 0.1128, norm(output): 0.1982, norm(x): 0.1949, norm(y): 1.0045, norm:1.7700, tok/sec: 98142.89, flops:103.00, batch-reuse:1
@ 868 train 5.9998 , allloss: 6.0013, dt: 1278.61ms, fracRes: 0.0163, norm(attn): 0.1089, norm(output): 0.1973, norm(x): 0.1946, norm(y): 1.0045, norm:1.1476, tok/sec: 102511.05, flops:107.59, batch-reuse:1
@ 869 train 6.0102 , allloss: 6.0132, dt: 1299.99ms, fracRes: 0.0164, norm(attn): 0.1099, norm(output): 0.1982, norm(x): 0.1946, norm(y): 1.0045, norm:0.9519, tok/sec: 100825.04, flops:105.82, batch-reuse:1
@ 870 train 5.9978 , allloss: 6.0006, dt: 1300.29ms, fracRes: 0.0174, norm(attn): 0.1108, norm(output): 0.1973, norm(x): 0.1949, norm(y): 1.0045, norm:1.0308, tok/sec: 100802.01, flops:105.79, batch-reuse:1
@ 871 train 6.0222 , allloss: 6.0247, dt: 1276.14ms, fracRes: 0.0202, norm(attn): 0.1064, norm(output): 0.1992, norm(x): 0.1944, norm(y): 1.0046, norm:1.2455, tok/sec: 102709.72, flops:107.80, batch-reuse:1
@ 872 train 5.9830 , allloss: 5.9846, dt: 1337.99ms, fracRes: 0.0201, norm(attn): 0.1099, norm(output): 0.1982, norm(x): 0.1947, norm(y): 1.0045, norm:1.3322, tok/sec: 97962.13, flops:102.81, batch-reuse:1
@ 873 train 6.0549 , allloss: 6.0564, dt: 1337.74ms, fracRes: 0.0186, norm(attn): 0.1216, norm(output): 0.1992, norm(x): 0.1953, norm(y): 1.0044, norm:2.5860, tok/sec: 97979.83, flops:102.83, batch-reuse:1
@ 874 train 5.9478 , allloss: 5.9492, dt: 1338.71ms, fracRes: 0.0194, norm(attn): 0.1133, norm(output): 0.1992, norm(x): 0.1951, norm(y): 1.0045, norm:1.1519, tok/sec: 97909.37, flops:102.76, batch-reuse:1
@ 875 train 6.0029 , allloss: 6.0048, dt: 1323.37ms, fracRes: 0.0198, norm(attn): 0.1104, norm(output): 0.1992, norm(x): 0.1959, norm(y): 1.0046, norm:2.1392, tok/sec: 99043.88, flops:103.95, batch-reuse:1
@ 876 train 6.0167 , allloss: 6.0181, dt: 1291.79ms, fracRes: 0.0204, norm(attn): 0.1055, norm(output): 0.1992, norm(x): 0.1953, norm(y): 1.0046, norm:1.8586, tok/sec: 101465.20, flops:106.49, batch-reuse:1
@ 877 train 6.0258 , allloss: 6.0281, dt: 1273.62ms, fracRes: 0.0211, norm(attn): 0.1079, norm(output): 0.1992, norm(x): 0.1953, norm(y): 1.0046, norm:1.3225, tok/sec: 102912.68, flops:108.01, batch-reuse:1
@ 878 train 5.9874 , allloss: 5.9884, dt: 1286.89ms, fracRes: 0.0212, norm(attn): 0.1118, norm(output): 0.1992, norm(x): 0.1956, norm(y): 1.0046, norm:1.5346, tok/sec: 101852.01, flops:106.90, batch-reuse:1
@ 879 train 5.9452 , allloss: 5.9468, dt: 1321.08ms, fracRes: 0.0235, norm(attn): 0.1113, norm(output): 0.1992, norm(x): 0.1954, norm(y): 1.0046, norm:1.8934, tok/sec: 99215.51, flops:104.13, batch-reuse:1
@ 880 train 6.0367 , allloss: 6.0396, dt: 1326.42ms, fracRes: 0.0244, norm(attn): 0.1177, norm(output): 0.1992, norm(x): 0.1950, norm(y): 1.0045, norm:1.3721, tok/sec: 98816.62, flops:103.71, batch-reuse:1
@ 881 train 5.9428 , allloss: 5.9454, dt: 1320.93ms, fracRes: 0.0269, norm(attn): 0.1172, norm(output): 0.1982, norm(x): 0.1950, norm(y): 1.0045, norm:1.9204, tok/sec: 99226.79, flops:104.14, batch-reuse:1
@ 882 train 5.9431 , allloss: 5.9454, dt: 1298.90ms, fracRes: 0.0315, norm(attn): 0.1152, norm(output): 0.1982, norm(x): 0.1932, norm(y): 1.0047, norm:1.6439, tok/sec: 100909.92, flops:105.91, batch-reuse:1
@ 883 train 5.9234 , allloss: 5.9243, dt: 1299.82ms, fracRes: 0.0272, norm(attn): 0.1123, norm(output): 0.1992, norm(x): 0.1947, norm(y): 1.0046, norm:2.1785, tok/sec: 100838.38, flops:105.83, batch-reuse:1
@ 884 train 5.9038 , allloss: 5.9064, dt: 1299.70ms, fracRes: 0.0265, norm(attn): 0.1108, norm(output): 0.1992, norm(x): 0.1945, norm(y): 1.0046, norm:1.4147, tok/sec: 100847.68, flops:105.84, batch-reuse:1
@ 885 train 5.9565 , allloss: 5.9593, dt: 1299.13ms, fracRes: 0.0301, norm(attn): 0.1113, norm(output): 0.1982, norm(x): 0.1943, norm(y): 1.0047, norm:1.6560, tok/sec: 100891.92, flops:105.89, batch-reuse:1
@ 886 train 6.0054 , allloss: 6.0070, dt: 1314.17ms, fracRes: 0.0271, norm(attn): 0.1138, norm(output): 0.1992, norm(x): 0.1952, norm(y): 1.0046, norm:1.3048, tok/sec: 99737.41, flops:104.68, batch-reuse:1
@ 887 train 5.9656 , allloss: 5.9677, dt: 1286.39ms, fracRes: 0.0257, norm(attn): 0.1157, norm(output): 0.1992, norm(x): 0.1953, norm(y): 1.0046, norm:2.0623, tok/sec: 101891.16, flops:106.94, batch-reuse:1
@ 888 train 5.9547 , allloss: 5.9559, dt: 1301.18ms, fracRes: 0.0272, norm(attn): 0.1123, norm(output): 0.2002, norm(x): 0.1959, norm(y): 1.0046, norm:1.6923, tok/sec: 100732.88, flops:105.72, batch-reuse:1
@ 889 train 5.9877 , allloss: 5.9896, dt: 1286.71ms, fracRes: 0.0324, norm(attn): 0.1133, norm(output): 0.2002, norm(x): 0.1951, norm(y): 1.0047, norm:1.3480, tok/sec: 101866.19, flops:106.91, batch-reuse:1
@ 890 train 6.0163 , allloss: 6.0189, dt: 1317.46ms, fracRes: 0.0289, norm(attn): 0.1177, norm(output): 0.2002, norm(x): 0.1958, norm(y): 1.0047, norm:1.4943, tok/sec: 99488.06, flops:104.41, batch-reuse:1
@ 891 train 5.9529 , allloss: 5.9544, dt: 1294.63ms, fracRes: 0.0250, norm(attn): 0.1196, norm(output): 0.2021, norm(x): 0.1966, norm(y): 1.0046, norm:1.1785, tok/sec: 101242.93, flops:106.26, batch-reuse:1
@ 892 train 5.9201 , allloss: 5.9217, dt: 1326.27ms, fracRes: 0.0250, norm(attn): 0.1157, norm(output): 0.2012, norm(x): 0.1970, norm(y): 1.0046, norm:1.7415, tok/sec: 98827.53, flops:103.72, batch-reuse:1
@ 893 train 5.8316 , allloss: 5.8329, dt: 1310.54ms, fracRes: 0.0252, norm(attn): 0.1138, norm(output): 0.1992, norm(x): 0.1963, norm(y): 1.0047, norm:1.6841, tok/sec: 100013.87, flops:104.97, batch-reuse:1
@ 894 train 5.9798 , allloss: 5.9814, dt: 1318.27ms, fracRes: 0.0242, norm(attn): 0.1138, norm(output): 0.2012, norm(x): 0.1967, norm(y): 1.0046, norm:1.5552, tok/sec: 99427.30, flops:104.35, batch-reuse:1
@ 895 train 5.9328 , allloss: 5.9352, dt: 1319.75ms, fracRes: 0.0262, norm(attn): 0.1147, norm(output): 0.2021, norm(x): 0.1969, norm(y): 1.0047, norm:1.2267, tok/sec: 99315.59, flops:104.23, batch-reuse:1
@ 896 train 5.8448 , allloss: 5.8466, dt: 1303.08ms, fracRes: 0.0258, norm(attn): 0.1172, norm(output): 0.2021, norm(x): 0.1971, norm(y): 1.0047, norm:1.5162, tok/sec: 100586.39, flops:105.57, batch-reuse:1
@ 897 train 5.9431 , allloss: 5.9440, dt: 1318.43ms, fracRes: 0.0295, norm(attn): 0.1123, norm(output): 0.2021, norm(x): 0.1962, norm(y): 1.0047, norm:1.1955, tok/sec: 99415.43, flops:104.34, batch-reuse:1
@ 898 train 5.9651 , allloss: 5.9661, dt: 1347.02ms, fracRes: 0.0311, norm(attn): 0.1143, norm(output): 0.2021, norm(x): 0.1965, norm(y): 1.0047, norm:1.5590, tok/sec: 97305.07, flops:102.12, batch-reuse:1
@ 899 train 5.9214 , allloss: 5.9229, dt: 1324.48ms, fracRes: 0.0326, norm(attn): 0.1162, norm(output): 0.2021, norm(x): 0.1970, norm(y): 1.0048, norm:1.3109, tok/sec: 98961.01, flops:103.86, batch-reuse:1
@ 900 train 5.9817 , allloss: 5.9833, dt: 1296.77ms, fracRes: 0.0330, norm(attn): 0.1172, norm(output): 0.2021, norm(x): 0.1968, norm(y): 1.0047, norm:1.4738, tok/sec: 101075.63, flops:106.08, batch-reuse:1
@ 901 train 5.9126 , allloss: 5.9148, dt: 1292.02ms, fracRes: 0.0313, norm(attn): 0.1172, norm(output): 0.2021, norm(x): 0.1972, norm(y): 1.0047, norm:1.5162, tok/sec: 101447.34, flops:106.47, batch-reuse:1
@ 902 train 5.8760 , allloss: 5.8775, dt: 1308.38ms, fracRes: 0.0265, norm(attn): 0.1182, norm(output): 0.2031, norm(x): 0.1987, norm(y): 1.0047, norm:1.6114, tok/sec: 100179.06, flops:105.14, batch-reuse:1
@ 903 train 5.8923 , allloss: 5.8943, dt: 1329.19ms, fracRes: 0.0263, norm(attn): 0.1147, norm(output): 0.2021, norm(x): 0.1983, norm(y): 1.0047, norm:1.4692, tok/sec: 98610.22, flops:103.49, batch-reuse:1
@ 904 train 5.8565 , allloss: 5.8590, dt: 1285.86ms, fracRes: 0.0287, norm(attn): 0.1133, norm(output): 0.2021, norm(x): 0.1979, norm(y): 1.0048, norm:1.4054, tok/sec: 101933.43, flops:106.98, batch-reuse:1
@ 905 train 5.9371 , allloss: 5.9395, dt: 1321.29ms, fracRes: 0.0238, norm(attn): 0.1191, norm(output): 0.2031, norm(x): 0.1988, norm(y): 1.0047, norm:1.8342, tok/sec: 99200.33, flops:104.11, batch-reuse:1
@ 906 train 5.9192 , allloss: 5.9223, dt: 1344.54ms, fracRes: 0.0241, norm(attn): 0.1147, norm(output): 0.2031, norm(x): 0.1993, norm(y): 1.0047, norm:1.7435, tok/sec: 97484.44, flops:102.31, batch-reuse:1
@ 907 train 5.7781 , allloss: 5.7816, dt: 1348.63ms, fracRes: 0.0241, norm(attn): 0.1191, norm(output): 0.2031, norm(x): 0.1990, norm(y): 1.0047, norm:1.4309, tok/sec: 97189.26, flops:102.00, batch-reuse:1
@ 908 train 5.9195 , allloss: 5.9216, dt: 1313.33ms, fracRes: 0.0264, norm(attn): 0.1143, norm(output): 0.2021, norm(x): 0.1987, norm(y): 1.0048, norm:1.2195, tok/sec: 99801.45, flops:104.74, batch-reuse:1
@ 909 train 6.1171 , allloss: 6.1191, dt: 1307.04ms, fracRes: 0.0264, norm(attn): 0.1201, norm(output): 0.2031, norm(x): 0.2000, norm(y): 1.0048, norm:1.5690, tok/sec: 100281.39, flops:105.25, batch-reuse:1
@ 910 train 5.9558 , allloss: 5.9574, dt: 1322.38ms, fracRes: 0.0244, norm(attn): 0.1196, norm(output): 0.2021, norm(x): 0.1994, norm(y): 1.0047, norm:2.4342, tok/sec: 99118.31, flops:104.03, batch-reuse:1
@ 911 train 6.0167 , allloss: 6.0181, dt: 1312.13ms, fracRes: 0.0284, norm(attn): 0.1177, norm(output): 0.2021, norm(x): 0.1985, norm(y): 1.0048, norm:2.0013, tok/sec: 99892.85, flops:104.84, batch-reuse:1
@ 912 train 5.9059 , allloss: 5.9078, dt: 1314.61ms, fracRes: 0.0241, norm(attn): 0.1172, norm(output): 0.2031, norm(x): 0.1993, norm(y): 1.0048, norm:1.9467, tok/sec: 99704.46, flops:104.64, batch-reuse:1
@ 913 train 5.8948 , allloss: 5.8964, dt: 1312.99ms, fracRes: 0.0186, norm(attn): 0.1182, norm(output): 0.2031, norm(x): 0.2014, norm(y): 1.0047, norm:2.0126, tok/sec: 99826.99, flops:104.77, batch-reuse:1
@ 914 train 5.9454 , allloss: 5.9468, dt: 1296.30ms, fracRes: 0.0177, norm(attn): 0.1162, norm(output): 0.2031, norm(x): 0.2012, norm(y): 1.0047, norm:1.5231, tok/sec: 101112.40, flops:106.12, batch-reuse:1
@ 915 train 5.9317 , allloss: 5.9332, dt: 1308.15ms, fracRes: 0.0183, norm(attn): 0.1152, norm(output): 0.2041, norm(x): 0.2027, norm(y): 1.0047, norm:1.4337, tok/sec: 100196.53, flops:105.16, batch-reuse:1
@ 916 train 5.8658 , allloss: 5.8670, dt: 1305.47ms, fracRes: 0.0210, norm(attn): 0.1133, norm(output): 0.2031, norm(x): 0.2009, norm(y): 1.0048, norm:1.8936, tok/sec: 100402.37, flops:105.37, batch-reuse:1
@ 917 train 5.9035 , allloss: 5.9075, dt: 1291.10ms, fracRes: 0.0209, norm(attn): 0.1177, norm(output): 0.2041, norm(x): 0.2012, norm(y): 1.0047, norm:1.4442, tok/sec: 101519.35, flops:106.55, batch-reuse:1
@ 918 train 5.9335 , allloss: 5.9346, dt: 1304.21ms, fracRes: 0.0238, norm(attn): 0.1157, norm(output): 0.2031, norm(x): 0.2006, norm(y): 1.0048, norm:1.4679, tok/sec: 100499.45, flops:105.48, batch-reuse:1
@ 919 train 5.8715 , allloss: 5.8734, dt: 1292.01ms, fracRes: 0.0253, norm(attn): 0.1206, norm(output): 0.2031, norm(x): 0.2002, norm(y): 1.0048, norm:1.4221, tok/sec: 101448.52, flops:106.47, batch-reuse:1
@ 920 train 5.9320 , allloss: 5.9336, dt: 1313.35ms, fracRes: 0.0243, norm(attn): 0.1196, norm(output): 0.2041, norm(x): 0.2017, norm(y): 1.0047, norm:1.3653, tok/sec: 99799.81, flops:104.74, batch-reuse:1
@ 921 train 5.8987 , allloss: 5.9002, dt: 1349.53ms, fracRes: 0.0237, norm(attn): 0.1221, norm(output): 0.2041, norm(x): 0.2013, norm(y): 1.0048, norm:1.6499, tok/sec: 97123.84, flops:101.93, batch-reuse:1
@ 922 train 5.9238 , allloss: 5.9249, dt: 1341.98ms, fracRes: 0.0256, norm(attn): 0.1147, norm(output): 0.2041, norm(x): 0.2019, norm(y): 1.0048, norm:1.5589, tok/sec: 97670.62, flops:102.51, batch-reuse:1
@ 923 train 5.8884 , allloss: 5.8891, dt: 1322.85ms, fracRes: 0.0263, norm(attn): 0.1191, norm(output): 0.2041, norm(x): 0.2018, norm(y): 1.0048, norm:1.4393, tok/sec: 99082.99, flops:103.99, batch-reuse:1
@ 924 train 5.8698 , allloss: 5.8721, dt: 1300.65ms, fracRes: 0.0299, norm(attn): 0.1221, norm(output): 0.2031, norm(x): 0.2003, norm(y): 1.0049, norm:1.6269, tok/sec: 100774.59, flops:105.76, batch-reuse:1
@ 925 train 5.9250 , allloss: 5.9268, dt: 1317.04ms, fracRes: 0.0324, norm(attn): 0.1221, norm(output): 0.2031, norm(x): 0.1999, norm(y): 1.0049, norm:1.7321, tok/sec: 99519.96, flops:104.45, batch-reuse:1
@ 926 train 5.8789 , allloss: 5.8800, dt: 1276.26ms, fracRes: 0.0329, norm(attn): 0.1245, norm(output): 0.2041, norm(x): 0.2013, norm(y): 1.0049, norm:1.2730, tok/sec: 102700.37, flops:107.79, batch-reuse:1
@ 927 train 5.8131 , allloss: 5.8142, dt: 1321.67ms, fracRes: 0.0336, norm(attn): 0.1201, norm(output): 0.2061, norm(x): 0.2019, norm(y): 1.0049, norm:1.5642, tok/sec: 99171.80, flops:104.08, batch-reuse:1
@ 928 train 6.0354 , allloss: 6.0360, dt: 1341.55ms, fracRes: 0.0357, norm(attn): 0.1172, norm(output): 0.2041, norm(x): 0.2012, norm(y): 1.0049, norm:1.9678, tok/sec: 97701.63, flops:102.54, batch-reuse:1
@ 929 train 6.0598 , allloss: 6.0607, dt: 1303.72ms, fracRes: 0.0285, norm(attn): 0.1230, norm(output): 0.2051, norm(x): 0.2030, norm(y): 1.0048, norm:1.5702, tok/sec: 100536.93, flops:105.52, batch-reuse:1
@ 930 train 6.0005 , allloss: 6.0017, dt: 1310.73ms, fracRes: 0.0302, norm(attn): 0.1206, norm(output): 0.2061, norm(x): 0.2033, norm(y): 1.0049, norm:1.8136, tok/sec: 99999.11, flops:104.95, batch-reuse:1
@ 931 train 6.1365 , allloss: 6.1417, dt: 1294.37ms, fracRes: 0.0290, norm(attn): 0.1191, norm(output): 0.2051, norm(x): 0.2031, norm(y): 1.0048, norm:1.8969, tok/sec: 101262.87, flops:106.28, batch-reuse:1
@ 932 train 6.0667 , allloss: 6.0678, dt: 1289.04ms, fracRes: 0.0284, norm(attn): 0.1206, norm(output): 0.2041, norm(x): 0.2028, norm(y): 1.0048, norm:1.6805, tok/sec: 101681.64, flops:106.72, batch-reuse:1
@ 933 train 6.0694 , allloss: 6.0700, dt: 1330.97ms, fracRes: 0.0265, norm(attn): 0.1221, norm(output): 0.2061, norm(x): 0.2043, norm(y): 1.0048, norm:1.4266, tok/sec: 98478.39, flops:103.35, batch-reuse:1
@ 934 train 6.0561 , allloss: 6.0567, dt: 1343.64ms, fracRes: 0.0294, norm(attn): 0.1187, norm(output): 0.2041, norm(x): 0.2034, norm(y): 1.0049, norm:1.4238, tok/sec: 97550.05, flops:102.38, batch-reuse:1
@ 935 train 6.0107 , allloss: 6.0117, dt: 1303.67ms, fracRes: 0.0303, norm(attn): 0.1201, norm(output): 0.2051, norm(x): 0.2033, norm(y): 1.0048, norm:1.5872, tok/sec: 100540.55, flops:105.52, batch-reuse:1
@ 936 train 6.0412 , allloss: 6.0419, dt: 1297.26ms, fracRes: 0.0289, norm(attn): 0.1177, norm(output): 0.2061, norm(x): 0.2047, norm(y): 1.0048, norm:1.3798, tok/sec: 101037.20, flops:106.04, batch-reuse:1
@ 937 train 6.0627 , allloss: 6.0642, dt: 1301.46ms, fracRes: 0.0308, norm(attn): 0.1216, norm(output): 0.2070, norm(x): 0.2044, norm(y): 1.0048, norm:1.7152, tok/sec: 100711.84, flops:105.70, batch-reuse:1
@ 938 train 5.9990 , allloss: 6.0035, dt: 1317.01ms, fracRes: 0.0313, norm(attn): 0.1187, norm(output): 0.2051, norm(x): 0.2037, norm(y): 1.0049, norm:1.4004, tok/sec: 99522.55, flops:104.45, batch-reuse:1
@ 939 train 6.0686 , allloss: 6.0734, dt: 1318.89ms, fracRes: 0.0348, norm(attn): 0.1177, norm(output): 0.2051, norm(x): 0.2032, norm(y): 1.0049, norm:1.3563, tok/sec: 99380.55, flops:104.30, batch-reuse:1
@ 940 train 6.0547 , allloss: 6.0604, dt: 1309.26ms, fracRes: 0.0315, norm(attn): 0.1245, norm(output): 0.2070, norm(x): 0.2048, norm(y): 1.0048, norm:1.2591, tok/sec: 100111.14, flops:105.07, batch-reuse:1
@ 941 train 6.0390 , allloss: 6.0396, dt: 1281.04ms, fracRes: 0.0309, norm(attn): 0.1230, norm(output): 0.2070, norm(x): 0.2048, norm(y): 1.0049, norm:1.6231, tok/sec: 102316.53, flops:107.38, batch-reuse:1
@ 942 train 6.0677 , allloss: 6.0684, dt: 1296.82ms, fracRes: 0.0304, norm(attn): 0.1177, norm(output): 0.2070, norm(x): 0.2053, norm(y): 1.0049, norm:1.5597, tok/sec: 101072.06, flops:106.08, batch-reuse:1
@ 943 train 6.0164 , allloss: 6.0174, dt: 1297.04ms, fracRes: 0.0289, norm(attn): 0.1201, norm(output): 0.2070, norm(x): 0.2057, norm(y): 1.0048, norm:1.5277, tok/sec: 101055.03, flops:106.06, batch-reuse:1
@ 944 train 6.0483 , allloss: 6.0490, dt: 1288.83ms, fracRes: 0.0278, norm(attn): 0.1250, norm(output): 0.2080, norm(x): 0.2060, norm(y): 1.0048, norm:2.0435, tok/sec: 101698.78, flops:106.73, batch-reuse:1
@ 945 train 6.1281 , allloss: 6.1294, dt: 1299.96ms, fracRes: 0.0403, norm(attn): 0.1187, norm(output): 0.2061, norm(x): 0.2032, norm(y): 1.0049, norm:1.6380, tok/sec: 100828.04, flops:105.82, batch-reuse:1
@ 946 train 6.0543 , allloss: 6.0579, dt: 1305.28ms, fracRes: 0.0347, norm(attn): 0.1187, norm(output): 0.2080, norm(x): 0.2048, norm(y): 1.0050, norm:1.8000, tok/sec: 100417.03, flops:105.39, batch-reuse:1
@ 947 train 6.0200 , allloss: 6.0257, dt: 1297.33ms, fracRes: 0.0244, norm(attn): 0.1201, norm(output): 0.2090, norm(x): 0.2065, norm(y): 1.0049, norm:1.6260, tok/sec: 101031.79, flops:106.03, batch-reuse:1
@ 948 train 6.0281 , allloss: 6.0344, dt: 1306.73ms, fracRes: 0.0210, norm(attn): 0.1230, norm(output): 0.2109, norm(x): 0.2079, norm(y): 1.0049, norm:1.7689, tok/sec: 100304.97, flops:105.27, batch-reuse:1
@ 949 train 6.0935 , allloss: 6.1002, dt: 1302.47ms, fracRes: 0.0172, norm(attn): 0.1240, norm(output): 0.2109, norm(x): 0.2087, norm(y): 1.0048, norm:2.0600, tok/sec: 100633.06, flops:105.62, batch-reuse:1
@ 950 train 6.0218 , allloss: 6.0279, dt: 1283.50ms, fracRes: 0.0161, norm(attn): 0.1250, norm(output): 0.2080, norm(x): 0.2080, norm(y): 1.0049, norm:1.7607, tok/sec: 102120.50, flops:107.18, batch-reuse:1
@ 951 train 6.0929 , allloss: 6.0970, dt: 1311.31ms, fracRes: 0.0173, norm(attn): 0.1201, norm(output): 0.2109, norm(x): 0.2083, norm(y): 1.0048, norm:1.7880, tok/sec: 99954.75, flops:104.90, batch-reuse:1
@ 952 train 5.9977 , allloss: 6.0037, dt: 1314.72ms, fracRes: 0.0190, norm(attn): 0.1230, norm(output): 0.2109, norm(x): 0.2082, norm(y): 1.0048, norm:1.2410, tok/sec: 99695.70, flops:104.63, batch-reuse:1
@ 953 train 6.0053 , allloss: 6.0079, dt: 1307.34ms, fracRes: 0.0177, norm(attn): 0.1235, norm(output): 0.2129, norm(x): 0.2091, norm(y): 1.0048, norm:1.6706, tok/sec: 100258.24, flops:105.22, batch-reuse:1
@ 954 train 5.9419 , allloss: 5.9443, dt: 1322.14ms, fracRes: 0.0158, norm(attn): 0.1250, norm(output): 0.2129, norm(x): 0.2093, norm(y): 1.0048, norm:1.4551, tok/sec: 99135.88, flops:104.04, batch-reuse:1
@ 955 train 6.0363 , allloss: 6.0393, dt: 1344.99ms, fracRes: 0.0163, norm(attn): 0.1260, norm(output): 0.2148, norm(x): 0.2105, norm(y): 1.0048, norm:1.7013, tok/sec: 97452.23, flops:102.28, batch-reuse:1
@ 956 train 5.9973 , allloss: 5.9995, dt: 1334.69ms, fracRes: 0.0185, norm(attn): 0.1235, norm(output): 0.2109, norm(x): 0.2086, norm(y): 1.0048, norm:1.8255, tok/sec: 98203.95, flops:103.07, batch-reuse:1
@ 957 train 6.0133 , allloss: 6.0157, dt: 1348.33ms, fracRes: 0.0239, norm(attn): 0.1230, norm(output): 0.2129, norm(x): 0.2081, norm(y): 1.0049, norm:1.2561, tok/sec: 97210.79, flops:102.02, batch-reuse:1
@ 958 train 6.0210 , allloss: 6.0238, dt: 1328.10ms, fracRes: 0.0193, norm(attn): 0.1250, norm(output): 0.2148, norm(x): 0.2098, norm(y): 1.0048, norm:1.5256, tok/sec: 98691.12, flops:103.58, batch-reuse:1
@ 959 train 5.9116 , allloss: 5.9140, dt: 1283.31ms, fracRes: 0.0178, norm(attn): 0.1250, norm(output): 0.2148, norm(x): 0.2105, norm(y): 1.0048, norm:1.4894, tok/sec: 102135.93, flops:107.19, batch-reuse:1
@ 960 train 6.0571 , allloss: 6.0601, dt: 1307.57ms, fracRes: 0.0185, norm(attn): 0.1187, norm(output): 0.2129, norm(x): 0.2097, norm(y): 1.0049, norm:1.4861, tok/sec: 100241.25, flops:105.21, batch-reuse:1
@ 961 train 5.9624 , allloss: 5.9662, dt: 1323.45ms, fracRes: 0.0190, norm(attn): 0.1216, norm(output): 0.2148, norm(x): 0.2100, norm(y): 1.0049, norm:1.2802, tok/sec: 99038.38, flops:103.94, batch-reuse:1
@ 962 train 6.0174 , allloss: 6.0199, dt: 1312.30ms, fracRes: 0.0168, norm(attn): 0.1289, norm(output): 0.2148, norm(x): 0.2113, norm(y): 1.0048, norm:2.3437, tok/sec: 99879.89, flops:104.83, batch-reuse:1
@ 963 train 6.0324 , allloss: 6.0391, dt: 1327.85ms, fracRes: 0.0180, norm(attn): 0.1201, norm(output): 0.2148, norm(x): 0.2116, norm(y): 1.0049, norm:1.3194, tok/sec: 98709.65, flops:103.60, batch-reuse:1
@ 964 train 6.0205 , allloss: 6.0229, dt: 1287.64ms, fracRes: 0.0177, norm(attn): 0.1221, norm(output): 0.2148, norm(x): 0.2119, norm(y): 1.0049, norm:1.2947, tok/sec: 101792.61, flops:106.83, batch-reuse:1
@ 965 train 6.0203 , allloss: 6.0227, dt: 1284.79ms, fracRes: 0.0178, norm(attn): 0.1221, norm(output): 0.2148, norm(x): 0.2109, norm(y): 1.0049, norm:1.4604, tok/sec: 102018.45, flops:107.07, batch-reuse:1
@ 966 train 5.9910 , allloss: 5.9931, dt: 1274.72ms, fracRes: 0.0196, norm(attn): 0.1221, norm(output): 0.2148, norm(x): 0.2111, norm(y): 1.0049, norm:1.4951, tok/sec: 102824.02, flops:107.92, batch-reuse:1
@ 967 train 6.0204 , allloss: 6.0240, dt: 1266.80ms, fracRes: 0.0236, norm(attn): 0.1309, norm(output): 0.2148, norm(x): 0.2107, norm(y): 1.0049, norm:2.2162, tok/sec: 103467.30, flops:108.59, batch-reuse:1
@ 968 train 6.1055 , allloss: 6.1080, dt: 1310.34ms, fracRes: 0.0278, norm(attn): 0.1240, norm(output): 0.2158, norm(x): 0.2107, norm(y): 1.0049, norm:2.0956, tok/sec: 100029.08, flops:104.98, batch-reuse:1
@ 969 train 5.9847 , allloss: 5.9885, dt: 1315.68ms, fracRes: 0.0255, norm(attn): 0.1250, norm(output): 0.2158, norm(x): 0.2115, norm(y): 1.0049, norm:1.4416, tok/sec: 99623.04, flops:104.56, batch-reuse:1
@ 970 train 5.9924 , allloss: 5.9974, dt: 1292.93ms, fracRes: 0.0207, norm(attn): 0.1240, norm(output): 0.2158, norm(x): 0.2119, norm(y): 1.0048, norm:1.4452, tok/sec: 101375.95, flops:106.40, batch-reuse:1
@ 971 train 6.0301 , allloss: 6.0320, dt: 1310.17ms, fracRes: 0.0209, norm(attn): 0.1226, norm(output): 0.2168, norm(x): 0.2132, norm(y): 1.0049, norm:1.7371, tok/sec: 100041.98, flops:105.00, batch-reuse:1
@ 972 train 6.0146 , allloss: 6.0176, dt: 1326.33ms, fracRes: 0.0194, norm(attn): 0.1226, norm(output): 0.2178, norm(x): 0.2135, norm(y): 1.0049, norm:1.2985, tok/sec: 98822.91, flops:103.72, batch-reuse:1
@ 973 train 6.0112 , allloss: 6.0147, dt: 1326.07ms, fracRes: 0.0203, norm(attn): 0.1216, norm(output): 0.2168, norm(x): 0.2131, norm(y): 1.0049, norm:1.6072, tok/sec: 98842.47, flops:103.74, batch-reuse:1
@ 974 train 6.0124 , allloss: 6.0165, dt: 1307.28ms, fracRes: 0.0238, norm(attn): 0.1260, norm(output): 0.2168, norm(x): 0.2121, norm(y): 1.0050, norm:1.7234, tok/sec: 100263.08, flops:105.23, batch-reuse:1
@ 975 train 6.0401 , allloss: 6.0442, dt: 1332.63ms, fracRes: 0.0262, norm(attn): 0.1260, norm(output): 0.2158, norm(x): 0.2110, norm(y): 1.0050, norm:1.7603, tok/sec: 98356.22, flops:103.23, batch-reuse:1
@ 976 train 5.9518 , allloss: 5.9535, dt: 1331.92ms, fracRes: 0.0269, norm(attn): 0.1270, norm(output): 0.2178, norm(x): 0.2126, norm(y): 1.0050, norm:1.5330, tok/sec: 98408.00, flops:103.28, batch-reuse:1
@ 977 train 5.9723 , allloss: 5.9748, dt: 1306.98ms, fracRes: 0.0276, norm(attn): 0.1279, norm(output): 0.2178, norm(x): 0.2118, norm(y): 1.0050, norm:2.0788, tok/sec: 100286.18, flops:105.25, batch-reuse:1
@ 978 train 5.9745 , allloss: 5.9785, dt: 1300.48ms, fracRes: 0.0337, norm(attn): 0.1250, norm(output): 0.2168, norm(x): 0.2106, norm(y): 1.0051, norm:1.6383, tok/sec: 100787.69, flops:105.78, batch-reuse:1
@ 979 train 5.9264 , allloss: 5.9288, dt: 1327.42ms, fracRes: 0.0279, norm(attn): 0.1299, norm(output): 0.2158, norm(x): 0.2116, norm(y): 1.0050, norm:1.4402, tok/sec: 98741.58, flops:103.63, batch-reuse:1
@ 980 train 5.8524 , allloss: 5.8544, dt: 1289.72ms, fracRes: 0.0247, norm(attn): 0.1270, norm(output): 0.2178, norm(x): 0.2135, norm(y): 1.0050, norm:1.4871, tok/sec: 101628.33, flops:106.66, batch-reuse:1
@ 981 train 5.8846 , allloss: 5.8863, dt: 1300.46ms, fracRes: 0.0216, norm(attn): 0.1299, norm(output): 0.2188, norm(x): 0.2156, norm(y): 1.0050, norm:2.0339, tok/sec: 100788.83, flops:105.78, batch-reuse:1
@ 982 train 5.9001 , allloss: 5.9016, dt: 1281.46ms, fracRes: 0.0198, norm(attn): 0.1260, norm(output): 0.2178, norm(x): 0.2143, norm(y): 1.0050, norm:1.7392, tok/sec: 102283.52, flops:107.35, batch-reuse:1
@ 983 train 5.9742 , allloss: 5.9754, dt: 1283.24ms, fracRes: 0.0203, norm(attn): 0.1270, norm(output): 0.2188, norm(x): 0.2157, norm(y): 1.0050, norm:1.5248, tok/sec: 102141.37, flops:107.20, batch-reuse:1
@ 984 train 5.9329 , allloss: 5.9341, dt: 1306.74ms, fracRes: 0.0231, norm(attn): 0.1235, norm(output): 0.2188, norm(x): 0.2152, norm(y): 1.0051, norm:2.0631, tok/sec: 100304.33, flops:105.27, batch-reuse:1
@ 985 train 5.9298 , allloss: 5.9309, dt: 1273.36ms, fracRes: 0.0264, norm(attn): 0.1226, norm(output): 0.2188, norm(x): 0.2148, norm(y): 1.0051, norm:1.4356, tok/sec: 102933.58, flops:108.03, batch-reuse:1
@ 986 train 5.9876 , allloss: 5.9888, dt: 1293.98ms, fracRes: 0.0269, norm(attn): 0.1250, norm(output): 0.2178, norm(x): 0.2137, norm(y): 1.0051, norm:1.5867, tok/sec: 101294.07, flops:106.31, batch-reuse:1
@ 987 train 5.8924 , allloss: 5.8939, dt: 1279.53ms, fracRes: 0.0231, norm(attn): 0.1318, norm(output): 0.2188, norm(x): 0.2152, norm(y): 1.0050, norm:1.9680, tok/sec: 102437.88, flops:107.51, batch-reuse:1
@ 988 train 6.0297 , allloss: 6.0310, dt: 1285.22ms, fracRes: 0.0233, norm(attn): 0.1250, norm(output): 0.2178, norm(x): 0.2133, norm(y): 1.0051, norm:1.8653, tok/sec: 101984.10, flops:107.03, batch-reuse:1
@ 989 train 6.0870 , allloss: 6.0882, dt: 1310.65ms, fracRes: 0.0243, norm(attn): 0.1240, norm(output): 0.2178, norm(x): 0.2143, norm(y): 1.0051, norm:2.0761, tok/sec: 100005.37, flops:104.96, batch-reuse:1
@ 990 train 5.9319 , allloss: 5.9333, dt: 1294.54ms, fracRes: 0.0226, norm(attn): 0.1226, norm(output): 0.2188, norm(x): 0.2157, norm(y): 1.0051, norm:1.6663, tok/sec: 101249.74, flops:106.26, batch-reuse:1
@ 991 train 5.9665 , allloss: 5.9687, dt: 1314.73ms, fracRes: 0.0224, norm(attn): 0.1260, norm(output): 0.2188, norm(x): 0.2159, norm(y): 1.0051, norm:2.0768, tok/sec: 99694.87, flops:104.63, batch-reuse:1
@ 992 train 6.0283 , allloss: 6.0294, dt: 1284.64ms, fracRes: 0.0232, norm(attn): 0.1260, norm(output): 0.2188, norm(x): 0.2156, norm(y): 1.0050, norm:1.5329, tok/sec: 102030.34, flops:107.08, batch-reuse:1
@ 993 train 5.8810 , allloss: 5.8824, dt: 1276.29ms, fracRes: 0.0257, norm(attn): 0.1260, norm(output): 0.2188, norm(x): 0.2159, norm(y): 1.0051, norm:1.3652, tok/sec: 102697.97, flops:107.78, batch-reuse:1
@ 994 train 5.9763 , allloss: 5.9784, dt: 1312.81ms, fracRes: 0.0306, norm(attn): 0.1299, norm(output): 0.2188, norm(x): 0.2143, norm(y): 1.0051, norm:1.5373, tok/sec: 99840.91, flops:104.78, batch-reuse:1
@ 995 train 5.9389 , allloss: 5.9410, dt: 1320.85ms, fracRes: 0.0356, norm(attn): 0.1299, norm(output): 0.2188, norm(x): 0.2138, norm(y): 1.0051, norm:1.5295, tok/sec: 99232.77, flops:104.15, batch-reuse:1
@ 996 train 5.8340 , allloss: 5.8402, dt: 1291.20ms, fracRes: 0.0286, norm(attn): 0.1357, norm(output): 0.2188, norm(x): 0.2163, norm(y): 1.0050, norm:1.5827, tok/sec: 101511.44, flops:106.54, batch-reuse:1
@ 997 train 5.8904 , allloss: 5.8914, dt: 1297.91ms, fracRes: 0.0312, norm(attn): 0.1240, norm(output): 0.2197, norm(x): 0.2165, norm(y): 1.0052, norm:1.6237, tok/sec: 100986.79, flops:105.99, batch-reuse:1
@ 998 train 6.0849 , allloss: 6.0857, dt: 1276.47ms, fracRes: 0.0298, norm(attn): 0.1221, norm(output): 0.2188, norm(x): 0.2162, norm(y): 1.0052, norm:2.0148, tok/sec: 102683.30, flops:107.77, batch-reuse:1
@ 999 train 5.9028 , allloss: 5.9036, dt: 1294.56ms, fracRes: 0.0294, norm(attn): 0.1230, norm(output): 0.2197, norm(x): 0.2159, norm(y): 1.0052, norm:1.9793, tok/sec: 101248.14, flops:106.26, batch-reuse:1
@ 1000 train 5.9792 , allloss: 5.9798, dt: 1277.82ms, fracRes: 0.0324, norm(attn): 0.1250, norm(output): 0.2188, norm(x): 0.2162, norm(y): 1.0051, norm:1.7792, tok/sec: 102575.01, flops:107.65, batch-reuse:1
@ 1001 train 6.0018 , allloss: 6.0027, dt: 1270.65ms, fracRes: 0.0346, norm(attn): 0.1260, norm(output): 0.2197, norm(x): 0.2165, norm(y): 1.0051, norm:1.6698, tok/sec: 103153.51, flops:108.26, batch-reuse:1
@ 1002 train 5.8796 , allloss: 5.8804, dt: 1290.25ms, fracRes: 0.0336, norm(attn): 0.1279, norm(output): 0.2197, norm(x): 0.2166, norm(y): 1.0051, norm:2.0822, tok/sec: 101586.57, flops:106.62, batch-reuse:1
@ 1003 train 6.0070 , allloss: 6.0079, dt: 1274.32ms, fracRes: 0.0322, norm(attn): 0.1279, norm(output): 0.2197, norm(x): 0.2167, norm(y): 1.0051, norm:1.4099, tok/sec: 102856.34, flops:107.95, batch-reuse:1
@ 1004 train 5.8372 , allloss: 5.8385, dt: 1290.27ms, fracRes: 0.0308, norm(attn): 0.1289, norm(output): 0.2207, norm(x): 0.2174, norm(y): 1.0051, norm:1.3455, tok/sec: 101584.78, flops:106.62, batch-reuse:1
@ 1005 train 5.9294 , allloss: 5.9306, dt: 1300.23ms, fracRes: 0.0332, norm(attn): 0.1260, norm(output): 0.2217, norm(x): 0.2180, norm(y): 1.0052, norm:1.7859, tok/sec: 100806.56, flops:105.80, batch-reuse:1
@ 1006 train 5.9337 , allloss: 5.9354, dt: 1325.52ms, fracRes: 0.0336, norm(attn): 0.1250, norm(output): 0.2217, norm(x): 0.2178, norm(y): 1.0052, norm:1.7221, tok/sec: 98883.77, flops:103.78, batch-reuse:1
@ 1007 train 5.9091 , allloss: 5.9101, dt: 1293.59ms, fracRes: 0.0318, norm(attn): 0.1260, norm(output): 0.2197, norm(x): 0.2172, norm(y): 1.0052, norm:1.7955, tok/sec: 101324.27, flops:106.34, batch-reuse:1
@ 1008 train 5.9243 , allloss: 5.9278, dt: 1286.60ms, fracRes: 0.0253, norm(attn): 0.1309, norm(output): 0.2207, norm(x): 0.2190, norm(y): 1.0051, norm:1.7261, tok/sec: 101875.04, flops:106.92, batch-reuse:1
@ 1009 train 5.9359 , allloss: 5.9401, dt: 1294.54ms, fracRes: 0.0247, norm(attn): 0.1318, norm(output): 0.2236, norm(x): 0.2206, norm(y): 1.0051, norm:1.3234, tok/sec: 101250.22, flops:106.26, batch-reuse:1
@ 1010 train 6.0066 , allloss: 6.0081, dt: 1303.41ms, fracRes: 0.0263, norm(attn): 0.1318, norm(output): 0.2207, norm(x): 0.2188, norm(y): 1.0051, norm:1.7821, tok/sec: 100561.22, flops:105.54, batch-reuse:1
@ 1011 train 5.8962 , allloss: 5.8974, dt: 1281.24ms, fracRes: 0.0316, norm(attn): 0.1260, norm(output): 0.2197, norm(x): 0.2172, norm(y): 1.0053, norm:1.4145, tok/sec: 102300.67, flops:107.37, batch-reuse:1
@ 1012 train 5.9978 , allloss: 5.9986, dt: 1277.99ms, fracRes: 0.0302, norm(attn): 0.1279, norm(output): 0.2207, norm(x): 0.2185, norm(y): 1.0052, norm:1.9029, tok/sec: 102560.95, flops:107.64, batch-reuse:1
@ 1013 train 5.9335 , allloss: 5.9345, dt: 1307.46ms, fracRes: 0.0264, norm(attn): 0.1299, norm(output): 0.2217, norm(x): 0.2192, norm(y): 1.0051, norm:1.4236, tok/sec: 100249.37, flops:105.21, batch-reuse:1
@ 1014 train 5.8582 , allloss: 5.8597, dt: 1315.52ms, fracRes: 0.0280, norm(attn): 0.1289, norm(output): 0.2207, norm(x): 0.2190, norm(y): 1.0052, norm:1.3707, tok/sec: 99635.32, flops:104.57, batch-reuse:1
@ 1015 train 5.9513 , allloss: 5.9541, dt: 1308.36ms, fracRes: 0.0299, norm(attn): 0.1270, norm(output): 0.2227, norm(x): 0.2196, norm(y): 1.0052, norm:1.7395, tok/sec: 100180.68, flops:105.14, batch-reuse:1
@ 1016 train 5.9894 , allloss: 5.9910, dt: 1281.15ms, fracRes: 0.0296, norm(attn): 0.1270, norm(output): 0.2207, norm(x): 0.2189, norm(y): 1.0052, norm:1.4466, tok/sec: 102307.96, flops:107.37, batch-reuse:1
@ 1017 train 5.8406 , allloss: 5.8415, dt: 1283.90ms, fracRes: 0.0280, norm(attn): 0.1309, norm(output): 0.2217, norm(x): 0.2199, norm(y): 1.0051, norm:1.2736, tok/sec: 102088.72, flops:107.14, batch-reuse:1
@ 1018 train 5.9550 , allloss: 5.9557, dt: 1299.94ms, fracRes: 0.0283, norm(attn): 0.1260, norm(output): 0.2236, norm(x): 0.2203, norm(y): 1.0052, norm:1.4613, tok/sec: 100829.28, flops:105.82, batch-reuse:1
@ 1019 train 5.9345 , allloss: 5.9349, dt: 1293.88ms, fracRes: 0.0295, norm(attn): 0.1260, norm(output): 0.2227, norm(x): 0.2198, norm(y): 1.0052, norm:1.3261, tok/sec: 101301.83, flops:106.32, batch-reuse:1
@ 1020 train 5.8593 , allloss: 5.8602, dt: 1286.40ms, fracRes: 0.0318, norm(attn): 0.1279, norm(output): 0.2227, norm(x): 0.2195, norm(y): 1.0052, norm:2.0422, tok/sec: 101890.35, flops:106.94, batch-reuse:1
@ 1021 train 5.8585 , allloss: 5.8597, dt: 1285.48ms, fracRes: 0.0295, norm(attn): 0.1299, norm(output): 0.2227, norm(x): 0.2198, norm(y): 1.0052, norm:1.4144, tok/sec: 101963.33, flops:107.01, batch-reuse:1
@ 1022 train 5.7934 , allloss: 5.7940, dt: 1281.27ms, fracRes: 0.0326, norm(attn): 0.1348, norm(output): 0.2227, norm(x): 0.2186, norm(y): 1.0052, norm:1.4322, tok/sec: 102298.77, flops:107.36, batch-reuse:1
@ 1023 train 5.8258 , allloss: 5.8264, dt: 1294.27ms, fracRes: 0.0371, norm(attn): 0.1318, norm(output): 0.2217, norm(x): 0.2185, norm(y): 1.0052, norm:1.1606, tok/sec: 101270.65, flops:106.29, batch-reuse:1
@ 1024 train 5.8047 , allloss: 5.8062, dt: 1299.01ms, fracRes: 0.0413, norm(attn): 0.1328, norm(output): 0.2227, norm(x): 0.2176, norm(y): 1.0053, norm:1.2458, tok/sec: 100901.40, flops:105.90, batch-reuse:1
@ 1025 train 5.8875 , allloss: 5.8882, dt: 1292.10ms, fracRes: 0.0434, norm(attn): 0.1309, norm(output): 0.2217, norm(x): 0.2173, norm(y): 1.0053, norm:1.9676, tok/sec: 101441.14, flops:106.46, batch-reuse:1
@ 1026 train 5.9099 , allloss: 5.9113, dt: 1305.36ms, fracRes: 0.0413, norm(attn): 0.1338, norm(output): 0.2227, norm(x): 0.2182, norm(y): 1.0052, norm:1.5582, tok/sec: 100410.26, flops:105.38, batch-reuse:1
@ 1027 train 5.8877 , allloss: 5.8885, dt: 1311.89ms, fracRes: 0.0422, norm(attn): 0.1299, norm(output): 0.2227, norm(x): 0.2180, norm(y): 1.0053, norm:1.5787, tok/sec: 99910.48, flops:104.86, batch-reuse:1
@ 1028 train 5.8394 , allloss: 5.8401, dt: 1332.95ms, fracRes: 0.0350, norm(attn): 0.1328, norm(output): 0.2227, norm(x): 0.2194, norm(y): 1.0052, norm:1.7391, tok/sec: 98331.95, flops:103.20, batch-reuse:1
@ 1029 train 5.8395 , allloss: 5.8402, dt: 1291.72ms, fracRes: 0.0366, norm(attn): 0.1289, norm(output): 0.2256, norm(x): 0.2204, norm(y): 1.0053, norm:1.3714, tok/sec: 101470.80, flops:106.50, batch-reuse:1
@ 1030 train 5.8651 , allloss: 5.8668, dt: 1282.68ms, fracRes: 0.0380, norm(attn): 0.1299, norm(output): 0.2236, norm(x): 0.2195, norm(y): 1.0053, norm:1.2128, tok/sec: 102186.39, flops:107.25, batch-reuse:1
@ 1031 train 5.9143 , allloss: 5.9161, dt: 1288.52ms, fracRes: 0.0378, norm(attn): 0.1318, norm(output): 0.2227, norm(x): 0.2197, norm(y): 1.0053, norm:1.9154, tok/sec: 101722.73, flops:106.76, batch-reuse:1
@ 1032 train 5.8315 , allloss: 5.8342, dt: 1289.73ms, fracRes: 0.0406, norm(attn): 0.1318, norm(output): 0.2227, norm(x): 0.2195, norm(y): 1.0053, norm:1.6069, tok/sec: 101627.67, flops:106.66, batch-reuse:1
@ 1033 train 5.8380 , allloss: 5.8400, dt: 1297.55ms, fracRes: 0.0425, norm(attn): 0.1309, norm(output): 0.2227, norm(x): 0.2189, norm(y): 1.0053, norm:1.4637, tok/sec: 101015.31, flops:106.02, batch-reuse:1
@ 1034 train 5.8090 , allloss: 5.8099, dt: 1275.93ms, fracRes: 0.0415, norm(attn): 0.1328, norm(output): 0.2246, norm(x): 0.2204, norm(y): 1.0053, norm:1.4877, tok/sec: 102726.53, flops:107.81, batch-reuse:1
@ 1035 train 5.8655 , allloss: 5.8663, dt: 1278.14ms, fracRes: 0.0329, norm(attn): 0.1357, norm(output): 0.2266, norm(x): 0.2220, norm(y): 1.0052, norm:1.6630, tok/sec: 102549.34, flops:107.63, batch-reuse:1
@ 1036 train 5.8890 , allloss: 5.8906, dt: 1293.33ms, fracRes: 0.0328, norm(attn): 0.1318, norm(output): 0.2285, norm(x): 0.2225, norm(y): 1.0052, norm:1.5499, tok/sec: 101344.76, flops:106.36, batch-reuse:1
@ 1037 train 5.8939 , allloss: 5.8950, dt: 1287.82ms, fracRes: 0.0371, norm(attn): 0.1279, norm(output): 0.2227, norm(x): 0.2201, norm(y): 1.0053, norm:2.3904, tok/sec: 101778.04, flops:106.82, batch-reuse:1
@ 1038 train 5.8333 , allloss: 5.8337, dt: 1325.03ms, fracRes: 0.0381, norm(attn): 0.1289, norm(output): 0.2266, norm(x): 0.2212, norm(y): 1.0053, norm:2.3553, tok/sec: 98919.70, flops:103.82, batch-reuse:1
@ 1039 train 5.8297 , allloss: 5.8302, dt: 1301.69ms, fracRes: 0.0335, norm(attn): 0.1270, norm(output): 0.2266, norm(x): 0.2226, norm(y): 1.0053, norm:1.6985, tok/sec: 100693.69, flops:105.68, batch-reuse:1
@ 1040 train 5.7241 , allloss: 5.7248, dt: 1285.22ms, fracRes: 0.0325, norm(attn): 0.1328, norm(output): 0.2266, norm(x): 0.2221, norm(y): 1.0052, norm:1.8516, tok/sec: 101983.82, flops:107.03, batch-reuse:1
@ 1041 train 5.8419 , allloss: 5.8431, dt: 1276.90ms, fracRes: 0.0401, norm(attn): 0.1289, norm(output): 0.2266, norm(x): 0.2208, norm(y): 1.0054, norm:1.5410, tok/sec: 102648.75, flops:107.73, batch-reuse:1
@ 1042 train 5.8139 , allloss: 5.8144, dt: 1294.28ms, fracRes: 0.0394, norm(attn): 0.1279, norm(output): 0.2266, norm(x): 0.2213, norm(y): 1.0054, norm:2.3049, tok/sec: 101270.35, flops:106.29, batch-reuse:1
@ 1043 train 5.8593 , allloss: 5.8602, dt: 1280.13ms, fracRes: 0.0351, norm(attn): 0.1309, norm(output): 0.2246, norm(x): 0.2225, norm(y): 1.0053, norm:1.2952, tok/sec: 102389.63, flops:107.46, batch-reuse:1
@ 1044 train 5.8786 , allloss: 5.8802, dt: 1301.80ms, fracRes: 0.0343, norm(attn): 0.1357, norm(output): 0.2266, norm(x): 0.2229, norm(y): 1.0053, norm:1.5770, tok/sec: 100685.48, flops:105.67, batch-reuse:1
@ 1045 train 5.8783 , allloss: 5.8791, dt: 1323.44ms, fracRes: 0.0334, norm(attn): 0.1387, norm(output): 0.2305, norm(x): 0.2237, norm(y): 1.0053, norm:1.8907, tok/sec: 99038.68, flops:103.94, batch-reuse:1
@ 1046 train 5.8299 , allloss: 5.8312, dt: 1285.42ms, fracRes: 0.0358, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.2244, norm(y): 1.0053, norm:1.6557, tok/sec: 101967.93, flops:107.02, batch-reuse:1
@ 1047 train 5.8173 , allloss: 5.8188, dt: 1289.72ms, fracRes: 0.0372, norm(attn): 0.1318, norm(output): 0.2314, norm(x): 0.2247, norm(y): 1.0053, norm:2.3154, tok/sec: 101628.33, flops:106.66, batch-reuse:1
@ 1048 train 5.8113 , allloss: 5.8125, dt: 1299.00ms, fracRes: 0.0358, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.2249, norm(y): 1.0053, norm:1.2467, tok/sec: 100902.56, flops:105.90, batch-reuse:1
@ 1049 train 5.7777 , allloss: 5.7787, dt: 1324.70ms, fracRes: 0.0378, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.2241, norm(y): 1.0053, norm:1.5026, tok/sec: 98944.37, flops:103.84, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.7266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.1553, 0.5781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2891, 0.4941, 0.1650, 0.0515, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1943, 0.6992, 0.0315, 0.0069, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2275, 0.3906, 0.0957, 0.0182, 0.1143, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1729, 0.1128, 0.1191, 0.1758, 0.1631, 0.1367, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0623, 0.0359, 0.1631, 0.3594, 0.0854, 0.0588, 0.0262, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1182, 0.2412, 0.0275, 0.0143, 0.0918, 0.0908, 0.2559, 0.0530, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.1230, 0.0991, 0.1328, 0.0903, 0.0684, 0.0835, 0.1689, 0.0698, 0.0552, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0522, 0.1328, 0.0137, 0.0041, 0.0271, 0.0439, 0.1934, 0.0058, 0.0776, 0.3613, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0898, 0.0742, 0.0293, 0.0238, 0.0371, 0.1367, 0.1309, 0.0500, 0.1367, 0.0786, 0.1250, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0684, 0.0752, 0.1113, 0.0742, 0.0447, 0.0378, 0.1113, 0.0806, 0.0413, 0.0801, 0.1230, 0.0786, 0.0000, 0.0000],
        [0.0679, 0.1514, 0.0315, 0.0312, 0.0674, 0.0898, 0.1167, 0.0251, 0.0532, 0.0991, 0.1030, 0.0334, 0.0532, 0.0762, 0.0000],
        [0.0723, 0.0498, 0.0913, 0.0732, 0.0527, 0.0337, 0.0742, 0.1230, 0.0503, 0.0454, 0.0723, 0.0535, 0.0767, 0.0640, 0.0684]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0236,      0.0307,     -0.0436,  ...,     -0.0257,      0.0266,      0.0287],
        [     0.0456,      0.0075,      0.0059,  ...,      0.0026,     -0.0032,     -0.0381],
        [     0.0094,      0.0176,      0.0079,  ...,      0.0084,      0.0000,     -0.0057],
        ...,
        [    -0.0398,      0.0177,      0.0069,  ...,      0.0295,     -0.0037,     -0.0025],
        [     0.0656,     -0.0002,     -0.0233,  ...,      0.0201,      0.0006,      0.0007],
        [     0.0054,      0.0082,      0.0311,  ...,     -0.0038,     -0.0227,      0.0230]], device='cuda:0', requires_grad=True)
K: tensor([-0.2910,  0.5117,  0.0635, -1.3672, -0.5625,  0.0172,  0.2412, -0.1172,  0.2480,  0.3809,  0.7500,  1.0781, -0.5039,  1.2188,  0.1104, -0.0352, -0.0070,  0.1523,  0.1494,  0.3809,  0.0215, -0.1484, -0.5859, -0.3281, -0.1089,  0.2158, -0.1123, -0.5469, -0.5430,  0.8203, -0.3789, -0.1533,
        -0.2432, -0.4941, -0.1221, -0.5039,  0.4648, -0.2266,  0.1719,  0.5586,  0.3359, -0.1377,  0.3945,  0.2012, -0.6641,  0.0069, -0.1523, -0.3418,  0.6016, -0.0728, -0.0100, -0.7539, -1.4062,  0.3730,  0.4902, -0.0527,  0.2715,  0.5312, -0.9805, -0.1328,  0.5703, -0.0400, -0.3633, -0.9258],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0359,  0.0032,  0.0143,  ...,  0.0327, -0.0063, -0.0356],
        [ 0.0144,  0.0339, -0.0310,  ..., -0.0029,  0.0173, -0.0118],
        [ 0.0136, -0.0250,  0.0071,  ...,  0.0454, -0.0104, -0.0407],
        ...,
        [ 0.0238,  0.0173,  0.0030,  ..., -0.0221, -0.0087,  0.0165],
        [-0.0296, -0.0245,  0.0160,  ...,  0.0328, -0.0170,  0.0291],
        [ 0.0335,  0.0042, -0.0131,  ..., -0.0437, -0.0188, -0.0002]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2480,  0.1182, -0.2617,  0.1011,  0.2305, -0.5391,  0.9258,  0.5781,  0.0703,  0.9961, -0.9453, -0.4258, -0.1025, -0.4727, -0.4199,  0.2363, -0.8516,  0.0889, -0.0664, -0.0942,  0.4785,  0.2891, -0.0374, -0.3867, -0.5234, -0.7539, -0.5117,  0.0713, -0.7188, -0.4648,  0.0192, -0.3848,
         0.2812, -0.2354, -0.7227,  0.0425, -0.4629, -0.3906, -0.2949, -0.1475, -0.1055,  0.1768,  0.3438, -0.9648, -1.2188, -0.1348, -0.0874, -0.1040, -0.7148,  0.1543, -0.0239,  0.1069,  0.4531,  1.1875,  0.3555, -0.0255,  0.1021, -0.1602, -0.1030,  0.2773,  0.5352,  1.0938, -0.8516, -0.2080],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.9727,      0.1279,      1.1328,      0.9492,      1.1250,      0.5859,     -1.0312,      0.5938,     -0.2520,      0.6719,      0.0713,     -0.5039,      0.1777,      0.8203],
        [     0.0000,     -0.5469,      0.7695,      1.0469,     -0.0315,     -0.3633,     -0.4707,      0.8008,     -0.5938,     -1.0078,     -0.5547,      0.0190,      0.7188,     -0.1484,     -0.2871],
        [     0.0000,      0.5352,     -0.5625,     -1.7266,     -0.5469,     -0.6953,      0.5859,     -0.2754,     -0.1138,      1.6328,      0.4688,     -0.3203,     -0.8047,     -0.1973,      0.8672],
        [     0.0000,      1.2812,     -1.8203,     -3.3438,     -1.0234,     -1.0156,      1.3906,     -1.4688,      0.3086,      1.9688,      0.5977,     -0.7734,     -0.6016,      0.5312,      0.3652],
        [     0.0000,      0.5430,     -0.8672,     -2.5312,     -0.6914,     -0.3984,      0.6172,     -0.7617,      0.1123,      1.3516,      0.8516,     -0.6953,     -1.1484,      0.1426,      0.1104],
        [     0.0000,     -0.4316,     -0.3750,      0.0138,     -0.0593,     -0.2393,     -0.3711,     -0.1060,      0.6250,      0.4902,     -0.0128,      0.0031,      0.1426,      0.0894,      0.3164],
        [     0.0000,     -0.5469,      0.9648,      1.7578,      0.3184,     -0.0571,     -0.8633,      1.2109,     -0.5625,     -1.4453,     -0.2070,      0.0693,      0.7344,     -0.7148,     -0.1738],
        [     0.0000,      0.7109,     -1.4609,     -2.1094,     -0.2520,     -0.2656,      0.7695,     -0.8008,     -0.0938,      1.1094,      0.8047,     -1.4297,     -1.2969,      0.2676,      0.5156],
        [     0.0000,      0.1157,     -0.1016,      0.1895,     -0.1914,     -0.4707,     -0.2715,      0.4316,     -0.4531,     -0.6875,     -0.0378,     -0.0125,     -0.0198,     -0.6055,     -0.3945],
        [     0.0000,      0.9336,     -1.3359,     -2.5625,     -0.6562,     -0.1719,      1.3125,     -2.2031,      0.4004,      1.9375,      0.5234,     -0.7344,     -1.1953,      0.4941,      0.6055],
        [     0.0000,      0.0371,     -0.1533,     -1.0859,     -1.2969,     -0.8477,      0.4551,      0.4160,     -0.5508,      0.4570,     -0.0962,      0.3691,     -0.3965,     -0.2656,      0.1885],
        [     0.0000,     -0.0767,      0.0231,      0.4121,      0.0078,     -0.5000,     -0.6680,      0.4141,      0.0923,     -0.5781,      0.0830,      0.5117,      0.0659,      0.2500,     -0.2695],
        [     0.0000,      0.8086,     -0.7656,     -0.7734,     -0.0047,      0.2812,      0.5469,     -0.9883,     -0.2393,      0.3848,      0.4219,     -0.7031,     -0.2383,      0.1211,      0.2275],
        [     0.0000,     -0.3711,      0.2373,      0.0147,     -0.3145,     -0.7656,      0.0238,      0.5312,     -0.3633,     -0.4648,      0.0020,     -0.3027,      0.0566,     -0.1206,     -0.0586]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3037],
        [0.2978],
        [0.2865],
        [0.2104],
        [0.1178],
        [0.1004],
        [0.1357],
        [0.0925],
        [0.0696],
        [0.0986],
        [0.0798],
        [0.0677],
        [0.0663]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0610,     0.9375,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2227,     0.5039,     0.2734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2119,     0.3164,     0.2754,     0.1973,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6328,     0.0208,     0.1572,     0.1709,     0.0177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3223,     0.1367,     0.1924,     0.1689,     0.0747,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5078,     0.0625,     0.2354,     0.1045,     0.0199,     0.0488,     0.0226,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4043,     0.0515,     0.2471,     0.1113,     0.0192,     0.0693,     0.0483,     0.0479,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6680,     0.0050,     0.1387,     0.1240,     0.0052,     0.0222,     0.0051,     0.0053,     0.0259,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0177,     0.1309,     0.0312,     0.0278,     0.1270,     0.0605,     0.1787,     0.3301,     0.0747,     0.0223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4473,     0.0294,     0.1260,     0.1143,     0.0098,     0.0374,     0.0106,     0.0226,     0.0339,     0.1592,     0.0109,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0747,     0.1064,     0.0884,     0.0530,     0.0496,     0.0635,     0.0957,     0.1187,     0.0659,     0.0608,     0.0576,     0.1660,     0.0000,     0.0000,     0.0000],
        [    0.4316,     0.0172,     0.1367,     0.0554,     0.0079,     0.0217,     0.0145,     0.0215,     0.0193,     0.0747,     0.0065,     0.1846,     0.0090,     0.0000,     0.0000],
        [    0.6367,     0.0014,     0.0625,     0.0564,     0.0009,     0.0076,     0.0009,     0.0011,     0.0084,     0.1089,     0.0008,     0.1123,     0.0002,     0.0011,     0.0000],
        [    0.1299,     0.0693,     0.0928,     0.0791,     0.0364,     0.0508,     0.0452,     0.0444,     0.0334,     0.0889,     0.0378,     0.1118,     0.0267,     0.0315,     0.1216]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0137,  0.0035, -0.0393,  ...,  0.0200, -0.0200,  0.0142],
        [ 0.0048,  0.0072, -0.0337,  ...,  0.0648, -0.0236, -0.0028],
        [-0.0021, -0.0316, -0.0618,  ...,  0.0305, -0.0177, -0.0067],
        ...,
        [-0.0277,  0.0005,  0.0134,  ...,  0.0173,  0.0089,  0.0450],
        [ 0.0047, -0.0188, -0.0314,  ...,  0.0218,  0.0242,  0.0062],
        [ 0.0199,  0.0346,  0.0100,  ..., -0.0106,  0.0050,  0.0409]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8164,  0.1826, -1.1406, -0.9883, -0.2949, -0.2031,  0.1602, -0.4922,  1.0234,  0.2139,  0.0030,  0.2891,  0.0781,  0.0854, -0.1211, -0.3926, -0.1729, -0.3066, -0.6680,  0.1787,  0.5078,  0.1787, -0.3379, -0.8359, -0.3203, -0.1504, -0.2129, -0.0977, -0.4629,  0.6953,  0.3398, -0.5938,
        -0.7422,  0.4238, -0.2363, -0.8867,  0.8555,  1.1562, -0.2871, -0.3496, -0.3594, -0.2002,  0.1982, -0.2910, -0.7344,  0.4160, -0.0148,  0.1455,  0.2969,  0.2559, -0.5234,  0.2891, -0.4688, -0.0771,  0.3340,  0.3281, -0.0079,  0.3164,  0.8047,  0.3594,  0.7773,  0.0510, -0.1318, -0.6289],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0291,  0.0160, -0.0066,  ..., -0.0009,  0.0270,  0.0040],
        [ 0.0216,  0.0176,  0.0436,  ..., -0.0177,  0.0092,  0.0276],
        [ 0.0380,  0.0179,  0.0154,  ..., -0.0073,  0.0259, -0.0082],
        ...,
        [ 0.0034, -0.0367, -0.0074,  ...,  0.0106, -0.0494,  0.0098],
        [-0.0153, -0.0167,  0.0115,  ..., -0.0033, -0.0198,  0.0239],
        [-0.0132, -0.0622,  0.0261,  ...,  0.0130,  0.0117,  0.0097]], device='cuda:0', requires_grad=True)
Q: tensor([     1.8281,      0.0835,      0.0840,     -0.0840,      0.8516,     -0.6055,      0.0967,      0.2100,      0.1992,      0.2061,      0.2773,     -1.1484,      1.0938,      0.2793,      0.1201,     -0.0493,      0.0518,      0.7812,      0.3320,      0.1592,      0.3438,     -0.8477,
            -0.3164,      0.4824,      0.4922,     -0.4062,      0.4941,     -0.5469,      1.0703,     -0.9219,     -0.5820,      0.5117,      0.1660,     -0.1279,      0.0239,      0.4863,      0.0292,     -0.0732,     -0.0527,     -0.9531,     -0.3223,     -0.9883,      0.0786,     -0.3535,
            -0.3906,      0.1641,     -0.3086,     -0.9570,     -0.7070,     -0.8789,     -0.3320,      0.1104,      0.0017,      0.1318,      1.3281,     -0.0146,     -1.1094,      0.4414,     -0.3203,     -0.2988,      0.9492,      1.0312,     -0.5625,      0.8320], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.7344,  0.9102,  1.4766,  2.0781,  1.7109,  2.3438,  2.0781,  1.6953,  1.2109,  2.4531,  0.9922,  2.3594,  2.6250,  0.6133],
        [ 0.0000,  0.8164,  0.2031, -0.1504,  0.1187, -0.0928,  0.3828,  1.0938,  0.1650, -0.2295,  0.3027,  0.4883,  0.9570,  0.4160,  0.1377],
        [ 0.0000,  0.4004,  0.2578, -0.0723,  0.1357, -0.2061,  0.4102,  1.0234, -0.5000,  0.1621,  0.2734,  0.3262,  1.0469,  0.1436,  0.2090],
        [ 0.0000, -3.4219, -1.3906, -1.3047, -3.5781, -2.2031, -3.1875, -2.9375, -2.1406, -1.3828, -3.4688, -1.4688, -3.5312, -3.0938, -0.9180],
        [ 0.0000, -0.8516, -0.5156, -0.6406, -1.4609, -1.1094, -1.5156, -0.7852, -0.9883, -0.8125, -1.6641, -0.4766, -1.1719, -1.1016, -0.7656],
        [ 0.0000, -2.0938, -0.7617, -1.5781, -3.2344, -2.3438, -3.1094, -2.5469, -2.8125, -1.3828, -3.6719, -0.4414, -3.3750, -3.4531, -0.8242],
        [ 0.0000, -2.0625, -0.4922, -1.2891, -3.0469, -1.7656, -2.1250, -2.1406, -2.3750, -0.8633, -3.0000, -0.2178, -2.8125, -2.7812, -0.0825],
        [ 0.0000, -4.8750, -1.5781, -1.6875, -4.8750, -3.4062, -4.8750, -4.8438, -3.2500, -1.3750, -5.0938, -1.1406, -6.0312, -4.8438, -1.4453],
        [ 0.0000,  2.0000,  0.5664,  0.4531,  1.9688,  1.2344,  2.3125,  2.9219,  1.4453,  0.2305,  2.1562,  0.8750,  3.4531,  2.3750,  0.3711],
        [ 0.0000, -2.7188, -1.2656, -1.3672, -3.8281, -2.4844, -3.7500, -2.9844, -2.5781, -1.0312, -3.7188, -0.9609, -3.7500, -3.4219, -0.9141],
        [ 0.0000,  0.3555,  0.1680, -0.3418, -0.4102, -0.1611,  0.2520,  0.4668, -0.1250, -0.2031, -0.2559,  0.8008,  0.2891,  0.0811,  0.2090],
        [ 0.0000, -3.2188, -1.1484, -2.0469, -4.0000, -2.9844, -3.3906, -3.0000, -3.1094, -1.7578, -4.1875, -0.8516, -3.8750, -3.9844, -0.6289],
        [ 0.0000, -6.0938, -2.3281, -2.4219, -6.5312, -4.4375, -6.5938, -6.3750, -4.3125, -1.7656, -6.6250, -1.7344, -8.0625, -6.3750, -1.8125],
        [ 0.0000, -0.6289, -0.3379, -0.4961, -1.2734, -0.9375, -1.0547, -1.0703, -1.3594, -0.3789, -1.2344, -0.1504, -1.5859, -1.4219, -0.0679]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0988],
        [0.2486],
        [0.2164],
        [0.7718],
        [0.4692],
        [0.5695],
        [0.4631],
        [0.7445],
        [0.0225],
        [0.5223],
        [0.0922],
        [0.5025],
        [0.8197],
        [0.2045]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2373,     0.7617,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3301,     0.2061,     0.4648,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8906,     0.0469,     0.0498,     0.0143,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3008,     0.2129,     0.2217,     0.1621,     0.1035,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0405,     0.1904,     0.2422,     0.2832,     0.0605,     0.1826,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1846,     0.1206,     0.2246,     0.1099,     0.1069,     0.1787,     0.0752,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9141,     0.0137,     0.0039,     0.0008,     0.0317,     0.0209,     0.0134,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5859,     0.0339,     0.0265,     0.0178,     0.0674,     0.0381,     0.0598,     0.0231,     0.1465,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5664,     0.0454,     0.0209,     0.0056,     0.0544,     0.0693,     0.0190,     0.0060,     0.2109,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5977,     0.0260,     0.0304,     0.0071,     0.0544,     0.0496,     0.0339,     0.0199,     0.1553,     0.0066,     0.0190,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3184,     0.0498,     0.0762,     0.0559,     0.0491,     0.1006,     0.0957,     0.0571,     0.0500,     0.0381,     0.0723,     0.0366,     0.0000,     0.0000,     0.0000],
        [    0.8750,     0.0040,     0.0007,     0.0001,     0.0118,     0.0065,     0.0040,     0.0005,     0.0947,     0.0000,     0.0017,     0.0004,     0.0005,     0.0000,     0.0000],
        [    0.7461,     0.0114,     0.0076,     0.0032,     0.0386,     0.0172,     0.0250,     0.0077,     0.0796,     0.0010,     0.0317,     0.0031,     0.0081,     0.0178,     0.0000],
        [    0.5430,     0.0161,     0.0520,     0.0177,     0.0306,     0.0308,     0.0684,     0.0447,     0.0376,     0.0305,     0.0347,     0.0150,     0.0415,     0.0206,     0.0162]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0267, -0.0240, -0.0056,  ...,  0.0004,  0.0170,  0.0462],
        [ 0.0073, -0.0029,  0.0415,  ...,  0.0081,  0.0358,  0.0180],
        [ 0.0136, -0.0132, -0.0341,  ..., -0.0245, -0.0123,  0.0401],
        ...,
        [ 0.0179,  0.0174, -0.0092,  ..., -0.0227,  0.0206, -0.0335],
        [ 0.0117, -0.0220, -0.0245,  ...,  0.0054, -0.0119,  0.0353],
        [ 0.0301,  0.0012,  0.0108,  ...,  0.0166,  0.0096, -0.0207]], device='cuda:0', requires_grad=True)
K: tensor([ 1.6016, -0.0142, -0.9102,  0.6367,  0.5977,  0.2451,  1.3750,  0.8320,  1.0234, -1.5000, -0.9258, -1.7188,  0.5039, -0.2314,  0.0308, -0.4492,  0.7891,  0.5469, -0.6016, -1.2109, -0.0579, -1.3594,  0.0801,  0.4531,  0.0354, -0.9727, -0.7500, -1.1328, -0.2773, -1.5000, -0.5000, -0.4473,
         0.9297, -1.1328,  1.2266, -0.9570, -0.0593,  1.5156, -0.7617,  2.1406,  1.5781,  0.8867, -1.0391, -1.9922, -0.5352, -0.4941, -0.7070,  1.7734,  1.1328, -0.5547, -1.4062,  1.7578,  0.0967, -1.2500,  0.9766,  0.9727,  1.7578, -0.4102,  0.4297,  1.0547,  0.7070,  1.6094,  0.0952,  0.1709],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0581,  0.0192,  0.0145,  ..., -0.0029,  0.0067, -0.0271],
        [-0.0171,  0.0027, -0.0159,  ...,  0.0113, -0.0178,  0.0271],
        [ 0.0024, -0.0102,  0.0094,  ..., -0.0374,  0.0251, -0.0068],
        ...,
        [-0.0105,  0.0095,  0.0066,  ...,  0.0108, -0.0170,  0.0292],
        [-0.0142, -0.0198,  0.0054,  ..., -0.0351,  0.0346, -0.0122],
        [-0.0264,  0.0158, -0.0236,  ...,  0.0483, -0.0305,  0.0007]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.5742,     -0.5625,      0.6172,     -0.7578,      0.1641,     -0.4727,     -1.9141,     -0.2354,      0.2285,      0.7695,      0.9883,      0.7031,     -0.2246,      0.9805,     -0.5820,      0.3164,     -0.2412,     -1.0391,     -0.1689,      0.3340,      0.3613,     -0.6094,
            -0.2734,      0.5312,      0.3926,      1.0156,     -0.1768,      1.4297,      0.7266,      0.3828,     -0.2793,     -0.6445,     -1.2109,     -0.0006,     -0.2578,      0.0850,      0.3770,     -1.5391,      0.1904,     -0.6602,     -0.7656,     -1.0625,     -0.1279,      0.5820,
            -1.0547,      0.0640,      0.4785,     -0.5352,      0.2656,      0.7383,      1.2578,     -0.6211,     -0.0165,      0.7344,      0.0898,     -0.0571,     -0.4902,      0.5117,     -1.8359,     -0.5859,     -0.6641,     -0.4473,     -0.7578,      0.4473], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.1641,      2.4531,      2.7188,      0.6875,      1.9531,      2.0781,      1.2266,      0.3301,      4.1250,      0.8359,      2.5312,      1.2109,      1.0156,      2.1875],
        [     0.0000,     -0.4668,      0.3438,      0.0737,     -0.8633,      0.0095,     -0.0791,     -0.0053,     -1.1172,      0.4141,     -0.3574,     -0.2363,      0.2637,     -0.9180,     -0.6133],
        [     0.0000,     -2.9375,     -2.8750,     -4.1250,     -2.5625,     -2.3281,     -2.7656,     -3.6875,     -1.7109,     -4.6875,     -2.9219,     -3.7031,     -3.2188,     -2.6719,     -3.4688],
        [     0.0000,     -0.3438,     -0.3027,     -0.6172,     -1.0625,     -0.3633,     -0.4492,     -0.9961,      0.1426,     -0.9922,     -0.3242,     -0.4336,     -0.7422,     -0.3652,      0.0591],
        [     0.0000,      1.5469,      1.7891,      1.9453,      0.4023,      1.5078,      0.5859,      1.0703,      0.8594,      1.9609,      0.8398,      1.9922,      1.1250,      1.2969,      1.3906],
        [     0.0000,     -0.4238,      0.1963,     -0.5156,     -0.5469,     -0.0339,     -0.8945,      0.1484,     -0.3145,     -0.0513,     -0.6914,      0.0986,     -0.0031,     -0.2305,     -0.7578],
        [     0.0000,     -4.1875,     -5.4688,     -7.0938,     -3.3594,     -3.7812,     -4.2188,     -5.9062,     -1.9062,     -8.7500,     -4.9375,     -5.9062,     -5.7812,     -3.5156,     -5.1875],
        [     0.0000,     -2.8438,     -3.0938,     -3.5000,     -2.1562,     -2.7344,     -2.2812,     -3.2344,     -1.3906,     -4.2812,     -2.0469,     -3.7344,     -3.1875,     -2.4375,     -2.9375],
        [     0.0000,     -2.5312,     -3.3125,     -4.6250,     -2.3438,     -2.0938,     -3.3906,     -4.5625,     -0.9922,     -6.5625,     -3.1406,     -3.8750,     -3.8906,     -1.9922,     -3.6562],
        [     0.0000,     -3.1250,     -2.9844,     -4.4375,     -2.3906,     -2.4844,     -2.8750,     -3.4062,     -1.3516,     -4.5000,     -3.4375,     -3.4688,     -3.2188,     -2.2344,     -3.3906],
        [     0.0000,     -1.8594,     -1.4297,     -1.7422,     -1.8672,     -1.1562,     -1.2031,     -1.7188,     -1.8516,     -2.1250,     -1.4844,     -2.1562,     -1.5078,     -2.2031,     -2.2188],
        [     0.0000,     -5.3750,     -7.0938,     -9.2500,     -4.3125,     -4.9062,     -5.4062,     -7.3750,     -2.2188,    -11.3125,     -6.2500,     -7.7500,     -7.5000,     -4.3750,     -6.7500],
        [     0.0000,     -4.1875,     -4.5938,     -5.4375,     -2.9688,     -3.7656,     -3.3906,     -4.5625,     -2.2344,     -6.6562,     -3.1562,     -5.5000,     -4.5312,     -3.7344,     -4.4062],
        [     0.0000,     -3.5156,     -2.3438,     -3.4219,     -2.8750,     -2.8750,     -2.0781,     -2.5000,     -2.6719,     -2.8750,     -2.7500,     -3.5938,     -2.5781,     -3.2656,     -3.5156]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2069],
        [0.4661],
        [0.6208],
        [0.1725],
        [0.1030],
        [0.1443],
        [0.4266],
        [0.4111],
        [0.3392],
        [0.2765],
        [0.3915],
        [0.5190],
        [0.5378],
        [0.5433]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6211,     0.3789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1553,     0.4512,     0.3945,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1895,     0.2715,     0.4648,     0.0728,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1328,     0.0398,     0.1099,     0.0211,     0.6953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0471,     0.0747,     0.0723,     0.0242,     0.1143,     0.6680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0090,     0.0166,     0.0219,     0.0022,     0.0608,     0.7852,     0.1035,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0145,     0.0067,     0.0162,     0.0012,     0.0669,     0.4570,     0.0869,     0.3496,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0175,     0.0148,     0.0173,     0.0039,     0.0845,     0.5273,     0.0625,     0.2432,     0.0303,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0262,     0.0092,     0.0176,     0.0053,     0.1021,     0.3418,     0.0378,     0.1895,     0.0986,     0.1729,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0403,     0.0212,     0.0253,     0.0015,     0.0474,     0.5039,     0.0557,     0.1797,     0.0186,     0.0879,     0.0184,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.0078,     0.0082,     0.0129,     0.0562,     0.1465,     0.1187,     0.2793,     0.1270,     0.0349,     0.1777,     0.0282,     0.0000,     0.0000,     0.0000],
        [    0.0093,     0.0060,     0.0120,     0.0007,     0.0417,     0.3477,     0.0684,     0.2051,     0.0322,     0.0654,     0.0242,     0.0396,     0.1475,     0.0000,     0.0000],
        [    0.0140,     0.0120,     0.0134,     0.0025,     0.0576,     0.3906,     0.0481,     0.1709,     0.0201,     0.0442,     0.0317,     0.0197,     0.1396,     0.0349,     0.0000],
        [    0.0079,     0.0197,     0.0171,     0.0029,     0.0398,     0.2715,     0.1387,     0.1611,     0.0201,     0.0236,     0.0344,     0.0203,     0.1328,     0.0310,     0.0806]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0282,  0.0285,  0.0387,  ..., -0.0229,  0.0291, -0.0233],
        [-0.0131, -0.0041, -0.0008,  ..., -0.0383, -0.0269,  0.0343],
        [-0.0143, -0.0374,  0.0175,  ...,  0.0118, -0.0137,  0.0004],
        ...,
        [ 0.0390, -0.0121, -0.0106,  ..., -0.0259, -0.0300, -0.0019],
        [ 0.0151,  0.0519,  0.0035,  ...,  0.0342, -0.0165,  0.0007],
        [ 0.0105,  0.0062, -0.0105,  ..., -0.0047,  0.0342, -0.0107]], device='cuda:0', requires_grad=True)
K: tensor([-1.4688,  1.2578,  1.9219,  0.7773,  2.2969, -1.9062, -0.8906, -0.8320, -1.7891, -0.1357,  1.0625,  0.0698,  2.1406,  1.2578, -2.5312, -1.0312, -0.3359,  2.1562,  0.1162,  0.7969, -1.0703, -1.6875, -1.3047, -1.8594,  2.1719, -0.7188, -1.0625,  0.7852, -1.7812,  1.0391, -0.5586, -1.0625,
         0.8320,  0.7070,  1.3828,  0.4668, -1.8516, -0.7852,  0.5508, -1.7422,  1.4297,  0.7656,  1.1719,  0.0452, -0.8438, -0.8125,  0.6562, -1.5000,  0.5234,  1.5938,  0.7539,  0.4453, -0.6016,  0.1367,  1.3438,  0.9453,  2.2812,  0.9688, -1.6797, -1.1641,  1.0391,  0.9766,  2.3438, -1.9453],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0180,      0.0276,     -0.0530,  ...,     -0.0115,     -0.0429,     -0.0081],
        [    -0.0250,      0.0200,      0.0063,  ...,     -0.0073,      0.0002,     -0.0403],
        [     0.0190,      0.0416,     -0.0369,  ...,      0.0218,     -0.0323,      0.0046],
        ...,
        [     0.0001,     -0.0119,      0.0002,  ...,     -0.0273,      0.0315,     -0.0013],
        [     0.0188,     -0.0164,     -0.0027,  ...,     -0.0119,      0.0291,      0.0145],
        [     0.0462,      0.0134,      0.0135,  ...,     -0.0333,     -0.0262,      0.0298]], device='cuda:0', requires_grad=True)
Q: tensor([     0.4863,      1.1641,      0.8203,     -1.8203,      0.5977,      1.1641,      0.1924,     -1.8438,     -1.5938,      1.3828,     -1.5703,     -0.5859,     -1.2656,     -0.8438,     -1.4766,      0.0005,     -1.0234,      1.5547,      0.1289,      0.4473,      0.3105,      2.1406,
            -1.7422,     -1.1484,      2.9219,      2.0469,     -0.0294,     -0.9922,      0.0471,     -0.6875,      1.5234,      0.1484,     -0.4805,      0.1670,      1.7656,      0.3086,     -2.2656,     -0.1377,     -0.0060,      0.6289,     -0.8594,     -0.2988,      0.0752,     -0.9961,
             1.0234,     -0.8594,     -0.5820,      1.1094,      0.7734,     -0.1157,     -1.4922,      0.3223,     -1.4375,     -0.5859,     -0.3672,      1.4219,     -0.2334,     -0.6719,     -0.3652,      0.9180,      1.8516,      1.7812,      0.6016,     -1.6562], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.4980, -0.1455, -2.1406, -1.2969, -0.1099, -0.7734, -0.6641, -2.8750, -1.1953, -1.7500, -1.9766, -1.3281, -2.8125, -1.1562],
        [ 0.0000,  1.0625,  0.9297,  0.7734,  1.2578,  2.3906,  2.5000,  2.2344,  1.2969,  1.0078,  2.0938,  0.8438,  2.2656,  1.5000,  1.9531],
        [ 0.0000,  0.3594,  0.8984, -0.9570,  1.6641,  2.8750,  2.1562,  2.2500,  1.9219,  1.9141,  2.1094,  1.9531,  2.3906,  2.4219,  2.4531],
        [ 0.0000, -1.2031, -0.1934, -1.8359,  1.6562,  2.6406,  0.8203,  2.1719,  1.3828,  1.7422,  0.9766,  1.3672,  2.1562,  1.9297,  1.4453],
        [ 0.0000,  0.4648,  0.4297, -0.6641,  0.8867,  2.6562,  2.0156,  2.0469,  0.6094,  1.2969,  1.0625,  0.6250,  1.9531,  1.0156,  1.3203],
        [ 0.0000,  0.6133,  0.8906, -1.4062,  1.9141,  4.4688,  2.4531,  3.1719,  1.5156,  1.7031,  1.6406,  1.7500,  3.1250,  2.0938,  2.4375],
        [ 0.0000, -0.7695,  0.1123, -2.4844,  1.5234,  3.4531,  1.7891,  3.1875,  1.3125,  2.1562,  1.0078,  1.5000,  2.7812,  1.9844,  2.2188],
        [ 0.0000, -0.1689, -0.0099, -1.4922,  1.5781,  3.4062,  1.2734,  2.6250,  0.5469,  1.2656,  0.9961,  0.4531,  2.4375,  1.0781,  1.1328],
        [ 0.0000, -1.0469, -0.4043, -1.5938,  1.3594,  2.5625,  0.3613,  1.9766,  1.3203,  1.8828,  1.0859,  0.7070,  1.7969,  1.8672,  0.7930],
        [ 0.0000, -0.6406, -0.4668, -3.2969,  0.1592,  2.5312,  0.3223,  1.4922, -0.7773,  0.7812, -0.7812,  0.2061,  1.3359, -0.1309,  0.3047],
        [ 0.0000,  1.2031,  1.2578,  1.7109,  3.1875,  4.1562,  3.9375,  4.7812,  4.0000,  2.7188,  4.3438,  2.5000,  4.7500,  4.3438,  3.8125],
        [ 0.0000, -0.4375,  0.2539, -2.5469,  1.5000,  3.6250,  1.9922,  3.0938,  1.2422,  1.9531,  0.9531,  1.4453,  2.7656,  1.9141,  2.2969],
        [ 0.0000, -0.1543, -0.0525, -1.7266,  1.4141,  3.3281,  1.2344,  2.5000,  0.3574,  1.1484,  0.8125,  0.3379,  2.2969,  0.9062,  1.0547],
        [ 0.0000,  0.9141,  0.7773, -0.9961,  1.6172,  3.5312,  2.8594,  3.0156,  0.9375,  1.0938,  1.4766,  0.9453,  2.8281,  1.3750,  2.3281]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4938],
        [0.1937],
        [0.1883],
        [0.1343],
        [0.1137],
        [0.1048],
        [0.1022],
        [0.0390],
        [0.0501],
        [0.1249],
        [0.0049],
        [0.0599],
        [0.0347],
        [0.0369]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4727, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4160, 0.2197, 0.3652, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.1196, 0.1836, 0.5469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.2715, 0.1406, 0.1416, 0.3164, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.1973, 0.1465, 0.1069, 0.1943, 0.2656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.1187, 0.0698, 0.0593, 0.0723, 0.1553, 0.4590, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.0444, 0.0625, 0.1348, 0.0339, 0.0981, 0.4180, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.0918, 0.0742, 0.0903, 0.0640, 0.1118, 0.1973, 0.1338, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0493, 0.0596, 0.0669, 0.1455, 0.0801, 0.0835, 0.1650, 0.0996, 0.1338, 0.1152, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0330, 0.0674, 0.0425, 0.0332, 0.0864, 0.0894, 0.1846, 0.0771, 0.0938, 0.0986, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0547, 0.1006, 0.1299, 0.0942, 0.0688, 0.0342, 0.1416, 0.0884, 0.0723, 0.0737, 0.0718, 0.0000, 0.0000, 0.0000],
        [0.0449, 0.0439, 0.0320, 0.0593, 0.0309, 0.1240, 0.2090, 0.0786, 0.0830, 0.0850, 0.0486, 0.0469, 0.1138, 0.0000, 0.0000],
        [0.0339, 0.0540, 0.0342, 0.0417, 0.0352, 0.0757, 0.0991, 0.0625, 0.0957, 0.0593, 0.1250, 0.0630, 0.1191, 0.1006, 0.0000],
        [0.0332, 0.0408, 0.0598, 0.0659, 0.0461, 0.0938, 0.0791, 0.0845, 0.0620, 0.0588, 0.0742, 0.0579, 0.0986, 0.0669, 0.0776]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0098,  0.0027,  0.0189,  ..., -0.0191,  0.0305,  0.0230],
        [ 0.0040, -0.0008, -0.0031,  ..., -0.0104, -0.0354, -0.0005],
        [-0.0135, -0.0382, -0.0062,  ...,  0.0302, -0.0246,  0.0071],
        ...,
        [-0.0111,  0.0167,  0.0125,  ..., -0.0211, -0.0362,  0.0321],
        [-0.0297, -0.0066, -0.0168,  ..., -0.0129, -0.0185,  0.0029],
        [ 0.0032,  0.0045,  0.0145,  ...,  0.0126, -0.0017,  0.0197]], device='cuda:0', requires_grad=True)
K: tensor([-0.0437, -0.2793,  0.3281,  0.4766,  0.4258,  0.2480,  0.0513,  0.6172, -1.4531,  0.1050,  0.5664, -0.8945, -0.5195,  0.7617, -0.2373,  0.6367,  1.0625,  0.7461,  0.5039,  1.2344, -0.1367, -0.3535,  1.3906,  1.3672, -0.0874, -0.2715,  0.0586,  0.1748,  1.2266, -0.4492,  0.3574, -0.1885,
        -0.5703,  0.0557,  0.0684,  0.2949,  0.5391, -0.2275, -0.0016, -0.8125, -0.2490, -0.3535, -0.2012,  0.3750, -0.2422, -0.0325, -0.5000, -1.1016, -0.4883,  0.4609,  0.2354, -0.7031, -0.8906,  0.9258,  0.3008, -1.1641,  0.0537, -0.7227, -0.2891, -0.3027,  1.0156, -1.1094,  0.0928,  0.3926],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0361,  0.0315, -0.0266,  ...,  0.0070,  0.0083,  0.0152],
        [-0.0216,  0.0075, -0.0111,  ..., -0.0259, -0.0082, -0.0367],
        [-0.0184, -0.0144, -0.0059,  ..., -0.0199,  0.0003,  0.0001],
        ...,
        [ 0.0124,  0.0091, -0.0367,  ..., -0.0149,  0.0220,  0.0201],
        [-0.0042, -0.0123, -0.0256,  ..., -0.0023, -0.0123,  0.0335],
        [-0.0044,  0.0248, -0.0099,  ..., -0.0111, -0.0124, -0.0173]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2100, -0.5273, -0.2773, -0.3340,  0.1924, -0.8398, -0.6875,  0.7383, -0.4473, -0.1050, -0.8750,  0.6797, -0.3047,  0.7070, -0.4473, -0.1221,  0.0229, -0.2832,  0.0184,  0.9102, -0.9102, -0.9805,  0.2227, -0.1875,  0.1079,  0.8242,  0.0640,  0.0193,  0.0933,  0.4375, -0.0369, -0.2500,
        -0.1943, -0.6719, -0.6953, -1.0469, -0.2217, -1.0000,  1.0078,  0.2031,  0.0125,  0.4121, -0.5078, -0.1157, -1.3438,  0.3965, -0.1953,  0.5938, -0.8086,  0.1934,  0.2852,  0.0258, -0.1157,  0.9805,  0.7539, -0.6250, -0.6836, -1.5391, -0.3164,  0.1021,  0.1465, -1.3516,  0.2256,  1.2109],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1133,     -0.1162,      0.6758,     -0.4492,      0.1045,      0.5078,      0.4961,     -0.0889,     -0.3008,     -0.3281,     -0.4414,      0.3945,     -0.0894,     -0.0884],
        [     0.0000,     -0.6328,     -0.1299,      0.7383,     -0.7773,     -0.6328,     -0.6719,      0.3809,     -0.3047,     -0.3809,     -0.8008,     -0.8828,     -0.2832,     -0.4414,     -0.8203],
        [     0.0000,     -0.2168,      0.2080,      1.3047,     -0.2451,     -0.0630,      0.9297,      1.4688,      0.3535,      0.3828,      0.5781,     -0.3086,      1.1562,      0.3477,      0.0952],
        [     0.0000,      0.7227,      0.0669,      0.0762,      0.8789,      1.0469,      0.9453,      0.8594,      0.8555,      0.4199,      1.1250,      0.8477,      1.5781,      1.0625,      0.7227],
        [     0.0000,      0.7812,      0.4863,      0.1689,      0.7656,      1.0781,      0.8086,      0.7539,      1.2969,      0.6953,      1.5391,      1.2031,      1.4609,      1.5234,      1.0234],
        [     0.0000,      0.5977,      0.0713,     -0.0933,      0.1025,      0.8711,      1.9531,      0.7305,      0.6367,      0.6016,      1.0078,      0.1113,      0.6719,      0.5938,      1.2812],
        [     0.0000,     -0.3926,     -0.0496,      0.7188,     -0.6602,      0.3984,      1.8438,      0.7773,      0.5547,      0.2930,     -0.1206,     -0.1807,      0.6016,      0.4883,      0.8281],
        [     0.0000,      0.3477,      0.1377,      0.3359,     -0.0132,      0.5508,      1.1172,      0.7305,      0.9844,      0.5625,      1.3672,      0.6289,      1.1406,      0.9492,      0.4023],
        [     0.0000,      0.1885,      0.3066,      1.0859,      0.4844,      0.5273,      1.2109,      0.6992,      1.0000,      0.8477,      0.6641,      0.6445,      1.1719,      1.1875,      0.7188],
        [     0.0000,      0.7188,      0.2539,      0.0065,      0.9648,      0.9961,      1.7266,      0.8477,      1.0469,      1.0938,      1.7734,      1.1250,      1.6484,      1.2188,      1.4688],
        [     0.0000,     -0.2285,      0.3809,      0.6367,      0.3145,      0.0003,     -0.6953,      0.7188,      0.2490,      0.0518,      0.0684,      0.0442,      0.3906,      0.2432,     -0.2080],
        [     0.0000,     -0.0231,     -0.3379,      0.2773,     -0.3770,      1.0156,      1.5312,      0.5586,      0.6094,      0.6367,      0.0762,      0.0422,      0.9297,      0.6680,      0.9844],
        [     0.0000,      0.4609,      0.0066,      0.2061,      0.0308,      0.8008,      1.0703,      0.6094,      1.0391,      0.5586,      1.3047,      0.6172,      1.2500,      1.0859,      0.5117],
        [     0.0000,      0.1992,      0.5820,      0.6836,      0.3262,      1.0391,      0.8633,      0.9336,      0.6211,      0.5703,      0.8008,      0.5547,      1.0859,      0.6992,      0.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4533],
        [0.2723],
        [0.2274],
        [0.1766],
        [0.1069],
        [0.1434],
        [0.1379],
        [0.0865],
        [0.1312],
        [0.0698],
        [0.0357],
        [0.0925],
        [0.0528],
        [0.0715]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1147 a:0.0562ness:0.0732 and:0.1064om:0.0125.:0.2051 a:0.0356
:0.1016)


------
		( a:0.0562ness:0.0732 and:0.1064om:0.0125.:0.2051 a:0.0356
:0.1016The:0.0820)
The most common in the most common in the most common in the same time
@ 1050 train 5.8187 , allloss: 5.8195, dt: 1724.49ms, fracRes: 0.0385, norm(attn): 0.1328, norm(output): 0.2314, norm(x): 0.2243, norm(y): 1.0053, norm:1.4396, tok/sec: 76006.02, flops:79.77, batch-reuse:1
@ 1051 train 5.7798 , allloss: 5.7826, dt: 1295.99ms, fracRes: 0.0404, norm(attn): 0.1348, norm(output): 0.2305, norm(x): 0.2236, norm(y): 1.0053, norm:1.9682, tok/sec: 101136.60, flops:106.14, batch-reuse:1
@ 1052 train 5.7815 , allloss: 5.7819, dt: 1310.91ms, fracRes: 0.0416, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.2241, norm(y): 1.0053, norm:1.6291, tok/sec: 99985.45, flops:104.94, batch-reuse:1
@ 1053 train 5.8040 , allloss: 5.8047, dt: 1322.18ms, fracRes: 0.0444, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.2239, norm(y): 1.0053, norm:1.5787, tok/sec: 99133.59, flops:104.04, batch-reuse:1
@ 1054 train 5.7758 , allloss: 5.7771, dt: 1289.57ms, fracRes: 0.0479, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.2231, norm(y): 1.0054, norm:1.5802, tok/sec: 101639.72, flops:106.67, batch-reuse:1
@ 1055 train 5.7740 , allloss: 5.7752, dt: 1316.84ms, fracRes: 0.0455, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.2234, norm(y): 1.0054, norm:1.6607, tok/sec: 99535.31, flops:104.46, batch-reuse:1
@ 1056 train 5.7829 , allloss: 5.7845, dt: 1326.25ms, fracRes: 0.0462, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2237, norm(y): 1.0054, norm:1.8743, tok/sec: 98829.34, flops:103.72, batch-reuse:1
@ 1057 train 5.7940 , allloss: 5.7961, dt: 1314.08ms, fracRes: 0.0500, norm(attn): 0.1328, norm(output): 0.2314, norm(x): 0.2224, norm(y): 1.0054, norm:1.5242, tok/sec: 99744.20, flops:104.68, batch-reuse:1
@ 1058 train 5.8186 , allloss: 5.8197, dt: 1308.52ms, fracRes: 0.0502, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.2238, norm(y): 1.0054, norm:1.4840, tok/sec: 100167.81, flops:105.13, batch-reuse:1
@ 1059 train 5.7800 , allloss: 5.7820, dt: 1285.23ms, fracRes: 0.0476, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.2234, norm(y): 1.0054, norm:1.4768, tok/sec: 101982.95, flops:107.03, batch-reuse:1
@ 1060 train 5.8270 , allloss: 5.8285, dt: 1280.68ms, fracRes: 0.0459, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.2241, norm(y): 1.0054, norm:1.7499, tok/sec: 102345.61, flops:107.41, batch-reuse:1
@ 1061 train 5.8240 , allloss: 5.8248, dt: 1274.24ms, fracRes: 0.0459, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.2240, norm(y): 1.0054, norm:1.3571, tok/sec: 102862.63, flops:107.96, batch-reuse:1
@ 1062 train 5.7822 , allloss: 5.7831, dt: 1290.53ms, fracRes: 0.0498, norm(attn): 0.1328, norm(output): 0.2314, norm(x): 0.2228, norm(y): 1.0055, norm:2.1688, tok/sec: 101564.18, flops:106.59, batch-reuse:1
@ 1063 train 5.7752 , allloss: 5.7767, dt: 1284.89ms, fracRes: 0.0588, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.2219, norm(y): 1.0055, norm:1.6143, tok/sec: 102010.45, flops:107.06, batch-reuse:1
@ 1064 train 5.8450 , allloss: 5.8461, dt: 1309.82ms, fracRes: 0.0477, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.2241, norm(y): 1.0054, norm:1.1583, tok/sec: 100068.37, flops:105.02, batch-reuse:1
@ 1065 train 5.8549 , allloss: 5.8562, dt: 1271.62ms, fracRes: 0.0468, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.2237, norm(y): 1.0054, norm:1.3936, tok/sec: 103075.16, flops:108.18, batch-reuse:1
@ 1066 train 5.8279 , allloss: 5.8299, dt: 1280.30ms, fracRes: 0.0480, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.2236, norm(y): 1.0055, norm:1.6784, tok/sec: 102375.80, flops:107.45, batch-reuse:1
@ 1067 train 5.7933 , allloss: 5.7941, dt: 1331.91ms, fracRes: 0.0486, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.2232, norm(y): 1.0055, norm:1.5424, tok/sec: 98408.94, flops:103.28, batch-reuse:1
@ 1068 train 5.7912 , allloss: 5.7919, dt: 1318.51ms, fracRes: 0.0462, norm(attn): 0.1377, norm(output): 0.2334, norm(x): 0.2249, norm(y): 1.0054, norm:1.6286, tok/sec: 99408.84, flops:104.33, batch-reuse:1
@ 1069 train 5.7220 , allloss: 5.7242, dt: 1266.62ms, fracRes: 0.0493, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.2237, norm(y): 1.0055, norm:1.2324, tok/sec: 103481.73, flops:108.61, batch-reuse:1
@ 1070 train 5.7455 , allloss: 5.7463, dt: 1300.44ms, fracRes: 0.0486, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2240, norm(y): 1.0055, norm:1.3506, tok/sec: 100790.61, flops:105.78, batch-reuse:1
@ 1071 train 5.6609 , allloss: 5.6622, dt: 1275.65ms, fracRes: 0.0528, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2227, norm(y): 1.0055, norm:1.3955, tok/sec: 102749.20, flops:107.84, batch-reuse:1
@ 1072 train 5.7890 , allloss: 5.7895, dt: 1288.46ms, fracRes: 0.0538, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2238, norm(y): 1.0055, norm:1.8805, tok/sec: 101727.89, flops:106.77, batch-reuse:1
@ 1073 train 5.7092 , allloss: 5.7103, dt: 1287.22ms, fracRes: 0.0535, norm(attn): 0.1377, norm(output): 0.2334, norm(x): 0.2231, norm(y): 1.0055, norm:1.8619, tok/sec: 101825.94, flops:106.87, batch-reuse:1
@ 1074 train 5.6973 , allloss: 5.6989, dt: 1280.35ms, fracRes: 0.0583, norm(attn): 0.1348, norm(output): 0.2314, norm(x): 0.2218, norm(y): 1.0055, norm:1.5537, tok/sec: 102371.88, flops:107.44, batch-reuse:1
@ 1075 train 5.7437 , allloss: 5.7446, dt: 1304.48ms, fracRes: 0.0586, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.2226, norm(y): 1.0056, norm:1.6775, tok/sec: 100478.29, flops:105.45, batch-reuse:1
@ 1076 train 5.7845 , allloss: 5.7851, dt: 1276.12ms, fracRes: 0.0529, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2245, norm(y): 1.0055, norm:1.4419, tok/sec: 102711.12, flops:107.80, batch-reuse:1
@ 1077 train 5.7041 , allloss: 5.7048, dt: 1291.13ms, fracRes: 0.0497, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.2249, norm(y): 1.0055, norm:1.6740, tok/sec: 101517.55, flops:106.54, batch-reuse:1
@ 1078 train 5.9958 , allloss: 5.9975, dt: 1306.45ms, fracRes: 0.0565, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.2235, norm(y): 1.0056, norm:2.3834, tok/sec: 100326.78, flops:105.29, batch-reuse:1
@ 1079 train 5.7060 , allloss: 5.7064, dt: 1306.77ms, fracRes: 0.0560, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2247, norm(y): 1.0056, norm:2.6220, tok/sec: 100302.28, flops:105.27, batch-reuse:1
@ 1080 train 5.7748 , allloss: 5.7754, dt: 1310.64ms, fracRes: 0.0568, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2245, norm(y): 1.0056, norm:1.9246, tok/sec: 100005.86, flops:104.96, batch-reuse:1
@ 1081 train 5.7622 , allloss: 5.7629, dt: 1303.39ms, fracRes: 0.0525, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.2246, norm(y): 1.0055, norm:1.9642, tok/sec: 100562.54, flops:105.54, batch-reuse:1
@ 1082 train 5.9353 , allloss: 5.9374, dt: 1291.62ms, fracRes: 0.0456, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.2280, norm(y): 1.0054, norm:1.5149, tok/sec: 101478.80, flops:106.50, batch-reuse:1
@ 1083 train 5.7332 , allloss: 5.7340, dt: 1289.99ms, fracRes: 0.0446, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.2284, norm(y): 1.0055, norm:1.6429, tok/sec: 101607.22, flops:106.64, batch-reuse:1
@ 1084 train 5.6574 , allloss: 5.6581, dt: 1292.96ms, fracRes: 0.0490, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.2267, norm(y): 1.0055, norm:1.4816, tok/sec: 101373.75, flops:106.39, batch-reuse:1
@ 1085 train 5.8054 , allloss: 5.8058, dt: 1294.40ms, fracRes: 0.0489, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.2271, norm(y): 1.0055, norm:2.2200, tok/sec: 101261.06, flops:106.28, batch-reuse:1
@ 1086 train 5.7640 , allloss: 5.7647, dt: 1279.65ms, fracRes: 0.0491, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.2267, norm(y): 1.0055, norm:2.3198, tok/sec: 102427.93, flops:107.50, batch-reuse:1
@ 1087 train 5.6931 , allloss: 5.6963, dt: 1278.43ms, fracRes: 0.0454, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.2284, norm(y): 1.0054, norm:1.6059, tok/sec: 102525.39, flops:107.60, batch-reuse:1
@ 1088 train 5.7837 , allloss: 5.7854, dt: 1311.11ms, fracRes: 0.0507, norm(attn): 0.1309, norm(output): 0.2344, norm(x): 0.2276, norm(y): 1.0056, norm:1.5443, tok/sec: 99970.43, flops:104.92, batch-reuse:1
@ 1089 train 5.7328 , allloss: 5.7336, dt: 1274.02ms, fracRes: 0.0482, norm(attn): 0.1309, norm(output): 0.2344, norm(x): 0.2275, norm(y): 1.0056, norm:2.3825, tok/sec: 102880.82, flops:107.98, batch-reuse:1
@ 1090 train 5.7117 , allloss: 5.7128, dt: 1296.92ms, fracRes: 0.0425, norm(attn): 0.1328, norm(output): 0.2354, norm(x): 0.2292, norm(y): 1.0055, norm:1.4988, tok/sec: 101063.83, flops:106.07, batch-reuse:1
@ 1091 train 5.7508 , allloss: 5.7513, dt: 1331.83ms, fracRes: 0.0415, norm(attn): 0.1328, norm(output): 0.2354, norm(x): 0.2294, norm(y): 1.0056, norm:1.7848, tok/sec: 98414.87, flops:103.29, batch-reuse:1
@ 1092 train 5.8437 , allloss: 5.8459, dt: 1280.97ms, fracRes: 0.0425, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.2299, norm(y): 1.0055, norm:1.6718, tok/sec: 102322.24, flops:107.39, batch-reuse:1
@ 1093 train 5.7233 , allloss: 5.7239, dt: 1294.44ms, fracRes: 0.0519, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.2290, norm(y): 1.0056, norm:2.0261, tok/sec: 101257.74, flops:106.27, batch-reuse:1
@ 1094 train 5.6924 , allloss: 5.6932, dt: 1342.38ms, fracRes: 0.0557, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.2284, norm(y): 1.0055, norm:1.4821, tok/sec: 97641.20, flops:102.48, batch-reuse:1
@ 1095 train 5.6797 , allloss: 5.6806, dt: 1309.32ms, fracRes: 0.0674, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.2252, norm(y): 1.0057, norm:1.6287, tok/sec: 100106.84, flops:105.06, batch-reuse:1
@ 1096 train 5.7421 , allloss: 5.7431, dt: 1291.81ms, fracRes: 0.0686, norm(attn): 0.1328, norm(output): 0.2354, norm(x): 0.2257, norm(y): 1.0056, norm:1.8629, tok/sec: 101463.52, flops:106.49, batch-reuse:1
@ 1097 train 5.6646 , allloss: 5.6663, dt: 1296.05ms, fracRes: 0.0596, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.2285, norm(y): 1.0055, norm:1.7085, tok/sec: 101131.58, flops:106.14, batch-reuse:1
@ 1098 train 5.6714 , allloss: 5.6726, dt: 1292.07ms, fracRes: 0.0598, norm(attn): 0.1348, norm(output): 0.2354, norm(x): 0.2282, norm(y): 1.0055, norm:1.6748, tok/sec: 101443.09, flops:106.47, batch-reuse:1
@ 1099 train 5.7191 , allloss: 5.7201, dt: 1301.03ms, fracRes: 0.0670, norm(attn): 0.1309, norm(output): 0.2354, norm(x): 0.2260, norm(y): 1.0057, norm:1.5064, tok/sec: 100744.99, flops:105.73, batch-reuse:1
@ 1100 train 5.7181 , allloss: 5.7194, dt: 1285.44ms, fracRes: 0.0680, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.2249, norm(y): 1.0057, norm:2.0769, tok/sec: 101966.93, flops:107.02, batch-reuse:1
@ 1101 train 5.8234 , allloss: 5.8240, dt: 1307.86ms, fracRes: 0.0607, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.2277, norm(y): 1.0056, norm:1.5433, tok/sec: 100218.90, flops:105.18, batch-reuse:1
@ 1102 train 5.7352 , allloss: 5.7360, dt: 1284.00ms, fracRes: 0.0609, norm(attn): 0.1328, norm(output): 0.2354, norm(x): 0.2274, norm(y): 1.0056, norm:1.2545, tok/sec: 102081.02, flops:107.14, batch-reuse:1
@ 1103 train 5.7972 , allloss: 5.7990, dt: 1288.14ms, fracRes: 0.0671, norm(attn): 0.1338, norm(output): 0.2354, norm(x): 0.2267, norm(y): 1.0057, norm:1.4453, tok/sec: 101752.57, flops:106.79, batch-reuse:1
@ 1104 train 5.8654 , allloss: 5.8665, dt: 1305.83ms, fracRes: 0.0696, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.2270, norm(y): 1.0057, norm:1.5456, tok/sec: 100374.44, flops:105.34, batch-reuse:1
@ 1105 train 5.7424 , allloss: 5.7443, dt: 1277.94ms, fracRes: 0.0667, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.2277, norm(y): 1.0056, norm:1.6927, tok/sec: 102565.39, flops:107.64, batch-reuse:1
@ 1106 train 5.7012 , allloss: 5.7026, dt: 1304.56ms, fracRes: 0.0630, norm(attn): 0.1396, norm(output): 0.2383, norm(x): 0.2303, norm(y): 1.0056, norm:1.5865, tok/sec: 100472.45, flops:105.45, batch-reuse:1
@ 1107 train 5.8179 , allloss: 5.8185, dt: 1320.44ms, fracRes: 0.0613, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.2298, norm(y): 1.0056, norm:1.5943, tok/sec: 99263.79, flops:104.18, batch-reuse:1
@ 1108 train 5.6910 , allloss: 5.6919, dt: 1277.59ms, fracRes: 0.0627, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.2289, norm(y): 1.0057, norm:1.7537, tok/sec: 102593.45, flops:107.67, batch-reuse:1
@ 1109 train 5.7159 , allloss: 5.7171, dt: 1289.96ms, fracRes: 0.0633, norm(attn): 0.1328, norm(output): 0.2354, norm(x): 0.2293, norm(y): 1.0057, norm:1.8189, tok/sec: 101609.27, flops:106.64, batch-reuse:1
@ 1110 train 5.7442 , allloss: 5.7469, dt: 1312.39ms, fracRes: 0.0560, norm(attn): 0.1357, norm(output): 0.2373, norm(x): 0.2308, norm(y): 1.0057, norm:1.8492, tok/sec: 99872.54, flops:104.82, batch-reuse:1
@ 1111 train 5.7045 , allloss: 5.7057, dt: 1297.11ms, fracRes: 0.0483, norm(attn): 0.1348, norm(output): 0.2383, norm(x): 0.2333, norm(y): 1.0056, norm:1.8981, tok/sec: 101049.27, flops:106.05, batch-reuse:1
@ 1112 train 5.8531 , allloss: 5.8540, dt: 1290.15ms, fracRes: 0.0441, norm(attn): 0.1377, norm(output): 0.2383, norm(x): 0.2345, norm(y): 1.0055, norm:1.5406, tok/sec: 101594.68, flops:106.63, batch-reuse:1
@ 1113 train 5.8689 , allloss: 5.8706, dt: 1322.58ms, fracRes: 0.0419, norm(attn): 0.1387, norm(output): 0.2383, norm(x): 0.2348, norm(y): 1.0056, norm:2.3648, tok/sec: 99103.47, flops:104.01, batch-reuse:1
@ 1114 train 5.9299 , allloss: 5.9315, dt: 1291.25ms, fracRes: 0.0437, norm(attn): 0.1357, norm(output): 0.2383, norm(x): 0.2342, norm(y): 1.0057, norm:1.6989, tok/sec: 101507.64, flops:106.53, batch-reuse:1
@ 1115 train 5.8917 , allloss: 5.8932, dt: 1290.25ms, fracRes: 0.0447, norm(attn): 0.1318, norm(output): 0.2393, norm(x): 0.2335, norm(y): 1.0057, norm:2.0875, tok/sec: 101586.62, flops:106.62, batch-reuse:1
@ 1116 train 5.7858 , allloss: 5.7869, dt: 1309.10ms, fracRes: 0.0451, norm(attn): 0.1357, norm(output): 0.2383, norm(x): 0.2340, norm(y): 1.0057, norm:2.0834, tok/sec: 100124.08, flops:105.08, batch-reuse:1
@ 1117 train 5.7999 , allloss: 5.8009, dt: 1273.32ms, fracRes: 0.0441, norm(attn): 0.1387, norm(output): 0.2441, norm(x): 0.2354, norm(y): 1.0056, norm:1.5828, tok/sec: 102937.34, flops:108.03, batch-reuse:1
@ 1118 train 5.8898 , allloss: 5.8925, dt: 1308.37ms, fracRes: 0.0455, norm(attn): 0.1377, norm(output): 0.2402, norm(x): 0.2351, norm(y): 1.0056, norm:1.8485, tok/sec: 100179.99, flops:105.14, batch-reuse:1
@ 1119 train 5.8604 , allloss: 5.8626, dt: 1298.92ms, fracRes: 0.0483, norm(attn): 0.1338, norm(output): 0.2393, norm(x): 0.2345, norm(y): 1.0056, norm:1.5262, tok/sec: 100908.71, flops:105.91, batch-reuse:1
@ 1120 train 5.8637 , allloss: 5.8642, dt: 1298.06ms, fracRes: 0.0498, norm(attn): 0.1367, norm(output): 0.2422, norm(x): 0.2351, norm(y): 1.0056, norm:1.9748, tok/sec: 100975.34, flops:105.98, batch-reuse:1
@ 1121 train 5.8959 , allloss: 5.8967, dt: 1292.01ms, fracRes: 0.0527, norm(attn): 0.1377, norm(output): 0.2441, norm(x): 0.2347, norm(y): 1.0056, norm:1.1514, tok/sec: 101447.99, flops:106.47, batch-reuse:1
@ 1122 train 5.8677 , allloss: 5.8688, dt: 1284.40ms, fracRes: 0.0591, norm(attn): 0.1338, norm(output): 0.2441, norm(x): 0.2341, norm(y): 1.0057, norm:1.4421, tok/sec: 102049.26, flops:107.10, batch-reuse:1
@ 1123 train 5.8233 , allloss: 5.8246, dt: 1272.06ms, fracRes: 0.0631, norm(attn): 0.1367, norm(output): 0.2441, norm(x): 0.2335, norm(y): 1.0057, norm:1.7556, tok/sec: 103038.77, flops:108.14, batch-reuse:1
@ 1124 train 5.8190 , allloss: 5.8208, dt: 1285.71ms, fracRes: 0.0692, norm(attn): 0.1338, norm(output): 0.2402, norm(x): 0.2321, norm(y): 1.0057, norm:1.5653, tok/sec: 101945.22, flops:106.99, batch-reuse:1
@ 1125 train 5.8651 , allloss: 5.8672, dt: 1297.52ms, fracRes: 0.0698, norm(attn): 0.1357, norm(output): 0.2441, norm(x): 0.2326, norm(y): 1.0057, norm:1.6182, tok/sec: 101017.31, flops:106.02, batch-reuse:1
@ 1126 train 5.8220 , allloss: 5.8237, dt: 1300.25ms, fracRes: 0.0688, norm(attn): 0.1387, norm(output): 0.2451, norm(x): 0.2326, norm(y): 1.0057, norm:1.2036, tok/sec: 100805.11, flops:105.80, batch-reuse:1
@ 1127 train 5.8146 , allloss: 5.8155, dt: 1279.98ms, fracRes: 0.0707, norm(attn): 0.1396, norm(output): 0.2451, norm(x): 0.2320, norm(y): 1.0057, norm:1.6552, tok/sec: 102401.62, flops:107.47, batch-reuse:1
@ 1128 train 5.7936 , allloss: 5.7975, dt: 1314.80ms, fracRes: 0.0733, norm(attn): 0.1338, norm(output): 0.2451, norm(x): 0.2322, norm(y): 1.0057, norm:1.8008, tok/sec: 99689.32, flops:104.63, batch-reuse:1
@ 1129 train 5.8268 , allloss: 5.8276, dt: 1328.43ms, fracRes: 0.0727, norm(attn): 0.1338, norm(output): 0.2402, norm(x): 0.2314, norm(y): 1.0057, norm:1.5183, tok/sec: 98666.76, flops:103.55, batch-reuse:1
@ 1130 train 5.7884 , allloss: 5.7897, dt: 1325.92ms, fracRes: 0.0705, norm(attn): 0.1396, norm(output): 0.2461, norm(x): 0.2332, norm(y): 1.0057, norm:1.6847, tok/sec: 98853.85, flops:103.75, batch-reuse:1
@ 1131 train 5.8332 , allloss: 5.8344, dt: 1272.54ms, fracRes: 0.0715, norm(attn): 0.1396, norm(output): 0.2461, norm(x): 0.2338, norm(y): 1.0057, norm:1.2612, tok/sec: 103000.33, flops:108.10, batch-reuse:1
@ 1132 train 5.8352 , allloss: 5.8359, dt: 1287.17ms, fracRes: 0.0744, norm(attn): 0.1357, norm(output): 0.2461, norm(x): 0.2322, norm(y): 1.0057, norm:1.7879, tok/sec: 101829.52, flops:106.87, batch-reuse:1
@ 1133 train 5.8519 , allloss: 5.8534, dt: 1287.17ms, fracRes: 0.0786, norm(attn): 0.1318, norm(output): 0.2432, norm(x): 0.2311, norm(y): 1.0058, norm:1.8871, tok/sec: 101829.86, flops:106.87, batch-reuse:1
@ 1134 train 5.7952 , allloss: 5.7964, dt: 1301.14ms, fracRes: 0.0718, norm(attn): 0.1328, norm(output): 0.2461, norm(x): 0.2327, norm(y): 1.0058, norm:1.6013, tok/sec: 100736.36, flops:105.72, batch-reuse:1
@ 1135 train 5.8202 , allloss: 5.8218, dt: 1298.63ms, fracRes: 0.0678, norm(attn): 0.1357, norm(output): 0.2471, norm(x): 0.2340, norm(y): 1.0057, norm:1.8192, tok/sec: 100931.07, flops:105.93, batch-reuse:1
@ 1136 train 5.8517 , allloss: 5.8535, dt: 1277.94ms, fracRes: 0.0655, norm(attn): 0.1396, norm(output): 0.2471, norm(x): 0.2352, norm(y): 1.0057, norm:1.4728, tok/sec: 102565.29, flops:107.64, batch-reuse:1
@ 1137 train 5.8213 , allloss: 5.8232, dt: 1298.37ms, fracRes: 0.0700, norm(attn): 0.1348, norm(output): 0.2461, norm(x): 0.2329, norm(y): 1.0058, norm:1.2296, tok/sec: 100951.13, flops:105.95, batch-reuse:1
@ 1138 train 5.9757 , allloss: 5.9768, dt: 1303.75ms, fracRes: 0.0691, norm(attn): 0.1357, norm(output): 0.2471, norm(x): 0.2345, norm(y): 1.0057, norm:1.4050, tok/sec: 100534.98, flops:105.51, batch-reuse:1
@ 1139 train 5.7819 , allloss: 5.7830, dt: 1299.48ms, fracRes: 0.0625, norm(attn): 0.1396, norm(output): 0.2480, norm(x): 0.2362, norm(y): 1.0057, norm:1.6855, tok/sec: 100864.93, flops:105.86, batch-reuse:1
@ 1140 train 5.8255 , allloss: 5.8261, dt: 1274.66ms, fracRes: 0.0612, norm(attn): 0.1377, norm(output): 0.2471, norm(x): 0.2356, norm(y): 1.0057, norm:1.5808, tok/sec: 102828.63, flops:107.92, batch-reuse:1
@ 1141 train 5.7201 , allloss: 5.7214, dt: 1268.68ms, fracRes: 0.0621, norm(attn): 0.1367, norm(output): 0.2461, norm(x): 0.2349, norm(y): 1.0058, norm:1.5911, tok/sec: 103313.28, flops:108.43, batch-reuse:1
@ 1142 train 5.7766 , allloss: 5.7789, dt: 1283.62ms, fracRes: 0.0619, norm(attn): 0.1367, norm(output): 0.2471, norm(x): 0.2357, norm(y): 1.0057, norm:1.4164, tok/sec: 102111.49, flops:107.17, batch-reuse:1
@ 1143 train 5.8386 , allloss: 5.8394, dt: 1300.60ms, fracRes: 0.0673, norm(attn): 0.1367, norm(output): 0.2480, norm(x): 0.2362, norm(y): 1.0058, norm:3.2439, tok/sec: 100778.41, flops:105.77, batch-reuse:1
@ 1144 train 5.8217 , allloss: 5.8223, dt: 1317.19ms, fracRes: 0.0674, norm(attn): 0.1377, norm(output): 0.2480, norm(x): 0.2351, norm(y): 1.0058, norm:1.7741, tok/sec: 99508.43, flops:104.44, batch-reuse:1
@ 1145 train 5.8860 , allloss: 5.8871, dt: 1291.07ms, fracRes: 0.0684, norm(attn): 0.1377, norm(output): 0.2480, norm(x): 0.2349, norm(y): 1.0058, norm:2.7375, tok/sec: 101522.14, flops:106.55, batch-reuse:1
@ 1146 train 5.8398 , allloss: 5.8413, dt: 1306.96ms, fracRes: 0.0685, norm(attn): 0.1396, norm(output): 0.2471, norm(x): 0.2349, norm(y): 1.0058, norm:1.5834, tok/sec: 100287.50, flops:105.25, batch-reuse:1
@ 1147 train 5.8290 , allloss: 5.8317, dt: 1308.80ms, fracRes: 0.0829, norm(attn): 0.1387, norm(output): 0.2471, norm(x): 0.2331, norm(y): 1.0059, norm:2.0265, tok/sec: 100146.77, flops:105.11, batch-reuse:1
@ 1148 train 5.7545 , allloss: 5.7560, dt: 1313.64ms, fracRes: 0.0755, norm(attn): 0.1367, norm(output): 0.2480, norm(x): 0.2343, norm(y): 1.0058, norm:1.5214, tok/sec: 99778.03, flops:104.72, batch-reuse:1
@ 1149 train 5.7770 , allloss: 5.7783, dt: 1311.33ms, fracRes: 0.0713, norm(attn): 0.1367, norm(output): 0.2490, norm(x): 0.2354, norm(y): 1.0058, norm:1.3987, tok/sec: 99953.20, flops:104.90, batch-reuse:1
@ 1150 train 5.8171 , allloss: 5.8181, dt: 1304.15ms, fracRes: 0.0688, norm(attn): 0.1377, norm(output): 0.2490, norm(x): 0.2367, norm(y): 1.0058, norm:1.6885, tok/sec: 100503.81, flops:105.48, batch-reuse:1
@ 1151 train 5.8658 , allloss: 5.8674, dt: 1281.19ms, fracRes: 0.0664, norm(attn): 0.1396, norm(output): 0.2490, norm(x): 0.2374, norm(y): 1.0058, norm:1.5070, tok/sec: 102304.95, flops:107.37, batch-reuse:1
@ 1152 train 5.7732 , allloss: 5.7741, dt: 1287.65ms, fracRes: 0.0672, norm(attn): 0.1387, norm(output): 0.2500, norm(x): 0.2390, norm(y): 1.0058, norm:1.3534, tok/sec: 101791.27, flops:106.83, batch-reuse:1
@ 1153 train 5.7786 , allloss: 5.7796, dt: 1281.45ms, fracRes: 0.0709, norm(attn): 0.1377, norm(output): 0.2490, norm(x): 0.2373, norm(y): 1.0058, norm:1.6259, tok/sec: 102284.09, flops:107.35, batch-reuse:1
@ 1154 train 5.7763 , allloss: 5.7780, dt: 1285.68ms, fracRes: 0.0742, norm(attn): 0.1377, norm(output): 0.2490, norm(x): 0.2366, norm(y): 1.0059, norm:1.5838, tok/sec: 101947.74, flops:107.00, batch-reuse:1
@ 1155 train 5.7271 , allloss: 5.7287, dt: 1300.06ms, fracRes: 0.0702, norm(attn): 0.1387, norm(output): 0.2490, norm(x): 0.2373, norm(y): 1.0058, norm:1.3046, tok/sec: 100820.03, flops:105.81, batch-reuse:1
@ 1156 train 5.8107 , allloss: 5.8126, dt: 1288.76ms, fracRes: 0.0705, norm(attn): 0.1367, norm(output): 0.2490, norm(x): 0.2374, norm(y): 1.0058, norm:1.4599, tok/sec: 101704.31, flops:106.74, batch-reuse:1
@ 1157 train 5.7575 , allloss: 5.7606, dt: 1312.53ms, fracRes: 0.0717, norm(attn): 0.1387, norm(output): 0.2490, norm(x): 0.2371, norm(y): 1.0058, norm:1.4727, tok/sec: 99861.91, flops:104.81, batch-reuse:1
@ 1158 train 5.7626 , allloss: 5.7641, dt: 1300.32ms, fracRes: 0.0756, norm(attn): 0.1367, norm(output): 0.2490, norm(x): 0.2366, norm(y): 1.0059, norm:1.4991, tok/sec: 100800.14, flops:105.79, batch-reuse:1
@ 1159 train 5.7903 , allloss: 5.7919, dt: 1300.68ms, fracRes: 0.0779, norm(attn): 0.1406, norm(output): 0.2490, norm(x): 0.2367, norm(y): 1.0059, norm:1.4932, tok/sec: 100772.22, flops:105.76, batch-reuse:1
@ 1160 train 5.8103 , allloss: 5.8132, dt: 1301.64ms, fracRes: 0.0740, norm(attn): 0.1396, norm(output): 0.2490, norm(x): 0.2373, norm(y): 1.0058, norm:1.6566, tok/sec: 100697.23, flops:105.68, batch-reuse:1
@ 1161 train 5.6815 , allloss: 5.6827, dt: 1287.88ms, fracRes: 0.0718, norm(attn): 0.1396, norm(output): 0.2500, norm(x): 0.2387, norm(y): 1.0058, norm:1.7494, tok/sec: 101773.57, flops:106.81, batch-reuse:1
@ 1162 train 5.6279 , allloss: 5.6291, dt: 1282.07ms, fracRes: 0.0773, norm(attn): 0.1309, norm(output): 0.2500, norm(x): 0.2377, norm(y): 1.0059, norm:1.3955, tok/sec: 102235.00, flops:107.30, batch-reuse:1
@ 1163 train 5.7934 , allloss: 5.7944, dt: 1275.05ms, fracRes: 0.0737, norm(attn): 0.1338, norm(output): 0.2500, norm(x): 0.2386, norm(y): 1.0059, norm:1.7022, tok/sec: 102797.33, flops:107.89, batch-reuse:1
@ 1164 train 5.7205 , allloss: 5.7212, dt: 1316.12ms, fracRes: 0.0770, norm(attn): 0.1348, norm(output): 0.2500, norm(x): 0.2376, norm(y): 1.0059, norm:1.1880, tok/sec: 99589.69, flops:104.52, batch-reuse:1
@ 1165 train 5.7781 , allloss: 5.7789, dt: 1311.86ms, fracRes: 0.0770, norm(attn): 0.1377, norm(output): 0.2500, norm(x): 0.2378, norm(y): 1.0059, norm:1.5558, tok/sec: 99913.31, flops:104.86, batch-reuse:1
@ 1166 train 5.7483 , allloss: 5.7505, dt: 1291.21ms, fracRes: 0.0806, norm(attn): 0.1406, norm(output): 0.2490, norm(x): 0.2363, norm(y): 1.0059, norm:1.5249, tok/sec: 101510.90, flops:106.54, batch-reuse:1
@ 1167 train 5.7010 , allloss: 5.7033, dt: 1322.87ms, fracRes: 0.0788, norm(attn): 0.1396, norm(output): 0.2500, norm(x): 0.2372, norm(y): 1.0059, norm:1.5231, tok/sec: 99081.42, flops:103.99, batch-reuse:1
@ 1168 train 5.6195 , allloss: 5.6204, dt: 1314.60ms, fracRes: 0.0825, norm(attn): 0.1387, norm(output): 0.2500, norm(x): 0.2371, norm(y): 1.0059, norm:1.6382, tok/sec: 99704.67, flops:104.64, batch-reuse:1
@ 1169 train 5.7364 , allloss: 5.7375, dt: 1324.98ms, fracRes: 0.0813, norm(attn): 0.1387, norm(output): 0.2500, norm(x): 0.2377, norm(y): 1.0059, norm:1.6937, tok/sec: 98924.02, flops:103.82, batch-reuse:1
@ 1170 train 5.7024 , allloss: 5.7031, dt: 1290.81ms, fracRes: 0.0838, norm(attn): 0.1357, norm(output): 0.2500, norm(x): 0.2369, norm(y): 1.0058, norm:1.9744, tok/sec: 101542.23, flops:106.57, batch-reuse:1
@ 1171 train 5.6720 , allloss: 5.6726, dt: 1307.45ms, fracRes: 0.0853, norm(attn): 0.1377, norm(output): 0.2520, norm(x): 0.2378, norm(y): 1.0058, norm:1.3343, tok/sec: 100250.08, flops:105.21, batch-reuse:1
@ 1172 train 5.7968 , allloss: 5.7977, dt: 1279.65ms, fracRes: 0.0892, norm(attn): 0.1357, norm(output): 0.2500, norm(x): 0.2361, norm(y): 1.0059, norm:1.5707, tok/sec: 102427.67, flops:107.50, batch-reuse:1
@ 1173 train 5.7128 , allloss: 5.7140, dt: 1294.29ms, fracRes: 0.0810, norm(attn): 0.1396, norm(output): 0.2500, norm(x): 0.2380, norm(y): 1.0059, norm:1.8107, tok/sec: 101269.32, flops:106.28, batch-reuse:1
@ 1174 train 5.6347 , allloss: 5.6355, dt: 1301.23ms, fracRes: 0.0803, norm(attn): 0.1396, norm(output): 0.2500, norm(x): 0.2385, norm(y): 1.0059, norm:1.2418, tok/sec: 100729.59, flops:105.72, batch-reuse:1
@ 1175 train 5.7844 , allloss: 5.7851, dt: 1312.73ms, fracRes: 0.0856, norm(attn): 0.1367, norm(output): 0.2500, norm(x): 0.2378, norm(y): 1.0059, norm:1.9318, tok/sec: 99846.72, flops:104.79, batch-reuse:1
@ 1176 train 5.7516 , allloss: 5.7528, dt: 1291.75ms, fracRes: 0.0877, norm(attn): 0.1367, norm(output): 0.2500, norm(x): 0.2365, norm(y): 1.0060, norm:1.4504, tok/sec: 101468.55, flops:106.49, batch-reuse:1
@ 1177 train 5.7547 , allloss: 5.7555, dt: 1305.03ms, fracRes: 0.0814, norm(attn): 0.1387, norm(output): 0.2500, norm(x): 0.2381, norm(y): 1.0059, norm:1.7365, tok/sec: 100435.74, flops:105.41, batch-reuse:1
@ 1178 train 5.8661 , allloss: 5.8673, dt: 1282.49ms, fracRes: 0.0778, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2399, norm(y): 1.0059, norm:1.3800, tok/sec: 102201.58, flops:107.26, batch-reuse:1
@ 1179 train 5.7794 , allloss: 5.7814, dt: 1287.75ms, fracRes: 0.0785, norm(attn): 0.1387, norm(output): 0.2500, norm(x): 0.2390, norm(y): 1.0059, norm:1.4084, tok/sec: 101783.92, flops:106.82, batch-reuse:1
@ 1180 train 5.7639 , allloss: 5.7656, dt: 1278.40ms, fracRes: 0.0804, norm(attn): 0.1377, norm(output): 0.2500, norm(x): 0.2387, norm(y): 1.0060, norm:1.7680, tok/sec: 102528.53, flops:107.61, batch-reuse:1
@ 1181 train 5.6937 , allloss: 5.6959, dt: 1277.51ms, fracRes: 0.0771, norm(attn): 0.1367, norm(output): 0.2500, norm(x): 0.2387, norm(y): 1.0059, norm:1.4195, tok/sec: 102599.71, flops:107.68, batch-reuse:1
@ 1182 train 5.7300 , allloss: 5.7318, dt: 1302.08ms, fracRes: 0.0744, norm(attn): 0.1406, norm(output): 0.2520, norm(x): 0.2407, norm(y): 1.0059, norm:1.5688, tok/sec: 100663.30, flops:105.65, batch-reuse:1
@ 1183 train 5.7474 , allloss: 5.7480, dt: 1294.67ms, fracRes: 0.0757, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2402, norm(y): 1.0059, norm:2.0168, tok/sec: 101239.62, flops:106.25, batch-reuse:1
@ 1184 train 5.7131 , allloss: 5.7136, dt: 1276.47ms, fracRes: 0.0813, norm(attn): 0.1367, norm(output): 0.2520, norm(x): 0.2393, norm(y): 1.0060, norm:1.5692, tok/sec: 102683.42, flops:107.77, batch-reuse:1
@ 1185 train 5.7367 , allloss: 5.7372, dt: 1311.97ms, fracRes: 0.0836, norm(attn): 0.1406, norm(output): 0.2520, norm(x): 0.2386, norm(y): 1.0060, norm:1.6368, tok/sec: 99905.07, flops:104.85, batch-reuse:1
@ 1186 train 5.7312 , allloss: 5.7322, dt: 1329.32ms, fracRes: 0.0824, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2392, norm(y): 1.0060, norm:1.3589, tok/sec: 98600.51, flops:103.48, batch-reuse:1
@ 1187 train 5.7289 , allloss: 5.7319, dt: 1309.25ms, fracRes: 0.0798, norm(attn): 0.1426, norm(output): 0.2520, norm(x): 0.2404, norm(y): 1.0059, norm:1.6213, tok/sec: 100112.38, flops:105.07, batch-reuse:1
@ 1188 train 5.6361 , allloss: 5.6376, dt: 1310.91ms, fracRes: 0.0846, norm(attn): 0.1396, norm(output): 0.2500, norm(x): 0.2387, norm(y): 1.0060, norm:1.4695, tok/sec: 99985.69, flops:104.94, batch-reuse:1
@ 1189 train 5.6665 , allloss: 5.6676, dt: 1312.42ms, fracRes: 0.0899, norm(attn): 0.1396, norm(output): 0.2500, norm(x): 0.2382, norm(y): 1.0060, norm:1.6363, tok/sec: 99870.73, flops:104.82, batch-reuse:1
@ 1190 train 5.7806 , allloss: 5.7818, dt: 1295.53ms, fracRes: 0.0878, norm(attn): 0.1348, norm(output): 0.2520, norm(x): 0.2388, norm(y): 1.0060, norm:1.9666, tok/sec: 101172.24, flops:106.18, batch-reuse:1
@ 1191 train 5.8387 , allloss: 5.8400, dt: 1293.31ms, fracRes: 0.0836, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2396, norm(y): 1.0059, norm:1.4840, tok/sec: 101346.24, flops:106.36, batch-reuse:1
@ 1192 train 5.6817 , allloss: 5.6838, dt: 1299.68ms, fracRes: 0.0818, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2399, norm(y): 1.0059, norm:1.8313, tok/sec: 100849.66, flops:105.84, batch-reuse:1
@ 1193 train 5.7345 , allloss: 5.7384, dt: 1280.23ms, fracRes: 0.0841, norm(attn): 0.1348, norm(output): 0.2520, norm(x): 0.2400, norm(y): 1.0060, norm:1.4311, tok/sec: 102381.26, flops:107.45, batch-reuse:1
@ 1194 train 5.7322 , allloss: 5.7337, dt: 1293.86ms, fracRes: 0.0812, norm(attn): 0.1348, norm(output): 0.2520, norm(x): 0.2409, norm(y): 1.0060, norm:1.4845, tok/sec: 101303.19, flops:106.32, batch-reuse:1
@ 1195 train 5.7111 , allloss: 5.7122, dt: 1309.98ms, fracRes: 0.0801, norm(attn): 0.1387, norm(output): 0.2539, norm(x): 0.2422, norm(y): 1.0060, norm:1.5868, tok/sec: 100056.46, flops:105.01, batch-reuse:1
@ 1196 train 5.7154 , allloss: 5.7160, dt: 1331.18ms, fracRes: 0.0822, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2406, norm(y): 1.0060, norm:1.5254, tok/sec: 98463.06, flops:103.34, batch-reuse:1
@ 1197 train 5.6899 , allloss: 5.6917, dt: 1303.38ms, fracRes: 0.0870, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2401, norm(y): 1.0060, norm:2.1834, tok/sec: 100563.04, flops:105.54, batch-reuse:1
@ 1198 train 5.6753 , allloss: 5.6786, dt: 1278.01ms, fracRes: 0.0892, norm(attn): 0.1406, norm(output): 0.2539, norm(x): 0.2398, norm(y): 1.0060, norm:1.2500, tok/sec: 102559.42, flops:107.64, batch-reuse:1
@ 1199 train 5.7177 , allloss: 5.7201, dt: 1311.03ms, fracRes: 0.0863, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2409, norm(y): 1.0060, norm:1.4237, tok/sec: 99976.05, flops:104.93, batch-reuse:1
@ 1200 train 5.7058 , allloss: 5.7089, dt: 1307.68ms, fracRes: 0.0823, norm(attn): 0.1406, norm(output): 0.2539, norm(x): 0.2420, norm(y): 1.0060, norm:1.5277, tok/sec: 100232.59, flops:105.20, batch-reuse:1
@ 1201 train 5.7236 , allloss: 5.7252, dt: 1339.28ms, fracRes: 0.0839, norm(attn): 0.1406, norm(output): 0.2539, norm(x): 0.2413, norm(y): 1.0060, norm:2.0103, tok/sec: 97867.68, flops:102.71, batch-reuse:1
@ 1202 train 5.7413 , allloss: 5.7437, dt: 1303.30ms, fracRes: 0.0831, norm(attn): 0.1406, norm(output): 0.2520, norm(x): 0.2417, norm(y): 1.0060, norm:1.5769, tok/sec: 100569.28, flops:105.55, batch-reuse:1
@ 1203 train 6.0410 , allloss: 6.0424, dt: 1298.18ms, fracRes: 0.0847, norm(attn): 0.1416, norm(output): 0.2559, norm(x): 0.2428, norm(y): 1.0060, norm:1.6189, tok/sec: 100966.03, flops:105.97, batch-reuse:1
@ 1204 train 5.6913 , allloss: 5.6928, dt: 1309.42ms, fracRes: 0.0865, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2421, norm(y): 1.0061, norm:1.9521, tok/sec: 100099.20, flops:105.06, batch-reuse:1
@ 1205 train 5.6272 , allloss: 5.6290, dt: 1293.48ms, fracRes: 0.0906, norm(attn): 0.1406, norm(output): 0.2520, norm(x): 0.2403, norm(y): 1.0061, norm:1.7885, tok/sec: 101332.62, flops:106.35, batch-reuse:1
@ 1206 train 5.6534 , allloss: 5.6556, dt: 1288.09ms, fracRes: 0.0924, norm(attn): 0.1387, norm(output): 0.2520, norm(x): 0.2399, norm(y): 1.0061, norm:1.6320, tok/sec: 101756.51, flops:106.80, batch-reuse:1
@ 1207 train 5.6432 , allloss: 5.6453, dt: 1304.25ms, fracRes: 0.0929, norm(attn): 0.1396, norm(output): 0.2539, norm(x): 0.2400, norm(y): 1.0061, norm:1.4401, tok/sec: 100496.07, flops:105.47, batch-reuse:1
@ 1208 train 5.6080 , allloss: 5.6105, dt: 1296.23ms, fracRes: 0.0935, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2396, norm(y): 1.0061, norm:1.5649, tok/sec: 101117.48, flops:106.12, batch-reuse:1
@ 1209 train 5.6931 , allloss: 5.6945, dt: 1302.99ms, fracRes: 0.0935, norm(attn): 0.1416, norm(output): 0.2559, norm(x): 0.2414, norm(y): 1.0060, norm:1.4132, tok/sec: 100593.00, flops:105.57, batch-reuse:1
@ 1210 train 5.6131 , allloss: 5.6149, dt: 1332.12ms, fracRes: 0.1010, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2389, norm(y): 1.0061, norm:1.6603, tok/sec: 98393.88, flops:103.27, batch-reuse:1
@ 1211 train 5.6936 , allloss: 5.6951, dt: 1315.11ms, fracRes: 0.1000, norm(attn): 0.1396, norm(output): 0.2539, norm(x): 0.2395, norm(y): 1.0061, norm:1.4586, tok/sec: 99666.10, flops:104.60, batch-reuse:1
@ 1212 train 5.7495 , allloss: 5.7515, dt: 1308.39ms, fracRes: 0.0968, norm(attn): 0.1406, norm(output): 0.2539, norm(x): 0.2395, norm(y): 1.0061, norm:1.6899, tok/sec: 100177.74, flops:105.14, batch-reuse:1
@ 1213 train 5.6047 , allloss: 5.6067, dt: 1312.71ms, fracRes: 0.0974, norm(attn): 0.1426, norm(output): 0.2520, norm(x): 0.2397, norm(y): 1.0061, norm:1.7882, tok/sec: 99848.26, flops:104.79, batch-reuse:1
@ 1214 train 5.6411 , allloss: 5.6428, dt: 1302.71ms, fracRes: 0.0997, norm(attn): 0.1387, norm(output): 0.2559, norm(x): 0.2400, norm(y): 1.0062, norm:1.6745, tok/sec: 100614.90, flops:105.60, batch-reuse:1
@ 1215 train 5.6655 , allloss: 5.6680, dt: 1288.16ms, fracRes: 0.0960, norm(attn): 0.1406, norm(output): 0.2578, norm(x): 0.2416, norm(y): 1.0061, norm:1.3718, tok/sec: 101751.69, flops:106.79, batch-reuse:1
@ 1216 train 5.6363 , allloss: 5.6393, dt: 1281.44ms, fracRes: 0.0905, norm(attn): 0.1465, norm(output): 0.2539, norm(x): 0.2424, norm(y): 1.0061, norm:1.5766, tok/sec: 102285.29, flops:107.35, batch-reuse:1
@ 1217 train 5.6594 , allloss: 5.6624, dt: 1293.11ms, fracRes: 0.0923, norm(attn): 0.1416, norm(output): 0.2559, norm(x): 0.2424, norm(y): 1.0061, norm:1.3444, tok/sec: 101362.07, flops:106.38, batch-reuse:1
@ 1218 train 5.6045 , allloss: 5.6075, dt: 1301.34ms, fracRes: 0.0937, norm(attn): 0.1406, norm(output): 0.2559, norm(x): 0.2433, norm(y): 1.0062, norm:2.2428, tok/sec: 100720.79, flops:105.71, batch-reuse:1
@ 1219 train 5.5781 , allloss: 5.5795, dt: 1287.27ms, fracRes: 0.0888, norm(attn): 0.1387, norm(output): 0.2539, norm(x): 0.2427, norm(y): 1.0062, norm:1.4458, tok/sec: 101822.04, flops:106.86, batch-reuse:1
@ 1220 train 5.6459 , allloss: 5.6495, dt: 1291.76ms, fracRes: 0.0842, norm(attn): 0.1426, norm(output): 0.2539, norm(x): 0.2452, norm(y): 1.0061, norm:1.4993, tok/sec: 101467.51, flops:106.49, batch-reuse:1
@ 1221 train 5.5990 , allloss: 5.6019, dt: 1293.28ms, fracRes: 0.0877, norm(attn): 0.1426, norm(output): 0.2559, norm(x): 0.2438, norm(y): 1.0061, norm:1.3541, tok/sec: 101348.80, flops:106.37, batch-reuse:1
@ 1222 train 5.6189 , allloss: 5.6238, dt: 1277.28ms, fracRes: 0.0954, norm(attn): 0.1377, norm(output): 0.2559, norm(x): 0.2425, norm(y): 1.0062, norm:1.7760, tok/sec: 102618.38, flops:107.70, batch-reuse:1
@ 1223 train 5.5842 , allloss: 5.5874, dt: 1301.35ms, fracRes: 0.0973, norm(attn): 0.1387, norm(output): 0.2578, norm(x): 0.2432, norm(y): 1.0062, norm:1.6857, tok/sec: 100719.74, flops:105.71, batch-reuse:1
@ 1224 train 5.5627 , allloss: 5.5642, dt: 1308.23ms, fracRes: 0.0949, norm(attn): 0.1396, norm(output): 0.2578, norm(x): 0.2424, norm(y): 1.0062, norm:1.4630, tok/sec: 100190.49, flops:105.15, batch-reuse:1
@ 1225 train 5.6063 , allloss: 5.6093, dt: 1332.79ms, fracRes: 0.0946, norm(attn): 0.1455, norm(output): 0.2578, norm(x): 0.2438, norm(y): 1.0061, norm:1.7767, tok/sec: 98343.77, flops:103.21, batch-reuse:1
@ 1226 train 5.6730 , allloss: 5.6793, dt: 1273.22ms, fracRes: 0.0975, norm(attn): 0.1416, norm(output): 0.2559, norm(x): 0.2426, norm(y): 1.0061, norm:1.4166, tok/sec: 102945.48, flops:108.04, batch-reuse:1
@ 1227 train 5.6205 , allloss: 5.6231, dt: 1272.80ms, fracRes: 0.1009, norm(attn): 0.1396, norm(output): 0.2559, norm(x): 0.2411, norm(y): 1.0062, norm:1.8965, tok/sec: 102979.22, flops:108.08, batch-reuse:1
@ 1228 train 5.5865 , allloss: 5.5882, dt: 1275.58ms, fracRes: 0.1039, norm(attn): 0.1377, norm(output): 0.2559, norm(x): 0.2412, norm(y): 1.0063, norm:1.8677, tok/sec: 102754.79, flops:107.84, batch-reuse:1
@ 1229 train 5.6135 , allloss: 5.6154, dt: 1277.90ms, fracRes: 0.1024, norm(attn): 0.1396, norm(output): 0.2559, norm(x): 0.2418, norm(y): 1.0062, norm:1.6543, tok/sec: 102568.49, flops:107.65, batch-reuse:1
@ 1230 train 5.6209 , allloss: 5.6251, dt: 1296.97ms, fracRes: 0.1009, norm(attn): 0.1406, norm(output): 0.2578, norm(x): 0.2424, norm(y): 1.0062, norm:1.6510, tok/sec: 101060.26, flops:106.06, batch-reuse:1
@ 1231 train 5.5942 , allloss: 5.5969, dt: 1294.70ms, fracRes: 0.1066, norm(attn): 0.1416, norm(output): 0.2559, norm(x): 0.2407, norm(y): 1.0062, norm:1.5704, tok/sec: 101237.10, flops:106.25, batch-reuse:1
@ 1232 train 5.5692 , allloss: 5.5716, dt: 1295.52ms, fracRes: 0.1052, norm(attn): 0.1396, norm(output): 0.2539, norm(x): 0.2410, norm(y): 1.0062, norm:1.4678, tok/sec: 101173.53, flops:106.18, batch-reuse:1
@ 1233 train 5.5748 , allloss: 5.5770, dt: 1297.05ms, fracRes: 0.1055, norm(attn): 0.1406, norm(output): 0.2559, norm(x): 0.2413, norm(y): 1.0062, norm:1.5003, tok/sec: 101053.63, flops:106.06, batch-reuse:1
@ 1234 train 5.6024 , allloss: 5.6043, dt: 1302.26ms, fracRes: 0.1029, norm(attn): 0.1396, norm(output): 0.2617, norm(x): 0.2423, norm(y): 1.0062, norm:1.5704, tok/sec: 100649.96, flops:105.63, batch-reuse:1
@ 1235 train 5.6608 , allloss: 5.6621, dt: 1305.49ms, fracRes: 0.1034, norm(attn): 0.1416, norm(output): 0.2598, norm(x): 0.2424, norm(y): 1.0062, norm:1.7166, tok/sec: 100400.98, flops:105.37, batch-reuse:1
@ 1236 train 5.5786 , allloss: 5.5796, dt: 1322.45ms, fracRes: 0.1042, norm(attn): 0.1436, norm(output): 0.2598, norm(x): 0.2418, norm(y): 1.0062, norm:1.6015, tok/sec: 99113.14, flops:104.02, batch-reuse:1
@ 1237 train 5.6321 , allloss: 5.6336, dt: 1286.60ms, fracRes: 0.1080, norm(attn): 0.1416, norm(output): 0.2578, norm(x): 0.2409, norm(y): 1.0063, norm:1.7479, tok/sec: 101874.70, flops:106.92, batch-reuse:1
@ 1238 train 5.5744 , allloss: 5.5760, dt: 1294.25ms, fracRes: 0.1065, norm(attn): 0.1416, norm(output): 0.2559, norm(x): 0.2415, norm(y): 1.0063, norm:1.3582, tok/sec: 101272.49, flops:106.29, batch-reuse:1
@ 1239 train 5.5356 , allloss: 5.5370, dt: 1290.88ms, fracRes: 0.1040, norm(attn): 0.1436, norm(output): 0.2598, norm(x): 0.2427, norm(y): 1.0062, norm:1.7447, tok/sec: 101537.16, flops:106.57, batch-reuse:1
@ 1240 train 5.5552 , allloss: 5.5573, dt: 1296.59ms, fracRes: 0.1056, norm(attn): 0.1416, norm(output): 0.2598, norm(x): 0.2424, norm(y): 1.0062, norm:1.5500, tok/sec: 101089.55, flops:106.10, batch-reuse:1
@ 1241 train 5.5424 , allloss: 5.5445, dt: 1303.79ms, fracRes: 0.1031, norm(attn): 0.1406, norm(output): 0.2617, norm(x): 0.2425, norm(y): 1.0062, norm:1.4925, tok/sec: 100531.72, flops:105.51, batch-reuse:1
@ 1242 train 5.5896 , allloss: 5.5917, dt: 1335.10ms, fracRes: 0.1042, norm(attn): 0.1416, norm(output): 0.2617, norm(x): 0.2430, norm(y): 1.0062, norm:1.4828, tok/sec: 98173.87, flops:103.04, batch-reuse:1
@ 1243 train 5.5962 , allloss: 5.5981, dt: 1312.71ms, fracRes: 0.1072, norm(attn): 0.1416, norm(output): 0.2598, norm(x): 0.2421, norm(y): 1.0063, norm:1.4552, tok/sec: 99848.11, flops:104.79, batch-reuse:1
@ 1244 train 5.5981 , allloss: 5.5993, dt: 1288.59ms, fracRes: 0.1059, norm(attn): 0.1416, norm(output): 0.2617, norm(x): 0.2430, norm(y): 1.0063, norm:1.2380, tok/sec: 101717.25, flops:106.75, batch-reuse:1
@ 1245 train 5.5703 , allloss: 5.5714, dt: 1289.64ms, fracRes: 0.1088, norm(attn): 0.1406, norm(output): 0.2617, norm(x): 0.2423, norm(y): 1.0063, norm:1.5465, tok/sec: 101634.81, flops:106.67, batch-reuse:1
@ 1246 train 5.6029 , allloss: 5.6045, dt: 1284.60ms, fracRes: 0.1061, norm(attn): 0.1406, norm(output): 0.2637, norm(x): 0.2439, norm(y): 1.0063, norm:2.2399, tok/sec: 102033.18, flops:107.09, batch-reuse:1
@ 1247 train 5.5085 , allloss: 5.5117, dt: 1295.64ms, fracRes: 0.1055, norm(attn): 0.1416, norm(output): 0.2637, norm(x): 0.2433, norm(y): 1.0063, norm:1.3618, tok/sec: 101164.05, flops:106.17, batch-reuse:1
@ 1248 train 5.6121 , allloss: 5.6140, dt: 1280.91ms, fracRes: 0.1041, norm(attn): 0.1416, norm(output): 0.2617, norm(x): 0.2432, norm(y): 1.0063, norm:1.7854, tok/sec: 102327.59, flops:107.39, batch-reuse:1
@ 1249 train 5.5020 , allloss: 5.5037, dt: 1313.21ms, fracRes: 0.1023, norm(attn): 0.1416, norm(output): 0.2598, norm(x): 0.2443, norm(y): 1.0063, norm:1.7052, tok/sec: 99810.13, flops:104.75, batch-reuse:1
@ 1250 train 5.6167 , allloss: 5.6187, dt: 1280.70ms, fracRes: 0.1080, norm(attn): 0.1416, norm(output): 0.2617, norm(x): 0.2433, norm(y): 1.0063, norm:1.8873, tok/sec: 102344.07, flops:107.41, batch-reuse:1
@ 1251 train 5.5516 , allloss: 5.5539, dt: 1302.37ms, fracRes: 0.1122, norm(attn): 0.1406, norm(output): 0.2617, norm(x): 0.2425, norm(y): 1.0063, norm:1.4247, tok/sec: 100641.30, flops:105.62, batch-reuse:1
@ 1252 train 5.5677 , allloss: 5.5699, dt: 1305.31ms, fracRes: 0.1080, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2454, norm(y): 1.0062, norm:1.5878, tok/sec: 100414.26, flops:105.39, batch-reuse:1
@ 1253 train 5.4479 , allloss: 5.4505, dt: 1319.72ms, fracRes: 0.1106, norm(attn): 0.1426, norm(output): 0.2617, norm(x): 0.2428, norm(y): 1.0063, norm:1.3112, tok/sec: 99318.34, flops:104.24, batch-reuse:1
@ 1254 train 5.5433 , allloss: 5.5459, dt: 1293.90ms, fracRes: 0.1106, norm(attn): 0.1416, norm(output): 0.2617, norm(x): 0.2429, norm(y): 1.0063, norm:1.7344, tok/sec: 101299.93, flops:106.32, batch-reuse:1
@ 1255 train 5.5763 , allloss: 5.5776, dt: 1302.76ms, fracRes: 0.1126, norm(attn): 0.1396, norm(output): 0.2617, norm(x): 0.2423, norm(y): 1.0064, norm:1.6199, tok/sec: 100610.80, flops:105.59, batch-reuse:1
@ 1256 train 5.5055 , allloss: 5.5071, dt: 1322.44ms, fracRes: 0.1098, norm(attn): 0.1445, norm(output): 0.2637, norm(x): 0.2440, norm(y): 1.0063, norm:1.9416, tok/sec: 99113.91, flops:104.02, batch-reuse:1
@ 1257 train 5.5599 , allloss: 5.5618, dt: 1313.39ms, fracRes: 0.1107, norm(attn): 0.1445, norm(output): 0.2617, norm(x): 0.2429, norm(y): 1.0063, norm:1.5478, tok/sec: 99796.73, flops:104.74, batch-reuse:1
@ 1258 train 5.5077 , allloss: 5.5113, dt: 1277.78ms, fracRes: 0.1124, norm(attn): 0.1416, norm(output): 0.2637, norm(x): 0.2426, norm(y): 1.0064, norm:1.7492, tok/sec: 102577.75, flops:107.66, batch-reuse:1
@ 1259 train 5.5565 , allloss: 5.5593, dt: 1279.83ms, fracRes: 0.1107, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2441, norm(y): 1.0064, norm:1.6149, tok/sec: 102413.93, flops:107.49, batch-reuse:1
@ 1260 train 5.4842 , allloss: 5.4863, dt: 1283.56ms, fracRes: 0.1054, norm(attn): 0.1416, norm(output): 0.2637, norm(x): 0.2452, norm(y): 1.0063, norm:1.6428, tok/sec: 102116.16, flops:107.17, batch-reuse:1
@ 1261 train 5.5147 , allloss: 5.5162, dt: 1292.71ms, fracRes: 0.1060, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2445, norm(y): 1.0064, norm:1.9867, tok/sec: 101393.01, flops:106.41, batch-reuse:1
@ 1262 train 5.4925 , allloss: 5.4947, dt: 1303.25ms, fracRes: 0.1051, norm(attn): 0.1445, norm(output): 0.2637, norm(x): 0.2452, norm(y): 1.0063, norm:1.5829, tok/sec: 100573.53, flops:105.55, batch-reuse:1
@ 1263 train 5.4924 , allloss: 5.4965, dt: 1348.62ms, fracRes: 0.1073, norm(attn): 0.1455, norm(output): 0.2637, norm(x): 0.2449, norm(y): 1.0063, norm:1.9376, tok/sec: 97189.47, flops:102.00, batch-reuse:1
@ 1264 train 5.6159 , allloss: 5.6181, dt: 1359.84ms, fracRes: 0.1134, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2430, norm(y): 1.0064, norm:1.7624, tok/sec: 96387.51, flops:101.16, batch-reuse:1
@ 1265 train 5.5132 , allloss: 5.5148, dt: 1325.81ms, fracRes: 0.1123, norm(attn): 0.1416, norm(output): 0.2617, norm(x): 0.2431, norm(y): 1.0064, norm:1.6951, tok/sec: 98861.71, flops:103.76, batch-reuse:1
@ 1266 train 5.5278 , allloss: 5.5304, dt: 1304.60ms, fracRes: 0.1108, norm(attn): 0.1436, norm(output): 0.2637, norm(x): 0.2440, norm(y): 1.0063, norm:1.4029, tok/sec: 100469.11, flops:105.44, batch-reuse:1
@ 1267 train 5.5628 , allloss: 5.5647, dt: 1299.27ms, fracRes: 0.1143, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2438, norm(y): 1.0064, norm:1.4264, tok/sec: 100881.29, flops:105.88, batch-reuse:1
@ 1268 train 5.5596 , allloss: 5.5628, dt: 1289.09ms, fracRes: 0.1176, norm(attn): 0.1455, norm(output): 0.2637, norm(x): 0.2428, norm(y): 1.0064, norm:1.8160, tok/sec: 101677.69, flops:106.71, batch-reuse:1
@ 1269 train 5.5300 , allloss: 5.5328, dt: 1291.69ms, fracRes: 0.1160, norm(attn): 0.1465, norm(output): 0.2637, norm(x): 0.2436, norm(y): 1.0064, norm:1.5136, tok/sec: 101472.92, flops:106.50, batch-reuse:1
@ 1270 train 5.4632 , allloss: 5.4651, dt: 1308.49ms, fracRes: 0.1154, norm(attn): 0.1436, norm(output): 0.2637, norm(x): 0.2441, norm(y): 1.0064, norm:1.7078, tok/sec: 100170.09, flops:105.13, batch-reuse:1
@ 1271 train 5.4724 , allloss: 5.4746, dt: 1311.18ms, fracRes: 0.1097, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2462, norm(y): 1.0064, norm:1.6651, tok/sec: 99964.93, flops:104.92, batch-reuse:1
@ 1272 train 5.4731 , allloss: 5.4758, dt: 1289.89ms, fracRes: 0.1087, norm(attn): 0.1475, norm(output): 0.2656, norm(x): 0.2469, norm(y): 1.0064, norm:1.3935, tok/sec: 101615.03, flops:106.65, batch-reuse:1
@ 1273 train 5.5975 , allloss: 5.5988, dt: 1289.22ms, fracRes: 0.1108, norm(attn): 0.1406, norm(output): 0.2656, norm(x): 0.2455, norm(y): 1.0065, norm:1.7858, tok/sec: 101667.97, flops:106.70, batch-reuse:1
@ 1274 train 5.4815 , allloss: 5.4835, dt: 1277.95ms, fracRes: 0.1119, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2450, norm(y): 1.0065, norm:1.7109, tok/sec: 102564.51, flops:107.64, batch-reuse:1
@ 1275 train 5.6391 , allloss: 5.6414, dt: 1286.31ms, fracRes: 0.1054, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2480, norm(y): 1.0064, norm:1.5853, tok/sec: 101898.02, flops:106.94, batch-reuse:1
@ 1276 train 5.4423 , allloss: 5.4444, dt: 1286.66ms, fracRes: 0.1071, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2470, norm(y): 1.0064, norm:1.5674, tok/sec: 101869.90, flops:106.91, batch-reuse:1
@ 1277 train 5.4333 , allloss: 5.4357, dt: 1290.01ms, fracRes: 0.1077, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2466, norm(y): 1.0065, norm:2.0270, tok/sec: 101605.21, flops:106.64, batch-reuse:1
@ 1278 train 5.5496 , allloss: 5.5515, dt: 1278.39ms, fracRes: 0.1046, norm(attn): 0.1426, norm(output): 0.2656, norm(x): 0.2477, norm(y): 1.0064, norm:1.6086, tok/sec: 102528.57, flops:107.61, batch-reuse:1
@ 1279 train 5.6306 , allloss: 5.6330, dt: 1271.78ms, fracRes: 0.1029, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2481, norm(y): 1.0064, norm:1.3870, tok/sec: 103061.48, flops:108.16, batch-reuse:1
@ 1280 train 5.4356 , allloss: 5.4370, dt: 1285.16ms, fracRes: 0.1060, norm(attn): 0.1416, norm(output): 0.2637, norm(x): 0.2469, norm(y): 1.0064, norm:1.9556, tok/sec: 101988.89, flops:107.04, batch-reuse:1
@ 1281 train 5.4551 , allloss: 5.4568, dt: 1286.66ms, fracRes: 0.1058, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2470, norm(y): 1.0064, norm:1.9725, tok/sec: 101870.28, flops:106.91, batch-reuse:1
@ 1282 train 5.4528 , allloss: 5.4563, dt: 1301.15ms, fracRes: 0.1042, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2477, norm(y): 1.0064, norm:1.3788, tok/sec: 100735.35, flops:105.72, batch-reuse:1
@ 1283 train 5.4993 , allloss: 5.5015, dt: 1290.37ms, fracRes: 0.1069, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2476, norm(y): 1.0064, norm:1.7283, tok/sec: 101576.73, flops:106.61, batch-reuse:1
@ 1284 train 5.4525 , allloss: 5.4550, dt: 1305.96ms, fracRes: 0.1146, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2460, norm(y): 1.0065, norm:1.6888, tok/sec: 100364.19, flops:105.33, batch-reuse:1
@ 1285 train 5.3844 , allloss: 5.3876, dt: 1314.51ms, fracRes: 0.1222, norm(attn): 0.1416, norm(output): 0.2656, norm(x): 0.2436, norm(y): 1.0065, norm:1.6900, tok/sec: 99712.02, flops:104.65, batch-reuse:1
@ 1286 train 5.6095 , allloss: 5.6115, dt: 1297.46ms, fracRes: 0.1177, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2455, norm(y): 1.0065, norm:1.9938, tok/sec: 101021.97, flops:106.02, batch-reuse:1
@ 1287 train 5.5356 , allloss: 5.5375, dt: 1291.97ms, fracRes: 0.1133, norm(attn): 0.1494, norm(output): 0.2656, norm(x): 0.2472, norm(y): 1.0064, norm:1.9032, tok/sec: 101451.14, flops:106.47, batch-reuse:1
@ 1288 train 5.5017 , allloss: 5.5039, dt: 1296.68ms, fracRes: 0.1158, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2457, norm(y): 1.0065, norm:1.5714, tok/sec: 101082.41, flops:106.09, batch-reuse:1
@ 1289 train 5.4279 , allloss: 5.4321, dt: 1275.09ms, fracRes: 0.1153, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2458, norm(y): 1.0065, norm:1.7051, tok/sec: 102794.62, flops:107.88, batch-reuse:1
@ 1290 train 5.4331 , allloss: 5.4352, dt: 1290.83ms, fracRes: 0.1202, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2457, norm(y): 1.0065, norm:1.9832, tok/sec: 101541.21, flops:106.57, batch-reuse:1
@ 1291 train 5.4869 , allloss: 5.4894, dt: 1294.58ms, fracRes: 0.1158, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2473, norm(y): 1.0064, norm:1.3294, tok/sec: 101246.61, flops:106.26, batch-reuse:1
@ 1292 train 5.4469 , allloss: 5.4492, dt: 1299.92ms, fracRes: 0.1162, norm(attn): 0.1426, norm(output): 0.2656, norm(x): 0.2469, norm(y): 1.0065, norm:2.1071, tok/sec: 100830.67, flops:105.82, batch-reuse:1
@ 1293 train 5.4985 , allloss: 5.5010, dt: 1292.19ms, fracRes: 0.1152, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2473, norm(y): 1.0065, norm:2.6235, tok/sec: 101434.22, flops:106.46, batch-reuse:1
@ 1294 train 5.4082 , allloss: 5.4134, dt: 1324.90ms, fracRes: 0.1158, norm(attn): 0.1475, norm(output): 0.2656, norm(x): 0.2469, norm(y): 1.0065, norm:1.4561, tok/sec: 98929.95, flops:103.83, batch-reuse:1
@ 1295 train 5.5788 , allloss: 5.5832, dt: 1280.73ms, fracRes: 0.1203, norm(attn): 0.1416, norm(output): 0.2656, norm(x): 0.2459, norm(y): 1.0065, norm:2.1569, tok/sec: 102342.03, flops:107.41, batch-reuse:1
@ 1296 train 5.5307 , allloss: 5.5329, dt: 1273.65ms, fracRes: 0.1206, norm(attn): 0.1426, norm(output): 0.2676, norm(x): 0.2469, norm(y): 1.0066, norm:1.6086, tok/sec: 102910.44, flops:108.01, batch-reuse:1
@ 1297 train 5.5854 , allloss: 5.5879, dt: 1292.39ms, fracRes: 0.1188, norm(attn): 0.1426, norm(output): 0.2676, norm(x): 0.2480, norm(y): 1.0066, norm:1.6806, tok/sec: 101418.07, flops:106.44, batch-reuse:1
@ 1298 train 5.6915 , allloss: 5.6963, dt: 1293.84ms, fracRes: 0.1146, norm(attn): 0.1455, norm(output): 0.2676, norm(x): 0.2495, norm(y): 1.0065, norm:1.9909, tok/sec: 101304.46, flops:106.32, batch-reuse:1
@ 1299 train 5.6697 , allloss: 5.6713, dt: 1308.64ms, fracRes: 0.1150, norm(attn): 0.1445, norm(output): 0.2676, norm(x): 0.2500, norm(y): 1.0065, norm:1.8272, tok/sec: 100159.00, flops:105.12, batch-reuse:1
@ 1300 train 5.6191 , allloss: 5.6217, dt: 1299.70ms, fracRes: 0.1184, norm(attn): 0.1465, norm(output): 0.2695, norm(x): 0.2497, norm(y): 1.0065, norm:1.9459, tok/sec: 100847.66, flops:105.84, batch-reuse:1
@ 1301 train 5.7018 , allloss: 5.7035, dt: 1309.66ms, fracRes: 0.1234, norm(attn): 0.1445, norm(output): 0.2676, norm(x): 0.2479, norm(y): 1.0065, norm:1.8354, tok/sec: 100080.79, flops:105.04, batch-reuse:1
@ 1302 train 5.6655 , allloss: 5.6675, dt: 1315.10ms, fracRes: 0.1218, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2482, norm(y): 1.0065, norm:1.7984, tok/sec: 99666.75, flops:104.60, batch-reuse:1
@ 1303 train 5.7347 , allloss: 5.7369, dt: 1297.13ms, fracRes: 0.1220, norm(attn): 0.1455, norm(output): 0.2676, norm(x): 0.2477, norm(y): 1.0065, norm:1.8499, tok/sec: 101047.74, flops:106.05, batch-reuse:1
@ 1304 train 5.6782 , allloss: 5.6801, dt: 1304.46ms, fracRes: 0.1215, norm(attn): 0.1455, norm(output): 0.2676, norm(x): 0.2478, norm(y): 1.0065, norm:1.6166, tok/sec: 100480.15, flops:105.46, batch-reuse:1
@ 1305 train 5.6303 , allloss: 5.6322, dt: 1305.63ms, fracRes: 0.1224, norm(attn): 0.1445, norm(output): 0.2676, norm(x): 0.2482, norm(y): 1.0066, norm:1.9278, tok/sec: 100390.18, flops:105.36, batch-reuse:1
@ 1306 train 5.5545 , allloss: 5.5583, dt: 1289.25ms, fracRes: 0.1235, norm(attn): 0.1465, norm(output): 0.2676, norm(x): 0.2474, norm(y): 1.0066, norm:1.9638, tok/sec: 101665.00, flops:106.70, batch-reuse:1
@ 1307 train 5.7230 , allloss: 5.7257, dt: 1284.11ms, fracRes: 0.1206, norm(attn): 0.1465, norm(output): 0.2676, norm(x): 0.2494, norm(y): 1.0065, norm:2.0399, tok/sec: 102072.51, flops:107.13, batch-reuse:1
@ 1308 train 5.6983 , allloss: 5.7013, dt: 1286.10ms, fracRes: 0.1205, norm(attn): 0.1406, norm(output): 0.2676, norm(x): 0.2492, norm(y): 1.0066, norm:1.8880, tok/sec: 101914.19, flops:106.96, batch-reuse:1
@ 1309 train 5.6762 , allloss: 5.6792, dt: 1281.69ms, fracRes: 0.1215, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2498, norm(y): 1.0066, norm:1.6472, tok/sec: 102264.82, flops:107.33, batch-reuse:1
@ 1310 train 5.6332 , allloss: 5.6355, dt: 1287.73ms, fracRes: 0.1221, norm(attn): 0.1436, norm(output): 0.2695, norm(x): 0.2494, norm(y): 1.0066, norm:1.6909, tok/sec: 101785.50, flops:106.83, batch-reuse:1
@ 1311 train 5.6658 , allloss: 5.6687, dt: 1311.54ms, fracRes: 0.1228, norm(attn): 0.1465, norm(output): 0.2695, norm(x): 0.2490, norm(y): 1.0066, norm:2.0334, tok/sec: 99937.21, flops:104.89, batch-reuse:1
@ 1312 train 5.6583 , allloss: 5.6620, dt: 1296.57ms, fracRes: 0.1159, norm(attn): 0.1484, norm(output): 0.2695, norm(x): 0.2504, norm(y): 1.0066, norm:2.0477, tok/sec: 101091.13, flops:106.10, batch-reuse:1
@ 1313 train 5.6986 , allloss: 5.7016, dt: 1290.84ms, fracRes: 0.1195, norm(attn): 0.1465, norm(output): 0.2676, norm(x): 0.2498, norm(y): 1.0066, norm:1.9899, tok/sec: 101540.07, flops:106.57, batch-reuse:1
@ 1314 train 5.6565 , allloss: 5.6607, dt: 1300.21ms, fracRes: 0.1218, norm(attn): 0.1465, norm(output): 0.2695, norm(x): 0.2492, norm(y): 1.0066, norm:1.8132, tok/sec: 100808.26, flops:105.80, batch-reuse:1
@ 1315 train 5.6394 , allloss: 5.6417, dt: 1305.54ms, fracRes: 0.1209, norm(attn): 0.1465, norm(output): 0.2695, norm(x): 0.2495, norm(y): 1.0066, norm:2.2606, tok/sec: 100396.89, flops:105.37, batch-reuse:1
@ 1316 train 5.5752 , allloss: 5.5778, dt: 1309.22ms, fracRes: 0.1184, norm(attn): 0.1504, norm(output): 0.2715, norm(x): 0.2511, norm(y): 1.0065, norm:1.6582, tok/sec: 100114.86, flops:105.07, batch-reuse:1
@ 1317 train 5.6795 , allloss: 5.6811, dt: 1282.13ms, fracRes: 0.1250, norm(attn): 0.1465, norm(output): 0.2695, norm(x): 0.2491, norm(y): 1.0066, norm:1.6078, tok/sec: 102230.07, flops:107.29, batch-reuse:1
@ 1318 train 5.5650 , allloss: 5.5679, dt: 1288.06ms, fracRes: 0.1224, norm(attn): 0.1436, norm(output): 0.2676, norm(x): 0.2499, norm(y): 1.0066, norm:1.7856, tok/sec: 101759.48, flops:106.80, batch-reuse:1
@ 1319 train 5.6757 , allloss: 5.6798, dt: 1289.57ms, fracRes: 0.1229, norm(attn): 0.1465, norm(output): 0.2715, norm(x): 0.2504, norm(y): 1.0066, norm:1.5669, tok/sec: 101639.75, flops:106.67, batch-reuse:1
@ 1320 train 5.7025 , allloss: 5.7052, dt: 1282.00ms, fracRes: 0.1273, norm(attn): 0.1416, norm(output): 0.2695, norm(x): 0.2492, norm(y): 1.0066, norm:1.7183, tok/sec: 102240.40, flops:107.30, batch-reuse:1
@ 1321 train 5.6478 , allloss: 5.6491, dt: 1303.00ms, fracRes: 0.1240, norm(attn): 0.1436, norm(output): 0.2695, norm(x): 0.2507, norm(y): 1.0066, norm:1.4169, tok/sec: 100592.70, flops:105.57, batch-reuse:1
@ 1322 train 5.6360 , allloss: 5.6384, dt: 1287.55ms, fracRes: 0.1246, norm(attn): 0.1455, norm(output): 0.2734, norm(x): 0.2509, norm(y): 1.0066, norm:1.7184, tok/sec: 101799.24, flops:106.84, batch-reuse:1
@ 1323 train 5.6396 , allloss: 5.6418, dt: 1271.61ms, fracRes: 0.1293, norm(attn): 0.1475, norm(output): 0.2695, norm(x): 0.2494, norm(y): 1.0066, norm:2.1590, tok/sec: 103075.38, flops:108.18, batch-reuse:1
@ 1324 train 5.6697 , allloss: 5.6729, dt: 1267.08ms, fracRes: 0.1308, norm(attn): 0.1475, norm(output): 0.2676, norm(x): 0.2484, norm(y): 1.0066, norm:1.9539, tok/sec: 103444.37, flops:108.57, batch-reuse:1
@ 1325 train 5.5889 , allloss: 5.5914, dt: 1328.79ms, fracRes: 0.1291, norm(attn): 0.1475, norm(output): 0.2695, norm(x): 0.2491, norm(y): 1.0066, norm:1.6411, tok/sec: 98640.14, flops:103.52, batch-reuse:1
@ 1326 train 5.5491 , allloss: 5.5508, dt: 1301.00ms, fracRes: 0.1298, norm(attn): 0.1465, norm(output): 0.2715, norm(x): 0.2502, norm(y): 1.0067, norm:1.4161, tok/sec: 100747.50, flops:105.74, batch-reuse:1
@ 1327 train 5.6862 , allloss: 5.6870, dt: 1293.46ms, fracRes: 0.1280, norm(attn): 0.1465, norm(output): 0.2754, norm(x): 0.2513, norm(y): 1.0067, norm:2.1360, tok/sec: 101334.73, flops:106.35, batch-reuse:1
@ 1328 train 5.6090 , allloss: 5.6106, dt: 1315.76ms, fracRes: 0.1268, norm(attn): 0.1504, norm(output): 0.2754, norm(x): 0.2522, norm(y): 1.0066, norm:1.5149, tok/sec: 99617.14, flops:104.55, batch-reuse:1
@ 1329 train 5.6265 , allloss: 5.6282, dt: 1286.60ms, fracRes: 0.1247, norm(attn): 0.1445, norm(output): 0.2715, norm(x): 0.2515, norm(y): 1.0067, norm:1.7129, tok/sec: 101874.40, flops:106.92, batch-reuse:1
@ 1330 train 5.7022 , allloss: 5.7036, dt: 1300.29ms, fracRes: 0.1274, norm(attn): 0.1455, norm(output): 0.2715, norm(x): 0.2510, norm(y): 1.0067, norm:2.1734, tok/sec: 100802.29, flops:105.79, batch-reuse:1
@ 1331 train 5.6525 , allloss: 5.6553, dt: 1289.60ms, fracRes: 0.1287, norm(attn): 0.1465, norm(output): 0.2715, norm(x): 0.2510, norm(y): 1.0067, norm:1.5398, tok/sec: 101637.86, flops:106.67, batch-reuse:1
@ 1332 train 5.5835 , allloss: 5.5866, dt: 1281.21ms, fracRes: 0.1308, norm(attn): 0.1465, norm(output): 0.2715, norm(x): 0.2505, norm(y): 1.0067, norm:1.5369, tok/sec: 102303.11, flops:107.37, batch-reuse:1
@ 1333 train 5.5777 , allloss: 5.5800, dt: 1279.75ms, fracRes: 0.1236, norm(attn): 0.1484, norm(output): 0.2754, norm(x): 0.2529, norm(y): 1.0066, norm:1.7562, tok/sec: 102420.38, flops:107.49, batch-reuse:1
@ 1334 train 5.6029 , allloss: 5.6042, dt: 1282.37ms, fracRes: 0.1244, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2528, norm(y): 1.0067, norm:1.9493, tok/sec: 102210.80, flops:107.27, batch-reuse:1
@ 1335 train 5.6417 , allloss: 5.6442, dt: 1308.04ms, fracRes: 0.1216, norm(attn): 0.1465, norm(output): 0.2754, norm(x): 0.2528, norm(y): 1.0067, norm:1.7775, tok/sec: 100205.20, flops:105.17, batch-reuse:1
@ 1336 train 5.6456 , allloss: 5.6492, dt: 1300.83ms, fracRes: 0.1267, norm(attn): 0.1455, norm(output): 0.2754, norm(x): 0.2528, norm(y): 1.0067, norm:1.9066, tok/sec: 100760.07, flops:105.75, batch-reuse:1
@ 1337 train 5.6308 , allloss: 5.6338, dt: 1286.45ms, fracRes: 0.1278, norm(attn): 0.1504, norm(output): 0.2773, norm(x): 0.2527, norm(y): 1.0066, norm:1.6999, tok/sec: 101886.31, flops:106.93, batch-reuse:1
@ 1338 train 5.6313 , allloss: 5.6335, dt: 1292.18ms, fracRes: 0.1287, norm(attn): 0.1484, norm(output): 0.2754, norm(x): 0.2524, norm(y): 1.0067, norm:1.6081, tok/sec: 101435.06, flops:106.46, batch-reuse:1
@ 1339 train 5.6266 , allloss: 5.6288, dt: 1292.98ms, fracRes: 0.1327, norm(attn): 0.1494, norm(output): 0.2773, norm(x): 0.2516, norm(y): 1.0067, norm:1.6938, tok/sec: 101372.14, flops:106.39, batch-reuse:1
@ 1340 train 5.5863 , allloss: 5.5880, dt: 1284.27ms, fracRes: 0.1304, norm(attn): 0.1475, norm(output): 0.2773, norm(x): 0.2523, norm(y): 1.0067, norm:1.5136, tok/sec: 102059.70, flops:107.11, batch-reuse:1
@ 1341 train 5.6701 , allloss: 5.6714, dt: 1276.00ms, fracRes: 0.1360, norm(attn): 0.1465, norm(output): 0.2754, norm(x): 0.2503, norm(y): 1.0068, norm:2.2666, tok/sec: 102720.75, flops:107.81, batch-reuse:1
@ 1342 train 5.7304 , allloss: 5.7324, dt: 1304.10ms, fracRes: 0.1315, norm(attn): 0.1465, norm(output): 0.2754, norm(x): 0.2522, norm(y): 1.0067, norm:1.4640, tok/sec: 100507.76, flops:105.48, batch-reuse:1
@ 1343 train 5.5785 , allloss: 5.5809, dt: 1292.77ms, fracRes: 0.1307, norm(attn): 0.1494, norm(output): 0.2773, norm(x): 0.2537, norm(y): 1.0067, norm:2.0545, tok/sec: 101388.52, flops:106.41, batch-reuse:1
@ 1344 train 5.6021 , allloss: 5.6062, dt: 1290.89ms, fracRes: 0.1325, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2529, norm(y): 1.0066, norm:2.1311, tok/sec: 101535.96, flops:106.56, batch-reuse:1
@ 1345 train 5.4993 , allloss: 5.5011, dt: 1313.24ms, fracRes: 0.1452, norm(attn): 0.1406, norm(output): 0.2734, norm(x): 0.2500, norm(y): 1.0068, norm:2.1268, tok/sec: 99808.09, flops:104.75, batch-reuse:1
@ 1346 train 5.5771 , allloss: 5.5791, dt: 1341.44ms, fracRes: 0.1436, norm(attn): 0.1445, norm(output): 0.2734, norm(x): 0.2497, norm(y): 1.0068, norm:2.0057, tok/sec: 97709.77, flops:102.55, batch-reuse:1
@ 1347 train 5.5386 , allloss: 5.5399, dt: 1329.91ms, fracRes: 0.1385, norm(attn): 0.1436, norm(output): 0.2773, norm(x): 0.2510, norm(y): 1.0068, norm:1.8672, tok/sec: 98557.24, flops:103.44, batch-reuse:1
@ 1348 train 5.5854 , allloss: 5.5899, dt: 1288.12ms, fracRes: 0.1365, norm(attn): 0.1465, norm(output): 0.2773, norm(x): 0.2519, norm(y): 1.0067, norm:1.7798, tok/sec: 101754.51, flops:106.79, batch-reuse:1
@ 1349 train 5.6043 , allloss: 5.6080, dt: 1292.25ms, fracRes: 0.1330, norm(attn): 0.1475, norm(output): 0.2773, norm(x): 0.2532, norm(y): 1.0067, norm:1.6264, tok/sec: 101429.32, flops:106.45, batch-reuse:1
@ 1350 train 5.5297 , allloss: 5.5309, dt: 1285.52ms, fracRes: 0.1397, norm(attn): 0.1465, norm(output): 0.2754, norm(x): 0.2517, norm(y): 1.0068, norm:1.8141, tok/sec: 101960.33, flops:107.01, batch-reuse:1
@ 1351 train 5.5924 , allloss: 5.5937, dt: 1293.62ms, fracRes: 0.1356, norm(attn): 0.1494, norm(output): 0.2754, norm(x): 0.2517, norm(y): 1.0068, norm:1.5520, tok/sec: 101321.99, flops:106.34, batch-reuse:1
@ 1352 train 5.6365 , allloss: 5.6378, dt: 1296.93ms, fracRes: 0.1323, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2541, norm(y): 1.0068, norm:1.7843, tok/sec: 101063.05, flops:106.07, batch-reuse:1
@ 1353 train 5.6059 , allloss: 5.6076, dt: 1289.96ms, fracRes: 0.1296, norm(attn): 0.1504, norm(output): 0.2773, norm(x): 0.2541, norm(y): 1.0067, norm:2.2334, tok/sec: 101609.68, flops:106.64, batch-reuse:1
@ 1354 train 5.6239 , allloss: 5.6266, dt: 1290.33ms, fracRes: 0.1291, norm(attn): 0.1523, norm(output): 0.2793, norm(x): 0.2545, norm(y): 1.0067, norm:1.8344, tok/sec: 101580.22, flops:106.61, batch-reuse:1
@ 1355 train 5.5763 , allloss: 5.5784, dt: 1306.48ms, fracRes: 0.1321, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2538, norm(y): 1.0067, norm:1.4877, tok/sec: 100324.76, flops:105.29, batch-reuse:1
@ 1356 train 5.6546 , allloss: 5.6560, dt: 1330.19ms, fracRes: 0.1340, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2538, norm(y): 1.0067, norm:1.9220, tok/sec: 98535.97, flops:103.42, batch-reuse:1
@ 1357 train 5.6008 , allloss: 5.6023, dt: 1344.73ms, fracRes: 0.1343, norm(attn): 0.1523, norm(output): 0.2773, norm(x): 0.2534, norm(y): 1.0068, norm:2.2493, tok/sec: 97470.93, flops:102.30, batch-reuse:1
@ 1358 train 5.5645 , allloss: 5.5660, dt: 1284.43ms, fracRes: 0.1419, norm(attn): 0.1475, norm(output): 0.2793, norm(x): 0.2528, norm(y): 1.0068, norm:1.7203, tok/sec: 102047.16, flops:107.10, batch-reuse:1
@ 1359 train 5.5002 , allloss: 5.5032, dt: 1277.92ms, fracRes: 0.1446, norm(attn): 0.1475, norm(output): 0.2773, norm(x): 0.2520, norm(y): 1.0067, norm:1.7683, tok/sec: 102566.67, flops:107.65, batch-reuse:1
@ 1360 train 5.5236 , allloss: 5.5257, dt: 1294.28ms, fracRes: 0.1428, norm(attn): 0.1484, norm(output): 0.2793, norm(x): 0.2528, norm(y): 1.0067, norm:1.7641, tok/sec: 101270.29, flops:106.29, batch-reuse:1
@ 1361 train 5.5828 , allloss: 5.5841, dt: 1315.18ms, fracRes: 0.1459, norm(attn): 0.1475, norm(output): 0.2793, norm(x): 0.2526, norm(y): 1.0068, norm:1.6050, tok/sec: 99660.97, flops:104.60, batch-reuse:1
@ 1362 train 5.6540 , allloss: 5.6554, dt: 1338.58ms, fracRes: 0.1492, norm(attn): 0.1455, norm(output): 0.2793, norm(x): 0.2513, norm(y): 1.0069, norm:2.0576, tok/sec: 97918.82, flops:102.77, batch-reuse:1
@ 1363 train 5.5505 , allloss: 5.5522, dt: 1286.54ms, fracRes: 0.1478, norm(attn): 0.1436, norm(output): 0.2793, norm(x): 0.2517, norm(y): 1.0069, norm:1.7083, tok/sec: 101879.08, flops:106.92, batch-reuse:1
@ 1364 train 5.5082 , allloss: 5.5095, dt: 1287.35ms, fracRes: 0.1446, norm(attn): 0.1465, norm(output): 0.2793, norm(x): 0.2524, norm(y): 1.0069, norm:1.9847, tok/sec: 101815.19, flops:106.86, batch-reuse:1
@ 1365 train 5.6156 , allloss: 5.6190, dt: 1287.98ms, fracRes: 0.1417, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2536, norm(y): 1.0068, norm:1.9135, tok/sec: 101765.27, flops:106.80, batch-reuse:1
@ 1366 train 5.5519 , allloss: 5.5537, dt: 1303.44ms, fracRes: 0.1425, norm(attn): 0.1494, norm(output): 0.2793, norm(x): 0.2544, norm(y): 1.0068, norm:1.6588, tok/sec: 100558.51, flops:105.54, batch-reuse:1
@ 1367 train 5.5299 , allloss: 5.5315, dt: 1301.41ms, fracRes: 0.1419, norm(attn): 0.1475, norm(output): 0.2793, norm(x): 0.2544, norm(y): 1.0068, norm:1.8076, tok/sec: 100715.69, flops:105.70, batch-reuse:1
@ 1368 train 5.6587 , allloss: 5.6605, dt: 1326.27ms, fracRes: 0.1385, norm(attn): 0.1494, norm(output): 0.2812, norm(x): 0.2569, norm(y): 1.0067, norm:1.8272, tok/sec: 98827.23, flops:103.72, batch-reuse:1
@ 1369 train 5.6184 , allloss: 5.6193, dt: 1333.54ms, fracRes: 0.1404, norm(attn): 0.1455, norm(output): 0.2793, norm(x): 0.2555, norm(y): 1.0069, norm:1.6310, tok/sec: 98288.42, flops:103.16, batch-reuse:1
@ 1370 train 5.5384 , allloss: 5.5399, dt: 1287.19ms, fracRes: 0.1346, norm(attn): 0.1475, norm(output): 0.2812, norm(x): 0.2570, norm(y): 1.0069, norm:2.1456, tok/sec: 101828.19, flops:106.87, batch-reuse:1
@ 1371 train 5.6270 , allloss: 5.6287, dt: 1296.06ms, fracRes: 0.1375, norm(attn): 0.1426, norm(output): 0.2793, norm(x): 0.2565, norm(y): 1.0069, norm:1.7338, tok/sec: 101131.23, flops:106.14, batch-reuse:1
@ 1372 train 5.5114 , allloss: 5.5131, dt: 1294.79ms, fracRes: 0.1366, norm(attn): 0.1475, norm(output): 0.2793, norm(x): 0.2561, norm(y): 1.0069, norm:1.8848, tok/sec: 101230.33, flops:106.24, batch-reuse:1
@ 1373 train 5.5155 , allloss: 5.5183, dt: 1290.70ms, fracRes: 0.1315, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2567, norm(y): 1.0067, norm:1.8389, tok/sec: 101550.89, flops:106.58, batch-reuse:1
@ 1374 train 5.5186 , allloss: 5.5210, dt: 1277.25ms, fracRes: 0.1350, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2573, norm(y): 1.0068, norm:1.4424, tok/sec: 102620.51, flops:107.70, batch-reuse:1
@ 1375 train 5.4991 , allloss: 5.5002, dt: 1298.28ms, fracRes: 0.1342, norm(attn): 0.1484, norm(output): 0.2793, norm(x): 0.2571, norm(y): 1.0068, norm:1.7739, tok/sec: 100958.28, flops:105.96, batch-reuse:1
@ 1376 train 5.4818 , allloss: 5.4833, dt: 1295.59ms, fracRes: 0.1379, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2561, norm(y): 1.0069, norm:1.7801, tok/sec: 101167.85, flops:106.18, batch-reuse:1
@ 1377 train 5.4713 , allloss: 5.4728, dt: 1304.12ms, fracRes: 0.1352, norm(attn): 0.1475, norm(output): 0.2812, norm(x): 0.2566, norm(y): 1.0069, norm:1.8151, tok/sec: 100506.27, flops:105.48, batch-reuse:1
@ 1378 train 5.6218 , allloss: 5.6235, dt: 1285.61ms, fracRes: 0.1349, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2578, norm(y): 1.0068, norm:2.0468, tok/sec: 101953.12, flops:107.00, batch-reuse:1
@ 1379 train 5.5778 , allloss: 5.5802, dt: 1305.73ms, fracRes: 0.1381, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2568, norm(y): 1.0068, norm:1.8331, tok/sec: 100382.50, flops:105.35, batch-reuse:1
@ 1380 train 5.4361 , allloss: 5.4393, dt: 1302.14ms, fracRes: 0.1394, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2555, norm(y): 1.0068, norm:1.8324, tok/sec: 100658.97, flops:105.64, batch-reuse:1
@ 1381 train 5.5091 , allloss: 5.5115, dt: 1290.93ms, fracRes: 0.1395, norm(attn): 0.1514, norm(output): 0.2793, norm(x): 0.2564, norm(y): 1.0068, norm:1.8296, tok/sec: 101533.28, flops:106.56, batch-reuse:1
@ 1382 train 5.5041 , allloss: 5.5060, dt: 1275.60ms, fracRes: 0.1411, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2547, norm(y): 1.0069, norm:1.4760, tok/sec: 102753.33, flops:107.84, batch-reuse:1
@ 1383 train 5.5748 , allloss: 5.5763, dt: 1296.52ms, fracRes: 0.1434, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2555, norm(y): 1.0070, norm:1.9629, tok/sec: 101095.56, flops:106.10, batch-reuse:1
@ 1384 train 5.4474 , allloss: 5.4492, dt: 1289.70ms, fracRes: 0.1425, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2558, norm(y): 1.0069, norm:1.8159, tok/sec: 101630.04, flops:106.66, batch-reuse:1
@ 1385 train 5.5280 , allloss: 5.5303, dt: 1309.52ms, fracRes: 0.1392, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2569, norm(y): 1.0068, norm:1.8668, tok/sec: 100091.73, flops:105.05, batch-reuse:1
@ 1386 train 5.4969 , allloss: 5.4990, dt: 1295.46ms, fracRes: 0.1421, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2562, norm(y): 1.0069, norm:1.8309, tok/sec: 101177.85, flops:106.19, batch-reuse:1
@ 1387 train 5.4691 , allloss: 5.4707, dt: 1324.99ms, fracRes: 0.1432, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2558, norm(y): 1.0069, norm:1.7957, tok/sec: 98922.85, flops:103.82, batch-reuse:1
@ 1388 train 5.5422 , allloss: 5.5439, dt: 1329.77ms, fracRes: 0.1402, norm(attn): 0.1523, norm(output): 0.2812, norm(x): 0.2567, norm(y): 1.0069, norm:1.6992, tok/sec: 98567.06, flops:103.45, batch-reuse:1
@ 1389 train 5.3539 , allloss: 5.3556, dt: 1318.10ms, fracRes: 0.1433, norm(attn): 0.1553, norm(output): 0.2812, norm(x): 0.2562, norm(y): 1.0069, norm:1.6081, tok/sec: 99440.00, flops:104.36, batch-reuse:1
@ 1390 train 5.6323 , allloss: 5.6342, dt: 1293.13ms, fracRes: 0.1415, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2569, norm(y): 1.0069, norm:1.9689, tok/sec: 101360.35, flops:106.38, batch-reuse:1
@ 1391 train 5.5305 , allloss: 5.5334, dt: 1289.58ms, fracRes: 0.1389, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2578, norm(y): 1.0069, norm:1.7502, tok/sec: 101639.12, flops:106.67, batch-reuse:1
@ 1392 train 5.4703 , allloss: 5.4726, dt: 1298.42ms, fracRes: 0.1408, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2570, norm(y): 1.0069, norm:1.9777, tok/sec: 100947.14, flops:105.95, batch-reuse:1
@ 1393 train 5.4414 , allloss: 5.4433, dt: 1291.84ms, fracRes: 0.1439, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2568, norm(y): 1.0070, norm:1.6603, tok/sec: 101461.19, flops:106.49, batch-reuse:1
@ 1394 train 5.4375 , allloss: 5.4407, dt: 1294.29ms, fracRes: 0.1467, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2558, norm(y): 1.0070, norm:2.1261, tok/sec: 101269.06, flops:106.28, batch-reuse:1
@ 1395 train 5.4436 , allloss: 5.4452, dt: 1285.09ms, fracRes: 0.1458, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2564, norm(y): 1.0069, norm:1.4801, tok/sec: 101994.13, flops:107.04, batch-reuse:1
@ 1396 train 5.4560 , allloss: 5.4577, dt: 1310.45ms, fracRes: 0.1463, norm(attn): 0.1523, norm(output): 0.2812, norm(x): 0.2566, norm(y): 1.0069, norm:1.9463, tok/sec: 100020.60, flops:104.97, batch-reuse:1
@ 1397 train 5.4876 , allloss: 5.4896, dt: 1305.02ms, fracRes: 0.1484, norm(attn): 0.1494, norm(output): 0.2812, norm(x): 0.2562, norm(y): 1.0069, norm:1.3853, tok/sec: 100436.84, flops:105.41, batch-reuse:1
@ 1398 train 5.4822 , allloss: 5.4842, dt: 1322.06ms, fracRes: 0.1488, norm(attn): 0.1494, norm(output): 0.2812, norm(x): 0.2562, norm(y): 1.0069, norm:1.7150, tok/sec: 99142.06, flops:104.05, batch-reuse:1
@ 1399 train 5.3984 , allloss: 5.4013, dt: 1311.80ms, fracRes: 0.1463, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2565, norm(y): 1.0069, norm:1.5673, tok/sec: 99917.67, flops:104.87, batch-reuse:1
@ 1400 train 5.5329 , allloss: 5.5357, dt: 1288.65ms, fracRes: 0.1498, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2561, norm(y): 1.0069, norm:1.5253, tok/sec: 101712.87, flops:106.75, batch-reuse:1
@ 1401 train 5.4306 , allloss: 5.4321, dt: 1300.85ms, fracRes: 0.1507, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2568, norm(y): 1.0070, norm:1.8048, tok/sec: 100758.87, flops:105.75, batch-reuse:1
@ 1402 train 5.3773 , allloss: 5.3792, dt: 1307.66ms, fracRes: 0.1510, norm(attn): 0.1523, norm(output): 0.2812, norm(x): 0.2559, norm(y): 1.0070, norm:1.6220, tok/sec: 100233.83, flops:105.20, batch-reuse:1
@ 1403 train 5.4818 , allloss: 5.4846, dt: 1272.61ms, fracRes: 0.1494, norm(attn): 0.1533, norm(output): 0.2812, norm(x): 0.2568, norm(y): 1.0069, norm:1.5863, tok/sec: 102994.42, flops:108.09, batch-reuse:1
@ 1404 train 5.4378 , allloss: 5.4417, dt: 1292.88ms, fracRes: 0.1530, norm(attn): 0.1484, norm(output): 0.2812, norm(x): 0.2554, norm(y): 1.0070, norm:2.0181, tok/sec: 101380.03, flops:106.40, batch-reuse:1
@ 1405 train 5.4737 , allloss: 5.4771, dt: 1273.02ms, fracRes: 0.1538, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2555, norm(y): 1.0070, norm:2.0290, tok/sec: 102961.86, flops:108.06, batch-reuse:1
@ 1406 train 5.5563 , allloss: 5.5583, dt: 1273.64ms, fracRes: 0.1539, norm(attn): 0.1523, norm(output): 0.2812, norm(x): 0.2551, norm(y): 1.0070, norm:1.2270, tok/sec: 102911.29, flops:108.01, batch-reuse:1
@ 1407 train 5.4472 , allloss: 5.4486, dt: 1295.29ms, fracRes: 0.1512, norm(attn): 0.1523, norm(output): 0.2812, norm(x): 0.2567, norm(y): 1.0070, norm:2.0733, tok/sec: 101191.37, flops:106.20, batch-reuse:1
@ 1408 train 5.4330 , allloss: 5.4346, dt: 1288.10ms, fracRes: 0.1511, norm(attn): 0.1523, norm(output): 0.2812, norm(x): 0.2564, norm(y): 1.0070, norm:1.5500, tok/sec: 101756.09, flops:106.79, batch-reuse:1
@ 1409 train 5.4295 , allloss: 5.4307, dt: 1277.21ms, fracRes: 0.1550, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2557, norm(y): 1.0070, norm:1.5347, tok/sec: 102623.63, flops:107.71, batch-reuse:1
@ 1410 train 5.4130 , allloss: 5.4142, dt: 1310.30ms, fracRes: 0.1546, norm(attn): 0.1494, norm(output): 0.2812, norm(x): 0.2560, norm(y): 1.0070, norm:1.8663, tok/sec: 100032.25, flops:104.99, batch-reuse:1
@ 1411 train 5.4174 , allloss: 5.4190, dt: 1290.18ms, fracRes: 0.1545, norm(attn): 0.1533, norm(output): 0.2812, norm(x): 0.2556, norm(y): 1.0070, norm:1.5983, tok/sec: 101591.90, flops:106.62, batch-reuse:1
@ 1412 train 5.4115 , allloss: 5.4134, dt: 1293.56ms, fracRes: 0.1534, norm(attn): 0.1533, norm(output): 0.2812, norm(x): 0.2561, norm(y): 1.0070, norm:2.4516, tok/sec: 101326.49, flops:106.34, batch-reuse:1
@ 1413 train 5.3979 , allloss: 5.4004, dt: 1277.77ms, fracRes: 0.1506, norm(attn): 0.1523, norm(output): 0.2812, norm(x): 0.2573, norm(y): 1.0070, norm:1.6391, tok/sec: 102578.42, flops:107.66, batch-reuse:1
@ 1414 train 5.4080 , allloss: 5.4097, dt: 1272.43ms, fracRes: 0.1500, norm(attn): 0.1514, norm(output): 0.2832, norm(x): 0.2576, norm(y): 1.0070, norm:1.8940, tok/sec: 103008.94, flops:108.11, batch-reuse:1
@ 1415 train 5.4752 , allloss: 5.4768, dt: 1290.74ms, fracRes: 0.1546, norm(attn): 0.1484, norm(output): 0.2832, norm(x): 0.2562, norm(y): 1.0070, norm:1.5190, tok/sec: 101547.65, flops:106.58, batch-reuse:1
@ 1416 train 5.5062 , allloss: 5.5091, dt: 1285.34ms, fracRes: 0.1620, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2548, norm(y): 1.0071, norm:1.9045, tok/sec: 101974.29, flops:107.02, batch-reuse:1
@ 1417 train 5.4232 , allloss: 5.4253, dt: 1296.24ms, fracRes: 0.1569, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2564, norm(y): 1.0070, norm:1.5711, tok/sec: 101117.26, flops:106.12, batch-reuse:1
@ 1418 train 5.4223 , allloss: 5.4237, dt: 1307.96ms, fracRes: 0.1594, norm(attn): 0.1514, norm(output): 0.2832, norm(x): 0.2574, norm(y): 1.0071, norm:1.9097, tok/sec: 100210.92, flops:105.17, batch-reuse:1
@ 1419 train 5.5289 , allloss: 5.5313, dt: 1283.79ms, fracRes: 0.1566, norm(attn): 0.1514, norm(output): 0.2832, norm(x): 0.2577, norm(y): 1.0070, norm:1.9990, tok/sec: 102098.08, flops:107.15, batch-reuse:1
@ 1420 train 5.4942 , allloss: 5.4962, dt: 1277.94ms, fracRes: 0.1566, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2586, norm(y): 1.0070, norm:1.6359, tok/sec: 102564.72, flops:107.64, batch-reuse:1
@ 1421 train 5.4604 , allloss: 5.4635, dt: 1274.87ms, fracRes: 0.1545, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2590, norm(y): 1.0070, norm:1.6695, tok/sec: 102812.12, flops:107.90, batch-reuse:1
@ 1422 train 5.4033 , allloss: 5.4054, dt: 1274.59ms, fracRes: 0.1557, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2577, norm(y): 1.0071, norm:1.7378, tok/sec: 102834.69, flops:107.93, batch-reuse:1
@ 1423 train 5.4398 , allloss: 5.4416, dt: 1290.15ms, fracRes: 0.1488, norm(attn): 0.1562, norm(output): 0.2832, norm(x): 0.2596, norm(y): 1.0070, norm:1.8520, tok/sec: 101594.09, flops:106.62, batch-reuse:1
@ 1424 train 5.4260 , allloss: 5.4275, dt: 1323.34ms, fracRes: 0.1513, norm(attn): 0.1484, norm(output): 0.2832, norm(x): 0.2591, norm(y): 1.0070, norm:1.7958, tok/sec: 99046.68, flops:103.95, batch-reuse:1
@ 1425 train 5.4081 , allloss: 5.4097, dt: 1283.41ms, fracRes: 0.1520, norm(attn): 0.1484, norm(output): 0.2832, norm(x): 0.2583, norm(y): 1.0071, norm:1.7561, tok/sec: 102127.73, flops:107.18, batch-reuse:1
@ 1426 train 5.3086 , allloss: 5.3101, dt: 1276.22ms, fracRes: 0.1511, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2590, norm(y): 1.0070, norm:1.8940, tok/sec: 102703.23, flops:107.79, batch-reuse:1
@ 1427 train 5.3953 , allloss: 5.3970, dt: 1310.97ms, fracRes: 0.1529, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2586, norm(y): 1.0071, norm:1.5389, tok/sec: 99980.96, flops:104.93, batch-reuse:1
@ 1428 train 5.3797 , allloss: 5.3810, dt: 1311.12ms, fracRes: 0.1538, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2587, norm(y): 1.0071, norm:1.7191, tok/sec: 99969.85, flops:104.92, batch-reuse:1
@ 1429 train 5.4132 , allloss: 5.4147, dt: 1301.63ms, fracRes: 0.1554, norm(attn): 0.1543, norm(output): 0.2852, norm(x): 0.2603, norm(y): 1.0070, norm:1.7781, tok/sec: 100698.72, flops:105.69, batch-reuse:1
@ 1430 train 5.4416 , allloss: 5.4439, dt: 1292.03ms, fracRes: 0.1500, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2599, norm(y): 1.0070, norm:1.7439, tok/sec: 101446.59, flops:106.47, batch-reuse:1
@ 1431 train 5.3816 , allloss: 5.3851, dt: 1289.93ms, fracRes: 0.1475, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2607, norm(y): 1.0070, norm:1.5631, tok/sec: 101611.84, flops:106.64, batch-reuse:1
@ 1432 train 5.3418 , allloss: 5.3434, dt: 1312.81ms, fracRes: 0.1527, norm(attn): 0.1475, norm(output): 0.2832, norm(x): 0.2595, norm(y): 1.0071, norm:1.7532, tok/sec: 99840.48, flops:104.78, batch-reuse:1
@ 1433 train 5.4086 , allloss: 5.4105, dt: 1321.31ms, fracRes: 0.1526, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2599, norm(y): 1.0071, norm:1.7931, tok/sec: 99198.36, flops:104.11, batch-reuse:1
@ 1434 train 5.4515 , allloss: 5.4539, dt: 1283.56ms, fracRes: 0.1509, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2602, norm(y): 1.0071, norm:1.5007, tok/sec: 102116.16, flops:107.17, batch-reuse:1
@ 1435 train 5.3845 , allloss: 5.3870, dt: 1308.40ms, fracRes: 0.1537, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2600, norm(y): 1.0071, norm:2.2277, tok/sec: 100177.56, flops:105.14, batch-reuse:1
@ 1436 train 5.3583 , allloss: 5.3606, dt: 1299.74ms, fracRes: 0.1537, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2599, norm(y): 1.0071, norm:1.7446, tok/sec: 100844.89, flops:105.84, batch-reuse:1
@ 1437 train 5.3882 , allloss: 5.3909, dt: 1294.75ms, fracRes: 0.1561, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2589, norm(y): 1.0071, norm:1.9702, tok/sec: 101233.67, flops:106.25, batch-reuse:1
@ 1438 train 5.3123 , allloss: 5.3167, dt: 1333.10ms, fracRes: 0.1590, norm(attn): 0.1514, norm(output): 0.2832, norm(x): 0.2577, norm(y): 1.0071, norm:1.6692, tok/sec: 98321.32, flops:103.19, batch-reuse:1
@ 1439 train 5.3328 , allloss: 5.3345, dt: 1272.71ms, fracRes: 0.1603, norm(attn): 0.1514, norm(output): 0.2832, norm(x): 0.2577, norm(y): 1.0071, norm:1.7591, tok/sec: 102986.73, flops:108.09, batch-reuse:1
@ 1440 train 5.3635 , allloss: 5.3657, dt: 1262.04ms, fracRes: 0.1590, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2590, norm(y): 1.0071, norm:1.5697, tok/sec: 103856.84, flops:109.00, batch-reuse:1
@ 1441 train 5.3680 , allloss: 5.3697, dt: 1283.78ms, fracRes: 0.1590, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2597, norm(y): 1.0071, norm:2.0149, tok/sec: 102098.84, flops:107.15, batch-reuse:1
@ 1442 train 5.3936 , allloss: 5.3952, dt: 1308.62ms, fracRes: 0.1603, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2593, norm(y): 1.0071, norm:1.8891, tok/sec: 100160.29, flops:105.12, batch-reuse:1
@ 1443 train 5.3089 , allloss: 5.3111, dt: 1266.04ms, fracRes: 0.1605, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2585, norm(y): 1.0071, norm:1.3903, tok/sec: 103528.97, flops:108.66, batch-reuse:1
@ 1444 train 5.3429 , allloss: 5.3451, dt: 1278.94ms, fracRes: 0.1608, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2592, norm(y): 1.0071, norm:2.3388, tok/sec: 102484.80, flops:107.56, batch-reuse:1
@ 1445 train 5.4336 , allloss: 5.4359, dt: 1296.78ms, fracRes: 0.1619, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2587, norm(y): 1.0071, norm:1.8093, tok/sec: 101075.30, flops:106.08, batch-reuse:1
@ 1446 train 5.4047 , allloss: 5.4067, dt: 1306.04ms, fracRes: 0.1605, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2582, norm(y): 1.0071, norm:1.7045, tok/sec: 100358.29, flops:105.33, batch-reuse:1
@ 1447 train 5.3896 , allloss: 5.3918, dt: 1267.43ms, fracRes: 0.1584, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2590, norm(y): 1.0071, norm:1.9940, tok/sec: 103415.37, flops:108.54, batch-reuse:1
@ 1448 train 5.3486 , allloss: 5.3506, dt: 1291.69ms, fracRes: 0.1561, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2599, norm(y): 1.0072, norm:1.6658, tok/sec: 101473.09, flops:106.50, batch-reuse:1
@ 1449 train 5.4424 , allloss: 5.4453, dt: 1283.78ms, fracRes: 0.1558, norm(attn): 0.1523, norm(output): 0.2852, norm(x): 0.2617, norm(y): 1.0072, norm:1.8131, tok/sec: 102098.12, flops:107.15, batch-reuse:1
@ 1450 train 5.4140 , allloss: 5.4202, dt: 1290.53ms, fracRes: 0.1562, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2610, norm(y): 1.0071, norm:1.8172, tok/sec: 101564.61, flops:106.59, batch-reuse:1
@ 1451 train 5.4413 , allloss: 5.4442, dt: 1269.44ms, fracRes: 0.1590, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2594, norm(y): 1.0072, norm:1.9710, tok/sec: 103251.91, flops:108.36, batch-reuse:1
@ 1452 train 5.3231 , allloss: 5.3247, dt: 1272.56ms, fracRes: 0.1602, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2600, norm(y): 1.0072, norm:1.6984, tok/sec: 102998.69, flops:108.10, batch-reuse:1
@ 1453 train 5.3600 , allloss: 5.3616, dt: 1292.17ms, fracRes: 0.1630, norm(attn): 0.1523, norm(output): 0.2852, norm(x): 0.2596, norm(y): 1.0072, norm:1.6833, tok/sec: 101435.85, flops:106.46, batch-reuse:1
@ 1454 train 5.3685 , allloss: 5.3700, dt: 1307.57ms, fracRes: 0.1650, norm(attn): 0.1504, norm(output): 0.2852, norm(x): 0.2590, norm(y): 1.0072, norm:1.7336, tok/sec: 100240.69, flops:105.20, batch-reuse:1
@ 1455 train 5.2978 , allloss: 5.3004, dt: 1304.87ms, fracRes: 0.1656, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2589, norm(y): 1.0072, norm:1.8695, tok/sec: 100448.42, flops:105.42, batch-reuse:1
@ 1456 train 5.3342 , allloss: 5.3370, dt: 1324.70ms, fracRes: 0.1692, norm(attn): 0.1553, norm(output): 0.2852, norm(x): 0.2585, norm(y): 1.0072, norm:1.6171, tok/sec: 98944.37, flops:103.84, batch-reuse:1
@ 1457 train 5.3518 , allloss: 5.3552, dt: 1282.94ms, fracRes: 0.1697, norm(attn): 0.1543, norm(output): 0.2852, norm(x): 0.2596, norm(y): 1.0071, norm:2.0738, tok/sec: 102165.10, flops:107.22, batch-reuse:1
@ 1458 train 5.3859 , allloss: 5.3871, dt: 1273.47ms, fracRes: 0.1763, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2567, norm(y): 1.0073, norm:1.9532, tok/sec: 102925.45, flops:108.02, batch-reuse:1
@ 1459 train 5.3978 , allloss: 5.4000, dt: 1283.19ms, fracRes: 0.1688, norm(attn): 0.1523, norm(output): 0.2852, norm(x): 0.2583, norm(y): 1.0072, norm:1.6755, tok/sec: 102145.05, flops:107.20, batch-reuse:1
@ 1460 train 5.3282 , allloss: 5.3303, dt: 1294.00ms, fracRes: 0.1655, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2590, norm(y): 1.0072, norm:2.1277, tok/sec: 101291.94, flops:106.31, batch-reuse:1
@ 1461 train 5.2806 , allloss: 5.2823, dt: 1295.52ms, fracRes: 0.1598, norm(attn): 0.1553, norm(output): 0.2852, norm(x): 0.2614, norm(y): 1.0071, norm:1.8813, tok/sec: 101173.14, flops:106.18, batch-reuse:1
@ 1462 train 5.3441 , allloss: 5.3464, dt: 1289.32ms, fracRes: 0.1607, norm(attn): 0.1533, norm(output): 0.2852, norm(x): 0.2602, norm(y): 1.0072, norm:1.8906, tok/sec: 101659.56, flops:106.69, batch-reuse:1
@ 1463 train 5.3434 , allloss: 5.3462, dt: 1276.06ms, fracRes: 0.1610, norm(attn): 0.1543, norm(output): 0.2891, norm(x): 0.2618, norm(y): 1.0072, norm:1.7817, tok/sec: 102716.03, flops:107.80, batch-reuse:1
@ 1464 train 5.3540 , allloss: 5.3551, dt: 1266.44ms, fracRes: 0.1606, norm(attn): 0.1553, norm(output): 0.2891, norm(x): 0.2623, norm(y): 1.0072, norm:2.0301, tok/sec: 103496.13, flops:108.62, batch-reuse:1
@ 1465 train 5.2502 , allloss: 5.2517, dt: 1296.56ms, fracRes: 0.1630, norm(attn): 0.1562, norm(output): 0.2852, norm(x): 0.2609, norm(y): 1.0073, norm:1.7320, tok/sec: 101091.82, flops:106.10, batch-reuse:1
@ 1466 train 5.2362 , allloss: 5.2391, dt: 1318.18ms, fracRes: 0.1597, norm(attn): 0.1553, norm(output): 0.2871, norm(x): 0.2620, norm(y): 1.0072, norm:1.8398, tok/sec: 99434.39, flops:104.36, batch-reuse:1
@ 1467 train 5.3387 , allloss: 5.3415, dt: 1305.39ms, fracRes: 0.1611, norm(attn): 0.1533, norm(output): 0.2891, norm(x): 0.2623, norm(y): 1.0072, norm:1.7169, tok/sec: 100408.02, flops:105.38, batch-reuse:1
@ 1468 train 5.3606 , allloss: 5.3625, dt: 1275.54ms, fracRes: 0.1623, norm(attn): 0.1543, norm(output): 0.2871, norm(x): 0.2616, norm(y): 1.0072, norm:2.0041, tok/sec: 102757.73, flops:107.85, batch-reuse:1
@ 1469 train 5.4810 , allloss: 5.4839, dt: 1286.30ms, fracRes: 0.1673, norm(attn): 0.1572, norm(output): 0.2852, norm(x): 0.2607, norm(y): 1.0072, norm:2.3214, tok/sec: 101898.78, flops:106.94, batch-reuse:1
@ 1470 train 5.3420 , allloss: 5.3429, dt: 1274.19ms, fracRes: 0.1697, norm(attn): 0.1543, norm(output): 0.2891, norm(x): 0.2610, norm(y): 1.0073, norm:1.8249, tok/sec: 102866.87, flops:107.96, batch-reuse:1
@ 1471 train 5.2369 , allloss: 5.2381, dt: 1319.60ms, fracRes: 0.1741, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2591, norm(y): 1.0073, norm:1.9822, tok/sec: 99327.10, flops:104.25, batch-reuse:1
@ 1472 train 5.3172 , allloss: 5.3189, dt: 1285.16ms, fracRes: 0.1727, norm(attn): 0.1533, norm(output): 0.2871, norm(x): 0.2601, norm(y): 1.0072, norm:2.1558, tok/sec: 101988.57, flops:107.04, batch-reuse:1
@ 1473 train 5.3467 , allloss: 5.3488, dt: 1269.83ms, fracRes: 0.1663, norm(attn): 0.1553, norm(output): 0.2891, norm(x): 0.2616, norm(y): 1.0072, norm:1.5727, tok/sec: 103220.29, flops:108.33, batch-reuse:1
@ 1474 train 5.5209 , allloss: 5.5233, dt: 1262.17ms, fracRes: 0.1728, norm(attn): 0.1562, norm(output): 0.2832, norm(x): 0.2595, norm(y): 1.0073, norm:1.7289, tok/sec: 103846.62, flops:108.99, batch-reuse:1
@ 1475 train 5.3477 , allloss: 5.3492, dt: 1296.15ms, fracRes: 0.1664, norm(attn): 0.1543, norm(output): 0.2871, norm(x): 0.2609, norm(y): 1.0073, norm:1.7983, tok/sec: 101123.71, flops:106.13, batch-reuse:1
@ 1476 train 5.2933 , allloss: 5.2942, dt: 1306.38ms, fracRes: 0.1667, norm(attn): 0.1562, norm(output): 0.2871, norm(x): 0.2609, norm(y): 1.0073, norm:2.1518, tok/sec: 100332.38, flops:105.30, batch-reuse:1
@ 1477 train 5.3251 , allloss: 5.3263, dt: 1288.17ms, fracRes: 0.1670, norm(attn): 0.1562, norm(output): 0.2891, norm(x): 0.2617, norm(y): 1.0073, norm:1.8891, tok/sec: 101750.74, flops:106.79, batch-reuse:1
@ 1478 train 5.2801 , allloss: 5.2829, dt: 1299.56ms, fracRes: 0.1663, norm(attn): 0.1562, norm(output): 0.2871, norm(x): 0.2618, norm(y): 1.0073, norm:2.1528, tok/sec: 100858.97, flops:105.85, batch-reuse:1
@ 1479 train 5.3000 , allloss: 5.3019, dt: 1296.87ms, fracRes: 0.1675, norm(attn): 0.1562, norm(output): 0.2910, norm(x): 0.2618, norm(y): 1.0073, norm:1.7265, tok/sec: 101068.16, flops:106.07, batch-reuse:1
@ 1480 train 5.3322 , allloss: 5.3339, dt: 1303.71ms, fracRes: 0.1642, norm(attn): 0.1523, norm(output): 0.2910, norm(x): 0.2628, norm(y): 1.0072, norm:2.0718, tok/sec: 100537.75, flops:105.52, batch-reuse:1
@ 1481 train 5.3122 , allloss: 5.3151, dt: 1285.97ms, fracRes: 0.1636, norm(attn): 0.1562, norm(output): 0.2910, norm(x): 0.2632, norm(y): 1.0072, norm:1.7032, tok/sec: 101924.28, flops:106.97, batch-reuse:1
@ 1482 train 5.3600 , allloss: 5.3629, dt: 1288.80ms, fracRes: 0.1691, norm(attn): 0.1553, norm(output): 0.2910, norm(x): 0.2617, norm(y): 1.0073, norm:1.8179, tok/sec: 101701.05, flops:106.74, batch-reuse:1
@ 1483 train 5.3812 , allloss: 5.3832, dt: 1278.60ms, fracRes: 0.1684, norm(attn): 0.1562, norm(output): 0.2891, norm(x): 0.2617, norm(y): 1.0073, norm:1.8264, tok/sec: 102511.91, flops:107.59, batch-reuse:1
@ 1484 train 5.4305 , allloss: 5.4322, dt: 1291.30ms, fracRes: 0.1690, norm(attn): 0.1562, norm(output): 0.2910, norm(x): 0.2624, norm(y): 1.0073, norm:1.6708, tok/sec: 101503.79, flops:106.53, batch-reuse:1
@ 1485 train 5.5115 , allloss: 5.5126, dt: 1288.41ms, fracRes: 0.1717, norm(attn): 0.1562, norm(output): 0.2891, norm(x): 0.2624, norm(y): 1.0073, norm:1.7062, tok/sec: 101731.69, flops:106.77, batch-reuse:1
@ 1486 train 5.4707 , allloss: 5.4718, dt: 1307.95ms, fracRes: 0.1691, norm(attn): 0.1562, norm(output): 0.2910, norm(x): 0.2630, norm(y): 1.0073, norm:2.0532, tok/sec: 100211.58, flops:105.17, batch-reuse:1
@ 1487 train 5.4575 , allloss: 5.4595, dt: 1293.29ms, fracRes: 0.1694, norm(attn): 0.1562, norm(output): 0.2910, norm(x): 0.2623, norm(y): 1.0072, norm:1.7350, tok/sec: 101347.57, flops:106.37, batch-reuse:1
@ 1488 train 5.4225 , allloss: 5.4238, dt: 1280.43ms, fracRes: 0.1724, norm(attn): 0.1553, norm(output): 0.2910, norm(x): 0.2619, norm(y): 1.0073, norm:1.8732, tok/sec: 102365.45, flops:107.43, batch-reuse:1
@ 1489 train 5.5677 , allloss: 5.5689, dt: 1269.71ms, fracRes: 0.1731, norm(attn): 0.1553, norm(output): 0.2910, norm(x): 0.2624, norm(y): 1.0074, norm:1.6802, tok/sec: 103229.83, flops:108.34, batch-reuse:1
@ 1490 train 5.5929 , allloss: 5.5944, dt: 1308.90ms, fracRes: 0.1663, norm(attn): 0.1533, norm(output): 0.2930, norm(x): 0.2654, norm(y): 1.0073, norm:1.9990, tok/sec: 100138.89, flops:105.10, batch-reuse:1
@ 1491 train 5.5910 , allloss: 5.5923, dt: 1305.78ms, fracRes: 0.1609, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2664, norm(y): 1.0073, norm:1.9621, tok/sec: 100378.29, flops:105.35, batch-reuse:1
@ 1492 train 5.4443 , allloss: 5.4457, dt: 1290.38ms, fracRes: 0.1636, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2648, norm(y): 1.0073, norm:1.5430, tok/sec: 101576.60, flops:106.61, batch-reuse:1
@ 1493 train 5.4145 , allloss: 5.4162, dt: 1298.73ms, fracRes: 0.1660, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2648, norm(y): 1.0074, norm:1.7071, tok/sec: 100923.18, flops:105.92, batch-reuse:1
@ 1494 train 5.4546 , allloss: 5.4564, dt: 1310.59ms, fracRes: 0.1641, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2658, norm(y): 1.0074, norm:2.3158, tok/sec: 100010.30, flops:104.96, batch-reuse:1
@ 1495 train 5.4170 , allloss: 5.4195, dt: 1302.59ms, fracRes: 0.1649, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2670, norm(y): 1.0073, norm:1.5856, tok/sec: 100624.37, flops:105.61, batch-reuse:1
@ 1496 train 5.4460 , allloss: 5.4495, dt: 1302.09ms, fracRes: 0.1689, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2653, norm(y): 1.0073, norm:1.6013, tok/sec: 100662.95, flops:105.65, batch-reuse:1
@ 1497 train 5.3160 , allloss: 5.3177, dt: 1288.55ms, fracRes: 0.1700, norm(attn): 0.1592, norm(output): 0.2930, norm(x): 0.2654, norm(y): 1.0074, norm:1.7534, tok/sec: 101720.77, flops:106.76, batch-reuse:1
@ 1498 train 5.5124 , allloss: 5.5139, dt: 1324.79ms, fracRes: 0.1704, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2651, norm(y): 1.0074, norm:1.8153, tok/sec: 98938.02, flops:103.84, batch-reuse:1
@ 1499 train 5.5297 , allloss: 5.5315, dt: 1332.72ms, fracRes: 0.1692, norm(attn): 0.1641, norm(output): 0.2930, norm(x): 0.2658, norm(y): 1.0073, norm:2.4500, tok/sec: 98349.38, flops:103.22, batch-reuse:1
@ 1500 train 5.5404 , allloss: 5.5425, dt: 1324.00ms, fracRes: 0.1711, norm(attn): 0.1582, norm(output): 0.2930, norm(x): 0.2649, norm(y): 1.0073, norm:1.7905, tok/sec: 98997.11, flops:103.90, batch-reuse:1
@ 1501 train 5.4184 , allloss: 5.4207, dt: 1329.61ms, fracRes: 0.1722, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2650, norm(y): 1.0073, norm:1.8476, tok/sec: 98579.12, flops:103.46, batch-reuse:1
@ 1502 train 5.4408 , allloss: 5.4425, dt: 1323.84ms, fracRes: 0.1743, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2642, norm(y): 1.0073, norm:1.9908, tok/sec: 99009.20, flops:103.91, batch-reuse:1
@ 1503 train 5.5045 , allloss: 5.5056, dt: 1335.99ms, fracRes: 0.1731, norm(attn): 0.1582, norm(output): 0.2930, norm(x): 0.2653, norm(y): 1.0073, norm:1.8192, tok/sec: 98108.43, flops:102.97, batch-reuse:1
@ 1504 train 5.5276 , allloss: 5.5287, dt: 1298.43ms, fracRes: 0.1785, norm(attn): 0.1562, norm(output): 0.2910, norm(x): 0.2637, norm(y): 1.0074, norm:2.0295, tok/sec: 100946.14, flops:105.94, batch-reuse:1
@ 1505 train 5.4508 , allloss: 5.4523, dt: 1331.47ms, fracRes: 0.1716, norm(attn): 0.1562, norm(output): 0.2949, norm(x): 0.2657, norm(y): 1.0074, norm:1.6914, tok/sec: 98441.43, flops:103.32, batch-reuse:1
@ 1506 train 5.5086 , allloss: 5.5111, dt: 1304.54ms, fracRes: 0.1698, norm(attn): 0.1582, norm(output): 0.2949, norm(x): 0.2665, norm(y): 1.0073, norm:1.8517, tok/sec: 100473.63, flops:105.45, batch-reuse:1
@ 1507 train 5.5042 , allloss: 5.5057, dt: 1314.77ms, fracRes: 0.1716, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2654, norm(y): 1.0074, norm:1.9043, tok/sec: 99692.29, flops:104.63, batch-reuse:1
@ 1508 train 5.4803 , allloss: 5.4812, dt: 1310.74ms, fracRes: 0.1731, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2651, norm(y): 1.0074, norm:1.7193, tok/sec: 99998.15, flops:104.95, batch-reuse:1
@ 1509 train 5.4359 , allloss: 5.4369, dt: 1277.10ms, fracRes: 0.1706, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2659, norm(y): 1.0074, norm:1.5546, tok/sec: 102632.16, flops:107.71, batch-reuse:1
@ 1510 train 5.4899 , allloss: 5.4912, dt: 1292.77ms, fracRes: 0.1723, norm(attn): 0.1572, norm(output): 0.2949, norm(x): 0.2656, norm(y): 1.0074, norm:1.9209, tok/sec: 101388.48, flops:106.41, batch-reuse:1
@ 1511 train 5.5237 , allloss: 5.5251, dt: 1299.40ms, fracRes: 0.1756, norm(attn): 0.1582, norm(output): 0.2949, norm(x): 0.2653, norm(y): 1.0074, norm:1.7602, tok/sec: 100871.24, flops:105.87, batch-reuse:1
@ 1512 train 5.5375 , allloss: 5.5392, dt: 1292.20ms, fracRes: 0.1761, norm(attn): 0.1582, norm(output): 0.2930, norm(x): 0.2654, norm(y): 1.0074, norm:1.8306, tok/sec: 101433.25, flops:106.46, batch-reuse:1
@ 1513 train 5.4594 , allloss: 5.4610, dt: 1312.50ms, fracRes: 0.1784, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2649, norm(y): 1.0074, norm:2.0805, tok/sec: 99864.13, flops:104.81, batch-reuse:1
@ 1514 train 5.5906 , allloss: 5.5919, dt: 1301.88ms, fracRes: 0.1776, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2655, norm(y): 1.0074, norm:1.6888, tok/sec: 100679.40, flops:105.66, batch-reuse:1
@ 1515 train 5.4682 , allloss: 5.4697, dt: 1297.30ms, fracRes: 0.1751, norm(attn): 0.1572, norm(output): 0.2949, norm(x): 0.2658, norm(y): 1.0074, norm:2.0220, tok/sec: 101034.63, flops:106.04, batch-reuse:1
@ 1516 train 5.3562 , allloss: 5.3573, dt: 1289.72ms, fracRes: 0.1764, norm(attn): 0.1572, norm(output): 0.2969, norm(x): 0.2664, norm(y): 1.0074, norm:2.1979, tok/sec: 101628.20, flops:106.66, batch-reuse:1
@ 1517 train 5.4253 , allloss: 5.4267, dt: 1301.25ms, fracRes: 0.1801, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2650, norm(y): 1.0075, norm:1.8764, tok/sec: 100727.52, flops:105.72, batch-reuse:1
@ 1518 train 5.4234 , allloss: 5.4252, dt: 1278.48ms, fracRes: 0.1794, norm(attn): 0.1562, norm(output): 0.2949, norm(x): 0.2654, norm(y): 1.0074, norm:2.1171, tok/sec: 102522.14, flops:107.60, batch-reuse:1
@ 1519 train 5.4244 , allloss: 5.4268, dt: 1270.09ms, fracRes: 0.1813, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2658, norm(y): 1.0075, norm:1.8820, tok/sec: 103199.02, flops:108.31, batch-reuse:1
@ 1520 train 5.4496 , allloss: 5.4514, dt: 1272.46ms, fracRes: 0.1810, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2658, norm(y): 1.0075, norm:1.8578, tok/sec: 103006.95, flops:108.11, batch-reuse:1
@ 1521 train 5.4197 , allloss: 5.4214, dt: 1291.30ms, fracRes: 0.1822, norm(attn): 0.1572, norm(output): 0.2949, norm(x): 0.2645, norm(y): 1.0075, norm:1.3906, tok/sec: 101504.07, flops:106.53, batch-reuse:1
@ 1522 train 5.4321 , allloss: 5.4339, dt: 1276.88ms, fracRes: 0.1817, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2646, norm(y): 1.0075, norm:1.8765, tok/sec: 102650.36, flops:107.73, batch-reuse:1
@ 1523 train 5.4644 , allloss: 5.4657, dt: 1290.01ms, fracRes: 0.1814, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2657, norm(y): 1.0074, norm:1.4591, tok/sec: 101605.53, flops:106.64, batch-reuse:1
@ 1524 train 5.4332 , allloss: 5.4341, dt: 1298.96ms, fracRes: 0.1881, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2643, norm(y): 1.0076, norm:2.0696, tok/sec: 100905.12, flops:105.90, batch-reuse:1
@ 1525 train 5.4091 , allloss: 5.4106, dt: 1514.02ms, fracRes: 0.1879, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2640, norm(y): 1.0076, norm:1.6756, tok/sec: 86572.01, flops:90.86, batch-reuse:1
@ 1526 train 5.4962 , allloss: 5.5021, dt: 1268.30ms, fracRes: 0.1837, norm(attn): 0.1572, norm(output): 0.2969, norm(x): 0.2656, norm(y): 1.0075, norm:1.6020, tok/sec: 103344.59, flops:108.46, batch-reuse:1
@ 1527 train 5.4089 , allloss: 5.4105, dt: 1294.92ms, fracRes: 0.1794, norm(attn): 0.1582, norm(output): 0.2969, norm(x): 0.2666, norm(y): 1.0074, norm:1.7715, tok/sec: 101220.49, flops:106.23, batch-reuse:1
@ 1528 train 5.4495 , allloss: 5.4509, dt: 1315.62ms, fracRes: 0.1771, norm(attn): 0.1582, norm(output): 0.2969, norm(x): 0.2668, norm(y): 1.0074, norm:1.5444, tok/sec: 99627.70, flops:104.56, batch-reuse:1
@ 1529 train 5.3746 , allloss: 5.3760, dt: 1324.84ms, fracRes: 0.1747, norm(attn): 0.1582, norm(output): 0.2969, norm(x): 0.2668, norm(y): 1.0075, norm:1.5685, tok/sec: 98934.03, flops:103.83, batch-reuse:1
@ 1530 train 5.4101 , allloss: 5.4113, dt: 1300.88ms, fracRes: 0.1733, norm(attn): 0.1592, norm(output): 0.2969, norm(x): 0.2682, norm(y): 1.0075, norm:1.6734, tok/sec: 100756.12, flops:105.75, batch-reuse:1
@ 1531 train 5.3276 , allloss: 5.3287, dt: 1270.45ms, fracRes: 0.1758, norm(attn): 0.1602, norm(output): 0.2988, norm(x): 0.2685, norm(y): 1.0075, norm:1.6386, tok/sec: 103169.44, flops:108.28, batch-reuse:1
@ 1532 train 5.3899 , allloss: 5.3912, dt: 1293.65ms, fracRes: 0.1745, norm(attn): 0.1582, norm(output): 0.2988, norm(x): 0.2690, norm(y): 1.0075, norm:1.4932, tok/sec: 101319.68, flops:106.34, batch-reuse:1
@ 1533 train 5.3442 , allloss: 5.3450, dt: 1311.55ms, fracRes: 0.1784, norm(attn): 0.1572, norm(output): 0.2969, norm(x): 0.2672, norm(y): 1.0075, norm:1.9824, tok/sec: 99936.56, flops:104.89, batch-reuse:1
@ 1534 train 5.4159 , allloss: 5.4170, dt: 1312.71ms, fracRes: 0.1789, norm(attn): 0.1582, norm(output): 0.2949, norm(x): 0.2663, norm(y): 1.0075, norm:1.8837, tok/sec: 99848.18, flops:104.79, batch-reuse:1
@ 1535 train 5.4390 , allloss: 5.4401, dt: 1317.31ms, fracRes: 0.1793, norm(attn): 0.1582, norm(output): 0.2949, norm(x): 0.2676, norm(y): 1.0075, norm:1.9559, tok/sec: 99499.88, flops:104.43, batch-reuse:1
@ 1536 train 5.3908 , allloss: 5.3924, dt: 1292.18ms, fracRes: 0.1855, norm(attn): 0.1582, norm(output): 0.2930, norm(x): 0.2650, norm(y): 1.0075, norm:2.0686, tok/sec: 101434.56, flops:106.46, batch-reuse:1
@ 1537 train 5.3727 , allloss: 5.3736, dt: 1299.24ms, fracRes: 0.1862, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2647, norm(y): 1.0075, norm:1.8156, tok/sec: 100883.53, flops:105.88, batch-reuse:1
@ 1538 train 5.3223 , allloss: 5.3233, dt: 1324.59ms, fracRes: 0.1828, norm(attn): 0.1592, norm(output): 0.2969, norm(x): 0.2664, norm(y): 1.0075, norm:1.8329, tok/sec: 98952.80, flops:103.85, batch-reuse:1
@ 1539 train 5.4210 , allloss: 5.4223, dt: 1326.07ms, fracRes: 0.1845, norm(attn): 0.1572, norm(output): 0.2969, norm(x): 0.2668, norm(y): 1.0075, norm:2.1034, tok/sec: 98842.15, flops:103.74, batch-reuse:1
@ 1540 train 5.3745 , allloss: 5.3759, dt: 1321.31ms, fracRes: 0.1875, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2657, norm(y): 1.0076, norm:1.8128, tok/sec: 99198.82, flops:104.11, batch-reuse:1
@ 1541 train 5.3456 , allloss: 5.3469, dt: 1286.85ms, fracRes: 0.1886, norm(attn): 0.1562, norm(output): 0.2949, norm(x): 0.2650, norm(y): 1.0075, norm:1.6169, tok/sec: 101855.20, flops:106.90, batch-reuse:1
@ 1542 train 5.4065 , allloss: 5.4077, dt: 1288.44ms, fracRes: 0.1846, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2676, norm(y): 1.0075, norm:1.7021, tok/sec: 101729.07, flops:106.77, batch-reuse:1
@ 1543 train 5.6972 , allloss: 5.6978, dt: 1290.09ms, fracRes: 0.1912, norm(attn): 0.1602, norm(output): 0.2969, norm(x): 0.2667, norm(y): 1.0076, norm:2.0199, tok/sec: 101598.98, flops:106.63, batch-reuse:1
@ 1544 train 5.2920 , allloss: 5.2938, dt: 1317.99ms, fracRes: 0.1845, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2671, norm(y): 1.0076, norm:2.2045, tok/sec: 99448.63, flops:104.37, batch-reuse:1
@ 1545 train 5.3870 , allloss: 5.3886, dt: 1321.24ms, fracRes: 0.1824, norm(attn): 0.1553, norm(output): 0.3008, norm(x): 0.2692, norm(y): 1.0076, norm:1.7068, tok/sec: 99203.59, flops:104.12, batch-reuse:1
@ 1546 train 5.8523 , allloss: 5.8533, dt: 1275.97ms, fracRes: 0.1816, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2694, norm(y): 1.0075, norm:2.1630, tok/sec: 102723.19, flops:107.81, batch-reuse:1
@ 1547 train 5.4423 , allloss: 5.4435, dt: 1285.98ms, fracRes: 0.1810, norm(attn): 0.1602, norm(output): 0.3008, norm(x): 0.2696, norm(y): 1.0075, norm:2.8289, tok/sec: 101924.15, flops:106.97, batch-reuse:1
@ 1548 train 5.5494 , allloss: 5.5532, dt: 1287.44ms, fracRes: 0.1819, norm(attn): 0.1602, norm(output): 0.3008, norm(x): 0.2691, norm(y): 1.0074, norm:2.4061, tok/sec: 101808.37, flops:106.85, batch-reuse:1
@ 1549 train 5.4925 , allloss: 5.4943, dt: 1306.37ms, fracRes: 0.1839, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2683, norm(y): 1.0075, norm:2.1866, tok/sec: 100333.37, flops:105.30, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3730, 0.6289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2217, 0.1147, 0.6641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.3184, 0.2695, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2129, 0.3711, 0.0293, 0.0125, 0.3750, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1758, 0.1914, 0.0645, 0.0171, 0.2715, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1611, 0.0972, 0.0957, 0.1279, 0.2051, 0.1777, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0449, 0.0320, 0.1328, 0.4473, 0.0264, 0.0188, 0.0149, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.1187, 0.0304, 0.0249, 0.1689, 0.1768, 0.1914, 0.0486, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.0996, 0.0947, 0.1021, 0.0923, 0.0728, 0.0913, 0.1699, 0.0894, 0.0659, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0312, 0.0542, 0.0066, 0.0027, 0.0713, 0.0962, 0.1621, 0.0017, 0.1689, 0.2930, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0889, 0.0859, 0.0342, 0.0149, 0.0238, 0.1035, 0.2432, 0.0508, 0.0938, 0.0479, 0.1367, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0815, 0.0693, 0.0996, 0.0422, 0.0229, 0.0315, 0.1650, 0.0742, 0.0366, 0.0576, 0.1572, 0.0874, 0.0000, 0.0000],
        [0.0591, 0.1016, 0.0276, 0.0255, 0.0884, 0.1367, 0.1211, 0.0190, 0.0728, 0.1016, 0.0840, 0.0219, 0.0383, 0.1030, 0.0000],
        [0.0684, 0.0386, 0.1030, 0.0981, 0.0415, 0.0302, 0.0613, 0.1729, 0.0352, 0.0337, 0.0486, 0.0620, 0.0923, 0.0505, 0.0635]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0233,  0.0293, -0.0430,  ..., -0.0257,  0.0196,  0.0277],
        [ 0.0441,  0.0111,  0.0063,  ..., -0.0006, -0.0071, -0.0378],
        [ 0.0091,  0.0184,  0.0076,  ...,  0.0055,  0.0007, -0.0063],
        ...,
        [-0.0370,  0.0191,  0.0019,  ...,  0.0251, -0.0018,  0.0018],
        [ 0.0627, -0.0072, -0.0268,  ...,  0.0210, -0.0015,  0.0012],
        [ 0.0078,  0.0082,  0.0318,  ..., -0.0049, -0.0248,  0.0254]], device='cuda:0', requires_grad=True)
K: tensor([    -0.1348,      0.4531,      0.0403,     -1.3203,     -0.5859,      0.0008,      0.2734,     -0.0786,      0.2246,      0.3652,      0.8047,      1.0234,     -0.5898,      1.2188,      0.0776,     -0.1758,      0.2441,      0.0801,      0.0859,      0.3711,     -0.0476,     -0.1719,
            -0.8398,     -0.3281,     -0.0339,      0.1152,     -0.3359,     -0.6953,     -0.4824,      0.7812,     -0.3086,     -0.2578,     -0.0972,     -0.4277,     -0.1318,     -0.3828,      0.2061,     -0.2451,      0.0067,      0.4395,      0.4199,     -0.1348,      0.5469,      0.0693,
            -0.6094,      0.0635,      0.1680,     -0.3281,      0.8008,     -0.1406,     -0.1455,     -0.8164,     -1.3359,      0.3945,      0.5273,     -0.1318,      0.3906,      0.5664,     -0.7852,     -0.0903,      0.6211,      0.0269,     -0.1631,     -1.0078], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0337, -0.0001,  0.0152,  ...,  0.0321, -0.0013, -0.0347],
        [ 0.0132,  0.0330, -0.0304,  ..., -0.0019,  0.0145, -0.0139],
        [ 0.0149, -0.0247,  0.0081,  ...,  0.0455, -0.0059, -0.0396],
        ...,
        [ 0.0228,  0.0191,  0.0021,  ..., -0.0211, -0.0115,  0.0159],
        [-0.0251, -0.0240,  0.0155,  ...,  0.0344, -0.0166,  0.0270],
        [ 0.0310,  0.0080, -0.0135,  ..., -0.0442, -0.0240, -0.0013]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3906,  0.1157, -0.1738,  0.1147,  0.1826, -0.5391,  1.0156,  0.7344,  0.0889,  1.0000, -0.9453, -0.3672, -0.2070, -0.4531, -0.4492,  0.0811, -0.8555, -0.1533, -0.0635, -0.0562,  0.7852,  0.3340, -0.1211, -0.3555, -0.4062, -0.6758, -0.4629,  0.0674, -0.9336, -0.5664,  0.1309, -0.5547,
        -0.0801, -0.3789, -0.8359,  0.0796, -0.5039, -0.2812, -0.2275, -0.0791, -0.1367,  0.4434,  0.4219, -0.7852, -1.0469, -0.1660, -0.2012, -0.1992, -0.6289,  0.3047, -0.1011,  0.2344,  0.5586,  1.1953,  0.0525,  0.0344,  0.0767, -0.1406, -0.2139,  0.4551,  0.4512,  0.9648, -0.8047, -0.1138],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.5234,      0.4648,      0.9961,      0.0034,      0.5078,      0.3164,     -0.3457,     -0.1367,     -0.0684,      0.1377,      0.7227,     -0.0055,     -0.0327,      0.8750],
        [     0.0000,     -0.6562,      1.1016,      1.6953,     -0.6211,     -0.7812,     -0.7852,      1.4609,     -1.4453,     -1.5156,     -0.7891,      0.8164,      1.2812,     -0.7930,     -0.3125],
        [     0.0000,      0.1807,      0.0177,     -0.5938,     -0.6758,     -0.6523,      0.0815,      0.5000,     -0.2949,      1.0391,     -0.0649,      0.2363,     -0.2539,     -0.5430,      0.9336],
        [     0.0000,      0.5547,     -1.9844,     -2.8281,      0.5664,      0.4160,      1.5859,     -2.0781,      1.7578,      1.6875,      1.4062,     -1.5000,     -1.2188,      1.4062,      0.3242],
        [     0.0000,      0.0854,     -1.0078,     -2.3281,      0.4336,      0.4629,      0.7773,     -1.0234,      1.1094,      1.2031,      1.2188,     -1.2578,     -1.3828,      0.6484,     -0.0161],
        [     0.0000,     -0.5039,     -0.5195,     -0.2324,      0.2412,      0.1006,     -0.1670,     -0.5195,      0.7539,      0.6602,      0.3691,     -0.2266,     -0.0303,      0.3926,      0.4082],
        [     0.0000,     -0.3379,      1.0859,      2.2969,     -0.5312,     -0.8672,     -1.1016,      1.8438,     -1.3984,     -2.0625,     -0.6250,      0.8789,      1.4141,     -1.4062,     -0.1973],
        [     0.0000,      0.2148,     -1.1484,     -1.3438,      0.5664,      0.6133,      0.6953,     -0.6797,      0.4121,      0.6641,      0.7656,     -1.4688,     -1.2578,      0.6992,      0.3477],
        [     0.0000,     -0.2012,     -0.2520,     -0.1787,     -0.2754,     -0.5117,     -0.2891,      0.3320,     -0.3086,     -0.6133,      0.2021,     -0.1514,     -0.0688,     -0.5781,     -0.5117],
        [     0.0000,      0.5469,     -1.5625,     -2.4375,      0.8203,      1.1172,      1.6406,     -2.9062,      1.6875,      2.2344,      1.2656,     -1.3359,     -1.8359,      1.4453,      0.6484],
        [     0.0000,      0.1680,      0.1367,     -0.7852,     -1.6172,     -1.1484,      0.3223,      1.1797,     -0.3945,      0.2236,     -0.4492,      0.6016,     -0.2734,     -0.6133,      0.4980],
        [     0.0000,      0.1006,     -0.0610,      0.3008,     -0.5625,     -1.1719,     -0.8516,      0.8047,      0.0027,     -0.7031,     -0.2480,      0.7578,      0.1670,      0.0211,     -0.1895],
        [     0.0000,      0.5391,     -0.7656,     -0.8398,      0.4023,      0.8359,      0.7148,     -1.1328,      0.2041,      0.5430,      0.3477,     -0.9961,     -0.4336,      0.5547,      0.1206],
        [     0.0000,     -0.5703,      0.4141,      0.3633,     -0.4961,     -0.8164,     -0.1084,      0.9336,     -0.6641,     -0.7070,     -0.3379,     -0.0972,      0.3047,     -0.2988,     -0.0737]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4358],
        [0.3019],
        [0.2148],
        [0.2426],
        [0.1963],
        [0.0943],
        [0.0913],
        [0.1005],
        [0.1041],
        [0.0559],
        [0.0867],
        [0.0727],
        [0.0618],
        [0.0579]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1865,     0.8125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2695,     0.1328,     0.5977,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2031,     0.0137,     0.5742,     0.2100,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5703,     0.0128,     0.3242,     0.0806,     0.0119,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3789,     0.0243,     0.3145,     0.0613,     0.0171,     0.2041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3340,     0.0119,     0.2910,     0.0361,     0.0055,     0.0737,     0.2471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3047,     0.0065,     0.4766,     0.0649,     0.0045,     0.0123,     0.1016,     0.0291,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5938,     0.0013,     0.2656,     0.0322,     0.0011,     0.0320,     0.0427,     0.0029,     0.0275,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1865,     0.0182,     0.1768,     0.0801,     0.0223,     0.0437,     0.0728,     0.2305,     0.0374,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6016,     0.0008,     0.3320,     0.0347,     0.0002,     0.0059,     0.0167,     0.0024,     0.0052,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1553,     0.0111,     0.3125,     0.1060,     0.0060,     0.0124,     0.0403,     0.0977,     0.0128,     0.0312,     0.0038,     0.2109,     0.0000,     0.0000,     0.0000],
        [    0.1631,     0.0058,     0.2539,     0.0356,     0.0056,     0.0094,     0.0304,     0.0417,     0.0129,     0.0718,     0.0016,     0.3535,     0.0147,     0.0000,     0.0000],
        [    0.6211,     0.0008,     0.2500,     0.0272,     0.0005,     0.0182,     0.0276,     0.0016,     0.0182,     0.0019,     0.0000,     0.0250,     0.0035,     0.0027,     0.0000],
        [    0.2227,     0.0121,     0.1748,     0.1602,     0.0072,     0.0166,     0.0762,     0.0266,     0.0187,     0.0088,     0.0029,     0.0618,     0.0544,     0.0089,     0.1484]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0182, -0.0050, -0.0405,  ...,  0.0217, -0.0190,  0.0178],
        [ 0.0037,  0.0052, -0.0354,  ...,  0.0650, -0.0232,  0.0012],
        [-0.0040, -0.0361, -0.0617,  ...,  0.0335, -0.0178, -0.0063],
        ...,
        [-0.0282, -0.0013,  0.0137,  ...,  0.0161,  0.0103,  0.0465],
        [ 0.0049, -0.0237, -0.0319,  ...,  0.0217,  0.0282,  0.0052],
        [ 0.0202,  0.0370,  0.0098,  ..., -0.0134,  0.0077,  0.0399]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4844,  0.5938, -1.1797, -1.2891, -0.6758, -0.0820, -0.1729, -0.7305,  1.4531, -0.0040, -0.0427,  0.1299, -0.1475,  0.2617, -0.0811, -0.1396,  0.1807,  0.6445, -0.0530,  0.2969,  1.0547,  0.1836, -0.3008, -1.2812, -0.5195,  0.4336, -0.3301, -0.2695, -0.0173,  0.8828,  0.0688, -0.4180,
         0.3594,  0.2158, -0.9102, -0.7969,  1.0625,  2.1094,  0.0669, -0.4512, -1.2188, -0.3691,  0.0898,  0.2227, -1.1328,  0.6055, -0.4453, -0.9492,  0.6445, -0.0815, -0.7344,  0.4004, -0.8203,  0.2461,  0.0645,  1.2188,  0.0150,  0.1465,  0.8789,  0.1475,  0.8789,  0.5430,  0.0245, -0.5273],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0287,      0.0154,     -0.0042,  ...,      0.0015,      0.0270,      0.0051],
        [     0.0199,      0.0144,      0.0471,  ...,     -0.0152,      0.0104,      0.0277],
        [     0.0384,      0.0164,      0.0199,  ...,     -0.0046,      0.0264,     -0.0091],
        ...,
        [     0.0024,     -0.0387,     -0.0106,  ...,      0.0122,     -0.0501,      0.0118],
        [    -0.0128,     -0.0185,      0.0141,  ...,      0.0001,     -0.0202,      0.0188],
        [    -0.0134,     -0.0634,      0.0232,  ...,      0.0137,      0.0102,      0.0107]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.9219,  0.2637, -0.1582,  0.5938,  1.5000, -0.7344,  0.7969,  0.5938,  0.1230,  0.8750,  0.5625, -0.9609,  1.3359,  1.0156, -0.2129,  0.3789,  0.3281,  0.9023,  0.2949, -0.0630,  0.1621, -1.2578,  0.3867,  1.0547,  0.6953, -0.1167,  0.7148, -1.5391,  1.9297, -1.1797, -1.0156,  1.3672,
         1.0312, -0.8711, -1.0469,  0.7305, -0.7266, -0.7852,  0.4453, -0.4492, -0.0698, -2.0000, -0.9062, -1.9375,  0.4746,  0.7969,  0.9297, -0.4336, -0.6797, -1.6094,  0.2891, -0.1768,  0.2793, -0.9219,  0.6133,  0.6914, -1.5859,  0.5508, -0.4023, -1.1562,  0.6953,  0.4590,  1.3750,  0.3965],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.4688,      0.0258,      1.2812,      0.9219,     -0.2930,      0.5820,      1.1719,      0.4980,      1.1016,      1.7734,      0.8789,      0.8320,      1.1172,      1.5703],
        [     0.0000,     -0.7109,      0.7930,      0.3184,     -1.4453,     -1.4922,      0.0054,      1.3203,     -1.2109,     -0.5078,     -0.7305,      0.5781,      0.6289,     -1.0625,      0.5430],
        [     0.0000,     -2.7031,      1.0391,      0.0332,     -3.6875,     -3.2656,     -1.8281,     -1.1562,     -2.7344,     -1.2109,     -4.1562,      0.9219,     -1.5859,     -2.8906,      1.3516],
        [     0.0000,     -3.7969,     -0.5664,     -1.9531,     -3.8750,     -1.2656,     -0.9531,     -1.8594,     -1.5859,     -3.2344,     -5.7812,     -1.8594,     -1.1953,     -2.5312,     -2.0312],
        [     0.0000,     -2.7500,     -0.1885,     -1.8203,     -3.0938,     -0.6211,     -0.4258,     -0.5703,     -1.5156,     -2.8125,     -4.9688,     -1.6094,     -0.6719,     -2.1562,     -2.5781],
        [     0.0000,     -3.3438,     -0.1367,     -2.2188,     -4.0938,     -1.5078,     -0.3027,     -2.1094,     -2.5156,     -3.7969,     -6.4062,     -1.8672,     -1.9922,     -3.4375,     -2.0156],
        [     0.0000,     -3.8438,      0.4512,     -1.5469,     -4.2188,     -3.2031,     -1.0938,     -2.3438,     -3.0625,     -1.8203,     -5.6875,     -0.1367,     -3.0156,     -3.5312,      0.8281],
        [     0.0000,     -6.1562,     -0.8008,     -2.9062,     -6.3125,     -2.9219,     -2.6250,     -5.3438,     -3.0781,     -5.4375,     -9.7500,     -3.0625,     -4.5000,     -4.8750,     -3.2969],
        [     0.0000,     -2.3281,     -0.0535,     -0.8438,     -2.1250,     -1.4453,     -0.9414,      0.2129,     -1.6016,     -0.3398,     -2.5781,      0.0447,     -0.4004,     -1.6406,     -0.0713],
        [     0.0000,     -6.5938,     -0.5898,     -2.8438,     -8.3125,     -4.6250,     -3.5781,     -5.5312,     -4.7500,     -5.9062,    -11.3750,     -2.6250,     -5.2500,     -6.3438,     -2.0469],
        [     0.0000,     -2.6406,      0.7031,     -0.3828,     -3.2656,     -2.5312,     -1.3516,     -0.4629,     -2.5000,     -1.6016,     -3.7031,      0.3066,     -0.6641,     -2.8281,      0.1147],
        [     0.0000,     -3.3438,      0.4453,     -1.5234,     -3.3750,     -2.8438,     -1.6797,     -1.3672,     -2.5312,     -0.8242,     -4.5938,      0.7773,     -2.4062,     -2.7969,      1.2188],
        [     0.0000,     -6.6875,     -0.9102,     -3.1250,     -7.0938,     -3.5312,     -3.1094,     -5.9375,     -3.5312,     -5.7812,    -10.6250,     -3.2188,     -5.1562,     -5.4375,     -3.2188],
        [     0.0000,     -2.9219,     -0.2432,     -0.3262,     -3.4219,     -2.5938,     -1.0703,     -2.1250,     -2.4844,     -3.2344,     -4.3438,     -1.2812,     -1.4062,     -3.2188,     -0.4043]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2246],
        [0.3356],
        [0.3158],
        [0.7301],
        [0.6756],
        [0.4564],
        [0.4043],
        [0.7775],
        [0.3524],
        [0.7194],
        [0.3200],
        [0.2829],
        [0.7985],
        [0.3731]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4668,     0.1328,     0.4004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0114,     0.0134,     0.0048,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0011,     0.0007,     0.0002,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0018,     0.0044,     0.0012,     0.0008,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6328,     0.0408,     0.1309,     0.0869,     0.0273,     0.0317,     0.0476,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0006,     0.0003,     0.0004,     0.0005,     0.0005,     0.0006,     0.0006,     0.0069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9102,     0.0063,     0.0085,     0.0031,     0.0038,     0.0067,     0.0053,     0.0096,     0.0369,     0.0064,     0.0045,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4297,     0.0217,     0.0574,     0.0591,     0.0193,     0.0437,     0.0500,     0.1221,     0.0171,     0.0854,     0.0693,     0.0261,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0002,     0.0001,     0.0001,     0.0002,     0.0002,     0.0002,     0.0002,     0.0038,     0.0001,     0.0019,     0.0001,     0.0003,     0.0014,     0.0000],
        [    0.8984,     0.0039,     0.0048,     0.0051,     0.0022,     0.0027,     0.0064,     0.0170,     0.0069,     0.0049,     0.0194,     0.0016,     0.0190,     0.0051,     0.0021]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0262, -0.0264, -0.0040,  ..., -0.0003,  0.0162,  0.0467],
        [ 0.0050, -0.0006,  0.0399,  ...,  0.0052,  0.0370,  0.0164],
        [ 0.0132, -0.0154, -0.0325,  ..., -0.0235, -0.0141,  0.0434],
        ...,
        [ 0.0177,  0.0151, -0.0070,  ..., -0.0274,  0.0215, -0.0336],
        [ 0.0105, -0.0204, -0.0239,  ...,  0.0064, -0.0146,  0.0399],
        [ 0.0324,  0.0007,  0.0091,  ...,  0.0160,  0.0127, -0.0247]], device='cuda:0', requires_grad=True)
K: tensor([ 2.3125, -0.4785, -1.4141,  1.2656,  1.2578,  1.3672,  1.9766,  1.6484,  1.3672, -2.3594, -1.8438, -2.5156,  0.9883, -1.0547,  0.8906, -1.3047,  1.2969,  1.4141, -1.6484, -2.0625,  0.7656, -1.5312, -0.5820,  0.8320,  0.3984, -1.5938, -1.3047, -1.6016, -0.5703, -2.0312, -1.3750, -0.8750,
         1.7188, -1.8438,  1.6562, -1.7266, -0.5508,  2.2188, -1.5469,  3.3438,  1.7500,  1.4688, -1.0703, -2.3281, -1.0781, -0.8984, -0.9570,  2.8281,  2.3438, -0.9297, -2.3125,  1.7031,  0.9258, -1.9766,  1.4062,  1.4766,  2.0625, -0.8789,  0.9883,  1.7656,  1.7734,  2.4219, -0.6328,  1.1641],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0605,  0.0186,  0.0140,  ..., -0.0008,  0.0039, -0.0272],
        [-0.0199,  0.0023, -0.0163,  ...,  0.0129, -0.0178,  0.0279],
        [ 0.0039, -0.0105,  0.0094,  ..., -0.0375,  0.0235, -0.0077],
        ...,
        [-0.0087,  0.0097,  0.0073,  ...,  0.0117, -0.0161,  0.0286],
        [-0.0171, -0.0209,  0.0032,  ..., -0.0359,  0.0341, -0.0128],
        [-0.0247,  0.0166, -0.0228,  ...,  0.0491, -0.0299,  0.0003]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5039, -0.4883,  0.3340, -0.6562, -0.2754, -0.8477, -1.3359, -0.0262, -0.7539,  0.9180,  1.2344,  1.2578,  0.1357,  1.5156, -0.5078,  0.1562, -0.2988, -1.4609,  0.4746,  0.2041,  0.3438, -0.7305, -0.0095,  0.1777, -0.6172,  0.8008, -0.0339,  1.7344,  0.2197,  0.2236, -0.2207, -0.3984,
        -1.1016, -0.0771,  0.1030,  0.5625,  0.8008, -1.7031,  0.0884, -0.5625, -1.0234, -1.1562,  0.2871,  0.4609, -1.3672, -0.1055,  0.3164, -0.4316,  0.3379,  0.5234,  1.1875, -0.5508, -0.5625,  0.3496,  0.0130,  0.3594, -0.7578,  1.2656, -1.8672, -0.1104, -1.1875, -0.5898, -0.8008,  0.4473],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -6.8125,  -6.2188,  -7.7812,  -7.4688,  -6.0000,  -6.0625,  -7.0938,  -5.0000,  -7.0000,  -5.7500,  -6.8750,  -6.5938,  -5.7188,  -6.9688],
        [  0.0000,  -1.2578,  -0.1533,  -0.1338,  -1.1875,  -0.3457,  -0.3164,   0.6680,  -2.0469,   0.4121,  -0.3359,  -0.8281,   0.6367,  -1.9141,  -1.2109],
        [  0.0000,  -4.4375,  -4.2812,  -5.3125,  -4.5000,  -4.2812,  -4.6250,  -4.0312,  -3.0625,  -5.2500,  -4.1875,  -4.7812,  -3.8281,  -3.6094,  -5.2812],
        [  0.0000,  -6.7812,  -7.3125,  -8.4375,  -8.4375,  -7.8750,  -7.4688,  -7.5000,  -4.1875, -10.0625,  -6.3438,  -8.1875,  -7.5312,  -5.1875,  -7.9375],
        [  0.0000,  -6.2812,  -5.4062,  -6.7188,  -7.1250,  -6.4375,  -6.3438,  -6.1250,  -4.6250,  -7.9688,  -5.5312,  -6.6875,  -6.1250,  -5.3750,  -7.0938],
        [  0.0000,  -2.7500,  -1.5781,  -1.9844,  -3.1406,  -3.0000,  -2.5938,  -1.1562,  -1.9141,  -1.6953,  -2.6719,  -2.2656,  -1.0859,  -2.0000,  -2.5938],
        [  0.0000, -10.3750, -11.3750, -13.6250, -11.8125, -10.8125, -11.9375, -12.0625,  -7.0000, -17.1250,  -9.6250, -13.1250, -11.6250,  -8.3125, -14.1250],
        [  0.0000,  -7.4688,  -7.9375,  -7.8125,  -7.5625,  -7.6250,  -7.3438,  -7.3750,  -4.9688,  -8.1250,  -5.3438,  -8.4375,  -6.9062,  -5.7812,  -8.0625],
        [  0.0000,  -9.5625,  -9.4375, -12.3125, -10.0000,  -8.8125, -10.9375, -10.7500,  -6.3125, -14.5000,  -8.7500, -11.0000, -10.5000,  -7.5938, -12.3750],
        [  0.0000,  -4.9688,  -4.6562,  -5.6875,  -5.4688,  -4.9062,  -5.1250,  -4.5625,  -3.2031,  -4.9375,  -5.3125,  -4.9688,  -3.9688,  -3.6875,  -5.2500],
        [  0.0000,  -2.9844,  -2.0156,  -1.9844,  -3.1094,  -2.2812,  -2.1562,  -1.2578,  -3.2188,  -1.6172,  -1.8203,  -2.7969,  -1.0312,  -3.2969,  -3.1406],
        [  0.0000, -12.1250, -13.3750, -16.5000, -13.5625, -12.8125, -14.1250, -14.6875,  -7.3125, -20.5000, -11.6250, -15.1875, -14.4375,  -9.0625, -16.5000],
        [  0.0000,  -8.4375,  -9.0000,  -9.1875,  -8.5000,  -8.5000,  -8.4375,  -8.5625,  -5.5625,  -9.6875,  -6.2500,  -9.6250,  -8.0625,  -6.5312,  -9.3125],
        [  0.0000,  -5.4375,  -5.2500,  -5.1562,  -6.0000,  -5.8125,  -4.9375,  -3.9688,  -4.8750,  -5.2188,  -3.8438,  -6.3438,  -3.8594,  -5.1562,  -6.0312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6167],
        [0.4894],
        [0.6942],
        [0.5835],
        [0.5055],
        [0.3633],
        [0.6346],
        [0.7535],
        [0.6298],
        [0.4291],
        [0.4397],
        [0.7527],
        [0.7296],
        [0.5981]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4414, 0.5586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.4062, 0.4434, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2119, 0.1562, 0.5820, 0.0515, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.0845, 0.3516, 0.0500, 0.2451, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0488, 0.0981, 0.1875, 0.0796, 0.0747, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0481, 0.1035, 0.1182, 0.0172, 0.0286, 0.4062, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0586, 0.0165, 0.1152, 0.0068, 0.0231, 0.1201, 0.1348, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.0247, 0.0605, 0.0427, 0.0967, 0.2480, 0.0564, 0.3477, 0.0569, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.0157, 0.0645, 0.0184, 0.0796, 0.1191, 0.0659, 0.2754, 0.1406, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.0171, 0.0334, 0.0031, 0.0109, 0.1001, 0.0476, 0.4180, 0.0093, 0.2891, 0.0055, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0068, 0.0133, 0.0164, 0.0108, 0.0125, 0.0425, 0.2227, 0.0840, 0.1118, 0.0635, 0.3594, 0.0559, 0.0000, 0.0000, 0.0000],
        [0.0488, 0.0182, 0.0708, 0.0064, 0.0219, 0.0928, 0.0664, 0.2598, 0.0374, 0.0845, 0.0210, 0.0796, 0.1934, 0.0000, 0.0000],
        [0.0579, 0.0179, 0.0364, 0.0172, 0.0588, 0.1465, 0.0308, 0.2051, 0.0337, 0.0339, 0.0369, 0.0327, 0.2432, 0.0498, 0.0000],
        [0.0079, 0.0231, 0.0284, 0.0033, 0.0066, 0.0282, 0.1973, 0.0776, 0.0378, 0.0255, 0.1523, 0.0304, 0.0806, 0.0918, 0.2090]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0219,      0.0235,      0.0439,  ...,     -0.0240,      0.0253,     -0.0273],
        [    -0.0210,     -0.0168,      0.0090,  ...,     -0.0454,     -0.0343,      0.0300],
        [    -0.0271,     -0.0461,      0.0230,  ...,      0.0103,     -0.0184,      0.0067],
        ...,
        [     0.0399,     -0.0143,     -0.0151,  ...,     -0.0195,     -0.0309,     -0.0057],
        [     0.0223,      0.0559,      0.0000,  ...,      0.0538,     -0.0228,     -0.0042],
        [     0.0123,      0.0060,     -0.0070,  ...,     -0.0076,      0.0347,     -0.0105]], device='cuda:0', requires_grad=True)
K: tensor([    -0.5664,     -0.5820,     -0.2305,     -0.2041,      0.6250,     -1.1953,      0.0396,      1.7578,      0.1177,     -0.0437,      2.3594,     -1.5391,      2.3594,      1.5859,      0.6602,     -0.1650,      2.0000,     -0.3574,      1.6172,     -1.5000,     -0.1152,     -2.1250,
             0.4355,      0.3652,     -2.0625,      0.1963,     -0.0006,      1.1562,     -1.9844,      0.5039,     -2.1094,     -0.4883,      1.1406,     -1.4766,      0.0503,     -1.9844,     -0.8008,      0.9922,     -0.0077,     -0.3848,      2.2500,      0.3164,      0.4629,      1.4062,
            -1.5078,     -1.7266,      0.8398,     -1.4531,     -0.6641,      0.8438,      1.0859,     -2.4375,      2.5312,     -0.6484,      1.0703,     -1.8672,      1.3438,      0.0718,      0.9375,     -0.9375,     -0.9531,      0.5742,      0.4707,      0.4922], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0168,  0.0316, -0.0573,  ..., -0.0111, -0.0422, -0.0077],
        [-0.0252,  0.0213,  0.0058,  ..., -0.0107, -0.0008, -0.0372],
        [ 0.0186,  0.0422, -0.0347,  ...,  0.0196, -0.0322,  0.0078],
        ...,
        [-0.0009, -0.0128,  0.0027,  ..., -0.0272,  0.0323, -0.0019],
        [ 0.0194, -0.0167, -0.0054,  ..., -0.0109,  0.0292,  0.0116],
        [ 0.0458,  0.0137,  0.0142,  ..., -0.0314, -0.0263,  0.0314]], device='cuda:0', requires_grad=True)
Q: tensor([    -1.4141,      1.5391,      0.5508,     -1.1875,      1.2500,     -1.3125,     -0.7266,     -1.6328,     -0.8008,      0.1758,      1.0234,     -1.8672,      0.3809,      0.1904,      0.2891,     -1.4219,     -0.1128,      1.3594,      1.2891,     -0.2363,      0.8789,     -0.6914,
            -1.2891,     -0.9414,      0.8750,     -0.0693,     -1.2266,      0.4043,     -0.0262,      0.8672,     -0.5117,     -0.2734,      0.0031,      0.3652,      1.4062,     -0.2100,     -3.8906,     -0.6758,      1.2969,     -0.9648,      1.9453,      1.0391,      1.2344,     -0.0366,
            -1.7188,     -1.2578,      1.7188,     -1.2734,      0.0393,      1.9453,      0.0586,     -0.5156,     -0.3555,     -0.1348,      0.4199,      0.9492,      1.2656,     -0.0845,     -0.0344,     -0.1914,      1.7734,      1.2422,      1.1719,     -1.8203], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2373,  2.3125,  0.1030,  0.3496,  1.6562,  2.2812,  2.8438,  0.5742,  1.2891,  1.1016,  1.3984,  1.9297,  0.8125,  2.0000],
        [ 0.0000,  0.9844,  1.0703,  1.1562,  0.6914,  1.9141,  3.5781,  2.0625,  2.5312,  2.5938,  4.1250,  2.0312,  2.9688,  3.2188,  3.4688],
        [ 0.0000, -0.3066,  1.0078, -1.4141, -0.4629,  0.4707,  1.6406,  1.1484,  0.7266,  1.8125,  1.4141,  1.3984,  1.8594,  1.3828,  1.8906],
        [ 0.0000, -1.1562,  0.2715, -1.6797, -0.0884,  1.0469,  0.7812,  2.3281,  0.3672,  1.0469,  0.0297,  1.6094,  2.2031,  0.7930,  1.8516],
        [ 0.0000,  0.6992,  1.3438,  0.4863,  0.4258,  2.3438,  2.5781,  2.7500,  1.4609,  1.9922,  2.1719,  1.6172,  3.0000,  2.1094,  2.8281],
        [ 0.0000,  0.7695,  0.9023, -1.0234, -0.5195,  2.1406,  1.7578,  1.8828,  0.0771,  1.4219,  0.8398,  1.3594,  2.3281,  0.7422,  2.2500],
        [ 0.0000, -1.2656,  0.6758, -2.1562, -0.9336,  0.7148,  0.8320,  2.1875, -0.2373,  0.9805, -0.7891,  1.2031,  1.7500,  0.2412,  1.8828],
        [ 0.0000, -1.0078, -0.1108, -0.4570,  0.3594,  1.2969, -0.1836,  1.6328, -0.1729, -0.1128, -0.0294, -0.1201,  1.7812,  0.1406,  0.3945],
        [ 0.0000, -1.6016, -0.1924, -1.4453,  0.0179,  0.4219, -0.1738,  1.2578,  0.5859,  0.5977,  0.0160,  0.1147,  1.7578,  1.0938,  0.6953],
        [ 0.0000, -1.3516, -0.6836, -3.0625, -1.8047,  0.4141, -0.3281,  1.8438, -1.9609,  1.4766, -2.4844, -0.1484,  2.3438, -1.5156, -0.6016],
        [ 0.0000,  0.6680,  0.8750,  0.4551,  0.6016,  1.8281,  3.4844,  2.5156,  2.7969,  2.2344,  3.9688,  2.0938,  3.1250,  3.5938,  3.7500],
        [ 0.0000, -0.9883,  0.3672, -2.0312, -0.8047,  0.6406,  0.3086,  1.6641, -0.2695,  0.5469, -0.8438,  0.4902,  1.3750,  0.2480,  1.1406],
        [ 0.0000, -1.1719, -0.4668, -1.2109,  0.0187,  0.9258, -0.6328,  1.2656, -0.5430, -0.5312, -0.4531, -0.5703,  1.4375, -0.1523, -0.0148],
        [ 0.0000,  1.0781,  1.2812, -0.8789, -0.1738,  1.2734,  3.2188,  2.2812,  1.5703,  1.1719,  2.9688,  1.3516,  2.3281,  2.4531,  3.2812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4397],
        [0.2672],
        [0.3512],
        [0.1880],
        [0.1158],
        [0.1210],
        [0.1504],
        [0.0831],
        [0.0885],
        [0.1140],
        [0.0288],
        [0.0672],
        [0.0552],
        [0.0355]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.7266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.2334, 0.5625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.2676, 0.1709, 0.4609, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0293, 0.2100, 0.0562, 0.0430, 0.6602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.1396, 0.0713, 0.0342, 0.2129, 0.4688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0369, 0.1172, 0.0825, 0.0270, 0.1533, 0.1592, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0356, 0.0452, 0.0151, 0.0508, 0.1123, 0.2695, 0.3047, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.1406, 0.0593, 0.0378, 0.1177, 0.1777, 0.1797, 0.1279, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0260, 0.0410, 0.0240, 0.0383, 0.1270, 0.2617, 0.1855, 0.1436, 0.0903, 0.0625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0320, 0.1079, 0.0266, 0.0210, 0.1621, 0.1943, 0.1670, 0.0752, 0.0410, 0.0449, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.0410, 0.0593, 0.0952, 0.1328, 0.0781, 0.0620, 0.0786, 0.1934, 0.0623, 0.0923, 0.0654, 0.0000, 0.0000, 0.0000],
        [0.0435, 0.0255, 0.0058, 0.0378, 0.0588, 0.2480, 0.1226, 0.0417, 0.0728, 0.0581, 0.0972, 0.0063, 0.1816, 0.0000, 0.0000],
        [0.0496, 0.0986, 0.0280, 0.0251, 0.0742, 0.1416, 0.1094, 0.0498, 0.0500, 0.0737, 0.1079, 0.0454, 0.0923, 0.0544, 0.0000],
        [0.0096, 0.0154, 0.0337, 0.0767, 0.0713, 0.1147, 0.1328, 0.0840, 0.0908, 0.0258, 0.0698, 0.0194, 0.1133, 0.0962, 0.0469]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0058,  0.0019,  0.0210,  ..., -0.0213,  0.0232,  0.0216],
        [ 0.0043, -0.0024, -0.0078,  ..., -0.0109, -0.0282, -0.0025],
        [-0.0153, -0.0373, -0.0072,  ...,  0.0323, -0.0268,  0.0043],
        ...,
        [-0.0127,  0.0200,  0.0113,  ..., -0.0260, -0.0492,  0.0304],
        [-0.0296, -0.0080, -0.0177,  ..., -0.0135, -0.0242,  0.0023],
        [ 0.0051,  0.0098,  0.0140,  ...,  0.0155,  0.0017,  0.0185]], device='cuda:0', requires_grad=True)
K: tensor([-0.2451, -0.4902,  0.2295,  0.4707,  0.4121,  0.2539, -0.2373,  0.7539, -1.0312, -0.0977,  0.5859, -1.0781, -0.5820,  1.1953, -0.7227,  0.2344,  1.1328,  0.8242,  0.9492,  0.5547,  0.5859, -0.5273,  0.5586,  1.0078, -0.8281,  0.2578, -0.2891,  0.6562,  1.9062, -0.9453,  0.3105, -0.4453,
        -0.7422, -0.3730, -0.1816,  0.9023,  0.1348, -0.2852, -0.0557, -0.3535, -0.5117, -0.3164, -0.6914, -0.1621,  0.3750, -0.2930, -1.0000, -1.0234, -0.3496,  1.0078,  0.8828, -1.0078, -0.6641,  1.5234,  0.6250, -1.2578, -0.0447, -0.7344, -0.9297, -0.8516,  1.3281, -0.4766, -0.1836,  0.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0362,      0.0317,     -0.0281,  ...,      0.0079,      0.0082,      0.0169],
        [    -0.0201,      0.0066,     -0.0129,  ...,     -0.0272,     -0.0092,     -0.0338],
        [    -0.0177,     -0.0133,     -0.0069,  ...,     -0.0169,      0.0006,      0.0002],
        ...,
        [     0.0094,      0.0098,     -0.0383,  ...,     -0.0153,      0.0227,      0.0208],
        [    -0.0059,     -0.0123,     -0.0291,  ...,      0.0001,     -0.0112,      0.0350],
        [    -0.0017,      0.0231,     -0.0048,  ...,     -0.0099,     -0.0144,     -0.0177]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0547, -0.1865, -0.5625, -0.3633, -0.2539, -1.6641, -0.0928,  0.8086, -0.3945, -0.9102, -0.7109,  0.9961, -0.2217,  1.4062,  0.1196, -0.5977,  0.5820, -0.0150,  1.5703,  0.1797, -0.5938, -1.4141, -0.2207,  0.8008, -0.0302,  1.3047, -0.0640,  0.7656,  0.6523,  0.3242, -0.1895, -0.1045,
        -0.1494, -0.7852, -1.8984,  0.1279, -0.9688, -0.8438,  0.8828,  0.5664,  0.5859,  0.8203, -0.6016, -0.2490, -1.8203,  0.6133, -0.4590,  0.7852, -0.8984, -0.1309,  0.2363, -0.1992,  0.1152,  0.4082,  1.3438, -0.5508, -0.8242, -2.1094, -0.8867, -0.3359,  0.1157, -1.2031, -0.5195,  1.7344],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.9805,      0.2969,      1.6797,      1.6328,      1.1953,      1.1094,      0.3594,      0.4766,      0.1904,     -0.2695,     -0.1250,      1.0391,      0.2832,      0.5156],
        [     0.0000,      0.1436,      1.0234,      1.4688,      1.7109,      0.6914,      0.8008,      1.1641,      2.1250,      0.9141,      1.0703,      0.8906,      1.2578,      1.9375,      0.4805],
        [     0.0000,      1.0000,      0.5508,      1.5469,      2.2031,      2.1719,      2.1562,      2.2188,      2.2500,      1.2734,      2.2500,      0.7344,      2.4062,      2.2188,      1.2812],
        [     0.0000,      1.9688,      0.6523,      0.3828,      3.1250,      3.0469,      2.0000,      2.0469,      1.2734,      0.2480,      1.7969,      1.3125,      2.0625,      1.1484,      2.0625],
        [     0.0000,      0.6250,     -0.0493,     -0.7812,      1.0469,      1.8359,      0.1108,      0.7812,      0.2334,      0.5391,      1.2422,      1.2031,      0.8984,      0.3516,      0.2949],
        [     0.0000,      1.1562,      0.8086,     -0.3086,      1.4297,      1.4688,      2.4375,      2.3281,      1.7266,      0.8477,      1.9141,      1.1797,      0.6133,      1.2891,      1.6250],
        [     0.0000,      0.2344,     -0.8633,      0.3535,      1.1406,      2.0312,      2.1406,      1.5391,      1.5781,      0.6445,      1.5469,     -0.9727,      1.7578,      1.5938,      1.2969],
        [     0.0000,      0.7188,     -0.1406,     -0.5938,      0.5430,      0.9531,      0.9648,      0.6250,      0.3008,      0.7070,      0.8984,      0.3848,      0.7500,      0.1216,      0.5430],
        [     0.0000,      0.4570,     -0.0752,      0.3926,      1.5859,      2.3125,      1.9688,      1.7109,      1.2500,      0.8789,      1.7812,      0.4727,      2.4375,      1.5156,      0.5586],
        [     0.0000,      1.2188,     -0.1816,     -0.4199,      1.6250,      1.8047,      1.6562,      0.8555,      0.2500,      0.3379,      1.3906,      0.3574,      0.9062,      0.2344,      0.6523],
        [     0.0000,      0.0356,      0.4023,      0.8750,      1.2031,      0.6758,      0.4473,      0.6875,      1.5859,      0.4492,      0.8438,      0.4961,      1.1641,      1.5859,      0.0461],
        [     0.0000,     -0.5312,     -2.0156,     -0.1387,      0.3047,      1.7422,      1.0391,     -0.0391,      0.5156,      0.2891,      0.8047,     -1.9297,      1.4297,      0.9805,      0.3281],
        [     0.0000,      0.6875,     -0.5742,     -0.6836,      0.4023,      1.0469,      0.7891,      0.0024,      0.0100,      0.3965,      0.7734,     -0.0889,      0.6172,      0.0903,      0.3809],
        [     0.0000,      0.4688,      1.2500,      2.0781,      2.0000,      2.4688,      2.6250,      2.1562,      2.2500,      0.9844,      1.9844,      0.6992,      2.4688,      2.2969,      1.5859]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3753],
        [0.1759],
        [0.1778],
        [0.1830],
        [0.1345],
        [0.1856],
        [0.3425],
        [0.1118],
        [0.1233],
        [0.0775],
        [0.0606],
        [0.1526],
        [0.0898],
        [0.0324]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1631 a:0.1289.:0.1914 and:0.1299om:0.0625,:0.4746 a:0.0923ery:0.0908)
ery
------
		( a:0.1289.:0.1914 and:0.1299om:0.0625,:0.4746 a:0.0923ery:0.0908.:0.1138)
.
The first of the first day of the first day of the first
@ 1550 train 5.4416 , allloss: 5.4456, dt: 1692.93ms, fracRes: 0.1869, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2682, norm(y): 1.0075, norm:2.3025, tok/sec: 77422.96, flops:81.26, batch-reuse:1
@ 1551 train 5.4099 , allloss: 5.4151, dt: 1301.67ms, fracRes: 0.1878, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2690, norm(y): 1.0075, norm:2.1193, tok/sec: 100694.96, flops:105.68, batch-reuse:1
@ 1552 train 5.2879 , allloss: 5.2905, dt: 1299.57ms, fracRes: 0.1890, norm(attn): 0.1572, norm(output): 0.2969, norm(x): 0.2673, norm(y): 1.0075, norm:1.8650, tok/sec: 100858.04, flops:105.85, batch-reuse:1
@ 1553 train 5.3960 , allloss: 5.3973, dt: 1299.59ms, fracRes: 0.1885, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2684, norm(y): 1.0076, norm:2.1727, tok/sec: 100856.75, flops:105.85, batch-reuse:1
@ 1554 train 5.3704 , allloss: 5.3717, dt: 1288.02ms, fracRes: 0.1904, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2683, norm(y): 1.0077, norm:1.6889, tok/sec: 101762.31, flops:106.80, batch-reuse:1
@ 1555 train 5.4008 , allloss: 5.4043, dt: 1317.48ms, fracRes: 0.1882, norm(attn): 0.1572, norm(output): 0.3008, norm(x): 0.2699, norm(y): 1.0076, norm:2.0506, tok/sec: 99486.91, flops:104.41, batch-reuse:1
@ 1556 train 5.4817 , allloss: 5.4847, dt: 1279.34ms, fracRes: 0.1895, norm(attn): 0.1553, norm(output): 0.3008, norm(x): 0.2698, norm(y): 1.0075, norm:1.7866, tok/sec: 102452.86, flops:107.53, batch-reuse:1
@ 1557 train 5.3960 , allloss: 5.3975, dt: 1288.86ms, fracRes: 0.1886, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2699, norm(y): 1.0075, norm:1.8999, tok/sec: 101695.80, flops:106.73, batch-reuse:1
@ 1558 train 5.3205 , allloss: 5.3223, dt: 1280.94ms, fracRes: 0.1868, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2694, norm(y): 1.0076, norm:1.7476, tok/sec: 102325.14, flops:107.39, batch-reuse:1
@ 1559 train 5.3633 , allloss: 5.3648, dt: 1285.05ms, fracRes: 0.1869, norm(attn): 0.1592, norm(output): 0.3008, norm(x): 0.2698, norm(y): 1.0076, norm:1.6350, tok/sec: 101997.39, flops:107.05, batch-reuse:1
@ 1560 train 5.4482 , allloss: 5.4492, dt: 1294.61ms, fracRes: 0.1865, norm(attn): 0.1602, norm(output): 0.3008, norm(x): 0.2703, norm(y): 1.0075, norm:2.1311, tok/sec: 101244.22, flops:106.26, batch-reuse:1
@ 1561 train 5.4150 , allloss: 5.4166, dt: 1294.16ms, fracRes: 0.1895, norm(attn): 0.1572, norm(output): 0.3008, norm(x): 0.2691, norm(y): 1.0076, norm:1.8666, tok/sec: 101279.72, flops:106.29, batch-reuse:1
@ 1562 train 5.3465 , allloss: 5.3478, dt: 1317.05ms, fracRes: 0.1906, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2694, norm(y): 1.0077, norm:2.0358, tok/sec: 99519.40, flops:104.45, batch-reuse:1
@ 1563 train 5.3751 , allloss: 5.3765, dt: 1320.55ms, fracRes: 0.1859, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2709, norm(y): 1.0076, norm:1.7763, tok/sec: 99255.28, flops:104.17, batch-reuse:1
@ 1564 train 5.3835 , allloss: 5.3851, dt: 1324.10ms, fracRes: 0.1858, norm(attn): 0.1602, norm(output): 0.3008, norm(x): 0.2699, norm(y): 1.0076, norm:1.7880, tok/sec: 98989.59, flops:103.89, batch-reuse:1
@ 1565 train 5.4122 , allloss: 5.4138, dt: 1319.88ms, fracRes: 0.1892, norm(attn): 0.1602, norm(output): 0.3008, norm(x): 0.2696, norm(y): 1.0076, norm:1.5853, tok/sec: 99306.23, flops:104.22, batch-reuse:1
@ 1566 train 5.4153 , allloss: 5.4164, dt: 1323.90ms, fracRes: 0.1932, norm(attn): 0.1572, norm(output): 0.3008, norm(x): 0.2685, norm(y): 1.0076, norm:1.8461, tok/sec: 99004.55, flops:103.91, batch-reuse:1
@ 1567 train 5.3530 , allloss: 5.3542, dt: 1303.85ms, fracRes: 0.1914, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2690, norm(y): 1.0076, norm:1.6571, tok/sec: 100526.81, flops:105.50, batch-reuse:1
@ 1568 train 5.3522 , allloss: 5.3540, dt: 1297.85ms, fracRes: 0.1929, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2684, norm(y): 1.0076, norm:2.0833, tok/sec: 100991.44, flops:105.99, batch-reuse:1
@ 1569 train 5.2407 , allloss: 5.2427, dt: 1302.96ms, fracRes: 0.1933, norm(attn): 0.1592, norm(output): 0.3008, norm(x): 0.2686, norm(y): 1.0076, norm:1.6230, tok/sec: 100595.74, flops:105.58, batch-reuse:1
@ 1570 train 5.3432 , allloss: 5.3447, dt: 1290.43ms, fracRes: 0.1937, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2694, norm(y): 1.0077, norm:1.8487, tok/sec: 101572.32, flops:106.60, batch-reuse:1
@ 1571 train 5.3707 , allloss: 5.3718, dt: 1302.79ms, fracRes: 0.1904, norm(attn): 0.1582, norm(output): 0.3027, norm(x): 0.2705, norm(y): 1.0077, norm:1.7994, tok/sec: 100608.81, flops:105.59, batch-reuse:1
@ 1572 train 5.3542 , allloss: 5.3553, dt: 1297.10ms, fracRes: 0.1898, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2702, norm(y): 1.0076, norm:1.5178, tok/sec: 101050.38, flops:106.05, batch-reuse:1
@ 1573 train 5.4179 , allloss: 5.4196, dt: 1299.70ms, fracRes: 0.1882, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2705, norm(y): 1.0076, norm:1.8623, tok/sec: 100848.22, flops:105.84, batch-reuse:1
@ 1574 train 5.3599 , allloss: 5.3615, dt: 1295.50ms, fracRes: 0.1896, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2701, norm(y): 1.0076, norm:1.8067, tok/sec: 101175.21, flops:106.19, batch-reuse:1
@ 1575 train 5.3337 , allloss: 5.3354, dt: 1301.19ms, fracRes: 0.1913, norm(attn): 0.1582, norm(output): 0.3027, norm(x): 0.2697, norm(y): 1.0076, norm:1.5326, tok/sec: 100732.54, flops:105.72, batch-reuse:1
@ 1576 train 5.3592 , allloss: 5.3607, dt: 1290.09ms, fracRes: 0.1903, norm(attn): 0.1592, norm(output): 0.3008, norm(x): 0.2695, norm(y): 1.0076, norm:1.8014, tok/sec: 101599.48, flops:106.63, batch-reuse:1
@ 1577 train 5.2626 , allloss: 5.2641, dt: 1304.18ms, fracRes: 0.1887, norm(attn): 0.1592, norm(output): 0.3008, norm(x): 0.2693, norm(y): 1.0076, norm:1.8234, tok/sec: 100501.31, flops:105.48, batch-reuse:1
@ 1578 train 5.3404 , allloss: 5.3422, dt: 1297.52ms, fracRes: 0.1908, norm(attn): 0.1592, norm(output): 0.3008, norm(x): 0.2692, norm(y): 1.0076, norm:1.7619, tok/sec: 101016.94, flops:106.02, batch-reuse:1
@ 1579 train 5.2281 , allloss: 5.2313, dt: 1288.42ms, fracRes: 0.1905, norm(attn): 0.1611, norm(output): 0.3008, norm(x): 0.2691, norm(y): 1.0076, norm:2.0145, tok/sec: 101730.90, flops:106.77, batch-reuse:1
@ 1580 train 5.2760 , allloss: 5.2774, dt: 1293.70ms, fracRes: 0.1960, norm(attn): 0.1592, norm(output): 0.3008, norm(x): 0.2679, norm(y): 1.0077, norm:1.9729, tok/sec: 101315.85, flops:106.33, batch-reuse:1
@ 1581 train 5.2064 , allloss: 5.2080, dt: 1320.13ms, fracRes: 0.1961, norm(attn): 0.1592, norm(output): 0.3027, norm(x): 0.2691, norm(y): 1.0076, norm:1.8175, tok/sec: 99287.33, flops:104.20, batch-reuse:1
@ 1582 train 5.2805 , allloss: 5.2823, dt: 1286.99ms, fracRes: 0.2002, norm(attn): 0.1572, norm(output): 0.3008, norm(x): 0.2672, norm(y): 1.0077, norm:1.5537, tok/sec: 101843.86, flops:106.89, batch-reuse:1
@ 1583 train 5.2472 , allloss: 5.2486, dt: 1296.94ms, fracRes: 0.1962, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2698, norm(y): 1.0077, norm:1.7641, tok/sec: 101062.53, flops:106.07, batch-reuse:1
@ 1584 train 5.2825 , allloss: 5.2840, dt: 1323.40ms, fracRes: 0.1979, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2698, norm(y): 1.0077, norm:1.9155, tok/sec: 99041.68, flops:103.95, batch-reuse:1
@ 1585 train 5.2979 , allloss: 5.3019, dt: 1291.89ms, fracRes: 0.1976, norm(attn): 0.1592, norm(output): 0.3027, norm(x): 0.2698, norm(y): 1.0077, norm:1.9067, tok/sec: 101457.32, flops:106.48, batch-reuse:1
@ 1586 train 5.2844 , allloss: 5.2858, dt: 1299.95ms, fracRes: 0.1983, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2687, norm(y): 1.0077, norm:1.8686, tok/sec: 100828.45, flops:105.82, batch-reuse:1
@ 1587 train 5.3288 , allloss: 5.3301, dt: 1314.51ms, fracRes: 0.1971, norm(attn): 0.1592, norm(output): 0.3027, norm(x): 0.2702, norm(y): 1.0077, norm:1.9423, tok/sec: 99711.94, flops:104.65, batch-reuse:1
@ 1588 train 5.3446 , allloss: 5.3466, dt: 1295.02ms, fracRes: 0.1939, norm(attn): 0.1602, norm(output): 0.3027, norm(x): 0.2714, norm(y): 1.0077, norm:1.9910, tok/sec: 101212.35, flops:106.22, batch-reuse:1
@ 1589 train 5.2580 , allloss: 5.2590, dt: 1298.32ms, fracRes: 0.1981, norm(attn): 0.1582, norm(output): 0.3027, norm(x): 0.2697, norm(y): 1.0078, norm:1.7550, tok/sec: 100955.13, flops:105.95, batch-reuse:1
@ 1590 train 5.3358 , allloss: 5.3368, dt: 1322.24ms, fracRes: 0.1967, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2697, norm(y): 1.0078, norm:1.9180, tok/sec: 99128.85, flops:104.04, batch-reuse:1
@ 1591 train 5.2259 , allloss: 5.2274, dt: 1330.05ms, fracRes: 0.1923, norm(attn): 0.1621, norm(output): 0.3027, norm(x): 0.2715, norm(y): 1.0077, norm:1.6839, tok/sec: 98546.35, flops:103.43, batch-reuse:1
@ 1592 train 5.2931 , allloss: 5.2944, dt: 1322.27ms, fracRes: 0.1897, norm(attn): 0.1602, norm(output): 0.3027, norm(x): 0.2726, norm(y): 1.0077, norm:1.6774, tok/sec: 99126.54, flops:104.04, batch-reuse:1
@ 1593 train 5.2866 , allloss: 5.2878, dt: 1323.79ms, fracRes: 0.1907, norm(attn): 0.1592, norm(output): 0.3027, norm(x): 0.2718, norm(y): 1.0077, norm:1.5638, tok/sec: 99012.46, flops:103.92, batch-reuse:1
@ 1594 train 5.1686 , allloss: 5.1700, dt: 1326.38ms, fracRes: 0.1914, norm(attn): 0.1602, norm(output): 0.3027, norm(x): 0.2715, norm(y): 1.0077, norm:1.9610, tok/sec: 98819.43, flops:103.71, batch-reuse:1
@ 1595 train 5.3333 , allloss: 5.3346, dt: 1318.82ms, fracRes: 0.1902, norm(attn): 0.1611, norm(output): 0.3066, norm(x): 0.2738, norm(y): 1.0076, norm:1.5973, tok/sec: 99385.49, flops:104.31, batch-reuse:1
@ 1596 train 5.2404 , allloss: 5.2423, dt: 1291.47ms, fracRes: 0.1969, norm(attn): 0.1572, norm(output): 0.3047, norm(x): 0.2702, norm(y): 1.0078, norm:1.7206, tok/sec: 101490.62, flops:106.52, batch-reuse:1
@ 1597 train 5.3021 , allloss: 5.3034, dt: 1298.80ms, fracRes: 0.1978, norm(attn): 0.1582, norm(output): 0.3027, norm(x): 0.2710, norm(y): 1.0077, norm:1.9811, tok/sec: 100917.66, flops:105.91, batch-reuse:1
@ 1598 train 5.2775 , allloss: 5.2791, dt: 1297.24ms, fracRes: 0.1968, norm(attn): 0.1602, norm(output): 0.3027, norm(x): 0.2702, norm(y): 1.0077, norm:1.9035, tok/sec: 101038.96, flops:106.04, batch-reuse:1
@ 1599 train 5.3450 , allloss: 5.3466, dt: 1311.40ms, fracRes: 0.1969, norm(attn): 0.1582, norm(output): 0.3027, norm(x): 0.2707, norm(y): 1.0077, norm:1.7039, tok/sec: 99948.48, flops:104.90, batch-reuse:1
@ 1600 train 5.2542 , allloss: 5.2558, dt: 1305.21ms, fracRes: 0.1962, norm(attn): 0.1602, norm(output): 0.3047, norm(x): 0.2702, norm(y): 1.0078, norm:1.7983, tok/sec: 100422.33, flops:105.40, batch-reuse:1
@ 1601 train 5.3684 , allloss: 5.3698, dt: 1338.93ms, fracRes: 0.1936, norm(attn): 0.1602, norm(output): 0.3027, norm(x): 0.2715, norm(y): 1.0078, norm:1.7813, tok/sec: 97892.86, flops:102.74, batch-reuse:1
@ 1602 train 5.2590 , allloss: 5.2605, dt: 1343.24ms, fracRes: 0.1903, norm(attn): 0.1602, norm(output): 0.3027, norm(x): 0.2729, norm(y): 1.0077, norm:1.7295, tok/sec: 97579.11, flops:102.41, batch-reuse:1
@ 1603 train 5.2148 , allloss: 5.2157, dt: 1332.23ms, fracRes: 0.1969, norm(attn): 0.1562, norm(output): 0.3047, norm(x): 0.2710, norm(y): 1.0078, norm:2.2161, tok/sec: 98385.34, flops:103.26, batch-reuse:1
@ 1604 train 5.2416 , allloss: 5.2427, dt: 1318.92ms, fracRes: 0.1968, norm(attn): 0.1582, norm(output): 0.3047, norm(x): 0.2709, norm(y): 1.0078, norm:1.8891, tok/sec: 99378.11, flops:104.30, batch-reuse:1
@ 1605 train 5.2867 , allloss: 5.2881, dt: 1297.82ms, fracRes: 0.1923, norm(attn): 0.1621, norm(output): 0.3066, norm(x): 0.2737, norm(y): 1.0077, norm:1.6873, tok/sec: 100993.97, flops:106.00, batch-reuse:1
@ 1606 train 5.2937 , allloss: 5.2949, dt: 1309.75ms, fracRes: 0.1953, norm(attn): 0.1582, norm(output): 0.3086, norm(x): 0.2738, norm(y): 1.0078, norm:1.6774, tok/sec: 100073.76, flops:105.03, batch-reuse:1
@ 1607 train 5.2683 , allloss: 5.2712, dt: 1298.71ms, fracRes: 0.1973, norm(attn): 0.1621, norm(output): 0.3047, norm(x): 0.2725, norm(y): 1.0078, norm:1.8110, tok/sec: 100924.87, flops:105.92, batch-reuse:1
@ 1608 train 5.3179 , allloss: 5.3192, dt: 1306.48ms, fracRes: 0.1988, norm(attn): 0.1602, norm(output): 0.3027, norm(x): 0.2720, norm(y): 1.0078, norm:1.8547, tok/sec: 100324.71, flops:105.29, batch-reuse:1
@ 1609 train 5.2829 , allloss: 5.2838, dt: 1277.00ms, fracRes: 0.1990, norm(attn): 0.1602, norm(output): 0.3047, norm(x): 0.2722, norm(y): 1.0078, norm:2.2848, tok/sec: 102640.57, flops:107.72, batch-reuse:1
@ 1610 train 5.2316 , allloss: 5.2328, dt: 1284.54ms, fracRes: 0.2023, norm(attn): 0.1592, norm(output): 0.3047, norm(x): 0.2713, norm(y): 1.0078, norm:2.0470, tok/sec: 102037.80, flops:107.09, batch-reuse:1
@ 1611 train 5.2070 , allloss: 5.2089, dt: 1295.66ms, fracRes: 0.1989, norm(attn): 0.1602, norm(output): 0.3047, norm(x): 0.2723, norm(y): 1.0078, norm:1.7893, tok/sec: 101162.28, flops:106.17, batch-reuse:1
@ 1612 train 5.2588 , allloss: 5.2602, dt: 1314.82ms, fracRes: 0.2001, norm(attn): 0.1592, norm(output): 0.3066, norm(x): 0.2721, norm(y): 1.0078, norm:1.7240, tok/sec: 99687.97, flops:104.62, batch-reuse:1
@ 1613 train 5.2575 , allloss: 5.2593, dt: 1304.74ms, fracRes: 0.1974, norm(attn): 0.1582, norm(output): 0.3105, norm(x): 0.2742, norm(y): 1.0078, norm:1.6819, tok/sec: 100458.37, flops:105.43, batch-reuse:1
@ 1614 train 5.3007 , allloss: 5.3022, dt: 1292.35ms, fracRes: 0.1989, norm(attn): 0.1592, norm(output): 0.3066, norm(x): 0.2727, norm(y): 1.0078, norm:1.5108, tok/sec: 101421.25, flops:106.44, batch-reuse:1
@ 1615 train 5.2573 , allloss: 5.2588, dt: 1321.52ms, fracRes: 0.1969, norm(attn): 0.1621, norm(output): 0.3027, norm(x): 0.2722, norm(y): 1.0078, norm:1.8191, tok/sec: 99182.57, flops:104.09, batch-reuse:1
@ 1616 train 5.3218 , allloss: 5.3236, dt: 1324.60ms, fracRes: 0.1994, norm(attn): 0.1641, norm(output): 0.3047, norm(x): 0.2718, norm(y): 1.0078, norm:1.7747, tok/sec: 98952.24, flops:103.85, batch-reuse:1
@ 1617 train 5.2832 , allloss: 5.2846, dt: 1317.96ms, fracRes: 0.2040, norm(attn): 0.1572, norm(output): 0.3047, norm(x): 0.2707, norm(y): 1.0079, norm:2.0835, tok/sec: 99450.68, flops:104.38, batch-reuse:1
@ 1618 train 5.2677 , allloss: 5.2688, dt: 1308.83ms, fracRes: 0.2020, norm(attn): 0.1582, norm(output): 0.3086, norm(x): 0.2717, norm(y): 1.0079, norm:1.9581, tok/sec: 100144.07, flops:105.10, batch-reuse:1
@ 1619 train 5.1996 , allloss: 5.2012, dt: 1288.27ms, fracRes: 0.1998, norm(attn): 0.1660, norm(output): 0.3066, norm(x): 0.2728, norm(y): 1.0078, norm:2.3045, tok/sec: 101742.82, flops:106.78, batch-reuse:1
@ 1620 train 5.1914 , allloss: 5.1926, dt: 1299.61ms, fracRes: 0.2031, norm(attn): 0.1650, norm(output): 0.3086, norm(x): 0.2710, norm(y): 1.0078, norm:1.7534, tok/sec: 100854.71, flops:105.85, batch-reuse:1
@ 1621 train 5.3017 , allloss: 5.3027, dt: 1318.03ms, fracRes: 0.2074, norm(attn): 0.1602, norm(output): 0.3047, norm(x): 0.2694, norm(y): 1.0079, norm:1.9717, tok/sec: 99445.52, flops:104.37, batch-reuse:1
@ 1622 train 5.2825 , allloss: 5.2840, dt: 1329.32ms, fracRes: 0.2022, norm(attn): 0.1582, norm(output): 0.3066, norm(x): 0.2720, norm(y): 1.0079, norm:1.7973, tok/sec: 98600.70, flops:103.48, batch-reuse:1
@ 1623 train 5.1852 , allloss: 5.1878, dt: 1325.10ms, fracRes: 0.1993, norm(attn): 0.1602, norm(output): 0.3086, norm(x): 0.2746, norm(y): 1.0079, norm:1.8768, tok/sec: 98914.87, flops:103.81, batch-reuse:1
@ 1624 train 5.1314 , allloss: 5.1332, dt: 1298.22ms, fracRes: 0.2015, norm(attn): 0.1602, norm(output): 0.3086, norm(x): 0.2736, norm(y): 1.0079, norm:2.2181, tok/sec: 100962.60, flops:105.96, batch-reuse:1
@ 1625 train 5.2294 , allloss: 5.2306, dt: 1282.66ms, fracRes: 0.2031, norm(attn): 0.1641, norm(output): 0.3066, norm(x): 0.2725, norm(y): 1.0078, norm:1.6952, tok/sec: 102188.02, flops:107.25, batch-reuse:1
@ 1626 train 5.2210 , allloss: 5.2233, dt: 1299.59ms, fracRes: 0.2029, norm(attn): 0.1621, norm(output): 0.3047, norm(x): 0.2720, norm(y): 1.0078, norm:1.8144, tok/sec: 100856.75, flops:105.85, batch-reuse:1
@ 1627 train 5.1414 , allloss: 5.1427, dt: 1289.45ms, fracRes: 0.1988, norm(attn): 0.1641, norm(output): 0.3086, norm(x): 0.2740, norm(y): 1.0078, norm:1.6449, tok/sec: 101649.60, flops:106.68, batch-reuse:1
@ 1628 train 5.1267 , allloss: 5.1276, dt: 1289.86ms, fracRes: 0.1985, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2743, norm(y): 1.0079, norm:1.8485, tok/sec: 101617.08, flops:106.65, batch-reuse:1
@ 1629 train 5.1445 , allloss: 5.1466, dt: 1298.83ms, fracRes: 0.2004, norm(attn): 0.1641, norm(output): 0.3047, norm(x): 0.2740, norm(y): 1.0079, norm:2.2720, tok/sec: 100915.07, flops:105.91, batch-reuse:1
@ 1630 train 5.2079 , allloss: 5.2091, dt: 1295.62ms, fracRes: 0.2019, norm(attn): 0.1621, norm(output): 0.3066, norm(x): 0.2740, norm(y): 1.0079, norm:2.2174, tok/sec: 101165.43, flops:106.18, batch-reuse:1
@ 1631 train 5.1201 , allloss: 5.1224, dt: 1316.21ms, fracRes: 0.2054, norm(attn): 0.1631, norm(output): 0.3047, norm(x): 0.2725, norm(y): 1.0078, norm:1.7224, tok/sec: 99582.93, flops:104.51, batch-reuse:1
@ 1632 train 5.2324 , allloss: 5.2333, dt: 1282.92ms, fracRes: 0.2099, norm(attn): 0.1562, norm(output): 0.3086, norm(x): 0.2719, norm(y): 1.0081, norm:2.0497, tok/sec: 102166.56, flops:107.23, batch-reuse:1
@ 1633 train 5.1833 , allloss: 5.1845, dt: 1305.46ms, fracRes: 0.2072, norm(attn): 0.1562, norm(output): 0.3086, norm(x): 0.2736, norm(y): 1.0081, norm:2.3684, tok/sec: 100403.16, flops:105.37, batch-reuse:1
@ 1634 train 5.2144 , allloss: 5.2152, dt: 1332.64ms, fracRes: 0.2061, norm(attn): 0.1562, norm(output): 0.3086, norm(x): 0.2735, norm(y): 1.0080, norm:2.1326, tok/sec: 98354.83, flops:103.23, batch-reuse:1
@ 1635 train 5.1464 , allloss: 5.1475, dt: 1322.58ms, fracRes: 0.2076, norm(attn): 0.1602, norm(output): 0.3086, norm(x): 0.2733, norm(y): 1.0080, norm:1.7090, tok/sec: 99103.33, flops:104.01, batch-reuse:1
@ 1636 train 5.1288 , allloss: 5.1299, dt: 1331.86ms, fracRes: 0.2052, norm(attn): 0.1650, norm(output): 0.3086, norm(x): 0.2737, norm(y): 1.0079, norm:1.9728, tok/sec: 98412.88, flops:103.29, batch-reuse:1
@ 1637 train 5.2194 , allloss: 5.2204, dt: 1327.86ms, fracRes: 0.2074, norm(attn): 0.1592, norm(output): 0.3086, norm(x): 0.2729, norm(y): 1.0080, norm:1.6134, tok/sec: 98709.14, flops:103.60, batch-reuse:1
@ 1638 train 5.2524 , allloss: 5.2544, dt: 1328.86ms, fracRes: 0.2029, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2755, norm(y): 1.0079, norm:1.8419, tok/sec: 98634.90, flops:103.52, batch-reuse:1
@ 1639 train 5.1382 , allloss: 5.1400, dt: 1338.03ms, fracRes: 0.2022, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2744, norm(y): 1.0079, norm:1.9313, tok/sec: 97958.85, flops:102.81, batch-reuse:1
@ 1640 train 5.1909 , allloss: 5.1925, dt: 1332.93ms, fracRes: 0.2028, norm(attn): 0.1602, norm(output): 0.3086, norm(x): 0.2737, norm(y): 1.0080, norm:2.2481, tok/sec: 98333.67, flops:103.20, batch-reuse:1
@ 1641 train 5.1619 , allloss: 5.1636, dt: 1326.56ms, fracRes: 0.2031, norm(attn): 0.1592, norm(output): 0.3086, norm(x): 0.2743, norm(y): 1.0080, norm:1.8279, tok/sec: 98806.04, flops:103.70, batch-reuse:1
@ 1642 train 5.1789 , allloss: 5.1800, dt: 1327.74ms, fracRes: 0.2027, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2752, norm(y): 1.0079, norm:1.6657, tok/sec: 98717.79, flops:103.61, batch-reuse:1
@ 1643 train 5.2045 , allloss: 5.2056, dt: 1326.09ms, fracRes: 0.2025, norm(attn): 0.1680, norm(output): 0.3086, norm(x): 0.2761, norm(y): 1.0079, norm:2.1052, tok/sec: 98840.82, flops:103.74, batch-reuse:1
@ 1644 train 5.2503 , allloss: 5.2515, dt: 1308.12ms, fracRes: 0.2083, norm(attn): 0.1611, norm(output): 0.3086, norm(x): 0.2735, norm(y): 1.0080, norm:1.6945, tok/sec: 100198.45, flops:105.16, batch-reuse:1
@ 1645 train 5.1914 , allloss: 5.1927, dt: 1276.07ms, fracRes: 0.2056, norm(attn): 0.1641, norm(output): 0.3105, norm(x): 0.2748, norm(y): 1.0080, norm:2.2040, tok/sec: 102715.44, flops:107.80, batch-reuse:1
@ 1646 train 5.2049 , allloss: 5.2065, dt: 1284.84ms, fracRes: 0.2054, norm(attn): 0.1631, norm(output): 0.3105, norm(x): 0.2756, norm(y): 1.0080, norm:1.8135, tok/sec: 102014.21, flops:107.07, batch-reuse:1
@ 1647 train 5.2512 , allloss: 5.2546, dt: 1271.60ms, fracRes: 0.2051, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2757, norm(y): 1.0080, norm:1.8256, tok/sec: 103076.55, flops:108.18, batch-reuse:1
@ 1648 train 5.2142 , allloss: 5.2159, dt: 1285.92ms, fracRes: 0.2054, norm(attn): 0.1631, norm(output): 0.3105, norm(x): 0.2756, norm(y): 1.0079, norm:1.9575, tok/sec: 101928.32, flops:106.98, batch-reuse:1
@ 1649 train 5.1592 , allloss: 5.1615, dt: 1287.40ms, fracRes: 0.2083, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2745, norm(y): 1.0080, norm:1.8584, tok/sec: 101811.29, flops:106.85, batch-reuse:1
@ 1650 train 5.1823 , allloss: 5.1837, dt: 1281.09ms, fracRes: 0.2077, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2755, norm(y): 1.0079, norm:2.1034, tok/sec: 102313.02, flops:107.38, batch-reuse:1
@ 1651 train 5.2656 , allloss: 5.2686, dt: 1306.69ms, fracRes: 0.2080, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2765, norm(y): 1.0079, norm:2.1758, tok/sec: 100308.71, flops:105.28, batch-reuse:1
@ 1652 train 5.3053 , allloss: 5.3100, dt: 1296.67ms, fracRes: 0.2081, norm(attn): 0.1592, norm(output): 0.3105, norm(x): 0.2753, norm(y): 1.0079, norm:2.1176, tok/sec: 101083.79, flops:106.09, batch-reuse:1
@ 1653 train 5.2648 , allloss: 5.2678, dt: 1315.76ms, fracRes: 0.2097, norm(attn): 0.1602, norm(output): 0.3105, norm(x): 0.2744, norm(y): 1.0080, norm:3.3707, tok/sec: 99617.00, flops:104.55, batch-reuse:1
@ 1654 train 5.2034 , allloss: 5.2056, dt: 1311.71ms, fracRes: 0.2085, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2754, norm(y): 1.0079, norm:2.0627, tok/sec: 99924.77, flops:104.87, batch-reuse:1
@ 1655 train 5.1427 , allloss: 5.1463, dt: 1314.00ms, fracRes: 0.2076, norm(attn): 0.1670, norm(output): 0.3105, norm(x): 0.2746, norm(y): 1.0079, norm:2.1799, tok/sec: 99750.21, flops:104.69, batch-reuse:1
@ 1656 train 5.1566 , allloss: 5.1593, dt: 1308.61ms, fracRes: 0.2064, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2761, norm(y): 1.0080, norm:2.1122, tok/sec: 100161.24, flops:105.12, batch-reuse:1
@ 1657 train 5.2511 , allloss: 5.2531, dt: 1305.12ms, fracRes: 0.2086, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2757, norm(y): 1.0080, norm:1.6892, tok/sec: 100429.23, flops:105.40, batch-reuse:1
@ 1658 train 5.2487 , allloss: 5.2499, dt: 1288.98ms, fracRes: 0.2050, norm(attn): 0.1592, norm(output): 0.3105, norm(x): 0.2777, norm(y): 1.0080, norm:1.9310, tok/sec: 101686.47, flops:106.72, batch-reuse:1
@ 1659 train 5.2079 , allloss: 5.2094, dt: 1297.03ms, fracRes: 0.2053, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2777, norm(y): 1.0080, norm:2.2222, tok/sec: 101055.12, flops:106.06, batch-reuse:1
@ 1660 train 5.1524 , allloss: 5.1543, dt: 1303.66ms, fracRes: 0.2076, norm(attn): 0.1641, norm(output): 0.3105, norm(x): 0.2769, norm(y): 1.0080, norm:2.0188, tok/sec: 100541.32, flops:105.52, batch-reuse:1
@ 1661 train 5.2423 , allloss: 5.2449, dt: 1293.00ms, fracRes: 0.2083, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2783, norm(y): 1.0080, norm:1.7516, tok/sec: 101370.51, flops:106.39, batch-reuse:1
@ 1662 train 5.2091 , allloss: 5.2119, dt: 1313.21ms, fracRes: 0.2094, norm(attn): 0.1611, norm(output): 0.3125, norm(x): 0.2774, norm(y): 1.0080, norm:1.8059, tok/sec: 99810.04, flops:104.75, batch-reuse:1
@ 1663 train 5.2277 , allloss: 5.2299, dt: 1325.81ms, fracRes: 0.2132, norm(attn): 0.1592, norm(output): 0.3105, norm(x): 0.2771, norm(y): 1.0080, norm:1.7858, tok/sec: 98861.49, flops:103.76, batch-reuse:1
@ 1664 train 5.1718 , allloss: 5.1732, dt: 1313.71ms, fracRes: 0.2163, norm(attn): 0.1592, norm(output): 0.3105, norm(x): 0.2762, norm(y): 1.0081, norm:2.1967, tok/sec: 99772.06, flops:104.71, batch-reuse:1
@ 1665 train 5.1976 , allloss: 5.1987, dt: 1337.75ms, fracRes: 0.2130, norm(attn): 0.1631, norm(output): 0.3105, norm(x): 0.2762, norm(y): 1.0080, norm:1.7081, tok/sec: 97979.31, flops:102.83, batch-reuse:1
@ 1666 train 5.2776 , allloss: 5.2789, dt: 1296.34ms, fracRes: 0.2142, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2747, norm(y): 1.0080, norm:1.9727, tok/sec: 101109.54, flops:106.12, batch-reuse:1
@ 1667 train 5.3947 , allloss: 5.3955, dt: 1319.30ms, fracRes: 0.2100, norm(attn): 0.1611, norm(output): 0.3125, norm(x): 0.2770, norm(y): 1.0080, norm:2.0556, tok/sec: 99349.68, flops:104.27, batch-reuse:1
@ 1668 train 5.3567 , allloss: 5.3577, dt: 1326.07ms, fracRes: 0.2094, norm(attn): 0.1611, norm(output): 0.3125, norm(x): 0.2773, norm(y): 1.0080, norm:2.0374, tok/sec: 98842.15, flops:103.74, batch-reuse:1
@ 1669 train 5.3981 , allloss: 5.3996, dt: 1300.59ms, fracRes: 0.2089, norm(attn): 0.1592, norm(output): 0.3125, norm(x): 0.2775, norm(y): 1.0080, norm:2.2123, tok/sec: 100778.69, flops:105.77, batch-reuse:1
@ 1670 train 5.4968 , allloss: 5.5003, dt: 1294.49ms, fracRes: 0.2116, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2769, norm(y): 1.0080, norm:2.2541, tok/sec: 101254.16, flops:106.27, batch-reuse:1
@ 1671 train 5.3873 , allloss: 5.3898, dt: 1284.44ms, fracRes: 0.2091, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2782, norm(y): 1.0080, norm:1.9953, tok/sec: 102045.95, flops:107.10, batch-reuse:1
@ 1672 train 5.4221 , allloss: 5.4243, dt: 1325.24ms, fracRes: 0.2119, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2772, norm(y): 1.0080, norm:2.4490, tok/sec: 98904.70, flops:103.80, batch-reuse:1
@ 1673 train 5.3111 , allloss: 5.3126, dt: 1330.52ms, fracRes: 0.2135, norm(attn): 0.1592, norm(output): 0.3125, norm(x): 0.2770, norm(y): 1.0081, norm:1.9563, tok/sec: 98511.50, flops:103.39, batch-reuse:1
@ 1674 train 5.3474 , allloss: 5.3486, dt: 1298.99ms, fracRes: 0.2127, norm(attn): 0.1602, norm(output): 0.3125, norm(x): 0.2784, norm(y): 1.0081, norm:2.2815, tok/sec: 100902.82, flops:105.90, batch-reuse:1
@ 1675 train 5.4209 , allloss: 5.4239, dt: 1347.22ms, fracRes: 0.2085, norm(attn): 0.1660, norm(output): 0.3125, norm(x): 0.2799, norm(y): 1.0079, norm:1.6288, tok/sec: 97290.36, flops:102.11, batch-reuse:1
@ 1676 train 5.4502 , allloss: 5.4514, dt: 1339.85ms, fracRes: 0.2139, norm(attn): 0.1602, norm(output): 0.3125, norm(x): 0.2767, norm(y): 1.0081, norm:2.0704, tok/sec: 97825.71, flops:102.67, batch-reuse:1
@ 1677 train 5.3818 , allloss: 5.3828, dt: 1339.99ms, fracRes: 0.2138, norm(attn): 0.1592, norm(output): 0.3125, norm(x): 0.2772, norm(y): 1.0082, norm:2.0818, tok/sec: 97815.77, flops:102.66, batch-reuse:1
@ 1678 train 5.3317 , allloss: 5.3327, dt: 1346.36ms, fracRes: 0.2122, norm(attn): 0.1611, norm(output): 0.3125, norm(x): 0.2791, norm(y): 1.0082, norm:2.1055, tok/sec: 97352.92, flops:102.17, batch-reuse:1
@ 1679 train 5.4183 , allloss: 5.4211, dt: 1341.87ms, fracRes: 0.2138, norm(attn): 0.1592, norm(output): 0.3125, norm(x): 0.2800, norm(y): 1.0081, norm:1.7342, tok/sec: 97678.47, flops:102.52, batch-reuse:1
@ 1680 train 5.3287 , allloss: 5.3306, dt: 1339.00ms, fracRes: 0.2146, norm(attn): 0.1592, norm(output): 0.3125, norm(x): 0.2812, norm(y): 1.0081, norm:1.8157, tok/sec: 97887.98, flops:102.74, batch-reuse:1
@ 1681 train 5.3525 , allloss: 5.3541, dt: 1304.22ms, fracRes: 0.2124, norm(attn): 0.1611, norm(output): 0.3125, norm(x): 0.2813, norm(y): 1.0081, norm:1.9236, tok/sec: 100498.42, flops:105.47, batch-reuse:1
@ 1682 train 5.3523 , allloss: 5.3534, dt: 1303.40ms, fracRes: 0.2138, norm(attn): 0.1611, norm(output): 0.3125, norm(x): 0.2806, norm(y): 1.0080, norm:1.7456, tok/sec: 100561.24, flops:105.54, batch-reuse:1
@ 1683 train 5.3027 , allloss: 5.3045, dt: 1304.58ms, fracRes: 0.2134, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2807, norm(y): 1.0080, norm:1.9752, tok/sec: 100470.27, flops:105.45, batch-reuse:1
@ 1684 train 5.3040 , allloss: 5.3054, dt: 1291.08ms, fracRes: 0.2143, norm(attn): 0.1602, norm(output): 0.3125, norm(x): 0.2802, norm(y): 1.0081, norm:1.8883, tok/sec: 101521.58, flops:106.55, batch-reuse:1
@ 1685 train 5.3642 , allloss: 5.3653, dt: 1279.49ms, fracRes: 0.2153, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2793, norm(y): 1.0081, norm:2.0394, tok/sec: 102440.45, flops:107.51, batch-reuse:1
@ 1686 train 5.3803 , allloss: 5.3829, dt: 1317.87ms, fracRes: 0.2157, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2801, norm(y): 1.0080, norm:1.6729, tok/sec: 99457.47, flops:104.38, batch-reuse:1
@ 1687 train 5.3537 , allloss: 5.3550, dt: 1317.81ms, fracRes: 0.2180, norm(attn): 0.1611, norm(output): 0.3125, norm(x): 0.2792, norm(y): 1.0081, norm:1.5363, tok/sec: 99461.69, flops:104.39, batch-reuse:1
@ 1688 train 5.3983 , allloss: 5.3995, dt: 1274.81ms, fracRes: 0.2181, norm(attn): 0.1602, norm(output): 0.3125, norm(x): 0.2788, norm(y): 1.0081, norm:1.6793, tok/sec: 102816.69, flops:107.91, batch-reuse:1
@ 1689 train 5.3383 , allloss: 5.3393, dt: 1291.45ms, fracRes: 0.2179, norm(attn): 0.1631, norm(output): 0.3125, norm(x): 0.2782, norm(y): 1.0081, norm:1.7801, tok/sec: 101491.97, flops:106.52, batch-reuse:1
@ 1690 train 5.3303 , allloss: 5.3326, dt: 1317.58ms, fracRes: 0.2169, norm(attn): 0.1650, norm(output): 0.3125, norm(x): 0.2796, norm(y): 1.0080, norm:1.9145, tok/sec: 99479.31, flops:104.41, batch-reuse:1
@ 1691 train 5.2667 , allloss: 5.2677, dt: 1326.49ms, fracRes: 0.2156, norm(attn): 0.1650, norm(output): 0.3145, norm(x): 0.2812, norm(y): 1.0080, norm:1.7426, tok/sec: 98811.14, flops:103.70, batch-reuse:1
@ 1692 train 5.2165 , allloss: 5.2176, dt: 1344.09ms, fracRes: 0.2150, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2798, norm(y): 1.0081, norm:1.4798, tok/sec: 97517.63, flops:102.35, batch-reuse:1
@ 1693 train 5.4841 , allloss: 5.4849, dt: 1337.59ms, fracRes: 0.2124, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2808, norm(y): 1.0081, norm:1.7270, tok/sec: 97991.50, flops:102.84, batch-reuse:1
@ 1694 train 5.4965 , allloss: 5.4990, dt: 1331.20ms, fracRes: 0.2129, norm(attn): 0.1650, norm(output): 0.3145, norm(x): 0.2810, norm(y): 1.0081, norm:2.0206, tok/sec: 98461.81, flops:103.34, batch-reuse:1
@ 1695 train 5.3506 , allloss: 5.3521, dt: 1331.14ms, fracRes: 0.2113, norm(attn): 0.1631, norm(output): 0.3125, norm(x): 0.2810, norm(y): 1.0081, norm:1.9342, tok/sec: 98466.04, flops:103.34, batch-reuse:1
@ 1696 train 5.3195 , allloss: 5.3206, dt: 1297.83ms, fracRes: 0.2112, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2807, norm(y): 1.0081, norm:1.7598, tok/sec: 100992.84, flops:105.99, batch-reuse:1
@ 1697 train 5.3568 , allloss: 5.3586, dt: 1295.30ms, fracRes: 0.2111, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2823, norm(y): 1.0080, norm:1.5933, tok/sec: 101190.38, flops:106.20, batch-reuse:1
@ 1698 train 5.2976 , allloss: 5.2995, dt: 1296.17ms, fracRes: 0.2158, norm(attn): 0.1621, norm(output): 0.3145, norm(x): 0.2822, norm(y): 1.0081, norm:1.9225, tok/sec: 101122.56, flops:106.13, batch-reuse:1
@ 1699 train 5.3337 , allloss: 5.3346, dt: 1307.26ms, fracRes: 0.2208, norm(attn): 0.1602, norm(output): 0.3145, norm(x): 0.2813, norm(y): 1.0082, norm:2.0977, tok/sec: 100264.67, flops:105.23, batch-reuse:1
@ 1700 train 5.3346 , allloss: 5.3357, dt: 1314.33ms, fracRes: 0.2220, norm(attn): 0.1602, norm(output): 0.3125, norm(x): 0.2801, norm(y): 1.0082, norm:1.6324, tok/sec: 99725.56, flops:104.66, batch-reuse:1
@ 1701 train 5.2933 , allloss: 5.2942, dt: 1311.56ms, fracRes: 0.2215, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2798, norm(y): 1.0081, norm:1.6587, tok/sec: 99935.65, flops:104.88, batch-reuse:1
@ 1702 train 5.3084 , allloss: 5.3095, dt: 1301.93ms, fracRes: 0.2212, norm(attn): 0.1631, norm(output): 0.3125, norm(x): 0.2803, norm(y): 1.0082, norm:1.8173, tok/sec: 100675.34, flops:105.66, batch-reuse:1
@ 1703 train 5.3169 , allloss: 5.3189, dt: 1308.22ms, fracRes: 0.2204, norm(attn): 0.1650, norm(output): 0.3125, norm(x): 0.2806, norm(y): 1.0082, norm:2.0252, tok/sec: 100191.31, flops:105.15, batch-reuse:1
@ 1704 train 5.2902 , allloss: 5.2915, dt: 1302.21ms, fracRes: 0.2180, norm(attn): 0.1602, norm(output): 0.3145, norm(x): 0.2818, norm(y): 1.0082, norm:1.8232, tok/sec: 100653.35, flops:105.64, batch-reuse:1
@ 1705 train 5.3104 , allloss: 5.3120, dt: 1318.07ms, fracRes: 0.2192, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2804, norm(y): 1.0082, norm:2.4660, tok/sec: 99442.50, flops:104.37, batch-reuse:1
@ 1706 train 5.2741 , allloss: 5.2755, dt: 1324.79ms, fracRes: 0.2180, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2800, norm(y): 1.0082, norm:2.0443, tok/sec: 98937.71, flops:103.84, batch-reuse:1
@ 1707 train 5.2738 , allloss: 5.2748, dt: 1333.29ms, fracRes: 0.2139, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2824, norm(y): 1.0082, norm:2.4128, tok/sec: 98307.54, flops:103.18, batch-reuse:1
@ 1708 train 5.2446 , allloss: 5.2458, dt: 1318.18ms, fracRes: 0.2134, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2834, norm(y): 1.0081, norm:1.8581, tok/sec: 99433.79, flops:104.36, batch-reuse:1
@ 1709 train 5.3363 , allloss: 5.3377, dt: 1308.80ms, fracRes: 0.2170, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2812, norm(y): 1.0082, norm:1.8887, tok/sec: 100146.97, flops:105.11, batch-reuse:1
@ 1710 train 5.2616 , allloss: 5.2633, dt: 1305.06ms, fracRes: 0.2177, norm(attn): 0.1621, norm(output): 0.3145, norm(x): 0.2820, norm(y): 1.0082, norm:1.7840, tok/sec: 100434.05, flops:105.41, batch-reuse:1
@ 1711 train 5.2875 , allloss: 5.2887, dt: 1288.48ms, fracRes: 0.2204, norm(attn): 0.1631, norm(output): 0.3145, norm(x): 0.2818, norm(y): 1.0083, norm:1.9973, tok/sec: 101726.31, flops:106.76, batch-reuse:1
@ 1712 train 5.3915 , allloss: 5.3927, dt: 1306.02ms, fracRes: 0.2205, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2819, norm(y): 1.0082, norm:1.6853, tok/sec: 100359.63, flops:105.33, batch-reuse:1
@ 1713 train 5.1365 , allloss: 5.1375, dt: 1331.54ms, fracRes: 0.2246, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2787, norm(y): 1.0082, norm:1.9077, tok/sec: 98436.71, flops:103.31, batch-reuse:1
@ 1714 train 5.2904 , allloss: 5.2913, dt: 1327.08ms, fracRes: 0.2218, norm(attn): 0.1660, norm(output): 0.3125, norm(x): 0.2804, norm(y): 1.0081, norm:2.1384, tok/sec: 98767.08, flops:103.66, batch-reuse:1
@ 1715 train 5.2804 , allloss: 5.2814, dt: 1310.84ms, fracRes: 0.2218, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2800, norm(y): 1.0082, norm:1.9240, tok/sec: 99990.91, flops:104.94, batch-reuse:1
@ 1716 train 5.3237 , allloss: 5.3254, dt: 1314.35ms, fracRes: 0.2227, norm(attn): 0.1631, norm(output): 0.3145, norm(x): 0.2809, norm(y): 1.0082, norm:1.9396, tok/sec: 99723.75, flops:104.66, batch-reuse:1
@ 1717 train 5.4843 , allloss: 5.4860, dt: 1321.92ms, fracRes: 0.2276, norm(attn): 0.1650, norm(output): 0.3145, norm(x): 0.2796, norm(y): 1.0083, norm:2.0022, tok/sec: 99153.04, flops:104.06, batch-reuse:1
@ 1718 train 5.3052 , allloss: 5.3068, dt: 1345.10ms, fracRes: 0.2271, norm(attn): 0.1709, norm(output): 0.3145, norm(x): 0.2809, norm(y): 1.0083, norm:2.3923, tok/sec: 97443.85, flops:102.27, batch-reuse:1
@ 1719 train 5.4002 , allloss: 5.4013, dt: 1310.99ms, fracRes: 0.2182, norm(attn): 0.1670, norm(output): 0.3145, norm(x): 0.2824, norm(y): 1.0082, norm:2.1847, tok/sec: 99979.11, flops:104.93, batch-reuse:1
@ 1720 train 5.3341 , allloss: 5.3350, dt: 1342.91ms, fracRes: 0.2197, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2820, norm(y): 1.0083, norm:2.9919, tok/sec: 97603.14, flops:102.44, batch-reuse:1
@ 1721 train 5.3388 , allloss: 5.3394, dt: 1338.97ms, fracRes: 0.2220, norm(attn): 0.1592, norm(output): 0.3145, norm(x): 0.2813, norm(y): 1.0083, norm:1.8857, tok/sec: 97890.50, flops:102.74, batch-reuse:1
@ 1722 train 5.4257 , allloss: 5.4269, dt: 1334.68ms, fracRes: 0.2216, norm(attn): 0.1621, norm(output): 0.3145, norm(x): 0.2823, norm(y): 1.0083, norm:2.5016, tok/sec: 98205.11, flops:103.07, batch-reuse:1
@ 1723 train 5.3281 , allloss: 5.3307, dt: 1329.88ms, fracRes: 0.2239, norm(attn): 0.1660, norm(output): 0.3145, norm(x): 0.2808, norm(y): 1.0082, norm:1.9054, tok/sec: 98559.20, flops:103.44, batch-reuse:1
@ 1724 train 5.2554 , allloss: 5.2582, dt: 1309.79ms, fracRes: 0.2270, norm(attn): 0.1650, norm(output): 0.3145, norm(x): 0.2802, norm(y): 1.0082, norm:2.0755, tok/sec: 100070.88, flops:105.03, batch-reuse:1
@ 1725 train 5.2843 , allloss: 5.2859, dt: 1338.66ms, fracRes: 0.2240, norm(attn): 0.1631, norm(output): 0.3145, norm(x): 0.2821, norm(y): 1.0081, norm:1.6902, tok/sec: 97912.89, flops:102.76, batch-reuse:1
@ 1726 train 5.2848 , allloss: 5.2856, dt: 1291.97ms, fracRes: 0.2291, norm(attn): 0.1611, norm(output): 0.3145, norm(x): 0.2808, norm(y): 1.0083, norm:2.1959, tok/sec: 101451.44, flops:106.48, batch-reuse:1
@ 1727 train 5.2340 , allloss: 5.2350, dt: 1283.76ms, fracRes: 0.2273, norm(attn): 0.1621, norm(output): 0.3164, norm(x): 0.2821, norm(y): 1.0083, norm:2.0514, tok/sec: 102100.04, flops:107.16, batch-reuse:1
@ 1728 train 5.3486 , allloss: 5.3493, dt: 1307.40ms, fracRes: 0.2267, norm(attn): 0.1631, norm(output): 0.3164, norm(x): 0.2819, norm(y): 1.0083, norm:1.9848, tok/sec: 100253.78, flops:105.22, batch-reuse:1
@ 1729 train 5.4507 , allloss: 5.4521, dt: 1311.29ms, fracRes: 0.2276, norm(attn): 0.1602, norm(output): 0.3145, norm(x): 0.2808, norm(y): 1.0083, norm:1.6785, tok/sec: 99956.31, flops:104.91, batch-reuse:1
@ 1730 train 5.3414 , allloss: 5.3434, dt: 1295.13ms, fracRes: 0.2310, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2795, norm(y): 1.0082, norm:1.7612, tok/sec: 101203.57, flops:106.22, batch-reuse:1
@ 1731 train 5.2788 , allloss: 5.2811, dt: 1316.19ms, fracRes: 0.2344, norm(attn): 0.1650, norm(output): 0.3125, norm(x): 0.2786, norm(y): 1.0082, norm:1.7722, tok/sec: 99584.69, flops:104.52, batch-reuse:1
@ 1732 train 5.2686 , allloss: 5.2696, dt: 1317.44ms, fracRes: 0.2283, norm(attn): 0.1670, norm(output): 0.3145, norm(x): 0.2813, norm(y): 1.0082, norm:1.9954, tok/sec: 99489.72, flops:104.42, batch-reuse:1
@ 1733 train 5.2620 , allloss: 5.2629, dt: 1295.00ms, fracRes: 0.2251, norm(attn): 0.1621, norm(output): 0.3145, norm(x): 0.2816, norm(y): 1.0083, norm:1.6897, tok/sec: 101214.17, flops:106.23, batch-reuse:1
@ 1734 train 5.6231 , allloss: 5.6245, dt: 1286.23ms, fracRes: 0.2273, norm(attn): 0.1611, norm(output): 0.3145, norm(x): 0.2803, norm(y): 1.0083, norm:1.8126, tok/sec: 101903.65, flops:106.95, batch-reuse:1
@ 1735 train 5.2829 , allloss: 5.2843, dt: 1285.06ms, fracRes: 0.2255, norm(attn): 0.1631, norm(output): 0.3164, norm(x): 0.2825, norm(y): 1.0083, norm:2.0708, tok/sec: 101996.52, flops:107.05, batch-reuse:1
@ 1736 train 5.2846 , allloss: 5.2862, dt: 1287.06ms, fracRes: 0.2226, norm(attn): 0.1670, norm(output): 0.3145, norm(x): 0.2831, norm(y): 1.0082, norm:2.2212, tok/sec: 101838.01, flops:106.88, batch-reuse:1
@ 1737 train 5.2153 , allloss: 5.2162, dt: 1301.71ms, fracRes: 0.2243, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2822, norm(y): 1.0083, norm:1.9970, tok/sec: 100692.51, flops:105.68, batch-reuse:1
@ 1738 train 5.1861 , allloss: 5.1879, dt: 1294.80ms, fracRes: 0.2186, norm(attn): 0.1621, norm(output): 0.3164, norm(x): 0.2850, norm(y): 1.0083, norm:1.3020, tok/sec: 101229.90, flops:106.24, batch-reuse:1
@ 1739 train 5.2796 , allloss: 5.2816, dt: 1308.45ms, fracRes: 0.2200, norm(attn): 0.1621, norm(output): 0.3184, norm(x): 0.2864, norm(y): 1.0083, norm:2.0748, tok/sec: 100173.85, flops:105.13, batch-reuse:1
@ 1740 train 5.1926 , allloss: 5.1938, dt: 1296.30ms, fracRes: 0.2226, norm(attn): 0.1621, norm(output): 0.3184, norm(x): 0.2864, norm(y): 1.0083, norm:1.8651, tok/sec: 101112.68, flops:106.12, batch-reuse:1
@ 1741 train 5.2723 , allloss: 5.2733, dt: 1302.20ms, fracRes: 0.2258, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2851, norm(y): 1.0083, norm:1.8264, tok/sec: 100654.34, flops:105.64, batch-reuse:1
@ 1742 train 5.2490 , allloss: 5.2499, dt: 1316.72ms, fracRes: 0.2244, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2840, norm(y): 1.0083, norm:1.5500, tok/sec: 99544.30, flops:104.47, batch-reuse:1
@ 1743 train 5.3275 , allloss: 5.3286, dt: 1324.40ms, fracRes: 0.2264, norm(attn): 0.1621, norm(output): 0.3164, norm(x): 0.2843, norm(y): 1.0082, norm:1.6476, tok/sec: 98967.37, flops:103.87, batch-reuse:1
@ 1744 train 5.1858 , allloss: 5.1868, dt: 1309.89ms, fracRes: 0.2277, norm(attn): 0.1621, norm(output): 0.3145, norm(x): 0.2843, norm(y): 1.0083, norm:1.7635, tok/sec: 100063.42, flops:105.02, batch-reuse:1
@ 1745 train 5.1889 , allloss: 5.1899, dt: 1323.06ms, fracRes: 0.2301, norm(attn): 0.1611, norm(output): 0.3164, norm(x): 0.2832, norm(y): 1.0084, norm:1.7587, tok/sec: 99066.97, flops:103.97, batch-reuse:1
@ 1746 train 5.2847 , allloss: 5.2857, dt: 1281.60ms, fracRes: 0.2303, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2835, norm(y): 1.0083, norm:1.7232, tok/sec: 102271.89, flops:107.34, batch-reuse:1
@ 1747 train 5.1612 , allloss: 5.1623, dt: 1292.24ms, fracRes: 0.2311, norm(attn): 0.1660, norm(output): 0.3145, norm(x): 0.2819, norm(y): 1.0083, norm:1.8302, tok/sec: 101430.08, flops:106.45, batch-reuse:1
@ 1748 train 5.1945 , allloss: 5.1956, dt: 1292.76ms, fracRes: 0.2322, norm(attn): 0.1660, norm(output): 0.3145, norm(x): 0.2829, norm(y): 1.0083, norm:1.6768, tok/sec: 101388.95, flops:106.41, batch-reuse:1
@ 1749 train 5.2949 , allloss: 5.2958, dt: 1279.40ms, fracRes: 0.2339, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2829, norm(y): 1.0084, norm:1.5504, tok/sec: 102448.17, flops:107.52, batch-reuse:1
@ 1750 train 5.2888 , allloss: 5.2903, dt: 1295.35ms, fracRes: 0.2308, norm(attn): 0.1631, norm(output): 0.3164, norm(x): 0.2841, norm(y): 1.0083, norm:1.9624, tok/sec: 101186.66, flops:106.20, batch-reuse:1
@ 1751 train 5.5040 , allloss: 5.5050, dt: 1304.34ms, fracRes: 0.2305, norm(attn): 0.1660, norm(output): 0.3164, norm(x): 0.2846, norm(y): 1.0083, norm:2.0747, tok/sec: 100489.33, flops:105.47, batch-reuse:1
@ 1752 train 5.5039 , allloss: 5.5053, dt: 1293.80ms, fracRes: 0.2288, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2844, norm(y): 1.0084, norm:2.1111, tok/sec: 101308.10, flops:106.32, batch-reuse:1
@ 1753 train 5.2998 , allloss: 5.3011, dt: 1316.34ms, fracRes: 0.2279, norm(attn): 0.1641, norm(output): 0.3184, norm(x): 0.2849, norm(y): 1.0083, norm:1.8594, tok/sec: 99572.75, flops:104.50, batch-reuse:1
@ 1754 train 5.2639 , allloss: 5.2658, dt: 1311.31ms, fracRes: 0.2273, norm(attn): 0.1660, norm(output): 0.3164, norm(x): 0.2854, norm(y): 1.0083, norm:2.0204, tok/sec: 99955.33, flops:104.90, batch-reuse:1
@ 1755 train 5.2750 , allloss: 5.2779, dt: 1294.58ms, fracRes: 0.2290, norm(attn): 0.1641, norm(output): 0.3184, norm(x): 0.2849, norm(y): 1.0083, norm:1.7801, tok/sec: 101246.68, flops:106.26, batch-reuse:1
@ 1756 train 5.2599 , allloss: 5.2615, dt: 1313.83ms, fracRes: 0.2330, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2834, norm(y): 1.0084, norm:1.6468, tok/sec: 99763.62, flops:104.70, batch-reuse:1
@ 1757 train 5.3235 , allloss: 5.3249, dt: 1293.94ms, fracRes: 0.2330, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2835, norm(y): 1.0084, norm:1.8430, tok/sec: 101296.85, flops:106.31, batch-reuse:1
@ 1758 train 5.3452 , allloss: 5.3463, dt: 1287.75ms, fracRes: 0.2369, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2823, norm(y): 1.0084, norm:1.7284, tok/sec: 101783.73, flops:106.82, batch-reuse:1
@ 1759 train 5.3000 , allloss: 5.3012, dt: 1311.46ms, fracRes: 0.2369, norm(attn): 0.1631, norm(output): 0.3164, norm(x): 0.2836, norm(y): 1.0084, norm:2.1626, tok/sec: 99943.81, flops:104.89, batch-reuse:1
@ 1760 train 5.1947 , allloss: 5.1959, dt: 1302.43ms, fracRes: 0.2359, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2828, norm(y): 1.0083, norm:1.9142, tok/sec: 100636.67, flops:105.62, batch-reuse:1
@ 1761 train 5.1460 , allloss: 5.1476, dt: 1294.79ms, fracRes: 0.2358, norm(attn): 0.1621, norm(output): 0.3145, norm(x): 0.2827, norm(y): 1.0084, norm:1.8966, tok/sec: 101230.42, flops:106.24, batch-reuse:1
@ 1762 train 5.0242 , allloss: 5.0264, dt: 1295.41ms, fracRes: 0.2330, norm(attn): 0.1660, norm(output): 0.3164, norm(x): 0.2848, norm(y): 1.0084, norm:1.7137, tok/sec: 101181.70, flops:106.19, batch-reuse:1
@ 1763 train 5.1728 , allloss: 5.1737, dt: 1302.58ms, fracRes: 0.2354, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2837, norm(y): 1.0085, norm:2.1125, tok/sec: 100624.63, flops:105.61, batch-reuse:1
@ 1764 train 5.2021 , allloss: 5.2028, dt: 1313.56ms, fracRes: 0.2314, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2852, norm(y): 1.0084, norm:1.8785, tok/sec: 99783.52, flops:104.72, batch-reuse:1
@ 1765 train 5.2064 , allloss: 5.2075, dt: 1332.85ms, fracRes: 0.2328, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2840, norm(y): 1.0084, norm:2.0046, tok/sec: 98339.33, flops:103.21, batch-reuse:1
@ 1766 train 5.1224 , allloss: 5.1239, dt: 1335.49ms, fracRes: 0.2336, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2831, norm(y): 1.0084, norm:1.9142, tok/sec: 98145.22, flops:103.01, batch-reuse:1
@ 1767 train 5.2044 , allloss: 5.2058, dt: 1321.53ms, fracRes: 0.2312, norm(attn): 0.1650, norm(output): 0.3184, norm(x): 0.2857, norm(y): 1.0083, norm:2.0283, tok/sec: 99181.73, flops:104.09, batch-reuse:1
@ 1768 train 5.2673 , allloss: 5.2706, dt: 1320.19ms, fracRes: 0.2355, norm(attn): 0.1641, norm(output): 0.3184, norm(x): 0.2853, norm(y): 1.0084, norm:1.6928, tok/sec: 99282.49, flops:104.20, batch-reuse:1
@ 1769 train 5.1483 , allloss: 5.1508, dt: 1285.75ms, fracRes: 0.2358, norm(attn): 0.1641, norm(output): 0.3203, norm(x): 0.2860, norm(y): 1.0084, norm:1.9313, tok/sec: 101942.05, flops:106.99, batch-reuse:1
@ 1770 train 5.1373 , allloss: 5.1385, dt: 1287.24ms, fracRes: 0.2354, norm(attn): 0.1660, norm(output): 0.3184, norm(x): 0.2849, norm(y): 1.0084, norm:1.7155, tok/sec: 101824.30, flops:106.87, batch-reuse:1
@ 1771 train 5.1450 , allloss: 5.1462, dt: 1300.71ms, fracRes: 0.2350, norm(attn): 0.1641, norm(output): 0.3203, norm(x): 0.2851, norm(y): 1.0085, norm:1.9272, tok/sec: 100769.84, flops:105.76, batch-reuse:1
@ 1772 train 5.1726 , allloss: 5.1736, dt: 1346.09ms, fracRes: 0.2322, norm(attn): 0.1660, norm(output): 0.3223, norm(x): 0.2872, norm(y): 1.0084, norm:1.8329, tok/sec: 97372.40, flops:102.19, batch-reuse:1
@ 1773 train 5.0497 , allloss: 5.0510, dt: 1323.99ms, fracRes: 0.2330, norm(attn): 0.1641, norm(output): 0.3203, norm(x): 0.2853, norm(y): 1.0084, norm:1.4581, tok/sec: 98997.88, flops:103.90, batch-reuse:1
@ 1774 train 5.2256 , allloss: 5.2269, dt: 1321.99ms, fracRes: 0.2318, norm(attn): 0.1650, norm(output): 0.3223, norm(x): 0.2867, norm(y): 1.0084, norm:1.9957, tok/sec: 99147.66, flops:104.06, batch-reuse:1
@ 1775 train 5.1535 , allloss: 5.1546, dt: 1304.72ms, fracRes: 0.2301, norm(attn): 0.1650, norm(output): 0.3223, norm(x): 0.2876, norm(y): 1.0084, norm:1.8168, tok/sec: 100459.84, flops:105.43, batch-reuse:1
@ 1776 train 5.1130 , allloss: 5.1144, dt: 1317.51ms, fracRes: 0.2337, norm(attn): 0.1631, norm(output): 0.3203, norm(x): 0.2859, norm(y): 1.0085, norm:1.7555, tok/sec: 99484.37, flops:104.41, batch-reuse:1
@ 1777 train 5.0953 , allloss: 5.0972, dt: 1349.81ms, fracRes: 0.2345, norm(attn): 0.1670, norm(output): 0.3164, norm(x): 0.2856, norm(y): 1.0084, norm:1.8789, tok/sec: 97104.06, flops:101.91, batch-reuse:1
@ 1778 train 5.4336 , allloss: 5.4344, dt: 1324.90ms, fracRes: 0.2386, norm(attn): 0.1660, norm(output): 0.3223, norm(x): 0.2851, norm(y): 1.0084, norm:1.9477, tok/sec: 98929.58, flops:103.83, batch-reuse:1
@ 1779 train 5.1009 , allloss: 5.1018, dt: 1313.76ms, fracRes: 0.2380, norm(attn): 0.1641, norm(output): 0.3203, norm(x): 0.2847, norm(y): 1.0085, norm:1.8293, tok/sec: 99768.62, flops:104.71, batch-reuse:1
@ 1780 train 5.1877 , allloss: 5.1888, dt: 1336.48ms, fracRes: 0.2409, norm(attn): 0.1660, norm(output): 0.3223, norm(x): 0.2851, norm(y): 1.0085, norm:1.9986, tok/sec: 98072.49, flops:102.93, batch-reuse:1
@ 1781 train 5.1938 , allloss: 5.1952, dt: 1340.32ms, fracRes: 0.2356, norm(attn): 0.1660, norm(output): 0.3203, norm(x): 0.2869, norm(y): 1.0085, norm:2.0273, tok/sec: 97791.74, flops:102.63, batch-reuse:1
@ 1782 train 5.2027 , allloss: 5.2038, dt: 1323.87ms, fracRes: 0.2341, norm(attn): 0.1680, norm(output): 0.3203, norm(x): 0.2873, norm(y): 1.0084, norm:1.7046, tok/sec: 99006.69, flops:103.91, batch-reuse:1
@ 1783 train 5.1503 , allloss: 5.1519, dt: 1285.48ms, fracRes: 0.2370, norm(attn): 0.1641, norm(output): 0.3184, norm(x): 0.2856, norm(y): 1.0085, norm:1.7768, tok/sec: 101963.30, flops:107.01, batch-reuse:1
@ 1784 train 5.1164 , allloss: 5.1178, dt: 1299.62ms, fracRes: 0.2357, norm(attn): 0.1650, norm(output): 0.3184, norm(x): 0.2858, norm(y): 1.0085, norm:1.8191, tok/sec: 100853.99, flops:105.85, batch-reuse:1
@ 1785 train 5.1611 , allloss: 5.1626, dt: 1288.23ms, fracRes: 0.2344, norm(attn): 0.1670, norm(output): 0.3203, norm(x): 0.2867, norm(y): 1.0084, norm:1.9401, tok/sec: 101746.15, flops:106.78, batch-reuse:1
@ 1786 train 5.1974 , allloss: 5.1988, dt: 1300.56ms, fracRes: 0.2323, norm(attn): 0.1650, norm(output): 0.3203, norm(x): 0.2879, norm(y): 1.0084, norm:1.7010, tok/sec: 100781.17, flops:105.77, batch-reuse:1
@ 1787 train 5.1709 , allloss: 5.1727, dt: 1279.79ms, fracRes: 0.2320, norm(attn): 0.1660, norm(output): 0.3203, norm(x): 0.2877, norm(y): 1.0085, norm:1.7989, tok/sec: 102416.54, flops:107.49, batch-reuse:1
@ 1788 train 5.1943 , allloss: 5.1951, dt: 1320.44ms, fracRes: 0.2302, norm(attn): 0.1660, norm(output): 0.3223, norm(x): 0.2889, norm(y): 1.0085, norm:2.1028, tok/sec: 99263.75, flops:104.18, batch-reuse:1
@ 1789 train 5.1977 , allloss: 5.1985, dt: 1323.85ms, fracRes: 0.2309, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2894, norm(y): 1.0085, norm:1.7744, tok/sec: 99008.24, flops:103.91, batch-reuse:1
@ 1790 train 5.2684 , allloss: 5.2695, dt: 1330.60ms, fracRes: 0.2330, norm(attn): 0.1680, norm(output): 0.3223, norm(x): 0.2885, norm(y): 1.0085, norm:1.9830, tok/sec: 98505.83, flops:103.38, batch-reuse:1
@ 1791 train 5.1929 , allloss: 5.1953, dt: 1296.02ms, fracRes: 0.2310, norm(attn): 0.1689, norm(output): 0.3223, norm(x): 0.2891, norm(y): 1.0084, norm:1.6442, tok/sec: 101134.46, flops:106.14, batch-reuse:1
@ 1792 train 5.2485 , allloss: 5.2504, dt: 1308.90ms, fracRes: 0.2339, norm(attn): 0.1641, norm(output): 0.3223, norm(x): 0.2879, norm(y): 1.0086, norm:1.8102, tok/sec: 100139.08, flops:105.10, batch-reuse:1
@ 1793 train 5.2099 , allloss: 5.2106, dt: 1324.35ms, fracRes: 0.2338, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2890, norm(y): 1.0086, norm:2.1304, tok/sec: 98970.75, flops:103.87, batch-reuse:1
@ 1794 train 5.2149 , allloss: 5.2156, dt: 1292.10ms, fracRes: 0.2395, norm(attn): 0.1699, norm(output): 0.3223, norm(x): 0.2875, norm(y): 1.0086, norm:1.9890, tok/sec: 101440.69, flops:106.46, batch-reuse:1
@ 1795 train 5.2265 , allloss: 5.2280, dt: 1316.02ms, fracRes: 0.2431, norm(attn): 0.1650, norm(output): 0.3203, norm(x): 0.2858, norm(y): 1.0086, norm:2.1547, tok/sec: 99596.96, flops:104.53, batch-reuse:1
@ 1796 train 5.1122 , allloss: 5.1144, dt: 1339.40ms, fracRes: 0.2427, norm(attn): 0.1641, norm(output): 0.3223, norm(x): 0.2868, norm(y): 1.0085, norm:2.0727, tok/sec: 97858.95, flops:102.70, batch-reuse:1
@ 1797 train 5.1771 , allloss: 5.1787, dt: 1290.36ms, fracRes: 0.2421, norm(attn): 0.1650, norm(output): 0.3203, norm(x): 0.2869, norm(y): 1.0085, norm:1.9541, tok/sec: 101577.84, flops:106.61, batch-reuse:1
@ 1798 train 5.1346 , allloss: 5.1357, dt: 1289.51ms, fracRes: 0.2383, norm(attn): 0.1660, norm(output): 0.3203, norm(x): 0.2876, norm(y): 1.0085, norm:1.4331, tok/sec: 101644.72, flops:106.68, batch-reuse:1
@ 1799 train 5.1928 , allloss: 5.1947, dt: 1314.31ms, fracRes: 0.2376, norm(attn): 0.1660, norm(output): 0.3223, norm(x): 0.2872, norm(y): 1.0086, norm:1.7681, tok/sec: 99726.54, flops:104.66, batch-reuse:1
@ 1800 train 5.1341 , allloss: 5.1353, dt: 1338.19ms, fracRes: 0.2359, norm(attn): 0.1650, norm(output): 0.3223, norm(x): 0.2885, norm(y): 1.0085, norm:2.1016, tok/sec: 97946.89, flops:102.80, batch-reuse:1
@ 1801 train 5.1202 , allloss: 5.1211, dt: 1321.80ms, fracRes: 0.2344, norm(attn): 0.1699, norm(output): 0.3223, norm(x): 0.2897, norm(y): 1.0085, norm:1.7497, tok/sec: 99161.57, flops:104.07, batch-reuse:1
@ 1802 train 5.2312 , allloss: 5.2323, dt: 1294.54ms, fracRes: 0.2375, norm(attn): 0.1621, norm(output): 0.3203, norm(x): 0.2879, norm(y): 1.0086, norm:1.8949, tok/sec: 101249.89, flops:106.26, batch-reuse:1
@ 1803 train 5.1829 , allloss: 5.1835, dt: 1303.81ms, fracRes: 0.2396, norm(attn): 0.1631, norm(output): 0.3223, norm(x): 0.2887, norm(y): 1.0086, norm:2.2023, tok/sec: 100530.33, flops:105.51, batch-reuse:1
@ 1804 train 5.1304 , allloss: 5.1316, dt: 1289.94ms, fracRes: 0.2404, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2899, norm(y): 1.0085, norm:1.7221, tok/sec: 101610.64, flops:106.64, batch-reuse:1
@ 1805 train 5.2219 , allloss: 5.2231, dt: 1271.45ms, fracRes: 0.2388, norm(attn): 0.1670, norm(output): 0.3223, norm(x): 0.2890, norm(y): 1.0085, norm:2.1119, tok/sec: 103088.96, flops:108.19, batch-reuse:1
@ 1806 train 5.1631 , allloss: 5.1642, dt: 1312.30ms, fracRes: 0.2365, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2898, norm(y): 1.0085, norm:1.6826, tok/sec: 99879.91, flops:104.83, batch-reuse:1
@ 1807 train 5.2214 , allloss: 5.2223, dt: 1295.52ms, fracRes: 0.2391, norm(attn): 0.1641, norm(output): 0.3223, norm(x): 0.2882, norm(y): 1.0086, norm:1.8885, tok/sec: 101173.36, flops:106.18, batch-reuse:1
@ 1808 train 5.1276 , allloss: 5.1316, dt: 1292.46ms, fracRes: 0.2384, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2897, norm(y): 1.0086, norm:1.8060, tok/sec: 101412.98, flops:106.43, batch-reuse:1
@ 1809 train 5.0912 , allloss: 5.0922, dt: 1318.86ms, fracRes: 0.2419, norm(attn): 0.1660, norm(output): 0.3203, norm(x): 0.2882, norm(y): 1.0086, norm:1.9837, tok/sec: 99382.81, flops:104.30, batch-reuse:1
@ 1810 train 5.0301 , allloss: 5.0336, dt: 1307.09ms, fracRes: 0.2390, norm(attn): 0.1650, norm(output): 0.3242, norm(x): 0.2892, norm(y): 1.0085, norm:2.4579, tok/sec: 100277.57, flops:105.24, batch-reuse:1
@ 1811 train 5.0975 , allloss: 5.1012, dt: 1312.60ms, fracRes: 0.2396, norm(attn): 0.1660, norm(output): 0.3223, norm(x): 0.2892, norm(y): 1.0085, norm:2.1619, tok/sec: 99856.47, flops:104.80, batch-reuse:1
@ 1812 train 5.1290 , allloss: 5.1304, dt: 1293.08ms, fracRes: 0.2418, norm(attn): 0.1621, norm(output): 0.3242, norm(x): 0.2882, norm(y): 1.0086, norm:2.2239, tok/sec: 101364.21, flops:106.38, batch-reuse:1
@ 1813 train 5.0796 , allloss: 5.0810, dt: 1310.29ms, fracRes: 0.2416, norm(attn): 0.1592, norm(output): 0.3223, norm(x): 0.2883, norm(y): 1.0087, norm:1.8913, tok/sec: 100032.59, flops:104.99, batch-reuse:1
@ 1814 train 5.1514 , allloss: 5.1532, dt: 1302.52ms, fracRes: 0.2429, norm(attn): 0.1602, norm(output): 0.3223, norm(x): 0.2878, norm(y): 1.0086, norm:1.8014, tok/sec: 100629.67, flops:105.61, batch-reuse:1
@ 1815 train 5.0760 , allloss: 5.0770, dt: 1324.46ms, fracRes: 0.2442, norm(attn): 0.1631, norm(output): 0.3223, norm(x): 0.2879, norm(y): 1.0086, norm:1.8112, tok/sec: 98962.40, flops:103.86, batch-reuse:1
@ 1816 train 5.1014 , allloss: 5.1025, dt: 1331.35ms, fracRes: 0.2431, norm(attn): 0.1621, norm(output): 0.3242, norm(x): 0.2891, norm(y): 1.0086, norm:2.0182, tok/sec: 98450.58, flops:103.33, batch-reuse:1
@ 1817 train 5.1127 , allloss: 5.1153, dt: 1297.20ms, fracRes: 0.2434, norm(attn): 0.1641, norm(output): 0.3242, norm(x): 0.2893, norm(y): 1.0086, norm:1.7765, tok/sec: 101041.88, flops:106.05, batch-reuse:1
@ 1818 train 5.0696 , allloss: 5.0709, dt: 1313.42ms, fracRes: 0.2396, norm(attn): 0.1650, norm(output): 0.3242, norm(x): 0.2917, norm(y): 1.0086, norm:1.8272, tok/sec: 99794.79, flops:104.74, batch-reuse:1
@ 1819 train 5.1856 , allloss: 5.1870, dt: 1313.28ms, fracRes: 0.2422, norm(attn): 0.1621, norm(output): 0.3242, norm(x): 0.2895, norm(y): 1.0087, norm:2.1523, tok/sec: 99804.93, flops:104.75, batch-reuse:1
@ 1820 train 5.0876 , allloss: 5.0889, dt: 1342.60ms, fracRes: 0.2354, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2921, norm(y): 1.0086, norm:1.8790, tok/sec: 97625.79, flops:102.46, batch-reuse:1
@ 1821 train 5.0102 , allloss: 5.0114, dt: 1338.52ms, fracRes: 0.2344, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2922, norm(y): 1.0085, norm:1.9259, tok/sec: 97923.23, flops:102.77, batch-reuse:1
@ 1822 train 4.9888 , allloss: 4.9901, dt: 1310.05ms, fracRes: 0.2427, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2876, norm(y): 1.0087, norm:1.7949, tok/sec: 100050.98, flops:105.01, batch-reuse:1
@ 1823 train 5.0325 , allloss: 5.0337, dt: 1290.09ms, fracRes: 0.2374, norm(attn): 0.1641, norm(output): 0.3242, norm(x): 0.2920, norm(y): 1.0086, norm:2.0069, tok/sec: 101599.39, flops:106.63, batch-reuse:1
@ 1824 train 5.0735 , allloss: 5.0752, dt: 1308.14ms, fracRes: 0.2358, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2939, norm(y): 1.0086, norm:1.8784, tok/sec: 100197.37, flops:105.16, batch-reuse:1
@ 1825 train 5.1124 , allloss: 5.1139, dt: 1294.98ms, fracRes: 0.2377, norm(attn): 0.1641, norm(output): 0.3242, norm(x): 0.2929, norm(y): 1.0087, norm:1.9286, tok/sec: 101215.38, flops:106.23, batch-reuse:1
@ 1826 train 5.1082 , allloss: 5.1097, dt: 1315.02ms, fracRes: 0.2396, norm(attn): 0.1631, norm(output): 0.3242, norm(x): 0.2917, norm(y): 1.0087, norm:1.7072, tok/sec: 99672.82, flops:104.61, batch-reuse:1
@ 1827 train 5.1475 , allloss: 5.1495, dt: 1298.00ms, fracRes: 0.2426, norm(attn): 0.1680, norm(output): 0.3242, norm(x): 0.2916, norm(y): 1.0086, norm:1.6864, tok/sec: 100980.11, flops:105.98, batch-reuse:1
@ 1828 train 5.0820 , allloss: 5.0832, dt: 1276.09ms, fracRes: 0.2397, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2925, norm(y): 1.0086, norm:1.6443, tok/sec: 102714.05, flops:107.80, batch-reuse:1
@ 1829 train 5.1553 , allloss: 5.1568, dt: 1290.61ms, fracRes: 0.2425, norm(attn): 0.1650, norm(output): 0.3242, norm(x): 0.2914, norm(y): 1.0086, norm:1.7703, tok/sec: 101558.25, flops:106.59, batch-reuse:1
@ 1830 train 4.9800 , allloss: 4.9808, dt: 1314.59ms, fracRes: 0.2424, norm(attn): 0.1611, norm(output): 0.3242, norm(x): 0.2912, norm(y): 1.0087, norm:2.0543, tok/sec: 99705.58, flops:104.64, batch-reuse:1
@ 1831 train 5.0745 , allloss: 5.0753, dt: 1329.13ms, fracRes: 0.2416, norm(attn): 0.1641, norm(output): 0.3242, norm(x): 0.2915, norm(y): 1.0087, norm:2.1077, tok/sec: 98615.22, flops:103.50, batch-reuse:1
@ 1832 train 5.0887 , allloss: 5.0903, dt: 1293.85ms, fracRes: 0.2422, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2911, norm(y): 1.0087, norm:1.7923, tok/sec: 101304.22, flops:106.32, batch-reuse:1
@ 1833 train 5.1916 , allloss: 5.1927, dt: 1288.55ms, fracRes: 0.2453, norm(attn): 0.1641, norm(output): 0.3242, norm(x): 0.2896, norm(y): 1.0087, norm:2.1273, tok/sec: 101720.47, flops:106.76, batch-reuse:1
@ 1834 train 5.0910 , allloss: 5.0925, dt: 1299.62ms, fracRes: 0.2428, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2917, norm(y): 1.0087, norm:1.8001, tok/sec: 100853.73, flops:105.85, batch-reuse:1
@ 1835 train 5.0112 , allloss: 5.0130, dt: 1297.18ms, fracRes: 0.2408, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2923, norm(y): 1.0087, norm:2.3687, tok/sec: 101043.42, flops:106.05, batch-reuse:1
@ 1836 train 5.1293 , allloss: 5.1316, dt: 1297.48ms, fracRes: 0.2407, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2921, norm(y): 1.0086, norm:2.0448, tok/sec: 101020.60, flops:106.02, batch-reuse:1
@ 1837 train 5.1970 , allloss: 5.1993, dt: 1304.97ms, fracRes: 0.2391, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2920, norm(y): 1.0086, norm:1.9247, tok/sec: 100440.88, flops:105.41, batch-reuse:1
@ 1838 train 5.1025 , allloss: 5.1045, dt: 1299.95ms, fracRes: 0.2406, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2919, norm(y): 1.0087, norm:2.0633, tok/sec: 100828.41, flops:105.82, batch-reuse:1
@ 1839 train 5.0329 , allloss: 5.0347, dt: 1298.98ms, fracRes: 0.2416, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2919, norm(y): 1.0087, norm:1.7211, tok/sec: 100904.12, flops:105.90, batch-reuse:1
@ 1840 train 5.0387 , allloss: 5.0403, dt: 1300.60ms, fracRes: 0.2422, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2918, norm(y): 1.0087, norm:2.0418, tok/sec: 100778.12, flops:105.77, batch-reuse:1
@ 1841 train 5.1242 , allloss: 5.1275, dt: 1307.70ms, fracRes: 0.2426, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2919, norm(y): 1.0086, norm:1.7499, tok/sec: 100230.89, flops:105.19, batch-reuse:1
@ 1842 train 5.0399 , allloss: 5.0426, dt: 1289.49ms, fracRes: 0.2434, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2923, norm(y): 1.0086, norm:1.8098, tok/sec: 101646.43, flops:106.68, batch-reuse:1
@ 1843 train 5.0698 , allloss: 5.0732, dt: 1304.85ms, fracRes: 0.2461, norm(attn): 0.1650, norm(output): 0.3242, norm(x): 0.2919, norm(y): 1.0087, norm:1.8733, tok/sec: 100449.94, flops:105.42, batch-reuse:1
@ 1844 train 5.0586 , allloss: 5.0600, dt: 1301.24ms, fracRes: 0.2440, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2929, norm(y): 1.0087, norm:1.5385, tok/sec: 100728.39, flops:105.72, batch-reuse:1
@ 1845 train 5.0384 , allloss: 5.0392, dt: 1297.31ms, fracRes: 0.2427, norm(attn): 0.1680, norm(output): 0.3242, norm(x): 0.2936, norm(y): 1.0087, norm:1.9086, tok/sec: 101033.37, flops:106.04, batch-reuse:1
@ 1846 train 5.0778 , allloss: 5.0791, dt: 1303.95ms, fracRes: 0.2440, norm(attn): 0.1680, norm(output): 0.3242, norm(x): 0.2928, norm(y): 1.0087, norm:1.7989, tok/sec: 100519.54, flops:105.50, batch-reuse:1
@ 1847 train 5.0203 , allloss: 5.0214, dt: 1304.96ms, fracRes: 0.2406, norm(attn): 0.1660, norm(output): 0.3262, norm(x): 0.2941, norm(y): 1.0087, norm:2.0216, tok/sec: 100441.02, flops:105.41, batch-reuse:1
@ 1848 train 4.9033 , allloss: 4.9045, dt: 1290.45ms, fracRes: 0.2398, norm(attn): 0.1689, norm(output): 0.3281, norm(x): 0.2940, norm(y): 1.0087, norm:1.9316, tok/sec: 101571.03, flops:106.60, batch-reuse:1
@ 1849 train 5.0940 , allloss: 5.0948, dt: 1277.04ms, fracRes: 0.2402, norm(attn): 0.1699, norm(output): 0.3281, norm(x): 0.2949, norm(y): 1.0088, norm:1.7419, tok/sec: 102637.02, flops:107.72, batch-reuse:1
@ 1850 train 4.9542 , allloss: 4.9549, dt: 1297.89ms, fracRes: 0.2395, norm(attn): 0.1680, norm(output): 0.3262, norm(x): 0.2942, norm(y): 1.0088, norm:2.1903, tok/sec: 100988.38, flops:105.99, batch-reuse:1
@ 1851 train 4.9332 , allloss: 4.9342, dt: 1324.43ms, fracRes: 0.2400, norm(attn): 0.1689, norm(output): 0.3301, norm(x): 0.2944, norm(y): 1.0087, norm:1.7030, tok/sec: 98964.62, flops:103.87, batch-reuse:1
@ 1852 train 5.0544 , allloss: 5.0566, dt: 1340.02ms, fracRes: 0.2432, norm(attn): 0.1680, norm(output): 0.3242, norm(x): 0.2934, norm(y): 1.0087, norm:1.9547, tok/sec: 97813.71, flops:102.66, batch-reuse:1
@ 1853 train 5.0433 , allloss: 5.0446, dt: 1339.93ms, fracRes: 0.2455, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2931, norm(y): 1.0087, norm:1.7114, tok/sec: 97819.93, flops:102.66, batch-reuse:1
@ 1854 train 5.1207 , allloss: 5.1220, dt: 1331.66ms, fracRes: 0.2481, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2924, norm(y): 1.0088, norm:2.0057, tok/sec: 98427.61, flops:103.30, batch-reuse:1
@ 1855 train 5.2193 , allloss: 5.2208, dt: 1296.69ms, fracRes: 0.2463, norm(attn): 0.1738, norm(output): 0.3242, norm(x): 0.2930, norm(y): 1.0088, norm:2.1283, tok/sec: 101082.06, flops:106.09, batch-reuse:1
@ 1856 train 5.1120 , allloss: 5.1143, dt: 1314.19ms, fracRes: 0.2452, norm(attn): 0.1719, norm(output): 0.3281, norm(x): 0.2924, norm(y): 1.0088, norm:1.8620, tok/sec: 99735.88, flops:104.67, batch-reuse:1
@ 1857 train 5.1302 , allloss: 5.1337, dt: 1305.48ms, fracRes: 0.2435, norm(attn): 0.1738, norm(output): 0.3320, norm(x): 0.2936, norm(y): 1.0088, norm:2.3732, tok/sec: 100401.70, flops:105.37, batch-reuse:1
@ 1858 train 5.2185 , allloss: 5.2196, dt: 1302.54ms, fracRes: 0.2429, norm(attn): 0.1719, norm(output): 0.3242, norm(x): 0.2925, norm(y): 1.0087, norm:2.0830, tok/sec: 100627.98, flops:105.61, batch-reuse:1
@ 1859 train 5.2512 , allloss: 5.2523, dt: 1288.77ms, fracRes: 0.2444, norm(attn): 0.1719, norm(output): 0.3281, norm(x): 0.2938, norm(y): 1.0087, norm:2.5614, tok/sec: 101702.91, flops:106.74, batch-reuse:1
@ 1860 train 5.2373 , allloss: 5.2404, dt: 1288.84ms, fracRes: 0.2443, norm(attn): 0.1709, norm(output): 0.3301, norm(x): 0.2944, norm(y): 1.0087, norm:2.0103, tok/sec: 101697.76, flops:106.73, batch-reuse:1
@ 1861 train 5.1695 , allloss: 5.1714, dt: 1318.00ms, fracRes: 0.2474, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2936, norm(y): 1.0088, norm:2.2088, tok/sec: 99447.70, flops:104.37, batch-reuse:1
@ 1862 train 5.2101 , allloss: 5.2115, dt: 1319.74ms, fracRes: 0.2479, norm(attn): 0.1680, norm(output): 0.3242, norm(x): 0.2935, norm(y): 1.0089, norm:2.2058, tok/sec: 99316.87, flops:104.23, batch-reuse:1
@ 1863 train 5.2294 , allloss: 5.2307, dt: 1305.40ms, fracRes: 0.2453, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2959, norm(y): 1.0087, norm:1.8855, tok/sec: 100407.22, flops:105.38, batch-reuse:1
@ 1864 train 5.1688 , allloss: 5.1697, dt: 1299.13ms, fracRes: 0.2462, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2946, norm(y): 1.0087, norm:2.0326, tok/sec: 100892.05, flops:105.89, batch-reuse:1
@ 1865 train 5.1506 , allloss: 5.1516, dt: 1313.95ms, fracRes: 0.2466, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2942, norm(y): 1.0088, norm:1.6276, tok/sec: 99754.52, flops:104.69, batch-reuse:1
@ 1866 train 5.5529 , allloss: 5.5541, dt: 1295.15ms, fracRes: 0.2502, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2928, norm(y): 1.0089, norm:2.1224, tok/sec: 101202.40, flops:106.21, batch-reuse:1
@ 1867 train 5.2058 , allloss: 5.2067, dt: 1321.40ms, fracRes: 0.2483, norm(attn): 0.1699, norm(output): 0.3301, norm(x): 0.2949, norm(y): 1.0088, norm:2.3632, tok/sec: 99191.47, flops:104.10, batch-reuse:1
@ 1868 train 5.2636 , allloss: 5.2648, dt: 1294.65ms, fracRes: 0.2476, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2966, norm(y): 1.0087, norm:1.8813, tok/sec: 101241.01, flops:106.25, batch-reuse:1
@ 1869 train 5.1940 , allloss: 5.1953, dt: 1294.52ms, fracRes: 0.2488, norm(attn): 0.1680, norm(output): 0.3281, norm(x): 0.2938, norm(y): 1.0088, norm:2.0739, tok/sec: 101251.75, flops:106.27, batch-reuse:1
@ 1870 train 5.1664 , allloss: 5.1684, dt: 1302.59ms, fracRes: 0.2457, norm(attn): 0.1699, norm(output): 0.3301, norm(x): 0.2950, norm(y): 1.0087, norm:1.9246, tok/sec: 100624.02, flops:105.61, batch-reuse:1
@ 1871 train 5.1687 , allloss: 5.1697, dt: 1309.39ms, fracRes: 0.2484, norm(attn): 0.1680, norm(output): 0.3242, norm(x): 0.2934, norm(y): 1.0089, norm:1.9356, tok/sec: 100101.73, flops:105.06, batch-reuse:1
@ 1872 train 5.2678 , allloss: 5.2686, dt: 1336.47ms, fracRes: 0.2492, norm(attn): 0.1689, norm(output): 0.3301, norm(x): 0.2930, norm(y): 1.0089, norm:1.8137, tok/sec: 98073.20, flops:102.93, batch-reuse:1
@ 1873 train 5.2915 , allloss: 5.2922, dt: 1330.39ms, fracRes: 0.2479, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2951, norm(y): 1.0088, norm:1.7421, tok/sec: 98521.70, flops:103.40, batch-reuse:1
@ 1874 train 5.1221 , allloss: 5.1228, dt: 1269.81ms, fracRes: 0.2506, norm(attn): 0.1689, norm(output): 0.3301, norm(x): 0.2926, norm(y): 1.0089, norm:1.5433, tok/sec: 103221.55, flops:108.33, batch-reuse:1
@ 1875 train 5.1582 , allloss: 5.1589, dt: 1334.28ms, fracRes: 0.2487, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2950, norm(y): 1.0088, norm:2.0200, tok/sec: 98234.20, flops:103.10, batch-reuse:1
@ 1876 train 5.2689 , allloss: 5.2701, dt: 1342.86ms, fracRes: 0.2496, norm(attn): 0.1680, norm(output): 0.3301, norm(x): 0.2955, norm(y): 1.0088, norm:2.0757, tok/sec: 97606.67, flops:102.44, batch-reuse:1
@ 1877 train 5.2425 , allloss: 5.2440, dt: 1354.49ms, fracRes: 0.2558, norm(attn): 0.1670, norm(output): 0.3262, norm(x): 0.2937, norm(y): 1.0089, norm:1.8033, tok/sec: 96768.68, flops:101.56, batch-reuse:1
@ 1878 train 5.1917 , allloss: 5.1930, dt: 1323.14ms, fracRes: 0.2536, norm(attn): 0.1689, norm(output): 0.3281, norm(x): 0.2939, norm(y): 1.0088, norm:1.9529, tok/sec: 99061.26, flops:103.97, batch-reuse:1
@ 1879 train 5.2144 , allloss: 5.2156, dt: 1335.84ms, fracRes: 0.2575, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2942, norm(y): 1.0088, norm:2.0232, tok/sec: 98119.66, flops:102.98, batch-reuse:1
@ 1880 train 5.2048 , allloss: 5.2056, dt: 1298.84ms, fracRes: 0.2530, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2962, norm(y): 1.0088, norm:1.6939, tok/sec: 100914.58, flops:105.91, batch-reuse:1
@ 1881 train 5.1361 , allloss: 5.1372, dt: 1314.07ms, fracRes: 0.2532, norm(attn): 0.1660, norm(output): 0.3301, norm(x): 0.2956, norm(y): 1.0089, norm:1.8600, tok/sec: 99745.34, flops:104.68, batch-reuse:1
@ 1882 train 5.2371 , allloss: 5.2380, dt: 1310.92ms, fracRes: 0.2543, norm(attn): 0.1660, norm(output): 0.3281, norm(x): 0.2948, norm(y): 1.0089, norm:2.1982, tok/sec: 99985.00, flops:104.94, batch-reuse:1
@ 1883 train 5.1395 , allloss: 5.1408, dt: 1332.41ms, fracRes: 0.2512, norm(attn): 0.1699, norm(output): 0.3281, norm(x): 0.2955, norm(y): 1.0088, norm:1.7741, tok/sec: 98372.15, flops:103.24, batch-reuse:1
@ 1884 train 5.0937 , allloss: 5.0948, dt: 1311.43ms, fracRes: 0.2526, norm(attn): 0.1709, norm(output): 0.3281, norm(x): 0.2942, norm(y): 1.0089, norm:1.8223, tok/sec: 99945.72, flops:104.89, batch-reuse:1
@ 1885 train 5.1710 , allloss: 5.1728, dt: 1311.43ms, fracRes: 0.2512, norm(attn): 0.1699, norm(output): 0.3301, norm(x): 0.2955, norm(y): 1.0088, norm:1.7209, tok/sec: 99946.04, flops:104.90, batch-reuse:1
@ 1886 train 5.1410 , allloss: 5.1427, dt: 1313.36ms, fracRes: 0.2518, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2955, norm(y): 1.0088, norm:1.7821, tok/sec: 99798.79, flops:104.74, batch-reuse:1
@ 1887 train 5.0938 , allloss: 5.0953, dt: 1328.20ms, fracRes: 0.2536, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2939, norm(y): 1.0088, norm:1.7084, tok/sec: 98684.09, flops:103.57, batch-reuse:1
@ 1888 train 5.2778 , allloss: 5.2786, dt: 1294.96ms, fracRes: 0.2528, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2946, norm(y): 1.0089, norm:1.6555, tok/sec: 101217.12, flops:106.23, batch-reuse:1
@ 1889 train 5.1182 , allloss: 5.1193, dt: 1290.49ms, fracRes: 0.2550, norm(attn): 0.1719, norm(output): 0.3281, norm(x): 0.2938, norm(y): 1.0090, norm:2.1710, tok/sec: 101567.44, flops:106.60, batch-reuse:1
@ 1890 train 5.2871 , allloss: 5.2891, dt: 1311.34ms, fracRes: 0.2563, norm(attn): 0.1699, norm(output): 0.3281, norm(x): 0.2940, norm(y): 1.0089, norm:1.7297, tok/sec: 99952.37, flops:104.90, batch-reuse:1
@ 1891 train 5.1939 , allloss: 5.1949, dt: 1312.72ms, fracRes: 0.2544, norm(attn): 0.1699, norm(output): 0.3281, norm(x): 0.2946, norm(y): 1.0088, norm:2.1966, tok/sec: 99847.66, flops:104.79, batch-reuse:1
@ 1892 train 5.1264 , allloss: 5.1278, dt: 1331.24ms, fracRes: 0.2576, norm(attn): 0.1709, norm(output): 0.3320, norm(x): 0.2935, norm(y): 1.0089, norm:1.8080, tok/sec: 98458.85, flops:103.33, batch-reuse:1
@ 1893 train 5.2228 , allloss: 5.2238, dt: 1313.41ms, fracRes: 0.2602, norm(attn): 0.1689, norm(output): 0.3301, norm(x): 0.2928, norm(y): 1.0089, norm:1.9337, tok/sec: 99794.88, flops:104.74, batch-reuse:1
@ 1894 train 5.0899 , allloss: 5.0911, dt: 1291.46ms, fracRes: 0.2591, norm(attn): 0.1680, norm(output): 0.3301, norm(x): 0.2932, norm(y): 1.0089, norm:1.7402, tok/sec: 101491.54, flops:106.52, batch-reuse:1
@ 1895 train 5.2829 , allloss: 5.2840, dt: 1300.52ms, fracRes: 0.2585, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2943, norm(y): 1.0089, norm:2.0251, tok/sec: 100784.68, flops:105.78, batch-reuse:1
@ 1896 train 5.2857 , allloss: 5.2866, dt: 1292.04ms, fracRes: 0.2544, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2961, norm(y): 1.0088, norm:1.6984, tok/sec: 101445.80, flops:106.47, batch-reuse:1
@ 1897 train 5.2480 , allloss: 5.2488, dt: 1321.11ms, fracRes: 0.2523, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2962, norm(y): 1.0089, norm:2.2326, tok/sec: 99213.25, flops:104.13, batch-reuse:1
@ 1898 train 5.2177 , allloss: 5.2193, dt: 1335.21ms, fracRes: 0.2505, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2960, norm(y): 1.0089, norm:1.9812, tok/sec: 98165.81, flops:103.03, batch-reuse:1
@ 1899 train 5.2068 , allloss: 5.2087, dt: 1350.47ms, fracRes: 0.2484, norm(attn): 0.1729, norm(output): 0.3340, norm(x): 0.2981, norm(y): 1.0088, norm:2.1822, tok/sec: 97056.76, flops:101.86, batch-reuse:1
@ 1900 train 5.1602 , allloss: 5.1626, dt: 1297.68ms, fracRes: 0.2493, norm(attn): 0.1699, norm(output): 0.3340, norm(x): 0.2980, norm(y): 1.0089, norm:1.8153, tok/sec: 101005.23, flops:106.01, batch-reuse:1
@ 1901 train 5.2355 , allloss: 5.2368, dt: 1345.14ms, fracRes: 0.2518, norm(attn): 0.1689, norm(output): 0.3320, norm(x): 0.2975, norm(y): 1.0089, norm:2.1485, tok/sec: 97441.02, flops:102.27, batch-reuse:1
@ 1902 train 5.1889 , allloss: 5.1897, dt: 1300.28ms, fracRes: 0.2524, norm(attn): 0.1699, norm(output): 0.3340, norm(x): 0.2974, norm(y): 1.0089, norm:1.8401, tok/sec: 100803.04, flops:105.79, batch-reuse:1
@ 1903 train 5.1910 , allloss: 5.1920, dt: 1334.65ms, fracRes: 0.2562, norm(attn): 0.1689, norm(output): 0.3340, norm(x): 0.2974, norm(y): 1.0090, norm:2.0657, tok/sec: 98207.19, flops:103.07, batch-reuse:1
@ 1904 train 5.1594 , allloss: 5.1602, dt: 1320.20ms, fracRes: 0.2559, norm(attn): 0.1670, norm(output): 0.3340, norm(x): 0.2979, norm(y): 1.0089, norm:1.7538, tok/sec: 99281.59, flops:104.20, batch-reuse:1
@ 1905 train 5.0803 , allloss: 5.0813, dt: 1338.05ms, fracRes: 0.2561, norm(attn): 0.1680, norm(output): 0.3320, norm(x): 0.2976, norm(y): 1.0088, norm:1.7329, tok/sec: 97957.33, flops:102.81, batch-reuse:1
@ 1906 train 5.0870 , allloss: 5.0881, dt: 1332.88ms, fracRes: 0.2577, norm(attn): 0.1699, norm(output): 0.3340, norm(x): 0.2970, norm(y): 1.0089, norm:1.7081, tok/sec: 98337.42, flops:103.21, batch-reuse:1
@ 1907 train 5.1367 , allloss: 5.1374, dt: 1318.58ms, fracRes: 0.2592, norm(attn): 0.1689, norm(output): 0.3320, norm(x): 0.2973, norm(y): 1.0089, norm:1.7594, tok/sec: 99403.73, flops:104.33, batch-reuse:1
@ 1908 train 5.1374 , allloss: 5.1382, dt: 1295.74ms, fracRes: 0.2557, norm(attn): 0.1709, norm(output): 0.3320, norm(x): 0.2977, norm(y): 1.0089, norm:1.6122, tok/sec: 101156.33, flops:106.17, batch-reuse:1
@ 1909 train 5.2923 , allloss: 5.2933, dt: 1314.63ms, fracRes: 0.2550, norm(attn): 0.1680, norm(output): 0.3320, norm(x): 0.2964, norm(y): 1.0089, norm:2.2873, tok/sec: 99702.56, flops:104.64, batch-reuse:1
@ 1910 train 5.2188 , allloss: 5.2196, dt: 1300.85ms, fracRes: 0.2539, norm(attn): 0.1699, norm(output): 0.3340, norm(x): 0.2976, norm(y): 1.0089, norm:1.6657, tok/sec: 100759.07, flops:105.75, batch-reuse:1
@ 1911 train 5.1667 , allloss: 5.1675, dt: 1299.85ms, fracRes: 0.2564, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2983, norm(y): 1.0089, norm:1.8271, tok/sec: 100836.36, flops:105.83, batch-reuse:1
@ 1912 train 5.1460 , allloss: 5.1472, dt: 1297.37ms, fracRes: 0.2553, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2979, norm(y): 1.0089, norm:1.9356, tok/sec: 101028.62, flops:106.03, batch-reuse:1
@ 1913 train 5.1644 , allloss: 5.1653, dt: 1309.65ms, fracRes: 0.2551, norm(attn): 0.1699, norm(output): 0.3340, norm(x): 0.2979, norm(y): 1.0090, norm:2.0986, tok/sec: 100081.94, flops:105.04, batch-reuse:1
@ 1914 train 5.1579 , allloss: 5.1592, dt: 1339.08ms, fracRes: 0.2557, norm(attn): 0.1670, norm(output): 0.3340, norm(x): 0.2977, norm(y): 1.0090, norm:2.0595, tok/sec: 97882.23, flops:102.73, batch-reuse:1
@ 1915 train 5.1348 , allloss: 5.1355, dt: 1305.13ms, fracRes: 0.2555, norm(attn): 0.1699, norm(output): 0.3301, norm(x): 0.2970, norm(y): 1.0090, norm:1.9769, tok/sec: 100428.47, flops:105.40, batch-reuse:1
@ 1916 train 5.3319 , allloss: 5.3328, dt: 1288.47ms, fracRes: 0.2515, norm(attn): 0.1729, norm(output): 0.3359, norm(x): 0.3005, norm(y): 1.0088, norm:2.2750, tok/sec: 101726.85, flops:106.76, batch-reuse:1
@ 1917 train 5.1953 , allloss: 5.1964, dt: 1307.59ms, fracRes: 0.2563, norm(attn): 0.1689, norm(output): 0.3340, norm(x): 0.2973, norm(y): 1.0091, norm:2.0277, tok/sec: 100239.48, flops:105.20, batch-reuse:1
@ 1918 train 5.2063 , allloss: 5.2075, dt: 1329.46ms, fracRes: 0.2540, norm(attn): 0.1709, norm(output): 0.3320, norm(x): 0.2972, norm(y): 1.0091, norm:1.8291, tok/sec: 98590.55, flops:103.47, batch-reuse:1
@ 1919 train 5.1642 , allloss: 5.1657, dt: 1334.14ms, fracRes: 0.2527, norm(attn): 0.1719, norm(output): 0.3359, norm(x): 0.2990, norm(y): 1.0090, norm:2.0830, tok/sec: 98244.65, flops:103.11, batch-reuse:1
@ 1920 train 5.1300 , allloss: 5.1311, dt: 1334.37ms, fracRes: 0.2493, norm(attn): 0.1719, norm(output): 0.3379, norm(x): 0.3004, norm(y): 1.0090, norm:1.7737, tok/sec: 98227.67, flops:103.09, batch-reuse:1
@ 1921 train 5.1823 , allloss: 5.1833, dt: 1340.60ms, fracRes: 0.2532, norm(attn): 0.1689, norm(output): 0.3359, norm(x): 0.2990, norm(y): 1.0091, norm:2.0011, tok/sec: 97770.87, flops:102.61, batch-reuse:1
@ 1922 train 5.0989 , allloss: 5.0997, dt: 1338.84ms, fracRes: 0.2530, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2991, norm(y): 1.0090, norm:1.7990, tok/sec: 97899.52, flops:102.75, batch-reuse:1
@ 1923 train 5.1793 , allloss: 5.1803, dt: 1332.83ms, fracRes: 0.2526, norm(attn): 0.1729, norm(output): 0.3359, norm(x): 0.3006, norm(y): 1.0089, norm:1.7449, tok/sec: 98341.30, flops:103.21, batch-reuse:1
@ 1924 train 5.1887 , allloss: 5.1907, dt: 1333.88ms, fracRes: 0.2541, norm(attn): 0.1709, norm(output): 0.3340, norm(x): 0.2996, norm(y): 1.0090, norm:1.7893, tok/sec: 98263.59, flops:103.13, batch-reuse:1
@ 1925 train 5.1732 , allloss: 5.1745, dt: 1334.54ms, fracRes: 0.2541, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2995, norm(y): 1.0090, norm:1.7291, tok/sec: 98215.16, flops:103.08, batch-reuse:1
@ 1926 train 5.1935 , allloss: 5.1943, dt: 1326.44ms, fracRes: 0.2536, norm(attn): 0.1719, norm(output): 0.3359, norm(x): 0.3005, norm(y): 1.0089, norm:1.9651, tok/sec: 98814.90, flops:103.71, batch-reuse:1
@ 1927 train 5.1931 , allloss: 5.1942, dt: 1337.68ms, fracRes: 0.2546, norm(attn): 0.1729, norm(output): 0.3340, norm(x): 0.3011, norm(y): 1.0089, norm:1.7782, tok/sec: 97984.41, flops:102.84, batch-reuse:1
@ 1928 train 5.1340 , allloss: 5.1349, dt: 1314.63ms, fracRes: 0.2549, norm(attn): 0.1709, norm(output): 0.3340, norm(x): 0.2994, norm(y): 1.0090, norm:1.9343, tok/sec: 99702.92, flops:104.64, batch-reuse:1
@ 1929 train 5.1404 , allloss: 5.1412, dt: 1309.82ms, fracRes: 0.2533, norm(attn): 0.1699, norm(output): 0.3359, norm(x): 0.3008, norm(y): 1.0090, norm:1.7994, tok/sec: 100068.41, flops:105.02, batch-reuse:1
@ 1930 train 5.0791 , allloss: 5.0800, dt: 1340.52ms, fracRes: 0.2554, norm(attn): 0.1729, norm(output): 0.3340, norm(x): 0.3002, norm(y): 1.0090, norm:1.8628, tok/sec: 97777.23, flops:102.62, batch-reuse:1
@ 1931 train 5.2375 , allloss: 5.2382, dt: 1328.15ms, fracRes: 0.2559, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2999, norm(y): 1.0090, norm:1.7850, tok/sec: 98687.75, flops:103.57, batch-reuse:1
@ 1932 train 5.1997 , allloss: 5.2009, dt: 1316.90ms, fracRes: 0.2564, norm(attn): 0.1729, norm(output): 0.3359, norm(x): 0.2993, norm(y): 1.0090, norm:1.7777, tok/sec: 99530.73, flops:104.46, batch-reuse:1
@ 1933 train 5.2217 , allloss: 5.2229, dt: 1343.56ms, fracRes: 0.2598, norm(attn): 0.1699, norm(output): 0.3340, norm(x): 0.2983, norm(y): 1.0090, norm:1.9342, tok/sec: 97555.52, flops:102.39, batch-reuse:1
@ 1934 train 5.2734 , allloss: 5.2752, dt: 1338.59ms, fracRes: 0.2589, norm(attn): 0.1709, norm(output): 0.3379, norm(x): 0.2994, norm(y): 1.0090, norm:2.2741, tok/sec: 97917.98, flops:102.77, batch-reuse:1
@ 1935 train 5.1047 , allloss: 5.1060, dt: 1342.30ms, fracRes: 0.2565, norm(attn): 0.1699, norm(output): 0.3379, norm(x): 0.2999, norm(y): 1.0090, norm:1.7560, tok/sec: 97647.34, flops:102.48, batch-reuse:1
@ 1936 train 5.1352 , allloss: 5.1363, dt: 1348.01ms, fracRes: 0.2587, norm(attn): 0.1709, norm(output): 0.3359, norm(x): 0.2985, norm(y): 1.0090, norm:2.1623, tok/sec: 97233.73, flops:102.05, batch-reuse:1
@ 1937 train 5.1064 , allloss: 5.1082, dt: 1349.32ms, fracRes: 0.2618, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2967, norm(y): 1.0091, norm:1.9494, tok/sec: 97139.41, flops:101.95, batch-reuse:1
@ 1938 train 5.1478 , allloss: 5.1495, dt: 1339.41ms, fracRes: 0.2572, norm(attn): 0.1729, norm(output): 0.3340, norm(x): 0.2982, norm(y): 1.0091, norm:1.6658, tok/sec: 97857.85, flops:102.70, batch-reuse:1
@ 1939 train 5.1349 , allloss: 5.1368, dt: 1331.81ms, fracRes: 0.2557, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2989, norm(y): 1.0091, norm:2.0754, tok/sec: 98416.58, flops:103.29, batch-reuse:1
@ 1940 train 5.3013 , allloss: 5.3030, dt: 1327.44ms, fracRes: 0.2547, norm(attn): 0.1719, norm(output): 0.3379, norm(x): 0.3014, norm(y): 1.0090, norm:1.6887, tok/sec: 98740.16, flops:103.63, batch-reuse:1
@ 1941 train 5.1996 , allloss: 5.2006, dt: 1329.03ms, fracRes: 0.2591, norm(attn): 0.1709, norm(output): 0.3359, norm(x): 0.3005, norm(y): 1.0091, norm:1.8235, tok/sec: 98622.32, flops:103.51, batch-reuse:1
@ 1942 train 5.0970 , allloss: 5.0979, dt: 1299.39ms, fracRes: 0.2596, norm(attn): 0.1709, norm(output): 0.3340, norm(x): 0.3006, norm(y): 1.0091, norm:1.7496, tok/sec: 100872.33, flops:105.87, batch-reuse:1
@ 1943 train 5.1268 , allloss: 5.1284, dt: 1295.44ms, fracRes: 0.2589, norm(attn): 0.1729, norm(output): 0.3340, norm(x): 0.3011, norm(y): 1.0090, norm:1.4886, tok/sec: 101179.47, flops:106.19, batch-reuse:1
@ 1944 train 5.1260 , allloss: 5.1273, dt: 1314.20ms, fracRes: 0.2579, norm(attn): 0.1748, norm(output): 0.3379, norm(x): 0.3019, norm(y): 1.0090, norm:1.8957, tok/sec: 99735.39, flops:104.67, batch-reuse:1
@ 1945 train 5.0605 , allloss: 5.0614, dt: 1309.09ms, fracRes: 0.2597, norm(attn): 0.1719, norm(output): 0.3359, norm(x): 0.3005, norm(y): 1.0091, norm:1.6799, tok/sec: 100124.45, flops:105.08, batch-reuse:1
@ 1946 train 5.0793 , allloss: 5.0802, dt: 1331.11ms, fracRes: 0.2588, norm(attn): 0.1709, norm(output): 0.3359, norm(x): 0.3010, norm(y): 1.0091, norm:1.8179, tok/sec: 98468.02, flops:103.34, batch-reuse:1
@ 1947 train 5.2297 , allloss: 5.2309, dt: 1334.17ms, fracRes: 0.2598, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.3001, norm(y): 1.0091, norm:1.8485, tok/sec: 98242.43, flops:103.11, batch-reuse:1
@ 1948 train 5.0695 , allloss: 5.0708, dt: 1296.54ms, fracRes: 0.2536, norm(attn): 0.1748, norm(output): 0.3359, norm(x): 0.3011, norm(y): 1.0091, norm:1.9718, tok/sec: 101093.90, flops:106.10, batch-reuse:1
@ 1949 train 5.1337 , allloss: 5.1348, dt: 1284.71ms, fracRes: 0.2535, norm(attn): 0.1738, norm(output): 0.3379, norm(x): 0.3020, norm(y): 1.0090, norm:1.8765, tok/sec: 102024.51, flops:107.08, batch-reuse:1
@ 1950 train 5.2217 , allloss: 5.2230, dt: 1304.27ms, fracRes: 0.2535, norm(attn): 0.1758, norm(output): 0.3379, norm(x): 0.3030, norm(y): 1.0090, norm:1.9105, tok/sec: 100494.77, flops:105.47, batch-reuse:1
@ 1951 train 5.1011 , allloss: 5.1025, dt: 1309.72ms, fracRes: 0.2534, norm(attn): 0.1758, norm(output): 0.3379, norm(x): 0.3026, norm(y): 1.0090, norm:1.9054, tok/sec: 100076.62, flops:105.03, batch-reuse:1
@ 1952 train 5.1000 , allloss: 5.1019, dt: 1286.68ms, fracRes: 0.2565, norm(attn): 0.1738, norm(output): 0.3340, norm(x): 0.3009, norm(y): 1.0091, norm:2.1438, tok/sec: 101868.30, flops:106.91, batch-reuse:1
@ 1953 train 5.0885 , allloss: 5.0893, dt: 1319.20ms, fracRes: 0.2577, norm(attn): 0.1729, norm(output): 0.3359, norm(x): 0.3008, norm(y): 1.0091, norm:1.7349, tok/sec: 99356.82, flops:104.28, batch-reuse:1
@ 1954 train 5.0658 , allloss: 5.0667, dt: 1311.43ms, fracRes: 0.2582, norm(attn): 0.1729, norm(output): 0.3359, norm(x): 0.3019, norm(y): 1.0090, norm:1.9016, tok/sec: 99945.59, flops:104.89, batch-reuse:1
@ 1955 train 5.0858 , allloss: 5.0865, dt: 1320.86ms, fracRes: 0.2600, norm(attn): 0.1748, norm(output): 0.3340, norm(x): 0.3030, norm(y): 1.0091, norm:1.9995, tok/sec: 99232.22, flops:104.15, batch-reuse:1
@ 1956 train 4.9528 , allloss: 4.9535, dt: 1300.84ms, fracRes: 0.2612, norm(attn): 0.1748, norm(output): 0.3340, norm(x): 0.3009, norm(y): 1.0091, norm:1.7063, tok/sec: 100759.74, flops:105.75, batch-reuse:1
@ 1957 train 5.0952 , allloss: 5.0961, dt: 1309.94ms, fracRes: 0.2634, norm(attn): 0.1738, norm(output): 0.3340, norm(x): 0.3013, norm(y): 1.0091, norm:1.8483, tok/sec: 100059.34, flops:105.01, batch-reuse:1
@ 1958 train 5.0662 , allloss: 5.0673, dt: 1320.09ms, fracRes: 0.2622, norm(attn): 0.1738, norm(output): 0.3379, norm(x): 0.3026, norm(y): 1.0091, norm:1.6257, tok/sec: 99290.16, flops:104.21, batch-reuse:1
@ 1959 train 5.0132 , allloss: 5.0141, dt: 1325.55ms, fracRes: 0.2639, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.3004, norm(y): 1.0092, norm:1.8570, tok/sec: 98881.55, flops:103.78, batch-reuse:1
@ 1960 train 4.9853 , allloss: 4.9862, dt: 1322.93ms, fracRes: 0.2633, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.3005, norm(y): 1.0091, norm:1.8405, tok/sec: 99077.04, flops:103.98, batch-reuse:1
@ 1961 train 5.1224 , allloss: 5.1243, dt: 1305.56ms, fracRes: 0.2622, norm(attn): 0.1758, norm(output): 0.3359, norm(x): 0.3025, norm(y): 1.0091, norm:1.6999, tok/sec: 100395.08, flops:105.37, batch-reuse:1
@ 1962 train 5.0148 , allloss: 5.0161, dt: 1307.38ms, fracRes: 0.2618, norm(attn): 0.1738, norm(output): 0.3359, norm(x): 0.3019, norm(y): 1.0091, norm:1.6555, tok/sec: 100255.35, flops:105.22, batch-reuse:1
@ 1963 train 5.1749 , allloss: 5.1763, dt: 1336.31ms, fracRes: 0.2646, norm(attn): 0.1719, norm(output): 0.3359, norm(x): 0.3014, norm(y): 1.0092, norm:1.8067, tok/sec: 98085.22, flops:102.94, batch-reuse:1
@ 1964 train 5.1058 , allloss: 5.1078, dt: 1311.68ms, fracRes: 0.2625, norm(attn): 0.1738, norm(output): 0.3359, norm(x): 0.3024, norm(y): 1.0092, norm:2.5134, tok/sec: 99926.57, flops:104.87, batch-reuse:1
@ 1965 train 5.0680 , allloss: 5.0691, dt: 1334.63ms, fracRes: 0.2596, norm(attn): 0.1758, norm(output): 0.3398, norm(x): 0.3034, norm(y): 1.0091, norm:1.8266, tok/sec: 98208.86, flops:103.07, batch-reuse:1
@ 1966 train 5.0804 , allloss: 5.0812, dt: 1320.96ms, fracRes: 0.2625, norm(attn): 0.1709, norm(output): 0.3398, norm(x): 0.3032, norm(y): 1.0092, norm:1.9528, tok/sec: 99225.00, flops:104.14, batch-reuse:1
@ 1967 train 5.0308 , allloss: 5.0315, dt: 1318.18ms, fracRes: 0.2630, norm(attn): 0.1709, norm(output): 0.3379, norm(x): 0.3023, norm(y): 1.0092, norm:2.0283, tok/sec: 99434.19, flops:104.36, batch-reuse:1
@ 1968 train 5.0654 , allloss: 5.0661, dt: 1296.46ms, fracRes: 0.2615, norm(attn): 0.1719, norm(output): 0.3379, norm(x): 0.3026, norm(y): 1.0092, norm:2.0363, tok/sec: 101100.00, flops:106.11, batch-reuse:1
@ 1969 train 5.1093 , allloss: 5.1101, dt: 1312.63ms, fracRes: 0.2602, norm(attn): 0.1768, norm(output): 0.3398, norm(x): 0.3032, norm(y): 1.0091, norm:1.9573, tok/sec: 99854.19, flops:104.80, batch-reuse:1
@ 1970 train 5.0465 , allloss: 5.0476, dt: 1301.91ms, fracRes: 0.2613, norm(attn): 0.1738, norm(output): 0.3398, norm(x): 0.3037, norm(y): 1.0092, norm:2.1559, tok/sec: 100676.41, flops:105.66, batch-reuse:1
@ 1971 train 5.1141 , allloss: 5.1156, dt: 1307.15ms, fracRes: 0.2635, norm(attn): 0.1719, norm(output): 0.3398, norm(x): 0.3030, norm(y): 1.0092, norm:1.9264, tok/sec: 100272.94, flops:105.24, batch-reuse:1
@ 1972 train 5.0837 , allloss: 5.0855, dt: 1333.38ms, fracRes: 0.2608, norm(attn): 0.1729, norm(output): 0.3398, norm(x): 0.3047, norm(y): 1.0091, norm:2.4899, tok/sec: 98300.33, flops:103.17, batch-reuse:1
@ 1973 train 5.0695 , allloss: 5.0712, dt: 1334.61ms, fracRes: 0.2611, norm(attn): 0.1738, norm(output): 0.3379, norm(x): 0.3035, norm(y): 1.0091, norm:1.9627, tok/sec: 98209.91, flops:103.07, batch-reuse:1
@ 1974 train 5.0987 , allloss: 5.1006, dt: 1312.12ms, fracRes: 0.2618, norm(attn): 0.1758, norm(output): 0.3379, norm(x): 0.3027, norm(y): 1.0091, norm:1.8275, tok/sec: 99893.14, flops:104.84, batch-reuse:1
@ 1975 train 4.9377 , allloss: 4.9408, dt: 1332.50ms, fracRes: 0.2626, norm(attn): 0.1758, norm(output): 0.3379, norm(x): 0.3022, norm(y): 1.0091, norm:2.1213, tok/sec: 98365.15, flops:103.24, batch-reuse:1
@ 1976 train 5.1546 , allloss: 5.1573, dt: 1306.24ms, fracRes: 0.2662, norm(attn): 0.1738, norm(output): 0.3379, norm(x): 0.3032, norm(y): 1.0092, norm:1.7764, tok/sec: 100342.87, flops:105.31, batch-reuse:1
@ 1977 train 4.9921 , allloss: 4.9939, dt: 1310.81ms, fracRes: 0.2647, norm(attn): 0.1699, norm(output): 0.3398, norm(x): 0.3028, norm(y): 1.0092, norm:2.1940, tok/sec: 99993.09, flops:104.94, batch-reuse:1
@ 1978 train 5.1097 , allloss: 5.1115, dt: 1297.99ms, fracRes: 0.2651, norm(attn): 0.1748, norm(output): 0.3398, norm(x): 0.3032, norm(y): 1.0092, norm:2.0581, tok/sec: 100980.56, flops:105.98, batch-reuse:1
@ 1979 train 5.1028 , allloss: 5.1039, dt: 1314.36ms, fracRes: 0.2632, norm(attn): 0.1768, norm(output): 0.3340, norm(x): 0.3033, norm(y): 1.0091, norm:1.8088, tok/sec: 99722.98, flops:104.66, batch-reuse:1
@ 1980 train 5.0614 , allloss: 5.0640, dt: 1330.49ms, fracRes: 0.2633, norm(attn): 0.1729, norm(output): 0.3398, norm(x): 0.3040, norm(y): 1.0092, norm:1.8974, tok/sec: 98513.90, flops:103.39, batch-reuse:1
@ 1981 train 5.0648 , allloss: 5.0671, dt: 1334.99ms, fracRes: 0.2637, norm(attn): 0.1729, norm(output): 0.3398, norm(x): 0.3041, norm(y): 1.0092, norm:1.7821, tok/sec: 98182.09, flops:103.04, batch-reuse:1
@ 1982 train 4.9881 , allloss: 4.9888, dt: 1342.28ms, fracRes: 0.2632, norm(attn): 0.1729, norm(output): 0.3398, norm(x): 0.3047, norm(y): 1.0092, norm:1.9383, tok/sec: 97648.64, flops:102.48, batch-reuse:1
@ 1983 train 5.0751 , allloss: 5.0760, dt: 1338.60ms, fracRes: 0.2656, norm(attn): 0.1729, norm(output): 0.3398, norm(x): 0.3037, norm(y): 1.0092, norm:2.0039, tok/sec: 97917.30, flops:102.77, batch-reuse:1
@ 1984 train 5.0299 , allloss: 5.0308, dt: 1314.75ms, fracRes: 0.2687, norm(attn): 0.1729, norm(output): 0.3379, norm(x): 0.3022, norm(y): 1.0092, norm:1.5588, tok/sec: 99693.34, flops:104.63, batch-reuse:1
@ 1985 train 5.0361 , allloss: 5.0370, dt: 1279.10ms, fracRes: 0.2651, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.3038, norm(y): 1.0091, norm:1.7139, tok/sec: 102471.75, flops:107.55, batch-reuse:1
@ 1986 train 5.1050 , allloss: 5.1065, dt: 1295.08ms, fracRes: 0.2669, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3036, norm(y): 1.0092, norm:1.6743, tok/sec: 101207.54, flops:106.22, batch-reuse:1
@ 1987 train 5.1051 , allloss: 5.1063, dt: 1321.40ms, fracRes: 0.2682, norm(attn): 0.1709, norm(output): 0.3418, norm(x): 0.3040, norm(y): 1.0093, norm:1.9435, tok/sec: 99191.83, flops:104.10, batch-reuse:1
@ 1988 train 5.0304 , allloss: 5.0310, dt: 1317.71ms, fracRes: 0.2658, norm(attn): 0.1709, norm(output): 0.3418, norm(x): 0.3041, norm(y): 1.0093, norm:2.2096, tok/sec: 99469.27, flops:104.39, batch-reuse:1
@ 1989 train 5.0494 , allloss: 5.0501, dt: 1310.93ms, fracRes: 0.2656, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3035, norm(y): 1.0092, norm:1.4727, tok/sec: 99984.13, flops:104.94, batch-reuse:1
@ 1990 train 5.1074 , allloss: 5.1085, dt: 1289.22ms, fracRes: 0.2642, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.3046, norm(y): 1.0092, norm:1.6564, tok/sec: 101667.39, flops:106.70, batch-reuse:1
@ 1991 train 4.9846 , allloss: 4.9857, dt: 1304.46ms, fracRes: 0.2617, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3062, norm(y): 1.0092, norm:1.7417, tok/sec: 100479.81, flops:105.46, batch-reuse:1
@ 1992 train 5.0554 , allloss: 5.0565, dt: 1293.96ms, fracRes: 0.2598, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3072, norm(y): 1.0093, norm:1.9377, tok/sec: 101295.02, flops:106.31, batch-reuse:1
@ 1993 train 4.9577 , allloss: 4.9589, dt: 1300.00ms, fracRes: 0.2627, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3051, norm(y): 1.0093, norm:2.2239, tok/sec: 100824.62, flops:105.82, batch-reuse:1
@ 1994 train 5.0073 , allloss: 5.0086, dt: 1291.48ms, fracRes: 0.2626, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3060, norm(y): 1.0092, norm:1.7236, tok/sec: 101489.70, flops:106.52, batch-reuse:1
@ 1995 train 4.9918 , allloss: 4.9926, dt: 1305.13ms, fracRes: 0.2682, norm(attn): 0.1689, norm(output): 0.3398, norm(x): 0.3038, norm(y): 1.0093, norm:1.6083, tok/sec: 100428.49, flops:105.40, batch-reuse:1
@ 1996 train 5.0345 , allloss: 5.0360, dt: 1313.04ms, fracRes: 0.2692, norm(attn): 0.1689, norm(output): 0.3418, norm(x): 0.3059, norm(y): 1.0093, norm:2.4708, tok/sec: 99823.33, flops:104.77, batch-reuse:1
@ 1997 train 4.9432 , allloss: 4.9457, dt: 1309.15ms, fracRes: 0.2686, norm(attn): 0.1699, norm(output): 0.3418, norm(x): 0.3060, norm(y): 1.0093, norm:1.8077, tok/sec: 100120.13, flops:105.08, batch-reuse:1
@ 1998 train 4.9602 , allloss: 4.9612, dt: 1283.49ms, fracRes: 0.2668, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3060, norm(y): 1.0093, norm:1.8123, tok/sec: 102121.20, flops:107.18, batch-reuse:1
@ 1999 train 4.8888 , allloss: 4.8901, dt: 1298.97ms, fracRes: 0.2648, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3059, norm(y): 1.0093, norm:1.7103, tok/sec: 100904.56, flops:105.90, batch-reuse:1
@ 2000 val 5.0770
@ 2000 train 4.9746 , allloss: 4.9757, dt: 1899.02ms, fracRes: 0.2634, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3070, norm(y): 1.0092, norm:1.7247, tok/sec: 69021.01, flops:72.44, batch-reuse:1
@ 2001 train 5.0414 , allloss: 5.0427, dt: 1295.83ms, fracRes: 0.2664, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3065, norm(y): 1.0093, norm:1.7348, tok/sec: 101149.13, flops:106.16, batch-reuse:1
@ 2002 train 5.0415 , allloss: 5.0424, dt: 1298.96ms, fracRes: 0.2641, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3073, norm(y): 1.0092, norm:1.8586, tok/sec: 100905.25, flops:105.90, batch-reuse:1
@ 2003 train 5.0461 , allloss: 5.0472, dt: 1318.39ms, fracRes: 0.2637, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.3077, norm(y): 1.0092, norm:1.6739, tok/sec: 99417.86, flops:104.34, batch-reuse:1
@ 2004 train 5.0566 , allloss: 5.0579, dt: 1323.99ms, fracRes: 0.2659, norm(attn): 0.1709, norm(output): 0.3418, norm(x): 0.3067, norm(y): 1.0093, norm:2.2798, tok/sec: 98997.81, flops:103.90, batch-reuse:1
@ 2005 train 4.8905 , allloss: 4.8911, dt: 1293.73ms, fracRes: 0.2658, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3066, norm(y): 1.0093, norm:2.0454, tok/sec: 101313.26, flops:106.33, batch-reuse:1
@ 2006 train 5.0707 , allloss: 5.0718, dt: 1341.76ms, fracRes: 0.2652, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3072, norm(y): 1.0092, norm:1.7024, tok/sec: 97686.77, flops:102.52, batch-reuse:1
@ 2007 train 4.9343 , allloss: 4.9362, dt: 1323.71ms, fracRes: 0.2666, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.3053, norm(y): 1.0093, norm:1.9708, tok/sec: 99018.33, flops:103.92, batch-reuse:1
@ 2008 train 4.9524 , allloss: 4.9539, dt: 1283.48ms, fracRes: 0.2707, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3052, norm(y): 1.0093, norm:1.7397, tok/sec: 102122.00, flops:107.18, batch-reuse:1
@ 2009 train 4.9434 , allloss: 4.9447, dt: 1318.33ms, fracRes: 0.2727, norm(attn): 0.1699, norm(output): 0.3418, norm(x): 0.3052, norm(y): 1.0094, norm:1.8685, tok/sec: 99422.64, flops:104.35, batch-reuse:1
@ 2010 train 5.0146 , allloss: 5.0158, dt: 1352.47ms, fracRes: 0.2730, norm(attn): 0.1699, norm(output): 0.3418, norm(x): 0.3051, norm(y): 1.0093, norm:1.6330, tok/sec: 96912.75, flops:101.71, batch-reuse:1
@ 2011 train 4.9285 , allloss: 4.9304, dt: 1333.39ms, fracRes: 0.2762, norm(attn): 0.1719, norm(output): 0.3438, norm(x): 0.3053, norm(y): 1.0093, norm:1.8165, tok/sec: 98300.17, flops:103.17, batch-reuse:1
@ 2012 train 4.9314 , allloss: 4.9331, dt: 1324.97ms, fracRes: 0.2747, norm(attn): 0.1689, norm(output): 0.3418, norm(x): 0.3039, norm(y): 1.0093, norm:1.9570, tok/sec: 98924.84, flops:103.82, batch-reuse:1
@ 2013 train 4.9598 , allloss: 4.9609, dt: 1342.19ms, fracRes: 0.2708, norm(attn): 0.1699, norm(output): 0.3418, norm(x): 0.3045, norm(y): 1.0093, norm:1.7594, tok/sec: 97655.37, flops:102.49, batch-reuse:1
@ 2014 train 4.9772 , allloss: 4.9780, dt: 1335.33ms, fracRes: 0.2671, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3062, norm(y): 1.0093, norm:2.1635, tok/sec: 98156.83, flops:103.02, batch-reuse:1
@ 2015 train 4.8893 , allloss: 4.8930, dt: 1340.27ms, fracRes: 0.2676, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.3057, norm(y): 1.0093, norm:1.8179, tok/sec: 97795.17, flops:102.64, batch-reuse:1
@ 2016 train 4.9692 , allloss: 4.9702, dt: 1328.96ms, fracRes: 0.2706, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3035, norm(y): 1.0094, norm:1.8964, tok/sec: 98627.38, flops:103.51, batch-reuse:1
@ 2017 train 4.9902 , allloss: 4.9939, dt: 1330.10ms, fracRes: 0.2677, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3063, norm(y): 1.0094, norm:2.0279, tok/sec: 98543.09, flops:103.42, batch-reuse:1
@ 2018 train 5.0328 , allloss: 5.0339, dt: 1335.69ms, fracRes: 0.2648, norm(attn): 0.1758, norm(output): 0.3418, norm(x): 0.3085, norm(y): 1.0093, norm:1.7909, tok/sec: 98130.50, flops:102.99, batch-reuse:1
@ 2019 train 5.0408 , allloss: 5.0419, dt: 1320.12ms, fracRes: 0.2679, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.3060, norm(y): 1.0094, norm:1.9806, tok/sec: 99287.88, flops:104.20, batch-reuse:1
@ 2020 train 4.9113 , allloss: 4.9122, dt: 1332.42ms, fracRes: 0.2700, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3051, norm(y): 1.0094, norm:1.9490, tok/sec: 98371.27, flops:103.24, batch-reuse:1
@ 2021 train 4.9446 , allloss: 4.9458, dt: 1338.89ms, fracRes: 0.2694, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3064, norm(y): 1.0094, norm:1.7639, tok/sec: 97896.19, flops:102.74, batch-reuse:1
@ 2022 train 5.0117 , allloss: 5.0129, dt: 1344.70ms, fracRes: 0.2679, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3080, norm(y): 1.0093, norm:2.0848, tok/sec: 97473.10, flops:102.30, batch-reuse:1
@ 2023 train 4.9963 , allloss: 4.9978, dt: 1299.49ms, fracRes: 0.2708, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3066, norm(y): 1.0094, norm:1.9029, tok/sec: 100863.95, flops:105.86, batch-reuse:1
@ 2024 train 4.8888 , allloss: 4.8898, dt: 1287.19ms, fracRes: 0.2689, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.3075, norm(y): 1.0094, norm:1.7990, tok/sec: 101828.24, flops:106.87, batch-reuse:1
@ 2025 train 5.0295 , allloss: 5.0309, dt: 1300.82ms, fracRes: 0.2722, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3065, norm(y): 1.0094, norm:1.9320, tok/sec: 100761.12, flops:105.75, batch-reuse:1
@ 2026 train 4.9618 , allloss: 4.9635, dt: 1341.11ms, fracRes: 0.2716, norm(attn): 0.1709, norm(output): 0.3418, norm(x): 0.3076, norm(y): 1.0094, norm:1.5414, tok/sec: 97734.18, flops:102.57, batch-reuse:1
@ 2027 train 4.9756 , allloss: 4.9770, dt: 1297.77ms, fracRes: 0.2705, norm(attn): 0.1699, norm(output): 0.3438, norm(x): 0.3073, norm(y): 1.0093, norm:1.9074, tok/sec: 100998.09, flops:106.00, batch-reuse:1
@ 2028 train 5.2973 , allloss: 5.2984, dt: 1297.97ms, fracRes: 0.2750, norm(attn): 0.1689, norm(output): 0.3418, norm(x): 0.3065, norm(y): 1.0094, norm:1.9079, tok/sec: 100981.98, flops:105.98, batch-reuse:1
@ 2029 train 5.0508 , allloss: 5.0517, dt: 1290.51ms, fracRes: 0.2740, norm(attn): 0.1709, norm(output): 0.3438, norm(x): 0.3072, norm(y): 1.0094, norm:1.9981, tok/sec: 101566.43, flops:106.60, batch-reuse:1
@ 2030 train 4.7972 , allloss: 4.7981, dt: 1304.08ms, fracRes: 0.2728, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3060, norm(y): 1.0094, norm:1.7955, tok/sec: 100508.80, flops:105.49, batch-reuse:1
@ 2031 train 4.8850 , allloss: 4.8876, dt: 1319.33ms, fracRes: 0.2741, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.3065, norm(y): 1.0094, norm:2.4028, tok/sec: 99347.42, flops:104.27, batch-reuse:1
@ 2032 train 4.8958 , allloss: 4.8996, dt: 1313.87ms, fracRes: 0.2719, norm(attn): 0.1719, norm(output): 0.3438, norm(x): 0.3063, norm(y): 1.0093, norm:2.0622, tok/sec: 99760.20, flops:104.70, batch-reuse:1
@ 2033 train 4.8905 , allloss: 4.8927, dt: 1313.86ms, fracRes: 0.2734, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3056, norm(y): 1.0094, norm:1.9662, tok/sec: 99760.67, flops:104.70, batch-reuse:1
@ 2034 train 4.9131 , allloss: 4.9138, dt: 1314.29ms, fracRes: 0.2720, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.3066, norm(y): 1.0094, norm:1.9923, tok/sec: 99728.28, flops:104.67, batch-reuse:1
@ 2035 train 4.9136 , allloss: 4.9147, dt: 1291.67ms, fracRes: 0.2703, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3078, norm(y): 1.0094, norm:2.0584, tok/sec: 101475.00, flops:106.50, batch-reuse:1
@ 2036 train 4.9013 , allloss: 4.9023, dt: 1298.84ms, fracRes: 0.2726, norm(attn): 0.1709, norm(output): 0.3418, norm(x): 0.3065, norm(y): 1.0094, norm:1.9948, tok/sec: 100914.75, flops:105.91, batch-reuse:1
@ 2037 train 4.9461 , allloss: 4.9475, dt: 1311.00ms, fracRes: 0.2729, norm(attn): 0.1719, norm(output): 0.3438, norm(x): 0.3084, norm(y): 1.0094, norm:1.8067, tok/sec: 99978.98, flops:104.93, batch-reuse:1
@ 2038 train 4.9329 , allloss: 4.9370, dt: 1316.38ms, fracRes: 0.2743, norm(attn): 0.1709, norm(output): 0.3438, norm(x): 0.3095, norm(y): 1.0094, norm:1.9745, tok/sec: 99570.41, flops:104.50, batch-reuse:1
@ 2039 train 5.0393 , allloss: 5.0403, dt: 1296.97ms, fracRes: 0.2734, norm(attn): 0.1699, norm(output): 0.3438, norm(x): 0.3093, norm(y): 1.0094, norm:1.7593, tok/sec: 101059.86, flops:106.06, batch-reuse:1
@ 2040 train 5.0790 , allloss: 5.0797, dt: 1323.67ms, fracRes: 0.2740, norm(attn): 0.1719, norm(output): 0.3438, norm(x): 0.3082, norm(y): 1.0095, norm:1.6712, tok/sec: 99021.99, flops:103.93, batch-reuse:1
@ 2041 train 5.0588 , allloss: 5.0607, dt: 1316.63ms, fracRes: 0.2717, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.3089, norm(y): 1.0094, norm:2.0566, tok/sec: 99551.03, flops:104.48, batch-reuse:1
@ 2042 train 5.1826 , allloss: 5.1833, dt: 1308.72ms, fracRes: 0.2748, norm(attn): 0.1719, norm(output): 0.3438, norm(x): 0.3083, norm(y): 1.0094, norm:1.8314, tok/sec: 100153.07, flops:105.11, batch-reuse:1
@ 2043 train 5.1108 , allloss: 5.1131, dt: 1351.61ms, fracRes: 0.2742, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.3072, norm(y): 1.0094, norm:2.2931, tok/sec: 96974.42, flops:101.78, batch-reuse:1
@ 2044 train 5.2093 , allloss: 5.2115, dt: 1292.44ms, fracRes: 0.2752, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.3083, norm(y): 1.0094, norm:1.9709, tok/sec: 101414.38, flops:106.44, batch-reuse:1
@ 2045 train 5.0940 , allloss: 5.0953, dt: 1338.58ms, fracRes: 0.2734, norm(attn): 0.1719, norm(output): 0.3438, norm(x): 0.3080, norm(y): 1.0094, norm:1.9081, tok/sec: 97918.63, flops:102.77, batch-reuse:1
@ 2046 train 5.1893 , allloss: 5.1905, dt: 1331.99ms, fracRes: 0.2758, norm(attn): 0.1709, norm(output): 0.3438, norm(x): 0.3082, norm(y): 1.0094, norm:2.3536, tok/sec: 98402.89, flops:103.28, batch-reuse:1
@ 2047 train 5.1129 , allloss: 5.1146, dt: 1326.87ms, fracRes: 0.2766, norm(attn): 0.1709, norm(output): 0.3438, norm(x): 0.3086, norm(y): 1.0095, norm:2.1291, tok/sec: 98783.01, flops:103.67, batch-reuse:1
@ 2048 train 5.0867 , allloss: 5.0882, dt: 1337.29ms, fracRes: 0.2763, norm(attn): 0.1719, norm(output): 0.3438, norm(x): 0.3077, norm(y): 1.0094, norm:2.1434, tok/sec: 98012.85, flops:102.87, batch-reuse:1
@ 2049 train 5.1403 , allloss: 5.1416, dt: 1334.87ms, fracRes: 0.2775, norm(attn): 0.1719, norm(output): 0.3438, norm(x): 0.3082, norm(y): 1.0094, norm:1.7864, tok/sec: 98190.67, flops:103.05, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.6875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.1621, 0.6289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.3887, 0.2061, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.2354, 0.0217, 0.0059, 0.4922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2012, 0.1206, 0.0596, 0.0087, 0.2832, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.0825, 0.0811, 0.1216, 0.2520, 0.1865, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0408, 0.0393, 0.1152, 0.5469, 0.0211, 0.0133, 0.0153, 0.2100, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.0947, 0.0264, 0.0178, 0.1680, 0.1855, 0.2070, 0.0532, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.0732, 0.1113, 0.1069, 0.0732, 0.0645, 0.0718, 0.2490, 0.0625, 0.0591, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0240, 0.0282, 0.0042, 0.0012, 0.0874, 0.1289, 0.1455, 0.0010, 0.1729, 0.2715, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0840, 0.0898, 0.0266, 0.0084, 0.0200, 0.0854, 0.3047, 0.0337, 0.0757, 0.0400, 0.1553, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.1172, 0.0603, 0.0654, 0.0425, 0.0192, 0.0356, 0.1680, 0.0967, 0.0566, 0.0605, 0.1279, 0.0640, 0.0000, 0.0000],
        [0.0549, 0.0737, 0.0232, 0.0176, 0.1011, 0.1436, 0.1201, 0.0188, 0.0879, 0.0981, 0.0864, 0.0159, 0.0282, 0.1309, 0.0000],
        [0.0625, 0.0356, 0.1172, 0.0830, 0.0215, 0.0184, 0.0535, 0.2754, 0.0219, 0.0259, 0.0284, 0.0566, 0.0908, 0.0320, 0.0767]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0205,  0.0306, -0.0415,  ..., -0.0219,  0.0205,  0.0284],
        [ 0.0451,  0.0164,  0.0055,  ..., -0.0032, -0.0091, -0.0352],
        [ 0.0104,  0.0200,  0.0079,  ...,  0.0054,  0.0003, -0.0067],
        ...,
        [-0.0356,  0.0165,  0.0024,  ...,  0.0227, -0.0046,  0.0036],
        [ 0.0602, -0.0107, -0.0287,  ...,  0.0213, -0.0047, -0.0013],
        [ 0.0069,  0.0064,  0.0322,  ..., -0.0067, -0.0265,  0.0268]], device='cuda:0', requires_grad=True)
K: tensor([-0.2432,  0.4961,  0.2559, -1.1406, -0.6758,  0.0879,  0.4629, -0.0540,  0.1494,  0.2988,  0.9492,  1.0078, -0.4980,  0.9375,  0.0400, -0.4805,  0.1768, -0.0474,  0.0859,  0.4629, -0.0845, -0.1855, -0.8320, -0.2344, -0.1089,  0.1660, -0.4863, -0.8281, -0.6602,  0.7344, -0.4199, -0.5352,
        -0.2100, -0.4609, -0.2256, -0.2676,  0.1006, -0.4570, -0.0786,  0.4746,  0.4238,  0.1104,  0.5508,  0.0437, -0.4180,  0.1050,  0.1748, -0.3926,  1.0078, -0.0928,  0.1455, -0.9219, -1.0703,  0.4844,  0.4238,  0.0173,  0.5430,  0.5586, -1.0391,  0.0145,  0.5195, -0.1187,  0.1299, -1.0859],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0351,     -0.0013,      0.0130,  ...,      0.0327,     -0.0003,     -0.0325],
        [     0.0171,      0.0342,     -0.0315,  ...,     -0.0011,      0.0132,     -0.0154],
        [     0.0150,     -0.0254,      0.0071,  ...,      0.0467,     -0.0027,     -0.0376],
        ...,
        [     0.0244,      0.0195,      0.0025,  ...,     -0.0203,     -0.0127,      0.0127],
        [    -0.0259,     -0.0237,      0.0158,  ...,      0.0337,     -0.0169,      0.0254],
        [     0.0309,      0.0088,     -0.0137,  ...,     -0.0442,     -0.0241,      0.0000]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4512,  0.1079, -0.1748,  0.1152, -0.0503, -0.7930,  1.0625,  0.4531,  0.1533,  1.2812, -0.9766, -0.1436, -0.6211, -0.3555, -0.6562, -0.0728, -0.8203, -0.4531,  0.2480,  0.1416,  0.6914,  0.5703, -0.2988, -0.4219, -0.6133, -0.8828, -0.9219, -0.2695, -0.9531, -0.5625,  0.0107, -0.5000,
        -0.2773, -0.3398, -0.6055,  0.1582, -0.6016, -0.2158, -0.4199, -0.0918,  0.0669,  0.5352,  0.7383, -0.9258, -0.9062, -0.0889,  0.0913, -0.2402, -0.5664,  0.5312, -0.0713,  0.0393,  0.5078,  1.0078, -0.0289, -0.1914,  0.2617, -0.1953, -0.2119,  0.3887,  0.4355,  1.0156, -0.8359,  0.0889],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.7852,  0.4141,  1.1797, -0.3418,  0.6055,  0.4922, -0.1406, -0.2461,  0.1367,  0.0640,  0.9336,  0.2754, -0.2148,  1.1250],
        [ 0.0000, -0.2451,  1.1094,  1.9375, -0.9180, -0.9219, -0.6562,  1.4766, -1.5156, -1.4453, -0.8320,  1.0547,  1.3984, -0.9688,  0.2207],
        [ 0.0000,  0.3105, -0.3242, -0.8633, -0.8203, -0.6562,  0.1250,  0.3965, -0.3184,  1.1328,  0.1387,  0.1318, -0.4414, -0.4121,  0.9180],
        [ 0.0000, -0.0403, -2.4219, -3.7188,  0.6992,  0.6914,  1.6172, -2.1875,  1.9297,  1.7734,  1.5391, -2.1406, -1.7031,  1.7656, -0.3477],
        [ 0.0000, -0.5156, -1.2188, -3.1562,  0.3418,  0.4824,  0.7070, -0.9414,  1.1641,  1.4062,  0.9766, -1.7422, -1.6328,  0.7539, -0.5234],
        [ 0.0000, -0.5742, -0.5898, -0.1865,  0.5430,  0.2441, -0.1182, -0.7500,  0.9062,  0.8008,  0.6836, -0.3223, -0.0767,  0.5742,  0.4590],
        [ 0.0000, -0.0403,  1.0391,  2.5938, -0.6602, -1.1250, -0.9805,  1.6328, -1.4141, -2.0312, -0.5469,  1.1406,  1.4375, -1.4688,  0.3184],
        [ 0.0000,  0.0311, -1.2500, -1.6406,  0.6016,  0.7031,  0.8125, -0.5469,  0.5234,  0.7109,  0.7578, -1.6172, -1.3594,  0.9492,  0.0850],
        [ 0.0000, -0.5703, -0.1475, -0.1895, -0.5703, -0.6914, -0.5898,  0.6562, -0.7266, -0.7852, -0.1025, -0.0996,  0.2080, -0.9453, -0.5547],
        [ 0.0000,  0.1582, -1.7578, -2.9844,  1.2891,  1.6797,  1.7969, -3.1719,  1.9688,  2.4219,  1.7266, -1.6641, -2.0625,  1.7109, -0.0432],
        [ 0.0000,  0.1113,  0.1768, -1.0391, -2.2031, -1.3203,  0.1289,  1.3984, -0.8047,  0.0047, -0.6289,  0.7266, -0.3379, -0.8398,  0.4824],
        [ 0.0000,  0.3047, -0.3574, -0.2793, -0.7070, -1.5078, -0.8828,  0.6680,  0.1123, -0.4180, -0.3535,  0.3945, -0.2949,  0.2256,  0.1001],
        [ 0.0000,  0.2910, -0.8633, -1.1406,  0.6094,  0.9570,  0.7773, -1.0781,  0.4668,  0.5781,  0.4531, -1.2500, -0.6680,  0.8633, -0.1069],
        [ 0.0000, -0.5625,  0.6289,  0.2852, -1.0703, -1.2188, -0.1582,  1.4844, -1.0547, -0.8828, -0.7891, -0.0996,  0.3711, -0.6758,  0.2061]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4022],
        [0.2726],
        [0.1989],
        [0.2662],
        [0.2534],
        [0.0869],
        [0.0892],
        [0.1047],
        [0.1106],
        [0.0548],
        [0.0896],
        [0.0777],
        [0.0633],
        [0.0585]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4824,     0.5195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4180,     0.0845,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1504,     0.0033,     0.6328,     0.2129,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6094,     0.0479,     0.2520,     0.0815,     0.0087,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6953,     0.0118,     0.1553,     0.0374,     0.0014,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3184,     0.0293,     0.1230,     0.0232,     0.0049,     0.1465,     0.3535,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1787,     0.0222,     0.3477,     0.1396,     0.0165,     0.0311,     0.2520,     0.0125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6523,     0.0048,     0.0437,     0.0232,     0.0005,     0.0250,     0.0248,     0.0004,     0.2236,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3945,     0.0175,     0.1240,     0.0796,     0.0078,     0.0488,     0.1079,     0.0186,     0.1543,     0.0471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.0040,     0.0942,     0.0483,     0.0001,     0.0091,     0.0192,     0.0007,     0.1289,     0.0016,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1816,     0.0103,     0.3145,     0.1187,     0.0014,     0.0100,     0.0125,     0.0060,     0.0366,     0.0105,     0.0027,     0.2949,     0.0000,     0.0000,     0.0000],
        [    0.1216,     0.0030,     0.3926,     0.0623,     0.0017,     0.0057,     0.0120,     0.0041,     0.0292,     0.0486,     0.0035,     0.3066,     0.0092,     0.0000,     0.0000],
        [    0.5469,     0.0045,     0.0354,     0.0210,     0.0004,     0.0178,     0.0208,     0.0002,     0.2139,     0.0009,     0.0005,     0.0315,     0.0002,     0.1040,     0.0000],
        [    0.2617,     0.0649,     0.0383,     0.1426,     0.0050,     0.0205,     0.0486,     0.0006,     0.1553,     0.0022,     0.0166,     0.0262,     0.0006,     0.0991,     0.1187]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0194, -0.0078, -0.0410,  ...,  0.0216, -0.0173,  0.0207],
        [ 0.0042,  0.0033, -0.0381,  ...,  0.0681, -0.0224,  0.0013],
        [-0.0007, -0.0355, -0.0647,  ...,  0.0345, -0.0166, -0.0064],
        ...,
        [-0.0295, -0.0022,  0.0135,  ...,  0.0176,  0.0104,  0.0510],
        [ 0.0069, -0.0232, -0.0323,  ...,  0.0236,  0.0307, -0.0006],
        [ 0.0165,  0.0376,  0.0100,  ..., -0.0152,  0.0080,  0.0414]], device='cuda:0', requires_grad=True)
K: tensor([ 1.9531,  0.3008, -1.1719, -1.6719, -0.6328,  0.0376, -0.4043, -0.6836,  2.1406, -0.1084, -0.3652, -0.3750, -0.1650, -0.2969, -0.2793, -0.2969,  0.0620,  0.7734, -0.0322,  0.1050,  1.3906,  0.4414, -0.2656, -1.7188, -0.3359,  0.6367, -0.2695, -0.6016,  0.2930,  1.1172, -0.0542, -0.7227,
         0.8047,  0.3828, -1.0625, -0.8359,  0.6250,  2.4219,  0.4141, -0.5898, -1.3359,  0.0525, -0.2393,  0.4238, -1.9531,  0.6445, -0.7969, -0.9844,  0.4121, -0.6758, -0.8867,  0.3262, -1.2188,  0.3555,  0.1709,  1.5703, -0.3477,  0.1328,  0.8086,  0.4453,  0.6680,  0.3633, -0.0908, -0.1416],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0281,  0.0144, -0.0033,  ...,  0.0028,  0.0265,  0.0051],
        [ 0.0190,  0.0148,  0.0469,  ..., -0.0149,  0.0093,  0.0281],
        [ 0.0375,  0.0143,  0.0229,  ..., -0.0043,  0.0274, -0.0079],
        ...,
        [ 0.0017, -0.0386, -0.0112,  ...,  0.0121, -0.0497,  0.0124],
        [-0.0099, -0.0221,  0.0172,  ...,  0.0016, -0.0184,  0.0171],
        [-0.0125, -0.0616,  0.0211,  ...,  0.0148,  0.0092,  0.0113]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.4375, -0.1226, -0.0339, -0.0630,  1.8750, -0.9102,  0.2275,  1.2266, -0.0625,  0.5508,  0.9102, -1.1250,  1.3750,  0.6523, -0.3730,  0.9336,  0.8242,  0.4160,  0.2695,  0.4355,  0.3340, -0.8633,  0.5742,  1.2656,  1.4062, -0.3828,  0.6992, -1.7500,  1.6797, -1.1641, -1.2188,  2.1094,
         1.1953, -1.1797, -1.0469,  1.0859, -1.1953, -1.1484,  1.1172, -0.1523, -0.2373, -2.6562, -1.4297, -1.9375,  0.8828,  1.0391,  1.7031,  0.5703, -0.2314, -1.6797,  0.4883, -0.3730,  0.3535, -0.9961,  0.5000,  1.0625, -1.5547,  0.9766, -0.6680, -1.4062,  0.4648,  0.3398,  1.7500,  0.5352],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0732, -0.7734, -0.2451, -2.4062, -1.7734, -0.6875, -3.4375,  0.3164, -1.8281, -1.2188, -1.2422, -3.4531,  0.3555,  1.2109],
        [ 0.0000, -1.5938,  0.1748, -0.4473, -3.7188, -2.4688, -1.5391, -2.2500, -1.5625, -2.5938, -2.9375, -0.6055, -2.5469, -1.6953,  0.3672],
        [ 0.0000, -3.8281,  1.4375,  0.3516, -7.2500, -4.9375, -4.0312, -5.9688, -2.0000, -3.0625, -4.9062,  0.7891, -5.3750, -2.0938,  2.2031],
        [ 0.0000, -2.5469, -0.8789, -2.0156, -4.2500, -0.9922, -0.8398, -1.7109, -0.5391, -3.0312, -4.1875, -0.5859, -2.2656, -0.7891, -1.5469],
        [ 0.0000, -4.0625, -1.4922, -2.9219, -6.2188, -1.9453, -1.8750, -3.2500, -2.0312, -4.8125, -6.8125, -1.4688, -4.2500, -2.5469, -3.0781],
        [ 0.0000, -2.3906, -0.9531, -2.6250, -4.1562, -0.7734,  0.1064, -1.5625, -1.2656, -3.5938, -4.9062, -1.3672, -2.2969, -1.6719, -2.2812],
        [ 0.0000, -2.0781,  0.6680, -0.2461, -2.3750, -1.7500,  0.3438, -2.6562,  0.2715, -1.6016, -2.1406,  0.0520, -2.4375,  0.2041,  1.7578],
        [ 0.0000, -4.9062, -2.7031, -3.3438, -7.2500, -3.2656, -3.2656, -7.5000, -1.0703, -6.5000, -7.3750, -2.7344, -7.9688, -1.8281, -3.0625],
        [ 0.0000, -3.1250, -1.1562, -1.6016, -3.9375, -2.0938, -1.2969, -3.0625, -0.9414, -2.1250, -3.3594, -1.2344, -3.2500, -1.2734, -0.5078],
        [ 0.0000, -5.1562, -1.9922, -2.6562, -8.5000, -4.3438, -3.5781, -6.8750, -1.6797, -6.0938, -7.0625, -2.1094, -6.8750, -2.1875, -1.7031],
        [ 0.0000, -2.8750,  0.5508, -0.4258, -4.8438, -2.8906, -2.6719, -3.4219, -1.6016, -2.8438, -4.1875,  0.4883, -3.1875, -1.8906,  0.0325],
        [ 0.0000, -3.7188,  1.1719, -0.6680, -4.2812, -3.0625, -2.3125, -3.3906, -1.4219, -0.9141, -3.5469,  0.9297, -2.5938, -1.4688,  2.0156],
        [ 0.0000, -4.8125, -2.7500, -3.2656, -7.1875, -3.4219, -3.2812, -7.6875, -0.9414, -6.4062, -7.0312, -2.8594, -8.0625, -1.6641, -2.7969],
        [ 0.0000, -1.3906, -1.9141, -0.6055, -3.9531, -2.5469, -1.6797, -6.1562, -0.5195, -4.7500, -2.7656, -2.2969, -6.0000, -0.9688, -0.7891]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5366],
        [0.3516],
        [0.3487],
        [0.6737],
        [0.7363],
        [0.4498],
        [0.5156],
        [0.6986],
        [0.4081],
        [0.6402],
        [0.3481],
        [0.3499],
        [0.6721],
        [0.5118]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0003,     0.0001,     0.0000,     0.0001,     0.0002,     0.0002,     0.0008,     0.0003,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0340, -0.0322, -0.0038,  ...,  0.0010,  0.0122,  0.0518],
        [ 0.0119,  0.0039,  0.0393,  ...,  0.0025,  0.0407,  0.0119],
        [ 0.0052, -0.0202, -0.0316,  ..., -0.0208, -0.0183,  0.0486],
        ...,
        [ 0.0215,  0.0212, -0.0047,  ..., -0.0296,  0.0209, -0.0318],
        [ 0.0042, -0.0263, -0.0264,  ...,  0.0072, -0.0110,  0.0377],
        [ 0.0394,  0.0083,  0.0130,  ...,  0.0126,  0.0107, -0.0231]], device='cuda:0', requires_grad=True)
K: tensor([ 1.7344, -0.3691, -1.3203,  1.5078,  0.8906,  1.0859,  1.9062,  1.6250,  0.9375, -2.4375, -1.5859, -2.1875,  0.4883, -1.6328,  1.2266, -1.2812,  1.1484,  1.4531, -1.8516, -2.0625,  0.8047, -1.3516, -0.6797,  0.4746,  0.5898, -1.1797, -0.9023, -1.3516, -0.1699, -1.7188, -1.3516, -0.8633,
         1.6797, -1.6953,  1.5781, -2.0469, -0.7266,  1.6328, -1.4453,  3.6562,  1.4141,  1.1484, -0.8711, -2.0938, -0.7852, -0.3496, -0.6797,  2.3594,  2.1406, -1.0078, -2.2344,  1.3047,  0.9961, -1.6797,  1.4219,  1.4062,  1.5391, -0.7461,  0.7617,  1.4688,  2.0312,  2.3438, -1.0703,  1.1016],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0712,  0.0227,  0.0193,  ..., -0.0042,  0.0057, -0.0303],
        [-0.0317, -0.0019, -0.0206,  ...,  0.0175, -0.0192,  0.0281],
        [ 0.0134, -0.0076,  0.0144,  ..., -0.0404,  0.0255, -0.0084],
        ...,
        [-0.0170,  0.0075,  0.0056,  ...,  0.0130, -0.0185,  0.0321],
        [-0.0079, -0.0177,  0.0050,  ..., -0.0363,  0.0362, -0.0168],
        [-0.0326,  0.0142, -0.0240,  ...,  0.0494, -0.0324,  0.0025]], device='cuda:0', requires_grad=True)
Q: tensor([-1.4922,  0.2119,  0.8125, -1.2812, -1.1094, -1.3438, -1.4375, -1.1562, -1.2344,  1.6250,  1.6328,  1.8281, -0.7266,  2.3125, -1.5625,  1.2422, -1.0000, -1.2969,  1.3828,  1.2422, -0.3828,  0.6289,  1.0781, -0.7539, -1.5000,  1.3984,  0.7891,  2.0781,  1.0391,  1.0703,  0.9219,  0.4453,
        -1.8828,  0.6836, -0.6406,  1.8672,  1.1406, -1.5547,  0.7695, -1.3281, -1.6797, -1.3984,  0.6094,  1.6719, -0.4902,  0.6562,  0.8398, -1.0547, -0.9414,  1.4062,  1.6953, -0.5781, -1.1484,  0.7578, -0.9453, -0.2676, -2.1094,  1.4375, -1.7422, -1.0000, -1.4062, -1.1562,  0.4316, -0.5820],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -19.0000, -15.8750, -17.0000, -19.1250, -16.1250, -14.4375, -15.8750, -14.3750, -14.8125, -13.0625, -16.5000, -18.7500, -14.5000, -14.1875],
        [  0.0000, -20.1250, -17.7500, -17.5000, -19.5000, -17.0000, -15.5625, -15.7500, -16.3750, -15.8125, -12.5625, -18.1250, -19.1250, -16.3750, -16.0000],
        [  0.0000, -21.7500, -18.8750, -19.2500, -21.1250, -18.8750, -17.1250, -17.3750, -16.5000, -17.6250, -14.6250, -19.1250, -21.0000, -16.5000, -17.0000],
        [  0.0000, -17.8750, -15.1250, -15.5625, -18.5000, -16.5000, -14.4375, -14.9375, -12.6875, -14.8750, -12.6875, -15.7500, -17.7500, -12.7500, -13.5000],
        [  0.0000, -19.8750, -16.5000, -16.8750, -20.0000, -17.6250, -15.6250, -16.3750, -15.3125, -16.1250, -13.4375, -17.5000, -19.6250, -15.3125, -15.0625],
        [  0.0000, -12.8750, -10.5625, -11.5625, -13.0625, -11.6875, -11.3125, -11.1250,  -9.1250, -11.9375,  -9.8750, -11.5625, -12.8125,  -9.1875, -10.4375],
        [  0.0000, -17.2500, -16.0000, -16.5000, -17.5000, -16.0000, -15.6250, -18.2500, -11.3125, -19.2500, -12.8125, -17.0000, -20.1250, -11.4375, -14.8125],
        [  0.0000, -17.0000, -14.4375, -13.9375, -16.5000, -14.8125, -12.8125, -12.8750, -12.3750, -11.5000, -10.9375, -14.3125, -15.7500, -12.3125, -11.8125],
        [  0.0000, -19.8750, -17.2500, -17.7500, -19.8750, -17.3750, -16.3750, -17.2500, -14.9375, -17.3750, -13.6250, -17.8750, -20.5000, -14.9375, -15.8125],
        [  0.0000, -10.8750,  -8.1250,  -9.5625, -10.5625,  -9.0000,  -8.6875,  -8.4375,  -7.0938,  -8.1875,  -8.8125,  -8.5625,  -9.6250,  -7.1875,  -7.8438],
        [  0.0000, -22.1250, -19.1250, -18.3750, -21.6250, -19.2500, -17.0000, -16.7500, -17.7500, -16.6250, -13.9375, -19.5000, -20.5000, -17.6250, -17.0000],
        [  0.0000, -22.2500, -19.7500, -20.3750, -22.0000, -19.8750, -18.7500, -21.3750, -14.9375, -21.7500, -15.7500, -20.6250, -24.3750, -15.0625, -18.1250],
        [  0.0000, -16.3750, -13.8750, -13.4375, -15.9375, -14.3125, -12.3750, -12.4375, -11.7500, -11.0625, -10.6875, -13.7500, -15.1875, -11.6875, -11.3125],
        [  0.0000, -17.2500, -15.2500, -15.0000, -17.2500, -15.5625, -13.6250, -13.5625, -13.6875, -13.9375, -11.3125, -15.7500, -16.6250, -13.5625, -13.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7340],
        [0.8875],
        [0.9557],
        [0.6546],
        [0.7858],
        [0.5403],
        [0.8215],
        [0.7053],
        [0.8206],
        [0.4820],
        [0.7142],
        [0.9015],
        [0.6472],
        [0.6564]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3770, 0.6250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.2910, 0.5977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.1016, 0.6758, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0408, 0.1494, 0.6367, 0.1045, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0178, 0.1089, 0.2969, 0.0708, 0.0510, 0.4551, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0148, 0.0488, 0.1934, 0.0250, 0.0118, 0.5977, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0101, 0.0248, 0.2773, 0.0270, 0.0061, 0.3398, 0.0747, 0.2402, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0026, 0.0060, 0.0223, 0.0063, 0.0085, 0.2715, 0.0177, 0.6484, 0.0166, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0134, 0.0200, 0.1084, 0.0231, 0.0344, 0.1157, 0.0796, 0.3184, 0.1484, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0027, 0.0015, 0.0306, 0.0050, 0.0018, 0.0400, 0.0256, 0.3418, 0.0067, 0.5312, 0.0104, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0042, 0.0138, 0.0197, 0.0059, 0.0073, 0.0137, 0.0854, 0.0330, 0.1338, 0.0474, 0.5234, 0.1123, 0.0000, 0.0000, 0.0000],
        [0.0106, 0.0203, 0.1494, 0.0149, 0.0036, 0.1738, 0.0378, 0.1270, 0.0192, 0.0825, 0.0223, 0.1504, 0.1885, 0.0000, 0.0000],
        [0.0018, 0.0031, 0.0112, 0.0022, 0.0027, 0.0845, 0.0049, 0.2139, 0.0046, 0.0223, 0.0085, 0.0162, 0.5977, 0.0242, 0.0000],
        [0.0140, 0.0214, 0.0840, 0.0079, 0.0069, 0.0315, 0.0515, 0.0942, 0.0359, 0.0518, 0.0684, 0.0713, 0.1621, 0.1367, 0.1621]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0156,  0.0221,  0.0481,  ..., -0.0160,  0.0234, -0.0245],
        [-0.0257, -0.0233,  0.0172,  ..., -0.0436, -0.0386,  0.0305],
        [-0.0369, -0.0515,  0.0331,  ..., -0.0045, -0.0284,  0.0097],
        ...,
        [ 0.0372, -0.0180, -0.0184,  ..., -0.0180, -0.0289, -0.0045],
        [ 0.0231,  0.0622,  0.0024,  ...,  0.0660, -0.0196, -0.0019],
        [ 0.0034,  0.0044, -0.0030,  ..., -0.0067,  0.0322, -0.0110]], device='cuda:0', requires_grad=True)
K: tensor([-0.5352, -1.0078, -0.7812, -0.3867,  0.2383, -0.9805,  0.2080,  2.0156,  0.3223,  0.2246,  2.0156, -1.1328,  1.5000,  1.3984,  0.8281,  0.3965,  2.2812, -0.7266,  1.2188, -1.9688, -0.2969, -1.9688,  0.4629,  1.0078, -2.5156, -0.1045, -0.0078,  0.8516, -1.7188,  0.6289, -2.3281, -0.1738,
         1.2656, -1.3828, -0.7344, -1.9844,  0.2041,  1.4688,  0.0645,  0.3711,  2.0625,  0.2539, -0.2793,  1.2812, -0.8203, -0.9609,  0.5156, -0.8320, -0.7422,  0.2422,  0.8203, -1.9844,  2.6094, -0.6055,  0.0918, -2.3750,  0.9062, -0.4062,  1.0156, -0.4434, -1.0156,  0.2988, -0.2021,  0.9805],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0152,  0.0325, -0.0582,  ..., -0.0120, -0.0420, -0.0050],
        [-0.0249,  0.0197,  0.0074,  ..., -0.0112, -0.0011, -0.0356],
        [ 0.0181,  0.0423, -0.0303,  ...,  0.0200, -0.0327,  0.0098],
        ...,
        [-0.0030, -0.0141,  0.0052,  ..., -0.0267,  0.0335, -0.0007],
        [ 0.0180, -0.0150, -0.0054,  ..., -0.0106,  0.0294,  0.0116],
        [ 0.0460,  0.0147,  0.0153,  ..., -0.0304, -0.0272,  0.0345]], device='cuda:0', requires_grad=True)
Q: tensor([-1.7031,  0.7773, -0.4219, -1.6094,  1.7500, -2.5469, -1.6562, -2.0156,  0.0713, -1.3359,  2.1719, -1.3125,  0.2773,  0.9688,  1.3594, -1.8828,  0.2109,  2.3281,  2.0625, -0.9727,  0.8164, -0.9414, -0.5156, -0.9609, -0.1514,  0.0110, -1.3906,  1.3281,  0.5312, -0.0258, -0.7422, -0.5000,
         1.0781,  1.4062,  1.2812, -0.5000, -3.4844, -0.6055,  1.6719, -0.9805,  1.4844,  0.8047,  3.3125, -0.0118, -2.2344, -1.0156,  2.0469, -1.5547, -0.6641,  1.2656,  1.2422, -0.4824, -0.0239,  0.1250,  2.2969,  0.1484,  1.4375,  0.0376,  0.3027, -0.1514,  2.1719,  1.9453,  0.4707, -1.2891],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.5078,  2.3594,  0.6289,  0.9453,  2.9531,  2.4531,  3.4844,  1.4922,  2.3438,  2.0938,  2.3594,  3.6719,  2.1875,  2.5000],
        [ 0.0000,  0.9805,  1.7031,  1.4219,  1.0234,  1.9922,  3.2500,  2.0469,  2.7656,  2.7812,  4.1250,  3.1250,  2.5312,  3.6250,  3.9844],
        [ 0.0000,  0.3105,  2.2031,  0.6875,  1.1562,  1.8984,  2.7031,  2.9375,  2.4844,  3.5312,  3.5000,  3.2188,  4.0000,  3.5781,  3.5781],
        [ 0.0000,  1.3047,  2.7500,  0.9414,  0.5391,  4.2500,  2.4688,  4.2812,  2.6562,  3.0625,  3.0781,  4.4062,  4.8750,  4.1562,  4.6250],
        [ 0.0000,  1.8047,  2.8125,  1.3828,  1.0469,  3.2344,  3.1250,  3.7500,  2.7031,  3.0312,  3.4844,  3.4062,  4.7812,  4.3125,  4.6875],
        [ 0.0000,  1.1953,  2.5625,  0.5234, -0.2256,  3.7031,  1.9688,  2.8594,  1.2031,  2.5625,  2.0312,  3.5312,  3.7812,  2.8438,  4.3125],
        [ 0.0000,  0.9023,  3.3281,  0.9883, -0.4961,  3.5156,  2.0000,  3.1719,  1.1094,  2.8438,  1.1875,  3.6875,  3.5156,  2.4375,  4.0312],
        [ 0.0000,  0.8555,  2.1562,  0.8984,  1.2031,  4.6562,  1.9297,  5.5312,  1.8672,  3.4062,  2.5938,  2.9688,  6.6250,  3.4688,  3.7656],
        [ 0.0000,  0.3984,  2.0938,  0.5391,  0.9414,  2.1562,  1.7734,  3.1562,  2.4062,  2.3281,  2.6094,  2.8125,  4.6875,  3.9844,  3.6094],
        [ 0.0000, -0.5391,  2.4375,  0.6289, -0.3691,  2.7188,  2.2656,  4.8438,  0.9258,  5.3125,  1.3672,  3.2500,  6.1562,  2.6406,  3.5156],
        [ 0.0000,  1.1875,  1.5469,  0.3418,  0.5508,  1.1797,  3.0156,  2.0625,  3.4688,  2.4219,  4.8125,  3.2812,  3.0938,  5.0312,  4.7500],
        [ 0.0000,  0.6523,  2.6562,  0.3398, -1.0938,  2.7969,  1.2734,  2.4844,  0.5938,  2.0469,  0.7461,  2.6562,  2.8750,  2.0312,  3.1562],
        [ 0.0000,  0.5234,  1.8203,  0.1670,  0.3926,  3.8438,  0.9922,  4.7812,  0.9297,  2.5000,  1.5391,  2.1875,  5.8125,  2.5938,  3.0156],
        [ 0.0000,  0.4258,  1.7969, -0.5742, -0.7070,  0.8125,  1.3047,  1.9062,  0.9453,  1.3125,  1.5938,  1.6250,  2.4531,  2.2812,  2.4531]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4351],
        [0.2033],
        [0.1529],
        [0.0796],
        [0.0736],
        [0.0483],
        [0.0585],
        [0.0200],
        [0.0233],
        [0.0119],
        [0.0115],
        [0.0248],
        [0.0112],
        [0.0147]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.8477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0304, 0.1758, 0.7930, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0193, 0.1226, 0.1514, 0.7070, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.4297, 0.1631, 0.0645, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.1230, 0.1465, 0.0913, 0.0923, 0.4727, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0225, 0.1206, 0.0908, 0.1040, 0.0903, 0.1836, 0.3887, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0109, 0.0354, 0.0282, 0.0603, 0.1240, 0.2393, 0.1748, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.1270, 0.0688, 0.0732, 0.0645, 0.1245, 0.2256, 0.1123, 0.0977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0271, 0.0405, 0.0588, 0.1138, 0.0508, 0.1621, 0.1445, 0.1934, 0.1094, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.0835, 0.0306, 0.0344, 0.0162, 0.0615, 0.1533, 0.0459, 0.0317, 0.1030, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0344, 0.0713, 0.1338, 0.0732, 0.0776, 0.0510, 0.1045, 0.1455, 0.0942, 0.0933, 0.0342, 0.0000, 0.0000, 0.0000],
        [0.0549, 0.0253, 0.0137, 0.0398, 0.0139, 0.1079, 0.0947, 0.0923, 0.0520, 0.0718, 0.1895, 0.0090, 0.2354, 0.0000, 0.0000],
        [0.0547, 0.0669, 0.0297, 0.0356, 0.0289, 0.0603, 0.1089, 0.0393, 0.0540, 0.0664, 0.2031, 0.0354, 0.1504, 0.0669, 0.0000],
        [0.0054, 0.0364, 0.0571, 0.1826, 0.0405, 0.0825, 0.1406, 0.1484, 0.0347, 0.0289, 0.0559, 0.0167, 0.0942, 0.0281, 0.0476]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0041,  0.0003,  0.0197,  ..., -0.0215,  0.0211,  0.0227],
        [ 0.0134, -0.0002, -0.0206,  ..., -0.0129, -0.0234, -0.0071],
        [-0.0131, -0.0336, -0.0023,  ...,  0.0323, -0.0321,  0.0023],
        ...,
        [-0.0128,  0.0129,  0.0142,  ..., -0.0281, -0.0508,  0.0239],
        [-0.0270, -0.0138, -0.0191,  ..., -0.0125, -0.0258,  0.0004],
        [ 0.0031,  0.0174,  0.0174,  ...,  0.0185,  0.0023,  0.0234]], device='cuda:0', requires_grad=True)
K: tensor([-0.6914, -0.1543,  0.2656,  0.5195, -0.2139, -0.0991,  0.1982,  0.5586, -1.4609,  0.0444, -0.1348, -1.1094, -0.2578,  1.5391, -0.5039,  0.4062,  1.2344,  0.3945,  1.4531,  0.3066,  0.5469, -1.0547,  0.7461,  0.6719, -0.5586,  0.6836, -0.3613,  0.4727,  1.5234, -1.2109,  0.2832, -1.1406,
        -0.0483,  0.0211, -0.6211,  1.1797,  0.1738, -0.4277, -0.1611, -0.2148,  0.0713, -0.4512, -0.8086,  0.6133, -0.1777,  0.4961, -1.4141, -1.4922, -0.3711,  0.3184,  0.5078, -0.9688, -0.8945,  1.0469,  0.2451, -1.4219,  0.0122, -0.8203, -0.8984, -1.0312,  1.0234,  0.0304, -0.2656,  1.2656],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0364,  0.0309, -0.0297,  ...,  0.0116,  0.0084,  0.0200],
        [-0.0220, -0.0001, -0.0142,  ..., -0.0287, -0.0117, -0.0374],
        [-0.0154, -0.0096, -0.0071,  ..., -0.0151, -0.0005,  0.0005],
        ...,
        [ 0.0092,  0.0084, -0.0353,  ..., -0.0169,  0.0237,  0.0208],
        [-0.0053, -0.0115, -0.0306,  ...,  0.0026, -0.0097,  0.0350],
        [-0.0012,  0.0218, -0.0027,  ..., -0.0140, -0.0158, -0.0150]], device='cuda:0', requires_grad=True)
Q: tensor([-1.3359, -1.3047, -1.1797, -1.0234, -0.5078, -2.3125,  0.0588,  1.2500, -0.1309, -1.0938, -0.4375,  0.9570, -0.2373,  1.5469,  0.0972, -1.4531,  1.0156, -1.1484,  1.7578, -0.3145,  0.2373, -1.9297, -0.5977,  0.8242, -0.9102,  0.6211,  0.4531,  0.8203,  1.4062,  0.2988, -0.6523, -0.2734,
         0.3047, -0.6914, -0.8867, -0.6797, -0.6680, -1.1797,  1.1406,  0.5820,  1.2891,  0.7422, -1.0391,  0.0938, -1.9531,  0.4531, -0.1157,  0.3652, -0.2578, -0.3203, -0.0292,  0.0791, -0.5078,  0.0052,  0.6289, -0.2617, -0.4883, -2.6250, -0.0913, -0.5664,  0.2773, -1.3750, -0.3418,  1.4922],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.7266,  1.5469,  2.8438,  0.9062,  1.0859,  2.1094,  1.7188, -0.8867,  0.5859, -1.0781, -1.5000,  1.0938, -1.9141,  1.4609],
        [ 0.0000,  1.7578,  3.2656,  4.3125,  3.9062,  2.5625,  2.8438,  3.7656,  3.5156,  1.4062,  2.1875,  0.7734,  2.3906,  2.8125,  2.0781],
        [ 0.0000,  1.8516,  2.0625,  3.6094,  3.0000,  3.2344,  3.6250,  4.0312,  3.1094,  1.8594,  2.8906,  0.3535,  2.7656,  2.8594,  2.6094],
        [ 0.0000,  1.6328,  0.6602, -0.2656,  1.1250,  1.8594,  0.4160,  0.4863, -0.3906,  0.0962,  0.0693,  0.8438,  0.6641, -0.7500,  0.7461],
        [ 0.0000,  0.4863,  0.6602,  0.1904,  0.1982,  1.8281,  0.5312,  0.8945, -0.6484,  0.7383,  0.9805,  0.5977,  0.8672, -1.2109, -0.0410],
        [ 0.0000,  1.6797,  1.3984,  1.5312,  1.3906,  2.1094,  2.8438,  3.2969,  1.1406,  1.5078,  1.7188,  1.1641,  1.2188,  0.6211,  1.8906],
        [ 0.0000,  1.1797,  0.9492,  1.7109,  2.4375,  3.0938,  2.7656,  3.3906,  3.3125,  1.6719,  3.0469,  0.3926,  2.0625,  3.0000,  1.9141],
        [ 0.0000,  0.1738, -0.4355, -0.3770, -0.5000,  0.1562,  0.7500,  0.0537, -0.0864,  0.4551,  0.9062, -0.4512,  0.7930, -0.3281,  0.4238],
        [ 0.0000,  0.4062,  0.7773,  1.4297,  0.6250,  1.7891,  1.6797,  1.9688,  1.3984,  1.2969,  3.3125,  0.4785,  2.5781,  1.6172,  0.8945],
        [ 0.0000, -0.6836, -1.6875, -1.5703, -2.3281, -0.9922, -0.0786, -1.2891, -1.6562, -0.4746,  0.5039, -0.9336,  0.8828, -1.1641, -0.4980],
        [ 0.0000, -0.9258, -0.1953,  0.4395, -0.1641, -0.1064, -0.5273,  0.1865,  0.5156,  0.0874,  0.0757, -0.9297,  0.5938,  0.1206, -0.2354],
        [ 0.0000, -0.7734, -1.3906, -0.3203, -1.3750,  0.6797,  0.5469,  0.5234, -0.0530,  0.2695,  1.2344, -1.8125,  1.4531,  0.4102,  0.4453],
        [ 0.0000,  0.2021, -0.6094, -0.4277, -0.6328,  0.1001,  0.6914, -0.3301, -0.0118,  0.1982,  1.3125, -0.4316,  1.0078,  0.2031,  0.6055],
        [ 0.0000,  1.9141,  2.3594,  3.5312,  2.0156,  2.7344,  3.2656,  3.3125,  1.8672,  1.6797,  2.3438,  1.1328,  2.8594,  1.6562,  2.1719]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2881],
        [0.0934],
        [0.1266],
        [0.2490],
        [0.1057],
        [0.0762],
        [0.0241],
        [0.1345],
        [0.0316],
        [0.0610],
        [0.0580],
        [0.0313],
        [0.0428],
        [0.0081]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1367 a:0.0869 and:0.1553 and:0.1172atoes:0.1128,:0.6992 a:0.0513ery:0.0488)
ery
------
		( a:0.0869 and:0.1553 and:0.1172atoes:0.1128,:0.6992 a:0.0513ery:0.0488,:0.1055)
, and they are also a great way to get rid of the world.
@ 2050 train 5.0869 , allloss: 5.0879, dt: 1695.92ms, fracRes: 0.2794, norm(attn): 0.1709, norm(output): 0.3438, norm(x): 0.3084, norm(y): 1.0095, norm:2.0931, tok/sec: 77286.78, flops:81.11, batch-reuse:1
@ 2051 train 5.1881 , allloss: 5.1896, dt: 1292.11ms, fracRes: 0.2787, norm(attn): 0.1699, norm(output): 0.3438, norm(x): 0.3091, norm(y): 1.0095, norm:1.8902, tok/sec: 101440.15, flops:106.46, batch-reuse:1
@ 2052 train 5.1083 , allloss: 5.1090, dt: 1306.88ms, fracRes: 0.2815, norm(attn): 0.1689, norm(output): 0.3438, norm(x): 0.3086, norm(y): 1.0095, norm:2.0725, tok/sec: 100294.20, flops:105.26, batch-reuse:1
@ 2053 train 5.1292 , allloss: 5.1301, dt: 1310.93ms, fracRes: 0.2790, norm(attn): 0.1680, norm(output): 0.3438, norm(x): 0.3088, norm(y): 1.0095, norm:2.2340, tok/sec: 99984.33, flops:104.94, batch-reuse:1
@ 2054 train 5.0829 , allloss: 5.0845, dt: 1280.79ms, fracRes: 0.2774, norm(attn): 0.1709, norm(output): 0.3438, norm(x): 0.3090, norm(y): 1.0094, norm:1.8157, tok/sec: 102337.10, flops:107.40, batch-reuse:1
@ 2055 train 5.1443 , allloss: 5.1453, dt: 1300.17ms, fracRes: 0.2772, norm(attn): 0.1680, norm(output): 0.3438, norm(x): 0.3093, norm(y): 1.0096, norm:2.1894, tok/sec: 100811.10, flops:105.80, batch-reuse:1
@ 2056 train 5.1356 , allloss: 5.1365, dt: 1280.46ms, fracRes: 0.2772, norm(attn): 0.1709, norm(output): 0.3457, norm(x): 0.3103, norm(y): 1.0095, norm:1.8520, tok/sec: 102363.24, flops:107.43, batch-reuse:1
@ 2057 train 5.1959 , allloss: 5.1982, dt: 1307.77ms, fracRes: 0.2765, norm(attn): 0.1729, norm(output): 0.3457, norm(x): 0.3099, norm(y): 1.0095, norm:1.8874, tok/sec: 100225.87, flops:105.19, batch-reuse:1
@ 2058 train 5.1336 , allloss: 5.1347, dt: 1286.82ms, fracRes: 0.2803, norm(attn): 0.1709, norm(output): 0.3457, norm(x): 0.3092, norm(y): 1.0095, norm:2.2181, tok/sec: 101857.28, flops:106.90, batch-reuse:1
@ 2059 train 5.0656 , allloss: 5.0671, dt: 1287.79ms, fracRes: 0.2769, norm(attn): 0.1719, norm(output): 0.3438, norm(x): 0.3098, norm(y): 1.0094, norm:2.0235, tok/sec: 101780.87, flops:106.82, batch-reuse:1
@ 2060 train 5.0755 , allloss: 5.0765, dt: 1286.15ms, fracRes: 0.2782, norm(attn): 0.1689, norm(output): 0.3438, norm(x): 0.3097, norm(y): 1.0095, norm:1.6850, tok/sec: 101910.60, flops:106.96, batch-reuse:1
@ 2061 train 5.1354 , allloss: 5.1372, dt: 1333.61ms, fracRes: 0.2771, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.3117, norm(y): 1.0096, norm:2.3980, tok/sec: 98283.36, flops:103.15, batch-reuse:1
@ 2062 train 5.0662 , allloss: 5.0677, dt: 1306.88ms, fracRes: 0.2752, norm(attn): 0.1719, norm(output): 0.3457, norm(x): 0.3115, norm(y): 1.0096, norm:2.0681, tok/sec: 100294.10, flops:105.26, batch-reuse:1
@ 2063 train 5.1720 , allloss: 5.1741, dt: 1305.87ms, fracRes: 0.2743, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.3119, norm(y): 1.0095, norm:2.4353, tok/sec: 100371.29, flops:105.34, batch-reuse:1
@ 2064 train 5.0771 , allloss: 5.0783, dt: 1313.24ms, fracRes: 0.2727, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.3109, norm(y): 1.0094, norm:2.0838, tok/sec: 99808.01, flops:104.75, batch-reuse:1
@ 2065 train 5.7300 , allloss: 5.7308, dt: 1290.46ms, fracRes: 0.2745, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.3101, norm(y): 1.0095, norm:2.2560, tok/sec: 101570.26, flops:106.60, batch-reuse:1
@ 2066 train 5.1981 , allloss: 5.1989, dt: 1308.98ms, fracRes: 0.2717, norm(attn): 0.1797, norm(output): 0.3438, norm(x): 0.3122, norm(y): 1.0095, norm:3.4141, tok/sec: 100132.76, flops:105.09, batch-reuse:1
@ 2067 train 5.1229 , allloss: 5.1242, dt: 1284.28ms, fracRes: 0.2686, norm(attn): 0.1807, norm(output): 0.3457, norm(x): 0.3133, norm(y): 1.0094, norm:2.2221, tok/sec: 102058.72, flops:107.11, batch-reuse:1
@ 2068 train 5.1955 , allloss: 5.1976, dt: 1308.55ms, fracRes: 0.2737, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.3112, norm(y): 1.0096, norm:2.3181, tok/sec: 100165.73, flops:105.13, batch-reuse:1
@ 2069 train 5.1739 , allloss: 5.1781, dt: 1292.18ms, fracRes: 0.2790, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.3107, norm(y): 1.0096, norm:2.4036, tok/sec: 101434.65, flops:106.46, batch-reuse:1
@ 2070 train 5.2612 , allloss: 5.2654, dt: 1293.68ms, fracRes: 0.2771, norm(attn): 0.1719, norm(output): 0.3457, norm(x): 0.3146, norm(y): 1.0095, norm:2.3086, tok/sec: 101316.88, flops:106.33, batch-reuse:1
@ 2071 train 5.1892 , allloss: 5.1914, dt: 1321.28ms, fracRes: 0.2818, norm(attn): 0.1680, norm(output): 0.3457, norm(x): 0.3127, norm(y): 1.0096, norm:2.1291, tok/sec: 99200.95, flops:104.11, batch-reuse:1
@ 2072 train 5.1446 , allloss: 5.1460, dt: 1331.05ms, fracRes: 0.2790, norm(attn): 0.1699, norm(output): 0.3457, norm(x): 0.3127, norm(y): 1.0095, norm:2.0607, tok/sec: 98472.29, flops:103.35, batch-reuse:1
@ 2073 train 5.1018 , allloss: 5.1032, dt: 1309.90ms, fracRes: 0.2776, norm(attn): 0.1689, norm(output): 0.3457, norm(x): 0.3133, norm(y): 1.0095, norm:1.8105, tok/sec: 100062.87, flops:105.02, batch-reuse:1
@ 2074 train 5.1550 , allloss: 5.1577, dt: 1337.31ms, fracRes: 0.2767, norm(attn): 0.1680, norm(output): 0.3457, norm(x): 0.3134, norm(y): 1.0096, norm:1.9652, tok/sec: 98011.80, flops:102.87, batch-reuse:1
@ 2075 train 5.0950 , allloss: 5.0961, dt: 1330.14ms, fracRes: 0.2776, norm(attn): 0.1709, norm(output): 0.3477, norm(x): 0.3138, norm(y): 1.0096, norm:1.9492, tok/sec: 98540.17, flops:103.42, batch-reuse:1
@ 2076 train 5.0672 , allloss: 5.0684, dt: 1299.90ms, fracRes: 0.2758, norm(attn): 0.1719, norm(output): 0.3477, norm(x): 0.3142, norm(y): 1.0096, norm:2.1540, tok/sec: 100832.61, flops:105.83, batch-reuse:1
@ 2077 train 5.1154 , allloss: 5.1162, dt: 1301.45ms, fracRes: 0.2775, norm(attn): 0.1709, norm(output): 0.3457, norm(x): 0.3126, norm(y): 1.0095, norm:1.4265, tok/sec: 100712.10, flops:105.70, batch-reuse:1
@ 2078 train 5.2837 , allloss: 5.2849, dt: 1280.58ms, fracRes: 0.2815, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.3119, norm(y): 1.0096, norm:2.2383, tok/sec: 102353.94, flops:107.42, batch-reuse:1
@ 2079 train 5.1897 , allloss: 5.1925, dt: 1304.31ms, fracRes: 0.2839, norm(attn): 0.1660, norm(output): 0.3457, norm(x): 0.3118, norm(y): 1.0097, norm:2.5405, tok/sec: 100491.64, flops:105.47, batch-reuse:1
@ 2080 train 5.1768 , allloss: 5.1783, dt: 1284.81ms, fracRes: 0.2814, norm(attn): 0.1709, norm(output): 0.3457, norm(x): 0.3129, norm(y): 1.0096, norm:1.9649, tok/sec: 102016.86, flops:107.07, batch-reuse:1
@ 2081 train 5.1782 , allloss: 5.1798, dt: 1335.25ms, fracRes: 0.2811, norm(attn): 0.1709, norm(output): 0.3457, norm(x): 0.3138, norm(y): 1.0095, norm:1.7543, tok/sec: 98162.58, flops:103.02, batch-reuse:1
@ 2082 train 5.1070 , allloss: 5.1097, dt: 1333.04ms, fracRes: 0.2834, norm(attn): 0.1680, norm(output): 0.3457, norm(x): 0.3118, norm(y): 1.0096, norm:1.9745, tok/sec: 98325.72, flops:103.19, batch-reuse:1
@ 2083 train 5.0941 , allloss: 5.0960, dt: 1343.90ms, fracRes: 0.2832, norm(attn): 0.1689, norm(output): 0.3496, norm(x): 0.3137, norm(y): 1.0096, norm:2.2149, tok/sec: 97530.81, flops:102.36, batch-reuse:1
@ 2084 train 5.2214 , allloss: 5.2228, dt: 1310.64ms, fracRes: 0.2837, norm(attn): 0.1699, norm(output): 0.3457, norm(x): 0.3112, norm(y): 1.0095, norm:1.8948, tok/sec: 100006.02, flops:104.96, batch-reuse:1
@ 2085 train 5.1555 , allloss: 5.1563, dt: 1308.48ms, fracRes: 0.2844, norm(attn): 0.1699, norm(output): 0.3457, norm(x): 0.3121, norm(y): 1.0096, norm:2.2557, tok/sec: 100171.13, flops:105.13, batch-reuse:1
@ 2086 train 5.0576 , allloss: 5.0587, dt: 1329.77ms, fracRes: 0.2846, norm(attn): 0.1709, norm(output): 0.3438, norm(x): 0.3126, norm(y): 1.0096, norm:2.0882, tok/sec: 98567.20, flops:103.45, batch-reuse:1
@ 2087 train 5.0845 , allloss: 5.0871, dt: 1296.48ms, fracRes: 0.2838, norm(attn): 0.1689, norm(output): 0.3457, norm(x): 0.3131, norm(y): 1.0096, norm:2.0164, tok/sec: 101098.18, flops:106.10, batch-reuse:1
@ 2088 train 5.1557 , allloss: 5.1567, dt: 1304.24ms, fracRes: 0.2833, norm(attn): 0.1680, norm(output): 0.3477, norm(x): 0.3143, norm(y): 1.0096, norm:1.9303, tok/sec: 100497.01, flops:105.47, batch-reuse:1
@ 2089 train 5.0857 , allloss: 5.0867, dt: 1333.93ms, fracRes: 0.2821, norm(attn): 0.1689, norm(output): 0.3496, norm(x): 0.3150, norm(y): 1.0096, norm:1.7738, tok/sec: 98259.87, flops:103.13, batch-reuse:1
@ 2090 train 5.1166 , allloss: 5.1173, dt: 1344.75ms, fracRes: 0.2822, norm(attn): 0.1709, norm(output): 0.3477, norm(x): 0.3147, norm(y): 1.0096, norm:2.0434, tok/sec: 97469.58, flops:102.30, batch-reuse:1
@ 2091 train 5.0819 , allloss: 5.0827, dt: 1338.94ms, fracRes: 0.2818, norm(attn): 0.1709, norm(output): 0.3457, norm(x): 0.3144, norm(y): 1.0096, norm:1.8778, tok/sec: 97892.06, flops:102.74, batch-reuse:1
@ 2092 train 5.1143 , allloss: 5.1152, dt: 1339.48ms, fracRes: 0.2811, norm(attn): 0.1729, norm(output): 0.3496, norm(x): 0.3149, norm(y): 1.0096, norm:2.0982, tok/sec: 97853.23, flops:102.70, batch-reuse:1
@ 2093 train 5.0420 , allloss: 5.0429, dt: 1319.17ms, fracRes: 0.2781, norm(attn): 0.1719, norm(output): 0.3496, norm(x): 0.3162, norm(y): 1.0096, norm:1.8575, tok/sec: 99359.27, flops:104.28, batch-reuse:1
@ 2094 train 5.0688 , allloss: 5.0699, dt: 1290.30ms, fracRes: 0.2784, norm(attn): 0.1738, norm(output): 0.3496, norm(x): 0.3170, norm(y): 1.0096, norm:1.8859, tok/sec: 101582.66, flops:106.61, batch-reuse:1
@ 2095 train 4.9844 , allloss: 4.9856, dt: 1307.31ms, fracRes: 0.2793, norm(attn): 0.1738, norm(output): 0.3457, norm(x): 0.3139, norm(y): 1.0097, norm:1.7894, tok/sec: 100260.72, flops:105.23, batch-reuse:1
@ 2096 train 5.1453 , allloss: 5.1463, dt: 1303.25ms, fracRes: 0.2750, norm(attn): 0.1738, norm(output): 0.3477, norm(x): 0.3169, norm(y): 1.0096, norm:1.8004, tok/sec: 100573.03, flops:105.55, batch-reuse:1
@ 2097 train 5.0408 , allloss: 5.0426, dt: 1315.87ms, fracRes: 0.2761, norm(attn): 0.1758, norm(output): 0.3457, norm(x): 0.3169, norm(y): 1.0097, norm:1.8904, tok/sec: 99608.69, flops:104.54, batch-reuse:1
@ 2098 train 4.9796 , allloss: 4.9806, dt: 1309.19ms, fracRes: 0.2787, norm(attn): 0.1758, norm(output): 0.3457, norm(x): 0.3164, norm(y): 1.0097, norm:1.9047, tok/sec: 100116.75, flops:105.07, batch-reuse:1
@ 2099 train 5.0645 , allloss: 5.0667, dt: 1336.78ms, fracRes: 0.2806, norm(attn): 0.1748, norm(output): 0.3457, norm(x): 0.3159, norm(y): 1.0096, norm:1.8245, tok/sec: 98050.66, flops:102.91, batch-reuse:1
@ 2100 train 5.0693 , allloss: 5.0702, dt: 1343.83ms, fracRes: 0.2838, norm(attn): 0.1719, norm(output): 0.3457, norm(x): 0.3156, norm(y): 1.0097, norm:2.1274, tok/sec: 97536.43, flops:102.37, batch-reuse:1
@ 2101 train 5.0056 , allloss: 5.0063, dt: 1308.19ms, fracRes: 0.2847, norm(attn): 0.1738, norm(output): 0.3457, norm(x): 0.3140, norm(y): 1.0097, norm:1.7265, tok/sec: 100193.44, flops:105.15, batch-reuse:1
@ 2102 train 5.0483 , allloss: 5.0490, dt: 1340.78ms, fracRes: 0.2839, norm(attn): 0.1729, norm(output): 0.3457, norm(x): 0.3152, norm(y): 1.0096, norm:1.7723, tok/sec: 97758.32, flops:102.60, batch-reuse:1
@ 2103 train 5.0140 , allloss: 5.0149, dt: 1336.87ms, fracRes: 0.2874, norm(attn): 0.1719, norm(output): 0.3457, norm(x): 0.3144, norm(y): 1.0097, norm:1.8412, tok/sec: 98044.15, flops:102.90, batch-reuse:1
@ 2104 train 5.0439 , allloss: 5.0448, dt: 1291.23ms, fracRes: 0.2861, norm(attn): 0.1719, norm(output): 0.3457, norm(x): 0.3153, norm(y): 1.0096, norm:1.8001, tok/sec: 101509.59, flops:106.54, batch-reuse:1
@ 2105 train 5.1022 , allloss: 5.1030, dt: 1297.75ms, fracRes: 0.2878, norm(attn): 0.1709, norm(output): 0.3477, norm(x): 0.3142, norm(y): 1.0097, norm:1.9543, tok/sec: 100999.70, flops:106.00, batch-reuse:1
@ 2106 train 5.0443 , allloss: 5.0453, dt: 1287.98ms, fracRes: 0.2849, norm(attn): 0.1709, norm(output): 0.3477, norm(x): 0.3151, norm(y): 1.0096, norm:1.7584, tok/sec: 101765.59, flops:106.80, batch-reuse:1
@ 2107 train 5.0721 , allloss: 5.0732, dt: 1297.84ms, fracRes: 0.2865, norm(attn): 0.1719, norm(output): 0.3457, norm(x): 0.3159, norm(y): 1.0097, norm:2.1278, tok/sec: 100992.69, flops:105.99, batch-reuse:1
@ 2108 train 5.1788 , allloss: 5.1798, dt: 1312.19ms, fracRes: 0.2895, norm(attn): 0.1719, norm(output): 0.3457, norm(x): 0.3153, norm(y): 1.0097, norm:1.7237, tok/sec: 99887.90, flops:104.83, batch-reuse:1
@ 2109 train 5.0935 , allloss: 5.0944, dt: 1322.11ms, fracRes: 0.2890, norm(attn): 0.1709, norm(output): 0.3457, norm(x): 0.3146, norm(y): 1.0097, norm:1.9229, tok/sec: 99138.84, flops:104.05, batch-reuse:1
@ 2110 train 5.0010 , allloss: 5.0018, dt: 1296.49ms, fracRes: 0.2840, norm(attn): 0.1709, norm(output): 0.3496, norm(x): 0.3162, norm(y): 1.0096, norm:1.7427, tok/sec: 101097.81, flops:106.10, batch-reuse:1
@ 2111 train 4.9894 , allloss: 4.9901, dt: 1307.83ms, fracRes: 0.2851, norm(attn): 0.1699, norm(output): 0.3457, norm(x): 0.3140, norm(y): 1.0097, norm:1.9691, tok/sec: 100220.93, flops:105.18, batch-reuse:1
@ 2112 train 5.0268 , allloss: 5.0275, dt: 1321.36ms, fracRes: 0.2841, norm(attn): 0.1709, norm(output): 0.3496, norm(x): 0.3151, norm(y): 1.0098, norm:2.1488, tok/sec: 99194.76, flops:104.11, batch-reuse:1
@ 2113 train 5.0428 , allloss: 5.0434, dt: 1311.69ms, fracRes: 0.2836, norm(attn): 0.1719, norm(output): 0.3516, norm(x): 0.3158, norm(y): 1.0098, norm:2.0943, tok/sec: 99926.12, flops:104.87, batch-reuse:1
@ 2114 train 5.0953 , allloss: 5.0964, dt: 1286.60ms, fracRes: 0.2839, norm(attn): 0.1719, norm(output): 0.3477, norm(x): 0.3158, norm(y): 1.0097, norm:1.9885, tok/sec: 101875.06, flops:106.92, batch-reuse:1
@ 2115 train 5.0682 , allloss: 5.0695, dt: 1292.73ms, fracRes: 0.2831, norm(attn): 0.1729, norm(output): 0.3496, norm(x): 0.3169, norm(y): 1.0096, norm:1.7641, tok/sec: 101391.96, flops:106.41, batch-reuse:1
@ 2116 train 5.0905 , allloss: 5.0913, dt: 1300.54ms, fracRes: 0.2857, norm(attn): 0.1699, norm(output): 0.3535, norm(x): 0.3160, norm(y): 1.0097, norm:1.9306, tok/sec: 100783.05, flops:105.77, batch-reuse:1
@ 2117 train 5.0451 , allloss: 5.0457, dt: 1326.78ms, fracRes: 0.2855, norm(attn): 0.1699, norm(output): 0.3516, norm(x): 0.3166, norm(y): 1.0098, norm:1.9727, tok/sec: 98789.31, flops:103.68, batch-reuse:1
@ 2118 train 5.0098 , allloss: 5.0109, dt: 1292.18ms, fracRes: 0.2844, norm(attn): 0.1699, norm(output): 0.3535, norm(x): 0.3172, norm(y): 1.0097, norm:1.8896, tok/sec: 101434.46, flops:106.46, batch-reuse:1
@ 2119 train 5.1068 , allloss: 5.1078, dt: 1295.85ms, fracRes: 0.2835, norm(attn): 0.1709, norm(output): 0.3535, norm(x): 0.3190, norm(y): 1.0096, norm:1.9842, tok/sec: 101147.17, flops:106.16, batch-reuse:1
@ 2120 train 5.0154 , allloss: 5.0166, dt: 1294.45ms, fracRes: 0.2854, norm(attn): 0.1709, norm(output): 0.3516, norm(x): 0.3187, norm(y): 1.0097, norm:1.7521, tok/sec: 101256.70, flops:106.27, batch-reuse:1
@ 2121 train 5.0982 , allloss: 5.0992, dt: 1323.05ms, fracRes: 0.2843, norm(attn): 0.1709, norm(output): 0.3535, norm(x): 0.3196, norm(y): 1.0097, norm:2.2342, tok/sec: 99068.42, flops:103.97, batch-reuse:1
@ 2122 train 5.0337 , allloss: 5.0346, dt: 1338.26ms, fracRes: 0.2824, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3193, norm(y): 1.0097, norm:1.7897, tok/sec: 97942.18, flops:102.79, batch-reuse:1
@ 2123 train 5.0777 , allloss: 5.0789, dt: 1348.41ms, fracRes: 0.2823, norm(attn): 0.1719, norm(output): 0.3516, norm(x): 0.3179, norm(y): 1.0097, norm:1.7648, tok/sec: 97205.21, flops:102.02, batch-reuse:1
@ 2124 train 5.0007 , allloss: 5.0015, dt: 1277.09ms, fracRes: 0.2823, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3190, norm(y): 1.0097, norm:1.8639, tok/sec: 102633.06, flops:107.72, batch-reuse:1
@ 2125 train 5.0613 , allloss: 5.0624, dt: 1308.26ms, fracRes: 0.2850, norm(attn): 0.1709, norm(output): 0.3516, norm(x): 0.3181, norm(y): 1.0097, norm:1.7420, tok/sec: 100188.39, flops:105.15, batch-reuse:1
@ 2126 train 5.0200 , allloss: 5.0211, dt: 1305.58ms, fracRes: 0.2848, norm(attn): 0.1709, norm(output): 0.3516, norm(x): 0.3180, norm(y): 1.0097, norm:1.9127, tok/sec: 100394.05, flops:105.37, batch-reuse:1
@ 2127 train 5.0554 , allloss: 5.0574, dt: 1331.88ms, fracRes: 0.2847, norm(attn): 0.1719, norm(output): 0.3516, norm(x): 0.3187, norm(y): 1.0097, norm:1.7886, tok/sec: 98410.96, flops:103.28, batch-reuse:1
@ 2128 train 4.9787 , allloss: 4.9795, dt: 1322.54ms, fracRes: 0.2838, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3187, norm(y): 1.0097, norm:2.0494, tok/sec: 99106.10, flops:104.01, batch-reuse:1
@ 2129 train 5.0401 , allloss: 5.0412, dt: 1290.18ms, fracRes: 0.2844, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3195, norm(y): 1.0097, norm:1.9376, tok/sec: 101592.07, flops:106.62, batch-reuse:1
@ 2130 train 4.9723 , allloss: 4.9735, dt: 1282.91ms, fracRes: 0.2892, norm(attn): 0.1689, norm(output): 0.3516, norm(x): 0.3170, norm(y): 1.0099, norm:1.8518, tok/sec: 102168.12, flops:107.23, batch-reuse:1
@ 2131 train 5.0665 , allloss: 5.0672, dt: 1295.25ms, fracRes: 0.2872, norm(attn): 0.1699, norm(output): 0.3516, norm(x): 0.3177, norm(y): 1.0098, norm:2.1029, tok/sec: 101194.01, flops:106.21, batch-reuse:1
@ 2132 train 5.1209 , allloss: 5.1218, dt: 1316.23ms, fracRes: 0.2866, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3206, norm(y): 1.0097, norm:1.7644, tok/sec: 99581.75, flops:104.51, batch-reuse:1
@ 2133 train 5.0524 , allloss: 5.0534, dt: 1310.42ms, fracRes: 0.2920, norm(attn): 0.1699, norm(output): 0.3496, norm(x): 0.3159, norm(y): 1.0098, norm:1.8568, tok/sec: 100023.27, flops:104.98, batch-reuse:1
@ 2134 train 5.0013 , allloss: 5.0026, dt: 1269.08ms, fracRes: 0.2904, norm(attn): 0.1709, norm(output): 0.3496, norm(x): 0.3163, norm(y): 1.0098, norm:1.9457, tok/sec: 103281.05, flops:108.40, batch-reuse:1
@ 2135 train 5.0702 , allloss: 5.0722, dt: 1305.76ms, fracRes: 0.2878, norm(attn): 0.1729, norm(output): 0.3496, norm(x): 0.3171, norm(y): 1.0097, norm:1.8805, tok/sec: 100379.88, flops:105.35, batch-reuse:1
@ 2136 train 4.9882 , allloss: 4.9888, dt: 1335.93ms, fracRes: 0.2856, norm(attn): 0.1719, norm(output): 0.3496, norm(x): 0.3172, norm(y): 1.0098, norm:1.9843, tok/sec: 98112.97, flops:102.97, batch-reuse:1
@ 2137 train 4.9383 , allloss: 4.9391, dt: 1338.47ms, fracRes: 0.2849, norm(attn): 0.1729, norm(output): 0.3516, norm(x): 0.3191, norm(y): 1.0098, norm:1.7659, tok/sec: 97926.44, flops:102.78, batch-reuse:1
@ 2138 train 4.9892 , allloss: 4.9900, dt: 1306.17ms, fracRes: 0.2831, norm(attn): 0.1738, norm(output): 0.3535, norm(x): 0.3209, norm(y): 1.0097, norm:1.9675, tok/sec: 100348.66, flops:105.32, batch-reuse:1
@ 2139 train 5.0516 , allloss: 5.0527, dt: 1313.91ms, fracRes: 0.2869, norm(attn): 0.1709, norm(output): 0.3516, norm(x): 0.3189, norm(y): 1.0098, norm:1.9103, tok/sec: 99757.47, flops:104.70, batch-reuse:1
@ 2140 train 5.0202 , allloss: 5.0212, dt: 1291.10ms, fracRes: 0.2833, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3190, norm(y): 1.0098, norm:1.8943, tok/sec: 101519.84, flops:106.55, batch-reuse:1
@ 2141 train 4.9806 , allloss: 4.9814, dt: 1308.18ms, fracRes: 0.2791, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3204, norm(y): 1.0097, norm:2.0004, tok/sec: 100194.50, flops:105.16, batch-reuse:1
@ 2142 train 4.9453 , allloss: 4.9461, dt: 1299.71ms, fracRes: 0.2802, norm(attn): 0.1748, norm(output): 0.3535, norm(x): 0.3193, norm(y): 1.0098, norm:1.7668, tok/sec: 100846.85, flops:105.84, batch-reuse:1
@ 2143 train 5.0310 , allloss: 5.0320, dt: 1295.83ms, fracRes: 0.2823, norm(attn): 0.1738, norm(output): 0.3535, norm(x): 0.3199, norm(y): 1.0098, norm:1.5936, tok/sec: 101149.01, flops:106.16, batch-reuse:1
@ 2144 train 4.9832 , allloss: 4.9841, dt: 1316.75ms, fracRes: 0.2840, norm(attn): 0.1748, norm(output): 0.3555, norm(x): 0.3208, norm(y): 1.0097, norm:1.7188, tok/sec: 99541.94, flops:104.47, batch-reuse:1
@ 2145 train 5.0120 , allloss: 5.0134, dt: 1285.76ms, fracRes: 0.2874, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3208, norm(y): 1.0098, norm:1.9558, tok/sec: 101941.59, flops:106.99, batch-reuse:1
@ 2146 train 5.3038 , allloss: 5.3057, dt: 1295.39ms, fracRes: 0.2923, norm(attn): 0.1689, norm(output): 0.3516, norm(x): 0.3208, norm(y): 1.0098, norm:2.4504, tok/sec: 101183.12, flops:106.19, batch-reuse:1
@ 2147 train 4.9394 , allloss: 4.9401, dt: 1303.38ms, fracRes: 0.2926, norm(attn): 0.1709, norm(output): 0.3516, norm(x): 0.3194, norm(y): 1.0098, norm:2.3195, tok/sec: 100563.19, flops:105.54, batch-reuse:1
@ 2148 train 4.9714 , allloss: 4.9724, dt: 1292.25ms, fracRes: 0.2929, norm(attn): 0.1719, norm(output): 0.3496, norm(x): 0.3175, norm(y): 1.0098, norm:2.0054, tok/sec: 101429.67, flops:106.45, batch-reuse:1
@ 2149 train 4.9663 , allloss: 4.9677, dt: 1311.97ms, fracRes: 0.2909, norm(attn): 0.1738, norm(output): 0.3496, norm(x): 0.3189, norm(y): 1.0097, norm:1.8557, tok/sec: 99904.45, flops:104.85, batch-reuse:1
@ 2150 train 4.9989 , allloss: 4.9999, dt: 1280.99ms, fracRes: 0.2911, norm(attn): 0.1709, norm(output): 0.3535, norm(x): 0.3198, norm(y): 1.0098, norm:1.9391, tok/sec: 102321.06, flops:107.39, batch-reuse:1
@ 2151 train 4.9388 , allloss: 4.9394, dt: 1306.16ms, fracRes: 0.2908, norm(attn): 0.1699, norm(output): 0.3535, norm(x): 0.3193, norm(y): 1.0099, norm:2.2168, tok/sec: 100349.26, flops:105.32, batch-reuse:1
@ 2152 train 5.0143 , allloss: 5.0154, dt: 1301.83ms, fracRes: 0.2896, norm(attn): 0.1709, norm(output): 0.3535, norm(x): 0.3195, norm(y): 1.0098, norm:1.8771, tok/sec: 100682.51, flops:105.67, batch-reuse:1
@ 2153 train 4.9647 , allloss: 4.9660, dt: 1299.45ms, fracRes: 0.2890, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3191, norm(y): 1.0098, norm:1.8134, tok/sec: 100867.35, flops:105.86, batch-reuse:1
@ 2154 train 5.0068 , allloss: 5.0080, dt: 1306.51ms, fracRes: 0.2897, norm(attn): 0.1738, norm(output): 0.3535, norm(x): 0.3202, norm(y): 1.0098, norm:2.0765, tok/sec: 100321.91, flops:105.29, batch-reuse:1
@ 2155 train 4.9828 , allloss: 4.9835, dt: 1282.83ms, fracRes: 0.2870, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3201, norm(y): 1.0098, norm:1.8440, tok/sec: 102173.99, flops:107.23, batch-reuse:1
@ 2156 train 4.9506 , allloss: 4.9514, dt: 1289.26ms, fracRes: 0.2879, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3176, norm(y): 1.0100, norm:1.9028, tok/sec: 101664.55, flops:106.70, batch-reuse:1
@ 2157 train 5.0480 , allloss: 5.0494, dt: 1302.25ms, fracRes: 0.2886, norm(attn): 0.1777, norm(output): 0.3516, norm(x): 0.3191, norm(y): 1.0099, norm:2.0330, tok/sec: 100650.20, flops:105.63, batch-reuse:1
@ 2158 train 5.0219 , allloss: 5.0232, dt: 1321.46ms, fracRes: 0.2890, norm(attn): 0.1729, norm(output): 0.3516, norm(x): 0.3194, norm(y): 1.0098, norm:1.8632, tok/sec: 99187.30, flops:104.10, batch-reuse:1
@ 2159 train 4.9613 , allloss: 4.9635, dt: 1341.32ms, fracRes: 0.2872, norm(attn): 0.1768, norm(output): 0.3535, norm(x): 0.3198, norm(y): 1.0098, norm:2.0204, tok/sec: 97718.35, flops:102.56, batch-reuse:1
@ 2160 train 5.0318 , allloss: 5.0355, dt: 1339.59ms, fracRes: 0.2880, norm(attn): 0.1758, norm(output): 0.3535, norm(x): 0.3204, norm(y): 1.0098, norm:2.2025, tok/sec: 97844.67, flops:102.69, batch-reuse:1
@ 2161 train 5.0143 , allloss: 5.0173, dt: 1327.47ms, fracRes: 0.2884, norm(attn): 0.1758, norm(output): 0.3535, norm(x): 0.3198, norm(y): 1.0099, norm:2.8238, tok/sec: 98738.16, flops:103.63, batch-reuse:1
@ 2162 train 4.9237 , allloss: 4.9244, dt: 1332.05ms, fracRes: 0.2875, norm(attn): 0.1729, norm(output): 0.3613, norm(x): 0.3211, norm(y): 1.0099, norm:2.0814, tok/sec: 98398.97, flops:103.27, batch-reuse:1
@ 2163 train 5.0229 , allloss: 5.0250, dt: 1309.28ms, fracRes: 0.2911, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3204, norm(y): 1.0099, norm:2.3355, tok/sec: 100109.97, flops:105.07, batch-reuse:1
@ 2164 train 4.8844 , allloss: 4.8879, dt: 1330.68ms, fracRes: 0.2927, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3202, norm(y): 1.0098, norm:1.8190, tok/sec: 98500.36, flops:103.38, batch-reuse:1
@ 2165 train 4.8813 , allloss: 4.8825, dt: 1332.33ms, fracRes: 0.2923, norm(attn): 0.1670, norm(output): 0.3535, norm(x): 0.3206, norm(y): 1.0099, norm:2.1247, tok/sec: 98378.22, flops:103.25, batch-reuse:1
@ 2166 train 4.9681 , allloss: 4.9707, dt: 1311.24ms, fracRes: 0.2922, norm(attn): 0.1670, norm(output): 0.3535, norm(x): 0.3217, norm(y): 1.0100, norm:2.1780, tok/sec: 99960.07, flops:104.91, batch-reuse:1
@ 2167 train 4.9893 , allloss: 4.9901, dt: 1285.66ms, fracRes: 0.2925, norm(attn): 0.1689, norm(output): 0.3535, norm(x): 0.3220, norm(y): 1.0099, norm:2.1671, tok/sec: 101949.55, flops:107.00, batch-reuse:1
@ 2168 train 4.9936 , allloss: 4.9941, dt: 1306.12ms, fracRes: 0.2957, norm(attn): 0.1699, norm(output): 0.3516, norm(x): 0.3197, norm(y): 1.0100, norm:2.3380, tok/sec: 100351.85, flops:105.32, batch-reuse:1
@ 2169 train 5.0060 , allloss: 5.0068, dt: 1304.47ms, fracRes: 0.2948, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3213, norm(y): 1.0099, norm:1.7438, tok/sec: 100479.21, flops:105.45, batch-reuse:1
@ 2170 train 4.9991 , allloss: 5.0001, dt: 1277.50ms, fracRes: 0.2933, norm(attn): 0.1719, norm(output): 0.3555, norm(x): 0.3227, norm(y): 1.0099, norm:2.1474, tok/sec: 102600.47, flops:107.68, batch-reuse:1
@ 2171 train 5.0180 , allloss: 5.0191, dt: 1314.40ms, fracRes: 0.2937, norm(attn): 0.1709, norm(output): 0.3535, norm(x): 0.3220, norm(y): 1.0100, norm:1.9656, tok/sec: 99720.10, flops:104.66, batch-reuse:1
@ 2172 train 5.0395 , allloss: 5.0401, dt: 1291.09ms, fracRes: 0.2904, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3231, norm(y): 1.0100, norm:2.1376, tok/sec: 101520.51, flops:106.55, batch-reuse:1
@ 2173 train 4.9557 , allloss: 4.9563, dt: 1298.58ms, fracRes: 0.2883, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3225, norm(y): 1.0100, norm:2.0077, tok/sec: 100935.04, flops:105.93, batch-reuse:1
@ 2174 train 5.0004 , allloss: 5.0013, dt: 1285.60ms, fracRes: 0.2894, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3230, norm(y): 1.0100, norm:1.8358, tok/sec: 101954.13, flops:107.00, batch-reuse:1
@ 2175 train 4.9569 , allloss: 4.9577, dt: 1318.97ms, fracRes: 0.2873, norm(attn): 0.1729, norm(output): 0.3633, norm(x): 0.3252, norm(y): 1.0099, norm:1.8959, tok/sec: 99374.62, flops:104.30, batch-reuse:1
@ 2176 train 4.9389 , allloss: 4.9397, dt: 1329.05ms, fracRes: 0.2888, norm(attn): 0.1738, norm(output): 0.3535, norm(x): 0.3229, norm(y): 1.0100, norm:1.7006, tok/sec: 98620.62, flops:103.50, batch-reuse:1
@ 2177 train 4.9529 , allloss: 4.9537, dt: 1326.99ms, fracRes: 0.2905, norm(attn): 0.1738, norm(output): 0.3535, norm(x): 0.3209, norm(y): 1.0099, norm:1.8187, tok/sec: 98773.78, flops:103.66, batch-reuse:1
@ 2178 train 5.0086 , allloss: 5.0099, dt: 1290.44ms, fracRes: 0.2921, norm(attn): 0.1738, norm(output): 0.3535, norm(x): 0.3231, norm(y): 1.0099, norm:1.9396, tok/sec: 101571.76, flops:106.60, batch-reuse:1
@ 2179 train 5.0014 , allloss: 5.0028, dt: 1312.36ms, fracRes: 0.2910, norm(attn): 0.1758, norm(output): 0.3555, norm(x): 0.3236, norm(y): 1.0099, norm:1.9158, tok/sec: 99875.25, flops:104.82, batch-reuse:1
@ 2180 train 4.9025 , allloss: 4.9032, dt: 1313.78ms, fracRes: 0.2935, norm(attn): 0.1699, norm(output): 0.3535, norm(x): 0.3217, norm(y): 1.0100, norm:1.5762, tok/sec: 99766.84, flops:104.71, batch-reuse:1
@ 2181 train 4.9035 , allloss: 4.9041, dt: 1319.12ms, fracRes: 0.2937, norm(attn): 0.1729, norm(output): 0.3574, norm(x): 0.3234, norm(y): 1.0100, norm:1.7296, tok/sec: 99363.22, flops:104.28, batch-reuse:1
@ 2182 train 5.0185 , allloss: 5.0196, dt: 1339.22ms, fracRes: 0.2934, norm(attn): 0.1709, norm(output): 0.3633, norm(x): 0.3238, norm(y): 1.0100, norm:1.9919, tok/sec: 97872.22, flops:102.72, batch-reuse:1
@ 2183 train 4.8300 , allloss: 4.8312, dt: 1323.91ms, fracRes: 0.2940, norm(attn): 0.1719, norm(output): 0.3555, norm(x): 0.3215, norm(y): 1.0100, norm:1.8416, tok/sec: 99003.53, flops:103.91, batch-reuse:1
@ 2184 train 4.8008 , allloss: 4.8022, dt: 1309.31ms, fracRes: 0.2949, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3209, norm(y): 1.0100, norm:2.5725, tok/sec: 100107.55, flops:105.06, batch-reuse:1
@ 2185 train 4.9704 , allloss: 4.9716, dt: 1338.04ms, fracRes: 0.2939, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3225, norm(y): 1.0099, norm:1.8547, tok/sec: 97958.25, flops:102.81, batch-reuse:1
@ 2186 train 4.8666 , allloss: 4.8698, dt: 1303.17ms, fracRes: 0.2921, norm(attn): 0.1719, norm(output): 0.3555, norm(x): 0.3221, norm(y): 1.0099, norm:2.0101, tok/sec: 100579.32, flops:105.56, batch-reuse:1
@ 2187 train 4.8465 , allloss: 4.8473, dt: 1317.70ms, fracRes: 0.2934, norm(attn): 0.1719, norm(output): 0.3555, norm(x): 0.3213, norm(y): 1.0100, norm:1.8574, tok/sec: 99470.15, flops:104.40, batch-reuse:1
@ 2188 train 4.8146 , allloss: 4.8152, dt: 1298.90ms, fracRes: 0.2922, norm(attn): 0.1729, norm(output): 0.3555, norm(x): 0.3215, norm(y): 1.0100, norm:1.7505, tok/sec: 100909.92, flops:105.91, batch-reuse:1
@ 2189 train 4.8815 , allloss: 4.8832, dt: 1311.61ms, fracRes: 0.2911, norm(attn): 0.1719, norm(output): 0.3613, norm(x): 0.3239, norm(y): 1.0099, norm:1.9131, tok/sec: 99931.93, flops:104.88, batch-reuse:1
@ 2190 train 4.7630 , allloss: 4.7640, dt: 1292.89ms, fracRes: 0.2934, norm(attn): 0.1758, norm(output): 0.3574, norm(x): 0.3230, norm(y): 1.0100, norm:2.2290, tok/sec: 101379.21, flops:106.40, batch-reuse:1
@ 2191 train 4.8964 , allloss: 4.8974, dt: 1306.45ms, fracRes: 0.2906, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3231, norm(y): 1.0100, norm:1.9075, tok/sec: 100326.88, flops:105.29, batch-reuse:1
@ 2192 train 4.8691 , allloss: 4.8698, dt: 1333.64ms, fracRes: 0.2887, norm(attn): 0.1729, norm(output): 0.3555, norm(x): 0.3236, norm(y): 1.0099, norm:1.7035, tok/sec: 98281.09, flops:103.15, batch-reuse:1
@ 2193 train 4.8327 , allloss: 4.8337, dt: 1309.87ms, fracRes: 0.2879, norm(attn): 0.1738, norm(output): 0.3535, norm(x): 0.3233, norm(y): 1.0099, norm:2.0797, tok/sec: 100065.16, flops:105.02, batch-reuse:1
@ 2194 train 4.9377 , allloss: 4.9389, dt: 1304.28ms, fracRes: 0.2892, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3230, norm(y): 1.0100, norm:1.7322, tok/sec: 100493.44, flops:105.47, batch-reuse:1
@ 2195 train 4.9230 , allloss: 4.9240, dt: 1315.91ms, fracRes: 0.2930, norm(attn): 0.1738, norm(output): 0.3535, norm(x): 0.3232, norm(y): 1.0100, norm:2.4069, tok/sec: 99605.46, flops:104.54, batch-reuse:1
@ 2196 train 4.9497 , allloss: 4.9507, dt: 1335.71ms, fracRes: 0.2908, norm(attn): 0.1738, norm(output): 0.3574, norm(x): 0.3259, norm(y): 1.0099, norm:1.9827, tok/sec: 98129.29, flops:102.99, batch-reuse:1
@ 2197 train 4.8013 , allloss: 4.8026, dt: 1302.23ms, fracRes: 0.2937, norm(attn): 0.1738, norm(output): 0.3535, norm(x): 0.3239, norm(y): 1.0100, norm:1.9446, tok/sec: 100651.93, flops:105.64, batch-reuse:1
@ 2198 train 4.8847 , allloss: 4.8855, dt: 1309.06ms, fracRes: 0.2943, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3235, norm(y): 1.0100, norm:2.1374, tok/sec: 100126.58, flops:105.08, batch-reuse:1
@ 2199 train 4.9142 , allloss: 4.9150, dt: 1317.83ms, fracRes: 0.2927, norm(attn): 0.1738, norm(output): 0.3555, norm(x): 0.3243, norm(y): 1.0099, norm:1.7064, tok/sec: 99460.74, flops:104.39, batch-reuse:1
@ 2200 train 4.8717 , allloss: 4.8735, dt: 1278.74ms, fracRes: 0.2927, norm(attn): 0.1719, norm(output): 0.3555, norm(x): 0.3237, norm(y): 1.0100, norm:2.0255, tok/sec: 102501.12, flops:107.58, batch-reuse:1
@ 2201 train 4.8956 , allloss: 4.8974, dt: 1281.49ms, fracRes: 0.2931, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3239, norm(y): 1.0101, norm:2.2308, tok/sec: 102280.89, flops:107.35, batch-reuse:1
@ 2202 train 4.9719 , allloss: 4.9732, dt: 1285.38ms, fracRes: 0.2935, norm(attn): 0.1738, norm(output): 0.3594, norm(x): 0.3263, norm(y): 1.0099, norm:2.0453, tok/sec: 101971.22, flops:107.02, batch-reuse:1
@ 2203 train 4.9075 , allloss: 4.9085, dt: 1294.73ms, fracRes: 0.2933, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3245, norm(y): 1.0100, norm:1.9134, tok/sec: 101235.01, flops:106.25, batch-reuse:1
@ 2204 train 4.9130 , allloss: 4.9138, dt: 1339.87ms, fracRes: 0.2907, norm(attn): 0.1748, norm(output): 0.3535, norm(x): 0.3240, norm(y): 1.0100, norm:1.6861, tok/sec: 97824.56, flops:102.67, batch-reuse:1
@ 2205 train 4.8983 , allloss: 4.8993, dt: 1309.89ms, fracRes: 0.2926, norm(attn): 0.1748, norm(output): 0.3555, norm(x): 0.3240, norm(y): 1.0100, norm:2.2187, tok/sec: 100063.67, flops:105.02, batch-reuse:1
@ 2206 train 4.8273 , allloss: 4.8283, dt: 1307.27ms, fracRes: 0.2926, norm(attn): 0.1729, norm(output): 0.3555, norm(x): 0.3240, norm(y): 1.0100, norm:1.9150, tok/sec: 100264.29, flops:105.23, batch-reuse:1
@ 2207 train 4.8538 , allloss: 4.8547, dt: 1284.72ms, fracRes: 0.2927, norm(attn): 0.1738, norm(output): 0.3633, norm(x): 0.3256, norm(y): 1.0099, norm:2.0376, tok/sec: 102023.85, flops:107.08, batch-reuse:1
@ 2208 train 4.9502 , allloss: 4.9513, dt: 1289.64ms, fracRes: 0.2970, norm(attn): 0.1719, norm(output): 0.3555, norm(x): 0.3231, norm(y): 1.0100, norm:1.8311, tok/sec: 101634.78, flops:106.67, batch-reuse:1
@ 2209 train 4.8106 , allloss: 4.8130, dt: 1300.13ms, fracRes: 0.2939, norm(attn): 0.1729, norm(output): 0.3555, norm(x): 0.3242, norm(y): 1.0100, norm:2.0151, tok/sec: 100814.32, flops:105.81, batch-reuse:1
@ 2210 train 4.7498 , allloss: 4.7507, dt: 1290.71ms, fracRes: 0.2916, norm(attn): 0.1748, norm(output): 0.3613, norm(x): 0.3255, norm(y): 1.0100, norm:1.9289, tok/sec: 101550.61, flops:106.58, batch-reuse:1
@ 2211 train 4.8965 , allloss: 4.8976, dt: 1305.49ms, fracRes: 0.2931, norm(attn): 0.1719, norm(output): 0.3594, norm(x): 0.3251, norm(y): 1.0101, norm:2.0628, tok/sec: 100400.78, flops:105.37, batch-reuse:1
@ 2212 train 4.7642 , allloss: 4.7660, dt: 1329.60ms, fracRes: 0.2927, norm(attn): 0.1719, norm(output): 0.3633, norm(x): 0.3246, norm(y): 1.0100, norm:1.9941, tok/sec: 98580.21, flops:103.46, batch-reuse:1
@ 2213 train 5.1610 , allloss: 5.1632, dt: 1351.40ms, fracRes: 0.2983, norm(attn): 0.1729, norm(output): 0.3555, norm(x): 0.3257, norm(y): 1.0101, norm:2.4395, tok/sec: 96989.78, flops:101.79, batch-reuse:1
@ 2214 train 5.0078 , allloss: 5.0102, dt: 1345.74ms, fracRes: 0.2971, norm(attn): 0.1729, norm(output): 0.3555, norm(x): 0.3240, norm(y): 1.0100, norm:2.4233, tok/sec: 97398.07, flops:102.22, batch-reuse:1
@ 2215 train 4.8931 , allloss: 4.8937, dt: 1295.97ms, fracRes: 0.2980, norm(attn): 0.1719, norm(output): 0.3574, norm(x): 0.3250, norm(y): 1.0101, norm:2.2468, tok/sec: 101138.33, flops:106.15, batch-reuse:1
@ 2216 train 4.9420 , allloss: 4.9449, dt: 1299.48ms, fracRes: 0.2993, norm(attn): 0.1709, norm(output): 0.3594, norm(x): 0.3254, norm(y): 1.0101, norm:1.9391, tok/sec: 100864.82, flops:105.86, batch-reuse:1
@ 2217 train 4.8353 , allloss: 4.8370, dt: 1328.77ms, fracRes: 0.2995, norm(attn): 0.1719, norm(output): 0.3613, norm(x): 0.3250, norm(y): 1.0101, norm:1.8061, tok/sec: 98641.82, flops:103.53, batch-reuse:1
@ 2218 train 4.8218 , allloss: 4.8230, dt: 1324.48ms, fracRes: 0.2987, norm(attn): 0.1719, norm(output): 0.3633, norm(x): 0.3265, norm(y): 1.0101, norm:2.0192, tok/sec: 98960.88, flops:103.86, batch-reuse:1
@ 2219 train 4.9182 , allloss: 4.9189, dt: 1301.19ms, fracRes: 0.2998, norm(attn): 0.1709, norm(output): 0.3574, norm(x): 0.3250, norm(y): 1.0101, norm:2.0069, tok/sec: 100732.67, flops:105.72, batch-reuse:1
@ 2220 train 4.8959 , allloss: 4.8967, dt: 1331.38ms, fracRes: 0.2998, norm(attn): 0.1709, norm(output): 0.3594, norm(x): 0.3251, norm(y): 1.0100, norm:2.0695, tok/sec: 98448.25, flops:103.32, batch-reuse:1
@ 2221 train 4.7489 , allloss: 4.7497, dt: 1304.31ms, fracRes: 0.2991, norm(attn): 0.1748, norm(output): 0.3574, norm(x): 0.3263, norm(y): 1.0100, norm:1.8148, tok/sec: 100491.15, flops:105.47, batch-reuse:1
@ 2222 train 4.8880 , allloss: 4.8888, dt: 1293.30ms, fracRes: 0.2957, norm(attn): 0.1758, norm(output): 0.3594, norm(x): 0.3267, norm(y): 1.0100, norm:1.7492, tok/sec: 101347.19, flops:106.37, batch-reuse:1
@ 2223 train 4.8180 , allloss: 4.8187, dt: 1307.35ms, fracRes: 0.2931, norm(attn): 0.1738, norm(output): 0.3633, norm(x): 0.3279, norm(y): 1.0101, norm:2.0354, tok/sec: 100258.02, flops:105.22, batch-reuse:1
@ 2224 train 4.9019 , allloss: 4.9038, dt: 1300.41ms, fracRes: 0.2937, norm(attn): 0.1758, norm(output): 0.3633, norm(x): 0.3286, norm(y): 1.0100, norm:1.9423, tok/sec: 100792.47, flops:105.78, batch-reuse:1
@ 2225 train 4.9385 , allloss: 4.9408, dt: 1296.52ms, fracRes: 0.2925, norm(attn): 0.1729, norm(output): 0.3613, norm(x): 0.3272, norm(y): 1.0100, norm:2.4034, tok/sec: 101095.46, flops:106.10, batch-reuse:1
@ 2226 train 4.9189 , allloss: 4.9202, dt: 1318.72ms, fracRes: 0.2964, norm(attn): 0.1738, norm(output): 0.3613, norm(x): 0.3264, norm(y): 1.0101, norm:2.1499, tok/sec: 99393.15, flops:104.31, batch-reuse:1
@ 2227 train 4.8487 , allloss: 4.8499, dt: 1313.84ms, fracRes: 0.2957, norm(attn): 0.1758, norm(output): 0.3613, norm(x): 0.3270, norm(y): 1.0100, norm:2.0991, tok/sec: 99762.68, flops:104.70, batch-reuse:1
@ 2228 train 4.8821 , allloss: 4.8831, dt: 1337.98ms, fracRes: 0.3016, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3240, norm(y): 1.0102, norm:2.5805, tok/sec: 97962.69, flops:102.81, batch-reuse:1
@ 2229 train 5.0294 , allloss: 5.0301, dt: 1293.25ms, fracRes: 0.2993, norm(attn): 0.1719, norm(output): 0.3633, norm(x): 0.3284, norm(y): 1.0102, norm:1.9353, tok/sec: 101351.15, flops:106.37, batch-reuse:1
@ 2230 train 5.0613 , allloss: 5.0623, dt: 1318.87ms, fracRes: 0.2996, norm(attn): 0.1709, norm(output): 0.3633, norm(x): 0.3298, norm(y): 1.0102, norm:2.4424, tok/sec: 99381.93, flops:104.30, batch-reuse:1
@ 2231 train 5.1102 , allloss: 5.1120, dt: 1325.91ms, fracRes: 0.2964, norm(attn): 0.1729, norm(output): 0.3652, norm(x): 0.3314, norm(y): 1.0101, norm:1.7046, tok/sec: 98854.03, flops:103.75, batch-reuse:1
@ 2232 train 5.0489 , allloss: 5.0497, dt: 1302.77ms, fracRes: 0.2965, norm(attn): 0.1719, norm(output): 0.3633, norm(x): 0.3295, norm(y): 1.0101, norm:2.1534, tok/sec: 100610.19, flops:105.59, batch-reuse:1
@ 2233 train 4.9964 , allloss: 4.9974, dt: 1295.35ms, fracRes: 0.2925, norm(attn): 0.1777, norm(output): 0.3633, norm(x): 0.3296, norm(y): 1.0100, norm:1.8679, tok/sec: 101186.53, flops:106.20, batch-reuse:1
@ 2234 train 5.1658 , allloss: 5.1666, dt: 1294.86ms, fracRes: 0.2968, norm(attn): 0.1738, norm(output): 0.3633, norm(x): 0.3296, norm(y): 1.0102, norm:2.2625, tok/sec: 101224.48, flops:106.24, batch-reuse:1
@ 2235 train 5.0262 , allloss: 5.0272, dt: 1296.18ms, fracRes: 0.2952, norm(attn): 0.1719, norm(output): 0.3633, norm(x): 0.3301, norm(y): 1.0101, norm:2.2393, tok/sec: 101121.53, flops:106.13, batch-reuse:1
@ 2236 train 4.9901 , allloss: 4.9913, dt: 1290.86ms, fracRes: 0.2941, norm(attn): 0.1748, norm(output): 0.3633, norm(x): 0.3315, norm(y): 1.0100, norm:2.0029, tok/sec: 101538.23, flops:106.57, batch-reuse:1
@ 2237 train 5.0743 , allloss: 5.0756, dt: 1329.54ms, fracRes: 0.2977, norm(attn): 0.1729, norm(output): 0.3633, norm(x): 0.3293, norm(y): 1.0102, norm:1.7196, tok/sec: 98584.24, flops:103.47, batch-reuse:1
@ 2238 train 4.9660 , allloss: 4.9670, dt: 1334.94ms, fracRes: 0.2964, norm(attn): 0.1729, norm(output): 0.3633, norm(x): 0.3297, norm(y): 1.0102, norm:2.0142, tok/sec: 98185.92, flops:103.05, batch-reuse:1
@ 2239 train 4.9548 , allloss: 4.9561, dt: 1311.18ms, fracRes: 0.2956, norm(attn): 0.1729, norm(output): 0.3652, norm(x): 0.3292, norm(y): 1.0101, norm:1.9801, tok/sec: 99965.18, flops:104.92, batch-reuse:1
@ 2240 train 5.0392 , allloss: 5.0400, dt: 1314.87ms, fracRes: 0.2967, norm(attn): 0.1709, norm(output): 0.3633, norm(x): 0.3297, norm(y): 1.0102, norm:1.9517, tok/sec: 99684.37, flops:104.62, batch-reuse:1
@ 2241 train 5.0909 , allloss: 5.0919, dt: 1342.02ms, fracRes: 0.2993, norm(attn): 0.1719, norm(output): 0.3633, norm(x): 0.3295, norm(y): 1.0102, norm:2.0343, tok/sec: 97667.69, flops:102.50, batch-reuse:1
@ 2242 train 5.0020 , allloss: 5.0030, dt: 1329.51ms, fracRes: 0.2991, norm(attn): 0.1709, norm(output): 0.3652, norm(x): 0.3294, norm(y): 1.0102, norm:2.0858, tok/sec: 98586.52, flops:103.47, batch-reuse:1
@ 2243 train 5.0537 , allloss: 5.0544, dt: 1326.70ms, fracRes: 0.3000, norm(attn): 0.1709, norm(output): 0.3633, norm(x): 0.3280, norm(y): 1.0102, norm:2.0369, tok/sec: 98795.55, flops:103.69, batch-reuse:1
@ 2244 train 5.0577 , allloss: 5.0589, dt: 1319.14ms, fracRes: 0.2996, norm(attn): 0.1729, norm(output): 0.3633, norm(x): 0.3294, norm(y): 1.0101, norm:2.2176, tok/sec: 99361.62, flops:104.28, batch-reuse:1
@ 2245 train 4.9928 , allloss: 4.9936, dt: 1341.92ms, fracRes: 0.3008, norm(attn): 0.1709, norm(output): 0.3633, norm(x): 0.3274, norm(y): 1.0102, norm:2.2105, tok/sec: 97675.10, flops:102.51, batch-reuse:1
@ 2246 train 4.9591 , allloss: 4.9598, dt: 1313.72ms, fracRes: 0.3039, norm(attn): 0.1699, norm(output): 0.3594, norm(x): 0.3272, norm(y): 1.0103, norm:2.0198, tok/sec: 99771.53, flops:104.71, batch-reuse:1
@ 2247 train 5.0191 , allloss: 5.0204, dt: 1303.49ms, fracRes: 0.3024, norm(attn): 0.1719, norm(output): 0.3594, norm(x): 0.3283, norm(y): 1.0102, norm:2.0927, tok/sec: 100554.91, flops:105.53, batch-reuse:1
@ 2248 train 5.0805 , allloss: 5.0817, dt: 1315.41ms, fracRes: 0.2993, norm(attn): 0.1748, norm(output): 0.3652, norm(x): 0.3294, norm(y): 1.0101, norm:1.8847, tok/sec: 99643.48, flops:104.58, batch-reuse:1
@ 2249 train 4.8992 , allloss: 4.8998, dt: 1290.52ms, fracRes: 0.2978, norm(attn): 0.1729, norm(output): 0.3652, norm(x): 0.3309, norm(y): 1.0101, norm:2.1800, tok/sec: 101565.28, flops:106.59, batch-reuse:1
@ 2250 train 5.1003 , allloss: 5.1012, dt: 1313.00ms, fracRes: 0.2976, norm(attn): 0.1719, norm(output): 0.3652, norm(x): 0.3303, norm(y): 1.0102, norm:2.4667, tok/sec: 99826.41, flops:104.77, batch-reuse:1
@ 2251 train 4.9393 , allloss: 4.9410, dt: 1333.43ms, fracRes: 0.2971, norm(attn): 0.1729, norm(output): 0.3652, norm(x): 0.3288, norm(y): 1.0102, norm:2.0550, tok/sec: 98296.66, flops:103.16, batch-reuse:1
@ 2252 train 4.9710 , allloss: 4.9747, dt: 1297.72ms, fracRes: 0.2956, norm(attn): 0.1729, norm(output): 0.3691, norm(x): 0.3323, norm(y): 1.0101, norm:2.1921, tok/sec: 101001.46, flops:106.00, batch-reuse:1
@ 2253 train 4.9666 , allloss: 4.9680, dt: 1291.86ms, fracRes: 0.2952, norm(attn): 0.1719, norm(output): 0.3691, norm(x): 0.3317, norm(y): 1.0102, norm:2.1461, tok/sec: 101460.00, flops:106.48, batch-reuse:1
@ 2254 train 5.0489 , allloss: 5.0503, dt: 1318.60ms, fracRes: 0.2953, norm(attn): 0.1719, norm(output): 0.3652, norm(x): 0.3308, norm(y): 1.0101, norm:2.1136, tok/sec: 99402.38, flops:104.32, batch-reuse:1
@ 2255 train 5.0179 , allloss: 5.0215, dt: 1341.48ms, fracRes: 0.2979, norm(attn): 0.1719, norm(output): 0.3652, norm(x): 0.3300, norm(y): 1.0102, norm:2.4555, tok/sec: 97707.29, flops:102.55, batch-reuse:1
@ 2256 train 5.1074 , allloss: 5.1093, dt: 1347.08ms, fracRes: 0.2969, norm(attn): 0.1729, norm(output): 0.3691, norm(x): 0.3323, norm(y): 1.0101, norm:1.9152, tok/sec: 97300.86, flops:102.12, batch-reuse:1
@ 2257 train 5.0306 , allloss: 5.0324, dt: 1319.15ms, fracRes: 0.2975, norm(attn): 0.1719, norm(output): 0.3691, norm(x): 0.3319, norm(y): 1.0102, norm:2.5386, tok/sec: 99361.10, flops:104.28, batch-reuse:1
@ 2258 train 4.9682 , allloss: 4.9700, dt: 1329.62ms, fracRes: 0.2999, norm(attn): 0.1719, norm(output): 0.3672, norm(x): 0.3302, norm(y): 1.0102, norm:2.0550, tok/sec: 98578.57, flops:103.46, batch-reuse:1
@ 2259 train 5.0888 , allloss: 5.0904, dt: 1299.64ms, fracRes: 0.3009, norm(attn): 0.1719, norm(output): 0.3711, norm(x): 0.3306, norm(y): 1.0102, norm:2.0743, tok/sec: 100852.47, flops:105.85, batch-reuse:1
@ 2260 train 4.9799 , allloss: 4.9808, dt: 1292.52ms, fracRes: 0.2994, norm(attn): 0.1729, norm(output): 0.3652, norm(x): 0.3308, norm(y): 1.0101, norm:2.1076, tok/sec: 101407.87, flops:106.43, batch-reuse:1
@ 2261 train 5.0258 , allloss: 5.0268, dt: 1304.36ms, fracRes: 0.3023, norm(attn): 0.1719, norm(output): 0.3652, norm(x): 0.3305, norm(y): 1.0102, norm:2.0423, tok/sec: 100487.35, flops:105.46, batch-reuse:1
@ 2262 train 5.0084 , allloss: 5.0093, dt: 1292.24ms, fracRes: 0.3057, norm(attn): 0.1719, norm(output): 0.3594, norm(x): 0.3283, norm(y): 1.0103, norm:2.1517, tok/sec: 101430.25, flops:106.45, batch-reuse:1
@ 2263 train 5.0708 , allloss: 5.0720, dt: 1313.53ms, fracRes: 0.3060, norm(attn): 0.1709, norm(output): 0.3633, norm(x): 0.3300, norm(y): 1.0102, norm:1.9714, tok/sec: 99786.00, flops:104.73, batch-reuse:1
@ 2264 train 5.0250 , allloss: 5.0270, dt: 1311.04ms, fracRes: 0.3049, norm(attn): 0.1729, norm(output): 0.3633, norm(x): 0.3308, norm(y): 1.0102, norm:1.9853, tok/sec: 99975.85, flops:104.93, batch-reuse:1
@ 2265 train 4.9871 , allloss: 4.9882, dt: 1316.09ms, fracRes: 0.3033, norm(attn): 0.1738, norm(output): 0.3652, norm(x): 0.3309, norm(y): 1.0102, norm:1.9731, tok/sec: 99592.22, flops:104.52, batch-reuse:1
@ 2266 train 4.8944 , allloss: 4.8952, dt: 1302.10ms, fracRes: 0.3014, norm(attn): 0.1748, norm(output): 0.3633, norm(x): 0.3284, norm(y): 1.0102, norm:1.9221, tok/sec: 100662.29, flops:105.65, batch-reuse:1
@ 2267 train 5.0129 , allloss: 5.0140, dt: 1295.09ms, fracRes: 0.2964, norm(attn): 0.1768, norm(output): 0.3633, norm(x): 0.3324, norm(y): 1.0101, norm:1.6745, tok/sec: 101206.79, flops:106.22, batch-reuse:1
@ 2268 train 5.0663 , allloss: 5.0676, dt: 1296.15ms, fracRes: 0.2987, norm(attn): 0.1719, norm(output): 0.3672, norm(x): 0.3320, norm(y): 1.0103, norm:2.0212, tok/sec: 101123.71, flops:106.13, batch-reuse:1
@ 2269 train 5.0548 , allloss: 5.0555, dt: 1280.40ms, fracRes: 0.2998, norm(attn): 0.1729, norm(output): 0.3691, norm(x): 0.3313, norm(y): 1.0103, norm:1.9768, tok/sec: 102368.27, flops:107.44, batch-reuse:1
@ 2270 train 5.0997 , allloss: 5.1006, dt: 1314.44ms, fracRes: 0.2992, norm(attn): 0.1758, norm(output): 0.3652, norm(x): 0.3325, norm(y): 1.0103, norm:2.1409, tok/sec: 99716.75, flops:104.65, batch-reuse:1
@ 2271 train 5.0198 , allloss: 5.0208, dt: 1332.27ms, fracRes: 0.2996, norm(attn): 0.1748, norm(output): 0.3652, norm(x): 0.3312, norm(y): 1.0103, norm:2.0643, tok/sec: 98382.55, flops:103.25, batch-reuse:1
@ 2272 train 4.8963 , allloss: 4.8972, dt: 1348.66ms, fracRes: 0.2990, norm(attn): 0.1738, norm(output): 0.3691, norm(x): 0.3317, norm(y): 1.0103, norm:1.9224, tok/sec: 97186.77, flops:102.00, batch-reuse:1
@ 2273 train 5.0487 , allloss: 5.0498, dt: 1351.69ms, fracRes: 0.2976, norm(attn): 0.1738, norm(output): 0.3691, norm(x): 0.3332, norm(y): 1.0102, norm:1.7388, tok/sec: 96969.15, flops:101.77, batch-reuse:1
@ 2274 train 4.9675 , allloss: 4.9687, dt: 1310.33ms, fracRes: 0.2991, norm(attn): 0.1748, norm(output): 0.3691, norm(x): 0.3322, norm(y): 1.0103, norm:2.6641, tok/sec: 100029.68, flops:104.98, batch-reuse:1
@ 2275 train 4.9975 , allloss: 4.9981, dt: 1329.90ms, fracRes: 0.3013, norm(attn): 0.1729, norm(output): 0.3652, norm(x): 0.3316, norm(y): 1.0104, norm:1.7516, tok/sec: 98557.50, flops:103.44, batch-reuse:1
@ 2276 train 5.0199 , allloss: 5.0210, dt: 1292.85ms, fracRes: 0.3019, norm(attn): 0.1758, norm(output): 0.3613, norm(x): 0.3313, norm(y): 1.0103, norm:2.0731, tok/sec: 101382.23, flops:106.40, batch-reuse:1
@ 2277 train 4.9776 , allloss: 4.9793, dt: 1315.82ms, fracRes: 0.3029, norm(attn): 0.1738, norm(output): 0.3652, norm(x): 0.3323, norm(y): 1.0103, norm:2.1170, tok/sec: 99612.45, flops:104.55, batch-reuse:1
@ 2278 train 5.0729 , allloss: 5.0742, dt: 1305.76ms, fracRes: 0.3037, norm(attn): 0.1748, norm(output): 0.3652, norm(x): 0.3326, norm(y): 1.0103, norm:1.8171, tok/sec: 100380.05, flops:105.35, batch-reuse:1
@ 2279 train 4.9529 , allloss: 4.9536, dt: 1322.35ms, fracRes: 0.3025, norm(attn): 0.1719, norm(output): 0.3672, norm(x): 0.3308, norm(y): 1.0103, norm:2.0231, tok/sec: 99120.45, flops:104.03, batch-reuse:1
@ 2280 train 4.9283 , allloss: 4.9291, dt: 1292.55ms, fracRes: 0.3030, norm(attn): 0.1729, norm(output): 0.3672, norm(x): 0.3307, norm(y): 1.0103, norm:1.7646, tok/sec: 101406.06, flops:106.43, batch-reuse:1
@ 2281 train 4.8624 , allloss: 4.8632, dt: 1323.13ms, fracRes: 0.3038, norm(attn): 0.1758, norm(output): 0.3652, norm(x): 0.3317, norm(y): 1.0103, norm:1.9334, tok/sec: 99062.37, flops:103.97, batch-reuse:1
@ 2282 train 5.0716 , allloss: 5.0724, dt: 1343.65ms, fracRes: 0.3026, norm(attn): 0.1758, norm(output): 0.3652, norm(x): 0.3311, norm(y): 1.0102, norm:2.0326, tok/sec: 97549.53, flops:102.38, batch-reuse:1
@ 2283 train 4.9494 , allloss: 4.9502, dt: 1304.06ms, fracRes: 0.2988, norm(attn): 0.1777, norm(output): 0.3691, norm(x): 0.3333, norm(y): 1.0102, norm:2.1803, tok/sec: 100510.57, flops:105.49, batch-reuse:1
@ 2284 train 4.8891 , allloss: 4.8899, dt: 1290.12ms, fracRes: 0.3009, norm(attn): 0.1748, norm(output): 0.3691, norm(x): 0.3316, norm(y): 1.0103, norm:1.9574, tok/sec: 101596.40, flops:106.63, batch-reuse:1
@ 2285 train 4.9155 , allloss: 4.9161, dt: 1342.74ms, fracRes: 0.3030, norm(attn): 0.1729, norm(output): 0.3633, norm(x): 0.3308, norm(y): 1.0104, norm:1.8424, tok/sec: 97615.46, flops:102.45, batch-reuse:1
@ 2286 train 4.9918 , allloss: 4.9935, dt: 1289.26ms, fracRes: 0.3019, norm(attn): 0.1729, norm(output): 0.3672, norm(x): 0.3328, norm(y): 1.0103, norm:1.8882, tok/sec: 101664.73, flops:106.70, batch-reuse:1
@ 2287 train 4.9780 , allloss: 4.9797, dt: 1299.84ms, fracRes: 0.3033, norm(attn): 0.1738, norm(output): 0.3672, norm(x): 0.3317, norm(y): 1.0103, norm:1.7982, tok/sec: 100837.25, flops:105.83, batch-reuse:1
@ 2288 train 5.0244 , allloss: 5.0251, dt: 1549.21ms, fracRes: 0.3035, norm(attn): 0.1719, norm(output): 0.3652, norm(x): 0.3305, norm(y): 1.0103, norm:1.7391, tok/sec: 84605.88, flops:88.80, batch-reuse:1
@ 2289 train 4.9183 , allloss: 4.9190, dt: 1288.49ms, fracRes: 0.3008, norm(attn): 0.1777, norm(output): 0.3652, norm(x): 0.3324, norm(y): 1.0103, norm:1.8987, tok/sec: 101725.50, flops:106.76, batch-reuse:1
@ 2290 train 4.8865 , allloss: 4.8877, dt: 1310.47ms, fracRes: 0.2997, norm(attn): 0.1758, norm(output): 0.3652, norm(x): 0.3315, norm(y): 1.0103, norm:1.9235, tok/sec: 100018.76, flops:104.97, batch-reuse:1
@ 2291 train 5.0482 , allloss: 5.0492, dt: 1331.16ms, fracRes: 0.3033, norm(attn): 0.1719, norm(output): 0.3672, norm(x): 0.3327, norm(y): 1.0103, norm:1.8678, tok/sec: 98464.67, flops:103.34, batch-reuse:1
@ 2292 train 4.9386 , allloss: 4.9395, dt: 1311.18ms, fracRes: 0.3020, norm(attn): 0.1768, norm(output): 0.3672, norm(x): 0.3338, norm(y): 1.0102, norm:1.8643, tok/sec: 99964.73, flops:104.91, batch-reuse:1
@ 2293 train 5.0166 , allloss: 5.0190, dt: 1337.80ms, fracRes: 0.3021, norm(attn): 0.1758, norm(output): 0.3652, norm(x): 0.3336, norm(y): 1.0102, norm:1.8095, tok/sec: 97975.59, flops:102.83, batch-reuse:1
@ 2294 train 4.9900 , allloss: 4.9908, dt: 1336.28ms, fracRes: 0.3024, norm(attn): 0.1719, norm(output): 0.3691, norm(x): 0.3324, norm(y): 1.0104, norm:2.1284, tok/sec: 98087.55, flops:102.94, batch-reuse:1
@ 2295 train 4.9225 , allloss: 4.9233, dt: 1314.84ms, fracRes: 0.3000, norm(attn): 0.1758, norm(output): 0.3672, norm(x): 0.3331, norm(y): 1.0103, norm:1.8926, tok/sec: 99686.96, flops:104.62, batch-reuse:1
@ 2296 train 4.9212 , allloss: 4.9223, dt: 1296.06ms, fracRes: 0.2999, norm(attn): 0.1748, norm(output): 0.3691, norm(x): 0.3350, norm(y): 1.0103, norm:1.8523, tok/sec: 101131.41, flops:106.14, batch-reuse:1
@ 2297 train 4.9130 , allloss: 4.9142, dt: 1310.23ms, fracRes: 0.3017, norm(attn): 0.1738, norm(output): 0.3711, norm(x): 0.3342, norm(y): 1.0104, norm:1.4718, tok/sec: 100037.27, flops:104.99, batch-reuse:1
@ 2298 train 4.9503 , allloss: 4.9517, dt: 1317.52ms, fracRes: 0.3012, norm(attn): 0.1738, norm(output): 0.3711, norm(x): 0.3353, norm(y): 1.0103, norm:2.3091, tok/sec: 99483.89, flops:104.41, batch-reuse:1
@ 2299 train 4.9517 , allloss: 4.9530, dt: 1344.24ms, fracRes: 0.3021, norm(attn): 0.1738, norm(output): 0.3711, norm(x): 0.3348, norm(y): 1.0104, norm:1.7284, tok/sec: 97506.49, flops:102.33, batch-reuse:1
@ 2300 train 4.8914 , allloss: 4.8932, dt: 1338.56ms, fracRes: 0.3025, norm(attn): 0.1758, norm(output): 0.3711, norm(x): 0.3337, norm(y): 1.0103, norm:2.3756, tok/sec: 97920.20, flops:102.77, batch-reuse:1
@ 2301 train 4.9691 , allloss: 4.9701, dt: 1324.71ms, fracRes: 0.3027, norm(attn): 0.1729, norm(output): 0.3691, norm(x): 0.3343, norm(y): 1.0104, norm:1.8286, tok/sec: 98943.66, flops:103.84, batch-reuse:1
@ 2302 train 4.9138 , allloss: 4.9147, dt: 1313.48ms, fracRes: 0.3027, norm(attn): 0.1748, norm(output): 0.3691, norm(x): 0.3347, norm(y): 1.0104, norm:1.9352, tok/sec: 99789.61, flops:104.73, batch-reuse:1
@ 2303 train 4.9539 , allloss: 4.9546, dt: 1339.58ms, fracRes: 0.3027, norm(attn): 0.1748, norm(output): 0.3711, norm(x): 0.3362, norm(y): 1.0103, norm:1.9327, tok/sec: 97845.69, flops:102.69, batch-reuse:1
@ 2304 train 4.9811 , allloss: 4.9818, dt: 1330.18ms, fracRes: 0.3049, norm(attn): 0.1738, norm(output): 0.3672, norm(x): 0.3341, norm(y): 1.0104, norm:1.9721, tok/sec: 98537.27, flops:103.42, batch-reuse:1
@ 2305 train 4.9126 , allloss: 4.9134, dt: 1341.12ms, fracRes: 0.3059, norm(attn): 0.1729, norm(output): 0.3672, norm(x): 0.3326, norm(y): 1.0104, norm:1.7389, tok/sec: 97733.31, flops:102.57, batch-reuse:1
@ 2306 train 4.9721 , allloss: 4.9730, dt: 1333.56ms, fracRes: 0.3033, norm(attn): 0.1748, norm(output): 0.3711, norm(x): 0.3362, norm(y): 1.0103, norm:1.9842, tok/sec: 98287.63, flops:103.15, batch-reuse:1
@ 2307 train 4.9984 , allloss: 4.9992, dt: 1336.11ms, fracRes: 0.3056, norm(attn): 0.1719, norm(output): 0.3652, norm(x): 0.3346, norm(y): 1.0104, norm:1.7995, tok/sec: 98099.35, flops:102.96, batch-reuse:1
@ 2308 train 4.9693 , allloss: 4.9704, dt: 1334.57ms, fracRes: 0.3020, norm(attn): 0.1738, norm(output): 0.3691, norm(x): 0.3359, norm(y): 1.0103, norm:1.9061, tok/sec: 98212.79, flops:103.08, batch-reuse:1
@ 2309 train 4.8702 , allloss: 4.8712, dt: 1333.45ms, fracRes: 0.3058, norm(attn): 0.1748, norm(output): 0.3652, norm(x): 0.3333, norm(y): 1.0104, norm:1.9597, tok/sec: 98295.08, flops:103.16, batch-reuse:1
@ 2310 train 5.0368 , allloss: 5.0379, dt: 1329.44ms, fracRes: 0.3054, norm(attn): 0.1738, norm(output): 0.3691, norm(x): 0.3347, norm(y): 1.0104, norm:1.9931, tok/sec: 98592.23, flops:103.47, batch-reuse:1
@ 2311 train 4.9846 , allloss: 4.9853, dt: 1313.06ms, fracRes: 0.3012, norm(attn): 0.1748, norm(output): 0.3711, norm(x): 0.3369, norm(y): 1.0104, norm:2.2419, tok/sec: 99821.42, flops:104.76, batch-reuse:1
@ 2312 train 4.9750 , allloss: 4.9759, dt: 1299.45ms, fracRes: 0.2987, norm(attn): 0.1787, norm(output): 0.3711, norm(x): 0.3383, norm(y): 1.0103, norm:1.9886, tok/sec: 100867.44, flops:105.86, batch-reuse:1
@ 2313 train 4.9957 , allloss: 4.9967, dt: 1296.54ms, fracRes: 0.3009, norm(attn): 0.1748, norm(output): 0.3711, norm(x): 0.3369, norm(y): 1.0105, norm:1.6849, tok/sec: 101093.34, flops:106.10, batch-reuse:1
@ 2314 train 4.9665 , allloss: 4.9673, dt: 1312.00ms, fracRes: 0.3010, norm(attn): 0.1738, norm(output): 0.3691, norm(x): 0.3371, norm(y): 1.0104, norm:1.8864, tok/sec: 99902.69, flops:104.85, batch-reuse:1
@ 2315 train 4.9119 , allloss: 4.9127, dt: 1289.92ms, fracRes: 0.2996, norm(attn): 0.1787, norm(output): 0.3691, norm(x): 0.3357, norm(y): 1.0104, norm:1.6726, tok/sec: 101612.12, flops:106.64, batch-reuse:1
@ 2316 train 4.9498 , allloss: 4.9508, dt: 1305.54ms, fracRes: 0.2991, norm(attn): 0.1787, norm(output): 0.3672, norm(x): 0.3335, norm(y): 1.0104, norm:1.7712, tok/sec: 100396.71, flops:105.37, batch-reuse:1
@ 2317 train 4.9040 , allloss: 4.9047, dt: 1321.36ms, fracRes: 0.3007, norm(attn): 0.1768, norm(output): 0.3711, norm(x): 0.3381, norm(y): 1.0104, norm:2.2616, tok/sec: 99194.46, flops:104.11, batch-reuse:1
@ 2318 train 4.9526 , allloss: 4.9544, dt: 1286.30ms, fracRes: 0.2991, norm(attn): 0.1768, norm(output): 0.3691, norm(x): 0.3389, norm(y): 1.0103, norm:1.7413, tok/sec: 101898.81, flops:106.94, batch-reuse:1
@ 2319 train 4.9665 , allloss: 4.9671, dt: 1290.45ms, fracRes: 0.3002, norm(attn): 0.1768, norm(output): 0.3672, norm(x): 0.3371, norm(y): 1.0104, norm:2.0068, tok/sec: 101570.48, flops:106.60, batch-reuse:1
@ 2320 train 4.9019 , allloss: 4.9026, dt: 1308.11ms, fracRes: 0.3024, norm(attn): 0.1768, norm(output): 0.3672, norm(x): 0.3361, norm(y): 1.0104, norm:1.7171, tok/sec: 100199.42, flops:105.16, batch-reuse:1
@ 2321 train 4.8355 , allloss: 4.8372, dt: 1316.11ms, fracRes: 0.3043, norm(attn): 0.1758, norm(output): 0.3711, norm(x): 0.3371, norm(y): 1.0104, norm:2.2758, tok/sec: 99590.25, flops:104.52, batch-reuse:1
@ 2322 train 4.9362 , allloss: 4.9370, dt: 1313.92ms, fracRes: 0.3035, norm(attn): 0.1758, norm(output): 0.3691, norm(x): 0.3365, norm(y): 1.0104, norm:2.1109, tok/sec: 99756.71, flops:104.70, batch-reuse:1
@ 2323 train 4.8073 , allloss: 4.8082, dt: 1288.35ms, fracRes: 0.3030, norm(attn): 0.1768, norm(output): 0.3672, norm(x): 0.3373, norm(y): 1.0104, norm:2.0721, tok/sec: 101736.68, flops:106.77, batch-reuse:1
@ 2324 train 4.9561 , allloss: 4.9574, dt: 1288.75ms, fracRes: 0.3017, norm(attn): 0.1768, norm(output): 0.3691, norm(x): 0.3376, norm(y): 1.0104, norm:2.2885, tok/sec: 101704.95, flops:106.74, batch-reuse:1
@ 2325 train 4.9793 , allloss: 4.9805, dt: 1328.07ms, fracRes: 0.3018, norm(attn): 0.1748, norm(output): 0.3711, norm(x): 0.3368, norm(y): 1.0105, norm:1.9909, tok/sec: 98693.39, flops:103.58, batch-reuse:1
@ 2326 train 4.9022 , allloss: 4.9031, dt: 1292.73ms, fracRes: 0.3025, norm(attn): 0.1777, norm(output): 0.3730, norm(x): 0.3389, norm(y): 1.0105, norm:2.8179, tok/sec: 101391.68, flops:106.41, batch-reuse:1
@ 2327 train 4.8932 , allloss: 4.8939, dt: 1310.43ms, fracRes: 0.3059, norm(attn): 0.1758, norm(output): 0.3672, norm(x): 0.3348, norm(y): 1.0105, norm:1.6677, tok/sec: 100021.94, flops:104.97, batch-reuse:1
@ 2328 train 4.8433 , allloss: 4.8450, dt: 1314.18ms, fracRes: 0.3030, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3372, norm(y): 1.0104, norm:2.2561, tok/sec: 99736.47, flops:104.68, batch-reuse:1
@ 2329 train 4.6891 , allloss: 4.7283, dt: 1321.12ms, fracRes: 0.3064, norm(attn): 0.1816, norm(output): 0.3750, norm(x): 0.3430, norm(y): 1.0105, norm:3.5637, tok/sec: 99212.54, flops:104.13, batch-reuse:1
@ 2330 train 4.9683 , allloss: 4.9698, dt: 1289.58ms, fracRes: 0.3053, norm(attn): 0.1748, norm(output): 0.3730, norm(x): 0.3376, norm(y): 1.0105, norm:2.5641, tok/sec: 101639.66, flops:106.67, batch-reuse:1
@ 2331 train 4.7997 , allloss: 4.8014, dt: 1318.40ms, fracRes: 0.3053, norm(attn): 0.1758, norm(output): 0.3711, norm(x): 0.3357, norm(y): 1.0106, norm:2.1135, tok/sec: 99417.77, flops:104.34, batch-reuse:1
@ 2332 train 4.9435 , allloss: 4.9453, dt: 1343.69ms, fracRes: 0.3065, norm(attn): 0.1738, norm(output): 0.3691, norm(x): 0.3345, norm(y): 1.0105, norm:2.8055, tok/sec: 97546.56, flops:102.38, batch-reuse:1
@ 2333 train 4.8169 , allloss: 4.8192, dt: 1309.26ms, fracRes: 0.3034, norm(attn): 0.1807, norm(output): 0.3711, norm(x): 0.3351, norm(y): 1.0103, norm:2.1156, tok/sec: 100111.41, flops:105.07, batch-reuse:1
@ 2334 train 4.8007 , allloss: 4.8013, dt: 1306.73ms, fracRes: 0.3091, norm(attn): 0.1738, norm(output): 0.3652, norm(x): 0.3318, norm(y): 1.0106, norm:2.1728, tok/sec: 100305.71, flops:105.27, batch-reuse:1
@ 2335 train 4.9279 , allloss: 4.9288, dt: 1275.00ms, fracRes: 0.3087, norm(attn): 0.1738, norm(output): 0.3691, norm(x): 0.3353, norm(y): 1.0106, norm:2.7177, tok/sec: 102801.37, flops:107.89, batch-reuse:1
@ 2336 train 5.0008 , allloss: 5.0021, dt: 1285.04ms, fracRes: 0.3080, norm(attn): 0.1729, norm(output): 0.3730, norm(x): 0.3379, norm(y): 1.0105, norm:1.8667, tok/sec: 101998.07, flops:107.05, batch-reuse:1
@ 2337 train 4.8723 , allloss: 4.8732, dt: 1289.00ms, fracRes: 0.3039, norm(attn): 0.1758, norm(output): 0.3711, norm(x): 0.3370, norm(y): 1.0106, norm:2.2522, tok/sec: 101684.86, flops:106.72, batch-reuse:1
@ 2338 train 4.8938 , allloss: 4.8950, dt: 1293.33ms, fracRes: 0.3037, norm(attn): 0.1797, norm(output): 0.3711, norm(x): 0.3369, norm(y): 1.0105, norm:1.9418, tok/sec: 101344.65, flops:106.36, batch-reuse:1
@ 2339 train 4.8610 , allloss: 4.8620, dt: 1282.94ms, fracRes: 0.3036, norm(attn): 0.1777, norm(output): 0.3711, norm(x): 0.3358, norm(y): 1.0105, norm:2.3212, tok/sec: 102165.67, flops:107.22, batch-reuse:1
@ 2340 train 4.8864 , allloss: 4.8873, dt: 1292.46ms, fracRes: 0.3036, norm(attn): 0.1758, norm(output): 0.3691, norm(x): 0.3359, norm(y): 1.0105, norm:2.2692, tok/sec: 101413.13, flops:106.43, batch-reuse:1
@ 2341 train 4.8854 , allloss: 4.8870, dt: 1294.91ms, fracRes: 0.3014, norm(attn): 0.1777, norm(output): 0.3711, norm(x): 0.3367, norm(y): 1.0105, norm:2.0252, tok/sec: 101221.01, flops:106.23, batch-reuse:1
@ 2342 train 4.7862 , allloss: 4.7874, dt: 1330.00ms, fracRes: 0.2993, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3391, norm(y): 1.0104, norm:2.0408, tok/sec: 98550.59, flops:103.43, batch-reuse:1
@ 2343 train 4.8889 , allloss: 4.8901, dt: 1335.33ms, fracRes: 0.2997, norm(attn): 0.1807, norm(output): 0.3730, norm(x): 0.3384, norm(y): 1.0104, norm:2.2234, tok/sec: 98156.96, flops:103.02, batch-reuse:1
@ 2344 train 4.9769 , allloss: 4.9787, dt: 1303.18ms, fracRes: 0.3020, norm(attn): 0.1777, norm(output): 0.3730, norm(x): 0.3394, norm(y): 1.0105, norm:1.8736, tok/sec: 100578.26, flops:105.56, batch-reuse:1
@ 2345 train 4.8041 , allloss: 4.8089, dt: 1292.53ms, fracRes: 0.3026, norm(attn): 0.1758, norm(output): 0.3730, norm(x): 0.3394, norm(y): 1.0105, norm:2.1832, tok/sec: 101407.54, flops:106.43, batch-reuse:1
@ 2346 train 4.9295 , allloss: 4.9327, dt: 1306.21ms, fracRes: 0.3054, norm(attn): 0.1738, norm(output): 0.3730, norm(x): 0.3404, norm(y): 1.0106, norm:2.2841, tok/sec: 100345.31, flops:105.31, batch-reuse:1
@ 2347 train 4.8088 , allloss: 4.8096, dt: 1284.66ms, fracRes: 0.3024, norm(attn): 0.1758, norm(output): 0.3711, norm(x): 0.3377, norm(y): 1.0106, norm:1.9952, tok/sec: 102028.18, flops:107.08, batch-reuse:1
@ 2348 train 4.9211 , allloss: 4.9230, dt: 1300.98ms, fracRes: 0.3026, norm(attn): 0.1758, norm(output): 0.3711, norm(x): 0.3378, norm(y): 1.0105, norm:2.1613, tok/sec: 100748.33, flops:105.74, batch-reuse:1
@ 2349 train 4.9287 , allloss: 4.9300, dt: 1294.48ms, fracRes: 0.3058, norm(attn): 0.1748, norm(output): 0.3730, norm(x): 0.3372, norm(y): 1.0105, norm:1.8805, tok/sec: 101254.48, flops:106.27, batch-reuse:1
@ 2350 train 4.8179 , allloss: 4.8187, dt: 1298.59ms, fracRes: 0.3043, norm(attn): 0.1758, norm(output): 0.3730, norm(x): 0.3386, norm(y): 1.0105, norm:2.1726, tok/sec: 100933.85, flops:105.93, batch-reuse:1
@ 2351 train 4.9676 , allloss: 4.9686, dt: 1288.54ms, fracRes: 0.3042, norm(attn): 0.1777, norm(output): 0.3730, norm(x): 0.3392, norm(y): 1.0105, norm:2.0686, tok/sec: 101721.54, flops:106.76, batch-reuse:1
@ 2352 train 4.9035 , allloss: 4.9047, dt: 1271.78ms, fracRes: 0.3045, norm(attn): 0.1758, norm(output): 0.3730, norm(x): 0.3416, norm(y): 1.0105, norm:2.1810, tok/sec: 103061.85, flops:108.17, batch-reuse:1
@ 2353 train 4.8993 , allloss: 4.9012, dt: 1291.77ms, fracRes: 0.3093, norm(attn): 0.1777, norm(output): 0.3711, norm(x): 0.3385, norm(y): 1.0106, norm:2.0825, tok/sec: 101467.30, flops:106.49, batch-reuse:1
@ 2354 train 4.9338 , allloss: 4.9355, dt: 1291.18ms, fracRes: 0.3109, norm(attn): 0.1787, norm(output): 0.3711, norm(x): 0.3372, norm(y): 1.0106, norm:2.8503, tok/sec: 101513.56, flops:106.54, batch-reuse:1
@ 2355 train 4.8852 , allloss: 4.8861, dt: 1274.37ms, fracRes: 0.3077, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3364, norm(y): 1.0105, norm:1.9253, tok/sec: 102852.24, flops:107.95, batch-reuse:1
@ 2356 train 4.9831 , allloss: 4.9846, dt: 1301.38ms, fracRes: 0.3083, norm(attn): 0.1777, norm(output): 0.3691, norm(x): 0.3356, norm(y): 1.0105, norm:2.0578, tok/sec: 100717.60, flops:105.70, batch-reuse:1
@ 2357 train 4.9478 , allloss: 4.9489, dt: 1289.32ms, fracRes: 0.3051, norm(attn): 0.1826, norm(output): 0.3691, norm(x): 0.3387, norm(y): 1.0105, norm:2.1859, tok/sec: 101659.40, flops:106.69, batch-reuse:1
@ 2358 train 4.9393 , allloss: 4.9407, dt: 1305.15ms, fracRes: 0.3037, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3409, norm(y): 1.0104, norm:1.8418, tok/sec: 100427.03, flops:105.40, batch-reuse:1
@ 2359 train 4.8865 , allloss: 4.8877, dt: 1318.21ms, fracRes: 0.3053, norm(attn): 0.1768, norm(output): 0.3711, norm(x): 0.3386, norm(y): 1.0105, norm:2.1489, tok/sec: 99431.81, flops:104.36, batch-reuse:1
@ 2360 train 4.8973 , allloss: 4.8991, dt: 1341.79ms, fracRes: 0.3054, norm(attn): 0.1777, norm(output): 0.3711, norm(x): 0.3366, norm(y): 1.0105, norm:1.8576, tok/sec: 97684.77, flops:102.52, batch-reuse:1
@ 2361 train 4.8785 , allloss: 4.8793, dt: 1336.29ms, fracRes: 0.3049, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3389, norm(y): 1.0105, norm:1.5854, tok/sec: 98086.31, flops:102.94, batch-reuse:1
@ 2362 train 4.8886 , allloss: 4.8894, dt: 1312.75ms, fracRes: 0.3055, norm(attn): 0.1768, norm(output): 0.3730, norm(x): 0.3403, norm(y): 1.0106, norm:1.9271, tok/sec: 99845.61, flops:104.79, batch-reuse:1
@ 2363 train 4.9433 , allloss: 4.9446, dt: 1323.45ms, fracRes: 0.3085, norm(attn): 0.1729, norm(output): 0.3730, norm(x): 0.3406, norm(y): 1.0106, norm:1.8335, tok/sec: 99037.85, flops:103.94, batch-reuse:1
@ 2364 train 4.9475 , allloss: 4.9484, dt: 1302.39ms, fracRes: 0.3093, norm(attn): 0.1738, norm(output): 0.3730, norm(x): 0.3413, norm(y): 1.0106, norm:2.1972, tok/sec: 100639.84, flops:105.62, batch-reuse:1
@ 2365 train 4.8997 , allloss: 4.9012, dt: 1284.39ms, fracRes: 0.3095, norm(attn): 0.1758, norm(output): 0.3750, norm(x): 0.3411, norm(y): 1.0105, norm:1.9659, tok/sec: 102049.83, flops:107.10, batch-reuse:1
@ 2366 train 4.9199 , allloss: 4.9222, dt: 1296.43ms, fracRes: 0.3090, norm(attn): 0.1768, norm(output): 0.3730, norm(x): 0.3396, norm(y): 1.0105, norm:1.9308, tok/sec: 101102.16, flops:106.11, batch-reuse:1
@ 2367 train 4.8161 , allloss: 4.8166, dt: 1274.42ms, fracRes: 0.3087, norm(attn): 0.1738, norm(output): 0.3730, norm(x): 0.3375, norm(y): 1.0106, norm:1.9775, tok/sec: 102848.06, flops:107.94, batch-reuse:1
@ 2368 train 4.7623 , allloss: 4.7631, dt: 1291.48ms, fracRes: 0.3047, norm(attn): 0.1748, norm(output): 0.3750, norm(x): 0.3397, norm(y): 1.0106, norm:2.0050, tok/sec: 101489.91, flops:106.52, batch-reuse:1
@ 2369 train 4.7880 , allloss: 4.7891, dt: 1300.34ms, fracRes: 0.3024, norm(attn): 0.1787, norm(output): 0.3750, norm(x): 0.3411, norm(y): 1.0106, norm:2.0604, tok/sec: 100798.37, flops:105.79, batch-reuse:1
@ 2370 train 4.8370 , allloss: 4.8380, dt: 1320.10ms, fracRes: 0.3064, norm(attn): 0.1758, norm(output): 0.3750, norm(x): 0.3399, norm(y): 1.0106, norm:1.8999, tok/sec: 99289.19, flops:104.21, batch-reuse:1
@ 2371 train 4.6757 , allloss: 4.6768, dt: 1350.08ms, fracRes: 0.3054, norm(attn): 0.1797, norm(output): 0.3730, norm(x): 0.3371, norm(y): 1.0106, norm:2.2493, tok/sec: 97084.31, flops:101.89, batch-reuse:1
@ 2372 train 4.7320 , allloss: 4.7331, dt: 1311.11ms, fracRes: 0.3012, norm(attn): 0.1797, norm(output): 0.3750, norm(x): 0.3408, norm(y): 1.0105, norm:2.1341, tok/sec: 99970.36, flops:104.92, batch-reuse:1
@ 2373 train 4.7846 , allloss: 4.7856, dt: 1309.55ms, fracRes: 0.3015, norm(attn): 0.1777, norm(output): 0.3730, norm(x): 0.3422, norm(y): 1.0106, norm:1.8085, tok/sec: 100089.45, flops:105.05, batch-reuse:1
@ 2374 train 4.7590 , allloss: 4.7601, dt: 1333.81ms, fracRes: 0.3052, norm(attn): 0.1768, norm(output): 0.3730, norm(x): 0.3420, norm(y): 1.0106, norm:2.4714, tok/sec: 98268.81, flops:103.13, batch-reuse:1
@ 2375 train 4.7816 , allloss: 4.7824, dt: 1338.02ms, fracRes: 0.3073, norm(attn): 0.1768, norm(output): 0.3730, norm(x): 0.3404, norm(y): 1.0106, norm:2.1533, tok/sec: 97959.32, flops:102.81, batch-reuse:1
@ 2376 train 4.7983 , allloss: 4.7991, dt: 1332.62ms, fracRes: 0.3074, norm(attn): 0.1816, norm(output): 0.3711, norm(x): 0.3407, norm(y): 1.0105, norm:1.6143, tok/sec: 98356.59, flops:103.23, batch-reuse:1
@ 2377 train 4.7926 , allloss: 4.7937, dt: 1333.53ms, fracRes: 0.3075, norm(attn): 0.1797, norm(output): 0.3730, norm(x): 0.3411, norm(y): 1.0106, norm:2.0679, tok/sec: 98289.72, flops:103.16, batch-reuse:1
@ 2378 train 4.7725 , allloss: 4.7742, dt: 1333.42ms, fracRes: 0.3065, norm(attn): 0.1797, norm(output): 0.3711, norm(x): 0.3417, norm(y): 1.0107, norm:1.8447, tok/sec: 98297.78, flops:103.17, batch-reuse:1
@ 2379 train 4.7198 , allloss: 4.7215, dt: 1335.54ms, fracRes: 0.3053, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3417, norm(y): 1.0106, norm:1.9776, tok/sec: 98141.59, flops:103.00, batch-reuse:1
@ 2380 train 5.0068 , allloss: 5.0079, dt: 1307.08ms, fracRes: 0.3088, norm(attn): 0.1787, norm(output): 0.3730, norm(x): 0.3426, norm(y): 1.0106, norm:2.9283, tok/sec: 100278.59, flops:105.24, batch-reuse:1
@ 2381 train 4.8403 , allloss: 4.8433, dt: 1314.89ms, fracRes: 0.3100, norm(attn): 0.1787, norm(output): 0.3730, norm(x): 0.3404, norm(y): 1.0106, norm:2.0628, tok/sec: 99682.51, flops:104.62, batch-reuse:1
@ 2382 train 4.8112 , allloss: 4.8124, dt: 1343.24ms, fracRes: 0.3103, norm(attn): 0.1738, norm(output): 0.3730, norm(x): 0.3404, norm(y): 1.0106, norm:2.0398, tok/sec: 97578.80, flops:102.41, batch-reuse:1
@ 2383 train 4.7820 , allloss: 4.7838, dt: 1326.87ms, fracRes: 0.3097, norm(attn): 0.1758, norm(output): 0.3711, norm(x): 0.3393, norm(y): 1.0106, norm:1.9758, tok/sec: 98782.99, flops:103.67, batch-reuse:1
@ 2384 train 4.8157 , allloss: 4.8202, dt: 1321.98ms, fracRes: 0.3112, norm(attn): 0.1748, norm(output): 0.3730, norm(x): 0.3401, norm(y): 1.0106, norm:2.1174, tok/sec: 99148.48, flops:104.06, batch-reuse:1
@ 2385 train 4.7681 , allloss: 4.7694, dt: 1350.37ms, fracRes: 0.3122, norm(attn): 0.1738, norm(output): 0.3730, norm(x): 0.3409, norm(y): 1.0106, norm:1.9148, tok/sec: 97063.72, flops:101.87, batch-reuse:1
@ 2386 train 4.7297 , allloss: 4.7306, dt: 1336.96ms, fracRes: 0.3147, norm(attn): 0.1748, norm(output): 0.3711, norm(x): 0.3384, norm(y): 1.0107, norm:2.1972, tok/sec: 98037.02, flops:102.89, batch-reuse:1
@ 2387 train 4.7667 , allloss: 4.7674, dt: 1355.69ms, fracRes: 0.3113, norm(attn): 0.1768, norm(output): 0.3730, norm(x): 0.3400, norm(y): 1.0107, norm:1.9657, tok/sec: 96682.90, flops:101.47, batch-reuse:1
@ 2388 train 4.8142 , allloss: 4.8159, dt: 1322.83ms, fracRes: 0.3085, norm(attn): 0.1797, norm(output): 0.3730, norm(x): 0.3404, norm(y): 1.0106, norm:2.1400, tok/sec: 99084.65, flops:103.99, batch-reuse:1
@ 2389 train 4.7377 , allloss: 4.7393, dt: 1302.75ms, fracRes: 0.3065, norm(attn): 0.1797, norm(output): 0.3730, norm(x): 0.3402, norm(y): 1.0106, norm:2.0100, tok/sec: 100611.96, flops:105.59, batch-reuse:1
@ 2390 train 4.8185 , allloss: 4.8197, dt: 1292.59ms, fracRes: 0.3091, norm(attn): 0.1807, norm(output): 0.3730, norm(x): 0.3414, norm(y): 1.0106, norm:1.9310, tok/sec: 101402.36, flops:106.42, batch-reuse:1
@ 2391 train 4.8706 , allloss: 4.8720, dt: 1306.76ms, fracRes: 0.3054, norm(attn): 0.1826, norm(output): 0.3730, norm(x): 0.3423, norm(y): 1.0106, norm:1.9031, tok/sec: 100302.98, flops:105.27, batch-reuse:1
@ 2392 train 4.8128 , allloss: 4.8139, dt: 1291.92ms, fracRes: 0.3085, norm(attn): 0.1807, norm(output): 0.3730, norm(x): 0.3401, norm(y): 1.0107, norm:2.0329, tok/sec: 101455.09, flops:106.48, batch-reuse:1
@ 2393 train 4.9154 , allloss: 4.9164, dt: 1315.73ms, fracRes: 0.3082, norm(attn): 0.1777, norm(output): 0.3730, norm(x): 0.3416, norm(y): 1.0107, norm:2.2047, tok/sec: 99619.29, flops:104.55, batch-reuse:1
@ 2394 train 4.8245 , allloss: 4.8258, dt: 1276.26ms, fracRes: 0.3046, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3416, norm(y): 1.0106, norm:2.2880, tok/sec: 102699.70, flops:107.79, batch-reuse:1
@ 2395 train 4.7820 , allloss: 4.7834, dt: 1286.83ms, fracRes: 0.3064, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3415, norm(y): 1.0106, norm:2.2515, tok/sec: 101856.43, flops:106.90, batch-reuse:1
@ 2396 train 4.7775 , allloss: 4.7787, dt: 1314.62ms, fracRes: 0.3072, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3406, norm(y): 1.0106, norm:2.0860, tok/sec: 99703.50, flops:104.64, batch-reuse:1
@ 2397 train 4.7477 , allloss: 4.7495, dt: 1301.50ms, fracRes: 0.3071, norm(attn): 0.1865, norm(output): 0.3691, norm(x): 0.3409, norm(y): 1.0106, norm:2.4332, tok/sec: 100708.28, flops:105.70, batch-reuse:1
@ 2398 train 4.8243 , allloss: 4.8256, dt: 1316.57ms, fracRes: 0.3112, norm(attn): 0.1816, norm(output): 0.3711, norm(x): 0.3422, norm(y): 1.0107, norm:1.8347, tok/sec: 99555.44, flops:104.49, batch-reuse:1
@ 2399 train 4.7426 , allloss: 4.7434, dt: 1344.96ms, fracRes: 0.3104, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3431, norm(y): 1.0107, norm:2.0401, tok/sec: 97454.46, flops:102.28, batch-reuse:1
@ 2400 train 4.7435 , allloss: 4.7446, dt: 1299.14ms, fracRes: 0.3093, norm(attn): 0.1807, norm(output): 0.3711, norm(x): 0.3416, norm(y): 1.0107, norm:1.9290, tok/sec: 100891.25, flops:105.89, batch-reuse:1
@ 2401 train 4.8348 , allloss: 4.8370, dt: 1323.52ms, fracRes: 0.3088, norm(attn): 0.1826, norm(output): 0.3711, norm(x): 0.3426, norm(y): 1.0106, norm:1.7404, tok/sec: 99033.01, flops:103.94, batch-reuse:1
@ 2402 train 4.8049 , allloss: 4.8058, dt: 1322.00ms, fracRes: 0.3109, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3422, norm(y): 1.0108, norm:2.0469, tok/sec: 99146.42, flops:104.06, batch-reuse:1
@ 2403 train 4.6984 , allloss: 4.7000, dt: 1318.49ms, fracRes: 0.3130, norm(attn): 0.1797, norm(output): 0.3730, norm(x): 0.3421, norm(y): 1.0108, norm:1.9476, tok/sec: 99410.53, flops:104.33, batch-reuse:1
@ 2404 train 4.6976 , allloss: 4.6984, dt: 1314.80ms, fracRes: 0.3074, norm(attn): 0.1797, norm(output): 0.3711, norm(x): 0.3419, norm(y): 1.0107, norm:2.0317, tok/sec: 99689.79, flops:104.63, batch-reuse:1
@ 2405 train 4.7988 , allloss: 4.8000, dt: 1296.32ms, fracRes: 0.3071, norm(attn): 0.1816, norm(output): 0.3711, norm(x): 0.3425, norm(y): 1.0107, norm:2.2270, tok/sec: 101110.73, flops:106.12, batch-reuse:1
@ 2406 train 4.7342 , allloss: 4.7364, dt: 1312.83ms, fracRes: 0.3079, norm(attn): 0.1836, norm(output): 0.3691, norm(x): 0.3419, norm(y): 1.0107, norm:2.1179, tok/sec: 99839.59, flops:104.78, batch-reuse:1
@ 2407 train 4.7144 , allloss: 4.7154, dt: 1322.80ms, fracRes: 0.3136, norm(attn): 0.1816, norm(output): 0.3691, norm(x): 0.3418, norm(y): 1.0108, norm:1.9940, tok/sec: 99086.92, flops:103.99, batch-reuse:1
@ 2408 train 4.7566 , allloss: 4.7580, dt: 1331.18ms, fracRes: 0.3144, norm(attn): 0.1807, norm(output): 0.3691, norm(x): 0.3421, norm(y): 1.0108, norm:1.9947, tok/sec: 98463.17, flops:103.34, batch-reuse:1
@ 2409 train 4.7590 , allloss: 4.7602, dt: 1331.80ms, fracRes: 0.3106, norm(attn): 0.1846, norm(output): 0.3672, norm(x): 0.3436, norm(y): 1.0107, norm:1.7581, tok/sec: 98417.43, flops:103.29, batch-reuse:1
@ 2410 train 4.7230 , allloss: 4.7249, dt: 1320.94ms, fracRes: 0.3087, norm(attn): 0.1895, norm(output): 0.3613, norm(x): 0.3426, norm(y): 1.0107, norm:1.9381, tok/sec: 99226.16, flops:104.14, batch-reuse:1
@ 2411 train 4.7469 , allloss: 4.7491, dt: 1341.71ms, fracRes: 0.3067, norm(attn): 0.1934, norm(output): 0.3555, norm(x): 0.3410, norm(y): 1.0107, norm:1.9744, tok/sec: 97690.25, flops:102.53, batch-reuse:1
@ 2412 train 4.7983 , allloss: 4.8031, dt: 1348.63ms, fracRes: 0.3069, norm(attn): 0.1953, norm(output): 0.3633, norm(x): 0.3445, norm(y): 1.0106, norm:2.3382, tok/sec: 97188.64, flops:102.00, batch-reuse:1
@ 2413 train 4.8378 , allloss: 4.8405, dt: 1348.60ms, fracRes: 0.3068, norm(attn): 0.1934, norm(output): 0.3633, norm(x): 0.3456, norm(y): 1.0107, norm:1.7463, tok/sec: 97191.32, flops:102.00, batch-reuse:1
@ 2414 train 4.8531 , allloss: 4.8549, dt: 1319.48ms, fracRes: 0.3071, norm(attn): 0.1953, norm(output): 0.3633, norm(x): 0.3448, norm(y): 1.0108, norm:2.4366, tok/sec: 99336.18, flops:104.26, batch-reuse:1
@ 2415 train 4.9224 , allloss: 4.9240, dt: 1298.56ms, fracRes: 0.3056, norm(attn): 0.1914, norm(output): 0.3652, norm(x): 0.3470, norm(y): 1.0107, norm:1.9981, tok/sec: 100936.17, flops:105.93, batch-reuse:1
@ 2416 train 4.8665 , allloss: 4.8679, dt: 1311.67ms, fracRes: 0.3067, norm(attn): 0.1914, norm(output): 0.3613, norm(x): 0.3472, norm(y): 1.0107, norm:2.1920, tok/sec: 99927.30, flops:104.88, batch-reuse:1
@ 2417 train 4.8936 , allloss: 4.8948, dt: 1343.59ms, fracRes: 0.3069, norm(attn): 0.1943, norm(output): 0.3594, norm(x): 0.3466, norm(y): 1.0106, norm:1.9443, tok/sec: 97553.39, flops:102.38, batch-reuse:1
@ 2418 train 4.9404 , allloss: 4.9425, dt: 1320.80ms, fracRes: 0.3112, norm(attn): 0.1904, norm(output): 0.3633, norm(x): 0.3463, norm(y): 1.0106, norm:2.1314, tok/sec: 99236.66, flops:104.15, batch-reuse:1
@ 2419 train 4.9727 , allloss: 4.9741, dt: 1291.50ms, fracRes: 0.3144, norm(attn): 0.1904, norm(output): 0.3633, norm(x): 0.3460, norm(y): 1.0107, norm:2.4428, tok/sec: 101488.58, flops:106.51, batch-reuse:1
@ 2420 train 4.9400 , allloss: 4.9415, dt: 1272.84ms, fracRes: 0.3123, norm(attn): 0.1895, norm(output): 0.3633, norm(x): 0.3462, norm(y): 1.0107, norm:2.3903, tok/sec: 102976.04, flops:108.08, batch-reuse:1
@ 2421 train 4.9266 , allloss: 4.9280, dt: 1280.34ms, fracRes: 0.3111, norm(attn): 0.1895, norm(output): 0.3633, norm(x): 0.3451, norm(y): 1.0108, norm:1.9670, tok/sec: 102372.93, flops:107.44, batch-reuse:1
@ 2422 train 4.9759 , allloss: 4.9768, dt: 1313.53ms, fracRes: 0.3095, norm(attn): 0.1895, norm(output): 0.3652, norm(x): 0.3477, norm(y): 1.0107, norm:2.4410, tok/sec: 99785.82, flops:104.73, batch-reuse:1
@ 2423 train 5.0084 , allloss: 5.0094, dt: 1306.99ms, fracRes: 0.3108, norm(attn): 0.1875, norm(output): 0.3652, norm(x): 0.3452, norm(y): 1.0108, norm:1.9196, tok/sec: 100285.23, flops:105.25, batch-reuse:1
@ 2424 train 4.8969 , allloss: 4.8979, dt: 1300.36ms, fracRes: 0.3107, norm(attn): 0.1875, norm(output): 0.3633, norm(x): 0.3451, norm(y): 1.0107, norm:1.7938, tok/sec: 100796.87, flops:105.79, batch-reuse:1
@ 2425 train 4.8580 , allloss: 4.8597, dt: 1316.71ms, fracRes: 0.3120, norm(attn): 0.1904, norm(output): 0.3652, norm(x): 0.3453, norm(y): 1.0107, norm:2.1330, tok/sec: 99544.75, flops:104.47, batch-reuse:1
@ 2426 train 4.8896 , allloss: 4.8905, dt: 1296.33ms, fracRes: 0.3124, norm(attn): 0.1865, norm(output): 0.3672, norm(x): 0.3479, norm(y): 1.0107, norm:2.2823, tok/sec: 101110.06, flops:106.12, batch-reuse:1
@ 2427 train 5.0248 , allloss: 5.0255, dt: 1313.55ms, fracRes: 0.3127, norm(attn): 0.1875, norm(output): 0.3652, norm(x): 0.3452, norm(y): 1.0108, norm:2.1643, tok/sec: 99784.70, flops:104.73, batch-reuse:1
@ 2428 train 4.9409 , allloss: 4.9448, dt: 1331.98ms, fracRes: 0.3128, norm(attn): 0.1875, norm(output): 0.3691, norm(x): 0.3469, norm(y): 1.0107, norm:1.9823, tok/sec: 98403.95, flops:103.28, batch-reuse:1
@ 2429 train 4.8977 , allloss: 4.8986, dt: 1337.09ms, fracRes: 0.3135, norm(attn): 0.1855, norm(output): 0.3672, norm(x): 0.3454, norm(y): 1.0108, norm:1.9917, tok/sec: 98027.81, flops:102.88, batch-reuse:1
@ 2430 train 4.9135 , allloss: 4.9142, dt: 1314.57ms, fracRes: 0.3128, norm(attn): 0.1865, norm(output): 0.3633, norm(x): 0.3452, norm(y): 1.0108, norm:1.7751, tok/sec: 99707.30, flops:104.64, batch-reuse:1
@ 2431 train 4.9227 , allloss: 4.9242, dt: 1331.06ms, fracRes: 0.3133, norm(attn): 0.1855, norm(output): 0.3672, norm(x): 0.3479, norm(y): 1.0108, norm:2.2620, tok/sec: 98471.93, flops:103.35, batch-reuse:1
@ 2432 train 4.8149 , allloss: 4.8159, dt: 1326.18ms, fracRes: 0.3144, norm(attn): 0.1855, norm(output): 0.3672, norm(x): 0.3458, norm(y): 1.0108, norm:2.0352, tok/sec: 98834.00, flops:103.73, batch-reuse:1
@ 2433 train 4.8987 , allloss: 4.8992, dt: 1326.66ms, fracRes: 0.3156, norm(attn): 0.1846, norm(output): 0.3633, norm(x): 0.3454, norm(y): 1.0108, norm:2.4879, tok/sec: 98798.19, flops:103.69, batch-reuse:1
@ 2434 train 4.9704 , allloss: 4.9722, dt: 1336.44ms, fracRes: 0.3156, norm(attn): 0.1875, norm(output): 0.3691, norm(x): 0.3467, norm(y): 1.0108, norm:1.7342, tok/sec: 98075.64, flops:102.93, batch-reuse:1
@ 2435 train 4.9453 , allloss: 4.9481, dt: 1299.47ms, fracRes: 0.3168, norm(attn): 0.1865, norm(output): 0.3691, norm(x): 0.3481, norm(y): 1.0108, norm:2.3588, tok/sec: 100865.93, flops:105.86, batch-reuse:1
@ 2436 train 4.9409 , allloss: 4.9429, dt: 1284.41ms, fracRes: 0.3152, norm(attn): 0.1846, norm(output): 0.3711, norm(x): 0.3489, norm(y): 1.0108, norm:2.0684, tok/sec: 102048.51, flops:107.10, batch-reuse:1
@ 2437 train 4.8730 , allloss: 4.8738, dt: 1282.36ms, fracRes: 0.3162, norm(attn): 0.1846, norm(output): 0.3652, norm(x): 0.3465, norm(y): 1.0109, norm:2.1980, tok/sec: 102211.69, flops:107.27, batch-reuse:1
@ 2438 train 4.8784 , allloss: 4.8813, dt: 1307.93ms, fracRes: 0.3160, norm(attn): 0.1875, norm(output): 0.3652, norm(x): 0.3458, norm(y): 1.0108, norm:1.9882, tok/sec: 100213.57, flops:105.18, batch-reuse:1
@ 2439 train 4.9286 , allloss: 4.9299, dt: 1337.34ms, fracRes: 0.3146, norm(attn): 0.1875, norm(output): 0.3633, norm(x): 0.3460, norm(y): 1.0108, norm:2.0652, tok/sec: 98009.44, flops:102.86, batch-reuse:1
@ 2440 train 4.9690 , allloss: 4.9704, dt: 1334.17ms, fracRes: 0.3160, norm(attn): 0.1885, norm(output): 0.3672, norm(x): 0.3487, norm(y): 1.0109, norm:2.6352, tok/sec: 98242.54, flops:103.11, batch-reuse:1
@ 2441 train 4.8593 , allloss: 4.8620, dt: 1340.17ms, fracRes: 0.3111, norm(attn): 0.1904, norm(output): 0.3691, norm(x): 0.3480, norm(y): 1.0108, norm:2.4135, tok/sec: 97802.23, flops:102.65, batch-reuse:1
@ 2442 train 4.8954 , allloss: 4.8975, dt: 1315.58ms, fracRes: 0.3106, norm(attn): 0.1885, norm(output): 0.3633, norm(x): 0.3460, norm(y): 1.0108, norm:2.0115, tok/sec: 99630.43, flops:104.56, batch-reuse:1
@ 2443 train 4.9988 , allloss: 4.9998, dt: 1278.56ms, fracRes: 0.3096, norm(attn): 0.1875, norm(output): 0.3691, norm(x): 0.3473, norm(y): 1.0108, norm:1.9861, tok/sec: 102515.34, flops:107.59, batch-reuse:1
@ 2444 train 4.8615 , allloss: 4.8628, dt: 1292.32ms, fracRes: 0.3115, norm(attn): 0.1865, norm(output): 0.3672, norm(x): 0.3453, norm(y): 1.0108, norm:1.8461, tok/sec: 101423.94, flops:106.45, batch-reuse:1
@ 2445 train 4.8207 , allloss: 4.8223, dt: 1285.85ms, fracRes: 0.3099, norm(attn): 0.1875, norm(output): 0.3711, norm(x): 0.3469, norm(y): 1.0108, norm:1.9657, tok/sec: 101934.16, flops:106.98, batch-reuse:1
@ 2446 train 5.0359 , allloss: 5.0375, dt: 1302.99ms, fracRes: 0.3118, norm(attn): 0.1865, norm(output): 0.3691, norm(x): 0.3464, norm(y): 1.0108, norm:2.0003, tok/sec: 100593.13, flops:105.57, batch-reuse:1
@ 2447 train 4.9535 , allloss: 4.9547, dt: 1338.38ms, fracRes: 0.3135, norm(attn): 0.1855, norm(output): 0.3691, norm(x): 0.3457, norm(y): 1.0109, norm:2.3791, tok/sec: 97933.12, flops:102.78, batch-reuse:1
@ 2448 train 4.9116 , allloss: 4.9128, dt: 1324.30ms, fracRes: 0.3140, norm(attn): 0.1865, norm(output): 0.3711, norm(x): 0.3468, norm(y): 1.0109, norm:1.9187, tok/sec: 98974.82, flops:103.88, batch-reuse:1
@ 2449 train 4.9153 , allloss: 4.9166, dt: 1297.31ms, fracRes: 0.3152, norm(attn): 0.1846, norm(output): 0.3691, norm(x): 0.3477, norm(y): 1.0109, norm:2.0951, tok/sec: 101033.54, flops:106.04, batch-reuse:1
@ 2450 train 4.8900 , allloss: 4.8909, dt: 1313.41ms, fracRes: 0.3144, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3489, norm(y): 1.0108, norm:2.5763, tok/sec: 99795.31, flops:104.74, batch-reuse:1
@ 2451 train 5.0084 , allloss: 5.0108, dt: 1335.73ms, fracRes: 0.3195, norm(attn): 0.1787, norm(output): 0.3730, norm(x): 0.3484, norm(y): 1.0109, norm:2.3802, tok/sec: 98127.65, flops:102.99, batch-reuse:1
@ 2452 train 4.8872 , allloss: 4.8882, dt: 1310.73ms, fracRes: 0.3217, norm(attn): 0.1816, norm(output): 0.3711, norm(x): 0.3477, norm(y): 1.0111, norm:3.0041, tok/sec: 99998.93, flops:104.95, batch-reuse:1
@ 2453 train 4.8392 , allloss: 4.8401, dt: 1335.27ms, fracRes: 0.3201, norm(attn): 0.1787, norm(output): 0.3691, norm(x): 0.3475, norm(y): 1.0110, norm:2.3333, tok/sec: 98161.18, flops:103.02, batch-reuse:1
@ 2454 train 4.8369 , allloss: 4.8379, dt: 1315.92ms, fracRes: 0.3193, norm(attn): 0.1816, norm(output): 0.3691, norm(x): 0.3468, norm(y): 1.0109, norm:2.3732, tok/sec: 99605.03, flops:104.54, batch-reuse:1
@ 2455 train 4.9307 , allloss: 4.9314, dt: 1312.29ms, fracRes: 0.3165, norm(attn): 0.1826, norm(output): 0.3711, norm(x): 0.3480, norm(y): 1.0108, norm:2.0649, tok/sec: 99880.38, flops:104.83, batch-reuse:1
@ 2456 train 4.9015 , allloss: 4.9025, dt: 1326.67ms, fracRes: 0.3150, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3502, norm(y): 1.0109, norm:2.2182, tok/sec: 98797.62, flops:103.69, batch-reuse:1
@ 2457 train 5.0643 , allloss: 5.0657, dt: 1290.89ms, fracRes: 0.3163, norm(attn): 0.1787, norm(output): 0.3750, norm(x): 0.3510, norm(y): 1.0109, norm:2.1099, tok/sec: 101535.94, flops:106.56, batch-reuse:1
@ 2458 train 4.7841 , allloss: 4.7855, dt: 1311.79ms, fracRes: 0.3150, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3486, norm(y): 1.0109, norm:2.4871, tok/sec: 99918.45, flops:104.87, batch-reuse:1
@ 2459 train 4.9138 , allloss: 4.9146, dt: 1278.32ms, fracRes: 0.3154, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3482, norm(y): 1.0109, norm:2.2662, tok/sec: 102534.26, flops:107.61, batch-reuse:1
@ 2460 train 5.0256 , allloss: 5.0264, dt: 1320.98ms, fracRes: 0.3186, norm(attn): 0.1807, norm(output): 0.3711, norm(x): 0.3471, norm(y): 1.0109, norm:2.2465, tok/sec: 99222.94, flops:104.14, batch-reuse:1
@ 2461 train 4.8741 , allloss: 4.8748, dt: 1344.64ms, fracRes: 0.3157, norm(attn): 0.1846, norm(output): 0.3711, norm(x): 0.3478, norm(y): 1.0109, norm:2.0786, tok/sec: 97477.43, flops:102.30, batch-reuse:1
@ 2462 train 4.9287 , allloss: 4.9293, dt: 1328.29ms, fracRes: 0.3165, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3502, norm(y): 1.0109, norm:2.0939, tok/sec: 98676.93, flops:103.56, batch-reuse:1
@ 2463 train 4.9417 , allloss: 4.9428, dt: 1359.17ms, fracRes: 0.3161, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3495, norm(y): 1.0109, norm:2.1200, tok/sec: 96435.16, flops:101.21, batch-reuse:1
@ 2464 train 4.8818 , allloss: 4.8826, dt: 1348.20ms, fracRes: 0.3170, norm(attn): 0.1855, norm(output): 0.3711, norm(x): 0.3492, norm(y): 1.0109, norm:2.4811, tok/sec: 97220.25, flops:102.03, batch-reuse:1
@ 2465 train 4.7676 , allloss: 4.7682, dt: 1342.23ms, fracRes: 0.3160, norm(attn): 0.1855, norm(output): 0.3691, norm(x): 0.3461, norm(y): 1.0109, norm:2.1144, tok/sec: 97652.39, flops:102.49, batch-reuse:1
@ 2466 train 4.9565 , allloss: 4.9573, dt: 1334.71ms, fracRes: 0.3139, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3491, norm(y): 1.0108, norm:2.2629, tok/sec: 98202.86, flops:103.07, batch-reuse:1
@ 2467 train 4.8189 , allloss: 4.8194, dt: 1306.38ms, fracRes: 0.3172, norm(attn): 0.1836, norm(output): 0.3711, norm(x): 0.3479, norm(y): 1.0110, norm:2.2035, tok/sec: 100332.58, flops:105.30, batch-reuse:1
@ 2468 train 4.9152 , allloss: 4.9159, dt: 1329.60ms, fracRes: 0.3169, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3510, norm(y): 1.0110, norm:2.5297, tok/sec: 98580.19, flops:103.46, batch-reuse:1
@ 2469 train 5.0069 , allloss: 5.0079, dt: 1340.58ms, fracRes: 0.3143, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3516, norm(y): 1.0110, norm:2.0641, tok/sec: 97772.42, flops:102.61, batch-reuse:1
@ 2470 train 4.8342 , allloss: 4.8352, dt: 1295.18ms, fracRes: 0.3148, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3498, norm(y): 1.0110, norm:2.7656, tok/sec: 101199.73, flops:106.21, batch-reuse:1
@ 2471 train 4.8249 , allloss: 4.8259, dt: 1304.83ms, fracRes: 0.3135, norm(attn): 0.1865, norm(output): 0.3711, norm(x): 0.3494, norm(y): 1.0109, norm:2.0315, tok/sec: 100451.65, flops:105.43, batch-reuse:1
@ 2472 train 4.8978 , allloss: 4.8992, dt: 1334.26ms, fracRes: 0.3133, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3518, norm(y): 1.0108, norm:2.1509, tok/sec: 98235.74, flops:103.10, batch-reuse:1
@ 2473 train 4.8109 , allloss: 4.8127, dt: 1364.12ms, fracRes: 0.3150, norm(attn): 0.1846, norm(output): 0.3711, norm(x): 0.3502, norm(y): 1.0110, norm:2.0495, tok/sec: 96085.66, flops:100.84, batch-reuse:1
@ 2474 train 4.8333 , allloss: 4.8347, dt: 1362.23ms, fracRes: 0.3145, norm(attn): 0.1836, norm(output): 0.3711, norm(x): 0.3493, norm(y): 1.0110, norm:1.8185, tok/sec: 96218.58, flops:100.98, batch-reuse:1
@ 2475 train 4.9019 , allloss: 4.9029, dt: 1355.27ms, fracRes: 0.3128, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3508, norm(y): 1.0109, norm:2.2677, tok/sec: 96712.87, flops:101.50, batch-reuse:1
@ 2476 train 4.8876 , allloss: 4.8895, dt: 1339.11ms, fracRes: 0.3127, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3520, norm(y): 1.0109, norm:2.1184, tok/sec: 97880.26, flops:102.73, batch-reuse:1
@ 2477 train 4.8507 , allloss: 4.8528, dt: 1309.42ms, fracRes: 0.3140, norm(attn): 0.1885, norm(output): 0.3730, norm(x): 0.3511, norm(y): 1.0109, norm:1.7333, tok/sec: 100099.55, flops:105.06, batch-reuse:1
@ 2478 train 4.8176 , allloss: 4.8185, dt: 1333.40ms, fracRes: 0.3137, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3502, norm(y): 1.0109, norm:2.2513, tok/sec: 98299.37, flops:103.17, batch-reuse:1
@ 2479 train 4.8110 , allloss: 4.8118, dt: 1341.02ms, fracRes: 0.3133, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3497, norm(y): 1.0109, norm:1.7921, tok/sec: 97740.57, flops:102.58, batch-reuse:1
@ 2480 train 4.9217 , allloss: 4.9227, dt: 1276.33ms, fracRes: 0.3155, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3503, norm(y): 1.0109, norm:2.1614, tok/sec: 102694.08, flops:107.78, batch-reuse:1
@ 2481 train 4.8511 , allloss: 4.8527, dt: 1327.36ms, fracRes: 0.3168, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3514, norm(y): 1.0109, norm:2.0572, tok/sec: 98746.71, flops:103.64, batch-reuse:1
@ 2482 train 4.9771 , allloss: 4.9782, dt: 1322.91ms, fracRes: 0.3162, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3521, norm(y): 1.0109, norm:2.1849, tok/sec: 99078.43, flops:103.98, batch-reuse:1
@ 2483 train 4.9019 , allloss: 4.9030, dt: 1317.61ms, fracRes: 0.3185, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3511, norm(y): 1.0110, norm:2.2591, tok/sec: 99477.19, flops:104.40, batch-reuse:1
@ 2484 train 4.8847 , allloss: 4.8867, dt: 1307.56ms, fracRes: 0.3172, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3513, norm(y): 1.0109, norm:2.3336, tok/sec: 100241.66, flops:105.21, batch-reuse:1
@ 2485 train 4.7967 , allloss: 4.7979, dt: 1291.78ms, fracRes: 0.3159, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3502, norm(y): 1.0109, norm:2.0801, tok/sec: 101465.82, flops:106.49, batch-reuse:1
@ 2486 train 4.8339 , allloss: 4.8350, dt: 1319.76ms, fracRes: 0.3155, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3507, norm(y): 1.0109, norm:1.9322, tok/sec: 99314.91, flops:104.23, batch-reuse:1
@ 2487 train 4.9264 , allloss: 4.9271, dt: 1322.86ms, fracRes: 0.3140, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3532, norm(y): 1.0109, norm:1.9078, tok/sec: 99082.33, flops:103.99, batch-reuse:1
@ 2488 train 4.8954 , allloss: 4.8966, dt: 1300.20ms, fracRes: 0.3127, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3525, norm(y): 1.0109, norm:1.8576, tok/sec: 100809.09, flops:105.80, batch-reuse:1
@ 2489 train 4.8428 , allloss: 4.8440, dt: 1320.92ms, fracRes: 0.3129, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3526, norm(y): 1.0110, norm:1.8913, tok/sec: 99227.45, flops:104.14, batch-reuse:1
@ 2490 train 4.8213 , allloss: 4.8222, dt: 1326.43ms, fracRes: 0.3125, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3536, norm(y): 1.0109, norm:2.5135, tok/sec: 98815.63, flops:103.71, batch-reuse:1
@ 2491 train 4.9682 , allloss: 4.9700, dt: 1298.70ms, fracRes: 0.3161, norm(attn): 0.1826, norm(output): 0.3730, norm(x): 0.3511, norm(y): 1.0110, norm:1.8619, tok/sec: 100925.16, flops:105.92, batch-reuse:1
@ 2492 train 4.9207 , allloss: 4.9229, dt: 1321.73ms, fracRes: 0.3167, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3515, norm(y): 1.0109, norm:2.1496, tok/sec: 99167.24, flops:104.08, batch-reuse:1
@ 2493 train 4.8679 , allloss: 4.8731, dt: 1346.33ms, fracRes: 0.3173, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3514, norm(y): 1.0109, norm:2.2457, tok/sec: 97355.09, flops:102.18, batch-reuse:1
@ 2494 train 4.8234 , allloss: 4.8245, dt: 1334.34ms, fracRes: 0.3193, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3518, norm(y): 1.0110, norm:1.7581, tok/sec: 98229.81, flops:103.09, batch-reuse:1
@ 2495 train 4.8532 , allloss: 4.8546, dt: 1308.73ms, fracRes: 0.3204, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3512, norm(y): 1.0110, norm:2.1087, tok/sec: 100152.41, flops:105.11, batch-reuse:1
@ 2496 train 4.7888 , allloss: 4.7949, dt: 1317.15ms, fracRes: 0.3204, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3518, norm(y): 1.0109, norm:2.1441, tok/sec: 99511.89, flops:104.44, batch-reuse:1
@ 2497 train 4.8548 , allloss: 4.8558, dt: 1292.72ms, fracRes: 0.3209, norm(attn): 0.1875, norm(output): 0.3711, norm(x): 0.3497, norm(y): 1.0109, norm:1.9973, tok/sec: 101392.63, flops:106.41, batch-reuse:1
@ 2498 train 4.8877 , allloss: 4.8895, dt: 1307.27ms, fracRes: 0.3191, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3529, norm(y): 1.0109, norm:1.9839, tok/sec: 100264.00, flops:105.23, batch-reuse:1
@ 2499 train 4.8617 , allloss: 4.8626, dt: 1296.24ms, fracRes: 0.3183, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3512, norm(y): 1.0110, norm:2.2807, tok/sec: 101116.98, flops:106.12, batch-reuse:1
@ 2500 train 4.8393 , allloss: 4.8405, dt: 1291.03ms, fracRes: 0.3175, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3522, norm(y): 1.0110, norm:2.0521, tok/sec: 101525.39, flops:106.55, batch-reuse:1
@ 2501 train 4.7901 , allloss: 4.7923, dt: 1276.47ms, fracRes: 0.3150, norm(attn): 0.1885, norm(output): 0.3730, norm(x): 0.3512, norm(y): 1.0109, norm:1.9425, tok/sec: 102683.38, flops:107.77, batch-reuse:1
@ 2502 train 4.9361 , allloss: 4.9406, dt: 1297.08ms, fracRes: 0.3150, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3529, norm(y): 1.0109, norm:2.0428, tok/sec: 101051.74, flops:106.06, batch-reuse:1
@ 2503 train 4.8485 , allloss: 4.8502, dt: 1314.26ms, fracRes: 0.3152, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3508, norm(y): 1.0110, norm:1.8161, tok/sec: 99730.28, flops:104.67, batch-reuse:1
@ 2504 train 4.8878 , allloss: 4.8889, dt: 1315.38ms, fracRes: 0.3148, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3509, norm(y): 1.0110, norm:2.1686, tok/sec: 99645.83, flops:104.58, batch-reuse:1
@ 2505 train 4.8543 , allloss: 4.8566, dt: 1280.85ms, fracRes: 0.3140, norm(attn): 0.1895, norm(output): 0.3750, norm(x): 0.3513, norm(y): 1.0110, norm:2.0621, tok/sec: 102331.94, flops:107.40, batch-reuse:1
@ 2506 train 4.9306 , allloss: 4.9330, dt: 1286.14ms, fracRes: 0.3160, norm(attn): 0.1846, norm(output): 0.3750, norm(x): 0.3512, norm(y): 1.0110, norm:2.2206, tok/sec: 101911.11, flops:106.96, batch-reuse:1
@ 2507 train 4.9192 , allloss: 4.9250, dt: 1279.29ms, fracRes: 0.3173, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3529, norm(y): 1.0110, norm:2.3720, tok/sec: 102457.16, flops:107.53, batch-reuse:1
@ 2508 train 4.8051 , allloss: 4.8062, dt: 1308.30ms, fracRes: 0.3160, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3532, norm(y): 1.0109, norm:2.6744, tok/sec: 100185.26, flops:105.15, batch-reuse:1
@ 2509 train 4.7410 , allloss: 4.7422, dt: 1333.54ms, fracRes: 0.3193, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3516, norm(y): 1.0110, norm:2.1009, tok/sec: 98288.61, flops:103.16, batch-reuse:1
@ 2510 train 4.8267 , allloss: 4.8285, dt: 1306.01ms, fracRes: 0.3215, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3508, norm(y): 1.0110, norm:1.9967, tok/sec: 100360.27, flops:105.33, batch-reuse:1
@ 2511 train 4.7977 , allloss: 4.8002, dt: 1308.72ms, fracRes: 0.3168, norm(attn): 0.1836, norm(output): 0.3750, norm(x): 0.3551, norm(y): 1.0110, norm:2.1648, tok/sec: 100153.14, flops:105.11, batch-reuse:1
@ 2512 train 4.8011 , allloss: 4.8026, dt: 1294.67ms, fracRes: 0.3162, norm(attn): 0.1846, norm(output): 0.3750, norm(x): 0.3554, norm(y): 1.0109, norm:2.0997, tok/sec: 101240.04, flops:106.25, batch-reuse:1
@ 2513 train 4.8521 , allloss: 4.8549, dt: 1291.13ms, fracRes: 0.3175, norm(attn): 0.1826, norm(output): 0.3750, norm(x): 0.3544, norm(y): 1.0110, norm:2.2122, tok/sec: 101517.05, flops:106.54, batch-reuse:1
@ 2514 train 4.9338 , allloss: 4.9374, dt: 1327.75ms, fracRes: 0.3185, norm(attn): 0.1797, norm(output): 0.3750, norm(x): 0.3545, norm(y): 1.0111, norm:2.1784, tok/sec: 98717.43, flops:103.61, batch-reuse:1
@ 2515 train 4.7579 , allloss: 4.7596, dt: 1305.93ms, fracRes: 0.3167, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3527, norm(y): 1.0111, norm:2.0659, tok/sec: 100366.61, flops:105.34, batch-reuse:1
@ 2516 train 4.6801 , allloss: 4.6851, dt: 1295.01ms, fracRes: 0.3152, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3535, norm(y): 1.0110, norm:2.2254, tok/sec: 101212.96, flops:106.22, batch-reuse:1
@ 2517 train 4.7523 , allloss: 4.7536, dt: 1295.28ms, fracRes: 0.3144, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3550, norm(y): 1.0109, norm:2.1398, tok/sec: 101192.08, flops:106.20, batch-reuse:1
@ 2518 train 4.8044 , allloss: 4.8062, dt: 1288.12ms, fracRes: 0.3151, norm(attn): 0.1846, norm(output): 0.3750, norm(x): 0.3563, norm(y): 1.0111, norm:2.1755, tok/sec: 101754.85, flops:106.79, batch-reuse:1
@ 2519 train 4.8508 , allloss: 4.8525, dt: 1316.33ms, fracRes: 0.3169, norm(attn): 0.1836, norm(output): 0.3750, norm(x): 0.3544, norm(y): 1.0111, norm:2.3428, tok/sec: 99573.55, flops:104.50, batch-reuse:1
@ 2520 train 4.8384 , allloss: 4.8438, dt: 1320.19ms, fracRes: 0.3198, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3537, norm(y): 1.0111, norm:2.0184, tok/sec: 99282.72, flops:104.20, batch-reuse:1
@ 2521 train 4.7629 , allloss: 4.7643, dt: 1316.23ms, fracRes: 0.3204, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3537, norm(y): 1.0111, norm:2.3357, tok/sec: 99581.56, flops:104.51, batch-reuse:1
@ 2522 train 4.8888 , allloss: 4.8920, dt: 1290.54ms, fracRes: 0.3209, norm(attn): 0.1846, norm(output): 0.3750, norm(x): 0.3557, norm(y): 1.0110, norm:2.1667, tok/sec: 101563.46, flops:106.59, batch-reuse:1
@ 2523 train 4.8074 , allloss: 4.8082, dt: 1296.26ms, fracRes: 0.3210, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3558, norm(y): 1.0111, norm:2.3522, tok/sec: 101115.47, flops:106.12, batch-reuse:1
@ 2524 train 4.7426 , allloss: 4.7435, dt: 1320.26ms, fracRes: 0.3188, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3531, norm(y): 1.0110, norm:1.9181, tok/sec: 99277.21, flops:104.19, batch-reuse:1
@ 2525 train 4.7856 , allloss: 4.7864, dt: 1295.60ms, fracRes: 0.3195, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3551, norm(y): 1.0111, norm:2.5372, tok/sec: 101166.83, flops:106.18, batch-reuse:1
@ 2526 train 4.8928 , allloss: 4.8940, dt: 1321.34ms, fracRes: 0.3192, norm(attn): 0.1826, norm(output): 0.3750, norm(x): 0.3549, norm(y): 1.0110, norm:1.8634, tok/sec: 99196.44, flops:104.11, batch-reuse:1
@ 2527 train 4.7770 , allloss: 4.7789, dt: 1334.15ms, fracRes: 0.3202, norm(attn): 0.1846, norm(output): 0.3750, norm(x): 0.3540, norm(y): 1.0111, norm:2.4036, tok/sec: 98243.56, flops:103.11, batch-reuse:1
@ 2528 train 4.8183 , allloss: 4.8214, dt: 1339.98ms, fracRes: 0.3186, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3560, norm(y): 1.0110, norm:2.1243, tok/sec: 97816.32, flops:102.66, batch-reuse:1
@ 2529 train 4.8050 , allloss: 4.8061, dt: 1330.29ms, fracRes: 0.3176, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3554, norm(y): 1.0110, norm:1.9723, tok/sec: 98529.17, flops:103.41, batch-reuse:1
@ 2530 train 4.7800 , allloss: 4.7812, dt: 1320.98ms, fracRes: 0.3171, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3547, norm(y): 1.0110, norm:2.0703, tok/sec: 99223.35, flops:104.14, batch-reuse:1
@ 2531 train 4.7278 , allloss: 4.7288, dt: 1321.02ms, fracRes: 0.3172, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3537, norm(y): 1.0110, norm:1.5696, tok/sec: 99220.00, flops:104.13, batch-reuse:1
@ 2532 train 4.8142 , allloss: 4.8153, dt: 1348.24ms, fracRes: 0.3165, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3557, norm(y): 1.0111, norm:2.1626, tok/sec: 97217.29, flops:102.03, batch-reuse:1
@ 2533 train 4.8483 , allloss: 4.8537, dt: 1327.87ms, fracRes: 0.3177, norm(attn): 0.1846, norm(output): 0.3789, norm(x): 0.3597, norm(y): 1.0110, norm:2.3939, tok/sec: 98708.11, flops:103.60, batch-reuse:1
@ 2534 train 4.8965 , allloss: 4.9030, dt: 1290.03ms, fracRes: 0.3162, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3570, norm(y): 1.0111, norm:2.3188, tok/sec: 101603.50, flops:106.63, batch-reuse:1
@ 2535 train 4.7331 , allloss: 4.7343, dt: 1302.48ms, fracRes: 0.3182, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3545, norm(y): 1.0111, norm:2.0106, tok/sec: 100632.57, flops:105.62, batch-reuse:1
@ 2536 train 4.8153 , allloss: 4.8190, dt: 1315.40ms, fracRes: 0.3183, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3543, norm(y): 1.0111, norm:2.0493, tok/sec: 99644.33, flops:104.58, batch-reuse:1
@ 2537 train 4.7940 , allloss: 4.7968, dt: 1339.40ms, fracRes: 0.3174, norm(attn): 0.1846, norm(output): 0.3750, norm(x): 0.3557, norm(y): 1.0111, norm:1.9113, tok/sec: 97858.62, flops:102.70, batch-reuse:1
@ 2538 train 4.8769 , allloss: 4.8787, dt: 1332.94ms, fracRes: 0.3188, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3556, norm(y): 1.0110, norm:1.8887, tok/sec: 98333.35, flops:103.20, batch-reuse:1
@ 2539 train 4.8067 , allloss: 4.8084, dt: 1340.31ms, fracRes: 0.3213, norm(attn): 0.1846, norm(output): 0.3750, norm(x): 0.3559, norm(y): 1.0111, norm:2.0267, tok/sec: 97792.09, flops:102.63, batch-reuse:1
@ 2540 train 4.8841 , allloss: 4.8884, dt: 1327.26ms, fracRes: 0.3200, norm(attn): 0.1895, norm(output): 0.3730, norm(x): 0.3548, norm(y): 1.0110, norm:2.0988, tok/sec: 98754.04, flops:103.64, batch-reuse:1
@ 2541 train 4.7970 , allloss: 4.8008, dt: 1338.70ms, fracRes: 0.3190, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3554, norm(y): 1.0110, norm:1.9260, tok/sec: 97910.10, flops:102.76, batch-reuse:1
@ 2542 train 4.8660 , allloss: 4.8708, dt: 1292.05ms, fracRes: 0.3222, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3583, norm(y): 1.0111, norm:2.7685, tok/sec: 101444.66, flops:106.47, batch-reuse:1
@ 2543 train 4.7724 , allloss: 4.7778, dt: 1315.02ms, fracRes: 0.3200, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3522, norm(y): 1.0112, norm:2.6285, tok/sec: 99672.64, flops:104.61, batch-reuse:1
@ 2544 train 4.8968 , allloss: 4.8985, dt: 1332.03ms, fracRes: 0.3208, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3556, norm(y): 1.0111, norm:2.2730, tok/sec: 98399.94, flops:103.27, batch-reuse:1
@ 2545 train 4.8491 , allloss: 4.8543, dt: 1294.17ms, fracRes: 0.3210, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3563, norm(y): 1.0110, norm:2.1895, tok/sec: 101279.16, flops:106.29, batch-reuse:1
@ 2546 train 4.8338 , allloss: 4.8354, dt: 1312.62ms, fracRes: 0.3205, norm(attn): 0.1885, norm(output): 0.3730, norm(x): 0.3548, norm(y): 1.0110, norm:2.3868, tok/sec: 99855.51, flops:104.80, batch-reuse:1
@ 2547 train 4.8378 , allloss: 4.8445, dt: 1323.55ms, fracRes: 0.3213, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3548, norm(y): 1.0111, norm:2.1018, tok/sec: 99030.82, flops:103.93, batch-reuse:1
@ 2548 train 5.0042 , allloss: 5.0066, dt: 1322.61ms, fracRes: 0.3254, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3531, norm(y): 1.0111, norm:2.3629, tok/sec: 99100.96, flops:104.01, batch-reuse:1
@ 2549 train 4.9647 , allloss: 4.9670, dt: 1352.33ms, fracRes: 0.3205, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3581, norm(y): 1.0110, norm:2.2328, tok/sec: 96922.80, flops:101.72, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2969, 0.7031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.1836, 0.5977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3223, 0.3789, 0.1914, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2139, 0.0903, 0.0135, 0.0096, 0.6719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.0781, 0.0449, 0.0089, 0.3438, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.0698, 0.0630, 0.1196, 0.2910, 0.1777, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0496, 0.0659, 0.1602, 0.5469, 0.0216, 0.0154, 0.0184, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0811, 0.0217, 0.0164, 0.1201, 0.1445, 0.2305, 0.1230, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.0732, 0.1104, 0.1123, 0.0645, 0.0486, 0.0576, 0.2793, 0.0630, 0.0559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0216, 0.0113, 0.0023, 0.0012, 0.1523, 0.1758, 0.1494, 0.0015, 0.1719, 0.2275, 0.0850, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0806, 0.0830, 0.0223, 0.0079, 0.0200, 0.0850, 0.3418, 0.0308, 0.0630, 0.0422, 0.1387, 0.0000, 0.0000, 0.0000],
        [0.0942, 0.1484, 0.0674, 0.0581, 0.0469, 0.0159, 0.0369, 0.1143, 0.1055, 0.0552, 0.0767, 0.1318, 0.0488, 0.0000, 0.0000],
        [0.0549, 0.0566, 0.0181, 0.0189, 0.0972, 0.1187, 0.1260, 0.0303, 0.1060, 0.0923, 0.0562, 0.0143, 0.0317, 0.1787, 0.0000],
        [0.0605, 0.0337, 0.1016, 0.0737, 0.0150, 0.0147, 0.0496, 0.3262, 0.0188, 0.0226, 0.0219, 0.0518, 0.0972, 0.0284, 0.0840]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0211,  0.0310, -0.0408,  ..., -0.0193,  0.0210,  0.0284],
        [ 0.0448,  0.0197,  0.0060,  ..., -0.0041, -0.0094, -0.0344],
        [ 0.0090,  0.0198,  0.0091,  ...,  0.0050,  0.0007, -0.0064],
        ...,
        [-0.0357,  0.0145,  0.0025,  ...,  0.0222, -0.0019,  0.0049],
        [ 0.0580, -0.0167, -0.0259,  ...,  0.0210, -0.0076, -0.0028],
        [ 0.0072,  0.0038,  0.0322,  ..., -0.0077, -0.0251,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([-0.3711,  0.4395,  0.2598, -1.0703, -0.6328,  0.1260,  0.5391,  0.0120,  0.2119,  0.2793,  0.8984,  1.1172, -0.3730,  0.7578, -0.1709, -0.5508,  0.1533, -0.1865,  0.0986,  0.4531, -0.1426, -0.1328, -0.8750, -0.2754, -0.1943,  0.1816, -0.5781, -0.9336, -0.5273,  0.8828, -0.4570, -0.5352,
        -0.3027, -0.4062, -0.1191, -0.2158,  0.0825, -0.3105, -0.3086,  0.3301,  0.4922,  0.1089,  0.6289, -0.0723, -0.2910,  0.1055,  0.3320, -0.3613,  1.0781, -0.1289,  0.1689, -0.9922, -0.9180,  0.5195,  0.3457,  0.0593,  0.4844,  0.6367, -1.0391,  0.0306,  0.5625, -0.1187,  0.2490, -0.9648],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0346, -0.0018,  0.0114,  ...,  0.0332,  0.0016, -0.0302],
        [ 0.0191,  0.0354, -0.0287,  ..., -0.0014,  0.0126, -0.0178],
        [ 0.0118, -0.0258,  0.0045,  ...,  0.0476, -0.0005, -0.0349],
        ...,
        [ 0.0261,  0.0195,  0.0018,  ..., -0.0207, -0.0129,  0.0105],
        [-0.0257, -0.0227,  0.0155,  ...,  0.0337, -0.0136,  0.0254],
        [ 0.0316,  0.0087, -0.0139,  ..., -0.0444, -0.0233, -0.0002]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6250,  0.0361, -0.1768,  0.0757, -0.1133, -0.7188,  1.0547,  0.5156,  0.1621,  1.3359, -1.0625,  0.1445, -0.6289, -0.3164, -0.7969, -0.0898, -0.7852, -0.4941,  0.2422,  0.1196,  0.7148,  0.5391, -0.4277, -0.3008, -0.6484, -0.7969, -0.9609, -0.2129, -0.8906, -0.6016, -0.0256, -0.5586,
        -0.3477, -0.2930, -0.4629,  0.1602, -0.5703, -0.2305, -0.5547, -0.2754,  0.1494,  0.5156,  0.7500, -0.9414, -0.8750, -0.1406,  0.2500, -0.1846, -0.4180,  0.5547, -0.1729, -0.0496,  0.6758,  0.8867, -0.0981, -0.1455,  0.2217, -0.2275, -0.3320,  0.3555,  0.4883,  1.0703, -0.6484,  0.1621],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.8633,      0.5430,      0.9023,     -0.9883,      0.3672,      0.4121,      0.4551,     -0.4746,      0.1211,     -0.0057,      1.0781,      0.4902,     -0.4922,      1.0547],
        [     0.0000,     -0.1807,      0.9961,      1.7188,     -0.9297,     -0.9023,     -0.5625,      0.9453,     -1.1719,     -1.2422,     -0.2109,      1.0703,      1.1016,     -0.8906,      0.3984],
        [     0.0000,      0.1621,     -0.5195,     -1.0938,     -0.8203,     -0.6328,      0.2051,      0.4648,     -0.4531,      0.8086,      0.1172,     -0.1025,     -0.6562,     -0.3184,      0.9531],
        [     0.0000,     -0.8594,     -2.7656,     -3.1094,      1.1484,      0.7969,      1.4844,     -1.6641,      1.7656,      1.3281,      0.9258,     -2.2500,     -1.4531,      2.0781,     -0.4863],
        [     0.0000,     -1.0625,     -1.6172,     -3.2344,      0.4199,      0.2695,      0.7031,     -0.4824,      1.1406,      1.2188,      0.3184,     -2.0000,     -1.6172,      1.0703,     -0.5703],
        [     0.0000,     -0.7227,     -0.8203,     -0.1797,      0.7070,      0.2148,     -0.0547,     -0.7773,      1.0469,      0.7578,      0.7500,     -0.3516,     -0.0708,      0.7188,      0.3730],
        [     0.0000,      0.2891,      1.1797,      2.4062,     -0.8242,     -1.1641,     -0.9844,      0.8945,     -1.1875,     -1.7891,      0.1377,      1.4922,      1.2656,     -1.5703,      0.5234],
        [     0.0000,     -0.1836,     -1.5078,     -1.7812,      0.2090,      0.3945,      0.8633,      0.2324,      0.5234,      0.5586,     -0.0405,     -1.8125,     -1.1641,      1.1484,      0.1826],
        [     0.0000,     -0.6172,     -0.2061,     -0.1865,     -0.7422,     -1.0312,     -0.8555,      0.7227,     -0.7695,     -0.8867,     -0.2393,     -0.0713,      0.1611,     -1.0781,     -0.4551],
        [     0.0000,     -0.6484,     -2.2500,     -2.8906,      1.9531,      2.0938,      1.9375,     -2.6562,      2.0781,      2.3594,      1.3750,     -2.1406,     -2.0312,      2.1719,     -0.4355],
        [     0.0000,     -0.0552,     -0.0226,     -1.3359,     -2.3750,     -1.4453,      0.0012,      1.3906,     -1.0156,     -0.2969,     -0.6992,      0.4941,     -0.6992,     -0.8711,      0.5859],
        [     0.0000,      0.4570,     -0.3340,     -0.4844,     -0.6992,     -1.7812,     -0.9375,      0.1943,      0.1152,     -0.5352,     -0.2080,      0.3340,     -0.6562,      0.2158,      0.3242],
        [     0.0000,      0.0315,     -1.1172,     -1.0703,      0.5703,      0.7695,      0.8320,     -0.5938,      0.6562,      0.5195,      0.0223,     -1.3438,     -0.5469,      1.1797,     -0.0405],
        [     0.0000,     -0.5859,      0.5156,      0.2012,     -1.3906,     -1.4141,     -0.1963,      1.6875,     -1.1641,     -0.9805,     -1.0234,     -0.1553,      0.4766,     -0.7539,      0.3301]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4171],
        [0.2861],
        [0.2233],
        [0.2767],
        [0.2721],
        [0.0948],
        [0.1121],
        [0.1046],
        [0.1149],
        [0.0575],
        [0.0970],
        [0.0895],
        [0.0604],
        [0.0603]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5859,     0.4141,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6328,     0.2344,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3281,     0.0075,     0.4863,     0.1777,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4434,     0.1592,     0.2539,     0.1338,     0.0110,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5312,     0.0708,     0.1357,     0.0549,     0.0018,     0.2061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2695,     0.0864,     0.1270,     0.0255,     0.0054,     0.1846,     0.3008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0649,     0.0447,     0.3555,     0.1592,     0.0500,     0.0479,     0.2363,     0.0425,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4707,     0.0718,     0.1021,     0.0601,     0.0006,     0.0347,     0.0498,     0.0187,     0.1904,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3848,     0.0461,     0.0859,     0.0454,     0.0056,     0.0796,     0.0674,     0.0391,     0.1406,     0.1050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7031,     0.0206,     0.1147,     0.0540,     0.0001,     0.0120,     0.0136,     0.0250,     0.0496,     0.0086,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1357,     0.0159,     0.1152,     0.0500,     0.0021,     0.0327,     0.0060,     0.0244,     0.0283,     0.0304,     0.0014,     0.5586,     0.0000,     0.0000,     0.0000],
        [    0.0688,     0.0084,     0.2812,     0.0630,     0.0087,     0.0317,     0.0189,     0.0130,     0.0549,     0.0972,     0.0043,     0.3223,     0.0262,     0.0000,     0.0000],
        [    0.4023,     0.0371,     0.0830,     0.0471,     0.0002,     0.0160,     0.0189,     0.0062,     0.1177,     0.0036,     0.0002,     0.2412,     0.0016,     0.0248,     0.0000],
        [    0.1089,     0.3008,     0.0364,     0.0708,     0.0052,     0.0132,     0.0359,     0.0005,     0.1348,     0.0018,     0.0106,     0.0266,     0.0002,     0.0535,     0.2002]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0242, -0.0113, -0.0435,  ...,  0.0250, -0.0194,  0.0219],
        [ 0.0012, -0.0010, -0.0421,  ...,  0.0737, -0.0270,  0.0039],
        [-0.0060, -0.0422, -0.0734,  ...,  0.0397, -0.0188, -0.0029],
        ...,
        [-0.0231,  0.0016,  0.0179,  ...,  0.0159,  0.0139,  0.0522],
        [ 0.0019, -0.0197, -0.0414,  ...,  0.0235,  0.0278, -0.0005],
        [ 0.0173,  0.0394,  0.0085,  ..., -0.0205,  0.0117,  0.0438]], device='cuda:0', requires_grad=True)
K: tensor([ 2.0781,  0.3984, -1.1641, -1.6875, -0.5039,  0.3047, -0.8203, -0.7969,  2.2969, -0.2383, -1.0859, -0.5312, -0.1865, -0.3027, -0.2656, -0.4062, -0.2539,  0.2793, -0.0312,  0.4766,  1.5938,  0.5703, -0.1138, -1.2266, -0.6523,  1.1953,  0.1816, -1.2188, -0.0162,  1.2344,  0.1348, -0.4238,
         0.6992,  0.6992, -1.0938, -0.5898,  0.1060,  2.1719,  0.8906, -0.3008, -1.3438, -0.3242, -0.3105,  0.2969, -1.8125,  0.7031,  0.0135, -0.4941,  0.7148, -0.7383, -0.6914,  0.0048, -0.9180,  0.4961,  0.1738,  1.5859, -0.1060,  0.2754,  0.8906, -0.3535,  0.5352,  0.2812,  0.1641,  0.1436],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0287,      0.0143,     -0.0025,  ...,      0.0022,      0.0279,      0.0064],
        [     0.0202,      0.0171,      0.0474,  ...,     -0.0183,      0.0130,      0.0288],
        [     0.0389,      0.0146,      0.0248,  ...,     -0.0073,      0.0304,     -0.0043],
        ...,
        [     0.0001,     -0.0371,     -0.0131,  ...,      0.0120,     -0.0514,      0.0113],
        [    -0.0063,     -0.0213,      0.0208,  ...,     -0.0006,     -0.0166,      0.0177],
        [    -0.0142,     -0.0609,      0.0190,  ...,      0.0147,      0.0076,      0.0099]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.4688, -0.4258, -0.1328, -0.2461,  2.0781, -1.3594, -0.0447,  0.9922,  0.1260,  0.2178,  0.9883, -1.3750,  1.2266,  0.7578, -0.6719,  0.2891,  0.5430,  0.1494,  0.5391,  0.9375,  0.5195, -0.4414,  1.1250,  0.8750,  1.6172,  0.1748,  0.5820, -1.8516,  1.1172, -1.1953, -0.7852,  2.5000,
         1.7422, -1.2188, -0.7344,  0.5391, -1.2344, -0.9062,  1.3281, -0.0540, -0.2695, -2.3750, -1.5547, -1.7969,  1.0156,  1.7500,  1.5625,  0.8633, -0.0153, -1.5703, -0.1553, -0.5508,  0.3848, -0.6836,  0.3926,  0.9688, -0.8750,  1.2578, -0.3047, -1.6719,  0.4180,  0.0383,  1.3359,  0.7461],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3477, -0.9141, -1.3516, -4.0625, -2.6875, -1.1250, -3.4844, -0.3105, -1.8047, -2.5781, -1.8984, -3.9688, -0.4062,  2.2500],
        [ 0.0000, -0.9922, -1.5625, -1.3672, -4.0312, -2.2188, -1.3750, -1.7344, -1.4453, -2.5625, -3.3438, -1.8281, -2.7500, -1.9609, -0.2715],
        [ 0.0000, -3.7812,  0.3945, -0.6133, -8.7500, -4.8438, -5.0938, -4.8750, -2.5312, -2.9688, -7.0312,  0.6602, -5.8438, -3.1875,  1.3281],
        [ 0.0000, -1.0234, -0.5586, -1.1953, -3.6875, -0.4434, -0.0598,  0.4941, -0.1191, -1.9297, -3.6250,  0.3691, -0.3711, -0.6523, -0.5312],
        [ 0.0000, -2.0156, -1.3672, -2.2656, -5.6875, -0.9453, -2.1406, -1.4609, -2.6250, -2.5000, -6.4375,  0.2832, -1.9922, -3.5781, -2.2344],
        [ 0.0000, -1.1328, -0.7500, -2.3594, -3.9062, -0.3750,  0.1108,  0.2969, -1.3828, -1.8125, -4.8125, -0.1982, -0.2100, -2.0938, -1.6328],
        [ 0.0000, -0.3711,  1.7031,  0.9023, -0.2578, -0.3047,  1.2969, -0.4199,  1.8984, -0.4844, -1.3203,  1.3594, -0.8867,  1.8828,  2.4062],
        [ 0.0000, -1.8828, -1.5312, -2.0625, -6.6250, -2.6094, -2.2500, -3.2344, -0.9062, -4.3125, -7.0938, -0.4980, -4.6875, -2.3906, -2.1250],
        [ 0.0000, -2.1250, -1.5000, -2.1406, -4.2500, -1.5781, -1.7422, -2.2812, -1.0078, -1.2969, -4.4688, -0.7695, -2.8281, -1.7578, -1.1250],
        [ 0.0000, -3.5312, -1.8125, -2.5625, -9.3750, -4.0625, -3.9375, -3.3281, -2.6562, -4.4062, -8.5000, -0.5742, -4.4688, -3.9688, -1.5078],
        [ 0.0000, -2.1562, -0.1670, -1.0000, -4.1562, -1.4219, -3.1094, -1.7188, -1.5703, -1.5000, -4.5938,  1.4141, -1.4766, -2.1250, -0.3770],
        [ 0.0000, -2.0938,  1.4141, -0.0889, -2.0781, -0.7734, -1.2891, -1.6641, -0.2236,  0.3457, -2.7656,  1.5469, -0.9648, -0.0352,  1.9844],
        [ 0.0000, -2.3906, -1.5781, -2.1406, -7.5000, -3.2188, -3.0469, -4.1875, -1.2344, -4.6875, -7.8438, -0.5117, -5.5000, -2.7812, -2.2188],
        [ 0.0000,  1.0156, -1.0938, -0.4277, -3.0469, -2.1094, -1.1094, -5.3125,  0.2178, -4.0938, -2.3281, -1.4062, -6.1250, -0.7070,  0.6094]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4937],
        [0.3807],
        [0.3648],
        [0.5707],
        [0.5281],
        [0.3802],
        [0.3350],
        [0.6160],
        [0.3508],
        [0.5810],
        [0.2916],
        [0.3055],
        [0.6118],
        [0.4637]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0355, -0.0350, -0.0121,  ...,  0.0098,  0.0107,  0.0511],
        [ 0.0126,  0.0072,  0.0484,  ..., -0.0064,  0.0417,  0.0117],
        [ 0.0037, -0.0233, -0.0397,  ..., -0.0116, -0.0194,  0.0485],
        ...,
        [ 0.0251,  0.0226,  0.0023,  ..., -0.0375,  0.0237, -0.0266],
        [ 0.0005, -0.0279, -0.0321,  ...,  0.0134, -0.0112,  0.0356],
        [ 0.0436,  0.0086,  0.0196,  ...,  0.0043,  0.0123, -0.0200]], device='cuda:0', requires_grad=True)
K: tensor([ 1.8281, -0.4785, -1.7656,  1.7891,  1.0547,  0.9805,  2.3594,  1.7344,  0.9648, -2.5469, -1.7188, -2.0156,  0.6133, -2.3906,  1.8828, -1.6172,  1.3438,  1.7578, -2.0312, -2.2188,  1.0234, -1.8672, -0.8164,  0.4863,  0.8867, -1.4297, -1.2031, -1.5156, -0.3438, -2.1406, -1.6875, -1.0859,
         2.0625, -1.5547,  2.1875, -2.2969, -1.1875,  2.0469, -1.8203,  3.4219,  1.5547,  1.6641, -1.2656, -2.2031, -0.8594, -0.4648, -1.2734,  2.5156,  2.4219, -1.4531, -2.2344,  1.7891,  1.2188, -2.1562,  1.6641,  1.3281,  1.4297, -0.9414,  1.2734,  1.5312,  2.0938,  2.7344, -1.5703,  1.6719],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0780,  0.0259,  0.0236,  ..., -0.0126,  0.0145, -0.0251],
        [-0.0420, -0.0084, -0.0301,  ...,  0.0295, -0.0301,  0.0276],
        [ 0.0235, -0.0009,  0.0254,  ..., -0.0532,  0.0381, -0.0073],
        ...,
        [-0.0275,  0.0025, -0.0036,  ...,  0.0164, -0.0228,  0.0271],
        [ 0.0029, -0.0132,  0.0118,  ..., -0.0388,  0.0398, -0.0145],
        [-0.0422,  0.0099, -0.0322,  ...,  0.0495, -0.0337, -0.0019]], device='cuda:0', requires_grad=True)
Q: tensor([-2.1094, -0.0227,  1.1250, -1.7031, -1.5938, -1.7031, -1.9062, -1.5234, -1.5625,  1.8750,  1.9453,  2.0938, -1.1094,  2.9688, -1.9375,  1.4688, -1.4062, -1.9609,  1.8203,  1.4141, -0.5000,  1.1484,  1.6641, -0.8945, -1.7891,  1.5547,  1.5938,  2.2031,  1.3750,  1.5312,  1.4141,  0.6367,
        -2.0469,  1.0234, -1.2422,  2.2031,  1.5156, -1.9688,  1.0703, -1.2656, -1.8594, -1.9609,  0.9805,  1.9531, -0.0356,  0.8867,  1.3984, -0.9492, -1.5000,  1.7188,  1.8594, -1.0859, -1.0469,  1.2969, -1.3828, -0.4434, -2.3281,  1.4375, -2.2656, -1.1719, -1.9141, -1.8516,  0.9883, -1.1094],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -13.5000, -13.4375, -13.6875, -15.7500, -13.5625, -12.8125, -13.5000, -13.6875, -11.0625, -13.8750, -12.9375, -15.5625, -14.0000, -12.8750],
        [  0.0000, -17.7500, -19.7500, -17.7500, -20.6250, -18.7500, -17.7500, -19.5000, -18.2500, -16.5000, -17.0000, -18.5000, -21.7500, -18.5000, -18.6250],
        [  0.0000, -19.1250, -20.3750, -20.2500, -21.8750, -19.8750, -19.0000, -20.2500, -19.1250, -17.5000, -19.6250, -19.2500, -23.1250, -19.6250, -19.6250],
        [  0.0000, -15.6875, -16.1250, -15.6875, -19.0000, -16.8750, -16.0000, -16.6250, -15.1875, -14.4375, -16.7500, -15.3750, -19.2500, -15.6250, -15.2500],
        [  0.0000, -16.5000, -16.7500, -16.1250, -19.5000, -17.3750, -16.5000, -17.5000, -16.6250, -14.7500, -16.7500, -16.2500, -19.8750, -17.0000, -16.1250],
        [  0.0000, -15.9375, -16.2500, -15.8750, -19.2500, -17.1250, -16.6250, -17.0000, -15.9375, -14.9375, -16.8750, -16.1250, -19.5000, -16.3750, -16.1250],
        [  0.0000, -20.5000, -22.7500, -20.6250, -24.1250, -21.8750, -21.3750, -24.8750, -19.2500, -21.5000, -20.5000, -21.5000, -27.0000, -19.6250, -21.3750],
        [  0.0000, -14.5000, -15.1250, -14.6250, -17.0000, -15.5625, -14.5000, -14.5625, -14.7500, -12.0625, -15.1250, -14.4375, -17.1250, -15.0000, -14.1250],
        [  0.0000, -16.1250, -17.6250, -16.6250, -18.8750, -16.7500, -16.6250, -19.1250, -15.4375, -16.8750, -16.2500, -16.6250, -21.1250, -15.8750, -16.5000],
        [  0.0000, -12.6875, -11.5625, -13.0000, -14.5000, -12.5625, -12.2500, -11.6875, -12.1875, -10.3750, -14.3125, -11.5000, -13.9375, -12.6250, -11.7500],
        [  0.0000, -17.7500, -18.8750, -17.5000, -20.5000, -18.6250, -17.5000, -18.5000, -18.2500, -15.7500, -17.3750, -18.1250, -21.0000, -18.5000, -18.1250],
        [  0.0000, -20.3750, -21.5000, -20.5000, -23.7500, -21.2500, -20.7500, -23.5000, -19.0000, -20.5000, -20.8750, -20.5000, -26.3750, -19.5000, -20.5000],
        [  0.0000, -14.3125, -14.6875, -14.4375, -16.7500, -15.3125, -14.2500, -14.1875, -14.3750, -11.8750, -15.0625, -14.1250, -16.7500, -14.7500, -13.7500],
        [  0.0000, -19.1250, -21.3750, -19.3750, -22.5000, -20.6250, -19.2500, -21.3750, -19.2500, -18.3750, -19.0000, -20.1250, -24.0000, -19.5000, -20.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8965],
        [0.9850],
        [0.9971],
        [0.8385],
        [0.9045],
        [0.8975],
        [0.9971],
        [0.9095],
        [0.9733],
        [0.7476],
        [0.9326],
        [0.9932],
        [0.8669],
        [0.9111]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2139,     0.7852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0371,     0.3125,     0.6523,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0132,     0.0708,     0.6758,     0.2393,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0205,     0.1396,     0.5508,     0.2070,     0.0801,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0040,     0.0435,     0.1455,     0.1318,     0.0408,     0.6328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.0183,     0.0723,     0.0479,     0.0145,     0.6797,     0.1641,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.0164,     0.1201,     0.0811,     0.0061,     0.4277,     0.1445,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0028,     0.0076,     0.0038,     0.0030,     0.2754,     0.0225,     0.6602,     0.0227,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.0059,     0.0253,     0.0165,     0.0083,     0.0889,     0.0635,     0.3242,     0.0981,     0.3672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0011,     0.0066,     0.0021,     0.0015,     0.0422,     0.0457,     0.2148,     0.0101,     0.6562,     0.0182,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0042,     0.0064,     0.0033,     0.0032,     0.0080,     0.0464,     0.0393,     0.0923,     0.1943,     0.2910,     0.3105,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0031,     0.0134,     0.0083,     0.0008,     0.0491,     0.0200,     0.0259,     0.0226,     0.1602,     0.0476,     0.4023,     0.2451,     0.0000,     0.0000],
        [    0.0002,     0.0004,     0.0009,     0.0003,     0.0003,     0.0245,     0.0021,     0.0549,     0.0020,     0.0605,     0.0066,     0.0330,     0.7852,     0.0297,     0.0000],
        [    0.0028,     0.0041,     0.0085,     0.0018,     0.0033,     0.0143,     0.0258,     0.0270,     0.0204,     0.0859,     0.0327,     0.1108,     0.2246,     0.1465,     0.2930]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0139,  0.0218,  0.0503,  ..., -0.0137,  0.0211, -0.0239],
        [-0.0294, -0.0262,  0.0222,  ..., -0.0440, -0.0412,  0.0287],
        [-0.0400, -0.0471,  0.0387,  ..., -0.0128, -0.0282,  0.0100],
        ...,
        [ 0.0318, -0.0218, -0.0215,  ..., -0.0184, -0.0282, -0.0007],
        [ 0.0172,  0.0621, -0.0002,  ...,  0.0697, -0.0204, -0.0013],
        [ 0.0049,  0.0055,  0.0013,  ..., -0.0049,  0.0315, -0.0104]], device='cuda:0', requires_grad=True)
K: tensor([-0.1143, -1.2344, -1.0078, -0.4922, -0.0737, -0.4941,  0.0864,  1.9219,  0.5781,  0.7305,  1.3828, -1.5312,  1.0938,  1.1328,  0.5352,  0.9023,  2.2500, -0.9141,  1.0391, -2.0625, -0.1152, -2.1562,  0.4062,  1.5000, -2.7500, -0.0728,  0.0593,  0.5664, -1.1797,  0.4395, -2.2812,  0.2871,
         0.6016, -1.3438, -1.0312, -1.6797,  0.6719,  1.7031, -0.1846,  1.0078,  2.0625,  0.0466, -1.3125,  1.2422, -0.9531, -1.0156,  0.5195, -0.1592, -0.4355,  0.2324,  0.7227, -2.0156,  2.1719, -0.6406, -0.3633, -2.3750,  0.4492, -0.9531,  1.3125,  0.0669, -0.8750, -0.0165, -0.8633,  1.3203],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0152,  0.0314, -0.0580,  ..., -0.0127, -0.0412, -0.0036],
        [-0.0240,  0.0186,  0.0078,  ..., -0.0119, -0.0002, -0.0347],
        [ 0.0176,  0.0414, -0.0286,  ...,  0.0197, -0.0333,  0.0104],
        ...,
        [-0.0046, -0.0180,  0.0063,  ..., -0.0276,  0.0346,  0.0013],
        [ 0.0181, -0.0130, -0.0055,  ..., -0.0106,  0.0299,  0.0126],
        [ 0.0447,  0.0135,  0.0152,  ..., -0.0301, -0.0274,  0.0356]], device='cuda:0', requires_grad=True)
Q: tensor([-2.2500,  0.0898, -1.1406, -1.4766,  1.9453, -3.3906, -1.5938, -1.3672,  0.9336, -2.5469,  3.9531, -1.6953,  0.8867,  1.9141,  2.9688, -3.0625,  1.2891,  1.4844,  3.2969, -1.9375,  1.0859, -1.8125,  0.0986, -0.4844, -1.7812, -0.0287, -1.4688,  2.2500,  0.8828, -0.5508, -1.6406, -0.5039,
         2.1719,  1.7188,  0.9961, -0.6523, -3.2344, -0.6250,  1.7031, -0.2773,  1.9766,  1.0234,  4.7500, -0.1025, -3.1875, -0.4570,  3.8125, -2.2969, -1.6094,  1.1641,  2.4375, -1.1172,  1.3438,  0.4531,  3.5625, -1.5859,  1.3828,  0.3906,  0.3574, -0.7188,  1.5859,  2.0625, -0.1572, -0.8164],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.2969,  2.7500,  2.0938,  2.2656,  4.7500,  3.8594,  5.0000,  3.6094,  5.4375,  4.4375,  5.4688,  6.6250,  5.1250,  6.0312],
        [ 0.0000,  2.1250,  2.8594,  3.2812,  2.6875,  3.4219,  5.1250,  3.9844,  5.5000,  6.0000,  6.9062,  6.7812,  6.0938,  7.4375,  8.0000],
        [ 0.0000,  1.6797,  3.9375,  2.8906,  2.9219,  4.3438,  5.3125,  5.6250,  5.7188,  7.6875,  7.0938,  8.0000,  8.8125,  8.2500,  8.8750],
        [ 0.0000,  1.9219,  3.2969,  2.3125,  1.3672,  6.0312,  4.2188,  6.3125,  4.6875,  6.7812,  5.3750,  7.1562,  8.3750,  7.0625,  8.4375],
        [ 0.0000,  2.3750,  3.5781,  3.4844,  2.3125,  5.0625,  4.8750,  6.0000,  5.5000,  7.3125,  6.2500,  7.8750,  9.0000,  8.1875,  9.5625],
        [ 0.0000,  1.4531,  2.8281,  2.4219,  1.2266,  5.0625,  3.6562,  4.6875,  3.7500,  6.0938,  4.7500,  7.1875,  7.5000,  6.2812,  8.6875],
        [ 0.0000,  1.2031,  3.2031,  2.8125,  0.2217,  4.4688,  3.3750,  3.7031,  3.5469,  5.8125,  4.2812,  6.9375,  6.2500,  5.9375,  8.2500],
        [ 0.0000,  1.2812,  2.2656,  1.5859,  1.3281,  5.8750,  3.3594,  6.7500,  3.3750,  6.8438,  4.6875,  6.1562,  9.3750,  6.0312,  8.3125],
        [ 0.0000,  1.0156,  2.4688,  2.0469,  1.3594,  3.7344,  3.3906,  5.0312,  3.8281,  5.1562,  4.4062,  6.4062,  7.8438,  6.4375,  7.7812],
        [ 0.0000,  0.1426,  1.9453,  0.8164,  0.4629,  3.8125,  3.8906,  5.4375,  2.3750,  6.5625,  2.9688,  5.5938,  7.7812,  4.9062,  7.4062],
        [ 0.0000,  1.4219,  1.8359,  1.1797,  1.1484,  2.0625,  3.8125,  3.6562,  4.5000,  5.2500,  5.6562,  5.7188,  6.1250,  7.0312,  7.9062],
        [ 0.0000,  0.9531,  2.4219,  1.9375, -0.3574,  3.7188,  2.8125,  3.0781,  2.9375,  4.9062,  3.6875,  5.8125,  5.3125,  5.3438,  7.3750],
        [ 0.0000,  0.8398,  1.6250,  0.6328,  0.5039,  4.9375,  2.4844,  5.7500,  2.4375,  5.8438,  3.6094,  5.2188,  8.3750,  5.1250,  7.5312],
        [ 0.0000,  0.3828,  1.1094, -0.4258,  0.1729,  1.6328,  2.2188,  2.2656,  1.9844,  3.4219,  2.4531,  3.6719,  4.3750,  3.9531,  4.6562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3254],
        [0.1229],
        [0.0561],
        [0.0466],
        [0.0316],
        [0.0269],
        [0.0241],
        [0.0154],
        [0.0107],
        [0.0066],
        [0.0086],
        [0.0121],
        [0.0092],
        [0.0070]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.8555, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0222, 0.1348, 0.8438, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0044, 0.1787, 0.2275, 0.5898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0464, 0.5039, 0.2422, 0.0562, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0378, 0.0894, 0.0767, 0.0337, 0.0354, 0.7266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0062, 0.1885, 0.1108, 0.0479, 0.0532, 0.3516, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0162, 0.1406, 0.0303, 0.0221, 0.0615, 0.3672, 0.1865, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0522, 0.1807, 0.0496, 0.0430, 0.0620, 0.2520, 0.1826, 0.0835, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0088, 0.1152, 0.0505, 0.0383, 0.0272, 0.1963, 0.1309, 0.0693, 0.0850, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.0325, 0.0168, 0.0258, 0.0048, 0.0540, 0.0430, 0.0277, 0.0154, 0.2090, 0.4434, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0302, 0.0129, 0.0498, 0.2295, 0.0591, 0.0664, 0.0303, 0.0359, 0.1187, 0.0918, 0.2539, 0.0208, 0.0000, 0.0000, 0.0000],
        [0.0242, 0.0177, 0.0067, 0.0101, 0.0156, 0.0942, 0.0527, 0.0195, 0.0659, 0.0991, 0.2363, 0.0162, 0.3418, 0.0000, 0.0000],
        [0.0305, 0.0491, 0.0123, 0.0147, 0.0173, 0.0669, 0.0427, 0.0154, 0.0277, 0.1748, 0.2197, 0.0276, 0.2520, 0.0500, 0.0000],
        [0.0063, 0.1514, 0.0898, 0.0625, 0.0811, 0.0933, 0.1523, 0.0679, 0.0124, 0.0508, 0.0153, 0.0236, 0.0718, 0.0070, 0.1147]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0056, -0.0003,  0.0137,  ..., -0.0222,  0.0216,  0.0198],
        [ 0.0174,  0.0027, -0.0193,  ..., -0.0112, -0.0114, -0.0123],
        [-0.0125, -0.0347, -0.0017,  ...,  0.0311, -0.0322, -0.0011],
        ...,
        [-0.0065,  0.0103,  0.0161,  ..., -0.0271, -0.0475,  0.0137],
        [-0.0284, -0.0195, -0.0222,  ..., -0.0098, -0.0279,  0.0010],
        [ 0.0013,  0.0156,  0.0209,  ...,  0.0193,  0.0032,  0.0253]], device='cuda:0', requires_grad=True)
K: tensor([-0.7305, -0.4355,  0.2852, -0.3809, -0.3906, -0.4082, -0.3789,  0.3457, -1.7891,  0.2207, -0.8242, -1.3359, -0.0884,  1.4844, -0.2812,  0.3320,  0.9258,  0.2734,  2.4844,  0.6523,  0.1045, -1.2188,  0.9766,  0.2832, -0.9531,  0.5938, -0.2695,  0.6523,  1.4297, -1.3906,  0.0786, -1.4453,
         0.2217,  0.1748, -0.2715,  1.6328, -0.2070, -0.2422,  0.0854, -0.2139,  0.2178, -0.2812, -0.9883,  0.8672, -0.6367,  0.7344, -1.7266, -1.5859, -0.2305,  0.1235,  0.8516, -0.9844, -1.0234,  1.0078,  0.6250, -0.6484,  0.1572, -0.9883, -1.2656, -1.1172,  1.0469, -0.5195,  0.2773,  1.0703],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0369,  0.0327, -0.0309,  ...,  0.0136,  0.0073,  0.0200],
        [-0.0198,  0.0061, -0.0075,  ..., -0.0282, -0.0083, -0.0422],
        [-0.0137, -0.0090, -0.0088,  ..., -0.0158,  0.0008,  0.0002],
        ...,
        [ 0.0104,  0.0048, -0.0345,  ..., -0.0172,  0.0233,  0.0202],
        [-0.0072, -0.0126, -0.0369,  ...,  0.0046, -0.0109,  0.0357],
        [-0.0016,  0.0225, -0.0005,  ..., -0.0185, -0.0148, -0.0136]], device='cuda:0', requires_grad=True)
Q: tensor([-1.1719, -1.2734, -1.2500, -2.0938, -0.7617, -2.5312, -0.1680,  1.7656, -0.1943, -0.9805, -1.1328,  1.0000, -0.0918,  1.2109, -0.1143, -1.9531,  1.3516, -1.6172,  1.7031, -0.4766,  0.4570, -1.6328, -0.9492,  0.6250, -0.5117,  0.3340,  0.8125,  1.0469,  1.6484,  0.4766, -0.5352, -0.1123,
         0.0918, -0.8867, -0.6328, -0.9141, -0.3164, -1.4609,  1.6172,  0.4277,  1.1953,  0.2715, -1.4922,  0.5469, -2.2500,  0.1094,  0.2422,  0.2559,  1.1484, -0.7344,  0.1787,  0.5352, -1.3438, -0.4414,  0.6641, -0.7578, -0.8477, -2.7188, -0.0242, -1.2734,  1.1562, -1.0469,  0.0065,  0.7773],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.7891,      1.0469,      0.7812,      0.7695,      1.2188,      0.5625,     -0.0869,     -2.1875,      0.5898,     -1.6328,     -1.5781,      0.0019,     -3.2031,      0.1924],
        [     0.0000,      1.8047,      3.6406,      4.8438,      4.1250,      2.8281,      1.5234,      1.8047,      2.0312,      1.5312,      1.7578,     -0.0581,      2.8281,      0.9766,      1.0781],
        [     0.0000,      3.7031,      3.9375,      4.8750,      4.8438,      4.1562,      3.6719,      3.7344,      3.0000,      3.1250,      2.3750,      0.9102,      3.4688,      1.6641,      2.0625],
        [     0.0000,      2.3906,      1.6484,      0.1885,      1.1797,      3.4219,      0.7734,      1.2656,     -0.2910,      1.9766,      1.0391,      1.3125,      1.5781,     -0.7109,      1.1016],
        [     0.0000,      0.8594,      0.7031,     -0.1167,     -0.0684,      2.9531,      0.9766,      0.7422,     -1.0391,      1.5547,      1.4609,      0.3418,      1.3672,     -1.5547,      0.3516],
        [     0.0000,      3.4219,      2.8906,      2.0469,      2.1562,      4.0312,      3.6719,      4.4375,      2.1250,      3.3281,      3.1250,      2.0781,      2.8125,      1.1172,      2.3906],
        [     0.0000,      2.1562,      0.6211,      0.3066,      1.3281,      3.1094,      2.4375,      2.3750,      3.0781,      3.2500,      3.1875,      1.2344,      3.0156,      2.8906,      2.0781],
        [     0.0000,      1.2422,     -0.0540,     -0.1953,      0.1719,      1.5781,      1.2500,      0.4707,      0.5859,      2.4375,      2.5156,      0.4805,      2.6406,      0.5117,      1.5547],
        [     0.0000,      2.5625,      1.7500,      1.4688,      1.1250,      3.0938,      2.7031,      2.0625,      2.2656,      3.4531,      5.6562,      2.4062,      4.6562,      2.3594,      1.9062],
        [     0.0000,     -1.3672,     -2.0156,     -1.6016,     -3.2812,     -0.8594,     -1.0859,     -1.5234,     -2.1094,      0.4922,      1.2500,      0.3672,      2.2188,     -1.2578,     -0.3125],
        [     0.0000,     -0.8438,      0.5039,      2.0312,      0.6758,      0.7891,      0.0070,      0.1729,      1.3672,      1.1172,      2.1406,     -0.3711,      3.5781,      1.5938,      0.4492],
        [     0.0000,     -0.3125,     -1.2734,     -0.8711,     -0.4355,      1.3594,      0.7812,     -0.2090,      1.0078,      1.4141,      2.2812,     -0.3926,      2.6562,      2.0000,      1.2422],
        [     0.0000,      0.4766,     -0.9062,     -0.7266,     -0.5664,      0.7891,      0.3379,     -0.6836,     -0.0957,      1.7422,      1.9766,     -0.0996,      2.1094,      0.4961,      1.3906],
        [     0.0000,      3.1875,      2.6562,      2.3125,      2.5625,      2.7031,      3.1875,      2.3906,      0.6875,      2.0938,      0.8945,      1.3281,      2.4375,      0.1133,      2.9062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2221],
        [0.1209],
        [0.0388],
        [0.0746],
        [0.0515],
        [0.0341],
        [0.0204],
        [0.0561],
        [0.0071],
        [0.0896],
        [0.0249],
        [0.0632],
        [0.0398],
        [0.0110]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1309 a:0.1504 and:0.1875 and:0.1152atoes:0.0513,:0.4023 a:0.1050vern:0.0679)
vern
------
		( a:0.1504 and:0.1875 and:0.1152atoes:0.0513,:0.4023 a:0.1050vern:0.0679ing:0.1099)
ing.
The most common form of the fruit is the most common in
@ 2550 train 4.8665 , allloss: 4.8717, dt: 1763.97ms, fracRes: 0.3215, norm(attn): 0.1846, norm(output): 0.3750, norm(x): 0.3566, norm(y): 1.0111, norm:2.0915, tok/sec: 74305.12, flops:77.98, batch-reuse:1
@ 2551 train 5.6571 , allloss: 5.6676, dt: 1354.46ms, fracRes: 0.3304, norm(attn): 0.1777, norm(output): 0.3750, norm(x): 0.3593, norm(y): 1.0111, norm:3.6751, tok/sec: 96771.01, flops:101.56, batch-reuse:1
@ 2552 train 4.8486 , allloss: 4.8510, dt: 1343.23ms, fracRes: 0.3182, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3592, norm(y): 1.0110, norm:2.5383, tok/sec: 97580.08, flops:102.41, batch-reuse:1
@ 2553 train 4.8543 , allloss: 4.8563, dt: 1319.18ms, fracRes: 0.3197, norm(attn): 0.1836, norm(output): 0.3770, norm(x): 0.3579, norm(y): 1.0110, norm:2.2664, tok/sec: 99358.93, flops:104.28, batch-reuse:1
@ 2554 train 4.8183 , allloss: 4.8222, dt: 1317.88ms, fracRes: 0.3217, norm(attn): 0.1836, norm(output): 0.3750, norm(x): 0.3561, norm(y): 1.0111, norm:2.2587, tok/sec: 99456.55, flops:104.38, batch-reuse:1
@ 2555 train 4.6523 , allloss: 4.6571, dt: 1307.58ms, fracRes: 0.3211, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3574, norm(y): 1.0110, norm:2.0523, tok/sec: 100240.21, flops:105.20, batch-reuse:1
@ 2556 train 4.7637 , allloss: 4.7649, dt: 1318.59ms, fracRes: 0.3261, norm(attn): 0.1807, norm(output): 0.3770, norm(x): 0.3579, norm(y): 1.0114, norm:2.4066, tok/sec: 99403.12, flops:104.33, batch-reuse:1
@ 2557 train 4.7750 , allloss: 4.7761, dt: 1313.51ms, fracRes: 0.3239, norm(attn): 0.1816, norm(output): 0.3750, norm(x): 0.3560, norm(y): 1.0114, norm:2.3872, tok/sec: 99787.32, flops:104.73, batch-reuse:1
@ 2558 train 4.7892 , allloss: 4.7905, dt: 1320.29ms, fracRes: 0.3231, norm(attn): 0.1836, norm(output): 0.3770, norm(x): 0.3551, norm(y): 1.0112, norm:2.0486, tok/sec: 99275.33, flops:104.19, batch-reuse:1
@ 2559 train 4.7872 , allloss: 4.7894, dt: 1321.09ms, fracRes: 0.3245, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3539, norm(y): 1.0112, norm:2.6905, tok/sec: 99214.79, flops:104.13, batch-reuse:1
@ 2560 train 4.6453 , allloss: 4.6470, dt: 1318.68ms, fracRes: 0.3223, norm(attn): 0.1895, norm(output): 0.3750, norm(x): 0.3532, norm(y): 1.0111, norm:2.2913, tok/sec: 99396.67, flops:104.32, batch-reuse:1
@ 2561 train 4.6435 , allloss: 4.6449, dt: 1318.10ms, fracRes: 0.3215, norm(attn): 0.1904, norm(output): 0.3750, norm(x): 0.3559, norm(y): 1.0111, norm:2.4284, tok/sec: 99440.36, flops:104.36, batch-reuse:1
@ 2562 train 4.6708 , allloss: 4.6723, dt: 1334.03ms, fracRes: 0.3213, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3559, norm(y): 1.0111, norm:2.4658, tok/sec: 98252.51, flops:103.12, batch-reuse:1
@ 2563 train 4.6346 , allloss: 4.6367, dt: 1280.82ms, fracRes: 0.3195, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3557, norm(y): 1.0111, norm:2.6891, tok/sec: 102334.41, flops:107.40, batch-reuse:1
@ 2564 train 4.6167 , allloss: 4.6180, dt: 1288.68ms, fracRes: 0.3197, norm(attn): 0.1895, norm(output): 0.3750, norm(x): 0.3570, norm(y): 1.0111, norm:2.0108, tok/sec: 101710.37, flops:106.75, batch-reuse:1
@ 2565 train 4.8131 , allloss: 4.8168, dt: 1311.71ms, fracRes: 0.3188, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3601, norm(y): 1.0111, norm:2.6203, tok/sec: 99924.86, flops:104.87, batch-reuse:1
@ 2566 train 4.7438 , allloss: 4.7506, dt: 1328.03ms, fracRes: 0.3216, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3604, norm(y): 1.0112, norm:2.2180, tok/sec: 98696.29, flops:103.58, batch-reuse:1
@ 2567 train 4.7618 , allloss: 4.7640, dt: 1309.43ms, fracRes: 0.3230, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3603, norm(y): 1.0112, norm:2.5033, tok/sec: 100098.43, flops:105.06, batch-reuse:1
@ 2568 train 4.7380 , allloss: 4.7427, dt: 1301.09ms, fracRes: 0.3228, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3630, norm(y): 1.0111, norm:2.3639, tok/sec: 100740.15, flops:105.73, batch-reuse:1
@ 2569 train 4.7795 , allloss: 4.7808, dt: 1306.49ms, fracRes: 0.3226, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3604, norm(y): 1.0111, norm:2.0751, tok/sec: 100323.90, flops:105.29, batch-reuse:1
@ 2570 train 4.7054 , allloss: 4.7070, dt: 1333.89ms, fracRes: 0.3238, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3612, norm(y): 1.0112, norm:2.1085, tok/sec: 98262.71, flops:103.13, batch-reuse:1
@ 2571 train 4.7127 , allloss: 4.7174, dt: 1331.71ms, fracRes: 0.3228, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3613, norm(y): 1.0112, norm:2.4946, tok/sec: 98423.68, flops:103.30, batch-reuse:1
@ 2572 train 4.7872 , allloss: 4.7888, dt: 1333.21ms, fracRes: 0.3224, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3613, norm(y): 1.0111, norm:1.8325, tok/sec: 98313.16, flops:103.18, batch-reuse:1
@ 2573 train 4.7472 , allloss: 4.7508, dt: 1292.44ms, fracRes: 0.3235, norm(attn): 0.1826, norm(output): 0.3809, norm(x): 0.3620, norm(y): 1.0112, norm:2.4430, tok/sec: 101414.27, flops:106.44, batch-reuse:1
@ 2574 train 4.6977 , allloss: 4.7027, dt: 1289.69ms, fracRes: 0.3224, norm(attn): 0.1846, norm(output): 0.3770, norm(x): 0.3620, norm(y): 1.0113, norm:2.3890, tok/sec: 101630.57, flops:106.66, batch-reuse:1
@ 2575 train 4.7477 , allloss: 4.7496, dt: 1317.80ms, fracRes: 0.3225, norm(attn): 0.1836, norm(output): 0.3789, norm(x): 0.3624, norm(y): 1.0112, norm:2.0112, tok/sec: 99462.61, flops:104.39, batch-reuse:1
@ 2576 train 4.6708 , allloss: 4.6737, dt: 1295.72ms, fracRes: 0.3210, norm(attn): 0.1855, norm(output): 0.3770, norm(x): 0.3614, norm(y): 1.0112, norm:2.1472, tok/sec: 101157.52, flops:106.17, batch-reuse:1
@ 2577 train 4.7746 , allloss: 4.7812, dt: 1319.18ms, fracRes: 0.3208, norm(attn): 0.1846, norm(output): 0.3789, norm(x): 0.3610, norm(y): 1.0112, norm:1.8562, tok/sec: 99358.40, flops:104.28, batch-reuse:1
@ 2578 train 4.6080 , allloss: 4.6101, dt: 1343.48ms, fracRes: 0.3188, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3615, norm(y): 1.0112, norm:2.2199, tok/sec: 97561.38, flops:102.39, batch-reuse:1
@ 2579 train 4.7534 , allloss: 4.7606, dt: 1343.13ms, fracRes: 0.3187, norm(attn): 0.1846, norm(output): 0.3789, norm(x): 0.3626, norm(y): 1.0112, norm:1.8290, tok/sec: 97586.75, flops:102.42, batch-reuse:1
@ 2580 train 4.6953 , allloss: 4.6999, dt: 1338.75ms, fracRes: 0.3202, norm(attn): 0.1826, norm(output): 0.3789, norm(x): 0.3624, norm(y): 1.0113, norm:2.0253, tok/sec: 97906.05, flops:102.75, batch-reuse:1
@ 2581 train 4.6749 , allloss: 4.6816, dt: 1340.96ms, fracRes: 0.3224, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3631, norm(y): 1.0112, norm:2.1161, tok/sec: 97745.26, flops:102.59, batch-reuse:1
@ 2582 train 4.6671 , allloss: 4.6685, dt: 1333.11ms, fracRes: 0.3240, norm(attn): 0.1836, norm(output): 0.3789, norm(x): 0.3610, norm(y): 1.0113, norm:2.2362, tok/sec: 98320.39, flops:103.19, batch-reuse:1
@ 2583 train 4.6456 , allloss: 4.6470, dt: 1320.22ms, fracRes: 0.3246, norm(attn): 0.1846, norm(output): 0.3770, norm(x): 0.3597, norm(y): 1.0113, norm:1.8084, tok/sec: 99280.75, flops:104.20, batch-reuse:1
@ 2584 train 4.6783 , allloss: 4.6797, dt: 1319.95ms, fracRes: 0.3249, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3604, norm(y): 1.0112, norm:2.0736, tok/sec: 99300.40, flops:104.22, batch-reuse:1
@ 2585 train 4.7083 , allloss: 4.7115, dt: 1289.90ms, fracRes: 0.3254, norm(attn): 0.1855, norm(output): 0.3770, norm(x): 0.3612, norm(y): 1.0112, norm:2.1427, tok/sec: 101614.00, flops:106.65, batch-reuse:1
@ 2586 train 4.6083 , allloss: 4.6259, dt: 1303.30ms, fracRes: 0.3244, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3623, norm(y): 1.0113, norm:2.3859, tok/sec: 100569.04, flops:105.55, batch-reuse:1
@ 2587 train 4.7393 , allloss: 4.7408, dt: 1304.76ms, fracRes: 0.3231, norm(attn): 0.1855, norm(output): 0.3789, norm(x): 0.3606, norm(y): 1.0113, norm:2.2066, tok/sec: 100456.66, flops:105.43, batch-reuse:1
@ 2588 train 4.6553 , allloss: 4.6585, dt: 1298.31ms, fracRes: 0.3225, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3606, norm(y): 1.0112, norm:2.2679, tok/sec: 100955.89, flops:105.96, batch-reuse:1
@ 2589 train 4.7061 , allloss: 4.7106, dt: 1290.00ms, fracRes: 0.3243, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3596, norm(y): 1.0112, norm:1.8316, tok/sec: 101606.41, flops:106.64, batch-reuse:1
@ 2590 train 4.6899 , allloss: 4.6935, dt: 1292.65ms, fracRes: 0.3246, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3607, norm(y): 1.0112, norm:2.0296, tok/sec: 101398.19, flops:106.42, batch-reuse:1
@ 2591 train 4.7481 , allloss: 4.7500, dt: 1292.48ms, fracRes: 0.3224, norm(attn): 0.1895, norm(output): 0.3770, norm(x): 0.3630, norm(y): 1.0111, norm:2.1752, tok/sec: 101411.33, flops:106.43, batch-reuse:1
@ 2592 train 4.7722 , allloss: 4.7746, dt: 1318.41ms, fracRes: 0.3246, norm(attn): 0.1855, norm(output): 0.3770, norm(x): 0.3613, norm(y): 1.0113, norm:1.9889, tok/sec: 99416.80, flops:104.34, batch-reuse:1
@ 2593 train 4.7226 , allloss: 4.7244, dt: 1308.75ms, fracRes: 0.3250, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3640, norm(y): 1.0113, norm:2.2032, tok/sec: 100150.86, flops:105.11, batch-reuse:1
@ 2594 train 4.6793 , allloss: 4.6833, dt: 1301.84ms, fracRes: 0.3238, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3630, norm(y): 1.0112, norm:1.8929, tok/sec: 100681.89, flops:105.67, batch-reuse:1
@ 2595 train 4.6995 , allloss: 4.7014, dt: 1329.10ms, fracRes: 0.3251, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3597, norm(y): 1.0113, norm:2.2500, tok/sec: 98617.29, flops:103.50, batch-reuse:1
@ 2596 train 4.8023 , allloss: 4.8042, dt: 1329.26ms, fracRes: 0.3249, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3635, norm(y): 1.0113, norm:2.0910, tok/sec: 98605.44, flops:103.49, batch-reuse:1
@ 2597 train 4.6896 , allloss: 4.6918, dt: 1289.48ms, fracRes: 0.3216, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3651, norm(y): 1.0111, norm:2.5221, tok/sec: 101647.01, flops:106.68, batch-reuse:1
@ 2598 train 4.6473 , allloss: 4.6493, dt: 1309.27ms, fracRes: 0.3230, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3619, norm(y): 1.0112, norm:2.1129, tok/sec: 100110.90, flops:105.07, batch-reuse:1
@ 2599 train 4.6372 , allloss: 4.6386, dt: 1318.75ms, fracRes: 0.3247, norm(attn): 0.1914, norm(output): 0.3750, norm(x): 0.3612, norm(y): 1.0113, norm:2.7120, tok/sec: 99391.29, flops:104.31, batch-reuse:1
@ 2600 train 4.6238 , allloss: 4.6255, dt: 1291.44ms, fracRes: 0.3239, norm(attn): 0.1895, norm(output): 0.3770, norm(x): 0.3626, norm(y): 1.0112, norm:2.0492, tok/sec: 101493.04, flops:106.52, batch-reuse:1
@ 2601 train 4.7905 , allloss: 4.7943, dt: 1299.68ms, fracRes: 0.3240, norm(attn): 0.1914, norm(output): 0.3770, norm(x): 0.3628, norm(y): 1.0112, norm:2.1238, tok/sec: 100849.63, flops:105.84, batch-reuse:1
@ 2602 train 4.7946 , allloss: 4.7967, dt: 1295.28ms, fracRes: 0.3228, norm(attn): 0.1924, norm(output): 0.3770, norm(x): 0.3645, norm(y): 1.0112, norm:2.1514, tok/sec: 101192.26, flops:106.20, batch-reuse:1
@ 2603 train 4.9174 , allloss: 4.9188, dt: 1291.12ms, fracRes: 0.3251, norm(attn): 0.1904, norm(output): 0.3770, norm(x): 0.3619, norm(y): 1.0113, norm:1.7974, tok/sec: 101518.02, flops:106.55, batch-reuse:1
@ 2604 train 4.8727 , allloss: 4.8742, dt: 1311.32ms, fracRes: 0.3252, norm(attn): 0.1904, norm(output): 0.3750, norm(x): 0.3624, norm(y): 1.0113, norm:2.0651, tok/sec: 99954.57, flops:104.90, batch-reuse:1
@ 2605 train 4.8274 , allloss: 4.8294, dt: 1311.08ms, fracRes: 0.3244, norm(attn): 0.1934, norm(output): 0.3770, norm(x): 0.3645, norm(y): 1.0112, norm:2.2934, tok/sec: 99972.25, flops:104.92, batch-reuse:1
@ 2606 train 4.8837 , allloss: 4.8864, dt: 1285.09ms, fracRes: 0.3261, norm(attn): 0.1924, norm(output): 0.3750, norm(x): 0.3608, norm(y): 1.0112, norm:2.1128, tok/sec: 101994.24, flops:107.04, batch-reuse:1
@ 2607 train 4.8195 , allloss: 4.8224, dt: 1310.10ms, fracRes: 0.3268, norm(attn): 0.1943, norm(output): 0.3770, norm(x): 0.3640, norm(y): 1.0112, norm:2.0425, tok/sec: 100047.03, flops:105.00, batch-reuse:1
@ 2608 train 4.8507 , allloss: 4.8522, dt: 1343.40ms, fracRes: 0.3215, norm(attn): 0.1914, norm(output): 0.3770, norm(x): 0.3627, norm(y): 1.0111, norm:2.0197, tok/sec: 97567.64, flops:102.40, batch-reuse:1
@ 2609 train 5.0222 , allloss: 5.0237, dt: 1307.57ms, fracRes: 0.3229, norm(attn): 0.1895, norm(output): 0.3770, norm(x): 0.3622, norm(y): 1.0112, norm:2.5402, tok/sec: 100241.05, flops:105.20, batch-reuse:1
@ 2610 train 5.0054 , allloss: 5.0073, dt: 1304.80ms, fracRes: 0.3250, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3651, norm(y): 1.0113, norm:2.3119, tok/sec: 100453.49, flops:105.43, batch-reuse:1
@ 2611 train 4.8962 , allloss: 4.8984, dt: 1342.32ms, fracRes: 0.3250, norm(attn): 0.1895, norm(output): 0.3789, norm(x): 0.3637, norm(y): 1.0112, norm:2.5300, tok/sec: 97645.97, flops:102.48, batch-reuse:1
@ 2612 train 4.8799 , allloss: 4.8819, dt: 1300.18ms, fracRes: 0.3241, norm(attn): 0.1895, norm(output): 0.3770, norm(x): 0.3634, norm(y): 1.0111, norm:2.0463, tok/sec: 100810.70, flops:105.80, batch-reuse:1
@ 2613 train 4.7466 , allloss: 4.7488, dt: 1307.92ms, fracRes: 0.3264, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3627, norm(y): 1.0113, norm:2.1759, tok/sec: 100214.05, flops:105.18, batch-reuse:1
@ 2614 train 4.8887 , allloss: 4.8905, dt: 1313.51ms, fracRes: 0.3264, norm(attn): 0.1855, norm(output): 0.3770, norm(x): 0.3639, norm(y): 1.0113, norm:2.5173, tok/sec: 99787.32, flops:104.73, batch-reuse:1
@ 2615 train 4.9022 , allloss: 4.9057, dt: 1325.68ms, fracRes: 0.3251, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3651, norm(y): 1.0112, norm:2.1536, tok/sec: 98871.81, flops:103.77, batch-reuse:1
@ 2616 train 4.8791 , allloss: 4.8811, dt: 1307.75ms, fracRes: 0.3247, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3635, norm(y): 1.0112, norm:2.0182, tok/sec: 100226.98, flops:105.19, batch-reuse:1
@ 2617 train 4.7933 , allloss: 4.7979, dt: 1306.47ms, fracRes: 0.3232, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3648, norm(y): 1.0113, norm:1.9974, tok/sec: 100325.38, flops:105.29, batch-reuse:1
@ 2618 train 4.7540 , allloss: 4.7577, dt: 1330.43ms, fracRes: 0.3246, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3647, norm(y): 1.0113, norm:1.8973, tok/sec: 98518.86, flops:103.40, batch-reuse:1
@ 2619 train 4.8132 , allloss: 4.8147, dt: 1331.08ms, fracRes: 0.3249, norm(attn): 0.1865, norm(output): 0.3809, norm(x): 0.3641, norm(y): 1.0113, norm:2.0125, tok/sec: 98470.75, flops:103.35, batch-reuse:1
@ 2620 train 4.8939 , allloss: 4.8958, dt: 1337.94ms, fracRes: 0.3248, norm(attn): 0.1865, norm(output): 0.3809, norm(x): 0.3654, norm(y): 1.0112, norm:2.3494, tok/sec: 97965.71, flops:102.82, batch-reuse:1
@ 2621 train 4.8383 , allloss: 4.8407, dt: 1303.49ms, fracRes: 0.3255, norm(attn): 0.1865, norm(output): 0.3828, norm(x): 0.3653, norm(y): 1.0112, norm:2.3596, tok/sec: 100554.87, flops:105.53, batch-reuse:1
@ 2622 train 4.8379 , allloss: 4.8439, dt: 1297.69ms, fracRes: 0.3262, norm(attn): 0.1855, norm(output): 0.3828, norm(x): 0.3657, norm(y): 1.0112, norm:2.1113, tok/sec: 101003.88, flops:106.01, batch-reuse:1
@ 2623 train 4.8952 , allloss: 4.8982, dt: 1318.80ms, fracRes: 0.3270, norm(attn): 0.1855, norm(output): 0.3789, norm(x): 0.3629, norm(y): 1.0113, norm:2.1236, tok/sec: 99387.43, flops:104.31, batch-reuse:1
@ 2624 train 4.9162 , allloss: 4.9187, dt: 1320.39ms, fracRes: 0.3286, norm(attn): 0.1836, norm(output): 0.3809, norm(x): 0.3644, norm(y): 1.0113, norm:2.0908, tok/sec: 99267.96, flops:104.18, batch-reuse:1
@ 2625 train 4.8450 , allloss: 4.8465, dt: 1344.52ms, fracRes: 0.3275, norm(attn): 0.1865, norm(output): 0.3809, norm(x): 0.3653, norm(y): 1.0112, norm:2.2605, tok/sec: 97486.21, flops:102.31, batch-reuse:1
@ 2626 train 4.8087 , allloss: 4.8103, dt: 1306.46ms, fracRes: 0.3272, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3633, norm(y): 1.0112, norm:2.1171, tok/sec: 100326.41, flops:105.29, batch-reuse:1
@ 2627 train 4.8615 , allloss: 4.8660, dt: 1289.89ms, fracRes: 0.3249, norm(attn): 0.1865, norm(output): 0.3809, norm(x): 0.3646, norm(y): 1.0112, norm:2.0331, tok/sec: 101615.03, flops:106.65, batch-reuse:1
@ 2628 train 4.7778 , allloss: 4.7826, dt: 1343.47ms, fracRes: 0.3256, norm(attn): 0.1855, norm(output): 0.3789, norm(x): 0.3644, norm(y): 1.0113, norm:2.2791, tok/sec: 97562.54, flops:102.39, batch-reuse:1
@ 2629 train 4.7808 , allloss: 4.7857, dt: 1298.49ms, fracRes: 0.3227, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3643, norm(y): 1.0113, norm:2.0758, tok/sec: 100941.62, flops:105.94, batch-reuse:1
@ 2630 train 4.8806 , allloss: 4.8819, dt: 1279.83ms, fracRes: 0.3233, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3645, norm(y): 1.0113, norm:2.3575, tok/sec: 102413.51, flops:107.48, batch-reuse:1
@ 2631 train 4.7776 , allloss: 4.7786, dt: 1298.05ms, fracRes: 0.3225, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3643, norm(y): 1.0113, norm:2.0708, tok/sec: 100976.23, flops:105.98, batch-reuse:1
@ 2632 train 4.8269 , allloss: 4.8286, dt: 1334.11ms, fracRes: 0.3255, norm(attn): 0.1904, norm(output): 0.3789, norm(x): 0.3648, norm(y): 1.0112, norm:2.2495, tok/sec: 98246.95, flops:103.11, batch-reuse:1
@ 2633 train 4.8231 , allloss: 4.8274, dt: 1323.74ms, fracRes: 0.3262, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3654, norm(y): 1.0112, norm:2.0653, tok/sec: 99016.39, flops:103.92, batch-reuse:1
@ 2634 train 4.7934 , allloss: 4.7946, dt: 1279.94ms, fracRes: 0.3285, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3646, norm(y): 1.0113, norm:1.8796, tok/sec: 102404.45, flops:107.48, batch-reuse:1
@ 2635 train 4.7722 , allloss: 4.7739, dt: 1312.35ms, fracRes: 0.3283, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3639, norm(y): 1.0113, norm:1.9618, tok/sec: 99875.90, flops:104.82, batch-reuse:1
@ 2636 train 4.8452 , allloss: 4.8520, dt: 1285.33ms, fracRes: 0.3257, norm(attn): 0.1885, norm(output): 0.3809, norm(x): 0.3649, norm(y): 1.0113, norm:1.9716, tok/sec: 101975.42, flops:107.03, batch-reuse:1
@ 2637 train 4.8181 , allloss: 4.8247, dt: 1317.22ms, fracRes: 0.3240, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3677, norm(y): 1.0113, norm:1.8159, tok/sec: 99506.25, flops:104.43, batch-reuse:1
@ 2638 train 4.8670 , allloss: 4.8680, dt: 1286.18ms, fracRes: 0.3281, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3634, norm(y): 1.0113, norm:2.3820, tok/sec: 101907.79, flops:106.95, batch-reuse:1
@ 2639 train 4.9586 , allloss: 4.9612, dt: 1289.20ms, fracRes: 0.3276, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3666, norm(y): 1.0113, norm:2.1470, tok/sec: 101669.17, flops:106.70, batch-reuse:1
@ 2640 train 4.7762 , allloss: 4.7823, dt: 1279.44ms, fracRes: 0.3254, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3672, norm(y): 1.0113, norm:2.3595, tok/sec: 102444.46, flops:107.52, batch-reuse:1
@ 2641 train 4.8618 , allloss: 4.8631, dt: 1303.61ms, fracRes: 0.3272, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3693, norm(y): 1.0113, norm:2.2715, tok/sec: 100545.25, flops:105.52, batch-reuse:1
@ 2642 train 4.8323 , allloss: 4.8336, dt: 1297.91ms, fracRes: 0.3270, norm(attn): 0.1865, norm(output): 0.3828, norm(x): 0.3679, norm(y): 1.0113, norm:2.6502, tok/sec: 100986.95, flops:105.99, batch-reuse:1
@ 2643 train 4.7324 , allloss: 4.7352, dt: 1309.30ms, fracRes: 0.3276, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3655, norm(y): 1.0113, norm:2.0638, tok/sec: 100108.71, flops:105.07, batch-reuse:1
@ 2644 train 4.8072 , allloss: 4.8102, dt: 1293.84ms, fracRes: 0.3243, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3664, norm(y): 1.0113, norm:2.1163, tok/sec: 101304.72, flops:106.32, batch-reuse:1
@ 2645 train 4.8719 , allloss: 4.8730, dt: 1311.18ms, fracRes: 0.3275, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3666, norm(y): 1.0113, norm:2.1084, tok/sec: 99964.80, flops:104.91, batch-reuse:1
@ 2646 train 4.8639 , allloss: 4.8652, dt: 1305.80ms, fracRes: 0.3246, norm(attn): 0.1895, norm(output): 0.3789, norm(x): 0.3646, norm(y): 1.0112, norm:2.0756, tok/sec: 100376.40, flops:105.35, batch-reuse:1
@ 2647 train 4.8096 , allloss: 4.8112, dt: 1284.43ms, fracRes: 0.3267, norm(attn): 0.1885, norm(output): 0.3789, norm(x): 0.3624, norm(y): 1.0113, norm:2.1266, tok/sec: 102046.99, flops:107.10, batch-reuse:1
@ 2648 train 4.7453 , allloss: 4.7474, dt: 1291.92ms, fracRes: 0.3266, norm(attn): 0.1885, norm(output): 0.3789, norm(x): 0.3649, norm(y): 1.0113, norm:2.3293, tok/sec: 101455.18, flops:106.48, batch-reuse:1
@ 2649 train 4.8118 , allloss: 4.8140, dt: 1309.44ms, fracRes: 0.3260, norm(attn): 0.1895, norm(output): 0.3828, norm(x): 0.3669, norm(y): 1.0114, norm:2.3886, tok/sec: 100097.67, flops:105.05, batch-reuse:1
@ 2650 train 4.7598 , allloss: 4.7608, dt: 1313.15ms, fracRes: 0.3259, norm(attn): 0.1895, norm(output): 0.3789, norm(x): 0.3643, norm(y): 1.0113, norm:1.7390, tok/sec: 99815.24, flops:104.76, batch-reuse:1
@ 2651 train 4.7762 , allloss: 4.7782, dt: 1286.76ms, fracRes: 0.3287, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3640, norm(y): 1.0113, norm:2.0037, tok/sec: 101862.41, flops:106.91, batch-reuse:1
@ 2652 train 4.7803 , allloss: 4.7818, dt: 1287.98ms, fracRes: 0.3287, norm(attn): 0.1855, norm(output): 0.3828, norm(x): 0.3658, norm(y): 1.0114, norm:2.2615, tok/sec: 101765.42, flops:106.80, batch-reuse:1
@ 2653 train 4.7984 , allloss: 4.8035, dt: 1326.99ms, fracRes: 0.3268, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3666, norm(y): 1.0113, norm:2.0985, tok/sec: 98773.82, flops:103.66, batch-reuse:1
@ 2654 train 4.7623 , allloss: 4.7633, dt: 1315.95ms, fracRes: 0.3282, norm(attn): 0.1865, norm(output): 0.3828, norm(x): 0.3648, norm(y): 1.0114, norm:1.9730, tok/sec: 99602.79, flops:104.53, batch-reuse:1
@ 2655 train 4.7456 , allloss: 4.7471, dt: 1296.50ms, fracRes: 0.3268, norm(attn): 0.1895, norm(output): 0.3848, norm(x): 0.3656, norm(y): 1.0114, norm:1.8531, tok/sec: 101097.08, flops:106.10, batch-reuse:1
@ 2656 train 4.8588 , allloss: 4.8595, dt: 1315.74ms, fracRes: 0.3285, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3640, norm(y): 1.0115, norm:2.1654, tok/sec: 99618.58, flops:104.55, batch-reuse:1
@ 2657 train 4.7097 , allloss: 4.7119, dt: 1311.70ms, fracRes: 0.3256, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3644, norm(y): 1.0114, norm:1.9110, tok/sec: 99925.17, flops:104.87, batch-reuse:1
@ 2658 train 4.7735 , allloss: 4.7785, dt: 1296.98ms, fracRes: 0.3244, norm(attn): 0.1885, norm(output): 0.3809, norm(x): 0.3673, norm(y): 1.0113, norm:2.1057, tok/sec: 101059.43, flops:106.06, batch-reuse:1
@ 2659 train 4.7297 , allloss: 4.7347, dt: 1321.33ms, fracRes: 0.3259, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3650, norm(y): 1.0113, norm:2.2147, tok/sec: 99197.30, flops:104.11, batch-reuse:1
@ 2660 train 4.8031 , allloss: 4.8055, dt: 1312.04ms, fracRes: 0.3256, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3694, norm(y): 1.0113, norm:2.5667, tok/sec: 99899.50, flops:104.85, batch-reuse:1
@ 2661 train 4.7739 , allloss: 4.7758, dt: 1319.11ms, fracRes: 0.3253, norm(attn): 0.1875, norm(output): 0.3848, norm(x): 0.3706, norm(y): 1.0114, norm:2.2468, tok/sec: 99363.67, flops:104.28, batch-reuse:1
@ 2662 train 4.7014 , allloss: 4.7033, dt: 1280.11ms, fracRes: 0.3280, norm(attn): 0.1865, norm(output): 0.3848, norm(x): 0.3688, norm(y): 1.0115, norm:2.4464, tok/sec: 102391.42, flops:107.46, batch-reuse:1
@ 2663 train 4.7891 , allloss: 4.7903, dt: 1302.85ms, fracRes: 0.3268, norm(attn): 0.1865, norm(output): 0.3828, norm(x): 0.3680, norm(y): 1.0114, norm:2.3153, tok/sec: 100603.93, flops:105.59, batch-reuse:1
@ 2664 train 4.8059 , allloss: 4.8071, dt: 1278.48ms, fracRes: 0.3262, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3682, norm(y): 1.0113, norm:1.8733, tok/sec: 102521.80, flops:107.60, batch-reuse:1
@ 2665 train 4.7479 , allloss: 4.7490, dt: 1287.52ms, fracRes: 0.3261, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3676, norm(y): 1.0113, norm:2.0858, tok/sec: 101801.54, flops:106.84, batch-reuse:1
@ 2666 train 4.8459 , allloss: 4.8499, dt: 1284.45ms, fracRes: 0.3276, norm(attn): 0.1855, norm(output): 0.3867, norm(x): 0.3702, norm(y): 1.0114, norm:1.9791, tok/sec: 102045.04, flops:107.10, batch-reuse:1
@ 2667 train 4.8167 , allloss: 4.8221, dt: 1312.22ms, fracRes: 0.3286, norm(attn): 0.1865, norm(output): 0.3828, norm(x): 0.3682, norm(y): 1.0114, norm:2.0041, tok/sec: 99885.61, flops:104.83, batch-reuse:1
@ 2668 train 4.8081 , allloss: 4.8097, dt: 1296.55ms, fracRes: 0.3289, norm(attn): 0.1885, norm(output): 0.3809, norm(x): 0.3667, norm(y): 1.0113, norm:1.9703, tok/sec: 101092.86, flops:106.10, batch-reuse:1
@ 2669 train 4.7389 , allloss: 4.7414, dt: 1312.24ms, fracRes: 0.3270, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3668, norm(y): 1.0113, norm:1.8902, tok/sec: 99883.94, flops:104.83, batch-reuse:1
@ 2670 train 4.7496 , allloss: 4.7548, dt: 1332.50ms, fracRes: 0.3278, norm(attn): 0.1865, norm(output): 0.3828, norm(x): 0.3663, norm(y): 1.0115, norm:2.2127, tok/sec: 98365.34, flops:103.24, batch-reuse:1
@ 2671 train 4.7856 , allloss: 4.7901, dt: 1317.74ms, fracRes: 0.3278, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3664, norm(y): 1.0115, norm:2.0423, tok/sec: 99467.02, flops:104.39, batch-reuse:1
@ 2672 train 4.7208 , allloss: 4.7232, dt: 1292.73ms, fracRes: 0.3260, norm(attn): 0.1885, norm(output): 0.3789, norm(x): 0.3667, norm(y): 1.0114, norm:2.3341, tok/sec: 101391.70, flops:106.41, batch-reuse:1
@ 2673 train 4.6756 , allloss: 4.6772, dt: 1280.12ms, fracRes: 0.3270, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3674, norm(y): 1.0114, norm:1.9144, tok/sec: 102390.33, flops:107.46, batch-reuse:1
@ 2674 train 4.8283 , allloss: 4.8298, dt: 1314.21ms, fracRes: 0.3288, norm(attn): 0.1865, norm(output): 0.3828, norm(x): 0.3674, norm(y): 1.0114, norm:2.2671, tok/sec: 99734.10, flops:104.67, batch-reuse:1
@ 2675 train 4.8051 , allloss: 4.8066, dt: 1343.98ms, fracRes: 0.3255, norm(attn): 0.1865, norm(output): 0.3867, norm(x): 0.3705, norm(y): 1.0114, norm:2.2899, tok/sec: 97525.08, flops:102.35, batch-reuse:1
@ 2676 train 4.7330 , allloss: 4.7349, dt: 1335.98ms, fracRes: 0.3280, norm(attn): 0.1846, norm(output): 0.3828, norm(x): 0.3681, norm(y): 1.0115, norm:2.2789, tok/sec: 98109.31, flops:102.97, batch-reuse:1
@ 2677 train 4.7371 , allloss: 4.7398, dt: 1351.34ms, fracRes: 0.3297, norm(attn): 0.1846, norm(output): 0.3828, norm(x): 0.3667, norm(y): 1.0115, norm:2.0102, tok/sec: 96994.31, flops:101.80, batch-reuse:1
@ 2678 train 4.8246 , allloss: 4.8260, dt: 1341.80ms, fracRes: 0.3288, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3682, norm(y): 1.0114, norm:2.0201, tok/sec: 97683.43, flops:102.52, batch-reuse:1
@ 2679 train 4.7890 , allloss: 4.7939, dt: 1333.22ms, fracRes: 0.3272, norm(attn): 0.1865, norm(output): 0.3848, norm(x): 0.3690, norm(y): 1.0114, norm:2.2287, tok/sec: 98312.44, flops:103.18, batch-reuse:1
@ 2680 train 4.6634 , allloss: 4.6645, dt: 1273.10ms, fracRes: 0.3278, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3666, norm(y): 1.0114, norm:1.8219, tok/sec: 102954.67, flops:108.05, batch-reuse:1
@ 2681 train 4.7728 , allloss: 4.7744, dt: 1306.59ms, fracRes: 0.3265, norm(attn): 0.1875, norm(output): 0.3867, norm(x): 0.3696, norm(y): 1.0113, norm:2.0058, tok/sec: 100315.90, flops:105.28, batch-reuse:1
@ 2682 train 4.6414 , allloss: 4.6433, dt: 1299.73ms, fracRes: 0.3247, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3674, norm(y): 1.0114, norm:2.0868, tok/sec: 100845.57, flops:105.84, batch-reuse:1
@ 2683 train 4.7162 , allloss: 4.7192, dt: 1298.89ms, fracRes: 0.3246, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3701, norm(y): 1.0114, norm:2.4520, tok/sec: 100910.60, flops:105.91, batch-reuse:1
@ 2684 train 4.7629 , allloss: 4.7693, dt: 1300.72ms, fracRes: 0.3243, norm(attn): 0.1895, norm(output): 0.3906, norm(x): 0.3708, norm(y): 1.0113, norm:1.8182, tok/sec: 100768.75, flops:105.76, batch-reuse:1
@ 2685 train 4.7551 , allloss: 4.7576, dt: 1288.94ms, fracRes: 0.3268, norm(attn): 0.1885, norm(output): 0.3848, norm(x): 0.3686, norm(y): 1.0114, norm:2.0598, tok/sec: 101689.99, flops:106.73, batch-reuse:1
@ 2686 train 4.8218 , allloss: 4.8230, dt: 1282.40ms, fracRes: 0.3268, norm(attn): 0.1875, norm(output): 0.3867, norm(x): 0.3705, norm(y): 1.0114, norm:2.0057, tok/sec: 102208.56, flops:107.27, batch-reuse:1
@ 2687 train 4.7455 , allloss: 4.7471, dt: 1293.27ms, fracRes: 0.3283, norm(attn): 0.1865, norm(output): 0.3867, norm(x): 0.3723, norm(y): 1.0114, norm:1.9725, tok/sec: 101349.30, flops:106.37, batch-reuse:1
@ 2688 train 4.7367 , allloss: 4.7390, dt: 1300.51ms, fracRes: 0.3277, norm(attn): 0.1875, norm(output): 0.3867, norm(x): 0.3704, norm(y): 1.0114, norm:2.2439, tok/sec: 100785.45, flops:105.78, batch-reuse:1
@ 2689 train 4.8103 , allloss: 4.8121, dt: 1295.80ms, fracRes: 0.3283, norm(attn): 0.1875, norm(output): 0.3906, norm(x): 0.3726, norm(y): 1.0114, norm:2.2701, tok/sec: 101151.32, flops:106.16, batch-reuse:1
@ 2690 train 4.7755 , allloss: 4.7767, dt: 1305.63ms, fracRes: 0.3259, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3709, norm(y): 1.0114, norm:2.3704, tok/sec: 100389.98, flops:105.36, batch-reuse:1
@ 2691 train 4.7813 , allloss: 4.7844, dt: 1322.69ms, fracRes: 0.3278, norm(attn): 0.1865, norm(output): 0.3867, norm(x): 0.3696, norm(y): 1.0114, norm:2.0209, tok/sec: 99095.13, flops:104.00, batch-reuse:1
@ 2692 train 4.6374 , allloss: 4.6392, dt: 1344.76ms, fracRes: 0.3296, norm(attn): 0.1875, norm(output): 0.3906, norm(x): 0.3699, norm(y): 1.0114, norm:2.0523, tok/sec: 97468.47, flops:102.29, batch-reuse:1
@ 2693 train 4.8218 , allloss: 4.8241, dt: 1342.12ms, fracRes: 0.3260, norm(attn): 0.1885, norm(output): 0.3906, norm(x): 0.3722, norm(y): 1.0113, norm:2.5283, tok/sec: 97660.21, flops:102.50, batch-reuse:1
@ 2694 train 4.7722 , allloss: 4.7751, dt: 1303.57ms, fracRes: 0.3293, norm(attn): 0.1875, norm(output): 0.3887, norm(x): 0.3701, norm(y): 1.0115, norm:1.9440, tok/sec: 100548.60, flops:105.53, batch-reuse:1
@ 2695 train 4.7385 , allloss: 4.7414, dt: 1292.25ms, fracRes: 0.3319, norm(attn): 0.1875, norm(output): 0.3906, norm(x): 0.3691, norm(y): 1.0114, norm:2.2312, tok/sec: 101428.94, flops:106.45, batch-reuse:1
@ 2696 train 4.7218 , allloss: 4.7249, dt: 1320.71ms, fracRes: 0.3285, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3699, norm(y): 1.0113, norm:2.2201, tok/sec: 99243.66, flops:104.16, batch-reuse:1
@ 2697 train 4.6763 , allloss: 4.6813, dt: 1315.09ms, fracRes: 0.3310, norm(attn): 0.1875, norm(output): 0.3867, norm(x): 0.3673, norm(y): 1.0115, norm:2.1772, tok/sec: 99667.40, flops:104.60, batch-reuse:1
@ 2698 train 4.6900 , allloss: 4.6917, dt: 1333.41ms, fracRes: 0.3299, norm(attn): 0.1875, norm(output): 0.3867, norm(x): 0.3677, norm(y): 1.0115, norm:2.0705, tok/sec: 98298.31, flops:103.17, batch-reuse:1
@ 2699 train 4.7647 , allloss: 4.7685, dt: 1326.12ms, fracRes: 0.3268, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3670, norm(y): 1.0114, norm:2.1654, tok/sec: 98838.57, flops:103.73, batch-reuse:1
@ 2700 train 4.6779 , allloss: 4.6856, dt: 1295.30ms, fracRes: 0.3264, norm(attn): 0.1895, norm(output): 0.3867, norm(x): 0.3687, norm(y): 1.0114, norm:2.2771, tok/sec: 101190.33, flops:106.20, batch-reuse:1
@ 2701 train 4.6427 , allloss: 4.6464, dt: 1301.58ms, fracRes: 0.3269, norm(attn): 0.1895, norm(output): 0.3848, norm(x): 0.3670, norm(y): 1.0115, norm:1.9201, tok/sec: 100701.95, flops:105.69, batch-reuse:1
@ 2702 train 4.7669 , allloss: 4.7686, dt: 1267.01ms, fracRes: 0.3272, norm(attn): 0.1895, norm(output): 0.3848, norm(x): 0.3676, norm(y): 1.0114, norm:2.0458, tok/sec: 103449.97, flops:108.57, batch-reuse:1
@ 2703 train 4.7437 , allloss: 4.7492, dt: 1313.56ms, fracRes: 0.3272, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3693, norm(y): 1.0114, norm:1.8770, tok/sec: 99783.43, flops:104.72, batch-reuse:1
@ 2704 train 4.8809 , allloss: 4.8978, dt: 1297.31ms, fracRes: 0.3312, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3714, norm(y): 1.0115, norm:2.2900, tok/sec: 101033.91, flops:106.04, batch-reuse:1
@ 2705 train 4.7040 , allloss: 4.7060, dt: 1297.48ms, fracRes: 0.3302, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3695, norm(y): 1.0115, norm:2.1670, tok/sec: 101020.32, flops:106.02, batch-reuse:1
@ 2706 train 4.6837 , allloss: 4.6850, dt: 1279.91ms, fracRes: 0.3281, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3708, norm(y): 1.0114, norm:2.3470, tok/sec: 102407.19, flops:107.48, batch-reuse:1
@ 2707 train 4.7388 , allloss: 4.7413, dt: 1290.57ms, fracRes: 0.3290, norm(attn): 0.1865, norm(output): 0.3906, norm(x): 0.3693, norm(y): 1.0115, norm:2.3496, tok/sec: 101561.04, flops:106.59, batch-reuse:1
@ 2708 train 4.6849 , allloss: 4.6871, dt: 1296.94ms, fracRes: 0.3302, norm(attn): 0.1855, norm(output): 0.3887, norm(x): 0.3699, norm(y): 1.0116, norm:2.2424, tok/sec: 101062.12, flops:106.07, batch-reuse:1
@ 2709 train 4.6797 , allloss: 4.6839, dt: 1282.71ms, fracRes: 0.3302, norm(attn): 0.1865, norm(output): 0.3906, norm(x): 0.3710, norm(y): 1.0115, norm:1.8871, tok/sec: 102183.92, flops:107.24, batch-reuse:1
@ 2710 train 4.8283 , allloss: 4.8296, dt: 1331.15ms, fracRes: 0.3274, norm(attn): 0.1885, norm(output): 0.3906, norm(x): 0.3735, norm(y): 1.0113, norm:1.9932, tok/sec: 98464.90, flops:103.34, batch-reuse:1
@ 2711 train 4.8393 , allloss: 4.8401, dt: 1328.12ms, fracRes: 0.3292, norm(attn): 0.1855, norm(output): 0.3867, norm(x): 0.3682, norm(y): 1.0115, norm:2.0701, tok/sec: 98689.72, flops:103.58, batch-reuse:1
@ 2712 train 4.7731 , allloss: 4.7742, dt: 1290.69ms, fracRes: 0.3279, norm(attn): 0.1895, norm(output): 0.3867, norm(x): 0.3700, norm(y): 1.0115, norm:2.7117, tok/sec: 101551.77, flops:106.58, batch-reuse:1
@ 2713 train 4.7367 , allloss: 4.7379, dt: 1262.29ms, fracRes: 0.3261, norm(attn): 0.1914, norm(output): 0.3867, norm(x): 0.3708, norm(y): 1.0115, norm:2.2921, tok/sec: 103837.01, flops:108.98, batch-reuse:1
@ 2714 train 4.7641 , allloss: 4.7679, dt: 1300.40ms, fracRes: 0.3279, norm(attn): 0.1914, norm(output): 0.3867, norm(x): 0.3700, norm(y): 1.0114, norm:2.1311, tok/sec: 100793.75, flops:105.78, batch-reuse:1
@ 2715 train 4.7082 , allloss: 4.7113, dt: 1290.67ms, fracRes: 0.3286, norm(attn): 0.1895, norm(output): 0.3887, norm(x): 0.3685, norm(y): 1.0114, norm:2.2447, tok/sec: 101553.43, flops:106.58, batch-reuse:1
@ 2716 train 4.6670 , allloss: 4.6711, dt: 1306.99ms, fracRes: 0.3305, norm(attn): 0.1875, norm(output): 0.3867, norm(x): 0.3685, norm(y): 1.0115, norm:1.9322, tok/sec: 100285.43, flops:105.25, batch-reuse:1
@ 2717 train 4.7275 , allloss: 4.7330, dt: 1302.37ms, fracRes: 0.3300, norm(attn): 0.1885, norm(output): 0.3906, norm(x): 0.3703, norm(y): 1.0115, norm:2.0439, tok/sec: 100641.23, flops:105.62, batch-reuse:1
@ 2718 train 4.6461 , allloss: 4.6479, dt: 1311.25ms, fracRes: 0.3295, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3704, norm(y): 1.0115, norm:2.1556, tok/sec: 99959.38, flops:104.91, batch-reuse:1
@ 2719 train 4.7733 , allloss: 4.7750, dt: 1335.03ms, fracRes: 0.3313, norm(attn): 0.1885, norm(output): 0.3848, norm(x): 0.3699, norm(y): 1.0115, norm:1.9546, tok/sec: 98179.25, flops:103.04, batch-reuse:1
@ 2720 train 4.7574 , allloss: 4.7606, dt: 1308.21ms, fracRes: 0.3294, norm(attn): 0.1885, norm(output): 0.3945, norm(x): 0.3747, norm(y): 1.0115, norm:2.2715, tok/sec: 100191.85, flops:105.15, batch-reuse:1
@ 2721 train 4.6504 , allloss: 4.6576, dt: 1297.34ms, fracRes: 0.3307, norm(attn): 0.1875, norm(output): 0.3906, norm(x): 0.3733, norm(y): 1.0115, norm:2.2128, tok/sec: 101031.12, flops:106.03, batch-reuse:1
@ 2722 train 4.6990 , allloss: 4.7010, dt: 1342.23ms, fracRes: 0.3294, norm(attn): 0.1855, norm(output): 0.3906, norm(x): 0.3718, norm(y): 1.0115, norm:1.9766, tok/sec: 97652.25, flops:102.49, batch-reuse:1
@ 2723 train 4.7651 , allloss: 4.7669, dt: 1307.14ms, fracRes: 0.3292, norm(attn): 0.1875, norm(output): 0.3945, norm(x): 0.3729, norm(y): 1.0114, norm:2.1586, tok/sec: 100273.89, flops:105.24, batch-reuse:1
@ 2724 train 4.6743 , allloss: 4.6782, dt: 1303.82ms, fracRes: 0.3269, norm(attn): 0.1904, norm(output): 0.3906, norm(x): 0.3737, norm(y): 1.0114, norm:1.9167, tok/sec: 100529.02, flops:105.51, batch-reuse:1
@ 2725 train 4.6743 , allloss: 4.6756, dt: 1290.84ms, fracRes: 0.3276, norm(attn): 0.1875, norm(output): 0.3926, norm(x): 0.3727, norm(y): 1.0116, norm:2.1595, tok/sec: 101539.96, flops:106.57, batch-reuse:1
@ 2726 train 4.6690 , allloss: 4.6709, dt: 1312.96ms, fracRes: 0.3268, norm(attn): 0.1865, norm(output): 0.3906, norm(x): 0.3740, norm(y): 1.0116, norm:2.2065, tok/sec: 99829.73, flops:104.77, batch-reuse:1
@ 2727 train 4.7457 , allloss: 4.7520, dt: 1345.39ms, fracRes: 0.3277, norm(attn): 0.1885, norm(output): 0.3887, norm(x): 0.3750, norm(y): 1.0115, norm:1.8886, tok/sec: 97423.20, flops:102.25, batch-reuse:1
@ 2728 train 4.7669 , allloss: 4.7682, dt: 1317.80ms, fracRes: 0.3273, norm(attn): 0.1885, norm(output): 0.3926, norm(x): 0.3743, norm(y): 1.0114, norm:2.5061, tok/sec: 99462.88, flops:104.39, batch-reuse:1
@ 2729 train 4.7542 , allloss: 4.7572, dt: 1276.19ms, fracRes: 0.3292, norm(attn): 0.1885, norm(output): 0.3945, norm(x): 0.3748, norm(y): 1.0114, norm:2.2348, tok/sec: 102705.80, flops:107.79, batch-reuse:1
@ 2730 train 4.7341 , allloss: 4.7369, dt: 1290.36ms, fracRes: 0.3290, norm(attn): 0.1875, norm(output): 0.3945, norm(x): 0.3739, norm(y): 1.0115, norm:1.8251, tok/sec: 101577.89, flops:106.61, batch-reuse:1
@ 2731 train 4.6681 , allloss: 4.6698, dt: 1278.47ms, fracRes: 0.3302, norm(attn): 0.1865, norm(output): 0.3926, norm(x): 0.3735, norm(y): 1.0115, norm:2.3866, tok/sec: 102522.60, flops:107.60, batch-reuse:1
@ 2732 train 4.7019 , allloss: 4.7136, dt: 1321.00ms, fracRes: 0.3316, norm(attn): 0.1885, norm(output): 0.3945, norm(x): 0.3739, norm(y): 1.0115, norm:2.6723, tok/sec: 99222.12, flops:104.14, batch-reuse:1
@ 2733 train 4.7422 , allloss: 4.7459, dt: 1317.07ms, fracRes: 0.3309, norm(attn): 0.1885, norm(output): 0.3887, norm(x): 0.3715, norm(y): 1.0115, norm:1.8419, tok/sec: 99518.17, flops:104.45, batch-reuse:1
@ 2734 train 4.6649 , allloss: 4.6684, dt: 1316.61ms, fracRes: 0.3294, norm(attn): 0.1924, norm(output): 0.3984, norm(x): 0.3735, norm(y): 1.0115, norm:2.2234, tok/sec: 99552.87, flops:104.48, batch-reuse:1
@ 2735 train 4.7554 , allloss: 4.7568, dt: 1313.05ms, fracRes: 0.3313, norm(attn): 0.1904, norm(output): 0.3945, norm(x): 0.3732, norm(y): 1.0115, norm:2.0698, tok/sec: 99822.57, flops:104.77, batch-reuse:1
@ 2736 train 4.7742 , allloss: 4.7753, dt: 1310.79ms, fracRes: 0.3321, norm(attn): 0.1885, norm(output): 0.3906, norm(x): 0.3736, norm(y): 1.0115, norm:2.1433, tok/sec: 99994.69, flops:104.95, batch-reuse:1
@ 2737 train 4.7507 , allloss: 4.7529, dt: 1295.86ms, fracRes: 0.3324, norm(attn): 0.1875, norm(output): 0.3945, norm(x): 0.3720, norm(y): 1.0115, norm:2.0685, tok/sec: 101146.84, flops:106.16, batch-reuse:1
@ 2738 train 4.5952 , allloss: 4.6031, dt: 1308.61ms, fracRes: 0.3319, norm(attn): 0.1914, norm(output): 0.3965, norm(x): 0.3739, norm(y): 1.0115, norm:2.3712, tok/sec: 100161.33, flops:105.12, batch-reuse:1
@ 2739 train 4.7091 , allloss: 4.7102, dt: 1319.13ms, fracRes: 0.3316, norm(attn): 0.1904, norm(output): 0.3867, norm(x): 0.3700, norm(y): 1.0116, norm:2.3190, tok/sec: 99362.43, flops:104.28, batch-reuse:1
@ 2740 train 4.5574 , allloss: 4.5594, dt: 1326.60ms, fracRes: 0.3291, norm(attn): 0.1914, norm(output): 0.3926, norm(x): 0.3719, norm(y): 1.0115, norm:2.0772, tok/sec: 98802.81, flops:103.70, batch-reuse:1
@ 2741 train 4.6547 , allloss: 4.6569, dt: 1284.63ms, fracRes: 0.3306, norm(attn): 0.1875, norm(output): 0.3906, norm(x): 0.3717, norm(y): 1.0116, norm:2.0096, tok/sec: 102030.87, flops:107.08, batch-reuse:1
@ 2742 train 4.6432 , allloss: 4.6447, dt: 1289.42ms, fracRes: 0.3312, norm(attn): 0.1885, norm(output): 0.3965, norm(x): 0.3742, norm(y): 1.0116, norm:2.2692, tok/sec: 101651.69, flops:106.69, batch-reuse:1
@ 2743 train 4.6122 , allloss: 4.6137, dt: 1310.34ms, fracRes: 0.3305, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3748, norm(y): 1.0115, norm:2.2464, tok/sec: 100028.84, flops:104.98, batch-reuse:1
@ 2744 train 4.6361 , allloss: 4.6383, dt: 1320.37ms, fracRes: 0.3319, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3724, norm(y): 1.0116, norm:2.0034, tok/sec: 99269.00, flops:104.18, batch-reuse:1
@ 2745 train 4.5799 , allloss: 4.5822, dt: 1328.77ms, fracRes: 0.3310, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3752, norm(y): 1.0115, norm:2.1146, tok/sec: 98641.66, flops:103.53, batch-reuse:1
@ 2746 train 4.5885 , allloss: 4.5903, dt: 1342.76ms, fracRes: 0.3295, norm(attn): 0.1885, norm(output): 0.3906, norm(x): 0.3719, norm(y): 1.0115, norm:2.3832, tok/sec: 97614.18, flops:102.45, batch-reuse:1
@ 2747 train 4.6217 , allloss: 4.6275, dt: 1327.63ms, fracRes: 0.3273, norm(attn): 0.1875, norm(output): 0.3984, norm(x): 0.3753, norm(y): 1.0115, norm:2.5926, tok/sec: 98726.46, flops:103.62, batch-reuse:1
@ 2748 train 4.6631 , allloss: 4.6656, dt: 1282.77ms, fracRes: 0.3259, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3747, norm(y): 1.0115, norm:1.9623, tok/sec: 102178.49, flops:107.24, batch-reuse:1
@ 2749 train 4.6322 , allloss: 4.6337, dt: 1304.26ms, fracRes: 0.3282, norm(attn): 0.1875, norm(output): 0.3984, norm(x): 0.3753, norm(y): 1.0116, norm:2.3891, tok/sec: 100494.99, flops:105.47, batch-reuse:1
@ 2750 train 4.6153 , allloss: 4.6194, dt: 1309.28ms, fracRes: 0.3306, norm(attn): 0.1885, norm(output): 0.3984, norm(x): 0.3781, norm(y): 1.0116, norm:3.1510, tok/sec: 100109.81, flops:105.07, batch-reuse:1
@ 2751 train 4.6901 , allloss: 4.6919, dt: 1314.04ms, fracRes: 0.3283, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3759, norm(y): 1.0115, norm:2.1888, tok/sec: 99747.46, flops:104.69, batch-reuse:1
@ 2752 train 4.6453 , allloss: 4.6468, dt: 1315.18ms, fracRes: 0.3287, norm(attn): 0.1875, norm(output): 0.3984, norm(x): 0.3750, norm(y): 1.0116, norm:2.1960, tok/sec: 99661.22, flops:104.60, batch-reuse:1
@ 2753 train 4.6537 , allloss: 4.6555, dt: 1339.62ms, fracRes: 0.3301, norm(attn): 0.1885, norm(output): 0.3984, norm(x): 0.3762, norm(y): 1.0116, norm:2.3788, tok/sec: 97842.77, flops:102.69, batch-reuse:1
@ 2754 train 4.6238 , allloss: 4.6280, dt: 1294.38ms, fracRes: 0.3284, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3753, norm(y): 1.0116, norm:2.2388, tok/sec: 101262.16, flops:106.28, batch-reuse:1
@ 2755 train 4.6423 , allloss: 4.6455, dt: 1304.39ms, fracRes: 0.3279, norm(attn): 0.1914, norm(output): 0.3984, norm(x): 0.3745, norm(y): 1.0115, norm:2.2609, tok/sec: 100485.45, flops:105.46, batch-reuse:1
@ 2756 train 4.5962 , allloss: 4.5981, dt: 1344.45ms, fracRes: 0.3277, norm(attn): 0.1934, norm(output): 0.3965, norm(x): 0.3735, norm(y): 1.0115, norm:2.0860, tok/sec: 97490.99, flops:102.32, batch-reuse:1
@ 2757 train 4.6283 , allloss: 4.6358, dt: 1339.30ms, fracRes: 0.3307, norm(attn): 0.1875, norm(output): 0.3984, norm(x): 0.3718, norm(y): 1.0116, norm:1.9693, tok/sec: 97865.93, flops:102.71, batch-reuse:1
@ 2758 train 4.6274 , allloss: 4.6440, dt: 1331.04ms, fracRes: 0.3313, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3721, norm(y): 1.0116, norm:2.2244, tok/sec: 98473.22, flops:103.35, batch-reuse:1
@ 2759 train 4.6376 , allloss: 4.6430, dt: 1327.55ms, fracRes: 0.3324, norm(attn): 0.1875, norm(output): 0.3965, norm(x): 0.3716, norm(y): 1.0116, norm:2.0649, tok/sec: 98732.54, flops:103.62, batch-reuse:1
@ 2760 train 4.5492 , allloss: 4.5512, dt: 1302.89ms, fracRes: 0.3329, norm(attn): 0.1895, norm(output): 0.3945, norm(x): 0.3710, norm(y): 1.0116, norm:1.8075, tok/sec: 100600.67, flops:105.58, batch-reuse:1
@ 2761 train 4.6834 , allloss: 4.6939, dt: 1302.64ms, fracRes: 0.3320, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3706, norm(y): 1.0116, norm:1.9555, tok/sec: 100619.95, flops:105.60, batch-reuse:1
@ 2762 train 4.6757 , allloss: 4.6852, dt: 1304.16ms, fracRes: 0.3312, norm(attn): 0.1885, norm(output): 0.4004, norm(x): 0.3751, norm(y): 1.0115, norm:2.0613, tok/sec: 100503.33, flops:105.48, batch-reuse:1
@ 2763 train 4.6312 , allloss: 4.6345, dt: 1307.24ms, fracRes: 0.3364, norm(attn): 0.1875, norm(output): 0.3965, norm(x): 0.3718, norm(y): 1.0117, norm:2.2668, tok/sec: 100266.56, flops:105.23, batch-reuse:1
@ 2764 train 4.5934 , allloss: 4.5986, dt: 1298.89ms, fracRes: 0.3319, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3734, norm(y): 1.0116, norm:2.1495, tok/sec: 100911.16, flops:105.91, batch-reuse:1
@ 2765 train 4.6813 , allloss: 4.6842, dt: 1296.33ms, fracRes: 0.3306, norm(attn): 0.1914, norm(output): 0.3984, norm(x): 0.3755, norm(y): 1.0115, norm:2.3597, tok/sec: 101109.97, flops:106.12, batch-reuse:1
@ 2766 train 4.6355 , allloss: 4.6378, dt: 1283.02ms, fracRes: 0.3300, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3749, norm(y): 1.0116, norm:2.0650, tok/sec: 102159.01, flops:107.22, batch-reuse:1
@ 2767 train 4.6309 , allloss: 4.6362, dt: 1318.56ms, fracRes: 0.3308, norm(attn): 0.1885, norm(output): 0.3984, norm(x): 0.3737, norm(y): 1.0116, norm:2.1997, tok/sec: 99405.69, flops:104.33, batch-reuse:1
@ 2768 train 4.6089 , allloss: 4.6111, dt: 1336.28ms, fracRes: 0.3320, norm(attn): 0.1885, norm(output): 0.3965, norm(x): 0.3731, norm(y): 1.0116, norm:2.2406, tok/sec: 98087.53, flops:102.94, batch-reuse:1
@ 2769 train 4.6531 , allloss: 4.6572, dt: 1307.65ms, fracRes: 0.3308, norm(attn): 0.1914, norm(output): 0.4023, norm(x): 0.3785, norm(y): 1.0115, norm:1.9926, tok/sec: 100234.86, flops:105.20, batch-reuse:1
@ 2770 train 4.6119 , allloss: 4.6156, dt: 1333.51ms, fracRes: 0.3301, norm(attn): 0.1914, norm(output): 0.3965, norm(x): 0.3740, norm(y): 1.0116, norm:2.2414, tok/sec: 98291.03, flops:103.16, batch-reuse:1
@ 2771 train 4.7335 , allloss: 4.7348, dt: 1291.11ms, fracRes: 0.3305, norm(attn): 0.1934, norm(output): 0.3984, norm(x): 0.3740, norm(y): 1.0116, norm:1.9793, tok/sec: 101519.13, flops:106.55, batch-reuse:1
@ 2772 train 4.5649 , allloss: 4.5663, dt: 1279.31ms, fracRes: 0.3312, norm(attn): 0.1924, norm(output): 0.3965, norm(x): 0.3740, norm(y): 1.0116, norm:2.2548, tok/sec: 102455.35, flops:107.53, batch-reuse:1
@ 2773 train 4.6018 , allloss: 4.6036, dt: 1301.83ms, fracRes: 0.3317, norm(attn): 0.1924, norm(output): 0.3984, norm(x): 0.3742, norm(y): 1.0116, norm:2.3804, tok/sec: 100683.19, flops:105.67, batch-reuse:1
@ 2774 train 4.5307 , allloss: 4.5338, dt: 1289.66ms, fracRes: 0.3313, norm(attn): 0.1914, norm(output): 0.3984, norm(x): 0.3741, norm(y): 1.0116, norm:1.6827, tok/sec: 101632.82, flops:106.67, batch-reuse:1
@ 2775 train 4.6398 , allloss: 4.6446, dt: 1281.56ms, fracRes: 0.3311, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3759, norm(y): 1.0116, norm:2.5104, tok/sec: 102275.20, flops:107.34, batch-reuse:1
@ 2776 train 4.7407 , allloss: 4.7425, dt: 1300.13ms, fracRes: 0.3308, norm(attn): 0.1895, norm(output): 0.4004, norm(x): 0.3777, norm(y): 1.0116, norm:2.0345, tok/sec: 100814.47, flops:105.81, batch-reuse:1
@ 2777 train 4.5920 , allloss: 4.5940, dt: 1289.46ms, fracRes: 0.3273, norm(attn): 0.1924, norm(output): 0.4043, norm(x): 0.3805, norm(y): 1.0115, norm:2.1919, tok/sec: 101648.57, flops:106.68, batch-reuse:1
@ 2778 train 4.7356 , allloss: 4.7395, dt: 1278.79ms, fracRes: 0.3298, norm(attn): 0.1885, norm(output): 0.4004, norm(x): 0.3790, norm(y): 1.0116, norm:2.1862, tok/sec: 102496.82, flops:107.57, batch-reuse:1
@ 2779 train 4.5854 , allloss: 4.5881, dt: 1279.77ms, fracRes: 0.3308, norm(attn): 0.1914, norm(output): 0.4004, norm(x): 0.3780, norm(y): 1.0116, norm:1.9264, tok/sec: 102418.66, flops:107.49, batch-reuse:1
@ 2780 train 4.4917 , allloss: 4.4947, dt: 1283.33ms, fracRes: 0.3301, norm(attn): 0.1904, norm(output): 0.4004, norm(x): 0.3775, norm(y): 1.0116, norm:2.3104, tok/sec: 102134.03, flops:107.19, batch-reuse:1
@ 2781 train 4.4570 , allloss: 4.4591, dt: 1292.34ms, fracRes: 0.3294, norm(attn): 0.1914, norm(output): 0.3984, norm(x): 0.3761, norm(y): 1.0116, norm:1.8969, tok/sec: 101422.60, flops:106.44, batch-reuse:1
@ 2782 train 4.6195 , allloss: 4.6254, dt: 1312.49ms, fracRes: 0.3319, norm(attn): 0.1885, norm(output): 0.4004, norm(x): 0.3775, norm(y): 1.0116, norm:2.3575, tok/sec: 99865.34, flops:104.81, batch-reuse:1
@ 2783 train 4.5963 , allloss: 4.5988, dt: 1292.28ms, fracRes: 0.3297, norm(attn): 0.1924, norm(output): 0.3965, norm(x): 0.3743, norm(y): 1.0115, norm:1.8516, tok/sec: 101427.24, flops:106.45, batch-reuse:1
@ 2784 train 4.6672 , allloss: 4.6684, dt: 1303.83ms, fracRes: 0.3331, norm(attn): 0.1895, norm(output): 0.4004, norm(x): 0.3758, norm(y): 1.0116, norm:2.4530, tok/sec: 100528.41, flops:105.51, batch-reuse:1
@ 2785 train 4.7582 , allloss: 4.7620, dt: 1276.12ms, fracRes: 0.3322, norm(attn): 0.1904, norm(output): 0.3984, norm(x): 0.3759, norm(y): 1.0117, norm:1.8609, tok/sec: 102711.71, flops:107.80, batch-reuse:1
@ 2786 train 4.6544 , allloss: 4.6567, dt: 1281.93ms, fracRes: 0.3312, norm(attn): 0.1904, norm(output): 0.4004, norm(x): 0.3792, norm(y): 1.0116, norm:1.9451, tok/sec: 102246.20, flops:107.31, batch-reuse:1
@ 2787 train 4.7582 , allloss: 4.7603, dt: 1298.55ms, fracRes: 0.3319, norm(attn): 0.1895, norm(output): 0.4004, norm(x): 0.3769, norm(y): 1.0116, norm:1.7717, tok/sec: 100937.45, flops:105.94, batch-reuse:1
@ 2788 train 4.7664 , allloss: 4.7682, dt: 1281.41ms, fracRes: 0.3291, norm(attn): 0.1914, norm(output): 0.4004, norm(x): 0.3771, norm(y): 1.0116, norm:2.1936, tok/sec: 102287.48, flops:107.35, batch-reuse:1
@ 2789 train 4.7822 , allloss: 4.7833, dt: 1297.64ms, fracRes: 0.3298, norm(attn): 0.1895, norm(output): 0.4023, norm(x): 0.3795, norm(y): 1.0116, norm:2.2194, tok/sec: 101008.13, flops:106.01, batch-reuse:1
@ 2790 train 4.8613 , allloss: 4.8632, dt: 1283.92ms, fracRes: 0.3303, norm(attn): 0.1924, norm(output): 0.4043, norm(x): 0.3807, norm(y): 1.0115, norm:2.0054, tok/sec: 102086.97, flops:107.14, batch-reuse:1
@ 2791 train 4.7519 , allloss: 4.7545, dt: 1285.66ms, fracRes: 0.3276, norm(attn): 0.1934, norm(output): 0.4023, norm(x): 0.3789, norm(y): 1.0116, norm:2.2755, tok/sec: 101949.29, flops:107.00, batch-reuse:1
@ 2792 train 5.3837 , allloss: 5.3879, dt: 1311.33ms, fracRes: 0.3313, norm(attn): 0.1885, norm(output): 0.4023, norm(x): 0.3805, norm(y): 1.0116, norm:2.6081, tok/sec: 99953.73, flops:104.90, batch-reuse:1
@ 2793 train 4.8171 , allloss: 4.8183, dt: 1332.64ms, fracRes: 0.3277, norm(attn): 0.1934, norm(output): 0.4004, norm(x): 0.3774, norm(y): 1.0116, norm:2.6878, tok/sec: 98355.45, flops:103.23, batch-reuse:1
@ 2794 train 4.7359 , allloss: 4.7411, dt: 1297.49ms, fracRes: 0.3299, norm(attn): 0.1914, norm(output): 0.4023, norm(x): 0.3810, norm(y): 1.0116, norm:2.1507, tok/sec: 101019.39, flops:106.02, batch-reuse:1
@ 2795 train 4.7214 , allloss: 4.7248, dt: 1286.61ms, fracRes: 0.3304, norm(attn): 0.1914, norm(output): 0.4023, norm(x): 0.3821, norm(y): 1.0117, norm:2.2061, tok/sec: 101874.08, flops:106.92, batch-reuse:1
@ 2796 train 4.8472 , allloss: 4.8532, dt: 1309.56ms, fracRes: 0.3328, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3809, norm(y): 1.0117, norm:2.1471, tok/sec: 100088.78, flops:105.05, batch-reuse:1
@ 2797 train 4.7363 , allloss: 4.7379, dt: 1338.15ms, fracRes: 0.3329, norm(attn): 0.1914, norm(output): 0.4004, norm(x): 0.3781, norm(y): 1.0116, norm:2.1759, tok/sec: 97949.80, flops:102.80, batch-reuse:1
@ 2798 train 4.7600 , allloss: 4.7620, dt: 1283.90ms, fracRes: 0.3359, norm(attn): 0.1875, norm(output): 0.4023, norm(x): 0.3780, norm(y): 1.0116, norm:2.0337, tok/sec: 102089.08, flops:107.14, batch-reuse:1
@ 2799 train 4.7523 , allloss: 4.7566, dt: 1308.05ms, fracRes: 0.3357, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3794, norm(y): 1.0117, norm:2.1382, tok/sec: 100203.76, flops:105.17, batch-reuse:1
@ 2800 train 4.9483 , allloss: 4.9526, dt: 1306.77ms, fracRes: 0.3379, norm(attn): 0.1855, norm(output): 0.4004, norm(x): 0.3828, norm(y): 1.0117, norm:2.5900, tok/sec: 100302.21, flops:105.27, batch-reuse:1
@ 2801 train 4.8178 , allloss: 4.8403, dt: 1293.12ms, fracRes: 0.3333, norm(attn): 0.1895, norm(output): 0.4023, norm(x): 0.3805, norm(y): 1.0117, norm:2.8562, tok/sec: 101360.87, flops:106.38, batch-reuse:1
@ 2802 train 4.7581 , allloss: 4.7611, dt: 1288.77ms, fracRes: 0.3300, norm(attn): 0.1914, norm(output): 0.4023, norm(x): 0.3812, norm(y): 1.0116, norm:2.1152, tok/sec: 101703.27, flops:106.74, batch-reuse:1
@ 2803 train 4.7232 , allloss: 4.7322, dt: 1291.05ms, fracRes: 0.3321, norm(attn): 0.1895, norm(output): 0.4023, norm(x): 0.3799, norm(y): 1.0118, norm:2.1801, tok/sec: 101523.93, flops:106.55, batch-reuse:1
@ 2804 train 4.8266 , allloss: 4.8338, dt: 1289.19ms, fracRes: 0.3339, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3825, norm(y): 1.0117, norm:2.2693, tok/sec: 101670.22, flops:106.70, batch-reuse:1
@ 2805 train 4.6497 , allloss: 4.6534, dt: 1297.19ms, fracRes: 0.3311, norm(attn): 0.1953, norm(output): 0.4043, norm(x): 0.3831, norm(y): 1.0115, norm:2.1591, tok/sec: 101042.80, flops:106.05, batch-reuse:1
@ 2806 train 4.6514 , allloss: 4.6536, dt: 1310.45ms, fracRes: 0.3322, norm(attn): 0.1875, norm(output): 0.4043, norm(x): 0.3836, norm(y): 1.0117, norm:2.1713, tok/sec: 100020.74, flops:104.97, batch-reuse:1
@ 2807 train 4.9469 , allloss: 4.9542, dt: 1315.68ms, fracRes: 0.3339, norm(attn): 0.1865, norm(output): 0.4043, norm(x): 0.3816, norm(y): 1.0118, norm:2.4724, tok/sec: 99623.35, flops:104.56, batch-reuse:1
@ 2808 train 4.7293 , allloss: 4.7380, dt: 1314.82ms, fracRes: 0.3351, norm(attn): 0.1875, norm(output): 0.4043, norm(x): 0.3824, norm(y): 1.0118, norm:2.1035, tok/sec: 99687.95, flops:104.62, batch-reuse:1
@ 2809 train 4.6907 , allloss: 4.6995, dt: 1329.73ms, fracRes: 0.3335, norm(attn): 0.1885, norm(output): 0.4062, norm(x): 0.3846, norm(y): 1.0116, norm:2.3183, tok/sec: 98570.44, flops:103.45, batch-reuse:1
@ 2810 train 4.6794 , allloss: 4.6900, dt: 1318.66ms, fracRes: 0.3325, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3834, norm(y): 1.0116, norm:2.0757, tok/sec: 99398.20, flops:104.32, batch-reuse:1
@ 2811 train 4.7699 , allloss: 4.7748, dt: 1287.71ms, fracRes: 0.3353, norm(attn): 0.1895, norm(output): 0.4004, norm(x): 0.3794, norm(y): 1.0117, norm:2.3086, tok/sec: 101786.80, flops:106.83, batch-reuse:1
@ 2812 train 4.7829 , allloss: 4.7863, dt: 1303.61ms, fracRes: 0.3318, norm(attn): 0.1934, norm(output): 0.4023, norm(x): 0.3826, norm(y): 1.0116, norm:2.0126, tok/sec: 100545.31, flops:105.52, batch-reuse:1
@ 2813 train 4.8154 , allloss: 4.8212, dt: 1304.67ms, fracRes: 0.3333, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3877, norm(y): 1.0117, norm:2.8565, tok/sec: 100463.67, flops:105.44, batch-reuse:1
@ 2814 train 4.7853 , allloss: 4.7980, dt: 1294.22ms, fracRes: 0.3358, norm(attn): 0.1875, norm(output): 0.4062, norm(x): 0.3828, norm(y): 1.0118, norm:2.4483, tok/sec: 101275.05, flops:106.29, batch-reuse:1
@ 2815 train 4.7932 , allloss: 4.7952, dt: 1302.13ms, fracRes: 0.3367, norm(attn): 0.1885, norm(output): 0.4062, norm(x): 0.3805, norm(y): 1.0118, norm:2.3476, tok/sec: 100659.74, flops:105.64, batch-reuse:1
@ 2816 train 4.7222 , allloss: 4.7243, dt: 1287.48ms, fracRes: 0.3355, norm(attn): 0.1904, norm(output): 0.4043, norm(x): 0.3832, norm(y): 1.0117, norm:2.3391, tok/sec: 101804.95, flops:106.85, batch-reuse:1
@ 2817 train 4.8086 , allloss: 4.8105, dt: 1289.37ms, fracRes: 0.3339, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3808, norm(y): 1.0117, norm:2.1274, tok/sec: 101655.60, flops:106.69, batch-reuse:1
@ 2818 train 4.7837 , allloss: 4.7879, dt: 1311.72ms, fracRes: 0.3351, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3803, norm(y): 1.0117, norm:2.1454, tok/sec: 99924.10, flops:104.87, batch-reuse:1
@ 2819 train 4.7663 , allloss: 4.7756, dt: 1287.54ms, fracRes: 0.3322, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3823, norm(y): 1.0117, norm:2.3333, tok/sec: 101800.51, flops:106.84, batch-reuse:1
@ 2820 train 4.7395 , allloss: 4.7453, dt: 1306.78ms, fracRes: 0.3357, norm(attn): 0.1875, norm(output): 0.4043, norm(x): 0.3805, norm(y): 1.0117, norm:2.3767, tok/sec: 100301.55, flops:105.27, batch-reuse:1
@ 2821 train 4.7241 , allloss: 4.7309, dt: 1327.14ms, fracRes: 0.3338, norm(attn): 0.1885, norm(output): 0.4062, norm(x): 0.3837, norm(y): 1.0117, norm:2.4618, tok/sec: 98762.76, flops:103.65, batch-reuse:1
@ 2822 train 4.6931 , allloss: 4.6956, dt: 1319.45ms, fracRes: 0.3356, norm(attn): 0.1875, norm(output): 0.4062, norm(x): 0.3832, norm(y): 1.0117, norm:2.2107, tok/sec: 99338.53, flops:104.26, batch-reuse:1
@ 2823 train 4.7411 , allloss: 4.7426, dt: 1334.29ms, fracRes: 0.3357, norm(attn): 0.1885, norm(output): 0.4023, norm(x): 0.3792, norm(y): 1.0118, norm:2.2410, tok/sec: 98233.30, flops:103.10, batch-reuse:1
@ 2824 train 4.7013 , allloss: 4.7040, dt: 1314.94ms, fracRes: 0.3360, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3836, norm(y): 1.0117, norm:2.2875, tok/sec: 99679.27, flops:104.62, batch-reuse:1
@ 2825 train 4.7160 , allloss: 4.7190, dt: 1296.24ms, fracRes: 0.3362, norm(attn): 0.1875, norm(output): 0.4043, norm(x): 0.3824, norm(y): 1.0117, norm:1.9411, tok/sec: 101117.24, flops:106.12, batch-reuse:1
@ 2826 train 4.7738 , allloss: 4.7805, dt: 1328.97ms, fracRes: 0.3373, norm(attn): 0.1885, norm(output): 0.4043, norm(x): 0.3808, norm(y): 1.0117, norm:2.2139, tok/sec: 98626.56, flops:103.51, batch-reuse:1
@ 2827 train 4.7904 , allloss: 4.7948, dt: 1319.56ms, fracRes: 0.3347, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3837, norm(y): 1.0117, norm:2.1469, tok/sec: 99330.33, flops:104.25, batch-reuse:1
@ 2828 train 4.7715 , allloss: 4.7726, dt: 1308.84ms, fracRes: 0.3331, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3855, norm(y): 1.0117, norm:2.3781, tok/sec: 100143.96, flops:105.10, batch-reuse:1
@ 2829 train 4.7292 , allloss: 4.7311, dt: 1291.74ms, fracRes: 0.3321, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3831, norm(y): 1.0117, norm:2.1612, tok/sec: 101469.13, flops:106.49, batch-reuse:1
@ 2830 train 4.8422 , allloss: 4.8455, dt: 1304.58ms, fracRes: 0.3341, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3849, norm(y): 1.0117, norm:2.1644, tok/sec: 100470.30, flops:105.45, batch-reuse:1
@ 2831 train 4.8130 , allloss: 4.8156, dt: 1301.79ms, fracRes: 0.3320, norm(attn): 0.1924, norm(output): 0.4062, norm(x): 0.3845, norm(y): 1.0117, norm:2.1051, tok/sec: 100686.00, flops:105.67, batch-reuse:1
@ 2832 train 4.7152 , allloss: 4.7180, dt: 1306.67ms, fracRes: 0.3336, norm(attn): 0.1924, norm(output): 0.4043, norm(x): 0.3818, norm(y): 1.0117, norm:2.2338, tok/sec: 100309.59, flops:105.28, batch-reuse:1
@ 2833 train 4.7888 , allloss: 4.7984, dt: 1304.61ms, fracRes: 0.3330, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3818, norm(y): 1.0117, norm:2.3106, tok/sec: 100468.04, flops:105.44, batch-reuse:1
@ 2834 train 4.7808 , allloss: 4.7841, dt: 1283.43ms, fracRes: 0.3349, norm(attn): 0.1904, norm(output): 0.4043, norm(x): 0.3808, norm(y): 1.0118, norm:2.0139, tok/sec: 102126.52, flops:107.18, batch-reuse:1
@ 2835 train 4.7583 , allloss: 4.7610, dt: 1345.10ms, fracRes: 0.3366, norm(attn): 0.1904, norm(output): 0.4082, norm(x): 0.3856, norm(y): 1.0117, norm:2.4714, tok/sec: 97444.11, flops:102.27, batch-reuse:1
@ 2836 train 4.7480 , allloss: 4.7497, dt: 1284.93ms, fracRes: 0.3350, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3827, norm(y): 1.0117, norm:2.3614, tok/sec: 102007.08, flops:107.06, batch-reuse:1
@ 2837 train 4.8344 , allloss: 4.8369, dt: 1299.55ms, fracRes: 0.3337, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3847, norm(y): 1.0117, norm:1.9906, tok/sec: 100859.41, flops:105.85, batch-reuse:1
@ 2838 train 4.8828 , allloss: 4.8843, dt: 1307.31ms, fracRes: 0.3311, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3855, norm(y): 1.0117, norm:2.0070, tok/sec: 100261.07, flops:105.23, batch-reuse:1
@ 2839 train 4.7006 , allloss: 4.7024, dt: 1327.00ms, fracRes: 0.3322, norm(attn): 0.1953, norm(output): 0.4043, norm(x): 0.3842, norm(y): 1.0118, norm:2.2447, tok/sec: 98773.45, flops:103.66, batch-reuse:1
@ 2840 train 4.7456 , allloss: 4.7474, dt: 1309.97ms, fracRes: 0.3310, norm(attn): 0.1963, norm(output): 0.4082, norm(x): 0.3863, norm(y): 1.0117, norm:1.9666, tok/sec: 100057.50, flops:105.01, batch-reuse:1
@ 2841 train 4.7316 , allloss: 4.7327, dt: 1288.91ms, fracRes: 0.3324, norm(attn): 0.1924, norm(output): 0.4082, norm(x): 0.3862, norm(y): 1.0118, norm:2.4588, tok/sec: 101692.04, flops:106.73, batch-reuse:1
@ 2842 train 4.7459 , allloss: 4.7474, dt: 1306.46ms, fracRes: 0.3331, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3843, norm(y): 1.0118, norm:1.9573, tok/sec: 100326.17, flops:105.29, batch-reuse:1
@ 2843 train 4.6951 , allloss: 4.6966, dt: 1300.62ms, fracRes: 0.3343, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3828, norm(y): 1.0118, norm:2.1807, tok/sec: 100776.73, flops:105.77, batch-reuse:1
@ 2844 train 4.6874 , allloss: 4.6897, dt: 1303.94ms, fracRes: 0.3338, norm(attn): 0.1943, norm(output): 0.4062, norm(x): 0.3839, norm(y): 1.0117, norm:2.0135, tok/sec: 100520.25, flops:105.50, batch-reuse:1
@ 2845 train 4.7287 , allloss: 4.7299, dt: 1323.01ms, fracRes: 0.3380, norm(attn): 0.1904, norm(output): 0.4043, norm(x): 0.3828, norm(y): 1.0119, norm:2.0130, tok/sec: 99070.85, flops:103.98, batch-reuse:1
@ 2846 train 4.7298 , allloss: 4.7354, dt: 1293.83ms, fracRes: 0.3374, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3830, norm(y): 1.0118, norm:2.0313, tok/sec: 101305.51, flops:106.32, batch-reuse:1
@ 2847 train 4.7484 , allloss: 4.7494, dt: 1312.05ms, fracRes: 0.3378, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3831, norm(y): 1.0117, norm:2.3666, tok/sec: 99898.50, flops:104.85, batch-reuse:1
@ 2848 train 4.7337 , allloss: 4.7371, dt: 1311.76ms, fracRes: 0.3352, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3831, norm(y): 1.0116, norm:1.7938, tok/sec: 99920.99, flops:104.87, batch-reuse:1
@ 2849 train 4.7182 , allloss: 4.7206, dt: 1295.94ms, fracRes: 0.3392, norm(attn): 0.1875, norm(output): 0.4062, norm(x): 0.3819, norm(y): 1.0119, norm:2.1134, tok/sec: 101140.12, flops:106.15, batch-reuse:1
@ 2850 train 4.6778 , allloss: 4.6789, dt: 1278.98ms, fracRes: 0.3397, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3799, norm(y): 1.0119, norm:2.1021, tok/sec: 102481.49, flops:107.56, batch-reuse:1
@ 2851 train 4.6631 , allloss: 4.6646, dt: 1318.43ms, fracRes: 0.3364, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3845, norm(y): 1.0118, norm:2.3271, tok/sec: 99415.56, flops:104.34, batch-reuse:1
@ 2852 train 4.6773 , allloss: 4.6789, dt: 1316.37ms, fracRes: 0.3357, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3840, norm(y): 1.0117, norm:2.0513, tok/sec: 99570.63, flops:104.50, batch-reuse:1
@ 2853 train 4.7742 , allloss: 4.7763, dt: 1291.73ms, fracRes: 0.3385, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3832, norm(y): 1.0118, norm:2.8614, tok/sec: 101470.45, flops:106.50, batch-reuse:1
@ 2854 train 4.7117 , allloss: 4.7133, dt: 1306.29ms, fracRes: 0.3383, norm(attn): 0.1924, norm(output): 0.4062, norm(x): 0.3840, norm(y): 1.0118, norm:2.6707, tok/sec: 100339.06, flops:105.31, batch-reuse:1
@ 2855 train 4.7071 , allloss: 4.7109, dt: 1307.57ms, fracRes: 0.3334, norm(attn): 0.1943, norm(output): 0.4062, norm(x): 0.3845, norm(y): 1.0117, norm:2.7531, tok/sec: 100240.92, flops:105.20, batch-reuse:1
@ 2856 train 4.7190 , allloss: 4.7210, dt: 1288.16ms, fracRes: 0.3332, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3850, norm(y): 1.0117, norm:1.8191, tok/sec: 101751.31, flops:106.79, batch-reuse:1
@ 2857 train 4.6694 , allloss: 4.6707, dt: 1317.47ms, fracRes: 0.3314, norm(attn): 0.1963, norm(output): 0.4062, norm(x): 0.3855, norm(y): 1.0117, norm:2.2981, tok/sec: 99488.03, flops:104.41, batch-reuse:1
@ 2858 train 4.6494 , allloss: 4.6509, dt: 1328.28ms, fracRes: 0.3323, norm(attn): 0.1973, norm(output): 0.4062, norm(x): 0.3848, norm(y): 1.0118, norm:2.1037, tok/sec: 98678.04, flops:103.56, batch-reuse:1
@ 2859 train 4.6387 , allloss: 4.6401, dt: 1306.27ms, fracRes: 0.3330, norm(attn): 0.1924, norm(output): 0.4062, norm(x): 0.3870, norm(y): 1.0117, norm:2.6149, tok/sec: 100340.95, flops:105.31, batch-reuse:1
@ 2860 train 4.7716 , allloss: 4.7732, dt: 1321.12ms, fracRes: 0.3324, norm(attn): 0.1924, norm(output): 0.4062, norm(x): 0.3851, norm(y): 1.0117, norm:2.9515, tok/sec: 99212.86, flops:104.13, batch-reuse:1
@ 2861 train 4.8190 , allloss: 4.8205, dt: 1320.41ms, fracRes: 0.3310, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3813, norm(y): 1.0117, norm:2.3670, tok/sec: 99265.94, flops:104.18, batch-reuse:1
@ 2862 train 4.8082 , allloss: 4.8096, dt: 1295.55ms, fracRes: 0.3333, norm(attn): 0.1953, norm(output): 0.4062, norm(x): 0.3848, norm(y): 1.0117, norm:2.7487, tok/sec: 101170.76, flops:106.18, batch-reuse:1
@ 2863 train 4.7844 , allloss: 4.7855, dt: 1298.95ms, fracRes: 0.3318, norm(attn): 0.1973, norm(output): 0.4062, norm(x): 0.3847, norm(y): 1.0117, norm:2.2120, tok/sec: 100905.88, flops:105.90, batch-reuse:1
@ 2864 train 4.6334 , allloss: 4.6351, dt: 1311.24ms, fracRes: 0.3334, norm(attn): 0.1953, norm(output): 0.4062, norm(x): 0.3859, norm(y): 1.0117, norm:2.4298, tok/sec: 99960.64, flops:104.91, batch-reuse:1
@ 2865 train 4.7199 , allloss: 4.7216, dt: 1333.19ms, fracRes: 0.3332, norm(attn): 0.1953, norm(output): 0.4062, norm(x): 0.3858, norm(y): 1.0117, norm:2.1917, tok/sec: 98314.50, flops:103.18, batch-reuse:1
@ 2866 train 4.7772 , allloss: 4.7791, dt: 1304.77ms, fracRes: 0.3346, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3855, norm(y): 1.0117, norm:2.1412, tok/sec: 100455.73, flops:105.43, batch-reuse:1
@ 2867 train 4.6991 , allloss: 4.7005, dt: 1285.33ms, fracRes: 0.3341, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3843, norm(y): 1.0117, norm:2.0654, tok/sec: 101975.50, flops:107.03, batch-reuse:1
@ 2868 train 4.7885 , allloss: 4.7900, dt: 1281.20ms, fracRes: 0.3363, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3869, norm(y): 1.0117, norm:2.3538, tok/sec: 102304.04, flops:107.37, batch-reuse:1
@ 2869 train 4.6876 , allloss: 4.6892, dt: 1316.35ms, fracRes: 0.3378, norm(attn): 0.1885, norm(output): 0.4062, norm(x): 0.3865, norm(y): 1.0117, norm:2.0653, tok/sec: 99572.48, flops:104.50, batch-reuse:1
@ 2870 train 4.7607 , allloss: 4.7625, dt: 1339.74ms, fracRes: 0.3365, norm(attn): 0.1895, norm(output): 0.4082, norm(x): 0.3887, norm(y): 1.0117, norm:1.9891, tok/sec: 97834.15, flops:102.68, batch-reuse:1
@ 2871 train 4.6690 , allloss: 4.6708, dt: 1342.05ms, fracRes: 0.3378, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3875, norm(y): 1.0117, norm:2.0065, tok/sec: 97665.49, flops:102.50, batch-reuse:1
@ 2872 train 4.7506 , allloss: 4.7515, dt: 1333.80ms, fracRes: 0.3378, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3869, norm(y): 1.0117, norm:2.1842, tok/sec: 98269.74, flops:103.14, batch-reuse:1
@ 2873 train 4.7954 , allloss: 4.7981, dt: 1330.38ms, fracRes: 0.3385, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3905, norm(y): 1.0117, norm:2.8686, tok/sec: 98522.14, flops:103.40, batch-reuse:1
@ 2874 train 4.6958 , allloss: 4.7017, dt: 1274.78ms, fracRes: 0.3355, norm(attn): 0.1924, norm(output): 0.4102, norm(x): 0.3921, norm(y): 1.0117, norm:2.2944, tok/sec: 102819.19, flops:107.91, batch-reuse:1
@ 2875 train 4.8425 , allloss: 4.8437, dt: 1324.02ms, fracRes: 0.3383, norm(attn): 0.1875, norm(output): 0.4082, norm(x): 0.3881, norm(y): 1.0119, norm:2.2260, tok/sec: 98995.13, flops:103.90, batch-reuse:1
@ 2876 train 4.7438 , allloss: 4.7451, dt: 1294.40ms, fracRes: 0.3381, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3887, norm(y): 1.0118, norm:2.6549, tok/sec: 101261.02, flops:106.28, batch-reuse:1
@ 2877 train 4.7702 , allloss: 4.7716, dt: 1302.67ms, fracRes: 0.3357, norm(attn): 0.1934, norm(output): 0.4102, norm(x): 0.3891, norm(y): 1.0117, norm:2.2506, tok/sec: 100617.92, flops:105.60, batch-reuse:1
@ 2878 train 4.7139 , allloss: 4.7151, dt: 1310.10ms, fracRes: 0.3346, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3868, norm(y): 1.0117, norm:2.0387, tok/sec: 100046.99, flops:105.00, batch-reuse:1
@ 2879 train 4.6908 , allloss: 4.6945, dt: 1319.72ms, fracRes: 0.3371, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3871, norm(y): 1.0118, norm:2.1508, tok/sec: 99318.18, flops:104.24, batch-reuse:1
@ 2880 train 4.7104 , allloss: 4.7122, dt: 1291.04ms, fracRes: 0.3355, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3882, norm(y): 1.0118, norm:2.0457, tok/sec: 101524.34, flops:106.55, batch-reuse:1
@ 2881 train 4.7029 , allloss: 4.7063, dt: 1322.60ms, fracRes: 0.3352, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3879, norm(y): 1.0118, norm:1.9223, tok/sec: 99101.83, flops:104.01, batch-reuse:1
@ 2882 train 4.6733 , allloss: 4.6758, dt: 1296.33ms, fracRes: 0.3343, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3866, norm(y): 1.0118, norm:1.9193, tok/sec: 101109.67, flops:106.12, batch-reuse:1
@ 2883 train 4.7364 , allloss: 4.7387, dt: 1305.80ms, fracRes: 0.3334, norm(attn): 0.1973, norm(output): 0.4062, norm(x): 0.3867, norm(y): 1.0117, norm:2.0553, tok/sec: 100377.11, flops:105.35, batch-reuse:1
@ 2884 train 4.5777 , allloss: 4.5791, dt: 1295.47ms, fracRes: 0.3353, norm(attn): 0.1943, norm(output): 0.4062, norm(x): 0.3854, norm(y): 1.0117, norm:1.8684, tok/sec: 101176.92, flops:106.19, batch-reuse:1
@ 2885 train 4.5975 , allloss: 4.5990, dt: 1319.90ms, fracRes: 0.3364, norm(attn): 0.1924, norm(output): 0.4062, norm(x): 0.3838, norm(y): 1.0118, norm:1.8290, tok/sec: 99304.13, flops:104.22, batch-reuse:1
@ 2886 train 4.6379 , allloss: 4.6399, dt: 1341.61ms, fracRes: 0.3370, norm(attn): 0.1953, norm(output): 0.4082, norm(x): 0.3861, norm(y): 1.0118, norm:1.9421, tok/sec: 97697.48, flops:102.54, batch-reuse:1
@ 2887 train 4.6376 , allloss: 4.6387, dt: 1290.52ms, fracRes: 0.3385, norm(attn): 0.1943, norm(output): 0.4082, norm(x): 0.3867, norm(y): 1.0118, norm:2.6456, tok/sec: 101565.62, flops:106.60, batch-reuse:1
@ 2888 train 4.6297 , allloss: 4.6312, dt: 1290.30ms, fracRes: 0.3381, norm(attn): 0.1934, norm(output): 0.4043, norm(x): 0.3822, norm(y): 1.0118, norm:1.8528, tok/sec: 101582.64, flops:106.61, batch-reuse:1
@ 2889 train 4.6491 , allloss: 4.6517, dt: 1308.54ms, fracRes: 0.3370, norm(attn): 0.1953, norm(output): 0.4062, norm(x): 0.3844, norm(y): 1.0117, norm:1.9305, tok/sec: 100166.43, flops:105.13, batch-reuse:1
@ 2890 train 4.6854 , allloss: 4.6873, dt: 1303.86ms, fracRes: 0.3391, norm(attn): 0.1885, norm(output): 0.4062, norm(x): 0.3841, norm(y): 1.0119, norm:2.0055, tok/sec: 100526.32, flops:105.50, batch-reuse:1
@ 2891 train 4.6638 , allloss: 4.6652, dt: 1307.89ms, fracRes: 0.3378, norm(attn): 0.1875, norm(output): 0.4062, norm(x): 0.3856, norm(y): 1.0119, norm:2.1351, tok/sec: 100216.27, flops:105.18, batch-reuse:1
@ 2892 train 4.6277 , allloss: 4.6305, dt: 1303.66ms, fracRes: 0.3352, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3859, norm(y): 1.0118, norm:1.9613, tok/sec: 100541.34, flops:105.52, batch-reuse:1
@ 2893 train 4.5913 , allloss: 4.5924, dt: 1285.79ms, fracRes: 0.3350, norm(attn): 0.1963, norm(output): 0.4062, norm(x): 0.3846, norm(y): 1.0117, norm:2.0475, tok/sec: 101938.74, flops:106.99, batch-reuse:1
@ 2894 train 4.6008 , allloss: 4.6022, dt: 1287.01ms, fracRes: 0.3333, norm(attn): 0.1953, norm(output): 0.4082, norm(x): 0.3868, norm(y): 1.0117, norm:2.0052, tok/sec: 101841.94, flops:106.89, batch-reuse:1
@ 2895 train 4.7508 , allloss: 4.7537, dt: 1342.43ms, fracRes: 0.3347, norm(attn): 0.1914, norm(output): 0.4102, norm(x): 0.3908, norm(y): 1.0117, norm:2.1544, tok/sec: 97637.96, flops:102.47, batch-reuse:1
@ 2896 train 4.7298 , allloss: 4.7313, dt: 1330.76ms, fracRes: 0.3351, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3893, norm(y): 1.0118, norm:2.2763, tok/sec: 98494.15, flops:103.37, batch-reuse:1
@ 2897 train 4.6543 , allloss: 4.6559, dt: 1319.39ms, fracRes: 0.3332, norm(attn): 0.1924, norm(output): 0.4082, norm(x): 0.3894, norm(y): 1.0118, norm:2.1665, tok/sec: 99342.87, flops:104.26, batch-reuse:1
@ 2898 train 4.6559 , allloss: 4.6576, dt: 1283.91ms, fracRes: 0.3318, norm(attn): 0.1953, norm(output): 0.4102, norm(x): 0.3912, norm(y): 1.0117, norm:1.8616, tok/sec: 102088.42, flops:107.14, batch-reuse:1
@ 2899 train 4.6656 , allloss: 4.6733, dt: 1306.39ms, fracRes: 0.3313, norm(attn): 0.1982, norm(output): 0.4082, norm(x): 0.3890, norm(y): 1.0117, norm:2.1195, tok/sec: 100331.41, flops:105.30, batch-reuse:1
@ 2900 train 4.6778 , allloss: 4.6797, dt: 1317.66ms, fracRes: 0.3358, norm(attn): 0.1914, norm(output): 0.4102, norm(x): 0.3888, norm(y): 1.0118, norm:2.2108, tok/sec: 99473.55, flops:104.40, batch-reuse:1
@ 2901 train 4.6350 , allloss: 4.6360, dt: 1334.97ms, fracRes: 0.3354, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3860, norm(y): 1.0118, norm:2.1142, tok/sec: 98183.78, flops:103.05, batch-reuse:1
@ 2902 train 4.6857 , allloss: 4.6867, dt: 1331.62ms, fracRes: 0.3366, norm(attn): 0.1924, norm(output): 0.4082, norm(x): 0.3878, norm(y): 1.0117, norm:2.0779, tok/sec: 98430.82, flops:103.30, batch-reuse:1
@ 2903 train 4.7731 , allloss: 4.7755, dt: 1338.04ms, fracRes: 0.3379, norm(attn): 0.1943, norm(output): 0.4082, norm(x): 0.3871, norm(y): 1.0118, norm:1.8824, tok/sec: 97958.01, flops:102.81, batch-reuse:1
@ 2904 train 4.6375 , allloss: 4.6395, dt: 1330.27ms, fracRes: 0.3361, norm(attn): 0.1973, norm(output): 0.4082, norm(x): 0.3866, norm(y): 1.0117, norm:1.9426, tok/sec: 98530.32, flops:103.41, batch-reuse:1
@ 2905 train 4.8449 , allloss: 4.8472, dt: 1316.64ms, fracRes: 0.3394, norm(attn): 0.1934, norm(output): 0.4102, norm(x): 0.3909, norm(y): 1.0117, norm:2.3354, tok/sec: 99550.02, flops:104.48, batch-reuse:1
@ 2906 train 4.6140 , allloss: 4.6176, dt: 1304.80ms, fracRes: 0.3351, norm(attn): 0.1963, norm(output): 0.4082, norm(x): 0.3872, norm(y): 1.0118, norm:2.6538, tok/sec: 100453.67, flops:105.43, batch-reuse:1
@ 2907 train 4.7113 , allloss: 4.7138, dt: 1310.86ms, fracRes: 0.3363, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3860, norm(y): 1.0118, norm:2.2853, tok/sec: 99989.04, flops:104.94, batch-reuse:1
@ 2908 train 4.6300 , allloss: 4.6322, dt: 1288.72ms, fracRes: 0.3336, norm(attn): 0.2002, norm(output): 0.4062, norm(x): 0.3823, norm(y): 1.0118, norm:1.8338, tok/sec: 101706.88, flops:106.74, batch-reuse:1
@ 2909 train 4.6513 , allloss: 4.6530, dt: 1302.64ms, fracRes: 0.3359, norm(attn): 0.1963, norm(output): 0.4062, norm(x): 0.3856, norm(y): 1.0118, norm:2.4896, tok/sec: 100620.37, flops:105.60, batch-reuse:1
@ 2910 train 4.6655 , allloss: 4.6673, dt: 1300.84ms, fracRes: 0.3345, norm(attn): 0.1992, norm(output): 0.4062, norm(x): 0.3854, norm(y): 1.0118, norm:2.2467, tok/sec: 100759.33, flops:105.75, batch-reuse:1
@ 2911 train 4.6654 , allloss: 4.6669, dt: 1314.32ms, fracRes: 0.3303, norm(attn): 0.2012, norm(output): 0.4062, norm(x): 0.3862, norm(y): 1.0117, norm:1.8456, tok/sec: 99726.27, flops:104.66, batch-reuse:1
@ 2912 train 4.6948 , allloss: 4.6987, dt: 1345.73ms, fracRes: 0.3349, norm(attn): 0.1982, norm(output): 0.4082, norm(x): 0.3864, norm(y): 1.0119, norm:2.1719, tok/sec: 97398.62, flops:102.22, batch-reuse:1
@ 2913 train 4.6551 , allloss: 4.6579, dt: 1328.63ms, fracRes: 0.3373, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3866, norm(y): 1.0119, norm:1.8374, tok/sec: 98651.86, flops:103.54, batch-reuse:1
@ 2914 train 4.5679 , allloss: 4.5702, dt: 1288.98ms, fracRes: 0.3375, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3884, norm(y): 1.0119, norm:2.0420, tok/sec: 101686.87, flops:106.72, batch-reuse:1
@ 2915 train 4.6013 , allloss: 4.6047, dt: 1290.27ms, fracRes: 0.3366, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3910, norm(y): 1.0119, norm:1.9220, tok/sec: 101585.14, flops:106.62, batch-reuse:1
@ 2916 train 4.5760 , allloss: 4.5775, dt: 1280.83ms, fracRes: 0.3395, norm(attn): 0.1914, norm(output): 0.4102, norm(x): 0.3921, norm(y): 1.0120, norm:2.3425, tok/sec: 102333.35, flops:107.40, batch-reuse:1
@ 2917 train 4.6507 , allloss: 4.6545, dt: 1314.16ms, fracRes: 0.3384, norm(attn): 0.1895, norm(output): 0.4082, norm(x): 0.3915, norm(y): 1.0120, norm:2.0976, tok/sec: 99738.01, flops:104.68, batch-reuse:1
@ 2918 train 4.7172 , allloss: 4.7212, dt: 1325.75ms, fracRes: 0.3363, norm(attn): 0.1875, norm(output): 0.4102, norm(x): 0.3940, norm(y): 1.0119, norm:1.8484, tok/sec: 98866.60, flops:103.76, batch-reuse:1
@ 2919 train 4.6046 , allloss: 4.6091, dt: 1332.58ms, fracRes: 0.3366, norm(attn): 0.1895, norm(output): 0.4082, norm(x): 0.3939, norm(y): 1.0119, norm:1.7977, tok/sec: 98359.94, flops:103.23, batch-reuse:1
@ 2920 train 4.7221 , allloss: 4.7238, dt: 1310.97ms, fracRes: 0.3369, norm(attn): 0.1875, norm(output): 0.4102, norm(x): 0.3939, norm(y): 1.0120, norm:2.2306, tok/sec: 99981.09, flops:104.93, batch-reuse:1
@ 2921 train 4.6636 , allloss: 4.6667, dt: 1306.75ms, fracRes: 0.3366, norm(attn): 0.1895, norm(output): 0.4121, norm(x): 0.3935, norm(y): 1.0119, norm:1.9483, tok/sec: 100303.80, flops:105.27, batch-reuse:1
@ 2922 train 4.6146 , allloss: 4.6164, dt: 1296.28ms, fracRes: 0.3363, norm(attn): 0.1904, norm(output): 0.4121, norm(x): 0.3909, norm(y): 1.0119, norm:1.8686, tok/sec: 101114.28, flops:106.12, batch-reuse:1
@ 2923 train 4.5805 , allloss: 4.5820, dt: 1302.51ms, fracRes: 0.3377, norm(attn): 0.1895, norm(output): 0.4082, norm(x): 0.3892, norm(y): 1.0119, norm:1.8691, tok/sec: 100630.25, flops:105.61, batch-reuse:1
@ 2924 train 4.6921 , allloss: 4.6981, dt: 1301.36ms, fracRes: 0.3359, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3905, norm(y): 1.0119, norm:2.2402, tok/sec: 100718.92, flops:105.71, batch-reuse:1
@ 2925 train 4.7965 , allloss: 4.7986, dt: 1294.14ms, fracRes: 0.3390, norm(attn): 0.1914, norm(output): 0.4121, norm(x): 0.3920, norm(y): 1.0119, norm:2.2014, tok/sec: 101280.78, flops:106.30, batch-reuse:1
@ 2926 train 4.6386 , allloss: 4.6433, dt: 1288.95ms, fracRes: 0.3373, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3876, norm(y): 1.0119, norm:2.2531, tok/sec: 101688.71, flops:106.72, batch-reuse:1
@ 2927 train 4.5324 , allloss: 4.5373, dt: 1301.48ms, fracRes: 0.3359, norm(attn): 0.1943, norm(output): 0.4102, norm(x): 0.3912, norm(y): 1.0118, norm:1.9403, tok/sec: 100710.01, flops:105.70, batch-reuse:1
@ 2928 train 4.6131 , allloss: 4.6169, dt: 1308.23ms, fracRes: 0.3356, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3906, norm(y): 1.0119, norm:1.9779, tok/sec: 100190.14, flops:105.15, batch-reuse:1
@ 2929 train 4.5984 , allloss: 4.5998, dt: 1351.55ms, fracRes: 0.3371, norm(attn): 0.1904, norm(output): 0.4082, norm(x): 0.3888, norm(y): 1.0120, norm:1.7863, tok/sec: 96979.00, flops:101.78, batch-reuse:1
@ 2930 train 4.5686 , allloss: 4.5714, dt: 1304.59ms, fracRes: 0.3376, norm(attn): 0.1924, norm(output): 0.4082, norm(x): 0.3903, norm(y): 1.0120, norm:2.0976, tok/sec: 100469.95, flops:105.45, batch-reuse:1
@ 2931 train 4.5490 , allloss: 4.5526, dt: 1297.98ms, fracRes: 0.3356, norm(attn): 0.1943, norm(output): 0.4121, norm(x): 0.3942, norm(y): 1.0119, norm:1.8564, tok/sec: 100981.59, flops:105.98, batch-reuse:1
@ 2932 train 4.4751 , allloss: 4.4791, dt: 1311.65ms, fracRes: 0.3354, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3909, norm(y): 1.0120, norm:2.3373, tok/sec: 99929.00, flops:104.88, batch-reuse:1
@ 2933 train 4.5856 , allloss: 4.5885, dt: 1313.25ms, fracRes: 0.3359, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3915, norm(y): 1.0120, norm:2.2539, tok/sec: 99806.98, flops:104.75, batch-reuse:1
@ 2934 train 4.6401 , allloss: 4.6435, dt: 1287.93ms, fracRes: 0.3354, norm(attn): 0.1973, norm(output): 0.4102, norm(x): 0.3908, norm(y): 1.0119, norm:2.1516, tok/sec: 101769.49, flops:106.81, batch-reuse:1
@ 2935 train 4.5517 , allloss: 4.5551, dt: 1304.61ms, fracRes: 0.3359, norm(attn): 0.1982, norm(output): 0.4082, norm(x): 0.3894, norm(y): 1.0118, norm:1.9057, tok/sec: 100468.41, flops:105.44, batch-reuse:1
@ 2936 train 4.4781 , allloss: 4.4814, dt: 1317.09ms, fracRes: 0.3384, norm(attn): 0.1943, norm(output): 0.4082, norm(x): 0.3889, norm(y): 1.0119, norm:2.1375, tok/sec: 99516.39, flops:104.44, batch-reuse:1
@ 2937 train 4.5263 , allloss: 4.5351, dt: 1316.20ms, fracRes: 0.3385, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3890, norm(y): 1.0119, norm:1.9036, tok/sec: 99583.83, flops:104.52, batch-reuse:1
@ 2938 train 4.5389 , allloss: 4.5445, dt: 1336.35ms, fracRes: 0.3381, norm(attn): 0.1953, norm(output): 0.4102, norm(x): 0.3914, norm(y): 1.0119, norm:2.0133, tok/sec: 98082.11, flops:102.94, batch-reuse:1
@ 2939 train 4.5940 , allloss: 4.5954, dt: 1337.43ms, fracRes: 0.3368, norm(attn): 0.1973, norm(output): 0.4082, norm(x): 0.3911, norm(y): 1.0119, norm:2.0211, tok/sec: 98002.94, flops:102.86, batch-reuse:1
@ 2940 train 4.5471 , allloss: 4.5499, dt: 1293.91ms, fracRes: 0.3380, norm(attn): 0.1943, norm(output): 0.4102, norm(x): 0.3915, norm(y): 1.0119, norm:2.0674, tok/sec: 101298.92, flops:106.32, batch-reuse:1
@ 2941 train 4.4486 , allloss: 4.4509, dt: 1315.82ms, fracRes: 0.3382, norm(attn): 0.1973, norm(output): 0.4102, norm(x): 0.3923, norm(y): 1.0118, norm:2.1846, tok/sec: 99612.36, flops:104.55, batch-reuse:1
@ 2942 train 4.5582 , allloss: 4.5617, dt: 1303.81ms, fracRes: 0.3378, norm(attn): 0.1963, norm(output): 0.4102, norm(x): 0.3931, norm(y): 1.0119, norm:2.2145, tok/sec: 100529.79, flops:105.51, batch-reuse:1
@ 2943 train 4.5574 , allloss: 4.5602, dt: 1286.31ms, fracRes: 0.3379, norm(attn): 0.1963, norm(output): 0.4121, norm(x): 0.3940, norm(y): 1.0119, norm:2.1883, tok/sec: 101897.47, flops:106.94, batch-reuse:1
@ 2944 train 4.6099 , allloss: 4.6154, dt: 1294.66ms, fracRes: 0.3364, norm(attn): 0.1934, norm(output): 0.4102, norm(x): 0.3909, norm(y): 1.0119, norm:1.9064, tok/sec: 101240.55, flops:106.25, batch-reuse:1
@ 2945 train 4.5898 , allloss: 4.5919, dt: 1298.20ms, fracRes: 0.3372, norm(attn): 0.1914, norm(output): 0.4102, norm(x): 0.3926, norm(y): 1.0119, norm:1.8935, tok/sec: 100964.12, flops:105.96, batch-reuse:1
@ 2946 train 4.5200 , allloss: 4.5226, dt: 1300.07ms, fracRes: 0.3390, norm(attn): 0.1934, norm(output): 0.4102, norm(x): 0.3912, norm(y): 1.0120, norm:2.0676, tok/sec: 100819.11, flops:105.81, batch-reuse:1
@ 2947 train 4.5354 , allloss: 4.5370, dt: 1322.83ms, fracRes: 0.3395, norm(attn): 0.1924, norm(output): 0.4102, norm(x): 0.3925, norm(y): 1.0119, norm:1.9127, tok/sec: 99084.17, flops:103.99, batch-reuse:1
@ 2948 train 4.4600 , allloss: 4.4615, dt: 1291.37ms, fracRes: 0.3383, norm(attn): 0.1924, norm(output): 0.4102, norm(x): 0.3908, norm(y): 1.0119, norm:1.8870, tok/sec: 101498.10, flops:106.52, batch-reuse:1
@ 2949 train 4.5120 , allloss: 4.5173, dt: 1295.49ms, fracRes: 0.3383, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3889, norm(y): 1.0119, norm:2.0394, tok/sec: 101175.32, flops:106.19, batch-reuse:1
@ 2950 train 4.6081 , allloss: 4.6102, dt: 1291.79ms, fracRes: 0.3411, norm(attn): 0.1914, norm(output): 0.4121, norm(x): 0.3930, norm(y): 1.0119, norm:2.1309, tok/sec: 101465.28, flops:106.49, batch-reuse:1
@ 2951 train 4.4894 , allloss: 4.4929, dt: 1296.07ms, fracRes: 0.3417, norm(attn): 0.1895, norm(output): 0.4121, norm(x): 0.3897, norm(y): 1.0120, norm:2.0745, tok/sec: 101130.31, flops:106.14, batch-reuse:1
@ 2952 train 4.6192 , allloss: 4.6213, dt: 1340.92ms, fracRes: 0.3409, norm(attn): 0.1895, norm(output): 0.4082, norm(x): 0.3898, norm(y): 1.0119, norm:2.1432, tok/sec: 97747.70, flops:102.59, batch-reuse:1
@ 2953 train 4.5924 , allloss: 4.5944, dt: 1349.81ms, fracRes: 0.3398, norm(attn): 0.1904, norm(output): 0.4141, norm(x): 0.3931, norm(y): 1.0119, norm:2.2562, tok/sec: 97103.74, flops:101.91, batch-reuse:1
@ 2954 train 4.5573 , allloss: 4.5591, dt: 1318.48ms, fracRes: 0.3406, norm(attn): 0.1914, norm(output): 0.4121, norm(x): 0.3923, norm(y): 1.0119, norm:2.0312, tok/sec: 99411.66, flops:104.33, batch-reuse:1
@ 2955 train 4.5632 , allloss: 4.5668, dt: 1284.60ms, fracRes: 0.3407, norm(attn): 0.1895, norm(output): 0.4121, norm(x): 0.3914, norm(y): 1.0120, norm:2.1112, tok/sec: 102033.32, flops:107.09, batch-reuse:1
@ 2956 train 4.5082 , allloss: 4.5120, dt: 1298.19ms, fracRes: 0.3390, norm(attn): 0.1904, norm(output): 0.4102, norm(x): 0.3889, norm(y): 1.0119, norm:1.9727, tok/sec: 100965.11, flops:105.96, batch-reuse:1
@ 2957 train 4.5854 , allloss: 4.5877, dt: 1320.59ms, fracRes: 0.3389, norm(attn): 0.1895, norm(output): 0.4082, norm(x): 0.3891, norm(y): 1.0118, norm:2.0342, tok/sec: 99252.53, flops:104.17, batch-reuse:1
@ 2958 train 4.5562 , allloss: 4.5590, dt: 1292.37ms, fracRes: 0.3389, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3892, norm(y): 1.0119, norm:2.2014, tok/sec: 101419.77, flops:106.44, batch-reuse:1
@ 2959 train 4.5689 , allloss: 4.5713, dt: 1288.11ms, fracRes: 0.3373, norm(attn): 0.1914, norm(output): 0.4121, norm(x): 0.3907, norm(y): 1.0119, norm:1.8097, tok/sec: 101755.66, flops:106.79, batch-reuse:1
@ 2960 train 4.5399 , allloss: 4.5430, dt: 1307.03ms, fracRes: 0.3375, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3893, norm(y): 1.0119, norm:1.7140, tok/sec: 100282.23, flops:105.25, batch-reuse:1
@ 2961 train 4.4899 , allloss: 4.4929, dt: 1320.73ms, fracRes: 0.3378, norm(attn): 0.1982, norm(output): 0.4102, norm(x): 0.3902, norm(y): 1.0119, norm:2.2197, tok/sec: 99242.12, flops:104.16, batch-reuse:1
@ 2962 train 4.4993 , allloss: 4.5053, dt: 1305.44ms, fracRes: 0.3369, norm(attn): 0.1963, norm(output): 0.4121, norm(x): 0.3907, norm(y): 1.0119, norm:2.0835, tok/sec: 100404.28, flops:105.38, batch-reuse:1
@ 2963 train 4.5782 , allloss: 4.5847, dt: 1328.67ms, fracRes: 0.3397, norm(attn): 0.1934, norm(output): 0.4141, norm(x): 0.3924, norm(y): 1.0119, norm:2.5563, tok/sec: 98649.22, flops:103.53, batch-reuse:1
@ 2964 train 4.5858 , allloss: 4.5891, dt: 1314.92ms, fracRes: 0.3409, norm(attn): 0.1924, norm(output): 0.4121, norm(x): 0.3926, norm(y): 1.0119, norm:1.9810, tok/sec: 99680.50, flops:104.62, batch-reuse:1
@ 2965 train 4.5450 , allloss: 4.5493, dt: 1299.38ms, fracRes: 0.3397, norm(attn): 0.1943, norm(output): 0.4141, norm(x): 0.3939, norm(y): 1.0119, norm:2.4131, tok/sec: 100872.64, flops:105.87, batch-reuse:1
@ 2966 train 4.4825 , allloss: 4.4858, dt: 1309.42ms, fracRes: 0.3401, norm(attn): 0.1973, norm(output): 0.4121, norm(x): 0.3916, norm(y): 1.0119, norm:1.9523, tok/sec: 100098.91, flops:105.06, batch-reuse:1
@ 2967 train 4.5446 , allloss: 4.5490, dt: 1289.23ms, fracRes: 0.3392, norm(attn): 0.1973, norm(output): 0.4121, norm(x): 0.3936, norm(y): 1.0119, norm:2.0702, tok/sec: 101667.12, flops:106.70, batch-reuse:1
@ 2968 train 4.5558 , allloss: 4.5586, dt: 1312.26ms, fracRes: 0.3399, norm(attn): 0.1943, norm(output): 0.4141, norm(x): 0.3923, norm(y): 1.0120, norm:2.1312, tok/sec: 99882.85, flops:104.83, batch-reuse:1
@ 2969 train 4.4870 , allloss: 4.4906, dt: 1284.73ms, fracRes: 0.3398, norm(attn): 0.1953, norm(output): 0.4141, norm(x): 0.3933, norm(y): 1.0120, norm:2.0753, tok/sec: 102022.86, flops:107.07, batch-reuse:1
@ 2970 train 4.4981 , allloss: 4.5107, dt: 1290.34ms, fracRes: 0.3391, norm(attn): 0.1973, norm(output): 0.4180, norm(x): 0.3942, norm(y): 1.0119, norm:1.9644, tok/sec: 101579.25, flops:106.61, batch-reuse:1
@ 2971 train 4.5467 , allloss: 4.5519, dt: 1285.57ms, fracRes: 0.3431, norm(attn): 0.1943, norm(output): 0.4102, norm(x): 0.3910, norm(y): 1.0120, norm:2.2369, tok/sec: 101956.21, flops:107.00, batch-reuse:1
@ 2972 train 4.4357 , allloss: 4.4380, dt: 1274.06ms, fracRes: 0.3391, norm(attn): 0.1963, norm(output): 0.4121, norm(x): 0.3936, norm(y): 1.0119, norm:2.1939, tok/sec: 102877.36, flops:107.97, batch-reuse:1
@ 2973 train 4.5418 , allloss: 4.5434, dt: 1285.48ms, fracRes: 0.3405, norm(attn): 0.1934, norm(output): 0.4141, norm(x): 0.3955, norm(y): 1.0119, norm:2.4816, tok/sec: 101963.11, flops:107.01, batch-reuse:1
@ 2974 train 4.4777 , allloss: 4.4795, dt: 1291.36ms, fracRes: 0.3392, norm(attn): 0.1934, norm(output): 0.4121, norm(x): 0.3920, norm(y): 1.0120, norm:2.0013, tok/sec: 101498.88, flops:106.52, batch-reuse:1
@ 2975 train 4.6363 , allloss: 4.6384, dt: 1299.98ms, fracRes: 0.3369, norm(attn): 0.1982, norm(output): 0.4121, norm(x): 0.3929, norm(y): 1.0119, norm:2.3204, tok/sec: 100826.47, flops:105.82, batch-reuse:1
@ 2976 train 4.6942 , allloss: 4.7010, dt: 1300.52ms, fracRes: 0.3374, norm(attn): 0.1973, norm(output): 0.4141, norm(x): 0.3952, norm(y): 1.0119, norm:2.3619, tok/sec: 100784.05, flops:105.77, batch-reuse:1
@ 2977 train 4.7083 , allloss: 4.7103, dt: 1296.50ms, fracRes: 0.3365, norm(attn): 0.1953, norm(output): 0.4141, norm(x): 0.3937, norm(y): 1.0119, norm:1.8066, tok/sec: 101097.17, flops:106.10, batch-reuse:1
@ 2978 train 4.7116 , allloss: 4.7175, dt: 1317.23ms, fracRes: 0.3412, norm(attn): 0.1943, norm(output): 0.4141, norm(x): 0.3932, norm(y): 1.0119, norm:2.0820, tok/sec: 99505.49, flops:104.43, batch-reuse:1
@ 2979 train 4.7342 , allloss: 4.7360, dt: 1322.02ms, fracRes: 0.3421, norm(attn): 0.1934, norm(output): 0.4102, norm(x): 0.3901, norm(y): 1.0119, norm:2.4638, tok/sec: 99144.89, flops:104.05, batch-reuse:1
@ 2980 train 4.5931 , allloss: 4.5967, dt: 1312.78ms, fracRes: 0.3423, norm(attn): 0.1953, norm(output): 0.4160, norm(x): 0.3961, norm(y): 1.0119, norm:2.5336, tok/sec: 99843.05, flops:104.79, batch-reuse:1
@ 2981 train 4.6575 , allloss: 4.6611, dt: 1334.31ms, fracRes: 0.3412, norm(attn): 0.1953, norm(output): 0.4141, norm(x): 0.3950, norm(y): 1.0119, norm:2.2550, tok/sec: 98232.36, flops:103.10, batch-reuse:1
@ 2982 train 4.7663 , allloss: 4.7683, dt: 1316.33ms, fracRes: 0.3429, norm(attn): 0.1924, norm(output): 0.4160, norm(x): 0.3944, norm(y): 1.0119, norm:2.2949, tok/sec: 99573.98, flops:104.50, batch-reuse:1
@ 2983 train 4.6676 , allloss: 4.6700, dt: 1301.82ms, fracRes: 0.3405, norm(attn): 0.1953, norm(output): 0.4219, norm(x): 0.3961, norm(y): 1.0119, norm:2.5962, tok/sec: 100683.43, flops:105.67, batch-reuse:1
@ 2984 train 4.6803 , allloss: 4.6834, dt: 1315.74ms, fracRes: 0.3411, norm(attn): 0.1914, norm(output): 0.4160, norm(x): 0.3913, norm(y): 1.0119, norm:1.6809, tok/sec: 99618.71, flops:104.55, batch-reuse:1
@ 2985 train 4.7455 , allloss: 4.7477, dt: 1319.90ms, fracRes: 0.3401, norm(attn): 0.1953, norm(output): 0.4180, norm(x): 0.3943, norm(y): 1.0119, norm:2.3961, tok/sec: 99304.33, flops:104.22, batch-reuse:1
@ 2986 train 4.6407 , allloss: 4.6426, dt: 1326.70ms, fracRes: 0.3410, norm(attn): 0.1895, norm(output): 0.4160, norm(x): 0.3947, norm(y): 1.0120, norm:2.0442, tok/sec: 98795.55, flops:103.69, batch-reuse:1
@ 2987 train 4.7175 , allloss: 4.7218, dt: 1295.60ms, fracRes: 0.3406, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3936, norm(y): 1.0120, norm:2.1279, tok/sec: 101167.26, flops:106.18, batch-reuse:1
@ 2988 train 4.7923 , allloss: 4.7974, dt: 1275.65ms, fracRes: 0.3415, norm(attn): 0.1914, norm(output): 0.4219, norm(x): 0.3972, norm(y): 1.0120, norm:2.0887, tok/sec: 102748.86, flops:107.84, batch-reuse:1
@ 2989 train 4.7294 , allloss: 4.7333, dt: 1291.18ms, fracRes: 0.3425, norm(attn): 0.1904, norm(output): 0.4180, norm(x): 0.3961, norm(y): 1.0119, norm:2.2359, tok/sec: 101513.18, flops:106.54, batch-reuse:1
@ 2990 train 4.7600 , allloss: 4.7628, dt: 1314.19ms, fracRes: 0.3406, norm(attn): 0.1914, norm(output): 0.4180, norm(x): 0.3966, norm(y): 1.0118, norm:1.9486, tok/sec: 99736.33, flops:104.68, batch-reuse:1
@ 2991 train 4.6603 , allloss: 4.6616, dt: 1318.18ms, fracRes: 0.3430, norm(attn): 0.1895, norm(output): 0.4180, norm(x): 0.3958, norm(y): 1.0120, norm:1.9319, tok/sec: 99434.21, flops:104.36, batch-reuse:1
@ 2992 train 4.7146 , allloss: 4.7169, dt: 1311.68ms, fracRes: 0.3420, norm(attn): 0.1914, norm(output): 0.4160, norm(x): 0.3959, norm(y): 1.0120, norm:1.9636, tok/sec: 99926.59, flops:104.87, batch-reuse:1
@ 2993 train 4.7147 , allloss: 4.7182, dt: 1326.25ms, fracRes: 0.3414, norm(attn): 0.1934, norm(output): 0.4297, norm(x): 0.4021, norm(y): 1.0120, norm:1.9116, tok/sec: 98828.76, flops:103.72, batch-reuse:1
@ 2994 train 4.7223 , allloss: 4.7239, dt: 1316.53ms, fracRes: 0.3403, norm(attn): 0.1943, norm(output): 0.4180, norm(x): 0.3968, norm(y): 1.0120, norm:2.0364, tok/sec: 99558.31, flops:104.49, batch-reuse:1
@ 2995 train 4.6035 , allloss: 4.6047, dt: 1316.84ms, fracRes: 0.3394, norm(attn): 0.1982, norm(output): 0.4199, norm(x): 0.3955, norm(y): 1.0119, norm:1.9529, tok/sec: 99535.17, flops:104.46, batch-reuse:1
@ 2996 train 4.6377 , allloss: 4.6388, dt: 1296.59ms, fracRes: 0.3396, norm(attn): 0.1982, norm(output): 0.4180, norm(x): 0.3958, norm(y): 1.0119, norm:1.8899, tok/sec: 101090.07, flops:106.10, batch-reuse:1
@ 2997 train 4.6909 , allloss: 4.6939, dt: 1302.29ms, fracRes: 0.3400, norm(attn): 0.1973, norm(output): 0.4141, norm(x): 0.3946, norm(y): 1.0119, norm:1.9778, tok/sec: 100647.40, flops:105.63, batch-reuse:1
@ 2998 train 4.7177 , allloss: 4.7222, dt: 1324.45ms, fracRes: 0.3408, norm(attn): 0.1943, norm(output): 0.4199, norm(x): 0.3954, norm(y): 1.0120, norm:1.8232, tok/sec: 98963.66, flops:103.86, batch-reuse:1
@ 2999 train 4.6032 , allloss: 4.6048, dt: 1283.58ms, fracRes: 0.3415, norm(attn): 0.1924, norm(output): 0.4180, norm(x): 0.3952, norm(y): 1.0120, norm:2.3848, tok/sec: 102114.26, flops:107.17, batch-reuse:1
@ 3000 train 4.7257 , allloss: 4.7278, dt: 1291.66ms, fracRes: 0.3432, norm(attn): 0.1924, norm(output): 0.4258, norm(x): 0.3965, norm(y): 1.0120, norm:1.9406, tok/sec: 101475.61, flops:106.50, batch-reuse:1
@ 3001 train 4.7648 , allloss: 4.7670, dt: 1346.32ms, fracRes: 0.3437, norm(attn): 0.1914, norm(output): 0.4258, norm(x): 0.3958, norm(y): 1.0120, norm:2.0415, tok/sec: 97355.52, flops:102.18, batch-reuse:1
@ 3002 train 4.6431 , allloss: 4.6668, dt: 1308.65ms, fracRes: 0.3425, norm(attn): 0.1973, norm(output): 0.4277, norm(x): 0.3974, norm(y): 1.0120, norm:2.0891, tok/sec: 100158.18, flops:105.12, batch-reuse:1
@ 3003 train 4.6944 , allloss: 4.6972, dt: 1293.65ms, fracRes: 0.3430, norm(attn): 0.1963, norm(output): 0.4219, norm(x): 0.3972, norm(y): 1.0119, norm:1.9672, tok/sec: 101319.73, flops:106.34, batch-reuse:1
@ 3004 train 4.7635 , allloss: 4.7675, dt: 1327.46ms, fracRes: 0.3450, norm(attn): 0.1904, norm(output): 0.4219, norm(x): 0.3961, norm(y): 1.0120, norm:2.1924, tok/sec: 98738.68, flops:103.63, batch-reuse:1
@ 3005 train 4.9388 , allloss: 4.9407, dt: 1286.16ms, fracRes: 0.3430, norm(attn): 0.1914, norm(output): 0.4277, norm(x): 0.4011, norm(y): 1.0119, norm:2.3360, tok/sec: 101909.50, flops:106.96, batch-reuse:1
@ 3006 train 4.6867 , allloss: 4.6880, dt: 1294.02ms, fracRes: 0.3439, norm(attn): 0.1934, norm(output): 0.4180, norm(x): 0.3981, norm(y): 1.0120, norm:2.7848, tok/sec: 101290.72, flops:106.31, batch-reuse:1
@ 3007 train 4.7627 , allloss: 4.7646, dt: 1296.35ms, fracRes: 0.3435, norm(attn): 0.1914, norm(output): 0.4238, norm(x): 0.3985, norm(y): 1.0120, norm:2.0261, tok/sec: 101108.66, flops:106.12, batch-reuse:1
@ 3008 train 4.6943 , allloss: 4.6957, dt: 1290.83ms, fracRes: 0.3390, norm(attn): 0.1992, norm(output): 0.4258, norm(x): 0.3994, norm(y): 1.0119, norm:2.0971, tok/sec: 101540.65, flops:106.57, batch-reuse:1
@ 3009 train 4.6288 , allloss: 4.6301, dt: 1309.77ms, fracRes: 0.3400, norm(attn): 0.1992, norm(output): 0.4199, norm(x): 0.3970, norm(y): 1.0119, norm:2.2253, tok/sec: 100072.80, flops:105.03, batch-reuse:1
@ 3010 train 4.6973 , allloss: 4.6987, dt: 1301.96ms, fracRes: 0.3417, norm(attn): 0.1963, norm(output): 0.4180, norm(x): 0.3988, norm(y): 1.0120, norm:2.1083, tok/sec: 100672.52, flops:105.66, batch-reuse:1
@ 3011 train 4.7147 , allloss: 4.7173, dt: 1284.12ms, fracRes: 0.3402, norm(attn): 0.1973, norm(output): 0.4219, norm(x): 0.3993, norm(y): 1.0119, norm:1.8027, tok/sec: 102071.28, flops:107.13, batch-reuse:1
@ 3012 train 4.8056 , allloss: 4.8067, dt: 1305.70ms, fracRes: 0.3429, norm(attn): 0.1953, norm(output): 0.4219, norm(x): 0.3965, norm(y): 1.0120, norm:2.3907, tok/sec: 100384.70, flops:105.36, batch-reuse:1
@ 3013 train 4.8255 , allloss: 4.8265, dt: 1306.85ms, fracRes: 0.3408, norm(attn): 0.1973, norm(output): 0.4180, norm(x): 0.3957, norm(y): 1.0120, norm:2.1715, tok/sec: 100295.81, flops:105.26, batch-reuse:1
@ 3014 train 4.6797 , allloss: 4.6811, dt: 1307.96ms, fracRes: 0.3397, norm(attn): 0.1992, norm(output): 0.4238, norm(x): 0.3976, norm(y): 1.0119, norm:2.0231, tok/sec: 100211.27, flops:105.17, batch-reuse:1
@ 3015 train 4.6888 , allloss: 4.6905, dt: 1313.30ms, fracRes: 0.3399, norm(attn): 0.1973, norm(output): 0.4160, norm(x): 0.3954, norm(y): 1.0119, norm:2.2227, tok/sec: 99803.57, flops:104.75, batch-reuse:1
@ 3016 train 4.6386 , allloss: 4.6405, dt: 1315.45ms, fracRes: 0.3414, norm(attn): 0.1953, norm(output): 0.4238, norm(x): 0.3970, norm(y): 1.0120, norm:1.8617, tok/sec: 99640.61, flops:104.57, batch-reuse:1
@ 3017 train 4.6247 , allloss: 4.6272, dt: 1301.12ms, fracRes: 0.3416, norm(attn): 0.1953, norm(output): 0.4199, norm(x): 0.3979, norm(y): 1.0120, norm:2.1729, tok/sec: 100737.55, flops:105.73, batch-reuse:1
@ 3018 train 4.6807 , allloss: 4.6827, dt: 1314.36ms, fracRes: 0.3394, norm(attn): 0.1982, norm(output): 0.4180, norm(x): 0.3976, norm(y): 1.0119, norm:1.8790, tok/sec: 99723.16, flops:104.66, batch-reuse:1
@ 3019 train 4.8289 , allloss: 4.8302, dt: 1290.85ms, fracRes: 0.3407, norm(attn): 0.1982, norm(output): 0.4180, norm(x): 0.3971, norm(y): 1.0120, norm:1.8017, tok/sec: 101539.15, flops:106.57, batch-reuse:1
@ 3020 train 4.6217 , allloss: 4.6226, dt: 1298.44ms, fracRes: 0.3411, norm(attn): 0.1963, norm(output): 0.4219, norm(x): 0.3966, norm(y): 1.0120, norm:2.3345, tok/sec: 100945.68, flops:105.94, batch-reuse:1
@ 3021 train 4.6401 , allloss: 4.6423, dt: 1295.33ms, fracRes: 0.3412, norm(attn): 0.1953, norm(output): 0.4180, norm(x): 0.3962, norm(y): 1.0120, norm:2.2600, tok/sec: 101187.76, flops:106.20, batch-reuse:1
@ 3022 train 4.7354 , allloss: 4.7377, dt: 1279.75ms, fracRes: 0.3435, norm(attn): 0.1924, norm(output): 0.4277, norm(x): 0.4005, norm(y): 1.0120, norm:2.5271, tok/sec: 102419.92, flops:107.49, batch-reuse:1
@ 3023 train 4.7590 , allloss: 4.7613, dt: 1287.87ms, fracRes: 0.3427, norm(attn): 0.1934, norm(output): 0.4180, norm(x): 0.3984, norm(y): 1.0119, norm:2.0584, tok/sec: 101773.93, flops:106.81, batch-reuse:1
@ 3024 train 4.6742 , allloss: 4.6768, dt: 1303.81ms, fracRes: 0.3408, norm(attn): 0.2002, norm(output): 0.4160, norm(x): 0.3992, norm(y): 1.0119, norm:2.3138, tok/sec: 100530.33, flops:105.51, batch-reuse:1
@ 3025 train 4.6658 , allloss: 4.6687, dt: 1268.75ms, fracRes: 0.3394, norm(attn): 0.2002, norm(output): 0.4258, norm(x): 0.3991, norm(y): 1.0119, norm:1.9659, tok/sec: 103308.35, flops:108.42, batch-reuse:1
@ 3026 train 4.7208 , allloss: 4.7227, dt: 1287.31ms, fracRes: 0.3410, norm(attn): 0.1973, norm(output): 0.4277, norm(x): 0.4009, norm(y): 1.0120, norm:2.1892, tok/sec: 101818.36, flops:106.86, batch-reuse:1
@ 3027 train 4.7383 , allloss: 4.7397, dt: 1299.53ms, fracRes: 0.3391, norm(attn): 0.2012, norm(output): 0.4180, norm(x): 0.3979, norm(y): 1.0120, norm:2.2418, tok/sec: 100861.10, flops:105.86, batch-reuse:1
@ 3028 train 4.6939 , allloss: 4.6954, dt: 1292.50ms, fracRes: 0.3382, norm(attn): 0.2021, norm(output): 0.4219, norm(x): 0.3973, norm(y): 1.0119, norm:1.9350, tok/sec: 101409.46, flops:106.43, batch-reuse:1
@ 3029 train 4.5778 , allloss: 4.5797, dt: 1292.55ms, fracRes: 0.3390, norm(attn): 0.2021, norm(output): 0.4141, norm(x): 0.3945, norm(y): 1.0120, norm:2.2025, tok/sec: 101406.04, flops:106.43, batch-reuse:1
@ 3030 train 4.6451 , allloss: 4.6497, dt: 1331.44ms, fracRes: 0.3393, norm(attn): 0.2002, norm(output): 0.4180, norm(x): 0.3962, norm(y): 1.0119, norm:1.9371, tok/sec: 98443.49, flops:103.32, batch-reuse:1
@ 3031 train 4.6518 , allloss: 4.6551, dt: 1316.00ms, fracRes: 0.3427, norm(attn): 0.1982, norm(output): 0.4141, norm(x): 0.3940, norm(y): 1.0120, norm:2.0264, tok/sec: 99598.98, flops:104.53, batch-reuse:1
@ 3032 train 4.6786 , allloss: 4.6802, dt: 1302.21ms, fracRes: 0.3413, norm(attn): 0.2002, norm(output): 0.4199, norm(x): 0.3975, norm(y): 1.0120, norm:2.4309, tok/sec: 100653.18, flops:105.64, batch-reuse:1
@ 3033 train 4.6138 , allloss: 4.6153, dt: 1289.75ms, fracRes: 0.3423, norm(attn): 0.2002, norm(output): 0.4199, norm(x): 0.3987, norm(y): 1.0120, norm:2.0596, tok/sec: 101625.95, flops:106.66, batch-reuse:1
@ 3034 train 4.6928 , allloss: 4.6944, dt: 1283.45ms, fracRes: 0.3420, norm(attn): 0.2002, norm(output): 0.4258, norm(x): 0.3994, norm(y): 1.0119, norm:1.9572, tok/sec: 102124.81, flops:107.18, batch-reuse:1
@ 3035 train 4.7242 , allloss: 4.7272, dt: 1324.95ms, fracRes: 0.3445, norm(attn): 0.1943, norm(output): 0.4258, norm(x): 0.3975, norm(y): 1.0120, norm:1.9484, tok/sec: 98925.64, flops:103.82, batch-reuse:1
@ 3036 train 4.6419 , allloss: 4.6434, dt: 1326.88ms, fracRes: 0.3440, norm(attn): 0.1953, norm(output): 0.4219, norm(x): 0.3949, norm(y): 1.0120, norm:2.0157, tok/sec: 98782.34, flops:103.67, batch-reuse:1
@ 3037 train 4.7032 , allloss: 4.7060, dt: 1330.44ms, fracRes: 0.3447, norm(attn): 0.1924, norm(output): 0.4258, norm(x): 0.3955, norm(y): 1.0120, norm:1.9915, tok/sec: 98517.69, flops:103.40, batch-reuse:1
@ 3038 train 4.6599 , allloss: 4.6622, dt: 1329.53ms, fracRes: 0.3428, norm(attn): 0.1943, norm(output): 0.4277, norm(x): 0.3989, norm(y): 1.0120, norm:1.9510, tok/sec: 98585.04, flops:103.47, batch-reuse:1
@ 3039 train 4.8701 , allloss: 4.8713, dt: 1319.25ms, fracRes: 0.3435, norm(attn): 0.1953, norm(output): 0.4219, norm(x): 0.3945, norm(y): 1.0120, norm:2.2366, tok/sec: 99353.14, flops:104.27, batch-reuse:1
@ 3040 train 4.6727 , allloss: 4.6741, dt: 1325.89ms, fracRes: 0.3425, norm(attn): 0.1963, norm(output): 0.4277, norm(x): 0.3962, norm(y): 1.0120, norm:3.2636, tok/sec: 98855.96, flops:103.75, batch-reuse:1
@ 3041 train 4.7153 , allloss: 4.7171, dt: 1311.35ms, fracRes: 0.3405, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.3989, norm(y): 1.0119, norm:2.5748, tok/sec: 99951.75, flops:104.90, batch-reuse:1
@ 3042 train 4.6041 , allloss: 4.6078, dt: 1282.64ms, fracRes: 0.3430, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.3997, norm(y): 1.0122, norm:2.4774, tok/sec: 102189.27, flops:107.25, batch-reuse:1
@ 3043 train 4.6392 , allloss: 4.6401, dt: 1307.63ms, fracRes: 0.3431, norm(attn): 0.1953, norm(output): 0.4297, norm(x): 0.3967, norm(y): 1.0121, norm:2.4256, tok/sec: 100235.97, flops:105.20, batch-reuse:1
@ 3044 train 4.6837 , allloss: 4.6852, dt: 1298.45ms, fracRes: 0.3425, norm(attn): 0.1924, norm(output): 0.4258, norm(x): 0.3980, norm(y): 1.0120, norm:2.1875, tok/sec: 100944.83, flops:105.94, batch-reuse:1
@ 3045 train 4.8709 , allloss: 4.8722, dt: 1286.15ms, fracRes: 0.3402, norm(attn): 0.1934, norm(output): 0.4297, norm(x): 0.4017, norm(y): 1.0119, norm:2.6687, tok/sec: 101910.34, flops:106.96, batch-reuse:1
@ 3046 train 4.6720 , allloss: 4.6734, dt: 1280.77ms, fracRes: 0.3374, norm(attn): 0.1973, norm(output): 0.4277, norm(x): 0.3998, norm(y): 1.0119, norm:2.0896, tok/sec: 102338.22, flops:107.41, batch-reuse:1
@ 3047 train 4.7260 , allloss: 4.7282, dt: 1276.82ms, fracRes: 0.3402, norm(attn): 0.1963, norm(output): 0.4297, norm(x): 0.4017, norm(y): 1.0120, norm:2.5178, tok/sec: 102655.21, flops:107.74, batch-reuse:1
@ 3048 train 4.6198 , allloss: 4.6218, dt: 1317.85ms, fracRes: 0.3380, norm(attn): 0.1992, norm(output): 0.4316, norm(x): 0.4013, norm(y): 1.0120, norm:2.0075, tok/sec: 99458.92, flops:104.38, batch-reuse:1
@ 3049 train 4.8134 , allloss: 4.8178, dt: 1328.69ms, fracRes: 0.3395, norm(attn): 0.1973, norm(output): 0.4316, norm(x): 0.4016, norm(y): 1.0119, norm:1.9782, tok/sec: 98647.36, flops:103.53, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.9023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.2451, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2480, 0.4551, 0.1973, 0.0991, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.0806, 0.0262, 0.0156, 0.5859, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.0688, 0.0674, 0.0111, 0.3008, 0.2773, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.0771, 0.0593, 0.1426, 0.3164, 0.1396, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.1108, 0.1094, 0.4629, 0.0398, 0.0234, 0.0332, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.0645, 0.0289, 0.0142, 0.0991, 0.1279, 0.2520, 0.1230, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.0762, 0.1089, 0.1436, 0.0859, 0.0493, 0.0435, 0.2217, 0.0728, 0.0613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0352, 0.0165, 0.0079, 0.0036, 0.1318, 0.2119, 0.1973, 0.0033, 0.1230, 0.1660, 0.1030, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.0869, 0.0933, 0.0223, 0.0106, 0.0284, 0.1128, 0.2451, 0.0491, 0.0840, 0.0635, 0.0874, 0.0000, 0.0000, 0.0000],
        [0.1108, 0.1475, 0.0503, 0.0400, 0.0562, 0.0154, 0.0425, 0.0757, 0.1963, 0.0791, 0.0762, 0.0713, 0.0383, 0.0000, 0.0000],
        [0.0664, 0.0493, 0.0282, 0.0198, 0.0723, 0.0972, 0.1328, 0.0452, 0.1108, 0.0737, 0.0518, 0.0171, 0.0405, 0.1953, 0.0000],
        [0.0728, 0.0371, 0.1069, 0.0815, 0.0221, 0.0176, 0.0574, 0.2344, 0.0234, 0.0280, 0.0405, 0.0520, 0.0889, 0.0366, 0.1011]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0164,  0.0329, -0.0391,  ..., -0.0181,  0.0178,  0.0282],
        [ 0.0416,  0.0202,  0.0071,  ..., -0.0038, -0.0120, -0.0335],
        [ 0.0105,  0.0172,  0.0065,  ...,  0.0034,  0.0016, -0.0081],
        ...,
        [-0.0375,  0.0171,  0.0025,  ...,  0.0207, -0.0015,  0.0052],
        [ 0.0563, -0.0184, -0.0254,  ...,  0.0180, -0.0053, -0.0061],
        [ 0.0054,  0.0032,  0.0335,  ..., -0.0079, -0.0263,  0.0292]], device='cuda:0', requires_grad=True)
K: tensor([-0.5039,  0.4688,  0.3262, -0.9648, -0.5781,  0.2793,  0.6367,  0.0623,  0.1328,  0.1406,  0.9023,  1.0234, -0.3223,  0.7266, -0.1367, -0.6250,  0.0154, -0.3652,  0.0737,  0.4668,  0.0603, -0.1992, -0.6484, -0.1836, -0.1270,  0.2949, -0.3945, -0.8320, -0.5781,  0.7500, -0.5078, -0.5977,
        -0.3809, -0.3926, -0.1689, -0.0889,  0.1289, -0.3809, -0.1719,  0.4297,  0.3945,  0.1670,  0.6289,  0.0103, -0.2061,  0.1270,  0.3457, -0.3965,  1.2891,  0.1367,  0.2598, -0.8633, -0.7227,  0.6250,  0.1611,  0.2949,  0.3516,  0.5391, -1.0078,  0.2012,  0.4043, -0.0757,  0.2734, -1.0625],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0341, -0.0028,  0.0112,  ...,  0.0334,  0.0026, -0.0274],
        [ 0.0201,  0.0349, -0.0274,  ..., -0.0010,  0.0103, -0.0196],
        [ 0.0098, -0.0274,  0.0037,  ...,  0.0492,  0.0025, -0.0331],
        ...,
        [ 0.0244,  0.0185,  0.0027,  ..., -0.0220, -0.0142,  0.0087],
        [-0.0254, -0.0204,  0.0154,  ...,  0.0336, -0.0159,  0.0242],
        [ 0.0315,  0.0062, -0.0133,  ..., -0.0440, -0.0271, -0.0007]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5859,  0.0825, -0.1621,  0.0033, -0.1680, -0.7305,  1.0547,  0.5117,  0.1943,  1.3672, -1.0234,  0.1514, -0.6875, -0.2852, -0.7266, -0.0383, -0.7227, -0.4727,  0.1396,  0.1758,  0.6914,  0.5898, -0.4512, -0.3086, -0.6289, -0.6523, -0.7500, -0.0806, -0.8906, -0.6602, -0.1299, -0.7344,
        -0.3066, -0.2275, -0.4668,  0.1436, -0.5742, -0.2461, -0.6367, -0.4512,  0.0649,  0.4766,  0.5703, -1.0000, -0.8906, -0.2109,  0.3398, -0.0737, -0.3164,  0.6680, -0.2520, -0.0845,  0.7109,  0.9336, -0.0364,  0.0425,  0.4121, -0.2139, -0.3750,  0.3770,  0.5469,  1.0625, -0.6602,  0.2715],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.2188,  1.0391,  1.5547, -1.1172,  0.5547,  0.3750,  1.1484, -1.0156, -0.0131, -0.0225,  1.9141,  1.3203, -0.9688,  1.2656],
        [ 0.0000, -0.0320,  0.6836,  2.4531, -0.2148, -0.4961, -0.6094,  0.6758, -0.7891, -0.8359,  0.3906,  1.6406,  1.4844, -0.6875,  0.5820],
        [ 0.0000,  0.6094, -0.2275, -0.9180, -1.5000, -0.7891,  0.1523,  0.6250, -0.9336,  0.3516, -0.0957, -0.0354, -0.4570, -0.6914,  1.0078],
        [ 0.0000, -1.2812, -2.4062, -2.9219,  0.7031,  0.5039,  1.1641, -1.9062,  1.3125,  0.7773,  0.6992, -2.2500, -1.5391,  1.6641, -0.7461],
        [ 0.0000, -1.3828, -1.4062, -3.2031,  0.0942,  0.0090,  0.6055, -1.0078,  0.9883,  0.8672,  0.1289, -2.4062, -1.9766,  0.9219, -0.9102],
        [ 0.0000, -0.6680, -0.9336, -0.0576,  0.7422, -0.0791, -0.2812, -0.7812,  0.9375,  0.6367,  0.8359, -0.0232, -0.0496,  0.6562,  0.4316],
        [ 0.0000,  0.4199,  0.4062,  1.8516, -0.6055, -1.1328, -0.7852,  0.7109, -0.5508, -1.1172,  0.2012,  1.0547,  0.9336, -1.0312,  0.6641],
        [ 0.0000, -0.5664, -1.3672, -2.0781, -0.1309,  0.1196,  0.8008,  0.0840,  0.4473,  0.2031, -0.1553, -1.9531, -1.2344,  1.1484, -0.0052],
        [ 0.0000, -0.5938, -0.2363,  0.0400, -0.4727, -1.0312, -1.1562,  0.4746, -0.6367, -0.8125,  0.0564, -0.1069,  0.0087, -0.9844, -0.2930],
        [ 0.0000, -0.7578, -1.5000, -2.2969,  1.3203,  1.7969,  1.7266, -2.3750,  1.2500,  1.5547,  1.0781, -1.7188, -1.6328,  1.3984, -0.5820],
        [ 0.0000, -0.3047, -0.2324, -1.6641, -2.4062, -1.4219, -0.0415,  0.7344, -0.8711, -0.3379, -0.6211, -0.2969, -1.1016, -0.7969,  0.1914],
        [ 0.0000,  0.2852, -0.7930, -1.0234, -0.6836, -1.9688, -0.9609, -0.3867,  0.5703, -0.3379, -0.3789, -0.4453, -1.0625,  0.6211,  0.0913],
        [ 0.0000, -0.3027, -0.8594, -1.2188,  0.0835,  0.3789,  0.6914, -0.3887,  0.5078,  0.1040, -0.2539, -1.3594, -0.4980,  1.0703, -0.1094],
        [ 0.0000, -0.6758,  0.3887,  0.1152, -1.1953, -1.4141, -0.2344,  1.1719, -1.1328, -0.9531, -0.5859, -0.3359,  0.2002, -0.6797,  0.3320]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3608],
        [0.3532],
        [0.2083],
        [0.3042],
        [0.3055],
        [0.1051],
        [0.1470],
        [0.1209],
        [0.1238],
        [0.0721],
        [0.1139],
        [0.1194],
        [0.0730],
        [0.0643]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3535,     0.6445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5586,     0.3750,     0.0659,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6445,     0.0272,     0.2793,     0.0474,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5469,     0.1855,     0.1953,     0.0659,     0.0064,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3359,     0.0981,     0.0354,     0.0082,     0.0021,     0.5195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2598,     0.0737,     0.0737,     0.0059,     0.0028,     0.4531,     0.1318,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1250,     0.0309,     0.4727,     0.0796,     0.0226,     0.0913,     0.1133,     0.0649,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3711,     0.2715,     0.0630,     0.0248,     0.0009,     0.1226,     0.0864,     0.0090,     0.0518,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5234,     0.0649,     0.0552,     0.0242,     0.0041,     0.1089,     0.0383,     0.0439,     0.0903,     0.0476,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.0527,     0.0596,     0.0237,     0.0005,     0.0488,     0.0347,     0.0601,     0.0186,     0.0110,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2520,     0.0742,     0.0703,     0.0253,     0.0132,     0.1475,     0.0398,     0.0737,     0.0287,     0.0835,     0.0053,     0.1875,     0.0000,     0.0000,     0.0000],
        [    0.1221,     0.0053,     0.2715,     0.0449,     0.0062,     0.0273,     0.0170,     0.0302,     0.0129,     0.1377,     0.0007,     0.2373,     0.0869,     0.0000,     0.0000],
        [    0.4199,     0.1875,     0.0630,     0.0225,     0.0006,     0.0864,     0.0645,     0.0073,     0.0481,     0.0049,     0.0003,     0.0679,     0.0027,     0.0240,     0.0000],
        [    0.0405,     0.5742,     0.0051,     0.0149,     0.0068,     0.0471,     0.0603,     0.0003,     0.0596,     0.0015,     0.0437,     0.0042,     0.0001,     0.0466,     0.0947]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0262, -0.0157, -0.0443,  ...,  0.0286, -0.0193,  0.0215],
        [ 0.0030, -0.0022, -0.0442,  ...,  0.0757, -0.0313,  0.0054],
        [-0.0075, -0.0467, -0.0774,  ...,  0.0422, -0.0216, -0.0021],
        ...,
        [-0.0210,  0.0021,  0.0165,  ...,  0.0150,  0.0185,  0.0555],
        [-0.0001, -0.0209, -0.0447,  ...,  0.0219,  0.0261,  0.0009],
        [ 0.0131,  0.0390,  0.0016,  ..., -0.0221,  0.0128,  0.0445]], device='cuda:0', requires_grad=True)
K: tensor([ 2.0000,  0.6836, -1.0938, -1.7109, -0.7188,  0.6367, -1.3438, -0.8477,  2.3125, -0.4922, -1.4219, -0.2773, -0.1973, -0.3594,  0.0898, -0.1992, -0.2402, -0.4668, -0.1309,  0.8203,  1.7266,  1.1094, -0.3848, -0.8789, -0.7305,  1.1250,  0.4902, -1.5000, -0.1357,  1.3359, -0.0239, -0.2539,
         0.1084,  0.5430, -0.6836, -0.0227, -0.4453,  2.0156,  1.6016, -0.0771, -1.2812, -0.4258, -0.3887,  0.8164, -2.0000,  0.5547,  0.3027,  0.1289,  0.5430, -0.6953, -0.3594, -0.0369, -0.7539,  0.9922,  0.3066,  1.8438, -0.3125,  0.0439,  1.1094, -0.1924,  0.3438,  0.1602,  0.0075,  0.4219],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0294,  0.0164, -0.0015,  ...,  0.0030,  0.0266,  0.0066],
        [ 0.0207,  0.0196,  0.0476,  ..., -0.0208,  0.0129,  0.0284],
        [ 0.0414,  0.0159,  0.0272,  ..., -0.0106,  0.0307, -0.0015],
        ...,
        [-0.0029, -0.0361, -0.0101,  ...,  0.0123, -0.0502,  0.0113],
        [-0.0071, -0.0199,  0.0234,  ..., -0.0009, -0.0169,  0.0158],
        [-0.0152, -0.0605,  0.0205,  ...,  0.0157,  0.0085,  0.0101]], device='cuda:0', requires_grad=True)
Q: tensor([     2.7344,     -0.4453,     -0.0588,     -0.2539,      1.9375,     -1.2734,     -0.6641,      1.6797,      0.0918,      0.3516,      1.2969,     -1.1328,      0.9414,      0.0005,     -0.5195,     -0.3965,      0.1367,      0.4141,      1.1641,      0.0447,      0.0977,      0.3730,
             0.5273,      0.8672,      2.0000,      0.5898,      1.3359,     -1.6641,      0.9102,     -0.9531,     -0.1338,      2.3906,      0.5938,     -0.9844,     -0.4473,      1.5547,     -1.3203,     -0.7188,      1.1406,     -0.5078,     -0.5000,     -2.0156,     -1.6328,     -1.8750,
             0.8047,      1.5156,      1.1250,      0.8281,      1.0156,     -1.2812,     -0.1768,     -1.1172,     -0.2012,     -0.4277,      1.1250,      1.3672,     -0.6914,      1.2812,     -0.2158,     -1.0391,      0.5898,     -0.9219,      0.7383,      0.9180], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.6016, -2.4062, -2.4062, -3.5000, -0.9961, -0.1406, -3.9688, -0.5508, -2.7656, -2.3594, -2.9688, -4.2188, -0.5547,  1.4766],
        [ 0.0000, -0.4004, -2.1406, -2.1250, -3.3438, -0.7070, -0.3770, -2.3750, -1.7188, -2.5156, -3.2969, -2.9219, -3.1562, -1.8281, -0.7695],
        [ 0.0000, -3.1719, -0.8359, -2.6094, -8.1250, -4.1875, -4.3750, -5.1250, -3.9844, -3.3750, -7.5938, -1.5781, -5.5938, -4.2500,  0.2168],
        [ 0.0000, -1.0781, -1.0312, -2.1250, -4.4375, -0.4941, -0.5273,  0.1807, -1.8594, -2.5781, -5.5625, -0.4297, -0.6133, -2.1406, -0.9766],
        [ 0.0000, -1.2344, -2.2500, -3.7188, -5.0625,  0.4395, -1.8047, -1.0547, -4.4375, -1.5859, -6.9375, -1.3047, -1.8203, -4.7500, -2.7812],
        [ 0.0000, -1.2578, -1.2578, -3.7812, -4.5312,  0.5547, -0.6797, -1.4922, -3.4375, -1.7188, -7.0312, -1.2188, -1.7422, -3.8125, -2.7031],
        [ 0.0000, -1.3984,  1.3281, -0.4512, -1.7109, -0.3164, -0.1001, -0.6562, -1.1250, -0.2158, -4.0000,  0.9883, -0.6055, -1.0625,  1.2656],
        [ 0.0000, -0.3145, -1.7734, -2.7031, -6.0625, -1.1094, -1.4531, -3.7188, -1.9688, -4.3438, -7.0625, -1.5859, -4.8750, -2.6875, -1.8516],
        [ 0.0000, -2.0781, -2.2500, -3.0781, -4.8438, -1.5703, -2.6094, -2.4688, -1.7500, -2.3906, -5.3438, -1.5156, -2.8281, -2.1719, -1.7812],
        [ 0.0000, -2.5781, -2.4531, -3.3750, -7.2812, -2.6406, -3.0000, -2.4375, -3.6094, -4.1250, -8.0625, -2.1094, -3.1562, -4.0938, -2.1094],
        [ 0.0000, -1.2188, -1.2734, -2.2969, -2.9375, -0.5312, -1.8438, -1.2266, -2.1719, -1.1016, -3.8594, -0.2910, -1.0547, -2.2344, -0.4668],
        [ 0.0000, -3.1250,  0.8008, -1.0000, -2.9844, -1.4922, -1.9688, -1.3984, -2.2500,  0.1187, -5.2188,  0.6641, -0.3418, -2.1562,  1.0234],
        [ 0.0000, -0.8086, -1.8984, -2.9375, -6.5625, -1.5859, -1.8750, -4.0625, -2.1719, -4.4688, -7.4062, -1.8281, -5.0625, -2.8594, -1.8828],
        [ 0.0000,  2.6562, -2.0625, -1.0000, -1.7812,  0.1504,  0.3965, -4.8125,  0.3887, -3.3281,  0.0796, -2.2656, -5.6875,  0.1436,  0.8516]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4714],
        [0.3800],
        [0.4040],
        [0.5526],
        [0.5032],
        [0.4697],
        [0.3563],
        [0.5707],
        [0.3976],
        [0.5629],
        [0.2970],
        [0.3306],
        [0.5641],
        [0.4610]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0297, -0.0355, -0.0177,  ...,  0.0158,  0.0147,  0.0487],
        [ 0.0060,  0.0071,  0.0539,  ..., -0.0110,  0.0365,  0.0127],
        [ 0.0100, -0.0229, -0.0452,  ..., -0.0064, -0.0148,  0.0471],
        ...,
        [ 0.0193,  0.0233,  0.0081,  ..., -0.0433,  0.0199, -0.0245],
        [ 0.0057, -0.0287, -0.0370,  ...,  0.0192, -0.0077,  0.0332],
        [ 0.0377,  0.0094,  0.0251,  ..., -0.0022,  0.0088, -0.0182]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4531, -0.7812, -1.9219,  1.9688,  0.9023,  1.1016,  2.7031,  2.4375,  1.2891, -2.6719, -1.9297, -2.4688,  0.8125, -2.8281,  2.9219, -2.0000,  1.9688,  1.2422, -2.2812, -2.6719,  1.6953, -2.5000, -1.5000,  1.2344,  1.3906, -1.9375, -1.4062, -1.4609, -0.3477, -2.5469, -2.5156, -1.7031,
         2.8906, -1.4219,  2.4062, -2.9688, -0.9141,  2.4531, -2.3906,  3.8438,  1.8281,  1.9922, -0.8633, -2.5938, -0.9570, -1.3281, -1.5703,  2.6875,  2.8594, -1.9062, -3.0156,  1.1094,  2.0469, -2.4219,  2.5938,  1.5312,  1.5859, -1.4844,  1.5000,  1.4688,  2.5781,  3.3750, -2.1406,  2.2656],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0751,  0.0262,  0.0269,  ..., -0.0172,  0.0148, -0.0240],
        [-0.0403, -0.0119, -0.0339,  ...,  0.0362, -0.0307,  0.0277],
        [ 0.0223,  0.0024,  0.0298,  ..., -0.0600,  0.0385, -0.0064],
        ...,
        [-0.0266, -0.0006, -0.0082,  ...,  0.0236, -0.0226,  0.0280],
        [ 0.0026, -0.0097,  0.0159,  ..., -0.0431,  0.0389, -0.0145],
        [-0.0398,  0.0081, -0.0362,  ...,  0.0553, -0.0331, -0.0023]], device='cuda:0', requires_grad=True)
Q: tensor([-1.7734, -0.0654,  0.8711, -1.7812, -1.2266, -1.8359, -1.7656, -1.7891, -1.8438,  1.8828,  1.9375,  1.9375, -0.9141,  3.2656, -2.1250,  1.5234, -1.1562, -1.5469,  2.2031,  1.5547, -0.7773,  1.1562,  1.7891, -0.6914, -1.7656,  1.4688,  1.3906,  2.1562,  1.2188,  1.4375,  1.6719,  0.4531,
        -2.4219,  0.8281, -1.1250,  2.1562,  1.6719, -1.8516,  1.1250, -1.2344, -1.7031, -1.8672,  0.4258,  2.0625, -0.1074,  0.9648,  1.4062, -0.8711, -1.6328,  1.5000,  1.5938, -0.9922, -1.2578,  1.4297, -1.7109, -0.3457, -2.3750,  1.3594, -2.0469, -0.8359, -1.7891, -1.7656,  0.9219, -1.3281],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -11.7500, -11.0625, -12.6875, -11.9375, -12.1250, -12.0000, -12.5000, -12.0625,  -9.3750, -11.2500, -12.1250, -14.5625, -12.1875, -13.3750],
        [  0.0000, -14.8125, -15.1250, -16.1250, -14.6250, -15.8750, -15.5625, -17.2500, -15.1875, -13.4375, -13.3125, -16.2500, -19.8750, -15.3125, -18.0000],
        [  0.0000, -19.5000, -19.7500, -22.5000, -19.1250, -20.7500, -20.5000, -22.7500, -19.8750, -17.8750, -18.7500, -21.3750, -26.2500, -20.2500, -24.1250],
        [  0.0000, -13.7500, -13.0000, -14.8750, -14.3750, -14.8750, -14.8750, -15.1875, -13.7500, -12.0625, -13.6875, -14.2500, -18.0000, -14.0000, -15.8750],
        [  0.0000, -17.6250, -17.2500, -19.0000, -18.0000, -19.1250, -18.8750, -20.5000, -17.8750, -15.8750, -16.7500, -19.0000, -23.7500, -18.1250, -20.7500],
        [  0.0000, -14.8125, -14.2500, -16.1250, -15.5625, -16.3750, -16.3750, -17.1250, -15.1250, -13.7500, -14.7500, -16.1250, -20.1250, -15.4375, -17.7500],
        [  0.0000, -20.1250, -20.6250, -21.8750, -20.1250, -21.7500, -21.6250, -25.1250, -19.7500, -19.5000, -18.5000, -22.3750, -28.3750, -20.0000, -24.5000],
        [  0.0000, -15.0625, -14.5625, -16.7500, -15.0625, -16.2500, -15.9375, -16.6250, -15.3750, -12.8750, -14.8750, -16.0000, -19.5000, -15.6875, -17.7500],
        [  0.0000, -13.7500, -14.0625, -15.2500, -13.9375, -14.6875, -14.8750, -17.2500, -13.8125, -13.7500, -12.8125, -15.2500, -19.6250, -14.0625, -16.7500],
        [  0.0000, -14.0625, -12.7500, -15.7500, -14.4375, -14.6250, -14.8750, -15.0625, -14.2500, -12.2500, -14.9375, -14.3750, -17.8750, -14.6875, -15.9375],
        [  0.0000, -17.8750, -17.6250, -19.3750, -17.7500, -19.2500, -18.7500, -20.3750, -18.2500, -15.8125, -16.5000, -19.3750, -23.3750, -18.3750, -21.3750],
        [  0.0000, -23.1250, -23.3750, -25.5000, -23.2500, -24.8750, -24.8750, -28.3750, -22.7500, -22.3750, -22.0000, -25.3750, -32.7500, -23.2500, -28.0000],
        [  0.0000, -15.0625, -14.3750, -16.8750, -15.1250, -16.1250, -15.8750, -16.5000, -15.3125, -12.8750, -15.0000, -15.8750, -19.3750, -15.6250, -17.5000],
        [  0.0000, -19.5000, -20.0000, -21.6250, -19.2500, -21.1250, -20.5000, -23.1250, -19.6250, -18.0000, -17.8750, -21.6250, -26.5000, -19.7500, -24.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9002],
        [0.8985],
        [0.9912],
        [0.8297],
        [0.9294],
        [0.8765],
        [0.9759],
        [0.8549],
        [0.9486],
        [0.8152],
        [0.8779],
        [0.9941],
        [0.8561],
        [0.9492]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1396,     0.8594,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0190,     0.4531,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0162,     0.1387,     0.5703,     0.2754,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0315,     0.3301,     0.3047,     0.1846,     0.1494,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.0498,     0.0403,     0.0879,     0.0244,     0.7969,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.0259,     0.0238,     0.0403,     0.0154,     0.8047,     0.0840,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0059,     0.0299,     0.0352,     0.0583,     0.0051,     0.4355,     0.0737,     0.3555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0043,     0.0036,     0.0032,     0.0029,     0.4570,     0.0171,     0.4980,     0.0132,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.0087,     0.0086,     0.0171,     0.0074,     0.1025,     0.0349,     0.4023,     0.0630,     0.3535,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0031,     0.0026,     0.0025,     0.0018,     0.0981,     0.0408,     0.1807,     0.0102,     0.6172,     0.0417,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0033,     0.0019,     0.0024,     0.0017,     0.0080,     0.0179,     0.0845,     0.0378,     0.2168,     0.1621,     0.4629,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0022,     0.0017,     0.0031,     0.0003,     0.0330,     0.0037,     0.0254,     0.0055,     0.1299,     0.0261,     0.3398,     0.4297,     0.0000,     0.0000],
        [    0.0001,     0.0003,     0.0002,     0.0002,     0.0001,     0.0177,     0.0007,     0.0200,     0.0006,     0.0251,     0.0035,     0.0322,     0.8828,     0.0173,     0.0000],
        [    0.0003,     0.0008,     0.0006,     0.0004,     0.0006,     0.0044,     0.0041,     0.0155,     0.0061,     0.0356,     0.0201,     0.0825,     0.3574,     0.1216,     0.3496]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0137,  0.0224,  0.0494,  ..., -0.0208,  0.0187, -0.0246],
        [-0.0353, -0.0289,  0.0252,  ..., -0.0478, -0.0413,  0.0257],
        [-0.0422, -0.0450,  0.0419,  ..., -0.0154, -0.0254,  0.0072],
        ...,
        [ 0.0325, -0.0236, -0.0229,  ..., -0.0194, -0.0324,  0.0007],
        [ 0.0186,  0.0617, -0.0040,  ...,  0.0690, -0.0249, -0.0005],
        [ 0.0082,  0.0049,  0.0037,  ..., -0.0005,  0.0333, -0.0111]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1904, -1.4766, -1.1094, -0.3633, -0.4766, -0.0981,  0.3555,  1.9609,  0.8242,  1.0781,  0.5703, -1.2578,  0.5195,  0.8672,  0.5234,  1.2500,  2.0781, -1.0078,  0.4766, -1.8984,  0.3164, -2.1250,  0.0742,  1.7578, -2.9062,  0.0150,  0.0903,  0.1118, -1.0625,  0.5156, -2.0625,  0.7500,
         0.2656, -1.8594, -1.2891, -1.6719,  1.0703,  1.9844, -0.2256,  1.1875,  2.1406, -0.0903, -1.6641,  1.3594, -0.5039, -0.8047,  0.2617,  0.1758, -0.4551, -0.0186,  0.4375, -1.8906,  1.8672, -0.2988, -0.6562, -2.1406, -0.1826, -1.2891,  1.3672,  0.7148, -1.0703, -0.2480, -1.0703,  1.4375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0153,  0.0307, -0.0565,  ..., -0.0128, -0.0405, -0.0030],
        [-0.0236,  0.0183,  0.0078,  ..., -0.0120,  0.0009, -0.0344],
        [ 0.0175,  0.0408, -0.0277,  ...,  0.0191, -0.0340,  0.0104],
        ...,
        [-0.0044, -0.0194,  0.0048,  ..., -0.0294,  0.0344,  0.0020],
        [ 0.0190, -0.0123, -0.0052,  ..., -0.0090,  0.0307,  0.0139],
        [ 0.0428,  0.0125,  0.0135,  ..., -0.0323, -0.0278,  0.0353]], device='cuda:0', requires_grad=True)
Q: tensor([-2.2969, -0.1318, -2.2031, -1.7266,  0.9805, -3.6250, -0.8477, -0.4648,  2.3281, -3.1250,  5.5000, -2.4688,  1.5078,  2.6875,  4.8438, -3.5469,  2.8438,  0.5117,  4.5000, -2.6094,  1.0000, -3.0312,  1.1094,  0.5508, -4.1250,  0.4414, -0.8438,  3.1250,  1.1953, -1.1641, -2.9688, -0.3594,
         2.7500,  1.6172,  0.5586, -1.6406, -2.5781, -0.6914,  1.8750,  0.7539,  2.5625,  0.9023,  4.9062,  0.1216, -4.4375, -0.6992,  4.7500, -2.8438, -2.2188,  1.1641,  3.4062, -2.0156,  2.6406, -0.1201,  4.2812, -3.3750,  1.2344,  0.2656,  0.8438, -0.9766,  0.1865,  1.5234, -0.6094, -0.1436],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.8125,  2.5156,  1.8359,  1.7656,  5.1562,  3.6875,  4.6562,  3.1250,  5.0000,  4.1250,  5.6875,  6.7812,  5.0000,  7.0938],
        [ 0.0000,  3.1719,  3.3125,  3.8750,  3.2812,  5.3125,  5.7188,  5.9375,  6.3438,  7.3750,  7.8125,  9.0625,  8.5625,  9.0000, 10.5000],
        [ 0.0000,  2.1406,  3.5625,  2.8281,  2.9062,  5.4375,  4.9688,  6.5000,  5.5312,  7.6875,  7.0000,  8.8125,  9.6250,  8.5000,  9.7500],
        [ 0.0000,  2.3594,  2.2656,  1.7734,  1.5547,  6.5938,  4.0312,  6.5938,  4.1875,  7.3750,  5.8438,  8.1250, 10.0000,  7.4062, 10.1250],
        [ 0.0000,  3.1094,  2.8906,  3.6719,  2.3906,  5.8750,  4.7812,  6.9688,  5.5312,  8.1250,  6.6562,  9.2500, 10.8750,  9.1875, 11.8750],
        [ 0.0000,  1.7734,  1.6875,  2.2188,  1.2578,  5.2188,  2.9531,  4.6875,  3.6875,  6.1875,  5.1250,  7.6875,  7.9375,  6.8125,  9.8125],
        [ 0.0000,  1.6328,  1.7969,  2.2969, -0.1436,  4.3125,  2.5312,  4.0938,  3.0000,  5.9688,  4.3438,  7.1875,  7.0938,  6.1250,  9.5625],
        [ 0.0000,  1.6641,  1.4766,  1.3516,  1.2656,  6.3125,  3.0312,  6.4062,  2.7812,  6.6875,  4.7188,  6.9375, 10.2500,  6.2500,  9.8125],
        [ 0.0000,  1.4531,  1.4453,  2.1250,  1.2969,  3.9219,  2.8438,  5.2812,  3.4375,  5.1562,  4.4688,  6.9688,  8.6875,  6.6562,  9.1250],
        [ 0.0000,  0.7344,  0.5664,  0.5469,  0.1904,  4.1875,  3.3125,  4.8125,  1.9375,  6.0312,  3.3438,  5.7188,  7.9688,  5.0625,  8.6250],
        [ 0.0000,  1.7578,  1.2266,  1.4219,  1.0625,  2.6406,  3.4531,  5.0000,  4.1875,  5.9375,  5.6562,  6.6875,  8.2500,  7.5312,  9.2500],
        [ 0.0000,  1.1875,  0.9805,  1.5703, -0.7031,  3.9219,  1.7188,  3.6562,  2.1250,  5.2812,  3.6875,  6.2500,  6.4688,  5.2812,  8.7500],
        [ 0.0000,  1.0781,  0.5312,  0.4648,  0.2988,  5.0938,  1.8203,  5.2188,  1.6484,  5.4375,  3.4844,  5.6875,  9.0000,  5.0625,  8.7500],
        [ 0.0000,  1.0312,  0.7344,  0.3633,  0.7734,  2.7031,  2.6094,  3.9531,  3.0156,  4.7812,  4.2188,  5.6250,  7.0938,  6.0000,  7.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2645],
        [0.1168],
        [0.0646],
        [0.0408],
        [0.0258],
        [0.0246],
        [0.0208],
        [0.0153],
        [0.0087],
        [0.0075],
        [0.0046],
        [0.0091],
        [0.0082],
        [0.0032]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.8125, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0270, 0.3535, 0.6211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0017, 0.3477, 0.0791, 0.5742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0388, 0.5938, 0.1245, 0.0693, 0.1748, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0559, 0.2930, 0.0957, 0.0825, 0.0383, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0029, 0.5938, 0.0659, 0.0400, 0.0491, 0.1338, 0.1152, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0032, 0.5312, 0.0111, 0.0513, 0.0703, 0.0908, 0.1436, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0464, 0.3887, 0.0294, 0.0547, 0.0386, 0.0854, 0.2598, 0.0219, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0128, 0.3262, 0.0236, 0.0544, 0.0339, 0.0732, 0.1128, 0.0206, 0.0864, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.1050, 0.0143, 0.0182, 0.0031, 0.0221, 0.0791, 0.0067, 0.0178, 0.1680, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0259, 0.0640, 0.0222, 0.1016, 0.0640, 0.0537, 0.0273, 0.0113, 0.1216, 0.0903, 0.3555, 0.0625, 0.0000, 0.0000, 0.0000],
        [0.0187, 0.1377, 0.0036, 0.0211, 0.0289, 0.0388, 0.0796, 0.0097, 0.1299, 0.0786, 0.1475, 0.0221, 0.2852, 0.0000, 0.0000],
        [0.0135, 0.1377, 0.0096, 0.0156, 0.0133, 0.0242, 0.0874, 0.0061, 0.0308, 0.1138, 0.1807, 0.0417, 0.2373, 0.0879, 0.0000],
        [0.0085, 0.2793, 0.1211, 0.0500, 0.0908, 0.0698, 0.1040, 0.0176, 0.0065, 0.0422, 0.0127, 0.0266, 0.0280, 0.0092, 0.1328]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0040,  0.0038,  0.0121,  ..., -0.0223,  0.0175,  0.0202],
        [ 0.0252,  0.0026, -0.0173,  ..., -0.0126, -0.0039, -0.0069],
        [-0.0150, -0.0353,  0.0010,  ...,  0.0280, -0.0309, -0.0046],
        ...,
        [-0.0028,  0.0131,  0.0202,  ..., -0.0251, -0.0436,  0.0093],
        [-0.0307, -0.0243, -0.0227,  ..., -0.0098, -0.0271,  0.0017],
        [ 0.0029,  0.0135,  0.0188,  ...,  0.0196,  0.0034,  0.0258]], device='cuda:0', requires_grad=True)
K: tensor([-0.7852, -0.6992,  0.2207, -0.4746, -0.2158, -0.7031, -1.0469,  0.2754, -2.4062,  0.6641, -1.0234, -1.4922,  0.2656,  1.3203,  0.2871,  0.7070,  1.2578,  0.1895,  2.6719,  1.0625, -0.1973, -1.4922,  1.2578,  0.6680, -0.8750,  0.9023, -0.1650,  0.5469,  1.5078, -1.4609,  0.2129, -1.4688,
         0.2715,  0.7031, -0.1016,  1.7656, -0.4297, -0.0249,  0.4375, -0.7578,  0.2793, -0.0659, -0.9961,  0.8242, -0.9805,  0.7266, -1.9688, -1.7266, -0.1309,  0.3379,  1.1953, -0.7539, -0.9609,  0.8906,  0.7383, -0.8164,  0.0840, -1.6562, -1.3125, -1.5000,  1.0703, -0.6055,  0.7227,  0.9258],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0388,  0.0343, -0.0308,  ...,  0.0117,  0.0035,  0.0182],
        [-0.0166,  0.0069, -0.0039,  ..., -0.0291, -0.0060, -0.0402],
        [-0.0141, -0.0110, -0.0104,  ..., -0.0200,  0.0028, -0.0011],
        ...,
        [ 0.0102,  0.0026, -0.0319,  ..., -0.0155,  0.0235,  0.0190],
        [-0.0088, -0.0145, -0.0400,  ...,  0.0042, -0.0099,  0.0358],
        [-0.0006,  0.0217, -0.0036,  ..., -0.0223, -0.0130, -0.0133]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4805, -0.8672, -0.6172, -2.3281, -0.6562, -2.3906, -0.1367,  2.1094, -0.0471, -1.2188, -1.0312,  0.7266,  0.3262,  1.0078, -0.1069, -2.7344,  1.0469, -2.1875,  0.7656, -0.7734,  0.3223, -1.6406, -1.2188,  1.3438,  0.2383,  0.6523,  1.1797,  1.4219,  1.1562, -0.0957, -0.5703, -0.1484,
         0.0260, -1.5469, -1.2734, -1.1406, -0.6953, -1.0078,  1.8047,  0.7656,  1.2422,  0.1699, -1.6875,  0.9062, -2.2031, -0.0457, -0.2324,  0.1611,  1.5078, -1.3750,  0.0292,  0.8203, -1.4531, -1.0859,  0.3496, -0.6133, -0.5781, -2.6719,  0.3730, -1.2500,  1.3047, -1.0156,  0.7031,  1.1016],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.4766,  0.8477,  0.1270,  0.0977,  0.7383, -0.4316, -1.2578, -2.1250, -0.1099, -1.3750, -0.9062, -0.0610, -2.0469, -0.7344],
        [ 0.0000,  2.5781,  3.1406,  4.6562,  4.5625,  2.9062,  0.7852,  1.9688,  2.7969,  1.7422,  2.3594,  0.8203,  4.3438,  1.8359,  1.1328],
        [ 0.0000,  5.3438,  3.8594,  5.8438,  5.7188,  5.1250,  4.1875,  4.2812,  3.8750,  4.3125,  3.3906,  1.6875,  5.0000,  2.8906,  3.5156],
        [ 0.0000,  2.7188,  1.1641,  0.5742,  1.5000,  2.5938,  0.5859,  0.1445, -0.4844,  1.5625,  0.0869,  0.5000,  1.4531, -0.3281,  1.0547],
        [ 0.0000,  1.6562,  0.5352,  0.3867, -0.3789,  2.0469,  0.7305, -0.2090, -0.9883,  1.7109,  0.2773, -0.2002,  0.9688, -1.4375,  0.4160],
        [ 0.0000,  5.3125,  3.1250,  2.6250,  2.8281,  3.8438,  3.6875,  4.3750,  2.3594,  2.8750,  1.9844,  2.0625,  1.7031,  1.2891,  3.2031],
        [ 0.0000,  5.0938,  1.2344,  2.7656,  3.0781,  3.3281,  3.7969,  3.4062,  5.0312,  3.9375,  3.5781,  1.8516,  4.0938,  4.6250,  4.4688],
        [ 0.0000,  2.1250, -0.4551,  0.1660, -0.1846,  0.6133,  1.7266, -0.7500,  0.4863,  2.1719,  2.0312,  0.7266,  2.7500,  0.8945,  2.2812],
        [ 0.0000,  3.2344,  0.6094,  1.4453,  0.9688,  1.7422,  2.1719,  0.4727,  1.9062,  2.9844,  5.2500,  2.7812,  3.9531,  2.0625,  2.5156],
        [ 0.0000,  0.5156, -1.4766, -1.2344, -3.0000, -1.0469,  0.2275, -2.2500, -1.2578,  0.9844,  2.0781,  1.0000,  1.9766, -0.2637,  1.2109],
        [ 0.0000,  0.9062, -0.1553,  1.3672,  0.9023,  0.7266,  0.0554, -0.8320,  1.5469,  1.2500,  2.6250,  0.8789,  5.1250,  1.8984,  1.1484],
        [ 0.0000,  2.0000, -1.6562,  0.1230,  0.4395,  0.7344,  1.4531, -0.6523,  1.9375,  1.4375,  2.0781,  0.1729,  2.7188,  3.2031,  3.2188],
        [ 0.0000,  2.3281, -0.3398,  0.1445, -0.0188,  0.5742,  1.8672, -0.8047,  0.8203,  2.1250,  2.5938,  1.1250,  2.8594,  1.8672,  3.0469],
        [ 0.0000,  3.4844,  2.6562,  1.7656,  2.3594,  2.1094,  2.5000,  0.7188, -0.2793,  1.5938,  0.3945,  1.1406,  1.1875,  0.0708,  2.7344]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1651],
        [0.0224],
        [0.0099],
        [0.0355],
        [0.0224],
        [0.0141],
        [0.0060],
        [0.0757],
        [0.0146],
        [0.1018],
        [0.0152],
        [0.0760],
        [0.0401],
        [0.0132]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1533 a:0.1260 and:0.2109 and:0.0947atoes:0.0566,:0.4922 a:0.0479
:0.0859)


------
		( a:0.1260 and:0.2109 and:0.0947atoes:0.0566,:0.4922 a:0.0479
:0.0859-:0.0962)
- The most common name for the word "The word "The word"
@ 3050 train 4.7734 , allloss: 4.7752, dt: 1709.68ms, fracRes: 0.3407, norm(attn): 0.2012, norm(output): 0.4277, norm(x): 0.4001, norm(y): 1.0119, norm:2.1768, tok/sec: 76664.60, flops:80.46, batch-reuse:1
@ 3051 train 4.7010 , allloss: 4.7024, dt: 1540.51ms, fracRes: 0.3406, norm(attn): 0.2002, norm(output): 0.4258, norm(x): 0.3973, norm(y): 1.0120, norm:2.1039, tok/sec: 85083.61, flops:89.30, batch-reuse:1
@ 3052 train 4.6604 , allloss: 4.6624, dt: 1331.56ms, fracRes: 0.3404, norm(attn): 0.1982, norm(output): 0.4219, norm(x): 0.3972, norm(y): 1.0120, norm:1.9542, tok/sec: 98434.91, flops:103.31, batch-reuse:1
@ 3053 train 4.6511 , allloss: 4.6526, dt: 1303.29ms, fracRes: 0.3401, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.4027, norm(y): 1.0119, norm:1.9413, tok/sec: 100570.40, flops:105.55, batch-reuse:1
@ 3054 train 4.6851 , allloss: 4.6868, dt: 1292.69ms, fracRes: 0.3400, norm(attn): 0.1973, norm(output): 0.4238, norm(x): 0.3986, norm(y): 1.0120, norm:2.1405, tok/sec: 101394.84, flops:106.42, batch-reuse:1
@ 3055 train 4.6431 , allloss: 4.6451, dt: 1312.01ms, fracRes: 0.3410, norm(attn): 0.1953, norm(output): 0.4258, norm(x): 0.3987, norm(y): 1.0120, norm:2.1632, tok/sec: 99901.42, flops:104.85, batch-reuse:1
@ 3056 train 4.6920 , allloss: 4.6944, dt: 1285.42ms, fracRes: 0.3402, norm(attn): 0.1982, norm(output): 0.4297, norm(x): 0.4026, norm(y): 1.0120, norm:2.1634, tok/sec: 101968.37, flops:107.02, batch-reuse:1
@ 3057 train 4.6609 , allloss: 4.6624, dt: 1271.60ms, fracRes: 0.3419, norm(attn): 0.1953, norm(output): 0.4297, norm(x): 0.4018, norm(y): 1.0120, norm:1.8927, tok/sec: 103076.75, flops:108.18, batch-reuse:1
@ 3058 train 4.6889 , allloss: 4.6902, dt: 1267.68ms, fracRes: 0.3412, norm(attn): 0.1982, norm(output): 0.4258, norm(x): 0.4004, norm(y): 1.0120, norm:2.1554, tok/sec: 103394.87, flops:108.51, batch-reuse:1
@ 3059 train 4.6346 , allloss: 4.6363, dt: 1269.07ms, fracRes: 0.3413, norm(attn): 0.1992, norm(output): 0.4238, norm(x): 0.3993, norm(y): 1.0120, norm:1.6680, tok/sec: 103281.59, flops:108.40, batch-reuse:1
@ 3060 train 4.8265 , allloss: 4.8289, dt: 1320.11ms, fracRes: 0.3439, norm(attn): 0.1953, norm(output): 0.4297, norm(x): 0.3986, norm(y): 1.0120, norm:2.1721, tok/sec: 99288.85, flops:104.21, batch-reuse:1
@ 3061 train 4.5583 , allloss: 4.5607, dt: 1315.18ms, fracRes: 0.3469, norm(attn): 0.1982, norm(output): 0.4258, norm(x): 0.3982, norm(y): 1.0121, norm:3.6125, tok/sec: 99661.19, flops:104.60, batch-reuse:1
@ 3062 train 4.6107 , allloss: 4.6129, dt: 1336.14ms, fracRes: 0.3421, norm(attn): 0.2012, norm(output): 0.4238, norm(x): 0.3995, norm(y): 1.0120, norm:2.9996, tok/sec: 98097.63, flops:102.96, batch-reuse:1
@ 3063 train 4.6346 , allloss: 4.6362, dt: 1309.94ms, fracRes: 0.3408, norm(attn): 0.2031, norm(output): 0.4258, norm(x): 0.3998, norm(y): 1.0119, norm:2.2203, tok/sec: 100059.88, flops:105.01, batch-reuse:1
@ 3064 train 4.5894 , allloss: 4.5909, dt: 1311.12ms, fracRes: 0.3439, norm(attn): 0.1992, norm(output): 0.4238, norm(x): 0.3983, norm(y): 1.0122, norm:2.5075, tok/sec: 99969.74, flops:104.92, batch-reuse:1
@ 3065 train 4.7158 , allloss: 4.7222, dt: 1287.94ms, fracRes: 0.3419, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.4022, norm(y): 1.0121, norm:2.4058, tok/sec: 101768.71, flops:106.81, batch-reuse:1
@ 3066 train 4.7039 , allloss: 4.7124, dt: 1291.67ms, fracRes: 0.3428, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.4022, norm(y): 1.0121, norm:2.0808, tok/sec: 101475.15, flops:106.50, batch-reuse:1
@ 3067 train 4.7360 , allloss: 4.7378, dt: 1290.02ms, fracRes: 0.3428, norm(attn): 0.1943, norm(output): 0.4297, norm(x): 0.4000, norm(y): 1.0121, norm:2.0949, tok/sec: 101604.98, flops:106.64, batch-reuse:1
@ 3068 train 4.6385 , allloss: 4.6417, dt: 1288.69ms, fracRes: 0.3437, norm(attn): 0.1934, norm(output): 0.4297, norm(x): 0.3999, norm(y): 1.0121, norm:2.2815, tok/sec: 101709.74, flops:106.75, batch-reuse:1
@ 3069 train 4.6615 , allloss: 4.6627, dt: 1327.70ms, fracRes: 0.3434, norm(attn): 0.1934, norm(output): 0.4297, norm(x): 0.4001, norm(y): 1.0120, norm:2.1589, tok/sec: 98721.00, flops:103.61, batch-reuse:1
@ 3070 train 4.6385 , allloss: 4.6405, dt: 1311.06ms, fracRes: 0.3438, norm(attn): 0.1934, norm(output): 0.4316, norm(x): 0.4020, norm(y): 1.0120, norm:2.1643, tok/sec: 99973.83, flops:104.92, batch-reuse:1
@ 3071 train 4.6497 , allloss: 4.6542, dt: 1271.62ms, fracRes: 0.3435, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.4012, norm(y): 1.0120, norm:2.1054, tok/sec: 103074.53, flops:108.18, batch-reuse:1
@ 3072 train 4.6326 , allloss: 4.6336, dt: 1291.85ms, fracRes: 0.3448, norm(attn): 0.1914, norm(output): 0.4277, norm(x): 0.3989, norm(y): 1.0121, norm:2.1846, tok/sec: 101460.89, flops:106.49, batch-reuse:1
@ 3073 train 4.5838 , allloss: 4.5856, dt: 1289.79ms, fracRes: 0.3429, norm(attn): 0.1953, norm(output): 0.4297, norm(x): 0.3985, norm(y): 1.0121, norm:1.8374, tok/sec: 101622.62, flops:106.65, batch-reuse:1
@ 3074 train 4.5630 , allloss: 4.5649, dt: 1285.44ms, fracRes: 0.3411, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.4006, norm(y): 1.0121, norm:2.2501, tok/sec: 101966.61, flops:107.02, batch-reuse:1
@ 3075 train 4.6554 , allloss: 4.6569, dt: 1269.35ms, fracRes: 0.3390, norm(attn): 0.2012, norm(output): 0.4297, norm(x): 0.3988, norm(y): 1.0120, norm:1.9148, tok/sec: 103259.18, flops:108.37, batch-reuse:1
@ 3076 train 4.5866 , allloss: 4.5894, dt: 1271.88ms, fracRes: 0.3377, norm(attn): 0.2031, norm(output): 0.4297, norm(x): 0.3991, norm(y): 1.0119, norm:2.2164, tok/sec: 103054.12, flops:108.16, batch-reuse:1
@ 3077 train 4.6050 , allloss: 4.6072, dt: 1275.85ms, fracRes: 0.3394, norm(attn): 0.2031, norm(output): 0.4258, norm(x): 0.3987, norm(y): 1.0120, norm:2.0885, tok/sec: 102733.32, flops:107.82, batch-reuse:1
@ 3078 train 4.5958 , allloss: 4.5988, dt: 1301.79ms, fracRes: 0.3424, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.4020, norm(y): 1.0121, norm:2.0579, tok/sec: 100685.78, flops:105.67, batch-reuse:1
@ 3079 train 4.5607 , allloss: 4.5618, dt: 1296.99ms, fracRes: 0.3410, norm(attn): 0.2012, norm(output): 0.4258, norm(x): 0.4011, norm(y): 1.0120, norm:2.0374, tok/sec: 101058.43, flops:106.06, batch-reuse:1
@ 3080 train 4.6890 , allloss: 4.6908, dt: 1306.58ms, fracRes: 0.3428, norm(attn): 0.1992, norm(output): 0.4297, norm(x): 0.4025, norm(y): 1.0120, norm:2.0432, tok/sec: 100316.49, flops:105.28, batch-reuse:1
@ 3081 train 4.6603 , allloss: 4.6626, dt: 1290.51ms, fracRes: 0.3424, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.4034, norm(y): 1.0120, norm:1.6714, tok/sec: 101566.32, flops:106.60, batch-reuse:1
@ 3082 train 4.6739 , allloss: 4.6757, dt: 1303.39ms, fracRes: 0.3448, norm(attn): 0.1973, norm(output): 0.4277, norm(x): 0.4021, norm(y): 1.0122, norm:2.2056, tok/sec: 100562.76, flops:105.54, batch-reuse:1
@ 3083 train 4.5606 , allloss: 4.5630, dt: 1277.94ms, fracRes: 0.3447, norm(attn): 0.1992, norm(output): 0.4316, norm(x): 0.4034, norm(y): 1.0121, norm:2.0161, tok/sec: 102565.14, flops:107.64, batch-reuse:1
@ 3084 train 4.5673 , allloss: 4.5687, dt: 1278.02ms, fracRes: 0.3453, norm(attn): 0.1992, norm(output): 0.4258, norm(x): 0.4018, norm(y): 1.0121, norm:1.8857, tok/sec: 102558.90, flops:107.64, batch-reuse:1
@ 3085 train 4.6877 , allloss: 4.6903, dt: 1273.62ms, fracRes: 0.3456, norm(attn): 0.1973, norm(output): 0.4258, norm(x): 0.4012, norm(y): 1.0120, norm:2.2987, tok/sec: 102913.04, flops:108.01, batch-reuse:1
@ 3086 train 4.5422 , allloss: 4.5457, dt: 1275.04ms, fracRes: 0.3417, norm(attn): 0.2041, norm(output): 0.4277, norm(x): 0.4037, norm(y): 1.0119, norm:1.9407, tok/sec: 102798.54, flops:107.89, batch-reuse:1
@ 3087 train 4.6205 , allloss: 4.6229, dt: 1275.94ms, fracRes: 0.3420, norm(attn): 0.2021, norm(output): 0.4258, norm(x): 0.3996, norm(y): 1.0121, norm:1.9633, tok/sec: 102725.93, flops:107.81, batch-reuse:1
@ 3088 train 4.6154 , allloss: 4.6177, dt: 1278.47ms, fracRes: 0.3413, norm(attn): 0.2012, norm(output): 0.4258, norm(x): 0.3990, norm(y): 1.0121, norm:2.0609, tok/sec: 102522.83, flops:107.60, batch-reuse:1
@ 3089 train 4.6290 , allloss: 4.6310, dt: 1289.97ms, fracRes: 0.3399, norm(attn): 0.2041, norm(output): 0.4297, norm(x): 0.4023, norm(y): 1.0120, norm:1.7641, tok/sec: 101608.21, flops:106.64, batch-reuse:1
@ 3090 train 4.5474 , allloss: 4.5492, dt: 1269.50ms, fracRes: 0.3421, norm(attn): 0.2021, norm(output): 0.4297, norm(x): 0.3995, norm(y): 1.0121, norm:1.9574, tok/sec: 103247.14, flops:108.36, batch-reuse:1
@ 3091 train 4.7442 , allloss: 4.7471, dt: 1276.49ms, fracRes: 0.3447, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.4010, norm(y): 1.0121, norm:2.1662, tok/sec: 102681.19, flops:107.77, batch-reuse:1
@ 3092 train 4.6027 , allloss: 4.6052, dt: 1275.65ms, fracRes: 0.3434, norm(attn): 0.1982, norm(output): 0.4297, norm(x): 0.4011, norm(y): 1.0120, norm:1.7683, tok/sec: 102748.97, flops:107.84, batch-reuse:1
@ 3093 train 4.6402 , allloss: 4.6421, dt: 1270.21ms, fracRes: 0.3434, norm(attn): 0.1963, norm(output): 0.4336, norm(x): 0.4017, norm(y): 1.0121, norm:2.0598, tok/sec: 103189.20, flops:108.30, batch-reuse:1
@ 3094 train 4.6029 , allloss: 4.6048, dt: 1276.34ms, fracRes: 0.3434, norm(attn): 0.1973, norm(output): 0.4277, norm(x): 0.3995, norm(y): 1.0121, norm:1.9702, tok/sec: 102693.43, flops:107.78, batch-reuse:1
@ 3095 train 4.6299 , allloss: 4.6319, dt: 1270.62ms, fracRes: 0.3429, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.3986, norm(y): 1.0120, norm:2.2856, tok/sec: 103155.58, flops:108.26, batch-reuse:1
@ 3096 train 4.6903 , allloss: 4.6917, dt: 1278.39ms, fracRes: 0.3441, norm(attn): 0.1973, norm(output): 0.4336, norm(x): 0.4038, norm(y): 1.0120, norm:2.0851, tok/sec: 102528.68, flops:107.61, batch-reuse:1
@ 3097 train 4.6454 , allloss: 4.6464, dt: 1264.86ms, fracRes: 0.3457, norm(attn): 0.1992, norm(output): 0.4336, norm(x): 0.4023, norm(y): 1.0120, norm:2.0951, tok/sec: 103625.72, flops:108.76, batch-reuse:1
@ 3098 train 4.6137 , allloss: 4.6152, dt: 1271.08ms, fracRes: 0.3440, norm(attn): 0.1973, norm(output): 0.4258, norm(x): 0.3981, norm(y): 1.0120, norm:1.9212, tok/sec: 103118.35, flops:108.22, batch-reuse:1
@ 3099 train 4.6480 , allloss: 4.6509, dt: 1285.94ms, fracRes: 0.3425, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.4004, norm(y): 1.0120, norm:1.6235, tok/sec: 101927.08, flops:106.97, batch-reuse:1
@ 3100 train 4.5286 , allloss: 4.5300, dt: 1278.39ms, fracRes: 0.3425, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.4017, norm(y): 1.0121, norm:1.8379, tok/sec: 102528.76, flops:107.61, batch-reuse:1
@ 3101 train 4.5590 , allloss: 4.5620, dt: 1279.85ms, fracRes: 0.3415, norm(attn): 0.2021, norm(output): 0.4336, norm(x): 0.4040, norm(y): 1.0121, norm:2.0345, tok/sec: 102412.33, flops:107.48, batch-reuse:1
@ 3102 train 4.6246 , allloss: 4.6260, dt: 1298.16ms, fracRes: 0.3434, norm(attn): 0.2012, norm(output): 0.4297, norm(x): 0.4012, norm(y): 1.0120, norm:1.8611, tok/sec: 100967.91, flops:105.97, batch-reuse:1
@ 3103 train 4.6201 , allloss: 4.6220, dt: 1283.89ms, fracRes: 0.3426, norm(attn): 0.2012, norm(output): 0.4316, norm(x): 0.4021, norm(y): 1.0121, norm:2.0036, tok/sec: 102089.46, flops:107.14, batch-reuse:1
@ 3104 train 4.5028 , allloss: 4.5042, dt: 1292.70ms, fracRes: 0.3417, norm(attn): 0.2012, norm(output): 0.4277, norm(x): 0.4016, norm(y): 1.0121, norm:2.0111, tok/sec: 101394.15, flops:106.42, batch-reuse:1
@ 3105 train 4.6776 , allloss: 4.6796, dt: 1296.50ms, fracRes: 0.3448, norm(attn): 0.2021, norm(output): 0.4297, norm(x): 0.4030, norm(y): 1.0121, norm:2.0848, tok/sec: 101097.01, flops:106.10, batch-reuse:1
@ 3106 train 4.5592 , allloss: 4.5628, dt: 1307.34ms, fracRes: 0.3446, norm(attn): 0.2012, norm(output): 0.4316, norm(x): 0.4022, norm(y): 1.0120, norm:1.7472, tok/sec: 100258.79, flops:105.22, batch-reuse:1
@ 3107 train 4.5393 , allloss: 4.5416, dt: 1289.89ms, fracRes: 0.3456, norm(attn): 0.2012, norm(output): 0.4297, norm(x): 0.4009, norm(y): 1.0121, norm:2.0044, tok/sec: 101614.98, flops:106.65, batch-reuse:1
@ 3108 train 4.6230 , allloss: 4.6264, dt: 1318.62ms, fracRes: 0.3460, norm(attn): 0.1992, norm(output): 0.4316, norm(x): 0.4023, norm(y): 1.0121, norm:2.0463, tok/sec: 99400.93, flops:104.32, batch-reuse:1
@ 3109 train 4.5349 , allloss: 4.5371, dt: 1327.75ms, fracRes: 0.3462, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.4002, norm(y): 1.0121, norm:2.1028, tok/sec: 98717.49, flops:103.61, batch-reuse:1
@ 3110 train 4.5480 , allloss: 4.5497, dt: 1281.68ms, fracRes: 0.3457, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.3999, norm(y): 1.0121, norm:1.8416, tok/sec: 102265.88, flops:107.33, batch-reuse:1
@ 3111 train 4.6676 , allloss: 4.6705, dt: 1285.97ms, fracRes: 0.3435, norm(attn): 0.2012, norm(output): 0.4336, norm(x): 0.4027, norm(y): 1.0121, norm:2.3050, tok/sec: 101924.34, flops:106.97, batch-reuse:1
@ 3112 train 4.5003 , allloss: 4.5027, dt: 1321.61ms, fracRes: 0.3430, norm(attn): 0.2021, norm(output): 0.4297, norm(x): 0.3998, norm(y): 1.0121, norm:1.7514, tok/sec: 99176.31, flops:104.09, batch-reuse:1
@ 3113 train 4.5462 , allloss: 4.5505, dt: 1281.18ms, fracRes: 0.3427, norm(attn): 0.2021, norm(output): 0.4297, norm(x): 0.3985, norm(y): 1.0121, norm:1.8535, tok/sec: 102305.68, flops:107.37, batch-reuse:1
@ 3114 train 4.5762 , allloss: 4.5793, dt: 1294.55ms, fracRes: 0.3429, norm(attn): 0.2021, norm(output): 0.4297, norm(x): 0.4007, norm(y): 1.0121, norm:2.0426, tok/sec: 101248.99, flops:106.26, batch-reuse:1
@ 3115 train 4.5265 , allloss: 4.5292, dt: 1321.68ms, fracRes: 0.3417, norm(attn): 0.2012, norm(output): 0.4316, norm(x): 0.4033, norm(y): 1.0121, norm:2.0139, tok/sec: 99170.44, flops:104.08, batch-reuse:1
@ 3116 train 4.5097 , allloss: 4.5123, dt: 1324.83ms, fracRes: 0.3414, norm(attn): 0.2041, norm(output): 0.4336, norm(x): 0.4044, norm(y): 1.0120, norm:1.9215, tok/sec: 98934.97, flops:103.83, batch-reuse:1
@ 3117 train 4.5230 , allloss: 4.5253, dt: 1321.06ms, fracRes: 0.3424, norm(attn): 0.2012, norm(output): 0.4316, norm(x): 0.4062, norm(y): 1.0121, norm:2.1479, tok/sec: 99217.42, flops:104.13, batch-reuse:1
@ 3118 train 4.4763 , allloss: 4.4794, dt: 1321.82ms, fracRes: 0.3426, norm(attn): 0.2002, norm(output): 0.4316, norm(x): 0.4029, norm(y): 1.0121, norm:2.0286, tok/sec: 99160.60, flops:104.07, batch-reuse:1
@ 3119 train 4.7769 , allloss: 4.7798, dt: 1321.89ms, fracRes: 0.3424, norm(attn): 0.2031, norm(output): 0.4297, norm(x): 0.3999, norm(y): 1.0121, norm:1.9434, tok/sec: 99155.13, flops:104.07, batch-reuse:1
@ 3120 train 4.5762 , allloss: 4.5777, dt: 1290.26ms, fracRes: 0.3410, norm(attn): 0.2031, norm(output): 0.4316, norm(x): 0.4026, norm(y): 1.0120, norm:2.0576, tok/sec: 101585.93, flops:106.62, batch-reuse:1
@ 3121 train 4.3426 , allloss: 4.3508, dt: 1303.00ms, fracRes: 0.3425, norm(attn): 0.2012, norm(output): 0.4316, norm(x): 0.4043, norm(y): 1.0121, norm:2.5049, tok/sec: 100592.54, flops:105.57, batch-reuse:1
@ 3122 train 4.4962 , allloss: 4.4994, dt: 1287.08ms, fracRes: 0.3427, norm(attn): 0.1992, norm(output): 0.4355, norm(x): 0.4054, norm(y): 1.0122, norm:2.0831, tok/sec: 101836.56, flops:106.88, batch-reuse:1
@ 3123 train 4.6814 , allloss: 4.6855, dt: 1289.11ms, fracRes: 0.3435, norm(attn): 0.1982, norm(output): 0.4297, norm(x): 0.4030, norm(y): 1.0121, norm:2.5077, tok/sec: 101676.02, flops:106.71, batch-reuse:1
@ 3124 train 4.6571 , allloss: 4.6585, dt: 1269.12ms, fracRes: 0.3405, norm(attn): 0.2031, norm(output): 0.4316, norm(x): 0.4002, norm(y): 1.0120, norm:2.1009, tok/sec: 103277.75, flops:108.39, batch-reuse:1
@ 3125 train 4.6084 , allloss: 4.6102, dt: 1275.27ms, fracRes: 0.3453, norm(attn): 0.2012, norm(output): 0.4297, norm(x): 0.4014, norm(y): 1.0122, norm:2.7769, tok/sec: 102779.94, flops:107.87, batch-reuse:1
@ 3126 train 4.4250 , allloss: 4.4276, dt: 1294.65ms, fracRes: 0.3453, norm(attn): 0.1982, norm(output): 0.4316, norm(x): 0.4008, norm(y): 1.0122, norm:2.3233, tok/sec: 101241.39, flops:106.25, batch-reuse:1
@ 3127 train 4.5484 , allloss: 4.5503, dt: 1298.13ms, fracRes: 0.3432, norm(attn): 0.2021, norm(output): 0.4316, norm(x): 0.4004, norm(y): 1.0121, norm:2.3360, tok/sec: 100969.58, flops:105.97, batch-reuse:1
@ 3128 train 4.5422 , allloss: 4.5475, dt: 1297.88ms, fracRes: 0.3415, norm(attn): 0.2012, norm(output): 0.4316, norm(x): 0.4032, norm(y): 1.0120, norm:2.2414, tok/sec: 100989.51, flops:105.99, batch-reuse:1
@ 3129 train 4.4150 , allloss: 4.4172, dt: 1284.03ms, fracRes: 0.3431, norm(attn): 0.2031, norm(output): 0.4336, norm(x): 0.4004, norm(y): 1.0121, norm:1.8703, tok/sec: 102078.31, flops:107.13, batch-reuse:1
@ 3130 train 4.5258 , allloss: 4.5271, dt: 1277.42ms, fracRes: 0.3453, norm(attn): 0.2002, norm(output): 0.4277, norm(x): 0.4004, norm(y): 1.0122, norm:2.1263, tok/sec: 102606.53, flops:107.69, batch-reuse:1
@ 3131 train 4.4176 , allloss: 4.4193, dt: 1280.29ms, fracRes: 0.3462, norm(attn): 0.1992, norm(output): 0.4316, norm(x): 0.4019, norm(y): 1.0122, norm:2.0420, tok/sec: 102376.89, flops:107.45, batch-reuse:1
@ 3132 train 4.4503 , allloss: 4.4512, dt: 1297.29ms, fracRes: 0.3446, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.4018, norm(y): 1.0121, norm:1.9391, tok/sec: 101035.06, flops:106.04, batch-reuse:1
@ 3133 train 4.4638 , allloss: 4.4654, dt: 1289.19ms, fracRes: 0.3448, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.4064, norm(y): 1.0121, norm:1.8837, tok/sec: 101670.02, flops:106.70, batch-reuse:1
@ 3134 train 4.4529 , allloss: 4.4549, dt: 1295.68ms, fracRes: 0.3447, norm(attn): 0.1973, norm(output): 0.4375, norm(x): 0.4075, norm(y): 1.0121, norm:1.9300, tok/sec: 101160.93, flops:106.17, batch-reuse:1
@ 3135 train 4.4650 , allloss: 4.4673, dt: 1319.56ms, fracRes: 0.3450, norm(attn): 0.2002, norm(output): 0.4355, norm(x): 0.4046, norm(y): 1.0121, norm:1.7950, tok/sec: 99329.97, flops:104.25, batch-reuse:1
@ 3136 train 4.4358 , allloss: 4.4427, dt: 1319.42ms, fracRes: 0.3452, norm(attn): 0.1982, norm(output): 0.4375, norm(x): 0.4055, norm(y): 1.0121, norm:1.8994, tok/sec: 99340.27, flops:104.26, batch-reuse:1
@ 3137 train 4.5171 , allloss: 4.5221, dt: 1321.23ms, fracRes: 0.3444, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.4066, norm(y): 1.0121, norm:2.1489, tok/sec: 99204.21, flops:104.12, batch-reuse:1
@ 3138 train 4.5634 , allloss: 4.5659, dt: 1289.67ms, fracRes: 0.3453, norm(attn): 0.1992, norm(output): 0.4355, norm(x): 0.4047, norm(y): 1.0122, norm:1.8079, tok/sec: 101632.24, flops:106.66, batch-reuse:1
@ 3139 train 4.4793 , allloss: 4.4815, dt: 1256.16ms, fracRes: 0.3423, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.4059, norm(y): 1.0121, norm:1.6687, tok/sec: 104343.75, flops:109.51, batch-reuse:1
@ 3140 train 4.5141 , allloss: 4.5164, dt: 1289.85ms, fracRes: 0.3443, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.4067, norm(y): 1.0121, norm:2.0592, tok/sec: 101617.94, flops:106.65, batch-reuse:1
@ 3141 train 4.5408 , allloss: 4.5424, dt: 1317.57ms, fracRes: 0.3439, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.4057, norm(y): 1.0122, norm:2.0220, tok/sec: 99480.03, flops:104.41, batch-reuse:1
@ 3142 train 4.4412 , allloss: 4.4432, dt: 1321.77ms, fracRes: 0.3435, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.4053, norm(y): 1.0122, norm:1.8258, tok/sec: 99164.27, flops:104.07, batch-reuse:1
@ 3143 train 4.7889 , allloss: 4.7913, dt: 1285.48ms, fracRes: 0.3424, norm(attn): 0.1992, norm(output): 0.4355, norm(x): 0.4103, norm(y): 1.0122, norm:2.2855, tok/sec: 101963.35, flops:107.01, batch-reuse:1
@ 3144 train 4.5235 , allloss: 4.5285, dt: 1281.50ms, fracRes: 0.3403, norm(attn): 0.2031, norm(output): 0.4336, norm(x): 0.4049, norm(y): 1.0121, norm:2.2708, tok/sec: 102280.51, flops:107.35, batch-reuse:1
@ 3145 train 4.4940 , allloss: 4.4965, dt: 1309.07ms, fracRes: 0.3406, norm(attn): 0.2041, norm(output): 0.4355, norm(x): 0.4045, norm(y): 1.0120, norm:1.9925, tok/sec: 100126.31, flops:105.08, batch-reuse:1
@ 3146 train 4.4589 , allloss: 4.4709, dt: 1269.45ms, fracRes: 0.3420, norm(attn): 0.2002, norm(output): 0.4336, norm(x): 0.4025, norm(y): 1.0121, norm:1.8234, tok/sec: 103251.23, flops:108.36, batch-reuse:1
@ 3147 train 4.4544 , allloss: 4.4567, dt: 1279.24ms, fracRes: 0.3441, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.4051, norm(y): 1.0122, norm:2.1432, tok/sec: 102460.84, flops:107.53, batch-reuse:1
@ 3148 train 4.5274 , allloss: 4.5284, dt: 1291.10ms, fracRes: 0.3463, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.4034, norm(y): 1.0122, norm:2.1580, tok/sec: 101519.43, flops:106.55, batch-reuse:1
@ 3149 train 4.5533 , allloss: 4.5543, dt: 1289.52ms, fracRes: 0.3459, norm(attn): 0.1992, norm(output): 0.4355, norm(x): 0.4023, norm(y): 1.0122, norm:1.7238, tok/sec: 101644.06, flops:106.68, batch-reuse:1
@ 3150 train 4.5323 , allloss: 4.5367, dt: 1281.21ms, fracRes: 0.3463, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.4072, norm(y): 1.0121, norm:2.1236, tok/sec: 102303.26, flops:107.37, batch-reuse:1
@ 3151 train 4.5056 , allloss: 4.5073, dt: 1274.81ms, fracRes: 0.3458, norm(attn): 0.1982, norm(output): 0.4355, norm(x): 0.4070, norm(y): 1.0121, norm:1.8779, tok/sec: 102816.52, flops:107.91, batch-reuse:1
@ 3152 train 4.5157 , allloss: 4.5174, dt: 1306.94ms, fracRes: 0.3480, norm(attn): 0.1982, norm(output): 0.4355, norm(x): 0.4029, norm(y): 1.0122, norm:2.2157, tok/sec: 100289.33, flops:105.26, batch-reuse:1
@ 3153 train 4.4988 , allloss: 4.5003, dt: 1307.25ms, fracRes: 0.3448, norm(attn): 0.2021, norm(output): 0.4316, norm(x): 0.4027, norm(y): 1.0121, norm:1.9140, tok/sec: 100265.09, flops:105.23, batch-reuse:1
@ 3154 train 4.5449 , allloss: 4.5481, dt: 1269.27ms, fracRes: 0.3472, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.4058, norm(y): 1.0122, norm:1.7419, tok/sec: 103265.33, flops:108.38, batch-reuse:1
@ 3155 train 4.4166 , allloss: 4.4202, dt: 1304.99ms, fracRes: 0.3465, norm(attn): 0.2021, norm(output): 0.4336, norm(x): 0.4037, norm(y): 1.0122, norm:1.6672, tok/sec: 100438.77, flops:105.41, batch-reuse:1
@ 3156 train 4.4806 , allloss: 4.4816, dt: 1302.65ms, fracRes: 0.3449, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4060, norm(y): 1.0121, norm:1.8995, tok/sec: 100619.32, flops:105.60, batch-reuse:1
@ 3157 train 4.5551 , allloss: 4.5563, dt: 1280.22ms, fracRes: 0.3443, norm(attn): 0.2021, norm(output): 0.4316, norm(x): 0.4055, norm(y): 1.0122, norm:1.7194, tok/sec: 102382.29, flops:107.45, batch-reuse:1
@ 3158 train 4.4865 , allloss: 4.4893, dt: 1292.86ms, fracRes: 0.3438, norm(attn): 0.2012, norm(output): 0.4316, norm(x): 0.4048, norm(y): 1.0122, norm:1.7524, tok/sec: 101381.19, flops:106.40, batch-reuse:1
@ 3159 train 4.4293 , allloss: 4.4320, dt: 1313.54ms, fracRes: 0.3426, norm(attn): 0.2031, norm(output): 0.4355, norm(x): 0.4084, norm(y): 1.0121, norm:1.6647, tok/sec: 99785.28, flops:104.73, batch-reuse:1
@ 3160 train 4.6922 , allloss: 4.6935, dt: 1268.24ms, fracRes: 0.3452, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.4081, norm(y): 1.0122, norm:2.0476, tok/sec: 103349.66, flops:108.47, batch-reuse:1
@ 3161 train 4.6497 , allloss: 4.6519, dt: 1267.53ms, fracRes: 0.3462, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.4082, norm(y): 1.0122, norm:2.1347, tok/sec: 103407.73, flops:108.53, batch-reuse:1
@ 3162 train 4.5552 , allloss: 4.5574, dt: 1308.83ms, fracRes: 0.3422, norm(attn): 0.2031, norm(output): 0.4355, norm(x): 0.4098, norm(y): 1.0121, norm:2.3243, tok/sec: 100144.06, flops:105.10, batch-reuse:1
@ 3163 train 4.7044 , allloss: 4.7069, dt: 1317.74ms, fracRes: 0.3430, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4105, norm(y): 1.0121, norm:2.2664, tok/sec: 99466.89, flops:104.39, batch-reuse:1
@ 3164 train 4.6329 , allloss: 4.6352, dt: 1315.11ms, fracRes: 0.3445, norm(attn): 0.2041, norm(output): 0.4355, norm(x): 0.4069, norm(y): 1.0122, norm:2.1482, tok/sec: 99666.30, flops:104.60, batch-reuse:1
@ 3165 train 4.5975 , allloss: 4.6001, dt: 1300.90ms, fracRes: 0.3450, norm(attn): 0.2031, norm(output): 0.4355, norm(x): 0.4061, norm(y): 1.0122, norm:2.1364, tok/sec: 100755.10, flops:105.74, batch-reuse:1
@ 3166 train 4.7401 , allloss: 4.7435, dt: 1277.10ms, fracRes: 0.3433, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.4089, norm(y): 1.0121, norm:2.3432, tok/sec: 102632.56, flops:107.71, batch-reuse:1
@ 3167 train 4.5802 , allloss: 4.5823, dt: 1332.71ms, fracRes: 0.3444, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4091, norm(y): 1.0122, norm:2.3310, tok/sec: 98349.84, flops:103.22, batch-reuse:1
@ 3168 train 4.6371 , allloss: 4.6392, dt: 1332.24ms, fracRes: 0.3446, norm(attn): 0.2002, norm(output): 0.4355, norm(x): 0.4084, norm(y): 1.0121, norm:2.1836, tok/sec: 98384.97, flops:103.26, batch-reuse:1
@ 3169 train 4.6852 , allloss: 4.6882, dt: 1324.81ms, fracRes: 0.3454, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4111, norm(y): 1.0122, norm:2.1715, tok/sec: 98936.54, flops:103.84, batch-reuse:1
@ 3170 train 4.6419 , allloss: 4.6491, dt: 1318.16ms, fracRes: 0.3447, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.4090, norm(y): 1.0122, norm:1.8034, tok/sec: 99435.90, flops:104.36, batch-reuse:1
@ 3171 train 4.6601 , allloss: 4.6649, dt: 1275.43ms, fracRes: 0.3432, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4102, norm(y): 1.0121, norm:1.7491, tok/sec: 102766.62, flops:107.86, batch-reuse:1
@ 3172 train 4.6414 , allloss: 4.6430, dt: 1299.88ms, fracRes: 0.3466, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.4128, norm(y): 1.0123, norm:1.9218, tok/sec: 100833.85, flops:105.83, batch-reuse:1
@ 3173 train 4.6466 , allloss: 4.6484, dt: 1291.40ms, fracRes: 0.3462, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.4104, norm(y): 1.0123, norm:2.2486, tok/sec: 101496.30, flops:106.52, batch-reuse:1
@ 3174 train 4.6709 , allloss: 4.6728, dt: 1299.57ms, fracRes: 0.3470, norm(attn): 0.1973, norm(output): 0.4375, norm(x): 0.4094, norm(y): 1.0122, norm:1.8114, tok/sec: 100857.95, flops:105.85, batch-reuse:1
@ 3175 train 4.6696 , allloss: 4.6720, dt: 1326.88ms, fracRes: 0.3462, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.4094, norm(y): 1.0121, norm:2.1091, tok/sec: 98781.98, flops:103.67, batch-reuse:1
@ 3176 train 4.6411 , allloss: 4.6431, dt: 1309.33ms, fracRes: 0.3475, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4084, norm(y): 1.0121, norm:1.8425, tok/sec: 100105.85, flops:105.06, batch-reuse:1
@ 3177 train 4.5651 , allloss: 4.5671, dt: 1280.60ms, fracRes: 0.3475, norm(attn): 0.1992, norm(output): 0.4355, norm(x): 0.4068, norm(y): 1.0122, norm:1.7367, tok/sec: 102352.17, flops:107.42, batch-reuse:1
@ 3178 train 4.7527 , allloss: 4.7553, dt: 1283.53ms, fracRes: 0.3448, norm(attn): 0.2031, norm(output): 0.4355, norm(x): 0.4068, norm(y): 1.0121, norm:2.0010, tok/sec: 102118.11, flops:107.17, batch-reuse:1
@ 3179 train 4.5973 , allloss: 4.6002, dt: 1303.16ms, fracRes: 0.3467, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4077, norm(y): 1.0122, norm:2.2234, tok/sec: 100580.04, flops:105.56, batch-reuse:1
@ 3180 train 4.6575 , allloss: 4.6592, dt: 1279.71ms, fracRes: 0.3453, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4103, norm(y): 1.0121, norm:1.9277, tok/sec: 102423.51, flops:107.50, batch-reuse:1
@ 3181 train 4.6739 , allloss: 4.6765, dt: 1315.96ms, fracRes: 0.3462, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.4053, norm(y): 1.0122, norm:2.5774, tok/sec: 99601.47, flops:104.53, batch-reuse:1
@ 3182 train 4.5883 , allloss: 4.5899, dt: 1307.09ms, fracRes: 0.3470, norm(attn): 0.2021, norm(output): 0.4414, norm(x): 0.4121, norm(y): 1.0122, norm:3.1887, tok/sec: 100277.44, flops:105.24, batch-reuse:1
@ 3183 train 4.7116 , allloss: 4.7158, dt: 1279.15ms, fracRes: 0.3470, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.4099, norm(y): 1.0122, norm:3.0175, tok/sec: 102468.22, flops:107.54, batch-reuse:1
@ 3184 train 4.7423 , allloss: 4.7446, dt: 1301.22ms, fracRes: 0.3492, norm(attn): 0.1992, norm(output): 0.4395, norm(x): 0.4102, norm(y): 1.0123, norm:2.1506, tok/sec: 100729.81, flops:105.72, batch-reuse:1
@ 3185 train 4.7846 , allloss: 4.7871, dt: 1323.56ms, fracRes: 0.3479, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.4093, norm(y): 1.0123, norm:2.2038, tok/sec: 99029.71, flops:103.93, batch-reuse:1
@ 3186 train 4.6990 , allloss: 4.7016, dt: 1321.24ms, fracRes: 0.3446, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4095, norm(y): 1.0121, norm:1.8639, tok/sec: 99204.10, flops:104.12, batch-reuse:1
@ 3187 train 4.6393 , allloss: 4.6406, dt: 1321.22ms, fracRes: 0.3452, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.4081, norm(y): 1.0122, norm:2.1760, tok/sec: 99205.52, flops:104.12, batch-reuse:1
@ 3188 train 4.5783 , allloss: 4.5798, dt: 1321.06ms, fracRes: 0.3427, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4104, norm(y): 1.0121, norm:2.0160, tok/sec: 99217.19, flops:104.13, batch-reuse:1
@ 3189 train 4.6169 , allloss: 4.6179, dt: 1325.00ms, fracRes: 0.3468, norm(attn): 0.1992, norm(output): 0.4336, norm(x): 0.4092, norm(y): 1.0123, norm:1.9539, tok/sec: 98922.53, flops:103.82, batch-reuse:1
@ 3190 train 4.6741 , allloss: 4.6769, dt: 1325.15ms, fracRes: 0.3454, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4081, norm(y): 1.0123, norm:2.0935, tok/sec: 98910.99, flops:103.81, batch-reuse:1
@ 3191 train 4.5788 , allloss: 4.5807, dt: 1319.10ms, fracRes: 0.3442, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.4075, norm(y): 1.0122, norm:2.0489, tok/sec: 99364.38, flops:104.28, batch-reuse:1
@ 3192 train 4.6313 , allloss: 4.6335, dt: 1283.88ms, fracRes: 0.3432, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4092, norm(y): 1.0121, norm:1.9771, tok/sec: 102090.33, flops:107.15, batch-reuse:1
@ 3193 train 4.6340 , allloss: 4.6357, dt: 1307.13ms, fracRes: 0.3441, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4066, norm(y): 1.0121, norm:1.9902, tok/sec: 100274.44, flops:105.24, batch-reuse:1
@ 3194 train 4.6392 , allloss: 4.6409, dt: 1286.78ms, fracRes: 0.3425, norm(attn): 0.2051, norm(output): 0.4355, norm(x): 0.4067, norm(y): 1.0121, norm:1.9837, tok/sec: 101860.15, flops:106.90, batch-reuse:1
@ 3195 train 4.6464 , allloss: 4.6492, dt: 1303.71ms, fracRes: 0.3440, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4101, norm(y): 1.0122, norm:2.1701, tok/sec: 100537.42, flops:105.52, batch-reuse:1
@ 3196 train 4.6666 , allloss: 4.6683, dt: 1301.81ms, fracRes: 0.3465, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.4095, norm(y): 1.0122, norm:2.0590, tok/sec: 100684.06, flops:105.67, batch-reuse:1
@ 3197 train 4.6361 , allloss: 4.6393, dt: 1330.90ms, fracRes: 0.3458, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4095, norm(y): 1.0121, norm:2.0394, tok/sec: 98483.84, flops:103.36, batch-reuse:1
@ 3198 train 4.5728 , allloss: 4.5744, dt: 1312.35ms, fracRes: 0.3452, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.4117, norm(y): 1.0121, norm:1.6285, tok/sec: 99875.92, flops:104.82, batch-reuse:1
@ 3199 train 4.6138 , allloss: 4.6153, dt: 1326.01ms, fracRes: 0.3466, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.4120, norm(y): 1.0123, norm:2.1705, tok/sec: 98846.62, flops:103.74, batch-reuse:1
@ 3200 train 4.6389 , allloss: 4.6416, dt: 1317.23ms, fracRes: 0.3487, norm(attn): 0.2002, norm(output): 0.4395, norm(x): 0.4154, norm(y): 1.0123, norm:2.5130, tok/sec: 99505.91, flops:104.43, batch-reuse:1
@ 3201 train 4.6470 , allloss: 4.6482, dt: 1269.92ms, fracRes: 0.3466, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4133, norm(y): 1.0123, norm:1.9746, tok/sec: 103213.04, flops:108.32, batch-reuse:1
@ 3202 train 4.6448 , allloss: 4.6492, dt: 1317.26ms, fracRes: 0.3448, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.4131, norm(y): 1.0122, norm:2.1214, tok/sec: 99503.55, flops:104.43, batch-reuse:1
@ 3203 train 4.6989 , allloss: 4.7004, dt: 1340.05ms, fracRes: 0.3442, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.4124, norm(y): 1.0121, norm:1.6619, tok/sec: 97811.24, flops:102.65, batch-reuse:1
@ 3204 train 4.6130 , allloss: 4.6146, dt: 1330.49ms, fracRes: 0.3463, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4098, norm(y): 1.0122, norm:2.5510, tok/sec: 98514.34, flops:103.39, batch-reuse:1
@ 3205 train 4.6059 , allloss: 4.6082, dt: 1342.70ms, fracRes: 0.3435, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4100, norm(y): 1.0122, norm:2.2596, tok/sec: 97618.14, flops:102.45, batch-reuse:1
@ 3206 train 4.5150 , allloss: 4.5161, dt: 1316.82ms, fracRes: 0.3431, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4108, norm(y): 1.0122, norm:2.1414, tok/sec: 99536.82, flops:104.47, batch-reuse:1
@ 3207 train 4.6862 , allloss: 4.6882, dt: 1342.31ms, fracRes: 0.3430, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4123, norm(y): 1.0122, norm:1.9259, tok/sec: 97646.27, flops:102.48, batch-reuse:1
@ 3208 train 4.6620 , allloss: 4.6637, dt: 1337.59ms, fracRes: 0.3444, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.4138, norm(y): 1.0122, norm:2.2023, tok/sec: 97991.30, flops:102.84, batch-reuse:1
@ 3209 train 4.6200 , allloss: 4.6218, dt: 1331.30ms, fracRes: 0.3455, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4116, norm(y): 1.0121, norm:2.0335, tok/sec: 98454.44, flops:103.33, batch-reuse:1
@ 3210 train 4.6031 , allloss: 4.6043, dt: 1332.53ms, fracRes: 0.3460, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.4125, norm(y): 1.0122, norm:2.5181, tok/sec: 98363.63, flops:103.23, batch-reuse:1
@ 3211 train 4.6413 , allloss: 4.6423, dt: 1313.70ms, fracRes: 0.3452, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4103, norm(y): 1.0122, norm:1.8385, tok/sec: 99772.95, flops:104.71, batch-reuse:1
@ 3212 train 4.7852 , allloss: 4.7861, dt: 1293.10ms, fracRes: 0.3431, norm(attn): 0.2061, norm(output): 0.4355, norm(x): 0.4081, norm(y): 1.0122, norm:2.2697, tok/sec: 101362.36, flops:106.38, batch-reuse:1
@ 3213 train 4.6312 , allloss: 4.6331, dt: 1284.78ms, fracRes: 0.3447, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4108, norm(y): 1.0122, norm:2.2705, tok/sec: 102019.27, flops:107.07, batch-reuse:1
@ 3214 train 4.7259 , allloss: 4.7289, dt: 1298.36ms, fracRes: 0.3451, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.4136, norm(y): 1.0121, norm:2.2177, tok/sec: 100952.33, flops:105.95, batch-reuse:1
@ 3215 train 4.6091 , allloss: 4.6146, dt: 1274.22ms, fracRes: 0.3452, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4131, norm(y): 1.0122, norm:2.2054, tok/sec: 102864.75, flops:107.96, batch-reuse:1
@ 3216 train 4.6329 , allloss: 4.6345, dt: 1302.67ms, fracRes: 0.3452, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.4086, norm(y): 1.0122, norm:2.1996, tok/sec: 100618.15, flops:105.60, batch-reuse:1
@ 3217 train 4.6081 , allloss: 4.6098, dt: 1330.67ms, fracRes: 0.3456, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4123, norm(y): 1.0122, norm:2.0980, tok/sec: 98500.52, flops:103.38, batch-reuse:1
@ 3218 train 4.6783 , allloss: 4.6794, dt: 1289.80ms, fracRes: 0.3446, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4112, norm(y): 1.0121, norm:2.0001, tok/sec: 101622.17, flops:106.65, batch-reuse:1
@ 3219 train 4.6909 , allloss: 4.6923, dt: 1302.67ms, fracRes: 0.3473, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4111, norm(y): 1.0122, norm:1.9582, tok/sec: 100618.07, flops:105.60, batch-reuse:1
@ 3220 train 4.6438 , allloss: 4.6446, dt: 1305.71ms, fracRes: 0.3489, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4108, norm(y): 1.0123, norm:2.2443, tok/sec: 100383.60, flops:105.35, batch-reuse:1
@ 3221 train 4.5755 , allloss: 4.5766, dt: 1335.99ms, fracRes: 0.3477, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.4075, norm(y): 1.0122, norm:1.7533, tok/sec: 98108.38, flops:102.97, batch-reuse:1
@ 3222 train 4.6300 , allloss: 4.6311, dt: 1329.46ms, fracRes: 0.3457, norm(attn): 0.2051, norm(output): 0.4395, norm(x): 0.4132, norm(y): 1.0121, norm:2.4200, tok/sec: 98590.34, flops:103.47, batch-reuse:1
@ 3223 train 4.6235 , allloss: 4.6250, dt: 1334.25ms, fracRes: 0.3472, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4100, norm(y): 1.0122, norm:1.7283, tok/sec: 98236.66, flops:103.10, batch-reuse:1
@ 3224 train 4.6454 , allloss: 4.6465, dt: 1325.42ms, fracRes: 0.3473, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.4092, norm(y): 1.0123, norm:2.0885, tok/sec: 98891.25, flops:103.79, batch-reuse:1
@ 3225 train 4.6621 , allloss: 4.6658, dt: 1338.93ms, fracRes: 0.3470, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.4105, norm(y): 1.0122, norm:1.9842, tok/sec: 97893.35, flops:102.74, batch-reuse:1
@ 3226 train 4.5898 , allloss: 4.5911, dt: 1286.37ms, fracRes: 0.3468, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4097, norm(y): 1.0122, norm:1.7470, tok/sec: 101893.26, flops:106.94, batch-reuse:1
@ 3227 train 4.5702 , allloss: 4.5714, dt: 1286.23ms, fracRes: 0.3457, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4085, norm(y): 1.0122, norm:2.2969, tok/sec: 101903.99, flops:106.95, batch-reuse:1
@ 3228 train 4.5258 , allloss: 4.5271, dt: 1291.61ms, fracRes: 0.3464, norm(attn): 0.2051, norm(output): 0.4375, norm(x): 0.4103, norm(y): 1.0122, norm:1.8105, tok/sec: 101479.60, flops:106.50, batch-reuse:1
@ 3229 train 4.6700 , allloss: 4.6712, dt: 1312.51ms, fracRes: 0.3456, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4111, norm(y): 1.0121, norm:2.1401, tok/sec: 99863.95, flops:104.81, batch-reuse:1
@ 3230 train 4.7567 , allloss: 4.7581, dt: 1295.30ms, fracRes: 0.3452, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4150, norm(y): 1.0121, norm:1.9417, tok/sec: 101190.29, flops:106.20, batch-reuse:1
@ 3231 train 4.5427 , allloss: 4.5441, dt: 1280.77ms, fracRes: 0.3441, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4139, norm(y): 1.0122, norm:2.2338, tok/sec: 102338.11, flops:107.41, batch-reuse:1
@ 3232 train 4.5893 , allloss: 4.5921, dt: 1295.23ms, fracRes: 0.3438, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4129, norm(y): 1.0121, norm:1.8414, tok/sec: 101195.75, flops:106.21, batch-reuse:1
@ 3233 train 4.6137 , allloss: 4.6149, dt: 1293.48ms, fracRes: 0.3445, norm(attn): 0.2061, norm(output): 0.4375, norm(x): 0.4137, norm(y): 1.0122, norm:2.1416, tok/sec: 101332.64, flops:106.35, batch-reuse:1
@ 3234 train 4.7545 , allloss: 4.7571, dt: 1301.72ms, fracRes: 0.3466, norm(attn): 0.2002, norm(output): 0.4414, norm(x): 0.4157, norm(y): 1.0123, norm:2.4439, tok/sec: 100691.03, flops:105.68, batch-reuse:1
@ 3235 train 4.6189 , allloss: 4.6209, dt: 1295.41ms, fracRes: 0.3458, norm(attn): 0.2041, norm(output): 0.4414, norm(x): 0.4174, norm(y): 1.0122, norm:2.1759, tok/sec: 101181.72, flops:106.19, batch-reuse:1
@ 3236 train 4.6845 , allloss: 4.6884, dt: 1292.34ms, fracRes: 0.3460, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4134, norm(y): 1.0122, norm:1.8934, tok/sec: 101422.49, flops:106.44, batch-reuse:1
@ 3237 train 4.5903 , allloss: 4.5925, dt: 1311.70ms, fracRes: 0.3472, norm(attn): 0.2012, norm(output): 0.4395, norm(x): 0.4111, norm(y): 1.0122, norm:2.1251, tok/sec: 99925.59, flops:104.87, batch-reuse:1
@ 3238 train 4.6263 , allloss: 4.6287, dt: 1310.79ms, fracRes: 0.3450, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.4113, norm(y): 1.0122, norm:1.8924, tok/sec: 99994.89, flops:104.95, batch-reuse:1
@ 3239 train 4.6097 , allloss: 4.6110, dt: 1291.65ms, fracRes: 0.3459, norm(attn): 0.2002, norm(output): 0.4395, norm(x): 0.4117, norm(y): 1.0122, norm:1.8341, tok/sec: 101476.29, flops:106.50, batch-reuse:1
@ 3240 train 4.6774 , allloss: 4.6790, dt: 1296.06ms, fracRes: 0.3460, norm(attn): 0.2031, norm(output): 0.4414, norm(x): 0.4166, norm(y): 1.0122, norm:2.3256, tok/sec: 101131.00, flops:106.14, batch-reuse:1
@ 3241 train 4.6416 , allloss: 4.6439, dt: 1306.49ms, fracRes: 0.3462, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4131, norm(y): 1.0122, norm:2.0232, tok/sec: 100323.66, flops:105.29, batch-reuse:1
@ 3242 train 4.6163 , allloss: 4.6180, dt: 1301.29ms, fracRes: 0.3463, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4131, norm(y): 1.0122, norm:1.9506, tok/sec: 100724.64, flops:105.71, batch-reuse:1
@ 3243 train 4.5656 , allloss: 4.5698, dt: 1322.17ms, fracRes: 0.3450, norm(attn): 0.2070, norm(output): 0.4395, norm(x): 0.4128, norm(y): 1.0121, norm:2.3108, tok/sec: 99134.14, flops:104.04, batch-reuse:1
@ 3244 train 4.5827 , allloss: 4.5841, dt: 1299.88ms, fracRes: 0.3447, norm(attn): 0.2070, norm(output): 0.4375, norm(x): 0.4130, norm(y): 1.0122, norm:2.1929, tok/sec: 100834.12, flops:105.83, batch-reuse:1
@ 3245 train 4.5844 , allloss: 4.5855, dt: 1271.68ms, fracRes: 0.3473, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4107, norm(y): 1.0122, norm:1.8955, tok/sec: 103069.71, flops:108.17, batch-reuse:1
@ 3246 train 4.5490 , allloss: 4.5505, dt: 1361.31ms, fracRes: 0.3482, norm(attn): 0.2051, norm(output): 0.4375, norm(x): 0.4107, norm(y): 1.0122, norm:2.4658, tok/sec: 96283.42, flops:101.05, batch-reuse:1
@ 3247 train 4.5686 , allloss: 4.5703, dt: 1317.43ms, fracRes: 0.3468, norm(attn): 0.2051, norm(output): 0.4395, norm(x): 0.4134, norm(y): 1.0122, norm:1.8387, tok/sec: 99490.40, flops:104.42, batch-reuse:1
@ 3248 train 4.6663 , allloss: 4.6673, dt: 1287.82ms, fracRes: 0.3464, norm(attn): 0.2051, norm(output): 0.4375, norm(x): 0.4132, norm(y): 1.0122, norm:1.9539, tok/sec: 101778.38, flops:106.82, batch-reuse:1
@ 3249 train 4.5843 , allloss: 4.5854, dt: 1297.62ms, fracRes: 0.3459, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4139, norm(y): 1.0122, norm:2.2434, tok/sec: 101009.80, flops:106.01, batch-reuse:1
@ 3250 train 4.5303 , allloss: 4.5319, dt: 1294.88ms, fracRes: 0.3477, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4141, norm(y): 1.0122, norm:1.7528, tok/sec: 101223.21, flops:106.24, batch-reuse:1
@ 3251 train 4.5321 , allloss: 4.5346, dt: 1288.06ms, fracRes: 0.3477, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.4138, norm(y): 1.0122, norm:1.9384, tok/sec: 101758.98, flops:106.80, batch-reuse:1
@ 3252 train 4.5393 , allloss: 4.5410, dt: 1295.08ms, fracRes: 0.3476, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4136, norm(y): 1.0122, norm:1.8807, tok/sec: 101208.01, flops:106.22, batch-reuse:1
@ 3253 train 4.6608 , allloss: 4.6623, dt: 1292.18ms, fracRes: 0.3480, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4138, norm(y): 1.0122, norm:1.7384, tok/sec: 101434.93, flops:106.46, batch-reuse:1
@ 3254 train 4.4803 , allloss: 4.4823, dt: 1315.32ms, fracRes: 0.3462, norm(attn): 0.2061, norm(output): 0.4395, norm(x): 0.4132, norm(y): 1.0122, norm:1.9612, tok/sec: 99650.44, flops:104.58, batch-reuse:1
@ 3255 train 4.5941 , allloss: 4.5959, dt: 1343.89ms, fracRes: 0.3470, norm(attn): 0.2012, norm(output): 0.4395, norm(x): 0.4096, norm(y): 1.0123, norm:1.8305, tok/sec: 97531.97, flops:102.36, batch-reuse:1
@ 3256 train 4.6315 , allloss: 4.6329, dt: 1302.00ms, fracRes: 0.3469, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4133, norm(y): 1.0122, norm:1.7701, tok/sec: 100669.75, flops:105.65, batch-reuse:1
@ 3257 train 4.5487 , allloss: 4.5504, dt: 1307.49ms, fracRes: 0.3471, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4121, norm(y): 1.0122, norm:1.9483, tok/sec: 100246.96, flops:105.21, batch-reuse:1
@ 3258 train 4.5466 , allloss: 4.5477, dt: 1287.91ms, fracRes: 0.3458, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4124, norm(y): 1.0122, norm:1.9536, tok/sec: 101771.09, flops:106.81, batch-reuse:1
@ 3259 train 4.5728 , allloss: 4.5739, dt: 1317.95ms, fracRes: 0.3464, norm(attn): 0.2041, norm(output): 0.4414, norm(x): 0.4167, norm(y): 1.0122, norm:2.0947, tok/sec: 99451.15, flops:104.38, batch-reuse:1
@ 3260 train 4.5676 , allloss: 4.5701, dt: 1336.47ms, fracRes: 0.3460, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4145, norm(y): 1.0122, norm:1.5713, tok/sec: 98073.05, flops:102.93, batch-reuse:1
@ 3261 train 4.5770 , allloss: 4.5781, dt: 1340.13ms, fracRes: 0.3475, norm(attn): 0.2061, norm(output): 0.4375, norm(x): 0.4149, norm(y): 1.0122, norm:2.2942, tok/sec: 97805.45, flops:102.65, batch-reuse:1
@ 3262 train 4.5239 , allloss: 4.5256, dt: 1298.14ms, fracRes: 0.3465, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4129, norm(y): 1.0122, norm:1.7349, tok/sec: 100968.98, flops:105.97, batch-reuse:1
@ 3263 train 4.5172 , allloss: 4.5204, dt: 1296.15ms, fracRes: 0.3479, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.4167, norm(y): 1.0123, norm:1.9708, tok/sec: 101123.84, flops:106.13, batch-reuse:1
@ 3264 train 4.6082 , allloss: 4.6095, dt: 1320.36ms, fracRes: 0.3505, norm(attn): 0.2021, norm(output): 0.4414, norm(x): 0.4166, norm(y): 1.0123, norm:1.8396, tok/sec: 99269.92, flops:104.19, batch-reuse:1
@ 3265 train 4.5401 , allloss: 4.5441, dt: 1314.45ms, fracRes: 0.3485, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4130, norm(y): 1.0122, norm:1.7474, tok/sec: 99716.25, flops:104.65, batch-reuse:1
@ 3266 train 4.4867 , allloss: 4.4880, dt: 1300.98ms, fracRes: 0.3492, norm(attn): 0.2051, norm(output): 0.4414, norm(x): 0.4142, norm(y): 1.0123, norm:1.9109, tok/sec: 100749.01, flops:105.74, batch-reuse:1
@ 3267 train 4.5043 , allloss: 4.5091, dt: 1311.88ms, fracRes: 0.3462, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4146, norm(y): 1.0122, norm:2.0624, tok/sec: 99911.88, flops:104.86, batch-reuse:1
@ 3268 train 4.5269 , allloss: 4.5286, dt: 1279.80ms, fracRes: 0.3451, norm(attn): 0.2041, norm(output): 0.4434, norm(x): 0.4180, norm(y): 1.0122, norm:1.9619, tok/sec: 102416.10, flops:107.49, batch-reuse:1
@ 3269 train 4.5286 , allloss: 4.5342, dt: 1289.91ms, fracRes: 0.3441, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4148, norm(y): 1.0122, norm:1.6669, tok/sec: 101613.34, flops:106.65, batch-reuse:1
@ 3270 train 4.5189 , allloss: 4.5203, dt: 1298.68ms, fracRes: 0.3455, norm(attn): 0.2051, norm(output): 0.4414, norm(x): 0.4151, norm(y): 1.0122, norm:1.6942, tok/sec: 100927.33, flops:105.93, batch-reuse:1
@ 3271 train 4.5196 , allloss: 4.5208, dt: 1294.65ms, fracRes: 0.3439, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4141, norm(y): 1.0122, norm:1.5562, tok/sec: 101241.61, flops:106.25, batch-reuse:1
@ 3272 train 4.5621 , allloss: 4.5636, dt: 1310.28ms, fracRes: 0.3458, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4164, norm(y): 1.0123, norm:2.2442, tok/sec: 100033.70, flops:104.99, batch-reuse:1
@ 3273 train 4.5731 , allloss: 4.5744, dt: 1336.67ms, fracRes: 0.3451, norm(attn): 0.2051, norm(output): 0.4375, norm(x): 0.4128, norm(y): 1.0122, norm:1.7810, tok/sec: 98058.32, flops:102.91, batch-reuse:1
@ 3274 train 4.5244 , allloss: 4.5279, dt: 1340.84ms, fracRes: 0.3460, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4138, norm(y): 1.0123, norm:2.0944, tok/sec: 97753.85, flops:102.59, batch-reuse:1
@ 3275 train 4.5347 , allloss: 4.5370, dt: 1324.14ms, fracRes: 0.3456, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4136, norm(y): 1.0123, norm:2.0257, tok/sec: 98986.24, flops:103.89, batch-reuse:1
@ 3276 train 4.5512 , allloss: 4.5557, dt: 1293.80ms, fracRes: 0.3472, norm(attn): 0.2012, norm(output): 0.4395, norm(x): 0.4145, norm(y): 1.0122, norm:1.8291, tok/sec: 101307.58, flops:106.32, batch-reuse:1
@ 3277 train 4.5589 , allloss: 4.5617, dt: 1292.38ms, fracRes: 0.3457, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4151, norm(y): 1.0122, norm:1.7214, tok/sec: 101418.74, flops:106.44, batch-reuse:1
@ 3278 train 4.5632 , allloss: 4.5644, dt: 1300.34ms, fracRes: 0.3468, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4143, norm(y): 1.0123, norm:1.8133, tok/sec: 100798.13, flops:105.79, batch-reuse:1
@ 3279 train 4.5756 , allloss: 4.5777, dt: 1289.24ms, fracRes: 0.3477, norm(attn): 0.2051, norm(output): 0.4414, norm(x): 0.4145, norm(y): 1.0123, norm:1.9260, tok/sec: 101666.22, flops:106.70, batch-reuse:1
@ 3280 train 4.5298 , allloss: 4.5324, dt: 1296.87ms, fracRes: 0.3459, norm(attn): 0.2090, norm(output): 0.4395, norm(x): 0.4164, norm(y): 1.0122, norm:2.0390, tok/sec: 101068.31, flops:106.07, batch-reuse:1
@ 3281 train 4.5410 , allloss: 4.5431, dt: 1317.56ms, fracRes: 0.3493, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4127, norm(y): 1.0124, norm:1.8317, tok/sec: 99480.59, flops:104.41, batch-reuse:1
@ 3282 train 4.5131 , allloss: 4.5147, dt: 1300.00ms, fracRes: 0.3481, norm(attn): 0.2041, norm(output): 0.4395, norm(x): 0.4144, norm(y): 1.0124, norm:2.0512, tok/sec: 100824.55, flops:105.82, batch-reuse:1
@ 3283 train 4.5558 , allloss: 4.5568, dt: 1312.74ms, fracRes: 0.3452, norm(attn): 0.2051, norm(output): 0.4395, norm(x): 0.4156, norm(y): 1.0123, norm:1.7245, tok/sec: 99845.88, flops:104.79, batch-reuse:1
@ 3284 train 4.5584 , allloss: 4.5600, dt: 1285.39ms, fracRes: 0.3458, norm(attn): 0.2070, norm(output): 0.4375, norm(x): 0.4138, norm(y): 1.0122, norm:1.9133, tok/sec: 101970.67, flops:107.02, batch-reuse:1
@ 3285 train 4.5010 , allloss: 4.5025, dt: 1311.90ms, fracRes: 0.3472, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.4140, norm(y): 1.0123, norm:1.5623, tok/sec: 99910.23, flops:104.86, batch-reuse:1
@ 3286 train 4.5516 , allloss: 4.5534, dt: 1334.99ms, fracRes: 0.3487, norm(attn): 0.2041, norm(output): 0.4414, norm(x): 0.4180, norm(y): 1.0123, norm:1.9183, tok/sec: 98182.01, flops:103.04, batch-reuse:1
@ 3287 train 4.4860 , allloss: 4.4905, dt: 1305.32ms, fracRes: 0.3463, norm(attn): 0.2061, norm(output): 0.4414, norm(x): 0.4167, norm(y): 1.0123, norm:1.7243, tok/sec: 100413.40, flops:105.39, batch-reuse:1
@ 3288 train 4.6878 , allloss: 4.6905, dt: 1283.58ms, fracRes: 0.3476, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.4195, norm(y): 1.0122, norm:2.1510, tok/sec: 102114.05, flops:107.17, batch-reuse:1
@ 3289 train 4.6235 , allloss: 4.6282, dt: 1310.56ms, fracRes: 0.3481, norm(attn): 0.2051, norm(output): 0.4414, norm(x): 0.4192, norm(y): 1.0122, norm:2.0460, tok/sec: 100012.46, flops:104.96, batch-reuse:1
@ 3290 train 4.6275 , allloss: 4.6281, dt: 1304.34ms, fracRes: 0.3461, norm(attn): 0.2012, norm(output): 0.4395, norm(x): 0.4152, norm(y): 1.0123, norm:2.1083, tok/sec: 100489.13, flops:105.47, batch-reuse:1
@ 3291 train 4.4669 , allloss: 4.4684, dt: 1308.80ms, fracRes: 0.3459, norm(attn): 0.2070, norm(output): 0.4414, norm(x): 0.4170, norm(y): 1.0122, norm:2.0162, tok/sec: 100147.01, flops:105.11, batch-reuse:1
@ 3292 train 4.6709 , allloss: 4.6727, dt: 1321.41ms, fracRes: 0.3468, norm(attn): 0.1992, norm(output): 0.4453, norm(x): 0.4192, norm(y): 1.0122, norm:2.3119, tok/sec: 99191.07, flops:104.10, batch-reuse:1
@ 3293 train 4.6155 , allloss: 4.6174, dt: 1298.73ms, fracRes: 0.3468, norm(attn): 0.2031, norm(output): 0.4414, norm(x): 0.4177, norm(y): 1.0122, norm:1.7615, tok/sec: 100922.87, flops:105.92, batch-reuse:1
@ 3294 train 4.5864 , allloss: 4.5881, dt: 1285.48ms, fracRes: 0.3481, norm(attn): 0.2051, norm(output): 0.4414, norm(x): 0.4187, norm(y): 1.0123, norm:2.3128, tok/sec: 101963.22, flops:107.01, batch-reuse:1
@ 3295 train 4.4251 , allloss: 4.4266, dt: 1299.93ms, fracRes: 0.3474, norm(attn): 0.2090, norm(output): 0.4395, norm(x): 0.4132, norm(y): 1.0123, norm:1.6922, tok/sec: 100829.91, flops:105.82, batch-reuse:1
@ 3296 train 4.4751 , allloss: 4.4774, dt: 1294.24ms, fracRes: 0.3475, norm(attn): 0.2080, norm(output): 0.4395, norm(x): 0.4170, norm(y): 1.0122, norm:2.3440, tok/sec: 101273.33, flops:106.29, batch-reuse:1
@ 3297 train 4.3848 , allloss: 4.3867, dt: 1283.16ms, fracRes: 0.3461, norm(attn): 0.2070, norm(output): 0.4434, norm(x): 0.4172, norm(y): 1.0122, norm:1.8183, tok/sec: 102147.84, flops:107.21, batch-reuse:1
@ 3298 train 4.4732 , allloss: 4.4745, dt: 1312.76ms, fracRes: 0.3457, norm(attn): 0.2051, norm(output): 0.4375, norm(x): 0.4154, norm(y): 1.0122, norm:1.7834, tok/sec: 99844.54, flops:104.79, batch-reuse:1
@ 3299 train 4.3995 , allloss: 4.4005, dt: 1313.95ms, fracRes: 0.3438, norm(attn): 0.2090, norm(output): 0.4414, norm(x): 0.4159, norm(y): 1.0122, norm:2.1437, tok/sec: 99754.23, flops:104.69, batch-reuse:1
@ 3300 train 4.4438 , allloss: 4.4446, dt: 1305.62ms, fracRes: 0.3447, norm(attn): 0.2070, norm(output): 0.4414, norm(x): 0.4162, norm(y): 1.0122, norm:1.7430, tok/sec: 100390.37, flops:105.36, batch-reuse:1
@ 3301 train 4.4683 , allloss: 4.4696, dt: 1299.72ms, fracRes: 0.3454, norm(attn): 0.2061, norm(output): 0.4395, norm(x): 0.4157, norm(y): 1.0123, norm:1.9317, tok/sec: 100845.96, flops:105.84, batch-reuse:1
@ 3302 train 4.4411 , allloss: 4.4432, dt: 1307.12ms, fracRes: 0.3479, norm(attn): 0.2051, norm(output): 0.4492, norm(x): 0.4200, norm(y): 1.0123, norm:1.8143, tok/sec: 100275.33, flops:105.24, batch-reuse:1
@ 3303 train 4.3800 , allloss: 4.3818, dt: 1277.34ms, fracRes: 0.3492, norm(attn): 0.2041, norm(output): 0.4434, norm(x): 0.4172, norm(y): 1.0124, norm:1.8930, tok/sec: 102613.34, flops:107.69, batch-reuse:1
@ 3304 train 4.4945 , allloss: 4.4960, dt: 1307.44ms, fracRes: 0.3497, norm(attn): 0.2031, norm(output): 0.4414, norm(x): 0.4169, norm(y): 1.0123, norm:1.8769, tok/sec: 100250.87, flops:105.22, batch-reuse:1
@ 3305 train 4.5347 , allloss: 4.5362, dt: 1298.31ms, fracRes: 0.3488, norm(attn): 0.2012, norm(output): 0.4414, norm(x): 0.4159, norm(y): 1.0123, norm:1.9094, tok/sec: 100955.71, flops:105.95, batch-reuse:1
@ 3306 train 4.4075 , allloss: 4.4098, dt: 1302.49ms, fracRes: 0.3485, norm(attn): 0.2051, norm(output): 0.4414, norm(x): 0.4156, norm(y): 1.0123, norm:1.8563, tok/sec: 100632.11, flops:105.62, batch-reuse:1
@ 3307 train 4.4124 , allloss: 4.4137, dt: 1351.36ms, fracRes: 0.3479, norm(attn): 0.2051, norm(output): 0.4414, norm(x): 0.4167, norm(y): 1.0122, norm:1.9239, tok/sec: 96992.36, flops:101.80, batch-reuse:1
@ 3308 train 4.4960 , allloss: 4.4992, dt: 1326.22ms, fracRes: 0.3489, norm(attn): 0.2012, norm(output): 0.4414, norm(x): 0.4156, norm(y): 1.0124, norm:2.1922, tok/sec: 98830.96, flops:103.72, batch-reuse:1
@ 3309 train 4.4322 , allloss: 4.4341, dt: 1274.31ms, fracRes: 0.3466, norm(attn): 0.2041, norm(output): 0.4414, norm(x): 0.4149, norm(y): 1.0124, norm:1.9281, tok/sec: 102856.99, flops:107.95, batch-reuse:1
@ 3310 train 4.4798 , allloss: 4.4831, dt: 1288.06ms, fracRes: 0.3469, norm(attn): 0.2041, norm(output): 0.4414, norm(x): 0.4163, norm(y): 1.0123, norm:1.9642, tok/sec: 101759.52, flops:106.80, batch-reuse:1
@ 3311 train 4.5180 , allloss: 4.5194, dt: 1321.67ms, fracRes: 0.3467, norm(attn): 0.2061, norm(output): 0.4414, norm(x): 0.4184, norm(y): 1.0122, norm:2.4130, tok/sec: 99171.61, flops:104.08, batch-reuse:1
@ 3312 train 4.4407 , allloss: 4.4462, dt: 1329.39ms, fracRes: 0.3490, norm(attn): 0.2021, norm(output): 0.4453, norm(x): 0.4207, norm(y): 1.0123, norm:2.1584, tok/sec: 98595.70, flops:103.48, batch-reuse:1
@ 3313 train 4.4858 , allloss: 4.4874, dt: 1337.76ms, fracRes: 0.3479, norm(attn): 0.2012, norm(output): 0.4414, norm(x): 0.4176, norm(y): 1.0124, norm:2.0723, tok/sec: 97978.49, flops:102.83, batch-reuse:1
@ 3314 train 4.4229 , allloss: 4.4237, dt: 1315.72ms, fracRes: 0.3503, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4144, norm(y): 1.0124, norm:1.8772, tok/sec: 99619.96, flops:104.55, batch-reuse:1
@ 3315 train 4.5670 , allloss: 4.5682, dt: 1288.76ms, fracRes: 0.3510, norm(attn): 0.2012, norm(output): 0.4414, norm(x): 0.4171, norm(y): 1.0124, norm:1.9321, tok/sec: 101704.21, flops:106.74, batch-reuse:1
@ 3316 train 4.4815 , allloss: 4.4831, dt: 1283.80ms, fracRes: 0.3521, norm(attn): 0.2031, norm(output): 0.4453, norm(x): 0.4182, norm(y): 1.0124, norm:1.7437, tok/sec: 102096.70, flops:107.15, batch-reuse:1
@ 3317 train 4.4787 , allloss: 4.4828, dt: 1279.21ms, fracRes: 0.3502, norm(attn): 0.2021, norm(output): 0.4414, norm(x): 0.4156, norm(y): 1.0123, norm:1.7961, tok/sec: 102463.38, flops:107.54, batch-reuse:1
@ 3318 train 4.2459 , allloss: 4.2482, dt: 1315.66ms, fracRes: 0.3503, norm(attn): 0.2041, norm(output): 0.4434, norm(x): 0.4189, norm(y): 1.0124, norm:1.9286, tok/sec: 99624.78, flops:104.56, batch-reuse:1
@ 3319 train 4.5324 , allloss: 4.5339, dt: 1288.88ms, fracRes: 0.3490, norm(attn): 0.2012, norm(output): 0.4414, norm(x): 0.4179, norm(y): 1.0124, norm:1.6708, tok/sec: 101694.52, flops:106.73, batch-reuse:1
@ 3320 train 4.5460 , allloss: 4.5474, dt: 1300.14ms, fracRes: 0.3491, norm(attn): 0.2002, norm(output): 0.4453, norm(x): 0.4202, norm(y): 1.0123, norm:1.9251, tok/sec: 100813.69, flops:105.81, batch-reuse:1
@ 3321 train 4.4803 , allloss: 4.4818, dt: 1306.15ms, fracRes: 0.3480, norm(attn): 0.2031, norm(output): 0.4414, norm(x): 0.4167, norm(y): 1.0124, norm:2.0891, tok/sec: 100349.78, flops:105.32, batch-reuse:1
@ 3322 train 4.3427 , allloss: 4.3452, dt: 1320.36ms, fracRes: 0.3473, norm(attn): 0.2061, norm(output): 0.4453, norm(x): 0.4177, norm(y): 1.0124, norm:1.7401, tok/sec: 99269.88, flops:104.19, batch-reuse:1
@ 3323 train 4.3030 , allloss: 4.3140, dt: 1333.61ms, fracRes: 0.3467, norm(attn): 0.2090, norm(output): 0.4414, norm(x): 0.4142, norm(y): 1.0123, norm:1.5711, tok/sec: 98283.88, flops:103.15, batch-reuse:1
@ 3324 train 4.4282 , allloss: 4.4302, dt: 1322.07ms, fracRes: 0.3467, norm(attn): 0.2061, norm(output): 0.4395, norm(x): 0.4143, norm(y): 1.0124, norm:1.8810, tok/sec: 99141.33, flops:104.05, batch-reuse:1
@ 3325 train 4.5028 , allloss: 4.5044, dt: 1332.01ms, fracRes: 0.3472, norm(attn): 0.2061, norm(output): 0.4395, norm(x): 0.4158, norm(y): 1.0124, norm:1.8238, tok/sec: 98401.73, flops:103.27, batch-reuse:1
@ 3326 train 4.4306 , allloss: 4.4328, dt: 1333.78ms, fracRes: 0.3478, norm(attn): 0.2080, norm(output): 0.4414, norm(x): 0.4170, norm(y): 1.0123, norm:1.7748, tok/sec: 98270.93, flops:103.14, batch-reuse:1
@ 3327 train 4.4188 , allloss: 4.4203, dt: 1320.06ms, fracRes: 0.3507, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4158, norm(y): 1.0125, norm:1.9936, tok/sec: 99292.49, flops:104.21, batch-reuse:1
@ 3328 train 4.3989 , allloss: 4.4010, dt: 1328.71ms, fracRes: 0.3478, norm(attn): 0.2061, norm(output): 0.4434, norm(x): 0.4166, norm(y): 1.0124, norm:1.7775, tok/sec: 98646.08, flops:103.53, batch-reuse:1
@ 3329 train 4.3870 , allloss: 4.3900, dt: 1284.97ms, fracRes: 0.3473, norm(attn): 0.2061, norm(output): 0.4434, norm(x): 0.4183, norm(y): 1.0123, norm:2.1511, tok/sec: 102003.61, flops:107.05, batch-reuse:1
@ 3330 train 4.3748 , allloss: 4.3761, dt: 1282.83ms, fracRes: 0.3504, norm(attn): 0.2041, norm(output): 0.4414, norm(x): 0.4159, norm(y): 1.0125, norm:1.9652, tok/sec: 102173.95, flops:107.23, batch-reuse:1
@ 3331 train 4.2003 , allloss: 4.2017, dt: 1307.40ms, fracRes: 0.3512, norm(attn): 0.2080, norm(output): 0.4434, norm(x): 0.4177, norm(y): 1.0125, norm:1.8691, tok/sec: 100253.68, flops:105.22, batch-reuse:1
@ 3332 train 4.4482 , allloss: 4.4496, dt: 1329.71ms, fracRes: 0.3494, norm(attn): 0.2041, norm(output): 0.4414, norm(x): 0.4170, norm(y): 1.0125, norm:1.7883, tok/sec: 98572.12, flops:103.45, batch-reuse:1
@ 3333 train 4.3842 , allloss: 4.3860, dt: 1321.77ms, fracRes: 0.3470, norm(attn): 0.2061, norm(output): 0.4414, norm(x): 0.4181, norm(y): 1.0124, norm:2.0151, tok/sec: 99163.68, flops:104.07, batch-reuse:1
@ 3334 train 4.4117 , allloss: 4.4154, dt: 1306.67ms, fracRes: 0.3499, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.4209, norm(y): 1.0123, norm:1.8989, tok/sec: 100309.77, flops:105.28, batch-reuse:1
@ 3335 train 4.3764 , allloss: 4.3784, dt: 1283.47ms, fracRes: 0.3489, norm(attn): 0.2051, norm(output): 0.4473, norm(x): 0.4213, norm(y): 1.0123, norm:2.0621, tok/sec: 102123.01, flops:107.18, batch-reuse:1
@ 3336 train 4.4870 , allloss: 4.4890, dt: 1324.22ms, fracRes: 0.3481, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.4213, norm(y): 1.0123, norm:1.5788, tok/sec: 98980.73, flops:103.88, batch-reuse:1
@ 3337 train 4.4122 , allloss: 4.4145, dt: 1300.26ms, fracRes: 0.3511, norm(attn): 0.2021, norm(output): 0.4414, norm(x): 0.4171, norm(y): 1.0124, norm:2.2630, tok/sec: 100804.69, flops:105.80, batch-reuse:1
@ 3338 train 4.3655 , allloss: 4.3678, dt: 1321.97ms, fracRes: 0.3496, norm(attn): 0.2061, norm(output): 0.4414, norm(x): 0.4165, norm(y): 1.0124, norm:1.7682, tok/sec: 99148.80, flops:104.06, batch-reuse:1
@ 3339 train 4.4345 , allloss: 4.4380, dt: 1294.59ms, fracRes: 0.3473, norm(attn): 0.2070, norm(output): 0.4434, norm(x): 0.4181, norm(y): 1.0123, norm:2.1583, tok/sec: 101246.20, flops:106.26, batch-reuse:1
@ 3340 train 4.3572 , allloss: 4.3590, dt: 1310.51ms, fracRes: 0.3499, norm(attn): 0.2070, norm(output): 0.4434, norm(x): 0.4147, norm(y): 1.0124, norm:1.7800, tok/sec: 100016.39, flops:104.97, batch-reuse:1
@ 3341 train 4.6879 , allloss: 4.6887, dt: 1293.52ms, fracRes: 0.3495, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.4139, norm(y): 1.0123, norm:2.2161, tok/sec: 101329.73, flops:106.35, batch-reuse:1
@ 3342 train 4.5858 , allloss: 4.5866, dt: 1286.25ms, fracRes: 0.3481, norm(attn): 0.2061, norm(output): 0.4414, norm(x): 0.4180, norm(y): 1.0123, norm:2.6990, tok/sec: 101902.27, flops:106.95, batch-reuse:1
@ 3343 train 4.5812 , allloss: 4.5838, dt: 1306.80ms, fracRes: 0.3499, norm(attn): 0.2041, norm(output): 0.4453, norm(x): 0.4200, norm(y): 1.0123, norm:2.5564, tok/sec: 100300.16, flops:105.27, batch-reuse:1
@ 3344 train 4.6540 , allloss: 4.6556, dt: 1329.07ms, fracRes: 0.3500, norm(attn): 0.2041, norm(output): 0.4473, norm(x): 0.4218, norm(y): 1.0124, norm:1.8474, tok/sec: 98619.28, flops:103.50, batch-reuse:1
@ 3345 train 4.5884 , allloss: 4.5900, dt: 1334.16ms, fracRes: 0.3491, norm(attn): 0.2031, norm(output): 0.4453, norm(x): 0.4208, norm(y): 1.0124, norm:2.0030, tok/sec: 98242.99, flops:103.11, batch-reuse:1
@ 3346 train 4.5482 , allloss: 4.5504, dt: 1306.20ms, fracRes: 0.3492, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4197, norm(y): 1.0124, norm:1.8248, tok/sec: 100345.95, flops:105.31, batch-reuse:1
@ 3347 train 4.5666 , allloss: 4.5676, dt: 1319.01ms, fracRes: 0.3480, norm(attn): 0.2090, norm(output): 0.4414, norm(x): 0.4193, norm(y): 1.0123, norm:1.7215, tok/sec: 99371.69, flops:104.29, batch-reuse:1
@ 3348 train 4.5292 , allloss: 4.5312, dt: 1310.70ms, fracRes: 0.3480, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4188, norm(y): 1.0124, norm:1.7269, tok/sec: 100001.88, flops:104.95, batch-reuse:1
@ 3349 train 4.5287 , allloss: 4.5303, dt: 1299.65ms, fracRes: 0.3516, norm(attn): 0.2061, norm(output): 0.4473, norm(x): 0.4199, norm(y): 1.0124, norm:2.2475, tok/sec: 100851.88, flops:105.85, batch-reuse:1
@ 3350 train 4.5577 , allloss: 4.5596, dt: 1314.73ms, fracRes: 0.3501, norm(attn): 0.2090, norm(output): 0.4414, norm(x): 0.4170, norm(y): 1.0124, norm:2.1764, tok/sec: 99695.23, flops:104.63, batch-reuse:1
@ 3351 train 4.6759 , allloss: 4.6775, dt: 1304.91ms, fracRes: 0.3484, norm(attn): 0.2100, norm(output): 0.4414, norm(x): 0.4186, norm(y): 1.0123, norm:2.3272, tok/sec: 100444.99, flops:105.42, batch-reuse:1
@ 3352 train 4.5999 , allloss: 4.6023, dt: 1295.07ms, fracRes: 0.3470, norm(attn): 0.2109, norm(output): 0.4395, norm(x): 0.4167, norm(y): 1.0123, norm:1.9381, tok/sec: 101208.14, flops:106.22, batch-reuse:1
@ 3353 train 4.6294 , allloss: 4.6317, dt: 1319.56ms, fracRes: 0.3485, norm(attn): 0.2080, norm(output): 0.4414, norm(x): 0.4185, norm(y): 1.0123, norm:1.9808, tok/sec: 99330.15, flops:104.25, batch-reuse:1
@ 3354 train 4.6080 , allloss: 4.6104, dt: 1325.63ms, fracRes: 0.3491, norm(attn): 0.2080, norm(output): 0.4434, norm(x): 0.4206, norm(y): 1.0124, norm:2.0755, tok/sec: 98875.50, flops:103.77, batch-reuse:1
@ 3355 train 4.6621 , allloss: 4.6638, dt: 1286.34ms, fracRes: 0.3495, norm(attn): 0.2041, norm(output): 0.4434, norm(x): 0.4209, norm(y): 1.0124, norm:1.6958, tok/sec: 101895.05, flops:106.94, batch-reuse:1
@ 3356 train 4.5850 , allloss: 4.5864, dt: 1307.64ms, fracRes: 0.3513, norm(attn): 0.2051, norm(output): 0.4434, norm(x): 0.4229, norm(y): 1.0124, norm:2.1211, tok/sec: 100235.46, flops:105.20, batch-reuse:1
@ 3357 train 4.5869 , allloss: 4.5891, dt: 1297.22ms, fracRes: 0.3497, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4243, norm(y): 1.0123, norm:1.7507, tok/sec: 101040.54, flops:106.04, batch-reuse:1
@ 3358 train 4.6333 , allloss: 4.6372, dt: 1283.81ms, fracRes: 0.3490, norm(attn): 0.2061, norm(output): 0.4453, norm(x): 0.4235, norm(y): 1.0124, norm:1.9492, tok/sec: 102095.85, flops:107.15, batch-reuse:1
@ 3359 train 4.5552 , allloss: 4.5570, dt: 1311.83ms, fracRes: 0.3474, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.4235, norm(y): 1.0124, norm:1.6279, tok/sec: 99915.45, flops:104.86, batch-reuse:1
@ 3360 train 4.5932 , allloss: 4.5942, dt: 1315.78ms, fracRes: 0.3469, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4226, norm(y): 1.0124, norm:2.1150, tok/sec: 99615.39, flops:104.55, batch-reuse:1
@ 3361 train 4.6240 , allloss: 4.6254, dt: 1300.50ms, fracRes: 0.3488, norm(attn): 0.2041, norm(output): 0.4434, norm(x): 0.4231, norm(y): 1.0124, norm:1.7126, tok/sec: 100785.90, flops:105.78, batch-reuse:1
@ 3362 train 4.5137 , allloss: 4.5150, dt: 1294.51ms, fracRes: 0.3491, norm(attn): 0.2061, norm(output): 0.4434, norm(x): 0.4218, norm(y): 1.0124, norm:1.7821, tok/sec: 101252.33, flops:106.27, batch-reuse:1
@ 3363 train 4.5936 , allloss: 4.5947, dt: 1303.24ms, fracRes: 0.3493, norm(attn): 0.2061, norm(output): 0.4453, norm(x): 0.4225, norm(y): 1.0123, norm:1.6501, tok/sec: 100573.60, flops:105.55, batch-reuse:1
@ 3364 train 4.5881 , allloss: 4.5898, dt: 1298.35ms, fracRes: 0.3507, norm(attn): 0.2080, norm(output): 0.4453, norm(x): 0.4218, norm(y): 1.0124, norm:1.7250, tok/sec: 100952.67, flops:105.95, batch-reuse:1
@ 3365 train 4.5681 , allloss: 4.5696, dt: 1295.33ms, fracRes: 0.3505, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4222, norm(y): 1.0124, norm:1.9173, tok/sec: 101188.19, flops:106.20, batch-reuse:1
@ 3366 train 4.7040 , allloss: 4.7071, dt: 1283.98ms, fracRes: 0.3511, norm(attn): 0.2051, norm(output): 0.4492, norm(x): 0.4244, norm(y): 1.0124, norm:1.9715, tok/sec: 102082.42, flops:107.14, batch-reuse:1
@ 3367 train 4.6035 , allloss: 4.6059, dt: 1293.32ms, fracRes: 0.3497, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4210, norm(y): 1.0124, norm:1.7928, tok/sec: 101345.23, flops:106.36, batch-reuse:1
@ 3368 train 4.6694 , allloss: 4.6710, dt: 1331.49ms, fracRes: 0.3491, norm(attn): 0.2080, norm(output): 0.4473, norm(x): 0.4193, norm(y): 1.0123, norm:1.8116, tok/sec: 98440.46, flops:103.32, batch-reuse:1
@ 3369 train 4.5994 , allloss: 4.6006, dt: 1319.05ms, fracRes: 0.3496, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4194, norm(y): 1.0123, norm:1.7354, tok/sec: 99368.17, flops:104.29, batch-reuse:1
@ 3370 train 4.5734 , allloss: 4.5750, dt: 1289.80ms, fracRes: 0.3517, norm(attn): 0.2061, norm(output): 0.4473, norm(x): 0.4211, norm(y): 1.0124, norm:1.8462, tok/sec: 101621.96, flops:106.65, batch-reuse:1
@ 3371 train 4.5572 , allloss: 4.5587, dt: 1323.31ms, fracRes: 0.3496, norm(attn): 0.2100, norm(output): 0.4473, norm(x): 0.4200, norm(y): 1.0124, norm:1.5344, tok/sec: 99048.34, flops:103.95, batch-reuse:1
@ 3372 train 4.5875 , allloss: 4.5885, dt: 1287.42ms, fracRes: 0.3504, norm(attn): 0.2061, norm(output): 0.4453, norm(x): 0.4196, norm(y): 1.0124, norm:1.9206, tok/sec: 101810.14, flops:106.85, batch-reuse:1
@ 3373 train 4.6167 , allloss: 4.6220, dt: 1327.04ms, fracRes: 0.3482, norm(attn): 0.2100, norm(output): 0.4473, norm(x): 0.4199, norm(y): 1.0124, norm:2.0600, tok/sec: 98770.52, flops:103.66, batch-reuse:1
@ 3374 train 4.5516 , allloss: 4.5535, dt: 1316.97ms, fracRes: 0.3482, norm(attn): 0.2100, norm(output): 0.4473, norm(x): 0.4212, norm(y): 1.0123, norm:1.7598, tok/sec: 99525.44, flops:104.45, batch-reuse:1
@ 3375 train 4.4969 , allloss: 4.4979, dt: 1323.70ms, fracRes: 0.3510, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.4188, norm(y): 1.0125, norm:1.8512, tok/sec: 99019.19, flops:103.92, batch-reuse:1
@ 3376 train 4.7470 , allloss: 4.7488, dt: 1309.37ms, fracRes: 0.3510, norm(attn): 0.2051, norm(output): 0.4531, norm(x): 0.4237, norm(y): 1.0125, norm:2.7017, tok/sec: 100102.97, flops:105.06, batch-reuse:1
@ 3377 train 4.7393 , allloss: 4.7438, dt: 1343.39ms, fracRes: 0.3555, norm(attn): 0.2041, norm(output): 0.4590, norm(x): 0.4355, norm(y): 1.0125, norm:7.1005, tok/sec: 97567.89, flops:102.40, batch-reuse:1
@ 3378 train 4.7004 , allloss: 4.7028, dt: 1324.40ms, fracRes: 0.3508, norm(attn): 0.2031, norm(output): 0.4531, norm(x): 0.4261, norm(y): 1.0124, norm:2.8165, tok/sec: 98967.17, flops:103.87, batch-reuse:1
@ 3379 train 4.5430 , allloss: 4.5447, dt: 1292.44ms, fracRes: 0.3506, norm(attn): 0.2070, norm(output): 0.4434, norm(x): 0.4193, norm(y): 1.0124, norm:1.8267, tok/sec: 101414.44, flops:106.44, batch-reuse:1
@ 3380 train 4.6049 , allloss: 4.6074, dt: 1319.76ms, fracRes: 0.3512, norm(attn): 0.2080, norm(output): 0.4414, norm(x): 0.4190, norm(y): 1.0125, norm:2.1423, tok/sec: 99315.36, flops:104.23, batch-reuse:1
@ 3381 train 4.5816 , allloss: 4.5836, dt: 1315.88ms, fracRes: 0.3514, norm(attn): 0.2090, norm(output): 0.4434, norm(x): 0.4190, norm(y): 1.0124, norm:1.9904, tok/sec: 99607.84, flops:104.54, batch-reuse:1
@ 3382 train 4.6300 , allloss: 4.6355, dt: 1307.13ms, fracRes: 0.3502, norm(attn): 0.2109, norm(output): 0.4492, norm(x): 0.4225, norm(y): 1.0123, norm:1.8477, tok/sec: 100274.31, flops:105.24, batch-reuse:1
@ 3383 train 4.6370 , allloss: 4.6390, dt: 1307.63ms, fracRes: 0.3529, norm(attn): 0.2041, norm(output): 0.4453, norm(x): 0.4199, norm(y): 1.0125, norm:2.1544, tok/sec: 100236.43, flops:105.20, batch-reuse:1
@ 3384 train 4.5744 , allloss: 4.5761, dt: 1310.86ms, fracRes: 0.3511, norm(attn): 0.2031, norm(output): 0.4473, norm(x): 0.4222, norm(y): 1.0126, norm:1.8641, tok/sec: 99989.49, flops:104.94, batch-reuse:1
@ 3385 train 4.5361 , allloss: 4.5383, dt: 1307.51ms, fracRes: 0.3502, norm(attn): 0.2031, norm(output): 0.4473, norm(x): 0.4236, norm(y): 1.0124, norm:2.0006, tok/sec: 100245.17, flops:105.21, batch-reuse:1
@ 3386 train 4.7356 , allloss: 4.7369, dt: 1321.40ms, fracRes: 0.3501, norm(attn): 0.2041, norm(output): 0.4570, norm(x): 0.4264, norm(y): 1.0123, norm:2.1325, tok/sec: 99192.09, flops:104.10, batch-reuse:1
@ 3387 train 4.6057 , allloss: 4.6068, dt: 1315.91ms, fracRes: 0.3517, norm(attn): 0.2021, norm(output): 0.4473, norm(x): 0.4219, norm(y): 1.0124, norm:2.2408, tok/sec: 99605.88, flops:104.54, batch-reuse:1
@ 3388 train 4.4896 , allloss: 4.4909, dt: 1348.17ms, fracRes: 0.3514, norm(attn): 0.2051, norm(output): 0.4512, norm(x): 0.4212, norm(y): 1.0125, norm:1.5902, tok/sec: 97222.21, flops:102.04, batch-reuse:1
@ 3389 train 4.5348 , allloss: 4.5377, dt: 1326.62ms, fracRes: 0.3516, norm(attn): 0.2051, norm(output): 0.4512, norm(x): 0.4211, norm(y): 1.0124, norm:1.9823, tok/sec: 98801.28, flops:103.69, batch-reuse:1
@ 3390 train 4.6733 , allloss: 4.6749, dt: 1297.96ms, fracRes: 0.3521, norm(attn): 0.2070, norm(output): 0.4492, norm(x): 0.4231, norm(y): 1.0123, norm:1.9840, tok/sec: 100982.82, flops:105.98, batch-reuse:1
@ 3391 train 4.6326 , allloss: 4.6346, dt: 1331.77ms, fracRes: 0.3523, norm(attn): 0.2051, norm(output): 0.4473, norm(x): 0.4202, norm(y): 1.0124, norm:1.7933, tok/sec: 98419.42, flops:103.29, batch-reuse:1
@ 3392 train 4.5448 , allloss: 4.5465, dt: 1306.36ms, fracRes: 0.3525, norm(attn): 0.2051, norm(output): 0.4492, norm(x): 0.4194, norm(y): 1.0125, norm:1.6689, tok/sec: 100333.79, flops:105.30, batch-reuse:1
@ 3393 train 4.6796 , allloss: 4.6805, dt: 1290.11ms, fracRes: 0.3516, norm(attn): 0.2041, norm(output): 0.4512, norm(x): 0.4210, norm(y): 1.0125, norm:1.6846, tok/sec: 101597.60, flops:106.63, batch-reuse:1
@ 3394 train 4.6201 , allloss: 4.6209, dt: 1321.87ms, fracRes: 0.3507, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.4190, norm(y): 1.0123, norm:1.6296, tok/sec: 99156.47, flops:104.07, batch-reuse:1
@ 3395 train 4.5685 , allloss: 4.5700, dt: 1340.45ms, fracRes: 0.3490, norm(attn): 0.2080, norm(output): 0.4473, norm(x): 0.4206, norm(y): 1.0123, norm:1.6906, tok/sec: 97782.10, flops:102.62, batch-reuse:1
@ 3396 train 4.5834 , allloss: 4.5868, dt: 1298.15ms, fracRes: 0.3485, norm(attn): 0.2070, norm(output): 0.4512, norm(x): 0.4221, norm(y): 1.0123, norm:1.5599, tok/sec: 100968.15, flops:105.97, batch-reuse:1
@ 3397 train 4.5511 , allloss: 4.5536, dt: 1296.55ms, fracRes: 0.3499, norm(attn): 0.2080, norm(output): 0.4473, norm(x): 0.4210, norm(y): 1.0124, norm:1.7237, tok/sec: 101092.56, flops:106.10, batch-reuse:1
@ 3398 train 4.6509 , allloss: 4.6530, dt: 1303.87ms, fracRes: 0.3509, norm(attn): 0.2061, norm(output): 0.4473, norm(x): 0.4205, norm(y): 1.0124, norm:1.6280, tok/sec: 100525.62, flops:105.50, batch-reuse:1
@ 3399 train 4.5597 , allloss: 4.5614, dt: 1322.16ms, fracRes: 0.3482, norm(attn): 0.2090, norm(output): 0.4492, norm(x): 0.4209, norm(y): 1.0123, norm:1.6241, tok/sec: 99134.77, flops:104.04, batch-reuse:1
@ 3400 train 4.5952 , allloss: 4.5961, dt: 1326.70ms, fracRes: 0.3491, norm(attn): 0.2090, norm(output): 0.4492, norm(x): 0.4233, norm(y): 1.0124, norm:1.9194, tok/sec: 98795.58, flops:103.69, batch-reuse:1
@ 3401 train 4.5747 , allloss: 4.5756, dt: 1333.59ms, fracRes: 0.3504, norm(attn): 0.2080, norm(output): 0.4473, norm(x): 0.4216, norm(y): 1.0125, norm:1.6860, tok/sec: 98284.73, flops:103.15, batch-reuse:1
@ 3402 train 4.5899 , allloss: 4.5935, dt: 1319.95ms, fracRes: 0.3510, norm(attn): 0.2090, norm(output): 0.4531, norm(x): 0.4253, norm(y): 1.0124, norm:1.9314, tok/sec: 99300.62, flops:104.22, batch-reuse:1
@ 3403 train 4.5621 , allloss: 4.5631, dt: 1298.71ms, fracRes: 0.3491, norm(attn): 0.2109, norm(output): 0.4473, norm(x): 0.4233, norm(y): 1.0124, norm:1.5647, tok/sec: 100924.48, flops:105.92, batch-reuse:1
@ 3404 train 4.5237 , allloss: 4.5252, dt: 1336.30ms, fracRes: 0.3496, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4235, norm(y): 1.0124, norm:1.5458, tok/sec: 98085.47, flops:102.94, batch-reuse:1
@ 3405 train 4.5307 , allloss: 4.5319, dt: 1325.70ms, fracRes: 0.3504, norm(attn): 0.2090, norm(output): 0.4512, norm(x): 0.4240, norm(y): 1.0124, norm:1.8414, tok/sec: 98869.76, flops:103.77, batch-reuse:1
@ 3406 train 4.5262 , allloss: 4.5278, dt: 1305.14ms, fracRes: 0.3495, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4220, norm(y): 1.0124, norm:1.8655, tok/sec: 100427.67, flops:105.40, batch-reuse:1
@ 3407 train 4.5582 , allloss: 4.5593, dt: 1324.38ms, fracRes: 0.3487, norm(attn): 0.2080, norm(output): 0.4453, norm(x): 0.4197, norm(y): 1.0124, norm:1.5303, tok/sec: 98968.56, flops:103.87, batch-reuse:1
@ 3408 train 4.5375 , allloss: 4.5388, dt: 1319.37ms, fracRes: 0.3471, norm(attn): 0.2109, norm(output): 0.4453, norm(x): 0.4218, norm(y): 1.0124, norm:1.8054, tok/sec: 99344.11, flops:104.26, batch-reuse:1
@ 3409 train 4.6340 , allloss: 4.6353, dt: 1349.23ms, fracRes: 0.3476, norm(attn): 0.2061, norm(output): 0.4492, norm(x): 0.4266, norm(y): 1.0123, norm:1.7552, tok/sec: 97146.00, flops:101.96, batch-reuse:1
@ 3410 train 4.6248 , allloss: 4.6260, dt: 1298.77ms, fracRes: 0.3493, norm(attn): 0.2061, norm(output): 0.4512, norm(x): 0.4261, norm(y): 1.0124, norm:1.9207, tok/sec: 100919.73, flops:105.92, batch-reuse:1
@ 3411 train 4.6069 , allloss: 4.6081, dt: 1338.91ms, fracRes: 0.3482, norm(attn): 0.2080, norm(output): 0.4492, norm(x): 0.4221, norm(y): 1.0124, norm:1.8089, tok/sec: 97894.55, flops:102.74, batch-reuse:1
@ 3412 train 4.5972 , allloss: 4.5991, dt: 1335.21ms, fracRes: 0.3506, norm(attn): 0.2051, norm(output): 0.4531, norm(x): 0.4244, norm(y): 1.0124, norm:1.9659, tok/sec: 98165.58, flops:103.03, batch-reuse:1
@ 3413 train 4.6675 , allloss: 4.6688, dt: 1311.41ms, fracRes: 0.3495, norm(attn): 0.2070, norm(output): 0.4512, norm(x): 0.4238, norm(y): 1.0124, norm:2.1082, tok/sec: 99947.70, flops:104.90, batch-reuse:1
@ 3414 train 4.5556 , allloss: 4.5569, dt: 1341.86ms, fracRes: 0.3483, norm(attn): 0.2061, norm(output): 0.4473, norm(x): 0.4192, norm(y): 1.0124, norm:1.7513, tok/sec: 97679.08, flops:102.52, batch-reuse:1
@ 3415 train 4.5316 , allloss: 4.5364, dt: 1339.69ms, fracRes: 0.3493, norm(attn): 0.2070, norm(output): 0.4473, norm(x): 0.4214, norm(y): 1.0125, norm:1.9618, tok/sec: 97837.49, flops:102.68, batch-reuse:1
@ 3416 train 4.6119 , allloss: 4.6145, dt: 1333.77ms, fracRes: 0.3526, norm(attn): 0.2070, norm(output): 0.4551, norm(x): 0.4240, norm(y): 1.0125, norm:1.9470, tok/sec: 98271.50, flops:103.14, batch-reuse:1
@ 3417 train 4.5197 , allloss: 4.5215, dt: 1299.13ms, fracRes: 0.3513, norm(attn): 0.2090, norm(output): 0.4531, norm(x): 0.4230, norm(y): 1.0124, norm:1.9145, tok/sec: 100891.88, flops:105.89, batch-reuse:1
@ 3418 train 4.4888 , allloss: 4.4902, dt: 1314.25ms, fracRes: 0.3507, norm(attn): 0.2080, norm(output): 0.4492, norm(x): 0.4213, norm(y): 1.0124, norm:1.8733, tok/sec: 99731.55, flops:104.67, batch-reuse:1
@ 3419 train 4.5386 , allloss: 4.5407, dt: 1322.89ms, fracRes: 0.3512, norm(attn): 0.2100, norm(output): 0.4531, norm(x): 0.4237, norm(y): 1.0124, norm:1.8090, tok/sec: 99080.18, flops:103.99, batch-reuse:1
@ 3420 train 4.5537 , allloss: 4.5550, dt: 1350.21ms, fracRes: 0.3500, norm(attn): 0.2090, norm(output): 0.4512, norm(x): 0.4226, norm(y): 1.0125, norm:1.5567, tok/sec: 97075.38, flops:101.88, batch-reuse:1
@ 3421 train 4.5808 , allloss: 4.5823, dt: 1310.45ms, fracRes: 0.3503, norm(attn): 0.2070, norm(output): 0.4531, norm(x): 0.4236, norm(y): 1.0124, norm:1.6991, tok/sec: 100020.85, flops:104.97, batch-reuse:1
@ 3422 train 4.5843 , allloss: 4.5860, dt: 1320.56ms, fracRes: 0.3536, norm(attn): 0.2041, norm(output): 0.4492, norm(x): 0.4227, norm(y): 1.0126, norm:1.8537, tok/sec: 99254.59, flops:104.17, batch-reuse:1
@ 3423 train 4.5416 , allloss: 4.5436, dt: 1308.37ms, fracRes: 0.3516, norm(attn): 0.2051, norm(output): 0.4551, norm(x): 0.4246, norm(y): 1.0125, norm:1.8622, tok/sec: 100179.86, flops:105.14, batch-reuse:1
@ 3424 train 4.5947 , allloss: 4.6006, dt: 1272.69ms, fracRes: 0.3508, norm(attn): 0.2061, norm(output): 0.4512, norm(x): 0.4248, norm(y): 1.0124, norm:1.6751, tok/sec: 102988.13, flops:108.09, batch-reuse:1
@ 3425 train 4.5818 , allloss: 4.5847, dt: 1272.23ms, fracRes: 0.3519, norm(attn): 0.2070, norm(output): 0.4551, norm(x): 0.4224, norm(y): 1.0124, norm:1.8301, tok/sec: 103025.71, flops:108.13, batch-reuse:1
@ 3426 train 4.5371 , allloss: 4.5421, dt: 1289.78ms, fracRes: 0.3501, norm(attn): 0.2090, norm(output): 0.4492, norm(x): 0.4213, norm(y): 1.0124, norm:1.6588, tok/sec: 101623.71, flops:106.66, batch-reuse:1
@ 3427 train 4.5762 , allloss: 4.5774, dt: 1307.70ms, fracRes: 0.3508, norm(attn): 0.2080, norm(output): 0.4473, norm(x): 0.4226, norm(y): 1.0124, norm:1.6918, tok/sec: 100231.24, flops:105.19, batch-reuse:1
@ 3428 train 4.4988 , allloss: 4.5007, dt: 1299.65ms, fracRes: 0.3495, norm(attn): 0.2090, norm(output): 0.4531, norm(x): 0.4228, norm(y): 1.0125, norm:2.1004, tok/sec: 100851.44, flops:105.85, batch-reuse:1
@ 3429 train 4.5012 , allloss: 4.5032, dt: 1330.00ms, fracRes: 0.3485, norm(attn): 0.2100, norm(output): 0.4492, norm(x): 0.4233, norm(y): 1.0124, norm:2.9528, tok/sec: 98550.22, flops:103.43, batch-reuse:1
@ 3430 train 4.7473 , allloss: 4.7489, dt: 1322.59ms, fracRes: 0.3477, norm(attn): 0.2070, norm(output): 0.4453, norm(x): 0.4203, norm(y): 1.0124, norm:2.5016, tok/sec: 99102.35, flops:104.01, batch-reuse:1
@ 3431 train 4.6980 , allloss: 4.7034, dt: 1293.73ms, fracRes: 0.3533, norm(attn): 0.2031, norm(output): 0.4531, norm(x): 0.4240, norm(y): 1.0124, norm:3.0536, tok/sec: 101312.96, flops:106.33, batch-reuse:1
@ 3432 train 4.4788 , allloss: 4.4815, dt: 1297.45ms, fracRes: 0.3474, norm(attn): 0.2109, norm(output): 0.4590, norm(x): 0.4279, norm(y): 1.0124, norm:2.9398, tok/sec: 101022.42, flops:106.02, batch-reuse:1
@ 3433 train 4.5656 , allloss: 4.5684, dt: 1309.43ms, fracRes: 0.3496, norm(attn): 0.2080, norm(output): 0.4570, norm(x): 0.4249, norm(y): 1.0125, norm:2.6314, tok/sec: 100098.67, flops:105.06, batch-reuse:1
@ 3434 train 4.5542 , allloss: 4.5576, dt: 1327.37ms, fracRes: 0.3526, norm(attn): 0.2090, norm(output): 0.4492, norm(x): 0.4213, norm(y): 1.0126, norm:2.3094, tok/sec: 98745.79, flops:103.64, batch-reuse:1
@ 3435 train 4.5230 , allloss: 4.5250, dt: 1326.67ms, fracRes: 0.3522, norm(attn): 0.2080, norm(output): 0.4453, norm(x): 0.4168, norm(y): 1.0126, norm:2.0984, tok/sec: 98797.71, flops:103.69, batch-reuse:1
@ 3436 train 4.5555 , allloss: 4.5601, dt: 1290.80ms, fracRes: 0.3514, norm(attn): 0.2109, norm(output): 0.4453, norm(x): 0.4196, norm(y): 1.0124, norm:1.7509, tok/sec: 101543.35, flops:106.57, batch-reuse:1
@ 3437 train 4.5151 , allloss: 4.5161, dt: 1316.22ms, fracRes: 0.3503, norm(attn): 0.2129, norm(output): 0.4531, norm(x): 0.4212, norm(y): 1.0124, norm:2.0452, tok/sec: 99582.49, flops:104.51, batch-reuse:1
@ 3438 train 4.5829 , allloss: 4.5846, dt: 1329.96ms, fracRes: 0.3525, norm(attn): 0.2070, norm(output): 0.4531, norm(x): 0.4216, norm(y): 1.0124, norm:1.8985, tok/sec: 98553.17, flops:103.43, batch-reuse:1
@ 3439 train 4.4658 , allloss: 4.4675, dt: 1307.24ms, fracRes: 0.3524, norm(attn): 0.2119, norm(output): 0.4453, norm(x): 0.4223, norm(y): 1.0124, norm:2.0095, tok/sec: 100265.92, flops:105.23, batch-reuse:1
@ 3440 train 4.4214 , allloss: 4.4226, dt: 1324.24ms, fracRes: 0.3515, norm(attn): 0.2129, norm(output): 0.4492, norm(x): 0.4230, norm(y): 1.0124, norm:1.7209, tok/sec: 98978.86, flops:103.88, batch-reuse:1
@ 3441 train 4.5525 , allloss: 4.5538, dt: 1311.48ms, fracRes: 0.3500, norm(attn): 0.2129, norm(output): 0.4531, norm(x): 0.4257, norm(y): 1.0124, norm:2.0907, tok/sec: 99942.39, flops:104.89, batch-reuse:1
@ 3442 train 4.5313 , allloss: 4.5337, dt: 1285.01ms, fracRes: 0.3486, norm(attn): 0.2139, norm(output): 0.4492, norm(x): 0.4263, norm(y): 1.0124, norm:1.6180, tok/sec: 102000.70, flops:107.05, batch-reuse:1
@ 3443 train 4.5125 , allloss: 4.5164, dt: 1305.35ms, fracRes: 0.3504, norm(attn): 0.2090, norm(output): 0.4609, norm(x): 0.4276, norm(y): 1.0125, norm:2.2248, tok/sec: 100411.38, flops:105.38, batch-reuse:1
@ 3444 train 4.4862 , allloss: 4.4873, dt: 1285.48ms, fracRes: 0.3499, norm(attn): 0.2119, norm(output): 0.4492, norm(x): 0.4238, norm(y): 1.0125, norm:1.9511, tok/sec: 101963.39, flops:107.01, batch-reuse:1
@ 3445 train 4.5055 , allloss: 4.5087, dt: 1288.81ms, fracRes: 0.3497, norm(attn): 0.2100, norm(output): 0.4609, norm(x): 0.4270, norm(y): 1.0124, norm:1.8374, tok/sec: 101700.15, flops:106.74, batch-reuse:1
@ 3446 train 4.5253 , allloss: 4.5269, dt: 1311.45ms, fracRes: 0.3533, norm(attn): 0.2061, norm(output): 0.4512, norm(x): 0.4264, norm(y): 1.0125, norm:2.4209, tok/sec: 99944.28, flops:104.89, batch-reuse:1
@ 3447 train 4.5466 , allloss: 4.5475, dt: 1321.59ms, fracRes: 0.3552, norm(attn): 0.2021, norm(output): 0.4512, norm(x): 0.4223, norm(y): 1.0126, norm:1.9094, tok/sec: 99177.35, flops:104.09, batch-reuse:1
@ 3448 train 4.4908 , allloss: 4.4918, dt: 1295.62ms, fracRes: 0.3553, norm(attn): 0.2041, norm(output): 0.4570, norm(x): 0.4245, norm(y): 1.0125, norm:2.1665, tok/sec: 101165.52, flops:106.18, batch-reuse:1
@ 3449 train 4.5306 , allloss: 4.5365, dt: 1306.65ms, fracRes: 0.3552, norm(attn): 0.2031, norm(output): 0.4531, norm(x): 0.4230, norm(y): 1.0125, norm:1.8364, tok/sec: 100311.82, flops:105.28, batch-reuse:1
@ 3450 train 4.4687 , allloss: 4.4702, dt: 1321.02ms, fracRes: 0.3553, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.4206, norm(y): 1.0126, norm:2.0183, tok/sec: 99220.58, flops:104.13, batch-reuse:1
@ 3451 train 4.5483 , allloss: 4.5510, dt: 1307.15ms, fracRes: 0.3547, norm(attn): 0.2051, norm(output): 0.4570, norm(x): 0.4249, norm(y): 1.0126, norm:1.7941, tok/sec: 100273.07, flops:105.24, batch-reuse:1
@ 3452 train 4.5342 , allloss: 4.5354, dt: 1296.57ms, fracRes: 0.3543, norm(attn): 0.2012, norm(output): 0.4609, norm(x): 0.4248, norm(y): 1.0126, norm:1.6512, tok/sec: 101091.26, flops:106.10, batch-reuse:1
@ 3453 train 4.5346 , allloss: 4.5367, dt: 1286.50ms, fracRes: 0.3524, norm(attn): 0.2061, norm(output): 0.4609, norm(x): 0.4251, norm(y): 1.0126, norm:1.6499, tok/sec: 101882.44, flops:106.93, batch-reuse:1
@ 3454 train 4.5469 , allloss: 4.5479, dt: 1292.16ms, fracRes: 0.3489, norm(attn): 0.2061, norm(output): 0.4492, norm(x): 0.4239, norm(y): 1.0125, norm:2.0406, tok/sec: 101436.28, flops:106.46, batch-reuse:1
@ 3455 train 4.5232 , allloss: 4.5249, dt: 1273.73ms, fracRes: 0.3497, norm(attn): 0.2100, norm(output): 0.4551, norm(x): 0.4284, norm(y): 1.0126, norm:2.3851, tok/sec: 102904.07, flops:108.00, batch-reuse:1
@ 3456 train 4.4712 , allloss: 4.4740, dt: 1270.20ms, fracRes: 0.3468, norm(attn): 0.2109, norm(output): 0.4590, norm(x): 0.4270, norm(y): 1.0125, norm:1.9883, tok/sec: 103189.87, flops:108.30, batch-reuse:1
@ 3457 train 4.4760 , allloss: 4.4773, dt: 1278.30ms, fracRes: 0.3470, norm(attn): 0.2139, norm(output): 0.4551, norm(x): 0.4282, norm(y): 1.0125, norm:2.0121, tok/sec: 102535.95, flops:107.61, batch-reuse:1
@ 3458 train 4.4426 , allloss: 4.4439, dt: 1300.72ms, fracRes: 0.3482, norm(attn): 0.2129, norm(output): 0.4590, norm(x): 0.4279, norm(y): 1.0125, norm:1.8595, tok/sec: 100768.97, flops:105.76, batch-reuse:1
@ 3459 train 4.5136 , allloss: 4.5149, dt: 1309.19ms, fracRes: 0.3494, norm(attn): 0.2119, norm(output): 0.4609, norm(x): 0.4293, norm(y): 1.0126, norm:1.9099, tok/sec: 100117.21, flops:105.07, batch-reuse:1
@ 3460 train 4.5775 , allloss: 4.5794, dt: 1301.02ms, fracRes: 0.3503, norm(attn): 0.2070, norm(output): 0.4609, norm(x): 0.4298, norm(y): 1.0126, norm:1.6303, tok/sec: 100745.58, flops:105.73, batch-reuse:1
@ 3461 train 4.4798 , allloss: 4.4810, dt: 1291.80ms, fracRes: 0.3507, norm(attn): 0.2061, norm(output): 0.4570, norm(x): 0.4257, norm(y): 1.0125, norm:1.8585, tok/sec: 101464.30, flops:106.49, batch-reuse:1
@ 3462 train 4.5015 , allloss: 4.5053, dt: 1306.70ms, fracRes: 0.3519, norm(attn): 0.2100, norm(output): 0.4629, norm(x): 0.4283, norm(y): 1.0125, norm:1.9488, tok/sec: 100307.77, flops:105.27, batch-reuse:1
@ 3463 train 4.5318 , allloss: 4.5330, dt: 1335.42ms, fracRes: 0.3534, norm(attn): 0.2041, norm(output): 0.4629, norm(x): 0.4281, norm(y): 1.0126, norm:1.5414, tok/sec: 98150.72, flops:103.01, batch-reuse:1
@ 3464 train 4.3623 , allloss: 4.3635, dt: 1332.79ms, fracRes: 0.3533, norm(attn): 0.2061, norm(output): 0.4590, norm(x): 0.4246, norm(y): 1.0126, norm:1.7967, tok/sec: 98344.14, flops:103.21, batch-reuse:1
@ 3465 train 4.4913 , allloss: 4.4941, dt: 1307.60ms, fracRes: 0.3532, norm(attn): 0.2051, norm(output): 0.4609, norm(x): 0.4278, norm(y): 1.0125, norm:1.9284, tok/sec: 100238.84, flops:105.20, batch-reuse:1
@ 3466 train 4.5059 , allloss: 4.5084, dt: 1305.50ms, fracRes: 0.3533, norm(attn): 0.2051, norm(output): 0.4629, norm(x): 0.4255, norm(y): 1.0125, norm:1.7045, tok/sec: 100400.06, flops:105.37, batch-reuse:1
@ 3467 train 4.5205 , allloss: 4.5233, dt: 1311.70ms, fracRes: 0.3539, norm(attn): 0.2041, norm(output): 0.4590, norm(x): 0.4268, norm(y): 1.0126, norm:1.6930, tok/sec: 99925.17, flops:104.87, batch-reuse:1
@ 3468 train 4.4409 , allloss: 4.4426, dt: 1305.30ms, fracRes: 0.3511, norm(attn): 0.2080, norm(output): 0.4551, norm(x): 0.4243, norm(y): 1.0125, norm:1.6862, tok/sec: 100414.86, flops:105.39, batch-reuse:1
@ 3469 train 4.5001 , allloss: 4.5016, dt: 1296.12ms, fracRes: 0.3527, norm(attn): 0.2051, norm(output): 0.4629, norm(x): 0.4265, norm(y): 1.0125, norm:1.8701, tok/sec: 101126.43, flops:106.13, batch-reuse:1
@ 3470 train 4.5872 , allloss: 4.5893, dt: 1323.04ms, fracRes: 0.3527, norm(attn): 0.2051, norm(output): 0.4570, norm(x): 0.4260, norm(y): 1.0125, norm:1.6587, tok/sec: 99068.97, flops:103.97, batch-reuse:1
@ 3471 train 4.5094 , allloss: 4.5111, dt: 1329.15ms, fracRes: 0.3534, norm(attn): 0.2109, norm(output): 0.4609, norm(x): 0.4293, norm(y): 1.0124, norm:1.8013, tok/sec: 98613.26, flops:103.50, batch-reuse:1
@ 3472 train 4.5052 , allloss: 4.5063, dt: 1322.24ms, fracRes: 0.3507, norm(attn): 0.2090, norm(output): 0.4551, norm(x): 0.4267, norm(y): 1.0125, norm:1.8340, tok/sec: 99128.83, flops:104.04, batch-reuse:1
@ 3473 train 4.4420 , allloss: 4.4460, dt: 1324.86ms, fracRes: 0.3500, norm(attn): 0.2119, norm(output): 0.4590, norm(x): 0.4287, norm(y): 1.0125, norm:1.7905, tok/sec: 98932.48, flops:103.83, batch-reuse:1
@ 3474 train 4.4884 , allloss: 4.4963, dt: 1325.43ms, fracRes: 0.3499, norm(attn): 0.2109, norm(output): 0.4609, norm(x): 0.4299, norm(y): 1.0125, norm:1.8669, tok/sec: 98890.53, flops:103.79, batch-reuse:1
@ 3475 train 4.3477 , allloss: 4.3498, dt: 1292.03ms, fracRes: 0.3486, norm(attn): 0.2139, norm(output): 0.4570, norm(x): 0.4256, norm(y): 1.0125, norm:1.7962, tok/sec: 101446.52, flops:106.47, batch-reuse:1
@ 3476 train 4.4322 , allloss: 4.4343, dt: 1305.20ms, fracRes: 0.3495, norm(attn): 0.2119, norm(output): 0.4609, norm(x): 0.4265, norm(y): 1.0125, norm:1.6959, tok/sec: 100423.19, flops:105.40, batch-reuse:1
@ 3477 train 4.3712 , allloss: 4.3733, dt: 1317.06ms, fracRes: 0.3491, norm(attn): 0.2148, norm(output): 0.4570, norm(x): 0.4268, norm(y): 1.0125, norm:1.6746, tok/sec: 99518.37, flops:104.45, batch-reuse:1
@ 3478 train 4.4487 , allloss: 4.4509, dt: 1340.89ms, fracRes: 0.3505, norm(attn): 0.2129, norm(output): 0.4551, norm(x): 0.4241, norm(y): 1.0126, norm:1.8628, tok/sec: 97750.18, flops:102.59, batch-reuse:1
@ 3479 train 4.3277 , allloss: 4.3310, dt: 1315.44ms, fracRes: 0.3507, norm(attn): 0.2139, norm(output): 0.4551, norm(x): 0.4238, norm(y): 1.0126, norm:1.8644, tok/sec: 99641.50, flops:104.58, batch-reuse:1
@ 3480 train 4.4614 , allloss: 4.4628, dt: 1331.13ms, fracRes: 0.3497, norm(attn): 0.2119, norm(output): 0.4531, norm(x): 0.4256, norm(y): 1.0125, norm:1.7187, tok/sec: 98467.05, flops:103.34, batch-reuse:1
@ 3481 train 4.4635 , allloss: 4.4650, dt: 1338.94ms, fracRes: 0.3520, norm(attn): 0.2119, norm(output): 0.4570, norm(x): 0.4271, norm(y): 1.0125, norm:1.9938, tok/sec: 97892.51, flops:102.74, batch-reuse:1
@ 3482 train 4.3291 , allloss: 4.3321, dt: 1330.87ms, fracRes: 0.3524, norm(attn): 0.2158, norm(output): 0.4609, norm(x): 0.4318, norm(y): 1.0125, norm:2.2095, tok/sec: 98486.08, flops:103.36, batch-reuse:1
@ 3483 train 4.4258 , allloss: 4.4306, dt: 1326.60ms, fracRes: 0.3500, norm(attn): 0.2119, norm(output): 0.4551, norm(x): 0.4254, norm(y): 1.0125, norm:2.0826, tok/sec: 98803.27, flops:103.70, batch-reuse:1
@ 3484 train 4.4163 , allloss: 4.4218, dt: 1300.64ms, fracRes: 0.3508, norm(attn): 0.2090, norm(output): 0.4570, norm(x): 0.4256, norm(y): 1.0126, norm:1.9331, tok/sec: 100774.87, flops:105.77, batch-reuse:1
@ 3485 train 4.3818 , allloss: 4.3890, dt: 1284.87ms, fracRes: 0.3511, norm(attn): 0.2129, norm(output): 0.4531, norm(x): 0.4246, norm(y): 1.0125, norm:1.4748, tok/sec: 102011.60, flops:107.06, batch-reuse:1
@ 3486 train 4.4285 , allloss: 4.4303, dt: 1314.46ms, fracRes: 0.3507, norm(attn): 0.2148, norm(output): 0.4590, norm(x): 0.4258, norm(y): 1.0125, norm:1.9848, tok/sec: 99715.54, flops:104.65, batch-reuse:1
@ 3487 train 4.3154 , allloss: 4.3174, dt: 1284.23ms, fracRes: 0.3507, norm(attn): 0.2100, norm(output): 0.4590, norm(x): 0.4244, norm(y): 1.0125, norm:1.6815, tok/sec: 102062.96, flops:107.12, batch-reuse:1
@ 3488 train 4.4362 , allloss: 4.4380, dt: 1306.49ms, fracRes: 0.3525, norm(attn): 0.2051, norm(output): 0.4629, norm(x): 0.4273, norm(y): 1.0126, norm:1.5607, tok/sec: 100323.41, flops:105.29, batch-reuse:1
@ 3489 train 4.4107 , allloss: 4.4138, dt: 1328.33ms, fracRes: 0.3540, norm(attn): 0.2080, norm(output): 0.4629, norm(x): 0.4278, norm(y): 1.0126, norm:1.6547, tok/sec: 98674.01, flops:103.56, batch-reuse:1
@ 3490 train 4.3489 , allloss: 4.3501, dt: 1282.64ms, fracRes: 0.3532, norm(attn): 0.2090, norm(output): 0.4551, norm(x): 0.4258, norm(y): 1.0125, norm:1.6336, tok/sec: 102189.18, flops:107.25, batch-reuse:1
@ 3491 train 4.3389 , allloss: 4.3432, dt: 1271.09ms, fracRes: 0.3527, norm(attn): 0.2109, norm(output): 0.4609, norm(x): 0.4276, norm(y): 1.0125, norm:1.6967, tok/sec: 103117.60, flops:108.22, batch-reuse:1
@ 3492 train 4.4139 , allloss: 4.4154, dt: 1315.39ms, fracRes: 0.3533, norm(attn): 0.2090, norm(output): 0.4609, norm(x): 0.4242, norm(y): 1.0126, norm:1.6747, tok/sec: 99644.60, flops:104.58, batch-reuse:1
@ 3493 train 4.3887 , allloss: 4.3907, dt: 1344.33ms, fracRes: 0.3533, norm(attn): 0.2109, norm(output): 0.4609, norm(x): 0.4256, norm(y): 1.0126, norm:1.5670, tok/sec: 97499.83, flops:102.33, batch-reuse:1
@ 3494 train 4.3784 , allloss: 4.3822, dt: 1332.99ms, fracRes: 0.3515, norm(attn): 0.2100, norm(output): 0.4648, norm(x): 0.4280, norm(y): 1.0125, norm:1.8294, tok/sec: 98329.34, flops:103.20, batch-reuse:1
@ 3495 train 4.3907 , allloss: 4.3954, dt: 1291.89ms, fracRes: 0.3529, norm(attn): 0.2100, norm(output): 0.4590, norm(x): 0.4282, norm(y): 1.0126, norm:1.5858, tok/sec: 101457.75, flops:106.48, batch-reuse:1
@ 3496 train 4.4273 , allloss: 4.4290, dt: 1326.67ms, fracRes: 0.3516, norm(attn): 0.2109, norm(output): 0.4609, norm(x): 0.4296, norm(y): 1.0126, norm:1.9824, tok/sec: 98798.01, flops:103.69, batch-reuse:1
@ 3497 train 4.3694 , allloss: 4.3721, dt: 1298.32ms, fracRes: 0.3514, norm(attn): 0.2119, norm(output): 0.4609, norm(x): 0.4269, norm(y): 1.0125, norm:1.8021, tok/sec: 100954.87, flops:105.95, batch-reuse:1
@ 3498 train 4.3832 , allloss: 4.3848, dt: 1304.54ms, fracRes: 0.3521, norm(attn): 0.2109, norm(output): 0.4609, norm(x): 0.4265, norm(y): 1.0126, norm:2.2305, tok/sec: 100473.44, flops:105.45, batch-reuse:1
@ 3499 train 4.4120 , allloss: 4.4134, dt: 1296.83ms, fracRes: 0.3524, norm(attn): 0.2100, norm(output): 0.4590, norm(x): 0.4266, norm(y): 1.0126, norm:1.7114, tok/sec: 101070.84, flops:106.08, batch-reuse:1
@ 3500 train 4.3174 , allloss: 4.3192, dt: 1262.74ms, fracRes: 0.3546, norm(attn): 0.2119, norm(output): 0.4609, norm(x): 0.4287, norm(y): 1.0126, norm:2.1051, tok/sec: 103800.05, flops:108.94, batch-reuse:1
@ 3501 train 4.2976 , allloss: 4.3017, dt: 1288.45ms, fracRes: 0.3530, norm(attn): 0.2139, norm(output): 0.4609, norm(x): 0.4261, norm(y): 1.0125, norm:2.1123, tok/sec: 101728.55, flops:106.77, batch-reuse:1
@ 3502 train 4.3426 , allloss: 4.3436, dt: 1314.99ms, fracRes: 0.3525, norm(attn): 0.2129, norm(output): 0.4629, norm(x): 0.4286, norm(y): 1.0125, norm:1.7359, tok/sec: 99675.08, flops:104.61, batch-reuse:1
@ 3503 train 4.3792 , allloss: 4.3802, dt: 1327.38ms, fracRes: 0.3517, norm(attn): 0.2070, norm(output): 0.4570, norm(x): 0.4238, norm(y): 1.0127, norm:2.0052, tok/sec: 98744.95, flops:103.63, batch-reuse:1
@ 3504 train 4.3500 , allloss: 4.3513, dt: 1284.12ms, fracRes: 0.3511, norm(attn): 0.2090, norm(output): 0.4629, norm(x): 0.4268, norm(y): 1.0127, norm:2.0005, tok/sec: 102071.55, flops:107.13, batch-reuse:1
@ 3505 train 4.3106 , allloss: 4.3120, dt: 1312.38ms, fracRes: 0.3514, norm(attn): 0.2090, norm(output): 0.4590, norm(x): 0.4273, norm(y): 1.0126, norm:1.6079, tok/sec: 99873.81, flops:104.82, batch-reuse:1
@ 3506 train 4.2545 , allloss: 4.2569, dt: 1312.14ms, fracRes: 0.3520, norm(attn): 0.2119, norm(output): 0.4590, norm(x): 0.4291, norm(y): 1.0126, norm:1.9167, tok/sec: 99892.05, flops:104.84, batch-reuse:1
@ 3507 train 4.3451 , allloss: 4.3478, dt: 1289.68ms, fracRes: 0.3484, norm(attn): 0.2129, norm(output): 0.4648, norm(x): 0.4309, norm(y): 1.0125, norm:1.9734, tok/sec: 101631.37, flops:106.66, batch-reuse:1
@ 3508 train 4.4558 , allloss: 4.4578, dt: 1279.05ms, fracRes: 0.3473, norm(attn): 0.2139, norm(output): 0.4570, norm(x): 0.4284, norm(y): 1.0126, norm:1.6775, tok/sec: 102476.09, flops:107.55, batch-reuse:1
@ 3509 train 4.4000 , allloss: 4.4016, dt: 1302.11ms, fracRes: 0.3533, norm(attn): 0.2109, norm(output): 0.4629, norm(x): 0.4290, norm(y): 1.0126, norm:1.9942, tok/sec: 100661.13, flops:105.65, batch-reuse:1
@ 3510 train 4.3655 , allloss: 4.3683, dt: 1279.63ms, fracRes: 0.3500, norm(attn): 0.2119, norm(output): 0.4629, norm(x): 0.4262, norm(y): 1.0125, norm:1.7078, tok/sec: 102429.94, flops:107.50, batch-reuse:1
@ 3511 train 4.4311 , allloss: 4.4330, dt: 1291.26ms, fracRes: 0.3551, norm(attn): 0.2051, norm(output): 0.4648, norm(x): 0.4283, norm(y): 1.0128, norm:2.0751, tok/sec: 101507.35, flops:106.53, batch-reuse:1
@ 3512 train 4.4258 , allloss: 4.4275, dt: 1305.57ms, fracRes: 0.3552, norm(attn): 0.2080, norm(output): 0.4688, norm(x): 0.4296, norm(y): 1.0127, norm:1.7241, tok/sec: 100394.73, flops:105.37, batch-reuse:1
@ 3513 train 4.3865 , allloss: 4.3874, dt: 1333.28ms, fracRes: 0.3508, norm(attn): 0.2090, norm(output): 0.4648, norm(x): 0.4264, norm(y): 1.0126, norm:1.8965, tok/sec: 98308.19, flops:103.18, batch-reuse:1
@ 3514 train 4.4884 , allloss: 4.4898, dt: 1299.45ms, fracRes: 0.3509, norm(attn): 0.2090, norm(output): 0.4648, norm(x): 0.4285, norm(y): 1.0125, norm:2.0711, tok/sec: 100867.06, flops:105.86, batch-reuse:1
@ 3515 train 4.3756 , allloss: 4.3779, dt: 1315.14ms, fracRes: 0.3530, norm(attn): 0.2051, norm(output): 0.4590, norm(x): 0.4237, norm(y): 1.0128, norm:1.8427, tok/sec: 99664.04, flops:104.60, batch-reuse:1
@ 3516 train 4.4977 , allloss: 4.4997, dt: 1287.41ms, fracRes: 0.3538, norm(attn): 0.2041, norm(output): 0.4609, norm(x): 0.4261, norm(y): 1.0128, norm:2.3607, tok/sec: 101810.53, flops:106.85, batch-reuse:1
@ 3517 train 4.4236 , allloss: 4.4260, dt: 1311.55ms, fracRes: 0.3517, norm(attn): 0.2061, norm(output): 0.4590, norm(x): 0.4245, norm(y): 1.0127, norm:1.8601, tok/sec: 99937.07, flops:104.89, batch-reuse:1
@ 3518 train 4.4598 , allloss: 4.4626, dt: 1325.88ms, fracRes: 0.3516, norm(attn): 0.2109, norm(output): 0.4590, norm(x): 0.4259, norm(y): 1.0126, norm:2.1777, tok/sec: 98856.73, flops:103.75, batch-reuse:1
@ 3519 train 4.3330 , allloss: 4.3340, dt: 1301.51ms, fracRes: 0.3523, norm(attn): 0.2109, norm(output): 0.4609, norm(x): 0.4245, norm(y): 1.0126, norm:1.9625, tok/sec: 100707.45, flops:105.69, batch-reuse:1
@ 3520 train 4.3165 , allloss: 4.3171, dt: 1304.17ms, fracRes: 0.3538, norm(attn): 0.2139, norm(output): 0.4629, norm(x): 0.4298, norm(y): 1.0126, norm:1.9638, tok/sec: 100502.56, flops:105.48, batch-reuse:1
@ 3521 train 4.3777 , allloss: 4.3795, dt: 1281.43ms, fracRes: 0.3519, norm(attn): 0.2090, norm(output): 0.4648, norm(x): 0.4281, norm(y): 1.0126, norm:1.5991, tok/sec: 102285.38, flops:107.35, batch-reuse:1
@ 3522 train 4.4796 , allloss: 4.4821, dt: 1268.06ms, fracRes: 0.3455, norm(attn): 0.2129, norm(output): 0.4473, norm(x): 0.4218, norm(y): 1.0126, norm:1.8782, tok/sec: 103363.81, flops:108.48, batch-reuse:1
@ 3523 train 4.4260 , allloss: 4.4276, dt: 1294.29ms, fracRes: 0.3486, norm(attn): 0.2129, norm(output): 0.4609, norm(x): 0.4282, norm(y): 1.0127, norm:2.5402, tok/sec: 101269.75, flops:106.28, batch-reuse:1
@ 3524 train 4.4353 , allloss: 4.4403, dt: 1302.26ms, fracRes: 0.3514, norm(attn): 0.2109, norm(output): 0.4629, norm(x): 0.4310, norm(y): 1.0127, norm:2.0567, tok/sec: 100649.55, flops:105.63, batch-reuse:1
@ 3525 train 4.4166 , allloss: 4.4192, dt: 1317.44ms, fracRes: 0.3513, norm(attn): 0.2119, norm(output): 0.4648, norm(x): 0.4321, norm(y): 1.0127, norm:1.9877, tok/sec: 99489.83, flops:104.42, batch-reuse:1
@ 3526 train 4.5392 , allloss: 4.5432, dt: 1305.33ms, fracRes: 0.3533, norm(attn): 0.2100, norm(output): 0.4648, norm(x): 0.4312, norm(y): 1.0127, norm:1.8484, tok/sec: 100412.77, flops:105.39, batch-reuse:1
@ 3527 train 4.5650 , allloss: 4.5667, dt: 1326.38ms, fracRes: 0.3532, norm(attn): 0.2090, norm(output): 0.4668, norm(x): 0.4334, norm(y): 1.0127, norm:1.7449, tok/sec: 98819.34, flops:103.71, batch-reuse:1
@ 3528 train 4.5814 , allloss: 4.5843, dt: 1312.92ms, fracRes: 0.3535, norm(attn): 0.2090, norm(output): 0.4629, norm(x): 0.4330, norm(y): 1.0126, norm:1.6307, tok/sec: 99832.21, flops:104.78, batch-reuse:1
@ 3529 train 4.6108 , allloss: 4.6131, dt: 1313.13ms, fracRes: 0.3538, norm(attn): 0.2100, norm(output): 0.4668, norm(x): 0.4330, norm(y): 1.0127, norm:1.7474, tok/sec: 99816.82, flops:104.76, batch-reuse:1
@ 3530 train 4.6108 , allloss: 4.6128, dt: 1314.90ms, fracRes: 0.3562, norm(attn): 0.2061, norm(output): 0.4648, norm(x): 0.4333, norm(y): 1.0127, norm:2.0893, tok/sec: 99682.20, flops:104.62, batch-reuse:1
@ 3531 train 4.7319 , allloss: 4.7336, dt: 1334.05ms, fracRes: 0.3560, norm(attn): 0.2070, norm(output): 0.4648, norm(x): 0.4323, norm(y): 1.0127, norm:1.4990, tok/sec: 98251.49, flops:103.12, batch-reuse:1
@ 3532 train 4.6050 , allloss: 4.6061, dt: 1299.51ms, fracRes: 0.3558, norm(attn): 0.2041, norm(output): 0.4648, norm(x): 0.4286, norm(y): 1.0127, norm:2.3306, tok/sec: 100862.89, flops:105.86, batch-reuse:1
@ 3533 train 4.7052 , allloss: 4.7068, dt: 1322.98ms, fracRes: 0.3544, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.4322, norm(y): 1.0127, norm:1.8680, tok/sec: 99072.99, flops:103.98, batch-reuse:1
@ 3534 train 4.5243 , allloss: 4.5271, dt: 1317.72ms, fracRes: 0.3523, norm(attn): 0.2080, norm(output): 0.4648, norm(x): 0.4319, norm(y): 1.0127, norm:1.7483, tok/sec: 99468.75, flops:104.39, batch-reuse:1
@ 3535 train 4.7758 , allloss: 4.7797, dt: 1305.10ms, fracRes: 0.3551, norm(attn): 0.2100, norm(output): 0.4688, norm(x): 0.4391, norm(y): 1.0127, norm:2.7570, tok/sec: 100430.86, flops:105.40, batch-reuse:1
@ 3536 train 4.5291 , allloss: 4.5310, dt: 1295.30ms, fracRes: 0.3530, norm(attn): 0.2070, norm(output): 0.4668, norm(x): 0.4330, norm(y): 1.0127, norm:2.5367, tok/sec: 101190.36, flops:106.20, batch-reuse:1
@ 3537 train 4.6123 , allloss: 4.6139, dt: 1305.84ms, fracRes: 0.3521, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.4357, norm(y): 1.0126, norm:2.1136, tok/sec: 100373.83, flops:105.34, batch-reuse:1
@ 3538 train 4.5534 , allloss: 4.5557, dt: 1299.04ms, fracRes: 0.3509, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.4361, norm(y): 1.0127, norm:1.8025, tok/sec: 100899.34, flops:105.90, batch-reuse:1
@ 3539 train 4.5324 , allloss: 4.5333, dt: 1299.41ms, fracRes: 0.3519, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.4338, norm(y): 1.0128, norm:2.0802, tok/sec: 100870.28, flops:105.87, batch-reuse:1
@ 3540 train 4.5816 , allloss: 4.5825, dt: 1316.24ms, fracRes: 0.3509, norm(attn): 0.2080, norm(output): 0.4668, norm(x): 0.4331, norm(y): 1.0127, norm:1.9068, tok/sec: 99580.28, flops:104.51, batch-reuse:1
@ 3541 train 4.5607 , allloss: 4.5619, dt: 1307.18ms, fracRes: 0.3525, norm(attn): 0.2100, norm(output): 0.4668, norm(x): 0.4336, norm(y): 1.0127, norm:1.7595, tok/sec: 100271.06, flops:105.24, batch-reuse:1
@ 3542 train 4.5684 , allloss: 4.5760, dt: 1312.84ms, fracRes: 0.3532, norm(attn): 0.2090, norm(output): 0.4668, norm(x): 0.4333, norm(y): 1.0126, norm:1.7123, tok/sec: 99838.52, flops:104.78, batch-reuse:1
@ 3543 train 4.6684 , allloss: 4.6703, dt: 1340.00ms, fracRes: 0.3561, norm(attn): 0.2080, norm(output): 0.4648, norm(x): 0.4318, norm(y): 1.0126, norm:1.7769, tok/sec: 97814.84, flops:102.66, batch-reuse:1
@ 3544 train 4.5242 , allloss: 4.5253, dt: 1320.69ms, fracRes: 0.3557, norm(attn): 0.2100, norm(output): 0.4648, norm(x): 0.4303, norm(y): 1.0126, norm:1.9675, tok/sec: 99244.88, flops:104.16, batch-reuse:1
@ 3545 train 4.5457 , allloss: 4.5467, dt: 1338.89ms, fracRes: 0.3542, norm(attn): 0.2109, norm(output): 0.4668, norm(x): 0.4297, norm(y): 1.0126, norm:2.0345, tok/sec: 97896.17, flops:102.74, batch-reuse:1
@ 3546 train 4.5401 , allloss: 4.5416, dt: 1340.14ms, fracRes: 0.3569, norm(attn): 0.2070, norm(output): 0.4668, norm(x): 0.4277, norm(y): 1.0126, norm:1.6913, tok/sec: 97804.72, flops:102.65, batch-reuse:1
@ 3547 train 4.5244 , allloss: 4.5262, dt: 1328.11ms, fracRes: 0.3562, norm(attn): 0.2109, norm(output): 0.4668, norm(x): 0.4309, norm(y): 1.0127, norm:1.9623, tok/sec: 98690.82, flops:103.58, batch-reuse:1
@ 3548 train 4.4970 , allloss: 4.4985, dt: 1298.43ms, fracRes: 0.3553, norm(attn): 0.2080, norm(output): 0.4668, norm(x): 0.4304, norm(y): 1.0127, norm:1.8011, tok/sec: 100946.31, flops:105.95, batch-reuse:1
@ 3549 train 4.4923 , allloss: 4.4935, dt: 1311.29ms, fracRes: 0.3550, norm(attn): 0.2090, norm(output): 0.4668, norm(x): 0.4312, norm(y): 1.0127, norm:1.9248, tok/sec: 99956.33, flops:104.91, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0476, 0.9531, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.2988, 0.4316, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2480, 0.4961, 0.1553, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.0737, 0.0518, 0.0264, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.0618, 0.1191, 0.0116, 0.2236, 0.2373, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.0801, 0.0664, 0.2090, 0.2578, 0.1079, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0471, 0.0996, 0.0820, 0.5859, 0.0417, 0.0214, 0.0192, 0.1021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.0369, 0.0223, 0.0084, 0.0776, 0.1211, 0.2656, 0.1279, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.0972, 0.1260, 0.1050, 0.0825, 0.0449, 0.0457, 0.2256, 0.0742, 0.0613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0435, 0.0150, 0.0082, 0.0042, 0.0835, 0.1826, 0.2383, 0.0049, 0.1719, 0.1689, 0.0776, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.0864, 0.1089, 0.0260, 0.0210, 0.0408, 0.1074, 0.1904, 0.0520, 0.0718, 0.1030, 0.0737, 0.0000, 0.0000, 0.0000],
        [0.1099, 0.1436, 0.0874, 0.0461, 0.0605, 0.0153, 0.0349, 0.1406, 0.1289, 0.0613, 0.0625, 0.0659, 0.0425, 0.0000, 0.0000],
        [0.0649, 0.0272, 0.0193, 0.0077, 0.0515, 0.0747, 0.1396, 0.0432, 0.1729, 0.0640, 0.0325, 0.0114, 0.0212, 0.2715, 0.0000],
        [0.0737, 0.0352, 0.1118, 0.0835, 0.0227, 0.0200, 0.0527, 0.2031, 0.0198, 0.0275, 0.0398, 0.0669, 0.1113, 0.0317, 0.0996]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0150,      0.0342,     -0.0396,  ...,     -0.0137,      0.0187,      0.0279],
        [     0.0450,      0.0183,      0.0056,  ...,     -0.0050,     -0.0110,     -0.0338],
        [     0.0072,      0.0191,      0.0091,  ...,      0.0000,      0.0051,     -0.0100],
        ...,
        [    -0.0369,      0.0207,     -0.0016,  ...,      0.0180,     -0.0056,      0.0058],
        [     0.0556,     -0.0162,     -0.0231,  ...,      0.0174,     -0.0017,     -0.0082],
        [     0.0041,      0.0028,      0.0339,  ...,     -0.0081,     -0.0270,      0.0293]], device='cuda:0', requires_grad=True)
K: tensor([-0.5781,  0.7109,  0.4336, -0.7930, -0.6016,  0.5430,  0.8438,  0.1387, -0.0071,  0.0310,  1.1484,  0.8633, -0.2832,  0.4590,  0.0791, -0.7070, -0.1807, -0.5273, -0.0079,  0.5273,  0.1484, -0.3828, -0.5273, -0.0327, -0.0972,  0.3613, -0.3145, -0.6562, -0.6445,  0.6367, -0.6641, -0.6484,
        -0.3789, -0.5820, -0.3438,  0.2207,  0.3301, -0.4219, -0.0610,  0.5664,  0.1494,  0.3477,  0.4355,  0.0864, -0.0525,  0.2002,  0.3262, -0.3711,  1.3281,  0.3242,  0.4238, -0.7852, -0.6133,  0.6953, -0.0393,  0.2617,  0.2891,  0.4746, -1.1172,  0.4023,  0.2148, -0.2139,  0.4551, -1.0156],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0320,     -0.0024,      0.0098,  ...,      0.0338,      0.0028,     -0.0252],
        [     0.0192,      0.0335,     -0.0251,  ...,     -0.0000,      0.0090,     -0.0197],
        [     0.0076,     -0.0278,      0.0037,  ...,      0.0497,      0.0044,     -0.0318],
        ...,
        [     0.0248,      0.0163,      0.0024,  ...,     -0.0221,     -0.0133,      0.0086],
        [    -0.0243,     -0.0199,      0.0168,  ...,      0.0310,     -0.0161,      0.0228],
        [     0.0325,      0.0021,     -0.0128,  ...,     -0.0428,     -0.0259,     -0.0005]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5742,  0.2246, -0.1445, -0.0469, -0.1436, -0.6641,  1.1094,  0.5039,  0.0771,  1.2656, -0.9727,  0.0520, -0.7109, -0.3438, -0.6680, -0.0383, -0.7227, -0.5742,  0.0408,  0.2393,  0.6992,  0.5664, -0.4238, -0.2930, -0.5586, -0.5742, -0.6836,  0.1118, -0.9297, -0.7578, -0.1094, -0.8359,
        -0.3809, -0.2256, -0.3945,  0.3867, -0.4297, -0.1729, -0.5625, -0.5273,  0.0640,  0.4902,  0.5195, -0.9062, -0.8359, -0.3555,  0.3262, -0.0247, -0.2480,  0.6445, -0.2148, -0.0908,  0.6445,  0.8945, -0.0630,  0.0923,  0.5039, -0.2383, -0.4102,  0.4590,  0.4277,  0.7305, -0.6133,  0.1992],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.0000,  0.5547,  1.6250, -0.0080,  1.2578,  0.5625,  0.1768, -0.5234,  0.3359,  1.1562,  1.9531,  1.2734, -0.4180,  1.1094],
        [ 0.0000,  0.1055,  0.4727,  3.0625,  0.1196, -0.4551, -0.7734,  0.5273, -0.9883, -0.7266,  0.7070,  1.8672,  2.1094, -0.7227,  1.0547],
        [ 0.0000,  0.6914, -0.4668, -0.8945, -0.8906, -0.4844,  0.1348,  0.2217, -0.8555,  0.2334,  0.6250, -0.1240, -0.5742, -0.6953,  0.7266],
        [ 0.0000, -1.7969, -2.1562, -2.8281, -0.0996,  0.0432,  1.0312, -1.2656,  1.2188,  0.4023, -0.2236, -1.8359, -1.2109,  1.3594, -1.1875],
        [ 0.0000, -1.7266, -1.0703, -3.3906, -0.4414, -0.3809,  0.4844, -0.4805,  0.9180,  0.6289, -0.6172, -2.2812, -2.1875,  0.6484, -1.3906],
        [ 0.0000, -0.7617, -0.9453,  0.1982,  0.4102, -0.4609, -0.4688, -0.5078,  0.6602,  0.5234,  0.3945,  0.2227,  0.3301,  0.5508,  0.5039],
        [ 0.0000,  0.7461,  0.5547,  2.5156, -0.1230, -0.7891, -0.9023,  0.7695, -0.8945, -0.9883,  0.6562,  1.1953,  1.3281, -1.1484,  1.0547],
        [ 0.0000, -1.1328, -1.6328, -2.6094, -0.3926,  0.0549,  0.8438,  0.1108,  0.6719,  0.0532, -0.3926, -2.0625, -1.6406,  1.3281, -0.4844],
        [ 0.0000, -0.3477, -0.0933, -0.2715, -0.5156, -1.1250, -1.1094,  0.4922, -0.6172, -0.8086, -0.1816, -0.3242, -0.2598, -0.9453, -0.2334],
        [ 0.0000, -1.0625, -1.6562, -2.3281,  0.6562,  1.4375,  1.7031, -2.1875,  1.3750,  1.3594,  0.5820, -1.3281, -1.5625,  1.3359, -0.9844],
        [ 0.0000, -0.3105, -0.0767, -1.5078, -1.7266, -1.0547, -0.0898,  0.4824, -0.8164, -0.4961, -0.1348, -0.4668, -1.2734, -0.9883, -0.0520],
        [ 0.0000,  0.2656, -0.2275, -0.8672, -0.5977, -1.9688, -1.1484,  0.2422,  0.1592, -0.5859, -0.5664, -0.5078, -0.9531,  0.1226, -0.1455],
        [ 0.0000, -0.8711, -1.2188, -2.1406, -0.2334,  0.1357,  0.7617, -0.4102,  0.9766, -0.0177, -0.6914, -1.7344, -1.1172,  1.4297, -0.6211],
        [ 0.0000, -0.7383,  0.4180,  0.1260, -1.1797, -1.3047, -0.3340,  1.0156, -1.3203, -0.9883, -0.6172, -0.0957,  0.4102, -0.8477,  0.3008]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2934],
        [0.4217],
        [0.2316],
        [0.3589],
        [0.3327],
        [0.1234],
        [0.1524],
        [0.1280],
        [0.1400],
        [0.0789],
        [0.1152],
        [0.1247],
        [0.0874],
        [0.0669]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7461,     0.2539,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.1660,     0.0447,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6836,     0.0128,     0.2949,     0.0099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7695,     0.0728,     0.1289,     0.0270,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6484,     0.0405,     0.0233,     0.0055,     0.0011,     0.2812,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3535,     0.0332,     0.0598,     0.0024,     0.0017,     0.3867,     0.1641,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0605,     0.0310,     0.5938,     0.0530,     0.0229,     0.0742,     0.0967,     0.0693,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6367,     0.1216,     0.0208,     0.0034,     0.0002,     0.0503,     0.1523,     0.0050,     0.0107,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7539,     0.0288,     0.0400,     0.0058,     0.0010,     0.0310,     0.0227,     0.0300,     0.0133,     0.0718,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.0153,     0.0277,     0.0071,     0.0003,     0.0168,     0.0420,     0.0182,     0.0069,     0.0084,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3496,     0.0679,     0.0359,     0.0093,     0.0071,     0.2285,     0.1348,     0.0361,     0.0242,     0.0288,     0.0022,     0.0752,     0.0000,     0.0000,     0.0000],
        [    0.0728,     0.0066,     0.3379,     0.0260,     0.0056,     0.0320,     0.0239,     0.0374,     0.0181,     0.0723,     0.0006,     0.2520,     0.1167,     0.0000,     0.0000],
        [    0.7227,     0.0933,     0.0193,     0.0029,     0.0001,     0.0315,     0.0986,     0.0029,     0.0089,     0.0023,     0.0000,     0.0101,     0.0020,     0.0037,     0.0000],
        [    0.1719,     0.3340,     0.0028,     0.0095,     0.0045,     0.0537,     0.1533,     0.0004,     0.0742,     0.0019,     0.0225,     0.0014,     0.0004,     0.0425,     0.1279]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0247, -0.0180, -0.0470,  ...,  0.0300, -0.0180,  0.0237],
        [ 0.0043, -0.0047, -0.0426,  ...,  0.0796, -0.0320,  0.0102],
        [-0.0046, -0.0499, -0.0795,  ...,  0.0476, -0.0217, -0.0019],
        ...,
        [-0.0223,  0.0049,  0.0154,  ...,  0.0106,  0.0185,  0.0529],
        [-0.0016, -0.0186, -0.0487,  ...,  0.0225,  0.0257,  0.0047],
        [ 0.0123,  0.0391, -0.0004,  ..., -0.0241,  0.0125,  0.0406]], device='cuda:0', requires_grad=True)
K: tensor([ 2.0938,  0.6914, -1.1562, -1.5625, -0.8242,  0.6562, -1.2266, -1.2031,  2.5781, -0.7500, -1.6172, -0.1318, -0.0801, -0.7422,  0.2373, -0.4512, -0.6836, -0.1875, -0.2578,  0.7500,  1.5781,  1.2656, -0.5859, -0.9492, -0.8398,  1.1562,  0.6992, -1.5312, -0.5586,  1.6406,  0.2500, -0.5039,
         0.2188,  1.0000, -0.3418, -0.2285, -0.4199,  2.0781,  1.7266, -0.3438, -1.5156, -0.1875, -0.4434,  1.0234, -2.4219,  1.0625,  0.2119,  0.1216,  0.2266, -0.3418, -0.9023, -0.0221, -0.8828,  1.0859,  0.4824,  1.6562, -0.0903, -0.2559,  1.2891,  0.1445,  0.5547,  0.2852, -0.2852,  0.0776],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0279,  0.0153, -0.0033,  ...,  0.0006,  0.0252,  0.0062],
        [ 0.0197,  0.0204,  0.0473,  ..., -0.0244,  0.0144,  0.0285],
        [ 0.0362,  0.0153,  0.0255,  ..., -0.0177,  0.0317,  0.0002],
        ...,
        [-0.0022, -0.0359, -0.0101,  ...,  0.0143, -0.0501,  0.0123],
        [-0.0071, -0.0202,  0.0232,  ..., -0.0024, -0.0166,  0.0156],
        [-0.0154, -0.0602,  0.0202,  ...,  0.0163,  0.0082,  0.0107]], device='cuda:0', requires_grad=True)
Q: tensor([ 3.0625, -0.7578,  0.0405, -0.5703,  2.0312, -1.5234, -0.5547,  2.3125,  0.1079,  0.6211,  1.7578, -1.4844,  0.8945,  0.0850, -0.5977, -0.6250,  0.1758,  0.4414,  1.0859,  0.0172, -0.2354, -0.1914,  1.1797,  0.7188,  2.4688,  1.0078,  1.1406, -1.8359,  1.0938, -1.1406,  0.1611,  2.5938,
         0.4414, -1.1953, -0.1475,  1.3359, -1.2188, -0.5508,  1.0625, -0.7266, -0.2148, -1.7812, -1.8438, -2.1719,  0.7344,  1.5859,  0.5938,  0.5039,  1.1875, -1.3750, -0.6406, -1.1250, -0.5547, -0.4980,  1.1094,  1.1719, -0.4551,  1.6797, -0.5000, -0.8516,  0.4590, -0.7539,  0.4512,  0.7852],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.0781,     -3.1562,     -3.3281,     -4.6562,     -0.9375,     -0.3652,     -4.3750,     -1.6719,     -3.8125,     -3.9219,     -3.8906,     -3.8438,     -1.4922,      0.8320],
        [     0.0000,     -1.5625,     -2.8750,     -2.9375,     -4.0312,     -1.1719,     -0.5352,     -2.2188,     -2.9531,     -3.1875,     -4.2812,     -3.8750,     -2.9062,     -2.7969,     -0.6133],
        [     0.0000,     -3.9844,     -0.8359,     -4.2188,     -9.5000,     -4.8438,     -3.9844,     -4.7500,     -5.4688,     -3.5938,    -10.0000,     -2.4375,     -5.2812,     -5.6250,     -0.2344],
        [     0.0000,     -2.3594,     -1.7891,     -3.3438,     -5.5000,     -1.2344,     -0.6914,     -0.5273,     -2.9531,     -2.8906,     -6.7500,     -1.4609,     -0.8672,     -2.8438,     -0.8242],
        [     0.0000,     -2.7656,     -3.3281,     -4.7812,     -6.4062,     -0.8359,     -1.8906,     -2.2656,     -6.1875,     -2.4531,     -8.3125,     -3.3438,     -2.4688,     -6.0938,     -2.2812],
        [     0.0000,     -2.3594,     -1.7734,     -5.0000,     -5.3125,      0.0894,     -0.7695,     -2.1562,     -4.5938,     -2.5938,     -8.0625,     -2.0938,     -1.7969,     -4.5000,     -2.0312],
        [     0.0000,     -0.6719,      2.2812,     -0.1348,     -0.9727,      0.2041,      0.4668,      0.1338,     -0.0483,     -0.7070,     -3.1719,      1.9844,      0.1309,      0.4980,      3.0938],
        [     0.0000,     -1.6562,     -3.4219,     -5.2188,     -7.8750,     -2.5312,     -1.4297,     -4.8438,     -4.0938,     -5.3750,     -9.5000,     -3.9844,     -5.3125,     -4.8438,     -2.5312],
        [     0.0000,     -3.2656,     -2.9375,     -4.8750,     -6.5938,     -3.1875,     -3.5000,     -3.2188,     -4.0312,     -2.3594,     -8.1250,     -2.3906,     -3.4688,     -4.2812,     -2.2031],
        [     0.0000,     -4.0312,     -3.4375,     -4.7812,     -8.0000,     -3.9375,     -3.0156,     -3.8594,     -4.8125,     -4.6250,     -9.5000,     -3.5469,     -3.8906,     -5.0625,     -2.1719],
        [     0.0000,     -1.6328,     -2.2812,     -3.6250,     -3.9062,     -0.4258,     -0.9531,     -2.2656,     -2.6719,     -2.5000,     -5.0938,     -1.5391,     -1.8047,     -2.5625,     -0.5078],
        [     0.0000,     -2.4062,      1.5312,     -1.0312,     -2.5625,     -0.8203,     -1.1172,     -0.6680,     -1.3984,     -0.0061,     -4.7812,      1.2344,      0.4727,     -0.6406,      2.3750],
        [     0.0000,     -2.0469,     -3.6250,     -5.5312,     -8.5000,     -3.1406,     -2.0000,     -5.5312,     -4.4062,     -5.7500,    -10.1250,     -4.2812,     -5.9062,     -5.2812,     -3.0156],
        [     0.0000,      0.6680,     -4.1250,     -2.9062,     -3.6250,     -1.1641,     -0.1152,     -6.0312,     -0.8398,     -4.5000,     -2.0312,     -4.7812,     -6.0625,     -1.3906,     -0.2930]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5205],
        [0.5086],
        [0.4420],
        [0.6003],
        [0.5357],
        [0.4803],
        [0.3660],
        [0.6296],
        [0.4866],
        [0.5909],
        [0.3730],
        [0.3574],
        [0.6619],
        [0.5531]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0257, -0.0337, -0.0199,  ...,  0.0201,  0.0172,  0.0465],
        [ 0.0022,  0.0054,  0.0547,  ..., -0.0156,  0.0334,  0.0130],
        [ 0.0134, -0.0210, -0.0462,  ..., -0.0017, -0.0120,  0.0461],
        ...,
        [ 0.0159,  0.0220,  0.0095,  ..., -0.0477,  0.0173, -0.0230],
        [ 0.0090, -0.0278, -0.0381,  ...,  0.0234, -0.0051,  0.0316],
        [ 0.0336,  0.0079,  0.0267,  ..., -0.0064,  0.0061, -0.0167]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7617, -0.9531, -1.8750,  1.5547,  0.5430,  0.8789,  2.2031,  2.6719,  1.0703, -2.2031, -1.5781, -2.4219,  0.4082, -2.7344,  3.0156, -1.8438,  1.9688,  0.6133, -2.0469, -2.2344,  1.8594, -2.4219, -1.4844,  1.3125,  1.1328, -1.6875, -1.1484, -1.4219, -0.0618, -2.2969, -2.9219, -1.5781,
         3.1406, -0.7461,  2.2344, -2.6719, -0.7891,  2.5156, -2.1719,  3.9219,  1.6875,  1.5469, -0.4551, -2.6562, -0.7148, -1.2578, -1.2969,  2.5000,  3.0938, -1.6719, -2.5156,  0.6523,  2.2500, -2.1094,  2.5312,  1.4844,  1.5625, -1.4609,  1.4141,  1.5156,  2.3750,  3.1250, -2.2500,  2.2500],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0712,  0.0254,  0.0300,  ..., -0.0198,  0.0131, -0.0218],
        [-0.0359, -0.0123, -0.0379,  ...,  0.0419, -0.0302,  0.0262],
        [ 0.0189,  0.0031,  0.0342,  ..., -0.0655,  0.0371, -0.0053],
        ...,
        [-0.0230, -0.0020, -0.0122,  ...,  0.0292, -0.0208,  0.0269],
        [-0.0009, -0.0081,  0.0193,  ..., -0.0476,  0.0372, -0.0137],
        [-0.0347,  0.0088, -0.0399,  ...,  0.0593, -0.0313, -0.0036]], device='cuda:0', requires_grad=True)
Q: tensor([-1.4141,  0.0317,  0.8203, -1.6484, -1.3594, -1.8047, -1.5938, -1.6953, -1.6719,  1.6641,  1.7891,  1.7734, -0.8047,  3.2344, -2.0781,  1.4453, -0.7695, -1.0547,  1.9609,  1.4609, -0.7656,  1.0391,  1.5078, -0.5508, -1.6406,  1.3516,  1.1328,  2.1719,  0.9336,  1.3516,  1.5938,  0.3496,
        -2.4219,  0.7109, -0.7969,  2.0625,  1.5703, -1.7031,  0.9492, -1.3984, -1.5703, -1.5156, -0.0045,  1.9609, -0.3535,  0.5898,  1.0547, -1.2422, -1.5625,  1.3203,  1.3984, -0.1816, -1.1562,  1.2812, -1.3594, -0.2109, -2.2969,  1.0938, -1.8359, -0.6562, -1.5859, -1.5156,  0.9180, -0.9570],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -15.1250, -12.3125, -17.3750, -16.5000, -17.2500, -16.7500, -14.5000, -17.5000, -11.2500, -15.3750, -15.7500, -17.6250, -17.7500, -15.0000],
        [  0.0000, -15.1250, -13.3750, -18.0000, -16.3750, -17.8750, -17.5000, -16.0000, -18.1250, -12.1875, -14.8125, -16.7500, -19.2500, -18.5000, -16.2500],
        [  0.0000, -20.3750, -18.3750, -25.3750, -22.0000, -24.1250, -23.6250, -21.6250, -24.5000, -16.7500, -21.0000, -22.5000, -26.0000, -25.0000, -22.3750],
        [  0.0000, -17.0000, -14.3125, -19.6250, -19.0000, -20.3750, -19.8750, -17.1250, -19.5000, -14.0000, -17.7500, -18.0000, -21.0000, -19.8750, -17.1250],
        [  0.0000, -24.0000, -20.7500, -28.0000, -26.6250, -29.0000, -28.1250, -25.3750, -28.1250, -19.7500, -24.5000, -26.2500, -30.8750, -28.8750, -24.8750],
        [  0.0000, -19.8750, -17.3750, -23.2500, -22.2500, -24.3750, -24.0000, -21.2500, -23.5000, -16.6250, -20.5000, -22.0000, -25.7500, -24.1250, -21.0000],
        [  0.0000, -22.2500, -20.1250, -26.3750, -24.5000, -26.6250, -26.5000, -25.5000, -26.0000, -19.2500, -22.3750, -24.7500, -30.0000, -26.7500, -24.1250],
        [  0.0000, -19.0000, -16.3750, -22.7500, -20.6250, -22.6250, -22.1250, -19.3750, -22.3750, -15.0625, -19.6250, -20.6250, -23.6250, -22.8750, -19.8750],
        [  0.0000, -18.0000, -15.8750, -21.6250, -20.1250, -21.3750, -21.0000, -19.8750, -21.2500, -16.0000, -19.0000, -19.8750, -24.0000, -21.8750, -18.8750],
        [  0.0000, -18.0000, -15.0625, -21.2500, -19.7500, -20.8750, -20.5000, -17.8750, -20.7500, -14.9375, -19.6250, -19.0000, -21.8750, -21.2500, -18.1250],
        [  0.0000, -19.6250, -16.6250, -22.8750, -21.1250, -23.2500, -22.5000, -20.1250, -22.8750, -15.4375, -19.3750, -21.3750, -24.3750, -23.3750, -20.3750],
        [  0.0000, -23.3750, -21.1250, -28.0000, -26.1250, -28.1250, -27.7500, -26.3750, -27.5000, -20.5000, -24.3750, -26.1250, -31.7500, -28.3750, -25.1250],
        [  0.0000, -19.0000, -16.3750, -22.8750, -20.6250, -22.6250, -22.1250, -19.3750, -22.3750, -15.2500, -19.7500, -20.6250, -23.8750, -22.8750, -19.7500],
        [  0.0000, -18.7500, -16.3750, -22.3750, -20.2500, -22.3750, -21.7500, -19.7500, -22.2500, -14.9375, -18.6250, -20.6250, -23.7500, -22.6250, -20.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9941],
        [0.9469],
        [0.9997],
        [0.9792],
        [0.9980],
        [0.9987],
        [0.9980],
        [0.9945],
        [0.9811],
        [0.9629],
        [0.9899],
        [0.9993],
        [0.9945],
        [0.9971]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2266,     0.7734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0110,     0.6445,     0.3438,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0075,     0.2656,     0.4844,     0.2412,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0088,     0.4844,     0.3242,     0.0781,     0.1050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.1738,     0.0991,     0.1211,     0.0339,     0.5703,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0090,     0.1182,     0.0608,     0.0579,     0.0352,     0.6289,     0.0908,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0075,     0.1050,     0.0615,     0.0574,     0.0083,     0.2715,     0.0525,     0.4355,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0244,     0.0101,     0.0044,     0.0061,     0.4199,     0.0223,     0.4980,     0.0134,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.0193,     0.0119,     0.0118,     0.0086,     0.0420,     0.0232,     0.2676,     0.0393,     0.5742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0038,     0.0025,     0.0011,     0.0015,     0.0322,     0.0208,     0.1084,     0.0061,     0.7969,     0.0264,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0081,     0.0038,     0.0044,     0.0019,     0.0059,     0.0127,     0.0586,     0.0289,     0.3125,     0.0879,     0.4746,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0063,     0.0030,     0.0024,     0.0004,     0.0171,     0.0023,     0.0259,     0.0038,     0.2061,     0.0164,     0.3223,     0.3926,     0.0000,     0.0000],
        [    0.0001,     0.0012,     0.0004,     0.0002,     0.0002,     0.0128,     0.0007,     0.0148,     0.0004,     0.0439,     0.0021,     0.0530,     0.8516,     0.0177,     0.0000],
        [    0.0003,     0.0016,     0.0009,     0.0004,     0.0008,     0.0018,     0.0032,     0.0091,     0.0073,     0.0640,     0.0172,     0.0957,     0.2275,     0.1650,     0.4062]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0188,  0.0229,  0.0482,  ..., -0.0282,  0.0177, -0.0253],
        [-0.0345, -0.0306,  0.0256,  ..., -0.0534, -0.0408,  0.0242],
        [-0.0450, -0.0437,  0.0423,  ..., -0.0194, -0.0232,  0.0047],
        ...,
        [ 0.0353, -0.0224, -0.0208,  ..., -0.0182, -0.0360,  0.0012],
        [ 0.0206,  0.0597, -0.0080,  ...,  0.0707, -0.0240,  0.0009],
        [ 0.0079,  0.0021,  0.0051,  ...,  0.0068,  0.0342, -0.0110]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4902, -1.5156, -1.0156, -0.1475, -0.8008,  0.0442,  0.5977,  2.4219,  0.7422,  1.5625,  0.2432, -1.2812,  0.2930,  0.5859,  0.2949,  1.3594,  1.8359, -1.2266,  0.2559, -1.7656,  0.8203, -2.2500, -0.1177,  1.7969, -2.7656,  0.0444,  0.0486, -0.3418, -0.5625,  0.8359, -2.2188,  1.0703,
        -0.1465, -2.0938, -1.5156, -1.6406,  1.4766,  2.2031, -0.3672,  1.0625,  2.5312, -0.2734, -2.1094,  1.6953, -0.5430, -0.7461,  0.5195,  0.4004, -0.1289, -0.0469,  0.0923, -1.9141,  1.8281, -0.1318, -1.1250, -2.2500, -0.4648, -1.4297,  1.1562,  0.7695, -1.3672, -0.6523, -1.2344,  1.2422],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0164,  0.0293, -0.0557,  ..., -0.0121, -0.0406, -0.0023],
        [-0.0239,  0.0178,  0.0079,  ..., -0.0119,  0.0013, -0.0347],
        [ 0.0170,  0.0401, -0.0274,  ...,  0.0188, -0.0344,  0.0104],
        ...,
        [-0.0050, -0.0218,  0.0044,  ..., -0.0303,  0.0336,  0.0029],
        [ 0.0200, -0.0119, -0.0050,  ..., -0.0085,  0.0317,  0.0138],
        [ 0.0417,  0.0124,  0.0136,  ..., -0.0334, -0.0275,  0.0355]], device='cuda:0', requires_grad=True)
Q: tensor([-1.8906, -0.3672, -2.4219, -1.8828,  0.1465, -3.4688, -0.3496,  0.4316,  2.8281, -2.8438,  5.7188, -2.5938,  1.7656,  2.8750,  5.4375, -3.0625,  2.9531, -0.4062,  4.0938, -3.1406,  1.1172, -3.5469,  1.8984,  1.2422, -5.4375,  0.6836, -0.4180,  3.0781,  1.1016, -1.1641, -3.2500,  0.0515,
         3.1094,  1.2266,  0.1982, -2.1250, -2.2031,  0.0684,  2.0781,  1.5859,  1.9922,  0.4863,  4.7188, -0.0452, -4.3125, -0.5664,  4.0000, -2.9219, -2.6562,  1.0000,  3.6406, -1.8203,  2.9688, -0.3652,  4.1875, -3.9219,  0.9180,  0.2168,  1.0859, -0.6797, -0.1299,  2.0469, -0.7617,  0.3926],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.2344,  1.0781, -0.0498,  0.3027,  2.4375,  1.2891,  2.1562,  0.6836,  2.7812,  1.3438,  2.8750,  3.6719,  2.0781,  4.3125],
        [ 0.0000,  4.0625,  3.4531,  4.4062,  3.4531,  4.3125,  4.9062,  5.6250,  6.0938,  7.3125,  7.2500,  8.6875,  8.3125,  8.8750, 10.5000],
        [ 0.0000,  3.5625,  4.1562,  3.4688,  3.9062,  5.6250,  5.0625,  6.7188,  6.0938,  8.3750,  7.3438,  9.2500, 10.3125,  9.3125, 10.6250],
        [ 0.0000,  4.0000,  3.6094,  2.1875,  2.4844,  7.0312,  4.5625,  7.4062,  4.3438,  8.5625,  6.3125,  9.4375, 11.2500,  8.1250, 12.0625],
        [ 0.0000,  4.5000,  3.9375,  4.1250,  2.8594,  5.6875,  4.7188,  7.2188,  5.2812,  8.5625,  6.3438,  9.6875, 11.0625,  9.1875, 12.6250],
        [ 0.0000,  2.5625,  1.9062,  1.8516,  1.3594,  4.2500,  2.3125,  4.3438,  3.2656,  6.5000,  4.6875,  7.5000,  7.6250,  6.6562, 10.0625],
        [ 0.0000,  2.6406,  2.1094,  2.0312,  0.1021,  3.5938,  1.9453,  4.0625,  2.5625,  6.2812,  3.7500,  6.9688,  7.0938,  5.9375,  9.6250],
        [ 0.0000,  2.9375,  2.0625,  1.2188,  1.5625,  5.7812,  2.8594,  5.9688,  2.3438,  6.9375,  4.0312,  7.2500, 10.0625,  6.0938, 10.6875],
        [ 0.0000,  2.3750,  1.8906,  1.8828,  1.5703,  3.1406,  2.5625,  5.0000,  3.0781,  5.7812,  3.9844,  6.7188,  8.3750,  6.4375,  9.1875],
        [ 0.0000,  1.7812,  1.3438,  0.5625,  0.8750,  3.9062,  3.4688,  5.1250,  2.2500,  7.1250,  3.7031,  6.6562,  8.5000,  5.8750, 10.0625],
        [ 0.0000,  2.7500,  2.0156,  2.1562,  1.3203,  2.4531,  3.2188,  4.7500,  4.0312,  6.4062,  5.1562,  6.8438,  8.0625,  7.4375,  9.7500],
        [ 0.0000,  2.2500,  1.5156,  1.3047, -0.5117,  3.2500,  1.2500,  3.6562,  1.7500,  5.7500,  3.2031,  6.1875,  6.3750,  5.0625,  8.8125],
        [ 0.0000,  2.2812,  1.1562,  0.2773,  0.4590,  4.6250,  1.6719,  4.7500,  1.2656,  5.8438,  2.7812,  6.0312,  8.8125,  4.9375,  9.5000],
        [ 0.0000,  1.8125,  1.2578,  0.4824,  1.1094,  1.8750,  2.4688,  3.5156,  3.2969,  5.4688,  4.1562,  5.8750,  6.7500,  6.4062,  7.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2688],
        [0.0560],
        [0.0285],
        [0.0299],
        [0.0242],
        [0.0348],
        [0.0362],
        [0.0244],
        [0.0105],
        [0.0132],
        [0.0054],
        [0.0211],
        [0.0191],
        [0.0056]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.7969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0383, 0.4941, 0.4668, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0076, 0.5859, 0.0522, 0.3535, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0342, 0.6680, 0.0698, 0.0510, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0344, 0.5820, 0.0498, 0.0508, 0.0354, 0.2490, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0025, 0.6758, 0.0221, 0.0219, 0.0361, 0.0996, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0026, 0.4805, 0.0042, 0.0342, 0.0479, 0.1250, 0.2373, 0.0669, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0165, 0.4668, 0.0229, 0.0659, 0.0208, 0.0640, 0.2773, 0.0232, 0.0417, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0051, 0.4160, 0.0124, 0.0708, 0.0315, 0.0569, 0.1621, 0.0145, 0.0432, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0140, 0.2471, 0.0267, 0.0459, 0.0032, 0.0237, 0.0981, 0.0183, 0.0145, 0.2051, 0.3027, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0122, 0.0591, 0.0052, 0.1699, 0.0505, 0.0287, 0.0361, 0.0100, 0.0542, 0.1641, 0.3730, 0.0376, 0.0000, 0.0000, 0.0000],
        [0.0081, 0.1699, 0.0011, 0.0164, 0.0267, 0.0408, 0.1211, 0.0064, 0.0452, 0.0796, 0.1426, 0.0234, 0.3203, 0.0000, 0.0000],
        [0.0064, 0.1738, 0.0073, 0.0254, 0.0111, 0.0238, 0.1094, 0.0062, 0.0195, 0.1055, 0.1196, 0.0439, 0.2910, 0.0574, 0.0000],
        [0.0030, 0.3027, 0.0688, 0.0188, 0.1201, 0.1025, 0.2139, 0.0215, 0.0099, 0.0211, 0.0036, 0.0194, 0.0282, 0.0063, 0.0598]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0036,      0.0077,      0.0116,  ...,     -0.0234,      0.0150,      0.0230],
        [     0.0294,      0.0000,     -0.0174,  ...,     -0.0138,      0.0000,     -0.0010],
        [    -0.0168,     -0.0325,     -0.0004,  ...,      0.0255,     -0.0299,     -0.0051],
        ...,
        [    -0.0031,      0.0116,      0.0243,  ...,     -0.0254,     -0.0385,      0.0040],
        [    -0.0292,     -0.0259,     -0.0246,  ...,     -0.0081,     -0.0310,      0.0020],
        [     0.0053,      0.0119,      0.0154,  ...,      0.0144,      0.0035,      0.0277]], device='cuda:0', requires_grad=True)
K: tensor([    -1.2578,     -0.7969,      0.1865,     -0.2578,      0.1650,     -0.7305,     -0.8867,      0.2090,     -2.3594,      0.8789,     -0.4785,     -1.7188,     -0.1895,      1.6406,     -0.2695,      0.8711,      0.9141,      0.0500,      2.5625,      1.0625,      0.0009,     -1.3750,
             0.8672,      0.3613,     -1.0391,      1.0781,     -0.0223,      0.5078,      1.6719,     -1.3984,     -0.0781,     -1.3750,      0.7109,      0.8867,     -0.4219,      1.8125,     -0.4648,     -0.2412,      0.7344,     -0.8828,      0.5352,     -0.2637,     -0.7656,      0.5469,
            -1.1328,      0.8086,     -1.7812,     -1.6484,      0.1553,     -0.0767,      1.1797,     -0.8633,     -0.8516,      1.0938,      0.6250,     -0.8555,      0.2080,     -1.8828,     -0.9609,     -1.2188,      1.1797,     -0.5469,      1.0312,      0.9727], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0405,  0.0341, -0.0311,  ...,  0.0105,  0.0016,  0.0162],
        [-0.0160,  0.0058, -0.0034,  ..., -0.0289, -0.0031, -0.0369],
        [-0.0154, -0.0110, -0.0109,  ..., -0.0224,  0.0056, -0.0035],
        ...,
        [ 0.0097,  0.0006, -0.0320,  ..., -0.0157,  0.0242,  0.0174],
        [-0.0125, -0.0156, -0.0414,  ...,  0.0028, -0.0082,  0.0341],
        [-0.0002,  0.0210, -0.0061,  ..., -0.0236, -0.0113, -0.0117]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5898, -0.7227, -0.4199, -2.1094, -0.2656, -2.8281,  0.3320,  2.0469, -0.0581, -1.1016, -0.9492,  1.1328,  0.4805,  0.7188, -0.1348, -2.8906,  1.2266, -2.0312,  0.7578, -0.6953,  0.1211, -1.5938, -0.9609,  1.1562,  0.5586,  1.0547,  0.6797,  2.0312,  1.5312,  0.0515, -0.9180, -0.3906,
         0.1660, -0.9180, -1.4609, -1.3438, -1.0156, -1.3672,  1.8047,  1.0859,  1.8359,  0.1572, -1.3906,  0.7070, -2.3594,  0.0786, -0.7070,  0.2100,  1.2188, -0.8008, -0.0065,  1.2188, -1.2578, -1.6406,  0.0757, -0.8828, -0.6992, -2.7188,  0.1787, -1.2578,  1.6484, -1.2031,  0.8281,  1.3750],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.3594,  0.0498, -1.3281, -0.3457, -0.2363, -1.5391, -1.2031, -2.5000, -0.1797, -1.5781, -1.3594,  0.3457, -2.1250, -2.0625],
        [ 0.0000,  2.5625,  2.5000,  4.5312,  5.5000,  2.9688,  1.8359,  2.4062,  2.4531,  2.6562,  2.4062,  0.3574,  5.0938,  2.3594,  1.0547],
        [ 0.0000,  4.3438,  1.9297,  3.8438,  5.6250,  4.5938,  3.8281,  3.2500,  2.8594,  3.3125,  1.8594,  0.8281,  4.9062,  2.4844,  1.9375],
        [ 0.0000,  2.9688,  0.7109,  0.3965,  1.6406,  2.3750,  1.2266,  0.4531, -0.3828,  2.0938,  0.3770,  0.0854,  2.6094,  0.2578,  1.1016],
        [ 0.0000,  2.8281,  0.3691,  0.3887,  0.0303,  1.9766,  1.3594,  0.0161, -1.1797,  1.8281,  0.1885, -0.0933,  1.2109, -1.2500,  0.4316],
        [ 0.0000,  5.6250,  2.1875,  2.1875,  2.6875,  3.7031,  4.0625,  4.3125,  1.8359,  2.3750,  1.3438,  2.3125,  2.5781,  1.0938,  2.1250],
        [ 0.0000,  5.2188,  0.4766,  2.5781,  2.9219,  3.8750,  4.5312,  3.2500,  3.8281,  3.8594,  3.0000,  2.2188,  4.1250,  3.9844,  3.7188],
        [ 0.0000,  3.3438,  0.3320,  1.3906,  0.2354,  1.3594,  2.8281,  0.3457,  0.9336,  2.9844,  2.5312,  1.9141,  3.5469,  1.2188,  2.6406],
        [ 0.0000,  4.4062,  0.8945,  2.6406,  1.8281,  2.4219,  3.4688,  1.0469,  2.1406,  3.6094,  5.6250,  3.9375,  4.5000,  2.4688,  3.0469],
        [ 0.0000,  2.8594,  0.6445,  1.1797, -1.4688,  0.5195,  1.9453,  0.2637,  0.0327,  2.6875,  3.0781,  3.4219,  3.7969,  0.5547,  2.1875],
        [ 0.0000,  1.5781, -0.8594,  2.6250,  1.4219,  0.8594,  1.0859, -0.1973,  1.4922,  2.5938,  3.4219,  1.1250,  5.7812,  2.6562,  1.9062],
        [ 0.0000,  3.0469, -2.0156,  0.7031,  1.1953,  1.6094,  2.7031, -0.2383,  1.7188,  2.2812,  2.8594,  1.0625,  3.6719,  3.6094,  3.5469],
        [ 0.0000,  3.3125,  0.1318,  1.3828,  0.5547,  1.3125,  2.8438, -0.0260,  1.1172,  2.7969,  2.9375,  1.9297,  3.8125,  2.2031,  3.3906],
        [ 0.0000,  4.6250,  3.1406,  1.8438,  3.7031,  3.5312,  4.2812,  1.9688,  1.1953,  1.9609,  0.1875,  1.8750,  2.2500,  0.7500,  3.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1343],
        [0.0174],
        [0.0076],
        [0.0479],
        [0.0428],
        [0.0094],
        [0.0015],
        [0.0132],
        [0.0030],
        [0.0180],
        [0.0085],
        [0.0143],
        [0.0085],
        [0.0077]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1641 the:0.1348,:0.1963 and:0.1123atoes:0.1279,:0.5430 a:0.0869iced:0.0640)
iced
------
		( the:0.1348,:0.1963 and:0.1123atoes:0.1279,:0.5430 a:0.0869iced:0.0640,:0.1270)
, and are the most common in the world.
The most common type
@ 3550 train 4.5688 , allloss: 4.5702, dt: 1750.66ms, fracRes: 0.3538, norm(attn): 0.2109, norm(output): 0.4668, norm(x): 0.4330, norm(y): 1.0127, norm:1.8985, tok/sec: 74870.14, flops:78.58, batch-reuse:1
@ 3551 train 4.6755 , allloss: 4.6775, dt: 1310.14ms, fracRes: 0.3551, norm(attn): 0.2090, norm(output): 0.4648, norm(x): 0.4302, norm(y): 1.0127, norm:1.6081, tok/sec: 100044.30, flops:105.00, batch-reuse:1
@ 3552 train 4.5698 , allloss: 4.5714, dt: 1300.04ms, fracRes: 0.3545, norm(attn): 0.2109, norm(output): 0.4668, norm(x): 0.4301, norm(y): 1.0127, norm:1.6842, tok/sec: 100821.49, flops:105.81, batch-reuse:1
@ 3553 train 4.5300 , allloss: 4.5317, dt: 1291.77ms, fracRes: 0.3551, norm(attn): 0.2090, norm(output): 0.4648, norm(x): 0.4342, norm(y): 1.0126, norm:1.8048, tok/sec: 101466.79, flops:106.49, batch-reuse:1
@ 3554 train 4.5140 , allloss: 4.5156, dt: 1297.37ms, fracRes: 0.3541, norm(attn): 0.2129, norm(output): 0.4668, norm(x): 0.4316, norm(y): 1.0126, norm:1.8532, tok/sec: 101029.01, flops:106.03, batch-reuse:1
@ 3555 train 4.5746 , allloss: 4.5759, dt: 1297.34ms, fracRes: 0.3555, norm(attn): 0.2090, norm(output): 0.4668, norm(x): 0.4319, norm(y): 1.0126, norm:1.9014, tok/sec: 101031.37, flops:106.03, batch-reuse:1
@ 3556 train 4.5305 , allloss: 4.5315, dt: 1319.93ms, fracRes: 0.3540, norm(attn): 0.2129, norm(output): 0.4668, norm(x): 0.4330, norm(y): 1.0126, norm:1.6882, tok/sec: 99302.39, flops:104.22, batch-reuse:1
@ 3557 train 4.6861 , allloss: 4.6886, dt: 1307.41ms, fracRes: 0.3578, norm(attn): 0.2090, norm(output): 0.4727, norm(x): 0.4379, norm(y): 1.0127, norm:1.9611, tok/sec: 100253.26, flops:105.22, batch-reuse:1
@ 3558 train 4.4491 , allloss: 4.4499, dt: 1308.43ms, fracRes: 0.3527, norm(attn): 0.2109, norm(output): 0.4668, norm(x): 0.4339, norm(y): 1.0126, norm:1.5577, tok/sec: 100175.17, flops:105.14, batch-reuse:1
@ 3559 train 4.5543 , allloss: 4.5559, dt: 1342.39ms, fracRes: 0.3535, norm(attn): 0.2080, norm(output): 0.4668, norm(x): 0.4365, norm(y): 1.0127, norm:1.9607, tok/sec: 97640.81, flops:102.48, batch-reuse:1
@ 3560 train 4.5121 , allloss: 4.5133, dt: 1333.64ms, fracRes: 0.3525, norm(attn): 0.2139, norm(output): 0.4668, norm(x): 0.4343, norm(y): 1.0126, norm:2.1883, tok/sec: 98281.35, flops:103.15, batch-reuse:1
@ 3561 train 4.5618 , allloss: 4.5668, dt: 1339.93ms, fracRes: 0.3510, norm(attn): 0.2148, norm(output): 0.4668, norm(x): 0.4354, norm(y): 1.0125, norm:1.6457, tok/sec: 97819.79, flops:102.66, batch-reuse:1
@ 3562 train 4.5377 , allloss: 4.5391, dt: 1339.88ms, fracRes: 0.3537, norm(attn): 0.2109, norm(output): 0.4668, norm(x): 0.4338, norm(y): 1.0127, norm:1.8160, tok/sec: 97823.53, flops:102.67, batch-reuse:1
@ 3563 train 4.5644 , allloss: 4.5656, dt: 1334.96ms, fracRes: 0.3536, norm(attn): 0.2070, norm(output): 0.4668, norm(x): 0.4336, norm(y): 1.0127, norm:2.0481, tok/sec: 98184.34, flops:103.05, batch-reuse:1
@ 3564 train 4.5318 , allloss: 4.5338, dt: 1310.38ms, fracRes: 0.3534, norm(attn): 0.2139, norm(output): 0.4668, norm(x): 0.4315, norm(y): 1.0127, norm:1.5761, tok/sec: 100025.73, flops:104.98, batch-reuse:1
@ 3565 train 4.5447 , allloss: 4.5465, dt: 1343.25ms, fracRes: 0.3553, norm(attn): 0.2100, norm(output): 0.4668, norm(x): 0.4334, norm(y): 1.0127, norm:1.7978, tok/sec: 97578.33, flops:102.41, batch-reuse:1
@ 3566 train 4.5140 , allloss: 4.5205, dt: 1347.05ms, fracRes: 0.3569, norm(attn): 0.2109, norm(output): 0.4668, norm(x): 0.4361, norm(y): 1.0127, norm:1.7860, tok/sec: 97302.78, flops:102.12, batch-reuse:1
@ 3567 train 4.6021 , allloss: 4.6039, dt: 1315.16ms, fracRes: 0.3569, norm(attn): 0.2119, norm(output): 0.4668, norm(x): 0.4333, norm(y): 1.0128, norm:1.7150, tok/sec: 99662.03, flops:104.60, batch-reuse:1
@ 3568 train 4.4743 , allloss: 4.4758, dt: 1294.65ms, fracRes: 0.3570, norm(attn): 0.2119, norm(output): 0.4668, norm(x): 0.4323, norm(y): 1.0128, norm:2.0010, tok/sec: 101241.26, flops:106.25, batch-reuse:1
@ 3569 train 4.5985 , allloss: 4.6023, dt: 1289.91ms, fracRes: 0.3559, norm(attn): 0.2080, norm(output): 0.4668, norm(x): 0.4330, norm(y): 1.0127, norm:1.7631, tok/sec: 101612.91, flops:106.64, batch-reuse:1
@ 3570 train 4.5785 , allloss: 4.5807, dt: 1305.56ms, fracRes: 0.3554, norm(attn): 0.2109, norm(output): 0.4688, norm(x): 0.4343, norm(y): 1.0127, norm:1.7214, tok/sec: 100394.89, flops:105.37, batch-reuse:1
@ 3571 train 4.5482 , allloss: 4.5496, dt: 1297.51ms, fracRes: 0.3532, norm(attn): 0.2090, norm(output): 0.4668, norm(x): 0.4301, norm(y): 1.0126, norm:1.8745, tok/sec: 101018.48, flops:106.02, batch-reuse:1
@ 3572 train 4.5283 , allloss: 4.5293, dt: 1297.17ms, fracRes: 0.3522, norm(attn): 0.2139, norm(output): 0.4688, norm(x): 0.4341, norm(y): 1.0127, norm:1.9323, tok/sec: 101044.38, flops:106.05, batch-reuse:1
@ 3573 train 4.5771 , allloss: 4.5807, dt: 1307.77ms, fracRes: 0.3523, norm(attn): 0.2139, norm(output): 0.4707, norm(x): 0.4362, norm(y): 1.0126, norm:2.0706, tok/sec: 100225.43, flops:105.19, batch-reuse:1
@ 3574 train 4.4596 , allloss: 4.4641, dt: 1294.60ms, fracRes: 0.3529, norm(attn): 0.2119, norm(output): 0.4668, norm(x): 0.4326, norm(y): 1.0127, norm:1.6266, tok/sec: 101245.53, flops:106.26, batch-reuse:1
@ 3575 train 4.4603 , allloss: 4.4636, dt: 1317.32ms, fracRes: 0.3522, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4343, norm(y): 1.0126, norm:1.8631, tok/sec: 99498.65, flops:104.43, batch-reuse:1
@ 3576 train 4.4376 , allloss: 4.4390, dt: 1335.78ms, fracRes: 0.3525, norm(attn): 0.2119, norm(output): 0.4668, norm(x): 0.4332, norm(y): 1.0127, norm:1.7654, tok/sec: 98123.60, flops:102.98, batch-reuse:1
@ 3577 train 4.6146 , allloss: 4.6162, dt: 1332.96ms, fracRes: 0.3537, norm(attn): 0.2090, norm(output): 0.4688, norm(x): 0.4337, norm(y): 1.0127, norm:2.0171, tok/sec: 98331.51, flops:103.20, batch-reuse:1
@ 3578 train 4.5433 , allloss: 4.5481, dt: 1335.19ms, fracRes: 0.3531, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4312, norm(y): 1.0126, norm:1.6532, tok/sec: 98167.26, flops:103.03, batch-reuse:1
@ 3579 train 4.5010 , allloss: 4.5025, dt: 1312.82ms, fracRes: 0.3550, norm(attn): 0.2139, norm(output): 0.4688, norm(x): 0.4316, norm(y): 1.0127, norm:1.8526, tok/sec: 99840.10, flops:104.78, batch-reuse:1
@ 3580 train 4.5397 , allloss: 4.5420, dt: 1310.64ms, fracRes: 0.3554, norm(attn): 0.2109, norm(output): 0.4688, norm(x): 0.4332, norm(y): 1.0127, norm:1.6994, tok/sec: 100006.44, flops:104.96, batch-reuse:1
@ 3581 train 4.4913 , allloss: 4.4924, dt: 1310.01ms, fracRes: 0.3532, norm(attn): 0.2148, norm(output): 0.4648, norm(x): 0.4340, norm(y): 1.0126, norm:1.7920, tok/sec: 100054.06, flops:105.01, batch-reuse:1
@ 3582 train 4.5286 , allloss: 4.5298, dt: 1303.27ms, fracRes: 0.3542, norm(attn): 0.2090, norm(output): 0.4688, norm(x): 0.4347, norm(y): 1.0127, norm:1.9311, tok/sec: 100571.58, flops:105.55, batch-reuse:1
@ 3583 train 4.6335 , allloss: 4.6344, dt: 1280.82ms, fracRes: 0.3550, norm(attn): 0.2061, norm(output): 0.4688, norm(x): 0.4363, norm(y): 1.0127, norm:1.7782, tok/sec: 102334.15, flops:107.40, batch-reuse:1
@ 3584 train 4.5252 , allloss: 4.5262, dt: 1313.52ms, fracRes: 0.3527, norm(attn): 0.2090, norm(output): 0.4688, norm(x): 0.4381, norm(y): 1.0126, norm:1.7740, tok/sec: 99786.71, flops:104.73, batch-reuse:1
@ 3585 train 4.5180 , allloss: 4.5190, dt: 1311.17ms, fracRes: 0.3529, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4367, norm(y): 1.0126, norm:1.5476, tok/sec: 99965.38, flops:104.92, batch-reuse:1
@ 3586 train 4.4400 , allloss: 4.4411, dt: 1299.37ms, fracRes: 0.3532, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4334, norm(y): 1.0127, norm:1.7047, tok/sec: 100873.18, flops:105.87, batch-reuse:1
@ 3587 train 4.5452 , allloss: 4.5479, dt: 1308.40ms, fracRes: 0.3543, norm(attn): 0.2139, norm(output): 0.4668, norm(x): 0.4355, norm(y): 1.0127, norm:1.6400, tok/sec: 100177.61, flops:105.14, batch-reuse:1
@ 3588 train 4.5023 , allloss: 4.5038, dt: 1339.71ms, fracRes: 0.3525, norm(attn): 0.2148, norm(output): 0.4688, norm(x): 0.4355, norm(y): 1.0126, norm:1.7149, tok/sec: 97835.75, flops:102.68, batch-reuse:1
@ 3589 train 4.5962 , allloss: 4.5973, dt: 1323.34ms, fracRes: 0.3537, norm(attn): 0.2090, norm(output): 0.4688, norm(x): 0.4370, norm(y): 1.0127, norm:1.6570, tok/sec: 99046.52, flops:103.95, batch-reuse:1
@ 3590 train 4.4275 , allloss: 4.4287, dt: 1315.08ms, fracRes: 0.3528, norm(attn): 0.2148, norm(output): 0.4668, norm(x): 0.4364, norm(y): 1.0126, norm:2.1259, tok/sec: 99668.83, flops:104.60, batch-reuse:1
@ 3591 train 4.5155 , allloss: 4.5170, dt: 1301.47ms, fracRes: 0.3532, norm(attn): 0.2148, norm(output): 0.4727, norm(x): 0.4387, norm(y): 1.0125, norm:1.8280, tok/sec: 100710.81, flops:105.70, batch-reuse:1
@ 3592 train 4.4142 , allloss: 4.4159, dt: 1299.78ms, fracRes: 0.3536, norm(attn): 0.2129, norm(output): 0.4668, norm(x): 0.4322, norm(y): 1.0126, norm:1.8252, tok/sec: 100841.47, flops:105.84, batch-reuse:1
@ 3593 train 4.5767 , allloss: 4.5782, dt: 1283.67ms, fracRes: 0.3542, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4335, norm(y): 1.0126, norm:1.6020, tok/sec: 102107.03, flops:107.16, batch-reuse:1
@ 3594 train 4.4815 , allloss: 4.4833, dt: 1295.08ms, fracRes: 0.3537, norm(attn): 0.2168, norm(output): 0.4688, norm(x): 0.4338, norm(y): 1.0126, norm:1.8785, tok/sec: 101207.99, flops:106.22, batch-reuse:1
@ 3595 train 4.5399 , allloss: 4.5413, dt: 1327.63ms, fracRes: 0.3535, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4359, norm(y): 1.0126, norm:1.6707, tok/sec: 98726.00, flops:103.61, batch-reuse:1
@ 3596 train 4.5098 , allloss: 4.5110, dt: 1291.52ms, fracRes: 0.3534, norm(attn): 0.2119, norm(output): 0.4668, norm(x): 0.4362, norm(y): 1.0126, norm:1.5827, tok/sec: 101486.52, flops:106.51, batch-reuse:1
@ 3597 train 4.5043 , allloss: 4.5072, dt: 1295.99ms, fracRes: 0.3530, norm(attn): 0.2129, norm(output): 0.4668, norm(x): 0.4346, norm(y): 1.0127, norm:1.7722, tok/sec: 101136.77, flops:106.14, batch-reuse:1
@ 3598 train 4.5204 , allloss: 4.5223, dt: 1280.42ms, fracRes: 0.3532, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4347, norm(y): 1.0127, norm:1.9624, tok/sec: 102366.31, flops:107.44, batch-reuse:1
@ 3599 train 4.4871 , allloss: 4.4885, dt: 1296.70ms, fracRes: 0.3533, norm(attn): 0.2139, norm(output): 0.4688, norm(x): 0.4349, norm(y): 1.0127, norm:1.6420, tok/sec: 101080.87, flops:106.09, batch-reuse:1
@ 3600 train 4.4275 , allloss: 4.4289, dt: 1259.38ms, fracRes: 0.3536, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4337, norm(y): 1.0127, norm:1.8357, tok/sec: 104076.82, flops:109.23, batch-reuse:1
@ 3601 train 4.5239 , allloss: 4.5261, dt: 1296.43ms, fracRes: 0.3545, norm(attn): 0.2139, norm(output): 0.4668, norm(x): 0.4333, norm(y): 1.0127, norm:1.8360, tok/sec: 101101.91, flops:106.11, batch-reuse:1
@ 3602 train 4.5402 , allloss: 4.5418, dt: 1287.51ms, fracRes: 0.3537, norm(attn): 0.2148, norm(output): 0.4668, norm(x): 0.4334, norm(y): 1.0127, norm:1.7697, tok/sec: 101802.75, flops:106.84, batch-reuse:1
@ 3603 train 4.5444 , allloss: 4.5457, dt: 1282.14ms, fracRes: 0.3549, norm(attn): 0.2119, norm(output): 0.4668, norm(x): 0.4324, norm(y): 1.0127, norm:1.7041, tok/sec: 102228.93, flops:107.29, batch-reuse:1
@ 3604 train 4.5205 , allloss: 4.5218, dt: 1296.04ms, fracRes: 0.3552, norm(attn): 0.2158, norm(output): 0.4648, norm(x): 0.4315, norm(y): 1.0127, norm:1.7126, tok/sec: 101132.34, flops:106.14, batch-reuse:1
@ 3605 train 4.5017 , allloss: 4.5025, dt: 1296.25ms, fracRes: 0.3548, norm(attn): 0.2148, norm(output): 0.4668, norm(x): 0.4333, norm(y): 1.0127, norm:1.9836, tok/sec: 101116.10, flops:106.12, batch-reuse:1
@ 3606 train 4.4531 , allloss: 4.4541, dt: 1296.96ms, fracRes: 0.3559, norm(attn): 0.2070, norm(output): 0.4668, norm(x): 0.4325, norm(y): 1.0128, norm:1.5749, tok/sec: 101060.90, flops:106.07, batch-reuse:1
@ 3607 train 4.5166 , allloss: 4.5180, dt: 1295.73ms, fracRes: 0.3569, norm(attn): 0.2090, norm(output): 0.4668, norm(x): 0.4317, norm(y): 1.0128, norm:1.9539, tok/sec: 101156.79, flops:106.17, batch-reuse:1
@ 3608 train 4.5402 , allloss: 4.5413, dt: 1288.66ms, fracRes: 0.3563, norm(attn): 0.2100, norm(output): 0.4668, norm(x): 0.4337, norm(y): 1.0127, norm:1.8739, tok/sec: 101712.13, flops:106.75, batch-reuse:1
@ 3609 train 4.5592 , allloss: 4.5636, dt: 1294.09ms, fracRes: 0.3544, norm(attn): 0.2129, norm(output): 0.4668, norm(x): 0.4349, norm(y): 1.0127, norm:1.7561, tok/sec: 101285.28, flops:106.30, batch-reuse:1
@ 3610 train 4.4199 , allloss: 4.4215, dt: 1308.10ms, fracRes: 0.3577, norm(attn): 0.2109, norm(output): 0.4707, norm(x): 0.4398, norm(y): 1.0128, norm:1.8291, tok/sec: 100200.62, flops:105.16, batch-reuse:1
@ 3611 train 4.5282 , allloss: 4.5295, dt: 1303.73ms, fracRes: 0.3545, norm(attn): 0.2100, norm(output): 0.4688, norm(x): 0.4371, norm(y): 1.0127, norm:2.0101, tok/sec: 100536.23, flops:105.51, batch-reuse:1
@ 3612 train 4.5575 , allloss: 4.5594, dt: 1310.58ms, fracRes: 0.3532, norm(attn): 0.2148, norm(output): 0.4688, norm(x): 0.4342, norm(y): 1.0127, norm:1.7862, tok/sec: 100011.05, flops:104.96, batch-reuse:1
@ 3613 train 4.4971 , allloss: 4.4981, dt: 1338.65ms, fracRes: 0.3528, norm(attn): 0.2168, norm(output): 0.4688, norm(x): 0.4324, norm(y): 1.0126, norm:1.7616, tok/sec: 97913.38, flops:102.76, batch-reuse:1
@ 3614 train 4.5225 , allloss: 4.5241, dt: 1318.18ms, fracRes: 0.3536, norm(attn): 0.2139, norm(output): 0.4668, norm(x): 0.4341, norm(y): 1.0127, norm:1.6650, tok/sec: 99434.10, flops:104.36, batch-reuse:1
@ 3615 train 4.4922 , allloss: 4.4931, dt: 1302.24ms, fracRes: 0.3528, norm(attn): 0.2168, norm(output): 0.4688, norm(x): 0.4349, norm(y): 1.0127, norm:1.8007, tok/sec: 100651.25, flops:105.64, batch-reuse:1
@ 3616 train 4.4232 , allloss: 4.4244, dt: 1318.23ms, fracRes: 0.3539, norm(attn): 0.2168, norm(output): 0.4668, norm(x): 0.4342, norm(y): 1.0127, norm:1.7711, tok/sec: 99430.57, flops:104.35, batch-reuse:1
@ 3617 train 4.4482 , allloss: 4.4495, dt: 1313.47ms, fracRes: 0.3542, norm(attn): 0.2129, norm(output): 0.4668, norm(x): 0.4326, norm(y): 1.0127, norm:1.5541, tok/sec: 99790.69, flops:104.73, batch-reuse:1
@ 3618 train 4.3869 , allloss: 4.3882, dt: 1299.65ms, fracRes: 0.3540, norm(attn): 0.2168, norm(output): 0.4688, norm(x): 0.4350, norm(y): 1.0127, norm:1.7802, tok/sec: 100851.70, flops:105.85, batch-reuse:1
@ 3619 train 4.4587 , allloss: 4.4597, dt: 1324.81ms, fracRes: 0.3553, norm(attn): 0.2119, norm(output): 0.4707, norm(x): 0.4363, norm(y): 1.0128, norm:1.6428, tok/sec: 98936.47, flops:103.84, batch-reuse:1
@ 3620 train 4.5143 , allloss: 4.5153, dt: 1306.28ms, fracRes: 0.3568, norm(attn): 0.2119, norm(output): 0.4707, norm(x): 0.4364, norm(y): 1.0128, norm:1.8334, tok/sec: 100340.07, flops:105.31, batch-reuse:1
@ 3621 train 4.4484 , allloss: 4.4493, dt: 1335.89ms, fracRes: 0.3553, norm(attn): 0.2119, norm(output): 0.4688, norm(x): 0.4338, norm(y): 1.0127, norm:1.6204, tok/sec: 98115.96, flops:102.97, batch-reuse:1
@ 3622 train 4.5192 , allloss: 4.5210, dt: 1322.69ms, fracRes: 0.3560, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4373, norm(y): 1.0127, norm:1.7887, tok/sec: 99095.20, flops:104.00, batch-reuse:1
@ 3623 train 4.5097 , allloss: 4.5117, dt: 1317.15ms, fracRes: 0.3584, norm(attn): 0.2080, norm(output): 0.4668, norm(x): 0.4345, norm(y): 1.0128, norm:1.7438, tok/sec: 99512.00, flops:104.44, batch-reuse:1
@ 3624 train 4.3819 , allloss: 4.3839, dt: 1320.58ms, fracRes: 0.3576, norm(attn): 0.2148, norm(output): 0.4668, norm(x): 0.4327, norm(y): 1.0127, norm:1.6919, tok/sec: 99253.39, flops:104.17, batch-reuse:1
@ 3625 train 4.5086 , allloss: 4.5117, dt: 1273.74ms, fracRes: 0.3538, norm(attn): 0.2188, norm(output): 0.4668, norm(x): 0.4330, norm(y): 1.0126, norm:1.6194, tok/sec: 102902.95, flops:108.00, batch-reuse:1
@ 3626 train 4.4260 , allloss: 4.4276, dt: 1300.74ms, fracRes: 0.3541, norm(attn): 0.2148, norm(output): 0.4668, norm(x): 0.4332, norm(y): 1.0128, norm:1.8409, tok/sec: 100767.61, flops:105.76, batch-reuse:1
@ 3627 train 4.4943 , allloss: 4.4952, dt: 1288.49ms, fracRes: 0.3536, norm(attn): 0.2148, norm(output): 0.4688, norm(x): 0.4329, norm(y): 1.0128, norm:1.8254, tok/sec: 101725.36, flops:106.76, batch-reuse:1
@ 3628 train 4.5362 , allloss: 4.5377, dt: 1295.95ms, fracRes: 0.3538, norm(attn): 0.2139, norm(output): 0.4688, norm(x): 0.4355, norm(y): 1.0127, norm:1.6297, tok/sec: 101139.80, flops:106.15, batch-reuse:1
@ 3629 train 4.4405 , allloss: 4.4421, dt: 1320.91ms, fracRes: 0.3536, norm(attn): 0.2178, norm(output): 0.4688, norm(x): 0.4374, norm(y): 1.0126, norm:1.7802, tok/sec: 99228.85, flops:104.14, batch-reuse:1
@ 3630 train 4.3941 , allloss: 4.3957, dt: 1327.06ms, fracRes: 0.3547, norm(attn): 0.2188, norm(output): 0.4688, norm(x): 0.4380, norm(y): 1.0127, norm:1.8338, tok/sec: 98768.67, flops:103.66, batch-reuse:1
@ 3631 train 4.4318 , allloss: 4.4344, dt: 1340.08ms, fracRes: 0.3521, norm(attn): 0.2168, norm(output): 0.4688, norm(x): 0.4370, norm(y): 1.0127, norm:1.7162, tok/sec: 97808.91, flops:102.65, batch-reuse:1
@ 3632 train 4.4461 , allloss: 4.4478, dt: 1317.86ms, fracRes: 0.3557, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4394, norm(y): 1.0128, norm:2.0303, tok/sec: 99457.92, flops:104.38, batch-reuse:1
@ 3633 train 4.5403 , allloss: 4.5417, dt: 1323.82ms, fracRes: 0.3544, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4378, norm(y): 1.0127, norm:1.6499, tok/sec: 99010.59, flops:103.91, batch-reuse:1
@ 3634 train 4.3803 , allloss: 4.3815, dt: 1318.16ms, fracRes: 0.3530, norm(attn): 0.2207, norm(output): 0.4688, norm(x): 0.4356, norm(y): 1.0127, norm:2.0414, tok/sec: 99435.36, flops:104.36, batch-reuse:1
@ 3635 train 4.4422 , allloss: 4.4432, dt: 1349.68ms, fracRes: 0.3549, norm(attn): 0.2188, norm(output): 0.4688, norm(x): 0.4389, norm(y): 1.0127, norm:1.9171, tok/sec: 97113.08, flops:101.92, batch-reuse:1
@ 3636 train 4.4099 , allloss: 4.4127, dt: 1341.25ms, fracRes: 0.3557, norm(attn): 0.2168, norm(output): 0.4648, norm(x): 0.4351, norm(y): 1.0127, norm:1.8491, tok/sec: 97723.84, flops:102.56, batch-reuse:1
@ 3637 train 4.4990 , allloss: 4.5016, dt: 1287.04ms, fracRes: 0.3541, norm(attn): 0.2148, norm(output): 0.4707, norm(x): 0.4377, norm(y): 1.0127, norm:1.7558, tok/sec: 101839.98, flops:106.88, batch-reuse:1
@ 3638 train 4.4581 , allloss: 4.4598, dt: 1305.30ms, fracRes: 0.3517, norm(attn): 0.2178, norm(output): 0.4688, norm(x): 0.4367, norm(y): 1.0127, norm:1.5770, tok/sec: 100415.58, flops:105.39, batch-reuse:1
@ 3639 train 4.4954 , allloss: 4.4986, dt: 1340.57ms, fracRes: 0.3519, norm(attn): 0.2168, norm(output): 0.4688, norm(x): 0.4367, norm(y): 1.0127, norm:1.7288, tok/sec: 97773.42, flops:102.62, batch-reuse:1
@ 3640 train 4.4140 , allloss: 4.4159, dt: 1347.72ms, fracRes: 0.3523, norm(attn): 0.2168, norm(output): 0.4688, norm(x): 0.4360, norm(y): 1.0127, norm:1.6196, tok/sec: 97254.85, flops:102.07, batch-reuse:1
@ 3641 train 4.4643 , allloss: 4.4679, dt: 1337.67ms, fracRes: 0.3539, norm(attn): 0.2148, norm(output): 0.4688, norm(x): 0.4374, norm(y): 1.0127, norm:1.5718, tok/sec: 97985.33, flops:102.84, batch-reuse:1
@ 3642 train 4.6325 , allloss: 4.6343, dt: 1283.24ms, fracRes: 0.3540, norm(attn): 0.2139, norm(output): 0.4707, norm(x): 0.4369, norm(y): 1.0126, norm:1.4983, tok/sec: 102141.11, flops:107.20, batch-reuse:1
@ 3643 train 4.4551 , allloss: 4.4564, dt: 1312.09ms, fracRes: 0.3546, norm(attn): 0.2119, norm(output): 0.4707, norm(x): 0.4371, norm(y): 1.0128, norm:1.9609, tok/sec: 99895.54, flops:104.84, batch-reuse:1
@ 3644 train 4.5338 , allloss: 4.5348, dt: 1333.50ms, fracRes: 0.3538, norm(attn): 0.2119, norm(output): 0.4707, norm(x): 0.4364, norm(y): 1.0127, norm:1.7569, tok/sec: 98291.35, flops:103.16, batch-reuse:1
@ 3645 train 4.4567 , allloss: 4.4580, dt: 1305.53ms, fracRes: 0.3529, norm(attn): 0.2139, norm(output): 0.4688, norm(x): 0.4360, norm(y): 1.0127, norm:1.6780, tok/sec: 100397.57, flops:105.37, batch-reuse:1
@ 3646 train 4.4322 , allloss: 4.4336, dt: 1329.48ms, fracRes: 0.3535, norm(attn): 0.2109, norm(output): 0.4688, norm(x): 0.4366, norm(y): 1.0127, norm:1.7461, tok/sec: 98589.14, flops:103.47, batch-reuse:1
@ 3647 train 4.4662 , allloss: 4.4674, dt: 1333.30ms, fracRes: 0.3538, norm(attn): 0.2109, norm(output): 0.4688, norm(x): 0.4355, norm(y): 1.0127, norm:1.7473, tok/sec: 98306.29, flops:103.17, batch-reuse:1
@ 3648 train 4.5114 , allloss: 4.5138, dt: 1333.22ms, fracRes: 0.3542, norm(attn): 0.2139, norm(output): 0.4707, norm(x): 0.4366, norm(y): 1.0127, norm:1.6750, tok/sec: 98312.02, flops:103.18, batch-reuse:1
@ 3649 train 4.5161 , allloss: 4.5207, dt: 1336.46ms, fracRes: 0.3566, norm(attn): 0.2080, norm(output): 0.4707, norm(x): 0.4396, norm(y): 1.0128, norm:1.9503, tok/sec: 98074.20, flops:102.93, batch-reuse:1
@ 3650 train 4.5233 , allloss: 4.5247, dt: 1321.70ms, fracRes: 0.3562, norm(attn): 0.2080, norm(output): 0.4707, norm(x): 0.4377, norm(y): 1.0128, norm:1.7849, tok/sec: 99169.60, flops:104.08, batch-reuse:1
@ 3651 train 4.4796 , allloss: 4.4822, dt: 1313.52ms, fracRes: 0.3552, norm(attn): 0.2109, norm(output): 0.4727, norm(x): 0.4411, norm(y): 1.0127, norm:1.8288, tok/sec: 99786.82, flops:104.73, batch-reuse:1
@ 3652 train 4.4024 , allloss: 4.4035, dt: 1339.62ms, fracRes: 0.3551, norm(attn): 0.2080, norm(output): 0.4707, norm(x): 0.4378, norm(y): 1.0128, norm:1.8713, tok/sec: 97842.65, flops:102.69, batch-reuse:1
@ 3653 train 4.4206 , allloss: 4.4221, dt: 1334.39ms, fracRes: 0.3546, norm(attn): 0.2139, norm(output): 0.4707, norm(x): 0.4398, norm(y): 1.0128, norm:1.8371, tok/sec: 98226.37, flops:103.09, batch-reuse:1
@ 3654 train 4.5597 , allloss: 4.5616, dt: 1305.99ms, fracRes: 0.3525, norm(attn): 0.2129, norm(output): 0.4727, norm(x): 0.4411, norm(y): 1.0127, norm:1.8334, tok/sec: 100362.45, flops:105.33, batch-reuse:1
@ 3655 train 4.5516 , allloss: 4.5543, dt: 1295.28ms, fracRes: 0.3539, norm(attn): 0.2139, norm(output): 0.4707, norm(x): 0.4379, norm(y): 1.0127, norm:1.9296, tok/sec: 101192.15, flops:106.20, batch-reuse:1
@ 3656 train 4.5268 , allloss: 4.5296, dt: 1308.63ms, fracRes: 0.3544, norm(attn): 0.2139, norm(output): 0.4707, norm(x): 0.4363, norm(y): 1.0127, norm:2.0726, tok/sec: 100159.93, flops:105.12, batch-reuse:1
@ 3657 train 4.5259 , allloss: 4.5287, dt: 1308.93ms, fracRes: 0.3547, norm(attn): 0.2148, norm(output): 0.4688, norm(x): 0.4353, norm(y): 1.0127, norm:1.5674, tok/sec: 100136.69, flops:105.10, batch-reuse:1
@ 3658 train 4.4157 , allloss: 4.4179, dt: 1332.79ms, fracRes: 0.3551, norm(attn): 0.2129, norm(output): 0.4707, norm(x): 0.4361, norm(y): 1.0127, norm:2.0064, tok/sec: 98344.17, flops:103.21, batch-reuse:1
@ 3659 train 4.4988 , allloss: 4.5076, dt: 1335.71ms, fracRes: 0.3546, norm(attn): 0.2158, norm(output): 0.4688, norm(x): 0.4366, norm(y): 1.0126, norm:1.9856, tok/sec: 98129.12, flops:102.99, batch-reuse:1
@ 3660 train 4.3456 , allloss: 4.3486, dt: 1338.99ms, fracRes: 0.3568, norm(attn): 0.2129, norm(output): 0.4707, norm(x): 0.4371, norm(y): 1.0127, norm:1.8913, tok/sec: 97888.94, flops:102.74, batch-reuse:1
@ 3661 train 4.3765 , allloss: 4.3780, dt: 1339.17ms, fracRes: 0.3552, norm(attn): 0.2148, norm(output): 0.4688, norm(x): 0.4366, norm(y): 1.0127, norm:1.6550, tok/sec: 97875.76, flops:102.72, batch-reuse:1
@ 3662 train 4.2438 , allloss: 4.2480, dt: 1316.89ms, fracRes: 0.3544, norm(attn): 0.2178, norm(output): 0.4688, norm(x): 0.4345, norm(y): 1.0127, norm:1.9604, tok/sec: 99531.18, flops:104.46, batch-reuse:1
@ 3663 train 4.3285 , allloss: 4.3301, dt: 1328.70ms, fracRes: 0.3537, norm(attn): 0.2188, norm(output): 0.4688, norm(x): 0.4329, norm(y): 1.0127, norm:1.7251, tok/sec: 98646.78, flops:103.53, batch-reuse:1
@ 3664 train 4.3817 , allloss: 4.3829, dt: 1307.84ms, fracRes: 0.3539, norm(attn): 0.2168, norm(output): 0.4688, norm(x): 0.4338, norm(y): 1.0127, norm:1.5917, tok/sec: 100220.24, flops:105.18, batch-reuse:1
@ 3665 train 4.3987 , allloss: 4.4009, dt: 1303.53ms, fracRes: 0.3543, norm(attn): 0.2158, norm(output): 0.4707, norm(x): 0.4353, norm(y): 1.0128, norm:1.7808, tok/sec: 100551.58, flops:105.53, batch-reuse:1
@ 3666 train 4.2766 , allloss: 4.2778, dt: 1341.11ms, fracRes: 0.3534, norm(attn): 0.2207, norm(output): 0.4688, norm(x): 0.4363, norm(y): 1.0127, norm:1.7541, tok/sec: 97734.05, flops:102.57, batch-reuse:1
@ 3667 train 4.3838 , allloss: 4.3858, dt: 1337.09ms, fracRes: 0.3550, norm(attn): 0.2188, norm(output): 0.4707, norm(x): 0.4402, norm(y): 1.0127, norm:1.7046, tok/sec: 98028.03, flops:102.88, batch-reuse:1
@ 3668 train 4.3781 , allloss: 4.3790, dt: 1318.58ms, fracRes: 0.3553, norm(attn): 0.2148, norm(output): 0.4707, norm(x): 0.4377, norm(y): 1.0128, norm:1.6049, tok/sec: 99403.55, flops:104.33, batch-reuse:1
@ 3669 train 4.4466 , allloss: 4.4475, dt: 1324.17ms, fracRes: 0.3552, norm(attn): 0.2129, norm(output): 0.4707, norm(x): 0.4421, norm(y): 1.0128, norm:2.1758, tok/sec: 98984.46, flops:103.89, batch-reuse:1
@ 3670 train 4.4323 , allloss: 4.4335, dt: 1314.65ms, fracRes: 0.3516, norm(attn): 0.2158, norm(output): 0.4727, norm(x): 0.4417, norm(y): 1.0127, norm:1.9844, tok/sec: 99701.22, flops:104.64, batch-reuse:1
@ 3671 train 4.2954 , allloss: 4.2969, dt: 1320.73ms, fracRes: 0.3518, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4408, norm(y): 1.0128, norm:1.6784, tok/sec: 99242.34, flops:104.16, batch-reuse:1
@ 3672 train 4.3700 , allloss: 4.3717, dt: 1279.23ms, fracRes: 0.3535, norm(attn): 0.2178, norm(output): 0.4707, norm(x): 0.4355, norm(y): 1.0128, norm:1.6257, tok/sec: 102461.89, flops:107.54, batch-reuse:1
@ 3673 train 4.3516 , allloss: 4.3534, dt: 1307.95ms, fracRes: 0.3532, norm(attn): 0.2178, norm(output): 0.4688, norm(x): 0.4341, norm(y): 1.0127, norm:1.6719, tok/sec: 100211.63, flops:105.17, batch-reuse:1
@ 3674 train 4.3168 , allloss: 4.3180, dt: 1341.69ms, fracRes: 0.3546, norm(attn): 0.2178, norm(output): 0.4707, norm(x): 0.4363, norm(y): 1.0127, norm:1.6911, tok/sec: 97691.40, flops:102.53, batch-reuse:1
@ 3675 train 4.3980 , allloss: 4.3993, dt: 1306.30ms, fracRes: 0.3559, norm(attn): 0.2139, norm(output): 0.4688, norm(x): 0.4348, norm(y): 1.0128, norm:1.8021, tok/sec: 100338.62, flops:105.31, batch-reuse:1
@ 3676 train 4.4115 , allloss: 4.4128, dt: 1310.61ms, fracRes: 0.3569, norm(attn): 0.2119, norm(output): 0.4688, norm(x): 0.4352, norm(y): 1.0129, norm:1.7489, tok/sec: 100008.23, flops:104.96, batch-reuse:1
@ 3677 train 4.3661 , allloss: 4.3703, dt: 1343.50ms, fracRes: 0.3559, norm(attn): 0.2158, norm(output): 0.4707, norm(x): 0.4363, norm(y): 1.0128, norm:1.4786, tok/sec: 97560.13, flops:102.39, batch-reuse:1
@ 3678 train 4.3756 , allloss: 4.3770, dt: 1331.57ms, fracRes: 0.3546, norm(attn): 0.2188, norm(output): 0.4707, norm(x): 0.4369, norm(y): 1.0127, norm:1.8593, tok/sec: 98434.49, flops:103.31, batch-reuse:1
@ 3679 train 4.3164 , allloss: 4.3176, dt: 1311.78ms, fracRes: 0.3568, norm(attn): 0.2168, norm(output): 0.4707, norm(x): 0.4358, norm(y): 1.0128, norm:1.6059, tok/sec: 99919.30, flops:104.87, batch-reuse:1
@ 3680 train 4.2620 , allloss: 4.2636, dt: 1317.79ms, fracRes: 0.3547, norm(attn): 0.2158, norm(output): 0.4688, norm(x): 0.4316, norm(y): 1.0128, norm:1.7231, tok/sec: 99463.22, flops:104.39, batch-reuse:1
@ 3681 train 4.3064 , allloss: 4.3107, dt: 1308.78ms, fracRes: 0.3563, norm(attn): 0.2158, norm(output): 0.4688, norm(x): 0.4326, norm(y): 1.0128, norm:1.6534, tok/sec: 100148.47, flops:105.11, batch-reuse:1
@ 3682 train 4.2624 , allloss: 4.2638, dt: 1292.92ms, fracRes: 0.3576, norm(attn): 0.2119, norm(output): 0.4707, norm(x): 0.4350, norm(y): 1.0128, norm:1.8853, tok/sec: 101376.36, flops:106.40, batch-reuse:1
@ 3683 train 4.3802 , allloss: 4.3830, dt: 1317.52ms, fracRes: 0.3559, norm(attn): 0.2158, norm(output): 0.4707, norm(x): 0.4378, norm(y): 1.0128, norm:1.6714, tok/sec: 99483.89, flops:104.41, batch-reuse:1
@ 3684 train 4.4387 , allloss: 4.4404, dt: 1318.63ms, fracRes: 0.3559, norm(attn): 0.2129, norm(output): 0.4688, norm(x): 0.4355, norm(y): 1.0128, norm:1.7026, tok/sec: 99400.19, flops:104.32, batch-reuse:1
@ 3685 train 4.2824 , allloss: 4.2839, dt: 1320.95ms, fracRes: 0.3554, norm(attn): 0.2148, norm(output): 0.4707, norm(x): 0.4372, norm(y): 1.0128, norm:1.5448, tok/sec: 99225.72, flops:104.14, batch-reuse:1
@ 3686 train 4.3087 , allloss: 4.3117, dt: 1321.17ms, fracRes: 0.3550, norm(attn): 0.2148, norm(output): 0.4707, norm(x): 0.4361, norm(y): 1.0127, norm:1.8103, tok/sec: 99208.79, flops:104.12, batch-reuse:1
@ 3687 train 4.3562 , allloss: 4.3580, dt: 1302.82ms, fracRes: 0.3528, norm(attn): 0.2188, norm(output): 0.4707, norm(x): 0.4374, norm(y): 1.0127, norm:1.5674, tok/sec: 100606.12, flops:105.59, batch-reuse:1
@ 3688 train 4.4100 , allloss: 4.4117, dt: 1303.90ms, fracRes: 0.3537, norm(attn): 0.2188, norm(output): 0.4707, norm(x): 0.4351, norm(y): 1.0128, norm:1.8975, tok/sec: 100523.32, flops:105.50, batch-reuse:1
@ 3689 train 4.4109 , allloss: 4.4120, dt: 1283.32ms, fracRes: 0.3544, norm(attn): 0.2178, norm(output): 0.4707, norm(x): 0.4369, norm(y): 1.0128, norm:1.8709, tok/sec: 102135.28, flops:107.19, batch-reuse:1
@ 3690 train 4.2931 , allloss: 4.2968, dt: 1301.37ms, fracRes: 0.3545, norm(attn): 0.2168, norm(output): 0.4688, norm(x): 0.4352, norm(y): 1.0128, norm:1.7774, tok/sec: 100718.39, flops:105.71, batch-reuse:1
@ 3691 train 4.3917 , allloss: 4.3951, dt: 1292.17ms, fracRes: 0.3550, norm(attn): 0.2197, norm(output): 0.4688, norm(x): 0.4375, norm(y): 1.0127, norm:1.7265, tok/sec: 101435.96, flops:106.46, batch-reuse:1
@ 3692 train 4.3583 , allloss: 4.3594, dt: 1305.23ms, fracRes: 0.3571, norm(attn): 0.2188, norm(output): 0.4727, norm(x): 0.4397, norm(y): 1.0127, norm:1.8028, tok/sec: 100420.99, flops:105.39, batch-reuse:1
@ 3693 train 4.3948 , allloss: 4.3964, dt: 1306.47ms, fracRes: 0.3540, norm(attn): 0.2168, norm(output): 0.4707, norm(x): 0.4376, norm(y): 1.0127, norm:1.5795, tok/sec: 100325.22, flops:105.29, batch-reuse:1
@ 3694 train 4.3766 , allloss: 4.3781, dt: 1333.83ms, fracRes: 0.3557, norm(attn): 0.2158, norm(output): 0.4707, norm(x): 0.4370, norm(y): 1.0128, norm:1.9966, tok/sec: 98267.04, flops:103.13, batch-reuse:1
@ 3695 train 4.3667 , allloss: 4.3684, dt: 1333.81ms, fracRes: 0.3559, norm(attn): 0.2148, norm(output): 0.4707, norm(x): 0.4385, norm(y): 1.0128, norm:1.9537, tok/sec: 98268.91, flops:103.14, batch-reuse:1
@ 3696 train 4.3782 , allloss: 4.3816, dt: 1294.60ms, fracRes: 0.3572, norm(attn): 0.2100, norm(output): 0.4746, norm(x): 0.4419, norm(y): 1.0128, norm:1.5741, tok/sec: 101245.08, flops:106.26, batch-reuse:1
@ 3697 train 4.3550 , allloss: 4.3564, dt: 1315.91ms, fracRes: 0.3556, norm(attn): 0.2129, norm(output): 0.4727, norm(x): 0.4391, norm(y): 1.0128, norm:1.8507, tok/sec: 99605.23, flops:104.54, batch-reuse:1
@ 3698 train 4.4631 , allloss: 4.4640, dt: 1300.10ms, fracRes: 0.3563, norm(attn): 0.2148, norm(output): 0.4746, norm(x): 0.4413, norm(y): 1.0128, norm:1.5379, tok/sec: 100816.48, flops:105.81, batch-reuse:1
@ 3699 train 4.2502 , allloss: 4.2512, dt: 1311.76ms, fracRes: 0.3575, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4370, norm(y): 1.0128, norm:1.6077, tok/sec: 99920.68, flops:104.87, batch-reuse:1
@ 3700 train 4.3661 , allloss: 4.3678, dt: 1301.83ms, fracRes: 0.3574, norm(attn): 0.2139, norm(output): 0.4746, norm(x): 0.4398, norm(y): 1.0128, norm:1.9135, tok/sec: 100683.16, flops:105.67, batch-reuse:1
@ 3701 train 4.4234 , allloss: 4.4250, dt: 1320.29ms, fracRes: 0.3570, norm(attn): 0.2129, norm(output): 0.4727, norm(x): 0.4394, norm(y): 1.0128, norm:1.7334, tok/sec: 99275.35, flops:104.19, batch-reuse:1
@ 3702 train 4.3585 , allloss: 4.3595, dt: 1315.07ms, fracRes: 0.3544, norm(attn): 0.2188, norm(output): 0.4707, norm(x): 0.4366, norm(y): 1.0128, norm:1.6734, tok/sec: 99668.88, flops:104.60, batch-reuse:1
@ 3703 train 4.2967 , allloss: 4.2984, dt: 1323.64ms, fracRes: 0.3539, norm(attn): 0.2197, norm(output): 0.4707, norm(x): 0.4351, norm(y): 1.0127, norm:1.5612, tok/sec: 99023.72, flops:103.93, batch-reuse:1
@ 3704 train 4.3066 , allloss: 4.3086, dt: 1288.89ms, fracRes: 0.3531, norm(attn): 0.2178, norm(output): 0.4707, norm(x): 0.4367, norm(y): 1.0128, norm:1.7281, tok/sec: 101693.39, flops:106.73, batch-reuse:1
@ 3705 train 4.4011 , allloss: 4.4130, dt: 1280.12ms, fracRes: 0.3516, norm(attn): 0.2178, norm(output): 0.4688, norm(x): 0.4389, norm(y): 1.0128, norm:1.6189, tok/sec: 102390.58, flops:107.46, batch-reuse:1
@ 3706 train 4.3313 , allloss: 4.3340, dt: 1301.01ms, fracRes: 0.3536, norm(attn): 0.2168, norm(output): 0.4707, norm(x): 0.4380, norm(y): 1.0128, norm:1.6879, tok/sec: 100746.17, flops:105.73, batch-reuse:1
@ 3707 train 4.4851 , allloss: 4.4866, dt: 1286.50ms, fracRes: 0.3551, norm(attn): 0.2148, norm(output): 0.4727, norm(x): 0.4418, norm(y): 1.0128, norm:1.9153, tok/sec: 101882.99, flops:106.93, batch-reuse:1
@ 3708 train 4.5149 , allloss: 4.5164, dt: 1303.26ms, fracRes: 0.3546, norm(attn): 0.2158, norm(output): 0.4727, norm(x): 0.4416, norm(y): 1.0128, norm:1.7071, tok/sec: 100572.53, flops:105.55, batch-reuse:1
@ 3709 train 4.5189 , allloss: 4.5204, dt: 1293.54ms, fracRes: 0.3550, norm(attn): 0.2178, norm(output): 0.4785, norm(x): 0.4447, norm(y): 1.0127, norm:1.5262, tok/sec: 101327.90, flops:106.35, batch-reuse:1
@ 3710 train 4.5560 , allloss: 4.5578, dt: 1301.37ms, fracRes: 0.3583, norm(attn): 0.2129, norm(output): 0.4766, norm(x): 0.4425, norm(y): 1.0129, norm:1.9556, tok/sec: 100718.39, flops:105.71, batch-reuse:1
@ 3711 train 4.5893 , allloss: 4.5911, dt: 1310.92ms, fracRes: 0.3585, norm(attn): 0.2129, norm(output): 0.4727, norm(x): 0.4422, norm(y): 1.0128, norm:1.7093, tok/sec: 99984.76, flops:104.94, batch-reuse:1
@ 3712 train 4.5657 , allloss: 4.5679, dt: 1343.60ms, fracRes: 0.3555, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4479, norm(y): 1.0127, norm:2.2307, tok/sec: 97552.49, flops:102.38, batch-reuse:1
@ 3713 train 4.6467 , allloss: 4.6499, dt: 1340.48ms, fracRes: 0.3592, norm(attn): 0.2129, norm(output): 0.4785, norm(x): 0.4447, norm(y): 1.0127, norm:2.2584, tok/sec: 97779.58, flops:102.62, batch-reuse:1
@ 3714 train 4.5622 , allloss: 4.5643, dt: 1343.54ms, fracRes: 0.3567, norm(attn): 0.2148, norm(output): 0.4746, norm(x): 0.4409, norm(y): 1.0127, norm:2.1235, tok/sec: 97557.05, flops:102.39, batch-reuse:1
@ 3715 train 4.5569 , allloss: 4.5584, dt: 1308.11ms, fracRes: 0.3566, norm(attn): 0.2178, norm(output): 0.4707, norm(x): 0.4415, norm(y): 1.0128, norm:1.9117, tok/sec: 100199.74, flops:105.16, batch-reuse:1
@ 3716 train 4.4928 , allloss: 4.4943, dt: 1315.11ms, fracRes: 0.3563, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4429, norm(y): 1.0128, norm:1.9780, tok/sec: 99666.41, flops:104.60, batch-reuse:1
@ 3717 train 4.5022 , allloss: 4.5043, dt: 1342.36ms, fracRes: 0.3546, norm(attn): 0.2188, norm(output): 0.4766, norm(x): 0.4429, norm(y): 1.0127, norm:1.7400, tok/sec: 97642.94, flops:102.48, batch-reuse:1
@ 3718 train 4.4819 , allloss: 4.4837, dt: 1337.23ms, fracRes: 0.3554, norm(attn): 0.2188, norm(output): 0.4727, norm(x): 0.4437, norm(y): 1.0128, norm:1.9852, tok/sec: 98017.49, flops:102.87, batch-reuse:1
@ 3719 train 4.5433 , allloss: 4.5448, dt: 1308.35ms, fracRes: 0.3545, norm(attn): 0.2158, norm(output): 0.4707, norm(x): 0.4417, norm(y): 1.0128, norm:1.6221, tok/sec: 100181.41, flops:105.14, batch-reuse:1
@ 3720 train 4.4652 , allloss: 4.4671, dt: 1305.41ms, fracRes: 0.3543, norm(attn): 0.2158, norm(output): 0.4727, norm(x): 0.4417, norm(y): 1.0128, norm:2.2551, tok/sec: 100407.09, flops:105.38, batch-reuse:1
@ 3721 train 4.4897 , allloss: 4.4909, dt: 1330.42ms, fracRes: 0.3530, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4444, norm(y): 1.0128, norm:1.7797, tok/sec: 98519.44, flops:103.40, batch-reuse:1
@ 3722 train 4.4308 , allloss: 4.4326, dt: 1331.58ms, fracRes: 0.3551, norm(attn): 0.2148, norm(output): 0.4746, norm(x): 0.4445, norm(y): 1.0128, norm:1.8181, tok/sec: 98433.36, flops:103.31, batch-reuse:1
@ 3723 train 4.5192 , allloss: 4.5214, dt: 1292.25ms, fracRes: 0.3552, norm(attn): 0.2158, norm(output): 0.4746, norm(x): 0.4423, norm(y): 1.0129, norm:1.7283, tok/sec: 101429.24, flops:106.45, batch-reuse:1
@ 3724 train 4.5361 , allloss: 4.5387, dt: 1293.60ms, fracRes: 0.3572, norm(attn): 0.2148, norm(output): 0.4746, norm(x): 0.4440, norm(y): 1.0129, norm:1.6516, tok/sec: 101323.36, flops:106.34, batch-reuse:1
@ 3725 train 4.5386 , allloss: 4.5402, dt: 1295.19ms, fracRes: 0.3556, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4451, norm(y): 1.0128, norm:1.5725, tok/sec: 101198.76, flops:106.21, batch-reuse:1
@ 3726 train 4.5485 , allloss: 4.5497, dt: 1277.52ms, fracRes: 0.3582, norm(attn): 0.2139, norm(output): 0.4727, norm(x): 0.4432, norm(y): 1.0130, norm:1.7724, tok/sec: 102598.58, flops:107.68, batch-reuse:1
@ 3727 train 4.5238 , allloss: 4.5256, dt: 1278.08ms, fracRes: 0.3596, norm(attn): 0.2129, norm(output): 0.4746, norm(x): 0.4460, norm(y): 1.0130, norm:1.6160, tok/sec: 102553.79, flops:107.63, batch-reuse:1
@ 3728 train 4.4862 , allloss: 4.4880, dt: 1289.91ms, fracRes: 0.3566, norm(attn): 0.2158, norm(output): 0.4746, norm(x): 0.4441, norm(y): 1.0129, norm:1.7580, tok/sec: 101613.62, flops:106.65, batch-reuse:1
@ 3729 train 4.5166 , allloss: 4.5180, dt: 1317.67ms, fracRes: 0.3565, norm(attn): 0.2158, norm(output): 0.4746, norm(x): 0.4449, norm(y): 1.0128, norm:1.7631, tok/sec: 99472.44, flops:104.40, batch-reuse:1
@ 3730 train 4.5487 , allloss: 4.5503, dt: 1298.31ms, fracRes: 0.3568, norm(attn): 0.2178, norm(output): 0.4727, norm(x): 0.4423, norm(y): 1.0128, norm:1.6287, tok/sec: 100955.56, flops:105.95, batch-reuse:1
@ 3731 train 4.4696 , allloss: 4.4715, dt: 1294.54ms, fracRes: 0.3561, norm(attn): 0.2158, norm(output): 0.4746, norm(x): 0.4440, norm(y): 1.0128, norm:1.9145, tok/sec: 101250.15, flops:106.26, batch-reuse:1
@ 3732 train 4.5540 , allloss: 4.5551, dt: 1292.30ms, fracRes: 0.3543, norm(attn): 0.2168, norm(output): 0.4746, norm(x): 0.4454, norm(y): 1.0127, norm:1.8211, tok/sec: 101425.46, flops:106.45, batch-reuse:1
@ 3733 train 4.5609 , allloss: 4.5619, dt: 1336.74ms, fracRes: 0.3554, norm(attn): 0.2148, norm(output): 0.4727, norm(x): 0.4445, norm(y): 1.0128, norm:1.9082, tok/sec: 98053.37, flops:102.91, batch-reuse:1
@ 3734 train 4.5283 , allloss: 4.5292, dt: 1338.10ms, fracRes: 0.3544, norm(attn): 0.2178, norm(output): 0.4727, norm(x): 0.4417, norm(y): 1.0128, norm:1.6550, tok/sec: 97953.61, flops:102.80, batch-reuse:1
@ 3735 train 4.6097 , allloss: 4.6116, dt: 1322.83ms, fracRes: 0.3554, norm(attn): 0.2188, norm(output): 0.4766, norm(x): 0.4453, norm(y): 1.0128, norm:2.0562, tok/sec: 99084.76, flops:103.99, batch-reuse:1
@ 3736 train 4.6040 , allloss: 4.6068, dt: 1335.48ms, fracRes: 0.3560, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4436, norm(y): 1.0128, norm:1.8250, tok/sec: 98145.85, flops:103.01, batch-reuse:1
@ 3737 train 4.4862 , allloss: 4.4878, dt: 1293.90ms, fracRes: 0.3562, norm(attn): 0.2168, norm(output): 0.4766, norm(x): 0.4436, norm(y): 1.0128, norm:1.5421, tok/sec: 101300.21, flops:106.32, batch-reuse:1
@ 3738 train 4.4765 , allloss: 4.4777, dt: 1282.04ms, fracRes: 0.3569, norm(attn): 0.2178, norm(output): 0.4727, norm(x): 0.4437, norm(y): 1.0128, norm:1.9523, tok/sec: 102236.99, flops:107.30, batch-reuse:1
@ 3739 train 4.4929 , allloss: 4.4974, dt: 1295.59ms, fracRes: 0.3555, norm(attn): 0.2178, norm(output): 0.4746, norm(x): 0.4444, norm(y): 1.0128, norm:1.7438, tok/sec: 101168.06, flops:106.18, batch-reuse:1
@ 3740 train 4.5829 , allloss: 4.5852, dt: 1307.93ms, fracRes: 0.3560, norm(attn): 0.2148, norm(output): 0.4727, norm(x): 0.4436, norm(y): 1.0128, norm:2.0413, tok/sec: 100213.06, flops:105.18, batch-reuse:1
@ 3741 train 4.6915 , allloss: 4.6923, dt: 1293.82ms, fracRes: 0.3580, norm(attn): 0.2168, norm(output): 0.4746, norm(x): 0.4445, norm(y): 1.0128, norm:2.2523, tok/sec: 101306.22, flops:106.32, batch-reuse:1
@ 3742 train 4.4543 , allloss: 4.4552, dt: 1312.11ms, fracRes: 0.3580, norm(attn): 0.2178, norm(output): 0.4727, norm(x): 0.4412, norm(y): 1.0128, norm:1.9635, tok/sec: 99894.23, flops:104.84, batch-reuse:1
@ 3743 train 4.5204 , allloss: 4.5216, dt: 1314.74ms, fracRes: 0.3609, norm(attn): 0.2139, norm(output): 0.4727, norm(x): 0.4396, norm(y): 1.0128, norm:1.8595, tok/sec: 99693.88, flops:104.63, batch-reuse:1
@ 3744 train 4.7153 , allloss: 4.7159, dt: 1332.03ms, fracRes: 0.3602, norm(attn): 0.2109, norm(output): 0.4727, norm(x): 0.4403, norm(y): 1.0128, norm:1.8604, tok/sec: 98400.29, flops:103.27, batch-reuse:1
@ 3745 train 4.5467 , allloss: 4.5479, dt: 1312.34ms, fracRes: 0.3594, norm(attn): 0.2158, norm(output): 0.4785, norm(x): 0.4470, norm(y): 1.0128, norm:2.1330, tok/sec: 99876.59, flops:104.82, batch-reuse:1
@ 3746 train 4.4998 , allloss: 4.5022, dt: 1339.72ms, fracRes: 0.3580, norm(attn): 0.2158, norm(output): 0.4766, norm(x): 0.4450, norm(y): 1.0128, norm:1.8415, tok/sec: 97835.59, flops:102.68, batch-reuse:1
@ 3747 train 4.4977 , allloss: 4.4998, dt: 1327.27ms, fracRes: 0.3560, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4428, norm(y): 1.0128, norm:1.8423, tok/sec: 98753.11, flops:103.64, batch-reuse:1
@ 3748 train 4.5063 , allloss: 4.5078, dt: 1311.31ms, fracRes: 0.3565, norm(attn): 0.2148, norm(output): 0.4727, norm(x): 0.4421, norm(y): 1.0128, norm:1.7152, tok/sec: 99955.26, flops:104.90, batch-reuse:1
@ 3749 train 4.5349 , allloss: 4.5383, dt: 1325.88ms, fracRes: 0.3564, norm(attn): 0.2158, norm(output): 0.4746, norm(x): 0.4421, norm(y): 1.0128, norm:1.8799, tok/sec: 98856.57, flops:103.75, batch-reuse:1
@ 3750 train 4.5531 , allloss: 4.5542, dt: 1303.57ms, fracRes: 0.3575, norm(attn): 0.2148, norm(output): 0.4727, norm(x): 0.4414, norm(y): 1.0129, norm:1.9659, tok/sec: 100548.36, flops:105.53, batch-reuse:1
@ 3751 train 4.5441 , allloss: 4.5447, dt: 1287.89ms, fracRes: 0.3575, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4398, norm(y): 1.0128, norm:1.6344, tok/sec: 101772.31, flops:106.81, batch-reuse:1
@ 3752 train 4.4303 , allloss: 4.4313, dt: 1278.09ms, fracRes: 0.3581, norm(attn): 0.2197, norm(output): 0.4766, norm(x): 0.4456, norm(y): 1.0128, norm:1.7427, tok/sec: 102553.39, flops:107.63, batch-reuse:1
@ 3753 train 4.5391 , allloss: 4.5401, dt: 1285.45ms, fracRes: 0.3553, norm(attn): 0.2168, norm(output): 0.4746, norm(x): 0.4420, norm(y): 1.0129, norm:2.2763, tok/sec: 101966.21, flops:107.02, batch-reuse:1
@ 3754 train 4.4860 , allloss: 4.4871, dt: 1304.29ms, fracRes: 0.3573, norm(attn): 0.2148, norm(output): 0.4727, norm(x): 0.4407, norm(y): 1.0129, norm:1.7407, tok/sec: 100492.62, flops:105.47, batch-reuse:1
@ 3755 train 4.5030 , allloss: 4.5042, dt: 1289.94ms, fracRes: 0.3571, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4380, norm(y): 1.0128, norm:2.3103, tok/sec: 101610.67, flops:106.64, batch-reuse:1
@ 3756 train 4.5868 , allloss: 4.5879, dt: 1296.99ms, fracRes: 0.3558, norm(attn): 0.2168, norm(output): 0.4707, norm(x): 0.4394, norm(y): 1.0127, norm:1.8904, tok/sec: 101058.82, flops:106.06, batch-reuse:1
@ 3757 train 4.5156 , allloss: 4.5164, dt: 1293.68ms, fracRes: 0.3552, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4418, norm(y): 1.0128, norm:1.8911, tok/sec: 101317.38, flops:106.33, batch-reuse:1
@ 3758 train 4.4960 , allloss: 4.4971, dt: 1307.13ms, fracRes: 0.3550, norm(attn): 0.2168, norm(output): 0.4727, norm(x): 0.4436, norm(y): 1.0128, norm:1.7415, tok/sec: 100274.95, flops:105.24, batch-reuse:1
@ 3759 train 4.5331 , allloss: 4.5344, dt: 1315.25ms, fracRes: 0.3556, norm(attn): 0.2148, norm(output): 0.4727, norm(x): 0.4436, norm(y): 1.0128, norm:1.8788, tok/sec: 99655.46, flops:104.59, batch-reuse:1
@ 3760 train 4.5537 , allloss: 4.5553, dt: 1316.03ms, fracRes: 0.3559, norm(attn): 0.2148, norm(output): 0.4766, norm(x): 0.4434, norm(y): 1.0128, norm:1.7976, tok/sec: 99596.73, flops:104.53, batch-reuse:1
@ 3761 train 4.6048 , allloss: 4.6062, dt: 1314.04ms, fracRes: 0.3570, norm(attn): 0.2158, norm(output): 0.4805, norm(x): 0.4487, norm(y): 1.0128, norm:1.7528, tok/sec: 99747.28, flops:104.69, batch-reuse:1
@ 3762 train 4.3995 , allloss: 4.4006, dt: 1328.14ms, fracRes: 0.3568, norm(attn): 0.2197, norm(output): 0.4766, norm(x): 0.4497, norm(y): 1.0128, norm:2.0197, tok/sec: 98688.74, flops:103.58, batch-reuse:1
@ 3763 train 4.5785 , allloss: 4.5793, dt: 1337.33ms, fracRes: 0.3564, norm(attn): 0.2207, norm(output): 0.4727, norm(x): 0.4422, norm(y): 1.0128, norm:1.9872, tok/sec: 98010.49, flops:102.86, batch-reuse:1
@ 3764 train 4.5174 , allloss: 4.5184, dt: 1317.97ms, fracRes: 0.3546, norm(attn): 0.2207, norm(output): 0.4727, norm(x): 0.4397, norm(y): 1.0127, norm:1.8711, tok/sec: 99450.07, flops:104.37, batch-reuse:1
@ 3765 train 4.4834 , allloss: 4.4852, dt: 1313.61ms, fracRes: 0.3575, norm(attn): 0.2178, norm(output): 0.4727, norm(x): 0.4403, norm(y): 1.0129, norm:1.6174, tok/sec: 99779.90, flops:104.72, batch-reuse:1
@ 3766 train 4.4526 , allloss: 4.4551, dt: 1313.32ms, fracRes: 0.3584, norm(attn): 0.2168, norm(output): 0.4746, norm(x): 0.4430, norm(y): 1.0129, norm:1.6929, tok/sec: 99801.80, flops:104.74, batch-reuse:1
@ 3767 train 4.4825 , allloss: 4.4860, dt: 1310.20ms, fracRes: 0.3570, norm(attn): 0.2148, norm(output): 0.4746, norm(x): 0.4409, norm(y): 1.0129, norm:1.5658, tok/sec: 100039.95, flops:104.99, batch-reuse:1
@ 3768 train 4.4644 , allloss: 4.4652, dt: 1330.31ms, fracRes: 0.3554, norm(attn): 0.2168, norm(output): 0.4766, norm(x): 0.4426, norm(y): 1.0128, norm:1.8480, tok/sec: 98527.54, flops:103.41, batch-reuse:1
@ 3769 train 4.6686 , allloss: 4.6696, dt: 1300.99ms, fracRes: 0.3575, norm(attn): 0.2129, norm(output): 0.4766, norm(x): 0.4445, norm(y): 1.0129, norm:1.5702, tok/sec: 100748.27, flops:105.74, batch-reuse:1
@ 3770 train 4.5226 , allloss: 4.5234, dt: 1303.46ms, fracRes: 0.3577, norm(attn): 0.2168, norm(output): 0.4785, norm(x): 0.4448, norm(y): 1.0129, norm:2.0271, tok/sec: 100556.82, flops:105.54, batch-reuse:1
@ 3771 train 4.5056 , allloss: 4.5071, dt: 1301.53ms, fracRes: 0.3585, norm(attn): 0.2129, norm(output): 0.4844, norm(x): 0.4470, norm(y): 1.0129, norm:1.6333, tok/sec: 100706.29, flops:105.69, batch-reuse:1
@ 3772 train 4.5358 , allloss: 4.5370, dt: 1298.91ms, fracRes: 0.3562, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4409, norm(y): 1.0128, norm:1.8084, tok/sec: 100909.44, flops:105.91, batch-reuse:1
@ 3773 train 4.5300 , allloss: 4.5311, dt: 1317.40ms, fracRes: 0.3578, norm(attn): 0.2158, norm(output): 0.4746, norm(x): 0.4421, norm(y): 1.0129, norm:1.6893, tok/sec: 99493.30, flops:104.42, batch-reuse:1
@ 3774 train 4.4905 , allloss: 4.4925, dt: 1318.59ms, fracRes: 0.3572, norm(attn): 0.2139, norm(output): 0.4785, norm(x): 0.4462, norm(y): 1.0128, norm:1.8240, tok/sec: 99403.52, flops:104.33, batch-reuse:1
@ 3775 train 4.5151 , allloss: 4.5206, dt: 1317.03ms, fracRes: 0.3588, norm(attn): 0.2158, norm(output): 0.4805, norm(x): 0.4470, norm(y): 1.0129, norm:1.8917, tok/sec: 99520.77, flops:104.45, batch-reuse:1
@ 3776 train 4.5524 , allloss: 4.5541, dt: 1334.07ms, fracRes: 0.3578, norm(attn): 0.2148, norm(output): 0.4805, norm(x): 0.4437, norm(y): 1.0128, norm:1.7335, tok/sec: 98249.68, flops:103.11, batch-reuse:1
@ 3777 train 4.5154 , allloss: 4.5165, dt: 1332.72ms, fracRes: 0.3573, norm(attn): 0.2188, norm(output): 0.4727, norm(x): 0.4409, norm(y): 1.0129, norm:1.8090, tok/sec: 98349.15, flops:103.22, batch-reuse:1
@ 3778 train 4.4806 , allloss: 4.4815, dt: 1325.26ms, fracRes: 0.3553, norm(attn): 0.2217, norm(output): 0.4707, norm(x): 0.4373, norm(y): 1.0128, norm:1.6081, tok/sec: 98903.09, flops:103.80, batch-reuse:1
@ 3779 train 4.4196 , allloss: 4.4208, dt: 1300.98ms, fracRes: 0.3559, norm(attn): 0.2207, norm(output): 0.4727, norm(x): 0.4409, norm(y): 1.0129, norm:1.7205, tok/sec: 100748.70, flops:105.74, batch-reuse:1
@ 3780 train 4.5116 , allloss: 4.5131, dt: 1291.17ms, fracRes: 0.3555, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4413, norm(y): 1.0129, norm:1.6472, tok/sec: 101514.18, flops:106.54, batch-reuse:1
@ 3781 train 4.4034 , allloss: 4.4048, dt: 1318.09ms, fracRes: 0.3560, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4408, norm(y): 1.0129, norm:1.7101, tok/sec: 99440.61, flops:104.36, batch-reuse:1
@ 3782 train 4.6581 , allloss: 4.6604, dt: 1314.74ms, fracRes: 0.3573, norm(attn): 0.2188, norm(output): 0.4785, norm(x): 0.4436, norm(y): 1.0128, norm:2.0187, tok/sec: 99694.40, flops:104.63, batch-reuse:1
@ 3783 train 4.4336 , allloss: 4.4351, dt: 1313.84ms, fracRes: 0.3574, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4412, norm(y): 1.0129, norm:1.9696, tok/sec: 99762.73, flops:104.70, batch-reuse:1
@ 3784 train 4.4943 , allloss: 4.4960, dt: 1342.19ms, fracRes: 0.3592, norm(attn): 0.2158, norm(output): 0.4727, norm(x): 0.4417, norm(y): 1.0130, norm:1.6506, tok/sec: 97654.98, flops:102.49, batch-reuse:1
@ 3785 train 4.4780 , allloss: 4.4793, dt: 1305.92ms, fracRes: 0.3587, norm(attn): 0.2168, norm(output): 0.4746, norm(x): 0.4431, norm(y): 1.0130, norm:1.8177, tok/sec: 100367.38, flops:105.34, batch-reuse:1
@ 3786 train 4.4908 , allloss: 4.4922, dt: 1283.18ms, fracRes: 0.3587, norm(attn): 0.2178, norm(output): 0.4766, norm(x): 0.4444, norm(y): 1.0130, norm:1.9010, tok/sec: 102146.34, flops:107.20, batch-reuse:1
@ 3787 train 4.5066 , allloss: 4.5079, dt: 1310.58ms, fracRes: 0.3578, norm(attn): 0.2188, norm(output): 0.4805, norm(x): 0.4448, norm(y): 1.0128, norm:1.5936, tok/sec: 100010.83, flops:104.96, batch-reuse:1
@ 3788 train 4.4864 , allloss: 4.4875, dt: 1311.27ms, fracRes: 0.3591, norm(attn): 0.2178, norm(output): 0.4766, norm(x): 0.4407, norm(y): 1.0129, norm:2.0159, tok/sec: 99958.35, flops:104.91, batch-reuse:1
@ 3789 train 4.5171 , allloss: 4.5186, dt: 1326.77ms, fracRes: 0.3597, norm(attn): 0.2158, norm(output): 0.4766, norm(x): 0.4441, norm(y): 1.0129, norm:1.7240, tok/sec: 98790.47, flops:103.68, batch-reuse:1
@ 3790 train 4.5867 , allloss: 4.5885, dt: 1339.53ms, fracRes: 0.3584, norm(attn): 0.2168, norm(output): 0.4785, norm(x): 0.4445, norm(y): 1.0129, norm:1.9738, tok/sec: 97848.93, flops:102.69, batch-reuse:1
@ 3791 train 4.4734 , allloss: 4.4764, dt: 1363.94ms, fracRes: 0.3556, norm(attn): 0.2188, norm(output): 0.4824, norm(x): 0.4489, norm(y): 1.0128, norm:1.8630, tok/sec: 96097.93, flops:100.86, batch-reuse:1
@ 3792 train 4.5772 , allloss: 4.5783, dt: 1301.32ms, fracRes: 0.3563, norm(attn): 0.2188, norm(output): 0.4766, norm(x): 0.4458, norm(y): 1.0129, norm:2.1400, tok/sec: 100722.45, flops:105.71, batch-reuse:1
@ 3793 train 4.5405 , allloss: 4.5431, dt: 1292.81ms, fracRes: 0.3562, norm(attn): 0.2158, norm(output): 0.4766, norm(x): 0.4452, norm(y): 1.0129, norm:1.7131, tok/sec: 101385.00, flops:106.41, batch-reuse:1
@ 3794 train 4.4668 , allloss: 4.4709, dt: 1295.46ms, fracRes: 0.3555, norm(attn): 0.2178, norm(output): 0.4766, norm(x): 0.4437, norm(y): 1.0129, norm:1.6397, tok/sec: 101177.68, flops:106.19, batch-reuse:1
@ 3795 train 4.4204 , allloss: 4.4238, dt: 1288.21ms, fracRes: 0.3568, norm(attn): 0.2197, norm(output): 0.4746, norm(x): 0.4459, norm(y): 1.0129, norm:1.6255, tok/sec: 101747.03, flops:106.79, batch-reuse:1
@ 3796 train 4.5446 , allloss: 4.5467, dt: 1304.95ms, fracRes: 0.3563, norm(attn): 0.2178, norm(output): 0.4824, norm(x): 0.4455, norm(y): 1.0129, norm:1.7259, tok/sec: 100441.96, flops:105.42, batch-reuse:1
@ 3797 train 4.5710 , allloss: 4.5721, dt: 1329.58ms, fracRes: 0.3590, norm(attn): 0.2158, norm(output): 0.4824, norm(x): 0.4508, norm(y): 1.0129, norm:1.8436, tok/sec: 98581.71, flops:103.46, batch-reuse:1
@ 3798 train 4.4921 , allloss: 4.4933, dt: 1330.61ms, fracRes: 0.3558, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4441, norm(y): 1.0129, norm:1.9296, tok/sec: 98504.84, flops:103.38, batch-reuse:1
@ 3799 train 4.4881 , allloss: 4.4889, dt: 1303.83ms, fracRes: 0.3552, norm(attn): 0.2207, norm(output): 0.4785, norm(x): 0.4460, norm(y): 1.0129, norm:1.6385, tok/sec: 100528.67, flops:105.51, batch-reuse:1
@ 3800 train 4.4646 , allloss: 4.4679, dt: 1279.48ms, fracRes: 0.3573, norm(attn): 0.2158, norm(output): 0.4766, norm(x): 0.4467, norm(y): 1.0131, norm:1.7837, tok/sec: 102441.26, flops:107.51, batch-reuse:1
@ 3801 train 4.4342 , allloss: 4.4353, dt: 1313.37ms, fracRes: 0.3568, norm(attn): 0.2168, norm(output): 0.4766, norm(x): 0.4446, norm(y): 1.0131, norm:1.8213, tok/sec: 99797.92, flops:104.74, batch-reuse:1
@ 3802 train 4.4752 , allloss: 4.4761, dt: 1314.35ms, fracRes: 0.3559, norm(attn): 0.2178, norm(output): 0.4727, norm(x): 0.4422, norm(y): 1.0130, norm:1.6603, tok/sec: 99723.57, flops:104.66, batch-reuse:1
@ 3803 train 4.4698 , allloss: 4.4710, dt: 1339.58ms, fracRes: 0.3571, norm(attn): 0.2188, norm(output): 0.4785, norm(x): 0.4446, norm(y): 1.0129, norm:1.5949, tok/sec: 97845.50, flops:102.69, batch-reuse:1
@ 3804 train 4.4278 , allloss: 4.4292, dt: 1299.71ms, fracRes: 0.3602, norm(attn): 0.2188, norm(output): 0.4805, norm(x): 0.4472, norm(y): 1.0130, norm:1.8240, tok/sec: 100847.29, flops:105.84, batch-reuse:1
@ 3805 train 4.5393 , allloss: 4.5436, dt: 1286.23ms, fracRes: 0.3600, norm(attn): 0.2139, norm(output): 0.4766, norm(x): 0.4456, norm(y): 1.0129, norm:1.5205, tok/sec: 101903.87, flops:106.95, batch-reuse:1
@ 3806 train 4.4639 , allloss: 4.4649, dt: 1284.52ms, fracRes: 0.3590, norm(attn): 0.2168, norm(output): 0.4805, norm(x): 0.4457, norm(y): 1.0129, norm:1.6727, tok/sec: 102039.76, flops:107.09, batch-reuse:1
@ 3807 train 4.3945 , allloss: 4.3962, dt: 1284.55ms, fracRes: 0.3579, norm(attn): 0.2188, norm(output): 0.4727, norm(x): 0.4433, norm(y): 1.0129, norm:1.9750, tok/sec: 102037.33, flops:107.09, batch-reuse:1
@ 3808 train 4.4365 , allloss: 4.4385, dt: 1298.25ms, fracRes: 0.3582, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4464, norm(y): 1.0129, norm:1.5790, tok/sec: 100960.29, flops:105.96, batch-reuse:1
@ 3809 train 4.4078 , allloss: 4.4094, dt: 1307.81ms, fracRes: 0.3569, norm(attn): 0.2188, norm(output): 0.4785, norm(x): 0.4444, norm(y): 1.0130, norm:1.5171, tok/sec: 100222.36, flops:105.19, batch-reuse:1
@ 3810 train 4.3976 , allloss: 4.3984, dt: 1303.78ms, fracRes: 0.3583, norm(attn): 0.2188, norm(output): 0.4844, norm(x): 0.4460, norm(y): 1.0129, norm:1.7866, tok/sec: 100531.94, flops:105.51, batch-reuse:1
@ 3811 train 4.3770 , allloss: 4.3806, dt: 1327.18ms, fracRes: 0.3557, norm(attn): 0.2188, norm(output): 0.4785, norm(x): 0.4441, norm(y): 1.0129, norm:1.6937, tok/sec: 98759.87, flops:103.65, batch-reuse:1
@ 3812 train 4.4090 , allloss: 4.4109, dt: 1312.48ms, fracRes: 0.3564, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4406, norm(y): 1.0130, norm:1.5726, tok/sec: 99865.69, flops:104.81, batch-reuse:1
@ 3813 train 4.2909 , allloss: 4.2923, dt: 1305.54ms, fracRes: 0.3577, norm(attn): 0.2197, norm(output): 0.4766, norm(x): 0.4421, norm(y): 1.0130, norm:1.4480, tok/sec: 100396.60, flops:105.37, batch-reuse:1
@ 3814 train 4.4664 , allloss: 4.4710, dt: 1547.50ms, fracRes: 0.3574, norm(attn): 0.2188, norm(output): 0.4805, norm(x): 0.4422, norm(y): 1.0129, norm:1.6469, tok/sec: 84699.08, flops:88.89, batch-reuse:1
@ 3815 train 4.4102 , allloss: 4.4115, dt: 1303.60ms, fracRes: 0.3599, norm(attn): 0.2188, norm(output): 0.4824, norm(x): 0.4451, norm(y): 1.0130, norm:1.7357, tok/sec: 100545.99, flops:105.52, batch-reuse:1
@ 3816 train 4.4613 , allloss: 4.4629, dt: 1308.57ms, fracRes: 0.3577, norm(attn): 0.2188, norm(output): 0.4805, norm(x): 0.4447, norm(y): 1.0130, norm:1.7692, tok/sec: 100164.31, flops:105.12, batch-reuse:1
@ 3817 train 4.4488 , allloss: 4.4511, dt: 1286.83ms, fracRes: 0.3576, norm(attn): 0.2158, norm(output): 0.4746, norm(x): 0.4416, norm(y): 1.0130, norm:1.6660, tok/sec: 101856.50, flops:106.90, batch-reuse:1
@ 3818 train 4.4706 , allloss: 4.4727, dt: 1290.70ms, fracRes: 0.3559, norm(attn): 0.2168, norm(output): 0.4746, norm(x): 0.4426, norm(y): 1.0130, norm:1.8344, tok/sec: 101551.44, flops:106.58, batch-reuse:1
@ 3819 train 4.4393 , allloss: 4.4409, dt: 1294.79ms, fracRes: 0.3556, norm(attn): 0.2197, norm(output): 0.4766, norm(x): 0.4456, norm(y): 1.0129, norm:1.6966, tok/sec: 101230.37, flops:106.24, batch-reuse:1
@ 3820 train 4.4922 , allloss: 4.4954, dt: 1302.27ms, fracRes: 0.3553, norm(attn): 0.2178, norm(output): 0.4844, norm(x): 0.4475, norm(y): 1.0130, norm:1.7535, tok/sec: 100648.60, flops:105.63, batch-reuse:1
@ 3821 train 4.5019 , allloss: 4.5032, dt: 1315.77ms, fracRes: 0.3567, norm(attn): 0.2188, norm(output): 0.4844, norm(x): 0.4481, norm(y): 1.0130, norm:1.6465, tok/sec: 99616.38, flops:104.55, batch-reuse:1
@ 3822 train 4.3717 , allloss: 4.3732, dt: 1301.87ms, fracRes: 0.3574, norm(attn): 0.2188, norm(output): 0.4746, norm(x): 0.4453, norm(y): 1.0129, norm:1.6111, tok/sec: 100679.75, flops:105.67, batch-reuse:1
@ 3823 train 4.4535 , allloss: 4.4546, dt: 1308.51ms, fracRes: 0.3572, norm(attn): 0.2188, norm(output): 0.4805, norm(x): 0.4462, norm(y): 1.0129, norm:1.6290, tok/sec: 100168.82, flops:105.13, batch-reuse:1
@ 3824 train 4.3805 , allloss: 4.3822, dt: 1310.25ms, fracRes: 0.3568, norm(attn): 0.2197, norm(output): 0.4824, norm(x): 0.4451, norm(y): 1.0130, norm:1.4918, tok/sec: 100035.87, flops:104.99, batch-reuse:1
@ 3825 train 4.3986 , allloss: 4.4032, dt: 1337.43ms, fracRes: 0.3578, norm(attn): 0.2188, norm(output): 0.4785, norm(x): 0.4484, norm(y): 1.0130, norm:1.7987, tok/sec: 98002.96, flops:102.86, batch-reuse:1
@ 3826 train 4.4642 , allloss: 4.4654, dt: 1298.30ms, fracRes: 0.3574, norm(attn): 0.2178, norm(output): 0.4766, norm(x): 0.4432, norm(y): 1.0129, norm:1.5022, tok/sec: 100956.86, flops:105.96, batch-reuse:1
@ 3827 train 4.4186 , allloss: 4.4248, dt: 1321.91ms, fracRes: 0.3592, norm(attn): 0.2178, norm(output): 0.4746, norm(x): 0.4424, norm(y): 1.0130, norm:1.6932, tok/sec: 99153.77, flops:104.06, batch-reuse:1
@ 3828 train 4.3739 , allloss: 4.3759, dt: 1315.86ms, fracRes: 0.3583, norm(attn): 0.2158, norm(output): 0.4766, norm(x): 0.4440, norm(y): 1.0129, norm:1.5336, tok/sec: 99609.70, flops:104.54, batch-reuse:1
@ 3829 train 4.4191 , allloss: 4.4207, dt: 1301.48ms, fracRes: 0.3601, norm(attn): 0.2168, norm(output): 0.4805, norm(x): 0.4468, norm(y): 1.0130, norm:1.6145, tok/sec: 100710.22, flops:105.70, batch-reuse:1
@ 3830 train 4.4875 , allloss: 4.4893, dt: 1287.28ms, fracRes: 0.3620, norm(attn): 0.2158, norm(output): 0.4883, norm(x): 0.4508, norm(y): 1.0130, norm:2.0979, tok/sec: 101820.76, flops:106.86, batch-reuse:1
@ 3831 train 4.3139 , allloss: 4.3153, dt: 1313.29ms, fracRes: 0.3597, norm(attn): 0.2178, norm(output): 0.4902, norm(x): 0.4517, norm(y): 1.0129, norm:1.7178, tok/sec: 99804.34, flops:104.75, batch-reuse:1
@ 3832 train 4.3291 , allloss: 4.3336, dt: 1348.65ms, fracRes: 0.3614, norm(attn): 0.2188, norm(output): 0.4863, norm(x): 0.4514, norm(y): 1.0130, norm:2.1366, tok/sec: 97187.46, flops:102.00, batch-reuse:1
@ 3833 train 4.3842 , allloss: 4.3865, dt: 1337.58ms, fracRes: 0.3581, norm(attn): 0.2188, norm(output): 0.4824, norm(x): 0.4474, norm(y): 1.0130, norm:1.7438, tok/sec: 97991.85, flops:102.84, batch-reuse:1
@ 3834 train 4.4206 , allloss: 4.4272, dt: 1310.59ms, fracRes: 0.3575, norm(attn): 0.2158, norm(output): 0.4766, norm(x): 0.4466, norm(y): 1.0129, norm:1.5069, tok/sec: 100010.08, flops:104.96, batch-reuse:1
@ 3835 train 4.3482 , allloss: 4.3515, dt: 1330.29ms, fracRes: 0.3602, norm(attn): 0.2178, norm(output): 0.4883, norm(x): 0.4509, norm(y): 1.0130, norm:1.8188, tok/sec: 98528.53, flops:103.41, batch-reuse:1
@ 3836 train 4.4024 , allloss: 4.4039, dt: 1310.33ms, fracRes: 0.3575, norm(attn): 0.2188, norm(output): 0.4922, norm(x): 0.4502, norm(y): 1.0129, norm:1.6533, tok/sec: 100030.06, flops:104.98, batch-reuse:1
@ 3837 train 4.5153 , allloss: 4.5192, dt: 1309.98ms, fracRes: 0.3590, norm(attn): 0.2168, norm(output): 0.4883, norm(x): 0.4471, norm(y): 1.0130, norm:1.8443, tok/sec: 100056.68, flops:105.01, batch-reuse:1
@ 3838 train 4.3914 , allloss: 4.3924, dt: 1339.85ms, fracRes: 0.3595, norm(attn): 0.2178, norm(output): 0.4805, norm(x): 0.4473, norm(y): 1.0130, norm:1.8021, tok/sec: 97825.67, flops:102.67, batch-reuse:1
@ 3839 train 4.3922 , allloss: 4.3940, dt: 1318.24ms, fracRes: 0.3593, norm(attn): 0.2178, norm(output): 0.4902, norm(x): 0.4481, norm(y): 1.0130, norm:1.6129, tok/sec: 99429.80, flops:104.35, batch-reuse:1
@ 3840 train 4.5215 , allloss: 4.5300, dt: 1333.54ms, fracRes: 0.3611, norm(attn): 0.2119, norm(output): 0.4883, norm(x): 0.4480, norm(y): 1.0130, norm:1.9961, tok/sec: 98288.94, flops:103.16, batch-reuse:1
@ 3841 train 4.4159 , allloss: 4.4180, dt: 1284.12ms, fracRes: 0.3584, norm(attn): 0.2158, norm(output): 0.4824, norm(x): 0.4446, norm(y): 1.0130, norm:1.6005, tok/sec: 102071.32, flops:107.13, batch-reuse:1
@ 3842 train 4.3434 , allloss: 4.3441, dt: 1303.66ms, fracRes: 0.3550, norm(attn): 0.2158, norm(output): 0.4707, norm(x): 0.4389, norm(y): 1.0129, norm:1.7223, tok/sec: 100541.23, flops:105.52, batch-reuse:1
@ 3843 train 4.4565 , allloss: 4.4583, dt: 1329.73ms, fracRes: 0.3589, norm(attn): 0.2188, norm(output): 0.4766, norm(x): 0.4436, norm(y): 1.0129, norm:2.1465, tok/sec: 98570.74, flops:103.45, batch-reuse:1
@ 3844 train 4.4017 , allloss: 4.4035, dt: 1342.69ms, fracRes: 0.3588, norm(attn): 0.2188, norm(output): 0.4805, norm(x): 0.4466, norm(y): 1.0129, norm:1.8262, tok/sec: 97619.08, flops:102.45, batch-reuse:1
@ 3845 train 4.3705 , allloss: 4.3724, dt: 1289.71ms, fracRes: 0.3598, norm(attn): 0.2168, norm(output): 0.4883, norm(x): 0.4477, norm(y): 1.0129, norm:1.6995, tok/sec: 101629.04, flops:106.66, batch-reuse:1
@ 3846 train 4.2021 , allloss: 4.2041, dt: 1306.73ms, fracRes: 0.3594, norm(attn): 0.2178, norm(output): 0.4844, norm(x): 0.4482, norm(y): 1.0131, norm:2.0233, tok/sec: 100305.50, flops:105.27, batch-reuse:1
@ 3847 train 4.4822 , allloss: 4.4835, dt: 1334.66ms, fracRes: 0.3599, norm(attn): 0.2148, norm(output): 0.4805, norm(x): 0.4482, norm(y): 1.0130, norm:1.6602, tok/sec: 98206.11, flops:103.07, batch-reuse:1
@ 3848 train 4.3795 , allloss: 4.3826, dt: 1294.71ms, fracRes: 0.3582, norm(attn): 0.2188, norm(output): 0.4785, norm(x): 0.4440, norm(y): 1.0129, norm:1.8257, tok/sec: 101236.37, flops:106.25, batch-reuse:1
@ 3849 train 4.2821 , allloss: 4.2835, dt: 1287.21ms, fracRes: 0.3601, norm(attn): 0.2148, norm(output): 0.4824, norm(x): 0.4448, norm(y): 1.0130, norm:1.6239, tok/sec: 101826.26, flops:106.87, batch-reuse:1
@ 3850 train 4.3766 , allloss: 4.3791, dt: 1309.80ms, fracRes: 0.3610, norm(attn): 0.2119, norm(output): 0.4883, norm(x): 0.4476, norm(y): 1.0131, norm:1.9704, tok/sec: 100070.61, flops:105.03, batch-reuse:1
@ 3851 train 4.3544 , allloss: 4.3591, dt: 1323.32ms, fracRes: 0.3605, norm(attn): 0.2139, norm(output): 0.4902, norm(x): 0.4463, norm(y): 1.0131, norm:1.9053, tok/sec: 99047.48, flops:103.95, batch-reuse:1
@ 3852 train 4.2841 , allloss: 4.2859, dt: 1312.42ms, fracRes: 0.3627, norm(attn): 0.2129, norm(output): 0.4883, norm(x): 0.4463, norm(y): 1.0131, norm:1.6902, tok/sec: 99870.51, flops:104.82, batch-reuse:1
@ 3853 train 4.3609 , allloss: 4.3634, dt: 1333.56ms, fracRes: 0.3623, norm(attn): 0.2139, norm(output): 0.4824, norm(x): 0.4476, norm(y): 1.0130, norm:1.8172, tok/sec: 98287.03, flops:103.15, batch-reuse:1
@ 3854 train 4.3392 , allloss: 4.3406, dt: 1335.88ms, fracRes: 0.3629, norm(attn): 0.2100, norm(output): 0.4844, norm(x): 0.4441, norm(y): 1.0131, norm:1.6890, tok/sec: 98116.44, flops:102.98, batch-reuse:1
@ 3855 train 4.2617 , allloss: 4.2638, dt: 1314.98ms, fracRes: 0.3606, norm(attn): 0.2139, norm(output): 0.4785, norm(x): 0.4436, norm(y): 1.0132, norm:1.6453, tok/sec: 99676.29, flops:104.61, batch-reuse:1
@ 3856 train 4.3036 , allloss: 4.3051, dt: 1277.67ms, fracRes: 0.3587, norm(attn): 0.2158, norm(output): 0.4844, norm(x): 0.4447, norm(y): 1.0131, norm:1.9878, tok/sec: 102587.09, flops:107.67, batch-reuse:1
@ 3857 train 4.1969 , allloss: 4.1981, dt: 1292.78ms, fracRes: 0.3592, norm(attn): 0.2139, norm(output): 0.4883, norm(x): 0.4481, norm(y): 1.0130, norm:1.7878, tok/sec: 101387.49, flops:106.41, batch-reuse:1
@ 3858 train 4.3089 , allloss: 4.3136, dt: 1316.88ms, fracRes: 0.3583, norm(attn): 0.2188, norm(output): 0.4805, norm(x): 0.4441, norm(y): 1.0130, norm:2.0409, tok/sec: 99532.43, flops:104.46, batch-reuse:1
@ 3859 train 4.2703 , allloss: 4.2716, dt: 1284.26ms, fracRes: 0.3571, norm(attn): 0.2197, norm(output): 0.4746, norm(x): 0.4418, norm(y): 1.0130, norm:1.6707, tok/sec: 102060.48, flops:107.11, batch-reuse:1
@ 3860 train 4.3628 , allloss: 4.3644, dt: 1305.27ms, fracRes: 0.3587, norm(attn): 0.2227, norm(output): 0.4844, norm(x): 0.4488, norm(y): 1.0129, norm:2.1022, tok/sec: 100417.91, flops:105.39, batch-reuse:1
@ 3861 train 4.3776 , allloss: 4.3793, dt: 1344.67ms, fracRes: 0.3574, norm(attn): 0.2197, norm(output): 0.4902, norm(x): 0.4522, norm(y): 1.0129, norm:2.0669, tok/sec: 97475.30, flops:102.30, batch-reuse:1
@ 3862 train 4.3677 , allloss: 4.3692, dt: 1304.26ms, fracRes: 0.3582, norm(attn): 0.2207, norm(output): 0.4844, norm(x): 0.4470, norm(y): 1.0130, norm:1.6878, tok/sec: 100495.68, flops:105.47, batch-reuse:1
@ 3863 train 4.3608 , allloss: 4.3618, dt: 1348.95ms, fracRes: 0.3593, norm(attn): 0.2168, norm(output): 0.4922, norm(x): 0.4487, norm(y): 1.0130, norm:1.6209, tok/sec: 97165.61, flops:101.98, batch-reuse:1
@ 3864 train 4.3228 , allloss: 4.3238, dt: 1340.79ms, fracRes: 0.3584, norm(attn): 0.2188, norm(output): 0.4941, norm(x): 0.4513, norm(y): 1.0129, norm:1.5344, tok/sec: 97757.10, flops:102.60, batch-reuse:1
@ 3865 train 4.3898 , allloss: 4.3906, dt: 1331.82ms, fracRes: 0.3585, norm(attn): 0.2158, norm(output): 0.4902, norm(x): 0.4485, norm(y): 1.0130, norm:1.6812, tok/sec: 98415.93, flops:103.29, batch-reuse:1
@ 3866 train 4.2906 , allloss: 4.2936, dt: 1313.30ms, fracRes: 0.3589, norm(attn): 0.2188, norm(output): 0.4922, norm(x): 0.4478, norm(y): 1.0130, norm:1.5315, tok/sec: 99803.72, flops:104.75, batch-reuse:1
@ 3867 train 4.2806 , allloss: 4.2823, dt: 1319.74ms, fracRes: 0.3579, norm(attn): 0.2168, norm(output): 0.4844, norm(x): 0.4496, norm(y): 1.0129, norm:1.6671, tok/sec: 99316.78, flops:104.23, batch-reuse:1
@ 3868 train 4.2275 , allloss: 4.2290, dt: 1308.35ms, fracRes: 0.3578, norm(attn): 0.2197, norm(output): 0.4883, norm(x): 0.4457, norm(y): 1.0129, norm:1.6586, tok/sec: 100181.08, flops:105.14, batch-reuse:1
@ 3869 train 4.2376 , allloss: 4.2386, dt: 1319.60ms, fracRes: 0.3609, norm(attn): 0.2207, norm(output): 0.4883, norm(x): 0.4487, norm(y): 1.0130, norm:1.7529, tok/sec: 99327.40, flops:104.25, batch-reuse:1
@ 3870 train 4.2770 , allloss: 4.2790, dt: 1328.02ms, fracRes: 0.3593, norm(attn): 0.2168, norm(output): 0.4883, norm(x): 0.4493, norm(y): 1.0130, norm:1.5881, tok/sec: 98696.96, flops:103.58, batch-reuse:1
@ 3871 train 4.3799 , allloss: 4.3812, dt: 1304.26ms, fracRes: 0.3592, norm(attn): 0.2188, norm(output): 0.4844, norm(x): 0.4504, norm(y): 1.0129, norm:2.1138, tok/sec: 100495.19, flops:105.47, batch-reuse:1
@ 3872 train 4.3820 , allloss: 4.3835, dt: 1316.90ms, fracRes: 0.3594, norm(attn): 0.2207, norm(output): 0.4785, norm(x): 0.4465, norm(y): 1.0129, norm:1.7963, tok/sec: 99530.75, flops:104.46, batch-reuse:1
@ 3873 train 4.3112 , allloss: 4.3126, dt: 1342.40ms, fracRes: 0.3581, norm(attn): 0.2246, norm(output): 0.4805, norm(x): 0.4449, norm(y): 1.0128, norm:1.5545, tok/sec: 97639.96, flops:102.47, batch-reuse:1
@ 3874 train 4.3057 , allloss: 4.3068, dt: 1331.42ms, fracRes: 0.3582, norm(attn): 0.2188, norm(output): 0.4824, norm(x): 0.4479, norm(y): 1.0130, norm:1.5442, tok/sec: 98445.22, flops:103.32, batch-reuse:1
@ 3875 train 4.2787 , allloss: 4.2799, dt: 1325.39ms, fracRes: 0.3583, norm(attn): 0.2197, norm(output): 0.4883, norm(x): 0.4480, norm(y): 1.0130, norm:1.8013, tok/sec: 98893.01, flops:103.79, batch-reuse:1
@ 3876 train 4.3169 , allloss: 4.3184, dt: 1336.08ms, fracRes: 0.3586, norm(attn): 0.2207, norm(output): 0.4883, norm(x): 0.4510, norm(y): 1.0130, norm:1.7991, tok/sec: 98102.20, flops:102.96, batch-reuse:1
@ 3877 train 4.3637 , allloss: 4.3651, dt: 1330.42ms, fracRes: 0.3598, norm(attn): 0.2178, norm(output): 0.4922, norm(x): 0.4492, norm(y): 1.0130, norm:1.5381, tok/sec: 98519.58, flops:103.40, batch-reuse:1
@ 3878 train 4.2761 , allloss: 4.2778, dt: 1321.64ms, fracRes: 0.3596, norm(attn): 0.2217, norm(output): 0.4844, norm(x): 0.4454, norm(y): 1.0130, norm:1.7031, tok/sec: 99173.43, flops:104.08, batch-reuse:1
@ 3879 train 4.3325 , allloss: 4.3336, dt: 1283.44ms, fracRes: 0.3600, norm(attn): 0.2188, norm(output): 0.4844, norm(x): 0.4463, norm(y): 1.0130, norm:1.5485, tok/sec: 102125.26, flops:107.18, batch-reuse:1
@ 3880 train 4.4518 , allloss: 4.4546, dt: 1303.16ms, fracRes: 0.3597, norm(attn): 0.2188, norm(output): 0.4883, norm(x): 0.4478, norm(y): 1.0130, norm:1.8434, tok/sec: 100579.89, flops:105.56, batch-reuse:1
@ 3881 train 4.3589 , allloss: 4.3609, dt: 1319.13ms, fracRes: 0.3595, norm(attn): 0.2148, norm(output): 0.4883, norm(x): 0.4469, norm(y): 1.0130, norm:1.6734, tok/sec: 99362.44, flops:104.28, batch-reuse:1
@ 3882 train 4.3327 , allloss: 4.3335, dt: 1306.37ms, fracRes: 0.3573, norm(attn): 0.2168, norm(output): 0.4922, norm(x): 0.4487, norm(y): 1.0129, norm:1.8746, tok/sec: 100332.82, flops:105.30, batch-reuse:1
@ 3883 train 4.2585 , allloss: 4.2615, dt: 1295.81ms, fracRes: 0.3588, norm(attn): 0.2168, norm(output): 0.4922, norm(x): 0.4481, norm(y): 1.0130, norm:1.8574, tok/sec: 101150.69, flops:106.16, batch-reuse:1
@ 3884 train 4.3339 , allloss: 4.3366, dt: 1309.93ms, fracRes: 0.3595, norm(attn): 0.2139, norm(output): 0.4863, norm(x): 0.4476, norm(y): 1.0130, norm:1.6092, tok/sec: 100059.99, flops:105.01, batch-reuse:1
@ 3885 train 4.4050 , allloss: 4.4078, dt: 1317.51ms, fracRes: 0.3594, norm(attn): 0.2139, norm(output): 0.4883, norm(x): 0.4466, norm(y): 1.0130, norm:1.5100, tok/sec: 99484.48, flops:104.41, batch-reuse:1
@ 3886 train 4.3168 , allloss: 4.3187, dt: 1313.07ms, fracRes: 0.3603, norm(attn): 0.2168, norm(output): 0.4902, norm(x): 0.4486, norm(y): 1.0130, norm:1.9422, tok/sec: 99820.68, flops:104.76, batch-reuse:1
@ 3887 train 4.2966 , allloss: 4.2979, dt: 1310.35ms, fracRes: 0.3597, norm(attn): 0.2178, norm(output): 0.4922, norm(x): 0.4492, norm(y): 1.0130, norm:1.5453, tok/sec: 100028.46, flops:104.98, batch-reuse:1
@ 3888 train 4.4004 , allloss: 4.4017, dt: 1295.19ms, fracRes: 0.3602, norm(attn): 0.2168, norm(output): 0.4883, norm(x): 0.4472, norm(y): 1.0130, norm:1.9460, tok/sec: 101199.04, flops:106.21, batch-reuse:1
@ 3889 train 4.3432 , allloss: 4.3460, dt: 1303.14ms, fracRes: 0.3605, norm(attn): 0.2207, norm(output): 0.4844, norm(x): 0.4498, norm(y): 1.0130, norm:1.7180, tok/sec: 100581.90, flops:105.56, batch-reuse:1
@ 3890 train 4.3428 , allloss: 4.3472, dt: 1277.49ms, fracRes: 0.3639, norm(attn): 0.2217, norm(output): 0.4883, norm(x): 0.4533, norm(y): 1.0130, norm:2.0190, tok/sec: 102601.59, flops:107.68, batch-reuse:1
@ 3891 train 4.2305 , allloss: 4.2320, dt: 1285.74ms, fracRes: 0.3602, norm(attn): 0.2227, norm(output): 0.4844, norm(x): 0.4496, norm(y): 1.0130, norm:1.7620, tok/sec: 101942.67, flops:106.99, batch-reuse:1
@ 3892 train 4.3618 , allloss: 4.3633, dt: 1301.05ms, fracRes: 0.3590, norm(attn): 0.2227, norm(output): 0.4844, norm(x): 0.4489, norm(y): 1.0129, norm:1.9807, tok/sec: 100743.62, flops:105.73, batch-reuse:1
@ 3893 train 4.3724 , allloss: 4.3738, dt: 1300.73ms, fracRes: 0.3568, norm(attn): 0.2236, norm(output): 0.4883, norm(x): 0.4485, norm(y): 1.0129, norm:1.5639, tok/sec: 100768.05, flops:105.76, batch-reuse:1
@ 3894 train 4.5391 , allloss: 4.5405, dt: 1314.18ms, fracRes: 0.3594, norm(attn): 0.2188, norm(output): 0.4922, norm(x): 0.4532, norm(y): 1.0130, norm:1.9512, tok/sec: 99736.89, flops:104.68, batch-reuse:1
@ 3895 train 4.4797 , allloss: 4.4807, dt: 1340.22ms, fracRes: 0.3595, norm(attn): 0.2158, norm(output): 0.4922, norm(x): 0.4507, norm(y): 1.0131, norm:1.9898, tok/sec: 97798.84, flops:102.64, batch-reuse:1
@ 3896 train 4.4554 , allloss: 4.4591, dt: 1312.75ms, fracRes: 0.3601, norm(attn): 0.2178, norm(output): 0.4922, norm(x): 0.4501, norm(y): 1.0130, norm:1.6026, tok/sec: 99845.63, flops:104.79, batch-reuse:1
@ 3897 train 4.4312 , allloss: 4.4326, dt: 1302.81ms, fracRes: 0.3592, norm(attn): 0.2207, norm(output): 0.4883, norm(x): 0.4494, norm(y): 1.0129, norm:1.6890, tok/sec: 100607.21, flops:105.59, batch-reuse:1
@ 3898 train 4.5751 , allloss: 4.5766, dt: 1283.44ms, fracRes: 0.3591, norm(attn): 0.2197, norm(output): 0.4922, norm(x): 0.4536, norm(y): 1.0129, norm:1.8601, tok/sec: 102125.64, flops:107.18, batch-reuse:1
@ 3899 train 4.4773 , allloss: 4.4786, dt: 1309.95ms, fracRes: 0.3579, norm(attn): 0.2197, norm(output): 0.4863, norm(x): 0.4506, norm(y): 1.0130, norm:1.4673, tok/sec: 100058.81, flops:105.01, batch-reuse:1
@ 3900 train 4.4135 , allloss: 4.4148, dt: 1296.42ms, fracRes: 0.3607, norm(attn): 0.2188, norm(output): 0.4902, norm(x): 0.4526, norm(y): 1.0131, norm:1.6929, tok/sec: 101103.33, flops:106.11, batch-reuse:1
@ 3901 train 4.4710 , allloss: 4.4726, dt: 1287.61ms, fracRes: 0.3609, norm(attn): 0.2188, norm(output): 0.4961, norm(x): 0.4564, norm(y): 1.0131, norm:1.6964, tok/sec: 101795.04, flops:106.84, batch-reuse:1
@ 3902 train 4.3925 , allloss: 4.3955, dt: 1313.91ms, fracRes: 0.3610, norm(attn): 0.2188, norm(output): 0.4961, norm(x): 0.4549, norm(y): 1.0130, norm:1.7251, tok/sec: 99757.23, flops:104.70, batch-reuse:1
@ 3903 train 4.3814 , allloss: 4.3826, dt: 1308.19ms, fracRes: 0.3610, norm(attn): 0.2188, norm(output): 0.4902, norm(x): 0.4535, norm(y): 1.0130, norm:1.9207, tok/sec: 100193.43, flops:105.15, batch-reuse:1
@ 3904 train 4.5623 , allloss: 4.5638, dt: 1296.24ms, fracRes: 0.3600, norm(attn): 0.2207, norm(output): 0.4902, norm(x): 0.4519, norm(y): 1.0130, norm:1.7043, tok/sec: 101116.83, flops:106.12, batch-reuse:1
@ 3905 train 4.5097 , allloss: 4.5113, dt: 1316.52ms, fracRes: 0.3599, norm(attn): 0.2168, norm(output): 0.4922, norm(x): 0.4553, norm(y): 1.0131, norm:1.8793, tok/sec: 99559.12, flops:104.49, batch-reuse:1
@ 3906 train 4.5468 , allloss: 4.5477, dt: 1321.95ms, fracRes: 0.3592, norm(attn): 0.2168, norm(output): 0.4922, norm(x): 0.4528, norm(y): 1.0131, norm:1.5917, tok/sec: 99150.59, flops:104.06, batch-reuse:1
@ 3907 train 4.4880 , allloss: 4.4894, dt: 1313.59ms, fracRes: 0.3584, norm(attn): 0.2188, norm(output): 0.4902, norm(x): 0.4515, norm(y): 1.0130, norm:1.7182, tok/sec: 99781.75, flops:104.72, batch-reuse:1
@ 3908 train 4.4792 , allloss: 4.4807, dt: 1335.75ms, fracRes: 0.3567, norm(attn): 0.2217, norm(output): 0.4824, norm(x): 0.4483, norm(y): 1.0131, norm:1.5936, tok/sec: 98126.45, flops:102.99, batch-reuse:1
@ 3909 train 4.4275 , allloss: 4.4349, dt: 1287.56ms, fracRes: 0.3547, norm(attn): 0.2217, norm(output): 0.4863, norm(x): 0.4509, norm(y): 1.0130, norm:1.7847, tok/sec: 101798.45, flops:106.84, batch-reuse:1
@ 3910 train 4.5324 , allloss: 4.5347, dt: 1334.40ms, fracRes: 0.3570, norm(attn): 0.2236, norm(output): 0.4941, norm(x): 0.4524, norm(y): 1.0130, norm:1.5433, tok/sec: 98225.27, flops:103.09, batch-reuse:1
@ 3911 train 4.5208 , allloss: 4.5216, dt: 1341.53ms, fracRes: 0.3607, norm(attn): 0.2158, norm(output): 0.4883, norm(x): 0.4477, norm(y): 1.0132, norm:1.7405, tok/sec: 97703.61, flops:102.54, batch-reuse:1
@ 3912 train 4.4228 , allloss: 4.4237, dt: 1309.53ms, fracRes: 0.3611, norm(attn): 0.2148, norm(output): 0.4922, norm(x): 0.4500, norm(y): 1.0132, norm:1.8235, tok/sec: 100090.62, flops:105.05, batch-reuse:1
@ 3913 train 4.5353 , allloss: 4.5365, dt: 1278.75ms, fracRes: 0.3601, norm(attn): 0.2197, norm(output): 0.4922, norm(x): 0.4531, norm(y): 1.0131, norm:1.7754, tok/sec: 102500.18, flops:107.58, batch-reuse:1
@ 3914 train 4.5423 , allloss: 4.5438, dt: 1308.51ms, fracRes: 0.3595, norm(attn): 0.2197, norm(output): 0.4922, norm(x): 0.4523, norm(y): 1.0130, norm:1.5636, tok/sec: 100168.71, flops:105.13, batch-reuse:1
@ 3915 train 4.4994 , allloss: 4.5010, dt: 1286.08ms, fracRes: 0.3597, norm(attn): 0.2188, norm(output): 0.4941, norm(x): 0.4507, norm(y): 1.0131, norm:1.6087, tok/sec: 101915.95, flops:106.96, batch-reuse:1
@ 3916 train 4.5562 , allloss: 4.5578, dt: 1277.77ms, fracRes: 0.3602, norm(attn): 0.2188, norm(output): 0.4922, norm(x): 0.4507, norm(y): 1.0131, norm:1.8321, tok/sec: 102579.00, flops:107.66, batch-reuse:1
@ 3917 train 4.6322 , allloss: 4.6350, dt: 1285.24ms, fracRes: 0.3603, norm(attn): 0.2168, norm(output): 0.4922, norm(x): 0.4520, norm(y): 1.0131, norm:1.5523, tok/sec: 101982.19, flops:107.03, batch-reuse:1
@ 3918 train 4.4749 , allloss: 4.4764, dt: 1292.67ms, fracRes: 0.3595, norm(attn): 0.2207, norm(output): 0.4980, norm(x): 0.4564, norm(y): 1.0130, norm:1.8004, tok/sec: 101396.24, flops:106.42, batch-reuse:1
@ 3919 train 4.5055 , allloss: 4.5068, dt: 1303.31ms, fracRes: 0.3601, norm(attn): 0.2158, norm(output): 0.4980, norm(x): 0.4536, norm(y): 1.0131, norm:1.7761, tok/sec: 100568.72, flops:105.55, batch-reuse:1
@ 3920 train 4.4400 , allloss: 4.4413, dt: 1285.35ms, fracRes: 0.3586, norm(attn): 0.2188, norm(output): 0.4961, norm(x): 0.4552, norm(y): 1.0131, norm:1.6836, tok/sec: 101973.66, flops:107.02, batch-reuse:1
@ 3921 train 4.5384 , allloss: 4.5405, dt: 1312.41ms, fracRes: 0.3612, norm(attn): 0.2188, norm(output): 0.4980, norm(x): 0.4560, norm(y): 1.0130, norm:1.8842, tok/sec: 99871.08, flops:104.82, batch-reuse:1
@ 3922 train 4.4872 , allloss: 4.4886, dt: 1300.67ms, fracRes: 0.3608, norm(attn): 0.2178, norm(output): 0.4961, norm(x): 0.4547, norm(y): 1.0130, norm:1.5817, tok/sec: 100773.06, flops:105.76, batch-reuse:1
@ 3923 train 4.4482 , allloss: 4.4493, dt: 1295.10ms, fracRes: 0.3584, norm(attn): 0.2178, norm(output): 0.4941, norm(x): 0.4527, norm(y): 1.0130, norm:1.5817, tok/sec: 101206.38, flops:106.22, batch-reuse:1
@ 3924 train 4.5154 , allloss: 4.5167, dt: 1307.38ms, fracRes: 0.3586, norm(attn): 0.2188, norm(output): 0.4961, norm(x): 0.4553, norm(y): 1.0131, norm:1.6480, tok/sec: 100255.31, flops:105.22, batch-reuse:1
@ 3925 train 4.5621 , allloss: 4.5634, dt: 1295.04ms, fracRes: 0.3601, norm(attn): 0.2148, norm(output): 0.4980, norm(x): 0.4581, norm(y): 1.0131, norm:1.7735, tok/sec: 101211.06, flops:106.22, batch-reuse:1
@ 3926 train 4.4823 , allloss: 4.4831, dt: 1278.08ms, fracRes: 0.3604, norm(attn): 0.2178, norm(output): 0.4961, norm(x): 0.4541, norm(y): 1.0130, norm:1.5111, tok/sec: 102553.76, flops:107.63, batch-reuse:1
@ 3927 train 4.4273 , allloss: 4.4281, dt: 1298.05ms, fracRes: 0.3617, norm(attn): 0.2148, norm(output): 0.4922, norm(x): 0.4521, norm(y): 1.0130, norm:1.7009, tok/sec: 100975.86, flops:105.98, batch-reuse:1
@ 3928 train 4.4481 , allloss: 4.4492, dt: 1296.10ms, fracRes: 0.3599, norm(attn): 0.2197, norm(output): 0.4961, norm(x): 0.4543, norm(y): 1.0130, norm:1.6462, tok/sec: 101128.27, flops:106.14, batch-reuse:1
@ 3929 train 4.4411 , allloss: 4.4426, dt: 1286.36ms, fracRes: 0.3616, norm(attn): 0.2197, norm(output): 0.4961, norm(x): 0.4565, norm(y): 1.0131, norm:1.9703, tok/sec: 101893.62, flops:106.94, batch-reuse:1
@ 3930 train 4.4795 , allloss: 4.4864, dt: 1323.80ms, fracRes: 0.3618, norm(attn): 0.2168, norm(output): 0.4980, norm(x): 0.4566, norm(y): 1.0131, norm:1.5955, tok/sec: 99012.23, flops:103.92, batch-reuse:1
@ 3931 train 4.4037 , allloss: 4.4049, dt: 1317.89ms, fracRes: 0.3589, norm(attn): 0.2207, norm(output): 0.4922, norm(x): 0.4515, norm(y): 1.0130, norm:1.6398, tok/sec: 99456.01, flops:104.38, batch-reuse:1
@ 3932 train 4.4002 , allloss: 4.4017, dt: 1284.59ms, fracRes: 0.3581, norm(attn): 0.2207, norm(output): 0.4922, norm(x): 0.4562, norm(y): 1.0129, norm:1.4704, tok/sec: 102033.92, flops:107.09, batch-reuse:1
@ 3933 train 4.4844 , allloss: 4.4861, dt: 1301.57ms, fracRes: 0.3589, norm(attn): 0.2227, norm(output): 0.4902, norm(x): 0.4537, norm(y): 1.0130, norm:1.5759, tok/sec: 100702.63, flops:105.69, batch-reuse:1
@ 3934 train 4.5141 , allloss: 4.5152, dt: 1312.73ms, fracRes: 0.3582, norm(attn): 0.2178, norm(output): 0.4922, norm(x): 0.4531, norm(y): 1.0131, norm:1.6687, tok/sec: 99846.97, flops:104.79, batch-reuse:1
@ 3935 train 4.4990 , allloss: 4.5002, dt: 1289.07ms, fracRes: 0.3594, norm(attn): 0.2178, norm(output): 0.4941, norm(x): 0.4548, norm(y): 1.0131, norm:1.4107, tok/sec: 101679.21, flops:106.71, batch-reuse:1
@ 3936 train 4.4698 , allloss: 4.4710, dt: 1302.78ms, fracRes: 0.3581, norm(attn): 0.2256, norm(output): 0.4883, norm(x): 0.4516, norm(y): 1.0130, norm:1.6414, tok/sec: 100609.10, flops:105.59, batch-reuse:1
@ 3937 train 4.4739 , allloss: 4.4756, dt: 1299.51ms, fracRes: 0.3600, norm(attn): 0.2227, norm(output): 0.4922, norm(x): 0.4522, norm(y): 1.0130, norm:1.5274, tok/sec: 100862.69, flops:105.86, batch-reuse:1
@ 3938 train 4.4032 , allloss: 4.4052, dt: 1293.53ms, fracRes: 0.3595, norm(attn): 0.2227, norm(output): 0.4902, norm(x): 0.4527, norm(y): 1.0130, norm:1.4718, tok/sec: 101329.05, flops:106.35, batch-reuse:1
@ 3939 train 4.5024 , allloss: 4.5077, dt: 1332.45ms, fracRes: 0.3618, norm(attn): 0.2217, norm(output): 0.4961, norm(x): 0.4577, norm(y): 1.0131, norm:1.9926, tok/sec: 98369.14, flops:103.24, batch-reuse:1
@ 3940 train 4.4542 , allloss: 4.4553, dt: 1330.35ms, fracRes: 0.3599, norm(attn): 0.2207, norm(output): 0.4922, norm(x): 0.4475, norm(y): 1.0131, norm:1.7358, tok/sec: 98524.74, flops:103.40, batch-reuse:1
@ 3941 train 4.4554 , allloss: 4.4568, dt: 1327.85ms, fracRes: 0.3612, norm(attn): 0.2217, norm(output): 0.4922, norm(x): 0.4518, norm(y): 1.0131, norm:1.9608, tok/sec: 98709.60, flops:103.60, batch-reuse:1
@ 3942 train 4.4060 , allloss: 4.4070, dt: 1313.21ms, fracRes: 0.3603, norm(attn): 0.2236, norm(output): 0.4902, norm(x): 0.4499, norm(y): 1.0130, norm:1.6486, tok/sec: 99810.08, flops:104.75, batch-reuse:1
@ 3943 train 4.4767 , allloss: 4.4775, dt: 1337.56ms, fracRes: 0.3607, norm(attn): 0.2207, norm(output): 0.4922, norm(x): 0.4489, norm(y): 1.0130, norm:1.5324, tok/sec: 97993.44, flops:102.85, batch-reuse:1
@ 3944 train 4.3393 , allloss: 4.3432, dt: 1333.54ms, fracRes: 0.3620, norm(attn): 0.2207, norm(output): 0.4902, norm(x): 0.4544, norm(y): 1.0131, norm:1.6074, tok/sec: 98288.75, flops:103.16, batch-reuse:1
@ 3945 train 4.5689 , allloss: 4.5736, dt: 1345.20ms, fracRes: 0.3600, norm(attn): 0.2227, norm(output): 0.4824, norm(x): 0.4507, norm(y): 1.0130, norm:1.6510, tok/sec: 97437.00, flops:102.26, batch-reuse:1
@ 3946 train 4.4161 , allloss: 4.4174, dt: 1308.53ms, fracRes: 0.3599, norm(attn): 0.2236, norm(output): 0.4922, norm(x): 0.4527, norm(y): 1.0129, norm:1.7339, tok/sec: 100167.08, flops:105.13, batch-reuse:1
@ 3947 train 4.4361 , allloss: 4.4377, dt: 1313.53ms, fracRes: 0.3602, norm(attn): 0.2207, norm(output): 0.4902, norm(x): 0.4519, norm(y): 1.0130, norm:1.4542, tok/sec: 99786.06, flops:104.73, batch-reuse:1
@ 3948 train 4.4472 , allloss: 4.4491, dt: 1307.21ms, fracRes: 0.3607, norm(attn): 0.2227, norm(output): 0.4922, norm(x): 0.4522, norm(y): 1.0131, norm:1.5564, tok/sec: 100268.88, flops:105.23, batch-reuse:1
@ 3949 train 4.4315 , allloss: 4.4362, dt: 1299.36ms, fracRes: 0.3617, norm(attn): 0.2188, norm(output): 0.4922, norm(x): 0.4506, norm(y): 1.0131, norm:1.6772, tok/sec: 100873.94, flops:105.87, batch-reuse:1
@ 3950 train 4.4807 , allloss: 4.4866, dt: 1332.06ms, fracRes: 0.3606, norm(attn): 0.2207, norm(output): 0.4902, norm(x): 0.4501, norm(y): 1.0130, norm:1.5075, tok/sec: 98397.84, flops:103.27, batch-reuse:1
@ 3951 train 4.4285 , allloss: 4.4308, dt: 1335.10ms, fracRes: 0.3606, norm(attn): 0.2188, norm(output): 0.4941, norm(x): 0.4534, norm(y): 1.0130, norm:1.5082, tok/sec: 98174.22, flops:103.04, batch-reuse:1
@ 3952 train 4.4835 , allloss: 4.4853, dt: 1312.66ms, fracRes: 0.3603, norm(attn): 0.2168, norm(output): 0.4961, norm(x): 0.4546, norm(y): 1.0131, norm:1.5489, tok/sec: 99852.36, flops:104.80, batch-reuse:1
@ 3953 train 4.5288 , allloss: 4.5310, dt: 1309.92ms, fracRes: 0.3626, norm(attn): 0.2158, norm(output): 0.4980, norm(x): 0.4577, norm(y): 1.0132, norm:1.9292, tok/sec: 100060.99, flops:105.02, batch-reuse:1
@ 3954 train 4.4994 , allloss: 4.5010, dt: 1314.75ms, fracRes: 0.3613, norm(attn): 0.2158, norm(output): 0.4980, norm(x): 0.4537, norm(y): 1.0132, norm:1.8866, tok/sec: 99693.79, flops:104.63, batch-reuse:1
@ 3955 train 4.4336 , allloss: 4.4344, dt: 1317.19ms, fracRes: 0.3607, norm(attn): 0.2197, norm(output): 0.4961, norm(x): 0.4526, norm(y): 1.0130, norm:1.8265, tok/sec: 99509.06, flops:104.44, batch-reuse:1
@ 3956 train 4.3993 , allloss: 4.4045, dt: 1321.29ms, fracRes: 0.3611, norm(attn): 0.2207, norm(output): 0.4980, norm(x): 0.4557, norm(y): 1.0130, norm:2.1252, tok/sec: 99199.77, flops:104.11, batch-reuse:1
@ 3957 train 4.4897 , allloss: 4.4909, dt: 1320.47ms, fracRes: 0.3603, norm(attn): 0.2217, norm(output): 0.4961, norm(x): 0.4543, norm(y): 1.0130, norm:1.8361, tok/sec: 99261.62, flops:104.18, batch-reuse:1
@ 3958 train 4.4572 , allloss: 4.4584, dt: 1290.19ms, fracRes: 0.3601, norm(attn): 0.2227, norm(output): 0.4941, norm(x): 0.4534, norm(y): 1.0131, norm:1.8573, tok/sec: 101590.90, flops:106.62, batch-reuse:1
@ 3959 train 4.4934 , allloss: 4.4946, dt: 1312.06ms, fracRes: 0.3634, norm(attn): 0.2168, norm(output): 0.4961, norm(x): 0.4571, norm(y): 1.0132, norm:1.8398, tok/sec: 99898.22, flops:104.85, batch-reuse:1
@ 3960 train 4.4319 , allloss: 4.4331, dt: 1318.78ms, fracRes: 0.3599, norm(attn): 0.2236, norm(output): 0.4922, norm(x): 0.4519, norm(y): 1.0131, norm:2.1476, tok/sec: 99389.03, flops:104.31, batch-reuse:1
@ 3961 train 4.4102 , allloss: 4.4114, dt: 1312.04ms, fracRes: 0.3586, norm(attn): 0.2227, norm(output): 0.4961, norm(x): 0.4566, norm(y): 1.0131, norm:1.8161, tok/sec: 99899.62, flops:104.85, batch-reuse:1
@ 3962 train 4.4909 , allloss: 4.4925, dt: 1331.41ms, fracRes: 0.3586, norm(attn): 0.2236, norm(output): 0.4961, norm(x): 0.4589, norm(y): 1.0130, norm:1.7398, tok/sec: 98445.85, flops:103.32, batch-reuse:1
@ 3963 train 4.4206 , allloss: 4.4222, dt: 1287.77ms, fracRes: 0.3602, norm(attn): 0.2207, norm(output): 0.4941, norm(x): 0.4534, norm(y): 1.0131, norm:1.5678, tok/sec: 101782.11, flops:106.82, batch-reuse:1
@ 3964 train 4.4093 , allloss: 4.4102, dt: 1274.02ms, fracRes: 0.3619, norm(attn): 0.2227, norm(output): 0.4941, norm(x): 0.4530, norm(y): 1.0131, norm:1.6513, tok/sec: 102880.84, flops:107.98, batch-reuse:1
@ 3965 train 4.4325 , allloss: 4.4335, dt: 1308.66ms, fracRes: 0.3640, norm(attn): 0.2217, norm(output): 0.4941, norm(x): 0.4526, norm(y): 1.0131, norm:1.9415, tok/sec: 100157.54, flops:105.12, batch-reuse:1
@ 3966 train 4.5065 , allloss: 4.5079, dt: 1332.63ms, fracRes: 0.3640, norm(attn): 0.2227, norm(output): 0.4961, norm(x): 0.4524, norm(y): 1.0130, norm:1.7804, tok/sec: 98356.10, flops:103.23, batch-reuse:1
@ 3967 train 4.5079 , allloss: 4.5100, dt: 1338.31ms, fracRes: 0.3631, norm(attn): 0.2207, norm(output): 0.4922, norm(x): 0.4507, norm(y): 1.0131, norm:1.3499, tok/sec: 97938.69, flops:102.79, batch-reuse:1
@ 3968 train 4.4645 , allloss: 4.4656, dt: 1323.63ms, fracRes: 0.3631, norm(attn): 0.2188, norm(output): 0.4922, norm(x): 0.4514, norm(y): 1.0132, norm:1.6125, tok/sec: 99024.63, flops:103.93, batch-reuse:1
@ 3969 train 4.4997 , allloss: 4.5009, dt: 1284.49ms, fracRes: 0.3628, norm(attn): 0.2227, norm(output): 0.4941, norm(x): 0.4533, norm(y): 1.0131, norm:1.5476, tok/sec: 102041.72, flops:107.09, batch-reuse:1
@ 3970 train 4.4337 , allloss: 4.4344, dt: 1301.62ms, fracRes: 0.3623, norm(attn): 0.2207, norm(output): 0.4941, norm(x): 0.4512, norm(y): 1.0131, norm:1.6101, tok/sec: 100699.20, flops:105.69, batch-reuse:1
@ 3971 train 4.4458 , allloss: 4.4465, dt: 1304.48ms, fracRes: 0.3616, norm(attn): 0.2197, norm(output): 0.4941, norm(x): 0.4526, norm(y): 1.0130, norm:1.5674, tok/sec: 100478.00, flops:105.45, batch-reuse:1
@ 3972 train 4.4547 , allloss: 4.4555, dt: 1322.91ms, fracRes: 0.3631, norm(attn): 0.2197, norm(output): 0.4961, norm(x): 0.4601, norm(y): 1.0130, norm:1.8579, tok/sec: 99078.27, flops:103.98, batch-reuse:1
@ 3973 train 4.4084 , allloss: 4.4099, dt: 1314.78ms, fracRes: 0.3613, norm(attn): 0.2207, norm(output): 0.4961, norm(x): 0.4530, norm(y): 1.0131, norm:1.5377, tok/sec: 99690.99, flops:104.63, batch-reuse:1
@ 3974 train 4.5047 , allloss: 4.5061, dt: 1282.28ms, fracRes: 0.3604, norm(attn): 0.2246, norm(output): 0.4941, norm(x): 0.4540, norm(y): 1.0131, norm:1.7203, tok/sec: 102217.72, flops:107.28, batch-reuse:1
@ 3975 train 4.3863 , allloss: 4.3874, dt: 1300.77ms, fracRes: 0.3581, norm(attn): 0.2246, norm(output): 0.4922, norm(x): 0.4509, norm(y): 1.0130, norm:1.4805, tok/sec: 100764.84, flops:105.75, batch-reuse:1
@ 3976 train 4.4887 , allloss: 4.4903, dt: 1304.41ms, fracRes: 0.3582, norm(attn): 0.2207, norm(output): 0.4941, norm(x): 0.4552, norm(y): 1.0130, norm:1.7607, tok/sec: 100483.73, flops:105.46, batch-reuse:1
@ 3977 train 4.1887 , allloss: 4.1906, dt: 1303.59ms, fracRes: 0.3600, norm(attn): 0.2256, norm(output): 0.4961, norm(x): 0.4538, norm(y): 1.0131, norm:1.7758, tok/sec: 100547.31, flops:105.53, batch-reuse:1
@ 3978 train 4.4292 , allloss: 4.4306, dt: 1277.18ms, fracRes: 0.3582, norm(attn): 0.2236, norm(output): 0.4922, norm(x): 0.4512, norm(y): 1.0131, norm:1.5842, tok/sec: 102626.41, flops:107.71, batch-reuse:1
@ 3979 train 4.4608 , allloss: 4.4631, dt: 1284.76ms, fracRes: 0.3584, norm(attn): 0.2275, norm(output): 0.4961, norm(x): 0.4543, norm(y): 1.0130, norm:1.7175, tok/sec: 102020.38, flops:107.07, batch-reuse:1
@ 3980 train 4.3895 , allloss: 4.3907, dt: 1284.20ms, fracRes: 0.3600, norm(attn): 0.2256, norm(output): 0.4961, norm(x): 0.4559, norm(y): 1.0131, norm:1.6015, tok/sec: 102064.91, flops:107.12, batch-reuse:1
@ 3981 train 4.4362 , allloss: 4.4371, dt: 1297.18ms, fracRes: 0.3622, norm(attn): 0.2227, norm(output): 0.4922, norm(x): 0.4526, norm(y): 1.0132, norm:1.7247, tok/sec: 101043.49, flops:106.05, batch-reuse:1
@ 3982 train 4.4380 , allloss: 4.4398, dt: 1332.05ms, fracRes: 0.3621, norm(attn): 0.2227, norm(output): 0.4922, norm(x): 0.4504, norm(y): 1.0131, norm:1.8344, tok/sec: 98398.49, flops:103.27, batch-reuse:1
@ 3983 train 4.4533 , allloss: 4.4564, dt: 1348.40ms, fracRes: 0.3619, norm(attn): 0.2217, norm(output): 0.4922, norm(x): 0.4531, norm(y): 1.0130, norm:1.5739, tok/sec: 97205.71, flops:102.02, batch-reuse:1
@ 3984 train 4.4403 , allloss: 4.4438, dt: 1279.78ms, fracRes: 0.3607, norm(attn): 0.2217, norm(output): 0.4922, norm(x): 0.4523, norm(y): 1.0130, norm:1.7115, tok/sec: 102417.25, flops:107.49, batch-reuse:1
@ 3985 train 4.4764 , allloss: 4.4777, dt: 1310.48ms, fracRes: 0.3606, norm(attn): 0.2207, norm(output): 0.4922, norm(x): 0.4511, norm(y): 1.0130, norm:1.8699, tok/sec: 100018.56, flops:104.97, batch-reuse:1
@ 3986 train 4.3501 , allloss: 4.3515, dt: 1323.71ms, fracRes: 0.3628, norm(attn): 0.2217, norm(output): 0.4941, norm(x): 0.4537, norm(y): 1.0131, norm:1.5760, tok/sec: 99018.92, flops:103.92, batch-reuse:1
@ 3987 train 4.2940 , allloss: 4.2955, dt: 1323.48ms, fracRes: 0.3597, norm(attn): 0.2217, norm(output): 0.4902, norm(x): 0.4513, norm(y): 1.0131, norm:1.8360, tok/sec: 99036.01, flops:103.94, batch-reuse:1
@ 3988 train 4.3815 , allloss: 4.3830, dt: 1299.48ms, fracRes: 0.3597, norm(attn): 0.2236, norm(output): 0.4922, norm(x): 0.4522, norm(y): 1.0131, norm:1.6533, tok/sec: 100865.11, flops:105.86, batch-reuse:1
@ 3989 train 4.4180 , allloss: 4.4193, dt: 1316.85ms, fracRes: 0.3593, norm(attn): 0.2207, norm(output): 0.4922, norm(x): 0.4533, norm(y): 1.0130, norm:1.6461, tok/sec: 99534.64, flops:104.46, batch-reuse:1
@ 3990 train 4.3542 , allloss: 4.3553, dt: 1329.64ms, fracRes: 0.3607, norm(attn): 0.2227, norm(output): 0.4922, norm(x): 0.4545, norm(y): 1.0131, norm:1.6843, tok/sec: 98576.85, flops:103.46, batch-reuse:1
@ 3991 train 4.3961 , allloss: 4.4038, dt: 1333.02ms, fracRes: 0.3603, norm(attn): 0.2246, norm(output): 0.4922, norm(x): 0.4527, norm(y): 1.0131, norm:1.5725, tok/sec: 98326.76, flops:103.20, batch-reuse:1
@ 3992 train 4.4248 , allloss: 4.4275, dt: 1335.16ms, fracRes: 0.3608, norm(attn): 0.2236, norm(output): 0.4941, norm(x): 0.4534, norm(y): 1.0131, norm:1.6075, tok/sec: 98169.63, flops:103.03, batch-reuse:1
@ 3993 train 4.4053 , allloss: 4.4063, dt: 1341.78ms, fracRes: 0.3604, norm(attn): 0.2227, norm(output): 0.4961, norm(x): 0.4542, norm(y): 1.0131, norm:1.3533, tok/sec: 97685.31, flops:102.52, batch-reuse:1
@ 3994 train 4.4082 , allloss: 4.4100, dt: 1316.12ms, fracRes: 0.3622, norm(attn): 0.2227, norm(output): 0.4922, norm(x): 0.4512, norm(y): 1.0130, norm:1.6129, tok/sec: 99589.71, flops:104.52, batch-reuse:1
@ 3995 train 4.3943 , allloss: 4.3957, dt: 1322.20ms, fracRes: 0.3607, norm(attn): 0.2197, norm(output): 0.4961, norm(x): 0.4541, norm(y): 1.0130, norm:1.4999, tok/sec: 99131.46, flops:104.04, batch-reuse:1
@ 3996 train 4.4441 , allloss: 4.4459, dt: 1331.30ms, fracRes: 0.3614, norm(attn): 0.2197, norm(output): 0.4980, norm(x): 0.4564, norm(y): 1.0131, norm:1.6797, tok/sec: 98454.00, flops:103.33, batch-reuse:1
@ 3997 train 4.3761 , allloss: 4.3792, dt: 1291.69ms, fracRes: 0.3614, norm(attn): 0.2188, norm(output): 0.4961, norm(x): 0.4546, norm(y): 1.0131, norm:1.5137, tok/sec: 101473.46, flops:106.50, batch-reuse:1
@ 3998 train 4.3434 , allloss: 4.3457, dt: 1315.34ms, fracRes: 0.3624, norm(attn): 0.2217, norm(output): 0.4961, norm(x): 0.4557, norm(y): 1.0131, norm:1.5817, tok/sec: 99648.79, flops:104.58, batch-reuse:1
@ 3999 train 4.4082 , allloss: 4.4098, dt: 1331.57ms, fracRes: 0.3632, norm(attn): 0.2148, norm(output): 0.4961, norm(x): 0.4561, norm(y): 1.0131, norm:1.5215, tok/sec: 98433.82, flops:103.31, batch-reuse:1
@ 4000 val 4.3973
@ 4000 train 4.3986 , allloss: 4.3997, dt: 1935.29ms, fracRes: 0.3614, norm(attn): 0.2168, norm(output): 0.4961, norm(x): 0.4560, norm(y): 1.0130, norm:1.6872, tok/sec: 67727.43, flops:71.08, batch-reuse:1
@ 4001 train 4.2822 , allloss: 4.2835, dt: 1338.32ms, fracRes: 0.3621, norm(attn): 0.2227, norm(output): 0.4961, norm(x): 0.4571, norm(y): 1.0130, norm:1.6882, tok/sec: 97937.75, flops:102.79, batch-reuse:1
@ 4002 train 4.3656 , allloss: 4.3675, dt: 1335.13ms, fracRes: 0.3605, norm(attn): 0.2227, norm(output): 0.4883, norm(x): 0.4533, norm(y): 1.0131, norm:1.7384, tok/sec: 98171.56, flops:103.03, batch-reuse:1
@ 4003 train 4.4466 , allloss: 4.4493, dt: 1296.45ms, fracRes: 0.3602, norm(attn): 0.2227, norm(output): 0.4961, norm(x): 0.4560, norm(y): 1.0130, norm:1.8791, tok/sec: 101100.84, flops:106.11, batch-reuse:1
@ 4004 train 4.3085 , allloss: 4.3119, dt: 1321.82ms, fracRes: 0.3609, norm(attn): 0.2246, norm(output): 0.4922, norm(x): 0.4544, norm(y): 1.0132, norm:1.7073, tok/sec: 99160.07, flops:104.07, batch-reuse:1
@ 4005 train 4.6044 , allloss: 4.6062, dt: 1292.91ms, fracRes: 0.3657, norm(attn): 0.2188, norm(output): 0.5000, norm(x): 0.4639, norm(y): 1.0132, norm:2.5963, tok/sec: 101377.47, flops:106.40, batch-reuse:1
@ 4006 train 4.4650 , allloss: 4.4672, dt: 1290.06ms, fracRes: 0.3608, norm(attn): 0.2227, norm(output): 0.4922, norm(x): 0.4565, norm(y): 1.0131, norm:2.6307, tok/sec: 101601.85, flops:106.63, batch-reuse:1
@ 4007 train 4.4523 , allloss: 4.4534, dt: 1308.78ms, fracRes: 0.3635, norm(attn): 0.2227, norm(output): 0.4922, norm(x): 0.4567, norm(y): 1.0131, norm:2.4006, tok/sec: 100148.32, flops:105.11, batch-reuse:1
@ 4008 train 4.4428 , allloss: 4.4448, dt: 1316.16ms, fracRes: 0.3615, norm(attn): 0.2275, norm(output): 0.4922, norm(x): 0.4550, norm(y): 1.0130, norm:1.5835, tok/sec: 99586.70, flops:104.52, batch-reuse:1
@ 4009 train 4.3867 , allloss: 4.3879, dt: 1310.18ms, fracRes: 0.3609, norm(attn): 0.2285, norm(output): 0.4902, norm(x): 0.4519, norm(y): 1.0131, norm:1.9741, tok/sec: 100041.57, flops:105.00, batch-reuse:1
@ 4010 train 4.4167 , allloss: 4.4187, dt: 1307.43ms, fracRes: 0.3617, norm(attn): 0.2266, norm(output): 0.4980, norm(x): 0.4594, norm(y): 1.0132, norm:2.4533, tok/sec: 100251.47, flops:105.22, batch-reuse:1
@ 4011 train 4.4331 , allloss: 4.4360, dt: 1290.26ms, fracRes: 0.3623, norm(attn): 0.2227, norm(output): 0.4961, norm(x): 0.4568, norm(y): 1.0132, norm:1.6646, tok/sec: 101585.44, flops:106.62, batch-reuse:1
@ 4012 train 4.4317 , allloss: 4.4336, dt: 1280.88ms, fracRes: 0.3601, norm(attn): 0.2266, norm(output): 0.4922, norm(x): 0.4527, norm(y): 1.0131, norm:1.7812, tok/sec: 102329.44, flops:107.40, batch-reuse:1
@ 4013 train 4.4779 , allloss: 4.4790, dt: 1292.78ms, fracRes: 0.3649, norm(attn): 0.2148, norm(output): 0.4922, norm(x): 0.4516, norm(y): 1.0133, norm:1.7294, tok/sec: 101387.97, flops:106.41, batch-reuse:1
@ 4014 train 4.5297 , allloss: 4.5315, dt: 1287.82ms, fracRes: 0.3653, norm(attn): 0.2168, norm(output): 0.4922, norm(x): 0.4581, norm(y): 1.0133, norm:1.9732, tok/sec: 101777.85, flops:106.82, batch-reuse:1
@ 4015 train 4.4146 , allloss: 4.4158, dt: 1314.92ms, fracRes: 0.3657, norm(attn): 0.2148, norm(output): 0.4980, norm(x): 0.4611, norm(y): 1.0133, norm:1.9725, tok/sec: 99680.38, flops:104.62, batch-reuse:1
@ 4016 train 4.4592 , allloss: 4.4614, dt: 1310.35ms, fracRes: 0.3658, norm(attn): 0.2178, norm(output): 0.4961, norm(x): 0.4577, norm(y): 1.0133, norm:2.1307, tok/sec: 100028.04, flops:104.98, batch-reuse:1
@ 4017 train 4.3971 , allloss: 4.3998, dt: 1355.18ms, fracRes: 0.3644, norm(attn): 0.2188, norm(output): 0.4961, norm(x): 0.4550, norm(y): 1.0132, norm:1.8637, tok/sec: 96719.25, flops:101.51, batch-reuse:1
@ 4018 train 4.4240 , allloss: 4.4273, dt: 1327.59ms, fracRes: 0.3612, norm(attn): 0.2207, norm(output): 0.4961, norm(x): 0.4550, norm(y): 1.0132, norm:1.8221, tok/sec: 98729.33, flops:103.62, batch-reuse:1
@ 4019 train 4.5441 , allloss: 4.5464, dt: 1313.94ms, fracRes: 0.3613, norm(attn): 0.2197, norm(output): 0.4961, norm(x): 0.4589, norm(y): 1.0132, norm:1.8028, tok/sec: 99754.81, flops:104.69, batch-reuse:1
@ 4020 train 4.3917 , allloss: 4.3932, dt: 1281.90ms, fracRes: 0.3614, norm(attn): 0.2207, norm(output): 0.4980, norm(x): 0.4585, norm(y): 1.0132, norm:1.6560, tok/sec: 102248.08, flops:107.31, batch-reuse:1
@ 4021 train 4.3893 , allloss: 4.3902, dt: 1289.02ms, fracRes: 0.3617, norm(attn): 0.2197, norm(output): 0.4961, norm(x): 0.4592, norm(y): 1.0131, norm:1.6989, tok/sec: 101683.67, flops:106.72, batch-reuse:1
@ 4022 train 4.2526 , allloss: 4.2537, dt: 1307.93ms, fracRes: 0.3646, norm(attn): 0.2197, norm(output): 0.5000, norm(x): 0.4601, norm(y): 1.0133, norm:1.5839, tok/sec: 100213.17, flops:105.18, batch-reuse:1
@ 4023 train 4.5015 , allloss: 4.5024, dt: 1318.36ms, fracRes: 0.3638, norm(attn): 0.2197, norm(output): 0.4961, norm(x): 0.4575, norm(y): 1.0132, norm:1.7949, tok/sec: 99420.61, flops:104.34, batch-reuse:1
@ 4024 train 4.4772 , allloss: 4.4819, dt: 1338.25ms, fracRes: 0.3635, norm(attn): 0.2168, norm(output): 0.5000, norm(x): 0.4608, norm(y): 1.0132, norm:1.6971, tok/sec: 97942.84, flops:102.79, batch-reuse:1
@ 4025 train 4.3867 , allloss: 4.3880, dt: 1317.38ms, fracRes: 0.3614, norm(attn): 0.2207, norm(output): 0.4980, norm(x): 0.4593, norm(y): 1.0131, norm:1.8801, tok/sec: 99494.81, flops:104.42, batch-reuse:1
@ 4026 train 4.3061 , allloss: 4.3078, dt: 1307.53ms, fracRes: 0.3615, norm(attn): 0.2207, norm(output): 0.5000, norm(x): 0.4595, norm(y): 1.0131, norm:1.5463, tok/sec: 100243.70, flops:105.21, batch-reuse:1
@ 4027 train 4.3745 , allloss: 4.3759, dt: 1306.26ms, fracRes: 0.3625, norm(attn): 0.2207, norm(output): 0.4961, norm(x): 0.4586, norm(y): 1.0132, norm:1.7126, tok/sec: 100341.30, flops:105.31, batch-reuse:1
@ 4028 train 4.4057 , allloss: 4.4082, dt: 1288.07ms, fracRes: 0.3610, norm(attn): 0.2227, norm(output): 0.4961, norm(x): 0.4600, norm(y): 1.0131, norm:1.6185, tok/sec: 101758.35, flops:106.80, batch-reuse:1
@ 4029 train 4.3928 , allloss: 4.3941, dt: 1324.12ms, fracRes: 0.3620, norm(attn): 0.2197, norm(output): 0.4980, norm(x): 0.4598, norm(y): 1.0131, norm:1.6660, tok/sec: 98987.70, flops:103.89, batch-reuse:1
@ 4030 train 4.2314 , allloss: 4.2328, dt: 1316.30ms, fracRes: 0.3633, norm(attn): 0.2207, norm(output): 0.4961, norm(x): 0.4613, norm(y): 1.0132, norm:1.5840, tok/sec: 99575.93, flops:104.51, batch-reuse:1
@ 4031 train 4.2881 , allloss: 4.2936, dt: 1268.20ms, fracRes: 0.3617, norm(attn): 0.2246, norm(output): 0.4961, norm(x): 0.4584, norm(y): 1.0131, norm:1.7388, tok/sec: 103352.38, flops:108.47, batch-reuse:1
@ 4032 train 4.2674 , allloss: 4.2696, dt: 1304.48ms, fracRes: 0.3619, norm(attn): 0.2236, norm(output): 0.4941, norm(x): 0.4560, norm(y): 1.0131, norm:1.5725, tok/sec: 100478.22, flops:105.45, batch-reuse:1
@ 4033 train 4.3213 , allloss: 4.3231, dt: 1293.29ms, fracRes: 0.3632, norm(attn): 0.2236, norm(output): 0.4961, norm(x): 0.4561, norm(y): 1.0132, norm:1.7343, tok/sec: 101347.60, flops:106.37, batch-reuse:1
@ 4034 train 4.2894 , allloss: 4.2958, dt: 1317.08ms, fracRes: 0.3644, norm(attn): 0.2227, norm(output): 0.4980, norm(x): 0.4619, norm(y): 1.0132, norm:1.7712, tok/sec: 99517.38, flops:104.45, batch-reuse:1
@ 4035 train 4.2974 , allloss: 4.2985, dt: 1292.98ms, fracRes: 0.3630, norm(attn): 0.2217, norm(output): 0.4980, norm(x): 0.4589, norm(y): 1.0131, norm:1.7309, tok/sec: 101372.29, flops:106.39, batch-reuse:1
@ 4036 train 4.2359 , allloss: 4.2376, dt: 1317.49ms, fracRes: 0.3636, norm(attn): 0.2197, norm(output): 0.5000, norm(x): 0.4614, norm(y): 1.0132, norm:1.8181, tok/sec: 99486.15, flops:104.41, batch-reuse:1
@ 4037 train 4.2754 , allloss: 4.2766, dt: 1333.19ms, fracRes: 0.3616, norm(attn): 0.2188, norm(output): 0.5000, norm(x): 0.4609, norm(y): 1.0132, norm:1.5207, tok/sec: 98314.62, flops:103.18, batch-reuse:1
@ 4038 train 4.2698 , allloss: 4.2713, dt: 1316.35ms, fracRes: 0.3626, norm(attn): 0.2168, norm(output): 0.5000, norm(x): 0.4606, norm(y): 1.0132, norm:1.5579, tok/sec: 99571.94, flops:104.50, batch-reuse:1
@ 4039 train 4.2419 , allloss: 4.2437, dt: 1325.45ms, fracRes: 0.3607, norm(attn): 0.2207, norm(output): 0.5000, norm(x): 0.4599, norm(y): 1.0132, norm:1.7183, tok/sec: 98888.86, flops:103.79, batch-reuse:1
@ 4040 train 4.2807 , allloss: 4.2832, dt: 1327.91ms, fracRes: 0.3623, norm(attn): 0.2188, norm(output): 0.5000, norm(x): 0.4617, norm(y): 1.0132, norm:1.3465, tok/sec: 98705.45, flops:103.59, batch-reuse:1
@ 4041 train 4.2075 , allloss: 4.2090, dt: 1303.75ms, fracRes: 0.3615, norm(attn): 0.2227, norm(output): 0.4980, norm(x): 0.4574, norm(y): 1.0132, norm:1.8757, tok/sec: 100534.92, flops:105.51, batch-reuse:1
@ 4042 train 4.3046 , allloss: 4.3087, dt: 1277.24ms, fracRes: 0.3605, norm(attn): 0.2256, norm(output): 0.4961, norm(x): 0.4565, norm(y): 1.0132, norm:1.6302, tok/sec: 102621.24, flops:107.70, batch-reuse:1
@ 4043 train 4.3212 , allloss: 4.3261, dt: 1280.47ms, fracRes: 0.3614, norm(attn): 0.2217, norm(output): 0.4941, norm(x): 0.4554, norm(y): 1.0132, norm:1.8974, tok/sec: 102362.59, flops:107.43, batch-reuse:1
@ 4044 train 4.3378 , allloss: 4.3400, dt: 1324.54ms, fracRes: 0.3622, norm(attn): 0.2236, norm(output): 0.4961, norm(x): 0.4568, norm(y): 1.0131, norm:1.7051, tok/sec: 98956.50, flops:103.86, batch-reuse:1
@ 4045 train 4.2705 , allloss: 4.2722, dt: 1351.79ms, fracRes: 0.3623, norm(attn): 0.2275, norm(output): 0.4941, norm(x): 0.4562, norm(y): 1.0131, norm:1.7778, tok/sec: 96961.72, flops:101.76, batch-reuse:1
@ 4046 train 4.3203 , allloss: 4.3218, dt: 1292.53ms, fracRes: 0.3621, norm(attn): 0.2236, norm(output): 0.5000, norm(x): 0.4613, norm(y): 1.0132, norm:1.7357, tok/sec: 101406.94, flops:106.43, batch-reuse:1
@ 4047 train 4.3811 , allloss: 4.3861, dt: 1291.95ms, fracRes: 0.3627, norm(attn): 0.2236, norm(output): 0.5000, norm(x): 0.4621, norm(y): 1.0132, norm:1.7382, tok/sec: 101452.54, flops:106.48, batch-reuse:1
@ 4048 train 4.3031 , allloss: 4.3049, dt: 1320.08ms, fracRes: 0.3629, norm(attn): 0.2227, norm(output): 0.5039, norm(x): 0.4656, norm(y): 1.0132, norm:1.9859, tok/sec: 99290.90, flops:104.21, batch-reuse:1
@ 4049 train 4.2310 , allloss: 4.2331, dt: 1309.18ms, fracRes: 0.3652, norm(attn): 0.2207, norm(output): 0.5000, norm(x): 0.4639, norm(y): 1.0132, norm:1.6418, tok/sec: 100117.79, flops:105.08, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0253, 0.9766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.3281, 0.3574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2217, 0.5508, 0.1396, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.0859, 0.0923, 0.0396, 0.2656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.0708, 0.2178, 0.0179, 0.1387, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.1055, 0.0952, 0.2461, 0.1973, 0.0845, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0491, 0.1167, 0.0608, 0.5859, 0.0728, 0.0254, 0.0398, 0.0505, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.0405, 0.0405, 0.0153, 0.0549, 0.1221, 0.1787, 0.2354, 0.1846, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0903, 0.1152, 0.1270, 0.1157, 0.0540, 0.0481, 0.1729, 0.0811, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0217, 0.0216, 0.0073, 0.0449, 0.1631, 0.1689, 0.0195, 0.1895, 0.2539, 0.0408, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.1045, 0.1123, 0.0206, 0.0222, 0.0400, 0.1504, 0.1641, 0.0562, 0.0728, 0.0850, 0.0381, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.1504, 0.0894, 0.0576, 0.0776, 0.0187, 0.0430, 0.0942, 0.1328, 0.0554, 0.0640, 0.0591, 0.0447, 0.0000, 0.0000],
        [0.0752, 0.0317, 0.0369, 0.0132, 0.0337, 0.0654, 0.0869, 0.1025, 0.1533, 0.0752, 0.0178, 0.0154, 0.0349, 0.2578, 0.0000],
        [0.0801, 0.0306, 0.0986, 0.0913, 0.0295, 0.0208, 0.0586, 0.1465, 0.0219, 0.0322, 0.0605, 0.0776, 0.1240, 0.0339, 0.0933]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0143,  0.0351, -0.0382,  ..., -0.0112,  0.0130,  0.0255],
        [ 0.0458,  0.0176,  0.0038,  ..., -0.0052, -0.0123, -0.0316],
        [ 0.0056,  0.0150,  0.0092,  ..., -0.0041,  0.0050, -0.0094],
        ...,
        [-0.0358,  0.0201, -0.0055,  ...,  0.0154, -0.0095,  0.0058],
        [ 0.0555, -0.0151, -0.0214,  ...,  0.0255,  0.0007, -0.0099],
        [ 0.0019,  0.0056,  0.0339,  ..., -0.0088, -0.0261,  0.0296]], device='cuda:0', requires_grad=True)
K: tensor([-0.6836,  0.7266,  0.4004, -0.8984, -0.6797,  0.6367,  0.7383,  0.0515,  0.0796, -0.0767,  1.2656,  0.8047, -0.2148,  0.6172,  0.0194, -0.6211, -0.1846, -0.5508,  0.0383,  0.5078,  0.2168, -0.2754, -0.4922, -0.0835, -0.0889,  0.3105, -0.2598, -0.7461, -0.5352,  0.7812, -0.6133, -0.6250,
        -0.3242, -0.7227, -0.4609,  0.3086,  0.2988, -0.3770,  0.0640,  0.5938,  0.3516,  0.2314,  0.4102,  0.1250, -0.0505,  0.2314,  0.3672, -0.3418,  1.3516,  0.3711,  0.3770, -0.7344, -0.6641,  0.7500, -0.0334,  0.2324,  0.2070,  0.5234, -0.9883,  0.5469,  0.2119, -0.2695,  0.5508, -1.1172],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0272,     -0.0015,      0.0078,  ...,      0.0327,      0.0035,     -0.0222],
        [     0.0174,      0.0330,     -0.0229,  ...,     -0.0001,      0.0107,     -0.0192],
        [     0.0062,     -0.0277,      0.0041,  ...,      0.0494,      0.0071,     -0.0290],
        ...,
        [     0.0226,      0.0140,      0.0023,  ...,     -0.0208,     -0.0147,      0.0071],
        [    -0.0235,     -0.0186,      0.0168,  ...,      0.0304,     -0.0142,      0.0225],
        [     0.0322,      0.0038,     -0.0120,  ...,     -0.0422,     -0.0268,     -0.0014]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5781,  0.3125, -0.1572, -0.0457, -0.0791, -0.6719,  0.8984,  0.5938,  0.0038,  1.2891, -0.9727,  0.0205, -0.7344, -0.3828, -0.5234, -0.0713, -1.0312, -0.7617, -0.2559,  0.4238,  0.5586,  0.3789, -0.3945, -0.0150, -0.5938, -0.4199, -0.6016,  0.2383, -0.8555, -0.9297, -0.2910, -0.7500,
        -0.5547, -0.2471, -0.3359,  0.4844, -0.2539, -0.2041, -0.5938, -0.7734, -0.1147,  0.3945,  0.2773, -1.0000, -0.6836, -0.4492,  0.3496,  0.1006, -0.2002,  0.8281, -0.1475, -0.0752,  0.7109,  0.7539, -0.0659,  0.1777,  0.3965, -0.3926, -0.4824,  0.6055,  0.2373,  0.6445, -0.6289,  0.2480],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      3.6562,      0.5234,      1.6172,      0.3340,      1.4766,      1.0234,      0.2852,     -0.4844,      0.4219,      1.3984,      2.5000,      1.7656,     -0.4316,      1.0391],
        [     0.0000,      0.0420,      0.1250,      2.7969,      0.6289,     -0.4941,     -0.2734,     -0.0364,     -0.6953,     -0.8633,      1.4766,      1.9141,      2.0000,     -0.5820,      1.0078],
        [     0.0000,      0.9102,     -0.4629,     -0.9141,     -1.3203,     -0.9336,      0.3047,      0.3770,     -1.1953,     -0.1387,      0.1602,     -0.2793,     -0.0879,     -0.9453,      0.8125],
        [     0.0000,     -1.7891,     -1.7266,     -2.5781,     -0.6602,      0.0204,      0.4785,     -0.8359,      1.2266,      0.5156,     -0.7773,     -1.9453,     -1.4375,      1.4844,     -1.1094],
        [     0.0000,     -1.6172,     -0.5000,     -2.9844,     -0.9492,     -0.6016,      0.0330,      0.0349,      0.8867,      0.5430,     -1.5234,     -2.4531,     -2.1719,      0.7461,     -1.2422],
        [     0.0000,     -0.4863,     -0.5898,      0.3633,      0.1436,     -0.7070,     -0.5352,     -0.3145,      0.5156,      0.2793,      0.3398,      0.6094,      0.5234,      0.4785,      0.5273],
        [     0.0000,      0.8711,      0.2148,      2.4844,      0.3926,     -0.6562,     -0.2070,      0.0308,     -0.7422,     -1.1484,      1.3516,      1.2812,      1.5078,     -1.1484,      1.0234],
        [     0.0000,     -1.1484,     -1.1484,     -2.1250,     -0.8438,     -0.0461,      0.3340,      0.6094,      0.3652,      0.0830,     -1.0391,     -1.9375,     -1.2344,      1.1328,     -0.2793],
        [     0.0000,     -0.3828,     -0.1416,     -0.0437,     -0.1377,     -0.8984,     -1.0156,      0.2637,     -0.4902,     -0.7383,      0.2480,     -0.2021,     -0.2471,     -0.8633,     -0.3066],
        [     0.0000,     -1.1484,     -1.1484,     -2.2344,     -0.4141,      0.8711,      0.9102,     -1.2500,      1.0234,      1.3125,     -0.5156,     -1.4062,     -1.6172,      1.2422,     -0.8711],
        [     0.0000,     -0.2451,     -0.1709,     -1.8672,     -1.7969,     -1.2031,      0.1196,      0.2041,     -0.8633,     -0.6055,     -0.4531,     -1.2500,     -1.3906,     -1.1094,     -0.1377],
        [     0.0000,      0.2812,     -0.2363,     -0.6758,     -0.3770,     -1.8047,     -0.9688,     -0.1816,      0.1611,     -0.7109,     -0.5664,     -0.6484,     -0.9297,     -0.0093,     -0.2197],
        [     0.0000,     -0.8633,     -0.7109,     -1.7344,     -0.8047,     -0.1367,      0.1475,      0.3125,      0.7109,      0.0003,     -1.4375,     -1.5859,     -0.7656,      1.2344,     -0.4414],
        [     0.0000,     -0.9609,      0.2090,      0.1318,     -1.0000,     -1.3516,     -0.3145,      0.6055,     -1.2969,     -0.9141,     -0.2812,     -0.0332,      0.4336,     -0.8555,      0.1514]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3366],
        [0.4691],
        [0.2994],
        [0.4081],
        [0.3420],
        [0.1415],
        [0.1873],
        [0.1333],
        [0.1477],
        [0.0934],
        [0.1527],
        [0.1842],
        [0.0901],
        [0.0714]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.1768,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.1475,     0.0361,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3359,     0.0047,     0.6562,     0.0037,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0493,     0.1172,     0.0128,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7344,     0.0732,     0.0220,     0.0079,     0.0006,     0.1602,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4805,     0.0552,     0.0771,     0.0042,     0.0014,     0.2520,     0.1299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1719,     0.0923,     0.4121,     0.0293,     0.0132,     0.1348,     0.1108,     0.0356,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6641,     0.0791,     0.0723,     0.0036,     0.0002,     0.0322,     0.1055,     0.0233,     0.0206,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4629,     0.0352,     0.0603,     0.0068,     0.0017,     0.0688,     0.0325,     0.2500,     0.0217,     0.0608,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9023,     0.0068,     0.0505,     0.0041,     0.0001,     0.0050,     0.0120,     0.0064,     0.0086,     0.0031,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3066,     0.1016,     0.0259,     0.0085,     0.0053,     0.1963,     0.1797,     0.0542,     0.0223,     0.0093,     0.0055,     0.0854,     0.0000,     0.0000,     0.0000],
        [    0.1357,     0.0173,     0.2637,     0.0125,     0.0030,     0.0466,     0.0178,     0.0255,     0.0125,     0.0400,     0.0013,     0.3262,     0.0991,     0.0000,     0.0000],
        [    0.6719,     0.0505,     0.0679,     0.0026,     0.0001,     0.0210,     0.0649,     0.0242,     0.0154,     0.0033,     0.0001,     0.0596,     0.0113,     0.0088,     0.0000],
        [    0.1943,     0.1406,     0.0049,     0.0074,     0.0051,     0.0461,     0.2461,     0.0021,     0.1147,     0.0013,     0.0229,     0.0031,     0.0023,     0.0908,     0.1177]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0249, -0.0173, -0.0493,  ...,  0.0307, -0.0175,  0.0239],
        [ 0.0070, -0.0066, -0.0421,  ...,  0.0802, -0.0310,  0.0167],
        [-0.0024, -0.0507, -0.0821,  ...,  0.0494, -0.0243, -0.0007],
        ...,
        [-0.0236,  0.0067,  0.0177,  ...,  0.0104,  0.0223,  0.0509],
        [ 0.0017, -0.0179, -0.0484,  ...,  0.0253,  0.0232,  0.0088],
        [ 0.0108,  0.0391, -0.0035,  ..., -0.0240,  0.0118,  0.0397]], device='cuda:0', requires_grad=True)
K: tensor([ 1.6094,  0.5625, -1.2109, -1.5781, -0.7891,  0.6406, -1.2812, -1.3906,  2.4219, -0.6914, -1.4688, -0.0776, -0.1543, -0.9648,  0.1895, -0.4570, -0.3184, -0.0327, -0.3535,  0.6445,  1.6484,  1.3281, -0.6328, -1.0547, -0.9766,  0.8359,  0.7344, -0.8516, -0.7305,  1.7891,  0.3652, -0.6055,
         0.1768,  1.0703, -0.4277, -0.4277, -0.2773,  1.7812,  1.0547,  0.4707, -1.8750,  0.1187, -0.0247,  1.0312, -1.8828,  1.0312,  0.2871,  0.1543,  0.2148, -0.0933, -1.0703,  0.0028, -0.8789,  0.8945,  0.5078,  1.4922, -0.3086, -0.4336,  0.8281,  0.3516,  0.6484,  0.2930, -0.1484,  0.1147],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0278,  0.0163, -0.0042,  ..., -0.0007,  0.0247,  0.0062],
        [ 0.0188,  0.0215,  0.0465,  ..., -0.0266,  0.0147,  0.0273],
        [ 0.0335,  0.0167,  0.0237,  ..., -0.0244,  0.0357, -0.0012],
        ...,
        [-0.0014, -0.0365, -0.0099,  ...,  0.0151, -0.0503,  0.0130],
        [-0.0062, -0.0195,  0.0237,  ..., -0.0025, -0.0155,  0.0160],
        [-0.0140, -0.0597,  0.0215,  ...,  0.0162,  0.0087,  0.0110]], device='cuda:0', requires_grad=True)
Q: tensor([ 3.0312, -0.6367, -0.3516, -1.0625,  2.1094, -1.3125, -0.7031,  2.4844,  0.4883,  0.5703,  1.6094, -1.1562,  0.5742,  0.5391, -0.3613, -0.8359, -0.1885,  0.7422,  1.1562, -0.2119, -0.4160, -0.3613,  1.4062,  0.5703,  1.9844,  1.6641,  1.0859, -1.9375,  0.8555, -0.6836,  0.7305,  2.4531,
         0.7148, -1.2422,  0.6289,  0.9961, -1.0234,  0.0244,  0.7422, -1.1016,  0.0049, -1.4297, -2.0938, -2.2344,  0.6914,  1.9141,  0.1494, -0.1040,  1.0312, -1.4453, -1.0312, -1.3984, -0.7188, -0.2217,  1.1094,  1.2188,  0.3516,  1.4766, -0.0659, -0.5469,  0.6016, -0.6367, -0.0070,  0.9609],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.5391, -2.6250, -2.9219, -5.1562, -1.5469, -0.4297, -3.7969, -1.5938, -5.4375, -3.1719, -3.4062, -3.7812, -1.3984,  1.5781],
        [ 0.0000, -1.7109, -3.1094, -3.0312, -4.8125, -1.7656, -0.4902, -1.7344, -3.9375, -4.3438, -4.7812, -3.9531, -2.7656, -3.8281, -0.5312],
        [ 0.0000, -4.2812,  0.6641, -4.5312, -9.8125, -5.0000, -4.0000, -3.7812, -5.8125, -4.0000, -9.1250, -1.6797, -4.8125, -5.9688,  0.3105],
        [ 0.0000, -2.8125, -1.9453, -4.1562, -6.9375, -2.1719, -1.8438, -1.5547, -3.0781, -4.1250, -6.6250, -1.3203, -1.9219, -3.1719, -0.6836],
        [ 0.0000, -2.3125, -3.5156, -4.5312, -7.0625, -1.5234, -1.7656, -2.5781, -6.0000, -4.0938, -7.4375, -3.2812, -2.5938, -6.0625, -0.8867],
        [ 0.0000, -2.1562, -1.8281, -4.7188, -5.8438, -0.6445, -1.3047, -2.6250, -4.3750, -3.5625, -7.2188, -1.9141, -2.1250, -4.4688, -0.7344],
        [ 0.0000, -0.6250,  0.8711, -1.7734, -2.5625, -0.2480, -0.4434, -1.5781, -1.4766, -2.3281, -3.5312,  1.1406, -1.3359, -1.2109,  2.3750],
        [ 0.0000, -2.1250, -2.2188, -5.2188, -8.0625, -3.0312, -1.8438, -3.3438, -3.4688, -5.2188, -8.5625, -2.3594, -4.0312, -4.0625, -1.4375],
        [ 0.0000, -2.5781, -2.0312, -4.2188, -5.5938, -1.9062, -2.6562, -0.6172, -3.0625, -2.0312, -5.2812, -0.9844, -1.0078, -2.9062,  0.1250],
        [ 0.0000, -4.9062, -2.8750, -5.4062, -9.0625, -5.1875, -4.3125, -4.9688, -4.6562, -5.6562, -8.8125, -3.1875, -4.7500, -4.9375, -1.4922],
        [ 0.0000, -1.1016, -2.4688, -3.5781, -4.0625, -0.4434, -0.5312, -1.7344, -2.6094, -3.5000, -4.0312, -1.2734, -1.7422, -2.4531,  0.4570],
        [ 0.0000, -2.0625,  0.6641, -2.3906, -3.7969, -1.0703, -2.0312, -1.6719, -2.3906, -1.2188, -4.6562,  0.8750, -0.3145, -1.9688,  2.0000],
        [ 0.0000, -2.5781, -2.2812, -5.5625, -8.5625, -3.4688, -2.3281, -3.3281, -3.7656, -5.3125, -9.0625, -2.4219, -4.0938, -4.3438, -1.5781],
        [ 0.0000, -0.3223, -3.6719, -3.2656, -3.6562, -1.4375,  0.2373, -4.5312, -0.5273, -5.0312, -2.1406, -4.1250, -4.4688, -0.7617, -0.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5557],
        [0.5290],
        [0.4148],
        [0.6672],
        [0.6043],
        [0.5346],
        [0.4434],
        [0.6325],
        [0.3882],
        [0.6364],
        [0.4348],
        [0.4183],
        [0.6242],
        [0.5957]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0244, -0.0348, -0.0214,  ...,  0.0204,  0.0179,  0.0467],
        [ 0.0005,  0.0076,  0.0542,  ..., -0.0153,  0.0317,  0.0104],
        [ 0.0146, -0.0231, -0.0461,  ..., -0.0016, -0.0106,  0.0480],
        ...,
        [ 0.0144,  0.0237,  0.0092,  ..., -0.0487,  0.0157, -0.0243],
        [ 0.0095, -0.0297, -0.0369,  ...,  0.0250, -0.0033,  0.0327],
        [ 0.0318,  0.0100,  0.0265,  ..., -0.0080,  0.0046, -0.0179]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1973, -0.9961, -1.5938,  1.0859,  0.1855,  0.3770,  1.8516,  2.7188,  0.8906, -1.9141, -1.6172, -2.2344,  0.3184, -2.6875,  3.0781, -1.6875,  1.5234,  0.0879, -1.8672, -2.0781,  1.8750, -2.0781, -1.2344,  1.3281,  0.8320, -1.6094, -0.8281, -1.3672,  0.1328, -2.4531, -2.9219, -1.3906,
         3.1250, -0.4082,  2.0781, -2.5312, -0.6445,  2.6094, -2.2969,  3.9688,  1.6719,  1.3984,  0.1953, -2.6250, -0.5586, -1.3516, -1.0312,  2.7188,  3.1562, -1.2656, -2.2969, -0.1514,  2.2344, -2.0312,  2.6406,  1.2266,  1.6250, -1.3359,  1.1016,  1.4297,  2.2344,  2.7969, -2.1719,  2.1250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0686,  0.0234,  0.0303,  ..., -0.0218,  0.0137, -0.0220],
        [-0.0345, -0.0116, -0.0367,  ...,  0.0457, -0.0295,  0.0274],
        [ 0.0175,  0.0029,  0.0338,  ..., -0.0697,  0.0358, -0.0060],
        ...,
        [-0.0206, -0.0018, -0.0112,  ...,  0.0323, -0.0194,  0.0282],
        [-0.0030, -0.0076,  0.0197,  ..., -0.0521,  0.0368, -0.0148],
        [-0.0335,  0.0092, -0.0401,  ...,  0.0631, -0.0311, -0.0024]], device='cuda:0', requires_grad=True)
Q: tensor([-0.9336,  0.2441,  0.9766, -1.4297, -1.1016, -1.4609, -1.4844, -1.6953, -1.4609,  1.3984,  1.6250,  1.4609, -0.6523,  3.2344, -2.0469,  1.2812, -0.6211, -0.0530,  1.7344,  1.2578, -0.8008,  0.8203,  1.5000, -0.5938, -1.3281,  1.3281,  1.0234,  2.0469,  0.6055,  1.3125,  1.7031,  0.4043,
        -2.3750,  0.2461, -0.6719,  1.9609,  1.2266, -1.8516,  0.9062, -1.5312, -1.4141, -1.1953, -0.4590,  1.8125, -0.2637,  0.5977,  0.8906, -1.0625, -1.4688,  1.0781,  1.2969,  0.9570, -1.0312,  1.0391, -1.4375, -0.3340, -2.2031,  0.7695, -1.5312, -0.4473, -1.7188, -1.3047,  1.0781, -1.0000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -14.6875, -12.3750, -16.6250, -16.1250, -16.2500, -16.3750, -15.8750, -18.0000, -13.4375, -15.4375, -14.0625, -17.5000, -18.3750, -14.5625],
        [  0.0000, -12.6875, -12.2500, -15.3125, -13.6875, -14.5000, -15.0000, -15.7500, -16.3750, -13.0625, -12.6875, -12.9375, -17.2500, -16.7500, -13.8750],
        [  0.0000, -17.5000, -17.3750, -22.3750, -18.7500, -20.0000, -20.7500, -22.1250, -22.8750, -18.0000, -17.8750, -17.5000, -23.7500, -23.3750, -20.1250],
        [  0.0000, -13.9375, -12.4375, -15.8750, -16.0000, -16.2500, -16.6250, -16.1250, -17.0000, -14.0625, -14.9375, -13.7500, -18.1250, -17.5000, -14.2500],
        [  0.0000, -17.2500, -15.6875, -20.0000, -19.5000, -20.3750, -20.5000, -20.8750, -21.6250, -17.6250, -18.2500, -17.5000, -23.0000, -22.2500, -17.8750],
        [  0.0000, -15.5000, -15.0000, -18.3750, -17.6250, -18.5000, -19.2500, -19.6250, -19.8750, -16.3750, -16.2500, -15.9375, -21.5000, -20.3750, -17.1250],
        [  0.0000, -20.5000, -20.5000, -25.0000, -22.6250, -23.7500, -25.0000, -27.8750, -26.2500, -22.3750, -20.7500, -21.1250, -29.6250, -26.8750, -23.1250],
        [  0.0000, -19.3750, -18.5000, -23.6250, -21.2500, -22.5000, -23.0000, -23.6250, -24.8750, -19.6250, -20.3750, -19.5000, -25.8750, -25.5000, -21.2500],
        [  0.0000, -17.5000, -16.5000, -20.7500, -19.8750, -20.1250, -20.6250, -22.5000, -22.2500, -18.8750, -18.6250, -18.0000, -24.3750, -22.8750, -18.3750],
        [  0.0000, -13.9375, -11.8750, -16.0000, -15.6875, -15.5625, -15.8750, -15.1250, -16.7500, -13.5000, -15.7500, -13.5625, -16.7500, -17.3750, -14.0625],
        [  0.0000, -15.2500, -13.6250, -17.8750, -16.5000, -17.5000, -17.6250, -17.7500, -19.1250, -14.9375, -15.6875, -15.0625, -19.3750, -19.5000, -15.9375],
        [  0.0000, -19.3750, -19.2500, -23.3750, -21.8750, -22.7500, -23.5000, -25.8750, -24.8750, -21.2500, -20.1250, -20.0000, -28.2500, -25.6250, -21.5000],
        [  0.0000, -19.2500, -18.3750, -23.5000, -21.3750, -22.5000, -23.0000, -23.6250, -24.7500, -19.7500, -20.6250, -19.5000, -25.8750, -25.3750, -21.0000],
        [  0.0000, -16.2500, -15.2500, -19.6250, -17.6250, -18.5000, -19.0000, -19.6250, -20.7500, -16.3750, -16.6250, -15.9375, -21.3750, -21.1250, -18.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9639],
        [0.9272],
        [0.9977],
        [0.9370],
        [0.9590],
        [0.9805],
        [0.9954],
        [0.9850],
        [0.9684],
        [0.8813],
        [0.8875],
        [0.9974],
        [0.9756],
        [0.9577]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3594,     0.6406,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0106,     0.4727,     0.5156,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0091,     0.1582,     0.4609,     0.3711,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0172,     0.1943,     0.5312,     0.1719,     0.0874,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.0645,     0.1338,     0.2412,     0.0308,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0095,     0.0505,     0.0835,     0.1289,     0.0544,     0.5234,     0.1484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0081,     0.0498,     0.0630,     0.0889,     0.0081,     0.2773,     0.0640,     0.4414,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0087,     0.0157,     0.0086,     0.0055,     0.3066,     0.0315,     0.6094,     0.0126,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0033,     0.0132,     0.0251,     0.0344,     0.0080,     0.0544,     0.0410,     0.4512,     0.0352,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.0035,     0.0108,     0.0059,     0.0029,     0.0596,     0.0581,     0.2041,     0.0101,     0.6094,     0.0322,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0049,     0.0070,     0.0103,     0.0022,     0.0090,     0.0201,     0.1436,     0.0304,     0.2207,     0.0854,     0.4668,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0038,     0.0049,     0.0054,     0.0005,     0.0261,     0.0047,     0.0491,     0.0040,     0.1543,     0.0188,     0.3008,     0.4258,     0.0000,     0.0000],
        [    0.0002,     0.0006,     0.0008,     0.0005,     0.0003,     0.0129,     0.0014,     0.0270,     0.0006,     0.0266,     0.0022,     0.0559,     0.8516,     0.0182,     0.0000],
        [    0.0003,     0.0007,     0.0014,     0.0012,     0.0011,     0.0021,     0.0045,     0.0238,     0.0078,     0.0435,     0.0177,     0.1289,     0.3281,     0.1426,     0.2969]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0177,  0.0234,  0.0468,  ..., -0.0345,  0.0175, -0.0253],
        [-0.0361, -0.0318,  0.0239,  ..., -0.0577, -0.0389,  0.0230],
        [-0.0488, -0.0432,  0.0394,  ..., -0.0237, -0.0199,  0.0022],
        ...,
        [ 0.0397, -0.0224, -0.0179,  ..., -0.0177, -0.0394,  0.0014],
        [ 0.0237,  0.0584, -0.0075,  ...,  0.0698, -0.0240,  0.0006],
        [ 0.0062, -0.0003,  0.0054,  ...,  0.0115,  0.0357, -0.0104]], device='cuda:0', requires_grad=True)
K: tensor([     0.6211,     -1.5625,     -0.8203,      0.0085,     -1.0000,      0.2207,      0.6602,      2.3125,      0.6758,      1.7500,     -0.1660,     -1.4062,      0.0016,      0.4727,      0.1543,      1.4688,      1.8984,     -1.3203,      0.1914,     -1.6719,      0.9336,     -2.2812,
            -0.2178,      1.8906,     -2.7031,     -0.0036,      0.1699,     -0.5898,     -0.1768,      0.9727,     -2.3594,      1.3516,     -0.6016,     -2.1719,     -1.8125,     -1.6406,      1.4453,      2.1406,     -0.4395,      1.0078,      2.8438,     -0.4590,     -2.5469,      2.1562,
            -0.7031,     -1.0703,      0.6719,      0.6328,      0.2949,     -0.1050,     -0.0659,     -1.9844,      1.7266,     -0.0085,     -1.2422,     -2.2344,     -0.6055,     -1.5312,      1.3047,      0.8711,     -1.4062,     -0.8516,     -1.3047,      1.3203], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0173,  0.0285, -0.0547,  ..., -0.0114, -0.0410, -0.0029],
        [-0.0244,  0.0170,  0.0081,  ..., -0.0115,  0.0016, -0.0353],
        [ 0.0167,  0.0397, -0.0274,  ...,  0.0190, -0.0343,  0.0098],
        ...,
        [-0.0061, -0.0235,  0.0041,  ..., -0.0310,  0.0326,  0.0039],
        [ 0.0205, -0.0122, -0.0045,  ..., -0.0076,  0.0309,  0.0145],
        [ 0.0412,  0.0115,  0.0129,  ..., -0.0340, -0.0264,  0.0360]], device='cuda:0', requires_grad=True)
Q: tensor([-1.4062, -0.3320, -2.3594, -2.1719, -0.7305, -3.4375, -0.2500,  0.6211,  3.2500, -2.3750,  5.7500, -2.9531,  1.8125,  3.0000,  5.5000, -2.6250,  2.8438, -1.1016,  4.1250, -3.4531,  1.4453, -3.1875,  1.9297,  1.7344, -5.8750,  0.7344, -0.1221,  2.8594,  1.1094, -1.2188, -2.9219,  0.5273,
         2.8438,  0.7031,  0.4863, -2.2500, -1.8281,  0.4375,  1.9297,  2.3125,  1.5859,  0.1797,  4.3438,  0.0752, -4.7188, -0.5117,  3.6875, -2.7031, -2.7500,  0.4766,  3.4531, -1.7969,  2.8438, -0.5898,  4.4062, -3.8906,  0.6641, -0.0110,  1.2578, -0.7578, -0.1128,  2.2812, -0.5664,  0.6211],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.5781,      0.7188,     -0.1836,     -0.2188,      1.1484,      0.7383,      1.2734,      0.2930,      1.6562,      0.6094,      2.0781,      2.5312,      1.3516,      2.7812],
        [     0.0000,      3.7969,      3.8750,      5.0312,      3.3594,      4.8125,      5.0625,      6.5312,      6.1875,      7.0312,      6.9688,      9.0000,      8.7500,      8.8750,     10.3125],
        [     0.0000,      2.8594,      3.9219,      3.7031,      3.5938,      5.2500,      5.1250,      6.8438,      6.0312,      7.3750,      7.0000,      8.8125,      9.5625,      8.8750,      9.7500],
        [     0.0000,      2.4219,      3.4219,      2.2969,      1.6250,      6.1562,      4.0625,      6.5625,      3.0625,      7.1562,      5.0000,      8.1250,      9.8750,      6.5000,     10.2500],
        [     0.0000,      3.5000,      4.2500,      4.8125,      2.7656,      5.6250,      5.0312,      7.4375,      5.0938,      7.8125,      6.0312,      9.3750,     10.6250,      8.7500,     12.1875],
        [     0.0000,      1.6719,      2.1719,      2.6094,      1.7422,      4.0000,      2.7500,      4.5625,      3.6719,      5.9375,      4.8750,      7.5625,      7.4688,      6.8438,      9.6875],
        [     0.0000,      1.8125,      2.0469,      2.3906,     -0.0098,      3.5312,      2.0625,      3.9844,      2.3125,      5.2188,      3.4844,      6.2500,      6.3125,      5.2812,      8.5625],
        [     0.0000,      1.7812,      2.3594,      1.7656,      1.3203,      5.3438,      3.0625,      6.0312,      2.1406,      5.9375,      3.5156,      6.7812,      9.5625,      5.5625,      9.9375],
        [     0.0000,      1.4062,      2.0469,      2.3594,      0.8984,      2.8125,      2.5312,      4.9375,      2.3750,      4.6250,      3.0625,      6.1562,      7.5312,      5.4688,      8.4375],
        [     0.0000,      0.4395,      1.5781,      0.9648,      0.2539,      3.2812,      3.2656,      4.5312,      1.5078,      5.6250,      2.6719,      5.9688,      7.4062,      4.8438,      8.9375],
        [     0.0000,      2.2656,      2.6250,      3.0000,      1.4766,      2.8750,      3.6719,      5.6250,      4.0938,      6.0625,      5.1250,      6.8125,      8.1875,      7.2188,      9.4375],
        [     0.0000,      1.5469,      1.7812,      1.8906,     -0.4902,      3.4688,      1.7578,      4.0938,      1.5781,      5.2500,      3.1406,      5.9062,      6.2500,      4.6875,      8.3750],
        [     0.0000,      1.1562,      1.5078,      0.9609,      0.4297,      4.2812,      2.0781,      5.0312,      1.2500,      5.0000,      2.5000,      5.7500,      8.5000,      4.6250,      8.9375],
        [     0.0000,      1.0312,      1.6875,      1.4766,      1.4062,      2.0781,      2.8438,      4.5000,      3.3906,      5.1250,      4.2188,      6.1875,      7.1250,      6.3125,      7.0312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3877],
        [0.0934],
        [0.0408],
        [0.0354],
        [0.0232],
        [0.0364],
        [0.0364],
        [0.0173],
        [0.0106],
        [0.0149],
        [0.0050],
        [0.0162],
        [0.0112],
        [0.0038]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.8281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0222, 0.5430, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0040, 0.6992, 0.0308, 0.2656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0178, 0.7031, 0.0461, 0.0591, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0137, 0.7227, 0.0295, 0.0471, 0.0175, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0015, 0.8125, 0.0090, 0.0151, 0.0183, 0.0854, 0.0598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0019, 0.5938, 0.0051, 0.0493, 0.0400, 0.1367, 0.1133, 0.0581, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0120, 0.4453, 0.0187, 0.0620, 0.0195, 0.1064, 0.2793, 0.0255, 0.0322, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0060, 0.4980, 0.0189, 0.0713, 0.0215, 0.0845, 0.1235, 0.0168, 0.0403, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0250, 0.3809, 0.0221, 0.0400, 0.0021, 0.0298, 0.0703, 0.0120, 0.0104, 0.1689, 0.2373, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0177, 0.0649, 0.0104, 0.2178, 0.0256, 0.0344, 0.0255, 0.0120, 0.0393, 0.1680, 0.3613, 0.0232, 0.0000, 0.0000, 0.0000],
        [0.0109, 0.3242, 0.0023, 0.0312, 0.0271, 0.0535, 0.0908, 0.0057, 0.1030, 0.0557, 0.1367, 0.0172, 0.1416, 0.0000, 0.0000],
        [0.0083, 0.1924, 0.0070, 0.0330, 0.0135, 0.0422, 0.1318, 0.0060, 0.0222, 0.1055, 0.1406, 0.0251, 0.1914, 0.0811, 0.0000],
        [0.0067, 0.2969, 0.0850, 0.0486, 0.1348, 0.1001, 0.1128, 0.0255, 0.0137, 0.0254, 0.0055, 0.0162, 0.0933, 0.0107, 0.0240]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0034,  0.0100,  0.0114,  ..., -0.0240,  0.0112,  0.0248],
        [ 0.0333, -0.0016, -0.0175,  ..., -0.0146,  0.0028,  0.0030],
        [-0.0185, -0.0303, -0.0013,  ...,  0.0228, -0.0269, -0.0084],
        ...,
        [-0.0017,  0.0140,  0.0302,  ..., -0.0235, -0.0354,  0.0048],
        [-0.0275, -0.0284, -0.0228,  ..., -0.0067, -0.0347,  0.0020],
        [ 0.0049,  0.0128,  0.0152,  ...,  0.0104,  0.0004,  0.0293]], device='cuda:0', requires_grad=True)
K: tensor([-0.9453, -0.9570, -0.1768, -0.2773,  0.5117, -0.6797, -0.8672,  0.1377, -2.2031,  1.2031, -0.6289, -1.2578, -0.0962,  1.1875, -0.5312,  1.7812,  0.9648,  0.2520,  2.4219,  0.9258, -0.2070, -1.3281,  0.9141,  0.0503, -1.2031,  0.6328,  0.0087,  0.0869,  1.4766, -1.3438, -0.0850, -0.8672,
         0.9492,  1.3125, -0.1689,  1.9297, -0.1670, -0.0540,  0.6211, -1.4609,  0.9688,  0.0898, -0.8984,  0.5820, -1.4453,  1.1406, -1.4766, -2.1250, -0.1699,  0.4219,  1.3047, -1.3359, -0.6836,  1.2266,  0.8672, -0.6758,  0.5273, -2.2969, -0.9141, -1.1953,  1.2109, -0.2754,  0.9570,  0.4707],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0417,  0.0346, -0.0313,  ...,  0.0099,  0.0003,  0.0129],
        [-0.0174,  0.0044, -0.0030,  ..., -0.0289, -0.0021, -0.0323],
        [-0.0176, -0.0108, -0.0115,  ..., -0.0237,  0.0094, -0.0056],
        ...,
        [ 0.0117, -0.0007, -0.0333,  ..., -0.0161,  0.0242,  0.0163],
        [-0.0145, -0.0166, -0.0430,  ...,  0.0039, -0.0071,  0.0332],
        [-0.0017,  0.0210, -0.0076,  ..., -0.0238, -0.0103, -0.0091]], device='cuda:0', requires_grad=True)
Q: tensor([-0.9570, -0.3496, -0.8672, -2.0312, -0.3516, -2.9531,  0.9492,  2.2188,  0.2461, -1.8516, -1.4922,  1.4688,  0.2988,  0.2168, -0.4570, -2.8438,  1.3125, -2.0312,  0.2217, -1.1250, -0.0121, -1.1484, -1.3281,  0.7188,  0.4629,  0.9805,  0.8086,  1.5703,  0.9180,  0.5234, -0.9570,  0.1680,
         0.1514, -1.0156, -1.9609, -1.1484, -1.3828, -1.7344,  1.6719,  0.6211,  1.7500, -0.0801, -1.1562,  1.2578, -2.3281,  0.0947, -0.7344,  0.0962,  1.5859, -0.9336, -0.0292,  1.1406, -1.1875, -1.9609, -0.1484, -0.8906, -0.3066, -2.9219, -0.1934, -1.7109,  1.2422, -1.1250,  0.8164,  1.4297],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.5781,     -1.2031,     -1.1641,     -1.2031,     -0.6523,     -3.0000,     -2.0938,     -2.7500,     -1.2266,     -2.1719,     -2.0156,     -1.0234,     -2.6875,     -3.3594],
        [     0.0000,      3.2031,      2.9688,      5.1875,      5.6562,      3.6719,      2.1875,      3.1719,      2.7969,      2.3906,      2.4844,      0.2451,      4.3438,      2.2969,      0.6250],
        [     0.0000,      5.1562,      2.0469,      4.1875,      6.1875,      5.0312,      3.8594,      3.4219,      3.1719,      2.9375,      2.2344,      0.4941,      4.2812,      2.5469,      1.7031],
        [     0.0000,      3.6719,      0.9492,      1.1953,      2.2812,      3.4844,      1.6875,      0.7656,      0.3867,      2.1250,      0.8398,     -0.1387,      1.9375,      0.4922,      1.2422],
        [     0.0000,      3.9531,      0.7656,      1.2266,      0.2412,      2.5156,      1.5547,      0.2344,     -0.6055,      1.8281,      0.6328,     -0.2100,      0.7305,     -1.1406,      0.4805],
        [     0.0000,      6.2812,      1.7734,      2.2969,      2.4844,      4.0312,      3.6719,      4.8125,      2.8125,      2.2031,      1.3281,      2.0312,      2.1250,      0.9922,      1.7031],
        [     0.0000,      5.7500,      1.0000,      3.2656,      3.0469,      4.2812,      4.0938,      3.4219,      4.8438,      3.7812,      3.3594,      1.3984,      3.6250,      4.4062,      3.8750],
        [     0.0000,      3.6094,      0.4414,      1.6406,      0.4844,      2.1875,      3.1406,      0.7539,      0.9883,      3.1094,      2.9219,      1.5078,      3.0469,      1.4141,      2.9531],
        [     0.0000,      4.4062,      1.1562,      2.4844,      1.2812,      2.6562,      3.0312,      1.0391,      1.9062,      2.9844,      5.6562,      3.3438,      4.0312,      2.4688,      2.9531],
        [     0.0000,      2.7188,     -0.1235,      0.4668,     -2.4844,      0.1709,      1.0312,     -0.7383,     -0.8750,      1.9062,      2.2500,      2.5781,      3.0625,      0.0056,      1.6719],
        [     0.0000,      1.3047,     -0.5273,      2.5000,      0.3672,      0.6641,      0.3672,     -0.3848,      0.8008,      2.2500,      3.0156,      0.2695,      4.9375,      2.1250,      2.1562],
        [     0.0000,      3.3906,     -1.5625,      1.0547,      0.9141,      1.5859,      2.1250,     -0.6523,      2.2500,      1.6328,      2.5312,      0.4570,      2.5625,      3.7031,      3.6875],
        [     0.0000,      3.1406,     -0.1650,      1.3750,      0.4805,      1.6172,      2.7656,     -0.3340,      0.9844,      2.5469,      2.8281,      1.1016,      3.1406,      2.2812,      3.5156],
        [     0.0000,      3.7969,      2.5469,      1.9844,      3.0000,      2.7188,      2.8281,      1.3438,      0.7227,      1.3359,     -0.1982,      0.8906,      2.6406,      0.4746,      1.2812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1085],
        [0.0162],
        [0.0032],
        [0.0080],
        [0.0211],
        [0.0065],
        [0.0026],
        [0.0033],
        [0.0027],
        [0.0243],
        [0.0089],
        [0.0135],
        [0.0034],
        [0.0114]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1855 a:0.1226,:0.1826 and:0.1045atoes:0.0952,:0.6836 a:0.0718iced:0.3066)
iced
------
		( a:0.1226,:0.1826 and:0.1045atoes:0.0952,:0.6836 a:0.0718iced:0.3066,:0.4238)
, and are all good for your health.
- The best way to
@ 4050 train 4.2831 , allloss: 4.2839, dt: 1693.63ms, fracRes: 0.3624, norm(attn): 0.2227, norm(output): 0.4961, norm(x): 0.4569, norm(y): 1.0132, norm:1.6545, tok/sec: 77391.16, flops:81.22, batch-reuse:1
@ 4051 train 4.2725 , allloss: 4.2740, dt: 1280.38ms, fracRes: 0.3617, norm(attn): 0.2275, norm(output): 0.4961, norm(x): 0.4580, norm(y): 1.0131, norm:1.7206, tok/sec: 102369.78, flops:107.44, batch-reuse:1
@ 4052 train 4.1953 , allloss: 4.1970, dt: 1292.96ms, fracRes: 0.3605, norm(attn): 0.2275, norm(output): 0.4961, norm(x): 0.4608, norm(y): 1.0131, norm:1.4679, tok/sec: 101373.39, flops:106.39, batch-reuse:1
@ 4053 train 4.2076 , allloss: 4.2089, dt: 1317.77ms, fracRes: 0.3621, norm(attn): 0.2217, norm(output): 0.4961, norm(x): 0.4580, norm(y): 1.0133, norm:1.5025, tok/sec: 99464.68, flops:104.39, batch-reuse:1
@ 4054 train 4.3325 , allloss: 4.3344, dt: 1310.53ms, fracRes: 0.3632, norm(attn): 0.2188, norm(output): 0.4980, norm(x): 0.4608, norm(y): 1.0133, norm:1.6071, tok/sec: 100014.27, flops:104.97, batch-reuse:1
@ 4055 train 4.3776 , allloss: 4.3808, dt: 1304.26ms, fracRes: 0.3631, norm(attn): 0.2158, norm(output): 0.5000, norm(x): 0.4613, norm(y): 1.0133, norm:1.5814, tok/sec: 100495.39, flops:105.47, batch-reuse:1
@ 4056 train 4.4005 , allloss: 4.4018, dt: 1308.06ms, fracRes: 0.3618, norm(attn): 0.2178, norm(output): 0.5000, norm(x): 0.4602, norm(y): 1.0131, norm:1.4047, tok/sec: 100203.49, flops:105.17, batch-reuse:1
@ 4057 train 4.2220 , allloss: 4.2235, dt: 1306.84ms, fracRes: 0.3633, norm(attn): 0.2178, norm(output): 0.4980, norm(x): 0.4578, norm(y): 1.0132, norm:1.6758, tok/sec: 100296.54, flops:105.26, batch-reuse:1
@ 4058 train 4.3817 , allloss: 4.3831, dt: 1288.96ms, fracRes: 0.3625, norm(attn): 0.2178, norm(output): 0.5000, norm(x): 0.4602, norm(y): 1.0132, norm:1.5246, tok/sec: 101688.54, flops:106.72, batch-reuse:1
@ 4059 train 4.2383 , allloss: 4.2401, dt: 1312.22ms, fracRes: 0.3620, norm(attn): 0.2197, norm(output): 0.5000, norm(x): 0.4598, norm(y): 1.0131, norm:1.6327, tok/sec: 99885.74, flops:104.83, batch-reuse:1
@ 4060 train 4.2239 , allloss: 4.2251, dt: 1331.11ms, fracRes: 0.3613, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4549, norm(y): 1.0131, norm:1.5520, tok/sec: 98468.05, flops:103.34, batch-reuse:1
@ 4061 train 4.3206 , allloss: 4.3222, dt: 1341.56ms, fracRes: 0.3627, norm(attn): 0.2188, norm(output): 0.5000, norm(x): 0.4586, norm(y): 1.0133, norm:1.6567, tok/sec: 97700.88, flops:102.54, batch-reuse:1
@ 4062 train 4.2671 , allloss: 4.2698, dt: 1337.70ms, fracRes: 0.3631, norm(attn): 0.2178, norm(output): 0.4980, norm(x): 0.4579, norm(y): 1.0132, norm:1.5797, tok/sec: 97983.39, flops:102.84, batch-reuse:1
@ 4063 train 4.2423 , allloss: 4.2455, dt: 1320.93ms, fracRes: 0.3631, norm(attn): 0.2197, norm(output): 0.5000, norm(x): 0.4587, norm(y): 1.0132, norm:1.6174, tok/sec: 99227.38, flops:104.14, batch-reuse:1
@ 4064 train 4.2898 , allloss: 4.2913, dt: 1292.23ms, fracRes: 0.3623, norm(attn): 0.2197, norm(output): 0.5000, norm(x): 0.4609, norm(y): 1.0131, norm:1.5031, tok/sec: 101430.68, flops:106.45, batch-reuse:1
@ 4065 train 4.2947 , allloss: 4.2957, dt: 1301.65ms, fracRes: 0.3633, norm(attn): 0.2178, norm(output): 0.5000, norm(x): 0.4598, norm(y): 1.0132, norm:1.6618, tok/sec: 100696.93, flops:105.68, batch-reuse:1
@ 4066 train 4.1857 , allloss: 4.1878, dt: 1305.83ms, fracRes: 0.3653, norm(attn): 0.2168, norm(output): 0.5000, norm(x): 0.4612, norm(y): 1.0133, norm:1.6051, tok/sec: 100374.31, flops:105.34, batch-reuse:1
@ 4067 train 4.3421 , allloss: 4.3431, dt: 1313.77ms, fracRes: 0.3654, norm(attn): 0.2178, norm(output): 0.5000, norm(x): 0.4669, norm(y): 1.0133, norm:1.8546, tok/sec: 99767.62, flops:104.71, batch-reuse:1
@ 4068 train 4.2285 , allloss: 4.2296, dt: 1350.21ms, fracRes: 0.3627, norm(attn): 0.2197, norm(output): 0.5000, norm(x): 0.4604, norm(y): 1.0131, norm:1.8757, tok/sec: 97075.32, flops:101.88, batch-reuse:1
@ 4069 train 4.3654 , allloss: 4.3677, dt: 1353.89ms, fracRes: 0.3622, norm(attn): 0.2197, norm(output): 0.5000, norm(x): 0.4606, norm(y): 1.0132, norm:1.6409, tok/sec: 96811.38, flops:101.61, batch-reuse:1
@ 4070 train 4.3533 , allloss: 4.3542, dt: 1350.95ms, fracRes: 0.3629, norm(attn): 0.2217, norm(output): 0.4941, norm(x): 0.4557, norm(y): 1.0131, norm:1.8188, tok/sec: 97022.03, flops:101.83, batch-reuse:1
@ 4071 train 4.2563 , allloss: 4.2581, dt: 1342.76ms, fracRes: 0.3630, norm(attn): 0.2207, norm(output): 0.4922, norm(x): 0.4546, norm(y): 1.0131, norm:1.5840, tok/sec: 97613.57, flops:102.45, batch-reuse:1
@ 4072 train 4.2682 , allloss: 4.2699, dt: 1330.34ms, fracRes: 0.3634, norm(attn): 0.2246, norm(output): 0.4961, norm(x): 0.4596, norm(y): 1.0131, norm:1.8342, tok/sec: 98524.95, flops:103.40, batch-reuse:1
@ 4073 train 4.2728 , allloss: 4.2740, dt: 1310.89ms, fracRes: 0.3646, norm(attn): 0.2227, norm(output): 0.4980, norm(x): 0.4617, norm(y): 1.0133, norm:1.6111, tok/sec: 99987.13, flops:104.94, batch-reuse:1
@ 4074 train 4.3597 , allloss: 4.3611, dt: 1285.25ms, fracRes: 0.3641, norm(attn): 0.2217, norm(output): 0.4961, norm(x): 0.4596, norm(y): 1.0132, norm:1.6600, tok/sec: 101982.04, flops:107.03, batch-reuse:1
@ 4075 train 4.2610 , allloss: 4.2623, dt: 1315.42ms, fracRes: 0.3627, norm(attn): 0.2236, norm(output): 0.4980, norm(x): 0.4576, norm(y): 1.0131, norm:1.5315, tok/sec: 99642.74, flops:104.58, batch-reuse:1
@ 4076 train 4.4344 , allloss: 4.4361, dt: 1343.76ms, fracRes: 0.3630, norm(attn): 0.2266, norm(output): 0.4980, norm(x): 0.4639, norm(y): 1.0131, norm:1.6846, tok/sec: 97541.23, flops:102.37, batch-reuse:1
@ 4077 train 4.4458 , allloss: 4.4475, dt: 1340.97ms, fracRes: 0.3619, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4674, norm(y): 1.0131, norm:1.7085, tok/sec: 97744.41, flops:102.58, batch-reuse:1
@ 4078 train 4.4072 , allloss: 4.4103, dt: 1343.65ms, fracRes: 0.3627, norm(attn): 0.2217, norm(output): 0.5039, norm(x): 0.4668, norm(y): 1.0132, norm:1.4986, tok/sec: 97549.02, flops:102.38, batch-reuse:1
@ 4079 train 4.4618 , allloss: 4.4635, dt: 1313.17ms, fracRes: 0.3619, norm(attn): 0.2207, norm(output): 0.4980, norm(x): 0.4625, norm(y): 1.0132, norm:1.7538, tok/sec: 99813.29, flops:104.76, batch-reuse:1
@ 4080 train 4.6365 , allloss: 4.6375, dt: 1310.02ms, fracRes: 0.3611, norm(attn): 0.2236, norm(output): 0.4980, norm(x): 0.4626, norm(y): 1.0131, norm:1.6940, tok/sec: 100053.42, flops:105.01, batch-reuse:1
@ 4081 train 4.4664 , allloss: 4.4694, dt: 1309.12ms, fracRes: 0.3620, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4644, norm(y): 1.0131, norm:2.0882, tok/sec: 100122.52, flops:105.08, batch-reuse:1
@ 4082 train 4.4599 , allloss: 4.4622, dt: 1309.76ms, fracRes: 0.3613, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4642, norm(y): 1.0131, norm:1.6695, tok/sec: 100073.67, flops:105.03, batch-reuse:1
@ 4083 train 4.5351 , allloss: 4.5372, dt: 1315.03ms, fracRes: 0.3636, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4691, norm(y): 1.0132, norm:1.8141, tok/sec: 99672.48, flops:104.61, batch-reuse:1
@ 4084 train 4.5362 , allloss: 4.5401, dt: 1297.71ms, fracRes: 0.3628, norm(attn): 0.2188, norm(output): 0.5000, norm(x): 0.4623, norm(y): 1.0131, norm:1.5253, tok/sec: 101002.15, flops:106.00, batch-reuse:1
@ 4085 train 4.3753 , allloss: 4.3763, dt: 1279.94ms, fracRes: 0.3624, norm(attn): 0.2207, norm(output): 0.5039, norm(x): 0.4629, norm(y): 1.0131, norm:1.7524, tok/sec: 102404.89, flops:107.48, batch-reuse:1
@ 4086 train 4.4225 , allloss: 4.4243, dt: 1276.96ms, fracRes: 0.3612, norm(attn): 0.2236, norm(output): 0.5000, norm(x): 0.4635, norm(y): 1.0131, norm:1.5151, tok/sec: 102643.61, flops:107.73, batch-reuse:1
@ 4087 train 4.4529 , allloss: 4.4540, dt: 1298.90ms, fracRes: 0.3617, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4676, norm(y): 1.0132, norm:1.6102, tok/sec: 100909.81, flops:105.91, batch-reuse:1
@ 4088 train 4.4320 , allloss: 4.4338, dt: 1302.32ms, fracRes: 0.3611, norm(attn): 0.2207, norm(output): 0.5000, norm(x): 0.4622, norm(y): 1.0132, norm:1.6023, tok/sec: 100644.74, flops:105.63, batch-reuse:1
@ 4089 train 4.4284 , allloss: 4.4310, dt: 1317.38ms, fracRes: 0.3608, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4660, norm(y): 1.0131, norm:1.7353, tok/sec: 99494.17, flops:104.42, batch-reuse:1
@ 4090 train 4.5245 , allloss: 4.5300, dt: 1311.84ms, fracRes: 0.3623, norm(attn): 0.2207, norm(output): 0.5000, norm(x): 0.4640, norm(y): 1.0132, norm:1.3687, tok/sec: 99914.42, flops:104.86, batch-reuse:1
@ 4091 train 4.4945 , allloss: 4.4980, dt: 1326.71ms, fracRes: 0.3627, norm(attn): 0.2227, norm(output): 0.4961, norm(x): 0.4609, norm(y): 1.0132, norm:1.3669, tok/sec: 98794.41, flops:103.69, batch-reuse:1
@ 4092 train 4.4693 , allloss: 4.4709, dt: 1318.64ms, fracRes: 0.3653, norm(attn): 0.2236, norm(output): 0.5000, norm(x): 0.4620, norm(y): 1.0132, norm:1.7976, tok/sec: 99399.53, flops:104.32, batch-reuse:1
@ 4093 train 4.5691 , allloss: 4.5706, dt: 1332.09ms, fracRes: 0.3669, norm(attn): 0.2227, norm(output): 0.4980, norm(x): 0.4614, norm(y): 1.0131, norm:1.7702, tok/sec: 98395.94, flops:103.27, batch-reuse:1
@ 4094 train 4.3969 , allloss: 4.4001, dt: 1354.33ms, fracRes: 0.3657, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4645, norm(y): 1.0132, norm:1.7049, tok/sec: 96780.06, flops:101.57, batch-reuse:1
@ 4095 train 4.4167 , allloss: 4.4174, dt: 1280.56ms, fracRes: 0.3622, norm(attn): 0.2256, norm(output): 0.5000, norm(x): 0.4593, norm(y): 1.0132, norm:1.9444, tok/sec: 102355.56, flops:107.42, batch-reuse:1
@ 4096 train 4.4958 , allloss: 4.4984, dt: 1340.25ms, fracRes: 0.3625, norm(attn): 0.2217, norm(output): 0.5039, norm(x): 0.4637, norm(y): 1.0132, norm:1.8887, tok/sec: 97796.75, flops:102.64, batch-reuse:1
@ 4097 train 4.4742 , allloss: 4.4756, dt: 1344.45ms, fracRes: 0.3602, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4639, norm(y): 1.0132, norm:1.8531, tok/sec: 97491.24, flops:102.32, batch-reuse:1
@ 4098 train 4.3412 , allloss: 4.3430, dt: 1306.41ms, fracRes: 0.3606, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4659, norm(y): 1.0131, norm:1.8360, tok/sec: 100329.67, flops:105.30, batch-reuse:1
@ 4099 train 4.4974 , allloss: 4.4986, dt: 1292.12ms, fracRes: 0.3620, norm(attn): 0.2246, norm(output): 0.5000, norm(x): 0.4643, norm(y): 1.0131, norm:1.7904, tok/sec: 101439.68, flops:106.46, batch-reuse:1
@ 4100 train 4.5191 , allloss: 4.5202, dt: 1307.43ms, fracRes: 0.3621, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4662, norm(y): 1.0131, norm:1.7876, tok/sec: 100251.56, flops:105.22, batch-reuse:1
@ 4101 train 4.5368 , allloss: 4.5382, dt: 1300.95ms, fracRes: 0.3656, norm(attn): 0.2188, norm(output): 0.5078, norm(x): 0.4704, norm(y): 1.0132, norm:2.0072, tok/sec: 100751.32, flops:105.74, batch-reuse:1
@ 4102 train 4.4525 , allloss: 4.4577, dt: 1296.93ms, fracRes: 0.3629, norm(attn): 0.2207, norm(output): 0.5000, norm(x): 0.4639, norm(y): 1.0132, norm:1.8612, tok/sec: 101062.92, flops:106.07, batch-reuse:1
@ 4103 train 4.4882 , allloss: 4.4892, dt: 1311.47ms, fracRes: 0.3633, norm(attn): 0.2207, norm(output): 0.5000, norm(x): 0.4657, norm(y): 1.0131, norm:1.8103, tok/sec: 99942.66, flops:104.89, batch-reuse:1
@ 4104 train 4.4387 , allloss: 4.4406, dt: 1278.14ms, fracRes: 0.3627, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4625, norm(y): 1.0132, norm:1.6964, tok/sec: 102548.76, flops:107.63, batch-reuse:1
@ 4105 train 4.4753 , allloss: 4.4782, dt: 1290.75ms, fracRes: 0.3644, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4651, norm(y): 1.0132, norm:1.8879, tok/sec: 101547.55, flops:106.58, batch-reuse:1
@ 4106 train 4.5448 , allloss: 4.5464, dt: 1287.75ms, fracRes: 0.3636, norm(attn): 0.2217, norm(output): 0.5039, norm(x): 0.4681, norm(y): 1.0132, norm:1.6380, tok/sec: 101783.39, flops:106.82, batch-reuse:1
@ 4107 train 4.3678 , allloss: 4.3685, dt: 1317.19ms, fracRes: 0.3639, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4656, norm(y): 1.0132, norm:1.7856, tok/sec: 99508.63, flops:104.44, batch-reuse:1
@ 4108 train 4.4575 , allloss: 4.4585, dt: 1315.06ms, fracRes: 0.3634, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4638, norm(y): 1.0132, norm:1.4412, tok/sec: 99669.79, flops:104.61, batch-reuse:1
@ 4109 train 4.5556 , allloss: 4.5577, dt: 1316.43ms, fracRes: 0.3647, norm(attn): 0.2236, norm(output): 0.5000, norm(x): 0.4641, norm(y): 1.0131, norm:1.8212, tok/sec: 99566.33, flops:104.50, batch-reuse:1
@ 4110 train 4.4362 , allloss: 4.4372, dt: 1305.39ms, fracRes: 0.3653, norm(attn): 0.2236, norm(output): 0.5000, norm(x): 0.4642, norm(y): 1.0132, norm:1.7918, tok/sec: 100408.32, flops:105.38, batch-reuse:1
@ 4111 train 4.4496 , allloss: 4.4507, dt: 1316.93ms, fracRes: 0.3634, norm(attn): 0.2246, norm(output): 0.5000, norm(x): 0.4627, norm(y): 1.0131, norm:1.6911, tok/sec: 99528.50, flops:104.46, batch-reuse:1
@ 4112 train 4.4398 , allloss: 4.4419, dt: 1330.62ms, fracRes: 0.3646, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4652, norm(y): 1.0132, norm:1.7149, tok/sec: 98504.59, flops:103.38, batch-reuse:1
@ 4113 train 4.3978 , allloss: 4.3989, dt: 1327.20ms, fracRes: 0.3634, norm(attn): 0.2236, norm(output): 0.4980, norm(x): 0.4605, norm(y): 1.0132, norm:1.6302, tok/sec: 98758.28, flops:103.65, batch-reuse:1
@ 4114 train 4.5298 , allloss: 4.5307, dt: 1321.21ms, fracRes: 0.3634, norm(attn): 0.2266, norm(output): 0.4980, norm(x): 0.4658, norm(y): 1.0132, norm:1.5962, tok/sec: 99206.13, flops:104.12, batch-reuse:1
@ 4115 train 4.3903 , allloss: 4.3919, dt: 1302.35ms, fracRes: 0.3625, norm(attn): 0.2275, norm(output): 0.4961, norm(x): 0.4617, norm(y): 1.0131, norm:1.5688, tok/sec: 100642.66, flops:105.63, batch-reuse:1
@ 4116 train 4.5021 , allloss: 4.5044, dt: 1321.01ms, fracRes: 0.3609, norm(attn): 0.2246, norm(output): 0.4961, norm(x): 0.4606, norm(y): 1.0132, norm:1.7564, tok/sec: 99221.24, flops:104.13, batch-reuse:1
@ 4117 train 4.3737 , allloss: 4.3769, dt: 1301.29ms, fracRes: 0.3611, norm(attn): 0.2305, norm(output): 0.4980, norm(x): 0.4625, norm(y): 1.0131, norm:1.4478, tok/sec: 100724.52, flops:105.71, batch-reuse:1
@ 4118 train 4.5544 , allloss: 4.5566, dt: 1316.21ms, fracRes: 0.3609, norm(attn): 0.2285, norm(output): 0.5039, norm(x): 0.4644, norm(y): 1.0132, norm:1.7234, tok/sec: 99583.27, flops:104.51, batch-reuse:1
@ 4119 train 4.5194 , allloss: 4.5210, dt: 1341.00ms, fracRes: 0.3645, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4641, norm(y): 1.0131, norm:1.5635, tok/sec: 97742.10, flops:102.58, batch-reuse:1
@ 4120 train 4.4098 , allloss: 4.4114, dt: 1319.00ms, fracRes: 0.3638, norm(attn): 0.2266, norm(output): 0.5039, norm(x): 0.4623, norm(y): 1.0132, norm:1.4954, tok/sec: 99372.48, flops:104.29, batch-reuse:1
@ 4121 train 4.3997 , allloss: 4.4013, dt: 1343.30ms, fracRes: 0.3630, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4637, norm(y): 1.0132, norm:1.6721, tok/sec: 97574.50, flops:102.41, batch-reuse:1
@ 4122 train 4.5187 , allloss: 4.5196, dt: 1328.75ms, fracRes: 0.3657, norm(attn): 0.2227, norm(output): 0.5039, norm(x): 0.4663, norm(y): 1.0133, norm:1.6423, tok/sec: 98643.27, flops:103.53, batch-reuse:1
@ 4123 train 4.4671 , allloss: 4.4681, dt: 1322.50ms, fracRes: 0.3665, norm(attn): 0.2227, norm(output): 0.5039, norm(x): 0.4645, norm(y): 1.0133, norm:1.6329, tok/sec: 99109.42, flops:104.02, batch-reuse:1
@ 4124 train 4.4227 , allloss: 4.4238, dt: 1291.68ms, fracRes: 0.3660, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4664, norm(y): 1.0132, norm:1.7824, tok/sec: 101473.97, flops:106.50, batch-reuse:1
@ 4125 train 4.4376 , allloss: 4.4384, dt: 1300.61ms, fracRes: 0.3673, norm(attn): 0.2207, norm(output): 0.5000, norm(x): 0.4616, norm(y): 1.0133, norm:1.6124, tok/sec: 100777.17, flops:105.77, batch-reuse:1
@ 4126 train 4.3150 , allloss: 4.3160, dt: 1280.17ms, fracRes: 0.3663, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4626, norm(y): 1.0133, norm:1.5072, tok/sec: 102386.08, flops:107.46, batch-reuse:1
@ 4127 train 4.4693 , allloss: 4.4710, dt: 1281.86ms, fracRes: 0.3659, norm(attn): 0.2197, norm(output): 0.5039, norm(x): 0.4609, norm(y): 1.0132, norm:1.6121, tok/sec: 102251.56, flops:107.31, batch-reuse:1
@ 4128 train 4.3775 , allloss: 4.3784, dt: 1275.87ms, fracRes: 0.3651, norm(attn): 0.2197, norm(output): 0.5000, norm(x): 0.4593, norm(y): 1.0133, norm:1.4244, tok/sec: 102731.87, flops:107.82, batch-reuse:1
@ 4129 train 4.4192 , allloss: 4.4200, dt: 1280.22ms, fracRes: 0.3639, norm(attn): 0.2207, norm(output): 0.5000, norm(x): 0.4591, norm(y): 1.0132, norm:1.4228, tok/sec: 102382.06, flops:107.45, batch-reuse:1
@ 4130 train 4.5663 , allloss: 4.5681, dt: 1301.21ms, fracRes: 0.3642, norm(attn): 0.2197, norm(output): 0.5000, norm(x): 0.4646, norm(y): 1.0133, norm:1.5669, tok/sec: 100730.79, flops:105.72, batch-reuse:1
@ 4131 train 4.3771 , allloss: 4.3785, dt: 1287.37ms, fracRes: 0.3609, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4628, norm(y): 1.0131, norm:1.4797, tok/sec: 101813.70, flops:106.86, batch-reuse:1
@ 4132 train 4.3993 , allloss: 4.4001, dt: 1292.21ms, fracRes: 0.3625, norm(attn): 0.2256, norm(output): 0.5000, norm(x): 0.4635, norm(y): 1.0133, norm:1.5109, tok/sec: 101432.14, flops:106.45, batch-reuse:1
@ 4133 train 4.4194 , allloss: 4.4207, dt: 1305.75ms, fracRes: 0.3626, norm(attn): 0.2236, norm(output): 0.5039, norm(x): 0.4658, norm(y): 1.0133, norm:1.5626, tok/sec: 100380.36, flops:105.35, batch-reuse:1
@ 4134 train 4.5328 , allloss: 4.5340, dt: 1319.63ms, fracRes: 0.3610, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4651, norm(y): 1.0132, norm:1.4289, tok/sec: 99324.62, flops:104.24, batch-reuse:1
@ 4135 train 4.4412 , allloss: 4.4420, dt: 1336.93ms, fracRes: 0.3617, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4637, norm(y): 1.0132, norm:1.4300, tok/sec: 98039.59, flops:102.89, batch-reuse:1
@ 4136 train 4.4810 , allloss: 4.4820, dt: 1285.50ms, fracRes: 0.3640, norm(attn): 0.2246, norm(output): 0.5039, norm(x): 0.4659, norm(y): 1.0133, norm:1.7108, tok/sec: 101961.88, flops:107.01, batch-reuse:1
@ 4137 train 4.4470 , allloss: 4.4489, dt: 1295.98ms, fracRes: 0.3624, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4631, norm(y): 1.0132, norm:1.4748, tok/sec: 101137.50, flops:106.15, batch-reuse:1
@ 4138 train 4.5085 , allloss: 4.5098, dt: 1296.53ms, fracRes: 0.3613, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4636, norm(y): 1.0132, norm:1.5972, tok/sec: 101094.24, flops:106.10, batch-reuse:1
@ 4139 train 4.4622 , allloss: 4.4635, dt: 1306.09ms, fracRes: 0.3628, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4648, norm(y): 1.0133, norm:1.5912, tok/sec: 100354.36, flops:105.32, batch-reuse:1
@ 4140 train 4.6142 , allloss: 4.6151, dt: 1296.26ms, fracRes: 0.3612, norm(attn): 0.2246, norm(output): 0.5039, norm(x): 0.4631, norm(y): 1.0132, norm:1.5924, tok/sec: 101115.27, flops:106.12, batch-reuse:1
@ 4141 train 4.4331 , allloss: 4.4338, dt: 1310.79ms, fracRes: 0.3600, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4625, norm(y): 1.0131, norm:1.7197, tok/sec: 99994.69, flops:104.95, batch-reuse:1
@ 4142 train 4.4270 , allloss: 4.4291, dt: 1308.96ms, fracRes: 0.3607, norm(attn): 0.2295, norm(output): 0.5000, norm(x): 0.4616, norm(y): 1.0131, norm:1.7610, tok/sec: 100134.42, flops:105.09, batch-reuse:1
@ 4143 train 4.4639 , allloss: 4.4659, dt: 1333.57ms, fracRes: 0.3620, norm(attn): 0.2285, norm(output): 0.5039, norm(x): 0.4624, norm(y): 1.0132, norm:1.5903, tok/sec: 98286.48, flops:103.15, batch-reuse:1
@ 4144 train 4.4609 , allloss: 4.4622, dt: 1305.47ms, fracRes: 0.3633, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4617, norm(y): 1.0132, norm:1.7139, tok/sec: 100402.41, flops:105.37, batch-reuse:1
@ 4145 train 4.4104 , allloss: 4.4113, dt: 1285.82ms, fracRes: 0.3630, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4651, norm(y): 1.0132, norm:1.6914, tok/sec: 101936.85, flops:106.98, batch-reuse:1
@ 4146 train 4.4326 , allloss: 4.4338, dt: 1285.27ms, fracRes: 0.3624, norm(attn): 0.2314, norm(output): 0.5000, norm(x): 0.4656, norm(y): 1.0132, norm:1.6843, tok/sec: 101980.21, flops:107.03, batch-reuse:1
@ 4147 train 4.5958 , allloss: 4.5972, dt: 1297.24ms, fracRes: 0.3633, norm(attn): 0.2207, norm(output): 0.5039, norm(x): 0.4694, norm(y): 1.0133, norm:2.0443, tok/sec: 101038.90, flops:106.04, batch-reuse:1
@ 4148 train 4.4624 , allloss: 4.4659, dt: 1283.74ms, fracRes: 0.3626, norm(attn): 0.2246, norm(output): 0.5078, norm(x): 0.4722, norm(y): 1.0133, norm:2.2288, tok/sec: 102101.31, flops:107.16, batch-reuse:1
@ 4149 train 4.5207 , allloss: 4.5231, dt: 1294.02ms, fracRes: 0.3643, norm(attn): 0.2256, norm(output): 0.5000, norm(x): 0.4633, norm(y): 1.0134, norm:1.7007, tok/sec: 101290.80, flops:106.31, batch-reuse:1
@ 4150 train 4.3954 , allloss: 4.3959, dt: 1318.54ms, fracRes: 0.3610, norm(attn): 0.2305, norm(output): 0.5000, norm(x): 0.4578, norm(y): 1.0132, norm:1.9029, tok/sec: 99406.71, flops:104.33, batch-reuse:1
@ 4151 train 4.4280 , allloss: 4.4372, dt: 1347.65ms, fracRes: 0.3612, norm(attn): 0.2344, norm(output): 0.5000, norm(x): 0.4637, norm(y): 1.0131, norm:1.9642, tok/sec: 97259.74, flops:102.08, batch-reuse:1
@ 4152 train 4.3828 , allloss: 4.3838, dt: 1322.40ms, fracRes: 0.3656, norm(attn): 0.2305, norm(output): 0.5039, norm(x): 0.4630, norm(y): 1.0133, norm:1.7544, tok/sec: 99116.46, flops:104.02, batch-reuse:1
@ 4153 train 4.3891 , allloss: 4.3901, dt: 1300.40ms, fracRes: 0.3668, norm(attn): 0.2236, norm(output): 0.5000, norm(x): 0.4625, norm(y): 1.0134, norm:1.9742, tok/sec: 100793.47, flops:105.78, batch-reuse:1
@ 4154 train 4.4550 , allloss: 4.4558, dt: 1287.19ms, fracRes: 0.3659, norm(attn): 0.2256, norm(output): 0.5039, norm(x): 0.4668, norm(y): 1.0133, norm:1.7685, tok/sec: 101827.85, flops:106.87, batch-reuse:1
@ 4155 train 4.4468 , allloss: 4.4493, dt: 1311.96ms, fracRes: 0.3624, norm(attn): 0.2227, norm(output): 0.5039, norm(x): 0.4687, norm(y): 1.0132, norm:1.6478, tok/sec: 99905.54, flops:104.85, batch-reuse:1
@ 4156 train 4.4205 , allloss: 4.4213, dt: 1295.42ms, fracRes: 0.3589, norm(attn): 0.2295, norm(output): 0.5039, norm(x): 0.4674, norm(y): 1.0132, norm:1.3461, tok/sec: 101181.05, flops:106.19, batch-reuse:1
@ 4157 train 4.4250 , allloss: 4.4265, dt: 1317.72ms, fracRes: 0.3616, norm(attn): 0.2227, norm(output): 0.5039, norm(x): 0.4678, norm(y): 1.0133, norm:1.5002, tok/sec: 99468.42, flops:104.39, batch-reuse:1
@ 4158 train 4.3435 , allloss: 4.3446, dt: 1325.54ms, fracRes: 0.3621, norm(attn): 0.2256, norm(output): 0.5039, norm(x): 0.4683, norm(y): 1.0133, norm:1.6706, tok/sec: 98881.80, flops:103.78, batch-reuse:1
@ 4159 train 4.4838 , allloss: 4.4852, dt: 1300.69ms, fracRes: 0.3622, norm(attn): 0.2266, norm(output): 0.5039, norm(x): 0.4675, norm(y): 1.0133, norm:1.9030, tok/sec: 100771.45, flops:105.76, batch-reuse:1
@ 4160 train 4.4641 , allloss: 4.4652, dt: 1305.29ms, fracRes: 0.3648, norm(attn): 0.2256, norm(output): 0.5039, norm(x): 0.4660, norm(y): 1.0133, norm:1.5942, tok/sec: 100415.73, flops:105.39, batch-reuse:1
@ 4161 train 4.4036 , allloss: 4.4049, dt: 1307.14ms, fracRes: 0.3644, norm(attn): 0.2236, norm(output): 0.5000, norm(x): 0.4618, norm(y): 1.0133, norm:1.7823, tok/sec: 100274.18, flops:105.24, batch-reuse:1
@ 4162 train 4.4023 , allloss: 4.4040, dt: 1304.15ms, fracRes: 0.3650, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4626, norm(y): 1.0133, norm:1.6140, tok/sec: 100503.68, flops:105.48, batch-reuse:1
@ 4163 train 4.3568 , allloss: 4.3584, dt: 1295.49ms, fracRes: 0.3642, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4597, norm(y): 1.0133, norm:1.7100, tok/sec: 101175.54, flops:106.19, batch-reuse:1
@ 4164 train 4.4507 , allloss: 4.4543, dt: 1313.70ms, fracRes: 0.3640, norm(attn): 0.2256, norm(output): 0.5039, norm(x): 0.4629, norm(y): 1.0133, norm:1.7711, tok/sec: 99773.24, flops:104.71, batch-reuse:1
@ 4165 train 4.4486 , allloss: 4.4500, dt: 1279.86ms, fracRes: 0.3630, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4625, norm(y): 1.0133, norm:1.6668, tok/sec: 102411.26, flops:107.48, batch-reuse:1
@ 4166 train 4.4195 , allloss: 4.4222, dt: 1309.58ms, fracRes: 0.3647, norm(attn): 0.2275, norm(output): 0.5039, norm(x): 0.4621, norm(y): 1.0133, norm:1.3135, tok/sec: 100087.41, flops:105.04, batch-reuse:1
@ 4167 train 4.3609 , allloss: 4.3620, dt: 1297.67ms, fracRes: 0.3611, norm(attn): 0.2295, norm(output): 0.5000, norm(x): 0.4598, norm(y): 1.0133, norm:1.5543, tok/sec: 101005.64, flops:106.01, batch-reuse:1
@ 4168 train 4.3525 , allloss: 4.3565, dt: 1286.12ms, fracRes: 0.3604, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4636, norm(y): 1.0132, norm:1.4628, tok/sec: 101913.07, flops:106.96, batch-reuse:1
@ 4169 train 4.4201 , allloss: 4.4214, dt: 1303.82ms, fracRes: 0.3613, norm(attn): 0.2324, norm(output): 0.5000, norm(x): 0.4618, norm(y): 1.0132, norm:1.6343, tok/sec: 100528.93, flops:105.51, batch-reuse:1
@ 4170 train 4.3825 , allloss: 4.3834, dt: 1313.07ms, fracRes: 0.3621, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4627, norm(y): 1.0132, norm:1.6905, tok/sec: 99821.41, flops:104.76, batch-reuse:1
@ 4171 train 4.3433 , allloss: 4.3454, dt: 1334.53ms, fracRes: 0.3628, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4636, norm(y): 1.0133, norm:1.6640, tok/sec: 98215.83, flops:103.08, batch-reuse:1
@ 4172 train 4.3767 , allloss: 4.3779, dt: 1289.86ms, fracRes: 0.3629, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4615, norm(y): 1.0133, norm:1.3935, tok/sec: 101616.98, flops:106.65, batch-reuse:1
@ 4173 train 4.3334 , allloss: 4.3348, dt: 1295.09ms, fracRes: 0.3623, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4630, norm(y): 1.0133, norm:1.8138, tok/sec: 101207.17, flops:106.22, batch-reuse:1
@ 4174 train 4.3660 , allloss: 4.3670, dt: 1315.51ms, fracRes: 0.3628, norm(attn): 0.2256, norm(output): 0.5000, norm(x): 0.4632, norm(y): 1.0133, norm:1.3964, tok/sec: 99635.72, flops:104.57, batch-reuse:1
@ 4175 train 4.3325 , allloss: 4.3339, dt: 1345.42ms, fracRes: 0.3637, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4631, norm(y): 1.0133, norm:1.6031, tok/sec: 97420.58, flops:102.24, batch-reuse:1
@ 4176 train 4.3052 , allloss: 4.3062, dt: 1336.76ms, fracRes: 0.3648, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4635, norm(y): 1.0133, norm:1.5698, tok/sec: 98051.65, flops:102.91, batch-reuse:1
@ 4177 train 4.2708 , allloss: 4.2722, dt: 1315.89ms, fracRes: 0.3638, norm(attn): 0.2266, norm(output): 0.4980, norm(x): 0.4614, norm(y): 1.0133, norm:1.5941, tok/sec: 99606.83, flops:104.54, batch-reuse:1
@ 4178 train 4.3999 , allloss: 4.4012, dt: 1282.94ms, fracRes: 0.3637, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4652, norm(y): 1.0133, norm:1.6842, tok/sec: 102165.33, flops:107.22, batch-reuse:1
@ 4179 train 4.3975 , allloss: 4.3985, dt: 1296.57ms, fracRes: 0.3622, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4628, norm(y): 1.0133, norm:1.5866, tok/sec: 101091.24, flops:106.10, batch-reuse:1
@ 4180 train 4.3266 , allloss: 4.3275, dt: 1314.16ms, fracRes: 0.3627, norm(attn): 0.2295, norm(output): 0.5039, norm(x): 0.4651, norm(y): 1.0133, norm:1.4793, tok/sec: 99738.59, flops:104.68, batch-reuse:1
@ 4181 train 4.3657 , allloss: 4.3665, dt: 1317.46ms, fracRes: 0.3623, norm(attn): 0.2246, norm(output): 0.5000, norm(x): 0.4666, norm(y): 1.0134, norm:1.5928, tok/sec: 99488.10, flops:104.41, batch-reuse:1
@ 4182 train 4.3218 , allloss: 4.3227, dt: 1325.01ms, fracRes: 0.3619, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4647, norm(y): 1.0133, norm:1.4476, tok/sec: 98921.71, flops:103.82, batch-reuse:1
@ 4183 train 4.3311 , allloss: 4.3328, dt: 1309.66ms, fracRes: 0.3626, norm(attn): 0.2227, norm(output): 0.5039, norm(x): 0.4701, norm(y): 1.0133, norm:1.6899, tok/sec: 100080.70, flops:105.04, batch-reuse:1
@ 4184 train 4.3658 , allloss: 4.3678, dt: 1283.79ms, fracRes: 0.3602, norm(attn): 0.2275, norm(output): 0.5039, norm(x): 0.4657, norm(y): 1.0132, norm:1.6481, tok/sec: 102098.03, flops:107.15, batch-reuse:1
@ 4185 train 4.3871 , allloss: 4.3884, dt: 1303.52ms, fracRes: 0.3604, norm(attn): 0.2227, norm(output): 0.5000, norm(x): 0.4644, norm(y): 1.0133, norm:1.3997, tok/sec: 100552.68, flops:105.53, batch-reuse:1
@ 4186 train 4.4681 , allloss: 4.4695, dt: 1306.90ms, fracRes: 0.3639, norm(attn): 0.2227, norm(output): 0.5039, norm(x): 0.4672, norm(y): 1.0133, norm:1.6498, tok/sec: 100292.31, flops:105.26, batch-reuse:1
@ 4187 train 4.3780 , allloss: 4.3786, dt: 1343.29ms, fracRes: 0.3647, norm(attn): 0.2217, norm(output): 0.5039, norm(x): 0.4641, norm(y): 1.0133, norm:1.4663, tok/sec: 97575.30, flops:102.41, batch-reuse:1
@ 4188 train 4.3749 , allloss: 4.3803, dt: 1322.89ms, fracRes: 0.3633, norm(attn): 0.2236, norm(output): 0.5039, norm(x): 0.4669, norm(y): 1.0133, norm:1.5666, tok/sec: 99080.06, flops:103.99, batch-reuse:1
@ 4189 train 4.3261 , allloss: 4.3277, dt: 1340.60ms, fracRes: 0.3645, norm(attn): 0.2227, norm(output): 0.5039, norm(x): 0.4649, norm(y): 1.0133, norm:1.4966, tok/sec: 97771.27, flops:102.61, batch-reuse:1
@ 4190 train 4.2869 , allloss: 4.2880, dt: 1304.52ms, fracRes: 0.3651, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4656, norm(y): 1.0133, norm:1.5177, tok/sec: 100475.33, flops:105.45, batch-reuse:1
@ 4191 train 4.3328 , allloss: 4.3340, dt: 1333.75ms, fracRes: 0.3659, norm(attn): 0.2256, norm(output): 0.5039, norm(x): 0.4638, norm(y): 1.0133, norm:1.5880, tok/sec: 98273.17, flops:103.14, batch-reuse:1
@ 4192 train 4.3439 , allloss: 4.3454, dt: 1330.52ms, fracRes: 0.3643, norm(attn): 0.2275, norm(output): 0.5000, norm(x): 0.4614, norm(y): 1.0133, norm:1.6465, tok/sec: 98511.69, flops:103.39, batch-reuse:1
@ 4193 train 4.3096 , allloss: 4.3105, dt: 1301.49ms, fracRes: 0.3648, norm(attn): 0.2295, norm(output): 0.5000, norm(x): 0.4625, norm(y): 1.0132, norm:1.5009, tok/sec: 100708.91, flops:105.70, batch-reuse:1
@ 4194 train 4.2445 , allloss: 4.2455, dt: 1305.33ms, fracRes: 0.3663, norm(attn): 0.2285, norm(output): 0.5000, norm(x): 0.4669, norm(y): 1.0132, norm:1.8482, tok/sec: 100412.70, flops:105.39, batch-reuse:1
@ 4195 train 4.2817 , allloss: 4.2829, dt: 1335.23ms, fracRes: 0.3645, norm(attn): 0.2246, norm(output): 0.5000, norm(x): 0.4635, norm(y): 1.0133, norm:1.5825, tok/sec: 98164.65, flops:103.03, batch-reuse:1
@ 4196 train 4.4179 , allloss: 4.4213, dt: 1330.23ms, fracRes: 0.3641, norm(attn): 0.2227, norm(output): 0.5039, norm(x): 0.4666, norm(y): 1.0134, norm:1.3831, tok/sec: 98533.53, flops:103.41, batch-reuse:1
@ 4197 train 4.3256 , allloss: 4.3270, dt: 1333.78ms, fracRes: 0.3616, norm(attn): 0.2266, norm(output): 0.5039, norm(x): 0.4670, norm(y): 1.0133, norm:1.8046, tok/sec: 98271.44, flops:103.14, batch-reuse:1
@ 4198 train 4.3669 , allloss: 4.3706, dt: 1314.83ms, fracRes: 0.3612, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4653, norm(y): 1.0133, norm:1.4435, tok/sec: 99687.32, flops:104.62, batch-reuse:1
@ 4199 train 4.4452 , allloss: 4.4466, dt: 1288.58ms, fracRes: 0.3617, norm(attn): 0.2295, norm(output): 0.5000, norm(x): 0.4643, norm(y): 1.0133, norm:1.8625, tok/sec: 101718.12, flops:106.76, batch-reuse:1
@ 4200 train 4.4628 , allloss: 4.4640, dt: 1289.24ms, fracRes: 0.3640, norm(attn): 0.2246, norm(output): 0.5078, norm(x): 0.4681, norm(y): 1.0133, norm:1.6358, tok/sec: 101665.94, flops:106.70, batch-reuse:1
@ 4201 train 4.3500 , allloss: 4.3516, dt: 1280.52ms, fracRes: 0.3604, norm(attn): 0.2295, norm(output): 0.5039, norm(x): 0.4658, norm(y): 1.0132, norm:1.7419, tok/sec: 102358.72, flops:107.43, batch-reuse:1
@ 4202 train 4.3458 , allloss: 4.3473, dt: 1326.08ms, fracRes: 0.3620, norm(attn): 0.2266, norm(output): 0.5039, norm(x): 0.4669, norm(y): 1.0134, norm:1.5558, tok/sec: 98841.48, flops:103.74, batch-reuse:1
@ 4203 train 4.1503 , allloss: 4.1524, dt: 1281.92ms, fracRes: 0.3618, norm(attn): 0.2344, norm(output): 0.5039, norm(x): 0.4709, norm(y): 1.0133, norm:1.8007, tok/sec: 102246.46, flops:107.31, batch-reuse:1
@ 4204 train 4.3895 , allloss: 4.3915, dt: 1311.56ms, fracRes: 0.3636, norm(attn): 0.2275, norm(output): 0.5039, norm(x): 0.4667, norm(y): 1.0134, norm:1.5952, tok/sec: 99936.09, flops:104.88, batch-reuse:1
@ 4205 train 4.2884 , allloss: 4.2899, dt: 1276.36ms, fracRes: 0.3614, norm(attn): 0.2305, norm(output): 0.5039, norm(x): 0.4659, norm(y): 1.0133, norm:1.6450, tok/sec: 102692.05, flops:107.78, batch-reuse:1
@ 4206 train 4.3700 , allloss: 4.3714, dt: 1288.99ms, fracRes: 0.3612, norm(attn): 0.2266, norm(output): 0.5039, norm(x): 0.4654, norm(y): 1.0133, norm:1.4802, tok/sec: 101686.08, flops:106.72, batch-reuse:1
@ 4207 train 4.4207 , allloss: 4.4226, dt: 1310.98ms, fracRes: 0.3636, norm(attn): 0.2256, norm(output): 0.5078, norm(x): 0.4699, norm(y): 1.0133, norm:1.7702, tok/sec: 99979.96, flops:104.93, batch-reuse:1
@ 4208 train 4.3231 , allloss: 4.3252, dt: 1308.57ms, fracRes: 0.3643, norm(attn): 0.2266, norm(output): 0.5039, norm(x): 0.4683, norm(y): 1.0133, norm:1.5758, tok/sec: 100164.14, flops:105.12, batch-reuse:1
@ 4209 train 4.4130 , allloss: 4.4143, dt: 1318.87ms, fracRes: 0.3636, norm(attn): 0.2295, norm(output): 0.5000, norm(x): 0.4648, norm(y): 1.0132, norm:1.4532, tok/sec: 99382.04, flops:104.30, batch-reuse:1
@ 4210 train 4.4859 , allloss: 4.4876, dt: 1311.67ms, fracRes: 0.3623, norm(attn): 0.2324, norm(output): 0.5039, norm(x): 0.4636, norm(y): 1.0132, norm:1.6156, tok/sec: 99927.33, flops:104.88, batch-reuse:1
@ 4211 train 4.2750 , allloss: 4.2802, dt: 1314.79ms, fracRes: 0.3640, norm(attn): 0.2314, norm(output): 0.5000, norm(x): 0.4627, norm(y): 1.0132, norm:1.6516, tok/sec: 99690.35, flops:104.63, batch-reuse:1
@ 4212 train 4.3064 , allloss: 4.3082, dt: 1286.96ms, fracRes: 0.3651, norm(attn): 0.2305, norm(output): 0.5000, norm(x): 0.4609, norm(y): 1.0133, norm:1.6444, tok/sec: 101845.97, flops:106.89, batch-reuse:1
@ 4213 train 4.1884 , allloss: 4.1899, dt: 1299.79ms, fracRes: 0.3642, norm(attn): 0.2314, norm(output): 0.5000, norm(x): 0.4641, norm(y): 1.0132, norm:1.3218, tok/sec: 100840.86, flops:105.83, batch-reuse:1
@ 4214 train 4.2636 , allloss: 4.2648, dt: 1296.51ms, fracRes: 0.3655, norm(attn): 0.2266, norm(output): 0.5000, norm(x): 0.4658, norm(y): 1.0133, norm:1.7133, tok/sec: 101095.93, flops:106.10, batch-reuse:1
@ 4215 train 4.2599 , allloss: 4.2618, dt: 1284.24ms, fracRes: 0.3658, norm(attn): 0.2246, norm(output): 0.5000, norm(x): 0.4650, norm(y): 1.0134, norm:1.5257, tok/sec: 102061.58, flops:107.12, batch-reuse:1
@ 4216 train 4.2386 , allloss: 4.2400, dt: 1319.43ms, fracRes: 0.3653, norm(attn): 0.2236, norm(output): 0.5039, norm(x): 0.4666, norm(y): 1.0133, norm:1.5159, tok/sec: 99339.97, flops:104.26, batch-reuse:1
@ 4217 train 4.2639 , allloss: 4.2679, dt: 1288.99ms, fracRes: 0.3634, norm(attn): 0.2236, norm(output): 0.5039, norm(x): 0.4667, norm(y): 1.0133, norm:1.3398, tok/sec: 101686.02, flops:106.72, batch-reuse:1
@ 4218 train 4.2294 , allloss: 4.2309, dt: 1311.51ms, fracRes: 0.3639, norm(attn): 0.2266, norm(output): 0.5039, norm(x): 0.4679, norm(y): 1.0133, norm:1.6176, tok/sec: 99940.07, flops:104.89, batch-reuse:1
@ 4219 train 4.2948 , allloss: 4.2969, dt: 1328.03ms, fracRes: 0.3635, norm(attn): 0.2285, norm(output): 0.5039, norm(x): 0.4669, norm(y): 1.0133, norm:1.6896, tok/sec: 98696.93, flops:103.58, batch-reuse:1
@ 4220 train 4.2178 , allloss: 4.2218, dt: 1312.24ms, fracRes: 0.3638, norm(attn): 0.2314, norm(output): 0.5039, norm(x): 0.4668, norm(y): 1.0133, norm:1.4168, tok/sec: 99883.83, flops:104.83, batch-reuse:1
@ 4221 train 4.3652 , allloss: 4.3743, dt: 1310.31ms, fracRes: 0.3625, norm(attn): 0.2314, norm(output): 0.5000, norm(x): 0.4643, norm(y): 1.0133, norm:1.7926, tok/sec: 100031.54, flops:104.98, batch-reuse:1
@ 4222 train 4.1969 , allloss: 4.1984, dt: 1324.15ms, fracRes: 0.3622, norm(attn): 0.2324, norm(output): 0.5000, norm(x): 0.4622, norm(y): 1.0132, norm:1.3646, tok/sec: 98985.40, flops:103.89, batch-reuse:1
@ 4223 train 4.2880 , allloss: 4.2893, dt: 1313.77ms, fracRes: 0.3675, norm(attn): 0.2295, norm(output): 0.5039, norm(x): 0.4643, norm(y): 1.0132, norm:1.8593, tok/sec: 99767.86, flops:104.71, batch-reuse:1
@ 4224 train 4.1823 , allloss: 4.1837, dt: 1311.53ms, fracRes: 0.3628, norm(attn): 0.2344, norm(output): 0.5000, norm(x): 0.4642, norm(y): 1.0132, norm:1.7535, tok/sec: 99938.43, flops:104.89, batch-reuse:1
@ 4225 train 4.3153 , allloss: 4.3173, dt: 1294.68ms, fracRes: 0.3645, norm(attn): 0.2275, norm(output): 0.5039, norm(x): 0.4654, norm(y): 1.0132, norm:1.4944, tok/sec: 101239.30, flops:106.25, batch-reuse:1
@ 4226 train 4.3317 , allloss: 4.3326, dt: 1279.43ms, fracRes: 0.3664, norm(attn): 0.2266, norm(output): 0.5039, norm(x): 0.4696, norm(y): 1.0133, norm:1.6195, tok/sec: 102445.25, flops:107.52, batch-reuse:1
@ 4227 train 4.2758 , allloss: 4.2770, dt: 1284.25ms, fracRes: 0.3639, norm(attn): 0.2285, norm(output): 0.5078, norm(x): 0.4676, norm(y): 1.0133, norm:1.6033, tok/sec: 102060.88, flops:107.11, batch-reuse:1
@ 4228 train 4.4833 , allloss: 4.4842, dt: 1310.45ms, fracRes: 0.3625, norm(attn): 0.2285, norm(output): 0.5039, norm(x): 0.4720, norm(y): 1.0133, norm:2.0907, tok/sec: 100020.67, flops:104.97, batch-reuse:1
@ 4229 train 4.3554 , allloss: 4.3568, dt: 1292.71ms, fracRes: 0.3638, norm(attn): 0.2266, norm(output): 0.5078, norm(x): 0.4736, norm(y): 1.0133, norm:1.8167, tok/sec: 101392.87, flops:106.41, batch-reuse:1
@ 4230 train 4.2617 , allloss: 4.2627, dt: 1296.17ms, fracRes: 0.3618, norm(attn): 0.2314, norm(output): 0.5000, norm(x): 0.4656, norm(y): 1.0133, norm:1.6225, tok/sec: 101122.54, flops:106.13, batch-reuse:1
@ 4231 train 4.2575 , allloss: 4.2586, dt: 1320.09ms, fracRes: 0.3617, norm(attn): 0.2314, norm(output): 0.5078, norm(x): 0.4691, norm(y): 1.0133, norm:1.7480, tok/sec: 99290.11, flops:104.21, batch-reuse:1
@ 4232 train 4.3227 , allloss: 4.3239, dt: 1293.24ms, fracRes: 0.3617, norm(attn): 0.2344, norm(output): 0.5039, norm(x): 0.4682, norm(y): 1.0133, norm:1.6047, tok/sec: 101351.53, flops:106.37, batch-reuse:1
@ 4233 train 4.2919 , allloss: 4.2938, dt: 1287.08ms, fracRes: 0.3641, norm(attn): 0.2285, norm(output): 0.5039, norm(x): 0.4693, norm(y): 1.0134, norm:1.8521, tok/sec: 101837.01, flops:106.88, batch-reuse:1
@ 4234 train 4.2964 , allloss: 4.2976, dt: 1311.04ms, fracRes: 0.3658, norm(attn): 0.2256, norm(output): 0.5039, norm(x): 0.4676, norm(y): 1.0134, norm:1.6702, tok/sec: 99975.67, flops:104.93, batch-reuse:1
@ 4235 train 4.2976 , allloss: 4.2983, dt: 1309.80ms, fracRes: 0.3626, norm(attn): 0.2314, norm(output): 0.5039, norm(x): 0.4664, norm(y): 1.0133, norm:1.8293, tok/sec: 100069.86, flops:105.03, batch-reuse:1
@ 4236 train 4.4393 , allloss: 4.4401, dt: 1291.92ms, fracRes: 0.3659, norm(attn): 0.2256, norm(output): 0.5117, norm(x): 0.4735, norm(y): 1.0133, norm:2.0098, tok/sec: 101455.20, flops:106.48, batch-reuse:1
@ 4237 train 4.2814 , allloss: 4.2822, dt: 1287.93ms, fracRes: 0.3675, norm(attn): 0.2266, norm(output): 0.5078, norm(x): 0.4717, norm(y): 1.0134, norm:1.8843, tok/sec: 101769.37, flops:106.81, batch-reuse:1
@ 4238 train 4.2876 , allloss: 4.2889, dt: 1296.10ms, fracRes: 0.3656, norm(attn): 0.2256, norm(output): 0.5117, norm(x): 0.4716, norm(y): 1.0133, norm:1.7511, tok/sec: 101128.06, flops:106.14, batch-reuse:1
@ 4239 train 4.2519 , allloss: 4.2543, dt: 1313.57ms, fracRes: 0.3639, norm(attn): 0.2295, norm(output): 0.5078, norm(x): 0.4675, norm(y): 1.0132, norm:1.3715, tok/sec: 99783.16, flops:104.72, batch-reuse:1
@ 4240 train 4.2902 , allloss: 4.2912, dt: 1331.20ms, fracRes: 0.3656, norm(attn): 0.2227, norm(output): 0.5156, norm(x): 0.4711, norm(y): 1.0134, norm:1.7241, tok/sec: 98461.79, flops:103.34, batch-reuse:1
@ 4241 train 4.3015 , allloss: 4.3028, dt: 1329.52ms, fracRes: 0.3659, norm(attn): 0.2275, norm(output): 0.5117, norm(x): 0.4686, norm(y): 1.0134, norm:1.8106, tok/sec: 98586.29, flops:103.47, batch-reuse:1
@ 4242 train 4.3919 , allloss: 4.3930, dt: 1294.14ms, fracRes: 0.3627, norm(attn): 0.2256, norm(output): 0.5000, norm(x): 0.4649, norm(y): 1.0133, norm:1.7536, tok/sec: 101281.41, flops:106.30, batch-reuse:1
@ 4243 train 4.2528 , allloss: 4.2540, dt: 1308.62ms, fracRes: 0.3653, norm(attn): 0.2246, norm(output): 0.5039, norm(x): 0.4657, norm(y): 1.0133, norm:1.6798, tok/sec: 100160.09, flops:105.12, batch-reuse:1
@ 4244 train 4.1126 , allloss: 4.1149, dt: 1326.62ms, fracRes: 0.3654, norm(attn): 0.2236, norm(output): 0.5156, norm(x): 0.4676, norm(y): 1.0133, norm:1.6756, tok/sec: 98801.12, flops:103.69, batch-reuse:1
@ 4245 train 4.2167 , allloss: 4.2180, dt: 1290.65ms, fracRes: 0.3649, norm(attn): 0.2246, norm(output): 0.5039, norm(x): 0.4629, norm(y): 1.0133, norm:1.5248, tok/sec: 101554.87, flops:106.58, batch-reuse:1
@ 4246 train 4.5456 , allloss: 4.5467, dt: 1299.22ms, fracRes: 0.3688, norm(attn): 0.2178, norm(output): 0.5078, norm(x): 0.4649, norm(y): 1.0133, norm:2.2781, tok/sec: 100885.01, flops:105.88, batch-reuse:1
@ 4247 train 4.3224 , allloss: 4.3234, dt: 1312.60ms, fracRes: 0.3675, norm(attn): 0.2227, norm(output): 0.5156, norm(x): 0.4709, norm(y): 1.0133, norm:2.2036, tok/sec: 99856.47, flops:104.80, batch-reuse:1
@ 4248 train 4.3278 , allloss: 4.3291, dt: 1313.15ms, fracRes: 0.3669, norm(attn): 0.2227, norm(output): 0.5078, norm(x): 0.4696, norm(y): 1.0133, norm:1.8109, tok/sec: 99814.86, flops:104.76, batch-reuse:1
@ 4249 train 4.3084 , allloss: 4.3100, dt: 1283.99ms, fracRes: 0.3632, norm(attn): 0.2256, norm(output): 0.5039, norm(x): 0.4644, norm(y): 1.0134, norm:1.5364, tok/sec: 102081.46, flops:107.14, batch-reuse:1
@ 4250 train 4.2108 , allloss: 4.2122, dt: 1310.47ms, fracRes: 0.3630, norm(attn): 0.2285, norm(output): 0.5039, norm(x): 0.4678, norm(y): 1.0133, norm:1.7097, tok/sec: 100019.34, flops:104.97, batch-reuse:1
@ 4251 train 4.3107 , allloss: 4.3124, dt: 1326.14ms, fracRes: 0.3622, norm(attn): 0.2246, norm(output): 0.5156, norm(x): 0.4737, norm(y): 1.0133, norm:1.8197, tok/sec: 98836.95, flops:103.73, batch-reuse:1
@ 4252 train 4.1604 , allloss: 4.1623, dt: 1325.81ms, fracRes: 0.3621, norm(attn): 0.2275, norm(output): 0.5156, norm(x): 0.4713, norm(y): 1.0133, norm:1.6810, tok/sec: 98862.17, flops:103.76, batch-reuse:1
@ 4253 train 4.2244 , allloss: 4.2262, dt: 1335.76ms, fracRes: 0.3626, norm(attn): 0.2275, norm(output): 0.5117, norm(x): 0.4701, norm(y): 1.0133, norm:1.4987, tok/sec: 98125.07, flops:102.98, batch-reuse:1
@ 4254 train 4.2692 , allloss: 4.2702, dt: 1332.68ms, fracRes: 0.3638, norm(attn): 0.2275, norm(output): 0.5156, norm(x): 0.4757, norm(y): 1.0133, norm:1.5783, tok/sec: 98352.51, flops:103.22, batch-reuse:1
@ 4255 train 4.2509 , allloss: 4.2518, dt: 1301.19ms, fracRes: 0.3627, norm(attn): 0.2285, norm(output): 0.5117, norm(x): 0.4724, norm(y): 1.0133, norm:1.5010, tok/sec: 100732.10, flops:105.72, batch-reuse:1
@ 4256 train 4.1487 , allloss: 4.1499, dt: 1286.56ms, fracRes: 0.3650, norm(attn): 0.2285, norm(output): 0.5117, norm(x): 0.4720, norm(y): 1.0133, norm:1.6104, tok/sec: 101878.08, flops:106.92, batch-reuse:1
@ 4257 train 4.1883 , allloss: 4.1891, dt: 1309.88ms, fracRes: 0.3632, norm(attn): 0.2334, norm(output): 0.5039, norm(x): 0.4663, norm(y): 1.0132, norm:1.7788, tok/sec: 100063.94, flops:105.02, batch-reuse:1
@ 4258 train 4.3668 , allloss: 4.3681, dt: 1309.36ms, fracRes: 0.3643, norm(attn): 0.2295, norm(output): 0.5039, norm(x): 0.4693, norm(y): 1.0133, norm:1.7145, tok/sec: 100104.21, flops:105.06, batch-reuse:1
@ 4259 train 4.3219 , allloss: 4.3235, dt: 1297.07ms, fracRes: 0.3652, norm(attn): 0.2285, norm(output): 0.5039, norm(x): 0.4679, norm(y): 1.0134, norm:1.5953, tok/sec: 101052.48, flops:106.06, batch-reuse:1
@ 4260 train 4.4003 , allloss: 4.4010, dt: 1291.73ms, fracRes: 0.3645, norm(attn): 0.2334, norm(output): 0.5039, norm(x): 0.4683, norm(y): 1.0133, norm:1.4822, tok/sec: 101469.81, flops:106.49, batch-reuse:1
@ 4261 train 4.5319 , allloss: 4.5327, dt: 1289.55ms, fracRes: 0.3641, norm(attn): 0.2324, norm(output): 0.5039, norm(x): 0.4694, norm(y): 1.0132, norm:1.5078, tok/sec: 101641.75, flops:106.67, batch-reuse:1
@ 4262 train 4.3985 , allloss: 4.3991, dt: 1298.75ms, fracRes: 0.3662, norm(attn): 0.2295, norm(output): 0.5039, norm(x): 0.4717, norm(y): 1.0133, norm:1.4407, tok/sec: 100922.01, flops:105.92, batch-reuse:1
@ 4263 train 4.4571 , allloss: 4.4581, dt: 1303.44ms, fracRes: 0.3697, norm(attn): 0.2207, norm(output): 0.5156, norm(x): 0.4728, norm(y): 1.0134, norm:1.7354, tok/sec: 100558.53, flops:105.54, batch-reuse:1
@ 4264 train 4.5934 , allloss: 4.5945, dt: 1291.64ms, fracRes: 0.3658, norm(attn): 0.2275, norm(output): 0.5039, norm(x): 0.4737, norm(y): 1.0133, norm:1.6092, tok/sec: 101476.96, flops:106.50, batch-reuse:1
@ 4265 train 4.5458 , allloss: 4.5466, dt: 1319.57ms, fracRes: 0.3675, norm(attn): 0.2275, norm(output): 0.5117, norm(x): 0.4748, norm(y): 1.0133, norm:1.7670, tok/sec: 99329.63, flops:104.25, batch-reuse:1
@ 4266 train 4.4122 , allloss: 4.4135, dt: 1337.03ms, fracRes: 0.3645, norm(attn): 0.2266, norm(output): 0.5078, norm(x): 0.4704, norm(y): 1.0132, norm:1.8605, tok/sec: 98031.88, flops:102.89, batch-reuse:1
@ 4267 train 4.4926 , allloss: 4.4936, dt: 1309.03ms, fracRes: 0.3670, norm(attn): 0.2217, norm(output): 0.5117, norm(x): 0.4752, norm(y): 1.0134, norm:1.6696, tok/sec: 100128.81, flops:105.09, batch-reuse:1
@ 4268 train 4.4977 , allloss: 4.4986, dt: 1336.89ms, fracRes: 0.3666, norm(attn): 0.2266, norm(output): 0.5156, norm(x): 0.4753, norm(y): 1.0133, norm:1.6805, tok/sec: 98042.21, flops:102.90, batch-reuse:1
@ 4269 train 4.5147 , allloss: 4.5165, dt: 1317.87ms, fracRes: 0.3652, norm(attn): 0.2266, norm(output): 0.5117, norm(x): 0.4745, norm(y): 1.0132, norm:1.8509, tok/sec: 99457.65, flops:104.38, batch-reuse:1
@ 4270 train 4.6173 , allloss: 4.6183, dt: 1336.98ms, fracRes: 0.3582, norm(attn): 0.2344, norm(output): 0.5000, norm(x): 0.4652, norm(y): 1.0132, norm:2.5102, tok/sec: 98036.23, flops:102.89, batch-reuse:1
@ 4271 train 4.3852 , allloss: 4.3860, dt: 1328.09ms, fracRes: 0.3674, norm(attn): 0.2285, norm(output): 0.5078, norm(x): 0.4716, norm(y): 1.0132, norm:2.4016, tok/sec: 98692.27, flops:103.58, batch-reuse:1
@ 4272 train 4.5098 , allloss: 4.5107, dt: 1283.41ms, fracRes: 0.3671, norm(attn): 0.2295, norm(output): 0.5156, norm(x): 0.4753, norm(y): 1.0133, norm:1.7399, tok/sec: 102128.24, flops:107.19, batch-reuse:1
@ 4273 train 4.5078 , allloss: 4.5094, dt: 1310.51ms, fracRes: 0.3663, norm(attn): 0.2266, norm(output): 0.5156, norm(x): 0.4755, norm(y): 1.0133, norm:2.2016, tok/sec: 100016.12, flops:104.97, batch-reuse:1
@ 4274 train 4.4752 , allloss: 4.4768, dt: 1315.34ms, fracRes: 0.3649, norm(attn): 0.2275, norm(output): 0.5234, norm(x): 0.4746, norm(y): 1.0133, norm:2.1564, tok/sec: 99648.47, flops:104.58, batch-reuse:1
@ 4275 train 4.3858 , allloss: 4.3890, dt: 1316.67ms, fracRes: 0.3645, norm(attn): 0.2295, norm(output): 0.5156, norm(x): 0.4745, norm(y): 1.0134, norm:1.7943, tok/sec: 99548.31, flops:104.48, batch-reuse:1
@ 4276 train 4.4073 , allloss: 4.4089, dt: 1286.33ms, fracRes: 0.3672, norm(attn): 0.2295, norm(output): 0.5195, norm(x): 0.4772, norm(y): 1.0134, norm:1.8226, tok/sec: 101896.26, flops:106.94, batch-reuse:1
@ 4277 train 4.4761 , allloss: 4.4773, dt: 1293.90ms, fracRes: 0.3638, norm(attn): 0.2305, norm(output): 0.5195, norm(x): 0.4766, norm(y): 1.0133, norm:1.6722, tok/sec: 101299.98, flops:106.32, batch-reuse:1
@ 4278 train 4.4584 , allloss: 4.4593, dt: 1296.51ms, fracRes: 0.3654, norm(attn): 0.2285, norm(output): 0.5195, norm(x): 0.4744, norm(y): 1.0133, norm:1.7043, tok/sec: 101095.93, flops:106.10, batch-reuse:1
@ 4279 train 4.4616 , allloss: 4.4626, dt: 1303.54ms, fracRes: 0.3656, norm(attn): 0.2324, norm(output): 0.5156, norm(x): 0.4720, norm(y): 1.0133, norm:1.5520, tok/sec: 100550.62, flops:105.53, batch-reuse:1
@ 4280 train 4.3290 , allloss: 4.3320, dt: 1330.12ms, fracRes: 0.3692, norm(attn): 0.2275, norm(output): 0.5195, norm(x): 0.4734, norm(y): 1.0134, norm:1.6715, tok/sec: 98541.66, flops:103.42, batch-reuse:1
@ 4281 train 4.4398 , allloss: 4.4414, dt: 1300.47ms, fracRes: 0.3678, norm(attn): 0.2314, norm(output): 0.5117, norm(x): 0.4707, norm(y): 1.0133, norm:1.6817, tok/sec: 100787.82, flops:105.78, batch-reuse:1
@ 4282 train 4.4574 , allloss: 4.4587, dt: 1293.10ms, fracRes: 0.3678, norm(attn): 0.2314, norm(output): 0.5156, norm(x): 0.4697, norm(y): 1.0133, norm:1.6461, tok/sec: 101362.50, flops:106.38, batch-reuse:1
@ 4283 train 4.5482 , allloss: 4.5492, dt: 1284.77ms, fracRes: 0.3674, norm(attn): 0.2285, norm(output): 0.5117, norm(x): 0.4707, norm(y): 1.0133, norm:1.6549, tok/sec: 102019.65, flops:107.07, batch-reuse:1
@ 4284 train 4.4508 , allloss: 4.4517, dt: 1317.56ms, fracRes: 0.3670, norm(attn): 0.2236, norm(output): 0.5117, norm(x): 0.4721, norm(y): 1.0134, norm:1.6165, tok/sec: 99481.10, flops:104.41, batch-reuse:1
@ 4285 train 4.3762 , allloss: 4.3774, dt: 1350.25ms, fracRes: 0.3663, norm(attn): 0.2275, norm(output): 0.5195, norm(x): 0.4750, norm(y): 1.0134, norm:1.6056, tok/sec: 97072.56, flops:101.88, batch-reuse:1
@ 4286 train 4.4794 , allloss: 4.4810, dt: 1320.77ms, fracRes: 0.3651, norm(attn): 0.2266, norm(output): 0.5117, norm(x): 0.4739, norm(y): 1.0133, norm:1.7184, tok/sec: 99239.31, flops:104.15, batch-reuse:1
@ 4287 train 4.4092 , allloss: 4.4104, dt: 1300.35ms, fracRes: 0.3652, norm(attn): 0.2285, norm(output): 0.5156, norm(x): 0.4757, norm(y): 1.0133, norm:1.5099, tok/sec: 100797.46, flops:105.79, batch-reuse:1
@ 4288 train 4.3941 , allloss: 4.3953, dt: 1291.35ms, fracRes: 0.3650, norm(attn): 0.2305, norm(output): 0.5156, norm(x): 0.4746, norm(y): 1.0134, norm:1.4361, tok/sec: 101500.25, flops:106.53, batch-reuse:1
@ 4289 train 4.4872 , allloss: 4.4881, dt: 1310.53ms, fracRes: 0.3647, norm(attn): 0.2295, norm(output): 0.5117, norm(x): 0.4739, norm(y): 1.0135, norm:1.6852, tok/sec: 100014.48, flops:104.97, batch-reuse:1
@ 4290 train 4.3888 , allloss: 4.3894, dt: 1313.22ms, fracRes: 0.3656, norm(attn): 0.2305, norm(output): 0.5117, norm(x): 0.4730, norm(y): 1.0134, norm:1.5250, tok/sec: 99809.52, flops:104.75, batch-reuse:1
@ 4291 train 4.4221 , allloss: 4.4238, dt: 1308.55ms, fracRes: 0.3668, norm(attn): 0.2305, norm(output): 0.5156, norm(x): 0.4754, norm(y): 1.0133, norm:1.5563, tok/sec: 100166.21, flops:105.13, batch-reuse:1
@ 4292 train 4.5304 , allloss: 4.5323, dt: 1304.52ms, fracRes: 0.3671, norm(attn): 0.2275, norm(output): 0.5156, norm(x): 0.4727, norm(y): 1.0134, norm:1.7030, tok/sec: 100474.97, flops:105.45, batch-reuse:1
@ 4293 train 4.4154 , allloss: 4.4173, dt: 1331.73ms, fracRes: 0.3649, norm(attn): 0.2275, norm(output): 0.5117, norm(x): 0.4720, norm(y): 1.0135, norm:1.4974, tok/sec: 98422.63, flops:103.30, batch-reuse:1
@ 4294 train 4.3028 , allloss: 4.3044, dt: 1314.10ms, fracRes: 0.3643, norm(attn): 0.2295, norm(output): 0.5156, norm(x): 0.4759, norm(y): 1.0135, norm:1.7519, tok/sec: 99743.10, flops:104.68, batch-reuse:1
@ 4295 train 4.5261 , allloss: 4.5280, dt: 1281.32ms, fracRes: 0.3640, norm(attn): 0.2275, norm(output): 0.5117, norm(x): 0.4771, norm(y): 1.0134, norm:1.6784, tok/sec: 102294.16, flops:107.36, batch-reuse:1
@ 4296 train 4.4228 , allloss: 4.4237, dt: 1285.64ms, fracRes: 0.3647, norm(attn): 0.2266, norm(output): 0.5156, norm(x): 0.4763, norm(y): 1.0134, norm:1.7113, tok/sec: 101951.01, flops:107.00, batch-reuse:1
@ 4297 train 4.4750 , allloss: 4.4757, dt: 1339.15ms, fracRes: 0.3656, norm(attn): 0.2285, norm(output): 0.5234, norm(x): 0.4790, norm(y): 1.0134, norm:1.6488, tok/sec: 97877.00, flops:102.72, batch-reuse:1
@ 4298 train 4.4679 , allloss: 4.4690, dt: 1318.49ms, fracRes: 0.3641, norm(attn): 0.2295, norm(output): 0.5156, norm(x): 0.4768, norm(y): 1.0133, norm:1.7863, tok/sec: 99411.05, flops:104.33, batch-reuse:1
@ 4299 train 4.4656 , allloss: 4.4667, dt: 1322.63ms, fracRes: 0.3631, norm(attn): 0.2295, norm(output): 0.5195, norm(x): 0.4771, norm(y): 1.0133, norm:1.3826, tok/sec: 99099.17, flops:104.01, batch-reuse:1
@ 4300 train 4.4187 , allloss: 4.4196, dt: 1331.54ms, fracRes: 0.3649, norm(attn): 0.2285, norm(output): 0.5117, norm(x): 0.4750, norm(y): 1.0134, norm:1.6993, tok/sec: 98436.07, flops:103.31, batch-reuse:1
@ 4301 train 4.2994 , allloss: 4.3011, dt: 1336.96ms, fracRes: 0.3648, norm(attn): 0.2314, norm(output): 0.5078, norm(x): 0.4735, norm(y): 1.0133, norm:1.4617, tok/sec: 98037.53, flops:102.89, batch-reuse:1
@ 4302 train 4.3699 , allloss: 4.3721, dt: 1311.57ms, fracRes: 0.3645, norm(attn): 0.2305, norm(output): 0.5078, norm(x): 0.4746, norm(y): 1.0134, norm:1.6179, tok/sec: 99934.83, flops:104.88, batch-reuse:1
@ 4303 train 4.4725 , allloss: 4.4733, dt: 1295.16ms, fracRes: 0.3673, norm(attn): 0.2275, norm(output): 0.5117, norm(x): 0.4766, norm(y): 1.0134, norm:1.5514, tok/sec: 101201.22, flops:106.21, batch-reuse:1
@ 4304 train 4.3331 , allloss: 4.3343, dt: 1290.61ms, fracRes: 0.3674, norm(attn): 0.2324, norm(output): 0.5117, norm(x): 0.4751, norm(y): 1.0134, norm:1.6088, tok/sec: 101557.80, flops:106.59, batch-reuse:1
@ 4305 train 4.4244 , allloss: 4.4300, dt: 1302.67ms, fracRes: 0.3663, norm(attn): 0.2305, norm(output): 0.5117, norm(x): 0.4765, norm(y): 1.0133, norm:1.6083, tok/sec: 100618.18, flops:105.60, batch-reuse:1
@ 4306 train 4.4645 , allloss: 4.4656, dt: 1327.29ms, fracRes: 0.3663, norm(attn): 0.2266, norm(output): 0.5078, norm(x): 0.4719, norm(y): 1.0134, norm:1.2471, tok/sec: 98751.53, flops:103.64, batch-reuse:1
@ 4307 train 4.3640 , allloss: 4.3656, dt: 1302.72ms, fracRes: 0.3670, norm(attn): 0.2256, norm(output): 0.5156, norm(x): 0.4743, norm(y): 1.0134, norm:1.6059, tok/sec: 100614.41, flops:105.60, batch-reuse:1
@ 4308 train 4.3039 , allloss: 4.3050, dt: 1303.61ms, fracRes: 0.3647, norm(attn): 0.2295, norm(output): 0.5156, norm(x): 0.4743, norm(y): 1.0133, norm:1.4973, tok/sec: 100545.38, flops:105.52, batch-reuse:1
@ 4309 train 4.3624 , allloss: 4.3647, dt: 1333.09ms, fracRes: 0.3643, norm(attn): 0.2285, norm(output): 0.5078, norm(x): 0.4749, norm(y): 1.0134, norm:1.5779, tok/sec: 98321.71, flops:103.19, batch-reuse:1
@ 4310 train 4.3967 , allloss: 4.4028, dt: 1319.68ms, fracRes: 0.3638, norm(attn): 0.2295, norm(output): 0.5117, norm(x): 0.4734, norm(y): 1.0134, norm:1.5396, tok/sec: 99321.26, flops:104.24, batch-reuse:1
@ 4311 train 4.4540 , allloss: 4.4561, dt: 1334.87ms, fracRes: 0.3642, norm(attn): 0.2256, norm(output): 0.5117, norm(x): 0.4757, norm(y): 1.0134, norm:1.7775, tok/sec: 98190.49, flops:103.05, batch-reuse:1
@ 4312 train 4.4015 , allloss: 4.4084, dt: 1329.90ms, fracRes: 0.3643, norm(attn): 0.2305, norm(output): 0.5117, norm(x): 0.4770, norm(y): 1.0133, norm:1.9393, tok/sec: 98557.54, flops:103.44, batch-reuse:1
@ 4313 train 4.3790 , allloss: 4.3815, dt: 1342.36ms, fracRes: 0.3621, norm(attn): 0.2314, norm(output): 0.5117, norm(x): 0.4755, norm(y): 1.0132, norm:1.5651, tok/sec: 97642.76, flops:102.48, batch-reuse:1
@ 4314 train 4.4306 , allloss: 4.4321, dt: 1329.38ms, fracRes: 0.3635, norm(attn): 0.2266, norm(output): 0.5117, norm(x): 0.4771, norm(y): 1.0134, norm:1.9896, tok/sec: 98596.07, flops:103.48, batch-reuse:1
@ 4315 train 4.4284 , allloss: 4.4306, dt: 1335.71ms, fracRes: 0.3637, norm(attn): 0.2266, norm(output): 0.5117, norm(x): 0.4773, norm(y): 1.0134, norm:1.8016, tok/sec: 98128.80, flops:102.99, batch-reuse:1
@ 4316 train 4.4497 , allloss: 4.4530, dt: 1299.88ms, fracRes: 0.3613, norm(attn): 0.2344, norm(output): 0.5156, norm(x): 0.4765, norm(y): 1.0133, norm:1.7656, tok/sec: 100833.90, flops:105.83, batch-reuse:1
@ 4317 train 4.4423 , allloss: 4.4435, dt: 1307.47ms, fracRes: 0.3629, norm(attn): 0.2324, norm(output): 0.5117, norm(x): 0.4739, norm(y): 1.0133, norm:1.6323, tok/sec: 100248.82, flops:105.21, batch-reuse:1
@ 4318 train 4.3880 , allloss: 4.3896, dt: 1346.81ms, fracRes: 0.3646, norm(attn): 0.2314, norm(output): 0.5117, norm(x): 0.4712, norm(y): 1.0133, norm:1.3264, tok/sec: 97320.28, flops:102.14, batch-reuse:1
@ 4319 train 4.4489 , allloss: 4.4505, dt: 1340.05ms, fracRes: 0.3646, norm(attn): 0.2314, norm(output): 0.5156, norm(x): 0.4735, norm(y): 1.0133, norm:1.4346, tok/sec: 97811.17, flops:102.65, batch-reuse:1
@ 4320 train 4.4126 , allloss: 4.4134, dt: 1303.07ms, fracRes: 0.3671, norm(attn): 0.2295, norm(output): 0.5195, norm(x): 0.4790, norm(y): 1.0133, norm:1.5495, tok/sec: 100586.81, flops:105.57, batch-reuse:1
@ 4321 train 4.3886 , allloss: 4.3895, dt: 1303.69ms, fracRes: 0.3655, norm(attn): 0.2305, norm(output): 0.5156, norm(x): 0.4779, norm(y): 1.0133, norm:1.3698, tok/sec: 100539.13, flops:105.52, batch-reuse:1
@ 4322 train 4.4193 , allloss: 4.4201, dt: 1280.47ms, fracRes: 0.3650, norm(attn): 0.2314, norm(output): 0.5156, norm(x): 0.4753, norm(y): 1.0134, norm:1.5078, tok/sec: 102362.21, flops:107.43, batch-reuse:1
@ 4323 train 4.4485 , allloss: 4.4498, dt: 1280.51ms, fracRes: 0.3645, norm(attn): 0.2354, norm(output): 0.5156, norm(x): 0.4760, norm(y): 1.0133, norm:1.2502, tok/sec: 102358.88, flops:107.43, batch-reuse:1
@ 4324 train 4.3993 , allloss: 4.4007, dt: 1318.40ms, fracRes: 0.3671, norm(attn): 0.2314, norm(output): 0.5156, norm(x): 0.4796, norm(y): 1.0134, norm:1.5614, tok/sec: 99417.25, flops:104.34, batch-reuse:1
@ 4325 train 4.4923 , allloss: 4.4938, dt: 1306.82ms, fracRes: 0.3672, norm(attn): 0.2285, norm(output): 0.5156, norm(x): 0.4791, norm(y): 1.0134, norm:1.5083, tok/sec: 100298.37, flops:105.27, batch-reuse:1
@ 4326 train 4.4810 , allloss: 4.4819, dt: 1326.16ms, fracRes: 0.3685, norm(attn): 0.2217, norm(output): 0.5195, norm(x): 0.4764, norm(y): 1.0134, norm:1.6288, tok/sec: 98835.44, flops:103.73, batch-reuse:1
@ 4327 train 4.3929 , allloss: 4.3944, dt: 1320.45ms, fracRes: 0.3655, norm(attn): 0.2305, norm(output): 0.5117, norm(x): 0.4735, norm(y): 1.0133, norm:1.4818, tok/sec: 99263.27, flops:104.18, batch-reuse:1
@ 4328 train 4.3792 , allloss: 4.3811, dt: 1288.09ms, fracRes: 0.3661, norm(attn): 0.2275, norm(output): 0.5117, norm(x): 0.4764, norm(y): 1.0133, norm:1.5141, tok/sec: 101756.90, flops:106.80, batch-reuse:1
@ 4329 train 4.3871 , allloss: 4.3882, dt: 1339.32ms, fracRes: 0.3646, norm(attn): 0.2305, norm(output): 0.5039, norm(x): 0.4723, norm(y): 1.0133, norm:1.3248, tok/sec: 97864.56, flops:102.71, batch-reuse:1
@ 4330 train 4.3845 , allloss: 4.3853, dt: 1285.25ms, fracRes: 0.3650, norm(attn): 0.2334, norm(output): 0.5078, norm(x): 0.4751, norm(y): 1.0134, norm:1.4196, tok/sec: 101981.63, flops:107.03, batch-reuse:1
@ 4331 train 4.4135 , allloss: 4.4149, dt: 1318.11ms, fracRes: 0.3641, norm(attn): 0.2314, norm(output): 0.5117, norm(x): 0.4758, norm(y): 1.0133, norm:1.4333, tok/sec: 99439.03, flops:104.36, batch-reuse:1
@ 4332 train 4.2855 , allloss: 4.2861, dt: 1302.12ms, fracRes: 0.3637, norm(attn): 0.2344, norm(output): 0.5078, norm(x): 0.4739, norm(y): 1.0133, norm:1.5894, tok/sec: 100660.21, flops:105.64, batch-reuse:1
@ 4333 train 4.4380 , allloss: 4.4386, dt: 1289.52ms, fracRes: 0.3640, norm(attn): 0.2314, norm(output): 0.5078, norm(x): 0.4725, norm(y): 1.0134, norm:1.4654, tok/sec: 101643.95, flops:106.68, batch-reuse:1
@ 4334 train 4.3708 , allloss: 4.3718, dt: 1280.28ms, fracRes: 0.3631, norm(attn): 0.2363, norm(output): 0.5117, norm(x): 0.4753, norm(y): 1.0133, norm:1.5676, tok/sec: 102377.67, flops:107.45, batch-reuse:1
@ 4335 train 4.3944 , allloss: 4.3955, dt: 1287.21ms, fracRes: 0.3611, norm(attn): 0.2363, norm(output): 0.5078, norm(x): 0.4736, norm(y): 1.0133, norm:1.2804, tok/sec: 101826.26, flops:106.87, batch-reuse:1
@ 4336 train 4.3957 , allloss: 4.3967, dt: 1288.83ms, fracRes: 0.3630, norm(attn): 0.2334, norm(output): 0.5039, norm(x): 0.4709, norm(y): 1.0133, norm:1.6088, tok/sec: 101698.74, flops:106.73, batch-reuse:1
@ 4337 train 4.4013 , allloss: 4.4030, dt: 1322.02ms, fracRes: 0.3648, norm(attn): 0.2324, norm(output): 0.5156, norm(x): 0.4749, norm(y): 1.0133, norm:1.3592, tok/sec: 99145.40, flops:104.05, batch-reuse:1
@ 4338 train 4.3041 , allloss: 4.3051, dt: 1290.19ms, fracRes: 0.3650, norm(attn): 0.2285, norm(output): 0.5195, norm(x): 0.4756, norm(y): 1.0133, norm:1.5187, tok/sec: 101591.24, flops:106.62, batch-reuse:1
@ 4339 train 4.3982 , allloss: 4.4006, dt: 1304.01ms, fracRes: 0.3628, norm(attn): 0.2324, norm(output): 0.5078, norm(x): 0.4717, norm(y): 1.0134, norm:1.4964, tok/sec: 100514.78, flops:105.49, batch-reuse:1
@ 4340 train 4.3658 , allloss: 4.3679, dt: 1302.08ms, fracRes: 0.3631, norm(attn): 0.2344, norm(output): 0.5078, norm(x): 0.4716, norm(y): 1.0133, norm:1.4196, tok/sec: 100663.82, flops:105.65, batch-reuse:1
@ 4341 train 4.4621 , allloss: 4.4644, dt: 1302.77ms, fracRes: 0.3645, norm(attn): 0.2295, norm(output): 0.5117, norm(x): 0.4761, norm(y): 1.0133, norm:1.4650, tok/sec: 100610.06, flops:105.59, batch-reuse:1
@ 4342 train 4.3939 , allloss: 4.3988, dt: 1316.32ms, fracRes: 0.3634, norm(attn): 0.2314, norm(output): 0.5078, norm(x): 0.4739, norm(y): 1.0133, norm:1.3699, tok/sec: 99574.52, flops:104.51, batch-reuse:1
@ 4343 train 4.4481 , allloss: 4.4506, dt: 1296.05ms, fracRes: 0.3643, norm(attn): 0.2334, norm(output): 0.5078, norm(x): 0.4742, norm(y): 1.0133, norm:1.6952, tok/sec: 101131.78, flops:106.14, batch-reuse:1
@ 4344 train 4.4741 , allloss: 4.4760, dt: 1307.62ms, fracRes: 0.3668, norm(attn): 0.2305, norm(output): 0.5156, norm(x): 0.4776, norm(y): 1.0133, norm:1.5874, tok/sec: 100237.01, flops:105.20, batch-reuse:1
@ 4345 train 4.3366 , allloss: 4.3379, dt: 1296.50ms, fracRes: 0.3663, norm(attn): 0.2295, norm(output): 0.5156, norm(x): 0.4762, norm(y): 1.0134, norm:1.6387, tok/sec: 101096.86, flops:106.10, batch-reuse:1
@ 4346 train 4.4099 , allloss: 4.4109, dt: 1316.47ms, fracRes: 0.3663, norm(attn): 0.2285, norm(output): 0.5117, norm(x): 0.4743, norm(y): 1.0133, norm:1.4735, tok/sec: 99563.16, flops:104.49, batch-reuse:1
@ 4347 train 4.3882 , allloss: 4.3895, dt: 1301.91ms, fracRes: 0.3679, norm(attn): 0.2285, norm(output): 0.5117, norm(x): 0.4734, norm(y): 1.0134, norm:1.6936, tok/sec: 100676.69, flops:105.66, batch-reuse:1
@ 4348 train 4.5559 , allloss: 4.5593, dt: 1313.32ms, fracRes: 0.3699, norm(attn): 0.2256, norm(output): 0.5117, norm(x): 0.4762, norm(y): 1.0134, norm:1.2871, tok/sec: 99802.09, flops:104.74, batch-reuse:1
@ 4349 train 4.4799 , allloss: 4.4810, dt: 1312.89ms, fracRes: 0.3662, norm(attn): 0.2324, norm(output): 0.5117, norm(x): 0.4775, norm(y): 1.0133, norm:1.4628, tok/sec: 99834.60, flops:104.78, batch-reuse:1
@ 4350 train 4.3593 , allloss: 4.3602, dt: 1305.18ms, fracRes: 0.3670, norm(attn): 0.2275, norm(output): 0.5195, norm(x): 0.4775, norm(y): 1.0134, norm:1.5517, tok/sec: 100424.20, flops:105.40, batch-reuse:1
@ 4351 train 4.4749 , allloss: 4.4767, dt: 1294.31ms, fracRes: 0.3648, norm(attn): 0.2266, norm(output): 0.5117, norm(x): 0.4739, norm(y): 1.0134, norm:1.4313, tok/sec: 101267.96, flops:106.28, batch-reuse:1
@ 4352 train 4.3474 , allloss: 4.3495, dt: 1298.91ms, fracRes: 0.3634, norm(attn): 0.2295, norm(output): 0.5117, norm(x): 0.4756, norm(y): 1.0134, norm:1.5551, tok/sec: 100908.97, flops:105.91, batch-reuse:1
@ 4353 train 4.3683 , allloss: 4.3696, dt: 1324.05ms, fracRes: 0.3621, norm(attn): 0.2314, norm(output): 0.5195, norm(x): 0.4787, norm(y): 1.0134, norm:1.7402, tok/sec: 98992.96, flops:103.89, batch-reuse:1
@ 4354 train 4.3299 , allloss: 4.3319, dt: 1306.31ms, fracRes: 0.3629, norm(attn): 0.2314, norm(output): 0.5195, norm(x): 0.4774, norm(y): 1.0133, norm:1.6002, tok/sec: 100337.47, flops:105.31, batch-reuse:1
@ 4355 train 4.3401 , allloss: 4.3408, dt: 1326.27ms, fracRes: 0.3631, norm(attn): 0.2275, norm(output): 0.5117, norm(x): 0.4766, norm(y): 1.0135, norm:1.5817, tok/sec: 98827.90, flops:103.72, batch-reuse:1
@ 4356 train 4.3610 , allloss: 4.3619, dt: 1319.01ms, fracRes: 0.3642, norm(attn): 0.2324, norm(output): 0.5156, norm(x): 0.4785, norm(y): 1.0133, norm:1.7103, tok/sec: 99371.37, flops:104.29, batch-reuse:1
@ 4357 train 4.3631 , allloss: 4.3645, dt: 1314.73ms, fracRes: 0.3623, norm(attn): 0.2334, norm(output): 0.5156, norm(x): 0.4757, norm(y): 1.0133, norm:1.5992, tok/sec: 99694.66, flops:104.63, batch-reuse:1
@ 4358 train 4.4201 , allloss: 4.4260, dt: 1333.68ms, fracRes: 0.3625, norm(attn): 0.2324, norm(output): 0.5039, norm(x): 0.4711, norm(y): 1.0133, norm:1.4586, tok/sec: 98278.45, flops:103.15, batch-reuse:1
@ 4359 train 4.3274 , allloss: 4.3314, dt: 1310.54ms, fracRes: 0.3660, norm(attn): 0.2295, norm(output): 0.5117, norm(x): 0.4718, norm(y): 1.0135, norm:1.5661, tok/sec: 100013.43, flops:104.97, batch-reuse:1
@ 4360 train 4.6081 , allloss: 4.6090, dt: 1314.48ms, fracRes: 0.3699, norm(attn): 0.2217, norm(output): 0.5234, norm(x): 0.4736, norm(y): 1.0135, norm:1.9822, tok/sec: 99713.72, flops:104.65, batch-reuse:1
@ 4361 train 4.4448 , allloss: 4.4456, dt: 1329.33ms, fracRes: 0.3659, norm(attn): 0.2344, norm(output): 0.5195, norm(x): 0.4752, norm(y): 1.0134, norm:1.9376, tok/sec: 98599.91, flops:103.48, batch-reuse:1
@ 4362 train 4.4133 , allloss: 4.4177, dt: 1290.57ms, fracRes: 0.3667, norm(attn): 0.2324, norm(output): 0.5195, norm(x): 0.4755, norm(y): 1.0134, norm:1.5854, tok/sec: 101561.55, flops:106.59, batch-reuse:1
@ 4363 train 4.3633 , allloss: 4.3652, dt: 1291.26ms, fracRes: 0.3660, norm(attn): 0.2314, norm(output): 0.5156, norm(x): 0.4747, norm(y): 1.0134, norm:1.6521, tok/sec: 101506.79, flops:106.53, batch-reuse:1
@ 4364 train 4.3899 , allloss: 4.3916, dt: 1329.57ms, fracRes: 0.3662, norm(attn): 0.2295, norm(output): 0.5156, norm(x): 0.4757, norm(y): 1.0133, norm:1.5068, tok/sec: 98582.30, flops:103.46, batch-reuse:1
@ 4365 train 4.3590 , allloss: 4.3633, dt: 1304.84ms, fracRes: 0.3668, norm(attn): 0.2295, norm(output): 0.5195, norm(x): 0.4777, norm(y): 1.0134, norm:1.7832, tok/sec: 100450.81, flops:105.42, batch-reuse:1
@ 4366 train 4.3844 , allloss: 4.3924, dt: 1307.96ms, fracRes: 0.3674, norm(attn): 0.2295, norm(output): 0.5273, norm(x): 0.4829, norm(y): 1.0133, norm:1.5857, tok/sec: 100210.79, flops:105.17, batch-reuse:1
@ 4367 train 4.3115 , allloss: 4.3235, dt: 1301.32ms, fracRes: 0.3672, norm(attn): 0.2305, norm(output): 0.5078, norm(x): 0.4708, norm(y): 1.0135, norm:1.5781, tok/sec: 100722.30, flops:105.71, batch-reuse:1
@ 4368 train 4.4289 , allloss: 4.4324, dt: 1287.49ms, fracRes: 0.3660, norm(attn): 0.2285, norm(output): 0.5117, norm(x): 0.4751, norm(y): 1.0134, norm:1.6930, tok/sec: 101804.28, flops:106.85, batch-reuse:1
@ 4369 train 4.3186 , allloss: 4.3204, dt: 1294.75ms, fracRes: 0.3663, norm(attn): 0.2275, norm(output): 0.5156, norm(x): 0.4745, norm(y): 1.0134, norm:1.4674, tok/sec: 101233.15, flops:106.25, batch-reuse:1
@ 4370 train 4.2645 , allloss: 4.2673, dt: 1289.43ms, fracRes: 0.3670, norm(attn): 0.2285, norm(output): 0.5234, norm(x): 0.4759, norm(y): 1.0135, norm:1.6911, tok/sec: 101650.90, flops:106.68, batch-reuse:1
@ 4371 train 4.3662 , allloss: 4.3683, dt: 1285.19ms, fracRes: 0.3692, norm(attn): 0.2266, norm(output): 0.5234, norm(x): 0.4787, norm(y): 1.0135, norm:1.6412, tok/sec: 101986.58, flops:107.04, batch-reuse:1
@ 4372 train 4.3257 , allloss: 4.3269, dt: 1282.09ms, fracRes: 0.3670, norm(attn): 0.2266, norm(output): 0.5234, norm(x): 0.4770, norm(y): 1.0134, norm:1.4336, tok/sec: 102232.89, flops:107.30, batch-reuse:1
@ 4373 train 4.3548 , allloss: 4.3564, dt: 1294.95ms, fracRes: 0.3670, norm(attn): 0.2266, norm(output): 0.5273, norm(x): 0.4812, norm(y): 1.0134, norm:1.5637, tok/sec: 101218.01, flops:106.23, batch-reuse:1
@ 4374 train 4.4108 , allloss: 4.4120, dt: 1289.54ms, fracRes: 0.3669, norm(attn): 0.2217, norm(output): 0.5273, norm(x): 0.4781, norm(y): 1.0135, norm:1.3910, tok/sec: 101642.48, flops:106.68, batch-reuse:1
@ 4375 train 4.3364 , allloss: 4.3380, dt: 1316.52ms, fracRes: 0.3661, norm(attn): 0.2246, norm(output): 0.5273, norm(x): 0.4826, norm(y): 1.0134, norm:1.6114, tok/sec: 99559.61, flops:104.49, batch-reuse:1
@ 4376 train 4.3968 , allloss: 4.4014, dt: 1290.58ms, fracRes: 0.3666, norm(attn): 0.2285, norm(output): 0.5273, norm(x): 0.4803, norm(y): 1.0135, norm:1.6132, tok/sec: 101560.27, flops:106.59, batch-reuse:1
@ 4377 train 4.4123 , allloss: 4.4141, dt: 1326.11ms, fracRes: 0.3670, norm(attn): 0.2266, norm(output): 0.5273, norm(x): 0.4828, norm(y): 1.0134, norm:1.6675, tok/sec: 98839.31, flops:103.73, batch-reuse:1
@ 4378 train 4.2952 , allloss: 4.2971, dt: 1322.78ms, fracRes: 0.3652, norm(attn): 0.2314, norm(output): 0.5273, norm(x): 0.4810, norm(y): 1.0133, norm:1.6545, tok/sec: 99088.17, flops:103.99, batch-reuse:1
@ 4379 train 4.3133 , allloss: 4.3175, dt: 1311.12ms, fracRes: 0.3632, norm(attn): 0.2324, norm(output): 0.5234, norm(x): 0.4789, norm(y): 1.0134, norm:1.4790, tok/sec: 99969.63, flops:104.92, batch-reuse:1
@ 4380 train 4.3470 , allloss: 4.3493, dt: 1324.28ms, fracRes: 0.3652, norm(attn): 0.2324, norm(output): 0.5195, norm(x): 0.4784, norm(y): 1.0133, norm:1.5967, tok/sec: 98975.74, flops:103.88, batch-reuse:1
@ 4381 train 4.3512 , allloss: 4.3525, dt: 1337.18ms, fracRes: 0.3659, norm(attn): 0.2314, norm(output): 0.5195, norm(x): 0.4779, norm(y): 1.0133, norm:1.6383, tok/sec: 98021.48, flops:102.88, batch-reuse:1
@ 4382 train 4.4039 , allloss: 4.4049, dt: 1311.39ms, fracRes: 0.3682, norm(attn): 0.2285, norm(output): 0.5117, norm(x): 0.4747, norm(y): 1.0134, norm:1.5234, tok/sec: 99948.64, flops:104.90, batch-reuse:1
@ 4383 train 4.3307 , allloss: 4.3318, dt: 1320.41ms, fracRes: 0.3680, norm(attn): 0.2295, norm(output): 0.5117, norm(x): 0.4729, norm(y): 1.0135, norm:1.5518, tok/sec: 99266.10, flops:104.18, batch-reuse:1
@ 4384 train 4.3552 , allloss: 4.3566, dt: 1309.53ms, fracRes: 0.3678, norm(attn): 0.2314, norm(output): 0.5156, norm(x): 0.4792, norm(y): 1.0134, norm:1.5259, tok/sec: 100090.89, flops:105.05, batch-reuse:1
@ 4385 train 4.3723 , allloss: 4.3762, dt: 1280.51ms, fracRes: 0.3680, norm(attn): 0.2295, norm(output): 0.5234, norm(x): 0.4794, norm(y): 1.0135, norm:1.5646, tok/sec: 102359.41, flops:107.43, batch-reuse:1
@ 4386 train 4.3365 , allloss: 4.3374, dt: 1308.56ms, fracRes: 0.3667, norm(attn): 0.2285, norm(output): 0.5156, norm(x): 0.4751, norm(y): 1.0134, norm:1.5610, tok/sec: 100165.20, flops:105.13, batch-reuse:1
@ 4387 train 4.4266 , allloss: 4.4279, dt: 1327.89ms, fracRes: 0.3682, norm(attn): 0.2266, norm(output): 0.5195, norm(x): 0.4760, norm(y): 1.0134, norm:1.7838, tok/sec: 98706.71, flops:103.59, batch-reuse:1
@ 4388 train 4.4166 , allloss: 4.4188, dt: 1333.78ms, fracRes: 0.3682, norm(attn): 0.2256, norm(output): 0.5156, norm(x): 0.4756, norm(y): 1.0135, norm:1.4833, tok/sec: 98271.30, flops:103.14, batch-reuse:1
@ 4389 train 4.3554 , allloss: 4.3564, dt: 1336.86ms, fracRes: 0.3660, norm(attn): 0.2285, norm(output): 0.5234, norm(x): 0.4768, norm(y): 1.0134, norm:1.7489, tok/sec: 98044.61, flops:102.90, batch-reuse:1
@ 4390 train 4.3545 , allloss: 4.3562, dt: 1338.63ms, fracRes: 0.3636, norm(attn): 0.2305, norm(output): 0.5195, norm(x): 0.4778, norm(y): 1.0133, norm:1.6954, tok/sec: 97915.04, flops:102.76, batch-reuse:1
@ 4391 train 4.2548 , allloss: 4.2564, dt: 1347.66ms, fracRes: 0.3638, norm(attn): 0.2305, norm(output): 0.5234, norm(x): 0.4769, norm(y): 1.0133, norm:1.4629, tok/sec: 97259.31, flops:102.08, batch-reuse:1
@ 4392 train 4.2730 , allloss: 4.2753, dt: 1349.70ms, fracRes: 0.3670, norm(attn): 0.2305, norm(output): 0.5156, norm(x): 0.4760, norm(y): 1.0135, norm:1.7956, tok/sec: 97112.12, flops:101.92, batch-reuse:1
@ 4393 train 4.3511 , allloss: 4.3523, dt: 1329.21ms, fracRes: 0.3655, norm(attn): 0.2314, norm(output): 0.5117, norm(x): 0.4721, norm(y): 1.0134, norm:1.3515, tok/sec: 98609.25, flops:103.49, batch-reuse:1
@ 4394 train 4.4292 , allloss: 4.4303, dt: 1309.41ms, fracRes: 0.3663, norm(attn): 0.2295, norm(output): 0.5195, norm(x): 0.4803, norm(y): 1.0134, norm:1.6324, tok/sec: 100100.02, flops:105.06, batch-reuse:1
@ 4395 train 4.2173 , allloss: 4.2192, dt: 1315.09ms, fracRes: 0.3639, norm(attn): 0.2334, norm(output): 0.5156, norm(x): 0.4751, norm(y): 1.0134, norm:1.3545, tok/sec: 99667.92, flops:104.60, batch-reuse:1
@ 4396 train 4.3295 , allloss: 4.3313, dt: 1315.18ms, fracRes: 0.3653, norm(attn): 0.2314, norm(output): 0.5195, norm(x): 0.4752, norm(y): 1.0134, norm:1.4547, tok/sec: 99660.77, flops:104.60, batch-reuse:1
@ 4397 train 4.1823 , allloss: 4.1835, dt: 1309.19ms, fracRes: 0.3656, norm(attn): 0.2295, norm(output): 0.5195, norm(x): 0.4767, norm(y): 1.0134, norm:1.4819, tok/sec: 100116.55, flops:105.07, batch-reuse:1
@ 4398 train 4.1291 , allloss: 4.1303, dt: 1345.67ms, fracRes: 0.3659, norm(attn): 0.2324, norm(output): 0.5234, norm(x): 0.4790, norm(y): 1.0134, norm:1.5422, tok/sec: 97402.63, flops:102.23, batch-reuse:1
@ 4399 train 4.1780 , allloss: 4.1790, dt: 1338.82ms, fracRes: 0.3711, norm(attn): 0.2266, norm(output): 0.5234, norm(x): 0.4835, norm(y): 1.0136, norm:1.4258, tok/sec: 97900.98, flops:102.75, batch-reuse:1
@ 4400 train 4.2238 , allloss: 4.2248, dt: 1337.75ms, fracRes: 0.3685, norm(attn): 0.2285, norm(output): 0.5078, norm(x): 0.4730, norm(y): 1.0135, norm:1.8491, tok/sec: 97979.76, flops:102.83, batch-reuse:1
@ 4401 train 4.1398 , allloss: 4.1406, dt: 1344.40ms, fracRes: 0.3648, norm(attn): 0.2354, norm(output): 0.5117, norm(x): 0.4747, norm(y): 1.0133, norm:1.5673, tok/sec: 97494.44, flops:102.32, batch-reuse:1
@ 4402 train 4.2904 , allloss: 4.2936, dt: 1306.94ms, fracRes: 0.3654, norm(attn): 0.2314, norm(output): 0.5195, norm(x): 0.4799, norm(y): 1.0133, norm:1.5462, tok/sec: 100289.11, flops:105.26, batch-reuse:1
@ 4403 train 4.2790 , allloss: 4.2804, dt: 1297.30ms, fracRes: 0.3650, norm(attn): 0.2324, norm(output): 0.5117, norm(x): 0.4752, norm(y): 1.0134, norm:1.7808, tok/sec: 101034.52, flops:106.04, batch-reuse:1
@ 4404 train 4.2313 , allloss: 4.2323, dt: 1291.80ms, fracRes: 0.3654, norm(attn): 0.2324, norm(output): 0.5078, norm(x): 0.4756, norm(y): 1.0134, norm:1.4593, tok/sec: 101464.94, flops:106.49, batch-reuse:1
@ 4405 train 4.2952 , allloss: 4.2967, dt: 1305.85ms, fracRes: 0.3662, norm(attn): 0.2324, norm(output): 0.5195, norm(x): 0.4767, norm(y): 1.0134, norm:1.6084, tok/sec: 100372.73, flops:105.34, batch-reuse:1
@ 4406 train 4.1998 , allloss: 4.2012, dt: 1313.48ms, fracRes: 0.3650, norm(attn): 0.2324, norm(output): 0.5195, norm(x): 0.4744, norm(y): 1.0133, norm:1.5321, tok/sec: 99789.99, flops:104.73, batch-reuse:1
@ 4407 train 4.2831 , allloss: 4.2842, dt: 1327.50ms, fracRes: 0.3650, norm(attn): 0.2285, norm(output): 0.5195, norm(x): 0.4769, norm(y): 1.0134, norm:1.4033, tok/sec: 98736.21, flops:103.63, batch-reuse:1
@ 4408 train 4.2149 , allloss: 4.2163, dt: 1292.55ms, fracRes: 0.3662, norm(attn): 0.2285, norm(output): 0.5195, norm(x): 0.4767, norm(y): 1.0134, norm:1.5720, tok/sec: 101405.59, flops:106.43, batch-reuse:1
@ 4409 train 4.1990 , allloss: 4.2001, dt: 1310.03ms, fracRes: 0.3664, norm(attn): 0.2305, norm(output): 0.5234, norm(x): 0.4763, norm(y): 1.0134, norm:1.5625, tok/sec: 100052.31, flops:105.01, batch-reuse:1
@ 4410 train 4.1940 , allloss: 4.1963, dt: 1305.90ms, fracRes: 0.3655, norm(attn): 0.2324, norm(output): 0.5234, norm(x): 0.4771, norm(y): 1.0134, norm:1.4180, tok/sec: 100369.14, flops:105.34, batch-reuse:1
@ 4411 train 4.1743 , allloss: 4.1757, dt: 1311.65ms, fracRes: 0.3653, norm(attn): 0.2334, norm(output): 0.5234, norm(x): 0.4755, norm(y): 1.0134, norm:1.4126, tok/sec: 99928.99, flops:104.88, batch-reuse:1
@ 4412 train 4.2888 , allloss: 4.2923, dt: 1306.05ms, fracRes: 0.3642, norm(attn): 0.2305, norm(output): 0.5156, norm(x): 0.4753, norm(y): 1.0133, norm:1.4218, tok/sec: 100357.58, flops:105.33, batch-reuse:1
@ 4413 train 4.2561 , allloss: 4.2578, dt: 1328.98ms, fracRes: 0.3641, norm(attn): 0.2324, norm(output): 0.5234, norm(x): 0.4771, norm(y): 1.0133, norm:1.5970, tok/sec: 98625.80, flops:103.51, batch-reuse:1
@ 4414 train 4.1456 , allloss: 4.1493, dt: 1340.65ms, fracRes: 0.3653, norm(attn): 0.2285, norm(output): 0.5234, norm(x): 0.4780, norm(y): 1.0134, norm:1.4608, tok/sec: 97767.76, flops:102.61, batch-reuse:1
@ 4415 train 4.1800 , allloss: 4.1816, dt: 1337.96ms, fracRes: 0.3679, norm(attn): 0.2246, norm(output): 0.5273, norm(x): 0.4800, norm(y): 1.0135, norm:1.7949, tok/sec: 97963.72, flops:102.81, batch-reuse:1
@ 4416 train 4.1778 , allloss: 4.1789, dt: 1296.08ms, fracRes: 0.3683, norm(attn): 0.2266, norm(output): 0.5273, norm(x): 0.4783, norm(y): 1.0135, norm:1.4421, tok/sec: 101129.59, flops:106.14, batch-reuse:1
@ 4417 train 4.2048 , allloss: 4.2066, dt: 1293.02ms, fracRes: 0.3666, norm(attn): 0.2305, norm(output): 0.5195, norm(x): 0.4748, norm(y): 1.0135, norm:1.4828, tok/sec: 101368.70, flops:106.39, batch-reuse:1
@ 4418 train 4.1498 , allloss: 4.1515, dt: 1307.08ms, fracRes: 0.3664, norm(attn): 0.2295, norm(output): 0.5273, norm(x): 0.4769, norm(y): 1.0134, norm:1.4476, tok/sec: 100278.35, flops:105.24, batch-reuse:1
@ 4419 train 4.1640 , allloss: 4.1662, dt: 1342.74ms, fracRes: 0.3660, norm(attn): 0.2324, norm(output): 0.5195, norm(x): 0.4763, norm(y): 1.0134, norm:1.6859, tok/sec: 97615.53, flops:102.45, batch-reuse:1
@ 4420 train 4.2000 , allloss: 4.2024, dt: 1290.60ms, fracRes: 0.3664, norm(attn): 0.2334, norm(output): 0.5195, norm(x): 0.4772, norm(y): 1.0134, norm:1.4966, tok/sec: 101559.00, flops:106.59, batch-reuse:1
@ 4421 train 4.2818 , allloss: 4.2832, dt: 1296.63ms, fracRes: 0.3674, norm(attn): 0.2324, norm(output): 0.5234, norm(x): 0.4782, norm(y): 1.0134, norm:1.4717, tok/sec: 101086.84, flops:106.09, batch-reuse:1
@ 4422 train 4.1542 , allloss: 4.1554, dt: 1313.52ms, fracRes: 0.3647, norm(attn): 0.2363, norm(output): 0.5156, norm(x): 0.4750, norm(y): 1.0134, norm:1.5794, tok/sec: 99787.14, flops:104.73, batch-reuse:1
@ 4423 train 4.1782 , allloss: 4.1866, dt: 1319.10ms, fracRes: 0.3652, norm(attn): 0.2334, norm(output): 0.5195, norm(x): 0.4761, norm(y): 1.0134, norm:1.3409, tok/sec: 99364.37, flops:104.28, batch-reuse:1
@ 4424 train 4.2079 , allloss: 4.2093, dt: 1337.84ms, fracRes: 0.3645, norm(attn): 0.2354, norm(output): 0.5117, norm(x): 0.4758, norm(y): 1.0134, norm:1.5463, tok/sec: 97972.95, flops:102.82, batch-reuse:1
@ 4425 train 4.2764 , allloss: 4.2796, dt: 1314.73ms, fracRes: 0.3632, norm(attn): 0.2285, norm(output): 0.5117, norm(x): 0.4785, norm(y): 1.0135, norm:2.0326, tok/sec: 99694.93, flops:104.63, batch-reuse:1
@ 4426 train 4.5493 , allloss: 4.5513, dt: 1315.20ms, fracRes: 0.3679, norm(attn): 0.2305, norm(output): 0.5273, norm(x): 0.4889, norm(y): 1.0135, norm:2.3290, tok/sec: 99659.05, flops:104.59, batch-reuse:1
@ 4427 train 4.2540 , allloss: 4.2574, dt: 1336.40ms, fracRes: 0.3672, norm(attn): 0.2295, norm(output): 0.5195, norm(x): 0.4788, norm(y): 1.0135, norm:1.9028, tok/sec: 98078.64, flops:102.94, batch-reuse:1
@ 4428 train 4.2725 , allloss: 4.2747, dt: 1300.53ms, fracRes: 0.3694, norm(attn): 0.2295, norm(output): 0.5195, norm(x): 0.4844, norm(y): 1.0135, norm:1.8540, tok/sec: 100783.33, flops:105.77, batch-reuse:1
@ 4429 train 4.2819 , allloss: 4.2832, dt: 1306.12ms, fracRes: 0.3664, norm(attn): 0.2295, norm(output): 0.5234, norm(x): 0.4806, norm(y): 1.0134, norm:1.6932, tok/sec: 100352.51, flops:105.32, batch-reuse:1
@ 4430 train 4.2825 , allloss: 4.2840, dt: 1322.26ms, fracRes: 0.3664, norm(attn): 0.2324, norm(output): 0.5273, norm(x): 0.4839, norm(y): 1.0134, norm:1.5007, tok/sec: 99127.51, flops:104.04, batch-reuse:1
@ 4431 train 4.4032 , allloss: 4.4041, dt: 1283.82ms, fracRes: 0.3675, norm(attn): 0.2305, norm(output): 0.5234, norm(x): 0.4825, norm(y): 1.0136, norm:1.7035, tok/sec: 102095.52, flops:107.15, batch-reuse:1
@ 4432 train 4.4258 , allloss: 4.4276, dt: 1296.76ms, fracRes: 0.3686, norm(attn): 0.2305, norm(output): 0.5195, norm(x): 0.4858, norm(y): 1.0136, norm:1.7228, tok/sec: 101076.32, flops:106.08, batch-reuse:1
@ 4433 train 4.1646 , allloss: 4.1657, dt: 1300.28ms, fracRes: 0.3666, norm(attn): 0.2354, norm(output): 0.5195, norm(x): 0.4765, norm(y): 1.0135, norm:1.4178, tok/sec: 100802.69, flops:105.79, batch-reuse:1
@ 4434 train 4.2186 , allloss: 4.2203, dt: 1313.60ms, fracRes: 0.3662, norm(attn): 0.2354, norm(output): 0.5156, norm(x): 0.4773, norm(y): 1.0135, norm:1.4776, tok/sec: 99780.51, flops:104.72, batch-reuse:1
@ 4435 train 4.2191 , allloss: 4.2211, dt: 1340.74ms, fracRes: 0.3662, norm(attn): 0.2305, norm(output): 0.5195, norm(x): 0.4811, norm(y): 1.0135, norm:1.4866, tok/sec: 97761.04, flops:102.60, batch-reuse:1
@ 4436 train 4.2040 , allloss: 4.2061, dt: 1328.10ms, fracRes: 0.3668, norm(attn): 0.2324, norm(output): 0.5195, norm(x): 0.4826, norm(y): 1.0134, norm:1.6080, tok/sec: 98691.67, flops:103.58, batch-reuse:1
@ 4437 train 4.1827 , allloss: 4.1926, dt: 1299.05ms, fracRes: 0.3655, norm(attn): 0.2344, norm(output): 0.5195, norm(x): 0.4822, norm(y): 1.0133, norm:1.5745, tok/sec: 100898.73, flops:105.90, batch-reuse:1
@ 4438 train 4.2373 , allloss: 4.2389, dt: 1306.79ms, fracRes: 0.3650, norm(attn): 0.2324, norm(output): 0.5156, norm(x): 0.4769, norm(y): 1.0134, norm:1.4101, tok/sec: 100300.55, flops:105.27, batch-reuse:1
@ 4439 train 4.2752 , allloss: 4.2764, dt: 1299.20ms, fracRes: 0.3666, norm(attn): 0.2324, norm(output): 0.5234, norm(x): 0.4821, norm(y): 1.0135, norm:1.5596, tok/sec: 100886.40, flops:105.88, batch-reuse:1
@ 4440 train 4.2494 , allloss: 4.2503, dt: 1305.68ms, fracRes: 0.3676, norm(attn): 0.2275, norm(output): 0.5273, norm(x): 0.4849, norm(y): 1.0135, norm:1.6768, tok/sec: 100386.33, flops:105.36, batch-reuse:1
@ 4441 train 4.3595 , allloss: 4.3636, dt: 1312.02ms, fracRes: 0.3671, norm(attn): 0.2324, norm(output): 0.5273, norm(x): 0.4854, norm(y): 1.0135, norm:2.0480, tok/sec: 99900.68, flops:104.85, batch-reuse:1
@ 4442 train 4.2354 , allloss: 4.2362, dt: 1289.07ms, fracRes: 0.3650, norm(attn): 0.2305, norm(output): 0.5273, norm(x): 0.4788, norm(y): 1.0134, norm:1.5637, tok/sec: 101679.78, flops:106.71, batch-reuse:1
@ 4443 train 4.2856 , allloss: 4.2863, dt: 1294.54ms, fracRes: 0.3673, norm(attn): 0.2295, norm(output): 0.5273, norm(x): 0.4828, norm(y): 1.0135, norm:2.0394, tok/sec: 101250.22, flops:106.26, batch-reuse:1
@ 4444 train 4.2726 , allloss: 4.2733, dt: 1316.37ms, fracRes: 0.3690, norm(attn): 0.2295, norm(output): 0.5273, norm(x): 0.4857, norm(y): 1.0135, norm:2.6900, tok/sec: 99570.55, flops:104.50, batch-reuse:1
@ 4445 train 4.3923 , allloss: 4.3931, dt: 1301.78ms, fracRes: 0.3700, norm(attn): 0.2334, norm(output): 0.5273, norm(x): 0.4836, norm(y): 1.0135, norm:2.2309, tok/sec: 100686.86, flops:105.67, batch-reuse:1
@ 4446 train 4.4665 , allloss: 4.4679, dt: 1305.46ms, fracRes: 0.3697, norm(attn): 0.2285, norm(output): 0.5273, norm(x): 0.4819, norm(y): 1.0134, norm:1.6364, tok/sec: 100402.81, flops:105.37, batch-reuse:1
@ 4447 train 4.3816 , allloss: 4.3830, dt: 1299.71ms, fracRes: 0.3697, norm(attn): 0.2314, norm(output): 0.5195, norm(x): 0.4810, norm(y): 1.0134, norm:1.9443, tok/sec: 100847.29, flops:105.84, batch-reuse:1
@ 4448 train 4.2678 , allloss: 4.2685, dt: 1315.87ms, fracRes: 0.3698, norm(attn): 0.2344, norm(output): 0.5234, norm(x): 0.4806, norm(y): 1.0134, norm:1.8368, tok/sec: 99608.82, flops:104.54, batch-reuse:1
@ 4449 train 4.4779 , allloss: 4.4798, dt: 1315.15ms, fracRes: 0.3687, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4861, norm(y): 1.0134, norm:1.7383, tok/sec: 99663.32, flops:104.60, batch-reuse:1
@ 4450 train 4.3754 , allloss: 4.3765, dt: 1341.09ms, fracRes: 0.3660, norm(attn): 0.2363, norm(output): 0.5273, norm(x): 0.4838, norm(y): 1.0134, norm:1.6693, tok/sec: 97735.53, flops:102.58, batch-reuse:1
@ 4451 train 4.5331 , allloss: 4.5346, dt: 1309.45ms, fracRes: 0.3640, norm(attn): 0.2354, norm(output): 0.5195, norm(x): 0.4798, norm(y): 1.0135, norm:1.5783, tok/sec: 100097.23, flops:105.05, batch-reuse:1
@ 4452 train 4.3386 , allloss: 4.3403, dt: 1332.05ms, fracRes: 0.3645, norm(attn): 0.2314, norm(output): 0.5234, norm(x): 0.4793, norm(y): 1.0135, norm:1.5915, tok/sec: 98398.72, flops:103.27, batch-reuse:1
@ 4453 train 4.3934 , allloss: 4.3978, dt: 1278.20ms, fracRes: 0.3641, norm(attn): 0.2363, norm(output): 0.5234, norm(x): 0.4826, norm(y): 1.0135, norm:1.5856, tok/sec: 102544.36, flops:107.62, batch-reuse:1
@ 4454 train 4.3269 , allloss: 4.3335, dt: 1290.80ms, fracRes: 0.3647, norm(attn): 0.2354, norm(output): 0.5234, norm(x): 0.4823, norm(y): 1.0135, norm:1.5881, tok/sec: 101543.35, flops:106.57, batch-reuse:1
@ 4455 train 4.3364 , allloss: 4.3378, dt: 1308.96ms, fracRes: 0.3658, norm(attn): 0.2344, norm(output): 0.5234, norm(x): 0.4837, norm(y): 1.0135, norm:1.4129, tok/sec: 100134.57, flops:105.09, batch-reuse:1
@ 4456 train 4.4170 , allloss: 4.4179, dt: 1320.06ms, fracRes: 0.3663, norm(attn): 0.2363, norm(output): 0.5273, norm(x): 0.4828, norm(y): 1.0135, norm:1.4645, tok/sec: 99292.10, flops:104.21, batch-reuse:1
@ 4457 train 4.4308 , allloss: 4.4318, dt: 1339.80ms, fracRes: 0.3680, norm(attn): 0.2324, norm(output): 0.5273, norm(x): 0.4829, norm(y): 1.0135, norm:1.5268, tok/sec: 97829.69, flops:102.67, batch-reuse:1
@ 4458 train 4.2715 , allloss: 4.2737, dt: 1335.67ms, fracRes: 0.3675, norm(attn): 0.2334, norm(output): 0.5195, norm(x): 0.4831, norm(y): 1.0135, norm:1.4729, tok/sec: 98132.09, flops:102.99, batch-reuse:1
@ 4459 train 4.3206 , allloss: 4.3223, dt: 1330.49ms, fracRes: 0.3689, norm(attn): 0.2314, norm(output): 0.5273, norm(x): 0.4870, norm(y): 1.0135, norm:1.7244, tok/sec: 98514.16, flops:103.39, batch-reuse:1
@ 4460 train 4.4399 , allloss: 4.4417, dt: 1322.97ms, fracRes: 0.3675, norm(attn): 0.2334, norm(output): 0.5273, norm(x): 0.4858, norm(y): 1.0135, norm:1.5786, tok/sec: 99074.15, flops:103.98, batch-reuse:1
@ 4461 train 4.3683 , allloss: 4.3698, dt: 1317.19ms, fracRes: 0.3638, norm(attn): 0.2412, norm(output): 0.5195, norm(x): 0.4806, norm(y): 1.0134, norm:1.6449, tok/sec: 99508.97, flops:104.44, batch-reuse:1
@ 4462 train 4.4106 , allloss: 4.4116, dt: 1306.96ms, fracRes: 0.3671, norm(attn): 0.2334, norm(output): 0.5273, norm(x): 0.4825, norm(y): 1.0136, norm:1.5053, tok/sec: 100287.65, flops:105.25, batch-reuse:1
@ 4463 train 4.3918 , allloss: 4.3926, dt: 1339.33ms, fracRes: 0.3663, norm(attn): 0.2334, norm(output): 0.5195, norm(x): 0.4802, norm(y): 1.0136, norm:1.4177, tok/sec: 97863.63, flops:102.71, batch-reuse:1
@ 4464 train 4.3328 , allloss: 4.3341, dt: 1333.89ms, fracRes: 0.3670, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4865, norm(y): 1.0135, norm:1.4781, tok/sec: 98263.03, flops:103.13, batch-reuse:1
@ 4465 train 4.3641 , allloss: 4.3663, dt: 1338.81ms, fracRes: 0.3661, norm(attn): 0.2314, norm(output): 0.5273, norm(x): 0.4860, norm(y): 1.0135, norm:1.5684, tok/sec: 97901.54, flops:102.75, batch-reuse:1
@ 4466 train 4.3543 , allloss: 4.3575, dt: 1313.41ms, fracRes: 0.3669, norm(attn): 0.2344, norm(output): 0.5273, norm(x): 0.4839, norm(y): 1.0135, norm:1.5294, tok/sec: 99794.86, flops:104.74, batch-reuse:1
@ 4467 train 4.3333 , allloss: 4.3343, dt: 1288.20ms, fracRes: 0.3691, norm(attn): 0.2305, norm(output): 0.5273, norm(x): 0.4870, norm(y): 1.0136, norm:1.4005, tok/sec: 101747.83, flops:106.79, batch-reuse:1
@ 4468 train 4.3319 , allloss: 4.3331, dt: 1311.72ms, fracRes: 0.3670, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4882, norm(y): 1.0135, norm:1.7199, tok/sec: 99923.45, flops:104.87, batch-reuse:1
@ 4469 train 4.3522 , allloss: 4.3538, dt: 1353.38ms, fracRes: 0.3684, norm(attn): 0.2266, norm(output): 0.5312, norm(x): 0.4887, norm(y): 1.0136, norm:1.6830, tok/sec: 96847.62, flops:101.64, batch-reuse:1
@ 4470 train 4.4306 , allloss: 4.4316, dt: 1331.65ms, fracRes: 0.3672, norm(attn): 0.2285, norm(output): 0.5234, norm(x): 0.4835, norm(y): 1.0136, norm:1.4852, tok/sec: 98428.41, flops:103.30, batch-reuse:1
@ 4471 train 4.3086 , allloss: 4.3108, dt: 1306.18ms, fracRes: 0.3672, norm(attn): 0.2354, norm(output): 0.5273, norm(x): 0.4853, norm(y): 1.0134, norm:1.3771, tok/sec: 100347.45, flops:105.32, batch-reuse:1
@ 4472 train 4.3033 , allloss: 4.3203, dt: 1312.65ms, fracRes: 0.3689, norm(attn): 0.2314, norm(output): 0.5273, norm(x): 0.4883, norm(y): 1.0134, norm:1.7502, tok/sec: 99852.74, flops:104.80, batch-reuse:1
@ 4473 train 4.4310 , allloss: 4.4329, dt: 1286.49ms, fracRes: 0.3679, norm(attn): 0.2363, norm(output): 0.5234, norm(x): 0.4884, norm(y): 1.0135, norm:1.8307, tok/sec: 101883.27, flops:106.93, batch-reuse:1
@ 4474 train 4.3948 , allloss: 4.3958, dt: 1293.04ms, fracRes: 0.3673, norm(attn): 0.2354, norm(output): 0.5195, norm(x): 0.4836, norm(y): 1.0134, norm:1.8930, tok/sec: 101367.45, flops:106.39, batch-reuse:1
@ 4475 train 4.2656 , allloss: 4.2672, dt: 1293.96ms, fracRes: 0.3673, norm(attn): 0.2393, norm(output): 0.5234, norm(x): 0.4821, norm(y): 1.0133, norm:1.7435, tok/sec: 101295.09, flops:106.31, batch-reuse:1
@ 4476 train 4.3114 , allloss: 4.3129, dt: 1309.50ms, fracRes: 0.3704, norm(attn): 0.2344, norm(output): 0.5273, norm(x): 0.4888, norm(y): 1.0134, norm:1.7255, tok/sec: 100092.78, flops:105.05, batch-reuse:1
@ 4477 train 4.3884 , allloss: 4.3900, dt: 1301.13ms, fracRes: 0.3665, norm(attn): 0.2324, norm(output): 0.5273, norm(x): 0.4835, norm(y): 1.0134, norm:1.5391, tok/sec: 100737.14, flops:105.73, batch-reuse:1
@ 4478 train 4.2831 , allloss: 4.2843, dt: 1319.32ms, fracRes: 0.3662, norm(attn): 0.2344, norm(output): 0.5273, norm(x): 0.4812, norm(y): 1.0134, norm:1.6966, tok/sec: 99347.92, flops:104.27, batch-reuse:1
@ 4479 train 4.2789 , allloss: 4.2805, dt: 1308.96ms, fracRes: 0.3651, norm(attn): 0.2373, norm(output): 0.5273, norm(x): 0.4830, norm(y): 1.0134, norm:1.4643, tok/sec: 100134.63, flops:105.09, batch-reuse:1
@ 4480 train 4.3801 , allloss: 4.3818, dt: 1288.41ms, fracRes: 0.3684, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4869, norm(y): 1.0134, norm:1.7024, tok/sec: 101731.28, flops:106.77, batch-reuse:1
@ 4481 train 4.3702 , allloss: 4.3713, dt: 1306.73ms, fracRes: 0.3684, norm(attn): 0.2324, norm(output): 0.5273, norm(x): 0.4832, norm(y): 1.0135, norm:1.4466, tok/sec: 100305.03, flops:105.27, batch-reuse:1
@ 4482 train 4.4467 , allloss: 4.4477, dt: 1307.77ms, fracRes: 0.3683, norm(attn): 0.2305, norm(output): 0.5234, norm(x): 0.4803, norm(y): 1.0134, norm:1.6312, tok/sec: 100225.56, flops:105.19, batch-reuse:1
@ 4483 train 4.4510 , allloss: 4.4526, dt: 1289.57ms, fracRes: 0.3683, norm(attn): 0.2305, norm(output): 0.5273, norm(x): 0.4841, norm(y): 1.0134, norm:1.5414, tok/sec: 101640.47, flops:106.67, batch-reuse:1
@ 4484 train 4.2945 , allloss: 4.2954, dt: 1321.96ms, fracRes: 0.3708, norm(attn): 0.2305, norm(output): 0.5273, norm(x): 0.4847, norm(y): 1.0135, norm:1.6786, tok/sec: 99149.91, flops:104.06, batch-reuse:1
@ 4485 train 4.4154 , allloss: 4.4166, dt: 1312.38ms, fracRes: 0.3687, norm(attn): 0.2334, norm(output): 0.5234, norm(x): 0.4810, norm(y): 1.0135, norm:1.6167, tok/sec: 99873.78, flops:104.82, batch-reuse:1
@ 4486 train 4.3438 , allloss: 4.3451, dt: 1323.59ms, fracRes: 0.3706, norm(attn): 0.2285, norm(output): 0.5312, norm(x): 0.4853, norm(y): 1.0134, norm:1.5784, tok/sec: 99027.45, flops:103.93, batch-reuse:1
@ 4487 train 4.4021 , allloss: 4.4031, dt: 1322.10ms, fracRes: 0.3698, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4866, norm(y): 1.0135, norm:1.8249, tok/sec: 99139.18, flops:104.05, batch-reuse:1
@ 4488 train 4.4249 , allloss: 4.4259, dt: 1288.54ms, fracRes: 0.3686, norm(attn): 0.2324, norm(output): 0.5273, norm(x): 0.4852, norm(y): 1.0134, norm:1.6671, tok/sec: 101721.49, flops:106.76, batch-reuse:1
@ 4489 train 4.4210 , allloss: 4.4218, dt: 1309.29ms, fracRes: 0.3663, norm(attn): 0.2314, norm(output): 0.5234, norm(x): 0.4857, norm(y): 1.0135, norm:1.6508, tok/sec: 100109.06, flops:105.07, batch-reuse:1
@ 4490 train 4.4072 , allloss: 4.4079, dt: 1299.40ms, fracRes: 0.3675, norm(attn): 0.2295, norm(output): 0.5312, norm(x): 0.4921, norm(y): 1.0135, norm:1.4303, tok/sec: 100871.03, flops:105.87, batch-reuse:1
@ 4491 train 4.3662 , allloss: 4.3673, dt: 1286.69ms, fracRes: 0.3657, norm(attn): 0.2344, norm(output): 0.5352, norm(x): 0.4912, norm(y): 1.0134, norm:1.6809, tok/sec: 101867.81, flops:106.91, batch-reuse:1
@ 4492 train 4.4366 , allloss: 4.4388, dt: 1296.53ms, fracRes: 0.3640, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4904, norm(y): 1.0134, norm:1.5662, tok/sec: 101094.50, flops:106.10, batch-reuse:1
@ 4493 train 4.3169 , allloss: 4.3184, dt: 1330.75ms, fracRes: 0.3644, norm(attn): 0.2363, norm(output): 0.5273, norm(x): 0.4856, norm(y): 1.0135, norm:1.8164, tok/sec: 98494.52, flops:103.37, batch-reuse:1
@ 4494 train 4.3937 , allloss: 4.3976, dt: 1324.21ms, fracRes: 0.3681, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4922, norm(y): 1.0135, norm:1.8279, tok/sec: 98981.36, flops:103.88, batch-reuse:1
@ 4495 train 4.4048 , allloss: 4.4063, dt: 1343.31ms, fracRes: 0.3652, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4870, norm(y): 1.0134, norm:1.8708, tok/sec: 97573.96, flops:102.41, batch-reuse:1
@ 4496 train 4.4413 , allloss: 4.4423, dt: 1342.79ms, fracRes: 0.3649, norm(attn): 0.2314, norm(output): 0.5273, norm(x): 0.4848, norm(y): 1.0134, norm:1.5302, tok/sec: 97612.03, flops:102.45, batch-reuse:1
@ 4497 train 4.4350 , allloss: 4.4363, dt: 1344.48ms, fracRes: 0.3669, norm(attn): 0.2314, norm(output): 0.5273, norm(x): 0.4845, norm(y): 1.0135, norm:1.6974, tok/sec: 97489.14, flops:102.32, batch-reuse:1
@ 4498 train 4.3910 , allloss: 4.3921, dt: 1334.51ms, fracRes: 0.3677, norm(attn): 0.2314, norm(output): 0.5273, norm(x): 0.4848, norm(y): 1.0135, norm:1.6192, tok/sec: 98217.28, flops:103.08, batch-reuse:1
@ 4499 train 4.4254 , allloss: 4.4270, dt: 1315.87ms, fracRes: 0.3682, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4866, norm(y): 1.0135, norm:1.7101, tok/sec: 99608.66, flops:104.54, batch-reuse:1
@ 4500 train 4.3183 , allloss: 4.3204, dt: 1294.41ms, fracRes: 0.3677, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4893, norm(y): 1.0134, norm:1.4802, tok/sec: 101260.16, flops:106.27, batch-reuse:1
@ 4501 train 4.3381 , allloss: 4.3395, dt: 1318.01ms, fracRes: 0.3684, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4898, norm(y): 1.0135, norm:1.4966, tok/sec: 99446.83, flops:104.37, batch-reuse:1
@ 4502 train 4.3860 , allloss: 4.3867, dt: 1324.23ms, fracRes: 0.3679, norm(attn): 0.2344, norm(output): 0.5273, norm(x): 0.4872, norm(y): 1.0135, norm:1.5791, tok/sec: 98980.00, flops:103.88, batch-reuse:1
@ 4503 train 4.3705 , allloss: 4.3714, dt: 1326.94ms, fracRes: 0.3659, norm(attn): 0.2363, norm(output): 0.5234, norm(x): 0.4850, norm(y): 1.0136, norm:1.3792, tok/sec: 98777.31, flops:103.67, batch-reuse:1
@ 4504 train 4.2691 , allloss: 4.2698, dt: 1303.51ms, fracRes: 0.3638, norm(attn): 0.2402, norm(output): 0.5195, norm(x): 0.4812, norm(y): 1.0134, norm:1.4076, tok/sec: 100553.02, flops:105.53, batch-reuse:1
@ 4505 train 4.3461 , allloss: 4.3474, dt: 1289.65ms, fracRes: 0.3663, norm(attn): 0.2354, norm(output): 0.5273, norm(x): 0.4826, norm(y): 1.0134, norm:1.5172, tok/sec: 101633.76, flops:106.67, batch-reuse:1
@ 4506 train 4.4083 , allloss: 4.4099, dt: 1312.41ms, fracRes: 0.3646, norm(attn): 0.2373, norm(output): 0.5273, norm(x): 0.4827, norm(y): 1.0134, norm:1.5632, tok/sec: 99870.88, flops:104.82, batch-reuse:1
@ 4507 train 4.4022 , allloss: 4.4030, dt: 1320.19ms, fracRes: 0.3647, norm(attn): 0.2363, norm(output): 0.5234, norm(x): 0.4803, norm(y): 1.0134, norm:1.4298, tok/sec: 99282.66, flops:104.20, batch-reuse:1
@ 4508 train 4.3194 , allloss: 4.3204, dt: 1269.39ms, fracRes: 0.3672, norm(attn): 0.2363, norm(output): 0.5273, norm(x): 0.4828, norm(y): 1.0134, norm:1.6817, tok/sec: 103255.60, flops:108.37, batch-reuse:1
@ 4509 train 4.3929 , allloss: 4.3944, dt: 1284.70ms, fracRes: 0.3664, norm(attn): 0.2383, norm(output): 0.5234, norm(x): 0.4827, norm(y): 1.0134, norm:1.4881, tok/sec: 102025.10, flops:107.08, batch-reuse:1
@ 4510 train 4.3982 , allloss: 4.3998, dt: 1301.02ms, fracRes: 0.3679, norm(attn): 0.2354, norm(output): 0.5273, norm(x): 0.4846, norm(y): 1.0134, norm:1.6771, tok/sec: 100745.45, flops:105.73, batch-reuse:1
@ 4511 train 4.2730 , allloss: 4.2741, dt: 1315.83ms, fracRes: 0.3666, norm(attn): 0.2363, norm(output): 0.5273, norm(x): 0.4800, norm(y): 1.0134, norm:1.4594, tok/sec: 99611.71, flops:104.54, batch-reuse:1
@ 4512 train 4.3619 , allloss: 4.3628, dt: 1314.46ms, fracRes: 0.3676, norm(attn): 0.2334, norm(output): 0.5273, norm(x): 0.4809, norm(y): 1.0135, norm:1.6508, tok/sec: 99715.14, flops:104.65, batch-reuse:1
@ 4513 train 4.3547 , allloss: 4.3560, dt: 1309.23ms, fracRes: 0.3682, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4819, norm(y): 1.0135, norm:1.3879, tok/sec: 100113.86, flops:105.07, batch-reuse:1
@ 4514 train 4.3109 , allloss: 4.3117, dt: 1312.83ms, fracRes: 0.3682, norm(attn): 0.2344, norm(output): 0.5273, norm(x): 0.4820, norm(y): 1.0135, norm:1.4880, tok/sec: 99839.52, flops:104.78, batch-reuse:1
@ 4515 train 4.3831 , allloss: 4.3842, dt: 1305.23ms, fracRes: 0.3713, norm(attn): 0.2285, norm(output): 0.5312, norm(x): 0.4851, norm(y): 1.0136, norm:1.5056, tok/sec: 100420.33, flops:105.39, batch-reuse:1
@ 4516 train 4.3272 , allloss: 4.3284, dt: 1279.01ms, fracRes: 0.3704, norm(attn): 0.2305, norm(output): 0.5312, norm(x): 0.4837, norm(y): 1.0135, norm:1.4938, tok/sec: 102478.87, flops:107.55, batch-reuse:1
@ 4517 train 4.3377 , allloss: 4.3388, dt: 1304.96ms, fracRes: 0.3711, norm(attn): 0.2305, norm(output): 0.5312, norm(x): 0.4877, norm(y): 1.0135, norm:1.5054, tok/sec: 100441.41, flops:105.42, batch-reuse:1
@ 4518 train 4.3635 , allloss: 4.3642, dt: 1289.32ms, fracRes: 0.3674, norm(attn): 0.2334, norm(output): 0.5273, norm(x): 0.4835, norm(y): 1.0135, norm:1.4257, tok/sec: 101659.43, flops:106.69, batch-reuse:1
@ 4519 train 4.4073 , allloss: 4.4080, dt: 1297.90ms, fracRes: 0.3677, norm(attn): 0.2363, norm(output): 0.5273, norm(x): 0.4839, norm(y): 1.0134, norm:1.5596, tok/sec: 100987.90, flops:105.99, batch-reuse:1
@ 4520 train 4.4451 , allloss: 4.4462, dt: 1316.61ms, fracRes: 0.3650, norm(attn): 0.2402, norm(output): 0.5234, norm(x): 0.4829, norm(y): 1.0133, norm:1.4038, tok/sec: 99552.29, flops:104.48, batch-reuse:1
@ 4521 train 4.4071 , allloss: 4.4081, dt: 1307.05ms, fracRes: 0.3663, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4839, norm(y): 1.0134, norm:1.4821, tok/sec: 100280.93, flops:105.25, batch-reuse:1
@ 4522 train 4.4495 , allloss: 4.4504, dt: 1307.70ms, fracRes: 0.3676, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4847, norm(y): 1.0135, norm:1.4308, tok/sec: 100230.71, flops:105.19, batch-reuse:1
@ 4523 train 4.4257 , allloss: 4.4263, dt: 1292.19ms, fracRes: 0.3672, norm(attn): 0.2344, norm(output): 0.5273, norm(x): 0.4849, norm(y): 1.0135, norm:1.2429, tok/sec: 101433.79, flops:106.46, batch-reuse:1
@ 4524 train 4.3651 , allloss: 4.3668, dt: 1332.44ms, fracRes: 0.3683, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4840, norm(y): 1.0134, norm:1.4348, tok/sec: 98369.99, flops:103.24, batch-reuse:1
@ 4525 train 4.3542 , allloss: 4.3608, dt: 1312.13ms, fracRes: 0.3685, norm(attn): 0.2305, norm(output): 0.5312, norm(x): 0.4826, norm(y): 1.0135, norm:1.4540, tok/sec: 99892.60, flops:104.84, batch-reuse:1
@ 4526 train 4.4596 , allloss: 4.4627, dt: 1279.85ms, fracRes: 0.3682, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4945, norm(y): 1.0136, norm:1.5998, tok/sec: 102411.89, flops:107.48, batch-reuse:1
@ 4527 train 4.3042 , allloss: 4.3047, dt: 1289.28ms, fracRes: 0.3689, norm(attn): 0.2305, norm(output): 0.5391, norm(x): 0.4928, norm(y): 1.0136, norm:1.7419, tok/sec: 101662.61, flops:106.70, batch-reuse:1
@ 4528 train 4.3500 , allloss: 4.3507, dt: 1284.30ms, fracRes: 0.3692, norm(attn): 0.2256, norm(output): 0.5312, norm(x): 0.4845, norm(y): 1.0136, norm:1.4200, tok/sec: 102056.84, flops:107.11, batch-reuse:1
@ 4529 train 4.3773 , allloss: 4.3788, dt: 1297.20ms, fracRes: 0.3673, norm(attn): 0.2305, norm(output): 0.5312, norm(x): 0.4869, norm(y): 1.0134, norm:1.4227, tok/sec: 101042.58, flops:106.05, batch-reuse:1
@ 4530 train 4.3427 , allloss: 4.3440, dt: 1303.77ms, fracRes: 0.3701, norm(attn): 0.2236, norm(output): 0.5312, norm(x): 0.4885, norm(y): 1.0135, norm:1.3872, tok/sec: 100533.27, flops:105.51, batch-reuse:1
@ 4531 train 4.3755 , allloss: 4.3768, dt: 1291.66ms, fracRes: 0.3691, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4891, norm(y): 1.0134, norm:1.5226, tok/sec: 101475.32, flops:106.50, batch-reuse:1
@ 4532 train 4.3803 , allloss: 4.3810, dt: 1309.78ms, fracRes: 0.3680, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4851, norm(y): 1.0134, norm:1.4529, tok/sec: 100071.43, flops:105.03, batch-reuse:1
@ 4533 train 4.4212 , allloss: 4.4223, dt: 1315.07ms, fracRes: 0.3673, norm(attn): 0.2383, norm(output): 0.5312, norm(x): 0.4852, norm(y): 1.0134, norm:1.6455, tok/sec: 99668.90, flops:104.60, batch-reuse:1
@ 4534 train 4.4413 , allloss: 4.4431, dt: 1309.15ms, fracRes: 0.3679, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4879, norm(y): 1.0135, norm:1.3841, tok/sec: 100120.00, flops:105.08, batch-reuse:1
@ 4535 train 4.4435 , allloss: 4.4444, dt: 1302.54ms, fracRes: 0.3680, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4863, norm(y): 1.0135, norm:1.5960, tok/sec: 100627.69, flops:105.61, batch-reuse:1
@ 4536 train 4.4238 , allloss: 4.4245, dt: 1333.00ms, fracRes: 0.3684, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4883, norm(y): 1.0135, norm:1.4383, tok/sec: 98328.60, flops:103.20, batch-reuse:1
@ 4537 train 4.3463 , allloss: 4.3477, dt: 1308.49ms, fracRes: 0.3680, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4883, norm(y): 1.0135, norm:1.4991, tok/sec: 100170.42, flops:105.13, batch-reuse:1
@ 4538 train 4.3544 , allloss: 4.3556, dt: 1299.72ms, fracRes: 0.3682, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4839, norm(y): 1.0134, norm:1.3130, tok/sec: 100846.09, flops:105.84, batch-reuse:1
@ 4539 train 4.3500 , allloss: 4.3510, dt: 1292.97ms, fracRes: 0.3693, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4864, norm(y): 1.0134, norm:1.4290, tok/sec: 101372.42, flops:106.39, batch-reuse:1
@ 4540 train 4.2937 , allloss: 4.2949, dt: 1295.22ms, fracRes: 0.3695, norm(attn): 0.2354, norm(output): 0.5273, norm(x): 0.4820, norm(y): 1.0135, norm:1.4324, tok/sec: 101196.55, flops:106.21, batch-reuse:1
@ 4541 train 4.3409 , allloss: 4.3428, dt: 1292.85ms, fracRes: 0.3697, norm(attn): 0.2324, norm(output): 0.5273, norm(x): 0.4853, norm(y): 1.0135, norm:1.4199, tok/sec: 101382.55, flops:106.40, batch-reuse:1
@ 4542 train 4.1565 , allloss: 4.1585, dt: 1273.16ms, fracRes: 0.3730, norm(attn): 0.2305, norm(output): 0.5312, norm(x): 0.4919, norm(y): 1.0135, norm:1.5947, tok/sec: 102949.89, flops:108.05, batch-reuse:1
@ 4543 train 4.3462 , allloss: 4.3479, dt: 1297.66ms, fracRes: 0.3673, norm(attn): 0.2363, norm(output): 0.5273, norm(x): 0.4851, norm(y): 1.0135, norm:1.4030, tok/sec: 101006.27, flops:106.01, batch-reuse:1
@ 4544 train 4.3470 , allloss: 4.3480, dt: 1314.81ms, fracRes: 0.3679, norm(attn): 0.2324, norm(output): 0.5273, norm(x): 0.4829, norm(y): 1.0135, norm:1.5968, tok/sec: 99688.65, flops:104.63, batch-reuse:1
@ 4545 train 4.3305 , allloss: 4.3314, dt: 1286.51ms, fracRes: 0.3681, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4850, norm(y): 1.0135, norm:1.5929, tok/sec: 101881.99, flops:106.93, batch-reuse:1
@ 4546 train 4.2592 , allloss: 4.2598, dt: 1309.00ms, fracRes: 0.3682, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4866, norm(y): 1.0134, norm:1.4708, tok/sec: 100131.23, flops:105.09, batch-reuse:1
@ 4547 train 4.3646 , allloss: 4.3655, dt: 1292.53ms, fracRes: 0.3676, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4834, norm(y): 1.0134, norm:1.5500, tok/sec: 101406.96, flops:106.43, batch-reuse:1
@ 4548 train 4.3517 , allloss: 4.3527, dt: 1310.24ms, fracRes: 0.3662, norm(attn): 0.2354, norm(output): 0.5273, norm(x): 0.4810, norm(y): 1.0134, norm:1.2983, tok/sec: 100036.60, flops:104.99, batch-reuse:1
@ 4549 train 4.2714 , allloss: 4.2723, dt: 1307.89ms, fracRes: 0.3652, norm(attn): 0.2363, norm(output): 0.5273, norm(x): 0.4858, norm(y): 1.0134, norm:1.5225, tok/sec: 100216.18, flops:105.18, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0184, 0.9805, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3730, 0.2539, 0.3730, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.3633, 0.2217, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3926, 0.0713, 0.0908, 0.0581, 0.3887, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3281, 0.0674, 0.2334, 0.0140, 0.2168, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.0762, 0.0903, 0.2676, 0.1963, 0.0825, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0593, 0.0825, 0.0564, 0.6055, 0.0537, 0.0393, 0.0442, 0.0610, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.0378, 0.0503, 0.0168, 0.0664, 0.0933, 0.1943, 0.2158, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.0894, 0.1211, 0.1309, 0.1006, 0.0439, 0.0518, 0.2080, 0.0564, 0.0515, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.0201, 0.0288, 0.0070, 0.0791, 0.1152, 0.1523, 0.0192, 0.2598, 0.2051, 0.0483, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.0771, 0.1357, 0.0205, 0.0332, 0.0403, 0.1680, 0.1426, 0.0649, 0.0557, 0.0757, 0.0198, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.1001, 0.0840, 0.0718, 0.0923, 0.0233, 0.0532, 0.0962, 0.1245, 0.0510, 0.0571, 0.0562, 0.0581, 0.0000, 0.0000],
        [0.0801, 0.0299, 0.0464, 0.0161, 0.0432, 0.0476, 0.0986, 0.0986, 0.1611, 0.0559, 0.0215, 0.0137, 0.0408, 0.2461, 0.0000],
        [0.1011, 0.0216, 0.1084, 0.0767, 0.0320, 0.0223, 0.0718, 0.1582, 0.0276, 0.0369, 0.0659, 0.0549, 0.0928, 0.0454, 0.0845]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0124,  0.0340, -0.0373,  ..., -0.0102,  0.0108,  0.0260],
        [ 0.0446,  0.0176,  0.0043,  ..., -0.0076, -0.0116, -0.0311],
        [ 0.0018,  0.0163,  0.0081,  ..., -0.0055,  0.0055, -0.0119],
        ...,
        [-0.0376,  0.0219, -0.0071,  ...,  0.0170, -0.0140,  0.0028],
        [ 0.0517, -0.0118, -0.0195,  ...,  0.0252,  0.0052, -0.0089],
        [ 0.0010,  0.0056,  0.0337,  ..., -0.0093, -0.0259,  0.0300]], device='cuda:0', requires_grad=True)
K: tensor([-0.8047,  0.9414,  0.4512, -1.1094, -0.6094,  0.7227,  0.8398,  0.2656,  0.0479, -0.2891,  1.4375,  0.6992,  0.0981,  0.5820,  0.0099, -0.5195, -0.2080, -0.5820,  0.0178,  0.4043,  0.3477, -0.3965, -0.2773, -0.0483,  0.0811,  0.3574, -0.0306, -0.6445, -0.7773,  0.7344, -0.6055, -0.6250,
        -0.3301, -0.7852, -0.6250,  0.4336,  0.5820, -0.4551,  0.1934,  0.5859,  0.3066,  0.2295,  0.3867,  0.2393,  0.0283,  0.1245,  0.1416, -0.4414,  1.4922,  0.4707,  0.4277, -0.4102, -0.6758,  0.9727, -0.1206,  0.4004, -0.1016,  0.4688, -1.1250,  0.5898,  0.2354, -0.3965,  0.5391, -1.2891],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0283,  0.0003,  0.0080,  ...,  0.0326,  0.0050, -0.0207],
        [ 0.0150,  0.0329, -0.0221,  ...,  0.0017,  0.0109, -0.0209],
        [ 0.0039, -0.0273,  0.0032,  ...,  0.0491,  0.0064, -0.0265],
        ...,
        [ 0.0218,  0.0127,  0.0015,  ..., -0.0168, -0.0119,  0.0083],
        [-0.0242, -0.0172,  0.0158,  ...,  0.0314, -0.0131,  0.0208],
        [ 0.0308,  0.0041, -0.0114,  ..., -0.0429, -0.0250, -0.0033]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5391,  0.3047, -0.3535, -0.1748, -0.1436, -0.7500,  0.7695,  0.6211,  0.0913,  1.2578, -1.1562,  0.1787, -0.7852, -0.2314, -0.6562,  0.1309, -0.9297, -0.5547, -0.1963,  0.2393,  0.4258,  0.2598, -0.4902, -0.2402, -0.6328, -0.4746, -0.6992,  0.2100, -0.6992, -1.0703, -0.1157, -0.7344,
        -0.4883, -0.0581, -0.2344,  0.4297, -0.4375, -0.0192, -0.7656, -0.9531, -0.0118,  0.2090,  0.1699, -1.0938, -0.6484, -0.3965,  0.3418,  0.2314, -0.3730,  0.9414, -0.3730, -0.2305,  0.6992,  0.7070, -0.0295,  0.1602,  0.5547, -0.3438, -0.4160,  0.5625,  0.3984,  0.8320, -0.7734,  0.3555],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.9688,  0.3887,  1.5625,  0.3301,  1.7031,  0.9648,  0.4375, -0.5195,  0.7812,  1.4531,  2.7344,  1.8438, -0.4902,  1.1719],
        [ 0.0000, -0.3809,  0.0047,  3.0156, -0.0674, -0.4375, -0.3613,  0.1030, -1.0781, -0.7656,  1.2891,  2.5781,  2.3906, -0.7461,  1.2734],
        [ 0.0000,  0.1719, -0.3203, -1.0156, -1.6406, -1.3594,  0.1514,  0.2832, -1.4844, -0.5898, -0.3281, -0.5234, -0.0825, -1.0469,  0.4590],
        [ 0.0000, -1.7031, -1.4609, -1.9062, -0.0098, -0.0311,  0.5273, -0.8594,  1.2656,  0.3066, -0.2363, -1.7266, -1.0703,  1.3516, -0.8477],
        [ 0.0000, -1.5859, -0.3418, -3.1562, -0.4160, -0.8477,  0.1377, -0.2695,  0.9648,  0.1104, -1.4453, -3.2188, -2.5156,  0.7500, -1.3750],
        [ 0.0000, -0.8906, -0.7188,  0.3672,  0.0552, -0.8086, -0.6133, -0.3691,  0.4512,  0.2012,  0.4336,  0.8984,  0.5547,  0.4180,  0.5273],
        [ 0.0000,  0.3301, -0.0496,  2.3281, -0.0996, -0.4121, -0.2949,  0.0295, -0.8594, -0.9531,  0.9961,  1.4688,  1.5156, -1.0078,  0.7891],
        [ 0.0000, -1.2734, -0.9883, -2.0781, -0.7070, -0.3672,  0.3672,  0.4727,  0.3398, -0.2812, -0.9766, -2.1719, -1.2422,  1.0234, -0.2246],
        [ 0.0000, -0.5000, -0.1924, -0.1172, -0.3789, -1.2031, -1.0391,  0.3457, -0.9570, -1.0469,  0.1094, -0.5391, -0.4922, -1.1797, -0.3398],
        [ 0.0000, -1.1797, -0.8164, -2.2188,  0.1924,  0.5703,  0.8477, -1.2266,  1.3828,  1.1484, -0.2988, -1.7891, -1.8047,  1.2500, -0.7891],
        [ 0.0000, -0.7695, -0.2080, -2.0938, -1.6172, -1.4141,  0.0082, -0.1562, -0.9453, -1.0938, -0.7930, -2.1250, -1.7422, -1.0234, -0.7734],
        [ 0.0000, -0.2812, -0.4531, -0.6094, -0.3613, -1.7344, -0.9102, -0.3184, -0.0586, -0.9531, -0.8398, -0.8555, -0.8242,  0.0942, -0.7070],
        [ 0.0000, -0.9844, -0.5430, -1.6016, -0.6133, -0.5156,  0.2100,  0.2109,  0.6992, -0.3574, -1.3203, -1.7656, -0.6719,  1.1250, -0.3828],
        [ 0.0000, -1.5391,  0.0669, -0.2812, -1.1562, -1.5156, -0.3418,  0.4473, -1.2969, -1.0078, -0.4277, -0.6094, -0.0854, -0.8047, -0.1787]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3623],
        [0.4883],
        [0.2948],
        [0.3475],
        [0.3468],
        [0.1308],
        [0.2035],
        [0.1302],
        [0.1538],
        [0.0926],
        [0.1593],
        [0.1866],
        [0.0872],
        [0.0884]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7734,     0.2256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7266,     0.1416,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2324,     0.0016,     0.7656,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4375,     0.0225,     0.4629,     0.0752,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4727,     0.0347,     0.0850,     0.0176,     0.0005,     0.3906,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3496,     0.0625,     0.0884,     0.0031,     0.0006,     0.4062,     0.0903,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1924,     0.0898,     0.3809,     0.0212,     0.0046,     0.1250,     0.1250,     0.0598,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3223,     0.0581,     0.2275,     0.0124,     0.0004,     0.0723,     0.0986,     0.2002,     0.0093,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5195,     0.0146,     0.0649,     0.0068,     0.0003,     0.0189,     0.0139,     0.2451,     0.0038,     0.1133,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7305,     0.0071,     0.1465,     0.0233,     0.0003,     0.0132,     0.0160,     0.0205,     0.0134,     0.0278,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3477,     0.0791,     0.0674,     0.0094,     0.0021,     0.1396,     0.1108,     0.0688,     0.0055,     0.0310,     0.0027,     0.1357,     0.0000,     0.0000,     0.0000],
        [    0.1328,     0.0123,     0.3438,     0.0128,     0.0005,     0.0164,     0.0167,     0.0181,     0.0042,     0.0640,     0.0003,     0.2871,     0.0913,     0.0000,     0.0000],
        [    0.3418,     0.0422,     0.1572,     0.0070,     0.0002,     0.0425,     0.0664,     0.1050,     0.0065,     0.0078,     0.0001,     0.1240,     0.0918,     0.0072,     0.0000],
        [    0.1328,     0.0801,     0.0131,     0.0132,     0.0041,     0.0811,     0.1484,     0.0347,     0.0854,     0.0049,     0.0566,     0.0119,     0.0417,     0.1006,     0.1914]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0222, -0.0172, -0.0503,  ...,  0.0332, -0.0189,  0.0235],
        [ 0.0083, -0.0060, -0.0403,  ...,  0.0811, -0.0308,  0.0197],
        [-0.0016, -0.0485, -0.0820,  ...,  0.0529, -0.0274, -0.0012],
        ...,
        [-0.0257,  0.0062,  0.0158,  ...,  0.0095,  0.0241,  0.0519],
        [ 0.0037, -0.0166, -0.0477,  ...,  0.0274,  0.0215,  0.0058],
        [ 0.0110,  0.0381, -0.0031,  ..., -0.0248,  0.0111,  0.0387]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4297,  0.5312, -1.3750, -1.7812, -0.7422,  0.7305, -1.7422, -1.3281,  2.0469, -0.5547, -1.5156,  0.0420, -0.0216, -0.3262,  0.2754,  0.0630,  0.2002, -0.5898, -0.6289,  1.4141,  1.3125,  1.0781, -0.7578, -0.6680, -0.9258,  0.5312,  0.7812, -1.1641, -0.6758,  1.7500,  0.5430, -0.0540,
         0.2090,  0.6641, -0.6055, -0.4375, -0.8555,  1.2500,  1.1953,  1.0234, -1.8750, -0.1523, -0.0474,  1.0547, -1.0859,  0.9453,  0.9570,  0.6914,  0.1226, -0.1768, -0.8398,  0.2715, -0.5703,  0.9258,  0.2158,  0.9219, -0.3008, -0.6641,  0.4824, -0.0972,  0.6016,  0.3457,  0.2832,  0.3145],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0262,  0.0184, -0.0062,  ..., -0.0043,  0.0259,  0.0048],
        [ 0.0182,  0.0224,  0.0449,  ..., -0.0288,  0.0149,  0.0263],
        [ 0.0314,  0.0192,  0.0213,  ..., -0.0299,  0.0363, -0.0011],
        ...,
        [-0.0020, -0.0363, -0.0107,  ...,  0.0163, -0.0511,  0.0154],
        [-0.0092, -0.0187,  0.0234,  ..., -0.0025, -0.0156,  0.0148],
        [-0.0137, -0.0593,  0.0214,  ...,  0.0171,  0.0077,  0.0115]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.7031, -0.3613, -0.5352, -1.3828,  1.8281, -1.2266, -0.8125,  1.9766,  1.0703,  0.2520,  1.2500, -0.9883,  0.0547, -0.0145, -0.1309, -1.5625,  0.0859,  1.3359,  1.3125, -0.7773, -0.1211, -0.2734,  1.1172,  0.2734,  1.5859,  1.7344,  1.1094, -1.5625,  0.3145, -0.2080,  0.8633,  2.0625,
         0.5078, -0.3633,  0.6914,  0.3301, -0.2988,  0.3457,  0.3164, -1.4453, -0.3223, -0.8359, -1.9844, -1.8828,  0.2422,  2.2969, -0.2520, -0.7383,  1.4375, -0.6094, -0.9258, -1.5703, -1.3047, -0.2754,  1.2266,  1.8828,  0.9531,  1.4062,  0.5078, -0.3828,  1.1484, -0.3965, -0.2656,  0.7188],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -1.2344,  -1.4453,  -2.6406,  -5.8750,  -1.0000,  -0.4062,  -2.9219,  -2.2969,  -3.8594,  -3.2812,  -2.3594,  -2.3438,  -2.0625,   1.5547],
        [  0.0000,  -1.6328,  -1.7031,  -3.7656,  -5.7188,  -1.3828,  -0.5898,  -1.3984,  -4.9062,  -4.1562,  -5.5625,  -2.5781,  -1.5391,  -4.6875,  -1.5000],
        [  0.0000,  -4.9688,   1.1875,  -4.7188, -10.8125,  -5.8125,  -4.4688,  -3.4375,  -7.4062,  -3.5000, -10.5625,  -1.0781,  -4.1562,  -7.3125,  -1.3672],
        [  0.0000,  -2.9688,   0.0581,  -1.7578,  -5.9375,  -0.9531,  -1.2109,   1.2656,  -2.7969,  -1.2969,  -5.2500,   0.5547,   1.9297,  -2.0469,  -0.5781],
        [  0.0000,  -2.6094,  -1.7188,  -3.2969,  -6.7500,  -0.1904,  -1.4141,  -0.2578,  -5.8125,  -1.9922,  -6.8125,  -1.0938,   1.3125,  -5.2500,  -1.2734],
        [  0.0000,  -1.7188,  -1.3750,  -4.7188,  -6.3438,   0.1494,  -1.3516,  -1.7578,  -4.1875,  -3.2031,  -7.0625,  -0.5391,  -0.6680,  -3.7969,  -0.9727],
        [  0.0000,  -0.7617,   0.6836,  -2.2031,  -3.7344,  -0.4336,  -0.4297,  -1.1719,  -1.9922,  -1.6484,  -4.0625,   1.5078,  -0.0923,  -1.5625,   0.9688],
        [  0.0000,  -1.7109,  -0.3477,  -3.2500,  -6.6875,  -1.4922,  -1.1797,  -0.4746,  -3.5469,  -3.1250,  -7.2500,  -0.5117,  -0.3496,  -3.3750,  -0.3926],
        [  0.0000,  -3.5781,  -2.0781,  -4.3438,  -7.5000,  -3.3125,  -3.6250,  -0.7500,  -4.9375,  -1.5234,  -6.9062,  -1.2188,  -0.1279,  -4.5000,  -2.4531],
        [  0.0000,  -4.6250,  -1.6094,  -3.4531,  -7.6562,  -4.0312,  -3.8125,  -3.5781,  -4.0000,  -3.2656,  -7.0000,  -1.8906,  -2.4688,  -3.6094,  -1.1641],
        [  0.0000,  -1.4844,  -1.6406,  -3.6094,  -5.0938,  -0.9102,  -1.1406,  -1.6172,  -4.1562,  -2.4219,  -4.8750,  -0.9453,  -1.1875,  -3.8750,  -0.6602],
        [  0.0000,  -2.3906,   0.9492,  -2.3438,  -5.6250,  -2.0938,  -2.0781,  -2.0000,  -3.4688,  -0.7344,  -5.9375,   0.7656,  -0.3770,  -2.9375,   0.2021],
        [  0.0000,  -2.0938,  -0.7773,  -3.8750,  -7.3125,  -2.0781,  -1.6328,  -1.1797,  -3.9531,  -3.7812,  -8.1250,  -1.0156,  -1.3125,  -3.8594,  -0.9141],
        [  0.0000,  -0.5078,  -2.3125,  -2.3125,  -3.4844,  -0.4961,   0.1074,  -1.3438,  -0.4434,  -3.2969,  -0.8555,  -2.4062,  -1.1562,  -0.2793,   0.3633]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5843],
        [0.5670],
        [0.5062],
        [0.5695],
        [0.5421],
        [0.5416],
        [0.4706],
        [0.5598],
        [0.4388],
        [0.5980],
        [0.4846],
        [0.4849],
        [0.5747],
        [0.5122]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0214, -0.0335, -0.0222,  ...,  0.0211,  0.0174,  0.0463],
        [-0.0037,  0.0071,  0.0535,  ..., -0.0168,  0.0321,  0.0088],
        [ 0.0184, -0.0232, -0.0455,  ..., -0.0002, -0.0108,  0.0490],
        ...,
        [ 0.0107,  0.0227,  0.0092,  ..., -0.0483,  0.0154, -0.0256],
        [ 0.0128, -0.0286, -0.0369,  ...,  0.0249, -0.0031,  0.0342],
        [ 0.0283,  0.0082,  0.0265,  ..., -0.0082,  0.0047, -0.0193]], device='cuda:0', requires_grad=True)
K: tensor([-0.2031, -1.1484, -1.6484,  0.9570, -0.0264,  0.2471,  1.7578,  2.9688,  0.9805, -1.8828, -1.8281, -2.3906,  0.2119, -2.5469,  3.3281, -1.8125,  1.6172, -0.4492, -1.6328, -1.9375,  2.0312, -2.1875, -1.3047,  1.3281,  0.7734, -1.7422, -0.2949, -1.2656,  0.0859, -2.5000, -3.1406, -1.4766,
         3.3750,  0.1680,  2.0312, -2.8281, -0.3730,  2.7812, -2.1562,  4.0938,  1.6094,  1.3125,  0.6719, -2.6562, -0.5234, -1.5234, -0.6328,  2.8750,  3.3281, -1.1797, -2.2812, -0.5859,  2.3125, -1.9766,  2.6094,  1.2188,  1.8438, -1.1484,  1.3359,  1.5469,  2.1875,  3.2344, -2.3594,  1.9766],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0657,  0.0224,  0.0315,  ..., -0.0222,  0.0125, -0.0206],
        [-0.0303, -0.0109, -0.0369,  ...,  0.0487, -0.0292,  0.0292],
        [ 0.0134,  0.0023,  0.0344,  ..., -0.0728,  0.0354, -0.0068],
        ...,
        [-0.0179, -0.0031, -0.0116,  ...,  0.0366, -0.0195,  0.0301],
        [-0.0061, -0.0061,  0.0189,  ..., -0.0564,  0.0364, -0.0175],
        [-0.0297,  0.0089, -0.0413,  ...,  0.0655, -0.0310, -0.0008]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7812,  0.2158,  1.1875, -1.4453, -0.9297, -1.6484, -1.6094, -1.8672, -1.6094,  1.4766,  1.6719,  1.6562, -0.5781,  3.2969, -2.2031,  1.2891, -0.7578,  0.2754,  1.8906,  1.3125, -0.9805,  1.0000,  1.6406, -0.6680, -1.2344,  1.3672,  0.9023,  2.1562,  0.4766,  1.3438,  1.8984,  0.3965,
        -2.4219, -0.0259, -0.9141,  2.0625,  1.1328, -2.0781,  1.1172, -1.6406, -1.4297, -1.1328, -0.6680,  1.8516, -0.2520,  0.9219,  0.8008, -1.2734, -1.8516,  0.7812,  1.3438,  1.2109, -1.2344,  1.1172, -1.6016, -0.3047, -2.2031,  0.6836, -1.6953, -0.6641, -1.8750, -1.5000,  1.2578, -1.0859],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -13.9375, -12.0000, -16.0000, -16.5000, -16.3750, -16.5000, -13.7500, -17.3750, -13.5625, -15.8750, -14.4375, -16.8750, -17.6250, -14.0000],
        [  0.0000, -14.1875, -15.2500, -18.7500, -17.0000, -17.6250, -18.3750, -16.7500, -19.0000, -16.0000, -15.8125, -16.2500, -20.8750, -19.5000, -16.6250],
        [  0.0000, -18.1250, -20.1250, -25.8750, -21.5000, -22.2500, -23.7500, -21.2500, -24.7500, -20.7500, -20.7500, -20.6250, -26.8750, -25.6250, -22.8750],
        [  0.0000, -16.3750, -16.0000, -20.2500, -20.3750, -20.3750, -21.0000, -18.2500, -21.1250, -18.2500, -19.1250, -18.1250, -22.7500, -21.6250, -18.0000],
        [  0.0000, -17.2500, -16.7500, -21.1250, -21.2500, -21.7500, -22.1250, -19.2500, -22.3750, -18.8750, -19.8750, -19.2500, -23.8750, -23.0000, -18.7500],
        [  0.0000, -18.0000, -19.2500, -23.7500, -22.3750, -23.0000, -24.1250, -21.2500, -24.0000, -21.0000, -20.7500, -20.8750, -26.6250, -24.7500, -21.2500],
        [  0.0000, -15.5000, -16.8750, -20.7500, -19.0000, -19.0000, -20.1250, -19.3750, -20.5000, -18.3750, -17.5000, -17.7500, -23.5000, -21.0000, -18.6250],
        [  0.0000, -19.3750, -19.5000, -25.1250, -23.6250, -24.1250, -24.7500, -21.7500, -25.7500, -21.5000, -22.7500, -21.6250, -27.1250, -26.5000, -22.0000],
        [  0.0000, -15.0000, -15.1875, -19.2500, -18.6250, -18.2500, -18.8750, -18.0000, -19.7500, -17.6250, -17.2500, -17.0000, -22.0000, -20.2500, -16.6250],
        [  0.0000, -13.6875, -12.7500, -16.7500, -16.6250, -16.5000, -17.0000, -14.4375, -17.3750, -14.6250, -16.2500, -14.9375, -17.7500, -17.7500, -14.9375],
        [  0.0000, -14.1250, -13.3750, -17.3750, -16.7500, -17.3750, -17.7500, -15.0625, -18.2500, -15.0000, -16.0000, -15.5000, -18.7500, -18.6250, -15.4375],
        [  0.0000, -18.2500, -20.0000, -24.7500, -22.8750, -22.8750, -23.7500, -22.8750, -24.6250, -22.2500, -21.1250, -21.2500, -28.5000, -25.5000, -21.8750],
        [  0.0000, -19.6250, -19.8750, -25.6250, -24.0000, -24.5000, -25.1250, -22.2500, -26.1250, -22.1250, -23.1250, -22.1250, -27.8750, -27.0000, -22.2500],
        [  0.0000, -16.7500, -17.1250, -22.1250, -20.0000, -20.5000, -21.3750, -18.7500, -22.3750, -18.3750, -19.2500, -18.5000, -23.6250, -23.0000, -20.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9824],
        [0.9788],
        [0.9993],
        [0.9945],
        [0.9948],
        [0.9980],
        [0.9932],
        [0.9759],
        [0.9743],
        [0.9831],
        [0.9346],
        [0.9984],
        [0.9622],
        [0.9961]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3691,     0.6328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0068,     0.6133,     0.3809,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0063,     0.2637,     0.4473,     0.2832,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0139,     0.3008,     0.4512,     0.0864,     0.1484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.0967,     0.1621,     0.1748,     0.0718,     0.4922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0079,     0.0515,     0.0923,     0.0728,     0.0972,     0.4531,     0.2256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.0383,     0.0413,     0.0295,     0.0078,     0.1729,     0.0574,     0.6484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.0111,     0.0195,     0.0037,     0.0173,     0.1758,     0.0354,     0.7227,     0.0109,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.0116,     0.0205,     0.0157,     0.0103,     0.0271,     0.0408,     0.4727,     0.0354,     0.3633,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0021,     0.0082,     0.0018,     0.0027,     0.0188,     0.0398,     0.2598,     0.0070,     0.6289,     0.0292,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0023,     0.0058,     0.0067,     0.0023,     0.0036,     0.0125,     0.1357,     0.0398,     0.2207,     0.0645,     0.5078,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0020,     0.0025,     0.0012,     0.0004,     0.0092,     0.0028,     0.0469,     0.0019,     0.1279,     0.0114,     0.2334,     0.5586,     0.0000,     0.0000],
        [    0.0003,     0.0005,     0.0009,     0.0001,     0.0006,     0.0054,     0.0012,     0.0245,     0.0004,     0.0276,     0.0019,     0.0474,     0.8750,     0.0129,     0.0000],
        [    0.0001,     0.0004,     0.0009,     0.0005,     0.0007,     0.0008,     0.0023,     0.0197,     0.0051,     0.0396,     0.0115,     0.1172,     0.3047,     0.1289,     0.3672]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0188,  0.0242,  0.0466,  ..., -0.0375,  0.0177, -0.0248],
        [-0.0377, -0.0317,  0.0259,  ..., -0.0584, -0.0367,  0.0216],
        [-0.0511, -0.0433,  0.0394,  ..., -0.0277, -0.0173, -0.0002],
        ...,
        [ 0.0445, -0.0210, -0.0143,  ..., -0.0170, -0.0432,  0.0020],
        [ 0.0261,  0.0581, -0.0098,  ...,  0.0683, -0.0247, -0.0001],
        [ 0.0007, -0.0030,  0.0073,  ...,  0.0145,  0.0376, -0.0095]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8164, -1.7031, -0.8672,  0.3379, -1.0781,  0.3066,  0.6758,  2.3750,  0.6719,  2.0312, -0.2461, -1.5000, -0.1455,  0.3438,  0.2578,  1.6719,  1.8906, -1.5391,  0.2676, -1.8438,  1.2578, -2.5000, -0.1338,  2.0156, -2.7812, -0.1191,  0.1572, -0.6836,  0.0571,  1.0234, -2.5312,  1.6641,
        -0.9219, -2.3438, -1.7266, -1.9297,  1.5469,  2.3438, -0.2559,  1.0078,  3.0312, -0.3008, -2.7188,  2.4688, -0.8242, -0.9062,  0.8672,  0.8516,  0.4238, -0.0505,  0.0830, -2.2500,  1.8594, -0.0223, -1.2734, -2.4062, -0.8203, -1.8828,  1.3906,  0.7461, -1.6875, -1.1250, -1.5156,  1.3125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0193,  0.0269, -0.0537,  ..., -0.0102, -0.0414, -0.0030],
        [-0.0248,  0.0162,  0.0081,  ..., -0.0108,  0.0020, -0.0361],
        [ 0.0167,  0.0389, -0.0273,  ...,  0.0186, -0.0345,  0.0094],
        ...,
        [-0.0070, -0.0252,  0.0035,  ..., -0.0310,  0.0324,  0.0034],
        [ 0.0210, -0.0126, -0.0039,  ..., -0.0060,  0.0305,  0.0156],
        [ 0.0402,  0.0105,  0.0114,  ..., -0.0336, -0.0263,  0.0361]], device='cuda:0', requires_grad=True)
Q: tensor([-1.2578, -0.5000, -2.1719, -2.2031, -1.4453, -3.0938,  0.0564,  0.8438,  3.3125, -2.1406,  5.6562, -2.8750,  2.0469,  2.6719,  5.5625, -2.2656,  2.6406, -1.4766,  4.2500, -3.3438,  1.3828, -3.3281,  2.1250,  1.8750, -5.5938,  1.1016,  0.2344,  2.8906,  0.9531, -1.0547, -3.0312,  0.7852,
         2.8594,  0.6016,  0.4004, -2.1250, -1.7656,  0.4688,  1.7812,  2.5156,  1.5078, -0.1943,  4.2500,  0.0500, -4.4688, -0.7734,  3.3594, -2.7969, -2.7344,  0.3750,  3.1250, -2.0000,  2.7969, -0.6875,  4.2812, -4.0312,  0.8203, -0.3926,  1.1641, -0.6758, -0.2734,  2.1250, -0.6875,  0.9531],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.5352,  0.4629, -0.6133,  0.0260,  0.5586,  0.4336,  0.9844,  0.1689,  1.2500,  0.2236,  1.4688,  1.7969,  0.9219,  1.9922],
        [ 0.0000,  4.5000,  4.0312,  5.2188,  3.9375,  5.2812,  5.5000,  7.6875,  7.0938,  8.0000,  7.8750, 10.1875, 10.5000, 10.2500, 11.8125],
        [ 0.0000,  3.7344,  4.2812,  3.8125,  4.7500,  6.0938,  6.1250,  8.2500,  7.0625,  8.8125,  8.4375, 10.3125, 11.5000, 10.5000, 11.7500],
        [ 0.0000,  3.0625,  3.4844,  1.8281,  2.3594,  6.6562,  4.6875,  7.5312,  3.5469,  8.1875,  6.2812,  9.0625, 11.3750,  7.4062, 12.0625],
        [ 0.0000,  3.9219,  4.4375,  4.5000,  3.6250,  5.5312,  5.5938,  8.1875,  5.7812,  8.8750,  7.0000, 10.3750, 11.9375,  9.8125, 13.6875],
        [ 0.0000,  1.8750,  2.4531,  2.2188,  2.5156,  4.0625,  3.3594,  5.5625,  4.3750,  6.8750,  5.8750,  8.2500,  8.5625,  7.8125, 10.8750],
        [ 0.0000,  2.0938,  2.1719,  1.8281,  0.4980,  3.5938,  2.5000,  4.9062,  2.5781,  6.0312,  3.9844,  7.0625,  7.6875,  5.9062,  9.9375],
        [ 0.0000,  1.4062,  1.9688,  0.3066,  1.8516,  4.1562,  2.5625,  5.5938,  1.3828,  5.7188,  3.1875,  6.3438,  9.3125,  4.9688, 10.0625],
        [ 0.0000,  1.4844,  2.0625,  1.7891,  1.3672,  2.3281,  2.7344,  5.1875,  2.5938,  4.9375,  3.4844,  6.3750,  8.1250,  5.9062,  9.1250],
        [ 0.0000,  0.5234,  1.8828,  0.3691,  0.7656,  2.7188,  3.4688,  5.3438,  1.7422,  6.2188,  3.1562,  6.5312,  8.4375,  5.3750, 10.0625],
        [ 0.0000,  2.0312,  2.9375,  3.0938,  2.0469,  2.4688,  3.7188,  6.0938,  4.8750,  6.5938,  5.3750,  7.4062,  9.0625,  8.2500, 10.0625],
        [ 0.0000,  1.4766,  1.7344,  0.9570, -0.2139,  3.0156,  1.8359,  4.6562,  1.4531,  5.6562,  3.2344,  6.2500,  7.1250,  4.8125,  9.1250],
        [ 0.0000,  0.5508,  1.1094, -0.6328,  0.7500,  2.9531,  1.4141,  4.4688,  0.3340,  4.5938,  1.8984,  5.1250,  8.0625,  3.8281,  8.7500],
        [ 0.0000,  1.3594,  2.1250,  1.3984,  1.7891,  2.0156,  3.0312,  5.1562,  3.8281,  5.8750,  4.6250,  6.9375,  7.9062,  7.0625,  8.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4531],
        [0.0749],
        [0.0382],
        [0.0431],
        [0.0249],
        [0.0349],
        [0.0294],
        [0.0168],
        [0.0099],
        [0.0119],
        [0.0045],
        [0.0152],
        [0.0111],
        [0.0028]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2422, 0.7578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0108, 0.3477, 0.6406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0062, 0.5234, 0.0452, 0.4258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0293, 0.6250, 0.0645, 0.0544, 0.2266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0239, 0.7852, 0.0284, 0.0403, 0.0311, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0014, 0.9297, 0.0061, 0.0109, 0.0093, 0.0152, 0.0265, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0015, 0.6719, 0.0067, 0.1021, 0.0437, 0.0420, 0.0801, 0.0520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0188, 0.5273, 0.0117, 0.0476, 0.0159, 0.0654, 0.2402, 0.0105, 0.0630, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0063, 0.5117, 0.0138, 0.1157, 0.0182, 0.0297, 0.1045, 0.0039, 0.0386, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0160, 0.2676, 0.0061, 0.0245, 0.0015, 0.0091, 0.0308, 0.0038, 0.0140, 0.1943, 0.4316, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0085, 0.0184, 0.0072, 0.2578, 0.0251, 0.0050, 0.0093, 0.0093, 0.0459, 0.1050, 0.4961, 0.0132, 0.0000, 0.0000, 0.0000],
        [0.0040, 0.2715, 0.0024, 0.0483, 0.0275, 0.0127, 0.0596, 0.0024, 0.1484, 0.0459, 0.2441, 0.0059, 0.1270, 0.0000, 0.0000],
        [0.0093, 0.1650, 0.0038, 0.0220, 0.0075, 0.0159, 0.0781, 0.0020, 0.0295, 0.1543, 0.2256, 0.0152, 0.1143, 0.1562, 0.0000],
        [0.0064, 0.2969, 0.1221, 0.0432, 0.0977, 0.0391, 0.0767, 0.0255, 0.0155, 0.0264, 0.0101, 0.0171, 0.1553, 0.0212, 0.0481]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0006,  0.0129,  0.0108,  ..., -0.0230,  0.0142,  0.0257],
        [ 0.0343, -0.0039, -0.0167,  ..., -0.0169,  0.0048,  0.0056],
        [-0.0203, -0.0247, -0.0005,  ...,  0.0238, -0.0242, -0.0072],
        ...,
        [-0.0029,  0.0121,  0.0305,  ..., -0.0238, -0.0307,  0.0045],
        [-0.0262, -0.0309, -0.0238,  ..., -0.0060, -0.0337, -0.0004],
        [ 0.0059,  0.0082,  0.0148,  ...,  0.0088, -0.0009,  0.0261]], device='cuda:0', requires_grad=True)
K: tensor([-1.0391, -1.5391, -0.1836, -0.0771,  0.3867, -0.6133, -0.7148,  0.1084, -1.8047,  1.1875, -0.3008, -1.3594, -0.2930,  1.1250, -0.9258,  1.2422,  0.7031,  0.0400,  2.5938,  0.9609, -0.1426, -1.2812,  0.5469, -0.2676, -1.0469,  0.2930,  0.2930, -0.1768,  1.1875, -0.9570, -0.2275, -0.5781,
         1.5234,  1.3828, -0.6797,  1.8984,  0.2354, -0.2139,  0.8789, -1.2578,  1.2578,  0.0767, -0.7148,  0.6250, -1.7031,  1.0391, -1.4609, -2.2969,  0.1289, -0.1895,  1.1484, -1.1250, -0.8125,  1.1172,  0.5781, -0.3242,  0.6602, -1.8125, -0.5078, -0.6289,  1.0312, -0.4414,  0.9961,  0.3965],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0410,  0.0354, -0.0307,  ...,  0.0097, -0.0025,  0.0108],
        [-0.0181,  0.0041, -0.0005,  ..., -0.0266, -0.0007, -0.0334],
        [-0.0179, -0.0115, -0.0124,  ..., -0.0227,  0.0105, -0.0062],
        ...,
        [ 0.0127, -0.0021, -0.0338,  ..., -0.0159,  0.0233,  0.0156],
        [-0.0158, -0.0176, -0.0424,  ...,  0.0043, -0.0068,  0.0330],
        [-0.0030,  0.0210, -0.0086,  ..., -0.0242, -0.0095, -0.0075]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5703, -0.8555, -0.9531, -1.6094, -0.2168, -3.0469,  1.2734,  2.3438,  0.0245, -1.5312, -1.5156,  1.8047,  0.2178,  0.4590, -0.6562, -2.8281,  1.2578, -2.1406,  0.1396, -0.7227, -0.3223, -1.0859, -1.2578,  0.6602,  0.3145,  1.2109,  1.0312,  1.6875,  0.8633,  0.4961, -1.0938,  0.0544,
         0.6328, -0.5117, -1.9062, -0.6992, -1.3516, -1.7500,  1.9141,  0.5703,  1.5781,  0.0100, -1.1328,  0.7695, -2.6094, -0.0330, -0.4395,  0.1514,  1.8516, -1.0156,  0.2324,  1.0000, -1.1953, -2.0469, -0.3066, -0.6133, -0.2197, -2.8594, -0.5938, -1.3359,  1.3438, -1.1719,  1.0703,  1.5703],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.1406, -1.1953, -1.8516, -1.4766, -1.9375, -3.8750, -2.0625, -3.5312, -1.7031, -2.4062, -2.8594, -0.8867, -3.0000, -3.7031],
        [ 0.0000,  3.4688,  4.0938,  5.9062,  6.6250,  2.7188,  1.8281,  3.4219,  3.4062,  1.7344,  2.0781, -0.6094,  4.2500,  2.8750,  0.3945],
        [ 0.0000,  4.4375,  1.9844,  4.2188,  5.7188,  2.8125,  2.2344,  2.0625,  2.4219,  1.8750,  1.1797, -1.1562,  3.4219,  2.4062,  0.3848],
        [ 0.0000,  3.0625,  0.7891,  0.6211,  2.0469,  2.9531,  1.6562,  0.1387,  0.2871,  2.0469,  0.5820, -1.1641,  1.0625,  0.4082,  1.3438],
        [ 0.0000,  3.4844,  0.1699,  0.5156,  0.2617,  1.3438,  1.1250, -0.7344, -0.5234,  0.9141, -0.2812, -1.7266, -0.2598, -0.9258,  0.1445],
        [ 0.0000,  6.4688,  1.4609,  2.0312,  1.8750,  2.3594,  2.9219,  4.6250,  2.6875,  1.1562,  0.1660,  0.7422,  1.2656,  0.8906,  1.0391],
        [ 0.0000,  6.0938,  1.4844,  4.2188,  3.3594,  3.3125,  3.9688,  3.5312,  5.8125,  3.6406,  3.7812,  0.3945,  3.6719,  5.4062,  3.4688],
        [ 0.0000,  3.3281, -0.4766,  0.9297, -0.1729,  1.2422,  2.5469, -0.5859,  1.2109,  3.0000,  2.6875,  0.4727,  1.9062,  1.8125,  3.0156],
        [ 0.0000,  4.4062,  0.7812,  2.9062,  1.0625,  1.5469,  2.8125, -0.4785,  1.8125,  3.2188,  6.2188,  2.5625,  3.7656,  3.1719,  3.5312],
        [ 0.0000,  2.8125, -0.9570,  0.4238, -2.3906, -0.5664,  0.6523, -1.4453, -0.1348,  2.5000,  3.2969,  2.6719,  3.4844,  1.5000,  2.5625],
        [ 0.0000,  0.7617, -0.1680,  3.4062,  1.0781, -0.5430,  0.0771,  0.0830,  1.6797,  2.5000,  4.0625,  0.4355,  5.9375,  3.0938,  2.3281],
        [ 0.0000,  4.2188, -0.5117,  2.4844,  1.9297,  1.1562,  2.7031, -0.5195,  3.6094,  2.4375,  4.1250,  0.3887,  3.4531,  5.5312,  4.0000],
        [ 0.0000,  2.8750, -0.9023,  0.8594, -0.2148,  0.5312,  2.1250, -1.5156,  1.1562,  2.8125,  3.1875,  0.4902,  2.5000,  2.8281,  3.6719],
        [ 0.0000,  3.8438,  2.9531,  1.9062,  2.7188,  1.8047,  2.4844,  1.3828,  0.8828,  1.4141,  0.4531,  0.9844,  3.1875,  1.2031,  2.0156]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1186],
        [0.0122],
        [0.0115],
        [0.0143],
        [0.0410],
        [0.0064],
        [0.0015],
        [0.0117],
        [0.0075],
        [0.0261],
        [0.0129],
        [0.0073],
        [0.0073],
        [0.0125]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1875 a:0.1475,:0.1924 white:0.0815,:0.2695,:0.3730 red:0.0420iced:0.3730)
iced
------
		( a:0.1475,:0.1924 white:0.0815,:0.2695,:0.3730 red:0.0420iced:0.3730,:0.2295)
, and are the ones you can get from the sun.
- The
@ 4550 train 4.3813 , allloss: 4.3824, dt: 1719.72ms, fracRes: 0.3642, norm(attn): 0.2373, norm(output): 0.5234, norm(x): 0.4841, norm(y): 1.0134, norm:1.5633, tok/sec: 76217.16, flops:79.99, batch-reuse:1
@ 4551 train 4.2726 , allloss: 4.2736, dt: 1336.40ms, fracRes: 0.3671, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4868, norm(y): 1.0135, norm:1.4730, tok/sec: 98078.12, flops:102.93, batch-reuse:1
@ 4552 train 4.4194 , allloss: 4.4205, dt: 1297.34ms, fracRes: 0.3673, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4864, norm(y): 1.0135, norm:1.4801, tok/sec: 101031.61, flops:106.03, batch-reuse:1
@ 4553 train 4.2612 , allloss: 4.2626, dt: 1300.67ms, fracRes: 0.3665, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4847, norm(y): 1.0134, norm:1.3417, tok/sec: 100772.91, flops:105.76, batch-reuse:1
@ 4554 train 4.4748 , allloss: 4.4760, dt: 1298.81ms, fracRes: 0.3678, norm(attn): 0.2295, norm(output): 0.5234, norm(x): 0.4832, norm(y): 1.0136, norm:1.7373, tok/sec: 100917.07, flops:105.91, batch-reuse:1
@ 4555 train 4.3228 , allloss: 4.3239, dt: 1314.49ms, fracRes: 0.3672, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4858, norm(y): 1.0135, norm:1.4695, tok/sec: 99712.87, flops:104.65, batch-reuse:1
@ 4556 train 4.4158 , allloss: 4.4165, dt: 1328.65ms, fracRes: 0.3681, norm(attn): 0.2275, norm(output): 0.5352, norm(x): 0.4880, norm(y): 1.0135, norm:1.6862, tok/sec: 98650.21, flops:103.54, batch-reuse:1
@ 4557 train 4.2786 , allloss: 4.2805, dt: 1293.77ms, fracRes: 0.3708, norm(attn): 0.2285, norm(output): 0.5312, norm(x): 0.4845, norm(y): 1.0136, norm:1.6751, tok/sec: 101309.89, flops:106.33, batch-reuse:1
@ 4558 train 4.2863 , allloss: 4.2874, dt: 1332.46ms, fracRes: 0.3682, norm(attn): 0.2324, norm(output): 0.5273, norm(x): 0.4838, norm(y): 1.0135, norm:1.3198, tok/sec: 98368.14, flops:103.24, batch-reuse:1
@ 4559 train 4.3562 , allloss: 4.3572, dt: 1341.47ms, fracRes: 0.3674, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4882, norm(y): 1.0135, norm:1.4397, tok/sec: 97707.55, flops:102.55, batch-reuse:1
@ 4560 train 4.3408 , allloss: 4.3420, dt: 1323.23ms, fracRes: 0.3688, norm(attn): 0.2295, norm(output): 0.5312, norm(x): 0.4888, norm(y): 1.0136, norm:1.2811, tok/sec: 99054.30, flops:103.96, batch-reuse:1
@ 4561 train 4.4559 , allloss: 4.4571, dt: 1294.12ms, fracRes: 0.3692, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4883, norm(y): 1.0136, norm:1.4820, tok/sec: 101283.00, flops:106.30, batch-reuse:1
@ 4562 train 4.4102 , allloss: 4.4115, dt: 1298.72ms, fracRes: 0.3664, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4879, norm(y): 1.0134, norm:1.4175, tok/sec: 100924.00, flops:105.92, batch-reuse:1
@ 4563 train 4.3437 , allloss: 4.3453, dt: 1312.78ms, fracRes: 0.3665, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4877, norm(y): 1.0134, norm:1.4998, tok/sec: 99843.14, flops:104.79, batch-reuse:1
@ 4564 train 4.3511 , allloss: 4.3528, dt: 1302.57ms, fracRes: 0.3659, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4875, norm(y): 1.0134, norm:1.3291, tok/sec: 100625.38, flops:105.61, batch-reuse:1
@ 4565 train 4.3360 , allloss: 4.3367, dt: 1303.95ms, fracRes: 0.3658, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4905, norm(y): 1.0135, norm:1.5370, tok/sec: 100519.43, flops:105.50, batch-reuse:1
@ 4566 train 4.3228 , allloss: 4.3261, dt: 1312.78ms, fracRes: 0.3657, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4856, norm(y): 1.0134, norm:1.4333, tok/sec: 99842.89, flops:104.79, batch-reuse:1
@ 4567 train 4.3479 , allloss: 4.3498, dt: 1317.29ms, fracRes: 0.3683, norm(attn): 0.2295, norm(output): 0.5312, norm(x): 0.4900, norm(y): 1.0135, norm:1.4233, tok/sec: 99501.28, flops:104.43, batch-reuse:1
@ 4568 train 4.3261 , allloss: 4.3272, dt: 1301.15ms, fracRes: 0.3668, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4898, norm(y): 1.0135, norm:1.4734, tok/sec: 100735.53, flops:105.72, batch-reuse:1
@ 4569 train 4.3041 , allloss: 4.3074, dt: 1322.45ms, fracRes: 0.3658, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4848, norm(y): 1.0134, norm:1.3532, tok/sec: 99112.93, flops:104.02, batch-reuse:1
@ 4570 train 4.2887 , allloss: 4.2896, dt: 1306.82ms, fracRes: 0.3665, norm(attn): 0.2334, norm(output): 0.5273, norm(x): 0.4820, norm(y): 1.0134, norm:1.5021, tok/sec: 100298.29, flops:105.26, batch-reuse:1
@ 4571 train 4.4334 , allloss: 4.4343, dt: 1313.68ms, fracRes: 0.3680, norm(attn): 0.2266, norm(output): 0.5312, norm(x): 0.4857, norm(y): 1.0136, norm:1.4249, tok/sec: 99774.41, flops:104.72, batch-reuse:1
@ 4572 train 4.3200 , allloss: 4.3209, dt: 1334.14ms, fracRes: 0.3696, norm(attn): 0.2275, norm(output): 0.5391, norm(x): 0.4910, norm(y): 1.0135, norm:1.7550, tok/sec: 98244.42, flops:103.11, batch-reuse:1
@ 4573 train 4.3338 , allloss: 4.3350, dt: 1313.70ms, fracRes: 0.3673, norm(attn): 0.2275, norm(output): 0.5312, norm(x): 0.4874, norm(y): 1.0134, norm:1.6532, tok/sec: 99773.52, flops:104.71, batch-reuse:1
@ 4574 train 4.3122 , allloss: 4.3144, dt: 1299.05ms, fracRes: 0.3711, norm(attn): 0.2285, norm(output): 0.5312, norm(x): 0.4947, norm(y): 1.0135, norm:1.8499, tok/sec: 100898.49, flops:105.89, batch-reuse:1
@ 4575 train 4.3433 , allloss: 4.3448, dt: 1312.85ms, fracRes: 0.3677, norm(attn): 0.2295, norm(output): 0.5312, norm(x): 0.4847, norm(y): 1.0135, norm:1.6136, tok/sec: 99837.99, flops:104.78, batch-reuse:1
@ 4576 train 4.3403 , allloss: 4.3426, dt: 1305.89ms, fracRes: 0.3668, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4869, norm(y): 1.0134, norm:1.4615, tok/sec: 100369.58, flops:105.34, batch-reuse:1
@ 4577 train 4.2797 , allloss: 4.2811, dt: 1555.56ms, fracRes: 0.3681, norm(attn): 0.2314, norm(output): 0.5352, norm(x): 0.4918, norm(y): 1.0135, norm:1.4902, tok/sec: 84260.13, flops:88.43, batch-reuse:1
@ 4578 train 4.3009 , allloss: 4.3022, dt: 1313.52ms, fracRes: 0.3665, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4886, norm(y): 1.0136, norm:1.5559, tok/sec: 99786.82, flops:104.73, batch-reuse:1
@ 4579 train 4.2829 , allloss: 4.2841, dt: 1302.83ms, fracRes: 0.3677, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4890, norm(y): 1.0135, norm:1.5024, tok/sec: 100605.44, flops:105.59, batch-reuse:1
@ 4580 train 4.4633 , allloss: 4.4644, dt: 1300.53ms, fracRes: 0.3670, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4893, norm(y): 1.0135, norm:1.7675, tok/sec: 100783.59, flops:105.77, batch-reuse:1
@ 4581 train 4.2624 , allloss: 4.2635, dt: 1323.51ms, fracRes: 0.3681, norm(attn): 0.2344, norm(output): 0.5352, norm(x): 0.4926, norm(y): 1.0134, norm:1.6009, tok/sec: 99033.94, flops:103.94, batch-reuse:1
@ 4582 train 4.2388 , allloss: 4.2410, dt: 1294.50ms, fracRes: 0.3693, norm(attn): 0.2324, norm(output): 0.5391, norm(x): 0.4922, norm(y): 1.0135, norm:1.4160, tok/sec: 101253.36, flops:106.27, batch-reuse:1
@ 4583 train 4.3648 , allloss: 4.3656, dt: 1296.42ms, fracRes: 0.3691, norm(attn): 0.2295, norm(output): 0.5312, norm(x): 0.4871, norm(y): 1.0136, norm:1.6526, tok/sec: 101102.88, flops:106.11, batch-reuse:1
@ 4584 train 4.3944 , allloss: 4.3956, dt: 1308.38ms, fracRes: 0.3690, norm(attn): 0.2285, norm(output): 0.5312, norm(x): 0.4861, norm(y): 1.0135, norm:1.4856, tok/sec: 100178.51, flops:105.14, batch-reuse:1
@ 4585 train 4.1481 , allloss: 4.1491, dt: 1287.86ms, fracRes: 0.3684, norm(attn): 0.2354, norm(output): 0.5273, norm(x): 0.4840, norm(y): 1.0135, norm:1.5722, tok/sec: 101775.14, flops:106.81, batch-reuse:1
@ 4586 train 4.2021 , allloss: 4.2031, dt: 1303.28ms, fracRes: 0.3689, norm(attn): 0.2305, norm(output): 0.5312, norm(x): 0.4852, norm(y): 1.0135, norm:1.4001, tok/sec: 100571.19, flops:105.55, batch-reuse:1
@ 4587 train 4.2097 , allloss: 4.2110, dt: 1300.45ms, fracRes: 0.3671, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4853, norm(y): 1.0135, norm:1.5505, tok/sec: 100789.70, flops:105.78, batch-reuse:1
@ 4588 train 4.2296 , allloss: 4.2307, dt: 1315.50ms, fracRes: 0.3668, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4869, norm(y): 1.0135, norm:1.4696, tok/sec: 99636.76, flops:104.57, batch-reuse:1
@ 4589 train 4.1708 , allloss: 4.1719, dt: 1313.39ms, fracRes: 0.3681, norm(attn): 0.2354, norm(output): 0.5273, norm(x): 0.4827, norm(y): 1.0135, norm:1.3788, tok/sec: 99796.47, flops:104.74, batch-reuse:1
@ 4590 train 4.1325 , allloss: 4.1336, dt: 1290.20ms, fracRes: 0.3689, norm(attn): 0.2383, norm(output): 0.5273, norm(x): 0.4821, norm(y): 1.0135, norm:1.4438, tok/sec: 101590.71, flops:106.62, batch-reuse:1
@ 4591 train 4.1855 , allloss: 4.1886, dt: 1299.85ms, fracRes: 0.3713, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4875, norm(y): 1.0135, norm:1.5383, tok/sec: 100836.40, flops:105.83, batch-reuse:1
@ 4592 train 4.3293 , allloss: 4.3316, dt: 1309.16ms, fracRes: 0.3698, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4914, norm(y): 1.0135, norm:1.5491, tok/sec: 100119.53, flops:105.08, batch-reuse:1
@ 4593 train 4.1537 , allloss: 4.1567, dt: 1315.96ms, fracRes: 0.3697, norm(attn): 0.2334, norm(output): 0.5391, norm(x): 0.4919, norm(y): 1.0135, norm:1.4787, tok/sec: 99602.02, flops:104.53, batch-reuse:1
@ 4594 train 4.2892 , allloss: 4.2902, dt: 1312.38ms, fracRes: 0.3673, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4851, norm(y): 1.0134, norm:1.4404, tok/sec: 99873.45, flops:104.82, batch-reuse:1
@ 4595 train 4.2169 , allloss: 4.2181, dt: 1300.04ms, fracRes: 0.3680, norm(attn): 0.2344, norm(output): 0.5391, norm(x): 0.4917, norm(y): 1.0135, norm:1.5788, tok/sec: 100821.31, flops:105.81, batch-reuse:1
@ 4596 train 4.2609 , allloss: 4.2626, dt: 1299.86ms, fracRes: 0.3692, norm(attn): 0.2314, norm(output): 0.5391, norm(x): 0.4910, norm(y): 1.0135, norm:1.2773, tok/sec: 100835.51, flops:105.83, batch-reuse:1
@ 4597 train 4.2359 , allloss: 4.2374, dt: 1290.87ms, fracRes: 0.3706, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4856, norm(y): 1.0136, norm:1.6783, tok/sec: 101537.75, flops:106.57, batch-reuse:1
@ 4598 train 4.1665 , allloss: 4.1677, dt: 1303.07ms, fracRes: 0.3704, norm(attn): 0.2324, norm(output): 0.5352, norm(x): 0.4897, norm(y): 1.0136, norm:1.4193, tok/sec: 100587.31, flops:105.57, batch-reuse:1
@ 4599 train 4.2228 , allloss: 4.2241, dt: 1348.92ms, fracRes: 0.3673, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4878, norm(y): 1.0134, norm:1.3758, tok/sec: 97168.46, flops:101.98, batch-reuse:1
@ 4600 train 4.1840 , allloss: 4.1853, dt: 1296.86ms, fracRes: 0.3661, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4879, norm(y): 1.0135, norm:1.4713, tok/sec: 101068.76, flops:106.07, batch-reuse:1
@ 4601 train 4.2122 , allloss: 4.2139, dt: 1305.06ms, fracRes: 0.3684, norm(attn): 0.2344, norm(output): 0.5273, norm(x): 0.4874, norm(y): 1.0136, norm:1.5337, tok/sec: 100433.91, flops:105.41, batch-reuse:1
@ 4602 train 4.1014 , allloss: 4.1026, dt: 1297.43ms, fracRes: 0.3667, norm(attn): 0.2393, norm(output): 0.5312, norm(x): 0.4876, norm(y): 1.0135, norm:1.4246, tok/sec: 101024.27, flops:106.03, batch-reuse:1
@ 4603 train 4.1149 , allloss: 4.1165, dt: 1306.29ms, fracRes: 0.3653, norm(attn): 0.2383, norm(output): 0.5352, norm(x): 0.4865, norm(y): 1.0135, norm:1.4234, tok/sec: 100338.92, flops:105.31, batch-reuse:1
@ 4604 train 4.2391 , allloss: 4.2420, dt: 1295.96ms, fracRes: 0.3659, norm(attn): 0.2324, norm(output): 0.5352, norm(x): 0.4889, norm(y): 1.0136, norm:1.3276, tok/sec: 101138.93, flops:106.15, batch-reuse:1
@ 4605 train 4.2538 , allloss: 4.2546, dt: 1298.25ms, fracRes: 0.3673, norm(attn): 0.2314, norm(output): 0.5352, norm(x): 0.4905, norm(y): 1.0136, norm:1.6333, tok/sec: 100960.16, flops:105.96, batch-reuse:1
@ 4606 train 4.1930 , allloss: 4.1974, dt: 1348.31ms, fracRes: 0.3689, norm(attn): 0.2324, norm(output): 0.5391, norm(x): 0.4904, norm(y): 1.0136, norm:1.5245, tok/sec: 97212.07, flops:102.03, batch-reuse:1
@ 4607 train 4.3809 , allloss: 4.3817, dt: 1327.66ms, fracRes: 0.3689, norm(attn): 0.2314, norm(output): 0.5352, norm(x): 0.4975, norm(y): 1.0137, norm:1.4002, tok/sec: 98724.15, flops:103.61, batch-reuse:1
@ 4608 train 4.1538 , allloss: 4.1552, dt: 1290.05ms, fracRes: 0.3692, norm(attn): 0.2295, norm(output): 0.5312, norm(x): 0.4874, norm(y): 1.0136, norm:1.6947, tok/sec: 101602.43, flops:106.63, batch-reuse:1
@ 4609 train 4.1263 , allloss: 4.1278, dt: 1288.33ms, fracRes: 0.3686, norm(attn): 0.2354, norm(output): 0.5352, norm(x): 0.4887, norm(y): 1.0134, norm:1.5075, tok/sec: 101737.86, flops:106.78, batch-reuse:1
@ 4610 train 4.1948 , allloss: 4.1964, dt: 1300.17ms, fracRes: 0.3702, norm(attn): 0.2334, norm(output): 0.5352, norm(x): 0.4900, norm(y): 1.0135, norm:1.6009, tok/sec: 100811.58, flops:105.80, batch-reuse:1
@ 4611 train 4.1837 , allloss: 4.1845, dt: 1281.89ms, fracRes: 0.3688, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4833, norm(y): 1.0134, norm:1.5886, tok/sec: 102248.74, flops:107.31, batch-reuse:1
@ 4612 train 4.1982 , allloss: 4.1999, dt: 1308.76ms, fracRes: 0.3707, norm(attn): 0.2383, norm(output): 0.5312, norm(x): 0.4880, norm(y): 1.0135, norm:1.7887, tok/sec: 100150.04, flops:105.11, batch-reuse:1
@ 4613 train 4.1568 , allloss: 4.1582, dt: 1342.89ms, fracRes: 0.3690, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4854, norm(y): 1.0135, norm:1.6661, tok/sec: 97604.66, flops:102.44, batch-reuse:1
@ 4614 train 4.1859 , allloss: 4.1869, dt: 1323.84ms, fracRes: 0.3685, norm(attn): 0.2344, norm(output): 0.5273, norm(x): 0.4861, norm(y): 1.0135, norm:1.4190, tok/sec: 99008.86, flops:103.91, batch-reuse:1
@ 4615 train 4.2098 , allloss: 4.2127, dt: 1336.58ms, fracRes: 0.3692, norm(attn): 0.2383, norm(output): 0.5273, norm(x): 0.4820, norm(y): 1.0135, norm:1.5573, tok/sec: 98065.16, flops:102.92, batch-reuse:1
@ 4616 train 4.2279 , allloss: 4.2290, dt: 1306.99ms, fracRes: 0.3678, norm(attn): 0.2373, norm(output): 0.5312, norm(x): 0.4832, norm(y): 1.0134, norm:1.5792, tok/sec: 100285.49, flops:105.25, batch-reuse:1
@ 4617 train 4.2573 , allloss: 4.2607, dt: 1308.70ms, fracRes: 0.3682, norm(attn): 0.2363, norm(output): 0.5352, norm(x): 0.4886, norm(y): 1.0135, norm:1.4488, tok/sec: 100154.18, flops:105.11, batch-reuse:1
@ 4618 train 4.1718 , allloss: 4.1731, dt: 1304.91ms, fracRes: 0.3653, norm(attn): 0.2373, norm(output): 0.5352, norm(x): 0.4891, norm(y): 1.0134, norm:1.5472, tok/sec: 100445.10, flops:105.42, batch-reuse:1
@ 4619 train 4.2162 , allloss: 4.2168, dt: 1292.44ms, fracRes: 0.3677, norm(attn): 0.2334, norm(output): 0.5352, norm(x): 0.4912, norm(y): 1.0136, norm:1.5184, tok/sec: 101414.20, flops:106.44, batch-reuse:1
@ 4620 train 4.2353 , allloss: 4.2365, dt: 1310.93ms, fracRes: 0.3680, norm(attn): 0.2344, norm(output): 0.5352, norm(x): 0.4902, norm(y): 1.0135, norm:1.6303, tok/sec: 99983.94, flops:104.94, batch-reuse:1
@ 4621 train 4.1364 , allloss: 4.1373, dt: 1340.60ms, fracRes: 0.3681, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4880, norm(y): 1.0135, norm:1.4789, tok/sec: 97771.13, flops:102.61, batch-reuse:1
@ 4622 train 4.1792 , allloss: 4.1802, dt: 1335.37ms, fracRes: 0.3677, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4850, norm(y): 1.0135, norm:1.5739, tok/sec: 98154.01, flops:103.01, batch-reuse:1
@ 4623 train 4.2117 , allloss: 4.2135, dt: 1325.03ms, fracRes: 0.3684, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4902, norm(y): 1.0135, norm:1.5962, tok/sec: 98920.12, flops:103.82, batch-reuse:1
@ 4624 train 4.1689 , allloss: 4.1729, dt: 1293.31ms, fracRes: 0.3688, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4899, norm(y): 1.0135, norm:1.5293, tok/sec: 101345.87, flops:106.36, batch-reuse:1
@ 4625 train 4.1586 , allloss: 4.1603, dt: 1283.48ms, fracRes: 0.3700, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4859, norm(y): 1.0135, norm:1.6842, tok/sec: 102122.06, flops:107.18, batch-reuse:1
@ 4626 train 4.1536 , allloss: 4.1548, dt: 1285.30ms, fracRes: 0.3694, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4859, norm(y): 1.0136, norm:1.3441, tok/sec: 101977.71, flops:107.03, batch-reuse:1
@ 4627 train 4.2649 , allloss: 4.2669, dt: 1273.80ms, fracRes: 0.3673, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4863, norm(y): 1.0134, norm:1.4643, tok/sec: 102898.21, flops:107.99, batch-reuse:1
@ 4628 train 4.0291 , allloss: 4.0304, dt: 1298.39ms, fracRes: 0.3695, norm(attn): 0.2285, norm(output): 0.5312, norm(x): 0.4818, norm(y): 1.0137, norm:1.7721, tok/sec: 100949.90, flops:105.95, batch-reuse:1
@ 4629 train 4.3110 , allloss: 4.3117, dt: 1303.72ms, fracRes: 0.3720, norm(attn): 0.2266, norm(output): 0.5391, norm(x): 0.4931, norm(y): 1.0138, norm:1.8676, tok/sec: 100537.00, flops:105.52, batch-reuse:1
@ 4630 train 4.2476 , allloss: 4.2493, dt: 1301.15ms, fracRes: 0.3707, norm(attn): 0.2275, norm(output): 0.5391, norm(x): 0.4887, norm(y): 1.0138, norm:1.7038, tok/sec: 100735.63, flops:105.72, batch-reuse:1
@ 4631 train 4.3499 , allloss: 4.3509, dt: 1308.98ms, fracRes: 0.3709, norm(attn): 0.2275, norm(output): 0.5391, norm(x): 0.4916, norm(y): 1.0137, norm:1.7715, tok/sec: 100133.00, flops:105.09, batch-reuse:1
@ 4632 train 4.4032 , allloss: 4.4052, dt: 1332.92ms, fracRes: 0.3690, norm(attn): 0.2324, norm(output): 0.5312, norm(x): 0.4911, norm(y): 1.0136, norm:1.7324, tok/sec: 98334.27, flops:103.20, batch-reuse:1
@ 4633 train 4.3223 , allloss: 4.3236, dt: 1345.86ms, fracRes: 0.3686, norm(attn): 0.2305, norm(output): 0.5391, norm(x): 0.4974, norm(y): 1.0136, norm:1.4420, tok/sec: 97389.08, flops:102.21, batch-reuse:1
@ 4634 train 4.3614 , allloss: 4.3627, dt: 1343.94ms, fracRes: 0.3688, norm(attn): 0.2314, norm(output): 0.5391, norm(x): 0.4950, norm(y): 1.0136, norm:1.6130, tok/sec: 97528.27, flops:102.36, batch-reuse:1
@ 4635 train 4.3511 , allloss: 4.3521, dt: 1339.12ms, fracRes: 0.3666, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4924, norm(y): 1.0135, norm:1.4219, tok/sec: 97879.47, flops:102.73, batch-reuse:1
@ 4636 train 4.3117 , allloss: 4.3130, dt: 1291.57ms, fracRes: 0.3670, norm(attn): 0.2393, norm(output): 0.5312, norm(x): 0.4936, norm(y): 1.0135, norm:1.6157, tok/sec: 101482.49, flops:106.51, batch-reuse:1
@ 4637 train 4.2036 , allloss: 4.2051, dt: 1286.72ms, fracRes: 0.3695, norm(attn): 0.2344, norm(output): 0.5352, norm(x): 0.4945, norm(y): 1.0136, norm:1.4684, tok/sec: 101865.05, flops:106.91, batch-reuse:1
@ 4638 train 4.3440 , allloss: 4.3454, dt: 1283.27ms, fracRes: 0.3680, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4922, norm(y): 1.0135, norm:1.6143, tok/sec: 102138.89, flops:107.20, batch-reuse:1
@ 4639 train 4.3550 , allloss: 4.3565, dt: 1304.69ms, fracRes: 0.3675, norm(attn): 0.2402, norm(output): 0.5312, norm(x): 0.4917, norm(y): 1.0133, norm:1.3910, tok/sec: 100461.93, flops:105.44, batch-reuse:1
@ 4640 train 4.3488 , allloss: 4.3502, dt: 1300.48ms, fracRes: 0.3676, norm(attn): 0.2383, norm(output): 0.5352, norm(x): 0.4905, norm(y): 1.0134, norm:1.3724, tok/sec: 100787.41, flops:105.78, batch-reuse:1
@ 4641 train 4.3381 , allloss: 4.3395, dt: 1303.66ms, fracRes: 0.3701, norm(attn): 0.2295, norm(output): 0.5391, norm(x): 0.4905, norm(y): 1.0135, norm:1.3103, tok/sec: 100541.60, flops:105.52, batch-reuse:1
@ 4642 train 4.3189 , allloss: 4.3203, dt: 1311.08ms, fracRes: 0.3717, norm(attn): 0.2324, norm(output): 0.5430, norm(x): 0.4956, norm(y): 1.0135, norm:1.7516, tok/sec: 99972.47, flops:104.92, batch-reuse:1
@ 4643 train 4.4639 , allloss: 4.4656, dt: 1323.66ms, fracRes: 0.3708, norm(attn): 0.2334, norm(output): 0.5430, norm(x): 0.5006, norm(y): 1.0135, norm:1.7134, tok/sec: 99022.47, flops:103.93, batch-reuse:1
@ 4644 train 4.3548 , allloss: 4.3558, dt: 1322.73ms, fracRes: 0.3706, norm(attn): 0.2305, norm(output): 0.5469, norm(x): 0.4975, norm(y): 1.0136, norm:1.4217, tok/sec: 99092.29, flops:104.00, batch-reuse:1
@ 4645 train 4.3913 , allloss: 4.3957, dt: 1339.19ms, fracRes: 0.3686, norm(attn): 0.2334, norm(output): 0.5391, norm(x): 0.4955, norm(y): 1.0136, norm:2.0074, tok/sec: 97873.88, flops:102.72, batch-reuse:1
@ 4646 train 4.4136 , allloss: 4.4155, dt: 1334.83ms, fracRes: 0.3693, norm(attn): 0.2305, norm(output): 0.5430, norm(x): 0.4972, norm(y): 1.0137, norm:1.7246, tok/sec: 98193.42, flops:103.06, batch-reuse:1
@ 4647 train 4.3804 , allloss: 4.3820, dt: 1339.14ms, fracRes: 0.3705, norm(attn): 0.2275, norm(output): 0.5508, norm(x): 0.4968, norm(y): 1.0137, norm:1.6529, tok/sec: 97877.83, flops:102.72, batch-reuse:1
@ 4648 train 4.3851 , allloss: 4.3860, dt: 1337.74ms, fracRes: 0.3697, norm(attn): 0.2324, norm(output): 0.5430, norm(x): 0.4986, norm(y): 1.0136, norm:1.4620, tok/sec: 97980.23, flops:102.83, batch-reuse:1
@ 4649 train 4.3626 , allloss: 4.3635, dt: 1319.83ms, fracRes: 0.3689, norm(attn): 0.2344, norm(output): 0.5430, norm(x): 0.4939, norm(y): 1.0136, norm:1.6238, tok/sec: 99309.84, flops:104.23, batch-reuse:1
@ 4650 train 4.2732 , allloss: 4.2738, dt: 1289.51ms, fracRes: 0.3696, norm(attn): 0.2354, norm(output): 0.5391, norm(x): 0.4941, norm(y): 1.0136, norm:1.4735, tok/sec: 101644.89, flops:106.68, batch-reuse:1
@ 4651 train 4.3578 , allloss: 4.3589, dt: 1313.82ms, fracRes: 0.3684, norm(attn): 0.2393, norm(output): 0.5391, norm(x): 0.4964, norm(y): 1.0135, norm:1.4387, tok/sec: 99763.91, flops:104.70, batch-reuse:1
@ 4652 train 4.3835 , allloss: 4.3843, dt: 1326.49ms, fracRes: 0.3688, norm(attn): 0.2393, norm(output): 0.5430, norm(x): 0.4958, norm(y): 1.0135, norm:1.3244, tok/sec: 98811.30, flops:103.70, batch-reuse:1
@ 4653 train 4.3815 , allloss: 4.3825, dt: 1333.53ms, fracRes: 0.3711, norm(attn): 0.2305, norm(output): 0.5391, norm(x): 0.4992, norm(y): 1.0136, norm:1.5612, tok/sec: 98289.54, flops:103.16, batch-reuse:1
@ 4654 train 4.3742 , allloss: 4.3751, dt: 1335.89ms, fracRes: 0.3690, norm(attn): 0.2363, norm(output): 0.5352, norm(x): 0.4929, norm(y): 1.0137, norm:1.4818, tok/sec: 98116.23, flops:102.97, batch-reuse:1
@ 4655 train 4.3684 , allloss: 4.3692, dt: 1321.85ms, fracRes: 0.3691, norm(attn): 0.2334, norm(output): 0.5352, norm(x): 0.4923, norm(y): 1.0136, norm:1.5816, tok/sec: 99158.17, flops:104.07, batch-reuse:1
@ 4656 train 4.2808 , allloss: 4.2819, dt: 1320.63ms, fracRes: 0.3695, norm(attn): 0.2373, norm(output): 0.5352, norm(x): 0.4920, norm(y): 1.0134, norm:1.3272, tok/sec: 99249.95, flops:104.16, batch-reuse:1
@ 4657 train 4.3111 , allloss: 4.3123, dt: 1342.96ms, fracRes: 0.3676, norm(attn): 0.2441, norm(output): 0.5312, norm(x): 0.4889, norm(y): 1.0134, norm:1.4790, tok/sec: 97599.45, flops:102.43, batch-reuse:1
@ 4658 train 4.4425 , allloss: 4.4433, dt: 1303.61ms, fracRes: 0.3687, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4896, norm(y): 1.0134, norm:1.4923, tok/sec: 100545.29, flops:105.52, batch-reuse:1
@ 4659 train 4.3541 , allloss: 4.3552, dt: 1321.94ms, fracRes: 0.3699, norm(attn): 0.2373, norm(output): 0.5391, norm(x): 0.4979, norm(y): 1.0135, norm:1.5238, tok/sec: 99151.48, flops:104.06, batch-reuse:1
@ 4660 train 4.2905 , allloss: 4.2913, dt: 1315.41ms, fracRes: 0.3669, norm(attn): 0.2412, norm(output): 0.5352, norm(x): 0.4968, norm(y): 1.0136, norm:1.4838, tok/sec: 99643.32, flops:104.58, batch-reuse:1
@ 4661 train 4.3041 , allloss: 4.3048, dt: 1299.75ms, fracRes: 0.3675, norm(attn): 0.2402, norm(output): 0.5312, norm(x): 0.4929, norm(y): 1.0136, norm:1.6202, tok/sec: 100843.84, flops:105.84, batch-reuse:1
@ 4662 train 4.3794 , allloss: 4.3801, dt: 1311.34ms, fracRes: 0.3677, norm(attn): 0.2393, norm(output): 0.5312, norm(x): 0.4931, norm(y): 1.0136, norm:1.5432, tok/sec: 99952.73, flops:104.90, batch-reuse:1
@ 4663 train 4.3350 , allloss: 4.3360, dt: 1302.68ms, fracRes: 0.3688, norm(attn): 0.2383, norm(output): 0.5312, norm(x): 0.4912, norm(y): 1.0136, norm:1.3283, tok/sec: 100616.91, flops:105.60, batch-reuse:1
@ 4664 train 4.2438 , allloss: 4.2451, dt: 1286.17ms, fracRes: 0.3696, norm(attn): 0.2393, norm(output): 0.5312, norm(x): 0.4937, norm(y): 1.0135, norm:1.5791, tok/sec: 101908.56, flops:106.95, batch-reuse:1
@ 4665 train 4.3709 , allloss: 4.3721, dt: 1296.02ms, fracRes: 0.3676, norm(attn): 0.2373, norm(output): 0.5352, norm(x): 0.4908, norm(y): 1.0136, norm:1.4515, tok/sec: 101133.89, flops:106.14, batch-reuse:1
@ 4666 train 4.2884 , allloss: 4.2892, dt: 1304.48ms, fracRes: 0.3680, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4903, norm(y): 1.0136, norm:1.4170, tok/sec: 100478.68, flops:105.45, batch-reuse:1
@ 4667 train 4.3904 , allloss: 4.3917, dt: 1298.14ms, fracRes: 0.3697, norm(attn): 0.2354, norm(output): 0.5352, norm(x): 0.4924, norm(y): 1.0136, norm:1.5336, tok/sec: 100969.26, flops:105.97, batch-reuse:1
@ 4668 train 4.3300 , allloss: 4.3309, dt: 1311.95ms, fracRes: 0.3685, norm(attn): 0.2383, norm(output): 0.5312, norm(x): 0.4913, norm(y): 1.0136, norm:1.3392, tok/sec: 99906.05, flops:104.85, batch-reuse:1
@ 4669 train 4.3437 , allloss: 4.3442, dt: 1334.10ms, fracRes: 0.3697, norm(attn): 0.2344, norm(output): 0.5391, norm(x): 0.4949, norm(y): 1.0137, norm:1.6247, tok/sec: 98247.56, flops:103.11, batch-reuse:1
@ 4670 train 4.3896 , allloss: 4.3905, dt: 1340.64ms, fracRes: 0.3682, norm(attn): 0.2354, norm(output): 0.5391, norm(x): 0.4941, norm(y): 1.0137, norm:1.5146, tok/sec: 97768.24, flops:102.61, batch-reuse:1
@ 4671 train 4.2857 , allloss: 4.2864, dt: 1318.92ms, fracRes: 0.3678, norm(attn): 0.2354, norm(output): 0.5391, norm(x): 0.4938, norm(y): 1.0136, norm:1.3551, tok/sec: 99378.38, flops:104.30, batch-reuse:1
@ 4672 train 4.4362 , allloss: 4.4372, dt: 1340.04ms, fracRes: 0.3672, norm(attn): 0.2383, norm(output): 0.5352, norm(x): 0.4934, norm(y): 1.0136, norm:1.4422, tok/sec: 97811.69, flops:102.66, batch-reuse:1
@ 4673 train 4.2873 , allloss: 4.2885, dt: 1317.11ms, fracRes: 0.3671, norm(attn): 0.2412, norm(output): 0.5352, norm(x): 0.4928, norm(y): 1.0135, norm:1.4631, tok/sec: 99514.97, flops:104.44, batch-reuse:1
@ 4674 train 4.3431 , allloss: 4.3473, dt: 1298.81ms, fracRes: 0.3697, norm(attn): 0.2354, norm(output): 0.5430, norm(x): 0.4984, norm(y): 1.0135, norm:1.5535, tok/sec: 100917.05, flops:105.91, batch-reuse:1
@ 4675 train 4.3217 , allloss: 4.3230, dt: 1309.95ms, fracRes: 0.3671, norm(attn): 0.2393, norm(output): 0.5352, norm(x): 0.4934, norm(y): 1.0135, norm:1.4163, tok/sec: 100058.68, flops:105.01, batch-reuse:1
@ 4676 train 4.3780 , allloss: 4.3794, dt: 1309.50ms, fracRes: 0.3679, norm(attn): 0.2412, norm(output): 0.5391, norm(x): 0.4934, norm(y): 1.0135, norm:1.4277, tok/sec: 100093.02, flops:105.05, batch-reuse:1
@ 4677 train 4.4299 , allloss: 4.4313, dt: 1319.29ms, fracRes: 0.3684, norm(attn): 0.2393, norm(output): 0.5391, norm(x): 0.4939, norm(y): 1.0135, norm:1.8046, tok/sec: 99350.56, flops:104.27, batch-reuse:1
@ 4678 train 4.3090 , allloss: 4.3106, dt: 1335.83ms, fracRes: 0.3701, norm(attn): 0.2354, norm(output): 0.5312, norm(x): 0.4912, norm(y): 1.0135, norm:1.3881, tok/sec: 98120.43, flops:102.98, batch-reuse:1
@ 4679 train 4.4404 , allloss: 4.4414, dt: 1284.50ms, fracRes: 0.3694, norm(attn): 0.2334, norm(output): 0.5312, norm(x): 0.4896, norm(y): 1.0135, norm:1.4777, tok/sec: 102040.87, flops:107.09, batch-reuse:1
@ 4680 train 4.6024 , allloss: 4.6030, dt: 1301.84ms, fracRes: 0.3678, norm(attn): 0.2334, norm(output): 0.5273, norm(x): 0.4875, norm(y): 1.0136, norm:1.3092, tok/sec: 100682.20, flops:105.67, batch-reuse:1
@ 4681 train 4.3196 , allloss: 4.3212, dt: 1322.43ms, fracRes: 0.3712, norm(attn): 0.2305, norm(output): 0.5391, norm(x): 0.4947, norm(y): 1.0136, norm:1.9298, tok/sec: 99114.62, flops:104.02, batch-reuse:1
@ 4682 train 4.2388 , allloss: 4.2409, dt: 1297.59ms, fracRes: 0.3697, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.5000, norm(y): 1.0135, norm:1.4538, tok/sec: 101012.15, flops:106.01, batch-reuse:1
@ 4683 train 4.3419 , allloss: 4.3438, dt: 1316.87ms, fracRes: 0.3696, norm(attn): 0.2363, norm(output): 0.5352, norm(x): 0.4933, norm(y): 1.0136, norm:1.5773, tok/sec: 99533.18, flops:104.46, batch-reuse:1
@ 4684 train 4.3813 , allloss: 4.3835, dt: 1288.05ms, fracRes: 0.3688, norm(attn): 0.2344, norm(output): 0.5312, norm(x): 0.4904, norm(y): 1.0135, norm:1.3621, tok/sec: 101759.75, flops:106.80, batch-reuse:1
@ 4685 train 4.3025 , allloss: 4.3034, dt: 1273.70ms, fracRes: 0.3678, norm(attn): 0.2393, norm(output): 0.5312, norm(x): 0.4921, norm(y): 1.0134, norm:1.7050, tok/sec: 102906.49, flops:108.00, batch-reuse:1
@ 4686 train 4.4000 , allloss: 4.4012, dt: 1314.30ms, fracRes: 0.3692, norm(attn): 0.2344, norm(output): 0.5352, norm(x): 0.4953, norm(y): 1.0135, norm:1.3932, tok/sec: 99727.66, flops:104.67, batch-reuse:1
@ 4687 train 4.2482 , allloss: 4.2494, dt: 1306.62ms, fracRes: 0.3732, norm(attn): 0.2324, norm(output): 0.5430, norm(x): 0.4989, norm(y): 1.0136, norm:1.8071, tok/sec: 100313.83, flops:105.28, batch-reuse:1
@ 4688 train 4.2956 , allloss: 4.2966, dt: 1276.02ms, fracRes: 0.3699, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.4944, norm(y): 1.0136, norm:1.3787, tok/sec: 102719.18, flops:107.81, batch-reuse:1
@ 4689 train 4.2749 , allloss: 4.2765, dt: 1298.57ms, fracRes: 0.3682, norm(attn): 0.2363, norm(output): 0.5391, norm(x): 0.4926, norm(y): 1.0136, norm:1.3353, tok/sec: 100935.78, flops:105.93, batch-reuse:1
@ 4690 train 4.2470 , allloss: 4.2483, dt: 1318.12ms, fracRes: 0.3681, norm(attn): 0.2412, norm(output): 0.5352, norm(x): 0.4920, norm(y): 1.0136, norm:1.2745, tok/sec: 99438.85, flops:104.36, batch-reuse:1
@ 4691 train 4.3366 , allloss: 4.3398, dt: 1304.96ms, fracRes: 0.3689, norm(attn): 0.2354, norm(output): 0.5391, norm(x): 0.4970, norm(y): 1.0136, norm:1.5364, tok/sec: 100441.48, flops:105.42, batch-reuse:1
@ 4692 train 4.3786 , allloss: 4.3791, dt: 1286.17ms, fracRes: 0.3679, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4912, norm(y): 1.0136, norm:1.3748, tok/sec: 101908.69, flops:106.96, batch-reuse:1
@ 4693 train 4.3712 , allloss: 4.3782, dt: 1324.85ms, fracRes: 0.3687, norm(attn): 0.2383, norm(output): 0.5352, norm(x): 0.4922, norm(y): 1.0136, norm:1.7888, tok/sec: 98933.23, flops:103.83, batch-reuse:1
@ 4694 train 4.3618 , allloss: 4.3627, dt: 1287.61ms, fracRes: 0.3674, norm(attn): 0.2393, norm(output): 0.5352, norm(x): 0.4922, norm(y): 1.0135, norm:1.3122, tok/sec: 101794.62, flops:106.84, batch-reuse:1
@ 4695 train 4.3815 , allloss: 4.3826, dt: 1313.57ms, fracRes: 0.3689, norm(attn): 0.2383, norm(output): 0.5352, norm(x): 0.4940, norm(y): 1.0136, norm:1.6249, tok/sec: 99783.14, flops:104.72, batch-reuse:1
@ 4696 train 4.2643 , allloss: 4.2658, dt: 1319.22ms, fracRes: 0.3692, norm(attn): 0.2393, norm(output): 0.5352, norm(x): 0.4909, norm(y): 1.0137, norm:1.4391, tok/sec: 99355.76, flops:104.28, batch-reuse:1
@ 4697 train 4.2830 , allloss: 4.2839, dt: 1318.89ms, fracRes: 0.3686, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.4922, norm(y): 1.0136, norm:1.5685, tok/sec: 99380.53, flops:104.30, batch-reuse:1
@ 4698 train 4.3349 , allloss: 4.3364, dt: 1348.58ms, fracRes: 0.3687, norm(attn): 0.2393, norm(output): 0.5352, norm(x): 0.4952, norm(y): 1.0136, norm:1.4397, tok/sec: 97192.32, flops:102.01, batch-reuse:1
@ 4699 train 4.2644 , allloss: 4.2665, dt: 1313.16ms, fracRes: 0.3699, norm(attn): 0.2363, norm(output): 0.5391, norm(x): 0.4945, norm(y): 1.0136, norm:1.6641, tok/sec: 99813.85, flops:104.76, batch-reuse:1
@ 4700 train 4.3097 , allloss: 4.3165, dt: 1287.92ms, fracRes: 0.3691, norm(attn): 0.2344, norm(output): 0.5391, norm(x): 0.4925, norm(y): 1.0136, norm:1.3715, tok/sec: 101770.24, flops:106.81, batch-reuse:1
@ 4701 train 4.2795 , allloss: 4.2806, dt: 1307.66ms, fracRes: 0.3697, norm(attn): 0.2373, norm(output): 0.5430, norm(x): 0.4938, norm(y): 1.0135, norm:1.6521, tok/sec: 100234.11, flops:105.20, batch-reuse:1
@ 4702 train 4.3531 , allloss: 4.3544, dt: 1331.17ms, fracRes: 0.3679, norm(attn): 0.2373, norm(output): 0.5391, norm(x): 0.4951, norm(y): 1.0135, norm:1.4512, tok/sec: 98463.63, flops:103.34, batch-reuse:1
@ 4703 train 4.4053 , allloss: 4.4073, dt: 1345.66ms, fracRes: 0.3700, norm(attn): 0.2344, norm(output): 0.5469, norm(x): 0.5001, norm(y): 1.0135, norm:1.5267, tok/sec: 97403.14, flops:102.23, batch-reuse:1
@ 4704 train 4.2671 , allloss: 4.2700, dt: 1341.05ms, fracRes: 0.3706, norm(attn): 0.2324, norm(output): 0.5391, norm(x): 0.4985, norm(y): 1.0136, norm:1.3965, tok/sec: 97738.64, flops:102.58, batch-reuse:1
@ 4705 train 4.3357 , allloss: 4.3365, dt: 1301.70ms, fracRes: 0.3703, norm(attn): 0.2305, norm(output): 0.5391, norm(x): 0.4928, norm(y): 1.0137, norm:1.3290, tok/sec: 100692.64, flops:105.68, batch-reuse:1
@ 4706 train 4.4076 , allloss: 4.4086, dt: 1305.32ms, fracRes: 0.3699, norm(attn): 0.2334, norm(output): 0.5430, norm(x): 0.5004, norm(y): 1.0137, norm:1.4134, tok/sec: 100413.32, flops:105.39, batch-reuse:1
@ 4707 train 4.3077 , allloss: 4.3087, dt: 1300.45ms, fracRes: 0.3706, norm(attn): 0.2363, norm(output): 0.5391, norm(x): 0.4976, norm(y): 1.0136, norm:1.5259, tok/sec: 100789.81, flops:105.78, batch-reuse:1
@ 4708 train 4.3212 , allloss: 4.3225, dt: 1309.10ms, fracRes: 0.3693, norm(attn): 0.2393, norm(output): 0.5312, norm(x): 0.4923, norm(y): 1.0136, norm:1.5371, tok/sec: 100123.59, flops:105.08, batch-reuse:1
@ 4709 train 4.3878 , allloss: 4.3887, dt: 1317.40ms, fracRes: 0.3682, norm(attn): 0.2412, norm(output): 0.5312, norm(x): 0.4903, norm(y): 1.0135, norm:1.3352, tok/sec: 99492.87, flops:104.42, batch-reuse:1
@ 4710 train 4.2923 , allloss: 4.2934, dt: 1304.37ms, fracRes: 0.3715, norm(attn): 0.2373, norm(output): 0.5352, norm(x): 0.4987, norm(y): 1.0135, norm:1.7522, tok/sec: 100486.46, flops:105.46, batch-reuse:1
@ 4711 train 4.3481 , allloss: 4.3502, dt: 1316.67ms, fracRes: 0.3719, norm(attn): 0.2393, norm(output): 0.5391, norm(x): 0.4971, norm(y): 1.0136, norm:1.7846, tok/sec: 99547.98, flops:104.48, batch-reuse:1
@ 4712 train 4.3737 , allloss: 4.3750, dt: 1284.88ms, fracRes: 0.3706, norm(attn): 0.2383, norm(output): 0.5312, norm(x): 0.4890, norm(y): 1.0136, norm:1.4390, tok/sec: 102011.05, flops:107.06, batch-reuse:1
@ 4713 train 4.3178 , allloss: 4.3190, dt: 1296.41ms, fracRes: 0.3693, norm(attn): 0.2432, norm(output): 0.5312, norm(x): 0.4902, norm(y): 1.0135, norm:1.8784, tok/sec: 101103.94, flops:106.11, batch-reuse:1
@ 4714 train 4.3369 , allloss: 4.3380, dt: 1297.40ms, fracRes: 0.3709, norm(attn): 0.2402, norm(output): 0.5312, norm(x): 0.4911, norm(y): 1.0135, norm:1.4754, tok/sec: 101026.43, flops:106.03, batch-reuse:1
@ 4715 train 4.2667 , allloss: 4.2677, dt: 1304.36ms, fracRes: 0.3714, norm(attn): 0.2373, norm(output): 0.5312, norm(x): 0.4963, norm(y): 1.0137, norm:1.6059, tok/sec: 100487.31, flops:105.46, batch-reuse:1
@ 4716 train 4.3544 , allloss: 4.3556, dt: 1301.08ms, fracRes: 0.3701, norm(attn): 0.2363, norm(output): 0.5312, norm(x): 0.4952, norm(y): 1.0136, norm:1.4501, tok/sec: 100740.70, flops:105.73, batch-reuse:1
@ 4717 train 4.3693 , allloss: 4.3701, dt: 1303.51ms, fracRes: 0.3718, norm(attn): 0.2324, norm(output): 0.5352, norm(x): 0.4910, norm(y): 1.0136, norm:1.2983, tok/sec: 100552.94, flops:105.53, batch-reuse:1
@ 4718 train 4.3830 , allloss: 4.3858, dt: 1292.63ms, fracRes: 0.3729, norm(attn): 0.2314, norm(output): 0.5469, norm(x): 0.4950, norm(y): 1.0137, norm:1.3693, tok/sec: 101399.36, flops:106.42, batch-reuse:1
@ 4719 train 4.2609 , allloss: 4.2637, dt: 1291.67ms, fracRes: 0.3710, norm(attn): 0.2344, norm(output): 0.5391, norm(x): 0.4945, norm(y): 1.0136, norm:1.2888, tok/sec: 101474.85, flops:106.50, batch-reuse:1
@ 4720 train 4.2672 , allloss: 4.2749, dt: 1301.80ms, fracRes: 0.3706, norm(attn): 0.2402, norm(output): 0.5391, norm(x): 0.4951, norm(y): 1.0135, norm:1.5037, tok/sec: 100685.26, flops:105.67, batch-reuse:1
@ 4721 train 4.2838 , allloss: 4.2847, dt: 1302.10ms, fracRes: 0.3678, norm(attn): 0.2383, norm(output): 0.5352, norm(x): 0.4905, norm(y): 1.0135, norm:1.3128, tok/sec: 100662.23, flops:105.65, batch-reuse:1
@ 4722 train 4.2599 , allloss: 4.2611, dt: 1317.45ms, fracRes: 0.3679, norm(attn): 0.2393, norm(output): 0.5391, norm(x): 0.4935, norm(y): 1.0135, norm:1.4197, tok/sec: 99488.82, flops:104.42, batch-reuse:1
@ 4723 train 4.3604 , allloss: 4.3613, dt: 1333.24ms, fracRes: 0.3694, norm(attn): 0.2363, norm(output): 0.5391, norm(x): 0.4962, norm(y): 1.0136, norm:1.3239, tok/sec: 98310.65, flops:103.18, batch-reuse:1
@ 4724 train 4.2389 , allloss: 4.2402, dt: 1295.91ms, fracRes: 0.3698, norm(attn): 0.2373, norm(output): 0.5391, norm(x): 0.4978, norm(y): 1.0136, norm:1.4410, tok/sec: 101142.95, flops:106.15, batch-reuse:1
@ 4725 train 4.3138 , allloss: 4.3151, dt: 1305.26ms, fracRes: 0.3695, norm(attn): 0.2354, norm(output): 0.5430, norm(x): 0.4976, norm(y): 1.0136, norm:1.4200, tok/sec: 100418.22, flops:105.39, batch-reuse:1
@ 4726 train 4.3826 , allloss: 4.3833, dt: 1299.00ms, fracRes: 0.3700, norm(attn): 0.2305, norm(output): 0.5430, norm(x): 0.4984, norm(y): 1.0137, norm:1.3521, tok/sec: 100902.42, flops:105.90, batch-reuse:1
@ 4727 train 4.2389 , allloss: 4.2397, dt: 1270.73ms, fracRes: 0.3694, norm(attn): 0.2373, norm(output): 0.5312, norm(x): 0.4943, norm(y): 1.0135, norm:1.4660, tok/sec: 103146.64, flops:108.25, batch-reuse:1
@ 4728 train 4.3643 , allloss: 4.3664, dt: 1279.86ms, fracRes: 0.3703, norm(attn): 0.2354, norm(output): 0.5391, norm(x): 0.4964, norm(y): 1.0135, norm:1.2828, tok/sec: 102411.41, flops:107.48, batch-reuse:1
@ 4729 train 4.2851 , allloss: 4.2861, dt: 1293.74ms, fracRes: 0.3722, norm(attn): 0.2324, norm(output): 0.5391, norm(x): 0.4933, norm(y): 1.0137, norm:1.5885, tok/sec: 101312.36, flops:106.33, batch-reuse:1
@ 4730 train 4.3123 , allloss: 4.3131, dt: 1306.95ms, fracRes: 0.3724, norm(attn): 0.2324, norm(output): 0.5352, norm(x): 0.4942, norm(y): 1.0136, norm:1.6510, tok/sec: 100288.38, flops:105.25, batch-reuse:1
@ 4731 train 4.3540 , allloss: 4.3548, dt: 1293.03ms, fracRes: 0.3704, norm(attn): 0.2334, norm(output): 0.5391, norm(x): 0.4996, norm(y): 1.0136, norm:1.5545, tok/sec: 101368.35, flops:106.39, batch-reuse:1
@ 4732 train 4.3130 , allloss: 4.3145, dt: 1299.59ms, fracRes: 0.3673, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.4949, norm(y): 1.0135, norm:1.5092, tok/sec: 100856.32, flops:105.85, batch-reuse:1
@ 4733 train 4.2316 , allloss: 4.2326, dt: 1315.58ms, fracRes: 0.3678, norm(attn): 0.2422, norm(output): 0.5352, norm(x): 0.4973, norm(y): 1.0135, norm:1.4561, tok/sec: 99630.73, flops:104.56, batch-reuse:1
@ 4734 train 4.2185 , allloss: 4.2203, dt: 1308.42ms, fracRes: 0.3676, norm(attn): 0.2402, norm(output): 0.5352, norm(x): 0.4907, norm(y): 1.0135, norm:1.4697, tok/sec: 100175.44, flops:105.14, batch-reuse:1
@ 4735 train 4.2874 , allloss: 4.2886, dt: 1324.67ms, fracRes: 0.3683, norm(attn): 0.2402, norm(output): 0.5312, norm(x): 0.4903, norm(y): 1.0136, norm:1.3012, tok/sec: 98947.10, flops:103.85, batch-reuse:1
@ 4736 train 4.2173 , allloss: 4.2191, dt: 1299.17ms, fracRes: 0.3702, norm(attn): 0.2441, norm(output): 0.5352, norm(x): 0.4927, norm(y): 1.0136, norm:1.4550, tok/sec: 100888.86, flops:105.88, batch-reuse:1
@ 4737 train 4.2504 , allloss: 4.2514, dt: 1287.58ms, fracRes: 0.3695, norm(attn): 0.2402, norm(output): 0.5312, norm(x): 0.4908, norm(y): 1.0136, norm:1.5301, tok/sec: 101797.24, flops:106.84, batch-reuse:1
@ 4738 train 4.3600 , allloss: 4.3609, dt: 1337.69ms, fracRes: 0.3701, norm(attn): 0.2402, norm(output): 0.5352, norm(x): 0.4934, norm(y): 1.0136, norm:1.3630, tok/sec: 97983.90, flops:102.84, batch-reuse:1
@ 4739 train 4.2156 , allloss: 4.2164, dt: 1314.36ms, fracRes: 0.3698, norm(attn): 0.2393, norm(output): 0.5352, norm(x): 0.4903, norm(y): 1.0137, norm:1.4939, tok/sec: 99723.21, flops:104.66, batch-reuse:1
@ 4740 train 4.3217 , allloss: 4.3224, dt: 1283.57ms, fracRes: 0.3680, norm(attn): 0.2422, norm(output): 0.5352, norm(x): 0.4925, norm(y): 1.0135, norm:1.1950, tok/sec: 102115.10, flops:107.17, batch-reuse:1
@ 4741 train 4.3609 , allloss: 4.3636, dt: 1312.98ms, fracRes: 0.3696, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.4967, norm(y): 1.0137, norm:1.5542, tok/sec: 99827.50, flops:104.77, batch-reuse:1
@ 4742 train 4.2553 , allloss: 4.2565, dt: 1310.92ms, fracRes: 0.3683, norm(attn): 0.2383, norm(output): 0.5469, norm(x): 0.4983, norm(y): 1.0136, norm:1.3086, tok/sec: 99984.47, flops:104.94, batch-reuse:1
@ 4743 train 4.4241 , allloss: 4.4255, dt: 1336.56ms, fracRes: 0.3689, norm(attn): 0.2354, norm(output): 0.5430, norm(x): 0.5031, norm(y): 1.0136, norm:1.4250, tok/sec: 98067.03, flops:102.92, batch-reuse:1
@ 4744 train 4.3056 , allloss: 4.3083, dt: 1294.03ms, fracRes: 0.3716, norm(attn): 0.2422, norm(output): 0.5469, norm(x): 0.5015, norm(y): 1.0136, norm:1.9296, tok/sec: 101289.74, flops:106.31, batch-reuse:1
@ 4745 train 4.3113 , allloss: 4.3122, dt: 1316.86ms, fracRes: 0.3678, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.4944, norm(y): 1.0136, norm:1.5608, tok/sec: 99533.89, flops:104.46, batch-reuse:1
@ 4746 train 4.3481 , allloss: 4.3531, dt: 1330.40ms, fracRes: 0.3681, norm(attn): 0.2324, norm(output): 0.5430, norm(x): 0.4943, norm(y): 1.0137, norm:1.9485, tok/sec: 98521.03, flops:103.40, batch-reuse:1
@ 4747 train 4.3085 , allloss: 4.3095, dt: 1323.54ms, fracRes: 0.3687, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.4968, norm(y): 1.0137, norm:1.6824, tok/sec: 99031.64, flops:103.94, batch-reuse:1
@ 4748 train 4.2848 , allloss: 4.2862, dt: 1311.28ms, fracRes: 0.3687, norm(attn): 0.2412, norm(output): 0.5352, norm(x): 0.4928, norm(y): 1.0136, norm:1.5976, tok/sec: 99957.67, flops:104.91, batch-reuse:1
@ 4749 train 4.2501 , allloss: 4.2511, dt: 1343.59ms, fracRes: 0.3699, norm(attn): 0.2451, norm(output): 0.5391, norm(x): 0.4953, norm(y): 1.0135, norm:1.5653, tok/sec: 97553.86, flops:102.38, batch-reuse:1
@ 4750 train 4.3645 , allloss: 4.3657, dt: 1334.50ms, fracRes: 0.3707, norm(attn): 0.2373, norm(output): 0.5352, norm(x): 0.4925, norm(y): 1.0136, norm:1.5333, tok/sec: 98217.74, flops:103.08, batch-reuse:1
@ 4751 train 4.1799 , allloss: 4.1811, dt: 1330.60ms, fracRes: 0.3715, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.4936, norm(y): 1.0135, norm:1.3657, tok/sec: 98505.81, flops:103.38, batch-reuse:1
@ 4752 train 4.2678 , allloss: 4.2689, dt: 1302.09ms, fracRes: 0.3695, norm(attn): 0.2432, norm(output): 0.5352, norm(x): 0.4916, norm(y): 1.0135, norm:1.7131, tok/sec: 100662.84, flops:105.65, batch-reuse:1
@ 4753 train 4.1861 , allloss: 4.1870, dt: 1300.11ms, fracRes: 0.3719, norm(attn): 0.2344, norm(output): 0.5391, norm(x): 0.4950, norm(y): 1.0135, norm:1.6663, tok/sec: 100816.45, flops:105.81, batch-reuse:1
@ 4754 train 4.3103 , allloss: 4.3119, dt: 1325.23ms, fracRes: 0.3729, norm(attn): 0.2275, norm(output): 0.5430, norm(x): 0.4954, norm(y): 1.0135, norm:1.3872, tok/sec: 98904.89, flops:103.80, batch-reuse:1
@ 4755 train 4.2275 , allloss: 4.2289, dt: 1338.29ms, fracRes: 0.3735, norm(attn): 0.2285, norm(output): 0.5430, norm(x): 0.4939, norm(y): 1.0135, norm:1.5121, tok/sec: 97939.84, flops:102.79, batch-reuse:1
@ 4756 train 4.2312 , allloss: 4.2320, dt: 1321.41ms, fracRes: 0.3732, norm(attn): 0.2256, norm(output): 0.5391, norm(x): 0.4933, norm(y): 1.0136, norm:1.5547, tok/sec: 99190.88, flops:104.10, batch-reuse:1
@ 4757 train 4.1609 , allloss: 4.1615, dt: 1292.96ms, fracRes: 0.3735, norm(attn): 0.2295, norm(output): 0.5469, norm(x): 0.4970, norm(y): 1.0135, norm:1.4964, tok/sec: 101373.78, flops:106.39, batch-reuse:1
@ 4758 train 4.3591 , allloss: 4.3598, dt: 1307.25ms, fracRes: 0.3717, norm(attn): 0.2275, norm(output): 0.5391, norm(x): 0.4962, norm(y): 1.0137, norm:1.4654, tok/sec: 100265.24, flops:105.23, batch-reuse:1
@ 4759 train 4.2004 , allloss: 4.2019, dt: 1321.78ms, fracRes: 0.3684, norm(attn): 0.2383, norm(output): 0.5430, norm(x): 0.4960, norm(y): 1.0135, norm:1.4818, tok/sec: 99163.27, flops:104.07, batch-reuse:1
@ 4760 train 4.2142 , allloss: 4.2152, dt: 1289.13ms, fracRes: 0.3687, norm(attn): 0.2402, norm(output): 0.5391, norm(x): 0.5005, norm(y): 1.0135, norm:1.4518, tok/sec: 101674.53, flops:106.71, batch-reuse:1
@ 4761 train 4.3490 , allloss: 4.3541, dt: 1318.94ms, fracRes: 0.3677, norm(attn): 0.2354, norm(output): 0.5352, norm(x): 0.5001, norm(y): 1.0135, norm:1.4398, tok/sec: 99376.81, flops:104.30, batch-reuse:1
@ 4762 train 4.2943 , allloss: 4.2955, dt: 1334.83ms, fracRes: 0.3689, norm(attn): 0.2344, norm(output): 0.5391, norm(x): 0.4977, norm(y): 1.0135, norm:1.4721, tok/sec: 98193.46, flops:103.06, batch-reuse:1
@ 4763 train 4.2923 , allloss: 4.2934, dt: 1290.09ms, fracRes: 0.3685, norm(attn): 0.2373, norm(output): 0.5352, norm(x): 0.4968, norm(y): 1.0135, norm:1.4170, tok/sec: 101599.13, flops:106.63, batch-reuse:1
@ 4764 train 4.3168 , allloss: 4.3189, dt: 1301.87ms, fracRes: 0.3693, norm(attn): 0.2363, norm(output): 0.5391, norm(x): 0.4999, norm(y): 1.0135, norm:1.5711, tok/sec: 100679.78, flops:105.67, batch-reuse:1
@ 4765 train 4.2657 , allloss: 4.2701, dt: 1306.27ms, fracRes: 0.3695, norm(attn): 0.2354, norm(output): 0.5352, norm(x): 0.4930, norm(y): 1.0136, norm:1.2624, tok/sec: 100340.95, flops:105.31, batch-reuse:1
@ 4766 train 4.3102 , allloss: 4.3114, dt: 1316.92ms, fracRes: 0.3695, norm(attn): 0.2354, norm(output): 0.5430, norm(x): 0.4986, norm(y): 1.0136, norm:1.4547, tok/sec: 99528.99, flops:104.46, batch-reuse:1
@ 4767 train 4.2738 , allloss: 4.2747, dt: 1339.33ms, fracRes: 0.3678, norm(attn): 0.2412, norm(output): 0.5352, norm(x): 0.4967, norm(y): 1.0135, norm:1.2883, tok/sec: 97863.63, flops:102.71, batch-reuse:1
@ 4768 train 4.0903 , allloss: 4.0916, dt: 1317.26ms, fracRes: 0.3709, norm(attn): 0.2373, norm(output): 0.5391, norm(x): 0.5007, norm(y): 1.0137, norm:1.5376, tok/sec: 99503.37, flops:104.43, batch-reuse:1
@ 4769 train 4.2537 , allloss: 4.2545, dt: 1294.54ms, fracRes: 0.3683, norm(attn): 0.2393, norm(output): 0.5312, norm(x): 0.4921, norm(y): 1.0136, norm:1.3020, tok/sec: 101250.15, flops:106.26, batch-reuse:1
@ 4770 train 4.2101 , allloss: 4.2112, dt: 1293.34ms, fracRes: 0.3699, norm(attn): 0.2412, norm(output): 0.5312, norm(x): 0.4958, norm(y): 1.0135, norm:1.6495, tok/sec: 101343.87, flops:106.36, batch-reuse:1
@ 4771 train 4.3043 , allloss: 4.3065, dt: 1304.77ms, fracRes: 0.3701, norm(attn): 0.2393, norm(output): 0.5391, norm(x): 0.5000, norm(y): 1.0135, norm:1.4736, tok/sec: 100456.28, flops:105.43, batch-reuse:1
@ 4772 train 4.1914 , allloss: 4.1929, dt: 1320.81ms, fracRes: 0.3683, norm(attn): 0.2383, norm(output): 0.5352, norm(x): 0.4955, norm(y): 1.0135, norm:1.3460, tok/sec: 99236.21, flops:104.15, batch-reuse:1
@ 4773 train 4.1442 , allloss: 4.1452, dt: 1345.75ms, fracRes: 0.3708, norm(attn): 0.2363, norm(output): 0.5391, norm(x): 0.5001, norm(y): 1.0135, norm:1.6175, tok/sec: 97397.02, flops:102.22, batch-reuse:1
@ 4774 train 4.2181 , allloss: 4.2190, dt: 1318.28ms, fracRes: 0.3705, norm(attn): 0.2373, norm(output): 0.5391, norm(x): 0.4953, norm(y): 1.0136, norm:1.3611, tok/sec: 99426.24, flops:104.35, batch-reuse:1
@ 4775 train 4.1234 , allloss: 4.1245, dt: 1283.21ms, fracRes: 0.3680, norm(attn): 0.2451, norm(output): 0.5352, norm(x): 0.4910, norm(y): 1.0135, norm:1.3794, tok/sec: 102143.95, flops:107.20, batch-reuse:1
@ 4776 train 4.1216 , allloss: 4.1226, dt: 1299.37ms, fracRes: 0.3701, norm(attn): 0.2441, norm(output): 0.5391, norm(x): 0.4978, norm(y): 1.0135, norm:1.3439, tok/sec: 100873.29, flops:105.87, batch-reuse:1
@ 4777 train 4.0635 , allloss: 4.0649, dt: 1298.59ms, fracRes: 0.3701, norm(attn): 0.2402, norm(output): 0.5352, norm(x): 0.4948, norm(y): 1.0136, norm:1.3758, tok/sec: 100933.91, flops:105.93, batch-reuse:1
@ 4778 train 4.1412 , allloss: 4.1421, dt: 1298.68ms, fracRes: 0.3691, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.4961, norm(y): 1.0136, norm:1.5671, tok/sec: 100926.85, flops:105.92, batch-reuse:1
@ 4779 train 4.1852 , allloss: 4.1863, dt: 1315.66ms, fracRes: 0.3686, norm(attn): 0.2393, norm(output): 0.5352, norm(x): 0.4946, norm(y): 1.0136, norm:1.3510, tok/sec: 99624.79, flops:104.56, batch-reuse:1
@ 4780 train 4.2387 , allloss: 4.2396, dt: 1319.92ms, fracRes: 0.3694, norm(attn): 0.2383, norm(output): 0.5430, norm(x): 0.4954, norm(y): 1.0136, norm:1.2919, tok/sec: 99303.34, flops:104.22, batch-reuse:1
@ 4781 train 4.0950 , allloss: 4.0983, dt: 1286.74ms, fracRes: 0.3672, norm(attn): 0.2402, norm(output): 0.5391, norm(x): 0.4939, norm(y): 1.0136, norm:1.3812, tok/sec: 101863.81, flops:106.91, batch-reuse:1
@ 4782 train 4.1814 , allloss: 4.1830, dt: 1302.56ms, fracRes: 0.3668, norm(attn): 0.2393, norm(output): 0.5469, norm(x): 0.4955, norm(y): 1.0136, norm:1.4103, tok/sec: 100626.47, flops:105.61, batch-reuse:1
@ 4783 train 4.1341 , allloss: 4.1386, dt: 1281.90ms, fracRes: 0.3682, norm(attn): 0.2402, norm(output): 0.5391, norm(x): 0.4965, norm(y): 1.0137, norm:1.2443, tok/sec: 102248.08, flops:107.31, batch-reuse:1
@ 4784 train 4.2313 , allloss: 4.2334, dt: 1316.32ms, fracRes: 0.3689, norm(attn): 0.2383, norm(output): 0.5430, norm(x): 0.4959, norm(y): 1.0136, norm:1.2642, tok/sec: 99574.65, flops:104.51, batch-reuse:1
@ 4785 train 4.1934 , allloss: 4.1948, dt: 1317.57ms, fracRes: 0.3706, norm(attn): 0.2383, norm(output): 0.5469, norm(x): 0.5029, norm(y): 1.0136, norm:1.3063, tok/sec: 99479.80, flops:104.41, batch-reuse:1
@ 4786 train 4.2537 , allloss: 4.2547, dt: 1293.57ms, fracRes: 0.3697, norm(attn): 0.2354, norm(output): 0.5430, norm(x): 0.4990, norm(y): 1.0136, norm:1.2714, tok/sec: 101325.64, flops:106.34, batch-reuse:1
@ 4787 train 4.1796 , allloss: 4.1804, dt: 1294.93ms, fracRes: 0.3658, norm(attn): 0.2412, norm(output): 0.5352, norm(x): 0.4948, norm(y): 1.0136, norm:1.5508, tok/sec: 101219.34, flops:106.23, batch-reuse:1
@ 4788 train 4.1346 , allloss: 4.1357, dt: 1298.93ms, fracRes: 0.3689, norm(attn): 0.2363, norm(output): 0.5469, norm(x): 0.5000, norm(y): 1.0136, norm:1.8359, tok/sec: 100907.64, flops:105.90, batch-reuse:1
@ 4789 train 4.3058 , allloss: 4.3072, dt: 1305.25ms, fracRes: 0.3697, norm(attn): 0.2354, norm(output): 0.5469, norm(x): 0.4992, norm(y): 1.0136, norm:1.4418, tok/sec: 100418.70, flops:105.39, batch-reuse:1
@ 4790 train 4.1900 , allloss: 4.1909, dt: 1329.03ms, fracRes: 0.3697, norm(attn): 0.2402, norm(output): 0.5391, norm(x): 0.4952, norm(y): 1.0136, norm:1.4497, tok/sec: 98622.21, flops:103.51, batch-reuse:1
@ 4791 train 4.1728 , allloss: 4.1737, dt: 1300.98ms, fracRes: 0.3705, norm(attn): 0.2383, norm(output): 0.5352, norm(x): 0.4937, norm(y): 1.0136, norm:1.5018, tok/sec: 100748.70, flops:105.74, batch-reuse:1
@ 4792 train 4.1789 , allloss: 4.1798, dt: 1320.56ms, fracRes: 0.3719, norm(attn): 0.2393, norm(output): 0.5469, norm(x): 0.5002, norm(y): 1.0135, norm:1.5058, tok/sec: 99254.50, flops:104.17, batch-reuse:1
@ 4793 train 4.1935 , allloss: 4.1943, dt: 1320.12ms, fracRes: 0.3711, norm(attn): 0.2363, norm(output): 0.5430, norm(x): 0.4958, norm(y): 1.0137, norm:1.4262, tok/sec: 99288.28, flops:104.20, batch-reuse:1
@ 4794 train 4.1190 , allloss: 4.1201, dt: 1302.03ms, fracRes: 0.3703, norm(attn): 0.2373, norm(output): 0.5430, norm(x): 0.4942, norm(y): 1.0136, norm:1.5052, tok/sec: 100667.80, flops:105.65, batch-reuse:1
@ 4795 train 4.1762 , allloss: 4.1773, dt: 1298.77ms, fracRes: 0.3707, norm(attn): 0.2354, norm(output): 0.5430, norm(x): 0.5006, norm(y): 1.0136, norm:1.4017, tok/sec: 100919.81, flops:105.92, batch-reuse:1
@ 4796 train 4.1769 , allloss: 4.1785, dt: 1323.19ms, fracRes: 0.3700, norm(attn): 0.2363, norm(output): 0.5430, norm(x): 0.4979, norm(y): 1.0135, norm:1.6711, tok/sec: 99057.90, flops:103.96, batch-reuse:1
@ 4797 train 4.2255 , allloss: 4.2266, dt: 1303.11ms, fracRes: 0.3705, norm(attn): 0.2354, norm(output): 0.5391, norm(x): 0.4978, norm(y): 1.0136, norm:1.4672, tok/sec: 100584.00, flops:105.56, batch-reuse:1
@ 4798 train 4.2104 , allloss: 4.2115, dt: 1310.62ms, fracRes: 0.3691, norm(attn): 0.2354, norm(output): 0.5352, norm(x): 0.4904, norm(y): 1.0136, norm:1.7316, tok/sec: 100007.75, flops:104.96, batch-reuse:1
@ 4799 train 4.1033 , allloss: 4.1043, dt: 1299.73ms, fracRes: 0.3703, norm(attn): 0.2373, norm(output): 0.5352, norm(x): 0.4924, norm(y): 1.0136, norm:1.5055, tok/sec: 100845.80, flops:105.84, batch-reuse:1
@ 4800 train 4.2053 , allloss: 4.2064, dt: 1313.32ms, fracRes: 0.3707, norm(attn): 0.2393, norm(output): 0.5430, norm(x): 0.4990, norm(y): 1.0135, norm:1.4458, tok/sec: 99802.36, flops:104.74, batch-reuse:1
@ 4801 train 4.2066 , allloss: 4.2085, dt: 1295.40ms, fracRes: 0.3721, norm(attn): 0.2402, norm(output): 0.5469, norm(x): 0.5023, norm(y): 1.0136, norm:1.4380, tok/sec: 101182.41, flops:106.19, batch-reuse:1
@ 4802 train 4.0600 , allloss: 4.0611, dt: 1302.36ms, fracRes: 0.3705, norm(attn): 0.2441, norm(output): 0.5391, norm(x): 0.4971, norm(y): 1.0135, norm:1.3103, tok/sec: 100641.96, flops:105.63, batch-reuse:1
@ 4803 train 4.1084 , allloss: 4.1095, dt: 1288.07ms, fracRes: 0.3731, norm(attn): 0.2344, norm(output): 0.5430, norm(x): 0.5006, norm(y): 1.0136, norm:2.1490, tok/sec: 101758.30, flops:106.80, batch-reuse:1
@ 4804 train 4.2110 , allloss: 4.2119, dt: 1308.17ms, fracRes: 0.3690, norm(attn): 0.2393, norm(output): 0.5391, norm(x): 0.4939, norm(y): 1.0136, norm:1.6558, tok/sec: 100194.61, flops:105.16, batch-reuse:1
@ 4805 train 4.2760 , allloss: 4.2775, dt: 1320.57ms, fracRes: 0.3690, norm(attn): 0.2373, norm(output): 0.5430, norm(x): 0.4970, norm(y): 1.0136, norm:1.5176, tok/sec: 99253.90, flops:104.17, batch-reuse:1
@ 4806 train 4.2018 , allloss: 4.2032, dt: 1274.90ms, fracRes: 0.3716, norm(attn): 0.2334, norm(output): 0.5469, norm(x): 0.5016, norm(y): 1.0137, norm:1.4850, tok/sec: 102809.56, flops:107.90, batch-reuse:1
@ 4807 train 4.1571 , allloss: 4.1582, dt: 1301.74ms, fracRes: 0.3704, norm(attn): 0.2383, norm(output): 0.5430, norm(x): 0.4952, norm(y): 1.0136, norm:1.3907, tok/sec: 100690.11, flops:105.68, batch-reuse:1
@ 4808 train 4.2922 , allloss: 4.2932, dt: 1314.65ms, fracRes: 0.3684, norm(attn): 0.2393, norm(output): 0.5391, norm(x): 0.4957, norm(y): 1.0136, norm:1.4859, tok/sec: 99700.80, flops:104.64, batch-reuse:1
@ 4809 train 4.1346 , allloss: 4.1355, dt: 1295.83ms, fracRes: 0.3710, norm(attn): 0.2383, norm(output): 0.5391, norm(x): 0.4971, norm(y): 1.0137, norm:1.4837, tok/sec: 101148.81, flops:106.16, batch-reuse:1
@ 4810 train 4.2738 , allloss: 4.2746, dt: 1301.21ms, fracRes: 0.3723, norm(attn): 0.2363, norm(output): 0.5391, norm(x): 0.4956, norm(y): 1.0137, norm:1.4958, tok/sec: 100730.70, flops:105.72, batch-reuse:1
@ 4811 train 4.2052 , allloss: 4.2063, dt: 1332.53ms, fracRes: 0.3724, norm(attn): 0.2334, norm(output): 0.5430, norm(x): 0.4966, norm(y): 1.0137, norm:1.4284, tok/sec: 98363.21, flops:103.23, batch-reuse:1
@ 4812 train 4.2225 , allloss: 4.2239, dt: 1334.20ms, fracRes: 0.3731, norm(attn): 0.2383, norm(output): 0.5469, norm(x): 0.5041, norm(y): 1.0136, norm:1.4558, tok/sec: 98239.92, flops:103.10, batch-reuse:1
@ 4813 train 4.1023 , allloss: 4.1039, dt: 1314.32ms, fracRes: 0.3690, norm(attn): 0.2422, norm(output): 0.5430, norm(x): 0.4980, norm(y): 1.0135, norm:1.4080, tok/sec: 99725.82, flops:104.66, batch-reuse:1
@ 4814 train 4.1870 , allloss: 4.1885, dt: 1292.88ms, fracRes: 0.3716, norm(attn): 0.2354, norm(output): 0.5430, norm(x): 0.5006, norm(y): 1.0137, norm:1.6568, tok/sec: 101379.95, flops:106.40, batch-reuse:1
@ 4815 train 4.1776 , allloss: 4.1785, dt: 1274.14ms, fracRes: 0.3700, norm(attn): 0.2393, norm(output): 0.5391, norm(x): 0.4952, norm(y): 1.0137, norm:1.4680, tok/sec: 102870.87, flops:107.96, batch-reuse:1
@ 4816 train 4.1583 , allloss: 4.1597, dt: 1311.69ms, fracRes: 0.3699, norm(attn): 0.2393, norm(output): 0.5430, norm(x): 0.4973, norm(y): 1.0136, norm:1.7407, tok/sec: 99926.19, flops:104.87, batch-reuse:1
@ 4817 train 4.1961 , allloss: 4.1974, dt: 1291.38ms, fracRes: 0.3706, norm(attn): 0.2363, norm(output): 0.5430, norm(x): 0.5007, norm(y): 1.0136, norm:1.5305, tok/sec: 101497.59, flops:106.52, batch-reuse:1
@ 4818 train 4.1217 , allloss: 4.1231, dt: 1296.21ms, fracRes: 0.3697, norm(attn): 0.2402, norm(output): 0.5430, norm(x): 0.4984, norm(y): 1.0135, norm:1.1678, tok/sec: 101119.62, flops:106.13, batch-reuse:1
@ 4819 train 4.1754 , allloss: 4.1768, dt: 1295.35ms, fracRes: 0.3703, norm(attn): 0.2393, norm(output): 0.5391, norm(x): 0.4960, norm(y): 1.0135, norm:1.6238, tok/sec: 101186.71, flops:106.20, batch-reuse:1
@ 4820 train 4.1867 , allloss: 4.1875, dt: 1296.24ms, fracRes: 0.3691, norm(attn): 0.2412, norm(output): 0.5391, norm(x): 0.4936, norm(y): 1.0135, norm:1.4061, tok/sec: 101116.96, flops:106.12, batch-reuse:1
@ 4821 train 4.3589 , allloss: 4.3605, dt: 1339.41ms, fracRes: 0.3690, norm(attn): 0.2383, norm(output): 0.5469, norm(x): 0.4999, norm(y): 1.0136, norm:1.4671, tok/sec: 97857.82, flops:102.70, batch-reuse:1
@ 4822 train 4.2236 , allloss: 4.2254, dt: 1339.58ms, fracRes: 0.3699, norm(attn): 0.2422, norm(output): 0.5469, norm(x): 0.5004, norm(y): 1.0135, norm:1.6376, tok/sec: 97845.35, flops:102.69, batch-reuse:1
@ 4823 train 4.3096 , allloss: 4.3105, dt: 1325.12ms, fracRes: 0.3694, norm(attn): 0.2422, norm(output): 0.5469, norm(x): 0.4987, norm(y): 1.0135, norm:1.5501, tok/sec: 98913.20, flops:103.81, batch-reuse:1
@ 4824 train 4.3249 , allloss: 4.3257, dt: 1308.64ms, fracRes: 0.3668, norm(attn): 0.2461, norm(output): 0.5391, norm(x): 0.4964, norm(y): 1.0135, norm:1.4323, tok/sec: 100158.63, flops:105.12, batch-reuse:1
@ 4825 train 4.3983 , allloss: 4.3993, dt: 1309.56ms, fracRes: 0.3686, norm(attn): 0.2412, norm(output): 0.5430, norm(x): 0.4967, norm(y): 1.0136, norm:1.4797, tok/sec: 100088.79, flops:105.05, batch-reuse:1
@ 4826 train 4.3255 , allloss: 4.3275, dt: 1302.17ms, fracRes: 0.3680, norm(attn): 0.2461, norm(output): 0.5469, norm(x): 0.4995, norm(y): 1.0135, norm:1.3640, tok/sec: 100656.61, flops:105.64, batch-reuse:1
@ 4827 train 4.3133 , allloss: 4.3143, dt: 1297.92ms, fracRes: 0.3711, norm(attn): 0.2393, norm(output): 0.5469, norm(x): 0.5027, norm(y): 1.0137, norm:1.4346, tok/sec: 100986.38, flops:105.99, batch-reuse:1
@ 4828 train 4.3128 , allloss: 4.3138, dt: 1299.93ms, fracRes: 0.3723, norm(attn): 0.2383, norm(output): 0.5469, norm(x): 0.5012, norm(y): 1.0137, norm:1.4237, tok/sec: 100829.98, flops:105.82, batch-reuse:1
@ 4829 train 4.4928 , allloss: 4.4944, dt: 1310.30ms, fracRes: 0.3737, norm(attn): 0.2344, norm(output): 0.5508, norm(x): 0.5097, norm(y): 1.0137, norm:1.4542, tok/sec: 100032.21, flops:104.99, batch-reuse:1
@ 4830 train 4.3630 , allloss: 4.3642, dt: 1295.40ms, fracRes: 0.3737, norm(attn): 0.2354, norm(output): 0.5547, norm(x): 0.5069, norm(y): 1.0136, norm:1.4484, tok/sec: 101182.73, flops:106.19, batch-reuse:1
@ 4831 train 4.2553 , allloss: 4.2561, dt: 1275.44ms, fracRes: 0.3755, norm(attn): 0.2344, norm(output): 0.5586, norm(x): 0.5062, norm(y): 1.0137, norm:1.3848, tok/sec: 102765.74, flops:107.85, batch-reuse:1
@ 4832 train 4.3914 , allloss: 4.3922, dt: 1300.43ms, fracRes: 0.3740, norm(attn): 0.2354, norm(output): 0.5508, norm(x): 0.5100, norm(y): 1.0137, norm:1.4698, tok/sec: 100791.35, flops:105.78, batch-reuse:1
@ 4833 train 4.3128 , allloss: 4.3158, dt: 1309.58ms, fracRes: 0.3753, norm(attn): 0.2305, norm(output): 0.5586, norm(x): 0.5075, norm(y): 1.0138, norm:1.3287, tok/sec: 100086.90, flops:105.04, batch-reuse:1
@ 4834 train 4.4167 , allloss: 4.4177, dt: 1301.95ms, fracRes: 0.3736, norm(attn): 0.2363, norm(output): 0.5508, norm(x): 0.5044, norm(y): 1.0137, norm:1.4958, tok/sec: 100673.35, flops:105.66, batch-reuse:1
@ 4835 train 4.3206 , allloss: 4.3217, dt: 1326.21ms, fracRes: 0.3694, norm(attn): 0.2441, norm(output): 0.5391, norm(x): 0.5012, norm(y): 1.0136, norm:1.3451, tok/sec: 98831.78, flops:103.73, batch-reuse:1
@ 4836 train 4.2819 , allloss: 4.2831, dt: 1283.98ms, fracRes: 0.3690, norm(attn): 0.2441, norm(output): 0.5391, norm(x): 0.5012, norm(y): 1.0137, norm:1.3923, tok/sec: 102082.86, flops:107.14, batch-reuse:1
@ 4837 train 4.3419 , allloss: 4.3447, dt: 1295.42ms, fracRes: 0.3692, norm(attn): 0.2441, norm(output): 0.5430, norm(x): 0.5039, norm(y): 1.0137, norm:1.4204, tok/sec: 101180.72, flops:106.19, batch-reuse:1
@ 4838 train 4.3475 , allloss: 4.3483, dt: 1317.34ms, fracRes: 0.3676, norm(attn): 0.2461, norm(output): 0.5391, norm(x): 0.5033, norm(y): 1.0136, norm:1.6291, tok/sec: 99497.73, flops:104.42, batch-reuse:1
@ 4839 train 4.3053 , allloss: 4.3070, dt: 1322.26ms, fracRes: 0.3698, norm(attn): 0.2422, norm(output): 0.5469, norm(x): 0.5058, norm(y): 1.0137, norm:1.4814, tok/sec: 99127.12, flops:104.04, batch-reuse:1
@ 4840 train 4.3757 , allloss: 4.3770, dt: 1314.22ms, fracRes: 0.3744, norm(attn): 0.2383, norm(output): 0.5508, norm(x): 0.5061, norm(y): 1.0136, norm:1.5902, tok/sec: 99733.31, flops:104.67, batch-reuse:1
@ 4841 train 4.4015 , allloss: 4.4028, dt: 1339.88ms, fracRes: 0.3686, norm(attn): 0.2471, norm(output): 0.5391, norm(x): 0.5030, norm(y): 1.0136, norm:1.6973, tok/sec: 97823.86, flops:102.67, batch-reuse:1
@ 4842 train 4.3495 , allloss: 4.3505, dt: 1305.92ms, fracRes: 0.3671, norm(attn): 0.2432, norm(output): 0.5352, norm(x): 0.5001, norm(y): 1.0136, norm:1.5126, tok/sec: 100367.90, flops:105.34, batch-reuse:1
@ 4843 train 4.3764 , allloss: 4.3776, dt: 1307.48ms, fracRes: 0.3676, norm(attn): 0.2461, norm(output): 0.5391, norm(x): 0.5022, norm(y): 1.0136, norm:1.6450, tok/sec: 100247.58, flops:105.21, batch-reuse:1
@ 4844 train 4.2669 , allloss: 4.2683, dt: 1321.80ms, fracRes: 0.3686, norm(attn): 0.2480, norm(output): 0.5469, norm(x): 0.5027, norm(y): 1.0135, norm:1.5280, tok/sec: 99161.62, flops:104.07, batch-reuse:1
@ 4845 train 4.2432 , allloss: 4.2442, dt: 1275.07ms, fracRes: 0.3696, norm(attn): 0.2490, norm(output): 0.5469, norm(x): 0.4998, norm(y): 1.0134, norm:1.5711, tok/sec: 102796.31, flops:107.89, batch-reuse:1
@ 4846 train 4.3684 , allloss: 4.3694, dt: 1307.97ms, fracRes: 0.3696, norm(attn): 0.2422, norm(output): 0.5430, norm(x): 0.4997, norm(y): 1.0137, norm:1.6819, tok/sec: 100210.37, flops:105.17, batch-reuse:1
@ 4847 train 4.3647 , allloss: 4.3658, dt: 1327.34ms, fracRes: 0.3675, norm(attn): 0.2451, norm(output): 0.5469, norm(x): 0.5021, norm(y): 1.0136, norm:1.5882, tok/sec: 98748.08, flops:103.64, batch-reuse:1
@ 4848 train 4.2896 , allloss: 4.2907, dt: 1313.30ms, fracRes: 0.3687, norm(attn): 0.2393, norm(output): 0.5508, norm(x): 0.5023, norm(y): 1.0136, norm:1.4840, tok/sec: 99803.41, flops:104.75, batch-reuse:1
@ 4849 train 4.3916 , allloss: 4.3926, dt: 1306.41ms, fracRes: 0.3688, norm(attn): 0.2354, norm(output): 0.5430, norm(x): 0.5006, norm(y): 1.0137, norm:1.5582, tok/sec: 100329.96, flops:105.30, batch-reuse:1
@ 4850 train 4.5943 , allloss: 4.5951, dt: 1279.42ms, fracRes: 0.3712, norm(attn): 0.2383, norm(output): 0.5508, norm(x): 0.5038, norm(y): 1.0137, norm:1.5614, tok/sec: 102446.73, flops:107.52, batch-reuse:1
@ 4851 train 4.2898 , allloss: 4.2909, dt: 1306.92ms, fracRes: 0.3724, norm(attn): 0.2373, norm(output): 0.5508, norm(x): 0.5051, norm(y): 1.0136, norm:1.6599, tok/sec: 100290.81, flops:105.26, batch-reuse:1
@ 4852 train 4.3505 , allloss: 4.3519, dt: 1301.58ms, fracRes: 0.3726, norm(attn): 0.2383, norm(output): 0.5547, norm(x): 0.5021, norm(y): 1.0136, norm:1.5244, tok/sec: 100701.86, flops:105.69, batch-reuse:1
@ 4853 train 4.2801 , allloss: 4.2813, dt: 1314.23ms, fracRes: 0.3737, norm(attn): 0.2393, norm(output): 0.5547, norm(x): 0.5042, norm(y): 1.0136, norm:1.4858, tok/sec: 99732.91, flops:104.67, batch-reuse:1
@ 4854 train 4.2349 , allloss: 4.2361, dt: 1314.65ms, fracRes: 0.3734, norm(attn): 0.2363, norm(output): 0.5508, norm(x): 0.5071, norm(y): 1.0135, norm:2.0216, tok/sec: 99700.82, flops:104.64, batch-reuse:1
@ 4855 train 4.4440 , allloss: 4.4458, dt: 1323.72ms, fracRes: 0.3725, norm(attn): 0.2354, norm(output): 0.5508, norm(x): 0.5058, norm(y): 1.0136, norm:1.7550, tok/sec: 99017.89, flops:103.92, batch-reuse:1
@ 4856 train 4.3518 , allloss: 4.3526, dt: 1288.26ms, fracRes: 0.3706, norm(attn): 0.2402, norm(output): 0.5508, norm(x): 0.5023, norm(y): 1.0136, norm:1.5220, tok/sec: 101743.19, flops:106.78, batch-reuse:1
@ 4857 train 4.2669 , allloss: 4.2683, dt: 1310.00ms, fracRes: 0.3699, norm(attn): 0.2422, norm(output): 0.5547, norm(x): 0.5029, norm(y): 1.0136, norm:1.5452, tok/sec: 100054.91, flops:105.01, batch-reuse:1
@ 4858 train 4.3238 , allloss: 4.3247, dt: 1323.85ms, fracRes: 0.3697, norm(attn): 0.2402, norm(output): 0.5508, norm(x): 0.5009, norm(y): 1.0136, norm:1.3603, tok/sec: 99008.34, flops:103.91, batch-reuse:1
@ 4859 train 4.3673 , allloss: 4.3707, dt: 1291.96ms, fracRes: 0.3696, norm(attn): 0.2373, norm(output): 0.5469, norm(x): 0.5018, norm(y): 1.0137, norm:1.9403, tok/sec: 101451.89, flops:106.48, batch-reuse:1
@ 4860 train 4.2922 , allloss: 4.2940, dt: 1294.27ms, fracRes: 0.3688, norm(attn): 0.2461, norm(output): 0.5391, norm(x): 0.4992, norm(y): 1.0136, norm:1.6565, tok/sec: 101271.26, flops:106.29, batch-reuse:1
@ 4861 train 4.2905 , allloss: 4.2915, dt: 1286.78ms, fracRes: 0.3692, norm(attn): 0.2471, norm(output): 0.5312, norm(x): 0.4956, norm(y): 1.0136, norm:1.4659, tok/sec: 101860.41, flops:106.90, batch-reuse:1
@ 4862 train 4.3349 , allloss: 4.3359, dt: 1309.53ms, fracRes: 0.3695, norm(attn): 0.2461, norm(output): 0.5430, norm(x): 0.4987, norm(y): 1.0135, norm:1.4380, tok/sec: 100090.93, flops:105.05, batch-reuse:1
@ 4863 train 4.4576 , allloss: 4.4583, dt: 1315.29ms, fracRes: 0.3682, norm(attn): 0.2432, norm(output): 0.5391, norm(x): 0.4986, norm(y): 1.0135, norm:1.4603, tok/sec: 99652.22, flops:104.59, batch-reuse:1
@ 4864 train 4.3518 , allloss: 4.3527, dt: 1294.45ms, fracRes: 0.3709, norm(attn): 0.2412, norm(output): 0.5469, norm(x): 0.5040, norm(y): 1.0136, norm:1.3749, tok/sec: 101256.55, flops:106.27, batch-reuse:1
@ 4865 train 4.2540 , allloss: 4.2555, dt: 1302.29ms, fracRes: 0.3722, norm(attn): 0.2402, norm(output): 0.5547, norm(x): 0.5083, norm(y): 1.0136, norm:1.4936, tok/sec: 100647.45, flops:105.63, batch-reuse:1
@ 4866 train 4.3675 , allloss: 4.3686, dt: 1300.59ms, fracRes: 0.3694, norm(attn): 0.2441, norm(output): 0.5430, norm(x): 0.5027, norm(y): 1.0135, norm:1.3436, tok/sec: 100779.23, flops:105.77, batch-reuse:1
@ 4867 train 4.2818 , allloss: 4.2824, dt: 1294.72ms, fracRes: 0.3702, norm(attn): 0.2451, norm(output): 0.5430, norm(x): 0.5035, norm(y): 1.0136, norm:1.6982, tok/sec: 101235.89, flops:106.25, batch-reuse:1
@ 4868 train 4.2454 , allloss: 4.2472, dt: 1318.41ms, fracRes: 0.3707, norm(attn): 0.2471, norm(output): 0.5391, norm(x): 0.4993, norm(y): 1.0136, norm:1.4033, tok/sec: 99417.03, flops:104.34, batch-reuse:1
@ 4869 train 4.2990 , allloss: 4.3012, dt: 1324.11ms, fracRes: 0.3706, norm(attn): 0.2441, norm(output): 0.5391, norm(x): 0.5000, norm(y): 1.0136, norm:1.5027, tok/sec: 98988.73, flops:103.89, batch-reuse:1
@ 4870 train 4.2794 , allloss: 4.2826, dt: 1352.92ms, fracRes: 0.3707, norm(attn): 0.2461, norm(output): 0.5430, norm(x): 0.4996, norm(y): 1.0136, norm:1.3745, tok/sec: 96880.70, flops:101.68, batch-reuse:1
@ 4871 train 4.3855 , allloss: 4.3866, dt: 1351.68ms, fracRes: 0.3699, norm(attn): 0.2461, norm(output): 0.5430, norm(x): 0.5001, norm(y): 1.0136, norm:1.5461, tok/sec: 96969.47, flops:101.77, batch-reuse:1
@ 4872 train 4.3337 , allloss: 4.3343, dt: 1325.88ms, fracRes: 0.3695, norm(attn): 0.2461, norm(output): 0.5352, norm(x): 0.4951, norm(y): 1.0136, norm:1.7600, tok/sec: 98856.92, flops:103.75, batch-reuse:1
@ 4873 train 4.1733 , allloss: 4.1742, dt: 1314.17ms, fracRes: 0.3700, norm(attn): 0.2471, norm(output): 0.5430, norm(x): 0.4980, norm(y): 1.0135, norm:1.3907, tok/sec: 99737.83, flops:104.68, batch-reuse:1
@ 4874 train 4.3328 , allloss: 4.3339, dt: 1338.27ms, fracRes: 0.3705, norm(attn): 0.2432, norm(output): 0.5469, norm(x): 0.5019, norm(y): 1.0136, norm:1.4017, tok/sec: 97941.43, flops:102.79, batch-reuse:1
@ 4875 train 4.3558 , allloss: 4.3640, dt: 1320.47ms, fracRes: 0.3708, norm(attn): 0.2451, norm(output): 0.5430, norm(x): 0.5021, norm(y): 1.0136, norm:1.4848, tok/sec: 99261.30, flops:104.18, batch-reuse:1
@ 4876 train 4.3467 , allloss: 4.3479, dt: 1292.54ms, fracRes: 0.3696, norm(attn): 0.2441, norm(output): 0.5391, norm(x): 0.4984, norm(y): 1.0137, norm:1.5158, tok/sec: 101406.92, flops:106.43, batch-reuse:1
@ 4877 train 4.3606 , allloss: 4.3615, dt: 1311.32ms, fracRes: 0.3717, norm(attn): 0.2441, norm(output): 0.5469, norm(x): 0.5026, norm(y): 1.0136, norm:1.3375, tok/sec: 99954.31, flops:104.90, batch-reuse:1
@ 4878 train 4.1992 , allloss: 4.2004, dt: 1291.58ms, fracRes: 0.3706, norm(attn): 0.2471, norm(output): 0.5391, norm(x): 0.4976, norm(y): 1.0136, norm:1.3459, tok/sec: 101482.06, flops:106.51, batch-reuse:1
@ 4879 train 4.3198 , allloss: 4.3226, dt: 1294.86ms, fracRes: 0.3713, norm(attn): 0.2422, norm(output): 0.5391, norm(x): 0.4988, norm(y): 1.0136, norm:1.3202, tok/sec: 101224.59, flops:106.24, batch-reuse:1
@ 4880 train 4.2508 , allloss: 4.2539, dt: 1316.98ms, fracRes: 0.3718, norm(attn): 0.2441, norm(output): 0.5469, norm(x): 0.5007, norm(y): 1.0136, norm:1.4333, tok/sec: 99524.86, flops:104.45, batch-reuse:1
@ 4881 train 4.3741 , allloss: 4.3750, dt: 1340.38ms, fracRes: 0.3702, norm(attn): 0.2490, norm(output): 0.5469, norm(x): 0.5022, norm(y): 1.0135, norm:1.2964, tok/sec: 97787.48, flops:102.63, batch-reuse:1
@ 4882 train 4.4156 , allloss: 4.4176, dt: 1340.80ms, fracRes: 0.3696, norm(attn): 0.2441, norm(output): 0.5391, norm(x): 0.4999, norm(y): 1.0136, norm:1.6434, tok/sec: 97756.33, flops:102.60, batch-reuse:1
@ 4883 train 4.2774 , allloss: 4.2784, dt: 1286.50ms, fracRes: 0.3690, norm(attn): 0.2451, norm(output): 0.5430, norm(x): 0.5006, norm(y): 1.0136, norm:1.2664, tok/sec: 101882.87, flops:106.93, batch-reuse:1
@ 4884 train 4.2132 , allloss: 4.2149, dt: 1284.94ms, fracRes: 0.3683, norm(attn): 0.2480, norm(output): 0.5391, norm(x): 0.5020, norm(y): 1.0136, norm:1.4416, tok/sec: 102006.13, flops:107.06, batch-reuse:1
@ 4885 train 4.4990 , allloss: 4.5009, dt: 1300.58ms, fracRes: 0.3688, norm(attn): 0.2422, norm(output): 0.5430, norm(x): 0.5018, norm(y): 1.0136, norm:1.4247, tok/sec: 100779.89, flops:105.77, batch-reuse:1
@ 4886 train 4.2468 , allloss: 4.2485, dt: 1306.30ms, fracRes: 0.3692, norm(attn): 0.2480, norm(output): 0.5469, norm(x): 0.5045, norm(y): 1.0135, norm:1.4325, tok/sec: 100338.68, flops:105.31, batch-reuse:1
@ 4887 train 4.4048 , allloss: 4.4114, dt: 1308.97ms, fracRes: 0.3723, norm(attn): 0.2412, norm(output): 0.5508, norm(x): 0.5072, norm(y): 1.0136, norm:1.5253, tok/sec: 100133.51, flops:105.09, batch-reuse:1
@ 4888 train 4.2451 , allloss: 4.2492, dt: 1336.17ms, fracRes: 0.3700, norm(attn): 0.2451, norm(output): 0.5430, norm(x): 0.4997, norm(y): 1.0135, norm:1.2974, tok/sec: 98095.25, flops:102.95, batch-reuse:1
@ 4889 train 4.2753 , allloss: 4.2766, dt: 1322.24ms, fracRes: 0.3719, norm(attn): 0.2402, norm(output): 0.5469, norm(x): 0.5020, norm(y): 1.0137, norm:1.3983, tok/sec: 99128.89, flops:104.04, batch-reuse:1
@ 4890 train 4.2703 , allloss: 4.2714, dt: 1316.81ms, fracRes: 0.3723, norm(attn): 0.2402, norm(output): 0.5469, norm(x): 0.5055, norm(y): 1.0137, norm:1.4728, tok/sec: 99537.82, flops:104.47, batch-reuse:1
@ 4891 train 4.3043 , allloss: 4.3051, dt: 1321.57ms, fracRes: 0.3705, norm(attn): 0.2461, norm(output): 0.5430, norm(x): 0.4998, norm(y): 1.0136, norm:1.5381, tok/sec: 99179.08, flops:104.09, batch-reuse:1
@ 4892 train 4.3300 , allloss: 4.3322, dt: 1307.45ms, fracRes: 0.3729, norm(attn): 0.2402, norm(output): 0.5508, norm(x): 0.5039, norm(y): 1.0137, norm:1.2745, tok/sec: 100250.05, flops:105.21, batch-reuse:1
@ 4893 train 4.3132 , allloss: 4.3151, dt: 1278.35ms, fracRes: 0.3707, norm(attn): 0.2451, norm(output): 0.5508, norm(x): 0.5013, norm(y): 1.0137, norm:1.4626, tok/sec: 102531.78, flops:107.61, batch-reuse:1
@ 4894 train 4.3680 , allloss: 4.3689, dt: 1301.41ms, fracRes: 0.3723, norm(attn): 0.2471, norm(output): 0.5469, norm(x): 0.5075, norm(y): 1.0137, norm:1.4534, tok/sec: 100715.57, flops:105.70, batch-reuse:1
@ 4895 train 4.2908 , allloss: 4.2924, dt: 1297.60ms, fracRes: 0.3702, norm(attn): 0.2461, norm(output): 0.5469, norm(x): 0.5022, norm(y): 1.0137, norm:1.5676, tok/sec: 101011.32, flops:106.01, batch-reuse:1
@ 4896 train 4.3580 , allloss: 4.3587, dt: 1309.14ms, fracRes: 0.3726, norm(attn): 0.2383, norm(output): 0.5469, norm(x): 0.4998, norm(y): 1.0136, norm:1.5467, tok/sec: 100120.95, flops:105.08, batch-reuse:1
@ 4897 train 4.3398 , allloss: 4.3410, dt: 1284.18ms, fracRes: 0.3694, norm(attn): 0.2441, norm(output): 0.5391, norm(x): 0.4970, norm(y): 1.0137, norm:1.4676, tok/sec: 102067.04, flops:107.12, batch-reuse:1
@ 4898 train 4.3409 , allloss: 4.3432, dt: 1289.84ms, fracRes: 0.3708, norm(attn): 0.2461, norm(output): 0.5508, norm(x): 0.5037, norm(y): 1.0137, norm:1.6826, tok/sec: 101619.01, flops:106.65, batch-reuse:1
@ 4899 train 4.3407 , allloss: 4.3439, dt: 1284.37ms, fracRes: 0.3698, norm(attn): 0.2422, norm(output): 0.5508, norm(x): 0.5018, norm(y): 1.0137, norm:1.4860, tok/sec: 102051.80, flops:107.11, batch-reuse:1
@ 4900 train 4.2687 , allloss: 4.2698, dt: 1279.18ms, fracRes: 0.3701, norm(attn): 0.2471, norm(output): 0.5469, norm(x): 0.5013, norm(y): 1.0136, norm:1.4613, tok/sec: 102465.79, flops:107.54, batch-reuse:1
@ 4901 train 4.3314 , allloss: 4.3325, dt: 1289.70ms, fracRes: 0.3708, norm(attn): 0.2432, norm(output): 0.5469, norm(x): 0.5000, norm(y): 1.0136, norm:1.4856, tok/sec: 101629.87, flops:106.66, batch-reuse:1
@ 4902 train 4.0827 , allloss: 4.0835, dt: 1285.67ms, fracRes: 0.3712, norm(attn): 0.2461, norm(output): 0.5508, norm(x): 0.5047, norm(y): 1.0136, norm:1.4083, tok/sec: 101948.43, flops:107.00, batch-reuse:1
@ 4903 train 4.1746 , allloss: 4.1760, dt: 1314.12ms, fracRes: 0.3675, norm(attn): 0.2500, norm(output): 0.5430, norm(x): 0.5043, norm(y): 1.0136, norm:1.2807, tok/sec: 99741.21, flops:104.68, batch-reuse:1
@ 4904 train 4.2741 , allloss: 4.2772, dt: 1294.68ms, fracRes: 0.3703, norm(attn): 0.2461, norm(output): 0.5430, norm(x): 0.5029, norm(y): 1.0137, norm:1.4747, tok/sec: 101238.55, flops:106.25, batch-reuse:1
@ 4905 train 4.2476 , allloss: 4.2490, dt: 1312.73ms, fracRes: 0.3707, norm(attn): 0.2461, norm(output): 0.5469, norm(x): 0.5000, norm(y): 1.0137, norm:1.2959, tok/sec: 99846.75, flops:104.79, batch-reuse:1
@ 4906 train 4.3387 , allloss: 4.3399, dt: 1316.31ms, fracRes: 0.3711, norm(attn): 0.2471, norm(output): 0.5547, norm(x): 0.5003, norm(y): 1.0136, norm:1.3795, tok/sec: 99575.35, flops:104.51, batch-reuse:1
@ 4907 train 4.3718 , allloss: 4.3729, dt: 1313.64ms, fracRes: 0.3713, norm(attn): 0.2451, norm(output): 0.5430, norm(x): 0.4985, norm(y): 1.0137, norm:1.3407, tok/sec: 99777.67, flops:104.72, batch-reuse:1
@ 4908 train 4.3564 , allloss: 4.3574, dt: 1334.80ms, fracRes: 0.3717, norm(attn): 0.2441, norm(output): 0.5469, norm(x): 0.5036, norm(y): 1.0137, norm:1.3127, tok/sec: 98195.63, flops:103.06, batch-reuse:1
@ 4909 train 4.2660 , allloss: 4.2671, dt: 1292.64ms, fracRes: 0.3700, norm(attn): 0.2432, norm(output): 0.5508, norm(x): 0.5049, norm(y): 1.0138, norm:1.3058, tok/sec: 101398.52, flops:106.42, batch-reuse:1
@ 4910 train 4.2404 , allloss: 4.2420, dt: 1314.68ms, fracRes: 0.3783, norm(attn): 0.2334, norm(output): 0.5703, norm(x): 0.5227, norm(y): 1.0139, norm:2.0504, tok/sec: 99699.05, flops:104.64, batch-reuse:1
@ 4911 train 4.2431 , allloss: 4.2455, dt: 1307.59ms, fracRes: 0.3703, norm(attn): 0.2480, norm(output): 0.5547, norm(x): 0.5101, norm(y): 1.0137, norm:1.6987, tok/sec: 100239.74, flops:105.20, batch-reuse:1
@ 4912 train 4.3830 , allloss: 4.3843, dt: 1336.79ms, fracRes: 0.3693, norm(attn): 0.2432, norm(output): 0.5430, norm(x): 0.5049, norm(y): 1.0138, norm:1.3742, tok/sec: 98049.45, flops:102.90, batch-reuse:1
@ 4913 train 4.3349 , allloss: 4.3355, dt: 1317.47ms, fracRes: 0.3730, norm(attn): 0.2412, norm(output): 0.5547, norm(x): 0.5098, norm(y): 1.0139, norm:1.8002, tok/sec: 99487.58, flops:104.41, batch-reuse:1
@ 4914 train 4.2853 , allloss: 4.2858, dt: 1306.98ms, fracRes: 0.3703, norm(attn): 0.2461, norm(output): 0.5391, norm(x): 0.4963, norm(y): 1.0136, norm:2.0610, tok/sec: 100286.04, flops:105.25, batch-reuse:1
@ 4915 train 4.2768 , allloss: 4.2778, dt: 1328.86ms, fracRes: 0.3703, norm(attn): 0.2539, norm(output): 0.5430, norm(x): 0.4992, norm(y): 1.0135, norm:1.7365, tok/sec: 98635.04, flops:103.52, batch-reuse:1
@ 4916 train 4.2679 , allloss: 4.2693, dt: 1282.09ms, fracRes: 0.3714, norm(attn): 0.2500, norm(output): 0.5469, norm(x): 0.5007, norm(y): 1.0135, norm:1.5596, tok/sec: 102233.25, flops:107.30, batch-reuse:1
@ 4917 train 4.1982 , allloss: 4.1994, dt: 1323.86ms, fracRes: 0.3726, norm(attn): 0.2471, norm(output): 0.5430, norm(x): 0.4960, norm(y): 1.0136, norm:1.5242, tok/sec: 99007.58, flops:103.91, batch-reuse:1
@ 4918 train 4.2145 , allloss: 4.2189, dt: 1345.71ms, fracRes: 0.3730, norm(attn): 0.2490, norm(output): 0.5391, norm(x): 0.4964, norm(y): 1.0135, norm:1.6605, tok/sec: 97400.02, flops:102.22, batch-reuse:1
@ 4919 train 4.2358 , allloss: 4.2370, dt: 1341.22ms, fracRes: 0.3716, norm(attn): 0.2461, norm(output): 0.5430, norm(x): 0.5021, norm(y): 1.0136, norm:1.4544, tok/sec: 97725.87, flops:102.57, batch-reuse:1
@ 4920 train 4.2378 , allloss: 4.2389, dt: 1310.64ms, fracRes: 0.3711, norm(attn): 0.2451, norm(output): 0.5508, norm(x): 0.5043, norm(y): 1.0136, norm:1.4751, tok/sec: 100006.15, flops:104.96, batch-reuse:1
@ 4921 train 4.2445 , allloss: 4.2462, dt: 1322.01ms, fracRes: 0.3720, norm(attn): 0.2432, norm(output): 0.5547, norm(x): 0.5055, norm(y): 1.0137, norm:1.5180, tok/sec: 99146.28, flops:104.06, batch-reuse:1
@ 4922 train 4.1910 , allloss: 4.1921, dt: 1283.77ms, fracRes: 0.3714, norm(attn): 0.2402, norm(output): 0.5469, norm(x): 0.5020, norm(y): 1.0137, norm:1.4020, tok/sec: 102099.66, flops:107.16, batch-reuse:1
@ 4923 train 4.2365 , allloss: 4.2384, dt: 1310.64ms, fracRes: 0.3698, norm(attn): 0.2432, norm(output): 0.5430, norm(x): 0.5031, norm(y): 1.0136, norm:1.5107, tok/sec: 100006.06, flops:104.96, batch-reuse:1
@ 4924 train 4.2463 , allloss: 4.2475, dt: 1308.70ms, fracRes: 0.3683, norm(attn): 0.2461, norm(output): 0.5469, norm(x): 0.5041, norm(y): 1.0136, norm:1.3541, tok/sec: 100154.33, flops:105.11, batch-reuse:1
@ 4925 train 4.2026 , allloss: 4.2056, dt: 1295.78ms, fracRes: 0.3666, norm(attn): 0.2490, norm(output): 0.5391, norm(x): 0.4989, norm(y): 1.0135, norm:1.2926, tok/sec: 101153.13, flops:106.16, batch-reuse:1
@ 4926 train 4.2795 , allloss: 4.2814, dt: 1312.53ms, fracRes: 0.3669, norm(attn): 0.2500, norm(output): 0.5430, norm(x): 0.5030, norm(y): 1.0136, norm:1.5051, tok/sec: 99862.08, flops:104.81, batch-reuse:1
@ 4927 train 4.3661 , allloss: 4.3696, dt: 1294.55ms, fracRes: 0.3681, norm(attn): 0.2480, norm(output): 0.5391, norm(x): 0.5018, norm(y): 1.0136, norm:1.3522, tok/sec: 101249.46, flops:106.26, batch-reuse:1
@ 4928 train 4.1569 , allloss: 4.1605, dt: 1270.75ms, fracRes: 0.3679, norm(attn): 0.2471, norm(output): 0.5469, norm(x): 0.5036, norm(y): 1.0136, norm:1.5241, tok/sec: 103145.31, flops:108.25, batch-reuse:1
@ 4929 train 4.1826 , allloss: 4.1835, dt: 1298.08ms, fracRes: 0.3698, norm(attn): 0.2520, norm(output): 0.5469, norm(x): 0.5039, norm(y): 1.0135, norm:1.6658, tok/sec: 100973.82, flops:105.97, batch-reuse:1
@ 4930 train 4.2072 , allloss: 4.2096, dt: 1297.26ms, fracRes: 0.3708, norm(attn): 0.2432, norm(output): 0.5469, norm(x): 0.5035, norm(y): 1.0137, norm:1.4147, tok/sec: 101037.83, flops:106.04, batch-reuse:1
@ 4931 train 4.2484 , allloss: 4.2505, dt: 1286.16ms, fracRes: 0.3706, norm(attn): 0.2471, norm(output): 0.5469, norm(x): 0.5034, norm(y): 1.0137, norm:1.3668, tok/sec: 101909.64, flops:106.96, batch-reuse:1
@ 4932 train 4.2619 , allloss: 4.2630, dt: 1290.22ms, fracRes: 0.3723, norm(attn): 0.2461, norm(output): 0.5469, norm(x): 0.5039, norm(y): 1.0137, norm:1.3589, tok/sec: 101588.87, flops:106.62, batch-reuse:1
@ 4933 train 4.2272 , allloss: 4.2294, dt: 1321.16ms, fracRes: 0.3728, norm(attn): 0.2441, norm(output): 0.5547, norm(x): 0.5057, norm(y): 1.0137, norm:1.4229, tok/sec: 99209.48, flops:104.12, batch-reuse:1
@ 4934 train 4.2212 , allloss: 4.2223, dt: 1343.21ms, fracRes: 0.3725, norm(attn): 0.2422, norm(output): 0.5508, norm(x): 0.5010, norm(y): 1.0136, norm:1.5039, tok/sec: 97581.08, flops:102.41, batch-reuse:1
@ 4935 train 4.2601 , allloss: 4.2611, dt: 1284.79ms, fracRes: 0.3728, norm(attn): 0.2422, norm(output): 0.5430, norm(x): 0.5010, norm(y): 1.0136, norm:1.5546, tok/sec: 102018.13, flops:107.07, batch-reuse:1
@ 4936 train 4.2614 , allloss: 4.2626, dt: 1294.76ms, fracRes: 0.3743, norm(attn): 0.2412, norm(output): 0.5547, norm(x): 0.5048, norm(y): 1.0137, norm:1.5322, tok/sec: 101232.75, flops:106.25, batch-reuse:1
@ 4937 train 4.2456 , allloss: 4.2466, dt: 1283.55ms, fracRes: 0.3736, norm(attn): 0.2373, norm(output): 0.5508, norm(x): 0.5006, norm(y): 1.0137, norm:1.4502, tok/sec: 102116.75, flops:107.17, batch-reuse:1
@ 4938 train 4.2265 , allloss: 4.2321, dt: 1292.12ms, fracRes: 0.3727, norm(attn): 0.2363, norm(output): 0.5469, norm(x): 0.4993, norm(y): 1.0137, norm:1.3620, tok/sec: 101439.87, flops:106.46, batch-reuse:1
@ 4939 train 4.3050 , allloss: 4.3062, dt: 1301.04ms, fracRes: 0.3731, norm(attn): 0.2422, norm(output): 0.5508, norm(x): 0.5032, norm(y): 1.0136, norm:1.4121, tok/sec: 100744.19, flops:105.73, batch-reuse:1
@ 4940 train 4.1743 , allloss: 4.1751, dt: 1301.73ms, fracRes: 0.3731, norm(attn): 0.2402, norm(output): 0.5469, norm(x): 0.5005, norm(y): 1.0137, norm:1.4263, tok/sec: 100690.48, flops:105.68, batch-reuse:1
@ 4941 train 4.2422 , allloss: 4.2432, dt: 1301.58ms, fracRes: 0.3712, norm(attn): 0.2451, norm(output): 0.5469, norm(x): 0.5017, norm(y): 1.0136, norm:1.3316, tok/sec: 100701.99, flops:105.69, batch-reuse:1
@ 4942 train 4.2282 , allloss: 4.2305, dt: 1280.13ms, fracRes: 0.3703, norm(attn): 0.2480, norm(output): 0.5508, norm(x): 0.5037, norm(y): 1.0136, norm:1.3529, tok/sec: 102389.44, flops:107.46, batch-reuse:1
@ 4943 train 4.3123 , allloss: 4.3138, dt: 1280.85ms, fracRes: 0.3718, norm(attn): 0.2422, norm(output): 0.5469, norm(x): 0.5055, norm(y): 1.0137, norm:1.2065, tok/sec: 102332.11, flops:107.40, batch-reuse:1
@ 4944 train 4.1826 , allloss: 4.1837, dt: 1293.52ms, fracRes: 0.3724, norm(attn): 0.2471, norm(output): 0.5508, norm(x): 0.5054, norm(y): 1.0136, norm:1.3062, tok/sec: 101329.97, flops:106.35, batch-reuse:1
@ 4945 train 4.2574 , allloss: 4.2586, dt: 1309.86ms, fracRes: 0.3734, norm(attn): 0.2451, norm(output): 0.5508, norm(x): 0.5076, norm(y): 1.0136, norm:1.3877, tok/sec: 100065.80, flops:105.02, batch-reuse:1
@ 4946 train 4.1958 , allloss: 4.1967, dt: 1287.34ms, fracRes: 0.3699, norm(attn): 0.2490, norm(output): 0.5508, norm(x): 0.5039, norm(y): 1.0136, norm:1.3126, tok/sec: 101815.98, flops:106.86, batch-reuse:1
@ 4947 train 4.2316 , allloss: 4.2325, dt: 1328.35ms, fracRes: 0.3707, norm(attn): 0.2441, norm(output): 0.5469, norm(x): 0.5038, norm(y): 1.0137, norm:1.3742, tok/sec: 98672.68, flops:103.56, batch-reuse:1
@ 4948 train 4.2203 , allloss: 4.2210, dt: 1334.56ms, fracRes: 0.3708, norm(attn): 0.2441, norm(output): 0.5547, norm(x): 0.5048, norm(y): 1.0137, norm:1.4393, tok/sec: 98213.46, flops:103.08, batch-reuse:1
@ 4949 train 4.1548 , allloss: 4.1555, dt: 1338.77ms, fracRes: 0.3693, norm(attn): 0.2490, norm(output): 0.5469, norm(x): 0.5008, norm(y): 1.0136, norm:1.4303, tok/sec: 97905.11, flops:102.75, batch-reuse:1
@ 4950 train 4.1877 , allloss: 4.1892, dt: 1284.08ms, fracRes: 0.3677, norm(attn): 0.2500, norm(output): 0.5430, norm(x): 0.4987, norm(y): 1.0135, norm:1.3854, tok/sec: 102074.62, flops:107.13, batch-reuse:1
@ 4951 train 4.1059 , allloss: 4.1078, dt: 1289.22ms, fracRes: 0.3695, norm(attn): 0.2490, norm(output): 0.5469, norm(x): 0.5027, norm(y): 1.0136, norm:1.3411, tok/sec: 101668.04, flops:106.70, batch-reuse:1
@ 4952 train 4.2319 , allloss: 4.2329, dt: 1311.66ms, fracRes: 0.3703, norm(attn): 0.2451, norm(output): 0.5391, norm(x): 0.5025, norm(y): 1.0137, norm:1.3955, tok/sec: 99928.22, flops:104.88, batch-reuse:1
@ 4953 train 4.1217 , allloss: 4.1227, dt: 1313.99ms, fracRes: 0.3727, norm(attn): 0.2461, norm(output): 0.5508, norm(x): 0.5052, norm(y): 1.0136, norm:1.4726, tok/sec: 99751.17, flops:104.69, batch-reuse:1
@ 4954 train 4.2488 , allloss: 4.2509, dt: 1293.22ms, fracRes: 0.3727, norm(attn): 0.2432, norm(output): 0.5469, norm(x): 0.5048, norm(y): 1.0137, norm:1.3195, tok/sec: 101353.00, flops:106.37, batch-reuse:1
@ 4955 train 4.2868 , allloss: 4.2882, dt: 1297.28ms, fracRes: 0.3722, norm(attn): 0.2402, norm(output): 0.5430, norm(x): 0.5037, norm(y): 1.0137, norm:1.3547, tok/sec: 101036.03, flops:106.04, batch-reuse:1
@ 4956 train 4.2065 , allloss: 4.2074, dt: 1292.62ms, fracRes: 0.3701, norm(attn): 0.2412, norm(output): 0.5508, norm(x): 0.5015, norm(y): 1.0136, norm:1.4968, tok/sec: 101400.60, flops:106.42, batch-reuse:1
@ 4957 train 4.2932 , allloss: 4.2942, dt: 1321.96ms, fracRes: 0.3732, norm(attn): 0.2393, norm(output): 0.5547, norm(x): 0.5117, norm(y): 1.0137, norm:1.5473, tok/sec: 99149.41, flops:104.06, batch-reuse:1
@ 4958 train 4.2161 , allloss: 4.2169, dt: 1315.68ms, fracRes: 0.3715, norm(attn): 0.2373, norm(output): 0.5547, norm(x): 0.5059, norm(y): 1.0137, norm:1.3269, tok/sec: 99622.79, flops:104.56, batch-reuse:1
@ 4959 train 4.2996 , allloss: 4.3006, dt: 1311.84ms, fracRes: 0.3720, norm(attn): 0.2383, norm(output): 0.5547, norm(x): 0.5063, norm(y): 1.0137, norm:1.3302, tok/sec: 99914.53, flops:104.86, batch-reuse:1
@ 4960 train 4.2558 , allloss: 4.2567, dt: 1303.03ms, fracRes: 0.3728, norm(attn): 0.2383, norm(output): 0.5547, norm(x): 0.5036, norm(y): 1.0137, norm:1.3337, tok/sec: 100590.20, flops:105.57, batch-reuse:1
@ 4961 train 4.1889 , allloss: 4.1899, dt: 1314.44ms, fracRes: 0.3735, norm(attn): 0.2422, norm(output): 0.5547, norm(x): 0.5044, norm(y): 1.0137, norm:1.3653, tok/sec: 99717.01, flops:104.65, batch-reuse:1
@ 4962 train 4.2058 , allloss: 4.2065, dt: 1310.63ms, fracRes: 0.3721, norm(attn): 0.2393, norm(output): 0.5469, norm(x): 0.5005, norm(y): 1.0137, norm:1.3152, tok/sec: 100006.90, flops:104.96, batch-reuse:1
@ 4963 train 4.2333 , allloss: 4.2347, dt: 1309.86ms, fracRes: 0.3706, norm(attn): 0.2422, norm(output): 0.5547, norm(x): 0.5064, norm(y): 1.0136, norm:1.2594, tok/sec: 100065.47, flops:105.02, batch-reuse:1
@ 4964 train 4.1214 , allloss: 4.1227, dt: 1325.79ms, fracRes: 0.3726, norm(attn): 0.2402, norm(output): 0.5547, norm(x): 0.5062, norm(y): 1.0137, norm:1.3136, tok/sec: 98863.68, flops:103.76, batch-reuse:1
@ 4965 train 4.1493 , allloss: 4.1512, dt: 1336.01ms, fracRes: 0.3708, norm(attn): 0.2441, norm(output): 0.5508, norm(x): 0.5022, norm(y): 1.0136, norm:1.1996, tok/sec: 98107.00, flops:102.97, batch-reuse:1
@ 4966 train 4.2174 , allloss: 4.2195, dt: 1297.75ms, fracRes: 0.3733, norm(attn): 0.2402, norm(output): 0.5547, norm(x): 0.5076, norm(y): 1.0136, norm:1.3822, tok/sec: 100999.59, flops:106.00, batch-reuse:1
@ 4967 train 4.1001 , allloss: 4.1017, dt: 1316.73ms, fracRes: 0.3719, norm(attn): 0.2432, norm(output): 0.5547, norm(x): 0.5029, norm(y): 1.0135, norm:1.5221, tok/sec: 99543.94, flops:104.47, batch-reuse:1
@ 4968 train 4.1348 , allloss: 4.1376, dt: 1343.40ms, fracRes: 0.3711, norm(attn): 0.2432, norm(output): 0.5469, norm(x): 0.5009, norm(y): 1.0136, norm:1.4885, tok/sec: 97567.47, flops:102.40, batch-reuse:1
@ 4969 train 4.1622 , allloss: 4.1651, dt: 1346.34ms, fracRes: 0.3717, norm(attn): 0.2412, norm(output): 0.5508, norm(x): 0.5046, norm(y): 1.0137, norm:1.5398, tok/sec: 97354.59, flops:102.18, batch-reuse:1
@ 4970 train 4.2882 , allloss: 4.2896, dt: 1348.70ms, fracRes: 0.3711, norm(attn): 0.2441, norm(output): 0.5508, norm(x): 0.5052, norm(y): 1.0137, norm:1.2558, tok/sec: 97184.23, flops:102.00, batch-reuse:1
@ 4971 train 4.1467 , allloss: 4.1481, dt: 1299.76ms, fracRes: 0.3692, norm(attn): 0.2451, norm(output): 0.5586, norm(x): 0.5072, norm(y): 1.0137, norm:1.5641, tok/sec: 100842.93, flops:105.84, batch-reuse:1
@ 4972 train 4.1454 , allloss: 4.1461, dt: 1294.07ms, fracRes: 0.3706, norm(attn): 0.2432, norm(output): 0.5547, norm(x): 0.5053, norm(y): 1.0138, norm:1.4724, tok/sec: 101286.77, flops:106.30, batch-reuse:1
@ 4973 train 4.1190 , allloss: 4.1203, dt: 1312.57ms, fracRes: 0.3727, norm(attn): 0.2393, norm(output): 0.5547, norm(x): 0.5060, norm(y): 1.0138, norm:1.7081, tok/sec: 99859.34, flops:104.80, batch-reuse:1
@ 4974 train 4.1286 , allloss: 4.1306, dt: 1316.60ms, fracRes: 0.3714, norm(attn): 0.2402, norm(output): 0.5547, norm(x): 0.5064, norm(y): 1.0137, norm:1.4458, tok/sec: 99553.44, flops:104.48, batch-reuse:1
@ 4975 train 4.2359 , allloss: 4.2371, dt: 1343.53ms, fracRes: 0.3695, norm(attn): 0.2402, norm(output): 0.5547, norm(x): 0.5047, norm(y): 1.0136, norm:1.3852, tok/sec: 97557.96, flops:102.39, batch-reuse:1
@ 4976 train 4.1540 , allloss: 4.1551, dt: 1338.95ms, fracRes: 0.3687, norm(attn): 0.2490, norm(output): 0.5469, norm(x): 0.5053, norm(y): 1.0136, norm:1.3194, tok/sec: 97891.99, flops:102.74, batch-reuse:1
@ 4977 train 4.2245 , allloss: 4.2259, dt: 1320.76ms, fracRes: 0.3700, norm(attn): 0.2451, norm(output): 0.5430, norm(x): 0.5021, norm(y): 1.0137, norm:1.2910, tok/sec: 99239.62, flops:104.15, batch-reuse:1
@ 4978 train 4.0653 , allloss: 4.0666, dt: 1310.62ms, fracRes: 0.3714, norm(attn): 0.2480, norm(output): 0.5391, norm(x): 0.5008, norm(y): 1.0137, norm:1.2995, tok/sec: 100007.95, flops:104.96, batch-reuse:1
@ 4979 train 4.1474 , allloss: 4.1486, dt: 1305.44ms, fracRes: 0.3705, norm(attn): 0.2490, norm(output): 0.5469, norm(x): 0.5019, norm(y): 1.0136, norm:1.2808, tok/sec: 100404.15, flops:105.38, batch-reuse:1
@ 4980 train 4.1370 , allloss: 4.1380, dt: 1288.91ms, fracRes: 0.3711, norm(attn): 0.2480, norm(output): 0.5469, norm(x): 0.5013, norm(y): 1.0136, norm:1.3892, tok/sec: 101692.32, flops:106.73, batch-reuse:1
@ 4981 train 4.2831 , allloss: 4.2869, dt: 1323.78ms, fracRes: 0.3709, norm(attn): 0.2490, norm(output): 0.5469, norm(x): 0.5018, norm(y): 1.0136, norm:1.3063, tok/sec: 99013.48, flops:103.92, batch-reuse:1
@ 4982 train 4.1811 , allloss: 4.1821, dt: 1328.77ms, fracRes: 0.3711, norm(attn): 0.2480, norm(output): 0.5391, norm(x): 0.5030, norm(y): 1.0137, norm:1.2412, tok/sec: 98641.62, flops:103.53, batch-reuse:1
@ 4983 train 4.1414 , allloss: 4.1428, dt: 1339.69ms, fracRes: 0.3732, norm(attn): 0.2422, norm(output): 0.5469, norm(x): 0.5036, norm(y): 1.0137, norm:1.3582, tok/sec: 97837.27, flops:102.68, batch-reuse:1
@ 4984 train 4.1463 , allloss: 4.1472, dt: 1330.46ms, fracRes: 0.3717, norm(attn): 0.2451, norm(output): 0.5430, norm(x): 0.5028, norm(y): 1.0137, norm:1.2470, tok/sec: 98516.53, flops:103.39, batch-reuse:1
@ 4985 train 4.1366 , allloss: 4.1374, dt: 1289.78ms, fracRes: 0.3754, norm(attn): 0.2373, norm(output): 0.5547, norm(x): 0.5084, norm(y): 1.0138, norm:1.4897, tok/sec: 101623.18, flops:106.66, batch-reuse:1
@ 4986 train 4.1509 , allloss: 4.1521, dt: 1325.96ms, fracRes: 0.3712, norm(attn): 0.2451, norm(output): 0.5508, norm(x): 0.5045, norm(y): 1.0137, norm:1.4720, tok/sec: 98850.49, flops:103.75, batch-reuse:1
@ 4987 train 4.2303 , allloss: 4.2315, dt: 1344.55ms, fracRes: 0.3715, norm(attn): 0.2412, norm(output): 0.5469, norm(x): 0.5030, norm(y): 1.0137, norm:1.2208, tok/sec: 97483.72, flops:102.31, batch-reuse:1
@ 4988 train 4.0524 , allloss: 4.0536, dt: 1312.59ms, fracRes: 0.3708, norm(attn): 0.2451, norm(output): 0.5430, norm(x): 0.4985, norm(y): 1.0137, norm:1.6783, tok/sec: 99857.52, flops:104.80, batch-reuse:1
@ 4989 train 4.2916 , allloss: 4.2925, dt: 1284.65ms, fracRes: 0.3732, norm(attn): 0.2393, norm(output): 0.5586, norm(x): 0.5095, norm(y): 1.0138, norm:1.5805, tok/sec: 102029.23, flops:107.08, batch-reuse:1
@ 4990 train 4.1904 , allloss: 4.1917, dt: 1295.56ms, fracRes: 0.3733, norm(attn): 0.2422, norm(output): 0.5508, norm(x): 0.5049, norm(y): 1.0137, norm:1.7068, tok/sec: 101169.79, flops:106.18, batch-reuse:1
@ 4991 train 4.1552 , allloss: 4.1565, dt: 1316.18ms, fracRes: 0.3722, norm(attn): 0.2432, norm(output): 0.5508, norm(x): 0.5018, norm(y): 1.0136, norm:1.4010, tok/sec: 99585.18, flops:104.52, batch-reuse:1
@ 4992 train 4.1733 , allloss: 4.1752, dt: 1279.33ms, fracRes: 0.3753, norm(attn): 0.2412, norm(output): 0.5469, norm(x): 0.5030, norm(y): 1.0137, norm:1.6435, tok/sec: 102453.36, flops:107.53, batch-reuse:1
@ 4993 train 4.1812 , allloss: 4.1825, dt: 1312.45ms, fracRes: 0.3762, norm(attn): 0.2383, norm(output): 0.5547, norm(x): 0.5025, norm(y): 1.0137, norm:1.3338, tok/sec: 99868.46, flops:104.81, batch-reuse:1
@ 4994 train 4.1498 , allloss: 4.1508, dt: 1310.90ms, fracRes: 0.3736, norm(attn): 0.2393, norm(output): 0.5508, norm(x): 0.5014, norm(y): 1.0136, norm:1.5572, tok/sec: 99986.42, flops:104.94, batch-reuse:1
@ 4995 train 4.0920 , allloss: 4.0930, dt: 1299.42ms, fracRes: 0.3753, norm(attn): 0.2383, norm(output): 0.5586, norm(x): 0.5049, norm(y): 1.0138, norm:1.7194, tok/sec: 100869.37, flops:105.86, batch-reuse:1
@ 4996 train 4.2120 , allloss: 4.2131, dt: 1320.55ms, fracRes: 0.3746, norm(attn): 0.2383, norm(output): 0.5586, norm(x): 0.5056, norm(y): 1.0138, norm:1.7553, tok/sec: 99255.56, flops:104.17, batch-reuse:1
@ 4997 train 4.1381 , allloss: 4.1392, dt: 1313.01ms, fracRes: 0.3722, norm(attn): 0.2383, norm(output): 0.5508, norm(x): 0.5053, norm(y): 1.0138, norm:1.5496, tok/sec: 99825.83, flops:104.77, batch-reuse:1
@ 4998 train 4.2130 , allloss: 4.2143, dt: 1307.40ms, fracRes: 0.3716, norm(attn): 0.2412, norm(output): 0.5586, norm(x): 0.5110, norm(y): 1.0136, norm:1.6925, tok/sec: 100253.67, flops:105.22, batch-reuse:1
@ 4999 train 4.0884 , allloss: 4.0897, dt: 1324.20ms, fracRes: 0.3702, norm(attn): 0.2461, norm(output): 0.5547, norm(x): 0.5046, norm(y): 1.0136, norm:1.4248, tok/sec: 98981.84, flops:103.88, batch-reuse:1
@ 5000 train 4.1405 , allloss: 4.1414, dt: 2824.16ms, fracRes: 0.3708, norm(attn): 0.2432, norm(output): 0.5508, norm(x): 0.5072, norm(y): 1.0137, norm:1.4966, tok/sec: 46410.97, flops:48.71, batch-reuse:1
@ 5001 train 4.0492 , allloss: 4.0506, dt: 1311.97ms, fracRes: 0.3704, norm(attn): 0.2441, norm(output): 0.5547, norm(x): 0.5060, norm(y): 1.0138, norm:1.4044, tok/sec: 99904.52, flops:104.85, batch-reuse:1
@ 5002 train 4.2847 , allloss: 4.2864, dt: 1297.31ms, fracRes: 0.3713, norm(attn): 0.2402, norm(output): 0.5547, norm(x): 0.5090, norm(y): 1.0138, norm:1.4260, tok/sec: 101033.61, flops:106.04, batch-reuse:1
@ 5003 train 4.1343 , allloss: 4.1353, dt: 1325.71ms, fracRes: 0.3748, norm(attn): 0.2422, norm(output): 0.5586, norm(x): 0.5086, norm(y): 1.0136, norm:1.6771, tok/sec: 98869.65, flops:103.77, batch-reuse:1
@ 5004 train 4.2521 , allloss: 4.2534, dt: 1300.84ms, fracRes: 0.3755, norm(attn): 0.2344, norm(output): 0.5586, norm(x): 0.5078, norm(y): 1.0136, norm:1.4743, tok/sec: 100759.39, flops:105.75, batch-reuse:1
@ 5005 train 4.1160 , allloss: 4.1168, dt: 1286.50ms, fracRes: 0.3757, norm(attn): 0.2393, norm(output): 0.5586, norm(x): 0.5056, norm(y): 1.0137, norm:1.5353, tok/sec: 101882.29, flops:106.93, batch-reuse:1
@ 5006 train 4.2175 , allloss: 4.2188, dt: 1313.07ms, fracRes: 0.3752, norm(attn): 0.2383, norm(output): 0.5547, norm(x): 0.5050, norm(y): 1.0138, norm:1.3710, tok/sec: 99820.77, flops:104.76, batch-reuse:1
@ 5007 train 4.1623 , allloss: 4.1641, dt: 1330.07ms, fracRes: 0.3754, norm(attn): 0.2383, norm(output): 0.5586, norm(x): 0.5063, norm(y): 1.0138, norm:1.3482, tok/sec: 98545.24, flops:103.43, batch-reuse:1
@ 5008 train 4.2605 , allloss: 4.2623, dt: 1293.27ms, fracRes: 0.3740, norm(attn): 0.2451, norm(output): 0.5586, norm(x): 0.5083, norm(y): 1.0137, norm:1.7062, tok/sec: 101349.08, flops:106.37, batch-reuse:1
@ 5009 train 4.0841 , allloss: 4.0855, dt: 1325.10ms, fracRes: 0.3703, norm(attn): 0.2500, norm(output): 0.5547, norm(x): 0.5032, norm(y): 1.0136, norm:1.4438, tok/sec: 98915.11, flops:103.81, batch-reuse:1
@ 5010 train 4.1899 , allloss: 4.1915, dt: 1308.56ms, fracRes: 0.3706, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5045, norm(y): 1.0137, norm:1.4953, tok/sec: 100165.44, flops:105.13, batch-reuse:1
@ 5011 train 4.1366 , allloss: 4.1378, dt: 1310.34ms, fracRes: 0.3707, norm(attn): 0.2451, norm(output): 0.5508, norm(x): 0.5029, norm(y): 1.0136, norm:1.4411, tok/sec: 100028.79, flops:104.98, batch-reuse:1
@ 5012 train 4.2102 , allloss: 4.2116, dt: 1311.79ms, fracRes: 0.3705, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5074, norm(y): 1.0135, norm:1.4845, tok/sec: 99918.80, flops:104.87, batch-reuse:1
@ 5013 train 4.3841 , allloss: 4.3853, dt: 1310.86ms, fracRes: 0.3690, norm(attn): 0.2520, norm(output): 0.5547, norm(x): 0.5111, norm(y): 1.0135, norm:1.4747, tok/sec: 99989.22, flops:104.94, batch-reuse:1
@ 5014 train 4.3295 , allloss: 4.3324, dt: 1299.36ms, fracRes: 0.3728, norm(attn): 0.2451, norm(output): 0.5586, norm(x): 0.5158, norm(y): 1.0137, norm:1.5642, tok/sec: 100874.33, flops:105.87, batch-reuse:1
@ 5015 train 4.2614 , allloss: 4.2663, dt: 1321.55ms, fracRes: 0.3729, norm(attn): 0.2422, norm(output): 0.5586, norm(x): 0.5152, norm(y): 1.0138, norm:1.4673, tok/sec: 99180.44, flops:104.09, batch-reuse:1
@ 5016 train 4.2680 , allloss: 4.2694, dt: 1342.65ms, fracRes: 0.3714, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5126, norm(y): 1.0138, norm:1.5360, tok/sec: 97622.06, flops:102.46, batch-reuse:1
@ 5017 train 4.3307 , allloss: 4.3319, dt: 1321.67ms, fracRes: 0.3716, norm(attn): 0.2441, norm(output): 0.5547, norm(x): 0.5128, norm(y): 1.0138, norm:1.5268, tok/sec: 99171.19, flops:104.08, batch-reuse:1
@ 5018 train 4.3056 , allloss: 4.3085, dt: 1311.33ms, fracRes: 0.3717, norm(attn): 0.2432, norm(output): 0.5586, norm(x): 0.5108, norm(y): 1.0138, norm:1.6519, tok/sec: 99953.69, flops:104.90, batch-reuse:1
@ 5019 train 4.3041 , allloss: 4.3056, dt: 1306.33ms, fracRes: 0.3718, norm(attn): 0.2441, norm(output): 0.5586, norm(x): 0.5101, norm(y): 1.0138, norm:1.4055, tok/sec: 100336.33, flops:105.30, batch-reuse:1
@ 5020 train 4.3133 , allloss: 4.3145, dt: 1319.62ms, fracRes: 0.3718, norm(attn): 0.2451, norm(output): 0.5586, norm(x): 0.5099, norm(y): 1.0137, norm:1.5366, tok/sec: 99325.66, flops:104.24, batch-reuse:1
@ 5021 train 4.3039 , allloss: 4.3050, dt: 1330.33ms, fracRes: 0.3730, norm(attn): 0.2412, norm(output): 0.5586, norm(x): 0.5104, norm(y): 1.0137, norm:1.3162, tok/sec: 98525.71, flops:103.40, batch-reuse:1
@ 5022 train 4.3646 , allloss: 4.3655, dt: 1287.52ms, fracRes: 0.3723, norm(attn): 0.2422, norm(output): 0.5586, norm(x): 0.5075, norm(y): 1.0137, norm:1.5006, tok/sec: 101802.30, flops:106.84, batch-reuse:1
@ 5023 train 4.3695 , allloss: 4.3717, dt: 1291.35ms, fracRes: 0.3701, norm(attn): 0.2471, norm(output): 0.5586, norm(x): 0.5059, norm(y): 1.0136, norm:1.3959, tok/sec: 101500.23, flops:106.53, batch-reuse:1
@ 5024 train 4.3658 , allloss: 4.3674, dt: 1293.43ms, fracRes: 0.3718, norm(attn): 0.2422, norm(output): 0.5586, norm(x): 0.5078, norm(y): 1.0137, norm:1.2822, tok/sec: 101336.62, flops:106.35, batch-reuse:1
@ 5025 train 4.2907 , allloss: 4.2918, dt: 1295.57ms, fracRes: 0.3710, norm(attn): 0.2471, norm(output): 0.5547, norm(x): 0.5049, norm(y): 1.0137, norm:1.2250, tok/sec: 101169.21, flops:106.18, batch-reuse:1
@ 5026 train 4.2965 , allloss: 4.2983, dt: 1287.23ms, fracRes: 0.3724, norm(attn): 0.2451, norm(output): 0.5625, norm(x): 0.5107, norm(y): 1.0138, norm:1.2091, tok/sec: 101824.62, flops:106.87, batch-reuse:1
@ 5027 train 4.2508 , allloss: 4.2524, dt: 1306.48ms, fracRes: 0.3728, norm(attn): 0.2441, norm(output): 0.5586, norm(x): 0.5166, norm(y): 1.0138, norm:1.4358, tok/sec: 100324.76, flops:105.29, batch-reuse:1
@ 5028 train 4.3006 , allloss: 4.3020, dt: 1303.36ms, fracRes: 0.3734, norm(attn): 0.2451, norm(output): 0.5547, norm(x): 0.5077, norm(y): 1.0138, norm:1.4498, tok/sec: 100564.33, flops:105.54, batch-reuse:1
@ 5029 train 4.2708 , allloss: 4.2723, dt: 1339.69ms, fracRes: 0.3747, norm(attn): 0.2422, norm(output): 0.5547, norm(x): 0.5095, norm(y): 1.0138, norm:1.4339, tok/sec: 97837.89, flops:102.68, batch-reuse:1
@ 5030 train 4.3286 , allloss: 4.3304, dt: 1334.74ms, fracRes: 0.3731, norm(attn): 0.2461, norm(output): 0.5547, norm(x): 0.5092, norm(y): 1.0137, norm:1.3195, tok/sec: 98200.35, flops:103.06, batch-reuse:1
@ 5031 train 4.3349 , allloss: 4.3370, dt: 1321.20ms, fracRes: 0.3763, norm(attn): 0.2402, norm(output): 0.5625, norm(x): 0.5119, norm(y): 1.0138, norm:1.4062, tok/sec: 99206.50, flops:104.12, batch-reuse:1
@ 5032 train 4.2417 , allloss: 4.2433, dt: 1305.71ms, fracRes: 0.3747, norm(attn): 0.2432, norm(output): 0.5586, norm(x): 0.5102, norm(y): 1.0138, norm:1.7204, tok/sec: 100383.38, flops:105.35, batch-reuse:1
@ 5033 train 4.2062 , allloss: 4.2072, dt: 1311.53ms, fracRes: 0.3724, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5125, norm(y): 1.0138, norm:1.3337, tok/sec: 99937.90, flops:104.89, batch-reuse:1
@ 5034 train 4.3409 , allloss: 4.3422, dt: 1284.23ms, fracRes: 0.3723, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5124, norm(y): 1.0137, norm:1.5494, tok/sec: 102062.34, flops:107.12, batch-reuse:1
@ 5035 train 4.5694 , allloss: 4.5707, dt: 1302.61ms, fracRes: 0.3731, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5148, norm(y): 1.0137, norm:1.5025, tok/sec: 100622.93, flops:105.61, batch-reuse:1
@ 5036 train 4.2560 , allloss: 4.2568, dt: 1300.50ms, fracRes: 0.3735, norm(attn): 0.2500, norm(output): 0.5547, norm(x): 0.5094, norm(y): 1.0137, norm:1.8228, tok/sec: 100786.14, flops:105.78, batch-reuse:1
@ 5037 train 4.3372 , allloss: 4.3379, dt: 1308.33ms, fracRes: 0.3716, norm(attn): 0.2520, norm(output): 0.5508, norm(x): 0.5115, norm(y): 1.0137, norm:1.4584, tok/sec: 100182.87, flops:105.14, batch-reuse:1
@ 5038 train 4.3117 , allloss: 4.3123, dt: 1320.09ms, fracRes: 0.3716, norm(attn): 0.2500, norm(output): 0.5469, norm(x): 0.5091, norm(y): 1.0137, norm:1.6634, tok/sec: 99290.21, flops:104.21, batch-reuse:1
@ 5039 train 4.2798 , allloss: 4.2810, dt: 1349.21ms, fracRes: 0.3710, norm(attn): 0.2520, norm(output): 0.5508, norm(x): 0.5114, norm(y): 1.0137, norm:1.5629, tok/sec: 97146.89, flops:101.96, batch-reuse:1
@ 5040 train 4.3771 , allloss: 4.3783, dt: 1337.31ms, fracRes: 0.3713, norm(attn): 0.2500, norm(output): 0.5508, norm(x): 0.5091, norm(y): 1.0137, norm:1.4261, tok/sec: 98012.04, flops:102.87, batch-reuse:1
@ 5041 train 4.3504 , allloss: 4.3514, dt: 1336.96ms, fracRes: 0.3696, norm(attn): 0.2539, norm(output): 0.5508, norm(x): 0.5085, norm(y): 1.0136, norm:1.3611, tok/sec: 98037.68, flops:102.89, batch-reuse:1
@ 5042 train 4.4796 , allloss: 4.4806, dt: 1308.23ms, fracRes: 0.3706, norm(attn): 0.2471, norm(output): 0.5508, norm(x): 0.5126, norm(y): 1.0137, norm:1.3413, tok/sec: 100190.10, flops:105.15, batch-reuse:1
@ 5043 train 4.2674 , allloss: 4.2680, dt: 1320.12ms, fracRes: 0.3721, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5131, norm(y): 1.0136, norm:1.7947, tok/sec: 99288.28, flops:104.20, batch-reuse:1
@ 5044 train 4.2557 , allloss: 4.2566, dt: 1334.64ms, fracRes: 0.3719, norm(attn): 0.2461, norm(output): 0.5586, norm(x): 0.5111, norm(y): 1.0137, norm:1.3078, tok/sec: 98207.67, flops:103.07, batch-reuse:1
@ 5045 train 4.2122 , allloss: 4.2134, dt: 1331.22ms, fracRes: 0.3728, norm(attn): 0.2471, norm(output): 0.5625, norm(x): 0.5129, norm(y): 1.0137, norm:1.5009, tok/sec: 98459.82, flops:103.34, batch-reuse:1
@ 5046 train 4.3696 , allloss: 4.3707, dt: 1294.92ms, fracRes: 0.3707, norm(attn): 0.2461, norm(output): 0.5586, norm(x): 0.5124, norm(y): 1.0137, norm:1.2316, tok/sec: 101219.88, flops:106.23, batch-reuse:1
@ 5047 train 4.3316 , allloss: 4.3323, dt: 1321.08ms, fracRes: 0.3727, norm(attn): 0.2432, norm(output): 0.5586, norm(x): 0.5093, norm(y): 1.0138, norm:1.4069, tok/sec: 99216.01, flops:104.13, batch-reuse:1
@ 5048 train 4.1852 , allloss: 4.1862, dt: 1343.84ms, fracRes: 0.3752, norm(attn): 0.2441, norm(output): 0.5586, norm(x): 0.5114, norm(y): 1.0138, norm:1.3335, tok/sec: 97535.29, flops:102.37, batch-reuse:1
@ 5049 train 4.2431 , allloss: 4.2441, dt: 1330.42ms, fracRes: 0.3757, norm(attn): 0.2451, norm(output): 0.5625, norm(x): 0.5129, norm(y): 1.0138, norm:1.4009, tok/sec: 98518.93, flops:103.40, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0120, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.4570, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.3125, 0.2236, 0.1128, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.0703, 0.1416, 0.0854, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.0520, 0.2773, 0.0147, 0.1328, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.0640, 0.0728, 0.3184, 0.2461, 0.0967, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0615, 0.0947, 0.0459, 0.5742, 0.0913, 0.0447, 0.0366, 0.0508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.0400, 0.0669, 0.0171, 0.0354, 0.0552, 0.2559, 0.2695, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.0762, 0.1089, 0.1543, 0.1523, 0.0522, 0.0466, 0.1562, 0.0703, 0.0554, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0148, 0.0466, 0.0128, 0.0703, 0.1338, 0.1826, 0.0325, 0.1533, 0.2363, 0.0403, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.0776, 0.1289, 0.0308, 0.0302, 0.0303, 0.1670, 0.1260, 0.0571, 0.0491, 0.0947, 0.0396, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.0898, 0.0703, 0.0952, 0.0933, 0.0205, 0.0476, 0.0830, 0.1147, 0.0469, 0.0845, 0.0669, 0.0610, 0.0000, 0.0000],
        [0.0972, 0.0278, 0.0635, 0.0209, 0.0298, 0.0337, 0.1221, 0.1455, 0.1084, 0.0505, 0.0201, 0.0231, 0.0815, 0.1758, 0.0000],
        [0.0903, 0.0244, 0.1069, 0.0981, 0.0325, 0.0206, 0.0623, 0.1240, 0.0286, 0.0334, 0.0742, 0.0684, 0.1104, 0.0427, 0.0830]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0100,  0.0327, -0.0364,  ..., -0.0113,  0.0063,  0.0257],
        [ 0.0436,  0.0167,  0.0038,  ..., -0.0078, -0.0106, -0.0325],
        [-0.0004,  0.0176,  0.0062,  ..., -0.0040,  0.0075, -0.0117],
        ...,
        [-0.0386,  0.0235, -0.0094,  ...,  0.0143, -0.0163, -0.0004],
        [ 0.0478, -0.0127, -0.0204,  ...,  0.0265,  0.0024, -0.0103],
        [ 0.0020,  0.0037,  0.0341,  ..., -0.0113, -0.0281,  0.0301]], device='cuda:0', requires_grad=True)
K: tensor([-0.8359,  1.0703,  0.4746, -0.9492, -0.4160,  0.8242,  0.8047,  0.4004, -0.0076, -0.3730,  1.5156,  0.4141,  0.2080,  0.3691, -0.1260, -0.5352, -0.4473, -0.5469, -0.1445,  0.5586,  0.3496, -0.6094, -0.2012,  0.2129,  0.3008,  0.4746,  0.0923, -0.2480, -0.6094,  0.5625, -0.7812, -0.7344,
        -0.3867, -0.8203, -0.5430,  0.7695,  0.4590, -0.5039,  0.2598,  0.6094,  0.3379,  0.2012,  0.2285,  0.2734,  0.1318,  0.1631,  0.0620, -0.5039,  1.5703,  0.6562,  0.6016, -0.2559, -0.6484,  0.9492, -0.2217,  0.5898,  0.0381,  0.3984, -1.0938,  0.6445,  0.0825, -0.2832,  0.6523, -1.2109],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0270,  0.0005,  0.0057,  ...,  0.0336,  0.0108, -0.0180],
        [ 0.0132,  0.0324, -0.0221,  ...,  0.0022,  0.0128, -0.0181],
        [ 0.0036, -0.0274,  0.0029,  ...,  0.0492,  0.0075, -0.0260],
        ...,
        [ 0.0227,  0.0113,  0.0025,  ..., -0.0159, -0.0114,  0.0059],
        [-0.0239, -0.0173,  0.0160,  ...,  0.0304, -0.0138,  0.0203],
        [ 0.0292,  0.0070, -0.0108,  ..., -0.0434, -0.0279, -0.0054]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6016,  0.4629, -0.3359, -0.0057, -0.1553, -0.5234,  0.6641,  0.7266, -0.1162,  1.2656, -1.2031,  0.1826, -0.8242, -0.4316, -0.4590,  0.0723, -1.0547, -0.5938, -0.2061,  0.3438,  0.4219,  0.0928, -0.6211, -0.1133, -0.4922, -0.5938, -0.6367,  0.3145, -0.6953, -1.2969, -0.1963, -0.7188,
        -0.4883, -0.1670, -0.0229,  0.4668, -0.3398, -0.0659, -0.7617, -0.9727, -0.1738,  0.2617,  0.0356, -1.0859, -0.4922, -0.5000,  0.3320,  0.2432, -0.2539,  1.0625, -0.1875, -0.2217,  0.7891,  0.6367, -0.0250,  0.1963,  0.5430, -0.4336, -0.5469,  0.5273,  0.2715,  0.7070, -0.4492,  0.3965],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      4.4062,      0.4609,      1.4219,      0.6836,      2.0625,      0.9688,      0.4102,      0.0259,      0.8242,      1.2188,      2.5625,      1.6797,     -0.1484,      1.0859],
        [     0.0000,      0.5391,      0.0299,      3.4219,      0.5859,      0.0026,     -0.4785,      0.0815,     -0.3496,     -0.5586,      1.5938,      2.3281,      2.0625,     -0.1768,      1.7500],
        [     0.0000,     -0.1128,     -0.4473,     -1.1328,     -1.7969,     -1.7500,     -0.2236,      0.1777,     -1.5703,     -0.8047,     -0.6211,     -0.6094,      0.0027,     -1.1094,      0.1494],
        [     0.0000,     -1.8438,     -1.1484,     -1.6562,     -0.5508,     -0.4609,      0.6758,     -0.5703,      0.5898,      0.0933,     -0.6094,     -1.3203,     -0.4883,      0.6641,     -0.9961],
        [     0.0000,     -2.1562,     -0.4805,     -3.4219,     -1.2188,     -1.8359,      0.3398,     -0.3125,      0.1167,     -0.2812,     -1.7188,     -3.1562,     -2.1562,      0.0334,     -1.8516],
        [     0.0000,     -0.6914,     -0.5625,      0.9141,      0.6562,     -0.2773,     -0.5391,     -0.3125,      0.9062,      0.3926,      0.8438,      1.0312,      0.6680,      0.6562,      0.7500],
        [     0.0000,      0.4336,     -0.2910,      2.2344,      0.3965,     -0.3184,     -0.5195,     -0.1953,     -0.2139,     -0.7969,      1.2578,      0.7500,      0.7188,     -0.4492,      1.0469],
        [     0.0000,     -1.3438,     -0.8320,     -2.2031,     -1.4609,     -1.0234,      0.5078,      0.5664,     -0.3594,     -0.6055,     -1.4531,     -1.9531,     -0.7539,      0.3965,     -0.5039],
        [     0.0000,     -0.5195,     -0.1602,      0.1904,      0.1787,     -0.8945,     -1.0078,      0.2012,     -0.5977,     -0.8359,      0.6094,     -0.4062,     -0.5234,     -0.9453,     -0.2383],
        [     0.0000,     -1.6484,     -0.5000,     -1.7969,     -0.0942,      0.5508,      0.8672,     -0.8633,      0.6875,      1.1172,     -0.6484,     -0.9531,     -0.8242,      0.4922,     -1.1094],
        [     0.0000,     -0.7734,     -0.2617,     -1.6953,     -1.7188,     -1.7109,     -0.0030,     -0.2871,     -1.0781,     -1.2266,     -0.5742,     -1.4453,     -1.1172,     -1.0234,     -0.6836],
        [     0.0000,     -0.3379,     -0.5820,     -0.2832,     -0.3047,     -1.8203,     -0.9766,     -0.4219,     -0.0981,     -0.9922,     -0.4043,     -0.6367,     -0.7305,     -0.0022,     -0.4883],
        [     0.0000,     -1.2500,     -0.4258,     -1.5312,     -1.1875,     -1.0625,      0.2285,      0.4043,      0.1113,     -0.6562,     -1.5703,     -1.4375,     -0.1777,      0.5938,     -0.6094],
        [     0.0000,     -1.3125,      0.1689,      0.0801,     -1.0234,     -1.4766,     -0.3711,      0.3145,     -1.1484,     -0.9961,     -0.2002,     -0.2793,      0.2002,     -0.7461,     -0.0845]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4143],
        [0.4608],
        [0.3201],
        [0.3637],
        [0.3946],
        [0.1244],
        [0.2558],
        [0.1450],
        [0.1607],
        [0.0965],
        [0.1669],
        [0.2162],
        [0.0933],
        [0.0877]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7930,     0.2080,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6094,     0.2930,     0.0972,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1816,     0.0015,     0.8125,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5234,     0.0359,     0.3809,     0.0603,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4453,     0.1133,     0.0552,     0.0175,     0.0002,     0.3691,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1338,     0.1152,     0.0645,     0.0077,     0.0009,     0.6328,     0.0447,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0840,     0.2500,     0.3887,     0.0242,     0.0042,     0.1396,     0.0874,     0.0217,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4883,     0.1001,     0.1279,     0.0067,     0.0002,     0.1953,     0.0635,     0.0105,     0.0067,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5508,     0.0854,     0.1074,     0.0225,     0.0004,     0.0542,     0.0182,     0.0776,     0.0092,     0.0742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8320,     0.0053,     0.1084,     0.0156,     0.0002,     0.0108,     0.0053,     0.0011,     0.0087,     0.0101,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3242,     0.1719,     0.0874,     0.0109,     0.0009,     0.1465,     0.1089,     0.0240,     0.0054,     0.0225,     0.0033,     0.0928,     0.0000,     0.0000,     0.0000],
        [    0.1162,     0.0845,     0.2520,     0.0146,     0.0014,     0.1436,     0.0248,     0.0096,     0.0215,     0.0791,     0.0024,     0.1963,     0.0537,     0.0000,     0.0000],
        [    0.6328,     0.0640,     0.1045,     0.0036,     0.0001,     0.0952,     0.0459,     0.0044,     0.0033,     0.0045,     0.0001,     0.0266,     0.0084,     0.0055,     0.0000],
        [    0.2119,     0.1245,     0.0074,     0.0054,     0.0028,     0.0850,     0.1699,     0.0058,     0.0762,     0.0015,     0.0281,     0.0070,     0.0128,     0.1416,     0.1206]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0205, -0.0201, -0.0503,  ...,  0.0349, -0.0199,  0.0251],
        [ 0.0101, -0.0049, -0.0429,  ...,  0.0826, -0.0313,  0.0212],
        [-0.0025, -0.0466, -0.0808,  ...,  0.0555, -0.0292,  0.0006],
        ...,
        [-0.0272,  0.0074,  0.0151,  ...,  0.0104,  0.0232,  0.0483],
        [ 0.0013, -0.0145, -0.0480,  ...,  0.0306,  0.0196,  0.0027],
        [ 0.0105,  0.0369, -0.0035,  ..., -0.0247,  0.0100,  0.0398]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1875,  0.5039, -1.7109, -2.2188, -1.0000,  0.9297, -2.1094, -1.8047,  2.1250, -0.5859, -1.3359,  0.6133, -0.2100, -0.5820,  0.4746,  0.1602, -0.3535, -0.1572, -0.6055,  1.0625,  1.2422,  1.4141, -1.0703, -0.9141, -1.3047,  0.5625,  1.1250, -1.0078, -0.8633,  2.4375,  1.0938, -0.3164,
        -0.1260,  0.9180, -0.3906, -0.1758, -1.2734,  1.3047,  0.8789,  0.5078, -2.2969, -0.2012,  0.2930,  1.1094, -1.1406,  1.1953,  0.7344,  0.7617,  0.7109,  0.1729, -0.9805, -0.2539, -0.4180,  1.2188,  0.5703,  0.8828, -0.1895, -0.9531,  0.7891,  0.0330,  0.8555,  0.6211,  0.2393,  0.5547],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0248,  0.0183, -0.0056,  ..., -0.0044,  0.0273,  0.0068],
        [ 0.0165,  0.0229,  0.0438,  ..., -0.0307,  0.0155,  0.0263],
        [ 0.0276,  0.0183,  0.0221,  ..., -0.0306,  0.0405, -0.0021],
        ...,
        [-0.0016, -0.0356, -0.0117,  ...,  0.0172, -0.0506,  0.0155],
        [-0.0095, -0.0188,  0.0239,  ..., -0.0018, -0.0145,  0.0144],
        [-0.0131, -0.0590,  0.0219,  ...,  0.0172,  0.0075,  0.0113]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.7500, -0.6797, -0.4062, -1.4766,  2.2500, -1.2109, -0.9297,  2.1406,  0.8398,  0.6562,  1.4531, -0.8867,  0.1680,  0.6602, -0.4863, -0.8750,  0.0496,  1.0312,  1.5391, -0.4590, -0.6133, -0.3945,  1.6875,  0.4336,  1.5703,  1.8984,  0.8164, -1.6797,  0.4785, -0.1377,  1.1797,  2.1406,
         1.0781, -0.9219,  1.1797,  0.5352, -0.5664,  0.2988,  0.2871, -1.3906,  0.1299, -0.9375, -1.8438, -2.5625,  0.7695,  1.9297, -0.0552, -0.5742,  1.2656, -1.1953, -1.0547, -1.5156, -1.0703, -0.1406,  0.7695,  1.1562,  1.5859,  2.1094,  0.5352, -0.0469,  1.1484, -0.7695, -0.4277,  0.8008],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -1.3359,  -1.3047,  -2.8281,  -6.3438,  -1.2969,  -0.5039,  -5.3750,  -2.9219,  -4.7500,  -3.3750,  -3.1406,  -4.0938,  -2.0625,   1.3359],
        [  0.0000,  -0.7344,  -1.8359,  -3.6562,  -6.5938,  -1.7031,  -0.7266,  -2.7031,  -5.0000,  -5.1250,  -5.3125,  -3.0000,  -2.4375,  -4.2500,  -0.9023],
        [  0.0000,  -4.7812,   1.5000,  -4.2812, -11.6875,  -5.9688,  -5.5625,  -5.3438,  -7.7812,  -4.3750, -10.3750,  -2.2812,  -5.7188,  -6.7188,  -1.6953],
        [  0.0000,  -2.6719,  -0.3145,  -2.1562,  -6.6250,  -1.4219,  -2.6562,  -2.1875,  -3.1562,  -1.8906,  -5.8750,  -1.1797,  -1.7266,  -2.1406,  -1.1406],
        [  0.0000,  -1.3672,  -2.0781,  -3.2344,  -7.7812,  -0.1865,  -2.2031,  -2.5469,  -5.8750,  -2.4688,  -7.0312,  -2.1250,  -1.4688,  -4.6875,  -1.3516],
        [  0.0000,  -0.1484,  -0.7266,  -2.8594,  -4.9688,   1.5547,  -1.0938,  -1.7500,  -2.1562,  -2.0938,  -4.5938,   0.0344,  -0.4082,  -0.9805,   0.5586],
        [  0.0000,   1.0938,   1.5312,  -1.2422,  -2.9844,   0.5078,   0.0420,  -1.3516,  -0.7695,  -1.5078,  -2.4688,   1.8828,  -0.6328,   0.2314,   1.7969],
        [  0.0000,  -1.5859,  -1.3359,  -4.2812,  -7.6562,  -0.9180,  -2.0469,  -3.8438,  -4.2812,  -4.1250,  -8.0625,  -2.3750,  -3.0312,  -3.5938,  -1.5000],
        [  0.0000,  -1.8594,  -1.6328,  -3.2031,  -7.3438,  -2.3125,  -3.4062,  -1.9609,  -4.0938,  -2.0000,  -5.5312,  -1.4531,  -1.7734,  -2.9531,  -1.4297],
        [  0.0000,  -5.0625,  -2.0312,  -3.9844,  -8.1250,  -4.3438,  -5.0625,  -6.6250,  -4.5625,  -4.4062,  -7.4375,  -3.3594,  -5.3750,  -3.5625,  -1.8828],
        [  0.0000,  -0.6367,  -1.3125,  -3.3906,  -5.8438,  -0.7930,  -1.0938,  -2.6094,  -4.0938,  -2.6719,  -4.5938,  -1.2500,  -1.9688,  -3.2500,  -0.3926],
        [  0.0000,  -0.3203,   0.7734,  -2.0781,  -4.4375,   0.2080,  -1.5469,  -2.4844,  -1.6875,  -0.3867,  -3.8750,   0.5234,  -0.7773,  -0.3457,   1.0547],
        [  0.0000,  -2.2969,  -1.8047,  -5.1562,  -8.3750,  -1.8984,  -2.6250,  -4.9688,  -5.2500,  -4.9375,  -9.1875,  -3.1719,  -4.3438,  -4.7500,  -2.3906],
        [  0.0000,  -0.5273,  -3.3594,  -3.6719,  -4.3438,  -0.9141,  -0.2178,  -3.5938,  -1.0156,  -4.9062,  -2.0156,  -3.4219,  -2.8125,  -0.4043,  -0.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6397],
        [0.6029],
        [0.5443],
        [0.6776],
        [0.5929],
        [0.4843],
        [0.4634],
        [0.6479],
        [0.4672],
        [0.6641],
        [0.4970],
        [0.3867],
        [0.6946],
        [0.6362]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0194, -0.0326, -0.0213,  ...,  0.0203,  0.0200,  0.0440],
        [-0.0059,  0.0056,  0.0508,  ..., -0.0183,  0.0287,  0.0097],
        [ 0.0199, -0.0218, -0.0427,  ...,  0.0018, -0.0075,  0.0476],
        ...,
        [ 0.0093,  0.0220,  0.0071,  ..., -0.0506,  0.0165, -0.0250],
        [ 0.0127, -0.0269, -0.0346,  ...,  0.0279, -0.0043,  0.0334],
        [ 0.0251,  0.0105,  0.0242,  ..., -0.0097,  0.0038, -0.0199]], device='cuda:0', requires_grad=True)
K: tensor([-0.4277, -1.6328, -1.8906,  0.6172, -0.1543,  0.2422,  1.5156,  3.4375,  0.6406, -1.5547, -1.7891, -2.4375,  0.1621, -2.6719,  3.3125, -1.7578,  1.7500, -0.8086, -1.5859, -2.0156,  2.3438, -2.0469, -1.3516,  1.6250,  0.5547, -1.5859, -0.0723, -1.1953,  0.0513, -2.7188, -3.3594, -1.6328,
         3.3438,  0.2715,  2.1094, -2.6094, -0.0356,  2.7188, -2.3438,  4.2812,  1.6250,  1.1953,  0.9570, -2.7812, -0.6719, -1.5938, -0.6719,  2.8125,  3.5469, -1.0312, -2.2812, -0.9922,  2.4844, -1.8984,  2.5781,  1.5312,  1.9375, -1.2578,  1.1484,  1.9609,  1.9609,  2.8906, -2.6094,  1.9922],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0606,  0.0208,  0.0346,  ..., -0.0218,  0.0123, -0.0203],
        [-0.0259, -0.0095, -0.0388,  ...,  0.0497, -0.0292,  0.0291],
        [ 0.0098,  0.0013,  0.0368,  ..., -0.0743,  0.0351, -0.0069],
        ...,
        [-0.0145, -0.0021, -0.0142,  ...,  0.0391, -0.0199,  0.0304],
        [-0.0095, -0.0069,  0.0214,  ..., -0.0586,  0.0361, -0.0173],
        [-0.0265,  0.0097, -0.0433,  ...,  0.0671, -0.0311, -0.0007]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4844,  0.4746,  1.0938, -1.1406, -0.8633, -1.2422, -1.1875, -1.8203, -1.2188,  0.9453,  1.5234,  1.3281, -0.5703,  3.0625, -2.1250,  1.3672, -0.5938,  0.4277,  1.3438,  1.0859, -0.8984,  0.9219,  1.4453, -0.8086, -1.1250,  1.3438,  0.5352,  2.0156,  0.1523,  1.3750,  1.8906,  0.6250,
        -2.3750, -0.2217, -0.6484,  1.8438,  0.8516, -1.9922,  0.9570, -1.7812, -1.1484, -0.6602, -1.1094,  1.8281, -0.2812,  0.7070,  0.6211, -1.4531, -1.7266,  0.6992,  1.2656,  1.6328, -1.2734,  0.9297, -1.2344, -0.4531, -2.0938,  0.5156, -1.3359, -0.8203, -1.7188, -1.2266,  1.2031, -0.7734],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -17.6250, -15.0625, -18.1250, -18.6250, -19.2500, -18.6250, -16.2500, -20.7500, -17.0000, -19.3750, -17.0000, -18.6250, -20.6250, -15.6250],
        [  0.0000, -18.0000, -17.5000, -20.1250, -18.1250, -19.8750, -18.8750, -18.6250, -21.8750, -19.5000, -19.6250, -18.0000, -21.7500, -21.8750, -17.2500],
        [  0.0000, -21.0000, -21.0000, -25.1250, -20.3750, -22.8750, -21.6250, -21.7500, -25.7500, -22.8750, -23.3750, -20.7500, -25.0000, -25.8750, -21.2500],
        [  0.0000, -18.1250, -16.6250, -19.2500, -19.6250, -20.5000, -20.0000, -17.7500, -21.5000, -19.0000, -20.3750, -17.8750, -20.5000, -21.3750, -16.8750],
        [  0.0000, -22.6250, -21.2500, -24.5000, -23.8750, -25.7500, -24.6250, -23.0000, -27.5000, -24.1250, -25.2500, -22.7500, -26.6250, -27.3750, -21.2500],
        [  0.0000, -20.5000, -19.8750, -22.6250, -21.5000, -23.3750, -22.6250, -20.7500, -24.7500, -22.2500, -23.1250, -20.6250, -24.1250, -24.7500, -19.8750],
        [  0.0000, -21.8750, -22.5000, -25.1250, -21.7500, -23.8750, -23.1250, -24.1250, -26.2500, -24.2500, -23.7500, -21.8750, -27.1250, -26.2500, -21.7500],
        [  0.0000, -24.5000, -23.6250, -27.7500, -25.5000, -27.6250, -26.3750, -25.1250, -30.1250, -26.3750, -27.7500, -24.5000, -29.0000, -30.1250, -23.6250],
        [  0.0000, -21.7500, -21.6250, -24.6250, -22.5000, -24.0000, -23.0000, -23.5000, -26.5000, -24.5000, -24.2500, -21.8750, -26.8750, -26.5000, -20.8750],
        [  0.0000, -17.7500, -17.1250, -20.1250, -19.0000, -19.8750, -19.6250, -18.0000, -21.3750, -19.1250, -20.5000, -17.7500, -20.1250, -21.3750, -17.6250],
        [  0.0000, -18.6250, -16.7500, -19.8750, -18.6250, -20.6250, -19.6250, -17.8750, -22.2500, -18.8750, -20.2500, -18.2500, -20.8750, -22.1250, -17.2500],
        [  0.0000, -24.6250, -25.7500, -28.6250, -25.0000, -27.5000, -26.1250, -27.5000, -30.2500, -28.2500, -27.1250, -25.0000, -31.7500, -30.2500, -24.2500],
        [  0.0000, -24.3750, -23.6250, -27.7500, -25.2500, -27.5000, -26.1250, -25.1250, -30.0000, -26.5000, -27.6250, -24.3750, -29.1250, -30.1250, -23.5000],
        [  0.0000, -19.5000, -18.1250, -21.5000, -19.6250, -21.3750, -20.2500, -19.0000, -23.5000, -20.3750, -21.7500, -18.8750, -22.0000, -23.5000, -18.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9847],
        [0.9899],
        [1.0000],
        [0.9941],
        [0.9964],
        [0.9964],
        [0.9831],
        [0.9997],
        [0.9967],
        [0.9954],
        [0.9616],
        [1.0000],
        [0.9997],
        [0.9993]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1768,     0.8242,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0058,     0.8906,     0.1030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0052,     0.5430,     0.2031,     0.2490,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0113,     0.5938,     0.2734,     0.0674,     0.0537,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.2207,     0.1162,     0.1270,     0.0306,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0092,     0.1465,     0.0571,     0.0713,     0.0718,     0.5273,     0.1187,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0070,     0.1001,     0.0276,     0.0400,     0.0064,     0.2178,     0.0376,     0.5625,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.0369,     0.0195,     0.0042,     0.0091,     0.2871,     0.0189,     0.6133,     0.0085,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0054,     0.0391,     0.0239,     0.0255,     0.0089,     0.0540,     0.0366,     0.5078,     0.0378,     0.2598,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.0119,     0.0121,     0.0039,     0.0033,     0.0574,     0.0435,     0.2637,     0.0118,     0.5508,     0.0393,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0110,     0.0084,     0.0133,     0.0022,     0.0105,     0.0126,     0.1226,     0.0288,     0.1465,     0.0498,     0.5938,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0081,     0.0044,     0.0035,     0.0006,     0.0231,     0.0042,     0.0801,     0.0043,     0.0981,     0.0166,     0.3379,     0.4180,     0.0000,     0.0000],
        [    0.0009,     0.0041,     0.0026,     0.0005,     0.0010,     0.0286,     0.0020,     0.0581,     0.0008,     0.0415,     0.0034,     0.1445,     0.6992,     0.0143,     0.0000],
        [    0.0004,     0.0024,     0.0017,     0.0013,     0.0015,     0.0032,     0.0045,     0.0249,     0.0084,     0.0432,     0.0186,     0.1562,     0.2432,     0.1157,     0.3750]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0185,  0.0269,  0.0449,  ..., -0.0395,  0.0170, -0.0244],
        [-0.0421, -0.0329,  0.0254,  ..., -0.0614, -0.0366,  0.0203],
        [-0.0542, -0.0434,  0.0374,  ..., -0.0333, -0.0154, -0.0019],
        ...,
        [ 0.0481, -0.0204, -0.0106,  ..., -0.0130, -0.0470,  0.0020],
        [ 0.0269,  0.0576, -0.0080,  ...,  0.0695, -0.0210, -0.0016],
        [-0.0003, -0.0034,  0.0068,  ...,  0.0193,  0.0367, -0.0067]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7031, -1.6328, -0.9375,  0.5977, -1.2422,  0.0420,  0.8242,  2.5312,  0.5039,  2.2031, -0.3613, -1.6797, -0.1875,  0.2715,  0.1348,  1.4531,  1.7188, -1.6094,  0.1377, -1.8359,  1.2344, -2.7812, -0.2539,  1.8125, -2.6562, -0.2344,  0.0908, -1.0000,  0.4570,  1.4766, -3.0000,  1.8594,
        -1.0000, -2.2812, -1.9609, -2.0312,  1.7031,  2.4531, -0.0898,  0.8438,  3.4844, -0.2207, -2.8906,  2.7344, -1.0547, -0.9766,  1.1484,  0.8320,  0.5430,  0.0918,  0.0571, -2.2656,  2.0469,  0.2969, -1.6094, -2.3750, -1.0156, -1.8281,  1.2891,  0.4746, -1.9688, -1.5078, -1.5469,  0.8711],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0204,  0.0261, -0.0532,  ..., -0.0094, -0.0419, -0.0033],
        [-0.0248,  0.0155,  0.0078,  ..., -0.0101,  0.0023, -0.0364],
        [ 0.0165,  0.0382, -0.0269,  ...,  0.0187, -0.0341,  0.0089],
        ...,
        [-0.0085, -0.0257,  0.0019,  ..., -0.0304,  0.0322,  0.0027],
        [ 0.0218, -0.0129, -0.0025,  ..., -0.0059,  0.0295,  0.0168],
        [ 0.0397,  0.0105,  0.0112,  ..., -0.0335, -0.0251,  0.0359]], device='cuda:0', requires_grad=True)
Q: tensor([    -1.0703,     -0.5664,     -2.0156,     -1.7109,     -1.1875,     -3.1406,     -0.2373,      0.7773,      3.4531,     -1.7188,      5.6250,     -2.4688,      1.9766,      2.9219,      5.2500,     -2.0781,      2.1250,     -1.4609,      4.2500,     -3.6875,      1.0781,     -3.4062,
             1.9609,      1.9766,     -4.7188,      1.2109,      0.2344,      2.0312,      1.1719,     -0.8125,     -2.4688,      0.9688,      2.9219,     -0.0625,      0.5352,     -2.1406,     -1.8047,      0.8008,      1.8672,      2.3594,      1.0312,     -0.0242,      3.9531,     -0.4277,
            -4.2500,     -0.6914,      3.0312,     -2.5156,     -2.7500,      0.4375,      2.8281,     -1.9297,      2.2500,     -0.8984,      4.0625,     -3.1719,      0.6250,     -0.5898,      0.8672,     -0.4844,      0.0015,      2.0781,     -0.4434,      0.8125], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.5391,  0.1826, -0.1475,  0.3125,  0.9883,  0.5430,  1.1562,  0.8203,  1.6016,  0.9531,  2.0781,  1.7969,  1.5781,  2.5469],
        [ 0.0000,  5.0312,  2.8750,  4.7500,  2.8750,  4.5312,  4.3125,  6.5312,  6.0312,  6.2812,  6.4062,  9.0625,  8.8750,  8.6875, 10.1250],
        [ 0.0000,  4.6562,  3.6562,  3.8594,  4.2188,  5.9062,  5.7500,  7.4375,  6.5625,  7.7188,  7.8750,  9.6250, 10.1250,  9.4375, 10.9375],
        [ 0.0000,  3.9531,  3.1875,  1.7812,  1.5547,  6.5938,  3.9844,  7.2500,  2.9531,  7.3125,  5.8125,  8.7500, 10.0625,  6.3125, 11.3125],
        [ 0.0000,  4.2500,  3.6250,  3.7031,  2.2812,  5.0938,  4.1562,  7.2500,  4.4688,  7.0312,  5.4062,  9.1250,  9.8750,  7.7812, 11.8125],
        [ 0.0000,  2.7656,  1.8281,  2.0469,  2.0625,  4.0625,  2.5625,  4.8438,  3.8125,  5.9375,  5.0938,  7.5000,  7.3438,  6.7500,  9.8750],
        [ 0.0000,  2.6562,  1.3672,  1.7422, -0.0874,  3.4375,  1.6797,  4.3750,  2.1406,  4.7500,  3.2656,  6.3438,  6.4375,  4.9375,  8.5000],
        [ 0.0000,  2.2656,  1.6328,  0.0815,  0.8672,  4.3125,  1.6016,  5.0625,  0.7969,  4.6250,  2.2656,  6.0312,  7.6562,  3.7188,  9.0625],
        [ 0.0000,  1.9766,  1.4922,  1.5547,  0.4961,  2.3125,  1.9219,  4.5625,  1.9453,  3.8750,  2.8125,  5.9688,  6.7188,  4.7812,  8.0625],
        [ 0.0000,  1.0625,  1.0781, -0.0532, -0.2402,  2.6406,  2.3594,  4.1562,  1.0547,  4.9062,  2.2500,  5.5938,  6.3125,  4.0312,  8.7500],
        [ 0.0000,  2.5156,  2.2500,  2.7031,  0.9297,  2.4688,  2.6562,  4.9375,  3.4844,  5.1250,  4.0312,  6.5000,  7.0312,  6.1875,  8.4375],
        [ 0.0000,  2.0469,  1.4453,  1.2266, -0.5586,  3.0938,  1.4141,  4.3438,  1.4297,  4.5625,  2.7812,  5.7812,  6.0000,  4.2188,  7.9688],
        [ 0.0000,  1.4766,  1.0391, -0.6445,  0.0481,  3.4219,  0.7500,  4.1250, -0.1050,  3.7969,  1.2812,  5.0312,  6.6250,  2.7344,  7.9688],
        [ 0.0000,  1.8359,  1.5000,  1.2031,  1.3672,  2.1250,  2.4844,  4.1875,  3.0938,  4.7188,  3.8906,  6.0312,  6.4688,  5.7188,  6.9062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3604],
        [0.0374],
        [0.0239],
        [0.0317],
        [0.0205],
        [0.0198],
        [0.0282],
        [0.0103],
        [0.0076],
        [0.0093],
        [0.0056],
        [0.0152],
        [0.0075],
        [0.0042]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1206,     0.8789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0070,     0.7539,     0.2393,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.7812,     0.0244,     0.1924,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.7188,     0.0287,     0.0282,     0.2197,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0097,     0.8477,     0.0136,     0.0154,     0.0295,     0.0850,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.9414,     0.0022,     0.0042,     0.0039,     0.0164,     0.0298,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.8008,     0.0022,     0.0214,     0.0498,     0.0464,     0.0474,     0.0303,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0066,     0.6641,     0.0104,     0.0135,     0.0128,     0.0500,     0.1934,     0.0137,     0.0347,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.6758,     0.0071,     0.0442,     0.0400,     0.0311,     0.1128,     0.0046,     0.0288,     0.0505,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0121,     0.5234,     0.0147,     0.0209,     0.0024,     0.0140,     0.0884,     0.0107,     0.0110,     0.1021,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.0591,     0.0042,     0.2832,     0.0854,     0.0162,     0.0276,     0.0149,     0.0227,     0.1533,     0.3145,     0.0136,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.3945,     0.0010,     0.0210,     0.0674,     0.0238,     0.0771,     0.0030,     0.1201,     0.0304,     0.0957,     0.0065,     0.1582,     0.0000,     0.0000],
        [    0.0040,     0.2148,     0.0037,     0.0128,     0.0166,     0.0260,     0.1553,     0.0041,     0.0374,     0.0649,     0.0603,     0.0140,     0.1797,     0.2070,     0.0000],
        [    0.0020,     0.4980,     0.0623,     0.0171,     0.0474,     0.0332,     0.1123,     0.0113,     0.0072,     0.0164,     0.0033,     0.0041,     0.1113,     0.0101,     0.0645]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0021,  0.0139,  0.0126,  ..., -0.0209,  0.0126,  0.0252],
        [ 0.0341, -0.0049, -0.0152,  ..., -0.0172,  0.0060,  0.0088],
        [-0.0232, -0.0230,  0.0012,  ...,  0.0256, -0.0214, -0.0108],
        ...,
        [-0.0034,  0.0128,  0.0316,  ..., -0.0242, -0.0254,  0.0034],
        [-0.0244, -0.0346, -0.0217,  ..., -0.0050, -0.0334, -0.0020],
        [ 0.0059,  0.0009,  0.0141,  ...,  0.0060, -0.0055,  0.0270]], device='cuda:0', requires_grad=True)
K: tensor([-1.1875, -1.3438, -0.1533,  0.5391,  0.6680, -0.9297, -0.7812,  0.1562, -2.1406,  0.7148, -0.0211, -1.0703, -0.3555,  1.2031, -0.5273,  1.7266,  0.9414,  0.2988,  2.7656,  0.9219, -0.2891, -1.5781,  0.4961, -0.0972, -1.0312,  0.7930,  0.2354,  0.2812,  1.2969, -1.0234, -0.2559, -0.8828,
         1.1016,  1.4375, -1.0156,  1.8125,  0.0747, -0.2090,  0.7578, -1.3594,  1.9375,  0.0073, -0.8281,  0.4863, -1.9688,  1.3047, -2.2188, -2.3594, -0.0791,  0.1816,  1.1250, -0.9219, -0.9453,  0.5625,  0.5742, -0.3359,  0.4355, -2.1875, -0.7812, -1.1172,  1.0156, -0.4004,  1.0625,  0.7148],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0400,  0.0340, -0.0301,  ...,  0.0079, -0.0029,  0.0089],
        [-0.0195,  0.0055,  0.0033,  ..., -0.0263, -0.0013, -0.0329],
        [-0.0154, -0.0125, -0.0132,  ..., -0.0225,  0.0136, -0.0071],
        ...,
        [ 0.0137, -0.0031, -0.0348,  ..., -0.0142,  0.0236,  0.0141],
        [-0.0174, -0.0180, -0.0432,  ...,  0.0054, -0.0066,  0.0328],
        [-0.0033,  0.0207, -0.0089,  ..., -0.0243, -0.0091, -0.0063]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5391, -0.5586, -0.9219, -1.5938, -0.1318, -3.3906,  1.3438,  1.8906, -0.1885, -1.4609, -1.4375,  2.4219,  1.1328,  0.1270, -0.7383, -2.5312,  1.6953, -2.4219,  0.1206, -0.6523, -0.3867, -1.4297, -1.2266,  0.5703,  0.6055,  1.4688,  1.0234,  1.4531,  0.7812,  0.1992, -0.9062, -0.2578,
         0.6797, -0.4180, -2.9531, -1.0703, -1.2812, -1.9141,  1.7812,  0.6953,  1.7266, -0.1416, -1.2344,  1.1641, -3.1562, -0.0796, -1.2266,  0.4258,  1.6406, -0.6992, -0.0610,  1.1641, -1.1875, -2.3125, -0.4883, -0.8828, -0.2812, -2.9062, -0.8008, -2.3125,  1.4375, -0.9023,  1.5156,  2.2500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.9844,     -0.7695,     -1.5781,     -1.3984,     -1.6875,     -3.2812,     -1.4297,     -3.9531,     -1.6797,     -2.5938,     -3.1562,     -0.8203,     -4.0938,     -4.1250],
        [     0.0000,      4.6875,      3.5312,      5.7500,      7.0000,      4.1250,      2.9375,      3.9062,      3.2969,      2.9062,      2.8750,     -0.0239,      4.7500,      3.4688,      1.2266],
        [     0.0000,      5.9375,      2.4531,      4.5312,      7.5625,      5.2812,      4.4375,      3.8906,      3.6719,      3.3906,      2.3750,      0.5938,      5.1562,      4.0625,      1.9922],
        [     0.0000,      5.0938,      1.8594,      1.8438,      3.8906,      4.6875,      3.3125,      1.7891,      2.0312,      2.7656,      1.3203,     -0.2012,      2.9375,      2.1250,      2.0000],
        [     0.0000,      4.4688,      0.3359,      0.4609,      1.1094,      2.1719,      2.4219,      0.0447,      0.6406,      1.4297,      0.3184,     -1.6641,      0.4551,     -0.0688,      0.4785],
        [     0.0000,      7.6875,      1.6250,      2.2500,      2.2031,      3.6250,      4.2188,      5.2188,      3.3750,      2.0938,      0.8438,      0.9570,      2.0938,      1.2891,      1.4375],
        [     0.0000,      7.5312,      1.6328,      3.9062,      4.7500,      4.6875,      4.6875,      4.2500,      6.5625,      3.8438,      3.6875,      0.9609,      3.4531,      5.8750,      3.3906],
        [     0.0000,      4.6250,      0.4570,      0.7227,      0.6641,      2.0312,      3.3750,      0.7344,      1.6641,      2.4688,      1.9609,      0.9023,      2.3594,      1.6406,      2.5938],
        [     0.0000,      5.2188,      0.6758,      2.5000,      2.4062,      2.1562,      3.4375,      0.2461,      2.0781,      2.6406,      6.0938,      2.8438,      3.8750,      3.4062,      3.6875],
        [     0.0000,      3.7656,      0.1934,      0.5430,     -1.6094,      0.1455,      1.9844,     -0.1187,     -0.0908,      2.1250,      2.7969,      3.0938,      4.6250,      1.2656,      2.4531],
        [     0.0000,      2.3594,     -0.2695,      3.9219,      2.7344,      1.0703,      1.6016,      0.9844,      1.4062,      3.3125,      4.0312,      0.8945,      7.1562,      4.1250,      3.2188],
        [     0.0000,      5.4062,     -0.5664,      2.4688,      3.6406,      2.6094,      3.7812,      0.5312,      4.2188,      2.8438,      4.0000,      1.3047,      4.5000,      6.6875,      5.0625],
        [     0.0000,      3.9688,     -0.0889,      1.1484,      1.4141,      1.8594,      3.6406,      0.0031,      2.2188,      2.7812,      2.7031,      1.2422,      3.7969,      3.9375,      4.2812],
        [     0.0000,      5.5312,      3.4531,      2.1562,      3.1875,      2.8281,      4.0312,      1.7500,      1.2969,      2.1094,      0.5273,      0.7383,      4.0312,      1.6406,      3.4844]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0766],
        [0.0143],
        [0.0033],
        [0.0059],
        [0.0372],
        [0.0023],
        [0.0011],
        [0.0048],
        [0.0065],
        [0.0198],
        [0.0092],
        [0.0032],
        [0.0035],
        [0.0143]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1611 a:0.1289,:0.1855 and:0.0830,:0.0967,:0.5508 green:0.0608iced:0.1621)
iced
------
		( a:0.1289,:0.1855 and:0.0830,:0.0967,:0.5508 green:0.0608iced:0.1621,:0.3418)
, and are all the colors of the sun.
The color of the
@ 5050 train 4.2359 , allloss: 4.2368, dt: 1748.22ms, fracRes: 0.3747, norm(attn): 0.2441, norm(output): 0.5586, norm(x): 0.5106, norm(y): 1.0138, norm:1.3753, tok/sec: 74974.75, flops:78.69, batch-reuse:1
@ 5051 train 4.4228 , allloss: 4.4237, dt: 1344.44ms, fracRes: 0.3773, norm(attn): 0.2344, norm(output): 0.5586, norm(x): 0.5098, norm(y): 1.0138, norm:1.4747, tok/sec: 97491.53, flops:102.32, batch-reuse:1
@ 5052 train 4.3279 , allloss: 4.3300, dt: 1320.96ms, fracRes: 0.3746, norm(attn): 0.2471, norm(output): 0.5625, norm(x): 0.5120, norm(y): 1.0137, norm:1.3634, tok/sec: 99224.84, flops:104.14, batch-reuse:1
@ 5053 train 4.3532 , allloss: 4.3549, dt: 1314.79ms, fracRes: 0.3738, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5129, norm(y): 1.0138, norm:1.6990, tok/sec: 99690.61, flops:104.63, batch-reuse:1
@ 5054 train 4.3393 , allloss: 4.3413, dt: 1323.27ms, fracRes: 0.3737, norm(attn): 0.2451, norm(output): 0.5586, norm(x): 0.5130, norm(y): 1.0138, norm:1.3411, tok/sec: 99051.91, flops:103.96, batch-reuse:1
@ 5055 train 4.2457 , allloss: 4.2466, dt: 1312.52ms, fracRes: 0.3740, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5112, norm(y): 1.0137, norm:1.6100, tok/sec: 99862.89, flops:104.81, batch-reuse:1
@ 5056 train 4.2707 , allloss: 4.2713, dt: 1318.21ms, fracRes: 0.3705, norm(attn): 0.2539, norm(output): 0.5547, norm(x): 0.5110, norm(y): 1.0138, norm:1.5363, tok/sec: 99432.01, flops:104.36, batch-reuse:1
@ 5057 train 4.3208 , allloss: 4.3222, dt: 1337.25ms, fracRes: 0.3724, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5121, norm(y): 1.0138, norm:1.5585, tok/sec: 98016.34, flops:102.87, batch-reuse:1
@ 5058 train 4.3705 , allloss: 4.3717, dt: 1319.53ms, fracRes: 0.3708, norm(attn): 0.2490, norm(output): 0.5586, norm(x): 0.5173, norm(y): 1.0138, norm:1.5447, tok/sec: 99332.41, flops:104.25, batch-reuse:1
@ 5059 train 4.3077 , allloss: 4.3091, dt: 1304.71ms, fracRes: 0.3691, norm(attn): 0.2559, norm(output): 0.5547, norm(x): 0.5140, norm(y): 1.0137, norm:1.3227, tok/sec: 100460.37, flops:105.44, batch-reuse:1
@ 5060 train 4.2706 , allloss: 4.2715, dt: 1330.15ms, fracRes: 0.3716, norm(attn): 0.2480, norm(output): 0.5547, norm(x): 0.5068, norm(y): 1.0138, norm:1.3873, tok/sec: 98538.92, flops:103.42, batch-reuse:1
@ 5061 train 4.1664 , allloss: 4.1673, dt: 1348.83ms, fracRes: 0.3709, norm(attn): 0.2461, norm(output): 0.5547, norm(x): 0.5084, norm(y): 1.0138, norm:1.3383, tok/sec: 97174.78, flops:101.99, batch-reuse:1
@ 5062 train 4.2765 , allloss: 4.2773, dt: 1329.90ms, fracRes: 0.3712, norm(attn): 0.2432, norm(output): 0.5586, norm(x): 0.5112, norm(y): 1.0138, norm:1.2862, tok/sec: 98557.54, flops:103.44, batch-reuse:1
@ 5063 train 4.3037 , allloss: 4.3046, dt: 1335.48ms, fracRes: 0.3716, norm(attn): 0.2432, norm(output): 0.5586, norm(x): 0.5118, norm(y): 1.0138, norm:1.3387, tok/sec: 98146.14, flops:103.01, batch-reuse:1
@ 5064 train 4.2977 , allloss: 4.2990, dt: 1310.39ms, fracRes: 0.3718, norm(attn): 0.2432, norm(output): 0.5586, norm(x): 0.5114, norm(y): 1.0138, norm:1.2831, tok/sec: 100025.35, flops:104.98, batch-reuse:1
@ 5065 train 4.2887 , allloss: 4.2899, dt: 1300.67ms, fracRes: 0.3692, norm(attn): 0.2539, norm(output): 0.5547, norm(x): 0.5080, norm(y): 1.0135, norm:1.2415, tok/sec: 100772.69, flops:105.76, batch-reuse:1
@ 5066 train 4.2600 , allloss: 4.2607, dt: 1318.47ms, fracRes: 0.3733, norm(attn): 0.2422, norm(output): 0.5586, norm(x): 0.5103, norm(y): 1.0137, norm:1.3682, tok/sec: 99412.50, flops:104.34, batch-reuse:1
@ 5067 train 4.3813 , allloss: 4.3821, dt: 1343.44ms, fracRes: 0.3743, norm(attn): 0.2402, norm(output): 0.5625, norm(x): 0.5114, norm(y): 1.0137, norm:1.4606, tok/sec: 97564.42, flops:102.40, batch-reuse:1
@ 5068 train 4.2376 , allloss: 4.2387, dt: 1320.56ms, fracRes: 0.3738, norm(attn): 0.2461, norm(output): 0.5586, norm(x): 0.5123, norm(y): 1.0137, norm:1.3439, tok/sec: 99255.04, flops:104.17, batch-reuse:1
@ 5069 train 4.2508 , allloss: 4.2520, dt: 1327.91ms, fracRes: 0.3749, norm(attn): 0.2363, norm(output): 0.5625, norm(x): 0.5097, norm(y): 1.0137, norm:1.3164, tok/sec: 98705.33, flops:103.59, batch-reuse:1
@ 5070 train 4.2753 , allloss: 4.2761, dt: 1309.09ms, fracRes: 0.3736, norm(attn): 0.2422, norm(output): 0.5625, norm(x): 0.5099, norm(y): 1.0137, norm:1.4073, tok/sec: 100124.27, flops:105.08, batch-reuse:1
@ 5071 train 4.3132 , allloss: 4.3141, dt: 1283.33ms, fracRes: 0.3740, norm(attn): 0.2422, norm(output): 0.5625, norm(x): 0.5104, norm(y): 1.0138, norm:1.2246, tok/sec: 102134.33, flops:107.19, batch-reuse:1
@ 5072 train 4.2635 , allloss: 4.2647, dt: 1311.04ms, fracRes: 0.3754, norm(attn): 0.2412, norm(output): 0.5625, norm(x): 0.5146, norm(y): 1.0139, norm:1.3124, tok/sec: 99975.69, flops:104.93, batch-reuse:1
@ 5073 train 4.2709 , allloss: 4.2723, dt: 1276.92ms, fracRes: 0.3742, norm(attn): 0.2461, norm(output): 0.5586, norm(x): 0.5118, norm(y): 1.0137, norm:1.4316, tok/sec: 102647.39, flops:107.73, batch-reuse:1
@ 5074 train 4.3245 , allloss: 4.3258, dt: 1300.46ms, fracRes: 0.3723, norm(attn): 0.2461, norm(output): 0.5586, norm(x): 0.5086, norm(y): 1.0136, norm:1.4778, tok/sec: 100788.70, flops:105.78, batch-reuse:1
@ 5075 train 4.1427 , allloss: 4.1444, dt: 1301.99ms, fracRes: 0.3729, norm(attn): 0.2451, norm(output): 0.5625, norm(x): 0.5100, norm(y): 1.0136, norm:1.4979, tok/sec: 100670.18, flops:105.66, batch-reuse:1
@ 5076 train 4.2924 , allloss: 4.2933, dt: 1305.96ms, fracRes: 0.3693, norm(attn): 0.2500, norm(output): 0.5547, norm(x): 0.5080, norm(y): 1.0135, norm:1.5066, tok/sec: 100364.49, flops:105.33, batch-reuse:1
@ 5077 train 4.2700 , allloss: 4.2714, dt: 1284.18ms, fracRes: 0.3729, norm(attn): 0.2490, norm(output): 0.5625, norm(x): 0.5123, norm(y): 1.0136, norm:1.4230, tok/sec: 102066.64, flops:107.12, batch-reuse:1
@ 5078 train 4.3080 , allloss: 4.3096, dt: 1336.94ms, fracRes: 0.3728, norm(attn): 0.2432, norm(output): 0.5586, norm(x): 0.5094, norm(y): 1.0136, norm:1.4832, tok/sec: 98038.47, flops:102.89, batch-reuse:1
@ 5079 train 4.2461 , allloss: 4.2470, dt: 1309.84ms, fracRes: 0.3723, norm(attn): 0.2471, norm(output): 0.5547, norm(x): 0.5053, norm(y): 1.0136, norm:1.4520, tok/sec: 100067.28, flops:105.02, batch-reuse:1
@ 5080 train 4.2270 , allloss: 4.2277, dt: 1305.06ms, fracRes: 0.3702, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5050, norm(y): 1.0135, norm:1.3991, tok/sec: 100433.43, flops:105.41, batch-reuse:1
@ 5081 train 4.3144 , allloss: 4.3151, dt: 1317.70ms, fracRes: 0.3700, norm(attn): 0.2480, norm(output): 0.5547, norm(x): 0.5080, norm(y): 1.0136, norm:1.2597, tok/sec: 99470.22, flops:104.40, batch-reuse:1
@ 5082 train 4.1562 , allloss: 4.1573, dt: 1323.82ms, fracRes: 0.3719, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5122, norm(y): 1.0136, norm:1.3608, tok/sec: 99010.75, flops:103.91, batch-reuse:1
@ 5083 train 4.3072 , allloss: 4.3082, dt: 1309.55ms, fracRes: 0.3729, norm(attn): 0.2480, norm(output): 0.5547, norm(x): 0.5119, norm(y): 1.0136, norm:1.2718, tok/sec: 100089.30, flops:105.05, batch-reuse:1
@ 5084 train 4.2248 , allloss: 4.2259, dt: 1312.65ms, fracRes: 0.3738, norm(attn): 0.2441, norm(output): 0.5586, norm(x): 0.5085, norm(y): 1.0137, norm:1.3988, tok/sec: 99853.06, flops:104.80, batch-reuse:1
@ 5085 train 4.2872 , allloss: 4.2885, dt: 1307.22ms, fracRes: 0.3750, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5100, norm(y): 1.0137, norm:1.3752, tok/sec: 100267.47, flops:105.23, batch-reuse:1
@ 5086 train 4.4022 , allloss: 4.4032, dt: 1328.14ms, fracRes: 0.3739, norm(attn): 0.2490, norm(output): 0.5586, norm(x): 0.5098, norm(y): 1.0137, norm:1.2993, tok/sec: 98688.09, flops:103.57, batch-reuse:1
@ 5087 train 4.3309 , allloss: 4.3318, dt: 1337.08ms, fracRes: 0.3728, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5124, norm(y): 1.0137, norm:1.4047, tok/sec: 98028.40, flops:102.88, batch-reuse:1
@ 5088 train 4.2672 , allloss: 4.2678, dt: 1300.52ms, fracRes: 0.3722, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5110, norm(y): 1.0136, norm:1.4203, tok/sec: 100784.55, flops:105.78, batch-reuse:1
@ 5089 train 4.1871 , allloss: 4.1884, dt: 1323.74ms, fracRes: 0.3713, norm(attn): 0.2539, norm(output): 0.5508, norm(x): 0.5130, norm(y): 1.0136, norm:1.3336, tok/sec: 99016.76, flops:103.92, batch-reuse:1
@ 5090 train 4.3218 , allloss: 4.3225, dt: 1305.99ms, fracRes: 0.3659, norm(attn): 0.2578, norm(output): 0.5469, norm(x): 0.5097, norm(y): 1.0135, norm:1.3003, tok/sec: 100362.36, flops:105.33, batch-reuse:1
@ 5091 train 4.2590 , allloss: 4.2602, dt: 1333.46ms, fracRes: 0.3685, norm(attn): 0.2559, norm(output): 0.5547, norm(x): 0.5102, norm(y): 1.0135, norm:1.3626, tok/sec: 98294.57, flops:103.16, batch-reuse:1
@ 5092 train 4.3066 , allloss: 4.3078, dt: 1303.39ms, fracRes: 0.3692, norm(attn): 0.2539, norm(output): 0.5508, norm(x): 0.5097, norm(y): 1.0136, norm:1.3511, tok/sec: 100562.64, flops:105.54, batch-reuse:1
@ 5093 train 4.2351 , allloss: 4.2376, dt: 1298.53ms, fracRes: 0.3696, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5112, norm(y): 1.0136, norm:1.4469, tok/sec: 100938.67, flops:105.94, batch-reuse:1
@ 5094 train 4.3089 , allloss: 4.3107, dt: 1312.88ms, fracRes: 0.3706, norm(attn): 0.2520, norm(output): 0.5547, norm(x): 0.5107, norm(y): 1.0136, norm:1.1535, tok/sec: 99835.56, flops:104.78, batch-reuse:1
@ 5095 train 4.3100 , allloss: 4.3117, dt: 1344.44ms, fracRes: 0.3720, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5079, norm(y): 1.0136, norm:1.2672, tok/sec: 97492.19, flops:102.32, batch-reuse:1
@ 5096 train 4.2125 , allloss: 4.2138, dt: 1341.41ms, fracRes: 0.3727, norm(attn): 0.2471, norm(output): 0.5586, norm(x): 0.5099, norm(y): 1.0137, norm:1.2697, tok/sec: 97712.43, flops:102.55, batch-reuse:1
@ 5097 train 4.2131 , allloss: 4.2142, dt: 1345.82ms, fracRes: 0.3734, norm(attn): 0.2471, norm(output): 0.5625, norm(x): 0.5122, norm(y): 1.0136, norm:1.2059, tok/sec: 97391.98, flops:102.21, batch-reuse:1
@ 5098 train 4.2984 , allloss: 4.2995, dt: 1315.55ms, fracRes: 0.3742, norm(attn): 0.2422, norm(output): 0.5625, norm(x): 0.5094, norm(y): 1.0137, norm:1.3713, tok/sec: 99632.95, flops:104.57, batch-reuse:1
@ 5099 train 4.1875 , allloss: 4.1883, dt: 1321.74ms, fracRes: 0.3731, norm(attn): 0.2500, norm(output): 0.5547, norm(x): 0.5080, norm(y): 1.0136, norm:1.2541, tok/sec: 99165.94, flops:104.08, batch-reuse:1
@ 5100 train 4.2516 , allloss: 4.2534, dt: 1326.68ms, fracRes: 0.3743, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5162, norm(y): 1.0136, norm:1.2883, tok/sec: 98797.18, flops:103.69, batch-reuse:1
@ 5101 train 4.2105 , allloss: 4.2116, dt: 1332.09ms, fracRes: 0.3730, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5127, norm(y): 1.0136, norm:1.2677, tok/sec: 98395.85, flops:103.27, batch-reuse:1
@ 5102 train 4.2628 , allloss: 4.2638, dt: 1333.81ms, fracRes: 0.3746, norm(attn): 0.2441, norm(output): 0.5586, norm(x): 0.5077, norm(y): 1.0137, norm:1.2982, tok/sec: 98268.58, flops:103.13, batch-reuse:1
@ 5103 train 4.3277 , allloss: 4.3325, dt: 1325.67ms, fracRes: 0.3698, norm(attn): 0.2480, norm(output): 0.5508, norm(x): 0.5099, norm(y): 1.0137, norm:1.3256, tok/sec: 98872.36, flops:103.77, batch-reuse:1
@ 5104 train 4.3151 , allloss: 4.3191, dt: 1309.79ms, fracRes: 0.3710, norm(attn): 0.2490, norm(output): 0.5586, norm(x): 0.5088, norm(y): 1.0136, norm:1.4298, tok/sec: 100071.16, flops:105.03, batch-reuse:1
@ 5105 train 4.2091 , allloss: 4.2099, dt: 1323.80ms, fracRes: 0.3720, norm(attn): 0.2471, norm(output): 0.5625, norm(x): 0.5114, norm(y): 1.0136, norm:1.2803, tok/sec: 99011.77, flops:103.91, batch-reuse:1
@ 5106 train 4.2587 , allloss: 4.2597, dt: 1316.16ms, fracRes: 0.3733, norm(attn): 0.2461, norm(output): 0.5625, norm(x): 0.5114, norm(y): 1.0136, norm:1.3004, tok/sec: 99586.77, flops:104.52, batch-reuse:1
@ 5107 train 4.2470 , allloss: 4.2484, dt: 1335.44ms, fracRes: 0.3733, norm(attn): 0.2432, norm(output): 0.5664, norm(x): 0.5165, norm(y): 1.0137, norm:1.3017, tok/sec: 98149.14, flops:103.01, batch-reuse:1
@ 5108 train 4.2003 , allloss: 4.2017, dt: 1340.72ms, fracRes: 0.3731, norm(attn): 0.2412, norm(output): 0.5586, norm(x): 0.5110, norm(y): 1.0136, norm:1.4487, tok/sec: 97762.12, flops:102.60, batch-reuse:1
@ 5109 train 4.1884 , allloss: 4.1891, dt: 1343.90ms, fracRes: 0.3735, norm(attn): 0.2422, norm(output): 0.5625, norm(x): 0.5101, norm(y): 1.0136, norm:1.3526, tok/sec: 97531.03, flops:102.36, batch-reuse:1
@ 5110 train 4.1988 , allloss: 4.1994, dt: 1318.99ms, fracRes: 0.3734, norm(attn): 0.2461, norm(output): 0.5625, norm(x): 0.5140, norm(y): 1.0136, norm:1.4248, tok/sec: 99373.08, flops:104.29, batch-reuse:1
@ 5111 train 4.1668 , allloss: 4.1679, dt: 1309.28ms, fracRes: 0.3708, norm(attn): 0.2500, norm(output): 0.5508, norm(x): 0.5064, norm(y): 1.0135, norm:1.3769, tok/sec: 100110.14, flops:105.07, batch-reuse:1
@ 5112 train 4.1802 , allloss: 4.1814, dt: 1310.03ms, fracRes: 0.3730, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5144, norm(y): 1.0136, norm:1.6940, tok/sec: 100052.62, flops:105.01, batch-reuse:1
@ 5113 train 4.1981 , allloss: 4.1991, dt: 1349.83ms, fracRes: 0.3735, norm(attn): 0.2490, norm(output): 0.5547, norm(x): 0.5080, norm(y): 1.0135, norm:1.3897, tok/sec: 97102.78, flops:101.91, batch-reuse:1
@ 5114 train 4.1433 , allloss: 4.1445, dt: 1344.52ms, fracRes: 0.3741, norm(attn): 0.2539, norm(output): 0.5508, norm(x): 0.5044, norm(y): 1.0135, norm:1.3954, tok/sec: 97486.43, flops:102.31, batch-reuse:1
@ 5115 train 4.2042 , allloss: 4.2047, dt: 1295.50ms, fracRes: 0.3735, norm(attn): 0.2490, norm(output): 0.5547, norm(x): 0.5051, norm(y): 1.0136, norm:1.2822, tok/sec: 101174.67, flops:106.18, batch-reuse:1
@ 5116 train 4.1704 , allloss: 4.1720, dt: 1319.78ms, fracRes: 0.3719, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5085, norm(y): 1.0135, norm:1.4269, tok/sec: 99313.32, flops:104.23, batch-reuse:1
@ 5117 train 4.2556 , allloss: 4.2569, dt: 1305.75ms, fracRes: 0.3728, norm(attn): 0.2422, norm(output): 0.5586, norm(x): 0.5104, norm(y): 1.0137, norm:1.3351, tok/sec: 100380.78, flops:105.35, batch-reuse:1
@ 5118 train 4.1675 , allloss: 4.1681, dt: 1317.83ms, fracRes: 0.3735, norm(attn): 0.2451, norm(output): 0.5586, norm(x): 0.5091, norm(y): 1.0136, norm:1.4000, tok/sec: 99460.34, flops:104.39, batch-reuse:1
@ 5119 train 4.1872 , allloss: 4.1879, dt: 1314.30ms, fracRes: 0.3723, norm(attn): 0.2422, norm(output): 0.5586, norm(x): 0.5095, norm(y): 1.0136, norm:1.5125, tok/sec: 99727.30, flops:104.67, batch-reuse:1
@ 5120 train 4.2081 , allloss: 4.2097, dt: 1319.46ms, fracRes: 0.3724, norm(attn): 0.2412, norm(output): 0.5625, norm(x): 0.5140, norm(y): 1.0136, norm:1.2912, tok/sec: 99337.45, flops:104.26, batch-reuse:1
@ 5121 train 4.1911 , allloss: 4.1927, dt: 1321.24ms, fracRes: 0.3739, norm(attn): 0.2422, norm(output): 0.5625, norm(x): 0.5165, norm(y): 1.0137, norm:1.3992, tok/sec: 99203.73, flops:104.12, batch-reuse:1
@ 5122 train 4.1578 , allloss: 4.1595, dt: 1311.09ms, fracRes: 0.3728, norm(attn): 0.2461, norm(output): 0.5625, norm(x): 0.5147, norm(y): 1.0137, norm:1.2883, tok/sec: 99971.65, flops:104.92, batch-reuse:1
@ 5123 train 4.3829 , allloss: 4.3838, dt: 1303.35ms, fracRes: 0.3741, norm(attn): 0.2432, norm(output): 0.5625, norm(x): 0.5155, norm(y): 1.0137, norm:1.3634, tok/sec: 100565.16, flops:105.55, batch-reuse:1
@ 5124 train 4.2220 , allloss: 4.2238, dt: 1275.77ms, fracRes: 0.3738, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5118, norm(y): 1.0135, norm:1.4864, tok/sec: 102739.49, flops:107.83, batch-reuse:1
@ 5125 train 4.1741 , allloss: 4.1748, dt: 1305.90ms, fracRes: 0.3709, norm(attn): 0.2559, norm(output): 0.5547, norm(x): 0.5084, norm(y): 1.0135, norm:1.2635, tok/sec: 100369.34, flops:105.34, batch-reuse:1
@ 5126 train 4.2495 , allloss: 4.2511, dt: 1281.85ms, fracRes: 0.3733, norm(attn): 0.2441, norm(output): 0.5625, norm(x): 0.5112, norm(y): 1.0137, norm:1.4397, tok/sec: 102251.88, flops:107.32, batch-reuse:1
@ 5127 train 4.1826 , allloss: 4.1879, dt: 1280.17ms, fracRes: 0.3739, norm(attn): 0.2490, norm(output): 0.5586, norm(x): 0.5132, norm(y): 1.0136, norm:1.4445, tok/sec: 102386.21, flops:107.46, batch-reuse:1
@ 5128 train 4.2482 , allloss: 4.2490, dt: 1298.29ms, fracRes: 0.3741, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5104, norm(y): 1.0136, norm:1.3065, tok/sec: 100957.41, flops:105.96, batch-reuse:1
@ 5129 train 4.2870 , allloss: 4.2883, dt: 1315.90ms, fracRes: 0.3705, norm(attn): 0.2539, norm(output): 0.5547, norm(x): 0.5103, norm(y): 1.0136, norm:1.2983, tok/sec: 99606.67, flops:104.54, batch-reuse:1
@ 5130 train 4.1983 , allloss: 4.2015, dt: 1295.65ms, fracRes: 0.3726, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5098, norm(y): 1.0137, norm:1.3293, tok/sec: 101163.36, flops:106.17, batch-reuse:1
@ 5131 train 4.1449 , allloss: 4.1456, dt: 1304.22ms, fracRes: 0.3731, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5108, norm(y): 1.0136, norm:1.3461, tok/sec: 100498.22, flops:105.47, batch-reuse:1
@ 5132 train 4.1782 , allloss: 4.1792, dt: 1302.36ms, fracRes: 0.3728, norm(attn): 0.2559, norm(output): 0.5547, norm(x): 0.5094, norm(y): 1.0136, norm:1.1276, tok/sec: 100641.76, flops:105.63, batch-reuse:1
@ 5133 train 4.1985 , allloss: 4.1995, dt: 1292.65ms, fracRes: 0.3724, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5112, norm(y): 1.0136, norm:1.3686, tok/sec: 101397.51, flops:106.42, batch-reuse:1
@ 5134 train 4.2406 , allloss: 4.2417, dt: 1307.27ms, fracRes: 0.3730, norm(attn): 0.2471, norm(output): 0.5586, norm(x): 0.5172, norm(y): 1.0137, norm:1.7194, tok/sec: 100264.16, flops:105.23, batch-reuse:1
@ 5135 train 4.2472 , allloss: 4.2495, dt: 1332.11ms, fracRes: 0.3738, norm(attn): 0.2490, norm(output): 0.5625, norm(x): 0.5237, norm(y): 1.0137, norm:1.7839, tok/sec: 98394.11, flops:103.27, batch-reuse:1
@ 5136 train 4.2219 , allloss: 4.2238, dt: 1304.93ms, fracRes: 0.3726, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5142, norm(y): 1.0137, norm:1.1882, tok/sec: 100443.80, flops:105.42, batch-reuse:1
@ 5137 train 4.1784 , allloss: 4.1794, dt: 1328.43ms, fracRes: 0.3718, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5125, norm(y): 1.0137, norm:1.4737, tok/sec: 98666.48, flops:103.55, batch-reuse:1
@ 5138 train 4.2552 , allloss: 4.2574, dt: 1332.73ms, fracRes: 0.3742, norm(attn): 0.2490, norm(output): 0.5625, norm(x): 0.5158, norm(y): 1.0137, norm:1.3580, tok/sec: 98348.46, flops:103.22, batch-reuse:1
@ 5139 train 4.2641 , allloss: 4.2657, dt: 1334.92ms, fracRes: 0.3730, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5099, norm(y): 1.0137, norm:1.5168, tok/sec: 98187.37, flops:103.05, batch-reuse:1
@ 5140 train 4.3484 , allloss: 4.3497, dt: 1339.91ms, fracRes: 0.3735, norm(attn): 0.2490, norm(output): 0.5586, norm(x): 0.5117, norm(y): 1.0138, norm:1.5663, tok/sec: 97821.86, flops:102.67, batch-reuse:1
@ 5141 train 4.1996 , allloss: 4.2012, dt: 1343.39ms, fracRes: 0.3742, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5153, norm(y): 1.0138, norm:1.3714, tok/sec: 97568.09, flops:102.40, batch-reuse:1
@ 5142 train 4.1692 , allloss: 4.1708, dt: 1338.18ms, fracRes: 0.3727, norm(attn): 0.2559, norm(output): 0.5586, norm(x): 0.5092, norm(y): 1.0136, norm:1.4085, tok/sec: 97947.66, flops:102.80, batch-reuse:1
@ 5143 train 4.2051 , allloss: 4.2058, dt: 1328.06ms, fracRes: 0.3707, norm(attn): 0.2539, norm(output): 0.5547, norm(x): 0.5126, norm(y): 1.0136, norm:1.5383, tok/sec: 98694.41, flops:103.58, batch-reuse:1
@ 5144 train 4.2767 , allloss: 4.2786, dt: 1298.80ms, fracRes: 0.3740, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5137, norm(y): 1.0137, norm:1.3506, tok/sec: 100917.85, flops:105.92, batch-reuse:1
@ 5145 train 4.2462 , allloss: 4.2475, dt: 1312.82ms, fracRes: 0.3745, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5119, norm(y): 1.0138, norm:1.5718, tok/sec: 99839.88, flops:104.78, batch-reuse:1
@ 5146 train 4.2005 , allloss: 4.2019, dt: 1307.88ms, fracRes: 0.3740, norm(attn): 0.2471, norm(output): 0.5586, norm(x): 0.5125, norm(y): 1.0138, norm:1.3831, tok/sec: 100217.26, flops:105.18, batch-reuse:1
@ 5147 train 4.1551 , allloss: 4.1581, dt: 1287.99ms, fracRes: 0.3735, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5115, norm(y): 1.0137, norm:1.3323, tok/sec: 101765.12, flops:106.80, batch-reuse:1
@ 5148 train 4.2502 , allloss: 4.2514, dt: 1292.42ms, fracRes: 0.3729, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5117, norm(y): 1.0137, norm:1.3755, tok/sec: 101415.99, flops:106.44, batch-reuse:1
@ 5149 train 4.1219 , allloss: 4.1235, dt: 1284.37ms, fracRes: 0.3722, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5114, norm(y): 1.0137, norm:1.2683, tok/sec: 102051.71, flops:107.11, batch-reuse:1
@ 5150 train 4.2008 , allloss: 4.2024, dt: 1303.97ms, fracRes: 0.3734, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5116, norm(y): 1.0137, norm:1.3453, tok/sec: 100517.75, flops:105.50, batch-reuse:1
@ 5151 train 4.2547 , allloss: 4.2564, dt: 1319.72ms, fracRes: 0.3725, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5107, norm(y): 1.0136, norm:1.3382, tok/sec: 99318.25, flops:104.24, batch-reuse:1
@ 5152 train 4.1758 , allloss: 4.1784, dt: 1299.83ms, fracRes: 0.3726, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5094, norm(y): 1.0137, norm:1.3446, tok/sec: 100837.51, flops:105.83, batch-reuse:1
@ 5153 train 4.1592 , allloss: 4.1603, dt: 1329.00ms, fracRes: 0.3724, norm(attn): 0.2559, norm(output): 0.5547, norm(x): 0.5075, norm(y): 1.0137, norm:1.4130, tok/sec: 98624.46, flops:103.51, batch-reuse:1
@ 5154 train 4.3956 , allloss: 4.3964, dt: 1337.19ms, fracRes: 0.3725, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5134, norm(y): 1.0137, norm:1.6310, tok/sec: 98020.55, flops:102.87, batch-reuse:1
@ 5155 train 4.1840 , allloss: 4.1853, dt: 1281.40ms, fracRes: 0.3740, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5121, norm(y): 1.0137, norm:1.2361, tok/sec: 102287.82, flops:107.35, batch-reuse:1
@ 5156 train 4.2230 , allloss: 4.2240, dt: 1332.03ms, fracRes: 0.3755, norm(attn): 0.2461, norm(output): 0.5625, norm(x): 0.5133, norm(y): 1.0138, norm:1.4249, tok/sec: 98400.27, flops:103.27, batch-reuse:1
@ 5157 train 4.0781 , allloss: 4.0790, dt: 1280.77ms, fracRes: 0.3731, norm(attn): 0.2471, norm(output): 0.5625, norm(x): 0.5128, norm(y): 1.0137, norm:1.3649, tok/sec: 102338.13, flops:107.41, batch-reuse:1
@ 5158 train 4.2048 , allloss: 4.2060, dt: 1312.86ms, fracRes: 0.3730, norm(attn): 0.2461, norm(output): 0.5625, norm(x): 0.5155, norm(y): 1.0137, norm:1.2771, tok/sec: 99837.05, flops:104.78, batch-reuse:1
@ 5159 train 4.1296 , allloss: 4.1324, dt: 1323.64ms, fracRes: 0.3707, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5148, norm(y): 1.0137, norm:1.4980, tok/sec: 99023.86, flops:103.93, batch-reuse:1
@ 5160 train 4.1183 , allloss: 4.1206, dt: 1310.98ms, fracRes: 0.3728, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5137, norm(y): 1.0138, norm:1.5632, tok/sec: 99979.85, flops:104.93, batch-reuse:1
@ 5161 train 4.1735 , allloss: 4.1744, dt: 1296.46ms, fracRes: 0.3710, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5137, norm(y): 1.0137, norm:1.5595, tok/sec: 101099.68, flops:106.11, batch-reuse:1
@ 5162 train 4.1916 , allloss: 4.1925, dt: 1321.41ms, fracRes: 0.3718, norm(attn): 0.2461, norm(output): 0.5586, norm(x): 0.5137, norm(y): 1.0137, norm:1.2564, tok/sec: 99190.93, flops:104.10, batch-reuse:1
@ 5163 train 4.0611 , allloss: 4.0621, dt: 1305.93ms, fracRes: 0.3733, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5173, norm(y): 1.0136, norm:1.6886, tok/sec: 100367.02, flops:105.34, batch-reuse:1
@ 5164 train 4.1850 , allloss: 4.1860, dt: 1322.66ms, fracRes: 0.3752, norm(attn): 0.2451, norm(output): 0.5625, norm(x): 0.5173, norm(y): 1.0137, norm:1.3771, tok/sec: 99097.17, flops:104.00, batch-reuse:1
@ 5165 train 4.1181 , allloss: 4.1192, dt: 1343.02ms, fracRes: 0.3740, norm(attn): 0.2461, norm(output): 0.5625, norm(x): 0.5130, norm(y): 1.0137, norm:1.5663, tok/sec: 97594.75, flops:102.43, batch-reuse:1
@ 5166 train 4.1043 , allloss: 4.1052, dt: 1335.17ms, fracRes: 0.3762, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5166, norm(y): 1.0137, norm:1.5790, tok/sec: 98168.52, flops:103.03, batch-reuse:1
@ 5167 train 4.1307 , allloss: 4.1314, dt: 1295.65ms, fracRes: 0.3750, norm(attn): 0.2490, norm(output): 0.5625, norm(x): 0.5160, norm(y): 1.0137, norm:1.5219, tok/sec: 101163.36, flops:106.17, batch-reuse:1
@ 5168 train 4.1117 , allloss: 4.1125, dt: 1291.62ms, fracRes: 0.3732, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5085, norm(y): 1.0136, norm:1.5299, tok/sec: 101478.76, flops:106.50, batch-reuse:1
@ 5169 train 4.1610 , allloss: 4.1624, dt: 1303.24ms, fracRes: 0.3733, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5126, norm(y): 1.0137, norm:1.6377, tok/sec: 100573.78, flops:105.55, batch-reuse:1
@ 5170 train 4.1186 , allloss: 4.1200, dt: 1306.20ms, fracRes: 0.3731, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5150, norm(y): 1.0136, norm:1.3185, tok/sec: 100345.84, flops:105.31, batch-reuse:1
@ 5171 train 4.1176 , allloss: 4.1204, dt: 1314.44ms, fracRes: 0.3729, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5151, norm(y): 1.0137, norm:1.4406, tok/sec: 99716.75, flops:104.65, batch-reuse:1
@ 5172 train 4.1554 , allloss: 4.1564, dt: 1269.40ms, fracRes: 0.3723, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5135, norm(y): 1.0137, norm:1.3957, tok/sec: 103255.42, flops:108.37, batch-reuse:1
@ 5173 train 4.1743 , allloss: 4.1754, dt: 1307.43ms, fracRes: 0.3747, norm(attn): 0.2461, norm(output): 0.5664, norm(x): 0.5158, norm(y): 1.0137, norm:1.4352, tok/sec: 100252.00, flops:105.22, batch-reuse:1
@ 5174 train 4.1311 , allloss: 4.1321, dt: 1326.22ms, fracRes: 0.3739, norm(attn): 0.2471, norm(output): 0.5664, norm(x): 0.5153, norm(y): 1.0137, norm:1.3558, tok/sec: 98831.08, flops:103.73, batch-reuse:1
@ 5175 train 4.1633 , allloss: 4.1643, dt: 1307.04ms, fracRes: 0.3730, norm(attn): 0.2471, norm(output): 0.5625, norm(x): 0.5121, norm(y): 1.0137, norm:1.2564, tok/sec: 100281.54, flops:105.25, batch-reuse:1
@ 5176 train 4.1236 , allloss: 4.1253, dt: 1292.20ms, fracRes: 0.3726, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5139, norm(y): 1.0137, norm:1.3695, tok/sec: 101433.00, flops:106.46, batch-reuse:1
@ 5177 train 4.1196 , allloss: 4.1209, dt: 1294.60ms, fracRes: 0.3724, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5085, norm(y): 1.0137, norm:1.2259, tok/sec: 101245.17, flops:106.26, batch-reuse:1
@ 5178 train 4.0733 , allloss: 4.0750, dt: 1288.34ms, fracRes: 0.3709, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5135, norm(y): 1.0136, norm:1.3980, tok/sec: 101737.11, flops:106.77, batch-reuse:1
@ 5179 train 4.1162 , allloss: 4.1175, dt: 1306.80ms, fracRes: 0.3699, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5168, norm(y): 1.0138, norm:1.4229, tok/sec: 100300.31, flops:105.27, batch-reuse:1
@ 5180 train 4.0695 , allloss: 4.0703, dt: 1309.19ms, fracRes: 0.3705, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5128, norm(y): 1.0136, norm:1.4593, tok/sec: 100116.63, flops:105.07, batch-reuse:1
@ 5181 train 4.1311 , allloss: 4.1328, dt: 1299.25ms, fracRes: 0.3717, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5148, norm(y): 1.0136, norm:1.3788, tok/sec: 100882.68, flops:105.88, batch-reuse:1
@ 5182 train 4.1319 , allloss: 4.1335, dt: 1298.47ms, fracRes: 0.3730, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5102, norm(y): 1.0136, norm:1.3941, tok/sec: 100943.36, flops:105.94, batch-reuse:1
@ 5183 train 4.1400 , allloss: 4.1410, dt: 1311.69ms, fracRes: 0.3746, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5136, norm(y): 1.0136, norm:1.4444, tok/sec: 99926.08, flops:104.87, batch-reuse:1
@ 5184 train 4.0878 , allloss: 4.0891, dt: 1325.25ms, fracRes: 0.3733, norm(attn): 0.2520, norm(output): 0.5547, norm(x): 0.5130, norm(y): 1.0135, norm:1.4344, tok/sec: 98903.47, flops:103.80, batch-reuse:1
@ 5185 train 4.1094 , allloss: 4.1108, dt: 1305.09ms, fracRes: 0.3721, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5130, norm(y): 1.0137, norm:1.3803, tok/sec: 100431.21, flops:105.40, batch-reuse:1
@ 5186 train 4.0559 , allloss: 4.0585, dt: 1263.67ms, fracRes: 0.3727, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5104, norm(y): 1.0137, norm:1.4002, tok/sec: 103723.64, flops:108.86, batch-reuse:1
@ 5187 train 4.1345 , allloss: 4.1357, dt: 1289.47ms, fracRes: 0.3733, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5113, norm(y): 1.0137, norm:1.3549, tok/sec: 101648.17, flops:106.68, batch-reuse:1
@ 5188 train 3.9887 , allloss: 3.9901, dt: 1304.71ms, fracRes: 0.3738, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.5118, norm(y): 1.0136, norm:1.3171, tok/sec: 100460.43, flops:105.44, batch-reuse:1
@ 5189 train 4.1010 , allloss: 4.1027, dt: 1303.69ms, fracRes: 0.3744, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5089, norm(y): 1.0137, norm:1.3862, tok/sec: 100539.21, flops:105.52, batch-reuse:1
@ 5190 train 4.1262 , allloss: 4.1275, dt: 1320.77ms, fracRes: 0.3726, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5077, norm(y): 1.0136, norm:1.5831, tok/sec: 99238.97, flops:104.15, batch-reuse:1
@ 5191 train 4.2377 , allloss: 4.2386, dt: 1295.14ms, fracRes: 0.3720, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.5095, norm(y): 1.0136, norm:1.3153, tok/sec: 101202.70, flops:106.21, batch-reuse:1
@ 5192 train 4.1718 , allloss: 4.1729, dt: 1354.55ms, fracRes: 0.3729, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5119, norm(y): 1.0136, norm:1.3704, tok/sec: 96764.37, flops:101.56, batch-reuse:1
@ 5193 train 4.1378 , allloss: 4.1388, dt: 1355.12ms, fracRes: 0.3751, norm(attn): 0.2432, norm(output): 0.5664, norm(x): 0.5132, norm(y): 1.0138, norm:1.6002, tok/sec: 96723.20, flops:101.51, batch-reuse:1
@ 5194 train 4.1817 , allloss: 4.1828, dt: 1312.96ms, fracRes: 0.3761, norm(attn): 0.2432, norm(output): 0.5664, norm(x): 0.5147, norm(y): 1.0138, norm:1.3223, tok/sec: 99829.58, flops:104.77, batch-reuse:1
@ 5195 train 4.0808 , allloss: 4.0886, dt: 1341.57ms, fracRes: 0.3750, norm(attn): 0.2441, norm(output): 0.5664, norm(x): 0.5140, norm(y): 1.0137, norm:1.4186, tok/sec: 97700.48, flops:102.54, batch-reuse:1
@ 5196 train 4.0655 , allloss: 4.0670, dt: 1323.20ms, fracRes: 0.3743, norm(attn): 0.2480, norm(output): 0.5664, norm(x): 0.5141, norm(y): 1.0135, norm:1.4153, tok/sec: 99057.17, flops:103.96, batch-reuse:1
@ 5197 train 4.1518 , allloss: 4.1531, dt: 1343.99ms, fracRes: 0.3750, norm(attn): 0.2441, norm(output): 0.5664, norm(x): 0.5145, norm(y): 1.0136, norm:1.2411, tok/sec: 97524.55, flops:102.35, batch-reuse:1
@ 5198 train 4.1477 , allloss: 4.1507, dt: 1330.65ms, fracRes: 0.3748, norm(attn): 0.2451, norm(output): 0.5625, norm(x): 0.5129, norm(y): 1.0137, norm:1.3170, tok/sec: 98502.25, flops:103.38, batch-reuse:1
@ 5199 train 4.2093 , allloss: 4.2109, dt: 1321.43ms, fracRes: 0.3735, norm(attn): 0.2441, norm(output): 0.5664, norm(x): 0.5109, norm(y): 1.0136, norm:1.3261, tok/sec: 99189.28, flops:104.10, batch-reuse:1
@ 5200 train 4.0323 , allloss: 4.0334, dt: 1310.78ms, fracRes: 0.3752, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5197, norm(y): 1.0137, norm:1.6839, tok/sec: 99995.55, flops:104.95, batch-reuse:1
@ 5201 train 4.1761 , allloss: 4.1838, dt: 1309.26ms, fracRes: 0.3730, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.5144, norm(y): 1.0137, norm:1.4073, tok/sec: 100111.78, flops:105.07, batch-reuse:1
@ 5202 train 4.1539 , allloss: 4.1552, dt: 1292.58ms, fracRes: 0.3716, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5170, norm(y): 1.0136, norm:1.4193, tok/sec: 101403.61, flops:106.42, batch-reuse:1
@ 5203 train 4.2837 , allloss: 4.2848, dt: 1299.42ms, fracRes: 0.3693, norm(attn): 0.2578, norm(output): 0.5586, norm(x): 0.5139, norm(y): 1.0137, norm:1.7958, tok/sec: 100869.65, flops:105.86, batch-reuse:1
@ 5204 train 4.3299 , allloss: 4.3321, dt: 1278.56ms, fracRes: 0.3737, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.5191, norm(y): 1.0138, norm:1.7453, tok/sec: 102515.57, flops:107.59, batch-reuse:1
@ 5205 train 4.3234 , allloss: 4.3275, dt: 1281.01ms, fracRes: 0.3771, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.5196, norm(y): 1.0139, norm:1.8944, tok/sec: 102319.02, flops:107.39, batch-reuse:1
@ 5206 train 4.2865 , allloss: 4.2874, dt: 1290.83ms, fracRes: 0.3732, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5141, norm(y): 1.0137, norm:1.7754, tok/sec: 101540.60, flops:106.57, batch-reuse:1
@ 5207 train 4.3032 , allloss: 4.3039, dt: 1299.89ms, fracRes: 0.3717, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5205, norm(y): 1.0138, norm:1.8931, tok/sec: 100833.27, flops:105.83, batch-reuse:1
@ 5208 train 4.2693 , allloss: 4.2709, dt: 1301.69ms, fracRes: 0.3703, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5181, norm(y): 1.0137, norm:1.5396, tok/sec: 100693.87, flops:105.68, batch-reuse:1
@ 5209 train 4.3680 , allloss: 4.3696, dt: 1310.48ms, fracRes: 0.3734, norm(attn): 0.2480, norm(output): 0.5586, norm(x): 0.5166, norm(y): 1.0138, norm:1.4734, tok/sec: 100018.09, flops:104.97, batch-reuse:1
@ 5210 train 4.4407 , allloss: 4.4417, dt: 1336.49ms, fracRes: 0.3742, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5191, norm(y): 1.0137, norm:1.5398, tok/sec: 98072.03, flops:102.93, batch-reuse:1
@ 5211 train 4.2775 , allloss: 4.2785, dt: 1336.71ms, fracRes: 0.3729, norm(attn): 0.2578, norm(output): 0.5586, norm(x): 0.5184, norm(y): 1.0135, norm:1.5989, tok/sec: 98055.76, flops:102.91, batch-reuse:1
@ 5212 train 4.2596 , allloss: 4.2605, dt: 1344.97ms, fracRes: 0.3745, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5162, norm(y): 1.0136, norm:1.5169, tok/sec: 97453.13, flops:102.28, batch-reuse:1
@ 5213 train 4.2680 , allloss: 4.2686, dt: 1330.05ms, fracRes: 0.3730, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5179, norm(y): 1.0136, norm:1.4481, tok/sec: 98546.62, flops:103.43, batch-reuse:1
@ 5214 train 4.3198 , allloss: 4.3212, dt: 1288.76ms, fracRes: 0.3724, norm(attn): 0.2559, norm(output): 0.5586, norm(x): 0.5179, norm(y): 1.0136, norm:1.4187, tok/sec: 101703.63, flops:106.74, batch-reuse:1
@ 5215 train 4.3705 , allloss: 4.3745, dt: 1305.29ms, fracRes: 0.3720, norm(attn): 0.2559, norm(output): 0.5547, norm(x): 0.5134, norm(y): 1.0137, norm:1.2793, tok/sec: 100416.24, flops:105.39, batch-reuse:1
@ 5216 train 4.2226 , allloss: 4.2262, dt: 1282.57ms, fracRes: 0.3726, norm(attn): 0.2598, norm(output): 0.5586, norm(x): 0.5130, norm(y): 1.0136, norm:1.5282, tok/sec: 102195.20, flops:107.26, batch-reuse:1
@ 5217 train 4.2354 , allloss: 4.2373, dt: 1285.24ms, fracRes: 0.3727, norm(attn): 0.2598, norm(output): 0.5547, norm(x): 0.5128, norm(y): 1.0136, norm:1.2768, tok/sec: 101982.33, flops:107.03, batch-reuse:1
@ 5218 train 4.3554 , allloss: 4.3569, dt: 1299.98ms, fracRes: 0.3726, norm(attn): 0.2578, norm(output): 0.5586, norm(x): 0.5140, norm(y): 1.0137, norm:1.4282, tok/sec: 100826.19, flops:105.82, batch-reuse:1
@ 5219 train 4.2300 , allloss: 4.2321, dt: 1305.45ms, fracRes: 0.3716, norm(attn): 0.2617, norm(output): 0.5586, norm(x): 0.5114, norm(y): 1.0135, norm:1.3189, tok/sec: 100403.37, flops:105.38, batch-reuse:1
@ 5220 train 4.4147 , allloss: 4.4162, dt: 1302.55ms, fracRes: 0.3746, norm(attn): 0.2598, norm(output): 0.5625, norm(x): 0.5163, norm(y): 1.0135, norm:1.4402, tok/sec: 100627.58, flops:105.61, batch-reuse:1
@ 5221 train 4.2613 , allloss: 4.2638, dt: 1297.06ms, fracRes: 0.3736, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5195, norm(y): 1.0137, norm:1.2563, tok/sec: 101053.50, flops:106.06, batch-reuse:1
@ 5222 train 4.2531 , allloss: 4.2545, dt: 1317.66ms, fracRes: 0.3718, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5159, norm(y): 1.0137, norm:1.2777, tok/sec: 99473.55, flops:104.40, batch-reuse:1
@ 5223 train 4.3541 , allloss: 4.3553, dt: 1284.38ms, fracRes: 0.3732, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5179, norm(y): 1.0137, norm:1.4091, tok/sec: 102050.68, flops:107.10, batch-reuse:1
@ 5224 train 4.2715 , allloss: 4.2723, dt: 1296.06ms, fracRes: 0.3743, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5174, norm(y): 1.0136, norm:1.1756, tok/sec: 101131.36, flops:106.14, batch-reuse:1
@ 5225 train 4.3465 , allloss: 4.3480, dt: 1300.10ms, fracRes: 0.3754, norm(attn): 0.2520, norm(output): 0.5703, norm(x): 0.5226, norm(y): 1.0136, norm:1.6080, tok/sec: 100817.11, flops:105.81, batch-reuse:1
@ 5226 train 4.1797 , allloss: 4.1813, dt: 1300.50ms, fracRes: 0.3752, norm(attn): 0.2559, norm(output): 0.5703, norm(x): 0.5261, norm(y): 1.0136, norm:1.3992, tok/sec: 100785.78, flops:105.78, batch-reuse:1
@ 5227 train 4.2606 , allloss: 4.2617, dt: 1294.50ms, fracRes: 0.3721, norm(attn): 0.2559, norm(output): 0.5586, norm(x): 0.5180, norm(y): 1.0136, norm:1.2381, tok/sec: 101253.36, flops:106.27, batch-reuse:1
@ 5228 train 4.2370 , allloss: 4.2386, dt: 1299.43ms, fracRes: 0.3736, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.5195, norm(y): 1.0137, norm:1.5385, tok/sec: 100868.48, flops:105.86, batch-reuse:1
@ 5229 train 4.2750 , allloss: 4.2759, dt: 1297.27ms, fracRes: 0.3728, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5194, norm(y): 1.0137, norm:1.3195, tok/sec: 101036.57, flops:106.04, batch-reuse:1
@ 5230 train 4.2772 , allloss: 4.2782, dt: 1295.25ms, fracRes: 0.3715, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5190, norm(y): 1.0137, norm:1.4962, tok/sec: 101194.16, flops:106.21, batch-reuse:1
@ 5231 train 4.3197 , allloss: 4.3219, dt: 1309.12ms, fracRes: 0.3720, norm(attn): 0.2559, norm(output): 0.5547, norm(x): 0.5150, norm(y): 1.0137, norm:1.3212, tok/sec: 100122.37, flops:105.08, batch-reuse:1
@ 5232 train 4.4107 , allloss: 4.4121, dt: 1325.25ms, fracRes: 0.3726, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5183, norm(y): 1.0137, norm:1.2052, tok/sec: 98903.82, flops:103.80, batch-reuse:1
@ 5233 train 4.2753 , allloss: 4.2776, dt: 1346.35ms, fracRes: 0.3723, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5217, norm(y): 1.0137, norm:1.4229, tok/sec: 97353.85, flops:102.17, batch-reuse:1
@ 5234 train 4.2689 , allloss: 4.2704, dt: 1347.75ms, fracRes: 0.3729, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5211, norm(y): 1.0136, norm:1.3540, tok/sec: 97252.32, flops:102.07, batch-reuse:1
@ 5235 train 4.2654 , allloss: 4.2668, dt: 1340.85ms, fracRes: 0.3720, norm(attn): 0.2598, norm(output): 0.5586, norm(x): 0.5190, norm(y): 1.0136, norm:1.3480, tok/sec: 97752.94, flops:102.59, batch-reuse:1
@ 5236 train 4.3204 , allloss: 4.3211, dt: 1327.64ms, fracRes: 0.3731, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5201, norm(y): 1.0136, norm:1.3915, tok/sec: 98725.22, flops:103.61, batch-reuse:1
@ 5237 train 4.3785 , allloss: 4.3793, dt: 1312.95ms, fracRes: 0.3737, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.5153, norm(y): 1.0136, norm:1.3186, tok/sec: 99830.43, flops:104.77, batch-reuse:1
@ 5238 train 4.3459 , allloss: 4.3470, dt: 1308.75ms, fracRes: 0.3745, norm(attn): 0.2559, norm(output): 0.5586, norm(x): 0.5200, norm(y): 1.0137, norm:1.3795, tok/sec: 100150.42, flops:105.11, batch-reuse:1
@ 5239 train 4.2539 , allloss: 4.2550, dt: 1330.97ms, fracRes: 0.3734, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5148, norm(y): 1.0136, norm:1.4016, tok/sec: 98478.48, flops:103.36, batch-reuse:1
@ 5240 train 4.3726 , allloss: 4.3734, dt: 1311.90ms, fracRes: 0.3736, norm(attn): 0.2559, norm(output): 0.5586, norm(x): 0.5157, norm(y): 1.0136, norm:1.3130, tok/sec: 99910.26, flops:104.86, batch-reuse:1
@ 5241 train 4.2980 , allloss: 4.2988, dt: 1298.85ms, fracRes: 0.3766, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5139, norm(y): 1.0137, norm:1.4229, tok/sec: 100914.03, flops:105.91, batch-reuse:1
@ 5242 train 4.4070 , allloss: 4.4076, dt: 1286.42ms, fracRes: 0.3768, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.5171, norm(y): 1.0137, norm:1.3570, tok/sec: 101889.12, flops:106.93, batch-reuse:1
@ 5243 train 4.3258 , allloss: 4.3328, dt: 1295.08ms, fracRes: 0.3718, norm(attn): 0.2578, norm(output): 0.5586, norm(x): 0.5159, norm(y): 1.0135, norm:1.4411, tok/sec: 101207.61, flops:106.22, batch-reuse:1
@ 5244 train 4.2766 , allloss: 4.2783, dt: 1322.18ms, fracRes: 0.3736, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5207, norm(y): 1.0137, norm:1.5402, tok/sec: 99133.23, flops:104.04, batch-reuse:1
@ 5245 train 4.2711 , allloss: 4.2728, dt: 1307.39ms, fracRes: 0.3714, norm(attn): 0.2637, norm(output): 0.5586, norm(x): 0.5156, norm(y): 1.0136, norm:1.2501, tok/sec: 100254.40, flops:105.22, batch-reuse:1
@ 5246 train 4.1670 , allloss: 4.1690, dt: 1313.08ms, fracRes: 0.3720, norm(attn): 0.2598, norm(output): 0.5586, norm(x): 0.5160, norm(y): 1.0136, norm:1.2213, tok/sec: 99820.43, flops:104.76, batch-reuse:1
@ 5247 train 4.2596 , allloss: 4.2606, dt: 1288.20ms, fracRes: 0.3745, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.5226, norm(y): 1.0137, norm:1.4845, tok/sec: 101748.22, flops:106.79, batch-reuse:1
@ 5248 train 4.2141 , allloss: 4.2155, dt: 1323.93ms, fracRes: 0.3721, norm(attn): 0.2598, norm(output): 0.5625, norm(x): 0.5168, norm(y): 1.0135, norm:1.4465, tok/sec: 99002.02, flops:103.90, batch-reuse:1
@ 5249 train 4.2815 , allloss: 4.2829, dt: 1321.21ms, fracRes: 0.3706, norm(attn): 0.2598, norm(output): 0.5586, norm(x): 0.5134, norm(y): 1.0137, norm:1.1050, tok/sec: 99205.73, flops:104.12, batch-reuse:1
@ 5250 train 4.2615 , allloss: 4.2630, dt: 1320.02ms, fracRes: 0.3711, norm(attn): 0.2598, norm(output): 0.5586, norm(x): 0.5152, norm(y): 1.0137, norm:1.4328, tok/sec: 99295.31, flops:104.21, batch-reuse:1
@ 5251 train 4.1914 , allloss: 4.1922, dt: 1289.19ms, fracRes: 0.3713, norm(attn): 0.2637, norm(output): 0.5586, norm(x): 0.5119, norm(y): 1.0136, norm:1.2544, tok/sec: 101670.00, flops:106.70, batch-reuse:1
@ 5252 train 4.2223 , allloss: 4.2233, dt: 1296.95ms, fracRes: 0.3722, norm(attn): 0.2656, norm(output): 0.5586, norm(x): 0.5146, norm(y): 1.0136, norm:1.3503, tok/sec: 101061.49, flops:106.07, batch-reuse:1
@ 5253 train 4.3426 , allloss: 4.3434, dt: 1301.82ms, fracRes: 0.3735, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5160, norm(y): 1.0137, norm:1.3115, tok/sec: 100683.40, flops:105.67, batch-reuse:1
@ 5254 train 4.3128 , allloss: 4.3140, dt: 1312.03ms, fracRes: 0.3728, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5175, norm(y): 1.0137, norm:1.5644, tok/sec: 99900.02, flops:104.85, batch-reuse:1
@ 5255 train 4.2486 , allloss: 4.2495, dt: 1292.50ms, fracRes: 0.3753, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.5208, norm(y): 1.0137, norm:1.2373, tok/sec: 101409.82, flops:106.43, batch-reuse:1
@ 5256 train 4.2124 , allloss: 4.2134, dt: 1306.32ms, fracRes: 0.3737, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.5183, norm(y): 1.0137, norm:1.4510, tok/sec: 100337.07, flops:105.31, batch-reuse:1
@ 5257 train 4.2095 , allloss: 4.2113, dt: 1342.47ms, fracRes: 0.3749, norm(attn): 0.2480, norm(output): 0.5664, norm(x): 0.5188, norm(y): 1.0138, norm:1.2475, tok/sec: 97635.29, flops:102.47, batch-reuse:1
@ 5258 train 4.2943 , allloss: 4.2960, dt: 1342.13ms, fracRes: 0.3761, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.5188, norm(y): 1.0137, norm:1.4288, tok/sec: 97659.50, flops:102.50, batch-reuse:1
@ 5259 train 4.2379 , allloss: 4.2390, dt: 1297.71ms, fracRes: 0.3749, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.5151, norm(y): 1.0137, norm:1.3270, tok/sec: 101002.50, flops:106.00, batch-reuse:1
@ 5260 train 4.2857 , allloss: 4.2887, dt: 1312.65ms, fracRes: 0.3738, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5177, norm(y): 1.0137, norm:1.2025, tok/sec: 99853.14, flops:104.80, batch-reuse:1
@ 5261 train 4.2103 , allloss: 4.2138, dt: 1303.02ms, fracRes: 0.3736, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5173, norm(y): 1.0137, norm:1.2132, tok/sec: 100590.82, flops:105.57, batch-reuse:1
@ 5262 train 4.2771 , allloss: 4.2780, dt: 1325.37ms, fracRes: 0.3749, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5182, norm(y): 1.0137, norm:1.2608, tok/sec: 98894.39, flops:103.79, batch-reuse:1
@ 5263 train 4.3452 , allloss: 4.3464, dt: 1329.93ms, fracRes: 0.3740, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.5166, norm(y): 1.0137, norm:1.3209, tok/sec: 98555.58, flops:103.44, batch-reuse:1
@ 5264 train 4.2797 , allloss: 4.2807, dt: 1315.68ms, fracRes: 0.3725, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5161, norm(y): 1.0137, norm:1.2454, tok/sec: 99623.33, flops:104.56, batch-reuse:1
@ 5265 train 4.2869 , allloss: 4.2880, dt: 1314.33ms, fracRes: 0.3721, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5170, norm(y): 1.0135, norm:1.3637, tok/sec: 99725.07, flops:104.66, batch-reuse:1
@ 5266 train 4.2109 , allloss: 4.2121, dt: 1342.14ms, fracRes: 0.3722, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5192, norm(y): 1.0137, norm:1.2780, tok/sec: 97658.84, flops:102.49, batch-reuse:1
@ 5267 train 4.2805 , allloss: 4.2818, dt: 1334.79ms, fracRes: 0.3714, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5218, norm(y): 1.0138, norm:1.1999, tok/sec: 98196.62, flops:103.06, batch-reuse:1
@ 5268 train 4.2970 , allloss: 4.2979, dt: 1288.40ms, fracRes: 0.3733, norm(attn): 0.2480, norm(output): 0.5625, norm(x): 0.5164, norm(y): 1.0137, norm:1.3467, tok/sec: 101732.09, flops:106.77, batch-reuse:1
@ 5269 train 4.2765 , allloss: 4.2775, dt: 1298.71ms, fracRes: 0.3750, norm(attn): 0.2480, norm(output): 0.5664, norm(x): 0.5172, norm(y): 1.0137, norm:1.3334, tok/sec: 100924.76, flops:105.92, batch-reuse:1
@ 5270 train 4.2218 , allloss: 4.2232, dt: 1316.64ms, fracRes: 0.3734, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5136, norm(y): 1.0137, norm:1.2725, tok/sec: 99550.47, flops:104.48, batch-reuse:1
@ 5271 train 4.3517 , allloss: 4.3532, dt: 1315.91ms, fracRes: 0.3746, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5168, norm(y): 1.0137, norm:1.3343, tok/sec: 99605.37, flops:104.54, batch-reuse:1
@ 5272 train 4.3474 , allloss: 4.3524, dt: 1321.16ms, fracRes: 0.3762, norm(attn): 0.2461, norm(output): 0.5664, norm(x): 0.5209, norm(y): 1.0138, norm:1.2484, tok/sec: 99209.42, flops:104.12, batch-reuse:1
@ 5273 train 4.2530 , allloss: 4.2541, dt: 1300.35ms, fracRes: 0.3742, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5161, norm(y): 1.0137, norm:1.2540, tok/sec: 100797.35, flops:105.79, batch-reuse:1
@ 5274 train 4.3019 , allloss: 4.3027, dt: 1277.32ms, fracRes: 0.3727, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5145, norm(y): 1.0137, norm:1.2893, tok/sec: 102615.09, flops:107.70, batch-reuse:1
@ 5275 train 4.1369 , allloss: 4.1377, dt: 1303.35ms, fracRes: 0.3722, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5143, norm(y): 1.0136, norm:1.1470, tok/sec: 100565.10, flops:105.54, batch-reuse:1
@ 5276 train 4.2383 , allloss: 4.2393, dt: 1306.35ms, fracRes: 0.3723, norm(attn): 0.2559, norm(output): 0.5586, norm(x): 0.5146, norm(y): 1.0136, norm:1.1507, tok/sec: 100334.76, flops:105.30, batch-reuse:1
@ 5277 train 4.2408 , allloss: 4.2418, dt: 1288.93ms, fracRes: 0.3732, norm(attn): 0.2559, norm(output): 0.5664, norm(x): 0.5156, norm(y): 1.0135, norm:1.3761, tok/sec: 101690.48, flops:106.73, batch-reuse:1
@ 5278 train 4.2562 , allloss: 4.2578, dt: 1296.52ms, fracRes: 0.3745, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5173, norm(y): 1.0136, norm:1.0993, tok/sec: 101095.00, flops:106.10, batch-reuse:1
@ 5279 train 4.2695 , allloss: 4.2710, dt: 1318.91ms, fracRes: 0.3729, norm(attn): 0.2578, norm(output): 0.5586, norm(x): 0.5122, norm(y): 1.0137, norm:1.1432, tok/sec: 99379.17, flops:104.30, batch-reuse:1
@ 5280 train 4.3459 , allloss: 4.3467, dt: 1307.97ms, fracRes: 0.3740, norm(attn): 0.2559, norm(output): 0.5586, norm(x): 0.5146, norm(y): 1.0137, norm:1.2818, tok/sec: 100209.99, flops:105.17, batch-reuse:1
@ 5281 train 4.2295 , allloss: 4.2304, dt: 1313.16ms, fracRes: 0.3740, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5141, norm(y): 1.0137, norm:1.1164, tok/sec: 99814.27, flops:104.76, batch-reuse:1
@ 5282 train 4.2763 , allloss: 4.2779, dt: 1342.37ms, fracRes: 0.3752, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5243, norm(y): 1.0136, norm:1.4014, tok/sec: 97642.23, flops:102.48, batch-reuse:1
@ 5283 train 4.2683 , allloss: 4.2694, dt: 1353.35ms, fracRes: 0.3734, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5168, norm(y): 1.0137, norm:1.2604, tok/sec: 96850.18, flops:101.65, batch-reuse:1
@ 5284 train 4.2219 , allloss: 4.2233, dt: 1355.95ms, fracRes: 0.3725, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5181, norm(y): 1.0137, norm:1.2496, tok/sec: 96664.32, flops:101.45, batch-reuse:1
@ 5285 train 4.2495 , allloss: 4.2506, dt: 1333.06ms, fracRes: 0.3732, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5225, norm(y): 1.0137, norm:1.3454, tok/sec: 98324.38, flops:103.19, batch-reuse:1
@ 5286 train 4.1418 , allloss: 4.1423, dt: 1282.26ms, fracRes: 0.3719, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.5156, norm(y): 1.0137, norm:1.2136, tok/sec: 102219.73, flops:107.28, batch-reuse:1
@ 5287 train 4.3209 , allloss: 4.3217, dt: 1296.33ms, fracRes: 0.3733, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.5139, norm(y): 1.0138, norm:1.4916, tok/sec: 101110.43, flops:106.12, batch-reuse:1
@ 5288 train 4.0558 , allloss: 4.0572, dt: 1302.07ms, fracRes: 0.3761, norm(attn): 0.2520, norm(output): 0.5703, norm(x): 0.5253, norm(y): 1.0138, norm:1.5201, tok/sec: 100664.11, flops:105.65, batch-reuse:1
@ 5289 train 4.1665 , allloss: 4.1677, dt: 1311.90ms, fracRes: 0.3729, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5147, norm(y): 1.0136, norm:1.5755, tok/sec: 99910.32, flops:104.86, batch-reuse:1
@ 5290 train 4.3311 , allloss: 4.3320, dt: 1332.95ms, fracRes: 0.3726, norm(attn): 0.2617, norm(output): 0.5586, norm(x): 0.5136, norm(y): 1.0137, norm:1.2022, tok/sec: 98332.05, flops:103.20, batch-reuse:1
@ 5291 train 4.2369 , allloss: 4.2380, dt: 1274.90ms, fracRes: 0.3743, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5158, norm(y): 1.0136, norm:1.4862, tok/sec: 102809.67, flops:107.90, batch-reuse:1
@ 5292 train 4.1987 , allloss: 4.1993, dt: 1287.38ms, fracRes: 0.3711, norm(attn): 0.2617, norm(output): 0.5586, norm(x): 0.5149, norm(y): 1.0136, norm:1.4822, tok/sec: 101812.63, flops:106.85, batch-reuse:1
@ 5293 train 4.2467 , allloss: 4.2484, dt: 1305.83ms, fracRes: 0.3715, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5180, norm(y): 1.0137, norm:1.3137, tok/sec: 100374.29, flops:105.34, batch-reuse:1
@ 5294 train 4.2302 , allloss: 4.2319, dt: 1286.15ms, fracRes: 0.3729, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5223, norm(y): 1.0137, norm:1.4049, tok/sec: 101910.45, flops:106.96, batch-reuse:1
@ 5295 train 4.2683 , allloss: 4.2693, dt: 1299.01ms, fracRes: 0.3696, norm(attn): 0.2598, norm(output): 0.5586, norm(x): 0.5189, norm(y): 1.0136, norm:1.3708, tok/sec: 100901.80, flops:105.90, batch-reuse:1
@ 5296 train 4.1730 , allloss: 4.1754, dt: 1307.94ms, fracRes: 0.3708, norm(attn): 0.2656, norm(output): 0.5586, norm(x): 0.5153, norm(y): 1.0135, norm:1.5468, tok/sec: 100212.55, flops:105.17, batch-reuse:1
@ 5297 train 4.2772 , allloss: 4.2786, dt: 1296.81ms, fracRes: 0.3711, norm(attn): 0.2617, norm(output): 0.5586, norm(x): 0.5144, norm(y): 1.0136, norm:1.3963, tok/sec: 101072.58, flops:106.08, batch-reuse:1
@ 5298 train 4.2274 , allloss: 4.2285, dt: 1306.48ms, fracRes: 0.3728, norm(attn): 0.2617, norm(output): 0.5586, norm(x): 0.5144, norm(y): 1.0136, norm:1.2041, tok/sec: 100324.43, flops:105.29, batch-reuse:1
@ 5299 train 4.1715 , allloss: 4.1740, dt: 1303.53ms, fracRes: 0.3769, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5277, norm(y): 1.0137, norm:1.5795, tok/sec: 100551.58, flops:105.53, batch-reuse:1
@ 5300 train 4.1826 , allloss: 4.1839, dt: 1293.93ms, fracRes: 0.3757, norm(attn): 0.2598, norm(output): 0.5625, norm(x): 0.5150, norm(y): 1.0136, norm:1.8205, tok/sec: 101297.97, flops:106.31, batch-reuse:1
@ 5301 train 4.2114 , allloss: 4.2125, dt: 1305.45ms, fracRes: 0.3753, norm(attn): 0.2637, norm(output): 0.5547, norm(x): 0.5137, norm(y): 1.0135, norm:1.4249, tok/sec: 100403.71, flops:105.38, batch-reuse:1
@ 5302 train 4.2239 , allloss: 4.2255, dt: 1317.81ms, fracRes: 0.3758, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5154, norm(y): 1.0136, norm:1.3954, tok/sec: 99462.13, flops:104.39, batch-reuse:1
@ 5303 train 4.2422 , allloss: 4.2429, dt: 1307.97ms, fracRes: 0.3755, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5174, norm(y): 1.0137, norm:1.4801, tok/sec: 100210.56, flops:105.17, batch-reuse:1
@ 5304 train 4.2202 , allloss: 4.2211, dt: 1324.69ms, fracRes: 0.3737, norm(attn): 0.2578, norm(output): 0.5586, norm(x): 0.5122, norm(y): 1.0136, norm:1.2709, tok/sec: 98945.25, flops:103.84, batch-reuse:1
@ 5305 train 4.2242 , allloss: 4.2255, dt: 1333.91ms, fracRes: 0.3745, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5175, norm(y): 1.0136, norm:1.4342, tok/sec: 98261.26, flops:103.13, batch-reuse:1
@ 5306 train 4.2097 , allloss: 4.2109, dt: 1322.65ms, fracRes: 0.3740, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5175, norm(y): 1.0136, norm:1.2738, tok/sec: 99098.31, flops:104.01, batch-reuse:1
@ 5307 train 4.0998 , allloss: 4.1005, dt: 1339.02ms, fracRes: 0.3725, norm(attn): 0.2656, norm(output): 0.5586, norm(x): 0.5141, norm(y): 1.0134, norm:1.5018, tok/sec: 97886.53, flops:102.73, batch-reuse:1
@ 5308 train 4.2952 , allloss: 4.2959, dt: 1279.91ms, fracRes: 0.3734, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5178, norm(y): 1.0135, norm:1.2858, tok/sec: 102407.31, flops:107.48, batch-reuse:1
@ 5309 train 4.2091 , allloss: 4.2101, dt: 1300.22ms, fracRes: 0.3719, norm(attn): 0.2559, norm(output): 0.5664, norm(x): 0.5180, norm(y): 1.0136, norm:1.5102, tok/sec: 100807.20, flops:105.80, batch-reuse:1
@ 5310 train 4.2314 , allloss: 4.2326, dt: 1308.64ms, fracRes: 0.3721, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5172, norm(y): 1.0135, norm:1.4420, tok/sec: 100158.69, flops:105.12, batch-reuse:1
@ 5311 train 4.2061 , allloss: 4.2070, dt: 1306.80ms, fracRes: 0.3714, norm(attn): 0.2656, norm(output): 0.5625, norm(x): 0.5201, norm(y): 1.0135, norm:1.1934, tok/sec: 100299.63, flops:105.27, batch-reuse:1
@ 5312 train 4.1236 , allloss: 4.1243, dt: 1303.55ms, fracRes: 0.3710, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5177, norm(y): 1.0135, norm:1.5378, tok/sec: 100550.24, flops:105.53, batch-reuse:1
@ 5313 train 4.2574 , allloss: 4.2582, dt: 1302.68ms, fracRes: 0.3713, norm(attn): 0.2598, norm(output): 0.5664, norm(x): 0.5197, norm(y): 1.0136, norm:1.6924, tok/sec: 100617.48, flops:105.60, batch-reuse:1
@ 5314 train 4.2625 , allloss: 4.2634, dt: 1315.40ms, fracRes: 0.3709, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5186, norm(y): 1.0136, norm:1.2348, tok/sec: 99644.58, flops:104.58, batch-reuse:1
@ 5315 train 4.2431 , allloss: 4.2439, dt: 1315.72ms, fracRes: 0.3721, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5195, norm(y): 1.0137, norm:1.5513, tok/sec: 99620.03, flops:104.55, batch-reuse:1
@ 5316 train 4.1929 , allloss: 4.1946, dt: 1336.39ms, fracRes: 0.3733, norm(attn): 0.2539, norm(output): 0.5703, norm(x): 0.5192, norm(y): 1.0136, norm:1.4162, tok/sec: 98079.17, flops:102.94, batch-reuse:1
@ 5317 train 4.1331 , allloss: 4.1342, dt: 1326.26ms, fracRes: 0.3741, norm(attn): 0.2520, norm(output): 0.5703, norm(x): 0.5205, norm(y): 1.0136, norm:1.4684, tok/sec: 98828.38, flops:103.72, batch-reuse:1
@ 5318 train 4.2085 , allloss: 4.2093, dt: 1290.25ms, fracRes: 0.3768, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.5215, norm(y): 1.0136, norm:1.2189, tok/sec: 101586.55, flops:106.62, batch-reuse:1
@ 5319 train 4.2376 , allloss: 4.2383, dt: 1296.42ms, fracRes: 0.3765, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5211, norm(y): 1.0136, norm:1.4736, tok/sec: 101103.27, flops:106.11, batch-reuse:1
@ 5320 train 4.2458 , allloss: 4.2467, dt: 1311.77ms, fracRes: 0.3772, norm(attn): 0.2559, norm(output): 0.5664, norm(x): 0.5200, norm(y): 1.0137, norm:1.3053, tok/sec: 99919.78, flops:104.87, batch-reuse:1
@ 5321 train 4.1450 , allloss: 4.1459, dt: 1308.00ms, fracRes: 0.3756, norm(attn): 0.2598, norm(output): 0.5664, norm(x): 0.5149, norm(y): 1.0136, norm:1.2289, tok/sec: 100207.65, flops:105.17, batch-reuse:1
@ 5322 train 4.2542 , allloss: 4.2555, dt: 1307.59ms, fracRes: 0.3759, norm(attn): 0.2598, norm(output): 0.5625, norm(x): 0.5167, norm(y): 1.0135, norm:1.3488, tok/sec: 100239.17, flops:105.20, batch-reuse:1
@ 5323 train 4.1965 , allloss: 4.1977, dt: 1347.36ms, fracRes: 0.3763, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5191, norm(y): 1.0136, norm:1.2424, tok/sec: 97280.60, flops:102.10, batch-reuse:1
@ 5324 train 4.1773 , allloss: 4.1785, dt: 1345.23ms, fracRes: 0.3749, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5204, norm(y): 1.0136, norm:1.3322, tok/sec: 97434.44, flops:102.26, batch-reuse:1
@ 5325 train 4.1577 , allloss: 4.1586, dt: 1312.02ms, fracRes: 0.3730, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5201, norm(y): 1.0136, norm:1.3170, tok/sec: 99900.77, flops:104.85, batch-reuse:1
@ 5326 train 4.1674 , allloss: 4.1682, dt: 1315.14ms, fracRes: 0.3720, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5155, norm(y): 1.0136, norm:1.3128, tok/sec: 99663.90, flops:104.60, batch-reuse:1
@ 5327 train 4.0856 , allloss: 4.0865, dt: 1291.65ms, fracRes: 0.3712, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5220, norm(y): 1.0135, norm:1.3349, tok/sec: 101476.68, flops:106.50, batch-reuse:1
@ 5328 train 4.1437 , allloss: 4.1449, dt: 1351.11ms, fracRes: 0.3705, norm(attn): 0.2656, norm(output): 0.5625, norm(x): 0.5184, norm(y): 1.0136, norm:1.3695, tok/sec: 97010.69, flops:101.81, batch-reuse:1
@ 5329 train 4.2774 , allloss: 4.2789, dt: 1290.80ms, fracRes: 0.3721, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5151, norm(y): 1.0136, norm:1.4147, tok/sec: 101543.32, flops:106.57, batch-reuse:1
@ 5330 train 4.1578 , allloss: 4.1586, dt: 1291.55ms, fracRes: 0.3720, norm(attn): 0.2559, norm(output): 0.5664, norm(x): 0.5160, norm(y): 1.0137, norm:1.2331, tok/sec: 101483.91, flops:106.51, batch-reuse:1
@ 5331 train 4.2205 , allloss: 4.2216, dt: 1285.30ms, fracRes: 0.3752, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.5202, norm(y): 1.0137, norm:1.4232, tok/sec: 101978.13, flops:107.03, batch-reuse:1
@ 5332 train 4.2063 , allloss: 4.2071, dt: 1273.25ms, fracRes: 0.3760, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.5186, norm(y): 1.0136, norm:1.1541, tok/sec: 102942.47, flops:108.04, batch-reuse:1
@ 5333 train 4.2005 , allloss: 4.2015, dt: 1304.03ms, fracRes: 0.3737, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5190, norm(y): 1.0134, norm:1.3149, tok/sec: 100513.38, flops:105.49, batch-reuse:1
@ 5334 train 4.0964 , allloss: 4.0989, dt: 1322.72ms, fracRes: 0.3750, norm(attn): 0.2559, norm(output): 0.5664, norm(x): 0.5179, norm(y): 1.0136, norm:1.3305, tok/sec: 99093.15, flops:104.00, batch-reuse:1
@ 5335 train 4.1570 , allloss: 4.1590, dt: 1303.70ms, fracRes: 0.3738, norm(attn): 0.2598, norm(output): 0.5664, norm(x): 0.5160, norm(y): 1.0136, norm:1.2618, tok/sec: 100538.18, flops:105.52, batch-reuse:1
@ 5336 train 4.2017 , allloss: 4.2028, dt: 1327.77ms, fracRes: 0.3725, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5177, norm(y): 1.0137, norm:1.2581, tok/sec: 98715.80, flops:103.60, batch-reuse:1
@ 5337 train 4.1520 , allloss: 4.1529, dt: 1304.06ms, fracRes: 0.3709, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5154, norm(y): 1.0135, norm:1.3345, tok/sec: 100510.64, flops:105.49, batch-reuse:1
@ 5338 train 4.1475 , allloss: 4.1499, dt: 1290.92ms, fracRes: 0.3727, norm(attn): 0.2617, norm(output): 0.5781, norm(x): 0.5290, norm(y): 1.0136, norm:1.3601, tok/sec: 101534.05, flops:106.56, batch-reuse:1
@ 5339 train 4.2846 , allloss: 4.2855, dt: 1309.10ms, fracRes: 0.3694, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.5175, norm(y): 1.0138, norm:1.3468, tok/sec: 100124.08, flops:105.08, batch-reuse:1
@ 5340 train 4.2138 , allloss: 4.2143, dt: 1559.80ms, fracRes: 0.3735, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5197, norm(y): 1.0138, norm:1.5719, tok/sec: 84031.11, flops:88.19, batch-reuse:1
@ 5341 train 4.2744 , allloss: 4.2750, dt: 1322.47ms, fracRes: 0.3753, norm(attn): 0.2578, norm(output): 0.5703, norm(x): 0.5216, norm(y): 1.0137, norm:1.3790, tok/sec: 99111.55, flops:104.02, batch-reuse:1
@ 5342 train 4.1673 , allloss: 4.1678, dt: 1341.36ms, fracRes: 0.3718, norm(attn): 0.2617, norm(output): 0.5703, norm(x): 0.5199, norm(y): 1.0136, norm:1.4227, tok/sec: 97715.94, flops:102.55, batch-reuse:1
@ 5343 train 4.0837 , allloss: 4.0846, dt: 1314.41ms, fracRes: 0.3739, norm(attn): 0.2617, norm(output): 0.5703, norm(x): 0.5224, norm(y): 1.0136, norm:1.4140, tok/sec: 99719.14, flops:104.66, batch-reuse:1
@ 5344 train 4.2148 , allloss: 4.2153, dt: 1284.25ms, fracRes: 0.3766, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5222, norm(y): 1.0138, norm:1.4756, tok/sec: 102061.28, flops:107.12, batch-reuse:1
@ 5345 train 4.1853 , allloss: 4.1861, dt: 1286.33ms, fracRes: 0.3789, norm(attn): 0.2559, norm(output): 0.5664, norm(x): 0.5210, norm(y): 1.0138, norm:1.3716, tok/sec: 101895.98, flops:106.94, batch-reuse:1
@ 5346 train 3.9625 , allloss: 3.9634, dt: 1301.08ms, fracRes: 0.3777, norm(attn): 0.2598, norm(output): 0.5703, norm(x): 0.5230, norm(y): 1.0137, norm:1.5805, tok/sec: 100741.29, flops:105.73, batch-reuse:1
@ 5347 train 4.1546 , allloss: 4.1560, dt: 1290.69ms, fracRes: 0.3734, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5190, norm(y): 1.0136, norm:1.4740, tok/sec: 101551.62, flops:106.58, batch-reuse:1
@ 5348 train 4.1418 , allloss: 4.1481, dt: 1297.96ms, fracRes: 0.3748, norm(attn): 0.2676, norm(output): 0.5625, norm(x): 0.5207, norm(y): 1.0135, norm:1.3653, tok/sec: 100983.30, flops:105.98, batch-reuse:1
@ 5349 train 4.2132 , allloss: 4.2208, dt: 1325.24ms, fracRes: 0.3735, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5261, norm(y): 1.0135, norm:1.5638, tok/sec: 98904.05, flops:103.80, batch-reuse:1
@ 5350 train 4.3174 , allloss: 4.3185, dt: 1308.16ms, fracRes: 0.3719, norm(attn): 0.2637, norm(output): 0.5586, norm(x): 0.5207, norm(y): 1.0136, norm:1.5070, tok/sec: 100195.43, flops:105.16, batch-reuse:1
@ 5351 train 4.0757 , allloss: 4.0767, dt: 1288.41ms, fracRes: 0.3729, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5216, norm(y): 1.0136, norm:1.4050, tok/sec: 101731.45, flops:106.77, batch-reuse:1
@ 5352 train 4.0839 , allloss: 4.0847, dt: 1273.39ms, fracRes: 0.3711, norm(attn): 0.2676, norm(output): 0.5625, norm(x): 0.5199, norm(y): 1.0136, norm:1.2543, tok/sec: 102931.85, flops:108.03, batch-reuse:1
@ 5353 train 4.0784 , allloss: 4.0790, dt: 1298.98ms, fracRes: 0.3715, norm(attn): 0.2637, norm(output): 0.5625, norm(x): 0.5212, norm(y): 1.0137, norm:1.3026, tok/sec: 100904.03, flops:105.90, batch-reuse:1
@ 5354 train 4.1352 , allloss: 4.1366, dt: 1315.22ms, fracRes: 0.3724, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5215, norm(y): 1.0138, norm:1.4788, tok/sec: 99657.52, flops:104.59, batch-reuse:1
@ 5355 train 4.0488 , allloss: 4.0502, dt: 1289.06ms, fracRes: 0.3721, norm(attn): 0.2656, norm(output): 0.5625, norm(x): 0.5166, norm(y): 1.0136, norm:1.1976, tok/sec: 101680.15, flops:106.72, batch-reuse:1
@ 5356 train 4.0844 , allloss: 4.0857, dt: 1316.22ms, fracRes: 0.3755, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5184, norm(y): 1.0137, norm:1.3496, tok/sec: 99582.01, flops:104.51, batch-reuse:1
@ 5357 train 4.0772 , allloss: 4.0784, dt: 1303.09ms, fracRes: 0.3752, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5178, norm(y): 1.0137, norm:1.2052, tok/sec: 100585.47, flops:105.57, batch-reuse:1
@ 5358 train 4.2458 , allloss: 4.2469, dt: 1314.46ms, fracRes: 0.3762, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5183, norm(y): 1.0137, norm:1.1933, tok/sec: 99715.49, flops:104.65, batch-reuse:1
@ 5359 train 4.2129 , allloss: 4.2138, dt: 1304.28ms, fracRes: 0.3777, norm(attn): 0.2480, norm(output): 0.5703, norm(x): 0.5198, norm(y): 1.0137, norm:1.3557, tok/sec: 100493.54, flops:105.47, batch-reuse:1
@ 5360 train 4.1060 , allloss: 4.1067, dt: 1286.25ms, fracRes: 0.3767, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.5187, norm(y): 1.0137, norm:1.3560, tok/sec: 101902.72, flops:106.95, batch-reuse:1
@ 5361 train 4.1839 , allloss: 4.1850, dt: 1311.55ms, fracRes: 0.3771, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.5194, norm(y): 1.0137, norm:1.2102, tok/sec: 99936.74, flops:104.89, batch-reuse:1
@ 5362 train 4.2362 , allloss: 4.2388, dt: 1302.91ms, fracRes: 0.3775, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5211, norm(y): 1.0138, norm:1.4305, tok/sec: 100599.37, flops:105.58, batch-reuse:1
@ 5363 train 4.1029 , allloss: 4.1045, dt: 1292.87ms, fracRes: 0.3782, norm(attn): 0.2500, norm(output): 0.5703, norm(x): 0.5196, norm(y): 1.0138, norm:1.2869, tok/sec: 101380.38, flops:106.40, batch-reuse:1
@ 5364 train 4.2527 , allloss: 4.2539, dt: 1347.55ms, fracRes: 0.3779, norm(attn): 0.2539, norm(output): 0.5703, norm(x): 0.5236, norm(y): 1.0138, norm:1.3962, tok/sec: 97267.21, flops:102.08, batch-reuse:1
@ 5365 train 3.9898 , allloss: 3.9908, dt: 1342.29ms, fracRes: 0.3764, norm(attn): 0.2598, norm(output): 0.5664, norm(x): 0.5199, norm(y): 1.0136, norm:1.4460, tok/sec: 97647.90, flops:102.48, batch-reuse:1
@ 5366 train 4.1405 , allloss: 4.1415, dt: 1330.71ms, fracRes: 0.3749, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5201, norm(y): 1.0136, norm:1.3744, tok/sec: 98498.03, flops:103.38, batch-reuse:1
@ 5367 train 4.1155 , allloss: 4.1163, dt: 1348.40ms, fracRes: 0.3734, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5202, norm(y): 1.0137, norm:1.3781, tok/sec: 97205.52, flops:102.02, batch-reuse:1
@ 5368 train 4.0429 , allloss: 4.0441, dt: 1340.54ms, fracRes: 0.3740, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5217, norm(y): 1.0136, norm:1.3663, tok/sec: 97775.32, flops:102.62, batch-reuse:1
@ 5369 train 4.1418 , allloss: 4.1431, dt: 1307.23ms, fracRes: 0.3743, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5162, norm(y): 1.0136, norm:1.4596, tok/sec: 100266.65, flops:105.23, batch-reuse:1
@ 5370 train 4.0383 , allloss: 4.0395, dt: 1304.79ms, fracRes: 0.3736, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5162, norm(y): 1.0136, norm:1.2247, tok/sec: 100454.62, flops:105.43, batch-reuse:1
@ 5371 train 4.1380 , allloss: 4.1390, dt: 1282.42ms, fracRes: 0.3748, norm(attn): 0.2578, norm(output): 0.5625, norm(x): 0.5150, norm(y): 1.0137, norm:1.2417, tok/sec: 102207.00, flops:107.27, batch-reuse:1
@ 5372 train 4.1243 , allloss: 4.1266, dt: 1286.60ms, fracRes: 0.3756, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5178, norm(y): 1.0137, norm:1.3134, tok/sec: 101874.72, flops:106.92, batch-reuse:1
@ 5373 train 4.2753 , allloss: 4.2762, dt: 1297.15ms, fracRes: 0.3747, norm(attn): 0.2617, norm(output): 0.5586, norm(x): 0.5198, norm(y): 1.0136, norm:1.3131, tok/sec: 101046.11, flops:106.05, batch-reuse:1
@ 5374 train 4.0599 , allloss: 4.0613, dt: 1321.08ms, fracRes: 0.3748, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5150, norm(y): 1.0136, norm:1.4124, tok/sec: 99215.44, flops:104.13, batch-reuse:1
@ 5375 train 4.1021 , allloss: 4.1037, dt: 1305.53ms, fracRes: 0.3750, norm(attn): 0.2617, norm(output): 0.5625, norm(x): 0.5165, norm(y): 1.0135, norm:1.4334, tok/sec: 100397.83, flops:105.37, batch-reuse:1
@ 5376 train 4.0604 , allloss: 4.0618, dt: 1311.07ms, fracRes: 0.3755, norm(attn): 0.2559, norm(output): 0.5703, norm(x): 0.5213, norm(y): 1.0137, norm:1.4015, tok/sec: 99973.60, flops:104.92, batch-reuse:1
@ 5377 train 4.1972 , allloss: 4.1985, dt: 1320.58ms, fracRes: 0.3741, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5191, norm(y): 1.0136, norm:1.2889, tok/sec: 99253.45, flops:104.17, batch-reuse:1
@ 5378 train 4.1210 , allloss: 4.1222, dt: 1311.22ms, fracRes: 0.3736, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5160, norm(y): 1.0137, norm:1.4152, tok/sec: 99961.76, flops:104.91, batch-reuse:1
@ 5379 train 4.0800 , allloss: 4.0818, dt: 1293.05ms, fracRes: 0.3730, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5180, norm(y): 1.0137, norm:1.3344, tok/sec: 101366.89, flops:106.39, batch-reuse:1
@ 5380 train 4.0663 , allloss: 4.0680, dt: 1288.77ms, fracRes: 0.3746, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5182, norm(y): 1.0137, norm:1.3994, tok/sec: 101703.55, flops:106.74, batch-reuse:1
@ 5381 train 4.0867 , allloss: 4.0877, dt: 1295.04ms, fracRes: 0.3755, norm(attn): 0.2578, norm(output): 0.5703, norm(x): 0.5233, norm(y): 1.0137, norm:1.3159, tok/sec: 101210.86, flops:106.22, batch-reuse:1
@ 5382 train 4.0092 , allloss: 4.0107, dt: 1308.89ms, fracRes: 0.3736, norm(attn): 0.2656, norm(output): 0.5625, norm(x): 0.5186, norm(y): 1.0135, norm:1.3405, tok/sec: 100139.86, flops:105.10, batch-reuse:1
@ 5383 train 4.2012 , allloss: 4.2027, dt: 1294.40ms, fracRes: 0.3747, norm(attn): 0.2637, norm(output): 0.5664, norm(x): 0.5228, norm(y): 1.0136, norm:1.5830, tok/sec: 101261.17, flops:106.28, batch-reuse:1
@ 5384 train 4.0729 , allloss: 4.0745, dt: 1301.73ms, fracRes: 0.3746, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.5235, norm(y): 1.0138, norm:1.3207, tok/sec: 100690.68, flops:105.68, batch-reuse:1
@ 5385 train 4.1206 , allloss: 4.1220, dt: 1327.41ms, fracRes: 0.3748, norm(attn): 0.2559, norm(output): 0.5664, norm(x): 0.5212, norm(y): 1.0137, norm:1.4498, tok/sec: 98742.45, flops:103.63, batch-reuse:1
@ 5386 train 4.1124 , allloss: 4.1136, dt: 1277.29ms, fracRes: 0.3748, norm(attn): 0.2598, norm(output): 0.5664, norm(x): 0.5202, norm(y): 1.0136, norm:1.4058, tok/sec: 102617.12, flops:107.70, batch-reuse:1
@ 5387 train 4.0840 , allloss: 4.0851, dt: 1272.89ms, fracRes: 0.3754, norm(attn): 0.2539, norm(output): 0.5742, norm(x): 0.5232, norm(y): 1.0137, norm:1.2397, tok/sec: 102972.01, flops:108.07, batch-reuse:1
@ 5388 train 4.1271 , allloss: 4.1288, dt: 1307.04ms, fracRes: 0.3754, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5183, norm(y): 1.0136, norm:1.3543, tok/sec: 100281.57, flops:105.25, batch-reuse:1
@ 5389 train 4.4694 , allloss: 4.4711, dt: 1300.98ms, fracRes: 0.3781, norm(attn): 0.2539, norm(output): 0.5703, norm(x): 0.5253, norm(y): 1.0138, norm:1.3117, tok/sec: 100748.71, flops:105.74, batch-reuse:1
@ 5390 train 4.3086 , allloss: 4.3093, dt: 1330.55ms, fracRes: 0.3784, norm(attn): 0.2559, norm(output): 0.5703, norm(x): 0.5240, norm(y): 1.0137, norm:1.4285, tok/sec: 98509.43, flops:103.39, batch-reuse:1
@ 5391 train 4.1741 , allloss: 4.1751, dt: 1300.01ms, fracRes: 0.3766, norm(attn): 0.2598, norm(output): 0.5703, norm(x): 0.5270, norm(y): 1.0137, norm:1.2628, tok/sec: 100823.73, flops:105.82, batch-reuse:1
@ 5392 train 4.2377 , allloss: 4.2398, dt: 1320.11ms, fracRes: 0.3740, norm(attn): 0.2598, norm(output): 0.5664, norm(x): 0.5226, norm(y): 1.0137, norm:1.4058, tok/sec: 99288.73, flops:104.21, batch-reuse:1
@ 5393 train 4.2380 , allloss: 4.2389, dt: 1321.30ms, fracRes: 0.3738, norm(attn): 0.2637, norm(output): 0.5625, norm(x): 0.5226, norm(y): 1.0138, norm:1.1660, tok/sec: 99198.97, flops:104.11, batch-reuse:1
@ 5394 train 4.1954 , allloss: 4.1978, dt: 1313.28ms, fracRes: 0.3762, norm(attn): 0.2559, norm(output): 0.5781, norm(x): 0.5308, norm(y): 1.0138, norm:1.4914, tok/sec: 99805.37, flops:104.75, batch-reuse:1
@ 5395 train 4.4335 , allloss: 4.4366, dt: 1327.31ms, fracRes: 0.3707, norm(attn): 0.2656, norm(output): 0.5625, norm(x): 0.5261, norm(y): 1.0137, norm:1.5613, tok/sec: 98750.20, flops:103.64, batch-reuse:1
@ 5396 train 4.2984 , allloss: 4.2993, dt: 1305.64ms, fracRes: 0.3718, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5224, norm(y): 1.0136, norm:1.3963, tok/sec: 100389.12, flops:105.36, batch-reuse:1
@ 5397 train 4.3170 , allloss: 4.3179, dt: 1306.11ms, fracRes: 0.3739, norm(attn): 0.2598, norm(output): 0.5625, norm(x): 0.5197, norm(y): 1.0136, norm:1.7130, tok/sec: 100352.62, flops:105.32, batch-reuse:1
@ 5398 train 4.3154 , allloss: 4.3167, dt: 1289.02ms, fracRes: 0.3728, norm(attn): 0.2637, norm(output): 0.5625, norm(x): 0.5189, norm(y): 1.0136, norm:1.3201, tok/sec: 101683.28, flops:106.72, batch-reuse:1
@ 5399 train 4.3309 , allloss: 4.3322, dt: 1333.70ms, fracRes: 0.3769, norm(attn): 0.2617, norm(output): 0.5742, norm(x): 0.5315, norm(y): 1.0136, norm:1.5966, tok/sec: 98277.22, flops:103.14, batch-reuse:1
@ 5400 train 4.3035 , allloss: 4.3045, dt: 1297.10ms, fracRes: 0.3759, norm(attn): 0.2598, norm(output): 0.5703, norm(x): 0.5242, norm(y): 1.0136, norm:1.3250, tok/sec: 101050.31, flops:106.05, batch-reuse:1
@ 5401 train 4.2583 , allloss: 4.2591, dt: 1293.82ms, fracRes: 0.3765, norm(attn): 0.2520, norm(output): 0.5703, norm(x): 0.5244, norm(y): 1.0139, norm:1.5479, tok/sec: 101306.01, flops:106.32, batch-reuse:1
@ 5402 train 4.3277 , allloss: 4.3285, dt: 1318.11ms, fracRes: 0.3760, norm(attn): 0.2539, norm(output): 0.5703, norm(x): 0.5285, norm(y): 1.0139, norm:1.4719, tok/sec: 99439.57, flops:104.36, batch-reuse:1
@ 5403 train 4.3102 , allloss: 4.3131, dt: 1326.57ms, fracRes: 0.3751, norm(attn): 0.2578, norm(output): 0.5742, norm(x): 0.5290, norm(y): 1.0139, norm:1.3862, tok/sec: 98805.03, flops:103.70, batch-reuse:1
@ 5404 train 4.2138 , allloss: 4.2150, dt: 1320.94ms, fracRes: 0.3745, norm(attn): 0.2617, norm(output): 0.5703, norm(x): 0.5259, norm(y): 1.0137, norm:1.3764, tok/sec: 99226.50, flops:104.14, batch-reuse:1
@ 5405 train 4.2496 , allloss: 4.2506, dt: 1317.52ms, fracRes: 0.3746, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5263, norm(y): 1.0138, norm:1.5558, tok/sec: 99483.80, flops:104.41, batch-reuse:1
@ 5406 train 4.3089 , allloss: 4.3111, dt: 1310.11ms, fracRes: 0.3767, norm(attn): 0.2578, norm(output): 0.5703, norm(x): 0.5266, norm(y): 1.0138, norm:1.3198, tok/sec: 100046.94, flops:105.00, batch-reuse:1
@ 5407 train 4.2893 , allloss: 4.2910, dt: 1308.02ms, fracRes: 0.3745, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5239, norm(y): 1.0137, norm:1.3321, tok/sec: 100206.68, flops:105.17, batch-reuse:1
@ 5408 train 4.2612 , allloss: 4.2637, dt: 1302.03ms, fracRes: 0.3764, norm(attn): 0.2598, norm(output): 0.5703, norm(x): 0.5266, norm(y): 1.0136, norm:1.4404, tok/sec: 100667.43, flops:105.65, batch-reuse:1
@ 5409 train 4.2707 , allloss: 4.2720, dt: 1324.36ms, fracRes: 0.3750, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5213, norm(y): 1.0137, norm:1.4004, tok/sec: 98970.06, flops:103.87, batch-reuse:1
@ 5410 train 4.2349 , allloss: 4.2358, dt: 1293.63ms, fracRes: 0.3743, norm(attn): 0.2676, norm(output): 0.5664, norm(x): 0.5227, norm(y): 1.0137, norm:1.2950, tok/sec: 101320.76, flops:106.34, batch-reuse:1
@ 5411 train 4.3537 , allloss: 4.3545, dt: 1316.55ms, fracRes: 0.3735, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5248, norm(y): 1.0137, norm:1.3591, tok/sec: 99557.39, flops:104.49, batch-reuse:1
@ 5412 train 4.2083 , allloss: 4.2090, dt: 1305.24ms, fracRes: 0.3740, norm(attn): 0.2637, norm(output): 0.5664, norm(x): 0.5244, norm(y): 1.0138, norm:1.2179, tok/sec: 100420.02, flops:105.39, batch-reuse:1
@ 5413 train 4.2017 , allloss: 4.2028, dt: 1290.52ms, fracRes: 0.3748, norm(attn): 0.2676, norm(output): 0.5625, norm(x): 0.5240, norm(y): 1.0136, norm:1.4064, tok/sec: 101565.47, flops:106.59, batch-reuse:1
@ 5414 train 4.1564 , allloss: 4.1574, dt: 1311.42ms, fracRes: 0.3765, norm(attn): 0.2520, norm(output): 0.5703, norm(x): 0.5253, norm(y): 1.0137, norm:1.6733, tok/sec: 99946.48, flops:104.90, batch-reuse:1
@ 5415 train 4.1846 , allloss: 4.1857, dt: 1325.38ms, fracRes: 0.3748, norm(attn): 0.2637, norm(output): 0.5703, norm(x): 0.5288, norm(y): 1.0137, norm:1.5266, tok/sec: 98893.95, flops:103.79, batch-reuse:1
@ 5416 train 4.2647 , allloss: 4.2655, dt: 1318.55ms, fracRes: 0.3751, norm(attn): 0.2637, norm(output): 0.5664, norm(x): 0.5277, norm(y): 1.0137, norm:1.4653, tok/sec: 99406.41, flops:104.33, batch-reuse:1
@ 5417 train 4.2914 , allloss: 4.2921, dt: 1300.42ms, fracRes: 0.3754, norm(attn): 0.2637, norm(output): 0.5664, norm(x): 0.5259, norm(y): 1.0138, norm:1.3616, tok/sec: 100792.33, flops:105.78, batch-reuse:1
@ 5418 train 4.2311 , allloss: 4.2322, dt: 1312.43ms, fracRes: 0.3745, norm(attn): 0.2676, norm(output): 0.5625, norm(x): 0.5221, norm(y): 1.0136, norm:1.5829, tok/sec: 99869.48, flops:104.81, batch-reuse:1
@ 5419 train 4.2592 , allloss: 4.2607, dt: 1287.18ms, fracRes: 0.3710, norm(attn): 0.2773, norm(output): 0.5586, norm(x): 0.5197, norm(y): 1.0135, norm:1.2799, tok/sec: 101828.96, flops:106.87, batch-reuse:1
@ 5420 train 4.2343 , allloss: 4.2361, dt: 1334.74ms, fracRes: 0.3773, norm(attn): 0.2637, norm(output): 0.5625, norm(x): 0.5195, norm(y): 1.0138, norm:1.5870, tok/sec: 98200.42, flops:103.06, batch-reuse:1
@ 5421 train 4.2738 , allloss: 4.2750, dt: 1310.77ms, fracRes: 0.3781, norm(attn): 0.2559, norm(output): 0.5664, norm(x): 0.5235, norm(y): 1.0139, norm:1.4133, tok/sec: 99996.20, flops:104.95, batch-reuse:1
@ 5422 train 4.2739 , allloss: 4.2755, dt: 1313.11ms, fracRes: 0.3783, norm(attn): 0.2520, norm(output): 0.5781, norm(x): 0.5297, norm(y): 1.0140, norm:1.5029, tok/sec: 99818.04, flops:104.76, batch-reuse:1
@ 5423 train 4.4200 , allloss: 4.4231, dt: 1344.04ms, fracRes: 0.3757, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.5260, norm(y): 1.0138, norm:1.5061, tok/sec: 97520.79, flops:102.35, batch-reuse:1
@ 5424 train 4.3045 , allloss: 4.3053, dt: 1327.90ms, fracRes: 0.3778, norm(attn): 0.2539, norm(output): 0.5703, norm(x): 0.5264, norm(y): 1.0137, norm:1.6523, tok/sec: 98706.52, flops:103.59, batch-reuse:1
@ 5425 train 4.2113 , allloss: 4.2127, dt: 1344.04ms, fracRes: 0.3766, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5206, norm(y): 1.0137, norm:1.5698, tok/sec: 97520.97, flops:102.35, batch-reuse:1
@ 5426 train 4.2278 , allloss: 4.2285, dt: 1341.49ms, fracRes: 0.3748, norm(attn): 0.2578, norm(output): 0.5703, norm(x): 0.5228, norm(y): 1.0138, norm:1.4823, tok/sec: 97706.51, flops:102.54, batch-reuse:1
@ 5427 train 4.2090 , allloss: 4.2095, dt: 1281.87ms, fracRes: 0.3728, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5239, norm(y): 1.0136, norm:1.2864, tok/sec: 102250.82, flops:107.31, batch-reuse:1
@ 5428 train 4.1671 , allloss: 4.1685, dt: 1291.57ms, fracRes: 0.3731, norm(attn): 0.2656, norm(output): 0.5742, norm(x): 0.5238, norm(y): 1.0137, norm:1.3600, tok/sec: 101482.85, flops:106.51, batch-reuse:1
@ 5429 train 4.2630 , allloss: 4.2638, dt: 1309.91ms, fracRes: 0.3757, norm(attn): 0.2559, norm(output): 0.5703, norm(x): 0.5271, norm(y): 1.0137, norm:1.7879, tok/sec: 100062.01, flops:105.02, batch-reuse:1
@ 5430 train 4.3602 , allloss: 4.3624, dt: 1340.62ms, fracRes: 0.3732, norm(attn): 0.2637, norm(output): 0.5742, norm(x): 0.5286, norm(y): 1.0137, norm:1.7377, tok/sec: 97769.86, flops:102.61, batch-reuse:1
@ 5431 train 4.2619 , allloss: 4.2634, dt: 1321.76ms, fracRes: 0.3750, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5284, norm(y): 1.0136, norm:1.5656, tok/sec: 99164.49, flops:104.07, batch-reuse:1
@ 5432 train 4.2935 , allloss: 4.2950, dt: 1291.47ms, fracRes: 0.3730, norm(attn): 0.2695, norm(output): 0.5703, norm(x): 0.5232, norm(y): 1.0135, norm:1.5464, tok/sec: 101490.32, flops:106.52, batch-reuse:1
@ 5433 train 4.2569 , allloss: 4.2581, dt: 1314.51ms, fracRes: 0.3728, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5261, norm(y): 1.0136, norm:1.4309, tok/sec: 99711.62, flops:104.65, batch-reuse:1
@ 5434 train 4.3058 , allloss: 4.3072, dt: 1319.00ms, fracRes: 0.3739, norm(attn): 0.2656, norm(output): 0.5742, norm(x): 0.5282, norm(y): 1.0136, norm:1.6587, tok/sec: 99372.31, flops:104.29, batch-reuse:1
@ 5435 train 4.3070 , allloss: 4.3139, dt: 1328.55ms, fracRes: 0.3743, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5250, norm(y): 1.0137, norm:1.4496, tok/sec: 98657.70, flops:103.54, batch-reuse:1
@ 5436 train 4.2312 , allloss: 4.2323, dt: 1315.42ms, fracRes: 0.3739, norm(attn): 0.2715, norm(output): 0.5664, norm(x): 0.5205, norm(y): 1.0136, norm:1.3913, tok/sec: 99642.74, flops:104.58, batch-reuse:1
@ 5437 train 4.1959 , allloss: 4.1971, dt: 1311.00ms, fracRes: 0.3748, norm(attn): 0.2676, norm(output): 0.5664, norm(x): 0.5231, norm(y): 1.0136, norm:1.3434, tok/sec: 99978.54, flops:104.93, batch-reuse:1
@ 5438 train 4.1844 , allloss: 4.1909, dt: 1329.69ms, fracRes: 0.3749, norm(attn): 0.2676, norm(output): 0.5664, norm(x): 0.5241, norm(y): 1.0136, norm:1.3706, tok/sec: 98573.30, flops:103.45, batch-reuse:1
@ 5439 train 4.2318 , allloss: 4.2332, dt: 1298.73ms, fracRes: 0.3748, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5240, norm(y): 1.0136, norm:1.3443, tok/sec: 100923.57, flops:105.92, batch-reuse:1
@ 5440 train 4.2552 , allloss: 4.2569, dt: 1308.14ms, fracRes: 0.3785, norm(attn): 0.2559, norm(output): 0.5703, norm(x): 0.5226, norm(y): 1.0138, norm:1.3512, tok/sec: 100197.59, flops:105.16, batch-reuse:1
@ 5441 train 4.2384 , allloss: 4.2391, dt: 1326.94ms, fracRes: 0.3775, norm(attn): 0.2559, norm(output): 0.5664, norm(x): 0.5218, norm(y): 1.0138, norm:1.3156, tok/sec: 98777.88, flops:103.67, batch-reuse:1
@ 5442 train 4.4090 , allloss: 4.4098, dt: 1338.84ms, fracRes: 0.3774, norm(attn): 0.2539, norm(output): 0.5703, norm(x): 0.5244, norm(y): 1.0137, norm:1.4647, tok/sec: 97899.95, flops:102.75, batch-reuse:1
@ 5443 train 4.2515 , allloss: 4.2526, dt: 1347.75ms, fracRes: 0.3759, norm(attn): 0.2578, norm(output): 0.5742, norm(x): 0.5286, norm(y): 1.0136, norm:1.6243, tok/sec: 97252.31, flops:102.07, batch-reuse:1
@ 5444 train 4.3677 , allloss: 4.3687, dt: 1329.42ms, fracRes: 0.3766, norm(attn): 0.2559, norm(output): 0.5703, norm(x): 0.5275, norm(y): 1.0137, norm:1.4455, tok/sec: 98593.10, flops:103.48, batch-reuse:1
@ 5445 train 4.2273 , allloss: 4.2284, dt: 1335.77ms, fracRes: 0.3747, norm(attn): 0.2598, norm(output): 0.5742, norm(x): 0.5259, norm(y): 1.0137, norm:1.3941, tok/sec: 98125.02, flops:102.98, batch-reuse:1
@ 5446 train 4.3074 , allloss: 4.3084, dt: 1291.28ms, fracRes: 0.3731, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5253, norm(y): 1.0138, norm:1.2260, tok/sec: 101505.72, flops:106.53, batch-reuse:1
@ 5447 train 4.3024 , allloss: 4.3032, dt: 1288.28ms, fracRes: 0.3688, norm(attn): 0.2656, norm(output): 0.5625, norm(x): 0.5204, norm(y): 1.0138, norm:1.7112, tok/sec: 101741.95, flops:106.78, batch-reuse:1
@ 5448 train 4.3252 , allloss: 4.3259, dt: 1313.79ms, fracRes: 0.3734, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5179, norm(y): 1.0138, norm:1.6195, tok/sec: 99766.50, flops:104.71, batch-reuse:1
@ 5449 train 4.2220 , allloss: 4.2243, dt: 1349.61ms, fracRes: 0.3737, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5182, norm(y): 1.0138, norm:1.3597, tok/sec: 97118.33, flops:101.93, batch-reuse:1
@ 5450 train 4.2110 , allloss: 4.2123, dt: 1333.09ms, fracRes: 0.3734, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5216, norm(y): 1.0137, norm:1.3185, tok/sec: 98322.17, flops:103.19, batch-reuse:1
@ 5451 train 4.2095 , allloss: 4.2104, dt: 1307.78ms, fracRes: 0.3766, norm(attn): 0.2598, norm(output): 0.5742, norm(x): 0.5286, norm(y): 1.0137, norm:1.4280, tok/sec: 100224.79, flops:105.19, batch-reuse:1
@ 5452 train 4.2190 , allloss: 4.2201, dt: 1315.10ms, fracRes: 0.3758, norm(attn): 0.2637, norm(output): 0.5703, norm(x): 0.5232, norm(y): 1.0136, norm:1.6020, tok/sec: 99666.61, flops:104.60, batch-reuse:1
@ 5453 train 4.3399 , allloss: 4.3419, dt: 1344.24ms, fracRes: 0.3764, norm(attn): 0.2598, norm(output): 0.5703, norm(x): 0.5258, norm(y): 1.0136, norm:1.3573, tok/sec: 97506.47, flops:102.33, batch-reuse:1
@ 5454 train 4.2749 , allloss: 4.2770, dt: 1340.28ms, fracRes: 0.3769, norm(attn): 0.2578, norm(output): 0.5742, norm(x): 0.5271, norm(y): 1.0137, norm:1.3922, tok/sec: 97794.17, flops:102.64, batch-reuse:1
@ 5455 train 4.4106 , allloss: 4.4120, dt: 1320.10ms, fracRes: 0.3747, norm(attn): 0.2578, norm(output): 0.5664, norm(x): 0.5259, norm(y): 1.0138, norm:1.3458, tok/sec: 99289.44, flops:104.21, batch-reuse:1
@ 5456 train 4.2721 , allloss: 4.2733, dt: 1298.04ms, fracRes: 0.3751, norm(attn): 0.2617, norm(output): 0.5664, norm(x): 0.5242, norm(y): 1.0137, norm:1.3100, tok/sec: 100976.85, flops:105.98, batch-reuse:1
@ 5457 train 4.2190 , allloss: 4.2200, dt: 1304.64ms, fracRes: 0.3750, norm(attn): 0.2637, norm(output): 0.5664, norm(x): 0.5207, norm(y): 1.0136, norm:1.1963, tok/sec: 100466.23, flops:105.44, batch-reuse:1
@ 5458 train 4.2173 , allloss: 4.2187, dt: 1321.34ms, fracRes: 0.3762, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5215, norm(y): 1.0137, norm:1.2090, tok/sec: 99196.43, flops:104.11, batch-reuse:1
@ 5459 train 4.2485 , allloss: 4.2496, dt: 1314.71ms, fracRes: 0.3775, norm(attn): 0.2598, norm(output): 0.5703, norm(x): 0.5248, norm(y): 1.0138, norm:1.3464, tok/sec: 99696.81, flops:104.63, batch-reuse:1
@ 5460 train 4.2340 , allloss: 4.2348, dt: 1309.69ms, fracRes: 0.3773, norm(attn): 0.2578, norm(output): 0.5703, norm(x): 0.5228, norm(y): 1.0139, norm:1.3216, tok/sec: 100078.90, flops:105.03, batch-reuse:1
@ 5461 train 4.4082 , allloss: 4.4094, dt: 1319.78ms, fracRes: 0.3776, norm(attn): 0.2559, norm(output): 0.5703, norm(x): 0.5254, norm(y): 1.0139, norm:1.3639, tok/sec: 99313.19, flops:104.23, batch-reuse:1
@ 5462 train 4.2712 , allloss: 4.2720, dt: 1300.00ms, fracRes: 0.3755, norm(attn): 0.2598, norm(output): 0.5703, norm(x): 0.5217, norm(y): 1.0138, norm:1.3311, tok/sec: 100824.27, flops:105.82, batch-reuse:1
@ 5463 train 4.3065 , allloss: 4.3073, dt: 1314.63ms, fracRes: 0.3745, norm(attn): 0.2637, norm(output): 0.5703, norm(x): 0.5200, norm(y): 1.0137, norm:1.4213, tok/sec: 99702.59, flops:104.64, batch-reuse:1
@ 5464 train 4.2502 , allloss: 4.2509, dt: 1343.78ms, fracRes: 0.3739, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5196, norm(y): 1.0136, norm:1.3987, tok/sec: 97540.08, flops:102.37, batch-reuse:1
@ 5465 train 4.2321 , allloss: 4.2334, dt: 1347.38ms, fracRes: 0.3742, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5200, norm(y): 1.0137, norm:1.2813, tok/sec: 97279.26, flops:102.10, batch-reuse:1
@ 5466 train 4.2339 , allloss: 4.2374, dt: 1297.74ms, fracRes: 0.3730, norm(attn): 0.2676, norm(output): 0.5664, norm(x): 0.5233, norm(y): 1.0137, norm:1.3615, tok/sec: 101000.15, flops:106.00, batch-reuse:1
@ 5467 train 4.2377 , allloss: 4.2409, dt: 1320.02ms, fracRes: 0.3725, norm(attn): 0.2676, norm(output): 0.5664, norm(x): 0.5210, norm(y): 1.0136, norm:1.1476, tok/sec: 99295.79, flops:104.21, batch-reuse:1
@ 5468 train 4.2234 , allloss: 4.2250, dt: 1332.83ms, fracRes: 0.3731, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5238, norm(y): 1.0136, norm:1.1585, tok/sec: 98341.30, flops:103.21, batch-reuse:1
@ 5469 train 4.2345 , allloss: 4.2358, dt: 1326.90ms, fracRes: 0.3738, norm(attn): 0.2637, norm(output): 0.5664, norm(x): 0.5272, norm(y): 1.0136, norm:1.2329, tok/sec: 98780.44, flops:103.67, batch-reuse:1
@ 5470 train 4.2703 , allloss: 4.2717, dt: 1299.83ms, fracRes: 0.3755, norm(attn): 0.2617, norm(output): 0.5703, norm(x): 0.5288, norm(y): 1.0137, norm:1.3750, tok/sec: 100837.47, flops:105.83, batch-reuse:1
@ 5471 train 4.2119 , allloss: 4.2131, dt: 1304.93ms, fracRes: 0.3749, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5237, norm(y): 1.0136, norm:1.2191, tok/sec: 100443.50, flops:105.42, batch-reuse:1
@ 5472 train 4.3141 , allloss: 4.3152, dt: 1299.76ms, fracRes: 0.3739, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5248, norm(y): 1.0136, norm:1.3311, tok/sec: 100843.58, flops:105.84, batch-reuse:1
@ 5473 train 4.2644 , allloss: 4.2665, dt: 1285.31ms, fracRes: 0.3725, norm(attn): 0.2734, norm(output): 0.5703, norm(x): 0.5249, norm(y): 1.0135, norm:1.2866, tok/sec: 101976.84, flops:107.03, batch-reuse:1
@ 5474 train 4.2707 , allloss: 4.2720, dt: 1308.08ms, fracRes: 0.3716, norm(attn): 0.2734, norm(output): 0.5664, norm(x): 0.5213, norm(y): 1.0135, norm:1.3213, tok/sec: 100202.03, flops:105.16, batch-reuse:1
@ 5475 train 4.1768 , allloss: 4.1782, dt: 1317.02ms, fracRes: 0.3736, norm(attn): 0.2715, norm(output): 0.5664, norm(x): 0.5235, norm(y): 1.0136, norm:1.3441, tok/sec: 99521.40, flops:104.45, batch-reuse:1
@ 5476 train 4.2612 , allloss: 4.2622, dt: 1309.66ms, fracRes: 0.3734, norm(attn): 0.2754, norm(output): 0.5586, norm(x): 0.5198, norm(y): 1.0136, norm:1.3011, tok/sec: 100081.27, flops:105.04, batch-reuse:1
@ 5477 train 4.2137 , allloss: 4.2152, dt: 1317.54ms, fracRes: 0.3733, norm(attn): 0.2773, norm(output): 0.5586, norm(x): 0.5173, norm(y): 1.0135, norm:1.2068, tok/sec: 99482.73, flops:104.41, batch-reuse:1
@ 5478 train 4.1831 , allloss: 4.1842, dt: 1278.71ms, fracRes: 0.3738, norm(attn): 0.2734, norm(output): 0.5625, norm(x): 0.5232, norm(y): 1.0136, norm:1.3287, tok/sec: 102503.10, flops:107.58, batch-reuse:1
@ 5479 train 4.2913 , allloss: 4.2986, dt: 1292.59ms, fracRes: 0.3795, norm(attn): 0.2637, norm(output): 0.5820, norm(x): 0.5360, norm(y): 1.0139, norm:1.3132, tok/sec: 101402.75, flops:106.42, batch-reuse:1
@ 5480 train 4.1797 , allloss: 4.1813, dt: 1308.09ms, fracRes: 0.3749, norm(attn): 0.2676, norm(output): 0.5703, norm(x): 0.5257, norm(y): 1.0137, norm:1.4610, tok/sec: 100200.73, flops:105.16, batch-reuse:1
@ 5481 train 4.2595 , allloss: 4.2606, dt: 1317.06ms, fracRes: 0.3745, norm(attn): 0.2637, norm(output): 0.5703, norm(x): 0.5281, norm(y): 1.0137, norm:1.4521, tok/sec: 99518.64, flops:104.45, batch-reuse:1
@ 5482 train 4.1793 , allloss: 4.1807, dt: 1296.55ms, fracRes: 0.3735, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5249, norm(y): 1.0136, norm:1.2825, tok/sec: 101092.80, flops:106.10, batch-reuse:1
@ 5483 train 4.1606 , allloss: 4.1676, dt: 1313.29ms, fracRes: 0.3750, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5220, norm(y): 1.0137, norm:1.3154, tok/sec: 99804.06, flops:104.75, batch-reuse:1
@ 5484 train 4.2032 , allloss: 4.2040, dt: 1314.98ms, fracRes: 0.3762, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5228, norm(y): 1.0136, norm:1.2860, tok/sec: 99675.84, flops:104.61, batch-reuse:1
@ 5485 train 4.2099 , allloss: 4.2109, dt: 1339.61ms, fracRes: 0.3773, norm(attn): 0.2637, norm(output): 0.5703, norm(x): 0.5260, norm(y): 1.0136, norm:1.3077, tok/sec: 97843.15, flops:102.69, batch-reuse:1
@ 5486 train 4.2434 , allloss: 4.2455, dt: 1304.36ms, fracRes: 0.3777, norm(attn): 0.2637, norm(output): 0.5781, norm(x): 0.5280, norm(y): 1.0136, norm:1.3056, tok/sec: 100487.95, flops:105.46, batch-reuse:1
@ 5487 train 4.1678 , allloss: 4.1690, dt: 1284.87ms, fracRes: 0.3776, norm(attn): 0.2617, norm(output): 0.5781, norm(x): 0.5258, norm(y): 1.0137, norm:1.3297, tok/sec: 102011.58, flops:107.06, batch-reuse:1
@ 5488 train 4.2123 , allloss: 4.2137, dt: 1287.06ms, fracRes: 0.3765, norm(attn): 0.2656, norm(output): 0.5742, norm(x): 0.5268, norm(y): 1.0136, norm:1.2611, tok/sec: 101838.69, flops:106.88, batch-reuse:1
@ 5489 train 4.1612 , allloss: 4.1627, dt: 1290.62ms, fracRes: 0.3758, norm(attn): 0.2617, norm(output): 0.5703, norm(x): 0.5255, norm(y): 1.0137, norm:1.1295, tok/sec: 101557.52, flops:106.59, batch-reuse:1
@ 5490 train 4.1712 , allloss: 4.1726, dt: 1310.25ms, fracRes: 0.3732, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5295, norm(y): 1.0137, norm:1.4271, tok/sec: 100035.83, flops:104.99, batch-reuse:1
@ 5491 train 4.1923 , allloss: 4.1935, dt: 1310.43ms, fracRes: 0.3747, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5253, norm(y): 1.0138, norm:1.1510, tok/sec: 100022.16, flops:104.98, batch-reuse:1
@ 5492 train 4.2988 , allloss: 4.3003, dt: 1313.38ms, fracRes: 0.3766, norm(attn): 0.2637, norm(output): 0.5703, norm(x): 0.5225, norm(y): 1.0138, norm:1.4017, tok/sec: 99797.41, flops:104.74, batch-reuse:1
@ 5493 train 4.1180 , allloss: 4.1196, dt: 1311.40ms, fracRes: 0.3771, norm(attn): 0.2676, norm(output): 0.5703, norm(x): 0.5208, norm(y): 1.0136, norm:1.2310, tok/sec: 99947.79, flops:104.90, batch-reuse:1
@ 5494 train 4.2307 , allloss: 4.2324, dt: 1300.50ms, fracRes: 0.3762, norm(attn): 0.2637, norm(output): 0.5664, norm(x): 0.5217, norm(y): 1.0136, norm:1.3194, tok/sec: 100786.08, flops:105.78, batch-reuse:1
@ 5495 train 4.1975 , allloss: 4.1987, dt: 1292.89ms, fracRes: 0.3750, norm(attn): 0.2676, norm(output): 0.5703, norm(x): 0.5249, norm(y): 1.0135, norm:1.2694, tok/sec: 101379.09, flops:106.40, batch-reuse:1
@ 5496 train 4.1598 , allloss: 4.1609, dt: 1304.35ms, fracRes: 0.3744, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5235, norm(y): 1.0136, norm:1.2060, tok/sec: 100488.10, flops:105.46, batch-reuse:1
@ 5497 train 4.1560 , allloss: 4.1570, dt: 1314.57ms, fracRes: 0.3743, norm(attn): 0.2637, norm(output): 0.5742, norm(x): 0.5243, norm(y): 1.0137, norm:1.3904, tok/sec: 99706.88, flops:104.64, batch-reuse:1
@ 5498 train 4.1224 , allloss: 4.1240, dt: 1332.51ms, fracRes: 0.3751, norm(attn): 0.2598, norm(output): 0.5703, norm(x): 0.5257, norm(y): 1.0137, norm:1.2131, tok/sec: 98364.51, flops:103.24, batch-reuse:1
@ 5499 train 4.2264 , allloss: 4.2275, dt: 1290.58ms, fracRes: 0.3770, norm(attn): 0.2578, norm(output): 0.5820, norm(x): 0.5324, norm(y): 1.0137, norm:1.3163, tok/sec: 101560.84, flops:106.59, batch-reuse:1
@ 5500 train 4.2013 , allloss: 4.2037, dt: 1301.43ms, fracRes: 0.3772, norm(attn): 0.2559, norm(output): 0.5742, norm(x): 0.5246, norm(y): 1.0137, norm:1.3706, tok/sec: 100713.81, flops:105.70, batch-reuse:1
@ 5501 train 4.2252 , allloss: 4.2285, dt: 1301.02ms, fracRes: 0.3802, norm(attn): 0.2617, norm(output): 0.5781, norm(x): 0.5378, norm(y): 1.0137, norm:1.6835, tok/sec: 100745.26, flops:105.73, batch-reuse:1
@ 5502 train 4.1730 , allloss: 4.1741, dt: 1294.34ms, fracRes: 0.3766, norm(attn): 0.2559, norm(output): 0.5742, norm(x): 0.5244, norm(y): 1.0137, norm:1.3059, tok/sec: 101265.76, flops:106.28, batch-reuse:1
@ 5503 train 4.2707 , allloss: 4.2723, dt: 1321.84ms, fracRes: 0.3788, norm(attn): 0.2617, norm(output): 0.5781, norm(x): 0.5331, norm(y): 1.0136, norm:1.6029, tok/sec: 99158.58, flops:104.07, batch-reuse:1
@ 5504 train 4.1205 , allloss: 4.1229, dt: 1339.83ms, fracRes: 0.3785, norm(attn): 0.2598, norm(output): 0.5781, norm(x): 0.5300, norm(y): 1.0137, norm:1.6038, tok/sec: 97827.69, flops:102.67, batch-reuse:1
@ 5505 train 4.1772 , allloss: 4.1782, dt: 1305.26ms, fracRes: 0.3765, norm(attn): 0.2617, norm(output): 0.5742, norm(x): 0.5245, norm(y): 1.0137, norm:1.5081, tok/sec: 100418.18, flops:105.39, batch-reuse:1
@ 5506 train 4.1523 , allloss: 4.1532, dt: 1293.05ms, fracRes: 0.3740, norm(attn): 0.2656, norm(output): 0.5742, norm(x): 0.5270, norm(y): 1.0137, norm:1.4356, tok/sec: 101366.35, flops:106.39, batch-reuse:1
@ 5507 train 4.1775 , allloss: 4.1785, dt: 1322.73ms, fracRes: 0.3738, norm(attn): 0.2637, norm(output): 0.5781, norm(x): 0.5280, norm(y): 1.0137, norm:1.3103, tok/sec: 99092.29, flops:104.00, batch-reuse:1
@ 5508 train 4.2498 , allloss: 4.2510, dt: 1306.55ms, fracRes: 0.3729, norm(attn): 0.2676, norm(output): 0.5781, norm(x): 0.5288, norm(y): 1.0136, norm:1.5295, tok/sec: 100319.31, flops:105.29, batch-reuse:1
@ 5509 train 4.2102 , allloss: 4.2119, dt: 1295.73ms, fracRes: 0.3732, norm(attn): 0.2676, norm(output): 0.5781, norm(x): 0.5255, norm(y): 1.0136, norm:1.2707, tok/sec: 101156.81, flops:106.17, batch-reuse:1
@ 5510 train 4.1486 , allloss: 4.1494, dt: 1296.31ms, fracRes: 0.3701, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5281, norm(y): 1.0137, norm:1.6640, tok/sec: 101111.38, flops:106.12, batch-reuse:1
@ 5511 train 4.2147 , allloss: 4.2152, dt: 1325.33ms, fracRes: 0.3747, norm(attn): 0.2598, norm(output): 0.5742, norm(x): 0.5298, norm(y): 1.0138, norm:1.9525, tok/sec: 98897.44, flops:103.79, batch-reuse:1
@ 5512 train 4.2466 , allloss: 4.2478, dt: 1329.93ms, fracRes: 0.3769, norm(attn): 0.2617, norm(output): 0.5703, norm(x): 0.5224, norm(y): 1.0137, norm:1.3064, tok/sec: 98555.24, flops:103.44, batch-reuse:1
@ 5513 train 4.1225 , allloss: 4.1236, dt: 1307.10ms, fracRes: 0.3782, norm(attn): 0.2676, norm(output): 0.5703, norm(x): 0.5286, norm(y): 1.0136, norm:1.3711, tok/sec: 100276.98, flops:105.24, batch-reuse:1
@ 5514 train 4.1746 , allloss: 4.1762, dt: 1309.33ms, fracRes: 0.3769, norm(attn): 0.2676, norm(output): 0.5703, norm(x): 0.5241, norm(y): 1.0135, norm:1.3540, tok/sec: 100106.24, flops:105.06, batch-reuse:1
@ 5515 train 4.2172 , allloss: 4.2182, dt: 1335.25ms, fracRes: 0.3776, norm(attn): 0.2656, norm(output): 0.5703, norm(x): 0.5208, norm(y): 1.0135, norm:1.4674, tok/sec: 98163.20, flops:103.02, batch-reuse:1
@ 5516 train 4.2186 , allloss: 4.2195, dt: 1329.99ms, fracRes: 0.3763, norm(attn): 0.2676, norm(output): 0.5664, norm(x): 0.5213, norm(y): 1.0136, norm:1.3989, tok/sec: 98550.91, flops:103.43, batch-reuse:1
@ 5517 train 4.2302 , allloss: 4.2311, dt: 1335.34ms, fracRes: 0.3783, norm(attn): 0.2637, norm(output): 0.5703, norm(x): 0.5257, norm(y): 1.0135, norm:1.3419, tok/sec: 98156.06, flops:103.02, batch-reuse:1
@ 5518 train 4.2268 , allloss: 4.2278, dt: 1318.79ms, fracRes: 0.3768, norm(attn): 0.2656, norm(output): 0.5742, norm(x): 0.5275, norm(y): 1.0134, norm:1.5147, tok/sec: 99388.29, flops:104.31, batch-reuse:1
@ 5519 train 4.0982 , allloss: 4.1003, dt: 1337.97ms, fracRes: 0.3762, norm(attn): 0.2695, norm(output): 0.5703, norm(x): 0.5220, norm(y): 1.0135, norm:1.4294, tok/sec: 97963.56, flops:102.81, batch-reuse:1
@ 5520 train 4.1045 , allloss: 4.1062, dt: 1335.40ms, fracRes: 0.3765, norm(attn): 0.2656, norm(output): 0.5742, norm(x): 0.5232, norm(y): 1.0137, norm:1.3509, tok/sec: 98151.52, flops:103.01, batch-reuse:1
@ 5521 train 4.2652 , allloss: 4.2670, dt: 1334.84ms, fracRes: 0.3772, norm(attn): 0.2637, norm(output): 0.5742, norm(x): 0.5282, norm(y): 1.0137, norm:1.2871, tok/sec: 98193.41, flops:103.06, batch-reuse:1
@ 5522 train 4.2278 , allloss: 4.2289, dt: 1310.34ms, fracRes: 0.3744, norm(attn): 0.2598, norm(output): 0.5703, norm(x): 0.5243, norm(y): 1.0138, norm:1.2865, tok/sec: 100028.66, flops:104.98, batch-reuse:1
@ 5523 train 4.1904 , allloss: 4.1912, dt: 1316.57ms, fracRes: 0.3759, norm(attn): 0.2637, norm(output): 0.5703, norm(x): 0.5237, norm(y): 1.0136, norm:1.3993, tok/sec: 99555.62, flops:104.49, batch-reuse:1
@ 5524 train 4.1861 , allloss: 4.1881, dt: 1318.35ms, fracRes: 0.3769, norm(attn): 0.2617, norm(output): 0.5703, norm(x): 0.5240, norm(y): 1.0137, norm:1.2738, tok/sec: 99421.56, flops:104.34, batch-reuse:1
@ 5525 train 4.1467 , allloss: 4.1487, dt: 1305.66ms, fracRes: 0.3767, norm(attn): 0.2695, norm(output): 0.5742, norm(x): 0.5244, norm(y): 1.0135, norm:1.4013, tok/sec: 100387.18, flops:105.36, batch-reuse:1
@ 5526 train 4.2365 , allloss: 4.2382, dt: 1338.09ms, fracRes: 0.3768, norm(attn): 0.2617, norm(output): 0.5742, norm(x): 0.5257, norm(y): 1.0136, norm:1.1672, tok/sec: 97954.48, flops:102.81, batch-reuse:1
@ 5527 train 4.1664 , allloss: 4.1699, dt: 1321.95ms, fracRes: 0.3756, norm(attn): 0.2656, norm(output): 0.5664, norm(x): 0.5226, norm(y): 1.0135, norm:1.2467, tok/sec: 99150.63, flops:104.06, batch-reuse:1
@ 5528 train 4.2318 , allloss: 4.2328, dt: 1332.54ms, fracRes: 0.3760, norm(attn): 0.2676, norm(output): 0.5703, norm(x): 0.5249, norm(y): 1.0136, norm:1.2331, tok/sec: 98362.40, flops:103.23, batch-reuse:1
@ 5529 train 4.1182 , allloss: 4.1198, dt: 1327.07ms, fracRes: 0.3748, norm(attn): 0.2734, norm(output): 0.5703, norm(x): 0.5250, norm(y): 1.0136, norm:1.3635, tok/sec: 98767.96, flops:103.66, batch-reuse:1
@ 5530 train 4.1720 , allloss: 4.1736, dt: 1318.91ms, fracRes: 0.3741, norm(attn): 0.2734, norm(output): 0.5703, norm(x): 0.5279, norm(y): 1.0136, norm:1.2042, tok/sec: 99379.04, flops:104.30, batch-reuse:1
@ 5531 train 4.1127 , allloss: 4.1192, dt: 1317.14ms, fracRes: 0.3731, norm(attn): 0.2715, norm(output): 0.5703, norm(x): 0.5291, norm(y): 1.0137, norm:1.3050, tok/sec: 99512.79, flops:104.44, batch-reuse:1
@ 5532 train 4.1191 , allloss: 4.1203, dt: 1295.03ms, fracRes: 0.3741, norm(attn): 0.2676, norm(output): 0.5742, norm(x): 0.5271, norm(y): 1.0136, norm:1.3620, tok/sec: 101211.64, flops:106.22, batch-reuse:1
@ 5533 train 4.1387 , allloss: 4.1400, dt: 1317.17ms, fracRes: 0.3742, norm(attn): 0.2695, norm(output): 0.5703, norm(x): 0.5268, norm(y): 1.0137, norm:1.2302, tok/sec: 99510.50, flops:104.44, batch-reuse:1
@ 5534 train 4.1354 , allloss: 4.1429, dt: 1307.33ms, fracRes: 0.3759, norm(attn): 0.2715, norm(output): 0.5781, norm(x): 0.5301, norm(y): 1.0137, norm:1.2739, tok/sec: 100259.63, flops:105.22, batch-reuse:1
@ 5535 train 4.0390 , allloss: 4.0402, dt: 1320.82ms, fracRes: 0.3762, norm(attn): 0.2734, norm(output): 0.5703, norm(x): 0.5259, norm(y): 1.0135, norm:1.2288, tok/sec: 99235.16, flops:104.15, batch-reuse:1
@ 5536 train 4.1822 , allloss: 4.1830, dt: 1294.69ms, fracRes: 0.3764, norm(attn): 0.2695, norm(output): 0.5664, norm(x): 0.5233, norm(y): 1.0135, norm:1.3462, tok/sec: 101238.03, flops:106.25, batch-reuse:1
@ 5537 train 4.2781 , allloss: 4.2792, dt: 1312.58ms, fracRes: 0.3743, norm(attn): 0.2695, norm(output): 0.5664, norm(x): 0.5254, norm(y): 1.0136, norm:1.2793, tok/sec: 99858.03, flops:104.80, batch-reuse:1
@ 5538 train 4.1762 , allloss: 4.1797, dt: 1312.90ms, fracRes: 0.3737, norm(attn): 0.2715, norm(output): 0.5703, norm(x): 0.5244, norm(y): 1.0136, norm:1.3255, tok/sec: 99833.73, flops:104.78, batch-reuse:1
@ 5539 train 4.0717 , allloss: 4.0727, dt: 1303.93ms, fracRes: 0.3754, norm(attn): 0.2676, norm(output): 0.5703, norm(x): 0.5235, norm(y): 1.0135, norm:1.3350, tok/sec: 100520.62, flops:105.50, batch-reuse:1
@ 5540 train 4.1470 , allloss: 4.1491, dt: 1287.80ms, fracRes: 0.3739, norm(attn): 0.2676, norm(output): 0.5703, norm(x): 0.5225, norm(y): 1.0136, norm:1.3850, tok/sec: 101779.53, flops:106.82, batch-reuse:1
@ 5541 train 4.0874 , allloss: 4.0888, dt: 1310.61ms, fracRes: 0.3749, norm(attn): 0.2656, norm(output): 0.5781, norm(x): 0.5265, norm(y): 1.0135, norm:1.2571, tok/sec: 100008.12, flops:104.96, batch-reuse:1
@ 5542 train 4.1150 , allloss: 4.1161, dt: 1319.65ms, fracRes: 0.3749, norm(attn): 0.2656, norm(output): 0.5781, norm(x): 0.5244, norm(y): 1.0135, norm:1.4355, tok/sec: 99323.01, flops:104.24, batch-reuse:1
@ 5543 train 4.0556 , allloss: 4.0567, dt: 1318.87ms, fracRes: 0.3774, norm(attn): 0.2598, norm(output): 0.5781, norm(x): 0.5280, norm(y): 1.0137, norm:1.3295, tok/sec: 99381.72, flops:104.30, batch-reuse:1
@ 5544 train 4.0598 , allloss: 4.0620, dt: 1302.92ms, fracRes: 0.3761, norm(attn): 0.2637, norm(output): 0.5742, norm(x): 0.5271, norm(y): 1.0137, norm:1.2732, tok/sec: 100598.72, flops:105.58, batch-reuse:1
@ 5545 train 4.2791 , allloss: 4.2805, dt: 1301.84ms, fracRes: 0.3790, norm(attn): 0.2559, norm(output): 0.5781, norm(x): 0.5305, norm(y): 1.0137, norm:1.6015, tok/sec: 100682.12, flops:105.67, batch-reuse:1
@ 5546 train 4.1101 , allloss: 4.1108, dt: 1310.58ms, fracRes: 0.3759, norm(attn): 0.2695, norm(output): 0.5742, norm(x): 0.5259, norm(y): 1.0135, norm:1.5195, tok/sec: 100010.55, flops:104.96, batch-reuse:1
@ 5547 train 4.2193 , allloss: 4.2204, dt: 1315.70ms, fracRes: 0.3761, norm(attn): 0.2637, norm(output): 0.5742, norm(x): 0.5260, norm(y): 1.0136, norm:1.4356, tok/sec: 99621.87, flops:104.56, batch-reuse:1
@ 5548 train 4.0760 , allloss: 4.0777, dt: 1322.63ms, fracRes: 0.3745, norm(attn): 0.2637, norm(output): 0.5703, norm(x): 0.5243, norm(y): 1.0137, norm:1.3912, tok/sec: 99099.74, flops:104.01, batch-reuse:1
@ 5549 train 4.1351 , allloss: 4.1363, dt: 1295.29ms, fracRes: 0.3763, norm(attn): 0.2617, norm(output): 0.5742, norm(x): 0.5262, norm(y): 1.0136, norm:1.3410, tok/sec: 101191.07, flops:106.20, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0125, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.4629, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4316, 0.2197, 0.1709, 0.1777, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3359, 0.0840, 0.0884, 0.1777, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4102, 0.0811, 0.2441, 0.0269, 0.1475, 0.0903, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.0649, 0.0728, 0.2988, 0.2598, 0.0913, 0.0859, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0586, 0.0737, 0.0476, 0.6094, 0.0781, 0.0400, 0.0513, 0.0422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.0439, 0.0554, 0.0264, 0.0427, 0.0640, 0.1650, 0.3105, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.0869, 0.1211, 0.1279, 0.1367, 0.0422, 0.0540, 0.1797, 0.0674, 0.0457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0183, 0.0391, 0.0168, 0.0981, 0.1846, 0.1245, 0.0337, 0.1953, 0.1699, 0.0452, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1973, 0.0845, 0.1055, 0.0305, 0.0361, 0.0284, 0.1670, 0.1426, 0.0659, 0.0305, 0.0884, 0.0227, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0898, 0.0742, 0.1045, 0.0830, 0.0176, 0.0522, 0.0864, 0.1079, 0.0403, 0.0850, 0.0635, 0.0625, 0.0000, 0.0000],
        [0.0942, 0.0293, 0.0493, 0.0339, 0.0330, 0.0361, 0.0791, 0.1455, 0.1216, 0.0354, 0.0270, 0.0347, 0.0820, 0.1992, 0.0000],
        [0.0918, 0.0225, 0.1011, 0.1147, 0.0364, 0.0212, 0.0649, 0.1328, 0.0312, 0.0349, 0.0693, 0.0625, 0.0918, 0.0488, 0.0757]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0125,  0.0307, -0.0352,  ..., -0.0141,  0.0102,  0.0235],
        [ 0.0444,  0.0132,  0.0019,  ..., -0.0119, -0.0071, -0.0322],
        [-0.0036,  0.0155,  0.0036,  ..., -0.0050,  0.0039, -0.0131],
        ...,
        [-0.0378,  0.0221, -0.0091,  ...,  0.0118, -0.0196, -0.0025],
        [ 0.0469, -0.0140, -0.0218,  ...,  0.0288,  0.0075, -0.0078],
        [ 0.0035,  0.0023,  0.0339,  ..., -0.0139, -0.0273,  0.0308]], device='cuda:0', requires_grad=True)
K: tensor([-0.7734,  1.0078,  0.3984, -0.8945, -0.2354,  0.8164,  0.9141,  0.5625, -0.0500, -0.4277,  1.4375,  0.3398,  0.3145,  0.3184, -0.1699, -0.5352, -0.3926, -0.5664, -0.2070,  0.4922,  0.3613, -0.6445, -0.0708,  0.3242,  0.5078,  0.4785,  0.2734, -0.1240, -0.6562,  0.5273, -0.7734, -0.6992,
        -0.4355, -0.7383, -0.6289,  0.7461,  0.5039, -0.4746,  0.2578,  0.5586,  0.4414,  0.2949,  0.1992,  0.2812,  0.2451,  0.2393, -0.0659, -0.4180,  1.4062,  0.5938,  0.4902, -0.1982, -0.4180,  0.9570, -0.3184,  0.8477,  0.0435,  0.3105, -1.0312,  0.6719, -0.0228, -0.2637,  0.6914, -1.2656],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0221, -0.0007,  0.0059,  ...,  0.0362,  0.0096, -0.0199],
        [ 0.0108,  0.0338, -0.0233,  ...,  0.0042,  0.0169, -0.0188],
        [ 0.0034, -0.0271,  0.0011,  ...,  0.0503,  0.0081, -0.0247],
        ...,
        [ 0.0221,  0.0105,  0.0028,  ..., -0.0149, -0.0126,  0.0053],
        [-0.0234, -0.0170,  0.0167,  ...,  0.0303, -0.0108,  0.0209],
        [ 0.0278,  0.0064, -0.0104,  ..., -0.0430, -0.0300, -0.0065]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5312,  0.6641, -0.3945, -0.0415, -0.2217, -0.5547,  0.7344,  0.8867, -0.1318,  1.2734, -1.3594,  0.2021, -0.8633, -0.4297, -0.4609,  0.0569, -1.1641, -0.5234, -0.1416,  0.4609,  0.4492, -0.0674, -0.8164,  0.0089, -0.4609, -0.6680, -0.5156,  0.2930, -0.5352, -1.3516, -0.3262, -0.6250,
        -0.5508, -0.0640,  0.0142,  0.2598, -0.3633, -0.2100, -0.7422, -0.9922, -0.2715,  0.3340, -0.1030, -0.9102, -0.3594, -0.3125,  0.3906,  0.4160, -0.4863,  0.8750, -0.1846, -0.2139,  0.8516,  0.5547,  0.0400,  0.1191,  0.5820, -0.6055, -0.5234,  0.7188,  0.1396,  0.8906, -0.3711,  0.5820],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      4.3750,      0.4512,      1.0938,      0.8164,      2.0781,      1.2109,     -0.2168,      0.1611,      1.0703,      1.7422,      2.6094,      1.3984,     -0.0938,      1.2266],
        [     0.0000,      0.4824,     -0.1328,      3.0312,      0.5586,     -0.1338,     -0.0718,     -0.4375,     -0.2734,      0.3984,      1.7031,      2.4219,      2.1562,     -0.4199,      1.5859],
        [     0.0000,     -0.6758,     -0.9297,     -0.8906,     -1.5859,     -1.8750,     -0.4766,     -0.2559,     -1.4141,     -0.9609,     -0.3477,     -0.9453,     -0.3066,     -1.0391,      0.0708],
        [     0.0000,     -1.3828,     -1.3359,     -0.6406,     -0.0693,      0.0286,      0.4004,     -0.3594,      0.8555,      0.0762,     -0.1016,     -0.4980,     -0.1289,      0.8633,     -0.5234],
        [     0.0000,     -1.6250,     -0.5195,     -2.7188,     -1.0234,     -1.5156,     -0.1729,      0.1250,     -0.0713,     -1.0391,     -1.6797,     -2.8906,     -1.9844,     -0.0518,     -1.5938],
        [     0.0000,     -0.6602,     -0.5508,      0.8633,      0.7188,     -0.3242,     -0.3828,     -0.3809,      1.0234,      0.7617,      0.7383,      1.1406,      0.7383,      0.6094,      0.6055],
        [     0.0000,      0.2285,     -0.2090,      2.3438,      0.2852,     -0.3828,     -0.1328,     -0.3262,     -0.2148,      0.0481,      1.3359,      1.1328,      1.2969,     -0.6172,      1.1250],
        [     0.0000,     -1.3281,     -1.0938,     -1.8359,     -1.3594,     -0.9531,     -0.0079,      0.6250,     -0.2676,     -1.1094,     -1.2188,     -1.8281,     -0.9766,      0.5234,     -0.3867],
        [     0.0000,     -0.4746,     -0.1426,     -0.0898,     -0.0223,     -1.1953,     -0.9492,      0.2520,     -0.7305,     -1.1172,      0.2676,     -0.9414,     -0.8984,     -1.0234,     -0.4277],
        [     0.0000,     -1.4062,     -0.6523,     -1.4922,      0.2695,      0.8984,      0.5039,     -0.8008,      0.9570,      0.8203,     -0.5078,     -0.8789,     -1.0547,      0.7422,     -0.9297],
        [     0.0000,     -0.8477,     -0.6250,     -1.8672,     -1.6953,     -1.9375,     -0.1641,     -0.3223,     -1.0938,     -1.8672,     -0.8008,     -2.1562,     -1.5000,     -0.8555,     -0.9844],
        [     0.0000,     -0.3945,     -0.5859,     -0.2412,     -0.4727,     -2.0312,     -0.9375,     -0.4297,     -0.2119,     -1.1953,     -0.4453,     -0.7383,     -0.7578,     -0.0116,     -0.5234],
        [     0.0000,     -1.1719,     -0.6484,     -1.0234,     -1.0547,     -0.9570,     -0.1787,      0.4336,      0.2559,     -0.9766,     -1.2500,     -1.0000,     -0.1416,      0.7461,     -0.4004],
        [     0.0000,     -1.4062,      0.0972,      0.2266,     -0.9219,     -1.4609,     -0.3418,      0.3750,     -1.0781,     -0.9648,     -0.2793,     -0.3828,      0.0006,     -0.6289,     -0.1895]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4520],
        [0.4557],
        [0.3829],
        [0.3436],
        [0.4134],
        [0.1592],
        [0.2612],
        [0.1507],
        [0.1789],
        [0.1039],
        [0.1809],
        [0.2323],
        [0.0929],
        [0.0976]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.1836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6016,     0.2754,     0.1230,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0908,     0.0010,     0.9062,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3574,     0.0425,     0.5352,     0.0659,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2715,     0.1816,     0.0723,     0.0540,     0.0008,     0.4199,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1309,     0.1807,     0.0952,     0.0112,     0.0011,     0.5117,     0.0688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0884,     0.2695,     0.4941,     0.0466,     0.0020,     0.0437,     0.0403,     0.0135,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3535,     0.0918,     0.1494,     0.0113,     0.0003,     0.2559,     0.0767,     0.0574,     0.0046,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5039,     0.1001,     0.1357,     0.0317,     0.0002,     0.0269,     0.0240,     0.0728,     0.0079,     0.0952,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6094,     0.0095,     0.2080,     0.0674,     0.0011,     0.0259,     0.0137,     0.0084,     0.0347,     0.0209,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2578,     0.2207,     0.0598,     0.0140,     0.0015,     0.1387,     0.1367,     0.0386,     0.0095,     0.0166,     0.0070,     0.0981,     0.0000,     0.0000,     0.0000],
        [    0.1504,     0.0830,     0.3398,     0.0237,     0.0002,     0.0282,     0.0137,     0.0046,     0.0060,     0.0659,     0.0007,     0.2578,     0.0261,     0.0000,     0.0000],
        [    0.3965,     0.0630,     0.1206,     0.0090,     0.0002,     0.1426,     0.0498,     0.0312,     0.0029,     0.0054,     0.0001,     0.1348,     0.0391,     0.0046,     0.0000],
        [    0.3066,     0.0864,     0.0153,     0.0160,     0.0022,     0.0488,     0.0986,     0.0160,     0.0479,     0.0023,     0.0251,     0.0117,     0.0177,     0.0757,     0.2295]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0181, -0.0209, -0.0492,  ...,  0.0375, -0.0210,  0.0248],
        [ 0.0124, -0.0007, -0.0426,  ...,  0.0848, -0.0301,  0.0203],
        [-0.0017, -0.0444, -0.0789,  ...,  0.0620, -0.0341, -0.0011],
        ...,
        [-0.0294,  0.0067,  0.0131,  ...,  0.0078,  0.0240,  0.0498],
        [ 0.0038, -0.0112, -0.0494,  ...,  0.0318,  0.0159,  0.0036],
        [ 0.0093,  0.0345, -0.0018,  ..., -0.0277,  0.0105,  0.0388]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8867,  0.0630, -1.6953, -2.4844, -0.9648,  0.7930, -2.0625, -1.6562,  2.0781, -0.2812, -1.3828,  0.4766, -0.1865, -0.6289,  0.1562, -0.0200, -0.1338, -0.3652, -0.4082,  1.2891,  1.0469,  1.1953, -0.8945, -0.9297, -1.2188,  0.6172,  0.9961, -0.9219, -0.7148,  3.1094,  1.2344, -0.4531,
        -0.1250,  0.7188, -0.5391, -0.0605, -1.2578,  1.0391,  0.4590,  1.3047, -2.2656, -0.1328,  0.1943,  1.0078, -1.0703,  0.9766,  0.7148,  0.8164,  1.0938,  0.0723, -1.3281, -0.2217, -0.7266,  1.5391,  0.0996,  1.1797,  0.1060, -0.4766,  0.4102,  0.0112,  0.4219,  0.2500,  0.1797,  0.3809],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0234,  0.0186, -0.0085,  ..., -0.0024,  0.0284,  0.0065],
        [ 0.0139,  0.0216,  0.0419,  ..., -0.0340,  0.0162,  0.0244],
        [ 0.0257,  0.0168,  0.0194,  ..., -0.0316,  0.0424,  0.0003],
        ...,
        [ 0.0014, -0.0342, -0.0116,  ...,  0.0207, -0.0504,  0.0153],
        [-0.0104, -0.0189,  0.0202,  ..., -0.0016, -0.0144,  0.0156],
        [-0.0114, -0.0588,  0.0203,  ...,  0.0180,  0.0072,  0.0127]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.7812, -0.4746, -0.1660, -1.5859,  1.9297, -1.6016, -0.8125,  2.0469,  0.8633,  0.2275,  1.4375, -1.0000,  0.1650,  0.5078, -0.1641, -1.2188,  0.5938,  0.8438,  1.3359, -0.8320, -0.3379, -0.4902,  1.5547,  0.0259,  1.1875,  1.7734,  0.4219, -1.3750,  0.0525, -0.0972,  1.1641,  1.9375,
         1.0000, -0.8086,  1.3125,  0.0811, -0.1680,  0.1133,  0.0055, -1.2188,  0.3965, -0.6328, -2.0781, -2.4844,  0.4258,  1.8828, -0.1436, -0.9492,  1.0312, -0.8477, -1.4609, -1.2578, -1.3281, -0.0520,  0.6914,  1.0156,  2.0000,  2.0469,  0.7305,  0.3418,  1.4531, -0.6680, -0.8594,  0.9922],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -1.4922,  -0.8555,  -1.8125,  -5.2812,  -0.8203,  -0.3965,  -4.1250,  -2.4844,  -3.7812,  -1.9766,  -2.6094,  -3.3125,  -2.0000,   2.6406],
        [  0.0000,  -0.7773,  -1.5859,  -3.2031,  -6.5312,  -1.9219,  -0.6992,  -1.9688,  -5.4062,  -3.6719,  -4.5625,  -2.9062,  -1.8281,  -5.0312,  -0.7930],
        [  0.0000,  -4.5312,   2.2969,  -3.2969, -11.8125,  -6.9375,  -6.5312,  -4.4688,  -7.7812,  -3.2031, -10.0000,  -0.8086,  -5.2500,  -6.9062,  -0.8242],
        [  0.0000,  -2.1250,   0.4023,  -1.6875,  -6.6562,  -1.7578,  -2.1562,  -0.8359,  -2.7812,  -1.3828,  -5.7500,   0.6914,  -0.3535,  -1.8828,  -0.0713],
        [  0.0000,  -0.4043,  -1.3281,  -1.6172,  -5.8125,   0.4375,  -0.5117,  -0.8320,  -3.9531,  -1.9219,  -5.1250,  -0.3965,   0.5547,  -3.2031,   0.8516],
        [  0.0000,   0.3223,  -0.3203,  -2.4688,  -4.8125,   1.3594,  -0.6445,  -1.3750,  -2.3906,  -1.8516,  -4.7812,   0.8242,  -0.1914,  -1.6641,   1.8281],
        [  0.0000,   1.1172,   1.7266,  -0.6406,  -3.7812,  -0.7031,  -0.7852,  -1.8750,  -1.0859,  -1.1328,  -2.8594,   1.9219,  -1.1641,  -0.4688,   2.1094],
        [  0.0000,  -1.3438,  -0.8633,  -3.4531,  -7.1875,  -0.3223,  -1.5312,  -1.8203,  -4.3438,  -3.6719,  -8.0625,  -0.6406,  -1.3672,  -3.7812,  -0.0303],
        [  0.0000,  -1.6172,  -1.3125,  -2.7656,  -7.6875,  -2.9375,  -3.0469,  -1.9375,  -4.1562,  -1.6719,  -5.2812,  -1.1641,  -1.4219,  -3.3906,  -0.6484],
        [  0.0000,  -4.1562,  -1.0703,  -2.2031,  -6.3125,  -3.1562,  -3.7969,  -4.2812,  -2.8750,  -3.3750,  -5.5938,  -1.1172,  -3.2500,  -2.0156,   0.4668],
        [  0.0000,  -0.1582,  -1.4688,  -2.9219,  -5.1562,  -0.6250,  -0.6406,  -1.8984,  -3.3125,  -2.7500,  -3.6094,  -0.9688,  -1.7812,  -2.8750,  -0.0219],
        [  0.0000,  -0.5938,   0.8125,  -1.8516,  -6.5000,  -1.6719,  -2.4062,  -3.4688,  -3.2188,  -0.8242,  -5.3125,   0.5430,  -1.7500,  -2.3281,   1.3750],
        [  0.0000,  -1.8359,  -1.1875,  -3.7812,  -7.5625,  -1.0234,  -2.0781,  -2.5469,  -4.9375,  -4.2812,  -8.7500,  -1.0781,  -2.3125,  -4.4688,  -0.5156],
        [  0.0000,  -1.2656,  -3.0000,  -2.9531,  -4.9688,  -1.8359,  -1.1328,  -2.9531,  -1.8594,  -4.9062,  -2.5000,  -3.2656,  -2.8438,  -1.4062,  -0.2910]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6755],
        [0.6304],
        [0.5331],
        [0.6528],
        [0.5698],
        [0.5247],
        [0.4828],
        [0.6226],
        [0.5043],
        [0.6287],
        [0.5384],
        [0.4735],
        [0.6361],
        [0.6333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0156, -0.0313, -0.0248,  ...,  0.0198,  0.0189,  0.0437],
        [-0.0094,  0.0043,  0.0503,  ..., -0.0216,  0.0293,  0.0100],
        [ 0.0232, -0.0208, -0.0424,  ...,  0.0046, -0.0082,  0.0462],
        ...,
        [ 0.0040,  0.0202,  0.0076,  ..., -0.0536,  0.0178, -0.0260],
        [ 0.0178, -0.0255, -0.0341,  ...,  0.0312, -0.0060,  0.0350],
        [ 0.0201,  0.0089,  0.0246,  ..., -0.0117,  0.0046, -0.0206]], device='cuda:0', requires_grad=True)
K: tensor([    -0.7422,     -1.6484,     -1.7969,      0.3203,     -0.4473,      0.0265,      1.2812,      3.2344,      0.3359,     -1.2109,     -1.6719,     -2.2188,     -0.0030,     -2.7188,      3.2031,     -1.6562,      1.6953,     -1.2500,     -1.1172,     -1.7266,      2.2031,     -1.7969,
            -1.2188,      1.6094,      0.5391,     -1.2969,      0.3398,     -1.0938,     -0.0021,     -2.4688,     -3.1875,     -1.4531,      3.1719,      0.6797,      2.2031,     -2.4688,      0.2275,      2.7344,     -2.1406,      3.8906,      1.3984,      1.1016,      1.5078,     -2.6250,
            -0.5859,     -1.4375,     -0.4395,      2.6719,      3.2969,     -0.9766,     -2.0469,     -1.4375,      2.4062,     -1.8281,      2.4062,      1.4219,      1.8281,     -1.0938,      1.0781,      1.8984,      1.7500,      2.5938,     -2.5781,      1.6562], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0565,  0.0189,  0.0358,  ..., -0.0194,  0.0121, -0.0197],
        [-0.0215, -0.0078, -0.0362,  ...,  0.0514, -0.0286,  0.0313],
        [ 0.0076,  0.0005,  0.0345,  ..., -0.0753,  0.0353, -0.0082],
        ...,
        [-0.0107, -0.0003, -0.0130,  ...,  0.0403, -0.0203,  0.0308],
        [-0.0123, -0.0084,  0.0193,  ..., -0.0621,  0.0373, -0.0186],
        [-0.0215,  0.0116, -0.0426,  ...,  0.0674, -0.0314, -0.0005]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3594,  0.3691,  1.2891, -0.9648, -0.7305, -1.1172, -1.1406, -1.8438, -1.0859,  0.8945,  1.4844,  1.3359, -0.4160,  3.2812, -1.9844,  1.2500, -0.6016,  0.7500,  1.2188,  0.9531, -0.7578,  0.7500,  1.4688, -0.7734, -1.0000,  1.1484,  0.6953,  1.9531, -0.0972,  1.3281,  1.7188,  0.5156,
        -2.2500, -0.4844, -0.8477,  1.6250,  0.6172, -2.0156,  0.9609, -1.6328, -1.1094, -0.6562, -1.1484,  1.8203, -0.2930,  0.8164,  0.6484, -1.3984, -1.8594,  0.7383,  1.3203,  1.9766, -1.1875,  0.7383, -1.2969, -0.5859, -1.9297,  0.2930, -1.3047, -0.8711, -1.7344, -1.2109,  1.2344, -0.8516],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -16.5000, -13.3750, -16.5000, -17.6250, -16.8750, -17.5000, -14.5000, -20.0000, -13.6250, -17.1250, -15.5625, -17.2500, -20.0000, -14.4375],
        [  0.0000, -15.0625, -13.7500, -16.8750, -15.6875, -15.2500, -16.3750, -15.1250, -19.0000, -13.9375, -15.8750, -14.7500, -17.7500, -19.1250, -14.4375],
        [  0.0000, -19.7500, -18.8750, -24.8750, -19.6250, -19.2500, -21.6250, -20.6250, -25.8750, -18.5000, -21.2500, -19.5000, -24.0000, -26.0000, -20.6250],
        [  0.0000, -16.7500, -15.1875, -17.8750, -18.2500, -17.3750, -18.8750, -16.2500, -20.6250, -15.5625, -17.7500, -16.3750, -19.2500, -20.6250, -15.8750],
        [  0.0000, -16.3750, -14.5625, -17.1250, -17.5000, -17.2500, -18.3750, -15.8750, -20.3750, -14.8125, -17.0000, -16.1250, -19.0000, -20.3750, -15.1875],
        [  0.0000, -19.5000, -18.7500, -22.2500, -20.7500, -20.3750, -22.6250, -20.1250, -24.8750, -18.8750, -21.0000, -19.6250, -23.7500, -25.0000, -19.5000],
        [  0.0000, -16.3750, -16.5000, -19.7500, -16.6250, -16.0000, -18.5000, -18.5000, -20.8750, -16.1250, -17.0000, -16.5000, -20.8750, -20.8750, -16.8750],
        [  0.0000, -22.1250, -20.5000, -25.6250, -23.2500, -22.7500, -24.7500, -22.5000, -28.6250, -20.6250, -23.8750, -22.0000, -26.5000, -28.7500, -21.7500],
        [  0.0000, -15.0625, -14.3750, -17.2500, -16.0000, -15.1250, -16.5000, -16.1250, -19.0000, -15.0625, -15.9375, -15.0625, -18.6250, -19.0000, -14.6875],
        [  0.0000, -13.7500, -13.1875, -15.5000, -14.7500, -14.1875, -15.7500, -13.6250, -17.0000, -13.0000, -15.0000, -13.7500, -15.6250, -17.0000, -13.9375],
        [  0.0000, -16.6250, -14.1875, -18.0000, -16.7500, -16.7500, -18.0000, -15.6875, -20.7500, -14.3125, -17.2500, -16.1250, -18.6250, -20.7500, -15.6250],
        [  0.0000, -20.0000, -20.5000, -24.3750, -21.1250, -20.3750, -22.7500, -22.6250, -26.1250, -20.5000, -21.3750, -20.5000, -26.5000, -26.2500, -20.5000],
        [  0.0000, -22.5000, -21.1250, -26.3750, -23.6250, -23.2500, -25.2500, -23.1250, -29.2500, -21.2500, -24.3750, -22.3750, -27.2500, -29.5000, -22.1250],
        [  0.0000, -17.5000, -15.3750, -19.6250, -18.0000, -17.5000, -19.0000, -16.8750, -22.2500, -15.6875, -18.8750, -16.8750, -19.8750, -22.2500, -17.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9922],
        [0.9665],
        [1.0000],
        [0.9909],
        [0.9938],
        [0.9961],
        [0.9863],
        [1.0000],
        [0.9896],
        [0.9987],
        [0.9238],
        [0.9993],
        [0.9997],
        [0.9997]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1123,     0.8867,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.9492,     0.0471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.6328,     0.1260,     0.2354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0184,     0.7500,     0.1650,     0.0432,     0.0254,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0053,     0.2832,     0.0806,     0.1367,     0.0214,     0.4727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0165,     0.1641,     0.0767,     0.1011,     0.0574,     0.4297,     0.1553,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0096,     0.0879,     0.0199,     0.0310,     0.0034,     0.1230,     0.0415,     0.6836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.0177,     0.0064,     0.0026,     0.0036,     0.1157,     0.0178,     0.8164,     0.0140,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0091,     0.0405,     0.0170,     0.0194,     0.0040,     0.0354,     0.0476,     0.5391,     0.0625,     0.2246,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.0072,     0.0057,     0.0028,     0.0013,     0.0280,     0.0503,     0.3184,     0.0233,     0.5273,     0.0339,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.0091,     0.0052,     0.0087,     0.0006,     0.0058,     0.0090,     0.1270,     0.0315,     0.1475,     0.0283,     0.6250,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.0052,     0.0029,     0.0025,     0.0003,     0.0106,     0.0040,     0.0820,     0.0072,     0.0962,     0.0120,     0.3672,     0.4082,     0.0000,     0.0000],
        [    0.0012,     0.0020,     0.0011,     0.0004,     0.0004,     0.0124,     0.0019,     0.0811,     0.0014,     0.0486,     0.0039,     0.1748,     0.6445,     0.0247,     0.0000],
        [    0.0002,     0.0023,     0.0011,     0.0009,     0.0007,     0.0025,     0.0077,     0.0278,     0.0145,     0.0469,     0.0269,     0.2021,     0.2949,     0.2119,     0.1602]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0182,  0.0282,  0.0446,  ..., -0.0405,  0.0167, -0.0232],
        [-0.0426, -0.0328,  0.0266,  ..., -0.0619, -0.0344,  0.0184],
        [-0.0554, -0.0476,  0.0361,  ..., -0.0388, -0.0142, -0.0060],
        ...,
        [ 0.0523, -0.0222, -0.0104,  ..., -0.0095, -0.0505,  0.0026],
        [ 0.0297,  0.0562, -0.0074,  ...,  0.0683, -0.0200, -0.0031],
        [-0.0016, -0.0038,  0.0055,  ...,  0.0215,  0.0362, -0.0047]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6016, -1.5391, -0.6680,  0.6562, -1.0703, -0.0996,  0.8320,  2.2969,  0.2090,  2.2031, -0.3770, -1.6875, -0.3457,  0.2334, -0.2480,  1.5703,  1.5703, -1.4531,  0.0486, -1.7578,  0.9883, -2.8750, -0.3848,  1.7734, -2.3906, -0.2832,  0.0098, -1.1172,  0.2285,  1.6562, -2.9688,  1.9609,
        -1.1953, -2.4219, -2.1719, -2.0000,  1.6328,  2.4844,  0.0762,  0.7969,  3.3125, -0.1602, -3.1719,  2.7500, -0.9766, -0.7500,  0.9023,  0.7070,  0.5469,  0.2090,  0.1768, -2.2812,  2.0469,  0.3770, -1.7031, -2.2656, -0.9648, -2.1406,  1.3359,  0.2520, -1.6719, -1.2266, -1.6172,  0.7930],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0219,  0.0252, -0.0515,  ..., -0.0088, -0.0417, -0.0041],
        [-0.0242,  0.0148,  0.0079,  ..., -0.0100,  0.0032, -0.0375],
        [ 0.0165,  0.0377, -0.0269,  ...,  0.0186, -0.0340,  0.0079],
        ...,
        [-0.0088, -0.0252,  0.0009,  ..., -0.0311,  0.0325,  0.0028],
        [ 0.0222, -0.0130, -0.0019,  ..., -0.0056,  0.0280,  0.0177],
        [ 0.0390,  0.0105,  0.0103,  ..., -0.0336, -0.0250,  0.0349]], device='cuda:0', requires_grad=True)
Q: tensor([-1.1172, -0.8359, -2.0000, -1.4922, -1.4375, -3.0312, -0.1504,  1.3828,  3.3594, -1.2891,  5.4375, -2.4062,  2.0312,  2.7812,  5.0312, -2.1875,  1.9219, -1.4609,  4.1250, -3.5625,  1.0703, -3.0469,  1.8984,  1.4922, -4.4688,  1.1484,  0.2988,  1.6875,  1.1328, -0.1895, -2.6719,  1.3672,
         2.7031, -0.3633,  0.6367, -2.0312, -1.5078,  1.0312,  1.8125,  2.2500,  1.2422, -0.0830,  3.5625, -0.7344, -4.0625, -1.2578,  2.7344, -2.2812, -1.7969,  0.5156,  2.6875, -1.6484,  2.3906, -0.8281,  3.5625, -2.9531,  0.3301, -0.7617,  0.9297, -0.2715, -0.1865,  1.6328, -0.4434,  0.6484],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.0625,  0.5781,  0.5273,  0.4258,  0.9414,  0.8750,  1.5156,  1.5234,  1.6875,  1.3203,  2.2188,  1.9688,  1.9453,  1.7031],
        [ 0.0000,  5.2812,  2.2656,  4.3125,  2.0469,  4.1250,  4.3125,  6.6562,  6.6875,  6.2812,  6.5625,  9.5000,  9.1875,  9.4375,  9.1875],
        [ 0.0000,  5.0312,  3.4219,  4.0625,  4.2500,  6.3125,  6.6250,  8.1875,  8.0625,  8.6250,  9.0625, 10.7500, 11.1875, 11.1875, 10.8750],
        [ 0.0000,  3.7031,  2.1875,  0.8516,  0.3203,  5.9062,  3.8906,  7.0938,  3.2656,  7.2812,  5.7188,  8.7500, 10.2500,  6.6875,  9.3125],
        [ 0.0000,  3.9844,  2.7188,  3.2500,  1.3906,  4.5000,  4.0625,  7.3750,  5.0938,  7.1250,  5.4688,  9.4375,  9.9375,  8.5000, 10.5625],
        [ 0.0000,  2.2969,  1.5312,  1.8125,  1.2422,  3.2656,  2.2344,  4.9375,  4.2188,  5.5625,  4.7500,  7.2500,  7.0938,  6.8438,  8.2500],
        [ 0.0000,  2.2031,  0.7188,  1.1641, -1.0312,  2.5469,  1.4609,  4.2500,  2.4844,  4.6250,  2.9375,  6.3750,  6.4062,  5.3125,  7.0625],
        [ 0.0000,  1.4297,  0.4199, -0.4883, -0.1748,  3.3125,  1.4375,  5.2500,  1.1953,  4.5938,  2.3281,  6.1250,  7.4688,  4.1875,  7.1250],
        [ 0.0000,  1.4922,  0.6211,  0.7578, -0.8281,  1.3516,  1.6562,  4.0938,  1.9219,  3.2031,  2.0625,  5.5312,  6.1875,  4.7812,  6.2500],
        [ 0.0000,  1.3047,  1.0781,  0.3574, -0.4238,  2.6562,  3.2500,  5.0938,  2.4844,  5.5938,  2.8594,  6.6562,  7.4375,  5.5312,  8.1875],
        [ 0.0000,  2.1094,  1.5625,  2.0781, -0.5898,  1.6562,  2.0938,  4.7500,  3.3594,  4.9062,  3.2500,  6.3438,  6.8125,  6.1250,  6.9375],
        [ 0.0000,  1.1875,  0.5938,  0.4395, -1.7188,  1.8984,  0.9219,  3.9531,  1.5156,  4.0938,  2.0312,  5.4375,  5.5625,  4.2812,  6.0000],
        [ 0.0000,  0.5039, -0.1582, -1.2578, -1.1406,  2.2969,  0.4473,  4.1875,  0.1113,  3.6719,  1.1484,  4.9375,  6.2500,  2.9844,  5.9375],
        [ 0.0000,  2.3906,  1.6172,  1.4219,  1.2031,  2.4688,  3.5781,  4.8750,  4.2188,  5.3750,  4.8125,  6.8438,  7.2188,  6.8750,  6.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3620],
        [0.0309],
        [0.0206],
        [0.0401],
        [0.0182],
        [0.0205],
        [0.0143],
        [0.0049],
        [0.0057],
        [0.0040],
        [0.0037],
        [0.0071],
        [0.0033],
        [0.0016]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1133,     0.8867,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0051,     0.8281,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.7578,     0.0182,     0.2227,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.8359,     0.0216,     0.0240,     0.1152,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0065,     0.8867,     0.0080,     0.0121,     0.0317,     0.0540,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.9648,     0.0009,     0.0062,     0.0031,     0.0060,     0.0176,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.8984,     0.0018,     0.0151,     0.0286,     0.0096,     0.0227,     0.0240,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0071,     0.6719,     0.0102,     0.0184,     0.0148,     0.0388,     0.1846,     0.0108,     0.0430,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0046,     0.6953,     0.0068,     0.0300,     0.0359,     0.0164,     0.1138,     0.0018,     0.0206,     0.0762,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0165,     0.3770,     0.0094,     0.0221,     0.0016,     0.0078,     0.0574,     0.0092,     0.0100,     0.2168,     0.2715,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0108,     0.2041,     0.0056,     0.2383,     0.0361,     0.0087,     0.0422,     0.0076,     0.0125,     0.1641,     0.2393,     0.0298,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.6367,     0.0006,     0.0144,     0.0361,     0.0037,     0.1089,     0.0002,     0.0312,     0.0159,     0.0588,     0.0062,     0.0864,     0.0000,     0.0000],
        [    0.0046,     0.2266,     0.0037,     0.0120,     0.0084,     0.0151,     0.1777,     0.0014,     0.0132,     0.0957,     0.1152,     0.0405,     0.1523,     0.1328,     0.0000],
        [    0.0045,     0.5312,     0.0515,     0.0300,     0.0383,     0.0327,     0.1118,     0.0063,     0.0059,     0.0168,     0.0053,     0.0100,     0.1357,     0.0101,     0.0075]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0045,      0.0136,      0.0101,  ...,     -0.0187,      0.0121,      0.0242],
        [     0.0326,     -0.0083,     -0.0165,  ...,     -0.0181,      0.0070,      0.0082],
        [    -0.0242,     -0.0181,     -0.0000,  ...,      0.0264,     -0.0211,     -0.0116],
        ...,
        [    -0.0027,      0.0170,      0.0328,  ...,     -0.0244,     -0.0213,      0.0045],
        [    -0.0224,     -0.0376,     -0.0207,  ...,     -0.0051,     -0.0323,     -0.0018],
        [     0.0066,     -0.0044,      0.0118,  ...,      0.0046,     -0.0080,      0.0265]], device='cuda:0', requires_grad=True)
K: tensor([-0.7734, -1.5859, -0.2100,  0.4473,  0.4004, -0.0762, -1.2266,  0.3164, -1.9609,  1.3203,  0.3320, -1.4766, -0.4824,  0.6523, -0.7734,  1.7344,  0.4590, -0.0200,  3.0625,  0.7266, -0.7305, -0.9883,  0.8828, -0.4043, -1.3672,  0.0552,  0.5195, -0.1992,  1.4375, -0.3613, -0.2354, -0.7852,
         1.2656,  1.1562,  0.0762,  1.6328, -0.0486,  0.0723,  0.6719, -1.0234,  1.3906,  0.2617, -1.0312,  0.6836, -1.6094,  0.9102, -1.8828, -2.0156,  0.1543,  0.1836,  1.1562, -0.8789, -0.7344,  0.8828,  0.8203, -0.0112,  0.9531, -1.7891, -0.2578, -0.4902,  0.8594, -0.0654,  0.7500, -0.3086],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0415,  0.0352, -0.0297,  ...,  0.0066, -0.0051,  0.0067],
        [-0.0235,  0.0051,  0.0016,  ..., -0.0247, -0.0014, -0.0347],
        [-0.0142, -0.0104, -0.0151,  ..., -0.0225,  0.0152, -0.0090],
        ...,
        [ 0.0162, -0.0050, -0.0366,  ..., -0.0137,  0.0229,  0.0141],
        [-0.0188, -0.0186, -0.0424,  ...,  0.0053, -0.0066,  0.0330],
        [-0.0031,  0.0207, -0.0086,  ..., -0.0243, -0.0077, -0.0053]], device='cuda:0', requires_grad=True)
Q: tensor([-0.8086, -0.1035, -1.0078, -1.5703, -0.3066, -3.3594,  1.2969,  1.9375,  0.2236, -1.5469, -1.8828,  2.1094,  0.4023,  0.1108, -0.9336, -2.5781,  1.3203, -2.1562,  0.0361, -0.7891, -0.2031, -1.0234, -1.2812,  0.3281, -0.1377,  1.3594,  0.8320,  1.4062,  0.8633,  0.4336, -0.7109,  0.5938,
         0.9375, -0.5898, -2.0469, -0.7695, -1.6328, -2.1719,  1.5312,  0.6562,  1.7344,  0.1553, -0.9883,  1.3672, -2.7969, -0.4141, -1.0078,  0.7812,  1.8281, -0.6367, -0.0747,  1.2578, -1.1016, -1.9688, -0.3672, -0.7578, -0.3828, -2.8594, -0.8789, -1.5625,  1.4297, -1.0625,  1.0312,  1.4375],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.0625, -0.4238, -0.6562, -1.5781, -2.1875, -4.2812, -1.1875, -3.7031, -1.5312, -2.4688, -2.4375, -1.1562, -3.8906, -3.3594],
        [ 0.0000,  5.0938,  3.4844,  5.9062,  6.9688,  3.5156,  2.6406,  3.4062,  3.4062,  2.4531,  2.8125,  0.2637,  4.4062,  3.1562,  0.0679],
        [ 0.0000,  6.0938,  2.3594,  4.8750,  6.9375,  4.5312,  3.8594,  3.0000,  2.6562,  2.8906,  2.3281,  0.5977,  4.6875,  3.2031,  0.8750],
        [ 0.0000,  5.2812,  1.6250,  1.7344,  3.2969,  4.5000,  2.9219,  0.8359,  1.3672,  2.8281,  1.5078,  0.3438,  2.2031,  1.5547,  1.7266],
        [ 0.0000,  4.9062,  0.1973,  0.6133,  1.5781,  2.1094,  2.2812, -0.9414,  0.8750,  1.7109,  0.6680, -1.0391,  0.1602,  0.4512,  0.7109],
        [ 0.0000,  7.7500,  0.7930,  2.7188,  2.0156,  2.6875,  3.7500,  5.9688,  3.9531,  1.8672,  1.2969,  1.4531,  1.7578,  1.7422,  1.1875],
        [ 0.0000,  7.4062,  1.1797,  3.3281,  3.9531,  2.8594,  3.7344,  3.7812,  6.2188,  2.7500,  3.5625,  1.0000,  2.3125,  5.0938,  2.2031],
        [ 0.0000,  4.5625,  0.3633,  0.9570,  0.7383,  1.7031,  3.2656,  0.4199,  1.8047,  2.9062,  2.8125,  1.9297,  1.9375,  2.1406,  2.7656],
        [ 0.0000,  5.0000,  0.3848,  1.8672,  2.0469,  1.2656,  3.2031, -0.9570,  1.5000,  2.7969,  6.1562,  3.7812,  3.8281,  3.1719,  3.2500],
        [ 0.0000,  3.1250, -0.5586,  0.2910, -2.3281, -0.7461,  1.2500, -0.5898, -0.4961,  2.5781,  2.7969,  4.0312,  4.0938,  1.2422,  2.3125],
        [ 0.0000,  2.9375, -0.6562,  3.0938,  1.2109, -0.2129,  1.3594, -0.3516,  0.1416,  2.7188,  3.0938,  1.0156,  6.5625,  3.0625,  3.0312],
        [ 0.0000,  5.8438, -1.1641,  2.0625,  2.9844,  0.6914,  4.0938, -2.0469,  2.8281,  2.1562,  3.4688,  1.2031,  3.8438,  5.8125,  4.5625],
        [ 0.0000,  3.9062, -0.2061,  0.9648,  0.6094,  1.1953,  3.6562, -1.2109,  1.0625,  3.0469,  3.2344,  2.1875,  3.5156,  3.3750,  4.1875],
        [ 0.0000,  4.7500,  2.4219,  1.8906,  2.1250,  1.9766,  3.2031,  0.3203,  0.2617,  1.3125,  0.1523,  0.7891,  3.4062,  0.7969,  0.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0489],
        [0.0125],
        [0.0025],
        [0.0031],
        [0.0229],
        [0.0023],
        [0.0023],
        [0.0023],
        [0.0135],
        [0.0205],
        [0.0151],
        [0.0077],
        [0.0013],
        [0.0109]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1270 a:0.1216,:0.2871 orange:0.1123atoes:0.0757,:0.6055 a:0.0815iced:0.2754)
iced
------
		( a:0.1216,:0.2871 orange:0.1123atoes:0.0757,:0.6055 a:0.0815iced:0.2754,:0.3711)
, and are a good choice for your body.
- The skin is
@ 5550 train 4.1451 , allloss: 4.1461, dt: 1732.06ms, fracRes: 0.3757, norm(attn): 0.2578, norm(output): 0.5742, norm(x): 0.5259, norm(y): 1.0138, norm:1.5931, tok/sec: 75674.16, flops:79.42, batch-reuse:1
@ 5551 train 4.0784 , allloss: 4.0797, dt: 1300.31ms, fracRes: 0.3789, norm(attn): 0.2578, norm(output): 0.5781, norm(x): 0.5320, norm(y): 1.0139, norm:1.3004, tok/sec: 100800.29, flops:105.79, batch-reuse:1
@ 5552 train 4.1523 , allloss: 4.1534, dt: 1336.12ms, fracRes: 0.3798, norm(attn): 0.2598, norm(output): 0.5781, norm(x): 0.5295, norm(y): 1.0139, norm:1.6342, tok/sec: 98098.86, flops:102.96, batch-reuse:1
@ 5553 train 4.1152 , allloss: 4.1165, dt: 1312.00ms, fracRes: 0.3803, norm(attn): 0.2598, norm(output): 0.5820, norm(x): 0.5314, norm(y): 1.0137, norm:1.3153, tok/sec: 99902.62, flops:104.85, batch-reuse:1
@ 5554 train 4.0845 , allloss: 4.0855, dt: 1309.12ms, fracRes: 0.3774, norm(attn): 0.2617, norm(output): 0.5820, norm(x): 0.5292, norm(y): 1.0136, norm:1.5320, tok/sec: 100122.37, flops:105.08, batch-reuse:1
@ 5555 train 4.0770 , allloss: 4.0782, dt: 1304.93ms, fracRes: 0.3754, norm(attn): 0.2637, norm(output): 0.5781, norm(x): 0.5274, norm(y): 1.0135, norm:1.4475, tok/sec: 100443.54, flops:105.42, batch-reuse:1
@ 5556 train 4.1089 , allloss: 4.1100, dt: 1320.27ms, fracRes: 0.3746, norm(attn): 0.2695, norm(output): 0.5742, norm(x): 0.5259, norm(y): 1.0135, norm:1.3031, tok/sec: 99276.71, flops:104.19, batch-reuse:1
@ 5557 train 4.0937 , allloss: 4.0956, dt: 1296.06ms, fracRes: 0.3766, norm(attn): 0.2695, norm(output): 0.5703, norm(x): 0.5254, norm(y): 1.0136, norm:1.4146, tok/sec: 101131.34, flops:106.14, batch-reuse:1
@ 5558 train 4.0619 , allloss: 4.0652, dt: 1303.13ms, fracRes: 0.3776, norm(attn): 0.2695, norm(output): 0.5703, norm(x): 0.5243, norm(y): 1.0136, norm:1.4478, tok/sec: 100582.65, flops:105.56, batch-reuse:1
@ 5559 train 4.1664 , allloss: 4.1682, dt: 1302.16ms, fracRes: 0.3761, norm(attn): 0.2695, norm(output): 0.5820, norm(x): 0.5326, norm(y): 1.0136, norm:1.4247, tok/sec: 100657.70, flops:105.64, batch-reuse:1
@ 5560 train 4.1058 , allloss: 4.1069, dt: 1317.81ms, fracRes: 0.3758, norm(attn): 0.2695, norm(output): 0.5742, norm(x): 0.5270, norm(y): 1.0136, norm:1.3191, tok/sec: 99462.20, flops:104.39, batch-reuse:1
@ 5561 train 4.0630 , allloss: 4.0690, dt: 1288.82ms, fracRes: 0.3766, norm(attn): 0.2676, norm(output): 0.5820, norm(x): 0.5276, norm(y): 1.0136, norm:1.3687, tok/sec: 101699.57, flops:106.74, batch-reuse:1
@ 5562 train 3.9651 , allloss: 3.9658, dt: 1314.14ms, fracRes: 0.3747, norm(attn): 0.2676, norm(output): 0.5781, norm(x): 0.5254, norm(y): 1.0135, norm:1.3731, tok/sec: 99739.46, flops:104.68, batch-reuse:1
@ 5563 train 4.1104 , allloss: 4.1116, dt: 1350.29ms, fracRes: 0.3731, norm(attn): 0.2715, norm(output): 0.5781, norm(x): 0.5295, norm(y): 1.0136, norm:1.3054, tok/sec: 97069.34, flops:101.88, batch-reuse:1
@ 5564 train 4.1449 , allloss: 4.1461, dt: 1351.42ms, fracRes: 0.3765, norm(attn): 0.2656, norm(output): 0.5859, norm(x): 0.5289, norm(y): 1.0135, norm:1.3171, tok/sec: 96988.26, flops:101.79, batch-reuse:1
@ 5565 train 4.0962 , allloss: 4.0972, dt: 1349.94ms, fracRes: 0.3760, norm(attn): 0.2734, norm(output): 0.5703, norm(x): 0.5301, norm(y): 1.0136, norm:1.4859, tok/sec: 97094.66, flops:101.90, batch-reuse:1
@ 5566 train 4.1296 , allloss: 4.1305, dt: 1321.67ms, fracRes: 0.3767, norm(attn): 0.2676, norm(output): 0.5781, norm(x): 0.5293, norm(y): 1.0137, norm:1.3798, tok/sec: 99171.39, flops:104.08, batch-reuse:1
@ 5567 train 4.1235 , allloss: 4.1245, dt: 1314.21ms, fracRes: 0.3749, norm(attn): 0.2715, norm(output): 0.5703, norm(x): 0.5245, norm(y): 1.0136, norm:1.3116, tok/sec: 99734.70, flops:104.67, batch-reuse:1
@ 5568 train 4.1974 , allloss: 4.1994, dt: 1316.46ms, fracRes: 0.3821, norm(attn): 0.2656, norm(output): 0.5781, norm(x): 0.5313, norm(y): 1.0136, norm:1.5378, tok/sec: 99563.63, flops:104.49, batch-reuse:1
@ 5569 train 4.0943 , allloss: 4.0958, dt: 1307.43ms, fracRes: 0.3812, norm(attn): 0.2598, norm(output): 0.5781, norm(x): 0.5260, norm(y): 1.0137, norm:1.5159, tok/sec: 100251.78, flops:105.22, batch-reuse:1
@ 5570 train 4.0324 , allloss: 4.0330, dt: 1329.89ms, fracRes: 0.3812, norm(attn): 0.2578, norm(output): 0.5820, norm(x): 0.5261, norm(y): 1.0138, norm:1.4650, tok/sec: 98558.46, flops:103.44, batch-reuse:1
@ 5571 train 4.1388 , allloss: 4.1398, dt: 1329.96ms, fracRes: 0.3808, norm(attn): 0.2598, norm(output): 0.5781, norm(x): 0.5291, norm(y): 1.0138, norm:1.4258, tok/sec: 98553.63, flops:103.43, batch-reuse:1
@ 5572 train 4.1334 , allloss: 4.1346, dt: 1290.05ms, fracRes: 0.3812, norm(attn): 0.2578, norm(output): 0.5781, norm(x): 0.5279, norm(y): 1.0138, norm:1.2823, tok/sec: 101602.36, flops:106.63, batch-reuse:1
@ 5573 train 4.0675 , allloss: 4.0685, dt: 1312.10ms, fracRes: 0.3785, norm(attn): 0.2656, norm(output): 0.5820, norm(x): 0.5294, norm(y): 1.0137, norm:1.2770, tok/sec: 99895.14, flops:104.84, batch-reuse:1
@ 5574 train 4.1541 , allloss: 4.1552, dt: 1308.40ms, fracRes: 0.3758, norm(attn): 0.2695, norm(output): 0.5781, norm(x): 0.5293, norm(y): 1.0137, norm:1.1651, tok/sec: 100177.10, flops:105.14, batch-reuse:1
@ 5575 train 4.1323 , allloss: 4.1335, dt: 1282.47ms, fracRes: 0.3749, norm(attn): 0.2676, norm(output): 0.5742, norm(x): 0.5275, norm(y): 1.0138, norm:1.0706, tok/sec: 102202.95, flops:107.26, batch-reuse:1
@ 5576 train 4.0113 , allloss: 4.0122, dt: 1294.43ms, fracRes: 0.3699, norm(attn): 0.2773, norm(output): 0.5703, norm(x): 0.5271, norm(y): 1.0137, norm:1.2294, tok/sec: 101258.64, flops:106.27, batch-reuse:1
@ 5577 train 4.0029 , allloss: 4.0041, dt: 1276.89ms, fracRes: 0.3701, norm(attn): 0.2754, norm(output): 0.5742, norm(x): 0.5265, norm(y): 1.0137, norm:1.3882, tok/sec: 102649.23, flops:107.73, batch-reuse:1
@ 5578 train 4.1206 , allloss: 4.1216, dt: 1280.60ms, fracRes: 0.3722, norm(attn): 0.2715, norm(output): 0.5781, norm(x): 0.5296, norm(y): 1.0137, norm:1.1423, tok/sec: 102352.21, flops:107.42, batch-reuse:1
@ 5579 train 4.1842 , allloss: 4.1851, dt: 1339.06ms, fracRes: 0.3738, norm(attn): 0.2695, norm(output): 0.5742, norm(x): 0.5280, norm(y): 1.0138, norm:1.3674, tok/sec: 97883.83, flops:102.73, batch-reuse:1
@ 5580 train 4.3936 , allloss: 4.3947, dt: 1325.66ms, fracRes: 0.3723, norm(attn): 0.2695, norm(output): 0.5703, norm(x): 0.5252, norm(y): 1.0141, norm:1.6529, tok/sec: 98872.91, flops:103.77, batch-reuse:1
@ 5581 train 4.3422 , allloss: 4.3439, dt: 1324.79ms, fracRes: 0.3741, norm(attn): 0.2676, norm(output): 0.5703, norm(x): 0.5269, norm(y): 1.0141, norm:1.3998, tok/sec: 98938.00, flops:103.84, batch-reuse:1
@ 5582 train 4.2246 , allloss: 4.2261, dt: 1306.37ms, fracRes: 0.3754, norm(attn): 0.2676, norm(output): 0.5781, norm(x): 0.5298, norm(y): 1.0140, norm:1.4823, tok/sec: 100333.35, flops:105.30, batch-reuse:1
@ 5583 train 4.3459 , allloss: 4.3468, dt: 1310.58ms, fracRes: 0.3779, norm(attn): 0.2598, norm(output): 0.5820, norm(x): 0.5334, norm(y): 1.0141, norm:1.2089, tok/sec: 100010.50, flops:104.96, batch-reuse:1
@ 5584 train 4.1713 , allloss: 4.1735, dt: 1341.47ms, fracRes: 0.3779, norm(attn): 0.2617, norm(output): 0.5938, norm(x): 0.5396, norm(y): 1.0139, norm:1.4253, tok/sec: 97707.58, flops:102.55, batch-reuse:1
@ 5585 train 4.2470 , allloss: 4.2522, dt: 1328.49ms, fracRes: 0.3759, norm(attn): 0.2656, norm(output): 0.5859, norm(x): 0.5353, norm(y): 1.0139, norm:1.3327, tok/sec: 98662.07, flops:103.55, batch-reuse:1
@ 5586 train 4.2742 , allloss: 4.2755, dt: 1296.18ms, fracRes: 0.3752, norm(attn): 0.2656, norm(output): 0.5820, norm(x): 0.5303, norm(y): 1.0140, norm:1.3765, tok/sec: 101121.50, flops:106.13, batch-reuse:1
@ 5587 train 4.2078 , allloss: 4.2106, dt: 1271.71ms, fracRes: 0.3748, norm(attn): 0.2676, norm(output): 0.5859, norm(x): 0.5333, norm(y): 1.0139, norm:1.3926, tok/sec: 103067.68, flops:108.17, batch-reuse:1
@ 5588 train 4.1545 , allloss: 4.1561, dt: 1308.36ms, fracRes: 0.3748, norm(attn): 0.2695, norm(output): 0.5859, norm(x): 0.5332, norm(y): 1.0139, norm:1.3275, tok/sec: 100180.55, flops:105.14, batch-reuse:1
@ 5589 train 4.2944 , allloss: 4.2973, dt: 1344.21ms, fracRes: 0.3769, norm(attn): 0.2637, norm(output): 0.5820, norm(x): 0.5334, norm(y): 1.0139, norm:1.2437, tok/sec: 97508.29, flops:102.34, batch-reuse:1
@ 5590 train 4.2384 , allloss: 4.2391, dt: 1339.75ms, fracRes: 0.3765, norm(attn): 0.2715, norm(output): 0.5703, norm(x): 0.5274, norm(y): 1.0139, norm:1.2388, tok/sec: 97833.44, flops:102.68, batch-reuse:1
@ 5591 train 4.3247 , allloss: 4.3255, dt: 1331.95ms, fracRes: 0.3762, norm(attn): 0.2715, norm(output): 0.5742, norm(x): 0.5288, norm(y): 1.0139, norm:1.3464, tok/sec: 98406.28, flops:103.28, batch-reuse:1
@ 5592 train 4.1764 , allloss: 4.1771, dt: 1316.65ms, fracRes: 0.3747, norm(attn): 0.2715, norm(output): 0.5742, norm(x): 0.5306, norm(y): 1.0139, norm:1.1766, tok/sec: 99549.37, flops:104.48, batch-reuse:1
@ 5593 train 4.1645 , allloss: 4.1665, dt: 1338.35ms, fracRes: 0.3745, norm(attn): 0.2754, norm(output): 0.5742, norm(x): 0.5316, norm(y): 1.0138, norm:1.4908, tok/sec: 97935.27, flops:102.78, batch-reuse:1
@ 5594 train 4.3018 , allloss: 4.3029, dt: 1338.11ms, fracRes: 0.3728, norm(attn): 0.2773, norm(output): 0.5703, norm(x): 0.5298, norm(y): 1.0138, norm:1.2587, tok/sec: 97952.86, flops:102.80, batch-reuse:1
@ 5595 train 4.2957 , allloss: 4.2967, dt: 1301.21ms, fracRes: 0.3747, norm(attn): 0.2793, norm(output): 0.5703, norm(x): 0.5327, norm(y): 1.0138, norm:1.3629, tok/sec: 100730.62, flops:105.72, batch-reuse:1
@ 5596 train 4.2690 , allloss: 4.2704, dt: 1294.62ms, fracRes: 0.3759, norm(attn): 0.2773, norm(output): 0.5664, norm(x): 0.5304, norm(y): 1.0139, norm:1.4348, tok/sec: 101243.36, flops:106.26, batch-reuse:1
@ 5597 train 4.3355 , allloss: 4.3367, dt: 1319.92ms, fracRes: 0.3761, norm(attn): 0.2812, norm(output): 0.5664, norm(x): 0.5303, norm(y): 1.0139, norm:1.1930, tok/sec: 99303.04, flops:104.22, batch-reuse:1
@ 5598 train 4.3075 , allloss: 4.3089, dt: 1325.86ms, fracRes: 0.3751, norm(attn): 0.2773, norm(output): 0.5703, norm(x): 0.5315, norm(y): 1.0139, norm:1.3185, tok/sec: 98858.06, flops:103.75, batch-reuse:1
@ 5599 train 4.2579 , allloss: 4.2589, dt: 1348.07ms, fracRes: 0.3760, norm(attn): 0.2754, norm(output): 0.5703, norm(x): 0.5330, norm(y): 1.0139, norm:1.4111, tok/sec: 97229.19, flops:102.04, batch-reuse:1
@ 5600 train 4.2660 , allloss: 4.2675, dt: 1324.31ms, fracRes: 0.3750, norm(attn): 0.2754, norm(output): 0.5664, norm(x): 0.5280, norm(y): 1.0139, norm:1.3799, tok/sec: 98973.96, flops:103.88, batch-reuse:1
@ 5601 train 4.3657 , allloss: 4.3663, dt: 1317.76ms, fracRes: 0.3751, norm(attn): 0.2773, norm(output): 0.5664, norm(x): 0.5281, norm(y): 1.0138, norm:1.3710, tok/sec: 99466.10, flops:104.39, batch-reuse:1
@ 5602 train 4.4562 , allloss: 4.4570, dt: 1343.06ms, fracRes: 0.3757, norm(attn): 0.2773, norm(output): 0.5742, norm(x): 0.5337, norm(y): 1.0138, norm:1.4252, tok/sec: 97592.41, flops:102.43, batch-reuse:1
@ 5603 train 4.2903 , allloss: 4.2913, dt: 1331.91ms, fracRes: 0.3745, norm(attn): 0.2773, norm(output): 0.5703, norm(x): 0.5322, norm(y): 1.0139, norm:1.4484, tok/sec: 98409.18, flops:103.28, batch-reuse:1
@ 5604 train 4.2750 , allloss: 4.2796, dt: 1300.68ms, fracRes: 0.3769, norm(attn): 0.2734, norm(output): 0.5742, norm(x): 0.5333, norm(y): 1.0138, norm:1.2602, tok/sec: 100771.93, flops:105.76, batch-reuse:1
@ 5605 train 4.1887 , allloss: 4.1896, dt: 1311.31ms, fracRes: 0.3752, norm(attn): 0.2793, norm(output): 0.5742, norm(x): 0.5324, norm(y): 1.0138, norm:1.2793, tok/sec: 99954.98, flops:104.90, batch-reuse:1
@ 5606 train 4.4434 , allloss: 4.4445, dt: 1285.51ms, fracRes: 0.3791, norm(attn): 0.2715, norm(output): 0.5781, norm(x): 0.5351, norm(y): 1.0141, norm:1.7885, tok/sec: 101961.42, flops:107.01, batch-reuse:1
@ 5607 train 4.3022 , allloss: 4.3064, dt: 1348.24ms, fracRes: 0.3736, norm(attn): 0.2812, norm(output): 0.5703, norm(x): 0.5298, norm(y): 1.0137, norm:1.6717, tok/sec: 97216.86, flops:102.03, batch-reuse:1
@ 5608 train 4.2877 , allloss: 4.2916, dt: 1332.71ms, fracRes: 0.3743, norm(attn): 0.2734, norm(output): 0.5742, norm(x): 0.5328, norm(y): 1.0137, norm:1.4627, tok/sec: 98349.99, flops:103.22, batch-reuse:1
@ 5609 train 4.3719 , allloss: 4.3726, dt: 1297.93ms, fracRes: 0.3758, norm(attn): 0.2734, norm(output): 0.5781, norm(x): 0.5397, norm(y): 1.0138, norm:1.5722, tok/sec: 100985.25, flops:105.99, batch-reuse:1
@ 5610 train 4.3113 , allloss: 4.3119, dt: 1298.10ms, fracRes: 0.3725, norm(attn): 0.2754, norm(output): 0.5781, norm(x): 0.5333, norm(y): 1.0138, norm:1.4603, tok/sec: 100972.10, flops:105.97, batch-reuse:1
@ 5611 train 4.2425 , allloss: 4.2432, dt: 1312.85ms, fracRes: 0.3740, norm(attn): 0.2715, norm(output): 0.5781, norm(x): 0.5357, norm(y): 1.0139, norm:1.6283, tok/sec: 99837.96, flops:104.78, batch-reuse:1
@ 5612 train 4.1267 , allloss: 4.1274, dt: 1335.23ms, fracRes: 0.3747, norm(attn): 0.2715, norm(output): 0.5742, norm(x): 0.5338, norm(y): 1.0139, norm:1.3841, tok/sec: 98164.37, flops:103.03, batch-reuse:1
@ 5613 train 4.2860 , allloss: 4.2872, dt: 1338.85ms, fracRes: 0.3744, norm(attn): 0.2754, norm(output): 0.5781, norm(x): 0.5344, norm(y): 1.0138, norm:1.2762, tok/sec: 97898.82, flops:102.75, batch-reuse:1
@ 5614 train 4.1858 , allloss: 4.1864, dt: 1340.70ms, fracRes: 0.3759, norm(attn): 0.2695, norm(output): 0.5820, norm(x): 0.5341, norm(y): 1.0139, norm:1.3074, tok/sec: 97764.00, flops:102.61, batch-reuse:1
@ 5615 train 4.1915 , allloss: 4.1922, dt: 1337.83ms, fracRes: 0.3757, norm(attn): 0.2734, norm(output): 0.5820, norm(x): 0.5361, norm(y): 1.0138, norm:1.3955, tok/sec: 97973.88, flops:102.83, batch-reuse:1
@ 5616 train 4.1941 , allloss: 4.1957, dt: 1321.11ms, fracRes: 0.3761, norm(attn): 0.2734, norm(output): 0.5781, norm(x): 0.5328, norm(y): 1.0137, norm:1.2198, tok/sec: 99213.81, flops:104.13, batch-reuse:1
@ 5617 train 4.1074 , allloss: 4.1084, dt: 1298.16ms, fracRes: 0.3775, norm(attn): 0.2734, norm(output): 0.5781, norm(x): 0.5336, norm(y): 1.0137, norm:1.3082, tok/sec: 100967.39, flops:105.97, batch-reuse:1
@ 5618 train 4.2194 , allloss: 4.2204, dt: 1285.34ms, fracRes: 0.3774, norm(attn): 0.2715, norm(output): 0.5781, norm(x): 0.5314, norm(y): 1.0137, norm:1.3305, tok/sec: 101974.40, flops:107.02, batch-reuse:1
@ 5619 train 4.2761 , allloss: 4.2784, dt: 1335.82ms, fracRes: 0.3791, norm(attn): 0.2695, norm(output): 0.5781, norm(x): 0.5345, norm(y): 1.0138, norm:1.2886, tok/sec: 98120.67, flops:102.98, batch-reuse:1
@ 5620 train 4.1254 , allloss: 4.1265, dt: 1286.04ms, fracRes: 0.3803, norm(attn): 0.2715, norm(output): 0.5820, norm(x): 0.5352, norm(y): 1.0137, norm:1.2506, tok/sec: 101918.82, flops:106.97, batch-reuse:1
@ 5621 train 4.2334 , allloss: 4.2349, dt: 1299.53ms, fracRes: 0.3776, norm(attn): 0.2695, norm(output): 0.5820, norm(x): 0.5347, norm(y): 1.0138, norm:1.2225, tok/sec: 100861.36, flops:105.86, batch-reuse:1
@ 5622 train 4.2427 , allloss: 4.2432, dt: 1320.50ms, fracRes: 0.3771, norm(attn): 0.2656, norm(output): 0.5820, norm(x): 0.5343, norm(y): 1.0138, norm:1.1902, tok/sec: 99259.38, flops:104.17, batch-reuse:1
@ 5623 train 4.2089 , allloss: 4.2100, dt: 1300.18ms, fracRes: 0.3745, norm(attn): 0.2676, norm(output): 0.5781, norm(x): 0.5339, norm(y): 1.0138, norm:1.2282, tok/sec: 100810.51, flops:105.80, batch-reuse:1
@ 5624 train 4.2580 , allloss: 4.2593, dt: 1320.88ms, fracRes: 0.3747, norm(attn): 0.2695, norm(output): 0.5781, norm(x): 0.5326, norm(y): 1.0138, norm:1.3613, tok/sec: 99231.04, flops:104.14, batch-reuse:1
@ 5625 train 4.2161 , allloss: 4.2170, dt: 1290.79ms, fracRes: 0.3740, norm(attn): 0.2676, norm(output): 0.5781, norm(x): 0.5284, norm(y): 1.0137, norm:1.3199, tok/sec: 101544.08, flops:106.57, batch-reuse:1
@ 5626 train 4.1440 , allloss: 4.1446, dt: 1301.09ms, fracRes: 0.3747, norm(attn): 0.2754, norm(output): 0.5781, norm(x): 0.5319, norm(y): 1.0136, norm:1.3550, tok/sec: 100739.98, flops:105.73, batch-reuse:1
@ 5627 train 4.3097 , allloss: 4.3106, dt: 1284.57ms, fracRes: 0.3761, norm(attn): 0.2695, norm(output): 0.5781, norm(x): 0.5310, norm(y): 1.0138, norm:1.2870, tok/sec: 102035.57, flops:107.09, batch-reuse:1
@ 5628 train 4.1918 , allloss: 4.1927, dt: 1289.28ms, fracRes: 0.3744, norm(attn): 0.2793, norm(output): 0.5703, norm(x): 0.5280, norm(y): 1.0137, norm:1.3123, tok/sec: 101662.99, flops:106.70, batch-reuse:1
@ 5629 train 4.3264 , allloss: 4.3282, dt: 1306.27ms, fracRes: 0.3736, norm(attn): 0.2773, norm(output): 0.5703, norm(x): 0.5316, norm(y): 1.0137, norm:1.2235, tok/sec: 100340.98, flops:105.31, batch-reuse:1
@ 5630 train 4.2636 , allloss: 4.2647, dt: 1340.65ms, fracRes: 0.3746, norm(attn): 0.2754, norm(output): 0.5742, norm(x): 0.5360, norm(y): 1.0138, norm:1.3800, tok/sec: 97767.76, flops:102.61, batch-reuse:1
@ 5631 train 4.2896 , allloss: 4.2911, dt: 1333.32ms, fracRes: 0.3747, norm(attn): 0.2715, norm(output): 0.5742, norm(x): 0.5322, norm(y): 1.0138, norm:1.3270, tok/sec: 98305.25, flops:103.17, batch-reuse:1
@ 5632 train 4.1221 , allloss: 4.1244, dt: 1343.65ms, fracRes: 0.3758, norm(attn): 0.2754, norm(output): 0.5742, norm(x): 0.5350, norm(y): 1.0137, norm:1.3884, tok/sec: 97549.33, flops:102.38, batch-reuse:1
@ 5633 train 4.1807 , allloss: 4.1826, dt: 1332.96ms, fracRes: 0.3735, norm(attn): 0.2754, norm(output): 0.5742, norm(x): 0.5289, norm(y): 1.0137, norm:1.3116, tok/sec: 98331.42, flops:103.20, batch-reuse:1
@ 5634 train 4.1585 , allloss: 4.1597, dt: 1309.99ms, fracRes: 0.3754, norm(attn): 0.2734, norm(output): 0.5781, norm(x): 0.5305, norm(y): 1.0138, norm:1.3224, tok/sec: 100055.95, flops:105.01, batch-reuse:1
@ 5635 train 4.3433 , allloss: 4.3442, dt: 1345.01ms, fracRes: 0.3735, norm(attn): 0.2734, norm(output): 0.5703, norm(x): 0.5299, norm(y): 1.0138, norm:1.1265, tok/sec: 97450.49, flops:102.28, batch-reuse:1
@ 5636 train 4.1555 , allloss: 4.1582, dt: 1296.17ms, fracRes: 0.3751, norm(attn): 0.2754, norm(output): 0.5781, norm(x): 0.5308, norm(y): 1.0137, norm:1.4911, tok/sec: 101122.74, flops:106.13, batch-reuse:1
@ 5637 train 4.2836 , allloss: 4.2856, dt: 1296.99ms, fracRes: 0.3739, norm(attn): 0.2812, norm(output): 0.5703, norm(x): 0.5290, norm(y): 1.0138, norm:1.1545, tok/sec: 101058.24, flops:106.06, batch-reuse:1
@ 5638 train 4.2434 , allloss: 4.2454, dt: 1279.86ms, fracRes: 0.3734, norm(attn): 0.2773, norm(output): 0.5703, norm(x): 0.5294, norm(y): 1.0137, norm:1.2871, tok/sec: 102410.99, flops:107.48, batch-reuse:1
@ 5639 train 4.1152 , allloss: 4.1157, dt: 1316.82ms, fracRes: 0.3693, norm(attn): 0.2832, norm(output): 0.5664, norm(x): 0.5260, norm(y): 1.0137, norm:1.4303, tok/sec: 99536.61, flops:104.47, batch-reuse:1
@ 5640 train 4.2180 , allloss: 4.2196, dt: 1289.93ms, fracRes: 0.3740, norm(attn): 0.2852, norm(output): 0.5742, norm(x): 0.5335, norm(y): 1.0137, norm:1.3459, tok/sec: 101611.52, flops:106.64, batch-reuse:1
@ 5641 train 4.2449 , allloss: 4.2457, dt: 1284.03ms, fracRes: 0.3762, norm(attn): 0.2754, norm(output): 0.5742, norm(x): 0.5338, norm(y): 1.0138, norm:1.2504, tok/sec: 102078.82, flops:107.13, batch-reuse:1
@ 5642 train 4.2136 , allloss: 4.2141, dt: 1298.36ms, fracRes: 0.3738, norm(attn): 0.2773, norm(output): 0.5664, norm(x): 0.5288, norm(y): 1.0139, norm:1.2825, tok/sec: 100951.94, flops:105.95, batch-reuse:1
@ 5643 train 4.2972 , allloss: 4.2979, dt: 1280.52ms, fracRes: 0.3751, norm(attn): 0.2773, norm(output): 0.5742, norm(x): 0.5294, norm(y): 1.0137, norm:1.4342, tok/sec: 102358.61, flops:107.43, batch-reuse:1
@ 5644 train 4.2806 , allloss: 4.2816, dt: 1311.49ms, fracRes: 0.3746, norm(attn): 0.2812, norm(output): 0.5664, norm(x): 0.5290, norm(y): 1.0137, norm:1.4144, tok/sec: 99941.48, flops:104.89, batch-reuse:1
@ 5645 train 4.1294 , allloss: 4.1309, dt: 1279.20ms, fracRes: 0.3776, norm(attn): 0.2754, norm(output): 0.5781, norm(x): 0.5321, norm(y): 1.0138, norm:1.4707, tok/sec: 102463.82, flops:107.54, batch-reuse:1
@ 5646 train 4.1825 , allloss: 4.1842, dt: 1288.66ms, fracRes: 0.3768, norm(attn): 0.2754, norm(output): 0.5781, norm(x): 0.5329, norm(y): 1.0138, norm:1.5971, tok/sec: 101711.70, flops:106.75, batch-reuse:1
@ 5647 train 4.3056 , allloss: 4.3064, dt: 1314.55ms, fracRes: 0.3753, norm(attn): 0.2773, norm(output): 0.5742, norm(x): 0.5304, norm(y): 1.0138, norm:1.2933, tok/sec: 99708.56, flops:104.65, batch-reuse:1
@ 5648 train 4.1726 , allloss: 4.1733, dt: 1312.50ms, fracRes: 0.3732, norm(attn): 0.2812, norm(output): 0.5703, norm(x): 0.5286, norm(y): 1.0138, norm:1.3367, tok/sec: 99864.73, flops:104.81, batch-reuse:1
@ 5649 train 4.2673 , allloss: 4.2681, dt: 1316.27ms, fracRes: 0.3723, norm(attn): 0.2793, norm(output): 0.5664, norm(x): 0.5266, norm(y): 1.0138, norm:1.3422, tok/sec: 99578.27, flops:104.51, batch-reuse:1
@ 5650 train 4.0699 , allloss: 4.0710, dt: 1312.36ms, fracRes: 0.3752, norm(attn): 0.2715, norm(output): 0.5742, norm(x): 0.5291, norm(y): 1.0139, norm:1.2329, tok/sec: 99874.99, flops:104.82, batch-reuse:1
@ 5651 train 4.1939 , allloss: 4.1949, dt: 1303.48ms, fracRes: 0.3753, norm(attn): 0.2754, norm(output): 0.5742, norm(x): 0.5287, norm(y): 1.0138, norm:1.2466, tok/sec: 100555.76, flops:105.54, batch-reuse:1
@ 5652 train 4.1810 , allloss: 4.1819, dt: 1306.50ms, fracRes: 0.3765, norm(attn): 0.2695, norm(output): 0.5938, norm(x): 0.5357, norm(y): 1.0138, norm:1.3118, tok/sec: 100323.15, flops:105.29, batch-reuse:1
@ 5653 train 4.1782 , allloss: 4.1814, dt: 1304.64ms, fracRes: 0.3774, norm(attn): 0.2715, norm(output): 0.5898, norm(x): 0.5370, norm(y): 1.0139, norm:1.2527, tok/sec: 100466.10, flops:105.44, batch-reuse:1
@ 5654 train 4.2514 , allloss: 4.2522, dt: 1313.15ms, fracRes: 0.3785, norm(attn): 0.2695, norm(output): 0.5938, norm(x): 0.5395, norm(y): 1.0139, norm:1.3558, tok/sec: 99815.17, flops:104.76, batch-reuse:1
@ 5655 train 4.2599 , allloss: 4.2613, dt: 1315.80ms, fracRes: 0.3769, norm(attn): 0.2715, norm(output): 0.5859, norm(x): 0.5325, norm(y): 1.0139, norm:1.1451, tok/sec: 99613.57, flops:104.55, batch-reuse:1
@ 5656 train 4.2373 , allloss: 4.2385, dt: 1340.08ms, fracRes: 0.3761, norm(attn): 0.2793, norm(output): 0.5820, norm(x): 0.5344, norm(y): 1.0137, norm:1.4930, tok/sec: 97809.43, flops:102.65, batch-reuse:1
@ 5657 train 4.2447 , allloss: 4.2478, dt: 1278.74ms, fracRes: 0.3773, norm(attn): 0.2695, norm(output): 0.5938, norm(x): 0.5363, norm(y): 1.0138, norm:1.5480, tok/sec: 102501.13, flops:107.58, batch-reuse:1
@ 5658 train 4.1773 , allloss: 4.1783, dt: 1299.37ms, fracRes: 0.3763, norm(attn): 0.2773, norm(output): 0.5859, norm(x): 0.5331, norm(y): 1.0137, norm:1.3666, tok/sec: 100873.18, flops:105.87, batch-reuse:1
@ 5659 train 4.2077 , allloss: 4.2087, dt: 1318.82ms, fracRes: 0.3772, norm(attn): 0.2793, norm(output): 0.5742, norm(x): 0.5259, norm(y): 1.0137, norm:1.3603, tok/sec: 99385.62, flops:104.31, batch-reuse:1
@ 5660 train 4.2065 , allloss: 4.2077, dt: 1308.73ms, fracRes: 0.3775, norm(attn): 0.2832, norm(output): 0.5703, norm(x): 0.5241, norm(y): 1.0137, norm:1.2689, tok/sec: 100152.19, flops:105.11, batch-reuse:1
@ 5661 train 4.3085 , allloss: 4.3096, dt: 1328.18ms, fracRes: 0.3778, norm(attn): 0.2773, norm(output): 0.5781, norm(x): 0.5296, norm(y): 1.0137, norm:1.3150, tok/sec: 98685.38, flops:103.57, batch-reuse:1
@ 5662 train 4.2468 , allloss: 4.2477, dt: 1309.82ms, fracRes: 0.3773, norm(attn): 0.2793, norm(output): 0.5781, norm(x): 0.5293, norm(y): 1.0137, norm:1.2531, tok/sec: 100068.97, flops:105.02, batch-reuse:1
@ 5663 train 4.2746 , allloss: 4.2752, dt: 1321.39ms, fracRes: 0.3768, norm(attn): 0.2754, norm(output): 0.5781, norm(x): 0.5310, norm(y): 1.0138, norm:1.2472, tok/sec: 99192.85, flops:104.10, batch-reuse:1
@ 5664 train 4.1599 , allloss: 4.1610, dt: 1338.11ms, fracRes: 0.3755, norm(attn): 0.2793, norm(output): 0.5742, norm(x): 0.5317, norm(y): 1.0137, norm:1.2868, tok/sec: 97953.07, flops:102.80, batch-reuse:1
@ 5665 train 4.2256 , allloss: 4.2297, dt: 1282.69ms, fracRes: 0.3753, norm(attn): 0.2773, norm(output): 0.5820, norm(x): 0.5381, norm(y): 1.0137, norm:1.1379, tok/sec: 102185.23, flops:107.25, batch-reuse:1
@ 5666 train 4.2576 , allloss: 4.2585, dt: 1304.89ms, fracRes: 0.3730, norm(attn): 0.2793, norm(output): 0.5742, norm(x): 0.5319, norm(y): 1.0137, norm:1.3293, tok/sec: 100446.55, flops:105.42, batch-reuse:1
@ 5667 train 4.2012 , allloss: 4.2019, dt: 1273.61ms, fracRes: 0.3736, norm(attn): 0.2812, norm(output): 0.5742, norm(x): 0.5313, norm(y): 1.0137, norm:1.4085, tok/sec: 102913.91, flops:108.01, batch-reuse:1
@ 5668 train 4.1857 , allloss: 4.1866, dt: 1292.54ms, fracRes: 0.3736, norm(attn): 0.2812, norm(output): 0.5664, norm(x): 0.5294, norm(y): 1.0139, norm:1.2283, tok/sec: 101406.30, flops:106.43, batch-reuse:1
@ 5669 train 4.1883 , allloss: 4.1903, dt: 1336.51ms, fracRes: 0.3751, norm(attn): 0.2852, norm(output): 0.5781, norm(x): 0.5315, norm(y): 1.0138, norm:1.4616, tok/sec: 98070.14, flops:102.93, batch-reuse:1
@ 5670 train 4.2322 , allloss: 4.2334, dt: 1325.56ms, fracRes: 0.3746, norm(attn): 0.2871, norm(output): 0.5703, norm(x): 0.5342, norm(y): 1.0138, norm:1.3030, tok/sec: 98880.73, flops:103.78, batch-reuse:1
@ 5671 train 4.2927 , allloss: 4.2950, dt: 1329.77ms, fracRes: 0.3752, norm(attn): 0.2832, norm(output): 0.5742, norm(x): 0.5331, norm(y): 1.0138, norm:1.2880, tok/sec: 98567.79, flops:103.45, batch-reuse:1
@ 5672 train 4.1861 , allloss: 4.1872, dt: 1328.12ms, fracRes: 0.3747, norm(attn): 0.2812, norm(output): 0.5742, norm(x): 0.5296, norm(y): 1.0138, norm:1.2335, tok/sec: 98689.86, flops:103.58, batch-reuse:1
@ 5673 train 4.1321 , allloss: 4.1330, dt: 1341.30ms, fracRes: 0.3745, norm(attn): 0.2812, norm(output): 0.5781, norm(x): 0.5290, norm(y): 1.0137, norm:1.1947, tok/sec: 97720.43, flops:102.56, batch-reuse:1
@ 5674 train 4.1327 , allloss: 4.1342, dt: 1318.50ms, fracRes: 0.3757, norm(attn): 0.2773, norm(output): 0.5820, norm(x): 0.5304, norm(y): 1.0138, norm:1.1526, tok/sec: 99409.82, flops:104.33, batch-reuse:1
@ 5675 train 4.1536 , allloss: 4.1545, dt: 1304.35ms, fracRes: 0.3753, norm(attn): 0.2832, norm(output): 0.5781, norm(x): 0.5291, norm(y): 1.0136, norm:1.2173, tok/sec: 100488.56, flops:105.46, batch-reuse:1
@ 5676 train 4.2765 , allloss: 4.2785, dt: 1296.49ms, fracRes: 0.3779, norm(attn): 0.2754, norm(output): 0.5859, norm(x): 0.5339, norm(y): 1.0137, norm:1.3189, tok/sec: 101097.27, flops:106.10, batch-reuse:1
@ 5677 train 4.1318 , allloss: 4.1334, dt: 1318.41ms, fracRes: 0.3770, norm(attn): 0.2773, norm(output): 0.5820, norm(x): 0.5259, norm(y): 1.0136, norm:1.3006, tok/sec: 99416.48, flops:104.34, batch-reuse:1
@ 5678 train 4.0879 , allloss: 4.0889, dt: 1313.98ms, fracRes: 0.3756, norm(attn): 0.2832, norm(output): 0.5703, norm(x): 0.5241, norm(y): 1.0137, norm:1.2723, tok/sec: 99751.69, flops:104.69, batch-reuse:1
@ 5679 train 4.1109 , allloss: 4.1119, dt: 1285.77ms, fracRes: 0.3755, norm(attn): 0.2832, norm(output): 0.5703, norm(x): 0.5262, norm(y): 1.0137, norm:1.1693, tok/sec: 101940.10, flops:106.99, batch-reuse:1
@ 5680 train 4.1923 , allloss: 4.1932, dt: 1319.01ms, fracRes: 0.3748, norm(attn): 0.2773, norm(output): 0.5742, norm(x): 0.5283, norm(y): 1.0137, norm:1.5060, tok/sec: 99371.64, flops:104.29, batch-reuse:1
@ 5681 train 4.1242 , allloss: 4.1255, dt: 1348.46ms, fracRes: 0.3723, norm(attn): 0.2832, norm(output): 0.5742, norm(x): 0.5333, norm(y): 1.0138, norm:1.2520, tok/sec: 97201.43, flops:102.01, batch-reuse:1
@ 5682 train 4.1174 , allloss: 4.1189, dt: 1337.18ms, fracRes: 0.3751, norm(attn): 0.2793, norm(output): 0.5820, norm(x): 0.5348, norm(y): 1.0137, norm:1.5287, tok/sec: 98021.48, flops:102.88, batch-reuse:1
@ 5683 train 4.1614 , allloss: 4.1636, dt: 1314.23ms, fracRes: 0.3726, norm(attn): 0.2891, norm(output): 0.5781, norm(x): 0.5323, norm(y): 1.0136, norm:1.4539, tok/sec: 99732.65, flops:104.67, batch-reuse:1
@ 5684 train 4.1599 , allloss: 4.1610, dt: 1308.42ms, fracRes: 0.3734, norm(attn): 0.2832, norm(output): 0.5859, norm(x): 0.5373, norm(y): 1.0137, norm:1.3287, tok/sec: 100176.15, flops:105.14, batch-reuse:1
@ 5685 train 4.1670 , allloss: 4.1679, dt: 1319.64ms, fracRes: 0.3732, norm(attn): 0.2832, norm(output): 0.5859, norm(x): 0.5354, norm(y): 1.0136, norm:1.4664, tok/sec: 99324.03, flops:104.24, batch-reuse:1
@ 5686 train 4.1128 , allloss: 4.1140, dt: 1334.63ms, fracRes: 0.3731, norm(attn): 0.2871, norm(output): 0.5781, norm(x): 0.5314, norm(y): 1.0136, norm:1.2884, tok/sec: 98208.65, flops:103.07, batch-reuse:1
@ 5687 train 4.1624 , allloss: 4.1650, dt: 1306.55ms, fracRes: 0.3751, norm(attn): 0.2832, norm(output): 0.5820, norm(x): 0.5309, norm(y): 1.0137, norm:1.4873, tok/sec: 100319.14, flops:105.29, batch-reuse:1
@ 5688 train 4.1385 , allloss: 4.1399, dt: 1284.20ms, fracRes: 0.3764, norm(attn): 0.2754, norm(output): 0.5859, norm(x): 0.5334, norm(y): 1.0137, norm:1.2029, tok/sec: 102065.35, flops:107.12, batch-reuse:1
@ 5689 train 4.1509 , allloss: 4.1524, dt: 1311.67ms, fracRes: 0.3749, norm(attn): 0.2832, norm(output): 0.5781, norm(x): 0.5314, norm(y): 1.0136, norm:1.4133, tok/sec: 99927.44, flops:104.88, batch-reuse:1
@ 5690 train 4.0675 , allloss: 4.0689, dt: 1335.15ms, fracRes: 0.3766, norm(attn): 0.2812, norm(output): 0.5820, norm(x): 0.5368, norm(y): 1.0137, norm:1.2333, tok/sec: 98170.51, flops:103.03, batch-reuse:1
@ 5691 train 4.1324 , allloss: 4.1339, dt: 1337.46ms, fracRes: 0.3745, norm(attn): 0.2832, norm(output): 0.5742, norm(x): 0.5262, norm(y): 1.0136, norm:1.2964, tok/sec: 98000.89, flops:102.85, batch-reuse:1
@ 5692 train 4.1038 , allloss: 4.1049, dt: 1335.73ms, fracRes: 0.3733, norm(attn): 0.2832, norm(output): 0.5742, norm(x): 0.5268, norm(y): 1.0134, norm:1.2597, tok/sec: 98127.73, flops:102.99, batch-reuse:1
@ 5693 train 4.1340 , allloss: 4.1355, dt: 1335.89ms, fracRes: 0.3741, norm(attn): 0.2793, norm(output): 0.5820, norm(x): 0.5313, norm(y): 1.0135, norm:1.2324, tok/sec: 98115.88, flops:102.97, batch-reuse:1
@ 5694 train 4.1393 , allloss: 4.1404, dt: 1315.00ms, fracRes: 0.3777, norm(attn): 0.2715, norm(output): 0.5859, norm(x): 0.5347, norm(y): 1.0139, norm:1.2691, tok/sec: 99674.30, flops:104.61, batch-reuse:1
@ 5695 train 4.1249 , allloss: 4.1259, dt: 1316.30ms, fracRes: 0.3772, norm(attn): 0.2754, norm(output): 0.5781, norm(x): 0.5271, norm(y): 1.0137, norm:1.2476, tok/sec: 99576.02, flops:104.51, batch-reuse:1
@ 5696 train 4.1429 , allloss: 4.1443, dt: 1315.55ms, fracRes: 0.3760, norm(attn): 0.2793, norm(output): 0.5781, norm(x): 0.5273, norm(y): 1.0136, norm:1.2749, tok/sec: 99633.23, flops:104.57, batch-reuse:1
@ 5697 train 4.1644 , allloss: 4.1662, dt: 1335.54ms, fracRes: 0.3751, norm(attn): 0.2754, norm(output): 0.5859, norm(x): 0.5311, norm(y): 1.0136, norm:1.3714, tok/sec: 98141.47, flops:103.00, batch-reuse:1
@ 5698 train 4.1733 , allloss: 4.1742, dt: 1348.54ms, fracRes: 0.3713, norm(attn): 0.2793, norm(output): 0.5742, norm(x): 0.5319, norm(y): 1.0136, norm:1.3281, tok/sec: 97195.15, flops:102.01, batch-reuse:1
@ 5699 train 4.2019 , allloss: 4.2037, dt: 1344.82ms, fracRes: 0.3709, norm(attn): 0.2832, norm(output): 0.5820, norm(x): 0.5300, norm(y): 1.0135, norm:1.4574, tok/sec: 97464.62, flops:102.29, batch-reuse:1
@ 5700 train 4.2156 , allloss: 4.2176, dt: 1316.66ms, fracRes: 0.3743, norm(attn): 0.2754, norm(output): 0.5898, norm(x): 0.5385, norm(y): 1.0137, norm:1.5392, tok/sec: 99548.90, flops:104.48, batch-reuse:1
@ 5701 train 4.1243 , allloss: 4.1258, dt: 1334.65ms, fracRes: 0.3733, norm(attn): 0.2793, norm(output): 0.5781, norm(x): 0.5342, norm(y): 1.0137, norm:1.4189, tok/sec: 98206.98, flops:103.07, batch-reuse:1
@ 5702 train 4.1729 , allloss: 4.1737, dt: 1340.08ms, fracRes: 0.3758, norm(attn): 0.2754, norm(output): 0.5820, norm(x): 0.5350, norm(y): 1.0138, norm:1.2831, tok/sec: 97809.15, flops:102.65, batch-reuse:1
@ 5703 train 4.1782 , allloss: 4.1791, dt: 1305.52ms, fracRes: 0.3766, norm(attn): 0.2793, norm(output): 0.5859, norm(x): 0.5389, norm(y): 1.0137, norm:1.3558, tok/sec: 100398.21, flops:105.37, batch-reuse:1
@ 5704 train 4.1354 , allloss: 4.1368, dt: 1312.83ms, fracRes: 0.3752, norm(attn): 0.2832, norm(output): 0.5781, norm(x): 0.5309, norm(y): 1.0136, norm:1.4521, tok/sec: 99839.48, flops:104.78, batch-reuse:1
@ 5705 train 4.1483 , allloss: 4.1492, dt: 1298.20ms, fracRes: 0.3748, norm(attn): 0.2871, norm(output): 0.5703, norm(x): 0.5296, norm(y): 1.0135, norm:1.3041, tok/sec: 100964.31, flops:105.96, batch-reuse:1
@ 5706 train 4.2200 , allloss: 4.2209, dt: 1289.67ms, fracRes: 0.3761, norm(attn): 0.2812, norm(output): 0.5742, norm(x): 0.5295, norm(y): 1.0135, norm:1.2927, tok/sec: 101632.41, flops:106.67, batch-reuse:1
@ 5707 train 4.1401 , allloss: 4.1408, dt: 1311.74ms, fracRes: 0.3758, norm(attn): 0.2852, norm(output): 0.5781, norm(x): 0.5287, norm(y): 1.0135, norm:1.2105, tok/sec: 99922.32, flops:104.87, batch-reuse:1
@ 5708 train 4.1748 , allloss: 4.1829, dt: 1288.82ms, fracRes: 0.3753, norm(attn): 0.2812, norm(output): 0.5781, norm(x): 0.5304, norm(y): 1.0136, norm:8.4518, tok/sec: 101699.00, flops:106.73, batch-reuse:1
@ 5709 train 4.0765 , allloss: 4.0770, dt: 1307.68ms, fracRes: 0.3757, norm(attn): 0.2773, norm(output): 0.5781, norm(x): 0.5298, norm(y): 1.0137, norm:1.7315, tok/sec: 100232.57, flops:105.20, batch-reuse:1
@ 5710 train 4.1244 , allloss: 4.1252, dt: 1312.83ms, fracRes: 0.3757, norm(attn): 0.2754, norm(output): 0.5859, norm(x): 0.5332, norm(y): 1.0138, norm:1.2362, tok/sec: 99839.28, flops:104.78, batch-reuse:1
@ 5711 train 4.2518 , allloss: 4.2526, dt: 1314.48ms, fracRes: 0.3779, norm(attn): 0.2754, norm(output): 0.5859, norm(x): 0.5361, norm(y): 1.0138, norm:1.2679, tok/sec: 99714.08, flops:104.65, batch-reuse:1
@ 5712 train 4.2147 , allloss: 4.2514, dt: 1307.67ms, fracRes: 0.3759, norm(attn): 0.2754, norm(output): 0.5859, norm(x): 0.5369, norm(y): 1.0136, norm:568.9662, tok/sec: 100233.56, flops:105.20, batch-reuse:1
@ 5713 train 5.0567 , allloss: 5.5002, dt: 1284.79ms, fracRes: 0.3507, norm(attn): 0.3477, norm(output): 0.7188, norm(x): 0.6717, norm(y): 1.0116, norm:11902.6475, tok/sec: 102017.96, flops:107.07, batch-reuse:1
@ 5714 train 5.7749 , allloss: 6.5899, dt: 1315.12ms, fracRes: 0.3335, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.7626, norm(y): 1.0084, norm:20669.2734, tok/sec: 99665.14, flops:104.60, batch-reuse:1
@ 5715 train 4.7691 , allloss: 4.9887, dt: 1332.44ms, fracRes: 0.3670, norm(attn): 0.3105, norm(output): 0.6562, norm(x): 0.6085, norm(y): 1.0122, norm:1986.3566, tok/sec: 98370.00, flops:103.24, batch-reuse:1
@ 5716 train 5.3111 , allloss: 5.8511, dt: 1331.58ms, fracRes: 0.3449, norm(attn): 0.3848, norm(output): 0.8398, norm(x): 0.7924, norm(y): 1.0094, norm:13716.4492, tok/sec: 98433.59, flops:103.31, batch-reuse:1
@ 5717 train 5.4544 , allloss: 5.9726, dt: 1318.95ms, fracRes: 0.3434, norm(attn): 0.3984, norm(output): 0.8359, norm(x): 0.7962, norm(y): 1.0092, norm:1466.7880, tok/sec: 99376.20, flops:104.30, batch-reuse:1
@ 5718 train 6.4717 , allloss: 7.6580, dt: 1328.61ms, fracRes: 0.2930, norm(attn): 0.5156, norm(output): 0.9883, norm(x): 0.9518, norm(y): 1.0025, norm:4727.9258, tok/sec: 98653.52, flops:103.54, batch-reuse:1
@ 5719 train 7.3807 , allloss: 9.1078, dt: 1325.37ms, fracRes: 0.2490, norm(attn): 0.6602, norm(output): 1.1250, norm(x): 1.0882, norm(y): 0.9930, norm:11469.2256, tok/sec: 98894.36, flops:103.79, batch-reuse:1
@ 5720 train 8.3833 , allloss: 11.6060, dt: 1317.42ms, fracRes: 0.1580, norm(attn): 1.0312, norm(output): 1.9531, norm(x): 1.9351, norm(y): 0.9711, norm:5661.9834, tok/sec: 99491.59, flops:104.42, batch-reuse:1
@ 5721 train 8.7706 , allloss: 12.5301, dt: 1293.36ms, fracRes: 0.1374, norm(attn): 1.1484, norm(output): 2.4062, norm(x): 2.3844, norm(y): 0.9691, norm:20761.7910, tok/sec: 101342.24, flops:106.36, batch-reuse:1
@ 5722 train 8.7206 , allloss: 12.6034, dt: 1300.26ms, fracRes: 0.1360, norm(attn): 1.1797, norm(output): 2.2500, norm(x): 2.2441, norm(y): 0.9632, norm:6803.7598, tok/sec: 100804.10, flops:105.80, batch-reuse:1
@ 5723 train 8.8380 , allloss: 12.7793, dt: 1321.50ms, fracRes: 0.1321, norm(attn): 1.2266, norm(output): 2.4688, norm(x): 2.4514, norm(y): 0.9644, norm:1938.2562, tok/sec: 99184.13, flops:104.10, batch-reuse:1
@ 5724 train 8.8094 , allloss: 12.8035, dt: 1327.35ms, fracRes: 0.1308, norm(attn): 1.2266, norm(output): 2.1406, norm(x): 2.1497, norm(y): 0.9584, norm:1828.3365, tok/sec: 98747.28, flops:103.64, batch-reuse:1
@ 5725 train 8.6388 , allloss: 12.5642, dt: 1319.56ms, fracRes: 0.1287, norm(attn): 1.2812, norm(output): 2.3594, norm(x): 2.3779, norm(y): 0.9597, norm:16694.3613, tok/sec: 99330.06, flops:104.25, batch-reuse:1
@ 5726 train 8.7297 , allloss: 12.8222, dt: 1274.79ms, fracRes: 0.1259, norm(attn): 1.3125, norm(output): 2.3438, norm(x): 2.3869, norm(y): 0.9570, norm:1193.7531, tok/sec: 102818.13, flops:107.91, batch-reuse:1
@ 5727 train 8.6666 , allloss: 12.5151, dt: 1299.86ms, fracRes: 0.1230, norm(attn): 1.2891, norm(output): 2.0156, norm(x): 2.0300, norm(y): 0.9519, norm:2864.6895, tok/sec: 100835.44, flops:105.83, batch-reuse:1
@ 5728 train 8.5988 , allloss: 12.4267, dt: 1300.38ms, fracRes: 0.1190, norm(attn): 1.3125, norm(output): 2.0000, norm(x): 2.0229, norm(y): 0.9517, norm:692.0069, tok/sec: 100795.13, flops:105.79, batch-reuse:1
@ 5729 train 8.6400 , allloss: 11.7797, dt: 1290.86ms, fracRes: 0.1267, norm(attn): 1.2969, norm(output): 1.3594, norm(x): 1.3833, norm(y): 0.9423, norm:1582.6909, tok/sec: 101538.87, flops:106.57, batch-reuse:1
@ 5730 train 8.5766 , allloss: 11.7582, dt: 1282.55ms, fracRes: 0.1268, norm(attn): 1.3594, norm(output): 1.2969, norm(x): 1.3398, norm(y): 0.9391, norm:2369.4309, tok/sec: 102196.49, flops:107.26, batch-reuse:1
@ 5731 train 8.5180 , allloss: 11.6341, dt: 1316.64ms, fracRes: 0.1274, norm(attn): 1.3125, norm(output): 1.2344, norm(x): 1.2542, norm(y): 0.9420, norm:1241.9230, tok/sec: 99550.65, flops:104.48, batch-reuse:1
@ 5732 train 8.4573 , allloss: 11.5158, dt: 1320.04ms, fracRes: 0.1228, norm(attn): 1.3203, norm(output): 1.1953, norm(x): 1.2287, norm(y): 0.9420, norm:3061.3997, tok/sec: 99293.62, flops:104.21, batch-reuse:1
@ 5733 train 8.4520 , allloss: 11.3344, dt: 1305.82ms, fracRes: 0.1250, norm(attn): 1.4219, norm(output): 1.5156, norm(x): 1.5489, norm(y): 0.9416, norm:1078.9799, tok/sec: 100375.34, flops:105.35, batch-reuse:1
@ 5734 train 8.3147 , allloss: 11.1515, dt: 1318.84ms, fracRes: 0.1257, norm(attn): 1.5156, norm(output): 1.6797, norm(x): 1.7149, norm(y): 0.9422, norm:627.3094, tok/sec: 99384.23, flops:104.31, batch-reuse:1
@ 5735 train 8.4162 , allloss: 11.1107, dt: 1329.58ms, fracRes: 0.1175, norm(attn): 1.5703, norm(output): 1.9453, norm(x): 1.9813, norm(y): 0.9457, norm:22656.6562, tok/sec: 98581.48, flops:103.46, batch-reuse:1
@ 5736 train 8.4033 , allloss: 11.1046, dt: 1307.09ms, fracRes: 0.1201, norm(attn): 1.5703, norm(output): 2.4219, norm(x): 2.4459, norm(y): 0.9531, norm:38805.6523, tok/sec: 100277.49, flops:105.24, batch-reuse:1
@ 5737 train 8.4796 , allloss: 11.2896, dt: 1335.67ms, fracRes: 0.1156, norm(attn): 1.5859, norm(output): 2.7188, norm(x): 2.7639, norm(y): 0.9593, norm:8007.5156, tok/sec: 98132.36, flops:102.99, batch-reuse:1
@ 5738 train 8.5435 , allloss: 11.5112, dt: 1292.85ms, fracRes: 0.1148, norm(attn): 1.5547, norm(output): 3.1562, norm(x): 3.1896, norm(y): 0.9708, norm:7249.9741, tok/sec: 101382.35, flops:106.40, batch-reuse:1
@ 5739 train 8.5141 , allloss: 11.5688, dt: 1324.15ms, fracRes: 0.1193, norm(attn): 1.5469, norm(output): 3.6875, norm(x): 3.7104, norm(y): 0.9777, norm:3320.5366, tok/sec: 98986.03, flops:103.89, batch-reuse:1
@ 5740 train 8.5190 , allloss: 11.5928, dt: 1323.28ms, fracRes: 0.1116, norm(attn): 1.5859, norm(output): 3.8594, norm(x): 3.9160, norm(y): 0.9739, norm:4056.6357, tok/sec: 99050.91, flops:103.96, batch-reuse:1
@ 5741 train 8.5402 , allloss: 11.5389, dt: 1307.72ms, fracRes: 0.1085, norm(attn): 1.5859, norm(output): 3.7969, norm(x): 3.8193, norm(y): 0.9693, norm:9543.1396, tok/sec: 100229.67, flops:105.19, batch-reuse:1
@ 5742 train 8.4480 , allloss: 11.4760, dt: 1323.27ms, fracRes: 0.1075, norm(attn): 1.6328, norm(output): 3.6406, norm(x): 3.6892, norm(y): 0.9652, norm:4442.1328, tok/sec: 99051.55, flops:103.96, batch-reuse:1
@ 5743 train 8.5988 , allloss: 11.6772, dt: 1304.60ms, fracRes: 0.1049, norm(attn): 1.6719, norm(output): 3.0781, norm(x): 3.1316, norm(y): 0.9581, norm:3264.6426, tok/sec: 100468.80, flops:105.44, batch-reuse:1
@ 5744 train 8.2900 , allloss: 11.4871, dt: 1297.32ms, fracRes: 0.1018, norm(attn): 1.6719, norm(output): 2.9531, norm(x): 2.9965, norm(y): 0.9547, norm:2246.7808, tok/sec: 101032.94, flops:106.04, batch-reuse:1
@ 5745 train 8.3936 , allloss: 11.6841, dt: 1320.34ms, fracRes: 0.0999, norm(attn): 1.7500, norm(output): 2.7500, norm(x): 2.7866, norm(y): 0.9504, norm:1214.6630, tok/sec: 99271.46, flops:104.19, batch-reuse:1
@ 5746 train 8.2996 , allloss: 11.4800, dt: 1313.11ms, fracRes: 0.1012, norm(attn): 1.7656, norm(output): 2.6250, norm(x): 2.6660, norm(y): 0.9499, norm:5059.4341, tok/sec: 99818.09, flops:104.76, batch-reuse:1
@ 5747 train 8.2933 , allloss: 11.4921, dt: 1309.33ms, fracRes: 0.1024, norm(attn): 1.7812, norm(output): 2.5469, norm(x): 2.5847, norm(y): 0.9484, norm:6316.7148, tok/sec: 100105.83, flops:105.06, batch-reuse:1
@ 5748 train 8.2798 , allloss: 11.5294, dt: 1298.14ms, fracRes: 0.1053, norm(attn): 1.7734, norm(output): 2.5469, norm(x): 2.5932, norm(y): 0.9491, norm:3008.9663, tok/sec: 100968.96, flops:105.97, batch-reuse:1
@ 5749 train 8.2516 , allloss: 11.4323, dt: 1318.69ms, fracRes: 0.1045, norm(attn): 1.7656, norm(output): 2.3906, norm(x): 2.4198, norm(y): 0.9469, norm:2931.5615, tok/sec: 99395.30, flops:104.32, batch-reuse:1
@ 5750 train 8.3608 , allloss: 11.4945, dt: 1342.18ms, fracRes: 0.1066, norm(attn): 1.7344, norm(output): 2.6406, norm(x): 2.6853, norm(y): 0.9503, norm:6349.2661, tok/sec: 97655.72, flops:102.49, batch-reuse:1
@ 5751 train 8.2033 , allloss: 11.2429, dt: 1292.49ms, fracRes: 0.1131, norm(attn): 1.6953, norm(output): 2.2500, norm(x): 2.2998, norm(y): 0.9474, norm:1896.9358, tok/sec: 101410.36, flops:106.43, batch-reuse:1
@ 5752 train 8.1503 , allloss: 11.1920, dt: 1287.27ms, fracRes: 0.1125, norm(attn): 1.7109, norm(output): 2.2969, norm(x): 2.3346, norm(y): 0.9469, norm:1660.0802, tok/sec: 101821.77, flops:106.86, batch-reuse:1
@ 5753 train 8.0731 , allloss: 11.2012, dt: 1315.37ms, fracRes: 0.1078, norm(attn): 1.6797, norm(output): 2.1875, norm(x): 2.2488, norm(y): 0.9449, norm:369.1295, tok/sec: 99646.19, flops:104.58, batch-reuse:1
@ 5754 train 8.1325 , allloss: 11.1909, dt: 1333.73ms, fracRes: 0.1055, norm(attn): 1.6875, norm(output): 1.7266, norm(x): 1.7860, norm(y): 0.9391, norm:642.4756, tok/sec: 98274.55, flops:103.14, batch-reuse:1
@ 5755 train 7.9786 , allloss: 11.0382, dt: 1318.88ms, fracRes: 0.1112, norm(attn): 1.6719, norm(output): 1.6172, norm(x): 1.6664, norm(y): 0.9374, norm:1384.4587, tok/sec: 99381.32, flops:104.30, batch-reuse:1
@ 5756 train 8.1365 , allloss: 11.1545, dt: 1327.59ms, fracRes: 0.1075, norm(attn): 1.6172, norm(output): 1.9219, norm(x): 1.9932, norm(y): 0.9416, norm:848.6595, tok/sec: 98729.63, flops:103.62, batch-reuse:1
@ 5757 train 8.0646 , allloss: 10.8984, dt: 1312.12ms, fracRes: 0.1056, norm(attn): 1.5391, norm(output): 1.5312, norm(x): 1.6016, norm(y): 0.9388, norm:1723.6552, tok/sec: 99893.47, flops:104.84, batch-reuse:1
@ 5758 train 8.1594 , allloss: 10.7092, dt: 1327.17ms, fracRes: 0.1067, norm(attn): 1.5234, norm(output): 1.8047, norm(x): 1.8573, norm(y): 0.9430, norm:7300.3306, tok/sec: 98760.72, flops:103.65, batch-reuse:1
@ 5759 train 8.0932 , allloss: 10.4820, dt: 1285.43ms, fracRes: 0.1081, norm(attn): 1.4375, norm(output): 1.5547, norm(x): 1.6136, norm(y): 0.9443, norm:602.2916, tok/sec: 101967.63, flops:107.02, batch-reuse:1
@ 5760 train 8.0854 , allloss: 10.4665, dt: 1302.82ms, fracRes: 0.1072, norm(attn): 1.4141, norm(output): 2.0469, norm(x): 2.1132, norm(y): 0.9529, norm:716.9304, tok/sec: 100606.56, flops:105.59, batch-reuse:1
@ 5761 train 8.0618 , allloss: 10.4184, dt: 1327.04ms, fracRes: 0.1125, norm(attn): 1.3438, norm(output): 2.0000, norm(x): 2.0537, norm(y): 0.9566, norm:35709.3945, tok/sec: 98770.09, flops:103.66, batch-reuse:1
@ 5762 train 8.2176 , allloss: 10.6444, dt: 1304.55ms, fracRes: 0.1205, norm(attn): 1.2266, norm(output): 2.8281, norm(x): 2.8535, norm(y): 0.9764, norm:2782.4587, tok/sec: 100473.20, flops:105.45, batch-reuse:1
@ 5763 train 8.2479 , allloss: 10.5918, dt: 1332.28ms, fracRes: 0.1299, norm(attn): 1.1562, norm(output): 2.1406, norm(x): 2.1817, norm(y): 0.9755, norm:1410.5397, tok/sec: 98381.52, flops:103.25, batch-reuse:1
@ 5764 train 8.0823 , allloss: 10.4975, dt: 1303.07ms, fracRes: 0.1276, norm(attn): 1.1641, norm(output): 2.5156, norm(x): 2.5596, norm(y): 0.9804, norm:331.6200, tok/sec: 100586.89, flops:105.57, batch-reuse:1
@ 5765 train 8.1035 , allloss: 10.4018, dt: 1307.93ms, fracRes: 0.1431, norm(attn): 1.0391, norm(output): 2.5781, norm(x): 2.6240, norm(y): 0.9935, norm:544.9681, tok/sec: 100213.61, flops:105.18, batch-reuse:1
@ 5766 train 8.3146 , allloss: 10.6369, dt: 1311.65ms, fracRes: 0.1406, norm(attn): 1.0312, norm(output): 2.8125, norm(x): 2.8457, norm(y): 0.9958, norm:164.3108, tok/sec: 99929.44, flops:104.88, batch-reuse:1
@ 5767 train 8.4149 , allloss: 10.7436, dt: 1296.68ms, fracRes: 0.1304, norm(attn): 1.1250, norm(output): 3.5312, norm(x): 3.6002, norm(y): 0.9968, norm:168.4935, tok/sec: 101082.67, flops:106.09, batch-reuse:1
@ 5768 train 8.1314 , allloss: 10.4178, dt: 1326.40ms, fracRes: 0.1311, norm(attn): 1.1016, norm(output): 3.1875, norm(x): 3.3331, norm(y): 0.9948, norm:879.8773, tok/sec: 98818.13, flops:103.71, batch-reuse:1
@ 5769 train 8.0994 , allloss: 10.3439, dt: 1345.45ms, fracRes: 0.1326, norm(attn): 1.1797, norm(output): 3.6719, norm(x): 3.7589, norm(y): 0.9962, norm:28.5930, tok/sec: 97418.87, flops:102.24, batch-reuse:1
@ 5770 train 8.5280 , allloss: 10.5614, dt: 1320.09ms, fracRes: 0.1315, norm(attn): 1.1562, norm(output): 3.2500, norm(x): 3.3378, norm(y): 0.9938, norm:99.3988, tok/sec: 99289.87, flops:104.21, batch-reuse:1
@ 5771 train 8.2716 , allloss: 10.1916, dt: 1289.96ms, fracRes: 0.1288, norm(attn): 1.2969, norm(output): 3.1562, norm(x): 3.2405, norm(y): 0.9852, norm:55.7888, tok/sec: 101609.19, flops:106.64, batch-reuse:1
@ 5772 train 8.2722 , allloss: 10.1063, dt: 1311.03ms, fracRes: 0.1243, norm(attn): 1.2422, norm(output): 3.2188, norm(x): 3.3484, norm(y): 0.9925, norm:111.6544, tok/sec: 99976.45, flops:104.93, batch-reuse:1
@ 5773 train 8.0739 , allloss: 9.9877, dt: 1307.81ms, fracRes: 0.1257, norm(attn): 1.2188, norm(output): 3.4844, norm(x): 3.6353, norm(y): 0.9986, norm:409.9994, tok/sec: 100222.80, flops:105.19, batch-reuse:1
@ 5774 train 8.1565 , allloss: 10.0066, dt: 1337.51ms, fracRes: 0.1197, norm(attn): 1.2500, norm(output): 4.1562, norm(x): 4.3032, norm(y): 1.0066, norm:50.2218, tok/sec: 97997.35, flops:102.85, batch-reuse:1
@ 5775 train 8.1361 , allloss: 10.0253, dt: 1331.60ms, fracRes: 0.1112, norm(attn): 1.2812, norm(output): 4.7188, norm(x): 4.8183, norm(y): 1.0083, norm:485.0019, tok/sec: 98432.07, flops:103.31, batch-reuse:1
@ 5776 train 8.0218 , allloss: 9.9918, dt: 1314.09ms, fracRes: 0.1047, norm(attn): 1.3672, norm(output): 5.5000, norm(x): 5.6236, norm(y): 1.0114, norm:40.2663, tok/sec: 99743.26, flops:104.68, batch-reuse:1
@ 5777 train 8.0055 , allloss: 9.9128, dt: 1315.93ms, fracRes: 0.1013, norm(attn): 1.6094, norm(output): 7.0312, norm(x): 7.1882, norm(y): 1.0080, norm:487.7026, tok/sec: 99604.00, flops:104.54, batch-reuse:1
@ 5778 train 8.0563 , allloss: 10.0697, dt: 1295.75ms, fracRes: 0.1074, norm(attn): 1.7109, norm(output): 7.4062, norm(x): 7.5452, norm(y): 1.0057, norm:53.6259, tok/sec: 101155.21, flops:106.16, batch-reuse:1
@ 5779 train 8.0174 , allloss: 9.8777, dt: 1271.13ms, fracRes: 0.1125, norm(attn): 1.6328, norm(output): 7.8750, norm(x): 8.0207, norm(y): 1.0097, norm:89.8789, tok/sec: 103114.93, flops:108.22, batch-reuse:1
@ 5780 train 7.8493 , allloss: 9.4908, dt: 1289.36ms, fracRes: 0.1059, norm(attn): 1.7031, norm(output): 9.4375, norm(x): 9.6131, norm(y): 1.0124, norm:47.5628, tok/sec: 101656.61, flops:106.69, batch-reuse:1
@ 5781 train 7.8871 , allloss: 9.3094, dt: 1300.14ms, fracRes: 0.1066, norm(attn): 1.6484, norm(output): 8.1250, norm(x): 8.2049, norm(y): 1.0143, norm:44.6120, tok/sec: 100814.06, flops:105.81, batch-reuse:1
@ 5782 train 7.8944 , allloss: 9.2812, dt: 1284.92ms, fracRes: 0.1223, norm(attn): 1.4844, norm(output): 6.2188, norm(x): 6.3369, norm(y): 1.0155, norm:21.7430, tok/sec: 102007.66, flops:107.06, batch-reuse:1
@ 5783 train 7.9028 , allloss: 9.3612, dt: 1334.51ms, fracRes: 0.1285, norm(attn): 1.3516, norm(output): 5.0000, norm(x): 5.1735, norm(y): 1.0166, norm:24.5185, tok/sec: 98217.32, flops:103.08, batch-reuse:1
@ 5784 train 8.0023 , allloss: 9.3871, dt: 1308.34ms, fracRes: 0.1410, norm(attn): 1.3125, norm(output): 4.7500, norm(x): 4.9323, norm(y): 1.0174, norm:20.9452, tok/sec: 100181.56, flops:105.14, batch-reuse:1
@ 5785 train 7.9708 , allloss: 9.3741, dt: 1323.87ms, fracRes: 0.1498, norm(attn): 1.2344, norm(output): 4.5000, norm(x): 4.6753, norm(y): 1.0184, norm:35.7024, tok/sec: 99006.47, flops:103.91, batch-reuse:1
@ 5786 train 7.8880 , allloss: 9.1592, dt: 1331.65ms, fracRes: 0.1542, norm(attn): 1.1953, norm(output): 4.1875, norm(x): 4.3835, norm(y): 1.0187, norm:28.5514, tok/sec: 98428.56, flops:103.30, batch-reuse:1
@ 5787 train 7.7852 , allloss: 8.9897, dt: 1344.12ms, fracRes: 0.1570, norm(attn): 1.2031, norm(output): 4.5000, norm(x): 4.7504, norm(y): 1.0196, norm:14.5722, tok/sec: 97514.81, flops:102.34, batch-reuse:1
@ 5788 train 7.7632 , allloss: 8.9224, dt: 1343.73ms, fracRes: 0.1782, norm(attn): 1.1094, norm(output): 3.8281, norm(x): 4.1100, norm(y): 1.0191, norm:106.4975, tok/sec: 97543.74, flops:102.37, batch-reuse:1
@ 5789 train 7.8917 , allloss: 8.9700, dt: 1340.21ms, fracRes: 0.1728, norm(attn): 1.1484, norm(output): 4.2500, norm(x): 4.6066, norm(y): 1.0202, norm:40.6993, tok/sec: 97799.46, flops:102.64, batch-reuse:1
@ 5790 train 7.8125 , allloss: 8.8276, dt: 1316.76ms, fracRes: 0.1880, norm(attn): 1.0781, norm(output): 4.1250, norm(x): 4.4453, norm(y): 1.0207, norm:13.0746, tok/sec: 99541.15, flops:104.47, batch-reuse:1
@ 5791 train 7.7847 , allloss: 8.7708, dt: 1318.86ms, fracRes: 0.1936, norm(attn): 1.0703, norm(output): 3.7500, norm(x): 4.1859, norm(y): 1.0209, norm:11.1331, tok/sec: 99382.51, flops:104.30, batch-reuse:1
@ 5792 train 7.8409 , allloss: 8.7580, dt: 1287.10ms, fracRes: 0.2153, norm(attn): 0.9961, norm(output): 3.6875, norm(x): 4.1966, norm(y): 1.0219, norm:17.1802, tok/sec: 101835.16, flops:106.88, batch-reuse:1
@ 5793 train 7.8408 , allloss: 8.7768, dt: 1309.14ms, fracRes: 0.2262, norm(attn): 0.9648, norm(output): 3.7812, norm(x): 4.3478, norm(y): 1.0222, norm:16.5455, tok/sec: 100120.53, flops:105.08, batch-reuse:1
@ 5794 train 7.8552 , allloss: 8.6973, dt: 1334.88ms, fracRes: 0.2393, norm(attn): 0.8789, norm(output): 2.8281, norm(x): 3.5321, norm(y): 1.0221, norm:6.4027, tok/sec: 98190.35, flops:103.05, batch-reuse:1
@ 5795 train 7.8469 , allloss: 8.7521, dt: 1299.93ms, fracRes: 0.2281, norm(attn): 0.9297, norm(output): 3.4062, norm(x): 4.0222, norm(y): 1.0221, norm:1008.8378, tok/sec: 100829.85, flops:105.82, batch-reuse:1
@ 5796 train 8.1648 , allloss: 8.9175, dt: 1317.75ms, fracRes: 0.2645, norm(attn): 0.8164, norm(output): 2.6250, norm(x): 3.4695, norm(y): 1.0232, norm:26.3348, tok/sec: 99466.77, flops:104.39, batch-reuse:1
@ 5797 train 7.9248 , allloss: 8.7688, dt: 1289.43ms, fracRes: 0.2396, norm(attn): 0.9062, norm(output): 3.5312, norm(x): 4.2957, norm(y): 1.0221, norm:34.6236, tok/sec: 101650.73, flops:106.68, batch-reuse:1
@ 5798 train 7.8644 , allloss: 8.6615, dt: 1316.79ms, fracRes: 0.2570, norm(attn): 0.8594, norm(output): 3.5000, norm(x): 4.4808, norm(y): 1.0237, norm:63.5316, tok/sec: 99538.97, flops:104.47, batch-reuse:1
@ 5799 train 7.9413 , allloss: 8.6842, dt: 1306.52ms, fracRes: 0.2648, norm(attn): 0.8008, norm(output): 2.5000, norm(x): 3.3673, norm(y): 1.0228, norm:33.8133, tok/sec: 100321.58, flops:105.29, batch-reuse:1
@ 5800 train 7.8711 , allloss: 8.5823, dt: 1289.23ms, fracRes: 0.2711, norm(attn): 0.7773, norm(output): 2.5938, norm(x): 3.5610, norm(y): 1.0225, norm:24.4232, tok/sec: 101666.75, flops:106.70, batch-reuse:1
@ 5801 train 7.8255 , allloss: 8.5092, dt: 1290.91ms, fracRes: 0.2800, norm(attn): 0.7344, norm(output): 2.1719, norm(x): 3.2201, norm(y): 1.0237, norm:6.0393, tok/sec: 101534.37, flops:106.56, batch-reuse:1
@ 5802 train 7.8737 , allloss: 8.5003, dt: 1291.95ms, fracRes: 0.2781, norm(attn): 0.7500, norm(output): 2.1406, norm(x): 3.1268, norm(y): 1.0240, norm:17.7299, tok/sec: 101452.99, flops:106.48, batch-reuse:1
@ 5803 train 7.8451 , allloss: 8.4055, dt: 1310.44ms, fracRes: 0.2702, norm(attn): 0.7617, norm(output): 2.1094, norm(x): 3.0630, norm(y): 1.0235, norm:21.8216, tok/sec: 100021.33, flops:104.97, batch-reuse:1
@ 5804 train 7.7732 , allloss: 8.3468, dt: 1320.40ms, fracRes: 0.2775, norm(attn): 0.7500, norm(output): 2.2656, norm(x): 3.3016, norm(y): 1.0232, norm:90.7120, tok/sec: 99267.09, flops:104.18, batch-reuse:1
@ 5805 train 7.8030 , allloss: 8.3795, dt: 1319.15ms, fracRes: 0.2753, norm(attn): 0.7344, norm(output): 2.0312, norm(x): 2.9982, norm(y): 1.0236, norm:68.8433, tok/sec: 99360.72, flops:104.28, batch-reuse:1
@ 5806 train 7.8268 , allloss: 8.3440, dt: 1314.27ms, fracRes: 0.2836, norm(attn): 0.7188, norm(output): 2.0312, norm(x): 3.0701, norm(y): 1.0238, norm:21.6607, tok/sec: 99730.01, flops:104.67, batch-reuse:1
@ 5807 train 7.6830 , allloss: 8.2349, dt: 1289.00ms, fracRes: 0.2677, norm(attn): 0.7383, norm(output): 2.2188, norm(x): 3.1990, norm(y): 1.0225, norm:8.0159, tok/sec: 101685.08, flops:106.72, batch-reuse:1
@ 5808 train 7.8668 , allloss: 8.5233, dt: 1322.15ms, fracRes: 0.2431, norm(attn): 0.8242, norm(output): 2.8906, norm(x): 4.0638, norm(y): 1.0238, norm:23.3777, tok/sec: 99135.23, flops:104.04, batch-reuse:1
@ 5809 train 7.8834 , allloss: 8.5837, dt: 1338.70ms, fracRes: 0.2391, norm(attn): 0.8438, norm(output): 2.8438, norm(x): 3.8367, norm(y): 1.0220, norm:36.5473, tok/sec: 97909.96, flops:102.76, batch-reuse:1
@ 5810 train 7.6616 , allloss: 8.1913, dt: 1332.06ms, fracRes: 0.2727, norm(attn): 0.7500, norm(output): 2.5781, norm(x): 3.6138, norm(y): 1.0231, norm:4.1227, tok/sec: 98397.80, flops:103.27, batch-reuse:1
@ 5811 train 7.7897 , allloss: 8.3172, dt: 1323.39ms, fracRes: 0.2839, norm(attn): 0.6992, norm(output): 2.4375, norm(x): 3.4559, norm(y): 1.0232, norm:16.5271, tok/sec: 99042.65, flops:103.95, batch-reuse:1
@ 5812 train 7.7942 , allloss: 8.2524, dt: 1295.36ms, fracRes: 0.3102, norm(attn): 0.6367, norm(output): 1.7891, norm(x): 2.8234, norm(y): 1.0240, norm:33.0334, tok/sec: 101186.06, flops:106.20, batch-reuse:1
@ 5813 train 7.7427 , allloss: 8.2238, dt: 1295.35ms, fracRes: 0.3156, norm(attn): 0.6328, norm(output): 1.7812, norm(x): 2.8242, norm(y): 1.0243, norm:4.8693, tok/sec: 101186.49, flops:106.20, batch-reuse:1
@ 5814 train 7.7818 , allloss: 8.2754, dt: 1311.07ms, fracRes: 0.3143, norm(attn): 0.6406, norm(output): 1.9062, norm(x): 3.0385, norm(y): 1.0237, norm:9.7471, tok/sec: 99973.07, flops:104.92, batch-reuse:1
@ 5815 train 7.7438 , allloss: 8.2361, dt: 1292.09ms, fracRes: 0.3246, norm(attn): 0.5859, norm(output): 1.8516, norm(x): 2.9946, norm(y): 1.0230, norm:38.6496, tok/sec: 101441.82, flops:106.47, batch-reuse:1
@ 5816 train 7.7232 , allloss: 8.1476, dt: 1289.87ms, fracRes: 0.3518, norm(attn): 0.5820, norm(output): 1.5938, norm(x): 2.7935, norm(y): 1.0225, norm:26.7094, tok/sec: 101616.35, flops:106.65, batch-reuse:1
@ 5817 train 7.6619 , allloss: 8.1343, dt: 1321.01ms, fracRes: 0.3488, norm(attn): 0.6367, norm(output): 1.8828, norm(x): 3.1617, norm(y): 1.0219, norm:5.2744, tok/sec: 99220.85, flops:104.13, batch-reuse:1
@ 5818 train 7.7184 , allloss: 8.1810, dt: 1308.64ms, fracRes: 0.3437, norm(attn): 0.6523, norm(output): 2.1875, norm(x): 3.3441, norm(y): 1.0217, norm:6.0828, tok/sec: 100158.74, flops:105.12, batch-reuse:1
@ 5819 train 7.6938 , allloss: 8.2010, dt: 1333.02ms, fracRes: 0.3370, norm(attn): 0.7109, norm(output): 2.2969, norm(x): 3.4307, norm(y): 1.0214, norm:10.6312, tok/sec: 98327.23, flops:103.20, batch-reuse:1
@ 5820 train 7.6086 , allloss: 8.0361, dt: 1308.18ms, fracRes: 0.3507, norm(attn): 0.6797, norm(output): 2.0000, norm(x): 3.0064, norm(y): 1.0217, norm:9.3759, tok/sec: 100194.52, flops:105.16, batch-reuse:1
@ 5821 train 7.6500 , allloss: 8.3287, dt: 1304.17ms, fracRes: 0.2871, norm(attn): 0.8594, norm(output): 3.6562, norm(x): 4.6377, norm(y): 1.0199, norm:59.3898, tok/sec: 100502.34, flops:105.48, batch-reuse:1
@ 5822 train 7.6524 , allloss: 8.1867, dt: 1292.57ms, fracRes: 0.2985, norm(attn): 0.7930, norm(output): 3.0156, norm(x): 3.8912, norm(y): 1.0216, norm:33.8473, tok/sec: 101404.39, flops:106.43, batch-reuse:1
@ 5823 train 7.7053 , allloss: 8.1931, dt: 1303.44ms, fracRes: 0.3114, norm(attn): 0.7148, norm(output): 2.2344, norm(x): 3.2062, norm(y): 1.0225, norm:17.6534, tok/sec: 100558.72, flops:105.54, batch-reuse:1
@ 5824 train 7.6006 , allloss: 8.1300, dt: 1323.52ms, fracRes: 0.3355, norm(attn): 0.6406, norm(output): 2.0000, norm(x): 2.9383, norm(y): 1.0235, norm:36.0321, tok/sec: 99032.76, flops:103.94, batch-reuse:1
@ 5825 train 7.7138 , allloss: 8.1682, dt: 1290.31ms, fracRes: 0.3298, norm(attn): 0.6719, norm(output): 2.0156, norm(x): 3.0437, norm(y): 1.0238, norm:80.4089, tok/sec: 101581.63, flops:106.61, batch-reuse:1
@ 5826 train 7.6206 , allloss: 8.1578, dt: 1308.60ms, fracRes: 0.2851, norm(attn): 0.7617, norm(output): 3.0000, norm(x): 4.2507, norm(y): 1.0233, norm:9.9873, tok/sec: 100161.72, flops:105.12, batch-reuse:1
@ 5827 train 7.6262 , allloss: 8.2726, dt: 1316.60ms, fracRes: 0.2819, norm(attn): 0.7266, norm(output): 2.2656, norm(x): 3.2912, norm(y): 1.0235, norm:16.3926, tok/sec: 99553.50, flops:104.48, batch-reuse:1
@ 5828 train 7.7375 , allloss: 8.2501, dt: 1306.18ms, fracRes: 0.2705, norm(attn): 0.6953, norm(output): 2.2031, norm(x): 3.4690, norm(y): 1.0237, norm:7.6263, tok/sec: 100347.71, flops:105.32, batch-reuse:1
@ 5829 train 7.6033 , allloss: 7.9751, dt: 1335.35ms, fracRes: 0.2927, norm(attn): 0.6484, norm(output): 1.9141, norm(x): 3.5959, norm(y): 1.0245, norm:50.1329, tok/sec: 98155.40, flops:103.02, batch-reuse:1
@ 5830 train 7.6531 , allloss: 8.0039, dt: 1323.93ms, fracRes: 0.2907, norm(attn): 0.6719, norm(output): 2.1406, norm(x): 3.5902, norm(y): 1.0235, norm:164.6958, tok/sec: 99002.43, flops:103.90, batch-reuse:1
@ 5831 train 7.6309 , allloss: 8.0251, dt: 1339.13ms, fracRes: 0.2715, norm(attn): 0.7344, norm(output): 2.6719, norm(x): 4.6029, norm(y): 1.0233, norm:234.2139, tok/sec: 97878.46, flops:102.73, batch-reuse:1
@ 5832 train 7.6867 , allloss: 8.0628, dt: 1307.74ms, fracRes: 0.2476, norm(attn): 0.8086, norm(output): 3.2188, norm(x): 6.2872, norm(y): 1.0232, norm:9.2349, tok/sec: 100227.77, flops:105.19, batch-reuse:1
@ 5833 train 7.6505 , allloss: 8.0276, dt: 1324.15ms, fracRes: 0.2362, norm(attn): 0.8633, norm(output): 3.6875, norm(x): 7.1530, norm(y): 1.0238, norm:32.1985, tok/sec: 98985.92, flops:103.89, batch-reuse:1
@ 5834 train 7.5898 , allloss: 7.9666, dt: 1314.75ms, fracRes: 0.2284, norm(attn): 0.9414, norm(output): 4.0312, norm(x): 7.7047, norm(y): 1.0231, norm:8.1409, tok/sec: 99693.70, flops:104.63, batch-reuse:1
@ 5835 train 7.6503 , allloss: 8.0129, dt: 1297.58ms, fracRes: 0.2339, norm(attn): 0.9883, norm(output): 4.0000, norm(x): 7.5321, norm(y): 1.0226, norm:6.4776, tok/sec: 101012.32, flops:106.01, batch-reuse:1
@ 5836 train 7.6723 , allloss: 8.0151, dt: 1315.44ms, fracRes: 0.2367, norm(attn): 0.9922, norm(output): 4.0312, norm(x): 7.5198, norm(y): 1.0225, norm:13.8121, tok/sec: 99640.81, flops:104.57, batch-reuse:1
@ 5837 train 7.6447 , allloss: 7.9604, dt: 1344.70ms, fracRes: 0.2418, norm(attn): 1.0000, norm(output): 4.0625, norm(x): 7.3717, norm(y): 1.0223, norm:8.5963, tok/sec: 97473.10, flops:102.30, batch-reuse:1
@ 5838 train 7.8098 , allloss: 8.1005, dt: 1332.09ms, fracRes: 0.2544, norm(attn): 1.0156, norm(output): 4.1875, norm(x): 7.5668, norm(y): 1.0219, norm:3.6851, tok/sec: 98395.59, flops:103.27, batch-reuse:1
@ 5839 train 7.5320 , allloss: 7.8189, dt: 1325.03ms, fracRes: 0.2568, norm(attn): 1.0469, norm(output): 4.1250, norm(x): 7.4741, norm(y): 1.0212, norm:9.4523, tok/sec: 98919.82, flops:103.82, batch-reuse:1
@ 5840 train 7.5548 , allloss: 7.8234, dt: 1312.19ms, fracRes: 0.2578, norm(attn): 1.0469, norm(output): 4.2500, norm(x): 7.6663, norm(y): 1.0213, norm:4.1493, tok/sec: 99888.02, flops:104.83, batch-reuse:1
@ 5841 train 7.5509 , allloss: 7.8020, dt: 1331.47ms, fracRes: 0.2680, norm(attn): 1.0703, norm(output): 4.3125, norm(x): 8.0922, norm(y): 1.0211, norm:4.4660, tok/sec: 98441.34, flops:103.32, batch-reuse:1
@ 5842 train 7.6117 , allloss: 7.8493, dt: 1329.77ms, fracRes: 0.2736, norm(attn): 1.0703, norm(output): 4.5000, norm(x): 8.6274, norm(y): 1.0214, norm:2.2381, tok/sec: 98567.33, flops:103.45, batch-reuse:1
@ 5843 train 7.5198 , allloss: 7.7485, dt: 1323.49ms, fracRes: 0.2732, norm(attn): 1.0625, norm(output): 4.6875, norm(x): 9.0355, norm(y): 1.0216, norm:4.8093, tok/sec: 99035.13, flops:103.94, batch-reuse:1
@ 5844 train 7.6160 , allloss: 7.8345, dt: 1281.70ms, fracRes: 0.2720, norm(attn): 1.0625, norm(output): 4.7500, norm(x): 9.3202, norm(y): 1.0217, norm:13.4768, tok/sec: 102264.46, flops:107.33, batch-reuse:1
@ 5845 train 7.5417 , allloss: 7.7538, dt: 1300.35ms, fracRes: 0.2716, norm(attn): 1.0625, norm(output): 4.9688, norm(x): 9.6338, norm(y): 1.0223, norm:1.6493, tok/sec: 100797.83, flops:105.79, batch-reuse:1
@ 5846 train 7.5902 , allloss: 7.7897, dt: 1307.23ms, fracRes: 0.2750, norm(attn): 1.0547, norm(output): 5.0938, norm(x): 9.7753, norm(y): 1.0227, norm:2.3884, tok/sec: 100266.63, flops:105.23, batch-reuse:1
@ 5847 train 7.5822 , allloss: 7.7736, dt: 1318.98ms, fracRes: 0.2762, norm(attn): 1.0469, norm(output): 5.0938, norm(x): 9.4692, norm(y): 1.0228, norm:2.4119, tok/sec: 99374.07, flops:104.29, batch-reuse:1
@ 5848 train 7.5291 , allloss: 7.7178, dt: 1296.18ms, fracRes: 0.2762, norm(attn): 1.0312, norm(output): 5.0625, norm(x): 9.5312, norm(y): 1.0231, norm:1.4910, tok/sec: 101122.09, flops:106.13, batch-reuse:1
@ 5849 train 7.4211 , allloss: 7.5987, dt: 1311.20ms, fracRes: 0.2823, norm(attn): 1.0156, norm(output): 5.0938, norm(x): 9.5690, norm(y): 1.0234, norm:1.8594, tok/sec: 99963.75, flops:104.91, batch-reuse:1
@ 5850 train 7.4734 , allloss: 7.6427, dt: 1336.77ms, fracRes: 0.2842, norm(attn): 0.9922, norm(output): 5.0938, norm(x): 9.5484, norm(y): 1.0239, norm:28.8318, tok/sec: 98051.13, flops:102.91, batch-reuse:1
@ 5851 train 7.5599 , allloss: 7.7229, dt: 1332.63ms, fracRes: 0.2849, norm(attn): 0.9570, norm(output): 4.9375, norm(x): 9.1882, norm(y): 1.0242, norm:5.4337, tok/sec: 98355.62, flops:103.23, batch-reuse:1
@ 5852 train 7.6673 , allloss: 7.8298, dt: 1330.52ms, fracRes: 0.2852, norm(attn): 0.9414, norm(output): 4.8438, norm(x): 8.8548, norm(y): 1.0243, norm:8.1625, tok/sec: 98512.13, flops:103.39, batch-reuse:1
@ 5853 train 7.5288 , allloss: 7.6870, dt: 1330.95ms, fracRes: 0.2848, norm(attn): 0.9258, norm(output): 4.8125, norm(x): 8.7241, norm(y): 1.0249, norm:2.8046, tok/sec: 98480.19, flops:103.36, batch-reuse:1
@ 5854 train 7.5626 , allloss: 7.7041, dt: 1309.50ms, fracRes: 0.2842, norm(attn): 0.9023, norm(output): 4.6875, norm(x): 8.2926, norm(y): 1.0253, norm:2.8031, tok/sec: 100092.93, flops:105.05, batch-reuse:1
@ 5855 train 7.6915 , allloss: 7.8297, dt: 1314.93ms, fracRes: 0.2857, norm(attn): 0.8984, norm(output): 4.4062, norm(x): 7.4607, norm(y): 1.0245, norm:2.0992, tok/sec: 99679.62, flops:104.62, batch-reuse:1
@ 5856 train 7.5632 , allloss: 7.6944, dt: 1319.93ms, fracRes: 0.2842, norm(attn): 0.9180, norm(output): 4.8750, norm(x): 8.5614, norm(y): 1.0251, norm:7.1169, tok/sec: 99302.37, flops:104.22, batch-reuse:1
@ 5857 train 7.5959 , allloss: 7.7214, dt: 1322.41ms, fracRes: 0.2812, norm(attn): 0.9258, norm(output): 5.2812, norm(x): 9.5480, norm(y): 1.0258, norm:2.9924, tok/sec: 99116.20, flops:104.02, batch-reuse:1
@ 5858 train 7.5993 , allloss: 7.7175, dt: 1300.29ms, fracRes: 0.2810, norm(attn): 0.9336, norm(output): 5.4688, norm(x): 10.1361, norm(y): 1.0260, norm:4.8420, tok/sec: 100802.08, flops:105.79, batch-reuse:1
@ 5859 train 7.6135 , allloss: 7.7306, dt: 1325.41ms, fracRes: 0.2812, norm(attn): 0.9688, norm(output): 5.6875, norm(x): 10.6687, norm(y): 1.0262, norm:3.2026, tok/sec: 98891.65, flops:103.79, batch-reuse:1
@ 5860 train 7.6558 , allloss: 7.7687, dt: 1336.39ms, fracRes: 0.2792, norm(attn): 0.9805, norm(output): 5.8125, norm(x): 10.9729, norm(y): 1.0265, norm:1.8609, tok/sec: 98078.91, flops:102.94, batch-reuse:1
@ 5861 train 7.4985 , allloss: 7.6054, dt: 1342.23ms, fracRes: 0.2761, norm(attn): 0.9961, norm(output): 5.9688, norm(x): 11.4364, norm(y): 1.0267, norm:2.7044, tok/sec: 97652.37, flops:102.49, batch-reuse:1
@ 5862 train 7.5523 , allloss: 7.6527, dt: 1342.32ms, fracRes: 0.2744, norm(attn): 0.9961, norm(output): 6.0938, norm(x): 11.8141, norm(y): 1.0269, norm:2.3904, tok/sec: 97646.18, flops:102.48, batch-reuse:1
@ 5863 train 7.4590 , allloss: 7.5589, dt: 1338.63ms, fracRes: 0.2732, norm(attn): 1.0000, norm(output): 6.0938, norm(x): 11.8872, norm(y): 1.0268, norm:3.9886, tok/sec: 97914.83, flops:102.76, batch-reuse:1
@ 5864 train 7.4550 , allloss: 7.5458, dt: 1335.84ms, fracRes: 0.2741, norm(attn): 0.9922, norm(output): 6.2500, norm(x): 12.0537, norm(y): 1.0276, norm:2.0643, tok/sec: 98119.55, flops:102.98, batch-reuse:1
@ 5865 train 7.4058 , allloss: 7.4957, dt: 1317.86ms, fracRes: 0.2776, norm(attn): 1.0000, norm(output): 6.3438, norm(x): 12.3268, norm(y): 1.0275, norm:4.2923, tok/sec: 99458.02, flops:104.38, batch-reuse:1
@ 5866 train 7.4867 , allloss: 7.5715, dt: 1285.86ms, fracRes: 0.2831, norm(attn): 0.9844, norm(output): 6.4062, norm(x): 12.5913, norm(y): 1.0278, norm:3.9084, tok/sec: 101933.48, flops:106.98, batch-reuse:1
@ 5867 train 7.4400 , allloss: 7.5238, dt: 1328.07ms, fracRes: 0.2862, norm(attn): 0.9883, norm(output): 6.4688, norm(x): 12.7642, norm(y): 1.0280, norm:2.8552, tok/sec: 98693.79, flops:103.58, batch-reuse:1
@ 5868 train 7.4611 , allloss: 7.5461, dt: 1316.03ms, fracRes: 0.2911, norm(attn): 0.9609, norm(output): 6.4688, norm(x): 12.4694, norm(y): 1.0285, norm:2.7711, tok/sec: 99596.62, flops:104.53, batch-reuse:1
@ 5869 train 7.4908 , allloss: 7.5705, dt: 1305.23ms, fracRes: 0.2901, norm(attn): 0.9492, norm(output): 6.4688, norm(x): 12.3270, norm(y): 1.0286, norm:3.0181, tok/sec: 100420.95, flops:105.39, batch-reuse:1
@ 5870 train 7.3911 , allloss: 7.4661, dt: 1323.85ms, fracRes: 0.2859, norm(attn): 0.9102, norm(output): 6.3438, norm(x): 11.8439, norm(y): 1.0282, norm:2.4373, tok/sec: 99008.04, flops:103.91, batch-reuse:1
@ 5871 train 7.3482 , allloss: 7.4306, dt: 1323.69ms, fracRes: 0.2861, norm(attn): 0.8633, norm(output): 6.0312, norm(x): 11.2542, norm(y): 1.0282, norm:7.0172, tok/sec: 99019.79, flops:103.92, batch-reuse:1
@ 5872 train 7.1913 , allloss: 7.2712, dt: 1303.57ms, fracRes: 0.2989, norm(attn): 0.8047, norm(output): 5.8438, norm(x): 10.7367, norm(y): 1.0281, norm:17.2145, tok/sec: 100548.58, flops:105.53, batch-reuse:1
@ 5873 train 7.0494 , allloss: 7.1707, dt: 1324.33ms, fracRes: 0.3054, norm(attn): 0.7461, norm(output): 5.4375, norm(x): 9.9794, norm(y): 1.0279, norm:120.6207, tok/sec: 98972.37, flops:103.87, batch-reuse:1
@ 5874 train 6.9652 , allloss: 7.1060, dt: 1312.41ms, fracRes: 0.3092, norm(attn): 0.6953, norm(output): 5.1250, norm(x): 9.3761, norm(y): 1.0279, norm:2.5436, tok/sec: 99871.33, flops:104.82, batch-reuse:1
@ 5875 train 7.0797 , allloss: 7.1903, dt: 1290.96ms, fracRes: 0.3441, norm(attn): 0.6758, norm(output): 4.8438, norm(x): 9.1112, norm(y): 1.0275, norm:6.5498, tok/sec: 101531.03, flops:106.56, batch-reuse:1
@ 5876 train 6.6639 , allloss: 6.7648, dt: 1306.12ms, fracRes: 0.3515, norm(attn): 0.5742, norm(output): 3.9375, norm(x): 7.3087, norm(y): 1.0275, norm:195.6111, tok/sec: 100352.45, flops:105.32, batch-reuse:1
@ 5877 train 6.7597 , allloss: 6.8675, dt: 1302.91ms, fracRes: 0.3513, norm(attn): 0.5195, norm(output): 3.4219, norm(x): 6.3750, norm(y): 1.0276, norm:6.0824, tok/sec: 100599.60, flops:105.58, batch-reuse:1
@ 5878 train 6.1617 , allloss: 6.2540, dt: 1291.93ms, fracRes: 0.3732, norm(attn): 0.3984, norm(output): 2.2344, norm(x): 3.9490, norm(y): 1.0261, norm:235.9166, tok/sec: 101454.57, flops:106.48, batch-reuse:1
@ 5879 train 6.1008 , allloss: 6.1555, dt: 1301.60ms, fracRes: 0.3992, norm(attn): 0.3008, norm(output): 1.2812, norm(x): 2.1682, norm(y): 1.0253, norm:12.9101, tok/sec: 100700.73, flops:105.69, batch-reuse:1
@ 5880 train 5.8269 , allloss: 5.9026, dt: 1308.09ms, fracRes: 0.3852, norm(attn): 0.3301, norm(output): 1.5469, norm(x): 2.7360, norm(y): 1.0257, norm:5.9019, tok/sec: 100201.10, flops:105.16, batch-reuse:1
@ 5881 train 5.6155 , allloss: 5.6667, dt: 1280.36ms, fracRes: 0.4071, norm(attn): 0.2891, norm(output): 1.1562, norm(x): 1.8999, norm(y): 1.0251, norm:1194.7952, tok/sec: 102371.51, flops:107.44, batch-reuse:1
@ 5882 train 5.5732 , allloss: 5.5833, dt: 1290.90ms, fracRes: 0.4248, norm(attn): 0.2383, norm(output): 0.5469, norm(x): 0.8902, norm(y): 1.0250, norm:15.3867, tok/sec: 101535.21, flops:106.56, batch-reuse:1
@ 5883 train 5.6886 , allloss: 5.7062, dt: 1296.20ms, fracRes: 0.4504, norm(attn): 0.2275, norm(output): 0.5781, norm(x): 0.9334, norm(y): 1.0257, norm:3177.6421, tok/sec: 101120.10, flops:106.13, batch-reuse:1
@ 5884 train 6.3496 , allloss: 6.4468, dt: 1339.60ms, fracRes: 0.4715, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.9678, norm(y): 1.0263, norm:30.7393, tok/sec: 97843.92, flops:102.69, batch-reuse:1
@ 5885 train 5.3991 , allloss: 5.4541, dt: 1343.76ms, fracRes: 0.4489, norm(attn): 0.2363, norm(output): 0.5859, norm(x): 0.9881, norm(y): 1.0262, norm:7.5874, tok/sec: 97541.14, flops:102.37, batch-reuse:1
@ 5886 train 5.5292 , allloss: 5.5731, dt: 1313.11ms, fracRes: 0.4869, norm(attn): 0.2021, norm(output): 0.5312, norm(x): 0.9258, norm(y): 1.0255, norm:10.0111, tok/sec: 99818.34, flops:104.76, batch-reuse:1
@ 5887 train 5.4058 , allloss: 5.4414, dt: 1342.66ms, fracRes: 0.4758, norm(attn): 0.2256, norm(output): 0.6758, norm(x): 1.2069, norm(y): 1.0261, norm:5.8413, tok/sec: 97621.21, flops:102.46, batch-reuse:1
@ 5888 train 5.4147 , allloss: 5.4439, dt: 1298.53ms, fracRes: 0.4619, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 1.1817, norm(y): 1.0256, norm:95.6916, tok/sec: 100938.97, flops:105.94, batch-reuse:1
@ 5889 train 5.9217 , allloss: 5.9902, dt: 1291.30ms, fracRes: 0.4565, norm(attn): 0.2480, norm(output): 0.6328, norm(x): 1.0883, norm(y): 1.0255, norm:22.4952, tok/sec: 101503.94, flops:106.53, batch-reuse:1
@ 5890 train 5.8559 , allloss: 6.0810, dt: 1323.30ms, fracRes: 0.4469, norm(attn): 0.2676, norm(output): 0.9023, norm(x): 1.6094, norm(y): 1.0255, norm:31.8001, tok/sec: 99049.34, flops:103.95, batch-reuse:1
@ 5891 train 5.5482 , allloss: 5.6126, dt: 1342.49ms, fracRes: 0.4475, norm(attn): 0.2598, norm(output): 0.7891, norm(x): 1.4029, norm(y): 1.0259, norm:16.0665, tok/sec: 97633.33, flops:102.47, batch-reuse:1
@ 5892 train 5.5954 , allloss: 5.6654, dt: 1345.16ms, fracRes: 0.4421, norm(attn): 0.2812, norm(output): 0.9180, norm(x): 1.5132, norm(y): 1.0257, norm:659.9107, tok/sec: 97439.76, flops:102.26, batch-reuse:1
@ 5893 train 5.6762 , allloss: 5.7284, dt: 1312.51ms, fracRes: 0.4418, norm(attn): 0.2910, norm(output): 0.8828, norm(x): 1.5851, norm(y): 1.0259, norm:86.1830, tok/sec: 99863.35, flops:104.81, batch-reuse:1
@ 5894 train 5.6925 , allloss: 5.7567, dt: 1288.54ms, fracRes: 0.4491, norm(attn): 0.2812, norm(output): 0.7070, norm(x): 1.2574, norm(y): 1.0254, norm:9.5980, tok/sec: 101721.69, flops:106.76, batch-reuse:1
@ 5895 train 5.4090 , allloss: 5.4916, dt: 1318.09ms, fracRes: 0.4394, norm(attn): 0.2812, norm(output): 0.7500, norm(x): 1.3114, norm(y): 1.0257, norm:477.1891, tok/sec: 99441.17, flops:104.37, batch-reuse:1
@ 5896 train 5.4988 , allloss: 5.5547, dt: 1280.83ms, fracRes: 0.4459, norm(attn): 0.2637, norm(output): 0.7930, norm(x): 1.2896, norm(y): 1.0260, norm:12.2781, tok/sec: 102333.82, flops:107.40, batch-reuse:1
@ 5897 train 5.2773 , allloss: 5.3131, dt: 1309.36ms, fracRes: 0.4524, norm(attn): 0.2412, norm(output): 0.5664, norm(x): 0.9548, norm(y): 1.0259, norm:7.0455, tok/sec: 100103.77, flops:105.06, batch-reuse:1
@ 5898 train 5.0683 , allloss: 5.0966, dt: 1309.75ms, fracRes: 0.4597, norm(attn): 0.2344, norm(output): 0.5508, norm(x): 0.9065, norm(y): 1.0260, norm:3.4256, tok/sec: 100073.76, flops:105.03, batch-reuse:1
@ 5899 train 4.8419 , allloss: 4.8856, dt: 1330.61ms, fracRes: 0.4535, norm(attn): 0.2461, norm(output): 0.5273, norm(x): 0.8520, norm(y): 1.0256, norm:3.6067, tok/sec: 98505.42, flops:103.38, batch-reuse:1
@ 5900 train 4.8593 , allloss: 4.8634, dt: 1306.08ms, fracRes: 0.4772, norm(attn): 0.2051, norm(output): 0.5352, norm(x): 0.8539, norm(y): 1.0263, norm:3.6933, tok/sec: 100354.89, flops:105.32, batch-reuse:1
@ 5901 train 4.8381 , allloss: 4.8602, dt: 1318.90ms, fracRes: 0.4739, norm(attn): 0.2129, norm(output): 0.5898, norm(x): 0.8996, norm(y): 1.0261, norm:13.5468, tok/sec: 99379.83, flops:104.30, batch-reuse:1
@ 5902 train 4.7741 , allloss: 4.7754, dt: 1295.92ms, fracRes: 0.4759, norm(attn): 0.2090, norm(output): 0.5312, norm(x): 0.8186, norm(y): 1.0259, norm:4.1372, tok/sec: 101142.35, flops:106.15, batch-reuse:1
@ 5903 train 4.7975 , allloss: 4.8056, dt: 1305.44ms, fracRes: 0.4734, norm(attn): 0.2119, norm(output): 0.5625, norm(x): 0.8546, norm(y): 1.0259, norm:22.1876, tok/sec: 100404.65, flops:105.38, batch-reuse:1
@ 5904 train 4.8621 , allloss: 4.8740, dt: 1292.72ms, fracRes: 0.4689, norm(attn): 0.2285, norm(output): 0.5703, norm(x): 0.9092, norm(y): 1.0258, norm:3.4646, tok/sec: 101392.50, flops:106.41, batch-reuse:1
@ 5905 train 4.6060 , allloss: 4.6184, dt: 1286.37ms, fracRes: 0.4682, norm(attn): 0.2197, norm(output): 0.6016, norm(x): 0.9162, norm(y): 1.0257, norm:6767.1118, tok/sec: 101893.17, flops:106.94, batch-reuse:1
@ 5906 train 4.7083 , allloss: 4.7108, dt: 1300.03ms, fracRes: 0.4706, norm(attn): 0.2148, norm(output): 0.5469, norm(x): 0.8305, norm(y): 1.0255, norm:5.1349, tok/sec: 100822.66, flops:105.82, batch-reuse:1
@ 5907 train 4.6361 , allloss: 4.6373, dt: 1287.86ms, fracRes: 0.4691, norm(attn): 0.2139, norm(output): 0.5312, norm(x): 0.7895, norm(y): 1.0253, norm:2.4863, tok/sec: 101775.03, flops:106.81, batch-reuse:1
@ 5908 train 4.5964 , allloss: 4.5975, dt: 1319.08ms, fracRes: 0.4683, norm(attn): 0.2148, norm(output): 0.5273, norm(x): 0.7759, norm(y): 1.0253, norm:2.5276, tok/sec: 99366.04, flops:104.29, batch-reuse:1
@ 5909 train 4.6448 , allloss: 4.6462, dt: 1311.16ms, fracRes: 0.4678, norm(attn): 0.2109, norm(output): 0.5312, norm(x): 0.7673, norm(y): 1.0251, norm:2.2559, tok/sec: 99966.54, flops:104.92, batch-reuse:1
@ 5910 train 4.5425 , allloss: 4.5440, dt: 1315.86ms, fracRes: 0.4676, norm(attn): 0.2109, norm(output): 0.5312, norm(x): 0.7675, norm(y): 1.0251, norm:2.1327, tok/sec: 99609.14, flops:104.54, batch-reuse:1
@ 5911 train 4.5089 , allloss: 4.5097, dt: 1278.23ms, fracRes: 0.4674, norm(attn): 0.2080, norm(output): 0.5352, norm(x): 0.7601, norm(y): 1.0252, norm:1.9734, tok/sec: 102542.18, flops:107.62, batch-reuse:1
@ 5912 train 4.4438 , allloss: 4.4450, dt: 1301.09ms, fracRes: 0.4686, norm(attn): 0.2061, norm(output): 0.5391, norm(x): 0.7531, norm(y): 1.0252, norm:2.1577, tok/sec: 100740.37, flops:105.73, batch-reuse:1
@ 5913 train 4.5914 , allloss: 4.5926, dt: 1301.76ms, fracRes: 0.4704, norm(attn): 0.2051, norm(output): 0.5430, norm(x): 0.7491, norm(y): 1.0248, norm:2.1594, tok/sec: 100688.28, flops:105.67, batch-reuse:1
@ 5914 train 4.3507 , allloss: 4.3518, dt: 1289.12ms, fracRes: 0.4719, norm(attn): 0.2041, norm(output): 0.5312, norm(x): 0.7379, norm(y): 1.0248, norm:2.0076, tok/sec: 101675.43, flops:106.71, batch-reuse:1
@ 5915 train 4.3611 , allloss: 4.3623, dt: 1321.48ms, fracRes: 0.4682, norm(attn): 0.2031, norm(output): 0.5352, norm(x): 0.7335, norm(y): 1.0247, norm:1.6434, tok/sec: 99185.54, flops:104.10, batch-reuse:1
@ 5916 train 4.1981 , allloss: 4.2000, dt: 1344.95ms, fracRes: 0.4635, norm(attn): 0.2041, norm(output): 0.5430, norm(x): 0.7320, norm(y): 1.0245, norm:1.9267, tok/sec: 97454.82, flops:102.28, batch-reuse:1
@ 5917 train 4.3333 , allloss: 4.3348, dt: 1307.03ms, fracRes: 0.4647, norm(attn): 0.2031, norm(output): 0.5391, norm(x): 0.7237, norm(y): 1.0245, norm:1.9342, tok/sec: 100282.56, flops:105.25, batch-reuse:1
@ 5918 train 4.3525 , allloss: 4.3545, dt: 1320.58ms, fracRes: 0.4633, norm(attn): 0.2021, norm(output): 0.5391, norm(x): 0.7193, norm(y): 1.0243, norm:1.5542, tok/sec: 99253.27, flops:104.17, batch-reuse:1
@ 5919 train 4.3979 , allloss: 4.4000, dt: 1320.08ms, fracRes: 0.4619, norm(attn): 0.2021, norm(output): 0.5391, norm(x): 0.7116, norm(y): 1.0242, norm:1.7112, tok/sec: 99290.93, flops:104.21, batch-reuse:1
@ 5920 train 4.2853 , allloss: 4.2871, dt: 1321.52ms, fracRes: 0.4624, norm(attn): 0.2021, norm(output): 0.5391, norm(x): 0.7098, norm(y): 1.0240, norm:1.6055, tok/sec: 99182.97, flops:104.09, batch-reuse:1
@ 5921 train 4.2692 , allloss: 4.2715, dt: 1339.52ms, fracRes: 0.4613, norm(attn): 0.2021, norm(output): 0.5391, norm(x): 0.7015, norm(y): 1.0239, norm:1.4574, tok/sec: 97849.63, flops:102.70, batch-reuse:1
@ 5922 train 4.2533 , allloss: 4.2550, dt: 1329.00ms, fracRes: 0.4622, norm(attn): 0.2021, norm(output): 0.5508, norm(x): 0.7098, norm(y): 1.0239, norm:1.5348, tok/sec: 98624.44, flops:103.51, batch-reuse:1
@ 5923 train 4.3136 , allloss: 4.3164, dt: 1301.68ms, fracRes: 0.4605, norm(attn): 0.2031, norm(output): 0.5547, norm(x): 0.7079, norm(y): 1.0237, norm:1.5996, tok/sec: 100694.85, flops:105.68, batch-reuse:1
@ 5924 train 4.2603 , allloss: 4.2616, dt: 1348.30ms, fracRes: 0.4605, norm(attn): 0.2021, norm(output): 0.5508, norm(x): 0.6996, norm(y): 1.0237, norm:1.2958, tok/sec: 97213.05, flops:102.03, batch-reuse:1
@ 5925 train 4.4390 , allloss: 4.4406, dt: 1345.42ms, fracRes: 0.4615, norm(attn): 0.1992, norm(output): 0.5547, norm(x): 0.7036, norm(y): 1.0238, norm:1.6721, tok/sec: 97420.66, flops:102.24, batch-reuse:1
@ 5926 train 4.2005 , allloss: 4.2022, dt: 1317.84ms, fracRes: 0.4605, norm(attn): 0.1992, norm(output): 0.5508, norm(x): 0.6894, norm(y): 1.0237, norm:1.4700, tok/sec: 99459.55, flops:104.38, batch-reuse:1
@ 5927 train 4.3792 , allloss: 4.3805, dt: 1298.30ms, fracRes: 0.4606, norm(attn): 0.2021, norm(output): 0.5508, norm(x): 0.6918, norm(y): 1.0236, norm:1.7043, tok/sec: 100956.89, flops:105.96, batch-reuse:1
@ 5928 train 4.2017 , allloss: 4.2029, dt: 1282.23ms, fracRes: 0.4607, norm(attn): 0.2012, norm(output): 0.5430, norm(x): 0.6853, norm(y): 1.0233, norm:1.8602, tok/sec: 102221.96, flops:107.28, batch-reuse:1
@ 5929 train 4.2463 , allloss: 4.2476, dt: 1306.37ms, fracRes: 0.4614, norm(attn): 0.2012, norm(output): 0.5508, norm(x): 0.6902, norm(y): 1.0236, norm:1.4304, tok/sec: 100333.18, flops:105.30, batch-reuse:1
@ 5930 train 4.2330 , allloss: 4.2346, dt: 1338.01ms, fracRes: 0.4586, norm(attn): 0.2021, norm(output): 0.5547, norm(x): 0.6943, norm(y): 1.0236, norm:1.5947, tok/sec: 97960.57, flops:102.81, batch-reuse:1
@ 5931 train 4.2129 , allloss: 4.2141, dt: 1324.59ms, fracRes: 0.4602, norm(attn): 0.2002, norm(output): 0.5469, norm(x): 0.6918, norm(y): 1.0239, norm:1.6215, tok/sec: 98952.51, flops:103.85, batch-reuse:1
@ 5932 train 4.1668 , allloss: 4.1676, dt: 1312.87ms, fracRes: 0.4600, norm(attn): 0.2012, norm(output): 0.5547, norm(x): 0.6909, norm(y): 1.0238, norm:1.3899, tok/sec: 99836.54, flops:104.78, batch-reuse:1
@ 5933 train 4.2197 , allloss: 4.2208, dt: 1302.60ms, fracRes: 0.4588, norm(attn): 0.2012, norm(output): 0.5430, norm(x): 0.6924, norm(y): 1.0238, norm:1.5347, tok/sec: 100623.08, flops:105.61, batch-reuse:1
@ 5934 train 4.3297 , allloss: 4.3311, dt: 1283.01ms, fracRes: 0.4594, norm(attn): 0.1982, norm(output): 0.5430, norm(x): 0.6930, norm(y): 1.0240, norm:1.3906, tok/sec: 102160.03, flops:107.22, batch-reuse:1
@ 5935 train 4.1691 , allloss: 4.1708, dt: 1317.97ms, fracRes: 0.4580, norm(attn): 0.2012, norm(output): 0.5547, norm(x): 0.6953, norm(y): 1.0238, norm:1.5097, tok/sec: 99450.18, flops:104.37, batch-reuse:1
@ 5936 train 4.0386 , allloss: 4.0394, dt: 1343.71ms, fracRes: 0.4564, norm(attn): 0.2021, norm(output): 0.5586, norm(x): 0.6939, norm(y): 1.0237, norm:1.4033, tok/sec: 97544.55, flops:102.37, batch-reuse:1
@ 5937 train 4.1781 , allloss: 4.1807, dt: 1326.19ms, fracRes: 0.4565, norm(attn): 0.2012, norm(output): 0.5586, norm(x): 0.6936, norm(y): 1.0239, norm:1.3761, tok/sec: 98833.15, flops:103.73, batch-reuse:1
@ 5938 train 4.2704 , allloss: 4.2715, dt: 1309.91ms, fracRes: 0.4560, norm(attn): 0.2012, norm(output): 0.5586, norm(x): 0.6949, norm(y): 1.0239, norm:1.3070, tok/sec: 100062.18, flops:105.02, batch-reuse:1
@ 5939 train 4.0882 , allloss: 4.0898, dt: 1343.37ms, fracRes: 0.4553, norm(attn): 0.2021, norm(output): 0.5586, norm(x): 0.6922, norm(y): 1.0238, norm:1.4438, tok/sec: 97569.69, flops:102.40, batch-reuse:1
@ 5940 train 4.1260 , allloss: 4.1274, dt: 1335.79ms, fracRes: 0.4568, norm(attn): 0.2012, norm(output): 0.5586, norm(x): 0.6898, norm(y): 1.0238, norm:1.4335, tok/sec: 98123.07, flops:102.98, batch-reuse:1
@ 5941 train 4.0468 , allloss: 4.0480, dt: 1333.23ms, fracRes: 0.4553, norm(attn): 0.2041, norm(output): 0.5547, norm(x): 0.6898, norm(y): 1.0238, norm:1.5690, tok/sec: 98311.34, flops:103.18, batch-reuse:1
@ 5942 train 4.2145 , allloss: 4.2176, dt: 1311.18ms, fracRes: 0.4563, norm(attn): 0.2031, norm(output): 0.5586, norm(x): 0.6907, norm(y): 1.0239, norm:1.2792, tok/sec: 99964.56, flops:104.91, batch-reuse:1
@ 5943 train 4.2047 , allloss: 4.2109, dt: 1304.62ms, fracRes: 0.4546, norm(attn): 0.2021, norm(output): 0.5586, norm(x): 0.6928, norm(y): 1.0238, norm:1.5243, tok/sec: 100467.73, flops:105.44, batch-reuse:1
@ 5944 train 4.1645 , allloss: 4.1654, dt: 1288.78ms, fracRes: 0.4546, norm(attn): 0.2002, norm(output): 0.5586, norm(x): 0.6875, norm(y): 1.0238, norm:1.3474, tok/sec: 101702.48, flops:106.74, batch-reuse:1
@ 5945 train 4.1728 , allloss: 4.1738, dt: 1303.91ms, fracRes: 0.4531, norm(attn): 0.2031, norm(output): 0.5586, norm(x): 0.6866, norm(y): 1.0237, norm:1.4226, tok/sec: 100522.24, flops:105.50, batch-reuse:1
@ 5946 train 4.0796 , allloss: 4.0819, dt: 1286.26ms, fracRes: 0.4539, norm(attn): 0.2031, norm(output): 0.5586, norm(x): 0.6863, norm(y): 1.0237, norm:1.0971, tok/sec: 101901.93, flops:106.95, batch-reuse:1
@ 5947 train 4.1887 , allloss: 4.1903, dt: 1281.18ms, fracRes: 0.4545, norm(attn): 0.2031, norm(output): 0.5508, norm(x): 0.6841, norm(y): 1.0237, norm:1.6447, tok/sec: 102305.98, flops:107.37, batch-reuse:1
@ 5948 train 4.0472 , allloss: 4.0487, dt: 1309.84ms, fracRes: 0.4508, norm(attn): 0.2031, norm(output): 0.5508, norm(x): 0.6815, norm(y): 1.0239, norm:1.2754, tok/sec: 100066.80, flops:105.02, batch-reuse:1
@ 5949 train 4.1759 , allloss: 4.1789, dt: 1318.74ms, fracRes: 0.4510, norm(attn): 0.2041, norm(output): 0.5547, norm(x): 0.6819, norm(y): 1.0237, norm:1.4490, tok/sec: 99391.92, flops:104.31, batch-reuse:1
@ 5950 train 4.1761 , allloss: 4.1777, dt: 1292.09ms, fracRes: 0.4516, norm(attn): 0.2041, norm(output): 0.5547, norm(x): 0.6819, norm(y): 1.0237, norm:1.3938, tok/sec: 101442.04, flops:106.47, batch-reuse:1
@ 5951 train 4.2934 , allloss: 4.2962, dt: 1318.13ms, fracRes: 0.4508, norm(attn): 0.2031, norm(output): 0.5547, norm(x): 0.6819, norm(y): 1.0238, norm:1.2708, tok/sec: 99437.86, flops:104.36, batch-reuse:1
@ 5952 train 4.3476 , allloss: 4.3485, dt: 1311.90ms, fracRes: 0.4514, norm(attn): 0.2031, norm(output): 0.5586, norm(x): 0.6840, norm(y): 1.0238, norm:1.4179, tok/sec: 99910.23, flops:104.86, batch-reuse:1
@ 5953 train 4.3619 , allloss: 4.3625, dt: 1309.84ms, fracRes: 0.4519, norm(attn): 0.2021, norm(output): 0.5586, norm(x): 0.6795, norm(y): 1.0238, norm:1.4253, tok/sec: 100066.80, flops:105.02, batch-reuse:1
@ 5954 train 4.2968 , allloss: 4.2981, dt: 1304.72ms, fracRes: 0.4536, norm(attn): 0.2021, norm(output): 0.5586, norm(x): 0.6806, norm(y): 1.0238, norm:1.4521, tok/sec: 100459.65, flops:105.43, batch-reuse:1
@ 5955 train 4.3685 , allloss: 4.3694, dt: 1310.29ms, fracRes: 0.4534, norm(attn): 0.2031, norm(output): 0.5547, norm(x): 0.6809, norm(y): 1.0237, norm:1.4296, tok/sec: 100033.17, flops:104.99, batch-reuse:1
@ 5956 train 4.3845 , allloss: 4.3856, dt: 1280.56ms, fracRes: 0.4537, norm(attn): 0.2041, norm(output): 0.5586, norm(x): 0.6775, norm(y): 1.0236, norm:1.4357, tok/sec: 102355.01, flops:107.42, batch-reuse:1
@ 5957 train 4.2630 , allloss: 4.2639, dt: 1298.72ms, fracRes: 0.4546, norm(attn): 0.2041, norm(output): 0.5586, norm(x): 0.6769, norm(y): 1.0236, norm:1.3393, tok/sec: 100923.66, flops:105.92, batch-reuse:1
@ 5958 train 4.3569 , allloss: 4.3575, dt: 1298.01ms, fracRes: 0.4541, norm(attn): 0.2031, norm(output): 0.5547, norm(x): 0.6730, norm(y): 1.0237, norm:1.3493, tok/sec: 100979.37, flops:105.98, batch-reuse:1
@ 5959 train 4.2962 , allloss: 4.2974, dt: 1340.08ms, fracRes: 0.4525, norm(attn): 0.2031, norm(output): 0.5547, norm(x): 0.6725, norm(y): 1.0237, norm:1.3894, tok/sec: 97809.17, flops:102.65, batch-reuse:1
@ 5960 train 4.2915 , allloss: 4.2924, dt: 1329.75ms, fracRes: 0.4523, norm(attn): 0.2031, norm(output): 0.5547, norm(x): 0.6708, norm(y): 1.0236, norm:1.3361, tok/sec: 98568.67, flops:103.45, batch-reuse:1
@ 5961 train 4.3067 , allloss: 4.3103, dt: 1320.06ms, fracRes: 0.4535, norm(attn): 0.2051, norm(output): 0.5625, norm(x): 0.6747, norm(y): 1.0233, norm:1.5932, tok/sec: 99292.58, flops:104.21, batch-reuse:1
@ 5962 train 4.3082 , allloss: 4.3092, dt: 1332.00ms, fracRes: 0.4522, norm(attn): 0.2031, norm(output): 0.5586, norm(x): 0.6679, norm(y): 1.0236, norm:1.5326, tok/sec: 98402.67, flops:103.28, batch-reuse:1
@ 5963 train 4.3399 , allloss: 4.3412, dt: 1308.42ms, fracRes: 0.4529, norm(attn): 0.2031, norm(output): 0.5625, norm(x): 0.6709, norm(y): 1.0234, norm:1.9362, tok/sec: 100176.06, flops:105.14, batch-reuse:1
@ 5964 train 4.4199 , allloss: 4.4208, dt: 1329.34ms, fracRes: 0.4497, norm(attn): 0.2031, norm(output): 0.5586, norm(x): 0.6643, norm(y): 1.0234, norm:1.8101, tok/sec: 98599.16, flops:103.48, batch-reuse:1
@ 5965 train 4.3330 , allloss: 4.3338, dt: 1284.76ms, fracRes: 0.4495, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6669, norm(y): 1.0234, norm:1.5034, tok/sec: 102020.36, flops:107.07, batch-reuse:1
@ 5966 train 4.3794 , allloss: 4.3800, dt: 1319.40ms, fracRes: 0.4505, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6670, norm(y): 1.0233, norm:1.7779, tok/sec: 99342.34, flops:104.26, batch-reuse:1
@ 5967 train 4.2935 , allloss: 4.2943, dt: 1316.82ms, fracRes: 0.4497, norm(attn): 0.2041, norm(output): 0.5586, norm(x): 0.6583, norm(y): 1.0232, norm:1.5881, tok/sec: 99536.72, flops:104.47, batch-reuse:1
@ 5968 train 4.2641 , allloss: 4.2652, dt: 1290.14ms, fracRes: 0.4505, norm(attn): 0.2041, norm(output): 0.5586, norm(x): 0.6599, norm(y): 1.0231, norm:1.5995, tok/sec: 101595.30, flops:106.63, batch-reuse:1
@ 5969 train 4.2390 , allloss: 4.2398, dt: 1347.49ms, fracRes: 0.4494, norm(attn): 0.2051, norm(output): 0.5625, norm(x): 0.6601, norm(y): 1.0231, norm:1.4404, tok/sec: 97271.46, flops:102.09, batch-reuse:1
@ 5970 train 4.3166 , allloss: 4.3174, dt: 1307.90ms, fracRes: 0.4494, norm(attn): 0.2031, norm(output): 0.5625, norm(x): 0.6573, norm(y): 1.0230, norm:1.3318, tok/sec: 100215.67, flops:105.18, batch-reuse:1
@ 5971 train 4.1893 , allloss: 4.1899, dt: 1306.41ms, fracRes: 0.4506, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6583, norm(y): 1.0230, norm:1.4333, tok/sec: 100329.94, flops:105.30, batch-reuse:1
@ 5972 train 4.2488 , allloss: 4.2494, dt: 1303.95ms, fracRes: 0.4493, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6575, norm(y): 1.0229, norm:1.3204, tok/sec: 100519.35, flops:105.50, batch-reuse:1
@ 5973 train 4.2859 , allloss: 4.2865, dt: 1287.19ms, fracRes: 0.4470, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6540, norm(y): 1.0229, norm:1.3440, tok/sec: 101828.34, flops:106.87, batch-reuse:1
@ 5974 train 4.2862 , allloss: 4.2871, dt: 1313.49ms, fracRes: 0.4466, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6543, norm(y): 1.0227, norm:1.4170, tok/sec: 99788.95, flops:104.73, batch-reuse:1
@ 5975 train 4.3777 , allloss: 4.3783, dt: 1347.35ms, fracRes: 0.4485, norm(attn): 0.2031, norm(output): 0.5625, norm(x): 0.6493, norm(y): 1.0227, norm:1.3429, tok/sec: 97281.22, flops:102.10, batch-reuse:1
@ 5976 train 4.5133 , allloss: 4.5151, dt: 1318.43ms, fracRes: 0.4492, norm(attn): 0.2031, norm(output): 0.5664, norm(x): 0.6495, norm(y): 1.0227, norm:1.4874, tok/sec: 99414.97, flops:104.34, batch-reuse:1
@ 5977 train 4.3513 , allloss: 4.3522, dt: 1321.05ms, fracRes: 0.4488, norm(attn): 0.2051, norm(output): 0.5625, norm(x): 0.6483, norm(y): 1.0226, norm:1.7277, tok/sec: 99218.19, flops:104.13, batch-reuse:1
@ 5978 train 4.2593 , allloss: 4.2603, dt: 1308.97ms, fracRes: 0.4474, norm(attn): 0.2051, norm(output): 0.5625, norm(x): 0.6431, norm(y): 1.0225, norm:1.3978, tok/sec: 100133.60, flops:105.09, batch-reuse:1
@ 5979 train 4.3088 , allloss: 4.3100, dt: 1276.07ms, fracRes: 0.4479, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6430, norm(y): 1.0225, norm:1.4689, tok/sec: 102715.05, flops:107.80, batch-reuse:1
@ 5980 train 4.3928 , allloss: 4.3964, dt: 1292.63ms, fracRes: 0.4460, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6419, norm(y): 1.0225, norm:1.8133, tok/sec: 101399.16, flops:106.42, batch-reuse:1
@ 5981 train 4.2602 , allloss: 4.2607, dt: 1300.72ms, fracRes: 0.4487, norm(attn): 0.2041, norm(output): 0.5664, norm(x): 0.6415, norm(y): 1.0223, norm:1.7561, tok/sec: 100768.46, flops:105.76, batch-reuse:1
@ 5982 train 4.2818 , allloss: 4.2830, dt: 1292.30ms, fracRes: 0.4502, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6389, norm(y): 1.0224, norm:1.4907, tok/sec: 101424.99, flops:106.45, batch-reuse:1
@ 5983 train 4.3084 , allloss: 4.3101, dt: 1283.68ms, fracRes: 0.4504, norm(attn): 0.2021, norm(output): 0.5664, norm(x): 0.6379, norm(y): 1.0224, norm:1.4022, tok/sec: 102106.66, flops:107.16, batch-reuse:1
@ 5984 train 4.2060 , allloss: 4.2115, dt: 1305.01ms, fracRes: 0.4499, norm(attn): 0.2031, norm(output): 0.5703, norm(x): 0.6401, norm(y): 1.0222, norm:1.6395, tok/sec: 100437.80, flops:105.41, batch-reuse:1
@ 5985 train 4.2519 , allloss: 4.2524, dt: 1298.94ms, fracRes: 0.4482, norm(attn): 0.2031, norm(output): 0.5664, norm(x): 0.6379, norm(y): 1.0221, norm:1.3345, tok/sec: 100907.03, flops:105.90, batch-reuse:1
@ 5986 train 4.3209 , allloss: 4.3217, dt: 1310.57ms, fracRes: 0.4484, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6355, norm(y): 1.0221, norm:1.4415, tok/sec: 100011.21, flops:104.96, batch-reuse:1
@ 5987 train 4.3098 , allloss: 4.3105, dt: 1319.99ms, fracRes: 0.4475, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6292, norm(y): 1.0221, norm:1.1907, tok/sec: 99297.89, flops:104.21, batch-reuse:1
@ 5988 train 4.3098 , allloss: 4.3108, dt: 1316.37ms, fracRes: 0.4483, norm(attn): 0.2041, norm(output): 0.5664, norm(x): 0.6345, norm(y): 1.0220, norm:1.4386, tok/sec: 99570.77, flops:104.50, batch-reuse:1
@ 5989 train 4.2128 , allloss: 4.2139, dt: 1296.66ms, fracRes: 0.4486, norm(attn): 0.2051, norm(output): 0.5742, norm(x): 0.6380, norm(y): 1.0220, norm:1.1958, tok/sec: 101084.12, flops:106.09, batch-reuse:1
@ 5990 train 4.2095 , allloss: 4.2110, dt: 1309.15ms, fracRes: 0.4474, norm(attn): 0.2041, norm(output): 0.5625, norm(x): 0.6309, norm(y): 1.0220, norm:1.2457, tok/sec: 100119.65, flops:105.08, batch-reuse:1
@ 5991 train 4.2352 , allloss: 4.2357, dt: 1339.93ms, fracRes: 0.4468, norm(attn): 0.2061, norm(output): 0.5664, norm(x): 0.6305, norm(y): 1.0219, norm:1.2840, tok/sec: 97820.21, flops:102.66, batch-reuse:1
@ 5992 train 4.2292 , allloss: 4.2312, dt: 1341.39ms, fracRes: 0.4453, norm(attn): 0.2051, norm(output): 0.5664, norm(x): 0.6301, norm(y): 1.0218, norm:1.1862, tok/sec: 97713.57, flops:102.55, batch-reuse:1
@ 5993 train 4.3666 , allloss: 4.3673, dt: 1330.57ms, fracRes: 0.4448, norm(attn): 0.2041, norm(output): 0.5664, norm(x): 0.6317, norm(y): 1.0220, norm:1.5015, tok/sec: 98507.81, flops:103.39, batch-reuse:1
@ 5994 train 4.2068 , allloss: 4.2075, dt: 1320.02ms, fracRes: 0.4441, norm(attn): 0.2041, norm(output): 0.5664, norm(x): 0.6290, norm(y): 1.0217, norm:1.4036, tok/sec: 99295.34, flops:104.21, batch-reuse:1
@ 5995 train 4.2807 , allloss: 4.2818, dt: 1323.17ms, fracRes: 0.4451, norm(attn): 0.2051, norm(output): 0.5664, norm(x): 0.6272, norm(y): 1.0216, norm:1.2447, tok/sec: 99058.76, flops:103.96, batch-reuse:1
@ 5996 train 4.3405 , allloss: 4.3412, dt: 1295.13ms, fracRes: 0.4468, norm(attn): 0.2041, norm(output): 0.5664, norm(x): 0.6269, norm(y): 1.0216, norm:1.3975, tok/sec: 101203.48, flops:106.21, batch-reuse:1
@ 5997 train 4.3221 , allloss: 4.3230, dt: 1318.69ms, fracRes: 0.4478, norm(attn): 0.2031, norm(output): 0.5703, norm(x): 0.6279, norm(y): 1.0216, norm:1.2826, tok/sec: 99395.79, flops:104.32, batch-reuse:1
@ 5998 train 4.2622 , allloss: 4.2627, dt: 1332.27ms, fracRes: 0.4472, norm(attn): 0.2021, norm(output): 0.5664, norm(x): 0.6193, norm(y): 1.0217, norm:1.3002, tok/sec: 98382.50, flops:103.25, batch-reuse:1
@ 5999 train 4.2707 , allloss: 4.2718, dt: 1294.48ms, fracRes: 0.4462, norm(attn): 0.2031, norm(output): 0.5664, norm(x): 0.6217, norm(y): 1.0216, norm:1.1416, tok/sec: 101254.87, flops:106.27, batch-reuse:1
@ 6000 val 4.2150
@ 6000 train 4.4508 , allloss: 4.4517, dt: 1925.99ms, fracRes: 0.4461, norm(attn): 0.2031, norm(output): 0.5742, norm(x): 0.6231, norm(y): 1.0215, norm:1.2250, tok/sec: 68054.39, flops:71.42, batch-reuse:1
@ 6001 train 4.2738 , allloss: 4.2746, dt: 1275.07ms, fracRes: 0.4460, norm(attn): 0.2031, norm(output): 0.5703, norm(x): 0.6220, norm(y): 1.0215, norm:1.2288, tok/sec: 102796.26, flops:107.89, batch-reuse:1
@ 6002 train 4.3614 , allloss: 4.3619, dt: 1279.40ms, fracRes: 0.4475, norm(attn): 0.2041, norm(output): 0.5742, norm(x): 0.6278, norm(y): 1.0214, norm:1.2754, tok/sec: 102448.19, flops:107.52, batch-reuse:1
@ 6003 train 4.2462 , allloss: 4.2469, dt: 1308.78ms, fracRes: 0.4450, norm(attn): 0.2031, norm(output): 0.5703, norm(x): 0.6186, norm(y): 1.0214, norm:1.1606, tok/sec: 100147.92, flops:105.11, batch-reuse:1
@ 6004 train 4.2447 , allloss: 4.2463, dt: 1328.47ms, fracRes: 0.4448, norm(attn): 0.2031, norm(output): 0.5703, norm(x): 0.6178, norm(y): 1.0213, norm:1.2667, tok/sec: 98663.86, flops:103.55, batch-reuse:1
@ 6005 train 4.3048 , allloss: 4.3056, dt: 1336.29ms, fracRes: 0.4455, norm(attn): 0.2021, norm(output): 0.5703, norm(x): 0.6147, norm(y): 1.0214, norm:1.0994, tok/sec: 98086.26, flops:102.94, batch-reuse:1
@ 6006 train 4.2605 , allloss: 4.2623, dt: 1299.46ms, fracRes: 0.4451, norm(attn): 0.2031, norm(output): 0.5781, norm(x): 0.6170, norm(y): 1.0212, norm:1.2679, tok/sec: 100866.22, flops:105.86, batch-reuse:1
@ 6007 train 4.2611 , allloss: 4.2616, dt: 1322.24ms, fracRes: 0.4460, norm(attn): 0.2031, norm(output): 0.5781, norm(x): 0.6200, norm(y): 1.0212, norm:1.2442, tok/sec: 99128.78, flops:104.04, batch-reuse:1
@ 6008 train 4.3126 , allloss: 4.3133, dt: 1301.03ms, fracRes: 0.4456, norm(attn): 0.2031, norm(output): 0.5703, norm(x): 0.6161, norm(y): 1.0212, norm:1.1089, tok/sec: 100745.08, flops:105.73, batch-reuse:1
@ 6009 train 4.3395 , allloss: 4.3403, dt: 1317.45ms, fracRes: 0.4453, norm(attn): 0.2021, norm(output): 0.5703, norm(x): 0.6165, norm(y): 1.0212, norm:1.1596, tok/sec: 99488.95, flops:104.42, batch-reuse:1
@ 6010 train 4.2593 , allloss: 4.2598, dt: 1336.01ms, fracRes: 0.4444, norm(attn): 0.2041, norm(output): 0.5703, norm(x): 0.6183, norm(y): 1.0211, norm:1.0856, tok/sec: 98107.14, flops:102.97, batch-reuse:1
@ 6011 train 4.2362 , allloss: 4.2373, dt: 1338.79ms, fracRes: 0.4465, norm(attn): 0.2031, norm(output): 0.5781, norm(x): 0.6181, norm(y): 1.0211, norm:1.1219, tok/sec: 97903.18, flops:102.75, batch-reuse:1
@ 6012 train 4.2550 , allloss: 4.2565, dt: 1334.30ms, fracRes: 0.4457, norm(attn): 0.2031, norm(output): 0.5781, norm(x): 0.6160, norm(y): 1.0210, norm:1.2441, tok/sec: 98232.99, flops:103.10, batch-reuse:1
@ 6013 train 4.2719 , allloss: 4.2727, dt: 1325.26ms, fracRes: 0.4451, norm(attn): 0.2041, norm(output): 0.5859, norm(x): 0.6160, norm(y): 1.0211, norm:1.1561, tok/sec: 98902.58, flops:103.80, batch-reuse:1
@ 6014 train 4.2264 , allloss: 4.2272, dt: 1282.92ms, fracRes: 0.4438, norm(attn): 0.2031, norm(output): 0.5820, norm(x): 0.6158, norm(y): 1.0211, norm:1.2167, tok/sec: 102166.92, flops:107.23, batch-reuse:1
@ 6015 train 4.2956 , allloss: 4.2965, dt: 1287.98ms, fracRes: 0.4457, norm(attn): 0.2031, norm(output): 0.5820, norm(x): 0.6175, norm(y): 1.0211, norm:1.2423, tok/sec: 101765.32, flops:106.80, batch-reuse:1
@ 6016 train 4.2440 , allloss: 4.2449, dt: 1307.04ms, fracRes: 0.4461, norm(attn): 0.2031, norm(output): 0.5820, norm(x): 0.6173, norm(y): 1.0210, norm:1.0727, tok/sec: 100281.55, flops:105.25, batch-reuse:1
@ 6017 train 4.3140 , allloss: 4.3146, dt: 1284.22ms, fracRes: 0.4429, norm(attn): 0.2051, norm(output): 0.5703, norm(x): 0.6109, norm(y): 1.0212, norm:1.2514, tok/sec: 102063.87, flops:107.12, batch-reuse:1
@ 6018 train 4.1334 , allloss: 4.1345, dt: 1317.22ms, fracRes: 0.4434, norm(attn): 0.2041, norm(output): 0.5820, norm(x): 0.6171, norm(y): 1.0208, norm:1.3978, tok/sec: 99506.36, flops:104.43, batch-reuse:1
@ 6019 train 4.1507 , allloss: 4.1517, dt: 1319.27ms, fracRes: 0.4420, norm(attn): 0.2051, norm(output): 0.5898, norm(x): 0.6174, norm(y): 1.0209, norm:1.2331, tok/sec: 99351.78, flops:104.27, batch-reuse:1
@ 6020 train 4.2934 , allloss: 4.2945, dt: 1303.84ms, fracRes: 0.4432, norm(attn): 0.2041, norm(output): 0.5820, norm(x): 0.6155, norm(y): 1.0209, norm:1.3434, tok/sec: 100527.31, flops:105.51, batch-reuse:1
@ 6021 train 4.2337 , allloss: 4.2355, dt: 1283.68ms, fracRes: 0.4429, norm(attn): 0.2041, norm(output): 0.5781, norm(x): 0.6124, norm(y): 1.0209, norm:1.2388, tok/sec: 102106.60, flops:107.16, batch-reuse:1
@ 6022 train 4.1648 , allloss: 4.1652, dt: 1297.73ms, fracRes: 0.4418, norm(attn): 0.2041, norm(output): 0.5703, norm(x): 0.6098, norm(y): 1.0208, norm:1.3489, tok/sec: 101000.83, flops:106.00, batch-reuse:1
@ 6023 train 4.2519 , allloss: 4.2525, dt: 1301.26ms, fracRes: 0.4424, norm(attn): 0.2041, norm(output): 0.5859, norm(x): 0.6107, norm(y): 1.0208, norm:1.1266, tok/sec: 100726.80, flops:105.71, batch-reuse:1
@ 6024 train 4.2135 , allloss: 4.2152, dt: 1306.86ms, fracRes: 0.4446, norm(attn): 0.2031, norm(output): 0.5898, norm(x): 0.6167, norm(y): 1.0207, norm:1.3352, tok/sec: 100295.33, flops:105.26, batch-reuse:1
@ 6025 train 4.2629 , allloss: 4.2636, dt: 1308.19ms, fracRes: 0.4450, norm(attn): 0.2031, norm(output): 0.5820, norm(x): 0.6126, norm(y): 1.0209, norm:1.2766, tok/sec: 100193.32, flops:105.15, batch-reuse:1
@ 6026 train 4.1896 , allloss: 4.1904, dt: 1281.94ms, fracRes: 0.4430, norm(attn): 0.2031, norm(output): 0.5820, norm(x): 0.6104, norm(y): 1.0208, norm:1.1779, tok/sec: 102245.21, flops:107.31, batch-reuse:1
@ 6027 train 4.2414 , allloss: 4.2423, dt: 1311.37ms, fracRes: 0.4439, norm(attn): 0.2031, norm(output): 0.5859, norm(x): 0.6137, norm(y): 1.0208, norm:1.2673, tok/sec: 99950.70, flops:104.90, batch-reuse:1
@ 6028 train 4.3143 , allloss: 4.3149, dt: 1345.97ms, fracRes: 0.4462, norm(attn): 0.2041, norm(output): 0.5859, norm(x): 0.6136, norm(y): 1.0208, norm:1.4263, tok/sec: 97380.97, flops:102.20, batch-reuse:1
@ 6029 train 4.1996 , allloss: 4.2017, dt: 1306.99ms, fracRes: 0.4445, norm(attn): 0.2041, norm(output): 0.5781, norm(x): 0.6127, norm(y): 1.0207, norm:1.6898, tok/sec: 100285.47, flops:105.25, batch-reuse:1
@ 6030 train 4.2048 , allloss: 4.2055, dt: 1300.55ms, fracRes: 0.4449, norm(attn): 0.2041, norm(output): 0.5781, norm(x): 0.6118, norm(y): 1.0206, norm:1.3373, tok/sec: 100781.96, flops:105.77, batch-reuse:1
@ 6031 train 4.4065 , allloss: 4.4070, dt: 1299.96ms, fracRes: 0.4441, norm(attn): 0.2031, norm(output): 0.5781, norm(x): 0.6107, norm(y): 1.0209, norm:1.5769, tok/sec: 100827.52, flops:105.82, batch-reuse:1
@ 6032 train 4.2356 , allloss: 4.2363, dt: 1309.86ms, fracRes: 0.4453, norm(attn): 0.2031, norm(output): 0.5820, norm(x): 0.6112, norm(y): 1.0208, norm:1.5203, tok/sec: 100065.27, flops:105.02, batch-reuse:1
@ 6033 train 4.2859 , allloss: 4.2874, dt: 1332.47ms, fracRes: 0.4450, norm(attn): 0.2021, norm(output): 0.5898, norm(x): 0.6106, norm(y): 1.0208, norm:1.5332, tok/sec: 98367.86, flops:103.24, batch-reuse:1
@ 6034 train 4.3047 , allloss: 4.3056, dt: 1281.47ms, fracRes: 0.4441, norm(attn): 0.2041, norm(output): 0.5859, norm(x): 0.6117, norm(y): 1.0207, norm:1.3567, tok/sec: 102282.40, flops:107.35, batch-reuse:1
@ 6035 train 4.2183 , allloss: 4.2188, dt: 1313.15ms, fracRes: 0.4430, norm(attn): 0.2051, norm(output): 0.5859, norm(x): 0.6109, norm(y): 1.0205, norm:1.4109, tok/sec: 99815.21, flops:104.76, batch-reuse:1
@ 6036 train 4.2946 , allloss: 4.2951, dt: 1320.45ms, fracRes: 0.4416, norm(attn): 0.2041, norm(output): 0.5859, norm(x): 0.6087, norm(y): 1.0206, norm:1.3722, tok/sec: 99263.32, flops:104.18, batch-reuse:1
@ 6037 train 4.1207 , allloss: 4.1215, dt: 1328.80ms, fracRes: 0.4449, norm(attn): 0.2061, norm(output): 0.6016, norm(x): 0.6188, norm(y): 1.0204, norm:1.4172, tok/sec: 98639.08, flops:103.52, batch-reuse:1
@ 6038 train 4.2088 , allloss: 4.2143, dt: 1293.57ms, fracRes: 0.4445, norm(attn): 0.2031, norm(output): 0.5859, norm(x): 0.6107, norm(y): 1.0206, norm:1.5550, tok/sec: 101325.77, flops:106.34, batch-reuse:1
@ 6039 train 4.2325 , allloss: 4.2333, dt: 1328.87ms, fracRes: 0.4455, norm(attn): 0.2041, norm(output): 0.5938, norm(x): 0.6115, norm(y): 1.0205, norm:1.4734, tok/sec: 98633.87, flops:103.52, batch-reuse:1
@ 6040 train 4.2945 , allloss: 4.2962, dt: 1291.53ms, fracRes: 0.4445, norm(attn): 0.2041, norm(output): 0.5977, norm(x): 0.6120, norm(y): 1.0204, norm:1.5342, tok/sec: 101485.79, flops:106.51, batch-reuse:1
@ 6041 train 4.2688 , allloss: 4.2701, dt: 1298.72ms, fracRes: 0.4454, norm(attn): 0.2041, norm(output): 0.5977, norm(x): 0.6102, norm(y): 1.0205, norm:1.5062, tok/sec: 100924.29, flops:105.92, batch-reuse:1
@ 6042 train 4.2301 , allloss: 4.2315, dt: 1318.31ms, fracRes: 0.4436, norm(attn): 0.2031, norm(output): 0.5859, norm(x): 0.6083, norm(y): 1.0206, norm:1.5733, tok/sec: 99424.44, flops:104.35, batch-reuse:1
@ 6043 train 4.0953 , allloss: 4.0959, dt: 1342.69ms, fracRes: 0.4428, norm(attn): 0.2051, norm(output): 0.5859, norm(x): 0.6073, norm(y): 1.0205, norm:1.6156, tok/sec: 97619.18, flops:102.45, batch-reuse:1
@ 6044 train 4.2579 , allloss: 4.2589, dt: 1342.56ms, fracRes: 0.4428, norm(attn): 0.2031, norm(output): 0.5859, norm(x): 0.6067, norm(y): 1.0205, norm:1.3713, tok/sec: 97628.72, flops:102.46, batch-reuse:1
@ 6045 train 4.2084 , allloss: 4.2096, dt: 1323.56ms, fracRes: 0.4427, norm(attn): 0.2031, norm(output): 0.5898, norm(x): 0.6079, norm(y): 1.0205, norm:1.4699, tok/sec: 99029.96, flops:103.93, batch-reuse:1
@ 6046 train 4.2049 , allloss: 4.2057, dt: 1319.41ms, fracRes: 0.4427, norm(attn): 0.2031, norm(output): 0.5938, norm(x): 0.6115, norm(y): 1.0204, norm:1.2474, tok/sec: 99341.37, flops:104.26, batch-reuse:1
@ 6047 train 4.2036 , allloss: 4.2041, dt: 1310.96ms, fracRes: 0.4425, norm(attn): 0.2031, norm(output): 0.5859, norm(x): 0.6024, norm(y): 1.0204, norm:1.2153, tok/sec: 99981.80, flops:104.93, batch-reuse:1
@ 6048 train 4.2765 , allloss: 4.2769, dt: 1311.11ms, fracRes: 0.4442, norm(attn): 0.2041, norm(output): 0.5859, norm(x): 0.6025, norm(y): 1.0206, norm:1.4829, tok/sec: 99970.42, flops:104.92, batch-reuse:1
@ 6049 train 4.2266 , allloss: 4.2277, dt: 1277.75ms, fracRes: 0.4447, norm(attn): 0.2031, norm(output): 0.5898, norm(x): 0.6064, norm(y): 1.0204, norm:1.1872, tok/sec: 102580.30, flops:107.66, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0084, 0.9922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2139, 0.4883, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4883, 0.2637, 0.1357, 0.1128, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.0415, 0.0121, 0.1152, 0.7305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3770, 0.0525, 0.0835, 0.0099, 0.4512, 0.0256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.0508, 0.0588, 0.1289, 0.4180, 0.0874, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.0522, 0.1182, 0.2637, 0.0164, 0.0291, 0.1338, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.0781, 0.0369, 0.0864, 0.1289, 0.1670, 0.1084, 0.1416, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.0542, 0.1309, 0.1816, 0.0684, 0.0248, 0.0315, 0.2539, 0.0537, 0.0457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0186, 0.0125, 0.0060, 0.0161, 0.3203, 0.1621, 0.0322, 0.0044, 0.1475, 0.1504, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.0698, 0.1245, 0.0266, 0.0342, 0.0141, 0.0581, 0.0933, 0.1318, 0.0261, 0.0962, 0.0264, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.0449, 0.1055, 0.0413, 0.0500, 0.0080, 0.0332, 0.1196, 0.2002, 0.0262, 0.0366, 0.0271, 0.0269, 0.0000, 0.0000],
        [0.0869, 0.0449, 0.0327, 0.0437, 0.1104, 0.0496, 0.0378, 0.0728, 0.1650, 0.0522, 0.0581, 0.0432, 0.0527, 0.1494, 0.0000],
        [0.0664, 0.0116, 0.0928, 0.1914, 0.0164, 0.0167, 0.0479, 0.1943, 0.0164, 0.0311, 0.0315, 0.0693, 0.1396, 0.0256, 0.0493]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0105,  0.0373, -0.0355,  ..., -0.0136,  0.0117,  0.0202],
        [ 0.0473,  0.0104, -0.0002,  ..., -0.0100, -0.0028, -0.0279],
        [-0.0064,  0.0129, -0.0011,  ..., -0.0041,  0.0025, -0.0135],
        ...,
        [-0.0350,  0.0225, -0.0123,  ...,  0.0097, -0.0178, -0.0035],
        [ 0.0487, -0.0156, -0.0227,  ...,  0.0347,  0.0121, -0.0095],
        [ 0.0079,  0.0056,  0.0336,  ..., -0.0156, -0.0249,  0.0270]], device='cuda:0', requires_grad=True)
K: tensor([-0.7422,  0.7617,  0.5898, -0.9805, -0.4258,  0.7031,  0.9336,  0.4121, -0.0854, -0.4180,  1.4766,  0.3965,  0.4727,  0.3770, -0.1455, -0.5156, -0.3496, -0.6016, -0.0525,  0.5156,  0.3848, -0.6641, -0.1865,  0.1885,  0.5078,  0.5312,  0.2891, -0.2598, -0.5664,  0.6836, -0.7422, -0.4746,
        -0.5430, -0.5234, -0.6680,  0.8984,  0.5938, -0.4883,  0.4609,  0.5234,  0.5078,  0.1816,  0.2109,  0.4727,  0.3145,  0.2812,  0.0081, -0.3730,  1.4688,  0.7695,  0.5273, -0.2090, -0.5742,  0.8945, -0.3770,  0.8438,  0.0564,  0.1992, -0.8203,  0.5586, -0.1187, -0.3145,  0.5000, -1.1250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0197, -0.0018,  0.0022,  ...,  0.0384,  0.0109, -0.0189],
        [ 0.0096,  0.0320, -0.0242,  ...,  0.0050,  0.0185, -0.0176],
        [ 0.0031, -0.0291,  0.0036,  ...,  0.0475,  0.0079, -0.0247],
        ...,
        [ 0.0224,  0.0132,  0.0007,  ..., -0.0131, -0.0091,  0.0057],
        [-0.0224, -0.0159,  0.0138,  ...,  0.0306, -0.0055,  0.0236],
        [ 0.0259,  0.0068, -0.0112,  ..., -0.0424, -0.0291, -0.0061]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7109,  0.7969, -0.6875, -0.0718,  0.1030, -0.3711,  0.6680,  1.0391, -0.2021,  1.2812, -1.5469,  0.1592, -1.0859, -0.5469, -0.5938, -0.3574, -1.3047, -0.8125, -0.4297,  0.6992,  0.2295, -0.2305, -0.7383,  0.5312, -0.4707, -0.5469, -0.5469,  0.3594, -0.3809, -1.6250, -0.6445, -0.7930,
        -0.8555,  0.0398,  0.0630,  0.2617, -0.3594, -0.1680, -0.8242, -1.0156, -0.1436,  0.4629, -0.2236, -0.7773, -0.2695, -0.2119,  0.2021,  0.4004, -0.5820,  0.9922, -0.0610, -0.3965,  0.8047,  0.1924,  0.0312,  0.2598,  0.8320, -0.5859, -0.4238,  0.7578, -0.0869,  1.1484, -0.2871,  0.6367],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.7812,  0.7422,  1.7891,  1.1484,  3.4062,  2.5781,  0.6758,  0.1992,  1.5625,  1.8203,  3.2656,  2.5156,  0.6172,  1.3594],
        [ 0.0000,  0.8281,  0.3320,  2.9219, -0.6328,  0.6055,  1.4375,  0.7930, -1.1094,  0.1719,  0.5781,  2.3125,  3.0625, -0.1738,  0.9883],
        [ 0.0000, -0.6172, -1.2812, -1.4609, -0.7070, -1.5391, -0.6875, -1.2109, -0.5117, -0.8516,  0.3691, -1.3672, -1.4219, -0.6055, -0.1602],
        [ 0.0000, -0.9023, -2.1250,  0.1216,  1.9688,  0.8906,  0.2480, -1.0156,  1.8516,  1.0547,  1.7891,  0.1885, -0.0771,  1.6953,  0.1289],
        [ 0.0000, -1.9688, -1.5078, -3.6406,  0.1826, -2.6875, -2.3594, -1.2969,  0.7500, -1.4453, -1.1172, -3.7969, -3.9062, -0.9062, -1.8594],
        [ 0.0000, -1.1641, -1.0156, -0.2295,  0.9453, -0.6211, -0.5469, -0.6719,  1.1797,  0.3008,  0.4863, -0.1807, -0.4414,  0.8242, -0.3477],
        [ 0.0000, -1.0234, -0.2061,  0.5938, -2.1875, -1.6094, -0.0815,  0.5156, -1.2969, -1.4922, -1.2422, -0.4902,  0.7227, -1.4375, -0.4844],
        [ 0.0000, -0.2812, -1.0391, -0.1846,  0.2197,  0.4727,  0.0437,  0.3105,  0.3574,  0.1211,  0.3887,  0.1758,  0.1123,  0.8633,  0.6172],
        [ 0.0000, -1.0469, -0.1592,  0.1689, -0.8086, -1.8203, -1.5781,  0.5078, -1.0469, -1.2109, -0.5625, -0.8242, -0.6875, -1.7500, -0.4727],
        [ 0.0000, -0.3945, -1.1328, -0.1396,  2.8438,  2.1719,  0.5508, -1.4453,  2.0781,  2.0938,  1.9453,  0.4082, -0.4609,  1.8750,  0.2070],
        [ 0.0000, -1.4531, -0.8750, -2.4219, -2.1719, -3.0625, -1.6406, -1.1641, -0.8203, -2.4375, -1.1328, -2.4219, -2.6562, -1.8125, -1.3906],
        [ 0.0000, -1.8281, -0.9727, -1.9141, -1.7188, -3.5469, -2.1250, -0.8477, -0.3340, -2.3594, -2.0312, -2.3281, -2.3438, -1.2500, -1.8750],
        [ 0.0000, -0.6602, -0.9805, -0.6875,  0.2383, -0.5664, -0.8320, -0.1777,  0.6367, -0.5078, -0.4043, -0.6992, -0.5039,  0.5391, -0.2080],
        [ 0.0000, -1.7422,  0.3359,  1.0547, -1.3984, -1.3828, -0.3262,  1.0703, -1.3984, -0.7539, -0.7500,  0.0452,  0.7461, -0.9531, -0.2988]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4026],
        [0.3733],
        [0.4007],
        [0.2700],
        [0.5177],
        [0.2406],
        [0.2747],
        [0.0778],
        [0.1782],
        [0.0605],
        [0.2359],
        [0.3014],
        [0.0897],
        [0.0940]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0166, -0.0222, -0.0462,  ...,  0.0405, -0.0227,  0.0256],
        [ 0.0087, -0.0003, -0.0386,  ...,  0.0865, -0.0322,  0.0195],
        [-0.0031, -0.0435, -0.0731,  ...,  0.0657, -0.0368, -0.0028],
        ...,
        [-0.0299,  0.0076,  0.0088,  ...,  0.0073,  0.0255,  0.0499],
        [ 0.0051, -0.0130, -0.0428,  ...,  0.0365,  0.0172,  0.0026],
        [ 0.0083,  0.0352, -0.0012,  ..., -0.0263,  0.0108,  0.0399]], device='cuda:0', requires_grad=True)
K: tensor([-1.0703,  1.9844, -3.9375, -4.2188, -2.3281,  3.0625, -4.1875, -3.1406,  4.0625, -2.1250, -3.9375,  2.3125, -1.4141, -3.3906,  2.1875, -1.9219, -2.0469,  2.0781,  1.3359, -0.9727,  3.2031,  2.4844, -2.7344, -3.1250, -2.6094,  2.5469,  2.8125,  0.9922, -3.7500,  5.0938,  3.2344, -2.7031,
        -2.9062,  3.3438,  0.8320, -2.9062,  1.3438,  3.3906, -1.3594, -1.8359, -4.2500,  2.5938,  1.7734,  3.5625, -3.5469,  2.9375, -1.3125, -2.3906,  3.3438,  2.4844, -3.9375, -2.2344, -4.2500,  3.5000,  2.2812,  3.9062,  1.9609, -2.1250,  3.5312,  1.1016,  2.5781,  2.9531, -1.8906,  2.0938],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0194,  0.0161, -0.0055,  ..., -0.0038,  0.0316,  0.0053],
        [ 0.0149,  0.0168,  0.0432,  ..., -0.0325,  0.0173,  0.0247],
        [ 0.0252,  0.0131,  0.0176,  ..., -0.0317,  0.0451, -0.0018],
        ...,
        [ 0.0024, -0.0319, -0.0106,  ...,  0.0230, -0.0516,  0.0100],
        [-0.0121, -0.0210,  0.0173,  ...,  0.0012, -0.0148,  0.0185],
        [-0.0129, -0.0579,  0.0169,  ...,  0.0212,  0.0036,  0.0100]], device='cuda:0', requires_grad=True)
Q: tensor([ 5.0625, -2.9062,  2.0625,  2.0625,  4.4062, -3.8281,  2.0156,  5.0000, -3.9062,  2.4375,  4.8438, -4.6250,  2.1250,  4.0312, -2.8594,  2.4219,  4.0312, -2.7188, -2.2031,  1.9453, -3.4688, -3.6562,  4.7188,  3.3750,  3.9844, -1.6406, -2.6094, -3.1094,  3.1094, -3.6719, -3.0781,  6.4688,
         4.8438, -3.3594, -1.8438,  3.2031, -3.0156, -4.5938,  2.6875,  3.2656,  3.9375, -5.5625, -3.7812, -5.7500,  4.3750, -0.7969,  3.0625,  3.8125, -2.5938, -3.8438,  3.5000,  2.2969,  1.8828, -3.7344, -2.0312, -3.3594, -1.9141,  3.9062, -3.8906, -2.3594, -0.9922, -3.0156,  3.6406, -1.2188],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000, -436.0000, -188.0000, -272.0000, -418.0000, -378.0000, -330.0000, -224.0000, -358.0000, -330.0000, -460.0000, -300.0000, -306.0000, -374.0000, -172.0000],
        [   0.0000, -187.0000,  -80.5000, -117.0000, -182.0000, -161.0000, -140.0000,  -94.0000, -157.0000, -141.0000, -198.0000, -130.0000, -129.0000, -163.0000,  -74.0000],
        [   0.0000, -280.0000, -116.5000, -172.0000, -270.0000, -242.0000, -214.0000, -143.0000, -230.0000, -209.0000, -296.0000, -190.0000, -196.0000, -240.0000, -110.0000],
        [   0.0000, -428.0000, -185.0000, -266.0000, -410.0000, -372.0000, -326.0000, -221.0000, -352.0000, -324.0000, -454.0000, -294.0000, -302.0000, -368.0000, -172.0000],
        [   0.0000, -358.0000, -156.0000, -222.0000, -344.0000, -310.0000, -272.0000, -184.0000, -296.0000, -272.0000, -380.0000, -246.0000, -251.0000, -310.0000, -143.0000],
        [   0.0000, -316.0000, -136.0000, -197.0000, -304.0000, -272.0000, -240.0000, -162.0000, -260.0000, -239.0000, -336.0000, -217.0000, -221.0000, -272.0000, -126.0000],
        [   0.0000, -169.0000,  -71.0000, -105.0000, -163.0000, -145.0000, -127.0000,  -85.0000, -139.0000, -126.5000, -178.0000, -115.0000, -116.5000, -145.0000,  -66.0000],
        [   0.0000, -384.0000, -167.0000, -240.0000, -368.0000, -334.0000, -292.0000, -198.0000, -316.0000, -292.0000, -408.0000, -264.0000, -270.0000, -330.0000, -153.0000],
        [   0.0000, -290.0000, -125.0000, -181.0000, -280.0000, -251.0000, -220.0000, -148.0000, -239.0000, -218.0000, -306.0000, -199.0000, -203.0000, -250.0000, -115.5000],
        [   0.0000, -438.0000, -189.0000, -272.0000, -418.0000, -380.0000, -334.0000, -227.0000, -358.0000, -330.0000, -460.0000, -300.0000, -308.0000, -374.0000, -175.0000],
        [   0.0000, -288.0000, -124.0000, -180.0000, -278.0000, -250.0000, -219.0000, -147.0000, -239.0000, -217.0000, -304.0000, -198.0000, -202.0000, -250.0000, -115.0000],
        [   0.0000, -260.0000, -110.5000, -160.0000, -249.0000, -223.0000, -197.0000, -134.0000, -213.0000, -194.0000, -274.0000, -177.0000, -181.0000, -222.0000, -102.0000],
        [   0.0000, -392.0000, -170.0000, -244.0000, -374.0000, -340.0000, -298.0000, -202.0000, -320.0000, -298.0000, -416.0000, -270.0000, -276.0000, -336.0000, -156.0000],
        [   0.0000, -181.0000,  -79.0000, -112.5000, -174.0000, -157.0000, -137.0000,  -92.0000, -148.0000, -137.0000, -190.0000, -125.0000, -125.5000, -155.0000,  -72.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0164, -0.0363, -0.0217,  ...,  0.0159,  0.0166,  0.0430],
        [-0.0104,  0.0065,  0.0480,  ..., -0.0208,  0.0305,  0.0056],
        [ 0.0234, -0.0228, -0.0395,  ...,  0.0048, -0.0073,  0.0510],
        ...,
        [ 0.0036,  0.0199,  0.0057,  ..., -0.0549,  0.0171, -0.0320],
        [ 0.0201, -0.0254, -0.0315,  ...,  0.0324, -0.0071,  0.0378],
        [ 0.0183,  0.0114,  0.0210,  ..., -0.0104,  0.0069, -0.0219]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1406, -4.2188, -3.7812,  3.4219,  1.3984,  3.9688,  3.9688,  6.6562,  4.0000, -4.2188, -5.1562, -5.4062,  3.7969, -5.9688,  6.4375, -5.3438,  5.0938,  0.4707, -4.5000, -5.3125,  5.1875, -5.0000, -4.7812,  4.6250,  3.5625, -5.1250, -2.7344, -4.0625, -2.4844, -5.4375, -6.6562, -4.4375,
         6.8750, -1.6797,  5.1562, -6.0625, -1.6250,  5.2812, -5.3125,  6.9375,  5.1250,  3.8281,  0.6680, -5.7812, -3.5469, -4.7500, -3.8281,  4.5000,  6.7500, -4.4062, -5.5625,  0.0150,  5.9688, -5.3438,  5.9688,  5.4062,  5.5000, -4.0938,  4.1562,  4.3750,  4.0938,  5.7812, -5.2812,  4.8125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0531,  0.0174,  0.0310,  ..., -0.0188,  0.0103, -0.0183],
        [-0.0164, -0.0034, -0.0313,  ...,  0.0498, -0.0276,  0.0289],
        [ 0.0006, -0.0021,  0.0297,  ..., -0.0745,  0.0323, -0.0056],
        ...,
        [-0.0093,  0.0036, -0.0079,  ...,  0.0387, -0.0151,  0.0338],
        [-0.0164, -0.0124,  0.0124,  ..., -0.0614,  0.0307, -0.0203],
        [-0.0197,  0.0155, -0.0385,  ...,  0.0671, -0.0275,  0.0052]], device='cuda:0', requires_grad=True)
Q: tensor([-2.8281,  2.7031,  3.4219, -3.2969, -3.1094, -4.3125, -3.7656, -4.5625, -4.1250,  4.0625,  4.9062,  4.6562, -3.6719,  5.7500, -5.2188,  4.7188, -3.6094, -1.3594,  3.9531,  4.4688, -3.2812,  4.6250,  4.6875, -4.0938, -3.6875,  4.5312,  4.1562,  4.6250,  2.2969,  4.4375,  4.8438,  3.7969,
        -5.6562,  2.4219, -3.6094,  4.9688,  2.3438, -5.0000,  3.9062, -5.0312, -4.2188, -3.2188,  0.5312,  5.2500,  2.4375,  3.4219,  3.8281, -4.6562, -4.5625,  4.1250,  4.9062,  0.2539, -4.5000,  4.2500, -4.4375, -3.8438, -4.7500,  2.4688, -3.1562, -3.2344, -5.0000, -4.4375,  3.9688, -4.1562],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.],
        [   0., -556., -332., -398., -520., -484., -412., -340., -444., -464., -460., -388., -470., -448., -288.],
        [   0., -318., -189., -228., -296., -276., -234., -194., -253., -264., -262., -222., -268., -256., -165.],
        [   0., -410., -245., -296., -384., -356., -302., -250., -328., -342., -340., -286., -346., -330., -214.],
        [   0., -532., -316., -378., -496., -460., -392., -322., -422., -442., -436., -370., -448., -426., -274.],
        [   0., -478., -284., -342., -446., -416., -354., -292., -380., -398., -394., -334., -404., -384., -248.],
        [   0., -378., -225., -270., -352., -328., -280., -230., -300., -314., -312., -264., -320., -302., -196.],
        [   0., -314., -188., -224., -292., -270., -230., -191., -249., -262., -256., -218., -264., -251., -163.],
        [   0., -468., -278., -334., -436., -406., -344., -284., -372., -388., -386., -326., -394., -376., -242.],
        [   0., -480., -286., -344., -448., -416., -354., -294., -382., -402., -396., -336., -406., -386., -250.],
        [   0., -460., -274., -330., -430., -400., -340., -282., -366., -384., -380., -322., -390., -370., -239.],
        [   0., -388., -231., -278., -364., -338., -286., -236., -310., -324., -320., -272., -328., -312., -202.],
        [   0., -438., -262., -314., -408., -380., -322., -268., -348., -366., -360., -306., -372., -352., -228.],
        [   0., -466., -276., -332., -434., -404., -344., -284., -370., -388., -384., -324., -394., -374., -241.],
        [   0., -290., -173., -208., -270., -251., -214., -176., -231., -242., -239., -202., -244., -233., -151.]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0396,     0.9609,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0069,     0.9023,     0.0903,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.5352,     0.2559,     0.2051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0165,     0.7852,     0.1235,     0.0356,     0.0378,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.1240,     0.0488,     0.0352,     0.0127,     0.7734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0039,     0.0854,     0.0320,     0.0265,     0.0369,     0.5977,     0.2168,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0062,     0.0466,     0.0204,     0.0149,     0.0018,     0.1807,     0.0417,     0.6875,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0077,     0.0041,     0.0009,     0.0041,     0.3125,     0.0471,     0.6094,     0.0120,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.0137,     0.0095,     0.0056,     0.0026,     0.0474,     0.0518,     0.5117,     0.0378,     0.3164,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0030,     0.0033,     0.0009,     0.0010,     0.0322,     0.0515,     0.2637,     0.0176,     0.5781,     0.0496,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0028,     0.0035,     0.0031,     0.0006,     0.0073,     0.0092,     0.1118,     0.0288,     0.2119,     0.0596,     0.5586,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0022,     0.0019,     0.0008,     0.0001,     0.0107,     0.0029,     0.0649,     0.0027,     0.0952,     0.0082,     0.2305,     0.5781,     0.0000,     0.0000],
        [    0.0001,     0.0004,     0.0003,     0.0001,     0.0002,     0.0124,     0.0018,     0.0237,     0.0004,     0.0308,     0.0040,     0.1094,     0.8008,     0.0176,     0.0000],
        [    0.0001,     0.0007,     0.0007,     0.0002,     0.0005,     0.0025,     0.0039,     0.0204,     0.0073,     0.0388,     0.0228,     0.1260,     0.3828,     0.1738,     0.2188]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0203,  0.0246,  0.0403,  ..., -0.0412,  0.0156, -0.0226],
        [-0.0398, -0.0334,  0.0264,  ..., -0.0593, -0.0367,  0.0183],
        [-0.0534, -0.0500,  0.0344,  ..., -0.0470, -0.0122, -0.0059],
        ...,
        [ 0.0515, -0.0256, -0.0040,  ..., -0.0076, -0.0488,  0.0017],
        [ 0.0309,  0.0593, -0.0061,  ...,  0.0688, -0.0171, -0.0049],
        [ 0.0016, -0.0050,  0.0033,  ...,  0.0198,  0.0347, -0.0031]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6055, -1.8438, -1.7734,  0.5508, -0.9961, -0.3887,  0.8164,  2.7188,  0.4062,  1.7578,  0.5234, -2.2500, -0.3711,  0.6953,  0.4316,  1.2812,  1.9141, -1.5547,  0.5742, -2.0781,  0.8438, -3.5156,  0.2832,  1.7578, -3.0156, -0.5664, -0.1099, -0.6016,  0.5312,  2.1250, -3.5469,  2.0312,
        -0.7305, -2.6406, -2.4375, -2.1562,  1.8281,  2.6562,  0.0496,  0.8789,  3.7188, -0.0183, -2.7344,  2.6406, -1.4141, -0.5781,  1.4375,  0.6016,  0.5078,  0.3945,  0.8086, -2.5469,  2.5469,  0.3613, -1.3359, -2.7500, -1.1562, -2.2344,  1.4688, -0.1064, -2.0469, -1.2344, -1.6094,  0.8203],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0225,  0.0250, -0.0512,  ..., -0.0088, -0.0402, -0.0025],
        [-0.0241,  0.0134,  0.0084,  ..., -0.0106,  0.0035, -0.0377],
        [ 0.0163,  0.0387, -0.0260,  ...,  0.0197, -0.0327,  0.0064],
        ...,
        [-0.0103, -0.0281,  0.0005,  ..., -0.0321,  0.0313,  0.0013],
        [ 0.0229, -0.0159, -0.0009,  ..., -0.0055,  0.0274,  0.0182],
        [ 0.0378,  0.0110,  0.0101,  ..., -0.0319, -0.0239,  0.0347]], device='cuda:0', requires_grad=True)
Q: tensor([-1.4141, -0.3223, -1.7188, -0.8438, -0.5664, -2.9844, -0.7109,  0.3477,  2.8594, -1.4219,  4.8438, -2.1406,  1.7344,  2.9531,  4.3125, -2.2812,  1.0938, -0.4512,  3.8125, -3.2656,  0.6172, -2.8438,  1.1016,  0.8750, -3.0000,  1.0625, -0.0835,  1.1094,  1.1719, -0.1328, -2.0469,  1.1719,
         2.5156,  0.3164,  0.9062, -1.3828, -2.2656,  1.0625,  1.6875,  2.1250,  1.2422,  0.2812,  3.7969, -1.1250, -3.7344, -1.3125,  3.1250, -1.7656, -1.2812,  0.9570,  2.2812, -1.3516,  1.2969, -0.5039,  3.7812, -1.7734,  0.2432, -0.7500,  0.3457, -0.3086,  0.0923,  1.8984,  0.2949,  0.1855],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      3.1875,      1.5469,      0.9805,      1.5938,      2.6719,      2.0625,      2.8750,      2.1875,      2.7188,      2.3281,      2.9375,      3.1875,      2.3906,      2.0781],
        [     0.0000,      4.8750,      2.5781,      3.9844,      2.7656,      5.1250,      5.3438,      7.7500,      7.2188,      7.4062,      7.7188,     10.2500,     10.8750,     10.4375,     10.3750],
        [     0.0000,      5.3125,      4.5625,      4.3438,      6.1875,      8.7500,      8.9375,     10.6250,      9.8750,     11.0000,     12.1875,     13.3125,     14.5625,     13.8750,     13.7500],
        [     0.0000,      3.8750,      2.0156,      0.7773,      0.8359,      7.1562,      5.1562,      8.3750,      3.9844,      8.7500,      7.2500,      9.5000,     12.1250,      8.0625,     10.8750],
        [     0.0000,      3.3125,      2.3906,      2.0625,      1.0391,      5.1562,      4.5000,      7.5938,      4.5312,      7.5000,      5.6562,      9.3750,     10.6250,      8.3750,     10.8125],
        [     0.0000,      3.0938,      2.1094,      1.9219,      2.2500,      5.0312,      4.0312,      6.5000,      5.3750,      7.4375,      6.6562,      8.8125,      9.4375,      8.6875,     10.2500],
        [     0.0000,      2.0156,      1.1953,      0.8789,     -1.2266,      3.3750,      1.9141,      4.7188,      2.2812,      5.3438,      3.2500,      6.8750,      7.5938,      5.6562,      8.1875],
        [     0.0000,      2.3281,      1.7031,      0.1768,      1.6953,      6.0312,      4.1562,      6.6875,      2.7656,      6.8438,      5.1562,      8.3125,     10.3750,      6.5625,      9.9375],
        [     0.0000,      1.2734,      0.9141,      0.3770,     -0.3926,      2.5156,      2.6094,      4.9062,      2.2969,      4.4062,      3.2969,      6.3438,      7.9062,      5.8438,      8.0000],
        [     0.0000,      1.3828,      1.4531,      0.1377,      0.2490,      3.7344,      4.2188,      5.8438,      3.1250,      6.6250,      4.1562,      7.6562,      9.0000,      6.9062,     10.0625],
        [     0.0000,      1.5781,      1.7891,      1.6797,     -0.0095,      2.5312,      2.7500,      5.2500,      3.9062,      5.9062,      4.6250,      6.8750,      8.0625,      7.3750,      8.4375],
        [     0.0000,      1.0625,      0.9297,     -0.0074,     -1.9141,      2.6562,      1.3438,      4.4688,      1.2734,      4.8438,      2.3750,      5.7188,      6.6562,      4.6875,      7.3125],
        [     0.0000,      1.2109,      0.8398,     -0.8359,      0.2500,      4.5312,      2.6094,      5.1875,      1.2031,      5.4375,      3.4062,      6.7188,      8.6875,      4.8750,      8.5000],
        [     0.0000,      1.6953,      1.5859,      0.5547,      1.3594,      2.9219,      3.3750,      5.0312,      4.0000,      5.6562,      5.1250,      6.8438,      7.9688,      7.1562,      7.4062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3401],
        [0.0375],
        [0.0269],
        [0.0455],
        [0.0360],
        [0.0193],
        [0.0285],
        [0.0076],
        [0.0121],
        [0.0068],
        [0.0055],
        [0.0146],
        [0.0047],
        [0.0033]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0284,     0.9727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.9023,     0.0962,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.9141,     0.0160,     0.0703,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0033,     0.8516,     0.0132,     0.0051,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0083,     0.9414,     0.0053,     0.0038,     0.0156,     0.0239,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.9766,     0.0006,     0.0010,     0.0029,     0.0024,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.8516,     0.0018,     0.0080,     0.0474,     0.0121,     0.0469,     0.0317,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0199,     0.7266,     0.0085,     0.0114,     0.0154,     0.0212,     0.1260,     0.0240,     0.0483,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0075,     0.6602,     0.0092,     0.0295,     0.0273,     0.0068,     0.1289,     0.0106,     0.0430,     0.0752,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0170,     0.4043,     0.0052,     0.0090,     0.0017,     0.0041,     0.0835,     0.0182,     0.0145,     0.1553,     0.2871,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0164,     0.1406,     0.0055,     0.2520,     0.0830,     0.0074,     0.0266,     0.0786,     0.0337,     0.1553,     0.1631,     0.0369,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.4746,     0.0014,     0.0153,     0.0742,     0.0042,     0.0952,     0.0042,     0.1084,     0.0215,     0.0801,     0.0123,     0.1064,     0.0000,     0.0000],
        [    0.0154,     0.2461,     0.0041,     0.0100,     0.0114,     0.0078,     0.0723,     0.0070,     0.0334,     0.0854,     0.0835,     0.0330,     0.1611,     0.2295,     0.0000],
        [    0.0095,     0.6094,     0.0422,     0.0093,     0.0332,     0.0059,     0.0659,     0.0352,     0.0146,     0.0095,     0.0077,     0.0150,     0.1060,     0.0182,     0.0199]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0038,  0.0131,  0.0070,  ..., -0.0172,  0.0146,  0.0234],
        [ 0.0335, -0.0073, -0.0141,  ..., -0.0189,  0.0072,  0.0055],
        [-0.0227, -0.0144, -0.0014,  ...,  0.0258, -0.0209, -0.0134],
        ...,
        [-0.0042,  0.0158,  0.0353,  ..., -0.0262, -0.0166,  0.0056],
        [-0.0240, -0.0406, -0.0199,  ..., -0.0055, -0.0301, -0.0038],
        [ 0.0035, -0.0047,  0.0134,  ...,  0.0045, -0.0072,  0.0231]], device='cuda:0', requires_grad=True)
K: tensor([-0.6875, -1.6953,  0.1689,  0.5703,  0.4082, -0.1572, -1.3828,  0.4531, -2.0781,  1.1328,  0.0388, -1.3438, -0.2930,  0.8633, -0.8047,  2.0625,  1.0156, -0.1260,  2.6562,  0.4941, -0.6914, -1.5234,  1.3359, -0.1309, -0.9453,  0.4941,  0.5859, -0.1338,  1.6875, -0.6172, -0.1768, -0.5039,
         1.1094,  1.0000, -0.1445,  1.8828,  0.3691,  0.5312,  1.1406, -1.7344,  0.9805,  0.2695, -0.8828,  0.9766, -1.9375,  0.8281, -1.9219, -1.8203, -0.0747,  0.4648,  1.1641, -0.9375, -0.6875,  0.9062,  0.7617, -0.0488,  0.8750, -1.7891, -0.1396, -0.7422,  1.4219, -0.1982,  1.2109,  0.0630],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0424,  0.0340, -0.0296,  ...,  0.0049, -0.0028,  0.0046],
        [-0.0251,  0.0063,  0.0025,  ..., -0.0250, -0.0035, -0.0356],
        [-0.0165, -0.0122, -0.0160,  ..., -0.0241,  0.0171, -0.0093],
        ...,
        [ 0.0188, -0.0032, -0.0347,  ..., -0.0153,  0.0222,  0.0124],
        [-0.0187, -0.0203, -0.0428,  ...,  0.0075, -0.0075,  0.0337],
        [-0.0049,  0.0197, -0.0090,  ..., -0.0242, -0.0058, -0.0040]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0251, -0.0212, -0.5742, -1.3438, -0.3066, -3.1875,  0.7695,  2.2656,  0.1416, -1.7656, -1.6641,  2.7656,  0.5547, -0.3945, -0.7656, -2.7812,  1.6641, -2.4688, -0.2969, -0.6836, -0.6953, -1.0391, -1.1406,  0.4922,  0.2852,  1.3750,  1.3359,  1.3984,  0.4316,  0.4844, -0.8711,  0.6133,
         0.5508, -0.5391, -2.5156, -1.0703, -0.7109, -1.7344,  1.6250,  0.5078,  2.0938,  0.4668, -1.7969,  1.7344, -2.4688, -0.6562, -1.6875,  1.0312,  1.6719, -0.4082, -0.0032,  1.3594, -1.0000, -2.5625, -0.0386, -0.9180, -0.2090, -2.4219, -0.6367, -1.4609,  1.3281, -0.7891,  1.6016,  1.8047],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      3.5312,     -0.3828,     -1.3203,     -0.7969,     -1.9219,     -3.0938,     -0.4668,     -2.7969,     -1.7656,     -2.4062,     -2.6250,     -1.2969,     -3.0000,     -3.4375],
        [     0.0000,      6.4375,      4.2188,      6.2500,      8.1250,      3.3125,      3.5312,      5.2188,      4.1250,      1.9609,      2.7188,      0.2832,      4.6875,      3.3438,      0.1836],
        [     0.0000,      7.0938,      3.0625,      4.5312,      8.0000,      3.9688,      4.8125,      4.5000,      3.6562,      2.2969,      2.3750,      0.3008,      4.6250,      3.4531,      0.9766],
        [     0.0000,      5.5312,      1.3828,      0.4219,      3.6406,      4.0938,      2.8281,      1.5781,      1.4922,      1.7500,      0.0559,     -0.9922,      1.4219,      1.4453,      1.1094],
        [     0.0000,      4.7188,     -0.4473,     -0.7891,      0.6289,      1.0547,      1.8906,      0.4824,      0.5430,      0.3535,     -0.5820,     -2.1250,     -1.0078,     -0.3340,     -0.3574],
        [     0.0000,      8.1875,      0.8594,      1.3125,      2.3906,      2.1719,      4.1562,      5.3125,      3.9688,      1.7734,      0.7852,      0.9375,      1.6250,      2.1250,      1.6172],
        [     0.0000,      7.0312,      0.8750,      2.3594,      4.1250,      2.7812,      4.1250,      3.7500,      5.9062,      3.2188,      3.7656,      1.2344,      2.8281,      5.7500,      3.8281],
        [     0.0000,      3.5938,     -0.8555,     -0.5625,     -0.2559,      0.0635,      1.8438,      0.1885,      0.8867,      1.9062,      1.5234,      0.5625,      1.3203,      1.4609,      2.3594],
        [     0.0000,      4.4688,      0.1963,      1.3672,      1.2891,     -0.1040,      2.8438,      0.3379,      1.7422,      2.2969,      6.0000,      3.2031,      2.8906,      2.8125,      3.7188],
        [     0.0000,      3.1719,     -1.1797,     -0.6367,     -2.3281,     -1.4297,      1.5938,      0.0718,     -0.1602,      2.2031,      2.8281,      3.7656,      3.3594,      1.2578,      2.8281],
        [     0.0000,      2.1406,     -1.0938,      2.7344,      1.6250,     -0.7852,      0.4863,      1.5703,      0.7227,      2.2500,      2.2969,      0.8125,      5.7188,      2.9531,      2.6250],
        [     0.0000,      5.3125,     -0.5273,      1.8750,      3.4531,      0.5859,      3.7031,      0.5664,      3.8281,      2.2188,      3.5312,      1.6484,      3.8125,      6.0312,      5.4375],
        [     0.0000,      2.7656,     -1.3359,     -0.4316,     -0.3066,     -0.6797,      1.5469,     -0.7891,      0.7695,      1.7109,      1.6875,      0.7617,      2.3438,      2.7031,      3.6406],
        [     0.0000,      4.1562,      1.4922,     -0.0161,      1.2578,     -0.4785,      1.9375,      1.3125,      0.4355,      0.0077,     -0.2012,      0.4648,      2.4219,      0.6562,      0.7422]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0594],
        [0.0068],
        [0.0031],
        [0.0047],
        [0.0255],
        [0.0029],
        [0.0010],
        [0.0070],
        [0.0083],
        [0.0183],
        [0.0075],
        [0.0050],
        [0.0070],
        [0.0302]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.2061 a:0.1318,:0.1865 yellow:0.1201atoes:0.3848,:0.3926 a:0.0566iced:0.3379)
iced
------
		( a:0.1318,:0.1865 yellow:0.1201atoes:0.3848,:0.3926 a:0.0566iced:0.3379,:0.1846)
, and are all green.
- The flowers are green, and are
@ 6050 train 4.1783 , allloss: 4.1801, dt: 1735.20ms, fracRes: 0.4441, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6109, norm(y): 1.0204, norm:1.4313, tok/sec: 75537.07, flops:79.28, batch-reuse:1
@ 6051 train 4.1931 , allloss: 4.1939, dt: 1329.07ms, fracRes: 0.4433, norm(attn): 0.2041, norm(output): 0.5938, norm(x): 0.6093, norm(y): 1.0204, norm:1.2208, tok/sec: 98619.05, flops:103.50, batch-reuse:1
@ 6052 train 4.1649 , allloss: 4.1668, dt: 1334.33ms, fracRes: 0.4416, norm(attn): 0.2031, norm(output): 0.5859, norm(x): 0.6014, norm(y): 1.0203, norm:1.1856, tok/sec: 98230.51, flops:103.09, batch-reuse:1
@ 6053 train 4.1430 , allloss: 4.1437, dt: 1328.34ms, fracRes: 0.4424, norm(attn): 0.2031, norm(output): 0.5977, norm(x): 0.6051, norm(y): 1.0203, norm:1.3041, tok/sec: 98673.76, flops:103.56, batch-reuse:1
@ 6054 train 4.1969 , allloss: 4.1978, dt: 1304.55ms, fracRes: 0.4422, norm(attn): 0.2041, norm(output): 0.5898, norm(x): 0.6058, norm(y): 1.0202, norm:1.1970, tok/sec: 100473.20, flops:105.45, batch-reuse:1
@ 6055 train 4.2348 , allloss: 4.2356, dt: 1296.49ms, fracRes: 0.4407, norm(attn): 0.2041, norm(output): 0.5938, norm(x): 0.6045, norm(y): 1.0202, norm:1.1425, tok/sec: 101097.62, flops:106.10, batch-reuse:1
@ 6056 train 4.2630 , allloss: 4.2644, dt: 1314.46ms, fracRes: 0.4419, norm(attn): 0.2031, norm(output): 0.5938, norm(x): 0.6005, norm(y): 1.0202, norm:1.2404, tok/sec: 99715.60, flops:104.65, batch-reuse:1
@ 6057 train 4.2082 , allloss: 4.2089, dt: 1305.96ms, fracRes: 0.4429, norm(attn): 0.2031, norm(output): 0.5898, norm(x): 0.5993, norm(y): 1.0203, norm:1.1148, tok/sec: 100364.41, flops:105.33, batch-reuse:1
@ 6058 train 4.1921 , allloss: 4.1929, dt: 1309.80ms, fracRes: 0.4427, norm(attn): 0.2031, norm(output): 0.5898, norm(x): 0.6005, norm(y): 1.0201, norm:1.2501, tok/sec: 100070.06, flops:105.03, batch-reuse:1
@ 6059 train 4.1685 , allloss: 4.1709, dt: 1324.62ms, fracRes: 0.4418, norm(attn): 0.2041, norm(output): 0.5938, norm(x): 0.5999, norm(y): 1.0201, norm:1.0965, tok/sec: 98950.59, flops:103.85, batch-reuse:1
@ 6060 train 4.1414 , allloss: 4.1446, dt: 1319.17ms, fracRes: 0.4433, norm(attn): 0.2031, norm(output): 0.5938, norm(x): 0.6040, norm(y): 1.0201, norm:1.2264, tok/sec: 99359.73, flops:104.28, batch-reuse:1
@ 6061 train 4.1438 , allloss: 4.1444, dt: 1332.61ms, fracRes: 0.4431, norm(attn): 0.2031, norm(output): 0.5977, norm(x): 0.6024, norm(y): 1.0202, norm:1.2379, tok/sec: 98357.03, flops:103.23, batch-reuse:1
@ 6062 train 4.1284 , allloss: 4.1292, dt: 1293.02ms, fracRes: 0.4435, norm(attn): 0.2041, norm(output): 0.5938, norm(x): 0.6036, norm(y): 1.0202, norm:1.0661, tok/sec: 101368.68, flops:106.39, batch-reuse:1
@ 6063 train 4.1975 , allloss: 4.1987, dt: 1302.91ms, fracRes: 0.4425, norm(attn): 0.2041, norm(output): 0.5938, norm(x): 0.6036, norm(y): 1.0201, norm:1.1254, tok/sec: 100599.31, flops:105.58, batch-reuse:1
@ 6064 train 4.2102 , allloss: 4.2112, dt: 1278.15ms, fracRes: 0.4421, norm(attn): 0.2051, norm(output): 0.5938, norm(x): 0.6005, norm(y): 1.0200, norm:1.1437, tok/sec: 102548.07, flops:107.63, batch-reuse:1
@ 6065 train 4.1822 , allloss: 4.1827, dt: 1345.42ms, fracRes: 0.4410, norm(attn): 0.2080, norm(output): 0.5898, norm(x): 0.5965, norm(y): 1.0200, norm:1.1722, tok/sec: 97421.11, flops:102.25, batch-reuse:1
@ 6066 train 4.1485 , allloss: 4.1503, dt: 1295.07ms, fracRes: 0.4411, norm(attn): 0.2051, norm(output): 0.5898, norm(x): 0.5986, norm(y): 1.0201, norm:1.1933, tok/sec: 101208.04, flops:106.22, batch-reuse:1
@ 6067 train 4.1531 , allloss: 4.1541, dt: 1306.75ms, fracRes: 0.4405, norm(attn): 0.2070, norm(output): 0.5977, norm(x): 0.6013, norm(y): 1.0201, norm:1.2607, tok/sec: 100303.97, flops:105.27, batch-reuse:1
@ 6068 train 4.1717 , allloss: 4.1723, dt: 1348.07ms, fracRes: 0.4413, norm(attn): 0.2070, norm(output): 0.5977, norm(x): 0.6030, norm(y): 1.0201, norm:1.2318, tok/sec: 97229.72, flops:102.04, batch-reuse:1
@ 6069 train 4.2306 , allloss: 4.2311, dt: 1311.66ms, fracRes: 0.4437, norm(attn): 0.2041, norm(output): 0.5977, norm(x): 0.6034, norm(y): 1.0202, norm:1.3988, tok/sec: 99928.26, flops:104.88, batch-reuse:1
@ 6070 train 4.1888 , allloss: 4.1899, dt: 1306.75ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6023, norm(y): 1.0201, norm:1.1888, tok/sec: 100303.71, flops:105.27, batch-reuse:1
@ 6071 train 4.1375 , allloss: 4.1412, dt: 1331.05ms, fracRes: 0.4409, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6027, norm(y): 1.0201, norm:1.2251, tok/sec: 98472.76, flops:103.35, batch-reuse:1
@ 6072 train 4.1476 , allloss: 4.1483, dt: 1318.68ms, fracRes: 0.4409, norm(attn): 0.2031, norm(output): 0.5938, norm(x): 0.5982, norm(y): 1.0201, norm:1.2218, tok/sec: 99396.13, flops:104.32, batch-reuse:1
@ 6073 train 4.2278 , allloss: 4.2285, dt: 1348.29ms, fracRes: 0.4422, norm(attn): 0.2031, norm(output): 0.6016, norm(x): 0.6020, norm(y): 1.0202, norm:1.2704, tok/sec: 97213.42, flops:102.03, batch-reuse:1
@ 6074 train 4.1558 , allloss: 4.1568, dt: 1344.94ms, fracRes: 0.4425, norm(attn): 0.2031, norm(output): 0.6016, norm(x): 0.6061, norm(y): 1.0202, norm:1.2492, tok/sec: 97455.45, flops:102.28, batch-reuse:1
@ 6075 train 4.2180 , allloss: 4.2188, dt: 1326.23ms, fracRes: 0.4422, norm(attn): 0.2041, norm(output): 0.5938, norm(x): 0.6052, norm(y): 1.0203, norm:1.1390, tok/sec: 98830.82, flops:103.72, batch-reuse:1
@ 6076 train 4.1367 , allloss: 4.1375, dt: 1276.37ms, fracRes: 0.4428, norm(attn): 0.2031, norm(output): 0.6016, norm(x): 0.6035, norm(y): 1.0202, norm:1.1811, tok/sec: 102690.88, flops:107.78, batch-reuse:1
@ 6077 train 4.1179 , allloss: 4.1188, dt: 1291.20ms, fracRes: 0.4440, norm(attn): 0.2031, norm(output): 0.6016, norm(x): 0.6038, norm(y): 1.0202, norm:1.0918, tok/sec: 101511.53, flops:106.54, batch-reuse:1
@ 6078 train 4.1234 , allloss: 4.1242, dt: 1292.21ms, fracRes: 0.4432, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6041, norm(y): 1.0201, norm:1.1507, tok/sec: 101432.25, flops:106.46, batch-reuse:1
@ 6079 train 4.0895 , allloss: 4.0908, dt: 1296.70ms, fracRes: 0.4435, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6061, norm(y): 1.0201, norm:1.1455, tok/sec: 101081.56, flops:106.09, batch-reuse:1
@ 6080 train 4.1794 , allloss: 4.1807, dt: 1275.92ms, fracRes: 0.4440, norm(attn): 0.2031, norm(output): 0.5938, norm(x): 0.6030, norm(y): 1.0201, norm:1.1313, tok/sec: 102727.72, flops:107.81, batch-reuse:1
@ 6081 train 4.1673 , allloss: 4.1689, dt: 1311.12ms, fracRes: 0.4435, norm(attn): 0.2021, norm(output): 0.5938, norm(x): 0.6026, norm(y): 1.0201, norm:1.3295, tok/sec: 99969.85, flops:104.92, batch-reuse:1
@ 6082 train 4.2509 , allloss: 4.2524, dt: 1329.53ms, fracRes: 0.4441, norm(attn): 0.2031, norm(output): 0.6055, norm(x): 0.6098, norm(y): 1.0202, norm:1.2449, tok/sec: 98584.86, flops:103.47, batch-reuse:1
@ 6083 train 4.0987 , allloss: 4.1004, dt: 1293.44ms, fracRes: 0.4428, norm(attn): 0.2051, norm(output): 0.6055, norm(x): 0.6049, norm(y): 1.0201, norm:1.1411, tok/sec: 101335.67, flops:106.35, batch-reuse:1
@ 6084 train 4.1295 , allloss: 4.1312, dt: 1311.55ms, fracRes: 0.4429, norm(attn): 0.2031, norm(output): 0.5938, norm(x): 0.6010, norm(y): 1.0202, norm:1.1987, tok/sec: 99937.09, flops:104.89, batch-reuse:1
@ 6085 train 4.1755 , allloss: 4.1773, dt: 1291.90ms, fracRes: 0.4438, norm(attn): 0.2031, norm(output): 0.6016, norm(x): 0.6034, norm(y): 1.0201, norm:1.1642, tok/sec: 101456.53, flops:106.48, batch-reuse:1
@ 6086 train 4.1381 , allloss: 4.1392, dt: 1300.58ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6051, norm(y): 1.0201, norm:1.3214, tok/sec: 100779.59, flops:105.77, batch-reuse:1
@ 6087 train 4.1963 , allloss: 4.1976, dt: 1285.72ms, fracRes: 0.4434, norm(attn): 0.2031, norm(output): 0.6016, norm(x): 0.6011, norm(y): 1.0202, norm:1.2587, tok/sec: 101944.69, flops:106.99, batch-reuse:1
@ 6088 train 4.2090 , allloss: 4.2097, dt: 1300.51ms, fracRes: 0.4432, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6001, norm(y): 1.0202, norm:1.1507, tok/sec: 100785.05, flops:105.78, batch-reuse:1
@ 6089 train 4.2174 , allloss: 4.2189, dt: 1319.57ms, fracRes: 0.4424, norm(attn): 0.2051, norm(output): 0.6016, norm(x): 0.6047, norm(y): 1.0202, norm:1.0916, tok/sec: 99329.16, flops:104.25, batch-reuse:1
@ 6090 train 4.2241 , allloss: 4.2248, dt: 1307.52ms, fracRes: 0.4431, norm(attn): 0.2031, norm(output): 0.6016, norm(x): 0.6058, norm(y): 1.0202, norm:1.3046, tok/sec: 100244.64, flops:105.21, batch-reuse:1
@ 6091 train 4.2102 , allloss: 4.2111, dt: 1312.87ms, fracRes: 0.4423, norm(attn): 0.2031, norm(output): 0.6055, norm(x): 0.6032, norm(y): 1.0202, norm:1.0812, tok/sec: 99836.07, flops:104.78, batch-reuse:1
@ 6092 train 4.1333 , allloss: 4.1345, dt: 1328.59ms, fracRes: 0.4416, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6047, norm(y): 1.0201, norm:1.2544, tok/sec: 98654.95, flops:103.54, batch-reuse:1
@ 6093 train 4.1293 , allloss: 4.1301, dt: 1337.54ms, fracRes: 0.4417, norm(attn): 0.2051, norm(output): 0.5977, norm(x): 0.6022, norm(y): 1.0201, norm:1.2630, tok/sec: 97995.16, flops:102.85, batch-reuse:1
@ 6094 train 4.0747 , allloss: 4.0755, dt: 1286.79ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6033, norm(y): 1.0200, norm:1.1940, tok/sec: 101859.98, flops:106.90, batch-reuse:1
@ 6095 train 4.1282 , allloss: 4.1301, dt: 1271.23ms, fracRes: 0.4427, norm(attn): 0.2051, norm(output): 0.6016, norm(x): 0.6016, norm(y): 1.0201, norm:1.3210, tok/sec: 103106.50, flops:108.21, batch-reuse:1
@ 6096 train 4.1296 , allloss: 4.1303, dt: 1306.01ms, fracRes: 0.4421, norm(attn): 0.2061, norm(output): 0.6016, norm(x): 0.6015, norm(y): 1.0200, norm:1.2791, tok/sec: 100360.80, flops:105.33, batch-reuse:1
@ 6097 train 4.1169 , allloss: 4.1189, dt: 1333.35ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6055, norm(x): 0.6011, norm(y): 1.0200, norm:1.2947, tok/sec: 98302.88, flops:103.17, batch-reuse:1
@ 6098 train 4.0982 , allloss: 4.0988, dt: 1303.70ms, fracRes: 0.4418, norm(attn): 0.2031, norm(output): 0.6094, norm(x): 0.6018, norm(y): 1.0200, norm:1.1331, tok/sec: 100538.76, flops:105.52, batch-reuse:1
@ 6099 train 4.0142 , allloss: 4.0148, dt: 1294.99ms, fracRes: 0.4416, norm(attn): 0.2051, norm(output): 0.6094, norm(x): 0.6058, norm(y): 1.0201, norm:1.1555, tok/sec: 101214.51, flops:106.23, batch-reuse:1
@ 6100 train 4.2244 , allloss: 4.2254, dt: 1269.48ms, fracRes: 0.4436, norm(attn): 0.2041, norm(output): 0.6172, norm(x): 0.6104, norm(y): 1.0201, norm:1.3260, tok/sec: 103248.23, flops:108.36, batch-reuse:1
@ 6101 train 4.0226 , allloss: 4.0234, dt: 1294.47ms, fracRes: 0.4417, norm(attn): 0.2031, norm(output): 0.6133, norm(x): 0.6039, norm(y): 1.0199, norm:1.2863, tok/sec: 101255.56, flops:106.27, batch-reuse:1
@ 6102 train 4.4446 , allloss: 4.4451, dt: 1287.73ms, fracRes: 0.4453, norm(attn): 0.2031, norm(output): 0.6133, norm(x): 0.6113, norm(y): 1.0204, norm:1.6193, tok/sec: 101785.60, flops:106.83, batch-reuse:1
@ 6103 train 4.0437 , allloss: 4.0444, dt: 1522.11ms, fracRes: 0.4426, norm(attn): 0.2051, norm(output): 0.6016, norm(x): 0.6005, norm(y): 1.0199, norm:1.9380, tok/sec: 86112.03, flops:90.38, batch-reuse:1
@ 6104 train 4.0397 , allloss: 4.0407, dt: 1279.05ms, fracRes: 0.4438, norm(attn): 0.2041, norm(output): 0.6055, norm(x): 0.6031, norm(y): 1.0200, norm:1.2532, tok/sec: 102476.12, flops:107.55, batch-reuse:1
@ 6105 train 4.0708 , allloss: 4.0722, dt: 1291.56ms, fracRes: 0.4434, norm(attn): 0.2051, norm(output): 0.6133, norm(x): 0.6058, norm(y): 1.0199, norm:1.4508, tok/sec: 101483.78, flops:106.51, batch-reuse:1
@ 6106 train 4.0892 , allloss: 4.0899, dt: 1275.77ms, fracRes: 0.4421, norm(attn): 0.2031, norm(output): 0.6055, norm(x): 0.6036, norm(y): 1.0201, norm:1.3074, tok/sec: 102739.66, flops:107.83, batch-reuse:1
@ 6107 train 4.2416 , allloss: 4.2422, dt: 1312.40ms, fracRes: 0.4420, norm(attn): 0.2041, norm(output): 0.6016, norm(x): 0.6035, norm(y): 1.0202, norm:1.3147, tok/sec: 99872.02, flops:104.82, batch-reuse:1
@ 6108 train 4.1539 , allloss: 4.1545, dt: 1337.23ms, fracRes: 0.4429, norm(attn): 0.2041, norm(output): 0.6094, norm(x): 0.6041, norm(y): 1.0201, norm:1.4143, tok/sec: 98017.41, flops:102.87, batch-reuse:1
@ 6109 train 4.1020 , allloss: 4.1030, dt: 1330.33ms, fracRes: 0.4443, norm(attn): 0.2051, norm(output): 0.6133, norm(x): 0.6079, norm(y): 1.0200, norm:1.3392, tok/sec: 98526.03, flops:103.40, batch-reuse:1
@ 6110 train 4.1181 , allloss: 4.1188, dt: 1325.67ms, fracRes: 0.4435, norm(attn): 0.2031, norm(output): 0.6055, norm(x): 0.6022, norm(y): 1.0200, norm:1.2691, tok/sec: 98872.36, flops:103.77, batch-reuse:1
@ 6111 train 4.0567 , allloss: 4.0573, dt: 1319.79ms, fracRes: 0.4428, norm(attn): 0.2041, norm(output): 0.6133, norm(x): 0.6054, norm(y): 1.0199, norm:1.2831, tok/sec: 99312.76, flops:104.23, batch-reuse:1
@ 6112 train 4.0826 , allloss: 4.0834, dt: 1311.56ms, fracRes: 0.4427, norm(attn): 0.2041, norm(output): 0.6094, norm(x): 0.6038, norm(y): 1.0200, norm:1.2132, tok/sec: 99936.20, flops:104.88, batch-reuse:1
@ 6113 train 3.9941 , allloss: 3.9946, dt: 1285.53ms, fracRes: 0.4409, norm(attn): 0.2051, norm(output): 0.6094, norm(x): 0.6017, norm(y): 1.0198, norm:1.2629, tok/sec: 101959.51, flops:107.01, batch-reuse:1
@ 6114 train 4.2110 , allloss: 4.2330, dt: 1320.26ms, fracRes: 0.4408, norm(attn): 0.2051, norm(output): 0.6094, norm(x): 0.6021, norm(y): 1.0200, norm:1.7481, tok/sec: 99277.66, flops:104.19, batch-reuse:1
@ 6115 train 4.1314 , allloss: 4.1321, dt: 1291.41ms, fracRes: 0.4412, norm(attn): 0.2031, norm(output): 0.6055, norm(x): 0.6018, norm(y): 1.0200, norm:1.4527, tok/sec: 101495.59, flops:106.52, batch-reuse:1
@ 6116 train 4.0329 , allloss: 4.0334, dt: 1308.01ms, fracRes: 0.4408, norm(attn): 0.2051, norm(output): 0.6094, norm(x): 0.6017, norm(y): 1.0199, norm:1.2942, tok/sec: 100207.16, flops:105.17, batch-reuse:1
@ 6117 train 4.0969 , allloss: 4.0978, dt: 1298.26ms, fracRes: 0.4435, norm(attn): 0.2051, norm(output): 0.6094, norm(x): 0.6045, norm(y): 1.0199, norm:1.2098, tok/sec: 100959.58, flops:105.96, batch-reuse:1
@ 6118 train 4.1230 , allloss: 4.1239, dt: 1289.25ms, fracRes: 0.4430, norm(attn): 0.2041, norm(output): 0.6094, norm(x): 0.6038, norm(y): 1.0200, norm:1.3624, tok/sec: 101665.02, flops:106.70, batch-reuse:1
@ 6119 train 4.1051 , allloss: 4.1068, dt: 1302.96ms, fracRes: 0.4435, norm(attn): 0.2041, norm(output): 0.6094, norm(x): 0.6032, norm(y): 1.0200, norm:1.2477, tok/sec: 100595.83, flops:105.58, batch-reuse:1
@ 6120 train 4.1599 , allloss: 4.1632, dt: 1313.00ms, fracRes: 0.4423, norm(attn): 0.2031, norm(output): 0.6016, norm(x): 0.6004, norm(y): 1.0201, norm:1.3662, tok/sec: 99826.19, flops:104.77, batch-reuse:1
@ 6121 train 4.0396 , allloss: 4.0412, dt: 1344.72ms, fracRes: 0.4420, norm(attn): 0.2041, norm(output): 0.6133, norm(x): 0.6013, norm(y): 1.0199, norm:1.2300, tok/sec: 97471.95, flops:102.30, batch-reuse:1
@ 6122 train 4.0004 , allloss: 4.0022, dt: 1333.68ms, fracRes: 0.4417, norm(attn): 0.2070, norm(output): 0.6055, norm(x): 0.5988, norm(y): 1.0198, norm:1.2400, tok/sec: 98278.49, flops:103.15, batch-reuse:1
@ 6123 train 4.0268 , allloss: 4.0286, dt: 1331.75ms, fracRes: 0.4416, norm(attn): 0.2061, norm(output): 0.6133, norm(x): 0.5998, norm(y): 1.0198, norm:1.1628, tok/sec: 98420.78, flops:103.29, batch-reuse:1
@ 6124 train 4.1957 , allloss: 4.1980, dt: 1330.35ms, fracRes: 0.4419, norm(attn): 0.2031, norm(output): 0.6133, norm(x): 0.6004, norm(y): 1.0200, norm:1.3634, tok/sec: 98524.49, flops:103.40, batch-reuse:1
@ 6125 train 4.0715 , allloss: 4.0720, dt: 1320.93ms, fracRes: 0.4411, norm(attn): 0.2051, norm(output): 0.6094, norm(x): 0.6007, norm(y): 1.0199, norm:1.3815, tok/sec: 99227.02, flops:104.14, batch-reuse:1
@ 6126 train 4.0871 , allloss: 4.0916, dt: 1313.02ms, fracRes: 0.4419, norm(attn): 0.2061, norm(output): 0.6133, norm(x): 0.6032, norm(y): 1.0199, norm:1.4160, tok/sec: 99824.45, flops:104.77, batch-reuse:1
@ 6127 train 4.0929 , allloss: 4.0935, dt: 1305.27ms, fracRes: 0.4413, norm(attn): 0.2061, norm(output): 0.6133, norm(x): 0.6017, norm(y): 1.0198, norm:1.2891, tok/sec: 100417.27, flops:105.39, batch-reuse:1
@ 6128 train 4.0931 , allloss: 4.0940, dt: 1283.52ms, fracRes: 0.4418, norm(attn): 0.2041, norm(output): 0.6094, norm(x): 0.5976, norm(y): 1.0199, norm:1.2307, tok/sec: 102118.96, flops:107.18, batch-reuse:1
@ 6129 train 4.0354 , allloss: 4.0368, dt: 1291.11ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6007, norm(y): 1.0197, norm:1.3015, tok/sec: 101518.79, flops:106.55, batch-reuse:1
@ 6130 train 4.1083 , allloss: 4.1093, dt: 1274.04ms, fracRes: 0.4420, norm(attn): 0.2031, norm(output): 0.6094, norm(x): 0.5984, norm(y): 1.0199, norm:1.2205, tok/sec: 102878.99, flops:107.97, batch-reuse:1
@ 6131 train 3.9910 , allloss: 4.0018, dt: 1297.99ms, fracRes: 0.4429, norm(attn): 0.2041, norm(output): 0.6133, norm(x): 0.5972, norm(y): 1.0197, norm:1.2769, tok/sec: 100981.06, flops:105.98, batch-reuse:1
@ 6132 train 4.0111 , allloss: 4.0151, dt: 1299.55ms, fracRes: 0.4430, norm(attn): 0.2041, norm(output): 0.6133, norm(x): 0.6000, norm(y): 1.0198, norm:1.2195, tok/sec: 100859.28, flops:105.85, batch-reuse:1
@ 6133 train 4.0414 , allloss: 4.0471, dt: 1281.67ms, fracRes: 0.4421, norm(attn): 0.2051, norm(output): 0.6172, norm(x): 0.6023, norm(y): 1.0197, norm:1.3345, tok/sec: 102266.22, flops:107.33, batch-reuse:1
@ 6134 train 4.1411 , allloss: 4.1461, dt: 1299.78ms, fracRes: 0.4419, norm(attn): 0.2031, norm(output): 0.6211, norm(x): 0.6022, norm(y): 1.0197, norm:1.1202, tok/sec: 100841.69, flops:105.84, batch-reuse:1
@ 6135 train 4.1130 , allloss: 4.1182, dt: 1316.70ms, fracRes: 0.4425, norm(attn): 0.2031, norm(output): 0.6133, norm(x): 0.5989, norm(y): 1.0198, norm:1.2856, tok/sec: 99546.16, flops:104.48, batch-reuse:1
@ 6136 train 4.1088 , allloss: 4.1146, dt: 1289.26ms, fracRes: 0.4428, norm(attn): 0.2041, norm(output): 0.6133, norm(x): 0.6015, norm(y): 1.0197, norm:1.2117, tok/sec: 101664.53, flops:106.70, batch-reuse:1
@ 6137 train 4.1842 , allloss: 4.1855, dt: 1304.50ms, fracRes: 0.4425, norm(attn): 0.2041, norm(output): 0.6172, norm(x): 0.6041, norm(y): 1.0197, norm:1.1584, tok/sec: 100477.12, flops:105.45, batch-reuse:1
@ 6138 train 4.1083 , allloss: 4.1092, dt: 1316.39ms, fracRes: 0.4419, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6035, norm(y): 1.0197, norm:1.2065, tok/sec: 99569.18, flops:104.50, batch-reuse:1
@ 6139 train 4.2840 , allloss: 4.2863, dt: 1293.05ms, fracRes: 0.4422, norm(attn): 0.2041, norm(output): 0.6172, norm(x): 0.6030, norm(y): 1.0199, norm:1.3418, tok/sec: 101366.29, flops:106.39, batch-reuse:1
@ 6140 train 4.2700 , allloss: 4.2718, dt: 1311.16ms, fracRes: 0.4426, norm(attn): 0.2051, norm(output): 0.6211, norm(x): 0.6060, norm(y): 1.0199, norm:1.2636, tok/sec: 99966.51, flops:104.92, batch-reuse:1
@ 6141 train 4.2635 , allloss: 4.2679, dt: 1312.75ms, fracRes: 0.4423, norm(attn): 0.2061, norm(output): 0.6133, norm(x): 0.6020, norm(y): 1.0199, norm:1.1830, tok/sec: 99845.28, flops:104.79, batch-reuse:1
@ 6142 train 4.3461 , allloss: 4.3469, dt: 1288.24ms, fracRes: 0.4413, norm(attn): 0.2070, norm(output): 0.6094, norm(x): 0.6013, norm(y): 1.0200, norm:1.4253, tok/sec: 101745.19, flops:106.78, batch-reuse:1
@ 6143 train 4.2565 , allloss: 4.2593, dt: 1328.14ms, fracRes: 0.4424, norm(attn): 0.2041, norm(output): 0.6172, norm(x): 0.6022, norm(y): 1.0199, norm:1.3718, tok/sec: 98688.43, flops:103.58, batch-reuse:1
@ 6144 train 4.3453 , allloss: 4.3493, dt: 1282.27ms, fracRes: 0.4438, norm(attn): 0.2041, norm(output): 0.6172, norm(x): 0.6026, norm(y): 1.0200, norm:1.3170, tok/sec: 102218.33, flops:107.28, batch-reuse:1
@ 6145 train 4.1781 , allloss: 4.1833, dt: 1277.45ms, fracRes: 0.4424, norm(attn): 0.2070, norm(output): 0.6172, norm(x): 0.6044, norm(y): 1.0198, norm:1.3888, tok/sec: 102604.09, flops:107.68, batch-reuse:1
@ 6146 train 4.2377 , allloss: 4.2387, dt: 1284.67ms, fracRes: 0.4423, norm(attn): 0.2051, norm(output): 0.6211, norm(x): 0.6049, norm(y): 1.0199, norm:1.4452, tok/sec: 102027.64, flops:107.08, batch-reuse:1
@ 6147 train 4.4468 , allloss: 4.4504, dt: 1292.63ms, fracRes: 0.4428, norm(attn): 0.2061, norm(output): 0.6133, norm(x): 0.6056, norm(y): 1.0202, norm:1.4178, tok/sec: 101399.48, flops:106.42, batch-reuse:1
@ 6148 train 4.2842 , allloss: 4.2846, dt: 1294.56ms, fracRes: 0.4429, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6030, norm(y): 1.0199, norm:1.2227, tok/sec: 101248.38, flops:106.26, batch-reuse:1
@ 6149 train 4.2424 , allloss: 4.2433, dt: 1295.80ms, fracRes: 0.4423, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6052, norm(y): 1.0197, norm:1.1330, tok/sec: 101151.41, flops:106.16, batch-reuse:1
@ 6150 train 4.2429 , allloss: 4.2443, dt: 1291.65ms, fracRes: 0.4422, norm(attn): 0.2051, norm(output): 0.6172, norm(x): 0.6056, norm(y): 1.0198, norm:1.3147, tok/sec: 101476.03, flops:106.50, batch-reuse:1
@ 6151 train 4.0858 , allloss: 4.0867, dt: 1289.68ms, fracRes: 0.4398, norm(attn): 0.2090, norm(output): 0.6133, norm(x): 0.6001, norm(y): 1.0199, norm:1.3117, tok/sec: 101631.52, flops:106.66, batch-reuse:1
@ 6152 train 4.2686 , allloss: 4.2700, dt: 1265.85ms, fracRes: 0.4413, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6008, norm(y): 1.0197, norm:1.2695, tok/sec: 103544.26, flops:108.67, batch-reuse:1
@ 6153 train 4.2243 , allloss: 4.2290, dt: 1301.47ms, fracRes: 0.4410, norm(attn): 0.2031, norm(output): 0.6133, norm(x): 0.5995, norm(y): 1.0197, norm:1.2136, tok/sec: 100710.68, flops:105.70, batch-reuse:1
@ 6154 train 4.3104 , allloss: 4.3111, dt: 1315.83ms, fracRes: 0.4431, norm(attn): 0.2041, norm(output): 0.6094, norm(x): 0.6012, norm(y): 1.0198, norm:1.2241, tok/sec: 99611.45, flops:104.54, batch-reuse:1
@ 6155 train 4.2712 , allloss: 4.2726, dt: 1348.80ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6133, norm(x): 0.6011, norm(y): 1.0198, norm:1.1761, tok/sec: 97177.08, flops:101.99, batch-reuse:1
@ 6156 train 4.1718 , allloss: 4.1728, dt: 1310.85ms, fracRes: 0.4424, norm(attn): 0.2061, norm(output): 0.6172, norm(x): 0.6003, norm(y): 1.0196, norm:1.1935, tok/sec: 99990.16, flops:104.94, batch-reuse:1
@ 6157 train 4.2565 , allloss: 4.2612, dt: 1296.40ms, fracRes: 0.4436, norm(attn): 0.2051, norm(output): 0.6094, norm(x): 0.5982, norm(y): 1.0196, norm:1.2616, tok/sec: 101104.76, flops:106.11, batch-reuse:1
@ 6158 train 4.2332 , allloss: 4.2343, dt: 1291.03ms, fracRes: 0.4437, norm(attn): 0.2041, norm(output): 0.6172, norm(x): 0.6019, norm(y): 1.0197, norm:1.1529, tok/sec: 101524.77, flops:106.55, batch-reuse:1
@ 6159 train 4.1811 , allloss: 4.1829, dt: 1281.91ms, fracRes: 0.4445, norm(attn): 0.2031, norm(output): 0.6211, norm(x): 0.6019, norm(y): 1.0196, norm:1.1687, tok/sec: 102247.41, flops:107.31, batch-reuse:1
@ 6160 train 4.1685 , allloss: 4.1693, dt: 1285.78ms, fracRes: 0.4428, norm(attn): 0.2031, norm(output): 0.6172, norm(x): 0.6019, norm(y): 1.0197, norm:1.0790, tok/sec: 101939.53, flops:106.99, batch-reuse:1
@ 6161 train 4.2210 , allloss: 4.2223, dt: 1314.11ms, fracRes: 0.4431, norm(attn): 0.2031, norm(output): 0.6211, norm(x): 0.6045, norm(y): 1.0198, norm:1.2201, tok/sec: 99742.34, flops:104.68, batch-reuse:1
@ 6162 train 4.1963 , allloss: 4.1980, dt: 1301.66ms, fracRes: 0.4422, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6058, norm(y): 1.0198, norm:1.1547, tok/sec: 100695.83, flops:105.68, batch-reuse:1
@ 6163 train 4.3002 , allloss: 4.3009, dt: 1325.24ms, fracRes: 0.4434, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6077, norm(y): 1.0197, norm:1.3547, tok/sec: 98904.25, flops:103.80, batch-reuse:1
@ 6164 train 4.2544 , allloss: 4.2551, dt: 1327.01ms, fracRes: 0.4420, norm(attn): 0.2041, norm(output): 0.6172, norm(x): 0.6017, norm(y): 1.0197, norm:1.2412, tok/sec: 98772.67, flops:103.66, batch-reuse:1
@ 6165 train 4.2096 , allloss: 4.2108, dt: 1325.36ms, fracRes: 0.4425, norm(attn): 0.2061, norm(output): 0.6211, norm(x): 0.6029, norm(y): 1.0197, norm:1.1562, tok/sec: 98895.55, flops:103.79, batch-reuse:1
@ 6166 train 4.3680 , allloss: 4.3693, dt: 1267.31ms, fracRes: 0.4440, norm(attn): 0.2041, norm(output): 0.6172, norm(x): 0.6065, norm(y): 1.0199, norm:1.1493, tok/sec: 103425.63, flops:108.55, batch-reuse:1
@ 6167 train 4.2523 , allloss: 4.2546, dt: 1291.99ms, fracRes: 0.4440, norm(attn): 0.2041, norm(output): 0.6172, norm(x): 0.6043, norm(y): 1.0197, norm:1.3064, tok/sec: 101449.55, flops:106.47, batch-reuse:1
@ 6168 train 4.2190 , allloss: 4.2200, dt: 1319.77ms, fracRes: 0.4438, norm(attn): 0.2051, norm(output): 0.6211, norm(x): 0.6053, norm(y): 1.0196, norm:1.1801, tok/sec: 99314.12, flops:104.23, batch-reuse:1
@ 6169 train 4.2419 , allloss: 4.2432, dt: 1308.34ms, fracRes: 0.4428, norm(attn): 0.2051, norm(output): 0.6211, norm(x): 0.6083, norm(y): 1.0197, norm:1.7369, tok/sec: 100182.18, flops:105.14, batch-reuse:1
@ 6170 train 4.2434 , allloss: 4.2444, dt: 1332.55ms, fracRes: 0.4433, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6086, norm(y): 1.0196, norm:1.4165, tok/sec: 98361.87, flops:103.23, batch-reuse:1
@ 6171 train 4.2267 , allloss: 4.2293, dt: 1305.43ms, fracRes: 0.4415, norm(attn): 0.2070, norm(output): 0.6289, norm(x): 0.6211, norm(y): 1.0195, norm:1.3193, tok/sec: 100405.29, flops:105.38, batch-reuse:1
@ 6172 train 4.2245 , allloss: 4.2289, dt: 1337.81ms, fracRes: 0.4431, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6050, norm(y): 1.0195, norm:1.3075, tok/sec: 97975.40, flops:102.83, batch-reuse:1
@ 6173 train 4.2298 , allloss: 4.2310, dt: 1336.26ms, fracRes: 0.4430, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6060, norm(y): 1.0195, norm:1.3035, tok/sec: 98088.99, flops:102.95, batch-reuse:1
@ 6174 train 4.2947 , allloss: 4.3019, dt: 1337.90ms, fracRes: 0.4434, norm(attn): 0.2051, norm(output): 0.6172, norm(x): 0.6061, norm(y): 1.0195, norm:1.1490, tok/sec: 97968.81, flops:102.82, batch-reuse:1
@ 6175 train 4.2437 , allloss: 4.2449, dt: 1328.62ms, fracRes: 0.4428, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6097, norm(y): 1.0195, norm:1.1776, tok/sec: 98652.39, flops:103.54, batch-reuse:1
@ 6176 train 4.1868 , allloss: 4.1876, dt: 1322.76ms, fracRes: 0.4428, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6095, norm(y): 1.0194, norm:1.1858, tok/sec: 99089.60, flops:104.00, batch-reuse:1
@ 6177 train 4.1828 , allloss: 4.1838, dt: 1329.39ms, fracRes: 0.4427, norm(attn): 0.2051, norm(output): 0.6211, norm(x): 0.6067, norm(y): 1.0194, norm:1.1611, tok/sec: 98595.70, flops:103.48, batch-reuse:1
@ 6178 train 4.1986 , allloss: 4.1993, dt: 1329.71ms, fracRes: 0.4418, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6039, norm(y): 1.0193, norm:1.2050, tok/sec: 98571.60, flops:103.45, batch-reuse:1
@ 6179 train 4.1855 , allloss: 4.1862, dt: 1337.94ms, fracRes: 0.4413, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6074, norm(y): 1.0193, norm:1.2464, tok/sec: 97965.37, flops:102.82, batch-reuse:1
@ 6180 train 4.2485 , allloss: 4.2497, dt: 1335.86ms, fracRes: 0.4414, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6067, norm(y): 1.0194, norm:1.1633, tok/sec: 98118.00, flops:102.98, batch-reuse:1
@ 6181 train 4.3853 , allloss: 4.3862, dt: 1335.67ms, fracRes: 0.4440, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6081, norm(y): 1.0194, norm:1.2855, tok/sec: 98132.34, flops:102.99, batch-reuse:1
@ 6182 train 4.4102 , allloss: 4.4210, dt: 1309.17ms, fracRes: 0.4443, norm(attn): 0.2051, norm(output): 0.6211, norm(x): 0.6091, norm(y): 1.0195, norm:1.3142, tok/sec: 100118.03, flops:105.08, batch-reuse:1
@ 6183 train 4.2172 , allloss: 4.2186, dt: 1306.52ms, fracRes: 0.4436, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6100, norm(y): 1.0193, norm:1.2067, tok/sec: 100321.21, flops:105.29, batch-reuse:1
@ 6184 train 4.2131 , allloss: 4.2141, dt: 1330.89ms, fracRes: 0.4439, norm(attn): 0.2031, norm(output): 0.6250, norm(x): 0.6068, norm(y): 1.0193, norm:1.1729, tok/sec: 98484.78, flops:103.36, batch-reuse:1
@ 6185 train 4.3502 , allloss: 4.3519, dt: 1306.30ms, fracRes: 0.4434, norm(attn): 0.2031, norm(output): 0.6250, norm(x): 0.6078, norm(y): 1.0195, norm:1.2555, tok/sec: 100338.31, flops:105.31, batch-reuse:1
@ 6186 train 4.3491 , allloss: 4.3495, dt: 1306.80ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6074, norm(y): 1.0195, norm:1.2606, tok/sec: 100300.22, flops:105.27, batch-reuse:1
@ 6187 train 4.1889 , allloss: 4.1897, dt: 1292.15ms, fracRes: 0.4431, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6077, norm(y): 1.0194, norm:1.1524, tok/sec: 101437.40, flops:106.46, batch-reuse:1
@ 6188 train 4.2865 , allloss: 4.2876, dt: 1312.07ms, fracRes: 0.4458, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6146, norm(y): 1.0193, norm:1.1942, tok/sec: 99896.77, flops:104.84, batch-reuse:1
@ 6189 train 4.1033 , allloss: 4.1038, dt: 1313.94ms, fracRes: 0.4431, norm(attn): 0.2031, norm(output): 0.6250, norm(x): 0.6114, norm(y): 1.0193, norm:1.2994, tok/sec: 99755.00, flops:104.69, batch-reuse:1
@ 6190 train 4.4556 , allloss: 4.4574, dt: 1316.30ms, fracRes: 0.4458, norm(attn): 0.2031, norm(output): 0.6250, norm(x): 0.6157, norm(y): 1.0194, norm:1.5018, tok/sec: 99575.80, flops:104.51, batch-reuse:1
@ 6191 train 4.2598 , allloss: 4.2604, dt: 1318.70ms, fracRes: 0.4435, norm(attn): 0.2031, norm(output): 0.6250, norm(x): 0.6143, norm(y): 1.0193, norm:1.4716, tok/sec: 99394.57, flops:104.32, batch-reuse:1
@ 6192 train 4.2061 , allloss: 4.2067, dt: 1301.21ms, fracRes: 0.4430, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6145, norm(y): 1.0194, norm:1.2627, tok/sec: 100731.10, flops:105.72, batch-reuse:1
@ 6193 train 4.2360 , allloss: 4.2379, dt: 1270.62ms, fracRes: 0.4425, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6103, norm(y): 1.0195, norm:1.2527, tok/sec: 103156.34, flops:108.26, batch-reuse:1
@ 6194 train 4.2500 , allloss: 4.2517, dt: 1310.95ms, fracRes: 0.4435, norm(attn): 0.2061, norm(output): 0.6250, norm(x): 0.6100, norm(y): 1.0195, norm:1.1933, tok/sec: 99982.80, flops:104.93, batch-reuse:1
@ 6195 train 4.3200 , allloss: 4.3209, dt: 1333.18ms, fracRes: 0.4435, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6113, norm(y): 1.0194, norm:1.2755, tok/sec: 98315.35, flops:103.18, batch-reuse:1
@ 6196 train 4.2448 , allloss: 4.2454, dt: 1323.94ms, fracRes: 0.4431, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6121, norm(y): 1.0194, norm:1.2543, tok/sec: 99001.32, flops:103.90, batch-reuse:1
@ 6197 train 4.1505 , allloss: 4.1513, dt: 1333.69ms, fracRes: 0.4421, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6148, norm(y): 1.0193, norm:1.2529, tok/sec: 98277.94, flops:103.14, batch-reuse:1
@ 6198 train 4.2420 , allloss: 4.2425, dt: 1299.57ms, fracRes: 0.4414, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6115, norm(y): 1.0194, norm:1.1342, tok/sec: 100858.30, flops:105.85, batch-reuse:1
@ 6199 train 4.2327 , allloss: 4.2332, dt: 1321.08ms, fracRes: 0.4425, norm(attn): 0.2070, norm(output): 0.6250, norm(x): 0.6141, norm(y): 1.0193, norm:1.2344, tok/sec: 99215.67, flops:104.13, batch-reuse:1
@ 6200 train 4.2497 , allloss: 4.2503, dt: 1326.86ms, fracRes: 0.4439, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6086, norm(y): 1.0193, norm:1.1074, tok/sec: 98783.38, flops:103.68, batch-reuse:1
@ 6201 train 4.1874 , allloss: 4.1882, dt: 1341.53ms, fracRes: 0.4441, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6114, norm(y): 1.0193, norm:1.3097, tok/sec: 97703.17, flops:102.54, batch-reuse:1
@ 6202 train 4.1883 , allloss: 4.1890, dt: 1336.37ms, fracRes: 0.4432, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6127, norm(y): 1.0193, norm:1.1553, tok/sec: 98080.85, flops:102.94, batch-reuse:1
@ 6203 train 4.2381 , allloss: 4.2386, dt: 1296.84ms, fracRes: 0.4420, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6087, norm(y): 1.0192, norm:1.5314, tok/sec: 101070.26, flops:106.08, batch-reuse:1
@ 6204 train 4.3218 , allloss: 4.3227, dt: 1289.11ms, fracRes: 0.4426, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6091, norm(y): 1.0193, norm:1.4074, tok/sec: 101676.05, flops:106.71, batch-reuse:1
@ 6205 train 4.2492 , allloss: 4.2502, dt: 1273.63ms, fracRes: 0.4420, norm(attn): 0.2031, norm(output): 0.6250, norm(x): 0.6062, norm(y): 1.0193, norm:1.3547, tok/sec: 102912.45, flops:108.01, batch-reuse:1
@ 6206 train 4.1748 , allloss: 4.1757, dt: 1286.95ms, fracRes: 0.4423, norm(attn): 0.2031, norm(output): 0.6250, norm(x): 0.6066, norm(y): 1.0193, norm:1.3543, tok/sec: 101847.30, flops:106.89, batch-reuse:1
@ 6207 train 4.2093 , allloss: 4.2097, dt: 1287.67ms, fracRes: 0.4436, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6082, norm(y): 1.0192, norm:1.3230, tok/sec: 101790.16, flops:106.83, batch-reuse:1
@ 6208 train 4.2790 , allloss: 4.2799, dt: 1278.72ms, fracRes: 0.4441, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6086, norm(y): 1.0193, norm:1.1538, tok/sec: 102502.24, flops:107.58, batch-reuse:1
@ 6209 train 4.1665 , allloss: 4.1674, dt: 1311.99ms, fracRes: 0.4445, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6088, norm(y): 1.0193, norm:1.3213, tok/sec: 99903.22, flops:104.85, batch-reuse:1
@ 6210 train 4.2088 , allloss: 4.2100, dt: 1283.87ms, fracRes: 0.4452, norm(attn): 0.2031, norm(output): 0.6289, norm(x): 0.6073, norm(y): 1.0193, norm:1.3047, tok/sec: 102091.09, flops:107.15, batch-reuse:1
@ 6211 train 4.2043 , allloss: 4.2060, dt: 1295.18ms, fracRes: 0.4443, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6072, norm(y): 1.0192, norm:1.3765, tok/sec: 101200.14, flops:106.21, batch-reuse:1
@ 6212 train 4.2324 , allloss: 4.2334, dt: 1300.16ms, fracRes: 0.4434, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6079, norm(y): 1.0192, norm:1.2195, tok/sec: 100812.14, flops:105.80, batch-reuse:1
@ 6213 train 4.2169 , allloss: 4.2178, dt: 1303.66ms, fracRes: 0.4422, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6086, norm(y): 1.0192, norm:1.3906, tok/sec: 100541.71, flops:105.52, batch-reuse:1
@ 6214 train 4.1309 , allloss: 4.1315, dt: 1305.41ms, fracRes: 0.4436, norm(attn): 0.2070, norm(output): 0.6328, norm(x): 0.6150, norm(y): 1.0192, norm:1.2778, tok/sec: 100407.12, flops:105.38, batch-reuse:1
@ 6215 train 4.2360 , allloss: 4.2368, dt: 1313.64ms, fracRes: 0.4433, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6097, norm(y): 1.0193, norm:1.4970, tok/sec: 99777.85, flops:104.72, batch-reuse:1
@ 6216 train 4.2293 , allloss: 4.2299, dt: 1292.11ms, fracRes: 0.4433, norm(attn): 0.2031, norm(output): 0.6289, norm(x): 0.6075, norm(y): 1.0193, norm:1.2175, tok/sec: 101439.93, flops:106.46, batch-reuse:1
@ 6217 train 4.1542 , allloss: 4.1547, dt: 1308.65ms, fracRes: 0.4449, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6132, norm(y): 1.0193, norm:1.3903, tok/sec: 100158.12, flops:105.12, batch-reuse:1
@ 6218 train 4.1953 , allloss: 4.1958, dt: 1313.09ms, fracRes: 0.4441, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6088, norm(y): 1.0192, norm:1.3007, tok/sec: 99819.87, flops:104.76, batch-reuse:1
@ 6219 train 4.2475 , allloss: 4.2487, dt: 1295.67ms, fracRes: 0.4439, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6096, norm(y): 1.0192, norm:1.2461, tok/sec: 101161.50, flops:106.17, batch-reuse:1
@ 6220 train 4.2729 , allloss: 4.2739, dt: 1298.41ms, fracRes: 0.4423, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6072, norm(y): 1.0192, norm:1.2416, tok/sec: 100948.40, flops:105.95, batch-reuse:1
@ 6221 train 4.1448 , allloss: 4.1455, dt: 1292.92ms, fracRes: 0.4418, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6049, norm(y): 1.0191, norm:1.2478, tok/sec: 101376.91, flops:106.40, batch-reuse:1
@ 6222 train 4.2253 , allloss: 4.2272, dt: 1288.96ms, fracRes: 0.4428, norm(attn): 0.2031, norm(output): 0.6289, norm(x): 0.6056, norm(y): 1.0192, norm:1.2375, tok/sec: 101688.26, flops:106.72, batch-reuse:1
@ 6223 train 4.3010 , allloss: 4.3024, dt: 1311.64ms, fracRes: 0.4444, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6070, norm(y): 1.0193, norm:1.3341, tok/sec: 99930.24, flops:104.88, batch-reuse:1
@ 6224 train 4.2162 , allloss: 4.2167, dt: 1319.51ms, fracRes: 0.4421, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6028, norm(y): 1.0192, norm:1.1736, tok/sec: 99333.61, flops:104.25, batch-reuse:1
@ 6225 train 4.1985 , allloss: 4.1993, dt: 1311.04ms, fracRes: 0.4424, norm(attn): 0.2061, norm(output): 0.6250, norm(x): 0.6054, norm(y): 1.0192, norm:1.2916, tok/sec: 99975.54, flops:104.93, batch-reuse:1
@ 6226 train 4.2288 , allloss: 4.2297, dt: 1302.21ms, fracRes: 0.4438, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6073, norm(y): 1.0192, norm:1.0866, tok/sec: 100653.37, flops:105.64, batch-reuse:1
@ 6227 train 4.2551 , allloss: 4.2560, dt: 1282.88ms, fracRes: 0.4437, norm(attn): 0.2061, norm(output): 0.6250, norm(x): 0.6070, norm(y): 1.0192, norm:1.2112, tok/sec: 102170.40, flops:107.23, batch-reuse:1
@ 6228 train 4.1202 , allloss: 4.1209, dt: 1309.00ms, fracRes: 0.4439, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6062, norm(y): 1.0192, norm:1.2638, tok/sec: 100131.09, flops:105.09, batch-reuse:1
@ 6229 train 4.0836 , allloss: 4.0844, dt: 1333.62ms, fracRes: 0.4445, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6083, norm(y): 1.0191, norm:1.0605, tok/sec: 98282.55, flops:103.15, batch-reuse:1
@ 6230 train 4.2003 , allloss: 4.2011, dt: 1329.58ms, fracRes: 0.4430, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6050, norm(y): 1.0191, norm:1.1129, tok/sec: 98581.87, flops:103.46, batch-reuse:1
@ 6231 train 4.1188 , allloss: 4.1196, dt: 1344.20ms, fracRes: 0.4418, norm(attn): 0.2070, norm(output): 0.6289, norm(x): 0.6066, norm(y): 1.0191, norm:1.1968, tok/sec: 97509.06, flops:102.34, batch-reuse:1
@ 6232 train 4.1554 , allloss: 4.1569, dt: 1308.99ms, fracRes: 0.4417, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6077, norm(y): 1.0191, norm:1.0637, tok/sec: 100131.94, flops:105.09, batch-reuse:1
@ 6233 train 4.1828 , allloss: 4.1834, dt: 1291.26ms, fracRes: 0.4411, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6080, norm(y): 1.0191, norm:1.1308, tok/sec: 101507.41, flops:106.53, batch-reuse:1
@ 6234 train 4.1489 , allloss: 4.1492, dt: 1297.50ms, fracRes: 0.4421, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6072, norm(y): 1.0190, norm:1.1060, tok/sec: 101018.82, flops:106.02, batch-reuse:1
@ 6235 train 4.2222 , allloss: 4.2226, dt: 1320.20ms, fracRes: 0.4433, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6074, norm(y): 1.0191, norm:1.2229, tok/sec: 99281.73, flops:104.20, batch-reuse:1
@ 6236 train 4.2156 , allloss: 4.2167, dt: 1299.64ms, fracRes: 0.4434, norm(attn): 0.2031, norm(output): 0.6289, norm(x): 0.6089, norm(y): 1.0191, norm:1.3573, tok/sec: 100852.25, flops:105.85, batch-reuse:1
@ 6237 train 4.2456 , allloss: 4.2482, dt: 1275.98ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6128, norm(y): 1.0193, norm:1.4958, tok/sec: 102722.67, flops:107.81, batch-reuse:1
@ 6238 train 4.1354 , allloss: 4.1363, dt: 1317.84ms, fracRes: 0.4427, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6077, norm(y): 1.0191, norm:1.6178, tok/sec: 99459.50, flops:104.38, batch-reuse:1
@ 6239 train 4.2018 , allloss: 4.2053, dt: 1292.88ms, fracRes: 0.4442, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6108, norm(y): 1.0191, norm:1.3496, tok/sec: 101380.05, flops:106.40, batch-reuse:1
@ 6240 train 4.1837 , allloss: 4.1843, dt: 1307.70ms, fracRes: 0.4433, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6101, norm(y): 1.0191, norm:1.4343, tok/sec: 100231.09, flops:105.19, batch-reuse:1
@ 6241 train 4.0939 , allloss: 4.0946, dt: 1291.15ms, fracRes: 0.4421, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6075, norm(y): 1.0191, norm:1.2513, tok/sec: 101515.73, flops:106.54, batch-reuse:1
@ 6242 train 4.1871 , allloss: 4.1876, dt: 1310.86ms, fracRes: 0.4416, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6073, norm(y): 1.0191, norm:1.3304, tok/sec: 99989.18, flops:104.94, batch-reuse:1
@ 6243 train 4.2694 , allloss: 4.2700, dt: 1314.91ms, fracRes: 0.4417, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6079, norm(y): 1.0193, norm:1.1616, tok/sec: 99681.21, flops:104.62, batch-reuse:1
@ 6244 train 4.0846 , allloss: 4.0854, dt: 1310.90ms, fracRes: 0.4408, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6073, norm(y): 1.0191, norm:1.1066, tok/sec: 99986.11, flops:104.94, batch-reuse:1
@ 6245 train 4.2245 , allloss: 4.2252, dt: 1305.12ms, fracRes: 0.4415, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6067, norm(y): 1.0191, norm:1.2036, tok/sec: 100428.90, flops:105.40, batch-reuse:1
@ 6246 train 4.2914 , allloss: 4.2924, dt: 1288.90ms, fracRes: 0.4422, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6060, norm(y): 1.0191, norm:1.2811, tok/sec: 101692.66, flops:106.73, batch-reuse:1
@ 6247 train 4.0104 , allloss: 4.0109, dt: 1313.97ms, fracRes: 0.4431, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6073, norm(y): 1.0190, norm:1.2498, tok/sec: 99752.69, flops:104.69, batch-reuse:1
@ 6248 train 4.1326 , allloss: 4.1336, dt: 1293.87ms, fracRes: 0.4437, norm(attn): 0.2031, norm(output): 0.6250, norm(x): 0.6061, norm(y): 1.0192, norm:1.1658, tok/sec: 101302.17, flops:106.32, batch-reuse:1
@ 6249 train 4.1501 , allloss: 4.1518, dt: 1315.31ms, fracRes: 0.4432, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6052, norm(y): 1.0192, norm:1.2778, tok/sec: 99650.89, flops:104.59, batch-reuse:1
@ 6250 train 4.1170 , allloss: 4.1192, dt: 1317.00ms, fracRes: 0.4427, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6096, norm(y): 1.0191, norm:1.1511, tok/sec: 99523.09, flops:104.45, batch-reuse:1
@ 6251 train 4.1787 , allloss: 4.1792, dt: 1311.43ms, fracRes: 0.4427, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6062, norm(y): 1.0192, norm:1.1991, tok/sec: 99945.57, flops:104.89, batch-reuse:1
@ 6252 train 4.2030 , allloss: 4.2036, dt: 1295.20ms, fracRes: 0.4445, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6081, norm(y): 1.0193, norm:1.1992, tok/sec: 101198.62, flops:106.21, batch-reuse:1
@ 6253 train 4.1238 , allloss: 4.1245, dt: 1304.71ms, fracRes: 0.4438, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6049, norm(y): 1.0193, norm:1.1669, tok/sec: 100460.46, flops:105.44, batch-reuse:1
@ 6254 train 4.2330 , allloss: 4.2335, dt: 1334.17ms, fracRes: 0.4435, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6060, norm(y): 1.0193, norm:1.0968, tok/sec: 98242.33, flops:103.11, batch-reuse:1
@ 6255 train 4.3445 , allloss: 4.3454, dt: 1340.32ms, fracRes: 0.4453, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6086, norm(y): 1.0193, norm:1.2349, tok/sec: 97791.60, flops:102.63, batch-reuse:1
@ 6256 train 4.1511 , allloss: 4.1514, dt: 1343.27ms, fracRes: 0.4435, norm(attn): 0.2051, norm(output): 0.6211, norm(x): 0.6065, norm(y): 1.0192, norm:1.2321, tok/sec: 97576.75, flops:102.41, batch-reuse:1
@ 6257 train 4.1119 , allloss: 4.1122, dt: 1304.93ms, fracRes: 0.4417, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6095, norm(y): 1.0192, norm:1.1874, tok/sec: 100443.48, flops:105.42, batch-reuse:1
@ 6258 train 4.1107 , allloss: 4.1115, dt: 1298.39ms, fracRes: 0.4420, norm(attn): 0.2070, norm(output): 0.6250, norm(x): 0.6104, norm(y): 1.0192, norm:1.2999, tok/sec: 100949.90, flops:105.95, batch-reuse:1
@ 6259 train 4.2198 , allloss: 4.2204, dt: 1287.70ms, fracRes: 0.4422, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6088, norm(y): 1.0194, norm:1.0797, tok/sec: 101787.65, flops:106.83, batch-reuse:1
@ 6260 train 4.1842 , allloss: 4.1849, dt: 1308.15ms, fracRes: 0.4424, norm(attn): 0.2061, norm(output): 0.6250, norm(x): 0.6129, norm(y): 1.0193, norm:1.2573, tok/sec: 100196.60, flops:105.16, batch-reuse:1
@ 6261 train 4.2262 , allloss: 4.2267, dt: 1310.51ms, fracRes: 0.4423, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6093, norm(y): 1.0193, norm:1.1186, tok/sec: 100016.38, flops:104.97, batch-reuse:1
@ 6262 train 4.1046 , allloss: 4.1055, dt: 1294.41ms, fracRes: 0.4424, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6098, norm(y): 1.0193, norm:1.1780, tok/sec: 101259.70, flops:106.27, batch-reuse:1
@ 6263 train 4.1015 , allloss: 4.1023, dt: 1311.10ms, fracRes: 0.4424, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6104, norm(y): 1.0192, norm:1.0646, tok/sec: 99971.27, flops:104.92, batch-reuse:1
@ 6264 train 4.0820 , allloss: 4.0826, dt: 1344.03ms, fracRes: 0.4415, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6105, norm(y): 1.0192, norm:1.1742, tok/sec: 97521.50, flops:102.35, batch-reuse:1
@ 6265 train 4.0723 , allloss: 4.0730, dt: 1331.55ms, fracRes: 0.4425, norm(attn): 0.2041, norm(output): 0.6328, norm(x): 0.6122, norm(y): 1.0192, norm:1.0800, tok/sec: 98435.45, flops:103.31, batch-reuse:1
@ 6266 train 4.0886 , allloss: 4.0896, dt: 1345.65ms, fracRes: 0.4424, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6092, norm(y): 1.0192, norm:1.2084, tok/sec: 97404.46, flops:102.23, batch-reuse:1
@ 6267 train 4.1105 , allloss: 4.1113, dt: 1346.55ms, fracRes: 0.4424, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6120, norm(y): 1.0191, norm:1.0888, tok/sec: 97339.28, flops:102.16, batch-reuse:1
@ 6268 train 4.1594 , allloss: 4.1601, dt: 1288.98ms, fracRes: 0.4425, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6066, norm(y): 1.0192, norm:1.1390, tok/sec: 101686.28, flops:106.72, batch-reuse:1
@ 6269 train 4.1318 , allloss: 4.1324, dt: 1307.99ms, fracRes: 0.4442, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6079, norm(y): 1.0192, norm:1.0715, tok/sec: 100208.55, flops:105.17, batch-reuse:1
@ 6270 train 4.0593 , allloss: 4.0599, dt: 1312.54ms, fracRes: 0.4424, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6071, norm(y): 1.0192, norm:1.1761, tok/sec: 99861.46, flops:104.81, batch-reuse:1
@ 6271 train 4.0646 , allloss: 4.0653, dt: 1320.08ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6061, norm(y): 1.0192, norm:1.1164, tok/sec: 99290.88, flops:104.21, batch-reuse:1
@ 6272 train 4.1588 , allloss: 4.1598, dt: 1298.74ms, fracRes: 0.4431, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6089, norm(y): 1.0192, norm:1.1920, tok/sec: 100922.68, flops:105.92, batch-reuse:1
@ 6273 train 4.1474 , allloss: 4.1481, dt: 1329.13ms, fracRes: 0.4427, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6103, norm(y): 1.0191, norm:1.1540, tok/sec: 98615.22, flops:103.50, batch-reuse:1
@ 6274 train 4.1510 , allloss: 4.1516, dt: 1324.29ms, fracRes: 0.4427, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6114, norm(y): 1.0191, norm:1.0092, tok/sec: 98975.64, flops:103.88, batch-reuse:1
@ 6275 train 4.1156 , allloss: 4.1161, dt: 1332.69ms, fracRes: 0.4417, norm(attn): 0.2090, norm(output): 0.6250, norm(x): 0.6090, norm(y): 1.0191, norm:1.2235, tok/sec: 98351.14, flops:103.22, batch-reuse:1
@ 6276 train 4.1491 , allloss: 4.1496, dt: 1319.32ms, fracRes: 0.4420, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6132, norm(y): 1.0192, norm:1.0765, tok/sec: 99348.12, flops:104.27, batch-reuse:1
@ 6277 train 4.1376 , allloss: 4.1396, dt: 1296.87ms, fracRes: 0.4423, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6138, norm(y): 1.0192, norm:1.2967, tok/sec: 101067.98, flops:106.07, batch-reuse:1
@ 6278 train 4.0637 , allloss: 4.0646, dt: 1297.91ms, fracRes: 0.4419, norm(attn): 0.2070, norm(output): 0.6328, norm(x): 0.6111, norm(y): 1.0192, norm:1.1825, tok/sec: 100987.14, flops:105.99, batch-reuse:1
@ 6279 train 3.9150 , allloss: 3.9156, dt: 1309.89ms, fracRes: 0.4412, norm(attn): 0.2070, norm(output): 0.6289, norm(x): 0.6065, norm(y): 1.0191, norm:1.3049, tok/sec: 100063.62, flops:105.02, batch-reuse:1
@ 6280 train 4.0240 , allloss: 4.0249, dt: 1298.50ms, fracRes: 0.4423, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6082, norm(y): 1.0192, norm:1.0672, tok/sec: 100940.77, flops:105.94, batch-reuse:1
@ 6281 train 4.0826 , allloss: 4.0850, dt: 1285.43ms, fracRes: 0.4418, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6115, norm(y): 1.0191, norm:1.2035, tok/sec: 101967.61, flops:107.02, batch-reuse:1
@ 6282 train 4.0177 , allloss: 4.0184, dt: 1304.48ms, fracRes: 0.4423, norm(attn): 0.2080, norm(output): 0.6328, norm(x): 0.6124, norm(y): 1.0191, norm:1.0962, tok/sec: 100478.69, flops:105.45, batch-reuse:1
@ 6283 train 4.0275 , allloss: 4.0281, dt: 1288.62ms, fracRes: 0.4424, norm(attn): 0.2070, norm(output): 0.6250, norm(x): 0.6091, norm(y): 1.0191, norm:1.0075, tok/sec: 101715.37, flops:106.75, batch-reuse:1
@ 6284 train 4.1405 , allloss: 4.1412, dt: 1273.95ms, fracRes: 0.4430, norm(attn): 0.2061, norm(output): 0.6250, norm(x): 0.6108, norm(y): 1.0192, norm:1.1172, tok/sec: 102886.39, flops:107.98, batch-reuse:1
@ 6285 train 4.0663 , allloss: 4.0670, dt: 1282.20ms, fracRes: 0.4425, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6101, norm(y): 1.0192, norm:1.1126, tok/sec: 102224.10, flops:107.29, batch-reuse:1
@ 6286 train 3.9767 , allloss: 3.9775, dt: 1294.40ms, fracRes: 0.4416, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6135, norm(y): 1.0191, norm:1.1861, tok/sec: 101260.61, flops:106.27, batch-reuse:1
@ 6287 train 4.0449 , allloss: 4.0455, dt: 1273.56ms, fracRes: 0.4427, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6073, norm(y): 1.0191, norm:1.1838, tok/sec: 102917.53, flops:108.01, batch-reuse:1
@ 6288 train 4.1636 , allloss: 4.1712, dt: 1317.18ms, fracRes: 0.4441, norm(attn): 0.2080, norm(output): 0.6641, norm(x): 0.6429, norm(y): 1.0192, norm:1.2989, tok/sec: 99509.69, flops:104.44, batch-reuse:1
@ 6289 train 4.2189 , allloss: 4.2450, dt: 1275.80ms, fracRes: 0.4411, norm(attn): 0.2188, norm(output): 0.6484, norm(x): 0.6227, norm(y): 1.0190, norm:298.9256, tok/sec: 102736.82, flops:107.82, batch-reuse:1
@ 6290 train 4.0967 , allloss: 4.0980, dt: 1296.00ms, fracRes: 0.4427, norm(attn): 0.2090, norm(output): 0.6328, norm(x): 0.6066, norm(y): 1.0190, norm:1.7114, tok/sec: 101136.08, flops:106.14, batch-reuse:1
@ 6291 train 4.0143 , allloss: 4.0152, dt: 1296.13ms, fracRes: 0.4429, norm(attn): 0.2070, norm(output): 0.6328, norm(x): 0.6079, norm(y): 1.0190, norm:1.1963, tok/sec: 101125.31, flops:106.13, batch-reuse:1
@ 6292 train 4.0793 , allloss: 4.0848, dt: 1304.37ms, fracRes: 0.4424, norm(attn): 0.2100, norm(output): 0.6367, norm(x): 0.6112, norm(y): 1.0191, norm:2.0266, tok/sec: 100486.76, flops:105.46, batch-reuse:1
@ 6293 train 4.0807 , allloss: 4.0815, dt: 1304.86ms, fracRes: 0.4434, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6080, norm(y): 1.0194, norm:1.4292, tok/sec: 100449.03, flops:105.42, batch-reuse:1
@ 6294 train 4.1222 , allloss: 4.1232, dt: 1289.55ms, fracRes: 0.4403, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6040, norm(y): 1.0196, norm:1.2520, tok/sec: 101642.01, flops:106.68, batch-reuse:1
@ 6295 train 4.1234 , allloss: 4.1241, dt: 1308.11ms, fracRes: 0.4428, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6151, norm(y): 1.0196, norm:1.3607, tok/sec: 100199.85, flops:105.16, batch-reuse:1
@ 6296 train 4.0993 , allloss: 4.0997, dt: 1282.67ms, fracRes: 0.4419, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6134, norm(y): 1.0198, norm:1.2471, tok/sec: 102186.92, flops:107.25, batch-reuse:1
@ 6297 train 4.0454 , allloss: 4.0458, dt: 1305.01ms, fracRes: 0.4432, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6162, norm(y): 1.0199, norm:1.1868, tok/sec: 100437.65, flops:105.41, batch-reuse:1
@ 6298 train 4.0504 , allloss: 4.0523, dt: 1304.06ms, fracRes: 0.4437, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6213, norm(y): 1.0200, norm:1.3243, tok/sec: 100510.35, flops:105.49, batch-reuse:1
@ 6299 train 4.0790 , allloss: 4.0801, dt: 1317.26ms, fracRes: 0.4451, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6263, norm(y): 1.0200, norm:1.4254, tok/sec: 99503.46, flops:104.43, batch-reuse:1
@ 6300 train 3.9621 , allloss: 3.9637, dt: 1338.83ms, fracRes: 0.4433, norm(attn): 0.2031, norm(output): 0.6250, norm(x): 0.6186, norm(y): 1.0205, norm:1.5311, tok/sec: 97900.65, flops:102.75, batch-reuse:1
@ 6301 train 4.1176 , allloss: 4.1181, dt: 1335.60ms, fracRes: 0.4453, norm(attn): 0.2041, norm(output): 0.6406, norm(x): 0.6366, norm(y): 1.0203, norm:1.5314, tok/sec: 98137.19, flops:103.00, batch-reuse:1
@ 6302 train 4.1226 , allloss: 4.1237, dt: 1342.23ms, fracRes: 0.4444, norm(attn): 0.2041, norm(output): 0.6250, norm(x): 0.6247, norm(y): 1.0204, norm:1.2785, tok/sec: 97652.48, flops:102.49, batch-reuse:1
@ 6303 train 4.0354 , allloss: 4.0420, dt: 1337.54ms, fracRes: 0.4429, norm(attn): 0.2061, norm(output): 0.6250, norm(x): 0.6226, norm(y): 1.0204, norm:1.1585, tok/sec: 97994.76, flops:102.85, batch-reuse:1
@ 6304 train 4.1063 , allloss: 4.1126, dt: 1307.70ms, fracRes: 0.4434, norm(attn): 0.2090, norm(output): 0.7188, norm(x): 0.7174, norm(y): 1.0205, norm:1.2116, tok/sec: 100231.02, flops:105.19, batch-reuse:1
@ 6305 train 4.0242 , allloss: 4.0263, dt: 1308.57ms, fracRes: 0.4429, norm(attn): 0.2061, norm(output): 0.6641, norm(x): 0.6641, norm(y): 1.0205, norm:1.2824, tok/sec: 100164.22, flops:105.12, batch-reuse:1
@ 6306 train 4.1681 , allloss: 4.1694, dt: 1314.21ms, fracRes: 0.4413, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6448, norm(y): 1.0207, norm:1.2693, tok/sec: 99734.32, flops:104.67, batch-reuse:1
@ 6307 train 4.0292 , allloss: 4.0331, dt: 1299.73ms, fracRes: 0.4428, norm(attn): 0.2080, norm(output): 0.6719, norm(x): 0.6714, norm(y): 1.0206, norm:1.4690, tok/sec: 100845.91, flops:105.84, batch-reuse:1
@ 6308 train 4.1738 , allloss: 4.1786, dt: 1293.76ms, fracRes: 0.4429, norm(attn): 0.2139, norm(output): 0.7891, norm(x): 0.7870, norm(y): 1.0207, norm:2.2511, tok/sec: 101310.96, flops:106.33, batch-reuse:1
@ 6309 train 4.1249 , allloss: 4.1258, dt: 1301.40ms, fracRes: 0.4448, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6237, norm(y): 1.0207, norm:1.3739, tok/sec: 100716.32, flops:105.70, batch-reuse:1
@ 6310 train 4.0563 , allloss: 4.0572, dt: 1299.25ms, fracRes: 0.4441, norm(attn): 0.2070, norm(output): 0.6211, norm(x): 0.6239, norm(y): 1.0209, norm:1.2353, tok/sec: 100882.57, flops:105.88, batch-reuse:1
@ 6311 train 4.1637 , allloss: 4.1642, dt: 1336.09ms, fracRes: 0.4460, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6290, norm(y): 1.0207, norm:1.2444, tok/sec: 98101.22, flops:102.96, batch-reuse:1
@ 6312 train 4.0317 , allloss: 4.0321, dt: 1331.19ms, fracRes: 0.4434, norm(attn): 0.2041, norm(output): 0.6133, norm(x): 0.6195, norm(y): 1.0210, norm:1.2979, tok/sec: 98461.97, flops:103.34, batch-reuse:1
@ 6313 train 4.1954 , allloss: 4.1958, dt: 1306.96ms, fracRes: 0.4442, norm(attn): 0.2031, norm(output): 0.6211, norm(x): 0.6244, norm(y): 1.0210, norm:1.3938, tok/sec: 100287.55, flops:105.25, batch-reuse:1
@ 6314 train 4.0007 , allloss: 4.0019, dt: 1309.19ms, fracRes: 0.4438, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6291, norm(y): 1.0210, norm:1.5145, tok/sec: 100116.64, flops:105.07, batch-reuse:1
@ 6315 train 4.0493 , allloss: 4.0505, dt: 1306.62ms, fracRes: 0.4435, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6270, norm(y): 1.0210, norm:1.3666, tok/sec: 100314.09, flops:105.28, batch-reuse:1
@ 6316 train 4.0999 , allloss: 4.1009, dt: 1297.27ms, fracRes: 0.4428, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6256, norm(y): 1.0209, norm:1.3729, tok/sec: 101036.49, flops:106.04, batch-reuse:1
@ 6317 train 4.0252 , allloss: 4.0260, dt: 1312.84ms, fracRes: 0.4426, norm(attn): 0.2070, norm(output): 0.6211, norm(x): 0.6249, norm(y): 1.0209, norm:1.1580, tok/sec: 99838.14, flops:104.78, batch-reuse:1
@ 6318 train 4.1097 , allloss: 4.1104, dt: 1316.59ms, fracRes: 0.4431, norm(attn): 0.2070, norm(output): 0.6211, norm(x): 0.6237, norm(y): 1.0211, norm:1.2980, tok/sec: 99553.86, flops:104.48, batch-reuse:1
@ 6319 train 3.9554 , allloss: 3.9560, dt: 1307.73ms, fracRes: 0.4428, norm(attn): 0.2070, norm(output): 0.6211, norm(x): 0.6201, norm(y): 1.0211, norm:1.2256, tok/sec: 100228.68, flops:105.19, batch-reuse:1
@ 6320 train 4.1010 , allloss: 4.1016, dt: 1305.06ms, fracRes: 0.4423, norm(attn): 0.2061, norm(output): 0.6211, norm(x): 0.6217, norm(y): 1.0210, norm:1.1722, tok/sec: 100433.50, flops:105.41, batch-reuse:1
@ 6321 train 4.1214 , allloss: 4.1221, dt: 1313.85ms, fracRes: 0.4420, norm(attn): 0.2080, norm(output): 0.6250, norm(x): 0.6269, norm(y): 1.0210, norm:1.2512, tok/sec: 99761.52, flops:104.70, batch-reuse:1
@ 6322 train 3.9501 , allloss: 3.9507, dt: 1302.26ms, fracRes: 0.4410, norm(attn): 0.2070, norm(output): 0.6250, norm(x): 0.6246, norm(y): 1.0210, norm:1.4533, tok/sec: 100649.87, flops:105.63, batch-reuse:1
@ 6323 train 4.1378 , allloss: 4.1384, dt: 1310.19ms, fracRes: 0.4419, norm(attn): 0.2061, norm(output): 0.6250, norm(x): 0.6270, norm(y): 1.0210, norm:1.2020, tok/sec: 100040.60, flops:104.99, batch-reuse:1
@ 6324 train 4.0876 , allloss: 4.0884, dt: 1291.90ms, fracRes: 0.4415, norm(attn): 0.2051, norm(output): 0.6211, norm(x): 0.6243, norm(y): 1.0211, norm:1.2557, tok/sec: 101456.44, flops:106.48, batch-reuse:1
@ 6325 train 4.0601 , allloss: 4.0611, dt: 1306.59ms, fracRes: 0.4425, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6279, norm(y): 1.0210, norm:1.3422, tok/sec: 100315.75, flops:105.28, batch-reuse:1
@ 6326 train 4.1074 , allloss: 4.1083, dt: 1332.97ms, fracRes: 0.4433, norm(attn): 0.2041, norm(output): 0.6211, norm(x): 0.6242, norm(y): 1.0209, norm:1.1880, tok/sec: 98330.96, flops:103.20, batch-reuse:1
@ 6327 train 4.2673 , allloss: 4.2679, dt: 1306.53ms, fracRes: 0.4451, norm(attn): 0.2041, norm(output): 0.6289, norm(x): 0.6263, norm(y): 1.0209, norm:1.3510, tok/sec: 100320.50, flops:105.29, batch-reuse:1
@ 6328 train 4.2323 , allloss: 4.2330, dt: 1310.94ms, fracRes: 0.4445, norm(attn): 0.2061, norm(output): 0.6250, norm(x): 0.6286, norm(y): 1.0210, norm:1.1596, tok/sec: 99983.27, flops:104.93, batch-reuse:1
@ 6329 train 4.2296 , allloss: 4.2304, dt: 1300.91ms, fracRes: 0.4444, norm(attn): 0.2070, norm(output): 0.6250, norm(x): 0.6307, norm(y): 1.0211, norm:1.2129, tok/sec: 100754.36, flops:105.74, batch-reuse:1
@ 6330 train 4.3004 , allloss: 4.3013, dt: 1291.00ms, fracRes: 0.4452, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6316, norm(y): 1.0210, norm:1.2144, tok/sec: 101527.84, flops:106.56, batch-reuse:1
@ 6331 train 4.1177 , allloss: 4.1186, dt: 1321.24ms, fracRes: 0.4450, norm(attn): 0.2051, norm(output): 0.6289, norm(x): 0.6287, norm(y): 1.0209, norm:1.1943, tok/sec: 99203.93, flops:104.12, batch-reuse:1
@ 6332 train 4.2917 , allloss: 4.2932, dt: 1305.72ms, fracRes: 0.4434, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6273, norm(y): 1.0211, norm:1.2459, tok/sec: 100382.94, flops:105.35, batch-reuse:1
@ 6333 train 4.2605 , allloss: 4.2618, dt: 1302.47ms, fracRes: 0.4427, norm(attn): 0.2061, norm(output): 0.6250, norm(x): 0.6316, norm(y): 1.0210, norm:1.1568, tok/sec: 100633.52, flops:105.62, batch-reuse:1
@ 6334 train 4.2182 , allloss: 4.2197, dt: 1289.14ms, fracRes: 0.4453, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6358, norm(y): 1.0208, norm:1.2230, tok/sec: 101674.10, flops:106.71, batch-reuse:1
@ 6335 train 4.2368 , allloss: 4.2373, dt: 1314.65ms, fracRes: 0.4435, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6291, norm(y): 1.0208, norm:1.4181, tok/sec: 99700.86, flops:104.64, batch-reuse:1
@ 6336 train 4.1817 , allloss: 4.1823, dt: 1316.39ms, fracRes: 0.4436, norm(attn): 0.2051, norm(output): 0.6250, norm(x): 0.6248, norm(y): 1.0208, norm:1.2787, tok/sec: 99569.00, flops:104.50, batch-reuse:1
@ 6337 train 4.1579 , allloss: 4.1592, dt: 1308.95ms, fracRes: 0.4446, norm(attn): 0.2070, norm(output): 0.6289, norm(x): 0.6266, norm(y): 1.0208, norm:1.1667, tok/sec: 100135.08, flops:105.09, batch-reuse:1
@ 6338 train 4.1387 , allloss: 4.1391, dt: 1320.53ms, fracRes: 0.4433, norm(attn): 0.2070, norm(output): 0.6250, norm(x): 0.6275, norm(y): 1.0208, norm:1.2060, tok/sec: 99256.92, flops:104.17, batch-reuse:1
@ 6339 train 4.2010 , allloss: 4.2022, dt: 1308.34ms, fracRes: 0.4439, norm(attn): 0.2070, norm(output): 0.6289, norm(x): 0.6277, norm(y): 1.0207, norm:1.1534, tok/sec: 100181.96, flops:105.14, batch-reuse:1
@ 6340 train 4.2061 , allloss: 4.2070, dt: 1304.33ms, fracRes: 0.4441, norm(attn): 0.2080, norm(output): 0.6328, norm(x): 0.6295, norm(y): 1.0207, norm:1.1354, tok/sec: 100490.21, flops:105.47, batch-reuse:1
@ 6341 train 4.5186 , allloss: 4.5194, dt: 1319.23ms, fracRes: 0.4437, norm(attn): 0.2080, norm(output): 0.6289, norm(x): 0.6290, norm(y): 1.0208, norm:1.1787, tok/sec: 99354.81, flops:104.27, batch-reuse:1
@ 6342 train 4.2500 , allloss: 4.2510, dt: 1359.39ms, fracRes: 0.4415, norm(attn): 0.2080, norm(output): 0.6289, norm(x): 0.6253, norm(y): 1.0208, norm:1.2332, tok/sec: 96419.50, flops:101.19, batch-reuse:1
@ 6343 train 4.2753 , allloss: 4.2760, dt: 1361.17ms, fracRes: 0.4419, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6262, norm(y): 1.0207, norm:1.1764, tok/sec: 96293.59, flops:101.06, batch-reuse:1
@ 6344 train 4.1701 , allloss: 4.1705, dt: 1332.70ms, fracRes: 0.4414, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6289, norm(y): 1.0205, norm:1.1894, tok/sec: 98350.52, flops:103.22, batch-reuse:1
@ 6345 train 4.2017 , allloss: 4.2024, dt: 1297.51ms, fracRes: 0.4415, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6283, norm(y): 1.0206, norm:1.0739, tok/sec: 101017.78, flops:106.02, batch-reuse:1
@ 6346 train 4.3532 , allloss: 4.3539, dt: 1301.61ms, fracRes: 0.4441, norm(attn): 0.2051, norm(output): 0.6445, norm(x): 0.6319, norm(y): 1.0207, norm:1.3634, tok/sec: 100699.70, flops:105.69, batch-reuse:1
@ 6347 train 4.2696 , allloss: 4.2706, dt: 1288.69ms, fracRes: 0.4432, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6278, norm(y): 1.0207, norm:1.3573, tok/sec: 101709.59, flops:106.75, batch-reuse:1
@ 6348 train 4.2724 , allloss: 4.2738, dt: 1281.38ms, fracRes: 0.4431, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6267, norm(y): 1.0207, norm:1.2172, tok/sec: 102289.90, flops:107.36, batch-reuse:1
@ 6349 train 4.1849 , allloss: 4.1863, dt: 1328.15ms, fracRes: 0.4434, norm(attn): 0.2070, norm(output): 0.6328, norm(x): 0.6240, norm(y): 1.0206, norm:1.4024, tok/sec: 98687.95, flops:103.57, batch-reuse:1
@ 6350 train 4.2635 , allloss: 4.2639, dt: 1346.49ms, fracRes: 0.4448, norm(attn): 0.2041, norm(output): 0.6328, norm(x): 0.6236, norm(y): 1.0206, norm:1.2008, tok/sec: 97343.35, flops:102.16, batch-reuse:1
@ 6351 train 4.2415 , allloss: 4.2424, dt: 1349.55ms, fracRes: 0.4451, norm(attn): 0.2090, norm(output): 0.6367, norm(x): 0.6262, norm(y): 1.0206, norm:1.3242, tok/sec: 97123.10, flops:101.93, batch-reuse:1
@ 6352 train 4.2021 , allloss: 4.2041, dt: 1331.63ms, fracRes: 0.4440, norm(attn): 0.2090, norm(output): 0.6328, norm(x): 0.6238, norm(y): 1.0204, norm:1.2847, tok/sec: 98429.53, flops:103.30, batch-reuse:1
@ 6353 train 4.2006 , allloss: 4.2013, dt: 1297.15ms, fracRes: 0.4415, norm(attn): 0.2090, norm(output): 0.6289, norm(x): 0.6212, norm(y): 1.0206, norm:1.2788, tok/sec: 101045.83, flops:106.05, batch-reuse:1
@ 6354 train 4.2360 , allloss: 4.2371, dt: 1302.45ms, fracRes: 0.4426, norm(attn): 0.2041, norm(output): 0.6367, norm(x): 0.6245, norm(y): 1.0205, norm:1.2709, tok/sec: 100634.65, flops:105.62, batch-reuse:1
@ 6355 train 4.2760 , allloss: 4.2769, dt: 1310.19ms, fracRes: 0.4422, norm(attn): 0.2041, norm(output): 0.6367, norm(x): 0.6231, norm(y): 1.0205, norm:1.2078, tok/sec: 100040.47, flops:104.99, batch-reuse:1
@ 6356 train 4.2020 , allloss: 4.2026, dt: 1327.22ms, fracRes: 0.4418, norm(attn): 0.2041, norm(output): 0.6406, norm(x): 0.6249, norm(y): 1.0204, norm:1.1784, tok/sec: 98757.05, flops:103.65, batch-reuse:1
@ 6357 train 4.1822 , allloss: 4.1828, dt: 1340.01ms, fracRes: 0.4411, norm(attn): 0.2070, norm(output): 0.6367, norm(x): 0.6272, norm(y): 1.0205, norm:1.2160, tok/sec: 97814.01, flops:102.66, batch-reuse:1
@ 6358 train 4.2664 , allloss: 4.2670, dt: 1337.22ms, fracRes: 0.4421, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6286, norm(y): 1.0206, norm:1.4494, tok/sec: 98018.07, flops:102.87, batch-reuse:1
@ 6359 train 4.1747 , allloss: 4.1768, dt: 1347.37ms, fracRes: 0.4424, norm(attn): 0.2061, norm(output): 0.6406, norm(x): 0.6260, norm(y): 1.0205, norm:1.3871, tok/sec: 97279.65, flops:102.10, batch-reuse:1
@ 6360 train 4.1487 , allloss: 4.1501, dt: 1344.46ms, fracRes: 0.4423, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6240, norm(y): 1.0205, norm:1.0975, tok/sec: 97490.25, flops:102.32, batch-reuse:1
@ 6361 train 4.2764 , allloss: 4.2771, dt: 1323.00ms, fracRes: 0.4423, norm(attn): 0.2070, norm(output): 0.6289, norm(x): 0.6254, norm(y): 1.0207, norm:1.2950, tok/sec: 99071.61, flops:103.98, batch-reuse:1
@ 6362 train 4.2555 , allloss: 4.2561, dt: 1307.63ms, fracRes: 0.4453, norm(attn): 0.2051, norm(output): 0.6406, norm(x): 0.6255, norm(y): 1.0206, norm:1.2200, tok/sec: 100236.12, flops:105.20, batch-reuse:1
@ 6363 train 4.2441 , allloss: 4.2448, dt: 1318.63ms, fracRes: 0.4449, norm(attn): 0.2031, norm(output): 0.6406, norm(x): 0.6218, norm(y): 1.0204, norm:1.2282, tok/sec: 99400.10, flops:104.32, batch-reuse:1
@ 6364 train 4.2855 , allloss: 4.2867, dt: 1299.45ms, fracRes: 0.4438, norm(attn): 0.2031, norm(output): 0.6406, norm(x): 0.6217, norm(y): 1.0205, norm:1.1287, tok/sec: 100867.04, flops:105.86, batch-reuse:1
@ 6365 train 4.2426 , allloss: 4.2437, dt: 1305.46ms, fracRes: 0.4454, norm(attn): 0.2041, norm(output): 0.6406, norm(x): 0.6257, norm(y): 1.0203, norm:1.3362, tok/sec: 100403.22, flops:105.38, batch-reuse:1
@ 6366 train 4.2482 , allloss: 4.2488, dt: 1306.55ms, fracRes: 0.4446, norm(attn): 0.2041, norm(output): 0.6406, norm(x): 0.6251, norm(y): 1.0204, norm:1.1587, tok/sec: 100319.27, flops:105.29, batch-reuse:1
@ 6367 train 4.1171 , allloss: 4.1189, dt: 1311.52ms, fracRes: 0.4443, norm(attn): 0.2070, norm(output): 0.6367, norm(x): 0.6243, norm(y): 1.0205, norm:1.1965, tok/sec: 99939.05, flops:104.89, batch-reuse:1
@ 6368 train 4.1263 , allloss: 4.1283, dt: 1306.55ms, fracRes: 0.4445, norm(attn): 0.2080, norm(output): 0.6367, norm(x): 0.6263, norm(y): 1.0205, norm:1.2001, tok/sec: 100318.88, flops:105.29, batch-reuse:1
@ 6369 train 4.2020 , allloss: 4.2042, dt: 1331.91ms, fracRes: 0.4454, norm(attn): 0.2061, norm(output): 0.6406, norm(x): 0.6243, norm(y): 1.0204, norm:1.0548, tok/sec: 98409.41, flops:103.28, batch-reuse:1
@ 6370 train 4.1230 , allloss: 4.1239, dt: 1288.37ms, fracRes: 0.4452, norm(attn): 0.2070, norm(output): 0.6367, norm(x): 0.6219, norm(y): 1.0203, norm:1.2367, tok/sec: 101734.76, flops:106.77, batch-reuse:1
@ 6371 train 4.2271 , allloss: 4.2287, dt: 1285.20ms, fracRes: 0.4438, norm(attn): 0.2051, norm(output): 0.6367, norm(x): 0.6240, norm(y): 1.0204, norm:1.1407, tok/sec: 101985.73, flops:107.04, batch-reuse:1
@ 6372 train 4.3157 , allloss: 4.3163, dt: 1294.00ms, fracRes: 0.4429, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6235, norm(y): 1.0205, norm:1.2106, tok/sec: 101291.99, flops:106.31, batch-reuse:1
@ 6373 train 4.1418 , allloss: 4.1435, dt: 1291.69ms, fracRes: 0.4440, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6252, norm(y): 1.0204, norm:1.2562, tok/sec: 101473.12, flops:106.50, batch-reuse:1
@ 6374 train 4.2088 , allloss: 4.2114, dt: 1342.29ms, fracRes: 0.4441, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6201, norm(y): 1.0205, norm:1.2080, tok/sec: 97648.28, flops:102.48, batch-reuse:1
@ 6375 train 4.3257 , allloss: 4.3269, dt: 1338.52ms, fracRes: 0.4436, norm(attn): 0.2051, norm(output): 0.6367, norm(x): 0.6235, norm(y): 1.0204, norm:1.1855, tok/sec: 97923.28, flops:102.77, batch-reuse:1
@ 6376 train 4.2208 , allloss: 4.2234, dt: 1298.03ms, fracRes: 0.4433, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6235, norm(y): 1.0204, norm:1.3527, tok/sec: 100977.27, flops:105.98, batch-reuse:1
@ 6377 train 4.2464 , allloss: 4.2478, dt: 1320.23ms, fracRes: 0.4433, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6234, norm(y): 1.0205, norm:1.1249, tok/sec: 99279.98, flops:104.20, batch-reuse:1
@ 6378 train 4.1133 , allloss: 4.1143, dt: 1301.55ms, fracRes: 0.4421, norm(attn): 0.2080, norm(output): 0.6328, norm(x): 0.6244, norm(y): 1.0203, norm:1.1857, tok/sec: 100704.87, flops:105.69, batch-reuse:1
@ 6379 train 4.1417 , allloss: 4.1426, dt: 1303.94ms, fracRes: 0.4419, norm(attn): 0.2041, norm(output): 0.6367, norm(x): 0.6232, norm(y): 1.0203, norm:1.0350, tok/sec: 100520.29, flops:105.50, batch-reuse:1
@ 6380 train 4.1373 , allloss: 4.1379, dt: 1302.91ms, fracRes: 0.4423, norm(attn): 0.2051, norm(output): 0.6367, norm(x): 0.6240, norm(y): 1.0204, norm:1.1118, tok/sec: 100599.51, flops:105.58, batch-reuse:1
@ 6381 train 4.2141 , allloss: 4.2168, dt: 1291.50ms, fracRes: 0.4436, norm(attn): 0.2051, norm(output): 0.6367, norm(x): 0.6259, norm(y): 1.0205, norm:1.0838, tok/sec: 101488.11, flops:106.51, batch-reuse:1
@ 6382 train 4.2246 , allloss: 4.2250, dt: 1309.62ms, fracRes: 0.4421, norm(attn): 0.2041, norm(output): 0.6328, norm(x): 0.6242, norm(y): 1.0206, norm:1.0952, tok/sec: 100084.09, flops:105.04, batch-reuse:1
@ 6383 train 4.2254 , allloss: 4.2258, dt: 1300.93ms, fracRes: 0.4433, norm(attn): 0.2080, norm(output): 0.6367, norm(x): 0.6248, norm(y): 1.0205, norm:1.0831, tok/sec: 100752.65, flops:105.74, batch-reuse:1
@ 6384 train 4.2727 , allloss: 4.2736, dt: 1286.58ms, fracRes: 0.4429, norm(attn): 0.2090, norm(output): 0.6406, norm(x): 0.6258, norm(y): 1.0205, norm:1.2561, tok/sec: 101876.42, flops:106.92, batch-reuse:1
@ 6385 train 4.1346 , allloss: 4.1349, dt: 1295.84ms, fracRes: 0.4441, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6208, norm(y): 1.0203, norm:1.2930, tok/sec: 101148.36, flops:106.16, batch-reuse:1
@ 6386 train 4.2217 , allloss: 4.2226, dt: 1307.19ms, fracRes: 0.4434, norm(attn): 0.2061, norm(output): 0.6289, norm(x): 0.6208, norm(y): 1.0206, norm:1.4020, tok/sec: 100269.92, flops:105.24, batch-reuse:1
@ 6387 train 4.1750 , allloss: 4.1757, dt: 1305.91ms, fracRes: 0.4441, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6218, norm(y): 1.0204, norm:1.2453, tok/sec: 100367.95, flops:105.34, batch-reuse:1
@ 6388 train 4.2089 , allloss: 4.2097, dt: 1274.70ms, fracRes: 0.4440, norm(attn): 0.2061, norm(output): 0.6328, norm(x): 0.6222, norm(y): 1.0204, norm:1.1794, tok/sec: 102825.44, flops:107.92, batch-reuse:1
@ 6389 train 4.1780 , allloss: 4.1785, dt: 1299.79ms, fracRes: 0.4422, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6201, norm(y): 1.0204, norm:1.0613, tok/sec: 100840.52, flops:105.83, batch-reuse:1
@ 6390 train 4.1740 , allloss: 4.1746, dt: 1290.29ms, fracRes: 0.4431, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6228, norm(y): 1.0202, norm:1.2562, tok/sec: 101583.69, flops:106.61, batch-reuse:1
@ 6391 train 4.3543 , allloss: 4.3557, dt: 1319.67ms, fracRes: 0.4435, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6211, norm(y): 1.0205, norm:1.1819, tok/sec: 99321.71, flops:104.24, batch-reuse:1
@ 6392 train 4.1284 , allloss: 4.1292, dt: 1344.08ms, fracRes: 0.4424, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6208, norm(y): 1.0204, norm:1.2158, tok/sec: 97518.28, flops:102.35, batch-reuse:1
@ 6393 train 4.1394 , allloss: 4.1418, dt: 1339.39ms, fracRes: 0.4422, norm(attn): 0.2070, norm(output): 0.6328, norm(x): 0.6207, norm(y): 1.0205, norm:1.2182, tok/sec: 97859.61, flops:102.71, batch-reuse:1
@ 6394 train 4.1969 , allloss: 4.1975, dt: 1321.52ms, fracRes: 0.4429, norm(attn): 0.2061, norm(output): 0.6406, norm(x): 0.6207, norm(y): 1.0204, norm:1.2018, tok/sec: 99182.61, flops:104.09, batch-reuse:1
@ 6395 train 4.1480 , allloss: 4.1486, dt: 1344.92ms, fracRes: 0.4429, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6198, norm(y): 1.0203, norm:1.1134, tok/sec: 97457.16, flops:102.28, batch-reuse:1
@ 6396 train 4.2142 , allloss: 4.2148, dt: 1304.53ms, fracRes: 0.4435, norm(attn): 0.2061, norm(output): 0.6406, norm(x): 0.6259, norm(y): 1.0203, norm:1.1387, tok/sec: 100474.75, flops:105.45, batch-reuse:1
@ 6397 train 4.1179 , allloss: 4.1187, dt: 1297.05ms, fracRes: 0.4427, norm(attn): 0.2051, norm(output): 0.6367, norm(x): 0.6237, norm(y): 1.0203, norm:1.1803, tok/sec: 101054.06, flops:106.06, batch-reuse:1
@ 6398 train 4.1944 , allloss: 4.1969, dt: 1307.95ms, fracRes: 0.4431, norm(attn): 0.2061, norm(output): 0.6406, norm(x): 0.6257, norm(y): 1.0204, norm:1.1372, tok/sec: 100212.09, flops:105.17, batch-reuse:1
@ 6399 train 4.2049 , allloss: 4.2058, dt: 1318.13ms, fracRes: 0.4434, norm(attn): 0.2051, norm(output): 0.6367, norm(x): 0.6241, norm(y): 1.0203, norm:1.2788, tok/sec: 99437.75, flops:104.36, batch-reuse:1
@ 6400 train 4.2249 , allloss: 4.2256, dt: 1312.72ms, fracRes: 0.4417, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6208, norm(y): 1.0202, norm:1.1556, tok/sec: 99847.93, flops:104.79, batch-reuse:1
@ 6401 train 4.1945 , allloss: 4.1951, dt: 1303.76ms, fracRes: 0.4425, norm(attn): 0.2051, norm(output): 0.6367, norm(x): 0.6227, norm(y): 1.0203, norm:1.1295, tok/sec: 100534.09, flops:105.51, batch-reuse:1
@ 6402 train 4.1618 , allloss: 4.1642, dt: 1323.85ms, fracRes: 0.4434, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6205, norm(y): 1.0202, norm:1.0664, tok/sec: 99008.56, flops:103.91, batch-reuse:1
@ 6403 train 4.5082 , allloss: 4.5119, dt: 1327.38ms, fracRes: 0.4463, norm(attn): 0.2070, norm(output): 0.6484, norm(x): 0.6349, norm(y): 1.0203, norm:2.1578, tok/sec: 98745.02, flops:103.63, batch-reuse:1
@ 6404 train 4.3325 , allloss: 4.3331, dt: 1325.74ms, fracRes: 0.4425, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6245, norm(y): 1.0203, norm:1.3602, tok/sec: 98866.93, flops:103.76, batch-reuse:1
@ 6405 train 4.2398 , allloss: 4.2409, dt: 1335.12ms, fracRes: 0.4437, norm(attn): 0.2051, norm(output): 0.6367, norm(x): 0.6203, norm(y): 1.0203, norm:1.1917, tok/sec: 98172.17, flops:103.03, batch-reuse:1
@ 6406 train 4.1999 , allloss: 4.2007, dt: 1335.34ms, fracRes: 0.4441, norm(attn): 0.2051, norm(output): 0.6328, norm(x): 0.6172, norm(y): 1.0202, norm:1.2902, tok/sec: 98156.50, flops:103.02, batch-reuse:1
@ 6407 train 4.1222 , allloss: 4.1239, dt: 1329.96ms, fracRes: 0.4432, norm(attn): 0.2061, norm(output): 0.6367, norm(x): 0.6151, norm(y): 1.0202, norm:1.1801, tok/sec: 98553.03, flops:103.43, batch-reuse:1
@ 6408 train 4.2042 , allloss: 4.2054, dt: 1331.75ms, fracRes: 0.4431, norm(attn): 0.2080, norm(output): 0.6406, norm(x): 0.6210, norm(y): 1.0203, norm:1.2279, tok/sec: 98421.23, flops:103.29, batch-reuse:1
@ 6409 train 4.2320 , allloss: 4.2354, dt: 1340.38ms, fracRes: 0.4422, norm(attn): 0.2090, norm(output): 0.6328, norm(x): 0.6187, norm(y): 1.0202, norm:1.1432, tok/sec: 97787.51, flops:102.63, batch-reuse:1
@ 6410 train 4.2295 , allloss: 4.2306, dt: 1328.49ms, fracRes: 0.4409, norm(attn): 0.2061, norm(output): 0.6406, norm(x): 0.6199, norm(y): 1.0202, norm:1.0902, tok/sec: 98662.35, flops:103.55, batch-reuse:1
@ 6411 train 4.1791 , allloss: 4.1798, dt: 1326.37ms, fracRes: 0.4407, norm(attn): 0.2061, norm(output): 0.6445, norm(x): 0.6228, norm(y): 1.0202, norm:1.2042, tok/sec: 98819.84, flops:103.71, batch-reuse:1
@ 6412 train 4.1743 , allloss: 4.1761, dt: 1308.63ms, fracRes: 0.4419, norm(attn): 0.2051, norm(output): 0.6445, norm(x): 0.6208, norm(y): 1.0201, norm:1.1847, tok/sec: 100159.80, flops:105.12, batch-reuse:1
@ 6413 train 4.1383 , allloss: 4.1389, dt: 1316.78ms, fracRes: 0.4430, norm(attn): 0.2051, norm(output): 0.6445, norm(x): 0.6249, norm(y): 1.0201, norm:1.1142, tok/sec: 99539.51, flops:104.47, batch-reuse:1
@ 6414 train 4.1788 , allloss: 4.1797, dt: 1315.12ms, fracRes: 0.4428, norm(attn): 0.2070, norm(output): 0.6406, norm(x): 0.6226, norm(y): 1.0202, norm:1.1806, tok/sec: 99665.18, flops:104.60, batch-reuse:1
@ 6415 train 4.2710 , allloss: 4.2717, dt: 1288.15ms, fracRes: 0.4426, norm(attn): 0.2051, norm(output): 0.6406, norm(x): 0.6244, norm(y): 1.0203, norm:1.1477, tok/sec: 101751.99, flops:106.79, batch-reuse:1
@ 6416 train 4.1412 , allloss: 4.1417, dt: 1296.76ms, fracRes: 0.4433, norm(attn): 0.2070, norm(output): 0.6445, norm(x): 0.6263, norm(y): 1.0202, norm:1.2095, tok/sec: 101076.88, flops:106.08, batch-reuse:1
@ 6417 train 4.1968 , allloss: 4.1972, dt: 1300.36ms, fracRes: 0.4442, norm(attn): 0.2051, norm(output): 0.6484, norm(x): 0.6246, norm(y): 1.0202, norm:1.1022, tok/sec: 100797.06, flops:105.79, batch-reuse:1
@ 6418 train 4.1385 , allloss: 4.1392, dt: 1282.68ms, fracRes: 0.4443, norm(attn): 0.2061, norm(output): 0.6445, norm(x): 0.6218, norm(y): 1.0201, norm:1.1463, tok/sec: 102186.12, flops:107.25, batch-reuse:1
@ 6419 train 4.1265 , allloss: 4.1276, dt: 1289.68ms, fracRes: 0.4442, norm(attn): 0.2080, norm(output): 0.6406, norm(x): 0.6194, norm(y): 1.0202, norm:1.3541, tok/sec: 101631.66, flops:106.66, batch-reuse:1
@ 6420 train 4.2488 , allloss: 4.2502, dt: 1309.02ms, fracRes: 0.4447, norm(attn): 0.2061, norm(output): 0.6445, norm(x): 0.6191, norm(y): 1.0202, norm:1.1714, tok/sec: 100129.79, flops:105.09, batch-reuse:1
@ 6421 train 4.0985 , allloss: 4.0989, dt: 1276.18ms, fracRes: 0.4455, norm(attn): 0.2080, norm(output): 0.6445, norm(x): 0.6230, norm(y): 1.0200, norm:1.1879, tok/sec: 102706.69, flops:107.79, batch-reuse:1
@ 6422 train 4.1062 , allloss: 4.1068, dt: 1291.64ms, fracRes: 0.4436, norm(attn): 0.2061, norm(output): 0.6406, norm(x): 0.6180, norm(y): 1.0200, norm:1.1903, tok/sec: 101476.96, flops:106.50, batch-reuse:1
@ 6423 train 4.2952 , allloss: 4.2966, dt: 1311.30ms, fracRes: 0.4440, norm(attn): 0.2041, norm(output): 0.6445, norm(x): 0.6197, norm(y): 1.0201, norm:1.0740, tok/sec: 99955.51, flops:104.91, batch-reuse:1
@ 6424 train 4.1794 , allloss: 4.1800, dt: 1319.30ms, fracRes: 0.4424, norm(attn): 0.2070, norm(output): 0.6406, norm(x): 0.6194, norm(y): 1.0202, norm:1.1153, tok/sec: 99349.80, flops:104.27, batch-reuse:1
@ 6425 train 4.1683 , allloss: 4.1690, dt: 1296.10ms, fracRes: 0.4423, norm(attn): 0.2070, norm(output): 0.6367, norm(x): 0.6160, norm(y): 1.0202, norm:1.1155, tok/sec: 101127.62, flops:106.14, batch-reuse:1
@ 6426 train 4.1574 , allloss: 4.1587, dt: 1317.20ms, fracRes: 0.4427, norm(attn): 0.2051, norm(output): 0.6406, norm(x): 0.6175, norm(y): 1.0201, norm:1.1072, tok/sec: 99508.23, flops:104.44, batch-reuse:1
@ 6427 train 4.1465 , allloss: 4.1474, dt: 1326.92ms, fracRes: 0.4434, norm(attn): 0.2051, norm(output): 0.6445, norm(x): 0.6199, norm(y): 1.0201, norm:1.1113, tok/sec: 98779.46, flops:103.67, batch-reuse:1
@ 6428 train 4.0831 , allloss: 4.0842, dt: 1305.01ms, fracRes: 0.4436, norm(attn): 0.2041, norm(output): 0.6406, norm(x): 0.6192, norm(y): 1.0202, norm:1.2124, tok/sec: 100437.17, flops:105.41, batch-reuse:1
@ 6429 train 4.0807 , allloss: 4.0813, dt: 1265.98ms, fracRes: 0.4440, norm(attn): 0.2070, norm(output): 0.6445, norm(x): 0.6204, norm(y): 1.0202, norm:1.1102, tok/sec: 103534.08, flops:108.66, batch-reuse:1
@ 6430 train 4.1255 , allloss: 4.1258, dt: 1317.18ms, fracRes: 0.4444, norm(attn): 0.2070, norm(output): 0.6523, norm(x): 0.6224, norm(y): 1.0200, norm:1.1321, tok/sec: 99509.51, flops:104.44, batch-reuse:1
@ 6431 train 4.1053 , allloss: 4.1063, dt: 1294.41ms, fracRes: 0.4427, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6198, norm(y): 1.0201, norm:1.0740, tok/sec: 101260.03, flops:106.27, batch-reuse:1
@ 6432 train 4.1682 , allloss: 4.1686, dt: 1308.58ms, fracRes: 0.4436, norm(attn): 0.2041, norm(output): 0.6523, norm(x): 0.6216, norm(y): 1.0201, norm:1.2303, tok/sec: 100163.38, flops:105.12, batch-reuse:1
@ 6433 train 4.1865 , allloss: 4.1872, dt: 1331.41ms, fracRes: 0.4425, norm(attn): 0.2041, norm(output): 0.6484, norm(x): 0.6210, norm(y): 1.0201, norm:1.0206, tok/sec: 98445.66, flops:103.32, batch-reuse:1
@ 6434 train 4.0825 , allloss: 4.0831, dt: 1294.14ms, fracRes: 0.4419, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6218, norm(y): 1.0200, norm:1.1598, tok/sec: 101280.82, flops:106.30, batch-reuse:1
@ 6435 train 4.2479 , allloss: 4.2484, dt: 1303.81ms, fracRes: 0.4417, norm(attn): 0.2070, norm(output): 0.6445, norm(x): 0.6217, norm(y): 1.0201, norm:1.2610, tok/sec: 100530.33, flops:105.51, batch-reuse:1
@ 6436 train 4.1705 , allloss: 4.1720, dt: 1312.77ms, fracRes: 0.4428, norm(attn): 0.2070, norm(output): 0.6406, norm(x): 0.6188, norm(y): 1.0201, norm:1.2924, tok/sec: 99844.14, flops:104.79, batch-reuse:1
@ 6437 train 4.0825 , allloss: 4.0829, dt: 1315.40ms, fracRes: 0.4422, norm(attn): 0.2070, norm(output): 0.6367, norm(x): 0.6143, norm(y): 1.0202, norm:1.1738, tok/sec: 99644.13, flops:104.58, batch-reuse:1
@ 6438 train 4.0729 , allloss: 4.0734, dt: 1286.91ms, fracRes: 0.4433, norm(attn): 0.2100, norm(output): 0.6523, norm(x): 0.6193, norm(y): 1.0201, norm:1.2422, tok/sec: 101849.81, flops:106.89, batch-reuse:1
@ 6439 train 4.2000 , allloss: 4.2004, dt: 1280.67ms, fracRes: 0.4440, norm(attn): 0.2090, norm(output): 0.6445, norm(x): 0.6172, norm(y): 1.0200, norm:1.4760, tok/sec: 102346.26, flops:107.41, batch-reuse:1
@ 6440 train 4.0248 , allloss: 4.0253, dt: 1304.27ms, fracRes: 0.4439, norm(attn): 0.2090, norm(output): 0.6523, norm(x): 0.6210, norm(y): 1.0200, norm:1.3626, tok/sec: 100494.66, flops:105.47, batch-reuse:1
@ 6441 train 4.2401 , allloss: 4.2413, dt: 1297.28ms, fracRes: 0.4434, norm(attn): 0.2061, norm(output): 0.6445, norm(x): 0.6188, norm(y): 1.0201, norm:1.3134, tok/sec: 101035.84, flops:106.04, batch-reuse:1
@ 6442 train 4.1078 , allloss: 4.1090, dt: 1297.86ms, fracRes: 0.4423, norm(attn): 0.2100, norm(output): 0.6406, norm(x): 0.6167, norm(y): 1.0201, norm:1.1891, tok/sec: 100990.65, flops:105.99, batch-reuse:1
@ 6443 train 4.2330 , allloss: 4.2336, dt: 1295.76ms, fracRes: 0.4412, norm(attn): 0.2070, norm(output): 0.6406, norm(x): 0.6156, norm(y): 1.0201, norm:1.2079, tok/sec: 101154.89, flops:106.16, batch-reuse:1
@ 6444 train 4.4125 , allloss: 4.4132, dt: 1299.97ms, fracRes: 0.4417, norm(attn): 0.2070, norm(output): 0.6484, norm(x): 0.6230, norm(y): 1.0203, norm:1.4834, tok/sec: 100826.56, flops:105.82, batch-reuse:1
@ 6445 train 4.1496 , allloss: 4.1503, dt: 1310.94ms, fracRes: 0.4436, norm(attn): 0.2051, norm(output): 0.6484, norm(x): 0.6210, norm(y): 1.0201, norm:1.4813, tok/sec: 99983.43, flops:104.93, batch-reuse:1
@ 6446 train 4.1564 , allloss: 4.1573, dt: 1335.23ms, fracRes: 0.4439, norm(attn): 0.2031, norm(output): 0.6445, norm(x): 0.6179, norm(y): 1.0200, norm:1.2311, tok/sec: 98164.58, flops:103.03, batch-reuse:1
@ 6447 train 4.1082 , allloss: 4.1091, dt: 1339.34ms, fracRes: 0.4436, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6189, norm(y): 1.0200, norm:1.3574, tok/sec: 97863.29, flops:102.71, batch-reuse:1
@ 6448 train 4.0687 , allloss: 4.0694, dt: 1322.19ms, fracRes: 0.4446, norm(attn): 0.2070, norm(output): 0.6641, norm(x): 0.6230, norm(y): 1.0200, norm:1.1351, tok/sec: 99132.78, flops:104.04, batch-reuse:1
@ 6449 train 4.1919 , allloss: 4.1927, dt: 1314.68ms, fracRes: 0.4438, norm(attn): 0.2041, norm(output): 0.6484, norm(x): 0.6211, norm(y): 1.0200, norm:1.0812, tok/sec: 99698.87, flops:104.64, batch-reuse:1
@ 6450 train 4.1070 , allloss: 4.1075, dt: 1307.01ms, fracRes: 0.4446, norm(attn): 0.2070, norm(output): 0.6641, norm(x): 0.6262, norm(y): 1.0200, norm:1.1377, tok/sec: 100283.68, flops:105.25, batch-reuse:1
@ 6451 train 4.0367 , allloss: 4.0374, dt: 1317.85ms, fracRes: 0.4426, norm(attn): 0.2051, norm(output): 0.6484, norm(x): 0.6214, norm(y): 1.0199, norm:1.0996, tok/sec: 99458.62, flops:104.38, batch-reuse:1
@ 6452 train 4.2034 , allloss: 4.2042, dt: 1285.79ms, fracRes: 0.4441, norm(attn): 0.2061, norm(output): 0.6641, norm(x): 0.6260, norm(y): 1.0198, norm:1.1795, tok/sec: 101938.57, flops:106.99, batch-reuse:1
@ 6453 train 4.1150 , allloss: 4.1156, dt: 1277.89ms, fracRes: 0.4427, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6188, norm(y): 1.0199, norm:1.2640, tok/sec: 102569.37, flops:107.65, batch-reuse:1
@ 6454 train 4.1152 , allloss: 4.1161, dt: 1300.36ms, fracRes: 0.4430, norm(attn): 0.2080, norm(output): 0.6445, norm(x): 0.6201, norm(y): 1.0200, norm:1.0525, tok/sec: 100796.76, flops:105.79, batch-reuse:1
@ 6455 train 4.1784 , allloss: 4.1790, dt: 1306.51ms, fracRes: 0.4426, norm(attn): 0.2070, norm(output): 0.6602, norm(x): 0.6232, norm(y): 1.0201, norm:1.2664, tok/sec: 100321.96, flops:105.29, batch-reuse:1
@ 6456 train 4.0963 , allloss: 4.0968, dt: 1287.31ms, fracRes: 0.4425, norm(attn): 0.2070, norm(output): 0.6484, norm(x): 0.6232, norm(y): 1.0200, norm:1.1165, tok/sec: 101818.59, flops:106.86, batch-reuse:1
@ 6457 train 4.0518 , allloss: 4.0523, dt: 1301.19ms, fracRes: 0.4427, norm(attn): 0.2090, norm(output): 0.6445, norm(x): 0.6172, norm(y): 1.0199, norm:1.3257, tok/sec: 100732.45, flops:105.72, batch-reuse:1
@ 6458 train 4.0978 , allloss: 4.0982, dt: 1336.72ms, fracRes: 0.4433, norm(attn): 0.2109, norm(output): 0.6484, norm(x): 0.6167, norm(y): 1.0198, norm:1.1445, tok/sec: 98055.27, flops:102.91, batch-reuse:1
@ 6459 train 4.1981 , allloss: 4.1990, dt: 1337.53ms, fracRes: 0.4438, norm(attn): 0.2070, norm(output): 0.6445, norm(x): 0.6175, norm(y): 1.0199, norm:1.1503, tok/sec: 97995.71, flops:102.85, batch-reuse:1
@ 6460 train 4.1852 , allloss: 4.1858, dt: 1334.61ms, fracRes: 0.4444, norm(attn): 0.2070, norm(output): 0.6523, norm(x): 0.6190, norm(y): 1.0199, norm:1.3138, tok/sec: 98209.98, flops:103.07, batch-reuse:1
@ 6461 train 4.1826 , allloss: 4.1836, dt: 1296.38ms, fracRes: 0.4435, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6201, norm(y): 1.0200, norm:1.1231, tok/sec: 101106.19, flops:106.11, batch-reuse:1
@ 6462 train 4.1687 , allloss: 4.1698, dt: 1285.97ms, fracRes: 0.4427, norm(attn): 0.2070, norm(output): 0.6484, norm(x): 0.6201, norm(y): 1.0199, norm:1.2830, tok/sec: 101924.56, flops:106.97, batch-reuse:1
@ 6463 train 4.0263 , allloss: 4.0270, dt: 1300.25ms, fracRes: 0.4426, norm(attn): 0.2100, norm(output): 0.6445, norm(x): 0.6149, norm(y): 1.0199, norm:1.1601, tok/sec: 100805.24, flops:105.80, batch-reuse:1
@ 6464 train 4.0771 , allloss: 4.0778, dt: 1289.74ms, fracRes: 0.4419, norm(attn): 0.2109, norm(output): 0.6484, norm(x): 0.6164, norm(y): 1.0199, norm:1.2622, tok/sec: 101626.70, flops:106.66, batch-reuse:1
@ 6465 train 3.9292 , allloss: 3.9302, dt: 1317.21ms, fracRes: 0.4422, norm(attn): 0.2080, norm(output): 0.6484, norm(x): 0.6196, norm(y): 1.0199, norm:1.0867, tok/sec: 99507.46, flops:104.43, batch-reuse:1
@ 6466 train 3.9906 , allloss: 3.9920, dt: 1311.16ms, fracRes: 0.4432, norm(attn): 0.2080, norm(output): 0.6562, norm(x): 0.6208, norm(y): 1.0198, norm:1.2177, tok/sec: 99966.31, flops:104.92, batch-reuse:1
@ 6467 train 4.1207 , allloss: 4.1218, dt: 1343.17ms, fracRes: 0.4443, norm(attn): 0.2080, norm(output): 0.6641, norm(x): 0.6288, norm(y): 1.0198, norm:1.1606, tok/sec: 97583.92, flops:102.42, batch-reuse:1
@ 6468 train 4.1195 , allloss: 4.1198, dt: 1310.04ms, fracRes: 0.4429, norm(attn): 0.2070, norm(output): 0.6445, norm(x): 0.6166, norm(y): 1.0199, norm:1.2954, tok/sec: 100051.54, flops:105.01, batch-reuse:1
@ 6469 train 4.0620 , allloss: 4.0626, dt: 1310.32ms, fracRes: 0.4424, norm(attn): 0.2070, norm(output): 0.6445, norm(x): 0.6179, norm(y): 1.0200, norm:1.2894, tok/sec: 100030.55, flops:104.98, batch-reuse:1
@ 6470 train 4.0598 , allloss: 4.0605, dt: 1296.44ms, fracRes: 0.4421, norm(attn): 0.2109, norm(output): 0.6562, norm(x): 0.6204, norm(y): 1.0199, norm:1.2800, tok/sec: 101101.11, flops:106.11, batch-reuse:1
@ 6471 train 3.9979 , allloss: 3.9983, dt: 1309.38ms, fracRes: 0.4431, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6183, norm(y): 1.0200, norm:1.3698, tok/sec: 100102.68, flops:105.06, batch-reuse:1
@ 6472 train 4.0551 , allloss: 4.0560, dt: 1306.22ms, fracRes: 0.4444, norm(attn): 0.2051, norm(output): 0.6523, norm(x): 0.6188, norm(y): 1.0199, norm:1.3793, tok/sec: 100344.43, flops:105.31, batch-reuse:1
@ 6473 train 4.0151 , allloss: 4.0157, dt: 1304.03ms, fracRes: 0.4435, norm(attn): 0.2061, norm(output): 0.6602, norm(x): 0.6218, norm(y): 1.0199, norm:1.2246, tok/sec: 100512.70, flops:105.49, batch-reuse:1
@ 6474 train 4.0223 , allloss: 4.0227, dt: 1331.14ms, fracRes: 0.4417, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6189, norm(y): 1.0199, norm:1.2616, tok/sec: 98465.92, flops:103.34, batch-reuse:1
@ 6475 train 4.0706 , allloss: 4.0709, dt: 1330.65ms, fracRes: 0.4425, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6207, norm(y): 1.0198, norm:1.2218, tok/sec: 98502.16, flops:103.38, batch-reuse:1
@ 6476 train 4.1572 , allloss: 4.1579, dt: 1282.44ms, fracRes: 0.4441, norm(attn): 0.2061, norm(output): 0.6602, norm(x): 0.6267, norm(y): 1.0199, norm:1.1908, tok/sec: 102205.12, flops:107.27, batch-reuse:1
@ 6477 train 3.9770 , allloss: 3.9779, dt: 1304.17ms, fracRes: 0.4432, norm(attn): 0.2051, norm(output): 0.6562, norm(x): 0.6221, norm(y): 1.0198, norm:1.2113, tok/sec: 100502.28, flops:105.48, batch-reuse:1
@ 6478 train 4.0044 , allloss: 4.0053, dt: 1314.94ms, fracRes: 0.4435, norm(attn): 0.2051, norm(output): 0.6523, norm(x): 0.6229, norm(y): 1.0198, norm:1.1097, tok/sec: 99678.91, flops:104.61, batch-reuse:1
@ 6479 train 3.9867 , allloss: 3.9878, dt: 1332.64ms, fracRes: 0.4425, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6176, norm(y): 1.0199, norm:1.1002, tok/sec: 98355.31, flops:103.23, batch-reuse:1
@ 6480 train 4.1005 , allloss: 4.1012, dt: 1324.80ms, fracRes: 0.4424, norm(attn): 0.2070, norm(output): 0.6484, norm(x): 0.6212, norm(y): 1.0200, norm:1.1603, tok/sec: 98937.18, flops:103.84, batch-reuse:1
@ 6481 train 4.0869 , allloss: 4.0879, dt: 1335.15ms, fracRes: 0.4411, norm(attn): 0.2070, norm(output): 0.6523, norm(x): 0.6202, norm(y): 1.0199, norm:1.1787, tok/sec: 98170.19, flops:103.03, batch-reuse:1
@ 6482 train 3.9990 , allloss: 3.9999, dt: 1322.53ms, fracRes: 0.4425, norm(attn): 0.2061, norm(output): 0.6602, norm(x): 0.6233, norm(y): 1.0197, norm:1.3317, tok/sec: 99106.83, flops:104.01, batch-reuse:1
@ 6483 train 4.1449 , allloss: 4.1458, dt: 1335.65ms, fracRes: 0.4418, norm(attn): 0.2051, norm(output): 0.6602, norm(x): 0.6233, norm(y): 1.0200, norm:1.3139, tok/sec: 98133.81, flops:102.99, batch-reuse:1
@ 6484 train 4.0031 , allloss: 4.0040, dt: 1332.02ms, fracRes: 0.4436, norm(attn): 0.2061, norm(output): 0.6523, norm(x): 0.6236, norm(y): 1.0199, norm:1.2134, tok/sec: 98400.96, flops:103.27, batch-reuse:1
@ 6485 train 4.1136 , allloss: 4.1142, dt: 1317.98ms, fracRes: 0.4441, norm(attn): 0.2061, norm(output): 0.6523, norm(x): 0.6211, norm(y): 1.0199, norm:1.1605, tok/sec: 99449.01, flops:104.37, batch-reuse:1
@ 6486 train 4.0054 , allloss: 4.0059, dt: 1332.46ms, fracRes: 0.4431, norm(attn): 0.2070, norm(output): 0.6484, norm(x): 0.6181, norm(y): 1.0200, norm:1.1702, tok/sec: 98368.54, flops:103.24, batch-reuse:1
@ 6487 train 3.9995 , allloss: 4.0005, dt: 1279.27ms, fracRes: 0.4444, norm(attn): 0.2061, norm(output): 0.6602, norm(x): 0.6252, norm(y): 1.0198, norm:1.1774, tok/sec: 102458.36, flops:107.53, batch-reuse:1
@ 6488 train 4.1022 , allloss: 4.1031, dt: 1309.41ms, fracRes: 0.4432, norm(attn): 0.2090, norm(output): 0.6562, norm(x): 0.6223, norm(y): 1.0200, norm:1.3937, tok/sec: 100100.13, flops:105.06, batch-reuse:1
@ 6489 train 4.0536 , allloss: 4.0548, dt: 1295.82ms, fracRes: 0.4440, norm(attn): 0.2061, norm(output): 0.6523, norm(x): 0.6199, norm(y): 1.0198, norm:1.4160, tok/sec: 101149.91, flops:106.16, batch-reuse:1
@ 6490 train 3.9492 , allloss: 3.9497, dt: 1311.19ms, fracRes: 0.4448, norm(attn): 0.2080, norm(output): 0.6562, norm(x): 0.6226, norm(y): 1.0199, norm:1.2951, tok/sec: 99963.93, flops:104.91, batch-reuse:1
@ 6491 train 4.0649 , allloss: 4.0657, dt: 1344.36ms, fracRes: 0.4448, norm(attn): 0.2070, norm(output): 0.6562, norm(x): 0.6223, norm(y): 1.0200, norm:1.1208, tok/sec: 97497.77, flops:102.33, batch-reuse:1
@ 6492 train 4.0176 , allloss: 4.0196, dt: 1343.98ms, fracRes: 0.4459, norm(attn): 0.2080, norm(output): 0.6562, norm(x): 0.6250, norm(y): 1.0199, norm:1.4009, tok/sec: 97525.62, flops:102.35, batch-reuse:1
@ 6493 train 4.1847 , allloss: 4.1857, dt: 1347.61ms, fracRes: 0.4481, norm(attn): 0.2100, norm(output): 0.6719, norm(x): 0.6398, norm(y): 1.0200, norm:2.3155, tok/sec: 97262.75, flops:102.08, batch-reuse:1
@ 6494 train 3.9406 , allloss: 3.9417, dt: 1293.52ms, fracRes: 0.4430, norm(attn): 0.2100, norm(output): 0.6641, norm(x): 0.6246, norm(y): 1.0197, norm:1.5091, tok/sec: 101329.93, flops:106.35, batch-reuse:1
@ 6495 train 4.0829 , allloss: 4.0838, dt: 1315.95ms, fracRes: 0.4418, norm(attn): 0.2070, norm(output): 0.6641, norm(x): 0.6221, norm(y): 1.0198, norm:1.4170, tok/sec: 99602.54, flops:104.53, batch-reuse:1
@ 6496 train 4.0288 , allloss: 4.0301, dt: 1347.10ms, fracRes: 0.4420, norm(attn): 0.2080, norm(output): 0.6602, norm(x): 0.6234, norm(y): 1.0198, norm:1.3232, tok/sec: 97299.35, flops:102.12, batch-reuse:1
@ 6497 train 4.0259 , allloss: 4.0265, dt: 1331.13ms, fracRes: 0.4414, norm(attn): 0.2109, norm(output): 0.6523, norm(x): 0.6200, norm(y): 1.0198, norm:1.5217, tok/sec: 98466.77, flops:103.34, batch-reuse:1
@ 6498 train 4.0189 , allloss: 4.0202, dt: 1288.11ms, fracRes: 0.4429, norm(attn): 0.2100, norm(output): 0.6602, norm(x): 0.6225, norm(y): 1.0197, norm:1.5208, tok/sec: 101755.58, flops:106.79, batch-reuse:1
@ 6499 train 4.0914 , allloss: 4.0920, dt: 1310.13ms, fracRes: 0.4434, norm(attn): 0.2090, norm(output): 0.6602, norm(x): 0.6210, norm(y): 1.0198, norm:1.2487, tok/sec: 100045.41, flops:105.00, batch-reuse:1
@ 6500 train 4.1612 , allloss: 4.1632, dt: 1308.37ms, fracRes: 0.4444, norm(attn): 0.2070, norm(output): 0.6484, norm(x): 0.6200, norm(y): 1.0199, norm:1.3145, tok/sec: 100179.71, flops:105.14, batch-reuse:1
@ 6501 train 4.1062 , allloss: 4.1068, dt: 1292.96ms, fracRes: 0.4435, norm(attn): 0.2100, norm(output): 0.6523, norm(x): 0.6169, norm(y): 1.0199, norm:1.2609, tok/sec: 101373.37, flops:106.39, batch-reuse:1
@ 6502 train 3.9986 , allloss: 3.9995, dt: 1308.28ms, fracRes: 0.4439, norm(attn): 0.2129, norm(output): 0.6602, norm(x): 0.6173, norm(y): 1.0198, norm:1.3623, tok/sec: 100186.63, flops:105.15, batch-reuse:1
@ 6503 train 4.0339 , allloss: 4.0344, dt: 1292.12ms, fracRes: 0.4431, norm(attn): 0.2100, norm(output): 0.6562, norm(x): 0.6161, norm(y): 1.0198, norm:1.3351, tok/sec: 101439.50, flops:106.46, batch-reuse:1
@ 6504 train 4.0479 , allloss: 4.0492, dt: 1329.27ms, fracRes: 0.4417, norm(attn): 0.2090, norm(output): 0.6562, norm(x): 0.6158, norm(y): 1.0199, norm:1.1874, tok/sec: 98604.42, flops:103.49, batch-reuse:1
@ 6505 train 3.9357 , allloss: 3.9373, dt: 1339.59ms, fracRes: 0.4426, norm(attn): 0.2090, norm(output): 0.6641, norm(x): 0.6223, norm(y): 1.0198, norm:1.3396, tok/sec: 97845.14, flops:102.69, batch-reuse:1
@ 6506 train 3.8683 , allloss: 3.8692, dt: 1340.81ms, fracRes: 0.4411, norm(attn): 0.2080, norm(output): 0.6641, norm(x): 0.6184, norm(y): 1.0198, norm:1.1135, tok/sec: 97755.92, flops:102.60, batch-reuse:1
@ 6507 train 3.9924 , allloss: 3.9932, dt: 1330.51ms, fracRes: 0.4418, norm(attn): 0.2070, norm(output): 0.6602, norm(x): 0.6212, norm(y): 1.0197, norm:1.3143, tok/sec: 98512.78, flops:103.39, batch-reuse:1
@ 6508 train 4.0994 , allloss: 4.1012, dt: 1312.42ms, fracRes: 0.4422, norm(attn): 0.2090, norm(output): 0.6641, norm(x): 0.6216, norm(y): 1.0197, norm:1.1965, tok/sec: 99870.59, flops:104.82, batch-reuse:1
@ 6509 train 4.0273 , allloss: 4.0280, dt: 1293.83ms, fracRes: 0.4433, norm(attn): 0.2080, norm(output): 0.6602, norm(x): 0.6221, norm(y): 1.0197, norm:1.1503, tok/sec: 101305.38, flops:106.32, batch-reuse:1
@ 6510 train 4.1440 , allloss: 4.1462, dt: 1301.41ms, fracRes: 0.4437, norm(attn): 0.2080, norm(output): 0.6602, norm(x): 0.6234, norm(y): 1.0198, norm:1.0802, tok/sec: 100715.23, flops:105.70, batch-reuse:1
@ 6511 train 4.2428 , allloss: 4.2433, dt: 1301.17ms, fracRes: 0.4432, norm(attn): 0.2090, norm(output): 0.6602, norm(x): 0.6227, norm(y): 1.0196, norm:1.2108, tok/sec: 100734.00, flops:105.72, batch-reuse:1
@ 6512 train 4.3164 , allloss: 4.3183, dt: 1314.41ms, fracRes: 0.4445, norm(attn): 0.2080, norm(output): 0.6641, norm(x): 0.6252, norm(y): 1.0198, norm:1.0742, tok/sec: 99719.00, flops:104.66, batch-reuse:1
@ 6513 train 4.2075 , allloss: 4.2082, dt: 1312.55ms, fracRes: 0.4434, norm(attn): 0.2080, norm(output): 0.6641, norm(x): 0.6204, norm(y): 1.0197, norm:1.2767, tok/sec: 99860.75, flops:104.81, batch-reuse:1
@ 6514 train 4.2342 , allloss: 4.2382, dt: 1311.27ms, fracRes: 0.4434, norm(attn): 0.2090, norm(output): 0.6602, norm(x): 0.6224, norm(y): 1.0198, norm:1.2925, tok/sec: 99958.33, flops:104.91, batch-reuse:1
@ 6515 train 4.2710 , allloss: 4.2718, dt: 1345.56ms, fracRes: 0.4433, norm(attn): 0.2080, norm(output): 0.6602, norm(x): 0.6199, norm(y): 1.0196, norm:1.2499, tok/sec: 97410.53, flops:102.23, batch-reuse:1
@ 6516 train 4.2343 , allloss: 4.2351, dt: 1339.14ms, fracRes: 0.4418, norm(attn): 0.2109, norm(output): 0.6602, norm(x): 0.6227, norm(y): 1.0198, norm:1.2165, tok/sec: 97877.82, flops:102.72, batch-reuse:1
@ 6517 train 4.2133 , allloss: 4.2142, dt: 1337.84ms, fracRes: 0.4430, norm(attn): 0.2129, norm(output): 0.6602, norm(x): 0.6229, norm(y): 1.0197, norm:1.3154, tok/sec: 97972.58, flops:102.82, batch-reuse:1
@ 6518 train 4.1810 , allloss: 4.1815, dt: 1309.55ms, fracRes: 0.4422, norm(attn): 0.2119, norm(output): 0.6562, norm(x): 0.6222, norm(y): 1.0199, norm:1.2176, tok/sec: 100089.25, flops:105.05, batch-reuse:1
@ 6519 train 4.3424 , allloss: 4.3439, dt: 1303.95ms, fracRes: 0.4438, norm(attn): 0.2100, norm(output): 0.6562, norm(x): 0.6246, norm(y): 1.0198, norm:1.2948, tok/sec: 100519.37, flops:105.50, batch-reuse:1
@ 6520 train 4.2144 , allloss: 4.2156, dt: 1334.84ms, fracRes: 0.4439, norm(attn): 0.2080, norm(output): 0.6602, norm(x): 0.6218, norm(y): 1.0198, norm:1.0999, tok/sec: 98192.81, flops:103.06, batch-reuse:1
@ 6521 train 4.2847 , allloss: 4.2851, dt: 1347.99ms, fracRes: 0.4447, norm(attn): 0.2061, norm(output): 0.6484, norm(x): 0.6214, norm(y): 1.0199, norm:1.2318, tok/sec: 97235.31, flops:102.05, batch-reuse:1
@ 6522 train 4.2115 , allloss: 4.2129, dt: 1306.74ms, fracRes: 0.4448, norm(attn): 0.2061, norm(output): 0.6523, norm(x): 0.6210, norm(y): 1.0198, norm:1.2051, tok/sec: 100304.44, flops:105.27, batch-reuse:1
@ 6523 train 4.1816 , allloss: 4.1826, dt: 1303.80ms, fracRes: 0.4437, norm(attn): 0.2090, norm(output): 0.6602, norm(x): 0.6232, norm(y): 1.0197, norm:1.1431, tok/sec: 100531.08, flops:105.51, batch-reuse:1
@ 6524 train 4.2907 , allloss: 4.2923, dt: 1291.02ms, fracRes: 0.4420, norm(attn): 0.2070, norm(output): 0.6562, norm(x): 0.6233, norm(y): 1.0199, norm:1.1979, tok/sec: 101526.04, flops:106.55, batch-reuse:1
@ 6525 train 4.2267 , allloss: 4.2278, dt: 1309.61ms, fracRes: 0.4428, norm(attn): 0.2061, norm(output): 0.6641, norm(x): 0.6234, norm(y): 1.0199, norm:1.2850, tok/sec: 100084.69, flops:105.04, batch-reuse:1
@ 6526 train 4.4442 , allloss: 4.4450, dt: 1311.53ms, fracRes: 0.4431, norm(attn): 0.2070, norm(output): 0.6562, norm(x): 0.6215, norm(y): 1.0198, norm:2.0374, tok/sec: 99938.09, flops:104.89, batch-reuse:1
@ 6527 train 4.2522 , allloss: 4.2526, dt: 1287.05ms, fracRes: 0.4433, norm(attn): 0.2070, norm(output): 0.6641, norm(x): 0.6220, norm(y): 1.0198, norm:1.2811, tok/sec: 101839.18, flops:106.88, batch-reuse:1
@ 6528 train 4.2457 , allloss: 4.2469, dt: 1313.91ms, fracRes: 0.4437, norm(attn): 0.2070, norm(output): 0.6602, norm(x): 0.6249, norm(y): 1.0199, norm:1.2784, tok/sec: 99757.21, flops:104.70, batch-reuse:1
@ 6529 train 4.2296 , allloss: 4.2303, dt: 1336.87ms, fracRes: 0.4429, norm(attn): 0.2090, norm(output): 0.6602, norm(x): 0.6233, norm(y): 1.0198, norm:1.1411, tok/sec: 98044.20, flops:102.90, batch-reuse:1
@ 6530 train 4.1872 , allloss: 4.1882, dt: 1315.93ms, fracRes: 0.4447, norm(attn): 0.2080, norm(output): 0.6602, norm(x): 0.6235, norm(y): 1.0199, norm:1.2623, tok/sec: 99604.20, flops:104.54, batch-reuse:1
@ 6531 train 4.1237 , allloss: 4.1257, dt: 1336.74ms, fracRes: 0.4441, norm(attn): 0.2109, norm(output): 0.6602, norm(x): 0.6205, norm(y): 1.0198, norm:1.0784, tok/sec: 98053.31, flops:102.91, batch-reuse:1
@ 6532 train 4.2569 , allloss: 4.2575, dt: 1325.45ms, fracRes: 0.4458, norm(attn): 0.2090, norm(output): 0.6680, norm(x): 0.6331, norm(y): 1.0199, norm:1.2715, tok/sec: 98888.65, flops:103.79, batch-reuse:1
@ 6533 train 4.3504 , allloss: 4.3510, dt: 1323.98ms, fracRes: 0.4436, norm(attn): 0.2090, norm(output): 0.6602, norm(x): 0.6276, norm(y): 1.0199, norm:1.2379, tok/sec: 98998.15, flops:103.90, batch-reuse:1
@ 6534 train 4.1807 , allloss: 4.1833, dt: 1315.27ms, fracRes: 0.4427, norm(attn): 0.2090, norm(output): 0.6602, norm(x): 0.6283, norm(y): 1.0197, norm:1.1571, tok/sec: 99653.89, flops:104.59, batch-reuse:1
@ 6535 train 4.2037 , allloss: 4.2070, dt: 1330.56ms, fracRes: 0.4430, norm(attn): 0.2070, norm(output): 0.6641, norm(x): 0.6271, norm(y): 1.0198, norm:1.3001, tok/sec: 98508.64, flops:103.39, batch-reuse:1
@ 6536 train 4.2348 , allloss: 4.2351, dt: 1332.13ms, fracRes: 0.4404, norm(attn): 0.2109, norm(output): 0.6523, norm(x): 0.6225, norm(y): 1.0201, norm:1.2635, tok/sec: 98392.75, flops:103.27, batch-reuse:1
@ 6537 train 4.2333 , allloss: 4.2338, dt: 1330.12ms, fracRes: 0.4429, norm(attn): 0.2070, norm(output): 0.6641, norm(x): 0.6259, norm(y): 1.0199, norm:1.3682, tok/sec: 98541.41, flops:103.42, batch-reuse:1
@ 6538 train 4.1536 , allloss: 4.1593, dt: 1320.20ms, fracRes: 0.4439, norm(attn): 0.2109, norm(output): 0.6758, norm(x): 0.6315, norm(y): 1.0198, norm:1.3208, tok/sec: 99281.95, flops:104.20, batch-reuse:1
@ 6539 train 4.2363 , allloss: 4.2368, dt: 1307.54ms, fracRes: 0.4436, norm(attn): 0.2100, norm(output): 0.6680, norm(x): 0.6236, norm(y): 1.0197, norm:1.2771, tok/sec: 100243.47, flops:105.21, batch-reuse:1
@ 6540 train 4.2431 , allloss: 4.2437, dt: 1318.57ms, fracRes: 0.4435, norm(attn): 0.2080, norm(output): 0.6641, norm(x): 0.6226, norm(y): 1.0198, norm:1.2297, tok/sec: 99404.90, flops:104.33, batch-reuse:1
@ 6541 train 4.2658 , allloss: 4.2664, dt: 1301.49ms, fracRes: 0.4439, norm(attn): 0.2070, norm(output): 0.6719, norm(x): 0.6280, norm(y): 1.0197, norm:1.4093, tok/sec: 100708.94, flops:105.70, batch-reuse:1
@ 6542 train 4.2336 , allloss: 4.2344, dt: 1289.84ms, fracRes: 0.4433, norm(attn): 0.2080, norm(output): 0.6680, norm(x): 0.6262, norm(y): 1.0198, norm:1.3292, tok/sec: 101618.47, flops:106.65, batch-reuse:1
@ 6543 train 4.1899 , allloss: 4.1906, dt: 1312.11ms, fracRes: 0.4420, norm(attn): 0.2080, norm(output): 0.6641, norm(x): 0.6225, norm(y): 1.0198, norm:1.1682, tok/sec: 99894.41, flops:104.84, batch-reuse:1
@ 6544 train 4.2268 , allloss: 4.2272, dt: 1299.16ms, fracRes: 0.4408, norm(attn): 0.2119, norm(output): 0.6602, norm(x): 0.6239, norm(y): 1.0200, norm:1.3851, tok/sec: 100890.10, flops:105.89, batch-reuse:1
@ 6545 train 4.1139 , allloss: 4.1151, dt: 1332.75ms, fracRes: 0.4410, norm(attn): 0.2148, norm(output): 0.6758, norm(x): 0.6266, norm(y): 1.0195, norm:1.1365, tok/sec: 98347.16, flops:103.22, batch-reuse:1
@ 6546 train 4.2633 , allloss: 4.2654, dt: 1333.56ms, fracRes: 0.4416, norm(attn): 0.2100, norm(output): 0.6680, norm(x): 0.6246, norm(y): 1.0198, norm:1.4403, tok/sec: 98287.56, flops:103.15, batch-reuse:1
@ 6547 train 4.1287 , allloss: 4.1311, dt: 1316.55ms, fracRes: 0.4424, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6243, norm(y): 1.0197, norm:1.2428, tok/sec: 99557.19, flops:104.49, batch-reuse:1
@ 6548 train 4.1507 , allloss: 4.1516, dt: 1293.08ms, fracRes: 0.4426, norm(attn): 0.2109, norm(output): 0.6641, norm(x): 0.6231, norm(y): 1.0197, norm:1.1894, tok/sec: 101363.86, flops:106.38, batch-reuse:1
@ 6549 train 4.1665 , allloss: 4.1673, dt: 1311.97ms, fracRes: 0.4436, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6215, norm(y): 1.0196, norm:1.2450, tok/sec: 99905.03, flops:104.85, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0037, 0.9961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.4785, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4590, 0.2285, 0.1924, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0425, 0.0177, 0.1201, 0.7422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.0388, 0.0923, 0.0107, 0.4512, 0.0762, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.0532, 0.1074, 0.1670, 0.3047, 0.0957, 0.0898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.0623, 0.0879, 0.3418, 0.0400, 0.0299, 0.1543, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.0742, 0.0564, 0.0547, 0.1011, 0.1216, 0.0952, 0.2021, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.0461, 0.1299, 0.1963, 0.0845, 0.0369, 0.0376, 0.2061, 0.0625, 0.0522, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0238, 0.0118, 0.0115, 0.0107, 0.3066, 0.2275, 0.0288, 0.0082, 0.2100, 0.0981, 0.0625, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3184, 0.0669, 0.0928, 0.0210, 0.0579, 0.0187, 0.0693, 0.0620, 0.1348, 0.0366, 0.1064, 0.0153, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.0461, 0.0669, 0.1123, 0.0625, 0.0151, 0.0540, 0.0598, 0.1377, 0.0569, 0.0742, 0.0640, 0.0840, 0.0000, 0.0000],
        [0.0640, 0.0352, 0.0403, 0.0430, 0.0781, 0.0574, 0.0437, 0.0869, 0.1504, 0.0376, 0.0349, 0.0552, 0.0869, 0.1855, 0.0000],
        [0.0464, 0.0098, 0.0894, 0.2334, 0.0085, 0.0101, 0.0442, 0.1738, 0.0107, 0.0211, 0.0282, 0.0874, 0.1855, 0.0178, 0.0339]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0140,  0.0334, -0.0354,  ..., -0.0173,  0.0145,  0.0226],
        [ 0.0470,  0.0104,  0.0025,  ..., -0.0104,  0.0001, -0.0316],
        [-0.0046,  0.0147, -0.0043,  ..., -0.0006,  0.0045, -0.0102],
        ...,
        [-0.0355,  0.0227, -0.0111,  ...,  0.0125, -0.0160, -0.0045],
        [ 0.0514, -0.0147, -0.0250,  ...,  0.0318,  0.0168, -0.0072],
        [ 0.0075,  0.0054,  0.0354,  ..., -0.0121, -0.0225,  0.0265]], device='cuda:0', requires_grad=True)
K: tensor([-0.5625,  0.8672,  0.5781, -1.0078, -0.4434,  0.8281,  0.7773,  0.2793,  0.0283, -0.3613,  1.6250,  0.3789,  0.4590,  0.4648, -0.3398, -0.3145, -0.0703, -0.5781, -0.1079,  0.4863,  0.1348, -0.6562, -0.1016,  0.0796,  0.5117,  0.5195,  0.2100, -0.1250, -0.5547,  0.8516, -0.7109, -0.5898,
        -0.3691, -0.4805, -0.7656,  0.9375,  0.4570, -0.4941,  0.4336,  0.4492,  0.7070, -0.0164,  0.3945,  0.3438,  0.2637,  0.3750,  0.0708, -0.4609,  1.3984,  0.7578,  0.4609, -0.2119, -0.6797,  0.8164, -0.2559,  0.8555,  0.1475,  0.2832, -0.8203,  0.4434, -0.0698, -0.1455,  0.6445, -1.2969],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0213,     -0.0025,      0.0027,  ...,      0.0401,      0.0082,     -0.0203],
        [     0.0095,      0.0296,     -0.0249,  ...,      0.0008,      0.0190,     -0.0149],
        [     0.0016,     -0.0298,      0.0042,  ...,      0.0488,      0.0092,     -0.0239],
        ...,
        [     0.0230,      0.0109,     -0.0001,  ...,     -0.0167,     -0.0061,      0.0071],
        [    -0.0281,     -0.0135,      0.0165,  ...,      0.0326,     -0.0080,      0.0202],
        [     0.0258,      0.0062,     -0.0135,  ...,     -0.0469,     -0.0282,     -0.0040]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7773,  0.9727, -0.5156,  0.0757,  0.1177, -0.1426,  0.7539,  1.2188, -0.1748,  1.1094, -1.5312,  0.3652, -1.0859, -0.8516, -0.2041, -0.5391, -1.3359, -1.1719, -0.2832,  0.6992,  0.3613, -0.3555, -0.5742,  0.7812, -0.6445, -0.7109, -0.5508,  0.4883, -0.4629, -1.8750, -0.6797, -0.7305,
        -0.8242, -0.3496,  0.0635,  0.3984, -0.2676, -0.4102, -0.7656, -0.9336, -0.3398,  0.7031, -0.2354, -0.6797, -0.1338, -0.5742,  0.1680,  0.1777, -0.6055,  1.1719,  0.1914, -0.4863,  1.0156,  0.3223, -0.2793,  0.1660,  0.7422, -0.8086, -0.6211,  0.9883, -0.0549,  1.1562, -0.0913,  0.6797],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  5.5938,  1.2031,  1.9375,  0.6211,  2.6875,  2.8750,  1.0469, -0.1338,  1.1484,  1.6875,  3.6562,  2.0938, -0.2734,  1.3672],
        [ 0.0000,  0.7461,  0.2598,  3.3906, -0.7305, -0.4453,  1.4688,  0.8867, -1.2344, -0.1240,  1.1328,  2.5156,  2.7500, -0.8516,  1.0078],
        [ 0.0000, -0.6992, -0.8711, -1.3438, -1.1953, -2.0625, -0.8438, -0.6016, -0.9414, -0.9922, -0.4492, -1.1641, -0.5000, -0.7812, -0.1387],
        [ 0.0000, -0.5938, -1.4688,  0.4434,  2.2656,  1.6016,  0.6367, -0.7070,  2.1875,  0.9102,  1.7578,  0.5938,  0.0752,  1.9688,  0.2451],
        [ 0.0000, -2.1406, -1.2734, -3.4375,  0.3066, -1.4688, -1.9062, -1.2500,  0.9414, -1.0547, -1.4766, -3.5312, -2.5781,  0.3750, -1.3359],
        [ 0.0000, -1.2266, -0.5273, -0.0869,  0.5117, -0.6445, -0.7109, -0.1455,  1.1094,  0.0747, -0.1221,  0.1299,  0.0747,  0.7969, -0.2930],
        [ 0.0000, -0.8984, -0.5508,  0.8086, -1.3359, -1.6250,  0.0152, -0.1504, -0.9492, -1.0391, -0.2188, -0.6484,  0.5352, -1.1094, -0.0801],
        [ 0.0000, -0.4590, -0.7305, -0.7617, -0.1484,  0.0354, -0.2100,  0.5430,  0.4082, -0.5312, -0.3906, -0.3359, -0.1367,  0.9219,  0.3008],
        [ 0.0000, -1.1641, -0.1289,  0.2793, -0.5664, -1.3984, -1.3750,  0.3281, -0.8633, -1.0469, -0.1445, -0.7188, -0.4160, -1.3672, -0.3848],
        [ 0.0000, -0.6992, -0.7266, -0.7969,  2.5469,  2.2500,  0.1904, -1.0625,  2.1719,  1.4141,  0.9609, -0.0342, -0.8906,  1.7734, -0.2021],
        [ 0.0000, -1.5547, -1.2344, -2.7188, -1.7031, -2.8281, -1.5234, -1.6328, -0.8594, -2.1562, -1.0938, -3.0312, -2.0781, -1.1641, -1.0312],
        [ 0.0000, -1.2891, -0.9141, -0.3945, -0.9766, -2.4062, -1.1250, -1.0234, -0.1885, -1.0781, -0.8125, -0.9609, -0.6836, -0.3828, -0.6602],
        [ 0.0000, -0.6016, -0.4668, -0.3984,  0.1973, -0.1123, -0.3828,  0.3047,  0.8516, -0.5312, -0.6055, -0.1484,  0.3066,  1.0625, -0.1011],
        [ 0.0000, -1.5547,  0.6523,  1.6094, -1.7031, -1.5234, -0.0493,  1.3203, -1.4688, -0.7891, -0.4980,  0.6328,  1.3828, -0.9609, -0.3164]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3961],
        [0.3435],
        [0.4317],
        [0.3217],
        [0.5833],
        [0.2750],
        [0.3785],
        [0.1243],
        [0.1974],
        [0.1041],
        [0.3019],
        [0.3020],
        [0.0929],
        [0.0778]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0154, -0.0206, -0.0414,  ...,  0.0400, -0.0225,  0.0269],
        [ 0.0057, -0.0007, -0.0313,  ...,  0.0876, -0.0301,  0.0238],
        [-0.0026, -0.0453, -0.0680,  ...,  0.0659, -0.0363,  0.0002],
        ...,
        [-0.0268,  0.0076,  0.0050,  ...,  0.0080,  0.0252,  0.0476],
        [ 0.0026, -0.0144, -0.0390,  ...,  0.0377,  0.0148,  0.0059],
        [ 0.0122,  0.0354, -0.0049,  ..., -0.0274,  0.0069,  0.0391]], device='cuda:0', requires_grad=True)
K: tensor([-1.9844,  2.5781, -4.0625, -3.8594, -3.2656,  3.5469, -4.2812, -3.7812,  4.5312, -2.5625, -4.5312,  3.0469, -2.2969, -3.5156,  2.6250, -2.2344, -2.1406,  2.6406,  1.9531, -1.5938,  3.3281,  3.0625, -3.3594, -3.8281, -3.2031,  2.4688,  3.0938,  1.7656, -3.8750,  5.5938,  3.7812, -3.2969,
        -3.9688,  3.7344,  0.9922, -2.9062,  1.8125,  3.7344, -1.9062, -2.2656, -4.5938,  2.4062,  2.3125,  3.9688, -3.9531,  2.6094, -1.7109, -2.3125,  3.7500,  3.2656, -3.3906, -2.3906, -3.8281,  3.9219,  2.1562,  3.8594,  1.8984, -2.8906,  4.1250,  1.5000,  2.6562,  2.7500, -1.6172,  2.2344],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0216,  0.0184, -0.0102,  ..., -0.0057,  0.0280,  0.0032],
        [ 0.0179,  0.0191,  0.0388,  ..., -0.0350,  0.0157,  0.0214],
        [ 0.0289,  0.0135,  0.0144,  ..., -0.0346,  0.0443, -0.0018],
        ...,
        [ 0.0043, -0.0273, -0.0091,  ...,  0.0202, -0.0532,  0.0071],
        [-0.0141, -0.0219,  0.0145,  ..., -0.0006, -0.0141,  0.0164],
        [-0.0121, -0.0550,  0.0186,  ...,  0.0219,  0.0032,  0.0097]], device='cuda:0', requires_grad=True)
Q: tensor([ 4.5625, -2.5938,  2.5781,  2.1562,  4.0312, -4.3750,  2.9062,  4.7500, -4.2812,  2.9688,  5.2188, -4.5312,  2.2500,  4.8750, -2.3438,  3.0000,  4.2188, -3.2031, -2.3438,  2.7188, -4.1250, -3.6250,  5.2812,  3.8906,  4.3750, -2.1406, -3.0469, -3.4219,  3.5938, -4.4688, -3.5938,  6.6875,
         5.2812, -3.9844, -1.6328,  3.5625, -3.4688, -5.2500,  3.1250,  3.8906,  4.3750, -5.8438, -4.2500, -6.0625,  5.0000, -1.1172,  3.5625,  4.5312, -3.2188, -4.3125,  4.2500,  2.4844,  2.6406, -3.4531, -2.4219, -4.0938, -2.3906,  3.5781, -4.4375, -3.0625, -1.5156, -3.2344,  4.1875, -1.2656],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000, -235.0000, -118.0000, -181.0000, -205.0000, -210.0000, -214.0000, -157.0000, -204.0000, -176.0000, -212.0000, -192.0000, -212.0000, -206.0000, -141.0000],
        [   0.0000, -120.0000,  -62.2500,  -94.5000, -106.5000, -107.5000, -109.0000,  -79.0000, -106.5000,  -91.0000, -108.5000, -100.5000, -108.0000, -107.0000,  -74.0000],
        [   0.0000, -185.0000,  -89.0000, -142.0000, -164.0000, -166.0000, -170.0000, -122.0000, -161.0000, -136.0000, -170.0000, -149.0000, -166.0000, -163.0000, -111.0000],
        [   0.0000, -214.0000, -107.0000, -165.0000, -189.0000, -192.0000, -197.0000, -143.0000, -186.0000, -159.0000, -196.0000, -174.0000, -193.0000, -188.0000, -130.0000],
        [   0.0000, -205.0000, -105.0000, -158.0000, -180.0000, -183.0000, -188.0000, -138.0000, -179.0000, -154.0000, -188.0000, -168.0000, -185.0000, -181.0000, -125.0000],
        [   0.0000, -214.0000, -108.0000, -166.0000, -188.0000, -191.0000, -197.0000, -143.0000, -187.0000, -160.0000, -196.0000, -175.0000, -193.0000, -189.0000, -130.0000],
        [   0.0000, -125.5000,  -63.2500,  -98.0000, -110.5000, -112.5000, -115.0000,  -85.0000, -110.0000,  -94.0000, -114.0000, -103.0000, -114.0000, -111.0000,  -76.0000],
        [   0.0000, -228.0000, -114.0000, -177.0000, -200.0000, -204.0000, -209.0000, -152.0000, -198.0000, -172.0000, -209.0000, -186.0000, -206.0000, -200.0000, -138.0000],
        [   0.0000, -153.0000,  -77.5000, -119.0000, -135.0000, -137.0000, -140.0000, -102.0000, -133.0000, -114.5000, -139.0000, -125.5000, -138.0000, -134.0000,  -93.0000],
        [   0.0000, -207.0000, -103.0000, -158.0000, -180.0000, -185.0000, -189.0000, -139.0000, -177.0000, -154.0000, -187.0000, -167.0000, -186.0000, -179.0000, -123.5000],
        [   0.0000, -180.0000,  -91.0000, -141.0000, -159.0000, -162.0000, -165.0000, -120.0000, -159.0000, -135.0000, -165.0000, -148.0000, -163.0000, -161.0000, -110.0000],
        [   0.0000, -194.0000,  -97.0000, -150.0000, -170.0000, -173.0000, -178.0000, -132.0000, -169.0000, -144.0000, -177.0000, -158.0000, -176.0000, -170.0000, -116.5000],
        [   0.0000, -228.0000, -114.5000, -176.0000, -199.0000, -204.0000, -209.0000, -152.0000, -197.0000, -171.0000, -209.0000, -185.0000, -206.0000, -199.0000, -137.0000],
        [   0.0000, -149.0000,  -77.0000, -116.0000, -130.0000, -134.0000, -136.0000,  -99.0000, -129.0000, -113.0000, -134.0000, -123.0000, -134.0000, -130.0000,  -91.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0157, -0.0382, -0.0225,  ...,  0.0149,  0.0167,  0.0441],
        [-0.0101,  0.0072,  0.0475,  ..., -0.0192,  0.0309,  0.0054],
        [ 0.0231, -0.0208, -0.0395,  ...,  0.0030, -0.0090,  0.0497],
        ...,
        [ 0.0043,  0.0199,  0.0044,  ..., -0.0551,  0.0178, -0.0314],
        [ 0.0191, -0.0262, -0.0301,  ...,  0.0321, -0.0077,  0.0370],
        [ 0.0180,  0.0102,  0.0209,  ..., -0.0092,  0.0090, -0.0226]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9922, -4.2812, -4.1562,  3.6094,  1.3516,  3.7031,  4.2500,  7.5000,  4.3125, -4.5000, -5.8125, -6.0625,  4.1562, -6.3750,  7.3125, -5.6562,  5.6562, -0.3965, -4.8125, -6.0000,  5.8125, -5.5938, -5.0625,  5.1562,  3.6406, -5.6875, -2.7812, -4.0625, -2.5469, -6.0000, -7.1562, -5.0000,
         7.6875, -1.5234,  5.5938, -6.8438, -1.3750,  6.0938, -5.8750,  7.6875,  5.7812,  4.0000,  1.1641, -6.5625, -3.7500, -5.5625, -4.0625,  5.0000,  7.5312, -4.7812, -6.2500, -1.1875,  6.7812, -5.9062,  6.8125,  5.8438,  6.0625, -4.1875,  4.4375,  4.3125,  4.6562,  6.4688, -6.0000,  5.2188],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0524,  0.0185,  0.0313,  ..., -0.0184,  0.0081, -0.0174],
        [-0.0169, -0.0030, -0.0302,  ...,  0.0477, -0.0266,  0.0268],
        [ 0.0004, -0.0011,  0.0299,  ..., -0.0735,  0.0298, -0.0048],
        ...,
        [-0.0094,  0.0038, -0.0067,  ...,  0.0373, -0.0146,  0.0322],
        [-0.0163, -0.0130,  0.0116,  ..., -0.0597,  0.0304, -0.0194],
        [-0.0193,  0.0151, -0.0373,  ...,  0.0663, -0.0265,  0.0043]], device='cuda:0', requires_grad=True)
Q: tensor([-2.3594,  2.9844,  3.7500, -3.4844, -3.1094, -4.5625, -4.1250, -5.0625, -4.5625,  4.2812,  5.0000,  5.0938, -3.7500,  6.0625, -5.3438,  5.0625, -3.6562, -0.7148,  3.8594,  4.8750, -3.8438,  4.8438,  5.1250, -4.5312, -3.7344,  4.8750,  4.2812,  5.0625,  2.5312,  4.8750,  5.1562,  4.2500,
        -6.1562,  2.0156, -3.9219,  5.1875,  2.3906, -5.4062,  4.4062, -5.6562, -4.7188, -3.3594, -0.4082,  5.6562,  2.6250,  3.8906,  3.9219, -4.8125, -5.1875,  4.0312,  4.8125,  0.8555, -4.9688,  4.7812, -5.0938, -4.0938, -5.4375,  2.6094, -3.6562, -3.1875, -5.4688, -5.0000,  4.5625, -4.2812],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.],
        [   0., -324., -203., -242., -286., -312., -310., -226., -288., -248., -256., -236., -332., -288., -237.],
        [   0., -200., -126., -150., -177., -193., -191., -140., -178., -153., -158., -146., -205., -178., -147.],
        [   0., -262., -165., -197., -230., -252., -250., -183., -233., -201., -208., -191., -268., -233., -193.],
        [   0., -288., -182., -215., -254., -278., -276., -201., -255., -221., -227., -209., -296., -255., -211.],
        [   0., -310., -195., -231., -274., -300., -296., -217., -276., -238., -245., -226., -318., -276., -227.],
        [   0., -300., -190., -224., -264., -290., -288., -210., -266., -231., -236., -218., -308., -266., -220.],
        [   0., -213., -136., -159., -185., -204., -203., -151., -190., -165., -166., -155., -221., -189., -157.],
        [   0., -304., -192., -228., -268., -294., -292., -213., -272., -234., -241., -222., -314., -272., -223.],
        [   0., -270., -171., -202., -238., -260., -258., -190., -240., -209., -214., -197., -278., -240., -198.],
        [   0., -258., -164., -193., -227., -249., -247., -181., -229., -199., -204., -188., -266., -229., -190.],
        [   0., -248., -156., -185., -219., -239., -237., -173., -221., -190., -196., -181., -254., -221., -182.],
        [   0., -318., -204., -239., -280., -306., -304., -225., -284., -247., -250., -232., -330., -284., -235.],
        [   0., -302., -191., -226., -266., -292., -290., -212., -270., -233., -239., -220., -312., -270., -222.],
        [   0., -242., -153., -182., -213., -234., -232., -169., -216., -186., -192., -176., -248., -215., -179.]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0413,     0.9570,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0204,     0.8906,     0.0908,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0085,     0.5156,     0.1885,     0.2871,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0532,     0.7109,     0.1216,     0.0427,     0.0723,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0123,     0.1689,     0.0669,     0.0591,     0.0386,     0.6523,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0068,     0.0684,     0.0459,     0.0417,     0.0742,     0.5273,     0.2344,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0134,     0.0574,     0.0189,     0.0238,     0.0044,     0.0806,     0.0457,     0.7578,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0029,     0.0073,     0.0057,     0.0017,     0.0072,     0.1992,     0.0354,     0.7266,     0.0143,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0066,     0.0188,     0.0103,     0.0103,     0.0039,     0.0388,     0.0469,     0.6172,     0.0488,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.0056,     0.0062,     0.0022,     0.0027,     0.0396,     0.0571,     0.4355,     0.0280,     0.3867,     0.0332,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0048,     0.0048,     0.0060,     0.0015,     0.0106,     0.0137,     0.2295,     0.0391,     0.1699,     0.0605,     0.4590,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0037,     0.0023,     0.0012,     0.0005,     0.0102,     0.0042,     0.1387,     0.0068,     0.0903,     0.0114,     0.2100,     0.5195,     0.0000,     0.0000],
        [    0.0007,     0.0007,     0.0007,     0.0002,     0.0005,     0.0153,     0.0025,     0.0574,     0.0010,     0.0298,     0.0047,     0.0947,     0.7617,     0.0280,     0.0000],
        [    0.0007,     0.0016,     0.0013,     0.0009,     0.0013,     0.0036,     0.0073,     0.0425,     0.0097,     0.0344,     0.0197,     0.1289,     0.3281,     0.1631,     0.2559]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0234,  0.0243,  0.0418,  ..., -0.0423,  0.0149, -0.0212],
        [-0.0388, -0.0336,  0.0261,  ..., -0.0597, -0.0363,  0.0181],
        [-0.0554, -0.0488,  0.0368,  ..., -0.0532, -0.0122, -0.0073],
        ...,
        [ 0.0513, -0.0273,  0.0002,  ..., -0.0067, -0.0479,  0.0024],
        [ 0.0319,  0.0606, -0.0045,  ...,  0.0671, -0.0142, -0.0072],
        [-0.0018, -0.0089,  0.0027,  ...,  0.0204,  0.0332, -0.0007]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6328, -1.6406, -1.3906,  0.8125, -1.1016, -0.1582,  0.9844,  2.5938,  0.1138,  2.1094, -0.2148, -1.9062, -0.8516,  0.3262, -0.0164,  1.8047,  1.5156, -1.4922, -0.0879, -1.8672,  0.8086, -3.5312,  0.0068,  1.7812, -2.6719, -0.5117,  0.0574, -1.5781,  0.6133,  2.4062, -3.5625,  2.5469,
        -1.1797, -2.5938, -2.5625, -2.0469,  1.7344,  2.9531,  0.2812,  0.8633,  3.8906, -0.0908, -3.4062,  2.9219, -0.8594, -0.2715,  1.2891,  1.0078,  0.7812,  0.3184,  0.3242, -2.3438,  2.2500,  0.9922, -1.7656, -2.5625, -1.4844, -2.8438,  1.4609, -0.4062, -2.0312, -1.6094, -1.4766,  0.3887],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0233,      0.0239,     -0.0504,  ...,     -0.0085,     -0.0403,     -0.0043],
        [    -0.0233,      0.0132,      0.0088,  ...,     -0.0105,      0.0043,     -0.0381],
        [     0.0168,      0.0385,     -0.0262,  ...,      0.0190,     -0.0321,      0.0050],
        ...,
        [    -0.0113,     -0.0282,      0.0013,  ...,     -0.0325,      0.0303,      0.0006],
        [     0.0231,     -0.0154,      0.0000,  ...,     -0.0043,      0.0262,      0.0197],
        [     0.0363,      0.0107,      0.0106,  ...,     -0.0324,     -0.0232,      0.0324]], device='cuda:0', requires_grad=True)
Q: tensor([-0.8750, -0.9570, -1.7344, -1.5078, -1.2734, -2.5469, -0.5469,  1.0078,  3.1719, -1.4609,  5.0312, -2.1719,  1.5547,  2.6875,  4.6875, -1.5391,  1.7734, -0.9883,  3.9688, -3.4844,  0.4688, -2.6562,  1.5234,  1.8203, -3.1719,  1.0781, -0.2158,  1.7891,  0.8125, -0.3301, -2.1250,  1.1719,
         2.6562, -0.3672,  0.8867, -2.0938, -1.7344,  1.6094,  1.5234,  2.2031,  1.1484,  0.0554,  3.4844, -1.3438, -3.7656, -1.5625,  2.5156, -1.9297, -0.9648,  0.7344,  2.7812, -1.8828,  2.0156, -1.2812,  3.4844, -1.8594, -0.2432, -0.9492,  0.6992, -0.1846,  0.3398,  2.2812, -0.5156,  0.6094],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.1406,  1.8750,  1.5000,  2.3281,  2.4844,  2.5156,  2.9531,  2.4688,  2.6094,  2.3125,  3.0469,  3.0156,  2.6094,  2.2344],
        [ 0.0000,  3.7812,  1.4922,  2.8750,  1.2734,  3.4375,  3.7656,  6.3750,  5.3438,  5.3750,  5.7188,  8.3750,  8.9375,  8.5000,  9.2500],
        [ 0.0000,  4.0938,  3.0938,  3.5156,  4.1875,  6.3438,  6.8438,  8.6250,  7.5625,  8.3125,  9.2500, 10.6250, 11.6250, 11.2500, 12.0000],
        [ 0.0000,  2.5938,  0.8281, -0.2207,  0.3047,  5.0000,  3.8438,  6.5312,  2.6562,  6.4375,  5.4688,  7.0938,  9.3750,  6.4062,  8.9375],
        [ 0.0000,  2.6250,  1.6953,  1.5625,  1.1406,  3.9688,  3.5781,  6.6250,  4.0938,  6.2500,  4.9062,  7.9375,  9.0625,  7.7812, 10.0625],
        [ 0.0000,  2.2969,  1.9062,  1.8125,  2.3906,  4.3438,  3.5312,  6.1875,  4.9062,  6.4688,  5.6875,  7.9062,  8.3125,  8.1250,  9.6875],
        [ 0.0000,  1.4531,  0.3438,  0.5742, -1.1094,  1.7969,  1.2266,  4.0312,  2.0312,  3.8281,  2.3750,  5.4375,  5.9062,  5.0312,  6.6250],
        [ 0.0000,  0.9336,  0.6797, -0.5039,  0.9180,  4.2500,  2.5156,  5.5312,  1.6016,  4.8438,  3.4531,  6.2500,  8.3125,  5.0625,  7.9688],
        [ 0.0000,  1.0547,  0.4512,  0.4512, -0.5078,  1.7734,  1.9688,  4.5312,  2.0000,  3.4062,  2.5312,  5.2188,  6.8750,  5.2812,  7.2500],
        [ 0.0000,  0.6875,  0.7773, -0.2500, -0.0420,  2.6406,  3.0000,  5.0312,  2.2969,  4.9062,  2.4688,  5.9062,  7.1250,  5.6562,  8.4375],
        [ 0.0000,  1.1797,  1.1797,  1.3984,  0.0195,  1.9609,  2.2188,  5.0312,  3.2656,  4.7500,  3.7188,  5.7500,  7.2188,  6.4375,  7.5625],
        [ 0.0000,  0.9258,  0.4648, -0.1758, -1.1797,  1.9375,  1.0625,  4.5625,  1.5391,  4.1250,  2.0469,  4.9688,  5.8750,  4.6250,  6.5000],
        [ 0.0000, -0.0967, -0.0801, -1.4141, -0.3223,  3.0469,  1.2344,  4.3750,  0.2793,  3.7188,  1.8672,  4.8750,  6.9688,  3.6406,  6.5625],
        [ 0.0000,  0.7539,  0.5938,  0.2197,  0.5625,  1.5938,  2.2812,  4.0625,  2.5781,  3.8438,  3.2812,  5.1562,  6.0938,  5.4062,  5.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3450],
        [0.0441],
        [0.0306],
        [0.0518],
        [0.0297],
        [0.0201],
        [0.0196],
        [0.0080],
        [0.0080],
        [0.0063],
        [0.0046],
        [0.0101],
        [0.0049],
        [0.0032]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0864,     0.9141,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.8672,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.8125,     0.0082,     0.1807,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.8477,     0.0116,     0.0080,     0.1318,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.8477,     0.0087,     0.0106,     0.0400,     0.0894,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.9570,     0.0006,     0.0016,     0.0025,     0.0075,     0.0322,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.8633,     0.0028,     0.0223,     0.0391,     0.0115,     0.0334,     0.0292,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0077,     0.7031,     0.0078,     0.0160,     0.0188,     0.0437,     0.1426,     0.0231,     0.0364,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.6289,     0.0124,     0.0486,     0.0219,     0.0183,     0.1729,     0.0105,     0.0275,     0.0571,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.4492,     0.0093,     0.0177,     0.0012,     0.0096,     0.1152,     0.0292,     0.0072,     0.1128,     0.2451,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0043,     0.1660,     0.0078,     0.4102,     0.0471,     0.0097,     0.0300,     0.0679,     0.0238,     0.0830,     0.1396,     0.0099,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.5547,     0.0014,     0.0254,     0.0693,     0.0078,     0.0801,     0.0049,     0.0811,     0.0242,     0.0806,     0.0031,     0.0664,     0.0000,     0.0000],
        [    0.0063,     0.2656,     0.0045,     0.0139,     0.0116,     0.0206,     0.1079,     0.0093,     0.0253,     0.1089,     0.1191,     0.0156,     0.1631,     0.1279,     0.0000],
        [    0.0027,     0.6523,     0.0330,     0.0219,     0.0160,     0.0141,     0.0825,     0.0140,     0.0061,     0.0150,     0.0110,     0.0058,     0.1060,     0.0067,     0.0129]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0052,  0.0108,  0.0055,  ..., -0.0162,  0.0157,  0.0233],
        [ 0.0328, -0.0093, -0.0131,  ..., -0.0217,  0.0099,  0.0065],
        [-0.0231, -0.0093, -0.0032,  ...,  0.0246, -0.0201, -0.0155],
        ...,
        [-0.0034,  0.0117,  0.0319,  ..., -0.0313, -0.0156,  0.0079],
        [-0.0217, -0.0422, -0.0173,  ..., -0.0053, -0.0297, -0.0043],
        [ 0.0023, -0.0042,  0.0115,  ...,  0.0026, -0.0081,  0.0243]], device='cuda:0', requires_grad=True)
K: tensor([    -1.0234,     -1.8203,      0.3477,      0.4531,      0.2314,     -0.1924,     -1.5781,      0.5195,     -1.7656,      1.3203,      0.0957,     -1.7109,     -0.5781,      0.8477,     -0.9766,      1.8516,      0.8438,      0.0018,      3.5938,      0.9180,     -0.7383,     -1.5938,
             0.7109,     -0.0058,     -0.5898,      0.8438,      0.5156,      0.1128,      1.4766,     -0.2754,     -0.3359,     -1.1328,      1.2656,      1.0000,      0.1748,      1.9688,      0.1079,      0.2559,      1.2734,     -1.1484,      1.6641,      0.1387,     -0.8828,      1.2500,
            -1.8516,      0.8906,     -2.1719,     -1.7734,      0.3750,      0.0334,      1.2656,     -0.8047,     -0.6719,      1.0234,      0.9062,      0.3340,      0.5703,     -1.4219,     -0.0679,     -0.7148,      1.4297,     -0.4668,      0.9453,      0.0603], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0400,  0.0352, -0.0301,  ...,  0.0062, -0.0034,  0.0034],
        [-0.0277,  0.0051,  0.0021,  ..., -0.0250, -0.0033, -0.0374],
        [-0.0138, -0.0108, -0.0157,  ..., -0.0225,  0.0162, -0.0100],
        ...,
        [ 0.0194, -0.0040, -0.0336,  ..., -0.0164,  0.0212,  0.0127],
        [-0.0207, -0.0201, -0.0436,  ...,  0.0079, -0.0083,  0.0338],
        [-0.0048,  0.0196, -0.0074,  ..., -0.0255, -0.0044, -0.0038]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6133, -0.0718, -0.7930, -1.1719, -0.6992, -3.1250,  0.9531,  2.1406,  0.1738, -1.4062, -1.4062,  1.7344,  1.1719, -0.4082, -0.7812, -3.2188,  1.4141, -2.4219,  0.3633, -0.6680, -0.3945, -1.0547, -1.2812,  0.3770,  0.3965,  1.4922,  0.7852,  1.4297,  1.0703,  1.2109, -1.3828,  0.3965,
         1.0156, -0.4746, -1.8438, -0.9062, -1.3438, -2.2344,  1.9062,  0.4902,  1.9922, -0.0288, -1.4609,  1.8438, -2.3125, -0.7773, -1.5391,  0.4180,  1.3516, -0.7969, -0.1787,  1.3906, -0.9062, -2.0312, -0.4316, -0.3418, -0.2402, -2.7344, -0.2656, -1.5000,  1.8672, -1.0469,  1.3203,  1.5234],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.3594, -0.8711, -1.2500, -0.8164, -2.0781, -3.6875, -1.2578, -3.2188, -1.8906, -3.0000, -3.6562, -1.7188, -3.9062, -3.8594],
        [ 0.0000,  6.5625,  4.6875,  6.6875,  7.5625,  4.1875,  3.5938,  4.7812,  4.3438,  2.6094,  3.7031,  0.1226,  4.9688,  2.9844,  0.7344],
        [ 0.0000,  7.8750,  3.2812,  6.3750,  8.5000,  5.5312,  5.1562,  4.3750,  4.0625,  3.2969,  3.2344,  0.5430,  4.8750,  3.5156,  1.9297],
        [ 0.0000,  6.4688,  2.1562,  1.7891,  4.5938,  5.8125,  3.7031,  2.4688,  2.0312,  3.0469,  1.2578, -0.5781,  2.2656,  1.6016,  2.2969],
        [ 0.0000,  5.2812,  0.7070,  0.9102,  2.2500,  3.0469,  3.1875,  1.5234,  1.2578,  1.9453,  0.9297, -1.7891,  0.4727,  0.3613,  1.0469],
        [ 0.0000,  8.3125,  0.9727,  1.9531,  2.3750,  3.4688,  4.9375,  5.4375,  3.5312,  2.6406,  2.4219,  0.5742,  2.5469,  1.9297,  2.6250],
        [ 0.0000,  8.1250,  2.4219,  4.5000,  5.0625,  3.8438,  4.9062,  4.7500,  5.8438,  4.1562,  5.0938,  0.8242,  4.0938,  5.0000,  4.4375],
        [ 0.0000,  4.5000,  0.0145,  0.7305,  0.8906,  1.7344,  2.9219,  1.0938,  1.5547,  2.7812,  2.7656,  0.3047,  2.1094,  1.8750,  3.4219],
        [ 0.0000,  5.8750,  1.9375,  3.2969,  2.5000,  2.3281,  4.5625,  1.7656,  2.7344,  3.4688,  6.8750,  3.1719,  4.8125,  3.3750,  4.9062],
        [ 0.0000,  4.5938,  0.7188,  1.3672, -1.3594,  0.7500,  3.2344,  1.8672,  0.4707,  3.2188,  4.0000,  3.7812,  5.3125,  1.6875,  4.1250],
        [ 0.0000,  3.6406,  0.5859,  4.5625,  2.3906,  0.8008,  1.9375,  2.7500,  1.7031,  2.9531,  3.4688,  0.8320,  7.1562,  3.2344,  3.0625],
        [ 0.0000,  6.5000,  0.4941,  3.4062,  4.4062,  2.2188,  4.5625,  1.7500,  4.5625,  3.3438,  4.5625,  1.3125,  4.3438,  5.9062,  5.3750],
        [ 0.0000,  3.7344, -0.3418,  0.7812,  0.5977,  1.1719,  2.8281,  0.3770,  1.3750,  2.8438,  2.9375,  0.8984,  3.2500,  3.0000,  4.4062],
        [ 0.0000,  5.5000,  2.5000,  2.0938,  1.7734,  1.6484,  3.4219,  1.6484,  0.8164,  1.7109,  1.4062,  0.7617,  3.6719,  0.9141,  1.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0638],
        [    0.0042],
        [    0.0008],
        [    0.0011],
        [    0.0107],
        [    0.0022],
        [    0.0013],
        [    0.0027],
        [    0.0053],
        [    0.0071],
        [    0.0052],
        [    0.0036],
        [    0.0025],
        [    0.0197]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1631 a:0.1074,:0.3086 yellow:0.0859om:0.1177,:0.6328 a:0.0442iced:0.5430)
iced
------
		( a:0.1074,:0.3086 yellow:0.0859om:0.1177,:0.6328 a:0.0442iced:0.5430,:0.4238)
, and are not the same as the other two.
The most common
@ 6550 train 4.1759 , allloss: 4.1765, dt: 1720.27ms, fracRes: 0.4452, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6243, norm(y): 1.0197, norm:1.2952, tok/sec: 76192.62, flops:79.97, batch-reuse:1
@ 6551 train 4.4409 , allloss: 4.4415, dt: 1316.92ms, fracRes: 0.4466, norm(attn): 0.2070, norm(output): 0.6680, norm(x): 0.6258, norm(y): 1.0197, norm:1.4342, tok/sec: 99529.45, flops:104.46, batch-reuse:1
@ 6552 train 4.3639 , allloss: 4.3649, dt: 1287.59ms, fracRes: 0.4443, norm(attn): 0.2090, norm(output): 0.6680, norm(x): 0.6232, norm(y): 1.0199, norm:1.4982, tok/sec: 101796.47, flops:106.84, batch-reuse:1
@ 6553 train 4.2586 , allloss: 4.2592, dt: 1312.92ms, fracRes: 0.4454, norm(attn): 0.2080, norm(output): 0.6641, norm(x): 0.6224, norm(y): 1.0198, norm:1.2924, tok/sec: 99832.54, flops:104.78, batch-reuse:1
@ 6554 train 4.2040 , allloss: 4.2047, dt: 1306.43ms, fracRes: 0.4444, norm(attn): 0.2109, norm(output): 0.6562, norm(x): 0.6204, norm(y): 1.0198, norm:1.3853, tok/sec: 100328.62, flops:105.30, batch-reuse:1
@ 6555 train 4.2679 , allloss: 4.2692, dt: 1307.10ms, fracRes: 0.4452, norm(attn): 0.2090, norm(output): 0.6641, norm(x): 0.6218, norm(y): 1.0197, norm:1.2280, tok/sec: 100277.27, flops:105.24, batch-reuse:1
@ 6556 train 4.1799 , allloss: 4.1808, dt: 1308.60ms, fracRes: 0.4439, norm(attn): 0.2158, norm(output): 0.6719, norm(x): 0.6294, norm(y): 1.0196, norm:1.2273, tok/sec: 100162.30, flops:105.12, batch-reuse:1
@ 6557 train 4.1429 , allloss: 4.1438, dt: 1324.97ms, fracRes: 0.4441, norm(attn): 0.2119, norm(output): 0.6719, norm(x): 0.6239, norm(y): 1.0197, norm:1.1791, tok/sec: 98924.68, flops:103.82, batch-reuse:1
@ 6558 train 4.1675 , allloss: 4.1682, dt: 1330.06ms, fracRes: 0.4431, norm(attn): 0.2080, norm(output): 0.6641, norm(x): 0.6201, norm(y): 1.0197, norm:1.0767, tok/sec: 98546.07, flops:103.43, batch-reuse:1
@ 6559 train 4.2297 , allloss: 4.2337, dt: 1297.86ms, fracRes: 0.4439, norm(attn): 0.2070, norm(output): 0.6719, norm(x): 0.6227, norm(y): 1.0196, norm:1.2478, tok/sec: 100990.72, flops:105.99, batch-reuse:1
@ 6560 train 4.1500 , allloss: 4.1515, dt: 1298.57ms, fracRes: 0.4425, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6209, norm(y): 1.0196, norm:1.0887, tok/sec: 100935.54, flops:105.93, batch-reuse:1
@ 6561 train 4.1344 , allloss: 4.1359, dt: 1303.12ms, fracRes: 0.4438, norm(attn): 0.2090, norm(output): 0.6758, norm(x): 0.6246, norm(y): 1.0195, norm:1.2282, tok/sec: 100583.57, flops:105.56, batch-reuse:1
@ 6562 train 4.1073 , allloss: 4.1080, dt: 1325.19ms, fracRes: 0.4433, norm(attn): 0.2100, norm(output): 0.6719, norm(x): 0.6228, norm(y): 1.0196, norm:1.3095, tok/sec: 98907.81, flops:103.81, batch-reuse:1
@ 6563 train 4.1161 , allloss: 4.1167, dt: 1298.76ms, fracRes: 0.4439, norm(attn): 0.2070, norm(output): 0.6680, norm(x): 0.6220, norm(y): 1.0196, norm:1.1888, tok/sec: 100920.72, flops:105.92, batch-reuse:1
@ 6564 train 4.1658 , allloss: 4.1664, dt: 1305.82ms, fracRes: 0.4446, norm(attn): 0.2080, norm(output): 0.6758, norm(x): 0.6240, norm(y): 1.0196, norm:1.3808, tok/sec: 100375.28, flops:105.35, batch-reuse:1
@ 6565 train 4.0878 , allloss: 4.0882, dt: 1300.23ms, fracRes: 0.4436, norm(attn): 0.2109, norm(output): 0.6719, norm(x): 0.6247, norm(y): 1.0197, norm:1.2317, tok/sec: 100806.76, flops:105.80, batch-reuse:1
@ 6566 train 4.1694 , allloss: 4.1702, dt: 1317.05ms, fracRes: 0.4447, norm(attn): 0.2070, norm(output): 0.6836, norm(x): 0.6278, norm(y): 1.0195, norm:1.4142, tok/sec: 99519.62, flops:104.45, batch-reuse:1
@ 6567 train 4.1694 , allloss: 4.1701, dt: 1348.94ms, fracRes: 0.4427, norm(attn): 0.2070, norm(output): 0.6719, norm(x): 0.6214, norm(y): 1.0196, norm:1.2554, tok/sec: 97166.35, flops:101.98, batch-reuse:1
@ 6568 train 4.1354 , allloss: 4.1359, dt: 1318.64ms, fracRes: 0.4429, norm(attn): 0.2090, norm(output): 0.6641, norm(x): 0.6205, norm(y): 1.0196, norm:1.2466, tok/sec: 99399.36, flops:104.32, batch-reuse:1
@ 6569 train 4.1294 , allloss: 4.1298, dt: 1351.37ms, fracRes: 0.4429, norm(attn): 0.2129, norm(output): 0.6680, norm(x): 0.6209, norm(y): 1.0196, norm:1.1066, tok/sec: 96991.64, flops:101.79, batch-reuse:1
@ 6570 train 4.1832 , allloss: 4.1869, dt: 1341.37ms, fracRes: 0.4442, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6224, norm(y): 1.0196, norm:1.1745, tok/sec: 97715.08, flops:102.55, batch-reuse:1
@ 6571 train 4.1529 , allloss: 4.1538, dt: 1319.80ms, fracRes: 0.4443, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6262, norm(y): 1.0196, norm:1.3236, tok/sec: 99311.83, flops:104.23, batch-reuse:1
@ 6572 train 4.1403 , allloss: 4.1414, dt: 1311.29ms, fracRes: 0.4432, norm(attn): 0.2109, norm(output): 0.6641, norm(x): 0.6237, norm(y): 1.0197, norm:1.1118, tok/sec: 99956.33, flops:104.91, batch-reuse:1
@ 6573 train 4.1944 , allloss: 4.1965, dt: 1316.66ms, fracRes: 0.4429, norm(attn): 0.2090, norm(output): 0.6680, norm(x): 0.6239, norm(y): 1.0196, norm:1.1436, tok/sec: 99548.74, flops:104.48, batch-reuse:1
@ 6574 train 4.1997 , allloss: 4.2003, dt: 1315.55ms, fracRes: 0.4439, norm(attn): 0.2080, norm(output): 0.6758, norm(x): 0.6240, norm(y): 1.0197, norm:1.1250, tok/sec: 99633.05, flops:104.57, batch-reuse:1
@ 6575 train 4.1860 , allloss: 4.1869, dt: 1323.44ms, fracRes: 0.4447, norm(attn): 0.2119, norm(output): 0.6758, norm(x): 0.6314, norm(y): 1.0196, norm:1.2717, tok/sec: 99038.83, flops:103.94, batch-reuse:1
@ 6576 train 4.2142 , allloss: 4.2148, dt: 1289.98ms, fracRes: 0.4435, norm(attn): 0.2080, norm(output): 0.6719, norm(x): 0.6247, norm(y): 1.0196, norm:1.2177, tok/sec: 101607.46, flops:106.64, batch-reuse:1
@ 6577 train 4.1588 , allloss: 4.1594, dt: 1281.46ms, fracRes: 0.4437, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6232, norm(y): 1.0196, norm:1.1648, tok/sec: 102283.35, flops:107.35, batch-reuse:1
@ 6578 train 4.1963 , allloss: 4.1970, dt: 1296.05ms, fracRes: 0.4441, norm(attn): 0.2119, norm(output): 0.6719, norm(x): 0.6266, norm(y): 1.0197, norm:1.1680, tok/sec: 101131.54, flops:106.14, batch-reuse:1
@ 6579 train 4.1219 , allloss: 4.1247, dt: 1304.12ms, fracRes: 0.4450, norm(attn): 0.2129, norm(output): 0.6758, norm(x): 0.6249, norm(y): 1.0195, norm:1.3480, tok/sec: 100506.21, flops:105.48, batch-reuse:1
@ 6580 train 4.2108 , allloss: 4.2116, dt: 1285.27ms, fracRes: 0.4448, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6240, norm(y): 1.0197, norm:1.3255, tok/sec: 101979.75, flops:107.03, batch-reuse:1
@ 6581 train 4.2179 , allloss: 4.2186, dt: 1309.27ms, fracRes: 0.4442, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6222, norm(y): 1.0198, norm:1.1889, tok/sec: 100110.94, flops:105.07, batch-reuse:1
@ 6582 train 4.1270 , allloss: 4.1281, dt: 1307.58ms, fracRes: 0.4446, norm(attn): 0.2100, norm(output): 0.6680, norm(x): 0.6191, norm(y): 1.0197, norm:1.1607, tok/sec: 100239.90, flops:105.20, batch-reuse:1
@ 6583 train 4.1455 , allloss: 4.1461, dt: 1286.92ms, fracRes: 0.4443, norm(attn): 0.2109, norm(output): 0.6641, norm(x): 0.6217, norm(y): 1.0198, norm:1.2610, tok/sec: 101849.41, flops:106.89, batch-reuse:1
@ 6584 train 4.0733 , allloss: 4.0740, dt: 1300.82ms, fracRes: 0.4436, norm(attn): 0.2109, norm(output): 0.6719, norm(x): 0.6226, norm(y): 1.0195, norm:1.2844, tok/sec: 100761.16, flops:105.75, batch-reuse:1
@ 6585 train 4.1227 , allloss: 4.1231, dt: 1292.03ms, fracRes: 0.4426, norm(attn): 0.2109, norm(output): 0.6758, norm(x): 0.6231, norm(y): 1.0195, norm:1.1077, tok/sec: 101446.25, flops:106.47, batch-reuse:1
@ 6586 train 4.1704 , allloss: 4.1713, dt: 1293.32ms, fracRes: 0.4422, norm(attn): 0.2100, norm(output): 0.6758, norm(x): 0.6232, norm(y): 1.0197, norm:1.0759, tok/sec: 101345.29, flops:106.36, batch-reuse:1
@ 6587 train 4.2148 , allloss: 4.2154, dt: 1313.99ms, fracRes: 0.4425, norm(attn): 0.2129, norm(output): 0.6680, norm(x): 0.6221, norm(y): 1.0196, norm:1.1045, tok/sec: 99751.38, flops:104.69, batch-reuse:1
@ 6588 train 4.1244 , allloss: 4.1251, dt: 1300.90ms, fracRes: 0.4433, norm(attn): 0.2129, norm(output): 0.6758, norm(x): 0.6255, norm(y): 1.0195, norm:1.0595, tok/sec: 100755.03, flops:105.74, batch-reuse:1
@ 6589 train 4.1720 , allloss: 4.1724, dt: 1319.79ms, fracRes: 0.4434, norm(attn): 0.2090, norm(output): 0.6680, norm(x): 0.6220, norm(y): 1.0196, norm:1.2579, tok/sec: 99312.92, flops:104.23, batch-reuse:1
@ 6590 train 4.1207 , allloss: 4.1213, dt: 1314.13ms, fracRes: 0.4437, norm(attn): 0.2080, norm(output): 0.6719, norm(x): 0.6229, norm(y): 1.0196, norm:1.1704, tok/sec: 99740.82, flops:104.68, batch-reuse:1
@ 6591 train 4.2323 , allloss: 4.2331, dt: 1336.37ms, fracRes: 0.4441, norm(attn): 0.2100, norm(output): 0.6758, norm(x): 0.6249, norm(y): 1.0196, norm:1.3001, tok/sec: 98080.94, flops:102.94, batch-reuse:1
@ 6592 train 4.1560 , allloss: 4.1569, dt: 1347.38ms, fracRes: 0.4429, norm(attn): 0.2119, norm(output): 0.6719, norm(x): 0.6224, norm(y): 1.0197, norm:1.2116, tok/sec: 97279.22, flops:102.10, batch-reuse:1
@ 6593 train 4.1687 , allloss: 4.1694, dt: 1331.68ms, fracRes: 0.4456, norm(attn): 0.2109, norm(output): 0.6797, norm(x): 0.6283, norm(y): 1.0196, norm:1.2189, tok/sec: 98426.20, flops:103.30, batch-reuse:1
@ 6594 train 4.1046 , allloss: 4.1054, dt: 1338.10ms, fracRes: 0.4468, norm(attn): 0.2119, norm(output): 0.6836, norm(x): 0.6309, norm(y): 1.0199, norm:1.7413, tok/sec: 97954.11, flops:102.80, batch-reuse:1
@ 6595 train 3.9961 , allloss: 3.9972, dt: 1337.94ms, fracRes: 0.4448, norm(attn): 0.2158, norm(output): 0.6875, norm(x): 0.6329, norm(y): 1.0195, norm:1.4518, tok/sec: 97965.16, flops:102.82, batch-reuse:1
@ 6596 train 4.2412 , allloss: 4.2424, dt: 1306.54ms, fracRes: 0.4438, norm(attn): 0.2129, norm(output): 0.6758, norm(x): 0.6244, norm(y): 1.0197, norm:1.2834, tok/sec: 100320.28, flops:105.29, batch-reuse:1
@ 6597 train 4.1951 , allloss: 4.1961, dt: 1271.17ms, fracRes: 0.4432, norm(attn): 0.2139, norm(output): 0.6719, norm(x): 0.6244, norm(y): 1.0197, norm:1.2271, tok/sec: 103111.45, flops:108.22, batch-reuse:1
@ 6598 train 4.1765 , allloss: 4.1808, dt: 1292.83ms, fracRes: 0.4432, norm(attn): 0.2148, norm(output): 0.6680, norm(x): 0.6239, norm(y): 1.0198, norm:1.2355, tok/sec: 101383.54, flops:106.40, batch-reuse:1
@ 6599 train 4.1873 , allloss: 4.1935, dt: 1298.93ms, fracRes: 0.4432, norm(attn): 0.2129, norm(output): 0.6680, norm(x): 0.6223, norm(y): 1.0197, norm:1.1355, tok/sec: 100907.77, flops:105.90, batch-reuse:1
@ 6600 train 4.1779 , allloss: 4.1806, dt: 1321.00ms, fracRes: 0.4435, norm(attn): 0.2139, norm(output): 0.6719, norm(x): 0.6225, norm(y): 1.0197, norm:1.1518, tok/sec: 99221.90, flops:104.14, batch-reuse:1
@ 6601 train 4.1669 , allloss: 4.1677, dt: 1323.71ms, fracRes: 0.4435, norm(attn): 0.2129, norm(output): 0.6680, norm(x): 0.6218, norm(y): 1.0196, norm:1.2131, tok/sec: 99018.74, flops:103.92, batch-reuse:1
@ 6602 train 4.2150 , allloss: 4.2172, dt: 1311.45ms, fracRes: 0.4426, norm(attn): 0.2129, norm(output): 0.6641, norm(x): 0.6199, norm(y): 1.0197, norm:1.0726, tok/sec: 99944.37, flops:104.89, batch-reuse:1
@ 6603 train 4.1432 , allloss: 4.1440, dt: 1349.11ms, fracRes: 0.4424, norm(attn): 0.2148, norm(output): 0.6719, norm(x): 0.6220, norm(y): 1.0197, norm:1.0459, tok/sec: 97154.29, flops:101.97, batch-reuse:1
@ 6604 train 4.1497 , allloss: 4.1504, dt: 1329.97ms, fracRes: 0.4429, norm(attn): 0.2080, norm(output): 0.6797, norm(x): 0.6270, norm(y): 1.0196, norm:1.1036, tok/sec: 98552.85, flops:103.43, batch-reuse:1
@ 6605 train 4.1675 , allloss: 4.1686, dt: 1314.56ms, fracRes: 0.4422, norm(attn): 0.2090, norm(output): 0.6836, norm(x): 0.6237, norm(y): 1.0196, norm:1.0799, tok/sec: 99708.16, flops:104.65, batch-reuse:1
@ 6606 train 4.1524 , allloss: 4.1537, dt: 1317.05ms, fracRes: 0.4414, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6215, norm(y): 1.0195, norm:1.0832, tok/sec: 99519.49, flops:104.45, batch-reuse:1
@ 6607 train 4.0799 , allloss: 4.0822, dt: 1309.46ms, fracRes: 0.4418, norm(attn): 0.2119, norm(output): 0.6797, norm(x): 0.6254, norm(y): 1.0194, norm:1.0629, tok/sec: 100096.01, flops:105.05, batch-reuse:1
@ 6608 train 4.0720 , allloss: 4.0728, dt: 1328.16ms, fracRes: 0.4406, norm(attn): 0.2100, norm(output): 0.6719, norm(x): 0.6207, norm(y): 1.0196, norm:1.1512, tok/sec: 98686.71, flops:103.57, batch-reuse:1
@ 6609 train 4.1166 , allloss: 4.1177, dt: 1273.51ms, fracRes: 0.4428, norm(attn): 0.2080, norm(output): 0.6758, norm(x): 0.6223, norm(y): 1.0196, norm:1.1133, tok/sec: 102922.08, flops:108.02, batch-reuse:1
@ 6610 train 4.0395 , allloss: 4.0399, dt: 1296.85ms, fracRes: 0.4440, norm(attn): 0.2129, norm(output): 0.6758, norm(x): 0.6248, norm(y): 1.0195, norm:1.2630, tok/sec: 101069.81, flops:106.07, batch-reuse:1
@ 6611 train 4.1981 , allloss: 4.2005, dt: 1308.10ms, fracRes: 0.4443, norm(attn): 0.2100, norm(output): 0.6797, norm(x): 0.6231, norm(y): 1.0195, norm:1.1507, tok/sec: 100200.36, flops:105.16, batch-reuse:1
@ 6612 train 4.1843 , allloss: 4.1869, dt: 1303.67ms, fracRes: 0.4437, norm(attn): 0.2109, norm(output): 0.6797, norm(x): 0.6217, norm(y): 1.0196, norm:1.5430, tok/sec: 100540.46, flops:105.52, batch-reuse:1
@ 6613 train 4.0861 , allloss: 4.0867, dt: 1340.68ms, fracRes: 0.4454, norm(attn): 0.2100, norm(output): 0.6680, norm(x): 0.6212, norm(y): 1.0196, norm:1.2126, tok/sec: 97765.63, flops:102.61, batch-reuse:1
@ 6614 train 4.1592 , allloss: 4.1605, dt: 1317.19ms, fracRes: 0.4452, norm(attn): 0.2129, norm(output): 0.6758, norm(x): 0.6210, norm(y): 1.0196, norm:1.2486, tok/sec: 99508.59, flops:104.44, batch-reuse:1
@ 6615 train 4.1001 , allloss: 4.1042, dt: 1291.10ms, fracRes: 0.4442, norm(attn): 0.2148, norm(output): 0.6758, norm(x): 0.6224, norm(y): 1.0197, norm:1.2149, tok/sec: 101519.61, flops:106.55, batch-reuse:1
@ 6616 train 4.0743 , allloss: 4.0748, dt: 1305.41ms, fracRes: 0.4446, norm(attn): 0.2129, norm(output): 0.6797, norm(x): 0.6233, norm(y): 1.0195, norm:1.1999, tok/sec: 100406.56, flops:105.38, batch-reuse:1
@ 6617 train 4.2264 , allloss: 4.2277, dt: 1334.18ms, fracRes: 0.4438, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6231, norm(y): 1.0198, norm:1.1294, tok/sec: 98241.85, flops:103.11, batch-reuse:1
@ 6618 train 4.0916 , allloss: 4.0922, dt: 1344.98ms, fracRes: 0.4434, norm(attn): 0.2109, norm(output): 0.6680, norm(x): 0.6206, norm(y): 1.0196, norm:1.1181, tok/sec: 97452.72, flops:102.28, batch-reuse:1
@ 6619 train 4.0758 , allloss: 4.0767, dt: 1335.04ms, fracRes: 0.4434, norm(attn): 0.2109, norm(output): 0.6719, norm(x): 0.6217, norm(y): 1.0196, norm:1.1277, tok/sec: 98178.52, flops:103.04, batch-reuse:1
@ 6620 train 4.1323 , allloss: 4.1330, dt: 1290.70ms, fracRes: 0.4431, norm(attn): 0.2100, norm(output): 0.6719, norm(x): 0.6224, norm(y): 1.0195, norm:1.1573, tok/sec: 101550.93, flops:106.58, batch-reuse:1
@ 6621 train 4.1257 , allloss: 4.1270, dt: 1275.09ms, fracRes: 0.4430, norm(attn): 0.2109, norm(output): 0.6758, norm(x): 0.6215, norm(y): 1.0196, norm:1.0963, tok/sec: 102794.58, flops:107.88, batch-reuse:1
@ 6622 train 4.1197 , allloss: 4.1202, dt: 1301.97ms, fracRes: 0.4436, norm(attn): 0.2129, norm(output): 0.6758, norm(x): 0.6235, norm(y): 1.0196, norm:1.2358, tok/sec: 100672.22, flops:105.66, batch-reuse:1
@ 6623 train 4.1195 , allloss: 4.1204, dt: 1295.07ms, fracRes: 0.4431, norm(attn): 0.2148, norm(output): 0.6758, norm(x): 0.6206, norm(y): 1.0196, norm:1.0961, tok/sec: 101208.32, flops:106.22, batch-reuse:1
@ 6624 train 4.1878 , allloss: 4.1887, dt: 1316.61ms, fracRes: 0.4432, norm(attn): 0.2129, norm(output): 0.6758, norm(x): 0.6209, norm(y): 1.0196, norm:1.1344, tok/sec: 99552.81, flops:104.48, batch-reuse:1
@ 6625 train 4.0834 , allloss: 4.0842, dt: 1284.94ms, fracRes: 0.4428, norm(attn): 0.2129, norm(output): 0.6719, norm(x): 0.6189, norm(y): 1.0196, norm:1.0413, tok/sec: 102006.11, flops:107.06, batch-reuse:1
@ 6626 train 4.1595 , allloss: 4.1609, dt: 1301.35ms, fracRes: 0.4436, norm(attn): 0.2100, norm(output): 0.6719, norm(x): 0.6220, norm(y): 1.0195, norm:0.9643, tok/sec: 100720.23, flops:105.71, batch-reuse:1
@ 6627 train 4.0646 , allloss: 4.0654, dt: 1303.39ms, fracRes: 0.4437, norm(attn): 0.2119, norm(output): 0.6758, norm(x): 0.6284, norm(y): 1.0196, norm:1.0394, tok/sec: 100562.01, flops:105.54, batch-reuse:1
@ 6628 train 4.0573 , allloss: 4.0577, dt: 1301.14ms, fracRes: 0.4442, norm(attn): 0.2109, norm(output): 0.6797, norm(x): 0.6245, norm(y): 1.0195, norm:1.1693, tok/sec: 100736.09, flops:105.72, batch-reuse:1
@ 6629 train 4.1007 , allloss: 4.1014, dt: 1327.42ms, fracRes: 0.4442, norm(attn): 0.2109, norm(output): 0.6836, norm(x): 0.6245, norm(y): 1.0196, norm:0.9714, tok/sec: 98742.17, flops:103.63, batch-reuse:1
@ 6630 train 4.0981 , allloss: 4.0996, dt: 1328.49ms, fracRes: 0.4443, norm(attn): 0.2109, norm(output): 0.6797, norm(x): 0.6237, norm(y): 1.0196, norm:1.0983, tok/sec: 98662.58, flops:103.55, batch-reuse:1
@ 6631 train 4.1146 , allloss: 4.1151, dt: 1316.45ms, fracRes: 0.4438, norm(attn): 0.2100, norm(output): 0.6797, norm(x): 0.6225, norm(y): 1.0196, norm:1.0871, tok/sec: 99564.66, flops:104.49, batch-reuse:1
@ 6632 train 4.0457 , allloss: 4.0511, dt: 1321.97ms, fracRes: 0.4435, norm(attn): 0.2129, norm(output): 0.6758, norm(x): 0.6231, norm(y): 1.0195, norm:1.0805, tok/sec: 99149.02, flops:104.06, batch-reuse:1
