Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.00015
Experiment name: 17-identity-test-no-1minus-mlpconcat
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config) 
========
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights * x + machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 152,666,112 parameters
num non-decayed parameter tensors: 74, with 84,480 parameters
@ 0 train 10.9663 , allloss: 21.4726, dt: 2840.05ms, fracRes: 0.0063, norm(attn): 0.0337, norm(output): 0.0742, norm(x): 0.0744, norm(y): 0.9993, norm:22.3526, tok/sec: 46151.22, flops:48.44, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3828, 0.3477, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.2656, 0.2393, 0.2256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2314, 0.2178, 0.1904, 0.1748, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.1426, 0.1270, 0.1348, 0.2256, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.0845, 0.1592, 0.1514, 0.2656, 0.1030, 0.1094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.1050, 0.1689, 0.1475, 0.0908, 0.0505, 0.1396, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.1455, 0.1099, 0.0801, 0.1123, 0.1338, 0.1216, 0.1025, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.1016, 0.1777, 0.1157, 0.0957, 0.0771, 0.0884, 0.1094, 0.0752, 0.0605, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0981, 0.0830, 0.1172, 0.0723, 0.0845, 0.0820, 0.0918, 0.0747, 0.0796, 0.0850, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.0613, 0.0820, 0.0693, 0.1201, 0.0430, 0.0903, 0.0640, 0.1494, 0.0430, 0.1011, 0.0918, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0815, 0.0461, 0.0698, 0.0806, 0.0403, 0.0737, 0.1230, 0.0688, 0.0879, 0.0630, 0.1079, 0.0835, 0.0000, 0.0000],
        [0.0679, 0.0684, 0.1050, 0.0344, 0.0688, 0.1025, 0.0835, 0.0688, 0.0513, 0.0574, 0.0708, 0.0776, 0.0679, 0.0762, 0.0000],
        [0.0654, 0.0942, 0.0728, 0.0405, 0.0586, 0.0713, 0.0535, 0.0508, 0.0630, 0.1001, 0.0659, 0.1040, 0.0564, 0.0664, 0.0374]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0060, -0.0225,  0.0188,  ...,  0.0300,  0.0048,  0.0141],
        [-0.0158, -0.0104,  0.0007,  ..., -0.0033, -0.0314,  0.0158],
        [ 0.0013,  0.0036, -0.0189,  ...,  0.0054,  0.0173, -0.0120],
        ...,
        [-0.0039, -0.0057,  0.0224,  ..., -0.0084, -0.0049, -0.0261],
        [-0.0377,  0.0126,  0.0156,  ...,  0.0115, -0.0257, -0.0070],
        [-0.0094,  0.0046, -0.0233,  ..., -0.0429, -0.0014,  0.0103]], device='cuda:0', requires_grad=True)
K: tensor([-0.0518,  0.3809,  1.0391, -1.4062,  0.5508,  0.2852,  0.2217, -0.0227,  0.0259,  0.4414, -0.3184,  0.7305, -0.0344,  0.2139,  0.6719,  0.4258,  0.2217,  0.2041, -0.5703, -0.1318,  0.3105, -0.4199,  0.0991, -0.2949,  0.2090, -0.5469,  0.0859,  0.1128, -0.0044,  0.2090,  0.4434, -0.2617,
         0.3555,  0.2637,  0.6875,  0.4082, -0.5352, -0.2422, -0.7266,  1.0234,  0.1387, -0.3887,  0.1748, -0.3965, -0.1875,  0.3555, -1.1719, -0.7031, -0.6875, -0.7422,  0.3301, -0.7891,  0.2119,  0.1797, -0.2520, -1.0078, -0.5156, -0.4512,  1.4375,  0.0635, -0.2676,  0.1865, -0.2812, -0.2334],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0107,  0.0019, -0.0326,  ...,  0.0193,  0.0165,  0.0107],
        [ 0.0148, -0.0195, -0.0379,  ...,  0.0394, -0.0003,  0.0057],
        [-0.0103,  0.0272,  0.0280,  ...,  0.0370, -0.0268,  0.0078],
        ...,
        [ 0.0012, -0.0006,  0.0297,  ...,  0.0067,  0.0026,  0.0003],
        [ 0.0256,  0.0223, -0.0160,  ...,  0.0099, -0.0050,  0.0111],
        [ 0.0001, -0.0340,  0.0132,  ...,  0.0233,  0.0041,  0.0048]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4805, -0.0762, -0.1934,  0.0786,  1.0391,  0.7344,  0.0095,  0.6406,  0.8828, -0.2461,  0.6836, -0.0703, -0.4473,  0.7812, -0.0483,  0.0474, -0.1113,  0.4707,  0.2021, -0.5312, -0.2275, -0.4746,  0.2119,  0.7695,  0.3320,  0.1289, -0.2734, -0.3594, -0.9609, -0.0613,  0.3086,  0.3887,
        -0.1328, -0.7070, -0.2061,  0.0342,  0.4238, -0.0605,  0.1592, -1.0781, -0.1250,  0.5859,  0.4492, -0.0131, -0.9844,  0.0150,  0.6406, -0.2715, -0.1030,  0.6953, -1.0312,  0.1484,  0.8242, -0.2334,  0.0986,  0.4844, -0.2188,  0.3848, -0.5430, -0.0267, -0.3008,  0.1758,  0.3047,  0.9414],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0977,      0.1357,     -0.0835,     -0.5117,     -0.2617,     -0.0344,      0.1377,     -0.1602,      0.0496,     -0.2412,     -0.4512,      0.6953,      0.2012,      0.5820],
        [     0.0000,     -0.0967,     -0.3516,      0.6602,     -0.1602,     -0.1216,      0.1182,      0.1147,      0.1143,      0.1260,     -0.0547,      0.0806,      0.0771,     -0.0591,     -0.1187],
        [     0.0000,     -0.0225,     -0.1260,     -0.1826,      0.7812,     -0.1357,      0.2598,     -0.1934,     -0.1318,     -0.0282,      0.1611,      0.3418,     -0.0864,     -0.2207,     -0.4160],
        [     0.0000,     -0.0630,     -0.1982,     -0.2832,     -0.2148,     -0.3828,     -0.0825,      0.2432,      0.6797,     -0.3867,      0.0117,      0.0078,     -0.2852,      0.4766,      0.0344],
        [     0.0000,      0.0757,     -0.0415,      0.0181,      0.5391,      0.5938,      0.2354,     -0.4121,      0.1826,     -0.2852,      0.0371,     -0.0820,      0.5742,      0.2598,      0.1543],
        [     0.0000,     -0.4062,      0.2295,      0.1816,      0.7422,     -0.2080,     -0.1455,     -0.0776,     -0.1338,      0.7344,      0.0654,      0.4707,      0.1104,     -0.7305,     -0.1963],
        [     0.0000,     -0.2891,      0.1855,      0.0532,     -0.4316,     -1.0234,     -0.0042,      0.1182,     -0.0201,     -0.1050,     -0.0026,      0.0933,     -0.2002,      0.0605,      0.1011],
        [     0.0000,      0.3496,      0.0703,     -0.2422,      0.0923,      0.2676,      0.1729,      0.0047,     -0.1040,      0.2021,      0.0718,     -0.3438,     -0.2119,     -0.1504,      0.3418],
        [     0.0000,      0.0437,      0.6055,      0.1748,     -0.0166,     -0.2344,     -0.0947,      0.1177,     -0.2559,     -0.4746,     -0.1416,      0.1367,      0.4219,      0.1904,      0.0229],
        [     0.0000,     -0.1670,      0.1768,     -0.3086,     -0.1543,     -0.1797,     -0.0688,     -0.2773,     -0.2139,     -0.1475,      0.2949,     -0.5273,     -0.2227,     -0.1035,     -0.0361],
        [     0.0000,     -0.3184,     -0.0233,     -0.1943,      0.3555,     -0.6680,      0.0708,     -0.2715,      0.5781,     -0.6680,      0.1846,      0.0889,      0.1426,      0.1572,     -0.0037],
        [     0.0000,      0.1011,     -0.4707,     -0.0535,      0.0864,     -0.6055,      0.0002,      0.5156,     -0.0693,      0.1777,     -0.1592,      0.3809,      0.1245,     -0.0344,     -0.3047],
        [     0.0000,      0.0062,      0.4375,     -0.6797,      0.0146,      0.4121,      0.2061,      0.0187,     -0.2812,     -0.1650,      0.0415,      0.1357,     -0.0026,      0.1182,      0.2812],
        [     0.0000,      0.3672,      0.1064,     -0.4785,     -0.1084,      0.0874,     -0.2002,     -0.2539,     -0.0374,      0.4258,      0.0085,      0.4668,     -0.1445,      0.0161,     -0.5586]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4964],
        [0.3516],
        [0.2481],
        [0.1993],
        [0.1569],
        [0.1360],
        [0.1224],
        [0.1077],
        [0.0999],
        [0.0907],
        [0.0799],
        [0.0732],
        [0.0656],
        [0.0660]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4941, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.4434, 0.2930, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.2988, 0.3086, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.1299, 0.1875, 0.2119, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.1592, 0.1953, 0.1963, 0.1406, 0.1904, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1328, 0.1025, 0.1680, 0.2080, 0.1118, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0981, 0.1318, 0.0742, 0.1260, 0.1436, 0.2061, 0.1128, 0.1084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0908, 0.0835, 0.1133, 0.1436, 0.1621, 0.0786, 0.1099, 0.1235, 0.0942, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.1138, 0.0747, 0.1104, 0.1523, 0.0845, 0.1689, 0.0588, 0.0693, 0.0562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0874, 0.0991, 0.1089, 0.0820, 0.0806, 0.0752, 0.0913, 0.0918, 0.0781, 0.0728, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.0393, 0.0442, 0.1445, 0.0947, 0.1504, 0.0771, 0.0679, 0.0718, 0.0537, 0.0635, 0.1250, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.0330, 0.0635, 0.1226, 0.0928, 0.1094, 0.0825, 0.1025, 0.0525, 0.0571, 0.0491, 0.1289, 0.0398, 0.0000, 0.0000],
        [0.0679, 0.0518, 0.0352, 0.0811, 0.0781, 0.0583, 0.0625, 0.0630, 0.1094, 0.1016, 0.0537, 0.0732, 0.0569, 0.1074, 0.0000],
        [0.0615, 0.0613, 0.0579, 0.0835, 0.0879, 0.0574, 0.0688, 0.0557, 0.0408, 0.0396, 0.0840, 0.0684, 0.1279, 0.0603, 0.0449]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0188, -0.0266,  0.0227,  ..., -0.0061, -0.0145,  0.0191],
        [ 0.0135, -0.0075,  0.0069,  ...,  0.0333,  0.0061, -0.0160],
        [ 0.0099, -0.0562, -0.0033,  ...,  0.0165, -0.0328,  0.0054],
        ...,
        [-0.0201,  0.0081, -0.0352,  ...,  0.0040, -0.0172, -0.0120],
        [ 0.0165,  0.0029, -0.0052,  ...,  0.0466,  0.0154,  0.0061],
        [ 0.0182, -0.0502, -0.0193,  ...,  0.0170,  0.0189,  0.0090]], device='cuda:0', requires_grad=True)
K: tensor([-0.1963,  0.3086, -0.1895, -0.4082,  0.3086,  0.0442, -0.1924, -0.6953,  0.4062,  0.5273, -0.3574, -0.1533, -0.0148,  0.0811,  0.4453, -0.2139,  1.1641, -0.3750,  0.7070, -0.3223, -0.9258, -1.1641,  0.7852,  0.9883, -0.3691,  0.2656, -0.8789, -0.1108,  1.2891,  0.6992, -1.1172, -0.8477,
        -0.4219, -0.6133,  0.1768,  0.2188, -0.1406, -0.3574,  0.1021,  0.7305,  0.0874,  0.5156,  0.0542, -0.0281,  0.6523,  0.7891,  0.9883, -0.2021, -1.2266,  0.1562,  0.2002, -2.1406,  0.2061,  0.7344,  0.4336, -0.2070, -0.5938, -0.0275, -0.8320,  0.2266,  0.7773, -0.7969,  0.5430, -0.1748],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0201,  0.0082, -0.0066,  ...,  0.0092, -0.0032, -0.0039],
        [ 0.0065, -0.0139,  0.0033,  ...,  0.0329,  0.0214, -0.0152],
        [-0.0071, -0.0075, -0.0074,  ...,  0.0034, -0.0162,  0.0434],
        ...,
        [-0.0196,  0.0288,  0.0081,  ...,  0.0390,  0.0338, -0.0211],
        [-0.0239,  0.0147, -0.0123,  ...,  0.0119,  0.0085,  0.0383],
        [-0.0086, -0.0117,  0.0146,  ...,  0.0218,  0.0449,  0.0016]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2119, -0.0845,  0.5703, -0.0923, -0.2354, -0.0771, -0.1846,  1.2266, -0.8516,  0.5547, -0.2441, -0.7656, -0.1621,  0.1582, -0.4609, -1.2969, -0.8633,  0.6797,  0.7266,  0.2969,  0.0109, -0.5039,  0.1104, -1.1719, -1.6562, -0.5742, -0.1689,  0.5703,  0.2637,  0.1196,  0.4531,  0.0618,
        -0.2969, -1.1250,  0.1475,  0.0859, -0.2393, -0.0461, -0.2041, -0.5195, -0.0767, -0.2002,  0.2012, -1.2812,  0.2773, -0.2158,  0.0383, -0.4727, -0.3281, -0.6562, -0.6523,  0.2852, -0.1123, -0.7578,  0.7969, -0.5000,  0.2129,  0.6211,  1.1328,  0.4316,  0.0154,  0.2266,  0.2930, -0.6094],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0209,      0.2061,      0.1631,      0.7891,      0.3945,     -0.2656,     -0.0293,      0.2988,      0.0020,      0.1611,      0.3223,     -0.0977,     -0.1348,      0.4453],
        [     0.0000,      0.5234,      0.1128,     -0.1211,      0.2598,     -0.0728,      0.2148,      0.0732,      0.4766,      0.2695,     -0.2217,      0.1377,      0.5820,      0.5195,     -0.3105],
        [     0.0000,      0.4453,      0.4785,      0.0527,     -0.0791,      0.1963,     -0.1260,     -0.1709,     -0.0591,      0.3555,      0.0009,     -0.0771,     -0.9023,      0.1602,      0.0588],
        [     0.0000,     -0.2285,      0.1348,      0.2559,      0.6289,      0.5586,     -0.2500,      0.3945,     -0.1543,     -0.1396,     -0.0124,      0.4492,      0.4258,      0.2773,      0.0986],
        [     0.0000,      0.3047,      0.5078,      0.5117,      0.1807,      0.4824,      0.0244,     -0.3711,      0.0640,      0.4902,      0.5430,      0.2461,      0.0986,      0.3984,      0.6602],
        [     0.0000,      0.0500,     -0.2119,      0.2832,      0.4980,     -0.1260,      0.1709,      0.6055,      0.3965,     -0.3555,      0.0840,      0.1494,      0.5352,      0.3008,     -0.0391],
        [     0.0000,      0.2949,     -0.2773,      0.2500,      0.3770,      0.7422,      0.1396,      0.0977,     -0.1660,      0.5625,      0.8164,      0.2461,      0.2373,     -0.1143,      0.1553],
        [     0.0000,     -0.0850,      0.2197,      0.4570,      0.5781,     -0.1455,      0.1904,      0.3066,      0.0332,     -0.0140,      0.1128,      1.1797,      0.5586,      0.3828,      0.2383],
        [     0.0000,      0.0242,     -0.3984,     -0.0065,      0.3164,     -0.2715,      0.4160,     -0.6328,     -0.4727,     -0.6836,     -0.3984,     -0.2129,     -0.1748,     -0.2490,     -0.2793],
        [     0.0000,      0.1279,      0.2217,     -0.0630,     -0.0815,     -0.1445,      0.0461,      0.0522,     -0.1079,     -0.1787,      0.4219,     -0.0090,     -0.1240,      0.1641,      0.3926],
        [     0.0000,     -0.5312,     -0.4180,      0.7695,      0.3438,      0.8086,      0.1406,      0.0149,      0.0708,     -0.2227,     -0.0574,      0.6250,     -1.0859,      0.4102,      0.2734],
        [     0.0000,     -0.7031,     -0.0439,      0.6133,      0.3359,      0.4961,      0.2158,      0.4336,     -0.2334,     -0.1523,     -0.3047,      0.6641,     -0.5156,      0.5039,     -0.1377],
        [     0.0000,     -0.2715,     -0.6602,      0.1738,      0.1406,     -0.1523,     -0.0830,     -0.0791,      0.4746,      0.4004,     -0.2373,      0.0703,     -0.1807,      0.4551,      0.1982],
        [     0.0000,     -0.0066,     -0.0645,      0.3066,      0.3555,     -0.0708,      0.1108,     -0.1021,     -0.4121,     -0.4434,      0.3125,      0.1016,      0.7305,     -0.0219,     -0.3145]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5153],
        [0.3273],
        [0.2502],
        [0.1852],
        [0.1568],
        [0.1474],
        [0.1129],
        [0.1174],
        [0.0988],
        [0.0870],
        [0.0767],
        [0.0704],
        [0.0713],
        [0.0625]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4180, 0.5820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3086, 0.4199, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.1904, 0.2793, 0.2617, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2295, 0.2520, 0.1533, 0.1895, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.1992, 0.1602, 0.2031, 0.1138, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1133, 0.1187, 0.1338, 0.1445, 0.1797, 0.1738, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.1094, 0.1128, 0.1279, 0.0845, 0.0874, 0.1934, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.1445, 0.1074, 0.1133, 0.0977, 0.1147, 0.1367, 0.0762, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.1475, 0.1099, 0.0835, 0.1104, 0.1416, 0.0801, 0.0840, 0.0923, 0.0583, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.0791, 0.0737, 0.0889, 0.0967, 0.0835, 0.1475, 0.0928, 0.1021, 0.0615, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.1069, 0.0486, 0.0615, 0.0630, 0.0933, 0.0957, 0.1094, 0.0879, 0.0415, 0.1060, 0.1147, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.0825, 0.0518, 0.0544, 0.0593, 0.1104, 0.0776, 0.0894, 0.0874, 0.0422, 0.0596, 0.1143, 0.0991, 0.0000, 0.0000],
        [0.0645, 0.0747, 0.0747, 0.0796, 0.0505, 0.0684, 0.0703, 0.0679, 0.0640, 0.0840, 0.0796, 0.0742, 0.0815, 0.0659, 0.0000],
        [0.0488, 0.0791, 0.0532, 0.0894, 0.0564, 0.0557, 0.0840, 0.0503, 0.0908, 0.0403, 0.0630, 0.0498, 0.0933, 0.0776, 0.0693]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0186,  0.0236,  0.0123,  ...,  0.0003, -0.0055, -0.0361],
        [ 0.0081, -0.0130,  0.0260,  ...,  0.0113,  0.0148, -0.0418],
        [ 0.0065,  0.0281, -0.0106,  ...,  0.0185,  0.0042, -0.0111],
        ...,
        [-0.0380, -0.0135, -0.0196,  ..., -0.0062,  0.0164, -0.0113],
        [ 0.0056,  0.0093, -0.0068,  ..., -0.0182,  0.0133, -0.0101],
        [-0.0053,  0.0093, -0.0376,  ...,  0.0268,  0.0205, -0.0042]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3047,  0.1934,  0.4824,  0.3438,  0.3750, -0.9180, -0.0908,  0.2314,  0.0488,  0.9141,  0.7188,  0.5625,  0.2246, -1.7188,  1.1406, -0.1328,  0.1104,  0.0601,  0.1758, -0.9102, -0.1279,  0.5156,  0.2383,  0.0483, -0.5977, -0.8477, -0.6719, -0.1855,  0.4629,  0.1328, -0.8711, -0.0050,
        -0.2275, -0.2461,  0.5898, -0.2539,  0.2793, -0.6992, -0.1455, -0.7227,  0.2578,  0.2100, -0.3945, -0.5898, -0.2988,  0.7852,  0.2734, -0.5312,  0.5352, -0.4961,  0.1216, -0.2266, -0.4082,  0.0255, -0.6836, -0.0564,  1.3594, -0.5859, -0.1104,  0.4648,  0.1689, -0.8750, -0.6094, -0.2852],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0077,  0.0171, -0.0039,  ..., -0.0244, -0.0061, -0.0108],
        [-0.0075, -0.0099, -0.0022,  ..., -0.0170,  0.0110, -0.0139],
        [-0.0113, -0.0255,  0.0147,  ..., -0.0214, -0.0033, -0.0426],
        ...,
        [-0.0102, -0.0031, -0.0115,  ..., -0.0228, -0.0112, -0.0261],
        [-0.0096,  0.0104,  0.0042,  ..., -0.0082,  0.0003,  0.0272],
        [ 0.0022, -0.0071,  0.0306,  ...,  0.0190,  0.0511, -0.0162]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.6406, -0.4531,  0.0593, -0.3145, -0.3164, -0.3965, -0.6289, -0.1582,  0.6992,  0.0757, -0.0967,  0.6406, -0.5938,  0.0728, -0.4004,  0.6133,  0.0063, -1.1328, -0.2002, -0.4395, -0.4004, -0.3457, -0.3223, -0.1992, -0.5391, -0.0635, -0.9844,  0.6797, -0.5156,  0.6289, -0.7109,  0.1035,
        -0.3613, -0.5273,  0.5195,  0.7148,  0.0801, -0.6211, -0.6680, -0.1846,  0.2070,  0.7812, -0.3516,  0.1094, -0.2871, -0.1855,  0.4277, -0.8711,  0.8203, -0.0620, -0.4863,  0.1875, -0.8086, -0.3223,  0.1465, -0.8320,  0.1040,  0.5742,  0.5508, -0.7344,  0.7148,  0.6836,  0.7227, -0.6406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3281,  0.4199,  0.4160,  0.2832,  0.0864,  0.0698,  0.1543,  0.7188,  0.2217,  0.1562,  0.3496,  0.4805,  0.5859,  0.6328],
        [ 0.0000,  0.3066, -0.1270,  0.2217, -0.1719, -0.0066,  0.0703,  0.2012,  0.6445,  0.0415,  0.0280,  0.3691,  0.0728, -0.0272,  0.5234],
        [ 0.0000, -0.3418,  0.0420, -0.0237, -0.1514,  0.4492,  0.0728,  0.0791,  0.5039,  0.4258, -0.4941,  0.3613,  0.3145, -0.0079,  0.4141],
        [ 0.0000,  0.0928, -0.4004, -0.1875, -0.2637, -0.0569,  0.2656,  0.3555, -0.0894,  0.1533, -0.2051,  0.3496,  0.0035,  0.0498,  0.0771],
        [ 0.0000,  0.2158, -0.0012,  0.2344, -0.3457,  0.0160,  0.6328,  0.0574, -0.1099, -0.1631,  0.2393,  0.2393, -0.1416, -0.2812,  0.1445],
        [ 0.0000, -0.1855, -0.1357, -0.0177,  0.0618,  0.2754,  0.2451,  0.5352,  0.1299,  0.0393, -0.0801,  0.2324,  0.5234,  0.5625, -0.0127],
        [ 0.0000,  0.0112,  0.0437,  0.1680, -0.2441, -0.2119,  0.5820,  0.4961,  0.3105, -0.4121,  0.0542,  0.3457, -0.0430, -0.1221,  0.2461],
        [ 0.0000,  0.3398,  0.0420,  0.0947, -0.0515,  0.1084,  0.2812, -0.2988,  0.0250,  0.1177,  0.5469, -0.1157,  0.7773, -0.3105,  0.1270],
        [ 0.0000,  0.4707,  0.1768, -0.1001,  0.1826,  0.4336, -0.1406, -0.0918,  0.0019, -0.4570,  0.0339, -0.0214,  0.0415, -0.3574, -0.0972],
        [ 0.0000, -0.1924, -0.2637, -0.0791,  0.0100, -0.1396,  0.4336, -0.0347,  0.0613, -0.4453, -0.2031, -0.1777,  0.6797, -0.0942, -0.3828],
        [ 0.0000,  0.4004, -0.3906, -0.1562, -0.1338,  0.2617,  0.2871,  0.4199,  0.2002, -0.5469,  0.3867,  0.4668,  0.4473, -0.3672,  0.0825],
        [ 0.0000,  0.1455, -0.3223, -0.2734, -0.1855,  0.4316,  0.0845,  0.2227,  0.2012, -0.5312, -0.1826,  0.4688,  0.3281,  0.1069,  0.2891],
        [ 0.0000,  0.1455,  0.1475,  0.2070, -0.2451,  0.0613,  0.0830,  0.0479, -0.0110,  0.2656,  0.2109,  0.1406,  0.2363,  0.0234,  0.1904],
        [ 0.0000,  0.4824,  0.0854,  0.6016,  0.1406,  0.1279,  0.5391,  0.0261,  0.6172, -0.1943,  0.2500,  0.0167,  0.6445,  0.4629,  0.3496]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5101],
        [0.3376],
        [0.2222],
        [0.1944],
        [0.1566],
        [0.1353],
        [0.1192],
        [0.1150],
        [0.0887],
        [0.0863],
        [0.0804],
        [0.0780],
        [0.0713],
        [0.0649]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4707, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3516, 0.3652, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.2139, 0.2471, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.1943, 0.2578, 0.2148, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.1367, 0.1602, 0.1523, 0.1250, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.1748, 0.1138, 0.1226, 0.0928, 0.2539, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1123, 0.1416, 0.1069, 0.0913, 0.1069, 0.1631, 0.1089, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.1260, 0.1309, 0.0693, 0.0757, 0.1309, 0.0938, 0.1953, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0928, 0.1270, 0.1157, 0.0645, 0.1357, 0.1050, 0.1582, 0.0596, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.0815, 0.0923, 0.1035, 0.0684, 0.1299, 0.0918, 0.1250, 0.0591, 0.0581, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0559, 0.0623, 0.1001, 0.0566, 0.0454, 0.0825, 0.0723, 0.1514, 0.0601, 0.0669, 0.1504, 0.0952, 0.0000, 0.0000, 0.0000],
        [0.0625, 0.0723, 0.0928, 0.0679, 0.0535, 0.0889, 0.0737, 0.1060, 0.0586, 0.0664, 0.1084, 0.0664, 0.0835, 0.0000, 0.0000],
        [0.0537, 0.0884, 0.0820, 0.0513, 0.0496, 0.1040, 0.0625, 0.1270, 0.0459, 0.0459, 0.0933, 0.0527, 0.0654, 0.0776, 0.0000],
        [0.0474, 0.0564, 0.0742, 0.0596, 0.0422, 0.0811, 0.0564, 0.1235, 0.0554, 0.0544, 0.0635, 0.0576, 0.0762, 0.1025, 0.0491]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0078, -0.0225,  0.0201,  ...,  0.0271, -0.0078, -0.0051],
        [-0.0213, -0.0010,  0.0021,  ..., -0.0038, -0.0030,  0.0148],
        [ 0.0207,  0.0381,  0.0289,  ..., -0.0150,  0.0196,  0.0356],
        ...,
        [ 0.0018,  0.0313, -0.0253,  ...,  0.0056, -0.0343, -0.0162],
        [ 0.0208, -0.0236,  0.0031,  ...,  0.0169,  0.0014, -0.0252],
        [ 0.0302,  0.0184,  0.0051,  ...,  0.0093,  0.0112,  0.0074]], device='cuda:0', requires_grad=True)
K: tensor([ 1.5078, -0.2930, -0.2002,  0.4980, -0.2852, -0.3691,  0.3184, -0.1040, -0.0522, -0.0967, -0.5859,  0.2393, -0.2773, -0.6133,  0.4727,  0.1182, -0.5508, -0.7148, -0.1943, -0.0322, -0.2295, -0.2441, -0.2012,  0.0977, -0.3711, -0.3359,  0.5508,  0.5273, -0.2305,  0.8828, -0.5195, -0.6719,
        -0.2480,  1.2344,  0.5742,  0.2754,  0.3984, -0.6133,  0.6523,  0.1748,  0.1953, -0.5781, -0.1797,  0.3828, -0.3945,  0.9805, -0.0737, -0.4121,  0.4277,  0.4062, -0.5078, -0.0796,  0.0376,  0.5391,  0.7461, -0.6445,  0.2061,  0.2676, -1.1328,  0.2910, -0.4102,  0.2051,  0.1270,  0.2412],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0010,  0.0188,  0.0131,  ..., -0.0119,  0.0233,  0.0100],
        [ 0.0268,  0.0072, -0.0075,  ...,  0.0021, -0.0255,  0.0153],
        [ 0.0066, -0.0061, -0.0153,  ..., -0.0038, -0.0387,  0.0312],
        ...,
        [-0.0110,  0.0018, -0.0608,  ..., -0.0066,  0.0067,  0.0102],
        [-0.0055,  0.0219,  0.0144,  ..., -0.0288, -0.0195, -0.0114],
        [-0.0358,  0.0204, -0.0424,  ..., -0.0075, -0.0270,  0.0488]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1797, -0.4727,  0.1152, -0.1602,  0.2598, -0.1807,  0.5391,  0.9453,  0.4629, -0.6602, -0.0349, -0.2148,  0.0322,  0.1689, -0.1436, -1.2656, -1.0938, -0.1602,  1.0156, -0.1348, -0.4023,  0.9453,  0.5273, -0.1787,  0.1436,  0.3047, -0.5273, -0.5625, -1.0625,  0.2539, -0.5781,  0.4961,
         1.0156,  0.2988, -0.2324,  0.0133,  0.8945, -0.3203, -0.8320,  0.2852, -0.3770, -0.4824, -0.2148,  0.2559, -1.1562,  0.0019,  0.5977, -0.8672, -0.3770,  0.2256, -0.0771, -0.2832,  0.6719, -0.7930, -0.0270, -0.0510, -0.8242,  0.1855, -0.1240, -0.1074, -0.8828, -0.3945,  0.3535, -1.1328],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1152,      0.4629,      0.2812,     -0.3027,      0.3145,      0.4219,      0.6211,     -0.0334,      0.2139,      0.6992,      0.0454,      0.4004,      0.4258,     -0.0566],
        [     0.0000,      0.0410,     -0.2148,     -0.2949,     -0.3906,     -0.0009,     -0.2305,      0.1680,     -0.5586,     -0.3262,     -0.0547,     -0.3848,     -0.1797,     -0.0378,     -0.5117],
        [     0.0000,     -0.2139,     -0.0703,      0.0398,     -0.4023,      0.4629,      0.0231,      0.2539,     -0.1787,     -0.4082,      0.0854,     -0.3672,     -0.4160,      0.0315,     -0.1206],
        [     0.0000,      0.0669,      0.3496,      0.1641,     -0.1885,      0.6953,      0.0420,      0.5781,     -0.1309,     -0.0222,      0.6914,     -0.1406,      0.1143,      0.2598,     -0.2197],
        [     0.0000,      0.0398,      0.1953,      0.1465,     -0.0483,      0.8086,      0.1855,      0.7031,      0.0781,     -0.1846,      0.3711,      0.2930,      0.0265,      0.3633,     -0.0588],
        [     0.0000,      0.3887,     -0.0408,      0.0339,     -0.2441,      0.7617,      0.0337,      0.8398,      0.0258,      0.2012,      0.5508,      0.7148,      0.2275,      0.9062,     -0.1250],
        [     0.0000,      0.2334,     -0.0527,     -0.2061,     -0.0518,      0.3711,     -0.0332,      0.4043,     -0.4844,     -0.2305,      0.0175,     -0.3711,      0.1641,      0.0332,     -0.4492],
        [     0.0000,      0.2812,      0.3203,     -0.3164,     -0.2285,      0.3184,     -0.0125,      0.7188,     -0.1260,      0.2041,      0.4375,      0.1777,      0.0884,      0.4355,     -0.0928],
        [     0.0000,      0.2158,      0.5273,      0.4355,     -0.1484,      0.5977,      0.3379,      0.7461,     -0.2256,     -0.0991,      0.6211,      0.1826,      0.1582,      0.5938,     -0.1816],
        [     0.0000,     -0.0850,      0.0383,      0.1514,     -0.2656,      0.3750,      0.0302,      0.3398,     -0.4082,     -0.4277,      0.1328,     -0.1973,     -0.0957,      0.1670,     -0.2598],
        [     0.0000,      0.1089,      0.5859,      0.0130,     -0.2061,      0.3906,      0.2598,      1.0000,      0.0742,      0.1816,      0.9883,      0.5352,      0.3945,      0.8281,      0.2188],
        [     0.0000,      0.1445,      0.3965,      0.0801,     -0.1533,      0.3496,      0.1680,      0.5312,     -0.0649,      0.0591,      0.5508,      0.0625,      0.2871,      0.3418,      0.0006],
        [     0.0000,      0.5000,      0.4258,     -0.0457,     -0.0791,      0.6641,      0.1543,      0.8633,     -0.1543,     -0.1533,      0.5547,     -0.0168,      0.1982,      0.3672,     -0.0559],
        [     0.0000,      0.1719,      0.4492,      0.2285,     -0.1167,      0.5352,      0.1738,      0.9609,      0.1562,      0.1396,      0.2930,      0.1953,      0.4746,      0.7695,      0.0337]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4774],
        [0.3438],
        [0.2643],
        [0.2035],
        [0.1856],
        [0.1456],
        [0.1252],
        [0.1042],
        [0.0966],
        [0.0970],
        [0.0820],
        [0.0748],
        [0.0697],
        [0.0649]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4570, 0.5430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.4434, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.3809, 0.2109, 0.2178, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.3398, 0.1660, 0.1533, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.2520, 0.1270, 0.1514, 0.1396, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.2773, 0.1157, 0.1260, 0.1128, 0.1182, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.1875, 0.0957, 0.1001, 0.0918, 0.1226, 0.1050, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1211, 0.0991, 0.0869, 0.1011, 0.1157, 0.0850, 0.1089, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.1592, 0.0613, 0.0776, 0.0850, 0.0884, 0.0801, 0.0854, 0.1230, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.1299, 0.0840, 0.0776, 0.0957, 0.0850, 0.0835, 0.0908, 0.1230, 0.0811, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.1299, 0.0388, 0.0588, 0.0669, 0.1016, 0.0630, 0.0806, 0.1084, 0.1079, 0.0718, 0.0737, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.1211, 0.0515, 0.0684, 0.0688, 0.0708, 0.0723, 0.0723, 0.0981, 0.0977, 0.0713, 0.0635, 0.0640, 0.0000, 0.0000],
        [0.0664, 0.0776, 0.0718, 0.0540, 0.0654, 0.0630, 0.0593, 0.1104, 0.1016, 0.0635, 0.0742, 0.0649, 0.0603, 0.0679, 0.0000],
        [0.0649, 0.0757, 0.0503, 0.0554, 0.0630, 0.0601, 0.0505, 0.0815, 0.1040, 0.0898, 0.0569, 0.0610, 0.0688, 0.0520, 0.0659]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0424,  0.0180,  0.0042,  ..., -0.0296,  0.0155,  0.0141],
        [-0.0062,  0.0057,  0.0074,  ...,  0.0027, -0.0244,  0.0059],
        [ 0.0126, -0.0129, -0.0283,  ..., -0.0085, -0.0121, -0.0218],
        ...,
        [ 0.0058,  0.0149,  0.0112,  ...,  0.0091, -0.0242, -0.0289],
        [-0.0023, -0.0246,  0.0060,  ..., -0.0158,  0.0093, -0.0120],
        [-0.0254,  0.0035,  0.0242,  ..., -0.0010,  0.0070,  0.0153]], device='cuda:0', requires_grad=True)
K: tensor([-0.3516,  0.3672, -0.2256, -0.6562,  0.6445,  0.1904,  0.1816, -0.8164,  0.2070,  0.3379,  0.0581, -0.1147,  0.1631,  0.9609, -0.0771, -0.0214, -1.1328, -0.1572, -0.1914, -0.2695, -0.1895, -0.4727,  0.0304, -0.6055,  0.3633,  0.0422,  0.4941, -0.7852, -0.7773, -0.9766, -0.0304,  0.3984,
        -0.8281,  0.4043,  0.0776,  0.3066,  0.5156, -0.7812,  0.8711,  0.2988,  0.2100,  0.1216,  1.3672, -1.1172,  0.4180, -0.5703,  0.6992,  0.1621,  0.2773, -0.5430,  0.5469,  0.3066,  0.3125,  0.4375,  0.7070,  0.2676, -0.9336,  0.4277,  0.3809, -1.1797,  0.0669,  0.0776, -0.5273, -0.5391],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0132,  0.0215, -0.0110,  ...,  0.0050, -0.0188,  0.0261],
        [-0.0147,  0.0081,  0.0079,  ...,  0.0090, -0.0169, -0.0006],
        [ 0.0134,  0.0064,  0.0053,  ..., -0.0166,  0.0164, -0.0239],
        ...,
        [ 0.0083, -0.0139, -0.0080,  ..., -0.0052, -0.0135,  0.0188],
        [ 0.0012, -0.0208,  0.0196,  ...,  0.0137, -0.0110,  0.0341],
        [-0.0076, -0.0188, -0.0263,  ...,  0.0301,  0.0096,  0.0062]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2090,  0.0698,  0.2188, -0.3281, -0.0483, -0.2188, -1.4844,  0.2812,  0.4062,  0.4824,  0.5039, -0.1230, -0.0131, -0.8672,  0.1377,  0.3203,  0.1147, -0.1660, -0.6719, -0.4434,  0.3164,  0.0576, -0.0031, -0.6016, -0.3945, -0.2734, -0.3145, -0.0645, -0.2949,  1.1484, -0.9492, -0.5352,
        -0.3281, -0.5469,  0.1338, -0.0261,  0.5625, -0.6992, -0.3359, -0.2637, -0.5000,  1.0703,  0.3574,  0.2695,  0.1206,  0.6289,  0.6602, -0.8125,  0.2852,  0.2158,  0.2754,  0.1299,  0.3984,  0.7109,  0.5156, -0.1729, -0.5664,  0.0620, -0.1592,  0.4668, -0.1611,  1.1406, -1.2812,  0.6250],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1729, -0.2695, -0.3848, -0.2314,  0.1113, -0.5781, -0.2480, -0.1167, -0.0962, -0.1094, -0.0510, -0.7070,  0.0610, -0.3691],
        [ 0.0000,  0.3730, -0.2041, -0.3477, -0.2090, -0.0028, -0.4844, -0.1445, -0.0325, -0.1348, -0.2070, -0.3281, -0.1895, -0.2207, -0.2812],
        [ 0.0000,  0.6992,  0.1064,  0.1357,  0.1484,  0.1543,  0.0693,  0.2559,  0.2119,  0.1826,  0.0859, -0.4316, -0.3066,  0.1367, -0.1348],
        [ 0.0000,  0.6680, -0.0479, -0.1250, -0.0435, -0.0106,  0.1348, -0.1855, -0.0669,  0.2949,  0.2041, -0.2637, -0.1797,  0.0923, -0.1943],
        [ 0.0000,  0.4121, -0.2793, -0.1030, -0.1797, -0.0339, -0.0535,  0.0459,  0.1582,  0.3359, -0.0173, -0.4004, -0.3164,  0.0879, -0.2656],
        [ 0.0000,  0.7070, -0.1650, -0.0801, -0.1904, -0.1436, -0.2002,  0.0157,  0.2275,  0.0801,  0.3457, -0.2148, -0.0713, -0.1357,  0.0049],
        [ 0.0000,  0.3574, -0.3105, -0.2676, -0.3535, -0.0674, -0.2197,  0.2383,  0.0664,  0.1562, -0.3008, -0.4023, -0.0679, -0.2471, -0.0549],
        [ 0.0000, -0.0393, -0.2373, -0.3711, -0.2188, -0.0859, -0.3945, -0.1455,  0.2188,  0.0486, -0.3516, -0.1924, -0.2695, -0.2490, -0.1709],
        [ 0.0000,  0.5391, -0.4141, -0.1816, -0.0859, -0.0513, -0.1504, -0.0850,  0.2812,  0.4648,  0.1504, -0.0947, -0.1572, -0.2832,  0.0265],
        [ 0.0000,  0.4355,  0.0031, -0.0786,  0.1328,  0.0125, -0.0067,  0.0776,  0.3828, -0.0339, -0.2559, -0.4609,  0.0728, -0.2812, -0.2441],
        [ 0.0000,  0.2656, -0.9414, -0.5234, -0.3945,  0.0251, -0.4531, -0.2100,  0.0864,  0.0859, -0.3262, -0.2988, -0.2969, -0.2832, -0.3867],
        [ 0.0000,  0.4141, -0.4414, -0.1611, -0.1514, -0.1260, -0.1035, -0.1030,  0.2002,  0.1973, -0.1201, -0.2344, -0.2256, -0.0530, -0.2471],
        [ 0.0000,  0.1533,  0.0757, -0.2109, -0.0167, -0.0559, -0.1147,  0.5039,  0.4199, -0.0479,  0.1084, -0.0220, -0.1006,  0.0162, -0.1367],
        [ 0.0000,  0.1533, -0.2559, -0.1592, -0.0337, -0.0771, -0.2520,  0.2256,  0.4727,  0.3242, -0.1309, -0.0620,  0.0615, -0.2236,  0.0109]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4867],
        [0.3206],
        [0.2450],
        [0.1986],
        [0.1693],
        [0.1352],
        [0.1291],
        [0.1048],
        [0.1019],
        [0.0861],
        [0.0809],
        [0.0761],
        [0.0710],
        [0.0657]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(blank:0.0002parency:0.0002pects:0.0002 DUP:0.0002 ribs:0.0002acid:0.0002 exploded:0.0002 Panthers:0.0002)
 Panthers
------
		(parency:0.0002pects:0.0002 DUP:0.0002 ribs:0.0002acid:0.0002 exploded:0.0002 Panthers:0.0002 stream:0.0002)
 stream lasted weave Deg distraught lastedmaster� goto LowryProtect relational Maltensibly MIL
@ 1 train 10.9594 , allloss: 21.4586, dt: 1856.03ms, fracRes: 0.0063, norm(attn): 0.0337, norm(output): 0.0742, norm(x): 0.0744, norm(y): 0.9993, norm:23.0984, tok/sec: 70619.62, flops:74.12, batch-reuse:1
@ 2 train 10.9457 , allloss: 21.4314, dt: 1223.60ms, fracRes: 0.0063, norm(attn): 0.0337, norm(output): 0.0742, norm(x): 0.0743, norm(y): 0.9993, norm:22.7130, tok/sec: 107120.27, flops:112.44, batch-reuse:1
@ 3 train 10.9166 , allloss: 21.3846, dt: 1210.37ms, fracRes: 0.0063, norm(attn): 0.0339, norm(output): 0.0742, norm(x): 0.0743, norm(y): 0.9993, norm:22.5383, tok/sec: 108291.15, flops:113.67, batch-reuse:1
@ 4 train 10.8897 , allloss: 21.3335, dt: 1227.63ms, fracRes: 0.0063, norm(attn): 0.0339, norm(output): 0.0742, norm(x): 0.0744, norm(y): 0.9993, norm:22.2109, tok/sec: 106768.33, flops:112.07, batch-reuse:1
@ 5 train 10.8519 , allloss: 21.2657, dt: 1235.18ms, fracRes: 0.0063, norm(attn): 0.0347, norm(output): 0.0742, norm(x): 0.0744, norm(y): 0.9993, norm:21.7625, tok/sec: 106116.00, flops:111.38, batch-reuse:1
@ 6 train 10.7981 , allloss: 21.1778, dt: 1222.60ms, fracRes: 0.0063, norm(attn): 0.0347, norm(output): 0.0742, norm(x): 0.0745, norm(y): 0.9993, norm:22.6534, tok/sec: 107207.19, flops:112.53, batch-reuse:1
@ 7 train 10.7412 , allloss: 21.0841, dt: 1228.40ms, fracRes: 0.0063, norm(attn): 0.0349, norm(output): 0.0742, norm(x): 0.0747, norm(y): 0.9993, norm:22.4392, tok/sec: 106701.15, flops:112.00, batch-reuse:1
@ 8 train 10.6936 , allloss: 20.9968, dt: 1214.15ms, fracRes: 0.0063, norm(attn): 0.0352, norm(output): 0.0752, norm(x): 0.0750, norm(y): 0.9993, norm:21.9859, tok/sec: 107953.65, flops:113.31, batch-reuse:1
@ 9 train 10.6217 , allloss: 20.8831, dt: 1234.73ms, fracRes: 0.0063, norm(attn): 0.0356, norm(output): 0.0752, norm(x): 0.0753, norm(y): 0.9993, norm:22.4667, tok/sec: 106153.97, flops:111.42, batch-reuse:1
@ 10 train 10.5611 , allloss: 20.7767, dt: 1237.83ms, fracRes: 0.0063, norm(attn): 0.0366, norm(output): 0.0757, norm(x): 0.0757, norm(y): 0.9993, norm:22.4103, tok/sec: 105888.48, flops:111.14, batch-reuse:1
@ 11 train 10.5250 , allloss: 20.6908, dt: 1230.92ms, fracRes: 0.0063, norm(attn): 0.0376, norm(output): 0.0771, norm(x): 0.0763, norm(y): 0.9993, norm:22.1905, tok/sec: 106482.62, flops:111.77, batch-reuse:1
@ 12 train 10.4483 , allloss: 20.5574, dt: 1217.81ms, fracRes: 0.0064, norm(attn): 0.0386, norm(output): 0.0771, norm(x): 0.0769, norm(y): 0.9994, norm:22.6590, tok/sec: 107629.26, flops:112.97, batch-reuse:1
@ 13 train 10.3933 , allloss: 20.4355, dt: 1232.34ms, fracRes: 0.0064, norm(attn): 0.0391, norm(output): 0.0776, norm(x): 0.0776, norm(y): 0.9994, norm:22.8770, tok/sec: 106359.86, flops:111.64, batch-reuse:1
@ 14 train 10.3392 , allloss: 20.3042, dt: 1232.50ms, fracRes: 0.0064, norm(attn): 0.0403, norm(output): 0.0781, norm(x): 0.0783, norm(y): 0.9994, norm:23.1999, tok/sec: 106346.81, flops:111.63, batch-reuse:1
@ 15 train 10.2806 , allloss: 20.1520, dt: 1227.97ms, fracRes: 0.0064, norm(attn): 0.0415, norm(output): 0.0786, norm(x): 0.0791, norm(y): 0.9994, norm:23.5101, tok/sec: 106739.00, flops:112.04, batch-reuse:1
@ 16 train 10.2448 , allloss: 20.0068, dt: 1223.05ms, fracRes: 0.0064, norm(attn): 0.0425, norm(output): 0.0791, norm(x): 0.0799, norm(y): 0.9994, norm:23.5148, tok/sec: 107168.09, flops:112.49, batch-reuse:1
@ 17 train 10.1878 , allloss: 19.8245, dt: 1226.30ms, fracRes: 0.0064, norm(attn): 0.0432, norm(output): 0.0811, norm(x): 0.0808, norm(y): 0.9994, norm:23.7568, tok/sec: 106884.52, flops:112.19, batch-reuse:1
@ 18 train 10.1549 , allloss: 19.6490, dt: 1220.71ms, fracRes: 0.0065, norm(attn): 0.0432, norm(output): 0.0811, norm(x): 0.0816, norm(y): 0.9995, norm:23.7647, tok/sec: 107373.24, flops:112.70, batch-reuse:1
@ 19 train 10.0872 , allloss: 19.4241, dt: 1238.88ms, fracRes: 0.0065, norm(attn): 0.0442, norm(output): 0.0830, norm(x): 0.0825, norm(y): 0.9995, norm:24.0432, tok/sec: 105798.61, flops:111.05, batch-reuse:1
@ 20 train 10.0549 , allloss: 19.2178, dt: 1237.31ms, fracRes: 0.0065, norm(attn): 0.0457, norm(output): 0.0835, norm(x): 0.0833, norm(y): 0.9995, norm:24.0512, tok/sec: 105933.43, flops:111.19, batch-reuse:1
@ 21 train 9.9970 , allloss: 18.9707, dt: 1224.30ms, fracRes: 0.0065, norm(attn): 0.0464, norm(output): 0.0850, norm(x): 0.0842, norm(y): 0.9995, norm:24.0978, tok/sec: 107058.99, flops:112.37, batch-reuse:1
@ 22 train 9.9735 , allloss: 18.7467, dt: 1233.64ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.0854, norm(x): 0.0850, norm(y): 0.9995, norm:23.8814, tok/sec: 106247.75, flops:111.52, batch-reuse:1
@ 23 train 9.9649 , allloss: 18.5306, dt: 1236.82ms, fracRes: 0.0065, norm(attn): 0.0469, norm(output): 0.0859, norm(x): 0.0859, norm(y): 0.9995, norm:23.8898, tok/sec: 105975.37, flops:111.24, batch-reuse:1
@ 24 train 9.9511 , allloss: 18.2964, dt: 1241.30ms, fracRes: 0.0065, norm(attn): 0.0471, norm(output): 0.0864, norm(x): 0.0867, norm(y): 0.9995, norm:23.7633, tok/sec: 105592.19, flops:110.83, batch-reuse:1
@ 25 train 9.8503 , allloss: 17.9639, dt: 1231.59ms, fracRes: 0.0064, norm(attn): 0.0476, norm(output): 0.0864, norm(x): 0.0875, norm(y): 0.9996, norm:23.6132, tok/sec: 106425.23, flops:111.71, batch-reuse:1
@ 26 train 9.8742 , allloss: 17.7519, dt: 1235.23ms, fracRes: 0.0064, norm(attn): 0.0479, norm(output): 0.0884, norm(x): 0.0882, norm(y): 0.9996, norm:23.2409, tok/sec: 106111.07, flops:111.38, batch-reuse:1
@ 27 train 9.8500 , allloss: 17.4833, dt: 1258.76ms, fracRes: 0.0064, norm(attn): 0.0481, norm(output): 0.0884, norm(x): 0.0890, norm(y): 0.9996, norm:22.9071, tok/sec: 104127.95, flops:109.30, batch-reuse:1
@ 28 train 9.8220 , allloss: 17.2031, dt: 1248.10ms, fracRes: 0.0064, norm(attn): 0.0483, norm(output): 0.0884, norm(x): 0.0897, norm(y): 0.9996, norm:22.5655, tok/sec: 105017.42, flops:110.23, batch-reuse:1
@ 29 train 9.8034 , allloss: 16.9267, dt: 1227.74ms, fracRes: 0.0064, norm(attn): 0.0496, norm(output): 0.0913, norm(x): 0.0904, norm(y): 0.9996, norm:22.1258, tok/sec: 106758.71, flops:112.06, batch-reuse:1
@ 30 train 9.7569 , allloss: 16.6154, dt: 1259.89ms, fracRes: 0.0064, norm(attn): 0.0498, norm(output): 0.0913, norm(x): 0.0911, norm(y): 0.9996, norm:21.7113, tok/sec: 104034.75, flops:109.20, batch-reuse:1
@ 31 train 9.7673 , allloss: 16.3577, dt: 1254.95ms, fracRes: 0.0064, norm(attn): 0.0498, norm(output): 0.0928, norm(x): 0.0917, norm(y): 0.9996, norm:21.2788, tok/sec: 104443.92, flops:109.63, batch-reuse:1
@ 32 train 9.7232 , allloss: 16.0451, dt: 1259.18ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 0.0928, norm(x): 0.0923, norm(y): 0.9996, norm:20.7237, tok/sec: 104093.37, flops:109.26, batch-reuse:1
@ 33 train 9.6783 , allloss: 15.7250, dt: 1254.59ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 0.0933, norm(x): 0.0929, norm(y): 0.9997, norm:20.2561, tok/sec: 104474.27, flops:109.66, batch-reuse:1
@ 34 train 9.6921 , allloss: 15.4689, dt: 1239.78ms, fracRes: 0.0064, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0935, norm(y): 0.9997, norm:19.5980, tok/sec: 105721.82, flops:110.97, batch-reuse:1
@ 35 train 9.6800 , allloss: 15.1874, dt: 1256.84ms, fracRes: 0.0064, norm(attn): 0.0508, norm(output): 0.0942, norm(x): 0.0940, norm(y): 0.9997, norm:19.2331, tok/sec: 104286.59, flops:109.46, batch-reuse:1
@ 36 train 9.6760 , allloss: 14.9212, dt: 1280.70ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0945, norm(y): 0.9997, norm:18.5723, tok/sec: 102344.40, flops:107.42, batch-reuse:1
@ 37 train 9.6566 , allloss: 14.6476, dt: 1278.70ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0949, norm(y): 0.9997, norm:17.7567, tok/sec: 102504.46, flops:107.59, batch-reuse:1
@ 38 train 9.6512 , allloss: 14.3888, dt: 1282.82ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0947, norm(x): 0.0952, norm(y): 0.9997, norm:17.3150, tok/sec: 102175.24, flops:107.25, batch-reuse:1
@ 39 train 9.6448 , allloss: 14.1440, dt: 1284.16ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0947, norm(x): 0.0955, norm(y): 0.9997, norm:16.4453, tok/sec: 102068.59, flops:107.13, batch-reuse:1
@ 40 train 9.6030 , allloss: 13.8690, dt: 1257.36ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0957, norm(x): 0.0958, norm(y): 0.9997, norm:15.8655, tok/sec: 104243.64, flops:109.42, batch-reuse:1
@ 41 train 9.5919 , allloss: 13.6325, dt: 1275.15ms, fracRes: 0.0064, norm(attn): 0.0513, norm(output): 0.0957, norm(x): 0.0960, norm(y): 0.9997, norm:15.1787, tok/sec: 102789.64, flops:107.89, batch-reuse:1
@ 42 train 9.5920 , allloss: 13.4149, dt: 1267.27ms, fracRes: 0.0064, norm(attn): 0.0513, norm(output): 0.0957, norm(x): 0.0961, norm(y): 0.9997, norm:14.4440, tok/sec: 103428.76, flops:108.56, batch-reuse:1
@ 43 train 9.6006 , allloss: 13.2159, dt: 1261.56ms, fracRes: 0.0064, norm(attn): 0.0518, norm(output): 0.0947, norm(x): 0.0963, norm(y): 0.9997, norm:13.6814, tok/sec: 103896.35, flops:109.05, batch-reuse:1
@ 44 train 9.6188 , allloss: 13.0435, dt: 1282.34ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0947, norm(x): 0.0965, norm(y): 0.9997, norm:13.0629, tok/sec: 102212.83, flops:107.29, batch-reuse:1
@ 45 train 9.5913 , allloss: 12.8481, dt: 1269.29ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0957, norm(x): 0.0966, norm(y): 0.9997, norm:12.4209, tok/sec: 103263.97, flops:108.39, batch-reuse:1
@ 46 train 9.5527 , allloss: 12.6395, dt: 1240.69ms, fracRes: 0.0063, norm(attn): 0.0515, norm(output): 0.0962, norm(x): 0.0966, norm(y): 0.9997, norm:11.7156, tok/sec: 105644.50, flops:110.89, batch-reuse:1
@ 47 train 9.5373 , allloss: 12.4543, dt: 1265.07ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0966, norm(y): 0.9997, norm:11.0745, tok/sec: 103608.87, flops:108.75, batch-reuse:1
@ 48 train 9.5341 , allloss: 12.3057, dt: 1251.03ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0966, norm(y): 0.9997, norm:10.4286, tok/sec: 104771.39, flops:109.97, batch-reuse:1
@ 49 train 9.5375 , allloss: 12.1559, dt: 1246.00ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0965, norm(y): 0.9997, norm:9.8164, tok/sec: 105193.98, flops:110.41, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3828, 0.3477, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.2656, 0.2383, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2324, 0.2178, 0.1895, 0.1729, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.1426, 0.1260, 0.1338, 0.2266, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.0845, 0.1582, 0.1523, 0.2656, 0.1030, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.1050, 0.1689, 0.1475, 0.0913, 0.0505, 0.1396, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.1455, 0.1089, 0.0811, 0.1123, 0.1338, 0.1216, 0.1030, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.1016, 0.1787, 0.1152, 0.0957, 0.0767, 0.0884, 0.1094, 0.0762, 0.0610, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.0835, 0.1172, 0.0723, 0.0840, 0.0820, 0.0918, 0.0747, 0.0796, 0.0850, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.0613, 0.0820, 0.0693, 0.1201, 0.0432, 0.0903, 0.0645, 0.1494, 0.0430, 0.1011, 0.0913, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0815, 0.0461, 0.0698, 0.0806, 0.0400, 0.0737, 0.1235, 0.0688, 0.0879, 0.0630, 0.1079, 0.0840, 0.0000, 0.0000],
        [0.0679, 0.0684, 0.1045, 0.0347, 0.0688, 0.1021, 0.0830, 0.0688, 0.0513, 0.0579, 0.0708, 0.0781, 0.0679, 0.0762, 0.0000],
        [0.0649, 0.0938, 0.0723, 0.0403, 0.0583, 0.0708, 0.0532, 0.0505, 0.0630, 0.1011, 0.0659, 0.1040, 0.0566, 0.0669, 0.0376]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0062, -0.0227,  0.0186,  ...,  0.0302,  0.0046,  0.0143],
        [-0.0158, -0.0104,  0.0008,  ..., -0.0034, -0.0313,  0.0157],
        [ 0.0015,  0.0037, -0.0187,  ...,  0.0053,  0.0175, -0.0122],
        ...,
        [-0.0037, -0.0056,  0.0226,  ..., -0.0086, -0.0047, -0.0263],
        [-0.0376,  0.0127,  0.0158,  ...,  0.0113, -0.0255, -0.0071],
        [-0.0096,  0.0044, -0.0235,  ..., -0.0427, -0.0015,  0.0105]], device='cuda:0', requires_grad=True)
K: tensor([-0.0505,  0.3887,  1.0391, -1.4062,  0.5508,  0.2812,  0.2168, -0.0238,  0.0308,  0.4355, -0.3164,  0.7344, -0.0366,  0.2109,  0.6680,  0.4199,  0.2158,  0.2119, -0.5664, -0.1348,  0.3184, -0.4297,  0.0947, -0.2852,  0.1982, -0.5547,  0.0884,  0.1172, -0.0080,  0.2061,  0.4473, -0.2578,
         0.3535,  0.2656,  0.6836,  0.4043, -0.5391, -0.2344, -0.7227,  1.0234,  0.1475, -0.3867,  0.1689, -0.4023, -0.1943,  0.3613, -1.1641, -0.7031, -0.6875, -0.7344,  0.3203, -0.7930,  0.2070,  0.1758, -0.2480, -1.0078, -0.5234, -0.4453,  1.4375,  0.0713, -0.2656,  0.1904, -0.2754, -0.2275],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0105,      0.0021,     -0.0324,  ...,      0.0191,      0.0167,      0.0105],
        [     0.0146,     -0.0196,     -0.0380,  ...,      0.0396,     -0.0005,      0.0059],
        [    -0.0104,      0.0272,      0.0278,  ...,      0.0372,     -0.0269,      0.0079],
        ...,
        [     0.0014,     -0.0004,      0.0298,  ...,      0.0065,      0.0028,      0.0002],
        [     0.0254,      0.0221,     -0.0162,  ...,      0.0101,     -0.0052,      0.0113],
        [    -0.0000,     -0.0341,      0.0130,  ...,      0.0235,      0.0039,      0.0049]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4766, -0.0806, -0.1992,  0.0811,  1.0391,  0.7344,  0.0096,  0.6445,  0.8828, -0.2480,  0.6758, -0.0708, -0.4492,  0.7773, -0.0447,  0.0452, -0.1084,  0.4766,  0.1963, -0.5312, -0.2266, -0.4746,  0.2158,  0.7773,  0.3320,  0.1216, -0.2715, -0.3594, -0.9609, -0.0635,  0.3047,  0.3887,
        -0.1348, -0.7109, -0.2129,  0.0425,  0.4199, -0.0574,  0.1611, -1.0703, -0.1162,  0.5820,  0.4551, -0.0106, -0.9883,  0.0090,  0.6445, -0.2793, -0.1021,  0.6953, -1.0312,  0.1504,  0.8320, -0.2246,  0.0991,  0.4844, -0.2236,  0.3887, -0.5391, -0.0298, -0.2988,  0.1777,  0.3047,  0.9453],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0967,  0.1348, -0.0781, -0.5039, -0.2617, -0.0294,  0.1426, -0.1719,  0.0420, -0.2490, -0.4531,  0.6953,  0.1836,  0.5820],
        [ 0.0000, -0.0977, -0.3496,  0.6602, -0.1572, -0.1221,  0.1206,  0.1167,  0.1143,  0.1235, -0.0571,  0.0801,  0.0776, -0.0640, -0.1211],
        [ 0.0000, -0.0226, -0.1328, -0.1924,  0.7773, -0.1357,  0.2617, -0.1924, -0.1406, -0.0276,  0.1621,  0.3398, -0.0967, -0.2266, -0.4102],
        [ 0.0000, -0.0630, -0.2002, -0.2930, -0.2148, -0.3828, -0.0801,  0.2373,  0.6836, -0.3828,  0.0156,  0.0049, -0.2910,  0.4863,  0.0449],
        [ 0.0000,  0.0786, -0.0483,  0.0147,  0.5391,  0.5898,  0.2373, -0.4102,  0.1768, -0.2832,  0.0344, -0.0791,  0.5703,  0.2559,  0.1582],
        [ 0.0000, -0.4082,  0.2227,  0.1836,  0.7383, -0.2100, -0.1465, -0.0737, -0.1396,  0.7344,  0.0630,  0.4707,  0.1089, -0.7344, -0.1943],
        [ 0.0000, -0.2910,  0.1885,  0.0518, -0.4297, -1.0156, -0.0047,  0.1143, -0.0170, -0.1079,  0.0035,  0.0918, -0.2012,  0.0669,  0.1016],
        [ 0.0000,  0.3496,  0.0635, -0.2305,  0.0957,  0.2695,  0.1738,  0.0057, -0.1060,  0.2051,  0.0703, -0.3418, -0.2148, -0.1543,  0.3418],
        [ 0.0000,  0.0422,  0.6055,  0.1670, -0.0193, -0.2363, -0.0977,  0.1172, -0.2490, -0.4668, -0.1426,  0.1436,  0.4238,  0.2021,  0.0289],
        [ 0.0000, -0.1660,  0.1729, -0.3066, -0.1572, -0.1807, -0.0713, -0.2754, -0.2139, -0.1455,  0.2910, -0.5195, -0.2227, -0.0981, -0.0339],
        [ 0.0000, -0.3145, -0.0236, -0.1895,  0.3574, -0.6680,  0.0718, -0.2676,  0.5781, -0.6719,  0.1855,  0.0854,  0.1416,  0.1543, -0.0060],
        [ 0.0000,  0.0977, -0.4707, -0.0583,  0.0879, -0.6094,  0.0012,  0.5156, -0.0713,  0.1738, -0.1592,  0.3809,  0.1270, -0.0332, -0.3027],
        [ 0.0000,  0.0063,  0.4336, -0.6680,  0.0165,  0.4082,  0.2031,  0.0189, -0.2773, -0.1572,  0.0408,  0.1416, -0.0012,  0.1147,  0.2754],
        [ 0.0000,  0.3652,  0.1040, -0.4805, -0.1099,  0.0859, -0.2031, -0.2559, -0.0325,  0.4395,  0.0119,  0.4688, -0.1426,  0.0259, -0.5508]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4964],
        [0.3516],
        [0.2485],
        [0.1998],
        [0.1570],
        [0.1364],
        [0.1222],
        [0.1076],
        [0.0998],
        [0.0905],
        [0.0799],
        [0.0732],
        [0.0656],
        [0.0659]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.4219, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.2793, 0.2930, 0.2109, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1416, 0.1943, 0.2012, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.1592, 0.1855, 0.1875, 0.1611, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1182, 0.1338, 0.1113, 0.1582, 0.2148, 0.1216, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0874, 0.1348, 0.0854, 0.1260, 0.1572, 0.1904, 0.1138, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0923, 0.1133, 0.1348, 0.1670, 0.0894, 0.1064, 0.1128, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.1089, 0.0806, 0.1084, 0.1641, 0.0908, 0.1426, 0.0654, 0.0703, 0.0540, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.0967, 0.1094, 0.0884, 0.0977, 0.0830, 0.0859, 0.0884, 0.0791, 0.0674, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0493, 0.0527, 0.1299, 0.1113, 0.1387, 0.0771, 0.0698, 0.0718, 0.0513, 0.0630, 0.1123, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0415, 0.0674, 0.1128, 0.1074, 0.1064, 0.0796, 0.0933, 0.0549, 0.0520, 0.0522, 0.1123, 0.0515, 0.0000, 0.0000],
        [0.0708, 0.0579, 0.0430, 0.0806, 0.0918, 0.0659, 0.0630, 0.0615, 0.0903, 0.0781, 0.0544, 0.0723, 0.0669, 0.1045, 0.0000],
        [0.0542, 0.0630, 0.0593, 0.0781, 0.0928, 0.0613, 0.0674, 0.0557, 0.0447, 0.0403, 0.0732, 0.0674, 0.1167, 0.0684, 0.0569]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0186, -0.0268,  0.0229,  ..., -0.0059, -0.0143,  0.0191],
        [ 0.0133, -0.0076,  0.0071,  ...,  0.0335,  0.0063, -0.0161],
        [ 0.0097, -0.0564, -0.0031,  ...,  0.0167, -0.0326,  0.0053],
        ...,
        [-0.0200,  0.0082, -0.0353,  ...,  0.0039, -0.0173, -0.0122],
        [ 0.0163,  0.0027, -0.0050,  ...,  0.0468,  0.0156,  0.0060],
        [ 0.0181, -0.0503, -0.0192,  ...,  0.0171,  0.0191,  0.0091]], device='cuda:0', requires_grad=True)
K: tensor([-0.0245,  0.1230, -0.0057,  0.0084,  0.3340,  0.3184, -0.0679, -0.2285,  0.4492,  0.7617, -0.2910, -0.0422,  0.0244,  0.2695,  0.3262,  0.0535,  0.9648, -0.7461,  0.7344, -0.3281, -0.9219, -0.9883,  1.0078,  0.6602, -0.4941,  0.1709, -0.8477, -0.2383,  1.1406,  0.4492, -1.0391, -0.6562,
        -0.5508, -0.6875,  0.2461,  0.1709,  0.0432, -0.0486,  0.3262,  0.5234, -0.1157,  0.6680,  0.0381, -0.2461,  0.4219,  0.7188,  0.9102, -0.3184, -1.0859,  0.2070,  0.0222, -2.0156,  0.3828,  0.5977,  0.6406, -0.1807, -0.9805, -0.0211, -0.7617,  0.0728,  0.8086, -0.8398,  0.4902,  0.0190],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0203,  0.0083, -0.0068,  ...,  0.0090, -0.0034, -0.0040],
        [ 0.0063, -0.0141,  0.0035,  ...,  0.0331,  0.0216, -0.0153],
        [-0.0069, -0.0073, -0.0076,  ...,  0.0032, -0.0163,  0.0434],
        ...,
        [-0.0194,  0.0290,  0.0079,  ...,  0.0388,  0.0336, -0.0210],
        [-0.0241,  0.0145, -0.0122,  ...,  0.0120,  0.0086,  0.0382],
        [-0.0088, -0.0119,  0.0148,  ...,  0.0220,  0.0451,  0.0014]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2119,  0.1631,  0.5977,  0.1543, -0.1436, -0.1592, -0.0129,  1.2344, -0.9062,  0.5938, -0.3730, -0.6406, -0.2520,  0.2500, -0.4883, -1.1641, -0.7773,  0.8164,  0.7891,  0.3770, -0.2197, -0.4473,  0.1396, -1.0234, -1.6562, -0.3984, -0.2871,  0.4180,  0.4512,  0.5312,  0.3496, -0.0854,
        -0.0588, -1.3047,  0.0376,  0.3398, -0.0957, -0.1021, -0.2461, -0.2676, -0.0474, -0.2207,  0.4082, -0.7891,  0.3340, -0.1543, -0.0554, -0.6875, -0.1963, -0.7930, -0.8438,  0.0796,  0.1426, -0.7031,  0.7188, -0.6211,  0.5234,  0.5391,  1.0078,  0.4062,  0.1040,  0.0142,  0.5391, -0.2754],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0952,  0.2266,  0.1836,  0.8125,  0.4062, -0.1816,  0.0231,  0.2275, -0.0510,  0.1748,  0.3047,  0.0986,  0.0771,  0.5547],
        [ 0.0000,  0.4316,  0.1050, -0.0674,  0.3477,  0.0072,  0.1445,  0.0425,  0.2969,  0.0889, -0.2070,  0.0977,  0.5273,  0.4746, -0.0679],
        [ 0.0000,  0.2539,  0.3047, -0.0275, -0.0141,  0.1240, -0.2178, -0.2539, -0.1689,  0.0659, -0.1396, -0.1367, -0.7539,  0.0850,  0.0645],
        [ 0.0000, -0.1348,  0.1816,  0.2178,  0.6172,  0.4883, -0.1973,  0.3125, -0.1099, -0.1807, -0.0111,  0.3711,  0.4297,  0.3379,  0.2354],
        [ 0.0000,  0.2871,  0.4395,  0.4492,  0.2988,  0.4453,  0.0371, -0.2656,  0.0508,  0.2949,  0.3965,  0.2236,  0.1934,  0.4180,  0.6719],
        [ 0.0000,  0.1250, -0.0618,  0.2891,  0.5977,  0.0260,  0.1846,  0.5195,  0.3535, -0.2988,  0.1045,  0.1904,  0.5938,  0.4277,  0.2207],
        [ 0.0000,  0.4297, -0.0244,  0.3613,  0.5898,  0.7773,  0.2617,  0.1885,  0.0160,  0.4785,  0.6953,  0.3301,  0.4395,  0.2041,  0.4219],
        [ 0.0000,  0.0114,  0.2158,  0.3926,  0.6055, -0.0186,  0.1553,  0.2129,  0.0154, -0.0981,  0.0337,  0.8945,  0.5352,  0.4219,  0.3574],
        [ 0.0000, -0.0571, -0.3594, -0.0596,  0.3516, -0.2363,  0.2139, -0.5664, -0.4922, -0.7578, -0.4688, -0.2295, -0.1211, -0.1748, -0.1299],
        [ 0.0000,  0.0693,  0.1943, -0.0183,  0.0776, -0.0806, -0.0471, -0.0190, -0.1318, -0.2930,  0.2363, -0.0228, -0.0327,  0.2344,  0.4062],
        [ 0.0000, -0.3887, -0.3184,  0.5820,  0.4277,  0.6445,  0.0625, -0.0403, -0.0125, -0.3477, -0.1416,  0.4355, -0.7305,  0.3555,  0.3223],
        [ 0.0000, -0.5039, -0.0192,  0.4961,  0.4473,  0.4355,  0.1475,  0.3047, -0.2246, -0.2793, -0.2715,  0.4902, -0.2891,  0.4590,  0.0732],
        [ 0.0000, -0.1992, -0.4961,  0.1338,  0.2617, -0.0718, -0.1172, -0.1367,  0.2451,  0.1001, -0.2578,  0.0209, -0.0532,  0.3906,  0.2988],
        [ 0.0000,  0.1504,  0.0894,  0.3691,  0.5391,  0.1250,  0.2197,  0.0254, -0.1943, -0.2969,  0.3047,  0.2168,  0.7695,  0.2344,  0.0498]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5068],
        [0.3136],
        [0.2384],
        [0.1844],
        [0.1544],
        [0.1417],
        [0.1098],
        [0.1164],
        [0.0960],
        [0.0847],
        [0.0767],
        [0.0681],
        [0.0706],
        [0.0614]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.5469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.3516, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.2012, 0.2988, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2139, 0.2334, 0.1914, 0.1797, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.1758, 0.1797, 0.1729, 0.1328, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.1167, 0.1367, 0.1289, 0.1348, 0.1709, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1235, 0.1099, 0.1270, 0.1123, 0.0977, 0.1089, 0.1738, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.1260, 0.1245, 0.1011, 0.0889, 0.1196, 0.1318, 0.0986, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.1235, 0.1152, 0.0820, 0.1035, 0.1250, 0.0933, 0.0898, 0.0918, 0.0669, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.0811, 0.0859, 0.0874, 0.0952, 0.0908, 0.1245, 0.0942, 0.0889, 0.0698, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0972, 0.0669, 0.0664, 0.0679, 0.0908, 0.1094, 0.0981, 0.0884, 0.0527, 0.0913, 0.1006, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.0767, 0.0708, 0.0583, 0.0659, 0.0962, 0.0874, 0.0815, 0.0713, 0.0520, 0.0544, 0.1021, 0.1016, 0.0000, 0.0000],
        [0.0654, 0.0718, 0.0791, 0.0669, 0.0508, 0.0762, 0.0762, 0.0732, 0.0645, 0.0767, 0.0708, 0.0718, 0.0840, 0.0728, 0.0000],
        [0.0493, 0.0679, 0.0659, 0.0757, 0.0596, 0.0649, 0.0889, 0.0605, 0.0708, 0.0471, 0.0620, 0.0623, 0.0889, 0.0693, 0.0664]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0188,  0.0238,  0.0125,  ...,  0.0005, -0.0053, -0.0363],
        [ 0.0083, -0.0131,  0.0258,  ...,  0.0112,  0.0146, -0.0416],
        [ 0.0063,  0.0283, -0.0104,  ...,  0.0187,  0.0044, -0.0113],
        ...,
        [-0.0382, -0.0133, -0.0194,  ..., -0.0060,  0.0165, -0.0115],
        [ 0.0055,  0.0094, -0.0067,  ..., -0.0182,  0.0134, -0.0102],
        [-0.0051,  0.0091, -0.0378,  ...,  0.0266,  0.0203, -0.0040]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4102,  0.1680,  0.2266,  0.4473, -0.1338, -0.7383, -0.2988,  0.8359, -0.0132,  1.1094,  0.1865,  0.8594,  0.1826, -1.1797,  1.2188, -0.2930,  0.2715, -0.2559, -0.0214, -0.6250, -0.2236,  0.1836,  0.4453,  0.2344, -0.2871, -0.9258, -1.2734,  0.0894,  0.2773,  0.3340, -0.9062,  0.4062,
        -0.4785, -0.5000,  0.3926, -0.6836,  0.0522, -0.2129, -0.5547, -0.6719,  0.1621,  0.5078, -0.6602, -0.4355, -0.0165,  0.3320,  0.3203, -0.0310,  0.5742, -0.0698,  0.3594, -0.0811, -0.3906,  0.1582, -0.9180,  0.1904,  0.6914, -0.2891, -0.1836,  0.4688,  0.1079, -1.6172, -0.4766, -0.3398],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0074,  0.0169, -0.0041,  ..., -0.0245, -0.0063, -0.0106],
        [-0.0073, -0.0101, -0.0024,  ..., -0.0171,  0.0109, -0.0138],
        [-0.0111, -0.0257,  0.0145,  ..., -0.0215, -0.0034, -0.0424],
        ...,
        [-0.0104, -0.0030, -0.0113,  ..., -0.0226, -0.0110, -0.0262],
        [-0.0094,  0.0102,  0.0040,  ..., -0.0084,  0.0001,  0.0274],
        [ 0.0023, -0.0072,  0.0306,  ...,  0.0189,  0.0511, -0.0161]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8594, -0.4688,  0.2910, -0.2656, -0.1934, -0.7656, -0.6523,  0.5703,  0.6055, -0.0388, -0.3633,  0.4160, -0.7812, -0.3008, -0.5977,  1.3438, -0.0114, -0.8789,  0.1191, -0.4023, -0.4414, -0.3418, -0.5703, -0.1904, -0.6914, -0.7227, -0.3887,  0.5430, -0.3887,  1.1719, -0.6953,  0.1426,
        -0.0884, -0.7852,  0.4941,  0.3828, -0.2148, -0.9531, -0.1338, -0.5547,  0.0227,  0.5352, -0.5117,  0.7578,  0.0481, -0.2148,  0.1865, -0.9453,  0.4902,  0.1187, -0.9023,  0.6133, -0.4082, -0.3184, -0.0957, -0.9609, -0.0564,  1.0391,  0.5898, -0.7500,  0.8672,  0.7734,  0.5781,  0.1030],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1943,  0.4102,  0.2031,  0.1436,  0.1641,  0.1021,  0.1738,  0.3652,  0.0315,  0.0884,  0.2148,  0.5000,  0.3438,  0.2578],
        [ 0.0000,  0.0554, -0.0540, -0.0199, -0.2168, -0.0486,  0.0845,  0.0767,  0.2578, -0.1846,  0.0082,  0.1895,  0.1177, -0.0253,  0.1226],
        [ 0.0000, -0.1855,  0.2129,  0.0698, -0.0991,  0.3301,  0.1553,  0.1216,  0.3164,  0.2910, -0.2500,  0.3848,  0.2988,  0.0762,  0.3008],
        [ 0.0000,  0.0864, -0.1118, -0.1748, -0.1680,  0.0244,  0.2402,  0.1523, -0.0703,  0.1099, -0.2520,  0.2373,  0.1206,  0.1055,  0.0491],
        [ 0.0000,  0.0645,  0.0869,  0.0474, -0.2207,  0.0466,  0.4707,  0.0559,  0.0064, -0.1436,  0.1079,  0.2285, -0.0284,  0.0097,  0.1250],
        [ 0.0000, -0.1011,  0.0554, -0.0044,  0.0396,  0.2773,  0.3477,  0.3359,  0.0311,  0.0479, -0.1426,  0.2637,  0.4727,  0.3281,  0.0151],
        [ 0.0000, -0.1172,  0.0250, -0.0933, -0.2363, -0.1250,  0.3438,  0.1738, -0.0124, -0.3711, -0.1006,  0.1855, -0.0020, -0.0864, -0.0042],
        [ 0.0000,  0.1777,  0.1611, -0.0479, -0.1738,  0.1230,  0.2217, -0.0723, -0.0210, -0.0981,  0.1904, -0.0486,  0.5039, -0.0811,  0.0232],
        [ 0.0000,  0.1260,  0.0574, -0.2852, -0.0498,  0.1357, -0.1582, -0.1943, -0.1689, -0.4883, -0.1299, -0.2051,  0.0239, -0.2256, -0.2324],
        [ 0.0000, -0.2344, -0.1777, -0.1611, -0.0752, -0.1221,  0.1924, -0.0850, -0.1475, -0.3887, -0.2656, -0.1016,  0.3887, -0.1299, -0.3457],
        [ 0.0000,  0.3223, -0.0535, -0.0552, -0.0356,  0.2559,  0.4395,  0.3340,  0.2256, -0.2891,  0.2598,  0.3594,  0.5273,  0.0498,  0.1118],
        [ 0.0000, -0.0693, -0.1494, -0.3418, -0.2227,  0.1582,  0.0605, -0.0060, -0.1387, -0.4570, -0.4121,  0.2197,  0.2139, -0.0830,  0.0225],
        [ 0.0000,  0.0967,  0.1895,  0.0258, -0.2490,  0.1514,  0.1533,  0.1113, -0.0099,  0.1582,  0.0840,  0.0952,  0.2490,  0.1099,  0.0972],
        [ 0.0000,  0.3203,  0.2910,  0.4258,  0.1865,  0.2773,  0.5898,  0.2061,  0.3594, -0.0476,  0.2275,  0.2334,  0.5898,  0.3418,  0.2949]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5063],
        [0.3280],
        [0.2267],
        [0.1937],
        [0.1617],
        [0.1307],
        [0.1201],
        [0.1188],
        [0.0931],
        [0.0874],
        [0.0795],
        [0.0809],
        [0.0754],
        [0.0666]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4160, 0.5820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.3730, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2109, 0.2754, 0.2578, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.2139, 0.2051, 0.2051, 0.2090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.1777, 0.1729, 0.1719, 0.1748, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.1543, 0.1475, 0.1445, 0.1484, 0.1436, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.1318, 0.1270, 0.1270, 0.1289, 0.1260, 0.1328, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.1182, 0.1138, 0.1133, 0.1147, 0.1123, 0.1182, 0.1118, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.1064, 0.1021, 0.1016, 0.1035, 0.1006, 0.1064, 0.1006, 0.0986, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0986, 0.0928, 0.0928, 0.0938, 0.0908, 0.0967, 0.0908, 0.0884, 0.0908, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.0894, 0.0854, 0.0850, 0.0859, 0.0840, 0.0889, 0.0835, 0.0820, 0.0835, 0.0825, 0.0830, 0.0000, 0.0000, 0.0000],
        [0.0605, 0.0820, 0.0786, 0.0786, 0.0801, 0.0781, 0.0815, 0.0771, 0.0757, 0.0776, 0.0762, 0.0771, 0.0767, 0.0000, 0.0000],
        [0.0554, 0.0762, 0.0728, 0.0732, 0.0742, 0.0723, 0.0762, 0.0718, 0.0703, 0.0718, 0.0703, 0.0713, 0.0713, 0.0732, 0.0000],
        [0.0508, 0.0708, 0.0684, 0.0684, 0.0693, 0.0679, 0.0713, 0.0669, 0.0659, 0.0674, 0.0659, 0.0674, 0.0664, 0.0684, 0.0649]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0077, -0.0224,  0.0199,  ...,  0.0273, -0.0080, -0.0053],
        [-0.0213, -0.0010,  0.0019,  ..., -0.0037, -0.0031,  0.0147],
        [ 0.0206,  0.0380,  0.0291,  ..., -0.0152,  0.0198,  0.0358],
        ...,
        [ 0.0017,  0.0313, -0.0251,  ...,  0.0055, -0.0342, -0.0160],
        [ 0.0209, -0.0235,  0.0029,  ...,  0.0171,  0.0012, -0.0254],
        [ 0.0302,  0.0184,  0.0053,  ...,  0.0091,  0.0113,  0.0076]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1865,  0.2871,  0.3887,  0.8359,  0.0118,  0.4375,  0.5625,  0.7930,  0.6328, -0.4160,  0.3770,  0.4121, -0.7969, -0.4316, -0.0786,  0.1650,  0.4473, -0.1533,  0.1216, -0.5156,  0.1992, -0.1904,  0.1543, -0.5938,  1.6719,  0.2637, -0.4707,  1.3125,  0.0233,  0.0530, -0.1621,  0.4785,
        -0.1309,  0.7109,  0.5430,  0.2334, -0.7344,  0.5234, -0.5039, -0.3125, -0.3906, -0.6328, -0.2715, -0.0845, -0.9727,  0.1709, -0.4766, -0.6055, -0.1592, -0.0547,  0.0825, -0.3145,  0.7266,  0.1631,  0.2100, -0.0393,  0.0850, -1.0781, -0.3340, -0.3984, -0.4453, -0.1729,  0.0559, -1.2344],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0009,  0.0187,  0.0133,  ..., -0.0121,  0.0235,  0.0102],
        [ 0.0266,  0.0071, -0.0074,  ...,  0.0020, -0.0254,  0.0154],
        [ 0.0066, -0.0061, -0.0152,  ..., -0.0040, -0.0386,  0.0314],
        ...,
        [-0.0109,  0.0020, -0.0610,  ..., -0.0064,  0.0065,  0.0100],
        [-0.0055,  0.0220,  0.0142,  ..., -0.0287, -0.0197, -0.0116],
        [-0.0359,  0.0204, -0.0423,  ..., -0.0077, -0.0268,  0.0490]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4277, -0.0796,  0.6172, -0.1797, -0.4648,  0.7148, -1.2344, -0.1221,  0.5977, -0.2520, -0.2227,  0.5977,  0.2402,  0.1426, -0.2852, -0.5391, -0.3164,  0.9180,  1.1484,  0.2812, -0.0168, -0.0981,  0.8086, -0.4043,  0.1816, -0.4414, -0.0850, -0.2617, -0.9062,  0.4355, -0.6172, -0.1094,
        -0.2305, -1.2422,  1.2734, -0.2832, -0.8828, -0.0120, -0.5742, -0.1235,  0.3438, -0.4043, -0.8242,  0.4805,  0.2520, -0.2559, -0.1406, -0.6836, -0.5508, -0.4707,  1.3984, -0.8945, -0.3262, -0.2988, -0.2773, -0.6797, -0.4785, -0.8984,  0.2334, -0.6328,  0.2051,  0.1562,  0.5898,  0.4102],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3359, 0.2373, 0.2217, 0.2031, 0.1514, 0.1973, 0.1670, 0.1562, 0.1318, 0.1436, 0.1064, 0.1377, 0.1729, 0.1387],
        [0.0000, 0.2832, 0.2139, 0.2012, 0.2207, 0.1895, 0.2363, 0.1865, 0.1660, 0.1807, 0.1787, 0.1602, 0.1709, 0.2158, 0.1533],
        [0.0000, 0.2695, 0.2061, 0.1924, 0.2168, 0.1904, 0.2227, 0.1953, 0.1846, 0.1855, 0.1953, 0.1807, 0.1855, 0.2266, 0.1699],
        [0.0000, 0.2520, 0.2100, 0.2100, 0.2305, 0.2109, 0.2578, 0.2148, 0.1943, 0.2158, 0.2119, 0.2051, 0.2051, 0.2432, 0.1865],
        [0.0000, 0.2930, 0.2637, 0.2578, 0.2793, 0.2559, 0.2969, 0.2520, 0.2314, 0.2520, 0.2451, 0.2441, 0.2422, 0.2773, 0.2227],
        [0.0000, 0.3203, 0.2734, 0.2578, 0.2812, 0.2480, 0.2891, 0.2490, 0.2383, 0.2500, 0.2461, 0.2432, 0.2383, 0.2793, 0.2217],
        [0.0000, 0.2539, 0.2178, 0.2168, 0.2363, 0.2090, 0.2637, 0.2041, 0.1846, 0.2109, 0.1924, 0.2012, 0.2012, 0.2305, 0.1738],
        [0.0000, 0.2910, 0.2500, 0.2500, 0.2637, 0.2393, 0.2910, 0.2354, 0.2100, 0.2363, 0.2197, 0.2275, 0.2256, 0.2520, 0.1982],
        [0.0000, 0.2871, 0.2451, 0.2422, 0.2598, 0.2334, 0.2871, 0.2334, 0.2148, 0.2344, 0.2246, 0.2305, 0.2227, 0.2520, 0.2012],
        [0.0000, 0.2793, 0.2168, 0.2178, 0.2285, 0.1973, 0.2598, 0.1934, 0.1709, 0.1973, 0.1797, 0.1895, 0.1855, 0.2100, 0.1533],
        [0.0000, 0.2930, 0.2471, 0.2451, 0.2578, 0.2334, 0.2871, 0.2295, 0.2061, 0.2285, 0.2139, 0.2227, 0.2197, 0.2451, 0.1934],
        [0.0000, 0.3047, 0.2617, 0.2617, 0.2754, 0.2520, 0.2988, 0.2422, 0.2227, 0.2480, 0.2295, 0.2432, 0.2354, 0.2617, 0.2090],
        [0.0000, 0.3164, 0.2734, 0.2754, 0.2891, 0.2617, 0.3145, 0.2559, 0.2344, 0.2578, 0.2393, 0.2520, 0.2500, 0.2754, 0.2207],
        [0.0000, 0.3301, 0.2949, 0.2969, 0.3125, 0.2891, 0.3398, 0.2754, 0.2598, 0.2832, 0.2637, 0.2793, 0.2715, 0.2949, 0.2451]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4854],
        [0.3175],
        [0.2279],
        [0.1830],
        [0.1515],
        [0.1273],
        [0.1146],
        [0.1005],
        [0.0908],
        [0.0828],
        [0.0745],
        [0.0695],
        [0.0639],
        [0.0594]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.5547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.3613, 0.3438, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2363, 0.2676, 0.2539, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.2129, 0.2041, 0.1943, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.1816, 0.1748, 0.1660, 0.1592, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.1621, 0.1504, 0.1436, 0.1367, 0.1299, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.1387, 0.1338, 0.1270, 0.1230, 0.1167, 0.1152, 0.1172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1143, 0.1245, 0.1201, 0.1138, 0.1104, 0.1045, 0.1030, 0.1055, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.1123, 0.1084, 0.1030, 0.0996, 0.0947, 0.0938, 0.0952, 0.0947, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.1001, 0.0977, 0.0938, 0.0908, 0.0869, 0.0854, 0.0874, 0.0869, 0.0869, 0.0874, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0933, 0.0908, 0.0864, 0.0840, 0.0796, 0.0786, 0.0806, 0.0801, 0.0801, 0.0806, 0.0791, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.0869, 0.0835, 0.0796, 0.0776, 0.0737, 0.0728, 0.0742, 0.0737, 0.0737, 0.0747, 0.0732, 0.0747, 0.0000, 0.0000],
        [0.0767, 0.0806, 0.0781, 0.0742, 0.0723, 0.0688, 0.0679, 0.0693, 0.0688, 0.0693, 0.0698, 0.0684, 0.0698, 0.0664, 0.0000],
        [0.0703, 0.0752, 0.0728, 0.0698, 0.0679, 0.0649, 0.0635, 0.0649, 0.0649, 0.0649, 0.0654, 0.0640, 0.0659, 0.0625, 0.0625]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0422,  0.0179,  0.0043,  ..., -0.0298,  0.0155,  0.0142],
        [-0.0063,  0.0058,  0.0073,  ...,  0.0029, -0.0244,  0.0058],
        [ 0.0128, -0.0131, -0.0284,  ..., -0.0086, -0.0122, -0.0219],
        ...,
        [ 0.0060,  0.0148,  0.0110,  ...,  0.0091, -0.0243, -0.0291],
        [-0.0024, -0.0244,  0.0062,  ..., -0.0158,  0.0094, -0.0119],
        [-0.0252,  0.0034,  0.0241,  ..., -0.0011,  0.0069,  0.0154]], device='cuda:0', requires_grad=True)
K: tensor([    -1.1094,      0.2539,     -0.6875,      0.1758,      0.0199,     -0.8008,     -0.3789,     -0.5703,     -0.4609,      0.7617,     -0.1738,     -0.4082,      1.3047,      1.0703,     -0.1416,      0.8164,      0.5430,     -0.7305,     -0.5742,      0.3516,     -0.4062,     -0.9570,
             0.5469,      0.8867,     -0.0815,      0.9648,     -0.6719,     -0.6289,     -0.5547,     -0.3262,     -1.1094,      1.1875,      0.2373,     -0.6250,      0.3477,      0.1118,      0.0178,      0.5117,      0.7383,     -0.6484,     -0.0222,      0.0698,      1.4062,      0.6016,
             0.9961,     -0.0211,      0.5625,     -0.0141,     -0.0515,     -0.4863,      0.0001,      1.0781,      1.0234,      0.4238,      0.2871,      0.1768,     -0.0806,      0.3516,     -0.2734,     -0.9062,      0.5273,      1.3906,     -0.7227,     -0.2256], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0130,  0.0216, -0.0108,  ...,  0.0052, -0.0187,  0.0263],
        [-0.0148,  0.0082,  0.0079,  ...,  0.0091, -0.0168, -0.0007],
        [ 0.0133,  0.0066,  0.0052,  ..., -0.0164,  0.0166, -0.0240],
        ...,
        [ 0.0081, -0.0138, -0.0081,  ..., -0.0051, -0.0135,  0.0187],
        [ 0.0011, -0.0206,  0.0198,  ...,  0.0136, -0.0109,  0.0342],
        [-0.0077, -0.0187, -0.0265,  ...,  0.0302,  0.0095,  0.0061]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0183, -1.0000,  0.2383,  0.2471,  0.0432, -0.2891, -0.3125, -0.2080,  0.0864,  0.2852, -0.0566, -0.7344,  0.2021, -0.3203,  0.4805, -0.5625, -0.0713, -0.2275, -0.0437, -1.0781,  0.2578,  0.0140,  1.3906,  0.2109,  0.6562,  0.0562,  0.1826, -0.0972,  0.8125,  1.3281,  0.6523, -0.4863,
        -1.2344, -0.3867,  0.2969, -0.1797,  0.4961, -0.7070, -0.5352,  0.5469, -0.5703,  0.8516, -0.3652,  0.2578,  0.2256,  0.3008,  0.2812, -0.1006,  0.2656, -0.1699,  0.5547,  0.0474, -0.1260, -0.0457, -0.3945,  0.7148, -0.8789, -1.1172,  0.2207,  0.0957,  1.3516,  0.8789, -0.5391,  0.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2188,  0.1387,  0.1152,  0.0364, -0.0234, -0.0165, -0.0305, -0.0325, -0.0273, -0.0693, -0.0425, -0.0344, -0.0825, -0.0825],
        [ 0.0000,  0.1973,  0.1494,  0.0981,  0.0457, -0.0198, -0.0244, -0.0179, -0.0303, -0.0330, -0.0518, -0.0449, -0.0271, -0.0781, -0.0762],
        [ 0.0000,  0.1250,  0.0742,  0.0223, -0.0371, -0.0942, -0.0889, -0.0933, -0.1074, -0.0972, -0.1187, -0.1162, -0.0957, -0.1514, -0.1455],
        [ 0.0000,  0.0520,  0.0107, -0.0417, -0.0830, -0.1387, -0.1455, -0.1328, -0.1465, -0.1426, -0.1494, -0.1562, -0.1348, -0.1865, -0.1846],
        [ 0.0000,  0.0776,  0.0374, -0.0131, -0.0530, -0.1069, -0.1099, -0.1006, -0.1079, -0.1040, -0.1133, -0.1216, -0.0986, -0.1504, -0.1465],
        [ 0.0000,  0.0825,  0.0100, -0.0388, -0.0879, -0.1387, -0.1357, -0.1377, -0.1455, -0.1367, -0.1416, -0.1484, -0.1270, -0.1846, -0.1797],
        [ 0.0000,  0.0781,  0.0354, -0.0156, -0.0449, -0.0986, -0.1099, -0.0928, -0.0996, -0.0972, -0.0967, -0.1113, -0.0874, -0.1396, -0.1377],
        [ 0.0000,  0.0854,  0.0491, -0.0038, -0.0337, -0.0874, -0.1016, -0.0801, -0.0879, -0.0854, -0.0820, -0.0977, -0.0776, -0.1270, -0.1270],
        [ 0.0000,  0.0850,  0.0530,  0.0034, -0.0327, -0.0825, -0.0913, -0.0776, -0.0840, -0.0796, -0.0767, -0.0894, -0.0684, -0.1201, -0.1211],
        [ 0.0000,  0.0398,  0.0139, -0.0277, -0.0593, -0.1045, -0.1182, -0.0981, -0.1025, -0.1025, -0.0996, -0.1128, -0.0908, -0.1406, -0.1396],
        [ 0.0000,  0.0569,  0.0310, -0.0187, -0.0454, -0.0977, -0.1147, -0.0898, -0.0957, -0.0938, -0.0884, -0.1050, -0.0840, -0.1338, -0.1338],
        [ 0.0000,  0.0601,  0.0208, -0.0298, -0.0537, -0.1055, -0.1211, -0.0991, -0.1040, -0.1021, -0.0947, -0.1128, -0.0894, -0.1406, -0.1396],
        [ 0.0000,  0.0488,  0.0146, -0.0339, -0.0586, -0.1108, -0.1260, -0.1040, -0.1079, -0.1050, -0.0986, -0.1162, -0.0957, -0.1445, -0.1465],
        [ 0.0000,  0.0674,  0.0361, -0.0099, -0.0342, -0.0835, -0.1001, -0.0776, -0.0835, -0.0801, -0.0737, -0.0923, -0.0688, -0.1196, -0.1187]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4476],
        [0.2969],
        [0.2243],
        [0.1796],
        [0.1503],
        [0.1293],
        [0.1133],
        [0.1000],
        [0.0905],
        [0.0822],
        [0.0750],
        [0.0694],
        [0.0641],
        [0.0594]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0096 the:0.0106,:0.0091 the:0.0136 the:0.0116.:0.0099 the:0.0128.:0.0103)
.
------
		( the:0.0106,:0.0091 the:0.0136 the:0.0116.:0.0099 the:0.0128.:0.0103
:0.1318)

 the the the the, the, the the, the, the,
@ 50 train 9.5154 , allloss: 12.0080, dt: 1657.56ms, fracRes: 0.0063, norm(attn): 0.0515, norm(output): 0.0962, norm(x): 0.0965, norm(y): 0.9997, norm:9.3707, tok/sec: 79075.10, flops:83.00, batch-reuse:1
@ 51 train 9.5487 , allloss: 11.9130, dt: 1273.55ms, fracRes: 0.0063, norm(attn): 0.0513, norm(output): 0.0962, norm(x): 0.0965, norm(y): 0.9997, norm:8.8081, tok/sec: 102918.90, flops:108.03, batch-reuse:1
@ 52 train 9.4846 , allloss: 11.7522, dt: 1265.87ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0965, norm(y): 0.9997, norm:8.3325, tok/sec: 103543.15, flops:108.68, batch-reuse:1
@ 53 train 9.5010 , allloss: 11.6782, dt: 1249.14ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0962, norm(x): 0.0962, norm(y): 0.9997, norm:7.7492, tok/sec: 104930.01, flops:110.14, batch-reuse:1
@ 54 train 9.4914 , allloss: 11.5926, dt: 1272.87ms, fracRes: 0.0063, norm(attn): 0.0515, norm(output): 0.0947, norm(x): 0.0957, norm(y): 0.9997, norm:7.4781, tok/sec: 102973.38, flops:108.08, batch-reuse:1
@ 55 train 9.5298 , allloss: 11.5941, dt: 1265.16ms, fracRes: 0.0062, norm(attn): 0.0513, norm(output): 0.0942, norm(x): 0.0952, norm(y): 0.9997, norm:7.0135, tok/sec: 103601.04, flops:108.74, batch-reuse:1
@ 56 train 9.4458 , allloss: 11.4906, dt: 1277.47ms, fracRes: 0.0062, norm(attn): 0.0515, norm(output): 0.0942, norm(x): 0.0946, norm(y): 0.9997, norm:6.9739, tok/sec: 102603.04, flops:107.70, batch-reuse:1
@ 57 train 9.4154 , allloss: 11.4800, dt: 1286.09ms, fracRes: 0.0062, norm(attn): 0.0510, norm(output): 0.0938, norm(x): 0.0938, norm(y): 0.9997, norm:6.5915, tok/sec: 101914.79, flops:106.97, batch-reuse:1
@ 58 train 9.4505 , allloss: 11.5288, dt: 1254.13ms, fracRes: 0.0062, norm(attn): 0.0510, norm(output): 0.0933, norm(x): 0.0933, norm(y): 0.9997, norm:6.2972, tok/sec: 104511.94, flops:109.70, batch-reuse:1
@ 59 train 9.3619 , allloss: 11.4762, dt: 1255.93ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0926, norm(y): 0.9997, norm:6.9536, tok/sec: 104362.85, flops:109.54, batch-reuse:1
@ 60 train 9.3841 , allloss: 11.4403, dt: 1293.44ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0932, norm(y): 0.9997, norm:9.4337, tok/sec: 101335.81, flops:106.37, batch-reuse:1
@ 61 train 9.3801 , allloss: 11.3834, dt: 1249.01ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0936, norm(y): 0.9997, norm:5.9214, tok/sec: 104940.85, flops:110.15, batch-reuse:1
@ 62 train 9.4142 , allloss: 11.3966, dt: 1279.08ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0935, norm(y): 0.9997, norm:8.6704, tok/sec: 102473.53, flops:107.56, batch-reuse:1
@ 63 train 9.3842 , allloss: 11.5446, dt: 1280.67ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0925, norm(y): 0.9997, norm:13.7882, tok/sec: 102346.76, flops:107.43, batch-reuse:1
@ 64 train 9.3678 , allloss: 11.4144, dt: 1268.03ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0930, norm(y): 0.9997, norm:7.4602, tok/sec: 103366.28, flops:108.50, batch-reuse:1
@ 65 train 9.3716 , allloss: 11.3003, dt: 1279.07ms, fracRes: 0.0061, norm(attn): 0.0508, norm(output): 0.0942, norm(x): 0.0944, norm(y): 0.9997, norm:7.3289, tok/sec: 102474.08, flops:107.56, batch-reuse:1
@ 66 train 9.3543 , allloss: 11.2589, dt: 1252.35ms, fracRes: 0.0061, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0953, norm(y): 0.9997, norm:6.0315, tok/sec: 104660.55, flops:109.86, batch-reuse:1
@ 67 train 9.2760 , allloss: 11.2461, dt: 1269.26ms, fracRes: 0.0061, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0952, norm(y): 0.9997, norm:7.8798, tok/sec: 103266.17, flops:108.39, batch-reuse:1
@ 68 train 9.3113 , allloss: 11.3505, dt: 1259.37ms, fracRes: 0.0061, norm(attn): 0.0508, norm(output): 0.0942, norm(x): 0.0943, norm(y): 0.9997, norm:5.8495, tok/sec: 104077.66, flops:109.24, batch-reuse:1
@ 69 train 9.2627 , allloss: 11.5110, dt: 1281.69ms, fracRes: 0.0061, norm(attn): 0.0500, norm(output): 0.0933, norm(x): 0.0924, norm(y): 0.9997, norm:8.2007, tok/sec: 102264.70, flops:107.34, batch-reuse:1
@ 70 train 9.2554 , allloss: 11.6540, dt: 1283.95ms, fracRes: 0.0061, norm(attn): 0.0483, norm(output): 0.0918, norm(x): 0.0916, norm(y): 0.9997, norm:8.1831, tok/sec: 102084.66, flops:107.15, batch-reuse:1
@ 71 train 9.2312 , allloss: 11.5182, dt: 1272.77ms, fracRes: 0.0060, norm(attn): 0.0493, norm(output): 0.0933, norm(x): 0.0929, norm(y): 0.9997, norm:6.6921, tok/sec: 102982.02, flops:108.09, batch-reuse:1
@ 72 train 9.2343 , allloss: 11.3593, dt: 1276.17ms, fracRes: 0.0060, norm(attn): 0.0498, norm(output): 0.0938, norm(x): 0.0944, norm(y): 0.9997, norm:4.7238, tok/sec: 102707.30, flops:107.80, batch-reuse:1
@ 73 train 9.2369 , allloss: 11.3363, dt: 1293.22ms, fracRes: 0.0060, norm(attn): 0.0503, norm(output): 0.0942, norm(x): 0.0949, norm(y): 0.9997, norm:5.4226, tok/sec: 101353.53, flops:106.38, batch-reuse:1
@ 74 train 9.2269 , allloss: 11.3691, dt: 1267.74ms, fracRes: 0.0060, norm(attn): 0.0498, norm(output): 0.0942, norm(x): 0.0947, norm(y): 0.9997, norm:5.8929, tok/sec: 103390.44, flops:108.52, batch-reuse:1
@ 75 train 9.5118 , allloss: 11.6491, dt: 1252.54ms, fracRes: 0.0060, norm(attn): 0.0503, norm(output): 0.0942, norm(x): 0.0947, norm(y): 0.9997, norm:5.6142, tok/sec: 104645.23, flops:109.84, batch-reuse:1
@ 76 train 9.2201 , allloss: 11.6002, dt: 1271.91ms, fracRes: 0.0060, norm(attn): 0.0488, norm(output): 0.0942, norm(x): 0.0940, norm(y): 0.9997, norm:8.5825, tok/sec: 103051.69, flops:108.17, batch-reuse:1
@ 77 train 9.4475 , allloss: 11.8764, dt: 1278.30ms, fracRes: 0.0060, norm(attn): 0.0488, norm(output): 0.0938, norm(x): 0.0936, norm(y): 0.9997, norm:9.5093, tok/sec: 102536.12, flops:107.63, batch-reuse:1
@ 78 train 9.2676 , allloss: 11.8110, dt: 1257.45ms, fracRes: 0.0060, norm(attn): 0.0476, norm(output): 0.0938, norm(x): 0.0930, norm(y): 0.9996, norm:5.7784, tok/sec: 104236.64, flops:109.41, batch-reuse:1
@ 79 train 9.1524 , allloss: 11.8162, dt: 1280.08ms, fracRes: 0.0059, norm(attn): 0.0471, norm(output): 0.0933, norm(x): 0.0932, norm(y): 0.9996, norm:11.1355, tok/sec: 102393.56, flops:107.48, batch-reuse:1
@ 80 train 9.1414 , allloss: 11.6104, dt: 1264.01ms, fracRes: 0.0059, norm(attn): 0.0479, norm(output): 0.0942, norm(x): 0.0954, norm(y): 0.9997, norm:6.5706, tok/sec: 103695.07, flops:108.84, batch-reuse:1
@ 81 train 9.1579 , allloss: 11.4048, dt: 1279.08ms, fracRes: 0.0059, norm(attn): 0.0493, norm(output): 0.0991, norm(x): 0.0979, norm(y): 0.9997, norm:5.8500, tok/sec: 102473.85, flops:107.56, batch-reuse:1
@ 82 train 9.0923 , allloss: 11.3396, dt: 1270.00ms, fracRes: 0.0059, norm(attn): 0.0488, norm(output): 0.0986, norm(x): 0.0983, norm(y): 0.9997, norm:5.8696, tok/sec: 103206.63, flops:108.33, batch-reuse:1
@ 83 train 9.0822 , allloss: 11.4606, dt: 1276.58ms, fracRes: 0.0059, norm(attn): 0.0479, norm(output): 0.0962, norm(x): 0.0971, norm(y): 0.9997, norm:4.2378, tok/sec: 102674.69, flops:107.77, batch-reuse:1
@ 84 train 9.0911 , allloss: 11.6913, dt: 1290.16ms, fracRes: 0.0059, norm(attn): 0.0466, norm(output): 0.0942, norm(x): 0.0953, norm(y): 0.9997, norm:5.7706, tok/sec: 101593.85, flops:106.64, batch-reuse:1
@ 85 train 9.0455 , allloss: 11.6696, dt: 1256.02ms, fracRes: 0.0059, norm(attn): 0.0466, norm(output): 0.0942, norm(x): 0.0955, norm(y): 0.9997, norm:6.0507, tok/sec: 104354.66, flops:109.53, batch-reuse:1
@ 86 train 9.0053 , allloss: 11.4231, dt: 1280.24ms, fracRes: 0.0059, norm(attn): 0.0471, norm(output): 0.0967, norm(x): 0.0976, norm(y): 0.9997, norm:4.2312, tok/sec: 102380.65, flops:107.46, batch-reuse:1
@ 87 train 9.0114 , allloss: 11.3346, dt: 1278.97ms, fracRes: 0.0059, norm(attn): 0.0471, norm(output): 0.0991, norm(x): 0.0987, norm(y): 0.9997, norm:4.7199, tok/sec: 102482.26, flops:107.57, batch-reuse:1
@ 88 train 9.0072 , allloss: 11.3801, dt: 1277.98ms, fracRes: 0.0059, norm(attn): 0.0471, norm(output): 0.0991, norm(x): 0.0983, norm(y): 0.9997, norm:3.9820, tok/sec: 102561.66, flops:107.65, batch-reuse:1
@ 89 train 8.9640 , allloss: 11.4989, dt: 1253.37ms, fracRes: 0.0059, norm(attn): 0.0464, norm(output): 0.0962, norm(x): 0.0968, norm(y): 0.9997, norm:4.9498, tok/sec: 104575.32, flops:109.77, batch-reuse:1
@ 90 train 8.9730 , allloss: 11.4230, dt: 1276.55ms, fracRes: 0.0059, norm(attn): 0.0466, norm(output): 0.0972, norm(x): 0.0971, norm(y): 0.9997, norm:4.6549, tok/sec: 102676.40, flops:107.77, batch-reuse:1
@ 91 train 8.9893 , allloss: 11.3574, dt: 1256.18ms, fracRes: 0.0059, norm(attn): 0.0469, norm(output): 0.0991, norm(x): 0.0985, norm(y): 0.9997, norm:3.6219, tok/sec: 104342.01, flops:109.52, batch-reuse:1
@ 92 train 8.8886 , allloss: 11.1536, dt: 1253.73ms, fracRes: 0.0059, norm(attn): 0.0471, norm(output): 0.1001, norm(x): 0.0996, norm(y): 0.9997, norm:4.3958, tok/sec: 104545.27, flops:109.73, batch-reuse:1
@ 93 train 8.9179 , allloss: 11.1591, dt: 1262.93ms, fracRes: 0.0059, norm(attn): 0.0471, norm(output): 0.1001, norm(x): 0.0995, norm(y): 0.9997, norm:3.7794, tok/sec: 103784.46, flops:108.94, batch-reuse:1
@ 94 train 9.0428 , allloss: 11.2780, dt: 1264.70ms, fracRes: 0.0058, norm(attn): 0.0466, norm(output): 0.0991, norm(x): 0.0987, norm(y): 0.9997, norm:5.3935, tok/sec: 103638.66, flops:108.78, batch-reuse:1
@ 95 train 8.8827 , allloss: 11.1878, dt: 1255.28ms, fracRes: 0.0059, norm(attn): 0.0464, norm(output): 0.0991, norm(x): 0.0983, norm(y): 0.9997, norm:4.1503, tok/sec: 104416.84, flops:109.60, batch-reuse:1
@ 96 train 8.7967 , allloss: 11.0536, dt: 1290.23ms, fracRes: 0.0059, norm(attn): 0.0466, norm(output): 0.0996, norm(x): 0.0990, norm(y): 0.9997, norm:4.0757, tok/sec: 101587.95, flops:106.63, batch-reuse:1
@ 97 train 8.8574 , allloss: 11.0053, dt: 1280.92ms, fracRes: 0.0059, norm(attn): 0.0469, norm(output): 0.1011, norm(x): 0.0998, norm(y): 0.9997, norm:4.1894, tok/sec: 102326.39, flops:107.41, batch-reuse:1
@ 98 train 8.8615 , allloss: 11.0255, dt: 1272.80ms, fracRes: 0.0059, norm(attn): 0.0466, norm(output): 0.1006, norm(x): 0.0993, norm(y): 0.9997, norm:4.9372, tok/sec: 102979.40, flops:108.09, batch-reuse:1
@ 99 train 8.8042 , allloss: 10.9710, dt: 1264.02ms, fracRes: 0.0059, norm(attn): 0.0466, norm(output): 0.1001, norm(x): 0.0995, norm(y): 0.9997, norm:3.3336, tok/sec: 103694.80, flops:108.84, batch-reuse:1
@ 100 train 8.7695 , allloss: 10.9440, dt: 1276.21ms, fracRes: 0.0059, norm(attn): 0.0466, norm(output): 0.1006, norm(x): 0.0996, norm(y): 0.9997, norm:3.7994, tok/sec: 102704.11, flops:107.80, batch-reuse:1
@ 101 train 8.6993 , allloss: 10.8560, dt: 1284.39ms, fracRes: 0.0059, norm(attn): 0.0464, norm(output): 0.1006, norm(x): 0.0996, norm(y): 0.9997, norm:3.7803, tok/sec: 102050.14, flops:107.12, batch-reuse:1
@ 102 train 8.7426 , allloss: 10.8481, dt: 1280.68ms, fracRes: 0.0059, norm(attn): 0.0464, norm(output): 0.1001, norm(x): 0.0998, norm(y): 0.9997, norm:4.6058, tok/sec: 102345.79, flops:107.43, batch-reuse:1
@ 103 train 8.7603 , allloss: 10.7607, dt: 1268.05ms, fracRes: 0.0059, norm(attn): 0.0469, norm(output): 0.1011, norm(x): 0.1010, norm(y): 0.9997, norm:3.5385, tok/sec: 103365.07, flops:108.50, batch-reuse:1
@ 104 train 8.7769 , allloss: 10.7465, dt: 1300.13ms, fracRes: 0.0059, norm(attn): 0.0471, norm(output): 0.1016, norm(x): 0.1015, norm(y): 0.9997, norm:3.9961, tok/sec: 100814.25, flops:105.82, batch-reuse:1
@ 105 train 8.7254 , allloss: 10.7877, dt: 1277.64ms, fracRes: 0.0059, norm(attn): 0.0464, norm(output): 0.1011, norm(x): 0.1002, norm(y): 0.9997, norm:4.1610, tok/sec: 102589.37, flops:107.68, batch-reuse:1
@ 106 train 8.6883 , allloss: 10.7484, dt: 1244.14ms, fracRes: 0.0059, norm(attn): 0.0461, norm(output): 0.1011, norm(x): 0.1001, norm(y): 0.9997, norm:3.5280, tok/sec: 105351.76, flops:110.58, batch-reuse:1
@ 107 train 8.6601 , allloss: 10.5882, dt: 1277.62ms, fracRes: 0.0059, norm(attn): 0.0469, norm(output): 0.1016, norm(x): 0.1017, norm(y): 0.9997, norm:3.4394, tok/sec: 102590.75, flops:107.68, batch-reuse:1
@ 108 train 8.6425 , allloss: 10.5816, dt: 1253.22ms, fracRes: 0.0059, norm(attn): 0.0466, norm(output): 0.1016, norm(x): 0.1018, norm(y): 0.9997, norm:3.4020, tok/sec: 104588.41, flops:109.78, batch-reuse:1
@ 109 train 8.6057 , allloss: 10.6662, dt: 1261.04ms, fracRes: 0.0059, norm(attn): 0.0454, norm(output): 0.1011, norm(x): 0.0999, norm(y): 0.9997, norm:2.9487, tok/sec: 103940.00, flops:109.10, batch-reuse:1
@ 110 train 8.6463 , allloss: 10.7200, dt: 1251.72ms, fracRes: 0.0059, norm(attn): 0.0449, norm(output): 0.1006, norm(x): 0.0997, norm(y): 0.9997, norm:3.5220, tok/sec: 104713.82, flops:109.91, batch-reuse:1
@ 111 train 8.6130 , allloss: 10.5926, dt: 1268.43ms, fracRes: 0.0059, norm(attn): 0.0457, norm(output): 0.1011, norm(x): 0.1013, norm(y): 0.9997, norm:3.6409, tok/sec: 103334.14, flops:108.46, batch-reuse:1
@ 112 train 8.6051 , allloss: 10.5594, dt: 1276.97ms, fracRes: 0.0059, norm(attn): 0.0459, norm(output): 0.1016, norm(x): 0.1015, norm(y): 0.9997, norm:2.7734, tok/sec: 102643.37, flops:107.74, batch-reuse:1
@ 113 train 8.5710 , allloss: 10.6012, dt: 1268.98ms, fracRes: 0.0059, norm(attn): 0.0442, norm(output): 0.1006, norm(x): 0.1003, norm(y): 0.9997, norm:4.7061, tok/sec: 103289.58, flops:108.42, batch-reuse:1
@ 114 train 8.5674 , allloss: 10.5147, dt: 1275.71ms, fracRes: 0.0059, norm(attn): 0.0454, norm(output): 0.1011, norm(x): 0.1015, norm(y): 0.9997, norm:3.1074, tok/sec: 102743.96, flops:107.84, batch-reuse:1
@ 115 train 8.5377 , allloss: 10.4366, dt: 1265.66ms, fracRes: 0.0059, norm(attn): 0.0454, norm(output): 0.1016, norm(x): 0.1021, norm(y): 0.9997, norm:2.7879, tok/sec: 103559.84, flops:108.70, batch-reuse:1
@ 116 train 8.5223 , allloss: 10.4799, dt: 1260.55ms, fracRes: 0.0059, norm(attn): 0.0447, norm(output): 0.1011, norm(x): 0.1012, norm(y): 0.9997, norm:2.9432, tok/sec: 103979.73, flops:109.14, batch-reuse:1
@ 117 train 8.4979 , allloss: 10.4600, dt: 1280.86ms, fracRes: 0.0059, norm(attn): 0.0452, norm(output): 0.1011, norm(x): 0.1013, norm(y): 0.9997, norm:3.1304, tok/sec: 102331.46, flops:107.41, batch-reuse:1
@ 118 train 8.4694 , allloss: 10.3713, dt: 1286.86ms, fracRes: 0.0059, norm(attn): 0.0444, norm(output): 0.1016, norm(x): 0.1018, norm(y): 0.9997, norm:2.4473, tok/sec: 101853.84, flops:106.91, batch-reuse:1
@ 119 train 8.4566 , allloss: 10.3450, dt: 1252.63ms, fracRes: 0.0059, norm(attn): 0.0444, norm(output): 0.1016, norm(x): 0.1017, norm(y): 0.9997, norm:3.3979, tok/sec: 104637.14, flops:109.83, batch-reuse:1
@ 120 train 8.5685 , allloss: 10.3748, dt: 1281.31ms, fracRes: 0.0059, norm(attn): 0.0452, norm(output): 0.1021, norm(x): 0.1027, norm(y): 0.9997, norm:3.3999, tok/sec: 102294.94, flops:107.37, batch-reuse:1
@ 121 train 8.5868 , allloss: 10.4574, dt: 1280.81ms, fracRes: 0.0059, norm(attn): 0.0449, norm(output): 0.1016, norm(x): 0.1015, norm(y): 0.9997, norm:3.4140, tok/sec: 102335.19, flops:107.41, batch-reuse:1
@ 122 train 8.5569 , allloss: 10.4560, dt: 1288.65ms, fracRes: 0.0059, norm(attn): 0.0452, norm(output): 0.1016, norm(x): 0.1015, norm(y): 0.9997, norm:3.4056, tok/sec: 101712.91, flops:106.76, batch-reuse:1
@ 123 train 8.4491 , allloss: 10.3069, dt: 1253.69ms, fracRes: 0.0059, norm(attn): 0.0444, norm(output): 0.1021, norm(x): 0.1021, norm(y): 0.9997, norm:2.9560, tok/sec: 104548.61, flops:109.74, batch-reuse:1
@ 124 train 8.4536 , allloss: 10.2375, dt: 1251.73ms, fracRes: 0.0059, norm(attn): 0.0449, norm(output): 0.1021, norm(x): 0.1031, norm(y): 0.9997, norm:2.5766, tok/sec: 104712.64, flops:109.91, batch-reuse:1
@ 125 train 8.4613 , allloss: 10.2427, dt: 1252.44ms, fracRes: 0.0059, norm(attn): 0.0447, norm(output): 0.1021, norm(x): 0.1032, norm(y): 0.9997, norm:3.4530, tok/sec: 104653.68, flops:109.85, batch-reuse:1
@ 126 train 8.4374 , allloss: 10.2726, dt: 1252.17ms, fracRes: 0.0059, norm(attn): 0.0437, norm(output): 0.1021, norm(x): 0.1021, norm(y): 0.9997, norm:4.0954, tok/sec: 104675.64, flops:109.87, batch-reuse:1
@ 127 train 8.3841 , allloss: 10.1660, dt: 1254.50ms, fracRes: 0.0059, norm(attn): 0.0449, norm(output): 0.1021, norm(x): 0.1035, norm(y): 0.9997, norm:3.0446, tok/sec: 104481.85, flops:109.67, batch-reuse:1
@ 128 train 8.3434 , allloss: 10.1377, dt: 1259.58ms, fracRes: 0.0059, norm(attn): 0.0442, norm(output): 0.1021, norm(x): 0.1033, norm(y): 0.9997, norm:2.6761, tok/sec: 104059.80, flops:109.22, batch-reuse:1
@ 129 train 8.4528 , allloss: 10.2896, dt: 1287.91ms, fracRes: 0.0059, norm(attn): 0.0435, norm(output): 0.1021, norm(x): 0.1023, norm(y): 0.9997, norm:2.7800, tok/sec: 101771.39, flops:106.82, batch-reuse:1
@ 130 train 8.3654 , allloss: 10.1476, dt: 1277.20ms, fracRes: 0.0060, norm(attn): 0.0439, norm(output): 0.1025, norm(x): 0.1033, norm(y): 0.9997, norm:3.6011, tok/sec: 102624.43, flops:107.72, batch-reuse:1
@ 131 train 8.3815 , allloss: 10.1613, dt: 1256.61ms, fracRes: 0.0059, norm(attn): 0.0435, norm(output): 0.1021, norm(x): 0.1030, norm(y): 0.9997, norm:2.7317, tok/sec: 104306.12, flops:109.48, batch-reuse:1
@ 132 train 8.3632 , allloss: 10.1005, dt: 1285.70ms, fracRes: 0.0060, norm(attn): 0.0435, norm(output): 0.1025, norm(x): 0.1036, norm(y): 0.9997, norm:2.4400, tok/sec: 101945.75, flops:107.01, batch-reuse:1
@ 133 train 8.3246 , allloss: 10.0624, dt: 1255.91ms, fracRes: 0.0060, norm(attn): 0.0435, norm(output): 0.1030, norm(x): 0.1034, norm(y): 0.9997, norm:2.7187, tok/sec: 104364.57, flops:109.54, batch-reuse:1
@ 134 train 8.3190 , allloss: 10.0398, dt: 1275.96ms, fracRes: 0.0060, norm(attn): 0.0432, norm(output): 0.1021, norm(x): 0.1031, norm(y): 0.9997, norm:3.9814, tok/sec: 102724.38, flops:107.82, batch-reuse:1
@ 135 train 8.2688 , allloss: 9.9204, dt: 1251.88ms, fracRes: 0.0060, norm(attn): 0.0439, norm(output): 0.1035, norm(x): 0.1047, norm(y): 0.9997, norm:2.9096, tok/sec: 104700.40, flops:109.90, batch-reuse:1
@ 136 train 8.2716 , allloss: 9.9229, dt: 1238.80ms, fracRes: 0.0060, norm(attn): 0.0435, norm(output): 0.1035, norm(x): 0.1042, norm(y): 0.9997, norm:2.2225, tok/sec: 105805.72, flops:111.06, batch-reuse:1
@ 137 train 8.1925 , allloss: 9.8920, dt: 1263.66ms, fracRes: 0.0060, norm(attn): 0.0427, norm(output): 0.1030, norm(x): 0.1032, norm(y): 0.9997, norm:3.3205, tok/sec: 103724.30, flops:108.87, batch-reuse:1
@ 138 train 8.1642 , allloss: 9.7773, dt: 1265.24ms, fracRes: 0.0061, norm(attn): 0.0432, norm(output): 0.1035, norm(x): 0.1045, norm(y): 0.9997, norm:3.7236, tok/sec: 103594.87, flops:108.74, batch-reuse:1
@ 139 train 8.1110 , allloss: 9.7034, dt: 1264.25ms, fracRes: 0.0060, norm(attn): 0.0430, norm(output): 0.1035, norm(x): 0.1043, norm(y): 0.9997, norm:2.9742, tok/sec: 103675.34, flops:108.82, batch-reuse:1
@ 140 train 8.1628 , allloss: 9.8394, dt: 1270.42ms, fracRes: 0.0060, norm(attn): 0.0425, norm(output): 0.1021, norm(x): 0.1033, norm(y): 0.9997, norm:3.9391, tok/sec: 103172.27, flops:108.29, batch-reuse:1
@ 141 train 8.1572 , allloss: 9.8037, dt: 1268.58ms, fracRes: 0.0061, norm(attn): 0.0427, norm(output): 0.1025, norm(x): 0.1037, norm(y): 0.9997, norm:4.4975, tok/sec: 103321.50, flops:108.45, batch-reuse:1
@ 142 train 8.2139 , allloss: 9.7911, dt: 1278.09ms, fracRes: 0.0061, norm(attn): 0.0430, norm(output): 0.1035, norm(x): 0.1048, norm(y): 0.9997, norm:2.5416, tok/sec: 102552.72, flops:107.64, batch-reuse:1
@ 143 train 8.1769 , allloss: 9.7973, dt: 1267.55ms, fracRes: 0.0061, norm(attn): 0.0427, norm(output): 0.1035, norm(x): 0.1037, norm(y): 0.9997, norm:4.8518, tok/sec: 103405.47, flops:108.54, batch-reuse:1
@ 144 train 8.1070 , allloss: 9.6678, dt: 1287.68ms, fracRes: 0.0061, norm(attn): 0.0430, norm(output): 0.1045, norm(x): 0.1049, norm(y): 0.9998, norm:3.1441, tok/sec: 101789.57, flops:106.84, batch-reuse:1
@ 145 train 8.1115 , allloss: 9.6282, dt: 1265.34ms, fracRes: 0.0062, norm(attn): 0.0430, norm(output): 0.1064, norm(x): 0.1062, norm(y): 0.9998, norm:3.0190, tok/sec: 103586.48, flops:108.73, batch-reuse:1
@ 146 train 8.2104 , allloss: 9.7955, dt: 1282.86ms, fracRes: 0.0061, norm(attn): 0.0422, norm(output): 0.1040, norm(x): 0.1048, norm(y): 0.9998, norm:4.0086, tok/sec: 102172.07, flops:107.24, batch-reuse:1
@ 147 train 8.1058 , allloss: 9.6522, dt: 1274.34ms, fracRes: 0.0062, norm(attn): 0.0420, norm(output): 0.1064, norm(x): 0.1057, norm(y): 0.9998, norm:2.6803, tok/sec: 102854.63, flops:107.96, batch-reuse:1
@ 148 train 8.0787 , allloss: 9.5483, dt: 1274.46ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1079, norm(x): 0.1073, norm(y): 0.9998, norm:2.6974, tok/sec: 102845.47, flops:107.95, batch-reuse:1
@ 149 train 7.9890 , allloss: 9.5308, dt: 1289.46ms, fracRes: 0.0062, norm(attn): 0.0410, norm(output): 0.1050, norm(x): 0.1055, norm(y): 0.9998, norm:2.9911, tok/sec: 101648.46, flops:106.69, batch-reuse:1
@ 150 train 8.1370 , allloss: 9.7060, dt: 1272.63ms, fracRes: 0.0063, norm(attn): 0.0410, norm(output): 0.1030, norm(x): 0.1043, norm(y): 0.9998, norm:4.1224, tok/sec: 102992.94, flops:108.10, batch-reuse:1
@ 151 train 7.9745 , allloss: 9.4383, dt: 1269.02ms, fracRes: 0.0063, norm(attn): 0.0417, norm(output): 0.1074, norm(x): 0.1066, norm(y): 0.9998, norm:3.0932, tok/sec: 103286.21, flops:108.41, batch-reuse:1
@ 152 train 7.9855 , allloss: 9.4420, dt: 1275.09ms, fracRes: 0.0062, norm(attn): 0.0415, norm(output): 0.1074, norm(x): 0.1065, norm(y): 0.9998, norm:4.8043, tok/sec: 102794.12, flops:107.90, batch-reuse:1
@ 153 train 7.9401 , allloss: 9.3837, dt: 1264.91ms, fracRes: 0.0063, norm(attn): 0.0420, norm(output): 0.1084, norm(x): 0.1071, norm(y): 0.9998, norm:2.8838, tok/sec: 103621.35, flops:108.76, batch-reuse:1
@ 154 train 8.0248 , allloss: 9.5115, dt: 1288.84ms, fracRes: 0.0063, norm(attn): 0.0410, norm(output): 0.1074, norm(x): 0.1065, norm(y): 0.9998, norm:3.6790, tok/sec: 101697.76, flops:106.75, batch-reuse:1
@ 155 train 8.0754 , allloss: 9.5769, dt: 1274.83ms, fracRes: 0.0063, norm(attn): 0.0408, norm(output): 0.1074, norm(x): 0.1062, norm(y): 0.9998, norm:3.9227, tok/sec: 102815.27, flops:107.92, batch-reuse:1
@ 156 train 7.9535 , allloss: 9.4491, dt: 1258.12ms, fracRes: 0.0062, norm(attn): 0.0403, norm(output): 0.1074, norm(x): 0.1070, norm(y): 0.9998, norm:3.5789, tok/sec: 104181.13, flops:109.35, batch-reuse:1
@ 157 train 8.0250 , allloss: 9.4359, dt: 1263.54ms, fracRes: 0.0063, norm(attn): 0.0413, norm(output): 0.1089, norm(x): 0.1084, norm(y): 0.9998, norm:2.3680, tok/sec: 103734.01, flops:108.88, batch-reuse:1
@ 158 train 7.9877 , allloss: 9.3914, dt: 1276.34ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.1084, norm(x): 0.1082, norm(y): 0.9998, norm:2.6252, tok/sec: 102694.00, flops:107.79, batch-reuse:1
@ 159 train 8.0059 , allloss: 9.4778, dt: 1259.98ms, fracRes: 0.0063, norm(attn): 0.0398, norm(output): 0.1074, norm(x): 0.1066, norm(y): 0.9998, norm:2.4895, tok/sec: 104026.97, flops:109.19, batch-reuse:1
@ 160 train 7.9294 , allloss: 9.3510, dt: 1278.32ms, fracRes: 0.0063, norm(attn): 0.0403, norm(output): 0.1084, norm(x): 0.1076, norm(y): 0.9998, norm:2.1442, tok/sec: 102534.51, flops:107.62, batch-reuse:1
@ 161 train 7.9247 , allloss: 9.3061, dt: 1262.77ms, fracRes: 0.0063, norm(attn): 0.0403, norm(output): 0.1089, norm(x): 0.1078, norm(y): 0.9998, norm:2.0213, tok/sec: 103797.53, flops:108.95, batch-reuse:1
@ 162 train 7.9686 , allloss: 9.3235, dt: 1287.34ms, fracRes: 0.0063, norm(attn): 0.0403, norm(output): 0.1084, norm(x): 0.1078, norm(y): 0.9998, norm:2.1783, tok/sec: 101816.12, flops:106.87, batch-reuse:1
@ 163 train 7.9102 , allloss: 9.2973, dt: 1273.23ms, fracRes: 0.0063, norm(attn): 0.0393, norm(output): 0.1074, norm(x): 0.1070, norm(y): 0.9998, norm:1.8315, tok/sec: 102944.26, flops:108.05, batch-reuse:1
@ 164 train 7.8293 , allloss: 9.1991, dt: 1288.01ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.1079, norm(x): 0.1070, norm(y): 0.9998, norm:2.0987, tok/sec: 101762.91, flops:106.81, batch-reuse:1
@ 165 train 7.8969 , allloss: 9.2495, dt: 1270.53ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.1079, norm(x): 0.1067, norm(y): 0.9998, norm:1.9392, tok/sec: 103163.25, flops:108.28, batch-reuse:1
@ 166 train 7.8336 , allloss: 9.1316, dt: 1283.30ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.1079, norm(x): 0.1068, norm(y): 0.9998, norm:2.9954, tok/sec: 102136.78, flops:107.21, batch-reuse:1
@ 167 train 7.8374 , allloss: 9.0553, dt: 1261.73ms, fracRes: 0.0063, norm(attn): 0.0413, norm(output): 0.1089, norm(x): 0.1085, norm(y): 0.9999, norm:3.2640, tok/sec: 103882.53, flops:109.04, batch-reuse:1
@ 168 train 7.7816 , allloss: 8.9925, dt: 1255.01ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.1089, norm(x): 0.1082, norm(y): 0.9999, norm:2.3487, tok/sec: 104439.18, flops:109.62, batch-reuse:1
@ 169 train 7.8127 , allloss: 9.1187, dt: 1267.53ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.1035, norm(x): 0.1052, norm(y): 0.9998, norm:6.4681, tok/sec: 103407.67, flops:108.54, batch-reuse:1
@ 170 train 7.7682 , allloss: 9.0498, dt: 1256.43ms, fracRes: 0.0064, norm(attn): 0.0393, norm(output): 0.1050, norm(x): 0.1059, norm(y): 0.9998, norm:4.1882, tok/sec: 104321.08, flops:109.50, batch-reuse:1
@ 171 train 7.7453 , allloss: 8.9659, dt: 1255.42ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.1084, norm(x): 0.1073, norm(y): 0.9999, norm:2.2679, tok/sec: 104405.14, flops:109.59, batch-reuse:1
@ 172 train 7.7674 , allloss: 8.9989, dt: 1256.72ms, fracRes: 0.0063, norm(attn): 0.0400, norm(output): 0.1074, norm(x): 0.1068, norm(y): 0.9999, norm:4.6126, tok/sec: 104297.25, flops:109.47, batch-reuse:1
@ 173 train 7.7343 , allloss: 8.8993, dt: 1263.04ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.1094, norm(x): 0.1084, norm(y): 0.9999, norm:3.4031, tok/sec: 103774.80, flops:108.93, batch-reuse:1
@ 174 train 7.8484 , allloss: 9.0054, dt: 1271.74ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.1089, norm(x): 0.1087, norm(y): 0.9999, norm:2.4121, tok/sec: 103065.21, flops:108.18, batch-reuse:1
@ 175 train 7.8879 , allloss: 9.1592, dt: 1270.49ms, fracRes: 0.0063, norm(attn): 0.0386, norm(output): 0.1060, norm(x): 0.1060, norm(y): 0.9999, norm:7.0497, tok/sec: 103166.29, flops:108.29, batch-reuse:1
@ 176 train 7.7590 , allloss: 8.9924, dt: 1263.16ms, fracRes: 0.0063, norm(attn): 0.0393, norm(output): 0.1084, norm(x): 0.1072, norm(y): 0.9999, norm:3.1154, tok/sec: 103765.26, flops:108.92, batch-reuse:1
@ 177 train 7.7197 , allloss: 8.8602, dt: 1261.21ms, fracRes: 0.0064, norm(attn): 0.0400, norm(output): 0.1094, norm(x): 0.1094, norm(y): 0.9999, norm:3.8842, tok/sec: 103925.44, flops:109.08, batch-reuse:1
@ 178 train 7.7574 , allloss: 8.8849, dt: 1267.53ms, fracRes: 0.0064, norm(attn): 0.0400, norm(output): 0.1094, norm(x): 0.1093, norm(y): 0.9999, norm:2.3294, tok/sec: 103407.07, flops:108.54, batch-reuse:1
@ 179 train 7.6605 , allloss: 8.8751, dt: 1255.94ms, fracRes: 0.0064, norm(attn): 0.0378, norm(output): 0.1074, norm(x): 0.1064, norm(y): 0.9999, norm:7.3008, tok/sec: 104361.97, flops:109.54, batch-reuse:1
@ 180 train 7.7672 , allloss: 8.9311, dt: 1290.62ms, fracRes: 0.0064, norm(attn): 0.0388, norm(output): 0.1079, norm(x): 0.1075, norm(y): 0.9999, norm:4.1477, tok/sec: 101557.22, flops:106.60, batch-reuse:1
@ 181 train 7.7073 , allloss: 8.7501, dt: 1291.61ms, fracRes: 0.0065, norm(attn): 0.0400, norm(output): 0.1099, norm(x): 0.1104, norm(y): 0.9999, norm:3.9110, tok/sec: 101479.92, flops:106.52, batch-reuse:1
@ 182 train 7.7023 , allloss: 8.7433, dt: 1258.64ms, fracRes: 0.0064, norm(attn): 0.0398, norm(output): 0.1099, norm(x): 0.1106, norm(y): 0.9999, norm:2.8174, tok/sec: 104137.82, flops:109.31, batch-reuse:1
@ 183 train 7.6527 , allloss: 8.8147, dt: 1277.85ms, fracRes: 0.0064, norm(attn): 0.0381, norm(output): 0.1084, norm(x): 0.1077, norm(y): 0.9999, norm:4.7576, tok/sec: 102572.33, flops:107.66, batch-reuse:1
@ 184 train 7.5398 , allloss: 8.7768, dt: 1270.14ms, fracRes: 0.0065, norm(attn): 0.0364, norm(output): 0.1074, norm(x): 0.1062, norm(y): 0.9999, norm:4.8998, tok/sec: 103194.66, flops:108.32, batch-reuse:1
@ 185 train 7.5645 , allloss: 8.6637, dt: 1267.31ms, fracRes: 0.0065, norm(attn): 0.0386, norm(output): 0.1094, norm(x): 0.1094, norm(y): 0.9999, norm:2.3957, tok/sec: 103425.41, flops:108.56, batch-reuse:1
@ 186 train 7.7160 , allloss: 8.7191, dt: 1280.92ms, fracRes: 0.0065, norm(attn): 0.0400, norm(output): 0.1104, norm(x): 0.1116, norm(y): 1.0000, norm:3.2158, tok/sec: 102326.49, flops:107.41, batch-reuse:1
@ 187 train 7.8023 , allloss: 8.7839, dt: 1279.22ms, fracRes: 0.0065, norm(attn): 0.0398, norm(output): 0.1099, norm(x): 0.1116, norm(y): 1.0000, norm:2.3091, tok/sec: 102462.54, flops:107.55, batch-reuse:1
@ 188 train 7.6438 , allloss: 8.6707, dt: 1276.32ms, fracRes: 0.0065, norm(attn): 0.0386, norm(output): 0.1094, norm(x): 0.1099, norm(y): 1.0000, norm:2.9655, tok/sec: 102695.60, flops:107.79, batch-reuse:1
@ 189 train 7.7375 , allloss: 8.7779, dt: 1267.16ms, fracRes: 0.0066, norm(attn): 0.0388, norm(output): 0.1094, norm(x): 0.1097, norm(y): 1.0000, norm:3.2222, tok/sec: 103437.48, flops:108.57, batch-reuse:1
@ 190 train 7.6934 , allloss: 8.7125, dt: 1249.88ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1099, norm(x): 0.1109, norm(y): 1.0000, norm:2.1428, tok/sec: 104867.92, flops:110.07, batch-reuse:1
@ 191 train 7.6400 , allloss: 8.6485, dt: 1261.85ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1104, norm(x): 0.1114, norm(y): 1.0000, norm:1.9313, tok/sec: 103872.68, flops:109.03, batch-reuse:1
@ 192 train 7.6824 , allloss: 8.7253, dt: 1257.19ms, fracRes: 0.0066, norm(attn): 0.0383, norm(output): 0.1099, norm(x): 0.1103, norm(y): 1.0000, norm:2.2175, tok/sec: 104258.29, flops:109.43, batch-reuse:1
@ 193 train 7.6288 , allloss: 8.7087, dt: 1300.88ms, fracRes: 0.0066, norm(attn): 0.0371, norm(output): 0.1094, norm(x): 0.1096, norm(y): 1.0000, norm:2.7661, tok/sec: 100756.41, flops:105.76, batch-reuse:1
@ 194 train 7.6912 , allloss: 8.6893, dt: 1291.76ms, fracRes: 0.0066, norm(attn): 0.0386, norm(output): 0.1104, norm(x): 0.1117, norm(y): 1.0000, norm:2.3129, tok/sec: 101468.05, flops:106.50, batch-reuse:1
@ 195 train 7.6512 , allloss: 8.6139, dt: 1268.65ms, fracRes: 0.0067, norm(attn): 0.0393, norm(output): 0.1113, norm(x): 0.1125, norm(y): 1.0000, norm:2.0478, tok/sec: 103316.18, flops:108.44, batch-reuse:1
@ 196 train 7.5845 , allloss: 8.5985, dt: 1252.94ms, fracRes: 0.0067, norm(attn): 0.0374, norm(output): 0.1104, norm(x): 0.1108, norm(y): 1.0000, norm:1.8512, tok/sec: 104611.54, flops:109.80, batch-reuse:1
@ 197 train 7.5627 , allloss: 8.5844, dt: 1259.06ms, fracRes: 0.0067, norm(attn): 0.0371, norm(output): 0.1099, norm(x): 0.1104, norm(y): 1.0000, norm:2.6665, tok/sec: 104103.13, flops:109.27, batch-reuse:1
@ 198 train 7.5177 , allloss: 8.4624, dt: 1280.66ms, fracRes: 0.0067, norm(attn): 0.0383, norm(output): 0.1113, norm(x): 0.1120, norm(y): 1.0000, norm:2.5120, tok/sec: 102347.27, flops:107.43, batch-reuse:1
@ 199 train 7.5968 , allloss: 8.5079, dt: 1249.51ms, fracRes: 0.0067, norm(attn): 0.0388, norm(output): 0.1113, norm(x): 0.1124, norm(y): 1.0000, norm:2.8502, tok/sec: 104899.00, flops:110.11, batch-reuse:1
@ 200 train 7.5845 , allloss: 8.5072, dt: 1276.37ms, fracRes: 0.0067, norm(attn): 0.0381, norm(output): 0.1108, norm(x): 0.1121, norm(y): 1.0000, norm:1.7255, tok/sec: 102691.30, flops:107.79, batch-reuse:1
@ 201 train 7.5693 , allloss: 8.5379, dt: 1271.89ms, fracRes: 0.0067, norm(attn): 0.0371, norm(output): 0.1099, norm(x): 0.1105, norm(y): 1.0000, norm:2.2450, tok/sec: 103052.77, flops:108.17, batch-reuse:1
@ 202 train 7.5904 , allloss: 8.5188, dt: 1269.07ms, fracRes: 0.0067, norm(attn): 0.0381, norm(output): 0.1108, norm(x): 0.1115, norm(y): 1.0000, norm:1.8999, tok/sec: 103282.09, flops:108.41, batch-reuse:1
@ 203 train 7.5875 , allloss: 8.4896, dt: 1284.20ms, fracRes: 0.0067, norm(attn): 0.0378, norm(output): 0.1108, norm(x): 0.1119, norm(y): 1.0000, norm:2.9600, tok/sec: 102065.05, flops:107.13, batch-reuse:1
@ 204 train 7.5491 , allloss: 8.4299, dt: 1253.27ms, fracRes: 0.0068, norm(attn): 0.0386, norm(output): 0.1113, norm(x): 0.1125, norm(y): 1.0000, norm:2.3499, tok/sec: 104583.98, flops:109.77, batch-reuse:1
@ 205 train 7.5289 , allloss: 8.4282, dt: 1247.96ms, fracRes: 0.0068, norm(attn): 0.0376, norm(output): 0.1104, norm(x): 0.1114, norm(y): 1.0000, norm:2.2448, tok/sec: 105028.90, flops:110.24, batch-reuse:1
@ 206 train 7.5531 , allloss: 8.4593, dt: 1285.84ms, fracRes: 0.0068, norm(attn): 0.0376, norm(output): 0.1108, norm(x): 0.1110, norm(y): 1.0000, norm:2.0472, tok/sec: 101934.60, flops:106.99, batch-reuse:1
@ 207 train 7.4460 , allloss: 8.2656, dt: 1265.17ms, fracRes: 0.0068, norm(attn): 0.0388, norm(output): 0.1123, norm(x): 0.1130, norm(y): 1.0001, norm:2.3121, tok/sec: 103600.51, flops:108.74, batch-reuse:1
@ 208 train 7.5098 , allloss: 8.3117, dt: 1258.58ms, fracRes: 0.0068, norm(attn): 0.0386, norm(output): 0.1123, norm(x): 0.1131, norm(y): 1.0001, norm:2.1391, tok/sec: 104142.83, flops:109.31, batch-reuse:1
@ 209 train 7.5256 , allloss: 8.3343, dt: 1290.11ms, fracRes: 0.0068, norm(attn): 0.0376, norm(output): 0.1123, norm(x): 0.1127, norm(y): 1.0001, norm:1.9089, tok/sec: 101597.30, flops:106.64, batch-reuse:1
@ 210 train 7.4899 , allloss: 8.3229, dt: 1250.00ms, fracRes: 0.0068, norm(attn): 0.0371, norm(output): 0.1104, norm(x): 0.1118, norm(y): 1.0001, norm:3.0084, tok/sec: 104857.48, flops:110.06, batch-reuse:1
@ 211 train 7.4270 , allloss: 8.2368, dt: 1254.96ms, fracRes: 0.0068, norm(attn): 0.0376, norm(output): 0.1113, norm(x): 0.1126, norm(y): 1.0001, norm:2.5040, tok/sec: 104442.79, flops:109.63, batch-reuse:1
@ 212 train 7.4982 , allloss: 8.2757, dt: 1254.33ms, fracRes: 0.0068, norm(attn): 0.0378, norm(output): 0.1123, norm(x): 0.1130, norm(y): 1.0001, norm:2.9018, tok/sec: 104495.22, flops:109.68, batch-reuse:1
@ 213 train 7.4015 , allloss: 8.1452, dt: 1269.37ms, fracRes: 0.0068, norm(attn): 0.0378, norm(output): 0.1123, norm(x): 0.1134, norm(y): 1.0001, norm:3.2383, tok/sec: 103257.17, flops:108.38, batch-reuse:1
@ 214 train 7.4307 , allloss: 8.1728, dt: 1261.41ms, fracRes: 0.0069, norm(attn): 0.0376, norm(output): 0.1152, norm(x): 0.1143, norm(y): 1.0001, norm:1.8509, tok/sec: 103909.16, flops:109.07, batch-reuse:1
@ 215 train 7.3495 , allloss: 8.1568, dt: 1260.69ms, fracRes: 0.0069, norm(attn): 0.0361, norm(output): 0.1113, norm(x): 0.1123, norm(y): 1.0001, norm:2.3010, tok/sec: 103968.74, flops:109.13, batch-reuse:1
@ 216 train 7.3762 , allloss: 8.1873, dt: 1287.02ms, fracRes: 0.0069, norm(attn): 0.0356, norm(output): 0.1108, norm(x): 0.1119, norm(y): 1.0001, norm:2.4497, tok/sec: 101841.13, flops:106.90, batch-reuse:1
@ 217 train 7.4264 , allloss: 8.1804, dt: 1288.47ms, fracRes: 0.0070, norm(attn): 0.0376, norm(output): 0.1143, norm(x): 0.1139, norm(y): 1.0001, norm:2.3172, tok/sec: 101726.57, flops:106.78, batch-reuse:1
@ 218 train 7.4112 , allloss: 8.1273, dt: 1254.45ms, fracRes: 0.0070, norm(attn): 0.0376, norm(output): 0.1152, norm(x): 0.1147, norm(y): 1.0001, norm:2.1558, tok/sec: 104485.90, flops:109.67, batch-reuse:1
@ 219 train 7.4977 , allloss: 8.2496, dt: 1254.50ms, fracRes: 0.0070, norm(attn): 0.0361, norm(output): 0.1123, norm(x): 0.1133, norm(y): 1.0001, norm:1.8761, tok/sec: 104481.77, flops:109.67, batch-reuse:1
@ 220 train 7.4330 , allloss: 8.1679, dt: 1272.52ms, fracRes: 0.0070, norm(attn): 0.0361, norm(output): 0.1143, norm(x): 0.1138, norm(y): 1.0001, norm:2.0178, tok/sec: 103002.01, flops:108.11, batch-reuse:1
@ 221 train 7.4535 , allloss: 8.1270, dt: 1274.16ms, fracRes: 0.0071, norm(attn): 0.0376, norm(output): 0.1157, norm(x): 0.1151, norm(y): 1.0001, norm:3.1938, tok/sec: 102869.08, flops:107.97, batch-reuse:1
@ 222 train 7.3748 , allloss: 8.0526, dt: 1274.41ms, fracRes: 0.0071, norm(attn): 0.0374, norm(output): 0.1152, norm(x): 0.1147, norm(y): 1.0001, norm:2.5369, tok/sec: 102849.06, flops:107.95, batch-reuse:1
@ 223 train 7.3993 , allloss: 8.1073, dt: 1295.86ms, fracRes: 0.0070, norm(attn): 0.0364, norm(output): 0.1143, norm(x): 0.1137, norm(y): 1.0001, norm:2.0251, tok/sec: 101147.00, flops:106.17, batch-reuse:1
@ 224 train 7.3193 , allloss: 8.0167, dt: 1284.67ms, fracRes: 0.0070, norm(attn): 0.0359, norm(output): 0.1152, norm(x): 0.1138, norm(y): 1.0001, norm:2.0953, tok/sec: 102027.90, flops:107.09, batch-reuse:1
@ 225 train 7.3467 , allloss: 7.9981, dt: 1283.65ms, fracRes: 0.0070, norm(attn): 0.0359, norm(output): 0.1157, norm(x): 0.1149, norm(y): 1.0001, norm:1.9113, tok/sec: 102109.12, flops:107.18, batch-reuse:1
@ 226 train 7.3960 , allloss: 8.0452, dt: 1260.09ms, fracRes: 0.0070, norm(attn): 0.0359, norm(output): 0.1152, norm(x): 0.1148, norm(y): 1.0001, norm:3.0645, tok/sec: 104018.06, flops:109.18, batch-reuse:1
@ 227 train 7.3807 , allloss: 8.0165, dt: 1275.45ms, fracRes: 0.0071, norm(attn): 0.0359, norm(output): 0.1162, norm(x): 0.1154, norm(y): 1.0002, norm:2.0795, tok/sec: 102765.47, flops:107.87, batch-reuse:1
@ 228 train 7.3521 , allloss: 7.9704, dt: 1287.63ms, fracRes: 0.0071, norm(attn): 0.0366, norm(output): 0.1162, norm(x): 0.1158, norm(y): 1.0002, norm:2.6165, tok/sec: 101793.30, flops:106.85, batch-reuse:1
@ 229 train 7.3933 , allloss: 8.0236, dt: 1281.17ms, fracRes: 0.0071, norm(attn): 0.0356, norm(output): 0.1152, norm(x): 0.1145, norm(y): 1.0002, norm:2.6736, tok/sec: 102306.23, flops:107.38, batch-reuse:1
@ 230 train 7.3740 , allloss: 8.0116, dt: 1255.77ms, fracRes: 0.0072, norm(attn): 0.0359, norm(output): 0.1152, norm(x): 0.1147, norm(y): 1.0002, norm:2.5400, tok/sec: 104375.51, flops:109.56, batch-reuse:1
@ 231 train 7.2837 , allloss: 7.9090, dt: 1255.44ms, fracRes: 0.0071, norm(attn): 0.0354, norm(output): 0.1157, norm(x): 0.1148, norm(y): 1.0002, norm:1.9806, tok/sec: 104403.38, flops:109.59, batch-reuse:1
@ 232 train 7.2689 , allloss: 7.8590, dt: 1263.10ms, fracRes: 0.0071, norm(attn): 0.0361, norm(output): 0.1157, norm(x): 0.1153, norm(y): 1.0002, norm:2.7443, tok/sec: 103770.49, flops:108.92, batch-reuse:1
@ 233 train 7.3312 , allloss: 7.8962, dt: 1268.05ms, fracRes: 0.0072, norm(attn): 0.0364, norm(output): 0.1167, norm(x): 0.1167, norm(y): 1.0002, norm:2.2092, tok/sec: 103365.07, flops:108.50, batch-reuse:1
@ 234 train 7.1611 , allloss: 7.7777, dt: 1281.06ms, fracRes: 0.0071, norm(attn): 0.0349, norm(output): 0.1152, norm(x): 0.1148, norm(y): 1.0002, norm:2.0824, tok/sec: 102315.25, flops:107.39, batch-reuse:1
@ 235 train 7.3064 , allloss: 7.9207, dt: 1255.98ms, fracRes: 0.0072, norm(attn): 0.0349, norm(output): 0.1157, norm(x): 0.1150, norm(y): 1.0002, norm:1.8633, tok/sec: 104358.41, flops:109.54, batch-reuse:1
@ 236 train 7.1722 , allloss: 7.7730, dt: 1276.43ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1157, norm(x): 0.1151, norm(y): 1.0002, norm:1.6891, tok/sec: 102686.06, flops:107.78, batch-reuse:1
@ 237 train 7.2793 , allloss: 7.8479, dt: 1283.68ms, fracRes: 0.0073, norm(attn): 0.0352, norm(output): 0.1167, norm(x): 0.1163, norm(y): 1.0002, norm:1.9777, tok/sec: 102106.31, flops:107.17, batch-reuse:1
@ 238 train 7.2346 , allloss: 7.8007, dt: 1276.78ms, fracRes: 0.0073, norm(attn): 0.0352, norm(output): 0.1162, norm(x): 0.1158, norm(y): 1.0002, norm:1.5908, tok/sec: 102658.18, flops:107.75, batch-reuse:1
@ 239 train 7.2359 , allloss: 7.8059, dt: 1251.34ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1162, norm(x): 0.1155, norm(y): 1.0002, norm:2.3061, tok/sec: 104745.00, flops:109.94, batch-reuse:1
@ 240 train 7.3104 , allloss: 7.8600, dt: 1256.33ms, fracRes: 0.0073, norm(attn): 0.0354, norm(output): 0.1167, norm(x): 0.1160, norm(y): 1.0002, norm:1.9826, tok/sec: 104329.12, flops:109.51, batch-reuse:1
@ 241 train 7.2636 , allloss: 7.8098, dt: 1288.98ms, fracRes: 0.0074, norm(attn): 0.0361, norm(output): 0.1167, norm(x): 0.1164, norm(y): 1.0002, norm:2.9966, tok/sec: 101686.59, flops:106.73, batch-reuse:1
@ 242 train 7.2729 , allloss: 7.8177, dt: 1264.03ms, fracRes: 0.0073, norm(attn): 0.0354, norm(output): 0.1162, norm(x): 0.1158, norm(y): 1.0002, norm:2.2344, tok/sec: 103693.57, flops:108.84, batch-reuse:1
@ 243 train 7.1135 , allloss: 7.6694, dt: 1265.65ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1157, norm(x): 0.1151, norm(y): 1.0002, norm:2.2886, tok/sec: 103561.19, flops:108.70, batch-reuse:1
@ 244 train 7.3076 , allloss: 7.8628, dt: 1258.86ms, fracRes: 0.0073, norm(attn): 0.0354, norm(output): 0.1167, norm(x): 0.1157, norm(y): 1.0002, norm:2.4679, tok/sec: 104119.51, flops:109.29, batch-reuse:1
@ 245 train 7.1301 , allloss: 7.6829, dt: 1262.95ms, fracRes: 0.0073, norm(attn): 0.0344, norm(output): 0.1167, norm(x): 0.1156, norm(y): 1.0002, norm:2.0104, tok/sec: 103782.09, flops:108.93, batch-reuse:1
@ 246 train 7.3473 , allloss: 7.8525, dt: 1250.08ms, fracRes: 0.0074, norm(attn): 0.0361, norm(output): 0.1172, norm(x): 0.1171, norm(y): 1.0002, norm:1.4022, tok/sec: 104850.56, flops:110.05, batch-reuse:1
@ 247 train 7.2323 , allloss: 7.7567, dt: 1282.92ms, fracRes: 0.0073, norm(attn): 0.0344, norm(output): 0.1167, norm(x): 0.1156, norm(y): 1.0002, norm:1.8279, tok/sec: 102166.86, flops:107.24, batch-reuse:1
@ 248 train 7.1757 , allloss: 7.6952, dt: 1274.16ms, fracRes: 0.0072, norm(attn): 0.0342, norm(output): 0.1167, norm(x): 0.1155, norm(y): 1.0002, norm:2.7383, tok/sec: 102869.14, flops:107.97, batch-reuse:1
@ 249 train 7.1340 , allloss: 7.6389, dt: 1274.54ms, fracRes: 0.0073, norm(attn): 0.0352, norm(output): 0.1167, norm(x): 0.1163, norm(y): 1.0002, norm:1.9317, tok/sec: 102838.39, flops:107.94, batch-reuse:1
@ 250 train 7.1849 , allloss: 7.6849, dt: 1259.38ms, fracRes: 0.0073, norm(attn): 0.0349, norm(output): 0.1167, norm(x): 0.1162, norm(y): 1.0002, norm:1.8631, tok/sec: 104076.90, flops:109.24, batch-reuse:1
@ 251 train 7.0999 , allloss: 7.6238, dt: 1251.51ms, fracRes: 0.0073, norm(attn): 0.0342, norm(output): 0.1152, norm(x): 0.1148, norm(y): 1.0002, norm:3.1509, tok/sec: 104730.71, flops:109.93, batch-reuse:1
@ 252 train 7.2685 , allloss: 7.7856, dt: 1283.40ms, fracRes: 0.0074, norm(attn): 0.0347, norm(output): 0.1157, norm(x): 0.1152, norm(y): 1.0002, norm:1.8853, tok/sec: 102128.64, flops:107.20, batch-reuse:1
@ 253 train 7.1095 , allloss: 7.5760, dt: 1261.31ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1172, norm(x): 0.1168, norm(y): 1.0003, norm:2.5826, tok/sec: 103917.19, flops:109.07, batch-reuse:1
@ 254 train 7.0643 , allloss: 7.5208, dt: 1273.48ms, fracRes: 0.0072, norm(attn): 0.0352, norm(output): 0.1167, norm(x): 0.1165, norm(y): 1.0003, norm:2.4038, tok/sec: 102924.31, flops:108.03, batch-reuse:1
@ 255 train 7.0855 , allloss: 7.5538, dt: 1261.19ms, fracRes: 0.0072, norm(attn): 0.0349, norm(output): 0.1167, norm(x): 0.1160, norm(y): 1.0003, norm:1.7939, tok/sec: 103927.37, flops:109.09, batch-reuse:1
@ 256 train 7.1122 , allloss: 7.5725, dt: 1263.66ms, fracRes: 0.0072, norm(attn): 0.0344, norm(output): 0.1167, norm(x): 0.1163, norm(y): 1.0003, norm:1.7878, tok/sec: 103724.46, flops:108.87, batch-reuse:1
@ 257 train 7.1565 , allloss: 7.5976, dt: 1263.04ms, fracRes: 0.0074, norm(attn): 0.0356, norm(output): 0.1172, norm(x): 0.1174, norm(y): 1.0003, norm:1.8845, tok/sec: 103775.15, flops:108.93, batch-reuse:1
@ 258 train 7.0890 , allloss: 7.5663, dt: 1283.66ms, fracRes: 0.0072, norm(attn): 0.0337, norm(output): 0.1167, norm(x): 0.1156, norm(y): 1.0002, norm:1.3177, tok/sec: 102108.42, flops:107.18, batch-reuse:1
@ 259 train 7.0860 , allloss: 7.5477, dt: 1297.63ms, fracRes: 0.0071, norm(attn): 0.0339, norm(output): 0.1167, norm(x): 0.1154, norm(y): 1.0003, norm:2.0755, tok/sec: 101008.94, flops:106.02, batch-reuse:1
@ 260 train 7.1881 , allloss: 7.6135, dt: 1261.83ms, fracRes: 0.0072, norm(attn): 0.0352, norm(output): 0.1167, norm(x): 0.1166, norm(y): 1.0003, norm:2.3654, tok/sec: 103874.43, flops:109.03, batch-reuse:1
@ 261 train 7.1062 , allloss: 7.5173, dt: 1277.59ms, fracRes: 0.0071, norm(attn): 0.0349, norm(output): 0.1172, norm(x): 0.1173, norm(y): 1.0003, norm:1.5354, tok/sec: 102593.24, flops:107.69, batch-reuse:1
@ 262 train 7.1611 , allloss: 7.6081, dt: 1301.58ms, fracRes: 0.0072, norm(attn): 0.0344, norm(output): 0.1162, norm(x): 0.1157, norm(y): 1.0003, norm:2.3722, tok/sec: 100701.88, flops:105.70, batch-reuse:1
@ 263 train 7.1490 , allloss: 7.6312, dt: 1266.86ms, fracRes: 0.0073, norm(attn): 0.0352, norm(output): 0.1152, norm(x): 0.1149, norm(y): 1.0003, norm:8.8102, tok/sec: 103462.38, flops:108.60, batch-reuse:1
@ 264 train 7.0946 , allloss: 7.5545, dt: 1252.02ms, fracRes: 0.0074, norm(attn): 0.0344, norm(output): 0.1167, norm(x): 0.1159, norm(y): 1.0003, norm:2.6283, tok/sec: 104688.71, flops:109.88, batch-reuse:1
@ 265 train 7.1120 , allloss: 7.5354, dt: 1252.45ms, fracRes: 0.0073, norm(attn): 0.0352, norm(output): 0.1172, norm(x): 0.1174, norm(y): 1.0003, norm:4.4513, tok/sec: 104652.40, flops:109.85, batch-reuse:1
@ 266 train 7.0827 , allloss: 7.4953, dt: 1264.97ms, fracRes: 0.0071, norm(attn): 0.0352, norm(output): 0.1177, norm(x): 0.1184, norm(y): 1.0003, norm:2.5446, tok/sec: 103616.29, flops:108.76, batch-reuse:1
@ 267 train 7.0700 , allloss: 7.4940, dt: 1278.38ms, fracRes: 0.0070, norm(attn): 0.0352, norm(output): 0.1177, norm(x): 0.1186, norm(y): 1.0003, norm:2.5363, tok/sec: 102529.69, flops:107.62, batch-reuse:1
@ 268 train 7.1483 , allloss: 7.6058, dt: 1277.49ms, fracRes: 0.0070, norm(attn): 0.0354, norm(output): 0.1172, norm(x): 0.1176, norm(y): 1.0003, norm:2.4586, tok/sec: 102601.57, flops:107.69, batch-reuse:1
@ 269 train 7.0754 , allloss: 7.5269, dt: 1276.53ms, fracRes: 0.0072, norm(attn): 0.0339, norm(output): 0.1172, norm(x): 0.1177, norm(y): 1.0003, norm:2.0980, tok/sec: 102678.35, flops:107.77, batch-reuse:1
@ 270 train 7.1594 , allloss: 7.5806, dt: 1284.77ms, fracRes: 0.0072, norm(attn): 0.0347, norm(output): 0.1187, norm(x): 0.1194, norm(y): 1.0003, norm:1.8801, tok/sec: 102020.04, flops:107.08, batch-reuse:1
@ 271 train 7.0290 , allloss: 7.4521, dt: 1247.36ms, fracRes: 0.0072, norm(attn): 0.0354, norm(output): 0.1182, norm(x): 0.1192, norm(y): 1.0003, norm:2.1267, tok/sec: 105079.77, flops:110.30, batch-reuse:1
@ 272 train 7.0448 , allloss: 7.4762, dt: 1255.40ms, fracRes: 0.0071, norm(attn): 0.0344, norm(output): 0.1187, norm(x): 0.1191, norm(y): 1.0003, norm:1.3995, tok/sec: 104406.27, flops:109.59, batch-reuse:1
@ 273 train 7.1863 , allloss: 7.6447, dt: 1279.50ms, fracRes: 0.0071, norm(attn): 0.0344, norm(output): 0.1172, norm(x): 0.1180, norm(y): 1.0003, norm:2.2504, tok/sec: 102439.71, flops:107.52, batch-reuse:1
@ 274 train 7.0536 , allloss: 7.5110, dt: 1286.12ms, fracRes: 0.0071, norm(attn): 0.0342, norm(output): 0.1172, norm(x): 0.1175, norm(y): 1.0003, norm:3.6027, tok/sec: 101912.96, flops:106.97, batch-reuse:1
@ 275 train 7.0288 , allloss: 7.4656, dt: 1266.22ms, fracRes: 0.0070, norm(attn): 0.0347, norm(output): 0.1172, norm(x): 0.1183, norm(y): 1.0003, norm:1.5111, tok/sec: 103514.62, flops:108.65, batch-reuse:1
@ 276 train 7.0416 , allloss: 7.4708, dt: 1264.67ms, fracRes: 0.0069, norm(attn): 0.0354, norm(output): 0.1177, norm(x): 0.1186, norm(y): 1.0003, norm:3.7352, tok/sec: 103641.08, flops:108.78, batch-reuse:1
@ 277 train 6.9134 , allloss: 7.3319, dt: 1287.36ms, fracRes: 0.0069, norm(attn): 0.0361, norm(output): 0.1177, norm(x): 0.1189, norm(y): 1.0003, norm:2.5938, tok/sec: 101814.38, flops:106.87, batch-reuse:1
@ 278 train 7.0197 , allloss: 7.4206, dt: 1255.84ms, fracRes: 0.0070, norm(attn): 0.0371, norm(output): 0.1182, norm(x): 0.1192, norm(y): 1.0003, norm:1.9256, tok/sec: 104370.22, flops:109.55, batch-reuse:1
@ 279 train 6.9541 , allloss: 7.3694, dt: 1257.00ms, fracRes: 0.0069, norm(attn): 0.0354, norm(output): 0.1177, norm(x): 0.1185, norm(y): 1.0003, norm:2.0401, tok/sec: 104273.71, flops:109.45, batch-reuse:1
@ 280 train 7.0906 , allloss: 7.5205, dt: 1287.50ms, fracRes: 0.0068, norm(attn): 0.0354, norm(output): 0.1177, norm(x): 0.1184, norm(y): 1.0003, norm:3.0993, tok/sec: 101803.48, flops:106.86, batch-reuse:1
@ 281 train 6.9527 , allloss: 7.3631, dt: 1261.62ms, fracRes: 0.0067, norm(attn): 0.0349, norm(output): 0.1182, norm(x): 0.1194, norm(y): 1.0003, norm:1.6040, tok/sec: 103891.48, flops:109.05, batch-reuse:1
@ 282 train 6.9258 , allloss: 7.3217, dt: 1275.89ms, fracRes: 0.0067, norm(attn): 0.0349, norm(output): 0.1177, norm(x): 0.1195, norm(y): 1.0003, norm:2.0782, tok/sec: 102729.70, flops:107.83, batch-reuse:1
@ 283 train 6.8907 , allloss: 7.2887, dt: 1265.17ms, fracRes: 0.0067, norm(attn): 0.0356, norm(output): 0.1177, norm(x): 0.1191, norm(y): 1.0003, norm:2.8084, tok/sec: 103600.32, flops:108.74, batch-reuse:1
@ 284 train 6.9866 , allloss: 7.3851, dt: 1261.50ms, fracRes: 0.0068, norm(attn): 0.0356, norm(output): 0.1191, norm(x): 0.1200, norm(y): 1.0003, norm:1.5968, tok/sec: 103902.05, flops:109.06, batch-reuse:1
@ 285 train 6.9885 , allloss: 7.4154, dt: 1258.93ms, fracRes: 0.0068, norm(attn): 0.0344, norm(output): 0.1177, norm(x): 0.1191, norm(y): 1.0003, norm:1.8039, tok/sec: 104113.68, flops:109.28, batch-reuse:1
@ 286 train 7.0015 , allloss: 7.4352, dt: 1251.43ms, fracRes: 0.0067, norm(attn): 0.0339, norm(output): 0.1177, norm(x): 0.1182, norm(y): 1.0003, norm:2.5330, tok/sec: 104737.64, flops:109.94, batch-reuse:1
@ 287 train 6.9867 , allloss: 7.3788, dt: 1284.67ms, fracRes: 0.0067, norm(attn): 0.0349, norm(output): 0.1182, norm(x): 0.1196, norm(y): 1.0003, norm:1.5715, tok/sec: 102027.45, flops:107.09, batch-reuse:1
@ 288 train 7.0052 , allloss: 7.3773, dt: 1247.09ms, fracRes: 0.0068, norm(attn): 0.0374, norm(output): 0.1196, norm(x): 0.1210, norm(y): 1.0004, norm:1.9190, tok/sec: 105102.09, flops:110.32, batch-reuse:1
@ 289 train 6.9693 , allloss: 7.3562, dt: 1285.08ms, fracRes: 0.0068, norm(attn): 0.0352, norm(output): 0.1191, norm(x): 0.1201, norm(y): 1.0003, norm:1.4034, tok/sec: 101995.40, flops:107.06, batch-reuse:1
@ 290 train 6.9429 , allloss: 7.3256, dt: 1277.61ms, fracRes: 0.0067, norm(attn): 0.0344, norm(output): 0.1187, norm(x): 0.1196, norm(y): 1.0003, norm:2.3573, tok/sec: 102591.88, flops:107.68, batch-reuse:1
@ 291 train 6.8519 , allloss: 7.2285, dt: 1250.68ms, fracRes: 0.0067, norm(attn): 0.0342, norm(output): 0.1187, norm(x): 0.1200, norm(y): 1.0003, norm:2.2177, tok/sec: 104800.69, flops:110.00, batch-reuse:1
@ 292 train 6.8977 , allloss: 7.2614, dt: 1257.13ms, fracRes: 0.0066, norm(attn): 0.0352, norm(output): 0.1196, norm(x): 0.1206, norm(y): 1.0004, norm:2.4542, tok/sec: 104263.21, flops:109.44, batch-reuse:1
@ 293 train 6.9579 , allloss: 7.3176, dt: 1252.40ms, fracRes: 0.0067, norm(attn): 0.0356, norm(output): 0.1196, norm(x): 0.1208, norm(y): 1.0004, norm:1.4317, tok/sec: 104656.45, flops:109.85, batch-reuse:1
@ 294 train 6.9350 , allloss: 7.3087, dt: 1275.90ms, fracRes: 0.0067, norm(attn): 0.0356, norm(output): 0.1182, norm(x): 0.1194, norm(y): 1.0004, norm:3.9825, tok/sec: 102729.08, flops:107.83, batch-reuse:1
@ 295 train 6.9558 , allloss: 7.3359, dt: 1287.86ms, fracRes: 0.0067, norm(attn): 0.0347, norm(output): 0.1177, norm(x): 0.1193, norm(y): 1.0004, norm:2.2589, tok/sec: 101775.23, flops:106.83, batch-reuse:1
@ 296 train 6.8320 , allloss: 7.2145, dt: 1269.93ms, fracRes: 0.0066, norm(attn): 0.0356, norm(output): 0.1191, norm(x): 0.1204, norm(y): 1.0004, norm:2.6375, tok/sec: 103211.73, flops:108.33, batch-reuse:1
@ 297 train 6.8008 , allloss: 7.1641, dt: 1299.44ms, fracRes: 0.0066, norm(attn): 0.0354, norm(output): 0.1211, norm(x): 0.1214, norm(y): 1.0004, norm:1.9719, tok/sec: 100868.20, flops:105.87, batch-reuse:1
@ 298 train 6.9264 , allloss: 7.2807, dt: 1287.57ms, fracRes: 0.0067, norm(attn): 0.0364, norm(output): 0.1216, norm(x): 0.1212, norm(y): 1.0004, norm:1.8931, tok/sec: 101798.09, flops:106.85, batch-reuse:1
@ 299 train 6.9021 , allloss: 7.2650, dt: 1253.71ms, fracRes: 0.0067, norm(attn): 0.0356, norm(output): 0.1191, norm(x): 0.1202, norm(y): 1.0004, norm:1.8975, tok/sec: 104547.68, flops:109.74, batch-reuse:1
@ 300 train 6.8637 , allloss: 7.2375, dt: 1282.18ms, fracRes: 0.0066, norm(attn): 0.0354, norm(output): 0.1191, norm(x): 0.1206, norm(y): 1.0004, norm:2.2022, tok/sec: 102225.62, flops:107.30, batch-reuse:1
@ 301 train 7.0540 , allloss: 7.4305, dt: 1277.21ms, fracRes: 0.0067, norm(attn): 0.0381, norm(output): 0.1230, norm(x): 0.1213, norm(y): 1.0004, norm:2.3103, tok/sec: 102623.59, flops:107.72, batch-reuse:1
@ 302 train 6.8600 , allloss: 7.2186, dt: 1266.24ms, fracRes: 0.0067, norm(attn): 0.0364, norm(output): 0.1230, norm(x): 0.1217, norm(y): 1.0004, norm:1.6393, tok/sec: 103512.69, flops:108.65, batch-reuse:1
@ 303 train 6.8788 , allloss: 7.2272, dt: 1265.37ms, fracRes: 0.0067, norm(attn): 0.0359, norm(output): 0.1230, norm(x): 0.1215, norm(y): 1.0004, norm:1.7570, tok/sec: 103583.78, flops:108.72, batch-reuse:1
@ 304 train 6.8499 , allloss: 7.2099, dt: 1263.56ms, fracRes: 0.0067, norm(attn): 0.0376, norm(output): 0.1206, norm(x): 0.1213, norm(y): 1.0004, norm:1.6935, tok/sec: 103732.35, flops:108.88, batch-reuse:1
@ 305 train 6.7682 , allloss: 7.1302, dt: 1288.94ms, fracRes: 0.0066, norm(attn): 0.0361, norm(output): 0.1221, norm(x): 0.1214, norm(y): 1.0004, norm:1.7289, tok/sec: 101689.82, flops:106.74, batch-reuse:1
@ 306 train 6.7808 , allloss: 7.1381, dt: 1272.85ms, fracRes: 0.0066, norm(attn): 0.0369, norm(output): 0.1230, norm(x): 0.1216, norm(y): 1.0004, norm:1.7232, tok/sec: 102975.19, flops:108.09, batch-reuse:1
@ 307 train 6.9818 , allloss: 7.3299, dt: 1267.97ms, fracRes: 0.0066, norm(attn): 0.0371, norm(output): 0.1230, norm(x): 0.1213, norm(y): 1.0004, norm:1.7677, tok/sec: 103371.31, flops:108.50, batch-reuse:1
@ 308 train 6.8227 , allloss: 7.1586, dt: 1283.29ms, fracRes: 0.0066, norm(attn): 0.0359, norm(output): 0.1230, norm(x): 0.1213, norm(y): 1.0004, norm:2.9426, tok/sec: 102137.80, flops:107.21, batch-reuse:1
@ 309 train 6.8702 , allloss: 7.1969, dt: 1248.39ms, fracRes: 0.0065, norm(attn): 0.0369, norm(output): 0.1230, norm(x): 0.1215, norm(y): 1.0004, norm:3.4769, tok/sec: 104992.51, flops:110.20, batch-reuse:1
@ 310 train 6.9272 , allloss: 7.2522, dt: 1269.50ms, fracRes: 0.0065, norm(attn): 0.0386, norm(output): 0.1230, norm(x): 0.1220, norm(y): 1.0004, norm:1.6584, tok/sec: 103247.30, flops:108.37, batch-reuse:1
@ 311 train 6.9246 , allloss: 7.2488, dt: 1262.73ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.1235, norm(x): 0.1227, norm(y): 1.0004, norm:2.8817, tok/sec: 103800.41, flops:108.95, batch-reuse:1
@ 312 train 7.0086 , allloss: 7.3405, dt: 1269.54ms, fracRes: 0.0067, norm(attn): 0.0388, norm(output): 0.1235, norm(x): 0.1227, norm(y): 1.0004, norm:1.9698, tok/sec: 103243.77, flops:108.37, batch-reuse:1
@ 313 train 6.7825 , allloss: 7.1043, dt: 1261.80ms, fracRes: 0.0067, norm(attn): 0.0364, norm(output): 0.1230, norm(x): 0.1223, norm(y): 1.0004, norm:1.4781, tok/sec: 103877.25, flops:109.03, batch-reuse:1
@ 314 train 6.8013 , allloss: 7.1124, dt: 1251.59ms, fracRes: 0.0066, norm(attn): 0.0371, norm(output): 0.1230, norm(x): 0.1222, norm(y): 1.0004, norm:1.8836, tok/sec: 104724.79, flops:109.92, batch-reuse:1
@ 315 train 6.8436 , allloss: 7.1560, dt: 1266.67ms, fracRes: 0.0066, norm(attn): 0.0374, norm(output): 0.1230, norm(x): 0.1220, norm(y): 1.0004, norm:2.9090, tok/sec: 103477.95, flops:108.61, batch-reuse:1
@ 316 train 6.8423 , allloss: 7.1540, dt: 1294.13ms, fracRes: 0.0066, norm(attn): 0.0376, norm(output): 0.1240, norm(x): 0.1226, norm(y): 1.0004, norm:1.5661, tok/sec: 101282.27, flops:106.31, batch-reuse:1
@ 317 train 6.8685 , allloss: 7.1758, dt: 1259.31ms, fracRes: 0.0066, norm(attn): 0.0381, norm(output): 0.1240, norm(x): 0.1232, norm(y): 1.0004, norm:2.0532, tok/sec: 104082.10, flops:109.25, batch-reuse:1
@ 318 train 6.7555 , allloss: 7.0661, dt: 1286.26ms, fracRes: 0.0065, norm(attn): 0.0361, norm(output): 0.1245, norm(x): 0.1231, norm(y): 1.0004, norm:1.9960, tok/sec: 101901.46, flops:106.96, batch-reuse:1
@ 319 train 6.7029 , allloss: 7.0223, dt: 1262.48ms, fracRes: 0.0066, norm(attn): 0.0356, norm(output): 0.1235, norm(x): 0.1227, norm(y): 1.0004, norm:1.6205, tok/sec: 103820.89, flops:108.97, batch-reuse:1
@ 320 train 6.7868 , allloss: 7.0964, dt: 1251.03ms, fracRes: 0.0066, norm(attn): 0.0359, norm(output): 0.1235, norm(x): 0.1229, norm(y): 1.0004, norm:1.7745, tok/sec: 104771.49, flops:109.97, batch-reuse:1
@ 321 train 6.8291 , allloss: 7.1324, dt: 1262.15ms, fracRes: 0.0065, norm(attn): 0.0364, norm(output): 0.1235, norm(x): 0.1228, norm(y): 1.0004, norm:1.9113, tok/sec: 103847.86, flops:109.00, batch-reuse:1
@ 322 train 6.7254 , allloss: 7.0189, dt: 1272.82ms, fracRes: 0.0065, norm(attn): 0.0371, norm(output): 0.1240, norm(x): 0.1233, norm(y): 1.0004, norm:1.6475, tok/sec: 102977.79, flops:108.09, batch-reuse:1
@ 323 train 6.8169 , allloss: 7.1072, dt: 1249.71ms, fracRes: 0.0066, norm(attn): 0.0371, norm(output): 0.1245, norm(x): 0.1234, norm(y): 1.0004, norm:1.5029, tok/sec: 104881.95, flops:110.09, batch-reuse:1
@ 324 train 6.7203 , allloss: 7.0097, dt: 1271.50ms, fracRes: 0.0065, norm(attn): 0.0376, norm(output): 0.1245, norm(x): 0.1233, norm(y): 1.0004, norm:1.4287, tok/sec: 103084.29, flops:108.20, batch-reuse:1
@ 325 train 6.7710 , allloss: 7.0630, dt: 1248.46ms, fracRes: 0.0065, norm(attn): 0.0376, norm(output): 0.1240, norm(x): 0.1229, norm(y): 1.0004, norm:2.0534, tok/sec: 104986.90, flops:110.20, batch-reuse:1
@ 326 train 6.8315 , allloss: 7.1215, dt: 1258.68ms, fracRes: 0.0065, norm(attn): 0.0369, norm(output): 0.1240, norm(x): 0.1231, norm(y): 1.0004, norm:1.7152, tok/sec: 104134.68, flops:109.30, batch-reuse:1
@ 327 train 6.8818 , allloss: 7.1601, dt: 1271.59ms, fracRes: 0.0066, norm(attn): 0.0386, norm(output): 0.1245, norm(x): 0.1235, norm(y): 1.0004, norm:2.1343, tok/sec: 103077.62, flops:108.19, batch-reuse:1
@ 328 train 6.7521 , allloss: 7.0329, dt: 1265.16ms, fracRes: 0.0065, norm(attn): 0.0371, norm(output): 0.1240, norm(x): 0.1231, norm(y): 1.0004, norm:1.4954, tok/sec: 103601.08, flops:108.74, batch-reuse:1
@ 329 train 6.7614 , allloss: 7.0427, dt: 1268.25ms, fracRes: 0.0065, norm(attn): 0.0376, norm(output): 0.1245, norm(x): 0.1231, norm(y): 1.0004, norm:1.5528, tok/sec: 103349.02, flops:108.48, batch-reuse:1
@ 330 train 6.7343 , allloss: 7.0132, dt: 1261.76ms, fracRes: 0.0065, norm(attn): 0.0361, norm(output): 0.1235, norm(x): 0.1229, norm(y): 1.0004, norm:1.6683, tok/sec: 103880.08, flops:109.04, batch-reuse:1
@ 331 train 6.6811 , allloss: 6.9518, dt: 1256.13ms, fracRes: 0.0064, norm(attn): 0.0383, norm(output): 0.1245, norm(x): 0.1232, norm(y): 1.0004, norm:1.9945, tok/sec: 104345.63, flops:109.52, batch-reuse:1
@ 332 train 6.6837 , allloss: 6.9525, dt: 1256.87ms, fracRes: 0.0065, norm(attn): 0.0383, norm(output): 0.1245, norm(x): 0.1234, norm(y): 1.0004, norm:1.8155, tok/sec: 104284.29, flops:109.46, batch-reuse:1
@ 333 train 6.7381 , allloss: 7.0154, dt: 1286.81ms, fracRes: 0.0065, norm(attn): 0.0366, norm(output): 0.1240, norm(x): 0.1228, norm(y): 1.0004, norm:1.8550, tok/sec: 101857.73, flops:106.91, batch-reuse:1
@ 334 train 6.6890 , allloss: 6.9683, dt: 1271.51ms, fracRes: 0.0064, norm(attn): 0.0371, norm(output): 0.1235, norm(x): 0.1226, norm(y): 1.0004, norm:2.7000, tok/sec: 103083.74, flops:108.20, batch-reuse:1
@ 335 train 6.6538 , allloss: 6.9246, dt: 1269.82ms, fracRes: 0.0065, norm(attn): 0.0369, norm(output): 0.1245, norm(x): 0.1230, norm(y): 1.0004, norm:1.6080, tok/sec: 103221.11, flops:108.34, batch-reuse:1
@ 336 train 6.7124 , allloss: 6.9776, dt: 1270.55ms, fracRes: 0.0065, norm(attn): 0.0371, norm(output): 0.1240, norm(x): 0.1228, norm(y): 1.0004, norm:2.8769, tok/sec: 103161.91, flops:108.28, batch-reuse:1
@ 337 train 6.6867 , allloss: 6.9523, dt: 1307.64ms, fracRes: 0.0065, norm(attn): 0.0383, norm(output): 0.1240, norm(x): 0.1231, norm(y): 1.0004, norm:1.6623, tok/sec: 100235.28, flops:105.21, batch-reuse:1
@ 338 train 6.6670 , allloss: 6.9316, dt: 1257.05ms, fracRes: 0.0064, norm(attn): 0.0376, norm(output): 0.1245, norm(x): 0.1235, norm(y): 1.0004, norm:2.0699, tok/sec: 104269.54, flops:109.44, batch-reuse:1
@ 339 train 6.7584 , allloss: 7.0166, dt: 1255.66ms, fracRes: 0.0064, norm(attn): 0.0374, norm(output): 0.1245, norm(x): 0.1237, norm(y): 1.0004, norm:1.6760, tok/sec: 104384.56, flops:109.57, batch-reuse:1
@ 340 train 6.7495 , allloss: 7.0100, dt: 1277.53ms, fracRes: 0.0064, norm(attn): 0.0386, norm(output): 0.1235, norm(x): 0.1232, norm(y): 1.0004, norm:1.9306, tok/sec: 102597.95, flops:107.69, batch-reuse:1
@ 341 train 6.6755 , allloss: 6.9270, dt: 1246.02ms, fracRes: 0.0064, norm(attn): 0.0378, norm(output): 0.1240, norm(x): 0.1234, norm(y): 1.0004, norm:2.4375, tok/sec: 105192.18, flops:110.41, batch-reuse:1
@ 342 train 6.5912 , allloss: 6.8432, dt: 1280.14ms, fracRes: 0.0064, norm(attn): 0.0381, norm(output): 0.1240, norm(x): 0.1240, norm(y): 1.0004, norm:1.7251, tok/sec: 102388.85, flops:107.47, batch-reuse:1
@ 343 train 6.6638 , allloss: 6.9200, dt: 1257.81ms, fracRes: 0.0064, norm(attn): 0.0378, norm(output): 0.1245, norm(x): 0.1237, norm(y): 1.0004, norm:2.2499, tok/sec: 104206.80, flops:109.38, batch-reuse:1
@ 344 train 6.6176 , allloss: 6.8700, dt: 1269.22ms, fracRes: 0.0064, norm(attn): 0.0381, norm(output): 0.1240, norm(x): 0.1237, norm(y): 1.0004, norm:1.5604, tok/sec: 103269.68, flops:108.40, batch-reuse:1
@ 345 train 6.6207 , allloss: 6.8750, dt: 1243.35ms, fracRes: 0.0064, norm(attn): 0.0398, norm(output): 0.1245, norm(x): 0.1237, norm(y): 1.0004, norm:2.0341, tok/sec: 105418.36, flops:110.65, batch-reuse:1
@ 346 train 6.7021 , allloss: 6.9549, dt: 1293.95ms, fracRes: 0.0065, norm(attn): 0.0415, norm(output): 0.1245, norm(x): 0.1237, norm(y): 1.0004, norm:1.8776, tok/sec: 101295.91, flops:106.32, batch-reuse:1
@ 347 train 6.6860 , allloss: 6.9330, dt: 1259.09ms, fracRes: 0.0065, norm(attn): 0.0415, norm(output): 0.1245, norm(x): 0.1241, norm(y): 1.0004, norm:1.3030, tok/sec: 104100.94, flops:109.27, batch-reuse:1
@ 348 train 6.6426 , allloss: 6.8909, dt: 1276.54ms, fracRes: 0.0065, norm(attn): 0.0386, norm(output): 0.1245, norm(x): 0.1240, norm(y): 1.0004, norm:1.4723, tok/sec: 102677.93, flops:107.77, batch-reuse:1
@ 349 train 6.6736 , allloss: 6.9203, dt: 1279.61ms, fracRes: 0.0065, norm(attn): 0.0391, norm(output): 0.1245, norm(x): 0.1241, norm(y): 1.0004, norm:1.4222, tok/sec: 102431.18, flops:107.52, batch-reuse:1
@ 350 train 6.7112 , allloss: 6.9433, dt: 1265.34ms, fracRes: 0.0064, norm(attn): 0.0410, norm(output): 0.1250, norm(x): 0.1246, norm(y): 1.0004, norm:1.5559, tok/sec: 103586.22, flops:108.73, batch-reuse:1
@ 351 train 6.7013 , allloss: 6.9330, dt: 1285.78ms, fracRes: 0.0064, norm(attn): 0.0435, norm(output): 0.1250, norm(x): 0.1247, norm(y): 1.0004, norm:1.7176, tok/sec: 101939.59, flops:107.00, batch-reuse:1
@ 352 train 6.7344 , allloss: 6.9685, dt: 1278.94ms, fracRes: 0.0064, norm(attn): 0.0420, norm(output): 0.1245, norm(x): 0.1243, norm(y): 1.0004, norm:1.6867, tok/sec: 102484.57, flops:107.57, batch-reuse:1
@ 353 train 6.6858 , allloss: 6.9232, dt: 1249.04ms, fracRes: 0.0064, norm(attn): 0.0403, norm(output): 0.1245, norm(x): 0.1240, norm(y): 1.0004, norm:1.8408, tok/sec: 104938.30, flops:110.15, batch-reuse:1
@ 354 train 6.6189 , allloss: 6.8514, dt: 1245.32ms, fracRes: 0.0064, norm(attn): 0.0386, norm(output): 0.1245, norm(x): 0.1243, norm(y): 1.0004, norm:1.4697, tok/sec: 105251.94, flops:110.48, batch-reuse:1
@ 355 train 6.6190 , allloss: 6.8499, dt: 1276.88ms, fracRes: 0.0066, norm(attn): 0.0420, norm(output): 0.1250, norm(x): 0.1246, norm(y): 1.0004, norm:2.6326, tok/sec: 102649.94, flops:107.74, batch-reuse:1
@ 356 train 6.7236 , allloss: 6.9591, dt: 1284.04ms, fracRes: 0.0065, norm(attn): 0.0437, norm(output): 0.1250, norm(x): 0.1248, norm(y): 1.0004, norm:1.9290, tok/sec: 102077.88, flops:107.14, batch-reuse:1
@ 357 train 6.6946 , allloss: 6.9291, dt: 1234.14ms, fracRes: 0.0065, norm(attn): 0.0417, norm(output): 0.1245, norm(x): 0.1241, norm(y): 1.0004, norm:1.9542, tok/sec: 106204.79, flops:111.48, batch-reuse:1
@ 358 train 6.6145 , allloss: 6.8412, dt: 1253.72ms, fracRes: 0.0064, norm(attn): 0.0398, norm(output): 0.1245, norm(x): 0.1243, norm(y): 1.0004, norm:2.4525, tok/sec: 104546.59, flops:109.74, batch-reuse:1
@ 359 train 6.8545 , allloss: 7.0865, dt: 1273.34ms, fracRes: 0.0065, norm(attn): 0.0474, norm(output): 0.1250, norm(x): 0.1254, norm(y): 1.0004, norm:2.2305, tok/sec: 102935.66, flops:108.04, batch-reuse:1
@ 360 train 6.6919 , allloss: 6.9168, dt: 1280.08ms, fracRes: 0.0067, norm(attn): 0.0425, norm(output): 0.1250, norm(x): 0.1250, norm(y): 1.0004, norm:2.3895, tok/sec: 102393.75, flops:107.48, batch-reuse:1
@ 361 train 6.6936 , allloss: 6.9164, dt: 1282.38ms, fracRes: 0.0067, norm(attn): 0.0427, norm(output): 0.1250, norm(x): 0.1247, norm(y): 1.0004, norm:2.6149, tok/sec: 102209.91, flops:107.28, batch-reuse:1
@ 362 train 6.5787 , allloss: 6.8005, dt: 1285.94ms, fracRes: 0.0066, norm(attn): 0.0403, norm(output): 0.1250, norm(x): 0.1248, norm(y): 1.0004, norm:2.0449, tok/sec: 101926.79, flops:106.99, batch-reuse:1
@ 363 train 6.6142 , allloss: 6.8342, dt: 1240.82ms, fracRes: 0.0067, norm(attn): 0.0435, norm(output): 0.1250, norm(x): 0.1256, norm(y): 1.0004, norm:1.5542, tok/sec: 105633.38, flops:110.88, batch-reuse:1
@ 364 train 6.6553 , allloss: 6.8806, dt: 1258.02ms, fracRes: 0.0066, norm(attn): 0.0405, norm(output): 0.1250, norm(x): 0.1254, norm(y): 1.0004, norm:2.2294, tok/sec: 104189.33, flops:109.36, batch-reuse:1
@ 365 train 6.6400 , allloss: 6.8645, dt: 1255.06ms, fracRes: 0.0066, norm(attn): 0.0420, norm(output): 0.1250, norm(x): 0.1256, norm(y): 1.0004, norm:1.9379, tok/sec: 104435.05, flops:109.62, batch-reuse:1
@ 366 train 6.6895 , allloss: 6.9072, dt: 1283.87ms, fracRes: 0.0066, norm(attn): 0.0415, norm(output): 0.1250, norm(x): 0.1257, norm(y): 1.0004, norm:1.9324, tok/sec: 102091.15, flops:107.16, batch-reuse:1
@ 367 train 6.5817 , allloss: 6.8039, dt: 1271.76ms, fracRes: 0.0065, norm(attn): 0.0405, norm(output): 0.1260, norm(x): 0.1255, norm(y): 1.0004, norm:2.0149, tok/sec: 103063.67, flops:108.18, batch-reuse:1
@ 368 train 6.7032 , allloss: 6.9338, dt: 1257.10ms, fracRes: 0.0065, norm(attn): 0.0398, norm(output): 0.1250, norm(x): 0.1256, norm(y): 1.0004, norm:2.0088, tok/sec: 104264.99, flops:109.44, batch-reuse:1
@ 369 train 6.6343 , allloss: 6.8643, dt: 1276.95ms, fracRes: 0.0065, norm(attn): 0.0393, norm(output): 0.1250, norm(x): 0.1258, norm(y): 1.0004, norm:2.1604, tok/sec: 102644.78, flops:107.74, batch-reuse:1
@ 370 train 6.7405 , allloss: 6.9633, dt: 1278.64ms, fracRes: 0.0066, norm(attn): 0.0405, norm(output): 0.1260, norm(x): 0.1262, norm(y): 1.0004, norm:1.5286, tok/sec: 102508.66, flops:107.60, batch-reuse:1
@ 371 train 6.6628 , allloss: 6.8820, dt: 1258.00ms, fracRes: 0.0066, norm(attn): 0.0400, norm(output): 0.1260, norm(x): 0.1263, norm(y): 1.0004, norm:1.1657, tok/sec: 104190.75, flops:109.36, batch-reuse:1
@ 372 train 6.7454 , allloss: 6.9658, dt: 1260.80ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.1260, norm(x): 0.1263, norm(y): 1.0004, norm:1.5488, tok/sec: 103959.66, flops:109.12, batch-reuse:1
@ 373 train 6.7418 , allloss: 6.9560, dt: 1248.27ms, fracRes: 0.0067, norm(attn): 0.0420, norm(output): 0.1260, norm(x): 0.1268, norm(y): 1.0004, norm:1.5863, tok/sec: 105002.56, flops:110.21, batch-reuse:1
@ 374 train 6.7311 , allloss: 6.9408, dt: 1268.69ms, fracRes: 0.0067, norm(attn): 0.0415, norm(output): 0.1260, norm(x): 0.1269, norm(y): 1.0004, norm:2.0100, tok/sec: 103312.84, flops:108.44, batch-reuse:1
@ 375 train 6.8038 , allloss: 7.0168, dt: 1262.29ms, fracRes: 0.0067, norm(attn): 0.0430, norm(output): 0.1260, norm(x): 0.1269, norm(y): 1.0004, norm:1.3377, tok/sec: 103836.99, flops:108.99, batch-reuse:1
@ 376 train 6.8617 , allloss: 7.0820, dt: 1257.05ms, fracRes: 0.0066, norm(attn): 0.0447, norm(output): 0.1260, norm(x): 0.1268, norm(y): 1.0004, norm:1.4016, tok/sec: 104269.79, flops:109.44, batch-reuse:1
@ 377 train 6.7394 , allloss: 6.9497, dt: 1269.39ms, fracRes: 0.0067, norm(attn): 0.0444, norm(output): 0.1260, norm(x): 0.1273, norm(y): 1.0004, norm:1.9962, tok/sec: 103255.63, flops:108.38, batch-reuse:1
@ 378 train 6.6751 , allloss: 6.8800, dt: 1258.83ms, fracRes: 0.0068, norm(attn): 0.0427, norm(output): 0.1260, norm(x): 0.1271, norm(y): 1.0004, norm:1.5308, tok/sec: 104122.06, flops:109.29, batch-reuse:1
@ 379 train 6.7773 , allloss: 6.9843, dt: 1251.54ms, fracRes: 0.0069, norm(attn): 0.0427, norm(output): 0.1270, norm(x): 0.1273, norm(y): 1.0004, norm:1.4424, tok/sec: 104728.90, flops:109.93, batch-reuse:1
@ 380 train 6.8472 , allloss: 7.0539, dt: 1262.69ms, fracRes: 0.0068, norm(attn): 0.0457, norm(output): 0.1270, norm(x): 0.1276, norm(y): 1.0004, norm:1.8593, tok/sec: 103803.56, flops:108.96, batch-reuse:1
@ 381 train 6.7620 , allloss: 6.9627, dt: 1251.86ms, fracRes: 0.0070, norm(attn): 0.0439, norm(output): 0.1260, norm(x): 0.1271, norm(y): 1.0004, norm:1.7153, tok/sec: 104701.65, flops:109.90, batch-reuse:1
@ 382 train 6.7088 , allloss: 6.9046, dt: 1266.65ms, fracRes: 0.0070, norm(attn): 0.0437, norm(output): 0.1260, norm(x): 0.1273, norm(y): 1.0004, norm:1.5308, tok/sec: 103479.47, flops:108.62, batch-reuse:1
@ 383 train 6.7076 , allloss: 6.9082, dt: 1265.63ms, fracRes: 0.0069, norm(attn): 0.0439, norm(output): 0.1260, norm(x): 0.1272, norm(y): 1.0004, norm:2.6569, tok/sec: 103563.00, flops:108.70, batch-reuse:1
@ 384 train 6.7030 , allloss: 6.9092, dt: 1253.49ms, fracRes: 0.0069, norm(attn): 0.0437, norm(output): 0.1260, norm(x): 0.1271, norm(y): 1.0004, norm:1.3727, tok/sec: 104565.58, flops:109.76, batch-reuse:1
@ 385 train 6.6601 , allloss: 6.8601, dt: 1289.44ms, fracRes: 0.0070, norm(attn): 0.0417, norm(output): 0.1260, norm(x): 0.1271, norm(y): 1.0004, norm:1.7601, tok/sec: 101650.34, flops:106.70, batch-reuse:1
@ 386 train 6.7723 , allloss: 6.9652, dt: 1244.91ms, fracRes: 0.0070, norm(attn): 0.0427, norm(output): 0.1260, norm(x): 0.1279, norm(y): 1.0004, norm:2.5306, tok/sec: 105286.06, flops:110.51, batch-reuse:1
@ 387 train 6.7014 , allloss: 6.8970, dt: 1254.65ms, fracRes: 0.0071, norm(attn): 0.0444, norm(output): 0.1270, norm(x): 0.1283, norm(y): 1.0004, norm:1.6807, tok/sec: 104469.18, flops:109.65, batch-reuse:1
@ 388 train 6.6133 , allloss: 6.8113, dt: 1242.86ms, fracRes: 0.0071, norm(attn): 0.0417, norm(output): 0.1260, norm(x): 0.1276, norm(y): 1.0004, norm:1.9379, tok/sec: 105460.18, flops:110.69, batch-reuse:1
@ 389 train 6.6749 , allloss: 6.8687, dt: 1249.39ms, fracRes: 0.0071, norm(attn): 0.0432, norm(output): 0.1270, norm(x): 0.1280, norm(y): 1.0003, norm:1.2093, tok/sec: 104909.11, flops:110.12, batch-reuse:1
@ 390 train 6.7254 , allloss: 6.9216, dt: 1267.27ms, fracRes: 0.0072, norm(attn): 0.0457, norm(output): 0.1270, norm(x): 0.1280, norm(y): 1.0004, norm:1.3319, tok/sec: 103428.76, flops:108.56, batch-reuse:1
@ 391 train 6.6599 , allloss: 6.8553, dt: 1268.88ms, fracRes: 0.0073, norm(attn): 0.0439, norm(output): 0.1260, norm(x): 0.1276, norm(y): 1.0004, norm:2.1087, tok/sec: 103297.29, flops:108.42, batch-reuse:1
@ 392 train 6.7670 , allloss: 6.9605, dt: 1249.84ms, fracRes: 0.0071, norm(attn): 0.0459, norm(output): 0.1279, norm(x): 0.1288, norm(y): 1.0003, norm:1.9546, tok/sec: 104870.80, flops:110.08, batch-reuse:1
@ 393 train 6.6891 , allloss: 6.8840, dt: 1251.00ms, fracRes: 0.0070, norm(attn): 0.0442, norm(output): 0.1270, norm(x): 0.1281, norm(y): 1.0003, norm:2.8180, tok/sec: 104773.87, flops:109.97, batch-reuse:1
@ 394 train 6.6670 , allloss: 6.8576, dt: 1255.61ms, fracRes: 0.0072, norm(attn): 0.0435, norm(output): 0.1270, norm(x): 0.1282, norm(y): 1.0003, norm:1.4611, tok/sec: 104389.06, flops:109.57, batch-reuse:1
@ 395 train 6.7755 , allloss: 6.9643, dt: 1248.71ms, fracRes: 0.0073, norm(attn): 0.0496, norm(output): 0.1279, norm(x): 0.1290, norm(y): 1.0004, norm:2.2585, tok/sec: 104965.77, flops:110.18, batch-reuse:1
@ 396 train 6.6002 , allloss: 6.7815, dt: 1276.28ms, fracRes: 0.0073, norm(attn): 0.0469, norm(output): 0.1270, norm(x): 0.1291, norm(y): 1.0004, norm:2.5259, tok/sec: 102698.20, flops:107.80, batch-reuse:1
@ 397 train 6.7099 , allloss: 6.8989, dt: 1270.03ms, fracRes: 0.0071, norm(attn): 0.0461, norm(output): 0.1270, norm(x): 0.1287, norm(y): 1.0003, norm:1.8202, tok/sec: 103204.25, flops:108.33, batch-reuse:1
@ 398 train 6.7028 , allloss: 6.8910, dt: 1254.86ms, fracRes: 0.0072, norm(attn): 0.0469, norm(output): 0.1270, norm(x): 0.1285, norm(y): 1.0003, norm:1.5527, tok/sec: 104451.84, flops:109.64, batch-reuse:1
@ 399 train 6.6769 , allloss: 6.8625, dt: 1289.51ms, fracRes: 0.0073, norm(attn): 0.0454, norm(output): 0.1270, norm(x): 0.1285, norm(y): 1.0003, norm:1.3511, tok/sec: 101644.47, flops:106.69, batch-reuse:1
@ 400 train 6.7189 , allloss: 6.9045, dt: 1255.22ms, fracRes: 0.0072, norm(attn): 0.0449, norm(output): 0.1270, norm(x): 0.1290, norm(y): 1.0003, norm:1.7788, tok/sec: 104421.22, flops:109.60, batch-reuse:1
@ 401 train 6.7465 , allloss: 6.9354, dt: 1263.99ms, fracRes: 0.0070, norm(attn): 0.0481, norm(output): 0.1279, norm(x): 0.1296, norm(y): 1.0003, norm:2.1384, tok/sec: 103696.76, flops:108.84, batch-reuse:1
@ 402 train 6.6918 , allloss: 6.8864, dt: 1257.31ms, fracRes: 0.0070, norm(attn): 0.0430, norm(output): 0.1270, norm(x): 0.1287, norm(y): 1.0003, norm:1.5306, tok/sec: 104248.08, flops:109.42, batch-reuse:1
@ 403 train 6.7199 , allloss: 6.9060, dt: 1281.75ms, fracRes: 0.0073, norm(attn): 0.0454, norm(output): 0.1289, norm(x): 0.1291, norm(y): 1.0003, norm:1.2924, tok/sec: 102260.52, flops:107.34, batch-reuse:1
@ 404 train 6.6411 , allloss: 6.8209, dt: 1275.69ms, fracRes: 0.0074, norm(attn): 0.0452, norm(output): 0.1279, norm(x): 0.1290, norm(y): 1.0003, norm:2.3120, tok/sec: 102746.19, flops:107.85, batch-reuse:1
@ 405 train 6.6594 , allloss: 6.8409, dt: 1268.86ms, fracRes: 0.0074, norm(attn): 0.0442, norm(output): 0.1270, norm(x): 0.1288, norm(y): 1.0003, norm:1.8008, tok/sec: 103298.98, flops:108.43, batch-reuse:1
@ 406 train 6.6499 , allloss: 6.8338, dt: 1255.83ms, fracRes: 0.0073, norm(attn): 0.0444, norm(output): 0.1270, norm(x): 0.1294, norm(y): 1.0003, norm:1.3237, tok/sec: 104370.85, flops:109.55, batch-reuse:1
@ 407 train 6.6301 , allloss: 6.8133, dt: 1257.91ms, fracRes: 0.0074, norm(attn): 0.0452, norm(output): 0.1309, norm(x): 0.1297, norm(y): 1.0003, norm:1.5396, tok/sec: 104197.84, flops:109.37, batch-reuse:1
@ 408 train 6.6577 , allloss: 6.8357, dt: 1256.43ms, fracRes: 0.0074, norm(attn): 0.0464, norm(output): 0.1309, norm(x): 0.1297, norm(y): 1.0003, norm:1.6342, tok/sec: 104321.08, flops:109.50, batch-reuse:1
@ 409 train 6.5776 , allloss: 6.7578, dt: 1265.98ms, fracRes: 0.0074, norm(attn): 0.0459, norm(output): 0.1299, norm(x): 0.1295, norm(y): 1.0003, norm:1.7742, tok/sec: 103534.18, flops:108.67, batch-reuse:1
@ 410 train 6.6294 , allloss: 6.8067, dt: 1262.89ms, fracRes: 0.0074, norm(attn): 0.0464, norm(output): 0.1289, norm(x): 0.1298, norm(y): 1.0003, norm:1.4819, tok/sec: 103786.94, flops:108.94, batch-reuse:1
@ 411 train 6.6384 , allloss: 6.8156, dt: 1262.91ms, fracRes: 0.0074, norm(attn): 0.0464, norm(output): 0.1309, norm(x): 0.1299, norm(y): 1.0003, norm:1.4739, tok/sec: 103785.36, flops:108.94, batch-reuse:1
@ 412 train 6.6422 , allloss: 6.8258, dt: 1258.39ms, fracRes: 0.0074, norm(attn): 0.0459, norm(output): 0.1279, norm(x): 0.1294, norm(y): 1.0003, norm:1.6501, tok/sec: 104158.77, flops:109.33, batch-reuse:1
@ 413 train 6.3052 , allloss: 6.4882, dt: 1299.39ms, fracRes: 0.0073, norm(attn): 0.0471, norm(output): 0.1299, norm(x): 0.1293, norm(y): 1.0003, norm:2.5796, tok/sec: 100872.29, flops:105.88, batch-reuse:1
@ 414 train 6.6145 , allloss: 6.7876, dt: 1271.03ms, fracRes: 0.0074, norm(attn): 0.0491, norm(output): 0.1309, norm(x): 0.1298, norm(y): 1.0003, norm:2.1158, tok/sec: 103122.88, flops:108.24, batch-reuse:1
@ 415 train 6.5663 , allloss: 6.7383, dt: 1264.32ms, fracRes: 0.0074, norm(attn): 0.0481, norm(output): 0.1309, norm(x): 0.1302, norm(y): 1.0003, norm:2.6014, tok/sec: 103670.08, flops:108.82, batch-reuse:1
@ 416 train 6.6981 , allloss: 6.8711, dt: 1251.42ms, fracRes: 0.0074, norm(attn): 0.0466, norm(output): 0.1309, norm(x): 0.1303, norm(y): 1.0002, norm:1.7020, tok/sec: 104738.71, flops:109.94, batch-reuse:1
@ 417 train 6.5793 , allloss: 6.7550, dt: 1285.61ms, fracRes: 0.0072, norm(attn): 0.0474, norm(output): 0.1309, norm(x): 0.1301, norm(y): 1.0002, norm:2.2548, tok/sec: 101952.84, flops:107.01, batch-reuse:1
@ 418 train 6.6617 , allloss: 6.8383, dt: 1265.46ms, fracRes: 0.0073, norm(attn): 0.0483, norm(output): 0.1309, norm(x): 0.1302, norm(y): 1.0002, norm:1.6814, tok/sec: 103576.92, flops:108.72, batch-reuse:1
@ 419 train 6.6049 , allloss: 6.7797, dt: 1306.84ms, fracRes: 0.0075, norm(attn): 0.0457, norm(output): 0.1309, norm(x): 0.1306, norm(y): 1.0002, norm:2.4896, tok/sec: 100297.23, flops:105.28, batch-reuse:1
@ 420 train 6.5525 , allloss: 6.7228, dt: 1268.70ms, fracRes: 0.0076, norm(attn): 0.0464, norm(output): 0.1318, norm(x): 0.1309, norm(y): 1.0002, norm:1.5937, tok/sec: 103312.18, flops:108.44, batch-reuse:1
@ 421 train 6.7301 , allloss: 6.9070, dt: 1246.14ms, fracRes: 0.0077, norm(attn): 0.0493, norm(output): 0.1318, norm(x): 0.1312, norm(y): 1.0002, norm:2.7208, tok/sec: 105182.70, flops:110.40, batch-reuse:1
@ 422 train 6.6280 , allloss: 6.8115, dt: 1267.24ms, fracRes: 0.0076, norm(attn): 0.0457, norm(output): 0.1318, norm(x): 0.1307, norm(y): 1.0002, norm:1.9002, tok/sec: 103430.92, flops:108.56, batch-reuse:1
@ 423 train 6.6644 , allloss: 6.8435, dt: 1261.05ms, fracRes: 0.0075, norm(attn): 0.0476, norm(output): 0.1328, norm(x): 0.1312, norm(y): 1.0002, norm:1.9331, tok/sec: 103938.66, flops:109.10, batch-reuse:1
@ 424 train 6.6009 , allloss: 6.7706, dt: 1285.54ms, fracRes: 0.0074, norm(attn): 0.0469, norm(output): 0.1318, norm(x): 0.1313, norm(y): 1.0002, norm:1.7737, tok/sec: 101958.36, flops:107.02, batch-reuse:1
@ 425 train 6.6817 , allloss: 6.8468, dt: 1259.02ms, fracRes: 0.0075, norm(attn): 0.0474, norm(output): 0.1318, norm(x): 0.1316, norm(y): 1.0002, norm:1.5623, tok/sec: 104106.03, flops:109.27, batch-reuse:1
@ 426 train 6.5244 , allloss: 6.6931, dt: 1280.21ms, fracRes: 0.0075, norm(attn): 0.0447, norm(output): 0.1318, norm(x): 0.1314, norm(y): 1.0002, norm:1.8837, tok/sec: 102383.60, flops:107.47, batch-reuse:1
@ 427 train 6.5986 , allloss: 6.7740, dt: 1255.23ms, fracRes: 0.0075, norm(attn): 0.0454, norm(output): 0.1318, norm(x): 0.1312, norm(y): 1.0002, norm:2.1354, tok/sec: 104420.55, flops:109.60, batch-reuse:1
@ 428 train 6.5218 , allloss: 6.6966, dt: 1274.11ms, fracRes: 0.0076, norm(attn): 0.0457, norm(output): 0.1318, norm(x): 0.1314, norm(y): 1.0002, norm:1.2646, tok/sec: 102873.04, flops:107.98, batch-reuse:1
@ 429 train 6.4816 , allloss: 6.6486, dt: 1251.51ms, fracRes: 0.0076, norm(attn): 0.0464, norm(output): 0.1318, norm(x): 0.1318, norm(y): 1.0002, norm:1.6366, tok/sec: 104731.07, flops:109.93, batch-reuse:1
@ 430 train 6.5760 , allloss: 6.7417, dt: 1269.55ms, fracRes: 0.0076, norm(attn): 0.0461, norm(output): 0.1318, norm(x): 0.1315, norm(y): 1.0002, norm:1.4764, tok/sec: 103242.70, flops:108.37, batch-reuse:1
@ 431 train 6.5454 , allloss: 6.7119, dt: 1244.40ms, fracRes: 0.0075, norm(attn): 0.0481, norm(output): 0.1328, norm(x): 0.1321, norm(y): 1.0002, norm:1.3078, tok/sec: 105329.23, flops:110.56, batch-reuse:1
@ 432 train 6.6045 , allloss: 6.7695, dt: 1260.43ms, fracRes: 0.0076, norm(attn): 0.0479, norm(output): 0.1318, norm(x): 0.1319, norm(y): 1.0002, norm:1.3891, tok/sec: 103989.66, flops:109.15, batch-reuse:1
@ 433 train 6.6057 , allloss: 6.7682, dt: 1273.32ms, fracRes: 0.0078, norm(attn): 0.0479, norm(output): 0.1318, norm(x): 0.1316, norm(y): 1.0002, norm:1.3100, tok/sec: 102937.42, flops:108.05, batch-reuse:1
@ 434 train 6.6268 , allloss: 6.7888, dt: 1262.80ms, fracRes: 0.0079, norm(attn): 0.0483, norm(output): 0.1318, norm(x): 0.1317, norm(y): 1.0002, norm:1.4202, tok/sec: 103794.84, flops:108.95, batch-reuse:1
@ 435 train 6.5463 , allloss: 6.7031, dt: 1262.20ms, fracRes: 0.0081, norm(attn): 0.0505, norm(output): 0.1328, norm(x): 0.1321, norm(y): 1.0002, norm:1.7465, tok/sec: 103843.82, flops:109.00, batch-reuse:1
@ 436 train 6.6901 , allloss: 6.8494, dt: 1242.91ms, fracRes: 0.0084, norm(attn): 0.0518, norm(output): 0.1318, norm(x): 0.1316, norm(y): 1.0002, norm:1.8656, tok/sec: 105455.87, flops:110.69, batch-reuse:1
@ 437 train 6.5808 , allloss: 6.7408, dt: 1273.73ms, fracRes: 0.0082, norm(attn): 0.0493, norm(output): 0.1309, norm(x): 0.1310, norm(y): 1.0002, norm:1.6428, tok/sec: 102904.20, flops:108.01, batch-reuse:1
@ 438 train 6.6630 , allloss: 6.8250, dt: 1264.32ms, fracRes: 0.0086, norm(attn): 0.0547, norm(output): 0.1318, norm(x): 0.1319, norm(y): 1.0002, norm:1.6374, tok/sec: 103669.57, flops:108.81, batch-reuse:1
@ 439 train 6.4920 , allloss: 6.6485, dt: 1293.70ms, fracRes: 0.0086, norm(attn): 0.0488, norm(output): 0.1328, norm(x): 0.1323, norm(y): 1.0002, norm:1.8406, tok/sec: 101315.72, flops:106.34, batch-reuse:1
@ 440 train 6.4626 , allloss: 6.6193, dt: 1259.76ms, fracRes: 0.0085, norm(attn): 0.0510, norm(output): 0.1328, norm(x): 0.1328, norm(y): 1.0002, norm:1.5539, tok/sec: 104045.10, flops:109.21, batch-reuse:1
@ 441 train 6.5352 , allloss: 6.6925, dt: 1244.78ms, fracRes: 0.0086, norm(attn): 0.0505, norm(output): 0.1328, norm(x): 0.1324, norm(y): 1.0002, norm:1.3709, tok/sec: 105296.91, flops:110.52, batch-reuse:1
@ 442 train 6.6130 , allloss: 6.7680, dt: 1265.70ms, fracRes: 0.0085, norm(attn): 0.0522, norm(output): 0.1328, norm(x): 0.1326, norm(y): 1.0001, norm:2.0680, tok/sec: 103557.31, flops:108.70, batch-reuse:1
@ 443 train 6.6171 , allloss: 6.7731, dt: 1254.36ms, fracRes: 0.0083, norm(attn): 0.0532, norm(output): 0.1328, norm(x): 0.1324, norm(y): 1.0001, norm:1.8491, tok/sec: 104493.17, flops:109.68, batch-reuse:1
@ 444 train 6.5966 , allloss: 6.7564, dt: 1250.55ms, fracRes: 0.0084, norm(attn): 0.0505, norm(output): 0.1318, norm(x): 0.1318, norm(y): 1.0001, norm:1.5165, tok/sec: 104811.50, flops:110.01, batch-reuse:1
@ 445 train 6.4911 , allloss: 6.6481, dt: 1260.26ms, fracRes: 0.0082, norm(attn): 0.0493, norm(output): 0.1328, norm(x): 0.1323, norm(y): 1.0001, norm:1.2812, tok/sec: 104003.61, flops:109.17, batch-reuse:1
@ 446 train 6.5093 , allloss: 6.6679, dt: 1256.01ms, fracRes: 0.0081, norm(attn): 0.0527, norm(output): 0.1328, norm(x): 0.1332, norm(y): 1.0001, norm:1.2762, tok/sec: 104355.95, flops:109.54, batch-reuse:1
@ 447 train 6.5325 , allloss: 6.6899, dt: 1235.78ms, fracRes: 0.0081, norm(attn): 0.0498, norm(output): 0.1328, norm(x): 0.1328, norm(y): 1.0001, norm:1.2471, tok/sec: 106064.55, flops:111.33, batch-reuse:1
@ 448 train 6.5030 , allloss: 6.6577, dt: 1271.73ms, fracRes: 0.0084, norm(attn): 0.0505, norm(output): 0.1328, norm(x): 0.1326, norm(y): 1.0001, norm:1.2782, tok/sec: 103066.24, flops:108.18, batch-reuse:1
@ 449 train 6.4578 , allloss: 6.6096, dt: 1263.55ms, fracRes: 0.0085, norm(attn): 0.0488, norm(output): 0.1328, norm(x): 0.1326, norm(y): 1.0001, norm:1.3371, tok/sec: 103733.21, flops:108.88, batch-reuse:1
@ 450 train 6.5268 , allloss: 6.6771, dt: 1243.59ms, fracRes: 0.0086, norm(attn): 0.0508, norm(output): 0.1328, norm(x): 0.1331, norm(y): 1.0001, norm:1.1341, tok/sec: 105398.21, flops:110.63, batch-reuse:1
@ 451 train 6.5232 , allloss: 6.6703, dt: 1259.05ms, fracRes: 0.0087, norm(attn): 0.0498, norm(output): 0.1328, norm(x): 0.1330, norm(y): 1.0001, norm:1.5113, tok/sec: 104103.70, flops:109.27, batch-reuse:1
@ 452 train 6.5460 , allloss: 6.6991, dt: 1258.76ms, fracRes: 0.0089, norm(attn): 0.0486, norm(output): 0.1328, norm(x): 0.1327, norm(y): 1.0001, norm:1.6264, tok/sec: 104127.78, flops:109.30, batch-reuse:1
@ 453 train 6.5379 , allloss: 6.6906, dt: 1256.43ms, fracRes: 0.0093, norm(attn): 0.0483, norm(output): 0.1318, norm(x): 0.1322, norm(y): 1.0001, norm:1.4132, tok/sec: 104321.06, flops:109.50, batch-reuse:1
@ 454 train 6.5285 , allloss: 6.6759, dt: 1243.68ms, fracRes: 0.0092, norm(attn): 0.0503, norm(output): 0.1328, norm(x): 0.1326, norm(y): 1.0001, norm:1.9013, tok/sec: 105390.07, flops:110.62, batch-reuse:1
@ 455 train 6.6071 , allloss: 6.7543, dt: 1270.10ms, fracRes: 0.0092, norm(attn): 0.0515, norm(output): 0.1328, norm(x): 0.1330, norm(y): 1.0001, norm:1.4523, tok/sec: 103198.40, flops:108.32, batch-reuse:1
@ 456 train 6.5332 , allloss: 6.6808, dt: 1232.51ms, fracRes: 0.0089, norm(attn): 0.0493, norm(output): 0.1328, norm(x): 0.1326, norm(y): 1.0000, norm:1.2759, tok/sec: 106345.21, flops:111.62, batch-reuse:1
@ 457 train 6.6269 , allloss: 6.7760, dt: 1275.41ms, fracRes: 0.0090, norm(attn): 0.0525, norm(output): 0.1328, norm(x): 0.1330, norm(y): 1.0000, norm:1.2794, tok/sec: 102768.70, flops:107.87, batch-reuse:1
@ 458 train 6.6047 , allloss: 6.7494, dt: 1257.52ms, fracRes: 0.0093, norm(attn): 0.0564, norm(output): 0.1328, norm(x): 0.1333, norm(y): 1.0001, norm:1.5717, tok/sec: 104230.33, flops:109.40, batch-reuse:1
@ 459 train 6.5088 , allloss: 6.6552, dt: 1283.18ms, fracRes: 0.0095, norm(attn): 0.0532, norm(output): 0.1328, norm(x): 0.1330, norm(y): 1.0000, norm:1.4299, tok/sec: 102146.48, flops:107.22, batch-reuse:1
@ 460 train 6.4907 , allloss: 6.6359, dt: 1264.20ms, fracRes: 0.0092, norm(attn): 0.0515, norm(output): 0.1328, norm(x): 0.1335, norm(y): 1.0000, norm:1.6016, tok/sec: 103680.17, flops:108.83, batch-reuse:1
@ 461 train 6.5086 , allloss: 6.6543, dt: 1293.02ms, fracRes: 0.0090, norm(attn): 0.0515, norm(output): 0.1328, norm(x): 0.1334, norm(y): 1.0000, norm:1.4274, tok/sec: 101368.78, flops:106.40, batch-reuse:1
@ 462 train 6.5752 , allloss: 6.7213, dt: 1268.21ms, fracRes: 0.0089, norm(attn): 0.0522, norm(output): 0.1328, norm(x): 0.1330, norm(y): 1.0000, norm:1.4765, tok/sec: 103351.90, flops:108.48, batch-reuse:1
@ 463 train 6.5612 , allloss: 6.7054, dt: 1279.65ms, fracRes: 0.0088, norm(attn): 0.0525, norm(output): 0.1328, norm(x): 0.1330, norm(y): 1.0000, norm:1.5562, tok/sec: 102428.22, flops:107.51, batch-reuse:1
@ 464 train 6.4811 , allloss: 6.6233, dt: 1262.05ms, fracRes: 0.0086, norm(attn): 0.0537, norm(output): 0.1328, norm(x): 0.1330, norm(y): 1.0000, norm:2.5510, tok/sec: 103856.18, flops:109.01, batch-reuse:1
@ 465 train 6.4341 , allloss: 6.5757, dt: 1250.68ms, fracRes: 0.0088, norm(attn): 0.0527, norm(output): 0.1328, norm(x): 0.1333, norm(y): 1.0000, norm:1.1470, tok/sec: 104800.83, flops:110.00, batch-reuse:1
@ 466 train 6.5388 , allloss: 6.6828, dt: 1254.06ms, fracRes: 0.0090, norm(attn): 0.0518, norm(output): 0.1328, norm(x): 0.1337, norm(y): 1.0000, norm:2.4412, tok/sec: 104517.84, flops:109.71, batch-reuse:1
@ 467 train 6.4378 , allloss: 6.5803, dt: 1267.69ms, fracRes: 0.0090, norm(attn): 0.0498, norm(output): 0.1328, norm(x): 0.1332, norm(y): 1.0000, norm:1.9088, tok/sec: 103394.31, flops:108.53, batch-reuse:1
@ 468 train 6.3925 , allloss: 6.5336, dt: 1232.20ms, fracRes: 0.0091, norm(attn): 0.0505, norm(output): 0.1328, norm(x): 0.1335, norm(y): 1.0000, norm:1.6487, tok/sec: 106371.96, flops:111.65, batch-reuse:1
@ 469 train 6.3982 , allloss: 6.5397, dt: 1267.82ms, fracRes: 0.0092, norm(attn): 0.0513, norm(output): 0.1328, norm(x): 0.1340, norm(y): 1.0000, norm:1.7457, tok/sec: 103383.38, flops:108.51, batch-reuse:1
@ 470 train 6.4860 , allloss: 6.6272, dt: 1239.48ms, fracRes: 0.0095, norm(attn): 0.0530, norm(output): 0.1338, norm(x): 0.1340, norm(y): 1.0000, norm:1.5566, tok/sec: 105747.59, flops:111.00, batch-reuse:1
@ 471 train 6.3433 , allloss: 6.4817, dt: 1245.29ms, fracRes: 0.0093, norm(attn): 0.0532, norm(output): 0.1338, norm(x): 0.1342, norm(y): 0.9999, norm:1.5210, tok/sec: 105254.21, flops:110.48, batch-reuse:1
@ 472 train 6.4880 , allloss: 6.6277, dt: 1250.98ms, fracRes: 0.0094, norm(attn): 0.0530, norm(output): 0.1338, norm(x): 0.1345, norm(y): 0.9999, norm:1.3592, tok/sec: 104775.60, flops:109.98, batch-reuse:1
@ 473 train 6.4502 , allloss: 6.5882, dt: 1264.02ms, fracRes: 0.0099, norm(attn): 0.0532, norm(output): 0.1328, norm(x): 0.1341, norm(y): 0.9999, norm:1.4142, tok/sec: 103694.58, flops:108.84, batch-reuse:1
@ 474 train 6.3596 , allloss: 6.4963, dt: 1275.28ms, fracRes: 0.0101, norm(attn): 0.0520, norm(output): 0.1328, norm(x): 0.1338, norm(y): 0.9999, norm:1.3594, tok/sec: 102779.36, flops:107.88, batch-reuse:1
@ 475 train 6.3880 , allloss: 6.5265, dt: 1282.75ms, fracRes: 0.0098, norm(attn): 0.0496, norm(output): 0.1328, norm(x): 0.1339, norm(y): 0.9999, norm:2.0583, tok/sec: 102180.86, flops:107.25, batch-reuse:1
@ 476 train 6.3938 , allloss: 6.5303, dt: 1310.80ms, fracRes: 0.0096, norm(attn): 0.0515, norm(output): 0.1328, norm(x): 0.1339, norm(y): 0.9999, norm:1.3917, tok/sec: 99994.20, flops:104.96, batch-reuse:1
@ 477 train 6.4794 , allloss: 6.6154, dt: 1274.99ms, fracRes: 0.0095, norm(attn): 0.0530, norm(output): 0.1338, norm(x): 0.1343, norm(y): 0.9999, norm:1.5107, tok/sec: 102802.77, flops:107.91, batch-reuse:1
@ 478 train 6.4156 , allloss: 6.5530, dt: 1263.89ms, fracRes: 0.0091, norm(attn): 0.0530, norm(output): 0.1338, norm(x): 0.1344, norm(y): 0.9999, norm:1.1897, tok/sec: 103704.95, flops:108.85, batch-reuse:1
@ 479 train 6.5489 , allloss: 6.6898, dt: 1274.92ms, fracRes: 0.0092, norm(attn): 0.0535, norm(output): 0.1328, norm(x): 0.1339, norm(y): 0.9999, norm:2.1370, tok/sec: 102808.29, flops:107.91, batch-reuse:1
@ 480 train 6.3561 , allloss: 6.4958, dt: 1269.87ms, fracRes: 0.0092, norm(attn): 0.0515, norm(output): 0.1328, norm(x): 0.1339, norm(y): 0.9999, norm:1.7861, tok/sec: 103217.11, flops:108.34, batch-reuse:1
@ 481 train 6.4527 , allloss: 6.5865, dt: 1244.83ms, fracRes: 0.0096, norm(attn): 0.0535, norm(output): 0.1338, norm(x): 0.1345, norm(y): 0.9999, norm:1.3263, tok/sec: 105293.42, flops:110.52, batch-reuse:1
@ 482 train 6.4163 , allloss: 6.5474, dt: 1280.88ms, fracRes: 0.0095, norm(attn): 0.0522, norm(output): 0.1338, norm(x): 0.1347, norm(y): 0.9999, norm:1.5165, tok/sec: 102329.75, flops:107.41, batch-reuse:1
@ 483 train 6.4884 , allloss: 6.6215, dt: 1264.29ms, fracRes: 0.0096, norm(attn): 0.0530, norm(output): 0.1338, norm(x): 0.1343, norm(y): 0.9999, norm:1.2753, tok/sec: 103672.57, flops:108.82, batch-reuse:1
@ 484 train 6.3742 , allloss: 6.5043, dt: 1284.55ms, fracRes: 0.0101, norm(attn): 0.0547, norm(output): 0.1338, norm(x): 0.1340, norm(y): 0.9999, norm:1.3094, tok/sec: 102037.63, flops:107.10, batch-reuse:1
@ 485 train 6.3011 , allloss: 6.4312, dt: 1263.16ms, fracRes: 0.0101, norm(attn): 0.0544, norm(output): 0.1338, norm(x): 0.1344, norm(y): 0.9999, norm:1.5320, tok/sec: 103764.83, flops:108.91, batch-reuse:1
@ 486 train 6.4963 , allloss: 6.6294, dt: 1259.35ms, fracRes: 0.0102, norm(attn): 0.0520, norm(output): 0.1328, norm(x): 0.1344, norm(y): 0.9999, norm:1.7017, tok/sec: 104079.42, flops:109.25, batch-reuse:1
@ 487 train 6.4335 , allloss: 6.5651, dt: 1245.27ms, fracRes: 0.0102, norm(attn): 0.0576, norm(output): 0.1348, norm(x): 0.1347, norm(y): 0.9998, norm:1.4214, tok/sec: 105255.81, flops:110.48, batch-reuse:1
@ 488 train 6.3096 , allloss: 6.4406, dt: 1268.16ms, fracRes: 0.0104, norm(attn): 0.0562, norm(output): 0.1348, norm(x): 0.1344, norm(y): 0.9998, norm:1.2383, tok/sec: 103356.09, flops:108.49, batch-reuse:1
@ 489 train 6.3887 , allloss: 6.5190, dt: 1268.27ms, fracRes: 0.0106, norm(attn): 0.0525, norm(output): 0.1338, norm(x): 0.1343, norm(y): 0.9998, norm:1.4362, tok/sec: 103346.77, flops:108.48, batch-reuse:1
@ 490 train 6.4318 , allloss: 6.5606, dt: 1260.44ms, fracRes: 0.0113, norm(attn): 0.0544, norm(output): 0.1338, norm(x): 0.1345, norm(y): 0.9998, norm:1.5446, tok/sec: 103988.80, flops:109.15, batch-reuse:1
@ 491 train 6.4958 , allloss: 6.6226, dt: 1285.10ms, fracRes: 0.0113, norm(attn): 0.0552, norm(output): 0.1338, norm(x): 0.1348, norm(y): 0.9998, norm:1.6877, tok/sec: 101993.43, flops:107.06, batch-reuse:1
@ 492 train 6.4960 , allloss: 6.6264, dt: 1276.51ms, fracRes: 0.0110, norm(attn): 0.0542, norm(output): 0.1338, norm(x): 0.1341, norm(y): 0.9998, norm:1.7294, tok/sec: 102680.21, flops:107.78, batch-reuse:1
@ 493 train 6.4384 , allloss: 6.5704, dt: 1271.84ms, fracRes: 0.0104, norm(attn): 0.0522, norm(output): 0.1328, norm(x): 0.1339, norm(y): 0.9998, norm:1.5824, tok/sec: 103056.94, flops:108.17, batch-reuse:1
@ 494 train 6.4049 , allloss: 6.5296, dt: 1270.48ms, fracRes: 0.0107, norm(attn): 0.0544, norm(output): 0.1328, norm(x): 0.1342, norm(y): 0.9998, norm:1.6833, tok/sec: 103167.14, flops:108.29, batch-reuse:1
@ 495 train 6.3096 , allloss: 6.4366, dt: 1281.72ms, fracRes: 0.0109, norm(attn): 0.0527, norm(output): 0.1328, norm(x): 0.1343, norm(y): 0.9998, norm:1.7473, tok/sec: 102262.57, flops:107.34, batch-reuse:1
@ 496 train 6.4305 , allloss: 6.5617, dt: 1269.68ms, fracRes: 0.0106, norm(attn): 0.0525, norm(output): 0.1328, norm(x): 0.1340, norm(y): 0.9998, norm:2.1182, tok/sec: 103232.41, flops:108.36, batch-reuse:1
@ 497 train 6.3014 , allloss: 6.4309, dt: 1264.29ms, fracRes: 0.0105, norm(attn): 0.0508, norm(output): 0.1338, norm(x): 0.1342, norm(y): 0.9998, norm:1.2301, tok/sec: 103672.31, flops:108.82, batch-reuse:1
@ 498 train 6.4653 , allloss: 6.5933, dt: 1242.81ms, fracRes: 0.0109, norm(attn): 0.0552, norm(output): 0.1338, norm(x): 0.1347, norm(y): 0.9998, norm:1.3766, tok/sec: 105464.63, flops:110.70, batch-reuse:1
@ 499 train 6.5006 , allloss: 6.6258, dt: 1270.20ms, fracRes: 0.0112, norm(attn): 0.0569, norm(output): 0.1338, norm(x): 0.1346, norm(y): 0.9998, norm:1.4249, tok/sec: 103189.89, flops:108.31, batch-reuse:1
@ 500 train 6.3807 , allloss: 6.5054, dt: 1259.60ms, fracRes: 0.0114, norm(attn): 0.0566, norm(output): 0.1338, norm(x): 0.1348, norm(y): 0.9998, norm:1.4394, tok/sec: 104058.24, flops:109.22, batch-reuse:1
@ 501 train 6.4262 , allloss: 6.5529, dt: 1266.85ms, fracRes: 0.0117, norm(attn): 0.0559, norm(output): 0.1338, norm(x): 0.1346, norm(y): 0.9997, norm:1.7408, tok/sec: 103462.90, flops:108.60, batch-reuse:1
@ 502 train 6.4429 , allloss: 6.5691, dt: 1248.14ms, fracRes: 0.0117, norm(attn): 0.0569, norm(output): 0.1338, norm(x): 0.1350, norm(y): 0.9997, norm:1.6559, tok/sec: 105013.87, flops:110.23, batch-reuse:1
@ 503 train 6.4079 , allloss: 6.5329, dt: 1268.65ms, fracRes: 0.0111, norm(attn): 0.0562, norm(output): 0.1338, norm(x): 0.1347, norm(y): 0.9997, norm:1.2887, tok/sec: 103316.02, flops:108.44, batch-reuse:1
@ 504 train 6.4583 , allloss: 6.5840, dt: 1251.11ms, fracRes: 0.0112, norm(attn): 0.0571, norm(output): 0.1348, norm(x): 0.1348, norm(y): 0.9997, norm:1.5728, tok/sec: 104764.58, flops:109.96, batch-reuse:1
@ 505 train 6.3661 , allloss: 6.4900, dt: 1269.53ms, fracRes: 0.0118, norm(attn): 0.0583, norm(output): 0.1348, norm(x): 0.1349, norm(y): 0.9997, norm:1.7333, tok/sec: 103244.70, flops:108.37, batch-reuse:1
@ 506 train 6.3911 , allloss: 6.5153, dt: 1255.71ms, fracRes: 0.0117, norm(attn): 0.0557, norm(output): 0.1338, norm(x): 0.1351, norm(y): 0.9997, norm:1.5873, tok/sec: 104381.08, flops:109.56, batch-reuse:1
@ 507 train 6.4007 , allloss: 6.5260, dt: 1239.67ms, fracRes: 0.0118, norm(attn): 0.0588, norm(output): 0.1348, norm(x): 0.1350, norm(y): 0.9997, norm:1.2385, tok/sec: 105731.60, flops:110.98, batch-reuse:1
@ 508 train 6.3248 , allloss: 6.4505, dt: 1259.18ms, fracRes: 0.0120, norm(attn): 0.0569, norm(output): 0.1338, norm(x): 0.1347, norm(y): 0.9997, norm:1.3885, tok/sec: 104093.21, flops:109.26, batch-reuse:1
@ 509 train 6.3916 , allloss: 6.5154, dt: 1282.18ms, fracRes: 0.0125, norm(attn): 0.0562, norm(output): 0.1348, norm(x): 0.1351, norm(y): 0.9997, norm:1.7727, tok/sec: 102225.95, flops:107.30, batch-reuse:1
@ 510 train 6.3310 , allloss: 6.4554, dt: 1269.00ms, fracRes: 0.0128, norm(attn): 0.0564, norm(output): 0.1338, norm(x): 0.1350, norm(y): 0.9997, norm:1.5371, tok/sec: 103287.90, flops:108.41, batch-reuse:1
@ 511 train 6.4267 , allloss: 6.5524, dt: 1287.57ms, fracRes: 0.0133, norm(attn): 0.0583, norm(output): 0.1348, norm(x): 0.1352, norm(y): 0.9997, norm:1.6232, tok/sec: 101797.62, flops:106.85, batch-reuse:1
@ 512 train 6.3503 , allloss: 6.4722, dt: 1264.21ms, fracRes: 0.0128, norm(attn): 0.0571, norm(output): 0.1338, norm(x): 0.1355, norm(y): 0.9996, norm:1.2942, tok/sec: 103678.57, flops:108.82, batch-reuse:1
@ 513 train 6.3498 , allloss: 6.4719, dt: 1247.80ms, fracRes: 0.0129, norm(attn): 0.0581, norm(output): 0.1338, norm(x): 0.1351, norm(y): 0.9996, norm:1.6242, tok/sec: 105042.83, flops:110.26, batch-reuse:1
@ 514 train 6.3048 , allloss: 6.4258, dt: 1253.55ms, fracRes: 0.0130, norm(attn): 0.0581, norm(output): 0.1348, norm(x): 0.1353, norm(y): 0.9996, norm:1.2791, tok/sec: 104560.36, flops:109.75, batch-reuse:1
@ 515 train 6.2887 , allloss: 6.4090, dt: 1264.19ms, fracRes: 0.0131, norm(attn): 0.0579, norm(output): 0.1338, norm(x): 0.1353, norm(y): 0.9996, norm:1.8280, tok/sec: 103680.99, flops:108.83, batch-reuse:1
@ 516 train 6.3010 , allloss: 6.4225, dt: 1260.21ms, fracRes: 0.0126, norm(attn): 0.0615, norm(output): 0.1338, norm(x): 0.1347, norm(y): 0.9996, norm:1.9479, tok/sec: 104008.35, flops:109.17, batch-reuse:1
@ 517 train 6.2957 , allloss: 6.4189, dt: 1282.18ms, fracRes: 0.0134, norm(attn): 0.0586, norm(output): 0.1338, norm(x): 0.1344, norm(y): 0.9996, norm:2.1610, tok/sec: 102225.83, flops:107.30, batch-reuse:1
@ 518 train 6.3856 , allloss: 6.5075, dt: 1233.09ms, fracRes: 0.0133, norm(attn): 0.0576, norm(output): 0.1338, norm(x): 0.1350, norm(y): 0.9996, norm:1.7055, tok/sec: 106295.14, flops:111.57, batch-reuse:1
@ 519 train 6.3047 , allloss: 6.4242, dt: 1279.74ms, fracRes: 0.0127, norm(attn): 0.0559, norm(output): 0.1338, norm(x): 0.1352, norm(y): 0.9996, norm:1.6277, tok/sec: 102420.41, flops:107.50, batch-reuse:1
@ 520 train 6.4027 , allloss: 6.5227, dt: 1267.99ms, fracRes: 0.0125, norm(attn): 0.0579, norm(output): 0.1338, norm(x): 0.1354, norm(y): 0.9996, norm:2.3285, tok/sec: 103369.77, flops:108.50, batch-reuse:1
@ 521 train 6.4513 , allloss: 6.5759, dt: 1263.11ms, fracRes: 0.0131, norm(attn): 0.0579, norm(output): 0.1348, norm(x): 0.1353, norm(y): 0.9996, norm:1.8473, tok/sec: 103769.63, flops:108.92, batch-reuse:1
@ 522 train 6.2975 , allloss: 6.4182, dt: 1261.70ms, fracRes: 0.0131, norm(attn): 0.0559, norm(output): 0.1348, norm(x): 0.1357, norm(y): 0.9996, norm:1.9810, tok/sec: 103885.24, flops:109.04, batch-reuse:1
@ 523 train 6.3889 , allloss: 6.5081, dt: 1277.62ms, fracRes: 0.0132, norm(attn): 0.0576, norm(output): 0.1348, norm(x): 0.1358, norm(y): 0.9996, norm:1.3332, tok/sec: 102590.69, flops:107.68, batch-reuse:1
@ 524 train 6.3095 , allloss: 6.4267, dt: 1262.92ms, fracRes: 0.0130, norm(attn): 0.0576, norm(output): 0.1338, norm(x): 0.1356, norm(y): 0.9996, norm:1.7285, tok/sec: 103784.79, flops:108.94, batch-reuse:1
@ 525 train 6.3423 , allloss: 6.4583, dt: 1267.77ms, fracRes: 0.0129, norm(attn): 0.0586, norm(output): 0.1348, norm(x): 0.1356, norm(y): 0.9996, norm:1.9050, tok/sec: 103388.03, flops:108.52, batch-reuse:1
@ 526 train 6.3484 , allloss: 6.4655, dt: 1254.86ms, fracRes: 0.0137, norm(attn): 0.0605, norm(output): 0.1348, norm(x): 0.1354, norm(y): 0.9996, norm:1.6056, tok/sec: 104451.52, flops:109.64, batch-reuse:1
@ 527 train 6.3651 , allloss: 6.4818, dt: 1264.81ms, fracRes: 0.0143, norm(attn): 0.0593, norm(output): 0.1338, norm(x): 0.1353, norm(y): 0.9996, norm:1.8042, tok/sec: 103630.02, flops:108.77, batch-reuse:1
@ 528 train 6.3130 , allloss: 6.4293, dt: 1260.80ms, fracRes: 0.0138, norm(attn): 0.0576, norm(output): 0.1348, norm(x): 0.1354, norm(y): 0.9995, norm:1.4527, tok/sec: 103959.62, flops:109.12, batch-reuse:1
@ 529 train 6.2825 , allloss: 6.3996, dt: 1242.92ms, fracRes: 0.0135, norm(attn): 0.0562, norm(output): 0.1338, norm(x): 0.1353, norm(y): 0.9995, norm:1.5650, tok/sec: 105454.94, flops:110.69, batch-reuse:1
@ 530 train 6.3780 , allloss: 6.4950, dt: 1272.80ms, fracRes: 0.0146, norm(attn): 0.0591, norm(output): 0.1338, norm(x): 0.1355, norm(y): 0.9995, norm:1.4300, tok/sec: 102979.40, flops:108.09, batch-reuse:1
@ 531 train 6.4217 , allloss: 6.5385, dt: 1278.30ms, fracRes: 0.0144, norm(attn): 0.0615, norm(output): 0.1357, norm(x): 0.1364, norm(y): 0.9995, norm:1.5494, tok/sec: 102536.10, flops:107.63, batch-reuse:1
@ 532 train 6.2287 , allloss: 6.3440, dt: 1264.99ms, fracRes: 0.0141, norm(attn): 0.0596, norm(output): 0.1357, norm(x): 0.1361, norm(y): 0.9995, norm:2.0524, tok/sec: 103614.73, flops:108.76, batch-reuse:1
@ 533 train 6.2990 , allloss: 6.4167, dt: 1258.32ms, fracRes: 0.0132, norm(attn): 0.0596, norm(output): 0.1348, norm(x): 0.1357, norm(y): 0.9995, norm:1.3965, tok/sec: 104164.59, flops:109.33, batch-reuse:1
@ 534 train 6.2191 , allloss: 6.3391, dt: 1249.71ms, fracRes: 0.0124, norm(attn): 0.0588, norm(output): 0.1348, norm(x): 0.1353, norm(y): 0.9995, norm:1.8518, tok/sec: 104881.93, flops:110.09, batch-reuse:1
@ 535 train 6.3224 , allloss: 6.4382, dt: 1246.58ms, fracRes: 0.0132, norm(attn): 0.0605, norm(output): 0.1338, norm(x): 0.1354, norm(y): 0.9995, norm:1.8240, tok/sec: 105145.05, flops:110.36, batch-reuse:1
@ 536 train 6.3207 , allloss: 6.4355, dt: 1270.70ms, fracRes: 0.0135, norm(attn): 0.0601, norm(output): 0.1348, norm(x): 0.1361, norm(y): 0.9995, norm:2.5363, tok/sec: 103149.49, flops:108.27, batch-reuse:1
@ 537 train 6.2817 , allloss: 6.3967, dt: 1248.93ms, fracRes: 0.0140, norm(attn): 0.0605, norm(output): 0.1357, norm(x): 0.1361, norm(y): 0.9995, norm:1.6080, tok/sec: 104947.80, flops:110.16, batch-reuse:1
@ 538 train 6.2551 , allloss: 6.3690, dt: 1253.35ms, fracRes: 0.0140, norm(attn): 0.0610, norm(output): 0.1348, norm(x): 0.1358, norm(y): 0.9995, norm:2.4231, tok/sec: 104576.95, flops:109.77, batch-reuse:1
@ 539 train 6.2871 , allloss: 6.4030, dt: 1275.91ms, fracRes: 0.0136, norm(attn): 0.0591, norm(output): 0.1348, norm(x): 0.1366, norm(y): 0.9994, norm:1.8552, tok/sec: 102727.93, flops:107.83, batch-reuse:1
@ 540 train 6.3400 , allloss: 6.4524, dt: 1256.46ms, fracRes: 0.0142, norm(attn): 0.0605, norm(output): 0.1357, norm(x): 0.1370, norm(y): 0.9994, norm:1.5193, tok/sec: 104318.35, flops:109.50, batch-reuse:1
@ 541 train 6.2766 , allloss: 6.3890, dt: 1261.09ms, fracRes: 0.0145, norm(attn): 0.0618, norm(output): 0.1348, norm(x): 0.1364, norm(y): 0.9994, norm:1.3619, tok/sec: 103935.36, flops:109.09, batch-reuse:1
@ 542 train 6.3343 , allloss: 6.4479, dt: 1250.95ms, fracRes: 0.0146, norm(attn): 0.0615, norm(output): 0.1357, norm(x): 0.1366, norm(y): 0.9994, norm:1.4633, tok/sec: 104778.08, flops:109.98, batch-reuse:1
@ 543 train 6.4405 , allloss: 6.5533, dt: 1269.14ms, fracRes: 0.0142, norm(attn): 0.0645, norm(output): 0.1367, norm(x): 0.1369, norm(y): 0.9994, norm:2.2077, tok/sec: 103275.94, flops:108.40, batch-reuse:1
@ 544 train 6.3085 , allloss: 6.4239, dt: 1251.58ms, fracRes: 0.0144, norm(attn): 0.0613, norm(output): 0.1348, norm(x): 0.1365, norm(y): 0.9994, norm:1.7179, tok/sec: 104725.37, flops:109.92, batch-reuse:1
@ 545 train 6.3095 , allloss: 6.4202, dt: 1265.93ms, fracRes: 0.0151, norm(attn): 0.0605, norm(output): 0.1357, norm(x): 0.1366, norm(y): 0.9994, norm:1.5070, tok/sec: 103538.06, flops:108.68, batch-reuse:1
@ 546 train 6.2596 , allloss: 6.3705, dt: 1275.40ms, fracRes: 0.0149, norm(attn): 0.0598, norm(output): 0.1348, norm(x): 0.1366, norm(y): 0.9994, norm:2.0484, tok/sec: 102769.58, flops:107.87, batch-reuse:1
@ 547 train 6.3933 , allloss: 6.5057, dt: 1262.49ms, fracRes: 0.0151, norm(attn): 0.0640, norm(output): 0.1357, norm(x): 0.1371, norm(y): 0.9994, norm:1.9780, tok/sec: 103820.48, flops:108.97, batch-reuse:1
@ 548 train 6.3980 , allloss: 6.5094, dt: 1245.95ms, fracRes: 0.0140, norm(attn): 0.0649, norm(output): 0.1387, norm(x): 0.1372, norm(y): 0.9994, norm:1.4519, tok/sec: 105198.61, flops:110.42, batch-reuse:1
@ 549 train 6.3239 , allloss: 6.4349, dt: 1251.46ms, fracRes: 0.0137, norm(attn): 0.0664, norm(output): 0.1387, norm(x): 0.1374, norm(y): 0.9994, norm:1.3294, tok/sec: 104734.96, flops:109.93, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.4844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.3262, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.6523, 0.1484, 0.0084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2422, 0.5273, 0.1631, 0.0186, 0.0486, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.1465, 0.1123, 0.1504, 0.2393, 0.2178, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0923, 0.1504, 0.1572, 0.2383, 0.0981, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0286, 0.1021, 0.5117, 0.1738, 0.0342, 0.0452, 0.0356, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.0889, 0.1016, 0.1465, 0.1748, 0.1230, 0.1069, 0.0703, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.1270, 0.1758, 0.0752, 0.0718, 0.0732, 0.0947, 0.1338, 0.0854, 0.0630, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.1230, 0.0923, 0.0161, 0.0352, 0.0732, 0.1406, 0.1279, 0.1172, 0.0894, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0388, 0.0767, 0.1523, 0.1729, 0.0464, 0.0708, 0.0425, 0.1094, 0.0361, 0.1113, 0.0669, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0588, 0.0518, 0.1416, 0.1211, 0.0430, 0.0552, 0.0801, 0.0532, 0.0845, 0.0767, 0.0928, 0.0703, 0.0000, 0.0000],
        [0.0610, 0.0271, 0.0889, 0.1748, 0.2041, 0.0840, 0.0542, 0.0315, 0.0420, 0.0510, 0.0776, 0.0391, 0.0354, 0.0292, 0.0000],
        [0.0630, 0.0496, 0.0693, 0.1211, 0.1455, 0.0786, 0.0464, 0.0256, 0.0659, 0.0908, 0.0825, 0.0664, 0.0344, 0.0427, 0.0183]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0083, -0.0417, -0.0004,  ...,  0.0382,  0.0079,  0.0325],
        [-0.0109,  0.0085,  0.0194,  ..., -0.0122, -0.0317, -0.0019],
        [ 0.0018,  0.0225, -0.0002,  ..., -0.0031,  0.0129, -0.0302],
        ...,
        [ 0.0001,  0.0135,  0.0412,  ..., -0.0176, -0.0086, -0.0439],
        [-0.0345,  0.0320,  0.0346,  ...,  0.0027, -0.0297, -0.0255],
        [-0.0132, -0.0152, -0.0428,  ..., -0.0325,  0.0029,  0.0295]], device='cuda:0', requires_grad=True)
K: tensor([-0.1553,  0.6133,  1.3984, -1.6406,  0.3047,  0.4492, -0.0383, -0.2471,  0.3789,  0.7891, -0.1416,  0.9336, -0.2305,  0.4609,  0.5352,  0.5898, -0.0405,  0.3652, -0.2461, -0.3691,  0.6875, -0.6992,  0.1943,  0.1426,  0.2500, -0.7461, -0.1699,  0.2109, -0.3242,  0.5000,  0.8750, -0.3906,
         0.5742,  0.4961,  0.9688,  0.0135, -0.8320, -0.0442, -0.3164,  0.6602,  0.4414, -0.1660, -0.2617, -0.1680, -0.4883,  0.7148, -0.6836, -0.8398, -0.8516, -0.7969,  0.0559, -1.1406,  0.0903, -0.1094,  0.1128, -1.2031, -0.8086, -0.7617,  1.7188,  0.3613, -0.1602,  0.4121, -0.1396, -0.4512],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0089,  0.0203, -0.0144,  ...,  0.0162,  0.0109, -0.0068],
        [ 0.0120, -0.0374, -0.0553,  ...,  0.0427,  0.0050,  0.0226],
        [-0.0123,  0.0086,  0.0095,  ...,  0.0408, -0.0215,  0.0256],
        ...,
        [-0.0012, -0.0191,  0.0114,  ...,  0.0103,  0.0061,  0.0176],
        [ 0.0221,  0.0030, -0.0346,  ...,  0.0144, -0.0013,  0.0291],
        [ 0.0023, -0.0159,  0.0306,  ...,  0.0209, -0.0011, -0.0121]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1367, -0.4043, -0.5625,  0.3535,  1.3047,  0.3516,  0.2695,  0.9570,  0.4043, -0.6094,  0.2451, -0.2314, -0.1963,  0.4512,  0.2988, -0.3613,  0.2324,  0.3105, -0.1553, -0.3047, -0.5000, -0.1060, -0.0613,  0.5820,  0.0574,  0.3516,  0.1060, -0.5938, -0.6055, -0.4609,  0.0189,  0.7344,
        -0.5234, -0.9336, -0.4570,  0.5039,  0.7148, -0.4336, -0.3203, -0.7266, -0.1641,  0.1963,  0.6328, -0.4121, -0.6172, -0.0884,  0.4375, -0.0079,  0.0245,  1.1953, -0.6992,  0.4414,  1.1250,  0.2793, -0.1836,  0.8359,  0.2051,  0.6680, -0.7695, -0.3828, -0.6055, -0.0383,  0.0352,  1.3984],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0591,  0.0781,  0.3105, -0.2051, -0.2695, -0.0879,  0.1133, -0.3750,  0.0801, -0.3574, -0.5039,  0.5859, -0.2197,  0.3574],
        [ 0.0000, -0.1924, -0.3477,  1.1016,  0.0649, -0.0400, -0.0513, -0.0325, -0.1250,  0.1660,  0.0282,  0.0374, -0.0289, -0.3086, -0.3809],
        [ 0.0000,  1.2266, -0.2520, -3.1250, -1.5312, -0.3262,  1.0547,  1.1562,  0.3477, -0.0981, -0.4824,  1.0078,  0.8359,  1.1484,  1.4609],
        [ 0.0000,  0.7812, -0.3984, -2.5625, -1.6094, -0.3789,  0.5664,  0.9766,  1.1953, -0.1982, -0.3164,  0.3457,  0.1367,  1.5156,  1.4141],
        [ 0.0000,  0.0898, -0.1748,  0.1211,  0.5859,  0.4902,  0.2432, -0.4570,  0.1216, -0.2539, -0.0135, -0.1943,  0.4180,  0.1299,  0.2295],
        [ 0.0000, -0.3652,  0.1216,  0.1660,  0.5820, -0.3047, -0.0232, -0.0459, -0.1367,  0.6680, -0.1074,  0.4160,  0.0796, -0.6523, -0.0184],
        [ 0.0000, -0.9062,  0.3672,  1.9766,  0.9023, -0.7305, -0.4492, -0.6875, -0.4609, -0.2656,  0.4902, -0.2949, -0.6484, -0.8281, -1.0234],
        [ 0.0000, -0.0840,  0.0476,  0.4141,  0.5938,  0.2412,  0.1001, -0.3184, -0.0520,  0.1436,  0.1245, -0.6562, -0.4238, -0.5234, -0.1826],
        [ 0.0000,  0.2441,  0.5703, -0.2832, -0.3281, -0.3047, -0.0479,  0.2988, -0.1504, -0.4570, -0.1572,  0.2246,  0.5078,  0.3262,  0.1582],
        [ 0.0000,  0.2500, -0.0352, -1.7812, -1.0000, -0.2676,  0.3867,  0.2910,  0.2041, -0.0679, -0.0688, -0.3066,  0.1416,  0.5742,  0.7969],
        [ 0.0000, -0.6719,  0.0082,  0.6953,  0.8203, -0.4922, -0.0723, -0.5820,  0.3652, -0.7422,  0.3789, -0.1260, -0.0781, -0.2637, -0.4922],
        [ 0.0000, -0.1836, -0.3105,  0.6953,  0.5391, -0.4961, -0.2500,  0.1235, -0.2832,  0.1758,  0.0776,  0.2695, -0.0074, -0.3770, -0.7422],
        [ 0.0000, -0.8164,  0.3711,  1.0469,  1.2031,  0.3184, -0.1191, -0.6641, -0.3789, -0.1826,  0.2393, -0.4492, -0.5430, -0.7422, -0.7695],
        [ 0.0000, -0.2363,  0.0967,  0.6523,  0.8359,  0.2227, -0.3047, -0.8984,  0.0491,  0.3672,  0.2734,  0.0549, -0.6055, -0.3887, -1.2344]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4722],
        [0.3530],
        [0.2131],
        [0.2415],
        [0.1643],
        [0.1404],
        [0.0864],
        [0.0838],
        [0.1001],
        [0.0887],
        [0.0728],
        [0.0700],
        [0.0440],
        [0.0563]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4082, 0.5938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.3574, 0.3730, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.3789, 0.2295, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2891, 0.3027, 0.1758, 0.0913, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.5078, 0.1074, 0.0557, 0.0376, 0.0342, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1426, 0.2217, 0.1025, 0.1357, 0.1602, 0.0962, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.1089, 0.1035, 0.2139, 0.1260, 0.2393, 0.0786, 0.0488, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.0869, 0.1104, 0.0781, 0.1050, 0.0603, 0.1504, 0.2041, 0.0776, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.1040, 0.2109, 0.0688, 0.0464, 0.0247, 0.1060, 0.1943, 0.0442, 0.0461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0928, 0.0791, 0.0420, 0.0791, 0.0703, 0.1357, 0.1143, 0.1191, 0.0344, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0593, 0.0566, 0.0496, 0.1260, 0.0942, 0.1357, 0.0776, 0.0513, 0.0820, 0.0703, 0.0522, 0.1445, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.0498, 0.0698, 0.0913, 0.0938, 0.0579, 0.0645, 0.1514, 0.0459, 0.0581, 0.0491, 0.1035, 0.0732, 0.0000, 0.0000],
        [0.0654, 0.0442, 0.0376, 0.0752, 0.0703, 0.0962, 0.0767, 0.0986, 0.0898, 0.0801, 0.0623, 0.0554, 0.0742, 0.0737, 0.0000],
        [0.0737, 0.0825, 0.0674, 0.0718, 0.0371, 0.0197, 0.1016, 0.1118, 0.0275, 0.0811, 0.0557, 0.0820, 0.1001, 0.0515, 0.0374]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0152, -0.0201,  0.0275,  ...,  0.0062, -0.0073,  0.0113],
        [ 0.0181, -0.0172,  0.0051,  ...,  0.0228,  0.0012, -0.0057],
        [ 0.0054, -0.0487,  0.0002,  ...,  0.0297, -0.0264, -0.0035],
        ...,
        [-0.0143, -0.0007, -0.0359,  ..., -0.0071, -0.0224, -0.0030],
        [ 0.0120,  0.0100, -0.0031,  ...,  0.0583,  0.0220, -0.0022],
        [ 0.0223, -0.0590, -0.0205,  ...,  0.0058,  0.0138,  0.0185]], device='cuda:0', requires_grad=True)
K: tensor([     0.2891,     -0.0620,     -1.0078,      0.1299,     -0.8359,      0.4668,      1.2109,     -0.9727,      0.0898,      0.6914,      0.3242,      0.1602,      0.0327,     -0.1270,      0.7422,     -0.3184,      0.3906,     -0.1211,      0.3672,      0.0315,     -0.3066,     -0.5664,
             0.1079,      0.2676,      0.5938,      0.0003,     -0.5664,      0.7344,      0.5039,      0.3789,      0.4336,     -0.7227,      0.6133,     -0.3301,      0.0884,     -0.1138,      0.6992,     -0.3965,     -0.1523,      0.0811,      0.3848,      0.5430,     -0.3555,      0.5430,
             0.5078,      0.8008,      0.0859,      0.3008,     -0.7422,      0.5703,     -0.6523,     -1.4062,     -0.0060,      0.3555,     -0.2119,      0.3164,     -0.5430,     -0.5117,     -0.6250,      0.5820,     -0.0781,     -1.4844,      0.4258,     -0.2148], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[     0.0225,      0.0003,     -0.0069,  ...,     -0.0028,     -0.0103,      0.0051],
        [     0.0043,     -0.0050,      0.0028,  ...,      0.0448,      0.0283,     -0.0247],
        [    -0.0048,     -0.0160,     -0.0074,  ...,     -0.0087,     -0.0231,      0.0525],
        ...,
        [    -0.0222,      0.0394,      0.0068,  ...,      0.0494,      0.0390,     -0.0304],
        [    -0.0218,      0.0061,     -0.0125,  ...,     -0.0000,      0.0025,      0.0461],
        [    -0.0110,     -0.0037,      0.0154,  ...,      0.0338,      0.0521,     -0.0061]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2334,  0.2500,  0.4180,  0.0022,  0.6016, -0.3145,  0.0640,  1.3906, -0.7617,  0.7891, -0.2793,  0.1279, -0.5430, -0.0684, -0.4668, -0.9258, -0.0322,  0.3281, -0.0388,  0.5898, -0.1279,  0.2422,  0.6289, -1.3828, -0.9883, -0.3164, -0.2598,  0.2930, -0.1895,  0.2227, -0.1445,  0.0108,
        -0.0291, -0.9805, -0.2334, -0.1123, -0.0728,  1.3125, -0.1270,  0.0496, -0.4707, -0.1387, -0.7500, -1.2734,  0.3789, -0.1069,  0.0079, -0.1211, -0.4980,  0.3828, -0.2334,  0.5430,  0.2070, -0.3184,  0.9727,  0.1787, -0.5586,  0.2305,  1.0078,  0.1943,  0.0562,  0.8594,  0.0791, -0.5625],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.3730,     -0.4180,      0.0106,      0.5078,      0.1406,     -0.2539,     -0.2988,      0.0044,      0.3516,      0.2383,      0.2295,      0.0498,      0.1060,      0.4141],
        [     0.0000,      0.2871,      0.3281,      0.3223,      0.6094,      0.2656,     -0.1875,      0.1826,      0.0025,      0.1475,     -0.0452,      0.0540,      0.6445,      0.1289,      0.2734],
        [     0.0000,      0.2246,     -0.2754,     -1.2188,     -0.7344,     -1.2188,     -0.4023,     -0.0674,     -1.0312,     -0.9258,     -0.5820,     -0.4199,     -1.2656,     -0.2832,     -0.3145],
        [     0.0000,      0.0479,     -0.4961,     -1.1484,     -0.7031,     -1.3906,      0.2432,      0.0378,     -0.5117,     -1.5391,     -1.0547,     -0.6172,     -0.7969,     -0.1348,     -0.7695],
        [     0.0000,      0.6797,     -0.8711,     -1.5312,     -1.9297,     -2.0156,     -0.1465,      0.3711,     -1.2812,     -1.0078,     -0.9688,     -0.5820,     -1.1641,     -0.3398,     -1.0078],
        [     0.0000,      0.4395,     -0.3320,     -0.0505,      0.1152,     -0.3965,     -0.0206,      0.4785,     -0.0005,     -0.4648,     -0.0258,     -0.2090,      0.4258,      0.3008,      0.0442],
        [     0.0000,      0.2969,      0.2461,      0.9727,      0.4453,      1.0859,     -0.0310,     -0.5078,      0.1211,      1.1328,      0.2559,      0.8398,      0.0889,     -0.1689,      0.6523],
        [     0.0000,     -0.3828,     -0.1416,     -0.4902,     -0.1934,     -0.7461,      0.1650,      0.4707,     -0.4922,     -0.3730,     -0.2451,     -0.0079,     -0.1357,     -0.2520,     -0.6992],
        [     0.0000,     -0.3945,      0.3125,     -0.8047,     -1.2031,     -1.8359,     -0.3789,      0.2305,     -1.2500,     -1.2031,     -1.0859,     -0.3359,     -0.5508,     -0.5898,     -0.5469],
        [     0.0000,     -0.0522,     -0.2119,     -0.8438,     -0.2109,     -0.3301,      0.3320,      0.1562,      0.2002,     -1.0469,      0.3242,     -0.4531,     -0.5195,      0.6719,     -0.2275],
        [     0.0000,     -0.0461,     -0.1777,      0.7539,      0.4629,      0.8320,      0.2715,     -0.1445,      0.3262,      0.1680,     -0.1289,      0.8945,      0.0386,      0.2227,      0.3359],
        [     0.0000,     -0.6055,     -0.2734,     -0.0012,      0.0238,     -0.4609,     -0.3496,      0.5000,     -0.6953,     -0.4551,     -0.6250,      0.1235,     -0.2256,      0.0303,      0.0679],
        [     0.0000,     -0.3945,     -0.5508,      0.1396,      0.0747,      0.3848,      0.1621,      0.4102,      0.3164,      0.2041,     -0.0479,     -0.1641,      0.1260,      0.1177,     -0.1914],
        [     0.0000,      0.1118,     -0.0908,     -0.0243,     -0.6836,     -1.3203,      0.3203,      0.4160,     -0.9844,      0.0933,     -0.2812,      0.1079,      0.3086,     -0.3555,     -0.6797]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4188],
        [0.3340],
        [0.3382],
        [0.2601],
        [0.3311],
        [0.1483],
        [0.0966],
        [0.1385],
        [0.1623],
        [0.1195],
        [0.0764],
        [0.1012],
        [0.0722],
        [0.0806]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4922, 0.5078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3828, 0.2334, 0.3828, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3672, 0.2598, 0.3340, 0.0381, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.3008, 0.3711, 0.0618, 0.0248, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.2207, 0.1699, 0.1797, 0.1367, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.1523, 0.1846, 0.0669, 0.0869, 0.1309, 0.1846, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2207, 0.1387, 0.1099, 0.0344, 0.0649, 0.2236, 0.1196, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.1924, 0.1709, 0.0344, 0.0219, 0.1719, 0.1719, 0.0559, 0.0237, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.1299, 0.1436, 0.0322, 0.0347, 0.2178, 0.1084, 0.0933, 0.0152, 0.0708, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1396, 0.1943, 0.0427, 0.0275, 0.1357, 0.1455, 0.0498, 0.0231, 0.0684, 0.0259, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.0752, 0.1157, 0.0544, 0.0938, 0.1128, 0.1069, 0.0493, 0.0688, 0.0605, 0.0579, 0.0928, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.0588, 0.0452, 0.0762, 0.1206, 0.0723, 0.0796, 0.0771, 0.0850, 0.0771, 0.0879, 0.0588, 0.0737, 0.0000, 0.0000],
        [0.1138, 0.1387, 0.1206, 0.0239, 0.0081, 0.1318, 0.1167, 0.0334, 0.0137, 0.0320, 0.0195, 0.1426, 0.0947, 0.0095, 0.0000],
        [0.1030, 0.1216, 0.1543, 0.0432, 0.0374, 0.1060, 0.0918, 0.0396, 0.0204, 0.0457, 0.0260, 0.0908, 0.0554, 0.0206, 0.0444]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0150,  0.0358,  0.0264,  ..., -0.0018,  0.0061, -0.0396],
        [ 0.0047, -0.0251,  0.0123,  ...,  0.0131,  0.0036, -0.0377],
        [ 0.0100,  0.0399,  0.0033,  ...,  0.0175,  0.0156, -0.0154],
        ...,
        [-0.0428, -0.0252, -0.0332,  ..., -0.0033,  0.0073, -0.0087],
        [ 0.0091,  0.0217,  0.0054,  ..., -0.0206,  0.0235, -0.0141],
        [-0.0087, -0.0033, -0.0523,  ...,  0.0289,  0.0093,  0.0007]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9492, -0.0405, -0.0444,  0.9570, -0.0393,  0.5039,  0.6641,  0.0369, -1.0625,  0.2812,  0.9141,  0.6211, -0.2295, -0.1504, -0.4512,  0.4316,  0.2969,  0.0571,  2.0469, -0.0713, -0.7422,  1.1406,  1.1328,  0.3027,  0.0447, -0.6211, -0.8008,  0.2969,  0.2295,  1.1797,  0.4473,  0.2715,
        -0.7656, -0.3496, -0.0454, -0.1641, -0.9336,  0.0732,  0.2676, -0.2412, -0.1260,  0.8359,  0.2109, -1.1875,  1.3281,  1.1875, -0.2197,  0.2168, -0.5859,  0.2812, -0.2197, -0.8125,  0.9922, -0.1982, -0.6172, -0.1270,  0.1943, -0.1416,  0.1670, -0.8047,  0.2012, -1.4531,  0.2236, -0.4785],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0128,  0.0046, -0.0158,  ..., -0.0190, -0.0170, -0.0051],
        [-0.0022,  0.0030,  0.0095,  ..., -0.0232,  0.0224, -0.0198],
        [-0.0169, -0.0394,  0.0017,  ..., -0.0154, -0.0159, -0.0353],
        ...,
        [-0.0035,  0.0093,  0.0013,  ..., -0.0303,  0.0014, -0.0323],
        [-0.0160, -0.0031, -0.0091,  ..., -0.0003, -0.0126,  0.0328],
        [ 0.0090,  0.0061,  0.0438,  ...,  0.0115,  0.0635, -0.0223]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0179, -0.4707,  0.3691, -0.4043,  0.0366, -0.4961, -1.3359,  0.8672,  0.0674, -0.1621, -0.6055, -0.4824, -0.3711, -0.0130, -0.8516,  0.3379, -0.4102, -0.8086, -0.0815,  0.1582, -0.1602,  0.2158, -0.1152, -0.9219,  0.1240,  1.3203, -0.0396,  0.0781, -0.6367,  0.4863,  0.0938,  0.5547,
         0.7422,  0.2637,  0.3184,  0.0018,  0.9062, -0.6719, -1.0156, -1.0000, -0.6016,  0.5898, -0.6484,  0.2539,  0.2598, -0.3047,  1.0859,  0.1279,  0.4004, -0.1436, -0.5039,  0.3125, -1.3672, -1.6406, -0.5508, -0.8750,  0.5508, -0.9336,  0.7578, -0.2461,  0.3711,  1.4375, -0.5703,  0.1445],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0306,     -0.3184,     -0.2598,     -0.5430,      0.2793,     -0.2168,     -0.2988,     -0.1895,     -0.6172,     -0.3867,     -0.3887,     -0.0854,     -0.2490,     -0.0825],
        [     0.0000,     -0.4980,      0.0007,     -0.1660,      0.0232,     -0.2070,     -0.4141,      0.1953,     -0.2559,     -0.6250,     -0.5156,     -0.0142,     -0.0757,      0.0134,     -0.3301],
        [     0.0000,     -0.3418,     -0.0933,     -2.2656,     -2.1406,     -0.0786,     -0.6367,     -1.2188,     -2.4062,     -1.3906,     -2.3906,      0.3066,     -1.0469,     -3.0469,     -1.3672],
        [     0.0000,      0.2227,      0.4336,     -1.3594,     -2.2812,     -0.0850,     -0.3887,     -1.3281,     -2.7656,     -1.3906,     -2.2969,      0.3145,     -0.6836,     -2.7969,     -1.1641],
        [     0.0000,      0.4883,      0.2256,      0.2852,      0.0096,      0.1523,      0.0447,      0.1660,      0.0032,      0.0933,     -0.2305,      0.7148,      0.1885,     -0.1328,      0.2051],
        [     0.0000,     -0.2432,     -0.0491,     -1.0625,     -0.8047,     -0.3906,     -0.0461,     -0.0259,     -0.9609,     -0.3438,     -1.1797,      0.1631,      0.0791,     -1.3125,     -0.6094],
        [     0.0000,     -0.4629,     -0.6992,     -1.8594,     -1.2266,      0.0119,     -0.6133,     -0.9219,     -1.1562,     -0.7734,     -0.8125,     -1.0938,     -0.6914,     -1.3594,     -1.1875],
        [     0.0000,      0.2119,      0.0947,     -1.5078,     -1.9609,      0.1001,      0.0991,     -1.0234,     -1.8828,     -1.0312,     -1.5703,      0.0205,     -0.1465,     -2.0938,     -1.1250],
        [     0.0000,     -0.1670,     -0.0703,     -1.5625,     -1.4922,      0.3477,     -0.3535,     -0.5000,     -2.3125,     -0.7734,     -1.3828,      0.0339,     -0.4082,     -2.2344,     -1.0469],
        [     0.0000,     -0.0520,      0.2773,     -1.2422,     -1.6797,     -0.0820,     -0.0111,     -1.0859,     -1.8516,     -0.7695,     -1.7422,      0.1934,     -0.4199,     -2.1094,     -0.7422],
        [     0.0000,     -0.3945,      0.0352,     -0.7188,     -0.1738,      0.0103,     -0.0447,     -0.8203,     -0.4863,     -0.6133,     -0.6562,     -0.1865,     -0.4082,     -0.4961,     -0.5664],
        [     0.0000,     -0.4062,     -0.6719,     -0.1484,      0.3145,     -0.2012,     -0.1040,     -0.1348,     -0.0396,     -0.1338,     -0.0017,     -0.4062,     -0.1777,     -0.1396,      0.1650],
        [     0.0000,      0.2002,      0.0583,     -1.5625,     -2.6406,      0.1484,      0.0266,     -1.2188,     -2.1094,     -1.2656,     -1.7578,      0.2295,     -0.1816,     -2.4844,     -1.1875],
        [     0.0000,      0.1680,      0.4082,     -0.8672,     -1.0078,      0.0291,     -0.1157,     -0.9531,     -1.6172,     -0.8125,     -1.3750,     -0.1230,     -0.6172,     -1.6094,     -0.8359]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4399],
        [0.3278],
        [0.3268],
        [0.2891],
        [0.1600],
        [0.1627],
        [0.1606],
        [0.1953],
        [0.1526],
        [0.1512],
        [0.0926],
        [0.0826],
        [0.1443],
        [0.1013]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3613, 0.6406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4141, 0.2910, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.1631, 0.2793, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.4922, 0.0835, 0.0737, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1729, 0.1523, 0.1084, 0.1064, 0.1016, 0.3574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.3457, 0.0151, 0.0193, 0.0625, 0.2520, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.3750, 0.0337, 0.0255, 0.0510, 0.1650, 0.1226, 0.0579, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1553, 0.2197, 0.0879, 0.0679, 0.0620, 0.1680, 0.1523, 0.0320, 0.0552, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1309, 0.0996, 0.0820, 0.0513, 0.1660, 0.1113, 0.0601, 0.0879, 0.0864, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.3789, 0.0239, 0.0195, 0.0140, 0.1904, 0.0732, 0.0566, 0.0216, 0.0486, 0.0049, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0452, 0.0223, 0.0679, 0.0796, 0.1641, 0.1436, 0.1475, 0.0728, 0.0781, 0.0359, 0.0571, 0.0869, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.2451, 0.0334, 0.0237, 0.0481, 0.1250, 0.1143, 0.0535, 0.0432, 0.0654, 0.0371, 0.0525, 0.0261, 0.0000, 0.0000],
        [0.1138, 0.1465, 0.0698, 0.0532, 0.0491, 0.1279, 0.1128, 0.0258, 0.0435, 0.0581, 0.0154, 0.1099, 0.0215, 0.0527, 0.0000],
        [0.0947, 0.2051, 0.0205, 0.0222, 0.0574, 0.1543, 0.1377, 0.0344, 0.0302, 0.0310, 0.0078, 0.0635, 0.0183, 0.0344, 0.0889]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0073, -0.0184,  0.0154,  ...,  0.0290, -0.0133, -0.0144],
        [-0.0223,  0.0030, -0.0018,  ..., -0.0026, -0.0072,  0.0063],
        [ 0.0181,  0.0386,  0.0275,  ..., -0.0139,  0.0139,  0.0293],
        ...,
        [ 0.0019,  0.0293, -0.0171,  ...,  0.0003, -0.0243, -0.0046],
        [ 0.0210, -0.0263,  0.0111,  ...,  0.0132,  0.0101, -0.0146],
        [ 0.0310,  0.0153,  0.0111,  ...,  0.0056,  0.0179,  0.0174]], device='cuda:0', requires_grad=True)
K: tensor([-0.2178,  0.5430, -0.9844, -0.6836,  0.1416, -0.1807, -0.3809,  0.1855,  0.5312, -0.0781, -0.9492, -0.7422,  1.2578, -0.4570,  0.5078,  0.3848,  1.1797, -0.1924, -0.2969, -0.1807,  0.0240,  0.2295, -0.4609,  1.0234, -0.8672, -0.2227, -0.1040, -0.0293,  1.6328, -0.8477,  0.4883,  0.7891,
         1.4766, -0.2871, -0.0237, -0.2070,  0.1572, -1.2344,  0.1777,  0.0396, -0.0830,  1.3828,  0.3848, -0.0771, -0.1396,  0.2480, -0.0366,  0.2617, -0.3867, -0.2178, -0.5039,  0.1079, -0.6914, -0.6602,  0.3066,  0.2119,  0.6289, -0.6836, -0.0669,  1.0703, -1.1172, -1.4922, -0.5039,  0.7500],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0008,      0.0160,      0.0188,  ...,     -0.0133,      0.0271,      0.0158],
        [     0.0247,      0.0020,     -0.0000,  ...,      0.0010,     -0.0234,      0.0201],
        [     0.0062,     -0.0075,     -0.0085,  ...,     -0.0060,     -0.0341,      0.0380],
        ...,
        [    -0.0100,      0.0023,     -0.0672,  ...,     -0.0053,      0.0035,      0.0048],
        [    -0.0041,      0.0226,      0.0075,  ...,     -0.0283,     -0.0215,     -0.0177],
        [    -0.0348,      0.0197,     -0.0496,  ...,     -0.0058,     -0.0307,      0.0417]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6094, -0.8945,  0.4766,  1.3203, -0.1670,  0.7812, -0.1455,  0.5586,  0.9062,  0.7656, -1.2422, -0.0510, -0.5117,  0.1030, -0.0334,  1.3672, -0.2178, -0.2080, -0.4473,  0.5156, -0.5547, -1.1641, -0.3008, -0.7617, -0.3516,  0.8477,  0.0283, -0.7695, -0.1895,  0.1250, -0.9062,  0.0693,
        -0.3945,  0.8477, -0.7109,  0.1621,  0.2344, -0.8867,  0.5273, -0.4785, -1.0859,  1.0859, -0.1406,  0.3301, -1.0312,  0.1611,  0.0811, -0.9414, -0.7656, -0.3457, -0.2070,  0.5117, -0.4961, -0.6719, -1.2734, -0.4297,  0.5078,  0.4805, -0.1396, -0.8594,  0.9570, -0.9102, -0.5039, -0.6523],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.5742,     -0.9453,     -0.8867,     -0.2812,      0.4961,      0.5977,     -0.1445,     -0.5977,     -0.4551,     -0.7266,     -0.3555,     -0.4824,     -0.6172,      0.3008],
        [     0.0000,     -0.3516,     -0.3438,     -0.3262,      0.3164,      1.2422,      1.0625,     -0.3301,     -0.5000,     -0.8594,     -1.0469,      0.4219,     -0.4395,     -0.5312,      0.8477],
        [     0.0000,     -0.5859,     -0.0544,     -0.1079,      0.7305,      1.1484,      1.2109,      0.0107,     -0.1895,     -0.5078,     -0.4414,      0.4062,      0.0021,     -0.2334,      0.8203],
        [     0.0000,      0.5781,     -1.1953,     -1.3203,     -1.2969,      0.3906,     -0.3379,     -1.2812,     -1.1562,     -0.8086,     -2.2969,     -0.6055,     -1.7344,     -0.9180,     -1.2578],
        [     0.0000,     -0.1260,     -0.4668,     -0.4844,     -0.5312,      0.7266,     -0.3613,     -0.4238,     -0.3828,     -0.7695,     -1.0469,     -0.1982,     -0.6523,     -0.2578,     -0.5039],
        [     0.0000,      1.1250,     -2.0156,     -1.7656,     -0.5859,      0.8047,      0.5352,     -1.2812,     -1.5312,     -1.4688,     -2.9062,     -0.6289,     -1.7812,     -1.3750,     -0.3398],
        [     0.0000,      0.7930,     -1.6172,     -1.8906,     -1.2031,     -0.0315,     -0.3281,     -1.0781,     -1.3438,     -0.8633,     -1.8359,     -0.9727,     -1.9375,     -1.1094,     -0.3848],
        [     0.0000,      0.3438,     -0.5703,     -0.8320,     -0.9219,      0.0737,     -0.0205,     -1.5781,     -1.0391,     -0.7227,     -2.1250,     -0.0557,     -1.7656,     -0.8359,     -0.7773],
        [     0.0000,      0.0459,     -0.2227,     -0.4199,     -0.8906,      0.2852,     -0.1138,     -0.7305,     -0.3535,     -0.3672,     -0.7188,      0.0981,     -1.0312,     -0.2910,      0.2559],
        [     0.0000,      0.8086,     -1.9531,     -2.1562,     -2.4844,      0.1221,     -0.8359,     -1.0938,     -2.0625,     -1.2422,     -3.5312,     -0.8477,     -2.1875,     -1.7422,     -0.9883],
        [     0.0000,     -0.7070,      0.4043,      0.5625,      1.2891,      1.1562,      1.1797,      0.4785,      0.5469,     -0.2305,      0.2334,      0.6562,      0.6602,      0.4277,      1.1094],
        [     0.0000,      0.6094,     -1.3828,     -1.7266,     -1.0234,     -0.0635,     -0.1543,     -0.9141,     -1.1250,     -0.7070,     -1.2812,     -0.9297,     -1.6328,     -0.9180,     -0.3027],
        [     0.0000,      0.2539,     -0.4922,     -0.7578,     -0.8438,      0.1152,     -0.0098,     -1.4844,     -0.9648,     -0.6719,     -2.0000,     -0.0359,     -1.6641,     -0.7695,     -0.8086],
        [     0.0000,      0.7695,     -1.5312,     -1.4453,     -0.5000,      0.4902,      0.3750,     -1.0156,     -1.1484,     -1.1172,     -2.4844,     -0.4004,     -1.6406,     -1.0156,     -0.0654]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4165],
        [0.3784],
        [0.2875],
        [0.2441],
        [0.1542],
        [0.1616],
        [0.1514],
        [0.1519],
        [0.0993],
        [0.1452],
        [0.0814],
        [0.0910],
        [0.1028],
        [0.1026]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3633, 0.2734, 0.3613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2969, 0.2217, 0.2617, 0.2178, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3184, 0.2207, 0.1484, 0.1230, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.1709, 0.0566, 0.0579, 0.1611, 0.4219, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.1777, 0.0649, 0.0654, 0.0918, 0.2891, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.2256, 0.0559, 0.0352, 0.0593, 0.3047, 0.1074, 0.0574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1206, 0.0952, 0.0359, 0.0366, 0.1182, 0.2559, 0.1206, 0.1001, 0.1162, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.1338, 0.0369, 0.0237, 0.0713, 0.2119, 0.0698, 0.0265, 0.2656, 0.0278, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1826, 0.0417, 0.0310, 0.0659, 0.1338, 0.0947, 0.0610, 0.1309, 0.0688, 0.0645, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0569, 0.1104, 0.1138, 0.0640, 0.0918, 0.0535, 0.0718, 0.0835, 0.0588, 0.1240, 0.1035, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.1279, 0.0217, 0.0132, 0.0325, 0.2676, 0.0508, 0.0371, 0.1729, 0.0430, 0.0796, 0.0114, 0.0309, 0.0000, 0.0000],
        [0.0918, 0.0684, 0.0277, 0.0276, 0.0908, 0.1904, 0.0869, 0.0713, 0.0859, 0.0396, 0.0554, 0.0262, 0.0640, 0.0742, 0.0000],
        [0.0859, 0.0776, 0.0410, 0.0444, 0.0461, 0.0771, 0.0835, 0.0757, 0.1030, 0.0435, 0.0366, 0.0557, 0.0486, 0.1030, 0.0776]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0367,  0.0146,  0.0032,  ..., -0.0361,  0.0157,  0.0129],
        [-0.0087,  0.0075,  0.0063,  ...,  0.0067, -0.0276,  0.0043],
        [ 0.0183, -0.0173, -0.0321,  ..., -0.0132, -0.0115, -0.0270],
        ...,
        [ 0.0105,  0.0125,  0.0075,  ...,  0.0075, -0.0245, -0.0334],
        [-0.0084, -0.0227,  0.0114,  ..., -0.0176,  0.0111, -0.0059],
        [-0.0156,  0.0015,  0.0208,  ..., -0.0067,  0.0052,  0.0099]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1094, -0.6406,  1.2891, -0.5547,  0.1377, -0.3145,  0.4707, -0.8008, -0.0996, -0.4570,  0.1318, -0.2383, -0.9414,  0.3047, -0.0693,  0.5273, -0.2676, -0.2314, -0.3633, -0.7734,  0.4727, -0.8594,  0.7695, -0.1855, -1.0703,  0.7109,  0.3066, -0.0308,  0.6914,  0.2451, -1.0234,  0.2969,
        -0.5703, -0.9180,  0.9648, -1.3047, -0.6641, -0.2012, -0.2734, -0.8164, -0.5625, -1.0312,  0.3652,  0.3867,  0.2197, -0.2891, -0.9219,  0.6602,  0.7891,  0.3984, -0.8438, -0.3984, -0.2734, -0.6133, -1.3438,  0.2178, -1.0469, -0.0087, -0.5352,  0.7031,  0.7422, -0.1279,  0.4746, -0.4629],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0073,  0.0264, -0.0089,  ...,  0.0117, -0.0164,  0.0316],
        [-0.0141,  0.0091,  0.0110,  ...,  0.0115, -0.0142, -0.0016],
        [ 0.0104,  0.0100,  0.0043,  ..., -0.0099,  0.0169, -0.0258],
        ...,
        [ 0.0058, -0.0094, -0.0098,  ..., -0.0007, -0.0158,  0.0167],
        [ 0.0022, -0.0237,  0.0217,  ...,  0.0097, -0.0090,  0.0362],
        [-0.0107, -0.0142, -0.0280,  ...,  0.0340,  0.0073,  0.0065]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1758,  0.9961, -0.9922, -1.4375, -0.5352,  1.0781, -0.1416,  0.4043,  0.0811, -0.6289,  0.6719,  1.2031,  0.5664,  0.5391, -0.1006,  1.2891, -0.8438, -0.6367, -0.6016, -0.4023,  0.6094, -0.0603,  0.1631, -0.1738,  0.0588,  0.0070, -0.4922,  0.4727, -0.3477,  0.8086,  0.2266, -0.3730,
         0.0121,  0.1094, -0.0304,  0.2109,  0.6289,  0.6094, -0.0322,  0.1494,  0.7070, -0.1641,  0.8203,  0.2715, -0.8984,  0.7734,  0.0131, -0.9805,  1.5078,  0.1226, -0.6641,  0.4863, -0.1436,  0.1592, -0.5469,  0.2461, -0.8008, -0.4141, -0.3730, -0.1494, -1.1562,  0.2656,  0.6719,  1.3750],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0928,     -0.4629,     -1.0000,     -1.0781,     -0.2031,     -0.3027,     -0.8828,      0.2363,     -0.1846,     -0.1367,     -1.0625,     -1.1328,      0.2539,     -0.6172],
        [     0.0000,     -0.2832,     -0.0042,     -0.1543,     -0.2715,     -0.0562,     -0.7500,     -0.5703,      0.2656,     -0.3633,      0.9102,     -0.4570,     -0.5078,      0.3711,     -0.0435],
        [     0.0000,     -0.2930,     -0.1245,     -0.3105,     -0.5430,     -0.1797,     -0.8008,     -0.5391,      0.2656,     -0.1904,      0.9141,     -0.6680,     -0.5273,      0.3496,     -0.1074],
        [     0.0000,     -0.3691,     -0.7695,     -0.9531,     -0.5234,      0.0312,      0.1396,     -0.3848,      0.1201,     -1.0156,     -0.0010,     -1.1562,     -0.7461,      0.0069,     -0.3125],
        [     0.0000,      0.2598,     -0.8438,     -0.8242,      0.1982,      1.1641,      0.2793,      0.2305,     -0.0981,     -0.6016,      0.2363,     -1.1562,      0.3262,     -0.0605,     -0.2148],
        [     0.0000,     -0.0231,     -1.0312,     -1.0156,     -0.6797,      0.4668,     -0.3398,     -0.4883,      0.1338,     -1.2344,     -0.6680,     -0.8594,     -0.8906,      0.1533,     -0.5117],
        [     0.0000,      0.3789,     -1.0156,     -1.4844,     -0.9570,      0.6836,     -0.3633,     -0.9883,      0.2393,     -0.6055,     -0.3438,     -1.6562,     -0.9531,      0.3281,     -0.7539],
        [     0.0000,     -0.2373,     -1.2109,     -1.1953,     -0.0221,      0.7539,     -0.0027,     -0.1875,     -0.0405,     -0.8008,     -0.5391,     -1.2266,     -0.3145,     -0.1836,      0.0014],
        [     0.0000,      0.0094,     -1.2734,     -1.7188,     -0.6211,      0.4727,     -0.6406,     -1.6094,      0.6992,     -1.5547,     -0.7031,     -1.6953,     -1.8125,      0.7812,     -0.8555],
        [     0.0000,      0.3789,     -1.1016,     -1.3906,     -0.6445,      0.0645,     -0.2812,     -0.7188,      0.0452,     -0.5977,     -0.6641,     -1.6484,     -0.8789,      0.0669,     -0.7695],
        [     0.0000,     -0.1846,      0.4785,      0.5078,     -0.0693,      0.2969,     -0.2432,      0.0498,      0.2002,     -0.1494,      0.5977,      0.4141,      0.2178,      0.2949,      0.3457],
        [     0.0000,      0.1377,     -1.6328,     -2.1406,     -1.2344,      0.8789,     -0.7812,     -1.1016,      0.4395,     -0.9492,     -0.3359,     -2.2812,     -1.2812,      0.5391,     -1.1562],
        [     0.0000,     -0.2969,     -1.1953,     -1.2031,     -0.0125,      0.7266,     -0.0530,     -0.2559,     -0.0645,     -0.8398,     -0.5078,     -1.2578,     -0.3633,     -0.2139,     -0.0145],
        [     0.0000,     -0.1030,     -0.7422,     -0.6602,     -0.6211,     -0.1079,     -0.0294,     -0.1318,      0.1787,     -0.6875,     -0.8555,     -0.4355,     -0.5742,      0.1777,     -0.1045]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4302],
        [0.3403],
        [0.2944],
        [0.3086],
        [0.1300],
        [0.1549],
        [0.0986],
        [0.0938],
        [0.0950],
        [0.0805],
        [0.0846],
        [0.0558],
        [0.0630],
        [0.0834]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1533 a:0.0371,:0.0967 and:0.1621ant:0.0040,:0.2324 a:0.0311
:0.1797)


------
		( a:0.0371,:0.0967 and:0.1621ant:0.0040,:0.2324 a:0.0311
:0.1797The:0.0620)
The first time, and the same, and the same, and the same
@ 550 train 6.3034 , allloss: 6.4191, dt: 1641.32ms, fracRes: 0.0135, norm(attn): 0.0625, norm(output): 0.1367, norm(x): 0.1369, norm(y): 0.9994, norm:1.3728, tok/sec: 79857.59, flops:83.82, batch-reuse:1
@ 551 train 6.3349 , allloss: 6.4474, dt: 1269.93ms, fracRes: 0.0140, norm(attn): 0.0640, norm(output): 0.1348, norm(x): 0.1365, norm(y): 0.9994, norm:1.9272, tok/sec: 103211.80, flops:108.33, batch-reuse:1
@ 552 train 6.2160 , allloss: 6.3276, dt: 1271.18ms, fracRes: 0.0157, norm(attn): 0.0630, norm(output): 0.1348, norm(x): 0.1362, norm(y): 0.9994, norm:2.5627, tok/sec: 103110.77, flops:108.23, batch-reuse:1
@ 553 train 6.3418 , allloss: 6.4515, dt: 1263.77ms, fracRes: 0.0162, norm(attn): 0.0635, norm(output): 0.1348, norm(x): 0.1365, norm(y): 0.9994, norm:1.3076, tok/sec: 103714.71, flops:108.86, batch-reuse:1
@ 554 train 6.2854 , allloss: 6.3947, dt: 1265.92ms, fracRes: 0.0178, norm(attn): 0.0635, norm(output): 0.1357, norm(x): 0.1366, norm(y): 0.9994, norm:1.4455, tok/sec: 103538.70, flops:108.68, batch-reuse:1
@ 555 train 6.2784 , allloss: 6.3891, dt: 1289.00ms, fracRes: 0.0176, norm(attn): 0.0615, norm(output): 0.1357, norm(x): 0.1370, norm(y): 0.9993, norm:1.9075, tok/sec: 101685.31, flops:106.73, batch-reuse:1
@ 556 train 6.2202 , allloss: 6.3286, dt: 1249.76ms, fracRes: 0.0186, norm(attn): 0.0613, norm(output): 0.1367, norm(x): 0.1373, norm(y): 0.9993, norm:1.6056, tok/sec: 104878.08, flops:110.08, batch-reuse:1
@ 557 train 6.3087 , allloss: 6.4169, dt: 1264.71ms, fracRes: 0.0195, norm(attn): 0.0635, norm(output): 0.1377, norm(x): 0.1374, norm(y): 0.9993, norm:1.5235, tok/sec: 103638.36, flops:108.78, batch-reuse:1
@ 558 train 6.4484 , allloss: 6.5570, dt: 1253.96ms, fracRes: 0.0206, norm(attn): 0.0635, norm(output): 0.1377, norm(x): 0.1381, norm(y): 0.9993, norm:1.9027, tok/sec: 104526.51, flops:109.71, batch-reuse:1
@ 559 train 6.5538 , allloss: 6.6618, dt: 1234.39ms, fracRes: 0.0209, norm(attn): 0.0679, norm(output): 0.1387, norm(x): 0.1385, norm(y): 0.9993, norm:1.5799, tok/sec: 106183.72, flops:111.45, batch-reuse:1
@ 560 train 6.4735 , allloss: 6.5816, dt: 1270.57ms, fracRes: 0.0212, norm(attn): 0.0679, norm(output): 0.1387, norm(x): 0.1381, norm(y): 0.9993, norm:1.9560, tok/sec: 103159.82, flops:108.28, batch-reuse:1
@ 561 train 6.5484 , allloss: 6.6577, dt: 1241.14ms, fracRes: 0.0214, norm(attn): 0.0649, norm(output): 0.1387, norm(x): 0.1379, norm(y): 0.9993, norm:1.7064, tok/sec: 105606.21, flops:110.85, batch-reuse:1
@ 562 train 6.4312 , allloss: 6.5385, dt: 1241.75ms, fracRes: 0.0214, norm(attn): 0.0645, norm(output): 0.1377, norm(x): 0.1375, norm(y): 0.9993, norm:1.2308, tok/sec: 105554.06, flops:110.79, batch-reuse:1
@ 563 train 6.5446 , allloss: 6.6527, dt: 1265.99ms, fracRes: 0.0227, norm(attn): 0.0664, norm(output): 0.1367, norm(x): 0.1378, norm(y): 0.9993, norm:1.9508, tok/sec: 103532.83, flops:108.67, batch-reuse:1
@ 564 train 6.3755 , allloss: 6.4843, dt: 1237.39ms, fracRes: 0.0255, norm(attn): 0.0698, norm(output): 0.1367, norm(x): 0.1381, norm(y): 0.9993, norm:1.7796, tok/sec: 105925.85, flops:111.18, batch-reuse:1
@ 565 train 6.2465 , allloss: 6.3513, dt: 1246.55ms, fracRes: 0.0262, norm(attn): 0.0693, norm(output): 0.1387, norm(x): 0.1383, norm(y): 0.9993, norm:2.0976, tok/sec: 105147.72, flops:110.37, batch-reuse:1
@ 566 train 6.4627 , allloss: 6.5708, dt: 1282.06ms, fracRes: 0.0295, norm(attn): 0.0669, norm(output): 0.1387, norm(x): 0.1388, norm(y): 0.9993, norm:2.2590, tok/sec: 102235.80, flops:107.31, batch-reuse:1
@ 567 train 6.4629 , allloss: 6.5714, dt: 1250.17ms, fracRes: 0.0300, norm(attn): 0.0664, norm(output): 0.1387, norm(x): 0.1386, norm(y): 0.9993, norm:1.3128, tok/sec: 104843.52, flops:110.05, batch-reuse:1
@ 568 train 6.5364 , allloss: 6.6445, dt: 1242.10ms, fracRes: 0.0227, norm(attn): 0.0723, norm(output): 0.1387, norm(x): 0.1385, norm(y): 0.9993, norm:2.4123, tok/sec: 105524.39, flops:110.76, batch-reuse:1
@ 569 train 6.4583 , allloss: 6.5637, dt: 1272.57ms, fracRes: 0.0192, norm(attn): 0.0718, norm(output): 0.1387, norm(x): 0.1384, norm(y): 0.9992, norm:1.6390, tok/sec: 102997.98, flops:108.11, batch-reuse:1
@ 570 train 6.4180 , allloss: 6.5244, dt: 1265.86ms, fracRes: 0.0177, norm(attn): 0.0688, norm(output): 0.1387, norm(x): 0.1391, norm(y): 0.9992, norm:1.5987, tok/sec: 103543.73, flops:108.68, batch-reuse:1
@ 571 train 6.3851 , allloss: 6.4925, dt: 1258.31ms, fracRes: 0.0178, norm(attn): 0.0664, norm(output): 0.1387, norm(x): 0.1384, norm(y): 0.9992, norm:1.7200, tok/sec: 104164.73, flops:109.33, batch-reuse:1
@ 572 train 6.3594 , allloss: 6.4647, dt: 1247.33ms, fracRes: 0.0187, norm(attn): 0.0659, norm(output): 0.1387, norm(x): 0.1391, norm(y): 0.9992, norm:1.6727, tok/sec: 105081.92, flops:110.30, batch-reuse:1
@ 573 train 6.4072 , allloss: 6.5108, dt: 1267.58ms, fracRes: 0.0195, norm(attn): 0.0674, norm(output): 0.1396, norm(x): 0.1394, norm(y): 0.9992, norm:2.0937, tok/sec: 103403.68, flops:108.54, batch-reuse:1
@ 574 train 6.4132 , allloss: 6.5168, dt: 1263.12ms, fracRes: 0.0192, norm(attn): 0.0684, norm(output): 0.1396, norm(x): 0.1401, norm(y): 0.9992, norm:2.1950, tok/sec: 103768.39, flops:108.92, batch-reuse:1
@ 575 train 6.3598 , allloss: 6.4636, dt: 1249.13ms, fracRes: 0.0189, norm(attn): 0.0669, norm(output): 0.1396, norm(x): 0.1399, norm(y): 0.9992, norm:1.4568, tok/sec: 104930.27, flops:110.14, batch-reuse:1
@ 576 train 6.3196 , allloss: 6.4202, dt: 1280.99ms, fracRes: 0.0211, norm(attn): 0.0684, norm(output): 0.1396, norm(x): 0.1400, norm(y): 0.9992, norm:1.3997, tok/sec: 102320.81, flops:107.40, batch-reuse:1
@ 577 train 6.4301 , allloss: 6.5346, dt: 1253.68ms, fracRes: 0.0219, norm(attn): 0.0684, norm(output): 0.1396, norm(x): 0.1396, norm(y): 0.9992, norm:1.2986, tok/sec: 104550.12, flops:109.74, batch-reuse:1
@ 578 train 6.3561 , allloss: 6.4607, dt: 1265.07ms, fracRes: 0.0223, norm(attn): 0.0684, norm(output): 0.1387, norm(x): 0.1393, norm(y): 0.9992, norm:1.0421, tok/sec: 103608.40, flops:108.75, batch-reuse:1
@ 579 train 6.3674 , allloss: 6.4692, dt: 1251.03ms, fracRes: 0.0256, norm(attn): 0.0723, norm(output): 0.1387, norm(x): 0.1393, norm(y): 0.9992, norm:1.4831, tok/sec: 104771.33, flops:109.97, batch-reuse:1
@ 580 train 6.4402 , allloss: 6.5442, dt: 1257.01ms, fracRes: 0.0273, norm(attn): 0.0728, norm(output): 0.1387, norm(x): 0.1390, norm(y): 0.9992, norm:1.7737, tok/sec: 104272.80, flops:109.45, batch-reuse:1
@ 581 train 6.3555 , allloss: 6.4601, dt: 1260.12ms, fracRes: 0.0258, norm(attn): 0.0732, norm(output): 0.1387, norm(x): 0.1384, norm(y): 0.9992, norm:1.4882, tok/sec: 104015.12, flops:109.18, batch-reuse:1
@ 582 train 6.3745 , allloss: 6.4784, dt: 1280.81ms, fracRes: 0.0261, norm(attn): 0.0703, norm(output): 0.1387, norm(x): 0.1393, norm(y): 0.9992, norm:1.7135, tok/sec: 102335.35, flops:107.41, batch-reuse:1
@ 583 train 6.3145 , allloss: 6.4177, dt: 1258.91ms, fracRes: 0.0246, norm(attn): 0.0718, norm(output): 0.1387, norm(x): 0.1391, norm(y): 0.9992, norm:1.6382, tok/sec: 104115.23, flops:109.28, batch-reuse:1
@ 584 train 6.4023 , allloss: 6.5037, dt: 1266.48ms, fracRes: 0.0263, norm(attn): 0.0688, norm(output): 0.1387, norm(x): 0.1396, norm(y): 0.9992, norm:1.4726, tok/sec: 103493.25, flops:108.63, batch-reuse:1
@ 585 train 6.3543 , allloss: 6.4540, dt: 1258.78ms, fracRes: 0.0294, norm(attn): 0.0708, norm(output): 0.1396, norm(x): 0.1396, norm(y): 0.9992, norm:1.6525, tok/sec: 104125.88, flops:109.29, batch-reuse:1
@ 586 train 6.3816 , allloss: 6.4810, dt: 1259.95ms, fracRes: 0.0278, norm(attn): 0.0708, norm(output): 0.1387, norm(x): 0.1396, norm(y): 0.9992, norm:1.3670, tok/sec: 104029.55, flops:109.19, batch-reuse:1
@ 587 train 6.3970 , allloss: 6.5009, dt: 1258.04ms, fracRes: 0.0231, norm(attn): 0.0713, norm(output): 0.1396, norm(x): 0.1395, norm(y): 0.9991, norm:2.0416, tok/sec: 104187.29, flops:109.36, batch-reuse:1
@ 588 train 6.3978 , allloss: 6.5016, dt: 1257.50ms, fracRes: 0.0240, norm(attn): 0.0708, norm(output): 0.1396, norm(x): 0.1397, norm(y): 0.9991, norm:1.2535, tok/sec: 104232.19, flops:109.41, batch-reuse:1
@ 589 train 6.4051 , allloss: 6.5057, dt: 1266.34ms, fracRes: 0.0290, norm(attn): 0.0703, norm(output): 0.1387, norm(x): 0.1399, norm(y): 0.9991, norm:1.4293, tok/sec: 103504.27, flops:108.64, batch-reuse:1
@ 590 train 6.3936 , allloss: 6.4939, dt: 1267.62ms, fracRes: 0.0346, norm(attn): 0.0688, norm(output): 0.1387, norm(x): 0.1396, norm(y): 0.9991, norm:1.5477, tok/sec: 103400.38, flops:108.53, batch-reuse:1
@ 591 train 6.3359 , allloss: 6.4346, dt: 1298.10ms, fracRes: 0.0288, norm(attn): 0.0693, norm(output): 0.1387, norm(x): 0.1394, norm(y): 0.9991, norm:1.3563, tok/sec: 100971.97, flops:105.98, batch-reuse:1
@ 592 train 6.3635 , allloss: 6.4616, dt: 1279.18ms, fracRes: 0.0285, norm(attn): 0.0713, norm(output): 0.1396, norm(x): 0.1407, norm(y): 0.9991, norm:2.4842, tok/sec: 102466.00, flops:107.55, batch-reuse:1
@ 593 train 6.3432 , allloss: 6.4417, dt: 1238.29ms, fracRes: 0.0299, norm(attn): 0.0693, norm(output): 0.1396, norm(x): 0.1402, norm(y): 0.9990, norm:1.4071, tok/sec: 105849.01, flops:111.10, batch-reuse:1
@ 594 train 6.5468 , allloss: 6.6506, dt: 1256.10ms, fracRes: 0.0304, norm(attn): 0.0762, norm(output): 0.1396, norm(x): 0.1395, norm(y): 0.9991, norm:2.2841, tok/sec: 104348.35, flops:109.53, batch-reuse:1
@ 595 train 6.3172 , allloss: 6.4178, dt: 1272.75ms, fracRes: 0.0368, norm(attn): 0.0713, norm(output): 0.1387, norm(x): 0.1396, norm(y): 0.9991, norm:1.7060, tok/sec: 102982.95, flops:108.09, batch-reuse:1
@ 596 train 6.3429 , allloss: 6.4406, dt: 1241.72ms, fracRes: 0.0330, norm(attn): 0.0713, norm(output): 0.1387, norm(x): 0.1402, norm(y): 0.9990, norm:1.7504, tok/sec: 105557.18, flops:110.80, batch-reuse:1
@ 597 train 6.3260 , allloss: 6.4248, dt: 1252.53ms, fracRes: 0.0327, norm(attn): 0.0703, norm(output): 0.1387, norm(x): 0.1399, norm(y): 0.9990, norm:1.4700, tok/sec: 104645.95, flops:109.84, batch-reuse:1
@ 598 train 6.4158 , allloss: 6.5180, dt: 1267.26ms, fracRes: 0.0382, norm(attn): 0.0718, norm(output): 0.1377, norm(x): 0.1401, norm(y): 0.9990, norm:1.7386, tok/sec: 103429.58, flops:108.56, batch-reuse:1
@ 599 train 6.4198 , allloss: 6.5189, dt: 1261.97ms, fracRes: 0.0339, norm(attn): 0.0747, norm(output): 0.1387, norm(x): 0.1403, norm(y): 0.9990, norm:1.7351, tok/sec: 103862.63, flops:109.02, batch-reuse:1
@ 600 train 6.3366 , allloss: 6.4339, dt: 1267.06ms, fracRes: 0.0313, norm(attn): 0.0728, norm(output): 0.1387, norm(x): 0.1402, norm(y): 0.9990, norm:1.5421, tok/sec: 103445.85, flops:108.58, batch-reuse:1
@ 601 train 6.4176 , allloss: 6.5179, dt: 1268.75ms, fracRes: 0.0329, norm(attn): 0.0713, norm(output): 0.1387, norm(x): 0.1402, norm(y): 0.9990, norm:1.9498, tok/sec: 103308.24, flops:108.44, batch-reuse:1
@ 602 train 6.3879 , allloss: 6.4875, dt: 1257.37ms, fracRes: 0.0348, norm(attn): 0.0728, norm(output): 0.1387, norm(x): 0.1397, norm(y): 0.9990, norm:1.5400, tok/sec: 104243.38, flops:109.42, batch-reuse:1
@ 603 train 6.3264 , allloss: 6.4226, dt: 1291.75ms, fracRes: 0.0353, norm(attn): 0.0747, norm(output): 0.1387, norm(x): 0.1398, norm(y): 0.9990, norm:1.2657, tok/sec: 101468.42, flops:106.50, batch-reuse:1
@ 604 train 6.2529 , allloss: 6.3495, dt: 1256.25ms, fracRes: 0.0326, norm(attn): 0.0747, norm(output): 0.1387, norm(x): 0.1401, norm(y): 0.9990, norm:1.7940, tok/sec: 104335.99, flops:109.51, batch-reuse:1
@ 605 train 6.2752 , allloss: 6.3732, dt: 1244.53ms, fracRes: 0.0292, norm(attn): 0.0791, norm(output): 0.1387, norm(x): 0.1397, norm(y): 0.9989, norm:1.5385, tok/sec: 105318.32, flops:110.55, batch-reuse:1
@ 606 train 6.3045 , allloss: 6.4002, dt: 1279.17ms, fracRes: 0.0322, norm(attn): 0.0747, norm(output): 0.1396, norm(x): 0.1400, norm(y): 0.9989, norm:1.3925, tok/sec: 102466.27, flops:107.55, batch-reuse:1
@ 607 train 6.2950 , allloss: 6.3907, dt: 1262.69ms, fracRes: 0.0367, norm(attn): 0.0718, norm(output): 0.1396, norm(x): 0.1401, norm(y): 0.9990, norm:1.8115, tok/sec: 103803.99, flops:108.96, batch-reuse:1
@ 608 train 6.2161 , allloss: 6.3131, dt: 1257.85ms, fracRes: 0.0351, norm(attn): 0.0713, norm(output): 0.1387, norm(x): 0.1398, norm(y): 0.9989, norm:1.7197, tok/sec: 104203.58, flops:109.38, batch-reuse:1
@ 609 train 6.2731 , allloss: 6.3693, dt: 1261.34ms, fracRes: 0.0349, norm(attn): 0.0742, norm(output): 0.1396, norm(x): 0.1399, norm(y): 0.9990, norm:1.2747, tok/sec: 103915.27, flops:109.07, batch-reuse:1
@ 610 train 6.4310 , allloss: 6.5291, dt: 1267.95ms, fracRes: 0.0310, norm(attn): 0.0762, norm(output): 0.1396, norm(x): 0.1403, norm(y): 0.9989, norm:1.4225, tok/sec: 103373.27, flops:108.50, batch-reuse:1
@ 611 train 6.3274 , allloss: 6.4258, dt: 1251.31ms, fracRes: 0.0311, norm(attn): 0.0742, norm(output): 0.1387, norm(x): 0.1400, norm(y): 0.9989, norm:1.5523, tok/sec: 104747.58, flops:109.95, batch-reuse:1
@ 612 train 6.3581 , allloss: 6.4559, dt: 1255.83ms, fracRes: 0.0330, norm(attn): 0.0771, norm(output): 0.1387, norm(x): 0.1398, norm(y): 0.9989, norm:1.5595, tok/sec: 104371.13, flops:109.55, batch-reuse:1
@ 613 train 6.4211 , allloss: 6.5192, dt: 1257.59ms, fracRes: 0.0379, norm(attn): 0.0791, norm(output): 0.1377, norm(x): 0.1398, norm(y): 0.9989, norm:1.6747, tok/sec: 104224.76, flops:109.40, batch-reuse:1
@ 614 train 6.3527 , allloss: 6.4483, dt: 1266.75ms, fracRes: 0.0421, norm(attn): 0.0781, norm(output): 0.1387, norm(x): 0.1408, norm(y): 0.9989, norm:1.3999, tok/sec: 103471.45, flops:108.61, batch-reuse:1
@ 615 train 6.3461 , allloss: 6.4424, dt: 1253.28ms, fracRes: 0.0442, norm(attn): 0.0791, norm(output): 0.1387, norm(x): 0.1406, norm(y): 0.9989, norm:1.3863, tok/sec: 104583.40, flops:109.77, batch-reuse:1
@ 616 train 6.3643 , allloss: 6.4588, dt: 1257.19ms, fracRes: 0.0426, norm(attn): 0.0781, norm(output): 0.1387, norm(x): 0.1408, norm(y): 0.9989, norm:1.4604, tok/sec: 104257.61, flops:109.43, batch-reuse:1
@ 617 train 6.1665 , allloss: 6.2616, dt: 1280.81ms, fracRes: 0.0302, norm(attn): 0.0830, norm(output): 0.1387, norm(x): 0.1397, norm(y): 0.9988, norm:1.7998, tok/sec: 102334.95, flops:107.41, batch-reuse:1
@ 618 train 6.3225 , allloss: 6.4191, dt: 1246.15ms, fracRes: 0.0431, norm(attn): 0.0796, norm(output): 0.1357, norm(x): 0.1398, norm(y): 0.9989, norm:1.8776, tok/sec: 105181.48, flops:110.40, batch-reuse:1
@ 619 train 6.2869 , allloss: 6.3827, dt: 1244.08ms, fracRes: 0.0386, norm(attn): 0.0820, norm(output): 0.1396, norm(x): 0.1411, norm(y): 0.9989, norm:2.6984, tok/sec: 105356.18, flops:110.59, batch-reuse:1
@ 620 train 6.2840 , allloss: 6.3782, dt: 1277.32ms, fracRes: 0.0315, norm(attn): 0.0781, norm(output): 0.1387, norm(x): 0.1399, norm(y): 0.9988, norm:1.2304, tok/sec: 102614.57, flops:107.71, batch-reuse:1
@ 621 train 6.2999 , allloss: 6.3960, dt: 1263.88ms, fracRes: 0.0298, norm(attn): 0.0796, norm(output): 0.1387, norm(x): 0.1400, norm(y): 0.9988, norm:2.1212, tok/sec: 103706.24, flops:108.85, batch-reuse:1
@ 622 train 6.2290 , allloss: 6.3256, dt: 1263.88ms, fracRes: 0.0307, norm(attn): 0.0786, norm(output): 0.1387, norm(x): 0.1401, norm(y): 0.9987, norm:1.4321, tok/sec: 103706.24, flops:108.85, batch-reuse:1
@ 623 train 6.2363 , allloss: 6.3311, dt: 1291.78ms, fracRes: 0.0324, norm(attn): 0.0811, norm(output): 0.1396, norm(x): 0.1409, norm(y): 0.9987, norm:1.6171, tok/sec: 101466.04, flops:106.50, batch-reuse:1
@ 624 train 6.3356 , allloss: 6.4286, dt: 1259.85ms, fracRes: 0.0378, norm(attn): 0.0796, norm(output): 0.1387, norm(x): 0.1407, norm(y): 0.9988, norm:1.6762, tok/sec: 104037.88, flops:109.20, batch-reuse:1
@ 625 train 6.3770 , allloss: 6.4731, dt: 1271.89ms, fracRes: 0.0419, norm(attn): 0.0786, norm(output): 0.1387, norm(x): 0.1410, norm(y): 0.9988, norm:1.8693, tok/sec: 103053.08, flops:108.17, batch-reuse:1
@ 626 train 6.2951 , allloss: 6.3911, dt: 1273.56ms, fracRes: 0.0404, norm(attn): 0.0752, norm(output): 0.1387, norm(x): 0.1401, norm(y): 0.9988, norm:1.3611, tok/sec: 102917.97, flops:108.03, batch-reuse:1
@ 627 train 6.2695 , allloss: 6.3646, dt: 1265.11ms, fracRes: 0.0397, norm(attn): 0.0801, norm(output): 0.1387, norm(x): 0.1408, norm(y): 0.9988, norm:1.6951, tok/sec: 103605.02, flops:108.75, batch-reuse:1
@ 628 train 6.3311 , allloss: 6.4247, dt: 1239.70ms, fracRes: 0.0381, norm(attn): 0.0811, norm(output): 0.1396, norm(x): 0.1412, norm(y): 0.9987, norm:1.4034, tok/sec: 105728.68, flops:110.98, batch-reuse:1
@ 629 train 6.3571 , allloss: 6.4520, dt: 1260.00ms, fracRes: 0.0309, norm(attn): 0.0840, norm(output): 0.1396, norm(x): 0.1407, norm(y): 0.9987, norm:1.3823, tok/sec: 104025.54, flops:109.19, batch-reuse:1
@ 630 train 6.4452 , allloss: 6.5423, dt: 1254.26ms, fracRes: 0.0412, norm(attn): 0.0796, norm(output): 0.1396, norm(x): 0.1404, norm(y): 0.9988, norm:1.7936, tok/sec: 104501.61, flops:109.69, batch-reuse:1
@ 631 train 6.3677 , allloss: 6.4617, dt: 1277.54ms, fracRes: 0.0483, norm(attn): 0.0771, norm(output): 0.1367, norm(x): 0.1398, norm(y): 0.9988, norm:1.7827, tok/sec: 102597.10, flops:107.69, batch-reuse:1
@ 632 train 6.5091 , allloss: 6.6031, dt: 1259.61ms, fracRes: 0.0525, norm(attn): 0.0762, norm(output): 0.1357, norm(x): 0.1404, norm(y): 0.9988, norm:1.9244, tok/sec: 104057.51, flops:109.22, batch-reuse:1
@ 633 train 6.4491 , allloss: 6.5444, dt: 1253.26ms, fracRes: 0.0502, norm(attn): 0.0791, norm(output): 0.1377, norm(x): 0.1408, norm(y): 0.9987, norm:3.3223, tok/sec: 104584.77, flops:109.78, batch-reuse:1
@ 634 train 6.2530 , allloss: 6.3449, dt: 1263.43ms, fracRes: 0.0283, norm(attn): 0.0850, norm(output): 0.1396, norm(x): 0.1402, norm(y): 0.9986, norm:1.5025, tok/sec: 103743.07, flops:108.89, batch-reuse:1
@ 635 train 6.3877 , allloss: 6.4801, dt: 1257.63ms, fracRes: 0.0246, norm(attn): 0.0864, norm(output): 0.1396, norm(x): 0.1406, norm(y): 0.9986, norm:2.7089, tok/sec: 104221.46, flops:109.39, batch-reuse:1
@ 636 train 6.3905 , allloss: 6.4828, dt: 1263.58ms, fracRes: 0.0287, norm(attn): 0.0830, norm(output): 0.1396, norm(x): 0.1412, norm(y): 0.9986, norm:1.2559, tok/sec: 103730.92, flops:108.88, batch-reuse:1
@ 637 train 6.2546 , allloss: 6.3479, dt: 1253.77ms, fracRes: 0.0376, norm(attn): 0.0776, norm(output): 0.1396, norm(x): 0.1411, norm(y): 0.9987, norm:2.1681, tok/sec: 104541.99, flops:109.73, batch-reuse:1
@ 638 train 6.2479 , allloss: 6.3437, dt: 1252.86ms, fracRes: 0.0554, norm(attn): 0.0771, norm(output): 0.1387, norm(x): 0.1422, norm(y): 0.9987, norm:2.1118, tok/sec: 104618.49, flops:109.81, batch-reuse:1
@ 639 train 6.3245 , allloss: 6.4156, dt: 1277.09ms, fracRes: 0.0417, norm(attn): 0.0786, norm(output): 0.1396, norm(x): 0.1419, norm(y): 0.9987, norm:1.4917, tok/sec: 102633.40, flops:107.73, batch-reuse:1
@ 640 train 6.2341 , allloss: 6.3242, dt: 1264.99ms, fracRes: 0.0348, norm(attn): 0.0776, norm(output): 0.1396, norm(x): 0.1413, norm(y): 0.9986, norm:1.1408, tok/sec: 103614.90, flops:108.76, batch-reuse:1
@ 641 train 6.2828 , allloss: 6.3769, dt: 1281.30ms, fracRes: 0.0435, norm(attn): 0.0806, norm(output): 0.1387, norm(x): 0.1420, norm(y): 0.9987, norm:2.1310, tok/sec: 102296.21, flops:107.37, batch-reuse:1
@ 642 train 6.2026 , allloss: 6.2946, dt: 1266.70ms, fracRes: 0.0313, norm(attn): 0.0796, norm(output): 0.1396, norm(x): 0.1413, norm(y): 0.9986, norm:1.5264, tok/sec: 103475.11, flops:108.61, batch-reuse:1
@ 643 train 6.2312 , allloss: 6.3197, dt: 1274.92ms, fracRes: 0.0281, norm(attn): 0.0820, norm(output): 0.1396, norm(x): 0.1413, norm(y): 0.9986, norm:1.5511, tok/sec: 102807.94, flops:107.91, batch-reuse:1
@ 644 train 6.4334 , allloss: 6.5241, dt: 1256.41ms, fracRes: 0.0278, norm(attn): 0.0850, norm(output): 0.1406, norm(x): 0.1419, norm(y): 0.9986, norm:1.9330, tok/sec: 104322.56, flops:109.50, batch-reuse:1
@ 645 train 6.3492 , allloss: 6.4398, dt: 1269.32ms, fracRes: 0.0288, norm(attn): 0.0840, norm(output): 0.1396, norm(x): 0.1412, norm(y): 0.9986, norm:1.1141, tok/sec: 103261.20, flops:108.39, batch-reuse:1
@ 646 train 6.2646 , allloss: 6.3544, dt: 1255.93ms, fracRes: 0.0336, norm(attn): 0.0830, norm(output): 0.1396, norm(x): 0.1407, norm(y): 0.9986, norm:2.2627, tok/sec: 104362.29, flops:109.54, batch-reuse:1
@ 647 train 6.3018 , allloss: 6.3929, dt: 1275.97ms, fracRes: 0.0342, norm(attn): 0.0791, norm(output): 0.1387, norm(x): 0.1409, norm(y): 0.9986, norm:1.4223, tok/sec: 102723.09, flops:107.82, batch-reuse:1
@ 648 train 6.1876 , allloss: 6.2767, dt: 1248.02ms, fracRes: 0.0295, norm(attn): 0.0820, norm(output): 0.1396, norm(x): 0.1409, norm(y): 0.9986, norm:1.4170, tok/sec: 105024.16, flops:110.24, batch-reuse:1
@ 649 train 6.2908 , allloss: 6.3780, dt: 1281.96ms, fracRes: 0.0312, norm(attn): 0.0864, norm(output): 0.1396, norm(x): 0.1421, norm(y): 0.9985, norm:1.4341, tok/sec: 102243.32, flops:107.32, batch-reuse:1
@ 650 train 6.1802 , allloss: 6.2680, dt: 1267.89ms, fracRes: 0.0304, norm(attn): 0.0879, norm(output): 0.1396, norm(x): 0.1420, norm(y): 0.9985, norm:1.6597, tok/sec: 103378.04, flops:108.51, batch-reuse:1
@ 651 train 6.2566 , allloss: 6.3458, dt: 1238.02ms, fracRes: 0.0456, norm(attn): 0.0811, norm(output): 0.1396, norm(x): 0.1426, norm(y): 0.9986, norm:1.5521, tok/sec: 105872.14, flops:111.13, batch-reuse:1
@ 652 train 6.1511 , allloss: 6.2390, dt: 1252.30ms, fracRes: 0.0461, norm(attn): 0.0801, norm(output): 0.1396, norm(x): 0.1431, norm(y): 0.9986, norm:1.3572, tok/sec: 104664.89, flops:109.86, batch-reuse:1
@ 653 train 6.1525 , allloss: 6.2399, dt: 1256.91ms, fracRes: 0.0376, norm(attn): 0.0815, norm(output): 0.1396, norm(x): 0.1427, norm(y): 0.9986, norm:1.1452, tok/sec: 104281.52, flops:109.46, batch-reuse:1
@ 654 train 6.2101 , allloss: 6.2995, dt: 1309.53ms, fracRes: 0.0362, norm(attn): 0.0830, norm(output): 0.1396, norm(x): 0.1424, norm(y): 0.9985, norm:1.4505, tok/sec: 100090.96, flops:105.06, batch-reuse:1
@ 655 train 6.2289 , allloss: 6.3164, dt: 1301.57ms, fracRes: 0.0399, norm(attn): 0.0859, norm(output): 0.1406, norm(x): 0.1434, norm(y): 0.9985, norm:1.2859, tok/sec: 100703.11, flops:105.70, batch-reuse:1
@ 656 train 6.1482 , allloss: 6.2350, dt: 1273.29ms, fracRes: 0.0392, norm(attn): 0.0884, norm(output): 0.1406, norm(x): 0.1429, norm(y): 0.9985, norm:1.5044, tok/sec: 102939.67, flops:108.05, batch-reuse:1
@ 657 train 6.1762 , allloss: 6.2653, dt: 1292.06ms, fracRes: 0.0419, norm(attn): 0.0869, norm(output): 0.1396, norm(x): 0.1419, norm(y): 0.9985, norm:1.2435, tok/sec: 101444.04, flops:106.48, batch-reuse:1
@ 658 train 6.2772 , allloss: 6.3687, dt: 1278.11ms, fracRes: 0.0531, norm(attn): 0.0835, norm(output): 0.1396, norm(x): 0.1431, norm(y): 0.9985, norm:1.8261, tok/sec: 102551.08, flops:107.64, batch-reuse:1
@ 659 train 6.2410 , allloss: 6.3297, dt: 1266.20ms, fracRes: 0.0532, norm(attn): 0.0840, norm(output): 0.1387, norm(x): 0.1425, norm(y): 0.9985, norm:1.5817, tok/sec: 103516.34, flops:108.65, batch-reuse:1
@ 660 train 6.2649 , allloss: 6.3524, dt: 1277.81ms, fracRes: 0.0484, norm(attn): 0.0859, norm(output): 0.1396, norm(x): 0.1433, norm(y): 0.9985, norm:1.7631, tok/sec: 102575.70, flops:107.67, batch-reuse:1
@ 661 train 6.2151 , allloss: 6.3018, dt: 1262.11ms, fracRes: 0.0369, norm(attn): 0.0898, norm(output): 0.1406, norm(x): 0.1429, norm(y): 0.9984, norm:1.2904, tok/sec: 103851.49, flops:109.01, batch-reuse:1
@ 662 train 6.2661 , allloss: 6.3522, dt: 1255.63ms, fracRes: 0.0526, norm(attn): 0.0820, norm(output): 0.1396, norm(x): 0.1433, norm(y): 0.9985, norm:1.2737, tok/sec: 104387.70, flops:109.57, batch-reuse:1
@ 663 train 6.2411 , allloss: 6.3304, dt: 1281.63ms, fracRes: 0.0492, norm(attn): 0.0811, norm(output): 0.1406, norm(x): 0.1435, norm(y): 0.9985, norm:2.1713, tok/sec: 102269.67, flops:107.35, batch-reuse:1
@ 664 train 6.1747 , allloss: 6.2607, dt: 1256.42ms, fracRes: 0.0397, norm(attn): 0.0825, norm(output): 0.1396, norm(x): 0.1423, norm(y): 0.9984, norm:1.2775, tok/sec: 104321.65, flops:109.50, batch-reuse:1
@ 665 train 6.2183 , allloss: 6.3030, dt: 1288.28ms, fracRes: 0.0462, norm(attn): 0.0835, norm(output): 0.1396, norm(x): 0.1431, norm(y): 0.9985, norm:2.0148, tok/sec: 101742.03, flops:106.79, batch-reuse:1
@ 666 train 6.0309 , allloss: 6.1156, dt: 1270.76ms, fracRes: 0.0356, norm(attn): 0.0889, norm(output): 0.1406, norm(x): 0.1437, norm(y): 0.9984, norm:2.4182, tok/sec: 103144.96, flops:108.26, batch-reuse:1
@ 667 train 5.9930 , allloss: 6.0795, dt: 1292.58ms, fracRes: 0.0320, norm(attn): 0.0903, norm(output): 0.1416, norm(x): 0.1433, norm(y): 0.9984, norm:1.6196, tok/sec: 101403.38, flops:106.44, batch-reuse:1
@ 668 train 6.2475 , allloss: 6.3359, dt: 1280.08ms, fracRes: 0.0347, norm(attn): 0.0879, norm(output): 0.1396, norm(x): 0.1419, norm(y): 0.9984, norm:1.9600, tok/sec: 102393.84, flops:107.48, batch-reuse:1
@ 669 train 6.1814 , allloss: 6.2694, dt: 1257.02ms, fracRes: 0.0418, norm(attn): 0.0854, norm(output): 0.1396, norm(x): 0.1423, norm(y): 0.9984, norm:1.4647, tok/sec: 104271.99, flops:109.45, batch-reuse:1
@ 670 train 6.2721 , allloss: 6.3593, dt: 1253.10ms, fracRes: 0.0495, norm(attn): 0.0820, norm(output): 0.1396, norm(x): 0.1430, norm(y): 0.9984, norm:1.3118, tok/sec: 104597.94, flops:109.79, batch-reuse:1
@ 671 train 6.1591 , allloss: 6.2429, dt: 1234.47ms, fracRes: 0.0532, norm(attn): 0.0811, norm(output): 0.1396, norm(x): 0.1433, norm(y): 0.9984, norm:1.5695, tok/sec: 106176.85, flops:111.45, batch-reuse:1
@ 672 train 6.1893 , allloss: 6.2717, dt: 1247.89ms, fracRes: 0.0501, norm(attn): 0.0850, norm(output): 0.1396, norm(x): 0.1441, norm(y): 0.9984, norm:1.4558, tok/sec: 105034.88, flops:110.25, batch-reuse:1
@ 673 train 6.2267 , allloss: 6.3106, dt: 1313.09ms, fracRes: 0.0508, norm(attn): 0.0835, norm(output): 0.1396, norm(x): 0.1440, norm(y): 0.9984, norm:1.9149, tok/sec: 99819.72, flops:104.77, batch-reuse:1
@ 674 train 6.2075 , allloss: 6.2932, dt: 1266.40ms, fracRes: 0.0603, norm(attn): 0.0845, norm(output): 0.1396, norm(x): 0.1440, norm(y): 0.9984, norm:1.4905, tok/sec: 103499.81, flops:108.64, batch-reuse:1
@ 675 train 6.1089 , allloss: 6.1987, dt: 1251.65ms, fracRes: 0.0356, norm(attn): 0.0923, norm(output): 0.1406, norm(x): 0.1430, norm(y): 0.9982, norm:1.7930, tok/sec: 104719.46, flops:109.92, batch-reuse:1
@ 676 train 6.1604 , allloss: 6.2458, dt: 1260.41ms, fracRes: 0.0341, norm(attn): 0.0942, norm(output): 0.1406, norm(x): 0.1432, norm(y): 0.9983, norm:1.6858, tok/sec: 103991.24, flops:109.15, batch-reuse:1
@ 677 train 6.3061 , allloss: 6.3912, dt: 1312.33ms, fracRes: 0.0505, norm(attn): 0.0879, norm(output): 0.1406, norm(x): 0.1449, norm(y): 0.9983, norm:1.7846, tok/sec: 99877.23, flops:104.83, batch-reuse:1
@ 678 train 6.1165 , allloss: 6.1984, dt: 1250.75ms, fracRes: 0.0458, norm(attn): 0.0840, norm(output): 0.1396, norm(x): 0.1434, norm(y): 0.9983, norm:1.0748, tok/sec: 104794.66, flops:110.00, batch-reuse:1
@ 679 train 6.2017 , allloss: 6.2842, dt: 1259.77ms, fracRes: 0.0475, norm(attn): 0.0864, norm(output): 0.1396, norm(x): 0.1434, norm(y): 0.9983, norm:2.2500, tok/sec: 104044.55, flops:109.21, batch-reuse:1
@ 680 train 6.1594 , allloss: 6.2419, dt: 1281.35ms, fracRes: 0.0378, norm(attn): 0.0908, norm(output): 0.1406, norm(x): 0.1432, norm(y): 0.9982, norm:1.4801, tok/sec: 102292.27, flops:107.37, batch-reuse:1
@ 681 train 6.1876 , allloss: 6.2704, dt: 1292.09ms, fracRes: 0.0406, norm(attn): 0.0874, norm(output): 0.1406, norm(x): 0.1438, norm(y): 0.9983, norm:1.7382, tok/sec: 101442.10, flops:106.48, batch-reuse:1
@ 682 train 6.2039 , allloss: 6.2848, dt: 1284.88ms, fracRes: 0.0464, norm(attn): 0.0869, norm(output): 0.1406, norm(x): 0.1442, norm(y): 0.9983, norm:1.3383, tok/sec: 102010.98, flops:107.07, batch-reuse:1
@ 683 train 6.1569 , allloss: 6.2384, dt: 1244.45ms, fracRes: 0.0444, norm(attn): 0.0869, norm(output): 0.1396, norm(x): 0.1439, norm(y): 0.9983, norm:1.5937, tok/sec: 105325.28, flops:110.55, batch-reuse:1
@ 684 train 6.1386 , allloss: 6.2207, dt: 1250.39ms, fracRes: 0.0460, norm(attn): 0.0903, norm(output): 0.1406, norm(x): 0.1434, norm(y): 0.9983, norm:2.3558, tok/sec: 104825.21, flops:110.03, batch-reuse:1
@ 685 train 6.2128 , allloss: 6.2954, dt: 1260.74ms, fracRes: 0.0347, norm(attn): 0.0928, norm(output): 0.1406, norm(x): 0.1432, norm(y): 0.9982, norm:1.5720, tok/sec: 103964.43, flops:109.12, batch-reuse:1
@ 686 train 6.2939 , allloss: 6.3752, dt: 1249.14ms, fracRes: 0.0420, norm(attn): 0.0898, norm(output): 0.1406, norm(x): 0.1436, norm(y): 0.9983, norm:1.9605, tok/sec: 104929.67, flops:110.14, batch-reuse:1
@ 687 train 6.1976 , allloss: 6.2789, dt: 1254.95ms, fracRes: 0.0434, norm(attn): 0.0908, norm(output): 0.1406, norm(x): 0.1439, norm(y): 0.9982, norm:1.5532, tok/sec: 104443.92, flops:109.63, batch-reuse:1
@ 688 train 6.2127 , allloss: 6.2950, dt: 1290.43ms, fracRes: 0.0490, norm(attn): 0.0864, norm(output): 0.1406, norm(x): 0.1444, norm(y): 0.9982, norm:1.4560, tok/sec: 101572.71, flops:106.61, batch-reuse:1
@ 689 train 6.1826 , allloss: 6.2658, dt: 1269.36ms, fracRes: 0.0445, norm(attn): 0.0884, norm(output): 0.1406, norm(x): 0.1438, norm(y): 0.9982, norm:1.7985, tok/sec: 103258.60, flops:108.38, batch-reuse:1
@ 690 train 6.1537 , allloss: 6.2365, dt: 1278.42ms, fracRes: 0.0432, norm(attn): 0.0898, norm(output): 0.1406, norm(x): 0.1444, norm(y): 0.9982, norm:1.3549, tok/sec: 102526.94, flops:107.62, batch-reuse:1
@ 691 train 6.1551 , allloss: 6.2394, dt: 1273.68ms, fracRes: 0.0524, norm(attn): 0.0889, norm(output): 0.1406, norm(x): 0.1454, norm(y): 0.9982, norm:1.4258, tok/sec: 102907.78, flops:108.02, batch-reuse:1
@ 692 train 6.1292 , allloss: 6.2122, dt: 1264.06ms, fracRes: 0.0619, norm(attn): 0.0850, norm(output): 0.1406, norm(x): 0.1459, norm(y): 0.9982, norm:1.8280, tok/sec: 103691.02, flops:108.84, batch-reuse:1
@ 693 train 6.1956 , allloss: 6.2759, dt: 1245.65ms, fracRes: 0.0367, norm(attn): 0.0991, norm(output): 0.1416, norm(x): 0.1447, norm(y): 0.9981, norm:1.7954, tok/sec: 105223.77, flops:110.45, batch-reuse:1
@ 694 train 6.0828 , allloss: 6.1656, dt: 1275.79ms, fracRes: 0.0343, norm(attn): 0.0981, norm(output): 0.1416, norm(x): 0.1448, norm(y): 0.9981, norm:1.3836, tok/sec: 102737.76, flops:107.84, batch-reuse:1
@ 695 train 6.1609 , allloss: 6.2434, dt: 1260.57ms, fracRes: 0.0446, norm(attn): 0.0898, norm(output): 0.1406, norm(x): 0.1449, norm(y): 0.9981, norm:1.5646, tok/sec: 103978.35, flops:109.14, batch-reuse:1
@ 696 train 6.0350 , allloss: 6.1176, dt: 1284.75ms, fracRes: 0.0497, norm(attn): 0.0889, norm(output): 0.1396, norm(x): 0.1443, norm(y): 0.9982, norm:1.4692, tok/sec: 102021.29, flops:107.08, batch-reuse:1
@ 697 train 6.0649 , allloss: 6.1470, dt: 1245.86ms, fracRes: 0.0555, norm(attn): 0.0898, norm(output): 0.1406, norm(x): 0.1450, norm(y): 0.9982, norm:1.7141, tok/sec: 105205.95, flops:110.43, batch-reuse:1
@ 698 train 6.1800 , allloss: 6.2596, dt: 1260.56ms, fracRes: 0.0452, norm(attn): 0.0918, norm(output): 0.1406, norm(x): 0.1442, norm(y): 0.9981, norm:1.9888, tok/sec: 103979.38, flops:109.14, batch-reuse:1
@ 699 train 6.1566 , allloss: 6.2382, dt: 1281.57ms, fracRes: 0.0463, norm(attn): 0.0918, norm(output): 0.1406, norm(x): 0.1448, norm(y): 0.9981, norm:1.4153, tok/sec: 102274.16, flops:107.35, batch-reuse:1
@ 700 train 6.1262 , allloss: 6.2066, dt: 1264.23ms, fracRes: 0.0510, norm(attn): 0.0898, norm(output): 0.1406, norm(x): 0.1444, norm(y): 0.9981, norm:1.4912, tok/sec: 103677.61, flops:108.82, batch-reuse:1
@ 701 train 6.2218 , allloss: 6.3030, dt: 1244.48ms, fracRes: 0.0565, norm(attn): 0.0918, norm(output): 0.1406, norm(x): 0.1451, norm(y): 0.9981, norm:1.9468, tok/sec: 105322.88, flops:110.55, batch-reuse:1
@ 702 train 6.2062 , allloss: 6.2866, dt: 1254.15ms, fracRes: 0.0604, norm(attn): 0.0933, norm(output): 0.1406, norm(x): 0.1460, norm(y): 0.9981, norm:1.5971, tok/sec: 104510.93, flops:109.70, batch-reuse:1
@ 703 train 6.1483 , allloss: 6.2273, dt: 1274.12ms, fracRes: 0.0576, norm(attn): 0.0933, norm(output): 0.1406, norm(x): 0.1454, norm(y): 0.9981, norm:1.5334, tok/sec: 102872.18, flops:107.98, batch-reuse:1
@ 704 train 6.0686 , allloss: 6.1494, dt: 1261.93ms, fracRes: 0.0627, norm(attn): 0.0903, norm(output): 0.1396, norm(x): 0.1447, norm(y): 0.9981, norm:1.4919, tok/sec: 103866.24, flops:109.02, batch-reuse:1
@ 705 train 6.1287 , allloss: 6.2113, dt: 1253.83ms, fracRes: 0.0618, norm(attn): 0.0894, norm(output): 0.1396, norm(x): 0.1449, norm(y): 0.9981, norm:1.7818, tok/sec: 104537.18, flops:109.73, batch-reuse:1
@ 706 train 6.1031 , allloss: 6.1841, dt: 1266.72ms, fracRes: 0.0580, norm(attn): 0.0938, norm(output): 0.1406, norm(x): 0.1453, norm(y): 0.9981, norm:1.4063, tok/sec: 103473.32, flops:108.61, batch-reuse:1
@ 707 train 6.1216 , allloss: 6.2016, dt: 1299.93ms, fracRes: 0.0481, norm(attn): 0.0962, norm(output): 0.1406, norm(x): 0.1448, norm(y): 0.9980, norm:1.3641, tok/sec: 100829.83, flops:105.83, batch-reuse:1
@ 708 train 6.1236 , allloss: 6.2057, dt: 1239.64ms, fracRes: 0.0413, norm(attn): 0.0957, norm(output): 0.1406, norm(x): 0.1448, norm(y): 0.9980, norm:1.4366, tok/sec: 105733.82, flops:110.98, batch-reuse:1
@ 709 train 6.1139 , allloss: 6.1921, dt: 1294.27ms, fracRes: 0.0588, norm(attn): 0.0869, norm(output): 0.1396, norm(x): 0.1454, norm(y): 0.9981, norm:1.8169, tok/sec: 101270.89, flops:106.30, batch-reuse:1
@ 710 train 6.1979 , allloss: 6.2774, dt: 1255.46ms, fracRes: 0.0605, norm(attn): 0.0874, norm(output): 0.1396, norm(x): 0.1461, norm(y): 0.9981, norm:1.8736, tok/sec: 104401.81, flops:109.58, batch-reuse:1
@ 711 train 6.1818 , allloss: 6.2595, dt: 1278.05ms, fracRes: 0.0396, norm(attn): 0.0938, norm(output): 0.1406, norm(x): 0.1439, norm(y): 0.9980, norm:1.5519, tok/sec: 102556.03, flops:107.65, batch-reuse:1
@ 712 train 6.0793 , allloss: 6.1562, dt: 1252.97ms, fracRes: 0.0348, norm(attn): 0.0977, norm(output): 0.1406, norm(x): 0.1436, norm(y): 0.9980, norm:1.5208, tok/sec: 104609.21, flops:109.80, batch-reuse:1
@ 713 train 6.1706 , allloss: 6.2469, dt: 1254.52ms, fracRes: 0.0509, norm(attn): 0.0908, norm(output): 0.1406, norm(x): 0.1453, norm(y): 0.9981, norm:2.5377, tok/sec: 104479.83, flops:109.67, batch-reuse:1
@ 714 train 6.0352 , allloss: 6.1103, dt: 1275.66ms, fracRes: 0.0498, norm(attn): 0.0898, norm(output): 0.1406, norm(x): 0.1448, norm(y): 0.9981, norm:1.2796, tok/sec: 102748.59, flops:107.85, batch-reuse:1
@ 715 train 6.0757 , allloss: 6.1516, dt: 1253.92ms, fracRes: 0.0372, norm(attn): 0.0923, norm(output): 0.1406, norm(x): 0.1443, norm(y): 0.9980, norm:1.3938, tok/sec: 104529.59, flops:109.72, batch-reuse:1
@ 716 train 6.1085 , allloss: 6.1834, dt: 1249.61ms, fracRes: 0.0305, norm(attn): 0.0986, norm(output): 0.1416, norm(x): 0.1445, norm(y): 0.9979, norm:1.3980, tok/sec: 104890.05, flops:110.10, batch-reuse:1
@ 717 train 5.9571 , allloss: 6.0299, dt: 1248.85ms, fracRes: 0.0345, norm(attn): 0.0972, norm(output): 0.1416, norm(x): 0.1445, norm(y): 0.9979, norm:1.4680, tok/sec: 104954.53, flops:110.16, batch-reuse:1
@ 718 train 6.1198 , allloss: 6.1930, dt: 1271.06ms, fracRes: 0.0387, norm(attn): 0.0938, norm(output): 0.1406, norm(x): 0.1448, norm(y): 0.9980, norm:1.2012, tok/sec: 103119.92, flops:108.24, batch-reuse:1
@ 719 train 6.0746 , allloss: 6.1504, dt: 1274.69ms, fracRes: 0.0468, norm(attn): 0.0938, norm(output): 0.1406, norm(x): 0.1454, norm(y): 0.9980, norm:1.7127, tok/sec: 102826.62, flops:107.93, batch-reuse:1
@ 720 train 6.0507 , allloss: 6.1271, dt: 1300.09ms, fracRes: 0.0483, norm(attn): 0.0942, norm(output): 0.1406, norm(x): 0.1452, norm(y): 0.9980, norm:1.3878, tok/sec: 100817.52, flops:105.82, batch-reuse:1
@ 721 train 5.9991 , allloss: 6.0764, dt: 1254.41ms, fracRes: 0.0486, norm(attn): 0.0967, norm(output): 0.1406, norm(x): 0.1447, norm(y): 0.9980, norm:1.4338, tok/sec: 104489.28, flops:109.68, batch-reuse:1
@ 722 train 6.0756 , allloss: 6.1503, dt: 1272.32ms, fracRes: 0.0443, norm(attn): 0.1016, norm(output): 0.1406, norm(x): 0.1442, norm(y): 0.9980, norm:1.6612, tok/sec: 103017.91, flops:108.13, batch-reuse:1
@ 723 train 6.1264 , allloss: 6.2032, dt: 1265.09ms, fracRes: 0.0423, norm(attn): 0.1006, norm(output): 0.1406, norm(x): 0.1447, norm(y): 0.9979, norm:1.7987, tok/sec: 103607.15, flops:108.75, batch-reuse:1
@ 724 train 6.1003 , allloss: 6.1747, dt: 1261.12ms, fracRes: 0.0460, norm(attn): 0.0957, norm(output): 0.1406, norm(x): 0.1445, norm(y): 0.9980, norm:1.5019, tok/sec: 103932.79, flops:109.09, batch-reuse:1
@ 725 train 6.0770 , allloss: 6.1520, dt: 1266.16ms, fracRes: 0.0485, norm(attn): 0.0947, norm(output): 0.1406, norm(x): 0.1446, norm(y): 0.9980, norm:1.4602, tok/sec: 103519.26, flops:108.66, batch-reuse:1
@ 726 train 6.0976 , allloss: 6.1750, dt: 1254.75ms, fracRes: 0.0408, norm(attn): 0.1001, norm(output): 0.1406, norm(x): 0.1452, norm(y): 0.9979, norm:1.5431, tok/sec: 104460.63, flops:109.65, batch-reuse:1
@ 727 train 6.0932 , allloss: 6.1696, dt: 1247.27ms, fracRes: 0.0363, norm(attn): 0.1030, norm(output): 0.1416, norm(x): 0.1448, norm(y): 0.9978, norm:1.5167, tok/sec: 105086.90, flops:110.30, batch-reuse:1
@ 728 train 6.1116 , allloss: 6.1842, dt: 1284.72ms, fracRes: 0.0496, norm(attn): 0.0938, norm(output): 0.1406, norm(x): 0.1457, norm(y): 0.9979, norm:1.3843, tok/sec: 102024.09, flops:107.09, batch-reuse:1
@ 729 train 6.0470 , allloss: 6.1229, dt: 1262.38ms, fracRes: 0.0600, norm(attn): 0.0908, norm(output): 0.1406, norm(x): 0.1463, norm(y): 0.9980, norm:1.3631, tok/sec: 103829.17, flops:108.98, batch-reuse:1
@ 730 train 6.0503 , allloss: 6.1258, dt: 1256.36ms, fracRes: 0.0449, norm(attn): 0.0962, norm(output): 0.1406, norm(x): 0.1452, norm(y): 0.9979, norm:1.1000, tok/sec: 104327.14, flops:109.51, batch-reuse:1
@ 731 train 6.1151 , allloss: 6.1935, dt: 1271.85ms, fracRes: 0.0413, norm(attn): 0.1011, norm(output): 0.1406, norm(x): 0.1445, norm(y): 0.9978, norm:2.0612, tok/sec: 103056.19, flops:108.17, batch-reuse:1
@ 732 train 6.0309 , allloss: 6.1059, dt: 1304.17ms, fracRes: 0.0336, norm(attn): 0.1045, norm(output): 0.1416, norm(x): 0.1445, norm(y): 0.9978, norm:1.2363, tok/sec: 100502.06, flops:105.49, batch-reuse:1
@ 733 train 6.0926 , allloss: 6.1679, dt: 1258.00ms, fracRes: 0.0423, norm(attn): 0.1016, norm(output): 0.1406, norm(x): 0.1450, norm(y): 0.9978, norm:1.8549, tok/sec: 104191.04, flops:109.36, batch-reuse:1
@ 734 train 6.0916 , allloss: 6.1657, dt: 1264.01ms, fracRes: 0.0577, norm(attn): 0.0942, norm(output): 0.1406, norm(x): 0.1454, norm(y): 0.9979, norm:1.3974, tok/sec: 103695.62, flops:108.84, batch-reuse:1
@ 735 train 6.0802 , allloss: 6.1549, dt: 1269.48ms, fracRes: 0.0571, norm(attn): 0.0947, norm(output): 0.1406, norm(x): 0.1452, norm(y): 0.9979, norm:1.2921, tok/sec: 103248.50, flops:108.37, batch-reuse:1
@ 736 train 6.1451 , allloss: 6.2207, dt: 1266.52ms, fracRes: 0.0560, norm(attn): 0.0962, norm(output): 0.1406, norm(x): 0.1455, norm(y): 0.9979, norm:1.4684, tok/sec: 103489.62, flops:108.63, batch-reuse:1
@ 737 train 6.0670 , allloss: 6.1420, dt: 1259.67ms, fracRes: 0.0533, norm(attn): 0.1016, norm(output): 0.1406, norm(x): 0.1451, norm(y): 0.9978, norm:1.7078, tok/sec: 104052.49, flops:109.22, batch-reuse:1
@ 738 train 6.1278 , allloss: 6.2037, dt: 1277.44ms, fracRes: 0.0561, norm(attn): 0.0991, norm(output): 0.1406, norm(x): 0.1458, norm(y): 0.9978, norm:2.0737, tok/sec: 102605.20, flops:107.70, batch-reuse:1
@ 739 train 6.0866 , allloss: 6.1619, dt: 1272.69ms, fracRes: 0.0559, norm(attn): 0.0996, norm(output): 0.1406, norm(x): 0.1455, norm(y): 0.9978, norm:1.1647, tok/sec: 102988.21, flops:108.10, batch-reuse:1
@ 740 train 6.0614 , allloss: 6.1359, dt: 1238.90ms, fracRes: 0.0487, norm(attn): 0.1025, norm(output): 0.1406, norm(x): 0.1450, norm(y): 0.9977, norm:1.7042, tok/sec: 105797.25, flops:111.05, batch-reuse:1
@ 741 train 6.1595 , allloss: 6.2349, dt: 1240.17ms, fracRes: 0.0503, norm(attn): 0.1016, norm(output): 0.1406, norm(x): 0.1454, norm(y): 0.9977, norm:1.2752, tok/sec: 105689.14, flops:110.93, batch-reuse:1
@ 742 train 6.2301 , allloss: 6.3059, dt: 1271.10ms, fracRes: 0.0657, norm(attn): 0.0986, norm(output): 0.1406, norm(x): 0.1469, norm(y): 0.9978, norm:2.0427, tok/sec: 103116.83, flops:108.23, batch-reuse:1
@ 743 train 6.1994 , allloss: 6.2746, dt: 1277.66ms, fracRes: 0.0711, norm(attn): 0.0996, norm(output): 0.1406, norm(x): 0.1473, norm(y): 0.9979, norm:2.5958, tok/sec: 102587.80, flops:107.68, batch-reuse:1
@ 744 train 6.1738 , allloss: 6.2497, dt: 1253.16ms, fracRes: 0.0594, norm(attn): 0.0996, norm(output): 0.1406, norm(x): 0.1464, norm(y): 0.9978, norm:1.3116, tok/sec: 104592.87, flops:109.78, batch-reuse:1
@ 745 train 6.1685 , allloss: 6.2451, dt: 1252.87ms, fracRes: 0.0619, norm(attn): 0.0996, norm(output): 0.1396, norm(x): 0.1462, norm(y): 0.9978, norm:1.9933, tok/sec: 104617.45, flops:109.81, batch-reuse:1
@ 746 train 6.2009 , allloss: 6.2761, dt: 1277.00ms, fracRes: 0.0532, norm(attn): 0.1030, norm(output): 0.1396, norm(x): 0.1454, norm(y): 0.9977, norm:1.4367, tok/sec: 102640.17, flops:107.73, batch-reuse:1
@ 747 train 6.1749 , allloss: 6.2481, dt: 1255.16ms, fracRes: 0.0473, norm(attn): 0.1084, norm(output): 0.1406, norm(x): 0.1460, norm(y): 0.9977, norm:1.4251, tok/sec: 104426.40, flops:109.61, batch-reuse:1
@ 748 train 6.1972 , allloss: 6.2711, dt: 1251.20ms, fracRes: 0.0570, norm(attn): 0.1011, norm(output): 0.1406, norm(x): 0.1462, norm(y): 0.9977, norm:1.2642, tok/sec: 104756.72, flops:109.96, batch-reuse:1
@ 749 train 6.3101 , allloss: 6.3863, dt: 1266.25ms, fracRes: 0.0675, norm(attn): 0.0962, norm(output): 0.1396, norm(x): 0.1468, norm(y): 0.9978, norm:2.2102, tok/sec: 103512.28, flops:108.65, batch-reuse:1
@ 750 train 6.2575 , allloss: 6.3324, dt: 1268.22ms, fracRes: 0.0569, norm(attn): 0.1001, norm(output): 0.1406, norm(x): 0.1461, norm(y): 0.9977, norm:1.5874, tok/sec: 103350.89, flops:108.48, batch-reuse:1
@ 751 train 6.1603 , allloss: 6.2351, dt: 1247.61ms, fracRes: 0.0515, norm(attn): 0.1035, norm(output): 0.1406, norm(x): 0.1466, norm(y): 0.9977, norm:1.2166, tok/sec: 105058.10, flops:110.27, batch-reuse:1
@ 752 train 6.1551 , allloss: 6.2291, dt: 1284.44ms, fracRes: 0.0783, norm(attn): 0.0977, norm(output): 0.1396, norm(x): 0.1481, norm(y): 0.9978, norm:1.5938, tok/sec: 102045.70, flops:107.11, batch-reuse:1
@ 753 train 6.1726 , allloss: 6.2444, dt: 1273.57ms, fracRes: 0.0575, norm(attn): 0.1001, norm(output): 0.1406, norm(x): 0.1470, norm(y): 0.9977, norm:1.4809, tok/sec: 102916.80, flops:108.02, batch-reuse:1
@ 754 train 6.1629 , allloss: 6.2342, dt: 1285.55ms, fracRes: 0.0481, norm(attn): 0.1016, norm(output): 0.1416, norm(x): 0.1467, norm(y): 0.9976, norm:2.1697, tok/sec: 101958.29, flops:107.02, batch-reuse:1
@ 755 train 6.2782 , allloss: 6.3505, dt: 1253.32ms, fracRes: 0.0388, norm(attn): 0.1108, norm(output): 0.1416, norm(x): 0.1455, norm(y): 0.9976, norm:2.2542, tok/sec: 104580.00, flops:109.77, batch-reuse:1
@ 756 train 6.1524 , allloss: 6.2227, dt: 1276.88ms, fracRes: 0.0485, norm(attn): 0.0977, norm(output): 0.1416, norm(x): 0.1470, norm(y): 0.9977, norm:1.7185, tok/sec: 102650.34, flops:107.75, batch-reuse:1
@ 757 train 6.1849 , allloss: 6.2577, dt: 1275.58ms, fracRes: 0.0564, norm(attn): 0.0972, norm(output): 0.1416, norm(x): 0.1482, norm(y): 0.9977, norm:1.3355, tok/sec: 102754.72, flops:107.85, batch-reuse:1
@ 758 train 6.1289 , allloss: 6.1981, dt: 1288.05ms, fracRes: 0.0585, norm(attn): 0.0996, norm(output): 0.1406, norm(x): 0.1477, norm(y): 0.9977, norm:1.7069, tok/sec: 101760.11, flops:106.81, batch-reuse:1
@ 759 train 6.1896 , allloss: 6.2614, dt: 1247.71ms, fracRes: 0.0595, norm(attn): 0.1016, norm(output): 0.1406, norm(x): 0.1470, norm(y): 0.9977, norm:1.2098, tok/sec: 105049.71, flops:110.26, batch-reuse:1
@ 760 train 6.2012 , allloss: 6.2731, dt: 1287.66ms, fracRes: 0.0612, norm(attn): 0.1030, norm(output): 0.1406, norm(x): 0.1468, norm(y): 0.9977, norm:1.3647, tok/sec: 101790.48, flops:106.84, batch-reuse:1
@ 761 train 6.2005 , allloss: 6.2715, dt: 1253.46ms, fracRes: 0.0511, norm(attn): 0.1089, norm(output): 0.1416, norm(x): 0.1471, norm(y): 0.9976, norm:1.6243, tok/sec: 104568.50, flops:109.76, batch-reuse:1
@ 762 train 6.1788 , allloss: 6.2520, dt: 1309.24ms, fracRes: 0.0532, norm(attn): 0.1074, norm(output): 0.1416, norm(x): 0.1469, norm(y): 0.9976, norm:1.6268, tok/sec: 100113.13, flops:105.08, batch-reuse:1
@ 763 train 6.2308 , allloss: 6.3024, dt: 1291.53ms, fracRes: 0.0593, norm(attn): 0.1025, norm(output): 0.1406, norm(x): 0.1468, norm(y): 0.9976, norm:1.5969, tok/sec: 101486.07, flops:106.52, batch-reuse:1
@ 764 train 6.1828 , allloss: 6.2543, dt: 1248.45ms, fracRes: 0.0572, norm(attn): 0.1025, norm(output): 0.1406, norm(x): 0.1464, norm(y): 0.9976, norm:1.7124, tok/sec: 104987.92, flops:110.20, batch-reuse:1
@ 765 train 6.1854 , allloss: 6.2569, dt: 1276.29ms, fracRes: 0.0564, norm(attn): 0.1045, norm(output): 0.1406, norm(x): 0.1465, norm(y): 0.9976, norm:1.6410, tok/sec: 102697.46, flops:107.79, batch-reuse:1
@ 766 train 6.0942 , allloss: 6.1655, dt: 1263.74ms, fracRes: 0.0581, norm(attn): 0.1035, norm(output): 0.1406, norm(x): 0.1468, norm(y): 0.9976, norm:1.6306, tok/sec: 103717.63, flops:108.87, batch-reuse:1
@ 767 train 6.2180 , allloss: 6.2913, dt: 1267.12ms, fracRes: 0.0729, norm(attn): 0.0996, norm(output): 0.1406, norm(x): 0.1469, norm(y): 0.9977, norm:2.5160, tok/sec: 103440.94, flops:108.57, batch-reuse:1
@ 768 train 6.2992 , allloss: 6.3696, dt: 1283.70ms, fracRes: 0.0606, norm(attn): 0.1025, norm(output): 0.1416, norm(x): 0.1474, norm(y): 0.9976, norm:1.6925, tok/sec: 102105.01, flops:107.17, batch-reuse:1
@ 769 train 6.1739 , allloss: 6.2435, dt: 1250.50ms, fracRes: 0.0457, norm(attn): 0.1118, norm(output): 0.1416, norm(x): 0.1459, norm(y): 0.9975, norm:2.4802, tok/sec: 104815.98, flops:110.02, batch-reuse:1
@ 770 train 6.1331 , allloss: 6.2024, dt: 1268.55ms, fracRes: 0.0409, norm(attn): 0.1113, norm(output): 0.1416, norm(x): 0.1469, norm(y): 0.9975, norm:1.5709, tok/sec: 103324.39, flops:108.45, batch-reuse:1
@ 771 train 6.1116 , allloss: 6.1801, dt: 1269.21ms, fracRes: 0.0525, norm(attn): 0.1006, norm(output): 0.1416, norm(x): 0.1472, norm(y): 0.9976, norm:1.5356, tok/sec: 103270.24, flops:108.40, batch-reuse:1
@ 772 train 6.1664 , allloss: 6.2345, dt: 1257.67ms, fracRes: 0.0485, norm(attn): 0.1030, norm(output): 0.1416, norm(x): 0.1465, norm(y): 0.9976, norm:1.7972, tok/sec: 104218.46, flops:109.39, batch-reuse:1
@ 773 train 6.2418 , allloss: 6.3117, dt: 1286.77ms, fracRes: 0.0448, norm(attn): 0.1045, norm(output): 0.1416, norm(x): 0.1469, norm(y): 0.9975, norm:1.9867, tok/sec: 101861.07, flops:106.92, batch-reuse:1
@ 774 train 6.0885 , allloss: 6.1583, dt: 1257.43ms, fracRes: 0.0424, norm(attn): 0.1099, norm(output): 0.1416, norm(x): 0.1475, norm(y): 0.9975, norm:1.4927, tok/sec: 104238.38, flops:109.41, batch-reuse:1
@ 775 train 6.2320 , allloss: 6.2999, dt: 1270.91ms, fracRes: 0.0418, norm(attn): 0.1040, norm(output): 0.1416, norm(x): 0.1470, norm(y): 0.9975, norm:1.6652, tok/sec: 103132.11, flops:108.25, batch-reuse:1
@ 776 train 6.0406 , allloss: 6.1089, dt: 1291.12ms, fracRes: 0.0480, norm(attn): 0.1016, norm(output): 0.1416, norm(x): 0.1469, norm(y): 0.9975, norm:1.5608, tok/sec: 101518.30, flops:106.56, batch-reuse:1
@ 777 train 6.1083 , allloss: 6.1771, dt: 1276.14ms, fracRes: 0.0490, norm(attn): 0.1025, norm(output): 0.1416, norm(x): 0.1470, norm(y): 0.9975, norm:1.4664, tok/sec: 102709.91, flops:107.81, batch-reuse:1
@ 778 train 6.1223 , allloss: 6.1910, dt: 1278.11ms, fracRes: 0.0501, norm(attn): 0.1060, norm(output): 0.1416, norm(x): 0.1465, norm(y): 0.9975, norm:1.7267, tok/sec: 102551.46, flops:107.64, batch-reuse:1
@ 779 train 6.1502 , allloss: 6.2201, dt: 1260.36ms, fracRes: 0.0491, norm(attn): 0.1094, norm(output): 0.1416, norm(x): 0.1468, norm(y): 0.9975, norm:1.2876, tok/sec: 103995.53, flops:109.16, batch-reuse:1
@ 780 train 6.1194 , allloss: 6.1887, dt: 1261.42ms, fracRes: 0.0575, norm(attn): 0.1074, norm(output): 0.1416, norm(x): 0.1470, norm(y): 0.9975, norm:1.5031, tok/sec: 103908.16, flops:109.07, batch-reuse:1
@ 781 train 6.1161 , allloss: 6.1851, dt: 1281.51ms, fracRes: 0.0706, norm(attn): 0.1050, norm(output): 0.1406, norm(x): 0.1480, norm(y): 0.9975, norm:1.6105, tok/sec: 102279.64, flops:107.36, batch-reuse:1
@ 782 train 6.1127 , allloss: 6.1817, dt: 1295.10ms, fracRes: 0.0822, norm(attn): 0.1040, norm(output): 0.1406, norm(x): 0.1497, norm(y): 0.9976, norm:1.6406, tok/sec: 101206.03, flops:106.23, batch-reuse:1
@ 783 train 6.0756 , allloss: 6.1436, dt: 1277.67ms, fracRes: 0.0622, norm(attn): 0.1084, norm(output): 0.1416, norm(x): 0.1484, norm(y): 0.9975, norm:1.1157, tok/sec: 102586.73, flops:107.68, batch-reuse:1
@ 784 train 6.1038 , allloss: 6.1716, dt: 1283.02ms, fracRes: 0.0576, norm(attn): 0.1108, norm(output): 0.1416, norm(x): 0.1480, norm(y): 0.9975, norm:1.9346, tok/sec: 102159.01, flops:107.23, batch-reuse:1
@ 785 train 6.1205 , allloss: 6.1873, dt: 1288.52ms, fracRes: 0.0503, norm(attn): 0.1128, norm(output): 0.1426, norm(x): 0.1487, norm(y): 0.9974, norm:2.5818, tok/sec: 101723.24, flops:106.77, batch-reuse:1
@ 786 train 6.0585 , allloss: 6.1263, dt: 1268.17ms, fracRes: 0.0568, norm(attn): 0.1074, norm(output): 0.1416, norm(x): 0.1485, norm(y): 0.9974, norm:1.2071, tok/sec: 103354.85, flops:108.48, batch-reuse:1
@ 787 train 6.1012 , allloss: 6.1689, dt: 1301.91ms, fracRes: 0.0642, norm(attn): 0.1064, norm(output): 0.1416, norm(x): 0.1484, norm(y): 0.9975, norm:1.3767, tok/sec: 100676.45, flops:105.67, batch-reuse:1
@ 788 train 6.1687 , allloss: 6.2362, dt: 1264.45ms, fracRes: 0.0529, norm(attn): 0.1104, norm(output): 0.1426, norm(x): 0.1484, norm(y): 0.9974, norm:1.4934, tok/sec: 103659.04, flops:108.80, batch-reuse:1
@ 789 train 6.0534 , allloss: 6.1199, dt: 1266.02ms, fracRes: 0.0637, norm(attn): 0.1050, norm(output): 0.1416, norm(x): 0.1487, norm(y): 0.9974, norm:1.1613, tok/sec: 103530.43, flops:108.67, batch-reuse:1
@ 790 train 6.0580 , allloss: 6.1263, dt: 1285.28ms, fracRes: 0.0742, norm(attn): 0.1011, norm(output): 0.1416, norm(x): 0.1492, norm(y): 0.9975, norm:1.6381, tok/sec: 101979.58, flops:107.04, batch-reuse:1
@ 791 train 6.2037 , allloss: 6.2705, dt: 1308.81ms, fracRes: 0.0659, norm(attn): 0.1045, norm(output): 0.1416, norm(x): 0.1492, norm(y): 0.9974, norm:1.6158, tok/sec: 100145.66, flops:105.12, batch-reuse:1
@ 792 train 6.1506 , allloss: 6.2172, dt: 1277.53ms, fracRes: 0.0661, norm(attn): 0.1035, norm(output): 0.1416, norm(x): 0.1495, norm(y): 0.9974, norm:1.9728, tok/sec: 102598.25, flops:107.69, batch-reuse:1
@ 793 train 6.1289 , allloss: 6.1970, dt: 1269.63ms, fracRes: 0.0540, norm(attn): 0.1104, norm(output): 0.1416, norm(x): 0.1481, norm(y): 0.9973, norm:1.3770, tok/sec: 103236.63, flops:108.36, batch-reuse:1
@ 794 train 6.2046 , allloss: 6.2713, dt: 1262.17ms, fracRes: 0.0720, norm(attn): 0.1050, norm(output): 0.1416, norm(x): 0.1501, norm(y): 0.9974, norm:1.3880, tok/sec: 103846.70, flops:109.00, batch-reuse:1
@ 795 train 6.0536 , allloss: 6.1243, dt: 1250.19ms, fracRes: 0.0842, norm(attn): 0.1021, norm(output): 0.1406, norm(x): 0.1494, norm(y): 0.9975, norm:2.4506, tok/sec: 104841.74, flops:110.05, batch-reuse:1
@ 796 train 5.9937 , allloss: 6.0609, dt: 1270.39ms, fracRes: 0.0638, norm(attn): 0.1099, norm(output): 0.1416, norm(x): 0.1488, norm(y): 0.9974, norm:1.5854, tok/sec: 103174.86, flops:108.30, batch-reuse:1
@ 797 train 6.1134 , allloss: 6.1789, dt: 1242.19ms, fracRes: 0.0513, norm(attn): 0.1099, norm(output): 0.1426, norm(x): 0.1488, norm(y): 0.9973, norm:1.1749, tok/sec: 105517.02, flops:110.75, batch-reuse:1
@ 798 train 6.1212 , allloss: 6.1886, dt: 1284.30ms, fracRes: 0.0638, norm(attn): 0.1040, norm(output): 0.1426, norm(x): 0.1498, norm(y): 0.9974, norm:1.7054, tok/sec: 102057.13, flops:107.12, batch-reuse:1
@ 799 train 6.1226 , allloss: 6.1880, dt: 1266.03ms, fracRes: 0.0561, norm(attn): 0.1055, norm(output): 0.1416, norm(x): 0.1486, norm(y): 0.9973, norm:1.2187, tok/sec: 103530.08, flops:108.67, batch-reuse:1
@ 800 train 6.0532 , allloss: 6.1176, dt: 1264.46ms, fracRes: 0.0453, norm(attn): 0.1147, norm(output): 0.1416, norm(x): 0.1480, norm(y): 0.9973, norm:1.5918, tok/sec: 103658.20, flops:108.80, batch-reuse:1
@ 801 train 6.0841 , allloss: 6.1489, dt: 1281.27ms, fracRes: 0.0510, norm(attn): 0.1104, norm(output): 0.1426, norm(x): 0.1481, norm(y): 0.9973, norm:1.8780, tok/sec: 102298.40, flops:107.38, batch-reuse:1
@ 802 train 6.1076 , allloss: 6.1726, dt: 1280.07ms, fracRes: 0.0595, norm(attn): 0.1094, norm(output): 0.1416, norm(x): 0.1489, norm(y): 0.9974, norm:1.4274, tok/sec: 102394.43, flops:107.48, batch-reuse:1
@ 803 train 6.1516 , allloss: 6.2191, dt: 1277.90ms, fracRes: 0.0582, norm(attn): 0.1128, norm(output): 0.1416, norm(x): 0.1480, norm(y): 0.9973, norm:1.6622, tok/sec: 102567.88, flops:107.66, batch-reuse:1
@ 804 train 6.0633 , allloss: 6.1306, dt: 1265.00ms, fracRes: 0.0590, norm(attn): 0.1123, norm(output): 0.1416, norm(x): 0.1484, norm(y): 0.9973, norm:1.9709, tok/sec: 103614.47, flops:108.76, batch-reuse:1
@ 805 train 6.1424 , allloss: 6.2080, dt: 1256.65ms, fracRes: 0.0672, norm(attn): 0.1094, norm(output): 0.1416, norm(x): 0.1487, norm(y): 0.9974, norm:1.6845, tok/sec: 104302.49, flops:109.48, batch-reuse:1
@ 806 train 6.0362 , allloss: 6.1022, dt: 1262.73ms, fracRes: 0.0723, norm(attn): 0.1074, norm(output): 0.1416, norm(x): 0.1495, norm(y): 0.9974, norm:1.5202, tok/sec: 103800.43, flops:108.95, batch-reuse:1
@ 807 train 6.0865 , allloss: 6.1535, dt: 1256.96ms, fracRes: 0.0775, norm(attn): 0.1069, norm(output): 0.1416, norm(x): 0.1498, norm(y): 0.9974, norm:2.0541, tok/sec: 104277.19, flops:109.45, batch-reuse:1
@ 808 train 6.0974 , allloss: 6.1650, dt: 1280.09ms, fracRes: 0.0607, norm(attn): 0.1182, norm(output): 0.1416, norm(x): 0.1487, norm(y): 0.9972, norm:2.7425, tok/sec: 102392.70, flops:107.47, batch-reuse:1
@ 809 train 6.0862 , allloss: 6.1524, dt: 1265.61ms, fracRes: 0.0585, norm(attn): 0.1157, norm(output): 0.1426, norm(x): 0.1492, norm(y): 0.9972, norm:1.8353, tok/sec: 103564.68, flops:108.70, batch-reuse:1
@ 810 train 6.1080 , allloss: 6.1748, dt: 1294.23ms, fracRes: 0.0785, norm(attn): 0.1074, norm(output): 0.1416, norm(x): 0.1510, norm(y): 0.9973, norm:1.2694, tok/sec: 101274.30, flops:106.30, batch-reuse:1
@ 811 train 6.1026 , allloss: 6.1699, dt: 1294.32ms, fracRes: 0.0690, norm(attn): 0.1108, norm(output): 0.1416, norm(x): 0.1494, norm(y): 0.9973, norm:1.3785, tok/sec: 101267.33, flops:106.29, batch-reuse:1
@ 812 train 5.9672 , allloss: 6.0327, dt: 1302.13ms, fracRes: 0.0546, norm(attn): 0.1172, norm(output): 0.1416, norm(x): 0.1486, norm(y): 0.9972, norm:1.5371, tok/sec: 100659.86, flops:105.66, batch-reuse:1
@ 813 train 6.1730 , allloss: 6.2394, dt: 1252.63ms, fracRes: 0.0606, norm(attn): 0.1128, norm(output): 0.1416, norm(x): 0.1492, norm(y): 0.9973, norm:1.7445, tok/sec: 104637.76, flops:109.83, batch-reuse:1
@ 814 train 6.1485 , allloss: 6.2143, dt: 1270.03ms, fracRes: 0.0634, norm(attn): 0.1108, norm(output): 0.1416, norm(x): 0.1495, norm(y): 0.9973, norm:1.5873, tok/sec: 103204.23, flops:108.33, batch-reuse:1
@ 815 train 6.0214 , allloss: 6.0865, dt: 1267.27ms, fracRes: 0.0572, norm(attn): 0.1152, norm(output): 0.1426, norm(x): 0.1495, norm(y): 0.9972, norm:1.8097, tok/sec: 103428.80, flops:108.56, batch-reuse:1
@ 816 train 6.0700 , allloss: 6.1368, dt: 1243.68ms, fracRes: 0.0599, norm(attn): 0.1152, norm(output): 0.1416, norm(x): 0.1499, norm(y): 0.9972, norm:1.4919, tok/sec: 105390.43, flops:110.62, batch-reuse:1
@ 817 train 6.0011 , allloss: 6.0682, dt: 1256.71ms, fracRes: 0.0672, norm(attn): 0.1108, norm(output): 0.1416, norm(x): 0.1500, norm(y): 0.9972, norm:1.5100, tok/sec: 104297.82, flops:109.47, batch-reuse:1
@ 818 train 6.0424 , allloss: 6.1073, dt: 1278.83ms, fracRes: 0.0688, norm(attn): 0.1104, norm(output): 0.1416, norm(x): 0.1505, norm(y): 0.9972, norm:1.8646, tok/sec: 102493.72, flops:107.58, batch-reuse:1
@ 819 train 6.1381 , allloss: 6.2029, dt: 1274.76ms, fracRes: 0.0671, norm(attn): 0.1147, norm(output): 0.1426, norm(x): 0.1503, norm(y): 0.9972, norm:1.5115, tok/sec: 102820.94, flops:107.92, batch-reuse:1
@ 820 train 6.2059 , allloss: 6.2727, dt: 1244.45ms, fracRes: 0.0901, norm(attn): 0.1074, norm(output): 0.1416, norm(x): 0.1515, norm(y): 0.9973, norm:2.1442, tok/sec: 105324.85, flops:110.55, batch-reuse:1
@ 821 train 6.1158 , allloss: 6.1808, dt: 1272.08ms, fracRes: 0.0748, norm(attn): 0.1104, norm(output): 0.1416, norm(x): 0.1499, norm(y): 0.9973, norm:1.6032, tok/sec: 103037.59, flops:108.15, batch-reuse:1
@ 822 train 6.1469 , allloss: 6.2121, dt: 1252.41ms, fracRes: 0.0564, norm(attn): 0.1182, norm(output): 0.1445, norm(x): 0.1508, norm(y): 0.9972, norm:2.1660, tok/sec: 104655.83, flops:109.85, batch-reuse:1
@ 823 train 6.0356 , allloss: 6.0996, dt: 1277.11ms, fracRes: 0.0563, norm(attn): 0.1104, norm(output): 0.1426, norm(x): 0.1499, norm(y): 0.9972, norm:2.0095, tok/sec: 102631.49, flops:107.73, batch-reuse:1
@ 824 train 6.1818 , allloss: 6.2558, dt: 1255.34ms, fracRes: 0.0514, norm(attn): 0.1123, norm(output): 0.1455, norm(x): 0.1508, norm(y): 0.9972, norm:2.2084, tok/sec: 104411.49, flops:109.59, batch-reuse:1
@ 825 train 6.0782 , allloss: 6.1409, dt: 1302.82ms, fracRes: 0.0529, norm(attn): 0.1099, norm(output): 0.1436, norm(x): 0.1498, norm(y): 0.9972, norm:1.3336, tok/sec: 100606.66, flops:105.60, batch-reuse:1
@ 826 train 6.0702 , allloss: 6.1351, dt: 1265.44ms, fracRes: 0.0577, norm(attn): 0.1143, norm(output): 0.1436, norm(x): 0.1496, norm(y): 0.9972, norm:2.1603, tok/sec: 103578.36, flops:108.72, batch-reuse:1
@ 827 train 6.1485 , allloss: 6.2144, dt: 1265.59ms, fracRes: 0.0735, norm(attn): 0.1099, norm(output): 0.1445, norm(x): 0.1518, norm(y): 0.9973, norm:1.9567, tok/sec: 103566.12, flops:108.71, batch-reuse:1
@ 828 train 6.0646 , allloss: 6.1299, dt: 1271.26ms, fracRes: 0.0701, norm(attn): 0.1128, norm(output): 0.1426, norm(x): 0.1509, norm(y): 0.9972, norm:1.6560, tok/sec: 103103.75, flops:108.22, batch-reuse:1
@ 829 train 6.0968 , allloss: 6.1635, dt: 1264.44ms, fracRes: 0.0658, norm(attn): 0.1138, norm(output): 0.1426, norm(x): 0.1501, norm(y): 0.9972, norm:1.7675, tok/sec: 103660.39, flops:108.81, batch-reuse:1
@ 830 train 6.1087 , allloss: 6.1746, dt: 1296.56ms, fracRes: 0.0702, norm(attn): 0.1138, norm(output): 0.1426, norm(x): 0.1503, norm(y): 0.9972, norm:2.0277, tok/sec: 101092.41, flops:106.11, batch-reuse:1
@ 831 train 6.1286 , allloss: 6.1927, dt: 1271.04ms, fracRes: 0.0626, norm(attn): 0.1177, norm(output): 0.1445, norm(x): 0.1509, norm(y): 0.9972, norm:2.0258, tok/sec: 103121.45, flops:108.24, batch-reuse:1
@ 832 train 6.1201 , allloss: 6.1842, dt: 1292.58ms, fracRes: 0.0593, norm(attn): 0.1157, norm(output): 0.1436, norm(x): 0.1500, norm(y): 0.9971, norm:1.3292, tok/sec: 101403.72, flops:106.44, batch-reuse:1
@ 833 train 5.9923 , allloss: 6.0566, dt: 1267.98ms, fracRes: 0.0643, norm(attn): 0.1147, norm(output): 0.1426, norm(x): 0.1502, norm(y): 0.9971, norm:1.4624, tok/sec: 103370.82, flops:108.50, batch-reuse:1
@ 834 train 6.0350 , allloss: 6.0987, dt: 1274.23ms, fracRes: 0.0739, norm(attn): 0.1104, norm(output): 0.1426, norm(x): 0.1513, norm(y): 0.9972, norm:2.0961, tok/sec: 102863.57, flops:107.97, batch-reuse:1
@ 835 train 5.9558 , allloss: 6.0215, dt: 1266.01ms, fracRes: 0.0637, norm(attn): 0.1147, norm(output): 0.1426, norm(x): 0.1505, norm(y): 0.9971, norm:1.5162, tok/sec: 103531.49, flops:108.67, batch-reuse:1
@ 836 train 5.9994 , allloss: 6.0662, dt: 1266.95ms, fracRes: 0.0713, norm(attn): 0.1147, norm(output): 0.1416, norm(x): 0.1510, norm(y): 0.9972, norm:2.0883, tok/sec: 103455.05, flops:108.59, batch-reuse:1
@ 837 train 6.0098 , allloss: 6.0742, dt: 1284.27ms, fracRes: 0.0597, norm(attn): 0.1177, norm(output): 0.1436, norm(x): 0.1510, norm(y): 0.9971, norm:1.4755, tok/sec: 102059.27, flops:107.12, batch-reuse:1
@ 838 train 5.9857 , allloss: 6.0505, dt: 1250.42ms, fracRes: 0.0545, norm(attn): 0.1182, norm(output): 0.1436, norm(x): 0.1501, norm(y): 0.9970, norm:1.2283, tok/sec: 104822.09, flops:110.02, batch-reuse:1
@ 839 train 5.8676 , allloss: 5.9293, dt: 1258.85ms, fracRes: 0.0556, norm(attn): 0.1113, norm(output): 0.1445, norm(x): 0.1513, norm(y): 0.9971, norm:1.3346, tok/sec: 104120.60, flops:109.29, batch-reuse:1
@ 840 train 5.9881 , allloss: 6.0518, dt: 1272.89ms, fracRes: 0.0597, norm(attn): 0.1108, norm(output): 0.1445, norm(x): 0.1519, norm(y): 0.9971, norm:1.9030, tok/sec: 102972.09, flops:108.08, batch-reuse:1
@ 841 train 5.9183 , allloss: 5.9808, dt: 1273.55ms, fracRes: 0.0570, norm(attn): 0.1157, norm(output): 0.1436, norm(x): 0.1504, norm(y): 0.9971, norm:1.4944, tok/sec: 102918.24, flops:108.03, batch-reuse:1
@ 842 train 6.0334 , allloss: 6.0955, dt: 1262.01ms, fracRes: 0.0732, norm(attn): 0.1089, norm(output): 0.1436, norm(x): 0.1520, norm(y): 0.9972, norm:1.6561, tok/sec: 103859.51, flops:109.01, batch-reuse:1
@ 843 train 6.0750 , allloss: 6.1373, dt: 1258.53ms, fracRes: 0.0694, norm(attn): 0.1167, norm(output): 0.1426, norm(x): 0.1519, norm(y): 0.9971, norm:2.5870, tok/sec: 104146.83, flops:109.32, batch-reuse:1
@ 844 train 6.0843 , allloss: 6.1478, dt: 1263.56ms, fracRes: 0.0560, norm(attn): 0.1250, norm(output): 0.1455, norm(x): 0.1507, norm(y): 0.9970, norm:1.6149, tok/sec: 103732.46, flops:108.88, batch-reuse:1
@ 845 train 6.0378 , allloss: 6.1014, dt: 1271.96ms, fracRes: 0.0806, norm(attn): 0.1113, norm(output): 0.1426, norm(x): 0.1522, norm(y): 0.9972, norm:1.5339, tok/sec: 103046.94, flops:108.16, batch-reuse:1
@ 846 train 6.0156 , allloss: 6.0774, dt: 1260.68ms, fracRes: 0.0757, norm(attn): 0.1108, norm(output): 0.1436, norm(x): 0.1524, norm(y): 0.9971, norm:1.7735, tok/sec: 103969.01, flops:109.13, batch-reuse:1
@ 847 train 6.0733 , allloss: 6.1377, dt: 1255.82ms, fracRes: 0.0617, norm(attn): 0.1187, norm(output): 0.1455, norm(x): 0.1521, norm(y): 0.9970, norm:1.5056, tok/sec: 104372.00, flops:109.55, batch-reuse:1
@ 848 train 6.0311 , allloss: 6.0948, dt: 1275.86ms, fracRes: 0.0719, norm(attn): 0.1182, norm(output): 0.1445, norm(x): 0.1524, norm(y): 0.9971, norm:1.3440, tok/sec: 102732.02, flops:107.83, batch-reuse:1
@ 849 train 6.0023 , allloss: 6.0656, dt: 1276.90ms, fracRes: 0.0780, norm(attn): 0.1113, norm(output): 0.1436, norm(x): 0.1529, norm(y): 0.9971, norm:1.8577, tok/sec: 102648.66, flops:107.74, batch-reuse:1
@ 850 train 5.9732 , allloss: 6.0360, dt: 1246.68ms, fracRes: 0.0768, norm(attn): 0.1152, norm(output): 0.1455, norm(x): 0.1527, norm(y): 0.9971, norm:1.6346, tok/sec: 105136.48, flops:110.35, batch-reuse:1
@ 851 train 6.2192 , allloss: 6.2814, dt: 1275.77ms, fracRes: 0.0720, norm(attn): 0.1152, norm(output): 0.1455, norm(x): 0.1536, norm(y): 0.9970, norm:1.9481, tok/sec: 102739.16, flops:107.84, batch-reuse:1
@ 852 train 6.0829 , allloss: 6.1461, dt: 1268.80ms, fracRes: 0.0686, norm(attn): 0.1172, norm(output): 0.1465, norm(x): 0.1543, norm(y): 0.9970, norm:2.1172, tok/sec: 103304.16, flops:108.43, batch-reuse:1
@ 853 train 6.0009 , allloss: 6.0638, dt: 1253.94ms, fracRes: 0.0640, norm(attn): 0.1177, norm(output): 0.1465, norm(x): 0.1528, norm(y): 0.9970, norm:1.4091, tok/sec: 104528.32, flops:109.72, batch-reuse:1
@ 854 train 6.0286 , allloss: 6.0922, dt: 1269.87ms, fracRes: 0.0867, norm(attn): 0.1118, norm(output): 0.1436, norm(x): 0.1542, norm(y): 0.9971, norm:1.7220, tok/sec: 103216.57, flops:108.34, batch-reuse:1
@ 855 train 6.0527 , allloss: 6.1161, dt: 1275.46ms, fracRes: 0.0874, norm(attn): 0.1108, norm(output): 0.1436, norm(x): 0.1545, norm(y): 0.9971, norm:1.7345, tok/sec: 102764.40, flops:107.86, batch-reuse:1
@ 856 train 6.0349 , allloss: 6.0968, dt: 1274.83ms, fracRes: 0.0684, norm(attn): 0.1152, norm(output): 0.1455, norm(x): 0.1524, norm(y): 0.9970, norm:1.6149, tok/sec: 102815.15, flops:107.92, batch-reuse:1
@ 857 train 6.0160 , allloss: 6.0766, dt: 1260.18ms, fracRes: 0.0600, norm(attn): 0.1216, norm(output): 0.1465, norm(x): 0.1522, norm(y): 0.9970, norm:1.6407, tok/sec: 104010.24, flops:109.17, batch-reuse:1
@ 858 train 6.0778 , allloss: 6.1393, dt: 1258.60ms, fracRes: 0.0722, norm(attn): 0.1108, norm(output): 0.1445, norm(x): 0.1533, norm(y): 0.9971, norm:1.5088, tok/sec: 104140.93, flops:109.31, batch-reuse:1
@ 859 train 5.9929 , allloss: 6.0528, dt: 1273.98ms, fracRes: 0.0716, norm(attn): 0.1113, norm(output): 0.1455, norm(x): 0.1539, norm(y): 0.9970, norm:1.3259, tok/sec: 102883.92, flops:107.99, batch-reuse:1
@ 860 train 6.0224 , allloss: 6.0831, dt: 1258.04ms, fracRes: 0.0638, norm(attn): 0.1191, norm(output): 0.1465, norm(x): 0.1532, norm(y): 0.9970, norm:1.6480, tok/sec: 104187.77, flops:109.36, batch-reuse:1
@ 861 train 6.0291 , allloss: 6.0893, dt: 1281.87ms, fracRes: 0.0683, norm(attn): 0.1143, norm(output): 0.1465, norm(x): 0.1536, norm(y): 0.9970, norm:1.7776, tok/sec: 102250.86, flops:107.33, batch-reuse:1
@ 862 train 6.0711 , allloss: 6.1328, dt: 1262.31ms, fracRes: 0.0787, norm(attn): 0.1147, norm(output): 0.1455, norm(x): 0.1546, norm(y): 0.9970, norm:1.6188, tok/sec: 103834.91, flops:108.99, batch-reuse:1
@ 863 train 6.0214 , allloss: 6.0834, dt: 1265.04ms, fracRes: 0.0786, norm(attn): 0.1167, norm(output): 0.1445, norm(x): 0.1541, norm(y): 0.9970, norm:2.1249, tok/sec: 103610.84, flops:108.75, batch-reuse:1
@ 864 train 6.0455 , allloss: 6.1089, dt: 1270.73ms, fracRes: 0.0583, norm(attn): 0.1250, norm(output): 0.1465, norm(x): 0.1529, norm(y): 0.9968, norm:1.6229, tok/sec: 103147.16, flops:108.27, batch-reuse:1
@ 865 train 5.9452 , allloss: 6.0056, dt: 1254.54ms, fracRes: 0.0684, norm(attn): 0.1157, norm(output): 0.1465, norm(x): 0.1536, norm(y): 0.9969, norm:1.5049, tok/sec: 104477.98, flops:109.66, batch-reuse:1
@ 866 train 5.9550 , allloss: 6.0153, dt: 1256.82ms, fracRes: 0.0839, norm(attn): 0.1104, norm(output): 0.1455, norm(x): 0.1550, norm(y): 0.9970, norm:2.5990, tok/sec: 104288.86, flops:109.46, batch-reuse:1
@ 867 train 5.9973 , allloss: 6.0572, dt: 1313.36ms, fracRes: 0.0774, norm(attn): 0.1108, norm(output): 0.1465, norm(x): 0.1552, norm(y): 0.9970, norm:1.6209, tok/sec: 99798.63, flops:104.75, batch-reuse:1
@ 868 train 5.9914 , allloss: 6.0532, dt: 1250.86ms, fracRes: 0.0764, norm(attn): 0.1118, norm(output): 0.1465, norm(x): 0.1551, norm(y): 0.9970, norm:1.9946, tok/sec: 104785.79, flops:109.99, batch-reuse:1
@ 869 train 6.0176 , allloss: 6.0808, dt: 1274.71ms, fracRes: 0.0539, norm(attn): 0.1226, norm(output): 0.1475, norm(x): 0.1528, norm(y): 0.9968, norm:1.8819, tok/sec: 102824.98, flops:107.93, batch-reuse:1
@ 870 train 5.9864 , allloss: 6.0467, dt: 1249.91ms, fracRes: 0.0561, norm(attn): 0.1211, norm(output): 0.1465, norm(x): 0.1531, norm(y): 0.9968, norm:1.3619, tok/sec: 104865.22, flops:110.07, batch-reuse:1
@ 871 train 6.0080 , allloss: 6.0660, dt: 1266.65ms, fracRes: 0.0647, norm(attn): 0.1157, norm(output): 0.1465, norm(x): 0.1542, norm(y): 0.9969, norm:1.6884, tok/sec: 103478.97, flops:108.61, batch-reuse:1
@ 872 train 5.9594 , allloss: 6.0172, dt: 1243.90ms, fracRes: 0.0688, norm(attn): 0.1113, norm(output): 0.1475, norm(x): 0.1549, norm(y): 0.9969, norm:1.3438, tok/sec: 105371.41, flops:110.60, batch-reuse:1
@ 873 train 6.0278 , allloss: 6.0897, dt: 1258.30ms, fracRes: 0.0723, norm(attn): 0.1162, norm(output): 0.1484, norm(x): 0.1556, norm(y): 0.9970, norm:2.8530, tok/sec: 104165.56, flops:109.34, batch-reuse:1
@ 874 train 5.9319 , allloss: 5.9910, dt: 1273.44ms, fracRes: 0.0638, norm(attn): 0.1152, norm(output): 0.1475, norm(x): 0.1548, norm(y): 0.9969, norm:1.4598, tok/sec: 102927.13, flops:108.04, batch-reuse:1
@ 875 train 5.9651 , allloss: 6.0237, dt: 1243.36ms, fracRes: 0.0556, norm(attn): 0.1216, norm(output): 0.1494, norm(x): 0.1543, norm(y): 0.9968, norm:1.4792, tok/sec: 105417.23, flops:110.65, batch-reuse:1
@ 876 train 5.9692 , allloss: 6.0277, dt: 1264.59ms, fracRes: 0.0561, norm(attn): 0.1206, norm(output): 0.1465, norm(x): 0.1541, norm(y): 0.9968, norm:1.5959, tok/sec: 103648.13, flops:108.79, batch-reuse:1
@ 877 train 6.0115 , allloss: 6.0702, dt: 1254.13ms, fracRes: 0.0718, norm(attn): 0.1143, norm(output): 0.1475, norm(x): 0.1557, norm(y): 0.9969, norm:2.1981, tok/sec: 104512.48, flops:109.70, batch-reuse:1
@ 878 train 5.9622 , allloss: 6.0212, dt: 1276.87ms, fracRes: 0.0827, norm(attn): 0.1099, norm(output): 0.1465, norm(x): 0.1566, norm(y): 0.9970, norm:1.5076, tok/sec: 102651.22, flops:107.75, batch-reuse:1
@ 879 train 5.8990 , allloss: 5.9589, dt: 1278.18ms, fracRes: 0.0737, norm(attn): 0.1177, norm(output): 0.1465, norm(x): 0.1558, norm(y): 0.9969, norm:1.4186, tok/sec: 102545.76, flops:107.64, batch-reuse:1
@ 880 train 6.0038 , allloss: 6.0627, dt: 1244.26ms, fracRes: 0.0678, norm(attn): 0.1211, norm(output): 0.1475, norm(x): 0.1555, norm(y): 0.9968, norm:1.5043, tok/sec: 105341.48, flops:110.57, batch-reuse:1
@ 881 train 5.9058 , allloss: 5.9648, dt: 1242.22ms, fracRes: 0.0614, norm(attn): 0.1260, norm(output): 0.1475, norm(x): 0.1548, norm(y): 0.9967, norm:2.1503, tok/sec: 105514.57, flops:110.75, batch-reuse:1
@ 882 train 5.9126 , allloss: 5.9738, dt: 1262.26ms, fracRes: 0.0883, norm(attn): 0.1133, norm(output): 0.1465, norm(x): 0.1558, norm(y): 0.9969, norm:1.4382, tok/sec: 103839.33, flops:108.99, batch-reuse:1
@ 883 train 5.8698 , allloss: 5.9298, dt: 1263.82ms, fracRes: 0.0927, norm(attn): 0.1104, norm(output): 0.1465, norm(x): 0.1565, norm(y): 0.9969, norm:1.2614, tok/sec: 103711.35, flops:108.86, batch-reuse:1
@ 884 train 5.8683 , allloss: 5.9262, dt: 1270.31ms, fracRes: 0.0761, norm(attn): 0.1177, norm(output): 0.1475, norm(x): 0.1551, norm(y): 0.9968, norm:1.4240, tok/sec: 103181.10, flops:108.30, batch-reuse:1
@ 885 train 5.9158 , allloss: 5.9754, dt: 1266.96ms, fracRes: 0.0607, norm(attn): 0.1250, norm(output): 0.1475, norm(x): 0.1549, norm(y): 0.9967, norm:1.6647, tok/sec: 103453.91, flops:108.59, batch-reuse:1
@ 886 train 5.9803 , allloss: 6.0399, dt: 1247.95ms, fracRes: 0.0676, norm(attn): 0.1221, norm(output): 0.1465, norm(x): 0.1548, norm(y): 0.9968, norm:1.5559, tok/sec: 105029.74, flops:110.24, batch-reuse:1
@ 887 train 5.9407 , allloss: 5.9993, dt: 1272.55ms, fracRes: 0.0872, norm(attn): 0.1128, norm(output): 0.1455, norm(x): 0.1562, norm(y): 0.9969, norm:2.0726, tok/sec: 102999.83, flops:108.11, batch-reuse:1
@ 888 train 5.9133 , allloss: 5.9730, dt: 1264.88ms, fracRes: 0.0790, norm(attn): 0.1177, norm(output): 0.1465, norm(x): 0.1559, norm(y): 0.9968, norm:1.5374, tok/sec: 103624.02, flops:108.77, batch-reuse:1
@ 889 train 5.9746 , allloss: 6.0329, dt: 1278.69ms, fracRes: 0.0641, norm(attn): 0.1211, norm(output): 0.1475, norm(x): 0.1546, norm(y): 0.9967, norm:1.8681, tok/sec: 102505.13, flops:107.59, batch-reuse:1
@ 890 train 5.9944 , allloss: 6.0529, dt: 1285.13ms, fracRes: 0.0588, norm(attn): 0.1245, norm(output): 0.1484, norm(x): 0.1547, norm(y): 0.9967, norm:1.7489, tok/sec: 101990.91, flops:107.05, batch-reuse:1
@ 891 train 5.9350 , allloss: 5.9923, dt: 1278.83ms, fracRes: 0.0753, norm(attn): 0.1162, norm(output): 0.1475, norm(x): 0.1566, norm(y): 0.9968, norm:1.6576, tok/sec: 102493.74, flops:107.58, batch-reuse:1
@ 892 train 5.8831 , allloss: 5.9391, dt: 1298.26ms, fracRes: 0.0741, norm(attn): 0.1152, norm(output): 0.1475, norm(x): 0.1567, norm(y): 0.9968, norm:1.7015, tok/sec: 100960.03, flops:105.97, batch-reuse:1
@ 893 train 5.7885 , allloss: 5.8453, dt: 1276.54ms, fracRes: 0.0677, norm(attn): 0.1172, norm(output): 0.1475, norm(x): 0.1562, norm(y): 0.9968, norm:1.2900, tok/sec: 102677.70, flops:107.77, batch-reuse:1
@ 894 train 5.9433 , allloss: 6.0016, dt: 1297.18ms, fracRes: 0.0592, norm(attn): 0.1250, norm(output): 0.1475, norm(x): 0.1550, norm(y): 0.9967, norm:1.5661, tok/sec: 101044.05, flops:106.06, batch-reuse:1
@ 895 train 5.9084 , allloss: 5.9670, dt: 1274.38ms, fracRes: 0.0686, norm(attn): 0.1182, norm(output): 0.1475, norm(x): 0.1559, norm(y): 0.9968, norm:1.3428, tok/sec: 102851.34, flops:107.96, batch-reuse:1
@ 896 train 5.8135 , allloss: 5.8707, dt: 1256.95ms, fracRes: 0.0663, norm(attn): 0.1172, norm(output): 0.1475, norm(x): 0.1553, norm(y): 0.9968, norm:1.4597, tok/sec: 104277.69, flops:109.45, batch-reuse:1
@ 897 train 5.9204 , allloss: 5.9769, dt: 1244.40ms, fracRes: 0.0679, norm(attn): 0.1162, norm(output): 0.1484, norm(x): 0.1552, norm(y): 0.9968, norm:1.4880, tok/sec: 105329.84, flops:110.56, batch-reuse:1
@ 898 train 5.9356 , allloss: 5.9917, dt: 1245.62ms, fracRes: 0.0726, norm(attn): 0.1152, norm(output): 0.1484, norm(x): 0.1563, norm(y): 0.9968, norm:1.8335, tok/sec: 105226.45, flops:110.45, batch-reuse:1
@ 899 train 5.8918 , allloss: 5.9482, dt: 1269.76ms, fracRes: 0.0656, norm(attn): 0.1221, norm(output): 0.1484, norm(x): 0.1553, norm(y): 0.9967, norm:1.5249, tok/sec: 103226.20, flops:108.35, batch-reuse:1
@ 900 train 5.9489 , allloss: 6.0072, dt: 1282.96ms, fracRes: 0.0751, norm(attn): 0.1187, norm(output): 0.1465, norm(x): 0.1557, norm(y): 0.9967, norm:1.3176, tok/sec: 102163.43, flops:107.23, batch-reuse:1
@ 901 train 5.8720 , allloss: 5.9295, dt: 1251.91ms, fracRes: 0.0898, norm(attn): 0.1172, norm(output): 0.1475, norm(x): 0.1574, norm(y): 0.9968, norm:1.6620, tok/sec: 104697.56, flops:109.89, batch-reuse:1
@ 902 train 5.8484 , allloss: 5.9064, dt: 1257.98ms, fracRes: 0.1094, norm(attn): 0.1113, norm(output): 0.1465, norm(x): 0.1589, norm(y): 0.9968, norm:1.5048, tok/sec: 104192.66, flops:109.36, batch-reuse:1
@ 903 train 5.8576 , allloss: 5.9144, dt: 1258.71ms, fracRes: 0.0830, norm(attn): 0.1240, norm(output): 0.1475, norm(x): 0.1567, norm(y): 0.9967, norm:1.2463, tok/sec: 104132.31, flops:109.30, batch-reuse:1
@ 904 train 5.8256 , allloss: 5.8836, dt: 1274.78ms, fracRes: 0.0849, norm(attn): 0.1182, norm(output): 0.1475, norm(x): 0.1570, norm(y): 0.9967, norm:1.5717, tok/sec: 102819.67, flops:107.92, batch-reuse:1
@ 905 train 5.8933 , allloss: 5.9523, dt: 1280.87ms, fracRes: 0.0841, norm(attn): 0.1191, norm(output): 0.1475, norm(x): 0.1568, norm(y): 0.9968, norm:1.1942, tok/sec: 102330.32, flops:107.41, batch-reuse:1
@ 906 train 5.8811 , allloss: 5.9385, dt: 1262.04ms, fracRes: 0.0758, norm(attn): 0.1201, norm(output): 0.1484, norm(x): 0.1567, norm(y): 0.9967, norm:1.5040, tok/sec: 103856.90, flops:109.01, batch-reuse:1
@ 907 train 5.7507 , allloss: 5.8069, dt: 1285.08ms, fracRes: 0.0711, norm(attn): 0.1260, norm(output): 0.1475, norm(x): 0.1557, norm(y): 0.9967, norm:1.6148, tok/sec: 101995.21, flops:107.06, batch-reuse:1
@ 908 train 5.8926 , allloss: 5.9491, dt: 1261.29ms, fracRes: 0.0892, norm(attn): 0.1138, norm(output): 0.1465, norm(x): 0.1571, norm(y): 0.9968, norm:1.6788, tok/sec: 103918.60, flops:109.08, batch-reuse:1
@ 909 train 6.0998 , allloss: 6.1552, dt: 1275.02ms, fracRes: 0.0849, norm(attn): 0.1177, norm(output): 0.1475, norm(x): 0.1587, norm(y): 0.9967, norm:1.7199, tok/sec: 102800.27, flops:107.90, batch-reuse:1
@ 910 train 5.9178 , allloss: 5.9764, dt: 1265.21ms, fracRes: 0.0689, norm(attn): 0.1250, norm(output): 0.1484, norm(x): 0.1558, norm(y): 0.9966, norm:2.2193, tok/sec: 103597.14, flops:108.74, batch-reuse:1
@ 911 train 5.9804 , allloss: 6.0400, dt: 1268.95ms, fracRes: 0.0834, norm(attn): 0.1211, norm(output): 0.1465, norm(x): 0.1571, norm(y): 0.9967, norm:2.2698, tok/sec: 103291.83, flops:108.42, batch-reuse:1
@ 912 train 5.9101 , allloss: 5.9709, dt: 1279.71ms, fracRes: 0.1119, norm(attn): 0.1108, norm(output): 0.1465, norm(x): 0.1595, norm(y): 0.9968, norm:3.0068, tok/sec: 102423.51, flops:107.51, batch-reuse:1
@ 913 train 5.8725 , allloss: 5.9334, dt: 1249.57ms, fracRes: 0.1089, norm(attn): 0.1104, norm(output): 0.1475, norm(x): 0.1595, norm(y): 0.9968, norm:1.9743, tok/sec: 104893.49, flops:110.10, batch-reuse:1
@ 914 train 5.9290 , allloss: 5.9885, dt: 1279.41ms, fracRes: 0.1045, norm(attn): 0.1123, norm(output): 0.1465, norm(x): 0.1595, norm(y): 0.9967, norm:1.8692, tok/sec: 102447.38, flops:107.53, batch-reuse:1
@ 915 train 5.9208 , allloss: 5.9789, dt: 1277.21ms, fracRes: 0.0864, norm(attn): 0.1191, norm(output): 0.1475, norm(x): 0.1580, norm(y): 0.9967, norm:1.6136, tok/sec: 102623.38, flops:107.72, batch-reuse:1
@ 916 train 5.8401 , allloss: 5.8989, dt: 1262.41ms, fracRes: 0.0886, norm(attn): 0.1182, norm(output): 0.1465, norm(x): 0.1571, norm(y): 0.9967, norm:1.6018, tok/sec: 103826.87, flops:108.98, batch-reuse:1
@ 917 train 5.8908 , allloss: 5.9473, dt: 1261.08ms, fracRes: 0.0648, norm(attn): 0.1279, norm(output): 0.1504, norm(x): 0.1566, norm(y): 0.9966, norm:1.8534, tok/sec: 103936.44, flops:109.10, batch-reuse:1
@ 918 train 5.9257 , allloss: 5.9818, dt: 1264.49ms, fracRes: 0.0779, norm(attn): 0.1172, norm(output): 0.1475, norm(x): 0.1576, norm(y): 0.9967, norm:1.7422, tok/sec: 103656.05, flops:108.80, batch-reuse:1
@ 919 train 5.8560 , allloss: 5.9121, dt: 1244.22ms, fracRes: 0.0718, norm(attn): 0.1191, norm(output): 0.1484, norm(x): 0.1569, norm(y): 0.9967, norm:1.6991, tok/sec: 105344.91, flops:110.57, batch-reuse:1
@ 920 train 5.9231 , allloss: 5.9786, dt: 1249.63ms, fracRes: 0.0595, norm(attn): 0.1201, norm(output): 0.1504, norm(x): 0.1570, norm(y): 0.9966, norm:1.6145, tok/sec: 104888.25, flops:110.09, batch-reuse:1
@ 921 train 5.8643 , allloss: 5.9196, dt: 1261.62ms, fracRes: 0.0573, norm(attn): 0.1221, norm(output): 0.1504, norm(x): 0.1566, norm(y): 0.9965, norm:1.2113, tok/sec: 103891.70, flops:109.05, batch-reuse:1
@ 922 train 5.9044 , allloss: 5.9623, dt: 1282.00ms, fracRes: 0.0696, norm(attn): 0.1230, norm(output): 0.1504, norm(x): 0.1575, norm(y): 0.9966, norm:2.1176, tok/sec: 102239.96, flops:107.31, batch-reuse:1
@ 923 train 5.8833 , allloss: 5.9406, dt: 1266.33ms, fracRes: 0.0804, norm(attn): 0.1191, norm(output): 0.1494, norm(x): 0.1583, norm(y): 0.9967, norm:2.0765, tok/sec: 103505.02, flops:108.64, batch-reuse:1
@ 924 train 5.8477 , allloss: 5.9057, dt: 1274.65ms, fracRes: 0.0801, norm(attn): 0.1230, norm(output): 0.1484, norm(x): 0.1578, norm(y): 0.9966, norm:1.7290, tok/sec: 102830.10, flops:107.93, batch-reuse:1
@ 925 train 5.9040 , allloss: 5.9632, dt: 1277.88ms, fracRes: 0.0713, norm(attn): 0.1318, norm(output): 0.1494, norm(x): 0.1568, norm(y): 0.9965, norm:1.6855, tok/sec: 102570.11, flops:107.66, batch-reuse:1
@ 926 train 5.8643 , allloss: 5.9221, dt: 1241.61ms, fracRes: 0.1037, norm(attn): 0.1187, norm(output): 0.1484, norm(x): 0.1598, norm(y): 0.9967, norm:1.7000, tok/sec: 105566.12, flops:110.81, batch-reuse:1
@ 927 train 5.8008 , allloss: 5.8607, dt: 1284.52ms, fracRes: 0.1122, norm(attn): 0.1167, norm(output): 0.1475, norm(x): 0.1612, norm(y): 0.9967, norm:2.1545, tok/sec: 102040.00, flops:107.10, batch-reuse:1
@ 928 train 6.0210 , allloss: 6.0797, dt: 1264.10ms, fracRes: 0.1015, norm(attn): 0.1167, norm(output): 0.1494, norm(x): 0.1594, norm(y): 0.9967, norm:2.1592, tok/sec: 103688.15, flops:108.83, batch-reuse:1
@ 929 train 6.0377 , allloss: 6.0949, dt: 1276.85ms, fracRes: 0.1005, norm(attn): 0.1196, norm(output): 0.1484, norm(x): 0.1604, norm(y): 0.9967, norm:1.4022, tok/sec: 102652.39, flops:107.75, batch-reuse:1
@ 930 train 5.9750 , allloss: 6.0295, dt: 1255.54ms, fracRes: 0.0862, norm(attn): 0.1240, norm(output): 0.1514, norm(x): 0.1599, norm(y): 0.9966, norm:1.6819, tok/sec: 104395.27, flops:109.58, batch-reuse:1
@ 931 train 6.1045 , allloss: 6.1604, dt: 1264.99ms, fracRes: 0.0781, norm(attn): 0.1260, norm(output): 0.1504, norm(x): 0.1591, norm(y): 0.9966, norm:1.7975, tok/sec: 103615.28, flops:108.76, batch-reuse:1
@ 932 train 6.0443 , allloss: 6.1015, dt: 1262.89ms, fracRes: 0.0944, norm(attn): 0.1191, norm(output): 0.1504, norm(x): 0.1597, norm(y): 0.9967, norm:1.6829, tok/sec: 103787.61, flops:108.94, batch-reuse:1
@ 933 train 6.0612 , allloss: 6.1163, dt: 1271.06ms, fracRes: 0.0902, norm(attn): 0.1211, norm(output): 0.1504, norm(x): 0.1598, norm(y): 0.9967, norm:1.7943, tok/sec: 103120.08, flops:108.24, batch-reuse:1
@ 934 train 6.0423 , allloss: 6.0984, dt: 1305.43ms, fracRes: 0.0909, norm(attn): 0.1250, norm(output): 0.1504, norm(x): 0.1596, norm(y): 0.9966, norm:1.8744, tok/sec: 100405.46, flops:105.39, batch-reuse:1
@ 935 train 5.9869 , allloss: 6.0432, dt: 1300.58ms, fracRes: 0.0879, norm(attn): 0.1250, norm(output): 0.1504, norm(x): 0.1601, norm(y): 0.9966, norm:1.6563, tok/sec: 100779.32, flops:105.78, batch-reuse:1
@ 936 train 6.0106 , allloss: 6.0667, dt: 1251.61ms, fracRes: 0.0856, norm(attn): 0.1221, norm(output): 0.1504, norm(x): 0.1600, norm(y): 0.9966, norm:1.2548, tok/sec: 104722.79, flops:109.92, batch-reuse:1
@ 937 train 6.0263 , allloss: 6.0828, dt: 1247.38ms, fracRes: 0.0892, norm(attn): 0.1211, norm(output): 0.1504, norm(x): 0.1599, norm(y): 0.9966, norm:1.2340, tok/sec: 105078.10, flops:110.29, batch-reuse:1
@ 938 train 5.9560 , allloss: 6.0112, dt: 1278.26ms, fracRes: 0.0839, norm(attn): 0.1250, norm(output): 0.1504, norm(x): 0.1595, norm(y): 0.9966, norm:1.3020, tok/sec: 102539.72, flops:107.63, batch-reuse:1
@ 939 train 6.0428 , allloss: 6.0960, dt: 1241.42ms, fracRes: 0.0897, norm(attn): 0.1216, norm(output): 0.1504, norm(x): 0.1617, norm(y): 0.9966, norm:1.8364, tok/sec: 105582.31, flops:110.82, batch-reuse:1
@ 940 train 6.0264 , allloss: 6.0807, dt: 1285.81ms, fracRes: 0.0932, norm(attn): 0.1201, norm(output): 0.1514, norm(x): 0.1621, norm(y): 0.9966, norm:1.2354, tok/sec: 101936.92, flops:107.00, batch-reuse:1
@ 941 train 6.0108 , allloss: 6.0652, dt: 1270.02ms, fracRes: 0.0793, norm(attn): 0.1299, norm(output): 0.1514, norm(x): 0.1606, norm(y): 0.9965, norm:1.5957, tok/sec: 103205.00, flops:108.33, batch-reuse:1
@ 942 train 6.0500 , allloss: 6.1049, dt: 1260.11ms, fracRes: 0.1006, norm(attn): 0.1191, norm(output): 0.1504, norm(x): 0.1621, norm(y): 0.9966, norm:1.7847, tok/sec: 104016.54, flops:109.18, batch-reuse:1
@ 943 train 5.9983 , allloss: 6.0536, dt: 1271.31ms, fracRes: 0.1052, norm(attn): 0.1201, norm(output): 0.1504, norm(x): 0.1623, norm(y): 0.9967, norm:1.9276, tok/sec: 103099.67, flops:108.22, batch-reuse:1
@ 944 train 6.0158 , allloss: 6.0713, dt: 1292.40ms, fracRes: 0.0886, norm(attn): 0.1279, norm(output): 0.1504, norm(x): 0.1610, norm(y): 0.9965, norm:1.5059, tok/sec: 101417.60, flops:106.45, batch-reuse:1
@ 945 train 6.1038 , allloss: 6.1595, dt: 1265.84ms, fracRes: 0.1047, norm(attn): 0.1221, norm(output): 0.1514, norm(x): 0.1636, norm(y): 0.9966, norm:2.0580, tok/sec: 103545.41, flops:108.68, batch-reuse:1
@ 946 train 6.0312 , allloss: 6.0856, dt: 1254.31ms, fracRes: 0.1011, norm(attn): 0.1221, norm(output): 0.1504, norm(x): 0.1623, norm(y): 0.9966, norm:2.1540, tok/sec: 104497.54, flops:109.68, batch-reuse:1
@ 947 train 6.0020 , allloss: 6.0556, dt: 1242.20ms, fracRes: 0.0873, norm(attn): 0.1240, norm(output): 0.1504, norm(x): 0.1607, norm(y): 0.9965, norm:1.4708, tok/sec: 105515.79, flops:110.75, batch-reuse:1
@ 948 train 6.0104 , allloss: 6.0624, dt: 1282.65ms, fracRes: 0.0846, norm(attn): 0.1226, norm(output): 0.1514, norm(x): 0.1623, norm(y): 0.9965, norm:1.8537, tok/sec: 102188.57, flops:107.26, batch-reuse:1
@ 949 train 6.0636 , allloss: 6.1162, dt: 1260.98ms, fracRes: 0.0961, norm(attn): 0.1172, norm(output): 0.1514, norm(x): 0.1631, norm(y): 0.9966, norm:1.6219, tok/sec: 103944.52, flops:109.10, batch-reuse:1
@ 950 train 6.0015 , allloss: 6.0541, dt: 1271.45ms, fracRes: 0.0785, norm(attn): 0.1260, norm(output): 0.1523, norm(x): 0.1614, norm(y): 0.9965, norm:1.7278, tok/sec: 103088.60, flops:108.21, batch-reuse:1
@ 951 train 6.0734 , allloss: 6.1271, dt: 1286.35ms, fracRes: 0.0845, norm(attn): 0.1235, norm(output): 0.1523, norm(x): 0.1620, norm(y): 0.9965, norm:1.7954, tok/sec: 101894.60, flops:106.95, batch-reuse:1
@ 952 train 5.9814 , allloss: 6.0357, dt: 1257.32ms, fracRes: 0.0913, norm(attn): 0.1289, norm(output): 0.1514, norm(x): 0.1616, norm(y): 0.9965, norm:1.7862, tok/sec: 104246.78, flops:109.42, batch-reuse:1
@ 953 train 5.9868 , allloss: 6.0419, dt: 1282.69ms, fracRes: 0.0983, norm(attn): 0.1260, norm(output): 0.1504, norm(x): 0.1618, norm(y): 0.9965, norm:1.7607, tok/sec: 102184.91, flops:107.26, batch-reuse:1
@ 954 train 5.9196 , allloss: 5.9765, dt: 1305.29ms, fracRes: 0.1359, norm(attn): 0.1177, norm(output): 0.1494, norm(x): 0.1649, norm(y): 0.9967, norm:1.4809, tok/sec: 100415.62, flops:105.40, batch-reuse:1
@ 955 train 6.0057 , allloss: 6.0611, dt: 1294.80ms, fracRes: 0.1072, norm(attn): 0.1260, norm(output): 0.1494, norm(x): 0.1622, norm(y): 0.9965, norm:1.1929, tok/sec: 101229.64, flops:106.25, batch-reuse:1
@ 956 train 5.9618 , allloss: 6.0154, dt: 1273.36ms, fracRes: 0.0959, norm(attn): 0.1270, norm(output): 0.1504, norm(x): 0.1617, norm(y): 0.9964, norm:1.6751, tok/sec: 102934.05, flops:108.04, batch-reuse:1
@ 957 train 5.9923 , allloss: 6.0467, dt: 1271.58ms, fracRes: 0.1053, norm(attn): 0.1240, norm(output): 0.1504, norm(x): 0.1619, norm(y): 0.9965, norm:1.6551, tok/sec: 103077.85, flops:108.19, batch-reuse:1
@ 958 train 6.0004 , allloss: 6.0538, dt: 1261.77ms, fracRes: 0.1061, norm(attn): 0.1221, norm(output): 0.1494, norm(x): 0.1626, norm(y): 0.9965, norm:1.4902, tok/sec: 103879.12, flops:109.03, batch-reuse:1
@ 959 train 5.8880 , allloss: 5.9413, dt: 1281.33ms, fracRes: 0.0941, norm(attn): 0.1289, norm(output): 0.1504, norm(x): 0.1615, norm(y): 0.9965, norm:1.9370, tok/sec: 102293.57, flops:107.37, batch-reuse:1
@ 960 train 6.0344 , allloss: 6.0887, dt: 1282.62ms, fracRes: 0.1038, norm(attn): 0.1235, norm(output): 0.1504, norm(x): 0.1621, norm(y): 0.9965, norm:1.5574, tok/sec: 102190.74, flops:107.26, batch-reuse:1
@ 961 train 5.9468 , allloss: 6.0018, dt: 1267.63ms, fracRes: 0.1028, norm(attn): 0.1250, norm(output): 0.1504, norm(x): 0.1623, norm(y): 0.9965, norm:1.6046, tok/sec: 103399.40, flops:108.53, batch-reuse:1
@ 962 train 5.9807 , allloss: 6.0343, dt: 1284.93ms, fracRes: 0.1028, norm(attn): 0.1250, norm(output): 0.1504, norm(x): 0.1623, norm(y): 0.9965, norm:1.5809, tok/sec: 102006.81, flops:107.07, batch-reuse:1
@ 963 train 6.0042 , allloss: 6.0575, dt: 1259.50ms, fracRes: 0.0956, norm(attn): 0.1250, norm(output): 0.1514, norm(x): 0.1622, norm(y): 0.9964, norm:1.3136, tok/sec: 104066.51, flops:109.23, batch-reuse:1
@ 964 train 5.9954 , allloss: 6.0478, dt: 1279.37ms, fracRes: 0.0980, norm(attn): 0.1240, norm(output): 0.1533, norm(x): 0.1637, norm(y): 0.9964, norm:1.4698, tok/sec: 102450.13, flops:107.53, batch-reuse:1
@ 965 train 5.9972 , allloss: 6.0503, dt: 1246.00ms, fracRes: 0.1126, norm(attn): 0.1191, norm(output): 0.1504, norm(x): 0.1641, norm(y): 0.9965, norm:1.5779, tok/sec: 105194.26, flops:110.42, batch-reuse:1
@ 966 train 5.9717 , allloss: 6.0262, dt: 1270.65ms, fracRes: 0.1101, norm(attn): 0.1206, norm(output): 0.1504, norm(x): 0.1639, norm(y): 0.9965, norm:1.6694, tok/sec: 103153.38, flops:108.27, batch-reuse:1
@ 967 train 5.9876 , allloss: 6.0409, dt: 1262.09ms, fracRes: 0.1091, norm(attn): 0.1309, norm(output): 0.1543, norm(x): 0.1656, norm(y): 0.9965, norm:2.1842, tok/sec: 103852.84, flops:109.01, batch-reuse:1
@ 968 train 6.1050 , allloss: 6.1572, dt: 1251.73ms, fracRes: 0.0967, norm(attn): 0.1299, norm(output): 0.1533, norm(x): 0.1640, norm(y): 0.9964, norm:2.5324, tok/sec: 104712.78, flops:109.91, batch-reuse:1
@ 969 train 5.9670 , allloss: 6.0197, dt: 1241.20ms, fracRes: 0.0895, norm(attn): 0.1328, norm(output): 0.1543, norm(x): 0.1647, norm(y): 0.9963, norm:1.6171, tok/sec: 105601.20, flops:110.84, batch-reuse:1
@ 970 train 5.9899 , allloss: 6.0455, dt: 1258.62ms, fracRes: 0.1092, norm(attn): 0.1162, norm(output): 0.1523, norm(x): 0.1654, norm(y): 0.9965, norm:1.8730, tok/sec: 104139.29, flops:109.31, batch-reuse:1
@ 971 train 6.0153 , allloss: 6.0687, dt: 1303.35ms, fracRes: 0.1102, norm(attn): 0.1187, norm(output): 0.1523, norm(x): 0.1657, norm(y): 0.9965, norm:1.8054, tok/sec: 100565.17, flops:105.56, batch-reuse:1
@ 972 train 6.0391 , allloss: 6.0922, dt: 1251.74ms, fracRes: 0.0795, norm(attn): 0.1357, norm(output): 0.1533, norm(x): 0.1625, norm(y): 0.9963, norm:2.4764, tok/sec: 104711.64, flops:109.91, batch-reuse:1
@ 973 train 6.0130 , allloss: 6.0659, dt: 1276.73ms, fracRes: 0.0943, norm(attn): 0.1221, norm(output): 0.1543, norm(x): 0.1652, norm(y): 0.9964, norm:1.7996, tok/sec: 102662.40, flops:107.76, batch-reuse:1
@ 974 train 6.0270 , allloss: 6.0822, dt: 1263.28ms, fracRes: 0.0973, norm(attn): 0.1230, norm(output): 0.1533, norm(x): 0.1650, norm(y): 0.9964, norm:2.5745, tok/sec: 103754.94, flops:108.90, batch-reuse:1
@ 975 train 6.0320 , allloss: 6.0871, dt: 1246.05ms, fracRes: 0.1085, norm(attn): 0.1152, norm(output): 0.1523, norm(x): 0.1647, norm(y): 0.9965, norm:1.5981, tok/sec: 105189.75, flops:110.41, batch-reuse:1
@ 976 train 5.9460 , allloss: 5.9995, dt: 1306.32ms, fracRes: 0.1020, norm(attn): 0.1196, norm(output): 0.1543, norm(x): 0.1646, norm(y): 0.9964, norm:1.6395, tok/sec: 100336.74, flops:105.32, batch-reuse:1
@ 977 train 5.9512 , allloss: 6.0058, dt: 1303.57ms, fracRes: 0.0839, norm(attn): 0.1318, norm(output): 0.1553, norm(x): 0.1640, norm(y): 0.9963, norm:1.7766, tok/sec: 100548.29, flops:105.54, batch-reuse:1
@ 978 train 5.9706 , allloss: 6.0241, dt: 1268.80ms, fracRes: 0.1100, norm(attn): 0.1191, norm(output): 0.1533, norm(x): 0.1661, norm(y): 0.9965, norm:1.9012, tok/sec: 103303.79, flops:108.43, batch-reuse:1
@ 979 train 5.9182 , allloss: 5.9732, dt: 1273.50ms, fracRes: 0.1111, norm(attn): 0.1230, norm(output): 0.1533, norm(x): 0.1656, norm(y): 0.9965, norm:1.5582, tok/sec: 102922.46, flops:108.03, batch-reuse:1
@ 980 train 5.8393 , allloss: 5.8914, dt: 1274.71ms, fracRes: 0.0980, norm(attn): 0.1289, norm(output): 0.1543, norm(x): 0.1643, norm(y): 0.9963, norm:1.2823, tok/sec: 102825.25, flops:107.93, batch-reuse:1
@ 981 train 5.8571 , allloss: 5.9079, dt: 1275.88ms, fracRes: 0.1054, norm(attn): 0.1250, norm(output): 0.1543, norm(x): 0.1666, norm(y): 0.9964, norm:1.7721, tok/sec: 102730.35, flops:107.83, batch-reuse:1
@ 982 train 5.8737 , allloss: 5.9264, dt: 1258.20ms, fracRes: 0.1116, norm(attn): 0.1221, norm(output): 0.1543, norm(x): 0.1661, norm(y): 0.9964, norm:1.5441, tok/sec: 104174.08, flops:109.34, batch-reuse:1
@ 983 train 5.9811 , allloss: 6.0330, dt: 1237.46ms, fracRes: 0.1045, norm(attn): 0.1216, norm(output): 0.1553, norm(x): 0.1671, norm(y): 0.9963, norm:1.7739, tok/sec: 105919.93, flops:111.18, batch-reuse:1
@ 984 train 5.8982 , allloss: 5.9495, dt: 1279.12ms, fracRes: 0.0932, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1653, norm(y): 0.9963, norm:1.3137, tok/sec: 102470.13, flops:107.56, batch-reuse:1
@ 985 train 5.9103 , allloss: 5.9614, dt: 1274.08ms, fracRes: 0.1003, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1671, norm(y): 0.9963, norm:1.7933, tok/sec: 102875.68, flops:107.98, batch-reuse:1
@ 986 train 5.9769 , allloss: 6.0280, dt: 1274.59ms, fracRes: 0.1153, norm(attn): 0.1211, norm(output): 0.1553, norm(x): 0.1688, norm(y): 0.9964, norm:1.7246, tok/sec: 102834.94, flops:107.94, batch-reuse:1
@ 987 train 5.8610 , allloss: 5.9119, dt: 1266.05ms, fracRes: 0.1025, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1669, norm(y): 0.9964, norm:1.3691, tok/sec: 103528.62, flops:108.67, batch-reuse:1
@ 988 train 6.0054 , allloss: 6.0590, dt: 1265.06ms, fracRes: 0.0945, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1664, norm(y): 0.9963, norm:1.6618, tok/sec: 103609.42, flops:108.75, batch-reuse:1
@ 989 train 6.0442 , allloss: 6.0982, dt: 1256.06ms, fracRes: 0.1131, norm(attn): 0.1235, norm(output): 0.1543, norm(x): 0.1677, norm(y): 0.9963, norm:1.3876, tok/sec: 104351.45, flops:109.53, batch-reuse:1
@ 990 train 5.9025 , allloss: 5.9542, dt: 1269.24ms, fracRes: 0.1028, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1664, norm(y): 0.9963, norm:1.9526, tok/sec: 103268.24, flops:108.39, batch-reuse:1
@ 991 train 5.9385 , allloss: 5.9895, dt: 1286.19ms, fracRes: 0.1014, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1670, norm(y): 0.9963, norm:2.0884, tok/sec: 101907.50, flops:106.97, batch-reuse:1
@ 992 train 5.9929 , allloss: 6.0460, dt: 1251.35ms, fracRes: 0.1147, norm(attn): 0.1240, norm(output): 0.1543, norm(x): 0.1675, norm(y): 0.9964, norm:1.3700, tok/sec: 104744.88, flops:109.94, batch-reuse:1
@ 993 train 5.8505 , allloss: 5.9032, dt: 1278.63ms, fracRes: 0.1192, norm(attn): 0.1235, norm(output): 0.1553, norm(x): 0.1685, norm(y): 0.9964, norm:1.4590, tok/sec: 102509.66, flops:107.60, batch-reuse:1
@ 994 train 5.9517 , allloss: 6.0037, dt: 1276.54ms, fracRes: 0.1101, norm(attn): 0.1289, norm(output): 0.1553, norm(x): 0.1684, norm(y): 0.9963, norm:1.6273, tok/sec: 102677.74, flops:107.77, batch-reuse:1
@ 995 train 5.9019 , allloss: 5.9546, dt: 1269.59ms, fracRes: 0.1118, norm(attn): 0.1279, norm(output): 0.1543, norm(x): 0.1674, norm(y): 0.9963, norm:1.4714, tok/sec: 103239.97, flops:108.36, batch-reuse:1
@ 996 train 5.8140 , allloss: 5.8676, dt: 1275.92ms, fracRes: 0.1177, norm(attn): 0.1289, norm(output): 0.1543, norm(x): 0.1678, norm(y): 0.9963, norm:2.0182, tok/sec: 102727.26, flops:107.83, batch-reuse:1
@ 997 train 5.8695 , allloss: 5.9215, dt: 1281.11ms, fracRes: 0.1099, norm(attn): 0.1299, norm(output): 0.1553, norm(x): 0.1673, norm(y): 0.9963, norm:1.9722, tok/sec: 102311.56, flops:107.39, batch-reuse:1
@ 998 train 6.0438 , allloss: 6.0946, dt: 1272.63ms, fracRes: 0.1129, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1690, norm(y): 0.9963, norm:1.7849, tok/sec: 102993.25, flops:108.11, batch-reuse:1
@ 999 train 5.8688 , allloss: 5.9186, dt: 1253.86ms, fracRes: 0.1080, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1680, norm(y): 0.9963, norm:2.0545, tok/sec: 104534.60, flops:109.72, batch-reuse:1
@ 1000 train 5.9569 , allloss: 6.0092, dt: 1268.13ms, fracRes: 0.1232, norm(attn): 0.1260, norm(output): 0.1543, norm(x): 0.1692, norm(y): 0.9964, norm:1.9885, tok/sec: 103358.44, flops:108.49, batch-reuse:1
@ 1001 train 5.9659 , allloss: 6.0185, dt: 1262.81ms, fracRes: 0.1237, norm(attn): 0.1245, norm(output): 0.1553, norm(x): 0.1693, norm(y): 0.9963, norm:1.4077, tok/sec: 103794.19, flops:108.95, batch-reuse:1
@ 1002 train 5.8374 , allloss: 5.8883, dt: 1253.47ms, fracRes: 0.1191, norm(attn): 0.1289, norm(output): 0.1553, norm(x): 0.1694, norm(y): 0.9963, norm:1.4728, tok/sec: 104567.35, flops:109.76, batch-reuse:1
@ 1003 train 5.9789 , allloss: 6.0307, dt: 1270.68ms, fracRes: 0.1292, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1701, norm(y): 0.9963, norm:1.4432, tok/sec: 103151.32, flops:108.27, batch-reuse:1
@ 1004 train 5.8265 , allloss: 5.8777, dt: 1276.67ms, fracRes: 0.1172, norm(attn): 0.1318, norm(output): 0.1553, norm(x): 0.1686, norm(y): 0.9962, norm:1.8435, tok/sec: 102666.90, flops:107.76, batch-reuse:1
@ 1005 train 5.9159 , allloss: 5.9679, dt: 1278.61ms, fracRes: 0.1454, norm(attn): 0.1167, norm(output): 0.1543, norm(x): 0.1714, norm(y): 0.9964, norm:1.7763, tok/sec: 102511.05, flops:107.60, batch-reuse:1
@ 1006 train 5.9122 , allloss: 5.9644, dt: 1244.74ms, fracRes: 0.1433, norm(attn): 0.1177, norm(output): 0.1543, norm(x): 0.1719, norm(y): 0.9964, norm:1.4801, tok/sec: 105300.50, flops:110.53, batch-reuse:1
@ 1007 train 5.8849 , allloss: 5.9344, dt: 1277.47ms, fracRes: 0.1179, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1695, norm(y): 0.9962, norm:1.6058, tok/sec: 102602.56, flops:107.69, batch-reuse:1
@ 1008 train 5.8855 , allloss: 5.9348, dt: 1255.30ms, fracRes: 0.1125, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1688, norm(y): 0.9963, norm:1.1346, tok/sec: 104414.72, flops:109.60, batch-reuse:1
@ 1009 train 5.9314 , allloss: 5.9845, dt: 1261.13ms, fracRes: 0.1370, norm(attn): 0.1201, norm(output): 0.1543, norm(x): 0.1715, norm(y): 0.9964, norm:2.0158, tok/sec: 103932.04, flops:109.09, batch-reuse:1
@ 1010 train 5.9782 , allloss: 6.0305, dt: 1254.11ms, fracRes: 0.1086, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1679, norm(y): 0.9963, norm:1.5375, tok/sec: 104514.25, flops:109.70, batch-reuse:1
@ 1011 train 5.8805 , allloss: 5.9300, dt: 1257.20ms, fracRes: 0.0954, norm(attn): 0.1318, norm(output): 0.1562, norm(x): 0.1669, norm(y): 0.9962, norm:1.7116, tok/sec: 104257.34, flops:109.43, batch-reuse:1
@ 1012 train 5.9665 , allloss: 6.0156, dt: 1261.74ms, fracRes: 0.1140, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1701, norm(y): 0.9964, norm:1.7539, tok/sec: 103881.63, flops:109.04, batch-reuse:1
@ 1013 train 5.9148 , allloss: 5.9640, dt: 1265.24ms, fracRes: 0.1104, norm(attn): 0.1240, norm(output): 0.1543, norm(x): 0.1683, norm(y): 0.9963, norm:1.5926, tok/sec: 103594.34, flops:108.74, batch-reuse:1
@ 1014 train 5.8448 , allloss: 5.8949, dt: 1282.22ms, fracRes: 0.0933, norm(attn): 0.1348, norm(output): 0.1562, norm(x): 0.1669, norm(y): 0.9962, norm:1.7787, tok/sec: 102222.98, flops:107.30, batch-reuse:1
@ 1015 train 5.9352 , allloss: 5.9852, dt: 1277.87ms, fracRes: 0.1018, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1677, norm(y): 0.9962, norm:1.6962, tok/sec: 102570.78, flops:107.66, batch-reuse:1
@ 1016 train 5.9796 , allloss: 6.0296, dt: 1270.24ms, fracRes: 0.1159, norm(attn): 0.1230, norm(output): 0.1553, norm(x): 0.1695, norm(y): 0.9963, norm:1.5209, tok/sec: 103186.93, flops:108.31, batch-reuse:1
@ 1017 train 5.8295 , allloss: 5.8785, dt: 1256.86ms, fracRes: 0.1066, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1689, norm(y): 0.9962, norm:1.7507, tok/sec: 104285.14, flops:109.46, batch-reuse:1
@ 1018 train 5.9439 , allloss: 5.9921, dt: 1274.81ms, fracRes: 0.1102, norm(attn): 0.1279, norm(output): 0.1562, norm(x): 0.1708, norm(y): 0.9962, norm:1.6040, tok/sec: 102816.75, flops:107.92, batch-reuse:1
@ 1019 train 5.9274 , allloss: 5.9769, dt: 1267.58ms, fracRes: 0.1160, norm(attn): 0.1289, norm(output): 0.1562, norm(x): 0.1705, norm(y): 0.9962, norm:1.4181, tok/sec: 103403.59, flops:108.54, batch-reuse:1
@ 1020 train 5.8334 , allloss: 5.8837, dt: 1277.51ms, fracRes: 0.1316, norm(attn): 0.1216, norm(output): 0.1562, norm(x): 0.1718, norm(y): 0.9963, norm:1.4002, tok/sec: 102599.56, flops:107.69, batch-reuse:1
@ 1021 train 5.8371 , allloss: 5.8864, dt: 1260.70ms, fracRes: 0.1197, norm(attn): 0.1289, norm(output): 0.1562, norm(x): 0.1707, norm(y): 0.9962, norm:1.4911, tok/sec: 103967.52, flops:109.13, batch-reuse:1
@ 1022 train 5.7767 , allloss: 5.8268, dt: 1246.90ms, fracRes: 0.1302, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1701, norm(y): 0.9963, norm:1.6204, tok/sec: 105118.43, flops:110.34, batch-reuse:1
@ 1023 train 5.8214 , allloss: 5.8723, dt: 1269.63ms, fracRes: 0.1267, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1705, norm(y): 0.9963, norm:1.7341, tok/sec: 103235.97, flops:108.36, batch-reuse:1
@ 1024 train 5.7869 , allloss: 5.8380, dt: 1272.60ms, fracRes: 0.1332, norm(attn): 0.1260, norm(output): 0.1543, norm(x): 0.1701, norm(y): 0.9963, norm:1.2246, tok/sec: 102995.83, flops:108.11, batch-reuse:1
@ 1025 train 5.8627 , allloss: 5.9130, dt: 1255.29ms, fracRes: 0.1312, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1703, norm(y): 0.9963, norm:1.7883, tok/sec: 104415.47, flops:109.60, batch-reuse:1
@ 1026 train 5.8955 , allloss: 5.9465, dt: 1257.74ms, fracRes: 0.1274, norm(attn): 0.1299, norm(output): 0.1553, norm(x): 0.1701, norm(y): 0.9962, norm:1.9305, tok/sec: 104211.92, flops:109.38, batch-reuse:1
@ 1027 train 5.8717 , allloss: 5.9202, dt: 1267.13ms, fracRes: 0.1227, norm(attn): 0.1309, norm(output): 0.1562, norm(x): 0.1706, norm(y): 0.9962, norm:1.5251, tok/sec: 103440.09, flops:108.57, batch-reuse:1
@ 1028 train 5.8181 , allloss: 5.8669, dt: 1267.58ms, fracRes: 0.1252, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1703, norm(y): 0.9962, norm:1.4736, tok/sec: 103403.08, flops:108.54, batch-reuse:1
@ 1029 train 5.8170 , allloss: 5.8665, dt: 1265.06ms, fracRes: 0.1279, norm(attn): 0.1289, norm(output): 0.1553, norm(x): 0.1713, norm(y): 0.9962, norm:1.3476, tok/sec: 103608.99, flops:108.75, batch-reuse:1
@ 1030 train 5.8494 , allloss: 5.9009, dt: 1268.21ms, fracRes: 0.1242, norm(attn): 0.1348, norm(output): 0.1562, norm(x): 0.1710, norm(y): 0.9961, norm:1.5258, tok/sec: 103351.64, flops:108.48, batch-reuse:1
@ 1031 train 5.8826 , allloss: 5.9327, dt: 1262.35ms, fracRes: 0.1374, norm(attn): 0.1250, norm(output): 0.1543, norm(x): 0.1716, norm(y): 0.9963, norm:1.4544, tok/sec: 103832.01, flops:108.99, batch-reuse:1
@ 1032 train 5.7857 , allloss: 5.8343, dt: 1282.95ms, fracRes: 0.1247, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1706, norm(y): 0.9962, norm:1.1818, tok/sec: 102164.68, flops:107.24, batch-reuse:1
@ 1033 train 5.8123 , allloss: 5.8595, dt: 1263.60ms, fracRes: 0.1212, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1702, norm(y): 0.9962, norm:1.6850, tok/sec: 103728.84, flops:108.88, batch-reuse:1
@ 1034 train 5.7868 , allloss: 5.8344, dt: 1272.34ms, fracRes: 0.1280, norm(attn): 0.1289, norm(output): 0.1553, norm(x): 0.1711, norm(y): 0.9962, norm:1.6422, tok/sec: 103016.10, flops:108.13, batch-reuse:1
@ 1035 train 5.8245 , allloss: 5.8743, dt: 1279.28ms, fracRes: 0.1237, norm(attn): 0.1318, norm(output): 0.1553, norm(x): 0.1701, norm(y): 0.9962, norm:1.3475, tok/sec: 102457.83, flops:107.54, batch-reuse:1
@ 1036 train 5.8532 , allloss: 5.9036, dt: 1278.29ms, fracRes: 0.1382, norm(attn): 0.1250, norm(output): 0.1543, norm(x): 0.1723, norm(y): 0.9963, norm:1.4623, tok/sec: 102536.83, flops:107.63, batch-reuse:1
@ 1037 train 5.8644 , allloss: 5.9171, dt: 1267.56ms, fracRes: 0.1344, norm(attn): 0.1299, norm(output): 0.1523, norm(x): 0.1705, norm(y): 0.9962, norm:1.9370, tok/sec: 103405.24, flops:108.54, batch-reuse:1
@ 1038 train 5.7999 , allloss: 5.8500, dt: 1270.12ms, fracRes: 0.1272, norm(attn): 0.1328, norm(output): 0.1553, norm(x): 0.1709, norm(y): 0.9962, norm:2.0740, tok/sec: 103196.34, flops:108.32, batch-reuse:1
@ 1039 train 5.8091 , allloss: 5.8595, dt: 1273.95ms, fracRes: 0.1523, norm(attn): 0.1211, norm(output): 0.1543, norm(x): 0.1737, norm(y): 0.9964, norm:1.9060, tok/sec: 102886.58, flops:107.99, batch-reuse:1
@ 1040 train 5.7092 , allloss: 5.7592, dt: 1272.60ms, fracRes: 0.1589, norm(attn): 0.1196, norm(output): 0.1533, norm(x): 0.1731, norm(y): 0.9964, norm:2.4726, tok/sec: 102995.37, flops:108.11, batch-reuse:1
@ 1041 train 5.8208 , allloss: 5.8701, dt: 1276.92ms, fracRes: 0.1327, norm(attn): 0.1328, norm(output): 0.1553, norm(x): 0.1705, norm(y): 0.9961, norm:2.0015, tok/sec: 102647.08, flops:107.74, batch-reuse:1
@ 1042 train 5.7852 , allloss: 5.8366, dt: 1255.26ms, fracRes: 0.1496, norm(attn): 0.1235, norm(output): 0.1543, norm(x): 0.1723, norm(y): 0.9963, norm:2.5585, tok/sec: 104418.55, flops:109.60, batch-reuse:1
@ 1043 train 5.8407 , allloss: 5.8907, dt: 1246.30ms, fracRes: 0.1427, norm(attn): 0.1279, norm(output): 0.1543, norm(x): 0.1721, norm(y): 0.9962, norm:1.3029, tok/sec: 105168.56, flops:110.39, batch-reuse:1
@ 1044 train 5.8557 , allloss: 5.9064, dt: 1271.51ms, fracRes: 0.1189, norm(attn): 0.1387, norm(output): 0.1562, norm(x): 0.1705, norm(y): 0.9961, norm:2.0183, tok/sec: 103083.71, flops:108.20, batch-reuse:1
@ 1045 train 5.8630 , allloss: 5.9136, dt: 1252.86ms, fracRes: 0.1224, norm(attn): 0.1348, norm(output): 0.1553, norm(x): 0.1704, norm(y): 0.9961, norm:1.9221, tok/sec: 104618.59, flops:109.81, batch-reuse:1
@ 1046 train 5.8093 , allloss: 5.8582, dt: 1273.02ms, fracRes: 0.1254, norm(attn): 0.1270, norm(output): 0.1562, norm(x): 0.1717, norm(y): 0.9962, norm:1.4155, tok/sec: 102961.46, flops:108.07, batch-reuse:1
@ 1047 train 5.7597 , allloss: 5.8089, dt: 1259.98ms, fracRes: 0.1266, norm(attn): 0.1279, norm(output): 0.1562, norm(x): 0.1731, norm(y): 0.9961, norm:1.3033, tok/sec: 104027.13, flops:109.19, batch-reuse:1
@ 1048 train 5.7872 , allloss: 5.8361, dt: 1271.14ms, fracRes: 0.1239, norm(attn): 0.1309, norm(output): 0.1562, norm(x): 0.1722, norm(y): 0.9961, norm:1.4172, tok/sec: 103113.35, flops:108.23, batch-reuse:1
@ 1049 train 5.7424 , allloss: 5.7929, dt: 1271.36ms, fracRes: 0.1275, norm(attn): 0.1289, norm(output): 0.1562, norm(x): 0.1723, norm(y): 0.9961, norm:1.1101, tok/sec: 103096.12, flops:108.21, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5547, 0.4473, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3887, 0.3887, 0.2227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.6016, 0.1279, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.2910, 0.1074, 0.0894, 0.3418, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.1338, 0.0928, 0.1138, 0.3242, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.0620, 0.1533, 0.2051, 0.2559, 0.1050, 0.0898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.0238, 0.2041, 0.3730, 0.0684, 0.0308, 0.0339, 0.1177, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.0317, 0.1211, 0.2012, 0.2695, 0.1387, 0.0527, 0.0359, 0.0459, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.1631, 0.1260, 0.0598, 0.0508, 0.0547, 0.1064, 0.1953, 0.0957, 0.0583, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.0488, 0.0767, 0.0884, 0.2148, 0.1094, 0.0908, 0.0238, 0.0752, 0.0728, 0.1167, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0569, 0.0938, 0.0476, 0.0334, 0.0542, 0.0415, 0.1406, 0.0718, 0.1904, 0.0361, 0.1680, 0.0664, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.0610, 0.0581, 0.0972, 0.0718, 0.0352, 0.0518, 0.0991, 0.0493, 0.1084, 0.0615, 0.1299, 0.0947, 0.0000, 0.0000],
        [0.0854, 0.0117, 0.1328, 0.1855, 0.1904, 0.0889, 0.0253, 0.0232, 0.0201, 0.0723, 0.0225, 0.0801, 0.0479, 0.0143, 0.0000],
        [0.0864, 0.0247, 0.1064, 0.1299, 0.0981, 0.0713, 0.0208, 0.0320, 0.0306, 0.1211, 0.0212, 0.1572, 0.0613, 0.0250, 0.0135]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0007, -0.0603, -0.0150,  ...,  0.0285,  0.0172,  0.0507],
        [-0.0158,  0.0174,  0.0319,  ..., -0.0039, -0.0335, -0.0092],
        [-0.0113,  0.0409,  0.0192,  ...,  0.0104,  0.0041, -0.0502],
        ...,
        [-0.0003,  0.0194,  0.0488,  ..., -0.0142, -0.0137, -0.0560],
        [-0.0446,  0.0468,  0.0446,  ...,  0.0130, -0.0383, -0.0285],
        [-0.0061, -0.0292, -0.0551,  ..., -0.0414,  0.0173,  0.0475]], device='cuda:0', requires_grad=True)
K: tensor([-0.1396,  0.7891,  1.4844, -1.6641,  0.2129,  0.5078, -0.1924, -0.4023,  0.5039,  0.9766, -0.1338,  1.1719, -0.3438,  0.5430,  0.5273,  0.7812, -0.2178,  0.4688, -0.0603, -0.3516,  0.8086, -0.6953,  0.3691,  0.4922,  0.3164, -0.9844, -0.3320,  0.1777, -0.5586,  0.6836,  1.1328, -0.5469,
         0.5156,  0.5586,  1.1875, -0.0962, -0.9062, -0.2109, -0.1357,  0.5078,  0.6367, -0.1562, -0.5391, -0.0496, -0.5469,  1.0547, -0.3203, -0.8828, -1.0391, -0.7148, -0.1387, -1.2422,  0.0405, -0.1953,  0.1406, -1.2969, -0.8047, -0.8242,  1.7812,  0.4199, -0.1416,  0.5820, -0.0503, -0.3750],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0164,  0.0316, -0.0070,  ...,  0.0290,  0.0013, -0.0153],
        [ 0.0170, -0.0458, -0.0598,  ...,  0.0322,  0.0122,  0.0303],
        [-0.0069, -0.0026,  0.0017,  ...,  0.0297, -0.0129,  0.0376],
        ...,
        [ 0.0063, -0.0339,  0.0032,  ..., -0.0002,  0.0123,  0.0258],
        [ 0.0267, -0.0108, -0.0392,  ...,  0.0048,  0.0045,  0.0414],
        [-0.0033, -0.0008,  0.0360,  ...,  0.0300, -0.0083, -0.0257]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0938, -0.6758, -0.6172,  0.4121,  1.1719,  0.1196,  0.4863,  1.1641,  0.3477, -0.8086, -0.1484, -0.5156, -0.0938,  0.1416,  0.5273, -0.5430,  0.6016,  0.1367, -0.3066, -0.1279, -0.5938,  0.1924, -0.2734,  0.5156, -0.0669,  0.2949,  0.3125, -0.7266, -0.3789, -0.3418, -0.0488,  1.0703,
        -0.7344, -0.8281, -0.7188,  0.9062,  0.5586, -0.6836, -0.4414, -0.4258, -0.1982,  0.1235,  0.8242, -0.7148, -0.4238, -0.0537,  0.0898,  0.1533,  0.0449,  1.5859, -0.3418,  0.4746,  1.4219,  0.3809, -0.4160,  1.0938,  0.4922,  0.7461, -0.9219, -0.5117, -1.0000, -0.2012, -0.0248,  1.6406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.2119,  0.2754,  0.5039, -0.2266, -0.2109, -0.4941, -0.1367, -0.8438, -0.0101, -0.9961, -0.3945,  0.3594, -0.8281, -0.0596],
        [ 0.0000, -0.0033, -0.5586,  0.7344, -0.1895, -0.0488, -0.0767,  0.0054, -0.1084,  0.1738, -0.2363,  0.1543, -0.1934, -0.2129, -0.1855],
        [ 0.0000,  1.2500, -0.2949, -0.5625,  0.5781,  0.2432,  1.7422,  0.4395,  1.0781, -0.2812,  1.2891,  0.0420,  0.0698,  1.1797,  1.1406],
        [ 0.0000,  0.5273, -0.4648, -0.6484,  0.6914,  0.3320,  0.8164, -0.4297,  1.3828, -0.4863,  0.8594, -0.8125, -0.8320,  1.1875,  0.8438],
        [ 0.0000,  0.1826, -0.1846,  0.0238,  1.0703,  0.7031,  0.5156, -0.8242,  0.4355, -0.3223,  0.2363, -0.5625, -0.1279,  0.4492,  0.5195],
        [ 0.0000, -0.7383,  0.1621,  0.4531,  0.6758, -0.2168, -0.3711, -0.3320, -0.5938,  0.4902, -0.5742,  0.3613, -0.1279, -1.0312, -0.3262],
        [ 0.0000, -1.8203,  0.3301,  0.9336, -0.7617, -1.5625, -1.4688, -0.2217, -1.6016,  0.0515, -1.4766,  0.8750,  0.0781, -1.6250, -1.6719],
        [ 0.0000, -1.1797,  0.1582,  0.6680,  0.9609,  0.2988, -0.6719, -1.0625, -0.8125,  0.0332, -0.7344, -0.5352, -0.7539, -1.3672, -1.1562],
        [ 0.0000,  0.5977,  0.3477, -0.4023, -0.5664, -0.4902,  0.1738,  0.7812,  0.0703, -0.4258,  0.0972,  0.2969,  0.6719,  0.5234,  0.5391],
        [ 0.0000, -0.5312, -0.0801,  0.0620,  0.9492,  0.2715,  0.0869, -1.2500, -0.0996, -0.1357,  0.3379, -1.1562, -0.8633, -0.3496, -0.3418],
        [ 0.0000,  0.5039, -0.1758, -0.5273, -0.0493, -0.3164,  0.9023,  0.2324,  1.2031, -0.4512,  1.0781,  0.1543,  0.2412,  1.0703,  1.0078],
        [ 0.0000, -0.2949, -0.3457,  0.1670, -0.1328, -0.8477, -0.4629,  0.1895, -0.5078,  0.2793, -0.2871,  0.4609,  0.1426, -0.3926, -0.6484],
        [ 0.0000, -1.9922,  0.4414,  0.7734,  0.7969,  0.0354, -1.2188, -1.3047, -1.4453, -0.1670, -1.3359, -0.0674, -0.5820, -1.7891, -1.7812],
        [ 0.0000, -1.2578,  0.2100,  0.4121,  0.1270, -0.1943, -1.4219, -0.9883, -1.0391,  0.3398, -1.3984,  0.5977, -0.3438, -1.2422, -1.8516]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5312],
        [0.3228],
        [0.1530],
        [0.1721],
        [0.1299],
        [0.1392],
        [0.1425],
        [0.1162],
        [0.0931],
        [0.0769],
        [0.0610],
        [0.0645],
        [0.0664],
        [0.0808]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0654,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2197,     0.5781,     0.2041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6680,     0.1167,     0.0698,     0.1465,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0031,     0.0096,     0.0094,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0030,     0.0043,     0.0034,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7500,     0.0457,     0.0579,     0.0439,     0.0139,     0.0063,     0.0830,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1914,     0.1191,     0.1133,     0.1040,     0.0439,     0.0635,     0.1235,     0.2412,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.0036,     0.0240,     0.0145,     0.0034,     0.0012,     0.0292,     0.1108,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2461,     0.0515,     0.0894,     0.0889,     0.0381,     0.0204,     0.0486,     0.1953,     0.0327,     0.1895,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0001,     0.0014,     0.0005,     0.0000,     0.0000,     0.0015,     0.0130,     0.0007,     0.0454,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2324,     0.0713,     0.0649,     0.0952,     0.0303,     0.0148,     0.0767,     0.0957,     0.0315,     0.2178,     0.0173,     0.0522,     0.0000,     0.0000,     0.0000],
        [    0.6602,     0.0029,     0.0172,     0.0068,     0.0010,     0.0005,     0.0121,     0.2139,     0.0033,     0.0679,     0.0006,     0.0058,     0.0060,     0.0000,     0.0000],
        [    0.6914,     0.0027,     0.0157,     0.0100,     0.0025,     0.0010,     0.0228,     0.1021,     0.0153,     0.1074,     0.0014,     0.0054,     0.0031,     0.0186,     0.0000],
        [    0.1494,     0.0708,     0.0542,     0.1138,     0.0325,     0.0077,     0.0554,     0.0396,     0.0361,     0.2354,     0.0261,     0.0369,     0.0132,     0.0515,     0.0776]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0090, -0.0206,  0.0299,  ...,  0.0032, -0.0015,  0.0106],
        [ 0.0250, -0.0153,  0.0008,  ...,  0.0249, -0.0005, -0.0053],
        [-0.0044, -0.0498,  0.0003,  ...,  0.0291, -0.0182,  0.0006],
        ...,
        [-0.0088, -0.0004, -0.0367,  ..., -0.0063, -0.0278, -0.0027],
        [ 0.0032,  0.0089, -0.0028,  ...,  0.0580,  0.0276, -0.0034],
        [ 0.0278, -0.0575, -0.0221,  ...,  0.0030,  0.0099,  0.0185]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6172, -0.1826, -0.8945,  0.5742, -1.4609, -0.0688,  2.2969, -0.8477,  0.5898,  1.2578,  0.7734, -0.1885,  0.4609,  0.2578,  0.7695,  0.7344, -0.7266,  0.7109,  0.8320, -0.3438,  0.3457, -0.5703, -1.1406, -0.5859,  0.8203,  0.5273,  0.1348,  1.1328,  0.3164,  0.7461,  0.8789,  0.7266,
         1.4844,  0.4004,  0.6719, -0.4844,  1.7188, -0.8711, -0.0150, -0.7227,  0.3398,  1.1094, -0.2471,  0.6289,  0.8672,  0.7695,  0.0093,  0.3066,  0.2930,  0.9570, -0.7734, -0.6016,  0.0027,  0.3223, -0.5977,  1.0781, -0.0106, -1.1328, -0.7344,  0.9258, -0.7812, -1.6250,  0.8555, -1.4766],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0225,      0.0013,     -0.0064,  ...,      0.0002,     -0.0139,      0.0100],
        [     0.0027,     -0.0039,      0.0018,  ...,      0.0459,      0.0287,     -0.0277],
        [    -0.0046,     -0.0165,     -0.0065,  ...,     -0.0080,     -0.0247,      0.0573],
        ...,
        [    -0.0224,      0.0399,      0.0067,  ...,      0.0462,      0.0422,     -0.0332],
        [    -0.0199,      0.0054,     -0.0136,  ...,      0.0021,      0.0001,      0.0499],
        [    -0.0116,     -0.0017,      0.0146,  ...,      0.0325,      0.0514,     -0.0098]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.5469,      1.3828,      0.0181,      0.0854,      0.6562,     -0.1582,      0.2002,      0.5156,      0.2676,      0.8398,     -0.8711,      0.8320,     -0.5273,     -0.7695,     -0.2598,     -0.2178,     -0.1113,     -0.3438,     -0.6289,      0.9922,     -0.2793,      1.1953,
             0.5156,     -0.8672,     -1.0625,      0.1875,     -0.6250,      0.0554,     -0.0718,     -0.4961,     -0.1436,     -0.0613,      0.9258,     -0.4824,     -0.6133,     -0.1089,      0.8633,      2.1094,     -0.2295,      0.0967,     -0.6133,      0.0272,     -0.2949,     -1.2812,
            -0.1099,     -0.0029,     -1.0547,      0.0583,     -0.9297,      0.0515,      0.4004,      0.1865,      0.7969,     -0.0009,      0.6641,      0.5742,     -0.5625,     -0.4824,      0.7148,      0.6797,     -0.4609,      0.4473,     -0.1377,     -0.5117], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -2.6562,  -2.5156,  -2.5469,  -3.4219,  -4.7500,  -2.8594,  -2.6094,  -2.3594,  -0.3496,  -4.0938,  -3.2344,  -4.9062,  -1.9766,  -2.0156],
        [  0.0000,   0.9648,  -0.0718,   0.5508,   0.1270,  -1.0625,   0.2285,  -0.1836,  -0.2324,   0.3652,  -0.3027,   0.0566,   0.4492,   0.1016,   0.5859],
        [  0.0000,  -1.7422,  -2.2656,  -1.5234,  -2.9375,  -3.7656,  -1.6641,  -1.6875,  -2.2500,  -0.6797,  -3.4375,  -2.3906,  -3.1719,  -1.7734,  -1.1953],
        [  0.0000,  -5.7500,  -4.6250,  -4.6250,  -6.4062,  -7.8438,  -4.0312,  -3.5469,  -4.1562,  -2.0312,  -7.1250,  -5.7188,  -7.0312,  -3.8438,  -4.2812],
        [  0.0000,  -5.8125,  -5.4375,  -5.6562,  -8.1250,  -9.1250,  -4.5938,  -3.1719,  -5.7188,  -2.1094,  -8.3750,  -6.8438,  -8.1875,  -5.0000,  -4.9688],
        [  0.0000,  -2.7969,  -2.5625,  -2.8438,  -3.9844,  -4.7812,  -2.2031,  -1.4922,  -2.9531,  -1.4141,  -4.6250,  -3.6406,  -3.9531,  -2.5469,  -2.3594],
        [  0.0000,  -0.4746,  -0.5234,  -0.6133,  -1.4688,  -1.1016,  -0.4355,   0.2314,  -1.5078,  -0.2773,  -1.2500,  -0.3672,  -0.1240,  -1.4062,  -0.5938],
        [  0.0000,  -5.3750,  -3.5000,  -4.0000,  -5.4375,  -6.4688,  -3.2969,  -1.9688,  -3.8438,  -1.6406,  -6.1562,  -4.5312,  -5.4375,  -3.5312,  -3.6250],
        [  0.0000,  -1.5625,  -1.0156,  -1.0234,  -1.8672,  -2.5000,  -1.6250,  -0.2324,  -2.0156,  -0.2617,  -1.9688,  -1.1797,  -0.8945,  -1.6719,  -1.1797],
        [  0.0000,  -8.8125,  -6.5000,  -7.4688,  -9.9375, -11.6250,  -6.4375,  -4.2812,  -7.2500,  -3.0312, -10.5625,  -9.0000, -10.1250,  -6.4688,  -6.3438],
        [  0.0000,  -1.1875,  -1.2734,  -0.8906,  -2.0312,  -2.7500,  -1.1094,  -0.8867,  -2.0000,  -0.0669,  -2.5938,  -1.4922,  -1.1641,  -1.6953,  -0.9570],
        [  0.0000,  -5.4375,  -3.6406,  -4.5625,  -6.5000,  -7.2812,  -4.0000,  -1.1250,  -5.2812,  -2.2812,  -7.0000,  -4.7500,  -4.7188,  -5.0000,  -3.7969],
        [  0.0000,  -5.5625,  -3.7812,  -4.2500,  -5.6250,  -6.5312,  -3.4062,  -1.9141,  -3.8125,  -1.8594,  -6.2188,  -4.8438,  -5.4375,  -3.6250,  -3.6875],
        [  0.0000,  -0.7461,  -1.0156,  -0.2754,  -1.5312,  -2.9688,  -0.9961,  -1.3281,  -1.4219,   0.4512,  -1.7500,  -1.3984,  -2.4219,  -1.0703,  -0.6562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9001],
        [0.5112],
        [0.7100],
        [0.9521],
        [0.9886],
        [0.7900],
        [0.2970],
        [0.8044],
        [0.2058],
        [0.9147],
        [0.4593],
        [0.7715],
        [0.7415],
        [0.2615]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.2119,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0178,     0.0065,     0.0066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2217,     0.1895,     0.1953,     0.2832,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5039,     0.0986,     0.0659,     0.0811,     0.0527,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7031,     0.0518,     0.0270,     0.0294,     0.0247,     0.0598,     0.1035,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0006,     0.0007,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2090,     0.1030,     0.0703,     0.0767,     0.0479,     0.1484,     0.1484,     0.0869,     0.1104,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2119,     0.0708,     0.0776,     0.0747,     0.0581,     0.1338,     0.1289,     0.0962,     0.0654,     0.0297,     0.0525,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0003,     0.0001,     0.0002,     0.0001,     0.0016,     0.0016,     0.0005,     0.0002,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6211,     0.0221,     0.0199,     0.0354,     0.0258,     0.0491,     0.0530,     0.0408,     0.0320,     0.0069,     0.0162,     0.0159,     0.0630,     0.0000,     0.0000],
        [    0.5625,     0.0300,     0.0145,     0.0229,     0.0101,     0.0918,     0.0762,     0.0359,     0.0337,     0.0025,     0.0140,     0.0205,     0.0737,     0.0123,     0.0000],
        [    0.9766,     0.0017,     0.0004,     0.0009,     0.0007,     0.0067,     0.0045,     0.0019,     0.0013,     0.0000,     0.0006,     0.0003,     0.0038,     0.0002,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0062,  0.0447,  0.0360,  ..., -0.0153,  0.0071, -0.0308],
        [-0.0076, -0.0302,  0.0064,  ...,  0.0240,  0.0010, -0.0422],
        [ 0.0269,  0.0493,  0.0116,  ...,  0.0032,  0.0159, -0.0070],
        ...,
        [-0.0543, -0.0305, -0.0376,  ...,  0.0032,  0.0055, -0.0137],
        [ 0.0207,  0.0260,  0.0083,  ..., -0.0266,  0.0237, -0.0095],
        [-0.0223, -0.0128, -0.0603,  ...,  0.0414,  0.0077, -0.0034]], device='cuda:0', requires_grad=True)
K: tensor([-0.0425,  1.4062, -0.7969,  1.6094,  1.1016,  1.6328,  1.4531, -0.6836, -2.0312,  1.2578,  1.0703, -0.4453, -1.1328, -1.2969, -1.1797, -0.8398,  1.0781,  1.0000,  2.3438, -0.7031, -2.3438,  1.5625,  2.1250,  1.6016, -1.2656, -1.8438, -1.5703, -0.3945, -1.2031,  0.1299,  1.1562,  1.4531,
        -1.5000, -1.7812, -1.7109,  1.1406, -1.7109,  0.7539,  0.0518,  0.8555,  1.0078,  2.1406, -0.7617, -1.3203,  2.5625,  2.3281, -0.6992, -0.4863, -2.1406,  1.0938,  0.6133, -1.4766,  2.3281,  1.0859,  0.4883,  0.5586, -0.9883,  1.0547, -0.7070, -1.5000, -0.5273, -2.4375,  1.6016, -1.5391],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0242,  0.0029, -0.0218,  ..., -0.0144, -0.0179, -0.0042],
        [ 0.0077,  0.0059,  0.0156,  ..., -0.0268,  0.0232, -0.0226],
        [-0.0313, -0.0424, -0.0045,  ..., -0.0089, -0.0165, -0.0363],
        ...,
        [ 0.0053,  0.0101,  0.0059,  ..., -0.0317,  0.0008, -0.0308],
        [-0.0262, -0.0051, -0.0153,  ...,  0.0029, -0.0120,  0.0308],
        [ 0.0205,  0.0083,  0.0504,  ...,  0.0082,  0.0628, -0.0202]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.7773, -1.5547,  1.0469, -0.2520, -1.1562, -1.3828, -2.0938,  0.9102,  0.4043, -1.1875, -0.4297,  0.7031,  0.5898,  0.5508, -0.7188,  0.8242, -0.9258, -0.8945, -0.2451,  0.6680,  0.6484, -0.7539, -1.3359, -0.9766,  0.8281,  1.1328,  0.5781,  0.7227, -0.0439,  1.6719, -1.8828, -0.2520,
         1.0859,  1.1953,  1.2891, -1.6875,  1.3438, -2.0938, -1.9375, -1.3594, -1.5312, -0.1201,  0.4238,  1.1328, -0.7695, -0.7148,  1.3047,  0.8828,  0.1396, -0.6914, -0.4941,  0.3535, -1.3516, -1.3672, -0.3945, -0.9766,  1.6875, -1.4375,  1.3125,  0.7695,  1.4844,  1.4688, -1.1719,  0.8711],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -1.3125,  -1.6250,  -1.5391,  -1.5156,  -0.3906,  -0.7188,  -1.1484,  -0.8828,  -2.5938,  -1.3438,  -1.6016,  -0.8125,  -1.2500,  -1.6562],
        [  0.0000,  -7.9688,  -9.9375,  -8.4375,  -9.0625,  -6.6562,  -6.8438,  -7.6250,  -8.4375, -13.7500,  -9.4375, -10.4375,  -7.1250, -10.4375, -11.8750],
        [  0.0000,  -4.0000,  -5.0000,  -5.0000,  -5.0625,  -3.0000,  -3.2188,  -4.0312,  -4.4375,  -8.0000,  -5.1250,  -4.8438,  -3.7344,  -5.7188,  -6.2188],
        [  0.0000,  -0.1572,  -0.1260,   0.2412,  -0.6953,   0.0981,  -0.2002,  -0.5898,  -0.5781,  -0.9922,  -0.4727,   0.5352,  -0.4980,  -0.8242,  -0.5469],
        [  0.0000,  -1.6328,  -2.0312,  -1.8281,  -2.2500,  -0.9297,  -1.4375,  -1.4062,  -1.7891,  -3.5156,  -2.2656,  -1.3516,  -1.1016,  -2.4375,  -2.7500],
        [  0.0000,  -2.6094,  -3.2656,  -3.1719,  -3.3438,  -2.4688,  -1.9141,  -2.4375,  -3.0000,  -4.3750,  -3.6250,  -3.0000,  -2.2188,  -3.8125,  -4.1562],
        [  0.0000,  -8.9375, -10.8125,  -9.9375, -10.0625,  -7.4062,  -7.3125,  -7.8438,  -9.4375, -13.8125, -10.5625, -11.5625,  -7.3438, -11.4375, -12.6875],
        [  0.0000,  -0.7109,  -1.0938,  -1.0000,  -1.4766,  -0.3438,  -0.3457,  -0.8750,  -0.6406,  -1.8516,  -1.1719,  -0.7109,  -0.3340,  -1.0625,  -1.6797],
        [  0.0000, -10.2500, -13.3750, -12.5000, -12.6250,  -9.1250,  -9.1250,  -9.3750, -11.5625, -18.6250, -12.6250, -13.6875,  -8.6875, -14.0625, -16.0000],
        [  0.0000,  -1.0938,  -1.0000,  -1.0469,  -1.2891,  -0.4551,  -0.4941,  -0.7891,  -1.1719,  -1.9688,  -1.3906,  -0.3242,  -0.7461,  -1.6328,  -1.1328],
        [  0.0000,  -8.1250,  -9.8750,  -8.7500,  -9.4375,  -6.4062,  -6.4375,  -7.6562,  -8.6875, -14.1250,  -9.8750, -10.4375,  -7.0938, -10.6875, -11.9375],
        [  0.0000,  -3.3281,  -3.4375,  -2.8594,  -3.1875,  -2.5312,  -2.4688,  -2.7188,  -2.9688,  -4.5000,  -3.6406,  -3.6719,  -2.2969,  -3.7500,  -3.9062],
        [  0.0000,  -2.9219,  -3.6562,  -3.2031,  -4.0000,  -1.8125,  -2.0000,  -2.7500,  -2.8125,  -5.4062,  -3.6875,  -3.3125,  -2.0312,  -3.8125,  -4.6875],
        [  0.0000,  -6.3125,  -7.7500,  -6.9688,  -7.1875,  -4.9688,  -5.3750,  -6.2500,  -6.6562, -11.4375,  -7.4375,  -7.9375,  -5.5625,  -8.3125,  -9.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5591],
        [0.9912],
        [0.8763],
        [0.3578],
        [0.5267],
        [0.6633],
        [0.9850],
        [0.3606],
        [0.9889],
        [0.1794],
        [0.9535],
        [0.5741],
        [0.6029],
        [0.9059]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2080, 0.7930, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0488, 0.2490, 0.7031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0287, 0.3711, 0.4434, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.4004, 0.1099, 0.0747, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0981, 0.3281, 0.1582, 0.0427, 0.1680, 0.2051, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0036, 0.0403, 0.0508, 0.0110, 0.0593, 0.0708, 0.7656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0417, 0.2051, 0.0337, 0.0049, 0.0386, 0.0260, 0.5781, 0.0742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0074, 0.0659, 0.0510, 0.0099, 0.0474, 0.0396, 0.3887, 0.0791, 0.3105, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.2988, 0.0623, 0.0150, 0.0393, 0.0371, 0.2256, 0.0620, 0.0938, 0.0378, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.0447, 0.0227, 0.0082, 0.0240, 0.0278, 0.2578, 0.0781, 0.3906, 0.0425, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0173, 0.0728, 0.0586, 0.0322, 0.0869, 0.0466, 0.1533, 0.1025, 0.2422, 0.0280, 0.0874, 0.0723, 0.0000, 0.0000, 0.0000],
        [0.0276, 0.1270, 0.0227, 0.0038, 0.0262, 0.0187, 0.3828, 0.0598, 0.1699, 0.0199, 0.0415, 0.0728, 0.0281, 0.0000, 0.0000],
        [0.0115, 0.0649, 0.0291, 0.0064, 0.0322, 0.0258, 0.2344, 0.0461, 0.1533, 0.0212, 0.0466, 0.0781, 0.0291, 0.2217, 0.0000],
        [0.0153, 0.0762, 0.0275, 0.0090, 0.0449, 0.0226, 0.1523, 0.0947, 0.1030, 0.0253, 0.0603, 0.0376, 0.0537, 0.1328, 0.1445]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0087, -0.0193,  0.0135,  ...,  0.0277, -0.0115, -0.0160],
        [-0.0240,  0.0038, -0.0026,  ..., -0.0028, -0.0041,  0.0067],
        [ 0.0158,  0.0384,  0.0256,  ..., -0.0141,  0.0144,  0.0276],
        ...,
        [ 0.0032,  0.0326, -0.0129,  ..., -0.0020, -0.0265, -0.0046],
        [ 0.0223, -0.0237,  0.0184,  ...,  0.0143,  0.0069, -0.0101],
        [ 0.0317,  0.0182,  0.0152,  ...,  0.0042,  0.0159,  0.0173]], device='cuda:0', requires_grad=True)
K: tensor([-0.3555,  1.3359, -1.2344, -3.0469, -0.6016, -0.7812, -2.3750,  2.2500, -1.2500,  1.8125,  1.0391, -1.7109, -0.2314, -2.1719, -0.7891, -0.2207,  1.1875,  1.3203, -1.7734,  0.7266,  1.7969,  2.0938, -2.3125,  1.2812, -1.5547, -0.7852,  0.1768,  1.9531,  2.1094, -2.7656,  1.5234,  0.8164,
         2.7031, -2.8438,  0.5781,  2.3438, -1.7656,  0.2031, -0.8438,  1.9297,  2.3281, -0.3633,  2.1562, -1.0234, -0.8594,  1.7422, -3.0156,  1.5391,  0.2393,  0.5938, -1.0859,  1.0000,  1.0078,  1.2266,  1.6953,  1.3750, -1.2578, -1.0625,  1.4531,  2.0938, -2.1094,  0.6797,  1.7344,  1.2266],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0027,  0.0149,  0.0223,  ..., -0.0115,  0.0212,  0.0103],
        [ 0.0247, -0.0006,  0.0027,  ..., -0.0005, -0.0306,  0.0176],
        [ 0.0059, -0.0114, -0.0053,  ..., -0.0054, -0.0361,  0.0317],
        ...,
        [-0.0095,  0.0034, -0.0696,  ..., -0.0092,  0.0066,  0.0058],
        [-0.0037,  0.0230,  0.0032,  ..., -0.0337, -0.0173, -0.0142],
        [-0.0343,  0.0217, -0.0505,  ..., -0.0125, -0.0274,  0.0413]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.1113,     -0.2119,      0.5586,      0.2129,      0.6719,     -0.7109,     -1.6172,      1.2891,      1.3359,     -0.0349,     -1.0391,      0.9570,      1.3438,     -0.7773,     -0.2188,     -0.4688,      0.9961,      0.3281,     -0.6641,      0.4082,      0.2070,      0.0596,
            -0.1445,     -1.0391,      0.0559,     -0.5742,     -0.3965,     -0.7266,      0.5234,      0.0013,      0.2734,      1.7266,      1.7969,     -0.9414,      0.1709,      0.1855,     -0.7070,     -0.5078,      0.1001,     -0.9180,      0.4297,      1.0938,      0.7305,      0.8438,
            -0.9414,      0.9258,     -1.2891,     -0.2695,     -1.7500,      0.0679,      0.3418,     -0.6641,     -0.4922,      0.7500,     -1.4141,     -0.3066,     -1.1641,      0.2871,     -0.8438,     -0.6055,      0.3027,     -0.4648,      0.8672,      0.8984], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.3359, -0.6875, -1.4609, -1.0625, -1.0547,  0.2773,  0.0297, -0.6758, -0.9102, -0.9023, -0.2676, -0.6445, -0.7148,  0.0918],
        [ 0.0000,  1.6328,  2.6719,  2.1875,  3.2031,  2.5625,  3.3438,  3.3281,  4.0312,  1.9844,  3.1094,  2.7031,  3.3750,  4.0938,  3.5000],
        [ 0.0000,  2.5625,  2.7344,  1.7031,  2.2812,  2.0469,  3.6406,  2.8594,  4.3750,  2.1562,  2.7656,  3.3594,  2.7031,  4.6250,  4.0625],
        [ 0.0000,  1.3281,  0.0332, -0.3516,  1.0625,  0.3945,  1.7734,  1.0078,  1.9297,  0.4316,  1.1250,  1.1484,  0.5781,  2.2344,  1.1484],
        [ 0.0000,  1.2109,  0.4766, -0.8320,  0.5391,  0.7383,  2.8125,  1.5547,  2.1406,  0.1934,  1.0469,  1.2969,  0.9141,  2.2188,  2.2344],
        [ 0.0000,  2.4219,  2.6562,  1.1172,  2.8125,  2.9844,  5.3750,  3.6406,  4.9062,  2.2031,  3.5312,  3.6250,  3.3438,  5.1875,  5.0000],
        [ 0.0000,  1.5938, -0.2139, -2.1562, -0.0757, -0.4746,  2.6250,  0.5742,  1.7656, -0.5586,  0.3301,  1.0469, -0.1689,  2.0781,  2.0312],
        [ 0.0000,  2.1875,  1.9375,  0.3008,  1.8594,  1.6797,  3.9688,  2.3750,  3.7500,  1.4062,  2.3281,  2.8750,  1.8906,  4.0938,  3.2656],
        [ 0.0000,  0.8359, -0.7305, -2.1562, -1.1875, -1.2500,  0.5586, -0.7305, -0.3203, -1.2266, -1.1719, -0.0625, -1.3203, -0.3125, -0.1167],
        [ 0.0000,  2.0781,  1.4062,  0.3828,  1.4609,  1.6016,  3.8281,  2.6406,  4.2500,  2.0312,  2.8594,  2.8594,  2.2344,  4.8125,  3.5469],
        [ 0.0000,  1.4297,  1.2109,  0.6211,  1.6094,  0.9844,  2.1875,  1.7734,  2.6406,  0.4766,  1.6172,  1.4219,  1.5547,  2.6250,  2.4531],
        [ 0.0000,  1.5234, -0.1934, -1.9688, -0.0479, -0.3926,  2.6250,  0.7734,  1.8203, -0.3281,  0.4082,  0.9688,  0.0190,  2.1406,  2.1562],
        [ 0.0000,  1.7266,  0.9258, -0.5820,  1.0312,  0.8047,  3.0156,  1.3906,  2.5938,  0.6133,  1.3984,  1.9141,  0.9258,  2.9688,  2.1875],
        [ 0.0000,  1.6016,  0.5859, -0.5273,  1.0781,  0.3887,  2.2969,  1.8203,  1.9062,  0.5039,  1.3672,  0.8945,  1.2578,  2.1562,  2.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3664],
        [0.1271],
        [0.1282],
        [0.1089],
        [0.1337],
        [0.0722],
        [0.1072],
        [0.1060],
        [0.1163],
        [0.0844],
        [0.0691],
        [0.1007],
        [0.1219],
        [0.0824]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.5469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.2090, 0.5508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3203, 0.1641, 0.2305, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.1050, 0.1943, 0.2480, 0.2461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.1084, 0.1621, 0.1240, 0.1865, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.0698, 0.1504, 0.1250, 0.1338, 0.2061, 0.2490, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3184, 0.2305, 0.0977, 0.0933, 0.0869, 0.0579, 0.0605, 0.0547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0457, 0.0408, 0.0977, 0.1113, 0.1113, 0.1602, 0.1465, 0.1011, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1035, 0.0771, 0.0986, 0.0938, 0.1279, 0.0942, 0.0923, 0.0894, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0417, 0.0623, 0.0466, 0.0864, 0.0991, 0.0850, 0.0791, 0.0903, 0.1494, 0.1113, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0603, 0.0889, 0.0840, 0.0530, 0.0986, 0.0835, 0.0864, 0.1108, 0.0889, 0.0564, 0.1191, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.1650, 0.0576, 0.0757, 0.0496, 0.0723, 0.0356, 0.0266, 0.0586, 0.0591, 0.0474, 0.0776, 0.0337, 0.0000, 0.0000],
        [0.0488, 0.0457, 0.0432, 0.0786, 0.0708, 0.1104, 0.0576, 0.0471, 0.1060, 0.0664, 0.0835, 0.0549, 0.0757, 0.1113, 0.0000],
        [0.0527, 0.0728, 0.0413, 0.0757, 0.0330, 0.0576, 0.0520, 0.0583, 0.1104, 0.0815, 0.0571, 0.0630, 0.0498, 0.1152, 0.0801]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0284,  0.0152,  0.0038,  ..., -0.0442,  0.0182,  0.0118],
        [-0.0080,  0.0080,  0.0076,  ...,  0.0121, -0.0314,  0.0026],
        [ 0.0213, -0.0161, -0.0332,  ..., -0.0130, -0.0124, -0.0288],
        ...,
        [ 0.0106,  0.0113,  0.0072,  ...,  0.0040, -0.0252, -0.0337],
        [-0.0132, -0.0197,  0.0135,  ..., -0.0181,  0.0128, -0.0028],
        [-0.0125,  0.0005,  0.0209,  ..., -0.0137,  0.0057,  0.0109]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3203, -0.6523,  0.5977, -1.9375, -1.0234,  0.4043,  0.0327, -1.1094,  1.1250,  0.6953,  0.3359,  0.1982, -0.8164,  0.7461, -1.1328,  0.2656,  0.8203,  0.1992, -0.1826,  0.4590, -0.1475,  0.8867, -1.1406, -0.5820, -2.1250,  0.8945,  0.2852,  0.3633,  0.6484, -0.6875, -0.3750,  0.4805,
        -0.0199, -0.7891,  0.1279, -0.8984, -0.5117,  0.0884,  0.0977, -0.4629,  0.0022, -2.0312,  0.1836,  1.2109,  0.0703, -0.7539,  0.0854,  1.1484,  0.8047, -1.0625,  0.1621, -0.9688, -0.6367, -0.0518, -0.6992,  0.6211, -1.8672, -0.1152, -2.1250,  0.5234,  1.6328, -0.2158,  1.2422, -0.7461],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0001,      0.0228,     -0.0063,  ...,      0.0332,     -0.0122,      0.0388],
        [    -0.0121,      0.0057,      0.0099,  ...,      0.0094,     -0.0157,      0.0012],
        [     0.0102,      0.0091,      0.0037,  ...,     -0.0025,      0.0174,     -0.0252],
        ...,
        [     0.0054,     -0.0089,     -0.0096,  ...,     -0.0001,     -0.0164,      0.0189],
        [     0.0014,     -0.0239,      0.0219,  ...,      0.0093,     -0.0087,      0.0361],
        [    -0.0120,     -0.0142,     -0.0270,  ...,      0.0368,      0.0068,      0.0102]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.9609,      0.3379,     -1.3047,     -1.1250,     -1.2344,      0.7188,      0.6836,     -0.3340,      0.6758,     -0.5195,      0.8125,      0.5820,      0.6445,      0.9023,      0.3438,      0.4316,     -0.2988,     -0.1030,     -0.3516,      0.0840,      0.6055,      0.1914,
             0.5508,     -0.0156,     -0.1963,      0.4492,     -0.0026,      0.6953,     -0.1602,      0.7539,     -0.1406,      0.5742,     -0.8281,     -0.1992,     -0.4473,      0.5703,      0.3164,      0.7734,     -0.8164,      0.5859,      0.5938,     -0.5430,      0.5039,      1.1562,
             0.4141,     -0.0052,     -0.0723,     -0.2305,      0.0008,      0.3418,      0.2793,      0.1836,     -0.0549,      1.5234,      0.1289,     -0.7617,      0.3379,     -0.0981,     -0.3848,      0.1904,     -0.1689,     -0.5547,      0.2041,      0.1260], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1943,     -0.3242,      0.0041,     -0.6250,      0.1221,     -0.4551,     -0.8125,     -0.2480,     -0.0474,     -0.5000,     -0.2793,     -0.6172,      0.0479,      0.0913],
        [     0.0000,     -0.1445,      0.8242,      0.6523,      0.8242,      1.0078,      1.1719,      1.4453,      1.4844,      0.9141,      0.9844,      0.9297,      1.3594,      1.3984,      1.0234],
        [     0.0000,     -0.6680,     -0.3281,     -0.1201,     -0.4297,     -0.7344,     -0.8164,     -0.6875,     -0.0255,     -0.2500,     -0.0591,     -0.4922,     -0.4180,      0.1631,      0.0137],
        [     0.0000,     -0.6797,     -0.0645,      0.1816,      0.1758,      0.0559,      0.2471,      0.0757,      0.4297,      0.2930,      0.3008,     -0.2266,      0.0894,      0.2520,      0.6133],
        [     0.0000,     -0.0613,      0.3379,      0.0737,      0.4805,      0.9688,      0.4980,     -0.1138,      0.5664,     -0.1484,      0.4863,      0.3848,      0.3047,      0.4766,      0.4844],
        [     0.0000,      0.0771,      0.8477,      0.6602,      0.7305,      1.1562,      1.3516,      0.9102,      1.5078,      0.7852,      0.9023,      0.7266,      0.8398,      1.1328,      1.3203],
        [     0.0000,     -0.3262,     -1.1797,     -1.2266,     -1.3047,     -1.7031,     -1.6641,     -1.7656,     -1.1875,     -1.1484,     -1.5078,     -1.4375,     -1.9922,     -1.2812,     -0.6445],
        [     0.0000,     -0.1094,      0.7617,      0.8945,      0.8945,      1.2578,      1.1641,      0.7969,      1.4062,      0.6367,      0.8633,      0.8359,      0.8906,      1.1250,      1.1562],
        [     0.0000,     -0.2109,     -0.5000,     -0.2578,     -0.3066,     -0.0009,     -0.3027,     -0.3242,     -0.3555,     -0.2852,     -0.4688,     -0.5117,     -0.4062,     -0.3066,     -0.3145],
        [     0.0000,      0.4004,      0.1084,      0.7266,      0.8633,      0.7109,      0.6406,      0.7734,      1.2734,      0.9805,      1.2734,      0.0300,      1.0703,      1.3516,      1.1484],
        [     0.0000,     -0.1572,      0.2305,      0.1758,     -0.2852,      0.3359,      0.1660,      0.2031,      0.4512,      0.2285,     -0.2246,      0.5234,      0.1494,      0.2773,      0.1543],
        [     0.0000,     -0.3809,     -1.4297,     -1.1562,     -1.5781,     -1.2109,     -1.9062,     -2.2031,     -1.4141,     -1.4062,     -1.6328,     -1.1328,     -1.9688,     -1.3438,     -1.2422],
        [     0.0000,     -0.0645,     -0.1201,      0.4766,      0.3730,      0.8164,      0.1670,     -0.0325,      0.7773,      0.3105,      0.5352,      0.1177,      0.4395,      0.8242,      0.4492],
        [     0.0000,      0.3223,     -0.2471,      0.3574,     -0.4746,      0.0869,     -0.0179,      0.0972,      0.7383,      0.4316,      0.0796,      0.1758,     -0.0593,      0.7773,      0.4141]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3464],
        [0.1277],
        [0.2027],
        [0.1789],
        [0.1067],
        [0.0960],
        [0.1939],
        [0.0387],
        [0.0924],
        [0.0563],
        [0.0468],
        [0.0920],
        [0.0236],
        [0.0428]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(
:0.0776 a:0.0420 and:0.0339 and:0.1494os:0.0227,:0.2949 a:0.0393
:0.1416)


------
		( a:0.0420 and:0.0339 and:0.1494os:0.0227,:0.2949 a:0.0393
:0.1416The:0.0947)
The most of the same time, the same time, the same time,
@ 1050 train 5.8016 , allloss: 5.8499, dt: 1674.40ms, fracRes: 0.1389, norm(attn): 0.1240, norm(output): 0.1553, norm(x): 0.1735, norm(y): 0.9962, norm:1.6114, tok/sec: 78279.82, flops:82.16, batch-reuse:1
@ 1051 train 5.7585 , allloss: 5.8084, dt: 1267.22ms, fracRes: 0.1375, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1731, norm(y): 0.9962, norm:1.6401, tok/sec: 103432.48, flops:108.57, batch-reuse:1
@ 1052 train 5.7514 , allloss: 5.7998, dt: 1271.84ms, fracRes: 0.1299, norm(attn): 0.1318, norm(output): 0.1562, norm(x): 0.1720, norm(y): 0.9961, norm:1.1509, tok/sec: 103056.71, flops:108.17, batch-reuse:1
@ 1053 train 5.7808 , allloss: 5.8295, dt: 1253.05ms, fracRes: 0.1281, norm(attn): 0.1338, norm(output): 0.1562, norm(x): 0.1722, norm(y): 0.9960, norm:1.6536, tok/sec: 104602.14, flops:109.79, batch-reuse:1
@ 1054 train 5.7500 , allloss: 5.8001, dt: 1257.74ms, fracRes: 0.1484, norm(attn): 0.1245, norm(output): 0.1553, norm(x): 0.1742, norm(y): 0.9962, norm:1.4214, tok/sec: 104212.08, flops:109.38, batch-reuse:1
@ 1055 train 5.7436 , allloss: 5.7942, dt: 1265.78ms, fracRes: 0.1505, norm(attn): 0.1245, norm(output): 0.1553, norm(x): 0.1740, norm(y): 0.9962, norm:1.3422, tok/sec: 103550.09, flops:108.69, batch-reuse:1
@ 1056 train 5.7535 , allloss: 5.8034, dt: 1260.63ms, fracRes: 0.1370, norm(attn): 0.1328, norm(output): 0.1562, norm(x): 0.1730, norm(y): 0.9961, norm:1.5257, tok/sec: 103973.64, flops:109.13, batch-reuse:1
@ 1057 train 5.7781 , allloss: 5.8289, dt: 1271.08ms, fracRes: 0.1613, norm(attn): 0.1226, norm(output): 0.1553, norm(x): 0.1756, norm(y): 0.9962, norm:1.5134, tok/sec: 103118.34, flops:108.24, batch-reuse:1
@ 1058 train 5.7961 , allloss: 5.8454, dt: 1255.33ms, fracRes: 0.1548, norm(attn): 0.1245, norm(output): 0.1553, norm(x): 0.1745, norm(y): 0.9962, norm:1.1792, tok/sec: 104412.08, flops:109.59, batch-reuse:1
@ 1059 train 5.7701 , allloss: 5.8180, dt: 1281.31ms, fracRes: 0.1390, norm(attn): 0.1318, norm(output): 0.1562, norm(x): 0.1738, norm(y): 0.9960, norm:1.4131, tok/sec: 102295.07, flops:107.37, batch-reuse:1
@ 1060 train 5.8130 , allloss: 5.8604, dt: 1276.05ms, fracRes: 0.1407, norm(attn): 0.1289, norm(output): 0.1562, norm(x): 0.1743, norm(y): 0.9961, norm:1.8118, tok/sec: 102717.18, flops:107.82, batch-reuse:1
@ 1061 train 5.8194 , allloss: 5.8693, dt: 1282.85ms, fracRes: 0.1592, norm(attn): 0.1235, norm(output): 0.1553, norm(x): 0.1766, norm(y): 0.9962, norm:1.4598, tok/sec: 102172.43, flops:107.24, batch-reuse:1
@ 1062 train 5.7504 , allloss: 5.7994, dt: 1261.83ms, fracRes: 0.1326, norm(attn): 0.1328, norm(output): 0.1562, norm(x): 0.1732, norm(y): 0.9961, norm:1.4475, tok/sec: 103874.25, flops:109.03, batch-reuse:1
@ 1063 train 5.7550 , allloss: 5.8047, dt: 1269.82ms, fracRes: 0.1404, norm(attn): 0.1289, norm(output): 0.1553, norm(x): 0.1743, norm(y): 0.9961, norm:1.6496, tok/sec: 103220.93, flops:108.34, batch-reuse:1
@ 1064 train 5.8461 , allloss: 5.8937, dt: 1290.32ms, fracRes: 0.1335, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1732, norm(y): 0.9961, norm:1.6753, tok/sec: 101581.14, flops:106.62, batch-reuse:1
@ 1065 train 5.8445 , allloss: 5.8920, dt: 1271.29ms, fracRes: 0.1321, norm(attn): 0.1299, norm(output): 0.1553, norm(x): 0.1728, norm(y): 0.9961, norm:1.3903, tok/sec: 103101.88, flops:108.22, batch-reuse:1
@ 1066 train 5.8023 , allloss: 5.8506, dt: 1265.37ms, fracRes: 0.1400, norm(attn): 0.1309, norm(output): 0.1553, norm(x): 0.1741, norm(y): 0.9961, norm:1.4268, tok/sec: 103583.67, flops:108.72, batch-reuse:1
@ 1067 train 5.7739 , allloss: 5.8239, dt: 1269.02ms, fracRes: 0.1397, norm(attn): 0.1357, norm(output): 0.1553, norm(x): 0.1737, norm(y): 0.9961, norm:1.3609, tok/sec: 103286.03, flops:108.41, batch-reuse:1
@ 1068 train 5.7618 , allloss: 5.8102, dt: 1293.17ms, fracRes: 0.1326, norm(attn): 0.1387, norm(output): 0.1553, norm(x): 0.1730, norm(y): 0.9960, norm:1.3044, tok/sec: 101356.91, flops:106.39, batch-reuse:1
@ 1069 train 5.7067 , allloss: 5.7546, dt: 1272.30ms, fracRes: 0.1478, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1742, norm(y): 0.9962, norm:1.7575, tok/sec: 103019.67, flops:108.13, batch-reuse:1
@ 1070 train 5.7417 , allloss: 5.7906, dt: 1319.41ms, fracRes: 0.1436, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1735, norm(y): 0.9961, norm:1.6300, tok/sec: 99341.38, flops:104.27, batch-reuse:1
@ 1071 train 5.6500 , allloss: 5.6979, dt: 1297.85ms, fracRes: 0.1248, norm(attn): 0.1328, norm(output): 0.1553, norm(x): 0.1713, norm(y): 0.9960, norm:1.3239, tok/sec: 100992.02, flops:106.00, batch-reuse:1
@ 1072 train 5.7564 , allloss: 5.8045, dt: 1252.59ms, fracRes: 0.1384, norm(attn): 0.1299, norm(output): 0.1553, norm(x): 0.1729, norm(y): 0.9961, norm:1.6135, tok/sec: 104640.97, flops:109.83, batch-reuse:1
@ 1073 train 5.6787 , allloss: 5.7275, dt: 1245.34ms, fracRes: 0.1481, norm(attn): 0.1289, norm(output): 0.1553, norm(x): 0.1740, norm(y): 0.9962, norm:1.6289, tok/sec: 105249.90, flops:110.47, batch-reuse:1
@ 1074 train 5.6647 , allloss: 5.7148, dt: 1277.95ms, fracRes: 0.1556, norm(attn): 0.1270, norm(output): 0.1543, norm(x): 0.1747, norm(y): 0.9962, norm:1.3251, tok/sec: 102564.53, flops:107.66, batch-reuse:1
@ 1075 train 5.7235 , allloss: 5.7726, dt: 1269.99ms, fracRes: 0.1388, norm(attn): 0.1367, norm(output): 0.1553, norm(x): 0.1731, norm(y): 0.9960, norm:1.7050, tok/sec: 103206.71, flops:108.33, batch-reuse:1
@ 1076 train 5.7620 , allloss: 5.8106, dt: 1250.38ms, fracRes: 0.1426, norm(attn): 0.1309, norm(output): 0.1553, norm(x): 0.1735, norm(y): 0.9961, norm:1.2405, tok/sec: 104825.75, flops:110.03, batch-reuse:1
@ 1077 train 5.6778 , allloss: 5.7260, dt: 1268.77ms, fracRes: 0.1554, norm(attn): 0.1270, norm(output): 0.1543, norm(x): 0.1743, norm(y): 0.9961, norm:1.9065, tok/sec: 103306.18, flops:108.43, batch-reuse:1
@ 1078 train 5.9593 , allloss: 6.0094, dt: 1266.92ms, fracRes: 0.1659, norm(attn): 0.1221, norm(output): 0.1543, norm(x): 0.1767, norm(y): 0.9962, norm:2.5750, tok/sec: 103456.94, flops:108.59, batch-reuse:1
@ 1079 train 5.6709 , allloss: 5.7208, dt: 1265.31ms, fracRes: 0.1527, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1749, norm(y): 0.9961, norm:2.1401, tok/sec: 103588.66, flops:108.73, batch-reuse:1
@ 1080 train 5.7605 , allloss: 5.8104, dt: 1253.44ms, fracRes: 0.1412, norm(attn): 0.1309, norm(output): 0.1553, norm(x): 0.1733, norm(y): 0.9961, norm:1.8477, tok/sec: 104569.91, flops:109.76, batch-reuse:1
@ 1081 train 5.7365 , allloss: 5.7857, dt: 1265.29ms, fracRes: 0.1521, norm(attn): 0.1299, norm(output): 0.1553, norm(x): 0.1752, norm(y): 0.9961, norm:1.8135, tok/sec: 103590.34, flops:108.73, batch-reuse:1
@ 1082 train 5.9015 , allloss: 5.9505, dt: 1275.36ms, fracRes: 0.1644, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1780, norm(y): 0.9961, norm:1.6466, tok/sec: 102772.95, flops:107.87, batch-reuse:1
@ 1083 train 5.7145 , allloss: 5.7621, dt: 1269.25ms, fracRes: 0.1494, norm(attn): 0.1328, norm(output): 0.1562, norm(x): 0.1766, norm(y): 0.9959, norm:2.0219, tok/sec: 103266.90, flops:108.39, batch-reuse:1
@ 1084 train 5.6589 , allloss: 5.7062, dt: 1257.40ms, fracRes: 0.1444, norm(attn): 0.1338, norm(output): 0.1562, norm(x): 0.1763, norm(y): 0.9959, norm:1.8749, tok/sec: 104240.12, flops:109.41, batch-reuse:1
@ 1085 train 5.7996 , allloss: 5.8518, dt: 1269.63ms, fracRes: 0.1686, norm(attn): 0.1289, norm(output): 0.1553, norm(x): 0.1796, norm(y): 0.9961, norm:2.1795, tok/sec: 103236.11, flops:108.36, batch-reuse:1
@ 1086 train 5.7367 , allloss: 5.7852, dt: 1273.25ms, fracRes: 0.1538, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1768, norm(y): 0.9960, norm:2.0236, tok/sec: 102943.12, flops:108.05, batch-reuse:1
@ 1087 train 5.6722 , allloss: 5.7217, dt: 1249.90ms, fracRes: 0.1370, norm(attn): 0.1357, norm(output): 0.1562, norm(x): 0.1758, norm(y): 0.9959, norm:1.7106, tok/sec: 104866.28, flops:110.07, batch-reuse:1
@ 1088 train 5.7694 , allloss: 5.8185, dt: 1262.41ms, fracRes: 0.1496, norm(attn): 0.1279, norm(output): 0.1562, norm(x): 0.1766, norm(y): 0.9960, norm:1.5784, tok/sec: 103826.79, flops:108.98, batch-reuse:1
@ 1089 train 5.6862 , allloss: 5.7347, dt: 1259.51ms, fracRes: 0.1477, norm(attn): 0.1299, norm(output): 0.1553, norm(x): 0.1756, norm(y): 0.9961, norm:1.9344, tok/sec: 104066.02, flops:109.23, batch-reuse:1
@ 1090 train 5.6848 , allloss: 5.7330, dt: 1268.17ms, fracRes: 0.1487, norm(attn): 0.1328, norm(output): 0.1553, norm(x): 0.1759, norm(y): 0.9960, norm:1.8087, tok/sec: 103355.63, flops:108.49, batch-reuse:1
@ 1091 train 5.7232 , allloss: 5.7720, dt: 1275.60ms, fracRes: 0.1435, norm(attn): 0.1338, norm(output): 0.1553, norm(x): 0.1753, norm(y): 0.9960, norm:1.6743, tok/sec: 102753.37, flops:107.85, batch-reuse:1
@ 1092 train 5.8291 , allloss: 5.8812, dt: 1251.45ms, fracRes: 0.1479, norm(attn): 0.1338, norm(output): 0.1562, norm(x): 0.1765, norm(y): 0.9960, norm:1.5876, tok/sec: 104735.92, flops:109.93, batch-reuse:1
@ 1093 train 5.6769 , allloss: 5.7254, dt: 1242.60ms, fracRes: 0.1603, norm(attn): 0.1270, norm(output): 0.1562, norm(x): 0.1782, norm(y): 0.9961, norm:1.3108, tok/sec: 105482.42, flops:110.72, batch-reuse:1
@ 1094 train 5.6737 , allloss: 5.7212, dt: 1254.34ms, fracRes: 0.1495, norm(attn): 0.1348, norm(output): 0.1562, norm(x): 0.1780, norm(y): 0.9960, norm:1.8203, tok/sec: 104495.02, flops:109.68, batch-reuse:1
@ 1095 train 5.6578 , allloss: 5.7057, dt: 1261.70ms, fracRes: 0.1596, norm(attn): 0.1279, norm(output): 0.1562, norm(x): 0.1781, norm(y): 0.9960, norm:1.6726, tok/sec: 103885.30, flops:109.04, batch-reuse:1
@ 1096 train 5.7039 , allloss: 5.7518, dt: 1265.42ms, fracRes: 0.1538, norm(attn): 0.1289, norm(output): 0.1562, norm(x): 0.1772, norm(y): 0.9960, norm:1.3668, tok/sec: 103579.73, flops:108.72, batch-reuse:1
@ 1097 train 5.6309 , allloss: 5.6795, dt: 1273.80ms, fracRes: 0.1590, norm(attn): 0.1279, norm(output): 0.1562, norm(x): 0.1783, norm(y): 0.9960, norm:1.8022, tok/sec: 102898.29, flops:108.01, batch-reuse:1
@ 1098 train 5.6427 , allloss: 5.6914, dt: 1252.86ms, fracRes: 0.1521, norm(attn): 0.1318, norm(output): 0.1562, norm(x): 0.1771, norm(y): 0.9960, norm:1.5666, tok/sec: 104617.89, flops:109.81, batch-reuse:1
@ 1099 train 5.7012 , allloss: 5.7508, dt: 1271.04ms, fracRes: 0.1615, norm(attn): 0.1357, norm(output): 0.1553, norm(x): 0.1778, norm(y): 0.9960, norm:1.8873, tok/sec: 103122.24, flops:108.24, batch-reuse:1
@ 1100 train 5.6911 , allloss: 5.7407, dt: 1256.12ms, fracRes: 0.1836, norm(attn): 0.1221, norm(output): 0.1562, norm(x): 0.1807, norm(y): 0.9962, norm:1.6985, tok/sec: 104347.00, flops:109.53, batch-reuse:1
@ 1101 train 5.7977 , allloss: 5.8449, dt: 1276.43ms, fracRes: 0.1614, norm(attn): 0.1270, norm(output): 0.1562, norm(x): 0.1787, norm(y): 0.9960, norm:1.6031, tok/sec: 102686.23, flops:107.78, batch-reuse:1
@ 1102 train 5.7161 , allloss: 5.7635, dt: 1271.11ms, fracRes: 0.1487, norm(attn): 0.1309, norm(output): 0.1562, norm(x): 0.1764, norm(y): 0.9960, norm:1.4835, tok/sec: 103116.30, flops:108.23, batch-reuse:1
@ 1103 train 5.7824 , allloss: 5.8304, dt: 1270.30ms, fracRes: 0.1513, norm(attn): 0.1318, norm(output): 0.1562, norm(x): 0.1766, norm(y): 0.9960, norm:1.5726, tok/sec: 103182.26, flops:108.30, batch-reuse:1
@ 1104 train 5.8541 , allloss: 5.9043, dt: 1277.87ms, fracRes: 0.1627, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.1798, norm(y): 0.9961, norm:1.9487, tok/sec: 102570.98, flops:107.66, batch-reuse:1
@ 1105 train 5.7250 , allloss: 5.7755, dt: 1261.98ms, fracRes: 0.1746, norm(attn): 0.1289, norm(output): 0.1553, norm(x): 0.1803, norm(y): 0.9961, norm:1.5600, tok/sec: 103862.18, flops:109.02, batch-reuse:1
@ 1106 train 5.6821 , allloss: 5.7309, dt: 1273.28ms, fracRes: 0.1665, norm(attn): 0.1328, norm(output): 0.1562, norm(x): 0.1795, norm(y): 0.9961, norm:1.5025, tok/sec: 102940.41, flops:108.05, batch-reuse:1
@ 1107 train 5.8062 , allloss: 5.8563, dt: 1274.38ms, fracRes: 0.1658, norm(attn): 0.1328, norm(output): 0.1562, norm(x): 0.1801, norm(y): 0.9961, norm:1.6043, tok/sec: 102851.89, flops:107.96, batch-reuse:1
@ 1108 train 5.6747 , allloss: 5.7233, dt: 1287.95ms, fracRes: 0.1695, norm(attn): 0.1299, norm(output): 0.1562, norm(x): 0.1809, norm(y): 0.9961, norm:1.6983, tok/sec: 101768.07, flops:106.82, batch-reuse:1
@ 1109 train 5.6925 , allloss: 5.7400, dt: 1251.88ms, fracRes: 0.1613, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1804, norm(y): 0.9960, norm:1.6518, tok/sec: 104700.22, flops:109.90, batch-reuse:1
@ 1110 train 5.7158 , allloss: 5.7626, dt: 1244.30ms, fracRes: 0.1624, norm(attn): 0.1328, norm(output): 0.1562, norm(x): 0.1803, norm(y): 0.9960, norm:1.6779, tok/sec: 105338.05, flops:110.57, batch-reuse:1
@ 1111 train 5.6783 , allloss: 5.7262, dt: 1264.96ms, fracRes: 0.1593, norm(attn): 0.1309, norm(output): 0.1562, norm(x): 0.1798, norm(y): 0.9960, norm:1.5616, tok/sec: 103617.33, flops:108.76, batch-reuse:1
@ 1112 train 5.8218 , allloss: 5.8710, dt: 1263.63ms, fracRes: 0.1560, norm(attn): 0.1348, norm(output): 0.1572, norm(x): 0.1808, norm(y): 0.9959, norm:1.5508, tok/sec: 103726.28, flops:108.87, batch-reuse:1
@ 1113 train 5.8261 , allloss: 5.8764, dt: 1275.21ms, fracRes: 0.1842, norm(attn): 0.1230, norm(output): 0.1562, norm(x): 0.1847, norm(y): 0.9961, norm:1.6381, tok/sec: 102784.26, flops:107.89, batch-reuse:1
@ 1114 train 5.9051 , allloss: 5.9531, dt: 1254.50ms, fracRes: 0.1729, norm(attn): 0.1309, norm(output): 0.1562, norm(x): 0.1821, norm(y): 0.9960, norm:1.9582, tok/sec: 104481.53, flops:109.67, batch-reuse:1
@ 1115 train 5.8746 , allloss: 5.9221, dt: 1272.10ms, fracRes: 0.1761, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1825, norm(y): 0.9961, norm:2.1190, tok/sec: 103035.75, flops:108.15, batch-reuse:1
@ 1116 train 5.7609 , allloss: 5.8087, dt: 1266.09ms, fracRes: 0.1536, norm(attn): 0.1455, norm(output): 0.1582, norm(x): 0.1805, norm(y): 0.9959, norm:1.9490, tok/sec: 103525.07, flops:108.66, batch-reuse:1
@ 1117 train 5.7712 , allloss: 5.8180, dt: 1290.94ms, fracRes: 0.1787, norm(attn): 0.1250, norm(output): 0.1572, norm(x): 0.1841, norm(y): 0.9960, norm:1.6393, tok/sec: 101532.59, flops:106.57, batch-reuse:1
@ 1118 train 5.8851 , allloss: 5.9315, dt: 1258.18ms, fracRes: 0.1785, norm(attn): 0.1250, norm(output): 0.1572, norm(x): 0.1835, norm(y): 0.9960, norm:2.1436, tok/sec: 104175.62, flops:109.35, batch-reuse:1
@ 1119 train 5.8490 , allloss: 5.8951, dt: 1267.93ms, fracRes: 0.1707, norm(attn): 0.1279, norm(output): 0.1572, norm(x): 0.1823, norm(y): 0.9960, norm:1.3755, tok/sec: 103374.83, flops:108.51, batch-reuse:1
@ 1120 train 5.8317 , allloss: 5.8800, dt: 1277.42ms, fracRes: 0.1690, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1831, norm(y): 0.9960, norm:1.5415, tok/sec: 102606.66, flops:107.70, batch-reuse:1
@ 1121 train 5.8868 , allloss: 5.9340, dt: 1248.12ms, fracRes: 0.1827, norm(attn): 0.1260, norm(output): 0.1572, norm(x): 0.1849, norm(y): 0.9961, norm:1.4180, tok/sec: 105015.42, flops:110.23, batch-reuse:1
@ 1122 train 5.8558 , allloss: 5.9021, dt: 1263.49ms, fracRes: 0.1716, norm(attn): 0.1279, norm(output): 0.1572, norm(x): 0.1830, norm(y): 0.9960, norm:1.4992, tok/sec: 103737.81, flops:108.89, batch-reuse:1
@ 1123 train 5.8120 , allloss: 5.8579, dt: 1278.56ms, fracRes: 0.1563, norm(attn): 0.1348, norm(output): 0.1572, norm(x): 0.1809, norm(y): 0.9959, norm:1.6561, tok/sec: 102514.93, flops:107.60, batch-reuse:1
@ 1124 train 5.8107 , allloss: 5.8568, dt: 1273.97ms, fracRes: 0.1597, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1814, norm(y): 0.9960, norm:1.8153, tok/sec: 102884.44, flops:107.99, batch-reuse:1
@ 1125 train 5.8426 , allloss: 5.8902, dt: 1264.91ms, fracRes: 0.1725, norm(attn): 0.1270, norm(output): 0.1572, norm(x): 0.1834, norm(y): 0.9960, norm:1.3861, tok/sec: 103621.95, flops:108.76, batch-reuse:1
@ 1126 train 5.8141 , allloss: 5.8599, dt: 1281.12ms, fracRes: 0.1630, norm(attn): 0.1309, norm(output): 0.1572, norm(x): 0.1819, norm(y): 0.9960, norm:1.2128, tok/sec: 102310.36, flops:107.39, batch-reuse:1
@ 1127 train 5.8007 , allloss: 5.8474, dt: 1263.14ms, fracRes: 0.1621, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1815, norm(y): 0.9959, norm:1.7001, tok/sec: 103766.90, flops:108.92, batch-reuse:1
@ 1128 train 5.8030 , allloss: 5.8498, dt: 1259.11ms, fracRes: 0.1655, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1829, norm(y): 0.9960, norm:2.1889, tok/sec: 104099.30, flops:109.27, batch-reuse:1
@ 1129 train 5.8064 , allloss: 5.8534, dt: 1250.59ms, fracRes: 0.1744, norm(attn): 0.1270, norm(output): 0.1572, norm(x): 0.1835, norm(y): 0.9960, norm:1.3670, tok/sec: 104807.92, flops:110.01, batch-reuse:1
@ 1130 train 5.7819 , allloss: 5.8298, dt: 1266.38ms, fracRes: 0.1668, norm(attn): 0.1309, norm(output): 0.1562, norm(x): 0.1815, norm(y): 0.9960, norm:1.8537, tok/sec: 103501.41, flops:108.64, batch-reuse:1
@ 1131 train 5.8254 , allloss: 5.8726, dt: 1269.99ms, fracRes: 0.1656, norm(attn): 0.1348, norm(output): 0.1572, norm(x): 0.1824, norm(y): 0.9959, norm:1.2313, tok/sec: 103207.17, flops:108.33, batch-reuse:1
@ 1132 train 5.8333 , allloss: 5.8804, dt: 1259.06ms, fracRes: 0.1817, norm(attn): 0.1270, norm(output): 0.1572, norm(x): 0.1851, norm(y): 0.9960, norm:1.8141, tok/sec: 104102.95, flops:109.27, batch-reuse:1
@ 1133 train 5.8365 , allloss: 5.8838, dt: 1275.08ms, fracRes: 0.1820, norm(attn): 0.1299, norm(output): 0.1572, norm(x): 0.1852, norm(y): 0.9960, norm:1.5331, tok/sec: 102794.85, flops:107.90, batch-reuse:1
@ 1134 train 5.7757 , allloss: 5.8236, dt: 1263.30ms, fracRes: 0.1753, norm(attn): 0.1309, norm(output): 0.1562, norm(x): 0.1834, norm(y): 0.9960, norm:1.4800, tok/sec: 103753.45, flops:108.90, batch-reuse:1
@ 1135 train 5.7918 , allloss: 5.8379, dt: 1256.19ms, fracRes: 0.1720, norm(attn): 0.1367, norm(output): 0.1572, norm(x): 0.1826, norm(y): 0.9959, norm:1.3033, tok/sec: 104340.96, flops:109.52, batch-reuse:1
@ 1136 train 5.8315 , allloss: 5.8777, dt: 1258.43ms, fracRes: 0.1954, norm(attn): 0.1289, norm(output): 0.1562, norm(x): 0.1867, norm(y): 0.9961, norm:1.4085, tok/sec: 104155.24, flops:109.32, batch-reuse:1
@ 1137 train 5.8277 , allloss: 5.8744, dt: 1277.83ms, fracRes: 0.1904, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1859, norm(y): 0.9960, norm:1.8337, tok/sec: 102574.02, flops:107.66, batch-reuse:1
@ 1138 train 5.9813 , allloss: 6.0273, dt: 1280.39ms, fracRes: 0.1792, norm(attn): 0.1367, norm(output): 0.1582, norm(x): 0.1861, norm(y): 0.9959, norm:1.6694, tok/sec: 102368.85, flops:107.45, batch-reuse:1
@ 1139 train 5.7740 , allloss: 5.8206, dt: 1248.70ms, fracRes: 0.1860, norm(attn): 0.1289, norm(output): 0.1582, norm(x): 0.1864, norm(y): 0.9960, norm:1.6809, tok/sec: 104966.57, flops:110.18, batch-reuse:1
@ 1140 train 5.8128 , allloss: 5.8596, dt: 1279.31ms, fracRes: 0.1916, norm(attn): 0.1260, norm(output): 0.1562, norm(x): 0.1862, norm(y): 0.9960, norm:1.4411, tok/sec: 102455.33, flops:107.54, batch-reuse:1
@ 1141 train 5.7091 , allloss: 5.7557, dt: 1278.67ms, fracRes: 0.1785, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.1840, norm(y): 0.9959, norm:1.4682, tok/sec: 102506.50, flops:107.59, batch-reuse:1
@ 1142 train 5.7619 , allloss: 5.8078, dt: 1282.13ms, fracRes: 0.1822, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1847, norm(y): 0.9960, norm:1.4090, tok/sec: 102229.77, flops:107.30, batch-reuse:1
@ 1143 train 5.8276 , allloss: 5.8738, dt: 1270.26ms, fracRes: 0.1741, norm(attn): 0.1348, norm(output): 0.1572, norm(x): 0.1844, norm(y): 0.9959, norm:3.1187, tok/sec: 103185.53, flops:108.31, batch-reuse:1
@ 1144 train 5.8256 , allloss: 5.8726, dt: 1281.22ms, fracRes: 0.1797, norm(attn): 0.1348, norm(output): 0.1572, norm(x): 0.1845, norm(y): 0.9959, norm:2.0482, tok/sec: 102302.76, flops:107.38, batch-reuse:1
@ 1145 train 5.8640 , allloss: 5.9107, dt: 1245.14ms, fracRes: 0.1847, norm(attn): 0.1299, norm(output): 0.1582, norm(x): 0.1863, norm(y): 0.9960, norm:1.9625, tok/sec: 105266.65, flops:110.49, batch-reuse:1
@ 1146 train 5.8249 , allloss: 5.8711, dt: 1275.39ms, fracRes: 0.1809, norm(attn): 0.1289, norm(output): 0.1582, norm(x): 0.1858, norm(y): 0.9960, norm:1.7194, tok/sec: 102770.35, flops:107.87, batch-reuse:1
@ 1147 train 5.8075 , allloss: 5.8538, dt: 1248.70ms, fracRes: 0.1867, norm(attn): 0.1309, norm(output): 0.1592, norm(x): 0.1880, norm(y): 0.9959, norm:1.7896, tok/sec: 104966.85, flops:110.18, batch-reuse:1
@ 1148 train 5.7336 , allloss: 5.7824, dt: 1276.52ms, fracRes: 0.1862, norm(attn): 0.1338, norm(output): 0.1582, norm(x): 0.1861, norm(y): 0.9959, norm:1.2928, tok/sec: 102679.54, flops:107.78, batch-reuse:1
@ 1149 train 5.7603 , allloss: 5.8064, dt: 1274.80ms, fracRes: 0.1873, norm(attn): 0.1299, norm(output): 0.1572, norm(x): 0.1861, norm(y): 0.9959, norm:1.6955, tok/sec: 102817.71, flops:107.92, batch-reuse:1
@ 1150 train 5.7986 , allloss: 5.8440, dt: 1272.81ms, fracRes: 0.1841, norm(attn): 0.1309, norm(output): 0.1572, norm(x): 0.1856, norm(y): 0.9959, norm:1.3739, tok/sec: 102978.74, flops:108.09, batch-reuse:1
@ 1151 train 5.8589 , allloss: 5.9056, dt: 1282.14ms, fracRes: 0.1855, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1860, norm(y): 0.9959, norm:1.6711, tok/sec: 102229.33, flops:107.30, batch-reuse:1
@ 1152 train 5.7643 , allloss: 5.8092, dt: 1269.12ms, fracRes: 0.1944, norm(attn): 0.1299, norm(output): 0.1572, norm(x): 0.1883, norm(y): 0.9959, norm:1.8884, tok/sec: 103278.10, flops:108.40, batch-reuse:1
@ 1153 train 5.7806 , allloss: 5.8272, dt: 1257.99ms, fracRes: 0.1962, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1881, norm(y): 0.9959, norm:2.0614, tok/sec: 104191.40, flops:109.36, batch-reuse:1
@ 1154 train 5.7698 , allloss: 5.8158, dt: 1276.10ms, fracRes: 0.2011, norm(attn): 0.1299, norm(output): 0.1572, norm(x): 0.1881, norm(y): 0.9960, norm:1.5082, tok/sec: 102713.31, flops:107.81, batch-reuse:1
@ 1155 train 5.7385 , allloss: 5.7834, dt: 1285.57ms, fracRes: 0.1943, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1877, norm(y): 0.9959, norm:1.9066, tok/sec: 101956.00, flops:107.02, batch-reuse:1
@ 1156 train 5.8067 , allloss: 5.8538, dt: 1247.27ms, fracRes: 0.1942, norm(attn): 0.1348, norm(output): 0.1582, norm(x): 0.1886, norm(y): 0.9958, norm:1.4789, tok/sec: 105087.06, flops:110.30, batch-reuse:1
@ 1157 train 5.7548 , allloss: 5.8012, dt: 1264.25ms, fracRes: 0.2028, norm(attn): 0.1270, norm(output): 0.1572, norm(x): 0.1891, norm(y): 0.9960, norm:1.7289, tok/sec: 103675.65, flops:108.82, batch-reuse:1
@ 1158 train 5.7447 , allloss: 5.7912, dt: 1294.87ms, fracRes: 0.1951, norm(attn): 0.1309, norm(output): 0.1572, norm(x): 0.1880, norm(y): 0.9959, norm:1.3533, tok/sec: 101223.88, flops:106.25, batch-reuse:1
@ 1159 train 5.7919 , allloss: 5.8402, dt: 1269.08ms, fracRes: 0.1789, norm(attn): 0.1455, norm(output): 0.1611, norm(x): 0.1879, norm(y): 0.9958, norm:1.9554, tok/sec: 103281.32, flops:108.41, batch-reuse:1
@ 1160 train 5.7907 , allloss: 5.8377, dt: 1252.91ms, fracRes: 0.2055, norm(attn): 0.1250, norm(output): 0.1572, norm(x): 0.1903, norm(y): 0.9960, norm:1.3341, tok/sec: 104614.29, flops:109.81, batch-reuse:1
@ 1161 train 5.6831 , allloss: 5.7283, dt: 1264.97ms, fracRes: 0.1954, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.1890, norm(y): 0.9959, norm:2.3284, tok/sec: 103616.94, flops:108.76, batch-reuse:1
@ 1162 train 5.6219 , allloss: 5.6675, dt: 1264.15ms, fracRes: 0.1968, norm(attn): 0.1299, norm(output): 0.1582, norm(x): 0.1889, norm(y): 0.9959, norm:1.6120, tok/sec: 103683.52, flops:108.83, batch-reuse:1
@ 1163 train 5.7885 , allloss: 5.8393, dt: 1283.91ms, fracRes: 0.2126, norm(attn): 0.1250, norm(output): 0.1572, norm(x): 0.1911, norm(y): 0.9961, norm:2.0173, tok/sec: 102088.38, flops:107.16, batch-reuse:1
@ 1164 train 5.7261 , allloss: 5.7742, dt: 1279.95ms, fracRes: 0.1940, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1876, norm(y): 0.9960, norm:1.4889, tok/sec: 102404.39, flops:107.49, batch-reuse:1
@ 1165 train 5.7741 , allloss: 5.8217, dt: 1257.86ms, fracRes: 0.1915, norm(attn): 0.1387, norm(output): 0.1572, norm(x): 0.1877, norm(y): 0.9960, norm:1.6327, tok/sec: 104202.74, flops:109.37, batch-reuse:1
@ 1166 train 5.7333 , allloss: 5.7796, dt: 1275.15ms, fracRes: 0.1868, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.1866, norm(y): 0.9960, norm:1.4284, tok/sec: 102789.41, flops:107.89, batch-reuse:1
@ 1167 train 5.6866 , allloss: 5.7341, dt: 1289.95ms, fracRes: 0.1870, norm(attn): 0.1367, norm(output): 0.1572, norm(x): 0.1866, norm(y): 0.9959, norm:1.5329, tok/sec: 101610.04, flops:106.65, batch-reuse:1
@ 1168 train 5.6132 , allloss: 5.6591, dt: 1307.02ms, fracRes: 0.1851, norm(attn): 0.1396, norm(output): 0.1582, norm(x): 0.1866, norm(y): 0.9959, norm:1.8302, tok/sec: 100283.38, flops:105.26, batch-reuse:1
@ 1169 train 5.7178 , allloss: 5.7656, dt: 1278.99ms, fracRes: 0.2269, norm(attn): 0.1240, norm(output): 0.1562, norm(x): 0.1921, norm(y): 0.9961, norm:1.4134, tok/sec: 102480.48, flops:107.57, batch-reuse:1
@ 1170 train 5.6940 , allloss: 5.7416, dt: 1256.79ms, fracRes: 0.2161, norm(attn): 0.1318, norm(output): 0.1562, norm(x): 0.1890, norm(y): 0.9960, norm:2.0820, tok/sec: 104290.88, flops:109.47, batch-reuse:1
@ 1171 train 5.6746 , allloss: 5.7201, dt: 1264.95ms, fracRes: 0.1950, norm(attn): 0.1406, norm(output): 0.1572, norm(x): 0.1865, norm(y): 0.9959, norm:1.4798, tok/sec: 103618.01, flops:108.76, batch-reuse:1
@ 1172 train 5.7934 , allloss: 5.8393, dt: 1275.86ms, fracRes: 0.2113, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1895, norm(y): 0.9960, norm:1.7303, tok/sec: 102732.02, flops:107.83, batch-reuse:1
@ 1173 train 5.6955 , allloss: 5.7418, dt: 1264.47ms, fracRes: 0.2157, norm(attn): 0.1309, norm(output): 0.1572, norm(x): 0.1904, norm(y): 0.9960, norm:1.6829, tok/sec: 103657.87, flops:108.80, batch-reuse:1
@ 1174 train 5.6376 , allloss: 5.6832, dt: 1275.24ms, fracRes: 0.2074, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1892, norm(y): 0.9960, norm:1.5500, tok/sec: 102782.19, flops:107.88, batch-reuse:1
@ 1175 train 5.7552 , allloss: 5.8029, dt: 1274.10ms, fracRes: 0.1954, norm(attn): 0.1367, norm(output): 0.1572, norm(x): 0.1886, norm(y): 0.9959, norm:1.1491, tok/sec: 102874.57, flops:107.98, batch-reuse:1
@ 1176 train 5.7400 , allloss: 5.7880, dt: 1309.21ms, fracRes: 0.2055, norm(attn): 0.1338, norm(output): 0.1572, norm(x): 0.1906, norm(y): 0.9959, norm:1.5198, tok/sec: 100115.37, flops:105.08, batch-reuse:1
@ 1177 train 5.7288 , allloss: 5.7775, dt: 1297.54ms, fracRes: 0.2041, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1901, norm(y): 0.9959, norm:1.4089, tok/sec: 101015.74, flops:106.03, batch-reuse:1
@ 1178 train 5.8497 , allloss: 5.8952, dt: 1267.52ms, fracRes: 0.2018, norm(attn): 0.1348, norm(output): 0.1582, norm(x): 0.1906, norm(y): 0.9958, norm:1.3228, tok/sec: 103408.23, flops:108.54, batch-reuse:1
@ 1179 train 5.7693 , allloss: 5.8157, dt: 1252.37ms, fracRes: 0.2096, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1909, norm(y): 0.9959, norm:1.4678, tok/sec: 104659.57, flops:109.85, batch-reuse:1
@ 1180 train 5.7467 , allloss: 5.7924, dt: 1262.22ms, fracRes: 0.2105, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1908, norm(y): 0.9959, norm:1.8234, tok/sec: 103842.60, flops:109.00, batch-reuse:1
@ 1181 train 5.6780 , allloss: 5.7248, dt: 1252.61ms, fracRes: 0.2080, norm(attn): 0.1338, norm(output): 0.1572, norm(x): 0.1898, norm(y): 0.9959, norm:1.4926, tok/sec: 104638.88, flops:109.83, batch-reuse:1
@ 1182 train 5.7238 , allloss: 5.7724, dt: 1283.20ms, fracRes: 0.2100, norm(attn): 0.1377, norm(output): 0.1572, norm(x): 0.1919, norm(y): 0.9959, norm:1.6935, tok/sec: 102144.67, flops:107.21, batch-reuse:1
@ 1183 train 5.7349 , allloss: 5.7820, dt: 1252.65ms, fracRes: 0.2121, norm(attn): 0.1328, norm(output): 0.1562, norm(x): 0.1906, norm(y): 0.9959, norm:1.7440, tok/sec: 104635.47, flops:109.83, batch-reuse:1
@ 1184 train 5.6984 , allloss: 5.7436, dt: 1260.35ms, fracRes: 0.2119, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1914, norm(y): 0.9959, norm:1.6534, tok/sec: 103996.71, flops:109.16, batch-reuse:1
@ 1185 train 5.7188 , allloss: 5.7669, dt: 1259.20ms, fracRes: 0.2190, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.1932, norm(y): 0.9959, norm:1.5646, tok/sec: 104091.77, flops:109.26, batch-reuse:1
@ 1186 train 5.7232 , allloss: 5.7707, dt: 1269.76ms, fracRes: 0.2121, norm(attn): 0.1387, norm(output): 0.1572, norm(x): 0.1922, norm(y): 0.9958, norm:1.4432, tok/sec: 103225.64, flops:108.35, batch-reuse:1
@ 1187 train 5.7054 , allloss: 5.7520, dt: 1279.20ms, fracRes: 0.2252, norm(attn): 0.1299, norm(output): 0.1572, norm(x): 0.1933, norm(y): 0.9959, norm:1.2041, tok/sec: 102464.22, flops:107.55, batch-reuse:1
@ 1188 train 5.6246 , allloss: 5.6704, dt: 1264.73ms, fracRes: 0.2115, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1902, norm(y): 0.9959, norm:1.5000, tok/sec: 103636.49, flops:108.78, batch-reuse:1
@ 1189 train 5.6488 , allloss: 5.6944, dt: 1253.26ms, fracRes: 0.2051, norm(attn): 0.1387, norm(output): 0.1582, norm(x): 0.1907, norm(y): 0.9958, norm:1.4979, tok/sec: 104585.13, flops:109.78, batch-reuse:1
@ 1190 train 5.7523 , allloss: 5.8006, dt: 1246.15ms, fracRes: 0.2151, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1924, norm(y): 0.9959, norm:1.7437, tok/sec: 105181.86, flops:110.40, batch-reuse:1
@ 1191 train 5.8267 , allloss: 5.8741, dt: 1263.42ms, fracRes: 0.2127, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1915, norm(y): 0.9959, norm:1.6689, tok/sec: 103743.64, flops:108.89, batch-reuse:1
@ 1192 train 5.6606 , allloss: 5.7055, dt: 1275.34ms, fracRes: 0.2001, norm(attn): 0.1348, norm(output): 0.1572, norm(x): 0.1899, norm(y): 0.9959, norm:1.5904, tok/sec: 102774.52, flops:107.88, batch-reuse:1
@ 1193 train 5.7224 , allloss: 5.7676, dt: 1293.84ms, fracRes: 0.2003, norm(attn): 0.1387, norm(output): 0.1572, norm(x): 0.1898, norm(y): 0.9958, norm:1.6799, tok/sec: 101304.61, flops:106.33, batch-reuse:1
@ 1194 train 5.7260 , allloss: 5.7732, dt: 1303.44ms, fracRes: 0.2094, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1907, norm(y): 0.9960, norm:1.6122, tok/sec: 100558.33, flops:105.55, batch-reuse:1
@ 1195 train 5.6941 , allloss: 5.7389, dt: 1316.02ms, fracRes: 0.2129, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1916, norm(y): 0.9959, norm:1.5989, tok/sec: 99597.02, flops:104.54, batch-reuse:1
@ 1196 train 5.7110 , allloss: 5.7581, dt: 1312.40ms, fracRes: 0.2072, norm(attn): 0.1377, norm(output): 0.1572, norm(x): 0.1914, norm(y): 0.9958, norm:1.5307, tok/sec: 99872.24, flops:104.83, batch-reuse:1
@ 1197 train 5.6508 , allloss: 5.6990, dt: 1289.26ms, fracRes: 0.2008, norm(attn): 0.1406, norm(output): 0.1582, norm(x): 0.1909, norm(y): 0.9958, norm:1.3772, tok/sec: 101664.49, flops:106.71, batch-reuse:1
@ 1198 train 5.6672 , allloss: 5.7138, dt: 1247.14ms, fracRes: 0.2140, norm(attn): 0.1289, norm(output): 0.1572, norm(x): 0.1929, norm(y): 0.9959, norm:1.5338, tok/sec: 105098.21, flops:110.31, batch-reuse:1
@ 1199 train 5.7095 , allloss: 5.7556, dt: 1273.77ms, fracRes: 0.2110, norm(attn): 0.1309, norm(output): 0.1572, norm(x): 0.1924, norm(y): 0.9959, norm:1.4491, tok/sec: 102900.73, flops:108.01, batch-reuse:1
@ 1200 train 5.6906 , allloss: 5.7391, dt: 1255.37ms, fracRes: 0.2086, norm(attn): 0.1377, norm(output): 0.1572, norm(x): 0.1920, norm(y): 0.9958, norm:1.6240, tok/sec: 104409.13, flops:109.59, batch-reuse:1
@ 1201 train 5.7017 , allloss: 5.7474, dt: 1281.57ms, fracRes: 0.2141, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1930, norm(y): 0.9959, norm:1.8240, tok/sec: 102274.56, flops:107.35, batch-reuse:1
@ 1202 train 5.7284 , allloss: 5.7738, dt: 1265.01ms, fracRes: 0.2198, norm(attn): 0.1289, norm(output): 0.1572, norm(x): 0.1938, norm(y): 0.9959, norm:1.6733, tok/sec: 103613.63, flops:108.76, batch-reuse:1
@ 1203 train 6.0161 , allloss: 6.0612, dt: 1286.77ms, fracRes: 0.2199, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1941, norm(y): 0.9959, norm:1.5143, tok/sec: 101861.24, flops:106.92, batch-reuse:1
@ 1204 train 5.6848 , allloss: 5.7299, dt: 1255.99ms, fracRes: 0.2148, norm(attn): 0.1348, norm(output): 0.1572, norm(x): 0.1929, norm(y): 0.9959, norm:2.1872, tok/sec: 104357.24, flops:109.54, batch-reuse:1
@ 1205 train 5.6328 , allloss: 5.6796, dt: 1255.32ms, fracRes: 0.2119, norm(attn): 0.1387, norm(output): 0.1582, norm(x): 0.1927, norm(y): 0.9958, norm:1.9526, tok/sec: 104413.17, flops:109.60, batch-reuse:1
@ 1206 train 5.6356 , allloss: 5.6818, dt: 1263.66ms, fracRes: 0.2246, norm(attn): 0.1299, norm(output): 0.1572, norm(x): 0.1939, norm(y): 0.9959, norm:1.4409, tok/sec: 103723.85, flops:108.87, batch-reuse:1
@ 1207 train 5.6394 , allloss: 5.6862, dt: 1285.27ms, fracRes: 0.2268, norm(attn): 0.1309, norm(output): 0.1572, norm(x): 0.1949, norm(y): 0.9959, norm:1.6243, tok/sec: 101980.04, flops:107.04, batch-reuse:1
@ 1208 train 5.5972 , allloss: 5.6432, dt: 1255.93ms, fracRes: 0.2230, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1946, norm(y): 0.9959, norm:1.5043, tok/sec: 104362.45, flops:109.54, batch-reuse:1
@ 1209 train 5.6734 , allloss: 5.7178, dt: 1243.89ms, fracRes: 0.2152, norm(attn): 0.1377, norm(output): 0.1602, norm(x): 0.1947, norm(y): 0.9957, norm:1.2507, tok/sec: 105372.42, flops:110.60, batch-reuse:1
@ 1210 train 5.6061 , allloss: 5.6526, dt: 1259.22ms, fracRes: 0.2257, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1954, norm(y): 0.9959, norm:1.5411, tok/sec: 104089.55, flops:109.26, batch-reuse:1
@ 1211 train 5.6811 , allloss: 5.7264, dt: 1265.90ms, fracRes: 0.2215, norm(attn): 0.1338, norm(output): 0.1582, norm(x): 0.1950, norm(y): 0.9958, norm:1.2885, tok/sec: 103540.67, flops:108.68, batch-reuse:1
@ 1212 train 5.7362 , allloss: 5.7816, dt: 1266.15ms, fracRes: 0.2202, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.1942, norm(y): 0.9958, norm:1.5822, tok/sec: 103520.06, flops:108.66, batch-reuse:1
@ 1213 train 5.5965 , allloss: 5.6450, dt: 1279.70ms, fracRes: 0.2303, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1945, norm(y): 0.9959, norm:1.6958, tok/sec: 102423.91, flops:107.51, batch-reuse:1
@ 1214 train 5.6182 , allloss: 5.6642, dt: 1276.00ms, fracRes: 0.2311, norm(attn): 0.1299, norm(output): 0.1572, norm(x): 0.1960, norm(y): 0.9959, norm:1.2785, tok/sec: 102720.85, flops:107.82, batch-reuse:1
@ 1215 train 5.6571 , allloss: 5.7023, dt: 1265.18ms, fracRes: 0.2157, norm(attn): 0.1377, norm(output): 0.1582, norm(x): 0.1938, norm(y): 0.9958, norm:1.5311, tok/sec: 103599.09, flops:108.74, batch-reuse:1
@ 1216 train 5.6332 , allloss: 5.6781, dt: 1268.00ms, fracRes: 0.2215, norm(attn): 0.1338, norm(output): 0.1572, norm(x): 0.1949, norm(y): 0.9958, norm:1.8363, tok/sec: 103369.23, flops:108.50, batch-reuse:1
@ 1217 train 5.6581 , allloss: 5.7045, dt: 1268.68ms, fracRes: 0.2312, norm(attn): 0.1270, norm(output): 0.1572, norm(x): 0.1960, norm(y): 0.9959, norm:1.5302, tok/sec: 103314.02, flops:108.44, batch-reuse:1
@ 1218 train 5.5927 , allloss: 5.6401, dt: 1279.71ms, fracRes: 0.2203, norm(attn): 0.1367, norm(output): 0.1592, norm(x): 0.1960, norm(y): 0.9958, norm:1.7778, tok/sec: 102423.03, flops:107.51, batch-reuse:1
@ 1219 train 5.5644 , allloss: 5.6105, dt: 1287.98ms, fracRes: 0.2152, norm(attn): 0.1396, norm(output): 0.1572, norm(x): 0.1933, norm(y): 0.9958, norm:1.6103, tok/sec: 101765.25, flops:106.82, batch-reuse:1
@ 1220 train 5.6439 , allloss: 5.6868, dt: 1256.37ms, fracRes: 0.2225, norm(attn): 0.1309, norm(output): 0.1592, norm(x): 0.1956, norm(y): 0.9958, norm:1.7846, tok/sec: 104326.27, flops:109.50, batch-reuse:1
@ 1221 train 5.6094 , allloss: 5.6542, dt: 1311.64ms, fracRes: 0.2266, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.1964, norm(y): 0.9958, norm:2.2755, tok/sec: 99929.71, flops:104.89, batch-reuse:1
@ 1222 train 5.6171 , allloss: 5.6616, dt: 1268.79ms, fracRes: 0.2289, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.1970, norm(y): 0.9958, norm:1.6626, tok/sec: 103304.63, flops:108.43, batch-reuse:1
@ 1223 train 5.5787 , allloss: 5.6251, dt: 1258.59ms, fracRes: 0.2254, norm(attn): 0.1357, norm(output): 0.1592, norm(x): 0.1981, norm(y): 0.9958, norm:1.6686, tok/sec: 104141.62, flops:109.31, batch-reuse:1
@ 1224 train 5.5562 , allloss: 5.6016, dt: 1276.14ms, fracRes: 0.2239, norm(attn): 0.1348, norm(output): 0.1582, norm(x): 0.1959, norm(y): 0.9958, norm:1.4860, tok/sec: 102709.41, flops:107.81, batch-reuse:1
@ 1225 train 5.5860 , allloss: 5.6319, dt: 1261.90ms, fracRes: 0.2228, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.1962, norm(y): 0.9958, norm:1.5512, tok/sec: 103868.83, flops:109.02, batch-reuse:1
@ 1226 train 5.6733 , allloss: 5.7176, dt: 1275.47ms, fracRes: 0.2168, norm(attn): 0.1387, norm(output): 0.1582, norm(x): 0.1957, norm(y): 0.9957, norm:1.7686, tok/sec: 102763.46, flops:107.86, batch-reuse:1
@ 1227 train 5.6081 , allloss: 5.6524, dt: 1295.36ms, fracRes: 0.2162, norm(attn): 0.1387, norm(output): 0.1592, norm(x): 0.1950, norm(y): 0.9958, norm:1.6096, tok/sec: 101185.52, flops:106.21, batch-reuse:1
@ 1228 train 5.5767 , allloss: 5.6215, dt: 1297.90ms, fracRes: 0.2243, norm(attn): 0.1299, norm(output): 0.1572, norm(x): 0.1954, norm(y): 0.9959, norm:1.5224, tok/sec: 100987.44, flops:106.00, batch-reuse:1
@ 1229 train 5.6010 , allloss: 5.6467, dt: 1283.93ms, fracRes: 0.2224, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.1963, norm(y): 0.9958, norm:1.4878, tok/sec: 102086.39, flops:107.15, batch-reuse:1
@ 1230 train 5.6145 , allloss: 5.6608, dt: 1312.23ms, fracRes: 0.2192, norm(attn): 0.1377, norm(output): 0.1582, norm(x): 0.1954, norm(y): 0.9958, norm:1.3771, tok/sec: 99884.87, flops:104.84, batch-reuse:1
@ 1231 train 5.5878 , allloss: 5.6339, dt: 1292.04ms, fracRes: 0.2242, norm(attn): 0.1377, norm(output): 0.1592, norm(x): 0.1969, norm(y): 0.9958, norm:1.5717, tok/sec: 101446.16, flops:106.48, batch-reuse:1
@ 1232 train 5.5590 , allloss: 5.6028, dt: 1271.18ms, fracRes: 0.2302, norm(attn): 0.1318, norm(output): 0.1572, norm(x): 0.1977, norm(y): 0.9959, norm:1.1336, tok/sec: 103110.15, flops:108.23, batch-reuse:1
@ 1233 train 5.5592 , allloss: 5.6042, dt: 1282.62ms, fracRes: 0.2235, norm(attn): 0.1377, norm(output): 0.1582, norm(x): 0.1966, norm(y): 0.9958, norm:1.3857, tok/sec: 102190.62, flops:107.26, batch-reuse:1
@ 1234 train 5.6004 , allloss: 5.6446, dt: 1264.43ms, fracRes: 0.2263, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1969, norm(y): 0.9959, norm:1.6795, tok/sec: 103661.34, flops:108.81, batch-reuse:1
@ 1235 train 5.6383 , allloss: 5.6825, dt: 1301.54ms, fracRes: 0.2219, norm(attn): 0.1377, norm(output): 0.1572, norm(x): 0.1963, norm(y): 0.9958, norm:1.1542, tok/sec: 100705.18, flops:105.70, batch-reuse:1
@ 1236 train 5.5717 , allloss: 5.6178, dt: 1261.62ms, fracRes: 0.2258, norm(attn): 0.1387, norm(output): 0.1572, norm(x): 0.1974, norm(y): 0.9958, norm:1.7835, tok/sec: 103892.03, flops:109.05, batch-reuse:1
@ 1237 train 5.6138 , allloss: 5.6604, dt: 1247.67ms, fracRes: 0.2222, norm(attn): 0.1377, norm(output): 0.1572, norm(x): 0.1966, norm(y): 0.9958, norm:1.6432, tok/sec: 105053.81, flops:110.27, batch-reuse:1
@ 1238 train 5.5769 , allloss: 5.6221, dt: 1282.51ms, fracRes: 0.2150, norm(attn): 0.1406, norm(output): 0.1582, norm(x): 0.1953, norm(y): 0.9958, norm:1.7397, tok/sec: 102199.63, flops:107.27, batch-reuse:1
@ 1239 train 5.5266 , allloss: 5.5734, dt: 1313.47ms, fracRes: 0.2234, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.1967, norm(y): 0.9958, norm:1.6900, tok/sec: 99790.69, flops:104.74, batch-reuse:1
@ 1240 train 5.5382 , allloss: 5.5849, dt: 1270.10ms, fracRes: 0.2219, norm(attn): 0.1387, norm(output): 0.1572, norm(x): 0.1956, norm(y): 0.9958, norm:1.4771, tok/sec: 103198.16, flops:108.32, batch-reuse:1
@ 1241 train 5.5326 , allloss: 5.5774, dt: 1255.41ms, fracRes: 0.2216, norm(attn): 0.1387, norm(output): 0.1572, norm(x): 0.1953, norm(y): 0.9958, norm:1.6509, tok/sec: 104405.46, flops:109.59, batch-reuse:1
@ 1242 train 5.5820 , allloss: 5.6269, dt: 1262.79ms, fracRes: 0.2239, norm(attn): 0.1406, norm(output): 0.1572, norm(x): 0.1965, norm(y): 0.9958, norm:1.6248, tok/sec: 103795.88, flops:108.95, batch-reuse:1
@ 1243 train 5.5850 , allloss: 5.6295, dt: 1305.16ms, fracRes: 0.2295, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.1975, norm(y): 0.9958, norm:1.1895, tok/sec: 100426.14, flops:105.41, batch-reuse:1
@ 1244 train 5.5992 , allloss: 5.6430, dt: 1272.90ms, fracRes: 0.2253, norm(attn): 0.1396, norm(output): 0.1582, norm(x): 0.1967, norm(y): 0.9957, norm:1.7787, tok/sec: 102971.33, flops:108.08, batch-reuse:1
@ 1245 train 5.5766 , allloss: 5.6206, dt: 1281.89ms, fracRes: 0.2420, norm(attn): 0.1299, norm(output): 0.1572, norm(x): 0.1983, norm(y): 0.9959, norm:1.7780, tok/sec: 102248.63, flops:107.32, batch-reuse:1
@ 1246 train 5.5861 , allloss: 5.6306, dt: 1275.66ms, fracRes: 0.2358, norm(attn): 0.1348, norm(output): 0.1582, norm(x): 0.1980, norm(y): 0.9958, norm:1.7386, tok/sec: 102748.17, flops:107.85, batch-reuse:1
@ 1247 train 5.5116 , allloss: 5.5562, dt: 1282.35ms, fracRes: 0.2273, norm(attn): 0.1436, norm(output): 0.1582, norm(x): 0.1973, norm(y): 0.9957, norm:1.9303, tok/sec: 102212.19, flops:107.29, batch-reuse:1
@ 1248 train 5.6096 , allloss: 5.6537, dt: 1306.37ms, fracRes: 0.2362, norm(attn): 0.1328, norm(output): 0.1572, norm(x): 0.1981, norm(y): 0.9958, norm:1.7424, tok/sec: 100332.65, flops:105.31, batch-reuse:1
@ 1249 train 5.5029 , allloss: 5.5470, dt: 1269.54ms, fracRes: 0.2452, norm(attn): 0.1289, norm(output): 0.1572, norm(x): 0.2000, norm(y): 0.9959, norm:1.5510, tok/sec: 103243.40, flops:108.37, batch-reuse:1
@ 1250 train 5.5993 , allloss: 5.6452, dt: 1259.50ms, fracRes: 0.2400, norm(attn): 0.1367, norm(output): 0.1582, norm(x): 0.1999, norm(y): 0.9958, norm:1.1975, tok/sec: 104066.57, flops:109.23, batch-reuse:1
@ 1251 train 5.5467 , allloss: 5.5918, dt: 1263.47ms, fracRes: 0.2295, norm(attn): 0.1406, norm(output): 0.1582, norm(x): 0.1985, norm(y): 0.9957, norm:1.5571, tok/sec: 103739.37, flops:108.89, batch-reuse:1
@ 1252 train 5.5648 , allloss: 5.6112, dt: 1262.39ms, fracRes: 0.2342, norm(attn): 0.1377, norm(output): 0.1582, norm(x): 0.1998, norm(y): 0.9958, norm:1.5797, tok/sec: 103828.81, flops:108.98, batch-reuse:1
@ 1253 train 5.4565 , allloss: 5.5026, dt: 1272.50ms, fracRes: 0.2360, norm(attn): 0.1338, norm(output): 0.1572, norm(x): 0.1995, norm(y): 0.9958, norm:1.7619, tok/sec: 103003.84, flops:108.12, batch-reuse:1
@ 1254 train 5.5381 , allloss: 5.5835, dt: 1311.40ms, fracRes: 0.2340, norm(attn): 0.1387, norm(output): 0.1572, norm(x): 0.1988, norm(y): 0.9958, norm:1.5251, tok/sec: 99948.30, flops:104.91, batch-reuse:1
@ 1255 train 5.5745 , allloss: 5.6209, dt: 1283.03ms, fracRes: 0.2320, norm(attn): 0.1396, norm(output): 0.1582, norm(x): 0.1996, norm(y): 0.9958, norm:1.5514, tok/sec: 102158.51, flops:107.23, batch-reuse:1
@ 1256 train 5.4971 , allloss: 5.5421, dt: 1268.18ms, fracRes: 0.2379, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.2006, norm(y): 0.9958, norm:1.7039, tok/sec: 103354.23, flops:108.48, batch-reuse:1
@ 1257 train 5.5607 , allloss: 5.6071, dt: 1256.05ms, fracRes: 0.2372, norm(attn): 0.1338, norm(output): 0.1572, norm(x): 0.1995, norm(y): 0.9958, norm:1.6870, tok/sec: 104352.68, flops:109.53, batch-reuse:1
@ 1258 train 5.5054 , allloss: 5.5514, dt: 1294.72ms, fracRes: 0.2242, norm(attn): 0.1445, norm(output): 0.1592, norm(x): 0.1984, norm(y): 0.9957, norm:1.5991, tok/sec: 101235.81, flops:106.26, batch-reuse:1
@ 1259 train 5.5452 , allloss: 5.5888, dt: 1259.41ms, fracRes: 0.2338, norm(attn): 0.1338, norm(output): 0.1582, norm(x): 0.1995, norm(y): 0.9958, norm:1.4282, tok/sec: 104073.82, flops:109.24, batch-reuse:1
@ 1260 train 5.4885 , allloss: 5.5328, dt: 1294.35ms, fracRes: 0.2357, norm(attn): 0.1338, norm(output): 0.1572, norm(x): 0.1994, norm(y): 0.9958, norm:2.1300, tok/sec: 101264.44, flops:106.29, batch-reuse:1
@ 1261 train 5.5058 , allloss: 5.5514, dt: 1243.26ms, fracRes: 0.2366, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.1998, norm(y): 0.9958, norm:1.6703, tok/sec: 105425.74, flops:110.66, batch-reuse:1
@ 1262 train 5.5027 , allloss: 5.5517, dt: 1257.32ms, fracRes: 0.2278, norm(attn): 0.1416, norm(output): 0.1592, norm(x): 0.1989, norm(y): 0.9957, norm:2.1055, tok/sec: 104246.90, flops:109.42, batch-reuse:1
@ 1263 train 5.4886 , allloss: 5.5345, dt: 1280.94ms, fracRes: 0.2378, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.2003, norm(y): 0.9958, norm:1.3549, tok/sec: 102324.98, flops:107.40, batch-reuse:1
@ 1264 train 5.5965 , allloss: 5.6412, dt: 1268.20ms, fracRes: 0.2382, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.2002, norm(y): 0.9958, norm:1.4891, tok/sec: 103353.08, flops:108.48, batch-reuse:1
@ 1265 train 5.5090 , allloss: 5.5529, dt: 1242.48ms, fracRes: 0.2315, norm(attn): 0.1396, norm(output): 0.1582, norm(x): 0.1986, norm(y): 0.9957, norm:1.7018, tok/sec: 105492.10, flops:110.73, batch-reuse:1
@ 1266 train 5.5288 , allloss: 5.5726, dt: 1262.85ms, fracRes: 0.2391, norm(attn): 0.1367, norm(output): 0.1572, norm(x): 0.1999, norm(y): 0.9958, norm:1.7295, tok/sec: 103790.28, flops:108.94, batch-reuse:1
@ 1267 train 5.5623 , allloss: 5.6077, dt: 1257.42ms, fracRes: 0.2346, norm(attn): 0.1396, norm(output): 0.1602, norm(x): 0.2004, norm(y): 0.9957, norm:1.6337, tok/sec: 104239.25, flops:109.41, batch-reuse:1
@ 1268 train 5.5620 , allloss: 5.6068, dt: 1258.99ms, fracRes: 0.2440, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.2024, norm(y): 0.9958, norm:1.6567, tok/sec: 104108.49, flops:109.28, batch-reuse:1
@ 1269 train 5.5284 , allloss: 5.5732, dt: 1288.52ms, fracRes: 0.2402, norm(attn): 0.1357, norm(output): 0.1572, norm(x): 0.2014, norm(y): 0.9957, norm:1.5776, tok/sec: 101722.86, flops:106.77, batch-reuse:1
@ 1270 train 5.4553 , allloss: 5.4979, dt: 1257.95ms, fracRes: 0.2408, norm(attn): 0.1338, norm(output): 0.1592, norm(x): 0.2028, norm(y): 0.9957, norm:1.5157, tok/sec: 104194.54, flops:109.37, batch-reuse:1
@ 1271 train 5.4660 , allloss: 5.5093, dt: 1262.06ms, fracRes: 0.2345, norm(attn): 0.1387, norm(output): 0.1602, norm(x): 0.2012, norm(y): 0.9957, norm:1.7123, tok/sec: 103855.51, flops:109.01, batch-reuse:1
@ 1272 train 5.4746 , allloss: 5.5196, dt: 1270.12ms, fracRes: 0.2363, norm(attn): 0.1396, norm(output): 0.1602, norm(x): 0.2017, norm(y): 0.9957, norm:1.6861, tok/sec: 103196.77, flops:108.32, batch-reuse:1
@ 1273 train 5.5876 , allloss: 5.6314, dt: 1261.23ms, fracRes: 0.2354, norm(attn): 0.1348, norm(output): 0.1602, norm(x): 0.2014, norm(y): 0.9958, norm:1.4885, tok/sec: 103923.59, flops:109.08, batch-reuse:1
@ 1274 train 5.4750 , allloss: 5.5231, dt: 1264.31ms, fracRes: 0.2437, norm(attn): 0.1357, norm(output): 0.1582, norm(x): 0.2028, norm(y): 0.9958, norm:1.5956, tok/sec: 103671.18, flops:108.82, batch-reuse:1
@ 1275 train 5.6137 , allloss: 5.6589, dt: 1266.25ms, fracRes: 0.2315, norm(attn): 0.1416, norm(output): 0.1582, norm(x): 0.2015, norm(y): 0.9957, norm:1.2882, tok/sec: 103511.74, flops:108.65, batch-reuse:1
@ 1276 train 5.4297 , allloss: 5.4741, dt: 1267.77ms, fracRes: 0.2339, norm(attn): 0.1367, norm(output): 0.1582, norm(x): 0.2011, norm(y): 0.9958, norm:1.6772, tok/sec: 103387.97, flops:108.52, batch-reuse:1
@ 1277 train 5.4152 , allloss: 5.4606, dt: 1248.20ms, fracRes: 0.2367, norm(attn): 0.1338, norm(output): 0.1572, norm(x): 0.2008, norm(y): 0.9958, norm:1.5309, tok/sec: 105008.44, flops:110.22, batch-reuse:1
@ 1278 train 5.5371 , allloss: 5.5832, dt: 1260.55ms, fracRes: 0.2246, norm(attn): 0.1436, norm(output): 0.1582, norm(x): 0.1993, norm(y): 0.9957, norm:1.6367, tok/sec: 103980.07, flops:109.14, batch-reuse:1
@ 1279 train 5.6335 , allloss: 5.6796, dt: 1285.50ms, fracRes: 0.2337, norm(attn): 0.1387, norm(output): 0.1592, norm(x): 0.2008, norm(y): 0.9957, norm:1.9666, tok/sec: 101961.84, flops:107.02, batch-reuse:1
@ 1280 train 5.4248 , allloss: 5.4707, dt: 1262.82ms, fracRes: 0.2461, norm(attn): 0.1338, norm(output): 0.1572, norm(x): 0.2024, norm(y): 0.9959, norm:1.3357, tok/sec: 103793.41, flops:108.94, batch-reuse:1
@ 1281 train 5.4362 , allloss: 5.4824, dt: 1292.60ms, fracRes: 0.2416, norm(attn): 0.1396, norm(output): 0.1572, norm(x): 0.2012, norm(y): 0.9958, norm:1.7331, tok/sec: 101401.48, flops:106.43, batch-reuse:1
@ 1282 train 5.4471 , allloss: 5.4931, dt: 1283.08ms, fracRes: 0.2334, norm(attn): 0.1436, norm(output): 0.1592, norm(x): 0.2001, norm(y): 0.9956, norm:1.6730, tok/sec: 102153.94, flops:107.22, batch-reuse:1
@ 1283 train 5.4910 , allloss: 5.5371, dt: 1280.77ms, fracRes: 0.2402, norm(attn): 0.1377, norm(output): 0.1582, norm(x): 0.2011, norm(y): 0.9957, norm:1.3167, tok/sec: 102338.32, flops:107.42, batch-reuse:1
@ 1284 train 5.4455 , allloss: 5.4921, dt: 1262.26ms, fracRes: 0.2489, norm(attn): 0.1377, norm(output): 0.1572, norm(x): 0.2024, norm(y): 0.9958, norm:1.6982, tok/sec: 103839.29, flops:108.99, batch-reuse:1
@ 1285 train 5.3751 , allloss: 5.4219, dt: 1266.97ms, fracRes: 0.2463, norm(attn): 0.1406, norm(output): 0.1582, norm(x): 0.2030, norm(y): 0.9957, norm:1.3902, tok/sec: 103452.95, flops:108.59, batch-reuse:1
@ 1286 train 5.5948 , allloss: 5.6400, dt: 1275.65ms, fracRes: 0.2482, norm(attn): 0.1367, norm(output): 0.1572, norm(x): 0.2033, norm(y): 0.9958, norm:1.5222, tok/sec: 102749.32, flops:107.85, batch-reuse:1
@ 1287 train 5.5104 , allloss: 5.5568, dt: 1279.56ms, fracRes: 0.2490, norm(attn): 0.1377, norm(output): 0.1582, norm(x): 0.2029, norm(y): 0.9957, norm:1.6958, tok/sec: 102435.07, flops:107.52, batch-reuse:1
@ 1288 train 5.5066 , allloss: 5.5533, dt: 1248.41ms, fracRes: 0.2433, norm(attn): 0.1426, norm(output): 0.1602, norm(x): 0.2018, norm(y): 0.9957, norm:2.0224, tok/sec: 104990.75, flops:110.20, batch-reuse:1
@ 1289 train 5.4214 , allloss: 5.4670, dt: 1266.78ms, fracRes: 0.2446, norm(attn): 0.1377, norm(output): 0.1602, norm(x): 0.2022, norm(y): 0.9957, norm:1.4233, tok/sec: 103468.65, flops:108.60, batch-reuse:1
@ 1290 train 5.4106 , allloss: 5.4550, dt: 1297.78ms, fracRes: 0.2527, norm(attn): 0.1328, norm(output): 0.1592, norm(x): 0.2033, norm(y): 0.9958, norm:1.7760, tok/sec: 100997.40, flops:106.01, batch-reuse:1
@ 1291 train 5.4944 , allloss: 5.5401, dt: 1305.73ms, fracRes: 0.2607, norm(attn): 0.1348, norm(output): 0.1582, norm(x): 0.2060, norm(y): 0.9958, norm:2.1765, tok/sec: 100381.97, flops:105.36, batch-reuse:1
@ 1292 train 5.4494 , allloss: 5.4984, dt: 1292.36ms, fracRes: 0.2552, norm(attn): 0.1396, norm(output): 0.1582, norm(x): 0.2056, norm(y): 0.9957, norm:1.5002, tok/sec: 101420.54, flops:106.45, batch-reuse:1
@ 1293 train 5.4782 , allloss: 5.5233, dt: 1286.27ms, fracRes: 0.2574, norm(attn): 0.1309, norm(output): 0.1582, norm(x): 0.2059, norm(y): 0.9958, norm:1.5899, tok/sec: 101901.06, flops:106.96, batch-reuse:1
@ 1294 train 5.4051 , allloss: 5.4493, dt: 1272.23ms, fracRes: 0.2513, norm(attn): 0.1357, norm(output): 0.1582, norm(x): 0.2050, norm(y): 0.9957, norm:1.6318, tok/sec: 103025.29, flops:108.14, batch-reuse:1
@ 1295 train 5.5656 , allloss: 5.6123, dt: 1269.12ms, fracRes: 0.2453, norm(attn): 0.1396, norm(output): 0.1582, norm(x): 0.2037, norm(y): 0.9957, norm:1.9479, tok/sec: 103278.06, flops:108.40, batch-reuse:1
@ 1296 train 5.5188 , allloss: 5.5664, dt: 1259.02ms, fracRes: 0.2402, norm(attn): 0.1416, norm(output): 0.1582, norm(x): 0.2033, norm(y): 0.9957, norm:1.4788, tok/sec: 104106.68, flops:109.27, batch-reuse:1
@ 1297 train 5.5735 , allloss: 5.6208, dt: 1273.94ms, fracRes: 0.2467, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.2038, norm(y): 0.9958, norm:1.5388, tok/sec: 102887.16, flops:107.99, batch-reuse:1
@ 1298 train 5.6744 , allloss: 5.7187, dt: 1277.93ms, fracRes: 0.2381, norm(attn): 0.1367, norm(output): 0.1592, norm(x): 0.2029, norm(y): 0.9958, norm:1.7847, tok/sec: 102565.83, flops:107.66, batch-reuse:1
@ 1299 train 5.6569 , allloss: 5.7005, dt: 1262.36ms, fracRes: 0.2329, norm(attn): 0.1387, norm(output): 0.1611, norm(x): 0.2028, norm(y): 0.9957, norm:1.6310, tok/sec: 103830.68, flops:108.98, batch-reuse:1
@ 1300 train 5.6290 , allloss: 5.6743, dt: 1258.37ms, fracRes: 0.2335, norm(attn): 0.1396, norm(output): 0.1611, norm(x): 0.2044, norm(y): 0.9956, norm:2.4106, tok/sec: 104160.31, flops:109.33, batch-reuse:1
@ 1301 train 5.6913 , allloss: 5.7347, dt: 1276.25ms, fracRes: 0.2418, norm(attn): 0.1377, norm(output): 0.1602, norm(x): 0.2055, norm(y): 0.9957, norm:1.4491, tok/sec: 102700.85, flops:107.80, batch-reuse:1
@ 1302 train 5.6537 , allloss: 5.6991, dt: 1265.47ms, fracRes: 0.2432, norm(attn): 0.1387, norm(output): 0.1592, norm(x): 0.2051, norm(y): 0.9957, norm:1.6830, tok/sec: 103575.35, flops:108.72, batch-reuse:1
@ 1303 train 5.7237 , allloss: 5.7690, dt: 1240.86ms, fracRes: 0.2401, norm(attn): 0.1416, norm(output): 0.1602, norm(x): 0.2046, norm(y): 0.9956, norm:2.0077, tok/sec: 105629.66, flops:110.87, batch-reuse:1
@ 1304 train 5.6672 , allloss: 5.7107, dt: 1257.55ms, fracRes: 0.2445, norm(attn): 0.1387, norm(output): 0.1611, norm(x): 0.2055, norm(y): 0.9957, norm:1.4679, tok/sec: 104228.38, flops:109.40, batch-reuse:1
@ 1305 train 5.6228 , allloss: 5.6675, dt: 1275.87ms, fracRes: 0.2522, norm(attn): 0.1357, norm(output): 0.1582, norm(x): 0.2068, norm(y): 0.9957, norm:1.7826, tok/sec: 102731.42, flops:107.83, batch-reuse:1
@ 1306 train 5.5399 , allloss: 5.5861, dt: 1273.10ms, fracRes: 0.2578, norm(attn): 0.1387, norm(output): 0.1582, norm(x): 0.2080, norm(y): 0.9957, norm:1.7419, tok/sec: 102955.23, flops:108.07, batch-reuse:1
@ 1307 train 5.7150 , allloss: 5.7600, dt: 1268.85ms, fracRes: 0.2527, norm(attn): 0.1387, norm(output): 0.1602, norm(x): 0.2079, norm(y): 0.9957, norm:1.9844, tok/sec: 103300.01, flops:108.43, batch-reuse:1
@ 1308 train 5.6787 , allloss: 5.7265, dt: 1247.48ms, fracRes: 0.2486, norm(attn): 0.1406, norm(output): 0.1611, norm(x): 0.2072, norm(y): 0.9956, norm:1.4793, tok/sec: 105069.15, flops:110.28, batch-reuse:1
@ 1309 train 5.6778 , allloss: 5.7221, dt: 1268.27ms, fracRes: 0.2595, norm(attn): 0.1328, norm(output): 0.1611, norm(x): 0.2101, norm(y): 0.9958, norm:2.4131, tok/sec: 103347.19, flops:108.48, batch-reuse:1
@ 1310 train 5.6495 , allloss: 5.6964, dt: 1283.83ms, fracRes: 0.2611, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.2089, norm(y): 0.9959, norm:2.0267, tok/sec: 102094.84, flops:107.16, batch-reuse:1
@ 1311 train 5.6599 , allloss: 5.7093, dt: 1272.52ms, fracRes: 0.2620, norm(attn): 0.1387, norm(output): 0.1592, norm(x): 0.2102, norm(y): 0.9957, norm:1.7529, tok/sec: 103001.74, flops:108.11, batch-reuse:1
@ 1312 train 5.6516 , allloss: 5.6995, dt: 1253.78ms, fracRes: 0.2470, norm(attn): 0.1436, norm(output): 0.1611, norm(x): 0.2067, norm(y): 0.9956, norm:1.6651, tok/sec: 104541.16, flops:109.73, batch-reuse:1
@ 1313 train 5.6836 , allloss: 5.7291, dt: 1283.27ms, fracRes: 0.2546, norm(attn): 0.1396, norm(output): 0.1611, norm(x): 0.2095, norm(y): 0.9957, norm:1.8774, tok/sec: 102139.23, flops:107.21, batch-reuse:1
@ 1314 train 5.6502 , allloss: 5.6969, dt: 1272.18ms, fracRes: 0.2603, norm(attn): 0.1367, norm(output): 0.1602, norm(x): 0.2096, norm(y): 0.9957, norm:1.5678, tok/sec: 103029.15, flops:108.14, batch-reuse:1
@ 1315 train 5.6274 , allloss: 5.6742, dt: 1277.07ms, fracRes: 0.2563, norm(attn): 0.1406, norm(output): 0.1592, norm(x): 0.2081, norm(y): 0.9957, norm:1.7212, tok/sec: 102634.84, flops:107.73, batch-reuse:1
@ 1316 train 5.5691 , allloss: 5.6178, dt: 1274.85ms, fracRes: 0.2482, norm(attn): 0.1475, norm(output): 0.1611, norm(x): 0.2061, norm(y): 0.9956, norm:1.5456, tok/sec: 102813.98, flops:107.92, batch-reuse:1
@ 1317 train 5.6624 , allloss: 5.7059, dt: 1270.04ms, fracRes: 0.2529, norm(attn): 0.1387, norm(output): 0.1602, norm(x): 0.2080, norm(y): 0.9957, norm:1.5642, tok/sec: 103202.97, flops:108.33, batch-reuse:1
@ 1318 train 5.5538 , allloss: 5.5977, dt: 1255.59ms, fracRes: 0.2554, norm(attn): 0.1328, norm(output): 0.1602, norm(x): 0.2077, norm(y): 0.9958, norm:1.7605, tok/sec: 104391.03, flops:109.57, batch-reuse:1
@ 1319 train 5.6577 , allloss: 5.7058, dt: 1268.29ms, fracRes: 0.2598, norm(attn): 0.1338, norm(output): 0.1592, norm(x): 0.2079, norm(y): 0.9958, norm:1.6640, tok/sec: 103345.80, flops:108.48, batch-reuse:1
@ 1320 train 5.6961 , allloss: 5.7426, dt: 1248.12ms, fracRes: 0.2583, norm(attn): 0.1396, norm(output): 0.1602, norm(x): 0.2083, norm(y): 0.9957, norm:2.1095, tok/sec: 105015.44, flops:110.23, batch-reuse:1
@ 1321 train 5.6469 , allloss: 5.6940, dt: 1279.10ms, fracRes: 0.2550, norm(attn): 0.1455, norm(output): 0.1611, norm(x): 0.2082, norm(y): 0.9956, norm:1.6235, tok/sec: 102471.86, flops:107.56, batch-reuse:1
@ 1322 train 5.6299 , allloss: 5.6747, dt: 1259.72ms, fracRes: 0.2718, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.2114, norm(y): 0.9958, norm:1.6048, tok/sec: 104048.61, flops:109.21, batch-reuse:1
@ 1323 train 5.6101 , allloss: 5.6555, dt: 1269.21ms, fracRes: 0.2784, norm(attn): 0.1328, norm(output): 0.1582, norm(x): 0.2138, norm(y): 0.9958, norm:1.7767, tok/sec: 103270.28, flops:108.40, batch-reuse:1
@ 1324 train 5.6563 , allloss: 5.7005, dt: 1285.66ms, fracRes: 0.2683, norm(attn): 0.1377, norm(output): 0.1611, norm(x): 0.2135, norm(y): 0.9957, norm:1.7759, tok/sec: 101948.81, flops:107.01, batch-reuse:1
@ 1325 train 5.5750 , allloss: 5.6195, dt: 1278.23ms, fracRes: 0.2657, norm(attn): 0.1377, norm(output): 0.1602, norm(x): 0.2114, norm(y): 0.9957, norm:1.5748, tok/sec: 102541.70, flops:107.63, batch-reuse:1
@ 1326 train 5.5481 , allloss: 5.5919, dt: 1302.47ms, fracRes: 0.2648, norm(attn): 0.1387, norm(output): 0.1592, norm(x): 0.2104, norm(y): 0.9958, norm:1.8239, tok/sec: 100633.71, flops:105.63, batch-reuse:1
@ 1327 train 5.6819 , allloss: 5.7263, dt: 1301.53ms, fracRes: 0.2637, norm(attn): 0.1426, norm(output): 0.1611, norm(x): 0.2119, norm(y): 0.9957, norm:2.0945, tok/sec: 100705.84, flops:105.70, batch-reuse:1
@ 1328 train 5.6031 , allloss: 5.6490, dt: 1276.02ms, fracRes: 0.2580, norm(attn): 0.1455, norm(output): 0.1631, norm(x): 0.2117, norm(y): 0.9956, norm:1.4965, tok/sec: 102719.27, flops:107.82, batch-reuse:1
@ 1329 train 5.6038 , allloss: 5.6507, dt: 1254.07ms, fracRes: 0.2637, norm(attn): 0.1396, norm(output): 0.1602, norm(x): 0.2114, norm(y): 0.9957, norm:1.3429, tok/sec: 104517.59, flops:109.70, batch-reuse:1
@ 1330 train 5.6860 , allloss: 5.7304, dt: 1289.44ms, fracRes: 0.2584, norm(attn): 0.1426, norm(output): 0.1611, norm(x): 0.2111, norm(y): 0.9956, norm:2.1520, tok/sec: 101650.47, flops:106.70, batch-reuse:1
@ 1331 train 5.6463 , allloss: 5.6903, dt: 1263.78ms, fracRes: 0.2671, norm(attn): 0.1348, norm(output): 0.1592, norm(x): 0.2117, norm(y): 0.9958, norm:1.6747, tok/sec: 103714.56, flops:108.86, batch-reuse:1
@ 1332 train 5.5800 , allloss: 5.6223, dt: 1245.41ms, fracRes: 0.2659, norm(attn): 0.1348, norm(output): 0.1602, norm(x): 0.2128, norm(y): 0.9958, norm:1.7473, tok/sec: 105244.18, flops:110.47, batch-reuse:1
@ 1333 train 5.5719 , allloss: 5.6157, dt: 1256.72ms, fracRes: 0.2487, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2087, norm(y): 0.9956, norm:1.6559, tok/sec: 104296.56, flops:109.47, batch-reuse:1
@ 1334 train 5.5957 , allloss: 5.6391, dt: 1262.02ms, fracRes: 0.2481, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2086, norm(y): 0.9956, norm:1.6192, tok/sec: 103859.18, flops:109.01, batch-reuse:1
@ 1335 train 5.6224 , allloss: 5.6676, dt: 1271.95ms, fracRes: 0.2556, norm(attn): 0.1406, norm(output): 0.1602, norm(x): 0.2101, norm(y): 0.9957, norm:1.6456, tok/sec: 103048.35, flops:108.16, batch-reuse:1
@ 1336 train 5.6345 , allloss: 5.6817, dt: 1271.89ms, fracRes: 0.2697, norm(attn): 0.1377, norm(output): 0.1621, norm(x): 0.2150, norm(y): 0.9958, norm:1.9735, tok/sec: 103052.54, flops:108.17, batch-reuse:1
@ 1337 train 5.6280 , allloss: 5.6745, dt: 1305.20ms, fracRes: 0.2631, norm(attn): 0.1406, norm(output): 0.1602, norm(x): 0.2122, norm(y): 0.9957, norm:1.7346, tok/sec: 100422.70, flops:105.41, batch-reuse:1
@ 1338 train 5.6174 , allloss: 5.6626, dt: 1290.32ms, fracRes: 0.2571, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2101, norm(y): 0.9957, norm:1.6294, tok/sec: 101580.99, flops:106.62, batch-reuse:1
@ 1339 train 5.6128 , allloss: 5.6577, dt: 1249.65ms, fracRes: 0.2643, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2144, norm(y): 0.9957, norm:1.5531, tok/sec: 104887.07, flops:110.09, batch-reuse:1
@ 1340 train 5.5792 , allloss: 5.6219, dt: 1271.93ms, fracRes: 0.2611, norm(attn): 0.1406, norm(output): 0.1641, norm(x): 0.2130, norm(y): 0.9957, norm:1.7540, tok/sec: 103049.41, flops:108.16, batch-reuse:1
@ 1341 train 5.6453 , allloss: 5.6894, dt: 1276.41ms, fracRes: 0.2608, norm(attn): 0.1387, norm(output): 0.1621, norm(x): 0.2122, norm(y): 0.9957, norm:1.9389, tok/sec: 102688.40, flops:107.79, batch-reuse:1
@ 1342 train 5.7271 , allloss: 5.7735, dt: 1251.73ms, fracRes: 0.2614, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2132, norm(y): 0.9957, norm:1.7552, tok/sec: 104712.92, flops:109.91, batch-reuse:1
@ 1343 train 5.5443 , allloss: 5.5882, dt: 1271.50ms, fracRes: 0.2605, norm(attn): 0.1455, norm(output): 0.1621, norm(x): 0.2123, norm(y): 0.9956, norm:1.3603, tok/sec: 103084.40, flops:108.20, batch-reuse:1
@ 1344 train 5.5697 , allloss: 5.6152, dt: 1262.77ms, fracRes: 0.2715, norm(attn): 0.1406, norm(output): 0.1602, norm(x): 0.2139, norm(y): 0.9958, norm:1.9022, tok/sec: 103797.04, flops:108.95, batch-reuse:1
@ 1345 train 5.4760 , allloss: 5.5197, dt: 1273.75ms, fracRes: 0.2612, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2126, norm(y): 0.9957, norm:1.7881, tok/sec: 102902.27, flops:108.01, batch-reuse:1
@ 1346 train 5.5596 , allloss: 5.6045, dt: 1277.64ms, fracRes: 0.2626, norm(attn): 0.1445, norm(output): 0.1621, norm(x): 0.2143, norm(y): 0.9956, norm:1.8745, tok/sec: 102588.87, flops:107.68, batch-reuse:1
@ 1347 train 5.5099 , allloss: 5.5533, dt: 1248.48ms, fracRes: 0.2672, norm(attn): 0.1406, norm(output): 0.1602, norm(x): 0.2146, norm(y): 0.9957, norm:1.3644, tok/sec: 104985.64, flops:110.20, batch-reuse:1
@ 1348 train 5.5632 , allloss: 5.6088, dt: 1259.21ms, fracRes: 0.2672, norm(attn): 0.1416, norm(output): 0.1602, norm(x): 0.2148, norm(y): 0.9957, norm:1.9279, tok/sec: 104090.69, flops:109.26, batch-reuse:1
@ 1349 train 5.5938 , allloss: 5.6389, dt: 1270.97ms, fracRes: 0.2640, norm(attn): 0.1436, norm(output): 0.1611, norm(x): 0.2142, norm(y): 0.9957, norm:1.7945, tok/sec: 103127.60, flops:108.25, batch-reuse:1
@ 1350 train 5.5099 , allloss: 5.5558, dt: 1256.85ms, fracRes: 0.2696, norm(attn): 0.1436, norm(output): 0.1611, norm(x): 0.2159, norm(y): 0.9956, norm:1.7535, tok/sec: 104285.89, flops:109.46, batch-reuse:1
@ 1351 train 5.5786 , allloss: 5.6245, dt: 1261.16ms, fracRes: 0.2783, norm(attn): 0.1387, norm(output): 0.1602, norm(x): 0.2181, norm(y): 0.9957, norm:1.6758, tok/sec: 103929.82, flops:109.09, batch-reuse:1
@ 1352 train 5.6259 , allloss: 5.6699, dt: 1298.03ms, fracRes: 0.2696, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2145, norm(y): 0.9957, norm:1.5638, tok/sec: 100977.25, flops:105.99, batch-reuse:1
@ 1353 train 5.5909 , allloss: 5.6347, dt: 1266.24ms, fracRes: 0.2735, norm(attn): 0.1406, norm(output): 0.1611, norm(x): 0.2164, norm(y): 0.9957, norm:1.8347, tok/sec: 103512.40, flops:108.65, batch-reuse:1
@ 1354 train 5.6002 , allloss: 5.6455, dt: 1263.09ms, fracRes: 0.2709, norm(attn): 0.1426, norm(output): 0.1611, norm(x): 0.2164, norm(y): 0.9956, norm:1.7595, tok/sec: 103771.02, flops:108.92, batch-reuse:1
@ 1355 train 5.5507 , allloss: 5.5935, dt: 1304.24ms, fracRes: 0.2673, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2149, norm(y): 0.9956, norm:1.4299, tok/sec: 100496.95, flops:105.48, batch-reuse:1
@ 1356 train 5.6455 , allloss: 5.6896, dt: 1296.83ms, fracRes: 0.2813, norm(attn): 0.1406, norm(output): 0.1611, norm(x): 0.2200, norm(y): 0.9956, norm:2.2680, tok/sec: 101071.15, flops:106.09, batch-reuse:1
@ 1357 train 5.5749 , allloss: 5.6191, dt: 1305.57ms, fracRes: 0.2771, norm(attn): 0.1416, norm(output): 0.1611, norm(x): 0.2173, norm(y): 0.9957, norm:1.8024, tok/sec: 100394.34, flops:105.38, batch-reuse:1
@ 1358 train 5.5394 , allloss: 5.5838, dt: 1287.86ms, fracRes: 0.2775, norm(attn): 0.1416, norm(output): 0.1611, norm(x): 0.2177, norm(y): 0.9957, norm:1.4262, tok/sec: 101775.36, flops:106.83, batch-reuse:1
@ 1359 train 5.4739 , allloss: 5.5173, dt: 1277.66ms, fracRes: 0.2679, norm(attn): 0.1445, norm(output): 0.1621, norm(x): 0.2170, norm(y): 0.9956, norm:1.4778, tok/sec: 102587.90, flops:107.68, batch-reuse:1
@ 1360 train 5.5032 , allloss: 5.5472, dt: 1274.61ms, fracRes: 0.2695, norm(attn): 0.1406, norm(output): 0.1611, norm(x): 0.2160, norm(y): 0.9957, norm:1.6164, tok/sec: 102832.92, flops:107.94, batch-reuse:1
@ 1361 train 5.5561 , allloss: 5.5990, dt: 1269.73ms, fracRes: 0.2686, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2163, norm(y): 0.9957, norm:1.5271, tok/sec: 103228.39, flops:108.35, batch-reuse:1
@ 1362 train 5.6317 , allloss: 5.6755, dt: 1271.77ms, fracRes: 0.2671, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2158, norm(y): 0.9956, norm:1.5953, tok/sec: 103062.93, flops:108.18, batch-reuse:1
@ 1363 train 5.5411 , allloss: 5.5867, dt: 1262.16ms, fracRes: 0.2589, norm(attn): 0.1475, norm(output): 0.1621, norm(x): 0.2136, norm(y): 0.9956, norm:1.8638, tok/sec: 103847.70, flops:109.00, batch-reuse:1
@ 1364 train 5.4842 , allloss: 5.5283, dt: 1264.41ms, fracRes: 0.2650, norm(attn): 0.1445, norm(output): 0.1621, norm(x): 0.2154, norm(y): 0.9956, norm:1.7260, tok/sec: 103662.99, flops:108.81, batch-reuse:1
@ 1365 train 5.6007 , allloss: 5.6459, dt: 1281.32ms, fracRes: 0.2752, norm(attn): 0.1396, norm(output): 0.1611, norm(x): 0.2184, norm(y): 0.9957, norm:2.1688, tok/sec: 102294.29, flops:107.37, batch-reuse:1
@ 1366 train 5.5314 , allloss: 5.5759, dt: 1241.79ms, fracRes: 0.2732, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2182, norm(y): 0.9957, norm:1.5725, tok/sec: 105551.26, flops:110.79, batch-reuse:1
@ 1367 train 5.5086 , allloss: 5.5534, dt: 1275.27ms, fracRes: 0.2679, norm(attn): 0.1484, norm(output): 0.1631, norm(x): 0.2163, norm(y): 0.9956, norm:1.6987, tok/sec: 102779.79, flops:107.88, batch-reuse:1
@ 1368 train 5.6482 , allloss: 5.6917, dt: 1283.15ms, fracRes: 0.2767, norm(attn): 0.1396, norm(output): 0.1621, norm(x): 0.2183, norm(y): 0.9957, norm:1.7126, tok/sec: 102148.38, flops:107.22, batch-reuse:1
@ 1369 train 5.6043 , allloss: 5.6473, dt: 1284.99ms, fracRes: 0.2753, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2187, norm(y): 0.9957, norm:1.7496, tok/sec: 102002.16, flops:107.06, batch-reuse:1
@ 1370 train 5.4945 , allloss: 5.5400, dt: 1269.87ms, fracRes: 0.2688, norm(attn): 0.1455, norm(output): 0.1621, norm(x): 0.2167, norm(y): 0.9956, norm:1.3537, tok/sec: 103216.92, flops:108.34, batch-reuse:1
@ 1371 train 5.6068 , allloss: 5.6505, dt: 1259.90ms, fracRes: 0.2742, norm(attn): 0.1367, norm(output): 0.1621, norm(x): 0.2174, norm(y): 0.9958, norm:1.6806, tok/sec: 104033.29, flops:109.20, batch-reuse:1
@ 1372 train 5.4854 , allloss: 5.5310, dt: 1249.90ms, fracRes: 0.2765, norm(attn): 0.1406, norm(output): 0.1611, norm(x): 0.2184, norm(y): 0.9957, norm:1.6915, tok/sec: 104866.08, flops:110.07, batch-reuse:1
@ 1373 train 5.4942 , allloss: 5.5392, dt: 1264.27ms, fracRes: 0.2677, norm(attn): 0.1465, norm(output): 0.1621, norm(x): 0.2173, norm(y): 0.9956, norm:1.6615, tok/sec: 103674.21, flops:108.82, batch-reuse:1
@ 1374 train 5.5091 , allloss: 5.5515, dt: 1260.60ms, fracRes: 0.2659, norm(attn): 0.1445, norm(output): 0.1641, norm(x): 0.2190, norm(y): 0.9955, norm:1.5382, tok/sec: 103975.48, flops:109.14, batch-reuse:1
@ 1375 train 5.4708 , allloss: 5.5140, dt: 1255.80ms, fracRes: 0.2690, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2183, norm(y): 0.9956, norm:1.3420, tok/sec: 104373.45, flops:109.55, batch-reuse:1
@ 1376 train 5.4514 , allloss: 5.4928, dt: 1271.23ms, fracRes: 0.2664, norm(attn): 0.1436, norm(output): 0.1641, norm(x): 0.2171, norm(y): 0.9956, norm:2.0282, tok/sec: 103106.77, flops:108.22, batch-reuse:1
@ 1377 train 5.4542 , allloss: 5.4973, dt: 1258.04ms, fracRes: 0.2676, norm(attn): 0.1465, norm(output): 0.1621, norm(x): 0.2183, norm(y): 0.9956, norm:1.6323, tok/sec: 104187.61, flops:109.36, batch-reuse:1
@ 1378 train 5.5993 , allloss: 5.6441, dt: 1246.28ms, fracRes: 0.2758, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2202, norm(y): 0.9956, norm:1.6896, tok/sec: 105170.79, flops:110.39, batch-reuse:1
@ 1379 train 5.5511 , allloss: 5.5956, dt: 1308.31ms, fracRes: 0.2775, norm(attn): 0.1416, norm(output): 0.1611, norm(x): 0.2201, norm(y): 0.9956, norm:1.6113, tok/sec: 100184.06, flops:105.16, batch-reuse:1
@ 1380 train 5.4103 , allloss: 5.4528, dt: 1264.43ms, fracRes: 0.2736, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2187, norm(y): 0.9956, norm:1.6498, tok/sec: 103661.25, flops:108.81, batch-reuse:1
@ 1381 train 5.4761 , allloss: 5.5208, dt: 1269.89ms, fracRes: 0.2740, norm(attn): 0.1475, norm(output): 0.1621, norm(x): 0.2193, norm(y): 0.9955, norm:1.5467, tok/sec: 103215.29, flops:108.34, batch-reuse:1
@ 1382 train 5.4791 , allloss: 5.5236, dt: 1268.85ms, fracRes: 0.2840, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2217, norm(y): 0.9957, norm:1.4941, tok/sec: 103299.58, flops:108.43, batch-reuse:1
@ 1383 train 5.5439 , allloss: 5.5872, dt: 1262.82ms, fracRes: 0.2850, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2225, norm(y): 0.9956, norm:1.6775, tok/sec: 103792.88, flops:108.94, batch-reuse:1
@ 1384 train 5.4165 , allloss: 5.4614, dt: 1275.69ms, fracRes: 0.2792, norm(attn): 0.1426, norm(output): 0.1611, norm(x): 0.2201, norm(y): 0.9956, norm:1.5991, tok/sec: 102745.92, flops:107.85, batch-reuse:1
@ 1385 train 5.5100 , allloss: 5.5525, dt: 1276.81ms, fracRes: 0.2824, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2216, norm(y): 0.9957, norm:2.0560, tok/sec: 102655.82, flops:107.75, batch-reuse:1
@ 1386 train 5.4753 , allloss: 5.5194, dt: 1253.63ms, fracRes: 0.2833, norm(attn): 0.1387, norm(output): 0.1611, norm(x): 0.2215, norm(y): 0.9957, norm:1.6304, tok/sec: 104554.28, flops:109.74, batch-reuse:1
@ 1387 train 5.4595 , allloss: 5.5058, dt: 1255.29ms, fracRes: 0.2686, norm(attn): 0.1514, norm(output): 0.1621, norm(x): 0.2186, norm(y): 0.9955, norm:1.8606, tok/sec: 104415.55, flops:109.60, batch-reuse:1
@ 1388 train 5.5283 , allloss: 5.5714, dt: 1296.13ms, fracRes: 0.2794, norm(attn): 0.1396, norm(output): 0.1611, norm(x): 0.2209, norm(y): 0.9957, norm:1.5395, tok/sec: 101125.96, flops:106.15, batch-reuse:1
@ 1389 train 5.3459 , allloss: 5.3902, dt: 1266.02ms, fracRes: 0.2744, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2194, norm(y): 0.9956, norm:1.9031, tok/sec: 103530.63, flops:108.67, batch-reuse:1
@ 1390 train 5.6084 , allloss: 5.6531, dt: 1265.78ms, fracRes: 0.2833, norm(attn): 0.1426, norm(output): 0.1611, norm(x): 0.2232, norm(y): 0.9956, norm:1.8368, tok/sec: 103550.21, flops:108.69, batch-reuse:1
@ 1391 train 5.5145 , allloss: 5.5584, dt: 1270.18ms, fracRes: 0.2842, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2233, norm(y): 0.9956, norm:1.6921, tok/sec: 103191.73, flops:108.31, batch-reuse:1
@ 1392 train 5.4551 , allloss: 5.4996, dt: 1287.66ms, fracRes: 0.2800, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2223, norm(y): 0.9956, norm:1.7152, tok/sec: 101790.57, flops:106.84, batch-reuse:1
@ 1393 train 5.4198 , allloss: 5.4644, dt: 1249.97ms, fracRes: 0.2717, norm(attn): 0.1436, norm(output): 0.1631, norm(x): 0.2207, norm(y): 0.9955, norm:1.3882, tok/sec: 104860.42, flops:110.06, batch-reuse:1
@ 1394 train 5.4235 , allloss: 5.4668, dt: 1266.75ms, fracRes: 0.2785, norm(attn): 0.1396, norm(output): 0.1621, norm(x): 0.2216, norm(y): 0.9956, norm:2.1138, tok/sec: 103471.25, flops:108.61, batch-reuse:1
@ 1395 train 5.4384 , allloss: 5.4825, dt: 1262.36ms, fracRes: 0.2767, norm(attn): 0.1396, norm(output): 0.1611, norm(x): 0.2206, norm(y): 0.9956, norm:1.6560, tok/sec: 103831.03, flops:108.98, batch-reuse:1
@ 1396 train 5.4421 , allloss: 5.4879, dt: 1262.11ms, fracRes: 0.2773, norm(attn): 0.1426, norm(output): 0.1631, norm(x): 0.2210, norm(y): 0.9956, norm:1.5152, tok/sec: 103851.74, flops:109.01, batch-reuse:1
@ 1397 train 5.4750 , allloss: 5.5172, dt: 1267.21ms, fracRes: 0.2767, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2216, norm(y): 0.9956, norm:1.5638, tok/sec: 103433.72, flops:108.57, batch-reuse:1
@ 1398 train 5.4582 , allloss: 5.5008, dt: 1268.82ms, fracRes: 0.2805, norm(attn): 0.1387, norm(output): 0.1621, norm(x): 0.2216, norm(y): 0.9956, norm:1.4543, tok/sec: 103301.91, flops:108.43, batch-reuse:1
@ 1399 train 5.3861 , allloss: 5.4297, dt: 1270.37ms, fracRes: 0.2801, norm(attn): 0.1436, norm(output): 0.1611, norm(x): 0.2206, norm(y): 0.9956, norm:1.9680, tok/sec: 103176.32, flops:108.30, batch-reuse:1
@ 1400 train 5.5237 , allloss: 5.5714, dt: 1287.71ms, fracRes: 0.2866, norm(attn): 0.1426, norm(output): 0.1631, norm(x): 0.2240, norm(y): 0.9956, norm:1.5440, tok/sec: 101786.50, flops:106.84, batch-reuse:1
@ 1401 train 5.4054 , allloss: 5.4482, dt: 1313.33ms, fracRes: 0.2838, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2219, norm(y): 0.9957, norm:1.3581, tok/sec: 99801.15, flops:104.75, batch-reuse:1
@ 1402 train 5.3626 , allloss: 5.4057, dt: 1277.18ms, fracRes: 0.2744, norm(attn): 0.1494, norm(output): 0.1641, norm(x): 0.2195, norm(y): 0.9955, norm:1.9484, tok/sec: 102626.18, flops:107.72, batch-reuse:1
@ 1403 train 5.4777 , allloss: 5.5209, dt: 1290.99ms, fracRes: 0.2807, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2202, norm(y): 0.9957, norm:1.7793, tok/sec: 101528.20, flops:106.57, batch-reuse:1
@ 1404 train 5.4089 , allloss: 5.4538, dt: 1250.34ms, fracRes: 0.2909, norm(attn): 0.1396, norm(output): 0.1611, norm(x): 0.2225, norm(y): 0.9958, norm:1.5112, tok/sec: 104829.31, flops:110.03, batch-reuse:1
@ 1405 train 5.4549 , allloss: 5.4994, dt: 1257.92ms, fracRes: 0.2840, norm(attn): 0.1455, norm(output): 0.1621, norm(x): 0.2211, norm(y): 0.9957, norm:1.7692, tok/sec: 104197.32, flops:109.37, batch-reuse:1
@ 1406 train 5.5529 , allloss: 5.5981, dt: 1233.53ms, fracRes: 0.2777, norm(attn): 0.1465, norm(output): 0.1621, norm(x): 0.2196, norm(y): 0.9956, norm:1.7764, tok/sec: 106257.34, flops:111.53, batch-reuse:1
@ 1407 train 5.4230 , allloss: 5.4661, dt: 1265.11ms, fracRes: 0.2771, norm(attn): 0.1484, norm(output): 0.1621, norm(x): 0.2198, norm(y): 0.9957, norm:1.5583, tok/sec: 103605.38, flops:108.75, batch-reuse:1
@ 1408 train 5.4169 , allloss: 5.4600, dt: 1255.97ms, fracRes: 0.2804, norm(attn): 0.1416, norm(output): 0.1602, norm(x): 0.2205, norm(y): 0.9957, norm:1.8667, tok/sec: 104359.48, flops:109.54, batch-reuse:1
@ 1409 train 5.4263 , allloss: 5.4679, dt: 1242.71ms, fracRes: 0.2823, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2221, norm(y): 0.9957, norm:1.5690, tok/sec: 105472.65, flops:110.71, batch-reuse:1
@ 1410 train 5.3969 , allloss: 5.4396, dt: 1252.09ms, fracRes: 0.2726, norm(attn): 0.1484, norm(output): 0.1641, norm(x): 0.2204, norm(y): 0.9955, norm:1.5690, tok/sec: 104682.83, flops:109.88, batch-reuse:1
@ 1411 train 5.4112 , allloss: 5.4544, dt: 1269.73ms, fracRes: 0.2877, norm(attn): 0.1396, norm(output): 0.1621, norm(x): 0.2226, norm(y): 0.9957, norm:1.7538, tok/sec: 103227.89, flops:108.35, batch-reuse:1
@ 1412 train 5.3876 , allloss: 5.4316, dt: 1272.54ms, fracRes: 0.2885, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2239, norm(y): 0.9957, norm:1.8053, tok/sec: 103000.27, flops:108.11, batch-reuse:1
@ 1413 train 5.3768 , allloss: 5.4202, dt: 1259.65ms, fracRes: 0.2822, norm(attn): 0.1465, norm(output): 0.1621, norm(x): 0.2221, norm(y): 0.9956, norm:1.5775, tok/sec: 104054.10, flops:109.22, batch-reuse:1
@ 1414 train 5.3950 , allloss: 5.4410, dt: 1254.30ms, fracRes: 0.2879, norm(attn): 0.1475, norm(output): 0.1621, norm(x): 0.2231, norm(y): 0.9956, norm:1.7503, tok/sec: 104498.08, flops:109.68, batch-reuse:1
@ 1415 train 5.4663 , allloss: 5.5106, dt: 1306.68ms, fracRes: 0.2927, norm(attn): 0.1455, norm(output): 0.1621, norm(x): 0.2241, norm(y): 0.9956, norm:1.3645, tok/sec: 100309.15, flops:105.29, batch-reuse:1
@ 1416 train 5.4821 , allloss: 5.5256, dt: 1258.97ms, fracRes: 0.2915, norm(attn): 0.1475, norm(output): 0.1621, norm(x): 0.2248, norm(y): 0.9956, norm:1.6391, tok/sec: 104110.88, flops:109.28, batch-reuse:1
@ 1417 train 5.4142 , allloss: 5.4562, dt: 1268.60ms, fracRes: 0.2807, norm(attn): 0.1455, norm(output): 0.1621, norm(x): 0.2210, norm(y): 0.9956, norm:1.8965, tok/sec: 103320.14, flops:108.45, batch-reuse:1
@ 1418 train 5.4162 , allloss: 5.4581, dt: 1270.87ms, fracRes: 0.2860, norm(attn): 0.1426, norm(output): 0.1631, norm(x): 0.2237, norm(y): 0.9956, norm:1.8631, tok/sec: 103135.40, flops:108.25, batch-reuse:1
@ 1419 train 5.5188 , allloss: 5.5616, dt: 1254.45ms, fracRes: 0.2876, norm(attn): 0.1426, norm(output): 0.1631, norm(x): 0.2242, norm(y): 0.9956, norm:1.8559, tok/sec: 104486.02, flops:109.67, batch-reuse:1
@ 1420 train 5.4761 , allloss: 5.5171, dt: 1306.87ms, fracRes: 0.2907, norm(attn): 0.1416, norm(output): 0.1631, norm(x): 0.2255, norm(y): 0.9956, norm:1.4772, tok/sec: 100294.32, flops:105.27, batch-reuse:1
@ 1421 train 5.4382 , allloss: 5.4813, dt: 1247.06ms, fracRes: 0.2891, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2243, norm(y): 0.9956, norm:1.3186, tok/sec: 105104.40, flops:110.32, batch-reuse:1
@ 1422 train 5.3787 , allloss: 5.4211, dt: 1275.50ms, fracRes: 0.2843, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2227, norm(y): 0.9956, norm:1.7257, tok/sec: 102761.55, flops:107.86, batch-reuse:1
@ 1423 train 5.4095 , allloss: 5.4531, dt: 1286.99ms, fracRes: 0.2881, norm(attn): 0.1426, norm(output): 0.1631, norm(x): 0.2242, norm(y): 0.9956, norm:1.5795, tok/sec: 101844.13, flops:106.90, batch-reuse:1
@ 1424 train 5.4025 , allloss: 5.4456, dt: 1287.40ms, fracRes: 0.2874, norm(attn): 0.1406, norm(output): 0.1641, norm(x): 0.2240, norm(y): 0.9956, norm:1.4900, tok/sec: 101811.76, flops:106.86, batch-reuse:1
@ 1425 train 5.3829 , allloss: 5.4256, dt: 1248.73ms, fracRes: 0.2837, norm(attn): 0.1455, norm(output): 0.1631, norm(x): 0.2225, norm(y): 0.9956, norm:1.4761, tok/sec: 104964.55, flops:110.17, batch-reuse:1
@ 1426 train 5.2873 , allloss: 5.3321, dt: 1278.58ms, fracRes: 0.2839, norm(attn): 0.1455, norm(output): 0.1621, norm(x): 0.2219, norm(y): 0.9956, norm:1.6401, tok/sec: 102513.96, flops:107.60, batch-reuse:1
@ 1427 train 5.3807 , allloss: 5.4232, dt: 1257.87ms, fracRes: 0.2880, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2240, norm(y): 0.9956, norm:1.7076, tok/sec: 104201.16, flops:109.37, batch-reuse:1
@ 1428 train 5.3731 , allloss: 5.4156, dt: 1279.52ms, fracRes: 0.2846, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2236, norm(y): 0.9956, norm:2.3696, tok/sec: 102438.43, flops:107.52, batch-reuse:1
@ 1429 train 5.3968 , allloss: 5.4421, dt: 1276.40ms, fracRes: 0.2851, norm(attn): 0.1465, norm(output): 0.1641, norm(x): 0.2261, norm(y): 0.9955, norm:1.7207, tok/sec: 102689.04, flops:107.79, batch-reuse:1
@ 1430 train 5.4264 , allloss: 5.4705, dt: 1284.88ms, fracRes: 0.2852, norm(attn): 0.1436, norm(output): 0.1631, norm(x): 0.2245, norm(y): 0.9955, norm:1.6401, tok/sec: 102011.30, flops:107.07, batch-reuse:1
@ 1431 train 5.3652 , allloss: 5.4089, dt: 1292.62ms, fracRes: 0.2867, norm(attn): 0.1396, norm(output): 0.1611, norm(x): 0.2237, norm(y): 0.9956, norm:1.4378, tok/sec: 101400.50, flops:106.43, batch-reuse:1
@ 1432 train 5.3372 , allloss: 5.3805, dt: 1290.06ms, fracRes: 0.2829, norm(attn): 0.1455, norm(output): 0.1621, norm(x): 0.2233, norm(y): 0.9956, norm:1.9917, tok/sec: 101601.34, flops:106.64, batch-reuse:1
@ 1433 train 5.3927 , allloss: 5.4392, dt: 1261.89ms, fracRes: 0.2819, norm(attn): 0.1494, norm(output): 0.1621, norm(x): 0.2240, norm(y): 0.9955, norm:1.7649, tok/sec: 103869.74, flops:109.02, batch-reuse:1
@ 1434 train 5.4433 , allloss: 5.4870, dt: 1271.47ms, fracRes: 0.2851, norm(attn): 0.1465, norm(output): 0.1621, norm(x): 0.2251, norm(y): 0.9956, norm:1.7443, tok/sec: 103086.70, flops:108.20, batch-reuse:1
@ 1435 train 5.3681 , allloss: 5.4113, dt: 1289.80ms, fracRes: 0.2849, norm(attn): 0.1426, norm(output): 0.1631, norm(x): 0.2254, norm(y): 0.9956, norm:1.6368, tok/sec: 101621.74, flops:106.67, batch-reuse:1
@ 1436 train 5.3477 , allloss: 5.3932, dt: 1267.27ms, fracRes: 0.2843, norm(attn): 0.1465, norm(output): 0.1631, norm(x): 0.2250, norm(y): 0.9955, norm:1.7475, tok/sec: 103428.27, flops:108.56, batch-reuse:1
@ 1437 train 5.3681 , allloss: 5.4110, dt: 1263.13ms, fracRes: 0.2861, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2256, norm(y): 0.9956, norm:1.6697, tok/sec: 103767.82, flops:108.92, batch-reuse:1
@ 1438 train 5.2994 , allloss: 5.3442, dt: 1262.29ms, fracRes: 0.2884, norm(attn): 0.1445, norm(output): 0.1641, norm(x): 0.2256, norm(y): 0.9956, norm:1.6818, tok/sec: 103836.48, flops:108.99, batch-reuse:1
@ 1439 train 5.3163 , allloss: 5.3595, dt: 1270.46ms, fracRes: 0.2887, norm(attn): 0.1426, norm(output): 0.1631, norm(x): 0.2254, norm(y): 0.9956, norm:1.6736, tok/sec: 103169.31, flops:108.29, batch-reuse:1
@ 1440 train 5.3523 , allloss: 5.3961, dt: 1264.94ms, fracRes: 0.2850, norm(attn): 0.1455, norm(output): 0.1621, norm(x): 0.2244, norm(y): 0.9955, norm:1.8307, tok/sec: 103618.89, flops:108.76, batch-reuse:1
@ 1441 train 5.3392 , allloss: 5.3825, dt: 1273.89ms, fracRes: 0.2887, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2261, norm(y): 0.9956, norm:1.5141, tok/sec: 102890.83, flops:108.00, batch-reuse:1
@ 1442 train 5.3637 , allloss: 5.4083, dt: 1273.24ms, fracRes: 0.2874, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2257, norm(y): 0.9956, norm:2.0486, tok/sec: 102943.78, flops:108.05, batch-reuse:1
@ 1443 train 5.2962 , allloss: 5.3418, dt: 1259.40ms, fracRes: 0.2844, norm(attn): 0.1465, norm(output): 0.1631, norm(x): 0.2244, norm(y): 0.9955, norm:1.5304, tok/sec: 104074.79, flops:109.24, batch-reuse:1
@ 1444 train 5.3211 , allloss: 5.3657, dt: 1265.66ms, fracRes: 0.2886, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2263, norm(y): 0.9956, norm:1.6109, tok/sec: 103560.56, flops:108.70, batch-reuse:1
@ 1445 train 5.4113 , allloss: 5.4598, dt: 1250.19ms, fracRes: 0.2868, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2255, norm(y): 0.9956, norm:1.9446, tok/sec: 104841.36, flops:110.04, batch-reuse:1
@ 1446 train 5.3885 , allloss: 5.4331, dt: 1266.41ms, fracRes: 0.2900, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2263, norm(y): 0.9956, norm:1.8043, tok/sec: 103498.94, flops:108.64, batch-reuse:1
@ 1447 train 5.3686 , allloss: 5.4148, dt: 1286.95ms, fracRes: 0.2907, norm(attn): 0.1445, norm(output): 0.1621, norm(x): 0.2263, norm(y): 0.9956, norm:1.8378, tok/sec: 101846.79, flops:106.90, batch-reuse:1
@ 1448 train 5.3287 , allloss: 5.3744, dt: 1288.20ms, fracRes: 0.2846, norm(attn): 0.1504, norm(output): 0.1621, norm(x): 0.2238, norm(y): 0.9955, norm:1.4979, tok/sec: 101747.98, flops:106.80, batch-reuse:1
@ 1449 train 5.4307 , allloss: 5.4724, dt: 1264.13ms, fracRes: 0.2962, norm(attn): 0.1406, norm(output): 0.1631, norm(x): 0.2285, norm(y): 0.9957, norm:1.7499, tok/sec: 103685.92, flops:108.83, batch-reuse:1
@ 1450 train 5.4064 , allloss: 5.4492, dt: 1269.52ms, fracRes: 0.2939, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2283, norm(y): 0.9956, norm:1.8738, tok/sec: 103245.49, flops:108.37, batch-reuse:1
@ 1451 train 5.4265 , allloss: 5.4724, dt: 1272.42ms, fracRes: 0.2952, norm(attn): 0.1475, norm(output): 0.1621, norm(x): 0.2292, norm(y): 0.9955, norm:1.6753, tok/sec: 103010.15, flops:108.12, batch-reuse:1
@ 1452 train 5.3014 , allloss: 5.3447, dt: 1266.29ms, fracRes: 0.2973, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2290, norm(y): 0.9956, norm:1.3634, tok/sec: 103508.39, flops:108.65, batch-reuse:1
@ 1453 train 5.3485 , allloss: 5.3912, dt: 1284.49ms, fracRes: 0.2929, norm(attn): 0.1445, norm(output): 0.1641, norm(x): 0.2288, norm(y): 0.9955, norm:1.4724, tok/sec: 102042.29, flops:107.11, batch-reuse:1
@ 1454 train 5.3524 , allloss: 5.3956, dt: 1267.94ms, fracRes: 0.2956, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2280, norm(y): 0.9957, norm:1.7010, tok/sec: 103373.91, flops:108.50, batch-reuse:1
@ 1455 train 5.2792 , allloss: 5.3223, dt: 1247.41ms, fracRes: 0.2910, norm(attn): 0.1465, norm(output): 0.1621, norm(x): 0.2273, norm(y): 0.9956, norm:1.5993, tok/sec: 105074.91, flops:110.29, batch-reuse:1
@ 1456 train 5.3256 , allloss: 5.3701, dt: 1267.13ms, fracRes: 0.2984, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2298, norm(y): 0.9956, norm:2.0668, tok/sec: 103440.03, flops:108.57, batch-reuse:1
@ 1457 train 5.3346 , allloss: 5.3815, dt: 1288.78ms, fracRes: 0.2978, norm(attn): 0.1445, norm(output): 0.1641, norm(x): 0.2301, norm(y): 0.9956, norm:1.7636, tok/sec: 101702.56, flops:106.75, batch-reuse:1
@ 1458 train 5.3684 , allloss: 5.4141, dt: 1255.28ms, fracRes: 0.2950, norm(attn): 0.1484, norm(output): 0.1650, norm(x): 0.2297, norm(y): 0.9955, norm:1.7847, tok/sec: 104416.25, flops:109.60, batch-reuse:1
@ 1459 train 5.3759 , allloss: 5.4199, dt: 1273.92ms, fracRes: 0.2930, norm(attn): 0.1455, norm(output): 0.1641, norm(x): 0.2303, norm(y): 0.9955, norm:1.6211, tok/sec: 102888.39, flops:107.99, batch-reuse:1
@ 1460 train 5.3130 , allloss: 5.3603, dt: 1267.66ms, fracRes: 0.2979, norm(attn): 0.1406, norm(output): 0.1621, norm(x): 0.2292, norm(y): 0.9956, norm:2.0734, tok/sec: 103396.64, flops:108.53, batch-reuse:1
@ 1461 train 5.2625 , allloss: 5.3049, dt: 1292.35ms, fracRes: 0.2960, norm(attn): 0.1436, norm(output): 0.1621, norm(x): 0.2295, norm(y): 0.9956, norm:1.9123, tok/sec: 101421.29, flops:106.46, batch-reuse:1
@ 1462 train 5.3238 , allloss: 5.3688, dt: 1287.48ms, fracRes: 0.2954, norm(attn): 0.1484, norm(output): 0.1660, norm(x): 0.2304, norm(y): 0.9955, norm:1.6518, tok/sec: 101805.41, flops:106.86, batch-reuse:1
@ 1463 train 5.3157 , allloss: 5.3613, dt: 1286.81ms, fracRes: 0.2985, norm(attn): 0.1445, norm(output): 0.1641, norm(x): 0.2312, norm(y): 0.9955, norm:1.4345, tok/sec: 101858.24, flops:106.91, batch-reuse:1
@ 1464 train 5.3263 , allloss: 5.3690, dt: 1255.17ms, fracRes: 0.2969, norm(attn): 0.1436, norm(output): 0.1641, norm(x): 0.2298, norm(y): 0.9955, norm:1.6922, tok/sec: 104425.75, flops:109.61, batch-reuse:1
@ 1465 train 5.2323 , allloss: 5.2764, dt: 1274.46ms, fracRes: 0.2992, norm(attn): 0.1445, norm(output): 0.1641, norm(x): 0.2303, norm(y): 0.9956, norm:1.6049, tok/sec: 102845.12, flops:107.95, batch-reuse:1
@ 1466 train 5.2283 , allloss: 5.2736, dt: 1284.70ms, fracRes: 0.2890, norm(attn): 0.1523, norm(output): 0.1641, norm(x): 0.2284, norm(y): 0.9954, norm:1.6931, tok/sec: 102025.42, flops:107.09, batch-reuse:1
@ 1467 train 5.3254 , allloss: 5.3687, dt: 1269.75ms, fracRes: 0.2981, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.2292, norm(y): 0.9957, norm:1.5361, tok/sec: 103226.98, flops:108.35, batch-reuse:1
@ 1468 train 5.3464 , allloss: 5.3895, dt: 1279.12ms, fracRes: 0.2965, norm(attn): 0.1426, norm(output): 0.1631, norm(x): 0.2297, norm(y): 0.9956, norm:1.8522, tok/sec: 102470.58, flops:107.56, batch-reuse:1
@ 1469 train 5.4625 , allloss: 5.5108, dt: 1310.13ms, fracRes: 0.2989, norm(attn): 0.1426, norm(output): 0.1621, norm(x): 0.2318, norm(y): 0.9956, norm:2.3235, tok/sec: 100044.84, flops:105.01, batch-reuse:1
@ 1470 train 5.3247 , allloss: 5.3676, dt: 1244.75ms, fracRes: 0.2945, norm(attn): 0.1455, norm(output): 0.1660, norm(x): 0.2307, norm(y): 0.9956, norm:1.7182, tok/sec: 105299.86, flops:110.53, batch-reuse:1
@ 1471 train 5.2272 , allloss: 5.2708, dt: 1271.46ms, fracRes: 0.2984, norm(attn): 0.1465, norm(output): 0.1631, norm(x): 0.2310, norm(y): 0.9956, norm:1.7812, tok/sec: 103088.17, flops:108.20, batch-reuse:1
@ 1472 train 5.2999 , allloss: 5.3432, dt: 1281.16ms, fracRes: 0.3052, norm(attn): 0.1416, norm(output): 0.1631, norm(x): 0.2331, norm(y): 0.9956, norm:1.9298, tok/sec: 102307.08, flops:107.38, batch-reuse:1
@ 1473 train 5.3483 , allloss: 5.3932, dt: 1272.59ms, fracRes: 0.3027, norm(attn): 0.1455, norm(output): 0.1621, norm(x): 0.2322, norm(y): 0.9955, norm:1.8443, tok/sec: 102995.99, flops:108.11, batch-reuse:1
@ 1474 train 5.5100 , allloss: 5.5566, dt: 1264.95ms, fracRes: 0.3053, norm(attn): 0.1455, norm(output): 0.1641, norm(x): 0.2340, norm(y): 0.9955, norm:1.8064, tok/sec: 103618.05, flops:108.76, batch-reuse:1
@ 1475 train 5.3468 , allloss: 5.3903, dt: 1277.15ms, fracRes: 0.2967, norm(attn): 0.1455, norm(output): 0.1660, norm(x): 0.2316, norm(y): 0.9955, norm:2.0506, tok/sec: 102628.61, flops:107.72, batch-reuse:1
@ 1476 train 5.2727 , allloss: 5.3160, dt: 1279.67ms, fracRes: 0.2937, norm(attn): 0.1455, norm(output): 0.1660, norm(x): 0.2311, norm(y): 0.9955, norm:1.8217, tok/sec: 102426.43, flops:107.51, batch-reuse:1
@ 1477 train 5.3014 , allloss: 5.3456, dt: 1253.35ms, fracRes: 0.2913, norm(attn): 0.1475, norm(output): 0.1660, norm(x): 0.2306, norm(y): 0.9954, norm:1.6524, tok/sec: 104577.69, flops:109.77, batch-reuse:1
@ 1478 train 5.2638 , allloss: 5.3082, dt: 1274.29ms, fracRes: 0.2944, norm(attn): 0.1436, norm(output): 0.1641, norm(x): 0.2314, norm(y): 0.9956, norm:1.8303, tok/sec: 102858.71, flops:107.96, batch-reuse:1
@ 1479 train 5.2929 , allloss: 5.3364, dt: 1274.13ms, fracRes: 0.2970, norm(attn): 0.1455, norm(output): 0.1650, norm(x): 0.2321, norm(y): 0.9956, norm:1.8133, tok/sec: 102871.49, flops:107.98, batch-reuse:1
@ 1480 train 5.3229 , allloss: 5.3660, dt: 1278.66ms, fracRes: 0.2903, norm(attn): 0.1475, norm(output): 0.1641, norm(x): 0.2304, norm(y): 0.9955, norm:1.4942, tok/sec: 102507.44, flops:107.60, batch-reuse:1
@ 1481 train 5.2978 , allloss: 5.3410, dt: 1264.34ms, fracRes: 0.2957, norm(attn): 0.1465, norm(output): 0.1641, norm(x): 0.2307, norm(y): 0.9955, norm:1.7370, tok/sec: 103668.48, flops:108.81, batch-reuse:1
@ 1482 train 5.3349 , allloss: 5.3792, dt: 1250.06ms, fracRes: 0.2981, norm(attn): 0.1484, norm(output): 0.1660, norm(x): 0.2326, norm(y): 0.9955, norm:1.5506, tok/sec: 104852.54, flops:110.06, batch-reuse:1
@ 1483 train 5.3679 , allloss: 5.4113, dt: 1261.35ms, fracRes: 0.2984, norm(attn): 0.1455, norm(output): 0.1660, norm(x): 0.2321, norm(y): 0.9955, norm:1.7553, tok/sec: 103914.24, flops:109.07, batch-reuse:1
@ 1484 train 5.4169 , allloss: 5.4590, dt: 1267.77ms, fracRes: 0.2992, norm(attn): 0.1465, norm(output): 0.1660, norm(x): 0.2336, norm(y): 0.9955, norm:1.6696, tok/sec: 103387.70, flops:108.52, batch-reuse:1
@ 1485 train 5.5006 , allloss: 5.5430, dt: 1253.94ms, fracRes: 0.2993, norm(attn): 0.1494, norm(output): 0.1670, norm(x): 0.2343, norm(y): 0.9955, norm:1.6859, tok/sec: 104528.34, flops:109.72, batch-reuse:1
@ 1486 train 5.4657 , allloss: 5.5065, dt: 1285.89ms, fracRes: 0.2979, norm(attn): 0.1475, norm(output): 0.1670, norm(x): 0.2342, norm(y): 0.9955, norm:2.2081, tok/sec: 101931.31, flops:106.99, batch-reuse:1
@ 1487 train 5.4464 , allloss: 5.4885, dt: 1247.09ms, fracRes: 0.3023, norm(attn): 0.1455, norm(output): 0.1660, norm(x): 0.2344, norm(y): 0.9956, norm:1.7126, tok/sec: 105101.91, flops:110.32, batch-reuse:1
@ 1488 train 5.4172 , allloss: 5.4587, dt: 1271.19ms, fracRes: 0.2990, norm(attn): 0.1514, norm(output): 0.1650, norm(x): 0.2336, norm(y): 0.9955, norm:1.9219, tok/sec: 103109.36, flops:108.23, batch-reuse:1
@ 1489 train 5.5541 , allloss: 5.5959, dt: 1252.20ms, fracRes: 0.2995, norm(attn): 0.1484, norm(output): 0.1670, norm(x): 0.2353, norm(y): 0.9955, norm:1.5974, tok/sec: 104673.74, flops:109.87, batch-reuse:1
@ 1490 train 5.5801 , allloss: 5.6227, dt: 1274.01ms, fracRes: 0.3014, norm(attn): 0.1455, norm(output): 0.1660, norm(x): 0.2348, norm(y): 0.9955, norm:2.0674, tok/sec: 102881.75, flops:107.99, batch-reuse:1
@ 1491 train 5.5801 , allloss: 5.6211, dt: 1250.70ms, fracRes: 0.3005, norm(attn): 0.1494, norm(output): 0.1670, norm(x): 0.2355, norm(y): 0.9955, norm:1.9372, tok/sec: 104799.31, flops:110.00, batch-reuse:1
@ 1492 train 5.4322 , allloss: 5.4748, dt: 1267.30ms, fracRes: 0.3046, norm(attn): 0.1465, norm(output): 0.1660, norm(x): 0.2346, norm(y): 0.9956, norm:1.6857, tok/sec: 103425.88, flops:108.56, batch-reuse:1
@ 1493 train 5.4003 , allloss: 5.4444, dt: 1266.30ms, fracRes: 0.3057, norm(attn): 0.1465, norm(output): 0.1660, norm(x): 0.2363, norm(y): 0.9955, norm:1.5724, tok/sec: 103507.70, flops:108.64, batch-reuse:1
@ 1494 train 5.4230 , allloss: 5.4658, dt: 1251.07ms, fracRes: 0.3039, norm(attn): 0.1484, norm(output): 0.1670, norm(x): 0.2365, norm(y): 0.9954, norm:1.4507, tok/sec: 104768.00, flops:109.97, batch-reuse:1
@ 1495 train 5.3999 , allloss: 5.4420, dt: 1262.83ms, fracRes: 0.3088, norm(attn): 0.1426, norm(output): 0.1670, norm(x): 0.2376, norm(y): 0.9955, norm:1.7173, tok/sec: 103791.90, flops:108.94, batch-reuse:1
@ 1496 train 5.4442 , allloss: 5.4888, dt: 1257.18ms, fracRes: 0.3083, norm(attn): 0.1494, norm(output): 0.1660, norm(x): 0.2372, norm(y): 0.9955, norm:1.9315, tok/sec: 104258.86, flops:109.43, batch-reuse:1
@ 1497 train 5.3066 , allloss: 5.3480, dt: 1267.18ms, fracRes: 0.3111, norm(attn): 0.1465, norm(output): 0.1680, norm(x): 0.2386, norm(y): 0.9956, norm:2.0020, tok/sec: 103436.06, flops:108.57, batch-reuse:1
@ 1498 train 5.5004 , allloss: 5.5439, dt: 1281.86ms, fracRes: 0.3127, norm(attn): 0.1465, norm(output): 0.1670, norm(x): 0.2398, norm(y): 0.9955, norm:1.6699, tok/sec: 102251.06, flops:107.33, batch-reuse:1
@ 1499 train 5.5048 , allloss: 5.5495, dt: 1260.85ms, fracRes: 0.3201, norm(attn): 0.1436, norm(output): 0.1660, norm(x): 0.2418, norm(y): 0.9956, norm:2.3748, tok/sec: 103955.37, flops:109.11, batch-reuse:1
@ 1500 train 5.5166 , allloss: 5.5582, dt: 1282.60ms, fracRes: 0.3139, norm(attn): 0.1436, norm(output): 0.1670, norm(x): 0.2400, norm(y): 0.9955, norm:1.7270, tok/sec: 102192.77, flops:107.26, batch-reuse:1
@ 1501 train 5.3994 , allloss: 5.4406, dt: 1251.19ms, fracRes: 0.3053, norm(attn): 0.1484, norm(output): 0.1689, norm(x): 0.2380, norm(y): 0.9954, norm:1.8013, tok/sec: 104757.80, flops:109.96, batch-reuse:1
@ 1502 train 5.4238 , allloss: 5.4677, dt: 1291.44ms, fracRes: 0.3071, norm(attn): 0.1504, norm(output): 0.1680, norm(x): 0.2379, norm(y): 0.9954, norm:1.6036, tok/sec: 101493.30, flops:106.53, batch-reuse:1
@ 1503 train 5.4928 , allloss: 5.5336, dt: 1262.11ms, fracRes: 0.3077, norm(attn): 0.1436, norm(output): 0.1670, norm(x): 0.2379, norm(y): 0.9955, norm:2.0246, tok/sec: 103851.23, flops:109.01, batch-reuse:1
@ 1504 train 5.5077 , allloss: 5.5477, dt: 1277.51ms, fracRes: 0.3072, norm(attn): 0.1436, norm(output): 0.1680, norm(x): 0.2387, norm(y): 0.9955, norm:1.8331, tok/sec: 102599.52, flops:107.69, batch-reuse:1
@ 1505 train 5.4313 , allloss: 5.4729, dt: 1254.63ms, fracRes: 0.3069, norm(attn): 0.1445, norm(output): 0.1670, norm(x): 0.2384, norm(y): 0.9954, norm:1.5401, tok/sec: 104470.69, flops:109.66, batch-reuse:1
@ 1506 train 5.5091 , allloss: 5.5526, dt: 1284.93ms, fracRes: 0.3040, norm(attn): 0.1514, norm(output): 0.1680, norm(x): 0.2374, norm(y): 0.9954, norm:1.8494, tok/sec: 102007.28, flops:107.07, batch-reuse:1
@ 1507 train 5.4851 , allloss: 5.5279, dt: 1300.43ms, fracRes: 0.3059, norm(attn): 0.1484, norm(output): 0.1670, norm(x): 0.2385, norm(y): 0.9954, norm:1.6296, tok/sec: 100791.66, flops:105.79, batch-reuse:1
@ 1508 train 5.4611 , allloss: 5.5010, dt: 1268.95ms, fracRes: 0.3078, norm(attn): 0.1416, norm(output): 0.1680, norm(x): 0.2383, norm(y): 0.9955, norm:1.5427, tok/sec: 103291.56, flops:108.42, batch-reuse:1
@ 1509 train 5.4371 , allloss: 5.4759, dt: 1288.66ms, fracRes: 0.3048, norm(attn): 0.1445, norm(output): 0.1670, norm(x): 0.2380, norm(y): 0.9955, norm:2.0384, tok/sec: 101712.02, flops:106.76, batch-reuse:1
@ 1510 train 5.4791 , allloss: 5.5208, dt: 1267.61ms, fracRes: 0.3053, norm(attn): 0.1475, norm(output): 0.1680, norm(x): 0.2378, norm(y): 0.9954, norm:1.6440, tok/sec: 103400.61, flops:108.53, batch-reuse:1
@ 1511 train 5.5056 , allloss: 5.5477, dt: 1269.01ms, fracRes: 0.3083, norm(attn): 0.1465, norm(output): 0.1680, norm(x): 0.2384, norm(y): 0.9955, norm:1.8069, tok/sec: 103286.48, flops:108.41, batch-reuse:1
@ 1512 train 5.5410 , allloss: 5.5848, dt: 1272.66ms, fracRes: 0.3030, norm(attn): 0.1523, norm(output): 0.1680, norm(x): 0.2380, norm(y): 0.9954, norm:1.9097, tok/sec: 102990.80, flops:108.10, batch-reuse:1
@ 1513 train 5.4380 , allloss: 5.4803, dt: 1254.08ms, fracRes: 0.3020, norm(attn): 0.1514, norm(output): 0.1689, norm(x): 0.2379, norm(y): 0.9954, norm:1.5262, tok/sec: 104516.57, flops:109.70, batch-reuse:1
@ 1514 train 5.5815 , allloss: 5.6231, dt: 1232.25ms, fracRes: 0.3059, norm(attn): 0.1455, norm(output): 0.1680, norm(x): 0.2395, norm(y): 0.9955, norm:1.7244, tok/sec: 106367.74, flops:111.65, batch-reuse:1
@ 1515 train 5.4526 , allloss: 5.4934, dt: 1268.83ms, fracRes: 0.3055, norm(attn): 0.1475, norm(output): 0.1670, norm(x): 0.2381, norm(y): 0.9955, norm:1.8030, tok/sec: 103301.48, flops:108.43, batch-reuse:1
@ 1516 train 5.3256 , allloss: 5.3673, dt: 1267.21ms, fracRes: 0.2998, norm(attn): 0.1543, norm(output): 0.1680, norm(x): 0.2369, norm(y): 0.9953, norm:1.6024, tok/sec: 103433.78, flops:108.57, batch-reuse:1
@ 1517 train 5.4000 , allloss: 5.4396, dt: 1272.53ms, fracRes: 0.3145, norm(attn): 0.1426, norm(output): 0.1689, norm(x): 0.2412, norm(y): 0.9956, norm:1.7481, tok/sec: 103001.22, flops:108.11, batch-reuse:1
@ 1518 train 5.4017 , allloss: 5.4415, dt: 1274.04ms, fracRes: 0.3102, norm(attn): 0.1455, norm(output): 0.1680, norm(x): 0.2406, norm(y): 0.9955, norm:2.0011, tok/sec: 102879.32, flops:107.99, batch-reuse:1
@ 1519 train 5.4160 , allloss: 5.4569, dt: 1272.37ms, fracRes: 0.3092, norm(attn): 0.1504, norm(output): 0.1670, norm(x): 0.2406, norm(y): 0.9954, norm:1.9026, tok/sec: 103013.82, flops:108.13, batch-reuse:1
@ 1520 train 5.4326 , allloss: 5.4751, dt: 1260.71ms, fracRes: 0.3125, norm(attn): 0.1484, norm(output): 0.1670, norm(x): 0.2405, norm(y): 0.9955, norm:1.4764, tok/sec: 103966.89, flops:109.13, batch-reuse:1
@ 1521 train 5.4165 , allloss: 5.4590, dt: 1268.51ms, fracRes: 0.3134, norm(attn): 0.1465, norm(output): 0.1670, norm(x): 0.2414, norm(y): 0.9955, norm:1.5116, tok/sec: 103327.19, flops:108.46, batch-reuse:1
@ 1522 train 5.4140 , allloss: 5.4560, dt: 1268.83ms, fracRes: 0.3111, norm(attn): 0.1465, norm(output): 0.1670, norm(x): 0.2408, norm(y): 0.9955, norm:1.5178, tok/sec: 103301.75, flops:108.43, batch-reuse:1
@ 1523 train 5.4576 , allloss: 5.4988, dt: 1290.71ms, fracRes: 0.3054, norm(attn): 0.1475, norm(output): 0.1689, norm(x): 0.2396, norm(y): 0.9954, norm:1.7124, tok/sec: 101550.57, flops:106.59, batch-reuse:1
@ 1524 train 5.4138 , allloss: 5.4539, dt: 1249.75ms, fracRes: 0.3049, norm(attn): 0.1455, norm(output): 0.1689, norm(x): 0.2406, norm(y): 0.9954, norm:1.6091, tok/sec: 104878.72, flops:110.08, batch-reuse:1
@ 1525 train 5.3965 , allloss: 5.4382, dt: 1302.70ms, fracRes: 0.2967, norm(attn): 0.1533, norm(output): 0.1709, norm(x): 0.2379, norm(y): 0.9953, norm:1.8255, tok/sec: 100615.60, flops:105.61, batch-reuse:1
@ 1526 train 5.4842 , allloss: 5.5265, dt: 1288.52ms, fracRes: 0.3047, norm(attn): 0.1484, norm(output): 0.1689, norm(x): 0.2407, norm(y): 0.9954, norm:1.6511, tok/sec: 101723.03, flops:106.77, batch-reuse:1
@ 1527 train 5.3849 , allloss: 5.4258, dt: 1260.09ms, fracRes: 0.3035, norm(attn): 0.1484, norm(output): 0.1689, norm(x): 0.2402, norm(y): 0.9955, norm:1.5754, tok/sec: 104017.80, flops:109.18, batch-reuse:1
@ 1528 train 5.4381 , allloss: 5.4792, dt: 1273.25ms, fracRes: 0.3058, norm(attn): 0.1494, norm(output): 0.1689, norm(x): 0.2412, norm(y): 0.9954, norm:1.5948, tok/sec: 102942.80, flops:108.05, batch-reuse:1
@ 1529 train 5.3595 , allloss: 5.4002, dt: 1278.77ms, fracRes: 0.3056, norm(attn): 0.1514, norm(output): 0.1689, norm(x): 0.2406, norm(y): 0.9954, norm:1.5300, tok/sec: 102498.48, flops:107.59, batch-reuse:1
@ 1530 train 5.3976 , allloss: 5.4397, dt: 1263.48ms, fracRes: 0.3068, norm(attn): 0.1523, norm(output): 0.1689, norm(x): 0.2408, norm(y): 0.9954, norm:1.8753, tok/sec: 103738.98, flops:108.89, batch-reuse:1
@ 1531 train 5.3173 , allloss: 5.3575, dt: 1289.92ms, fracRes: 0.3051, norm(attn): 0.1484, norm(output): 0.1699, norm(x): 0.2403, norm(y): 0.9955, norm:1.6012, tok/sec: 101612.38, flops:106.66, batch-reuse:1
@ 1532 train 5.3766 , allloss: 5.4164, dt: 1262.19ms, fracRes: 0.3052, norm(attn): 0.1475, norm(output): 0.1709, norm(x): 0.2396, norm(y): 0.9955, norm:1.7469, tok/sec: 103845.29, flops:109.00, batch-reuse:1
@ 1533 train 5.3314 , allloss: 5.3735, dt: 1255.94ms, fracRes: 0.3054, norm(attn): 0.1523, norm(output): 0.1699, norm(x): 0.2397, norm(y): 0.9955, norm:2.0326, tok/sec: 104361.60, flops:109.54, batch-reuse:1
@ 1534 train 5.3939 , allloss: 5.4345, dt: 1268.29ms, fracRes: 0.3074, norm(attn): 0.1523, norm(output): 0.1699, norm(x): 0.2401, norm(y): 0.9955, norm:1.3848, tok/sec: 103345.76, flops:108.48, batch-reuse:1
@ 1535 train 5.4140 , allloss: 5.4540, dt: 1272.13ms, fracRes: 0.3070, norm(attn): 0.1484, norm(output): 0.1709, norm(x): 0.2406, norm(y): 0.9955, norm:1.6286, tok/sec: 103033.75, flops:108.15, batch-reuse:1
@ 1536 train 5.3692 , allloss: 5.4085, dt: 1263.31ms, fracRes: 0.3051, norm(attn): 0.1504, norm(output): 0.1689, norm(x): 0.2395, norm(y): 0.9954, norm:1.6477, tok/sec: 103752.92, flops:108.90, batch-reuse:1
@ 1537 train 5.3613 , allloss: 5.4005, dt: 1262.03ms, fracRes: 0.3063, norm(attn): 0.1504, norm(output): 0.1699, norm(x): 0.2405, norm(y): 0.9954, norm:2.0324, tok/sec: 103857.84, flops:109.01, batch-reuse:1
@ 1538 train 5.3092 , allloss: 5.3521, dt: 1284.26ms, fracRes: 0.3052, norm(attn): 0.1553, norm(output): 0.1689, norm(x): 0.2402, norm(y): 0.9953, norm:1.6845, tok/sec: 102060.35, flops:107.13, batch-reuse:1
@ 1539 train 5.4046 , allloss: 5.4453, dt: 1285.33ms, fracRes: 0.3138, norm(attn): 0.1465, norm(output): 0.1689, norm(x): 0.2426, norm(y): 0.9955, norm:1.7126, tok/sec: 101975.25, flops:107.04, batch-reuse:1
@ 1540 train 5.3578 , allloss: 5.3977, dt: 1282.24ms, fracRes: 0.3112, norm(attn): 0.1484, norm(output): 0.1670, norm(x): 0.2410, norm(y): 0.9955, norm:1.6244, tok/sec: 102221.25, flops:107.29, batch-reuse:1
@ 1541 train 5.3302 , allloss: 5.3708, dt: 1316.30ms, fracRes: 0.3124, norm(attn): 0.1465, norm(output): 0.1689, norm(x): 0.2416, norm(y): 0.9955, norm:1.5837, tok/sec: 99575.87, flops:104.52, batch-reuse:1
@ 1542 train 5.3852 , allloss: 5.4264, dt: 1300.50ms, fracRes: 0.3062, norm(attn): 0.1533, norm(output): 0.1670, norm(x): 0.2397, norm(y): 0.9954, norm:1.6496, tok/sec: 100785.88, flops:105.79, batch-reuse:1
@ 1543 train 5.6895 , allloss: 5.7301, dt: 1274.67ms, fracRes: 0.3172, norm(attn): 0.1523, norm(output): 0.1699, norm(x): 0.2448, norm(y): 0.9954, norm:2.4682, tok/sec: 102828.46, flops:107.93, batch-reuse:1
@ 1544 train 5.2819 , allloss: 5.3228, dt: 1286.26ms, fracRes: 0.3107, norm(attn): 0.1514, norm(output): 0.1670, norm(x): 0.2409, norm(y): 0.9955, norm:2.1809, tok/sec: 101901.29, flops:106.96, batch-reuse:1
@ 1545 train 5.3838 , allloss: 5.4261, dt: 1282.18ms, fracRes: 0.3124, norm(attn): 0.1504, norm(output): 0.1680, norm(x): 0.2425, norm(y): 0.9954, norm:1.9185, tok/sec: 102225.53, flops:107.30, batch-reuse:1
@ 1546 train 5.8428 , allloss: 5.8840, dt: 1300.19ms, fracRes: 0.3129, norm(attn): 0.1504, norm(output): 0.1709, norm(x): 0.2435, norm(y): 0.9953, norm:1.9588, tok/sec: 100809.63, flops:105.81, batch-reuse:1
@ 1547 train 5.4104 , allloss: 5.4516, dt: 1267.38ms, fracRes: 0.3143, norm(attn): 0.1543, norm(output): 0.1709, norm(x): 0.2441, norm(y): 0.9954, norm:2.3176, tok/sec: 103419.81, flops:108.55, batch-reuse:1
@ 1548 train 5.5232 , allloss: 5.5661, dt: 1258.77ms, fracRes: 0.3198, norm(attn): 0.1504, norm(output): 0.1699, norm(x): 0.2451, norm(y): 0.9955, norm:2.1813, tok/sec: 104127.16, flops:109.30, batch-reuse:1
@ 1549 train 5.4652 , allloss: 5.5064, dt: 1277.27ms, fracRes: 0.3205, norm(attn): 0.1465, norm(output): 0.1680, norm(x): 0.2443, norm(y): 0.9955, norm:1.7319, tok/sec: 102618.98, flops:107.71, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5273,     0.4746,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2363,     0.6914,     0.0713,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1572,     0.6562,     0.0835,     0.1025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1455,     0.2480,     0.0967,     0.1270,     0.3828,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1123,     0.1011,     0.1084,     0.1436,     0.3594,     0.1748,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1318,     0.0693,     0.2197,     0.2139,     0.2100,     0.0708,     0.0845,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1797,     0.0554,     0.2422,     0.2197,     0.0625,     0.0315,     0.0625,     0.1475,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0850,     0.0156,     0.2051,     0.2695,     0.2734,     0.0344,     0.0289,     0.0762,     0.0114,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1060,     0.0850,     0.1377,     0.0820,     0.0339,     0.0361,     0.0649,     0.3320,     0.0510,     0.0708,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0796,     0.0154,     0.1719,     0.2930,     0.2520,     0.0271,     0.0305,     0.0518,     0.0082,     0.0593,     0.0113,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0718,     0.0708,     0.0510,     0.0737,     0.0732,     0.0457,     0.1138,     0.0408,     0.1543,     0.0476,     0.1670,     0.0903,     0.0000,     0.0000,     0.0000],
        [    0.0693,     0.0801,     0.0359,     0.0417,     0.0503,     0.0476,     0.0623,     0.0476,     0.1504,     0.0850,     0.1904,     0.0942,     0.0459,     0.0000,     0.0000],
        [    0.0615,     0.0053,     0.2578,     0.2617,     0.1611,     0.0114,     0.0110,     0.0583,     0.0031,     0.0383,     0.0029,     0.0111,     0.1152,     0.0015,     0.0000],
        [    0.0605,     0.0036,     0.2695,     0.3730,     0.1406,     0.0059,     0.0037,     0.0166,     0.0029,     0.0398,     0.0022,     0.0097,     0.0703,     0.0015,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0067, -0.0710, -0.0160,  ...,  0.0253,  0.0271,  0.0532],
        [-0.0206,  0.0195,  0.0362,  ..., -0.0013, -0.0359, -0.0118],
        [-0.0299,  0.0565,  0.0253,  ...,  0.0226, -0.0122, -0.0590],
        ...,
        [-0.0034,  0.0259,  0.0504,  ..., -0.0097, -0.0246, -0.0588],
        [-0.0604,  0.0595,  0.0458,  ...,  0.0157, -0.0546, -0.0295],
        [ 0.0098, -0.0468, -0.0621,  ..., -0.0425,  0.0418,  0.0576]], device='cuda:0', requires_grad=True)
K: tensor([-0.5352,  1.3438,  1.8281, -1.9531,  0.0698,  0.8242, -0.5664, -0.8594,  0.8086,  1.3047,  0.2109,  1.7188, -0.6719,  0.9727,  0.1406,  1.1875, -0.6172,  0.8984,  0.4688, -0.7188,  1.2734, -1.1094,  0.7070,  0.8945,  0.6484, -1.4141, -0.6562,  0.3945, -1.0469,  1.1641,  1.5000, -0.8789,
         0.7969,  0.8945,  1.6328, -0.6602, -1.2422,  0.1484,  0.1934, -0.0811,  1.1172,  0.1875, -1.1016,  0.3125, -0.6719,  1.5156,  0.1650, -1.1172, -1.4766, -0.8008, -0.7266, -1.5703, -0.2227, -0.5859,  0.4941, -1.6641, -1.1016, -1.0703,  2.0312,  0.8125, -0.0334,  0.8945,  0.3301, -0.6523],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0267,  0.0337, -0.0087,  ...,  0.0306, -0.0116, -0.0208],
        [ 0.0266, -0.0459, -0.0593,  ...,  0.0334,  0.0249,  0.0374],
        [ 0.0057, -0.0065,  0.0017,  ...,  0.0284,  0.0034,  0.0453],
        ...,
        [ 0.0178, -0.0350,  0.0028,  ..., -0.0042,  0.0199,  0.0283],
        [ 0.0349, -0.0111, -0.0365,  ...,  0.0024,  0.0136,  0.0467],
        [-0.0145,  0.0010,  0.0342,  ...,  0.0310, -0.0214, -0.0317]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.7852, -1.1016, -1.1172,  0.9297,  1.5703, -0.3008,  1.1797,  1.7188, -0.2139, -1.2656, -0.7852, -1.3359,  0.4023, -0.2734,  1.0000, -0.9766,  1.2656, -0.3828, -0.7148,  0.3398, -1.0703,  0.6602, -0.7773,  0.2793, -0.6094,  0.5156,  0.9336, -1.4844,  0.1377, -0.5938, -0.4160,  1.4766,
        -1.1250, -1.1953, -1.2188,  1.3906,  0.9961, -1.2344, -0.9961,  0.2314, -0.4883, -0.4473,  1.0391, -1.3125,  0.2168, -0.2949, -0.4590,  0.6523,  0.5898,  2.2969,  0.3105,  0.7383,  1.9766,  0.8516, -1.2500,  1.5469,  1.1250,  1.2734, -1.3203, -1.2266, -1.6094, -0.5430, -0.5898,  1.9141],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1021,  0.5977,  0.9688, -0.0610, -0.4609, -0.4121, -0.0547, -1.0156, -0.2119, -0.9766, -0.8203,  0.2295, -0.9648, -0.6289],
        [ 0.0000,  1.0781, -1.2031,  0.3203,  0.0236,  0.6758,  0.8828, -0.5820,  1.2500,  0.1240,  1.4844,  0.3828, -0.9531,  1.4453,  1.7031],
        [ 0.0000,  1.4297, -0.6328, -0.4316,  0.3516,  0.9336,  1.5625,  0.2520,  1.2578,  0.3086,  1.6094,  1.2109, -0.0513,  1.3906,  2.3438],
        [ 0.0000,  0.5352, -0.4062, -0.1387,  0.9688,  0.5898,  0.8320, -0.2334,  0.8242, -0.2461,  0.4980, -0.6914, -0.6367,  0.4902,  0.6562],
        [ 0.0000, -0.1050, -0.0359,  0.2461,  1.1641,  0.4434,  0.3809, -0.5391,  0.0129, -0.2617, -0.1484, -0.6719, -0.1377, -0.0815, -0.0437],
        [ 0.0000, -0.6445,  0.5078,  0.4824,  0.4629, -0.6211, -0.4473,  0.3477, -1.0000,  0.4258, -1.1328,  0.1348,  0.3438, -1.5000, -0.8359],
        [ 0.0000, -1.1719,  0.2988,  0.2021, -1.0547, -1.7422, -1.0547, -0.1992, -0.5859, -0.2373, -0.7539,  0.1836,  0.1060, -0.3711, -0.9805],
        [ 0.0000, -1.6953,  0.8828,  1.1562,  1.1719, -0.9062, -1.0703, -0.1050, -2.0156, -0.1865, -2.0000, -1.7109,  0.1416, -2.8281, -3.5625],
        [ 0.0000, -0.2178,  0.2598, -0.2578, -1.1328, -1.0781, -0.4922,  1.1484, -0.7305, -0.4023, -1.1875,  0.7734,  0.9766, -0.3906, -0.1260],
        [ 0.0000, -1.6484,  0.7695,  1.3047,  1.1484, -1.0781, -0.9609, -0.4297, -2.2812, -0.2969, -1.9531, -1.8594, -0.0306, -3.0312, -3.6250],
        [ 0.0000, -0.0130, -0.3418,  0.0292,  0.0176, -0.4512,  0.4590, -0.5664,  0.7656, -0.4102,  0.8438,  0.2285, -0.2119,  0.5703,  0.5664],
        [ 0.0000,  0.1406, -0.6641, -0.5078, -0.3223, -0.3789, -0.1118, -0.3789,  0.7695,  0.2021,  1.0078,  0.3066, -0.4141,  1.1562,  0.6289],
        [ 0.0000, -2.4531,  1.4297,  1.4453,  0.9648, -1.6797, -1.7188, -0.0515, -3.0000, -0.4746, -3.0625, -1.7109,  0.6289, -3.7031, -4.8750],
        [ 0.0000, -2.8125,  1.4922,  1.8125,  0.8438, -2.3438, -2.7969, -1.2969, -3.0469, -0.4219, -3.3438, -1.8281,  0.1504, -3.6719, -6.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5636],
        [0.2161],
        [0.1753],
        [0.1652],
        [0.1474],
        [0.1425],
        [0.0963],
        [0.0892],
        [0.1117],
        [0.0614],
        [0.0681],
        [0.0325],
        [0.0569],
        [0.0543]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7031,     0.2207,     0.0776,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0008,     0.0021,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0001,     0.0002,     0.0004,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4375,     0.1079,     0.0608,     0.0566,     0.0762,     0.0742,     0.1865,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3359,     0.0610,     0.1162,     0.0864,     0.0454,     0.0306,     0.1768,     0.1475,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0002,     0.0005,     0.0006,     0.0008,     0.0004,     0.0102,     0.0041,     0.0156,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0001,     0.0007,     0.0010,     0.0002,     0.0001,     0.0038,     0.0369,     0.0008,     0.0090,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0040,     0.1729,     0.0742,     0.1475,     0.1245,     0.0796,     0.0496,     0.0410,     0.0184,     0.0796,     0.1094,     0.0996,     0.0000,     0.0000,     0.0000],
        [    0.1504,     0.0275,     0.0879,     0.0464,     0.0369,     0.0231,     0.0613,     0.1123,     0.0361,     0.0518,     0.0081,     0.1738,     0.1846,     0.0000,     0.0000],
        [    0.9531,     0.0001,     0.0003,     0.0005,     0.0006,     0.0002,     0.0071,     0.0031,     0.0141,     0.0026,     0.0000,     0.0016,     0.0021,     0.0134,     0.0000],
        [    0.7070,     0.0075,     0.0070,     0.0156,     0.0120,     0.0027,     0.0520,     0.0148,     0.0344,     0.0461,     0.0016,     0.0347,     0.0160,     0.0349,     0.0123]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0088,     -0.0232,      0.0273,  ...,     -0.0124,      0.0125,      0.0135],
        [     0.0232,     -0.0151,      0.0001,  ...,      0.0260,     -0.0072,     -0.0054],
        [    -0.0028,     -0.0533,     -0.0010,  ...,      0.0172,     -0.0062,      0.0108],
        ...,
        [    -0.0073,     -0.0025,     -0.0362,  ...,      0.0006,     -0.0296,     -0.0098],
        [    -0.0004,      0.0077,     -0.0037,  ...,      0.0582,      0.0308,      0.0050],
        [     0.0271,     -0.0573,     -0.0225,  ...,      0.0061,      0.0127,      0.0136]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1016, -0.8789, -1.4688,  1.1172, -2.1719, -0.6055,  3.0781, -1.4297,  1.7891,  2.3594,  0.7617, -0.7617,  1.4609,  0.9062,  1.4141,  1.5312, -1.4609,  1.5078,  1.2734, -0.7383,  1.5312, -1.6094, -1.8125, -1.4609,  1.2031,  2.0469,  0.8633,  2.0625, -0.7930,  1.6172,  1.7266,  2.1562,
         2.7500,  1.7344,  0.9531, -1.1250,  2.7188, -1.3828,  0.7188, -1.3047,  0.9102,  1.6406, -0.8516,  1.2422,  2.0938,  1.6328,  1.0781,  0.7578,  1.6875,  1.4297, -1.5703,  0.4512, -0.6289, -0.3125, -1.5781,  1.7969,  1.3047, -2.2188, -1.5781,  2.0312, -1.3594, -2.5156,  1.9844, -2.2500],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0216,     -0.0011,     -0.0038,  ...,      0.0020,     -0.0173,      0.0077],
        [     0.0022,     -0.0038,      0.0000,  ...,      0.0446,      0.0287,     -0.0263],
        [    -0.0027,     -0.0172,     -0.0065,  ...,     -0.0075,     -0.0281,      0.0531],
        ...,
        [    -0.0236,      0.0415,      0.0075,  ...,      0.0465,      0.0456,     -0.0287],
        [    -0.0186,      0.0044,     -0.0156,  ...,      0.0053,     -0.0067,      0.0444],
        [    -0.0123,     -0.0004,      0.0144,  ...,      0.0303,      0.0524,     -0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0781,  2.4688, -0.0251, -0.1089,  1.2578,  0.4844,  0.6445,  0.8906,  1.0703,  0.2393, -1.8281,  1.4688, -1.5703, -0.5352, -0.5352, -0.4609,  0.2734, -0.3906, -2.0000,  1.1250,  0.2354,  1.3047,  0.7266, -0.3828, -1.3203,  0.4102, -0.9375,  0.2109,  0.8047, -1.0703, -0.4297, -0.2891,
         0.9453, -0.7227, -0.7969,  0.1865,  1.4219,  2.0469, -0.8438,  0.8477, -0.8945,  0.5977,  0.3770, -1.4453,  0.2383, -0.1777, -1.3672, -0.9414, -1.8516, -0.1826,  0.9023,  0.2617,  1.5703,  0.1641,  0.4746,  0.2539, -0.2793, -0.3320,  0.7305,  0.3594,  0.3672, -0.5781, -1.0938, -0.3828],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -10.4375,    -10.6250,     -9.8125,     -9.6250,    -11.3125,     -6.2812,     -8.0625,     -7.0312,     -6.9688,    -12.5000,     -8.2500,     -8.7500,     -7.0000,    -10.4375],
        [     0.0000,     -1.1562,     -2.2031,     -1.2969,     -1.3203,     -2.6250,      0.0116,     -0.6289,     -1.9609,     -0.7148,     -2.1875,     -1.3594,     -0.3730,     -1.7656,     -1.1016],
        [     0.0000,     -7.1250,     -6.1562,     -5.8125,     -7.0000,     -7.5938,     -4.1562,     -4.0312,     -5.6562,     -4.2500,     -9.1250,     -4.3750,     -3.6406,     -5.5000,     -5.6562],
        [     0.0000,    -11.1250,    -10.8750,    -10.0000,     -9.8125,    -11.1875,     -6.1875,     -8.3125,     -6.3438,     -7.1875,    -13.1875,     -8.3750,     -8.8750,     -6.3438,    -11.0000],
        [     0.0000,     -8.0625,     -9.1250,     -8.3750,     -7.9375,     -8.5000,     -4.3125,     -6.3750,     -5.0312,     -5.6562,    -10.5625,     -7.6250,     -7.0312,     -4.8750,     -8.7500],
        [     0.0000,     -1.3984,     -1.9766,     -2.0469,     -1.7500,     -1.7734,     -0.8516,     -1.8672,     -0.8555,     -1.0547,     -3.4531,     -1.8438,     -1.8203,     -0.6797,     -1.7812],
        [     0.0000,     -1.7031,     -1.0625,     -1.3594,     -2.0000,     -2.3906,     -0.6445,     -0.8281,     -2.3594,     -1.2656,     -2.7031,     -0.4141,     -0.8516,     -2.3125,     -1.5156],
        [     0.0000,     -8.4375,     -7.5938,     -7.3438,     -7.0938,     -7.9062,     -4.5625,     -5.4688,     -4.1250,     -5.4375,     -9.8125,     -6.0000,     -5.8125,     -4.0938,     -7.8125],
        [     0.0000,     -8.9375,     -7.2812,     -6.8750,     -8.2500,     -8.9375,     -5.5312,     -3.2500,     -7.0938,     -4.6562,     -9.3750,     -6.2500,     -3.9375,     -6.7500,     -8.1875],
        [     0.0000,    -15.1250,    -13.1250,    -13.2500,    -13.8125,    -14.9375,     -9.0625,     -9.0000,    -10.1875,     -9.7500,    -17.8750,    -10.7500,     -9.7500,    -10.0625,    -13.8750],
        [     0.0000,      3.7812,      2.9375,      3.6250,      3.4531,      3.0000,      2.5312,      2.3438,      1.5391,      3.0000,      3.3125,      3.2188,      3.8438,      1.7812,      4.1875],
        [     0.0000,     -1.7031,     -0.5391,     -1.1797,     -1.4062,     -1.8750,     -0.8984,     -0.2930,     -1.4297,     -1.0703,     -2.9219,      0.1406,      0.2031,     -1.4922,     -0.7852],
        [     0.0000,     -8.9375,     -7.9688,     -7.6562,     -7.4688,     -8.3125,     -4.9062,     -5.7188,     -4.2188,     -5.9062,    -10.2500,     -6.4062,     -6.1250,     -4.2500,     -8.1250],
        [     0.0000,     -4.5625,     -4.6250,     -3.8125,     -4.0938,     -5.5625,     -2.6094,     -3.8750,     -3.0312,     -2.7344,     -6.0938,     -3.0156,     -3.7969,     -3.0156,     -4.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9372],
        [0.9961],
        [0.9993],
        [0.9997],
        [0.8086],
        [0.7083],
        [0.9076],
        [0.9460],
        [0.9310],
        [0.6478],
        [0.6321],
        [0.8771],
        [0.8338]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7070,     0.2930,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.2070,     0.5820,     0.1719,     0.0378,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0030,     0.0053,     0.0008,     0.0007,     0.0038,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0005,     0.0012,     0.0002,     0.0003,     0.0006,     0.0038,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9258,     0.0067,     0.0157,     0.0022,     0.0020,     0.0079,     0.0238,     0.0134,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0864,     0.2266,     0.0388,     0.0410,     0.1543,     0.0840,     0.2676,     0.0425,     0.0354,     0.0215,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0014,     0.0037,     0.0004,     0.0004,     0.0020,     0.0073,     0.0030,     0.0007,     0.0015,     0.0003,     0.0023,     0.0007,     0.0004,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0000,     0.0001,     0.0001,     0.0002,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0077,  0.0508,  0.0345,  ..., -0.0193,  0.0034, -0.0266],
        [-0.0096, -0.0330,  0.0079,  ...,  0.0262,  0.0054, -0.0489],
        [ 0.0291,  0.0527,  0.0095,  ..., -0.0005,  0.0100, -0.0013],
        ...,
        [-0.0550, -0.0318, -0.0395,  ...,  0.0068,  0.0088, -0.0159],
        [ 0.0208,  0.0257,  0.0093,  ..., -0.0289,  0.0229, -0.0068],
        [-0.0229, -0.0152, -0.0631,  ...,  0.0435,  0.0107, -0.0058]], device='cuda:0', requires_grad=True)
K: tensor([-0.6367,  2.1406, -1.4297,  2.0312,  2.1250,  2.2500,  2.7344, -0.8633, -2.8906,  1.3281,  2.1719, -1.0234, -2.5781, -1.5547, -1.8828, -1.8125,  1.5391,  2.0312,  2.5938, -2.2812, -3.0625,  1.5000,  2.7344,  2.7031, -2.4062, -1.6953, -2.1719, -1.4297, -1.5938, -1.6328,  1.5000,  1.8516,
        -2.0625, -2.4375, -2.4062,  1.3594, -1.9844,  1.3359,  0.4492,  1.5000,  1.3984,  3.2969, -1.2891, -1.9062,  3.2812,  2.7812, -1.8594, -0.9570, -2.9688,  1.6797,  1.0312, -0.8594,  2.2188,  1.2188,  1.1562,  1.1875, -1.4453,  1.3047, -1.3750, -2.0312, -1.1719, -2.8594,  2.6875, -2.2656],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0246, -0.0001, -0.0236,  ..., -0.0135, -0.0214,  0.0001],
        [ 0.0040,  0.0094,  0.0184,  ..., -0.0281,  0.0269, -0.0243],
        [-0.0313, -0.0452, -0.0067,  ..., -0.0060, -0.0228, -0.0321],
        ...,
        [ 0.0061,  0.0140,  0.0088,  ..., -0.0301,  0.0045, -0.0359],
        [-0.0265, -0.0074, -0.0183,  ...,  0.0004, -0.0131,  0.0350],
        [ 0.0213,  0.0109,  0.0534,  ...,  0.0110,  0.0647, -0.0239]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5391, -0.7930,  0.7305,  0.1514, -1.2344, -1.4766, -1.9531,  1.0156,  0.3457, -1.3125, -0.5508,  0.6328, -0.1025,  0.7227, -0.9688, -0.2598, -1.1250, -1.2344, -0.5352,  0.1865,  0.7031, -0.9102, -1.0312, -0.7227,  0.2734,  0.9688,  0.6211,  0.6992,  0.7227,  1.9141, -1.9453, -0.5977,
         0.6484,  0.8672,  1.0547, -1.3984,  1.1484, -2.0312, -2.1406, -1.1641, -1.4062, -0.2363,  0.6758,  0.7227, -0.6875, -0.6992,  1.0625,  1.2812,  0.8945, -1.2500, -0.7305,  0.3594, -1.1328, -1.5859,  0.1787, -0.8164,  1.5938, -0.4746,  1.0000,  0.2305,  1.5234,  1.7344, -0.8477,  1.4297],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -0.8828,   0.4375,  -1.3906,  -1.5469,  -0.0310,   0.1377,   0.2070,  -1.1875,  -1.1016,  -1.9688,  -0.1416,  -0.9375,  -1.2969,  -1.4766],
        [  0.0000, -11.4375, -11.1250, -11.9375, -11.3125, -11.0625,  -9.3750, -11.6875, -11.3125, -10.7500, -11.8750, -11.7500, -13.0625, -11.9375, -14.5625],
        [  0.0000, -12.2500, -11.9375, -14.1250, -13.0000, -11.9375, -10.5625, -12.1250, -12.5625, -12.3750, -13.6250, -12.4375, -13.8125, -13.3750, -16.0000],
        [  0.0000,   4.3125,   5.3438,   4.1250,   2.6094,   4.7188,   4.6250,   5.8750,   2.8125,   4.3125,   2.7500,   5.5938,   4.4375,   3.0469,   4.8750],
        [  0.0000,  -5.7812,  -5.2188,  -7.1562,  -7.2188,  -5.5625,  -4.5625,  -5.2188,  -7.0938,  -6.0000,  -7.5000,  -5.0938,  -6.9375,  -7.4688,  -8.1875],
        [  0.0000,  -7.6250,  -6.7500,  -8.4375,  -8.0000,  -7.3438,  -5.5625,  -7.1562,  -8.4375,  -6.8750,  -8.8750,  -6.8438,  -8.7500,  -8.8750, -10.0625],
        [  0.0000, -16.3750, -16.2500, -17.2500, -15.6250, -16.0000, -14.4375, -17.5000, -16.1250, -15.0000, -17.1250, -16.7500, -18.5000, -17.1250, -20.6250],
        [  0.0000,  -4.9375,  -4.0625,  -6.0312,  -6.1250,  -4.7812,  -3.6562,  -4.2500,  -5.6562,  -4.9062,  -6.2188,  -4.4688,  -5.5625,  -6.0625,  -6.8438],
        [  0.0000, -11.6875, -11.1875, -13.1875, -12.1875, -11.9375, -10.3125, -11.3125, -12.1250, -11.5625, -12.8750, -11.8125, -13.0625, -12.7500, -15.4375],
        [  0.0000,   4.0625,   5.0000,   3.2500,   3.2969,   4.6250,   4.0000,   5.1875,   3.3281,   3.1562,   2.6562,   5.0938,   4.2188,   3.5156,   4.6250],
        [  0.0000, -11.6875, -11.3750, -12.4375, -11.8125, -11.1250,  -9.6875, -12.0625, -11.6875, -11.3125, -12.3750, -12.1250, -13.3125, -12.3125, -14.9375],
        [  0.0000, -13.8750, -13.5625, -14.5625, -13.8750, -13.7500, -11.9375, -14.1250, -13.6875, -12.5625, -14.8750, -13.8750, -15.1875, -14.5000, -17.6250],
        [  0.0000,  -6.5312,  -5.5938,  -7.8438,  -7.7812,  -6.1875,  -4.9062,  -5.7812,  -7.3125,  -6.4688,  -8.0000,  -6.0625,  -7.1875,  -7.8125,  -8.8750],
        [  0.0000,  -9.6250,  -9.0000, -11.0625,  -9.5000,  -9.6875,  -8.5625, -10.2500,  -9.6875,  -9.6250, -10.4375,  -9.9375, -11.5625, -10.3750, -12.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5451],
        [1.0000],
        [1.0000],
        [0.1804],
        [0.9495],
        [0.9740],
        [1.0000],
        [0.9131],
        [1.0000],
        [0.1618],
        [1.0000],
        [1.0000],
        [0.9694],
        [0.9980]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1226,     0.8789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0258,     0.5938,     0.3809,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0508,     0.4961,     0.3125,     0.1396,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0520,     0.4395,     0.0688,     0.0422,     0.3965,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0913,     0.4531,     0.1260,     0.0273,     0.1436,     0.1582,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0437,     0.2949,     0.0688,     0.0112,     0.0649,     0.0500,     0.4648,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1514,     0.3496,     0.0491,     0.0035,     0.0291,     0.0249,     0.3574,     0.0352,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0957,     0.2471,     0.0291,     0.0023,     0.0444,     0.0226,     0.1201,     0.0583,     0.3809,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0723,     0.1729,     0.0383,     0.0061,     0.0383,     0.0295,     0.1309,     0.0645,     0.2129,     0.2344,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0564,     0.1611,     0.0084,     0.0013,     0.0112,     0.0084,     0.0588,     0.0286,     0.1309,     0.2754,     0.2598,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0378,     0.1270,     0.0267,     0.0067,     0.0454,     0.0288,     0.0938,     0.0767,     0.1914,     0.1226,     0.1670,     0.0762,     0.0000,     0.0000,     0.0000],
        [    0.2031,     0.2422,     0.0310,     0.0023,     0.0206,     0.0190,     0.2041,     0.0337,     0.0515,     0.0762,     0.0557,     0.0236,     0.0376,     0.0000,     0.0000],
        [    0.0596,     0.0942,     0.0098,     0.0006,     0.0132,     0.0059,     0.0322,     0.0177,     0.0952,     0.1318,     0.0967,     0.0618,     0.0957,     0.2852,     0.0000],
        [    0.0250,     0.0747,     0.0093,     0.0016,     0.0123,     0.0083,     0.0435,     0.0317,     0.0791,     0.0840,     0.0854,     0.0400,     0.0874,     0.1680,     0.2500]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0084, -0.0211,  0.0120,  ...,  0.0316, -0.0169, -0.0166],
        [-0.0305,  0.0093, -0.0016,  ...,  0.0027, -0.0046,  0.0117],
        [ 0.0120,  0.0363,  0.0266,  ..., -0.0102,  0.0081,  0.0310],
        ...,
        [ 0.0070,  0.0372, -0.0125,  ..., -0.0055, -0.0224, -0.0097],
        [ 0.0298, -0.0217,  0.0180,  ...,  0.0095,  0.0024, -0.0152],
        [ 0.0338,  0.0206,  0.0126,  ...,  0.0009,  0.0161,  0.0152]], device='cuda:0', requires_grad=True)
K: tensor([ 1.7109,  1.8438, -1.6328, -0.2158, -0.6133,  1.2109, -0.4199,  0.0086, -0.6250,  1.0781,  0.1196, -2.7656, -1.0312, -0.0425, -0.3105,  1.5703, -1.4609,  0.5977, -0.4062,  1.5312, -0.5898,  0.1396, -1.3516,  2.4688, -0.8828,  1.1875, -1.2422,  1.5781,  2.2344, -0.8086,  0.9648, -0.1855,
        -1.3750, -0.5117, -1.2656,  0.9258, -0.6875, -0.8438,  1.7422,  1.3125,  0.7500, -0.2656,  1.1953, -1.7266,  0.0317,  0.2070, -1.5547,  0.4121,  0.2617, -1.2344, -1.7031,  2.3594,  0.6055, -0.6680,  1.5469,  0.5938,  1.7109,  0.4805,  1.5312,  2.0781, -1.7578, -0.3457, -0.1719, -0.1670],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0006,  0.0147,  0.0176,  ..., -0.0110,  0.0216,  0.0114],
        [ 0.0274, -0.0019,  0.0017,  ..., -0.0010, -0.0335,  0.0185],
        [ 0.0085, -0.0113, -0.0067,  ..., -0.0058, -0.0331,  0.0344],
        ...,
        [-0.0060,  0.0029, -0.0705,  ..., -0.0099,  0.0076,  0.0093],
        [-0.0026,  0.0206,  0.0013,  ..., -0.0335, -0.0176, -0.0129],
        [-0.0306,  0.0210, -0.0533,  ..., -0.0129, -0.0272,  0.0434]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1099, -0.2656, -0.1465, -0.8281,  0.1226,  0.5430, -1.1406,  1.9453,  0.7188, -0.3809,  0.1797,  0.1250,  0.7617, -1.3906, -0.9141, -0.6484,  0.3594,  0.0723, -1.3516,  1.4062,  0.2188,  0.8984, -1.9219,  0.2129, -0.5664, -1.0547, -0.5977,  0.1729,  0.5156, -0.5625,  1.1641,  2.0781,
         0.1260, -2.2344,  0.0104,  1.1250, -2.7188, -0.0156,  1.7422, -0.9062,  1.4141, -0.0854,  0.5742, -1.1797, -0.9375,  0.6523, -1.2344,  0.0403, -1.9453, -2.0312,  0.8555,  0.5742,  0.2734,  0.5352, -0.6016, -0.0195, -0.3828,  1.4219,  0.7969, -0.3555,  0.0114,  0.1826,  1.0859,  1.6484],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.9688,      0.2178,     -0.1396,      1.1875,      0.3359,      1.8125,      1.6016,      2.1250,      2.2344,      2.1562,      1.6641,      2.2969,      2.6406,      2.3906],
        [     0.0000,      3.1406,      2.6875,      2.7188,      4.4375,      3.8906,      4.2812,      5.0000,      5.8438,      4.5938,      5.7188,      4.3125,      6.2188,      6.4062,      4.4688],
        [     0.0000,      2.2812,      1.8203,      1.0156,      2.3125,      2.0625,      2.8750,      3.4219,      4.5000,      3.7812,      4.2812,      3.3281,      4.7188,      5.2188,      4.0312],
        [     0.0000,      2.1406,      0.2832,     -0.2090,      2.0312,      0.7656,      1.5078,      1.7656,      2.1719,      2.7031,      2.6250,      1.6797,      2.6406,      2.7031,      1.3047],
        [     0.0000,      1.6016,      0.3242,     -1.2031,      0.4531,      0.5508,      1.9844,      1.4219,      1.5469,      1.7891,      1.5781,      1.0078,      2.0000,      2.1562,      2.3125],
        [     0.0000,      1.9062,      0.4531,     -1.3594,      0.3965,      0.1318,      2.3594,      1.3672,      1.6641,      1.8828,      1.6016,      1.1562,      1.6641,      2.3594,      2.9219],
        [     0.0000,      0.8359,     -1.1250,     -3.7656,     -1.6484,     -1.8125,      0.8555,     -1.4609,     -0.8438,     -0.6523,     -0.6953,     -1.7266,     -1.4922,     -0.3535,      1.8047],
        [     0.0000,      0.9492,     -1.1953,     -3.7344,     -0.7656,     -1.4453,      0.2256,     -0.4941,      1.3828,      1.5781,      1.4766,      0.7695,      1.2656,      2.3906,      1.2578],
        [     0.0000,      0.8711,     -0.6328,     -2.4688,     -0.6328,     -0.8906,      0.5977,     -0.1128,      1.0859,      1.1797,      1.0156,      0.6250,      0.9570,      1.8906,      1.7578],
        [     0.0000,      1.0469,     -1.8984,     -3.7500,     -1.6172,     -1.9062,      0.0410,     -0.6797,      0.8398,      1.5859,      1.5234,     -0.0359,      0.6680,      1.7969,      2.2969],
        [     0.0000,      1.2109,     -0.3477,     -1.7344,      0.1846,     -0.2695,      0.9062,      0.7031,      1.6250,      1.1797,      1.4844,      0.6992,      1.5781,      2.1875,      2.1719],
        [     0.0000,      0.1777,     -1.8828,     -4.4688,     -2.2812,     -2.3750,      0.0029,     -1.7969,     -1.3750,     -0.9805,     -1.2969,     -2.1562,     -1.6875,     -0.7539,      1.2578],
        [     0.0000,      0.4590,     -1.7969,     -4.5312,     -1.5078,     -2.3125,     -0.6094,     -1.2109,      0.4727,      0.7969,      0.4824,      0.0371,      0.4727,      1.5703,      0.7422],
        [     0.0000,      1.1016,     -0.9883,     -2.7344,     -0.7109,     -1.1016,      0.5547,      0.2402,      1.1562,      1.2109,      1.2344,      0.4707,      1.2500,      1.9062,      2.2969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1282],
        [0.0224],
        [0.0620],
        [0.0664],
        [0.0577],
        [0.0488],
        [0.0756],
        [0.0852],
        [0.0393],
        [0.0905],
        [0.0096],
        [0.0781],
        [0.0548],
        [0.0210]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4883, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.2471, 0.3594, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3965, 0.2354, 0.2471, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.1865, 0.2793, 0.1543, 0.2256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.1182, 0.1602, 0.0728, 0.1099, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0344, 0.0879, 0.0339, 0.0471, 0.1865, 0.1084, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.1357, 0.0947, 0.0752, 0.1416, 0.1650, 0.1904, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3965, 0.0623, 0.1069, 0.0248, 0.0393, 0.2471, 0.0479, 0.0289, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.0796, 0.1758, 0.0270, 0.0266, 0.2109, 0.0325, 0.0193, 0.0618, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.0718, 0.0791, 0.0156, 0.0275, 0.1021, 0.0371, 0.0238, 0.0505, 0.1875, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1787, 0.0635, 0.1035, 0.0781, 0.0483, 0.1436, 0.0640, 0.0515, 0.0386, 0.1074, 0.0635, 0.0593, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1060, 0.0786, 0.0425, 0.0432, 0.1416, 0.0674, 0.0195, 0.0796, 0.0933, 0.1157, 0.0386, 0.0476, 0.0000, 0.0000],
        [0.3125, 0.0476, 0.0564, 0.0117, 0.0187, 0.1260, 0.0221, 0.0118, 0.0256, 0.1514, 0.1250, 0.0356, 0.0352, 0.0190, 0.0000],
        [0.0791, 0.0835, 0.0623, 0.0530, 0.0339, 0.1416, 0.0442, 0.0444, 0.0693, 0.1113, 0.0508, 0.0723, 0.0522, 0.0571, 0.0449]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0236,  0.0163,  0.0091,  ..., -0.0527,  0.0194,  0.0065],
        [-0.0030,  0.0057,  0.0076,  ...,  0.0099, -0.0372,  0.0030],
        [ 0.0205, -0.0125, -0.0357,  ..., -0.0180,  0.0003, -0.0290],
        ...,
        [ 0.0111,  0.0109,  0.0059,  ...,  0.0040, -0.0235, -0.0337],
        [-0.0132, -0.0198,  0.0154,  ..., -0.0178,  0.0107, -0.0017],
        [-0.0109,  0.0004,  0.0203,  ..., -0.0173,  0.0067,  0.0107]], device='cuda:0', requires_grad=True)
K: tensor([     1.5859,     -1.3828,      1.4531,     -1.6484,     -1.2344,     -0.1089,     -0.0408,     -1.5391,      1.7578,      0.8789,     -0.0009,     -0.3711,     -0.7773,      0.9023,     -1.1719,      0.5156,      1.5078,     -0.0105,     -0.4180,      0.2041,      0.1816,      0.9766,
            -0.7852,     -0.7734,     -1.8984,      1.6250,      0.6367,      0.7500,      0.9336,     -0.4434,      0.1553,      0.2832,      0.1631,     -0.5156,     -0.5742,     -0.5430,     -1.2656,      0.8555,      0.6250,     -0.5078,      0.7461,     -2.5000,     -0.1514,      2.3438,
            -0.1836,     -0.8516,      0.0693,      1.6641,      1.1094,      0.0194,      0.1914,     -0.7461,     -0.9023,     -0.7695,     -0.5625,      0.1768,     -1.7344,      0.2373,     -1.2422,      0.3027,      1.4844,     -0.5117,      0.9102,     -0.7266], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0046,  0.0229,  0.0006,  ...,  0.0399, -0.0101,  0.0385],
        [-0.0120, -0.0008,  0.0119,  ...,  0.0075, -0.0163,  0.0052],
        [ 0.0093,  0.0086,  0.0052,  ...,  0.0043,  0.0221, -0.0286],
        ...,
        [ 0.0063, -0.0085, -0.0094,  ...,  0.0002, -0.0163,  0.0164],
        [ 0.0003, -0.0241,  0.0217,  ...,  0.0079, -0.0087,  0.0381],
        [-0.0124, -0.0151, -0.0255,  ...,  0.0383,  0.0070,  0.0075]], device='cuda:0', requires_grad=True)
Q: tensor([-1.2891,  1.3125, -1.6875, -1.0703, -1.4219,  1.4219,  0.5977, -0.2930, -0.6055, -0.2598,  0.9883,  1.1875,  0.2305,  1.0625,  0.2871,  0.8750,  0.4941,  0.2891, -0.0718, -0.3984,  1.5156,  0.2217,  0.2441,  0.2422, -0.5312,  0.2207, -1.2266, -0.6484, -0.2969,  0.6211,  0.0942,  1.2500,
        -0.9609, -0.2734, -0.9492,  1.4453,  0.3633,  0.7773, -0.4082,  0.3965,  0.0776, -0.3379,  0.5820,  0.5938,  0.4531,  0.7305, -0.9766,  0.1836, -0.1396,  1.2422, -0.5391, -0.2285, -0.2539,  1.0547,  0.6172, -0.4199,  0.8828, -0.4746, -0.2812,  0.5391, -0.4961, -0.1748,  0.1270,  0.5547],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0508,     -0.0388,     -0.6953,     -1.1562,      1.1562,     -0.6055,     -1.3828,     -0.6289,      0.6094,      0.1299,     -1.1797,     -0.7891,     -1.0000,     -0.5195],
        [     0.0000,     -0.4668,     -0.0957,      0.1123,     -0.0923,      0.8945,     -0.2930,      0.3105,     -0.4688,      0.5547,      0.1904,     -0.4297,      0.3262,     -0.6523,     -0.6953],
        [     0.0000,     -0.5234,     -0.4746,     -1.1875,     -0.9727,     -0.2246,     -0.9258,     -1.3672,     -0.8320,     -0.4395,     -0.3945,     -1.5000,     -1.0469,     -1.0156,     -1.0312],
        [     0.0000,      0.1914,      0.5938,     -0.0003,      0.3809,      0.8672,      1.1641,      0.3574,      0.5820,      0.6289,      1.2578,     -0.2119,      0.4902,      0.2441,      0.5234],
        [     0.0000,      0.0292,      0.3379,     -0.4551,     -0.0432,      1.3125,      0.5078,     -0.5156,      0.5156,      0.2891,      0.8203,     -0.1689,     -0.0327,      0.2188,      0.1074],
        [     0.0000,      0.9336,     -0.0198,      0.3105,      1.6875,      1.1484,      2.6719,      1.5078,      1.5000,      1.0078,      1.1641,      0.5312,      0.5703,      0.9883,      1.7578],
        [     0.0000,     -0.0957,     -0.4570,     -0.6914,     -0.0581,      0.0986,      0.2402,     -1.1562,     -0.3105,     -0.1553,     -0.4746,     -1.4453,     -1.0078,     -0.5703,     -0.3516],
        [     0.0000,     -1.8516,     -1.3125,     -2.7656,     -2.3125,     -0.4727,     -2.1094,     -2.6094,     -2.1250,     -0.4707,     -0.7461,     -1.6250,     -1.8359,     -2.5469,     -1.8047],
        [     0.0000,     -0.9414,     -0.1455,     -2.0156,     -2.0312,      0.0330,     -1.8359,     -2.3594,     -1.1953,     -0.2256,     -0.0072,     -1.4766,     -1.2891,     -1.1094,     -1.1875],
        [     0.0000,     -1.0469,     -0.9453,     -2.5781,     -2.0000,     -0.6914,     -1.7031,     -2.1406,     -1.3906,     -0.0811,     -0.0128,     -1.9844,     -1.2969,     -1.4141,     -1.2656],
        [     0.0000,     -1.0391,     -0.5469,     -0.8281,     -1.3125,     -0.2178,     -1.0234,     -1.2500,     -1.5312,     -0.5117,     -1.0312,     -1.1016,     -1.3281,     -1.8047,     -1.5156],
        [     0.0000,     -0.1836,     -0.4844,     -1.1016,     -1.0781,      0.1035,     -0.6367,     -1.8750,     -0.4688,     -0.3086,     -0.0972,     -1.1953,     -0.9805,     -0.4180,     -0.7305],
        [     0.0000,     -1.8828,     -1.7188,     -3.2812,     -2.8125,     -0.9102,     -2.6562,     -3.2812,     -2.5000,     -0.7266,     -0.9141,     -2.1719,     -2.1875,     -2.7969,     -2.2031],
        [     0.0000,      0.0515,     -0.2432,     -0.4043,     -0.8477,      0.5781,     -0.5859,     -0.5781,     -0.1357,      0.3379,     -0.4453,     -0.0913,     -0.4160,     -0.3262,     -0.5664]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2484],
        [0.1594],
        [0.3630],
        [0.1637],
        [0.1507],
        [0.1146],
        [0.0972],
        [0.2895],
        [0.2012],
        [0.0875],
        [0.0742],
        [0.1694],
        [0.2219],
        [0.0882]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.1377 the:0.1016,:0.1748 and:0.1299om:0.1006,:0.2461 the:0.0669ery:0.1187)
ery
------
		( the:0.1016,:0.1748 and:0.1299om:0.1006,:0.2461 the:0.0669ery:0.1187,:0.1187)
, and the most common species.
The most common species of the species
@ 1550 train 5.4340 , allloss: 5.4725, dt: 1682.98ms, fracRes: 0.3150, norm(attn): 0.1504, norm(output): 0.1689, norm(x): 0.2438, norm(y): 0.9955, norm:2.3832, tok/sec: 77881.09, flops:81.75, batch-reuse:1
@ 1551 train 5.3814 , allloss: 5.4237, dt: 1273.23ms, fracRes: 0.3155, norm(attn): 0.1484, norm(output): 0.1709, norm(x): 0.2458, norm(y): 0.9954, norm:1.5953, tok/sec: 102944.53, flops:108.05, batch-reuse:1
@ 1552 train 5.2666 , allloss: 5.3090, dt: 1267.58ms, fracRes: 0.3105, norm(attn): 0.1543, norm(output): 0.1699, norm(x): 0.2427, norm(y): 0.9953, norm:1.7272, tok/sec: 103403.39, flops:108.54, batch-reuse:1
@ 1553 train 5.3779 , allloss: 5.4170, dt: 1283.43ms, fracRes: 0.3138, norm(attn): 0.1455, norm(output): 0.1709, norm(x): 0.2434, norm(y): 0.9955, norm:1.8712, tok/sec: 102126.15, flops:107.19, batch-reuse:1
@ 1554 train 5.3590 , allloss: 5.3982, dt: 1302.16ms, fracRes: 0.3125, norm(attn): 0.1475, norm(output): 0.1689, norm(x): 0.2425, norm(y): 0.9955, norm:1.8563, tok/sec: 100657.61, flops:105.65, batch-reuse:1
@ 1555 train 5.3782 , allloss: 5.4172, dt: 1290.85ms, fracRes: 0.3081, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.2418, norm(y): 0.9954, norm:1.3939, tok/sec: 101539.51, flops:106.58, batch-reuse:1
@ 1556 train 5.4676 , allloss: 5.5062, dt: 1264.30ms, fracRes: 0.3119, norm(attn): 0.1475, norm(output): 0.1699, norm(x): 0.2427, norm(y): 0.9955, norm:1.5515, tok/sec: 103671.94, flops:108.82, batch-reuse:1
@ 1557 train 5.3805 , allloss: 5.4187, dt: 1271.02ms, fracRes: 0.3106, norm(attn): 0.1484, norm(output): 0.1709, norm(x): 0.2430, norm(y): 0.9955, norm:1.6734, tok/sec: 103123.38, flops:108.24, batch-reuse:1
@ 1558 train 5.3092 , allloss: 5.3504, dt: 1263.18ms, fracRes: 0.3051, norm(attn): 0.1543, norm(output): 0.1699, norm(x): 0.2411, norm(y): 0.9954, norm:1.8538, tok/sec: 103763.20, flops:108.91, batch-reuse:1
@ 1559 train 5.3540 , allloss: 5.3953, dt: 1268.98ms, fracRes: 0.3079, norm(attn): 0.1523, norm(output): 0.1699, norm(x): 0.2421, norm(y): 0.9954, norm:1.6300, tok/sec: 103289.54, flops:108.42, batch-reuse:1
@ 1560 train 5.4125 , allloss: 5.4522, dt: 1249.44ms, fracRes: 0.3105, norm(attn): 0.1494, norm(output): 0.1699, norm(x): 0.2435, norm(y): 0.9954, norm:1.5513, tok/sec: 104904.96, flops:110.11, batch-reuse:1
@ 1561 train 5.3895 , allloss: 5.4300, dt: 1280.14ms, fracRes: 0.3098, norm(attn): 0.1533, norm(output): 0.1699, norm(x): 0.2432, norm(y): 0.9954, norm:1.5203, tok/sec: 102388.88, flops:107.47, batch-reuse:1
@ 1562 train 5.3280 , allloss: 5.3685, dt: 1254.51ms, fracRes: 0.3091, norm(attn): 0.1523, norm(output): 0.1709, norm(x): 0.2439, norm(y): 0.9954, norm:1.7633, tok/sec: 104481.04, flops:109.67, batch-reuse:1
@ 1563 train 5.3491 , allloss: 5.3891, dt: 1274.54ms, fracRes: 0.3128, norm(attn): 0.1484, norm(output): 0.1699, norm(x): 0.2453, norm(y): 0.9955, norm:1.5908, tok/sec: 102838.58, flops:107.94, batch-reuse:1
@ 1564 train 5.3497 , allloss: 5.3906, dt: 1262.29ms, fracRes: 0.3112, norm(attn): 0.1514, norm(output): 0.1699, norm(x): 0.2437, norm(y): 0.9954, norm:1.4060, tok/sec: 103836.40, flops:108.99, batch-reuse:1
@ 1565 train 5.3913 , allloss: 5.4305, dt: 1258.25ms, fracRes: 0.3119, norm(attn): 0.1514, norm(output): 0.1709, norm(x): 0.2442, norm(y): 0.9954, norm:1.5508, tok/sec: 104169.78, flops:109.34, batch-reuse:1
@ 1566 train 5.3920 , allloss: 5.4334, dt: 1258.70ms, fracRes: 0.3176, norm(attn): 0.1504, norm(output): 0.1699, norm(x): 0.2463, norm(y): 0.9954, norm:1.6912, tok/sec: 104132.47, flops:109.30, batch-reuse:1
@ 1567 train 5.3289 , allloss: 5.3701, dt: 1272.68ms, fracRes: 0.3124, norm(attn): 0.1533, norm(output): 0.1709, norm(x): 0.2448, norm(y): 0.9954, norm:1.4498, tok/sec: 102988.68, flops:108.10, batch-reuse:1
@ 1568 train 5.3111 , allloss: 5.3511, dt: 1256.91ms, fracRes: 0.3092, norm(attn): 0.1523, norm(output): 0.1709, norm(x): 0.2439, norm(y): 0.9953, norm:1.4751, tok/sec: 104280.81, flops:109.46, batch-reuse:1
@ 1569 train 5.2141 , allloss: 5.2542, dt: 1258.29ms, fracRes: 0.3094, norm(attn): 0.1494, norm(output): 0.1709, norm(x): 0.2440, norm(y): 0.9954, norm:1.5373, tok/sec: 104166.88, flops:109.34, batch-reuse:1
@ 1570 train 5.3149 , allloss: 5.3547, dt: 1291.08ms, fracRes: 0.3121, norm(attn): 0.1484, norm(output): 0.1709, norm(x): 0.2448, norm(y): 0.9955, norm:1.3207, tok/sec: 101521.15, flops:106.56, batch-reuse:1
@ 1571 train 5.3427 , allloss: 5.3821, dt: 1294.82ms, fracRes: 0.3102, norm(attn): 0.1523, norm(output): 0.1699, norm(x): 0.2437, norm(y): 0.9954, norm:1.5653, tok/sec: 101228.32, flops:106.25, batch-reuse:1
@ 1572 train 5.3369 , allloss: 5.3778, dt: 1251.38ms, fracRes: 0.3143, norm(attn): 0.1543, norm(output): 0.1699, norm(x): 0.2447, norm(y): 0.9953, norm:1.5685, tok/sec: 104742.29, flops:109.94, batch-reuse:1
@ 1573 train 5.4000 , allloss: 5.4415, dt: 1273.85ms, fracRes: 0.3208, norm(attn): 0.1484, norm(output): 0.1699, norm(x): 0.2469, norm(y): 0.9954, norm:1.7238, tok/sec: 102894.07, flops:108.00, batch-reuse:1
@ 1574 train 5.3379 , allloss: 5.3779, dt: 1272.59ms, fracRes: 0.3203, norm(attn): 0.1484, norm(output): 0.1709, norm(x): 0.2468, norm(y): 0.9954, norm:1.5785, tok/sec: 102996.45, flops:108.11, batch-reuse:1
@ 1575 train 5.3161 , allloss: 5.3568, dt: 1287.40ms, fracRes: 0.3163, norm(attn): 0.1543, norm(output): 0.1699, norm(x): 0.2468, norm(y): 0.9954, norm:1.7507, tok/sec: 101811.12, flops:106.86, batch-reuse:1
@ 1576 train 5.3423 , allloss: 5.3839, dt: 1318.02ms, fracRes: 0.3180, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.2464, norm(y): 0.9954, norm:1.6084, tok/sec: 99446.17, flops:104.38, batch-reuse:1
@ 1577 train 5.2305 , allloss: 5.2695, dt: 1277.38ms, fracRes: 0.3135, norm(attn): 0.1553, norm(output): 0.1699, norm(x): 0.2443, norm(y): 0.9954, norm:1.5505, tok/sec: 102609.67, flops:107.70, batch-reuse:1
@ 1578 train 5.3133 , allloss: 5.3536, dt: 1267.24ms, fracRes: 0.3185, norm(attn): 0.1523, norm(output): 0.1699, norm(x): 0.2481, norm(y): 0.9953, norm:1.4802, tok/sec: 103431.09, flops:108.56, batch-reuse:1
@ 1579 train 5.1990 , allloss: 5.2395, dt: 1246.79ms, fracRes: 0.3106, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.2449, norm(y): 0.9953, norm:1.7918, tok/sec: 105127.85, flops:110.35, batch-reuse:1
@ 1580 train 5.2536 , allloss: 5.2936, dt: 1268.91ms, fracRes: 0.3110, norm(attn): 0.1553, norm(output): 0.1699, norm(x): 0.2448, norm(y): 0.9954, norm:2.0689, tok/sec: 103295.35, flops:108.42, batch-reuse:1
@ 1581 train 5.1801 , allloss: 5.2222, dt: 1275.76ms, fracRes: 0.3153, norm(attn): 0.1523, norm(output): 0.1709, norm(x): 0.2464, norm(y): 0.9954, norm:1.5674, tok/sec: 102740.58, flops:107.84, batch-reuse:1
@ 1582 train 5.2575 , allloss: 5.2979, dt: 1273.32ms, fracRes: 0.3094, norm(attn): 0.1504, norm(output): 0.1709, norm(x): 0.2450, norm(y): 0.9954, norm:1.3966, tok/sec: 102937.48, flops:108.05, batch-reuse:1
@ 1583 train 5.2237 , allloss: 5.2628, dt: 1282.04ms, fracRes: 0.3078, norm(attn): 0.1533, norm(output): 0.1709, norm(x): 0.2448, norm(y): 0.9954, norm:1.5846, tok/sec: 102236.97, flops:107.31, batch-reuse:1
@ 1584 train 5.2509 , allloss: 5.2896, dt: 1282.11ms, fracRes: 0.3095, norm(attn): 0.1533, norm(output): 0.1699, norm(x): 0.2451, norm(y): 0.9954, norm:1.5591, tok/sec: 102231.08, flops:107.31, batch-reuse:1
@ 1585 train 5.2734 , allloss: 5.3118, dt: 1264.55ms, fracRes: 0.3165, norm(attn): 0.1514, norm(output): 0.1709, norm(x): 0.2473, norm(y): 0.9954, norm:1.6213, tok/sec: 103650.85, flops:108.80, batch-reuse:1
@ 1586 train 5.2675 , allloss: 5.3088, dt: 1249.63ms, fracRes: 0.3175, norm(attn): 0.1523, norm(output): 0.1709, norm(x): 0.2469, norm(y): 0.9954, norm:1.8956, tok/sec: 104889.01, flops:110.09, batch-reuse:1
@ 1587 train 5.3029 , allloss: 5.3424, dt: 1271.18ms, fracRes: 0.3126, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2470, norm(y): 0.9953, norm:1.7076, tok/sec: 103110.41, flops:108.23, batch-reuse:1
@ 1588 train 5.3168 , allloss: 5.3571, dt: 1270.48ms, fracRes: 0.3151, norm(attn): 0.1494, norm(output): 0.1709, norm(x): 0.2475, norm(y): 0.9954, norm:1.3373, tok/sec: 103167.49, flops:108.29, batch-reuse:1
@ 1589 train 5.2296 , allloss: 5.2689, dt: 1243.07ms, fracRes: 0.3138, norm(attn): 0.1523, norm(output): 0.1709, norm(x): 0.2468, norm(y): 0.9954, norm:1.6346, tok/sec: 105442.42, flops:110.68, batch-reuse:1
@ 1590 train 5.3059 , allloss: 5.3447, dt: 1267.30ms, fracRes: 0.3153, norm(attn): 0.1514, norm(output): 0.1709, norm(x): 0.2477, norm(y): 0.9954, norm:1.6010, tok/sec: 103426.03, flops:108.56, batch-reuse:1
@ 1591 train 5.2020 , allloss: 5.2427, dt: 1284.06ms, fracRes: 0.3151, norm(attn): 0.1543, norm(output): 0.1709, norm(x): 0.2469, norm(y): 0.9953, norm:1.7726, tok/sec: 102076.36, flops:107.14, batch-reuse:1
@ 1592 train 5.2689 , allloss: 5.3094, dt: 1253.81ms, fracRes: 0.3169, norm(attn): 0.1494, norm(output): 0.1709, norm(x): 0.2468, norm(y): 0.9954, norm:1.3834, tok/sec: 104539.09, flops:109.73, batch-reuse:1
@ 1593 train 5.2649 , allloss: 5.3042, dt: 1252.45ms, fracRes: 0.3159, norm(attn): 0.1494, norm(output): 0.1699, norm(x): 0.2468, norm(y): 0.9955, norm:1.4198, tok/sec: 104652.16, flops:109.85, batch-reuse:1
@ 1594 train 5.1483 , allloss: 5.1880, dt: 1278.82ms, fracRes: 0.3128, norm(attn): 0.1533, norm(output): 0.1709, norm(x): 0.2470, norm(y): 0.9954, norm:1.6578, tok/sec: 102494.75, flops:107.58, batch-reuse:1
@ 1595 train 5.3162 , allloss: 5.3559, dt: 1265.05ms, fracRes: 0.3144, norm(attn): 0.1514, norm(output): 0.1719, norm(x): 0.2479, norm(y): 0.9954, norm:1.7491, tok/sec: 103609.87, flops:108.75, batch-reuse:1
@ 1596 train 5.2274 , allloss: 5.2669, dt: 1268.13ms, fracRes: 0.3136, norm(attn): 0.1504, norm(output): 0.1719, norm(x): 0.2469, norm(y): 0.9954, norm:1.6870, tok/sec: 103358.66, flops:108.49, batch-reuse:1
@ 1597 train 5.2780 , allloss: 5.3183, dt: 1255.06ms, fracRes: 0.3124, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2475, norm(y): 0.9952, norm:1.4171, tok/sec: 104434.83, flops:109.62, batch-reuse:1
@ 1598 train 5.2473 , allloss: 5.2873, dt: 1280.99ms, fracRes: 0.3144, norm(attn): 0.1504, norm(output): 0.1709, norm(x): 0.2469, norm(y): 0.9953, norm:1.7309, tok/sec: 102321.21, flops:107.40, batch-reuse:1
@ 1599 train 5.3294 , allloss: 5.3690, dt: 1272.95ms, fracRes: 0.3116, norm(attn): 0.1504, norm(output): 0.1709, norm(x): 0.2464, norm(y): 0.9954, norm:1.7208, tok/sec: 102967.38, flops:108.08, batch-reuse:1
@ 1600 train 5.2357 , allloss: 5.2783, dt: 1269.45ms, fracRes: 0.3093, norm(attn): 0.1572, norm(output): 0.1709, norm(x): 0.2444, norm(y): 0.9953, norm:1.7083, tok/sec: 103250.96, flops:108.38, batch-reuse:1
@ 1601 train 5.3440 , allloss: 5.3824, dt: 1263.93ms, fracRes: 0.3163, norm(attn): 0.1465, norm(output): 0.1699, norm(x): 0.2466, norm(y): 0.9955, norm:1.6836, tok/sec: 103701.90, flops:108.85, batch-reuse:1
@ 1602 train 5.2495 , allloss: 5.2900, dt: 1268.22ms, fracRes: 0.3160, norm(attn): 0.1465, norm(output): 0.1699, norm(x): 0.2468, norm(y): 0.9955, norm:2.0631, tok/sec: 103351.14, flops:108.48, batch-reuse:1
@ 1603 train 5.1978 , allloss: 5.2382, dt: 1249.45ms, fracRes: 0.3136, norm(attn): 0.1475, norm(output): 0.1719, norm(x): 0.2473, norm(y): 0.9954, norm:1.8930, tok/sec: 104903.60, flops:110.11, batch-reuse:1
@ 1604 train 5.2233 , allloss: 5.2633, dt: 1259.27ms, fracRes: 0.3158, norm(attn): 0.1504, norm(output): 0.1709, norm(x): 0.2471, norm(y): 0.9954, norm:1.5806, tok/sec: 104085.92, flops:109.25, batch-reuse:1
@ 1605 train 5.2738 , allloss: 5.3116, dt: 1262.67ms, fracRes: 0.3161, norm(attn): 0.1484, norm(output): 0.1709, norm(x): 0.2468, norm(y): 0.9955, norm:1.8153, tok/sec: 103805.33, flops:108.96, batch-reuse:1
@ 1606 train 5.2734 , allloss: 5.3123, dt: 1257.42ms, fracRes: 0.3145, norm(attn): 0.1494, norm(output): 0.1699, norm(x): 0.2452, norm(y): 0.9954, norm:1.6117, tok/sec: 104238.54, flops:109.41, batch-reuse:1
@ 1607 train 5.2534 , allloss: 5.2954, dt: 1269.20ms, fracRes: 0.3182, norm(attn): 0.1533, norm(output): 0.1699, norm(x): 0.2469, norm(y): 0.9953, norm:1.5747, tok/sec: 103271.69, flops:108.40, batch-reuse:1
@ 1608 train 5.3114 , allloss: 5.3502, dt: 1277.27ms, fracRes: 0.3172, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2476, norm(y): 0.9953, norm:1.7567, tok/sec: 102618.99, flops:107.71, batch-reuse:1
@ 1609 train 5.2544 , allloss: 5.2933, dt: 1268.57ms, fracRes: 0.3219, norm(attn): 0.1523, norm(output): 0.1699, norm(x): 0.2480, norm(y): 0.9954, norm:1.5710, tok/sec: 103322.47, flops:108.45, batch-reuse:1
@ 1610 train 5.2179 , allloss: 5.2581, dt: 1296.28ms, fracRes: 0.3203, norm(attn): 0.1514, norm(output): 0.1699, norm(x): 0.2473, norm(y): 0.9953, norm:1.7502, tok/sec: 101114.00, flops:106.13, batch-reuse:1
@ 1611 train 5.1877 , allloss: 5.2288, dt: 1271.33ms, fracRes: 0.3158, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.2467, norm(y): 0.9953, norm:1.7624, tok/sec: 103098.28, flops:108.22, batch-reuse:1
@ 1612 train 5.2437 , allloss: 5.2829, dt: 1258.22ms, fracRes: 0.3150, norm(attn): 0.1543, norm(output): 0.1719, norm(x): 0.2468, norm(y): 0.9953, norm:1.4650, tok/sec: 104172.17, flops:109.34, batch-reuse:1
@ 1613 train 5.2497 , allloss: 5.2864, dt: 1285.83ms, fracRes: 0.3186, norm(attn): 0.1445, norm(output): 0.1709, norm(x): 0.2481, norm(y): 0.9955, norm:1.8034, tok/sec: 101935.34, flops:106.99, batch-reuse:1
@ 1614 train 5.2913 , allloss: 5.3287, dt: 1253.80ms, fracRes: 0.3187, norm(attn): 0.1475, norm(output): 0.1709, norm(x): 0.2481, norm(y): 0.9954, norm:1.6159, tok/sec: 104539.95, flops:109.73, batch-reuse:1
@ 1615 train 5.2446 , allloss: 5.2826, dt: 1251.98ms, fracRes: 0.3167, norm(attn): 0.1533, norm(output): 0.1709, norm(x): 0.2484, norm(y): 0.9953, norm:1.5053, tok/sec: 104691.46, flops:109.89, batch-reuse:1
@ 1616 train 5.3005 , allloss: 5.3403, dt: 1287.42ms, fracRes: 0.3140, norm(attn): 0.1562, norm(output): 0.1689, norm(x): 0.2460, norm(y): 0.9952, norm:1.5606, tok/sec: 101810.08, flops:106.86, batch-reuse:1
@ 1617 train 5.2577 , allloss: 5.2981, dt: 1263.85ms, fracRes: 0.3144, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.2462, norm(y): 0.9953, norm:1.6884, tok/sec: 103708.90, flops:108.86, batch-reuse:1
@ 1618 train 5.2466 , allloss: 5.2871, dt: 1275.70ms, fracRes: 0.3131, norm(attn): 0.1543, norm(output): 0.1709, norm(x): 0.2455, norm(y): 0.9953, norm:1.5251, tok/sec: 102745.15, flops:107.84, batch-reuse:1
@ 1619 train 5.1769 , allloss: 5.2166, dt: 1262.10ms, fracRes: 0.3109, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2467, norm(y): 0.9953, norm:2.0315, tok/sec: 103852.45, flops:109.01, batch-reuse:1
@ 1620 train 5.1893 , allloss: 5.2294, dt: 1266.57ms, fracRes: 0.3126, norm(attn): 0.1543, norm(output): 0.1709, norm(x): 0.2478, norm(y): 0.9953, norm:1.9627, tok/sec: 103485.77, flops:108.62, batch-reuse:1
@ 1621 train 5.2805 , allloss: 5.3198, dt: 1254.91ms, fracRes: 0.3129, norm(attn): 0.1543, norm(output): 0.1719, norm(x): 0.2481, norm(y): 0.9952, norm:1.6919, tok/sec: 104447.21, flops:109.63, batch-reuse:1
@ 1622 train 5.2599 , allloss: 5.2982, dt: 1269.18ms, fracRes: 0.3133, norm(attn): 0.1504, norm(output): 0.1719, norm(x): 0.2488, norm(y): 0.9952, norm:1.7425, tok/sec: 103273.21, flops:108.40, batch-reuse:1
@ 1623 train 5.1631 , allloss: 5.2027, dt: 1262.85ms, fracRes: 0.3111, norm(attn): 0.1514, norm(output): 0.1719, norm(x): 0.2478, norm(y): 0.9953, norm:1.6600, tok/sec: 103790.24, flops:108.94, batch-reuse:1
@ 1624 train 5.1130 , allloss: 5.1527, dt: 1266.53ms, fracRes: 0.3052, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2455, norm(y): 0.9953, norm:1.7621, tok/sec: 103488.96, flops:108.63, batch-reuse:1
@ 1625 train 5.2113 , allloss: 5.2526, dt: 1256.22ms, fracRes: 0.3095, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2476, norm(y): 0.9952, norm:1.8327, tok/sec: 104338.05, flops:109.52, batch-reuse:1
@ 1626 train 5.1972 , allloss: 5.2365, dt: 1297.49ms, fracRes: 0.3144, norm(attn): 0.1523, norm(output): 0.1719, norm(x): 0.2491, norm(y): 0.9952, norm:1.5667, tok/sec: 101019.74, flops:106.03, batch-reuse:1
@ 1627 train 5.1242 , allloss: 5.1634, dt: 1290.15ms, fracRes: 0.3147, norm(attn): 0.1533, norm(output): 0.1719, norm(x): 0.2490, norm(y): 0.9953, norm:1.5489, tok/sec: 101594.53, flops:106.64, batch-reuse:1
@ 1628 train 5.1101 , allloss: 5.1506, dt: 1278.33ms, fracRes: 0.3144, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2494, norm(y): 0.9952, norm:1.7312, tok/sec: 102533.75, flops:107.62, batch-reuse:1
@ 1629 train 5.1214 , allloss: 5.1597, dt: 1283.09ms, fracRes: 0.3170, norm(attn): 0.1543, norm(output): 0.1719, norm(x): 0.2497, norm(y): 0.9953, norm:1.5913, tok/sec: 102153.63, flops:107.22, batch-reuse:1
@ 1630 train 5.1797 , allloss: 5.2168, dt: 1273.59ms, fracRes: 0.3153, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2493, norm(y): 0.9953, norm:1.8578, tok/sec: 102915.43, flops:108.02, batch-reuse:1
@ 1631 train 5.1012 , allloss: 5.1404, dt: 1268.99ms, fracRes: 0.3165, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2493, norm(y): 0.9952, norm:1.8063, tok/sec: 103288.32, flops:108.41, batch-reuse:1
@ 1632 train 5.2098 , allloss: 5.2486, dt: 1267.26ms, fracRes: 0.3178, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2492, norm(y): 0.9952, norm:1.5942, tok/sec: 103429.25, flops:108.56, batch-reuse:1
@ 1633 train 5.1569 , allloss: 5.1958, dt: 1276.26ms, fracRes: 0.3147, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2477, norm(y): 0.9953, norm:1.7068, tok/sec: 102699.68, flops:107.80, batch-reuse:1
@ 1634 train 5.1856 , allloss: 5.2254, dt: 1248.80ms, fracRes: 0.3158, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2475, norm(y): 0.9953, norm:1.6604, tok/sec: 104958.76, flops:110.17, batch-reuse:1
@ 1635 train 5.1209 , allloss: 5.1606, dt: 1271.79ms, fracRes: 0.3188, norm(attn): 0.1543, norm(output): 0.1709, norm(x): 0.2497, norm(y): 0.9953, norm:1.5801, tok/sec: 103060.69, flops:108.18, batch-reuse:1
@ 1636 train 5.1029 , allloss: 5.1418, dt: 1250.31ms, fracRes: 0.3179, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2498, norm(y): 0.9952, norm:1.7754, tok/sec: 104831.49, flops:110.03, batch-reuse:1
@ 1637 train 5.2048 , allloss: 5.2447, dt: 1283.29ms, fracRes: 0.3196, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.2492, norm(y): 0.9953, norm:1.9142, tok/sec: 102137.16, flops:107.21, batch-reuse:1
@ 1638 train 5.2190 , allloss: 5.2598, dt: 1248.14ms, fracRes: 0.3195, norm(attn): 0.1582, norm(output): 0.1709, norm(x): 0.2494, norm(y): 0.9952, norm:1.3927, tok/sec: 105013.59, flops:110.23, batch-reuse:1
@ 1639 train 5.1078 , allloss: 5.1457, dt: 1262.78ms, fracRes: 0.3195, norm(attn): 0.1543, norm(output): 0.1699, norm(x): 0.2478, norm(y): 0.9954, norm:1.8029, tok/sec: 103796.14, flops:108.95, batch-reuse:1
@ 1640 train 5.1665 , allloss: 5.2063, dt: 1273.86ms, fracRes: 0.3188, norm(attn): 0.1523, norm(output): 0.1709, norm(x): 0.2485, norm(y): 0.9954, norm:1.9328, tok/sec: 102893.76, flops:108.00, batch-reuse:1
@ 1641 train 5.1357 , allloss: 5.1739, dt: 1277.32ms, fracRes: 0.3156, norm(attn): 0.1543, norm(output): 0.1709, norm(x): 0.2475, norm(y): 0.9953, norm:1.6507, tok/sec: 102614.57, flops:107.71, batch-reuse:1
@ 1642 train 5.1676 , allloss: 5.2056, dt: 1276.63ms, fracRes: 0.3162, norm(attn): 0.1582, norm(output): 0.1719, norm(x): 0.2489, norm(y): 0.9952, norm:2.0872, tok/sec: 102670.57, flops:107.77, batch-reuse:1
@ 1643 train 5.1807 , allloss: 5.2203, dt: 1269.57ms, fracRes: 0.3204, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.2494, norm(y): 0.9953, norm:1.6427, tok/sec: 103241.56, flops:108.37, batch-reuse:1
@ 1644 train 5.2268 , allloss: 5.2655, dt: 1252.54ms, fracRes: 0.3236, norm(attn): 0.1543, norm(output): 0.1709, norm(x): 0.2502, norm(y): 0.9953, norm:1.5961, tok/sec: 104644.85, flops:109.84, batch-reuse:1
@ 1645 train 5.1743 , allloss: 5.2150, dt: 1272.14ms, fracRes: 0.3230, norm(attn): 0.1592, norm(output): 0.1709, norm(x): 0.2509, norm(y): 0.9952, norm:1.9285, tok/sec: 103032.82, flops:108.15, batch-reuse:1
@ 1646 train 5.1796 , allloss: 5.2206, dt: 1272.29ms, fracRes: 0.3169, norm(attn): 0.1582, norm(output): 0.1709, norm(x): 0.2489, norm(y): 0.9952, norm:1.7777, tok/sec: 103020.42, flops:108.13, batch-reuse:1
@ 1647 train 5.2281 , allloss: 5.2691, dt: 1272.88ms, fracRes: 0.3185, norm(attn): 0.1572, norm(output): 0.1709, norm(x): 0.2486, norm(y): 0.9953, norm:1.6340, tok/sec: 102973.01, flops:108.08, batch-reuse:1
@ 1648 train 5.1850 , allloss: 5.2269, dt: 1274.70ms, fracRes: 0.3223, norm(attn): 0.1562, norm(output): 0.1699, norm(x): 0.2496, norm(y): 0.9953, norm:1.4745, tok/sec: 102825.90, flops:107.93, batch-reuse:1
@ 1649 train 5.1370 , allloss: 5.1765, dt: 1284.05ms, fracRes: 0.3183, norm(attn): 0.1592, norm(output): 0.1719, norm(x): 0.2500, norm(y): 0.9952, norm:1.3831, tok/sec: 102077.38, flops:107.14, batch-reuse:1
@ 1650 train 5.1570 , allloss: 5.1942, dt: 1258.58ms, fracRes: 0.3158, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2498, norm(y): 0.9953, norm:1.9383, tok/sec: 104143.00, flops:109.31, batch-reuse:1
@ 1651 train 5.2420 , allloss: 5.2785, dt: 1269.11ms, fracRes: 0.3155, norm(attn): 0.1562, norm(output): 0.1729, norm(x): 0.2507, norm(y): 0.9953, norm:2.2263, tok/sec: 103278.64, flops:108.40, batch-reuse:1
@ 1652 train 5.2778 , allloss: 5.3168, dt: 1258.10ms, fracRes: 0.3162, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2509, norm(y): 0.9952, norm:1.9717, tok/sec: 104182.61, flops:109.35, batch-reuse:1
@ 1653 train 5.2088 , allloss: 5.2482, dt: 1270.44ms, fracRes: 0.3156, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2506, norm(y): 0.9952, norm:2.3307, tok/sec: 103170.26, flops:108.29, batch-reuse:1
@ 1654 train 5.1620 , allloss: 5.2006, dt: 1296.50ms, fracRes: 0.3165, norm(attn): 0.1582, norm(output): 0.1719, norm(x): 0.2504, norm(y): 0.9951, norm:1.5458, tok/sec: 101096.50, flops:106.11, batch-reuse:1
@ 1655 train 5.1143 , allloss: 5.1561, dt: 1247.73ms, fracRes: 0.3229, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2520, norm(y): 0.9952, norm:2.1541, tok/sec: 105048.45, flops:110.26, batch-reuse:1
@ 1656 train 5.1264 , allloss: 5.1682, dt: 1271.83ms, fracRes: 0.3195, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2509, norm(y): 0.9952, norm:1.8916, tok/sec: 103058.02, flops:108.17, batch-reuse:1
@ 1657 train 5.2531 , allloss: 5.2922, dt: 1291.96ms, fracRes: 0.3156, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2501, norm(y): 0.9952, norm:2.4072, tok/sec: 101452.02, flops:106.49, batch-reuse:1
@ 1658 train 5.2310 , allloss: 5.2713, dt: 1260.04ms, fracRes: 0.3169, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2504, norm(y): 0.9952, norm:1.6665, tok/sec: 104022.13, flops:109.18, batch-reuse:1
@ 1659 train 5.1787 , allloss: 5.2198, dt: 1282.87ms, fracRes: 0.3202, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2517, norm(y): 0.9952, norm:1.7934, tok/sec: 102170.55, flops:107.24, batch-reuse:1
@ 1660 train 5.1205 , allloss: 5.1618, dt: 1243.39ms, fracRes: 0.3234, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2535, norm(y): 0.9953, norm:1.8414, tok/sec: 105415.39, flops:110.65, batch-reuse:1
@ 1661 train 5.2218 , allloss: 5.2601, dt: 1263.80ms, fracRes: 0.3223, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2540, norm(y): 0.9952, norm:1.6968, tok/sec: 103712.25, flops:108.86, batch-reuse:1
@ 1662 train 5.1892 , allloss: 5.2281, dt: 1254.28ms, fracRes: 0.3203, norm(attn): 0.1543, norm(output): 0.1719, norm(x): 0.2510, norm(y): 0.9952, norm:1.6821, tok/sec: 104499.71, flops:109.69, batch-reuse:1
@ 1663 train 5.2105 , allloss: 5.2505, dt: 1277.77ms, fracRes: 0.3225, norm(attn): 0.1543, norm(output): 0.1719, norm(x): 0.2523, norm(y): 0.9952, norm:1.7065, tok/sec: 102578.36, flops:107.67, batch-reuse:1
@ 1664 train 5.1353 , allloss: 5.1746, dt: 1261.88ms, fracRes: 0.3226, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2521, norm(y): 0.9952, norm:1.5301, tok/sec: 103870.28, flops:109.03, batch-reuse:1
@ 1665 train 5.1830 , allloss: 5.2209, dt: 1278.91ms, fracRes: 0.3206, norm(attn): 0.1592, norm(output): 0.1709, norm(x): 0.2508, norm(y): 0.9952, norm:1.9631, tok/sec: 102487.19, flops:107.57, batch-reuse:1
@ 1666 train 5.2462 , allloss: 5.2858, dt: 1278.12ms, fracRes: 0.3236, norm(attn): 0.1572, norm(output): 0.1709, norm(x): 0.2518, norm(y): 0.9952, norm:1.4370, tok/sec: 102550.39, flops:107.64, batch-reuse:1
@ 1667 train 5.3596 , allloss: 5.3972, dt: 1260.29ms, fracRes: 0.3193, norm(attn): 0.1572, norm(output): 0.1719, norm(x): 0.2520, norm(y): 0.9952, norm:1.5353, tok/sec: 104001.72, flops:109.16, batch-reuse:1
@ 1668 train 5.3269 , allloss: 5.3656, dt: 1284.70ms, fracRes: 0.3210, norm(attn): 0.1582, norm(output): 0.1719, norm(x): 0.2524, norm(y): 0.9952, norm:1.6396, tok/sec: 102025.14, flops:107.09, batch-reuse:1
@ 1669 train 5.3782 , allloss: 5.4166, dt: 1256.29ms, fracRes: 0.3204, norm(attn): 0.1572, norm(output): 0.1719, norm(x): 0.2520, norm(y): 0.9953, norm:2.1687, tok/sec: 104332.98, flops:109.51, batch-reuse:1
@ 1670 train 5.4906 , allloss: 5.5313, dt: 1270.87ms, fracRes: 0.3190, norm(attn): 0.1582, norm(output): 0.1719, norm(x): 0.2531, norm(y): 0.9951, norm:2.3853, tok/sec: 103135.71, flops:108.25, batch-reuse:1
@ 1671 train 5.3807 , allloss: 5.4210, dt: 1248.99ms, fracRes: 0.3201, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2538, norm(y): 0.9951, norm:2.0507, tok/sec: 104942.65, flops:110.15, batch-reuse:1
@ 1672 train 5.3920 , allloss: 5.4304, dt: 1259.75ms, fracRes: 0.3196, norm(attn): 0.1562, norm(output): 0.1729, norm(x): 0.2524, norm(y): 0.9952, norm:1.9292, tok/sec: 104046.03, flops:109.21, batch-reuse:1
@ 1673 train 5.2897 , allloss: 5.3297, dt: 1249.53ms, fracRes: 0.3263, norm(attn): 0.1543, norm(output): 0.1709, norm(x): 0.2538, norm(y): 0.9954, norm:1.9355, tok/sec: 104897.07, flops:110.10, batch-reuse:1
@ 1674 train 5.3250 , allloss: 5.3638, dt: 1271.46ms, fracRes: 0.3242, norm(attn): 0.1572, norm(output): 0.1719, norm(x): 0.2534, norm(y): 0.9953, norm:1.8576, tok/sec: 103087.65, flops:108.20, batch-reuse:1
@ 1675 train 5.4139 , allloss: 5.4530, dt: 1267.61ms, fracRes: 0.3258, norm(attn): 0.1611, norm(output): 0.1719, norm(x): 0.2546, norm(y): 0.9952, norm:1.7594, tok/sec: 103400.59, flops:108.53, batch-reuse:1
@ 1676 train 5.4269 , allloss: 5.4659, dt: 1280.40ms, fracRes: 0.3308, norm(attn): 0.1543, norm(output): 0.1709, norm(x): 0.2564, norm(y): 0.9952, norm:1.5437, tok/sec: 102367.99, flops:107.45, batch-reuse:1
@ 1677 train 5.3585 , allloss: 5.3986, dt: 1284.08ms, fracRes: 0.3318, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.2568, norm(y): 0.9952, norm:1.6604, tok/sec: 102074.41, flops:107.14, batch-reuse:1
@ 1678 train 5.3069 , allloss: 5.3473, dt: 1286.44ms, fracRes: 0.3282, norm(attn): 0.1602, norm(output): 0.1719, norm(x): 0.2556, norm(y): 0.9952, norm:1.5515, tok/sec: 101887.27, flops:106.94, batch-reuse:1
@ 1679 train 5.3999 , allloss: 5.4388, dt: 1250.76ms, fracRes: 0.3299, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2566, norm(y): 0.9953, norm:1.7374, tok/sec: 104793.56, flops:109.99, batch-reuse:1
@ 1680 train 5.3133 , allloss: 5.3514, dt: 1272.97ms, fracRes: 0.3262, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2562, norm(y): 0.9952, norm:1.8802, tok/sec: 102965.88, flops:108.08, batch-reuse:1
@ 1681 train 5.3257 , allloss: 5.3638, dt: 1264.73ms, fracRes: 0.3285, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2572, norm(y): 0.9952, norm:1.4337, tok/sec: 103636.70, flops:108.78, batch-reuse:1
@ 1682 train 5.3226 , allloss: 5.3597, dt: 1257.85ms, fracRes: 0.3291, norm(attn): 0.1543, norm(output): 0.1729, norm(x): 0.2574, norm(y): 0.9953, norm:1.6135, tok/sec: 104203.47, flops:109.38, batch-reuse:1
@ 1683 train 5.2654 , allloss: 5.3047, dt: 1266.54ms, fracRes: 0.3326, norm(attn): 0.1543, norm(output): 0.1719, norm(x): 0.2578, norm(y): 0.9953, norm:1.5248, tok/sec: 103488.34, flops:108.62, batch-reuse:1
@ 1684 train 5.2763 , allloss: 5.3166, dt: 1274.69ms, fracRes: 0.3256, norm(attn): 0.1602, norm(output): 0.1719, norm(x): 0.2562, norm(y): 0.9951, norm:1.5088, tok/sec: 102826.69, flops:107.93, batch-reuse:1
@ 1685 train 5.3366 , allloss: 5.3754, dt: 1264.31ms, fracRes: 0.3324, norm(attn): 0.1514, norm(output): 0.1719, norm(x): 0.2573, norm(y): 0.9954, norm:1.8064, tok/sec: 103670.67, flops:108.82, batch-reuse:1
@ 1686 train 5.3588 , allloss: 5.3986, dt: 1273.43ms, fracRes: 0.3389, norm(attn): 0.1523, norm(output): 0.1719, norm(x): 0.2598, norm(y): 0.9954, norm:1.4980, tok/sec: 102928.42, flops:108.04, batch-reuse:1
@ 1687 train 5.3336 , allloss: 5.3733, dt: 1274.25ms, fracRes: 0.3349, norm(attn): 0.1533, norm(output): 0.1719, norm(x): 0.2596, norm(y): 0.9953, norm:1.5087, tok/sec: 102861.80, flops:107.97, batch-reuse:1
@ 1688 train 5.3836 , allloss: 5.4230, dt: 1277.08ms, fracRes: 0.3290, norm(attn): 0.1543, norm(output): 0.1729, norm(x): 0.2571, norm(y): 0.9952, norm:1.6996, tok/sec: 102634.46, flops:107.73, batch-reuse:1
@ 1689 train 5.3161 , allloss: 5.3541, dt: 1286.45ms, fracRes: 0.3281, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2580, norm(y): 0.9951, norm:1.6139, tok/sec: 101886.52, flops:106.94, batch-reuse:1
@ 1690 train 5.3048 , allloss: 5.3448, dt: 1260.88ms, fracRes: 0.3312, norm(attn): 0.1562, norm(output): 0.1729, norm(x): 0.2605, norm(y): 0.9951, norm:1.6653, tok/sec: 103952.42, flops:109.11, batch-reuse:1
@ 1691 train 5.2414 , allloss: 5.2784, dt: 1268.52ms, fracRes: 0.3275, norm(attn): 0.1572, norm(output): 0.1738, norm(x): 0.2587, norm(y): 0.9952, norm:1.3967, tok/sec: 103327.07, flops:108.46, batch-reuse:1
@ 1692 train 5.2009 , allloss: 5.2384, dt: 1256.19ms, fracRes: 0.3215, norm(attn): 0.1602, norm(output): 0.1719, norm(x): 0.2556, norm(y): 0.9952, norm:1.6468, tok/sec: 104340.86, flops:109.52, batch-reuse:1
@ 1693 train 5.4747 , allloss: 5.5126, dt: 1277.04ms, fracRes: 0.3244, norm(attn): 0.1562, norm(output): 0.1729, norm(x): 0.2577, norm(y): 0.9952, norm:1.9279, tok/sec: 102637.00, flops:107.73, batch-reuse:1
@ 1694 train 5.4759 , allloss: 5.5156, dt: 1264.71ms, fracRes: 0.3278, norm(attn): 0.1533, norm(output): 0.1719, norm(x): 0.2592, norm(y): 0.9952, norm:1.6328, tok/sec: 103637.88, flops:108.78, batch-reuse:1
@ 1695 train 5.3372 , allloss: 5.3754, dt: 1276.64ms, fracRes: 0.3209, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2560, norm(y): 0.9952, norm:2.1434, tok/sec: 102669.17, flops:107.76, batch-reuse:1
@ 1696 train 5.3009 , allloss: 5.3386, dt: 1254.52ms, fracRes: 0.3198, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2556, norm(y): 0.9952, norm:1.5393, tok/sec: 104479.43, flops:109.66, batch-reuse:1
@ 1697 train 5.3408 , allloss: 5.3803, dt: 1278.43ms, fracRes: 0.3250, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2582, norm(y): 0.9951, norm:1.4490, tok/sec: 102525.83, flops:107.61, batch-reuse:1
@ 1698 train 5.2862 , allloss: 5.3251, dt: 1246.57ms, fracRes: 0.3223, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2571, norm(y): 0.9951, norm:1.6414, tok/sec: 105146.05, flops:110.36, batch-reuse:1
@ 1699 train 5.3130 , allloss: 5.3490, dt: 1268.56ms, fracRes: 0.3268, norm(attn): 0.1553, norm(output): 0.1729, norm(x): 0.2588, norm(y): 0.9952, norm:1.6171, tok/sec: 103323.63, flops:108.45, batch-reuse:1
@ 1700 train 5.3173 , allloss: 5.3542, dt: 1247.15ms, fracRes: 0.3278, norm(attn): 0.1543, norm(output): 0.1729, norm(x): 0.2587, norm(y): 0.9953, norm:1.5980, tok/sec: 105097.43, flops:110.31, batch-reuse:1
@ 1701 train 5.2821 , allloss: 5.3192, dt: 1256.40ms, fracRes: 0.3274, norm(attn): 0.1572, norm(output): 0.1719, norm(x): 0.2580, norm(y): 0.9952, norm:1.7628, tok/sec: 104323.49, flops:109.50, batch-reuse:1
@ 1702 train 5.2898 , allloss: 5.3280, dt: 1289.21ms, fracRes: 0.3301, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2596, norm(y): 0.9952, norm:1.6751, tok/sec: 101668.10, flops:106.71, batch-reuse:1
@ 1703 train 5.2927 , allloss: 5.3337, dt: 1282.44ms, fracRes: 0.3296, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2599, norm(y): 0.9952, norm:1.6418, tok/sec: 102205.18, flops:107.28, batch-reuse:1
@ 1704 train 5.2712 , allloss: 5.3071, dt: 1258.78ms, fracRes: 0.3271, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.2579, norm(y): 0.9953, norm:1.7718, tok/sec: 104126.38, flops:109.29, batch-reuse:1
@ 1705 train 5.3017 , allloss: 5.3394, dt: 1262.81ms, fracRes: 0.3309, norm(attn): 0.1553, norm(output): 0.1729, norm(x): 0.2608, norm(y): 0.9952, norm:2.0820, tok/sec: 103793.82, flops:108.95, batch-reuse:1
@ 1706 train 5.2558 , allloss: 5.2933, dt: 1252.75ms, fracRes: 0.3211, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2557, norm(y): 0.9951, norm:1.8447, tok/sec: 104627.51, flops:109.82, batch-reuse:1
@ 1707 train 5.2405 , allloss: 5.2799, dt: 1252.93ms, fracRes: 0.3236, norm(attn): 0.1602, norm(output): 0.1729, norm(x): 0.2571, norm(y): 0.9951, norm:1.5853, tok/sec: 104612.02, flops:109.80, batch-reuse:1
@ 1708 train 5.2166 , allloss: 5.2532, dt: 1253.27ms, fracRes: 0.3251, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2582, norm(y): 0.9952, norm:1.7697, tok/sec: 104584.14, flops:109.77, batch-reuse:1
@ 1709 train 5.3084 , allloss: 5.3449, dt: 1260.45ms, fracRes: 0.3298, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2598, norm(y): 0.9953, norm:1.7418, tok/sec: 103988.29, flops:109.15, batch-reuse:1
@ 1710 train 5.2445 , allloss: 5.2822, dt: 1276.60ms, fracRes: 0.3309, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2600, norm(y): 0.9952, norm:1.5630, tok/sec: 102672.93, flops:107.77, batch-reuse:1
@ 1711 train 5.2614 , allloss: 5.2976, dt: 1280.55ms, fracRes: 0.3294, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2593, norm(y): 0.9951, norm:1.7658, tok/sec: 102355.79, flops:107.44, batch-reuse:1
@ 1712 train 5.3701 , allloss: 5.4069, dt: 1303.13ms, fracRes: 0.3302, norm(attn): 0.1602, norm(output): 0.1719, norm(x): 0.2587, norm(y): 0.9951, norm:1.6713, tok/sec: 100582.12, flops:105.57, batch-reuse:1
@ 1713 train 5.1115 , allloss: 5.1491, dt: 1279.87ms, fracRes: 0.3319, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.2575, norm(y): 0.9953, norm:1.5663, tok/sec: 102410.65, flops:107.49, batch-reuse:1
@ 1714 train 5.2632 , allloss: 5.2993, dt: 1298.01ms, fracRes: 0.3337, norm(attn): 0.1572, norm(output): 0.1719, norm(x): 0.2605, norm(y): 0.9952, norm:1.6267, tok/sec: 100978.81, flops:105.99, batch-reuse:1
@ 1715 train 5.2532 , allloss: 5.2900, dt: 1256.77ms, fracRes: 0.3319, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2599, norm(y): 0.9952, norm:1.6374, tok/sec: 104292.96, flops:109.47, batch-reuse:1
@ 1716 train 5.3045 , allloss: 5.3430, dt: 1276.53ms, fracRes: 0.3286, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2589, norm(y): 0.9952, norm:1.6481, tok/sec: 102678.39, flops:107.77, batch-reuse:1
@ 1717 train 5.4707 , allloss: 5.5088, dt: 1260.73ms, fracRes: 0.3332, norm(attn): 0.1611, norm(output): 0.1729, norm(x): 0.2624, norm(y): 0.9952, norm:1.8873, tok/sec: 103965.24, flops:109.13, batch-reuse:1
@ 1718 train 5.2775 , allloss: 5.3144, dt: 1269.08ms, fracRes: 0.3259, norm(attn): 0.1641, norm(output): 0.1729, norm(x): 0.2591, norm(y): 0.9952, norm:1.8800, tok/sec: 103281.28, flops:108.41, batch-reuse:1
@ 1719 train 5.3677 , allloss: 5.4055, dt: 1250.17ms, fracRes: 0.3290, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2605, norm(y): 0.9952, norm:1.7127, tok/sec: 104843.74, flops:110.05, batch-reuse:1
@ 1720 train 5.2781 , allloss: 5.3162, dt: 1232.41ms, fracRes: 0.3267, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2595, norm(y): 0.9952, norm:2.0266, tok/sec: 106354.59, flops:111.63, batch-reuse:1
@ 1721 train 5.2953 , allloss: 5.3339, dt: 1272.78ms, fracRes: 0.3234, norm(attn): 0.1602, norm(output): 0.1729, norm(x): 0.2574, norm(y): 0.9951, norm:1.5314, tok/sec: 102981.15, flops:108.09, batch-reuse:1
@ 1722 train 5.3904 , allloss: 5.4297, dt: 1256.65ms, fracRes: 0.3244, norm(attn): 0.1602, norm(output): 0.1729, norm(x): 0.2590, norm(y): 0.9952, norm:1.8880, tok/sec: 104302.75, flops:109.48, batch-reuse:1
@ 1723 train 5.2915 , allloss: 5.3291, dt: 1244.15ms, fracRes: 0.3260, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2583, norm(y): 0.9953, norm:1.6479, tok/sec: 105350.89, flops:110.58, batch-reuse:1
@ 1724 train 5.2152 , allloss: 5.2521, dt: 1271.04ms, fracRes: 0.3266, norm(attn): 0.1582, norm(output): 0.1738, norm(x): 0.2599, norm(y): 0.9952, norm:1.5021, tok/sec: 103122.07, flops:108.24, batch-reuse:1
@ 1725 train 5.2592 , allloss: 5.2970, dt: 1272.35ms, fracRes: 0.3261, norm(attn): 0.1602, norm(output): 0.1729, norm(x): 0.2598, norm(y): 0.9951, norm:1.7580, tok/sec: 103015.81, flops:108.13, batch-reuse:1
@ 1726 train 5.2457 , allloss: 5.2838, dt: 1280.88ms, fracRes: 0.3265, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2594, norm(y): 0.9952, norm:1.4810, tok/sec: 102329.42, flops:107.41, batch-reuse:1
@ 1727 train 5.1932 , allloss: 5.2295, dt: 1284.80ms, fracRes: 0.3272, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2600, norm(y): 0.9952, norm:1.6131, tok/sec: 102017.51, flops:107.08, batch-reuse:1
@ 1728 train 5.3154 , allloss: 5.3523, dt: 1265.66ms, fracRes: 0.3278, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2602, norm(y): 0.9951, norm:1.5023, tok/sec: 103560.33, flops:108.70, batch-reuse:1
@ 1729 train 5.4191 , allloss: 5.4568, dt: 1255.02ms, fracRes: 0.3268, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2599, norm(y): 0.9951, norm:1.5472, tok/sec: 104438.34, flops:109.62, batch-reuse:1
@ 1730 train 5.3119 , allloss: 5.3492, dt: 1255.27ms, fracRes: 0.3287, norm(attn): 0.1592, norm(output): 0.1738, norm(x): 0.2612, norm(y): 0.9951, norm:1.6344, tok/sec: 104417.28, flops:109.60, batch-reuse:1
@ 1731 train 5.2588 , allloss: 5.2989, dt: 1250.59ms, fracRes: 0.3328, norm(attn): 0.1602, norm(output): 0.1729, norm(x): 0.2618, norm(y): 0.9952, norm:1.6570, tok/sec: 104808.12, flops:110.01, batch-reuse:1
@ 1732 train 5.2316 , allloss: 5.2690, dt: 1267.36ms, fracRes: 0.3326, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2612, norm(y): 0.9952, norm:1.5547, tok/sec: 103421.44, flops:108.55, batch-reuse:1
@ 1733 train 5.2360 , allloss: 5.2722, dt: 1271.39ms, fracRes: 0.3319, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2610, norm(y): 0.9952, norm:1.6231, tok/sec: 103093.53, flops:108.21, batch-reuse:1
@ 1734 train 5.5962 , allloss: 5.6343, dt: 1273.76ms, fracRes: 0.3367, norm(attn): 0.1523, norm(output): 0.1729, norm(x): 0.2634, norm(y): 0.9952, norm:1.6451, tok/sec: 102901.72, flops:108.01, batch-reuse:1
@ 1735 train 5.2559 , allloss: 5.2938, dt: 1271.69ms, fracRes: 0.3336, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2616, norm(y): 0.9952, norm:2.0347, tok/sec: 103069.06, flops:108.18, batch-reuse:1
@ 1736 train 5.2444 , allloss: 5.2829, dt: 1296.58ms, fracRes: 0.3344, norm(attn): 0.1602, norm(output): 0.1729, norm(x): 0.2623, norm(y): 0.9951, norm:1.6858, tok/sec: 101090.76, flops:106.11, batch-reuse:1
@ 1737 train 5.1918 , allloss: 5.2284, dt: 1257.83ms, fracRes: 0.3359, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2627, norm(y): 0.9951, norm:1.8230, tok/sec: 104204.91, flops:109.38, batch-reuse:1
@ 1738 train 5.1694 , allloss: 5.2072, dt: 1276.05ms, fracRes: 0.3313, norm(attn): 0.1621, norm(output): 0.1738, norm(x): 0.2623, norm(y): 0.9950, norm:1.6072, tok/sec: 102716.61, flops:107.81, batch-reuse:1
@ 1739 train 5.2590 , allloss: 5.2973, dt: 1259.63ms, fracRes: 0.3382, norm(attn): 0.1562, norm(output): 0.1738, norm(x): 0.2648, norm(y): 0.9952, norm:2.0009, tok/sec: 104056.17, flops:109.22, batch-reuse:1
@ 1740 train 5.1701 , allloss: 5.2076, dt: 1259.66ms, fracRes: 0.3366, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2634, norm(y): 0.9952, norm:1.8232, tok/sec: 104053.32, flops:109.22, batch-reuse:1
@ 1741 train 5.2536 , allloss: 5.2909, dt: 1255.09ms, fracRes: 0.3353, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2622, norm(y): 0.9953, norm:1.6582, tok/sec: 104432.23, flops:109.62, batch-reuse:1
@ 1742 train 5.2232 , allloss: 5.2608, dt: 1278.83ms, fracRes: 0.3350, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2621, norm(y): 0.9952, norm:1.4817, tok/sec: 102493.45, flops:107.58, batch-reuse:1
@ 1743 train 5.3010 , allloss: 5.3378, dt: 1274.36ms, fracRes: 0.3352, norm(attn): 0.1592, norm(output): 0.1748, norm(x): 0.2633, norm(y): 0.9951, norm:1.4426, tok/sec: 102853.37, flops:107.96, batch-reuse:1
@ 1744 train 5.1676 , allloss: 5.2041, dt: 1264.45ms, fracRes: 0.3316, norm(attn): 0.1611, norm(output): 0.1738, norm(x): 0.2618, norm(y): 0.9951, norm:1.6959, tok/sec: 103659.62, flops:108.80, batch-reuse:1
@ 1745 train 5.1668 , allloss: 5.2034, dt: 1293.48ms, fracRes: 0.3320, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2617, norm(y): 0.9952, norm:1.6236, tok/sec: 101332.79, flops:106.36, batch-reuse:1
@ 1746 train 5.2632 , allloss: 5.3017, dt: 1279.35ms, fracRes: 0.3328, norm(attn): 0.1602, norm(output): 0.1738, norm(x): 0.2626, norm(y): 0.9950, norm:1.4676, tok/sec: 102452.10, flops:107.54, batch-reuse:1
@ 1747 train 5.1248 , allloss: 5.1640, dt: 1245.90ms, fracRes: 0.3354, norm(attn): 0.1602, norm(output): 0.1719, norm(x): 0.2616, norm(y): 0.9952, norm:1.5036, tok/sec: 105202.49, flops:110.42, batch-reuse:1
@ 1748 train 5.1717 , allloss: 5.2078, dt: 1282.66ms, fracRes: 0.3322, norm(attn): 0.1611, norm(output): 0.1729, norm(x): 0.2612, norm(y): 0.9952, norm:1.4824, tok/sec: 102187.66, flops:107.26, batch-reuse:1
@ 1749 train 5.2751 , allloss: 5.3117, dt: 1273.87ms, fracRes: 0.3347, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2629, norm(y): 0.9952, norm:1.3673, tok/sec: 102892.66, flops:108.00, batch-reuse:1
@ 1750 train 5.2562 , allloss: 5.2931, dt: 1262.01ms, fracRes: 0.3330, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2623, norm(y): 0.9952, norm:1.4834, tok/sec: 103859.65, flops:109.01, batch-reuse:1
@ 1751 train 5.4778 , allloss: 5.5139, dt: 1266.11ms, fracRes: 0.3345, norm(attn): 0.1582, norm(output): 0.1758, norm(x): 0.2644, norm(y): 0.9951, norm:1.9806, tok/sec: 103523.38, flops:108.66, batch-reuse:1
@ 1752 train 5.4791 , allloss: 5.5186, dt: 1285.90ms, fracRes: 0.3338, norm(attn): 0.1582, norm(output): 0.1738, norm(x): 0.2624, norm(y): 0.9952, norm:1.8841, tok/sec: 101930.14, flops:106.99, batch-reuse:1
@ 1753 train 5.2837 , allloss: 5.3206, dt: 1284.95ms, fracRes: 0.3312, norm(attn): 0.1611, norm(output): 0.1729, norm(x): 0.2612, norm(y): 0.9951, norm:1.9765, tok/sec: 102005.73, flops:107.07, batch-reuse:1
@ 1754 train 5.2440 , allloss: 5.2845, dt: 1275.10ms, fracRes: 0.3326, norm(attn): 0.1621, norm(output): 0.1729, norm(x): 0.2619, norm(y): 0.9950, norm:1.7258, tok/sec: 102793.68, flops:107.90, batch-reuse:1
@ 1755 train 5.2479 , allloss: 5.2851, dt: 1282.31ms, fracRes: 0.3346, norm(attn): 0.1562, norm(output): 0.1729, norm(x): 0.2635, norm(y): 0.9952, norm:1.7277, tok/sec: 102215.32, flops:107.29, batch-reuse:1
@ 1756 train 5.2428 , allloss: 5.2801, dt: 1278.65ms, fracRes: 0.3322, norm(attn): 0.1572, norm(output): 0.1738, norm(x): 0.2630, norm(y): 0.9952, norm:1.6443, tok/sec: 102508.36, flops:107.60, batch-reuse:1
@ 1757 train 5.3057 , allloss: 5.3432, dt: 1262.04ms, fracRes: 0.3302, norm(attn): 0.1592, norm(output): 0.1738, norm(x): 0.2623, norm(y): 0.9951, norm:1.7339, tok/sec: 103857.59, flops:109.01, batch-reuse:1
@ 1758 train 5.3346 , allloss: 5.3707, dt: 1268.45ms, fracRes: 0.3285, norm(attn): 0.1611, norm(output): 0.1738, norm(x): 0.2610, norm(y): 0.9951, norm:1.7794, tok/sec: 103332.55, flops:108.46, batch-reuse:1
@ 1759 train 5.2794 , allloss: 5.3145, dt: 1260.53ms, fracRes: 0.3292, norm(attn): 0.1602, norm(output): 0.1738, norm(x): 0.2624, norm(y): 0.9951, norm:1.8318, tok/sec: 103981.66, flops:109.14, batch-reuse:1
@ 1760 train 5.1688 , allloss: 5.2065, dt: 1260.56ms, fracRes: 0.3290, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2608, norm(y): 0.9951, norm:1.9245, tok/sec: 103979.32, flops:109.14, batch-reuse:1
@ 1761 train 5.1262 , allloss: 5.1649, dt: 1280.09ms, fracRes: 0.3270, norm(attn): 0.1660, norm(output): 0.1738, norm(x): 0.2610, norm(y): 0.9950, norm:1.7822, tok/sec: 102393.00, flops:107.47, batch-reuse:1
@ 1762 train 5.0025 , allloss: 5.0412, dt: 1277.32ms, fracRes: 0.3295, norm(attn): 0.1582, norm(output): 0.1738, norm(x): 0.2613, norm(y): 0.9951, norm:1.5780, tok/sec: 102614.70, flops:107.71, batch-reuse:1
@ 1763 train 5.1493 , allloss: 5.1860, dt: 1263.50ms, fracRes: 0.3318, norm(attn): 0.1572, norm(output): 0.1748, norm(x): 0.2626, norm(y): 0.9952, norm:1.7129, tok/sec: 103737.49, flops:108.89, batch-reuse:1
@ 1764 train 5.1742 , allloss: 5.2105, dt: 1283.56ms, fracRes: 0.3345, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2630, norm(y): 0.9953, norm:1.8594, tok/sec: 102116.02, flops:107.18, batch-reuse:1
@ 1765 train 5.1777 , allloss: 5.2158, dt: 1283.43ms, fracRes: 0.3377, norm(attn): 0.1572, norm(output): 0.1729, norm(x): 0.2633, norm(y): 0.9952, norm:1.6028, tok/sec: 102126.08, flops:107.19, batch-reuse:1
@ 1766 train 5.0995 , allloss: 5.1375, dt: 1264.29ms, fracRes: 0.3383, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2632, norm(y): 0.9952, norm:1.5245, tok/sec: 103672.53, flops:108.82, batch-reuse:1
@ 1767 train 5.1693 , allloss: 5.2070, dt: 1274.96ms, fracRes: 0.3331, norm(attn): 0.1602, norm(output): 0.1738, norm(x): 0.2634, norm(y): 0.9951, norm:1.5339, tok/sec: 102804.81, flops:107.91, batch-reuse:1
@ 1768 train 5.2441 , allloss: 5.2806, dt: 1257.39ms, fracRes: 0.3341, norm(attn): 0.1572, norm(output): 0.1748, norm(x): 0.2659, norm(y): 0.9951, norm:1.6233, tok/sec: 104240.93, flops:109.41, batch-reuse:1
@ 1769 train 5.1285 , allloss: 5.1644, dt: 1267.61ms, fracRes: 0.3326, norm(attn): 0.1562, norm(output): 0.1738, norm(x): 0.2656, norm(y): 0.9952, norm:2.1673, tok/sec: 103401.02, flops:108.53, batch-reuse:1
@ 1770 train 5.1143 , allloss: 5.1519, dt: 1283.17ms, fracRes: 0.3340, norm(attn): 0.1582, norm(output): 0.1738, norm(x): 0.2657, norm(y): 0.9951, norm:1.4270, tok/sec: 102147.10, flops:107.22, batch-reuse:1
@ 1771 train 5.1206 , allloss: 5.1580, dt: 1257.20ms, fracRes: 0.3343, norm(attn): 0.1533, norm(output): 0.1729, norm(x): 0.2645, norm(y): 0.9952, norm:1.5288, tok/sec: 104257.10, flops:109.43, batch-reuse:1
@ 1772 train 5.1409 , allloss: 5.1780, dt: 1269.69ms, fracRes: 0.3301, norm(attn): 0.1562, norm(output): 0.1738, norm(x): 0.2643, norm(y): 0.9952, norm:1.5264, tok/sec: 103231.44, flops:108.36, batch-reuse:1
@ 1773 train 5.0220 , allloss: 5.0592, dt: 1277.91ms, fracRes: 0.3277, norm(attn): 0.1602, norm(output): 0.1738, norm(x): 0.2625, norm(y): 0.9951, norm:1.3515, tok/sec: 102567.44, flops:107.66, batch-reuse:1
@ 1774 train 5.1994 , allloss: 5.2365, dt: 1262.78ms, fracRes: 0.3296, norm(attn): 0.1582, norm(output): 0.1738, norm(x): 0.2633, norm(y): 0.9951, norm:1.6168, tok/sec: 103796.29, flops:108.95, batch-reuse:1
@ 1775 train 5.1341 , allloss: 5.1718, dt: 1259.12ms, fracRes: 0.3336, norm(attn): 0.1582, norm(output): 0.1738, norm(x): 0.2643, norm(y): 0.9952, norm:1.7563, tok/sec: 104097.77, flops:109.26, batch-reuse:1
@ 1776 train 5.0882 , allloss: 5.1254, dt: 1267.27ms, fracRes: 0.3298, norm(attn): 0.1641, norm(output): 0.1738, norm(x): 0.2630, norm(y): 0.9950, norm:1.3616, tok/sec: 103428.37, flops:108.56, batch-reuse:1
@ 1777 train 5.0722 , allloss: 5.1094, dt: 1266.91ms, fracRes: 0.3333, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.2642, norm(y): 0.9952, norm:1.7925, tok/sec: 103457.74, flops:108.59, batch-reuse:1
@ 1778 train 5.4146 , allloss: 5.4513, dt: 1268.13ms, fracRes: 0.3407, norm(attn): 0.1562, norm(output): 0.1748, norm(x): 0.2677, norm(y): 0.9952, norm:1.7737, tok/sec: 103358.50, flops:108.49, batch-reuse:1
@ 1779 train 5.0706 , allloss: 5.1081, dt: 1250.97ms, fracRes: 0.3352, norm(attn): 0.1572, norm(output): 0.1758, norm(x): 0.2651, norm(y): 0.9951, norm:1.4960, tok/sec: 104776.18, flops:109.98, batch-reuse:1
@ 1780 train 5.1749 , allloss: 5.2113, dt: 1264.56ms, fracRes: 0.3362, norm(attn): 0.1621, norm(output): 0.1758, norm(x): 0.2657, norm(y): 0.9950, norm:2.1074, tok/sec: 103650.48, flops:108.79, batch-reuse:1
@ 1781 train 5.1763 , allloss: 5.2138, dt: 1253.28ms, fracRes: 0.3353, norm(attn): 0.1641, norm(output): 0.1748, norm(x): 0.2654, norm(y): 0.9950, norm:1.6442, tok/sec: 104583.12, flops:109.77, batch-reuse:1
@ 1782 train 5.1902 , allloss: 5.2282, dt: 1255.16ms, fracRes: 0.3349, norm(attn): 0.1592, norm(output): 0.1758, norm(x): 0.2657, norm(y): 0.9951, norm:1.5677, tok/sec: 104426.84, flops:109.61, batch-reuse:1
@ 1783 train 5.1465 , allloss: 5.1825, dt: 1258.38ms, fracRes: 0.3329, norm(attn): 0.1572, norm(output): 0.1748, norm(x): 0.2640, norm(y): 0.9952, norm:1.9627, tok/sec: 104159.70, flops:109.33, batch-reuse:1
@ 1784 train 5.1116 , allloss: 5.1488, dt: 1255.94ms, fracRes: 0.3323, norm(attn): 0.1562, norm(output): 0.1748, norm(x): 0.2637, norm(y): 0.9952, norm:1.8800, tok/sec: 104361.80, flops:109.54, batch-reuse:1
@ 1785 train 5.1451 , allloss: 5.1839, dt: 1272.22ms, fracRes: 0.3294, norm(attn): 0.1621, norm(output): 0.1729, norm(x): 0.2628, norm(y): 0.9951, norm:1.7075, tok/sec: 103026.02, flops:108.14, batch-reuse:1
@ 1786 train 5.1796 , allloss: 5.2155, dt: 1287.91ms, fracRes: 0.3298, norm(attn): 0.1582, norm(output): 0.1748, norm(x): 0.2640, norm(y): 0.9951, norm:1.4572, tok/sec: 101770.84, flops:106.82, batch-reuse:1
@ 1787 train 5.1483 , allloss: 5.1845, dt: 1256.97ms, fracRes: 0.3333, norm(attn): 0.1582, norm(output): 0.1758, norm(x): 0.2665, norm(y): 0.9951, norm:1.8004, tok/sec: 104275.81, flops:109.45, batch-reuse:1
@ 1788 train 5.1723 , allloss: 5.2080, dt: 1262.36ms, fracRes: 0.3336, norm(attn): 0.1572, norm(output): 0.1758, norm(x): 0.2667, norm(y): 0.9951, norm:1.5239, tok/sec: 103830.64, flops:108.98, batch-reuse:1
@ 1789 train 5.1860 , allloss: 5.2216, dt: 1281.82ms, fracRes: 0.3322, norm(attn): 0.1582, norm(output): 0.1748, norm(x): 0.2648, norm(y): 0.9951, norm:1.5978, tok/sec: 102254.53, flops:107.33, batch-reuse:1
@ 1790 train 5.2410 , allloss: 5.2774, dt: 1269.48ms, fracRes: 0.3345, norm(attn): 0.1602, norm(output): 0.1748, norm(x): 0.2658, norm(y): 0.9951, norm:1.7238, tok/sec: 103248.34, flops:108.37, batch-reuse:1
@ 1791 train 5.1682 , allloss: 5.2073, dt: 1257.02ms, fracRes: 0.3340, norm(attn): 0.1611, norm(output): 0.1738, norm(x): 0.2649, norm(y): 0.9951, norm:1.7086, tok/sec: 104271.61, flops:109.45, batch-reuse:1
@ 1792 train 5.2200 , allloss: 5.2579, dt: 1280.82ms, fracRes: 0.3365, norm(attn): 0.1611, norm(output): 0.1738, norm(x): 0.2656, norm(y): 0.9950, norm:1.3225, tok/sec: 102334.11, flops:107.41, batch-reuse:1
@ 1793 train 5.1821 , allloss: 5.2174, dt: 1272.90ms, fracRes: 0.3372, norm(attn): 0.1611, norm(output): 0.1748, norm(x): 0.2659, norm(y): 0.9952, norm:1.8717, tok/sec: 102970.83, flops:108.08, batch-reuse:1
@ 1794 train 5.1935 , allloss: 5.2319, dt: 1268.00ms, fracRes: 0.3423, norm(attn): 0.1621, norm(output): 0.1738, norm(x): 0.2695, norm(y): 0.9951, norm:1.6660, tok/sec: 103368.96, flops:108.50, batch-reuse:1
@ 1795 train 5.1890 , allloss: 5.2277, dt: 1278.71ms, fracRes: 0.3396, norm(attn): 0.1572, norm(output): 0.1748, norm(x): 0.2669, norm(y): 0.9951, norm:1.5224, tok/sec: 102503.62, flops:107.59, batch-reuse:1
@ 1796 train 5.0811 , allloss: 5.1191, dt: 1249.99ms, fracRes: 0.3369, norm(attn): 0.1602, norm(output): 0.1738, norm(x): 0.2664, norm(y): 0.9951, norm:1.8842, tok/sec: 104858.08, flops:110.06, batch-reuse:1
@ 1797 train 5.1551 , allloss: 5.1920, dt: 1244.42ms, fracRes: 0.3394, norm(attn): 0.1602, norm(output): 0.1738, norm(x): 0.2677, norm(y): 0.9952, norm:1.9174, tok/sec: 105327.72, flops:110.56, batch-reuse:1
@ 1798 train 5.1172 , allloss: 5.1547, dt: 1244.77ms, fracRes: 0.3381, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.2657, norm(y): 0.9952, norm:1.4330, tok/sec: 105298.43, flops:110.52, batch-reuse:1
@ 1799 train 5.1772 , allloss: 5.2138, dt: 1257.89ms, fracRes: 0.3367, norm(attn): 0.1602, norm(output): 0.1758, norm(x): 0.2665, norm(y): 0.9951, norm:1.4043, tok/sec: 104199.85, flops:109.37, batch-reuse:1
@ 1800 train 5.0977 , allloss: 5.1356, dt: 1288.10ms, fracRes: 0.3348, norm(attn): 0.1631, norm(output): 0.1748, norm(x): 0.2658, norm(y): 0.9951, norm:1.6120, tok/sec: 101755.85, flops:106.81, batch-reuse:1
@ 1801 train 5.0858 , allloss: 5.1259, dt: 1278.40ms, fracRes: 0.3367, norm(attn): 0.1641, norm(output): 0.1758, norm(x): 0.2673, norm(y): 0.9950, norm:1.4931, tok/sec: 102528.55, flops:107.62, batch-reuse:1
@ 1802 train 5.2054 , allloss: 5.2429, dt: 1283.38ms, fracRes: 0.3351, norm(attn): 0.1582, norm(output): 0.1748, norm(x): 0.2661, norm(y): 0.9951, norm:1.6206, tok/sec: 102130.46, flops:107.20, batch-reuse:1
@ 1803 train 5.1536 , allloss: 5.1906, dt: 1254.42ms, fracRes: 0.3364, norm(attn): 0.1602, norm(output): 0.1748, norm(x): 0.2675, norm(y): 0.9951, norm:1.5739, tok/sec: 104487.85, flops:109.67, batch-reuse:1
@ 1804 train 5.1141 , allloss: 5.1496, dt: 1284.35ms, fracRes: 0.3308, norm(attn): 0.1641, norm(output): 0.1768, norm(x): 0.2658, norm(y): 0.9951, norm:2.0487, tok/sec: 102052.92, flops:107.12, batch-reuse:1
@ 1805 train 5.1983 , allloss: 5.2368, dt: 1282.51ms, fracRes: 0.3383, norm(attn): 0.1660, norm(output): 0.1758, norm(x): 0.2690, norm(y): 0.9950, norm:1.6846, tok/sec: 102199.57, flops:107.27, batch-reuse:1
@ 1806 train 5.1485 , allloss: 5.1849, dt: 1261.19ms, fracRes: 0.3342, norm(attn): 0.1611, norm(output): 0.1748, norm(x): 0.2666, norm(y): 0.9951, norm:1.7848, tok/sec: 103926.88, flops:109.08, batch-reuse:1
@ 1807 train 5.2033 , allloss: 5.2407, dt: 1273.97ms, fracRes: 0.3335, norm(attn): 0.1602, norm(output): 0.1758, norm(x): 0.2672, norm(y): 0.9951, norm:1.5746, tok/sec: 102884.46, flops:107.99, batch-reuse:1
@ 1808 train 5.0990 , allloss: 5.1416, dt: 1297.87ms, fracRes: 0.3406, norm(attn): 0.1602, norm(output): 0.1748, norm(x): 0.2711, norm(y): 0.9951, norm:1.5335, tok/sec: 100990.20, flops:106.00, batch-reuse:1
@ 1809 train 5.0663 , allloss: 5.1018, dt: 1264.06ms, fracRes: 0.3379, norm(attn): 0.1611, norm(output): 0.1758, norm(x): 0.2693, norm(y): 0.9951, norm:1.7044, tok/sec: 103691.42, flops:108.84, batch-reuse:1
@ 1810 train 5.0154 , allloss: 5.0543, dt: 1284.16ms, fracRes: 0.3353, norm(attn): 0.1631, norm(output): 0.1758, norm(x): 0.2685, norm(y): 0.9950, norm:2.1099, tok/sec: 102068.46, flops:107.13, batch-reuse:1
@ 1811 train 5.0806 , allloss: 5.1169, dt: 1299.73ms, fracRes: 0.3367, norm(attn): 0.1582, norm(output): 0.1758, norm(x): 0.2696, norm(y): 0.9951, norm:1.9936, tok/sec: 100845.48, flops:105.85, batch-reuse:1
@ 1812 train 5.0926 , allloss: 5.1293, dt: 1263.77ms, fracRes: 0.3354, norm(attn): 0.1602, norm(output): 0.1768, norm(x): 0.2688, norm(y): 0.9950, norm:1.4025, tok/sec: 103715.07, flops:108.86, batch-reuse:1
@ 1813 train 5.0581 , allloss: 5.0955, dt: 1283.67ms, fracRes: 0.3350, norm(attn): 0.1621, norm(output): 0.1758, norm(x): 0.2679, norm(y): 0.9950, norm:1.6543, tok/sec: 102107.26, flops:107.18, batch-reuse:1
@ 1814 train 5.1354 , allloss: 5.1731, dt: 1271.03ms, fracRes: 0.3342, norm(attn): 0.1602, norm(output): 0.1758, norm(x): 0.2664, norm(y): 0.9950, norm:1.6751, tok/sec: 103122.53, flops:108.24, batch-reuse:1
@ 1815 train 5.0531 , allloss: 5.0898, dt: 1289.08ms, fracRes: 0.3337, norm(attn): 0.1621, norm(output): 0.1748, norm(x): 0.2660, norm(y): 0.9950, norm:1.4807, tok/sec: 101679.04, flops:106.73, batch-reuse:1
@ 1816 train 5.0673 , allloss: 5.1045, dt: 1274.42ms, fracRes: 0.3355, norm(attn): 0.1602, norm(output): 0.1748, norm(x): 0.2659, norm(y): 0.9950, norm:1.4739, tok/sec: 102848.66, flops:107.95, batch-reuse:1
@ 1817 train 5.0775 , allloss: 5.1167, dt: 1292.10ms, fracRes: 0.3375, norm(attn): 0.1611, norm(output): 0.1748, norm(x): 0.2678, norm(y): 0.9950, norm:1.6138, tok/sec: 101441.24, flops:106.48, batch-reuse:1
@ 1818 train 5.0376 , allloss: 5.0749, dt: 1263.66ms, fracRes: 0.3357, norm(attn): 0.1611, norm(output): 0.1748, norm(x): 0.2676, norm(y): 0.9951, norm:1.5831, tok/sec: 103724.38, flops:108.87, batch-reuse:1
@ 1819 train 5.1520 , allloss: 5.1894, dt: 1262.38ms, fracRes: 0.3336, norm(attn): 0.1621, norm(output): 0.1748, norm(x): 0.2667, norm(y): 0.9951, norm:1.7190, tok/sec: 103828.97, flops:108.98, batch-reuse:1
@ 1820 train 5.0616 , allloss: 5.0988, dt: 1254.28ms, fracRes: 0.3325, norm(attn): 0.1611, norm(output): 0.1758, norm(x): 0.2667, norm(y): 0.9951, norm:1.6246, tok/sec: 104499.45, flops:109.69, batch-reuse:1
@ 1821 train 4.9757 , allloss: 5.0151, dt: 1263.65ms, fracRes: 0.3344, norm(attn): 0.1641, norm(output): 0.1758, norm(x): 0.2679, norm(y): 0.9950, norm:1.4737, tok/sec: 103725.07, flops:108.87, batch-reuse:1
@ 1822 train 4.9575 , allloss: 4.9952, dt: 1280.39ms, fracRes: 0.3356, norm(attn): 0.1602, norm(output): 0.1758, norm(x): 0.2678, norm(y): 0.9951, norm:1.5751, tok/sec: 102368.90, flops:107.45, batch-reuse:1
@ 1823 train 4.9968 , allloss: 5.0349, dt: 1270.02ms, fracRes: 0.3366, norm(attn): 0.1602, norm(output): 0.1748, norm(x): 0.2688, norm(y): 0.9951, norm:1.5034, tok/sec: 103204.42, flops:108.33, batch-reuse:1
@ 1824 train 5.0400 , allloss: 5.0768, dt: 1243.72ms, fracRes: 0.3374, norm(attn): 0.1621, norm(output): 0.1768, norm(x): 0.2703, norm(y): 0.9951, norm:1.6807, tok/sec: 105387.48, flops:110.62, batch-reuse:1
@ 1825 train 5.0889 , allloss: 5.1263, dt: 1265.06ms, fracRes: 0.3370, norm(attn): 0.1621, norm(output): 0.1758, norm(x): 0.2701, norm(y): 0.9950, norm:1.5783, tok/sec: 103609.69, flops:108.75, batch-reuse:1
@ 1826 train 5.0767 , allloss: 5.1144, dt: 1238.71ms, fracRes: 0.3395, norm(attn): 0.1611, norm(output): 0.1758, norm(x): 0.2698, norm(y): 0.9951, norm:1.6532, tok/sec: 105813.37, flops:111.07, batch-reuse:1
@ 1827 train 5.1358 , allloss: 5.1756, dt: 1250.40ms, fracRes: 0.3417, norm(attn): 0.1621, norm(output): 0.1758, norm(x): 0.2716, norm(y): 0.9951, norm:1.8890, tok/sec: 104823.67, flops:110.03, batch-reuse:1
@ 1828 train 5.0604 , allloss: 5.0968, dt: 1243.04ms, fracRes: 0.3356, norm(attn): 0.1641, norm(output): 0.1768, norm(x): 0.2693, norm(y): 0.9950, norm:1.4827, tok/sec: 105444.61, flops:110.68, batch-reuse:1
@ 1829 train 5.1435 , allloss: 5.1813, dt: 1263.47ms, fracRes: 0.3381, norm(attn): 0.1602, norm(output): 0.1758, norm(x): 0.2701, norm(y): 0.9951, norm:2.1315, tok/sec: 103739.67, flops:108.89, batch-reuse:1
@ 1830 train 4.9555 , allloss: 4.9917, dt: 1267.95ms, fracRes: 0.3320, norm(attn): 0.1650, norm(output): 0.1768, norm(x): 0.2676, norm(y): 0.9950, norm:1.4747, tok/sec: 103373.12, flops:108.50, batch-reuse:1
@ 1831 train 5.0509 , allloss: 5.0870, dt: 1277.78ms, fracRes: 0.3345, norm(attn): 0.1621, norm(output): 0.1768, norm(x): 0.2686, norm(y): 0.9951, norm:1.9886, tok/sec: 102577.77, flops:107.67, batch-reuse:1
@ 1832 train 5.0733 , allloss: 5.1115, dt: 1276.71ms, fracRes: 0.3358, norm(attn): 0.1631, norm(output): 0.1758, norm(x): 0.2685, norm(y): 0.9950, norm:1.6157, tok/sec: 102664.03, flops:107.76, batch-reuse:1
@ 1833 train 5.1698 , allloss: 5.2068, dt: 1263.71ms, fracRes: 0.3330, norm(attn): 0.1650, norm(output): 0.1758, norm(x): 0.2674, norm(y): 0.9950, norm:1.7565, tok/sec: 103719.74, flops:108.87, batch-reuse:1
@ 1834 train 5.0812 , allloss: 5.1167, dt: 1281.21ms, fracRes: 0.3307, norm(attn): 0.1641, norm(output): 0.1777, norm(x): 0.2682, norm(y): 0.9951, norm:1.9716, tok/sec: 102303.20, flops:107.38, batch-reuse:1
@ 1835 train 4.9804 , allloss: 5.0170, dt: 1278.82ms, fracRes: 0.3322, norm(attn): 0.1611, norm(output): 0.1758, norm(x): 0.2683, norm(y): 0.9950, norm:1.7409, tok/sec: 102494.62, flops:107.58, batch-reuse:1
@ 1836 train 5.1049 , allloss: 5.1442, dt: 1271.40ms, fracRes: 0.3378, norm(attn): 0.1631, norm(output): 0.1768, norm(x): 0.2714, norm(y): 0.9949, norm:1.5366, tok/sec: 103092.79, flops:108.21, batch-reuse:1
@ 1837 train 5.1647 , allloss: 5.2026, dt: 1282.27ms, fracRes: 0.3343, norm(attn): 0.1680, norm(output): 0.1768, norm(x): 0.2694, norm(y): 0.9948, norm:1.6030, tok/sec: 102219.05, flops:107.29, batch-reuse:1
@ 1838 train 5.0736 , allloss: 5.1104, dt: 1250.66ms, fracRes: 0.3392, norm(attn): 0.1572, norm(output): 0.1768, norm(x): 0.2708, norm(y): 0.9952, norm:1.5496, tok/sec: 104802.49, flops:110.00, batch-reuse:1
@ 1839 train 5.0090 , allloss: 5.0455, dt: 1258.64ms, fracRes: 0.3404, norm(attn): 0.1572, norm(output): 0.1758, norm(x): 0.2715, norm(y): 0.9952, norm:1.6162, tok/sec: 104138.09, flops:109.31, batch-reuse:1
@ 1840 train 5.0070 , allloss: 5.0440, dt: 1281.88ms, fracRes: 0.3409, norm(attn): 0.1562, norm(output): 0.1768, norm(x): 0.2720, norm(y): 0.9952, norm:1.6378, tok/sec: 102249.79, flops:107.32, batch-reuse:1
@ 1841 train 5.1040 , allloss: 5.1412, dt: 1273.04ms, fracRes: 0.3351, norm(attn): 0.1592, norm(output): 0.1768, norm(x): 0.2700, norm(y): 0.9950, norm:1.6884, tok/sec: 102959.59, flops:108.07, batch-reuse:1
@ 1842 train 5.0227 , allloss: 5.0609, dt: 1262.24ms, fracRes: 0.3358, norm(attn): 0.1611, norm(output): 0.1768, norm(x): 0.2698, norm(y): 0.9950, norm:1.5785, tok/sec: 103840.91, flops:108.99, batch-reuse:1
@ 1843 train 5.0393 , allloss: 5.0767, dt: 1265.65ms, fracRes: 0.3398, norm(attn): 0.1582, norm(output): 0.1768, norm(x): 0.2715, norm(y): 0.9951, norm:1.5324, tok/sec: 103560.74, flops:108.70, batch-reuse:1
@ 1844 train 5.0490 , allloss: 5.0866, dt: 1263.86ms, fracRes: 0.3385, norm(attn): 0.1602, norm(output): 0.1768, norm(x): 0.2720, norm(y): 0.9950, norm:2.1811, tok/sec: 103707.53, flops:108.85, batch-reuse:1
@ 1845 train 5.0270 , allloss: 5.0634, dt: 1252.57ms, fracRes: 0.3399, norm(attn): 0.1621, norm(output): 0.1768, norm(x): 0.2721, norm(y): 0.9950, norm:1.8527, tok/sec: 104642.30, flops:109.84, batch-reuse:1
@ 1846 train 5.0626 , allloss: 5.0984, dt: 1232.02ms, fracRes: 0.3423, norm(attn): 0.1592, norm(output): 0.1768, norm(x): 0.2726, norm(y): 0.9950, norm:1.5137, tok/sec: 106387.97, flops:111.67, batch-reuse:1
@ 1847 train 5.0040 , allloss: 5.0419, dt: 1278.86ms, fracRes: 0.3373, norm(attn): 0.1650, norm(output): 0.1777, norm(x): 0.2708, norm(y): 0.9949, norm:1.5889, tok/sec: 102491.22, flops:107.58, batch-reuse:1
@ 1848 train 4.8853 , allloss: 4.9224, dt: 1279.84ms, fracRes: 0.3384, norm(attn): 0.1592, norm(output): 0.1777, norm(x): 0.2707, norm(y): 0.9950, norm:1.7462, tok/sec: 102413.05, flops:107.50, batch-reuse:1
@ 1849 train 5.0782 , allloss: 5.1159, dt: 1256.00ms, fracRes: 0.3370, norm(attn): 0.1621, norm(output): 0.1758, norm(x): 0.2694, norm(y): 0.9950, norm:1.7386, tok/sec: 104356.86, flops:109.54, batch-reuse:1
@ 1850 train 4.9317 , allloss: 4.9670, dt: 1271.40ms, fracRes: 0.3364, norm(attn): 0.1650, norm(output): 0.1768, norm(x): 0.2690, norm(y): 0.9950, norm:1.4685, tok/sec: 103092.69, flops:108.21, batch-reuse:1
@ 1851 train 4.9164 , allloss: 4.9539, dt: 1285.18ms, fracRes: 0.3426, norm(attn): 0.1582, norm(output): 0.1768, norm(x): 0.2719, norm(y): 0.9951, norm:1.9720, tok/sec: 101987.51, flops:107.05, batch-reuse:1
@ 1852 train 5.0337 , allloss: 5.0695, dt: 1301.83ms, fracRes: 0.3440, norm(attn): 0.1572, norm(output): 0.1768, norm(x): 0.2724, norm(y): 0.9951, norm:1.6135, tok/sec: 100682.68, flops:105.68, batch-reuse:1
@ 1853 train 5.0297 , allloss: 5.0664, dt: 1281.21ms, fracRes: 0.3430, norm(attn): 0.1621, norm(output): 0.1768, norm(x): 0.2728, norm(y): 0.9950, norm:1.6994, tok/sec: 102303.12, flops:107.38, batch-reuse:1
@ 1854 train 5.0994 , allloss: 5.1369, dt: 1254.62ms, fracRes: 0.3418, norm(attn): 0.1660, norm(output): 0.1768, norm(x): 0.2726, norm(y): 0.9949, norm:1.6791, tok/sec: 104471.49, flops:109.66, batch-reuse:1
@ 1855 train 5.1977 , allloss: 5.2349, dt: 1284.72ms, fracRes: 0.3427, norm(attn): 0.1680, norm(output): 0.1777, norm(x): 0.2726, norm(y): 0.9949, norm:1.6112, tok/sec: 102023.53, flops:107.09, batch-reuse:1
@ 1856 train 5.0899 , allloss: 5.1275, dt: 1275.00ms, fracRes: 0.3393, norm(attn): 0.1631, norm(output): 0.1768, norm(x): 0.2701, norm(y): 0.9950, norm:1.7225, tok/sec: 102801.39, flops:107.90, batch-reuse:1
@ 1857 train 5.0997 , allloss: 5.1366, dt: 1281.72ms, fracRes: 0.3411, norm(attn): 0.1670, norm(output): 0.1768, norm(x): 0.2724, norm(y): 0.9950, norm:1.6667, tok/sec: 102262.55, flops:107.34, batch-reuse:1
@ 1858 train 5.2054 , allloss: 5.2401, dt: 1254.23ms, fracRes: 0.3365, norm(attn): 0.1602, norm(output): 0.1768, norm(x): 0.2686, norm(y): 0.9950, norm:2.2036, tok/sec: 104504.27, flops:109.69, batch-reuse:1
@ 1859 train 5.2247 , allloss: 5.2604, dt: 1257.86ms, fracRes: 0.3397, norm(attn): 0.1641, norm(output): 0.1777, norm(x): 0.2725, norm(y): 0.9949, norm:2.0308, tok/sec: 104202.26, flops:109.37, batch-reuse:1
@ 1860 train 5.2195 , allloss: 5.2597, dt: 1275.78ms, fracRes: 0.3417, norm(attn): 0.1660, norm(output): 0.1777, norm(x): 0.2734, norm(y): 0.9949, norm:1.7934, tok/sec: 102738.85, flops:107.84, batch-reuse:1
@ 1861 train 5.1418 , allloss: 5.1795, dt: 1255.09ms, fracRes: 0.3387, norm(attn): 0.1660, norm(output): 0.1777, norm(x): 0.2729, norm(y): 0.9949, norm:1.6703, tok/sec: 104432.39, flops:109.62, batch-reuse:1
@ 1862 train 5.1805 , allloss: 5.2159, dt: 1250.36ms, fracRes: 0.3338, norm(attn): 0.1670, norm(output): 0.1787, norm(x): 0.2703, norm(y): 0.9949, norm:1.5720, tok/sec: 104827.67, flops:110.03, batch-reuse:1
@ 1863 train 5.1991 , allloss: 5.2353, dt: 1278.40ms, fracRes: 0.3375, norm(attn): 0.1641, norm(output): 0.1777, norm(x): 0.2712, norm(y): 0.9950, norm:1.5292, tok/sec: 102528.32, flops:107.62, batch-reuse:1
@ 1864 train 5.1434 , allloss: 5.1808, dt: 1261.07ms, fracRes: 0.3382, norm(attn): 0.1641, norm(output): 0.1768, norm(x): 0.2723, norm(y): 0.9950, norm:1.6362, tok/sec: 103936.88, flops:109.10, batch-reuse:1
@ 1865 train 5.1328 , allloss: 5.1680, dt: 1242.77ms, fracRes: 0.3396, norm(attn): 0.1631, norm(output): 0.1807, norm(x): 0.2732, norm(y): 0.9949, norm:1.7615, tok/sec: 105467.30, flops:110.70, batch-reuse:1
@ 1866 train 5.5319 , allloss: 5.5706, dt: 1268.65ms, fracRes: 0.3496, norm(attn): 0.1602, norm(output): 0.1768, norm(x): 0.2773, norm(y): 0.9949, norm:2.0469, tok/sec: 103316.51, flops:108.44, batch-reuse:1
@ 1867 train 5.1796 , allloss: 5.2150, dt: 1283.43ms, fracRes: 0.3405, norm(attn): 0.1621, norm(output): 0.1787, norm(x): 0.2736, norm(y): 0.9949, norm:2.0040, tok/sec: 102126.10, flops:107.19, batch-reuse:1
@ 1868 train 5.2450 , allloss: 5.2800, dt: 1298.56ms, fracRes: 0.3432, norm(attn): 0.1602, norm(output): 0.1816, norm(x): 0.2771, norm(y): 0.9948, norm:1.8283, tok/sec: 100936.36, flops:105.95, batch-reuse:1
@ 1869 train 5.1702 , allloss: 5.2070, dt: 1313.94ms, fracRes: 0.3427, norm(attn): 0.1650, norm(output): 0.1787, norm(x): 0.2755, norm(y): 0.9948, norm:1.6315, tok/sec: 99754.86, flops:104.71, batch-reuse:1
@ 1870 train 5.1407 , allloss: 5.1792, dt: 1246.04ms, fracRes: 0.3423, norm(attn): 0.1631, norm(output): 0.1787, norm(x): 0.2765, norm(y): 0.9949, norm:1.7487, tok/sec: 105191.18, flops:110.41, batch-reuse:1
@ 1871 train 5.1415 , allloss: 5.1769, dt: 1262.03ms, fracRes: 0.3349, norm(attn): 0.1650, norm(output): 0.1816, norm(x): 0.2742, norm(y): 0.9949, norm:1.5975, tok/sec: 103857.82, flops:109.01, batch-reuse:1
@ 1872 train 5.2403 , allloss: 5.2760, dt: 1283.14ms, fracRes: 0.3394, norm(attn): 0.1611, norm(output): 0.1807, norm(x): 0.2755, norm(y): 0.9951, norm:1.7051, tok/sec: 102149.02, flops:107.22, batch-reuse:1
@ 1873 train 5.2637 , allloss: 5.2989, dt: 1261.18ms, fracRes: 0.3388, norm(attn): 0.1592, norm(output): 0.1797, norm(x): 0.2751, norm(y): 0.9951, norm:1.8190, tok/sec: 103928.11, flops:109.09, batch-reuse:1
@ 1874 train 5.1009 , allloss: 5.1374, dt: 1280.46ms, fracRes: 0.3392, norm(attn): 0.1602, norm(output): 0.1787, norm(x): 0.2747, norm(y): 0.9950, norm:1.5877, tok/sec: 102363.47, flops:107.44, batch-reuse:1
@ 1875 train 5.1342 , allloss: 5.1710, dt: 1274.05ms, fracRes: 0.3328, norm(attn): 0.1680, norm(output): 0.1807, norm(x): 0.2716, norm(y): 0.9949, norm:1.6011, tok/sec: 102878.51, flops:107.98, batch-reuse:1
@ 1876 train 5.2509 , allloss: 5.2896, dt: 1269.66ms, fracRes: 0.3386, norm(attn): 0.1670, norm(output): 0.1807, norm(x): 0.2745, norm(y): 0.9948, norm:1.7184, tok/sec: 103234.07, flops:108.36, batch-reuse:1
@ 1877 train 5.2186 , allloss: 5.2555, dt: 1286.34ms, fracRes: 0.3426, norm(attn): 0.1631, norm(output): 0.1787, norm(x): 0.2758, norm(y): 0.9949, norm:1.7930, tok/sec: 101895.68, flops:106.95, batch-reuse:1
@ 1878 train 5.1635 , allloss: 5.1993, dt: 1267.43ms, fracRes: 0.3417, norm(attn): 0.1641, norm(output): 0.1777, norm(x): 0.2744, norm(y): 0.9950, norm:1.4247, tok/sec: 103415.92, flops:108.55, batch-reuse:1
@ 1879 train 5.1917 , allloss: 5.2269, dt: 1242.88ms, fracRes: 0.3422, norm(attn): 0.1631, norm(output): 0.1826, norm(x): 0.2770, norm(y): 0.9950, norm:1.9678, tok/sec: 105458.40, flops:110.69, batch-reuse:1
@ 1880 train 5.1900 , allloss: 5.2255, dt: 1270.54ms, fracRes: 0.3414, norm(attn): 0.1641, norm(output): 0.1816, norm(x): 0.2764, norm(y): 0.9950, norm:1.6521, tok/sec: 103162.24, flops:108.28, batch-reuse:1
@ 1881 train 5.1140 , allloss: 5.1506, dt: 1251.80ms, fracRes: 0.3416, norm(attn): 0.1660, norm(output): 0.1797, norm(x): 0.2755, norm(y): 0.9949, norm:1.6841, tok/sec: 104706.74, flops:109.90, batch-reuse:1
@ 1882 train 5.2029 , allloss: 5.2392, dt: 1272.27ms, fracRes: 0.3438, norm(attn): 0.1641, norm(output): 0.1787, norm(x): 0.2766, norm(y): 0.9949, norm:1.4749, tok/sec: 103022.51, flops:108.14, batch-reuse:1
@ 1883 train 5.1117 , allloss: 5.1490, dt: 1264.53ms, fracRes: 0.3422, norm(attn): 0.1680, norm(output): 0.1807, norm(x): 0.2756, norm(y): 0.9948, norm:1.5838, tok/sec: 103652.37, flops:108.80, batch-reuse:1
@ 1884 train 5.0654 , allloss: 5.1024, dt: 1285.89ms, fracRes: 0.3425, norm(attn): 0.1650, norm(output): 0.1787, norm(x): 0.2754, norm(y): 0.9949, norm:1.5319, tok/sec: 101931.27, flops:106.99, batch-reuse:1
@ 1885 train 5.1409 , allloss: 5.1764, dt: 1283.40ms, fracRes: 0.3413, norm(attn): 0.1650, norm(output): 0.1787, norm(x): 0.2743, norm(y): 0.9949, norm:1.5242, tok/sec: 102128.91, flops:107.20, batch-reuse:1
@ 1886 train 5.1140 , allloss: 5.1516, dt: 1271.96ms, fracRes: 0.3458, norm(attn): 0.1631, norm(output): 0.1787, norm(x): 0.2757, norm(y): 0.9950, norm:1.6066, tok/sec: 103047.48, flops:108.16, batch-reuse:1
@ 1887 train 5.0647 , allloss: 5.1009, dt: 1272.10ms, fracRes: 0.3452, norm(attn): 0.1641, norm(output): 0.1768, norm(x): 0.2761, norm(y): 0.9950, norm:1.4621, tok/sec: 103035.66, flops:108.15, batch-reuse:1
@ 1888 train 5.2644 , allloss: 5.3003, dt: 1288.51ms, fracRes: 0.3448, norm(attn): 0.1680, norm(output): 0.1797, norm(x): 0.2767, norm(y): 0.9949, norm:1.6938, tok/sec: 101724.07, flops:106.77, batch-reuse:1
@ 1889 train 5.0930 , allloss: 5.1313, dt: 1286.68ms, fracRes: 0.3448, norm(attn): 0.1660, norm(output): 0.1807, norm(x): 0.2767, norm(y): 0.9949, norm:1.8234, tok/sec: 101868.04, flops:106.92, batch-reuse:1
@ 1890 train 5.2618 , allloss: 5.3000, dt: 1266.15ms, fracRes: 0.3465, norm(attn): 0.1670, norm(output): 0.1777, norm(x): 0.2777, norm(y): 0.9950, norm:1.5159, tok/sec: 103520.00, flops:108.66, batch-reuse:1
@ 1891 train 5.1601 , allloss: 5.1954, dt: 1256.78ms, fracRes: 0.3426, norm(attn): 0.1670, norm(output): 0.1797, norm(x): 0.2760, norm(y): 0.9950, norm:1.6217, tok/sec: 104291.97, flops:109.47, batch-reuse:1
@ 1892 train 5.0968 , allloss: 5.1329, dt: 1260.25ms, fracRes: 0.3427, norm(attn): 0.1680, norm(output): 0.1787, norm(x): 0.2766, norm(y): 0.9949, norm:1.3559, tok/sec: 104004.75, flops:109.17, batch-reuse:1
@ 1893 train 5.1905 , allloss: 5.2259, dt: 1263.59ms, fracRes: 0.3440, norm(attn): 0.1650, norm(output): 0.1777, norm(x): 0.2766, norm(y): 0.9949, norm:1.4623, tok/sec: 103730.02, flops:108.88, batch-reuse:1
@ 1894 train 5.0624 , allloss: 5.0992, dt: 1296.16ms, fracRes: 0.3449, norm(attn): 0.1680, norm(output): 0.1768, norm(x): 0.2759, norm(y): 0.9950, norm:1.5039, tok/sec: 101123.19, flops:106.14, batch-reuse:1
@ 1895 train 5.2542 , allloss: 5.2911, dt: 1262.41ms, fracRes: 0.3478, norm(attn): 0.1650, norm(output): 0.1787, norm(x): 0.2768, norm(y): 0.9950, norm:1.6272, tok/sec: 103826.75, flops:108.98, batch-reuse:1
@ 1896 train 5.2595 , allloss: 5.2942, dt: 1283.30ms, fracRes: 0.3468, norm(attn): 0.1670, norm(output): 0.1797, norm(x): 0.2758, norm(y): 0.9950, norm:1.4889, tok/sec: 102136.34, flops:107.21, batch-reuse:1
@ 1897 train 5.2117 , allloss: 5.2466, dt: 1293.59ms, fracRes: 0.3465, norm(attn): 0.1641, norm(output): 0.1797, norm(x): 0.2767, norm(y): 0.9949, norm:1.5011, tok/sec: 101324.14, flops:106.35, batch-reuse:1
@ 1898 train 5.1834 , allloss: 5.2198, dt: 1262.78ms, fracRes: 0.3466, norm(attn): 0.1650, norm(output): 0.1787, norm(x): 0.2776, norm(y): 0.9949, norm:1.6126, tok/sec: 103796.29, flops:108.95, batch-reuse:1
@ 1899 train 5.1731 , allloss: 5.2090, dt: 1245.05ms, fracRes: 0.3440, norm(attn): 0.1689, norm(output): 0.1797, norm(x): 0.2769, norm(y): 0.9948, norm:1.6594, tok/sec: 105274.51, flops:110.50, batch-reuse:1
@ 1900 train 5.1255 , allloss: 5.1623, dt: 1275.88ms, fracRes: 0.3401, norm(attn): 0.1689, norm(output): 0.1797, norm(x): 0.2748, norm(y): 0.9949, norm:1.5081, tok/sec: 102730.75, flops:107.83, batch-reuse:1
@ 1901 train 5.2102 , allloss: 5.2463, dt: 1260.86ms, fracRes: 0.3415, norm(attn): 0.1680, norm(output): 0.1777, norm(x): 0.2757, norm(y): 0.9950, norm:2.1243, tok/sec: 103954.60, flops:109.11, batch-reuse:1
@ 1902 train 5.1637 , allloss: 5.2001, dt: 1280.91ms, fracRes: 0.3398, norm(attn): 0.1689, norm(output): 0.1777, norm(x): 0.2741, norm(y): 0.9950, norm:1.5977, tok/sec: 102327.08, flops:107.41, batch-reuse:1
@ 1903 train 5.1612 , allloss: 5.1962, dt: 1258.21ms, fracRes: 0.3393, norm(attn): 0.1680, norm(output): 0.1797, norm(x): 0.2752, norm(y): 0.9949, norm:1.3951, tok/sec: 104173.51, flops:109.34, batch-reuse:1
@ 1904 train 5.1301 , allloss: 5.1642, dt: 1286.12ms, fracRes: 0.3404, norm(attn): 0.1670, norm(output): 0.1787, norm(x): 0.2749, norm(y): 0.9949, norm:1.4803, tok/sec: 101913.11, flops:106.97, batch-reuse:1
@ 1905 train 5.0484 , allloss: 5.0830, dt: 1266.37ms, fracRes: 0.3398, norm(attn): 0.1670, norm(output): 0.1816, norm(x): 0.2741, norm(y): 0.9950, norm:1.5026, tok/sec: 103502.48, flops:108.64, batch-reuse:1
@ 1906 train 5.0660 , allloss: 5.1027, dt: 1262.06ms, fracRes: 0.3390, norm(attn): 0.1689, norm(output): 0.1777, norm(x): 0.2739, norm(y): 0.9950, norm:1.8315, tok/sec: 103855.39, flops:109.01, batch-reuse:1
@ 1907 train 5.1144 , allloss: 5.1482, dt: 1250.86ms, fracRes: 0.3411, norm(attn): 0.1670, norm(output): 0.1816, norm(x): 0.2759, norm(y): 0.9950, norm:1.4805, tok/sec: 104785.43, flops:109.99, batch-reuse:1
@ 1908 train 5.1153 , allloss: 5.1516, dt: 1258.95ms, fracRes: 0.3445, norm(attn): 0.1680, norm(output): 0.1807, norm(x): 0.2783, norm(y): 0.9949, norm:1.4674, tok/sec: 104111.86, flops:109.28, batch-reuse:1
@ 1909 train 5.2638 , allloss: 5.2986, dt: 1293.53ms, fracRes: 0.3441, norm(attn): 0.1621, norm(output): 0.1826, norm(x): 0.2777, norm(y): 0.9950, norm:1.7415, tok/sec: 101329.11, flops:106.36, batch-reuse:1
@ 1910 train 5.2008 , allloss: 5.2352, dt: 1290.52ms, fracRes: 0.3425, norm(attn): 0.1670, norm(output): 0.1816, norm(x): 0.2771, norm(y): 0.9949, norm:1.8632, tok/sec: 101565.30, flops:106.61, batch-reuse:1
@ 1911 train 5.1421 , allloss: 5.1749, dt: 1271.39ms, fracRes: 0.3429, norm(attn): 0.1641, norm(output): 0.1816, norm(x): 0.2767, norm(y): 0.9949, norm:1.5218, tok/sec: 103093.37, flops:108.21, batch-reuse:1
@ 1912 train 5.1242 , allloss: 5.1599, dt: 1290.06ms, fracRes: 0.3453, norm(attn): 0.1621, norm(output): 0.1797, norm(x): 0.2769, norm(y): 0.9949, norm:1.5464, tok/sec: 101601.28, flops:106.64, batch-reuse:1
@ 1913 train 5.1347 , allloss: 5.1704, dt: 1279.29ms, fracRes: 0.3430, norm(attn): 0.1670, norm(output): 0.1797, norm(x): 0.2763, norm(y): 0.9949, norm:1.5330, tok/sec: 102457.18, flops:107.54, batch-reuse:1
@ 1914 train 5.1250 , allloss: 5.1589, dt: 1272.03ms, fracRes: 0.3460, norm(attn): 0.1611, norm(output): 0.1816, norm(x): 0.2777, norm(y): 0.9949, norm:1.5611, tok/sec: 103041.89, flops:108.16, batch-reuse:1
@ 1915 train 5.1123 , allloss: 5.1457, dt: 1302.97ms, fracRes: 0.3451, norm(attn): 0.1621, norm(output): 0.1807, norm(x): 0.2774, norm(y): 0.9950, norm:1.8581, tok/sec: 100595.17, flops:105.59, batch-reuse:1
@ 1916 train 5.3102 , allloss: 5.3434, dt: 1253.51ms, fracRes: 0.3452, norm(attn): 0.1650, norm(output): 0.1826, norm(x): 0.2794, norm(y): 0.9949, norm:1.7303, tok/sec: 104564.38, flops:109.75, batch-reuse:1
@ 1917 train 5.1708 , allloss: 5.2086, dt: 1240.26ms, fracRes: 0.3450, norm(attn): 0.1641, norm(output): 0.1826, norm(x): 0.2793, norm(y): 0.9949, norm:1.8878, tok/sec: 105680.69, flops:110.93, batch-reuse:1
@ 1918 train 5.1844 , allloss: 5.2198, dt: 1289.36ms, fracRes: 0.3436, norm(attn): 0.1670, norm(output): 0.1816, norm(x): 0.2777, norm(y): 0.9948, norm:1.4595, tok/sec: 101656.26, flops:106.70, batch-reuse:1
@ 1919 train 5.1276 , allloss: 5.1638, dt: 1291.19ms, fracRes: 0.3464, norm(attn): 0.1680, norm(output): 0.1807, norm(x): 0.2790, norm(y): 0.9948, norm:1.6968, tok/sec: 101512.72, flops:106.55, batch-reuse:1
@ 1920 train 5.1165 , allloss: 5.1512, dt: 1288.33ms, fracRes: 0.3439, norm(attn): 0.1631, norm(output): 0.1797, norm(x): 0.2777, norm(y): 0.9949, norm:1.7423, tok/sec: 101738.09, flops:106.79, batch-reuse:1
@ 1921 train 5.1578 , allloss: 5.1937, dt: 1278.61ms, fracRes: 0.3439, norm(attn): 0.1660, norm(output): 0.1816, norm(x): 0.2773, norm(y): 0.9949, norm:1.7019, tok/sec: 102511.65, flops:107.60, batch-reuse:1
@ 1922 train 5.0694 , allloss: 5.1039, dt: 1266.69ms, fracRes: 0.3441, norm(attn): 0.1641, norm(output): 0.1816, norm(x): 0.2780, norm(y): 0.9949, norm:1.5217, tok/sec: 103475.85, flops:108.61, batch-reuse:1
@ 1923 train 5.1578 , allloss: 5.1950, dt: 1309.26ms, fracRes: 0.3471, norm(attn): 0.1660, norm(output): 0.1797, norm(x): 0.2793, norm(y): 0.9948, norm:1.4914, tok/sec: 100111.38, flops:105.08, batch-reuse:1
@ 1924 train 5.1704 , allloss: 5.2066, dt: 1285.84ms, fracRes: 0.3477, norm(attn): 0.1650, norm(output): 0.1816, norm(x): 0.2796, norm(y): 0.9949, norm:1.6733, tok/sec: 101934.99, flops:106.99, batch-reuse:1
@ 1925 train 5.1549 , allloss: 5.1918, dt: 1257.41ms, fracRes: 0.3456, norm(attn): 0.1699, norm(output): 0.1807, norm(x): 0.2783, norm(y): 0.9948, norm:1.5159, tok/sec: 104240.04, flops:109.41, batch-reuse:1
@ 1926 train 5.1634 , allloss: 5.1983, dt: 1278.38ms, fracRes: 0.3466, norm(attn): 0.1660, norm(output): 0.1816, norm(x): 0.2790, norm(y): 0.9950, norm:1.6174, tok/sec: 102529.68, flops:107.62, batch-reuse:1
@ 1927 train 5.1788 , allloss: 5.2136, dt: 1293.65ms, fracRes: 0.3485, norm(attn): 0.1631, norm(output): 0.1836, norm(x): 0.2813, norm(y): 0.9949, norm:1.7848, tok/sec: 101319.19, flops:106.35, batch-reuse:1
@ 1928 train 5.1066 , allloss: 5.1430, dt: 1283.21ms, fracRes: 0.3442, norm(attn): 0.1670, norm(output): 0.1816, norm(x): 0.2785, norm(y): 0.9948, norm:1.6371, tok/sec: 102144.07, flops:107.21, batch-reuse:1
@ 1929 train 5.1175 , allloss: 5.1543, dt: 1285.34ms, fracRes: 0.3403, norm(attn): 0.1699, norm(output): 0.1816, norm(x): 0.2758, norm(y): 0.9948, norm:1.6721, tok/sec: 101974.76, flops:107.04, batch-reuse:1
@ 1930 train 5.0618 , allloss: 5.0976, dt: 1268.35ms, fracRes: 0.3420, norm(attn): 0.1689, norm(output): 0.1816, norm(x): 0.2779, norm(y): 0.9949, norm:1.8706, tok/sec: 103340.88, flops:108.47, batch-reuse:1
@ 1931 train 5.2253 , allloss: 5.2604, dt: 1275.83ms, fracRes: 0.3423, norm(attn): 0.1641, norm(output): 0.1826, norm(x): 0.2781, norm(y): 0.9949, norm:1.6287, tok/sec: 102734.40, flops:107.83, batch-reuse:1
@ 1932 train 5.1829 , allloss: 5.2182, dt: 1277.36ms, fracRes: 0.3394, norm(attn): 0.1680, norm(output): 0.1816, norm(x): 0.2775, norm(y): 0.9948, norm:1.7168, tok/sec: 102611.41, flops:107.70, batch-reuse:1
@ 1933 train 5.2028 , allloss: 5.2371, dt: 1275.93ms, fracRes: 0.3417, norm(attn): 0.1670, norm(output): 0.1836, norm(x): 0.2801, norm(y): 0.9948, norm:1.7102, tok/sec: 102726.39, flops:107.82, batch-reuse:1
@ 1934 train 5.2379 , allloss: 5.2730, dt: 1304.97ms, fracRes: 0.3429, norm(attn): 0.1660, norm(output): 0.1816, norm(x): 0.2797, norm(y): 0.9948, norm:1.5741, tok/sec: 100440.51, flops:105.43, batch-reuse:1
@ 1935 train 5.0833 , allloss: 5.1179, dt: 1286.60ms, fracRes: 0.3386, norm(attn): 0.1699, norm(output): 0.1797, norm(x): 0.2773, norm(y): 0.9947, norm:1.7320, tok/sec: 101874.55, flops:106.93, batch-reuse:1
@ 1936 train 5.1108 , allloss: 5.1460, dt: 1282.51ms, fracRes: 0.3427, norm(attn): 0.1670, norm(output): 0.1816, norm(x): 0.2778, norm(y): 0.9949, norm:1.5360, tok/sec: 102199.30, flops:107.27, batch-reuse:1
@ 1937 train 5.0713 , allloss: 5.1064, dt: 1264.83ms, fracRes: 0.3407, norm(attn): 0.1689, norm(output): 0.1826, norm(x): 0.2784, norm(y): 0.9948, norm:1.6602, tok/sec: 103627.76, flops:108.77, batch-reuse:1
@ 1938 train 5.1245 , allloss: 5.1602, dt: 1289.01ms, fracRes: 0.3423, norm(attn): 0.1689, norm(output): 0.1826, norm(x): 0.2793, norm(y): 0.9949, norm:1.7277, tok/sec: 101683.86, flops:106.73, batch-reuse:1
@ 1939 train 5.1071 , allloss: 5.1447, dt: 1290.66ms, fracRes: 0.3441, norm(attn): 0.1670, norm(output): 0.1816, norm(x): 0.2797, norm(y): 0.9948, norm:1.4103, tok/sec: 101554.61, flops:106.59, batch-reuse:1
@ 1940 train 5.2706 , allloss: 5.3064, dt: 1287.28ms, fracRes: 0.3455, norm(attn): 0.1689, norm(output): 0.1826, norm(x): 0.2806, norm(y): 0.9948, norm:1.6509, tok/sec: 101820.98, flops:106.87, batch-reuse:1
@ 1941 train 5.1759 , allloss: 5.2095, dt: 1280.11ms, fracRes: 0.3457, norm(attn): 0.1670, norm(output): 0.1816, norm(x): 0.2808, norm(y): 0.9949, norm:1.6185, tok/sec: 102390.83, flops:107.47, batch-reuse:1
@ 1942 train 5.0720 , allloss: 5.1056, dt: 1269.00ms, fracRes: 0.3483, norm(attn): 0.1641, norm(output): 0.1826, norm(x): 0.2811, norm(y): 0.9949, norm:1.5863, tok/sec: 103287.80, flops:108.41, batch-reuse:1
@ 1943 train 5.1171 , allloss: 5.1512, dt: 1265.33ms, fracRes: 0.3476, norm(attn): 0.1660, norm(output): 0.1826, norm(x): 0.2803, norm(y): 0.9948, norm:1.6124, tok/sec: 103586.85, flops:108.73, batch-reuse:1
@ 1944 train 5.0986 , allloss: 5.1330, dt: 1282.23ms, fracRes: 0.3470, norm(attn): 0.1680, norm(output): 0.1826, norm(x): 0.2806, norm(y): 0.9948, norm:1.3738, tok/sec: 102222.13, flops:107.30, batch-reuse:1
@ 1945 train 5.0313 , allloss: 5.0663, dt: 1256.52ms, fracRes: 0.3462, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2799, norm(y): 0.9948, norm:1.6216, tok/sec: 104313.48, flops:109.49, batch-reuse:1
@ 1946 train 5.0459 , allloss: 5.0810, dt: 1253.70ms, fracRes: 0.3497, norm(attn): 0.1680, norm(output): 0.1816, norm(x): 0.2808, norm(y): 0.9949, norm:1.3933, tok/sec: 104547.92, flops:109.74, batch-reuse:1
@ 1947 train 5.2047 , allloss: 5.2389, dt: 1256.73ms, fracRes: 0.3475, norm(attn): 0.1650, norm(output): 0.1816, norm(x): 0.2811, norm(y): 0.9948, norm:1.5197, tok/sec: 104295.94, flops:109.47, batch-reuse:1
@ 1948 train 5.0400 , allloss: 5.0765, dt: 1266.59ms, fracRes: 0.3410, norm(attn): 0.1729, norm(output): 0.1807, norm(x): 0.2774, norm(y): 0.9947, norm:1.3723, tok/sec: 103484.11, flops:108.62, batch-reuse:1
@ 1949 train 5.1027 , allloss: 5.1369, dt: 1281.89ms, fracRes: 0.3404, norm(attn): 0.1670, norm(output): 0.1816, norm(x): 0.2774, norm(y): 0.9950, norm:1.6222, tok/sec: 102248.97, flops:107.32, batch-reuse:1
@ 1950 train 5.2009 , allloss: 5.2364, dt: 1251.64ms, fracRes: 0.3437, norm(attn): 0.1621, norm(output): 0.1816, norm(x): 0.2802, norm(y): 0.9950, norm:1.7616, tok/sec: 104719.98, flops:109.92, batch-reuse:1
@ 1951 train 5.0796 , allloss: 5.1148, dt: 1271.38ms, fracRes: 0.3431, norm(attn): 0.1689, norm(output): 0.1816, norm(x): 0.2803, norm(y): 0.9949, norm:1.6642, tok/sec: 103094.28, flops:108.21, batch-reuse:1
@ 1952 train 5.0712 , allloss: 5.1079, dt: 1274.35ms, fracRes: 0.3447, norm(attn): 0.1680, norm(output): 0.1816, norm(x): 0.2801, norm(y): 0.9948, norm:1.6466, tok/sec: 102853.82, flops:107.96, batch-reuse:1
@ 1953 train 5.0660 , allloss: 5.1014, dt: 1261.88ms, fracRes: 0.3464, norm(attn): 0.1689, norm(output): 0.1816, norm(x): 0.2809, norm(y): 0.9948, norm:1.5538, tok/sec: 103870.36, flops:109.03, batch-reuse:1
@ 1954 train 5.0364 , allloss: 5.0712, dt: 1251.25ms, fracRes: 0.3464, norm(attn): 0.1689, norm(output): 0.1826, norm(x): 0.2809, norm(y): 0.9948, norm:1.5911, tok/sec: 104752.82, flops:109.95, batch-reuse:1
@ 1955 train 5.0522 , allloss: 5.0877, dt: 1269.51ms, fracRes: 0.3504, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2830, norm(y): 0.9949, norm:1.5875, tok/sec: 103246.19, flops:108.37, batch-reuse:1
@ 1956 train 4.9256 , allloss: 4.9617, dt: 1258.43ms, fracRes: 0.3492, norm(attn): 0.1699, norm(output): 0.1816, norm(x): 0.2806, norm(y): 0.9949, norm:1.4742, tok/sec: 104154.98, flops:109.32, batch-reuse:1
@ 1957 train 5.0692 , allloss: 5.1037, dt: 1270.17ms, fracRes: 0.3486, norm(attn): 0.1660, norm(output): 0.1826, norm(x): 0.2821, norm(y): 0.9949, norm:1.4718, tok/sec: 103192.64, flops:108.31, batch-reuse:1
@ 1958 train 5.0430 , allloss: 5.0781, dt: 1248.00ms, fracRes: 0.3458, norm(attn): 0.1699, norm(output): 0.1826, norm(x): 0.2821, norm(y): 0.9947, norm:1.4872, tok/sec: 105025.47, flops:110.24, batch-reuse:1
@ 1959 train 4.9920 , allloss: 5.0272, dt: 1279.98ms, fracRes: 0.3437, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2796, norm(y): 0.9948, norm:1.7711, tok/sec: 102401.78, flops:107.48, batch-reuse:1
@ 1960 train 4.9500 , allloss: 4.9852, dt: 1262.66ms, fracRes: 0.3454, norm(attn): 0.1660, norm(output): 0.1816, norm(x): 0.2797, norm(y): 0.9949, norm:1.5213, tok/sec: 103806.58, flops:108.96, batch-reuse:1
@ 1961 train 5.1000 , allloss: 5.1374, dt: 1274.21ms, fracRes: 0.3481, norm(attn): 0.1689, norm(output): 0.1816, norm(x): 0.2824, norm(y): 0.9949, norm:1.6548, tok/sec: 102865.29, flops:107.97, batch-reuse:1
@ 1962 train 4.9954 , allloss: 5.0294, dt: 1294.12ms, fracRes: 0.3421, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2791, norm(y): 0.9947, norm:1.5693, tok/sec: 101282.92, flops:106.31, batch-reuse:1
@ 1963 train 5.1538 , allloss: 5.1895, dt: 1267.54ms, fracRes: 0.3493, norm(attn): 0.1680, norm(output): 0.1836, norm(x): 0.2830, norm(y): 0.9948, norm:1.6400, tok/sec: 103406.78, flops:108.54, batch-reuse:1
@ 1964 train 5.0733 , allloss: 5.1097, dt: 1279.28ms, fracRes: 0.3481, norm(attn): 0.1699, norm(output): 0.1816, norm(x): 0.2821, norm(y): 0.9948, norm:1.6961, tok/sec: 102457.81, flops:107.54, batch-reuse:1
@ 1965 train 5.0331 , allloss: 5.0676, dt: 1259.48ms, fracRes: 0.3446, norm(attn): 0.1680, norm(output): 0.1846, norm(x): 0.2798, norm(y): 0.9948, norm:1.4517, tok/sec: 104068.46, flops:109.23, batch-reuse:1
@ 1966 train 5.0449 , allloss: 5.0799, dt: 1249.62ms, fracRes: 0.3473, norm(attn): 0.1660, norm(output): 0.1826, norm(x): 0.2819, norm(y): 0.9948, norm:1.5280, tok/sec: 104889.59, flops:110.10, batch-reuse:1
@ 1967 train 4.9982 , allloss: 5.0332, dt: 1260.13ms, fracRes: 0.3456, norm(attn): 0.1660, norm(output): 0.1826, norm(x): 0.2806, norm(y): 0.9948, norm:1.6305, tok/sec: 104014.81, flops:109.18, batch-reuse:1
@ 1968 train 5.0399 , allloss: 5.0734, dt: 1289.39ms, fracRes: 0.3433, norm(attn): 0.1680, norm(output): 0.1836, norm(x): 0.2806, norm(y): 0.9948, norm:1.8207, tok/sec: 101654.23, flops:106.70, batch-reuse:1
@ 1969 train 5.0824 , allloss: 5.1175, dt: 1265.85ms, fracRes: 0.3465, norm(attn): 0.1680, norm(output): 0.1846, norm(x): 0.2814, norm(y): 0.9948, norm:1.4830, tok/sec: 103544.59, flops:108.68, batch-reuse:1
@ 1970 train 5.0172 , allloss: 5.0519, dt: 1264.34ms, fracRes: 0.3464, norm(attn): 0.1680, norm(output): 0.1846, norm(x): 0.2827, norm(y): 0.9948, norm:1.4626, tok/sec: 103668.09, flops:108.81, batch-reuse:1
@ 1971 train 5.0947 , allloss: 5.1281, dt: 1261.40ms, fracRes: 0.3478, norm(attn): 0.1641, norm(output): 0.1846, norm(x): 0.2840, norm(y): 0.9949, norm:1.7153, tok/sec: 103910.34, flops:109.07, batch-reuse:1
@ 1972 train 5.0459 , allloss: 5.0809, dt: 1270.44ms, fracRes: 0.3499, norm(attn): 0.1689, norm(output): 0.1836, norm(x): 0.2837, norm(y): 0.9948, norm:1.6064, tok/sec: 103170.39, flops:108.29, batch-reuse:1
@ 1973 train 5.0422 , allloss: 5.0782, dt: 1259.32ms, fracRes: 0.3489, norm(attn): 0.1719, norm(output): 0.1826, norm(x): 0.2829, norm(y): 0.9948, norm:1.6472, tok/sec: 104081.39, flops:109.25, batch-reuse:1
@ 1974 train 5.0695 , allloss: 5.1055, dt: 1288.28ms, fracRes: 0.3537, norm(attn): 0.1680, norm(output): 0.1846, norm(x): 0.2863, norm(y): 0.9949, norm:1.8960, tok/sec: 101741.57, flops:106.79, batch-reuse:1
@ 1975 train 4.9096 , allloss: 4.9478, dt: 1269.45ms, fracRes: 0.3512, norm(attn): 0.1699, norm(output): 0.1816, norm(x): 0.2836, norm(y): 0.9948, norm:1.6025, tok/sec: 103250.79, flops:108.38, batch-reuse:1
@ 1976 train 5.1237 , allloss: 5.1596, dt: 1286.33ms, fracRes: 0.3488, norm(attn): 0.1719, norm(output): 0.1836, norm(x): 0.2848, norm(y): 0.9947, norm:1.4857, tok/sec: 101895.83, flops:106.95, batch-reuse:1
@ 1977 train 4.9592 , allloss: 4.9938, dt: 1252.28ms, fracRes: 0.3453, norm(attn): 0.1680, norm(output): 0.1826, norm(x): 0.2826, norm(y): 0.9949, norm:1.7973, tok/sec: 104666.31, flops:109.86, batch-reuse:1
@ 1978 train 5.0849 , allloss: 5.1200, dt: 1257.98ms, fracRes: 0.3442, norm(attn): 0.1650, norm(output): 0.1846, norm(x): 0.2824, norm(y): 0.9950, norm:1.7719, tok/sec: 104192.43, flops:109.36, batch-reuse:1
@ 1979 train 5.0766 , allloss: 5.1122, dt: 1269.41ms, fracRes: 0.3418, norm(attn): 0.1689, norm(output): 0.1826, norm(x): 0.2808, norm(y): 0.9949, norm:1.9155, tok/sec: 103254.51, flops:108.38, batch-reuse:1
@ 1980 train 5.0357 , allloss: 5.0730, dt: 1285.01ms, fracRes: 0.3425, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2810, norm(y): 0.9948, norm:1.6238, tok/sec: 102001.00, flops:107.06, batch-reuse:1
@ 1981 train 5.0299 , allloss: 5.0659, dt: 1261.24ms, fracRes: 0.3438, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2811, norm(y): 0.9948, norm:1.3538, tok/sec: 103922.91, flops:109.08, batch-reuse:1
@ 1982 train 4.9622 , allloss: 4.9961, dt: 1259.35ms, fracRes: 0.3404, norm(attn): 0.1719, norm(output): 0.1836, norm(x): 0.2798, norm(y): 0.9947, norm:1.5988, tok/sec: 104079.06, flops:109.24, batch-reuse:1
@ 1983 train 5.0522 , allloss: 5.0863, dt: 1286.15ms, fracRes: 0.3420, norm(attn): 0.1699, norm(output): 0.1846, norm(x): 0.2804, norm(y): 0.9948, norm:1.6145, tok/sec: 101910.20, flops:106.97, batch-reuse:1
@ 1984 train 5.0089 , allloss: 5.0437, dt: 1279.62ms, fracRes: 0.3429, norm(attn): 0.1689, norm(output): 0.1826, norm(x): 0.2799, norm(y): 0.9948, norm:1.4041, tok/sec: 102430.07, flops:107.51, batch-reuse:1
@ 1985 train 5.0114 , allloss: 5.0471, dt: 1284.14ms, fracRes: 0.3470, norm(attn): 0.1689, norm(output): 0.1826, norm(x): 0.2814, norm(y): 0.9948, norm:1.5438, tok/sec: 102069.69, flops:107.14, batch-reuse:1
@ 1986 train 5.0902 , allloss: 5.1246, dt: 1249.55ms, fracRes: 0.3466, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2832, norm(y): 0.9947, norm:1.6235, tok/sec: 104895.15, flops:110.10, batch-reuse:1
@ 1987 train 5.0776 , allloss: 5.1127, dt: 1286.35ms, fracRes: 0.3506, norm(attn): 0.1650, norm(output): 0.1846, norm(x): 0.2861, norm(y): 0.9948, norm:1.5326, tok/sec: 101894.75, flops:106.95, batch-reuse:1
@ 1988 train 5.0077 , allloss: 5.0406, dt: 1267.88ms, fracRes: 0.3487, norm(attn): 0.1650, norm(output): 0.1846, norm(x): 0.2849, norm(y): 0.9949, norm:1.8160, tok/sec: 103378.52, flops:108.51, batch-reuse:1
@ 1989 train 5.0246 , allloss: 5.0598, dt: 1290.65ms, fracRes: 0.3512, norm(attn): 0.1660, norm(output): 0.1836, norm(x): 0.2862, norm(y): 0.9948, norm:1.4945, tok/sec: 101554.98, flops:106.60, batch-reuse:1
@ 1990 train 5.0822 , allloss: 5.1159, dt: 1269.14ms, fracRes: 0.3500, norm(attn): 0.1680, norm(output): 0.1846, norm(x): 0.2852, norm(y): 0.9947, norm:1.4362, tok/sec: 103275.90, flops:108.40, batch-reuse:1
@ 1991 train 4.9620 , allloss: 4.9955, dt: 1242.85ms, fracRes: 0.3514, norm(attn): 0.1660, norm(output): 0.1826, norm(x): 0.2854, norm(y): 0.9948, norm:1.6205, tok/sec: 105461.05, flops:110.70, batch-reuse:1
@ 1992 train 5.0234 , allloss: 5.0583, dt: 1245.73ms, fracRes: 0.3506, norm(attn): 0.1621, norm(output): 0.1816, norm(x): 0.2846, norm(y): 0.9948, norm:1.6268, tok/sec: 105216.83, flops:110.44, batch-reuse:1
@ 1993 train 4.9283 , allloss: 4.9636, dt: 1267.11ms, fracRes: 0.3503, norm(attn): 0.1670, norm(output): 0.1826, norm(x): 0.2844, norm(y): 0.9948, norm:1.6996, tok/sec: 103441.62, flops:108.58, batch-reuse:1
@ 1994 train 4.9812 , allloss: 5.0168, dt: 1271.67ms, fracRes: 0.3492, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2847, norm(y): 0.9947, norm:1.3632, tok/sec: 103070.97, flops:108.19, batch-reuse:1
@ 1995 train 4.9742 , allloss: 5.0082, dt: 1260.49ms, fracRes: 0.3484, norm(attn): 0.1621, norm(output): 0.1826, norm(x): 0.2840, norm(y): 0.9949, norm:1.6937, tok/sec: 103984.55, flops:109.15, batch-reuse:1
@ 1996 train 5.0057 , allloss: 5.0391, dt: 1255.98ms, fracRes: 0.3495, norm(attn): 0.1660, norm(output): 0.1846, norm(x): 0.2860, norm(y): 0.9948, norm:1.8009, tok/sec: 104358.33, flops:109.54, batch-reuse:1
@ 1997 train 4.9179 , allloss: 4.9519, dt: 1256.40ms, fracRes: 0.3446, norm(attn): 0.1641, norm(output): 0.1846, norm(x): 0.2825, norm(y): 0.9948, norm:1.6518, tok/sec: 104323.38, flops:109.50, batch-reuse:1
@ 1998 train 4.9343 , allloss: 4.9696, dt: 1284.31ms, fracRes: 0.3479, norm(attn): 0.1699, norm(output): 0.1836, norm(x): 0.2840, norm(y): 0.9947, norm:1.5096, tok/sec: 102056.65, flops:107.12, batch-reuse:1
@ 1999 train 4.8709 , allloss: 4.9069, dt: 1298.10ms, fracRes: 0.3477, norm(attn): 0.1699, norm(output): 0.1826, norm(x): 0.2834, norm(y): 0.9948, norm:1.6671, tok/sec: 100972.45, flops:105.98, batch-reuse:1
@ 2000 val 5.0558
@ 2000 train 4.9524 , allloss: 4.9885, dt: 1870.91ms, fracRes: 0.3463, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2816, norm(y): 0.9948, norm:1.5962, tok/sec: 70057.77, flops:73.53, batch-reuse:1
@ 2001 train 5.0109 , allloss: 5.0462, dt: 1265.25ms, fracRes: 0.3481, norm(attn): 0.1709, norm(output): 0.1826, norm(x): 0.2845, norm(y): 0.9948, norm:1.4210, tok/sec: 103593.49, flops:108.74, batch-reuse:1
@ 2002 train 5.0146 , allloss: 5.0486, dt: 1244.50ms, fracRes: 0.3448, norm(attn): 0.1719, norm(output): 0.1846, norm(x): 0.2835, norm(y): 0.9947, norm:1.5437, tok/sec: 105320.76, flops:110.55, batch-reuse:1
@ 2003 train 5.0262 , allloss: 5.0606, dt: 1251.64ms, fracRes: 0.3463, norm(attn): 0.1709, norm(output): 0.1846, norm(x): 0.2850, norm(y): 0.9947, norm:1.7825, tok/sec: 104720.18, flops:109.92, batch-reuse:1
@ 2004 train 5.0254 , allloss: 5.0608, dt: 1275.70ms, fracRes: 0.3434, norm(attn): 0.1719, norm(output): 0.1846, norm(x): 0.2844, norm(y): 0.9946, norm:1.7571, tok/sec: 102745.15, flops:107.84, batch-reuse:1
@ 2005 train 4.8584 , allloss: 4.8915, dt: 1272.02ms, fracRes: 0.3470, norm(attn): 0.1680, norm(output): 0.1846, norm(x): 0.2855, norm(y): 0.9948, norm:1.5105, tok/sec: 103042.20, flops:108.16, batch-reuse:1
@ 2006 train 5.0430 , allloss: 5.0778, dt: 1260.38ms, fracRes: 0.3496, norm(attn): 0.1699, norm(output): 0.1846, norm(x): 0.2867, norm(y): 0.9948, norm:1.6212, tok/sec: 103994.27, flops:109.16, batch-reuse:1
@ 2007 train 4.9005 , allloss: 4.9354, dt: 1286.65ms, fracRes: 0.3484, norm(attn): 0.1689, norm(output): 0.1836, norm(x): 0.2846, norm(y): 0.9948, norm:1.6824, tok/sec: 101870.62, flops:106.93, batch-reuse:1
@ 2008 train 4.9271 , allloss: 4.9624, dt: 1260.74ms, fracRes: 0.3479, norm(attn): 0.1689, norm(output): 0.1846, norm(x): 0.2855, norm(y): 0.9948, norm:1.6014, tok/sec: 103964.75, flops:109.12, batch-reuse:1
@ 2009 train 4.9181 , allloss: 4.9532, dt: 1273.01ms, fracRes: 0.3458, norm(attn): 0.1719, norm(output): 0.1836, norm(x): 0.2845, norm(y): 0.9947, norm:1.4296, tok/sec: 102962.33, flops:108.07, batch-reuse:1
@ 2010 train 4.9922 , allloss: 5.0259, dt: 1255.81ms, fracRes: 0.3451, norm(attn): 0.1719, norm(output): 0.1855, norm(x): 0.2843, norm(y): 0.9947, norm:1.5207, tok/sec: 104372.28, flops:109.55, batch-reuse:1
@ 2011 train 4.9086 , allloss: 4.9473, dt: 1249.16ms, fracRes: 0.3501, norm(attn): 0.1729, norm(output): 0.1836, norm(x): 0.2879, norm(y): 0.9948, norm:1.8198, tok/sec: 104928.51, flops:110.14, batch-reuse:1
@ 2012 train 4.9029 , allloss: 4.9374, dt: 1274.01ms, fracRes: 0.3499, norm(attn): 0.1689, norm(output): 0.1836, norm(x): 0.2854, norm(y): 0.9949, norm:1.4800, tok/sec: 102881.78, flops:107.99, batch-reuse:1
@ 2013 train 4.9345 , allloss: 4.9684, dt: 1289.07ms, fracRes: 0.3515, norm(attn): 0.1650, norm(output): 0.1826, norm(x): 0.2856, norm(y): 0.9948, norm:1.6465, tok/sec: 101679.76, flops:106.73, batch-reuse:1
@ 2014 train 4.9444 , allloss: 4.9793, dt: 1266.85ms, fracRes: 0.3504, norm(attn): 0.1719, norm(output): 0.1826, norm(x): 0.2846, norm(y): 0.9947, norm:1.4772, tok/sec: 103462.59, flops:108.60, batch-reuse:1
@ 2015 train 4.8569 , allloss: 4.8922, dt: 1281.37ms, fracRes: 0.3494, norm(attn): 0.1709, norm(output): 0.1836, norm(x): 0.2845, norm(y): 0.9947, norm:1.4045, tok/sec: 102290.58, flops:107.37, batch-reuse:1
@ 2016 train 4.9431 , allloss: 4.9768, dt: 1281.13ms, fracRes: 0.3452, norm(attn): 0.1680, norm(output): 0.1826, norm(x): 0.2820, norm(y): 0.9948, norm:1.6637, tok/sec: 102309.83, flops:107.39, batch-reuse:1
@ 2017 train 4.9685 , allloss: 5.0025, dt: 1288.99ms, fracRes: 0.3455, norm(attn): 0.1709, norm(output): 0.1836, norm(x): 0.2829, norm(y): 0.9948, norm:1.8710, tok/sec: 101685.59, flops:106.73, batch-reuse:1
@ 2018 train 5.0167 , allloss: 5.0511, dt: 1301.23ms, fracRes: 0.3437, norm(attn): 0.1729, norm(output): 0.1846, norm(x): 0.2819, norm(y): 0.9947, norm:1.7748, tok/sec: 100728.94, flops:105.73, batch-reuse:1
@ 2019 train 5.0164 , allloss: 5.0518, dt: 1269.48ms, fracRes: 0.3440, norm(attn): 0.1719, norm(output): 0.1836, norm(x): 0.2820, norm(y): 0.9947, norm:1.6061, tok/sec: 103248.69, flops:108.37, batch-reuse:1
@ 2020 train 4.8902 , allloss: 4.9250, dt: 1270.64ms, fracRes: 0.3456, norm(attn): 0.1699, norm(output): 0.1826, norm(x): 0.2814, norm(y): 0.9948, norm:1.7828, tok/sec: 103154.65, flops:108.27, batch-reuse:1
@ 2021 train 4.9239 , allloss: 4.9576, dt: 1284.89ms, fracRes: 0.3491, norm(attn): 0.1699, norm(output): 0.1836, norm(x): 0.2846, norm(y): 0.9948, norm:1.6245, tok/sec: 102010.31, flops:107.07, batch-reuse:1
@ 2022 train 4.9774 , allloss: 5.0101, dt: 1250.44ms, fracRes: 0.3507, norm(attn): 0.1680, norm(output): 0.1855, norm(x): 0.2858, norm(y): 0.9948, norm:1.5910, tok/sec: 104820.63, flops:110.02, batch-reuse:1
@ 2023 train 4.9748 , allloss: 5.0096, dt: 1247.85ms, fracRes: 0.3546, norm(attn): 0.1689, norm(output): 0.1816, norm(x): 0.2862, norm(y): 0.9947, norm:1.5847, tok/sec: 105038.41, flops:110.25, batch-reuse:1
@ 2024 train 4.8661 , allloss: 4.9008, dt: 1275.61ms, fracRes: 0.3519, norm(attn): 0.1699, norm(output): 0.1826, norm(x): 0.2839, norm(y): 0.9947, norm:1.4144, tok/sec: 102752.03, flops:107.85, batch-reuse:1
@ 2025 train 5.0064 , allloss: 5.0410, dt: 1257.80ms, fracRes: 0.3518, norm(attn): 0.1699, norm(output): 0.1826, norm(x): 0.2851, norm(y): 0.9948, norm:1.5937, tok/sec: 104207.48, flops:109.38, batch-reuse:1
@ 2026 train 4.9431 , allloss: 4.9770, dt: 1276.93ms, fracRes: 0.3510, norm(attn): 0.1709, norm(output): 0.1836, norm(x): 0.2854, norm(y): 0.9948, norm:1.5914, tok/sec: 102645.91, flops:107.74, batch-reuse:1
@ 2027 train 4.9456 , allloss: 4.9802, dt: 1287.77ms, fracRes: 0.3493, norm(attn): 0.1689, norm(output): 0.1826, norm(x): 0.2839, norm(y): 0.9947, norm:1.4844, tok/sec: 101782.28, flops:106.83, batch-reuse:1
@ 2028 train 5.2732 , allloss: 5.3087, dt: 1276.74ms, fracRes: 0.3528, norm(attn): 0.1719, norm(output): 0.1826, norm(x): 0.2875, norm(y): 0.9946, norm:1.5731, tok/sec: 102661.86, flops:107.76, batch-reuse:1
@ 2029 train 5.0383 , allloss: 5.0714, dt: 1281.50ms, fracRes: 0.3489, norm(attn): 0.1719, norm(output): 0.1836, norm(x): 0.2854, norm(y): 0.9947, norm:2.1319, tok/sec: 102280.08, flops:107.36, batch-reuse:1
@ 2030 train 4.7874 , allloss: 4.8230, dt: 1264.60ms, fracRes: 0.3479, norm(attn): 0.1680, norm(output): 0.1826, norm(x): 0.2843, norm(y): 0.9949, norm:1.9165, tok/sec: 103647.27, flops:108.79, batch-reuse:1
@ 2031 train 4.8637 , allloss: 4.9017, dt: 1287.02ms, fracRes: 0.3480, norm(attn): 0.1699, norm(output): 0.1836, norm(x): 0.2869, norm(y): 0.9948, norm:2.1612, tok/sec: 101841.47, flops:106.90, batch-reuse:1
@ 2032 train 4.8642 , allloss: 4.8998, dt: 1265.59ms, fracRes: 0.3428, norm(attn): 0.1719, norm(output): 0.1846, norm(x): 0.2844, norm(y): 0.9947, norm:1.6687, tok/sec: 103566.32, flops:108.71, batch-reuse:1
@ 2033 train 4.8739 , allloss: 4.9116, dt: 1267.30ms, fracRes: 0.3456, norm(attn): 0.1738, norm(output): 0.1826, norm(x): 0.2855, norm(y): 0.9946, norm:1.9854, tok/sec: 103425.98, flops:108.56, batch-reuse:1
@ 2034 train 4.8792 , allloss: 4.9137, dt: 1245.30ms, fracRes: 0.3446, norm(attn): 0.1729, norm(output): 0.1836, norm(x): 0.2839, norm(y): 0.9947, norm:1.5368, tok/sec: 105253.69, flops:110.48, batch-reuse:1
@ 2035 train 4.8835 , allloss: 4.9185, dt: 1270.81ms, fracRes: 0.3473, norm(attn): 0.1719, norm(output): 0.1836, norm(x): 0.2852, norm(y): 0.9947, norm:1.6768, tok/sec: 103140.91, flops:108.26, batch-reuse:1
@ 2036 train 4.8761 , allloss: 4.9109, dt: 1286.16ms, fracRes: 0.3440, norm(attn): 0.1738, norm(output): 0.1846, norm(x): 0.2835, norm(y): 0.9947, norm:1.8916, tok/sec: 101909.67, flops:106.97, batch-reuse:1
@ 2037 train 4.9257 , allloss: 4.9595, dt: 1261.95ms, fracRes: 0.3472, norm(attn): 0.1709, norm(output): 0.1855, norm(x): 0.2877, norm(y): 0.9948, norm:1.6757, tok/sec: 103864.71, flops:109.02, batch-reuse:1
@ 2038 train 4.9041 , allloss: 4.9396, dt: 1260.51ms, fracRes: 0.3498, norm(attn): 0.1670, norm(output): 0.1855, norm(x): 0.2894, norm(y): 0.9948, norm:1.5321, tok/sec: 103983.67, flops:109.14, batch-reuse:1
@ 2039 train 5.0130 , allloss: 5.0472, dt: 1249.22ms, fracRes: 0.3499, norm(attn): 0.1680, norm(output): 0.1846, norm(x): 0.2889, norm(y): 0.9947, norm:1.6097, tok/sec: 104923.30, flops:110.13, batch-reuse:1
@ 2040 train 5.0518 , allloss: 5.0850, dt: 1261.27ms, fracRes: 0.3462, norm(attn): 0.1719, norm(output): 0.1855, norm(x): 0.2868, norm(y): 0.9946, norm:1.4093, tok/sec: 103920.59, flops:109.08, batch-reuse:1
@ 2041 train 5.0310 , allloss: 5.0651, dt: 1253.36ms, fracRes: 0.3488, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2887, norm(y): 0.9947, norm:1.7652, tok/sec: 104576.16, flops:109.77, batch-reuse:1
@ 2042 train 5.1531 , allloss: 5.1884, dt: 1254.00ms, fracRes: 0.3495, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2897, norm(y): 0.9947, norm:1.6255, tok/sec: 104523.29, flops:109.71, batch-reuse:1
@ 2043 train 5.0832 , allloss: 5.1185, dt: 1258.88ms, fracRes: 0.3482, norm(attn): 0.1689, norm(output): 0.1855, norm(x): 0.2872, norm(y): 0.9948, norm:2.0417, tok/sec: 104118.35, flops:109.29, batch-reuse:1
@ 2044 train 5.1824 , allloss: 5.2175, dt: 1251.03ms, fracRes: 0.3504, norm(attn): 0.1699, norm(output): 0.1855, norm(x): 0.2894, norm(y): 0.9947, norm:1.7063, tok/sec: 104771.51, flops:109.97, batch-reuse:1
@ 2045 train 5.0666 , allloss: 5.0997, dt: 1264.22ms, fracRes: 0.3491, norm(attn): 0.1709, norm(output): 0.1855, norm(x): 0.2877, norm(y): 0.9946, norm:1.5985, tok/sec: 103678.47, flops:108.82, batch-reuse:1
@ 2046 train 5.1473 , allloss: 5.1797, dt: 1285.29ms, fracRes: 0.3489, norm(attn): 0.1709, norm(output): 0.1865, norm(x): 0.2895, norm(y): 0.9946, norm:1.5750, tok/sec: 101978.73, flops:107.04, batch-reuse:1
@ 2047 train 5.0817 , allloss: 5.1157, dt: 1261.36ms, fracRes: 0.3504, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2905, norm(y): 0.9947, norm:2.0085, tok/sec: 103913.36, flops:109.07, batch-reuse:1
@ 2048 train 5.0514 , allloss: 5.0857, dt: 1258.03ms, fracRes: 0.3481, norm(attn): 0.1719, norm(output): 0.1855, norm(x): 0.2888, norm(y): 0.9947, norm:1.5139, tok/sec: 104188.12, flops:109.36, batch-reuse:1
@ 2049 train 5.1158 , allloss: 5.1501, dt: 1249.84ms, fracRes: 0.3458, norm(attn): 0.1758, norm(output): 0.1855, norm(x): 0.2876, norm(y): 0.9946, norm:1.5894, tok/sec: 104871.36, flops:110.08, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5469,     0.4512,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2256,     0.7070,     0.0669,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2217,     0.1670,     0.3027,     0.3086,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0962,     0.4355,     0.0742,     0.1099,     0.2852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1025,     0.1885,     0.0889,     0.0996,     0.3379,     0.1826,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1245,     0.0225,     0.3418,     0.0464,     0.4492,     0.0146,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2441,     0.0327,     0.2021,     0.1699,     0.0383,     0.0320,     0.0483,     0.2334,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0889,     0.0337,     0.1436,     0.0273,     0.5117,     0.0432,     0.0074,     0.1177,     0.0244,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1094,     0.0554,     0.1328,     0.0737,     0.0267,     0.0311,     0.0559,     0.4121,     0.0381,     0.0645,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0708,     0.0581,     0.1328,     0.0378,     0.4590,     0.0447,     0.0118,     0.0791,     0.0193,     0.0625,     0.0236,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1523,     0.0378,     0.1406,     0.1279,     0.1650,     0.0225,     0.0219,     0.0669,     0.0801,     0.0530,     0.0669,     0.0649,     0.0000,     0.0000,     0.0000],
        [    0.0991,     0.0306,     0.0510,     0.0708,     0.0405,     0.0344,     0.0432,     0.0566,     0.1143,     0.0835,     0.1025,     0.1875,     0.0864,     0.0000,     0.0000],
        [    0.0796,     0.0215,     0.1885,     0.0189,     0.3906,     0.0245,     0.0033,     0.1230,     0.0134,     0.0515,     0.0094,     0.0036,     0.0649,     0.0076,     0.0000],
        [    0.1055,     0.0077,     0.2432,     0.0195,     0.4688,     0.0095,     0.0003,     0.0283,     0.0115,     0.0391,     0.0058,     0.0031,     0.0493,     0.0082,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0092, -0.0729, -0.0163,  ...,  0.0246,  0.0318,  0.0539],
        [-0.0232,  0.0175,  0.0342,  ..., -0.0027, -0.0407, -0.0137],
        [-0.0473,  0.0589,  0.0243,  ...,  0.0230, -0.0366, -0.0697],
        ...,
        [-0.0060,  0.0250,  0.0518,  ..., -0.0075, -0.0294, -0.0619],
        [-0.0658,  0.0612,  0.0429,  ...,  0.0158, -0.0645, -0.0311],
        [ 0.0216, -0.0462, -0.0579,  ..., -0.0426,  0.0615,  0.0670]], device='cuda:0', requires_grad=True)
K: tensor([-0.4160,  1.3828,  1.8359, -1.6797, -0.0532,  1.0469, -0.4609, -1.0391,  0.6797,  1.3984,  0.0947,  1.6250, -0.9258,  1.0938,  0.2207,  1.0312, -0.7500,  0.9414,  0.4805, -0.6641,  1.2500, -1.0938,  0.7539,  0.9727,  0.6797, -1.4531, -0.5469,  0.2451, -1.0547,  1.3125,  1.5391, -0.8711,
         0.8125,  0.7930,  1.4922, -0.6055, -1.3828,  0.0928,  0.0718, -0.1426,  1.2500,  0.3086, -1.2266,  0.4277, -0.5625,  1.6406,  0.2393, -1.1328, -1.5547, -0.6094, -0.7500, -1.6719, -0.2246, -0.7070,  0.5352, -1.5859, -0.9805, -1.0703,  2.0781,  0.6133, -0.0532,  0.9570,  0.3965, -0.4414],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0299,  0.0327, -0.0095,  ...,  0.0304, -0.0139, -0.0275],
        [ 0.0300, -0.0447, -0.0575,  ...,  0.0347,  0.0293,  0.0429],
        [ 0.0117, -0.0046,  0.0013,  ...,  0.0302,  0.0118,  0.0513],
        ...,
        [ 0.0193, -0.0346,  0.0004,  ..., -0.0054,  0.0226,  0.0338],
        [ 0.0364, -0.0105, -0.0347,  ...,  0.0019,  0.0186,  0.0506],
        [-0.0185,  0.0001,  0.0343,  ...,  0.0315, -0.0305, -0.0374]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8203, -0.8203, -1.0703,  0.7227,  1.3906, -0.3457,  1.2031,  1.6953, -0.2334, -1.1953, -0.8047, -1.1953,  0.3184, -0.2432,  1.1016, -0.8438,  1.0312, -0.3379, -0.5117,  0.3184, -0.9805,  0.5391, -0.8398,  0.5273, -0.5469,  0.3867,  0.8828, -1.6094,  0.0356, -0.3672, -0.2578,  1.4141,
        -0.8828, -1.0859, -0.9453,  1.2656,  1.0391, -1.1406, -0.9570,  0.1436, -0.4023, -0.5742,  0.7969, -1.2812,  0.0938, -0.1191, -0.5195,  0.5664,  0.5898,  2.2969,  0.3652,  0.6289,  1.9609,  0.7031, -1.2188,  1.3516,  1.1016,  1.2266, -1.2656, -1.0547, -1.5703, -0.4023, -0.6250,  1.6719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.1934,      0.5430,      0.2656,     -0.1279,     -0.7539,     -1.6094,      0.0586,     -1.1094,     -0.4961,     -1.2266,     -1.1719,     -0.0771,     -1.0312,     -0.8359],
        [     0.0000,      1.1484,     -1.2188,      1.5312,     -0.1250,      0.6484,      2.0156,     -1.2344,      1.2344,      0.0903,      1.7656,      1.0625,     -0.9922,      1.5469,      1.7891],
        [     0.0000,     -0.2832,      0.3164,      0.3320,      0.0020,     -1.0469,     -0.9922,      0.5312,     -1.0859,     -0.1904,     -0.9375,      0.1924,      0.4727,     -1.3594,     -1.1250],
        [     0.0000,      1.5078,     -0.2578,      0.1299,      1.0859,      1.0312,      1.5469,      0.3066,      0.9883,      0.1943,      0.8516,     -0.7773,     -0.5312,      0.5391,      1.4453],
        [     0.0000,      0.6094,     -0.1436,     -0.0337,      1.1875,      0.5742,      0.6758,     -0.1650,      0.4297,     -0.0439,      0.1572,     -0.7773,     -0.1807,      0.3457,      0.7656],
        [     0.0000,     -1.7109,      1.0078,     -0.9883,      1.2812,     -2.1406,     -4.3125,      0.2334,     -2.2969,     -0.3848,     -2.7656,     -2.4531,     -0.0952,     -3.1094,     -3.6719],
        [     0.0000,     -2.0156,     -0.1914,     -0.3652,     -1.8516,     -2.0312,     -1.6250,     -0.0471,     -0.7500,     -0.6914,     -1.4062,      0.8438,      0.4531,     -0.2871,     -0.9844],
        [     0.0000,     -0.9648,      0.4805,     -1.1797,      1.7578,     -0.7227,     -2.4844,      0.2812,     -1.2891,     -0.2158,     -1.4766,     -3.0000,     -0.4785,     -2.0000,     -2.7500],
        [     0.0000,     -0.6836,      0.1895,     -0.3945,     -1.4141,     -1.2578,     -0.6719,      1.3281,     -1.0547,     -0.5273,     -1.7344,      0.7305,      1.1797,     -0.6953,     -0.4395],
        [     0.0000,     -0.2012,      0.6289,     -0.6289,      1.8672,     -0.4609,     -1.7891,      0.1084,     -1.3047,     -0.1250,     -1.1094,     -3.1094,     -0.7383,     -2.0938,     -2.2188],
        [     0.0000,     -1.3906,     -0.0806,     -0.1719,      0.0776,     -1.9141,     -1.9375,     -0.8242,     -0.6406,     -1.0547,     -0.8203,     -0.8516,     -0.3027,     -0.9609,     -1.9922],
        [     0.0000,     -1.1719,     -0.6641,     -0.3359,     -0.8945,     -1.0547,     -0.8320,     -0.5586,      0.1416,     -0.1719,      0.0310,      0.6328,     -0.1387,      0.5977,     -0.4355],
        [     0.0000,     -1.3125,      0.8633,     -1.4375,      1.5938,     -1.1719,     -3.1875,      0.4336,     -1.7812,     -0.4355,     -2.1406,     -3.0938,     -0.2012,     -2.3594,     -3.3594],
        [     0.0000,     -2.6250,      0.8320,     -1.6875,      1.4922,     -2.4062,     -5.8438,     -1.3125,     -2.2188,     -0.9961,     -2.9062,     -3.5156,     -0.7617,     -2.5625,     -5.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6022],
        [0.2004],
        [0.2243],
        [0.2323],
        [0.1783],
        [0.2415],
        [0.0586],
        [0.1978],
        [0.1265],
        [0.1551],
        [0.0887],
        [0.0258],
        [0.1648],
        [0.1657]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3320,     0.5664,     0.1006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.0106,     0.1279,     0.0718,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0014,     0.0004,     0.0007,     0.0002,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2363,     0.0483,     0.0197,     0.0210,     0.0126,     0.0427,     0.6211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0767,     0.0967,     0.1406,     0.1846,     0.1055,     0.0292,     0.3594,     0.0079,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0087,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.0007,     0.0048,     0.0037,     0.0003,     0.0026,     0.0327,     0.0874,     0.0012,     0.0498,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.1177,     0.1309,     0.1650,     0.0962,     0.0359,     0.0112,     0.1006,     0.0132,     0.0479,     0.0645,     0.2158,     0.0000,     0.0000,     0.0000],
        [    0.0080,     0.0439,     0.2100,     0.1045,     0.0796,     0.0245,     0.0544,     0.0226,     0.0835,     0.0420,     0.0150,     0.2451,     0.0669,     0.0000,     0.0000],
        [    0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0152,     0.0000,     0.0001,     0.0003,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000],
        [    0.3066,     0.0337,     0.0271,     0.0640,     0.0082,     0.0186,     0.1118,     0.0121,     0.0422,     0.0630,     0.0020,     0.1406,     0.0289,     0.0579,     0.0830]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0079, -0.0277,  0.0261,  ..., -0.0152,  0.0168,  0.0142],
        [ 0.0172, -0.0125,  0.0002,  ...,  0.0250, -0.0063, -0.0069],
        [ 0.0009, -0.0523, -0.0016,  ...,  0.0150, -0.0088,  0.0098],
        ...,
        [-0.0061, -0.0015, -0.0369,  ...,  0.0067, -0.0262, -0.0104],
        [-0.0039,  0.0066, -0.0070,  ...,  0.0580,  0.0271,  0.0043],
        [ 0.0258, -0.0552, -0.0220,  ...,  0.0090,  0.0194,  0.0177]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1562, -0.9219, -0.9453,  1.0312, -1.9453,  0.0557,  3.0469, -1.6719,  2.0938,  2.4844,  0.2109, -0.3047,  1.8594,  0.2500,  1.2266,  2.0469, -1.3359,  1.8672,  1.3281, -0.1465,  1.5234, -1.3359, -1.3750, -1.6406,  0.5000,  1.6797,  0.8789,  1.8203, -0.8672,  1.7188,  1.9844,  2.4219,
         2.9062,  1.8672,  0.5078, -1.2266,  2.7812, -1.0312,  0.3809, -1.6562,  0.5898,  1.0938, -0.6055,  0.8828,  1.9297,  1.4844,  1.1797,  0.7578,  1.8281,  1.6328, -1.1406, -0.1875, -0.7461,  0.2871, -1.6094,  1.6250,  1.2266, -2.2500, -1.4453,  2.2188, -1.1797, -2.4531,  1.7344, -1.9609],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0185,      0.0000,     -0.0053,  ...,      0.0018,     -0.0184,      0.0068],
        [     0.0024,     -0.0045,      0.0001,  ...,      0.0426,      0.0330,     -0.0285],
        [    -0.0003,     -0.0190,     -0.0075,  ...,     -0.0070,     -0.0318,      0.0511],
        ...,
        [    -0.0223,      0.0388,      0.0086,  ...,      0.0464,      0.0459,     -0.0246],
        [    -0.0178,      0.0026,     -0.0174,  ...,      0.0088,     -0.0104,      0.0437],
        [    -0.0122,      0.0013,      0.0142,  ...,      0.0290,      0.0525,     -0.0082]], device='cuda:0', requires_grad=True)
Q: tensor([-1.2031,  1.7812,  0.3574,  0.2051,  0.7227,  0.1138,  0.8359,  0.3867,  0.8828,  0.1826, -1.8750,  0.9141, -1.3359, -0.6914, -0.4102, -0.5586,  0.0640, -0.8242, -1.9219,  0.5156,  0.4531,  1.3828,  0.8828, -0.8125, -1.2109,  0.4473, -0.6055,  0.1240,  0.4395, -1.3125, -0.3398,  0.2676,
         0.8242, -0.4648, -0.3242, -0.3418,  1.6328,  1.3984, -0.5625,  0.5820, -1.1641,  0.9062,  0.1738, -0.5430,  0.6367,  0.2109, -0.7695, -0.6719, -1.4922,  0.1875,  0.8086,  0.5547,  1.5000,  0.0045,  0.0250,  0.7969, -0.0576, -0.3477,  0.3906,  0.7031,  0.3223, -1.4453, -1.3984, -0.1670],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -12.1875, -11.7500, -11.0625, -15.1250, -11.5625,  -4.8125, -11.8750, -10.2500,  -8.8125, -17.6250,  -8.3750, -10.8125,  -9.9375, -10.4375],
        [  0.0000,   0.5312,  -1.1953,   0.2412,  -0.7617,  -0.7539,   1.6328,  -1.4297,  -0.8398,  -0.2734,  -0.7695,   0.5312,  -0.7930,  -0.6953,   0.9258],
        [  0.0000,  -4.3125,  -1.8203,  -2.4062,  -7.0938,  -4.9062,  -2.7188,  -2.5781,  -5.1250,  -2.1875,  -9.6875,  -0.0352,  -1.1328,  -4.8438,  -1.4688],
        [  0.0000, -14.4375, -13.1250, -12.6250, -18.1250, -13.3750,  -5.4062, -11.8125, -12.5625,  -8.7500, -21.5000,  -9.1875, -11.3125, -12.0625, -12.9375],
        [  0.0000,  -6.5625,  -7.9062,  -7.3125,  -8.7500,  -5.8125,  -0.6016,  -7.8438,  -4.7500,  -4.9688, -10.8750,  -6.5312,  -7.2188,  -4.2812,  -7.0625],
        [  0.0000,  -1.5859,  -2.4844,  -2.4219,  -2.9219,  -1.7109,   0.9648,  -4.5625,  -0.7188,  -1.6172,  -5.2188,  -2.2500,  -3.5000,  -0.2559,  -2.2344],
        [  0.0000,   0.2354,   0.6094,   0.8789,   0.3203,  -0.9648,   1.5469,  -2.2812,   0.5703,   0.0459,  -0.6406,   1.3047,  -1.5078,   0.8008,   1.1641],
        [  0.0000, -13.3125, -12.2500, -12.0625, -16.2500, -11.8750,  -4.7500, -11.0625, -10.6250,  -8.6250, -19.1250,  -9.4375, -10.6875, -10.1250, -12.0000],
        [  0.0000,  -7.0938,  -5.1562,  -5.3750,  -7.8125,  -5.7500,  -3.2188,  -2.2344,  -6.5000,  -2.7969,  -8.3750,  -3.9062,  -2.3125,  -6.2812,  -6.1562],
        [  0.0000, -16.6250, -13.0000, -14.5000, -21.3750, -15.2500,  -7.7500, -11.3750, -15.3750,  -9.8750, -25.3750,  -9.6875, -10.8125, -14.9375, -13.9375],
        [  0.0000,   5.0000,   5.1250,   5.3438,   4.8125,   3.8281,   2.6562,   4.8438,   2.8281,   4.1250,   4.4062,   5.6250,   5.7188,   3.0000,   5.5000],
        [  0.0000,   1.7031,   3.2656,   2.5625,   2.2969,   1.1250,   1.9141,   1.0391,   2.3438,   1.6562,   0.6289,   3.4219,   2.1250,   2.5469,   2.9688],
        [  0.0000, -12.1875, -11.4375, -11.0000, -14.6875, -10.8750,  -4.1562, -10.7500,  -9.3125,  -8.1250, -17.6250,  -8.8750, -10.3125,  -8.8750, -10.8750],
        [  0.0000,  -2.2031,  -2.4219,  -1.5703,  -3.6094,  -2.8125,  -1.0078,  -3.2344,  -1.9844,  -1.5781,  -5.0312,  -0.7773,  -2.3594,  -1.6719,  -1.3047]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.8755],
        [0.9132],
        [1.0000],
        [0.9958],
        [0.7112],
        [0.6989],
        [0.9883],
        [0.8844],
        [0.9801],
        [0.6876],
        [0.6526],
        [0.9753],
        [0.7844]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0420,     0.0674,     0.7070,     0.1475,     0.0354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0001,     0.0058,     0.0004,     0.0000,     0.0084,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0017,     0.0002,     0.0001,     0.0007,     0.0002,     0.0006,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0332,     0.0947,     0.0152,     0.0186,     0.0347,     0.0089,     0.7578,     0.0237,     0.0081,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0001,     0.0024,     0.0002,     0.0001,     0.0010,     0.0003,     0.0010,     0.0002,     0.0003,     0.0001,     0.0013,     0.0009,     0.0002,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0080,  0.0501,  0.0308,  ..., -0.0246, -0.0014, -0.0273],
        [-0.0092, -0.0362, -0.0015,  ...,  0.0245,  0.0070, -0.0493],
        [ 0.0300,  0.0534,  0.0041,  ..., -0.0063,  0.0067, -0.0004],
        ...,
        [-0.0547, -0.0330, -0.0472,  ...,  0.0114,  0.0062, -0.0152],
        [ 0.0208,  0.0256,  0.0152,  ..., -0.0322,  0.0247, -0.0067],
        [-0.0224, -0.0194, -0.0681,  ...,  0.0434,  0.0107, -0.0035]], device='cuda:0', requires_grad=True)
K: tensor([-0.1230,  2.1875, -0.5703,  1.3750,  2.6562,  2.8281,  3.3281, -1.3438, -2.1250,  1.6016,  2.2344, -0.6562, -3.0781, -1.7734, -1.3828, -2.2500,  1.1797,  1.9453,  2.8438, -2.5469, -2.9219,  1.6250,  3.0156,  2.8906, -2.4219, -1.1172, -1.5859, -2.2188, -1.1016, -1.5938,  1.7500,  2.2344,
        -1.5391, -2.1875, -2.6406,  0.8242, -2.5625,  1.0781,  0.2227,  1.4141,  1.8359,  2.4531, -1.5234, -2.0156,  3.2969,  2.7188, -2.5000, -1.1172, -3.0781,  0.8516,  1.3281, -0.8945,  2.4062,  0.0771,  1.3281,  0.7148, -1.9141,  0.6250, -1.8438, -2.1875, -1.0859, -2.5156,  2.2812, -2.6562],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0305,  0.0015, -0.0249,  ..., -0.0094, -0.0241,  0.0090],
        [ 0.0034,  0.0087,  0.0133,  ..., -0.0335,  0.0277, -0.0190],
        [-0.0367, -0.0427, -0.0079,  ..., -0.0006, -0.0257, -0.0261],
        ...,
        [ 0.0053,  0.0187,  0.0103,  ..., -0.0340,  0.0121, -0.0379],
        [-0.0255, -0.0043, -0.0200,  ...,  0.0009, -0.0145,  0.0355],
        [ 0.0224,  0.0173,  0.0557,  ...,  0.0124,  0.0637, -0.0284]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5898, -1.1953,  0.2637, -0.3281, -1.9766, -1.9141, -2.3438,  1.4141,  0.2305, -1.1875, -0.8555,  1.1953,  1.1875,  1.0859, -0.8945,  0.9961, -1.7812, -1.6797, -0.6445,  1.0859,  0.5039, -1.1953, -1.9062, -1.3281,  0.9609,  0.3203,  0.9258,  0.9219,  1.2500,  1.6875, -1.7500, -1.0625,
         0.8281,  1.8984,  1.8047, -1.3516,  1.4531, -1.8906, -1.8203, -1.9766, -1.9219, -0.8477,  0.6875,  0.8281, -1.5781, -1.1328,  1.6406,  1.3359,  1.1719, -1.8047, -0.9023,  0.5195, -1.5000, -1.2188, -0.0913, -0.8672,  1.4844, -0.2891,  1.7578,  0.5234,  1.5469,  1.6797, -0.7188,  1.8359],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -6.2812,  -3.2500,  -5.5938,  -6.1562,  -3.7812,  -5.2500,  -3.8594,  -5.3125,  -5.6562,  -7.0938,  -3.5000,  -4.7188,  -5.2188,  -6.4688],
        [  0.0000, -13.9375, -12.1875, -12.4375, -13.4375, -11.5625, -12.8125, -15.2500, -12.5625, -12.3750, -12.8125, -12.5000, -14.2500, -12.2500, -15.8750],
        [  0.0000, -12.9375, -11.0000, -12.7500, -13.5000, -10.9375, -12.6250, -13.0625, -11.8125, -12.2500, -13.0000, -11.7500, -12.6875, -11.5625, -14.8125],
        [  0.0000,   0.4746,   2.8281,   1.2656,  -0.1680,   1.9453,   1.3672,   4.1875,   0.4082,   1.1328,  -0.7266,   3.1406,   2.3125,   0.3848,   1.9141],
        [  0.0000,  -9.5000,  -5.1250,  -7.7500,  -9.9375,  -4.7500,  -7.1250,  -6.3438,  -8.8750,  -7.6875, -10.0625,  -5.0938,  -6.8438,  -8.6875,  -9.1250],
        [  0.0000, -14.3125, -10.1875, -12.3750, -14.0625,  -9.5625, -11.2500, -12.0000, -13.3750, -11.3750, -14.2500, -10.5000, -12.5000, -13.0625, -15.3125],
        [  0.0000, -15.5625, -13.6250, -13.6875, -14.4375, -12.6875, -14.7500, -17.6250, -14.3125, -13.1250, -14.4375, -14.0625, -15.9375, -13.9375, -17.5000],
        [  0.0000,  -9.3125,  -6.3750,  -8.7500,  -9.8750,  -7.2812,  -8.8125,  -7.4375,  -8.8125,  -8.5000,  -9.9375,  -6.9375,  -7.4062,  -8.6875, -10.0625],
        [  0.0000, -15.8125, -13.6250, -15.2500, -16.0000, -13.7500, -14.7500, -16.1250, -14.6250, -14.0625, -15.2500, -14.8125, -16.0000, -14.2500, -18.6250],
        [  0.0000,   5.3438,   6.3750,   4.5625,   4.7500,   5.3750,   4.0312,   8.4375,   5.0000,   3.9219,   2.9531,   7.1562,   7.6562,   4.8438,   7.0938],
        [  0.0000, -14.1250, -11.6250, -12.0000, -13.7500, -10.5000, -12.6875, -15.1875, -12.7500, -12.2500, -12.8750, -12.1875, -14.0625, -12.3750, -15.2500],
        [  0.0000, -14.8750, -12.2500, -12.8750, -14.1250, -11.7500, -13.2500, -15.5000, -13.5625, -12.3125, -14.0000, -12.6250, -14.3750, -13.1875, -16.3750],
        [  0.0000,  -9.1250,  -6.0000,  -8.5000,  -9.6875,  -6.8750,  -8.3125,  -6.9375,  -8.6250,  -8.1875,  -9.7500,  -6.5938,  -7.0000,  -8.5000,  -9.6875],
        [  0.0000, -15.8125, -13.3750, -15.6875, -15.5000, -13.5000, -16.1250, -15.6875, -14.5000, -14.6875, -16.0000, -14.6250, -15.4375, -14.1250, -18.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7760],
        [0.9987],
        [0.9997],
        [0.2815],
        [0.8845],
        [0.9899],
        [1.0000],
        [0.9759],
        [1.0000],
        [0.1603],
        [0.9990],
        [1.0000],
        [0.9616],
        [1.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.8711, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.4062, 0.5195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.2891, 0.4473, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0334, 0.4844, 0.2021, 0.0669, 0.2119, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0457, 0.4512, 0.2275, 0.0342, 0.0825, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0105, 0.1973, 0.0850, 0.0056, 0.0388, 0.0430, 0.6211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0249, 0.1309, 0.0693, 0.0052, 0.0159, 0.0393, 0.6211, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0171, 0.1553, 0.0679, 0.0076, 0.0306, 0.0359, 0.4395, 0.1777, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0305, 0.0635, 0.0579, 0.0151, 0.0276, 0.0410, 0.2969, 0.1299, 0.1211, 0.2158, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0157, 0.0986, 0.0105, 0.0034, 0.0137, 0.0146, 0.1768, 0.1235, 0.0571, 0.3965, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0192, 0.0452, 0.0160, 0.0069, 0.0225, 0.0198, 0.0889, 0.1680, 0.1367, 0.2598, 0.0991, 0.1182, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.1016, 0.0349, 0.0052, 0.0143, 0.0283, 0.2656, 0.0786, 0.0952, 0.1475, 0.0588, 0.0732, 0.0299, 0.0000, 0.0000],
        [0.0435, 0.1768, 0.0369, 0.0038, 0.0234, 0.0161, 0.1484, 0.0864, 0.0282, 0.1758, 0.0183, 0.1367, 0.0435, 0.0630, 0.0000],
        [0.0337, 0.0635, 0.0164, 0.0030, 0.0137, 0.0123, 0.0786, 0.0923, 0.0417, 0.0664, 0.0315, 0.0913, 0.0776, 0.0879, 0.2891]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0099, -0.0205,  0.0093,  ...,  0.0322, -0.0164, -0.0188],
        [-0.0330,  0.0116,  0.0018,  ...,  0.0074,  0.0008,  0.0077],
        [ 0.0096,  0.0353,  0.0268,  ..., -0.0085,  0.0066,  0.0322],
        ...,
        [ 0.0020,  0.0391, -0.0099,  ..., -0.0064, -0.0226, -0.0037],
        [ 0.0302, -0.0192,  0.0153,  ...,  0.0118, -0.0127, -0.0180],
        [ 0.0385,  0.0200,  0.0117,  ..., -0.0022,  0.0089,  0.0110]], device='cuda:0', requires_grad=True)
K: tensor([     2.0000,      2.0469,     -1.5156,      0.9453,      0.3066,      1.3125,     -0.1621,     -0.6719,     -0.1030,      0.8125,     -0.6836,     -2.8438,     -1.4766,      0.6758,      0.4629,      1.8516,     -2.1562,      0.1562,      0.0093,      1.0078,     -1.5547,      0.0588,
            -0.4316,      2.3906,     -0.5039,      1.6562,     -1.0859,      1.2188,      2.3594,     -0.4648,      0.4219,     -0.7031,     -2.1562,      0.5234,     -1.8281,      0.2168,      0.0005,     -1.8281,      2.5781,      0.4414,      0.1709,     -0.3809,      0.3887,     -1.4062,
            -0.1621,     -0.0728,     -0.8203,      0.3105,      0.4570,     -1.0391,     -1.4375,      2.6562,      0.3750,     -1.1719,      1.1094,     -0.0147,      2.2656,      0.5078,      1.3438,      1.6797,     -1.1406,     -0.5742,     -0.8828,     -0.9961], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[     0.0050,      0.0150,      0.0169,  ...,     -0.0103,      0.0202,      0.0103],
        [     0.0301,     -0.0019,      0.0023,  ...,     -0.0020,     -0.0348,      0.0184],
        [     0.0079,     -0.0086,     -0.0064,  ...,     -0.0057,     -0.0360,      0.0350],
        ...,
        [    -0.0053,      0.0030,     -0.0722,  ...,     -0.0093,      0.0069,      0.0112],
        [    -0.0002,      0.0201,     -0.0000,  ...,     -0.0336,     -0.0180,     -0.0142],
        [    -0.0327,      0.0185,     -0.0573,  ...,     -0.0131,     -0.0253,      0.0477]], device='cuda:0', requires_grad=True)
Q: tensor([     1.0078,      0.7383,     -0.8945,     -1.0391,      0.5938,      1.1719,     -1.2734,      1.3750,      0.9180,     -0.4590,      0.0420,     -0.5039,      0.0942,     -1.3828,     -0.8242,     -0.4219,     -0.6094,     -0.3496,     -1.8438,      1.4688,     -0.0437,     -0.0488,
            -2.6250,      0.5664,      0.0913,     -1.8359,      0.0014,      0.4805,     -0.0742,     -0.7148,      1.7969,      1.8828,     -0.6758,     -1.5938,     -0.8672,      0.6875,     -3.2188,     -0.1641,      2.8281,     -0.7383,      1.3672,      0.5195,      0.9336,     -1.4844,
            -1.2656,      0.3066,     -0.5312,     -0.6055,     -1.7266,     -2.1562,      1.8438,      0.7227,     -0.5078,     -0.0781,     -0.5352,     -0.2695,     -0.7930,      1.9453,      0.8828,      0.1768,      0.0437,      0.5156,      0.8555,      0.8867], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.9062,      1.2891,     -0.2188,      0.7109,      1.0625,      3.0469,      3.1406,      2.3125,      3.0312,      1.7891,      2.9062,      2.7188,      2.8906,      4.4062],
        [     0.0000,      1.6875,      1.9375,      1.6328,      2.4375,      2.7500,      3.8750,      4.8125,      5.0625,      4.5625,      5.2812,      4.8125,      5.9688,      6.1562,      6.3125],
        [     0.0000,      1.2578,      1.6875,      0.7852,      1.3750,      1.5781,      2.9844,      3.4375,      3.4062,      3.5156,      2.8281,      2.9844,      3.7031,      4.0312,      4.5312],
        [     0.0000,      2.6719,      1.7969,      0.6953,      1.8438,      2.2812,      4.0625,      4.0312,      3.0625,      4.0938,      2.1875,      3.2656,      3.0000,      3.3594,      3.9219],
        [     0.0000,      2.2969,      1.6094,     -0.2910,      0.5898,      1.2422,      3.2969,      3.1250,      2.0156,      3.4062,      1.0625,      2.5469,      2.1406,      2.2969,      4.5000],
        [     0.0000,      2.9375,      2.0938,     -0.6211,      1.3047,      1.4062,      4.0625,      4.0312,      2.8750,      4.3750,      1.6016,      3.3594,      2.6562,      3.3750,      5.5938],
        [     0.0000,      1.6562,      1.0234,     -1.5781,     -0.4492,      0.4551,      3.2188,      1.3203,      1.8203,      2.0156,      0.7539,      1.1719,      0.0070,      2.0781,      4.7188],
        [     0.0000,      2.2031,      1.3750,     -0.8125,      0.5820,      0.7344,      3.2500,      2.3438,      1.3828,      3.2812,      0.8320,      2.7031,      1.5781,      1.9609,      3.2812],
        [     0.0000,      0.7266,      0.6406,     -0.7031,     -0.1016,      0.2949,      2.2656,      1.4531,      1.3750,      1.9531,      0.6328,      1.7578,      1.1875,      1.9141,      3.2188],
        [     0.0000,      1.8359,     -0.4082,     -1.5469,     -0.1416,     -0.0757,      2.4062,      2.0625,      1.2891,      3.2188,      1.7188,      1.3203,      1.4844,      2.1562,      3.9375],
        [     0.0000,      0.8555,     -0.1777,     -1.0234,      0.1611,      0.0327,      1.5391,      2.1719,      1.9609,      2.6094,      1.6406,      1.8203,      2.3438,      2.7812,      3.9375],
        [     0.0000,      0.4238,     -0.6445,     -2.5469,     -1.5391,     -0.8516,      1.3906,      0.1689,      0.3594,      0.8008,     -0.1226,      0.0967,     -0.8008,      1.0625,      3.5312],
        [     0.0000,      1.4062,     -0.1621,     -2.4375,     -0.6133,     -0.9922,      1.2266,      0.6875,     -0.4297,      1.3984,     -0.8633,      1.1484,     -0.0011,      0.3691,      1.9297],
        [     0.0000,      0.6328,     -0.7227,     -2.4219,     -0.9023,     -1.0000,      0.8516,      1.0078,      0.2158,      0.6797,     -0.0684,      0.9961,      0.8359,      0.9609,      2.1562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1652],
        [0.0416],
        [0.0615],
        [0.0493],
        [0.0494],
        [0.0371],
        [0.0322],
        [0.0333],
        [0.0237],
        [0.0256],
        [0.0093],
        [0.0381],
        [0.0364],
        [0.0239]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.7539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.2070, 0.6250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.2578, 0.3008, 0.3574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1904, 0.2471, 0.3555, 0.0835, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0605, 0.1152, 0.2148, 0.0908, 0.0635, 0.4551, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0150, 0.0918, 0.0344, 0.1021, 0.1201, 0.1523, 0.4844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0349, 0.0908, 0.0923, 0.1245, 0.1826, 0.1758, 0.2461, 0.0532, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.1797, 0.1445, 0.0444, 0.0559, 0.3477, 0.0364, 0.0148, 0.0198, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1982, 0.2432, 0.0275, 0.0386, 0.2314, 0.0237, 0.0132, 0.0157, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.1001, 0.0874, 0.0187, 0.0262, 0.1797, 0.0256, 0.0197, 0.0130, 0.1074, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0581, 0.1807, 0.2031, 0.0486, 0.1865, 0.0413, 0.0420, 0.0361, 0.0344, 0.0203, 0.0801, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.1328, 0.1196, 0.0562, 0.0688, 0.1196, 0.0747, 0.0273, 0.0786, 0.0669, 0.0776, 0.0583, 0.0496, 0.0000, 0.0000],
        [0.1904, 0.2041, 0.1152, 0.0247, 0.0253, 0.2012, 0.0175, 0.0082, 0.0090, 0.0486, 0.0444, 0.0549, 0.0415, 0.0150, 0.0000],
        [0.1348, 0.1387, 0.0830, 0.0496, 0.0287, 0.0986, 0.0251, 0.0236, 0.0282, 0.0825, 0.0378, 0.0583, 0.0693, 0.0483, 0.0938]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0177,  0.0121,  0.0088,  ..., -0.0488,  0.0217,  0.0091],
        [ 0.0033, -0.0036,  0.0106,  ...,  0.0096, -0.0333,  0.0059],
        [ 0.0052, -0.0110, -0.0351,  ..., -0.0090,  0.0094, -0.0298],
        ...,
        [ 0.0112,  0.0106,  0.0051,  ...,  0.0030, -0.0262, -0.0334],
        [-0.0124, -0.0195,  0.0152,  ..., -0.0179,  0.0122,  0.0012],
        [-0.0075, -0.0004,  0.0218,  ..., -0.0195,  0.0060,  0.0076]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3203, -0.7891,  0.9414, -0.8867, -1.0547, -0.3340, -0.1387, -1.0078,  1.6094,  0.0190,  0.1494, -0.3535, -0.1602,  0.9844, -0.9531, -0.2559,  1.2109, -0.2246, -0.2021, -0.5938,  0.5977,  0.6914, -0.7539, -0.1309, -1.6953,  1.0625, -0.2461,  0.8867,  0.2910, -0.4980, -0.3945,  0.3027,
         0.1846, -0.7070, -0.7383, -0.2812, -0.8242,  0.3848,  0.5938, -1.0703,  0.7148, -1.9141,  0.4922,  1.7891, -0.7773, -0.6523, -0.0500,  0.9023,  0.7031,  0.0879,  0.4746, -0.6758, -1.1328, -0.3848, -0.8633,  0.3535, -1.2578,  0.1064, -0.8789,  0.6836,  0.4941, -1.0156,  0.9688, -0.5703],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0059,  0.0244,  0.0026,  ...,  0.0509, -0.0066,  0.0365],
        [-0.0069, -0.0015,  0.0151,  ...,  0.0060, -0.0188,  0.0117],
        [ 0.0057,  0.0047,  0.0063,  ...,  0.0107,  0.0245, -0.0290],
        ...,
        [ 0.0063, -0.0093, -0.0091,  ..., -0.0008, -0.0168,  0.0155],
        [ 0.0011, -0.0230,  0.0214,  ...,  0.0067, -0.0084,  0.0386],
        [-0.0124, -0.0162, -0.0247,  ...,  0.0376,  0.0070,  0.0058]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5703,  1.3984, -1.7969, -0.9688, -1.5078,  1.1328,  0.3848,  0.2656, -0.4980, -0.7734,  0.8516,  1.2734,  0.5586,  0.7891,  0.3672,  0.2832,  0.3984,  0.3535, -0.3477, -0.6172,  1.0234, -0.4688,  0.2227,  0.5156, -0.0718,  0.5664, -1.3906, -0.5117,  0.2324,  0.5859, -0.4590,  0.7617,
        -0.8555, -0.4824, -0.5820,  1.0469,  0.9766,  0.2490, -0.1367, -0.2930,  0.1836, -0.2578,  1.0469,  0.1084, -0.3379,  1.0000, -1.5391, -0.2988, -0.3633,  1.5156, -0.6133, -0.3203, -0.0334,  0.3867,  0.8711, -0.3262,  1.1484, -0.7773, -0.9766,  0.2461, -0.7266, -0.1064, -0.4375,  0.2949],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.1250,  1.0469, -0.1143, -1.1094,  1.9297, -1.2422, -2.4219, -1.7891, -0.6406, -1.7969, -0.1650, -1.5469, -2.0000, -0.7148],
        [ 0.0000,  0.2021,  1.3047,  1.8906,  0.5078,  2.0938,  0.4961,  0.6367,  0.8945,  0.3496, -0.2275,  0.7969,  0.7109,  0.2578, -0.0801],
        [ 0.0000,  1.1094,  1.2734,  1.4375,  0.9258,  1.2578,  1.2109,  0.8438,  1.1484,  0.4277,  0.2314,  0.3125,  0.5156,  0.7109,  0.8359],
        [ 0.0000,  0.2598,  0.6211, -0.8242, -0.4219,  0.9688, -0.0435, -1.2266, -1.9453, -1.0859, -1.2344, -0.5977, -1.3594, -2.2812, -0.9805],
        [ 0.0000,  0.6445,  1.2656,  0.4062,  0.0435,  2.0156,  0.4785, -0.8867, -0.3789, -0.4141, -0.6641,  0.2471, -0.9336, -1.1250, -0.2598],
        [ 0.0000,  1.8125,  0.8320,  1.9219,  2.0781,  2.3281,  3.4844,  1.8516,  1.4453,  1.0078,  0.5820,  0.4258,  0.2061,  0.5234,  1.3906],
        [ 0.0000,  0.9531,  0.9727,  1.2656,  1.6484,  1.6172,  1.9453,  0.4180,  1.1641,  0.2891, -0.3633, -0.3711, -0.2344,  0.3145,  0.3105],
        [ 0.0000,  0.1406, -0.0752, -1.2578, -1.0234,  0.8008, -1.4609, -2.3594, -2.0625, -1.1016, -1.5625, -0.7461, -1.4062, -2.4531, -1.3203],
        [ 0.0000,  0.3848,  0.5938, -1.5859, -1.2500,  0.5430, -1.7344, -2.3281, -2.1406, -0.6094, -0.2275, -0.4082, -1.0469, -1.2734, -0.5586],
        [ 0.0000, -1.0078, -1.1406, -2.6875, -2.3438, -0.4238, -2.3750, -2.6406, -3.0469, -0.9375, -0.6133, -1.5312, -1.1094, -2.0938, -1.3984],
        [ 0.0000, -0.1641,  0.9727,  1.0859, -0.3398,  1.0078, -0.5039, -0.4863, -0.6367, -0.6836, -1.2188,  0.1582, -0.5078, -0.9688, -0.7227],
        [ 0.0000,  0.6445,  0.5430, -0.2148, -0.0135,  0.5430,  0.0703, -0.9375,  0.1191, -0.0374,  0.1094, -0.1777, -0.3398,  0.6172,  0.2021],
        [ 0.0000,  0.0713, -0.5039, -2.0469, -2.0156,  0.0549, -2.3906, -3.1406, -3.0625, -1.3672, -1.4531, -1.2422, -1.5234, -2.5312, -1.4609],
        [ 0.0000,  0.0278, -0.4824, -1.0000, -1.5469, -0.3086, -1.6719, -1.7422, -1.5625, -0.4902, -1.2656, -0.8320, -0.6602, -1.0234, -0.3633]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1203],
        [0.0832],
        [0.1192],
        [0.2743],
        [0.1313],
        [0.0765],
        [0.0986],
        [0.1683],
        [0.1664],
        [0.1186],
        [0.0287],
        [0.0996],
        [0.0965],
        [0.1190]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1533 a:0.1074iscovered:0.1504 and:0.0762om:0.1396,:0.3066 a:0.0903ery:0.0981)
ery
------
		( a:0.1074iscovered:0.1504 and:0.0762om:0.1396,:0.3066 a:0.0903ery:0.0981,:0.1123)
, and other animals.
- The most common species of the species is
@ 2050 train 5.0591 , allloss: 5.0941, dt: 1649.11ms, fracRes: 0.3505, norm(attn): 0.1719, norm(output): 0.1846, norm(x): 0.2892, norm(y): 0.9947, norm:1.8612, tok/sec: 79480.54, flops:83.43, batch-reuse:1
@ 2051 train 5.1601 , allloss: 5.1940, dt: 1278.03ms, fracRes: 0.3534, norm(attn): 0.1689, norm(output): 0.1846, norm(x): 0.2900, norm(y): 0.9947, norm:1.5287, tok/sec: 102557.89, flops:107.65, batch-reuse:1
@ 2052 train 5.0722 , allloss: 5.1055, dt: 1268.20ms, fracRes: 0.3502, norm(attn): 0.1738, norm(output): 0.1855, norm(x): 0.2888, norm(y): 0.9946, norm:1.4396, tok/sec: 103352.69, flops:108.48, batch-reuse:1
@ 2053 train 5.0950 , allloss: 5.1274, dt: 1248.32ms, fracRes: 0.3504, norm(attn): 0.1709, norm(output): 0.1855, norm(x): 0.2898, norm(y): 0.9947, norm:1.5841, tok/sec: 104999.01, flops:110.21, batch-reuse:1
@ 2054 train 5.0642 , allloss: 5.0973, dt: 1255.69ms, fracRes: 0.3506, norm(attn): 0.1699, norm(output): 0.1875, norm(x): 0.2905, norm(y): 0.9947, norm:1.8206, tok/sec: 104382.66, flops:109.56, batch-reuse:1
@ 2055 train 5.1146 , allloss: 5.1489, dt: 1255.07ms, fracRes: 0.3523, norm(attn): 0.1709, norm(output): 0.1865, norm(x): 0.2915, norm(y): 0.9947, norm:1.4788, tok/sec: 104434.32, flops:109.62, batch-reuse:1
@ 2056 train 5.1161 , allloss: 5.1502, dt: 1253.76ms, fracRes: 0.3536, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2927, norm(y): 0.9946, norm:1.6844, tok/sec: 104543.54, flops:109.73, batch-reuse:1
@ 2057 train 5.1721 , allloss: 5.2065, dt: 1259.18ms, fracRes: 0.3529, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2923, norm(y): 0.9946, norm:1.7449, tok/sec: 104092.88, flops:109.26, batch-reuse:1
@ 2058 train 5.1226 , allloss: 5.1558, dt: 1270.92ms, fracRes: 0.3552, norm(attn): 0.1660, norm(output): 0.1865, norm(x): 0.2940, norm(y): 0.9947, norm:2.0046, tok/sec: 103131.43, flops:108.25, batch-reuse:1
@ 2059 train 5.0275 , allloss: 5.0618, dt: 1259.08ms, fracRes: 0.3525, norm(attn): 0.1689, norm(output): 0.1855, norm(x): 0.2923, norm(y): 0.9946, norm:1.3851, tok/sec: 104101.77, flops:109.27, batch-reuse:1
@ 2060 train 5.0558 , allloss: 5.0886, dt: 1266.36ms, fracRes: 0.3463, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2897, norm(y): 0.9945, norm:1.5694, tok/sec: 103502.83, flops:108.64, batch-reuse:1
@ 2061 train 5.1108 , allloss: 5.1446, dt: 1267.19ms, fracRes: 0.3508, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2948, norm(y): 0.9946, norm:1.7538, tok/sec: 103435.28, flops:108.57, batch-reuse:1
@ 2062 train 5.0462 , allloss: 5.0808, dt: 1246.50ms, fracRes: 0.3491, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2908, norm(y): 0.9947, norm:1.8057, tok/sec: 105152.45, flops:110.37, batch-reuse:1
@ 2063 train 5.1496 , allloss: 5.1834, dt: 1264.95ms, fracRes: 0.3510, norm(attn): 0.1699, norm(output): 0.1865, norm(x): 0.2939, norm(y): 0.9946, norm:1.6831, tok/sec: 103617.95, flops:108.76, batch-reuse:1
@ 2064 train 5.0431 , allloss: 5.0775, dt: 1278.53ms, fracRes: 0.3471, norm(attn): 0.1729, norm(output): 0.1865, norm(x): 0.2896, norm(y): 0.9946, norm:1.5922, tok/sec: 102518.07, flops:107.61, batch-reuse:1
@ 2065 train 5.7126 , allloss: 5.7453, dt: 1264.30ms, fracRes: 0.3516, norm(attn): 0.1680, norm(output): 0.1865, norm(x): 0.2904, norm(y): 0.9946, norm:2.5356, tok/sec: 103671.78, flops:108.82, batch-reuse:1
@ 2066 train 5.1590 , allloss: 5.1917, dt: 1299.25ms, fracRes: 0.3531, norm(attn): 0.1699, norm(output): 0.1875, norm(x): 0.2934, norm(y): 0.9948, norm:2.5521, tok/sec: 100882.71, flops:105.89, batch-reuse:1
@ 2067 train 5.1015 , allloss: 5.1365, dt: 1260.28ms, fracRes: 0.3531, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2933, norm(y): 0.9946, norm:1.8499, tok/sec: 104002.35, flops:109.16, batch-reuse:1
@ 2068 train 5.1664 , allloss: 5.2018, dt: 1270.79ms, fracRes: 0.3525, norm(attn): 0.1748, norm(output): 0.1865, norm(x): 0.2926, norm(y): 0.9945, norm:1.5205, tok/sec: 103142.23, flops:108.26, batch-reuse:1
@ 2069 train 5.1353 , allloss: 5.1694, dt: 1282.15ms, fracRes: 0.3600, norm(attn): 0.1670, norm(output): 0.1855, norm(x): 0.2969, norm(y): 0.9948, norm:2.1101, tok/sec: 102228.13, flops:107.30, batch-reuse:1
@ 2070 train 5.2241 , allloss: 5.2578, dt: 1274.73ms, fracRes: 0.3593, norm(attn): 0.1680, norm(output): 0.1875, norm(x): 0.2969, norm(y): 0.9948, norm:1.8842, tok/sec: 102823.00, flops:107.93, batch-reuse:1
@ 2071 train 5.1571 , allloss: 5.1921, dt: 1263.93ms, fracRes: 0.3613, norm(attn): 0.1670, norm(output): 0.1875, norm(x): 0.2970, norm(y): 0.9949, norm:1.8671, tok/sec: 103701.88, flops:108.85, batch-reuse:1
@ 2072 train 5.1253 , allloss: 5.1585, dt: 1242.39ms, fracRes: 0.3600, norm(attn): 0.1699, norm(output): 0.1865, norm(x): 0.2965, norm(y): 0.9949, norm:1.8916, tok/sec: 105500.27, flops:110.74, batch-reuse:1
@ 2073 train 5.0771 , allloss: 5.1119, dt: 1252.27ms, fracRes: 0.3608, norm(attn): 0.1680, norm(output): 0.1865, norm(x): 0.2963, norm(y): 0.9948, norm:1.7219, tok/sec: 104667.74, flops:109.86, batch-reuse:1
@ 2074 train 5.1314 , allloss: 5.1660, dt: 1259.41ms, fracRes: 0.3621, norm(attn): 0.1680, norm(output): 0.1865, norm(x): 0.2975, norm(y): 0.9948, norm:1.7739, tok/sec: 104073.74, flops:109.24, batch-reuse:1
@ 2075 train 5.0699 , allloss: 5.1019, dt: 1252.40ms, fracRes: 0.3582, norm(attn): 0.1699, norm(output): 0.1875, norm(x): 0.2950, norm(y): 0.9948, norm:1.5597, tok/sec: 104656.88, flops:109.85, batch-reuse:1
@ 2076 train 5.0292 , allloss: 5.0625, dt: 1280.52ms, fracRes: 0.3593, norm(attn): 0.1709, norm(output): 0.1865, norm(x): 0.2962, norm(y): 0.9947, norm:1.7886, tok/sec: 102358.48, flops:107.44, batch-reuse:1
@ 2077 train 5.0991 , allloss: 5.1322, dt: 1281.22ms, fracRes: 0.3569, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2934, norm(y): 0.9946, norm:1.6356, tok/sec: 102302.80, flops:107.38, batch-reuse:1
@ 2078 train 5.2728 , allloss: 5.3070, dt: 1249.10ms, fracRes: 0.3556, norm(attn): 0.1748, norm(output): 0.1855, norm(x): 0.2920, norm(y): 0.9945, norm:2.1447, tok/sec: 104933.11, flops:110.14, batch-reuse:1
@ 2079 train 5.1469 , allloss: 5.1807, dt: 1261.84ms, fracRes: 0.3565, norm(attn): 0.1709, norm(output): 0.1865, norm(x): 0.2951, norm(y): 0.9946, norm:1.8420, tok/sec: 103873.92, flops:109.03, batch-reuse:1
@ 2080 train 5.1435 , allloss: 5.1783, dt: 1276.16ms, fracRes: 0.3559, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2962, norm(y): 0.9946, norm:1.7732, tok/sec: 102708.22, flops:107.81, batch-reuse:1
@ 2081 train 5.1456 , allloss: 5.1773, dt: 1267.22ms, fracRes: 0.3537, norm(attn): 0.1699, norm(output): 0.1875, norm(x): 0.2958, norm(y): 0.9947, norm:1.5381, tok/sec: 103432.98, flops:108.57, batch-reuse:1
@ 2082 train 5.0648 , allloss: 5.0964, dt: 1246.89ms, fracRes: 0.3513, norm(attn): 0.1689, norm(output): 0.1875, norm(x): 0.2952, norm(y): 0.9947, norm:1.4311, tok/sec: 105119.09, flops:110.34, batch-reuse:1
@ 2083 train 5.0563 , allloss: 5.0885, dt: 1250.63ms, fracRes: 0.3518, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2970, norm(y): 0.9945, norm:1.6324, tok/sec: 104805.17, flops:110.01, batch-reuse:1
@ 2084 train 5.1845 , allloss: 5.2170, dt: 1281.96ms, fracRes: 0.3505, norm(attn): 0.1699, norm(output): 0.1875, norm(x): 0.2934, norm(y): 0.9946, norm:1.7311, tok/sec: 102243.63, flops:107.32, batch-reuse:1
@ 2085 train 5.1185 , allloss: 5.1508, dt: 1274.75ms, fracRes: 0.3520, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2942, norm(y): 0.9947, norm:1.7494, tok/sec: 102821.83, flops:107.93, batch-reuse:1
@ 2086 train 5.0147 , allloss: 5.0485, dt: 1275.63ms, fracRes: 0.3528, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2942, norm(y): 0.9946, norm:1.6075, tok/sec: 102750.47, flops:107.85, batch-reuse:1
@ 2087 train 5.0440 , allloss: 5.0770, dt: 1308.66ms, fracRes: 0.3504, norm(attn): 0.1729, norm(output): 0.1865, norm(x): 0.2931, norm(y): 0.9945, norm:1.4993, tok/sec: 100157.23, flops:105.13, batch-reuse:1
@ 2088 train 5.1234 , allloss: 5.1568, dt: 1267.75ms, fracRes: 0.3545, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2968, norm(y): 0.9945, norm:1.6821, tok/sec: 103389.86, flops:108.52, batch-reuse:1
@ 2089 train 5.0615 , allloss: 5.0958, dt: 1246.54ms, fracRes: 0.3531, norm(attn): 0.1699, norm(output): 0.1875, norm(x): 0.2963, norm(y): 0.9945, norm:1.7023, tok/sec: 105148.91, flops:110.37, batch-reuse:1
@ 2090 train 5.0820 , allloss: 5.1144, dt: 1278.90ms, fracRes: 0.3557, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.2975, norm(y): 0.9945, norm:1.5797, tok/sec: 102488.31, flops:107.58, batch-reuse:1
@ 2091 train 5.0635 , allloss: 5.0982, dt: 1273.76ms, fracRes: 0.3574, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2965, norm(y): 0.9946, norm:1.8028, tok/sec: 102901.87, flops:108.01, batch-reuse:1
@ 2092 train 5.0890 , allloss: 5.1232, dt: 1266.42ms, fracRes: 0.3602, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2983, norm(y): 0.9947, norm:1.6483, tok/sec: 103498.43, flops:108.64, batch-reuse:1
@ 2093 train 5.0149 , allloss: 5.0460, dt: 1266.60ms, fracRes: 0.3549, norm(attn): 0.1709, norm(output): 0.1875, norm(x): 0.2948, norm(y): 0.9946, norm:1.6083, tok/sec: 103483.74, flops:108.62, batch-reuse:1
@ 2094 train 5.0445 , allloss: 5.0782, dt: 1289.24ms, fracRes: 0.3546, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2970, norm(y): 0.9945, norm:1.6085, tok/sec: 101666.28, flops:106.71, batch-reuse:1
@ 2095 train 4.9484 , allloss: 4.9820, dt: 1253.27ms, fracRes: 0.3517, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2944, norm(y): 0.9945, norm:1.4382, tok/sec: 104584.00, flops:109.77, batch-reuse:1
@ 2096 train 5.1240 , allloss: 5.1565, dt: 1251.91ms, fracRes: 0.3530, norm(attn): 0.1699, norm(output): 0.1875, norm(x): 0.2952, norm(y): 0.9947, norm:1.5691, tok/sec: 104697.58, flops:109.89, batch-reuse:1
@ 2097 train 5.0098 , allloss: 5.0425, dt: 1276.46ms, fracRes: 0.3507, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2939, norm(y): 0.9947, norm:1.4927, tok/sec: 102683.91, flops:107.78, batch-reuse:1
@ 2098 train 4.9511 , allloss: 4.9837, dt: 1274.87ms, fracRes: 0.3509, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2951, norm(y): 0.9946, norm:1.5641, tok/sec: 102811.85, flops:107.91, batch-reuse:1
@ 2099 train 5.0403 , allloss: 5.0735, dt: 1279.48ms, fracRes: 0.3544, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.2962, norm(y): 0.9946, norm:1.5745, tok/sec: 102441.54, flops:107.53, batch-reuse:1
@ 2100 train 5.0370 , allloss: 5.0690, dt: 1244.96ms, fracRes: 0.3545, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2972, norm(y): 0.9946, norm:1.5115, tok/sec: 105282.51, flops:110.51, batch-reuse:1
@ 2101 train 4.9800 , allloss: 5.0119, dt: 1275.01ms, fracRes: 0.3521, norm(attn): 0.1758, norm(output): 0.1875, norm(x): 0.2946, norm(y): 0.9946, norm:1.5184, tok/sec: 102800.41, flops:107.90, batch-reuse:1
@ 2102 train 5.0191 , allloss: 5.0515, dt: 1268.08ms, fracRes: 0.3551, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2958, norm(y): 0.9947, norm:1.6547, tok/sec: 103362.18, flops:108.49, batch-reuse:1
@ 2103 train 4.9840 , allloss: 5.0167, dt: 1253.32ms, fracRes: 0.3534, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.2952, norm(y): 0.9947, norm:1.5631, tok/sec: 104579.64, flops:109.77, batch-reuse:1
@ 2104 train 5.0187 , allloss: 5.0504, dt: 1275.26ms, fracRes: 0.3541, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.2975, norm(y): 0.9946, norm:1.5949, tok/sec: 102780.77, flops:107.88, batch-reuse:1
@ 2105 train 5.0824 , allloss: 5.1142, dt: 1274.05ms, fracRes: 0.3549, norm(attn): 0.1699, norm(output): 0.1875, norm(x): 0.2981, norm(y): 0.9946, norm:1.7411, tok/sec: 102878.61, flops:107.98, batch-reuse:1
@ 2106 train 5.0185 , allloss: 5.0520, dt: 1287.33ms, fracRes: 0.3524, norm(attn): 0.1748, norm(output): 0.1875, norm(x): 0.2971, norm(y): 0.9946, norm:1.5934, tok/sec: 101817.02, flops:106.87, batch-reuse:1
@ 2107 train 5.0445 , allloss: 5.0761, dt: 1270.17ms, fracRes: 0.3514, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.2961, norm(y): 0.9947, norm:1.7661, tok/sec: 103192.37, flops:108.31, batch-reuse:1
@ 2108 train 5.1619 , allloss: 5.1950, dt: 1271.89ms, fracRes: 0.3564, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2988, norm(y): 0.9946, norm:1.7607, tok/sec: 103052.71, flops:108.17, batch-reuse:1
@ 2109 train 5.0754 , allloss: 5.1077, dt: 1268.64ms, fracRes: 0.3553, norm(attn): 0.1729, norm(output): 0.1865, norm(x): 0.2971, norm(y): 0.9945, norm:1.7931, tok/sec: 103316.60, flops:108.44, batch-reuse:1
@ 2110 train 4.9812 , allloss: 5.0134, dt: 1277.50ms, fracRes: 0.3542, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2956, norm(y): 0.9945, norm:1.5001, tok/sec: 102600.19, flops:107.69, batch-reuse:1
@ 2111 train 4.9620 , allloss: 4.9940, dt: 1253.18ms, fracRes: 0.3567, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2974, norm(y): 0.9946, norm:1.6274, tok/sec: 104591.36, flops:109.78, batch-reuse:1
@ 2112 train 4.9970 , allloss: 5.0290, dt: 1254.06ms, fracRes: 0.3530, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2952, norm(y): 0.9947, norm:1.6669, tok/sec: 104517.90, flops:109.71, batch-reuse:1
@ 2113 train 5.0087 , allloss: 5.0411, dt: 1257.81ms, fracRes: 0.3537, norm(attn): 0.1748, norm(output): 0.1875, norm(x): 0.2965, norm(y): 0.9946, norm:1.5112, tok/sec: 104206.23, flops:109.38, batch-reuse:1
@ 2114 train 5.0525 , allloss: 5.0854, dt: 1266.76ms, fracRes: 0.3553, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2973, norm(y): 0.9946, norm:1.5681, tok/sec: 103470.30, flops:108.61, batch-reuse:1
@ 2115 train 5.0367 , allloss: 5.0678, dt: 1250.86ms, fracRes: 0.3546, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2977, norm(y): 0.9946, norm:1.6196, tok/sec: 104785.31, flops:109.99, batch-reuse:1
@ 2116 train 5.0578 , allloss: 5.0892, dt: 1275.40ms, fracRes: 0.3558, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.2988, norm(y): 0.9946, norm:1.5609, tok/sec: 102768.99, flops:107.87, batch-reuse:1
@ 2117 train 5.0060 , allloss: 5.0384, dt: 1265.14ms, fracRes: 0.3565, norm(attn): 0.1758, norm(output): 0.1875, norm(x): 0.2988, norm(y): 0.9945, norm:1.4777, tok/sec: 103603.11, flops:108.75, batch-reuse:1
@ 2118 train 4.9812 , allloss: 5.0143, dt: 1275.12ms, fracRes: 0.3574, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2988, norm(y): 0.9946, norm:1.4460, tok/sec: 102791.66, flops:107.89, batch-reuse:1
@ 2119 train 5.0742 , allloss: 5.1063, dt: 1264.48ms, fracRes: 0.3541, norm(attn): 0.1758, norm(output): 0.1885, norm(x): 0.2986, norm(y): 0.9946, norm:1.6475, tok/sec: 103656.58, flops:108.80, batch-reuse:1
@ 2120 train 4.9944 , allloss: 5.0263, dt: 1272.69ms, fracRes: 0.3529, norm(attn): 0.1748, norm(output): 0.1875, norm(x): 0.2991, norm(y): 0.9946, norm:1.7808, tok/sec: 102988.48, flops:108.10, batch-reuse:1
@ 2121 train 5.0675 , allloss: 5.1008, dt: 1242.24ms, fracRes: 0.3546, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.2994, norm(y): 0.9946, norm:1.8897, tok/sec: 105512.97, flops:110.75, batch-reuse:1
@ 2122 train 5.0089 , allloss: 5.0418, dt: 1271.25ms, fracRes: 0.3539, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.2987, norm(y): 0.9946, norm:1.5726, tok/sec: 103104.62, flops:108.22, batch-reuse:1
@ 2123 train 5.0515 , allloss: 5.0847, dt: 1251.97ms, fracRes: 0.3531, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.2977, norm(y): 0.9946, norm:1.5013, tok/sec: 104692.48, flops:109.89, batch-reuse:1
@ 2124 train 4.9719 , allloss: 5.0042, dt: 1264.87ms, fracRes: 0.3535, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2988, norm(y): 0.9946, norm:1.4670, tok/sec: 103625.22, flops:108.77, batch-reuse:1
@ 2125 train 5.0322 , allloss: 5.0636, dt: 1260.27ms, fracRes: 0.3528, norm(attn): 0.1709, norm(output): 0.1875, norm(x): 0.2967, norm(y): 0.9946, norm:1.5595, tok/sec: 104003.10, flops:109.16, batch-reuse:1
@ 2126 train 4.9822 , allloss: 5.0139, dt: 1274.24ms, fracRes: 0.3505, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2963, norm(y): 0.9946, norm:1.5261, tok/sec: 102862.92, flops:107.97, batch-reuse:1
@ 2127 train 5.0326 , allloss: 5.0651, dt: 1268.40ms, fracRes: 0.3504, norm(attn): 0.1748, norm(output): 0.1885, norm(x): 0.2975, norm(y): 0.9945, norm:1.5632, tok/sec: 103336.82, flops:108.47, batch-reuse:1
@ 2128 train 4.9420 , allloss: 4.9737, dt: 1295.50ms, fracRes: 0.3529, norm(attn): 0.1748, norm(output): 0.1885, norm(x): 0.2975, norm(y): 0.9945, norm:1.5944, tok/sec: 101174.76, flops:106.20, batch-reuse:1
@ 2129 train 5.0028 , allloss: 5.0343, dt: 1291.87ms, fracRes: 0.3539, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2973, norm(y): 0.9945, norm:1.4071, tok/sec: 101459.36, flops:106.49, batch-reuse:1
@ 2130 train 4.9344 , allloss: 4.9675, dt: 1265.98ms, fracRes: 0.3561, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2985, norm(y): 0.9946, norm:1.7057, tok/sec: 103534.14, flops:108.67, batch-reuse:1
@ 2131 train 5.0250 , allloss: 5.0567, dt: 1274.73ms, fracRes: 0.3530, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.2977, norm(y): 0.9945, norm:1.4049, tok/sec: 102823.42, flops:107.93, batch-reuse:1
@ 2132 train 5.0890 , allloss: 5.1199, dt: 1280.77ms, fracRes: 0.3555, norm(attn): 0.1777, norm(output): 0.1885, norm(x): 0.3017, norm(y): 0.9944, norm:1.5912, tok/sec: 102338.66, flops:107.42, batch-reuse:1
@ 2133 train 5.0189 , allloss: 5.0499, dt: 1246.45ms, fracRes: 0.3556, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.2989, norm(y): 0.9945, norm:1.5370, tok/sec: 105156.25, flops:110.38, batch-reuse:1
@ 2134 train 4.9603 , allloss: 4.9940, dt: 1268.35ms, fracRes: 0.3517, norm(attn): 0.1787, norm(output): 0.1875, norm(x): 0.2960, norm(y): 0.9945, norm:1.5010, tok/sec: 103340.18, flops:108.47, batch-reuse:1
@ 2135 train 5.0283 , allloss: 5.0605, dt: 1268.84ms, fracRes: 0.3519, norm(attn): 0.1777, norm(output): 0.1875, norm(x): 0.2964, norm(y): 0.9945, norm:1.3315, tok/sec: 103300.63, flops:108.43, batch-reuse:1
@ 2136 train 4.9526 , allloss: 4.9844, dt: 1264.25ms, fracRes: 0.3546, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.2981, norm(y): 0.9947, norm:1.6738, tok/sec: 103675.42, flops:108.82, batch-reuse:1
@ 2137 train 4.9121 , allloss: 4.9433, dt: 1276.87ms, fracRes: 0.3561, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.2985, norm(y): 0.9948, norm:1.9795, tok/sec: 102650.71, flops:107.75, batch-reuse:1
@ 2138 train 4.9546 , allloss: 4.9862, dt: 1286.84ms, fracRes: 0.3577, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.3002, norm(y): 0.9946, norm:1.4311, tok/sec: 101855.43, flops:106.91, batch-reuse:1
@ 2139 train 5.0307 , allloss: 5.0642, dt: 1281.14ms, fracRes: 0.3596, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.3020, norm(y): 0.9945, norm:1.7143, tok/sec: 102308.99, flops:107.39, batch-reuse:1
@ 2140 train 4.9861 , allloss: 5.0185, dt: 1279.90ms, fracRes: 0.3567, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.3000, norm(y): 0.9945, norm:1.3987, tok/sec: 102408.15, flops:107.49, batch-reuse:1
@ 2141 train 4.9511 , allloss: 4.9843, dt: 1259.78ms, fracRes: 0.3557, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.2992, norm(y): 0.9947, norm:1.5947, tok/sec: 104043.77, flops:109.21, batch-reuse:1
@ 2142 train 4.9193 , allloss: 4.9517, dt: 1268.26ms, fracRes: 0.3558, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.3001, norm(y): 0.9947, norm:1.5939, tok/sec: 103348.17, flops:108.48, batch-reuse:1
@ 2143 train 5.0177 , allloss: 5.0494, dt: 1274.02ms, fracRes: 0.3575, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.3022, norm(y): 0.9946, norm:1.5782, tok/sec: 102880.75, flops:107.99, batch-reuse:1
@ 2144 train 4.9575 , allloss: 4.9904, dt: 1269.66ms, fracRes: 0.3570, norm(attn): 0.1748, norm(output): 0.1885, norm(x): 0.3015, norm(y): 0.9945, norm:1.5928, tok/sec: 103233.55, flops:108.36, batch-reuse:1
@ 2145 train 4.9879 , allloss: 5.0222, dt: 1253.16ms, fracRes: 0.3608, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.3040, norm(y): 0.9946, norm:1.5215, tok/sec: 104593.23, flops:109.78, batch-reuse:1
@ 2146 train 5.2854 , allloss: 5.3174, dt: 1276.13ms, fracRes: 0.3625, norm(attn): 0.1709, norm(output): 0.1895, norm(x): 0.3056, norm(y): 0.9946, norm:2.1031, tok/sec: 102710.91, flops:107.81, batch-reuse:1
@ 2147 train 4.9086 , allloss: 4.9392, dt: 1223.02ms, fracRes: 0.3585, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.3022, norm(y): 0.9945, norm:1.7754, tok/sec: 107170.37, flops:112.49, batch-reuse:1
@ 2148 train 4.9556 , allloss: 4.9908, dt: 1276.18ms, fracRes: 0.3598, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.3020, norm(y): 0.9945, norm:2.2982, tok/sec: 102706.19, flops:107.80, batch-reuse:1
@ 2149 train 4.9355 , allloss: 4.9676, dt: 1253.32ms, fracRes: 0.3581, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.3031, norm(y): 0.9944, norm:1.4151, tok/sec: 104580.10, flops:109.77, batch-reuse:1
@ 2150 train 4.9699 , allloss: 5.0005, dt: 1274.98ms, fracRes: 0.3599, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.3039, norm(y): 0.9945, norm:1.5593, tok/sec: 102803.23, flops:107.91, batch-reuse:1
@ 2151 train 4.9065 , allloss: 4.9382, dt: 1254.28ms, fracRes: 0.3582, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.3016, norm(y): 0.9945, norm:1.5935, tok/sec: 104499.82, flops:109.69, batch-reuse:1
@ 2152 train 4.9776 , allloss: 5.0099, dt: 1246.06ms, fracRes: 0.3572, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.3011, norm(y): 0.9945, norm:1.6668, tok/sec: 105189.08, flops:110.41, batch-reuse:1
@ 2153 train 4.9432 , allloss: 4.9739, dt: 1267.39ms, fracRes: 0.3557, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.2999, norm(y): 0.9946, norm:1.7276, tok/sec: 103419.17, flops:108.55, batch-reuse:1
@ 2154 train 4.9846 , allloss: 5.0177, dt: 1255.46ms, fracRes: 0.3569, norm(attn): 0.1748, norm(output): 0.1885, norm(x): 0.3031, norm(y): 0.9945, norm:1.6418, tok/sec: 104401.55, flops:109.58, batch-reuse:1
@ 2155 train 4.9631 , allloss: 4.9962, dt: 1267.57ms, fracRes: 0.3530, norm(attn): 0.1787, norm(output): 0.1885, norm(x): 0.3004, norm(y): 0.9945, norm:1.5550, tok/sec: 103403.90, flops:108.54, batch-reuse:1
@ 2156 train 4.9282 , allloss: 4.9599, dt: 1273.70ms, fracRes: 0.3535, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.2991, norm(y): 0.9947, norm:1.6571, tok/sec: 102906.51, flops:108.01, batch-reuse:1
@ 2157 train 5.0180 , allloss: 5.0495, dt: 1283.57ms, fracRes: 0.3563, norm(attn): 0.1729, norm(output): 0.1895, norm(x): 0.3026, norm(y): 0.9946, norm:1.9276, tok/sec: 102115.17, flops:107.18, batch-reuse:1
@ 2158 train 4.9949 , allloss: 5.0263, dt: 1257.71ms, fracRes: 0.3543, norm(attn): 0.1748, norm(output): 0.1885, norm(x): 0.3009, norm(y): 0.9945, norm:1.4845, tok/sec: 104214.96, flops:109.39, batch-reuse:1
@ 2159 train 4.9275 , allloss: 4.9583, dt: 1268.91ms, fracRes: 0.3546, norm(attn): 0.1748, norm(output): 0.1895, norm(x): 0.3020, norm(y): 0.9944, norm:1.6331, tok/sec: 103295.31, flops:108.42, batch-reuse:1
@ 2160 train 5.0065 , allloss: 5.0405, dt: 1256.40ms, fracRes: 0.3586, norm(attn): 0.1758, norm(output): 0.1904, norm(x): 0.3045, norm(y): 0.9944, norm:1.7771, tok/sec: 104323.57, flops:109.50, batch-reuse:1
@ 2161 train 4.9919 , allloss: 5.0292, dt: 1257.29ms, fracRes: 0.3622, norm(attn): 0.1758, norm(output): 0.1885, norm(x): 0.3058, norm(y): 0.9946, norm:2.3076, tok/sec: 104249.43, flops:109.42, batch-reuse:1
@ 2162 train 4.8970 , allloss: 4.9283, dt: 1242.22ms, fracRes: 0.3561, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.3014, norm(y): 0.9945, norm:1.7307, tok/sec: 105514.73, flops:110.75, batch-reuse:1
@ 2163 train 4.9813 , allloss: 5.0125, dt: 1259.35ms, fracRes: 0.3585, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.3025, norm(y): 0.9946, norm:1.6886, tok/sec: 104079.32, flops:109.24, batch-reuse:1
@ 2164 train 4.8585 , allloss: 4.8919, dt: 1266.80ms, fracRes: 0.3609, norm(attn): 0.1748, norm(output): 0.1895, norm(x): 0.3036, norm(y): 0.9945, norm:1.7199, tok/sec: 103467.36, flops:108.60, batch-reuse:1
@ 2165 train 4.8460 , allloss: 4.8786, dt: 1268.58ms, fracRes: 0.3584, norm(attn): 0.1758, norm(output): 0.1885, norm(x): 0.3012, norm(y): 0.9944, norm:1.5015, tok/sec: 103321.77, flops:108.45, batch-reuse:1
@ 2166 train 4.9307 , allloss: 4.9623, dt: 1281.82ms, fracRes: 0.3584, norm(attn): 0.1748, norm(output): 0.1885, norm(x): 0.3021, norm(y): 0.9944, norm:1.5286, tok/sec: 102254.49, flops:107.33, batch-reuse:1
@ 2167 train 4.9551 , allloss: 4.9852, dt: 1273.30ms, fracRes: 0.3588, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.3022, norm(y): 0.9946, norm:1.6616, tok/sec: 102938.75, flops:108.05, batch-reuse:1
@ 2168 train 4.9553 , allloss: 4.9865, dt: 1254.51ms, fracRes: 0.3597, norm(attn): 0.1709, norm(output): 0.1885, norm(x): 0.3022, norm(y): 0.9946, norm:1.5045, tok/sec: 104480.30, flops:109.67, batch-reuse:1
@ 2169 train 4.9641 , allloss: 4.9972, dt: 1269.68ms, fracRes: 0.3596, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.3039, norm(y): 0.9945, norm:1.3722, tok/sec: 103232.52, flops:108.36, batch-reuse:1
@ 2170 train 4.9766 , allloss: 5.0093, dt: 1275.49ms, fracRes: 0.3590, norm(attn): 0.1787, norm(output): 0.1885, norm(x): 0.3040, norm(y): 0.9944, norm:1.7750, tok/sec: 102762.36, flops:107.86, batch-reuse:1
@ 2171 train 4.9810 , allloss: 5.0128, dt: 1267.11ms, fracRes: 0.3607, norm(attn): 0.1748, norm(output): 0.1895, norm(x): 0.3048, norm(y): 0.9946, norm:1.3775, tok/sec: 103441.99, flops:108.58, batch-reuse:1
@ 2172 train 5.0041 , allloss: 5.0345, dt: 1262.15ms, fracRes: 0.3611, norm(attn): 0.1748, norm(output): 0.1895, norm(x): 0.3051, norm(y): 0.9946, norm:1.5379, tok/sec: 103847.82, flops:109.00, batch-reuse:1
@ 2173 train 4.9228 , allloss: 4.9555, dt: 1267.25ms, fracRes: 0.3580, norm(attn): 0.1777, norm(output): 0.1885, norm(x): 0.3023, norm(y): 0.9945, norm:1.4605, tok/sec: 103430.34, flops:108.56, batch-reuse:1
@ 2174 train 4.9718 , allloss: 5.0022, dt: 1284.99ms, fracRes: 0.3574, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.3045, norm(y): 0.9946, norm:1.6555, tok/sec: 102002.48, flops:107.07, batch-reuse:1
@ 2175 train 4.9231 , allloss: 4.9548, dt: 1280.32ms, fracRes: 0.3554, norm(attn): 0.1729, norm(output): 0.1904, norm(x): 0.3043, norm(y): 0.9946, norm:1.7766, tok/sec: 102374.77, flops:107.46, batch-reuse:1
@ 2176 train 4.9078 , allloss: 4.9383, dt: 1308.94ms, fracRes: 0.3543, norm(attn): 0.1748, norm(output): 0.1895, norm(x): 0.3034, norm(y): 0.9946, norm:1.5321, tok/sec: 100135.83, flops:105.11, batch-reuse:1
@ 2177 train 4.9163 , allloss: 4.9474, dt: 1266.21ms, fracRes: 0.3535, norm(attn): 0.1748, norm(output): 0.1895, norm(x): 0.3021, norm(y): 0.9945, norm:1.5237, tok/sec: 103515.31, flops:108.65, batch-reuse:1
@ 2178 train 4.9753 , allloss: 5.0072, dt: 1264.74ms, fracRes: 0.3546, norm(attn): 0.1777, norm(output): 0.1914, norm(x): 0.3048, norm(y): 0.9944, norm:1.5240, tok/sec: 103635.71, flops:108.78, batch-reuse:1
@ 2179 train 4.9642 , allloss: 4.9965, dt: 1265.66ms, fracRes: 0.3551, norm(attn): 0.1777, norm(output): 0.1895, norm(x): 0.3033, norm(y): 0.9944, norm:1.4505, tok/sec: 103559.92, flops:108.70, batch-reuse:1
@ 2180 train 4.8790 , allloss: 4.9104, dt: 1256.57ms, fracRes: 0.3571, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.3031, norm(y): 0.9946, norm:1.4881, tok/sec: 104309.66, flops:109.49, batch-reuse:1
@ 2181 train 4.8830 , allloss: 4.9135, dt: 1293.58ms, fracRes: 0.3575, norm(attn): 0.1768, norm(output): 0.1904, norm(x): 0.3048, norm(y): 0.9944, norm:1.4741, tok/sec: 101324.63, flops:106.35, batch-reuse:1
@ 2182 train 4.9856 , allloss: 5.0176, dt: 1277.94ms, fracRes: 0.3588, norm(attn): 0.1768, norm(output): 0.1895, norm(x): 0.3062, norm(y): 0.9944, norm:1.5250, tok/sec: 102565.27, flops:107.66, batch-reuse:1
@ 2183 train 4.7992 , allloss: 4.8302, dt: 1254.83ms, fracRes: 0.3577, norm(attn): 0.1729, norm(output): 0.1895, norm(x): 0.3048, norm(y): 0.9945, norm:1.5127, tok/sec: 104454.06, flops:109.64, batch-reuse:1
@ 2184 train 4.7672 , allloss: 4.7993, dt: 1263.02ms, fracRes: 0.3608, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.3047, norm(y): 0.9946, norm:1.6436, tok/sec: 103776.29, flops:108.93, batch-reuse:1
@ 2185 train 4.9391 , allloss: 4.9721, dt: 1273.14ms, fracRes: 0.3609, norm(attn): 0.1738, norm(output): 0.1904, norm(x): 0.3071, norm(y): 0.9945, norm:1.3686, tok/sec: 102952.15, flops:108.06, batch-reuse:1
@ 2186 train 4.8368 , allloss: 4.8683, dt: 1247.89ms, fracRes: 0.3575, norm(attn): 0.1729, norm(output): 0.1904, norm(x): 0.3043, norm(y): 0.9945, norm:1.7411, tok/sec: 105035.22, flops:110.25, batch-reuse:1
@ 2187 train 4.8148 , allloss: 4.8467, dt: 1291.64ms, fracRes: 0.3574, norm(attn): 0.1748, norm(output): 0.1904, norm(x): 0.3045, norm(y): 0.9945, norm:1.3754, tok/sec: 101477.13, flops:106.51, batch-reuse:1
@ 2188 train 4.7825 , allloss: 4.8136, dt: 1243.49ms, fracRes: 0.3601, norm(attn): 0.1709, norm(output): 0.1895, norm(x): 0.3040, norm(y): 0.9946, norm:1.3752, tok/sec: 105406.66, flops:110.64, batch-reuse:1
@ 2189 train 4.8576 , allloss: 4.8889, dt: 1273.97ms, fracRes: 0.3599, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.3043, norm(y): 0.9945, norm:1.7050, tok/sec: 102884.77, flops:107.99, batch-reuse:1
@ 2190 train 4.7414 , allloss: 4.7761, dt: 1250.23ms, fracRes: 0.3645, norm(attn): 0.1758, norm(output): 0.1914, norm(x): 0.3083, norm(y): 0.9945, norm:1.6820, tok/sec: 104838.04, flops:110.04, batch-reuse:1
@ 2191 train 4.8700 , allloss: 4.9026, dt: 1259.58ms, fracRes: 0.3645, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.3068, norm(y): 0.9945, norm:1.5096, tok/sec: 104059.99, flops:109.22, batch-reuse:1
@ 2192 train 4.8498 , allloss: 4.8816, dt: 1282.98ms, fracRes: 0.3647, norm(attn): 0.1709, norm(output): 0.1885, norm(x): 0.3062, norm(y): 0.9946, norm:1.6271, tok/sec: 102161.93, flops:107.23, batch-reuse:1
@ 2193 train 4.8053 , allloss: 4.8371, dt: 1256.71ms, fracRes: 0.3621, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.3043, norm(y): 0.9945, norm:1.4660, tok/sec: 104297.69, flops:109.47, batch-reuse:1
@ 2194 train 4.9073 , allloss: 4.9395, dt: 1298.82ms, fracRes: 0.3592, norm(attn): 0.1748, norm(output): 0.1895, norm(x): 0.3029, norm(y): 0.9945, norm:1.2978, tok/sec: 100916.60, flops:105.93, batch-reuse:1
@ 2195 train 4.9022 , allloss: 4.9328, dt: 1248.83ms, fracRes: 0.3620, norm(attn): 0.1729, norm(output): 0.1895, norm(x): 0.3062, norm(y): 0.9945, norm:2.1340, tok/sec: 104955.73, flops:110.16, batch-reuse:1
@ 2196 train 4.9194 , allloss: 4.9501, dt: 1265.66ms, fracRes: 0.3572, norm(attn): 0.1748, norm(output): 0.1904, norm(x): 0.3039, norm(y): 0.9944, norm:1.5083, tok/sec: 103560.33, flops:108.70, batch-reuse:1
@ 2197 train 4.7887 , allloss: 4.8233, dt: 1280.69ms, fracRes: 0.3570, norm(attn): 0.1797, norm(output): 0.1914, norm(x): 0.3039, norm(y): 0.9944, norm:2.0243, tok/sec: 102344.76, flops:107.42, batch-reuse:1
@ 2198 train 4.8651 , allloss: 4.8969, dt: 1261.42ms, fracRes: 0.3568, norm(attn): 0.1738, norm(output): 0.1904, norm(x): 0.3055, norm(y): 0.9945, norm:1.7518, tok/sec: 103908.23, flops:109.07, batch-reuse:1
@ 2199 train 4.8934 , allloss: 4.9251, dt: 1269.91ms, fracRes: 0.3561, norm(attn): 0.1729, norm(output): 0.1904, norm(x): 0.3043, norm(y): 0.9945, norm:1.4339, tok/sec: 103213.74, flops:108.34, batch-reuse:1
@ 2200 train 4.8505 , allloss: 4.8833, dt: 1276.53ms, fracRes: 0.3568, norm(attn): 0.1748, norm(output): 0.1904, norm(x): 0.3054, norm(y): 0.9944, norm:1.7503, tok/sec: 102678.06, flops:107.77, batch-reuse:1
@ 2201 train 4.8720 , allloss: 4.9066, dt: 1285.65ms, fracRes: 0.3552, norm(attn): 0.1807, norm(output): 0.1895, norm(x): 0.3034, norm(y): 0.9943, norm:1.6644, tok/sec: 101949.68, flops:107.01, batch-reuse:1
@ 2202 train 4.9459 , allloss: 4.9767, dt: 1264.27ms, fracRes: 0.3583, norm(attn): 0.1748, norm(output): 0.1904, norm(x): 0.3068, norm(y): 0.9945, norm:1.5208, tok/sec: 103674.40, flops:108.82, batch-reuse:1
@ 2203 train 4.8772 , allloss: 4.9076, dt: 1280.35ms, fracRes: 0.3581, norm(attn): 0.1709, norm(output): 0.1914, norm(x): 0.3068, norm(y): 0.9946, norm:1.5753, tok/sec: 102371.91, flops:107.45, batch-reuse:1
@ 2204 train 4.8908 , allloss: 4.9213, dt: 1256.75ms, fracRes: 0.3568, norm(attn): 0.1719, norm(output): 0.1895, norm(x): 0.3054, norm(y): 0.9946, norm:1.8314, tok/sec: 104294.82, flops:109.47, batch-reuse:1
@ 2205 train 4.8694 , allloss: 4.9019, dt: 1243.65ms, fracRes: 0.3595, norm(attn): 0.1738, norm(output): 0.1895, norm(x): 0.3066, norm(y): 0.9945, norm:1.5987, tok/sec: 105392.62, flops:110.62, batch-reuse:1
@ 2206 train 4.8020 , allloss: 4.8337, dt: 1252.65ms, fracRes: 0.3586, norm(attn): 0.1748, norm(output): 0.1904, norm(x): 0.3051, norm(y): 0.9945, norm:1.6907, tok/sec: 104635.63, flops:109.83, batch-reuse:1
@ 2207 train 4.8192 , allloss: 4.8512, dt: 1266.70ms, fracRes: 0.3609, norm(attn): 0.1738, norm(output): 0.1895, norm(x): 0.3063, norm(y): 0.9945, norm:1.6631, tok/sec: 103474.82, flops:108.61, batch-reuse:1
@ 2208 train 4.9225 , allloss: 4.9542, dt: 1251.92ms, fracRes: 0.3628, norm(attn): 0.1729, norm(output): 0.1895, norm(x): 0.3085, norm(y): 0.9944, norm:1.4400, tok/sec: 104696.55, flops:109.89, batch-reuse:1
@ 2209 train 4.7805 , allloss: 4.8129, dt: 1269.58ms, fracRes: 0.3581, norm(attn): 0.1777, norm(output): 0.1914, norm(x): 0.3059, norm(y): 0.9943, norm:1.5207, tok/sec: 103240.32, flops:108.36, batch-reuse:1
@ 2210 train 4.7287 , allloss: 4.7621, dt: 1285.12ms, fracRes: 0.3588, norm(attn): 0.1797, norm(output): 0.1904, norm(x): 0.3068, norm(y): 0.9944, norm:1.7576, tok/sec: 101991.99, flops:107.05, batch-reuse:1
@ 2211 train 4.8652 , allloss: 4.8961, dt: 1271.40ms, fracRes: 0.3616, norm(attn): 0.1729, norm(output): 0.1895, norm(x): 0.3087, norm(y): 0.9945, norm:1.5391, tok/sec: 103092.64, flops:108.21, batch-reuse:1
@ 2212 train 4.7423 , allloss: 4.7742, dt: 1280.85ms, fracRes: 0.3602, norm(attn): 0.1729, norm(output): 0.1895, norm(x): 0.3074, norm(y): 0.9944, norm:1.7619, tok/sec: 102332.26, flops:107.41, batch-reuse:1
@ 2213 train 5.1376 , allloss: 5.1707, dt: 1278.77ms, fracRes: 0.3661, norm(attn): 0.1738, norm(output): 0.1914, norm(x): 0.3140, norm(y): 0.9944, norm:2.0773, tok/sec: 102498.40, flops:107.59, batch-reuse:1
@ 2214 train 4.9918 , allloss: 5.0260, dt: 1254.17ms, fracRes: 0.3617, norm(attn): 0.1738, norm(output): 0.1904, norm(x): 0.3094, norm(y): 0.9944, norm:2.4704, tok/sec: 104509.22, flops:109.70, batch-reuse:1
@ 2215 train 4.8708 , allloss: 4.9022, dt: 1278.95ms, fracRes: 0.3604, norm(attn): 0.1768, norm(output): 0.1904, norm(x): 0.3080, norm(y): 0.9943, norm:1.8163, tok/sec: 102483.98, flops:107.57, batch-reuse:1
@ 2216 train 4.9192 , allloss: 4.9516, dt: 1264.43ms, fracRes: 0.3624, norm(attn): 0.1748, norm(output): 0.1904, norm(x): 0.3088, norm(y): 0.9943, norm:1.7059, tok/sec: 103660.91, flops:108.81, batch-reuse:1
@ 2217 train 4.8092 , allloss: 4.8424, dt: 1286.44ms, fracRes: 0.3614, norm(attn): 0.1748, norm(output): 0.1914, norm(x): 0.3068, norm(y): 0.9943, norm:1.5235, tok/sec: 101887.50, flops:106.94, batch-reuse:1
@ 2218 train 4.8024 , allloss: 4.8328, dt: 1263.11ms, fracRes: 0.3620, norm(attn): 0.1729, norm(output): 0.1914, norm(x): 0.3084, norm(y): 0.9944, norm:1.7038, tok/sec: 103769.08, flops:108.92, batch-reuse:1
@ 2219 train 4.9009 , allloss: 4.9323, dt: 1284.53ms, fracRes: 0.3621, norm(attn): 0.1719, norm(output): 0.1904, norm(x): 0.3086, norm(y): 0.9946, norm:1.6874, tok/sec: 102039.09, flops:107.10, batch-reuse:1
@ 2220 train 4.8735 , allloss: 4.9039, dt: 1261.99ms, fracRes: 0.3597, norm(attn): 0.1738, norm(output): 0.1914, norm(x): 0.3076, norm(y): 0.9945, norm:1.6283, tok/sec: 103861.77, flops:109.02, batch-reuse:1
@ 2221 train 4.7235 , allloss: 4.7563, dt: 1259.89ms, fracRes: 0.3611, norm(attn): 0.1768, norm(output): 0.1914, norm(x): 0.3096, norm(y): 0.9944, norm:1.4505, tok/sec: 104034.14, flops:109.20, batch-reuse:1
@ 2222 train 4.8746 , allloss: 4.9085, dt: 1256.37ms, fracRes: 0.3584, norm(attn): 0.1768, norm(output): 0.1904, norm(x): 0.3065, norm(y): 0.9943, norm:1.7848, tok/sec: 104325.65, flops:109.50, batch-reuse:1
@ 2223 train 4.7946 , allloss: 4.8257, dt: 1263.71ms, fracRes: 0.3577, norm(attn): 0.1768, norm(output): 0.1914, norm(x): 0.3074, norm(y): 0.9943, norm:1.5612, tok/sec: 103720.00, flops:108.87, batch-reuse:1
@ 2224 train 4.8755 , allloss: 4.9100, dt: 1259.99ms, fracRes: 0.3665, norm(attn): 0.1758, norm(output): 0.1914, norm(x): 0.3148, norm(y): 0.9944, norm:1.5875, tok/sec: 104025.83, flops:109.19, batch-reuse:1
@ 2225 train 4.9164 , allloss: 4.9495, dt: 1271.73ms, fracRes: 0.3601, norm(attn): 0.1748, norm(output): 0.1904, norm(x): 0.3076, norm(y): 0.9945, norm:1.9119, tok/sec: 103066.10, flops:108.18, batch-reuse:1
@ 2226 train 4.8907 , allloss: 4.9210, dt: 1275.76ms, fracRes: 0.3612, norm(attn): 0.1748, norm(output): 0.1914, norm(x): 0.3094, norm(y): 0.9945, norm:1.9697, tok/sec: 102740.60, flops:107.84, batch-reuse:1
@ 2227 train 4.8204 , allloss: 4.8511, dt: 1278.62ms, fracRes: 0.3596, norm(attn): 0.1768, norm(output): 0.1914, norm(x): 0.3082, norm(y): 0.9944, norm:1.7452, tok/sec: 102510.23, flops:107.60, batch-reuse:1
@ 2228 train 4.8378 , allloss: 4.8689, dt: 1274.41ms, fracRes: 0.3598, norm(attn): 0.1748, norm(output): 0.1904, norm(x): 0.3079, norm(y): 0.9944, norm:1.4506, tok/sec: 102849.10, flops:107.95, batch-reuse:1
@ 2229 train 5.0030 , allloss: 5.0351, dt: 1283.50ms, fracRes: 0.3597, norm(attn): 0.1797, norm(output): 0.1934, norm(x): 0.3099, norm(y): 0.9944, norm:1.5701, tok/sec: 102120.41, flops:107.19, batch-reuse:1
@ 2230 train 5.0201 , allloss: 5.0502, dt: 1274.84ms, fracRes: 0.3607, norm(attn): 0.1748, norm(output): 0.1914, norm(x): 0.3103, norm(y): 0.9945, norm:1.5394, tok/sec: 102814.58, flops:107.92, batch-reuse:1
@ 2231 train 5.0825 , allloss: 5.1126, dt: 1256.46ms, fracRes: 0.3599, norm(attn): 0.1748, norm(output): 0.1914, norm(x): 0.3106, norm(y): 0.9945, norm:1.5520, tok/sec: 104318.21, flops:109.50, batch-reuse:1
@ 2232 train 5.0106 , allloss: 5.0410, dt: 1243.28ms, fracRes: 0.3580, norm(attn): 0.1787, norm(output): 0.1934, norm(x): 0.3105, norm(y): 0.9944, norm:1.6033, tok/sec: 105424.14, flops:110.66, batch-reuse:1
@ 2233 train 4.9571 , allloss: 4.9887, dt: 1280.31ms, fracRes: 0.3590, norm(attn): 0.1797, norm(output): 0.1924, norm(x): 0.3086, norm(y): 0.9944, norm:1.4309, tok/sec: 102374.81, flops:107.46, batch-reuse:1
@ 2234 train 5.1379 , allloss: 5.1704, dt: 1269.20ms, fracRes: 0.3653, norm(attn): 0.1738, norm(output): 0.1934, norm(x): 0.3122, norm(y): 0.9945, norm:1.8536, tok/sec: 103271.50, flops:108.40, batch-reuse:1
@ 2235 train 4.9928 , allloss: 5.0249, dt: 1256.31ms, fracRes: 0.3645, norm(attn): 0.1758, norm(output): 0.1914, norm(x): 0.3102, norm(y): 0.9944, norm:1.6433, tok/sec: 104330.60, flops:109.51, batch-reuse:1
@ 2236 train 4.9729 , allloss: 5.0044, dt: 1274.17ms, fracRes: 0.3636, norm(attn): 0.1816, norm(output): 0.1934, norm(x): 0.3109, norm(y): 0.9944, norm:1.6631, tok/sec: 102868.50, flops:107.97, batch-reuse:1
@ 2237 train 5.0589 , allloss: 5.0918, dt: 1283.67ms, fracRes: 0.3641, norm(attn): 0.1816, norm(output): 0.1924, norm(x): 0.3119, norm(y): 0.9943, norm:1.6584, tok/sec: 102107.55, flops:107.18, batch-reuse:1
@ 2238 train 4.9367 , allloss: 4.9678, dt: 1280.89ms, fracRes: 0.3627, norm(attn): 0.1768, norm(output): 0.1914, norm(x): 0.3097, norm(y): 0.9944, norm:1.5667, tok/sec: 102328.72, flops:107.41, batch-reuse:1
@ 2239 train 4.9168 , allloss: 4.9494, dt: 1276.94ms, fracRes: 0.3618, norm(attn): 0.1787, norm(output): 0.1914, norm(x): 0.3084, norm(y): 0.9944, norm:1.5560, tok/sec: 102645.13, flops:107.74, batch-reuse:1
@ 2240 train 5.0103 , allloss: 5.0407, dt: 1283.67ms, fracRes: 0.3612, norm(attn): 0.1758, norm(output): 0.1924, norm(x): 0.3097, norm(y): 0.9945, norm:1.5334, tok/sec: 102107.62, flops:107.18, batch-reuse:1
@ 2241 train 5.0542 , allloss: 5.0851, dt: 1292.94ms, fracRes: 0.3628, norm(attn): 0.1758, norm(output): 0.1934, norm(x): 0.3121, norm(y): 0.9945, norm:1.6461, tok/sec: 101375.19, flops:106.41, batch-reuse:1
@ 2242 train 4.9787 , allloss: 5.0098, dt: 1275.30ms, fracRes: 0.3596, norm(attn): 0.1758, norm(output): 0.1943, norm(x): 0.3100, norm(y): 0.9944, norm:1.7242, tok/sec: 102777.50, flops:107.88, batch-reuse:1
@ 2243 train 5.0263 , allloss: 5.0580, dt: 1247.48ms, fracRes: 0.3602, norm(attn): 0.1797, norm(output): 0.1914, norm(x): 0.3108, norm(y): 0.9944, norm:1.8811, tok/sec: 105069.07, flops:110.28, batch-reuse:1
@ 2244 train 5.0229 , allloss: 5.0547, dt: 1261.72ms, fracRes: 0.3616, norm(attn): 0.1777, norm(output): 0.1934, norm(x): 0.3136, norm(y): 0.9944, norm:1.5768, tok/sec: 103883.87, flops:109.04, batch-reuse:1
@ 2245 train 4.9609 , allloss: 4.9931, dt: 1283.26ms, fracRes: 0.3592, norm(attn): 0.1768, norm(output): 0.1914, norm(x): 0.3109, norm(y): 0.9944, norm:1.7042, tok/sec: 102139.65, flops:107.21, batch-reuse:1
@ 2246 train 4.9303 , allloss: 4.9612, dt: 1256.16ms, fracRes: 0.3594, norm(attn): 0.1787, norm(output): 0.1934, norm(x): 0.3114, norm(y): 0.9943, norm:1.6437, tok/sec: 104343.45, flops:109.52, batch-reuse:1
@ 2247 train 4.9795 , allloss: 5.0112, dt: 1259.35ms, fracRes: 0.3608, norm(attn): 0.1787, norm(output): 0.1934, norm(x): 0.3131, norm(y): 0.9943, norm:1.4727, tok/sec: 104079.06, flops:109.24, batch-reuse:1
@ 2248 train 5.0471 , allloss: 5.0784, dt: 1263.05ms, fracRes: 0.3618, norm(attn): 0.1768, norm(output): 0.1934, norm(x): 0.3134, norm(y): 0.9944, norm:1.7000, tok/sec: 103774.52, flops:108.93, batch-reuse:1
@ 2249 train 4.8650 , allloss: 4.8954, dt: 1275.33ms, fracRes: 0.3591, norm(attn): 0.1787, norm(output): 0.1934, norm(x): 0.3113, norm(y): 0.9944, norm:1.6330, tok/sec: 102775.02, flops:107.88, batch-reuse:1
@ 2250 train 5.0619 , allloss: 5.0934, dt: 1274.76ms, fracRes: 0.3624, norm(attn): 0.1748, norm(output): 0.1934, norm(x): 0.3140, norm(y): 0.9944, norm:1.4482, tok/sec: 102820.63, flops:107.92, batch-reuse:1
@ 2251 train 4.8998 , allloss: 4.9329, dt: 1282.91ms, fracRes: 0.3594, norm(attn): 0.1758, norm(output): 0.1953, norm(x): 0.3120, norm(y): 0.9943, norm:1.8065, tok/sec: 102167.61, flops:107.24, batch-reuse:1
@ 2252 train 4.9335 , allloss: 4.9654, dt: 1284.30ms, fracRes: 0.3614, norm(attn): 0.1758, norm(output): 0.1943, norm(x): 0.3135, norm(y): 0.9943, norm:1.7481, tok/sec: 102057.28, flops:107.12, batch-reuse:1
@ 2253 train 4.9306 , allloss: 4.9621, dt: 1274.00ms, fracRes: 0.3614, norm(attn): 0.1768, norm(output): 0.1914, norm(x): 0.3114, norm(y): 0.9943, norm:1.6156, tok/sec: 102882.42, flops:107.99, batch-reuse:1
@ 2254 train 5.0098 , allloss: 5.0403, dt: 1277.92ms, fracRes: 0.3610, norm(attn): 0.1758, norm(output): 0.1914, norm(x): 0.3108, norm(y): 0.9942, norm:1.7804, tok/sec: 102566.42, flops:107.66, batch-reuse:1
@ 2255 train 4.9808 , allloss: 5.0128, dt: 1267.25ms, fracRes: 0.3653, norm(attn): 0.1738, norm(output): 0.1934, norm(x): 0.3138, norm(y): 0.9944, norm:1.8234, tok/sec: 103430.28, flops:108.56, batch-reuse:1
@ 2256 train 5.0834 , allloss: 5.1152, dt: 1262.89ms, fracRes: 0.3648, norm(attn): 0.1738, norm(output): 0.1953, norm(x): 0.3157, norm(y): 0.9944, norm:1.6052, tok/sec: 103787.24, flops:108.94, batch-reuse:1
@ 2257 train 4.9975 , allloss: 5.0281, dt: 1282.22ms, fracRes: 0.3644, norm(attn): 0.1738, norm(output): 0.1943, norm(x): 0.3145, norm(y): 0.9943, norm:1.6797, tok/sec: 102222.74, flops:107.30, batch-reuse:1
@ 2258 train 4.9350 , allloss: 4.9664, dt: 1244.34ms, fracRes: 0.3634, norm(attn): 0.1758, norm(output): 0.1934, norm(x): 0.3144, norm(y): 0.9943, norm:1.4843, tok/sec: 105334.72, flops:110.56, batch-reuse:1
@ 2259 train 5.0508 , allloss: 5.0809, dt: 1272.78ms, fracRes: 0.3626, norm(attn): 0.1768, norm(output): 0.1953, norm(x): 0.3151, norm(y): 0.9943, norm:1.4540, tok/sec: 102980.86, flops:108.09, batch-reuse:1
@ 2260 train 4.9432 , allloss: 4.9729, dt: 1260.26ms, fracRes: 0.3638, norm(attn): 0.1758, norm(output): 0.1953, norm(x): 0.3143, norm(y): 0.9944, norm:1.7182, tok/sec: 104003.87, flops:109.17, batch-reuse:1
@ 2261 train 5.0112 , allloss: 5.0442, dt: 1283.13ms, fracRes: 0.3654, norm(attn): 0.1748, norm(output): 0.1943, norm(x): 0.3150, norm(y): 0.9944, norm:2.0004, tok/sec: 102150.35, flops:107.22, batch-reuse:1
@ 2262 train 4.9867 , allloss: 5.0170, dt: 1252.98ms, fracRes: 0.3654, norm(attn): 0.1738, norm(output): 0.1963, norm(x): 0.3153, norm(y): 0.9944, norm:1.6044, tok/sec: 104608.10, flops:109.80, batch-reuse:1
@ 2263 train 5.0409 , allloss: 5.0707, dt: 1260.56ms, fracRes: 0.3638, norm(attn): 0.1748, norm(output): 0.1973, norm(x): 0.3165, norm(y): 0.9943, norm:1.5164, tok/sec: 103978.98, flops:109.14, batch-reuse:1
@ 2264 train 5.0005 , allloss: 5.0313, dt: 1260.08ms, fracRes: 0.3663, norm(attn): 0.1729, norm(output): 0.1934, norm(x): 0.3174, norm(y): 0.9943, norm:1.5148, tok/sec: 104018.51, flops:109.18, batch-reuse:1
@ 2265 train 4.9616 , allloss: 4.9956, dt: 1245.92ms, fracRes: 0.3659, norm(attn): 0.1758, norm(output): 0.1934, norm(x): 0.3158, norm(y): 0.9943, norm:1.3117, tok/sec: 105200.72, flops:110.42, batch-reuse:1
@ 2266 train 4.8635 , allloss: 4.8956, dt: 1271.61ms, fracRes: 0.3642, norm(attn): 0.1777, norm(output): 0.1934, norm(x): 0.3127, norm(y): 0.9944, norm:1.7663, tok/sec: 103075.38, flops:108.19, batch-reuse:1
@ 2267 train 4.9903 , allloss: 5.0214, dt: 1253.76ms, fracRes: 0.3655, norm(attn): 0.1738, norm(output): 0.1943, norm(x): 0.3153, norm(y): 0.9946, norm:1.4897, tok/sec: 104542.83, flops:109.73, batch-reuse:1
@ 2268 train 5.0341 , allloss: 5.0647, dt: 1260.43ms, fracRes: 0.3649, norm(attn): 0.1758, norm(output): 0.1943, norm(x): 0.3156, norm(y): 0.9945, norm:1.5296, tok/sec: 103989.74, flops:109.15, batch-reuse:1
@ 2269 train 5.0336 , allloss: 5.0648, dt: 1274.54ms, fracRes: 0.3644, norm(attn): 0.1807, norm(output): 0.1934, norm(x): 0.3145, norm(y): 0.9943, norm:1.5433, tok/sec: 102838.91, flops:107.94, batch-reuse:1
@ 2270 train 5.0699 , allloss: 5.1009, dt: 1245.93ms, fracRes: 0.3683, norm(attn): 0.1748, norm(output): 0.1934, norm(x): 0.3178, norm(y): 0.9944, norm:1.5792, tok/sec: 105200.20, flops:110.42, batch-reuse:1
@ 2271 train 4.9982 , allloss: 5.0278, dt: 1251.65ms, fracRes: 0.3650, norm(attn): 0.1768, norm(output): 0.1963, norm(x): 0.3154, norm(y): 0.9944, norm:1.6520, tok/sec: 104718.96, flops:109.92, batch-reuse:1
@ 2272 train 4.8677 , allloss: 4.8971, dt: 1253.27ms, fracRes: 0.3623, norm(attn): 0.1787, norm(output): 0.1953, norm(x): 0.3136, norm(y): 0.9944, norm:1.4328, tok/sec: 104583.72, flops:109.77, batch-reuse:1
@ 2273 train 5.0265 , allloss: 5.0575, dt: 1275.25ms, fracRes: 0.3629, norm(attn): 0.1807, norm(output): 0.1953, norm(x): 0.3144, norm(y): 0.9943, norm:1.6596, tok/sec: 102781.57, flops:107.88, batch-reuse:1
@ 2274 train 4.9382 , allloss: 4.9712, dt: 1260.63ms, fracRes: 0.3657, norm(attn): 0.1777, norm(output): 0.1924, norm(x): 0.3143, norm(y): 0.9944, norm:1.9969, tok/sec: 103973.69, flops:109.13, batch-reuse:1
@ 2275 train 4.9743 , allloss: 5.0055, dt: 1275.64ms, fracRes: 0.3674, norm(attn): 0.1758, norm(output): 0.1914, norm(x): 0.3150, norm(y): 0.9944, norm:1.7129, tok/sec: 102749.97, flops:107.85, batch-reuse:1
@ 2276 train 4.9970 , allloss: 5.0265, dt: 1246.44ms, fracRes: 0.3638, norm(attn): 0.1758, norm(output): 0.1934, norm(x): 0.3136, norm(y): 0.9944, norm:1.6577, tok/sec: 105157.46, flops:110.38, batch-reuse:1
@ 2277 train 4.9506 , allloss: 4.9801, dt: 1246.25ms, fracRes: 0.3631, norm(attn): 0.1768, norm(output): 0.1953, norm(x): 0.3141, norm(y): 0.9944, norm:1.5479, tok/sec: 105173.07, flops:110.39, batch-reuse:1
@ 2278 train 5.0591 , allloss: 5.0912, dt: 1261.33ms, fracRes: 0.3656, norm(attn): 0.1846, norm(output): 0.1934, norm(x): 0.3163, norm(y): 0.9942, norm:1.6799, tok/sec: 103915.80, flops:109.07, batch-reuse:1
@ 2279 train 4.9335 , allloss: 4.9634, dt: 1281.88ms, fracRes: 0.3652, norm(attn): 0.1787, norm(output): 0.1924, norm(x): 0.3123, norm(y): 0.9944, norm:1.5295, tok/sec: 102249.90, flops:107.32, batch-reuse:1
@ 2280 train 4.9042 , allloss: 4.9337, dt: 1274.46ms, fracRes: 0.3667, norm(attn): 0.1768, norm(output): 0.1924, norm(x): 0.3127, norm(y): 0.9944, norm:1.4328, tok/sec: 102845.51, flops:107.95, batch-reuse:1
@ 2281 train 4.8425 , allloss: 4.8733, dt: 1268.25ms, fracRes: 0.3705, norm(attn): 0.1787, norm(output): 0.1943, norm(x): 0.3168, norm(y): 0.9944, norm:1.7300, tok/sec: 103349.10, flops:108.48, batch-reuse:1
@ 2282 train 5.0576 , allloss: 5.0890, dt: 1262.39ms, fracRes: 0.3676, norm(attn): 0.1777, norm(output): 0.1934, norm(x): 0.3143, norm(y): 0.9943, norm:1.8747, tok/sec: 103828.17, flops:108.98, batch-reuse:1
@ 2283 train 4.9263 , allloss: 4.9577, dt: 1282.72ms, fracRes: 0.3674, norm(attn): 0.1807, norm(output): 0.1934, norm(x): 0.3148, norm(y): 0.9943, norm:1.5816, tok/sec: 102182.78, flops:107.25, batch-reuse:1
@ 2284 train 4.8677 , allloss: 4.8984, dt: 1257.18ms, fracRes: 0.3668, norm(attn): 0.1797, norm(output): 0.1934, norm(x): 0.3143, norm(y): 0.9944, norm:1.8163, tok/sec: 104258.50, flops:109.43, batch-reuse:1
@ 2285 train 4.9035 , allloss: 4.9347, dt: 1273.06ms, fracRes: 0.3679, norm(attn): 0.1768, norm(output): 0.1924, norm(x): 0.3155, norm(y): 0.9944, norm:1.6646, tok/sec: 102958.01, flops:108.07, batch-reuse:1
@ 2286 train 4.9650 , allloss: 4.9957, dt: 1259.12ms, fracRes: 0.3660, norm(attn): 0.1787, norm(output): 0.1953, norm(x): 0.3161, norm(y): 0.9943, norm:1.6674, tok/sec: 104097.71, flops:109.26, batch-reuse:1
@ 2287 train 4.9476 , allloss: 4.9773, dt: 1244.20ms, fracRes: 0.3637, norm(attn): 0.1768, norm(output): 0.1973, norm(x): 0.3151, norm(y): 0.9942, norm:1.3207, tok/sec: 105346.39, flops:110.57, batch-reuse:1
@ 2288 train 5.0065 , allloss: 5.0354, dt: 1318.25ms, fracRes: 0.3645, norm(attn): 0.1719, norm(output): 0.1963, norm(x): 0.3160, norm(y): 0.9943, norm:1.6945, tok/sec: 99429.04, flops:104.36, batch-reuse:1
@ 2289 train 4.8971 , allloss: 4.9270, dt: 1268.86ms, fracRes: 0.3636, norm(attn): 0.1787, norm(output): 0.1982, norm(x): 0.3161, norm(y): 0.9944, norm:1.8264, tok/sec: 103298.96, flops:108.43, batch-reuse:1
@ 2290 train 4.8634 , allloss: 4.8949, dt: 1257.10ms, fracRes: 0.3608, norm(attn): 0.1787, norm(output): 0.1953, norm(x): 0.3146, norm(y): 0.9943, norm:1.5841, tok/sec: 104265.21, flops:109.44, batch-reuse:1
@ 2291 train 5.0245 , allloss: 5.0546, dt: 1260.40ms, fracRes: 0.3600, norm(attn): 0.1738, norm(output): 0.1953, norm(x): 0.3142, norm(y): 0.9943, norm:1.4183, tok/sec: 103992.69, flops:109.15, batch-reuse:1
@ 2292 train 4.9172 , allloss: 4.9489, dt: 1278.08ms, fracRes: 0.3584, norm(attn): 0.1855, norm(output): 0.1963, norm(x): 0.3149, norm(y): 0.9942, norm:1.6215, tok/sec: 102553.87, flops:107.64, batch-reuse:1
@ 2293 train 5.0090 , allloss: 5.0390, dt: 1271.34ms, fracRes: 0.3597, norm(attn): 0.1758, norm(output): 0.1992, norm(x): 0.3162, norm(y): 0.9944, norm:1.9841, tok/sec: 103097.35, flops:108.21, batch-reuse:1
@ 2294 train 4.9608 , allloss: 4.9898, dt: 1250.38ms, fracRes: 0.3622, norm(attn): 0.1729, norm(output): 0.1982, norm(x): 0.3182, norm(y): 0.9944, norm:1.3798, tok/sec: 104825.95, flops:110.03, batch-reuse:1
@ 2295 train 4.9053 , allloss: 4.9352, dt: 1268.23ms, fracRes: 0.3643, norm(attn): 0.1758, norm(output): 0.1973, norm(x): 0.3170, norm(y): 0.9944, norm:1.6749, tok/sec: 103350.15, flops:108.48, batch-reuse:1
@ 2296 train 4.8985 , allloss: 4.9305, dt: 1252.31ms, fracRes: 0.3685, norm(attn): 0.1748, norm(output): 0.1982, norm(x): 0.3212, norm(y): 0.9944, norm:1.4906, tok/sec: 104664.10, flops:109.86, batch-reuse:1
@ 2297 train 4.8971 , allloss: 4.9284, dt: 1290.30ms, fracRes: 0.3701, norm(attn): 0.1748, norm(output): 0.1973, norm(x): 0.3199, norm(y): 0.9944, norm:1.4528, tok/sec: 101582.55, flops:106.62, batch-reuse:1
@ 2298 train 4.9243 , allloss: 4.9561, dt: 1245.38ms, fracRes: 0.3728, norm(attn): 0.1738, norm(output): 0.1934, norm(x): 0.3207, norm(y): 0.9944, norm:1.4250, tok/sec: 105246.42, flops:110.47, batch-reuse:1
@ 2299 train 4.9323 , allloss: 4.9637, dt: 1260.08ms, fracRes: 0.3721, norm(attn): 0.1758, norm(output): 0.1953, norm(x): 0.3212, norm(y): 0.9944, norm:1.5257, tok/sec: 104018.80, flops:109.18, batch-reuse:1
@ 2300 train 4.8757 , allloss: 4.9077, dt: 1263.09ms, fracRes: 0.3689, norm(attn): 0.1797, norm(output): 0.1982, norm(x): 0.3207, norm(y): 0.9942, norm:1.5562, tok/sec: 103770.74, flops:108.92, batch-reuse:1
@ 2301 train 4.9375 , allloss: 4.9686, dt: 1261.12ms, fracRes: 0.3668, norm(attn): 0.1787, norm(output): 0.1982, norm(x): 0.3204, norm(y): 0.9942, norm:1.3948, tok/sec: 103932.63, flops:109.09, batch-reuse:1
@ 2302 train 4.8886 , allloss: 4.9203, dt: 1267.00ms, fracRes: 0.3678, norm(attn): 0.1758, norm(output): 0.1973, norm(x): 0.3205, norm(y): 0.9944, norm:1.6004, tok/sec: 103450.87, flops:108.59, batch-reuse:1
@ 2303 train 4.9207 , allloss: 4.9500, dt: 1273.45ms, fracRes: 0.3668, norm(attn): 0.1738, norm(output): 0.1982, norm(x): 0.3186, norm(y): 0.9945, norm:1.4630, tok/sec: 102927.01, flops:108.04, batch-reuse:1
@ 2304 train 4.9520 , allloss: 4.9835, dt: 1281.79ms, fracRes: 0.3663, norm(attn): 0.1777, norm(output): 0.1982, norm(x): 0.3190, norm(y): 0.9944, norm:1.5891, tok/sec: 102256.90, flops:107.33, batch-reuse:1
@ 2305 train 4.8948 , allloss: 4.9250, dt: 1271.09ms, fracRes: 0.3642, norm(attn): 0.1816, norm(output): 0.1982, norm(x): 0.3177, norm(y): 0.9942, norm:1.8722, tok/sec: 103117.66, flops:108.24, batch-reuse:1
@ 2306 train 4.9656 , allloss: 4.9971, dt: 1275.41ms, fracRes: 0.3678, norm(attn): 0.1748, norm(output): 0.1963, norm(x): 0.3187, norm(y): 0.9942, norm:1.5480, tok/sec: 102768.60, flops:107.87, batch-reuse:1
@ 2307 train 4.9791 , allloss: 5.0076, dt: 1277.04ms, fracRes: 0.3638, norm(attn): 0.1777, norm(output): 0.1973, norm(x): 0.3159, norm(y): 0.9942, norm:1.4225, tok/sec: 102637.04, flops:107.73, batch-reuse:1
@ 2308 train 4.9402 , allloss: 4.9705, dt: 1268.81ms, fracRes: 0.3625, norm(attn): 0.1807, norm(output): 0.1982, norm(x): 0.3173, norm(y): 0.9943, norm:1.6573, tok/sec: 103302.72, flops:108.43, batch-reuse:1
@ 2309 train 4.8446 , allloss: 4.8752, dt: 1271.89ms, fracRes: 0.3615, norm(attn): 0.1768, norm(output): 0.1973, norm(x): 0.3141, norm(y): 0.9944, norm:1.6019, tok/sec: 103052.89, flops:108.17, batch-reuse:1
@ 2310 train 5.0203 , allloss: 5.0492, dt: 1269.56ms, fracRes: 0.3644, norm(attn): 0.1768, norm(output): 0.1992, norm(x): 0.3188, norm(y): 0.9943, norm:1.8294, tok/sec: 103242.45, flops:108.37, batch-reuse:1
@ 2311 train 4.9549 , allloss: 4.9852, dt: 1278.13ms, fracRes: 0.3653, norm(attn): 0.1768, norm(output): 0.1982, norm(x): 0.3198, norm(y): 0.9942, norm:1.3563, tok/sec: 102549.78, flops:107.64, batch-reuse:1
@ 2312 train 4.9422 , allloss: 4.9716, dt: 1265.32ms, fracRes: 0.3637, norm(attn): 0.1787, norm(output): 0.1982, norm(x): 0.3195, norm(y): 0.9942, norm:1.5003, tok/sec: 103587.63, flops:108.73, batch-reuse:1
@ 2313 train 4.9659 , allloss: 4.9949, dt: 1275.06ms, fracRes: 0.3646, norm(attn): 0.1807, norm(output): 0.1982, norm(x): 0.3185, norm(y): 0.9943, norm:1.2639, tok/sec: 102797.04, flops:107.90, batch-reuse:1
@ 2314 train 4.9414 , allloss: 4.9712, dt: 1269.90ms, fracRes: 0.3649, norm(attn): 0.1797, norm(output): 0.1982, norm(x): 0.3198, norm(y): 0.9943, norm:1.6129, tok/sec: 103214.38, flops:108.34, batch-reuse:1
@ 2315 train 4.8878 , allloss: 4.9174, dt: 1262.58ms, fracRes: 0.3640, norm(attn): 0.1777, norm(output): 0.1973, norm(x): 0.3180, norm(y): 0.9942, norm:1.5387, tok/sec: 103812.58, flops:108.96, batch-reuse:1
@ 2316 train 4.9254 , allloss: 4.9537, dt: 1262.39ms, fracRes: 0.3593, norm(attn): 0.1797, norm(output): 0.1982, norm(x): 0.3121, norm(y): 0.9943, norm:1.6082, tok/sec: 103828.64, flops:108.98, batch-reuse:1
@ 2317 train 4.8768 , allloss: 4.9065, dt: 1303.47ms, fracRes: 0.3631, norm(attn): 0.1797, norm(output): 0.1982, norm(x): 0.3167, norm(y): 0.9943, norm:1.8681, tok/sec: 100556.14, flops:105.55, batch-reuse:1
@ 2318 train 4.9193 , allloss: 4.9497, dt: 1269.27ms, fracRes: 0.3653, norm(attn): 0.1777, norm(output): 0.1982, norm(x): 0.3187, norm(y): 0.9943, norm:1.3736, tok/sec: 103265.58, flops:108.39, batch-reuse:1
@ 2319 train 4.9412 , allloss: 4.9711, dt: 1267.15ms, fracRes: 0.3678, norm(attn): 0.1758, norm(output): 0.1973, norm(x): 0.3206, norm(y): 0.9943, norm:1.4947, tok/sec: 103438.49, flops:108.57, batch-reuse:1
@ 2320 train 4.8731 , allloss: 4.9034, dt: 1257.38ms, fracRes: 0.3671, norm(attn): 0.1797, norm(output): 0.1992, norm(x): 0.3206, norm(y): 0.9942, norm:1.5583, tok/sec: 104242.00, flops:109.42, batch-reuse:1
@ 2321 train 4.8199 , allloss: 4.8524, dt: 1240.63ms, fracRes: 0.3678, norm(attn): 0.1797, norm(output): 0.1992, norm(x): 0.3224, norm(y): 0.9943, norm:1.8478, tok/sec: 105649.94, flops:110.89, batch-reuse:1
@ 2322 train 4.9035 , allloss: 4.9325, dt: 1267.13ms, fracRes: 0.3659, norm(attn): 0.1729, norm(output): 0.1992, norm(x): 0.3211, norm(y): 0.9944, norm:1.5270, tok/sec: 103439.66, flops:108.57, batch-reuse:1
@ 2323 train 4.7799 , allloss: 4.8107, dt: 1263.78ms, fracRes: 0.3673, norm(attn): 0.1748, norm(output): 0.1992, norm(x): 0.3224, norm(y): 0.9944, norm:1.4837, tok/sec: 103714.54, flops:108.86, batch-reuse:1
@ 2324 train 4.9155 , allloss: 4.9444, dt: 1255.19ms, fracRes: 0.3643, norm(attn): 0.1797, norm(output): 0.1982, norm(x): 0.3193, norm(y): 0.9942, norm:1.4699, tok/sec: 104423.98, flops:109.61, batch-reuse:1
@ 2325 train 4.9524 , allloss: 4.9829, dt: 1273.85ms, fracRes: 0.3659, norm(attn): 0.1787, norm(output): 0.1992, norm(x): 0.3202, norm(y): 0.9943, norm:1.6735, tok/sec: 102894.15, flops:108.00, batch-reuse:1
@ 2326 train 4.8518 , allloss: 4.8829, dt: 1250.83ms, fracRes: 0.3668, norm(attn): 0.1787, norm(output): 0.1992, norm(x): 0.3212, norm(y): 0.9944, norm:1.4947, tok/sec: 104788.41, flops:109.99, batch-reuse:1
@ 2327 train 4.8608 , allloss: 4.8899, dt: 1272.02ms, fracRes: 0.3634, norm(attn): 0.1787, norm(output): 0.1982, norm(x): 0.3178, norm(y): 0.9944, norm:1.6145, tok/sec: 103042.45, flops:108.16, batch-reuse:1
@ 2328 train 4.8005 , allloss: 4.8324, dt: 1260.61ms, fracRes: 0.3652, norm(attn): 0.1797, norm(output): 0.1992, norm(x): 0.3200, norm(y): 0.9943, norm:1.5469, tok/sec: 103974.97, flops:109.14, batch-reuse:1
@ 2329 train 4.7112 , allloss: 4.7723, dt: 1265.94ms, fracRes: 0.3786, norm(attn): 0.1768, norm(output): 0.1982, norm(x): 0.3274, norm(y): 0.9942, norm:4.3004, tok/sec: 103537.08, flops:108.68, batch-reuse:1
@ 2330 train 4.9565 , allloss: 4.9858, dt: 1283.82ms, fracRes: 0.3651, norm(attn): 0.1797, norm(output): 0.2002, norm(x): 0.3219, norm(y): 0.9941, norm:2.3063, tok/sec: 102095.07, flops:107.16, batch-reuse:1
@ 2331 train 4.7881 , allloss: 4.8215, dt: 1287.95ms, fracRes: 0.3666, norm(attn): 0.1836, norm(output): 0.1992, norm(x): 0.3221, norm(y): 0.9941, norm:1.6209, tok/sec: 101767.75, flops:106.82, batch-reuse:1
@ 2332 train 4.9214 , allloss: 4.9555, dt: 1274.02ms, fracRes: 0.3672, norm(attn): 0.1777, norm(output): 0.1992, norm(x): 0.3209, norm(y): 0.9943, norm:2.1214, tok/sec: 102880.82, flops:107.99, batch-reuse:1
@ 2333 train 4.7794 , allloss: 4.8114, dt: 1287.24ms, fracRes: 0.3671, norm(attn): 0.1797, norm(output): 0.1982, norm(x): 0.3199, norm(y): 0.9944, norm:1.8437, tok/sec: 101824.11, flops:106.88, batch-reuse:1
@ 2334 train 4.7746 , allloss: 4.8061, dt: 1272.31ms, fracRes: 0.3650, norm(attn): 0.1787, norm(output): 0.1982, norm(x): 0.3172, norm(y): 0.9943, norm:1.7972, tok/sec: 103019.19, flops:108.13, batch-reuse:1
@ 2335 train 4.8919 , allloss: 4.9218, dt: 1277.32ms, fracRes: 0.3658, norm(attn): 0.1797, norm(output): 0.2012, norm(x): 0.3212, norm(y): 0.9942, norm:1.6251, tok/sec: 102615.24, flops:107.71, batch-reuse:1
@ 2336 train 4.9678 , allloss: 4.9980, dt: 1299.34ms, fracRes: 0.3660, norm(attn): 0.1816, norm(output): 0.2012, norm(x): 0.3229, norm(y): 0.9942, norm:1.4169, tok/sec: 100875.75, flops:105.88, batch-reuse:1
@ 2337 train 4.8305 , allloss: 4.8598, dt: 1287.82ms, fracRes: 0.3637, norm(attn): 0.1816, norm(output): 0.1992, norm(x): 0.3189, norm(y): 0.9942, norm:1.3681, tok/sec: 101777.91, flops:106.83, batch-reuse:1
@ 2338 train 4.8590 , allloss: 4.8889, dt: 1267.51ms, fracRes: 0.3683, norm(attn): 0.1768, norm(output): 0.1992, norm(x): 0.3229, norm(y): 0.9942, norm:1.5024, tok/sec: 103409.19, flops:108.54, batch-reuse:1
@ 2339 train 4.8183 , allloss: 4.8495, dt: 1245.64ms, fracRes: 0.3690, norm(attn): 0.1768, norm(output): 0.1982, norm(x): 0.3218, norm(y): 0.9943, norm:1.3929, tok/sec: 105224.22, flops:110.45, batch-reuse:1
@ 2340 train 4.8442 , allloss: 4.8747, dt: 1273.26ms, fracRes: 0.3661, norm(attn): 0.1816, norm(output): 0.1992, norm(x): 0.3199, norm(y): 0.9943, norm:1.7647, tok/sec: 102942.22, flops:108.05, batch-reuse:1
@ 2341 train 4.8614 , allloss: 4.8936, dt: 1255.93ms, fracRes: 0.3665, norm(attn): 0.1836, norm(output): 0.2002, norm(x): 0.3209, norm(y): 0.9942, norm:1.5844, tok/sec: 104362.37, flops:109.54, batch-reuse:1
@ 2342 train 4.7565 , allloss: 4.7879, dt: 1277.44ms, fracRes: 0.3676, norm(attn): 0.1836, norm(output): 0.1982, norm(x): 0.3212, norm(y): 0.9942, norm:1.6531, tok/sec: 102605.34, flops:107.70, batch-reuse:1
@ 2343 train 4.8552 , allloss: 4.8854, dt: 1262.75ms, fracRes: 0.3678, norm(attn): 0.1816, norm(output): 0.1992, norm(x): 0.3216, norm(y): 0.9942, norm:1.4926, tok/sec: 103798.58, flops:108.95, batch-reuse:1
@ 2344 train 4.9462 , allloss: 4.9759, dt: 1298.77ms, fracRes: 0.3699, norm(attn): 0.1777, norm(output): 0.1992, norm(x): 0.3259, norm(y): 0.9942, norm:1.4951, tok/sec: 100920.46, flops:105.93, batch-reuse:1
@ 2345 train 4.7786 , allloss: 4.8082, dt: 1276.83ms, fracRes: 0.3662, norm(attn): 0.1797, norm(output): 0.2012, norm(x): 0.3217, norm(y): 0.9943, norm:1.7158, tok/sec: 102654.00, flops:107.75, batch-reuse:1
@ 2346 train 4.9027 , allloss: 4.9335, dt: 1253.11ms, fracRes: 0.3691, norm(attn): 0.1777, norm(output): 0.2012, norm(x): 0.3249, norm(y): 0.9944, norm:1.6430, tok/sec: 104597.69, flops:109.79, batch-reuse:1
@ 2347 train 4.7789 , allloss: 4.8090, dt: 1259.69ms, fracRes: 0.3656, norm(attn): 0.1777, norm(output): 0.1982, norm(x): 0.3191, norm(y): 0.9943, norm:1.5607, tok/sec: 104050.95, flops:109.22, batch-reuse:1
@ 2348 train 4.8903 , allloss: 4.9222, dt: 1274.05ms, fracRes: 0.3657, norm(attn): 0.1807, norm(output): 0.2002, norm(x): 0.3216, norm(y): 0.9942, norm:1.7697, tok/sec: 102878.49, flops:107.98, batch-reuse:1
@ 2349 train 4.8953 , allloss: 4.9244, dt: 1275.65ms, fracRes: 0.3639, norm(attn): 0.1807, norm(output): 0.1982, norm(x): 0.3208, norm(y): 0.9941, norm:1.4741, tok/sec: 102749.20, flops:107.85, batch-reuse:1
@ 2350 train 4.7791 , allloss: 4.8093, dt: 1276.02ms, fracRes: 0.3649, norm(attn): 0.1787, norm(output): 0.1992, norm(x): 0.3201, norm(y): 0.9943, norm:1.5294, tok/sec: 102719.24, flops:107.82, batch-reuse:1
@ 2351 train 4.9415 , allloss: 4.9720, dt: 1256.15ms, fracRes: 0.3674, norm(attn): 0.1787, norm(output): 0.1992, norm(x): 0.3221, norm(y): 0.9943, norm:1.5420, tok/sec: 104344.32, flops:109.52, batch-reuse:1
@ 2352 train 4.8702 , allloss: 4.9007, dt: 1275.91ms, fracRes: 0.3661, norm(attn): 0.1816, norm(output): 0.2012, norm(x): 0.3229, norm(y): 0.9943, norm:1.5847, tok/sec: 102728.56, flops:107.83, batch-reuse:1
@ 2353 train 4.8621 , allloss: 4.8924, dt: 1282.07ms, fracRes: 0.3696, norm(attn): 0.1787, norm(output): 0.2002, norm(x): 0.3250, norm(y): 0.9943, norm:1.4534, tok/sec: 102234.62, flops:107.31, batch-reuse:1
@ 2354 train 4.8924 , allloss: 4.9238, dt: 1259.37ms, fracRes: 0.3692, norm(attn): 0.1797, norm(output): 0.1982, norm(x): 0.3230, norm(y): 0.9942, norm:1.6514, tok/sec: 104077.13, flops:109.24, batch-reuse:1
@ 2355 train 4.8442 , allloss: 4.8753, dt: 1279.41ms, fracRes: 0.3678, norm(attn): 0.1816, norm(output): 0.1982, norm(x): 0.3213, norm(y): 0.9941, norm:1.3321, tok/sec: 102447.42, flops:107.53, batch-reuse:1
@ 2356 train 4.9492 , allloss: 4.9777, dt: 1281.40ms, fracRes: 0.3680, norm(attn): 0.1777, norm(output): 0.1982, norm(x): 0.3210, norm(y): 0.9943, norm:1.5830, tok/sec: 102288.45, flops:107.37, batch-reuse:1
@ 2357 train 4.9162 , allloss: 4.9457, dt: 1271.16ms, fracRes: 0.3694, norm(attn): 0.1797, norm(output): 0.1992, norm(x): 0.3239, norm(y): 0.9943, norm:1.6981, tok/sec: 103111.99, flops:108.23, batch-reuse:1
@ 2358 train 4.9141 , allloss: 4.9435, dt: 1259.37ms, fracRes: 0.3703, norm(attn): 0.1787, norm(output): 0.2002, norm(x): 0.3258, norm(y): 0.9943, norm:1.5198, tok/sec: 104077.59, flops:109.24, batch-reuse:1
@ 2359 train 4.8568 , allloss: 4.8868, dt: 1277.74ms, fracRes: 0.3690, norm(attn): 0.1777, norm(output): 0.1992, norm(x): 0.3237, norm(y): 0.9942, norm:1.7393, tok/sec: 102580.78, flops:107.67, batch-reuse:1
@ 2360 train 4.8649 , allloss: 4.8955, dt: 1271.18ms, fracRes: 0.3651, norm(attn): 0.1816, norm(output): 0.1992, norm(x): 0.3195, norm(y): 0.9941, norm:1.3527, tok/sec: 103110.39, flops:108.23, batch-reuse:1
@ 2361 train 4.8583 , allloss: 4.8869, dt: 1272.04ms, fracRes: 0.3669, norm(attn): 0.1816, norm(output): 0.1992, norm(x): 0.3218, norm(y): 0.9942, norm:1.4139, tok/sec: 103040.72, flops:108.15, batch-reuse:1
@ 2362 train 4.8590 , allloss: 4.8883, dt: 1279.70ms, fracRes: 0.3686, norm(attn): 0.1797, norm(output): 0.1992, norm(x): 0.3232, norm(y): 0.9943, norm:1.4276, tok/sec: 102423.79, flops:107.51, batch-reuse:1
@ 2363 train 4.9144 , allloss: 4.9435, dt: 1287.81ms, fracRes: 0.3668, norm(attn): 0.1816, norm(output): 0.2002, norm(x): 0.3234, norm(y): 0.9943, norm:1.3952, tok/sec: 101779.06, flops:106.83, batch-reuse:1
@ 2364 train 4.9376 , allloss: 4.9684, dt: 1268.37ms, fracRes: 0.3694, norm(attn): 0.1787, norm(output): 0.2012, norm(x): 0.3263, norm(y): 0.9943, norm:1.6814, tok/sec: 103338.72, flops:108.47, batch-reuse:1
@ 2365 train 4.8781 , allloss: 4.9096, dt: 1261.12ms, fracRes: 0.3689, norm(attn): 0.1777, norm(output): 0.2012, norm(x): 0.3255, norm(y): 0.9943, norm:1.6038, tok/sec: 103933.16, flops:109.09, batch-reuse:1
@ 2366 train 4.8889 , allloss: 4.9197, dt: 1267.84ms, fracRes: 0.3680, norm(attn): 0.1797, norm(output): 0.2002, norm(x): 0.3230, norm(y): 0.9942, norm:1.5072, tok/sec: 103382.51, flops:108.51, batch-reuse:1
@ 2367 train 4.7912 , allloss: 4.8204, dt: 1300.24ms, fracRes: 0.3671, norm(attn): 0.1846, norm(output): 0.2002, norm(x): 0.3213, norm(y): 0.9941, norm:1.5838, tok/sec: 100805.85, flops:105.81, batch-reuse:1
@ 2368 train 4.7449 , allloss: 4.7744, dt: 1263.97ms, fracRes: 0.3722, norm(attn): 0.1729, norm(output): 0.2002, norm(x): 0.3236, norm(y): 0.9943, norm:1.6395, tok/sec: 103698.81, flops:108.85, batch-reuse:1
@ 2369 train 4.7712 , allloss: 4.8006, dt: 1265.27ms, fracRes: 0.3698, norm(attn): 0.1758, norm(output): 0.1992, norm(x): 0.3224, norm(y): 0.9944, norm:1.7026, tok/sec: 103591.87, flops:108.73, batch-reuse:1
@ 2370 train 4.8261 , allloss: 4.8574, dt: 1267.50ms, fracRes: 0.3717, norm(attn): 0.1758, norm(output): 0.2021, norm(x): 0.3263, norm(y): 0.9943, norm:1.8611, tok/sec: 103409.54, flops:108.54, batch-reuse:1
@ 2371 train 4.6469 , allloss: 4.6773, dt: 1264.38ms, fracRes: 0.3696, norm(attn): 0.1758, norm(output): 0.1992, norm(x): 0.3230, norm(y): 0.9943, norm:1.6493, tok/sec: 103664.88, flops:108.81, batch-reuse:1
@ 2372 train 4.7054 , allloss: 4.7354, dt: 1262.82ms, fracRes: 0.3695, norm(attn): 0.1777, norm(output): 0.2002, norm(x): 0.3222, norm(y): 0.9942, norm:1.7175, tok/sec: 103792.88, flops:108.94, batch-reuse:1
@ 2373 train 4.7563 , allloss: 4.7862, dt: 1264.50ms, fracRes: 0.3691, norm(attn): 0.1816, norm(output): 0.2002, norm(x): 0.3238, norm(y): 0.9941, norm:1.5468, tok/sec: 103655.23, flops:108.80, batch-reuse:1
@ 2374 train 4.7186 , allloss: 4.7482, dt: 1290.58ms, fracRes: 0.3714, norm(attn): 0.1777, norm(output): 0.2002, norm(x): 0.3248, norm(y): 0.9942, norm:1.4569, tok/sec: 101560.55, flops:106.60, batch-reuse:1
@ 2375 train 4.7477 , allloss: 4.7772, dt: 1256.77ms, fracRes: 0.3710, norm(attn): 0.1777, norm(output): 0.1992, norm(x): 0.3230, norm(y): 0.9943, norm:1.4548, tok/sec: 104293.08, flops:109.47, batch-reuse:1
@ 2376 train 4.7792 , allloss: 4.8081, dt: 1273.52ms, fracRes: 0.3716, norm(attn): 0.1787, norm(output): 0.2012, norm(x): 0.3250, norm(y): 0.9943, norm:1.7244, tok/sec: 102920.77, flops:108.03, batch-reuse:1
@ 2377 train 4.7603 , allloss: 4.7899, dt: 1268.81ms, fracRes: 0.3725, norm(attn): 0.1807, norm(output): 0.2012, norm(x): 0.3264, norm(y): 0.9942, norm:1.3497, tok/sec: 103303.15, flops:108.43, batch-reuse:1
@ 2378 train 4.7509 , allloss: 4.7823, dt: 1239.75ms, fracRes: 0.3717, norm(attn): 0.1807, norm(output): 0.1992, norm(x): 0.3256, norm(y): 0.9942, norm:1.8651, tok/sec: 105724.61, flops:110.97, batch-reuse:1
@ 2379 train 4.6903 , allloss: 4.7220, dt: 1280.88ms, fracRes: 0.3703, norm(attn): 0.1826, norm(output): 0.1982, norm(x): 0.3228, norm(y): 0.9941, norm:1.2989, tok/sec: 102329.35, flops:107.41, batch-reuse:1
@ 2380 train 4.9677 , allloss: 4.9992, dt: 1263.05ms, fracRes: 0.3740, norm(attn): 0.1797, norm(output): 0.2002, norm(x): 0.3268, norm(y): 0.9941, norm:2.3657, tok/sec: 103774.15, flops:108.92, batch-reuse:1
@ 2381 train 4.8171 , allloss: 4.8464, dt: 1264.86ms, fracRes: 0.3696, norm(attn): 0.1797, norm(output): 0.2021, norm(x): 0.3236, norm(y): 0.9942, norm:1.7542, tok/sec: 103625.55, flops:108.77, batch-reuse:1
@ 2382 train 4.7797 , allloss: 4.8104, dt: 1288.11ms, fracRes: 0.3701, norm(attn): 0.1816, norm(output): 0.2012, norm(x): 0.3239, norm(y): 0.9942, norm:1.7110, tok/sec: 101755.62, flops:106.81, batch-reuse:1
@ 2383 train 4.7540 , allloss: 4.7843, dt: 1273.22ms, fracRes: 0.3688, norm(attn): 0.1816, norm(output): 0.2002, norm(x): 0.3232, norm(y): 0.9942, norm:1.5302, tok/sec: 102945.50, flops:108.05, batch-reuse:1
@ 2384 train 4.7750 , allloss: 4.8051, dt: 1278.49ms, fracRes: 0.3674, norm(attn): 0.1807, norm(output): 0.2012, norm(x): 0.3237, norm(y): 0.9942, norm:1.3447, tok/sec: 102520.86, flops:107.61, batch-reuse:1
@ 2385 train 4.7508 , allloss: 4.7811, dt: 1254.40ms, fracRes: 0.3656, norm(attn): 0.1836, norm(output): 0.2012, norm(x): 0.3225, norm(y): 0.9942, norm:1.7263, tok/sec: 104489.97, flops:109.68, batch-reuse:1
@ 2386 train 4.6954 , allloss: 4.7262, dt: 1258.03ms, fracRes: 0.3659, norm(attn): 0.1816, norm(output): 0.2012, norm(x): 0.3231, norm(y): 0.9942, norm:1.5074, tok/sec: 104188.24, flops:109.36, batch-reuse:1
@ 2387 train 4.7370 , allloss: 4.7679, dt: 1246.62ms, fracRes: 0.3640, norm(attn): 0.1816, norm(output): 0.2012, norm(x): 0.3227, norm(y): 0.9942, norm:1.5025, tok/sec: 105142.19, flops:110.36, batch-reuse:1
@ 2388 train 4.7797 , allloss: 4.8099, dt: 1262.36ms, fracRes: 0.3617, norm(attn): 0.1836, norm(output): 0.2002, norm(x): 0.3212, norm(y): 0.9941, norm:1.5635, tok/sec: 103830.52, flops:108.98, batch-reuse:1
@ 2389 train 4.7057 , allloss: 4.7374, dt: 1272.69ms, fracRes: 0.3622, norm(attn): 0.1846, norm(output): 0.2002, norm(x): 0.3209, norm(y): 0.9942, norm:1.4033, tok/sec: 102987.92, flops:108.10, batch-reuse:1
@ 2390 train 4.7914 , allloss: 4.8243, dt: 1284.84ms, fracRes: 0.3664, norm(attn): 0.1846, norm(output): 0.2012, norm(x): 0.3260, norm(y): 0.9942, norm:1.5829, tok/sec: 102014.61, flops:107.08, batch-reuse:1
@ 2391 train 4.8508 , allloss: 4.8816, dt: 1284.34ms, fracRes: 0.3649, norm(attn): 0.1855, norm(output): 0.2012, norm(x): 0.3245, norm(y): 0.9941, norm:1.6492, tok/sec: 102053.92, flops:107.12, batch-reuse:1
@ 2392 train 4.7804 , allloss: 4.8096, dt: 1299.16ms, fracRes: 0.3673, norm(attn): 0.1816, norm(output): 0.2002, norm(x): 0.3250, norm(y): 0.9942, norm:1.4745, tok/sec: 100889.73, flops:105.90, batch-reuse:1
@ 2393 train 4.8967 , allloss: 4.9283, dt: 1259.99ms, fracRes: 0.3755, norm(attn): 0.1768, norm(output): 0.2021, norm(x): 0.3314, norm(y): 0.9942, norm:1.5985, tok/sec: 104026.26, flops:109.19, batch-reuse:1
@ 2394 train 4.7912 , allloss: 4.8216, dt: 1262.57ms, fracRes: 0.3718, norm(attn): 0.1816, norm(output): 0.2012, norm(x): 0.3271, norm(y): 0.9942, norm:1.6731, tok/sec: 103813.95, flops:108.97, batch-reuse:1
@ 2395 train 4.7574 , allloss: 4.7886, dt: 1271.18ms, fracRes: 0.3763, norm(attn): 0.1865, norm(output): 0.2021, norm(x): 0.3301, norm(y): 0.9941, norm:1.7479, tok/sec: 103110.70, flops:108.23, batch-reuse:1
@ 2396 train 4.7523 , allloss: 4.7825, dt: 1278.71ms, fracRes: 0.3781, norm(attn): 0.1729, norm(output): 0.2021, norm(x): 0.3309, norm(y): 0.9944, norm:1.6201, tok/sec: 102503.35, flops:107.59, batch-reuse:1
@ 2397 train 4.7048 , allloss: 4.7357, dt: 1256.44ms, fracRes: 0.3757, norm(attn): 0.1758, norm(output): 0.2021, norm(x): 0.3298, norm(y): 0.9944, norm:1.7638, tok/sec: 104319.93, flops:109.50, batch-reuse:1
@ 2398 train 4.8055 , allloss: 4.8370, dt: 1272.26ms, fracRes: 0.3763, norm(attn): 0.1777, norm(output): 0.2021, norm(x): 0.3316, norm(y): 0.9943, norm:1.8473, tok/sec: 103023.36, flops:108.14, batch-reuse:1
@ 2399 train 4.7222 , allloss: 4.7518, dt: 1259.57ms, fracRes: 0.3722, norm(attn): 0.1797, norm(output): 0.2021, norm(x): 0.3286, norm(y): 0.9942, norm:1.5198, tok/sec: 104060.51, flops:109.23, batch-reuse:1
@ 2400 train 4.7182 , allloss: 4.7496, dt: 1260.95ms, fracRes: 0.3733, norm(attn): 0.1768, norm(output): 0.2021, norm(x): 0.3301, norm(y): 0.9943, norm:1.6657, tok/sec: 103946.88, flops:109.11, batch-reuse:1
@ 2401 train 4.8147 , allloss: 4.8446, dt: 1259.70ms, fracRes: 0.3717, norm(attn): 0.1768, norm(output): 0.2021, norm(x): 0.3286, norm(y): 0.9943, norm:1.4672, tok/sec: 104049.91, flops:109.21, batch-reuse:1
@ 2402 train 4.7903 , allloss: 4.8216, dt: 1282.60ms, fracRes: 0.3709, norm(attn): 0.1816, norm(output): 0.2021, norm(x): 0.3318, norm(y): 0.9942, norm:1.5015, tok/sec: 102192.03, flops:107.26, batch-reuse:1
@ 2403 train 4.6758 , allloss: 4.7077, dt: 1282.10ms, fracRes: 0.3699, norm(attn): 0.1807, norm(output): 0.2031, norm(x): 0.3313, norm(y): 0.9943, norm:1.7323, tok/sec: 102232.53, flops:107.31, batch-reuse:1
@ 2404 train 4.6733 , allloss: 4.7040, dt: 1261.56ms, fracRes: 0.3655, norm(attn): 0.1807, norm(output): 0.2021, norm(x): 0.3274, norm(y): 0.9942, norm:1.5008, tok/sec: 103896.59, flops:109.05, batch-reuse:1
@ 2405 train 4.7730 , allloss: 4.8033, dt: 1280.38ms, fracRes: 0.3646, norm(attn): 0.1826, norm(output): 0.2021, norm(x): 0.3278, norm(y): 0.9941, norm:1.7102, tok/sec: 102369.93, flops:107.45, batch-reuse:1
@ 2406 train 4.6966 , allloss: 4.7277, dt: 1279.44ms, fracRes: 0.3637, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3260, norm(y): 0.9941, norm:1.5350, tok/sec: 102445.19, flops:107.53, batch-reuse:1
@ 2407 train 4.6835 , allloss: 4.7130, dt: 1287.17ms, fracRes: 0.3645, norm(attn): 0.1797, norm(output): 0.2021, norm(x): 0.3269, norm(y): 0.9942, norm:1.6503, tok/sec: 101829.32, flops:106.88, batch-reuse:1
@ 2408 train 4.7333 , allloss: 4.7623, dt: 1304.32ms, fracRes: 0.3657, norm(attn): 0.1797, norm(output): 0.2021, norm(x): 0.3276, norm(y): 0.9943, norm:1.6337, tok/sec: 100490.32, flops:105.48, batch-reuse:1
@ 2409 train 4.7297 , allloss: 4.7592, dt: 1263.04ms, fracRes: 0.3662, norm(attn): 0.1826, norm(output): 0.2021, norm(x): 0.3271, norm(y): 0.9942, norm:1.3321, tok/sec: 103775.05, flops:108.93, batch-reuse:1
@ 2410 train 4.6952 , allloss: 4.7245, dt: 1260.29ms, fracRes: 0.3683, norm(attn): 0.1797, norm(output): 0.2021, norm(x): 0.3281, norm(y): 0.9942, norm:1.4408, tok/sec: 104001.25, flops:109.16, batch-reuse:1
@ 2411 train 4.7187 , allloss: 4.7473, dt: 1272.56ms, fracRes: 0.3649, norm(attn): 0.1816, norm(output): 0.2021, norm(x): 0.3233, norm(y): 0.9941, norm:1.6091, tok/sec: 102998.46, flops:108.11, batch-reuse:1
@ 2412 train 4.7796 , allloss: 4.8092, dt: 1270.67ms, fracRes: 0.3697, norm(attn): 0.1826, norm(output): 0.2021, norm(x): 0.3292, norm(y): 0.9941, norm:1.6282, tok/sec: 103152.27, flops:108.27, batch-reuse:1
@ 2413 train 4.8175 , allloss: 4.8492, dt: 1253.14ms, fracRes: 0.3703, norm(attn): 0.1816, norm(output): 0.2021, norm(x): 0.3298, norm(y): 0.9941, norm:1.7894, tok/sec: 104594.70, flops:109.79, batch-reuse:1
@ 2414 train 4.8160 , allloss: 4.8471, dt: 1259.20ms, fracRes: 0.3721, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3317, norm(y): 0.9942, norm:1.6608, tok/sec: 104091.64, flops:109.26, batch-reuse:1
@ 2415 train 4.8876 , allloss: 4.9177, dt: 1277.02ms, fracRes: 0.3690, norm(attn): 0.1836, norm(output): 0.2021, norm(x): 0.3295, norm(y): 0.9942, norm:1.5383, tok/sec: 102638.61, flops:107.73, batch-reuse:1
@ 2416 train 4.8404 , allloss: 4.8691, dt: 1276.59ms, fracRes: 0.3720, norm(attn): 0.1797, norm(output): 0.2031, norm(x): 0.3299, norm(y): 0.9943, norm:1.7081, tok/sec: 102673.65, flops:107.77, batch-reuse:1
@ 2417 train 4.8611 , allloss: 4.8902, dt: 1268.93ms, fracRes: 0.3683, norm(attn): 0.1855, norm(output): 0.2021, norm(x): 0.3259, norm(y): 0.9940, norm:1.3536, tok/sec: 103293.10, flops:108.42, batch-reuse:1
@ 2418 train 4.9108 , allloss: 4.9423, dt: 1266.92ms, fracRes: 0.3729, norm(attn): 0.1855, norm(output): 0.2021, norm(x): 0.3297, norm(y): 0.9940, norm:1.6834, tok/sec: 103457.55, flops:108.59, batch-reuse:1
@ 2419 train 4.9556 , allloss: 4.9853, dt: 1271.73ms, fracRes: 0.3772, norm(attn): 0.1807, norm(output): 0.2031, norm(x): 0.3327, norm(y): 0.9942, norm:1.8095, tok/sec: 103065.89, flops:108.18, batch-reuse:1
@ 2420 train 4.9046 , allloss: 4.9343, dt: 1264.14ms, fracRes: 0.3751, norm(attn): 0.1816, norm(output): 0.2021, norm(x): 0.3316, norm(y): 0.9943, norm:1.6412, tok/sec: 103685.00, flops:108.83, batch-reuse:1
@ 2421 train 4.9023 , allloss: 4.9337, dt: 1261.93ms, fracRes: 0.3760, norm(attn): 0.1797, norm(output): 0.2021, norm(x): 0.3313, norm(y): 0.9943, norm:1.7845, tok/sec: 103866.44, flops:109.02, batch-reuse:1
@ 2422 train 4.9486 , allloss: 4.9800, dt: 1274.30ms, fracRes: 0.3738, norm(attn): 0.1865, norm(output): 0.2021, norm(x): 0.3309, norm(y): 0.9942, norm:1.6119, tok/sec: 102858.19, flops:107.96, batch-reuse:1
@ 2423 train 4.9913 , allloss: 5.0216, dt: 1243.43ms, fracRes: 0.3725, norm(attn): 0.1826, norm(output): 0.2021, norm(x): 0.3288, norm(y): 0.9941, norm:1.5999, tok/sec: 105411.89, flops:110.64, batch-reuse:1
@ 2424 train 4.8826 , allloss: 4.9106, dt: 1284.19ms, fracRes: 0.3702, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3298, norm(y): 0.9942, norm:1.8650, tok/sec: 102065.60, flops:107.13, batch-reuse:1
@ 2425 train 4.8311 , allloss: 4.8625, dt: 1262.51ms, fracRes: 0.3713, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3310, norm(y): 0.9941, norm:1.6087, tok/sec: 103818.54, flops:108.97, batch-reuse:1
@ 2426 train 4.8634 , allloss: 4.8931, dt: 1263.10ms, fracRes: 0.3693, norm(attn): 0.1855, norm(output): 0.2031, norm(x): 0.3311, norm(y): 0.9941, norm:1.7061, tok/sec: 103769.80, flops:108.92, batch-reuse:1
@ 2427 train 5.0006 , allloss: 5.0297, dt: 1258.36ms, fracRes: 0.3686, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3290, norm(y): 0.9941, norm:1.7161, tok/sec: 104161.08, flops:109.33, batch-reuse:1
@ 2428 train 4.9151 , allloss: 4.9454, dt: 1266.29ms, fracRes: 0.3719, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3325, norm(y): 0.9941, norm:1.3838, tok/sec: 103508.78, flops:108.65, batch-reuse:1
@ 2429 train 4.8755 , allloss: 4.9045, dt: 1244.56ms, fracRes: 0.3706, norm(attn): 0.1846, norm(output): 0.2021, norm(x): 0.3306, norm(y): 0.9941, norm:1.6582, tok/sec: 105316.04, flops:110.54, batch-reuse:1
@ 2430 train 4.8959 , allloss: 4.9252, dt: 1259.58ms, fracRes: 0.3703, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3294, norm(y): 0.9942, norm:1.5539, tok/sec: 104060.11, flops:109.22, batch-reuse:1
@ 2431 train 4.8965 , allloss: 4.9253, dt: 1263.92ms, fracRes: 0.3716, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3324, norm(y): 0.9941, norm:1.5826, tok/sec: 103702.72, flops:108.85, batch-reuse:1
@ 2432 train 4.7929 , allloss: 4.8234, dt: 1267.04ms, fracRes: 0.3741, norm(attn): 0.1826, norm(output): 0.2031, norm(x): 0.3316, norm(y): 0.9941, norm:1.5888, tok/sec: 103447.48, flops:108.58, batch-reuse:1
@ 2433 train 4.8730 , allloss: 4.9013, dt: 1252.98ms, fracRes: 0.3741, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3312, norm(y): 0.9940, norm:1.7909, tok/sec: 104608.21, flops:109.80, batch-reuse:1
@ 2434 train 4.9490 , allloss: 4.9802, dt: 1270.72ms, fracRes: 0.3760, norm(attn): 0.1855, norm(output): 0.2031, norm(x): 0.3351, norm(y): 0.9940, norm:1.5396, tok/sec: 103147.55, flops:108.27, batch-reuse:1
@ 2435 train 4.9049 , allloss: 4.9331, dt: 1260.86ms, fracRes: 0.3725, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3316, norm(y): 0.9941, norm:1.6204, tok/sec: 103954.25, flops:109.11, batch-reuse:1
@ 2436 train 4.9167 , allloss: 4.9464, dt: 1272.21ms, fracRes: 0.3777, norm(attn): 0.1826, norm(output): 0.2031, norm(x): 0.3365, norm(y): 0.9942, norm:1.6694, tok/sec: 103027.33, flops:108.14, batch-reuse:1
@ 2437 train 4.8420 , allloss: 4.8730, dt: 1266.94ms, fracRes: 0.3777, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3344, norm(y): 0.9942, norm:1.7283, tok/sec: 103455.42, flops:108.59, batch-reuse:1
@ 2438 train 4.8539 , allloss: 4.8832, dt: 1270.88ms, fracRes: 0.3740, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3309, norm(y): 0.9941, norm:1.6010, tok/sec: 103134.66, flops:108.25, batch-reuse:1
@ 2439 train 4.8982 , allloss: 4.9286, dt: 1265.91ms, fracRes: 0.3731, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3307, norm(y): 0.9941, norm:1.5920, tok/sec: 103539.89, flops:108.68, batch-reuse:1
@ 2440 train 4.9533 , allloss: 4.9821, dt: 1262.51ms, fracRes: 0.3736, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3343, norm(y): 0.9941, norm:2.0936, tok/sec: 103818.60, flops:108.97, batch-reuse:1
@ 2441 train 4.8168 , allloss: 4.8457, dt: 1254.06ms, fracRes: 0.3730, norm(attn): 0.1865, norm(output): 0.2041, norm(x): 0.3323, norm(y): 0.9941, norm:1.7137, tok/sec: 104518.20, flops:109.71, batch-reuse:1
@ 2442 train 4.8482 , allloss: 4.8776, dt: 1284.53ms, fracRes: 0.3756, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3332, norm(y): 0.9942, norm:1.4537, tok/sec: 102039.17, flops:107.10, batch-reuse:1
@ 2443 train 4.9705 , allloss: 5.0015, dt: 1269.49ms, fracRes: 0.3771, norm(attn): 0.1816, norm(output): 0.2021, norm(x): 0.3334, norm(y): 0.9941, norm:1.7632, tok/sec: 103247.39, flops:108.37, batch-reuse:1
@ 2444 train 4.8322 , allloss: 4.8608, dt: 1251.94ms, fracRes: 0.3761, norm(attn): 0.1865, norm(output): 0.2031, norm(x): 0.3318, norm(y): 0.9941, norm:1.5013, tok/sec: 104695.43, flops:109.89, batch-reuse:1
@ 2445 train 4.7988 , allloss: 4.8287, dt: 1276.44ms, fracRes: 0.3770, norm(attn): 0.1826, norm(output): 0.2021, norm(x): 0.3327, norm(y): 0.9941, norm:1.6497, tok/sec: 102685.49, flops:107.78, batch-reuse:1
@ 2446 train 5.0067 , allloss: 5.0353, dt: 1255.71ms, fracRes: 0.3757, norm(attn): 0.1797, norm(output): 0.2031, norm(x): 0.3324, norm(y): 0.9942, norm:1.5446, tok/sec: 104381.06, flops:109.56, batch-reuse:1
@ 2447 train 4.9252 , allloss: 4.9550, dt: 1287.18ms, fracRes: 0.3739, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3313, norm(y): 0.9942, norm:1.8564, tok/sec: 101828.85, flops:106.88, batch-reuse:1
@ 2448 train 4.8828 , allloss: 4.9124, dt: 1264.55ms, fracRes: 0.3746, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3327, norm(y): 0.9942, norm:1.7023, tok/sec: 103651.08, flops:108.80, batch-reuse:1
@ 2449 train 4.8883 , allloss: 4.9174, dt: 1280.72ms, fracRes: 0.3748, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3338, norm(y): 0.9941, norm:1.6416, tok/sec: 102342.51, flops:107.42, batch-reuse:1
@ 2450 train 4.8501 , allloss: 4.8791, dt: 1295.93ms, fracRes: 0.3742, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3339, norm(y): 0.9941, norm:1.4288, tok/sec: 101141.64, flops:106.16, batch-reuse:1
@ 2451 train 4.9766 , allloss: 5.0067, dt: 1282.58ms, fracRes: 0.3741, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3359, norm(y): 0.9942, norm:1.6701, tok/sec: 102193.72, flops:107.27, batch-reuse:1
@ 2452 train 4.8481 , allloss: 4.8775, dt: 1255.58ms, fracRes: 0.3770, norm(attn): 0.1826, norm(output): 0.2041, norm(x): 0.3382, norm(y): 0.9942, norm:1.8868, tok/sec: 104391.80, flops:109.57, batch-reuse:1
@ 2453 train 4.8071 , allloss: 4.8354, dt: 1275.65ms, fracRes: 0.3719, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3324, norm(y): 0.9941, norm:1.6192, tok/sec: 102749.01, flops:107.85, batch-reuse:1
@ 2454 train 4.8067 , allloss: 4.8365, dt: 1280.23ms, fracRes: 0.3740, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3330, norm(y): 0.9940, norm:1.6166, tok/sec: 102381.71, flops:107.46, batch-reuse:1
@ 2455 train 4.9154 , allloss: 4.9441, dt: 1262.51ms, fracRes: 0.3731, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3342, norm(y): 0.9940, norm:1.6229, tok/sec: 103818.87, flops:108.97, batch-reuse:1
@ 2456 train 4.8633 , allloss: 4.8917, dt: 1277.06ms, fracRes: 0.3721, norm(attn): 0.1865, norm(output): 0.2041, norm(x): 0.3342, norm(y): 0.9941, norm:1.4076, tok/sec: 102635.43, flops:107.73, batch-reuse:1
@ 2457 train 5.0402 , allloss: 5.0688, dt: 1278.46ms, fracRes: 0.3761, norm(attn): 0.1797, norm(output): 0.2031, norm(x): 0.3362, norm(y): 0.9942, norm:1.7186, tok/sec: 102523.33, flops:107.61, batch-reuse:1
@ 2458 train 4.7541 , allloss: 4.7841, dt: 1263.20ms, fracRes: 0.3740, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3330, norm(y): 0.9941, norm:1.5013, tok/sec: 103762.09, flops:108.91, batch-reuse:1
@ 2459 train 4.8805 , allloss: 4.9102, dt: 1256.19ms, fracRes: 0.3760, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3358, norm(y): 0.9941, norm:1.6207, tok/sec: 104341.02, flops:109.52, batch-reuse:1
@ 2460 train 5.0048 , allloss: 5.0348, dt: 1271.55ms, fracRes: 0.3769, norm(attn): 0.1807, norm(output): 0.2031, norm(x): 0.3363, norm(y): 0.9941, norm:1.7965, tok/sec: 103080.32, flops:108.20, batch-reuse:1
@ 2461 train 4.8488 , allloss: 4.8784, dt: 1263.39ms, fracRes: 0.3755, norm(attn): 0.1807, norm(output): 0.2031, norm(x): 0.3357, norm(y): 0.9941, norm:1.8109, tok/sec: 103746.13, flops:108.90, batch-reuse:1
@ 2462 train 4.9085 , allloss: 4.9369, dt: 1286.74ms, fracRes: 0.3749, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3341, norm(y): 0.9942, norm:1.6756, tok/sec: 101863.45, flops:106.92, batch-reuse:1
@ 2463 train 4.9194 , allloss: 4.9481, dt: 1263.24ms, fracRes: 0.3755, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3324, norm(y): 0.9941, norm:1.7648, tok/sec: 103758.62, flops:108.91, batch-reuse:1
@ 2464 train 4.8657 , allloss: 4.8946, dt: 1265.49ms, fracRes: 0.3783, norm(attn): 0.1816, norm(output): 0.2021, norm(x): 0.3334, norm(y): 0.9941, norm:1.6006, tok/sec: 103574.12, flops:108.71, batch-reuse:1
@ 2465 train 4.7391 , allloss: 4.7668, dt: 1283.44ms, fracRes: 0.3758, norm(attn): 0.1836, norm(output): 0.2021, norm(x): 0.3294, norm(y): 0.9940, norm:1.4686, tok/sec: 102125.26, flops:107.19, batch-reuse:1
@ 2466 train 4.9272 , allloss: 4.9544, dt: 1281.13ms, fracRes: 0.3768, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3340, norm(y): 0.9940, norm:1.5721, tok/sec: 102309.81, flops:107.39, batch-reuse:1
@ 2467 train 4.7884 , allloss: 4.8164, dt: 1306.25ms, fracRes: 0.3760, norm(attn): 0.1846, norm(output): 0.2031, norm(x): 0.3340, norm(y): 0.9940, norm:1.4439, tok/sec: 100342.10, flops:105.32, batch-reuse:1
@ 2468 train 4.8899 , allloss: 4.9175, dt: 1284.88ms, fracRes: 0.3774, norm(attn): 0.1826, norm(output): 0.2031, norm(x): 0.3353, norm(y): 0.9941, norm:1.7762, tok/sec: 102011.13, flops:107.07, batch-reuse:1
@ 2469 train 4.9822 , allloss: 5.0107, dt: 1250.92ms, fracRes: 0.3762, norm(attn): 0.1836, norm(output): 0.2041, norm(x): 0.3335, norm(y): 0.9942, norm:1.6268, tok/sec: 104780.52, flops:109.98, batch-reuse:1
@ 2470 train 4.8078 , allloss: 4.8365, dt: 1283.33ms, fracRes: 0.3773, norm(attn): 0.1855, norm(output): 0.2031, norm(x): 0.3347, norm(y): 0.9941, norm:1.6942, tok/sec: 102134.18, flops:107.20, batch-reuse:1
@ 2471 train 4.8001 , allloss: 4.8289, dt: 1260.40ms, fracRes: 0.3751, norm(attn): 0.1865, norm(output): 0.2031, norm(x): 0.3319, norm(y): 0.9940, norm:1.6225, tok/sec: 103992.32, flops:109.15, batch-reuse:1
@ 2472 train 4.8718 , allloss: 4.8990, dt: 1282.89ms, fracRes: 0.3771, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3337, norm(y): 0.9941, norm:1.5138, tok/sec: 102169.35, flops:107.24, batch-reuse:1
@ 2473 train 4.7838 , allloss: 4.8119, dt: 1277.91ms, fracRes: 0.3748, norm(attn): 0.1816, norm(output): 0.2031, norm(x): 0.3332, norm(y): 0.9941, norm:1.4772, tok/sec: 102567.44, flops:107.66, batch-reuse:1
@ 2474 train 4.8105 , allloss: 4.8395, dt: 1288.84ms, fracRes: 0.3746, norm(attn): 0.1816, norm(output): 0.2041, norm(x): 0.3343, norm(y): 0.9942, norm:1.5839, tok/sec: 101697.65, flops:106.75, batch-reuse:1
@ 2475 train 4.8775 , allloss: 4.9068, dt: 1282.48ms, fracRes: 0.3747, norm(attn): 0.1836, norm(output): 0.2041, norm(x): 0.3356, norm(y): 0.9941, norm:1.5582, tok/sec: 102202.12, flops:107.27, batch-reuse:1
@ 2476 train 4.8679 , allloss: 4.8955, dt: 1280.09ms, fracRes: 0.3755, norm(attn): 0.1816, norm(output): 0.2041, norm(x): 0.3371, norm(y): 0.9940, norm:1.5569, tok/sec: 102392.89, flops:107.47, batch-reuse:1
@ 2477 train 4.8404 , allloss: 4.8690, dt: 1295.42ms, fracRes: 0.3741, norm(attn): 0.1836, norm(output): 0.2041, norm(x): 0.3365, norm(y): 0.9939, norm:1.5189, tok/sec: 101180.77, flops:106.20, batch-reuse:1
@ 2478 train 4.7848 , allloss: 4.8133, dt: 1300.77ms, fracRes: 0.3709, norm(attn): 0.1816, norm(output): 0.2041, norm(x): 0.3336, norm(y): 0.9940, norm:1.4246, tok/sec: 100764.71, flops:105.77, batch-reuse:1
@ 2479 train 4.7827 , allloss: 4.8112, dt: 1284.51ms, fracRes: 0.3692, norm(attn): 0.1855, norm(output): 0.2031, norm(x): 0.3309, norm(y): 0.9940, norm:1.5314, tok/sec: 102040.17, flops:107.10, batch-reuse:1
@ 2480 train 4.8945 , allloss: 4.9239, dt: 1255.72ms, fracRes: 0.3733, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3347, norm(y): 0.9940, norm:1.4830, tok/sec: 104380.36, flops:109.56, batch-reuse:1
@ 2481 train 4.8210 , allloss: 4.8498, dt: 1265.12ms, fracRes: 0.3740, norm(attn): 0.1836, norm(output): 0.2041, norm(x): 0.3373, norm(y): 0.9940, norm:1.3428, tok/sec: 103604.75, flops:108.75, batch-reuse:1
@ 2482 train 4.9459 , allloss: 4.9737, dt: 1271.95ms, fracRes: 0.3726, norm(attn): 0.1826, norm(output): 0.2041, norm(x): 0.3357, norm(y): 0.9941, norm:1.4719, tok/sec: 103047.92, flops:108.16, batch-reuse:1
@ 2483 train 4.8712 , allloss: 4.8999, dt: 1266.51ms, fracRes: 0.3736, norm(attn): 0.1836, norm(output): 0.2051, norm(x): 0.3380, norm(y): 0.9941, norm:1.7284, tok/sec: 103490.79, flops:108.63, batch-reuse:1
@ 2484 train 4.8597 , allloss: 4.8877, dt: 1267.54ms, fracRes: 0.3687, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3361, norm(y): 0.9940, norm:1.5781, tok/sec: 103406.72, flops:108.54, batch-reuse:1
@ 2485 train 4.7728 , allloss: 4.8020, dt: 1244.35ms, fracRes: 0.3683, norm(attn): 0.1865, norm(output): 0.2041, norm(x): 0.3331, norm(y): 0.9940, norm:1.8794, tok/sec: 105333.97, flops:110.56, batch-reuse:1
@ 2486 train 4.8069 , allloss: 4.8358, dt: 1259.21ms, fracRes: 0.3693, norm(attn): 0.1875, norm(output): 0.2041, norm(x): 0.3348, norm(y): 0.9939, norm:1.4365, tok/sec: 104090.61, flops:109.26, batch-reuse:1
@ 2487 train 4.9121 , allloss: 4.9404, dt: 1269.90ms, fracRes: 0.3714, norm(attn): 0.1846, norm(output): 0.2051, norm(x): 0.3372, norm(y): 0.9940, norm:1.9090, tok/sec: 103214.81, flops:108.34, batch-reuse:1
@ 2488 train 4.8727 , allloss: 4.9015, dt: 1290.23ms, fracRes: 0.3752, norm(attn): 0.1836, norm(output): 0.2041, norm(x): 0.3382, norm(y): 0.9941, norm:1.4836, tok/sec: 101588.20, flops:106.63, batch-reuse:1
@ 2489 train 4.8235 , allloss: 4.8517, dt: 1289.11ms, fracRes: 0.3752, norm(attn): 0.1836, norm(output): 0.2041, norm(x): 0.3367, norm(y): 0.9941, norm:1.5712, tok/sec: 101676.58, flops:106.72, batch-reuse:1
@ 2490 train 4.7911 , allloss: 4.8193, dt: 1271.49ms, fracRes: 0.3744, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3355, norm(y): 0.9940, norm:1.4325, tok/sec: 103085.72, flops:108.20, batch-reuse:1
@ 2491 train 4.9404 , allloss: 4.9693, dt: 1267.60ms, fracRes: 0.3761, norm(attn): 0.1846, norm(output): 0.2041, norm(x): 0.3372, norm(y): 0.9940, norm:1.6604, tok/sec: 103401.37, flops:108.53, batch-reuse:1
@ 2492 train 4.8942 , allloss: 4.9237, dt: 1267.11ms, fracRes: 0.3768, norm(attn): 0.1865, norm(output): 0.2051, norm(x): 0.3381, norm(y): 0.9939, norm:1.5256, tok/sec: 103441.88, flops:108.58, batch-reuse:1
@ 2493 train 4.8435 , allloss: 4.8716, dt: 1252.57ms, fracRes: 0.3785, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3381, norm(y): 0.9941, norm:1.7500, tok/sec: 104642.46, flops:109.84, batch-reuse:1
@ 2494 train 4.7936 , allloss: 4.8222, dt: 1282.46ms, fracRes: 0.3775, norm(attn): 0.1846, norm(output): 0.2051, norm(x): 0.3378, norm(y): 0.9941, norm:1.4806, tok/sec: 102203.22, flops:107.28, batch-reuse:1
@ 2495 train 4.8213 , allloss: 4.8501, dt: 1277.25ms, fracRes: 0.3773, norm(attn): 0.1836, norm(output): 0.2041, norm(x): 0.3389, norm(y): 0.9940, norm:1.5813, tok/sec: 102620.62, flops:107.71, batch-reuse:1
@ 2496 train 4.7556 , allloss: 4.7851, dt: 1255.49ms, fracRes: 0.3743, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3362, norm(y): 0.9940, norm:1.6116, tok/sec: 104399.15, flops:109.58, batch-reuse:1
@ 2497 train 4.8228 , allloss: 4.8511, dt: 1271.25ms, fracRes: 0.3708, norm(attn): 0.1865, norm(output): 0.2051, norm(x): 0.3338, norm(y): 0.9939, norm:1.5736, tok/sec: 103104.57, flops:108.22, batch-reuse:1
@ 2498 train 4.8550 , allloss: 4.8845, dt: 1299.74ms, fracRes: 0.3720, norm(attn): 0.1846, norm(output): 0.2041, norm(x): 0.3359, norm(y): 0.9940, norm:1.4770, tok/sec: 100844.82, flops:105.85, batch-reuse:1
@ 2499 train 4.8254 , allloss: 4.8533, dt: 1271.65ms, fracRes: 0.3688, norm(attn): 0.1875, norm(output): 0.2041, norm(x): 0.3335, norm(y): 0.9939, norm:1.4601, tok/sec: 103072.57, flops:108.19, batch-reuse:1
@ 2500 train 4.8215 , allloss: 4.8515, dt: 1250.07ms, fracRes: 0.3727, norm(attn): 0.1865, norm(output): 0.2041, norm(x): 0.3379, norm(y): 0.9940, norm:1.9676, tok/sec: 104851.56, flops:110.06, batch-reuse:1
@ 2501 train 4.7720 , allloss: 4.8026, dt: 1257.33ms, fracRes: 0.3736, norm(attn): 0.1807, norm(output): 0.2041, norm(x): 0.3361, norm(y): 0.9941, norm:1.6340, tok/sec: 104245.95, flops:109.42, batch-reuse:1
@ 2502 train 4.9291 , allloss: 4.9580, dt: 1267.05ms, fracRes: 0.3725, norm(attn): 0.1816, norm(output): 0.2041, norm(x): 0.3379, norm(y): 0.9941, norm:1.9356, tok/sec: 103446.43, flops:108.58, batch-reuse:1
@ 2503 train 4.8232 , allloss: 4.8511, dt: 1265.01ms, fracRes: 0.3713, norm(attn): 0.1865, norm(output): 0.2051, norm(x): 0.3366, norm(y): 0.9939, norm:1.6333, tok/sec: 103613.22, flops:108.76, batch-reuse:1
@ 2504 train 4.8644 , allloss: 4.8933, dt: 1275.50ms, fracRes: 0.3737, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3377, norm(y): 0.9939, norm:1.6718, tok/sec: 102760.94, flops:107.86, batch-reuse:1
@ 2505 train 4.8450 , allloss: 4.8754, dt: 1243.25ms, fracRes: 0.3771, norm(attn): 0.1836, norm(output): 0.2041, norm(x): 0.3395, norm(y): 0.9940, norm:1.6184, tok/sec: 105427.26, flops:110.66, batch-reuse:1
@ 2506 train 4.8979 , allloss: 4.9255, dt: 1256.23ms, fracRes: 0.3721, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3382, norm(y): 0.9940, norm:1.5302, tok/sec: 104337.43, flops:109.52, batch-reuse:1
@ 2507 train 4.9042 , allloss: 4.9352, dt: 1252.96ms, fracRes: 0.3744, norm(attn): 0.1875, norm(output): 0.2061, norm(x): 0.3411, norm(y): 0.9940, norm:2.0521, tok/sec: 104609.85, flops:109.80, batch-reuse:1
@ 2508 train 4.7725 , allloss: 4.8019, dt: 1246.49ms, fracRes: 0.3737, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3382, norm(y): 0.9941, norm:1.7505, tok/sec: 105153.19, flops:110.37, batch-reuse:1
@ 2509 train 4.7097 , allloss: 4.7388, dt: 1258.39ms, fracRes: 0.3749, norm(attn): 0.1855, norm(output): 0.2051, norm(x): 0.3398, norm(y): 0.9940, norm:1.6700, tok/sec: 104158.69, flops:109.33, batch-reuse:1
@ 2510 train 4.7963 , allloss: 4.8252, dt: 1282.40ms, fracRes: 0.3760, norm(attn): 0.1846, norm(output): 0.2051, norm(x): 0.3394, norm(y): 0.9939, norm:1.4921, tok/sec: 102208.61, flops:107.28, batch-reuse:1
@ 2511 train 4.7604 , allloss: 4.7876, dt: 1253.16ms, fracRes: 0.3772, norm(attn): 0.1816, norm(output): 0.2041, norm(x): 0.3393, norm(y): 0.9940, norm:1.6257, tok/sec: 104593.07, flops:109.78, batch-reuse:1
@ 2512 train 4.7708 , allloss: 4.8001, dt: 1275.43ms, fracRes: 0.3773, norm(attn): 0.1836, norm(output): 0.2031, norm(x): 0.3384, norm(y): 0.9940, norm:1.6131, tok/sec: 102766.53, flops:107.87, batch-reuse:1
@ 2513 train 4.8259 , allloss: 4.8546, dt: 1272.45ms, fracRes: 0.3776, norm(attn): 0.1846, norm(output): 0.2041, norm(x): 0.3393, norm(y): 0.9940, norm:1.5405, tok/sec: 103007.53, flops:108.12, batch-reuse:1
@ 2514 train 4.9149 , allloss: 4.9434, dt: 1263.51ms, fracRes: 0.3804, norm(attn): 0.1807, norm(output): 0.2051, norm(x): 0.3428, norm(y): 0.9941, norm:1.8106, tok/sec: 103736.12, flops:108.88, batch-reuse:1
@ 2515 train 4.7233 , allloss: 4.7503, dt: 1288.35ms, fracRes: 0.3776, norm(attn): 0.1777, norm(output): 0.2041, norm(x): 0.3386, norm(y): 0.9941, norm:1.5013, tok/sec: 101735.96, flops:106.79, batch-reuse:1
@ 2516 train 4.6507 , allloss: 4.6796, dt: 1268.38ms, fracRes: 0.3748, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3370, norm(y): 0.9940, norm:1.6554, tok/sec: 103338.51, flops:108.47, batch-reuse:1
@ 2517 train 4.7214 , allloss: 4.7509, dt: 1258.99ms, fracRes: 0.3735, norm(attn): 0.1865, norm(output): 0.2051, norm(x): 0.3370, norm(y): 0.9939, norm:1.5937, tok/sec: 104108.61, flops:109.28, batch-reuse:1
@ 2518 train 4.7873 , allloss: 4.8165, dt: 1267.78ms, fracRes: 0.3756, norm(attn): 0.1875, norm(output): 0.2051, norm(x): 0.3398, norm(y): 0.9938, norm:1.5960, tok/sec: 103386.78, flops:108.52, batch-reuse:1
@ 2519 train 4.8144 , allloss: 4.8432, dt: 1262.51ms, fracRes: 0.3735, norm(attn): 0.1865, norm(output): 0.2041, norm(x): 0.3363, norm(y): 0.9940, norm:1.8584, tok/sec: 103818.19, flops:108.97, batch-reuse:1
@ 2520 train 4.8099 , allloss: 4.8392, dt: 1261.63ms, fracRes: 0.3762, norm(attn): 0.1865, norm(output): 0.2051, norm(x): 0.3385, norm(y): 0.9940, norm:1.5057, tok/sec: 103891.13, flops:109.05, batch-reuse:1
@ 2521 train 4.7317 , allloss: 4.7598, dt: 1275.26ms, fracRes: 0.3764, norm(attn): 0.1875, norm(output): 0.2051, norm(x): 0.3391, norm(y): 0.9939, norm:1.7165, tok/sec: 102780.59, flops:107.88, batch-reuse:1
@ 2522 train 4.8731 , allloss: 4.9039, dt: 1248.66ms, fracRes: 0.3786, norm(attn): 0.1846, norm(output): 0.2051, norm(x): 0.3401, norm(y): 0.9939, norm:1.8080, tok/sec: 104969.76, flops:110.18, batch-reuse:1
@ 2523 train 4.7723 , allloss: 4.8015, dt: 1297.18ms, fracRes: 0.3787, norm(attn): 0.1846, norm(output): 0.2051, norm(x): 0.3416, norm(y): 0.9939, norm:1.5479, tok/sec: 101043.49, flops:106.06, batch-reuse:1
@ 2524 train 4.7170 , allloss: 4.7453, dt: 1269.79ms, fracRes: 0.3756, norm(attn): 0.1875, norm(output): 0.2031, norm(x): 0.3364, norm(y): 0.9940, norm:1.6385, tok/sec: 103223.68, flops:108.35, batch-reuse:1
@ 2525 train 4.7495 , allloss: 4.7799, dt: 1292.76ms, fracRes: 0.3785, norm(attn): 0.1865, norm(output): 0.2041, norm(x): 0.3403, norm(y): 0.9939, norm:1.4686, tok/sec: 101389.64, flops:106.42, batch-reuse:1
@ 2526 train 4.8757 , allloss: 4.9042, dt: 1249.88ms, fracRes: 0.3771, norm(attn): 0.1846, norm(output): 0.2041, norm(x): 0.3397, norm(y): 0.9940, norm:1.7164, tok/sec: 104867.38, flops:110.07, batch-reuse:1
@ 2527 train 4.7532 , allloss: 4.7820, dt: 1272.12ms, fracRes: 0.3740, norm(attn): 0.1865, norm(output): 0.2041, norm(x): 0.3366, norm(y): 0.9939, norm:1.5440, tok/sec: 103034.48, flops:108.15, batch-reuse:1
@ 2528 train 4.7896 , allloss: 4.8187, dt: 1266.62ms, fracRes: 0.3747, norm(attn): 0.1865, norm(output): 0.2041, norm(x): 0.3385, norm(y): 0.9939, norm:1.4379, tok/sec: 103481.95, flops:108.62, batch-reuse:1
@ 2529 train 4.7777 , allloss: 4.8065, dt: 1267.64ms, fracRes: 0.3743, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3384, norm(y): 0.9940, norm:1.6735, tok/sec: 103398.63, flops:108.53, batch-reuse:1
@ 2530 train 4.7477 , allloss: 4.7760, dt: 1268.10ms, fracRes: 0.3750, norm(attn): 0.1875, norm(output): 0.2051, norm(x): 0.3386, norm(y): 0.9940, norm:1.5059, tok/sec: 103361.03, flops:108.49, batch-reuse:1
@ 2531 train 4.7042 , allloss: 4.7329, dt: 1258.78ms, fracRes: 0.3743, norm(attn): 0.1865, norm(output): 0.2041, norm(x): 0.3370, norm(y): 0.9939, norm:1.6681, tok/sec: 104126.06, flops:109.29, batch-reuse:1
@ 2532 train 4.7916 , allloss: 4.8208, dt: 1257.79ms, fracRes: 0.3770, norm(attn): 0.1865, norm(output): 0.2051, norm(x): 0.3410, norm(y): 0.9939, norm:1.5066, tok/sec: 104208.15, flops:109.38, batch-reuse:1
@ 2533 train 4.8606 , allloss: 4.8904, dt: 1274.39ms, fracRes: 0.3768, norm(attn): 0.1875, norm(output): 0.2080, norm(x): 0.3445, norm(y): 0.9939, norm:2.3544, tok/sec: 102850.83, flops:107.96, batch-reuse:1
@ 2534 train 4.8780 , allloss: 4.9077, dt: 1251.60ms, fracRes: 0.3737, norm(attn): 0.1875, norm(output): 0.2061, norm(x): 0.3403, norm(y): 0.9940, norm:1.7674, tok/sec: 104723.57, flops:109.92, batch-reuse:1
@ 2535 train 4.7105 , allloss: 4.7387, dt: 1282.80ms, fracRes: 0.3763, norm(attn): 0.1816, norm(output): 0.2051, norm(x): 0.3402, norm(y): 0.9941, norm:1.5995, tok/sec: 102176.38, flops:107.25, batch-reuse:1
@ 2536 train 4.7897 , allloss: 4.8191, dt: 1289.80ms, fracRes: 0.3758, norm(attn): 0.1816, norm(output): 0.2041, norm(x): 0.3400, norm(y): 0.9940, norm:1.5304, tok/sec: 101621.61, flops:106.67, batch-reuse:1
@ 2537 train 4.7862 , allloss: 4.8178, dt: 1289.01ms, fracRes: 0.3731, norm(attn): 0.1885, norm(output): 0.2041, norm(x): 0.3387, norm(y): 0.9939, norm:1.9875, tok/sec: 101683.95, flops:106.73, batch-reuse:1
@ 2538 train 4.8581 , allloss: 4.8857, dt: 1274.67ms, fracRes: 0.3758, norm(attn): 0.1855, norm(output): 0.2041, norm(x): 0.3402, norm(y): 0.9940, norm:1.6241, tok/sec: 102828.44, flops:107.93, batch-reuse:1
@ 2539 train 4.7909 , allloss: 4.8190, dt: 1277.63ms, fracRes: 0.3804, norm(attn): 0.1797, norm(output): 0.2070, norm(x): 0.3464, norm(y): 0.9940, norm:1.5831, tok/sec: 102589.70, flops:107.68, batch-reuse:1
@ 2540 train 4.8694 , allloss: 4.8992, dt: 1241.08ms, fracRes: 0.3798, norm(attn): 0.1836, norm(output): 0.2051, norm(x): 0.3447, norm(y): 0.9939, norm:1.7031, tok/sec: 105611.36, flops:110.85, batch-reuse:1
@ 2541 train 4.7781 , allloss: 4.8073, dt: 1284.72ms, fracRes: 0.3777, norm(attn): 0.1855, norm(output): 0.2061, norm(x): 0.3411, norm(y): 0.9939, norm:1.5502, tok/sec: 102023.98, flops:107.09, batch-reuse:1
@ 2542 train 4.8646 , allloss: 4.8951, dt: 1310.35ms, fracRes: 0.3788, norm(attn): 0.1855, norm(output): 0.2100, norm(x): 0.3463, norm(y): 0.9938, norm:2.5663, tok/sec: 100028.28, flops:104.99, batch-reuse:1
@ 2543 train 4.7415 , allloss: 4.7711, dt: 1249.58ms, fracRes: 0.3756, norm(attn): 0.1846, norm(output): 0.2041, norm(x): 0.3393, norm(y): 0.9940, norm:1.8107, tok/sec: 104892.85, flops:110.10, batch-reuse:1
@ 2544 train 4.8873 , allloss: 4.9168, dt: 1274.01ms, fracRes: 0.3765, norm(attn): 0.1855, norm(output): 0.2090, norm(x): 0.3446, norm(y): 0.9939, norm:1.9047, tok/sec: 102881.53, flops:107.99, batch-reuse:1
@ 2545 train 4.8237 , allloss: 4.8536, dt: 1284.39ms, fracRes: 0.3740, norm(attn): 0.1875, norm(output): 0.2090, norm(x): 0.3438, norm(y): 0.9938, norm:1.5925, tok/sec: 102049.89, flops:107.11, batch-reuse:1
@ 2546 train 4.8126 , allloss: 4.8416, dt: 1298.29ms, fracRes: 0.3739, norm(attn): 0.1855, norm(output): 0.2051, norm(x): 0.3400, norm(y): 0.9939, norm:1.5945, tok/sec: 100957.62, flops:105.97, batch-reuse:1
@ 2547 train 4.8184 , allloss: 4.8501, dt: 1255.63ms, fracRes: 0.3731, norm(attn): 0.1865, norm(output): 0.2061, norm(x): 0.3398, norm(y): 0.9939, norm:1.5808, tok/sec: 104387.04, flops:109.57, batch-reuse:1
@ 2548 train 4.9856 , allloss: 5.0159, dt: 1255.99ms, fracRes: 0.3791, norm(attn): 0.1846, norm(output): 0.2051, norm(x): 0.3444, norm(y): 0.9939, norm:2.3255, tok/sec: 104357.52, flops:109.54, batch-reuse:1
@ 2549 train 4.9434 , allloss: 4.9719, dt: 1278.38ms, fracRes: 0.3747, norm(attn): 0.1875, norm(output): 0.2090, norm(x): 0.3437, norm(y): 0.9938, norm:1.6781, tok/sec: 102529.89, flops:107.62, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6953,     0.3047,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3613,     0.5352,     0.1030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2480,     0.1797,     0.2500,     0.3223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0659,     0.5938,     0.0884,     0.0840,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1201,     0.2158,     0.1191,     0.0884,     0.3320,     0.1240,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2383,     0.0240,     0.2891,     0.0566,     0.3848,     0.0082,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4199,     0.0093,     0.1523,     0.1553,     0.0369,     0.0288,     0.0270,     0.1709,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1206,     0.0425,     0.1338,     0.0262,     0.4570,     0.0233,     0.0021,     0.1787,     0.0167,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1235,     0.0386,     0.1348,     0.0603,     0.0245,     0.0261,     0.0413,     0.4492,     0.0325,     0.0688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0481,     0.2344,     0.1055,     0.0469,     0.2227,     0.0432,     0.0225,     0.1406,     0.0192,     0.0859,     0.0317,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1758,     0.0315,     0.0806,     0.1416,     0.1108,     0.0262,     0.0337,     0.0496,     0.0972,     0.0544,     0.1016,     0.0972,     0.0000,     0.0000,     0.0000],
        [    0.1050,     0.0118,     0.0322,     0.0608,     0.0315,     0.0496,     0.0723,     0.0306,     0.1689,     0.0664,     0.1133,     0.2158,     0.0425,     0.0000,     0.0000],
        [    0.0820,     0.0413,     0.1279,     0.0206,     0.2676,     0.0212,     0.0027,     0.1562,     0.0150,     0.0830,     0.0142,     0.0056,     0.1445,     0.0171,     0.0000],
        [    0.1875,     0.0092,     0.1396,     0.0339,     0.3770,     0.0080,     0.0002,     0.0293,     0.0152,     0.0708,     0.0138,     0.0048,     0.0854,     0.0249,     0.0013]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0078, -0.0709, -0.0177,  ...,  0.0231,  0.0308,  0.0547],
        [-0.0251,  0.0170,  0.0304,  ..., -0.0011, -0.0425, -0.0140],
        [-0.0485,  0.0581,  0.0210,  ...,  0.0266, -0.0427, -0.0739],
        ...,
        [-0.0060,  0.0242,  0.0539,  ..., -0.0045, -0.0291, -0.0599],
        [-0.0661,  0.0626,  0.0380,  ...,  0.0164, -0.0673, -0.0329],
        [ 0.0256, -0.0474, -0.0552,  ..., -0.0426,  0.0695,  0.0653]], device='cuda:0', requires_grad=True)
K: tensor([-0.4492,  1.6328,  1.8125, -1.4766, -0.1147,  1.1484, -0.4785, -1.2109,  0.6484,  1.4844,  0.1592,  1.6641, -1.1016,  1.2266,  0.1504,  1.0391, -0.9336,  1.0625,  0.5820, -0.6875,  1.4062, -1.1484,  0.7578,  0.9766,  0.8516, -1.6094, -0.4160,  0.2100, -0.9414,  1.4531,  1.6250, -0.8281,
         0.9141,  0.7617,  1.4219, -0.7344, -1.5078,  0.2354,  0.1143, -0.2500,  1.3672,  0.4570, -1.4453,  0.6250, -0.5352,  1.7969,  0.4062, -1.1641, -1.6641, -0.4395, -0.8164, -1.8438, -0.3574, -0.8047,  0.5742, -1.6797, -0.9414, -1.2578,  2.0781,  0.3926,  0.0747,  0.9609,  0.3613, -0.2793],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0301,  0.0346, -0.0089,  ...,  0.0330, -0.0103, -0.0317],
        [ 0.0301, -0.0449, -0.0568,  ...,  0.0341,  0.0293,  0.0480],
        [ 0.0104, -0.0064,  0.0005,  ...,  0.0304,  0.0138,  0.0544],
        ...,
        [ 0.0172, -0.0327,  0.0013,  ..., -0.0027,  0.0213,  0.0367],
        [ 0.0358, -0.0103, -0.0332,  ...,  0.0045,  0.0175,  0.0516],
        [-0.0166, -0.0017,  0.0341,  ...,  0.0278, -0.0313, -0.0405]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9258, -0.7930, -1.0078,  0.5977,  1.2969, -0.2393,  1.2344,  1.4453, -0.3652, -1.1641, -0.9961, -1.1172,  0.2119, -0.1553,  1.3516, -0.8164,  1.0156, -0.4531, -0.3184,  0.3242, -0.7578,  0.3184, -0.8789,  0.8398, -0.5977,  0.3379,  0.9609, -1.5859,  0.2158, -0.2441, -0.2412,  1.2656,
        -0.7773, -0.9375, -0.8516,  1.1484,  0.8945, -1.0156, -0.8438,  0.0259, -0.1992, -0.7031,  0.5586, -1.1016,  0.1641,  0.0771, -0.5664,  0.5820,  0.4785,  2.3281,  0.3672,  0.3438,  1.8203,  0.6289, -1.2266,  1.1094,  1.0469,  1.1797, -1.1172, -0.9961, -1.6250, -0.3496, -0.6641,  1.5234],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.8203,  0.0752,  0.0432, -0.6719, -1.6250, -2.8906, -0.1660, -1.6406, -0.6367, -1.5703, -1.4141, -0.1040, -1.2344, -1.5859],
        [ 0.0000,  0.3945, -1.2578,  1.3359,  0.0364,  0.1875,  1.2344, -1.7188,  0.8711, -0.2793,  1.4453,  0.4688, -1.7734,  0.9805,  0.8359],
        [ 0.0000, -0.3184,  0.0123,  0.2617, -0.3008, -1.4766, -1.5781,  0.2500, -1.3281, -0.2432, -0.7930, -0.0127,  0.2949, -1.3750, -1.3359],
        [ 0.0000,  2.2031,  0.2930,  0.2432,  0.9297,  0.8750,  1.3203,  1.3750,  0.5234,  0.4863,  0.2891, -0.5508,  0.5664,  0.1826,  1.5547],
        [ 0.0000,  0.5859, -0.0075, -0.3086,  1.0156,  0.0320, -0.1445,  0.1357,  0.0457, -0.0114, -0.3379, -0.9453,  0.3164,  0.1079,  0.3984],
        [ 0.0000, -2.2969,  0.1934, -1.4297,  0.4785, -3.3594, -6.1875, -0.1226, -3.1406, -0.5195, -3.1406, -3.0156,  0.2949, -3.1875, -4.3750],
        [ 0.0000, -3.8125, -1.0156, -0.9922, -2.4375, -2.6719, -2.7500, -0.8984, -1.3828, -1.2812, -2.1719,  0.1074, -0.3535, -0.9766, -2.2344],
        [ 0.0000, -1.0391,  0.1060, -1.5234,  1.3281, -1.6406, -4.0312,  0.3945, -1.9688, -0.0547, -1.9062, -3.3438,  0.3008, -2.0156, -3.2344],
        [ 0.0000, -1.1641,  0.0859, -0.7188, -1.6172, -1.5547, -1.0938,  1.2891, -1.3359, -0.5859, -2.2031,  0.3477,  1.2969, -1.0547, -0.9258],
        [ 0.0000,  1.5781,  0.7812, -0.0282,  1.5312, -0.1079, -0.7617,  1.0703, -0.9219,  0.5781, -0.4180, -1.9922,  0.4355, -1.1641, -0.4473],
        [ 0.0000, -1.7188, -0.7812, -0.2188, -0.4629, -1.9062, -1.6484, -1.2656, -0.5938, -1.1719, -0.5469, -0.5898, -0.7227, -0.6484, -1.6328],
        [ 0.0000, -2.1875, -1.1875, -0.5469, -1.2031, -0.7539, -0.3730, -1.2344,  0.4727, -0.4570,  0.0747,  0.7188, -0.9062,  0.7578, -0.3203],
        [ 0.0000, -0.6875,  0.4453, -1.3828,  1.1875, -1.3516, -3.3906,  0.6484, -1.6953,  0.0101, -1.7578, -2.6875,  0.5664, -1.5703, -2.5938],
        [ 0.0000, -3.0156, -0.2949, -1.7031,  0.6992, -3.1562, -6.8438, -1.8594, -2.5156, -0.9766, -2.6094, -3.6719, -0.7852, -2.0156, -5.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6992],
        [0.2453],
        [0.2390],
        [0.2505],
        [0.2098],
        [0.3449],
        [0.0743],
        [0.2883],
        [0.1394],
        [0.1753],
        [0.0821],
        [0.0202],
        [0.1645],
        [0.2079]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1040,     0.8242,     0.0708,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5781,     0.0062,     0.3594,     0.0581,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0123,     0.0115,     0.0029,     0.0010,     0.0105,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6133,     0.0040,     0.0034,     0.0006,     0.0008,     0.0045,     0.3711,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0889,     0.0352,     0.2773,     0.1826,     0.0505,     0.0110,     0.3535,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0001,     0.0003,     0.0000,     0.0000,     0.0001,     0.0168,     0.0002,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2656,     0.0124,     0.1348,     0.0608,     0.0034,     0.0168,     0.1128,     0.3047,     0.0227,     0.0649,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0006,     0.0000,     0.0000,     0.0000,     0.0005,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0064,     0.0942,     0.1270,     0.1602,     0.0559,     0.0723,     0.1211,     0.0933,     0.0256,     0.0503,     0.0527,     0.1406,     0.0000,     0.0000,     0.0000],
        [    0.0058,     0.0295,     0.2012,     0.1318,     0.0820,     0.0250,     0.2773,     0.0039,     0.0776,     0.0152,     0.0603,     0.0796,     0.0108,     0.0000,     0.0000],
        [    0.9688,     0.0001,     0.0003,     0.0001,     0.0000,     0.0002,     0.0250,     0.0002,     0.0027,     0.0006,     0.0000,     0.0002,     0.0005,     0.0025,     0.0000],
        [    0.0386,     0.0762,     0.0342,     0.0515,     0.0437,     0.0518,     0.0442,     0.0075,     0.1758,     0.0258,     0.0132,     0.0299,     0.0226,     0.2734,     0.1123]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0078, -0.0301,  0.0246,  ..., -0.0162,  0.0245,  0.0132],
        [ 0.0136, -0.0119,  0.0006,  ...,  0.0249, -0.0076, -0.0064],
        [ 0.0066, -0.0560, -0.0012,  ...,  0.0113, -0.0134,  0.0113],
        ...,
        [-0.0058,  0.0020, -0.0436,  ...,  0.0053, -0.0251, -0.0086],
        [-0.0005,  0.0036, -0.0083,  ...,  0.0572,  0.0327,  0.0056],
        [ 0.0227, -0.0554, -0.0231,  ...,  0.0058,  0.0181,  0.0223]], device='cuda:0', requires_grad=True)
K: tensor([ 1.0469, -1.3516, -0.7383,  1.2969, -2.2656,  0.3613,  2.9531, -1.9844,  2.3438,  2.6719,  0.3730, -0.7070,  2.1250,  0.1621,  1.3203,  1.9531, -1.5234,  2.0156,  1.8438, -0.1807,  1.3906, -1.4844, -1.6719, -1.9766,  0.1387,  1.7969,  0.9258,  1.2578, -1.1484,  2.1094,  1.7578,  3.0156,
         2.6875,  2.2031,  0.4434, -1.4688,  2.7812, -1.0859,  0.5586, -1.8828,  0.6758,  0.7773, -1.0156,  0.5703,  1.7969,  1.6250,  1.2344,  1.3359,  1.9531,  1.1016, -1.6719, -0.4238, -1.2891,  0.3848, -1.8828,  1.7266,  1.3906, -2.0469, -1.1875,  2.3438, -1.3047, -2.1875,  1.6641, -2.1094],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0176, -0.0011, -0.0051,  ...,  0.0030, -0.0156,  0.0048],
        [ 0.0007, -0.0031,  0.0009,  ...,  0.0424,  0.0383, -0.0304],
        [-0.0004, -0.0225, -0.0083,  ..., -0.0080, -0.0363,  0.0533],
        ...,
        [-0.0208,  0.0368,  0.0097,  ...,  0.0471,  0.0449, -0.0269],
        [-0.0168,  0.0026, -0.0171,  ...,  0.0113, -0.0113,  0.0435],
        [-0.0118,  0.0024,  0.0138,  ...,  0.0292,  0.0531, -0.0091]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.6680,      1.6641,      0.4375,      0.5898,      0.0713,     -0.4277,      0.8516,     -0.1416,      1.1641,      0.6719,     -2.1719,      0.5391,     -0.7344,     -0.4570,     -0.0757,      0.0352,     -0.4023,     -0.7109,     -1.8906,     -0.0001,      0.3125,      1.0391,
             0.8477,     -1.0547,     -1.1406,      0.7070,     -0.1162,      0.4746,      0.3848,     -1.4219,     -0.4434,      0.3379,      0.7656,      0.3320,      0.1250,     -0.6172,      2.3594,      1.2109,     -0.0918,     -0.0435,     -0.9961,      1.4922,      0.0574,     -1.0156,
             0.7578,      0.8945,     -0.2676,     -0.3516,     -1.4141,      0.4902,      0.8711,      0.6602,      1.3359,     -0.0967,     -0.2754,      0.5820,      0.2119,     -0.7031,      0.1084,      1.2734,      0.2246,     -2.2656,     -1.5547,      0.0510], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -8.7500,  -7.7188,  -9.5000, -11.3125,  -9.1875,  -5.4062, -11.1875,  -5.7188,  -8.3750, -15.6250,  -8.2500,  -9.7500,  -5.8125,  -8.7500],
        [  0.0000,   2.0625,  -0.3887,   0.5312,   1.5859,   1.5312,   2.6562,  -1.8281,   1.6250,   0.4453,   1.4141,  -0.2637,  -0.8281,   1.8359,   2.0938],
        [  0.0000,  -4.5312,  -0.4746,  -2.2969,  -8.4375,  -5.8438,  -4.5000,  -4.4375,  -5.2812,  -4.1250, -12.1875,  -1.5547,  -3.4844,  -5.2500,  -2.9219],
        [  0.0000, -10.6250,  -8.6250, -10.8750, -14.8750, -10.6250,  -4.7500,  -9.6250,  -7.5312,  -8.1250, -20.3750,  -8.5000,  -8.0625,  -7.4062, -11.3750],
        [  0.0000,  -4.3438,  -4.4375,  -5.8125,  -6.8125,  -4.5000,   0.1396,  -6.7500,  -2.1875,  -4.6562, -10.0625,  -5.5625,  -5.4688,  -2.0156,  -5.8125],
        [  0.0000,  -5.0312,  -5.2188,  -6.9375,  -6.6562,  -4.9062,  -0.5039,  -9.2500,  -2.6719,  -5.3438, -10.3750,  -6.7812,  -7.1562,  -2.4688,  -6.5000],
        [  0.0000,  -0.9297,   1.1406,   0.7188,  -0.5664,  -2.0938,   1.3750,  -4.7188,   0.8438,  -1.4219,  -1.9375,  -0.1523,  -3.8125,   1.0859,  -0.4004],
        [  0.0000,  -9.4375,  -7.9688, -10.0000, -12.5625,  -9.0000,  -4.0625,  -8.7500,  -6.1875,  -7.5938, -17.0000,  -8.5000,  -7.5938,  -6.2188, -10.1875],
        [  0.0000,  -3.0625,  -0.6758,  -1.4766,  -4.3438,  -2.7656,  -0.8555,   0.1377,  -2.4531,  -1.4062,  -6.0312,  -0.7734,   0.3555,  -2.2500,  -2.9062],
        [  0.0000, -12.0625,  -7.5000, -11.3750, -18.1250, -12.5000,  -7.6250,  -9.3750, -10.0000,  -9.3125, -25.0000,  -8.3750,  -7.9062, -10.0000, -12.1875],
        [  0.0000,   2.6875,   2.9844,   3.2188,   2.1719,   2.4219,   2.9375,   2.6719,   1.3906,   2.0625,   2.1094,   3.0938,   3.2188,   1.8906,   3.2344],
        [  0.0000,   1.6250,   3.5469,   3.1250,   2.6406,   1.4531,   3.8594,  -0.3906,   2.5781,   0.9570,   2.3438,   2.6094,   0.6172,   3.0000,   2.3750],
        [  0.0000,  -9.1875,  -8.0625,  -9.7500, -12.0625,  -8.6875,  -3.6562,  -8.7500,  -5.9062,  -7.4375, -16.2500,  -8.5625,  -7.5625,  -5.9375, -10.0625],
        [  0.0000,   0.6797,  -0.1260,   0.2871,   0.1216,   0.2910,   0.1348,  -1.6328,   1.5156,  -0.4062,  -1.0703,  -0.2559,  -0.5391,   1.9531,   1.0703]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.8501],
        [0.9320],
        [0.9997],
        [0.9886],
        [0.8830],
        [0.7394],
        [0.9886],
        [0.7759],
        [0.9740],
        [0.7269],
        [0.7276],
        [0.9821],
        [0.7278]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0156,     0.1133,     0.3945,     0.4121,     0.0630,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0003,     0.0001,     0.0000,     0.0026,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0003,     0.0001,     0.0001,     0.0002,     0.0001,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.1436,     0.2852,     0.0811,     0.0212,     0.0266,     0.0204,     0.2520,     0.0479,     0.0884,     0.0320,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0002,     0.0001,     0.0002,     0.0001,     0.0001,     0.0000,     0.0004,     0.0006,     0.0001,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0053,  0.0469,  0.0322,  ..., -0.0320,  0.0019, -0.0332],
        [-0.0108, -0.0398, -0.0053,  ...,  0.0258,  0.0081, -0.0485],
        [ 0.0284,  0.0518,  0.0021,  ..., -0.0135,  0.0072, -0.0033],
        ...,
        [-0.0556, -0.0372, -0.0469,  ...,  0.0195,  0.0038, -0.0161],
        [ 0.0199,  0.0291,  0.0150,  ..., -0.0351,  0.0255, -0.0057],
        [-0.0243, -0.0222, -0.0695,  ...,  0.0479,  0.0073, -0.0009]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5234,  2.5469, -0.2070,  0.6797,  2.7031,  2.6250,  3.1094, -1.3359, -1.4062,  1.6016,  2.2031, -0.0304, -2.9219, -1.3516, -1.0547, -2.5156,  1.0234,  2.3750,  2.5469, -2.4688, -2.3750,  1.6797,  2.6094,  3.0469, -2.0156, -0.9570, -1.4844, -2.0000, -0.9922, -1.7188,  1.2422,  2.3125,
        -1.3984, -1.9609, -2.2188,  0.5742, -2.2188,  0.9922, -0.1084,  1.3281,  1.8984,  2.6094, -1.4141, -1.9375,  3.5156,  2.5781, -2.0156, -0.7969, -2.5938,  0.3164,  1.1328, -0.7031,  2.2500, -0.0806,  1.2812,  0.4473, -1.7656,  0.3574, -1.6562, -2.5156, -1.3047, -1.7422,  1.7031, -2.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0340, -0.0013, -0.0248,  ..., -0.0058, -0.0269,  0.0086],
        [-0.0014,  0.0086,  0.0120,  ..., -0.0391,  0.0264, -0.0135],
        [-0.0357, -0.0443, -0.0086,  ..., -0.0004, -0.0256, -0.0253],
        ...,
        [ 0.0083,  0.0215,  0.0107,  ..., -0.0344,  0.0155, -0.0429],
        [-0.0280, -0.0015, -0.0188,  ...,  0.0056, -0.0197,  0.0362],
        [ 0.0235,  0.0194,  0.0570,  ...,  0.0112,  0.0634, -0.0311]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6250, -0.7070, -0.0403, -0.5547, -2.1250, -1.5703, -2.1250,  1.3047, -0.0173, -1.2109, -0.6367,  1.3281,  1.7031,  0.8242, -1.3984,  0.4375, -1.3516, -1.9844, -0.0284,  1.1172,  0.0420, -0.8008, -1.7344, -1.4219,  1.4453, -0.2178,  1.2500,  1.2031,  1.3047,  1.2578, -1.6484, -0.6602,
         0.2969,  1.9844,  1.5859, -1.2812,  0.8555, -1.7734, -1.9609, -2.0781, -1.4922, -0.6133,  0.4648,  0.3867, -1.2734, -0.8594,  1.8281,  1.2031,  1.0859, -1.7344, -1.0000,  0.5547, -0.9766, -0.7734, -0.2734, -0.8125,  1.2031,  0.0564,  2.1406,  0.0168,  1.5391,  1.4531, -0.5039,  2.0156],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -8.1250,  -5.9062,  -7.1250,  -7.1562,  -5.3125,  -7.3125,  -7.4375,  -6.5312,  -8.0625,  -9.2500,  -5.6562,  -7.6875,  -6.7188,  -8.3125],
        [  0.0000, -12.6250, -12.5625, -12.0000, -11.0000, -10.2500, -11.6250, -14.2500, -11.1250, -13.1875, -12.6875, -11.3125, -12.3125, -11.2500, -14.5625],
        [  0.0000, -12.6250, -12.5000, -13.5000, -12.5000, -10.6250, -12.3125, -13.1875, -11.3750, -13.3750, -13.6875, -11.8750, -12.0000, -11.5625, -14.1250],
        [  0.0000,   1.9844,   3.2344,   3.2812,   1.3984,   1.6250,   1.8594,   3.1094,   1.3516,   2.7344,   1.4531,   3.7500,   1.3672,   1.3047,   4.2188],
        [  0.0000, -10.3125,  -7.9688,  -8.8750,  -9.9375,  -5.9688,  -7.7812,  -7.9688,  -8.9375,  -8.5625, -11.6875,  -6.0938,  -6.8438,  -8.9375,  -9.9375],
        [  0.0000, -13.3750, -10.5625, -11.5000, -11.7500,  -7.8125,  -9.2500, -11.1875, -11.4375, -11.2500, -14.2500,  -9.3750, -10.3750, -11.3750, -13.5000],
        [  0.0000, -13.0625, -12.8750, -12.2500, -10.6250, -10.5625, -12.7500, -14.3125, -11.6875, -12.8125, -13.3125, -11.3750, -11.8125, -11.8750, -15.6250],
        [  0.0000,  -9.1875,  -8.2500,  -9.5625,  -9.7500,  -8.3125,  -9.2500,  -8.1250,  -8.8125,  -9.2500, -11.0625,  -7.4062,  -7.2188,  -9.0625,  -9.6875],
        [  0.0000, -13.8125, -12.9375, -13.8125, -12.4375, -11.2500, -12.5625, -13.7500, -12.1250, -13.7500, -14.2500, -12.4375, -12.5625, -12.3125, -15.5625],
        [  0.0000,   4.8438,   5.5312,   4.2812,   2.9531,   3.1719,   2.9062,   5.4062,   3.7500,   4.3750,   3.3594,   5.0312,   3.7656,   3.6406,   7.5312],
        [  0.0000, -12.4375, -11.5000, -11.1250, -10.6250,  -8.6250, -10.6875, -13.3125, -10.5000, -12.5000, -12.2500, -10.3750, -11.1250, -10.5625, -13.2500],
        [  0.0000, -13.0000, -11.5000, -11.0000, -10.4375,  -9.0625, -10.3125, -12.6875, -11.1875, -11.6250, -13.1250,  -9.8125, -10.5625, -11.2500, -14.2500],
        [  0.0000, -10.1875,  -8.8750, -10.2500, -10.6875,  -8.5625,  -9.4375,  -8.5625,  -9.6250,  -9.6250, -12.0625,  -7.9375,  -7.4062,  -9.8125, -10.3750],
        [  0.0000, -13.0625, -12.6875, -13.9375, -12.3750, -11.1875, -13.3750, -13.3750, -11.5000, -13.5625, -14.6875, -12.5000, -12.8125, -11.7500, -14.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9264],
        [1.0000],
        [1.0000],
        [0.3309],
        [0.9492],
        [0.9993],
        [0.9993],
        [0.9919],
        [1.0000],
        [0.3077],
        [0.9987],
        [0.9980],
        [0.9919],
        [1.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.9062, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.5195, 0.4180, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.3008, 0.4414, 0.1748, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0452, 0.6914, 0.1621, 0.0352, 0.0674, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0376, 0.7031, 0.1416, 0.0192, 0.0342, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0167, 0.6328, 0.1060, 0.0056, 0.0165, 0.0347, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0189, 0.4238, 0.0625, 0.0070, 0.0079, 0.0254, 0.3398, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0083, 0.3066, 0.0525, 0.0083, 0.0070, 0.0276, 0.3105, 0.1699, 0.1094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0168, 0.1904, 0.0449, 0.0123, 0.0068, 0.0278, 0.2617, 0.1680, 0.0947, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0075, 0.1177, 0.0186, 0.0083, 0.0051, 0.0234, 0.1416, 0.1826, 0.1602, 0.2432, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0145, 0.0923, 0.0217, 0.0131, 0.0175, 0.0154, 0.0605, 0.1582, 0.1240, 0.2500, 0.0947, 0.1377, 0.0000, 0.0000, 0.0000],
        [0.0234, 0.1797, 0.0231, 0.0035, 0.0067, 0.0203, 0.1582, 0.0879, 0.1318, 0.1670, 0.0591, 0.0811, 0.0583, 0.0000, 0.0000],
        [0.0137, 0.2236, 0.0227, 0.0035, 0.0057, 0.0159, 0.1436, 0.0952, 0.0596, 0.1611, 0.0211, 0.0693, 0.0806, 0.0850, 0.0000],
        [0.0102, 0.0525, 0.0143, 0.0032, 0.0043, 0.0134, 0.0596, 0.0840, 0.0693, 0.0513, 0.0309, 0.1138, 0.0918, 0.1152, 0.2871]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0173, -0.0142,  0.0080,  ...,  0.0315, -0.0176, -0.0187],
        [-0.0331,  0.0120,  0.0044,  ...,  0.0090, -0.0009,  0.0038],
        [ 0.0044,  0.0368,  0.0276,  ..., -0.0085,  0.0096,  0.0346],
        ...,
        [ 0.0019,  0.0377, -0.0108,  ..., -0.0053, -0.0227, -0.0025],
        [ 0.0304, -0.0143,  0.0139,  ...,  0.0125, -0.0164, -0.0180],
        [ 0.0377,  0.0257,  0.0098,  ..., -0.0002,  0.0010,  0.0132]], device='cuda:0', requires_grad=True)
K: tensor([ 2.1094,  1.4219, -1.0391,  1.1016,  0.0801,  1.4219, -0.3105, -1.0781,  0.0265,  0.6289, -0.8750, -2.5938, -1.2344,  0.8477,  0.9297,  1.8438, -1.7109, -0.0571, -0.0559,  0.2656, -1.3281, -0.2148, -0.0219,  2.5156, -0.0498,  1.6797, -0.5273,  1.1328,  2.3750, -0.1680, -0.0254, -0.6133,
        -2.0156,  0.9297, -1.1875, -0.2363,  0.1250, -2.0938,  2.4531,  0.2334, -0.3047, -0.5078,  0.2295, -1.3672,  0.2695, -0.0576, -0.0884,  0.2520,  0.3887, -0.7422, -1.1484,  2.1875,  0.2314, -1.4844,  0.9688,  0.1973,  1.9375,  0.4785,  1.0625,  1.1562, -1.1719, -0.3887, -1.0859, -1.1094],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0051,  0.0140,  0.0167,  ..., -0.0097,  0.0184,  0.0125],
        [ 0.0311, -0.0009,  0.0026,  ..., -0.0039, -0.0357,  0.0185],
        [ 0.0062, -0.0048, -0.0072,  ..., -0.0052, -0.0392,  0.0351],
        ...,
        [-0.0056,  0.0024, -0.0724,  ..., -0.0085,  0.0086,  0.0123],
        [ 0.0003,  0.0185, -0.0015,  ..., -0.0329, -0.0167, -0.0120],
        [-0.0314,  0.0173, -0.0597,  ..., -0.0113, -0.0209,  0.0511]], device='cuda:0', requires_grad=True)
Q: tensor([     1.8281,      1.2500,     -1.6094,     -0.8398,      0.3574,      1.0391,     -1.1875,      1.2422,      1.1484,     -0.9297,      0.0017,     -1.5000,     -0.3418,     -1.1172,     -0.8359,      0.2461,     -1.5781,     -0.6641,     -1.9141,      0.6797,     -0.0771,     -0.0175,
            -2.8281,      1.1172,     -0.0231,     -1.8516,      0.0221,      0.9141,     -0.1113,     -0.4766,      1.6562,      1.7812,     -1.5781,     -0.8984,     -1.0547,      0.7070,     -3.1094,     -0.0515,      3.0938,     -0.5859,      1.5469,      0.6133,      0.8242,     -1.7891,
            -1.2734,      0.3320,     -0.4590,     -0.8945,     -1.8125,     -1.9844,      1.8828,      1.0859,     -0.9297,     -0.6211,     -0.8281,     -0.1631,     -0.3496,      1.7422,      1.3203,     -0.0225,     -0.3574,      0.4043,      0.1328,     -0.2656], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.2500,      1.5078,     -0.3418,     -0.2656,      1.0625,      2.7188,      3.2500,      2.8438,      2.9531,      1.7188,      3.5000,      3.2969,      3.5156,      4.9688],
        [     0.0000,      2.0938,      1.8828,      1.5781,      1.6250,      1.5000,      2.3906,      3.5938,      3.9219,      3.5938,      3.8750,      4.1562,      4.5625,      5.0312,      5.7500],
        [     0.0000,      1.3047,      1.6875,      0.7617,      0.6836,      0.8086,      1.8906,      2.7969,      3.0156,      2.7344,      2.0781,      3.0781,      3.0625,      3.5469,      4.3125],
        [     0.0000,      2.7344,      1.2812,     -0.2490,      0.4004,      1.4922,      2.9688,      3.2188,      2.9844,      3.5938,      2.0156,      2.5938,      2.9062,      3.2812,      4.0938],
        [     0.0000,      2.9219,      1.3281,     -0.6758,     -0.0947,      0.5430,      2.2188,      2.7188,      2.0312,      2.5781,      0.9102,      2.2500,      2.4688,      2.0938,      4.6250],
        [     0.0000,      3.6406,      1.8516,     -1.0938,     -0.0166,      0.7305,      2.4219,      3.5625,      2.8438,      3.5156,      0.9219,      2.7812,      2.8594,      2.8281,      5.9375],
        [     0.0000,      3.1094,      1.1953,     -0.9922,     -0.8672,      0.2969,      2.8906,      1.7891,      2.3281,      2.7188,      0.9961,      2.0938,      1.3828,      2.3750,      5.1250],
        [     0.0000,      3.6094,      1.8438,     -0.0046,     -0.1660,      1.2031,      3.6250,      3.0156,      2.5781,      3.9062,      1.4609,      3.0312,      2.9531,      2.8281,      4.0938],
        [     0.0000,      2.4219,      0.9844,     -0.3145,     -0.9023,      0.5000,      2.7500,      2.2969,      1.7266,      2.3438,      0.6875,      1.8672,      2.0000,      1.9141,      4.2188],
        [     0.0000,      2.7500,      0.9062,      0.0977,     -0.3887,      1.1328,      2.9375,      3.1875,      3.0625,      3.4844,      2.5000,      2.2969,      2.9219,      3.3125,      4.7500],
        [     0.0000,      1.8594,      0.4082,     -0.0981,      0.1904,      0.0688,      1.4375,      2.3906,      2.1562,      2.8594,      1.8750,      2.2500,      2.8125,      2.9844,      4.3125],
        [     0.0000,      2.0312,     -0.0142,     -1.8906,     -1.2500,     -0.1465,      1.9141,      1.3203,      1.7266,      1.9688,      0.9297,      1.2422,      0.9141,      2.0938,      4.6562],
        [     0.0000,      2.7969,      0.5117,     -1.3672,     -0.8750,      0.1484,      2.3594,      1.9375,      1.4766,      2.4688,      0.4375,      1.6328,      1.7734,      1.8281,      3.0156],
        [     0.0000,      1.6406,      0.3438,     -1.1719,     -0.8594,      0.2773,      1.7656,      2.1094,      1.9141,      1.6172,      1.1094,      2.4219,      2.2031,      2.4219,      3.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1209],
        [0.0494],
        [0.0497],
        [0.0465],
        [0.0432],
        [0.0588],
        [0.0281],
        [0.0106],
        [0.0119],
        [0.0093],
        [0.0080],
        [0.0198],
        [0.0089],
        [0.0136]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.6680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.2129, 0.5977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0483, 0.2969, 0.3398, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.3965, 0.3750, 0.0259, 0.0991, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0272, 0.1621, 0.1777, 0.0193, 0.0371, 0.5781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0120, 0.1807, 0.1035, 0.0718, 0.1191, 0.2412, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0200, 0.1748, 0.1562, 0.0625, 0.1167, 0.2559, 0.1797, 0.0347, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0444, 0.2285, 0.1045, 0.0122, 0.0308, 0.5469, 0.0211, 0.0060, 0.0053, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0544, 0.2227, 0.1504, 0.0085, 0.0294, 0.4473, 0.0250, 0.0045, 0.0121, 0.0449, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.0942, 0.0554, 0.0110, 0.0195, 0.5469, 0.0266, 0.0107, 0.0058, 0.0287, 0.0713, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0588, 0.0815, 0.1748, 0.2422, 0.0918, 0.1455, 0.0728, 0.0332, 0.0121, 0.0177, 0.0300, 0.0396, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.1895, 0.1387, 0.0347, 0.0518, 0.1621, 0.0737, 0.0101, 0.0258, 0.0635, 0.0664, 0.0674, 0.0510, 0.0000, 0.0000],
        [0.0669, 0.2158, 0.0762, 0.0079, 0.0132, 0.5430, 0.0103, 0.0022, 0.0019, 0.0085, 0.0133, 0.0113, 0.0269, 0.0040, 0.0000],
        [0.0635, 0.1621, 0.0811, 0.0240, 0.0334, 0.1021, 0.0525, 0.0342, 0.0408, 0.0869, 0.0442, 0.0815, 0.0640, 0.0649, 0.0654]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0106,  0.0136,  0.0124,  ..., -0.0385,  0.0183,  0.0030],
        [ 0.0131, -0.0051,  0.0142,  ...,  0.0071, -0.0255,  0.0064],
        [ 0.0044, -0.0156, -0.0297,  ..., -0.0047,  0.0157, -0.0295],
        ...,
        [ 0.0118,  0.0107,  0.0037,  ...,  0.0030, -0.0275, -0.0333],
        [-0.0132, -0.0201,  0.0163,  ..., -0.0196,  0.0115,  0.0018],
        [-0.0057,  0.0003,  0.0223,  ..., -0.0176,  0.0049,  0.0045]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2344, -0.9688,  0.9297, -0.5938, -0.7969,  0.0430, -0.2793, -0.9961,  1.2422,  0.0236,  0.4277, -0.5508, -0.0588,  0.9766, -0.8242, -0.2949,  1.0000, -0.5039, -0.0364, -1.2109,  0.4434,  0.5547, -0.6719,  0.0859, -1.2891,  0.9883, -0.2773,  0.5273,  0.0233,  0.0576, -0.1484, -0.0222,
        -0.0598, -0.8867, -0.4863, -0.3926, -0.5156,  0.5391,  0.3457, -1.6797,  0.2090, -1.2109,  0.5547,  1.9766, -0.6328,  0.0253, -0.2754,  0.3125,  0.5781, -0.5703,  0.6836, -0.8438, -1.2500, -0.2617, -0.8789,  0.1128, -0.6484,  0.0352, -0.8945,  0.9922,  0.2832, -0.4102,  0.5312,  0.2285],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0047,  0.0263,  0.0047,  ...,  0.0527, -0.0063,  0.0332],
        [-0.0014, -0.0034,  0.0145,  ...,  0.0084, -0.0139,  0.0114],
        [ 0.0064,  0.0034,  0.0088,  ...,  0.0117,  0.0263, -0.0289],
        ...,
        [ 0.0059, -0.0096, -0.0097,  ..., -0.0013, -0.0168,  0.0144],
        [ 0.0020, -0.0216,  0.0217,  ...,  0.0069, -0.0076,  0.0408],
        [-0.0117, -0.0162, -0.0254,  ...,  0.0376,  0.0073,  0.0057]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7344,  0.5586, -0.7305, -0.7539, -1.0391,  0.8633,  0.5781,  0.2070, -0.4805, -0.4941,  0.5820,  1.3359,  0.7422,  1.2266,  0.1328,  0.1582, -0.0058,  0.2539, -0.5078, -0.5547,  0.6719, -0.5781,  0.4961,  0.2852,  0.8789,  1.2578, -0.8008, -0.2695,  0.4531,  1.1562, -0.5547, -0.0194,
        -1.3359, -0.5938, -0.0879,  0.7461,  0.9492, -0.2217,  0.1523,  0.1553,  0.5312, -0.5273,  1.2266,  0.4258,  0.1138,  1.5859, -1.6484,  0.0522, -0.1221,  1.8984, -0.8398, -0.7383,  0.3633,  0.1348,  0.3574, -0.1348,  1.5859, -1.4219, -1.8594,  0.4824, -0.5820,  0.0796, -0.5508,  0.2637],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.6914,      0.2988,     -2.2344,     -2.2812,      1.9062,     -2.4062,     -4.7188,     -4.9688,     -2.6719,     -3.0781,     -2.4531,     -1.4297,     -4.0000,     -2.0625],
        [     0.0000,      0.1191,      1.1562,      2.0781,      0.6680,      1.6641,     -0.1289,     -0.6172,     -1.0938,     -0.8281,     -0.7031,     -0.6719,      0.1592,     -1.1250,     -0.7227],
        [     0.0000,      1.8125,      1.9531,      1.8672,      1.8281,      2.0938,      1.9688,      0.9688,      1.0234,      0.6953,      0.8008,      1.1328,      0.7891,      0.8125,      0.8320],
        [     0.0000,      1.3359,      1.2812,     -1.3906,     -0.0483,      2.4531,     -0.0143,     -1.5625,     -2.0469,     -0.7773,     -0.5938,     -0.4492,     -0.1074,     -1.8047,     -0.6992],
        [     0.0000,      1.7812,      1.8750,     -0.3477,      0.3105,      3.0469,      0.7539,     -1.6016,     -0.6016,     -0.3398,     -0.0087,     -0.0219,     -0.1240,     -0.5977,     -0.1631],
        [     0.0000,      2.7031,      2.1562,      1.7812,      2.2969,      3.0000,      3.1094,      1.8750,      1.1641,      1.0703,      0.6367,      0.9062,      0.3633,      0.6602,      1.0938],
        [     0.0000,      2.1719,      2.0469,      1.1406,      1.7578,      2.5469,      2.1875,      0.5508,      1.1094,      0.9336,      0.7266,      0.8711,      0.1611,      0.7227,      0.6797],
        [     0.0000,      1.6406,      0.8555,     -1.2891,     -0.3691,      2.5156,     -0.7461,     -2.0156,     -2.1406,     -1.2656,     -0.8008,     -0.9102,     -0.4883,     -2.0000,     -1.0156],
        [     0.0000,      1.4062,      1.0156,     -1.8594,     -0.6172,      2.1094,     -0.7812,     -2.5000,     -1.5078,     -0.1924,      0.5352,     -0.3125,     -0.3516,     -0.6758,      0.1260],
        [     0.0000,     -0.3242,     -0.8555,     -2.4688,     -1.8906,      1.4375,     -1.5859,     -2.4844,     -3.1094,     -1.5078,     -0.6055,     -1.8750,     -0.5938,     -2.4219,     -1.4453],
        [     0.0000,      0.3223,      1.0859,      1.4141,      0.4414,      0.9062,      0.2129,     -0.5742,     -1.5859,     -1.2031,     -0.6758,     -0.4004,     -0.2773,     -1.3438,     -0.4023],
        [     0.0000,      1.0469,      0.7344,     -0.6484,     -0.2500,      0.8906,      0.1079,     -1.8750,     -0.9453,     -0.0420,      0.0010,      0.0129,     -0.2637,     -0.1113,      0.2812],
        [     0.0000,      1.1719,      0.1309,     -2.1406,     -1.6172,      2.0938,     -1.8672,     -3.3906,     -3.5781,     -2.0625,     -1.6094,     -1.7734,     -0.9141,     -2.8125,     -1.5938],
        [     0.0000,      0.9375,      0.2441,     -0.9688,     -0.6406,      0.4727,     -0.1885,     -0.6211,     -0.4453,      0.3145,     -0.3633,      0.2500,      0.0067,      0.0244,      0.0320]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1514],
        [0.0788],
        [0.0189],
        [0.0911],
        [0.0414],
        [0.0100],
        [0.0178],
        [0.0301],
        [0.0399],
        [0.0591],
        [0.0109],
        [0.1216],
        [0.0323],
        [0.0289]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1328 a:0.1514,:0.1729 and:0.0771om:0.1670,:0.2539 a:0.0830ery:0.1914)
ery
------
		( a:0.1514,:0.1729 and:0.0771om:0.1670,:0.2539 a:0.0830ery:0.1914,:0.1211)
, and the fruit is a great source of fruit.
The fruit is
@ 2550 train 4.8471 , allloss: 4.8768, dt: 1684.50ms, fracRes: 0.3753, norm(attn): 0.1855, norm(output): 0.2070, norm(x): 0.3424, norm(y): 0.9940, norm:1.7413, tok/sec: 77810.67, flops:81.67, batch-reuse:1
@ 2551 train 5.6750 , allloss: 5.7053, dt: 1282.94ms, fracRes: 0.3862, norm(attn): 0.1748, norm(output): 0.2080, norm(x): 0.3570, norm(y): 0.9941, norm:3.0884, tok/sec: 102165.23, flops:107.24, batch-reuse:1
@ 2552 train 4.8259 , allloss: 4.8550, dt: 1270.25ms, fracRes: 0.3748, norm(attn): 0.1875, norm(output): 0.2061, norm(x): 0.3408, norm(y): 0.9939, norm:2.1982, tok/sec: 103186.19, flops:108.31, batch-reuse:1
@ 2553 train 4.8350 , allloss: 4.8648, dt: 1274.70ms, fracRes: 0.3754, norm(attn): 0.1875, norm(output): 0.2070, norm(x): 0.3422, norm(y): 0.9938, norm:1.7579, tok/sec: 102825.52, flops:107.93, batch-reuse:1
@ 2554 train 4.7801 , allloss: 4.8088, dt: 1265.40ms, fracRes: 0.3780, norm(attn): 0.1846, norm(output): 0.2041, norm(x): 0.3422, norm(y): 0.9939, norm:1.5458, tok/sec: 103581.66, flops:108.72, batch-reuse:1
@ 2555 train 4.6332 , allloss: 4.6651, dt: 1280.92ms, fracRes: 0.3769, norm(attn): 0.1865, norm(output): 0.2061, norm(x): 0.3419, norm(y): 0.9939, norm:1.8448, tok/sec: 102326.36, flops:107.41, batch-reuse:1
@ 2556 train 4.7471 , allloss: 4.7777, dt: 1277.81ms, fracRes: 0.3794, norm(attn): 0.1875, norm(output): 0.2080, norm(x): 0.3459, norm(y): 0.9939, norm:1.8777, tok/sec: 102575.70, flops:107.67, batch-reuse:1
@ 2557 train 4.7333 , allloss: 4.7621, dt: 1276.66ms, fracRes: 0.3776, norm(attn): 0.1865, norm(output): 0.2070, norm(x): 0.3442, norm(y): 0.9941, norm:1.6859, tok/sec: 102667.54, flops:107.76, batch-reuse:1
@ 2558 train 4.7655 , allloss: 4.7941, dt: 1255.94ms, fracRes: 0.3784, norm(attn): 0.1846, norm(output): 0.2070, norm(x): 0.3439, norm(y): 0.9941, norm:1.8243, tok/sec: 104361.36, flops:109.54, batch-reuse:1
@ 2559 train 4.7562 , allloss: 4.7862, dt: 1282.14ms, fracRes: 0.3803, norm(attn): 0.1855, norm(output): 0.2080, norm(x): 0.3474, norm(y): 0.9939, norm:1.4750, tok/sec: 102229.01, flops:107.30, batch-reuse:1
@ 2560 train 4.5929 , allloss: 4.6221, dt: 1267.71ms, fracRes: 0.3795, norm(attn): 0.1875, norm(output): 0.2070, norm(x): 0.3445, norm(y): 0.9939, norm:1.5400, tok/sec: 103392.56, flops:108.52, batch-reuse:1
@ 2561 train 4.6108 , allloss: 4.6393, dt: 1255.58ms, fracRes: 0.3779, norm(attn): 0.1875, norm(output): 0.2070, norm(x): 0.3435, norm(y): 0.9938, norm:1.8812, tok/sec: 104391.60, flops:109.57, batch-reuse:1
@ 2562 train 4.6396 , allloss: 4.6667, dt: 1249.27ms, fracRes: 0.3787, norm(attn): 0.1846, norm(output): 0.2080, norm(x): 0.3428, norm(y): 0.9939, norm:2.0789, tok/sec: 104918.62, flops:110.13, batch-reuse:1
@ 2563 train 4.6064 , allloss: 4.6346, dt: 1290.06ms, fracRes: 0.3764, norm(attn): 0.1875, norm(output): 0.2041, norm(x): 0.3379, norm(y): 0.9938, norm:1.9238, tok/sec: 101601.66, flops:106.64, batch-reuse:1
@ 2564 train 4.5940 , allloss: 4.6236, dt: 1255.82ms, fracRes: 0.3796, norm(attn): 0.1885, norm(output): 0.2070, norm(x): 0.3446, norm(y): 0.9939, norm:1.8845, tok/sec: 104371.52, flops:109.55, batch-reuse:1
@ 2565 train 4.7873 , allloss: 4.8163, dt: 1264.70ms, fracRes: 0.3789, norm(attn): 0.1875, norm(output): 0.2090, norm(x): 0.3449, norm(y): 0.9939, norm:1.8506, tok/sec: 103638.72, flops:108.78, batch-reuse:1
@ 2566 train 4.7347 , allloss: 4.7659, dt: 1274.45ms, fracRes: 0.3835, norm(attn): 0.1855, norm(output): 0.2100, norm(x): 0.3489, norm(y): 0.9940, norm:2.0039, tok/sec: 102845.87, flops:107.95, batch-reuse:1
@ 2567 train 4.7299 , allloss: 4.7587, dt: 1272.08ms, fracRes: 0.3828, norm(attn): 0.1855, norm(output): 0.2070, norm(x): 0.3485, norm(y): 0.9940, norm:1.6405, tok/sec: 103037.47, flops:108.15, batch-reuse:1
@ 2568 train 4.7087 , allloss: 4.7369, dt: 1272.85ms, fracRes: 0.3832, norm(attn): 0.1865, norm(output): 0.2109, norm(x): 0.3498, norm(y): 0.9940, norm:1.6584, tok/sec: 102975.40, flops:108.09, batch-reuse:1
@ 2569 train 4.7580 , allloss: 4.7864, dt: 1269.12ms, fracRes: 0.3811, norm(attn): 0.1865, norm(output): 0.2080, norm(x): 0.3456, norm(y): 0.9940, norm:1.7303, tok/sec: 103277.86, flops:108.40, batch-reuse:1
@ 2570 train 4.6757 , allloss: 4.7067, dt: 1270.03ms, fracRes: 0.3825, norm(attn): 0.1865, norm(output): 0.2080, norm(x): 0.3477, norm(y): 0.9940, norm:1.4625, tok/sec: 103203.76, flops:108.33, batch-reuse:1
@ 2571 train 4.6778 , allloss: 4.7053, dt: 1273.12ms, fracRes: 0.3814, norm(attn): 0.1855, norm(output): 0.2109, norm(x): 0.3476, norm(y): 0.9940, norm:1.6539, tok/sec: 102953.03, flops:108.06, batch-reuse:1
@ 2572 train 4.7611 , allloss: 4.7901, dt: 1249.12ms, fracRes: 0.3807, norm(attn): 0.1855, norm(output): 0.2100, norm(x): 0.3463, norm(y): 0.9940, norm:1.4920, tok/sec: 104931.29, flops:110.14, batch-reuse:1
@ 2573 train 4.7159 , allloss: 4.7440, dt: 1236.05ms, fracRes: 0.3799, norm(attn): 0.1865, norm(output): 0.2090, norm(x): 0.3462, norm(y): 0.9940, norm:1.7258, tok/sec: 106040.60, flops:111.30, batch-reuse:1
@ 2574 train 4.6572 , allloss: 4.6870, dt: 1262.22ms, fracRes: 0.3806, norm(attn): 0.1865, norm(output): 0.2080, norm(x): 0.3461, norm(y): 0.9940, norm:1.5640, tok/sec: 103842.74, flops:109.00, batch-reuse:1
@ 2575 train 4.7123 , allloss: 4.7407, dt: 1262.89ms, fracRes: 0.3797, norm(attn): 0.1875, norm(output): 0.2080, norm(x): 0.3466, norm(y): 0.9939, norm:1.4548, tok/sec: 103787.32, flops:108.94, batch-reuse:1
@ 2576 train 4.6417 , allloss: 4.6702, dt: 1267.55ms, fracRes: 0.3777, norm(attn): 0.1875, norm(output): 0.2080, norm(x): 0.3439, norm(y): 0.9939, norm:1.6912, tok/sec: 103405.73, flops:108.54, batch-reuse:1
@ 2577 train 4.7466 , allloss: 4.7765, dt: 1253.80ms, fracRes: 0.3801, norm(attn): 0.1855, norm(output): 0.2090, norm(x): 0.3457, norm(y): 0.9939, norm:1.3246, tok/sec: 104539.47, flops:109.73, batch-reuse:1
@ 2578 train 4.5715 , allloss: 4.6034, dt: 1280.43ms, fracRes: 0.3808, norm(attn): 0.1875, norm(output): 0.2080, norm(x): 0.3480, norm(y): 0.9939, norm:1.5356, tok/sec: 102365.70, flops:107.45, batch-reuse:1
@ 2579 train 4.7289 , allloss: 4.7595, dt: 1290.00ms, fracRes: 0.3808, norm(attn): 0.1875, norm(output): 0.2109, norm(x): 0.3479, norm(y): 0.9940, norm:1.5165, tok/sec: 101606.04, flops:106.65, batch-reuse:1
@ 2580 train 4.6717 , allloss: 4.7002, dt: 1262.90ms, fracRes: 0.3779, norm(attn): 0.1875, norm(output): 0.2109, norm(x): 0.3459, norm(y): 0.9939, norm:1.5045, tok/sec: 103786.12, flops:108.94, batch-reuse:1
@ 2581 train 4.6435 , allloss: 4.6731, dt: 1281.69ms, fracRes: 0.3784, norm(attn): 0.1875, norm(output): 0.2100, norm(x): 0.3477, norm(y): 0.9939, norm:1.3836, tok/sec: 102265.10, flops:107.34, batch-reuse:1
@ 2582 train 4.6297 , allloss: 4.6595, dt: 1279.83ms, fracRes: 0.3805, norm(attn): 0.1865, norm(output): 0.2109, norm(x): 0.3482, norm(y): 0.9940, norm:1.5897, tok/sec: 102413.68, flops:107.50, batch-reuse:1
@ 2583 train 4.6150 , allloss: 4.6423, dt: 1268.91ms, fracRes: 0.3792, norm(attn): 0.1875, norm(output): 0.2090, norm(x): 0.3446, norm(y): 0.9939, norm:1.4557, tok/sec: 103294.65, flops:108.42, batch-reuse:1
@ 2584 train 4.6523 , allloss: 4.6818, dt: 1256.61ms, fracRes: 0.3810, norm(attn): 0.1875, norm(output): 0.2070, norm(x): 0.3447, norm(y): 0.9938, norm:1.5073, tok/sec: 104305.88, flops:109.48, batch-reuse:1
@ 2585 train 4.6880 , allloss: 4.7190, dt: 1275.25ms, fracRes: 0.3815, norm(attn): 0.1885, norm(output): 0.2080, norm(x): 0.3465, norm(y): 0.9938, norm:1.8585, tok/sec: 102781.38, flops:107.88, batch-reuse:1
@ 2586 train 4.5914 , allloss: 4.6228, dt: 1281.29ms, fracRes: 0.3852, norm(attn): 0.1875, norm(output): 0.2090, norm(x): 0.3495, norm(y): 0.9939, norm:1.7756, tok/sec: 102296.88, flops:107.37, batch-reuse:1
@ 2587 train 4.7216 , allloss: 4.7494, dt: 1270.01ms, fracRes: 0.3815, norm(attn): 0.1855, norm(output): 0.2070, norm(x): 0.3436, norm(y): 0.9940, norm:1.7861, tok/sec: 103205.10, flops:108.33, batch-reuse:1
@ 2588 train 4.6235 , allloss: 4.6537, dt: 1266.15ms, fracRes: 0.3827, norm(attn): 0.1875, norm(output): 0.2070, norm(x): 0.3470, norm(y): 0.9940, norm:1.9484, tok/sec: 103519.79, flops:108.66, batch-reuse:1
@ 2589 train 4.6813 , allloss: 4.7104, dt: 1294.10ms, fracRes: 0.3828, norm(attn): 0.1865, norm(output): 0.2090, norm(x): 0.3466, norm(y): 0.9939, norm:1.7322, tok/sec: 101284.59, flops:106.31, batch-reuse:1
@ 2590 train 4.6647 , allloss: 4.6953, dt: 1299.38ms, fracRes: 0.3828, norm(attn): 0.1885, norm(output): 0.2070, norm(x): 0.3462, norm(y): 0.9938, norm:1.5420, tok/sec: 100872.66, flops:105.88, batch-reuse:1
@ 2591 train 4.7249 , allloss: 4.7538, dt: 1248.05ms, fracRes: 0.3834, norm(attn): 0.1855, norm(output): 0.2090, norm(x): 0.3482, norm(y): 0.9939, norm:1.5951, tok/sec: 105021.13, flops:110.23, batch-reuse:1
@ 2592 train 4.7457 , allloss: 4.7742, dt: 1280.10ms, fracRes: 0.3815, norm(attn): 0.1875, norm(output): 0.2090, norm(x): 0.3478, norm(y): 0.9939, norm:1.5298, tok/sec: 102392.34, flops:107.47, batch-reuse:1
@ 2593 train 4.7070 , allloss: 4.7372, dt: 1268.44ms, fracRes: 0.3829, norm(attn): 0.1865, norm(output): 0.2148, norm(x): 0.3510, norm(y): 0.9939, norm:1.7322, tok/sec: 103333.25, flops:108.46, batch-reuse:1
@ 2594 train 4.6480 , allloss: 4.6750, dt: 1275.48ms, fracRes: 0.3819, norm(attn): 0.1855, norm(output): 0.2129, norm(x): 0.3499, norm(y): 0.9939, norm:1.6649, tok/sec: 102762.57, flops:107.86, batch-reuse:1
@ 2595 train 4.6656 , allloss: 4.6938, dt: 1272.24ms, fracRes: 0.3814, norm(attn): 0.1855, norm(output): 0.2109, norm(x): 0.3484, norm(y): 0.9939, norm:1.5457, tok/sec: 103024.61, flops:108.14, batch-reuse:1
@ 2596 train 4.7797 , allloss: 4.8098, dt: 1293.83ms, fracRes: 0.3819, norm(attn): 0.1855, norm(output): 0.2100, norm(x): 0.3508, norm(y): 0.9939, norm:1.6525, tok/sec: 101305.71, flops:106.33, batch-reuse:1
@ 2597 train 4.6560 , allloss: 4.6851, dt: 1281.45ms, fracRes: 0.3801, norm(attn): 0.1885, norm(output): 0.2119, norm(x): 0.3498, norm(y): 0.9937, norm:1.5751, tok/sec: 102284.30, flops:107.36, batch-reuse:1
@ 2598 train 4.6050 , allloss: 4.6341, dt: 1271.32ms, fracRes: 0.3788, norm(attn): 0.1875, norm(output): 0.2109, norm(x): 0.3474, norm(y): 0.9937, norm:1.4989, tok/sec: 103099.29, flops:108.22, batch-reuse:1
@ 2599 train 4.5921 , allloss: 4.6201, dt: 1255.94ms, fracRes: 0.3831, norm(attn): 0.1855, norm(output): 0.2109, norm(x): 0.3515, norm(y): 0.9939, norm:1.6517, tok/sec: 104361.28, flops:109.54, batch-reuse:1
@ 2600 train 4.5878 , allloss: 4.6156, dt: 1259.72ms, fracRes: 0.3811, norm(attn): 0.1836, norm(output): 0.2109, norm(x): 0.3492, norm(y): 0.9939, norm:1.4145, tok/sec: 104048.29, flops:109.21, batch-reuse:1
@ 2601 train 4.7521 , allloss: 4.7807, dt: 1262.66ms, fracRes: 0.3804, norm(attn): 0.1875, norm(output): 0.2090, norm(x): 0.3485, norm(y): 0.9938, norm:1.5030, tok/sec: 103806.25, flops:108.96, batch-reuse:1
@ 2602 train 4.7591 , allloss: 4.7873, dt: 1264.50ms, fracRes: 0.3812, norm(attn): 0.1865, norm(output): 0.2119, norm(x): 0.3502, norm(y): 0.9938, norm:1.3783, tok/sec: 103654.89, flops:108.80, batch-reuse:1
@ 2603 train 4.8831 , allloss: 4.9114, dt: 1267.38ms, fracRes: 0.3815, norm(attn): 0.1855, norm(output): 0.2119, norm(x): 0.3481, norm(y): 0.9939, norm:1.5828, tok/sec: 103419.46, flops:108.55, batch-reuse:1
@ 2604 train 4.8421 , allloss: 4.8704, dt: 1266.16ms, fracRes: 0.3816, norm(attn): 0.1875, norm(output): 0.2090, norm(x): 0.3492, norm(y): 0.9939, norm:1.4513, tok/sec: 103519.07, flops:108.66, batch-reuse:1
@ 2605 train 4.7941 , allloss: 4.8226, dt: 1253.61ms, fracRes: 0.3812, norm(attn): 0.1904, norm(output): 0.2148, norm(x): 0.3514, norm(y): 0.9938, norm:1.7076, tok/sec: 104555.33, flops:109.74, batch-reuse:1
@ 2606 train 4.8489 , allloss: 4.8771, dt: 1284.40ms, fracRes: 0.3808, norm(attn): 0.1875, norm(output): 0.2109, norm(x): 0.3499, norm(y): 0.9938, norm:1.3493, tok/sec: 102049.07, flops:107.11, batch-reuse:1
@ 2607 train 4.7903 , allloss: 4.8208, dt: 1267.54ms, fracRes: 0.3839, norm(attn): 0.1875, norm(output): 0.2129, norm(x): 0.3541, norm(y): 0.9938, norm:1.6315, tok/sec: 103406.33, flops:108.54, batch-reuse:1
@ 2608 train 4.8141 , allloss: 4.8417, dt: 1258.62ms, fracRes: 0.3788, norm(attn): 0.1875, norm(output): 0.2090, norm(x): 0.3473, norm(y): 0.9938, norm:1.6379, tok/sec: 104139.85, flops:109.31, batch-reuse:1
@ 2609 train 4.9831 , allloss: 5.0115, dt: 1266.59ms, fracRes: 0.3817, norm(attn): 0.1855, norm(output): 0.2139, norm(x): 0.3501, norm(y): 0.9939, norm:1.6420, tok/sec: 103484.54, flops:108.62, batch-reuse:1
@ 2610 train 4.9728 , allloss: 5.0027, dt: 1278.56ms, fracRes: 0.3844, norm(attn): 0.1885, norm(output): 0.2139, norm(x): 0.3555, norm(y): 0.9938, norm:1.7765, tok/sec: 102514.97, flops:107.60, batch-reuse:1
@ 2611 train 4.8554 , allloss: 4.8868, dt: 1272.31ms, fracRes: 0.3802, norm(attn): 0.1875, norm(output): 0.2139, norm(x): 0.3504, norm(y): 0.9938, norm:1.5886, tok/sec: 103018.57, flops:108.13, batch-reuse:1
@ 2612 train 4.8380 , allloss: 4.8671, dt: 1257.52ms, fracRes: 0.3807, norm(attn): 0.1875, norm(output): 0.2100, norm(x): 0.3499, norm(y): 0.9938, norm:1.4656, tok/sec: 104230.65, flops:109.40, batch-reuse:1
@ 2613 train 4.7232 , allloss: 4.7522, dt: 1283.16ms, fracRes: 0.3831, norm(attn): 0.1865, norm(output): 0.2129, norm(x): 0.3521, norm(y): 0.9939, norm:1.6041, tok/sec: 102147.94, flops:107.22, batch-reuse:1
@ 2614 train 4.8435 , allloss: 4.8709, dt: 1275.53ms, fracRes: 0.3817, norm(attn): 0.1865, norm(output): 0.2109, norm(x): 0.3514, norm(y): 0.9939, norm:1.6350, tok/sec: 102758.79, flops:107.86, batch-reuse:1
@ 2615 train 4.8706 , allloss: 4.9004, dt: 1291.56ms, fracRes: 0.3821, norm(attn): 0.1875, norm(output): 0.2129, norm(x): 0.3530, norm(y): 0.9938, norm:1.8411, tok/sec: 101483.65, flops:106.52, batch-reuse:1
@ 2616 train 4.8537 , allloss: 4.8811, dt: 1275.16ms, fracRes: 0.3808, norm(attn): 0.1875, norm(output): 0.2129, norm(x): 0.3508, norm(y): 0.9938, norm:1.5833, tok/sec: 102788.57, flops:107.89, batch-reuse:1
@ 2617 train 4.7625 , allloss: 4.7909, dt: 1273.14ms, fracRes: 0.3787, norm(attn): 0.1895, norm(output): 0.2139, norm(x): 0.3502, norm(y): 0.9937, norm:1.5053, tok/sec: 102951.76, flops:108.06, batch-reuse:1
@ 2618 train 4.7380 , allloss: 4.7680, dt: 1252.53ms, fracRes: 0.3814, norm(attn): 0.1865, norm(output): 0.2129, norm(x): 0.3510, norm(y): 0.9939, norm:1.7202, tok/sec: 104645.93, flops:109.84, batch-reuse:1
@ 2619 train 4.7825 , allloss: 4.8095, dt: 1277.11ms, fracRes: 0.3805, norm(attn): 0.1865, norm(output): 0.2148, norm(x): 0.3516, norm(y): 0.9939, norm:1.3756, tok/sec: 102631.79, flops:107.73, batch-reuse:1
@ 2620 train 4.8617 , allloss: 4.8904, dt: 1281.39ms, fracRes: 0.3806, norm(attn): 0.1875, norm(output): 0.2158, norm(x): 0.3538, norm(y): 0.9938, norm:1.5868, tok/sec: 102288.70, flops:107.37, batch-reuse:1
@ 2621 train 4.8171 , allloss: 4.8469, dt: 1264.02ms, fracRes: 0.3827, norm(attn): 0.1865, norm(output): 0.2139, norm(x): 0.3550, norm(y): 0.9939, norm:1.7993, tok/sec: 103694.60, flops:108.84, batch-reuse:1
@ 2622 train 4.8091 , allloss: 4.8412, dt: 1269.01ms, fracRes: 0.3831, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3557, norm(y): 0.9938, norm:1.4290, tok/sec: 103286.56, flops:108.41, batch-reuse:1
@ 2623 train 4.8722 , allloss: 4.9017, dt: 1247.78ms, fracRes: 0.3805, norm(attn): 0.1895, norm(output): 0.2129, norm(x): 0.3519, norm(y): 0.9938, norm:1.7387, tok/sec: 105044.05, flops:110.26, batch-reuse:1
@ 2624 train 4.8903 , allloss: 4.9176, dt: 1249.82ms, fracRes: 0.3830, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3538, norm(y): 0.9938, norm:1.4531, tok/sec: 104872.44, flops:110.08, batch-reuse:1
@ 2625 train 4.8112 , allloss: 4.8376, dt: 1261.37ms, fracRes: 0.3824, norm(attn): 0.1865, norm(output): 0.2148, norm(x): 0.3541, norm(y): 0.9939, norm:1.5364, tok/sec: 103912.69, flops:109.07, batch-reuse:1
@ 2626 train 4.7800 , allloss: 4.8109, dt: 1263.18ms, fracRes: 0.3811, norm(attn): 0.1875, norm(output): 0.2139, norm(x): 0.3514, norm(y): 0.9938, norm:1.5532, tok/sec: 103763.32, flops:108.91, batch-reuse:1
@ 2627 train 4.8375 , allloss: 4.8670, dt: 1276.94ms, fracRes: 0.3792, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3501, norm(y): 0.9938, norm:1.7330, tok/sec: 102645.55, flops:107.74, batch-reuse:1
@ 2628 train 4.7472 , allloss: 4.7776, dt: 1279.88ms, fracRes: 0.3834, norm(attn): 0.1865, norm(output): 0.2129, norm(x): 0.3526, norm(y): 0.9938, norm:1.6778, tok/sec: 102409.75, flops:107.49, batch-reuse:1
@ 2629 train 4.7464 , allloss: 4.7758, dt: 1283.79ms, fracRes: 0.3819, norm(attn): 0.1885, norm(output): 0.2129, norm(x): 0.3489, norm(y): 0.9938, norm:1.4575, tok/sec: 102098.03, flops:107.17, batch-reuse:1
@ 2630 train 4.8491 , allloss: 4.8765, dt: 1280.29ms, fracRes: 0.3833, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3524, norm(y): 0.9937, norm:1.6017, tok/sec: 102376.57, flops:107.46, batch-reuse:1
@ 2631 train 4.7375 , allloss: 4.7654, dt: 1277.35ms, fracRes: 0.3818, norm(attn): 0.1895, norm(output): 0.2139, norm(x): 0.3517, norm(y): 0.9937, norm:1.6578, tok/sec: 102612.58, flops:107.71, batch-reuse:1
@ 2632 train 4.7958 , allloss: 4.8240, dt: 1256.28ms, fracRes: 0.3847, norm(attn): 0.1855, norm(output): 0.2119, norm(x): 0.3529, norm(y): 0.9938, norm:1.6636, tok/sec: 104333.20, flops:109.51, batch-reuse:1
@ 2633 train 4.7915 , allloss: 4.8207, dt: 1273.90ms, fracRes: 0.3831, norm(attn): 0.1875, norm(output): 0.2129, norm(x): 0.3523, norm(y): 0.9938, norm:1.7395, tok/sec: 102890.53, flops:108.00, batch-reuse:1
@ 2634 train 4.7619 , allloss: 4.7899, dt: 1268.02ms, fracRes: 0.3828, norm(attn): 0.1875, norm(output): 0.2129, norm(x): 0.3529, norm(y): 0.9938, norm:1.4921, tok/sec: 103367.33, flops:108.50, batch-reuse:1
@ 2635 train 4.7460 , allloss: 4.7744, dt: 1257.46ms, fracRes: 0.3845, norm(attn): 0.1855, norm(output): 0.2129, norm(x): 0.3529, norm(y): 0.9938, norm:1.6575, tok/sec: 104235.69, flops:109.41, batch-reuse:1
@ 2636 train 4.8142 , allloss: 4.8425, dt: 1274.92ms, fracRes: 0.3823, norm(attn): 0.1865, norm(output): 0.2148, norm(x): 0.3519, norm(y): 0.9938, norm:1.5606, tok/sec: 102807.89, flops:107.91, batch-reuse:1
@ 2637 train 4.7887 , allloss: 4.8205, dt: 1263.04ms, fracRes: 0.3807, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3530, norm(y): 0.9937, norm:1.9386, tok/sec: 103775.07, flops:108.93, batch-reuse:1
@ 2638 train 4.8327 , allloss: 4.8597, dt: 1269.41ms, fracRes: 0.3831, norm(attn): 0.1865, norm(output): 0.2148, norm(x): 0.3546, norm(y): 0.9937, norm:1.7238, tok/sec: 103254.20, flops:108.38, batch-reuse:1
@ 2639 train 4.9383 , allloss: 4.9663, dt: 1283.79ms, fracRes: 0.3858, norm(attn): 0.1836, norm(output): 0.2158, norm(x): 0.3601, norm(y): 0.9937, norm:1.7235, tok/sec: 102097.82, flops:107.17, batch-reuse:1
@ 2640 train 4.7472 , allloss: 4.7786, dt: 1275.59ms, fracRes: 0.3810, norm(attn): 0.1875, norm(output): 0.2158, norm(x): 0.3550, norm(y): 0.9937, norm:1.8291, tok/sec: 102754.29, flops:107.85, batch-reuse:1
@ 2641 train 4.8362 , allloss: 4.8637, dt: 1287.68ms, fracRes: 0.3828, norm(attn): 0.1875, norm(output): 0.2168, norm(x): 0.3591, norm(y): 0.9938, norm:1.9303, tok/sec: 101788.93, flops:106.84, batch-reuse:1
@ 2642 train 4.7995 , allloss: 4.8263, dt: 1275.49ms, fracRes: 0.3821, norm(attn): 0.1875, norm(output): 0.2168, norm(x): 0.3573, norm(y): 0.9938, norm:1.5258, tok/sec: 102761.98, flops:107.86, batch-reuse:1
@ 2643 train 4.6973 , allloss: 4.7252, dt: 1261.13ms, fracRes: 0.3817, norm(attn): 0.1865, norm(output): 0.2158, norm(x): 0.3562, norm(y): 0.9938, norm:1.6743, tok/sec: 103932.16, flops:109.09, batch-reuse:1
@ 2644 train 4.7642 , allloss: 4.7921, dt: 1294.24ms, fracRes: 0.3778, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3519, norm(y): 0.9937, norm:1.4255, tok/sec: 101273.20, flops:106.30, batch-reuse:1
@ 2645 train 4.8425 , allloss: 4.8699, dt: 1277.50ms, fracRes: 0.3801, norm(attn): 0.1865, norm(output): 0.2158, norm(x): 0.3550, norm(y): 0.9937, norm:1.8617, tok/sec: 102600.03, flops:107.69, batch-reuse:1
@ 2646 train 4.8333 , allloss: 4.8618, dt: 1248.69ms, fracRes: 0.3791, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3516, norm(y): 0.9938, norm:1.6879, tok/sec: 104967.60, flops:110.18, batch-reuse:1
@ 2647 train 4.7864 , allloss: 4.8137, dt: 1258.52ms, fracRes: 0.3776, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3500, norm(y): 0.9938, norm:1.8921, tok/sec: 104147.32, flops:109.32, batch-reuse:1
@ 2648 train 4.7165 , allloss: 4.7436, dt: 1275.13ms, fracRes: 0.3797, norm(attn): 0.1895, norm(output): 0.2158, norm(x): 0.3531, norm(y): 0.9937, norm:1.5579, tok/sec: 102790.91, flops:107.89, batch-reuse:1
@ 2649 train 4.7850 , allloss: 4.8126, dt: 1275.87ms, fracRes: 0.3821, norm(attn): 0.1865, norm(output): 0.2148, norm(x): 0.3549, norm(y): 0.9938, norm:1.8015, tok/sec: 102731.10, flops:107.83, batch-reuse:1
@ 2650 train 4.7342 , allloss: 4.7611, dt: 1287.51ms, fracRes: 0.3807, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3512, norm(y): 0.9939, norm:1.7821, tok/sec: 101802.50, flops:106.86, batch-reuse:1
@ 2651 train 4.7483 , allloss: 4.7764, dt: 1282.85ms, fracRes: 0.3799, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3524, norm(y): 0.9938, norm:1.6410, tok/sec: 102172.68, flops:107.24, batch-reuse:1
@ 2652 train 4.7550 , allloss: 4.7837, dt: 1286.61ms, fracRes: 0.3799, norm(attn): 0.1904, norm(output): 0.2148, norm(x): 0.3525, norm(y): 0.9937, norm:1.7472, tok/sec: 101873.70, flops:106.93, batch-reuse:1
@ 2653 train 4.7716 , allloss: 4.7986, dt: 1274.55ms, fracRes: 0.3804, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3527, norm(y): 0.9937, norm:1.7536, tok/sec: 102837.81, flops:107.94, batch-reuse:1
@ 2654 train 4.7400 , allloss: 4.7666, dt: 1274.92ms, fracRes: 0.3814, norm(attn): 0.1865, norm(output): 0.2148, norm(x): 0.3547, norm(y): 0.9937, norm:1.6084, tok/sec: 102807.75, flops:107.91, batch-reuse:1
@ 2655 train 4.7173 , allloss: 4.7460, dt: 1266.70ms, fracRes: 0.3841, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3547, norm(y): 0.9939, norm:1.4855, tok/sec: 103474.78, flops:108.61, batch-reuse:1
@ 2656 train 4.8275 , allloss: 4.8556, dt: 1266.26ms, fracRes: 0.3818, norm(attn): 0.1865, norm(output): 0.2148, norm(x): 0.3526, norm(y): 0.9940, norm:1.6786, tok/sec: 103511.04, flops:108.65, batch-reuse:1
@ 2657 train 4.6756 , allloss: 4.7035, dt: 1247.40ms, fracRes: 0.3812, norm(attn): 0.1885, norm(output): 0.2139, norm(x): 0.3502, norm(y): 0.9939, norm:1.5070, tok/sec: 105075.87, flops:110.29, batch-reuse:1
@ 2658 train 4.7444 , allloss: 4.7717, dt: 1262.78ms, fracRes: 0.3825, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3542, norm(y): 0.9938, norm:1.4187, tok/sec: 103796.19, flops:108.95, batch-reuse:1
@ 2659 train 4.7031 , allloss: 4.7310, dt: 1253.89ms, fracRes: 0.3781, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3512, norm(y): 0.9937, norm:1.5414, tok/sec: 104532.47, flops:109.72, batch-reuse:1
@ 2660 train 4.7662 , allloss: 4.7967, dt: 1260.49ms, fracRes: 0.3841, norm(attn): 0.1875, norm(output): 0.2158, norm(x): 0.3580, norm(y): 0.9938, norm:1.7164, tok/sec: 103984.90, flops:109.15, batch-reuse:1
@ 2661 train 4.7261 , allloss: 4.7527, dt: 1268.83ms, fracRes: 0.3810, norm(attn): 0.1865, norm(output): 0.2139, norm(x): 0.3522, norm(y): 0.9938, norm:1.4227, tok/sec: 103301.09, flops:108.43, batch-reuse:1
@ 2662 train 4.6599 , allloss: 4.6880, dt: 1249.65ms, fracRes: 0.3848, norm(attn): 0.1875, norm(output): 0.2109, norm(x): 0.3530, norm(y): 0.9938, norm:2.0020, tok/sec: 104887.15, flops:110.09, batch-reuse:1
@ 2663 train 4.7506 , allloss: 4.7796, dt: 1275.25ms, fracRes: 0.3838, norm(attn): 0.1875, norm(output): 0.2129, norm(x): 0.3522, norm(y): 0.9937, norm:1.5442, tok/sec: 102781.51, flops:107.88, batch-reuse:1
@ 2664 train 4.7689 , allloss: 4.7958, dt: 1277.61ms, fracRes: 0.3849, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3539, norm(y): 0.9938, norm:1.5272, tok/sec: 102591.67, flops:107.68, batch-reuse:1
@ 2665 train 4.7133 , allloss: 4.7407, dt: 1251.49ms, fracRes: 0.3826, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3526, norm(y): 0.9938, norm:1.5889, tok/sec: 104732.89, flops:109.93, batch-reuse:1
@ 2666 train 4.8171 , allloss: 4.8468, dt: 1256.28ms, fracRes: 0.3849, norm(attn): 0.1885, norm(output): 0.2168, norm(x): 0.3552, norm(y): 0.9938, norm:1.7151, tok/sec: 104333.77, flops:109.51, batch-reuse:1
@ 2667 train 4.7851 , allloss: 4.8139, dt: 1274.21ms, fracRes: 0.3865, norm(attn): 0.1865, norm(output): 0.2158, norm(x): 0.3561, norm(y): 0.9938, norm:1.4713, tok/sec: 102864.94, flops:107.97, batch-reuse:1
@ 2668 train 4.7717 , allloss: 4.7982, dt: 1257.82ms, fracRes: 0.3888, norm(attn): 0.1855, norm(output): 0.2148, norm(x): 0.3572, norm(y): 0.9939, norm:1.5815, tok/sec: 104205.28, flops:109.38, batch-reuse:1
@ 2669 train 4.7090 , allloss: 4.7390, dt: 1300.30ms, fracRes: 0.3850, norm(attn): 0.1875, norm(output): 0.2158, norm(x): 0.3551, norm(y): 0.9938, norm:1.7210, tok/sec: 100801.60, flops:105.80, batch-reuse:1
@ 2670 train 4.7145 , allloss: 4.7462, dt: 1250.88ms, fracRes: 0.3837, norm(attn): 0.1895, norm(output): 0.2158, norm(x): 0.3540, norm(y): 0.9937, norm:1.5478, tok/sec: 104783.59, flops:109.98, batch-reuse:1
@ 2671 train 4.7510 , allloss: 4.7789, dt: 1277.50ms, fracRes: 0.3852, norm(attn): 0.1865, norm(output): 0.2148, norm(x): 0.3546, norm(y): 0.9938, norm:1.5364, tok/sec: 102600.15, flops:107.69, batch-reuse:1
@ 2672 train 4.6840 , allloss: 4.7129, dt: 1289.88ms, fracRes: 0.3826, norm(attn): 0.1885, norm(output): 0.2129, norm(x): 0.3529, norm(y): 0.9937, norm:1.4982, tok/sec: 101615.84, flops:106.66, batch-reuse:1
@ 2673 train 4.6417 , allloss: 4.6696, dt: 1274.11ms, fracRes: 0.3828, norm(attn): 0.1895, norm(output): 0.2148, norm(x): 0.3548, norm(y): 0.9937, norm:1.5210, tok/sec: 102873.04, flops:107.98, batch-reuse:1
@ 2674 train 4.8075 , allloss: 4.8332, dt: 1255.06ms, fracRes: 0.3862, norm(attn): 0.1875, norm(output): 0.2158, norm(x): 0.3570, norm(y): 0.9938, norm:1.9369, tok/sec: 104434.43, flops:109.62, batch-reuse:1
@ 2675 train 4.7732 , allloss: 4.8021, dt: 1263.19ms, fracRes: 0.3851, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3557, norm(y): 0.9938, norm:1.9210, tok/sec: 103763.05, flops:108.91, batch-reuse:1
@ 2676 train 4.6951 , allloss: 4.7233, dt: 1277.45ms, fracRes: 0.3847, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3534, norm(y): 0.9937, norm:1.6223, tok/sec: 102604.34, flops:107.70, batch-reuse:1
@ 2677 train 4.6987 , allloss: 4.7290, dt: 1288.49ms, fracRes: 0.3842, norm(attn): 0.1895, norm(output): 0.2148, norm(x): 0.3525, norm(y): 0.9937, norm:1.3191, tok/sec: 101725.57, flops:106.77, batch-reuse:1
@ 2678 train 4.7962 , allloss: 4.8243, dt: 1276.80ms, fracRes: 0.3845, norm(attn): 0.1875, norm(output): 0.2129, norm(x): 0.3522, norm(y): 0.9938, norm:1.7294, tok/sec: 102656.28, flops:107.75, batch-reuse:1
@ 2679 train 4.7518 , allloss: 4.7794, dt: 1256.71ms, fracRes: 0.3835, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3528, norm(y): 0.9938, norm:1.5079, tok/sec: 104297.86, flops:109.47, batch-reuse:1
@ 2680 train 4.6338 , allloss: 4.6616, dt: 1268.21ms, fracRes: 0.3814, norm(attn): 0.1914, norm(output): 0.2139, norm(x): 0.3513, norm(y): 0.9937, norm:1.5554, tok/sec: 103351.74, flops:108.48, batch-reuse:1
@ 2681 train 4.7398 , allloss: 4.7681, dt: 1267.56ms, fracRes: 0.3827, norm(attn): 0.1865, norm(output): 0.2158, norm(x): 0.3539, norm(y): 0.9937, norm:1.4593, tok/sec: 103404.62, flops:108.54, batch-reuse:1
@ 2682 train 4.6027 , allloss: 4.6325, dt: 1279.22ms, fracRes: 0.3810, norm(attn): 0.1875, norm(output): 0.2148, norm(x): 0.3505, norm(y): 0.9939, norm:1.5432, tok/sec: 102462.09, flops:107.55, batch-reuse:1
@ 2683 train 4.6807 , allloss: 4.7084, dt: 1270.02ms, fracRes: 0.3797, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3534, norm(y): 0.9938, norm:1.5613, tok/sec: 103205.02, flops:108.33, batch-reuse:1
@ 2684 train 4.7290 , allloss: 4.7575, dt: 1254.71ms, fracRes: 0.3800, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3527, norm(y): 0.9937, norm:1.4744, tok/sec: 104464.32, flops:109.65, batch-reuse:1
@ 2685 train 4.7201 , allloss: 4.7496, dt: 1256.96ms, fracRes: 0.3813, norm(attn): 0.1895, norm(output): 0.2158, norm(x): 0.3524, norm(y): 0.9936, norm:1.5156, tok/sec: 104277.21, flops:109.45, batch-reuse:1
@ 2686 train 4.7896 , allloss: 4.8171, dt: 1284.01ms, fracRes: 0.3817, norm(attn): 0.1895, norm(output): 0.2158, norm(x): 0.3547, norm(y): 0.9937, norm:1.4385, tok/sec: 102080.40, flops:107.15, batch-reuse:1
@ 2687 train 4.7084 , allloss: 4.7462, dt: 1284.71ms, fracRes: 0.3859, norm(attn): 0.1875, norm(output): 0.2168, norm(x): 0.3606, norm(y): 0.9938, norm:1.6158, tok/sec: 102024.78, flops:107.09, batch-reuse:1
@ 2688 train 4.6964 , allloss: 4.7243, dt: 1259.10ms, fracRes: 0.3852, norm(attn): 0.1895, norm(output): 0.2178, norm(x): 0.3575, norm(y): 0.9937, norm:1.6922, tok/sec: 104099.68, flops:109.27, batch-reuse:1
@ 2689 train 4.7931 , allloss: 4.8199, dt: 1276.12ms, fracRes: 0.3866, norm(attn): 0.1865, norm(output): 0.2178, norm(x): 0.3609, norm(y): 0.9938, norm:1.9829, tok/sec: 102711.02, flops:107.81, batch-reuse:1
@ 2690 train 4.7376 , allloss: 4.7648, dt: 1257.04ms, fracRes: 0.3867, norm(attn): 0.1865, norm(output): 0.2168, norm(x): 0.3591, norm(y): 0.9938, norm:1.5709, tok/sec: 104270.15, flops:109.45, batch-reuse:1
@ 2691 train 4.7523 , allloss: 4.7811, dt: 1271.71ms, fracRes: 0.3832, norm(attn): 0.1875, norm(output): 0.2168, norm(x): 0.3566, norm(y): 0.9937, norm:1.7406, tok/sec: 103067.41, flops:108.18, batch-reuse:1
@ 2692 train 4.6082 , allloss: 4.6360, dt: 1285.86ms, fracRes: 0.3837, norm(attn): 0.1895, norm(output): 0.2158, norm(x): 0.3581, norm(y): 0.9937, norm:1.7590, tok/sec: 101933.48, flops:106.99, batch-reuse:1
@ 2693 train 4.7864 , allloss: 4.8140, dt: 1274.02ms, fracRes: 0.3826, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3586, norm(y): 0.9937, norm:1.5562, tok/sec: 102881.01, flops:107.99, batch-reuse:1
@ 2694 train 4.7434 , allloss: 4.7706, dt: 1270.96ms, fracRes: 0.3831, norm(attn): 0.1865, norm(output): 0.2178, norm(x): 0.3561, norm(y): 0.9938, norm:1.7494, tok/sec: 103128.51, flops:108.25, batch-reuse:1
@ 2695 train 4.7056 , allloss: 4.7327, dt: 1251.98ms, fracRes: 0.3879, norm(attn): 0.1865, norm(output): 0.2168, norm(x): 0.3601, norm(y): 0.9938, norm:1.7061, tok/sec: 104691.40, flops:109.89, batch-reuse:1
@ 2696 train 4.6864 , allloss: 4.7141, dt: 1280.48ms, fracRes: 0.3849, norm(attn): 0.1875, norm(output): 0.2168, norm(x): 0.3572, norm(y): 0.9937, norm:1.6122, tok/sec: 102361.98, flops:107.44, batch-reuse:1
@ 2697 train 4.6345 , allloss: 4.6633, dt: 1291.70ms, fracRes: 0.3867, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3596, norm(y): 0.9938, norm:1.3890, tok/sec: 101472.49, flops:106.51, batch-reuse:1
@ 2698 train 4.6529 , allloss: 4.6805, dt: 1280.36ms, fracRes: 0.3867, norm(attn): 0.1875, norm(output): 0.2168, norm(x): 0.3592, norm(y): 0.9938, norm:1.6650, tok/sec: 102371.00, flops:107.45, batch-reuse:1
@ 2699 train 4.7281 , allloss: 4.7571, dt: 1268.99ms, fracRes: 0.3832, norm(attn): 0.1895, norm(output): 0.2158, norm(x): 0.3554, norm(y): 0.9937, norm:1.7101, tok/sec: 103288.19, flops:108.41, batch-reuse:1
@ 2700 train 4.6426 , allloss: 4.6705, dt: 1256.21ms, fracRes: 0.3863, norm(attn): 0.1914, norm(output): 0.2168, norm(x): 0.3577, norm(y): 0.9937, norm:1.9365, tok/sec: 104339.49, flops:109.52, batch-reuse:1
@ 2701 train 4.6026 , allloss: 4.6336, dt: 1282.40ms, fracRes: 0.3855, norm(attn): 0.1895, norm(output): 0.2148, norm(x): 0.3556, norm(y): 0.9937, norm:1.3260, tok/sec: 102208.31, flops:107.28, batch-reuse:1
@ 2702 train 4.7286 , allloss: 4.7571, dt: 1283.54ms, fracRes: 0.3868, norm(attn): 0.1885, norm(output): 0.2148, norm(x): 0.3570, norm(y): 0.9937, norm:1.4919, tok/sec: 102117.94, flops:107.19, batch-reuse:1
@ 2703 train 4.7126 , allloss: 4.7404, dt: 1277.70ms, fracRes: 0.3866, norm(attn): 0.1875, norm(output): 0.2158, norm(x): 0.3577, norm(y): 0.9938, norm:1.6480, tok/sec: 102584.57, flops:107.68, batch-reuse:1
@ 2704 train 4.8388 , allloss: 4.8742, dt: 1271.57ms, fracRes: 0.3879, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3621, norm(y): 0.9938, norm:1.5626, tok/sec: 103078.53, flops:108.19, batch-reuse:1
@ 2705 train 4.6579 , allloss: 4.6855, dt: 1291.50ms, fracRes: 0.3842, norm(attn): 0.1895, norm(output): 0.2168, norm(x): 0.3567, norm(y): 0.9937, norm:1.5633, tok/sec: 101488.05, flops:106.53, batch-reuse:1
@ 2706 train 4.6312 , allloss: 4.6587, dt: 1274.47ms, fracRes: 0.3844, norm(attn): 0.1885, norm(output): 0.2158, norm(x): 0.3568, norm(y): 0.9937, norm:1.3498, tok/sec: 102844.56, flops:107.95, batch-reuse:1
@ 2707 train 4.6949 , allloss: 4.7241, dt: 1258.96ms, fracRes: 0.3827, norm(attn): 0.1895, norm(output): 0.2178, norm(x): 0.3555, norm(y): 0.9937, norm:1.7232, tok/sec: 104111.63, flops:109.28, batch-reuse:1
@ 2708 train 4.6408 , allloss: 4.6707, dt: 1260.40ms, fracRes: 0.3846, norm(attn): 0.1895, norm(output): 0.2168, norm(x): 0.3565, norm(y): 0.9937, norm:1.4340, tok/sec: 103992.06, flops:109.15, batch-reuse:1
@ 2709 train 4.6452 , allloss: 4.6753, dt: 1281.01ms, fracRes: 0.3869, norm(attn): 0.1875, norm(output): 0.2158, norm(x): 0.3591, norm(y): 0.9937, norm:1.7876, tok/sec: 102319.31, flops:107.40, batch-reuse:1
@ 2710 train 4.7968 , allloss: 4.8247, dt: 1267.16ms, fracRes: 0.3865, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3603, norm(y): 0.9937, norm:1.5254, tok/sec: 103437.79, flops:108.57, batch-reuse:1
@ 2711 train 4.7978 , allloss: 4.8244, dt: 1260.07ms, fracRes: 0.3830, norm(attn): 0.1875, norm(output): 0.2168, norm(x): 0.3541, norm(y): 0.9937, norm:1.5927, tok/sec: 104019.47, flops:109.18, batch-reuse:1
@ 2712 train 4.7301 , allloss: 4.7579, dt: 1267.02ms, fracRes: 0.3867, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3599, norm(y): 0.9936, norm:1.8963, tok/sec: 103449.04, flops:108.58, batch-reuse:1
@ 2713 train 4.6984 , allloss: 4.7256, dt: 1277.30ms, fracRes: 0.3862, norm(attn): 0.1904, norm(output): 0.2178, norm(x): 0.3608, norm(y): 0.9936, norm:1.6562, tok/sec: 102616.83, flops:107.71, batch-reuse:1
@ 2714 train 4.7332 , allloss: 4.7606, dt: 1248.63ms, fracRes: 0.3877, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3624, norm(y): 0.9937, norm:1.6521, tok/sec: 104972.67, flops:110.18, batch-reuse:1
@ 2715 train 4.6719 , allloss: 4.7016, dt: 1264.17ms, fracRes: 0.3872, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3603, norm(y): 0.9937, norm:1.6417, tok/sec: 103681.99, flops:108.83, batch-reuse:1
@ 2716 train 4.6333 , allloss: 4.6620, dt: 1263.28ms, fracRes: 0.3853, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3589, norm(y): 0.9937, norm:1.6699, tok/sec: 103755.04, flops:108.90, batch-reuse:1
@ 2717 train 4.6888 , allloss: 4.7205, dt: 1244.67ms, fracRes: 0.3840, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3591, norm(y): 0.9936, norm:1.4192, tok/sec: 105306.57, flops:110.53, batch-reuse:1
@ 2718 train 4.6020 , allloss: 4.6301, dt: 1273.21ms, fracRes: 0.3835, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3577, norm(y): 0.9937, norm:1.5726, tok/sec: 102946.09, flops:108.06, batch-reuse:1
@ 2719 train 4.7392 , allloss: 4.7672, dt: 1253.87ms, fracRes: 0.3837, norm(attn): 0.1885, norm(output): 0.2168, norm(x): 0.3581, norm(y): 0.9937, norm:1.7731, tok/sec: 104533.72, flops:109.72, batch-reuse:1
@ 2720 train 4.7121 , allloss: 4.7396, dt: 1247.96ms, fracRes: 0.3832, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3588, norm(y): 0.9937, norm:1.4711, tok/sec: 105028.74, flops:110.24, batch-reuse:1
@ 2721 train 4.6134 , allloss: 4.6423, dt: 1262.66ms, fracRes: 0.3843, norm(attn): 0.1895, norm(output): 0.2168, norm(x): 0.3580, norm(y): 0.9937, norm:1.6668, tok/sec: 103806.17, flops:108.96, batch-reuse:1
@ 2722 train 4.6614 , allloss: 4.6885, dt: 1263.92ms, fracRes: 0.3857, norm(attn): 0.1875, norm(output): 0.2168, norm(x): 0.3579, norm(y): 0.9938, norm:1.6430, tok/sec: 103702.47, flops:108.85, batch-reuse:1
@ 2723 train 4.7371 , allloss: 4.7654, dt: 1252.43ms, fracRes: 0.3870, norm(attn): 0.1895, norm(output): 0.2178, norm(x): 0.3593, norm(y): 0.9937, norm:1.8998, tok/sec: 104654.37, flops:109.85, batch-reuse:1
@ 2724 train 4.6364 , allloss: 4.6669, dt: 1253.98ms, fracRes: 0.3859, norm(attn): 0.1885, norm(output): 0.2168, norm(x): 0.3578, norm(y): 0.9937, norm:1.4470, tok/sec: 104525.06, flops:109.71, batch-reuse:1
@ 2725 train 4.6378 , allloss: 4.6650, dt: 1269.96ms, fracRes: 0.3839, norm(attn): 0.1934, norm(output): 0.2158, norm(x): 0.3550, norm(y): 0.9936, norm:1.5067, tok/sec: 103209.48, flops:108.33, batch-reuse:1
@ 2726 train 4.6320 , allloss: 4.6604, dt: 1246.85ms, fracRes: 0.3828, norm(attn): 0.1895, norm(output): 0.2168, norm(x): 0.3558, norm(y): 0.9938, norm:1.6300, tok/sec: 105122.71, flops:110.34, batch-reuse:1
@ 2727 train 4.7138 , allloss: 4.7489, dt: 1261.21ms, fracRes: 0.3848, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3604, norm(y): 0.9938, norm:1.4851, tok/sec: 103925.76, flops:109.08, batch-reuse:1
@ 2728 train 4.7245 , allloss: 4.7510, dt: 1278.90ms, fracRes: 0.3828, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3590, norm(y): 0.9937, norm:1.3426, tok/sec: 102488.29, flops:107.57, batch-reuse:1
@ 2729 train 4.7152 , allloss: 4.7428, dt: 1254.47ms, fracRes: 0.3839, norm(attn): 0.1895, norm(output): 0.2178, norm(x): 0.3619, norm(y): 0.9937, norm:1.6509, tok/sec: 104484.10, flops:109.67, batch-reuse:1
@ 2730 train 4.7009 , allloss: 4.7281, dt: 1257.04ms, fracRes: 0.3804, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3592, norm(y): 0.9937, norm:1.5462, tok/sec: 104270.47, flops:109.45, batch-reuse:1
@ 2731 train 4.6340 , allloss: 4.6627, dt: 1258.65ms, fracRes: 0.3822, norm(attn): 0.1895, norm(output): 0.2178, norm(x): 0.3596, norm(y): 0.9936, norm:1.6976, tok/sec: 104137.07, flops:109.31, batch-reuse:1
@ 2732 train 4.6584 , allloss: 4.6885, dt: 1278.03ms, fracRes: 0.3874, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3631, norm(y): 0.9936, norm:1.5751, tok/sec: 102558.10, flops:107.65, batch-reuse:1
@ 2733 train 4.7032 , allloss: 4.7316, dt: 1277.60ms, fracRes: 0.3851, norm(attn): 0.1895, norm(output): 0.2168, norm(x): 0.3590, norm(y): 0.9936, norm:1.5141, tok/sec: 102592.26, flops:107.68, batch-reuse:1
@ 2734 train 4.6242 , allloss: 4.6535, dt: 1253.63ms, fracRes: 0.3870, norm(attn): 0.1904, norm(output): 0.2168, norm(x): 0.3615, norm(y): 0.9937, norm:1.7087, tok/sec: 104553.92, flops:109.74, batch-reuse:1
@ 2735 train 4.7179 , allloss: 4.7447, dt: 1269.51ms, fracRes: 0.3895, norm(attn): 0.1865, norm(output): 0.2178, norm(x): 0.3633, norm(y): 0.9937, norm:1.7099, tok/sec: 103246.31, flops:108.37, batch-reuse:1
@ 2736 train 4.7383 , allloss: 4.7655, dt: 1287.14ms, fracRes: 0.3886, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3641, norm(y): 0.9936, norm:1.5080, tok/sec: 101831.96, flops:106.89, batch-reuse:1
@ 2737 train 4.7113 , allloss: 4.7380, dt: 1249.70ms, fracRes: 0.3871, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3606, norm(y): 0.9936, norm:1.4613, tok/sec: 104883.03, flops:110.09, batch-reuse:1
@ 2738 train 4.5594 , allloss: 4.5904, dt: 1262.53ms, fracRes: 0.3921, norm(attn): 0.1904, norm(output): 0.2197, norm(x): 0.3665, norm(y): 0.9936, norm:2.1118, tok/sec: 103816.83, flops:108.97, batch-reuse:1
@ 2739 train 4.6775 , allloss: 4.7060, dt: 1269.30ms, fracRes: 0.3881, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3613, norm(y): 0.9937, norm:1.8622, tok/sec: 103262.93, flops:108.39, batch-reuse:1
@ 2740 train 4.5213 , allloss: 4.5492, dt: 1270.08ms, fracRes: 0.3871, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3601, norm(y): 0.9936, norm:1.5759, tok/sec: 103199.44, flops:108.32, batch-reuse:1
@ 2741 train 4.6129 , allloss: 4.6407, dt: 1257.94ms, fracRes: 0.3871, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3606, norm(y): 0.9936, norm:1.5410, tok/sec: 104195.68, flops:109.37, batch-reuse:1
@ 2742 train 4.6091 , allloss: 4.6372, dt: 1258.22ms, fracRes: 0.3878, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3632, norm(y): 0.9937, norm:1.6913, tok/sec: 104172.27, flops:109.34, batch-reuse:1
@ 2743 train 4.5739 , allloss: 4.6004, dt: 1272.59ms, fracRes: 0.3882, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3629, norm(y): 0.9937, norm:1.6683, tok/sec: 102996.10, flops:108.11, batch-reuse:1
@ 2744 train 4.6002 , allloss: 4.6291, dt: 1304.20ms, fracRes: 0.3889, norm(attn): 0.1904, norm(output): 0.2188, norm(x): 0.3616, norm(y): 0.9937, norm:1.4833, tok/sec: 100499.65, flops:105.49, batch-reuse:1
@ 2745 train 4.5487 , allloss: 4.5776, dt: 1253.45ms, fracRes: 0.3891, norm(attn): 0.1904, norm(output): 0.2178, norm(x): 0.3632, norm(y): 0.9937, norm:1.6935, tok/sec: 104569.12, flops:109.76, batch-reuse:1
@ 2746 train 4.5427 , allloss: 4.5705, dt: 1286.23ms, fracRes: 0.3872, norm(attn): 0.1914, norm(output): 0.2178, norm(x): 0.3595, norm(y): 0.9936, norm:1.5411, tok/sec: 101904.06, flops:106.96, batch-reuse:1
@ 2747 train 4.5790 , allloss: 4.6184, dt: 1272.52ms, fracRes: 0.3881, norm(attn): 0.1895, norm(output): 0.2178, norm(x): 0.3620, norm(y): 0.9936, norm:1.5762, tok/sec: 103002.07, flops:108.11, batch-reuse:1
@ 2748 train 4.6197 , allloss: 4.6461, dt: 1271.74ms, fracRes: 0.3869, norm(attn): 0.1904, norm(output): 0.2178, norm(x): 0.3575, norm(y): 0.9937, norm:1.5035, tok/sec: 103065.19, flops:108.18, batch-reuse:1
@ 2749 train 4.5809 , allloss: 4.6079, dt: 1279.11ms, fracRes: 0.3873, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3599, norm(y): 0.9938, norm:1.6951, tok/sec: 102471.27, flops:107.56, batch-reuse:1
@ 2750 train 4.5708 , allloss: 4.6030, dt: 1278.04ms, fracRes: 0.3912, norm(attn): 0.1914, norm(output): 0.2188, norm(x): 0.3694, norm(y): 0.9937, norm:2.1756, tok/sec: 102557.03, flops:107.65, batch-reuse:1
@ 2751 train 4.6438 , allloss: 4.6719, dt: 1266.87ms, fracRes: 0.3876, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3628, norm(y): 0.9938, norm:1.6954, tok/sec: 103461.65, flops:108.60, batch-reuse:1
@ 2752 train 4.6001 , allloss: 4.6278, dt: 1278.16ms, fracRes: 0.3863, norm(attn): 0.1895, norm(output): 0.2178, norm(x): 0.3607, norm(y): 0.9937, norm:1.6835, tok/sec: 102547.29, flops:107.64, batch-reuse:1
@ 2753 train 4.6067 , allloss: 4.6356, dt: 1263.91ms, fracRes: 0.3877, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3649, norm(y): 0.9936, norm:1.5117, tok/sec: 103703.80, flops:108.85, batch-reuse:1
@ 2754 train 4.5767 , allloss: 4.6068, dt: 1287.54ms, fracRes: 0.3867, norm(attn): 0.1895, norm(output): 0.2178, norm(x): 0.3645, norm(y): 0.9937, norm:1.6414, tok/sec: 101800.20, flops:106.85, batch-reuse:1
@ 2755 train 4.6002 , allloss: 4.6283, dt: 1258.51ms, fracRes: 0.3867, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3640, norm(y): 0.9938, norm:1.6784, tok/sec: 104148.55, flops:109.32, batch-reuse:1
@ 2756 train 4.5525 , allloss: 4.5800, dt: 1280.31ms, fracRes: 0.3871, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3647, norm(y): 0.9938, norm:1.5656, tok/sec: 102375.12, flops:107.46, batch-reuse:1
@ 2757 train 4.5938 , allloss: 4.6261, dt: 1279.21ms, fracRes: 0.3835, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3614, norm(y): 0.9936, norm:1.5742, tok/sec: 102463.63, flops:107.55, batch-reuse:1
@ 2758 train 4.5800 , allloss: 4.6114, dt: 1258.19ms, fracRes: 0.3825, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3608, norm(y): 0.9936, norm:1.4916, tok/sec: 104174.70, flops:109.35, batch-reuse:1
@ 2759 train 4.5907 , allloss: 4.6177, dt: 1259.88ms, fracRes: 0.3820, norm(attn): 0.1865, norm(output): 0.2188, norm(x): 0.3623, norm(y): 0.9938, norm:1.5111, tok/sec: 104035.44, flops:109.20, batch-reuse:1
@ 2760 train 4.5072 , allloss: 4.5349, dt: 1265.42ms, fracRes: 0.3817, norm(attn): 0.1904, norm(output): 0.2188, norm(x): 0.3611, norm(y): 0.9937, norm:1.6291, tok/sec: 103579.84, flops:108.72, batch-reuse:1
@ 2761 train 4.6480 , allloss: 4.6782, dt: 1276.79ms, fracRes: 0.3814, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3605, norm(y): 0.9938, norm:1.6624, tok/sec: 102657.09, flops:107.75, batch-reuse:1
@ 2762 train 4.6376 , allloss: 4.6672, dt: 1248.40ms, fracRes: 0.3831, norm(attn): 0.1875, norm(output): 0.2188, norm(x): 0.3636, norm(y): 0.9937, norm:1.8002, tok/sec: 104991.97, flops:110.20, batch-reuse:1
@ 2763 train 4.5892 , allloss: 4.6188, dt: 1249.58ms, fracRes: 0.3869, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3654, norm(y): 0.9936, norm:1.6757, tok/sec: 104893.19, flops:110.10, batch-reuse:1
@ 2764 train 4.5484 , allloss: 4.5814, dt: 1236.48ms, fracRes: 0.3851, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3632, norm(y): 0.9936, norm:1.5599, tok/sec: 106004.06, flops:111.27, batch-reuse:1
@ 2765 train 4.6349 , allloss: 4.6625, dt: 1272.28ms, fracRes: 0.3863, norm(attn): 0.1904, norm(output): 0.2188, norm(x): 0.3658, norm(y): 0.9936, norm:1.6501, tok/sec: 103021.16, flops:108.13, batch-reuse:1
@ 2766 train 4.5942 , allloss: 4.6221, dt: 1262.74ms, fracRes: 0.3863, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3652, norm(y): 0.9937, norm:1.6363, tok/sec: 103799.37, flops:108.95, batch-reuse:1
@ 2767 train 4.5920 , allloss: 4.6199, dt: 1274.65ms, fracRes: 0.3865, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3638, norm(y): 0.9936, norm:1.8147, tok/sec: 102829.77, flops:107.93, batch-reuse:1
@ 2768 train 4.5640 , allloss: 4.5932, dt: 1245.96ms, fracRes: 0.3884, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3642, norm(y): 0.9936, norm:1.6035, tok/sec: 105197.40, flops:110.42, batch-reuse:1
@ 2769 train 4.6129 , allloss: 4.6410, dt: 1242.73ms, fracRes: 0.3884, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3678, norm(y): 0.9935, norm:1.5867, tok/sec: 105471.05, flops:110.71, batch-reuse:1
@ 2770 train 4.5665 , allloss: 4.5955, dt: 1244.83ms, fracRes: 0.3870, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3632, norm(y): 0.9937, norm:1.4677, tok/sec: 105293.26, flops:110.52, batch-reuse:1
@ 2771 train 4.6884 , allloss: 4.7150, dt: 1263.84ms, fracRes: 0.3876, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3649, norm(y): 0.9937, norm:1.5487, tok/sec: 103709.04, flops:108.86, batch-reuse:1
@ 2772 train 4.5200 , allloss: 4.5460, dt: 1266.32ms, fracRes: 0.3882, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3651, norm(y): 0.9936, norm:1.7141, tok/sec: 103506.01, flops:108.64, batch-reuse:1
@ 2773 train 4.5550 , allloss: 4.5813, dt: 1276.57ms, fracRes: 0.3880, norm(attn): 0.1904, norm(output): 0.2188, norm(x): 0.3657, norm(y): 0.9936, norm:1.5287, tok/sec: 102675.21, flops:107.77, batch-reuse:1
@ 2774 train 4.4995 , allloss: 4.5284, dt: 1276.72ms, fracRes: 0.3869, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3643, norm(y): 0.9936, norm:1.5521, tok/sec: 102663.13, flops:107.76, batch-reuse:1
@ 2775 train 4.5940 , allloss: 4.6231, dt: 1243.56ms, fracRes: 0.3860, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3644, norm(y): 0.9936, norm:1.5461, tok/sec: 105401.00, flops:110.63, batch-reuse:1
@ 2776 train 4.7071 , allloss: 4.7363, dt: 1269.20ms, fracRes: 0.3858, norm(attn): 0.1914, norm(output): 0.2188, norm(x): 0.3653, norm(y): 0.9935, norm:1.8236, tok/sec: 103271.52, flops:108.40, batch-reuse:1
@ 2777 train 4.5561 , allloss: 4.5827, dt: 1247.33ms, fracRes: 0.3830, norm(attn): 0.1914, norm(output): 0.2197, norm(x): 0.3660, norm(y): 0.9935, norm:1.6797, tok/sec: 105082.42, flops:110.30, batch-reuse:1
@ 2778 train 4.6995 , allloss: 4.7275, dt: 1265.41ms, fracRes: 0.3842, norm(attn): 0.1885, norm(output): 0.2207, norm(x): 0.3680, norm(y): 0.9935, norm:1.6925, tok/sec: 103580.49, flops:108.72, batch-reuse:1
@ 2779 train 4.5456 , allloss: 4.5730, dt: 1246.12ms, fracRes: 0.3850, norm(attn): 0.1904, norm(output): 0.2197, norm(x): 0.3677, norm(y): 0.9935, norm:1.5556, tok/sec: 105184.44, flops:110.40, batch-reuse:1
@ 2780 train 4.4546 , allloss: 4.4840, dt: 1263.94ms, fracRes: 0.3841, norm(attn): 0.1924, norm(output): 0.2188, norm(x): 0.3648, norm(y): 0.9936, norm:1.9736, tok/sec: 103701.33, flops:108.85, batch-reuse:1
@ 2781 train 4.4227 , allloss: 4.4492, dt: 1279.14ms, fracRes: 0.3827, norm(attn): 0.1924, norm(output): 0.2188, norm(x): 0.3629, norm(y): 0.9936, norm:1.7723, tok/sec: 102468.75, flops:107.55, batch-reuse:1
@ 2782 train 4.5845 , allloss: 4.6137, dt: 1296.00ms, fracRes: 0.3870, norm(attn): 0.1875, norm(output): 0.2197, norm(x): 0.3696, norm(y): 0.9937, norm:1.5782, tok/sec: 101136.12, flops:106.16, batch-reuse:1
@ 2783 train 4.5606 , allloss: 4.5876, dt: 1234.54ms, fracRes: 0.3861, norm(attn): 0.1875, norm(output): 0.2188, norm(x): 0.3635, norm(y): 0.9937, norm:1.5474, tok/sec: 106170.68, flops:111.44, batch-reuse:1
@ 2784 train 4.6276 , allloss: 4.6531, dt: 1251.20ms, fracRes: 0.3881, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3675, norm(y): 0.9936, norm:1.8071, tok/sec: 104756.82, flops:109.96, batch-reuse:1
@ 2785 train 4.7177 , allloss: 4.7463, dt: 1274.74ms, fracRes: 0.3875, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3640, norm(y): 0.9935, norm:1.6928, tok/sec: 102822.54, flops:107.93, batch-reuse:1
@ 2786 train 4.6229 , allloss: 4.6498, dt: 1274.86ms, fracRes: 0.3877, norm(attn): 0.1904, norm(output): 0.2188, norm(x): 0.3662, norm(y): 0.9935, norm:1.6577, tok/sec: 102812.67, flops:107.92, batch-reuse:1
@ 2787 train 4.7223 , allloss: 4.7508, dt: 1263.24ms, fracRes: 0.3907, norm(attn): 0.1875, norm(output): 0.2188, norm(x): 0.3679, norm(y): 0.9937, norm:1.4809, tok/sec: 103758.82, flops:108.91, batch-reuse:1
@ 2788 train 4.7217 , allloss: 4.7486, dt: 1285.47ms, fracRes: 0.3874, norm(attn): 0.1885, norm(output): 0.2178, norm(x): 0.3630, norm(y): 0.9937, norm:1.6917, tok/sec: 101963.88, flops:107.02, batch-reuse:1
@ 2789 train 4.7407 , allloss: 4.7677, dt: 1251.12ms, fracRes: 0.3869, norm(attn): 0.1904, norm(output): 0.2188, norm(x): 0.3638, norm(y): 0.9935, norm:1.5747, tok/sec: 104763.84, flops:109.96, batch-reuse:1
@ 2790 train 4.8138 , allloss: 4.8428, dt: 1263.15ms, fracRes: 0.3905, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3689, norm(y): 0.9935, norm:1.5737, tok/sec: 103766.22, flops:108.92, batch-reuse:1
@ 2791 train 4.7041 , allloss: 4.7310, dt: 1284.08ms, fracRes: 0.3863, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3643, norm(y): 0.9935, norm:1.5989, tok/sec: 102074.52, flops:107.14, batch-reuse:1
@ 2792 train 5.3476 , allloss: 5.3766, dt: 1292.04ms, fracRes: 0.3941, norm(attn): 0.1826, norm(output): 0.2197, norm(x): 0.3730, norm(y): 0.9936, norm:2.2203, tok/sec: 101445.73, flops:106.48, batch-reuse:1
@ 2793 train 4.7681 , allloss: 4.7952, dt: 1272.38ms, fracRes: 0.3863, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3642, norm(y): 0.9936, norm:1.9225, tok/sec: 103012.97, flops:108.13, batch-reuse:1
@ 2794 train 4.6921 , allloss: 4.7194, dt: 1253.55ms, fracRes: 0.3889, norm(attn): 0.1904, norm(output): 0.2197, norm(x): 0.3680, norm(y): 0.9934, norm:1.7989, tok/sec: 104560.35, flops:109.75, batch-reuse:1
@ 2795 train 4.6863 , allloss: 4.7129, dt: 1264.44ms, fracRes: 0.3899, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3671, norm(y): 0.9935, norm:1.7319, tok/sec: 103660.29, flops:108.81, batch-reuse:1
@ 2796 train 4.8118 , allloss: 4.8375, dt: 1252.19ms, fracRes: 0.3896, norm(attn): 0.1875, norm(output): 0.2197, norm(x): 0.3687, norm(y): 0.9936, norm:1.6034, tok/sec: 104674.42, flops:109.87, batch-reuse:1
@ 2797 train 4.6916 , allloss: 4.7184, dt: 1260.87ms, fracRes: 0.3895, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3676, norm(y): 0.9937, norm:1.7730, tok/sec: 103953.29, flops:109.11, batch-reuse:1
@ 2798 train 4.7177 , allloss: 4.7452, dt: 1269.83ms, fracRes: 0.3903, norm(attn): 0.1885, norm(output): 0.2197, norm(x): 0.3700, norm(y): 0.9936, norm:1.7077, tok/sec: 103220.49, flops:108.34, batch-reuse:1
@ 2799 train 4.7081 , allloss: 4.7388, dt: 1252.85ms, fracRes: 0.3909, norm(attn): 0.1875, norm(output): 0.2188, norm(x): 0.3694, norm(y): 0.9936, norm:1.6094, tok/sec: 104618.71, flops:109.81, batch-reuse:1
@ 2800 train 4.9059 , allloss: 4.9340, dt: 1256.15ms, fracRes: 0.3942, norm(attn): 0.1855, norm(output): 0.2207, norm(x): 0.3761, norm(y): 0.9935, norm:2.0588, tok/sec: 104344.23, flops:109.52, batch-reuse:1
@ 2801 train 4.7992 , allloss: 4.8359, dt: 1257.52ms, fracRes: 0.3893, norm(attn): 0.1895, norm(output): 0.2207, norm(x): 0.3695, norm(y): 0.9935, norm:2.8374, tok/sec: 104230.73, flops:109.40, batch-reuse:1
@ 2802 train 4.7126 , allloss: 4.7486, dt: 1268.41ms, fracRes: 0.3862, norm(attn): 0.1904, norm(output): 0.2188, norm(x): 0.3675, norm(y): 0.9935, norm:1.5353, tok/sec: 103335.29, flops:108.46, batch-reuse:1
@ 2803 train 4.6875 , allloss: 4.7251, dt: 1249.77ms, fracRes: 0.3878, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3682, norm(y): 0.9936, norm:1.7839, tok/sec: 104876.98, flops:110.08, batch-reuse:1
@ 2804 train 4.7971 , allloss: 4.8329, dt: 1268.94ms, fracRes: 0.3910, norm(attn): 0.1895, norm(output): 0.2207, norm(x): 0.3739, norm(y): 0.9935, norm:2.0178, tok/sec: 103292.38, flops:108.42, batch-reuse:1
@ 2805 train 4.6110 , allloss: 4.6542, dt: 1287.94ms, fracRes: 0.3865, norm(attn): 0.1943, norm(output): 0.2207, norm(x): 0.3688, norm(y): 0.9934, norm:1.9415, tok/sec: 101768.77, flops:106.82, batch-reuse:1
@ 2806 train 4.6247 , allloss: 4.6528, dt: 1271.50ms, fracRes: 0.3870, norm(attn): 0.1895, norm(output): 0.2207, norm(x): 0.3700, norm(y): 0.9935, norm:1.9672, tok/sec: 103084.30, flops:108.20, batch-reuse:1
@ 2807 train 4.9027 , allloss: 4.9330, dt: 1253.60ms, fracRes: 0.3874, norm(attn): 0.1875, norm(output): 0.2197, norm(x): 0.3701, norm(y): 0.9935, norm:1.5395, tok/sec: 104556.59, flops:109.75, batch-reuse:1
@ 2808 train 4.6855 , allloss: 4.7165, dt: 1252.45ms, fracRes: 0.3871, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3699, norm(y): 0.9935, norm:1.5182, tok/sec: 104652.62, flops:109.85, batch-reuse:1
@ 2809 train 4.6464 , allloss: 4.6728, dt: 1279.90ms, fracRes: 0.3846, norm(attn): 0.1914, norm(output): 0.2207, norm(x): 0.3699, norm(y): 0.9934, norm:1.8356, tok/sec: 102408.03, flops:107.49, batch-reuse:1
@ 2810 train 4.6346 , allloss: 4.6633, dt: 1265.24ms, fracRes: 0.3856, norm(attn): 0.1914, norm(output): 0.2197, norm(x): 0.3692, norm(y): 0.9936, norm:1.5009, tok/sec: 103594.19, flops:108.74, batch-reuse:1
@ 2811 train 4.7197 , allloss: 4.7487, dt: 1292.00ms, fracRes: 0.3889, norm(attn): 0.1885, norm(output): 0.2197, norm(x): 0.3692, norm(y): 0.9937, norm:1.7508, tok/sec: 101449.31, flops:106.48, batch-reuse:1
@ 2812 train 4.7393 , allloss: 4.7662, dt: 1267.16ms, fracRes: 0.3877, norm(attn): 0.1924, norm(output): 0.2197, norm(x): 0.3689, norm(y): 0.9935, norm:1.6013, tok/sec: 103437.91, flops:108.57, batch-reuse:1
@ 2813 train 4.7674 , allloss: 4.7943, dt: 1254.78ms, fracRes: 0.3921, norm(attn): 0.1904, norm(output): 0.2207, norm(x): 0.3751, norm(y): 0.9935, norm:1.6050, tok/sec: 104458.45, flops:109.64, batch-reuse:1
@ 2814 train 4.7291 , allloss: 4.7577, dt: 1252.23ms, fracRes: 0.3938, norm(attn): 0.1865, norm(output): 0.2197, norm(x): 0.3732, norm(y): 0.9936, norm:1.5322, tok/sec: 104671.05, flops:109.87, batch-reuse:1
@ 2815 train 4.7534 , allloss: 4.7796, dt: 1248.37ms, fracRes: 0.3926, norm(attn): 0.1885, norm(output): 0.2197, norm(x): 0.3695, norm(y): 0.9937, norm:1.9999, tok/sec: 104994.88, flops:110.21, batch-reuse:1
@ 2816 train 4.6813 , allloss: 4.7114, dt: 1275.13ms, fracRes: 0.3938, norm(attn): 0.1904, norm(output): 0.2197, norm(x): 0.3734, norm(y): 0.9936, norm:1.8490, tok/sec: 102790.89, flops:107.89, batch-reuse:1
@ 2817 train 4.7615 , allloss: 4.7901, dt: 1254.92ms, fracRes: 0.3911, norm(attn): 0.1875, norm(output): 0.2188, norm(x): 0.3680, norm(y): 0.9936, norm:1.6678, tok/sec: 104446.46, flops:109.63, batch-reuse:1
@ 2818 train 4.7381 , allloss: 4.7684, dt: 1248.24ms, fracRes: 0.3928, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3701, norm(y): 0.9935, norm:1.5946, tok/sec: 105005.05, flops:110.22, batch-reuse:1
@ 2819 train 4.7179 , allloss: 4.7456, dt: 1256.88ms, fracRes: 0.3916, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3701, norm(y): 0.9935, norm:1.6071, tok/sec: 104283.46, flops:109.46, batch-reuse:1
@ 2820 train 4.6930 , allloss: 4.7199, dt: 1242.35ms, fracRes: 0.3933, norm(attn): 0.1865, norm(output): 0.2188, norm(x): 0.3724, norm(y): 0.9935, norm:1.6053, tok/sec: 105503.15, flops:110.74, batch-reuse:1
@ 2821 train 4.6805 , allloss: 4.7082, dt: 1282.66ms, fracRes: 0.3919, norm(attn): 0.1895, norm(output): 0.2197, norm(x): 0.3704, norm(y): 0.9935, norm:1.8680, tok/sec: 102187.32, flops:107.26, batch-reuse:1
@ 2822 train 4.6413 , allloss: 4.6706, dt: 1268.36ms, fracRes: 0.3931, norm(attn): 0.1914, norm(output): 0.2207, norm(x): 0.3709, norm(y): 0.9935, norm:1.4400, tok/sec: 103339.64, flops:108.47, batch-reuse:1
@ 2823 train 4.7007 , allloss: 4.7296, dt: 1245.60ms, fracRes: 0.3897, norm(attn): 0.1924, norm(output): 0.2197, norm(x): 0.3686, norm(y): 0.9934, norm:1.7617, tok/sec: 105227.88, flops:110.45, batch-reuse:1
@ 2824 train 4.6631 , allloss: 4.6901, dt: 1263.30ms, fracRes: 0.3921, norm(attn): 0.1914, norm(output): 0.2207, norm(x): 0.3741, norm(y): 0.9934, norm:1.6327, tok/sec: 103754.00, flops:108.90, batch-reuse:1
@ 2825 train 4.6785 , allloss: 4.7065, dt: 1250.96ms, fracRes: 0.3923, norm(attn): 0.1885, norm(output): 0.2197, norm(x): 0.3714, norm(y): 0.9935, norm:1.4983, tok/sec: 104777.24, flops:109.98, batch-reuse:1
@ 2826 train 4.7420 , allloss: 4.7721, dt: 1281.16ms, fracRes: 0.3925, norm(attn): 0.1885, norm(output): 0.2207, norm(x): 0.3714, norm(y): 0.9935, norm:1.7869, tok/sec: 102307.08, flops:107.38, batch-reuse:1
@ 2827 train 4.7516 , allloss: 4.7830, dt: 1246.38ms, fracRes: 0.3907, norm(attn): 0.1924, norm(output): 0.2207, norm(x): 0.3725, norm(y): 0.9934, norm:1.7003, tok/sec: 105162.38, flops:110.38, batch-reuse:1
@ 2828 train 4.7371 , allloss: 4.7656, dt: 1281.88ms, fracRes: 0.3917, norm(attn): 0.1963, norm(output): 0.2227, norm(x): 0.3768, norm(y): 0.9934, norm:1.7906, tok/sec: 102250.00, flops:107.32, batch-reuse:1
@ 2829 train 4.6867 , allloss: 4.7162, dt: 1247.71ms, fracRes: 0.3903, norm(attn): 0.1895, norm(output): 0.2197, norm(x): 0.3710, norm(y): 0.9937, norm:1.7829, tok/sec: 105050.21, flops:110.26, batch-reuse:1
@ 2830 train 4.8185 , allloss: 4.8463, dt: 1261.05ms, fracRes: 0.3955, norm(attn): 0.1875, norm(output): 0.2217, norm(x): 0.3790, norm(y): 0.9937, norm:1.9884, tok/sec: 103938.63, flops:109.10, batch-reuse:1
@ 2831 train 4.7777 , allloss: 4.8069, dt: 1259.31ms, fracRes: 0.3915, norm(attn): 0.1914, norm(output): 0.2197, norm(x): 0.3719, norm(y): 0.9935, norm:1.7607, tok/sec: 104082.47, flops:109.25, batch-reuse:1
@ 2832 train 4.6721 , allloss: 4.7014, dt: 1277.24ms, fracRes: 0.3945, norm(attn): 0.1875, norm(output): 0.2188, norm(x): 0.3716, norm(y): 0.9936, norm:1.5805, tok/sec: 102621.58, flops:107.71, batch-reuse:1
@ 2833 train 4.7447 , allloss: 4.7702, dt: 1252.51ms, fracRes: 0.3935, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3709, norm(y): 0.9934, norm:1.8298, tok/sec: 104647.54, flops:109.84, batch-reuse:1
@ 2834 train 4.7452 , allloss: 4.7725, dt: 1275.20ms, fracRes: 0.3916, norm(attn): 0.1924, norm(output): 0.2197, norm(x): 0.3684, norm(y): 0.9934, norm:1.7381, tok/sec: 102785.51, flops:107.89, batch-reuse:1
@ 2835 train 4.7246 , allloss: 4.7530, dt: 1306.58ms, fracRes: 0.3953, norm(attn): 0.1895, norm(output): 0.2207, norm(x): 0.3757, norm(y): 0.9935, norm:1.9263, tok/sec: 100316.93, flops:105.30, batch-reuse:1
@ 2836 train 4.7045 , allloss: 4.7301, dt: 1272.92ms, fracRes: 0.3911, norm(attn): 0.1914, norm(output): 0.2207, norm(x): 0.3705, norm(y): 0.9935, norm:1.6397, tok/sec: 102969.27, flops:108.08, batch-reuse:1
@ 2837 train 4.7961 , allloss: 4.8244, dt: 1244.25ms, fracRes: 0.3925, norm(attn): 0.1895, norm(output): 0.2197, norm(x): 0.3728, norm(y): 0.9935, norm:1.8555, tok/sec: 105342.25, flops:110.57, batch-reuse:1
@ 2838 train 4.8565 , allloss: 4.8824, dt: 1243.86ms, fracRes: 0.3871, norm(attn): 0.1934, norm(output): 0.2197, norm(x): 0.3688, norm(y): 0.9934, norm:1.8653, tok/sec: 105375.61, flops:110.61, batch-reuse:1
@ 2839 train 4.6631 , allloss: 4.6902, dt: 1252.32ms, fracRes: 0.3951, norm(attn): 0.1875, norm(output): 0.2197, norm(x): 0.3737, norm(y): 0.9935, norm:1.6912, tok/sec: 104663.56, flops:109.86, batch-reuse:1
@ 2840 train 4.7140 , allloss: 4.7424, dt: 1279.47ms, fracRes: 0.3987, norm(attn): 0.1875, norm(output): 0.2197, norm(x): 0.3761, norm(y): 0.9936, norm:1.7323, tok/sec: 102442.53, flops:107.53, batch-reuse:1
@ 2841 train 4.6880 , allloss: 4.7141, dt: 1251.35ms, fracRes: 0.3973, norm(attn): 0.1865, norm(output): 0.2217, norm(x): 0.3755, norm(y): 0.9936, norm:1.4862, tok/sec: 104744.28, flops:109.94, batch-reuse:1
@ 2842 train 4.7044 , allloss: 4.7311, dt: 1254.15ms, fracRes: 0.3927, norm(attn): 0.1875, norm(output): 0.2207, norm(x): 0.3722, norm(y): 0.9937, norm:2.4785, tok/sec: 104510.91, flops:109.70, batch-reuse:1
@ 2843 train 4.6621 , allloss: 4.6899, dt: 1267.28ms, fracRes: 0.3967, norm(attn): 0.1875, norm(output): 0.2188, norm(x): 0.3723, norm(y): 0.9937, norm:1.6388, tok/sec: 103428.04, flops:108.56, batch-reuse:1
@ 2844 train 4.6448 , allloss: 4.6750, dt: 1268.93ms, fracRes: 0.3951, norm(attn): 0.1924, norm(output): 0.2188, norm(x): 0.3695, norm(y): 0.9937, norm:1.4974, tok/sec: 103293.52, flops:108.42, batch-reuse:1
@ 2845 train 4.7260 , allloss: 4.7746, dt: 1247.99ms, fracRes: 0.3897, norm(attn): 0.1943, norm(output): 0.2197, norm(x): 0.3692, norm(y): 0.9938, norm:7.3047, tok/sec: 105026.85, flops:110.24, batch-reuse:1
@ 2846 train 4.7376 , allloss: 4.7668, dt: 1270.75ms, fracRes: 0.3960, norm(attn): 0.1904, norm(output): 0.2207, norm(x): 0.3721, norm(y): 0.9940, norm:2.4499, tok/sec: 103145.23, flops:108.26, batch-reuse:1
@ 2847 train 4.7319 , allloss: 4.7674, dt: 1253.90ms, fracRes: 0.3958, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3683, norm(y): 0.9940, norm:1.9320, tok/sec: 104531.72, flops:109.72, batch-reuse:1
@ 2848 train 4.7165 , allloss: 4.7576, dt: 1248.29ms, fracRes: 0.3874, norm(attn): 0.1943, norm(output): 0.2178, norm(x): 0.3585, norm(y): 0.9938, norm:2.6415, tok/sec: 105001.60, flops:110.21, batch-reuse:1
@ 2849 train 4.6919 , allloss: 4.7331, dt: 1252.32ms, fracRes: 0.3975, norm(attn): 0.1924, norm(output): 0.2178, norm(x): 0.3644, norm(y): 0.9938, norm:1.7771, tok/sec: 104663.04, flops:109.86, batch-reuse:1
@ 2850 train 4.6504 , allloss: 4.6939, dt: 1262.71ms, fracRes: 0.4031, norm(attn): 0.1875, norm(output): 0.2158, norm(x): 0.3659, norm(y): 0.9940, norm:1.9181, tok/sec: 103801.80, flops:108.95, batch-reuse:1
@ 2851 train 4.6365 , allloss: 4.6715, dt: 1263.63ms, fracRes: 0.4058, norm(attn): 0.1895, norm(output): 0.2168, norm(x): 0.3649, norm(y): 0.9941, norm:1.7844, tok/sec: 103726.87, flops:108.88, batch-reuse:1
@ 2852 train 4.6481 , allloss: 4.6834, dt: 1267.66ms, fracRes: 0.4036, norm(attn): 0.1914, norm(output): 0.2188, norm(x): 0.3663, norm(y): 0.9941, norm:1.7961, tok/sec: 103397.15, flops:108.53, batch-reuse:1
@ 2853 train 4.7429 , allloss: 4.7819, dt: 1244.87ms, fracRes: 0.4065, norm(attn): 0.1885, norm(output): 0.2188, norm(x): 0.3703, norm(y): 0.9942, norm:7.9869, tok/sec: 105289.94, flops:110.52, batch-reuse:1
@ 2854 train 4.7275 , allloss: 4.7636, dt: 1258.09ms, fracRes: 0.4122, norm(attn): 0.1875, norm(output): 0.2158, norm(x): 0.3717, norm(y): 0.9943, norm:2.9733, tok/sec: 104183.60, flops:109.35, batch-reuse:1
@ 2855 train 4.6841 , allloss: 4.7198, dt: 1267.43ms, fracRes: 0.4083, norm(attn): 0.1885, norm(output): 0.2158, norm(x): 0.3665, norm(y): 0.9942, norm:1.7883, tok/sec: 103415.30, flops:108.55, batch-reuse:1
@ 2856 train 4.6961 , allloss: 4.7318, dt: 1258.69ms, fracRes: 0.4064, norm(attn): 0.1895, norm(output): 0.2168, norm(x): 0.3628, norm(y): 0.9941, norm:1.8231, tok/sec: 104133.34, flops:109.30, batch-reuse:1
@ 2857 train 4.6525 , allloss: 4.6875, dt: 1259.40ms, fracRes: 0.4040, norm(attn): 0.1953, norm(output): 0.2158, norm(x): 0.3598, norm(y): 0.9942, norm:2.0041, tok/sec: 104074.57, flops:109.24, batch-reuse:1
@ 2858 train 4.6199 , allloss: 4.6536, dt: 1281.55ms, fracRes: 0.4057, norm(attn): 0.1934, norm(output): 0.2158, norm(x): 0.3619, norm(y): 0.9943, norm:1.7033, tok/sec: 102276.17, flops:107.35, batch-reuse:1
@ 2859 train 4.6038 , allloss: 4.6342, dt: 1292.69ms, fracRes: 0.4059, norm(attn): 0.1914, norm(output): 0.2158, norm(x): 0.3593, norm(y): 0.9943, norm:2.0876, tok/sec: 101394.71, flops:106.43, batch-reuse:1
@ 2860 train 4.7467 , allloss: 4.7844, dt: 1255.21ms, fracRes: 0.4062, norm(attn): 0.1895, norm(output): 0.2178, norm(x): 0.3637, norm(y): 0.9943, norm:2.7624, tok/sec: 104422.35, flops:109.61, batch-reuse:1
@ 2861 train 4.7953 , allloss: 4.8284, dt: 1252.77ms, fracRes: 0.4005, norm(attn): 0.1943, norm(output): 0.2109, norm(x): 0.3498, norm(y): 0.9945, norm:6.0311, tok/sec: 104625.93, flops:109.82, batch-reuse:1
@ 2862 train 4.8203 , allloss: 4.8554, dt: 1264.60ms, fracRes: 0.4156, norm(attn): 0.1865, norm(output): 0.2178, norm(x): 0.3696, norm(y): 0.9943, norm:3.3424, tok/sec: 103647.29, flops:108.79, batch-reuse:1
@ 2863 train 4.7695 , allloss: 4.8073, dt: 1266.72ms, fracRes: 0.4181, norm(attn): 0.1836, norm(output): 0.2158, norm(x): 0.3702, norm(y): 0.9945, norm:2.0270, tok/sec: 103473.61, flops:108.61, batch-reuse:1
@ 2864 train 4.6018 , allloss: 4.6403, dt: 1257.46ms, fracRes: 0.4198, norm(attn): 0.1836, norm(output): 0.2158, norm(x): 0.3735, norm(y): 0.9944, norm:1.6924, tok/sec: 104235.91, flops:109.41, batch-reuse:1
@ 2865 train 4.6916 , allloss: 4.7402, dt: 1259.90ms, fracRes: 0.4195, norm(attn): 0.1846, norm(output): 0.2148, norm(x): 0.3719, norm(y): 0.9943, norm:2.0116, tok/sec: 104033.53, flops:109.20, batch-reuse:1
@ 2866 train 4.7470 , allloss: 4.8176, dt: 1256.89ms, fracRes: 0.4183, norm(attn): 0.1836, norm(output): 0.2178, norm(x): 0.3735, norm(y): 0.9944, norm:1.6996, tok/sec: 104282.91, flops:109.46, batch-reuse:1
@ 2867 train 4.6790 , allloss: 4.7509, dt: 1258.56ms, fracRes: 0.4153, norm(attn): 0.1836, norm(output): 0.2158, norm(x): 0.3697, norm(y): 0.9944, norm:1.8607, tok/sec: 104144.72, flops:109.31, batch-reuse:1
@ 2868 train 4.7576 , allloss: 4.8341, dt: 1276.16ms, fracRes: 0.4160, norm(attn): 0.1836, norm(output): 0.2178, norm(x): 0.3735, norm(y): 0.9944, norm:1.6554, tok/sec: 102707.84, flops:107.81, batch-reuse:1
@ 2869 train 4.6699 , allloss: 4.7504, dt: 1285.69ms, fracRes: 0.4130, norm(attn): 0.1846, norm(output): 0.2168, norm(x): 0.3716, norm(y): 0.9944, norm:1.9407, tok/sec: 101946.47, flops:107.01, batch-reuse:1
@ 2870 train 4.7270 , allloss: 4.8028, dt: 1263.08ms, fracRes: 0.4129, norm(attn): 0.1855, norm(output): 0.2168, norm(x): 0.3740, norm(y): 0.9945, norm:1.5509, tok/sec: 103772.13, flops:108.92, batch-reuse:1
@ 2871 train 4.6385 , allloss: 4.7098, dt: 1295.81ms, fracRes: 0.4160, norm(attn): 0.1807, norm(output): 0.2168, norm(x): 0.3755, norm(y): 0.9945, norm:1.6292, tok/sec: 101150.89, flops:106.17, batch-reuse:1
@ 2872 train 4.7187 , allloss: 4.7850, dt: 1252.02ms, fracRes: 0.4184, norm(attn): 0.1807, norm(output): 0.2178, norm(x): 0.3788, norm(y): 0.9945, norm:1.6862, tok/sec: 104688.23, flops:109.88, batch-reuse:1
@ 2873 train 4.7726 , allloss: 4.8358, dt: 1246.83ms, fracRes: 0.4218, norm(attn): 0.1846, norm(output): 0.2188, norm(x): 0.3830, norm(y): 0.9944, norm:2.1873, tok/sec: 105123.87, flops:110.34, batch-reuse:1
@ 2874 train 4.6611 , allloss: 4.7237, dt: 1268.42ms, fracRes: 0.4193, norm(attn): 0.1836, norm(output): 0.2178, norm(x): 0.3803, norm(y): 0.9945, norm:1.6252, tok/sec: 103334.53, flops:108.46, batch-reuse:1
@ 2875 train 4.7991 , allloss: 4.8581, dt: 1249.78ms, fracRes: 0.4218, norm(attn): 0.1807, norm(output): 0.2168, norm(x): 0.3778, norm(y): 0.9946, norm:1.6588, tok/sec: 104875.88, flops:110.08, batch-reuse:1
@ 2876 train 4.6959 , allloss: 4.7497, dt: 1255.01ms, fracRes: 0.4211, norm(attn): 0.1836, norm(output): 0.2168, norm(x): 0.3795, norm(y): 0.9946, norm:1.6944, tok/sec: 104438.82, flops:109.62, batch-reuse:1
@ 2877 train 4.7369 , allloss: 4.7853, dt: 1270.79ms, fracRes: 0.4214, norm(attn): 0.1855, norm(output): 0.2168, norm(x): 0.3790, norm(y): 0.9945, norm:1.6129, tok/sec: 103141.88, flops:108.26, batch-reuse:1
@ 2878 train 4.6760 , allloss: 4.7188, dt: 1260.14ms, fracRes: 0.4218, norm(attn): 0.1768, norm(output): 0.2168, norm(x): 0.3784, norm(y): 0.9948, norm:1.7720, tok/sec: 104013.55, flops:109.18, batch-reuse:1
@ 2879 train 4.6549 , allloss: 4.6944, dt: 1252.63ms, fracRes: 0.4228, norm(attn): 0.1768, norm(output): 0.2168, norm(x): 0.3814, norm(y): 0.9948, norm:1.6319, tok/sec: 104637.36, flops:109.83, batch-reuse:1
@ 2880 train 4.6810 , allloss: 4.7170, dt: 1270.02ms, fracRes: 0.4189, norm(attn): 0.1836, norm(output): 0.2178, norm(x): 0.3802, norm(y): 0.9946, norm:1.7199, tok/sec: 103204.62, flops:108.33, batch-reuse:1
@ 2881 train 4.6661 , allloss: 4.7008, dt: 1269.42ms, fracRes: 0.4183, norm(attn): 0.1816, norm(output): 0.2178, norm(x): 0.3814, norm(y): 0.9945, norm:1.5599, tok/sec: 103253.31, flops:108.38, batch-reuse:1
@ 2882 train 4.6460 , allloss: 4.6800, dt: 1247.65ms, fracRes: 0.4179, norm(attn): 0.1807, norm(output): 0.2168, norm(x): 0.3804, norm(y): 0.9945, norm:1.7183, tok/sec: 105055.03, flops:110.27, batch-reuse:1
@ 2883 train 4.7045 , allloss: 4.7376, dt: 1262.92ms, fracRes: 0.4173, norm(attn): 0.1836, norm(output): 0.2188, norm(x): 0.3825, norm(y): 0.9944, norm:1.6257, tok/sec: 103784.89, flops:108.94, batch-reuse:1
@ 2884 train 4.5447 , allloss: 4.5779, dt: 1269.15ms, fracRes: 0.4177, norm(attn): 0.1846, norm(output): 0.2178, norm(x): 0.3838, norm(y): 0.9944, norm:1.6181, tok/sec: 103275.83, flops:108.40, batch-reuse:1
@ 2885 train 4.5617 , allloss: 4.5912, dt: 1249.82ms, fracRes: 0.4175, norm(attn): 0.1816, norm(output): 0.2188, norm(x): 0.3838, norm(y): 0.9945, norm:1.5900, tok/sec: 104872.54, flops:110.08, batch-reuse:1
@ 2886 train 4.6001 , allloss: 4.6309, dt: 1252.27ms, fracRes: 0.4161, norm(attn): 0.1836, norm(output): 0.2188, norm(x): 0.3849, norm(y): 0.9944, norm:1.3783, tok/sec: 104667.35, flops:109.86, batch-reuse:1
@ 2887 train 4.5984 , allloss: 4.6279, dt: 1278.32ms, fracRes: 0.4168, norm(attn): 0.1826, norm(output): 0.2197, norm(x): 0.3858, norm(y): 0.9945, norm:1.9655, tok/sec: 102534.42, flops:107.62, batch-reuse:1
@ 2888 train 4.5905 , allloss: 4.6207, dt: 1254.26ms, fracRes: 0.4160, norm(attn): 0.1797, norm(output): 0.2178, norm(x): 0.3818, norm(y): 0.9946, norm:1.5384, tok/sec: 104501.10, flops:109.69, batch-reuse:1
@ 2889 train 4.6096 , allloss: 4.6409, dt: 1280.36ms, fracRes: 0.4147, norm(attn): 0.1855, norm(output): 0.2197, norm(x): 0.3830, norm(y): 0.9943, norm:1.6457, tok/sec: 102371.17, flops:107.45, batch-reuse:1
@ 2890 train 4.6463 , allloss: 4.6758, dt: 1255.45ms, fracRes: 0.4159, norm(attn): 0.1816, norm(output): 0.2188, norm(x): 0.3829, norm(y): 0.9943, norm:1.5414, tok/sec: 104402.01, flops:109.58, batch-reuse:1
@ 2891 train 4.6158 , allloss: 4.6436, dt: 1258.51ms, fracRes: 0.4151, norm(attn): 0.1846, norm(output): 0.2188, norm(x): 0.3838, norm(y): 0.9944, norm:1.5470, tok/sec: 104148.65, flops:109.32, batch-reuse:1
@ 2892 train 4.5864 , allloss: 4.6194, dt: 1259.79ms, fracRes: 0.4152, norm(attn): 0.1836, norm(output): 0.2188, norm(x): 0.3836, norm(y): 0.9944, norm:1.6509, tok/sec: 104042.55, flops:109.21, batch-reuse:1
@ 2893 train 4.5509 , allloss: 4.5786, dt: 1271.70ms, fracRes: 0.4151, norm(attn): 0.1865, norm(output): 0.2188, norm(x): 0.3855, norm(y): 0.9943, norm:1.5060, tok/sec: 103068.71, flops:108.18, batch-reuse:1
@ 2894 train 4.5532 , allloss: 4.5819, dt: 1251.88ms, fracRes: 0.4158, norm(attn): 0.1855, norm(output): 0.2197, norm(x): 0.3858, norm(y): 0.9944, norm:1.6728, tok/sec: 104700.28, flops:109.90, batch-reuse:1
@ 2895 train 4.7089 , allloss: 4.7364, dt: 1265.41ms, fracRes: 0.4173, norm(attn): 0.1797, norm(output): 0.2207, norm(x): 0.3919, norm(y): 0.9944, norm:1.8197, tok/sec: 103580.27, flops:108.72, batch-reuse:1
@ 2896 train 4.6813 , allloss: 4.7091, dt: 1258.07ms, fracRes: 0.4148, norm(attn): 0.1826, norm(output): 0.2207, norm(x): 0.3884, norm(y): 0.9944, norm:1.7060, tok/sec: 104184.69, flops:109.36, batch-reuse:1
@ 2897 train 4.6069 , allloss: 4.6345, dt: 1266.46ms, fracRes: 0.4131, norm(attn): 0.1855, norm(output): 0.2197, norm(x): 0.3859, norm(y): 0.9943, norm:1.6131, tok/sec: 103495.18, flops:108.63, batch-reuse:1
@ 2898 train 4.6175 , allloss: 4.6449, dt: 1266.49ms, fracRes: 0.4132, norm(attn): 0.1826, norm(output): 0.2207, norm(x): 0.3888, norm(y): 0.9944, norm:1.6604, tok/sec: 103492.56, flops:108.63, batch-reuse:1
@ 2899 train 4.6252 , allloss: 4.6553, dt: 1241.09ms, fracRes: 0.4109, norm(attn): 0.1855, norm(output): 0.2207, norm(x): 0.3871, norm(y): 0.9942, norm:1.7433, tok/sec: 105610.10, flops:110.85, batch-reuse:1
@ 2900 train 4.6246 , allloss: 4.6523, dt: 1261.07ms, fracRes: 0.4112, norm(attn): 0.1855, norm(output): 0.2227, norm(x): 0.3883, norm(y): 0.9942, norm:1.4488, tok/sec: 103937.13, flops:109.10, batch-reuse:1
@ 2901 train 4.5871 , allloss: 4.6138, dt: 1272.09ms, fracRes: 0.4076, norm(attn): 0.1865, norm(output): 0.2207, norm(x): 0.3842, norm(y): 0.9942, norm:1.7014, tok/sec: 103036.97, flops:108.15, batch-reuse:1
@ 2902 train 4.6380 , allloss: 4.6642, dt: 1236.37ms, fracRes: 0.4077, norm(attn): 0.1865, norm(output): 0.2207, norm(x): 0.3871, norm(y): 0.9942, norm:1.5941, tok/sec: 106013.75, flops:111.28, batch-reuse:1
@ 2903 train 4.7373 , allloss: 4.7653, dt: 1259.64ms, fracRes: 0.4102, norm(attn): 0.1826, norm(output): 0.2197, norm(x): 0.3880, norm(y): 0.9942, norm:1.7228, tok/sec: 104054.97, flops:109.22, batch-reuse:1
@ 2904 train 4.5933 , allloss: 4.6233, dt: 1272.11ms, fracRes: 0.4105, norm(attn): 0.1846, norm(output): 0.2217, norm(x): 0.3891, norm(y): 0.9942, norm:1.5181, tok/sec: 103035.50, flops:108.15, batch-reuse:1
@ 2905 train 4.8096 , allloss: 4.8383, dt: 1290.13ms, fracRes: 0.4120, norm(attn): 0.1855, norm(output): 0.2256, norm(x): 0.3961, norm(y): 0.9941, norm:2.3715, tok/sec: 101595.61, flops:106.64, batch-reuse:1
@ 2906 train 4.7824 , allloss: 4.8287, dt: 1269.58ms, fracRes: 0.3855, norm(attn): 0.2031, norm(output): 0.2129, norm(x): 0.3299, norm(y): 0.9952, norm:30.5668, tok/sec: 103240.16, flops:108.36, batch-reuse:1
@ 2907 train 4.7125 , allloss: 4.7425, dt: 1254.56ms, fracRes: 0.4115, norm(attn): 0.1875, norm(output): 0.2207, norm(x): 0.3887, norm(y): 0.9940, norm:2.5717, tok/sec: 104476.83, flops:109.66, batch-reuse:1
@ 2908 train 4.6177 , allloss: 4.6460, dt: 1251.95ms, fracRes: 0.4183, norm(attn): 0.1816, norm(output): 0.2188, norm(x): 0.3879, norm(y): 0.9943, norm:1.8851, tok/sec: 104693.88, flops:109.89, batch-reuse:1
@ 2909 train 4.6114 , allloss: 4.6429, dt: 1268.03ms, fracRes: 0.4208, norm(attn): 0.1807, norm(output): 0.2227, norm(x): 0.3935, norm(y): 0.9943, norm:1.5070, tok/sec: 103366.30, flops:108.50, batch-reuse:1
@ 2910 train 4.6230 , allloss: 4.6542, dt: 1257.98ms, fracRes: 0.4208, norm(attn): 0.1826, norm(output): 0.2197, norm(x): 0.3892, norm(y): 0.9942, norm:1.7412, tok/sec: 104192.37, flops:109.36, batch-reuse:1
@ 2911 train 4.6376 , allloss: 4.6676, dt: 1276.34ms, fracRes: 0.4190, norm(attn): 0.1816, norm(output): 0.2178, norm(x): 0.3820, norm(y): 0.9943, norm:1.8670, tok/sec: 102693.68, flops:107.79, batch-reuse:1
@ 2912 train 4.6596 , allloss: 4.6937, dt: 1259.66ms, fracRes: 0.4185, norm(attn): 0.1836, norm(output): 0.2188, norm(x): 0.3856, norm(y): 0.9943, norm:1.5753, tok/sec: 104053.73, flops:109.22, batch-reuse:1
@ 2913 train 4.6289 , allloss: 4.6623, dt: 1265.73ms, fracRes: 0.4163, norm(attn): 0.1846, norm(output): 0.2188, norm(x): 0.3831, norm(y): 0.9943, norm:7.1684, tok/sec: 103554.07, flops:108.69, batch-reuse:1
@ 2914 train 4.5684 , allloss: 4.5997, dt: 1259.04ms, fracRes: 0.4197, norm(attn): 0.1826, norm(output): 0.2188, norm(x): 0.3838, norm(y): 0.9944, norm:2.3199, tok/sec: 104104.51, flops:109.27, batch-reuse:1
@ 2915 train 4.5775 , allloss: 4.6120, dt: 1284.41ms, fracRes: 0.4211, norm(attn): 0.1875, norm(output): 0.2197, norm(x): 0.3834, norm(y): 0.9943, norm:1.5414, tok/sec: 102048.49, flops:107.11, batch-reuse:1
@ 2916 train 4.5525 , allloss: 4.5852, dt: 1238.48ms, fracRes: 0.4226, norm(attn): 0.1885, norm(output): 0.2197, norm(x): 0.3841, norm(y): 0.9942, norm:1.8536, tok/sec: 105832.58, flops:111.09, batch-reuse:1
@ 2917 train 4.6209 , allloss: 4.6553, dt: 1258.51ms, fracRes: 0.4227, norm(attn): 0.1865, norm(output): 0.2188, norm(x): 0.3814, norm(y): 0.9944, norm:1.5698, tok/sec: 104148.67, flops:109.32, batch-reuse:1
@ 2918 train 4.6841 , allloss: 4.7134, dt: 1256.52ms, fracRes: 0.4205, norm(attn): 0.1846, norm(output): 0.2188, norm(x): 0.3807, norm(y): 0.9945, norm:1.6558, tok/sec: 104313.20, flops:109.49, batch-reuse:1
@ 2919 train 4.5763 , allloss: 4.6043, dt: 1266.64ms, fracRes: 0.4207, norm(attn): 0.1846, norm(output): 0.2197, norm(x): 0.3822, norm(y): 0.9945, norm:1.8012, tok/sec: 103479.84, flops:108.62, batch-reuse:1
@ 2920 train 4.7071 , allloss: 4.7374, dt: 1261.87ms, fracRes: 0.4171, norm(attn): 0.1875, norm(output): 0.2178, norm(x): 0.3773, norm(y): 0.9943, norm:2.1107, tok/sec: 103871.15, flops:109.03, batch-reuse:1
@ 2921 train 4.6343 , allloss: 4.6636, dt: 1243.50ms, fracRes: 0.4149, norm(attn): 0.1895, norm(output): 0.2188, norm(x): 0.3776, norm(y): 0.9942, norm:1.5193, tok/sec: 105405.61, flops:110.64, batch-reuse:1
@ 2922 train 4.5896 , allloss: 4.6214, dt: 1244.33ms, fracRes: 0.4180, norm(attn): 0.1855, norm(output): 0.2188, norm(x): 0.3791, norm(y): 0.9945, norm:1.9046, tok/sec: 105335.12, flops:110.56, batch-reuse:1
@ 2923 train 4.5536 , allloss: 4.5844, dt: 1234.17ms, fracRes: 0.4197, norm(attn): 0.1836, norm(output): 0.2178, norm(x): 0.3810, norm(y): 0.9946, norm:1.7892, tok/sec: 106202.22, flops:111.47, batch-reuse:1
@ 2924 train 4.6660 , allloss: 4.7129, dt: 1258.61ms, fracRes: 0.4188, norm(attn): 0.1865, norm(output): 0.2197, norm(x): 0.3824, norm(y): 0.9944, norm:1.9268, tok/sec: 104140.14, flops:109.31, batch-reuse:1
@ 2925 train 4.7661 , allloss: 4.7986, dt: 1248.57ms, fracRes: 0.4209, norm(attn): 0.1836, norm(output): 0.2197, norm(x): 0.3855, norm(y): 0.9943, norm:1.9360, tok/sec: 104977.70, flops:110.19, batch-reuse:1
@ 2926 train 4.6067 , allloss: 4.6348, dt: 1266.30ms, fracRes: 0.4212, norm(attn): 0.1836, norm(output): 0.2188, norm(x): 0.3831, norm(y): 0.9943, norm:1.7833, tok/sec: 103507.51, flops:108.64, batch-reuse:1
@ 2927 train 4.4942 , allloss: 4.5218, dt: 1256.95ms, fracRes: 0.4205, norm(attn): 0.1875, norm(output): 0.2188, norm(x): 0.3839, norm(y): 0.9942, norm:1.5528, tok/sec: 104277.63, flops:109.45, batch-reuse:1
@ 2928 train 4.5757 , allloss: 4.6082, dt: 1279.85ms, fracRes: 0.4203, norm(attn): 0.1875, norm(output): 0.2197, norm(x): 0.3842, norm(y): 0.9942, norm:1.5039, tok/sec: 102411.73, flops:107.49, batch-reuse:1
@ 2929 train 4.5569 , allloss: 4.5865, dt: 1254.60ms, fracRes: 0.4186, norm(attn): 0.1875, norm(output): 0.2207, norm(x): 0.3846, norm(y): 0.9942, norm:1.6301, tok/sec: 104472.86, flops:109.66, batch-reuse:1
@ 2930 train 4.5312 , allloss: 4.5628, dt: 1254.28ms, fracRes: 0.4204, norm(attn): 0.1846, norm(output): 0.2197, norm(x): 0.3860, norm(y): 0.9943, norm:1.6909, tok/sec: 104499.82, flops:109.69, batch-reuse:1
@ 2931 train 4.5084 , allloss: 4.5392, dt: 1267.82ms, fracRes: 0.4182, norm(attn): 0.1875, norm(output): 0.2207, norm(x): 0.3869, norm(y): 0.9943, norm:1.5555, tok/sec: 103383.63, flops:108.51, batch-reuse:1
@ 2932 train 4.4405 , allloss: 4.4694, dt: 1257.82ms, fracRes: 0.4160, norm(attn): 0.1865, norm(output): 0.2207, norm(x): 0.3846, norm(y): 0.9943, norm:1.7169, tok/sec: 104205.86, flops:109.38, batch-reuse:1
@ 2933 train 4.5425 , allloss: 4.5696, dt: 1276.93ms, fracRes: 0.4139, norm(attn): 0.1865, norm(output): 0.2197, norm(x): 0.3830, norm(y): 0.9942, norm:1.8026, tok/sec: 102646.26, flops:107.74, batch-reuse:1
@ 2934 train 4.5954 , allloss: 4.6244, dt: 1235.13ms, fracRes: 0.4129, norm(attn): 0.1865, norm(output): 0.2207, norm(x): 0.3849, norm(y): 0.9941, norm:1.3921, tok/sec: 106119.63, flops:111.39, batch-reuse:1
@ 2935 train 4.5090 , allloss: 4.5396, dt: 1230.30ms, fracRes: 0.4115, norm(attn): 0.1865, norm(output): 0.2217, norm(x): 0.3844, norm(y): 0.9941, norm:1.5312, tok/sec: 106536.64, flops:111.82, batch-reuse:1
@ 2936 train 4.4177 , allloss: 4.4478, dt: 1270.73ms, fracRes: 0.4128, norm(attn): 0.1855, norm(output): 0.2207, norm(x): 0.3856, norm(y): 0.9942, norm:1.3374, tok/sec: 103147.34, flops:108.27, batch-reuse:1
@ 2937 train 4.4812 , allloss: 4.5083, dt: 1273.23ms, fracRes: 0.4134, norm(attn): 0.1865, norm(output): 0.2207, norm(x): 0.3880, norm(y): 0.9942, norm:1.4584, tok/sec: 102944.51, flops:108.05, batch-reuse:1
@ 2938 train 4.4992 , allloss: 4.5285, dt: 1257.24ms, fracRes: 0.4155, norm(attn): 0.1865, norm(output): 0.2227, norm(x): 0.3908, norm(y): 0.9942, norm:1.4635, tok/sec: 104253.64, flops:109.43, batch-reuse:1
@ 2939 train 4.5450 , allloss: 4.5718, dt: 1271.30ms, fracRes: 0.4117, norm(attn): 0.1875, norm(output): 0.2207, norm(x): 0.3859, norm(y): 0.9941, norm:1.5784, tok/sec: 103100.99, flops:108.22, batch-reuse:1
@ 2940 train 4.5102 , allloss: 4.5371, dt: 1263.89ms, fracRes: 0.4121, norm(attn): 0.1865, norm(output): 0.2227, norm(x): 0.3869, norm(y): 0.9941, norm:1.7279, tok/sec: 103705.60, flops:108.85, batch-reuse:1
@ 2941 train 4.3991 , allloss: 4.4249, dt: 1262.43ms, fracRes: 0.4127, norm(attn): 0.1865, norm(output): 0.2207, norm(x): 0.3885, norm(y): 0.9942, norm:1.5195, tok/sec: 103824.87, flops:108.98, batch-reuse:1
@ 2942 train 4.5043 , allloss: 4.5305, dt: 1248.48ms, fracRes: 0.4124, norm(attn): 0.1865, norm(output): 0.2217, norm(x): 0.3875, norm(y): 0.9941, norm:1.3330, tok/sec: 104984.89, flops:110.20, batch-reuse:1
@ 2943 train 4.5006 , allloss: 4.5269, dt: 1265.57ms, fracRes: 0.4132, norm(attn): 0.1904, norm(output): 0.2217, norm(x): 0.3914, norm(y): 0.9941, norm:1.5976, tok/sec: 103567.31, flops:108.71, batch-reuse:1
@ 2944 train 4.5672 , allloss: 4.5971, dt: 1273.21ms, fracRes: 0.4126, norm(attn): 0.1875, norm(output): 0.2217, norm(x): 0.3882, norm(y): 0.9942, norm:1.9281, tok/sec: 102946.07, flops:108.06, batch-reuse:1
@ 2945 train 4.5473 , allloss: 4.5734, dt: 1266.38ms, fracRes: 0.4144, norm(attn): 0.1855, norm(output): 0.2236, norm(x): 0.3917, norm(y): 0.9942, norm:1.6321, tok/sec: 103501.49, flops:108.64, batch-reuse:1
@ 2946 train 4.4748 , allloss: 4.4999, dt: 1256.93ms, fracRes: 0.4126, norm(attn): 0.1875, norm(output): 0.2236, norm(x): 0.3902, norm(y): 0.9941, norm:1.4038, tok/sec: 104279.66, flops:109.46, batch-reuse:1
@ 2947 train 4.4955 , allloss: 4.5216, dt: 1253.24ms, fracRes: 0.4128, norm(attn): 0.1875, norm(output): 0.2227, norm(x): 0.3892, norm(y): 0.9940, norm:1.4918, tok/sec: 104586.16, flops:109.78, batch-reuse:1
@ 2948 train 4.4114 , allloss: 4.4371, dt: 1262.06ms, fracRes: 0.4135, norm(attn): 0.1865, norm(output): 0.2217, norm(x): 0.3891, norm(y): 0.9941, norm:1.5802, tok/sec: 103855.47, flops:109.01, batch-reuse:1
@ 2949 train 4.4685 , allloss: 4.4969, dt: 1268.07ms, fracRes: 0.4137, norm(attn): 0.1875, norm(output): 0.2207, norm(x): 0.3881, norm(y): 0.9941, norm:1.6854, tok/sec: 103363.24, flops:108.49, batch-reuse:1
@ 2950 train 4.5768 , allloss: 4.6044, dt: 1258.87ms, fracRes: 0.4159, norm(attn): 0.1875, norm(output): 0.2246, norm(x): 0.3939, norm(y): 0.9941, norm:1.7102, tok/sec: 104119.00, flops:109.29, batch-reuse:1
@ 2951 train 4.4483 , allloss: 4.4750, dt: 1262.46ms, fracRes: 0.4154, norm(attn): 0.1875, norm(output): 0.2217, norm(x): 0.3890, norm(y): 0.9941, norm:1.5482, tok/sec: 103822.68, flops:108.98, batch-reuse:1
@ 2952 train 4.5715 , allloss: 4.5961, dt: 1262.03ms, fracRes: 0.4136, norm(attn): 0.1875, norm(output): 0.2207, norm(x): 0.3889, norm(y): 0.9940, norm:1.8344, tok/sec: 103858.41, flops:109.01, batch-reuse:1
@ 2953 train 4.5403 , allloss: 4.5684, dt: 1256.83ms, fracRes: 0.4150, norm(attn): 0.1865, norm(output): 0.2217, norm(x): 0.3899, norm(y): 0.9940, norm:1.3830, tok/sec: 104287.65, flops:109.46, batch-reuse:1
@ 2954 train 4.5146 , allloss: 4.5450, dt: 1256.53ms, fracRes: 0.4145, norm(attn): 0.1875, norm(output): 0.2207, norm(x): 0.3915, norm(y): 0.9940, norm:1.7472, tok/sec: 104312.90, flops:109.49, batch-reuse:1
@ 2955 train 4.5254 , allloss: 4.5524, dt: 1270.06ms, fracRes: 0.4150, norm(attn): 0.1865, norm(output): 0.2236, norm(x): 0.3927, norm(y): 0.9940, norm:1.5936, tok/sec: 103201.48, flops:108.32, batch-reuse:1
@ 2956 train 4.4642 , allloss: 4.4906, dt: 1255.74ms, fracRes: 0.4129, norm(attn): 0.1865, norm(output): 0.2217, norm(x): 0.3881, norm(y): 0.9941, norm:1.4881, tok/sec: 104378.70, flops:109.56, batch-reuse:1
@ 2957 train 4.5397 , allloss: 4.5663, dt: 1259.17ms, fracRes: 0.4138, norm(attn): 0.1855, norm(output): 0.2207, norm(x): 0.3890, norm(y): 0.9941, norm:1.4884, tok/sec: 104093.76, flops:109.26, batch-reuse:1
@ 2958 train 4.5028 , allloss: 4.5285, dt: 1238.84ms, fracRes: 0.4136, norm(attn): 0.1865, norm(output): 0.2207, norm(x): 0.3881, norm(y): 0.9940, norm:1.5467, tok/sec: 105802.62, flops:111.05, batch-reuse:1
@ 2959 train 4.5233 , allloss: 4.5523, dt: 1254.89ms, fracRes: 0.4138, norm(attn): 0.1875, norm(output): 0.2197, norm(x): 0.3871, norm(y): 0.9939, norm:1.2616, tok/sec: 104449.08, flops:109.63, batch-reuse:1
@ 2960 train 4.4965 , allloss: 4.5226, dt: 1260.47ms, fracRes: 0.4148, norm(attn): 0.1865, norm(output): 0.2227, norm(x): 0.3918, norm(y): 0.9940, norm:1.6849, tok/sec: 103986.67, flops:109.15, batch-reuse:1
@ 2961 train 4.4366 , allloss: 4.4631, dt: 1248.06ms, fracRes: 0.4168, norm(attn): 0.1865, norm(output): 0.2227, norm(x): 0.3944, norm(y): 0.9941, norm:1.7100, tok/sec: 105020.83, flops:110.23, batch-reuse:1
@ 2962 train 4.4527 , allloss: 4.4779, dt: 1282.76ms, fracRes: 0.4133, norm(attn): 0.1865, norm(output): 0.2217, norm(x): 0.3901, norm(y): 0.9940, norm:1.5350, tok/sec: 102179.45, flops:107.25, batch-reuse:1
@ 2963 train 4.5173 , allloss: 4.5456, dt: 1276.67ms, fracRes: 0.4140, norm(attn): 0.1865, norm(output): 0.2236, norm(x): 0.3935, norm(y): 0.9939, norm:1.6279, tok/sec: 102667.21, flops:107.76, batch-reuse:1
@ 2964 train 4.5463 , allloss: 4.5717, dt: 1258.88ms, fracRes: 0.4135, norm(attn): 0.1846, norm(output): 0.2227, norm(x): 0.3939, norm(y): 0.9939, norm:1.6859, tok/sec: 104117.76, flops:109.29, batch-reuse:1
@ 2965 train 4.4921 , allloss: 4.5194, dt: 1269.08ms, fracRes: 0.4125, norm(attn): 0.1875, norm(output): 0.2246, norm(x): 0.3930, norm(y): 0.9939, norm:1.5606, tok/sec: 103281.45, flops:108.41, batch-reuse:1
@ 2966 train 4.4359 , allloss: 4.4669, dt: 1257.73ms, fracRes: 0.4110, norm(attn): 0.1885, norm(output): 0.2227, norm(x): 0.3916, norm(y): 0.9939, norm:1.6470, tok/sec: 104212.95, flops:109.39, batch-reuse:1
@ 2967 train 4.5052 , allloss: 4.5308, dt: 1237.02ms, fracRes: 0.4117, norm(attn): 0.1865, norm(output): 0.2227, norm(x): 0.3914, norm(y): 0.9940, norm:1.8516, tok/sec: 105957.91, flops:111.22, batch-reuse:1
@ 2968 train 4.5123 , allloss: 4.5390, dt: 1247.49ms, fracRes: 0.4138, norm(attn): 0.1875, norm(output): 0.2227, norm(x): 0.3923, norm(y): 0.9940, norm:1.5576, tok/sec: 105068.22, flops:110.28, batch-reuse:1
@ 2969 train 4.4384 , allloss: 4.4651, dt: 1265.01ms, fracRes: 0.4148, norm(attn): 0.1904, norm(output): 0.2227, norm(x): 0.3930, norm(y): 0.9937, norm:1.6122, tok/sec: 103613.05, flops:108.76, batch-reuse:1
@ 2970 train 4.4573 , allloss: 4.4852, dt: 1264.11ms, fracRes: 0.4170, norm(attn): 0.1855, norm(output): 0.2246, norm(x): 0.3956, norm(y): 0.9940, norm:1.7364, tok/sec: 103687.15, flops:108.83, batch-reuse:1
@ 2971 train 4.4969 , allloss: 4.5255, dt: 1268.65ms, fracRes: 0.4184, norm(attn): 0.1836, norm(output): 0.2236, norm(x): 0.3961, norm(y): 0.9941, norm:1.6856, tok/sec: 103315.73, flops:108.44, batch-reuse:1
@ 2972 train 4.3832 , allloss: 4.4084, dt: 1253.03ms, fracRes: 0.4162, norm(attn): 0.1855, norm(output): 0.2246, norm(x): 0.3944, norm(y): 0.9940, norm:1.5465, tok/sec: 104604.19, flops:109.80, batch-reuse:1
@ 2973 train 4.4921 , allloss: 4.5172, dt: 1265.31ms, fracRes: 0.4165, norm(attn): 0.1865, norm(output): 0.2275, norm(x): 0.3979, norm(y): 0.9939, norm:1.7136, tok/sec: 103588.57, flops:108.73, batch-reuse:1
@ 2974 train 4.4262 , allloss: 4.4518, dt: 1264.59ms, fracRes: 0.4148, norm(attn): 0.1875, norm(output): 0.2246, norm(x): 0.3953, norm(y): 0.9939, norm:1.7268, tok/sec: 103647.90, flops:108.79, batch-reuse:1
@ 2975 train 4.5711 , allloss: 4.5950, dt: 1273.20ms, fracRes: 0.4132, norm(attn): 0.1865, norm(output): 0.2256, norm(x): 0.3949, norm(y): 0.9939, norm:1.2930, tok/sec: 102946.69, flops:108.06, batch-reuse:1
@ 2976 train 4.6468 , allloss: 4.6711, dt: 1285.14ms, fracRes: 0.4136, norm(attn): 0.1875, norm(output): 0.2285, norm(x): 0.3969, norm(y): 0.9938, norm:1.6654, tok/sec: 101990.65, flops:107.05, batch-reuse:1
@ 2977 train 4.6597 , allloss: 4.6851, dt: 1268.02ms, fracRes: 0.4119, norm(attn): 0.1875, norm(output): 0.2227, norm(x): 0.3924, norm(y): 0.9937, norm:1.6012, tok/sec: 103367.73, flops:108.50, batch-reuse:1
@ 2978 train 4.6610 , allloss: 4.6869, dt: 1243.09ms, fracRes: 0.4159, norm(attn): 0.1846, norm(output): 0.2256, norm(x): 0.3973, norm(y): 0.9938, norm:1.4564, tok/sec: 105440.89, flops:110.67, batch-reuse:1
@ 2979 train 4.6869 , allloss: 4.7113, dt: 1273.88ms, fracRes: 0.4133, norm(attn): 0.1855, norm(output): 0.2295, norm(x): 0.3944, norm(y): 0.9938, norm:1.9104, tok/sec: 102891.70, flops:108.00, batch-reuse:1
@ 2980 train 4.5484 , allloss: 4.5758, dt: 1266.43ms, fracRes: 0.4155, norm(attn): 0.1875, norm(output): 0.2305, norm(x): 0.4019, norm(y): 0.9939, norm:1.9535, tok/sec: 103496.93, flops:108.63, batch-reuse:1
@ 2981 train 4.6156 , allloss: 4.6412, dt: 1264.41ms, fracRes: 0.4150, norm(attn): 0.1875, norm(output): 0.2305, norm(x): 0.3987, norm(y): 0.9938, norm:1.6007, tok/sec: 103662.60, flops:108.81, batch-reuse:1
@ 2982 train 4.7121 , allloss: 4.7381, dt: 1270.59ms, fracRes: 0.4159, norm(attn): 0.1865, norm(output): 0.2295, norm(x): 0.4001, norm(y): 0.9937, norm:1.5244, tok/sec: 103158.70, flops:108.28, batch-reuse:1
@ 2983 train 4.6088 , allloss: 4.6394, dt: 1280.65ms, fracRes: 0.4149, norm(attn): 0.1885, norm(output): 0.2285, norm(x): 0.3984, norm(y): 0.9937, norm:1.7869, tok/sec: 102348.28, flops:107.43, batch-reuse:1
@ 2984 train 4.6421 , allloss: 4.6697, dt: 1264.66ms, fracRes: 0.4126, norm(attn): 0.1885, norm(output): 0.2275, norm(x): 0.3940, norm(y): 0.9938, norm:2.0419, tok/sec: 103642.49, flops:108.79, batch-reuse:1
@ 2985 train 4.6974 , allloss: 4.7204, dt: 1256.01ms, fracRes: 0.4142, norm(attn): 0.1875, norm(output): 0.2314, norm(x): 0.3987, norm(y): 0.9938, norm:1.7407, tok/sec: 104355.46, flops:109.53, batch-reuse:1
@ 2986 train 4.5987 , allloss: 4.6219, dt: 1253.65ms, fracRes: 0.4142, norm(attn): 0.1865, norm(output): 0.2285, norm(x): 0.3981, norm(y): 0.9937, norm:1.6402, tok/sec: 104552.09, flops:109.74, batch-reuse:1
@ 2987 train 4.6649 , allloss: 4.6887, dt: 1272.05ms, fracRes: 0.4137, norm(attn): 0.1875, norm(output): 0.2275, norm(x): 0.3961, norm(y): 0.9936, norm:1.4264, tok/sec: 103039.64, flops:108.15, batch-reuse:1
@ 2988 train 4.7466 , allloss: 4.7741, dt: 1305.78ms, fracRes: 0.4145, norm(attn): 0.1895, norm(output): 0.2324, norm(x): 0.4015, norm(y): 0.9937, norm:1.5867, tok/sec: 100378.43, flops:105.36, batch-reuse:1
@ 2989 train 4.6787 , allloss: 4.7031, dt: 1274.10ms, fracRes: 0.4155, norm(attn): 0.1855, norm(output): 0.2275, norm(x): 0.4000, norm(y): 0.9938, norm:1.6251, tok/sec: 102874.28, flops:107.98, batch-reuse:1
@ 2990 train 4.7056 , allloss: 4.7293, dt: 1268.56ms, fracRes: 0.4151, norm(attn): 0.1875, norm(output): 0.2314, norm(x): 0.4000, norm(y): 0.9937, norm:1.5012, tok/sec: 103323.21, flops:108.45, batch-reuse:1
@ 2991 train 4.6100 , allloss: 4.6346, dt: 1273.05ms, fracRes: 0.4150, norm(attn): 0.1875, norm(output): 0.2266, norm(x): 0.3989, norm(y): 0.9937, norm:1.6050, tok/sec: 102959.05, flops:108.07, batch-reuse:1
@ 2992 train 4.6528 , allloss: 4.6777, dt: 1273.08ms, fracRes: 0.4151, norm(attn): 0.1875, norm(output): 0.2275, norm(x): 0.3984, norm(y): 0.9937, norm:1.3687, tok/sec: 102956.93, flops:108.07, batch-reuse:1
@ 2993 train 4.6670 , allloss: 4.6929, dt: 1283.52ms, fracRes: 0.4161, norm(attn): 0.1875, norm(output): 0.2314, norm(x): 0.4043, norm(y): 0.9937, norm:1.6828, tok/sec: 102119.29, flops:107.19, batch-reuse:1
@ 2994 train 4.6826 , allloss: 4.7083, dt: 1258.74ms, fracRes: 0.4132, norm(attn): 0.1865, norm(output): 0.2285, norm(x): 0.3977, norm(y): 0.9938, norm:1.7779, tok/sec: 104129.55, flops:109.30, batch-reuse:1
@ 2995 train 4.5544 , allloss: 4.5792, dt: 1279.35ms, fracRes: 0.4138, norm(attn): 0.1855, norm(output): 0.2295, norm(x): 0.3990, norm(y): 0.9938, norm:1.5629, tok/sec: 102452.00, flops:107.54, batch-reuse:1
@ 2996 train 4.5859 , allloss: 4.6108, dt: 1274.55ms, fracRes: 0.4126, norm(attn): 0.1885, norm(output): 0.2285, norm(x): 0.3990, norm(y): 0.9936, norm:1.6603, tok/sec: 102837.79, flops:107.94, batch-reuse:1
@ 2997 train 4.6344 , allloss: 4.6594, dt: 1264.16ms, fracRes: 0.4111, norm(attn): 0.1904, norm(output): 0.2295, norm(x): 0.3966, norm(y): 0.9935, norm:1.5812, tok/sec: 103682.77, flops:108.83, batch-reuse:1
@ 2998 train 4.6717 , allloss: 4.6971, dt: 1252.95ms, fracRes: 0.4113, norm(attn): 0.1875, norm(output): 0.2295, norm(x): 0.3985, norm(y): 0.9936, norm:1.6056, tok/sec: 104610.74, flops:109.80, batch-reuse:1
@ 2999 train 4.5580 , allloss: 4.5819, dt: 1252.00ms, fracRes: 0.4093, norm(attn): 0.1875, norm(output): 0.2305, norm(x): 0.3971, norm(y): 0.9937, norm:1.6694, tok/sec: 104689.75, flops:109.89, batch-reuse:1
@ 3000 train 4.6709 , allloss: 4.6958, dt: 1276.85ms, fracRes: 0.4110, norm(attn): 0.1875, norm(output): 0.2314, norm(x): 0.4004, norm(y): 0.9937, norm:1.4318, tok/sec: 102652.32, flops:107.75, batch-reuse:1
@ 3001 train 4.7179 , allloss: 4.7437, dt: 1275.07ms, fracRes: 0.4098, norm(attn): 0.1855, norm(output): 0.2295, norm(x): 0.3982, norm(y): 0.9937, norm:1.7264, tok/sec: 102795.89, flops:107.90, batch-reuse:1
@ 3002 train 4.5960 , allloss: 4.6219, dt: 1261.14ms, fracRes: 0.4091, norm(attn): 0.1895, norm(output): 0.2324, norm(x): 0.4000, norm(y): 0.9935, norm:1.5216, tok/sec: 103930.96, flops:109.09, batch-reuse:1
@ 3003 train 4.6464 , allloss: 4.6713, dt: 1276.68ms, fracRes: 0.4095, norm(attn): 0.1885, norm(output): 0.2314, norm(x): 0.3999, norm(y): 0.9936, norm:1.7541, tok/sec: 102666.00, flops:107.76, batch-reuse:1
@ 3004 train 4.7123 , allloss: 4.7372, dt: 1259.61ms, fracRes: 0.4102, norm(attn): 0.1855, norm(output): 0.2295, norm(x): 0.3998, norm(y): 0.9937, norm:1.8749, tok/sec: 104057.43, flops:109.22, batch-reuse:1
@ 3005 train 4.8927 , allloss: 4.9155, dt: 1270.23ms, fracRes: 0.4118, norm(attn): 0.1875, norm(output): 0.2324, norm(x): 0.4026, norm(y): 0.9936, norm:1.9772, tok/sec: 103187.76, flops:108.31, batch-reuse:1
@ 3006 train 4.6342 , allloss: 4.6578, dt: 1264.21ms, fracRes: 0.4108, norm(attn): 0.1885, norm(output): 0.2305, norm(x): 0.3997, norm(y): 0.9936, norm:1.6642, tok/sec: 103679.23, flops:108.83, batch-reuse:1
@ 3007 train 4.7167 , allloss: 4.7412, dt: 1267.04ms, fracRes: 0.4108, norm(attn): 0.1895, norm(output): 0.2305, norm(x): 0.3986, norm(y): 0.9935, norm:1.7676, tok/sec: 103447.03, flops:108.58, batch-reuse:1
@ 3008 train 4.6421 , allloss: 4.6670, dt: 1275.89ms, fracRes: 0.4113, norm(attn): 0.1914, norm(output): 0.2314, norm(x): 0.3986, norm(y): 0.9935, norm:1.5663, tok/sec: 102729.62, flops:107.83, batch-reuse:1
@ 3009 train 4.5926 , allloss: 4.6179, dt: 1270.83ms, fracRes: 0.4146, norm(attn): 0.1875, norm(output): 0.2314, norm(x): 0.4014, norm(y): 0.9937, norm:2.1979, tok/sec: 103138.88, flops:108.26, batch-reuse:1
@ 3010 train 4.6458 , allloss: 4.6690, dt: 1277.41ms, fracRes: 0.4146, norm(attn): 0.1865, norm(output): 0.2324, norm(x): 0.4037, norm(y): 0.9937, norm:1.5242, tok/sec: 102607.56, flops:107.70, batch-reuse:1
@ 3011 train 4.6755 , allloss: 4.6994, dt: 1264.62ms, fracRes: 0.4119, norm(attn): 0.1885, norm(output): 0.2305, norm(x): 0.3998, norm(y): 0.9936, norm:1.8858, tok/sec: 103645.46, flops:108.79, batch-reuse:1
@ 3012 train 4.7583 , allloss: 4.7816, dt: 1228.36ms, fracRes: 0.4119, norm(attn): 0.1875, norm(output): 0.2305, norm(x): 0.4007, norm(y): 0.9935, norm:1.6894, tok/sec: 106704.47, flops:112.00, batch-reuse:1
@ 3013 train 4.7875 , allloss: 4.8116, dt: 1273.44ms, fracRes: 0.4106, norm(attn): 0.1875, norm(output): 0.2295, norm(x): 0.3980, norm(y): 0.9936, norm:2.1021, tok/sec: 102927.49, flops:108.04, batch-reuse:1
@ 3014 train 4.6349 , allloss: 4.6584, dt: 1268.06ms, fracRes: 0.4115, norm(attn): 0.1885, norm(output): 0.2324, norm(x): 0.4002, norm(y): 0.9935, norm:1.5587, tok/sec: 103364.14, flops:108.49, batch-reuse:1
@ 3015 train 4.6377 , allloss: 4.6630, dt: 1269.39ms, fracRes: 0.4110, norm(attn): 0.1895, norm(output): 0.2314, norm(x): 0.3985, norm(y): 0.9935, norm:1.7567, tok/sec: 103255.56, flops:108.38, batch-reuse:1
@ 3016 train 4.5850 , allloss: 4.6091, dt: 1256.12ms, fracRes: 0.4110, norm(attn): 0.1885, norm(output): 0.2324, norm(x): 0.4005, norm(y): 0.9936, norm:1.6545, tok/sec: 104347.04, flops:109.53, batch-reuse:1
@ 3017 train 4.5803 , allloss: 4.6074, dt: 1268.66ms, fracRes: 0.4131, norm(attn): 0.1895, norm(output): 0.2305, norm(x): 0.4015, norm(y): 0.9935, norm:1.5139, tok/sec: 103315.52, flops:108.44, batch-reuse:1
@ 3018 train 4.6285 , allloss: 4.6551, dt: 1267.06ms, fracRes: 0.4131, norm(attn): 0.1895, norm(output): 0.2314, norm(x): 0.4012, norm(y): 0.9935, norm:1.4762, tok/sec: 103445.54, flops:108.58, batch-reuse:1
@ 3019 train 4.7889 , allloss: 4.8105, dt: 1281.31ms, fracRes: 0.4173, norm(attn): 0.1855, norm(output): 0.2334, norm(x): 0.4062, norm(y): 0.9936, norm:1.7928, tok/sec: 102295.41, flops:107.37, batch-reuse:1
@ 3020 train 4.5725 , allloss: 4.5958, dt: 1255.89ms, fracRes: 0.4155, norm(attn): 0.1875, norm(output): 0.2314, norm(x): 0.4025, norm(y): 0.9937, norm:1.6635, tok/sec: 104365.86, flops:109.55, batch-reuse:1
@ 3021 train 4.5918 , allloss: 4.6176, dt: 1285.18ms, fracRes: 0.4153, norm(attn): 0.1875, norm(output): 0.2305, norm(x): 0.4018, norm(y): 0.9937, norm:1.7444, tok/sec: 101987.34, flops:107.05, batch-reuse:1
@ 3022 train 4.6811 , allloss: 4.7111, dt: 1279.11ms, fracRes: 0.4171, norm(attn): 0.1865, norm(output): 0.2324, norm(x): 0.4076, norm(y): 0.9935, norm:1.6578, tok/sec: 102471.06, flops:107.56, batch-reuse:1
@ 3023 train 4.7209 , allloss: 4.7448, dt: 1278.48ms, fracRes: 0.4164, norm(attn): 0.1846, norm(output): 0.2305, norm(x): 0.4042, norm(y): 0.9934, norm:1.7937, tok/sec: 102521.97, flops:107.61, batch-reuse:1
@ 3024 train 4.6152 , allloss: 4.6388, dt: 1272.23ms, fracRes: 0.4150, norm(attn): 0.1895, norm(output): 0.2324, norm(x): 0.4046, norm(y): 0.9934, norm:1.4327, tok/sec: 103025.29, flops:108.14, batch-reuse:1
@ 3025 train 4.6210 , allloss: 4.6448, dt: 1296.03ms, fracRes: 0.4141, norm(attn): 0.1875, norm(output): 0.2324, norm(x): 0.4041, norm(y): 0.9936, norm:1.6986, tok/sec: 101133.55, flops:106.15, batch-reuse:1
@ 3026 train 4.6759 , allloss: 4.6993, dt: 1303.58ms, fracRes: 0.4142, norm(attn): 0.1865, norm(output): 0.2334, norm(x): 0.4075, norm(y): 0.9937, norm:1.7378, tok/sec: 100548.11, flops:105.54, batch-reuse:1
@ 3027 train 4.6949 , allloss: 4.7181, dt: 1309.49ms, fracRes: 0.4122, norm(attn): 0.1875, norm(output): 0.2334, norm(x): 0.4047, norm(y): 0.9936, norm:2.0349, tok/sec: 100093.88, flops:105.06, batch-reuse:1
@ 3028 train 4.6474 , allloss: 4.6692, dt: 1272.63ms, fracRes: 0.4107, norm(attn): 0.1895, norm(output): 0.2324, norm(x): 0.4027, norm(y): 0.9934, norm:1.4431, tok/sec: 102993.07, flops:108.10, batch-reuse:1
@ 3029 train 4.5321 , allloss: 4.5549, dt: 1265.61ms, fracRes: 0.4112, norm(attn): 0.1875, norm(output): 0.2314, norm(x): 0.4014, norm(y): 0.9935, norm:1.7343, tok/sec: 103563.94, flops:108.70, batch-reuse:1
@ 3030 train 4.5949 , allloss: 4.6171, dt: 1270.11ms, fracRes: 0.4102, norm(attn): 0.1895, norm(output): 0.2334, norm(x): 0.4021, norm(y): 0.9934, norm:1.5980, tok/sec: 103197.35, flops:108.32, batch-reuse:1
@ 3031 train 4.5953 , allloss: 4.6216, dt: 1275.17ms, fracRes: 0.4120, norm(attn): 0.1895, norm(output): 0.2334, norm(x): 0.4030, norm(y): 0.9935, norm:1.5318, tok/sec: 102788.11, flops:107.89, batch-reuse:1
@ 3032 train 4.6172 , allloss: 4.6412, dt: 1253.17ms, fracRes: 0.4111, norm(attn): 0.1885, norm(output): 0.2324, norm(x): 0.4013, norm(y): 0.9935, norm:1.5414, tok/sec: 104592.15, flops:109.78, batch-reuse:1
@ 3033 train 4.5538 , allloss: 4.5773, dt: 1262.61ms, fracRes: 0.4111, norm(attn): 0.1895, norm(output): 0.2334, norm(x): 0.4031, norm(y): 0.9934, norm:1.3726, tok/sec: 103810.05, flops:108.96, batch-reuse:1
@ 3034 train 4.6504 , allloss: 4.6729, dt: 1271.96ms, fracRes: 0.4097, norm(attn): 0.1924, norm(output): 0.2334, norm(x): 0.4031, norm(y): 0.9933, norm:1.8219, tok/sec: 103047.03, flops:108.16, batch-reuse:1
@ 3035 train 4.6793 , allloss: 4.7033, dt: 1245.07ms, fracRes: 0.4124, norm(attn): 0.1865, norm(output): 0.2324, norm(x): 0.4042, norm(y): 0.9936, norm:1.6149, tok/sec: 105272.74, flops:110.50, batch-reuse:1
@ 3036 train 4.5927 , allloss: 4.6155, dt: 1246.31ms, fracRes: 0.4114, norm(attn): 0.1875, norm(output): 0.2314, norm(x): 0.4026, norm(y): 0.9936, norm:1.4264, tok/sec: 105167.75, flops:110.39, batch-reuse:1
@ 3037 train 4.6502 , allloss: 4.6728, dt: 1255.00ms, fracRes: 0.4113, norm(attn): 0.1885, norm(output): 0.2324, norm(x): 0.4041, norm(y): 0.9935, norm:1.4971, tok/sec: 104439.97, flops:109.62, batch-reuse:1
@ 3038 train 4.6041 , allloss: 4.6305, dt: 1262.64ms, fracRes: 0.4109, norm(attn): 0.1885, norm(output): 0.2334, norm(x): 0.4034, norm(y): 0.9935, norm:1.3261, tok/sec: 103807.74, flops:108.96, batch-reuse:1
@ 3039 train 4.8269 , allloss: 4.8493, dt: 1262.77ms, fracRes: 0.4118, norm(attn): 0.1875, norm(output): 0.2324, norm(x): 0.4021, norm(y): 0.9934, norm:1.9441, tok/sec: 103797.04, flops:108.95, batch-reuse:1
@ 3040 train 4.6134 , allloss: 4.6377, dt: 1256.72ms, fracRes: 0.4139, norm(attn): 0.1875, norm(output): 0.2324, norm(x): 0.4050, norm(y): 0.9934, norm:2.1183, tok/sec: 104297.13, flops:109.47, batch-reuse:1
@ 3041 train 4.6627 , allloss: 4.6872, dt: 1240.61ms, fracRes: 0.4132, norm(attn): 0.1885, norm(output): 0.2334, norm(x): 0.4066, norm(y): 0.9934, norm:1.9734, tok/sec: 105651.18, flops:110.89, batch-reuse:1
@ 3042 train 4.5473 , allloss: 4.5762, dt: 1246.83ms, fracRes: 0.4126, norm(attn): 0.1934, norm(output): 0.2344, norm(x): 0.4074, norm(y): 0.9934, norm:1.9448, tok/sec: 105124.20, flops:110.34, batch-reuse:1
@ 3043 train 4.5955 , allloss: 4.6191, dt: 1265.20ms, fracRes: 0.4104, norm(attn): 0.1934, norm(output): 0.2324, norm(x): 0.4019, norm(y): 0.9934, norm:1.9193, tok/sec: 103597.92, flops:108.74, batch-reuse:1
@ 3044 train 4.6292 , allloss: 4.6513, dt: 1265.17ms, fracRes: 0.4096, norm(attn): 0.1895, norm(output): 0.2334, norm(x): 0.4034, norm(y): 0.9934, norm:1.7402, tok/sec: 103600.32, flops:108.74, batch-reuse:1
@ 3045 train 4.8048 , allloss: 4.8295, dt: 1262.29ms, fracRes: 0.4081, norm(attn): 0.1895, norm(output): 0.2334, norm(x): 0.4043, norm(y): 0.9933, norm:1.4797, tok/sec: 103836.87, flops:108.99, batch-reuse:1
@ 3046 train 4.6215 , allloss: 4.6447, dt: 1249.52ms, fracRes: 0.4048, norm(attn): 0.1934, norm(output): 0.2334, norm(x): 0.3999, norm(y): 0.9934, norm:1.6943, tok/sec: 104897.48, flops:110.10, batch-reuse:1
@ 3047 train 4.6638 , allloss: 4.6869, dt: 1250.39ms, fracRes: 0.4110, norm(attn): 0.1914, norm(output): 0.2344, norm(x): 0.4078, norm(y): 0.9933, norm:1.6682, tok/sec: 104824.65, flops:110.03, batch-reuse:1
@ 3048 train 4.5566 , allloss: 4.5799, dt: 1259.95ms, fracRes: 0.4092, norm(attn): 0.1934, norm(output): 0.2334, norm(x): 0.4057, norm(y): 0.9933, norm:1.5146, tok/sec: 104029.57, flops:109.19, batch-reuse:1
@ 3049 train 4.7571 , allloss: 4.7809, dt: 1254.50ms, fracRes: 0.4098, norm(attn): 0.1895, norm(output): 0.2324, norm(x): 0.4031, norm(y): 0.9933, norm:1.5048, tok/sec: 104481.32, flops:109.67, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7539, 0.2471, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.2637, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.2100, 0.2256, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1206, 0.4922, 0.1631, 0.0820, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2930, 0.1396, 0.2441, 0.0591, 0.1934, 0.0708, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.0325, 0.3965, 0.0262, 0.0830, 0.0093, 0.0013, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5586, 0.0087, 0.1250, 0.1021, 0.0251, 0.0220, 0.0233, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.0674, 0.1465, 0.0175, 0.1079, 0.0396, 0.0131, 0.4570, 0.0410, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.0193, 0.1533, 0.0295, 0.0193, 0.0118, 0.0106, 0.4863, 0.0236, 0.0574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.1377, 0.1748, 0.0250, 0.1396, 0.0234, 0.0075, 0.3027, 0.0282, 0.0654, 0.0053, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4277, 0.0199, 0.1143, 0.0737, 0.0623, 0.0123, 0.0104, 0.1064, 0.0615, 0.0500, 0.0161, 0.0447, 0.0000, 0.0000, 0.0000],
        [0.2295, 0.0090, 0.0422, 0.0610, 0.0398, 0.0359, 0.0325, 0.0422, 0.1138, 0.0952, 0.0781, 0.1572, 0.0625, 0.0000, 0.0000],
        [0.0923, 0.0259, 0.1357, 0.0078, 0.0576, 0.0137, 0.0028, 0.3711, 0.0199, 0.0510, 0.0016, 0.0055, 0.1973, 0.0175, 0.0000],
        [0.3125, 0.0179, 0.1699, 0.0216, 0.1235, 0.0151, 0.0011, 0.0728, 0.0493, 0.0571, 0.0034, 0.0076, 0.0884, 0.0562, 0.0045]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0068, -0.0710, -0.0157,  ...,  0.0196,  0.0310,  0.0578],
        [-0.0244,  0.0141,  0.0286,  ..., -0.0011, -0.0443, -0.0145],
        [-0.0457,  0.0506,  0.0184,  ...,  0.0305, -0.0374, -0.0689],
        ...,
        [-0.0041,  0.0226,  0.0526,  ..., -0.0015, -0.0310, -0.0595],
        [-0.0664,  0.0609,  0.0362,  ...,  0.0170, -0.0695, -0.0334],
        [ 0.0240, -0.0441, -0.0507,  ..., -0.0394,  0.0677,  0.0605]], device='cuda:0', requires_grad=True)
K: tensor([-0.6211,  1.8047,  1.8438, -1.3750, -0.1699,  1.1875, -0.4883, -1.3438,  0.7812,  1.5391,  0.1895,  1.6953, -1.2578,  1.3438,  0.1475,  1.1016, -1.0625,  1.1406,  0.6055, -0.7500,  1.3906, -1.2656,  0.7852,  0.9922,  0.9766, -1.6562, -0.4668,  0.3086, -0.9375,  1.5547,  1.6875, -0.9609,
         0.9805,  0.8203,  1.4297, -0.8281, -1.6172,  0.4355,  0.2852, -0.4102,  1.4141,  0.5039, -1.4375,  0.7344, -0.6055,  1.8203,  0.4922, -1.1484, -1.7266, -0.5000, -0.9766, -1.9297, -0.3496, -0.8125,  0.8164, -1.6250, -1.0078, -1.3281,  2.1406,  0.4453,  0.0031,  1.0547,  0.4746, -0.2412],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0294,  0.0356, -0.0101,  ...,  0.0368, -0.0081, -0.0355],
        [ 0.0283, -0.0441, -0.0545,  ...,  0.0310,  0.0321,  0.0554],
        [ 0.0104, -0.0065,  0.0021,  ...,  0.0264,  0.0142,  0.0587],
        ...,
        [ 0.0119, -0.0358,  0.0045,  ..., -0.0099,  0.0237,  0.0431],
        [ 0.0325, -0.0148, -0.0303,  ..., -0.0016,  0.0193,  0.0549],
        [-0.0128, -0.0022,  0.0326,  ...,  0.0323, -0.0346, -0.0453]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9062, -0.7617, -0.7852,  0.3965,  1.2500, -0.2275,  1.0312,  1.3906, -0.2656, -0.9883, -0.9570, -0.8242,  0.0405, -0.1455,  1.1484, -0.5898,  0.6367, -0.1758, -0.1157,  0.1235, -0.6602, -0.0391, -0.9648,  1.1016, -0.7461,  0.1797,  0.8359, -1.5391,  0.1924, -0.1060,  0.0098,  0.9609,
        -0.7656, -0.9727, -0.5820,  0.9961,  0.8125, -0.6836, -0.2969, -0.1572, -0.1201, -0.9531,  0.4375, -0.9727, -0.0703,  0.1631, -0.5469,  0.5977,  0.2773,  2.2344,  0.0601,  0.1348,  1.6641,  0.5859, -1.2266,  0.8086,  1.0234,  1.2031, -0.9375, -0.8477, -1.6641, -0.1309, -0.5000,  1.1719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.1172, -0.1738, -0.6875, -1.5938, -1.9297, -2.9531, -0.2559, -1.6875, -1.1250, -2.7500, -1.7891, -0.4414, -1.3438, -1.7266],
        [ 0.0000, -0.8555, -1.6875,  0.6641, -0.6562, -1.2031, -0.6758, -2.0000, -0.3926, -0.8438,  0.0923, -0.5664, -1.9922, -0.1445, -0.6953],
        [ 0.0000, -0.3066, -0.2354, -0.0226, -0.4902, -1.7891, -1.8203, -0.4453, -1.2188, -0.6797, -0.9453, -0.6445, -0.4102, -1.1953, -1.6562],
        [ 0.0000,  1.4062,  0.3008, -0.3867,  0.1670, -0.0688, -0.2451,  1.4844, -0.0342, -0.1572, -1.2891, -1.2109,  0.7305, -0.3887,  0.1572],
        [ 0.0000, -0.7422, -0.1846, -1.6016, -0.4141, -1.4219, -2.0000,  0.6016, -0.8828, -0.7266, -2.9688, -1.8281,  0.5742, -0.9336, -1.2578],
        [ 0.0000, -2.6250, -0.1260, -2.8438, -1.6875, -3.8906, -5.8438,  0.4570, -3.0469, -1.3672, -5.8125, -3.5000,  0.0569, -3.3906, -4.4688],
        [ 0.0000, -4.1562, -1.5000, -1.7031, -3.1094, -3.2344, -3.1719, -1.4219, -1.9922, -1.6719, -2.8906, -0.8164, -1.0781, -1.5781, -2.3594],
        [ 0.0000, -0.4844,  0.2930, -1.8359, -0.0166, -1.0156, -2.1250,  1.4297, -0.9844, -0.1680, -2.8906, -2.2656,  0.7188, -1.2656, -1.9141],
        [ 0.0000, -2.2812, -0.2051, -1.8516, -2.2812, -2.7656, -2.8750,  0.9492, -2.0781, -1.1875, -3.8125, -0.9648,  0.8086, -1.8672, -2.3750],
        [ 0.0000,  0.4219,  0.6641, -1.2812,  0.4355, -1.3516, -2.4844,  1.2109, -1.1641, -0.3242, -2.8438, -2.9062,  0.3906, -1.6094, -2.3438],
        [ 0.0000, -3.0625, -1.3203, -1.7656, -1.9297, -3.5469, -3.7188, -1.3906, -1.9375, -2.1406, -3.2812, -2.2500, -1.2031, -2.0625, -3.3906],
        [ 0.0000, -3.2344, -1.6953, -1.3203, -1.7500, -1.8516, -1.9531, -1.6953, -0.7031, -0.8789, -1.0781, -0.3750, -1.2969, -0.3555, -1.3438],
        [ 0.0000, -1.2734,  0.3887, -2.4688, -0.4668, -1.9062, -3.4844,  1.3906, -1.5312, -0.5938, -4.0625, -2.8281,  0.7656, -1.6641, -3.0469],
        [ 0.0000, -2.8594, -0.6055, -2.6719, -0.9258, -3.0312, -5.6875, -1.4531, -1.8438, -1.6953, -4.5000, -3.7188, -1.2656, -1.7109, -4.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7618],
        [0.3938],
        [0.2913],
        [0.3941],
        [0.3153],
        [0.4652],
        [0.0885],
        [0.3121],
        [0.1975],
        [0.3582],
        [0.1707],
        [0.0381],
        [0.2613],
        [0.3358]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0166,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5977,     0.3047,     0.0957,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4863,     0.0129,     0.3574,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8906,     0.0322,     0.0427,     0.0066,     0.0028,     0.0236,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9258,     0.0044,     0.0069,     0.0007,     0.0004,     0.0022,     0.0610,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1216,     0.0688,     0.3066,     0.2080,     0.0767,     0.0112,     0.2012,     0.0059,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6484,     0.0042,     0.0126,     0.0020,     0.0008,     0.0094,     0.1797,     0.0074,     0.1367,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4902,     0.0114,     0.1030,     0.0292,     0.0042,     0.0070,     0.0879,     0.2100,     0.0227,     0.0330,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0003,     0.0015,     0.0001,     0.0000,     0.0001,     0.0010,     0.0003,     0.0041,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6250,     0.0107,     0.0361,     0.0101,     0.0020,     0.0069,     0.1387,     0.0894,     0.0054,     0.0515,     0.0005,     0.0227,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.0110,     0.1182,     0.1943,     0.1816,     0.0234,     0.1660,     0.0060,     0.0140,     0.0320,     0.1416,     0.0962,     0.0129,     0.0000,     0.0000],
        [    0.6602,     0.0021,     0.0054,     0.0011,     0.0006,     0.0045,     0.1177,     0.0027,     0.0806,     0.0124,     0.0000,     0.0027,     0.0254,     0.0830,     0.0000],
        [    0.1099,     0.0272,     0.0089,     0.0107,     0.0194,     0.0684,     0.0830,     0.0066,     0.2295,     0.0388,     0.0061,     0.0070,     0.0488,     0.2695,     0.0659]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0059, -0.0276,  0.0217,  ..., -0.0158,  0.0260,  0.0126],
        [ 0.0103, -0.0135, -0.0001,  ...,  0.0223, -0.0042, -0.0057],
        [ 0.0130, -0.0582, -0.0024,  ...,  0.0076, -0.0177,  0.0183],
        ...,
        [-0.0047,  0.0072, -0.0473,  ...,  0.0045, -0.0240, -0.0097],
        [ 0.0013,  0.0008, -0.0103,  ...,  0.0564,  0.0395,  0.0057],
        [ 0.0197, -0.0553, -0.0268,  ...,  0.0017,  0.0158,  0.0247]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6328, -1.4219, -0.8242,  1.3828, -2.5625,  0.6523,  2.6562, -1.9844,  2.1875,  2.5938,  0.2070, -0.6367,  1.9297, -0.0113,  1.1172,  1.2734, -1.2109,  1.7500,  1.6484,  0.1021,  0.9141, -1.2812, -1.6953, -1.8984, -0.1387,  1.7344,  0.5859,  0.6445, -1.0078,  2.1719,  1.3828,  3.0625,
         2.3750,  2.0000,  0.3418, -1.6250,  2.5469, -1.2266,  0.3809, -1.6328,  0.0684,  0.3750, -1.1406,  0.4102,  1.5781,  1.6094,  1.0312,  1.2188,  1.5469,  0.6445, -1.7812, -0.5898, -1.3828,  0.5312, -1.7812,  1.5312,  1.3594, -1.5703, -0.7148,  2.0938, -1.4062, -1.8438,  1.4141, -1.9688],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0173,  0.0010, -0.0039,  ...,  0.0021, -0.0128,  0.0041],
        [-0.0003, -0.0019, -0.0009,  ...,  0.0403,  0.0404, -0.0320],
        [-0.0006, -0.0221, -0.0089,  ..., -0.0096, -0.0392,  0.0512],
        ...,
        [-0.0193,  0.0343,  0.0124,  ...,  0.0477,  0.0492, -0.0279],
        [-0.0175,  0.0047, -0.0154,  ...,  0.0109, -0.0116,  0.0426],
        [-0.0100,  0.0010,  0.0138,  ...,  0.0299,  0.0560, -0.0097]], device='cuda:0', requires_grad=True)
Q: tensor([-0.9922,  2.0625,  0.3613,  0.4785,  0.5000, -0.6641,  1.1797, -0.2539,  1.0391,  0.7305, -2.6875,  0.2578, -0.5898, -0.1128,  0.0608,  0.0264,  0.2637, -1.3203, -2.0000, -0.2598,  0.1367,  0.6914,  0.9258, -0.8906, -1.4844,  0.6211, -0.2559,  0.6641,  0.0115, -2.2344, -1.3203,  0.2441,
         0.0317,  0.5703,  0.7383, -0.5117,  2.4062,  1.2969, -0.5078,  0.1465, -1.0703,  1.2266,  0.1533, -1.3984,  0.2988,  1.3672, -0.2617, -0.4297, -1.9375,  0.6680,  0.9023,  0.2412,  1.5938, -0.0737, -0.2334, -0.0042,  0.0703, -0.8438,  0.1094,  0.9609,  0.2168, -2.3594, -1.7344,  0.4922],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -4.0938,  -4.6250,  -6.2500,  -6.2188,  -4.3125,  -2.4219,  -6.9062,  -0.8867,  -4.7812,  -8.7500,  -5.9688,  -5.0000,  -1.1953,  -4.3125],
        [  0.0000,  -0.6758,  -1.8359,  -1.7734,  -2.4688,  -1.0938,   0.6836,  -4.0000,  -0.7070,  -0.8867,  -2.2656,  -2.8438,  -2.7188,  -0.9141,  -0.1299],
        [  0.0000,  -3.6250,  -0.3066,  -1.2188,  -6.5938,  -5.5000,  -4.3125,  -4.9688,  -4.6875,  -2.4844,  -8.8750,  -2.2500,  -4.0938,  -4.8438,  -1.8438],
        [  0.0000, -10.0000,  -8.9375, -12.1875, -14.1250, -10.8750,  -6.3750,  -9.0000,  -6.9062,  -8.3125, -18.5000,  -9.8125,  -7.6250,  -7.5312, -10.8750],
        [  0.0000,  -3.3281,  -3.0469,  -4.9062,  -5.7500,  -3.6406,   0.1187,  -4.5938,  -1.3516,  -3.3281,  -8.8750,  -4.1875,  -3.2031,  -1.2891,  -3.8438],
        [  0.0000,  -5.3438,  -4.9062,  -7.1875,  -7.7812,  -6.0312,  -2.7188,  -9.4375,  -3.0156,  -5.0938,  -9.8750,  -7.2188,  -7.2188,  -3.4062,  -6.2500],
        [  0.0000,  -0.5703,   0.9258,   0.5352,  -0.4590,  -2.3906,   0.5039,  -3.0312,  -0.2490,  -1.0078,  -1.9062,  -0.2451,  -3.0469,  -0.0679,  -0.2422],
        [  0.0000,  -5.0312,  -3.9375,  -5.7812,  -6.6562,  -4.2188,  -1.2812,  -4.4688,  -1.5547,  -3.4219, -10.3125,  -4.5312,  -2.1562,  -1.4531,  -4.8438],
        [  0.0000,  -3.7656,  -1.5625,  -2.8281,  -4.7812,  -4.2500,  -1.7188,  -0.8477,  -3.0781,  -2.7031,  -7.7500,  -2.2188,  -0.8359,  -2.8594,  -3.5781],
        [  0.0000,  -8.2500,  -6.5312,  -9.6250, -12.5625,  -9.0000,  -6.8750,  -8.0625,  -5.4688,  -6.5938, -16.6250,  -7.7812,  -5.9062,  -5.9688,  -8.3750],
        [  0.0000,  -4.0625,  -2.8594,  -4.1250,  -5.7500,  -4.5000,  -1.5078,  -1.9531,  -4.7500,  -2.5000,  -7.2188,  -3.3281,  -2.1250,  -4.9062,  -3.5781],
        [  0.0000,   1.7812,   4.1562,   4.6562,   4.5938,   2.5312,   4.5000,   1.1719,   2.0156,   2.8438,   4.3125,   3.9375,   1.9297,   2.7656,   4.2500],
        [  0.0000,  -5.7500,  -4.8125,  -6.3750,  -7.0625,  -5.0000,  -1.7266,  -5.5000,  -2.1094,  -3.9688, -10.6250,  -5.5000,  -3.2656,  -2.0781,  -5.6250],
        [  0.0000,  -1.3984,  -2.5156,  -2.3281,  -1.7344,  -0.4785,  -0.2832,  -2.8125,   0.7344,  -1.0391,  -2.8906,  -2.7500,  -0.8086,   0.8984,  -0.5117]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9954],
        [0.8533],
        [0.9051],
        [1.0000],
        [0.9710],
        [0.9365],
        [0.7533],
        [0.8844],
        [0.8062],
        [0.9883],
        [0.8254],
        [0.6620],
        [0.8952],
        [0.8050]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0065,  0.0423,  0.0341,  ..., -0.0310,  0.0069, -0.0334],
        [-0.0118, -0.0392, -0.0111,  ...,  0.0237,  0.0092, -0.0518],
        [ 0.0283,  0.0484,  0.0028,  ..., -0.0156,  0.0103, -0.0024],
        ...,
        [-0.0592, -0.0385, -0.0475,  ...,  0.0216, -0.0007, -0.0157],
        [ 0.0219,  0.0296,  0.0147,  ..., -0.0351,  0.0300, -0.0052],
        [-0.0263, -0.0229, -0.0708,  ...,  0.0529,  0.0011, -0.0040]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5625,  2.2344,  0.0260, -0.1035,  2.2344,  2.5000,  2.8438, -1.2734, -1.1797,  1.3750,  1.8516,  0.3066, -2.8281, -1.1797, -0.8320, -2.0469,  0.6641,  2.3594,  2.6094, -2.4375, -1.7891,  1.6016,  2.6250,  2.7031, -1.8438, -0.7109, -1.2344, -1.7500, -0.8672, -1.4844,  0.9844,  2.2500,
        -1.1328, -1.9922, -1.7031,  0.3242, -1.7266,  0.9961, -0.1982,  1.6953,  1.8047,  1.9375, -0.6523, -1.7344,  3.0156,  1.6797, -2.0625, -1.0547, -2.0781,  0.5352,  1.3906, -0.5195,  1.8750, -0.6562,  0.8477,  0.1953, -1.5078,  0.2754, -1.3984, -1.8672, -1.2266, -1.3906,  1.0156, -2.4688],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0389,     -0.0035,     -0.0223,  ...,     -0.0051,     -0.0279,      0.0071],
        [    -0.0044,      0.0117,      0.0110,  ...,     -0.0398,      0.0256,     -0.0111],
        [    -0.0389,     -0.0424,     -0.0072,  ...,      0.0001,     -0.0268,     -0.0278],
        ...,
        [     0.0078,      0.0256,      0.0116,  ...,     -0.0365,      0.0156,     -0.0393],
        [    -0.0264,     -0.0012,     -0.0214,  ...,      0.0069,     -0.0216,      0.0327],
        [     0.0232,      0.0239,      0.0539,  ...,      0.0085,      0.0655,     -0.0312]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.5781, -1.1953,  0.9180, -1.5000, -2.8438, -1.3828, -2.4688,  1.2812,  0.8320, -1.2656, -1.3594,  2.4062,  1.5703,  0.9141, -0.5352,  0.5000, -1.8906, -2.6562, -0.1128,  1.3359,  0.7227, -0.9531, -1.9531, -1.7266,  1.7969,  0.5469,  1.9062,  1.8594,  2.0469,  1.3359, -1.9766, -1.2578,
         1.0234,  1.6641,  2.0625, -1.9141,  0.7188, -2.2969, -2.7656, -2.1406, -1.4297, -1.4219,  0.6797,  0.2500, -1.9922, -1.2344,  1.9062,  1.5312,  1.6172, -2.2656, -1.6484,  0.9336, -1.3594, -1.5234, -0.3613, -1.8984,  1.2344, -0.9141,  2.7031,  0.4844,  1.5781,  2.0625, -1.3750,  2.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -20.8750, -22.7500, -31.0000, -32.5000, -19.6250, -26.7500, -20.8750, -16.2500, -18.6250, -24.2500, -23.8750, -16.6250, -16.3750, -15.6250],
        [  0.0000, -30.1250, -35.2500, -46.2500, -48.2500, -29.1250, -37.5000, -31.2500, -23.6250, -27.0000, -35.0000, -35.7500, -22.1250, -23.5000, -22.8750],
        [  0.0000, -39.5000, -45.5000, -61.5000, -64.0000, -38.0000, -49.5000, -39.5000, -31.6250, -35.2500, -46.0000, -47.5000, -28.6250, -31.3750, -29.6250],
        [  0.0000, -35.2500, -38.7500, -52.7500, -55.7500, -34.7500, -43.7500, -32.7500, -29.6250, -30.0000, -41.7500, -39.7500, -26.1250, -29.5000, -27.0000],
        [  0.0000, -23.1250, -24.0000, -32.2500, -34.2500, -19.8750, -26.2500, -20.5000, -18.2500, -19.3750, -25.7500, -23.2500, -15.5625, -18.1250, -17.1250],
        [  0.0000, -33.7500, -35.2500, -47.7500, -51.0000, -29.8750, -38.2500, -30.6250, -27.0000, -27.8750, -38.2500, -36.2500, -24.1250, -26.7500, -25.3750],
        [  0.0000, -23.2500, -26.3750, -34.5000, -36.0000, -22.2500, -29.0000, -23.8750, -18.2500, -20.6250, -26.7500, -26.5000, -17.0000, -18.2500, -17.7500],
        [  0.0000, -16.7500, -18.8750, -25.6250, -27.2500, -16.5000, -21.6250, -15.8750, -13.5625, -15.0625, -19.8750, -18.7500, -11.3750, -13.5625, -12.3125],
        [  0.0000, -23.3750, -25.7500, -34.7500, -36.7500, -21.7500, -28.6250, -23.2500, -18.3750, -20.3750, -26.5000, -27.0000, -17.1250, -18.2500, -17.2500],
        [  0.0000, -12.2500, -15.2500, -21.6250, -21.7500, -13.1250, -18.3750, -12.8750, -10.6250, -11.6875, -15.8750, -15.8750, -10.1250, -10.7500,  -8.6875],
        [  0.0000, -27.1250, -29.5000, -38.5000, -41.2500, -24.2500, -31.5000, -25.7500, -21.0000, -23.1250, -30.0000, -30.0000, -18.2500, -20.7500, -19.6250],
        [  0.0000, -11.5625, -10.9375, -13.8750, -15.1250,  -9.5625, -11.6875, -10.1250,  -8.9375,  -9.1875, -12.2500, -10.3750,  -7.6562,  -8.8125,  -8.3750],
        [  0.0000, -18.0000, -19.7500, -27.0000, -28.7500, -17.1250, -22.3750, -16.5000, -14.4375, -15.8125, -21.0000, -19.6250, -11.6250, -14.3750, -13.0000],
        [  0.0000, -22.3750, -26.3750, -35.7500, -36.0000, -22.1250, -29.5000, -23.2500, -17.8750, -20.2500, -26.5000, -27.6250, -17.5000, -17.8750, -17.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9919],
        [0.9997],
        [1.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0500, 0.9492, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0544, 0.7578, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.5117, 0.2930, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0388, 0.7227, 0.1592, 0.0310, 0.0469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0400, 0.6758, 0.1660, 0.0275, 0.0532, 0.0383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0265, 0.7891, 0.1270, 0.0050, 0.0139, 0.0109, 0.0281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0223, 0.6680, 0.0588, 0.0066, 0.0085, 0.0145, 0.0713, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0118, 0.5078, 0.0693, 0.0115, 0.0114, 0.0262, 0.1030, 0.2051, 0.0537, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0209, 0.3008, 0.0659, 0.0204, 0.0119, 0.0332, 0.1133, 0.2500, 0.0737, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0086, 0.2637, 0.0461, 0.0098, 0.0105, 0.0332, 0.0552, 0.3105, 0.1025, 0.1060, 0.0530, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0200, 0.2656, 0.0344, 0.0151, 0.0109, 0.0146, 0.0386, 0.1689, 0.0742, 0.2490, 0.0459, 0.0623, 0.0000, 0.0000, 0.0000],
        [0.0366, 0.3730, 0.0376, 0.0065, 0.0116, 0.0216, 0.0613, 0.1406, 0.0549, 0.1167, 0.0361, 0.0417, 0.0625, 0.0000, 0.0000],
        [0.0166, 0.3574, 0.0337, 0.0055, 0.0084, 0.0225, 0.0723, 0.1279, 0.0481, 0.0869, 0.0295, 0.0549, 0.0674, 0.0698, 0.0000],
        [0.0120, 0.1094, 0.0238, 0.0031, 0.0051, 0.0128, 0.0239, 0.1021, 0.0493, 0.0315, 0.0121, 0.0618, 0.0762, 0.0757, 0.4023]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0212, -0.0105,  0.0077,  ...,  0.0343, -0.0219, -0.0196],
        [-0.0357,  0.0134,  0.0046,  ...,  0.0131, -0.0067, -0.0009],
        [ 0.0010,  0.0377,  0.0287,  ..., -0.0071,  0.0058,  0.0374],
        ...,
        [ 0.0024,  0.0381, -0.0098,  ..., -0.0048, -0.0202, -0.0010],
        [ 0.0318, -0.0113,  0.0159,  ...,  0.0133, -0.0114, -0.0171],
        [ 0.0360,  0.0288,  0.0103,  ..., -0.0015,  0.0002,  0.0132]], device='cuda:0', requires_grad=True)
K: tensor([ 1.5703,  1.1562, -0.5312,  1.3203, -0.3105,  0.9961, -0.2793, -1.2812,  0.3105,  0.2373, -1.1875, -2.3125, -1.0078,  0.9180,  0.9336,  1.5469, -1.2500,  0.4668,  0.1611,  0.0732, -1.2500, -0.6523,  0.6289,  2.3594,  0.1787,  1.8906, -0.1602,  0.9648,  2.5000,  0.3242, -0.3496, -0.4785,
        -1.6250,  1.0703, -0.6250, -0.0703,  0.7656, -1.6641,  1.8203, -0.1084, -0.4941, -0.5664, -0.3145, -1.3984,  0.4238,  0.3164,  0.0312,  0.0688,  0.5117, -0.0752, -1.2422,  2.0000,  0.1650, -1.2812,  0.7930,  0.4902,  1.5703,  0.3262,  0.9961,  0.5469, -0.9531, -0.2793, -1.5078, -1.0547],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0034,  0.0148,  0.0150,  ..., -0.0076,  0.0175,  0.0178],
        [ 0.0317, -0.0003,  0.0013,  ..., -0.0040, -0.0369,  0.0182],
        [ 0.0050, -0.0023, -0.0084,  ..., -0.0037, -0.0349,  0.0345],
        ...,
        [-0.0063,  0.0012, -0.0725,  ..., -0.0076,  0.0098,  0.0119],
        [ 0.0002,  0.0165, -0.0039,  ..., -0.0314, -0.0155, -0.0099],
        [-0.0301,  0.0164, -0.0625,  ..., -0.0092, -0.0202,  0.0522]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.6875,  1.4062, -1.4766, -0.1436,  0.7188,  1.1953, -0.5703,  0.6133,  1.3672, -0.8672, -0.4277, -1.9531, -0.2578, -0.2891, -0.8906,  0.2461, -1.4766, -0.8477, -1.3047,  0.3008, -0.9141, -0.5820, -2.4531,  1.4453,  0.0859, -1.4609, -0.4531,  0.9141, -0.4668, -0.2188,  1.4141,  1.8438,
        -2.7656, -0.5508, -1.7109, -0.0139, -3.0312, -0.8359,  3.8906, -1.3203,  0.9648,  0.6445,  0.9258, -1.6719, -0.7891, -0.0752,  0.5820, -0.8086, -1.5312, -2.8281,  1.7188,  1.3672, -1.1484, -1.0938, -1.0391, -0.4082,  0.3965,  1.7734,  1.5156,  0.1719, -0.4551,  0.5547, -0.2988, -0.4297],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.9375,  1.3438, -0.4082, -0.2158,  0.4121,  1.2812,  2.3594,  1.5703,  1.6797,  0.7031,  1.9062,  2.2344,  2.2188,  3.9375],
        [ 0.0000,  2.6406,  1.2344,  0.4629,  0.1963,  0.3184,  1.3438,  2.4219,  2.3281,  2.7656,  2.0625,  2.4219,  3.0156,  3.2812,  4.5000],
        [ 0.0000,  1.8281,  1.2734,  0.3262,  0.3008,  0.1348,  0.9688,  1.7031,  1.8359,  2.3594,  1.2578,  2.2188,  2.2344,  2.6406,  3.9844],
        [ 0.0000,  2.9219,  1.4062, -0.2246,  0.1885,  0.6914,  1.8672,  2.6875,  2.0469,  2.5625,  1.4375,  2.2031,  2.5469,  2.7031,  3.7344],
        [ 0.0000,  2.8281,  1.4219, -0.3770,  0.2891, -0.0391,  0.7188,  2.4062,  0.8203,  1.8125,  0.1670,  1.4531,  1.8984,  1.0312,  3.8594],
        [ 0.0000,  3.3906,  1.5703, -1.6719, -0.6445, -0.8906,  0.0583,  2.7500,  0.2930,  1.8750, -0.9922,  0.5039,  1.1562,  0.1572,  4.5000],
        [ 0.0000,  3.4062,  0.9688, -1.2266, -0.9648, -0.4336,  1.1641,  1.8984,  0.8398,  2.0469, -0.2656,  0.9531,  0.8633,  1.0391,  4.4375],
        [ 0.0000,  3.7656,  1.7656, -0.0330, -0.0400,  0.7969,  2.1719,  2.8438,  1.5078,  2.8594,  1.0547,  2.1562,  2.0312,  1.8672,  3.7969],
        [ 0.0000,  2.6719,  1.1484, -0.0243, -0.5625,  0.4668,  1.6875,  2.4844,  1.2656,  1.6641,  0.5039,  1.0469,  1.7656,  1.5547,  3.9844],
        [ 0.0000,  3.4219,  1.6797,  0.1338,  0.2002,  1.3516,  1.8594,  3.5938,  2.4844,  2.5156,  1.8203,  2.3281,  2.9531,  2.7031,  4.2812],
        [ 0.0000,  2.5938,  0.5430, -0.2773, -0.6133, -0.3164,  0.6562,  2.1406,  1.3125,  2.5156,  0.8320,  1.1328,  2.2656,  1.8359,  3.8438],
        [ 0.0000,  2.3281,  0.0287, -1.7188, -1.1484, -0.5234,  0.5156,  1.3438,  0.4062,  1.1562, -0.0112,  0.1309,  0.5352,  0.7656,  3.5938],
        [ 0.0000,  3.0781,  0.7109, -1.0938, -0.6719,  0.3047,  1.4766,  2.0469,  1.0703,  1.6641,  0.5820,  1.2031,  1.4062,  1.4375,  3.0156],
        [ 0.0000,  2.2188,  0.6875, -1.3516, -0.8516,  0.0635,  0.6914,  2.1406,  1.4141,  0.9688,  0.0134,  1.6406,  1.8516,  1.8438,  3.5156]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1089],
        [0.0272],
        [0.0246],
        [0.0230],
        [0.0349],
        [0.0499],
        [0.0283],
        [0.0140],
        [0.0111],
        [0.0094],
        [0.0114],
        [0.0275],
        [0.0102],
        [0.0113]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5664, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.5234, 0.3398, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0461, 0.4316, 0.3418, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1777, 0.5586, 0.1875, 0.0286, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.4023, 0.0889, 0.0154, 0.0192, 0.4004, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0125, 0.4902, 0.0957, 0.0161, 0.0540, 0.1826, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0391, 0.2793, 0.1230, 0.0398, 0.0583, 0.2363, 0.1553, 0.0688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.2695, 0.0471, 0.0081, 0.0125, 0.4922, 0.0267, 0.0149, 0.0070, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.2930, 0.0977, 0.0078, 0.0132, 0.3887, 0.0280, 0.0111, 0.0127, 0.0322, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2100, 0.1660, 0.0277, 0.0034, 0.0054, 0.3379, 0.0170, 0.0108, 0.0052, 0.0201, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0488, 0.1982, 0.1196, 0.0481, 0.0762, 0.1348, 0.0903, 0.0498, 0.0294, 0.0236, 0.1367, 0.0447, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.2217, 0.0571, 0.0238, 0.0288, 0.2012, 0.0684, 0.0165, 0.0228, 0.0503, 0.0698, 0.0291, 0.0452, 0.0000, 0.0000],
        [0.2031, 0.2119, 0.0281, 0.0075, 0.0078, 0.3809, 0.0173, 0.0081, 0.0033, 0.0099, 0.0574, 0.0081, 0.0444, 0.0134, 0.0000],
        [0.1030, 0.3535, 0.0564, 0.0205, 0.0227, 0.1235, 0.0481, 0.0201, 0.0176, 0.0371, 0.0625, 0.0334, 0.0282, 0.0374, 0.0359]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0026,  0.0093,  0.0126,  ..., -0.0323,  0.0171,  0.0013],
        [ 0.0134, -0.0033,  0.0146,  ...,  0.0049, -0.0155,  0.0082],
        [ 0.0150, -0.0207, -0.0257,  ..., -0.0024,  0.0219, -0.0296],
        ...,
        [ 0.0137,  0.0105,  0.0034,  ...,  0.0020, -0.0278, -0.0342],
        [-0.0154, -0.0194,  0.0166,  ..., -0.0194,  0.0113,  0.0020],
        [-0.0071, -0.0003,  0.0235,  ..., -0.0160,  0.0055,  0.0042]], device='cuda:0', requires_grad=True)
K: tensor([ 1.6562, -0.8867,  0.4473, -0.9570, -1.1250, -0.1187, -0.4160, -0.9922,  1.6250,  0.6367,  1.8281,  0.2500, -0.1895,  0.5078, -0.7656,  0.1592,  1.1172, -0.8828, -0.0058, -0.8398,  0.6602,  0.7461, -0.8828,  0.1104, -1.8750,  0.1484, -0.4531,  0.9062, -0.2637, -0.1914,  0.5078, -0.5703,
         0.5703, -0.9531, -1.3281, -0.1475, -1.3828,  1.1328,  0.0124, -1.1250,  0.2910, -1.4453,  0.1582,  2.4219, -1.0156,  0.3066,  0.3027,  0.2354,  0.8047, -1.1797,  0.9180, -1.0781, -2.2344,  0.2158, -0.5703,  0.6406, -0.9844,  0.0781, -1.7109,  1.5703, -0.0203, -0.1309,  0.7031,  0.7227],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0034,      0.0302,      0.0095,  ...,      0.0528,     -0.0076,      0.0333],
        [    -0.0027,     -0.0023,      0.0117,  ...,      0.0082,     -0.0055,      0.0122],
        [     0.0116,     -0.0011,      0.0116,  ...,      0.0084,      0.0264,     -0.0294],
        ...,
        [     0.0057,     -0.0096,     -0.0096,  ...,     -0.0015,     -0.0178,      0.0139],
        [    -0.0000,     -0.0208,      0.0213,  ...,      0.0079,     -0.0040,      0.0403],
        [    -0.0109,     -0.0163,     -0.0250,  ...,      0.0399,      0.0108,      0.0046]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0547,  0.9727, -0.2383, -0.6523, -1.0859,  0.7695,  0.0493,  0.3145, -0.3516, -0.5430,  0.9023,  1.3906,  0.9648,  1.2500,  0.5742, -0.5273, -0.4980,  1.7969,  0.2051, -0.0178,  0.5664, -1.2891, -0.0869,  0.1611,  0.6211,  0.9180, -0.1631, -0.6133,  0.3242,  0.5078, -0.4980, -0.2910,
        -1.8906,  0.3906, -0.5391,  0.7734,  0.5195, -0.2676, -0.3457,  1.2578,  0.5078, -0.2197,  1.0781, -0.0072, -0.1689,  2.7188, -1.7344, -0.2812,  0.1533,  0.8672, -1.0469, -0.5781,  0.5039, -0.0630,  0.3633,  0.0476,  1.9375, -1.8906, -1.3906,  0.3926, -0.7773, -0.0142, -0.3008,  0.4141],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.2656, -1.7734, -3.8750, -3.7344,  0.2441, -2.7812, -3.5938, -4.5625, -3.1719, -2.0781, -3.3281, -2.2188, -3.4375, -2.7344],
        [ 0.0000,  1.3359,  0.9062,  0.2080, -0.1196,  1.3594, -0.0437, -0.4688, -1.2344, -0.9805,  0.0640, -1.4297, -0.4062, -1.0859, -1.1406],
        [ 0.0000,  2.2344,  2.0000,  1.3672,  1.3125,  1.9688,  1.5547,  1.0000,  0.1055,  0.0325,  0.9023,  0.2891,  0.2422, -0.0051,  0.4102],
        [ 0.0000,  1.1406,  0.0483, -1.8281, -1.3281,  1.7266, -0.3086, -1.1484, -2.4531, -1.7891, -0.4922, -1.9297, -0.9141, -2.0312, -1.2031],
        [ 0.0000,  1.7031,  0.1924, -1.5625, -1.3438,  1.7031, -0.1602, -1.4688, -1.9844, -1.7109, -0.0466, -1.9766, -1.5000, -1.4375, -1.0000],
        [ 0.0000,  3.6719,  2.0312,  0.2500,  1.4609,  2.6875,  2.4844,  1.7188,  0.6836,  0.7930,  1.2344,  0.2354, -0.3887,  0.2988,  1.2578],
        [ 0.0000,  1.9766,  1.1484,  0.0210,  0.4043,  1.8047,  1.3828,  0.5664,  0.1855, -0.0508, -0.1108, -0.6289, -0.9336,  0.0139,  0.4766],
        [ 0.0000,  0.7969, -0.9492, -2.7188, -2.2812,  1.3906, -1.5156, -2.1094, -2.8594, -2.3438, -0.3906, -2.2344, -1.5391, -2.2500, -1.9375],
        [ 0.0000,  0.9375, -0.1621, -2.6875, -2.1562,  1.2188, -1.4141, -2.3438, -2.2031, -1.2734,  0.0962, -1.3281, -1.3906, -1.3047, -1.0312],
        [ 0.0000, -0.2373, -2.0312, -4.1250, -3.6562,  0.4766, -2.5156, -2.9688, -3.7031, -2.3438, -0.0645, -2.4062, -1.2656, -2.7969, -2.5781],
        [ 0.0000,  1.3984,  0.8984, -0.0175,  0.4473,  1.0156,  0.6172,  0.0220, -0.5039, -0.7305,  1.0234, -0.0869, -0.2793, -0.1729, -0.2041],
        [ 0.0000,  0.2969, -1.0625, -1.9375, -1.7422,  0.2002, -0.8789, -2.2969, -1.9766, -1.1875, -0.8555, -1.7344, -1.2969, -0.5898, -0.2598],
        [ 0.0000,  0.0422, -1.9766, -3.2969, -3.2500,  0.6289, -2.4531, -3.2188, -4.0938, -3.0156, -1.2656, -3.2188, -1.5156, -2.7188, -2.2656],
        [ 0.0000,  1.2344, -0.6055, -1.6094, -1.5156,  0.1816, -0.7617, -1.6328, -1.7656, -1.0234, -0.4961, -1.1250, -1.2969, -1.0156, -1.0547]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0956],
        [0.0161],
        [0.0383],
        [0.0533],
        [0.0458],
        [0.0314],
        [0.0179],
        [0.0332],
        [0.0294],
        [0.0520],
        [0.0105],
        [0.1072],
        [0.0325],
        [0.0603]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1328 a:0.1982,:0.3320 and:0.1074.:0.1079,:0.3496 a:0.1367vern:0.0918)
vern
------
		( a:0.1982,:0.3320 and:0.1074.:0.1079,:0.3496 a:0.1367vern:0.0918acular:0.4961)
acular, and the most common of the world's most beautiful.
The
@ 3050 train 4.7143 , allloss: 4.7410, dt: 1662.55ms, fracRes: 0.4101, norm(attn): 0.1924, norm(output): 0.2344, norm(x): 0.4039, norm(y): 0.9934, norm:1.5927, tok/sec: 78838.01, flops:82.75, batch-reuse:1
@ 3051 train 4.6567 , allloss: 4.6832, dt: 1324.66ms, fracRes: 0.4119, norm(attn): 0.1895, norm(output): 0.2324, norm(x): 0.4019, norm(y): 0.9936, norm:1.9672, tok/sec: 98947.67, flops:103.86, batch-reuse:1
@ 3052 train 4.6060 , allloss: 4.6314, dt: 1274.09ms, fracRes: 0.4122, norm(attn): 0.1885, norm(output): 0.2314, norm(x): 0.4012, norm(y): 0.9934, norm:1.4753, tok/sec: 102875.20, flops:107.98, batch-reuse:1
@ 3053 train 4.6044 , allloss: 4.6296, dt: 1253.81ms, fracRes: 0.4142, norm(attn): 0.1924, norm(output): 0.2334, norm(x): 0.4070, norm(y): 0.9933, norm:1.6308, tok/sec: 104538.57, flops:109.73, batch-reuse:1
@ 3054 train 4.6309 , allloss: 4.6552, dt: 1264.17ms, fracRes: 0.4139, norm(attn): 0.1885, norm(output): 0.2324, norm(x): 0.4026, norm(y): 0.9934, norm:1.3946, tok/sec: 103681.99, flops:108.83, batch-reuse:1
@ 3055 train 4.5801 , allloss: 4.6029, dt: 1265.76ms, fracRes: 0.4144, norm(attn): 0.1885, norm(output): 0.2314, norm(x): 0.4008, norm(y): 0.9935, norm:1.4285, tok/sec: 103551.67, flops:108.69, batch-reuse:1
@ 3056 train 4.6433 , allloss: 4.6675, dt: 1289.32ms, fracRes: 0.4144, norm(attn): 0.1904, norm(output): 0.2334, norm(x): 0.4052, norm(y): 0.9934, norm:1.6028, tok/sec: 101659.56, flops:106.71, batch-reuse:1
@ 3057 train 4.6107 , allloss: 4.6338, dt: 1300.44ms, fracRes: 0.4153, norm(attn): 0.1885, norm(output): 0.2334, norm(x): 0.4086, norm(y): 0.9935, norm:1.5569, tok/sec: 100790.16, flops:105.79, batch-reuse:1
@ 3058 train 4.6324 , allloss: 4.6587, dt: 1276.05ms, fracRes: 0.4148, norm(attn): 0.1885, norm(output): 0.2334, norm(x): 0.4069, norm(y): 0.9934, norm:1.5525, tok/sec: 102716.82, flops:107.81, batch-reuse:1
@ 3059 train 4.5917 , allloss: 4.6153, dt: 1282.21ms, fracRes: 0.4144, norm(attn): 0.1895, norm(output): 0.2324, norm(x): 0.4052, norm(y): 0.9934, norm:1.4824, tok/sec: 102223.70, flops:107.30, batch-reuse:1
@ 3060 train 4.7779 , allloss: 4.8019, dt: 1275.52ms, fracRes: 0.4166, norm(attn): 0.1875, norm(output): 0.2334, norm(x): 0.4078, norm(y): 0.9934, norm:1.5049, tok/sec: 102759.86, flops:107.86, batch-reuse:1
@ 3061 train 4.5172 , allloss: 4.5423, dt: 1246.96ms, fracRes: 0.4202, norm(attn): 0.1865, norm(output): 0.2314, norm(x): 0.4111, norm(y): 0.9933, norm:2.5452, tok/sec: 105113.58, flops:110.33, batch-reuse:1
@ 3062 train 4.5466 , allloss: 4.5716, dt: 1257.39ms, fracRes: 0.4175, norm(attn): 0.1885, norm(output): 0.2324, norm(x): 0.4077, norm(y): 0.9933, norm:1.7250, tok/sec: 104241.68, flops:109.42, batch-reuse:1
@ 3063 train 4.5803 , allloss: 4.6066, dt: 1263.42ms, fracRes: 0.4169, norm(attn): 0.1875, norm(output): 0.2334, norm(x): 0.4097, norm(y): 0.9934, norm:1.7551, tok/sec: 103744.01, flops:108.89, batch-reuse:1
@ 3064 train 4.5315 , allloss: 4.5557, dt: 1244.53ms, fracRes: 0.4165, norm(attn): 0.1875, norm(output): 0.2334, norm(x): 0.4096, norm(y): 0.9934, norm:1.4752, tok/sec: 105318.36, flops:110.55, batch-reuse:1
@ 3065 train 4.6615 , allloss: 4.6854, dt: 1264.06ms, fracRes: 0.4155, norm(attn): 0.1875, norm(output): 0.2334, norm(x): 0.4084, norm(y): 0.9935, norm:1.6974, tok/sec: 103691.47, flops:108.84, batch-reuse:1
@ 3066 train 4.6534 , allloss: 4.6789, dt: 1254.11ms, fracRes: 0.4163, norm(attn): 0.1885, norm(output): 0.2334, norm(x): 0.4081, norm(y): 0.9934, norm:1.5742, tok/sec: 104513.61, flops:109.70, batch-reuse:1
@ 3067 train 4.6919 , allloss: 4.7154, dt: 1274.74ms, fracRes: 0.4134, norm(attn): 0.1904, norm(output): 0.2334, norm(x): 0.4062, norm(y): 0.9933, norm:1.6107, tok/sec: 102822.23, flops:107.93, batch-reuse:1
@ 3068 train 4.5813 , allloss: 4.6048, dt: 1250.76ms, fracRes: 0.4143, norm(attn): 0.1895, norm(output): 0.2324, norm(x): 0.4073, norm(y): 0.9933, norm:1.5405, tok/sec: 104793.66, flops:109.99, batch-reuse:1
@ 3069 train 4.6064 , allloss: 4.6298, dt: 1270.33ms, fracRes: 0.4129, norm(attn): 0.1914, norm(output): 0.2334, norm(x): 0.4061, norm(y): 0.9934, norm:1.6385, tok/sec: 103179.40, flops:108.30, batch-reuse:1
@ 3070 train 4.5823 , allloss: 4.6049, dt: 1252.30ms, fracRes: 0.4117, norm(attn): 0.1914, norm(output): 0.2334, norm(x): 0.4070, norm(y): 0.9934, norm:1.6902, tok/sec: 104664.87, flops:109.86, batch-reuse:1
@ 3071 train 4.5943 , allloss: 4.6195, dt: 1262.92ms, fracRes: 0.4126, norm(attn): 0.1914, norm(output): 0.2344, norm(x): 0.4089, norm(y): 0.9934, norm:1.4847, tok/sec: 103784.87, flops:108.94, batch-reuse:1
@ 3072 train 4.5723 , allloss: 4.5982, dt: 1263.59ms, fracRes: 0.4127, norm(attn): 0.1914, norm(output): 0.2334, norm(x): 0.4068, norm(y): 0.9933, norm:1.5673, tok/sec: 103729.92, flops:108.88, batch-reuse:1
@ 3073 train 4.5273 , allloss: 4.5548, dt: 1271.93ms, fracRes: 0.4119, norm(attn): 0.1914, norm(output): 0.2334, norm(x): 0.4048, norm(y): 0.9934, norm:1.3974, tok/sec: 103050.01, flops:108.16, batch-reuse:1
@ 3074 train 4.5012 , allloss: 4.5241, dt: 1277.67ms, fracRes: 0.4126, norm(attn): 0.1914, norm(output): 0.2344, norm(x): 0.4074, norm(y): 0.9935, norm:1.4939, tok/sec: 102586.82, flops:107.68, batch-reuse:1
@ 3075 train 4.5973 , allloss: 4.6200, dt: 1291.53ms, fracRes: 0.4126, norm(attn): 0.1904, norm(output): 0.2334, norm(x): 0.4048, norm(y): 0.9934, norm:1.4219, tok/sec: 101485.84, flops:106.52, batch-reuse:1
@ 3076 train 4.5262 , allloss: 4.5499, dt: 1266.75ms, fracRes: 0.4109, norm(attn): 0.1924, norm(output): 0.2324, norm(x): 0.4013, norm(y): 0.9933, norm:1.7072, tok/sec: 103470.92, flops:108.61, batch-reuse:1
@ 3077 train 4.5484 , allloss: 4.5726, dt: 1262.84ms, fracRes: 0.4112, norm(attn): 0.1934, norm(output): 0.2334, norm(x): 0.4049, norm(y): 0.9933, norm:1.4220, tok/sec: 103791.20, flops:108.94, batch-reuse:1
@ 3078 train 4.5472 , allloss: 4.5712, dt: 1260.39ms, fracRes: 0.4120, norm(attn): 0.1914, norm(output): 0.2334, norm(x): 0.4076, norm(y): 0.9933, norm:1.5983, tok/sec: 103993.15, flops:109.15, batch-reuse:1
@ 3079 train 4.5139 , allloss: 4.5385, dt: 1260.69ms, fracRes: 0.4092, norm(attn): 0.1943, norm(output): 0.2334, norm(x): 0.4041, norm(y): 0.9934, norm:2.2009, tok/sec: 103968.40, flops:109.13, batch-reuse:1
@ 3080 train 4.6418 , allloss: 4.6654, dt: 1263.42ms, fracRes: 0.4094, norm(attn): 0.1943, norm(output): 0.2344, norm(x): 0.4081, norm(y): 0.9933, norm:1.4866, tok/sec: 103743.52, flops:108.89, batch-reuse:1
@ 3081 train 4.6156 , allloss: 4.6393, dt: 1266.06ms, fracRes: 0.4103, norm(attn): 0.1885, norm(output): 0.2344, norm(x): 0.4068, norm(y): 0.9933, norm:1.3965, tok/sec: 103527.70, flops:108.67, batch-reuse:1
@ 3082 train 4.6247 , allloss: 4.6493, dt: 1275.55ms, fracRes: 0.4103, norm(attn): 0.1934, norm(output): 0.2344, norm(x): 0.4077, norm(y): 0.9932, norm:1.7888, tok/sec: 102757.25, flops:107.86, batch-reuse:1
@ 3083 train 4.5133 , allloss: 4.5358, dt: 1259.94ms, fracRes: 0.4101, norm(attn): 0.1943, norm(output): 0.2344, norm(x): 0.4075, norm(y): 0.9932, norm:1.5371, tok/sec: 104030.32, flops:109.19, batch-reuse:1
@ 3084 train 4.5273 , allloss: 4.5500, dt: 1275.11ms, fracRes: 0.4128, norm(attn): 0.1895, norm(output): 0.2344, norm(x): 0.4095, norm(y): 0.9934, norm:1.5839, tok/sec: 102792.32, flops:107.89, batch-reuse:1
@ 3085 train 4.6240 , allloss: 4.6477, dt: 1271.49ms, fracRes: 0.4143, norm(attn): 0.1895, norm(output): 0.2354, norm(x): 0.4140, norm(y): 0.9934, norm:1.5744, tok/sec: 103085.19, flops:108.20, batch-reuse:1
@ 3086 train 4.4895 , allloss: 4.5163, dt: 1257.25ms, fracRes: 0.4126, norm(attn): 0.1934, norm(output): 0.2354, norm(x): 0.4142, norm(y): 0.9933, norm:1.5688, tok/sec: 104253.32, flops:109.43, batch-reuse:1
@ 3087 train 4.5635 , allloss: 4.5877, dt: 1280.86ms, fracRes: 0.4091, norm(attn): 0.1934, norm(output): 0.2344, norm(x): 0.4090, norm(y): 0.9933, norm:1.3839, tok/sec: 102331.23, flops:107.41, batch-reuse:1
@ 3088 train 4.5602 , allloss: 4.5850, dt: 1245.04ms, fracRes: 0.4079, norm(attn): 0.1895, norm(output): 0.2334, norm(x): 0.4061, norm(y): 0.9933, norm:1.6063, tok/sec: 105275.14, flops:110.50, batch-reuse:1
@ 3089 train 4.5806 , allloss: 4.6031, dt: 1279.52ms, fracRes: 0.4076, norm(attn): 0.1934, norm(output): 0.2344, norm(x): 0.4063, norm(y): 0.9932, norm:1.6084, tok/sec: 102438.76, flops:107.52, batch-reuse:1
@ 3090 train 4.4976 , allloss: 4.5204, dt: 1269.55ms, fracRes: 0.4067, norm(attn): 0.1895, norm(output): 0.2344, norm(x): 0.4050, norm(y): 0.9933, norm:1.4993, tok/sec: 103242.68, flops:108.37, batch-reuse:1
@ 3091 train 4.6969 , allloss: 4.7207, dt: 1260.12ms, fracRes: 0.4079, norm(attn): 0.1895, norm(output): 0.2354, norm(x): 0.4101, norm(y): 0.9933, norm:1.5950, tok/sec: 104015.81, flops:109.18, batch-reuse:1
@ 3092 train 4.5494 , allloss: 4.5735, dt: 1256.43ms, fracRes: 0.4088, norm(attn): 0.1885, norm(output): 0.2344, norm(x): 0.4086, norm(y): 0.9934, norm:1.5186, tok/sec: 104320.60, flops:109.50, batch-reuse:1
@ 3093 train 4.5817 , allloss: 4.6040, dt: 1248.27ms, fracRes: 0.4091, norm(attn): 0.1885, norm(output): 0.2354, norm(x): 0.4101, norm(y): 0.9934, norm:1.8065, tok/sec: 105002.92, flops:110.21, batch-reuse:1
@ 3094 train 4.5599 , allloss: 4.5842, dt: 1243.31ms, fracRes: 0.4098, norm(attn): 0.1904, norm(output): 0.2334, norm(x): 0.4082, norm(y): 0.9933, norm:1.7813, tok/sec: 105421.78, flops:110.65, batch-reuse:1
@ 3095 train 4.5685 , allloss: 4.5924, dt: 1258.15ms, fracRes: 0.4094, norm(attn): 0.1895, norm(output): 0.2344, norm(x): 0.4054, norm(y): 0.9933, norm:1.3932, tok/sec: 104178.07, flops:109.35, batch-reuse:1
@ 3096 train 4.6343 , allloss: 4.6561, dt: 1256.22ms, fracRes: 0.4103, norm(attn): 0.1885, norm(output): 0.2354, norm(x): 0.4106, norm(y): 0.9933, norm:1.4141, tok/sec: 104338.42, flops:109.52, batch-reuse:1
@ 3097 train 4.5937 , allloss: 4.6159, dt: 1261.37ms, fracRes: 0.4123, norm(attn): 0.1875, norm(output): 0.2354, norm(x): 0.4120, norm(y): 0.9935, norm:1.5497, tok/sec: 103912.67, flops:109.07, batch-reuse:1
@ 3098 train 4.5542 , allloss: 4.5767, dt: 1256.10ms, fracRes: 0.4086, norm(attn): 0.1885, norm(output): 0.2344, norm(x): 0.4063, norm(y): 0.9934, norm:1.4319, tok/sec: 104348.35, flops:109.53, batch-reuse:1
@ 3099 train 4.5982 , allloss: 4.6228, dt: 1258.35ms, fracRes: 0.4098, norm(attn): 0.1895, norm(output): 0.2344, norm(x): 0.4088, norm(y): 0.9933, norm:1.3325, tok/sec: 104161.71, flops:109.33, batch-reuse:1
@ 3100 train 4.4690 , allloss: 4.4920, dt: 1244.54ms, fracRes: 0.4090, norm(attn): 0.1914, norm(output): 0.2344, norm(x): 0.4078, norm(y): 0.9932, norm:1.3403, tok/sec: 105317.39, flops:110.54, batch-reuse:1
@ 3101 train 4.5129 , allloss: 4.5347, dt: 1261.09ms, fracRes: 0.4082, norm(attn): 0.1914, norm(output): 0.2373, norm(x): 0.4109, norm(y): 0.9932, norm:1.6501, tok/sec: 103935.17, flops:109.09, batch-reuse:1
@ 3102 train 4.5763 , allloss: 4.5984, dt: 1261.65ms, fracRes: 0.4097, norm(attn): 0.1895, norm(output): 0.2354, norm(x): 0.4101, norm(y): 0.9933, norm:1.5608, tok/sec: 103889.46, flops:109.05, batch-reuse:1
@ 3103 train 4.5707 , allloss: 4.5959, dt: 1310.16ms, fracRes: 0.4083, norm(attn): 0.1934, norm(output): 0.2344, norm(x): 0.4074, norm(y): 0.9933, norm:1.9129, tok/sec: 100042.44, flops:105.01, batch-reuse:1
@ 3104 train 4.4570 , allloss: 4.4811, dt: 1249.61ms, fracRes: 0.4086, norm(attn): 0.1914, norm(output): 0.2344, norm(x): 0.4081, norm(y): 0.9933, norm:1.7586, tok/sec: 104890.07, flops:110.10, batch-reuse:1
@ 3105 train 4.6379 , allloss: 4.6614, dt: 1235.43ms, fracRes: 0.4104, norm(attn): 0.1904, norm(output): 0.2344, norm(x): 0.4113, norm(y): 0.9932, norm:1.7546, tok/sec: 106094.50, flops:111.36, batch-reuse:1
@ 3106 train 4.4971 , allloss: 4.5205, dt: 1255.44ms, fracRes: 0.4096, norm(attn): 0.1895, norm(output): 0.2344, norm(x): 0.4077, norm(y): 0.9931, norm:1.3686, tok/sec: 104403.18, flops:109.58, batch-reuse:1
@ 3107 train 4.4886 , allloss: 4.5102, dt: 1271.11ms, fracRes: 0.4102, norm(attn): 0.1895, norm(output): 0.2354, norm(x): 0.4088, norm(y): 0.9934, norm:1.7861, tok/sec: 103115.94, flops:108.23, batch-reuse:1
@ 3108 train 4.5803 , allloss: 4.6038, dt: 1245.81ms, fracRes: 0.4138, norm(attn): 0.1875, norm(output): 0.2354, norm(x): 0.4126, norm(y): 0.9934, norm:1.8359, tok/sec: 105210.00, flops:110.43, batch-reuse:1
@ 3109 train 4.4868 , allloss: 4.5097, dt: 1256.96ms, fracRes: 0.4146, norm(attn): 0.1865, norm(output): 0.2344, norm(x): 0.4129, norm(y): 0.9934, norm:1.7334, tok/sec: 104276.85, flops:109.45, batch-reuse:1
@ 3110 train 4.4952 , allloss: 4.5176, dt: 1243.46ms, fracRes: 0.4138, norm(attn): 0.1885, norm(output): 0.2344, norm(x): 0.4127, norm(y): 0.9932, norm:1.4534, tok/sec: 105409.23, flops:110.64, batch-reuse:1
@ 3111 train 4.6145 , allloss: 4.6390, dt: 1276.33ms, fracRes: 0.4136, norm(attn): 0.1904, norm(output): 0.2354, norm(x): 0.4127, norm(y): 0.9932, norm:1.7745, tok/sec: 102694.81, flops:107.79, batch-reuse:1
@ 3112 train 4.4466 , allloss: 4.4766, dt: 1257.94ms, fracRes: 0.4114, norm(attn): 0.1904, norm(output): 0.2344, norm(x): 0.4083, norm(y): 0.9932, norm:1.3396, tok/sec: 104195.47, flops:109.37, batch-reuse:1
@ 3113 train 4.4937 , allloss: 4.5262, dt: 1266.41ms, fracRes: 0.4121, norm(attn): 0.1914, norm(output): 0.2344, norm(x): 0.4089, norm(y): 0.9932, norm:1.4998, tok/sec: 103498.49, flops:108.64, batch-reuse:1
@ 3114 train 4.5205 , allloss: 4.5436, dt: 1271.27ms, fracRes: 0.4140, norm(attn): 0.1904, norm(output): 0.2344, norm(x): 0.4115, norm(y): 0.9932, norm:1.4804, tok/sec: 103103.31, flops:108.22, batch-reuse:1
@ 3115 train 4.4716 , allloss: 4.4978, dt: 1255.51ms, fracRes: 0.4124, norm(attn): 0.1924, norm(output): 0.2344, norm(x): 0.4115, norm(y): 0.9932, norm:1.5057, tok/sec: 104397.59, flops:109.58, batch-reuse:1
@ 3116 train 4.4540 , allloss: 4.4774, dt: 1256.28ms, fracRes: 0.4115, norm(attn): 0.1934, norm(output): 0.2354, norm(x): 0.4123, norm(y): 0.9933, norm:1.5292, tok/sec: 104333.41, flops:109.51, batch-reuse:1
@ 3117 train 4.4654 , allloss: 4.4898, dt: 1258.98ms, fracRes: 0.4104, norm(attn): 0.1924, norm(output): 0.2363, norm(x): 0.4127, norm(y): 0.9933, norm:1.4028, tok/sec: 104109.67, flops:109.28, batch-reuse:1
@ 3118 train 4.4190 , allloss: 4.4435, dt: 1259.88ms, fracRes: 0.4073, norm(attn): 0.1914, norm(output): 0.2344, norm(x): 0.4061, norm(y): 0.9932, norm:1.5371, tok/sec: 104035.40, flops:109.20, batch-reuse:1
@ 3119 train 4.7387 , allloss: 4.7658, dt: 1251.96ms, fracRes: 0.4058, norm(attn): 0.1934, norm(output): 0.2354, norm(x): 0.4042, norm(y): 0.9931, norm:1.7953, tok/sec: 104693.36, flops:109.89, batch-reuse:1
@ 3120 train 4.5222 , allloss: 4.5441, dt: 1245.30ms, fracRes: 0.4057, norm(attn): 0.1953, norm(output): 0.2354, norm(x): 0.4070, norm(y): 0.9931, norm:1.5888, tok/sec: 105253.09, flops:110.48, batch-reuse:1
@ 3121 train 4.2845 , allloss: 4.3124, dt: 1271.23ms, fracRes: 0.4085, norm(attn): 0.1973, norm(output): 0.2354, norm(x): 0.4089, norm(y): 0.9932, norm:1.9018, tok/sec: 103106.13, flops:108.22, batch-reuse:1
@ 3122 train 4.4322 , allloss: 4.4564, dt: 1280.41ms, fracRes: 0.4085, norm(attn): 0.1953, norm(output): 0.2354, norm(x): 0.4109, norm(y): 0.9932, norm:1.5638, tok/sec: 102366.92, flops:107.45, batch-reuse:1
@ 3123 train 4.6270 , allloss: 4.6514, dt: 1276.10ms, fracRes: 0.4106, norm(attn): 0.1934, norm(output): 0.2373, norm(x): 0.4128, norm(y): 0.9932, norm:2.4223, tok/sec: 102712.77, flops:107.81, batch-reuse:1
@ 3124 train 4.6050 , allloss: 4.6277, dt: 1259.38ms, fracRes: 0.4088, norm(attn): 0.1963, norm(output): 0.2344, norm(x): 0.4062, norm(y): 0.9932, norm:1.9246, tok/sec: 104076.56, flops:109.24, batch-reuse:1
@ 3125 train 4.5392 , allloss: 4.5625, dt: 1270.94ms, fracRes: 0.4114, norm(attn): 0.1904, norm(output): 0.2354, norm(x): 0.4130, norm(y): 0.9932, norm:1.6811, tok/sec: 103130.02, flops:108.25, batch-reuse:1
@ 3126 train 4.3710 , allloss: 4.3940, dt: 1272.52ms, fracRes: 0.4099, norm(attn): 0.1953, norm(output): 0.2363, norm(x): 0.4127, norm(y): 0.9931, norm:1.8557, tok/sec: 103002.14, flops:108.11, batch-reuse:1
@ 3127 train 4.4842 , allloss: 4.5085, dt: 1285.77ms, fracRes: 0.4094, norm(attn): 0.1943, norm(output): 0.2354, norm(x): 0.4115, norm(y): 0.9931, norm:1.6911, tok/sec: 101940.76, flops:107.00, batch-reuse:1
@ 3128 train 4.4780 , allloss: 4.5014, dt: 1262.52ms, fracRes: 0.4083, norm(attn): 0.1914, norm(output): 0.2344, norm(x): 0.4098, norm(y): 0.9931, norm:1.8343, tok/sec: 103817.66, flops:108.97, batch-reuse:1
@ 3129 train 4.3650 , allloss: 4.3895, dt: 1259.90ms, fracRes: 0.4079, norm(attn): 0.1914, norm(output): 0.2354, norm(x): 0.4093, norm(y): 0.9931, norm:1.7479, tok/sec: 104033.63, flops:109.20, batch-reuse:1
@ 3130 train 4.4630 , allloss: 4.4882, dt: 1268.09ms, fracRes: 0.4071, norm(attn): 0.1924, norm(output): 0.2363, norm(x): 0.4104, norm(y): 0.9931, norm:1.3684, tok/sec: 103361.38, flops:108.49, batch-reuse:1
@ 3131 train 4.3543 , allloss: 4.3779, dt: 1280.48ms, fracRes: 0.4068, norm(attn): 0.1914, norm(output): 0.2354, norm(x): 0.4086, norm(y): 0.9932, norm:1.6091, tok/sec: 102361.34, flops:107.44, batch-reuse:1
@ 3132 train 4.3951 , allloss: 4.4163, dt: 1246.62ms, fracRes: 0.4053, norm(attn): 0.1934, norm(output): 0.2363, norm(x): 0.4076, norm(y): 0.9931, norm:1.4984, tok/sec: 105141.57, flops:110.36, batch-reuse:1
@ 3133 train 4.4017 , allloss: 4.4244, dt: 1275.53ms, fracRes: 0.4079, norm(attn): 0.1914, norm(output): 0.2373, norm(x): 0.4116, norm(y): 0.9932, norm:1.3995, tok/sec: 102759.08, flops:107.86, batch-reuse:1
@ 3134 train 4.3953 , allloss: 4.4202, dt: 1272.44ms, fracRes: 0.4077, norm(attn): 0.1924, norm(output): 0.2354, norm(x): 0.4088, norm(y): 0.9932, norm:1.7285, tok/sec: 103008.28, flops:108.12, batch-reuse:1
@ 3135 train 4.4118 , allloss: 4.4380, dt: 1276.64ms, fracRes: 0.4092, norm(attn): 0.1953, norm(output): 0.2354, norm(x): 0.4106, norm(y): 0.9931, norm:1.5324, tok/sec: 102669.86, flops:107.77, batch-reuse:1
@ 3136 train 4.3859 , allloss: 4.4302, dt: 1259.85ms, fracRes: 0.4082, norm(attn): 0.1973, norm(output): 0.2373, norm(x): 0.4105, norm(y): 0.9930, norm:1.5960, tok/sec: 104037.62, flops:109.20, batch-reuse:1
@ 3137 train 4.4561 , allloss: 4.4793, dt: 1264.49ms, fracRes: 0.4080, norm(attn): 0.1953, norm(output): 0.2363, norm(x): 0.4104, norm(y): 0.9931, norm:1.2988, tok/sec: 103655.77, flops:108.80, batch-reuse:1
@ 3138 train 4.5091 , allloss: 4.5322, dt: 1266.00ms, fracRes: 0.4075, norm(attn): 0.1934, norm(output): 0.2344, norm(x): 0.4099, norm(y): 0.9932, norm:1.5369, tok/sec: 103532.44, flops:108.67, batch-reuse:1
@ 3139 train 4.4250 , allloss: 4.4550, dt: 1266.52ms, fracRes: 0.4068, norm(attn): 0.1953, norm(output): 0.2354, norm(x): 0.4089, norm(y): 0.9931, norm:1.4919, tok/sec: 103490.09, flops:108.63, batch-reuse:1
@ 3140 train 4.4574 , allloss: 4.4805, dt: 1255.23ms, fracRes: 0.4101, norm(attn): 0.1953, norm(output): 0.2373, norm(x): 0.4137, norm(y): 0.9931, norm:1.5806, tok/sec: 104420.51, flops:109.60, batch-reuse:1
@ 3141 train 4.4849 , allloss: 4.5102, dt: 1266.00ms, fracRes: 0.4110, norm(attn): 0.1914, norm(output): 0.2344, norm(x): 0.4129, norm(y): 0.9931, norm:1.5312, tok/sec: 103532.71, flops:108.67, batch-reuse:1
@ 3142 train 4.3872 , allloss: 4.4101, dt: 1292.17ms, fracRes: 0.4124, norm(attn): 0.1934, norm(output): 0.2344, norm(x): 0.4121, norm(y): 0.9931, norm:1.7011, tok/sec: 101435.83, flops:106.47, batch-reuse:1
@ 3143 train 4.7411 , allloss: 4.7639, dt: 1265.45ms, fracRes: 0.4148, norm(attn): 0.1895, norm(output): 0.2373, norm(x): 0.4192, norm(y): 0.9931, norm:2.0115, tok/sec: 103577.44, flops:108.72, batch-reuse:1
@ 3144 train 4.4783 , allloss: 4.5025, dt: 1264.69ms, fracRes: 0.4120, norm(attn): 0.1914, norm(output): 0.2354, norm(x): 0.4130, norm(y): 0.9932, norm:1.7538, tok/sec: 103639.93, flops:108.78, batch-reuse:1
@ 3145 train 4.4364 , allloss: 4.4598, dt: 1264.52ms, fracRes: 0.4140, norm(attn): 0.1914, norm(output): 0.2354, norm(x): 0.4155, norm(y): 0.9931, norm:1.3718, tok/sec: 103653.74, flops:108.80, batch-reuse:1
@ 3146 train 4.4078 , allloss: 4.4344, dt: 1283.84ms, fracRes: 0.4122, norm(attn): 0.1973, norm(output): 0.2354, norm(x): 0.4136, norm(y): 0.9930, norm:1.5620, tok/sec: 102093.34, flops:107.16, batch-reuse:1
@ 3147 train 4.3874 , allloss: 4.4137, dt: 1271.91ms, fracRes: 0.4140, norm(attn): 0.1895, norm(output): 0.2363, norm(x): 0.4193, norm(y): 0.9933, norm:1.4604, tok/sec: 103051.07, flops:108.17, batch-reuse:1
@ 3148 train 4.4615 , allloss: 4.4837, dt: 1261.51ms, fracRes: 0.4136, norm(attn): 0.1885, norm(output): 0.2354, norm(x): 0.4170, norm(y): 0.9933, norm:1.6119, tok/sec: 103900.67, flops:109.06, batch-reuse:1
@ 3149 train 4.4990 , allloss: 4.5236, dt: 1253.61ms, fracRes: 0.4098, norm(attn): 0.1885, norm(output): 0.2354, norm(x): 0.4138, norm(y): 0.9932, norm:1.6192, tok/sec: 104555.97, flops:109.75, batch-reuse:1
@ 3150 train 4.4690 , allloss: 4.4921, dt: 1261.63ms, fracRes: 0.4113, norm(attn): 0.1895, norm(output): 0.2373, norm(x): 0.4167, norm(y): 0.9932, norm:1.5737, tok/sec: 103890.88, flops:109.05, batch-reuse:1
@ 3151 train 4.4476 , allloss: 4.4705, dt: 1255.68ms, fracRes: 0.4104, norm(attn): 0.1914, norm(output): 0.2363, norm(x): 0.4149, norm(y): 0.9931, norm:1.4265, tok/sec: 104383.45, flops:109.56, batch-reuse:1
@ 3152 train 4.4431 , allloss: 4.4691, dt: 1273.04ms, fracRes: 0.4111, norm(attn): 0.1875, norm(output): 0.2354, norm(x): 0.4145, norm(y): 0.9931, norm:1.3805, tok/sec: 102960.05, flops:108.07, batch-reuse:1
@ 3153 train 4.4382 , allloss: 4.4611, dt: 1288.23ms, fracRes: 0.4097, norm(attn): 0.1914, norm(output): 0.2354, norm(x): 0.4115, norm(y): 0.9931, norm:1.5437, tok/sec: 101745.83, flops:106.80, batch-reuse:1
@ 3154 train 4.4887 , allloss: 4.5135, dt: 1279.49ms, fracRes: 0.4115, norm(attn): 0.1924, norm(output): 0.2363, norm(x): 0.4155, norm(y): 0.9931, norm:1.4880, tok/sec: 102440.49, flops:107.52, batch-reuse:1
@ 3155 train 4.3583 , allloss: 4.3825, dt: 1299.66ms, fracRes: 0.4117, norm(attn): 0.1914, norm(output): 0.2354, norm(x): 0.4145, norm(y): 0.9931, norm:1.5282, tok/sec: 100850.79, flops:105.86, batch-reuse:1
@ 3156 train 4.4184 , allloss: 4.4416, dt: 1266.88ms, fracRes: 0.4102, norm(attn): 0.1924, norm(output): 0.2354, norm(x): 0.4146, norm(y): 0.9930, norm:1.2756, tok/sec: 103460.37, flops:108.60, batch-reuse:1
@ 3157 train 4.4954 , allloss: 4.5183, dt: 1274.11ms, fracRes: 0.4098, norm(attn): 0.1914, norm(output): 0.2363, norm(x): 0.4153, norm(y): 0.9930, norm:1.3364, tok/sec: 102873.12, flops:107.98, batch-reuse:1
@ 3158 train 4.4253 , allloss: 4.4483, dt: 1260.70ms, fracRes: 0.4080, norm(attn): 0.1914, norm(output): 0.2363, norm(x): 0.4130, norm(y): 0.9930, norm:1.3100, tok/sec: 103967.99, flops:109.13, batch-reuse:1
@ 3159 train 4.3683 , allloss: 4.3922, dt: 1274.22ms, fracRes: 0.4093, norm(attn): 0.1934, norm(output): 0.2373, norm(x): 0.4151, norm(y): 0.9931, norm:1.3236, tok/sec: 102864.36, flops:107.97, batch-reuse:1
@ 3160 train 4.6379 , allloss: 4.6618, dt: 1287.81ms, fracRes: 0.4112, norm(attn): 0.1895, norm(output): 0.2383, norm(x): 0.4206, norm(y): 0.9931, norm:1.4653, tok/sec: 101779.25, flops:106.83, batch-reuse:1
@ 3161 train 4.5874 , allloss: 4.6104, dt: 1276.45ms, fracRes: 0.4130, norm(attn): 0.1885, norm(output): 0.2373, norm(x): 0.4203, norm(y): 0.9930, norm:1.5958, tok/sec: 102685.05, flops:107.78, batch-reuse:1
@ 3162 train 4.4986 , allloss: 4.5286, dt: 1269.43ms, fracRes: 0.4094, norm(attn): 0.1953, norm(output): 0.2383, norm(x): 0.4169, norm(y): 0.9929, norm:1.6041, tok/sec: 103253.04, flops:108.38, batch-reuse:1
@ 3163 train 4.6390 , allloss: 4.6618, dt: 1283.05ms, fracRes: 0.4101, norm(attn): 0.1953, norm(output): 0.2393, norm(x): 0.4188, norm(y): 0.9929, norm:1.4678, tok/sec: 102156.69, flops:107.23, batch-reuse:1
@ 3164 train 4.5716 , allloss: 4.5979, dt: 1261.11ms, fracRes: 0.4106, norm(attn): 0.1934, norm(output): 0.2393, norm(x): 0.4185, norm(y): 0.9929, norm:1.5722, tok/sec: 103934.07, flops:109.09, batch-reuse:1
@ 3165 train 4.5394 , allloss: 4.5629, dt: 1264.31ms, fracRes: 0.4098, norm(attn): 0.1943, norm(output): 0.2402, norm(x): 0.4191, norm(y): 0.9930, norm:1.6492, tok/sec: 103670.96, flops:108.82, batch-reuse:1
@ 3166 train 4.6839 , allloss: 4.7110, dt: 1264.29ms, fracRes: 0.4100, norm(attn): 0.1914, norm(output): 0.2393, norm(x): 0.4195, norm(y): 0.9930, norm:1.6111, tok/sec: 103672.47, flops:108.82, batch-reuse:1
@ 3167 train 4.5215 , allloss: 4.5465, dt: 1255.98ms, fracRes: 0.4095, norm(attn): 0.1953, norm(output): 0.2393, norm(x): 0.4190, norm(y): 0.9929, norm:1.5077, tok/sec: 104358.09, flops:109.54, batch-reuse:1
@ 3168 train 4.5746 , allloss: 4.5974, dt: 1281.06ms, fracRes: 0.4087, norm(attn): 0.1924, norm(output): 0.2383, norm(x): 0.4151, norm(y): 0.9930, norm:1.4731, tok/sec: 102315.01, flops:107.39, batch-reuse:1
@ 3169 train 4.6340 , allloss: 4.6572, dt: 1243.31ms, fracRes: 0.4098, norm(attn): 0.1943, norm(output): 0.2402, norm(x): 0.4206, norm(y): 0.9930, norm:1.9815, tok/sec: 105422.14, flops:110.65, batch-reuse:1
@ 3170 train 4.5886 , allloss: 4.6150, dt: 1273.39ms, fracRes: 0.4092, norm(attn): 0.1934, norm(output): 0.2373, norm(x): 0.4168, norm(y): 0.9930, norm:1.5111, tok/sec: 102931.85, flops:108.04, batch-reuse:1
@ 3171 train 4.6055 , allloss: 4.6303, dt: 1274.09ms, fracRes: 0.4087, norm(attn): 0.1943, norm(output): 0.2383, norm(x): 0.4161, norm(y): 0.9929, norm:1.7675, tok/sec: 102875.03, flops:107.98, batch-reuse:1
@ 3172 train 4.5939 , allloss: 4.6199, dt: 1251.65ms, fracRes: 0.4100, norm(attn): 0.1934, norm(output): 0.2393, norm(x): 0.4204, norm(y): 0.9929, norm:1.8790, tok/sec: 104719.34, flops:109.92, batch-reuse:1
@ 3173 train 4.5918 , allloss: 4.6143, dt: 1266.39ms, fracRes: 0.4097, norm(attn): 0.1953, norm(output): 0.2402, norm(x): 0.4181, norm(y): 0.9929, norm:1.4686, tok/sec: 103500.26, flops:108.64, batch-reuse:1
@ 3174 train 4.6216 , allloss: 4.6465, dt: 1280.43ms, fracRes: 0.4099, norm(attn): 0.1934, norm(output): 0.2402, norm(x): 0.4159, norm(y): 0.9930, norm:1.5228, tok/sec: 102365.38, flops:107.45, batch-reuse:1
@ 3175 train 4.6144 , allloss: 4.6369, dt: 1254.08ms, fracRes: 0.4090, norm(attn): 0.1943, norm(output): 0.2383, norm(x): 0.4162, norm(y): 0.9930, norm:1.3994, tok/sec: 104516.61, flops:109.70, batch-reuse:1
@ 3176 train 4.5841 , allloss: 4.6072, dt: 1286.65ms, fracRes: 0.4095, norm(attn): 0.1904, norm(output): 0.2373, norm(x): 0.4176, norm(y): 0.9930, norm:1.5038, tok/sec: 101870.79, flops:106.93, batch-reuse:1
@ 3177 train 4.5118 , allloss: 4.5341, dt: 1287.03ms, fracRes: 0.4072, norm(attn): 0.1973, norm(output): 0.2402, norm(x): 0.4164, norm(y): 0.9929, norm:1.5767, tok/sec: 101840.48, flops:106.90, batch-reuse:1
@ 3178 train 4.6923 , allloss: 4.7147, dt: 1271.43ms, fracRes: 0.4082, norm(attn): 0.1914, norm(output): 0.2383, norm(x): 0.4162, norm(y): 0.9931, norm:1.4646, tok/sec: 103090.61, flops:108.21, batch-reuse:1
@ 3179 train 4.5380 , allloss: 4.5604, dt: 1255.02ms, fracRes: 0.4100, norm(attn): 0.1914, norm(output): 0.2393, norm(x): 0.4169, norm(y): 0.9931, norm:1.5850, tok/sec: 104438.12, flops:109.62, batch-reuse:1
@ 3180 train 4.6057 , allloss: 4.6276, dt: 1261.67ms, fracRes: 0.4112, norm(attn): 0.1895, norm(output): 0.2383, norm(x): 0.4194, norm(y): 0.9930, norm:1.5100, tok/sec: 103887.60, flops:109.04, batch-reuse:1
@ 3181 train 4.6129 , allloss: 4.6399, dt: 1267.99ms, fracRes: 0.4105, norm(attn): 0.1924, norm(output): 0.2373, norm(x): 0.4155, norm(y): 0.9929, norm:1.6088, tok/sec: 103369.62, flops:108.50, batch-reuse:1
@ 3182 train 4.5013 , allloss: 4.5267, dt: 1263.20ms, fracRes: 0.4173, norm(attn): 0.1963, norm(output): 0.2412, norm(x): 0.4287, norm(y): 0.9928, norm:2.6546, tok/sec: 103761.83, flops:108.91, batch-reuse:1
@ 3183 train 4.6507 , allloss: 4.6732, dt: 1262.05ms, fracRes: 0.4122, norm(attn): 0.1934, norm(output): 0.2412, norm(x): 0.4207, norm(y): 0.9929, norm:1.9150, tok/sec: 103856.65, flops:109.01, batch-reuse:1
@ 3184 train 4.6837 , allloss: 4.7067, dt: 1252.03ms, fracRes: 0.4142, norm(attn): 0.1895, norm(output): 0.2393, norm(x): 0.4225, norm(y): 0.9930, norm:1.6856, tok/sec: 104687.82, flops:109.88, batch-reuse:1
@ 3185 train 4.7224 , allloss: 4.7438, dt: 1265.67ms, fracRes: 0.4134, norm(attn): 0.1885, norm(output): 0.2412, norm(x): 0.4236, norm(y): 0.9930, norm:1.5337, tok/sec: 103559.00, flops:108.70, batch-reuse:1
@ 3186 train 4.6446 , allloss: 4.6691, dt: 1259.30ms, fracRes: 0.4129, norm(attn): 0.1904, norm(output): 0.2393, norm(x): 0.4204, norm(y): 0.9930, norm:1.5262, tok/sec: 104083.54, flops:109.25, batch-reuse:1
@ 3187 train 4.5762 , allloss: 4.5982, dt: 1270.84ms, fracRes: 0.4115, norm(attn): 0.1904, norm(output): 0.2363, norm(x): 0.4171, norm(y): 0.9930, norm:1.5203, tok/sec: 103137.87, flops:108.26, batch-reuse:1
@ 3188 train 4.5109 , allloss: 4.5326, dt: 1261.57ms, fracRes: 0.4112, norm(attn): 0.1934, norm(output): 0.2412, norm(x): 0.4202, norm(y): 0.9929, norm:1.6073, tok/sec: 103895.65, flops:109.05, batch-reuse:1
@ 3189 train 4.5534 , allloss: 4.5750, dt: 1273.96ms, fracRes: 0.4110, norm(attn): 0.1924, norm(output): 0.2393, norm(x): 0.4200, norm(y): 0.9929, norm:1.4726, tok/sec: 102885.58, flops:107.99, batch-reuse:1
@ 3190 train 4.6096 , allloss: 4.6328, dt: 1249.69ms, fracRes: 0.4087, norm(attn): 0.1934, norm(output): 0.2383, norm(x): 0.4141, norm(y): 0.9928, norm:1.6893, tok/sec: 104884.03, flops:110.09, batch-reuse:1
@ 3191 train 4.5240 , allloss: 4.5500, dt: 1265.10ms, fracRes: 0.4087, norm(attn): 0.1924, norm(output): 0.2363, norm(x): 0.4127, norm(y): 0.9929, norm:1.7078, tok/sec: 103606.20, flops:108.75, batch-reuse:1
@ 3192 train 4.5670 , allloss: 4.5893, dt: 1272.83ms, fracRes: 0.4099, norm(attn): 0.1943, norm(output): 0.2383, norm(x): 0.4164, norm(y): 0.9929, norm:1.4196, tok/sec: 102977.14, flops:108.09, batch-reuse:1
@ 3193 train 4.5788 , allloss: 4.6027, dt: 1275.24ms, fracRes: 0.4072, norm(attn): 0.1982, norm(output): 0.2373, norm(x): 0.4147, norm(y): 0.9928, norm:1.5620, tok/sec: 102782.11, flops:107.88, batch-reuse:1
@ 3194 train 4.5774 , allloss: 4.6043, dt: 1273.93ms, fracRes: 0.4055, norm(attn): 0.1953, norm(output): 0.2383, norm(x): 0.4128, norm(y): 0.9929, norm:1.4626, tok/sec: 102887.77, flops:107.99, batch-reuse:1
@ 3195 train 4.5773 , allloss: 4.5992, dt: 1247.70ms, fracRes: 0.4079, norm(attn): 0.1924, norm(output): 0.2412, norm(x): 0.4183, norm(y): 0.9929, norm:1.7071, tok/sec: 105051.24, flops:110.27, batch-reuse:1
@ 3196 train 4.6078 , allloss: 4.6323, dt: 1266.99ms, fracRes: 0.4104, norm(attn): 0.1914, norm(output): 0.2373, norm(x): 0.4186, norm(y): 0.9929, norm:1.5854, tok/sec: 103451.80, flops:108.59, batch-reuse:1
@ 3197 train 4.5749 , allloss: 4.5978, dt: 1276.69ms, fracRes: 0.4104, norm(attn): 0.1943, norm(output): 0.2383, norm(x): 0.4170, norm(y): 0.9929, norm:1.6230, tok/sec: 102665.75, flops:107.76, batch-reuse:1
@ 3198 train 4.5152 , allloss: 4.5384, dt: 1264.83ms, fracRes: 0.4117, norm(attn): 0.1953, norm(output): 0.2383, norm(x): 0.4179, norm(y): 0.9929, norm:1.4329, tok/sec: 103628.15, flops:108.77, batch-reuse:1
@ 3199 train 4.5467 , allloss: 4.5707, dt: 1263.36ms, fracRes: 0.4135, norm(attn): 0.1895, norm(output): 0.2402, norm(x): 0.4212, norm(y): 0.9930, norm:1.3702, tok/sec: 103748.79, flops:108.90, batch-reuse:1
@ 3200 train 4.5492 , allloss: 4.5718, dt: 1272.94ms, fracRes: 0.4167, norm(attn): 0.1904, norm(output): 0.2441, norm(x): 0.4260, norm(y): 0.9930, norm:1.7718, tok/sec: 102967.86, flops:108.08, batch-reuse:1
@ 3201 train 4.5769 , allloss: 4.5991, dt: 1291.55ms, fracRes: 0.4162, norm(attn): 0.1895, norm(output): 0.2402, norm(x): 0.4248, norm(y): 0.9929, norm:1.3813, tok/sec: 101484.34, flops:106.52, batch-reuse:1
@ 3202 train 4.5775 , allloss: 4.6006, dt: 1260.33ms, fracRes: 0.4153, norm(attn): 0.1914, norm(output): 0.2422, norm(x): 0.4243, norm(y): 0.9928, norm:1.6053, tok/sec: 103998.24, flops:109.16, batch-reuse:1
@ 3203 train 4.6369 , allloss: 4.6591, dt: 1286.82ms, fracRes: 0.4146, norm(attn): 0.1895, norm(output): 0.2402, norm(x): 0.4222, norm(y): 0.9929, norm:1.4686, tok/sec: 101857.50, flops:106.91, batch-reuse:1
@ 3204 train 4.5451 , allloss: 4.5684, dt: 1260.43ms, fracRes: 0.4153, norm(attn): 0.1885, norm(output): 0.2383, norm(x): 0.4215, norm(y): 0.9930, norm:1.8262, tok/sec: 103989.98, flops:109.15, batch-reuse:1
@ 3205 train 4.5403 , allloss: 4.5621, dt: 1259.11ms, fracRes: 0.4115, norm(attn): 0.1934, norm(output): 0.2373, norm(x): 0.4190, norm(y): 0.9929, norm:1.6183, tok/sec: 104098.65, flops:109.27, batch-reuse:1
@ 3206 train 4.4412 , allloss: 4.4623, dt: 1260.23ms, fracRes: 0.4082, norm(attn): 0.1973, norm(output): 0.2402, norm(x): 0.4166, norm(y): 0.9928, norm:1.4110, tok/sec: 104006.82, flops:109.17, batch-reuse:1
@ 3207 train 4.6193 , allloss: 4.6416, dt: 1267.13ms, fracRes: 0.4083, norm(attn): 0.1953, norm(output): 0.2393, norm(x): 0.4171, norm(y): 0.9928, norm:1.5109, tok/sec: 103440.09, flops:108.57, batch-reuse:1
@ 3208 train 4.5969 , allloss: 4.6190, dt: 1268.85ms, fracRes: 0.4080, norm(attn): 0.1973, norm(output): 0.2412, norm(x): 0.4199, norm(y): 0.9929, norm:1.3782, tok/sec: 103299.50, flops:108.43, batch-reuse:1
@ 3209 train 4.5592 , allloss: 4.5816, dt: 1249.66ms, fracRes: 0.4061, norm(attn): 0.1982, norm(output): 0.2412, norm(x): 0.4168, norm(y): 0.9929, norm:1.7774, tok/sec: 104886.41, flops:110.09, batch-reuse:1
@ 3210 train 4.5408 , allloss: 4.5648, dt: 1262.22ms, fracRes: 0.4055, norm(attn): 0.1992, norm(output): 0.2412, norm(x): 0.4160, norm(y): 0.9929, norm:1.6179, tok/sec: 103842.15, flops:109.00, batch-reuse:1
@ 3211 train 4.5729 , allloss: 4.5956, dt: 1245.44ms, fracRes: 0.4085, norm(attn): 0.1953, norm(output): 0.2402, norm(x): 0.4163, norm(y): 0.9929, norm:1.4560, tok/sec: 105241.28, flops:110.46, batch-reuse:1
@ 3212 train 4.7282 , allloss: 4.7496, dt: 1259.72ms, fracRes: 0.4112, norm(attn): 0.1973, norm(output): 0.2383, norm(x): 0.4166, norm(y): 0.9929, norm:1.5913, tok/sec: 104048.63, flops:109.21, batch-reuse:1
@ 3213 train 4.5711 , allloss: 4.5923, dt: 1283.54ms, fracRes: 0.4113, norm(attn): 0.1914, norm(output): 0.2422, norm(x): 0.4211, norm(y): 0.9929, norm:1.5891, tok/sec: 102117.54, flops:107.19, batch-reuse:1
@ 3214 train 4.6608 , allloss: 4.6828, dt: 1257.41ms, fracRes: 0.4129, norm(attn): 0.1904, norm(output): 0.2402, norm(x): 0.4246, norm(y): 0.9929, norm:1.6693, tok/sec: 104239.82, flops:109.41, batch-reuse:1
@ 3215 train 4.5406 , allloss: 4.5625, dt: 1256.22ms, fracRes: 0.4138, norm(attn): 0.1914, norm(output): 0.2412, norm(x): 0.4252, norm(y): 0.9929, norm:1.6157, tok/sec: 104338.56, flops:109.52, batch-reuse:1
@ 3216 train 4.5701 , allloss: 4.5920, dt: 1255.50ms, fracRes: 0.4121, norm(attn): 0.1924, norm(output): 0.2402, norm(x): 0.4198, norm(y): 0.9929, norm:1.6888, tok/sec: 104398.56, flops:109.58, batch-reuse:1
@ 3217 train 4.5472 , allloss: 4.5703, dt: 1278.44ms, fracRes: 0.4129, norm(attn): 0.1943, norm(output): 0.2441, norm(x): 0.4237, norm(y): 0.9929, norm:1.3615, tok/sec: 102524.61, flops:107.61, batch-reuse:1
@ 3218 train 4.6223 , allloss: 4.6441, dt: 1251.28ms, fracRes: 0.4117, norm(attn): 0.1904, norm(output): 0.2383, norm(x): 0.4202, norm(y): 0.9930, norm:1.7473, tok/sec: 104750.03, flops:109.95, batch-reuse:1
@ 3219 train 4.6391 , allloss: 4.6593, dt: 1252.76ms, fracRes: 0.4113, norm(attn): 0.1934, norm(output): 0.2422, norm(x): 0.4227, norm(y): 0.9929, norm:1.6503, tok/sec: 104626.51, flops:109.82, batch-reuse:1
@ 3220 train 4.5936 , allloss: 4.6151, dt: 1245.30ms, fracRes: 0.4108, norm(attn): 0.1934, norm(output): 0.2412, norm(x): 0.4204, norm(y): 0.9928, norm:1.7867, tok/sec: 105253.75, flops:110.48, batch-reuse:1
@ 3221 train 4.5232 , allloss: 4.5442, dt: 1278.15ms, fracRes: 0.4095, norm(attn): 0.1924, norm(output): 0.2363, norm(x): 0.4154, norm(y): 0.9928, norm:1.4969, tok/sec: 102548.21, flops:107.64, batch-reuse:1
@ 3222 train 4.5744 , allloss: 4.5958, dt: 1290.95ms, fracRes: 0.4097, norm(attn): 0.1963, norm(output): 0.2422, norm(x): 0.4220, norm(y): 0.9928, norm:1.7413, tok/sec: 101531.78, flops:106.57, batch-reuse:1
@ 3223 train 4.5631 , allloss: 4.5865, dt: 1256.06ms, fracRes: 0.4105, norm(attn): 0.1934, norm(output): 0.2412, norm(x): 0.4204, norm(y): 0.9930, norm:1.4235, tok/sec: 104351.63, flops:109.53, batch-reuse:1
@ 3224 train 4.5902 , allloss: 4.6113, dt: 1275.32ms, fracRes: 0.4118, norm(attn): 0.1924, norm(output): 0.2412, norm(x): 0.4222, norm(y): 0.9930, norm:1.5232, tok/sec: 102775.56, flops:107.88, batch-reuse:1
@ 3225 train 4.6022 , allloss: 4.6240, dt: 1265.33ms, fracRes: 0.4114, norm(attn): 0.1943, norm(output): 0.2402, norm(x): 0.4219, norm(y): 0.9928, norm:1.4203, tok/sec: 103587.06, flops:108.73, batch-reuse:1
@ 3226 train 4.5317 , allloss: 4.5524, dt: 1249.29ms, fracRes: 0.4108, norm(attn): 0.1963, norm(output): 0.2402, norm(x): 0.4197, norm(y): 0.9928, norm:1.3497, tok/sec: 104917.13, flops:110.12, batch-reuse:1
@ 3227 train 4.5091 , allloss: 4.5311, dt: 1269.35ms, fracRes: 0.4105, norm(attn): 0.1973, norm(output): 0.2383, norm(x): 0.4179, norm(y): 0.9928, norm:1.6209, tok/sec: 103259.20, flops:108.38, batch-reuse:1
@ 3228 train 4.4735 , allloss: 4.4950, dt: 1268.79ms, fracRes: 0.4121, norm(attn): 0.1943, norm(output): 0.2441, norm(x): 0.4235, norm(y): 0.9928, norm:1.5791, tok/sec: 103304.94, flops:108.43, batch-reuse:1
@ 3229 train 4.6146 , allloss: 4.6347, dt: 1255.12ms, fracRes: 0.4122, norm(attn): 0.1904, norm(output): 0.2412, norm(x): 0.4235, norm(y): 0.9929, norm:1.7195, tok/sec: 104430.13, flops:109.61, batch-reuse:1
@ 3230 train 4.7020 , allloss: 4.7221, dt: 1257.64ms, fracRes: 0.4122, norm(attn): 0.1934, norm(output): 0.2422, norm(x): 0.4251, norm(y): 0.9929, norm:1.4930, tok/sec: 104220.65, flops:109.39, batch-reuse:1
@ 3231 train 4.4843 , allloss: 4.5057, dt: 1274.26ms, fracRes: 0.4095, norm(attn): 0.2002, norm(output): 0.2393, norm(x): 0.4194, norm(y): 0.9927, norm:1.5018, tok/sec: 102861.23, flops:107.97, batch-reuse:1
@ 3232 train 4.5291 , allloss: 4.5518, dt: 1270.35ms, fracRes: 0.4097, norm(attn): 0.1934, norm(output): 0.2383, norm(x): 0.4189, norm(y): 0.9928, norm:1.3985, tok/sec: 103177.79, flops:108.30, batch-reuse:1
@ 3233 train 4.5605 , allloss: 4.5812, dt: 1295.07ms, fracRes: 0.4111, norm(attn): 0.1934, norm(output): 0.2412, norm(x): 0.4221, norm(y): 0.9928, norm:1.5657, tok/sec: 101208.42, flops:106.23, batch-reuse:1
@ 3234 train 4.6944 , allloss: 4.7169, dt: 1252.82ms, fracRes: 0.4111, norm(attn): 0.1914, norm(output): 0.2441, norm(x): 0.4255, norm(y): 0.9929, norm:1.6859, tok/sec: 104621.91, flops:109.81, batch-reuse:1
@ 3235 train 4.5548 , allloss: 4.5784, dt: 1266.31ms, fracRes: 0.4123, norm(attn): 0.1953, norm(output): 0.2432, norm(x): 0.4253, norm(y): 0.9929, norm:1.5972, tok/sec: 103507.30, flops:108.64, batch-reuse:1
@ 3236 train 4.6345 , allloss: 4.6555, dt: 1277.42ms, fracRes: 0.4105, norm(attn): 0.1943, norm(output): 0.2432, norm(x): 0.4222, norm(y): 0.9929, norm:1.6568, tok/sec: 102606.45, flops:107.70, batch-reuse:1
@ 3237 train 4.5261 , allloss: 4.5479, dt: 1259.88ms, fracRes: 0.4102, norm(attn): 0.1934, norm(output): 0.2422, norm(x): 0.4219, norm(y): 0.9929, norm:1.4796, tok/sec: 104035.59, flops:109.20, batch-reuse:1
@ 3238 train 4.5581 , allloss: 4.5799, dt: 1249.69ms, fracRes: 0.4088, norm(attn): 0.1963, norm(output): 0.2402, norm(x): 0.4185, norm(y): 0.9929, norm:1.3959, tok/sec: 104883.27, flops:110.09, batch-reuse:1
@ 3239 train 4.5488 , allloss: 4.5698, dt: 1270.70ms, fracRes: 0.4101, norm(attn): 0.1982, norm(output): 0.2422, norm(x): 0.4200, norm(y): 0.9928, norm:1.7018, tok/sec: 103149.60, flops:108.27, batch-reuse:1
@ 3240 train 4.6120 , allloss: 4.6343, dt: 1266.31ms, fracRes: 0.4107, norm(attn): 0.1963, norm(output): 0.2461, norm(x): 0.4263, norm(y): 0.9928, norm:1.4981, tok/sec: 103507.06, flops:108.64, batch-reuse:1
@ 3241 train 4.5797 , allloss: 4.6040, dt: 1283.41ms, fracRes: 0.4103, norm(attn): 0.1953, norm(output): 0.2422, norm(x): 0.4226, norm(y): 0.9928, norm:1.6003, tok/sec: 102127.88, flops:107.20, batch-reuse:1
@ 3242 train 4.5498 , allloss: 4.5724, dt: 1280.18ms, fracRes: 0.4116, norm(attn): 0.1943, norm(output): 0.2432, norm(x): 0.4254, norm(y): 0.9928, norm:1.4080, tok/sec: 102385.55, flops:107.47, batch-reuse:1
@ 3243 train 4.4991 , allloss: 4.5212, dt: 1270.54ms, fracRes: 0.4133, norm(attn): 0.1973, norm(output): 0.2441, norm(x): 0.4276, norm(y): 0.9928, norm:1.5724, tok/sec: 103162.34, flops:108.28, batch-reuse:1
@ 3244 train 4.5154 , allloss: 4.5370, dt: 1289.05ms, fracRes: 0.4134, norm(attn): 0.1953, norm(output): 0.2432, norm(x): 0.4255, norm(y): 0.9928, norm:1.3870, tok/sec: 101681.11, flops:106.73, batch-reuse:1
@ 3245 train 4.5306 , allloss: 4.5529, dt: 1249.42ms, fracRes: 0.4145, norm(attn): 0.1934, norm(output): 0.2412, norm(x): 0.4242, norm(y): 0.9929, norm:1.7283, tok/sec: 104906.14, flops:110.11, batch-reuse:1
@ 3246 train 4.4803 , allloss: 4.5023, dt: 1281.78ms, fracRes: 0.4154, norm(attn): 0.1934, norm(output): 0.2422, norm(x): 0.4269, norm(y): 0.9929, norm:1.4736, tok/sec: 102257.44, flops:107.33, batch-reuse:1
@ 3247 train 4.5085 , allloss: 4.5293, dt: 1292.60ms, fracRes: 0.4142, norm(attn): 0.1973, norm(output): 0.2451, norm(x): 0.4268, norm(y): 0.9928, norm:1.4136, tok/sec: 101401.66, flops:106.43, batch-reuse:1
@ 3248 train 4.6055 , allloss: 4.6274, dt: 1249.14ms, fracRes: 0.4134, norm(attn): 0.1963, norm(output): 0.2441, norm(x): 0.4249, norm(y): 0.9928, norm:1.5587, tok/sec: 104929.57, flops:110.14, batch-reuse:1
@ 3249 train 4.5255 , allloss: 4.5474, dt: 1265.20ms, fracRes: 0.4128, norm(attn): 0.1934, norm(output): 0.2441, norm(x): 0.4236, norm(y): 0.9929, norm:1.8209, tok/sec: 103597.68, flops:108.74, batch-reuse:1
@ 3250 train 4.4734 , allloss: 4.4937, dt: 1291.23ms, fracRes: 0.4127, norm(attn): 0.1914, norm(output): 0.2461, norm(x): 0.4258, norm(y): 0.9929, norm:1.4052, tok/sec: 101509.75, flops:106.55, batch-reuse:1
@ 3251 train 4.4737 , allloss: 4.4951, dt: 1256.39ms, fracRes: 0.4102, norm(attn): 0.1943, norm(output): 0.2441, norm(x): 0.4227, norm(y): 0.9928, norm:1.6093, tok/sec: 104324.37, flops:109.50, batch-reuse:1
@ 3252 train 4.4829 , allloss: 4.5051, dt: 1276.68ms, fracRes: 0.4089, norm(attn): 0.1973, norm(output): 0.2451, norm(x): 0.4223, norm(y): 0.9927, norm:1.5337, tok/sec: 102666.27, flops:107.76, batch-reuse:1
@ 3253 train 4.6151 , allloss: 4.6378, dt: 1268.26ms, fracRes: 0.4122, norm(attn): 0.1904, norm(output): 0.2461, norm(x): 0.4272, norm(y): 0.9929, norm:1.7953, tok/sec: 103347.64, flops:108.48, batch-reuse:1
@ 3254 train 4.4181 , allloss: 4.4409, dt: 1284.99ms, fracRes: 0.4109, norm(attn): 0.1924, norm(output): 0.2451, norm(x): 0.4241, norm(y): 0.9929, norm:1.4818, tok/sec: 102001.97, flops:107.06, batch-reuse:1
@ 3255 train 4.5413 , allloss: 4.5625, dt: 1250.56ms, fracRes: 0.4082, norm(attn): 0.1953, norm(output): 0.2422, norm(x): 0.4194, norm(y): 0.9927, norm:1.5712, tok/sec: 104810.44, flops:110.01, batch-reuse:1
@ 3256 train 4.5733 , allloss: 4.5948, dt: 1271.64ms, fracRes: 0.4105, norm(attn): 0.1953, norm(output): 0.2441, norm(x): 0.4243, norm(y): 0.9927, norm:1.4119, tok/sec: 103073.46, flops:108.19, batch-reuse:1
@ 3257 train 4.4878 , allloss: 4.5087, dt: 1268.45ms, fracRes: 0.4101, norm(attn): 0.1953, norm(output): 0.2441, norm(x): 0.4246, norm(y): 0.9928, norm:1.6274, tok/sec: 103332.45, flops:108.46, batch-reuse:1
@ 3258 train 4.4833 , allloss: 4.5034, dt: 1267.43ms, fracRes: 0.4083, norm(attn): 0.1914, norm(output): 0.2441, norm(x): 0.4210, norm(y): 0.9928, norm:1.5357, tok/sec: 103415.31, flops:108.55, batch-reuse:1
@ 3259 train 4.5078 , allloss: 4.5282, dt: 1251.98ms, fracRes: 0.4093, norm(attn): 0.1953, norm(output): 0.2471, norm(x): 0.4257, norm(y): 0.9928, norm:1.4814, tok/sec: 104691.72, flops:109.89, batch-reuse:1
@ 3260 train 4.5033 , allloss: 4.5241, dt: 1273.25ms, fracRes: 0.4092, norm(attn): 0.1953, norm(output): 0.2441, norm(x): 0.4222, norm(y): 0.9928, norm:1.3105, tok/sec: 102943.26, flops:108.05, batch-reuse:1
@ 3261 train 4.5065 , allloss: 4.5273, dt: 1263.78ms, fracRes: 0.4124, norm(attn): 0.1934, norm(output): 0.2461, norm(x): 0.4268, norm(y): 0.9927, norm:1.5352, tok/sec: 103714.38, flops:108.86, batch-reuse:1
@ 3262 train 4.4722 , allloss: 4.4934, dt: 1253.62ms, fracRes: 0.4094, norm(attn): 0.1904, norm(output): 0.2441, norm(x): 0.4209, norm(y): 0.9928, norm:1.6186, tok/sec: 104554.88, flops:109.74, batch-reuse:1
@ 3263 train 4.4503 , allloss: 4.4718, dt: 1255.82ms, fracRes: 0.4117, norm(attn): 0.1943, norm(output): 0.2461, norm(x): 0.4261, norm(y): 0.9928, norm:1.3911, tok/sec: 104372.02, flops:109.55, batch-reuse:1
@ 3264 train 4.5503 , allloss: 4.5724, dt: 1268.66ms, fracRes: 0.4131, norm(attn): 0.1953, norm(output): 0.2461, norm(x): 0.4260, norm(y): 0.9928, norm:1.4094, tok/sec: 103315.40, flops:108.44, batch-reuse:1
@ 3265 train 4.4776 , allloss: 4.4983, dt: 1271.57ms, fracRes: 0.4116, norm(attn): 0.1953, norm(output): 0.2432, norm(x): 0.4220, norm(y): 0.9928, norm:1.3724, tok/sec: 103078.72, flops:108.19, batch-reuse:1
@ 3266 train 4.4231 , allloss: 4.4450, dt: 1252.02ms, fracRes: 0.4140, norm(attn): 0.1943, norm(output): 0.2451, norm(x): 0.4267, norm(y): 0.9929, norm:1.4164, tok/sec: 104688.23, flops:109.88, batch-reuse:1
@ 3267 train 4.4378 , allloss: 4.4630, dt: 1269.91ms, fracRes: 0.4124, norm(attn): 0.1963, norm(output): 0.2412, norm(x): 0.4208, norm(y): 0.9928, norm:1.4791, tok/sec: 103213.70, flops:108.34, batch-reuse:1
@ 3268 train 4.4637 , allloss: 4.4842, dt: 1271.63ms, fracRes: 0.4115, norm(attn): 0.1973, norm(output): 0.2451, norm(x): 0.4248, norm(y): 0.9927, norm:1.4766, tok/sec: 103073.89, flops:108.19, batch-reuse:1
@ 3269 train 4.4747 , allloss: 4.4960, dt: 1264.20ms, fracRes: 0.4104, norm(attn): 0.2002, norm(output): 0.2461, norm(x): 0.4227, norm(y): 0.9927, norm:1.4862, tok/sec: 103680.11, flops:108.83, batch-reuse:1
@ 3270 train 4.4633 , allloss: 4.4871, dt: 1275.96ms, fracRes: 0.4124, norm(attn): 0.1973, norm(output): 0.2461, norm(x): 0.4254, norm(y): 0.9928, norm:1.5253, tok/sec: 102724.59, flops:107.82, batch-reuse:1
@ 3271 train 4.4641 , allloss: 4.4846, dt: 1248.69ms, fracRes: 0.4113, norm(attn): 0.1953, norm(output): 0.2441, norm(x): 0.4224, norm(y): 0.9927, norm:1.4168, tok/sec: 104967.82, flops:110.18, batch-reuse:1
@ 3272 train 4.4990 , allloss: 4.5203, dt: 1267.80ms, fracRes: 0.4133, norm(attn): 0.1953, norm(output): 0.2412, norm(x): 0.4266, norm(y): 0.9927, norm:1.4178, tok/sec: 103385.46, flops:108.52, batch-reuse:1
@ 3273 train 4.5199 , allloss: 4.5405, dt: 1297.02ms, fracRes: 0.4111, norm(attn): 0.1934, norm(output): 0.2412, norm(x): 0.4223, norm(y): 0.9928, norm:1.6409, tok/sec: 101056.25, flops:106.07, batch-reuse:1
@ 3274 train 4.4593 , allloss: 4.4808, dt: 1268.98ms, fracRes: 0.4096, norm(attn): 0.1963, norm(output): 0.2451, norm(x): 0.4230, norm(y): 0.9927, norm:1.5212, tok/sec: 103289.58, flops:108.42, batch-reuse:1
@ 3275 train 4.4772 , allloss: 4.4976, dt: 1237.66ms, fracRes: 0.4088, norm(attn): 0.1953, norm(output): 0.2451, norm(x): 0.4233, norm(y): 0.9927, norm:1.5289, tok/sec: 105903.22, flops:111.16, batch-reuse:1
@ 3276 train 4.4841 , allloss: 4.5047, dt: 1253.08ms, fracRes: 0.4098, norm(attn): 0.1934, norm(output): 0.2432, norm(x): 0.4227, norm(y): 0.9926, norm:1.2639, tok/sec: 104600.17, flops:109.79, batch-reuse:1
@ 3277 train 4.4950 , allloss: 4.5201, dt: 1259.45ms, fracRes: 0.4105, norm(attn): 0.1973, norm(output): 0.2441, norm(x): 0.4233, norm(y): 0.9926, norm:1.2959, tok/sec: 104070.57, flops:109.24, batch-reuse:1
@ 3278 train 4.5003 , allloss: 4.5207, dt: 1263.08ms, fracRes: 0.4112, norm(attn): 0.1934, norm(output): 0.2461, norm(x): 0.4241, norm(y): 0.9928, norm:1.4080, tok/sec: 103771.66, flops:108.92, batch-reuse:1
@ 3279 train 4.5062 , allloss: 4.5298, dt: 1262.07ms, fracRes: 0.4122, norm(attn): 0.1953, norm(output): 0.2441, norm(x): 0.4261, norm(y): 0.9928, norm:1.4456, tok/sec: 103854.98, flops:109.01, batch-reuse:1
@ 3280 train 4.4659 , allloss: 4.4864, dt: 1247.60ms, fracRes: 0.4109, norm(attn): 0.1973, norm(output): 0.2471, norm(x): 0.4271, norm(y): 0.9927, norm:1.5686, tok/sec: 105059.45, flops:110.27, batch-reuse:1
@ 3281 train 4.4743 , allloss: 4.4980, dt: 1281.82ms, fracRes: 0.4107, norm(attn): 0.1914, norm(output): 0.2432, norm(x): 0.4243, norm(y): 0.9927, norm:1.3802, tok/sec: 102254.91, flops:107.33, batch-reuse:1
@ 3282 train 4.4503 , allloss: 4.4732, dt: 1284.58ms, fracRes: 0.4102, norm(attn): 0.1973, norm(output): 0.2451, norm(x): 0.4271, norm(y): 0.9926, norm:1.3786, tok/sec: 102034.87, flops:107.10, batch-reuse:1
@ 3283 train 4.4947 , allloss: 4.5158, dt: 1255.71ms, fracRes: 0.4089, norm(attn): 0.1934, norm(output): 0.2461, norm(x): 0.4238, norm(y): 0.9927, norm:1.3287, tok/sec: 104381.13, flops:109.56, batch-reuse:1
@ 3284 train 4.4940 , allloss: 4.5139, dt: 1268.50ms, fracRes: 0.4102, norm(attn): 0.1934, norm(output): 0.2461, norm(x): 0.4263, norm(y): 0.9928, norm:1.6397, tok/sec: 103328.59, flops:108.46, batch-reuse:1
@ 3285 train 4.4469 , allloss: 4.4677, dt: 1244.23ms, fracRes: 0.4111, norm(attn): 0.1953, norm(output): 0.2461, norm(x): 0.4258, norm(y): 0.9927, norm:1.5302, tok/sec: 105344.19, flops:110.57, batch-reuse:1
@ 3286 train 4.4848 , allloss: 4.5049, dt: 1262.07ms, fracRes: 0.4109, norm(attn): 0.1953, norm(output): 0.2461, norm(x): 0.4279, norm(y): 0.9927, norm:1.2767, tok/sec: 103854.39, flops:109.01, batch-reuse:1
@ 3287 train 4.4247 , allloss: 4.4465, dt: 1271.68ms, fracRes: 0.4092, norm(attn): 0.1963, norm(output): 0.2441, norm(x): 0.4232, norm(y): 0.9926, norm:1.3613, tok/sec: 103070.33, flops:108.19, batch-reuse:1
@ 3288 train 4.6234 , allloss: 4.6460, dt: 1266.16ms, fracRes: 0.4118, norm(attn): 0.1982, norm(output): 0.2451, norm(x): 0.4282, norm(y): 0.9926, norm:1.8541, tok/sec: 103518.99, flops:108.66, batch-reuse:1
@ 3289 train 4.5658 , allloss: 4.5992, dt: 1303.70ms, fracRes: 0.4108, norm(attn): 0.1973, norm(output): 0.2471, norm(x): 0.4281, norm(y): 0.9926, norm:1.7689, tok/sec: 100538.08, flops:105.53, batch-reuse:1
@ 3290 train 4.5644 , allloss: 4.5854, dt: 1266.57ms, fracRes: 0.4078, norm(attn): 0.1973, norm(output): 0.2461, norm(x): 0.4215, norm(y): 0.9927, norm:1.5669, tok/sec: 103485.61, flops:108.62, batch-reuse:1
@ 3291 train 4.3949 , allloss: 4.4170, dt: 1243.14ms, fracRes: 0.4095, norm(attn): 0.1973, norm(output): 0.2461, norm(x): 0.4233, norm(y): 0.9927, norm:1.4886, tok/sec: 105436.46, flops:110.67, batch-reuse:1
@ 3292 train 4.6052 , allloss: 4.6261, dt: 1249.12ms, fracRes: 0.4091, norm(attn): 0.1963, norm(output): 0.2471, norm(x): 0.4251, norm(y): 0.9926, norm:1.7514, tok/sec: 104931.71, flops:110.14, batch-reuse:1
@ 3293 train 4.5615 , allloss: 4.5826, dt: 1278.33ms, fracRes: 0.4100, norm(attn): 0.1973, norm(output): 0.2461, norm(x): 0.4270, norm(y): 0.9926, norm:1.4646, tok/sec: 102533.50, flops:107.62, batch-reuse:1
@ 3294 train 4.5139 , allloss: 4.5350, dt: 1267.78ms, fracRes: 0.4122, norm(attn): 0.1973, norm(output): 0.2461, norm(x): 0.4297, norm(y): 0.9927, norm:1.3706, tok/sec: 103387.27, flops:108.52, batch-reuse:1
@ 3295 train 4.3598 , allloss: 4.3826, dt: 1258.32ms, fracRes: 0.4097, norm(attn): 0.1992, norm(output): 0.2461, norm(x): 0.4252, norm(y): 0.9926, norm:1.3640, tok/sec: 104164.06, flops:109.33, batch-reuse:1
@ 3296 train 4.4033 , allloss: 4.4301, dt: 1244.78ms, fracRes: 0.4121, norm(attn): 0.1934, norm(output): 0.2461, norm(x): 0.4291, norm(y): 0.9927, norm:1.4452, tok/sec: 105297.70, flops:110.52, batch-reuse:1
@ 3297 train 4.3210 , allloss: 4.3422, dt: 1273.58ms, fracRes: 0.4124, norm(attn): 0.1914, norm(output): 0.2471, norm(x): 0.4291, norm(y): 0.9927, norm:1.5154, tok/sec: 102916.11, flops:108.02, batch-reuse:1
@ 3298 train 4.4118 , allloss: 4.4324, dt: 1280.51ms, fracRes: 0.4129, norm(attn): 0.1934, norm(output): 0.2461, norm(x): 0.4278, norm(y): 0.9927, norm:1.5739, tok/sec: 102358.95, flops:107.44, batch-reuse:1
@ 3299 train 4.3244 , allloss: 4.3470, dt: 1269.89ms, fracRes: 0.4119, norm(attn): 0.1953, norm(output): 0.2441, norm(x): 0.4251, norm(y): 0.9926, norm:1.6070, tok/sec: 103215.64, flops:108.34, batch-reuse:1
@ 3300 train 4.3760 , allloss: 4.3980, dt: 1246.57ms, fracRes: 0.4133, norm(attn): 0.1953, norm(output): 0.2441, norm(x): 0.4255, norm(y): 0.9926, norm:1.3384, tok/sec: 105146.53, flops:110.37, batch-reuse:1
@ 3301 train 4.4006 , allloss: 4.4218, dt: 1282.26ms, fracRes: 0.4142, norm(attn): 0.1934, norm(output): 0.2441, norm(x): 0.4248, norm(y): 0.9927, norm:1.3795, tok/sec: 102219.37, flops:107.29, batch-reuse:1
@ 3302 train 4.3810 , allloss: 4.4033, dt: 1256.47ms, fracRes: 0.4151, norm(attn): 0.1953, norm(output): 0.2461, norm(x): 0.4309, norm(y): 0.9927, norm:1.6688, tok/sec: 104317.38, flops:109.49, batch-reuse:1
@ 3303 train 4.3030 , allloss: 4.3258, dt: 1259.51ms, fracRes: 0.4144, norm(attn): 0.1963, norm(output): 0.2461, norm(x): 0.4285, norm(y): 0.9927, norm:1.3839, tok/sec: 104065.59, flops:109.23, batch-reuse:1
@ 3304 train 4.4283 , allloss: 4.4491, dt: 1270.17ms, fracRes: 0.4146, norm(attn): 0.1914, norm(output): 0.2451, norm(x): 0.4299, norm(y): 0.9926, norm:1.4540, tok/sec: 103192.31, flops:108.31, batch-reuse:1
@ 3305 train 4.4722 , allloss: 4.4934, dt: 1285.34ms, fracRes: 0.4129, norm(attn): 0.1924, norm(output): 0.2461, norm(x): 0.4252, norm(y): 0.9926, norm:1.2876, tok/sec: 101974.40, flops:107.04, batch-reuse:1
@ 3306 train 4.3382 , allloss: 4.3619, dt: 1284.67ms, fracRes: 0.4117, norm(attn): 0.2002, norm(output): 0.2461, norm(x): 0.4257, norm(y): 0.9925, norm:1.4457, tok/sec: 102027.52, flops:107.09, batch-reuse:1
@ 3307 train 4.3526 , allloss: 4.3731, dt: 1283.58ms, fracRes: 0.4129, norm(attn): 0.1914, norm(output): 0.2461, norm(x): 0.4274, norm(y): 0.9928, norm:1.7085, tok/sec: 102114.13, flops:107.18, batch-reuse:1
@ 3308 train 4.4193 , allloss: 4.4411, dt: 1258.01ms, fracRes: 0.4144, norm(attn): 0.1895, norm(output): 0.2471, norm(x): 0.4289, norm(y): 0.9929, norm:1.3663, tok/sec: 104190.02, flops:109.36, batch-reuse:1
@ 3309 train 4.3671 , allloss: 4.3889, dt: 1278.16ms, fracRes: 0.4111, norm(attn): 0.1914, norm(output): 0.2471, norm(x): 0.4258, norm(y): 0.9928, norm:1.9075, tok/sec: 102547.79, flops:107.64, batch-reuse:1
@ 3310 train 4.4250 , allloss: 4.4478, dt: 1260.26ms, fracRes: 0.4116, norm(attn): 0.1953, norm(output): 0.2451, norm(x): 0.4279, norm(y): 0.9926, norm:1.5515, tok/sec: 104004.20, flops:109.17, batch-reuse:1
@ 3311 train 4.4508 , allloss: 4.4734, dt: 1242.04ms, fracRes: 0.4130, norm(attn): 0.1904, norm(output): 0.2461, norm(x): 0.4295, norm(y): 0.9926, norm:2.1320, tok/sec: 105529.92, flops:110.77, batch-reuse:1
@ 3312 train 4.3780 , allloss: 4.3991, dt: 1263.92ms, fracRes: 0.4133, norm(attn): 0.1914, norm(output): 0.2490, norm(x): 0.4325, norm(y): 0.9926, norm:1.5348, tok/sec: 103702.80, flops:108.85, batch-reuse:1
@ 3313 train 4.4180 , allloss: 4.4395, dt: 1264.15ms, fracRes: 0.4090, norm(attn): 0.1924, norm(output): 0.2461, norm(x): 0.4244, norm(y): 0.9926, norm:1.5020, tok/sec: 103683.71, flops:108.83, batch-reuse:1
@ 3314 train 4.3611 , allloss: 4.3841, dt: 1247.42ms, fracRes: 0.4104, norm(attn): 0.1953, norm(output): 0.2441, norm(x): 0.4228, norm(y): 0.9926, norm:1.4488, tok/sec: 105074.41, flops:110.29, batch-reuse:1
@ 3315 train 4.5056 , allloss: 4.5292, dt: 1273.29ms, fracRes: 0.4102, norm(attn): 0.1953, norm(output): 0.2461, norm(x): 0.4259, norm(y): 0.9925, norm:1.4698, tok/sec: 102939.56, flops:108.05, batch-reuse:1
@ 3316 train 4.4154 , allloss: 4.4374, dt: 1256.58ms, fracRes: 0.4119, norm(attn): 0.1943, norm(output): 0.2471, norm(x): 0.4314, norm(y): 0.9926, norm:1.3830, tok/sec: 104308.83, flops:109.49, batch-reuse:1
@ 3317 train 4.4172 , allloss: 4.4385, dt: 1292.36ms, fracRes: 0.4112, norm(attn): 0.1934, norm(output): 0.2461, norm(x): 0.4273, norm(y): 0.9926, norm:1.4922, tok/sec: 101420.65, flops:106.45, batch-reuse:1
@ 3318 train 4.1813 , allloss: 4.2032, dt: 1245.25ms, fracRes: 0.4121, norm(attn): 0.1973, norm(output): 0.2480, norm(x): 0.4292, norm(y): 0.9926, norm:1.4374, tok/sec: 105257.52, flops:110.48, batch-reuse:1
@ 3319 train 4.4696 , allloss: 4.4908, dt: 1276.53ms, fracRes: 0.4107, norm(attn): 0.1934, norm(output): 0.2461, norm(x): 0.4244, norm(y): 0.9927, norm:1.3388, tok/sec: 102678.43, flops:107.77, batch-reuse:1
@ 3320 train 4.4851 , allloss: 4.5071, dt: 1278.53ms, fracRes: 0.4128, norm(attn): 0.1953, norm(output): 0.2441, norm(x): 0.4286, norm(y): 0.9925, norm:1.3154, tok/sec: 102518.03, flops:107.61, batch-reuse:1
@ 3321 train 4.4134 , allloss: 4.4372, dt: 1270.30ms, fracRes: 0.4113, norm(attn): 0.1982, norm(output): 0.2471, norm(x): 0.4275, norm(y): 0.9925, norm:1.4408, tok/sec: 103182.01, flops:108.30, batch-reuse:1
@ 3322 train 4.2834 , allloss: 4.3075, dt: 1266.32ms, fracRes: 0.4145, norm(attn): 0.1934, norm(output): 0.2471, norm(x): 0.4311, norm(y): 0.9927, norm:1.5694, tok/sec: 103506.50, flops:108.64, batch-reuse:1
@ 3323 train 4.2459 , allloss: 4.2719, dt: 1259.95ms, fracRes: 0.4149, norm(attn): 0.1934, norm(output): 0.2471, norm(x): 0.4289, norm(y): 0.9927, norm:1.3182, tok/sec: 104029.22, flops:109.19, batch-reuse:1
@ 3324 train 4.3642 , allloss: 4.3862, dt: 1240.52ms, fracRes: 0.4148, norm(attn): 0.1963, norm(output): 0.2480, norm(x): 0.4302, norm(y): 0.9927, norm:1.4515, tok/sec: 105659.22, flops:110.90, batch-reuse:1
@ 3325 train 4.4447 , allloss: 4.4667, dt: 1268.97ms, fracRes: 0.4137, norm(attn): 0.1943, norm(output): 0.2471, norm(x): 0.4298, norm(y): 0.9927, norm:1.4661, tok/sec: 103290.40, flops:108.42, batch-reuse:1
@ 3326 train 4.3744 , allloss: 4.3974, dt: 1274.77ms, fracRes: 0.4140, norm(attn): 0.1934, norm(output): 0.2471, norm(x): 0.4303, norm(y): 0.9926, norm:1.5196, tok/sec: 102820.42, flops:107.92, batch-reuse:1
@ 3327 train 4.3537 , allloss: 4.3746, dt: 1258.46ms, fracRes: 0.4130, norm(attn): 0.1963, norm(output): 0.2471, norm(x): 0.4310, norm(y): 0.9925, norm:1.3321, tok/sec: 104153.01, flops:109.32, batch-reuse:1
@ 3328 train 4.3362 , allloss: 4.3570, dt: 1259.00ms, fracRes: 0.4097, norm(attn): 0.1953, norm(output): 0.2490, norm(x): 0.4273, norm(y): 0.9927, norm:1.4143, tok/sec: 104107.84, flops:109.27, batch-reuse:1
@ 3329 train 4.3167 , allloss: 4.3400, dt: 1265.66ms, fracRes: 0.4104, norm(attn): 0.1963, norm(output): 0.2480, norm(x): 0.4273, norm(y): 0.9927, norm:1.6104, tok/sec: 103560.31, flops:108.70, batch-reuse:1
@ 3330 train 4.3028 , allloss: 4.3246, dt: 1261.56ms, fracRes: 0.4099, norm(attn): 0.1963, norm(output): 0.2451, norm(x): 0.4265, norm(y): 0.9926, norm:1.3021, tok/sec: 103897.12, flops:109.05, batch-reuse:1
@ 3331 train 4.1311 , allloss: 4.1529, dt: 1264.49ms, fracRes: 0.4130, norm(attn): 0.1973, norm(output): 0.2471, norm(x): 0.4315, norm(y): 0.9925, norm:1.4134, tok/sec: 103655.83, flops:108.80, batch-reuse:1
@ 3332 train 4.3857 , allloss: 4.4059, dt: 1268.38ms, fracRes: 0.4102, norm(attn): 0.1943, norm(output): 0.2471, norm(x): 0.4258, norm(y): 0.9925, norm:1.4047, tok/sec: 103337.87, flops:108.47, batch-reuse:1
@ 3333 train 4.3243 , allloss: 4.3447, dt: 1282.40ms, fracRes: 0.4091, norm(attn): 0.1973, norm(output): 0.2480, norm(x): 0.4251, norm(y): 0.9926, norm:1.6850, tok/sec: 102208.08, flops:107.28, batch-reuse:1
@ 3334 train 4.3571 , allloss: 4.3779, dt: 1282.91ms, fracRes: 0.4132, norm(attn): 0.1934, norm(output): 0.2480, norm(x): 0.4336, norm(y): 0.9927, norm:1.7919, tok/sec: 102167.68, flops:107.24, batch-reuse:1
@ 3335 train 4.3094 , allloss: 4.3297, dt: 1310.15ms, fracRes: 0.4127, norm(attn): 0.1924, norm(output): 0.2490, norm(x): 0.4330, norm(y): 0.9928, norm:1.3733, tok/sec: 100043.13, flops:105.01, batch-reuse:1
@ 3336 train 4.4285 , allloss: 4.4506, dt: 1266.65ms, fracRes: 0.4139, norm(attn): 0.1943, norm(output): 0.2480, norm(x): 0.4312, norm(y): 0.9926, norm:1.3586, tok/sec: 103479.05, flops:108.61, batch-reuse:1
@ 3337 train 4.3297 , allloss: 4.3516, dt: 1259.94ms, fracRes: 0.4139, norm(attn): 0.1973, norm(output): 0.2461, norm(x): 0.4306, norm(y): 0.9925, norm:1.3527, tok/sec: 104030.56, flops:109.19, batch-reuse:1
@ 3338 train 4.3032 , allloss: 4.3260, dt: 1268.51ms, fracRes: 0.4139, norm(attn): 0.1973, norm(output): 0.2451, norm(x): 0.4309, norm(y): 0.9926, norm:1.8148, tok/sec: 103327.89, flops:108.46, batch-reuse:1
@ 3339 train 4.3665 , allloss: 4.3878, dt: 1260.31ms, fracRes: 0.4136, norm(attn): 0.1973, norm(output): 0.2461, norm(x): 0.4295, norm(y): 0.9926, norm:1.4494, tok/sec: 104000.07, flops:109.16, batch-reuse:1
@ 3340 train 4.2989 , allloss: 4.3192, dt: 1275.38ms, fracRes: 0.4138, norm(attn): 0.1943, norm(output): 0.2471, norm(x): 0.4291, norm(y): 0.9927, norm:1.6039, tok/sec: 102771.10, flops:107.87, batch-reuse:1
@ 3341 train 4.6216 , allloss: 4.6417, dt: 1265.89ms, fracRes: 0.4134, norm(attn): 0.1934, norm(output): 0.2441, norm(x): 0.4275, norm(y): 0.9927, norm:1.6302, tok/sec: 103541.55, flops:108.68, batch-reuse:1
@ 3342 train 4.5239 , allloss: 4.5434, dt: 1272.25ms, fracRes: 0.4129, norm(attn): 0.1992, norm(output): 0.2490, norm(x): 0.4311, norm(y): 0.9926, norm:2.4159, tok/sec: 103024.01, flops:108.14, batch-reuse:1
@ 3343 train 4.5097 , allloss: 4.5315, dt: 1279.28ms, fracRes: 0.4150, norm(attn): 0.1992, norm(output): 0.2480, norm(x): 0.4364, norm(y): 0.9924, norm:1.5967, tok/sec: 102457.64, flops:107.54, batch-reuse:1
@ 3344 train 4.5843 , allloss: 4.6065, dt: 1286.20ms, fracRes: 0.4156, norm(attn): 0.1943, norm(output): 0.2471, norm(x): 0.4342, norm(y): 0.9925, norm:1.5545, tok/sec: 101906.37, flops:106.96, batch-reuse:1
@ 3345 train 4.5214 , allloss: 4.5411, dt: 1277.09ms, fracRes: 0.4150, norm(attn): 0.1982, norm(output): 0.2480, norm(x): 0.4317, norm(y): 0.9926, norm:1.7399, tok/sec: 102633.25, flops:107.73, batch-reuse:1
@ 3346 train 4.4806 , allloss: 4.5107, dt: 1263.74ms, fracRes: 0.4153, norm(attn): 0.1992, norm(output): 0.2471, norm(x): 0.4310, norm(y): 0.9925, norm:1.5115, tok/sec: 103717.86, flops:108.87, batch-reuse:1
@ 3347 train 4.5114 , allloss: 4.5331, dt: 1252.45ms, fracRes: 0.4135, norm(attn): 0.2002, norm(output): 0.2471, norm(x): 0.4313, norm(y): 0.9925, norm:1.5416, tok/sec: 104652.86, flops:109.85, batch-reuse:1
@ 3348 train 4.4720 , allloss: 4.4925, dt: 1267.69ms, fracRes: 0.4137, norm(attn): 0.1982, norm(output): 0.2471, norm(x): 0.4311, norm(y): 0.9925, norm:1.4934, tok/sec: 103394.58, flops:108.53, batch-reuse:1
@ 3349 train 4.4563 , allloss: 4.4764, dt: 1265.07ms, fracRes: 0.4171, norm(attn): 0.1953, norm(output): 0.2490, norm(x): 0.4371, norm(y): 0.9926, norm:1.6129, tok/sec: 103608.66, flops:108.75, batch-reuse:1
@ 3350 train 4.4971 , allloss: 4.5191, dt: 1277.59ms, fracRes: 0.4180, norm(attn): 0.1914, norm(output): 0.2461, norm(x): 0.4363, norm(y): 0.9927, norm:1.6428, tok/sec: 102593.18, flops:107.69, batch-reuse:1
@ 3351 train 4.6018 , allloss: 4.6233, dt: 1254.31ms, fracRes: 0.4152, norm(attn): 0.1973, norm(output): 0.2490, norm(x): 0.4358, norm(y): 0.9925, norm:1.5074, tok/sec: 104497.70, flops:109.68, batch-reuse:1
@ 3352 train 4.5325 , allloss: 4.5564, dt: 1284.13ms, fracRes: 0.4144, norm(attn): 0.1953, norm(output): 0.2480, norm(x): 0.4317, norm(y): 0.9925, norm:1.5792, tok/sec: 102070.31, flops:107.14, batch-reuse:1
@ 3353 train 4.5727 , allloss: 4.5934, dt: 1254.63ms, fracRes: 0.4158, norm(attn): 0.1934, norm(output): 0.2480, norm(x): 0.4330, norm(y): 0.9925, norm:1.8816, tok/sec: 104470.93, flops:109.66, batch-reuse:1
@ 3354 train 4.5494 , allloss: 4.5705, dt: 1256.56ms, fracRes: 0.4161, norm(attn): 0.1953, norm(output): 0.2480, norm(x): 0.4355, norm(y): 0.9925, norm:1.4430, tok/sec: 104309.82, flops:109.49, batch-reuse:1
@ 3355 train 4.6008 , allloss: 4.6234, dt: 1273.18ms, fracRes: 0.4138, norm(attn): 0.1982, norm(output): 0.2490, norm(x): 0.4327, norm(y): 0.9924, norm:1.3886, tok/sec: 102948.87, flops:108.06, batch-reuse:1
@ 3356 train 4.5267 , allloss: 4.5476, dt: 1283.92ms, fracRes: 0.4156, norm(attn): 0.1943, norm(output): 0.2471, norm(x): 0.4352, norm(y): 0.9926, norm:1.7825, tok/sec: 102087.45, flops:107.15, batch-reuse:1
@ 3357 train 4.5275 , allloss: 4.5480, dt: 1249.10ms, fracRes: 0.4144, norm(attn): 0.1924, norm(output): 0.2480, norm(x): 0.4351, norm(y): 0.9926, norm:1.3873, tok/sec: 104933.23, flops:110.14, batch-reuse:1
@ 3358 train 4.5736 , allloss: 4.5941, dt: 1256.81ms, fracRes: 0.4143, norm(attn): 0.1934, norm(output): 0.2471, norm(x): 0.4331, norm(y): 0.9926, norm:1.4637, tok/sec: 104289.20, flops:109.47, batch-reuse:1
@ 3359 train 4.4956 , allloss: 4.5170, dt: 1269.40ms, fracRes: 0.4135, norm(attn): 0.1953, norm(output): 0.2490, norm(x): 0.4330, norm(y): 0.9926, norm:1.2855, tok/sec: 103254.68, flops:108.38, batch-reuse:1
@ 3360 train 4.5256 , allloss: 4.5466, dt: 1256.80ms, fracRes: 0.4126, norm(attn): 0.1982, norm(output): 0.2480, norm(x): 0.4307, norm(y): 0.9926, norm:1.3803, tok/sec: 104289.87, flops:109.47, batch-reuse:1
@ 3361 train 4.5606 , allloss: 4.5809, dt: 1245.07ms, fracRes: 0.4142, norm(attn): 0.1934, norm(output): 0.2480, norm(x): 0.4319, norm(y): 0.9926, norm:1.2372, tok/sec: 105272.84, flops:110.50, batch-reuse:1
@ 3362 train 4.4423 , allloss: 4.4624, dt: 1246.54ms, fracRes: 0.4134, norm(attn): 0.1973, norm(output): 0.2480, norm(x): 0.4319, norm(y): 0.9925, norm:1.2247, tok/sec: 105148.75, flops:110.37, batch-reuse:1
@ 3363 train 4.5359 , allloss: 4.5563, dt: 1283.12ms, fracRes: 0.4133, norm(attn): 0.1982, norm(output): 0.2490, norm(x): 0.4343, norm(y): 0.9924, norm:1.5021, tok/sec: 102151.20, flops:107.22, batch-reuse:1
@ 3364 train 4.5388 , allloss: 4.5617, dt: 1284.62ms, fracRes: 0.4175, norm(attn): 0.1914, norm(output): 0.2480, norm(x): 0.4363, norm(y): 0.9927, norm:2.1705, tok/sec: 102031.95, flops:107.10, batch-reuse:1
@ 3365 train 4.5192 , allloss: 4.5396, dt: 1261.04ms, fracRes: 0.4170, norm(attn): 0.1895, norm(output): 0.2490, norm(x): 0.4390, norm(y): 0.9928, norm:1.9917, tok/sec: 103939.35, flops:109.10, batch-reuse:1
@ 3366 train 4.6518 , allloss: 4.6727, dt: 1298.96ms, fracRes: 0.4181, norm(attn): 0.1904, norm(output): 0.2500, norm(x): 0.4419, norm(y): 0.9926, norm:1.5503, tok/sec: 100905.06, flops:105.91, batch-reuse:1
@ 3367 train 4.5513 , allloss: 4.5717, dt: 1277.32ms, fracRes: 0.4161, norm(attn): 0.1914, norm(output): 0.2490, norm(x): 0.4372, norm(y): 0.9926, norm:1.6884, tok/sec: 102614.53, flops:107.71, batch-reuse:1
@ 3368 train 4.6136 , allloss: 4.6338, dt: 1274.61ms, fracRes: 0.4164, norm(attn): 0.1914, norm(output): 0.2490, norm(x): 0.4372, norm(y): 0.9925, norm:1.4214, tok/sec: 102833.00, flops:107.94, batch-reuse:1
@ 3369 train 4.5432 , allloss: 4.5630, dt: 1269.34ms, fracRes: 0.4150, norm(attn): 0.1982, norm(output): 0.2480, norm(x): 0.4357, norm(y): 0.9924, norm:1.3090, tok/sec: 103260.19, flops:108.39, batch-reuse:1
@ 3370 train 4.5162 , allloss: 4.5414, dt: 1258.43ms, fracRes: 0.4155, norm(attn): 0.1963, norm(output): 0.2490, norm(x): 0.4378, norm(y): 0.9925, norm:1.6131, tok/sec: 104154.92, flops:109.32, batch-reuse:1
@ 3371 train 4.5003 , allloss: 4.5219, dt: 1260.69ms, fracRes: 0.4133, norm(attn): 0.1982, norm(output): 0.2490, norm(x): 0.4342, norm(y): 0.9925, norm:1.4581, tok/sec: 103968.78, flops:109.13, batch-reuse:1
@ 3372 train 4.5189 , allloss: 4.5389, dt: 1265.25ms, fracRes: 0.4136, norm(attn): 0.1943, norm(output): 0.2490, norm(x): 0.4349, norm(y): 0.9925, norm:1.3040, tok/sec: 103594.09, flops:108.74, batch-reuse:1
@ 3373 train 4.5567 , allloss: 4.5775, dt: 1273.21ms, fracRes: 0.4118, norm(attn): 0.1982, norm(output): 0.2480, norm(x): 0.4315, norm(y): 0.9925, norm:1.4528, tok/sec: 102946.46, flops:108.06, batch-reuse:1
@ 3374 train 4.4872 , allloss: 4.5074, dt: 1252.89ms, fracRes: 0.4125, norm(attn): 0.2002, norm(output): 0.2490, norm(x): 0.4340, norm(y): 0.9925, norm:1.4088, tok/sec: 104615.32, flops:109.81, batch-reuse:1
@ 3375 train 4.4348 , allloss: 4.4545, dt: 1299.09ms, fracRes: 0.4134, norm(attn): 0.1992, norm(output): 0.2490, norm(x): 0.4322, norm(y): 0.9925, norm:1.4549, tok/sec: 100894.93, flops:105.90, batch-reuse:1
@ 3376 train 4.6759 , allloss: 4.6957, dt: 1267.17ms, fracRes: 0.4148, norm(attn): 0.1963, norm(output): 0.2490, norm(x): 0.4361, norm(y): 0.9925, norm:1.3913, tok/sec: 103436.78, flops:108.57, batch-reuse:1
@ 3377 train 4.6318 , allloss: 4.6552, dt: 1270.55ms, fracRes: 0.4239, norm(attn): 0.1953, norm(output): 0.2559, norm(x): 0.4544, norm(y): 0.9925, norm:3.7330, tok/sec: 103161.83, flops:108.28, batch-reuse:1
@ 3378 train 4.6348 , allloss: 4.6583, dt: 1283.65ms, fracRes: 0.4158, norm(attn): 0.1943, norm(output): 0.2490, norm(x): 0.4361, norm(y): 0.9925, norm:1.9897, tok/sec: 102108.53, flops:107.18, batch-reuse:1
@ 3379 train 4.4794 , allloss: 4.5035, dt: 1257.63ms, fracRes: 0.4161, norm(attn): 0.1963, norm(output): 0.2471, norm(x): 0.4334, norm(y): 0.9925, norm:1.4222, tok/sec: 104221.50, flops:109.39, batch-reuse:1
@ 3380 train 4.5401 , allloss: 4.5672, dt: 1267.34ms, fracRes: 0.4171, norm(attn): 0.1963, norm(output): 0.2490, norm(x): 0.4378, norm(y): 0.9924, norm:1.4228, tok/sec: 103423.29, flops:108.56, batch-reuse:1
@ 3381 train 4.5271 , allloss: 4.5488, dt: 1272.67ms, fracRes: 0.4180, norm(attn): 0.1953, norm(output): 0.2490, norm(x): 0.4385, norm(y): 0.9924, norm:1.5613, tok/sec: 102990.06, flops:108.10, batch-reuse:1
@ 3382 train 4.5714 , allloss: 4.5926, dt: 1258.60ms, fracRes: 0.4176, norm(attn): 0.1963, norm(output): 0.2490, norm(x): 0.4388, norm(y): 0.9925, norm:1.4561, tok/sec: 104141.31, flops:109.31, batch-reuse:1
@ 3383 train 4.5719 , allloss: 4.5921, dt: 1264.21ms, fracRes: 0.4185, norm(attn): 0.1924, norm(output): 0.2490, norm(x): 0.4381, norm(y): 0.9926, norm:1.6103, tok/sec: 103679.27, flops:108.83, batch-reuse:1
@ 3384 train 4.5174 , allloss: 4.5388, dt: 1274.61ms, fracRes: 0.4183, norm(attn): 0.1934, norm(output): 0.2480, norm(x): 0.4377, norm(y): 0.9925, norm:1.5809, tok/sec: 102833.39, flops:107.94, batch-reuse:1
@ 3385 train 4.4772 , allloss: 4.5032, dt: 1236.75ms, fracRes: 0.4183, norm(attn): 0.1924, norm(output): 0.2490, norm(x): 0.4385, norm(y): 0.9925, norm:1.5181, tok/sec: 105980.66, flops:111.24, batch-reuse:1
@ 3386 train 4.6870 , allloss: 4.7097, dt: 1257.00ms, fracRes: 0.4195, norm(attn): 0.1934, norm(output): 0.2490, norm(x): 0.4418, norm(y): 0.9924, norm:1.8328, tok/sec: 104273.73, flops:109.45, batch-reuse:1
@ 3387 train 4.5392 , allloss: 4.5616, dt: 1257.55ms, fracRes: 0.4167, norm(attn): 0.1963, norm(output): 0.2500, norm(x): 0.4386, norm(y): 0.9924, norm:1.5826, tok/sec: 104227.86, flops:109.40, batch-reuse:1
@ 3388 train 4.4287 , allloss: 4.4484, dt: 1253.09ms, fracRes: 0.4157, norm(attn): 0.1963, norm(output): 0.2500, norm(x): 0.4382, norm(y): 0.9925, norm:1.2783, tok/sec: 104598.74, flops:109.79, batch-reuse:1
@ 3389 train 4.4715 , allloss: 4.4927, dt: 1272.63ms, fracRes: 0.4156, norm(attn): 0.1934, norm(output): 0.2490, norm(x): 0.4377, norm(y): 0.9926, norm:1.4856, tok/sec: 102993.19, flops:108.10, batch-reuse:1
@ 3390 train 4.6149 , allloss: 4.6346, dt: 1250.12ms, fracRes: 0.4157, norm(attn): 0.1934, norm(output): 0.2500, norm(x): 0.4387, norm(y): 0.9925, norm:1.6652, tok/sec: 104847.66, flops:110.05, batch-reuse:1
@ 3391 train 4.5779 , allloss: 4.5981, dt: 1277.97ms, fracRes: 0.4127, norm(attn): 0.1973, norm(output): 0.2490, norm(x): 0.4351, norm(y): 0.9925, norm:1.4464, tok/sec: 102562.67, flops:107.65, batch-reuse:1
@ 3392 train 4.4854 , allloss: 4.5061, dt: 1283.97ms, fracRes: 0.4109, norm(attn): 0.1963, norm(output): 0.2480, norm(x): 0.4309, norm(y): 0.9924, norm:1.2750, tok/sec: 102083.30, flops:107.15, batch-reuse:1
@ 3393 train 4.6279 , allloss: 4.6466, dt: 1264.42ms, fracRes: 0.4120, norm(attn): 0.1992, norm(output): 0.2480, norm(x): 0.4320, norm(y): 0.9924, norm:1.4445, tok/sec: 103661.97, flops:108.81, batch-reuse:1
@ 3394 train 4.5566 , allloss: 4.5764, dt: 1269.97ms, fracRes: 0.4122, norm(attn): 0.1973, norm(output): 0.2461, norm(x): 0.4288, norm(y): 0.9924, norm:1.2525, tok/sec: 103208.55, flops:108.33, batch-reuse:1
@ 3395 train 4.5113 , allloss: 4.5308, dt: 1246.20ms, fracRes: 0.4121, norm(attn): 0.2012, norm(output): 0.2480, norm(x): 0.4305, norm(y): 0.9924, norm:1.3979, tok/sec: 105177.33, flops:110.40, batch-reuse:1
@ 3396 train 4.5254 , allloss: 4.5444, dt: 1247.23ms, fracRes: 0.4127, norm(attn): 0.2012, norm(output): 0.2480, norm(x): 0.4316, norm(y): 0.9924, norm:1.3738, tok/sec: 105090.68, flops:110.31, batch-reuse:1
@ 3397 train 4.4958 , allloss: 4.5153, dt: 1277.21ms, fracRes: 0.4140, norm(attn): 0.1992, norm(output): 0.2490, norm(x): 0.4335, norm(y): 0.9925, norm:1.5011, tok/sec: 102624.07, flops:107.72, batch-reuse:1
@ 3398 train 4.5902 , allloss: 4.6090, dt: 1286.38ms, fracRes: 0.4153, norm(attn): 0.1914, norm(output): 0.2490, norm(x): 0.4357, norm(y): 0.9925, norm:1.3266, tok/sec: 101892.47, flops:106.95, batch-reuse:1
@ 3399 train 4.5043 , allloss: 4.5240, dt: 1263.23ms, fracRes: 0.4125, norm(attn): 0.1953, norm(output): 0.2480, norm(x): 0.4329, norm(y): 0.9925, norm:1.4991, tok/sec: 103759.60, flops:108.91, batch-reuse:1
@ 3400 train 4.5339 , allloss: 4.5546, dt: 1260.65ms, fracRes: 0.4122, norm(attn): 0.2012, norm(output): 0.2500, norm(x): 0.4341, norm(y): 0.9925, norm:1.4090, tok/sec: 103971.41, flops:109.13, batch-reuse:1
@ 3401 train 4.5188 , allloss: 4.5407, dt: 1275.75ms, fracRes: 0.4119, norm(attn): 0.2012, norm(output): 0.2490, norm(x): 0.4313, norm(y): 0.9925, norm:1.4563, tok/sec: 102740.91, flops:107.84, batch-reuse:1
@ 3402 train 4.5282 , allloss: 4.5487, dt: 1265.24ms, fracRes: 0.4136, norm(attn): 0.2012, norm(output): 0.2500, norm(x): 0.4381, norm(y): 0.9924, norm:1.4536, tok/sec: 103594.32, flops:108.74, batch-reuse:1
@ 3403 train 4.5057 , allloss: 4.5256, dt: 1276.59ms, fracRes: 0.4124, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4343, norm(y): 0.9925, norm:1.3416, tok/sec: 102673.50, flops:107.77, batch-reuse:1
@ 3404 train 4.4726 , allloss: 4.4915, dt: 1248.65ms, fracRes: 0.4141, norm(attn): 0.1982, norm(output): 0.2471, norm(x): 0.4330, norm(y): 0.9925, norm:1.5006, tok/sec: 104970.66, flops:110.18, batch-reuse:1
@ 3405 train 4.4717 , allloss: 4.4919, dt: 1257.53ms, fracRes: 0.4141, norm(attn): 0.2002, norm(output): 0.2490, norm(x): 0.4361, norm(y): 0.9924, norm:1.3986, tok/sec: 104230.12, flops:109.40, batch-reuse:1
@ 3406 train 4.4691 , allloss: 4.4896, dt: 1273.02ms, fracRes: 0.4139, norm(attn): 0.1992, norm(output): 0.2490, norm(x): 0.4350, norm(y): 0.9924, norm:1.4514, tok/sec: 102961.48, flops:108.07, batch-reuse:1
@ 3407 train 4.4991 , allloss: 4.5181, dt: 1263.49ms, fracRes: 0.4126, norm(attn): 0.1973, norm(output): 0.2490, norm(x): 0.4326, norm(y): 0.9925, norm:1.2950, tok/sec: 103738.02, flops:108.89, batch-reuse:1
@ 3408 train 4.4781 , allloss: 4.4969, dt: 1251.77ms, fracRes: 0.4138, norm(attn): 0.1982, norm(output): 0.2490, norm(x): 0.4338, norm(y): 0.9924, norm:1.5053, tok/sec: 104709.31, flops:109.91, batch-reuse:1
@ 3409 train 4.5773 , allloss: 4.5954, dt: 1271.55ms, fracRes: 0.4153, norm(attn): 0.1943, norm(output): 0.2500, norm(x): 0.4381, norm(y): 0.9924, norm:1.7398, tok/sec: 103080.79, flops:108.20, batch-reuse:1
@ 3410 train 4.5677 , allloss: 4.5883, dt: 1270.11ms, fracRes: 0.4163, norm(attn): 0.1934, norm(output): 0.2500, norm(x): 0.4417, norm(y): 0.9924, norm:1.4787, tok/sec: 103197.27, flops:108.32, batch-reuse:1
@ 3411 train 4.5533 , allloss: 4.5728, dt: 1264.97ms, fracRes: 0.4146, norm(attn): 0.1934, norm(output): 0.2480, norm(x): 0.4342, norm(y): 0.9924, norm:1.7075, tok/sec: 103616.62, flops:108.76, batch-reuse:1
@ 3412 train 4.5370 , allloss: 4.5560, dt: 1263.81ms, fracRes: 0.4163, norm(attn): 0.1982, norm(output): 0.2500, norm(x): 0.4397, norm(y): 0.9924, norm:1.4686, tok/sec: 103711.41, flops:108.86, batch-reuse:1
@ 3413 train 4.6057 , allloss: 4.6242, dt: 1287.71ms, fracRes: 0.4145, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4394, norm(y): 0.9923, norm:1.5293, tok/sec: 101786.92, flops:106.84, batch-reuse:1
@ 3414 train 4.4988 , allloss: 4.5180, dt: 1265.76ms, fracRes: 0.4122, norm(attn): 0.1934, norm(output): 0.2490, norm(x): 0.4313, norm(y): 0.9925, norm:1.5205, tok/sec: 103552.04, flops:108.69, batch-reuse:1
@ 3415 train 4.4804 , allloss: 4.4990, dt: 1279.22ms, fracRes: 0.4132, norm(attn): 0.1943, norm(output): 0.2490, norm(x): 0.4351, norm(y): 0.9926, norm:1.5886, tok/sec: 102462.60, flops:107.55, batch-reuse:1
@ 3416 train 4.5434 , allloss: 4.5625, dt: 1262.12ms, fracRes: 0.4134, norm(attn): 0.1973, norm(output): 0.2490, norm(x): 0.4359, norm(y): 0.9924, norm:1.2889, tok/sec: 103850.35, flops:109.00, batch-reuse:1
@ 3417 train 4.4573 , allloss: 4.4767, dt: 1268.26ms, fracRes: 0.4138, norm(attn): 0.1992, norm(output): 0.2490, norm(x): 0.4355, norm(y): 0.9923, norm:1.3159, tok/sec: 103347.52, flops:108.48, batch-reuse:1
@ 3418 train 4.4252 , allloss: 4.4445, dt: 1276.24ms, fracRes: 0.4125, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4343, norm(y): 0.9923, norm:1.3641, tok/sec: 102701.66, flops:107.80, batch-reuse:1
@ 3419 train 4.4800 , allloss: 4.4992, dt: 1265.01ms, fracRes: 0.4130, norm(attn): 0.1982, norm(output): 0.2500, norm(x): 0.4357, norm(y): 0.9925, norm:1.3815, tok/sec: 103613.11, flops:108.76, batch-reuse:1
@ 3420 train 4.4992 , allloss: 4.5174, dt: 1274.06ms, fracRes: 0.4128, norm(attn): 0.1982, norm(output): 0.2490, norm(x): 0.4330, norm(y): 0.9924, norm:1.2800, tok/sec: 102877.70, flops:107.98, batch-reuse:1
@ 3421 train 4.5229 , allloss: 4.5418, dt: 1261.23ms, fracRes: 0.4146, norm(attn): 0.1992, norm(output): 0.2490, norm(x): 0.4354, norm(y): 0.9923, norm:1.3405, tok/sec: 103924.28, flops:109.08, batch-reuse:1
@ 3422 train 4.5188 , allloss: 4.5381, dt: 1268.12ms, fracRes: 0.4160, norm(attn): 0.1973, norm(output): 0.2490, norm(x): 0.4366, norm(y): 0.9924, norm:1.3738, tok/sec: 103359.36, flops:108.49, batch-reuse:1
@ 3423 train 4.4790 , allloss: 4.4968, dt: 1245.72ms, fracRes: 0.4150, norm(attn): 0.2002, norm(output): 0.2490, norm(x): 0.4356, norm(y): 0.9925, norm:1.2435, tok/sec: 105218.28, flops:110.44, batch-reuse:1
@ 3424 train 4.5305 , allloss: 4.5500, dt: 1274.79ms, fracRes: 0.4155, norm(attn): 0.1992, norm(output): 0.2490, norm(x): 0.4368, norm(y): 0.9924, norm:1.4547, tok/sec: 102818.67, flops:107.92, batch-reuse:1
@ 3425 train 4.5229 , allloss: 4.5487, dt: 1271.18ms, fracRes: 0.4167, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4393, norm(y): 0.9923, norm:1.2283, tok/sec: 103110.75, flops:108.23, batch-reuse:1
@ 3426 train 4.4786 , allloss: 4.4959, dt: 1288.11ms, fracRes: 0.4161, norm(attn): 0.1963, norm(output): 0.2490, norm(x): 0.4355, norm(y): 0.9925, norm:1.3589, tok/sec: 101755.00, flops:106.81, batch-reuse:1
@ 3427 train 4.5148 , allloss: 4.5322, dt: 1252.24ms, fracRes: 0.4177, norm(attn): 0.1953, norm(output): 0.2500, norm(x): 0.4391, norm(y): 0.9925, norm:1.3715, tok/sec: 104670.22, flops:109.87, batch-reuse:1
@ 3428 train 4.4303 , allloss: 4.4492, dt: 1241.50ms, fracRes: 0.4171, norm(attn): 0.1963, norm(output): 0.2480, norm(x): 0.4376, norm(y): 0.9924, norm:1.4162, tok/sec: 105575.34, flops:110.82, batch-reuse:1
@ 3429 train 4.4301 , allloss: 4.4477, dt: 1277.67ms, fracRes: 0.4161, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4364, norm(y): 0.9924, norm:1.5829, tok/sec: 102586.36, flops:107.68, batch-reuse:1
@ 3430 train 4.6801 , allloss: 4.6976, dt: 1271.50ms, fracRes: 0.4134, norm(attn): 0.1943, norm(output): 0.2490, norm(x): 0.4307, norm(y): 0.9925, norm:1.4917, tok/sec: 103084.17, flops:108.20, batch-reuse:1
@ 3431 train 4.6189 , allloss: 4.6476, dt: 1287.94ms, fracRes: 0.4198, norm(attn): 0.1895, norm(output): 0.2490, norm(x): 0.4389, norm(y): 0.9925, norm:2.4899, tok/sec: 101768.77, flops:106.82, batch-reuse:1
@ 3432 train 4.4197 , allloss: 4.4396, dt: 1292.41ms, fracRes: 0.4133, norm(attn): 0.2021, norm(output): 0.2520, norm(x): 0.4371, norm(y): 0.9924, norm:2.2581, tok/sec: 101416.59, flops:106.45, batch-reuse:1
@ 3433 train 4.5272 , allloss: 4.5444, dt: 1274.32ms, fracRes: 0.4111, norm(attn): 0.2021, norm(output): 0.2520, norm(x): 0.4373, norm(y): 0.9923, norm:2.7192, tok/sec: 102856.11, flops:107.96, batch-reuse:1
@ 3434 train 4.4961 , allloss: 4.5151, dt: 1271.42ms, fracRes: 0.4138, norm(attn): 0.2012, norm(output): 0.2500, norm(x): 0.4413, norm(y): 0.9922, norm:1.7138, tok/sec: 103091.28, flops:108.21, batch-reuse:1
@ 3435 train 4.4666 , allloss: 4.4881, dt: 1276.97ms, fracRes: 0.4140, norm(attn): 0.1963, norm(output): 0.2480, norm(x): 0.4344, norm(y): 0.9923, norm:2.1241, tok/sec: 102643.04, flops:107.74, batch-reuse:1
@ 3436 train 4.5039 , allloss: 4.5218, dt: 1273.83ms, fracRes: 0.4134, norm(attn): 0.1963, norm(output): 0.2480, norm(x): 0.4342, norm(y): 0.9923, norm:1.5372, tok/sec: 102895.90, flops:108.00, batch-reuse:1
@ 3437 train 4.4638 , allloss: 4.4824, dt: 1271.92ms, fracRes: 0.4105, norm(attn): 0.2021, norm(output): 0.2500, norm(x): 0.4345, norm(y): 0.9922, norm:1.7047, tok/sec: 103050.34, flops:108.16, batch-reuse:1
@ 3438 train 4.5269 , allloss: 4.5434, dt: 1278.07ms, fracRes: 0.4119, norm(attn): 0.1953, norm(output): 0.2500, norm(x): 0.4358, norm(y): 0.9924, norm:1.5254, tok/sec: 102554.44, flops:107.64, batch-reuse:1
@ 3439 train 4.4127 , allloss: 4.4297, dt: 1275.52ms, fracRes: 0.4138, norm(attn): 0.1934, norm(output): 0.2500, norm(x): 0.4383, norm(y): 0.9926, norm:1.6403, tok/sec: 102759.82, flops:107.86, batch-reuse:1
@ 3440 train 4.3765 , allloss: 4.3943, dt: 1256.10ms, fracRes: 0.4156, norm(attn): 0.1914, norm(output): 0.2480, norm(x): 0.4359, norm(y): 0.9926, norm:1.5055, tok/sec: 104348.50, flops:109.53, batch-reuse:1
@ 3441 train 4.5057 , allloss: 4.5219, dt: 1276.23ms, fracRes: 0.4169, norm(attn): 0.1904, norm(output): 0.2500, norm(x): 0.4409, norm(y): 0.9926, norm:1.5859, tok/sec: 102702.71, flops:107.80, batch-reuse:1
@ 3442 train 4.4775 , allloss: 4.4979, dt: 1274.12ms, fracRes: 0.4178, norm(attn): 0.1943, norm(output): 0.2500, norm(x): 0.4419, norm(y): 0.9925, norm:1.6120, tok/sec: 102872.60, flops:107.98, batch-reuse:1
@ 3443 train 4.4509 , allloss: 4.4682, dt: 1270.07ms, fracRes: 0.4186, norm(attn): 0.1943, norm(output): 0.2500, norm(x): 0.4427, norm(y): 0.9925, norm:1.3028, tok/sec: 103200.82, flops:108.32, batch-reuse:1
@ 3444 train 4.4288 , allloss: 4.4456, dt: 1267.01ms, fracRes: 0.4194, norm(attn): 0.1934, norm(output): 0.2490, norm(x): 0.4402, norm(y): 0.9925, norm:1.5484, tok/sec: 103449.93, flops:108.58, batch-reuse:1
@ 3445 train 4.4432 , allloss: 4.4607, dt: 1255.18ms, fracRes: 0.4195, norm(attn): 0.1895, norm(output): 0.2490, norm(x): 0.4421, norm(y): 0.9925, norm:1.4569, tok/sec: 104425.19, flops:109.61, batch-reuse:1
@ 3446 train 4.4587 , allloss: 4.4759, dt: 1275.97ms, fracRes: 0.4202, norm(attn): 0.1914, norm(output): 0.2500, norm(x): 0.4449, norm(y): 0.9925, norm:1.6724, tok/sec: 102723.17, flops:107.82, batch-reuse:1
@ 3447 train 4.4891 , allloss: 4.5055, dt: 1284.99ms, fracRes: 0.4181, norm(attn): 0.1895, norm(output): 0.2490, norm(x): 0.4400, norm(y): 0.9925, norm:1.5228, tok/sec: 102002.61, flops:107.07, batch-reuse:1
@ 3448 train 4.4225 , allloss: 4.4394, dt: 1280.35ms, fracRes: 0.4193, norm(attn): 0.1924, norm(output): 0.2500, norm(x): 0.4450, norm(y): 0.9925, norm:1.3985, tok/sec: 102372.18, flops:107.45, batch-reuse:1
@ 3449 train 4.4783 , allloss: 4.4949, dt: 1284.37ms, fracRes: 0.4182, norm(attn): 0.1943, norm(output): 0.2520, norm(x): 0.4440, norm(y): 0.9924, norm:1.3755, tok/sec: 102051.65, flops:107.12, batch-reuse:1
@ 3450 train 4.4116 , allloss: 4.4274, dt: 1289.69ms, fracRes: 0.4165, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4394, norm(y): 0.9924, norm:1.5169, tok/sec: 101630.74, flops:106.67, batch-reuse:1
@ 3451 train 4.4942 , allloss: 4.5106, dt: 1276.74ms, fracRes: 0.4165, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4426, norm(y): 0.9923, norm:1.3320, tok/sec: 102661.73, flops:107.76, batch-reuse:1
@ 3452 train 4.4694 , allloss: 4.4845, dt: 1276.18ms, fracRes: 0.4172, norm(attn): 0.1943, norm(output): 0.2520, norm(x): 0.4420, norm(y): 0.9924, norm:1.3539, tok/sec: 102706.53, flops:107.80, batch-reuse:1
@ 3453 train 4.4680 , allloss: 4.4842, dt: 1271.43ms, fracRes: 0.4193, norm(attn): 0.1953, norm(output): 0.2520, norm(x): 0.4471, norm(y): 0.9924, norm:1.4546, tok/sec: 103090.24, flops:108.21, batch-reuse:1
@ 3454 train 4.4964 , allloss: 4.5113, dt: 1267.00ms, fracRes: 0.4165, norm(attn): 0.1934, norm(output): 0.2500, norm(x): 0.4345, norm(y): 0.9923, norm:1.6398, tok/sec: 103451.04, flops:108.59, batch-reuse:1
@ 3455 train 4.4535 , allloss: 4.4689, dt: 1269.56ms, fracRes: 0.4192, norm(attn): 0.1953, norm(output): 0.2520, norm(x): 0.4451, norm(y): 0.9924, norm:1.7370, tok/sec: 103242.41, flops:108.37, batch-reuse:1
@ 3456 train 4.4080 , allloss: 4.4247, dt: 1268.95ms, fracRes: 0.4168, norm(attn): 0.1963, norm(output): 0.2500, norm(x): 0.4414, norm(y): 0.9924, norm:1.5542, tok/sec: 103291.70, flops:108.42, batch-reuse:1
@ 3457 train 4.4125 , allloss: 4.4285, dt: 1238.29ms, fracRes: 0.4186, norm(attn): 0.1953, norm(output): 0.2520, norm(x): 0.4445, norm(y): 0.9924, norm:1.5079, tok/sec: 105848.94, flops:111.10, batch-reuse:1
@ 3458 train 4.3777 , allloss: 4.3939, dt: 1262.00ms, fracRes: 0.4193, norm(attn): 0.1943, norm(output): 0.2500, norm(x): 0.4436, norm(y): 0.9924, norm:1.6082, tok/sec: 103860.57, flops:109.02, batch-reuse:1
@ 3459 train 4.4487 , allloss: 4.4640, dt: 1244.68ms, fracRes: 0.4188, norm(attn): 0.1953, norm(output): 0.2500, norm(x): 0.4466, norm(y): 0.9924, norm:1.3584, tok/sec: 105306.11, flops:110.53, batch-reuse:1
@ 3460 train 4.5269 , allloss: 4.5439, dt: 1270.08ms, fracRes: 0.4190, norm(attn): 0.1934, norm(output): 0.2520, norm(x): 0.4477, norm(y): 0.9923, norm:1.7518, tok/sec: 103199.62, flops:108.32, batch-reuse:1
@ 3461 train 4.4256 , allloss: 4.4405, dt: 1270.95ms, fracRes: 0.4170, norm(attn): 0.1934, norm(output): 0.2500, norm(x): 0.4401, norm(y): 0.9923, norm:1.5616, tok/sec: 103129.28, flops:108.25, batch-reuse:1
@ 3462 train 4.4468 , allloss: 4.4622, dt: 1276.95ms, fracRes: 0.4187, norm(attn): 0.1982, norm(output): 0.2520, norm(x): 0.4443, norm(y): 0.9922, norm:1.3696, tok/sec: 102644.53, flops:107.74, batch-reuse:1
@ 3463 train 4.4726 , allloss: 4.4907, dt: 1280.65ms, fracRes: 0.4174, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4447, norm(y): 0.9923, norm:1.4660, tok/sec: 102348.11, flops:107.43, batch-reuse:1
@ 3464 train 4.3030 , allloss: 4.3192, dt: 1273.53ms, fracRes: 0.4175, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4403, norm(y): 0.9925, norm:1.5726, tok/sec: 102920.36, flops:108.03, batch-reuse:1
@ 3465 train 4.4290 , allloss: 4.4454, dt: 1262.40ms, fracRes: 0.4177, norm(attn): 0.1934, norm(output): 0.2520, norm(x): 0.4453, norm(y): 0.9925, norm:1.7061, tok/sec: 103827.30, flops:108.98, batch-reuse:1
@ 3466 train 4.4426 , allloss: 4.4647, dt: 1293.85ms, fracRes: 0.4162, norm(attn): 0.1963, norm(output): 0.2500, norm(x): 0.4421, norm(y): 0.9923, norm:1.2773, tok/sec: 101303.90, flops:106.33, batch-reuse:1
@ 3467 train 4.4662 , allloss: 4.4857, dt: 1264.78ms, fracRes: 0.4166, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4429, norm(y): 0.9922, norm:1.4665, tok/sec: 103631.88, flops:108.78, batch-reuse:1
@ 3468 train 4.3816 , allloss: 4.3979, dt: 1282.16ms, fracRes: 0.4151, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4364, norm(y): 0.9923, norm:1.3349, tok/sec: 102227.60, flops:107.30, batch-reuse:1
@ 3469 train 4.4380 , allloss: 4.4530, dt: 1270.45ms, fracRes: 0.4163, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4435, norm(y): 0.9923, norm:1.3679, tok/sec: 103169.83, flops:108.29, batch-reuse:1
@ 3470 train 4.5282 , allloss: 4.5425, dt: 1261.94ms, fracRes: 0.4170, norm(attn): 0.1953, norm(output): 0.2520, norm(x): 0.4453, norm(y): 0.9923, norm:1.5176, tok/sec: 103865.38, flops:109.02, batch-reuse:1
@ 3471 train 4.4455 , allloss: 4.4607, dt: 1248.88ms, fracRes: 0.4198, norm(attn): 0.1963, norm(output): 0.2539, norm(x): 0.4487, norm(y): 0.9923, norm:1.3427, tok/sec: 104951.62, flops:110.16, batch-reuse:1
@ 3472 train 4.4480 , allloss: 4.4626, dt: 1256.60ms, fracRes: 0.4176, norm(attn): 0.1953, norm(output): 0.2500, norm(x): 0.4418, norm(y): 0.9923, norm:1.3486, tok/sec: 104306.71, flops:109.48, batch-reuse:1
@ 3473 train 4.3762 , allloss: 4.3918, dt: 1269.22ms, fracRes: 0.4170, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4439, norm(y): 0.9923, norm:1.5612, tok/sec: 103269.89, flops:108.40, batch-reuse:1
@ 3474 train 4.4289 , allloss: 4.4451, dt: 1258.13ms, fracRes: 0.4178, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4431, norm(y): 0.9923, norm:1.7674, tok/sec: 104179.81, flops:109.35, batch-reuse:1
@ 3475 train 4.2859 , allloss: 4.3021, dt: 1259.72ms, fracRes: 0.4164, norm(attn): 0.1963, norm(output): 0.2500, norm(x): 0.4395, norm(y): 0.9923, norm:1.3502, tok/sec: 104048.39, flops:109.21, batch-reuse:1
@ 3476 train 4.3631 , allloss: 4.3779, dt: 1293.44ms, fracRes: 0.4174, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4413, norm(y): 0.9923, norm:1.3238, tok/sec: 101336.19, flops:106.37, batch-reuse:1
@ 3477 train 4.3169 , allloss: 4.3314, dt: 1254.32ms, fracRes: 0.4175, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4410, norm(y): 0.9923, norm:1.6439, tok/sec: 104496.27, flops:109.68, batch-reuse:1
@ 3478 train 4.3818 , allloss: 4.3965, dt: 1260.44ms, fracRes: 0.4182, norm(attn): 0.2002, norm(output): 0.2490, norm(x): 0.4404, norm(y): 0.9924, norm:1.5089, tok/sec: 103988.82, flops:109.15, batch-reuse:1
@ 3479 train 4.2636 , allloss: 4.2788, dt: 1272.43ms, fracRes: 0.4192, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4429, norm(y): 0.9923, norm:1.4105, tok/sec: 103009.46, flops:108.12, batch-reuse:1
@ 3480 train 4.3989 , allloss: 4.4137, dt: 1268.38ms, fracRes: 0.4170, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4399, norm(y): 0.9923, norm:1.3195, tok/sec: 103338.26, flops:108.47, batch-reuse:1
@ 3481 train 4.3992 , allloss: 4.4139, dt: 1294.34ms, fracRes: 0.4180, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4443, norm(y): 0.9923, norm:1.4622, tok/sec: 101265.52, flops:106.29, batch-reuse:1
@ 3482 train 4.2693 , allloss: 4.2881, dt: 1260.47ms, fracRes: 0.4170, norm(attn): 0.2021, norm(output): 0.2539, norm(x): 0.4467, norm(y): 0.9923, norm:1.6409, tok/sec: 103986.77, flops:109.15, batch-reuse:1
@ 3483 train 4.3639 , allloss: 4.3791, dt: 1277.89ms, fracRes: 0.4150, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4399, norm(y): 0.9924, norm:1.4000, tok/sec: 102569.20, flops:107.66, batch-reuse:1
@ 3484 train 4.3411 , allloss: 4.3560, dt: 1264.80ms, fracRes: 0.4166, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4425, norm(y): 0.9923, norm:1.3048, tok/sec: 103630.69, flops:108.77, batch-reuse:1
@ 3485 train 4.3217 , allloss: 4.3368, dt: 1249.54ms, fracRes: 0.4174, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4430, norm(y): 0.9922, norm:1.5035, tok/sec: 104896.23, flops:110.10, batch-reuse:1
@ 3486 train 4.3583 , allloss: 4.3729, dt: 1274.98ms, fracRes: 0.4158, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4421, norm(y): 0.9922, norm:1.3108, tok/sec: 102803.10, flops:107.91, batch-reuse:1
@ 3487 train 4.2524 , allloss: 4.2668, dt: 1256.32ms, fracRes: 0.4155, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4375, norm(y): 0.9923, norm:1.4974, tok/sec: 104330.25, flops:109.51, batch-reuse:1
@ 3488 train 4.3722 , allloss: 4.3866, dt: 1249.58ms, fracRes: 0.4155, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4413, norm(y): 0.9924, norm:1.2775, tok/sec: 104892.49, flops:110.10, batch-reuse:1
@ 3489 train 4.3503 , allloss: 4.3648, dt: 1270.79ms, fracRes: 0.4165, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4448, norm(y): 0.9924, norm:1.3956, tok/sec: 103142.46, flops:108.26, batch-reuse:1
@ 3490 train 4.2835 , allloss: 4.2981, dt: 1285.43ms, fracRes: 0.4162, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4411, norm(y): 0.9923, norm:1.4179, tok/sec: 101967.12, flops:107.03, batch-reuse:1
@ 3491 train 4.2877 , allloss: 4.3028, dt: 1260.88ms, fracRes: 0.4154, norm(attn): 0.2012, norm(output): 0.2500, norm(x): 0.4415, norm(y): 0.9923, norm:1.3202, tok/sec: 103953.17, flops:109.11, batch-reuse:1
@ 3492 train 4.3569 , allloss: 4.3712, dt: 1271.11ms, fracRes: 0.4151, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4400, norm(y): 0.9923, norm:1.2224, tok/sec: 103116.46, flops:108.23, batch-reuse:1
@ 3493 train 4.3327 , allloss: 4.3467, dt: 1280.40ms, fracRes: 0.4167, norm(attn): 0.1963, norm(output): 0.2500, norm(x): 0.4406, norm(y): 0.9924, norm:1.3909, tok/sec: 102367.82, flops:107.45, batch-reuse:1
@ 3494 train 4.3263 , allloss: 4.3402, dt: 1282.13ms, fracRes: 0.4155, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4417, norm(y): 0.9922, norm:1.6405, tok/sec: 102229.56, flops:107.30, batch-reuse:1
@ 3495 train 4.3421 , allloss: 4.3569, dt: 1278.30ms, fracRes: 0.4164, norm(attn): 0.2002, norm(output): 0.2520, norm(x): 0.4455, norm(y): 0.9922, norm:1.4771, tok/sec: 102536.58, flops:107.63, batch-reuse:1
@ 3496 train 4.3621 , allloss: 4.3767, dt: 1295.61ms, fracRes: 0.4165, norm(attn): 0.1953, norm(output): 0.2500, norm(x): 0.4425, norm(y): 0.9923, norm:1.4363, tok/sec: 101166.32, flops:106.19, batch-reuse:1
@ 3497 train 4.3100 , allloss: 4.3245, dt: 1235.96ms, fracRes: 0.4171, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4420, norm(y): 0.9923, norm:1.5783, tok/sec: 106048.58, flops:111.31, batch-reuse:1
@ 3498 train 4.3115 , allloss: 4.3259, dt: 1271.16ms, fracRes: 0.4170, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4418, norm(y): 0.9922, norm:1.3444, tok/sec: 103111.84, flops:108.23, batch-reuse:1
@ 3499 train 4.3417 , allloss: 4.3564, dt: 1281.46ms, fracRes: 0.4168, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4418, norm(y): 0.9922, norm:1.2223, tok/sec: 102283.65, flops:107.36, batch-reuse:1
@ 3500 train 4.2482 , allloss: 4.2629, dt: 1263.60ms, fracRes: 0.4189, norm(attn): 0.1963, norm(output): 0.2520, norm(x): 0.4496, norm(y): 0.9923, norm:1.4914, tok/sec: 103729.18, flops:108.88, batch-reuse:1
@ 3501 train 4.2254 , allloss: 4.2411, dt: 1254.17ms, fracRes: 0.4166, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4439, norm(y): 0.9922, norm:1.5161, tok/sec: 104509.02, flops:109.70, batch-reuse:1
@ 3502 train 4.2772 , allloss: 4.2916, dt: 1279.96ms, fracRes: 0.4166, norm(attn): 0.1982, norm(output): 0.2520, norm(x): 0.4454, norm(y): 0.9923, norm:1.3675, tok/sec: 102403.09, flops:107.49, batch-reuse:1
@ 3503 train 4.3153 , allloss: 4.3295, dt: 1251.83ms, fracRes: 0.4141, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4375, norm(y): 0.9923, norm:1.2967, tok/sec: 104704.03, flops:109.90, batch-reuse:1
@ 3504 train 4.2771 , allloss: 4.2917, dt: 1274.64ms, fracRes: 0.4164, norm(attn): 0.1982, norm(output): 0.2500, norm(x): 0.4409, norm(y): 0.9923, norm:1.3012, tok/sec: 102830.73, flops:107.93, batch-reuse:1
@ 3505 train 4.2450 , allloss: 4.2600, dt: 1280.66ms, fracRes: 0.4167, norm(attn): 0.2012, norm(output): 0.2520, norm(x): 0.4426, norm(y): 0.9922, norm:1.3585, tok/sec: 102346.97, flops:107.43, batch-reuse:1
@ 3506 train 4.1943 , allloss: 4.2111, dt: 1259.40ms, fracRes: 0.4179, norm(attn): 0.2021, norm(output): 0.2520, norm(x): 0.4471, norm(y): 0.9923, norm:1.6091, tok/sec: 104075.08, flops:109.24, batch-reuse:1
@ 3507 train 4.2785 , allloss: 4.2938, dt: 1277.25ms, fracRes: 0.4144, norm(attn): 0.2002, norm(output): 0.2520, norm(x): 0.4447, norm(y): 0.9923, norm:1.3307, tok/sec: 102620.70, flops:107.71, batch-reuse:1
@ 3508 train 4.3930 , allloss: 4.4076, dt: 1272.54ms, fracRes: 0.4137, norm(attn): 0.2002, norm(output): 0.2520, norm(x): 0.4407, norm(y): 0.9923, norm:1.3935, tok/sec: 102999.96, flops:108.11, batch-reuse:1
@ 3509 train 4.3418 , allloss: 4.3576, dt: 1278.14ms, fracRes: 0.4175, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4480, norm(y): 0.9923, norm:1.4834, tok/sec: 102549.07, flops:107.64, batch-reuse:1
@ 3510 train 4.2995 , allloss: 4.3136, dt: 1244.36ms, fracRes: 0.4138, norm(attn): 0.2012, norm(output): 0.2520, norm(x): 0.4411, norm(y): 0.9922, norm:1.2674, tok/sec: 105332.97, flops:110.56, batch-reuse:1
@ 3511 train 4.3608 , allloss: 4.3749, dt: 1275.65ms, fracRes: 0.4160, norm(attn): 0.1992, norm(output): 0.2500, norm(x): 0.4453, norm(y): 0.9923, norm:1.3762, tok/sec: 102748.94, flops:107.85, batch-reuse:1
@ 3512 train 4.3611 , allloss: 4.3779, dt: 1266.39ms, fracRes: 0.4163, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4463, norm(y): 0.9923, norm:1.4998, tok/sec: 103500.85, flops:108.64, batch-reuse:1
@ 3513 train 4.3218 , allloss: 4.3356, dt: 1274.94ms, fracRes: 0.4135, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4401, norm(y): 0.9923, norm:1.4189, tok/sec: 102806.08, flops:107.91, batch-reuse:1
@ 3514 train 4.4189 , allloss: 4.4340, dt: 1259.26ms, fracRes: 0.4150, norm(attn): 0.1982, norm(output): 0.2520, norm(x): 0.4452, norm(y): 0.9922, norm:1.3031, tok/sec: 104086.73, flops:109.25, batch-reuse:1
@ 3515 train 4.3081 , allloss: 4.3231, dt: 1270.52ms, fracRes: 0.4149, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4412, norm(y): 0.9922, norm:1.4743, tok/sec: 103163.69, flops:108.28, batch-reuse:1
@ 3516 train 4.4163 , allloss: 4.4308, dt: 1296.16ms, fracRes: 0.4157, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4430, norm(y): 0.9922, norm:1.5196, tok/sec: 101123.23, flops:106.14, batch-reuse:1
@ 3517 train 4.3578 , allloss: 4.3724, dt: 1260.30ms, fracRes: 0.4143, norm(attn): 0.2012, norm(output): 0.2500, norm(x): 0.4403, norm(y): 0.9922, norm:1.4133, tok/sec: 104000.64, flops:109.16, batch-reuse:1
@ 3518 train 4.3910 , allloss: 4.4061, dt: 1255.42ms, fracRes: 0.4155, norm(attn): 0.2002, norm(output): 0.2520, norm(x): 0.4450, norm(y): 0.9922, norm:1.5182, tok/sec: 104405.28, flops:109.59, batch-reuse:1
@ 3519 train 4.2568 , allloss: 4.2706, dt: 1281.88ms, fracRes: 0.4148, norm(attn): 0.2002, norm(output): 0.2520, norm(x): 0.4434, norm(y): 0.9922, norm:1.4064, tok/sec: 102249.58, flops:107.32, batch-reuse:1
@ 3520 train 4.2447 , allloss: 4.2595, dt: 1262.84ms, fracRes: 0.4174, norm(attn): 0.2012, norm(output): 0.2539, norm(x): 0.4487, norm(y): 0.9922, norm:1.3427, tok/sec: 103791.18, flops:108.94, batch-reuse:1
@ 3521 train 4.3119 , allloss: 4.3271, dt: 1288.95ms, fracRes: 0.4159, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4441, norm(y): 0.9923, norm:1.4081, tok/sec: 101688.82, flops:106.74, batch-reuse:1
@ 3522 train 4.4237 , allloss: 4.4380, dt: 1280.01ms, fracRes: 0.4107, norm(attn): 0.2021, norm(output): 0.2500, norm(x): 0.4292, norm(y): 0.9923, norm:1.6766, tok/sec: 102398.97, flops:107.48, batch-reuse:1
@ 3523 train 4.3571 , allloss: 4.3723, dt: 1274.72ms, fracRes: 0.4136, norm(attn): 0.2031, norm(output): 0.2500, norm(x): 0.4383, norm(y): 0.9924, norm:1.8471, tok/sec: 102824.02, flops:107.93, batch-reuse:1
@ 3524 train 4.3591 , allloss: 4.3761, dt: 1260.26ms, fracRes: 0.4160, norm(attn): 0.2012, norm(output): 0.2520, norm(x): 0.4432, norm(y): 0.9923, norm:1.5683, tok/sec: 104003.69, flops:109.17, batch-reuse:1
@ 3525 train 4.3372 , allloss: 4.3527, dt: 1279.55ms, fracRes: 0.4159, norm(attn): 0.2012, norm(output): 0.2520, norm(x): 0.4440, norm(y): 0.9922, norm:1.3545, tok/sec: 102435.66, flops:107.52, batch-reuse:1
@ 3526 train 4.4714 , allloss: 4.4860, dt: 1250.21ms, fracRes: 0.4182, norm(attn): 0.2012, norm(output): 0.2520, norm(x): 0.4474, norm(y): 0.9922, norm:1.4442, tok/sec: 104839.62, flops:110.04, batch-reuse:1
@ 3527 train 4.4966 , allloss: 4.5113, dt: 1248.30ms, fracRes: 0.4177, norm(attn): 0.2002, norm(output): 0.2520, norm(x): 0.4449, norm(y): 0.9922, norm:1.4067, tok/sec: 105000.45, flops:110.21, batch-reuse:1
@ 3528 train 4.5210 , allloss: 4.5356, dt: 1250.24ms, fracRes: 0.4183, norm(attn): 0.2002, norm(output): 0.2500, norm(x): 0.4466, norm(y): 0.9922, norm:1.4460, tok/sec: 104837.60, flops:110.04, batch-reuse:1
@ 3529 train 4.5514 , allloss: 4.5657, dt: 1280.24ms, fracRes: 0.4181, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4456, norm(y): 0.9923, norm:1.5028, tok/sec: 102381.16, flops:107.46, batch-reuse:1
@ 3530 train 4.5433 , allloss: 4.5581, dt: 1277.22ms, fracRes: 0.4196, norm(attn): 0.1924, norm(output): 0.2520, norm(x): 0.4488, norm(y): 0.9923, norm:1.4289, tok/sec: 102623.19, flops:107.72, batch-reuse:1
@ 3531 train 4.6833 , allloss: 4.6980, dt: 1276.88ms, fracRes: 0.4190, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4466, norm(y): 0.9922, norm:1.4135, tok/sec: 102649.84, flops:107.74, batch-reuse:1
@ 3532 train 4.5429 , allloss: 4.5571, dt: 1246.00ms, fracRes: 0.4178, norm(attn): 0.1973, norm(output): 0.2500, norm(x): 0.4439, norm(y): 0.9923, norm:1.8290, tok/sec: 105194.30, flops:110.42, batch-reuse:1
@ 3533 train 4.6468 , allloss: 4.6617, dt: 1282.04ms, fracRes: 0.4178, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4464, norm(y): 0.9922, norm:1.5104, tok/sec: 102237.22, flops:107.31, batch-reuse:1
@ 3534 train 4.4646 , allloss: 4.4796, dt: 1275.47ms, fracRes: 0.4175, norm(attn): 0.2012, norm(output): 0.2500, norm(x): 0.4462, norm(y): 0.9923, norm:1.6170, tok/sec: 102763.92, flops:107.86, batch-reuse:1
@ 3535 train 4.6981 , allloss: 4.7124, dt: 1261.06ms, fracRes: 0.4202, norm(attn): 0.1982, norm(output): 0.2559, norm(x): 0.4577, norm(y): 0.9923, norm:1.9339, tok/sec: 103937.78, flops:109.10, batch-reuse:1
@ 3536 train 4.4681 , allloss: 4.4826, dt: 1283.95ms, fracRes: 0.4171, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4468, norm(y): 0.9923, norm:2.2908, tok/sec: 102084.87, flops:107.15, batch-reuse:1
@ 3537 train 4.5578 , allloss: 4.5722, dt: 1271.54ms, fracRes: 0.4176, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4500, norm(y): 0.9922, norm:1.7486, tok/sec: 103081.12, flops:108.20, batch-reuse:1
@ 3538 train 4.4923 , allloss: 4.5079, dt: 1261.46ms, fracRes: 0.4158, norm(attn): 0.2031, norm(output): 0.2539, norm(x): 0.4468, norm(y): 0.9920, norm:1.6540, tok/sec: 103904.82, flops:109.06, batch-reuse:1
@ 3539 train 4.4699 , allloss: 4.4846, dt: 1264.83ms, fracRes: 0.4184, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4455, norm(y): 0.9923, norm:1.7693, tok/sec: 103628.54, flops:108.77, batch-reuse:1
@ 3540 train 4.5178 , allloss: 4.5322, dt: 1272.02ms, fracRes: 0.4180, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4471, norm(y): 0.9923, norm:1.3945, tok/sec: 103042.44, flops:108.16, batch-reuse:1
@ 3541 train 4.5031 , allloss: 4.5177, dt: 1266.67ms, fracRes: 0.4194, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4520, norm(y): 0.9923, norm:1.6513, tok/sec: 103477.29, flops:108.61, batch-reuse:1
@ 3542 train 4.5098 , allloss: 4.5250, dt: 1251.18ms, fracRes: 0.4191, norm(attn): 0.1963, norm(output): 0.2520, norm(x): 0.4499, norm(y): 0.9922, norm:1.3691, tok/sec: 104758.77, flops:109.96, batch-reuse:1
@ 3543 train 4.6105 , allloss: 4.6248, dt: 1278.56ms, fracRes: 0.4203, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4499, norm(y): 0.9922, norm:1.6745, tok/sec: 102515.03, flops:107.60, batch-reuse:1
@ 3544 train 4.4612 , allloss: 4.4755, dt: 1274.02ms, fracRes: 0.4199, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4491, norm(y): 0.9922, norm:1.5929, tok/sec: 102880.32, flops:107.99, batch-reuse:1
@ 3545 train 4.4729 , allloss: 4.4875, dt: 1274.36ms, fracRes: 0.4185, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4469, norm(y): 0.9923, norm:1.2811, tok/sec: 102852.87, flops:107.96, batch-reuse:1
@ 3546 train 4.4813 , allloss: 4.4961, dt: 1266.97ms, fracRes: 0.4194, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4470, norm(y): 0.9922, norm:1.6971, tok/sec: 103452.93, flops:108.59, batch-reuse:1
@ 3547 train 4.4603 , allloss: 4.4745, dt: 1267.62ms, fracRes: 0.4187, norm(attn): 0.2002, norm(output): 0.2520, norm(x): 0.4492, norm(y): 0.9922, norm:1.4707, tok/sec: 103400.07, flops:108.53, batch-reuse:1
@ 3548 train 4.4294 , allloss: 4.4434, dt: 1262.59ms, fracRes: 0.4181, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4484, norm(y): 0.9922, norm:1.2383, tok/sec: 103812.17, flops:108.96, batch-reuse:1
@ 3549 train 4.4261 , allloss: 4.4401, dt: 1240.32ms, fracRes: 0.4182, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4495, norm(y): 0.9922, norm:1.3542, tok/sec: 105675.65, flops:110.92, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0530,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7578,     0.1436,     0.0991,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3867,     0.1128,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1084,     0.4062,     0.1631,     0.1611,     0.1611,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4434,     0.0454,     0.2578,     0.0532,     0.1670,     0.0332,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6055,     0.0067,     0.2715,     0.0260,     0.0840,     0.0040,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7773,     0.0019,     0.0747,     0.0176,     0.0075,     0.0042,     0.0032,     0.1143,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1533,     0.0471,     0.1709,     0.0356,     0.1875,     0.0466,     0.0130,     0.2637,     0.0815,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2852,     0.0167,     0.1826,     0.0352,     0.0337,     0.0126,     0.0093,     0.3242,     0.0327,     0.0664,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1089,     0.0747,     0.1924,     0.0723,     0.2480,     0.0253,     0.0057,     0.1309,     0.0579,     0.0747,     0.0085,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6055,     0.0093,     0.0942,     0.0522,     0.0435,     0.0069,     0.0060,     0.0820,     0.0374,     0.0352,     0.0063,     0.0232,     0.0000,     0.0000,     0.0000],
        [    0.2432,     0.0121,     0.0342,     0.0422,     0.0322,     0.0461,     0.0781,     0.0430,     0.0879,     0.0850,     0.0977,     0.1611,     0.0376,     0.0000,     0.0000],
        [    0.1147,     0.0154,     0.1328,     0.0173,     0.1030,     0.0156,     0.0030,     0.1504,     0.0403,     0.0583,     0.0029,     0.0060,     0.3086,     0.0317,     0.0000],
        [    0.3691,     0.0091,     0.1230,     0.0378,     0.1426,     0.0107,     0.0011,     0.0286,     0.0564,     0.0469,     0.0032,     0.0056,     0.1025,     0.0581,     0.0055]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0074, -0.0705, -0.0146,  ...,  0.0202,  0.0280,  0.0595],
        [-0.0240,  0.0106,  0.0266,  ..., -0.0020, -0.0412, -0.0126],
        [-0.0491,  0.0459,  0.0149,  ...,  0.0301, -0.0333, -0.0691],
        ...,
        [-0.0032,  0.0223,  0.0540,  ...,  0.0036, -0.0266, -0.0614],
        [-0.0648,  0.0571,  0.0367,  ...,  0.0189, -0.0721, -0.0311],
        [ 0.0241, -0.0427, -0.0490,  ..., -0.0418,  0.0680,  0.0642]], device='cuda:0', requires_grad=True)
K: tensor([-0.6172,  1.8828,  1.7891, -1.4531, -0.2988,  1.2344, -0.2852, -1.4141,  0.8125,  1.5703,  0.0972,  1.5469, -1.3359,  1.4062,  0.2266,  1.0547, -1.0469,  1.1250,  0.5938, -0.6953,  1.4141, -1.3672,  0.8164,  1.0859,  1.0391, -1.6641, -0.3184,  0.2412, -0.8398,  1.5781,  1.7812, -0.8828,
         0.9883,  0.8633,  1.3594, -0.9258, -1.6562,  0.4238,  0.2773, -0.4004,  1.4375,  0.5156, -1.4297,  0.7852, -0.5586,  1.8281,  0.5820, -1.0078, -1.6953, -0.4141, -1.0469, -2.0156, -0.3770, -0.8477,  0.8867, -1.6328, -1.0312, -1.3750,  2.1094,  0.4824, -0.0815,  1.0078,  0.5000, -0.1299],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0275,  0.0344, -0.0115,  ...,  0.0375, -0.0041, -0.0353],
        [ 0.0263, -0.0423, -0.0529,  ...,  0.0335,  0.0290,  0.0589],
        [ 0.0089, -0.0060,  0.0032,  ...,  0.0264,  0.0144,  0.0620],
        ...,
        [ 0.0093, -0.0355,  0.0034,  ..., -0.0095,  0.0211,  0.0435],
        [ 0.0339, -0.0133, -0.0292,  ...,  0.0020,  0.0194,  0.0542],
        [-0.0111, -0.0067,  0.0346,  ...,  0.0301, -0.0350, -0.0433]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6562, -0.8477, -0.8750,  0.2559,  1.1328, -0.2695,  1.1797,  1.4844, -0.1650, -0.9922, -1.0469, -0.7578, -0.0322, -0.3965,  1.2031, -0.5039,  0.6602, -0.2090, -0.0044,  0.3047, -0.4941,  0.0354, -1.0391,  1.1328, -0.7617,  0.1641,  0.9453, -1.4844,  0.3203, -0.0061, -0.0562,  1.0703,
        -0.8477, -0.9062, -0.4922,  0.9492,  0.8438, -0.9219, -0.3008, -0.1406, -0.0388, -0.9023,  0.4258, -0.9375,  0.1289,  0.2637, -0.6562,  0.5664,  0.3184,  2.2656, -0.0270,  0.2520,  1.6562,  0.7695, -1.4297,  0.8047,  0.8320,  1.1016, -0.9844, -0.7031, -1.7578, -0.1709, -0.2197,  1.0469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.8906, -0.5898, -1.7188, -2.6250, -3.6406, -5.1250, -0.8867, -2.8750, -2.0312, -5.1875, -3.2969, -0.1582, -2.6875, -3.3594],
        [ 0.0000, -1.6562, -2.0312, -0.1729, -1.6250, -2.2656, -1.5781, -1.9297, -1.4219, -1.5234, -1.4375, -1.3281, -2.0469, -1.2422, -1.5703],
        [ 0.0000, -1.2344, -0.4355, -0.4375, -1.2969, -2.8125, -2.9531, -0.5273, -1.9844, -1.2578, -2.3438, -1.2969, -0.2246, -2.1094, -2.4062],
        [ 0.0000,  1.3203,  0.4121,  0.3984,  0.3984,  0.2363, -0.1191,  1.1172,  0.5312,  0.0486, -0.6406, -0.8672,  1.1094,  0.1484,  0.4980],
        [ 0.0000, -2.2812, -0.5430, -2.1250, -0.9766, -2.5938, -3.6719, -0.2275, -1.4297, -1.2812, -4.3750, -2.8906,  0.7852, -1.6016, -2.4531],
        [ 0.0000, -4.5000, -0.8047, -3.1562, -1.9766, -5.0312, -7.2500, -1.2031, -3.4531, -2.1875, -7.0312, -4.8750,  0.0884, -4.0312, -5.4688],
        [ 0.0000, -6.0312, -2.3438, -3.7812, -4.6250, -5.2500, -5.4688, -1.9141, -3.9219, -3.0312, -6.0312, -3.0469, -1.5781, -3.6094, -4.5000],
        [ 0.0000, -1.1797,  0.1079, -1.4609,  0.2031, -1.1875, -2.4688,  0.5469, -0.6328, -0.2930, -2.7031, -2.4531,  0.9258, -0.9883, -2.0469],
        [ 0.0000, -2.8438, -0.4473, -2.0938, -2.1406, -3.1250, -3.4375,  0.1270, -2.1719, -1.4609, -4.0625, -1.7109,  0.6328, -2.0312, -2.7969],
        [ 0.0000, -0.3750,  0.5703, -0.4082,  0.8242, -1.4609, -2.9531,  0.1875, -0.6289, -0.3730, -2.5469, -2.9688,  0.8789, -1.1797, -2.3906],
        [ 0.0000, -4.1875, -1.8594, -2.4531, -2.6250, -4.4688, -4.5938, -2.0000, -2.7812, -2.8438, -4.5625, -3.2656, -1.3750, -3.0000, -4.1250],
        [ 0.0000, -3.0000, -1.9609, -1.7500, -2.0156, -1.6641, -1.1328, -1.7344, -1.0156, -1.0469, -0.9102, -0.4121, -1.8672, -0.5859, -0.9648],
        [ 0.0000, -2.0156,  0.1426, -1.8906, -0.1069, -2.0000, -3.6406,  0.2715, -1.0469, -0.6758, -3.6875, -2.9531,  0.9844, -1.2891, -2.9844],
        [ 0.0000, -3.7031, -1.1016, -2.2812, -0.9492, -3.5312, -5.8125, -2.5625, -1.8828, -2.0625, -4.7500, -4.1875, -1.2812, -1.8516, -4.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8748],
        [0.5268],
        [0.3272],
        [0.3513],
        [0.3998],
        [0.5699],
        [0.2326],
        [0.4138],
        [0.2528],
        [0.4052],
        [0.2930],
        [0.0432],
        [0.2801],
        [0.4148]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4062,     0.3906,     0.2031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7070,     0.0051,     0.2539,     0.0317,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0026,     0.0245,     0.0009,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5234,     0.0410,     0.0354,     0.0059,     0.0114,     0.3828,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.0036,     0.0066,     0.0004,     0.0027,     0.0298,     0.1611,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1152,     0.1089,     0.4102,     0.1260,     0.0564,     0.0255,     0.1494,     0.0074,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8008,     0.0013,     0.0026,     0.0002,     0.0004,     0.0208,     0.1465,     0.0025,     0.0242,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0664,     0.0295,     0.1924,     0.0393,     0.0125,     0.0452,     0.2061,     0.3008,     0.0728,     0.0356,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0003,     0.0019,     0.0001,     0.0000,     0.0031,     0.0062,     0.0004,     0.0046,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0908,     0.0223,     0.1250,     0.0292,     0.0090,     0.1250,     0.2393,     0.1338,     0.0337,     0.1060,     0.0038,     0.0820,     0.0000,     0.0000,     0.0000],
        [    0.0400,     0.0151,     0.1348,     0.0603,     0.0449,     0.0344,     0.3652,     0.0078,     0.0244,     0.0248,     0.2109,     0.0317,     0.0068,     0.0000,     0.0000],
        [    0.7070,     0.0010,     0.0021,     0.0002,     0.0004,     0.0184,     0.1924,     0.0021,     0.0240,     0.0046,     0.0000,     0.0014,     0.0157,     0.0317,     0.0000],
        [    0.1982,     0.0113,     0.0051,     0.0070,     0.0374,     0.1025,     0.1172,     0.0117,     0.1074,     0.0361,     0.0165,     0.0088,     0.0422,     0.2061,     0.0923]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0049, -0.0262,  0.0229,  ..., -0.0173,  0.0252,  0.0141],
        [ 0.0067, -0.0134, -0.0018,  ...,  0.0214, -0.0050, -0.0090],
        [ 0.0151, -0.0628, -0.0011,  ...,  0.0060, -0.0227,  0.0208],
        ...,
        [-0.0082,  0.0082, -0.0490,  ...,  0.0016, -0.0205, -0.0060],
        [ 0.0042,  0.0013, -0.0125,  ...,  0.0540,  0.0464,  0.0081],
        [ 0.0155, -0.0535, -0.0297,  ..., -0.0005,  0.0184,  0.0263]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5312, -1.2891, -1.1719,  1.3750, -2.5625,  0.4453,  2.7344, -2.0469,  1.9688,  2.6875,  0.1758, -0.4277,  1.3438,  0.1797,  1.2344,  0.4824, -0.8555,  1.6797,  1.6250, -0.1357,  1.1016, -1.4453, -1.8672, -2.1406, -0.3438,  1.8984,  0.0767,  0.3555, -1.1172,  2.0469,  1.1016,  3.2344,
         1.7188,  2.0938,  0.3926, -1.7109,  2.4688, -1.3203,  0.1904, -1.5703,  0.0659,  0.5859, -0.8555,  0.8828,  1.8750,  1.7266,  1.2188,  0.6992,  1.5078,  0.4648, -2.0625, -0.6680, -1.6797,  0.6758, -1.9844,  1.3516,  1.6250, -1.6172, -0.3242,  2.0469, -1.2188, -1.7109,  1.3750, -2.1719],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0186,      0.0032,     -0.0038,  ...,      0.0011,     -0.0102,      0.0066],
        [    -0.0008,     -0.0013,     -0.0000,  ...,      0.0384,      0.0395,     -0.0318],
        [     0.0020,     -0.0224,     -0.0102,  ...,     -0.0098,     -0.0394,      0.0513],
        ...,
        [    -0.0185,      0.0342,      0.0115,  ...,      0.0483,      0.0490,     -0.0288],
        [    -0.0141,      0.0054,     -0.0172,  ...,      0.0124,     -0.0078,      0.0417],
        [    -0.0093,      0.0008,      0.0134,  ...,      0.0301,      0.0542,     -0.0107]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5977,  1.8438,  0.6875,  0.3379,  0.4531, -1.2891,  1.1719, -0.3320,  1.0625,  0.7148, -2.5312, -0.1387, -0.1406,  0.3301, -0.2715,  0.1699, -0.2891, -0.8984, -1.7812, -0.2734,  0.1709,  1.1406,  1.1562, -0.6250, -1.1875,  0.8281, -0.1660,  1.1328, -0.0991, -2.2812, -1.0547, -0.3086,
        -0.1270, -0.0503,  0.6172, -0.1484,  2.2969,  1.0156, -0.5938,  0.2559, -0.9297,  0.7109, -0.1592, -0.9453,  0.1846,  1.2266,  0.2471, -0.2217, -1.3672,  0.9531,  0.8711,  0.2695,  1.3125, -0.8164,  0.2305, -0.1719, -0.2324, -0.9414, -0.3027,  1.0391,  0.4785, -2.0156, -1.3516,  0.6016],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -5.4688,     -6.0938,     -7.9062,     -5.6250,     -3.5781,     -2.9375,     -7.2500,     -3.2812,     -4.8438,     -8.5625,     -5.4375,     -6.7812,     -3.5312,     -4.9062],
        [     0.0000,     -0.0388,     -0.6914,     -0.3613,     -0.5352,      1.0469,      0.9844,     -2.4375,     -0.8242,      0.7539,      0.0076,     -0.7305,     -1.2734,     -0.5273,      1.7500],
        [     0.0000,     -4.9375,     -1.0234,     -3.1094,     -7.0938,     -5.8438,     -5.0625,     -6.1250,     -6.1250,     -2.9062,    -10.0625,     -3.9531,     -5.7500,     -6.4062,     -2.5312],
        [     0.0000,     -5.9375,     -3.6719,     -6.9375,     -7.3438,     -2.8594,     -1.5703,     -4.0000,     -2.6094,     -4.3750,    -11.8125,     -3.5625,     -2.0312,     -2.1562,     -3.2188],
        [     0.0000,     -2.5469,     -2.6875,     -4.5000,     -3.8281,     -0.3145,      2.1094,     -3.0781,     -0.3340,     -2.9531,     -6.3125,     -2.8125,     -1.4688,      0.1621,     -1.6953],
        [     0.0000,     -5.4062,     -4.7812,     -7.6250,     -5.6875,     -3.2812,     -1.5938,     -8.3750,     -3.2969,     -5.1250,     -8.3750,     -5.5625,     -7.4688,     -3.4219,     -5.1250],
        [     0.0000,     -0.0564,      1.2734,      0.0859,     -0.7148,     -1.5078,      0.2578,     -2.7344,     -0.3809,     -1.1641,     -0.8086,     -0.2354,     -3.2188,     -0.3730,     -0.2832],
        [     0.0000,     -6.4062,     -5.7188,     -8.4375,     -7.7188,     -3.6562,     -1.6953,     -5.7812,     -3.5000,     -4.9062,    -11.6250,     -5.8438,     -3.9219,     -3.3594,     -5.1562],
        [     0.0000,     -0.8125,      1.0625,     -0.5273,     -1.6719,     -0.3887,      1.1250,      1.5078,      0.0908,     -0.6250,     -3.8281,     -0.2168,      2.2812,      0.5586,      0.1807],
        [     0.0000,     -8.1875,     -6.2500,     -9.8125,    -10.1875,     -5.7500,     -5.0625,     -7.7812,     -5.3750,     -6.2812,    -15.9375,     -6.5938,     -5.5312,     -5.2500,     -6.0000],
        [     0.0000,     -1.4062,      0.3242,     -1.1328,     -2.3125,      0.3223,      0.9688,      0.3867,     -0.9922,      0.1553,     -3.1562,     -0.1016,      1.1797,     -0.4219,      0.8906],
        [     0.0000,     -0.9805,      1.2109,      0.4062,      0.1143,     -0.1523,      2.2031,     -1.6484,     -0.4961,     -0.4844,      1.6562,     -0.2334,     -1.7734,     -0.1328,      0.6523],
        [     0.0000,     -6.5312,     -5.8125,     -8.2500,     -7.5000,     -3.6406,     -1.2969,     -5.8125,     -3.3750,     -5.0312,    -11.0000,     -6.1875,     -3.7969,     -3.1094,     -5.0000],
        [     0.0000,     -2.8594,     -3.6562,     -3.3438,     -1.6719,     -0.6562,     -0.5273,     -2.8281,     -0.6133,     -1.7031,     -2.4844,     -3.1094,     -1.5469,      0.0417,     -0.7617]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9993],
        [0.8153],
        [0.9606],
        [0.9655],
        [0.9154],
        [0.9082],
        [0.7463],
        [0.9723],
        [0.6005],
        [0.9857],
        [0.7278],
        [0.7475],
        [0.9554],
        [0.7651]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1064,     0.3906,     0.0223,     0.0461,     0.0466,     0.0588,     0.0231,     0.0459,     0.1504,     0.0498,     0.0603,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0002,     0.0000,     0.0000,     0.0001,     0.0003]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0039,  0.0421,  0.0344,  ..., -0.0362,  0.0120, -0.0349],
        [-0.0125, -0.0422, -0.0126,  ...,  0.0278,  0.0093, -0.0493],
        [ 0.0246,  0.0482,  0.0052,  ..., -0.0207,  0.0122, -0.0002],
        ...,
        [-0.0558, -0.0439, -0.0444,  ...,  0.0243,  0.0016, -0.0153],
        [ 0.0198,  0.0336,  0.0140,  ..., -0.0366,  0.0277, -0.0044],
        [-0.0200, -0.0266, -0.0730,  ...,  0.0538,  0.0020, -0.0021]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1797,  2.2969,  0.7422, -1.0234,  1.7266,  2.6875,  2.2344, -1.2500, -0.3359,  1.5625,  1.6016,  1.1406, -3.0625, -1.2422, -0.0869, -1.7031,  0.6250,  2.5000,  2.7344, -2.5156, -0.9727,  1.7656,  2.7188,  2.5469, -2.0000,  0.1982, -0.7812, -1.3828, -0.1309, -0.8203,  0.0674,  2.3281,
        -0.4531, -2.2969, -1.5156, -0.4531, -1.8281,  0.8477, -0.6758,  1.7109,  1.9531,  1.9766,  0.1260, -1.9844,  2.7188,  1.4062, -1.9688, -1.1328, -1.8516,  0.4023,  1.4844, -0.5625,  1.8828, -1.4141,  0.6680, -0.7109, -1.7266, -0.5273, -1.2422, -1.3828, -1.3359, -0.9023,  0.1797, -2.6719],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0385, -0.0081, -0.0272,  ..., -0.0129, -0.0302,  0.0095],
        [-0.0049,  0.0128,  0.0101,  ..., -0.0406,  0.0261, -0.0080],
        [-0.0348, -0.0431, -0.0073,  ..., -0.0087, -0.0284, -0.0238],
        ...,
        [ 0.0067,  0.0280,  0.0143,  ..., -0.0358,  0.0171, -0.0360],
        [-0.0250, -0.0020, -0.0226,  ...,  0.0086, -0.0233,  0.0307],
        [ 0.0223,  0.0319,  0.0513,  ...,  0.0104,  0.0621, -0.0312]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.0312, -0.1787,  0.3164, -1.0703, -1.9922, -0.7383, -1.9219,  1.0391,  0.1943, -0.3770, -0.2100,  1.1797,  0.9375,  0.3379, -0.8945, -0.4199, -1.0156, -1.9922,  0.2344,  0.6758,  0.0864, -0.2500, -1.2188, -1.1562,  1.2578,  0.2441,  1.4531,  1.6953,  1.8203,  0.8789, -1.8984, -0.4844,
         0.4199,  1.3359,  1.3984, -1.0781,  0.3848, -1.8672, -1.8906, -1.8047, -0.5898, -0.5977, -0.1689, -0.2891, -0.7266, -0.5430,  1.9297,  0.8008,  0.8203, -1.6328, -0.9883,  0.5391, -0.4004, -0.7734,  0.1670, -1.0391,  0.6523,  0.1050,  2.1719, -0.2266,  1.1172,  2.0938, -1.2422,  2.0156],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.6875,  -9.2500,  -9.2500, -10.0000,  -7.4688, -11.0625, -11.1250,  -7.8125,  -9.3750,  -6.6875,  -8.8750, -10.6875,  -8.2500,  -7.0938],
        [  0.0000, -13.0000, -16.1250, -15.3125, -16.0000, -12.3125, -16.5000, -18.3750, -13.0000, -14.5625,  -9.9375, -14.3125, -14.7500, -12.8750, -10.7500],
        [  0.0000, -13.7500, -17.3750, -17.8750, -19.3750, -13.1250, -18.3750, -18.6250, -14.5000, -16.0000, -12.1875, -16.1250, -15.9375, -14.6250, -12.1875],
        [  0.0000, -14.1250, -17.7500, -18.1250, -20.8750, -15.1250, -19.8750, -18.3750, -16.2500, -16.5000, -14.8750, -16.5000, -18.1250, -17.1250, -15.0000],
        [  0.0000, -13.5625, -15.3125, -15.4375, -18.2500, -11.5625, -16.3750, -16.6250, -14.1875, -14.9375, -12.8750, -13.6250, -15.1875, -14.8125, -13.7500],
        [  0.0000, -17.8750, -20.2500, -21.3750, -24.1250, -15.8750, -22.0000, -22.5000, -19.1250, -19.5000, -17.1250, -19.6250, -20.6250, -19.7500, -17.7500],
        [  0.0000, -14.3125, -17.1250, -17.5000, -17.7500, -14.2500, -19.2500, -19.5000, -14.9375, -16.3750, -12.4375, -16.2500, -16.1250, -15.3125, -13.4375],
        [  0.0000, -10.6875, -13.8125, -14.1250, -15.8125, -10.8750, -14.8125, -14.3125, -11.7500, -12.9375, -10.5000, -12.1250, -12.3750, -12.1875, -10.1250],
        [  0.0000, -12.3125, -13.7500, -14.3125, -15.3750, -11.1250, -15.6250, -16.0000, -12.3125, -13.4375, -10.0000, -13.8125, -13.8125, -12.5000, -10.5625],
        [  0.0000,   1.2969,  -1.5625,  -0.8320,  -0.8281,  -0.5938,  -1.5312,  -0.8398,   0.3418,  -0.7617,  -0.5703,   0.3555,  -1.4375,   0.0518,   0.5625],
        [  0.0000, -14.0625, -15.1250, -14.8750, -17.3750, -11.6875, -16.2500, -16.6250, -13.6250, -14.3125, -11.8750, -14.1250, -13.8125, -13.8125, -12.0000],
        [  0.0000, -12.5000, -12.1875, -12.5625, -13.8125, -10.4375, -13.7500, -14.0625, -12.0000, -12.3125, -10.7500, -11.9375, -12.0000, -12.3125, -11.1875],
        [  0.0000, -11.4375, -13.7500, -14.0000, -16.2500, -10.8125, -14.6250, -14.0000, -12.0625, -12.9375, -11.0625, -12.1875, -12.1250, -12.5000, -10.4375],
        [  0.0000,  -9.3125, -12.5625, -12.9375, -12.6250,  -9.6250, -13.3750, -14.0000,  -9.6875, -11.2500,  -8.3125, -11.9375, -12.9375,  -9.8750,  -8.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9945],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9980],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9993],
        [0.7084],
        [1.0000],
        [0.9948],
        [0.9993],
        [0.9984]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0317, 0.9688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.7969, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.6094, 0.2051, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0400, 0.8398, 0.0610, 0.0171, 0.0437, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0337, 0.7695, 0.0728, 0.0233, 0.0723, 0.0278, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0219, 0.9023, 0.0262, 0.0016, 0.0068, 0.0031, 0.0381, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0228, 0.6211, 0.0110, 0.0023, 0.0051, 0.0065, 0.1348, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0115, 0.3398, 0.0103, 0.0033, 0.0059, 0.0089, 0.1270, 0.4160, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0176, 0.2324, 0.0132, 0.0064, 0.0058, 0.0157, 0.1406, 0.3457, 0.1260, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0067, 0.1250, 0.0070, 0.0016, 0.0021, 0.0076, 0.0393, 0.5938, 0.0894, 0.0840, 0.0425, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0309, 0.2598, 0.0108, 0.0050, 0.0063, 0.0099, 0.0610, 0.2393, 0.1157, 0.1553, 0.0562, 0.0503, 0.0000, 0.0000, 0.0000],
        [0.0228, 0.3223, 0.0067, 0.0018, 0.0054, 0.0089, 0.0640, 0.2041, 0.0564, 0.0718, 0.0566, 0.0420, 0.1377, 0.0000, 0.0000],
        [0.0086, 0.1543, 0.0042, 0.0013, 0.0042, 0.0080, 0.0569, 0.2471, 0.0669, 0.0566, 0.0334, 0.0942, 0.1807, 0.0835, 0.0000],
        [0.0124, 0.0942, 0.0055, 0.0012, 0.0029, 0.0068, 0.0251, 0.1099, 0.0698, 0.0223, 0.0201, 0.0493, 0.1768, 0.1216, 0.2812]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0216, -0.0073,  0.0072,  ...,  0.0364, -0.0252, -0.0223],
        [-0.0411,  0.0137,  0.0038,  ...,  0.0166, -0.0121, -0.0013],
        [-0.0019,  0.0422,  0.0282,  ..., -0.0019, -0.0001,  0.0365],
        ...,
        [ 0.0033,  0.0386, -0.0101,  ..., -0.0042, -0.0161, -0.0009],
        [ 0.0315, -0.0076,  0.0159,  ...,  0.0130, -0.0064, -0.0129],
        [ 0.0351,  0.0295,  0.0099,  ..., -0.0018, -0.0003,  0.0137]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2344,  1.0938, -0.5312,  1.2812, -0.4297,  0.8164, -0.4824, -1.1641,  0.2520,  0.2949, -0.8945, -2.3438, -1.0000,  0.8633,  1.0859,  1.1328, -0.8477,  0.4082,  0.1855, -0.2227, -0.9414, -0.5547,  0.8242,  2.7031,  0.2246,  1.9141,  0.2031,  1.0312,  2.7031, -0.0330, -0.4902, -0.2910,
        -1.4453,  0.8281, -0.3203, -0.1216,  1.0391, -1.2812,  1.3281,  0.1807, -0.5352, -0.8984, -0.5820, -1.4297,  0.6172,  0.3457,  0.1084, -0.1875,  0.6914,  0.2969, -1.3594,  1.9062,  0.3242, -1.3125,  0.9766,  0.1875,  1.2266,  0.1147,  1.1797,  0.2480, -0.9453,  0.0442, -1.4688, -1.3359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0032,  0.0151,  0.0154,  ..., -0.0062,  0.0194,  0.0210],
        [ 0.0319,  0.0012,  0.0008,  ..., -0.0053, -0.0397,  0.0188],
        [ 0.0037,  0.0018, -0.0079,  ..., -0.0038, -0.0311,  0.0347],
        ...,
        [-0.0070,  0.0012, -0.0719,  ..., -0.0073,  0.0111,  0.0118],
        [ 0.0009,  0.0151, -0.0046,  ..., -0.0298, -0.0148, -0.0079],
        [-0.0280,  0.0169, -0.0618,  ..., -0.0073, -0.0198,  0.0537]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.6250,  1.6172, -1.5547,  0.2139,  0.4297,  1.4531, -0.2178,  0.2852,  1.3438, -0.7930, -0.4062, -2.0781,  0.1250, -0.4746, -1.2109,  0.5859, -2.0156, -0.7148, -1.0859,  0.3965, -0.8477, -0.8516, -2.3594,  1.2500,  0.0211, -0.9961, -0.8203,  1.0547, -0.3145, -0.1797,  1.3594,  1.8047,
        -2.5781, -0.4609, -1.5938,  0.0791, -2.6250, -1.1406,  3.9219, -1.5625,  0.5273,  0.6172,  1.0156, -1.8281, -0.5117, -0.4199,  0.1235, -0.7148, -1.2031, -3.0938,  1.4297,  1.7344, -1.3438, -1.2734, -0.8125, -0.0325,  0.4160,  1.0156,  1.3516, -0.0654, -0.8750,  0.2969, -0.5586, -0.6406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.4219,  0.7773, -0.6445, -0.1670,  0.3145,  1.8047,  2.7500,  2.0469,  1.9219,  1.4453,  2.0938,  2.9688,  2.6562,  4.0625],
        [ 0.0000,  2.4062,  0.6055, -0.0493,  0.1436,  0.1021,  1.6328,  2.0625,  2.1250,  2.2969,  2.2500,  2.0312,  2.8594,  3.1250,  3.6719],
        [ 0.0000,  1.8516,  0.7578, -0.0903,  0.2070, -0.0566,  1.2656,  1.2891,  1.5625,  1.8984,  1.3594,  1.7109,  2.3438,  2.4219,  3.3281],
        [ 0.0000,  3.0312,  0.4180, -0.8555,  0.0864,  0.1006,  2.0781,  2.7344,  1.9844,  2.1875,  1.9375,  2.3750,  3.1406,  2.7500,  3.2969],
        [ 0.0000,  3.1250,  0.7656, -0.3672,  0.7578, -0.1934,  1.3359,  2.8438,  1.4297,  2.0625,  1.1172,  2.3594,  3.0000,  1.6172,  3.7812],
        [ 0.0000,  3.7188,  0.1826, -2.5938, -1.1641, -1.9375,  0.5586,  2.8438,  0.7422,  1.7734, -0.1816,  0.8164,  2.4219,  0.7695,  5.0625],
        [ 0.0000,  3.3125, -0.7227, -2.2812, -1.5000, -1.2578,  1.7812,  2.1562,  0.8828,  1.6328,  0.1426,  0.8281,  1.6250,  1.2422,  3.7188],
        [ 0.0000,  3.3906, -0.1099, -1.2578, -0.6641, -0.2500,  2.4062,  3.5938,  1.9219,  2.7031,  1.0938,  2.6094,  3.1250,  2.2344,  3.8281],
        [ 0.0000,  2.5781, -0.2793, -1.0156, -1.1016, -0.1055,  2.0781,  2.9844,  1.9688,  1.7188,  1.3125,  1.4766,  2.7344,  2.4062,  4.0625],
        [ 0.0000,  2.9375,  0.0361, -1.4219, -1.1641,  0.1206,  1.7656,  4.5000,  2.5938,  2.5312,  1.8438,  2.5469,  4.1562,  2.8125,  3.6406],
        [ 0.0000,  2.1250, -1.0547, -1.8125, -1.6016, -1.1328,  0.6797,  2.0469,  1.3203,  1.6172,  0.5977,  0.4883,  2.4219,  1.6953,  3.0156],
        [ 0.0000,  2.6406, -1.2344, -2.5469, -1.4375, -0.9531,  1.0312,  2.1875,  0.8984,  1.1406,  0.9062,  0.6055,  1.7891,  1.2891,  3.3281],
        [ 0.0000,  2.8906, -0.7148, -1.8750, -0.7266, -0.0688,  1.8906,  3.3594,  2.0469,  1.8828,  1.3594,  2.3906,  3.0469,  2.2812,  3.0625],
        [ 0.0000,  2.0312, -0.8164, -2.3594, -1.4531, -0.5977,  0.7070,  2.1875,  1.7266,  0.5898,  0.4844,  1.3828,  2.6562,  2.2812,  3.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2011],
        [0.0248],
        [0.0234],
        [0.0252],
        [0.0339],
        [0.0519],
        [0.0300],
        [0.0203],
        [0.0103],
        [0.0121],
        [0.0178],
        [0.0206],
        [0.0097],
        [0.0112]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3828, 0.6172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0420, 0.6250, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0126, 0.4219, 0.3672, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0571, 0.7930, 0.1089, 0.0121, 0.0281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0435, 0.5547, 0.0972, 0.0096, 0.0145, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0157, 0.5391, 0.1094, 0.0154, 0.0398, 0.1348, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0123, 0.3809, 0.0981, 0.0204, 0.0515, 0.1582, 0.2207, 0.0571, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0601, 0.3340, 0.0447, 0.0033, 0.0090, 0.4980, 0.0276, 0.0094, 0.0122, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0160, 0.5508, 0.0942, 0.0044, 0.0123, 0.2119, 0.0693, 0.0066, 0.0179, 0.0155, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.3672, 0.0247, 0.0014, 0.0030, 0.3398, 0.0240, 0.0055, 0.0040, 0.0183, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0119, 0.3594, 0.1143, 0.0293, 0.0537, 0.0835, 0.1406, 0.0376, 0.0342, 0.0186, 0.0635, 0.0532, 0.0000, 0.0000, 0.0000],
        [0.0413, 0.3359, 0.0596, 0.0127, 0.0417, 0.1260, 0.1426, 0.0148, 0.0439, 0.0391, 0.0938, 0.0211, 0.0280, 0.0000, 0.0000],
        [0.0771, 0.3672, 0.0302, 0.0024, 0.0071, 0.3066, 0.0300, 0.0048, 0.0055, 0.0125, 0.0801, 0.0234, 0.0310, 0.0220, 0.0000],
        [0.0154, 0.5859, 0.0527, 0.0051, 0.0135, 0.0649, 0.0918, 0.0179, 0.0166, 0.0194, 0.0211, 0.0337, 0.0198, 0.0265, 0.0154]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0066,  0.0020,  0.0124,  ..., -0.0284,  0.0171,  0.0071],
        [ 0.0143, -0.0023,  0.0123,  ...,  0.0001, -0.0166,  0.0045],
        [ 0.0235, -0.0197, -0.0231,  ..., -0.0026,  0.0282, -0.0276],
        ...,
        [ 0.0141,  0.0109,  0.0022,  ...,  0.0026, -0.0309, -0.0334],
        [-0.0153, -0.0194,  0.0181,  ..., -0.0211,  0.0120,  0.0017],
        [-0.0067, -0.0007,  0.0235,  ..., -0.0140,  0.0014,  0.0032]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3281, -0.5781,  0.4746, -0.9609, -1.1562, -0.2695, -0.6758, -0.9375,  1.1484,  0.5742,  2.0625,  0.4492, -0.3477,  0.8867, -0.4961,  0.1729,  1.0156, -1.0234, -0.0330, -0.9453,  0.6719,  0.4141, -0.7227,  0.2734, -2.0938,  0.0247, -0.5430,  0.5352, -0.3164, -0.2070,  0.4004, -0.1118,
         0.5195, -0.7852, -1.1641, -0.3223, -0.8633,  0.4902, -0.0388, -1.0859,  0.4336, -0.8945,  0.2471,  1.8750, -0.8281, -0.1328, -0.2266,  0.4805,  0.5820, -0.3672,  1.1328, -1.3203, -2.2031,  0.2539, -0.8281,  0.1455, -0.9375,  0.0233, -1.0078,  1.2891,  0.6328, -0.0845,  0.8516,  0.6719],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0037,  0.0300,  0.0131,  ...,  0.0522, -0.0066,  0.0346],
        [-0.0023, -0.0014,  0.0118,  ...,  0.0103, -0.0021,  0.0116],
        [ 0.0158, -0.0018,  0.0085,  ...,  0.0032,  0.0257, -0.0293],
        ...,
        [ 0.0069, -0.0105, -0.0092,  ..., -0.0022, -0.0187,  0.0118],
        [-0.0030, -0.0185,  0.0210,  ...,  0.0082, -0.0021,  0.0424],
        [-0.0103, -0.0165, -0.0250,  ...,  0.0402,  0.0112,  0.0038]], device='cuda:0', requires_grad=True)
Q: tensor([-0.9023,  1.1719, -0.1992, -1.0703, -1.0625,  1.0312,  0.2852,  0.2559, -1.1094, -0.7578,  1.3125,  1.8359,  0.9297,  0.9492,  0.9766, -0.0898,  0.3906,  1.4141, -0.3633, -0.4121,  0.8516, -0.6445, -0.4453,  0.2188,  0.2051,  0.3770, -0.7500, -0.7070,  0.3965,  0.9375, -0.8398, -0.1279,
        -1.1797, -0.0623, -0.7734,  0.9648,  0.9219, -0.5273, -0.3223,  1.0469,  1.0781, -0.4883,  1.2266,  0.1318,  0.0840,  2.3594, -1.8047,  0.2500,  0.1108,  0.9492, -0.1406, -0.7461,  0.3867,  0.3828,  0.0981,  0.3379,  1.8984, -1.2188, -1.8359,  0.8906, -0.7695, -0.2676, -0.4902,  0.1064],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.4746,     -1.3828,     -3.7656,     -3.6406,     -0.0928,     -2.4688,     -4.6875,     -4.9062,     -3.1094,     -2.4062,     -2.5625,     -2.6406,     -3.5469,     -2.9531],
        [     0.0000,      2.7031,      2.0781,      0.9141,      0.8516,      1.8438,      1.4219,      0.1055,      0.0659,     -0.0908,      0.1162,     -0.4180,      0.0376,      0.0928,     -0.7617],
        [     0.0000,      3.5156,      3.3750,      2.7656,      2.8906,      2.5781,      3.3594,      2.2188,      1.7422,      1.1562,      1.5938,      0.7969,      1.4062,      1.3125,      0.8594],
        [     0.0000,      2.6250,      0.6445,     -1.5547,     -0.7109,      2.4844,      0.8242,     -1.6250,     -2.4531,     -1.6250,     -0.2695,     -1.6641,     -0.7500,     -1.8984,     -1.4531],
        [     0.0000,      2.5469,      0.8047,     -1.5078,     -1.1016,      1.8672,      0.6953,     -1.7656,     -1.4219,     -1.2422,      0.3398,     -1.2109,     -1.1953,     -0.8594,     -0.8320],
        [     0.0000,      3.5312,      1.9297,     -0.0234,      0.9258,      2.1406,      2.2188,      0.5469,      0.0045,      0.3594,      0.4219,      0.4316,     -0.2520,     -0.2305,      0.3809],
        [     0.0000,      3.4375,      2.0781,      0.5039,      1.4375,      2.5625,      2.8906,      1.5391,      1.9688,      0.5352,      1.0859,     -0.0205,     -0.3887,      1.2500,      0.6016],
        [     0.0000,      1.7188,     -0.2969,     -2.9062,     -1.8906,      2.1094,     -0.7773,     -1.8594,     -1.5938,     -1.4531,      0.6250,     -0.6562,     -0.8711,     -1.0625,     -1.5234],
        [     0.0000,      3.5469,      1.7734,     -1.2969,     -0.2578,      2.5781,      1.4688,     -0.8828,      0.1113,     -0.0308,      1.9297,      0.4941,     -0.2852,      0.8438,      0.1328],
        [     0.0000,      1.5547,     -1.1406,     -4.0625,     -3.2656,      1.4766,     -1.1641,     -2.6406,     -2.9531,     -1.4453,      0.5469,      0.1631,     -0.4551,     -1.8047,     -2.0781],
        [     0.0000,      3.4062,      2.2656,      0.8984,      1.5078,      1.9531,      2.4688,      1.1484,      1.0547,      0.4434,      1.6797,      1.5000,      0.9336,      1.1328,      0.3262],
        [     0.0000,      2.0938,      0.3672,     -1.1797,      0.0103,      1.1172,      1.2422,     -1.0234,      0.0635,     -0.0569,      0.8203,     -0.6680,     -0.3906,      1.3672,      0.5273],
        [     0.0000,      1.5625,     -0.9414,     -3.4844,     -2.3906,      1.3750,     -0.9453,     -2.7812,     -2.6406,     -1.8281,      0.0376,     -1.1953,     -0.9102,     -1.2578,     -1.6328],
        [     0.0000,      3.6406,      1.2266,     -1.1094,     -0.1338,      1.4375,      1.7812,      0.1494,      0.0742,      0.2256,      0.3145,      0.7773,      0.2490,      0.5391,      0.0005]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0684],
        [0.0050],
        [0.0066],
        [0.0529],
        [0.0217],
        [0.0107],
        [0.0050],
        [0.0106],
        [0.0147],
        [0.0413],
        [0.0086],
        [0.0418],
        [0.0123],
        [0.0271]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0791 a:0.1289,:0.2188 and:0.1230ty:0.0947,:0.4609 a:0.0986vern:0.0767)
vern
------
		( a:0.1289,:0.2188 and:0.1230ty:0.0947,:0.4609 a:0.0986vern:0.0767acular:0.0908)
acular, and they are used to make a difference.
The first step
@ 3550 train 4.5000 , allloss: 4.5142, dt: 1664.29ms, fracRes: 0.4181, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4510, norm(y): 0.9923, norm:1.3543, tok/sec: 78755.53, flops:82.66, batch-reuse:1
@ 3551 train 4.6170 , allloss: 4.6316, dt: 1280.65ms, fracRes: 0.4201, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4504, norm(y): 0.9924, norm:1.4008, tok/sec: 102347.67, flops:107.43, batch-reuse:1
@ 3552 train 4.5094 , allloss: 4.5241, dt: 1290.79ms, fracRes: 0.4193, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4502, norm(y): 0.9922, norm:1.4650, tok/sec: 101543.67, flops:106.58, batch-reuse:1
@ 3553 train 4.4823 , allloss: 4.4983, dt: 1268.53ms, fracRes: 0.4211, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4542, norm(y): 0.9922, norm:1.6493, tok/sec: 103325.67, flops:108.45, batch-reuse:1
@ 3554 train 4.4518 , allloss: 4.4663, dt: 1256.75ms, fracRes: 0.4191, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4480, norm(y): 0.9922, norm:1.2919, tok/sec: 104294.44, flops:109.47, batch-reuse:1
@ 3555 train 4.5053 , allloss: 4.5205, dt: 1273.78ms, fracRes: 0.4199, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4485, norm(y): 0.9923, norm:1.4562, tok/sec: 102899.69, flops:108.01, batch-reuse:1
@ 3556 train 4.4723 , allloss: 4.4865, dt: 1274.39ms, fracRes: 0.4193, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4516, norm(y): 0.9923, norm:1.4456, tok/sec: 102850.55, flops:107.96, batch-reuse:1
@ 3557 train 4.6281 , allloss: 4.6421, dt: 1270.63ms, fracRes: 0.4237, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4596, norm(y): 0.9923, norm:1.7345, tok/sec: 103155.21, flops:108.28, batch-reuse:1
@ 3558 train 4.3929 , allloss: 4.4067, dt: 1261.94ms, fracRes: 0.4194, norm(attn): 0.1973, norm(output): 0.2520, norm(x): 0.4485, norm(y): 0.9923, norm:1.3405, tok/sec: 103865.16, flops:109.02, batch-reuse:1
@ 3559 train 4.4941 , allloss: 4.5086, dt: 1255.60ms, fracRes: 0.4190, norm(attn): 0.1982, norm(output): 0.2559, norm(x): 0.4522, norm(y): 0.9922, norm:1.5824, tok/sec: 104390.21, flops:109.57, batch-reuse:1
@ 3560 train 4.4498 , allloss: 4.4646, dt: 1282.30ms, fracRes: 0.4170, norm(attn): 0.2012, norm(output): 0.2539, norm(x): 0.4482, norm(y): 0.9922, norm:1.4745, tok/sec: 102216.56, flops:107.29, batch-reuse:1
@ 3561 train 4.5028 , allloss: 4.5171, dt: 1255.42ms, fracRes: 0.4164, norm(attn): 0.2012, norm(output): 0.2539, norm(x): 0.4489, norm(y): 0.9921, norm:1.4490, tok/sec: 104405.08, flops:109.59, batch-reuse:1
@ 3562 train 4.4751 , allloss: 4.4892, dt: 1253.69ms, fracRes: 0.4184, norm(attn): 0.1973, norm(output): 0.2539, norm(x): 0.4502, norm(y): 0.9922, norm:1.3961, tok/sec: 104549.23, flops:109.74, batch-reuse:1
@ 3563 train 4.4955 , allloss: 4.5091, dt: 1258.01ms, fracRes: 0.4183, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4513, norm(y): 0.9922, norm:1.3622, tok/sec: 104189.96, flops:109.36, batch-reuse:1
@ 3564 train 4.4668 , allloss: 4.4805, dt: 1279.73ms, fracRes: 0.4176, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4492, norm(y): 0.9923, norm:1.2908, tok/sec: 102421.48, flops:107.50, batch-reuse:1
@ 3565 train 4.4806 , allloss: 4.4946, dt: 1278.49ms, fracRes: 0.4193, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4519, norm(y): 0.9923, norm:1.4881, tok/sec: 102521.32, flops:107.61, batch-reuse:1
@ 3566 train 4.4540 , allloss: 4.4685, dt: 1264.61ms, fracRes: 0.4205, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4572, norm(y): 0.9922, norm:1.4108, tok/sec: 103646.00, flops:108.79, batch-reuse:1
@ 3567 train 4.5412 , allloss: 4.5552, dt: 1284.77ms, fracRes: 0.4195, norm(attn): 0.2002, norm(output): 0.2520, norm(x): 0.4528, norm(y): 0.9921, norm:1.3027, tok/sec: 102020.02, flops:107.08, batch-reuse:1
@ 3568 train 4.4179 , allloss: 4.4321, dt: 1262.73ms, fracRes: 0.4205, norm(attn): 0.1982, norm(output): 0.2520, norm(x): 0.4517, norm(y): 0.9922, norm:1.4503, tok/sec: 103800.70, flops:108.95, batch-reuse:1
@ 3569 train 4.5324 , allloss: 4.5463, dt: 1285.33ms, fracRes: 0.4193, norm(attn): 0.1973, norm(output): 0.2539, norm(x): 0.4540, norm(y): 0.9922, norm:1.3282, tok/sec: 101975.51, flops:107.04, batch-reuse:1
@ 3570 train 4.5104 , allloss: 4.5249, dt: 1312.34ms, fracRes: 0.4185, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4540, norm(y): 0.9923, norm:1.4182, tok/sec: 99876.34, flops:104.83, batch-reuse:1
@ 3571 train 4.4938 , allloss: 4.5082, dt: 1309.31ms, fracRes: 0.4146, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4426, norm(y): 0.9922, norm:1.6699, tok/sec: 100107.68, flops:105.08, batch-reuse:1
@ 3572 train 4.4652 , allloss: 4.4799, dt: 1313.37ms, fracRes: 0.4144, norm(attn): 0.2021, norm(output): 0.2539, norm(x): 0.4474, norm(y): 0.9921, norm:1.5865, tok/sec: 99798.30, flops:104.75, batch-reuse:1
@ 3573 train 4.5083 , allloss: 4.5228, dt: 1293.48ms, fracRes: 0.4161, norm(attn): 0.2021, norm(output): 0.2539, norm(x): 0.4508, norm(y): 0.9921, norm:1.2985, tok/sec: 101332.64, flops:106.36, batch-reuse:1
@ 3574 train 4.4059 , allloss: 4.4197, dt: 1298.16ms, fracRes: 0.4175, norm(attn): 0.2002, norm(output): 0.2520, norm(x): 0.4491, norm(y): 0.9922, norm:1.6852, tok/sec: 100967.33, flops:105.98, batch-reuse:1
@ 3575 train 4.3962 , allloss: 4.4094, dt: 1299.83ms, fracRes: 0.4170, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4515, norm(y): 0.9922, norm:1.3140, tok/sec: 100837.75, flops:105.84, batch-reuse:1
@ 3576 train 4.3739 , allloss: 4.3876, dt: 1304.11ms, fracRes: 0.4171, norm(attn): 0.2002, norm(output): 0.2578, norm(x): 0.4506, norm(y): 0.9921, norm:1.4419, tok/sec: 100506.89, flops:105.50, batch-reuse:1
@ 3577 train 4.5484 , allloss: 4.5628, dt: 1292.98ms, fracRes: 0.4177, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4542, norm(y): 0.9921, norm:1.5532, tok/sec: 101372.10, flops:106.40, batch-reuse:1
@ 3578 train 4.4805 , allloss: 4.4950, dt: 1273.74ms, fracRes: 0.4195, norm(attn): 0.1992, norm(output): 0.2520, norm(x): 0.4519, norm(y): 0.9921, norm:1.3798, tok/sec: 102903.51, flops:108.01, batch-reuse:1
@ 3579 train 4.4395 , allloss: 4.4538, dt: 1256.01ms, fracRes: 0.4199, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4559, norm(y): 0.9922, norm:1.3409, tok/sec: 104356.09, flops:109.54, batch-reuse:1
@ 3580 train 4.4824 , allloss: 4.5039, dt: 1248.20ms, fracRes: 0.4202, norm(attn): 0.1982, norm(output): 0.2559, norm(x): 0.4554, norm(y): 0.9923, norm:1.5145, tok/sec: 105008.96, flops:110.22, batch-reuse:1
@ 3581 train 4.4299 , allloss: 4.4436, dt: 1266.08ms, fracRes: 0.4181, norm(attn): 0.1973, norm(output): 0.2559, norm(x): 0.4534, norm(y): 0.9922, norm:1.3038, tok/sec: 103525.81, flops:108.66, batch-reuse:1
@ 3582 train 4.4605 , allloss: 4.4747, dt: 1306.77ms, fracRes: 0.4163, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4527, norm(y): 0.9921, norm:1.4899, tok/sec: 100302.16, flops:105.28, batch-reuse:1
@ 3583 train 4.5732 , allloss: 4.5872, dt: 1311.57ms, fracRes: 0.4162, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4528, norm(y): 0.9921, norm:1.4819, tok/sec: 99934.94, flops:104.89, batch-reuse:1
@ 3584 train 4.4611 , allloss: 4.4749, dt: 1264.97ms, fracRes: 0.4141, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4503, norm(y): 0.9921, norm:1.4021, tok/sec: 103616.49, flops:108.76, batch-reuse:1
@ 3585 train 4.4601 , allloss: 4.4746, dt: 1248.88ms, fracRes: 0.4156, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4519, norm(y): 0.9921, norm:1.3746, tok/sec: 104951.40, flops:110.16, batch-reuse:1
@ 3586 train 4.3726 , allloss: 4.3860, dt: 1268.58ms, fracRes: 0.4154, norm(attn): 0.2012, norm(output): 0.2539, norm(x): 0.4492, norm(y): 0.9921, norm:1.2292, tok/sec: 103321.67, flops:108.45, batch-reuse:1
@ 3587 train 4.4806 , allloss: 4.5013, dt: 1271.84ms, fracRes: 0.4179, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4526, norm(y): 0.9921, norm:1.3625, tok/sec: 103057.23, flops:108.17, batch-reuse:1
@ 3588 train 4.4335 , allloss: 4.4478, dt: 1269.69ms, fracRes: 0.4153, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4504, norm(y): 0.9921, norm:1.3065, tok/sec: 103231.38, flops:108.35, batch-reuse:1
@ 3589 train 4.5343 , allloss: 4.5479, dt: 1292.74ms, fracRes: 0.4167, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4516, norm(y): 0.9922, norm:1.3918, tok/sec: 101391.10, flops:106.42, batch-reuse:1
@ 3590 train 4.3431 , allloss: 4.3574, dt: 1285.93ms, fracRes: 0.4170, norm(attn): 0.2031, norm(output): 0.2559, norm(x): 0.4511, norm(y): 0.9922, norm:1.2686, tok/sec: 101927.47, flops:106.99, batch-reuse:1
@ 3591 train 4.4450 , allloss: 4.4594, dt: 1281.04ms, fracRes: 0.4176, norm(attn): 0.2021, norm(output): 0.2539, norm(x): 0.4536, norm(y): 0.9921, norm:1.4570, tok/sec: 102317.06, flops:107.40, batch-reuse:1
@ 3592 train 4.3419 , allloss: 4.3557, dt: 1266.17ms, fracRes: 0.4163, norm(attn): 0.2021, norm(output): 0.2539, norm(x): 0.4461, norm(y): 0.9922, norm:1.2140, tok/sec: 103518.72, flops:108.66, batch-reuse:1
@ 3593 train 4.5090 , allloss: 4.5227, dt: 1286.56ms, fracRes: 0.4173, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4495, norm(y): 0.9921, norm:1.3201, tok/sec: 101878.04, flops:106.93, batch-reuse:1
@ 3594 train 4.4136 , allloss: 4.4278, dt: 1262.00ms, fracRes: 0.4191, norm(attn): 0.2012, norm(output): 0.2539, norm(x): 0.4526, norm(y): 0.9922, norm:1.2387, tok/sec: 103860.59, flops:109.02, batch-reuse:1
@ 3595 train 4.4776 , allloss: 4.4908, dt: 1269.81ms, fracRes: 0.4191, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4514, norm(y): 0.9922, norm:1.4460, tok/sec: 103221.69, flops:108.34, batch-reuse:1
@ 3596 train 4.4456 , allloss: 4.4586, dt: 1291.57ms, fracRes: 0.4183, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4504, norm(y): 0.9923, norm:1.2622, tok/sec: 101482.43, flops:106.52, batch-reuse:1
@ 3597 train 4.4484 , allloss: 4.4616, dt: 1302.05ms, fracRes: 0.4185, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4497, norm(y): 0.9922, norm:1.3515, tok/sec: 100665.77, flops:105.66, batch-reuse:1
@ 3598 train 4.4555 , allloss: 4.4694, dt: 1252.59ms, fracRes: 0.4176, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4514, norm(y): 0.9921, norm:1.5155, tok/sec: 104640.49, flops:109.83, batch-reuse:1
@ 3599 train 4.4163 , allloss: 4.4301, dt: 1278.24ms, fracRes: 0.4187, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4530, norm(y): 0.9921, norm:1.2718, tok/sec: 102540.82, flops:107.63, batch-reuse:1
@ 3600 train 4.3594 , allloss: 4.3728, dt: 1263.07ms, fracRes: 0.4165, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4507, norm(y): 0.9922, norm:1.3291, tok/sec: 103772.21, flops:108.92, batch-reuse:1
@ 3601 train 4.4565 , allloss: 4.4697, dt: 1271.10ms, fracRes: 0.4159, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4493, norm(y): 0.9922, norm:1.4519, tok/sec: 103117.37, flops:108.24, batch-reuse:1
@ 3602 train 4.4760 , allloss: 4.4897, dt: 1250.38ms, fracRes: 0.4172, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4522, norm(y): 0.9922, norm:1.4543, tok/sec: 104825.55, flops:110.03, batch-reuse:1
@ 3603 train 4.4919 , allloss: 4.5058, dt: 1259.21ms, fracRes: 0.4178, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4526, norm(y): 0.9922, norm:1.6850, tok/sec: 104090.47, flops:109.26, batch-reuse:1
@ 3604 train 4.4616 , allloss: 4.4757, dt: 1278.59ms, fracRes: 0.4185, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4512, norm(y): 0.9922, norm:1.3140, tok/sec: 102513.18, flops:107.60, batch-reuse:1
@ 3605 train 4.4367 , allloss: 4.4501, dt: 1265.03ms, fracRes: 0.4194, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4515, norm(y): 0.9922, norm:1.4631, tok/sec: 103611.62, flops:108.75, batch-reuse:1
@ 3606 train 4.4012 , allloss: 4.4142, dt: 1249.07ms, fracRes: 0.4190, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4504, norm(y): 0.9921, norm:1.2744, tok/sec: 104935.50, flops:110.14, batch-reuse:1
@ 3607 train 4.4517 , allloss: 4.4657, dt: 1255.17ms, fracRes: 0.4196, norm(attn): 0.2002, norm(output): 0.2539, norm(x): 0.4514, norm(y): 0.9921, norm:1.4393, tok/sec: 104425.55, flops:109.61, batch-reuse:1
@ 3608 train 4.4753 , allloss: 4.4885, dt: 1267.79ms, fracRes: 0.4188, norm(attn): 0.1982, norm(output): 0.2539, norm(x): 0.4522, norm(y): 0.9922, norm:1.3546, tok/sec: 103386.41, flops:108.52, batch-reuse:1
@ 3609 train 4.4901 , allloss: 4.5060, dt: 1270.60ms, fracRes: 0.4190, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4534, norm(y): 0.9921, norm:1.4879, tok/sec: 103157.67, flops:108.28, batch-reuse:1
@ 3610 train 4.3683 , allloss: 4.3827, dt: 1283.86ms, fracRes: 0.4221, norm(attn): 0.2021, norm(output): 0.2598, norm(x): 0.4628, norm(y): 0.9921, norm:1.5885, tok/sec: 102092.00, flops:107.16, batch-reuse:1
@ 3611 train 4.4644 , allloss: 4.4785, dt: 1260.30ms, fracRes: 0.4177, norm(attn): 0.1973, norm(output): 0.2578, norm(x): 0.4534, norm(y): 0.9921, norm:1.5111, tok/sec: 104000.96, flops:109.16, batch-reuse:1
@ 3612 train 4.4887 , allloss: 4.5020, dt: 1285.44ms, fracRes: 0.4185, norm(attn): 0.1973, norm(output): 0.2539, norm(x): 0.4509, norm(y): 0.9922, norm:1.5548, tok/sec: 101966.49, flops:107.03, batch-reuse:1
@ 3613 train 4.4359 , allloss: 4.4496, dt: 1296.98ms, fracRes: 0.4187, norm(attn): 0.1973, norm(output): 0.2539, norm(x): 0.4518, norm(y): 0.9922, norm:1.5860, tok/sec: 101059.22, flops:106.07, batch-reuse:1
@ 3614 train 4.4629 , allloss: 4.4769, dt: 1283.47ms, fracRes: 0.4176, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4516, norm(y): 0.9921, norm:1.4085, tok/sec: 102123.23, flops:107.19, batch-reuse:1
@ 3615 train 4.4324 , allloss: 4.4461, dt: 1283.65ms, fracRes: 0.4163, norm(attn): 0.1992, norm(output): 0.2539, norm(x): 0.4495, norm(y): 0.9920, norm:1.2390, tok/sec: 102109.06, flops:107.18, batch-reuse:1
@ 3616 train 4.3504 , allloss: 4.3643, dt: 1246.74ms, fracRes: 0.4174, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4520, norm(y): 0.9921, norm:1.3391, tok/sec: 105131.88, flops:110.35, batch-reuse:1
@ 3617 train 4.3844 , allloss: 4.3975, dt: 1277.83ms, fracRes: 0.4163, norm(attn): 0.2012, norm(output): 0.2539, norm(x): 0.4500, norm(y): 0.9922, norm:1.3257, tok/sec: 102573.54, flops:107.66, batch-reuse:1
@ 3618 train 4.3268 , allloss: 4.3402, dt: 1279.95ms, fracRes: 0.4161, norm(attn): 0.2012, norm(output): 0.2598, norm(x): 0.4528, norm(y): 0.9922, norm:1.3556, tok/sec: 102403.63, flops:107.49, batch-reuse:1
@ 3619 train 4.3938 , allloss: 4.4071, dt: 1249.21ms, fracRes: 0.4164, norm(attn): 0.2002, norm(output): 0.2578, norm(x): 0.4520, norm(y): 0.9922, norm:1.1940, tok/sec: 104924.24, flops:110.13, batch-reuse:1
@ 3620 train 4.4421 , allloss: 4.4560, dt: 1258.01ms, fracRes: 0.4197, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4581, norm(y): 0.9921, norm:1.4021, tok/sec: 104189.72, flops:109.36, batch-reuse:1
@ 3621 train 4.3902 , allloss: 4.4038, dt: 1278.46ms, fracRes: 0.4162, norm(attn): 0.2021, norm(output): 0.2539, norm(x): 0.4518, norm(y): 0.9921, norm:1.5839, tok/sec: 102523.75, flops:107.61, batch-reuse:1
@ 3622 train 4.4665 , allloss: 4.4798, dt: 1252.17ms, fracRes: 0.4184, norm(attn): 0.1992, norm(output): 0.2598, norm(x): 0.4577, norm(y): 0.9921, norm:1.4697, tok/sec: 104676.09, flops:109.87, batch-reuse:1
@ 3623 train 4.4467 , allloss: 4.4601, dt: 1263.02ms, fracRes: 0.4188, norm(attn): 0.1953, norm(output): 0.2559, norm(x): 0.4553, norm(y): 0.9921, norm:1.3654, tok/sec: 103777.03, flops:108.93, batch-reuse:1
@ 3624 train 4.3125 , allloss: 4.3262, dt: 1267.26ms, fracRes: 0.4203, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4563, norm(y): 0.9921, norm:1.2753, tok/sec: 103429.69, flops:108.56, batch-reuse:1
@ 3625 train 4.4505 , allloss: 4.4642, dt: 1256.38ms, fracRes: 0.4198, norm(attn): 0.1992, norm(output): 0.2617, norm(x): 0.4577, norm(y): 0.9921, norm:1.3478, tok/sec: 104325.49, flops:109.50, batch-reuse:1
@ 3626 train 4.3600 , allloss: 4.3748, dt: 1296.04ms, fracRes: 0.4205, norm(attn): 0.1992, norm(output): 0.2578, norm(x): 0.4580, norm(y): 0.9922, norm:1.3339, tok/sec: 101132.49, flops:106.15, batch-reuse:1
@ 3627 train 4.4350 , allloss: 4.4480, dt: 1276.84ms, fracRes: 0.4194, norm(attn): 0.1963, norm(output): 0.2539, norm(x): 0.4556, norm(y): 0.9922, norm:1.4356, tok/sec: 102653.66, flops:107.75, batch-reuse:1
@ 3628 train 4.4762 , allloss: 4.4896, dt: 1245.09ms, fracRes: 0.4207, norm(attn): 0.1973, norm(output): 0.2578, norm(x): 0.4584, norm(y): 0.9921, norm:1.3300, tok/sec: 105270.72, flops:110.50, batch-reuse:1
@ 3629 train 4.3751 , allloss: 4.3886, dt: 1279.84ms, fracRes: 0.4195, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4560, norm(y): 0.9921, norm:1.2917, tok/sec: 102412.48, flops:107.50, batch-reuse:1
@ 3630 train 4.3287 , allloss: 4.3428, dt: 1289.82ms, fracRes: 0.4188, norm(attn): 0.2021, norm(output): 0.2598, norm(x): 0.4586, norm(y): 0.9921, norm:1.4060, tok/sec: 101620.67, flops:106.66, batch-reuse:1
@ 3631 train 4.3637 , allloss: 4.3773, dt: 1277.96ms, fracRes: 0.4161, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4531, norm(y): 0.9921, norm:1.2484, tok/sec: 102563.09, flops:107.65, batch-reuse:1
@ 3632 train 4.3741 , allloss: 4.3879, dt: 1260.41ms, fracRes: 0.4194, norm(attn): 0.2002, norm(output): 0.2578, norm(x): 0.4590, norm(y): 0.9922, norm:1.4614, tok/sec: 103991.32, flops:109.15, batch-reuse:1
@ 3633 train 4.4777 , allloss: 4.4920, dt: 1275.67ms, fracRes: 0.4179, norm(attn): 0.1963, norm(output): 0.2598, norm(x): 0.4565, norm(y): 0.9922, norm:1.2728, tok/sec: 102747.40, flops:107.85, batch-reuse:1
@ 3634 train 4.3087 , allloss: 4.3231, dt: 1262.27ms, fracRes: 0.4161, norm(attn): 0.2012, norm(output): 0.2578, norm(x): 0.4532, norm(y): 0.9921, norm:1.3729, tok/sec: 103838.21, flops:108.99, batch-reuse:1
@ 3635 train 4.3736 , allloss: 4.3873, dt: 1270.94ms, fracRes: 0.4170, norm(attn): 0.2012, norm(output): 0.2598, norm(x): 0.4584, norm(y): 0.9921, norm:1.2549, tok/sec: 103130.29, flops:108.25, batch-reuse:1
@ 3636 train 4.3366 , allloss: 4.3504, dt: 1265.91ms, fracRes: 0.4174, norm(attn): 0.2002, norm(output): 0.2598, norm(x): 0.4547, norm(y): 0.9921, norm:1.3333, tok/sec: 103539.83, flops:108.68, batch-reuse:1
@ 3637 train 4.4244 , allloss: 4.4385, dt: 1273.58ms, fracRes: 0.4188, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4563, norm(y): 0.9921, norm:1.3113, tok/sec: 102916.22, flops:108.02, batch-reuse:1
@ 3638 train 4.3978 , allloss: 4.4116, dt: 1275.08ms, fracRes: 0.4184, norm(attn): 0.2031, norm(output): 0.2559, norm(x): 0.4551, norm(y): 0.9920, norm:1.4269, tok/sec: 102795.33, flops:107.90, batch-reuse:1
@ 3639 train 4.4288 , allloss: 4.4425, dt: 1246.96ms, fracRes: 0.4203, norm(attn): 0.1992, norm(output): 0.2578, norm(x): 0.4563, norm(y): 0.9921, norm:1.3324, tok/sec: 105113.10, flops:110.33, batch-reuse:1
@ 3640 train 4.3502 , allloss: 4.3642, dt: 1271.48ms, fracRes: 0.4209, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4559, norm(y): 0.9922, norm:1.3484, tok/sec: 103086.03, flops:108.20, batch-reuse:1
@ 3641 train 4.4005 , allloss: 4.4143, dt: 1257.63ms, fracRes: 0.4216, norm(attn): 0.1992, norm(output): 0.2598, norm(x): 0.4592, norm(y): 0.9922, norm:1.4428, tok/sec: 104221.23, flops:109.39, batch-reuse:1
@ 3642 train 4.5787 , allloss: 4.5925, dt: 1275.17ms, fracRes: 0.4214, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4570, norm(y): 0.9921, norm:1.6605, tok/sec: 102788.09, flops:107.89, batch-reuse:1
@ 3643 train 4.3922 , allloss: 4.4054, dt: 1264.75ms, fracRes: 0.4207, norm(attn): 0.1992, norm(output): 0.2578, norm(x): 0.4567, norm(y): 0.9921, norm:1.4281, tok/sec: 103634.91, flops:108.78, batch-reuse:1
@ 3644 train 4.4697 , allloss: 4.4831, dt: 1247.35ms, fracRes: 0.4208, norm(attn): 0.1992, norm(output): 0.2559, norm(x): 0.4565, norm(y): 0.9921, norm:1.3090, tok/sec: 105080.69, flops:110.30, batch-reuse:1
@ 3645 train 4.3904 , allloss: 4.4036, dt: 1281.19ms, fracRes: 0.4190, norm(attn): 0.2002, norm(output): 0.2578, norm(x): 0.4550, norm(y): 0.9920, norm:1.2806, tok/sec: 102305.14, flops:107.38, batch-reuse:1
@ 3646 train 4.3660 , allloss: 4.3795, dt: 1273.29ms, fracRes: 0.4196, norm(attn): 0.2002, norm(output): 0.2578, norm(x): 0.4575, norm(y): 0.9921, norm:1.2776, tok/sec: 102939.50, flops:108.05, batch-reuse:1
@ 3647 train 4.3981 , allloss: 4.4119, dt: 1276.78ms, fracRes: 0.4183, norm(attn): 0.2021, norm(output): 0.2578, norm(x): 0.4531, norm(y): 0.9921, norm:1.2891, tok/sec: 102657.91, flops:107.75, batch-reuse:1
@ 3648 train 4.4489 , allloss: 4.4629, dt: 1274.79ms, fracRes: 0.4180, norm(attn): 0.2021, norm(output): 0.2559, norm(x): 0.4533, norm(y): 0.9921, norm:1.3522, tok/sec: 102818.15, flops:107.92, batch-reuse:1
@ 3649 train 4.4426 , allloss: 4.4558, dt: 1261.10ms, fracRes: 0.4184, norm(attn): 0.2002, norm(output): 0.2617, norm(x): 0.4577, norm(y): 0.9921, norm:1.3444, tok/sec: 103934.34, flops:109.09, batch-reuse:1
@ 3650 train 4.4561 , allloss: 4.4693, dt: 1255.80ms, fracRes: 0.4193, norm(attn): 0.2002, norm(output): 0.2617, norm(x): 0.4570, norm(y): 0.9922, norm:1.3313, tok/sec: 104373.60, flops:109.55, batch-reuse:1
@ 3651 train 4.4127 , allloss: 4.4260, dt: 1255.21ms, fracRes: 0.4200, norm(attn): 0.2002, norm(output): 0.2578, norm(x): 0.4591, norm(y): 0.9922, norm:1.2576, tok/sec: 104422.55, flops:109.61, batch-reuse:1
@ 3652 train 4.3272 , allloss: 4.3408, dt: 1280.55ms, fracRes: 0.4197, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4553, norm(y): 0.9921, norm:1.2784, tok/sec: 102355.77, flops:107.44, batch-reuse:1
@ 3653 train 4.3512 , allloss: 4.3646, dt: 1264.33ms, fracRes: 0.4195, norm(attn): 0.2021, norm(output): 0.2598, norm(x): 0.4585, norm(y): 0.9920, norm:1.2757, tok/sec: 103668.75, flops:108.81, batch-reuse:1
@ 3654 train 4.4890 , allloss: 4.5023, dt: 1246.61ms, fracRes: 0.4189, norm(attn): 0.2021, norm(output): 0.2578, norm(x): 0.4564, norm(y): 0.9921, norm:1.3141, tok/sec: 105142.77, flops:110.36, batch-reuse:1
@ 3655 train 4.4816 , allloss: 4.4948, dt: 1241.37ms, fracRes: 0.4190, norm(attn): 0.2002, norm(output): 0.2598, norm(x): 0.4592, norm(y): 0.9921, norm:1.2602, tok/sec: 105586.17, flops:110.83, batch-reuse:1
@ 3656 train 4.4578 , allloss: 4.4712, dt: 1292.65ms, fracRes: 0.4177, norm(attn): 0.1992, norm(output): 0.2578, norm(x): 0.4556, norm(y): 0.9922, norm:1.4251, tok/sec: 101397.72, flops:106.43, batch-reuse:1
@ 3657 train 4.4674 , allloss: 4.4810, dt: 1261.54ms, fracRes: 0.4173, norm(attn): 0.2012, norm(output): 0.2578, norm(x): 0.4550, norm(y): 0.9921, norm:1.4761, tok/sec: 103898.81, flops:109.06, batch-reuse:1
@ 3658 train 4.3556 , allloss: 4.3686, dt: 1280.98ms, fracRes: 0.4168, norm(attn): 0.1992, norm(output): 0.2598, norm(x): 0.4546, norm(y): 0.9921, norm:1.2680, tok/sec: 102321.27, flops:107.40, batch-reuse:1
@ 3659 train 4.4294 , allloss: 4.4521, dt: 1291.88ms, fracRes: 0.4185, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4595, norm(y): 0.9920, norm:1.4205, tok/sec: 101458.07, flops:106.49, batch-reuse:1
@ 3660 train 4.2723 , allloss: 4.2852, dt: 1273.09ms, fracRes: 0.4205, norm(attn): 0.1992, norm(output): 0.2598, norm(x): 0.4584, norm(y): 0.9921, norm:1.4982, tok/sec: 102956.02, flops:108.07, batch-reuse:1
@ 3661 train 4.3096 , allloss: 4.3228, dt: 1276.61ms, fracRes: 0.4194, norm(attn): 0.2002, norm(output): 0.2578, norm(x): 0.4562, norm(y): 0.9921, norm:1.2721, tok/sec: 102672.18, flops:107.77, batch-reuse:1
@ 3662 train 4.1689 , allloss: 4.1832, dt: 1292.65ms, fracRes: 0.4196, norm(attn): 0.2021, norm(output): 0.2559, norm(x): 0.4545, norm(y): 0.9921, norm:1.3487, tok/sec: 101397.68, flops:106.43, batch-reuse:1
@ 3663 train 4.2557 , allloss: 4.2692, dt: 1284.14ms, fracRes: 0.4198, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4540, norm(y): 0.9921, norm:1.2730, tok/sec: 102070.05, flops:107.14, batch-reuse:1
@ 3664 train 4.3169 , allloss: 4.3299, dt: 1274.68ms, fracRes: 0.4184, norm(attn): 0.2021, norm(output): 0.2539, norm(x): 0.4521, norm(y): 0.9921, norm:1.2275, tok/sec: 102827.15, flops:107.93, batch-reuse:1
@ 3665 train 4.3364 , allloss: 4.3493, dt: 1297.35ms, fracRes: 0.4195, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4550, norm(y): 0.9922, norm:1.4186, tok/sec: 101030.33, flops:106.04, batch-reuse:1
@ 3666 train 4.2026 , allloss: 4.2159, dt: 1287.07ms, fracRes: 0.4207, norm(attn): 0.2012, norm(output): 0.2578, norm(x): 0.4564, norm(y): 0.9922, norm:1.2390, tok/sec: 101837.64, flops:106.89, batch-reuse:1
@ 3667 train 4.3190 , allloss: 4.3328, dt: 1297.73ms, fracRes: 0.4202, norm(attn): 0.2021, norm(output): 0.2598, norm(x): 0.4601, norm(y): 0.9921, norm:1.3908, tok/sec: 101000.98, flops:106.01, batch-reuse:1
@ 3668 train 4.3152 , allloss: 4.3287, dt: 1250.92ms, fracRes: 0.4196, norm(attn): 0.2012, norm(output): 0.2578, norm(x): 0.4566, norm(y): 0.9921, norm:1.2639, tok/sec: 104780.34, flops:109.98, batch-reuse:1
@ 3669 train 4.3752 , allloss: 4.3886, dt: 1274.29ms, fracRes: 0.4198, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4620, norm(y): 0.9921, norm:1.6669, tok/sec: 102859.03, flops:107.96, batch-reuse:1
@ 3670 train 4.3693 , allloss: 4.3823, dt: 1257.32ms, fracRes: 0.4180, norm(attn): 0.2021, norm(output): 0.2598, norm(x): 0.4574, norm(y): 0.9921, norm:1.6736, tok/sec: 104247.45, flops:109.42, batch-reuse:1
@ 3671 train 4.2337 , allloss: 4.2467, dt: 1259.95ms, fracRes: 0.4180, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4567, norm(y): 0.9921, norm:1.3720, tok/sec: 104029.53, flops:109.19, batch-reuse:1
@ 3672 train 4.3097 , allloss: 4.3229, dt: 1266.20ms, fracRes: 0.4197, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4557, norm(y): 0.9921, norm:1.5135, tok/sec: 103515.79, flops:108.65, batch-reuse:1
@ 3673 train 4.2943 , allloss: 4.3080, dt: 1268.99ms, fracRes: 0.4191, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4549, norm(y): 0.9920, norm:1.4339, tok/sec: 103288.38, flops:108.41, batch-reuse:1
@ 3674 train 4.2570 , allloss: 4.2703, dt: 1250.57ms, fracRes: 0.4202, norm(attn): 0.2031, norm(output): 0.2598, norm(x): 0.4588, norm(y): 0.9920, norm:1.3969, tok/sec: 104809.76, flops:110.01, batch-reuse:1
@ 3675 train 4.3255 , allloss: 4.3385, dt: 1265.63ms, fracRes: 0.4203, norm(attn): 0.2002, norm(output): 0.2559, norm(x): 0.4562, norm(y): 0.9921, norm:1.2313, tok/sec: 103562.40, flops:108.70, batch-reuse:1
@ 3676 train 4.3446 , allloss: 4.3578, dt: 1251.27ms, fracRes: 0.4199, norm(attn): 0.2012, norm(output): 0.2578, norm(x): 0.4568, norm(y): 0.9921, norm:1.5582, tok/sec: 104750.99, flops:109.95, batch-reuse:1
@ 3677 train 4.3026 , allloss: 4.3161, dt: 1274.88ms, fracRes: 0.4205, norm(attn): 0.2021, norm(output): 0.2598, norm(x): 0.4592, norm(y): 0.9921, norm:1.3102, tok/sec: 102811.62, flops:107.91, batch-reuse:1
@ 3678 train 4.3125 , allloss: 4.3258, dt: 1302.54ms, fracRes: 0.4224, norm(attn): 0.1982, norm(output): 0.2578, norm(x): 0.4584, norm(y): 0.9923, norm:1.5757, tok/sec: 100628.22, flops:105.62, batch-reuse:1
@ 3679 train 4.2482 , allloss: 4.2617, dt: 1273.96ms, fracRes: 0.4233, norm(attn): 0.1982, norm(output): 0.2559, norm(x): 0.4601, norm(y): 0.9923, norm:1.5378, tok/sec: 102885.29, flops:107.99, batch-reuse:1
@ 3680 train 4.2002 , allloss: 4.2133, dt: 1265.93ms, fracRes: 0.4197, norm(attn): 0.2012, norm(output): 0.2578, norm(x): 0.4520, norm(y): 0.9921, norm:1.3520, tok/sec: 103538.41, flops:108.68, batch-reuse:1
@ 3681 train 4.2379 , allloss: 4.2513, dt: 1259.86ms, fracRes: 0.4194, norm(attn): 0.2021, norm(output): 0.2559, norm(x): 0.4527, norm(y): 0.9920, norm:1.3439, tok/sec: 104037.11, flops:109.20, batch-reuse:1
@ 3682 train 4.1893 , allloss: 4.2032, dt: 1263.04ms, fracRes: 0.4223, norm(attn): 0.2012, norm(output): 0.2559, norm(x): 0.4576, norm(y): 0.9921, norm:1.4529, tok/sec: 103775.25, flops:108.93, batch-reuse:1
@ 3683 train 4.3216 , allloss: 4.3356, dt: 1251.24ms, fracRes: 0.4215, norm(attn): 0.2021, norm(output): 0.2617, norm(x): 0.4587, norm(y): 0.9921, norm:1.6623, tok/sec: 104753.64, flops:109.95, batch-reuse:1
@ 3684 train 4.3642 , allloss: 4.3779, dt: 1263.27ms, fracRes: 0.4207, norm(attn): 0.2012, norm(output): 0.2539, norm(x): 0.4538, norm(y): 0.9921, norm:1.1606, tok/sec: 103755.72, flops:108.91, batch-reuse:1
@ 3685 train 4.2269 , allloss: 4.2403, dt: 1264.46ms, fracRes: 0.4193, norm(attn): 0.2031, norm(output): 0.2578, norm(x): 0.4534, norm(y): 0.9920, norm:1.5568, tok/sec: 103658.55, flops:108.80, batch-reuse:1
@ 3686 train 4.2400 , allloss: 4.2531, dt: 1250.36ms, fracRes: 0.4197, norm(attn): 0.2012, norm(output): 0.2578, norm(x): 0.4561, norm(y): 0.9921, norm:1.3394, tok/sec: 104827.05, flops:110.03, batch-reuse:1
@ 3687 train 4.2883 , allloss: 4.3010, dt: 1282.70ms, fracRes: 0.4182, norm(attn): 0.2021, norm(output): 0.2617, norm(x): 0.4576, norm(y): 0.9920, norm:1.2594, tok/sec: 102184.58, flops:107.26, batch-reuse:1
@ 3688 train 4.3498 , allloss: 4.3627, dt: 1285.00ms, fracRes: 0.4186, norm(attn): 0.2021, norm(output): 0.2559, norm(x): 0.4562, norm(y): 0.9921, norm:1.5698, tok/sec: 102001.63, flops:107.06, batch-reuse:1
@ 3689 train 4.3423 , allloss: 4.3554, dt: 1255.44ms, fracRes: 0.4188, norm(attn): 0.2012, norm(output): 0.2598, norm(x): 0.4586, norm(y): 0.9921, norm:1.4204, tok/sec: 104403.50, flops:109.59, batch-reuse:1
@ 3690 train 4.2228 , allloss: 4.2372, dt: 1274.85ms, fracRes: 0.4182, norm(attn): 0.2002, norm(output): 0.2598, norm(x): 0.4577, norm(y): 0.9920, norm:1.3233, tok/sec: 102813.63, flops:107.92, batch-reuse:1
@ 3691 train 4.3244 , allloss: 4.3377, dt: 1301.11ms, fracRes: 0.4189, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4617, norm(y): 0.9920, norm:1.3262, tok/sec: 100738.39, flops:105.74, batch-reuse:1
@ 3692 train 4.2825 , allloss: 4.2960, dt: 1290.64ms, fracRes: 0.4225, norm(attn): 0.1992, norm(output): 0.2598, norm(x): 0.4653, norm(y): 0.9920, norm:1.4120, tok/sec: 101555.43, flops:106.60, batch-reuse:1
@ 3693 train 4.3264 , allloss: 4.3397, dt: 1292.27ms, fracRes: 0.4179, norm(attn): 0.1992, norm(output): 0.2578, norm(x): 0.4569, norm(y): 0.9921, norm:1.2864, tok/sec: 101427.33, flops:106.46, batch-reuse:1
@ 3694 train 4.2965 , allloss: 4.3100, dt: 1251.10ms, fracRes: 0.4177, norm(attn): 0.2021, norm(output): 0.2617, norm(x): 0.4572, norm(y): 0.9920, norm:1.1899, tok/sec: 104765.02, flops:109.96, batch-reuse:1
@ 3695 train 4.2930 , allloss: 4.3064, dt: 1254.30ms, fracRes: 0.4180, norm(attn): 0.2021, norm(output): 0.2578, norm(x): 0.4564, norm(y): 0.9920, norm:1.2652, tok/sec: 104497.88, flops:109.68, batch-reuse:1
@ 3696 train 4.3126 , allloss: 4.3268, dt: 1262.08ms, fracRes: 0.4201, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4591, norm(y): 0.9920, norm:1.2955, tok/sec: 103854.27, flops:109.01, batch-reuse:1
@ 3697 train 4.2878 , allloss: 4.3006, dt: 1269.72ms, fracRes: 0.4180, norm(attn): 0.2012, norm(output): 0.2578, norm(x): 0.4542, norm(y): 0.9921, norm:1.2191, tok/sec: 103228.88, flops:108.35, batch-reuse:1
@ 3698 train 4.3885 , allloss: 4.4016, dt: 1247.77ms, fracRes: 0.4195, norm(attn): 0.2021, norm(output): 0.2617, norm(x): 0.4602, norm(y): 0.9920, norm:1.1053, tok/sec: 105045.05, flops:110.26, batch-reuse:1
@ 3699 train 4.1854 , allloss: 4.1984, dt: 1260.92ms, fracRes: 0.4195, norm(attn): 0.2031, norm(output): 0.2578, norm(x): 0.4561, norm(y): 0.9921, norm:1.4790, tok/sec: 103949.81, flops:109.11, batch-reuse:1
@ 3700 train 4.2997 , allloss: 4.3133, dt: 1238.15ms, fracRes: 0.4197, norm(attn): 0.2031, norm(output): 0.2598, norm(x): 0.4585, norm(y): 0.9920, norm:1.2495, tok/sec: 105861.52, flops:111.12, batch-reuse:1
@ 3701 train 4.3547 , allloss: 4.3684, dt: 1273.33ms, fracRes: 0.4188, norm(attn): 0.2002, norm(output): 0.2617, norm(x): 0.4583, norm(y): 0.9920, norm:1.1717, tok/sec: 102936.51, flops:108.05, batch-reuse:1
@ 3702 train 4.2950 , allloss: 4.3078, dt: 1249.59ms, fracRes: 0.4169, norm(attn): 0.2031, norm(output): 0.2617, norm(x): 0.4558, norm(y): 0.9921, norm:1.1962, tok/sec: 104892.03, flops:110.10, batch-reuse:1
@ 3703 train 4.2290 , allloss: 4.2423, dt: 1252.64ms, fracRes: 0.4185, norm(attn): 0.2012, norm(output): 0.2598, norm(x): 0.4570, norm(y): 0.9921, norm:1.1961, tok/sec: 104636.41, flops:109.83, batch-reuse:1
@ 3704 train 4.2329 , allloss: 4.2459, dt: 1277.31ms, fracRes: 0.4173, norm(attn): 0.2031, norm(output): 0.2598, norm(x): 0.4574, norm(y): 0.9920, norm:1.1533, tok/sec: 102616.03, flops:107.71, batch-reuse:1
@ 3705 train 4.3363 , allloss: 4.3496, dt: 1265.26ms, fracRes: 0.4162, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4564, norm(y): 0.9920, norm:1.3341, tok/sec: 103593.19, flops:108.73, batch-reuse:1
@ 3706 train 4.2705 , allloss: 4.2843, dt: 1260.87ms, fracRes: 0.4174, norm(attn): 0.2012, norm(output): 0.2598, norm(x): 0.4589, norm(y): 0.9920, norm:1.3042, tok/sec: 103953.48, flops:109.11, batch-reuse:1
@ 3707 train 4.4196 , allloss: 4.4338, dt: 1290.46ms, fracRes: 0.4190, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4636, norm(y): 0.9920, norm:1.4041, tok/sec: 101569.73, flops:106.61, batch-reuse:1
@ 3708 train 4.4443 , allloss: 4.4583, dt: 1282.01ms, fracRes: 0.4187, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4635, norm(y): 0.9920, norm:1.3055, tok/sec: 102239.18, flops:107.31, batch-reuse:1
@ 3709 train 4.4570 , allloss: 4.4702, dt: 1261.11ms, fracRes: 0.4187, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4637, norm(y): 0.9920, norm:1.1780, tok/sec: 103934.22, flops:109.09, batch-reuse:1
@ 3710 train 4.4952 , allloss: 4.5085, dt: 1288.14ms, fracRes: 0.4194, norm(attn): 0.2031, norm(output): 0.2617, norm(x): 0.4629, norm(y): 0.9920, norm:1.4534, tok/sec: 101752.59, flops:106.80, batch-reuse:1
@ 3711 train 4.5244 , allloss: 4.5376, dt: 1254.54ms, fracRes: 0.4182, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4621, norm(y): 0.9919, norm:1.2900, tok/sec: 104478.08, flops:109.66, batch-reuse:1
@ 3712 train 4.4940 , allloss: 4.5071, dt: 1271.66ms, fracRes: 0.4192, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4662, norm(y): 0.9921, norm:1.5640, tok/sec: 103071.95, flops:108.19, batch-reuse:1
@ 3713 train 4.5791 , allloss: 4.5924, dt: 1274.61ms, fracRes: 0.4218, norm(attn): 0.1963, norm(output): 0.2617, norm(x): 0.4664, norm(y): 0.9922, norm:1.6314, tok/sec: 102833.35, flops:107.94, batch-reuse:1
@ 3714 train 4.5144 , allloss: 4.5281, dt: 1251.38ms, fracRes: 0.4205, norm(attn): 0.1992, norm(output): 0.2598, norm(x): 0.4628, norm(y): 0.9921, norm:1.9432, tok/sec: 104741.77, flops:109.94, batch-reuse:1
@ 3715 train 4.4956 , allloss: 4.5093, dt: 1266.36ms, fracRes: 0.4213, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4643, norm(y): 0.9919, norm:1.4506, tok/sec: 103502.83, flops:108.64, batch-reuse:1
@ 3716 train 4.4270 , allloss: 4.4407, dt: 1255.09ms, fracRes: 0.4236, norm(attn): 0.1992, norm(output): 0.2578, norm(x): 0.4638, norm(y): 0.9919, norm:1.3695, tok/sec: 104432.15, flops:109.62, batch-reuse:1
@ 3717 train 4.4372 , allloss: 4.4506, dt: 1261.70ms, fracRes: 0.4220, norm(attn): 0.2031, norm(output): 0.2598, norm(x): 0.4608, norm(y): 0.9919, norm:1.3461, tok/sec: 103884.85, flops:109.04, batch-reuse:1
@ 3718 train 4.4141 , allloss: 4.4273, dt: 1259.46ms, fracRes: 0.4227, norm(attn): 0.2031, norm(output): 0.2617, norm(x): 0.4641, norm(y): 0.9920, norm:1.3592, tok/sec: 104069.78, flops:109.23, batch-reuse:1
@ 3719 train 4.4801 , allloss: 4.4931, dt: 1284.50ms, fracRes: 0.4222, norm(attn): 0.1992, norm(output): 0.2578, norm(x): 0.4608, norm(y): 0.9921, norm:1.3361, tok/sec: 102041.52, flops:107.11, batch-reuse:1
@ 3720 train 4.3948 , allloss: 4.4079, dt: 1256.45ms, fracRes: 0.4231, norm(attn): 0.1992, norm(output): 0.2617, norm(x): 0.4624, norm(y): 0.9921, norm:1.3822, tok/sec: 104319.69, flops:109.50, batch-reuse:1
@ 3721 train 4.4214 , allloss: 4.4347, dt: 1261.06ms, fracRes: 0.4222, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4643, norm(y): 0.9921, norm:1.4632, tok/sec: 103937.68, flops:109.10, batch-reuse:1
@ 3722 train 4.3613 , allloss: 4.3749, dt: 1269.20ms, fracRes: 0.4224, norm(attn): 0.2021, norm(output): 0.2578, norm(x): 0.4620, norm(y): 0.9921, norm:1.3317, tok/sec: 103271.11, flops:108.40, batch-reuse:1
@ 3723 train 4.4504 , allloss: 4.4638, dt: 1258.76ms, fracRes: 0.4206, norm(attn): 0.2021, norm(output): 0.2598, norm(x): 0.4602, norm(y): 0.9920, norm:1.3004, tok/sec: 104128.23, flops:109.30, batch-reuse:1
@ 3724 train 4.4765 , allloss: 4.4910, dt: 1256.85ms, fracRes: 0.4231, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4648, norm(y): 0.9920, norm:1.3696, tok/sec: 104286.19, flops:109.46, batch-reuse:1
@ 3725 train 4.4785 , allloss: 4.4915, dt: 1265.68ms, fracRes: 0.4230, norm(attn): 0.2021, norm(output): 0.2617, norm(x): 0.4654, norm(y): 0.9920, norm:1.3741, tok/sec: 103558.32, flops:108.70, batch-reuse:1
@ 3726 train 4.4829 , allloss: 4.4959, dt: 1263.29ms, fracRes: 0.4221, norm(attn): 0.2021, norm(output): 0.2598, norm(x): 0.4636, norm(y): 0.9920, norm:1.2611, tok/sec: 103754.84, flops:108.90, batch-reuse:1
@ 3727 train 4.4571 , allloss: 4.4706, dt: 1282.14ms, fracRes: 0.4216, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4669, norm(y): 0.9920, norm:1.4359, tok/sec: 102229.35, flops:107.30, batch-reuse:1
@ 3728 train 4.4240 , allloss: 4.4374, dt: 1260.52ms, fracRes: 0.4213, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4639, norm(y): 0.9920, norm:1.3828, tok/sec: 103982.27, flops:109.14, batch-reuse:1
@ 3729 train 4.4452 , allloss: 4.4583, dt: 1267.77ms, fracRes: 0.4202, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4640, norm(y): 0.9919, norm:1.2786, tok/sec: 103387.66, flops:108.52, batch-reuse:1
@ 3730 train 4.4812 , allloss: 4.4943, dt: 1262.29ms, fracRes: 0.4198, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4654, norm(y): 0.9920, norm:1.3255, tok/sec: 103837.03, flops:108.99, batch-reuse:1
@ 3731 train 4.3998 , allloss: 4.4130, dt: 1277.31ms, fracRes: 0.4202, norm(attn): 0.2021, norm(output): 0.2617, norm(x): 0.4639, norm(y): 0.9921, norm:1.6407, tok/sec: 102615.47, flops:107.71, batch-reuse:1
@ 3732 train 4.4858 , allloss: 4.4983, dt: 1267.43ms, fracRes: 0.4205, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4664, norm(y): 0.9920, norm:1.3393, tok/sec: 103415.45, flops:108.55, batch-reuse:1
@ 3733 train 4.4926 , allloss: 4.5053, dt: 1263.88ms, fracRes: 0.4210, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4656, norm(y): 0.9920, norm:1.4916, tok/sec: 103706.22, flops:108.85, batch-reuse:1
@ 3734 train 4.4643 , allloss: 4.4772, dt: 1256.59ms, fracRes: 0.4212, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4652, norm(y): 0.9919, norm:1.4867, tok/sec: 104307.72, flops:109.48, batch-reuse:1
@ 3735 train 4.5433 , allloss: 4.5562, dt: 1261.61ms, fracRes: 0.4230, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4723, norm(y): 0.9920, norm:1.4045, tok/sec: 103893.04, flops:109.05, batch-reuse:1
@ 3736 train 4.5335 , allloss: 4.5489, dt: 1251.18ms, fracRes: 0.4222, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4679, norm(y): 0.9921, norm:1.2659, tok/sec: 104758.77, flops:109.96, batch-reuse:1
@ 3737 train 4.4225 , allloss: 4.4359, dt: 1247.88ms, fracRes: 0.4211, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4697, norm(y): 0.9920, norm:1.3716, tok/sec: 105036.02, flops:110.25, batch-reuse:1
@ 3738 train 4.4147 , allloss: 4.4280, dt: 1263.52ms, fracRes: 0.4226, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4703, norm(y): 0.9920, norm:1.4896, tok/sec: 103735.42, flops:108.88, batch-reuse:1
@ 3739 train 4.4291 , allloss: 4.4426, dt: 1240.62ms, fracRes: 0.4223, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4659, norm(y): 0.9920, norm:1.3546, tok/sec: 105650.37, flops:110.89, batch-reuse:1
@ 3740 train 4.5157 , allloss: 4.5293, dt: 1288.82ms, fracRes: 0.4221, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4641, norm(y): 0.9920, norm:1.5413, tok/sec: 101699.41, flops:106.75, batch-reuse:1
@ 3741 train 4.6336 , allloss: 4.6469, dt: 1262.91ms, fracRes: 0.4239, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4719, norm(y): 0.9920, norm:1.9456, tok/sec: 103785.42, flops:108.94, batch-reuse:1
@ 3742 train 4.3863 , allloss: 4.3995, dt: 1276.22ms, fracRes: 0.4234, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4647, norm(y): 0.9920, norm:1.4044, tok/sec: 102703.23, flops:107.80, batch-reuse:1
@ 3743 train 4.4611 , allloss: 4.4744, dt: 1272.50ms, fracRes: 0.4241, norm(attn): 0.2012, norm(output): 0.2598, norm(x): 0.4639, norm(y): 0.9920, norm:1.3660, tok/sec: 103003.51, flops:108.12, batch-reuse:1
@ 3744 train 4.6601 , allloss: 4.6733, dt: 1307.11ms, fracRes: 0.4236, norm(attn): 0.1973, norm(output): 0.2598, norm(x): 0.4640, norm(y): 0.9920, norm:1.4889, tok/sec: 100275.90, flops:105.25, batch-reuse:1
@ 3745 train 4.4725 , allloss: 4.4859, dt: 1254.56ms, fracRes: 0.4235, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4682, norm(y): 0.9920, norm:1.4499, tok/sec: 104476.31, flops:109.66, batch-reuse:1
@ 3746 train 4.4348 , allloss: 4.4481, dt: 1286.52ms, fracRes: 0.4218, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4663, norm(y): 0.9920, norm:1.5862, tok/sec: 101880.85, flops:106.94, batch-reuse:1
@ 3747 train 4.4335 , allloss: 4.4465, dt: 1310.22ms, fracRes: 0.4193, norm(attn): 0.2031, norm(output): 0.2617, norm(x): 0.4631, norm(y): 0.9919, norm:1.4176, tok/sec: 100038.43, flops:105.00, batch-reuse:1
@ 3748 train 4.4332 , allloss: 4.4463, dt: 1283.43ms, fracRes: 0.4182, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4616, norm(y): 0.9919, norm:1.3531, tok/sec: 102126.15, flops:107.19, batch-reuse:1
@ 3749 train 4.4677 , allloss: 4.4810, dt: 1261.63ms, fracRes: 0.4183, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4602, norm(y): 0.9918, norm:1.4643, tok/sec: 103891.19, flops:109.05, batch-reuse:1
@ 3750 train 4.4869 , allloss: 4.4998, dt: 1282.06ms, fracRes: 0.4185, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4604, norm(y): 0.9919, norm:1.3742, tok/sec: 102235.19, flops:107.31, batch-reuse:1
@ 3751 train 4.4813 , allloss: 4.4943, dt: 1275.30ms, fracRes: 0.4185, norm(attn): 0.2031, norm(output): 0.2617, norm(x): 0.4591, norm(y): 0.9919, norm:1.2642, tok/sec: 102777.17, flops:107.88, batch-reuse:1
@ 3752 train 4.3595 , allloss: 4.3731, dt: 1235.38ms, fracRes: 0.4210, norm(attn): 0.2041, norm(output): 0.2637, norm(x): 0.4678, norm(y): 0.9919, norm:1.3566, tok/sec: 106098.60, flops:111.36, batch-reuse:1
@ 3753 train 4.4694 , allloss: 4.4827, dt: 1249.62ms, fracRes: 0.4178, norm(attn): 0.2031, norm(output): 0.2598, norm(x): 0.4561, norm(y): 0.9920, norm:1.4674, tok/sec: 104889.37, flops:110.10, batch-reuse:1
@ 3754 train 4.4169 , allloss: 4.4304, dt: 1269.24ms, fracRes: 0.4180, norm(attn): 0.2021, norm(output): 0.2617, norm(x): 0.4578, norm(y): 0.9920, norm:1.3688, tok/sec: 103268.20, flops:108.39, batch-reuse:1
@ 3755 train 4.4261 , allloss: 4.4392, dt: 1291.38ms, fracRes: 0.4187, norm(attn): 0.2021, norm(output): 0.2617, norm(x): 0.4596, norm(y): 0.9920, norm:1.4617, tok/sec: 101497.38, flops:106.53, batch-reuse:1
@ 3756 train 4.5167 , allloss: 4.5292, dt: 1285.21ms, fracRes: 0.4183, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4600, norm(y): 0.9919, norm:1.3758, tok/sec: 101984.73, flops:107.05, batch-reuse:1
@ 3757 train 4.4480 , allloss: 4.4608, dt: 1279.93ms, fracRes: 0.4191, norm(attn): 0.2021, norm(output): 0.2617, norm(x): 0.4608, norm(y): 0.9919, norm:1.4403, tok/sec: 102405.92, flops:107.49, batch-reuse:1
@ 3758 train 4.4295 , allloss: 4.4427, dt: 1287.64ms, fracRes: 0.4203, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4617, norm(y): 0.9919, norm:1.3028, tok/sec: 101792.10, flops:106.84, batch-reuse:1
@ 3759 train 4.4570 , allloss: 4.4698, dt: 1280.34ms, fracRes: 0.4208, norm(attn): 0.2002, norm(output): 0.2617, norm(x): 0.4626, norm(y): 0.9920, norm:1.3809, tok/sec: 102372.89, flops:107.45, batch-reuse:1
@ 3760 train 4.4844 , allloss: 4.4974, dt: 1272.33ms, fracRes: 0.4216, norm(attn): 0.1973, norm(output): 0.2617, norm(x): 0.4617, norm(y): 0.9920, norm:1.3116, tok/sec: 103017.33, flops:108.13, batch-reuse:1
@ 3761 train 4.5408 , allloss: 4.5534, dt: 1298.12ms, fracRes: 0.4243, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4706, norm(y): 0.9919, norm:1.4628, tok/sec: 100970.32, flops:105.98, batch-reuse:1
@ 3762 train 4.3263 , allloss: 4.3394, dt: 1272.04ms, fracRes: 0.4259, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4720, norm(y): 0.9920, norm:1.4667, tok/sec: 103040.54, flops:108.15, batch-reuse:1
@ 3763 train 4.5076 , allloss: 4.5205, dt: 1263.60ms, fracRes: 0.4239, norm(attn): 0.1992, norm(output): 0.2637, norm(x): 0.4687, norm(y): 0.9920, norm:1.5001, tok/sec: 103729.00, flops:108.88, batch-reuse:1
@ 3764 train 4.4463 , allloss: 4.4593, dt: 1290.34ms, fracRes: 0.4201, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4602, norm(y): 0.9919, norm:1.3254, tok/sec: 101579.45, flops:106.62, batch-reuse:1
@ 3765 train 4.4155 , allloss: 4.4284, dt: 1252.90ms, fracRes: 0.4196, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4605, norm(y): 0.9919, norm:1.3026, tok/sec: 104615.30, flops:109.81, batch-reuse:1
@ 3766 train 4.3750 , allloss: 4.3881, dt: 1282.17ms, fracRes: 0.4199, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4627, norm(y): 0.9919, norm:1.1373, tok/sec: 102226.90, flops:107.30, batch-reuse:1
@ 3767 train 4.4166 , allloss: 4.4290, dt: 1281.30ms, fracRes: 0.4182, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4611, norm(y): 0.9919, norm:1.2399, tok/sec: 102296.27, flops:107.37, batch-reuse:1
@ 3768 train 4.3935 , allloss: 4.4061, dt: 1269.95ms, fracRes: 0.4189, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4604, norm(y): 0.9920, norm:1.3757, tok/sec: 103210.62, flops:108.33, batch-reuse:1
@ 3769 train 4.6042 , allloss: 4.6164, dt: 1258.58ms, fracRes: 0.4205, norm(attn): 0.1992, norm(output): 0.2637, norm(x): 0.4665, norm(y): 0.9920, norm:1.3729, tok/sec: 104142.83, flops:109.31, batch-reuse:1
@ 3770 train 4.4581 , allloss: 4.4705, dt: 1242.78ms, fracRes: 0.4205, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4650, norm(y): 0.9919, norm:1.2461, tok/sec: 105466.76, flops:110.70, batch-reuse:1
@ 3771 train 4.4421 , allloss: 4.4555, dt: 1273.38ms, fracRes: 0.4220, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4676, norm(y): 0.9919, norm:1.4257, tok/sec: 102932.72, flops:108.04, batch-reuse:1
@ 3772 train 4.4643 , allloss: 4.4772, dt: 1257.20ms, fracRes: 0.4207, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4622, norm(y): 0.9919, norm:1.1968, tok/sec: 104257.22, flops:109.43, batch-reuse:1
@ 3773 train 4.4602 , allloss: 4.4731, dt: 1263.57ms, fracRes: 0.4218, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4656, norm(y): 0.9919, norm:1.2198, tok/sec: 103731.25, flops:108.88, batch-reuse:1
@ 3774 train 4.4262 , allloss: 4.4388, dt: 1285.24ms, fracRes: 0.4220, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4656, norm(y): 0.9919, norm:1.3124, tok/sec: 101982.33, flops:107.04, batch-reuse:1
@ 3775 train 4.4450 , allloss: 4.4585, dt: 1287.00ms, fracRes: 0.4235, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4684, norm(y): 0.9919, norm:1.4325, tok/sec: 101842.79, flops:106.90, batch-reuse:1
@ 3776 train 4.4912 , allloss: 4.5041, dt: 1271.93ms, fracRes: 0.4229, norm(attn): 0.1992, norm(output): 0.2637, norm(x): 0.4671, norm(y): 0.9920, norm:1.6736, tok/sec: 103049.54, flops:108.16, batch-reuse:1
@ 3777 train 4.4549 , allloss: 4.4677, dt: 1256.16ms, fracRes: 0.4216, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4643, norm(y): 0.9919, norm:1.5708, tok/sec: 104343.06, flops:109.52, batch-reuse:1
@ 3778 train 4.4277 , allloss: 4.4407, dt: 1285.87ms, fracRes: 0.4203, norm(attn): 0.2031, norm(output): 0.2617, norm(x): 0.4618, norm(y): 0.9919, norm:1.4572, tok/sec: 101932.73, flops:106.99, batch-reuse:1
@ 3779 train 4.3563 , allloss: 4.3688, dt: 1286.50ms, fracRes: 0.4200, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4664, norm(y): 0.9920, norm:1.3243, tok/sec: 101882.74, flops:106.94, batch-reuse:1
@ 3780 train 4.4466 , allloss: 4.4596, dt: 1269.95ms, fracRes: 0.4187, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4636, norm(y): 0.9919, norm:1.2803, tok/sec: 103210.23, flops:108.33, batch-reuse:1
@ 3781 train 4.3408 , allloss: 4.3544, dt: 1252.57ms, fracRes: 0.4198, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4627, norm(y): 0.9919, norm:1.3597, tok/sec: 104642.66, flops:109.84, batch-reuse:1
@ 3782 train 4.5961 , allloss: 4.6111, dt: 1285.22ms, fracRes: 0.4203, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4685, norm(y): 0.9918, norm:1.7346, tok/sec: 101983.84, flops:107.05, batch-reuse:1
@ 3783 train 4.3670 , allloss: 4.3800, dt: 1279.64ms, fracRes: 0.4199, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4655, norm(y): 0.9919, norm:1.6187, tok/sec: 102429.04, flops:107.51, batch-reuse:1
@ 3784 train 4.4312 , allloss: 4.4445, dt: 1267.15ms, fracRes: 0.4216, norm(attn): 0.2002, norm(output): 0.2598, norm(x): 0.4622, norm(y): 0.9920, norm:1.3559, tok/sec: 103438.76, flops:108.57, batch-reuse:1
@ 3785 train 4.4056 , allloss: 4.4185, dt: 1289.09ms, fracRes: 0.4220, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4638, norm(y): 0.9919, norm:1.3499, tok/sec: 101678.05, flops:106.72, batch-reuse:1
@ 3786 train 4.4263 , allloss: 4.4398, dt: 1254.69ms, fracRes: 0.4221, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4672, norm(y): 0.9919, norm:1.3979, tok/sec: 104466.03, flops:109.65, batch-reuse:1
@ 3787 train 4.4428 , allloss: 4.4563, dt: 1267.47ms, fracRes: 0.4232, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4687, norm(y): 0.9919, norm:1.4022, tok/sec: 103412.09, flops:108.54, batch-reuse:1
@ 3788 train 4.4099 , allloss: 4.4225, dt: 1265.26ms, fracRes: 0.4220, norm(attn): 0.2002, norm(output): 0.2637, norm(x): 0.4631, norm(y): 0.9920, norm:1.3140, tok/sec: 103593.21, flops:108.73, batch-reuse:1
@ 3789 train 4.4469 , allloss: 4.4598, dt: 1261.33ms, fracRes: 0.4214, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4668, norm(y): 0.9919, norm:1.3555, tok/sec: 103915.89, flops:109.07, batch-reuse:1
@ 3790 train 4.5110 , allloss: 4.5236, dt: 1270.55ms, fracRes: 0.4194, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4673, norm(y): 0.9918, norm:1.4792, tok/sec: 103162.01, flops:108.28, batch-reuse:1
@ 3791 train 4.4102 , allloss: 4.4239, dt: 1287.71ms, fracRes: 0.4196, norm(attn): 0.2051, norm(output): 0.2656, norm(x): 0.4712, norm(y): 0.9918, norm:1.8619, tok/sec: 101787.18, flops:106.84, batch-reuse:1
@ 3792 train 4.5054 , allloss: 4.5184, dt: 1257.77ms, fracRes: 0.4201, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4691, norm(y): 0.9919, norm:1.5585, tok/sec: 104209.57, flops:109.38, batch-reuse:1
@ 3793 train 4.4650 , allloss: 4.4782, dt: 1266.43ms, fracRes: 0.4198, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4661, norm(y): 0.9918, norm:1.2119, tok/sec: 103497.18, flops:108.63, batch-reuse:1
@ 3794 train 4.3972 , allloss: 4.4099, dt: 1262.28ms, fracRes: 0.4202, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4635, norm(y): 0.9919, norm:1.2518, tok/sec: 103837.23, flops:108.99, batch-reuse:1
@ 3795 train 4.3548 , allloss: 4.3677, dt: 1266.51ms, fracRes: 0.4223, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4678, norm(y): 0.9919, norm:1.2825, tok/sec: 103490.69, flops:108.63, batch-reuse:1
@ 3796 train 4.4662 , allloss: 4.4789, dt: 1252.52ms, fracRes: 0.4228, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4690, norm(y): 0.9919, norm:1.1489, tok/sec: 104646.35, flops:109.84, batch-reuse:1
@ 3797 train 4.4974 , allloss: 4.5107, dt: 1279.78ms, fracRes: 0.4261, norm(attn): 0.2002, norm(output): 0.2676, norm(x): 0.4769, norm(y): 0.9919, norm:1.3146, tok/sec: 102417.23, flops:107.50, batch-reuse:1
@ 3798 train 4.4197 , allloss: 4.4324, dt: 1264.58ms, fracRes: 0.4241, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4684, norm(y): 0.9918, norm:1.3320, tok/sec: 103648.52, flops:108.79, batch-reuse:1
@ 3799 train 4.4235 , allloss: 4.4360, dt: 1256.05ms, fracRes: 0.4227, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4674, norm(y): 0.9919, norm:1.4281, tok/sec: 104352.13, flops:109.53, batch-reuse:1
@ 3800 train 4.3948 , allloss: 4.4077, dt: 1265.44ms, fracRes: 0.4236, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4676, norm(y): 0.9919, norm:1.2989, tok/sec: 103578.57, flops:108.72, batch-reuse:1
@ 3801 train 4.3640 , allloss: 4.3767, dt: 1265.80ms, fracRes: 0.4229, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4643, norm(y): 0.9919, norm:1.2041, tok/sec: 103548.84, flops:108.69, batch-reuse:1
@ 3802 train 4.4069 , allloss: 4.4193, dt: 1260.03ms, fracRes: 0.4222, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4614, norm(y): 0.9919, norm:1.3682, tok/sec: 104023.09, flops:109.19, batch-reuse:1
@ 3803 train 4.4083 , allloss: 4.4208, dt: 1287.44ms, fracRes: 0.4238, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4658, norm(y): 0.9919, norm:1.5410, tok/sec: 101807.93, flops:106.86, batch-reuse:1
@ 3804 train 4.3648 , allloss: 4.3776, dt: 1265.66ms, fracRes: 0.4248, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4710, norm(y): 0.9918, norm:1.3595, tok/sec: 103560.15, flops:108.70, batch-reuse:1
@ 3805 train 4.4749 , allloss: 4.4881, dt: 1269.24ms, fracRes: 0.4244, norm(attn): 0.1992, norm(output): 0.2637, norm(x): 0.4664, norm(y): 0.9918, norm:1.2037, tok/sec: 103267.70, flops:108.39, batch-reuse:1
@ 3806 train 4.4003 , allloss: 4.4128, dt: 1258.04ms, fracRes: 0.4240, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4678, norm(y): 0.9918, norm:1.2515, tok/sec: 104187.71, flops:109.36, batch-reuse:1
@ 3807 train 4.3292 , allloss: 4.3422, dt: 1255.92ms, fracRes: 0.4227, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4654, norm(y): 0.9918, norm:1.2685, tok/sec: 104363.34, flops:109.54, batch-reuse:1
@ 3808 train 4.3672 , allloss: 4.3809, dt: 1310.52ms, fracRes: 0.4229, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4690, norm(y): 0.9919, norm:1.2336, tok/sec: 100015.36, flops:104.98, batch-reuse:1
@ 3809 train 4.3433 , allloss: 4.3560, dt: 1318.97ms, fracRes: 0.4215, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4655, norm(y): 0.9919, norm:1.2325, tok/sec: 99374.51, flops:104.31, batch-reuse:1
@ 3810 train 4.3319 , allloss: 4.3447, dt: 1278.83ms, fracRes: 0.4236, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4715, norm(y): 0.9918, norm:1.2894, tok/sec: 102493.74, flops:107.58, batch-reuse:1
@ 3811 train 4.3059 , allloss: 4.3326, dt: 1272.76ms, fracRes: 0.4238, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4658, norm(y): 0.9919, norm:1.2375, tok/sec: 102982.10, flops:108.09, batch-reuse:1
@ 3812 train 4.3374 , allloss: 4.3502, dt: 1299.37ms, fracRes: 0.4219, norm(attn): 0.2031, norm(output): 0.2617, norm(x): 0.4628, norm(y): 0.9919, norm:1.1775, tok/sec: 100873.46, flops:105.88, batch-reuse:1
@ 3813 train 4.2236 , allloss: 4.2370, dt: 1249.51ms, fracRes: 0.4229, norm(attn): 0.2041, norm(output): 0.2637, norm(x): 0.4653, norm(y): 0.9919, norm:1.2099, tok/sec: 104899.10, flops:110.11, batch-reuse:1
@ 3814 train 4.4030 , allloss: 4.4156, dt: 1306.54ms, fracRes: 0.4202, norm(attn): 0.2031, norm(output): 0.2637, norm(x): 0.4632, norm(y): 0.9919, norm:1.2893, tok/sec: 100319.80, flops:105.30, batch-reuse:1
@ 3815 train 4.3456 , allloss: 4.3589, dt: 1255.49ms, fracRes: 0.4236, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4718, norm(y): 0.9919, norm:1.3974, tok/sec: 104398.84, flops:109.58, batch-reuse:1
@ 3816 train 4.4043 , allloss: 4.4171, dt: 1261.96ms, fracRes: 0.4207, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4683, norm(y): 0.9920, norm:1.4762, tok/sec: 103863.75, flops:109.02, batch-reuse:1
@ 3817 train 4.3854 , allloss: 4.3990, dt: 1252.40ms, fracRes: 0.4211, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4640, norm(y): 0.9920, norm:1.3042, tok/sec: 104656.88, flops:109.85, batch-reuse:1
@ 3818 train 4.4039 , allloss: 4.4171, dt: 1268.60ms, fracRes: 0.4218, norm(attn): 0.2021, norm(output): 0.2637, norm(x): 0.4648, norm(y): 0.9919, norm:1.2522, tok/sec: 103319.96, flops:108.45, batch-reuse:1
@ 3819 train 4.3728 , allloss: 4.3862, dt: 1262.21ms, fracRes: 0.4224, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4702, norm(y): 0.9917, norm:1.2918, tok/sec: 103843.35, flops:109.00, batch-reuse:1
@ 3820 train 4.4320 , allloss: 4.4449, dt: 1268.87ms, fracRes: 0.4213, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4694, norm(y): 0.9918, norm:1.3031, tok/sec: 103297.83, flops:108.42, batch-reuse:1
@ 3821 train 4.4450 , allloss: 4.4581, dt: 1280.80ms, fracRes: 0.4229, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4703, norm(y): 0.9920, norm:1.3943, tok/sec: 102336.15, flops:107.42, batch-reuse:1
@ 3822 train 4.3083 , allloss: 4.3216, dt: 1278.42ms, fracRes: 0.4221, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4684, norm(y): 0.9920, norm:1.2890, tok/sec: 102526.21, flops:107.61, batch-reuse:1
@ 3823 train 4.3917 , allloss: 4.4045, dt: 1249.90ms, fracRes: 0.4218, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4700, norm(y): 0.9918, norm:1.2978, tok/sec: 104865.74, flops:110.07, batch-reuse:1
@ 3824 train 4.3244 , allloss: 4.3373, dt: 1268.70ms, fracRes: 0.4202, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4676, norm(y): 0.9917, norm:1.2421, tok/sec: 103312.41, flops:108.44, batch-reuse:1
@ 3825 train 4.3316 , allloss: 4.3446, dt: 1266.06ms, fracRes: 0.4211, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4720, norm(y): 0.9918, norm:1.3199, tok/sec: 103527.47, flops:108.67, batch-reuse:1
@ 3826 train 4.3955 , allloss: 4.4079, dt: 1298.46ms, fracRes: 0.4200, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4680, norm(y): 0.9920, norm:1.4328, tok/sec: 100944.42, flops:105.95, batch-reuse:1
@ 3827 train 4.3532 , allloss: 4.3663, dt: 1260.16ms, fracRes: 0.4211, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4708, norm(y): 0.9919, norm:1.3350, tok/sec: 104011.96, flops:109.17, batch-reuse:1
@ 3828 train 4.3159 , allloss: 4.3288, dt: 1249.28ms, fracRes: 0.4203, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4701, norm(y): 0.9918, norm:1.3638, tok/sec: 104917.71, flops:110.12, batch-reuse:1
@ 3829 train 4.3648 , allloss: 4.3776, dt: 1279.46ms, fracRes: 0.4216, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4700, norm(y): 0.9918, norm:1.2408, tok/sec: 102443.30, flops:107.53, batch-reuse:1
@ 3830 train 4.4211 , allloss: 4.4335, dt: 1285.91ms, fracRes: 0.4242, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4772, norm(y): 0.9918, norm:1.6713, tok/sec: 101929.49, flops:106.99, batch-reuse:1
@ 3831 train 4.2455 , allloss: 4.2580, dt: 1254.03ms, fracRes: 0.4227, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4715, norm(y): 0.9918, norm:1.3350, tok/sec: 104520.49, flops:109.71, batch-reuse:1
@ 3832 train 4.2668 , allloss: 4.2813, dt: 1262.11ms, fracRes: 0.4255, norm(attn): 0.2021, norm(output): 0.2676, norm(x): 0.4797, norm(y): 0.9919, norm:1.6030, tok/sec: 103851.47, flops:109.01, batch-reuse:1
@ 3833 train 4.3265 , allloss: 4.3398, dt: 1284.19ms, fracRes: 0.4231, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4717, norm(y): 0.9920, norm:1.4191, tok/sec: 102065.75, flops:107.13, batch-reuse:1
@ 3834 train 4.3537 , allloss: 4.3669, dt: 1265.76ms, fracRes: 0.4210, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4696, norm(y): 0.9919, norm:1.3868, tok/sec: 103551.77, flops:108.69, batch-reuse:1
@ 3835 train 4.2798 , allloss: 4.2939, dt: 1293.31ms, fracRes: 0.4231, norm(attn): 0.2051, norm(output): 0.2656, norm(x): 0.4751, norm(y): 0.9918, norm:1.5556, tok/sec: 101346.54, flops:106.38, batch-reuse:1
@ 3836 train 4.3410 , allloss: 4.3541, dt: 1281.93ms, fracRes: 0.4209, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4708, norm(y): 0.9917, norm:1.4569, tok/sec: 102246.03, flops:107.32, batch-reuse:1
@ 3837 train 4.4544 , allloss: 4.4674, dt: 1284.33ms, fracRes: 0.4217, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4704, norm(y): 0.9918, norm:1.4044, tok/sec: 102054.53, flops:107.12, batch-reuse:1
@ 3838 train 4.3247 , allloss: 4.3370, dt: 1277.13ms, fracRes: 0.4219, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4696, norm(y): 0.9919, norm:1.3482, tok/sec: 102629.82, flops:107.72, batch-reuse:1
@ 3839 train 4.3288 , allloss: 4.3448, dt: 1251.40ms, fracRes: 0.4221, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4717, norm(y): 0.9919, norm:1.6750, tok/sec: 104740.31, flops:109.94, batch-reuse:1
@ 3840 train 4.4475 , allloss: 4.4608, dt: 1267.22ms, fracRes: 0.4239, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4729, norm(y): 0.9919, norm:1.3140, tok/sec: 103432.81, flops:108.57, batch-reuse:1
@ 3841 train 4.3527 , allloss: 4.3653, dt: 1248.60ms, fracRes: 0.4216, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4661, norm(y): 0.9919, norm:1.2788, tok/sec: 104975.49, flops:110.19, batch-reuse:1
@ 3842 train 4.2917 , allloss: 4.3043, dt: 1254.95ms, fracRes: 0.4192, norm(attn): 0.2051, norm(output): 0.2617, norm(x): 0.4537, norm(y): 0.9918, norm:1.6622, tok/sec: 104443.92, flops:109.63, batch-reuse:1
@ 3843 train 4.4021 , allloss: 4.4150, dt: 1239.62ms, fracRes: 0.4238, norm(attn): 0.2012, norm(output): 0.2617, norm(x): 0.4661, norm(y): 0.9917, norm:1.6938, tok/sec: 105735.73, flops:110.98, batch-reuse:1
@ 3844 train 4.3303 , allloss: 4.3430, dt: 1268.09ms, fracRes: 0.4234, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4705, norm(y): 0.9917, norm:1.3880, tok/sec: 103361.57, flops:108.49, batch-reuse:1
@ 3845 train 4.3066 , allloss: 4.3198, dt: 1247.31ms, fracRes: 0.4249, norm(attn): 0.2021, norm(output): 0.2676, norm(x): 0.4739, norm(y): 0.9918, norm:1.4746, tok/sec: 105083.59, flops:110.30, batch-reuse:1
@ 3846 train 4.1406 , allloss: 4.1544, dt: 1274.81ms, fracRes: 0.4260, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4751, norm(y): 0.9919, norm:1.7649, tok/sec: 102816.85, flops:107.92, batch-reuse:1
@ 3847 train 4.4205 , allloss: 4.4330, dt: 1278.13ms, fracRes: 0.4247, norm(attn): 0.1992, norm(output): 0.2656, norm(x): 0.4746, norm(y): 0.9919, norm:1.4926, tok/sec: 102549.55, flops:107.64, batch-reuse:1
@ 3848 train 4.3110 , allloss: 4.3237, dt: 1268.27ms, fracRes: 0.4240, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4716, norm(y): 0.9919, norm:1.2876, tok/sec: 103347.45, flops:108.48, batch-reuse:1
@ 3849 train 4.2222 , allloss: 4.2347, dt: 1275.17ms, fracRes: 0.4242, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4728, norm(y): 0.9918, norm:1.6534, tok/sec: 102788.24, flops:107.89, batch-reuse:1
@ 3850 train 4.3080 , allloss: 4.3203, dt: 1261.39ms, fracRes: 0.4244, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4736, norm(y): 0.9917, norm:1.4311, tok/sec: 103910.39, flops:109.07, batch-reuse:1
@ 3851 train 4.2797 , allloss: 4.2926, dt: 1257.81ms, fracRes: 0.4236, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4711, norm(y): 0.9917, norm:1.2738, tok/sec: 104206.67, flops:109.38, batch-reuse:1
@ 3852 train 4.2189 , allloss: 4.2318, dt: 1239.09ms, fracRes: 0.4248, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4732, norm(y): 0.9918, norm:1.4011, tok/sec: 105780.65, flops:111.03, batch-reuse:1
@ 3853 train 4.2904 , allloss: 4.3027, dt: 1258.08ms, fracRes: 0.4258, norm(attn): 0.1992, norm(output): 0.2656, norm(x): 0.4743, norm(y): 0.9919, norm:1.3760, tok/sec: 104183.82, flops:109.35, batch-reuse:1
@ 3854 train 4.2615 , allloss: 4.2736, dt: 1279.02ms, fracRes: 0.4253, norm(attn): 0.1992, norm(output): 0.2637, norm(x): 0.4701, norm(y): 0.9919, norm:1.2354, tok/sec: 102478.80, flops:107.57, batch-reuse:1
@ 3855 train 4.1840 , allloss: 4.1964, dt: 1287.72ms, fracRes: 0.4256, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4699, norm(y): 0.9918, norm:1.1961, tok/sec: 101786.29, flops:106.84, batch-reuse:1
@ 3856 train 4.2329 , allloss: 4.2453, dt: 1279.39ms, fracRes: 0.4247, norm(attn): 0.2012, norm(output): 0.2637, norm(x): 0.4679, norm(y): 0.9919, norm:1.3793, tok/sec: 102448.91, flops:107.53, batch-reuse:1
@ 3857 train 4.1292 , allloss: 4.1416, dt: 1245.02ms, fracRes: 0.4253, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4726, norm(y): 0.9919, norm:1.4524, tok/sec: 105277.31, flops:110.50, batch-reuse:1
@ 3858 train 4.2455 , allloss: 4.2582, dt: 1283.16ms, fracRes: 0.4245, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4709, norm(y): 0.9918, norm:1.5604, tok/sec: 102147.45, flops:107.22, batch-reuse:1
@ 3859 train 4.2000 , allloss: 4.2128, dt: 1277.26ms, fracRes: 0.4223, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4664, norm(y): 0.9919, norm:1.2750, tok/sec: 102619.84, flops:107.71, batch-reuse:1
@ 3860 train 4.2977 , allloss: 4.3107, dt: 1277.81ms, fracRes: 0.4266, norm(attn): 0.2002, norm(output): 0.2656, norm(x): 0.4767, norm(y): 0.9919, norm:1.6185, tok/sec: 102575.44, flops:107.67, batch-reuse:1
@ 3861 train 4.3053 , allloss: 4.3180, dt: 1236.06ms, fracRes: 0.4236, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4749, norm(y): 0.9918, norm:1.3618, tok/sec: 106040.25, flops:111.30, batch-reuse:1
@ 3862 train 4.2945 , allloss: 4.3069, dt: 1278.00ms, fracRes: 0.4224, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4714, norm(y): 0.9917, norm:1.3840, tok/sec: 102560.01, flops:107.65, batch-reuse:1
@ 3863 train 4.3001 , allloss: 4.3121, dt: 1258.61ms, fracRes: 0.4231, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4742, norm(y): 0.9918, norm:1.3974, tok/sec: 104139.93, flops:109.31, batch-reuse:1
@ 3864 train 4.2553 , allloss: 4.2675, dt: 1273.51ms, fracRes: 0.4213, norm(attn): 0.2041, norm(output): 0.2676, norm(x): 0.4730, norm(y): 0.9918, norm:1.1594, tok/sec: 102922.16, flops:108.03, batch-reuse:1
@ 3865 train 4.3229 , allloss: 4.3351, dt: 1265.55ms, fracRes: 0.4216, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4712, norm(y): 0.9919, norm:1.3608, tok/sec: 103568.97, flops:108.71, batch-reuse:1
@ 3866 train 4.2307 , allloss: 4.2449, dt: 1266.27ms, fracRes: 0.4220, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4738, norm(y): 0.9919, norm:1.3792, tok/sec: 103510.16, flops:108.65, batch-reuse:1
@ 3867 train 4.2037 , allloss: 4.2172, dt: 1274.42ms, fracRes: 0.4212, norm(attn): 0.2041, norm(output): 0.2676, norm(x): 0.4745, norm(y): 0.9917, norm:1.1511, tok/sec: 102848.24, flops:107.95, batch-reuse:1
@ 3868 train 4.1517 , allloss: 4.1637, dt: 1286.33ms, fracRes: 0.4207, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4707, norm(y): 0.9917, norm:1.3414, tok/sec: 101896.40, flops:106.95, batch-reuse:1
@ 3869 train 4.1697 , allloss: 4.1822, dt: 1262.17ms, fracRes: 0.4235, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4775, norm(y): 0.9918, norm:1.3310, tok/sec: 103846.70, flops:109.00, batch-reuse:1
@ 3870 train 4.2048 , allloss: 4.2167, dt: 1254.05ms, fracRes: 0.4207, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4729, norm(y): 0.9919, norm:1.2280, tok/sec: 104519.08, flops:109.71, batch-reuse:1
@ 3871 train 4.3071 , allloss: 4.3190, dt: 1265.35ms, fracRes: 0.4204, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4743, norm(y): 0.9918, norm:1.5558, tok/sec: 103585.31, flops:108.73, batch-reuse:1
@ 3872 train 4.3086 , allloss: 4.3213, dt: 1263.31ms, fracRes: 0.4202, norm(attn): 0.2051, norm(output): 0.2676, norm(x): 0.4727, norm(y): 0.9917, norm:1.3378, tok/sec: 103752.45, flops:108.90, batch-reuse:1
@ 3873 train 4.2454 , allloss: 4.2577, dt: 1275.78ms, fracRes: 0.4212, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4708, norm(y): 0.9918, norm:1.5199, tok/sec: 102738.64, flops:107.84, batch-reuse:1
@ 3874 train 4.2427 , allloss: 4.2549, dt: 1256.76ms, fracRes: 0.4215, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4725, norm(y): 0.9918, norm:1.2553, tok/sec: 104293.39, flops:109.47, batch-reuse:1
@ 3875 train 4.2069 , allloss: 4.2192, dt: 1255.55ms, fracRes: 0.4223, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4706, norm(y): 0.9917, norm:1.3577, tok/sec: 104394.49, flops:109.58, batch-reuse:1
@ 3876 train 4.2409 , allloss: 4.2540, dt: 1284.99ms, fracRes: 0.4241, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4728, norm(y): 0.9917, norm:1.3087, tok/sec: 102002.04, flops:107.06, batch-reuse:1
@ 3877 train 4.2911 , allloss: 4.3038, dt: 1254.06ms, fracRes: 0.4240, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4752, norm(y): 0.9917, norm:1.2669, tok/sec: 104517.88, flops:109.71, batch-reuse:1
@ 3878 train 4.2024 , allloss: 4.2145, dt: 1278.46ms, fracRes: 0.4249, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4729, norm(y): 0.9920, norm:1.3253, tok/sec: 102523.19, flops:107.61, batch-reuse:1
@ 3879 train 4.2637 , allloss: 4.2761, dt: 1270.77ms, fracRes: 0.4258, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4751, norm(y): 0.9919, norm:1.5154, tok/sec: 103144.16, flops:108.26, batch-reuse:1
@ 3880 train 4.3820 , allloss: 4.3948, dt: 1283.67ms, fracRes: 0.4245, norm(attn): 0.2021, norm(output): 0.2676, norm(x): 0.4772, norm(y): 0.9919, norm:1.2876, tok/sec: 102107.40, flops:107.18, batch-reuse:1
@ 3881 train 4.2809 , allloss: 4.2930, dt: 1252.55ms, fracRes: 0.4239, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4741, norm(y): 0.9918, norm:1.2257, tok/sec: 104644.10, flops:109.84, batch-reuse:1
@ 3882 train 4.2559 , allloss: 4.2676, dt: 1268.53ms, fracRes: 0.4221, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4732, norm(y): 0.9917, norm:1.2386, tok/sec: 103326.08, flops:108.45, batch-reuse:1
@ 3883 train 4.1768 , allloss: 4.1888, dt: 1245.37ms, fracRes: 0.4237, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4738, norm(y): 0.9918, norm:1.2925, tok/sec: 105247.61, flops:110.47, batch-reuse:1
@ 3884 train 4.2634 , allloss: 4.2755, dt: 1267.30ms, fracRes: 0.4234, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4739, norm(y): 0.9919, norm:1.3326, tok/sec: 103426.52, flops:108.56, batch-reuse:1
@ 3885 train 4.3404 , allloss: 4.3525, dt: 1281.28ms, fracRes: 0.4234, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4736, norm(y): 0.9918, norm:1.4768, tok/sec: 102297.72, flops:107.37, batch-reuse:1
@ 3886 train 4.2408 , allloss: 4.2533, dt: 1256.36ms, fracRes: 0.4223, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4733, norm(y): 0.9918, norm:1.3911, tok/sec: 104326.38, flops:109.50, batch-reuse:1
@ 3887 train 4.2279 , allloss: 4.2401, dt: 1272.08ms, fracRes: 0.4211, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4716, norm(y): 0.9917, norm:1.3614, tok/sec: 103037.34, flops:108.15, batch-reuse:1
@ 3888 train 4.3329 , allloss: 4.3453, dt: 1289.48ms, fracRes: 0.4197, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4701, norm(y): 0.9917, norm:1.5307, tok/sec: 101647.20, flops:106.69, batch-reuse:1
@ 3889 train 4.2683 , allloss: 4.2816, dt: 1304.25ms, fracRes: 0.4206, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4733, norm(y): 0.9918, norm:1.1729, tok/sec: 100496.22, flops:105.48, batch-reuse:1
@ 3890 train 4.2645 , allloss: 4.2804, dt: 1286.81ms, fracRes: 0.4242, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4805, norm(y): 0.9918, norm:1.4980, tok/sec: 101858.22, flops:106.91, batch-reuse:1
@ 3891 train 4.1630 , allloss: 4.1766, dt: 1246.00ms, fracRes: 0.4206, norm(attn): 0.2041, norm(output): 0.2676, norm(x): 0.4721, norm(y): 0.9918, norm:1.3472, tok/sec: 105193.94, flops:110.41, batch-reuse:1
@ 3892 train 4.2832 , allloss: 4.2955, dt: 1268.43ms, fracRes: 0.4222, norm(attn): 0.2021, norm(output): 0.2676, norm(x): 0.4738, norm(y): 0.9918, norm:1.2685, tok/sec: 103333.85, flops:108.46, batch-reuse:1
@ 3893 train 4.2976 , allloss: 4.3102, dt: 1243.35ms, fracRes: 0.4204, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4717, norm(y): 0.9918, norm:1.3314, tok/sec: 105418.22, flops:110.65, batch-reuse:1
@ 3894 train 4.4638 , allloss: 4.4763, dt: 1285.51ms, fracRes: 0.4222, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4794, norm(y): 0.9918, norm:1.2840, tok/sec: 101961.48, flops:107.02, batch-reuse:1
@ 3895 train 4.4111 , allloss: 4.4234, dt: 1275.99ms, fracRes: 0.4214, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4732, norm(y): 0.9917, norm:1.3068, tok/sec: 102721.69, flops:107.82, batch-reuse:1
@ 3896 train 4.3900 , allloss: 4.4030, dt: 1266.15ms, fracRes: 0.4232, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4763, norm(y): 0.9917, norm:1.3348, tok/sec: 103520.32, flops:108.66, batch-reuse:1
@ 3897 train 4.3568 , allloss: 4.3709, dt: 1245.51ms, fracRes: 0.4235, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4740, norm(y): 0.9917, norm:1.1711, tok/sec: 105235.38, flops:110.46, batch-reuse:1
@ 3898 train 4.5097 , allloss: 4.5223, dt: 1250.61ms, fracRes: 0.4246, norm(attn): 0.2021, norm(output): 0.2676, norm(x): 0.4776, norm(y): 0.9918, norm:1.3847, tok/sec: 104806.39, flops:110.01, batch-reuse:1
@ 3899 train 4.4143 , allloss: 4.4264, dt: 1254.36ms, fracRes: 0.4236, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4739, norm(y): 0.9919, norm:1.2676, tok/sec: 104493.11, flops:109.68, batch-reuse:1
@ 3900 train 4.3402 , allloss: 4.3523, dt: 1252.56ms, fracRes: 0.4246, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4785, norm(y): 0.9918, norm:1.2093, tok/sec: 104643.52, flops:109.84, batch-reuse:1
@ 3901 train 4.4046 , allloss: 4.4176, dt: 1287.82ms, fracRes: 0.4241, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4786, norm(y): 0.9917, norm:1.2152, tok/sec: 101778.06, flops:106.83, batch-reuse:1
@ 3902 train 4.3195 , allloss: 4.3324, dt: 1248.53ms, fracRes: 0.4241, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4752, norm(y): 0.9917, norm:1.2002, tok/sec: 104980.90, flops:110.19, batch-reuse:1
@ 3903 train 4.3073 , allloss: 4.3199, dt: 1279.82ms, fracRes: 0.4235, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4753, norm(y): 0.9917, norm:1.4623, tok/sec: 102414.60, flops:107.50, batch-reuse:1
@ 3904 train 4.5039 , allloss: 4.5166, dt: 1267.36ms, fracRes: 0.4235, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4738, norm(y): 0.9917, norm:1.3975, tok/sec: 103421.19, flops:108.55, batch-reuse:1
@ 3905 train 4.4492 , allloss: 4.4612, dt: 1262.27ms, fracRes: 0.4233, norm(attn): 0.2051, norm(output): 0.2695, norm(x): 0.4765, norm(y): 0.9918, norm:1.5784, tok/sec: 103838.19, flops:108.99, batch-reuse:1
@ 3906 train 4.4832 , allloss: 4.4951, dt: 1265.28ms, fracRes: 0.4227, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4735, norm(y): 0.9918, norm:1.2442, tok/sec: 103591.59, flops:108.73, batch-reuse:1
@ 3907 train 4.4226 , allloss: 4.4351, dt: 1280.12ms, fracRes: 0.4220, norm(attn): 0.2051, norm(output): 0.2656, norm(x): 0.4749, norm(y): 0.9917, norm:1.3091, tok/sec: 102390.20, flops:107.47, batch-reuse:1
@ 3908 train 4.4189 , allloss: 4.4318, dt: 1273.46ms, fracRes: 0.4203, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4687, norm(y): 0.9917, norm:1.2317, tok/sec: 102926.28, flops:108.03, batch-reuse:1
@ 3909 train 4.3647 , allloss: 4.3773, dt: 1276.11ms, fracRes: 0.4192, norm(attn): 0.2061, norm(output): 0.2656, norm(x): 0.4672, norm(y): 0.9918, norm:1.5362, tok/sec: 102712.33, flops:107.81, batch-reuse:1
@ 3910 train 4.4676 , allloss: 4.4797, dt: 1272.21ms, fracRes: 0.4216, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4736, norm(y): 0.9917, norm:1.1902, tok/sec: 103026.66, flops:108.14, batch-reuse:1
@ 3911 train 4.4570 , allloss: 4.4691, dt: 1283.19ms, fracRes: 0.4222, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4725, norm(y): 0.9917, norm:1.3964, tok/sec: 102145.49, flops:107.22, batch-reuse:1
@ 3912 train 4.3519 , allloss: 4.3640, dt: 1254.66ms, fracRes: 0.4232, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4744, norm(y): 0.9917, norm:1.2343, tok/sec: 104468.05, flops:109.65, batch-reuse:1
@ 3913 train 4.4543 , allloss: 4.4666, dt: 1268.84ms, fracRes: 0.4255, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4786, norm(y): 0.9917, norm:1.2156, tok/sec: 103300.37, flops:108.43, batch-reuse:1
@ 3914 train 4.4718 , allloss: 4.4840, dt: 1260.41ms, fracRes: 0.4254, norm(attn): 0.2012, norm(output): 0.2656, norm(x): 0.4757, norm(y): 0.9918, norm:1.2080, tok/sec: 103991.36, flops:109.15, batch-reuse:1
@ 3915 train 4.4330 , allloss: 4.4456, dt: 1248.55ms, fracRes: 0.4259, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4760, norm(y): 0.9918, norm:1.2956, tok/sec: 104979.44, flops:110.19, batch-reuse:1
@ 3916 train 4.4868 , allloss: 4.4992, dt: 1249.49ms, fracRes: 0.4256, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4768, norm(y): 0.9918, norm:1.2727, tok/sec: 104900.18, flops:110.11, batch-reuse:1
@ 3917 train 4.5598 , allloss: 4.5721, dt: 1289.18ms, fracRes: 0.4249, norm(attn): 0.2021, norm(output): 0.2676, norm(x): 0.4773, norm(y): 0.9917, norm:1.2439, tok/sec: 101670.64, flops:106.72, batch-reuse:1
@ 3918 train 4.4037 , allloss: 4.4159, dt: 1238.99ms, fracRes: 0.4238, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4798, norm(y): 0.9917, norm:1.3697, tok/sec: 105789.20, flops:111.04, batch-reuse:1
@ 3919 train 4.4349 , allloss: 4.4474, dt: 1256.15ms, fracRes: 0.4220, norm(attn): 0.2041, norm(output): 0.2676, norm(x): 0.4757, norm(y): 0.9916, norm:1.2612, tok/sec: 104344.11, flops:109.52, batch-reuse:1
@ 3920 train 4.3875 , allloss: 4.4002, dt: 1246.59ms, fracRes: 0.4219, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4742, norm(y): 0.9917, norm:1.5589, tok/sec: 105144.56, flops:110.36, batch-reuse:1
@ 3921 train 4.4688 , allloss: 4.4814, dt: 1253.23ms, fracRes: 0.4219, norm(attn): 0.2021, norm(output): 0.2695, norm(x): 0.4797, norm(y): 0.9917, norm:1.4725, tok/sec: 104586.96, flops:109.78, batch-reuse:1
@ 3922 train 4.4225 , allloss: 4.4347, dt: 1237.29ms, fracRes: 0.4209, norm(attn): 0.2021, norm(output): 0.2695, norm(x): 0.4799, norm(y): 0.9917, norm:1.4461, tok/sec: 105934.94, flops:111.19, batch-reuse:1
@ 3923 train 4.3811 , allloss: 4.3931, dt: 1267.53ms, fracRes: 0.4192, norm(attn): 0.2021, norm(output): 0.2695, norm(x): 0.4745, norm(y): 0.9917, norm:1.3133, tok/sec: 103407.57, flops:108.54, batch-reuse:1
@ 3924 train 4.4530 , allloss: 4.4651, dt: 1282.45ms, fracRes: 0.4212, norm(attn): 0.2021, norm(output): 0.2695, norm(x): 0.4768, norm(y): 0.9917, norm:1.6457, tok/sec: 102204.07, flops:107.28, batch-reuse:1
@ 3925 train 4.4980 , allloss: 4.5104, dt: 1259.35ms, fracRes: 0.4229, norm(attn): 0.2021, norm(output): 0.2695, norm(x): 0.4778, norm(y): 0.9916, norm:1.4549, tok/sec: 104079.08, flops:109.24, batch-reuse:1
@ 3926 train 4.4196 , allloss: 4.4319, dt: 1261.22ms, fracRes: 0.4241, norm(attn): 0.2021, norm(output): 0.2676, norm(x): 0.4769, norm(y): 0.9917, norm:1.1887, tok/sec: 103924.38, flops:109.08, batch-reuse:1
@ 3927 train 4.3589 , allloss: 4.3709, dt: 1262.96ms, fracRes: 0.4255, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4778, norm(y): 0.9917, norm:1.3129, tok/sec: 103781.64, flops:108.93, batch-reuse:1
@ 3928 train 4.3814 , allloss: 4.3934, dt: 1253.91ms, fracRes: 0.4247, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4768, norm(y): 0.9918, norm:1.4282, tok/sec: 104530.92, flops:109.72, batch-reuse:1
@ 3929 train 4.3676 , allloss: 4.3801, dt: 1280.64ms, fracRes: 0.4274, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4828, norm(y): 0.9919, norm:1.2034, tok/sec: 102348.97, flops:107.43, batch-reuse:1
@ 3930 train 4.4088 , allloss: 4.4241, dt: 1285.10ms, fracRes: 0.4279, norm(attn): 0.2021, norm(output): 0.2695, norm(x): 0.4826, norm(y): 0.9919, norm:1.2992, tok/sec: 101993.24, flops:107.06, batch-reuse:1
@ 3931 train 4.3365 , allloss: 4.3491, dt: 1253.77ms, fracRes: 0.4257, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4743, norm(y): 0.9917, norm:1.2688, tok/sec: 104542.59, flops:109.73, batch-reuse:1
@ 3932 train 4.3366 , allloss: 4.3496, dt: 1266.89ms, fracRes: 0.4263, norm(attn): 0.2051, norm(output): 0.2676, norm(x): 0.4800, norm(y): 0.9915, norm:1.2799, tok/sec: 103459.45, flops:108.59, batch-reuse:1
@ 3933 train 4.4223 , allloss: 4.4347, dt: 1263.20ms, fracRes: 0.4260, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4809, norm(y): 0.9917, norm:1.3609, tok/sec: 103761.75, flops:108.91, batch-reuse:1
@ 3934 train 4.4465 , allloss: 4.4587, dt: 1258.12ms, fracRes: 0.4244, norm(attn): 0.2012, norm(output): 0.2676, norm(x): 0.4761, norm(y): 0.9919, norm:1.3362, tok/sec: 104180.66, flops:109.35, batch-reuse:1
@ 3935 train 4.4342 , allloss: 4.4463, dt: 1289.52ms, fracRes: 0.4240, norm(attn): 0.2021, norm(output): 0.2695, norm(x): 0.4812, norm(y): 0.9918, norm:1.2439, tok/sec: 101644.00, flops:106.69, batch-reuse:1
@ 3936 train 4.3969 , allloss: 4.4089, dt: 1264.51ms, fracRes: 0.4240, norm(attn): 0.2021, norm(output): 0.2656, norm(x): 0.4792, norm(y): 0.9918, norm:1.3553, tok/sec: 103654.56, flops:108.80, batch-reuse:1
@ 3937 train 4.4059 , allloss: 4.4183, dt: 1291.43ms, fracRes: 0.4227, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4802, norm(y): 0.9917, norm:1.2641, tok/sec: 101493.96, flops:106.53, batch-reuse:1
@ 3938 train 4.3376 , allloss: 4.3506, dt: 1270.09ms, fracRes: 0.4216, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4791, norm(y): 0.9916, norm:1.2457, tok/sec: 103198.61, flops:108.32, batch-reuse:1
@ 3939 train 4.4309 , allloss: 4.4443, dt: 1250.87ms, fracRes: 0.4239, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4828, norm(y): 0.9917, norm:1.3704, tok/sec: 104784.75, flops:109.99, batch-reuse:1
@ 3940 train 4.3879 , allloss: 4.4001, dt: 1282.17ms, fracRes: 0.4210, norm(attn): 0.2031, norm(output): 0.2656, norm(x): 0.4712, norm(y): 0.9917, norm:1.5076, tok/sec: 102226.78, flops:107.30, batch-reuse:1
@ 3941 train 4.3816 , allloss: 4.3938, dt: 1258.04ms, fracRes: 0.4221, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4801, norm(y): 0.9917, norm:1.3757, tok/sec: 104187.47, flops:109.36, batch-reuse:1
@ 3942 train 4.3329 , allloss: 4.3450, dt: 1272.45ms, fracRes: 0.4214, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4762, norm(y): 0.9916, norm:1.3314, tok/sec: 103007.80, flops:108.12, batch-reuse:1
@ 3943 train 4.4081 , allloss: 4.4200, dt: 1258.52ms, fracRes: 0.4217, norm(attn): 0.2041, norm(output): 0.2656, norm(x): 0.4766, norm(y): 0.9917, norm:1.3219, tok/sec: 104147.32, flops:109.32, batch-reuse:1
@ 3944 train 4.2694 , allloss: 4.2836, dt: 1270.17ms, fracRes: 0.4238, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4831, norm(y): 0.9917, norm:1.3834, tok/sec: 103192.51, flops:108.31, batch-reuse:1
@ 3945 train 4.5123 , allloss: 4.5268, dt: 1282.99ms, fracRes: 0.4242, norm(attn): 0.2012, norm(output): 0.2695, norm(x): 0.4803, norm(y): 0.9917, norm:1.4117, tok/sec: 102161.21, flops:107.23, batch-reuse:1
@ 3946 train 4.3471 , allloss: 4.3591, dt: 1276.61ms, fracRes: 0.4254, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4817, norm(y): 0.9917, norm:1.4053, tok/sec: 102672.02, flops:107.77, batch-reuse:1
@ 3947 train 4.3645 , allloss: 4.3767, dt: 1277.45ms, fracRes: 0.4250, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4796, norm(y): 0.9917, norm:1.2210, tok/sec: 102604.38, flops:107.70, batch-reuse:1
@ 3948 train 4.3793 , allloss: 4.3918, dt: 1253.07ms, fracRes: 0.4235, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4783, norm(y): 0.9916, norm:1.3329, tok/sec: 104600.57, flops:109.79, batch-reuse:1
@ 3949 train 4.3619 , allloss: 4.3740, dt: 1266.43ms, fracRes: 0.4243, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4777, norm(y): 0.9917, norm:1.3237, tok/sec: 103497.57, flops:108.63, batch-reuse:1
@ 3950 train 4.4172 , allloss: 4.4290, dt: 1263.33ms, fracRes: 0.4244, norm(attn): 0.2012, norm(output): 0.2676, norm(x): 0.4765, norm(y): 0.9918, norm:1.3751, tok/sec: 103751.22, flops:108.90, batch-reuse:1
@ 3951 train 4.3653 , allloss: 4.3773, dt: 1270.73ms, fracRes: 0.4249, norm(attn): 0.2012, norm(output): 0.2695, norm(x): 0.4768, norm(y): 0.9917, norm:1.3342, tok/sec: 103146.83, flops:108.27, batch-reuse:1
@ 3952 train 4.4168 , allloss: 4.4293, dt: 1261.91ms, fracRes: 0.4248, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4784, norm(y): 0.9917, norm:1.2910, tok/sec: 103868.18, flops:109.02, batch-reuse:1
@ 3953 train 4.4589 , allloss: 4.4712, dt: 1270.17ms, fracRes: 0.4257, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4847, norm(y): 0.9916, norm:1.4086, tok/sec: 103192.64, flops:108.31, batch-reuse:1
@ 3954 train 4.4311 , allloss: 4.4430, dt: 1266.57ms, fracRes: 0.4245, norm(attn): 0.2012, norm(output): 0.2695, norm(x): 0.4799, norm(y): 0.9917, norm:1.4831, tok/sec: 103485.96, flops:108.62, batch-reuse:1
@ 3955 train 4.3624 , allloss: 4.3741, dt: 1266.84ms, fracRes: 0.4256, norm(attn): 0.2021, norm(output): 0.2695, norm(x): 0.4806, norm(y): 0.9918, norm:1.4107, tok/sec: 103463.48, flops:108.60, batch-reuse:1
@ 3956 train 4.3213 , allloss: 4.3353, dt: 1288.42ms, fracRes: 0.4257, norm(attn): 0.2021, norm(output): 0.2734, norm(x): 0.4846, norm(y): 0.9917, norm:1.5080, tok/sec: 101730.47, flops:106.78, batch-reuse:1
@ 3957 train 4.4131 , allloss: 4.4252, dt: 1256.29ms, fracRes: 0.4249, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4815, norm(y): 0.9917, norm:1.4191, tok/sec: 104332.52, flops:109.51, batch-reuse:1
@ 3958 train 4.3845 , allloss: 4.3972, dt: 1265.24ms, fracRes: 0.4246, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4784, norm(y): 0.9916, norm:1.2024, tok/sec: 103594.85, flops:108.74, batch-reuse:1
@ 3959 train 4.4433 , allloss: 4.4563, dt: 1271.04ms, fracRes: 0.4271, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4854, norm(y): 0.9916, norm:1.5929, tok/sec: 103121.78, flops:108.24, batch-reuse:1
@ 3960 train 4.3580 , allloss: 4.3700, dt: 1261.13ms, fracRes: 0.4224, norm(attn): 0.2061, norm(output): 0.2695, norm(x): 0.4764, norm(y): 0.9915, norm:1.3462, tok/sec: 103932.00, flops:109.09, batch-reuse:1
@ 3961 train 4.3448 , allloss: 4.3567, dt: 1279.72ms, fracRes: 0.4216, norm(attn): 0.2061, norm(output): 0.2734, norm(x): 0.4798, norm(y): 0.9916, norm:1.3319, tok/sec: 102422.02, flops:107.51, batch-reuse:1
@ 3962 train 4.4228 , allloss: 4.4352, dt: 1265.24ms, fracRes: 0.4227, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4806, norm(y): 0.9916, norm:1.4183, tok/sec: 103594.85, flops:108.74, batch-reuse:1
@ 3963 train 4.3607 , allloss: 4.3728, dt: 1260.07ms, fracRes: 0.4220, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4782, norm(y): 0.9916, norm:1.4312, tok/sec: 104020.00, flops:109.18, batch-reuse:1
@ 3964 train 4.3418 , allloss: 4.3538, dt: 1239.15ms, fracRes: 0.4235, norm(attn): 0.2031, norm(output): 0.2715, norm(x): 0.4820, norm(y): 0.9916, norm:1.3268, tok/sec: 105775.79, flops:111.03, batch-reuse:1
@ 3965 train 4.3658 , allloss: 4.3782, dt: 1260.39ms, fracRes: 0.4262, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4823, norm(y): 0.9916, norm:1.3930, tok/sec: 103992.95, flops:109.15, batch-reuse:1
@ 3966 train 4.4372 , allloss: 4.4494, dt: 1265.14ms, fracRes: 0.4247, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4801, norm(y): 0.9916, norm:1.5972, tok/sec: 103602.54, flops:108.74, batch-reuse:1
@ 3967 train 4.4471 , allloss: 4.4595, dt: 1270.68ms, fracRes: 0.4236, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4768, norm(y): 0.9916, norm:1.2191, tok/sec: 103151.27, flops:108.27, batch-reuse:1
@ 3968 train 4.4107 , allloss: 4.4224, dt: 1264.49ms, fracRes: 0.4241, norm(attn): 0.2021, norm(output): 0.2695, norm(x): 0.4802, norm(y): 0.9916, norm:1.4627, tok/sec: 103655.87, flops:108.80, batch-reuse:1
@ 3969 train 4.4297 , allloss: 4.4416, dt: 1262.90ms, fracRes: 0.4265, norm(attn): 0.2012, norm(output): 0.2715, norm(x): 0.4843, norm(y): 0.9917, norm:1.1544, tok/sec: 103786.59, flops:108.94, batch-reuse:1
@ 3970 train 4.3729 , allloss: 4.3849, dt: 1247.36ms, fracRes: 0.4260, norm(attn): 0.2021, norm(output): 0.2676, norm(x): 0.4805, norm(y): 0.9917, norm:1.3955, tok/sec: 105079.15, flops:110.29, batch-reuse:1
@ 3971 train 4.3766 , allloss: 4.3885, dt: 1258.45ms, fracRes: 0.4252, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4796, norm(y): 0.9916, norm:1.3097, tok/sec: 104153.50, flops:109.32, batch-reuse:1
@ 3972 train 4.3910 , allloss: 4.4034, dt: 1284.50ms, fracRes: 0.4277, norm(attn): 0.2031, norm(output): 0.2734, norm(x): 0.4898, norm(y): 0.9916, norm:1.3776, tok/sec: 102041.48, flops:107.11, batch-reuse:1
@ 3973 train 4.3382 , allloss: 4.3504, dt: 1297.12ms, fracRes: 0.4254, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4809, norm(y): 0.9917, norm:1.2115, tok/sec: 101048.79, flops:106.06, batch-reuse:1
@ 3974 train 4.4332 , allloss: 4.4454, dt: 1234.33ms, fracRes: 0.4233, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4808, norm(y): 0.9916, norm:1.2619, tok/sec: 106188.50, flops:111.46, batch-reuse:1
@ 3975 train 4.3261 , allloss: 4.3382, dt: 1262.72ms, fracRes: 0.4224, norm(attn): 0.2061, norm(output): 0.2656, norm(x): 0.4753, norm(y): 0.9916, norm:1.3386, tok/sec: 103801.37, flops:108.95, batch-reuse:1
@ 3976 train 4.4097 , allloss: 4.4214, dt: 1258.50ms, fracRes: 0.4221, norm(attn): 0.2031, norm(output): 0.2676, norm(x): 0.4769, norm(y): 0.9915, norm:1.2008, tok/sec: 104149.67, flops:109.32, batch-reuse:1
@ 3977 train 4.1154 , allloss: 4.1288, dt: 1269.98ms, fracRes: 0.4262, norm(attn): 0.2051, norm(output): 0.2676, norm(x): 0.4804, norm(y): 0.9915, norm:1.2791, tok/sec: 103207.64, flops:108.33, batch-reuse:1
@ 3978 train 4.3532 , allloss: 4.3649, dt: 1297.45ms, fracRes: 0.4225, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4767, norm(y): 0.9916, norm:1.1449, tok/sec: 101022.88, flops:106.04, batch-reuse:1
@ 3979 train 4.3892 , allloss: 4.4010, dt: 1310.46ms, fracRes: 0.4238, norm(attn): 0.2061, norm(output): 0.2695, norm(x): 0.4783, norm(y): 0.9916, norm:1.4097, tok/sec: 100019.67, flops:104.98, batch-reuse:1
@ 3980 train 4.3219 , allloss: 4.3342, dt: 1280.05ms, fracRes: 0.4254, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4818, norm(y): 0.9917, norm:1.3632, tok/sec: 102395.83, flops:107.48, batch-reuse:1
@ 3981 train 4.3623 , allloss: 4.3743, dt: 1280.41ms, fracRes: 0.4247, norm(attn): 0.2051, norm(output): 0.2695, norm(x): 0.4811, norm(y): 0.9916, norm:1.1369, tok/sec: 102367.02, flops:107.45, batch-reuse:1
@ 3982 train 4.3668 , allloss: 4.3787, dt: 1301.08ms, fracRes: 0.4247, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4786, norm(y): 0.9917, norm:1.2234, tok/sec: 100740.72, flops:105.74, batch-reuse:1
@ 3983 train 4.3858 , allloss: 4.4017, dt: 1302.42ms, fracRes: 0.4242, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4799, norm(y): 0.9916, norm:1.1841, tok/sec: 100636.97, flops:105.63, batch-reuse:1
@ 3984 train 4.3669 , allloss: 4.3791, dt: 1266.03ms, fracRes: 0.4242, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4773, norm(y): 0.9917, norm:1.2541, tok/sec: 103529.83, flops:108.67, batch-reuse:1
@ 3985 train 4.4074 , allloss: 4.4194, dt: 1270.68ms, fracRes: 0.4246, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4787, norm(y): 0.9917, norm:1.3809, tok/sec: 103150.84, flops:108.27, batch-reuse:1
@ 3986 train 4.2813 , allloss: 4.2937, dt: 1277.32ms, fracRes: 0.4264, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4853, norm(y): 0.9916, norm:1.3034, tok/sec: 102614.76, flops:107.71, batch-reuse:1
@ 3987 train 4.2289 , allloss: 4.2434, dt: 1277.89ms, fracRes: 0.4233, norm(attn): 0.2061, norm(output): 0.2676, norm(x): 0.4739, norm(y): 0.9916, norm:1.4061, tok/sec: 102568.74, flops:107.66, batch-reuse:1
@ 3988 train 4.3055 , allloss: 4.3176, dt: 1270.71ms, fracRes: 0.4237, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4762, norm(y): 0.9916, norm:1.2209, tok/sec: 103148.25, flops:108.27, batch-reuse:1
@ 3989 train 4.3488 , allloss: 4.3610, dt: 1249.91ms, fracRes: 0.4240, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4795, norm(y): 0.9916, norm:1.2966, tok/sec: 104865.00, flops:110.07, batch-reuse:1
@ 3990 train 4.2964 , allloss: 4.3087, dt: 1247.62ms, fracRes: 0.4253, norm(attn): 0.2051, norm(output): 0.2695, norm(x): 0.4800, norm(y): 0.9917, norm:1.3616, tok/sec: 105057.94, flops:110.27, batch-reuse:1
@ 3991 train 4.3359 , allloss: 4.3479, dt: 1276.71ms, fracRes: 0.4225, norm(attn): 0.2061, norm(output): 0.2715, norm(x): 0.4784, norm(y): 0.9916, norm:1.2317, tok/sec: 102663.93, flops:107.76, batch-reuse:1
@ 3992 train 4.3608 , allloss: 4.3724, dt: 1255.37ms, fracRes: 0.4228, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4777, norm(y): 0.9916, norm:1.1695, tok/sec: 104409.40, flops:109.59, batch-reuse:1
@ 3993 train 4.3440 , allloss: 4.3555, dt: 1240.47ms, fracRes: 0.4223, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4783, norm(y): 0.9916, norm:1.2094, tok/sec: 105663.00, flops:110.91, batch-reuse:1
@ 3994 train 4.3405 , allloss: 4.3521, dt: 1266.84ms, fracRes: 0.4242, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4817, norm(y): 0.9917, norm:1.1621, tok/sec: 103463.74, flops:108.60, batch-reuse:1
@ 3995 train 4.3285 , allloss: 4.3403, dt: 1260.45ms, fracRes: 0.4228, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4807, norm(y): 0.9916, norm:1.3232, tok/sec: 103988.64, flops:109.15, batch-reuse:1
@ 3996 train 4.3798 , allloss: 4.3916, dt: 1249.64ms, fracRes: 0.4249, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4843, norm(y): 0.9916, norm:1.2628, tok/sec: 104888.15, flops:110.09, batch-reuse:1
@ 3997 train 4.3078 , allloss: 4.3196, dt: 1255.22ms, fracRes: 0.4253, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4804, norm(y): 0.9916, norm:1.4550, tok/sec: 104421.42, flops:109.60, batch-reuse:1
@ 3998 train 4.2739 , allloss: 4.2859, dt: 1270.65ms, fracRes: 0.4267, norm(attn): 0.2031, norm(output): 0.2715, norm(x): 0.4845, norm(y): 0.9916, norm:1.3388, tok/sec: 103153.30, flops:108.27, batch-reuse:1
@ 3999 train 4.3397 , allloss: 4.3518, dt: 1267.94ms, fracRes: 0.4277, norm(attn): 0.2012, norm(output): 0.2715, norm(x): 0.4853, norm(y): 0.9916, norm:1.2336, tok/sec: 103373.68, flops:108.50, batch-reuse:1
@ 4000 val 4.3268
@ 4000 train 4.3244 , allloss: 4.3375, dt: 1851.88ms, fracRes: 0.4261, norm(attn): 0.2031, norm(output): 0.2715, norm(x): 0.4798, norm(y): 0.9916, norm:1.1639, tok/sec: 70777.98, flops:74.29, batch-reuse:1
@ 4001 train 4.2129 , allloss: 4.2252, dt: 1277.43ms, fracRes: 0.4278, norm(attn): 0.2051, norm(output): 0.2715, norm(x): 0.4846, norm(y): 0.9917, norm:1.2691, tok/sec: 102606.33, flops:107.70, batch-reuse:1
@ 4002 train 4.2919 , allloss: 4.3035, dt: 1279.87ms, fracRes: 0.4256, norm(attn): 0.2051, norm(output): 0.2715, norm(x): 0.4831, norm(y): 0.9917, norm:1.2091, tok/sec: 102410.07, flops:107.49, batch-reuse:1
@ 4003 train 4.3705 , allloss: 4.3828, dt: 1254.11ms, fracRes: 0.4257, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4841, norm(y): 0.9917, norm:1.3996, tok/sec: 104513.57, flops:109.70, batch-reuse:1
@ 4004 train 4.2312 , allloss: 4.2449, dt: 1263.29ms, fracRes: 0.4253, norm(attn): 0.2061, norm(output): 0.2734, norm(x): 0.4831, norm(y): 0.9916, norm:1.2670, tok/sec: 103754.25, flops:108.90, batch-reuse:1
@ 4005 train 4.5330 , allloss: 4.5470, dt: 1255.56ms, fracRes: 0.4303, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4974, norm(y): 0.9915, norm:2.1868, tok/sec: 104393.62, flops:109.57, batch-reuse:1
@ 4006 train 4.3907 , allloss: 4.4037, dt: 1275.10ms, fracRes: 0.4264, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4835, norm(y): 0.9916, norm:1.8151, tok/sec: 102793.80, flops:107.90, batch-reuse:1
@ 4007 train 4.3646 , allloss: 4.3772, dt: 1257.11ms, fracRes: 0.4284, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4854, norm(y): 0.9916, norm:1.2673, tok/sec: 104264.47, flops:109.44, batch-reuse:1
@ 4008 train 4.3749 , allloss: 4.3875, dt: 1237.84ms, fracRes: 0.4275, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4832, norm(y): 0.9916, norm:1.6061, tok/sec: 105888.05, flops:111.14, batch-reuse:1
@ 4009 train 4.3182 , allloss: 4.3303, dt: 1272.01ms, fracRes: 0.4266, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4826, norm(y): 0.9916, norm:1.4458, tok/sec: 103043.42, flops:108.16, batch-reuse:1
@ 4010 train 4.3378 , allloss: 4.3502, dt: 1278.78ms, fracRes: 0.4276, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4908, norm(y): 0.9916, norm:1.5687, tok/sec: 102497.54, flops:107.58, batch-reuse:1
@ 4011 train 4.3759 , allloss: 4.3884, dt: 1267.05ms, fracRes: 0.4266, norm(attn): 0.2021, norm(output): 0.2734, norm(x): 0.4865, norm(y): 0.9916, norm:1.7170, tok/sec: 103446.84, flops:108.58, batch-reuse:1
@ 4012 train 4.3727 , allloss: 4.3850, dt: 1254.75ms, fracRes: 0.4248, norm(attn): 0.2061, norm(output): 0.2715, norm(x): 0.4840, norm(y): 0.9916, norm:1.4175, tok/sec: 104460.83, flops:109.65, batch-reuse:1
@ 4013 train 4.4015 , allloss: 4.4142, dt: 1242.31ms, fracRes: 0.4242, norm(attn): 0.2031, norm(output): 0.2715, norm(x): 0.4809, norm(y): 0.9916, norm:1.1566, tok/sec: 105506.41, flops:110.74, batch-reuse:1
@ 4014 train 4.4616 , allloss: 4.4747, dt: 1254.52ms, fracRes: 0.4252, norm(attn): 0.2041, norm(output): 0.2695, norm(x): 0.4846, norm(y): 0.9916, norm:1.5497, tok/sec: 104479.71, flops:109.67, batch-reuse:1
@ 4015 train 4.3393 , allloss: 4.3514, dt: 1277.76ms, fracRes: 0.4233, norm(attn): 0.2051, norm(output): 0.2715, norm(x): 0.4821, norm(y): 0.9916, norm:1.3302, tok/sec: 102579.82, flops:107.67, batch-reuse:1
@ 4016 train 4.3842 , allloss: 4.3965, dt: 1258.33ms, fracRes: 0.4239, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4839, norm(y): 0.9916, norm:1.5790, tok/sec: 104163.62, flops:109.33, batch-reuse:1
@ 4017 train 4.3207 , allloss: 4.3329, dt: 1270.67ms, fracRes: 0.4232, norm(attn): 0.2061, norm(output): 0.2715, norm(x): 0.4801, norm(y): 0.9915, norm:1.2640, tok/sec: 103151.60, flops:108.27, batch-reuse:1
@ 4018 train 4.3470 , allloss: 4.3587, dt: 1266.99ms, fracRes: 0.4229, norm(attn): 0.2051, norm(output): 0.2695, norm(x): 0.4763, norm(y): 0.9915, norm:1.1867, tok/sec: 103451.08, flops:108.59, batch-reuse:1
@ 4019 train 4.4703 , allloss: 4.4828, dt: 1265.79ms, fracRes: 0.4247, norm(attn): 0.2061, norm(output): 0.2734, norm(x): 0.4852, norm(y): 0.9915, norm:1.2796, tok/sec: 103549.91, flops:108.69, batch-reuse:1
@ 4020 train 4.3133 , allloss: 4.3259, dt: 1254.75ms, fracRes: 0.4247, norm(attn): 0.2070, norm(output): 0.2734, norm(x): 0.4860, norm(y): 0.9915, norm:1.1712, tok/sec: 104460.69, flops:109.65, batch-reuse:1
@ 4021 train 4.3247 , allloss: 4.3367, dt: 1264.47ms, fracRes: 0.4261, norm(attn): 0.2051, norm(output): 0.2715, norm(x): 0.4840, norm(y): 0.9918, norm:1.5287, tok/sec: 103657.71, flops:108.80, batch-reuse:1
@ 4022 train 4.1866 , allloss: 4.1991, dt: 1250.48ms, fracRes: 0.4278, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4885, norm(y): 0.9918, norm:1.2604, tok/sec: 104817.36, flops:110.02, batch-reuse:1
@ 4023 train 4.4298 , allloss: 4.4419, dt: 1239.78ms, fracRes: 0.4253, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4875, norm(y): 0.9916, norm:1.2518, tok/sec: 105721.95, flops:110.97, batch-reuse:1
@ 4024 train 4.4058 , allloss: 4.4175, dt: 1277.63ms, fracRes: 0.4252, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4880, norm(y): 0.9915, norm:1.3590, tok/sec: 102589.89, flops:107.68, batch-reuse:1
@ 4025 train 4.3104 , allloss: 4.3224, dt: 1281.91ms, fracRes: 0.4238, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4816, norm(y): 0.9916, norm:1.3432, tok/sec: 102247.22, flops:107.32, batch-reuse:1
@ 4026 train 4.2387 , allloss: 4.2508, dt: 1242.09ms, fracRes: 0.4242, norm(attn): 0.2061, norm(output): 0.2734, norm(x): 0.4847, norm(y): 0.9916, norm:1.2520, tok/sec: 105525.75, flops:110.76, batch-reuse:1
@ 4027 train 4.3074 , allloss: 4.3194, dt: 1271.21ms, fracRes: 0.4237, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4835, norm(y): 0.9916, norm:1.2832, tok/sec: 103107.97, flops:108.23, batch-reuse:1
@ 4028 train 4.3242 , allloss: 4.3366, dt: 1272.37ms, fracRes: 0.4241, norm(attn): 0.2061, norm(output): 0.2734, norm(x): 0.4847, norm(y): 0.9915, norm:1.1646, tok/sec: 103013.80, flops:108.13, batch-reuse:1
@ 4029 train 4.3226 , allloss: 4.3344, dt: 1244.28ms, fracRes: 0.4236, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4854, norm(y): 0.9915, norm:1.2292, tok/sec: 105339.22, flops:110.57, batch-reuse:1
@ 4030 train 4.1626 , allloss: 4.1744, dt: 1280.52ms, fracRes: 0.4250, norm(attn): 0.2031, norm(output): 0.2734, norm(x): 0.4879, norm(y): 0.9916, norm:1.3060, tok/sec: 102358.55, flops:107.44, batch-reuse:1
@ 4031 train 4.2117 , allloss: 4.2240, dt: 1252.12ms, fracRes: 0.4246, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4868, norm(y): 0.9916, norm:1.2621, tok/sec: 104680.38, flops:109.88, batch-reuse:1
@ 4032 train 4.1971 , allloss: 4.2097, dt: 1253.08ms, fracRes: 0.4227, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4823, norm(y): 0.9916, norm:1.1985, tok/sec: 104599.46, flops:109.79, batch-reuse:1
@ 4033 train 4.2451 , allloss: 4.2582, dt: 1283.78ms, fracRes: 0.4238, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4851, norm(y): 0.9916, norm:1.2585, tok/sec: 102098.41, flops:107.17, batch-reuse:1
@ 4034 train 4.2249 , allloss: 4.2378, dt: 1256.81ms, fracRes: 0.4245, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4873, norm(y): 0.9915, norm:1.3736, tok/sec: 104289.69, flops:109.47, batch-reuse:1
@ 4035 train 4.2303 , allloss: 4.2425, dt: 1260.79ms, fracRes: 0.4245, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4827, norm(y): 0.9915, norm:1.3540, tok/sec: 103960.52, flops:109.12, batch-reuse:1
@ 4036 train 4.1648 , allloss: 4.1769, dt: 1282.98ms, fracRes: 0.4254, norm(attn): 0.2061, norm(output): 0.2715, norm(x): 0.4854, norm(y): 0.9915, norm:1.1842, tok/sec: 102162.48, flops:107.23, batch-reuse:1
@ 4037 train 4.2052 , allloss: 4.2169, dt: 1281.51ms, fracRes: 0.4237, norm(attn): 0.2051, norm(output): 0.2715, norm(x): 0.4826, norm(y): 0.9916, norm:1.1525, tok/sec: 102279.09, flops:107.36, batch-reuse:1
@ 4038 train 4.1984 , allloss: 4.2110, dt: 1232.38ms, fracRes: 0.4253, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4830, norm(y): 0.9916, norm:1.3437, tok/sec: 106356.44, flops:111.64, batch-reuse:1
@ 4039 train 4.1747 , allloss: 4.1875, dt: 1262.90ms, fracRes: 0.4234, norm(attn): 0.2080, norm(output): 0.2734, norm(x): 0.4808, norm(y): 0.9916, norm:1.3020, tok/sec: 103786.53, flops:108.94, batch-reuse:1
@ 4040 train 4.2194 , allloss: 4.2315, dt: 1280.53ms, fracRes: 0.4251, norm(attn): 0.2041, norm(output): 0.2715, norm(x): 0.4843, norm(y): 0.9916, norm:1.3945, tok/sec: 102357.58, flops:107.44, batch-reuse:1
@ 4041 train 4.1344 , allloss: 4.1463, dt: 1259.04ms, fracRes: 0.4251, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4813, norm(y): 0.9916, norm:1.2113, tok/sec: 104104.74, flops:109.27, batch-reuse:1
@ 4042 train 4.2377 , allloss: 4.2496, dt: 1265.18ms, fracRes: 0.4254, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4808, norm(y): 0.9916, norm:1.2763, tok/sec: 103599.52, flops:108.74, batch-reuse:1
@ 4043 train 4.2467 , allloss: 4.2582, dt: 1261.94ms, fracRes: 0.4263, norm(attn): 0.2012, norm(output): 0.2695, norm(x): 0.4827, norm(y): 0.9916, norm:1.3363, tok/sec: 103865.44, flops:109.02, batch-reuse:1
@ 4044 train 4.2620 , allloss: 4.2738, dt: 1258.62ms, fracRes: 0.4263, norm(attn): 0.2031, norm(output): 0.2734, norm(x): 0.4845, norm(y): 0.9916, norm:1.3618, tok/sec: 104139.20, flops:109.31, batch-reuse:1
@ 4045 train 4.1989 , allloss: 4.2109, dt: 1285.48ms, fracRes: 0.4257, norm(attn): 0.2031, norm(output): 0.2695, norm(x): 0.4824, norm(y): 0.9917, norm:1.2479, tok/sec: 101963.75, flops:107.02, batch-reuse:1
@ 4046 train 4.2566 , allloss: 4.2683, dt: 1281.42ms, fracRes: 0.4261, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4880, norm(y): 0.9916, norm:1.2646, tok/sec: 102286.22, flops:107.36, batch-reuse:1
@ 4047 train 4.3100 , allloss: 4.3221, dt: 1255.89ms, fracRes: 0.4259, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4886, norm(y): 0.9915, norm:1.2311, tok/sec: 104365.96, flops:109.55, batch-reuse:1
@ 4048 train 4.2269 , allloss: 4.2388, dt: 1282.46ms, fracRes: 0.4253, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4888, norm(y): 0.9915, norm:1.1934, tok/sec: 102203.26, flops:107.28, batch-reuse:1
@ 4049 train 4.1667 , allloss: 4.1791, dt: 1309.54ms, fracRes: 0.4270, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4881, norm(y): 0.9916, norm:1.4130, tok/sec: 100090.38, flops:105.06, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0815,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8438,     0.1011,     0.0544,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4492,     0.1416,     0.1533,     0.2559,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0981,     0.5117,     0.1504,     0.1475,     0.0918,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5156,     0.0933,     0.1738,     0.0674,     0.1055,     0.0461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8750,     0.0072,     0.0569,     0.0237,     0.0332,     0.0032,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8828,     0.0020,     0.0254,     0.0190,     0.0069,     0.0052,     0.0020,     0.0576,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1982,     0.0508,     0.1108,     0.0304,     0.0820,     0.0364,     0.0090,     0.4102,     0.0713,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3281,     0.0168,     0.1064,     0.0327,     0.0219,     0.0150,     0.0079,     0.3418,     0.0300,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0835,     0.1826,     0.1260,     0.0879,     0.0884,     0.0317,     0.0120,     0.2676,     0.0527,     0.0635,     0.0048,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6641,     0.0134,     0.0356,     0.0630,     0.0300,     0.0084,     0.0057,     0.0693,     0.0330,     0.0471,     0.0068,     0.0249,     0.0000,     0.0000,     0.0000],
        [    0.3359,     0.0081,     0.0270,     0.0432,     0.0356,     0.0408,     0.0442,     0.0356,     0.0737,     0.1226,     0.1011,     0.0942,     0.0378,     0.0000,     0.0000],
        [    0.0938,     0.0259,     0.0723,     0.0172,     0.0364,     0.0198,     0.0054,     0.2441,     0.0371,     0.0562,     0.0017,     0.0131,     0.3340,     0.0430,     0.0000],
        [    0.3027,     0.0289,     0.0613,     0.0640,     0.0679,     0.0236,     0.0031,     0.0564,     0.0591,     0.0747,     0.0046,     0.0184,     0.1187,     0.0869,     0.0288]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0089, -0.0710, -0.0148,  ...,  0.0196,  0.0250,  0.0554],
        [-0.0185,  0.0035,  0.0172,  ..., -0.0040, -0.0449, -0.0064],
        [-0.0478,  0.0418,  0.0147,  ...,  0.0298, -0.0297, -0.0632],
        ...,
        [-0.0037,  0.0227,  0.0551,  ...,  0.0061, -0.0251, -0.0605],
        [-0.0636,  0.0557,  0.0392,  ...,  0.0223, -0.0752, -0.0279],
        [ 0.0235, -0.0399, -0.0467,  ..., -0.0421,  0.0671,  0.0659]], device='cuda:0', requires_grad=True)
K: tensor([-0.5859,  1.6797,  1.6094, -1.1797, -0.1592,  1.1328, -0.0413, -1.3125,  0.6445,  1.3359, -0.0116,  1.3672, -1.2812,  1.3281,  0.3438,  0.7930, -0.8320,  0.9062,  0.3730, -0.5234,  1.1328, -1.3672,  0.6602,  0.9180,  0.9609, -1.4219, -0.2344,  0.0508, -0.7031,  1.3125,  1.6172, -0.6133,
         0.7969,  0.5703,  1.2344, -0.7773, -1.5391,  0.3848,  0.1377, -0.1777,  1.1953,  0.3184, -1.3125,  0.6445, -0.4023,  1.5625,  0.3340, -0.8203, -1.5547, -0.2949, -0.6758, -1.8516, -0.1592, -0.6172,  0.7305, -1.5469, -0.8047, -1.1797,  1.8906,  0.2754, -0.2402,  0.8477,  0.2969,  0.1270],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0247,  0.0313, -0.0155,  ...,  0.0388, -0.0022, -0.0347],
        [ 0.0231, -0.0418, -0.0510,  ...,  0.0348,  0.0277,  0.0577],
        [ 0.0084, -0.0043,  0.0048,  ...,  0.0267,  0.0142,  0.0634],
        ...,
        [ 0.0059, -0.0346,  0.0034,  ..., -0.0103,  0.0201,  0.0437],
        [ 0.0298, -0.0143, -0.0292,  ...,  0.0048,  0.0205,  0.0529],
        [-0.0073, -0.0083,  0.0343,  ...,  0.0241, -0.0359, -0.0450]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4023, -0.4766, -0.6875,  0.4297,  0.6953, -0.0698,  0.8633,  1.1562,  0.1924, -0.8789, -0.9062, -0.5391, -0.3438, -0.3594,  1.0391, -0.1494,  0.4590, -0.0204,  0.1816,  0.1396, -0.2520,  0.0135, -0.7109,  1.0391, -0.4316,  0.2295,  0.6172, -1.0312,  0.0854,  0.1045, -0.1426,  0.8711,
        -0.6172, -0.6055, -0.4414,  0.9180,  0.5508, -0.6758, -0.1318, -0.1611,  0.1689, -0.6016,  0.5039, -0.5352,  0.0713,  0.3184, -0.5156,  0.4785,  0.0928,  1.8984, -0.0461,  0.1338,  1.4062,  0.7578, -1.3438,  0.7070,  0.5430,  1.0391, -0.7539, -0.5586, -1.5156, -0.3105,  0.0312,  0.7578],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.4219,     -1.4609,     -1.7344,     -3.3125,     -3.4062,     -5.1250,     -0.8164,     -2.9844,     -1.8047,     -5.6562,     -2.9062,     -0.1748,     -2.5781,     -2.4844],
        [     0.0000,     -2.1250,     -2.7344,     -0.6992,     -1.9609,     -2.7656,     -2.6094,     -2.2812,     -2.0000,     -1.6328,     -2.2344,     -2.0156,     -2.2500,     -1.8750,     -2.0000],
        [     0.0000,     -1.1562,     -1.0703,     -0.5586,     -2.0312,     -2.9531,     -3.2969,     -0.5156,     -2.4062,     -1.2109,     -2.9375,     -1.2266,     -0.2598,     -2.3281,     -2.1719],
        [     0.0000,      1.6562,      0.4258,      0.4102,     -0.0654,      0.1191,      0.1963,      1.3984,      0.6133,     -0.2178,     -1.0156,     -0.4355,      1.3203,      0.4844,      0.7305],
        [     0.0000,     -1.7109,     -1.0859,     -2.0312,     -1.5859,     -2.4062,     -3.4062,     -0.0053,     -1.3594,     -1.1719,     -4.6875,     -2.4375,      0.7930,     -1.2031,     -1.5000],
        [     0.0000,     -4.8125,     -2.7344,     -3.6094,     -3.2812,     -5.6250,     -8.7500,     -1.7266,     -4.1875,     -2.4375,     -8.6875,     -5.3750,     -0.5547,     -4.1562,     -5.1562],
        [     0.0000,     -6.0938,     -3.5469,     -3.8438,     -4.8438,     -5.1250,     -6.0938,     -2.7344,     -4.1562,     -2.6250,     -5.8750,     -3.6094,     -2.2969,     -3.9531,     -3.9375],
        [     0.0000,     -1.3672,     -0.5820,     -1.8750,     -0.8828,     -1.6953,     -3.0938,      0.7266,     -1.0234,     -0.6602,     -4.1250,     -2.5156,      0.9648,     -1.0469,     -1.8281],
        [     0.0000,     -2.9688,     -1.1250,     -2.2969,     -2.7031,     -3.0781,     -3.7344,      0.0391,     -2.3906,     -1.1875,     -4.5938,     -1.7734,      0.5859,     -2.1094,     -2.3594],
        [     0.0000,      0.7773,      0.4062,      0.0474,      0.0557,     -0.9688,     -1.9375,      1.1641,     -0.4609,     -0.2773,     -2.8594,     -1.6719,      1.3047,     -0.4492,     -1.0469],
        [     0.0000,     -3.9062,     -2.9219,     -2.3438,     -3.0938,     -4.3750,     -4.7500,     -2.2500,     -3.0000,     -2.6406,     -4.5625,     -3.2812,     -1.8125,     -3.0938,     -3.4688],
        [     0.0000,     -3.7188,     -2.5156,     -2.0469,     -2.2344,     -2.1094,     -2.0312,     -2.2344,     -1.5156,     -1.0078,     -1.1953,     -1.2734,     -2.1875,     -1.4453,     -1.4375],
        [     0.0000,     -1.2891,     -0.2637,     -1.6953,     -0.9453,     -1.5547,     -2.8438,      0.9570,     -0.9258,     -0.5117,     -4.0312,     -1.9688,      1.2734,     -0.7812,     -1.6406],
        [     0.0000,     -2.3594,     -1.6016,     -1.5547,     -1.5000,     -2.5469,     -4.5625,     -1.6797,     -1.6406,     -1.3984,     -4.1875,     -2.7969,     -0.9375,     -1.2500,     -2.3594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8898],
        [0.6070],
        [0.3625],
        [0.4493],
        [0.4258],
        [0.7082],
        [0.2529],
        [0.5077],
        [0.2536],
        [0.4646],
        [0.2922],
        [0.0813],
        [0.3133],
        [0.3552]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8477,     0.1196,     0.0320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4531,     0.0125,     0.3340,     0.2021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0037,     0.0204,     0.0013,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4375,     0.0356,     0.0564,     0.0090,     0.0103,     0.4512,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7344,     0.0039,     0.0184,     0.0022,     0.0023,     0.0544,     0.1836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4668,     0.0635,     0.2109,     0.0547,     0.0135,     0.0354,     0.1406,     0.0146,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6367,     0.0024,     0.0085,     0.0007,     0.0006,     0.0635,     0.2637,     0.0101,     0.0129,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1699,     0.0449,     0.1143,     0.0195,     0.0114,     0.0510,     0.1953,     0.2451,     0.0693,     0.0796,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7930,     0.0023,     0.0121,     0.0008,     0.0005,     0.0679,     0.0776,     0.0063,     0.0291,     0.0095,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2695,     0.0226,     0.0728,     0.0211,     0.0078,     0.1611,     0.1582,     0.0771,     0.0201,     0.1108,     0.0023,     0.0762,     0.0000,     0.0000,     0.0000],
        [    0.2617,     0.0092,     0.1260,     0.0376,     0.0261,     0.0322,     0.3516,     0.0245,     0.0099,     0.0283,     0.0437,     0.0332,     0.0151,     0.0000,     0.0000],
        [    0.6367,     0.0013,     0.0079,     0.0005,     0.0004,     0.0374,     0.2266,     0.0098,     0.0116,     0.0088,     0.0000,     0.0027,     0.0479,     0.0100,     0.0000],
        [    0.3672,     0.0099,     0.0079,     0.0053,     0.0430,     0.0806,     0.1235,     0.0119,     0.0698,     0.0303,     0.0164,     0.0086,     0.0337,     0.1367,     0.0542]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0016, -0.0260,  0.0235,  ..., -0.0218,  0.0235,  0.0156],
        [ 0.0067, -0.0133, -0.0021,  ...,  0.0207, -0.0039, -0.0067],
        [ 0.0139, -0.0673,  0.0006,  ...,  0.0089, -0.0242,  0.0198],
        ...,
        [-0.0066,  0.0078, -0.0520,  ...,  0.0057, -0.0216, -0.0046],
        [ 0.0026,  0.0003, -0.0104,  ...,  0.0511,  0.0485,  0.0102],
        [ 0.0130, -0.0510, -0.0339,  ..., -0.0003,  0.0217,  0.0277]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4922, -1.1875, -1.4141,  1.7422, -2.7188,  0.7812,  2.9531, -2.2344,  1.7891,  2.7812,  0.4883, -0.6445,  1.0781,  0.1904,  1.1953,  0.1592, -0.5703,  1.5078,  1.7812, -0.1855,  1.1328, -1.6094, -1.9688, -2.1406, -0.5898,  1.7578,  0.0131, -0.1357, -1.4219,  2.2656,  0.9883,  3.3906,
         1.3125,  2.1875,  0.3613, -1.7891,  2.2500, -1.4766,  0.1279, -1.3281,  0.1689,  0.3066, -1.0156,  0.9570,  1.9531,  1.5469,  0.9844,  0.8242,  1.2969,  0.3867, -2.4375, -0.7539, -2.0781,  0.5977, -1.8359,  1.0391,  1.4688, -1.6328,  0.2256,  2.1094, -1.3281, -1.3672,  1.3281, -2.1562],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0178,  0.0065, -0.0043,  ..., -0.0006, -0.0085,  0.0052],
        [-0.0019,  0.0010,  0.0002,  ...,  0.0349,  0.0395, -0.0311],
        [ 0.0031, -0.0279, -0.0094,  ..., -0.0099, -0.0380,  0.0548],
        ...,
        [-0.0187,  0.0338,  0.0110,  ...,  0.0484,  0.0497, -0.0306],
        [-0.0143,  0.0096, -0.0224,  ...,  0.0105, -0.0029,  0.0379],
        [-0.0089, -0.0005,  0.0141,  ...,  0.0296,  0.0526, -0.0120]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4160,  1.6641,  0.5391,  0.2471,  0.6875, -1.6875,  0.8828, -0.5352,  0.8672,  0.7695, -2.3438, -0.0364,  0.1299,  0.2461, -0.4785,  0.1768, -0.5859, -0.5664, -1.9375, -0.0194, -0.1133,  1.1406,  1.4141, -0.5117, -1.0156,  0.6953, -0.2773,  1.2422,  0.1553, -2.2031, -0.9805, -0.2637,
        -0.2373, -0.4941,  0.1660, -0.1240,  2.2344,  0.9297, -0.5664,  0.1719, -0.8359,  0.4453,  0.1768, -0.8359,  0.1816,  0.7773,  0.4668, -0.2119, -1.2656,  1.0000,  1.0234, -0.0459,  1.3047, -1.0781,  0.3887, -0.0957, -0.1553, -0.5742, -0.0586,  0.8828,  0.1914, -1.8984, -1.0078,  0.6406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -4.9375,  -5.1562,  -6.5312,  -4.6875,  -2.4375,  -2.0312,  -5.9688,  -3.5000,  -5.0625,  -7.1875,  -5.1875,  -5.3125,  -3.5312,  -4.6562],
        [  0.0000,  -1.9609,  -3.2812,  -2.8125,  -2.0000,  -0.8047,   0.2598,  -3.2969,  -3.4844,  -1.6875,  -2.4531,  -3.6094,  -2.9062,  -3.3750,  -1.1328],
        [  0.0000,  -3.5938,  -0.3047,  -0.8086,  -4.3125,  -4.4375,  -3.0938,  -4.2188,  -4.9375,  -1.9375,  -6.1250,  -3.1406,  -4.0312,  -5.1875,  -1.6406],
        [  0.0000,  -5.5625,  -3.8750,  -6.6250,  -6.9375,  -1.7422,  -1.0469,  -3.6406,  -2.9688,  -3.4219, -10.7500,  -3.6719,  -1.8047,  -2.8125,  -3.6406],
        [  0.0000,  -2.5156,  -2.0469,  -3.8750,  -3.7500,   0.0304,   2.3438,  -1.5469,  -1.6094,  -2.2188,  -6.3750,  -2.5156,  -0.5742,  -1.4844,  -1.9297],
        [  0.0000,  -5.2500,  -3.6875,  -5.8438,  -5.7500,  -2.5938,  -1.3828,  -6.3438,  -4.5625,  -5.1250,  -8.1875,  -5.2500,  -5.4688,  -4.7812,  -5.2188],
        [  0.0000,  -1.9922,  -0.7930,  -2.1406,  -3.5469,  -2.5781,  -1.1953,  -3.4688,  -2.8750,  -2.9844,  -5.0625,  -2.2188,  -4.3750,  -3.3906,  -3.2031],
        [  0.0000,  -5.5938,  -4.3125,  -6.8438,  -7.0312,  -2.3125,  -0.8867,  -4.1562,  -3.9062,  -4.0625, -10.8750,  -5.1562,  -2.6719,  -4.1250,  -4.9375],
        [  0.0000,  -1.3281,  -0.3965,  -2.1562,  -2.7031,  -1.2031,   0.1406,   0.3711,  -0.8945,  -0.7539,  -5.1562,  -1.1406,   0.5117,  -1.0000,  -1.3359],
        [  0.0000,  -5.8438,  -4.1875,  -6.8438,  -7.3750,  -2.4688,  -2.3281,  -4.8438,  -3.3125,  -4.4375, -12.2500,  -4.7500,  -2.3125,  -3.1875,  -4.0000],
        [  0.0000,  -2.4844,  -1.3047,  -2.5469,  -3.5469,  -0.5156,  -0.5273,  -1.2500,  -2.5938,  -0.8867,  -4.7500,  -1.2578,  -0.8477,  -2.3438,  -0.9336],
        [  0.0000,  -3.3594,  -0.7383,  -1.9453,  -2.3125,  -2.0938,   0.2949,  -2.3750,  -3.2812,  -2.2188,  -1.7891,  -2.0625,  -2.8594,  -3.1406,  -1.8672],
        [  0.0000,  -6.1875,  -4.3750,  -7.0625,  -7.3750,  -2.8281,  -1.0312,  -4.1562,  -4.0000,  -4.2812, -11.1250,  -5.4688,  -2.5781,  -4.1562,  -5.0625],
        [  0.0000,  -3.6250,  -3.8438,  -4.2500,  -2.1562,  -1.5156,  -1.0938,  -3.4375,  -1.6641,  -2.5000,  -3.1094,  -3.7500,  -2.3906,  -0.9922,  -1.9141]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9987],
        [0.8940],
        [0.9323],
        [0.9697],
        [0.8838],
        [0.8958],
        [0.8102],
        [0.9587],
        [0.7019],
        [0.9609],
        [0.7744],
        [0.7707],
        [0.9538],
        [0.7826]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0045,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0030,     0.1533,     0.0273,     0.2451,     0.0840,     0.0835,     0.0408,     0.0603,     0.2256,     0.0295,     0.0476,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0002,     0.0001,     0.0018,     0.0000,     0.0000,     0.0001,     0.0004]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0047,  0.0432,  0.0359,  ..., -0.0392,  0.0190, -0.0409],
        [-0.0133, -0.0437, -0.0128,  ...,  0.0283,  0.0080, -0.0460],
        [ 0.0201,  0.0500,  0.0088,  ..., -0.0229,  0.0168, -0.0015],
        ...,
        [-0.0545, -0.0449, -0.0431,  ...,  0.0227,  0.0015, -0.0115],
        [ 0.0212,  0.0351,  0.0103,  ..., -0.0370,  0.0283, -0.0080],
        [-0.0186, -0.0276, -0.0736,  ...,  0.0554, -0.0019,  0.0006]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6836,  2.7969,  0.8203, -1.2578,  1.6797,  3.0312,  2.0312, -1.4375, -0.1289,  1.6562,  1.7188,  1.1875, -3.1250, -1.1172,  0.1143, -1.7578,  0.8477,  2.5625,  2.4844, -2.1875, -0.6758,  2.0000,  3.0000,  2.5000, -2.3438,  0.1396, -0.8477, -1.6094, -0.4668, -0.6680,  0.6172,  2.3594,
        -0.3848, -2.4844, -1.4219, -0.2324, -1.8125,  1.0234, -0.2559,  1.8906,  1.9297,  2.3125,  0.2793, -2.4531,  2.8281,  0.9258, -2.1875, -1.2031, -1.7578,  1.0859,  1.3750, -0.7109,  2.0469, -1.4922,  1.1172, -1.1172, -1.8984, -0.2314, -1.5391, -1.8047, -1.5391, -1.3906,  0.3164, -3.2656],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0412, -0.0135, -0.0289,  ..., -0.0170, -0.0349,  0.0104],
        [-0.0062,  0.0150,  0.0088,  ..., -0.0404,  0.0237, -0.0108],
        [-0.0342, -0.0460, -0.0064,  ..., -0.0120, -0.0286, -0.0223],
        ...,
        [ 0.0061,  0.0332,  0.0137,  ..., -0.0381,  0.0182, -0.0339],
        [-0.0247, -0.0039, -0.0229,  ...,  0.0089, -0.0235,  0.0294],
        [ 0.0226,  0.0360,  0.0516,  ...,  0.0116,  0.0594, -0.0327]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.3984, -0.0957,  0.4277, -1.1641, -1.9609, -0.5117, -2.0312,  0.8398,  0.6094, -0.2715, -0.4277,  1.5859,  0.5820,  0.1621, -0.5430, -0.6797, -1.1328, -1.5312,  0.4961,  0.5156,  0.3809, -0.0771, -1.2891, -0.9336,  0.8672,  0.6133,  1.4688,  1.5781,  1.6953,  0.8984, -1.9062, -0.5195,
         0.9180,  1.0000,  1.1875, -1.4297,  0.0674, -1.9922, -1.9531, -1.4688, -0.3984, -0.5039, -0.3203, -0.2676, -0.5586, -0.3027,  1.7031,  0.7891,  0.6016, -1.8828, -1.1250,  0.2891, -0.3535, -1.1562,  0.2197, -1.3359,  0.5195, -0.5234,  1.8594,  0.2012,  1.2656,  2.2500, -1.3359,  1.9297],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -5.4062,  -5.4062,  -6.0312,  -5.5625,  -5.3125,  -7.7188,  -7.6250,  -5.5625,  -6.1250,  -3.7344,  -6.4375,  -7.5938,  -5.9062,  -5.6875],
        [  0.0000, -11.1875, -11.7500, -11.9375, -11.0625, -10.0625, -11.9375, -13.6875, -11.1875, -10.5000,  -6.9375, -11.7500, -11.9375, -11.1875,  -9.8125],
        [  0.0000, -12.7500, -13.6875, -14.6875, -14.3125, -11.5625, -14.5000, -15.3750, -13.1875, -12.8125,  -9.1875, -14.6875, -13.6875, -13.2500, -11.2500],
        [  0.0000,  -9.9375, -11.1250, -10.6250, -12.0625, -10.6250, -12.6250, -12.2500, -11.1875, -10.3750,  -8.9375, -11.5625, -12.1875, -11.8125, -11.0000],
        [  0.0000, -11.1875, -11.3125, -11.5000, -12.0000,  -9.6250, -11.6250, -13.2500, -11.5000, -10.9375,  -8.2500, -11.5625, -12.3750, -11.8750, -10.9375],
        [  0.0000, -14.4375, -14.1875, -15.5000, -15.9375, -12.6250, -15.3750, -17.5000, -15.5000, -14.0625, -11.6250, -16.0000, -16.3750, -16.1250, -14.3750],
        [  0.0000, -12.9375, -13.1250, -14.9375, -13.5000, -12.6250, -15.3125, -16.1250, -14.0000, -13.4375,  -9.8125, -14.6250, -14.1875, -14.4375, -13.0625],
        [  0.0000,  -9.7500, -10.6875, -11.3750, -11.5625,  -9.6250, -11.6250, -12.0000, -10.6250, -10.4375,  -7.6875, -11.1250, -10.6875, -10.9375,  -9.2500],
        [  0.0000, -10.5625,  -9.9375, -11.1250, -10.0000,  -9.4375, -11.6875, -12.2500, -10.4375,  -9.6875,  -6.9688, -11.6250, -10.8750, -10.5625,  -8.9375],
        [  0.0000,   3.9219,   2.2031,   4.4062,   3.3281,   3.3125,   2.5938,   3.0000,   4.3125,   2.2812,   2.7656,   3.7969,   2.5625,   4.5000,   3.9062],
        [  0.0000, -12.8125, -12.0625, -12.3750, -13.1250, -10.6250, -12.5000, -13.5000, -12.5625, -11.3125,  -9.3750, -12.5625, -11.6250, -12.7500, -11.0625],
        [  0.0000, -11.5000, -10.3125, -11.4375, -10.6875,  -9.9375, -11.1250, -12.3750, -11.5000, -10.4375,  -8.8125, -11.0625, -10.8750, -11.8125, -10.5000],
        [  0.0000, -10.5000, -10.8750, -11.4375, -12.1250,  -9.7500, -11.3750, -11.8125, -11.0625, -10.5000,  -8.5000, -11.0625, -10.3750, -11.3125,  -9.5000],
        [  0.0000,  -8.5625, -10.1250, -11.2500,  -9.3125,  -8.6875, -11.3750, -12.2500,  -8.8125,  -9.2500,  -6.3438, -11.4375, -11.8125,  -8.9375,  -7.9375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9886],
        [0.9990],
        [1.0000],
        [1.0000],
        [0.9925],
        [1.0000],
        [0.9997],
        [0.9993],
        [0.9987],
        [0.6589],
        [0.9990],
        [0.9964],
        [0.9987],
        [0.9980]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0161, 0.9844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.8398, 0.0942, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.6875, 0.1455, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0537, 0.8438, 0.0505, 0.0165, 0.0371, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0483, 0.7305, 0.0579, 0.0251, 0.1055, 0.0344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0442, 0.8867, 0.0190, 0.0018, 0.0074, 0.0036, 0.0391, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0454, 0.4902, 0.0151, 0.0031, 0.0060, 0.0070, 0.1543, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0232, 0.2637, 0.0147, 0.0044, 0.0117, 0.0090, 0.1729, 0.4199, 0.0801, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0242, 0.2041, 0.0164, 0.0069, 0.0097, 0.0130, 0.1396, 0.3496, 0.1025, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0108, 0.0957, 0.0065, 0.0012, 0.0034, 0.0057, 0.0408, 0.5859, 0.0762, 0.1445, 0.0283, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0337, 0.2754, 0.0105, 0.0047, 0.0056, 0.0069, 0.0703, 0.2256, 0.1011, 0.1865, 0.0549, 0.0259, 0.0000, 0.0000, 0.0000],
        [0.0315, 0.2490, 0.0098, 0.0022, 0.0067, 0.0076, 0.0933, 0.2715, 0.0540, 0.1318, 0.0430, 0.0226, 0.0767, 0.0000, 0.0000],
        [0.0123, 0.1226, 0.0073, 0.0022, 0.0097, 0.0087, 0.0952, 0.2559, 0.0664, 0.1113, 0.0437, 0.0957, 0.0962, 0.0732, 0.0000],
        [0.0288, 0.1982, 0.0099, 0.0025, 0.0062, 0.0085, 0.0420, 0.1348, 0.0898, 0.0459, 0.0238, 0.0293, 0.0811, 0.1030, 0.1973]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0220, -0.0110,  0.0053,  ...,  0.0377, -0.0304, -0.0235],
        [-0.0482,  0.0157,  0.0031,  ...,  0.0196, -0.0148, -0.0011],
        [-0.0035,  0.0421,  0.0263,  ...,  0.0018, -0.0030,  0.0372],
        ...,
        [ 0.0055,  0.0371, -0.0094,  ..., -0.0037, -0.0120, -0.0048],
        [ 0.0312, -0.0068,  0.0163,  ...,  0.0137, -0.0080, -0.0111],
        [ 0.0358,  0.0296,  0.0111,  ..., -0.0028, -0.0036,  0.0128]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6992,  0.8867, -0.4746,  1.2656, -0.5273,  0.3789, -0.5625, -1.0781,  0.3457,  0.3203, -0.8750, -1.7812, -0.7500,  0.9570,  1.2812,  1.0234, -0.5977,  0.4375, -0.1196, -0.4844, -0.6680, -0.5312,  1.0391,  2.4062,  0.3789,  1.3672,  0.1953,  0.8789,  2.6094,  0.2617, -0.5938, -0.2168,
        -0.9062,  0.6484,  0.3164, -0.3281,  1.0156, -1.0312,  0.6992, -0.2539, -0.4512, -0.6367, -0.7734, -0.9258,  0.1904,  0.6211,  0.3125, -0.3281,  0.6484,  0.4961, -1.1406,  1.6641,  0.4375, -0.9102,  0.9023,  0.1875,  1.0156,  0.0159,  1.0703,  0.2871, -0.8164,  0.2373, -1.3047, -0.9141],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0033,      0.0166,      0.0166,  ...,     -0.0048,      0.0203,      0.0230],
        [     0.0326,      0.0027,      0.0001,  ...,     -0.0054,     -0.0407,      0.0190],
        [     0.0017,      0.0037,     -0.0087,  ...,     -0.0034,     -0.0310,      0.0351],
        ...,
        [    -0.0076,      0.0005,     -0.0712,  ...,     -0.0065,      0.0123,      0.0118],
        [     0.0013,      0.0140,     -0.0045,  ...,     -0.0291,     -0.0131,     -0.0070],
        [    -0.0270,      0.0171,     -0.0601,  ...,     -0.0054,     -0.0186,      0.0544]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.3438,  1.8750, -1.6875,  0.3379,  0.7070,  1.4375, -0.2080, -0.1982,  1.3125, -0.6641, -0.3340, -2.1875,  0.2930, -0.4746, -1.5703,  0.4395, -1.6172, -0.6953, -0.8945, -0.0237, -1.0781, -0.5898, -1.8203,  1.2734,  0.2334, -0.4941, -0.1221,  0.9492, -0.7109,  0.3574,  0.8945,  1.8203,
        -2.2500,  0.1943, -2.1719, -0.0581, -2.0781, -1.5234,  3.5312, -1.5938,  0.1592,  0.4629,  1.2266, -2.0469, -0.4277, -0.3867,  0.1895, -0.6133, -0.7734, -2.5625,  1.0547,  1.9141, -1.2109, -1.0781, -1.0703,  0.2451, -0.1084,  0.6172,  1.3672,  0.2051, -0.7305,  0.3438, -0.7188, -0.5586],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.1250,  1.3906,  0.4590,  0.6406,  0.8320,  2.4062,  3.2812,  2.5312,  2.7812,  2.1719,  2.4375,  3.0000,  3.0938,  4.0312],
        [ 0.0000,  2.5312,  0.3418, -0.2461, -0.5469, -0.3184,  1.3281,  2.0625,  1.5938,  2.1094,  1.5781,  0.8125,  1.8125,  2.1250,  2.7812],
        [ 0.0000,  2.0781,  0.5195, -0.1089, -0.2598, -0.2656,  1.1094,  1.4922,  1.3672,  1.9375,  1.1953,  0.9141,  1.7188,  1.9531,  2.8594],
        [ 0.0000,  2.7500, -0.0605, -1.1797, -0.3711, -0.1846,  1.9609,  2.4531,  1.6484,  2.0469,  1.4766,  1.2578,  1.9062,  1.9453,  2.9062],
        [ 0.0000,  2.7188,  0.1797, -0.6523,  0.7812, -0.3379,  1.4297,  2.6719,  1.1719,  2.1094,  0.6172,  1.0469,  1.4922,  0.9219,  3.1094],
        [ 0.0000,  3.0000, -0.8477, -3.2031, -1.7812, -2.5156, -0.1250,  1.9219,  0.0564,  1.3516, -1.0781, -1.1641,  0.5078, -0.4316,  4.0938],
        [ 0.0000,  2.3750, -1.1016, -2.6719, -2.0156, -1.8750,  1.2266,  1.8203,  0.2393,  1.1719, -0.6211, -0.7461,  0.4746,  0.1523,  2.7188],
        [ 0.0000,  2.4375, -0.4570, -1.6719, -0.6875, -0.9531,  2.0000,  2.8906,  1.2344,  2.2969,  0.6133,  1.5234,  1.5391,  1.2422,  2.9062],
        [ 0.0000,  2.1406, -0.3926, -1.2500, -0.9102, -0.6211,  1.7578,  2.6719,  1.4453,  1.7109,  0.7422,  0.6367,  1.7656,  1.6094,  2.8906],
        [ 0.0000,  2.1719, -0.5117, -2.1875, -1.1562, -0.6328,  1.3281,  3.9844,  1.9453,  2.5938,  0.9609,  1.1953,  2.7500,  1.8984,  2.6406],
        [ 0.0000,  2.0938, -1.1641, -1.9688, -1.7969, -1.5938,  0.7344,  1.8984,  1.0938,  1.7109,  0.4902, -0.2637,  1.4062,  1.3516,  2.5625],
        [ 0.0000,  2.0625, -1.1719, -2.6719, -1.5469, -1.4219,  1.0859,  2.1562,  0.5352,  1.4297,  0.3047, -0.3379,  0.8867,  0.4590,  2.7500],
        [ 0.0000,  2.2969, -0.5234, -1.7031, -0.2344, -0.3516,  2.0469,  3.0312,  1.6875,  2.2031,  1.2656,  2.0469,  2.0625,  1.7891,  2.7344],
        [ 0.0000,  1.9297, -1.0625, -2.4219, -1.5391, -1.2188,  0.3770,  1.5391,  1.1406,  0.4668, -0.1875,  0.0170,  1.0391,  1.2734,  1.9219]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1625],
        [0.0183],
        [0.0182],
        [0.0236],
        [0.0389],
        [0.0446],
        [0.0230],
        [0.0160],
        [0.0104],
        [0.0162],
        [0.0210],
        [0.0262],
        [0.0109],
        [0.0182]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5469, 0.4531, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0549, 0.6875, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0063, 0.6172, 0.2773, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.7500, 0.1074, 0.0114, 0.0294, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0294, 0.6914, 0.0864, 0.0081, 0.0129, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0237, 0.6328, 0.1035, 0.0139, 0.0386, 0.0752, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0270, 0.4922, 0.0698, 0.0123, 0.0537, 0.1357, 0.1709, 0.0381, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1123, 0.5469, 0.0366, 0.0023, 0.0085, 0.2432, 0.0317, 0.0092, 0.0089, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0201, 0.5781, 0.0879, 0.0058, 0.0195, 0.1367, 0.0771, 0.0125, 0.0400, 0.0231, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.4609, 0.0312, 0.0018, 0.0040, 0.1445, 0.0284, 0.0101, 0.0056, 0.0242, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0151, 0.4102, 0.0962, 0.0194, 0.0464, 0.0540, 0.1299, 0.0347, 0.0400, 0.0232, 0.0762, 0.0537, 0.0000, 0.0000, 0.0000],
        [0.0427, 0.3496, 0.0359, 0.0056, 0.0283, 0.1099, 0.0962, 0.0106, 0.0354, 0.0337, 0.2090, 0.0189, 0.0247, 0.0000, 0.0000],
        [0.1108, 0.5195, 0.0304, 0.0018, 0.0056, 0.1729, 0.0325, 0.0053, 0.0037, 0.0114, 0.0398, 0.0199, 0.0337, 0.0113, 0.0000],
        [0.0146, 0.5156, 0.0796, 0.0098, 0.0167, 0.0461, 0.0947, 0.0244, 0.0262, 0.0354, 0.0140, 0.0420, 0.0269, 0.0393, 0.0168]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0097, -0.0003,  0.0113,  ..., -0.0259,  0.0135,  0.0114],
        [ 0.0179, -0.0030,  0.0119,  ...,  0.0012, -0.0155, -0.0026],
        [ 0.0311, -0.0184, -0.0200,  ..., -0.0007,  0.0254, -0.0256],
        ...,
        [ 0.0162,  0.0112,  0.0012,  ...,  0.0028, -0.0317, -0.0331],
        [-0.0176, -0.0192,  0.0187,  ..., -0.0215,  0.0104,  0.0032],
        [-0.0061, -0.0008,  0.0243,  ..., -0.0162, -0.0019,  0.0032]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3594, -0.4648,  0.6680, -0.7773, -1.5859, -0.1138, -0.8281, -0.8242,  1.5000,  0.6328,  2.0938,  0.9258,  0.1982,  1.0703, -0.6172,  0.3281,  0.8555, -1.0625,  0.0491, -1.0703,  0.4219,  0.1309, -0.5117,  0.5273, -1.5391, -0.4668, -0.2930,  1.1875, -0.3770, -0.0767,  0.5273, -0.2295,
         0.7539, -1.0391, -1.1797, -0.1621, -0.9453,  0.5273,  0.0123, -0.8438,  0.1992, -0.7891,  0.2910,  1.7812, -0.9258,  0.0113, -0.2031,  0.3789,  0.3105, -0.2656,  1.0781, -0.9961, -2.5625,  0.4570, -0.7852,  0.2441, -0.9453,  0.0591, -1.5078,  1.5234,  0.6250,  0.3008,  0.7969,  0.3789],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0028,      0.0295,      0.0133,  ...,      0.0508,     -0.0066,      0.0358],
        [     0.0000,      0.0001,      0.0140,  ...,      0.0122,     -0.0013,      0.0090],
        [     0.0166,      0.0001,      0.0089,  ...,     -0.0004,      0.0257,     -0.0317],
        ...,
        [     0.0067,     -0.0107,     -0.0084,  ...,     -0.0013,     -0.0180,      0.0116],
        [    -0.0049,     -0.0180,      0.0202,  ...,      0.0068,     -0.0013,      0.0415],
        [    -0.0104,     -0.0162,     -0.0251,  ...,      0.0421,      0.0117,      0.0043]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7109,  1.1641, -0.4180, -1.1875, -1.1016,  0.7070,  0.3926,  0.2988, -1.1719, -0.7656,  0.9727,  1.4844,  0.6523,  1.5391,  0.9453, -0.0718,  0.4688,  2.0156, -0.5664, -0.4902,  0.4199, -0.9570, -0.4199,  0.3633,  0.5742,  0.6016, -0.4434, -0.4453,  0.1016,  1.0625, -0.3047, -0.7188,
        -1.1328, -0.2715, -0.4590,  0.9961,  0.6484, -0.7188, -0.1299,  1.5391,  1.2891, -0.4121,  1.5859,  0.4590,  0.3242,  2.0781, -1.8672,  0.0693,  0.1250,  1.2188,  0.0156, -0.7930,  0.3398, -0.1396, -0.2451,  0.4961,  2.1719, -1.2031, -2.1875,  0.7578, -1.0234,  0.0801, -0.1592,  0.0442],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1846, -2.2500, -5.2188, -4.5625, -2.1719, -3.6719, -4.7812, -5.8438, -3.9844, -3.9219, -3.2969, -3.0469, -4.6875, -3.8594],
        [ 0.0000,  2.5312,  1.5391,  0.4805,  0.5156,  0.4941,  0.7930,  0.1611, -0.4707, -0.1455, -1.1406, -0.3594,  0.0593, -0.6016, -1.1719],
        [ 0.0000,  4.5625,  3.7812,  2.7344,  2.8438,  2.7969,  4.1562,  2.7500,  2.2031,  1.6016,  2.0625,  1.3828,  1.8281,  1.4453,  0.9062],
        [ 0.0000,  1.9922,  0.0503, -2.1875, -1.2422,  1.3125,  0.1855, -1.3672, -2.1562, -1.5938, -0.9414, -1.5938, -0.3848, -1.9766, -1.5703],
        [ 0.0000,  3.1562,  1.0781, -1.2969, -0.8242,  1.7578,  1.2422, -0.9922, -0.8086, -1.0781,  0.3789, -0.8867, -0.3984, -0.5273, -0.4414],
        [ 0.0000,  3.2812,  1.4766, -0.5352,  0.4883,  1.1562,  1.5703,  0.0918, -0.5312, -0.3379, -0.6211, -0.1807, -0.4434, -0.6211,  0.1309],
        [ 0.0000,  2.9062,  0.9531, -0.7891,  0.6875,  1.6172,  1.8438,  0.3418,  0.8672, -0.1089,  1.1250, -0.1826, -0.4219,  0.4316,  0.2354],
        [ 0.0000,  1.5859, -1.1172, -3.8906, -2.5781,  0.7773, -1.2656, -2.5000, -2.5312, -2.0781, -0.4219, -1.1953, -1.1094, -1.9922, -2.0000],
        [ 0.0000,  3.3594,  1.4766, -1.2422, -0.0294,  1.9219,  1.3438, -0.4766,  0.6914,  0.1367,  2.0781,  0.9883,  0.3125,  0.8750,  0.1406],
        [ 0.0000,  0.9102, -1.7812, -4.6250, -3.8438, -0.2520, -1.8750, -2.9062, -3.5000, -2.0312, -0.5820, -0.2441, -0.9609, -2.4688, -2.4688],
        [ 0.0000,  3.2969,  1.8516,  0.2471,  1.1250,  1.2734,  2.1562,  0.8281,  0.9727,  0.4297,  1.6172,  1.2656,  0.9219,  0.8633,  0.0605],
        [ 0.0000,  2.0938, -0.1768, -2.0469, -0.4102,  0.9453,  0.8125, -1.3984, -0.1875, -0.2402,  1.5859, -0.8164, -0.5508,  0.6250,  0.4160],
        [ 0.0000,  1.5469, -1.2969, -4.1250, -3.0000,  0.4434, -1.2266, -3.0469, -3.4062, -2.2812, -1.0312, -1.7188, -1.1953, -2.2812, -2.0312],
        [ 0.0000,  3.5625,  1.6953, -0.4043,  0.1338,  1.1484,  1.8672,  0.5117,  0.5820,  0.8828, -0.0403,  1.0547,  0.6055,  0.9883,  0.1396]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0786],
        [0.0052],
        [0.0014],
        [0.0171],
        [0.0114],
        [0.0058],
        [0.0058],
        [0.0117],
        [0.0049],
        [0.0348],
        [0.0041],
        [0.0154],
        [0.0132],
        [0.0152]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(!:0.0854 a:0.1709,:0.1816 and:0.0732ts:0.0596,:0.4277 a:0.1377iced:0.1504)
iced
------
		( a:0.1709,:0.1816 and:0.0732ts:0.0596,:0.4277 a:0.1377iced:0.1504,:0.1631)
, and they are the most common types of fruits that are rich in the
@ 4050 train 4.2138 , allloss: 4.2257, dt: 1674.29ms, fracRes: 0.4238, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4814, norm(y): 0.9916, norm:1.3409, tok/sec: 78285.28, flops:82.17, batch-reuse:1
@ 4051 train 4.1985 , allloss: 4.2100, dt: 1272.94ms, fracRes: 0.4250, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4865, norm(y): 0.9915, norm:1.3450, tok/sec: 102968.32, flops:108.08, batch-reuse:1
@ 4052 train 4.1289 , allloss: 4.1405, dt: 1279.92ms, fracRes: 0.4243, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4863, norm(y): 0.9915, norm:1.2578, tok/sec: 102406.39, flops:107.49, batch-reuse:1
@ 4053 train 4.1344 , allloss: 4.1461, dt: 1254.29ms, fracRes: 0.4238, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4843, norm(y): 0.9915, norm:1.1126, tok/sec: 104498.75, flops:109.69, batch-reuse:1
@ 4054 train 4.2615 , allloss: 4.2753, dt: 1289.54ms, fracRes: 0.4247, norm(attn): 0.2061, norm(output): 0.2734, norm(x): 0.4877, norm(y): 0.9915, norm:1.2925, tok/sec: 101642.12, flops:106.69, batch-reuse:1
@ 4055 train 4.3101 , allloss: 4.3217, dt: 1260.60ms, fracRes: 0.4239, norm(attn): 0.2061, norm(output): 0.2773, norm(x): 0.4868, norm(y): 0.9915, norm:1.1809, tok/sec: 103975.58, flops:109.14, batch-reuse:1
@ 4056 train 4.3372 , allloss: 4.3487, dt: 1253.61ms, fracRes: 0.4228, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4863, norm(y): 0.9916, norm:1.2383, tok/sec: 104555.53, flops:109.74, batch-reuse:1
@ 4057 train 4.1505 , allloss: 4.1617, dt: 1279.46ms, fracRes: 0.4231, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4852, norm(y): 0.9916, norm:1.4700, tok/sec: 102443.51, flops:107.53, batch-reuse:1
@ 4058 train 4.3158 , allloss: 4.3275, dt: 1278.86ms, fracRes: 0.4219, norm(attn): 0.2070, norm(output): 0.2734, norm(x): 0.4847, norm(y): 0.9915, norm:1.2016, tok/sec: 102491.29, flops:107.58, batch-reuse:1
@ 4059 train 4.1697 , allloss: 4.1815, dt: 1287.62ms, fracRes: 0.4220, norm(attn): 0.2061, norm(output): 0.2773, norm(x): 0.4841, norm(y): 0.9915, norm:1.1985, tok/sec: 101794.40, flops:106.85, batch-reuse:1
@ 4060 train 4.1450 , allloss: 4.1562, dt: 1268.69ms, fracRes: 0.4233, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4837, norm(y): 0.9916, norm:1.1201, tok/sec: 103312.88, flops:108.44, batch-reuse:1
@ 4061 train 4.2491 , allloss: 4.2608, dt: 1269.61ms, fracRes: 0.4246, norm(attn): 0.2031, norm(output): 0.2773, norm(x): 0.4885, norm(y): 0.9916, norm:1.3118, tok/sec: 103238.34, flops:108.36, batch-reuse:1
@ 4062 train 4.1993 , allloss: 4.2112, dt: 1278.17ms, fracRes: 0.4248, norm(attn): 0.2031, norm(output): 0.2754, norm(x): 0.4881, norm(y): 0.9915, norm:1.2637, tok/sec: 102546.95, flops:107.64, batch-reuse:1
@ 4063 train 4.1702 , allloss: 4.1817, dt: 1273.50ms, fracRes: 0.4260, norm(attn): 0.2021, norm(output): 0.2734, norm(x): 0.4859, norm(y): 0.9915, norm:1.4153, tok/sec: 102922.64, flops:108.03, batch-reuse:1
@ 4064 train 4.2247 , allloss: 4.2366, dt: 1252.71ms, fracRes: 0.4261, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4888, norm(y): 0.9915, norm:1.3783, tok/sec: 104631.15, flops:109.82, batch-reuse:1
@ 4065 train 4.2283 , allloss: 4.2398, dt: 1281.80ms, fracRes: 0.4260, norm(attn): 0.2031, norm(output): 0.2754, norm(x): 0.4870, norm(y): 0.9916, norm:1.1561, tok/sec: 102256.45, flops:107.33, batch-reuse:1
@ 4066 train 4.1083 , allloss: 4.1204, dt: 1238.51ms, fracRes: 0.4287, norm(attn): 0.2021, norm(output): 0.2734, norm(x): 0.4887, norm(y): 0.9916, norm:1.3669, tok/sec: 105830.01, flops:111.08, batch-reuse:1
@ 4067 train 4.2669 , allloss: 4.2786, dt: 1263.90ms, fracRes: 0.4293, norm(attn): 0.2021, norm(output): 0.2734, norm(x): 0.4939, norm(y): 0.9916, norm:1.5856, tok/sec: 103704.01, flops:108.85, batch-reuse:1
@ 4068 train 4.1446 , allloss: 4.1564, dt: 1283.32ms, fracRes: 0.4263, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4850, norm(y): 0.9915, norm:1.2977, tok/sec: 102135.20, flops:107.20, batch-reuse:1
@ 4069 train 4.2933 , allloss: 4.3067, dt: 1282.16ms, fracRes: 0.4267, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4865, norm(y): 0.9915, norm:1.2766, tok/sec: 102227.72, flops:107.30, batch-reuse:1
@ 4070 train 4.2720 , allloss: 4.2835, dt: 1262.63ms, fracRes: 0.4263, norm(attn): 0.2051, norm(output): 0.2715, norm(x): 0.4846, norm(y): 0.9915, norm:1.1601, tok/sec: 103809.03, flops:108.96, batch-reuse:1
@ 4071 train 4.1862 , allloss: 4.1977, dt: 1290.40ms, fracRes: 0.4245, norm(attn): 0.2051, norm(output): 0.2715, norm(x): 0.4798, norm(y): 0.9916, norm:1.2819, tok/sec: 101574.35, flops:106.62, batch-reuse:1
@ 4072 train 4.1865 , allloss: 4.1979, dt: 1268.42ms, fracRes: 0.4256, norm(attn): 0.2061, norm(output): 0.2734, norm(x): 0.4861, norm(y): 0.9915, norm:1.1806, tok/sec: 103334.90, flops:108.46, batch-reuse:1
@ 4073 train 4.1980 , allloss: 4.2096, dt: 1250.69ms, fracRes: 0.4259, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4887, norm(y): 0.9915, norm:1.4065, tok/sec: 104799.97, flops:110.00, batch-reuse:1
@ 4074 train 4.2840 , allloss: 4.2954, dt: 1265.13ms, fracRes: 0.4251, norm(attn): 0.2031, norm(output): 0.2734, norm(x): 0.4860, norm(y): 0.9915, norm:1.2148, tok/sec: 103603.36, flops:108.75, batch-reuse:1
@ 4075 train 4.1856 , allloss: 4.1974, dt: 1273.33ms, fracRes: 0.4247, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4836, norm(y): 0.9915, norm:1.3869, tok/sec: 102935.99, flops:108.04, batch-reuse:1
@ 4076 train 4.3602 , allloss: 4.3722, dt: 1303.77ms, fracRes: 0.4257, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4915, norm(y): 0.9914, norm:1.3387, tok/sec: 100532.75, flops:105.52, batch-reuse:1
@ 4077 train 4.3642 , allloss: 4.3755, dt: 1306.51ms, fracRes: 0.4264, norm(attn): 0.2041, norm(output): 0.2773, norm(x): 0.4933, norm(y): 0.9915, norm:1.2823, tok/sec: 100322.25, flops:105.30, batch-reuse:1
@ 4078 train 4.3409 , allloss: 4.3523, dt: 1275.67ms, fracRes: 0.4266, norm(attn): 0.2031, norm(output): 0.2734, norm(x): 0.4908, norm(y): 0.9916, norm:1.5758, tok/sec: 102747.80, flops:107.85, batch-reuse:1
@ 4079 train 4.3923 , allloss: 4.4038, dt: 1297.93ms, fracRes: 0.4252, norm(attn): 0.2031, norm(output): 0.2754, norm(x): 0.4885, norm(y): 0.9915, norm:1.5008, tok/sec: 100985.53, flops:106.00, batch-reuse:1
@ 4080 train 4.5640 , allloss: 4.5757, dt: 1304.90ms, fracRes: 0.4258, norm(attn): 0.2021, norm(output): 0.2754, norm(x): 0.4898, norm(y): 0.9914, norm:1.1686, tok/sec: 100445.69, flops:105.43, batch-reuse:1
@ 4081 train 4.3911 , allloss: 4.4032, dt: 1269.61ms, fracRes: 0.4260, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4924, norm(y): 0.9914, norm:1.6113, tok/sec: 103237.85, flops:108.36, batch-reuse:1
@ 4082 train 4.3926 , allloss: 4.4047, dt: 1292.19ms, fracRes: 0.4258, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4915, norm(y): 0.9914, norm:1.4300, tok/sec: 101434.03, flops:106.47, batch-reuse:1
@ 4083 train 4.4654 , allloss: 4.4774, dt: 1247.11ms, fracRes: 0.4275, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4976, norm(y): 0.9915, norm:1.5075, tok/sec: 105100.94, flops:110.32, batch-reuse:1
@ 4084 train 4.4692 , allloss: 4.4821, dt: 1275.65ms, fracRes: 0.4242, norm(attn): 0.2021, norm(output): 0.2754, norm(x): 0.4870, norm(y): 0.9915, norm:1.2868, tok/sec: 102748.88, flops:107.85, batch-reuse:1
@ 4085 train 4.3009 , allloss: 4.3123, dt: 1262.98ms, fracRes: 0.4240, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4899, norm(y): 0.9915, norm:1.3117, tok/sec: 103779.56, flops:108.93, batch-reuse:1
@ 4086 train 4.3568 , allloss: 4.3686, dt: 1270.97ms, fracRes: 0.4246, norm(attn): 0.2070, norm(output): 0.2754, norm(x): 0.4885, norm(y): 0.9915, norm:1.2629, tok/sec: 103127.47, flops:108.25, batch-reuse:1
@ 4087 train 4.3837 , allloss: 4.3953, dt: 1279.07ms, fracRes: 0.4256, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4932, norm(y): 0.9914, norm:1.5153, tok/sec: 102474.39, flops:107.56, batch-reuse:1
@ 4088 train 4.3699 , allloss: 4.3818, dt: 1255.60ms, fracRes: 0.4249, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4865, norm(y): 0.9914, norm:1.3194, tok/sec: 104390.05, flops:109.57, batch-reuse:1
@ 4089 train 4.3441 , allloss: 4.3603, dt: 1293.64ms, fracRes: 0.4244, norm(attn): 0.2070, norm(output): 0.2773, norm(x): 0.4897, norm(y): 0.9915, norm:1.1545, tok/sec: 101319.92, flops:106.35, batch-reuse:1
@ 4090 train 4.4543 , allloss: 4.4661, dt: 1298.55ms, fracRes: 0.4248, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4857, norm(y): 0.9915, norm:1.2588, tok/sec: 100937.39, flops:105.95, batch-reuse:1
@ 4091 train 4.4316 , allloss: 4.4441, dt: 1248.78ms, fracRes: 0.4241, norm(attn): 0.2070, norm(output): 0.2773, norm(x): 0.4868, norm(y): 0.9915, norm:1.2337, tok/sec: 104959.90, flops:110.17, batch-reuse:1
@ 4092 train 4.3969 , allloss: 4.4090, dt: 1277.62ms, fracRes: 0.4256, norm(attn): 0.2061, norm(output): 0.2773, norm(x): 0.4929, norm(y): 0.9914, norm:1.2239, tok/sec: 102590.86, flops:107.68, batch-reuse:1
@ 4093 train 4.4997 , allloss: 4.5118, dt: 1251.99ms, fracRes: 0.4266, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4930, norm(y): 0.9914, norm:1.3858, tok/sec: 104690.61, flops:109.89, batch-reuse:1
@ 4094 train 4.3199 , allloss: 4.3327, dt: 1282.55ms, fracRes: 0.4261, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4952, norm(y): 0.9914, norm:1.2980, tok/sec: 102196.59, flops:107.27, batch-reuse:1
@ 4095 train 4.3434 , allloss: 4.3547, dt: 1260.09ms, fracRes: 0.4237, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4898, norm(y): 0.9915, norm:1.4174, tok/sec: 104018.27, flops:109.18, batch-reuse:1
@ 4096 train 4.4241 , allloss: 4.4357, dt: 1258.31ms, fracRes: 0.4254, norm(attn): 0.2031, norm(output): 0.2773, norm(x): 0.4929, norm(y): 0.9916, norm:1.4816, tok/sec: 104165.28, flops:109.34, batch-reuse:1
@ 4097 train 4.4027 , allloss: 4.4141, dt: 1251.19ms, fracRes: 0.4248, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4898, norm(y): 0.9915, norm:1.3076, tok/sec: 104757.66, flops:109.96, batch-reuse:1
@ 4098 train 4.2656 , allloss: 4.2773, dt: 1269.96ms, fracRes: 0.4241, norm(attn): 0.2090, norm(output): 0.2793, norm(x): 0.4904, norm(y): 0.9913, norm:1.2151, tok/sec: 103209.73, flops:108.33, batch-reuse:1
@ 4099 train 4.4181 , allloss: 4.4295, dt: 1261.86ms, fracRes: 0.4265, norm(attn): 0.2031, norm(output): 0.2754, norm(x): 0.4923, norm(y): 0.9915, norm:1.2602, tok/sec: 103871.70, flops:109.03, batch-reuse:1
@ 4100 train 4.4454 , allloss: 4.4568, dt: 1284.37ms, fracRes: 0.4267, norm(attn): 0.2031, norm(output): 0.2793, norm(x): 0.4961, norm(y): 0.9915, norm:1.3834, tok/sec: 102051.86, flops:107.12, batch-reuse:1
@ 4101 train 4.4533 , allloss: 4.4647, dt: 1305.96ms, fracRes: 0.4282, norm(attn): 0.2012, norm(output): 0.2773, norm(x): 0.4972, norm(y): 0.9915, norm:1.3633, tok/sec: 100364.62, flops:105.35, batch-reuse:1
@ 4102 train 4.3753 , allloss: 4.3869, dt: 1297.57ms, fracRes: 0.4272, norm(attn): 0.2021, norm(output): 0.2754, norm(x): 0.4892, norm(y): 0.9915, norm:1.3100, tok/sec: 101013.71, flops:106.03, batch-reuse:1
@ 4103 train 4.4176 , allloss: 4.4293, dt: 1284.28ms, fracRes: 0.4279, norm(attn): 0.2021, norm(output): 0.2754, norm(x): 0.4907, norm(y): 0.9915, norm:1.3372, tok/sec: 102058.74, flops:107.12, batch-reuse:1
@ 4104 train 4.3629 , allloss: 4.3748, dt: 1267.34ms, fracRes: 0.4263, norm(attn): 0.2041, norm(output): 0.2734, norm(x): 0.4838, norm(y): 0.9915, norm:1.3115, tok/sec: 103423.19, flops:108.56, batch-reuse:1
@ 4105 train 4.4016 , allloss: 4.4134, dt: 1287.57ms, fracRes: 0.4267, norm(attn): 0.2061, norm(output): 0.2773, norm(x): 0.4897, norm(y): 0.9915, norm:1.4271, tok/sec: 101797.73, flops:106.85, batch-reuse:1
@ 4106 train 4.4773 , allloss: 4.4910, dt: 1287.07ms, fracRes: 0.4270, norm(attn): 0.2070, norm(output): 0.2773, norm(x): 0.4937, norm(y): 0.9914, norm:1.2227, tok/sec: 101837.64, flops:106.89, batch-reuse:1
@ 4107 train 4.2894 , allloss: 4.3012, dt: 1280.04ms, fracRes: 0.4277, norm(attn): 0.2070, norm(output): 0.2773, norm(x): 0.4910, norm(y): 0.9914, norm:1.2858, tok/sec: 102396.86, flops:107.48, batch-reuse:1
@ 4108 train 4.3836 , allloss: 4.3953, dt: 1295.71ms, fracRes: 0.4268, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4899, norm(y): 0.9914, norm:1.1141, tok/sec: 101158.13, flops:106.18, batch-reuse:1
@ 4109 train 4.4792 , allloss: 4.4907, dt: 1260.54ms, fracRes: 0.4285, norm(attn): 0.2031, norm(output): 0.2773, norm(x): 0.4946, norm(y): 0.9915, norm:1.2475, tok/sec: 103980.70, flops:109.14, batch-reuse:1
@ 4110 train 4.3589 , allloss: 4.3706, dt: 1271.85ms, fracRes: 0.4277, norm(attn): 0.2070, norm(output): 0.2773, norm(x): 0.4938, norm(y): 0.9914, norm:1.2945, tok/sec: 103056.44, flops:108.17, batch-reuse:1
@ 4111 train 4.3687 , allloss: 4.3805, dt: 1277.79ms, fracRes: 0.4265, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4902, norm(y): 0.9913, norm:1.2664, tok/sec: 102576.97, flops:107.67, batch-reuse:1
@ 4112 train 4.3614 , allloss: 4.3731, dt: 1278.79ms, fracRes: 0.4275, norm(attn): 0.2031, norm(output): 0.2773, norm(x): 0.4939, norm(y): 0.9914, norm:1.1539, tok/sec: 102496.64, flops:107.58, batch-reuse:1
@ 4113 train 4.3229 , allloss: 4.3342, dt: 1277.25ms, fracRes: 0.4270, norm(attn): 0.2031, norm(output): 0.2754, norm(x): 0.4887, norm(y): 0.9916, norm:1.1532, tok/sec: 102620.28, flops:107.71, batch-reuse:1
@ 4114 train 4.4587 , allloss: 4.4699, dt: 1266.07ms, fracRes: 0.4278, norm(attn): 0.2041, norm(output): 0.2773, norm(x): 0.4985, norm(y): 0.9916, norm:1.2286, tok/sec: 103526.53, flops:108.66, batch-reuse:1
@ 4115 train 4.3118 , allloss: 4.3234, dt: 1266.92ms, fracRes: 0.4275, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4927, norm(y): 0.9916, norm:1.2951, tok/sec: 103456.85, flops:108.59, batch-reuse:1
@ 4116 train 4.4289 , allloss: 4.4405, dt: 1256.29ms, fracRes: 0.4253, norm(attn): 0.2031, norm(output): 0.2754, norm(x): 0.4864, norm(y): 0.9915, norm:1.3410, tok/sec: 104332.52, flops:109.51, batch-reuse:1
@ 4117 train 4.3073 , allloss: 4.3190, dt: 1282.84ms, fracRes: 0.4260, norm(attn): 0.2070, norm(output): 0.2773, norm(x): 0.4908, norm(y): 0.9914, norm:1.3091, tok/sec: 102173.64, flops:107.24, batch-reuse:1
@ 4118 train 4.4863 , allloss: 4.4980, dt: 1253.36ms, fracRes: 0.4256, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4942, norm(y): 0.9913, norm:1.3177, tok/sec: 104576.89, flops:109.77, batch-reuse:1
@ 4119 train 4.4483 , allloss: 4.4602, dt: 1287.80ms, fracRes: 0.4276, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4970, norm(y): 0.9914, norm:1.4083, tok/sec: 101780.09, flops:106.83, batch-reuse:1
@ 4120 train 4.3528 , allloss: 4.3647, dt: 1279.69ms, fracRes: 0.4258, norm(attn): 0.2070, norm(output): 0.2773, norm(x): 0.4901, norm(y): 0.9914, norm:1.4035, tok/sec: 102425.07, flops:107.51, batch-reuse:1
@ 4121 train 4.3319 , allloss: 4.3435, dt: 1290.40ms, fracRes: 0.4248, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4894, norm(y): 0.9914, norm:1.2338, tok/sec: 101574.44, flops:106.62, batch-reuse:1
@ 4122 train 4.4545 , allloss: 4.4660, dt: 1315.67ms, fracRes: 0.4267, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4962, norm(y): 0.9914, norm:1.3805, tok/sec: 99623.96, flops:104.57, batch-reuse:1
@ 4123 train 4.4036 , allloss: 4.4149, dt: 1324.13ms, fracRes: 0.4271, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4946, norm(y): 0.9915, norm:1.4143, tok/sec: 98986.95, flops:103.90, batch-reuse:1
@ 4124 train 4.3516 , allloss: 4.3631, dt: 1258.91ms, fracRes: 0.4260, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4950, norm(y): 0.9915, norm:1.2622, tok/sec: 104115.59, flops:109.28, batch-reuse:1
@ 4125 train 4.3647 , allloss: 4.3765, dt: 1293.31ms, fracRes: 0.4257, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4917, norm(y): 0.9915, norm:1.2456, tok/sec: 101346.52, flops:106.38, batch-reuse:1
@ 4126 train 4.2453 , allloss: 4.2574, dt: 1253.68ms, fracRes: 0.4264, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4901, norm(y): 0.9915, norm:1.1943, tok/sec: 104549.89, flops:109.74, batch-reuse:1
@ 4127 train 4.4048 , allloss: 4.4166, dt: 1274.40ms, fracRes: 0.4271, norm(attn): 0.2031, norm(output): 0.2754, norm(x): 0.4904, norm(y): 0.9914, norm:1.2486, tok/sec: 102850.32, flops:107.95, batch-reuse:1
@ 4128 train 4.3150 , allloss: 4.3265, dt: 1300.85ms, fracRes: 0.4255, norm(attn): 0.2070, norm(output): 0.2754, norm(x): 0.4852, norm(y): 0.9913, norm:1.2463, tok/sec: 100758.85, flops:105.76, batch-reuse:1
@ 4129 train 4.3573 , allloss: 4.3685, dt: 1268.32ms, fracRes: 0.4256, norm(attn): 0.2051, norm(output): 0.2734, norm(x): 0.4860, norm(y): 0.9914, norm:1.1463, tok/sec: 103342.67, flops:108.47, batch-reuse:1
@ 4130 train 4.5025 , allloss: 4.5147, dt: 1244.42ms, fracRes: 0.4269, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4915, norm(y): 0.9915, norm:1.2167, tok/sec: 105327.68, flops:110.56, batch-reuse:1
@ 4131 train 4.3061 , allloss: 4.3175, dt: 1258.99ms, fracRes: 0.4261, norm(attn): 0.2041, norm(output): 0.2773, norm(x): 0.4880, norm(y): 0.9916, norm:1.3265, tok/sec: 104108.88, flops:109.28, batch-reuse:1
@ 4132 train 4.3401 , allloss: 4.3512, dt: 1266.21ms, fracRes: 0.4264, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4923, norm(y): 0.9914, norm:1.3880, tok/sec: 103515.48, flops:108.65, batch-reuse:1
@ 4133 train 4.3536 , allloss: 4.3651, dt: 1266.66ms, fracRes: 0.4269, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4949, norm(y): 0.9914, norm:1.3587, tok/sec: 103478.69, flops:108.61, batch-reuse:1
@ 4134 train 4.4613 , allloss: 4.4727, dt: 1271.45ms, fracRes: 0.4267, norm(attn): 0.2041, norm(output): 0.2773, norm(x): 0.4940, norm(y): 0.9914, norm:1.1079, tok/sec: 103088.92, flops:108.21, batch-reuse:1
@ 4135 train 4.3759 , allloss: 4.3872, dt: 1271.82ms, fracRes: 0.4249, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4943, norm(y): 0.9914, norm:1.4061, tok/sec: 103058.64, flops:108.17, batch-reuse:1
@ 4136 train 4.4112 , allloss: 4.4227, dt: 1242.93ms, fracRes: 0.4270, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4948, norm(y): 0.9915, norm:1.2826, tok/sec: 105453.67, flops:110.69, batch-reuse:1
@ 4137 train 4.3820 , allloss: 4.3930, dt: 1266.94ms, fracRes: 0.4261, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4900, norm(y): 0.9914, norm:1.3258, tok/sec: 103455.79, flops:108.59, batch-reuse:1
@ 4138 train 4.4418 , allloss: 4.4531, dt: 1253.30ms, fracRes: 0.4265, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4944, norm(y): 0.9914, norm:1.4259, tok/sec: 104581.79, flops:109.77, batch-reuse:1
@ 4139 train 4.3933 , allloss: 4.4048, dt: 1271.37ms, fracRes: 0.4275, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4965, norm(y): 0.9914, norm:1.2921, tok/sec: 103094.76, flops:108.21, batch-reuse:1
@ 4140 train 4.5512 , allloss: 4.5626, dt: 1256.47ms, fracRes: 0.4275, norm(attn): 0.2031, norm(output): 0.2734, norm(x): 0.4912, norm(y): 0.9914, norm:1.3644, tok/sec: 104317.26, flops:109.49, batch-reuse:1
@ 4141 train 4.3608 , allloss: 4.3720, dt: 1251.95ms, fracRes: 0.4252, norm(attn): 0.2070, norm(output): 0.2773, norm(x): 0.4877, norm(y): 0.9914, norm:1.4317, tok/sec: 104694.39, flops:109.89, batch-reuse:1
@ 4142 train 4.3597 , allloss: 4.3709, dt: 1258.89ms, fracRes: 0.4256, norm(attn): 0.2090, norm(output): 0.2793, norm(x): 0.4903, norm(y): 0.9914, norm:1.5411, tok/sec: 104117.28, flops:109.28, batch-reuse:1
@ 4143 train 4.3885 , allloss: 4.3994, dt: 1275.30ms, fracRes: 0.4261, norm(attn): 0.2070, norm(output): 0.2773, norm(x): 0.4922, norm(y): 0.9914, norm:1.2982, tok/sec: 102777.56, flops:107.88, batch-reuse:1
@ 4144 train 4.3906 , allloss: 4.4018, dt: 1272.74ms, fracRes: 0.4279, norm(attn): 0.2031, norm(output): 0.2773, norm(x): 0.4911, norm(y): 0.9915, norm:1.3167, tok/sec: 102984.14, flops:108.10, batch-reuse:1
@ 4145 train 4.3392 , allloss: 4.3503, dt: 1268.02ms, fracRes: 0.4276, norm(attn): 0.2051, norm(output): 0.2754, norm(x): 0.4940, norm(y): 0.9914, norm:1.2162, tok/sec: 103367.60, flops:108.50, batch-reuse:1
@ 4146 train 4.3523 , allloss: 4.3638, dt: 1269.06ms, fracRes: 0.4272, norm(attn): 0.2090, norm(output): 0.2793, norm(x): 0.4950, norm(y): 0.9913, norm:1.2742, tok/sec: 103282.48, flops:108.41, batch-reuse:1
@ 4147 train 4.5218 , allloss: 4.5334, dt: 1279.62ms, fracRes: 0.4281, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4978, norm(y): 0.9914, norm:1.7252, tok/sec: 102430.19, flops:107.51, batch-reuse:1
@ 4148 train 4.3820 , allloss: 4.3953, dt: 1301.78ms, fracRes: 0.4281, norm(attn): 0.2041, norm(output): 0.2812, norm(x): 0.5012, norm(y): 0.9914, norm:1.6354, tok/sec: 100687.09, flops:105.68, batch-reuse:1
@ 4149 train 4.4459 , allloss: 4.4576, dt: 1311.86ms, fracRes: 0.4288, norm(attn): 0.2021, norm(output): 0.2773, norm(x): 0.4962, norm(y): 0.9915, norm:1.3825, tok/sec: 99912.79, flops:104.87, batch-reuse:1
@ 4150 train 4.3209 , allloss: 4.3318, dt: 1310.53ms, fracRes: 0.4271, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4864, norm(y): 0.9915, norm:1.4706, tok/sec: 100014.36, flops:104.98, batch-reuse:1
@ 4151 train 4.3590 , allloss: 4.3712, dt: 1305.37ms, fracRes: 0.4279, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4944, norm(y): 0.9913, norm:1.6925, tok/sec: 100409.56, flops:105.39, batch-reuse:1
@ 4152 train 4.3038 , allloss: 4.3150, dt: 1297.33ms, fracRes: 0.4292, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4996, norm(y): 0.9912, norm:1.3064, tok/sec: 101032.11, flops:106.05, batch-reuse:1
@ 4153 train 4.3164 , allloss: 4.3278, dt: 1269.55ms, fracRes: 0.4277, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4961, norm(y): 0.9913, norm:1.5299, tok/sec: 103242.95, flops:108.37, batch-reuse:1
@ 4154 train 4.3761 , allloss: 4.3870, dt: 1260.91ms, fracRes: 0.4289, norm(attn): 0.2031, norm(output): 0.2793, norm(x): 0.4986, norm(y): 0.9914, norm:1.2774, tok/sec: 103950.48, flops:109.11, batch-reuse:1
@ 4155 train 4.3735 , allloss: 4.3846, dt: 1272.85ms, fracRes: 0.4274, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4950, norm(y): 0.9914, norm:1.2972, tok/sec: 102975.40, flops:108.09, batch-reuse:1
@ 4156 train 4.3476 , allloss: 4.3590, dt: 1257.59ms, fracRes: 0.4249, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4908, norm(y): 0.9913, norm:1.2247, tok/sec: 104224.68, flops:109.40, batch-reuse:1
@ 4157 train 4.3452 , allloss: 4.3566, dt: 1255.77ms, fracRes: 0.4267, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4963, norm(y): 0.9913, norm:1.1251, tok/sec: 104376.04, flops:109.56, batch-reuse:1
@ 4158 train 4.2753 , allloss: 4.2867, dt: 1285.33ms, fracRes: 0.4280, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4973, norm(y): 0.9913, norm:1.3263, tok/sec: 101975.74, flops:107.04, batch-reuse:1
@ 4159 train 4.4070 , allloss: 4.4215, dt: 1256.03ms, fracRes: 0.4286, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4963, norm(y): 0.9913, norm:1.2033, tok/sec: 104354.31, flops:109.53, batch-reuse:1
@ 4160 train 4.3823 , allloss: 4.3938, dt: 1290.65ms, fracRes: 0.4298, norm(attn): 0.2031, norm(output): 0.2793, norm(x): 0.4991, norm(y): 0.9915, norm:1.2674, tok/sec: 101555.32, flops:106.60, batch-reuse:1
@ 4161 train 4.3241 , allloss: 4.3353, dt: 1268.35ms, fracRes: 0.4287, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4935, norm(y): 0.9915, norm:1.2069, tok/sec: 103340.18, flops:108.47, batch-reuse:1
@ 4162 train 4.3270 , allloss: 4.3385, dt: 1253.78ms, fracRes: 0.4293, norm(attn): 0.2041, norm(output): 0.2773, norm(x): 0.4933, norm(y): 0.9915, norm:1.5308, tok/sec: 104541.87, flops:109.73, batch-reuse:1
@ 4163 train 4.2859 , allloss: 4.2973, dt: 1283.08ms, fracRes: 0.4286, norm(attn): 0.2041, norm(output): 0.2754, norm(x): 0.4923, norm(y): 0.9915, norm:1.2199, tok/sec: 102154.39, flops:107.22, batch-reuse:1
@ 4164 train 4.3867 , allloss: 4.4000, dt: 1284.72ms, fracRes: 0.4291, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4945, norm(y): 0.9913, norm:1.3660, tok/sec: 102024.08, flops:107.09, batch-reuse:1
@ 4165 train 4.3715 , allloss: 4.3823, dt: 1309.54ms, fracRes: 0.4268, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4908, norm(y): 0.9913, norm:1.2320, tok/sec: 100090.42, flops:105.06, batch-reuse:1
@ 4166 train 4.3492 , allloss: 4.3607, dt: 1269.34ms, fracRes: 0.4275, norm(attn): 0.2061, norm(output): 0.2773, norm(x): 0.4922, norm(y): 0.9913, norm:1.2432, tok/sec: 103259.88, flops:108.38, batch-reuse:1
@ 4167 train 4.2971 , allloss: 4.3084, dt: 1262.19ms, fracRes: 0.4249, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4864, norm(y): 0.9914, norm:1.4389, tok/sec: 103844.72, flops:109.00, batch-reuse:1
@ 4168 train 4.2880 , allloss: 4.2992, dt: 1268.21ms, fracRes: 0.4258, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4922, norm(y): 0.9915, norm:1.3506, tok/sec: 103351.86, flops:108.48, batch-reuse:1
@ 4169 train 4.3497 , allloss: 4.3613, dt: 1246.79ms, fracRes: 0.4260, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4901, norm(y): 0.9915, norm:1.2491, tok/sec: 105127.73, flops:110.35, batch-reuse:1
@ 4170 train 4.3063 , allloss: 4.3174, dt: 1283.68ms, fracRes: 0.4247, norm(attn): 0.2090, norm(output): 0.2773, norm(x): 0.4882, norm(y): 0.9914, norm:1.3742, tok/sec: 102106.81, flops:107.17, batch-reuse:1
@ 4171 train 4.2602 , allloss: 4.2715, dt: 1278.79ms, fracRes: 0.4249, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4900, norm(y): 0.9913, norm:1.0986, tok/sec: 102497.25, flops:107.58, batch-reuse:1
@ 4172 train 4.3031 , allloss: 4.3142, dt: 1254.37ms, fracRes: 0.4254, norm(attn): 0.2041, norm(output): 0.2773, norm(x): 0.4908, norm(y): 0.9913, norm:1.1319, tok/sec: 104492.08, flops:109.68, batch-reuse:1
@ 4173 train 4.2515 , allloss: 4.2629, dt: 1263.24ms, fracRes: 0.4262, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4923, norm(y): 0.9914, norm:1.2079, tok/sec: 103758.27, flops:108.91, batch-reuse:1
@ 4174 train 4.2950 , allloss: 4.3067, dt: 1282.22ms, fracRes: 0.4268, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4904, norm(y): 0.9914, norm:1.2874, tok/sec: 102222.79, flops:107.30, batch-reuse:1
@ 4175 train 4.2601 , allloss: 4.2720, dt: 1287.31ms, fracRes: 0.4261, norm(attn): 0.2100, norm(output): 0.2773, norm(x): 0.4928, norm(y): 0.9913, norm:1.2109, tok/sec: 101818.34, flops:106.87, batch-reuse:1
@ 4176 train 4.2290 , allloss: 4.2404, dt: 1248.88ms, fracRes: 0.4260, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4927, norm(y): 0.9914, norm:1.2076, tok/sec: 104951.50, flops:110.16, batch-reuse:1
@ 4177 train 4.1968 , allloss: 4.2079, dt: 1273.90ms, fracRes: 0.4255, norm(attn): 0.2061, norm(output): 0.2773, norm(x): 0.4898, norm(y): 0.9915, norm:1.3329, tok/sec: 102890.12, flops:108.00, batch-reuse:1
@ 4178 train 4.3221 , allloss: 4.3334, dt: 1264.71ms, fracRes: 0.4266, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4933, norm(y): 0.9914, norm:1.2099, tok/sec: 103637.89, flops:108.78, batch-reuse:1
@ 4179 train 4.3196 , allloss: 4.3310, dt: 1272.20ms, fracRes: 0.4257, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4900, norm(y): 0.9913, norm:1.2127, tok/sec: 103027.53, flops:108.14, batch-reuse:1
@ 4180 train 4.2527 , allloss: 4.2640, dt: 1253.18ms, fracRes: 0.4267, norm(attn): 0.2051, norm(output): 0.2773, norm(x): 0.4927, norm(y): 0.9914, norm:1.1925, tok/sec: 104591.26, flops:109.78, batch-reuse:1
@ 4181 train 4.2934 , allloss: 4.3047, dt: 1261.41ms, fracRes: 0.4258, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4938, norm(y): 0.9914, norm:1.2172, tok/sec: 103909.47, flops:109.07, batch-reuse:1
@ 4182 train 4.2458 , allloss: 4.2568, dt: 1245.80ms, fracRes: 0.4252, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4918, norm(y): 0.9914, norm:1.1343, tok/sec: 105211.09, flops:110.43, batch-reuse:1
@ 4183 train 4.2596 , allloss: 4.2714, dt: 1251.44ms, fracRes: 0.4249, norm(attn): 0.2090, norm(output): 0.2812, norm(x): 0.4954, norm(y): 0.9913, norm:1.3750, tok/sec: 104737.00, flops:109.94, batch-reuse:1
@ 4184 train 4.2920 , allloss: 4.3035, dt: 1280.09ms, fracRes: 0.4234, norm(attn): 0.2080, norm(output): 0.2773, norm(x): 0.4913, norm(y): 0.9913, norm:1.2224, tok/sec: 102393.08, flops:107.48, batch-reuse:1
@ 4185 train 4.3179 , allloss: 4.3293, dt: 1278.99ms, fracRes: 0.4245, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4914, norm(y): 0.9913, norm:1.1416, tok/sec: 102481.01, flops:107.57, batch-reuse:1
@ 4186 train 4.3911 , allloss: 4.4027, dt: 1259.97ms, fracRes: 0.4275, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4994, norm(y): 0.9914, norm:1.1476, tok/sec: 104027.60, flops:109.19, batch-reuse:1
@ 4187 train 4.3139 , allloss: 4.3253, dt: 1250.92ms, fracRes: 0.4273, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4951, norm(y): 0.9913, norm:1.3821, tok/sec: 104780.66, flops:109.98, batch-reuse:1
@ 4188 train 4.3031 , allloss: 4.3153, dt: 1281.44ms, fracRes: 0.4244, norm(attn): 0.2090, norm(output): 0.2812, norm(x): 0.4946, norm(y): 0.9913, norm:1.3215, tok/sec: 102285.33, flops:107.36, batch-reuse:1
@ 4189 train 4.2550 , allloss: 4.2659, dt: 1255.10ms, fracRes: 0.4255, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.4970, norm(y): 0.9913, norm:1.3245, tok/sec: 104431.36, flops:109.61, batch-reuse:1
@ 4190 train 4.2187 , allloss: 4.2301, dt: 1246.30ms, fracRes: 0.4282, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.5005, norm(y): 0.9914, norm:1.2543, tok/sec: 105169.00, flops:110.39, batch-reuse:1
@ 4191 train 4.2686 , allloss: 4.2802, dt: 1281.26ms, fracRes: 0.4282, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4975, norm(y): 0.9914, norm:1.3694, tok/sec: 102299.01, flops:107.38, batch-reuse:1
@ 4192 train 4.2761 , allloss: 4.2875, dt: 1283.05ms, fracRes: 0.4272, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4949, norm(y): 0.9914, norm:1.3680, tok/sec: 102156.46, flops:107.23, batch-reuse:1
@ 4193 train 4.2425 , allloss: 4.2540, dt: 1259.57ms, fracRes: 0.4281, norm(attn): 0.2100, norm(output): 0.2793, norm(x): 0.4954, norm(y): 0.9913, norm:1.2557, tok/sec: 104060.66, flops:109.23, batch-reuse:1
@ 4194 train 4.1700 , allloss: 4.1814, dt: 1276.47ms, fracRes: 0.4315, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.5003, norm(y): 0.9914, norm:1.4083, tok/sec: 102683.26, flops:107.78, batch-reuse:1
@ 4195 train 4.2133 , allloss: 4.2245, dt: 1265.11ms, fracRes: 0.4284, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4940, norm(y): 0.9914, norm:1.2562, tok/sec: 103605.22, flops:108.75, batch-reuse:1
@ 4196 train 4.3493 , allloss: 4.3607, dt: 1259.62ms, fracRes: 0.4272, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4940, norm(y): 0.9914, norm:1.0971, tok/sec: 104056.94, flops:109.22, batch-reuse:1
@ 4197 train 4.2495 , allloss: 4.2606, dt: 1270.25ms, fracRes: 0.4264, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4926, norm(y): 0.9914, norm:1.2677, tok/sec: 103186.37, flops:108.31, batch-reuse:1
@ 4198 train 4.2939 , allloss: 4.3049, dt: 1252.04ms, fracRes: 0.4256, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4935, norm(y): 0.9914, norm:1.1618, tok/sec: 104686.50, flops:109.88, batch-reuse:1
@ 4199 train 4.3749 , allloss: 4.3863, dt: 1254.56ms, fracRes: 0.4264, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.4978, norm(y): 0.9913, norm:1.5259, tok/sec: 104476.65, flops:109.66, batch-reuse:1
@ 4200 train 4.3900 , allloss: 4.4010, dt: 1268.81ms, fracRes: 0.4273, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.5018, norm(y): 0.9913, norm:1.2004, tok/sec: 103303.25, flops:108.43, batch-reuse:1
@ 4201 train 4.2703 , allloss: 4.2814, dt: 1253.29ms, fracRes: 0.4246, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4924, norm(y): 0.9913, norm:1.2905, tok/sec: 104582.13, flops:109.77, batch-reuse:1
@ 4202 train 4.2798 , allloss: 4.2911, dt: 1271.05ms, fracRes: 0.4247, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4959, norm(y): 0.9912, norm:1.2215, tok/sec: 103121.04, flops:108.24, batch-reuse:1
@ 4203 train 4.0975 , allloss: 4.1093, dt: 1265.06ms, fracRes: 0.4258, norm(attn): 0.2100, norm(output): 0.2812, norm(x): 0.5015, norm(y): 0.9912, norm:1.6539, tok/sec: 103609.48, flops:108.75, batch-reuse:1
@ 4204 train 4.3202 , allloss: 4.3326, dt: 1246.08ms, fracRes: 0.4246, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.4982, norm(y): 0.9912, norm:1.2630, tok/sec: 105187.15, flops:110.41, batch-reuse:1
@ 4205 train 4.2219 , allloss: 4.2342, dt: 1252.89ms, fracRes: 0.4218, norm(attn): 0.2080, norm(output): 0.2793, norm(x): 0.4937, norm(y): 0.9913, norm:1.3052, tok/sec: 104616.06, flops:109.81, batch-reuse:1
@ 4206 train 4.2985 , allloss: 4.3096, dt: 1259.83ms, fracRes: 0.4213, norm(attn): 0.2090, norm(output): 0.2793, norm(x): 0.4924, norm(y): 0.9913, norm:1.0864, tok/sec: 104039.06, flops:109.20, batch-reuse:1
@ 4207 train 4.3486 , allloss: 4.3601, dt: 1281.19ms, fracRes: 0.4232, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.4997, norm(y): 0.9912, norm:1.1996, tok/sec: 102304.86, flops:107.38, batch-reuse:1
@ 4208 train 4.2475 , allloss: 4.2587, dt: 1264.03ms, fracRes: 0.4245, norm(attn): 0.2061, norm(output): 0.2773, norm(x): 0.4955, norm(y): 0.9913, norm:1.1949, tok/sec: 103694.11, flops:108.84, batch-reuse:1
@ 4209 train 4.3439 , allloss: 4.3550, dt: 1284.02ms, fracRes: 0.4246, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4944, norm(y): 0.9913, norm:1.2095, tok/sec: 102079.11, flops:107.15, batch-reuse:1
@ 4210 train 4.4197 , allloss: 4.4312, dt: 1244.11ms, fracRes: 0.4253, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4954, norm(y): 0.9913, norm:1.1488, tok/sec: 105354.10, flops:110.58, batch-reuse:1
@ 4211 train 4.1999 , allloss: 4.2110, dt: 1274.34ms, fracRes: 0.4256, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4942, norm(y): 0.9913, norm:1.2959, tok/sec: 102854.82, flops:107.96, batch-reuse:1
@ 4212 train 4.2313 , allloss: 4.2425, dt: 1278.82ms, fracRes: 0.4255, norm(attn): 0.2090, norm(output): 0.2793, norm(x): 0.4937, norm(y): 0.9913, norm:1.2729, tok/sec: 102494.75, flops:107.58, batch-reuse:1
@ 4213 train 4.1182 , allloss: 4.1292, dt: 1279.26ms, fracRes: 0.4265, norm(attn): 0.2080, norm(output): 0.2793, norm(x): 0.4957, norm(y): 0.9913, norm:1.2066, tok/sec: 102459.47, flops:107.54, batch-reuse:1
@ 4214 train 4.1875 , allloss: 4.1985, dt: 1238.10ms, fracRes: 0.4266, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4950, norm(y): 0.9913, norm:1.1901, tok/sec: 105865.09, flops:111.12, batch-reuse:1
@ 4215 train 4.1890 , allloss: 4.2003, dt: 1275.59ms, fracRes: 0.4275, norm(attn): 0.2061, norm(output): 0.2773, norm(x): 0.4940, norm(y): 0.9913, norm:1.5096, tok/sec: 102753.74, flops:107.85, batch-reuse:1
@ 4216 train 4.1723 , allloss: 4.1834, dt: 1262.76ms, fracRes: 0.4275, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4961, norm(y): 0.9913, norm:1.4527, tok/sec: 103797.68, flops:108.95, batch-reuse:1
@ 4217 train 4.1972 , allloss: 4.2087, dt: 1271.74ms, fracRes: 0.4267, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4936, norm(y): 0.9913, norm:1.1880, tok/sec: 103065.48, flops:108.18, batch-reuse:1
@ 4218 train 4.1552 , allloss: 4.1664, dt: 1279.70ms, fracRes: 0.4278, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4954, norm(y): 0.9913, norm:1.2292, tok/sec: 102423.77, flops:107.51, batch-reuse:1
@ 4219 train 4.2177 , allloss: 4.2287, dt: 1250.68ms, fracRes: 0.4270, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4954, norm(y): 0.9913, norm:1.3143, tok/sec: 104800.21, flops:110.00, batch-reuse:1
@ 4220 train 4.1489 , allloss: 4.1607, dt: 1254.25ms, fracRes: 0.4273, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4999, norm(y): 0.9914, norm:1.5264, tok/sec: 104502.07, flops:109.69, batch-reuse:1
@ 4221 train 4.2939 , allloss: 4.3053, dt: 1272.54ms, fracRes: 0.4257, norm(attn): 0.2051, norm(output): 0.2793, norm(x): 0.4952, norm(y): 0.9914, norm:1.1508, tok/sec: 103000.33, flops:108.11, batch-reuse:1
@ 4222 train 4.1317 , allloss: 4.1432, dt: 1270.21ms, fracRes: 0.4256, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4904, norm(y): 0.9914, norm:1.3195, tok/sec: 103189.23, flops:108.31, batch-reuse:1
@ 4223 train 4.2339 , allloss: 4.2638, dt: 1253.00ms, fracRes: 0.4277, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4976, norm(y): 0.9913, norm:1.7600, tok/sec: 104606.42, flops:109.80, batch-reuse:1
@ 4224 train 4.1097 , allloss: 4.1213, dt: 1255.74ms, fracRes: 0.4250, norm(attn): 0.2129, norm(output): 0.2793, norm(x): 0.4929, norm(y): 0.9912, norm:1.3134, tok/sec: 104378.30, flops:109.56, batch-reuse:1
@ 4225 train 4.2422 , allloss: 4.2536, dt: 1281.77ms, fracRes: 0.4250, norm(attn): 0.2090, norm(output): 0.2773, norm(x): 0.4917, norm(y): 0.9912, norm:1.2505, tok/sec: 102258.46, flops:107.33, batch-reuse:1
@ 4226 train 4.2649 , allloss: 4.2763, dt: 1253.35ms, fracRes: 0.4279, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.4998, norm(y): 0.9913, norm:1.2450, tok/sec: 104576.95, flops:109.77, batch-reuse:1
@ 4227 train 4.2052 , allloss: 4.2164, dt: 1261.44ms, fracRes: 0.4264, norm(attn): 0.2080, norm(output): 0.2793, norm(x): 0.4967, norm(y): 0.9913, norm:1.2246, tok/sec: 103906.37, flops:109.06, batch-reuse:1
@ 4228 train 4.4084 , allloss: 4.4196, dt: 1246.58ms, fracRes: 0.4281, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.4992, norm(y): 0.9913, norm:1.4767, tok/sec: 105145.49, flops:110.36, batch-reuse:1
@ 4229 train 4.2707 , allloss: 4.2825, dt: 1279.83ms, fracRes: 0.4304, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5048, norm(y): 0.9913, norm:1.3698, tok/sec: 102413.87, flops:107.50, batch-reuse:1
@ 4230 train 4.1876 , allloss: 4.1988, dt: 1267.02ms, fracRes: 0.4277, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4978, norm(y): 0.9913, norm:1.2857, tok/sec: 103448.67, flops:108.58, batch-reuse:1
@ 4231 train 4.1832 , allloss: 4.1950, dt: 1272.42ms, fracRes: 0.4284, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5023, norm(y): 0.9913, norm:1.5106, tok/sec: 103010.11, flops:108.12, batch-reuse:1
@ 4232 train 4.2424 , allloss: 4.2535, dt: 1256.72ms, fracRes: 0.4284, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.5007, norm(y): 0.9912, norm:1.1759, tok/sec: 104297.27, flops:109.47, batch-reuse:1
@ 4233 train 4.2168 , allloss: 4.2286, dt: 1259.76ms, fracRes: 0.4291, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.5025, norm(y): 0.9913, norm:1.3927, tok/sec: 104045.18, flops:109.21, batch-reuse:1
@ 4234 train 4.2167 , allloss: 4.2282, dt: 1274.08ms, fracRes: 0.4304, norm(attn): 0.2031, norm(output): 0.2812, norm(x): 0.5021, norm(y): 0.9914, norm:1.2487, tok/sec: 102875.45, flops:107.98, batch-reuse:1
@ 4235 train 4.2263 , allloss: 4.2374, dt: 1264.76ms, fracRes: 0.4268, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.4998, norm(y): 0.9913, norm:1.5752, tok/sec: 103633.91, flops:108.78, batch-reuse:1
@ 4236 train 4.3493 , allloss: 4.3608, dt: 1339.10ms, fracRes: 0.4292, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5085, norm(y): 0.9912, norm:1.4732, tok/sec: 97880.74, flops:102.74, batch-reuse:1
@ 4237 train 4.2167 , allloss: 4.2283, dt: 1269.13ms, fracRes: 0.4297, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5092, norm(y): 0.9913, norm:1.7233, tok/sec: 103276.97, flops:108.40, batch-reuse:1
@ 4238 train 4.2187 , allloss: 4.2306, dt: 1270.07ms, fracRes: 0.4254, norm(attn): 0.2109, norm(output): 0.2852, norm(x): 0.5051, norm(y): 0.9912, norm:1.3774, tok/sec: 103200.29, flops:108.32, batch-reuse:1
@ 4239 train 4.1853 , allloss: 4.1969, dt: 1282.80ms, fracRes: 0.4236, norm(attn): 0.2090, norm(output): 0.2812, norm(x): 0.4979, norm(y): 0.9912, norm:1.3091, tok/sec: 102176.51, flops:107.25, batch-reuse:1
@ 4240 train 4.2205 , allloss: 4.2323, dt: 1301.22ms, fracRes: 0.4255, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5017, norm(y): 0.9912, norm:1.3022, tok/sec: 100730.14, flops:105.73, batch-reuse:1
@ 4241 train 4.2269 , allloss: 4.2388, dt: 1264.57ms, fracRes: 0.4265, norm(attn): 0.2109, norm(output): 0.2793, norm(x): 0.4997, norm(y): 0.9912, norm:1.2732, tok/sec: 103649.42, flops:108.79, batch-reuse:1
@ 4242 train 4.3227 , allloss: 4.3345, dt: 1270.70ms, fracRes: 0.4246, norm(attn): 0.2090, norm(output): 0.2793, norm(x): 0.4927, norm(y): 0.9912, norm:1.2998, tok/sec: 103149.20, flops:108.27, batch-reuse:1
@ 4243 train 4.1816 , allloss: 4.1934, dt: 1235.48ms, fracRes: 0.4257, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.4970, norm(y): 0.9913, norm:1.3768, tok/sec: 106090.32, flops:111.36, batch-reuse:1
@ 4244 train 4.0400 , allloss: 4.0519, dt: 1276.10ms, fracRes: 0.4266, norm(attn): 0.2100, norm(output): 0.2812, norm(x): 0.4982, norm(y): 0.9913, norm:1.2627, tok/sec: 102713.23, flops:107.81, batch-reuse:1
@ 4245 train 4.1517 , allloss: 4.1631, dt: 1257.74ms, fracRes: 0.4264, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4926, norm(y): 0.9914, norm:1.2266, tok/sec: 104211.94, flops:109.38, batch-reuse:1
@ 4246 train 4.4798 , allloss: 4.4909, dt: 1272.65ms, fracRes: 0.4297, norm(attn): 0.2041, norm(output): 0.2793, norm(x): 0.4979, norm(y): 0.9914, norm:1.8384, tok/sec: 102991.30, flops:108.10, batch-reuse:1
@ 4247 train 4.2462 , allloss: 4.2577, dt: 1260.23ms, fracRes: 0.4295, norm(attn): 0.2090, norm(output): 0.2812, norm(x): 0.5015, norm(y): 0.9913, norm:1.4829, tok/sec: 104006.07, flops:109.17, batch-reuse:1
@ 4248 train 4.2497 , allloss: 4.2613, dt: 1288.25ms, fracRes: 0.4298, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.5014, norm(y): 0.9912, norm:1.3043, tok/sec: 101744.40, flops:106.79, batch-reuse:1
@ 4249 train 4.2365 , allloss: 4.2484, dt: 1261.26ms, fracRes: 0.4290, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.4937, norm(y): 0.9913, norm:1.3419, tok/sec: 103921.69, flops:109.08, batch-reuse:1
@ 4250 train 4.1360 , allloss: 4.1478, dt: 1261.24ms, fracRes: 0.4309, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.4985, norm(y): 0.9913, norm:1.3897, tok/sec: 103922.81, flops:109.08, batch-reuse:1
@ 4251 train 4.2314 , allloss: 4.2429, dt: 1252.40ms, fracRes: 0.4301, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5021, norm(y): 0.9913, norm:1.2457, tok/sec: 104656.77, flops:109.85, batch-reuse:1
@ 4252 train 4.0843 , allloss: 4.0957, dt: 1272.99ms, fracRes: 0.4295, norm(attn): 0.2080, norm(output): 0.2793, norm(x): 0.4998, norm(y): 0.9913, norm:1.3811, tok/sec: 102963.81, flops:108.07, batch-reuse:1
@ 4253 train 4.1532 , allloss: 4.1645, dt: 1272.46ms, fracRes: 0.4280, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.4989, norm(y): 0.9913, norm:1.1223, tok/sec: 103006.93, flops:108.12, batch-reuse:1
@ 4254 train 4.1904 , allloss: 4.2017, dt: 1257.30ms, fracRes: 0.4292, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5026, norm(y): 0.9913, norm:1.1310, tok/sec: 104249.03, flops:109.42, batch-reuse:1
@ 4255 train 4.1806 , allloss: 4.1916, dt: 1280.79ms, fracRes: 0.4281, norm(attn): 0.2129, norm(output): 0.2812, norm(x): 0.5006, norm(y): 0.9913, norm:1.3575, tok/sec: 102336.64, flops:107.42, batch-reuse:1
@ 4256 train 4.0742 , allloss: 4.0858, dt: 1284.74ms, fracRes: 0.4312, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5077, norm(y): 0.9913, norm:1.1301, tok/sec: 102021.99, flops:107.09, batch-reuse:1
@ 4257 train 4.1110 , allloss: 4.1224, dt: 1289.55ms, fracRes: 0.4295, norm(attn): 0.2070, norm(output): 0.2793, norm(x): 0.5013, norm(y): 0.9913, norm:1.4059, tok/sec: 101641.43, flops:106.69, batch-reuse:1
@ 4258 train 4.2884 , allloss: 4.2994, dt: 1244.49ms, fracRes: 0.4284, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5030, norm(y): 0.9912, norm:1.2999, tok/sec: 105322.23, flops:110.55, batch-reuse:1
@ 4259 train 4.2461 , allloss: 4.2574, dt: 1263.74ms, fracRes: 0.4288, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5012, norm(y): 0.9912, norm:1.2394, tok/sec: 103717.51, flops:108.87, batch-reuse:1
@ 4260 train 4.3344 , allloss: 4.3455, dt: 1247.40ms, fracRes: 0.4277, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5014, norm(y): 0.9913, norm:1.3065, tok/sec: 105075.83, flops:110.29, batch-reuse:1
@ 4261 train 4.4617 , allloss: 4.4728, dt: 1263.23ms, fracRes: 0.4282, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5053, norm(y): 0.9913, norm:1.3143, tok/sec: 103759.38, flops:108.91, batch-reuse:1
@ 4262 train 4.3334 , allloss: 4.3447, dt: 1263.58ms, fracRes: 0.4278, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5039, norm(y): 0.9912, norm:1.3399, tok/sec: 103730.29, flops:108.88, batch-reuse:1
@ 4263 train 4.3867 , allloss: 4.3980, dt: 1262.83ms, fracRes: 0.4295, norm(attn): 0.2041, norm(output): 0.2812, norm(x): 0.5025, norm(y): 0.9913, norm:1.1647, tok/sec: 103791.92, flops:108.94, batch-reuse:1
@ 4264 train 4.5398 , allloss: 4.5508, dt: 1262.19ms, fracRes: 0.4266, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.5036, norm(y): 0.9912, norm:1.5564, tok/sec: 103845.01, flops:109.00, batch-reuse:1
@ 4265 train 4.4725 , allloss: 4.4836, dt: 1257.53ms, fracRes: 0.4297, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.5084, norm(y): 0.9912, norm:1.3688, tok/sec: 104230.06, flops:109.40, batch-reuse:1
@ 4266 train 4.3487 , allloss: 4.3605, dt: 1287.02ms, fracRes: 0.4283, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.4994, norm(y): 0.9912, norm:1.6773, tok/sec: 101841.07, flops:106.90, batch-reuse:1
@ 4267 train 4.4237 , allloss: 4.4354, dt: 1249.58ms, fracRes: 0.4298, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5043, norm(y): 0.9911, norm:1.2746, tok/sec: 104892.71, flops:110.10, batch-reuse:1
@ 4268 train 4.4268 , allloss: 4.4384, dt: 1259.97ms, fracRes: 0.4289, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.5055, norm(y): 0.9911, norm:1.3860, tok/sec: 104027.98, flops:109.19, batch-reuse:1
@ 4269 train 4.4438 , allloss: 4.4553, dt: 1260.15ms, fracRes: 0.4283, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5025, norm(y): 0.9912, norm:1.3883, tok/sec: 104013.23, flops:109.18, batch-reuse:1
@ 4270 train 4.5454 , allloss: 4.5573, dt: 1284.97ms, fracRes: 0.4244, norm(attn): 0.2168, norm(output): 0.2793, norm(x): 0.4868, norm(y): 0.9912, norm:1.9007, tok/sec: 102003.92, flops:107.07, batch-reuse:1
@ 4271 train 4.3103 , allloss: 4.3215, dt: 1277.42ms, fracRes: 0.4280, norm(attn): 0.2109, norm(output): 0.2812, norm(x): 0.5030, norm(y): 0.9912, norm:1.8792, tok/sec: 102606.99, flops:107.70, batch-reuse:1
@ 4272 train 4.4234 , allloss: 4.4348, dt: 1260.92ms, fracRes: 0.4273, norm(attn): 0.2129, norm(output): 0.2812, norm(x): 0.5049, norm(y): 0.9911, norm:1.3836, tok/sec: 103949.65, flops:109.11, batch-reuse:1
@ 4273 train 4.4175 , allloss: 4.4290, dt: 1263.40ms, fracRes: 0.4260, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.5027, norm(y): 0.9911, norm:1.3974, tok/sec: 103745.81, flops:108.89, batch-reuse:1
@ 4274 train 4.3869 , allloss: 4.3983, dt: 1284.90ms, fracRes: 0.4250, norm(attn): 0.2100, norm(output): 0.2793, norm(x): 0.5008, norm(y): 0.9911, norm:1.5978, tok/sec: 102009.10, flops:107.07, batch-reuse:1
@ 4275 train 4.3049 , allloss: 4.3164, dt: 1257.77ms, fracRes: 0.4255, norm(attn): 0.2129, norm(output): 0.2793, norm(x): 0.5008, norm(y): 0.9911, norm:1.3694, tok/sec: 104209.43, flops:109.38, batch-reuse:1
@ 4276 train 4.3170 , allloss: 4.3287, dt: 1245.79ms, fracRes: 0.4290, norm(attn): 0.2109, norm(output): 0.2812, norm(x): 0.5070, norm(y): 0.9912, norm:1.5215, tok/sec: 105212.01, flops:110.43, batch-reuse:1
@ 4277 train 4.3891 , allloss: 4.4005, dt: 1273.17ms, fracRes: 0.4262, norm(attn): 0.2090, norm(output): 0.2812, norm(x): 0.5021, norm(y): 0.9912, norm:1.2789, tok/sec: 102949.20, flops:108.06, batch-reuse:1
@ 4278 train 4.3600 , allloss: 4.3712, dt: 1255.29ms, fracRes: 0.4277, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5022, norm(y): 0.9912, norm:1.1913, tok/sec: 104415.63, flops:109.60, batch-reuse:1
@ 4279 train 4.3738 , allloss: 4.3846, dt: 1263.38ms, fracRes: 0.4297, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.5038, norm(y): 0.9913, norm:1.1635, tok/sec: 103747.46, flops:108.90, batch-reuse:1
@ 4280 train 4.2479 , allloss: 4.2594, dt: 1278.71ms, fracRes: 0.4324, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.5085, norm(y): 0.9912, norm:1.1948, tok/sec: 102503.01, flops:107.59, batch-reuse:1
@ 4281 train 4.3407 , allloss: 4.3528, dt: 1300.92ms, fracRes: 0.4320, norm(attn): 0.2090, norm(output): 0.2793, norm(x): 0.5064, norm(y): 0.9912, norm:1.1638, tok/sec: 100753.48, flops:105.75, batch-reuse:1
@ 4282 train 4.3692 , allloss: 4.3813, dt: 1253.98ms, fracRes: 0.4332, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5060, norm(y): 0.9912, norm:1.1946, tok/sec: 104524.38, flops:109.71, batch-reuse:1
@ 4283 train 4.4610 , allloss: 4.4723, dt: 1262.42ms, fracRes: 0.4331, norm(attn): 0.2061, norm(output): 0.2793, norm(x): 0.5052, norm(y): 0.9911, norm:1.1867, tok/sec: 103825.58, flops:108.98, batch-reuse:1
@ 4284 train 4.3694 , allloss: 4.3802, dt: 1255.86ms, fracRes: 0.4319, norm(attn): 0.2041, norm(output): 0.2812, norm(x): 0.5055, norm(y): 0.9913, norm:1.2400, tok/sec: 104368.21, flops:109.55, batch-reuse:1
@ 4285 train 4.2995 , allloss: 4.3107, dt: 1280.51ms, fracRes: 0.4329, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.5076, norm(y): 0.9913, norm:1.2530, tok/sec: 102359.56, flops:107.44, batch-reuse:1
@ 4286 train 4.4036 , allloss: 4.4152, dt: 1280.54ms, fracRes: 0.4307, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.5047, norm(y): 0.9913, norm:1.5798, tok/sec: 102356.97, flops:107.44, batch-reuse:1
@ 4287 train 4.3378 , allloss: 4.3490, dt: 1260.37ms, fracRes: 0.4299, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5058, norm(y): 0.9912, norm:1.5037, tok/sec: 103994.82, flops:109.16, batch-reuse:1
@ 4288 train 4.3229 , allloss: 4.3344, dt: 1261.21ms, fracRes: 0.4287, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5036, norm(y): 0.9911, norm:1.2622, tok/sec: 103925.87, flops:109.08, batch-reuse:1
@ 4289 train 4.4136 , allloss: 4.4248, dt: 1277.21ms, fracRes: 0.4264, norm(attn): 0.2129, norm(output): 0.2812, norm(x): 0.5012, norm(y): 0.9912, norm:1.3384, tok/sec: 102623.34, flops:107.72, batch-reuse:1
@ 4290 train 4.3133 , allloss: 4.3244, dt: 1255.16ms, fracRes: 0.4270, norm(attn): 0.2129, norm(output): 0.2812, norm(x): 0.5024, norm(y): 0.9911, norm:1.2188, tok/sec: 104426.16, flops:109.61, batch-reuse:1
@ 4291 train 4.3534 , allloss: 4.3650, dt: 1273.16ms, fracRes: 0.4276, norm(attn): 0.2129, norm(output): 0.2812, norm(x): 0.5071, norm(y): 0.9911, norm:1.3765, tok/sec: 102950.53, flops:108.06, batch-reuse:1
@ 4292 train 4.4541 , allloss: 4.4657, dt: 1242.09ms, fracRes: 0.4277, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5043, norm(y): 0.9911, norm:1.2389, tok/sec: 105525.51, flops:110.76, batch-reuse:1
@ 4293 train 4.3551 , allloss: 4.3669, dt: 1277.62ms, fracRes: 0.4261, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5007, norm(y): 0.9911, norm:1.3911, tok/sec: 102590.40, flops:107.68, batch-reuse:1
@ 4294 train 4.2326 , allloss: 4.2442, dt: 1256.21ms, fracRes: 0.4274, norm(attn): 0.2109, norm(output): 0.2832, norm(x): 0.5059, norm(y): 0.9911, norm:1.6165, tok/sec: 104339.35, flops:109.52, batch-reuse:1
@ 4295 train 4.4569 , allloss: 4.4680, dt: 1294.42ms, fracRes: 0.4275, norm(attn): 0.2051, norm(output): 0.2832, norm(x): 0.5078, norm(y): 0.9912, norm:1.3490, tok/sec: 101258.93, flops:106.28, batch-reuse:1
@ 4296 train 4.3473 , allloss: 4.3583, dt: 1282.95ms, fracRes: 0.4274, norm(attn): 0.2061, norm(output): 0.2832, norm(x): 0.5056, norm(y): 0.9912, norm:1.4788, tok/sec: 102164.23, flops:107.23, batch-reuse:1
@ 4297 train 4.4026 , allloss: 4.4134, dt: 1286.62ms, fracRes: 0.4289, norm(attn): 0.2051, norm(output): 0.2832, norm(x): 0.5120, norm(y): 0.9910, norm:1.3755, tok/sec: 101872.81, flops:106.93, batch-reuse:1
@ 4298 train 4.3988 , allloss: 4.4096, dt: 1282.29ms, fracRes: 0.4273, norm(attn): 0.2041, norm(output): 0.2812, norm(x): 0.5058, norm(y): 0.9910, norm:1.3513, tok/sec: 102217.01, flops:107.29, batch-reuse:1
@ 4299 train 4.3931 , allloss: 4.4039, dt: 1289.63ms, fracRes: 0.4260, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5058, norm(y): 0.9911, norm:1.1119, tok/sec: 101635.32, flops:106.68, batch-reuse:1
@ 4300 train 4.3416 , allloss: 4.3525, dt: 1282.46ms, fracRes: 0.4269, norm(attn): 0.2090, norm(output): 0.2832, norm(x): 0.5071, norm(y): 0.9911, norm:1.1457, tok/sec: 102203.37, flops:107.28, batch-reuse:1
@ 4301 train 4.2252 , allloss: 4.2367, dt: 1312.81ms, fracRes: 0.4268, norm(attn): 0.2100, norm(output): 0.2812, norm(x): 0.5055, norm(y): 0.9911, norm:1.2304, tok/sec: 99841.02, flops:104.80, batch-reuse:1
@ 4302 train 4.2911 , allloss: 4.3024, dt: 1257.13ms, fracRes: 0.4271, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5060, norm(y): 0.9911, norm:1.1988, tok/sec: 104263.15, flops:109.44, batch-reuse:1
@ 4303 train 4.3973 , allloss: 4.4086, dt: 1292.22ms, fracRes: 0.4296, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5067, norm(y): 0.9912, norm:1.1646, tok/sec: 101431.67, flops:106.47, batch-reuse:1
@ 4304 train 4.2603 , allloss: 4.2716, dt: 1257.23ms, fracRes: 0.4300, norm(attn): 0.2090, norm(output): 0.2832, norm(x): 0.5070, norm(y): 0.9912, norm:1.1493, tok/sec: 104254.19, flops:109.43, batch-reuse:1
@ 4305 train 4.3525 , allloss: 4.3641, dt: 1280.29ms, fracRes: 0.4304, norm(attn): 0.2061, norm(output): 0.2832, norm(x): 0.5085, norm(y): 0.9912, norm:1.2476, tok/sec: 102376.85, flops:107.46, batch-reuse:1
@ 4306 train 4.3911 , allloss: 4.4021, dt: 1250.56ms, fracRes: 0.4287, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.5004, norm(y): 0.9912, norm:1.0344, tok/sec: 104810.94, flops:110.01, batch-reuse:1
@ 4307 train 4.2945 , allloss: 4.3055, dt: 1269.02ms, fracRes: 0.4307, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5059, norm(y): 0.9911, norm:1.1991, tok/sec: 103286.28, flops:108.41, batch-reuse:1
@ 4308 train 4.2303 , allloss: 4.2410, dt: 1264.46ms, fracRes: 0.4295, norm(attn): 0.2090, norm(output): 0.2812, norm(x): 0.5048, norm(y): 0.9912, norm:1.1838, tok/sec: 103658.80, flops:108.80, batch-reuse:1
@ 4309 train 4.2886 , allloss: 4.2996, dt: 1256.11ms, fracRes: 0.4298, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.5054, norm(y): 0.9913, norm:1.2123, tok/sec: 104347.59, flops:109.53, batch-reuse:1
@ 4310 train 4.3298 , allloss: 4.3406, dt: 1282.92ms, fracRes: 0.4285, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.4997, norm(y): 0.9912, norm:1.2644, tok/sec: 102167.05, flops:107.24, batch-reuse:1
@ 4311 train 4.3875 , allloss: 4.3986, dt: 1247.19ms, fracRes: 0.4283, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5007, norm(y): 0.9911, norm:1.3276, tok/sec: 105093.73, flops:110.31, batch-reuse:1
@ 4312 train 4.3215 , allloss: 4.3331, dt: 1271.31ms, fracRes: 0.4290, norm(attn): 0.2109, norm(output): 0.2812, norm(x): 0.5050, norm(y): 0.9911, norm:1.3693, tok/sec: 103100.02, flops:108.22, batch-reuse:1
@ 4313 train 4.3102 , allloss: 4.3217, dt: 1270.99ms, fracRes: 0.4273, norm(attn): 0.2109, norm(output): 0.2812, norm(x): 0.5019, norm(y): 0.9911, norm:1.1421, tok/sec: 103125.65, flops:108.24, batch-reuse:1
@ 4314 train 4.3601 , allloss: 4.3713, dt: 1260.99ms, fracRes: 0.4274, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.5030, norm(y): 0.9912, norm:1.3724, tok/sec: 103943.54, flops:109.10, batch-reuse:1
@ 4315 train 4.3520 , allloss: 4.3629, dt: 1273.55ms, fracRes: 0.4278, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.5027, norm(y): 0.9912, norm:1.4894, tok/sec: 102918.86, flops:108.03, batch-reuse:1
@ 4316 train 4.3777 , allloss: 4.3888, dt: 1265.75ms, fracRes: 0.4260, norm(attn): 0.2119, norm(output): 0.2832, norm(x): 0.5024, norm(y): 0.9911, norm:1.3331, tok/sec: 103553.15, flops:108.69, batch-reuse:1
@ 4317 train 4.3736 , allloss: 4.3850, dt: 1270.44ms, fracRes: 0.4276, norm(attn): 0.2100, norm(output): 0.2812, norm(x): 0.5025, norm(y): 0.9911, norm:1.2783, tok/sec: 103170.93, flops:108.29, batch-reuse:1
@ 4318 train 4.3221 , allloss: 4.3337, dt: 1274.51ms, fracRes: 0.4276, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5017, norm(y): 0.9911, norm:1.0901, tok/sec: 102841.04, flops:107.95, batch-reuse:1
@ 4319 train 4.3706 , allloss: 4.3814, dt: 1268.44ms, fracRes: 0.4285, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5039, norm(y): 0.9912, norm:1.1306, tok/sec: 103333.60, flops:108.46, batch-reuse:1
@ 4320 train 4.3461 , allloss: 4.3570, dt: 1286.04ms, fracRes: 0.4324, norm(attn): 0.2051, norm(output): 0.2852, norm(x): 0.5130, norm(y): 0.9913, norm:1.2678, tok/sec: 101919.12, flops:106.98, batch-reuse:1
@ 4321 train 4.3249 , allloss: 4.3359, dt: 1253.51ms, fracRes: 0.4297, norm(attn): 0.2051, norm(output): 0.2832, norm(x): 0.5090, norm(y): 0.9913, norm:1.2035, tok/sec: 104564.28, flops:109.75, batch-reuse:1
@ 4322 train 4.3482 , allloss: 4.3593, dt: 1261.87ms, fracRes: 0.4289, norm(attn): 0.2061, norm(output): 0.2812, norm(x): 0.5039, norm(y): 0.9913, norm:1.1445, tok/sec: 103871.64, flops:109.03, batch-reuse:1
@ 4323 train 4.3816 , allloss: 4.3928, dt: 1282.06ms, fracRes: 0.4289, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5029, norm(y): 0.9911, norm:1.1887, tok/sec: 102235.66, flops:107.31, batch-reuse:1
@ 4324 train 4.3278 , allloss: 4.3394, dt: 1276.14ms, fracRes: 0.4306, norm(attn): 0.2109, norm(output): 0.2832, norm(x): 0.5099, norm(y): 0.9911, norm:1.1012, tok/sec: 102709.97, flops:107.81, batch-reuse:1
@ 4325 train 4.4284 , allloss: 4.4410, dt: 1256.11ms, fracRes: 0.4296, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5080, norm(y): 0.9911, norm:1.2539, tok/sec: 104347.93, flops:109.53, batch-reuse:1
@ 4326 train 4.4069 , allloss: 4.4177, dt: 1266.70ms, fracRes: 0.4307, norm(attn): 0.2061, norm(output): 0.2832, norm(x): 0.5046, norm(y): 0.9912, norm:1.1839, tok/sec: 103474.97, flops:108.61, batch-reuse:1
@ 4327 train 4.3168 , allloss: 4.3277, dt: 1249.77ms, fracRes: 0.4300, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.5039, norm(y): 0.9912, norm:1.2151, tok/sec: 104877.02, flops:110.08, batch-reuse:1
@ 4328 train 4.2996 , allloss: 4.3106, dt: 1258.80ms, fracRes: 0.4290, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5084, norm(y): 0.9911, norm:1.2469, tok/sec: 104124.70, flops:109.29, batch-reuse:1
@ 4329 train 4.3137 , allloss: 4.3247, dt: 1259.73ms, fracRes: 0.4280, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5002, norm(y): 0.9911, norm:1.0377, tok/sec: 104048.06, flops:109.21, batch-reuse:1
@ 4330 train 4.3151 , allloss: 4.3260, dt: 1274.18ms, fracRes: 0.4293, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5044, norm(y): 0.9911, norm:1.1350, tok/sec: 102868.08, flops:107.97, batch-reuse:1
@ 4331 train 4.3464 , allloss: 4.3577, dt: 1280.69ms, fracRes: 0.4300, norm(attn): 0.2051, norm(output): 0.2832, norm(x): 0.5058, norm(y): 0.9912, norm:1.1186, tok/sec: 102345.12, flops:107.42, batch-reuse:1
@ 4332 train 4.2105 , allloss: 4.2213, dt: 1286.52ms, fracRes: 0.4297, norm(attn): 0.2070, norm(output): 0.2812, norm(x): 0.5057, norm(y): 0.9913, norm:1.1813, tok/sec: 101880.72, flops:106.94, batch-reuse:1
@ 4333 train 4.3671 , allloss: 4.3778, dt: 1253.97ms, fracRes: 0.4289, norm(attn): 0.2080, norm(output): 0.2832, norm(x): 0.5069, norm(y): 0.9912, norm:1.1695, tok/sec: 104525.81, flops:109.71, batch-reuse:1
@ 4334 train 4.2982 , allloss: 4.3096, dt: 1253.25ms, fracRes: 0.4307, norm(attn): 0.2100, norm(output): 0.2832, norm(x): 0.5084, norm(y): 0.9911, norm:1.2951, tok/sec: 104585.31, flops:109.78, batch-reuse:1
@ 4335 train 4.3269 , allloss: 4.3384, dt: 1255.26ms, fracRes: 0.4275, norm(attn): 0.2109, norm(output): 0.2832, norm(x): 0.5041, norm(y): 0.9911, norm:1.2046, tok/sec: 104418.17, flops:109.60, batch-reuse:1
@ 4336 train 4.3207 , allloss: 4.3322, dt: 1265.85ms, fracRes: 0.4276, norm(attn): 0.2100, norm(output): 0.2812, norm(x): 0.5015, norm(y): 0.9911, norm:1.0495, tok/sec: 103544.78, flops:108.68, batch-reuse:1
@ 4337 train 4.3333 , allloss: 4.3462, dt: 1288.20ms, fracRes: 0.4285, norm(attn): 0.2109, norm(output): 0.2832, norm(x): 0.5076, norm(y): 0.9911, norm:1.0820, tok/sec: 101748.28, flops:106.80, batch-reuse:1
@ 4338 train 4.2303 , allloss: 4.2411, dt: 1273.23ms, fracRes: 0.4287, norm(attn): 0.2100, norm(output): 0.2832, norm(x): 0.5066, norm(y): 0.9912, norm:1.1321, tok/sec: 102944.59, flops:108.05, batch-reuse:1
@ 4339 train 4.3229 , allloss: 4.3340, dt: 1269.81ms, fracRes: 0.4271, norm(attn): 0.2109, norm(output): 0.2812, norm(x): 0.5009, norm(y): 0.9911, norm:1.1377, tok/sec: 103221.82, flops:108.34, batch-reuse:1
@ 4340 train 4.2974 , allloss: 4.3084, dt: 1281.10ms, fracRes: 0.4271, norm(attn): 0.2090, norm(output): 0.2812, norm(x): 0.5014, norm(y): 0.9911, norm:1.0742, tok/sec: 102311.81, flops:107.39, batch-reuse:1
@ 4341 train 4.3912 , allloss: 4.4028, dt: 1253.97ms, fracRes: 0.4277, norm(attn): 0.2129, norm(output): 0.2852, norm(x): 0.5095, norm(y): 0.9911, norm:1.1871, tok/sec: 104525.53, flops:109.71, batch-reuse:1
@ 4342 train 4.3279 , allloss: 4.3396, dt: 1276.36ms, fracRes: 0.4256, norm(attn): 0.2080, norm(output): 0.2812, norm(x): 0.5027, norm(y): 0.9911, norm:1.3660, tok/sec: 102692.14, flops:107.79, batch-reuse:1
@ 4343 train 4.3814 , allloss: 4.3926, dt: 1271.45ms, fracRes: 0.4262, norm(attn): 0.2080, norm(output): 0.2832, norm(x): 0.5084, norm(y): 0.9912, norm:1.5035, tok/sec: 103088.62, flops:108.21, batch-reuse:1
@ 4344 train 4.3995 , allloss: 4.4107, dt: 1291.54ms, fracRes: 0.4277, norm(attn): 0.2061, norm(output): 0.2832, norm(x): 0.5110, norm(y): 0.9912, norm:1.1712, tok/sec: 101485.30, flops:106.52, batch-reuse:1
@ 4345 train 4.2647 , allloss: 4.2760, dt: 1256.70ms, fracRes: 0.4260, norm(attn): 0.2139, norm(output): 0.2832, norm(x): 0.5065, norm(y): 0.9910, norm:1.2672, tok/sec: 104298.32, flops:109.47, batch-reuse:1
@ 4346 train 4.3380 , allloss: 4.3484, dt: 1286.91ms, fracRes: 0.4269, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5068, norm(y): 0.9912, norm:1.2196, tok/sec: 101850.56, flops:106.91, batch-reuse:1
@ 4347 train 4.3177 , allloss: 4.3282, dt: 1271.04ms, fracRes: 0.4281, norm(attn): 0.2061, norm(output): 0.2852, norm(x): 0.5090, norm(y): 0.9913, norm:1.2855, tok/sec: 103121.91, flops:108.24, batch-reuse:1
@ 4348 train 4.4904 , allloss: 4.5013, dt: 1261.36ms, fracRes: 0.4311, norm(attn): 0.2041, norm(output): 0.2852, norm(x): 0.5170, norm(y): 0.9913, norm:1.3408, tok/sec: 103913.16, flops:109.07, batch-reuse:1
@ 4349 train 4.4153 , allloss: 4.4261, dt: 1299.34ms, fracRes: 0.4298, norm(attn): 0.2051, norm(output): 0.2852, norm(x): 0.5140, norm(y): 0.9912, norm:1.2532, tok/sec: 100875.48, flops:105.88, batch-reuse:1
@ 4350 train 4.2956 , allloss: 4.3065, dt: 1263.88ms, fracRes: 0.4315, norm(attn): 0.2051, norm(output): 0.2832, norm(x): 0.5119, norm(y): 0.9912, norm:1.4009, tok/sec: 103705.68, flops:108.85, batch-reuse:1
@ 4351 train 4.4154 , allloss: 4.4261, dt: 1260.40ms, fracRes: 0.4303, norm(attn): 0.2031, norm(output): 0.2832, norm(x): 0.5068, norm(y): 0.9912, norm:1.2396, tok/sec: 103992.24, flops:109.15, batch-reuse:1
@ 4352 train 4.2763 , allloss: 4.2875, dt: 1309.96ms, fracRes: 0.4310, norm(attn): 0.2061, norm(output): 0.2832, norm(x): 0.5101, norm(y): 0.9912, norm:1.2143, tok/sec: 100058.19, flops:105.02, batch-reuse:1
@ 4353 train 4.2930 , allloss: 4.3040, dt: 1268.43ms, fracRes: 0.4309, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5129, norm(y): 0.9912, norm:1.2069, tok/sec: 103333.73, flops:108.46, batch-reuse:1
@ 4354 train 4.2503 , allloss: 4.2645, dt: 1265.63ms, fracRes: 0.4312, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5115, norm(y): 0.9912, norm:1.2587, tok/sec: 103562.77, flops:108.70, batch-reuse:1
@ 4355 train 4.2687 , allloss: 4.2794, dt: 1256.32ms, fracRes: 0.4290, norm(attn): 0.2070, norm(output): 0.2852, norm(x): 0.5088, norm(y): 0.9911, norm:1.1883, tok/sec: 104329.95, flops:109.51, batch-reuse:1
@ 4356 train 4.2850 , allloss: 4.2959, dt: 1266.28ms, fracRes: 0.4311, norm(attn): 0.2080, norm(output): 0.2852, norm(x): 0.5149, norm(y): 0.9912, norm:1.3483, tok/sec: 103509.17, flops:108.65, batch-reuse:1
@ 4357 train 4.2915 , allloss: 4.3025, dt: 1285.62ms, fracRes: 0.4289, norm(attn): 0.2090, norm(output): 0.2832, norm(x): 0.5061, norm(y): 0.9911, norm:1.1744, tok/sec: 101952.22, flops:107.01, batch-reuse:1
@ 4358 train 4.3583 , allloss: 4.3692, dt: 1259.98ms, fracRes: 0.4285, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5009, norm(y): 0.9912, norm:1.3860, tok/sec: 104026.76, flops:109.19, batch-reuse:1
@ 4359 train 4.2555 , allloss: 4.2666, dt: 1254.24ms, fracRes: 0.4285, norm(attn): 0.2061, norm(output): 0.2832, norm(x): 0.5049, norm(y): 0.9912, norm:1.2489, tok/sec: 104503.54, flops:109.69, batch-reuse:1
@ 4360 train 4.5375 , allloss: 4.5488, dt: 1275.02ms, fracRes: 0.4307, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5097, norm(y): 0.9911, norm:1.6377, tok/sec: 102799.56, flops:107.90, batch-reuse:1
@ 4361 train 4.3732 , allloss: 4.3843, dt: 1253.08ms, fracRes: 0.4289, norm(attn): 0.2129, norm(output): 0.2832, norm(x): 0.5098, norm(y): 0.9911, norm:1.6565, tok/sec: 104599.95, flops:109.79, batch-reuse:1
@ 4362 train 4.3467 , allloss: 4.3577, dt: 1256.66ms, fracRes: 0.4287, norm(attn): 0.2090, norm(output): 0.2832, norm(x): 0.5114, norm(y): 0.9912, norm:1.3924, tok/sec: 104302.28, flops:109.48, batch-reuse:1
@ 4363 train 4.3026 , allloss: 4.3137, dt: 1259.67ms, fracRes: 0.4275, norm(attn): 0.2080, norm(output): 0.2832, norm(x): 0.5090, norm(y): 0.9911, norm:1.3616, tok/sec: 104052.33, flops:109.22, batch-reuse:1
@ 4364 train 4.3224 , allloss: 4.3335, dt: 1318.04ms, fracRes: 0.4277, norm(attn): 0.2090, norm(output): 0.2832, norm(x): 0.5077, norm(y): 0.9911, norm:1.2832, tok/sec: 99445.00, flops:104.38, batch-reuse:1
@ 4365 train 4.2865 , allloss: 4.2977, dt: 1275.51ms, fracRes: 0.4291, norm(attn): 0.2109, norm(output): 0.2832, norm(x): 0.5124, norm(y): 0.9910, norm:1.4327, tok/sec: 102760.54, flops:107.86, batch-reuse:1
@ 4366 train 4.3123 , allloss: 4.3249, dt: 1279.96ms, fracRes: 0.4314, norm(attn): 0.2109, norm(output): 0.2852, norm(x): 0.5192, norm(y): 0.9910, norm:1.2696, tok/sec: 102403.47, flops:107.49, batch-reuse:1
@ 4367 train 4.2337 , allloss: 4.2468, dt: 1261.52ms, fracRes: 0.4301, norm(attn): 0.2080, norm(output): 0.2832, norm(x): 0.5100, norm(y): 0.9911, norm:1.2505, tok/sec: 103899.75, flops:109.06, batch-reuse:1
@ 4368 train 4.3533 , allloss: 4.3649, dt: 1272.48ms, fracRes: 0.4299, norm(attn): 0.2051, norm(output): 0.2852, norm(x): 0.5128, norm(y): 0.9911, norm:1.2752, tok/sec: 103004.96, flops:108.12, batch-reuse:1
@ 4369 train 4.2456 , allloss: 4.2572, dt: 1274.65ms, fracRes: 0.4294, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.5093, norm(y): 0.9911, norm:1.1612, tok/sec: 102830.04, flops:107.93, batch-reuse:1
@ 4370 train 4.1932 , allloss: 4.2048, dt: 1261.81ms, fracRes: 0.4289, norm(attn): 0.2061, norm(output): 0.2832, norm(x): 0.5117, norm(y): 0.9911, norm:1.2902, tok/sec: 103876.55, flops:109.03, batch-reuse:1
@ 4371 train 4.2869 , allloss: 4.2983, dt: 1282.75ms, fracRes: 0.4301, norm(attn): 0.2080, norm(output): 0.2832, norm(x): 0.5142, norm(y): 0.9911, norm:1.2887, tok/sec: 102180.29, flops:107.25, batch-reuse:1
@ 4372 train 4.2600 , allloss: 4.2708, dt: 1272.02ms, fracRes: 0.4293, norm(attn): 0.2061, norm(output): 0.2832, norm(x): 0.5082, norm(y): 0.9911, norm:1.5290, tok/sec: 103042.49, flops:108.16, batch-reuse:1
@ 4373 train 4.2903 , allloss: 4.3015, dt: 1305.11ms, fracRes: 0.4308, norm(attn): 0.2051, norm(output): 0.2852, norm(x): 0.5136, norm(y): 0.9910, norm:1.3332, tok/sec: 100429.89, flops:105.41, batch-reuse:1
@ 4374 train 4.3449 , allloss: 4.3567, dt: 1242.69ms, fracRes: 0.4312, norm(attn): 0.2041, norm(output): 0.2812, norm(x): 0.5092, norm(y): 0.9911, norm:1.1668, tok/sec: 105474.00, flops:110.71, batch-reuse:1
@ 4375 train 4.2644 , allloss: 4.2759, dt: 1267.54ms, fracRes: 0.4317, norm(attn): 0.2061, norm(output): 0.2832, norm(x): 0.5103, norm(y): 0.9912, norm:1.1206, tok/sec: 103406.81, flops:108.54, batch-reuse:1
@ 4376 train 4.3277 , allloss: 4.3385, dt: 1256.66ms, fracRes: 0.4318, norm(attn): 0.2051, norm(output): 0.2812, norm(x): 0.5116, norm(y): 0.9912, norm:1.3262, tok/sec: 104302.14, flops:109.48, batch-reuse:1
@ 4377 train 4.3283 , allloss: 4.3394, dt: 1285.49ms, fracRes: 0.4320, norm(attn): 0.2070, norm(output): 0.2832, norm(x): 0.5164, norm(y): 0.9911, norm:1.1592, tok/sec: 101962.84, flops:107.02, batch-reuse:1
@ 4378 train 4.2230 , allloss: 4.2337, dt: 1244.49ms, fracRes: 0.4317, norm(attn): 0.2100, norm(output): 0.2832, norm(x): 0.5175, norm(y): 0.9910, norm:1.2417, tok/sec: 105321.66, flops:110.55, batch-reuse:1
@ 4379 train 4.2441 , allloss: 4.2551, dt: 1264.67ms, fracRes: 0.4282, norm(attn): 0.2119, norm(output): 0.2852, norm(x): 0.5104, norm(y): 0.9910, norm:1.2163, tok/sec: 103641.06, flops:108.78, batch-reuse:1
@ 4380 train 4.2833 , allloss: 4.2948, dt: 1281.01ms, fracRes: 0.4307, norm(attn): 0.2100, norm(output): 0.2832, norm(x): 0.5136, norm(y): 0.9911, norm:1.3507, tok/sec: 102318.95, flops:107.40, batch-reuse:1
@ 4381 train 4.2760 , allloss: 4.2872, dt: 1291.29ms, fracRes: 0.4295, norm(attn): 0.2109, norm(output): 0.2832, norm(x): 0.5136, norm(y): 0.9910, norm:1.2628, tok/sec: 101504.37, flops:106.54, batch-reuse:1
