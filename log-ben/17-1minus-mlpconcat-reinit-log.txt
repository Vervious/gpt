Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 17-1minus-mlpconcat-reinit
MLPSCALE: 4
Experiment description: 
```
Transformer, max LR 0.0006 n_layer 8
Setting:
==details======
 machine_code
class BenExecute(nn.Module):

    def __init__(self, config):
        super().__init__()
        self.mlp = MLPConcat(config)
        # self.ln_2 = nn.LayerNorm(config.n_embd, elementwise_affine=ELEMENTWISEAFFINE)

    
    def forward(self, program, attn):
        return self.mlp(program, attn)
----------------
 machine_modules
        self.compiler = BenCompilerNoOp(config)
        self.execute = BenExecute(config)
----------------
 block_logic
        y = self.ln_1(x)
        attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
        program = self.compiler(y)
        machineOutput = self.execute(program, attn)
        newx = xWeights * x + (1 - xWeights) * machineOutput
----------------
 loss_logic
                x, metadata = block(x,print_weights=print_weights,step=i)
                _x_total = x
                _in = x.detach()
                _x, _ = block(_in,print_weights=False) # Do again... lol
                _xtraloss = _xtraloss + torch.linalg.norm(_x - _in, dim=-1, ord=float('inf')).mean()
----------------
========
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
ATTENTION_SINK=True
ATTENTION_MASK =True
IDENTITY_LOSS=True
```
![caption](img/17-1minus-mlpconcat-reinit.jpg)

Warmup steps: 2000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 8, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 34, with 114,917,376 parameters
num non-decayed parameter tensors: 34, with 44,544 parameters
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7578, 0.2422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0776, 0.0500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0427, 0.0698, 0.0496, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0254, 0.0537, 0.0273, 0.0216, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8867, 0.0305, 0.0173, 0.0312, 0.0173, 0.0155, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0295, 0.0064, 0.0109, 0.0143, 0.0212, 0.0139, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.0146, 0.0155, 0.0206, 0.0270, 0.0104, 0.0140, 0.0090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0074, 0.0125, 0.0098, 0.0137, 0.0114, 0.0070, 0.0088, 0.0134, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0052, 0.0107, 0.0106, 0.0107, 0.0094, 0.0134, 0.0084, 0.0109, 0.0056, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9219, 0.0066, 0.0092, 0.0067, 0.0086, 0.0048, 0.0080, 0.0111, 0.0062, 0.0069, 0.0115, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0038, 0.0078, 0.0070, 0.0051, 0.0065, 0.0064, 0.0091, 0.0040, 0.0034, 0.0060, 0.0074, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0051, 0.0072, 0.0034, 0.0088, 0.0080, 0.0035, 0.0032, 0.0041, 0.0059, 0.0071, 0.0046, 0.0038, 0.0000, 0.0000],
        [0.9336, 0.0047, 0.0049, 0.0028, 0.0075, 0.0032, 0.0040, 0.0055, 0.0069, 0.0058, 0.0037, 0.0067, 0.0053, 0.0062, 0.0000],
        [0.9375, 0.0039, 0.0052, 0.0043, 0.0045, 0.0051, 0.0058, 0.0035, 0.0032, 0.0044, 0.0044, 0.0061, 0.0042, 0.0025, 0.0045]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,      0.2402,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,     -0.2129,     -0.6562,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,     -0.2090,      0.2773,     -0.0645,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,     -0.3145,      0.4336,     -0.2422,     -0.4766,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,      0.2090,     -0.3594,      0.2305,     -0.3555,     -0.4688,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,      0.4707,     -1.0625,     -0.5312,     -0.2539,      0.1396,     -0.2871,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,      0.0449,      0.1069,      0.3926,      0.6602,     -0.2910,      0.0061,     -0.4316,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,     -0.4043,      0.1079,     -0.1338,      0.2061,      0.0199,     -0.4668,     -0.2373,      0.1777,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,     -0.5664,      0.1406,      0.1348,      0.1494,      0.0166,      0.3711,     -0.1006,      0.1641,     -0.5117,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,     -0.1631,      0.1807,     -0.1387,      0.1060,     -0.4785,      0.0361,      0.3652,     -0.2168,     -0.1177,      0.3965,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,     -0.5352,      0.1768,      0.0757,     -0.2373,      0.0004,     -0.0194,      0.3359,     -0.4805,     -0.6445,     -0.0708,      0.1260,        -inf,        -inf,        -inf],
          [     5.1299,     -0.0840,      0.2520,     -0.4844,      0.4570,      0.3652,     -0.4551,     -0.5586,     -0.3086,      0.0554,      0.2432,     -0.1807,     -0.3906,        -inf,        -inf],
          [     5.2781,     -0.0178,      0.0391,     -0.5352,      0.4551,     -0.3809,     -0.1611,      0.1514,      0.3730,      0.1934,     -0.2461,      0.3438,      0.1113,      0.2637,        -inf],
          [     5.4161,     -0.0864,      0.2021,      0.0304,      0.0771,      0.1973,      0.3164,     -0.1973,     -0.2754,      0.0471,      0.0330,      0.3652,      0.0096,     -0.5430,      0.0542]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7874],
        [0.8086],
        [0.8327],
        [0.8509],
        [0.8665],
        [0.8870],
        [0.8984],
        [0.9079],
        [0.9176],
        [0.9206],
        [0.9281],
        [0.9307],
        [0.9349],
        [0.9362]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8164, 0.0679, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8125, 0.0442, 0.0752, 0.0669, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8633, 0.0366, 0.0283, 0.0464, 0.0258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8750, 0.0203, 0.0435, 0.0154, 0.0168, 0.0302, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0155, 0.0225, 0.0146, 0.0205, 0.0264, 0.0229, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9062, 0.0068, 0.0132, 0.0072, 0.0315, 0.0123, 0.0139, 0.0084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0096, 0.0121, 0.0080, 0.0070, 0.0137, 0.0123, 0.0128, 0.0107, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0052, 0.0080, 0.0100, 0.0166, 0.0081, 0.0082, 0.0089, 0.0112, 0.0072, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9102, 0.0108, 0.0135, 0.0065, 0.0072, 0.0053, 0.0072, 0.0139, 0.0058, 0.0053, 0.0150, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0070, 0.0069, 0.0054, 0.0041, 0.0054, 0.0056, 0.0067, 0.0058, 0.0060, 0.0076, 0.0041, 0.0000, 0.0000, 0.0000],
        [0.9258, 0.0069, 0.0053, 0.0092, 0.0062, 0.0050, 0.0058, 0.0082, 0.0053, 0.0052, 0.0092, 0.0049, 0.0040, 0.0000, 0.0000],
        [0.9414, 0.0042, 0.0051, 0.0049, 0.0041, 0.0039, 0.0060, 0.0046, 0.0046, 0.0041, 0.0053, 0.0035, 0.0035, 0.0049, 0.0000],
        [0.9453, 0.0038, 0.0045, 0.0045, 0.0033, 0.0031, 0.0036, 0.0035, 0.0041, 0.0036, 0.0050, 0.0028, 0.0033, 0.0054, 0.0033]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -0.2109,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -0.2871,  0.2324,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -0.1475,  0.3809,  0.2656,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  0.0566, -0.1963,  0.2949, -0.2910,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -0.1885,  0.5742, -0.4590, -0.3711,  0.2109,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918, -0.1445,  0.2256, -0.2080,  0.1348,  0.3848,  0.2451,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, -0.7305, -0.0723, -0.6758,  0.7930, -0.1406, -0.0266, -0.5312,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -0.1533,  0.0811, -0.3320, -0.4727,  0.2061,  0.0957,  0.1387, -0.0447,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052, -0.5859, -0.1484,  0.0786,  0.5820, -0.1377, -0.1221, -0.0398,  0.1914, -0.2490,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  0.3496,  0.5742, -0.1670, -0.0635, -0.3535, -0.0625,  0.5977, -0.2695, -0.3652,  0.6758,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698,  0.0776,  0.0571, -0.1777, -0.4707, -0.1895, -0.1572,  0.0344, -0.1201, -0.0791,  0.1562, -0.4668,    -inf,    -inf,    -inf],
          [ 5.1299,  0.2305, -0.0280,  0.5078,  0.1230, -0.0923,  0.0554,  0.4043, -0.0381, -0.0571,  0.5156, -0.1069, -0.3184,    -inf,    -inf],
          [ 5.2781, -0.1348,  0.0605,  0.0192, -0.1611, -0.2080,  0.2246, -0.0378, -0.0388, -0.1611,  0.1055, -0.3145, -0.3164,  0.0280,    -inf],
          [ 5.4161, -0.1211,  0.0669,  0.0603, -0.2451, -0.3203, -0.1699, -0.1826, -0.0371, -0.1553,  0.1592, -0.4082, -0.2637,  0.2402, -0.2422]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7861],
        [0.8141],
        [0.8372],
        [0.8636],
        [0.8636],
        [0.8893],
        [0.8965],
        [0.9085],
        [0.9105],
        [0.9209],
        [0.9261],
        [0.9310],
        [0.9372],
        [0.9375]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7070, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7656, 0.1050, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0447, 0.0289, 0.0854, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0236, 0.0422, 0.0215, 0.0325, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8945, 0.0259, 0.0161, 0.0177, 0.0222, 0.0233, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0109, 0.0115, 0.0157, 0.0266, 0.0091, 0.0131, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8867, 0.0116, 0.0220, 0.0287, 0.0184, 0.0114, 0.0087, 0.0141, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0105, 0.0082, 0.0090, 0.0124, 0.0129, 0.0107, 0.0075, 0.0092, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9219, 0.0094, 0.0101, 0.0089, 0.0097, 0.0080, 0.0095, 0.0053, 0.0103, 0.0067, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0147, 0.0069, 0.0085, 0.0101, 0.0092, 0.0063, 0.0077, 0.0051, 0.0052, 0.0076, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0063, 0.0066, 0.0069, 0.0052, 0.0049, 0.0084, 0.0054, 0.0106, 0.0136, 0.0056, 0.0088, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0055, 0.0043, 0.0059, 0.0060, 0.0062, 0.0096, 0.0052, 0.0031, 0.0029, 0.0072, 0.0070, 0.0049, 0.0000, 0.0000],
        [0.9453, 0.0056, 0.0037, 0.0065, 0.0059, 0.0044, 0.0041, 0.0031, 0.0031, 0.0042, 0.0030, 0.0052, 0.0030, 0.0029, 0.0000],
        [0.9375, 0.0067, 0.0042, 0.0057, 0.0079, 0.0022, 0.0038, 0.0058, 0.0025, 0.0030, 0.0032, 0.0028, 0.0050, 0.0025, 0.0078]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,      0.5078,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,      0.2197,      0.4395,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,     -0.1699,     -0.6016,      0.4785,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,     -0.4043,      0.1797,     -0.4961,     -0.0825,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,      0.0359,     -0.4355,     -0.3477,     -0.1172,     -0.0679,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,     -0.5430,     -0.4805,     -0.1670,      0.3535,     -0.7188,     -0.3535,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,     -0.1807,      0.4590,      0.7305,      0.2832,     -0.2012,     -0.4688,      0.0165,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,     -0.0659,     -0.3086,     -0.2246,      0.1011,      0.1367,     -0.0513,     -0.4023,     -0.1963,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,      0.0046,      0.0801,     -0.0427,      0.0393,     -0.1553,      0.0222,     -0.5703,      0.1011,     -0.3320,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,      0.6484,     -0.1152,      0.1025,      0.2715,      0.1826,     -0.2051,     -0.0031,     -0.4160,     -0.3828,     -0.0104,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,     -0.0220,      0.0282,      0.0747,     -0.2129,     -0.2617,      0.2715,     -0.1592,      0.5039,      0.7578,     -0.1309,      0.3164,        -inf,        -inf,        -inf],
          [     5.1299,     -0.0164,     -0.2598,      0.0544,      0.0840,      0.1157,      0.5469,     -0.0537,     -0.5742,     -0.6367,      0.2656,      0.2295,     -0.1245,        -inf,        -inf],
          [     5.2781,      0.1611,     -0.2695,      0.2988,      0.1992,     -0.0806,     -0.1572,     -0.4316,     -0.4355,     -0.1230,     -0.4590,      0.0688,     -0.4609,     -0.5156,        -inf],
          [     5.4161,      0.4688,     -0.0129,      0.3105,      0.6250,     -0.6367,     -0.0879,      0.3281,     -0.5000,     -0.3340,     -0.2852,     -0.4043,      0.1807,     -0.5078,      0.6094]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7708],
        [0.8184],
        [0.8385],
        [0.8704],
        [0.8883],
        [0.8844],
        [0.8939],
        [0.9108],
        [0.9150],
        [0.9176],
        [0.9251],
        [0.9290],
        [0.9359],
        [0.9398]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7617, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8008, 0.0957, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7695, 0.0913, 0.0820, 0.0586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0248, 0.0354, 0.0469, 0.0537, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8750, 0.0210, 0.0334, 0.0284, 0.0291, 0.0126, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.0175, 0.0444, 0.0168, 0.0250, 0.0265, 0.0170, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8633, 0.0216, 0.0154, 0.0256, 0.0217, 0.0182, 0.0143, 0.0190, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0053, 0.0156, 0.0112, 0.0115, 0.0067, 0.0106, 0.0145, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0069, 0.0071, 0.0051, 0.0117, 0.0092, 0.0108, 0.0079, 0.0141, 0.0096, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8984, 0.0140, 0.0095, 0.0181, 0.0081, 0.0083, 0.0157, 0.0089, 0.0082, 0.0060, 0.0064, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0052, 0.0046, 0.0073, 0.0073, 0.0061, 0.0064, 0.0089, 0.0041, 0.0072, 0.0054, 0.0055, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0050, 0.0066, 0.0074, 0.0096, 0.0107, 0.0062, 0.0072, 0.0061, 0.0044, 0.0047, 0.0060, 0.0080, 0.0000, 0.0000],
        [0.9336, 0.0034, 0.0078, 0.0027, 0.0062, 0.0047, 0.0064, 0.0062, 0.0037, 0.0045, 0.0062, 0.0079, 0.0036, 0.0039, 0.0000],
        [0.9453, 0.0031, 0.0056, 0.0048, 0.0049, 0.0038, 0.0048, 0.0034, 0.0041, 0.0035, 0.0034, 0.0027, 0.0036, 0.0036, 0.0036]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,      0.2217,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,      0.0767,      0.1592,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,      0.6367,      0.5273,      0.1924,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,     -0.3027,      0.0554,      0.3359,      0.4707,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,     -0.1523,      0.3105,      0.1523,      0.1709,     -0.6602,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,      0.0040,      0.9375,     -0.0315,      0.3594,      0.4199,     -0.0261,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,      0.4648,      0.1270,      0.6367,      0.4707,      0.2930,      0.0520,      0.3398,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,     -0.7344,      0.3379,      0.0027,      0.0295,     -0.5039,     -0.0481,      0.2637,     -0.1660,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,     -0.2930,     -0.2656,     -0.5938,      0.2256,     -0.0129,      0.1543,     -0.1553,      0.4160,      0.0342,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,      0.6250,      0.2305,      0.8750,      0.0684,      0.0967,      0.7422,      0.1680,      0.0830,     -0.2285,     -0.1660,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,     -0.2119,     -0.3379,      0.1147,      0.1226,     -0.0623,     -0.0096,      0.3203,     -0.4551,      0.1099,     -0.1836,     -0.1650,        -inf,        -inf,        -inf],
          [     5.1299,     -0.0884,      0.1875,      0.2969,      0.5625,      0.6680,      0.1279,      0.2734,      0.1172,     -0.2139,     -0.1562,      0.0854,      0.3848,        -inf,        -inf],
          [     5.2781,     -0.3184,      0.5000,     -0.5586,      0.2676,     -0.0142,      0.2988,      0.2637,     -0.2539,     -0.0649,      0.2598,      0.5078,     -0.2695,     -0.1865,        -inf],
          [     5.4161,     -0.3301,      0.2734,      0.1279,      0.1445,     -0.1143,      0.1182,     -0.2266,     -0.0344,     -0.1943,     -0.2285,     -0.4668,     -0.1777,     -0.1660,     -0.1592]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8216],
        [0.8145],
        [0.8434],
        [0.8594],
        [0.8802],
        [0.8841],
        [0.8952],
        [0.9118],
        [0.9144],
        [0.9199],
        [0.9248],
        [0.9320],
        [0.9342],
        [0.9388]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8008, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7812, 0.1230, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7930, 0.0713, 0.0420, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8555, 0.0530, 0.0281, 0.0417, 0.0234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0204, 0.0173, 0.0256, 0.0148, 0.0184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.0219, 0.0167, 0.0194, 0.0114, 0.0238, 0.0143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8672, 0.0239, 0.0148, 0.0187, 0.0187, 0.0267, 0.0120, 0.0178, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0082, 0.0171, 0.0084, 0.0085, 0.0122, 0.0103, 0.0089, 0.0090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9102, 0.0096, 0.0081, 0.0095, 0.0145, 0.0153, 0.0055, 0.0100, 0.0078, 0.0110, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0073, 0.0056, 0.0066, 0.0043, 0.0079, 0.0055, 0.0042, 0.0096, 0.0085, 0.0111, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0100, 0.0081, 0.0045, 0.0081, 0.0098, 0.0051, 0.0051, 0.0063, 0.0084, 0.0082, 0.0081, 0.0000, 0.0000, 0.0000],
        [0.9375, 0.0054, 0.0063, 0.0059, 0.0055, 0.0050, 0.0043, 0.0047, 0.0037, 0.0049, 0.0058, 0.0027, 0.0066, 0.0000, 0.0000],
        [0.9375, 0.0055, 0.0056, 0.0052, 0.0050, 0.0059, 0.0049, 0.0027, 0.0054, 0.0060, 0.0038, 0.0049, 0.0039, 0.0052, 0.0000],
        [0.9375, 0.0061, 0.0058, 0.0039, 0.0036, 0.0029, 0.0044, 0.0035, 0.0059, 0.0057, 0.0035, 0.0038, 0.0042, 0.0049, 0.0044]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -0.0156,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972,  0.3555,  0.1152,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726,  0.3594, -0.1729,  0.6172,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  0.4395, -0.1943,  0.2021, -0.3730,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -0.2109, -0.3750,  0.0165, -0.5312, -0.3125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  0.1787, -0.0840,  0.0620, -0.4746,  0.2676, -0.2402,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  0.5625,  0.0884,  0.3164,  0.3203,  0.6758, -0.1279,  0.2676,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -0.3105,  0.4238, -0.2891, -0.2793,  0.0850, -0.0850, -0.2373, -0.2168,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  0.0435, -0.1260,  0.0381,  0.4570,  0.5078, -0.5156,  0.0840, -0.1611,  0.1836,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, -0.0645, -0.3242, -0.1631, -0.5977,  0.0078, -0.3516, -0.6211,  0.2090,  0.0811,  0.3535,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698,  0.4473,  0.2305, -0.3398,  0.2344,  0.4316, -0.2275, -0.2197, -0.0195,  0.2793,  0.2520,  0.2305,    -inf,    -inf,    -inf],
          [ 5.1299, -0.0376,  0.1299,  0.0496, -0.0179, -0.1079, -0.2520, -0.1738, -0.4004, -0.1338,  0.0439, -0.7344,  0.1719,    -inf,    -inf],
          [ 5.2781,  0.1377,  0.1572,  0.0981,  0.0430,  0.2109,  0.0269, -0.5586,  0.1235,  0.2334, -0.2139,  0.0248, -0.1963,  0.0840,    -inf],
          [ 5.4161,  0.3750,  0.3164, -0.0811, -0.1504, -0.3711,  0.0400, -0.1855,  0.3359,  0.3125, -0.1816, -0.0913, -0.0055,  0.1641,  0.0449]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8089],
        [0.8135],
        [0.8298],
        [0.8542],
        [0.8701],
        [0.8952],
        [0.8893],
        [0.9095],
        [0.9137],
        [0.9196],
        [0.9248],
        [0.9333],
        [0.9339],
        [0.9362]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Roses:0.0061 are:0.0029 red:0.0127,:0.0486 Pot:0.0515atoes:0.1094 are:0.0250 :0.0693)
 
------
		( are:0.0029 red:0.0127,:0.0486 Pot:0.0515atoes:0.1094 are:0.0250 :0.0693 :0.0874)
               
@ 0 train 11.5768 , allloss: 11.5897, dt: 2678.05ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2266, tok/sec: 48943.16, flops:38.12, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7578, 0.2422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0776, 0.0500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0427, 0.0693, 0.0496, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0255, 0.0537, 0.0273, 0.0216, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8867, 0.0306, 0.0173, 0.0312, 0.0173, 0.0155, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0295, 0.0064, 0.0109, 0.0143, 0.0212, 0.0139, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.0146, 0.0155, 0.0206, 0.0270, 0.0104, 0.0140, 0.0090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0074, 0.0125, 0.0098, 0.0137, 0.0114, 0.0070, 0.0088, 0.0134, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0052, 0.0107, 0.0106, 0.0107, 0.0094, 0.0134, 0.0084, 0.0109, 0.0056, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9219, 0.0066, 0.0092, 0.0067, 0.0086, 0.0048, 0.0080, 0.0111, 0.0062, 0.0069, 0.0115, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0038, 0.0078, 0.0070, 0.0051, 0.0065, 0.0063, 0.0091, 0.0040, 0.0034, 0.0060, 0.0074, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0051, 0.0072, 0.0034, 0.0088, 0.0080, 0.0035, 0.0032, 0.0041, 0.0059, 0.0071, 0.0046, 0.0038, 0.0000, 0.0000],
        [0.9336, 0.0047, 0.0049, 0.0028, 0.0075, 0.0032, 0.0040, 0.0055, 0.0069, 0.0057, 0.0037, 0.0067, 0.0053, 0.0062, 0.0000],
        [0.9375, 0.0039, 0.0052, 0.0043, 0.0045, 0.0051, 0.0058, 0.0035, 0.0032, 0.0044, 0.0044, 0.0061, 0.0042, 0.0025, 0.0045]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,      0.2402,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,     -0.2129,     -0.6562,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,     -0.2090,      0.2754,     -0.0645,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,     -0.3145,      0.4336,     -0.2422,     -0.4766,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,      0.2100,     -0.3594,      0.2305,     -0.3555,     -0.4688,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,      0.4707,     -1.0625,     -0.5312,     -0.2539,      0.1396,     -0.2871,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,      0.0449,      0.1064,      0.3926,      0.6602,     -0.2910,      0.0065,     -0.4316,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,     -0.4062,      0.1079,     -0.1338,      0.2051,      0.0195,     -0.4668,     -0.2373,      0.1787,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,     -0.5664,      0.1406,      0.1357,      0.1494,      0.0167,      0.3711,     -0.1006,      0.1641,     -0.5117,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,     -0.1641,      0.1797,     -0.1387,      0.1064,     -0.4785,      0.0349,      0.3652,     -0.2168,     -0.1172,      0.3945,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,     -0.5352,      0.1758,      0.0757,     -0.2373,      0.0003,     -0.0199,      0.3359,     -0.4805,     -0.6445,     -0.0703,      0.1260,        -inf,        -inf,        -inf],
          [     5.1299,     -0.0840,      0.2520,     -0.4844,      0.4590,      0.3652,     -0.4551,     -0.5586,     -0.3086,      0.0554,      0.2422,     -0.1797,     -0.3906,        -inf,        -inf],
          [     5.2781,     -0.0186,      0.0388,     -0.5352,      0.4551,     -0.3809,     -0.1611,      0.1504,      0.3750,      0.1924,     -0.2471,      0.3438,      0.1113,      0.2637,        -inf],
          [     5.4161,     -0.0869,      0.2012,      0.0302,      0.0771,      0.1973,      0.3164,     -0.1973,     -0.2754,      0.0469,      0.0325,      0.3652,      0.0098,     -0.5430,      0.0537]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7874],
        [0.8086],
        [0.8327],
        [0.8509],
        [0.8665],
        [0.8870],
        [0.8984],
        [0.9082],
        [0.9176],
        [0.9206],
        [0.9281],
        [0.9307],
        [0.9349],
        [0.9362]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8164, 0.0679, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8125, 0.0442, 0.0752, 0.0669, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8633, 0.0366, 0.0283, 0.0464, 0.0259, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8750, 0.0203, 0.0435, 0.0154, 0.0168, 0.0302, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0155, 0.0225, 0.0146, 0.0205, 0.0264, 0.0229, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9062, 0.0068, 0.0132, 0.0072, 0.0315, 0.0123, 0.0139, 0.0084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0096, 0.0121, 0.0080, 0.0070, 0.0137, 0.0123, 0.0128, 0.0107, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0052, 0.0080, 0.0100, 0.0166, 0.0081, 0.0082, 0.0089, 0.0112, 0.0072, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9102, 0.0108, 0.0135, 0.0064, 0.0071, 0.0053, 0.0071, 0.0139, 0.0058, 0.0053, 0.0150, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0070, 0.0069, 0.0055, 0.0041, 0.0054, 0.0056, 0.0067, 0.0058, 0.0060, 0.0076, 0.0041, 0.0000, 0.0000, 0.0000],
        [0.9258, 0.0069, 0.0053, 0.0091, 0.0062, 0.0050, 0.0058, 0.0082, 0.0053, 0.0052, 0.0092, 0.0049, 0.0040, 0.0000, 0.0000],
        [0.9414, 0.0042, 0.0051, 0.0049, 0.0041, 0.0039, 0.0060, 0.0046, 0.0046, 0.0041, 0.0053, 0.0035, 0.0035, 0.0049, 0.0000],
        [0.9453, 0.0038, 0.0045, 0.0045, 0.0033, 0.0031, 0.0036, 0.0035, 0.0041, 0.0036, 0.0050, 0.0028, 0.0033, 0.0054, 0.0033]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -0.2109,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -0.2871,  0.2324,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -0.1494,  0.3828,  0.2656,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  0.0593, -0.1963,  0.2949, -0.2910,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -0.1885,  0.5742, -0.4590, -0.3711,  0.2109,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918, -0.1455,  0.2256, -0.2080,  0.1357,  0.3828,  0.2461,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, -0.7305, -0.0708, -0.6758,  0.7930, -0.1406, -0.0262, -0.5273,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -0.1523,  0.0806, -0.3301, -0.4707,  0.2051,  0.0972,  0.1387, -0.0444,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052, -0.5820, -0.1494,  0.0791,  0.5820, -0.1377, -0.1230, -0.0415,  0.1914, -0.2490,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  0.3477,  0.5742, -0.1680, -0.0645, -0.3555, -0.0645,  0.5977, -0.2676, -0.3652,  0.6758,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698,  0.0767,  0.0579, -0.1768, -0.4707, -0.1904, -0.1592,  0.0349, -0.1191, -0.0796,  0.1572, -0.4668,    -inf,    -inf,    -inf],
          [ 5.1299,  0.2305, -0.0293,  0.5078,  0.1216, -0.0933,  0.0542,  0.4043, -0.0388, -0.0571,  0.5156, -0.1060, -0.3184,    -inf,    -inf],
          [ 5.2781, -0.1357,  0.0601,  0.0194, -0.1602, -0.2080,  0.2256, -0.0383, -0.0398, -0.1611,  0.1045, -0.3145, -0.3164,  0.0273,    -inf],
          [ 5.4161, -0.1201,  0.0674,  0.0601, -0.2441, -0.3203, -0.1699, -0.1816, -0.0381, -0.1543,  0.1592, -0.4062, -0.2637,  0.2393, -0.2422]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7861],
        [0.8141],
        [0.8372],
        [0.8636],
        [0.8636],
        [0.8893],
        [0.8965],
        [0.9085],
        [0.9105],
        [0.9209],
        [0.9261],
        [0.9310],
        [0.9372],
        [0.9375]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7070, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7656, 0.1050, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0447, 0.0289, 0.0854, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0234, 0.0422, 0.0215, 0.0325, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8945, 0.0259, 0.0161, 0.0177, 0.0222, 0.0233, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0109, 0.0115, 0.0157, 0.0265, 0.0091, 0.0131, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8867, 0.0115, 0.0220, 0.0287, 0.0184, 0.0114, 0.0087, 0.0140, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0105, 0.0082, 0.0090, 0.0124, 0.0129, 0.0107, 0.0075, 0.0092, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9219, 0.0094, 0.0101, 0.0089, 0.0097, 0.0080, 0.0095, 0.0053, 0.0103, 0.0067, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0147, 0.0069, 0.0085, 0.0101, 0.0092, 0.0063, 0.0077, 0.0051, 0.0052, 0.0076, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0063, 0.0066, 0.0068, 0.0052, 0.0049, 0.0084, 0.0054, 0.0106, 0.0136, 0.0056, 0.0088, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0055, 0.0043, 0.0059, 0.0060, 0.0062, 0.0096, 0.0052, 0.0031, 0.0029, 0.0072, 0.0070, 0.0049, 0.0000, 0.0000],
        [0.9453, 0.0056, 0.0037, 0.0065, 0.0059, 0.0044, 0.0041, 0.0031, 0.0031, 0.0043, 0.0030, 0.0052, 0.0030, 0.0029, 0.0000],
        [0.9375, 0.0067, 0.0042, 0.0057, 0.0079, 0.0022, 0.0038, 0.0058, 0.0025, 0.0030, 0.0032, 0.0028, 0.0050, 0.0025, 0.0077]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,      0.5078,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,      0.2168,      0.4355,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,     -0.1699,     -0.6055,      0.4785,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,     -0.4062,      0.1826,     -0.4941,     -0.0840,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,      0.0359,     -0.4375,     -0.3457,     -0.1172,     -0.0684,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,     -0.5430,     -0.4805,     -0.1680,      0.3496,     -0.7188,     -0.3535,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,     -0.1826,      0.4590,      0.7266,      0.2832,     -0.1982,     -0.4688,      0.0126,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,     -0.0669,     -0.3105,     -0.2256,      0.1001,      0.1367,     -0.0515,     -0.4023,     -0.1963,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,      0.0063,      0.0815,     -0.0444,      0.0393,     -0.1562,      0.0220,     -0.5703,      0.1016,     -0.3320,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,      0.6445,     -0.1167,      0.1055,      0.2715,      0.1797,     -0.2061,     -0.0033,     -0.4141,     -0.3828,     -0.0125,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,     -0.0217,      0.0273,      0.0708,     -0.2129,     -0.2617,      0.2695,     -0.1611,      0.5039,      0.7578,     -0.1318,      0.3184,        -inf,        -inf,        -inf],
          [     5.1299,     -0.0168,     -0.2598,      0.0549,      0.0840,      0.1118,      0.5469,     -0.0522,     -0.5742,     -0.6367,      0.2676,      0.2285,     -0.1245,        -inf,        -inf],
          [     5.2781,      0.1592,     -0.2715,      0.3008,      0.1982,     -0.0801,     -0.1553,     -0.4336,     -0.4375,     -0.1211,     -0.4590,      0.0688,     -0.4609,     -0.5156,        -inf],
          [     5.4161,      0.4707,     -0.0120,      0.3105,      0.6250,     -0.6328,     -0.0889,      0.3262,     -0.5000,     -0.3340,     -0.2852,     -0.4043,      0.1797,     -0.5078,      0.6094]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7705],
        [0.8187],
        [0.8385],
        [0.8704],
        [0.8883],
        [0.8844],
        [0.8939],
        [0.9108],
        [0.9150],
        [0.9176],
        [0.9251],
        [0.9290],
        [0.9359],
        [0.9398]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7617, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8008, 0.0952, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7695, 0.0913, 0.0820, 0.0588, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0248, 0.0354, 0.0469, 0.0537, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8750, 0.0210, 0.0332, 0.0286, 0.0289, 0.0126, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.0175, 0.0444, 0.0168, 0.0249, 0.0265, 0.0170, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8633, 0.0216, 0.0153, 0.0258, 0.0217, 0.0181, 0.0143, 0.0192, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0053, 0.0156, 0.0112, 0.0115, 0.0067, 0.0106, 0.0145, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0069, 0.0071, 0.0051, 0.0116, 0.0092, 0.0109, 0.0079, 0.0141, 0.0096, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8984, 0.0142, 0.0095, 0.0181, 0.0081, 0.0083, 0.0157, 0.0090, 0.0082, 0.0060, 0.0064, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0052, 0.0046, 0.0073, 0.0074, 0.0061, 0.0064, 0.0090, 0.0041, 0.0072, 0.0054, 0.0055, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0050, 0.0066, 0.0073, 0.0096, 0.0107, 0.0062, 0.0072, 0.0061, 0.0044, 0.0047, 0.0060, 0.0080, 0.0000, 0.0000],
        [0.9336, 0.0034, 0.0079, 0.0027, 0.0062, 0.0047, 0.0064, 0.0062, 0.0037, 0.0045, 0.0062, 0.0079, 0.0036, 0.0039, 0.0000],
        [0.9453, 0.0031, 0.0056, 0.0048, 0.0049, 0.0038, 0.0048, 0.0034, 0.0041, 0.0035, 0.0034, 0.0027, 0.0036, 0.0036, 0.0036]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,      0.2188,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,      0.0742,      0.1562,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,      0.6328,      0.5273,      0.1943,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,     -0.3027,      0.0557,      0.3359,      0.4727,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,     -0.1494,      0.3086,      0.1543,      0.1680,     -0.6602,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,      0.0037,      0.9336,     -0.0315,      0.3574,      0.4180,     -0.0232,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,      0.4668,      0.1235,      0.6406,      0.4727,      0.2910,      0.0564,      0.3457,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,     -0.7422,      0.3398,      0.0018,      0.0282,     -0.5039,     -0.0471,      0.2656,     -0.1670,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,     -0.2910,     -0.2637,     -0.5898,      0.2246,     -0.0128,      0.1562,     -0.1533,      0.4160,      0.0388,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,      0.6328,      0.2275,      0.8750,      0.0664,      0.0986,      0.7422,      0.1738,      0.0825,     -0.2275,     -0.1660,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,     -0.2129,     -0.3398,      0.1157,      0.1270,     -0.0645,     -0.0111,      0.3223,     -0.4551,      0.1104,     -0.1816,     -0.1660,        -inf,        -inf,        -inf],
          [     5.1299,     -0.0884,      0.1855,      0.2949,      0.5625,      0.6680,      0.1245,      0.2715,      0.1152,     -0.2148,     -0.1562,      0.0859,      0.3848,        -inf,        -inf],
          [     5.2781,     -0.3203,      0.5039,     -0.5586,      0.2676,     -0.0136,      0.3008,      0.2676,     -0.2520,     -0.0618,      0.2617,      0.5078,     -0.2734,     -0.1865,        -inf],
          [     5.4161,     -0.3301,      0.2734,      0.1270,      0.1445,     -0.1138,      0.1182,     -0.2246,     -0.0359,     -0.1934,     -0.2275,     -0.4629,     -0.1787,     -0.1650,     -0.1582]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8216],
        [0.8148],
        [0.8434],
        [0.8594],
        [0.8799],
        [0.8841],
        [0.8952],
        [0.9118],
        [0.9144],
        [0.9199],
        [0.9251],
        [0.9320],
        [0.9342],
        [0.9388]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8008, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7812, 0.1226, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7930, 0.0713, 0.0417, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.0532, 0.0281, 0.0420, 0.0234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0204, 0.0173, 0.0256, 0.0148, 0.0184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.0220, 0.0167, 0.0193, 0.0113, 0.0238, 0.0143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8672, 0.0238, 0.0148, 0.0186, 0.0187, 0.0267, 0.0120, 0.0177, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0082, 0.0171, 0.0084, 0.0085, 0.0121, 0.0103, 0.0089, 0.0090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9102, 0.0096, 0.0081, 0.0095, 0.0145, 0.0152, 0.0055, 0.0100, 0.0078, 0.0110, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0073, 0.0056, 0.0066, 0.0042, 0.0079, 0.0055, 0.0042, 0.0096, 0.0085, 0.0111, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0100, 0.0081, 0.0045, 0.0081, 0.0099, 0.0051, 0.0051, 0.0063, 0.0085, 0.0082, 0.0081, 0.0000, 0.0000, 0.0000],
        [0.9375, 0.0054, 0.0064, 0.0059, 0.0055, 0.0050, 0.0043, 0.0047, 0.0037, 0.0049, 0.0058, 0.0027, 0.0066, 0.0000, 0.0000],
        [0.9375, 0.0055, 0.0056, 0.0052, 0.0049, 0.0059, 0.0049, 0.0027, 0.0054, 0.0060, 0.0038, 0.0049, 0.0039, 0.0052, 0.0000],
        [0.9375, 0.0061, 0.0057, 0.0039, 0.0036, 0.0029, 0.0044, 0.0035, 0.0059, 0.0057, 0.0035, 0.0038, 0.0042, 0.0049, 0.0044]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -0.0175,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972,  0.3496,  0.1128,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726,  0.3574, -0.1787,  0.6172,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  0.4453, -0.1953,  0.2051, -0.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -0.2139, -0.3789,  0.0172, -0.5352, -0.3125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  0.1836, -0.0850,  0.0586, -0.4805,  0.2656, -0.2393,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  0.5625,  0.0894,  0.3145,  0.3184,  0.6758, -0.1240,  0.2656,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -0.3047,  0.4238, -0.2891, -0.2812,  0.0806, -0.0854, -0.2354, -0.2139,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  0.0471, -0.1260,  0.0356,  0.4570,  0.5039, -0.5156,  0.0879, -0.1582,  0.1846,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, -0.0618, -0.3242, -0.1650, -0.6055,  0.0083, -0.3516, -0.6172,  0.2100,  0.0815,  0.3555,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698,  0.4492,  0.2314, -0.3398,  0.2363,  0.4355, -0.2305, -0.2188, -0.0145,  0.2832,  0.2520,  0.2305,    -inf,    -inf,    -inf],
          [ 5.1299, -0.0332,  0.1309,  0.0527, -0.0168, -0.1079, -0.2520, -0.1729, -0.3984, -0.1338,  0.0442, -0.7383,  0.1709,    -inf,    -inf],
          [ 5.2781,  0.1396,  0.1592,  0.0991,  0.0405,  0.2109,  0.0280, -0.5547,  0.1221,  0.2334, -0.2139,  0.0234, -0.1973,  0.0845,    -inf],
          [ 5.4161,  0.3750,  0.3125, -0.0815, -0.1543, -0.3750,  0.0405, -0.1885,  0.3340,  0.3066, -0.1816, -0.0933, -0.0063,  0.1611,  0.0461]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8089],
        [0.8138],
        [0.8298],
        [0.8538],
        [0.8698],
        [0.8952],
        [0.8893],
        [0.9095],
        [0.9137],
        [0.9196],
        [0.9248],
        [0.9333],
        [0.9339],
        [0.9362]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Roses:0.0061 are:0.0030 red:0.0127,:0.0486 Pot:0.0515atoes:0.1094 are:0.0250 :0.0688)
 
------
		( are:0.0030 red:0.0127,:0.0486 Pot:0.0515atoes:0.1094 are:0.0250 :0.0688 :0.0874)
               
tensor([[    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.7461,     0.2539,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.0757,     0.0693,  ...,     0.0000,     0.0000,     0.0000],
        ...,
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,  ...,        -inf,        -inf,        -inf],
          [     1.3863,      0.3008,        -inf,  ...,        -inf,        -inf,        -inf],
          [     2.1972,     -0.2217,     -0.3125,  ...,        -inf,        -inf,        -inf],
          ...,
          [    13.8610,      0.4102,      0.6406,  ...,      0.2178,        -inf,        -inf],
          [    13.8629,     -0.2256,      0.0928,  ...,     -0.2285,      0.5312,        -inf],
          [    13.8649,      0.0086,     -0.0908,  ...,      0.0674,      0.6445,      0.3652]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7686],
        [0.8148],
        ...,
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0', grad_fn=<SliceBackward0>)
tensor([[    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.8086,     0.1914,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.7617,     0.1245,     0.1138,  ...,     0.0000,     0.0000,     0.0000],
        ...,
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,  ...,    -inf,    -inf,    -inf],
          [ 1.3863, -0.0571,    -inf,  ...,    -inf,    -inf,    -inf],
          [ 2.1972,  0.3945,  0.3047,  ...,    -inf,    -inf,    -inf],
          ...,
          [13.8610,  0.0139, -0.2295,  ...,  0.0703,    -inf,    -inf],
          [13.8629,  0.5469,  0.2012,  ...,  0.0603, -0.1079,    -inf],
          [13.8649,  0.1738, -0.3848,  ..., -0.4727,  0.0859, -0.1680]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7884],
        [0.8135],
        ...,
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0', grad_fn=<SliceBackward0>)
tensor([[    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.1807,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.7422,     0.1167,     0.1426,  ...,     0.0000,     0.0000,     0.0000],
        ...,
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,  ...,    -inf,    -inf,    -inf],
          [ 1.3863, -0.1260,    -inf,  ...,    -inf,    -inf,    -inf],
          [ 2.1972,  0.3535,  0.5586,  ...,    -inf,    -inf,    -inf],
          ...,
          [13.8610, -0.3164, -0.3281,  ...,  0.0967,    -inf,    -inf],
          [13.8629, -0.5547, -0.3262,  ..., -0.2354, -0.0491,    -inf],
          [13.8649, -0.0718, -0.2930,  ...,  0.4824,  0.2793, -0.1602]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8128],
        [0.8213],
        ...,
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0', grad_fn=<SliceBackward0>)
tensor([[    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.8477,     0.1514,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.7617,     0.1187,     0.1201,  ...,     0.0000,     0.0000,     0.0000],
        ...,
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,  ...,    -inf,    -inf,    -inf],
          [ 1.3863, -0.3418,    -inf,  ...,    -inf,    -inf,    -inf],
          [ 2.1972,  0.3418,  0.3574,  ...,    -inf,    -inf,    -inf],
          ...,
          [13.8610, -0.2363, -0.0640,  ...,  0.2354,    -inf,    -inf],
          [13.8629,  0.3809, -0.3047,  ...,  0.3633, -0.5117,    -inf],
          [13.8649, -0.5000,  0.2432,  ..., -0.3516,  0.1572,  0.0752]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8070],
        [0.8027],
        ...,
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0', grad_fn=<SliceBackward0>)
tensor([[    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.6680,     0.3340,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    0.7578,     0.1191,     0.1211,  ...,     0.0000,     0.0000,     0.0000],
        ...,
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,  ...,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,  ...,    -inf,    -inf,    -inf],
          [ 1.3863,  0.6914,    -inf,  ...,    -inf,    -inf,    -inf],
          [ 2.1972,  0.3535,  0.3691,  ...,    -inf,    -inf,    -inf],
          ...,
          [13.8610,  0.1885, -0.1807,  ...,  0.0552,    -inf,    -inf],
          [13.8629,  0.1748, -0.2891,  ..., -0.2480, -0.4258,    -inf],
          [13.8649, -0.4902, -0.2021,  ...,  0.4961,  0.0466,  0.7148]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7982],
        [0.8177],
        ...,
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0', grad_fn=<SliceBackward0>)
@ 1 train 11.5731 , allloss: 11.5860, dt: 1497.17ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2527, tok/sec: 87546.35, flops:68.18, batch-reuse:1
@ 2 train 11.5757 , allloss: 11.5885, dt: 1035.98ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2420, tok/sec: 126519.79, flops:98.53, batch-reuse:1
@ 3 train 11.5788 , allloss: 11.5916, dt: 1035.92ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2219, tok/sec: 126527.33, flops:98.54, batch-reuse:1
@ 4 train 11.5714 , allloss: 11.5842, dt: 1038.88ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2096, tok/sec: 126166.71, flops:98.26, batch-reuse:1
@ 5 train 11.5696 , allloss: 11.5824, dt: 1041.24ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.1697, tok/sec: 125881.26, flops:98.04, batch-reuse:1
@ 6 train 11.5675 , allloss: 11.5803, dt: 1036.35ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2363, tok/sec: 126474.99, flops:98.50, batch-reuse:1
@ 7 train 11.5691 , allloss: 11.5819, dt: 1033.24ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2193, tok/sec: 126855.73, flops:98.80, batch-reuse:1
@ 8 train 11.5708 , allloss: 11.5836, dt: 1031.55ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2253, tok/sec: 127063.75, flops:98.96, batch-reuse:1
@ 9 train 11.5627 , allloss: 11.5755, dt: 1035.40ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2388, tok/sec: 126590.82, flops:98.59, batch-reuse:1
@ 10 train 11.5594 , allloss: 11.5723, dt: 1035.19ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2432, tok/sec: 126615.86, flops:98.61, batch-reuse:1
@ 11 train 11.5538 , allloss: 11.5666, dt: 1031.29ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2072, tok/sec: 127094.60, flops:98.98, batch-reuse:1
@ 12 train 11.5583 , allloss: 11.5711, dt: 1043.14ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2326, tok/sec: 125651.52, flops:97.86, batch-reuse:1
@ 13 train 11.5486 , allloss: 11.5614, dt: 1040.37ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0908, norm(x): 0.0279, norm(y): 0.9942, norm:1.2429, tok/sec: 125986.47, flops:98.12, batch-reuse:1
@ 14 train 11.5449 , allloss: 11.5577, dt: 1040.08ms, fracRes: 0.9947, norm(attn): 0.0001, norm(output): 0.0913, norm(x): 0.0279, norm(y): 0.9942, norm:1.2308, tok/sec: 126020.60, flops:98.15, batch-reuse:1
@ 15 train 11.5447 , allloss: 11.5576, dt: 1038.48ms, fracRes: 0.9947, norm(attn): 0.0002, norm(output): 0.0913, norm(x): 0.0279, norm(y): 0.9943, norm:1.2079, tok/sec: 126214.94, flops:98.30, batch-reuse:1
@ 16 train 11.5458 , allloss: 11.5587, dt: 1047.98ms, fracRes: 0.9947, norm(attn): 0.0002, norm(output): 0.0913, norm(x): 0.0279, norm(y): 0.9943, norm:1.2259, tok/sec: 125070.65, flops:97.41, batch-reuse:1
@ 17 train 11.5409 , allloss: 11.5538, dt: 1036.07ms, fracRes: 0.9947, norm(attn): 0.0002, norm(output): 0.0913, norm(x): 0.0279, norm(y): 0.9943, norm:1.2082, tok/sec: 126509.34, flops:98.53, batch-reuse:1
@ 18 train 11.5300 , allloss: 11.5429, dt: 1035.16ms, fracRes: 0.9947, norm(attn): 0.0002, norm(output): 0.0913, norm(x): 0.0279, norm(y): 0.9943, norm:1.1940, tok/sec: 126619.48, flops:98.61, batch-reuse:1
@ 19 train 11.5240 , allloss: 11.5369, dt: 1033.40ms, fracRes: 0.9947, norm(attn): 0.0002, norm(output): 0.0913, norm(x): 0.0279, norm(y): 0.9943, norm:1.2360, tok/sec: 126836.30, flops:98.78, batch-reuse:1
@ 20 train 11.5198 , allloss: 11.5327, dt: 1045.32ms, fracRes: 0.9946, norm(attn): 0.0002, norm(output): 0.0913, norm(x): 0.0279, norm(y): 0.9943, norm:1.2100, tok/sec: 125389.84, flops:97.65, batch-reuse:1
@ 21 train 11.5109 , allloss: 11.5239, dt: 1033.74ms, fracRes: 0.9946, norm(attn): 0.0002, norm(output): 0.0928, norm(x): 0.0279, norm(y): 0.9943, norm:1.2056, tok/sec: 126793.38, flops:98.75, batch-reuse:1
@ 22 train 11.5053 , allloss: 11.5183, dt: 1045.04ms, fracRes: 0.9946, norm(attn): 0.0002, norm(output): 0.0928, norm(x): 0.0279, norm(y): 0.9943, norm:1.1895, tok/sec: 125422.79, flops:97.68, batch-reuse:1
@ 23 train 11.5036 , allloss: 11.5167, dt: 1038.55ms, fracRes: 0.9946, norm(attn): 0.0002, norm(output): 0.0933, norm(x): 0.0279, norm(y): 0.9943, norm:1.1810, tok/sec: 126206.22, flops:98.29, batch-reuse:1
@ 24 train 11.4950 , allloss: 11.5081, dt: 1057.58ms, fracRes: 0.9946, norm(attn): 0.0002, norm(output): 0.0933, norm(x): 0.0279, norm(y): 0.9943, norm:1.1598, tok/sec: 123935.33, flops:96.52, batch-reuse:1
@ 25 train 11.4860 , allloss: 11.4992, dt: 1048.14ms, fracRes: 0.9946, norm(attn): 0.0002, norm(output): 0.0933, norm(x): 0.0279, norm(y): 0.9943, norm:1.2031, tok/sec: 125051.59, flops:97.39, batch-reuse:1
@ 26 train 11.4840 , allloss: 11.4973, dt: 1046.30ms, fracRes: 0.9945, norm(attn): 0.0002, norm(output): 0.0938, norm(x): 0.0279, norm(y): 0.9943, norm:1.1582, tok/sec: 125272.00, flops:97.56, batch-reuse:1
@ 27 train 11.4750 , allloss: 11.4884, dt: 1037.12ms, fracRes: 0.9945, norm(attn): 0.0003, norm(output): 0.0938, norm(x): 0.0279, norm(y): 0.9943, norm:1.1466, tok/sec: 126380.33, flops:98.43, batch-reuse:1
@ 28 train 11.4654 , allloss: 11.4789, dt: 1035.38ms, fracRes: 0.9945, norm(attn): 0.0003, norm(output): 0.0942, norm(x): 0.0280, norm(y): 0.9943, norm:1.1394, tok/sec: 126592.86, flops:98.59, batch-reuse:1
@ 29 train 11.4615 , allloss: 11.4751, dt: 1041.59ms, fracRes: 0.9944, norm(attn): 0.0003, norm(output): 0.0947, norm(x): 0.0280, norm(y): 0.9944, norm:1.1375, tok/sec: 125837.90, flops:98.00, batch-reuse:1
@ 30 train 11.4504 , allloss: 11.4641, dt: 1048.85ms, fracRes: 0.9944, norm(attn): 0.0003, norm(output): 0.0957, norm(x): 0.0280, norm(y): 0.9944, norm:1.1491, tok/sec: 124967.11, flops:97.32, batch-reuse:1
@ 31 train 11.4489 , allloss: 11.4627, dt: 1039.19ms, fracRes: 0.9943, norm(attn): 0.0003, norm(output): 0.0962, norm(x): 0.0280, norm(y): 0.9944, norm:1.1007, tok/sec: 126129.08, flops:98.23, batch-reuse:1
@ 32 train 11.4397 , allloss: 11.4537, dt: 1048.17ms, fracRes: 0.9943, norm(attn): 0.0003, norm(output): 0.0967, norm(x): 0.0280, norm(y): 0.9944, norm:1.1205, tok/sec: 125048.69, flops:97.39, batch-reuse:1
@ 33 train 11.4226 , allloss: 11.4367, dt: 1050.17ms, fracRes: 0.9942, norm(attn): 0.0004, norm(output): 0.1006, norm(x): 0.0280, norm(y): 0.9944, norm:1.1297, tok/sec: 124809.99, flops:97.20, batch-reuse:1
@ 34 train 11.4136 , allloss: 11.4280, dt: 1041.79ms, fracRes: 0.9941, norm(attn): 0.0004, norm(output): 0.1011, norm(x): 0.0280, norm(y): 0.9944, norm:1.1035, tok/sec: 125813.73, flops:97.98, batch-reuse:1
@ 35 train 11.4088 , allloss: 11.4234, dt: 1051.57ms, fracRes: 0.9940, norm(attn): 0.0004, norm(output): 0.1011, norm(x): 0.0281, norm(y): 0.9945, norm:1.0910, tok/sec: 124644.65, flops:97.07, batch-reuse:1
@ 36 train 11.3999 , allloss: 11.4147, dt: 1043.75ms, fracRes: 0.9939, norm(attn): 0.0004, norm(output): 0.1021, norm(x): 0.0281, norm(y): 0.9945, norm:1.1056, tok/sec: 125578.07, flops:97.80, batch-reuse:1
@ 37 train 11.3879 , allloss: 11.4029, dt: 1043.44ms, fracRes: 0.9938, norm(attn): 0.0005, norm(output): 0.1035, norm(x): 0.0281, norm(y): 0.9945, norm:1.0845, tok/sec: 125615.86, flops:97.83, batch-reuse:1
@ 38 train 11.3794 , allloss: 11.3947, dt: 1037.83ms, fracRes: 0.9937, norm(attn): 0.0005, norm(output): 0.1035, norm(x): 0.0282, norm(y): 0.9945, norm:1.0985, tok/sec: 126294.01, flops:98.36, batch-reuse:1
@ 39 train 11.3728 , allloss: 11.3884, dt: 1034.73ms, fracRes: 0.9935, norm(attn): 0.0005, norm(output): 0.1089, norm(x): 0.0282, norm(y): 0.9945, norm:1.0603, tok/sec: 126672.28, flops:98.65, batch-reuse:1
@ 40 train 11.3583 , allloss: 11.3742, dt: 1049.18ms, fracRes: 0.9933, norm(attn): 0.0006, norm(output): 0.1089, norm(x): 0.0282, norm(y): 0.9945, norm:1.0735, tok/sec: 124928.49, flops:97.29, batch-reuse:1
@ 41 train 11.3488 , allloss: 11.3651, dt: 1050.03ms, fracRes: 0.9931, norm(attn): 0.0006, norm(output): 0.1099, norm(x): 0.0283, norm(y): 0.9946, norm:1.0778, tok/sec: 124826.83, flops:97.22, batch-reuse:1
@ 42 train 11.3353 , allloss: 11.3520, dt: 1056.17ms, fracRes: 0.9929, norm(attn): 0.0007, norm(output): 0.1113, norm(x): 0.0283, norm(y): 0.9946, norm:1.0503, tok/sec: 124101.04, flops:96.65, batch-reuse:1
@ 43 train 11.3268 , allloss: 11.3439, dt: 1043.60ms, fracRes: 0.9927, norm(attn): 0.0007, norm(output): 0.1162, norm(x): 0.0284, norm(y): 0.9946, norm:1.0369, tok/sec: 125596.32, flops:97.81, batch-reuse:1
@ 44 train 11.3140 , allloss: 11.3316, dt: 1051.54ms, fracRes: 0.9924, norm(attn): 0.0008, norm(output): 0.1167, norm(x): 0.0285, norm(y): 0.9946, norm:1.0118, tok/sec: 124647.95, flops:97.08, batch-reuse:1
@ 45 train 11.3022 , allloss: 11.3203, dt: 1041.10ms, fracRes: 0.9921, norm(attn): 0.0008, norm(output): 0.1187, norm(x): 0.0285, norm(y): 0.9947, norm:1.0129, tok/sec: 125898.18, flops:98.05, batch-reuse:1
@ 46 train 11.2914 , allloss: 11.3101, dt: 1036.50ms, fracRes: 0.9917, norm(attn): 0.0009, norm(output): 0.1230, norm(x): 0.0286, norm(y): 0.9947, norm:1.0310, tok/sec: 126456.17, flops:98.48, batch-reuse:1
@ 47 train 11.2678 , allloss: 11.2871, dt: 1048.02ms, fracRes: 0.9913, norm(attn): 0.0010, norm(output): 0.1245, norm(x): 0.0287, norm(y): 0.9947, norm:1.0143, tok/sec: 125066.87, flops:97.40, batch-reuse:1
@ 48 train 11.2619 , allloss: 11.2819, dt: 1037.62ms, fracRes: 0.9909, norm(attn): 0.0011, norm(output): 0.1270, norm(x): 0.0288, norm(y): 0.9948, norm:1.0125, tok/sec: 126319.87, flops:98.38, batch-reuse:1
@ 49 train 11.2421 , allloss: 11.2628, dt: 1046.72ms, fracRes: 0.9903, norm(attn): 0.0012, norm(output): 0.1318, norm(x): 0.0290, norm(y): 0.9948, norm:0.9907, tok/sec: 125222.07, flops:97.52, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7773, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0752, 0.0466, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0432, 0.0698, 0.0486, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0258, 0.0540, 0.0266, 0.0216, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8867, 0.0303, 0.0172, 0.0315, 0.0172, 0.0155, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0294, 0.0063, 0.0108, 0.0143, 0.0212, 0.0139, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.0144, 0.0154, 0.0208, 0.0271, 0.0103, 0.0140, 0.0091, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0076, 0.0128, 0.0102, 0.0140, 0.0119, 0.0071, 0.0090, 0.0141, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0053, 0.0109, 0.0107, 0.0110, 0.0095, 0.0137, 0.0085, 0.0112, 0.0057, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0064, 0.0095, 0.0066, 0.0087, 0.0047, 0.0084, 0.0115, 0.0061, 0.0070, 0.0125, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0038, 0.0079, 0.0071, 0.0052, 0.0067, 0.0065, 0.0092, 0.0041, 0.0034, 0.0060, 0.0075, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0053, 0.0074, 0.0035, 0.0092, 0.0084, 0.0036, 0.0033, 0.0042, 0.0060, 0.0073, 0.0047, 0.0039, 0.0000, 0.0000],
        [0.9297, 0.0049, 0.0052, 0.0029, 0.0078, 0.0034, 0.0042, 0.0057, 0.0071, 0.0057, 0.0038, 0.0068, 0.0055, 0.0062, 0.0000],
        [0.9375, 0.0039, 0.0053, 0.0044, 0.0046, 0.0053, 0.0060, 0.0035, 0.0033, 0.0045, 0.0044, 0.0060, 0.0043, 0.0025, 0.0045]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,      0.1426,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,     -0.2559,     -0.7305,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,     -0.2021,      0.2793,     -0.0820,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,     -0.3027,      0.4355,     -0.2715,     -0.4785,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,      0.1992,     -0.3652,      0.2354,     -0.3672,     -0.4727,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,      0.4648,     -1.0781,     -0.5352,     -0.2520,      0.1387,     -0.2852,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,      0.0334,      0.1030,      0.3984,      0.6641,     -0.3008,      0.0073,     -0.4238,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,     -0.3789,      0.1338,     -0.0894,      0.2266,      0.0640,     -0.4453,     -0.2090,      0.2334,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,     -0.5547,      0.1670,      0.1455,      0.1768,      0.0270,      0.3965,     -0.0791,      0.1914,     -0.4746,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,     -0.1807,      0.2080,     -0.1602,      0.1250,     -0.4902,      0.0820,      0.4023,     -0.2354,     -0.1001,      0.4824,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,     -0.5469,      0.2061,      0.0889,     -0.2158,      0.0240,      0.0004,      0.3535,     -0.4531,     -0.6484,     -0.0767,      0.1445,        -inf,        -inf,        -inf],
          [     5.1299,     -0.0471,      0.2812,     -0.4668,      0.4980,      0.4141,     -0.4355,     -0.5234,     -0.2676,      0.0703,      0.2695,     -0.1631,     -0.3613,        -inf,        -inf],
          [     5.2781,      0.0237,      0.0898,     -0.5078,      0.5000,     -0.3262,     -0.1123,      0.1816,      0.4062,      0.1875,     -0.2334,      0.3613,      0.1514,      0.2754,        -inf],
          [     5.4161,     -0.0869,      0.2393,      0.0420,      0.0889,      0.2305,      0.3574,     -0.1855,     -0.2578,      0.0649,      0.0356,      0.3535,      0.0243,     -0.5391,      0.0762]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8011],
        [0.8128],
        [0.8337],
        [0.8516],
        [0.8656],
        [0.8857],
        [0.8984],
        [0.9062],
        [0.9160],
        [0.9180],
        [0.9264],
        [0.9307],
        [0.9329],
        [0.9355]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8281, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8125, 0.0737, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7930, 0.0544, 0.0874, 0.0645, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8242, 0.0500, 0.0442, 0.0513, 0.0322, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.0253, 0.0496, 0.0187, 0.0195, 0.0366, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8750, 0.0168, 0.0240, 0.0144, 0.0193, 0.0269, 0.0226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9062, 0.0080, 0.0139, 0.0074, 0.0253, 0.0134, 0.0134, 0.0106, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8945, 0.0126, 0.0157, 0.0096, 0.0084, 0.0165, 0.0137, 0.0171, 0.0127, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8984, 0.0076, 0.0111, 0.0114, 0.0175, 0.0105, 0.0093, 0.0120, 0.0131, 0.0074, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8750, 0.0149, 0.0184, 0.0091, 0.0095, 0.0086, 0.0097, 0.0194, 0.0081, 0.0062, 0.0216, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9258, 0.0084, 0.0084, 0.0061, 0.0047, 0.0065, 0.0061, 0.0084, 0.0066, 0.0060, 0.0092, 0.0046, 0.0000, 0.0000, 0.0000],
        [0.9102, 0.0087, 0.0075, 0.0101, 0.0075, 0.0066, 0.0069, 0.0106, 0.0065, 0.0056, 0.0103, 0.0059, 0.0046, 0.0000, 0.0000],
        [0.9453, 0.0042, 0.0049, 0.0043, 0.0037, 0.0039, 0.0056, 0.0050, 0.0045, 0.0036, 0.0054, 0.0036, 0.0034, 0.0044, 0.0000],
        [0.9336, 0.0052, 0.0063, 0.0055, 0.0042, 0.0042, 0.0042, 0.0048, 0.0049, 0.0039, 0.0060, 0.0034, 0.0037, 0.0057, 0.0039]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,     -0.2002,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,     -0.1943,      0.2539,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,      0.0850,      0.5625,      0.2559,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,      0.4199,      0.2930,      0.4434,     -0.0209,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,      0.0625,      0.7383,     -0.2422,     -0.1973,      0.4297,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,     -0.0574,      0.2930,     -0.2188,      0.0742,      0.4062,      0.2344,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,     -0.5781,     -0.0209,     -0.6562,      0.5742,     -0.0557,     -0.0569,     -0.2949,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,      0.1406,      0.3691,     -0.1318,     -0.2578,      0.4121,      0.2275,      0.4453,      0.1494,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,     -0.1816,      0.1992,      0.2217,      0.6484,      0.1436,      0.0245,      0.2773,      0.3672,     -0.2061,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,      0.7070,      0.9219,      0.2129,      0.2578,      0.1611,      0.2773,      0.9727,      0.0942,     -0.1729,      1.0781,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,      0.2656,      0.2617,     -0.0586,     -0.3145,      0.0131,     -0.0583,      0.2695,      0.0282,     -0.0801,      0.3535,     -0.3242,        -inf,        -inf,        -inf],
          [     5.1299,      0.4805,      0.3301,      0.6289,      0.3340,      0.1924,      0.2471,      0.6719,      0.1904,      0.0330,      0.6445,      0.0850,     -0.1621,        -inf,        -inf],
          [     5.2781,     -0.1279,      0.0197,     -0.1191,     -0.2715,     -0.1963,      0.1514,      0.0486,     -0.0669,     -0.2949,      0.1108,     -0.2949,     -0.3457,     -0.0781,        -inf],
          [     5.4161,      0.2188,      0.4004,      0.2754,     -0.0074,      0.0150,     -0.0009,      0.1377,      0.1611,     -0.0608,      0.3613,     -0.2109,     -0.1270,      0.3125,     -0.0820]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7679],
        [0.7936],
        [0.8138],
        [0.8398],
        [0.8506],
        [0.8747],
        [0.8857],
        [0.9033],
        [0.9043],
        [0.9001],
        [0.9196],
        [0.9255],
        [0.9333],
        [0.9333]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6523, 0.3457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.1152, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7656, 0.0664, 0.0684, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8047, 0.0430, 0.0625, 0.0481, 0.0422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7930, 0.0388, 0.0396, 0.0403, 0.0342, 0.0554, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.0216, 0.0282, 0.0311, 0.0297, 0.0292, 0.0292, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8477, 0.0175, 0.0280, 0.0304, 0.0197, 0.0234, 0.0183, 0.0136, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8555, 0.0168, 0.0177, 0.0188, 0.0177, 0.0256, 0.0210, 0.0099, 0.0156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9062, 0.0094, 0.0123, 0.0101, 0.0097, 0.0127, 0.0128, 0.0053, 0.0115, 0.0113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8945, 0.0110, 0.0099, 0.0123, 0.0106, 0.0142, 0.0104, 0.0069, 0.0078, 0.0097, 0.0113, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0073, 0.0082, 0.0079, 0.0058, 0.0080, 0.0107, 0.0052, 0.0107, 0.0164, 0.0087, 0.0096, 0.0000, 0.0000, 0.0000],
        [0.9102, 0.0071, 0.0066, 0.0079, 0.0071, 0.0095, 0.0118, 0.0051, 0.0046, 0.0056, 0.0093, 0.0081, 0.0058, 0.0000, 0.0000],
        [0.9102, 0.0082, 0.0074, 0.0106, 0.0083, 0.0089, 0.0075, 0.0042, 0.0054, 0.0080, 0.0057, 0.0072, 0.0043, 0.0048, 0.0000],
        [0.9297, 0.0058, 0.0053, 0.0061, 0.0064, 0.0043, 0.0056, 0.0046, 0.0034, 0.0047, 0.0042, 0.0035, 0.0055, 0.0034, 0.0081]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863,  0.7461,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972,  0.3613,  0.6797,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726,  0.3203,  0.3516,  0.7383,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  0.2930,  0.6641,  0.4004,  0.2695,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  0.5664,  0.5820,  0.5977,  0.4355,  0.9180,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  0.2393,  0.5039,  0.6055,  0.5547,  0.5391,  0.5391,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  0.2734,  0.7461,  0.8242,  0.3926,  0.5703,  0.3223,  0.0221,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  0.4746,  0.5273,  0.5859,  0.5273,  0.8984,  0.6992, -0.0574,  0.4043,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  0.0295,  0.2910,  0.1011,  0.0586,  0.3281,  0.3340, -0.5508,  0.2256,  0.2080,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  0.3828,  0.2734,  0.4941,  0.3398,  0.6328,  0.3242, -0.0894,  0.0317,  0.2539,  0.4062,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698,  0.1514,  0.2734,  0.2373, -0.0747,  0.2412,  0.5391, -0.1885,  0.5312,  0.9609,  0.3340,  0.4277,    -inf,    -inf,    -inf],
          [ 5.1299,  0.2695,  0.1992,  0.3809,  0.2656,  0.5547,  0.7812, -0.0610, -0.1689,  0.0369,  0.5391,  0.4062,  0.0723,    -inf,    -inf],
          [ 5.2781,  0.5781,  0.4766,  0.8242,  0.5820,  0.6523,  0.4844, -0.1011,  0.1543,  0.5508,  0.2041,  0.4492, -0.0630,  0.0261,    -inf],
          [ 5.4161,  0.3242,  0.2354,  0.3770,  0.4277,  0.0255,  0.2910,  0.0996, -0.2031,  0.1250, -0.0081, -0.1816,  0.2676, -0.2168,  0.6680]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.6753],
        [0.7135],
        [0.7370],
        [0.7826],
        [0.7949],
        [0.8145],
        [0.8265],
        [0.8551],
        [0.8672],
        [0.8691],
        [0.8880],
        [0.9017],
        [0.9049],
        [0.9180]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.8125, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2100, 0.4004, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2305, 0.2598, 0.2520, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2598, 0.1855, 0.1816, 0.1855, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2832, 0.1436, 0.1396, 0.1426, 0.1445, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.1143, 0.1123, 0.1138, 0.1152, 0.1167, 0.1162, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3164, 0.0972, 0.0947, 0.0967, 0.0977, 0.0986, 0.0986, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3672, 0.0791, 0.0776, 0.0791, 0.0801, 0.0806, 0.0806, 0.0815, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3516, 0.0713, 0.0693, 0.0713, 0.0723, 0.0728, 0.0728, 0.0737, 0.0684, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3750, 0.0620, 0.0603, 0.0618, 0.0623, 0.0625, 0.0630, 0.0635, 0.0581, 0.0654, 0.0645, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4414, 0.0503, 0.0496, 0.0505, 0.0510, 0.0513, 0.0515, 0.0522, 0.0474, 0.0537, 0.0525, 0.0491, 0.0000, 0.0000, 0.0000],
        [0.4531, 0.0454, 0.0447, 0.0454, 0.0461, 0.0466, 0.0464, 0.0474, 0.0432, 0.0483, 0.0476, 0.0444, 0.0417, 0.0000, 0.0000],
        [0.4434, 0.0432, 0.0425, 0.0430, 0.0437, 0.0439, 0.0442, 0.0447, 0.0405, 0.0461, 0.0454, 0.0422, 0.0383, 0.0386, 0.0000],
        [0.4629, 0.0391, 0.0383, 0.0391, 0.0393, 0.0396, 0.0398, 0.0400, 0.0366, 0.0417, 0.0403, 0.0378, 0.0344, 0.0347, 0.0374]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[0.0000,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [1.3863, 2.8438,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [2.1972, 2.8438, 2.8281,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [2.7726, 2.8906, 2.8594, 2.8750,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [3.2189, 2.8906, 2.8594, 2.8906, 2.8906,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [3.5835, 2.8906, 2.8750, 2.8906, 2.9062, 2.9062,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [3.8918, 2.8906, 2.8750, 2.8906, 2.8906, 2.9062, 2.9062,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [4.1589, 2.9688, 2.9531, 2.9688, 2.9844, 2.9844, 2.9844, 3.0000,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [4.3944, 2.8750, 2.8594, 2.8750, 2.8906, 2.8906, 2.8906, 2.9062, 2.8125,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [4.6052, 3.0000, 2.9688, 3.0000, 3.0156, 3.0156, 3.0156, 3.0312, 2.9531, 3.0781,   -inf,   -inf,   -inf,   -inf,   -inf],
          [4.7958, 2.9844, 2.9531, 2.9688, 2.9844, 2.9844, 3.0000, 3.0000, 2.9219, 3.0312, 3.0156,   -inf,   -inf,   -inf,   -inf],
          [4.9698, 2.7969, 2.7812, 2.7969, 2.8125, 2.8125, 2.8281, 2.8438, 2.7344, 2.8594, 2.8438, 2.7656,   -inf,   -inf,   -inf],
          [5.1299, 2.8281, 2.8125, 2.8281, 2.8438, 2.8594, 2.8438, 2.8594, 2.7812, 2.8906, 2.8750, 2.7969, 2.7344,   -inf,   -inf],
          [5.2781, 2.9531, 2.9375, 2.9531, 2.9688, 2.9688, 2.9688, 2.9844, 2.8906, 3.0156, 3.0000, 2.9375, 2.8438, 2.8438,   -inf],
          [5.4161, 2.9375, 2.9219, 2.9375, 2.9375, 2.9531, 2.9531, 2.9688, 2.8750, 3.0000, 2.9688, 2.9062, 2.8125, 2.8125, 2.8906]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.3546],
        [0.3859],
        [0.4206],
        [0.4575],
        [0.4896],
        [0.5244],
        [0.5479],
        [0.5785],
        [0.5951],
        [0.6143],
        [0.6374],
        [0.6452],
        [0.6672],
        [0.6782]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.8320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.4121, 0.4043, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.2676, 0.2617, 0.2656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.1963, 0.1924, 0.1953, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2490, 0.1523, 0.1494, 0.1514, 0.1465, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.1230, 0.1206, 0.1226, 0.1187, 0.1226, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2930, 0.1030, 0.1006, 0.1025, 0.0991, 0.1021, 0.1006, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.0874, 0.0859, 0.0869, 0.0840, 0.0869, 0.0854, 0.0850, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.0762, 0.0747, 0.0757, 0.0732, 0.0757, 0.0747, 0.0742, 0.0728, 0.0728, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.0674, 0.0664, 0.0674, 0.0649, 0.0674, 0.0664, 0.0654, 0.0645, 0.0645, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3691, 0.0588, 0.0576, 0.0586, 0.0566, 0.0586, 0.0576, 0.0571, 0.0562, 0.0562, 0.0564, 0.0571, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.0522, 0.0513, 0.0520, 0.0503, 0.0518, 0.0510, 0.0505, 0.0498, 0.0498, 0.0498, 0.0503, 0.0457, 0.0000, 0.0000],
        [0.4043, 0.0479, 0.0469, 0.0476, 0.0459, 0.0474, 0.0469, 0.0464, 0.0454, 0.0457, 0.0457, 0.0464, 0.0417, 0.0422, 0.0000],
        [0.4492, 0.0410, 0.0403, 0.0408, 0.0396, 0.0408, 0.0403, 0.0398, 0.0391, 0.0393, 0.0393, 0.0398, 0.0359, 0.0366, 0.0391]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[0.0000,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [1.3863, 2.9844,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [2.1972, 3.0156, 2.9844,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [2.7726, 3.0312, 3.0156, 3.0312,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [3.2189, 3.0781, 3.0469, 3.0625, 3.0312,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [3.5835, 3.0938, 3.0625, 3.0781, 3.0469, 3.0781,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [3.8918, 3.1094, 3.0781, 3.0938, 3.0625, 3.0938, 3.0781,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [4.1589, 3.1094, 3.0938, 3.1094, 3.0781, 3.1094, 3.0938, 3.0781,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [4.3944, 3.1250, 3.1094, 3.1250, 3.0938, 3.1250, 3.1094, 3.0938, 3.0781,   -inf,   -inf,   -inf,   -inf,   -inf,   -inf],
          [4.6052, 3.1250, 3.1094, 3.1250, 3.0938, 3.1250, 3.1094, 3.1094, 3.0781, 3.0938,   -inf,   -inf,   -inf,   -inf,   -inf],
          [4.7958, 3.1562, 3.1406, 3.1562, 3.1250, 3.1562, 3.1406, 3.1250, 3.1094, 3.1250, 3.1250,   -inf,   -inf,   -inf,   -inf],
          [4.9698, 3.1406, 3.1094, 3.1250, 3.0938, 3.1250, 3.1094, 3.1094, 3.0938, 3.0938, 3.0938, 3.1094,   -inf,   -inf,   -inf],
          [5.1299, 3.1094, 3.0781, 3.0938, 3.0625, 3.0938, 3.0781, 3.0625, 3.0469, 3.0469, 3.0625, 3.0625, 2.9688,   -inf,   -inf],
          [5.2781, 3.1406, 3.1250, 3.1406, 3.1094, 3.1406, 3.1250, 3.1094, 3.0938, 3.0938, 3.1094, 3.1250, 3.0156, 3.0312,   -inf],
          [5.4161, 3.0156, 3.0000, 3.0156, 2.9688, 3.0000, 3.0000, 2.9844, 2.9688, 2.9688, 2.9688, 2.9844, 2.8906, 2.8906, 2.9688]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.3478],
        [0.3730],
        [0.4058],
        [0.4414],
        [0.4706],
        [0.5008],
        [0.5226],
        [0.5462],
        [0.5618],
        [0.5793],
        [0.6014],
        [0.6141],
        [0.6307],
        [0.6484]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( the:0.0089 the:0.0092 the:0.0092 the:0.0092 the:0.0095 the:0.0092 the:0.0095 the:0.0095)
 the
------
		( the:0.0092 the:0.0092 the:0.0092 the:0.0095 the:0.0092 the:0.0095 the:0.0095 the:0.0098)
 the the the the the the the the the the the the the the the
@ 50 train 11.2316 , allloss: 11.2532, dt: 1297.83ms, fracRes: 0.9898, norm(attn): 0.0013, norm(output): 0.1338, norm(x): 0.0291, norm(y): 0.9948, norm:0.9932, tok/sec: 100993.37, flops:78.65, batch-reuse:1
@ 51 train 11.2207 , allloss: 11.2432, dt: 1053.73ms, fracRes: 0.9891, norm(attn): 0.0014, norm(output): 0.1387, norm(x): 0.0293, norm(y): 0.9948, norm:0.9574, tok/sec: 124388.66, flops:96.87, batch-reuse:1
@ 52 train 11.1959 , allloss: 11.2194, dt: 1052.12ms, fracRes: 0.9884, norm(attn): 0.0016, norm(output): 0.1416, norm(x): 0.0295, norm(y): 0.9949, norm:0.9842, tok/sec: 124579.06, flops:97.02, batch-reuse:1
@ 53 train 11.1856 , allloss: 11.2102, dt: 1062.75ms, fracRes: 0.9875, norm(attn): 0.0017, norm(output): 0.1455, norm(x): 0.0297, norm(y): 0.9949, norm:0.9627, tok/sec: 123333.27, flops:96.05, batch-reuse:1
@ 54 train 11.1620 , allloss: 11.1878, dt: 1040.86ms, fracRes: 0.9866, norm(attn): 0.0019, norm(output): 0.1504, norm(x): 0.0300, norm(y): 0.9950, norm:0.9510, tok/sec: 125927.08, flops:98.07, batch-reuse:1
@ 55 train 11.1544 , allloss: 11.1816, dt: 1042.05ms, fracRes: 0.9856, norm(attn): 0.0021, norm(output): 0.1553, norm(x): 0.0302, norm(y): 0.9950, norm:0.9176, tok/sec: 125782.62, flops:97.96, batch-reuse:1
@ 56 train 11.1216 , allloss: 11.1503, dt: 1044.29ms, fracRes: 0.9843, norm(attn): 0.0024, norm(output): 0.1572, norm(x): 0.0306, norm(y): 0.9950, norm:0.9714, tok/sec: 125512.96, flops:97.75, batch-reuse:1
@ 57 train 11.0966 , allloss: 11.1270, dt: 1050.74ms, fracRes: 0.9830, norm(attn): 0.0027, norm(output): 0.1621, norm(x): 0.0310, norm(y): 0.9951, norm:0.9796, tok/sec: 124742.00, flops:97.15, batch-reuse:1
@ 58 train 11.0900 , allloss: 11.1222, dt: 1056.17ms, fracRes: 0.9815, norm(attn): 0.0029, norm(output): 0.1699, norm(x): 0.0314, norm(y): 0.9951, norm:0.9501, tok/sec: 124101.63, flops:96.65, batch-reuse:1
@ 59 train 11.0488 , allloss: 11.0831, dt: 1039.85ms, fracRes: 0.9798, norm(attn): 0.0034, norm(output): 0.1729, norm(x): 0.0320, norm(y): 0.9952, norm:0.9862, tok/sec: 126049.09, flops:98.17, batch-reuse:1
@ 60 train 11.0274 , allloss: 11.0640, dt: 1052.27ms, fracRes: 0.9779, norm(attn): 0.0037, norm(output): 0.1797, norm(x): 0.0326, norm(y): 0.9952, norm:0.9679, tok/sec: 124561.31, flops:97.01, batch-reuse:1
@ 61 train 11.0125 , allloss: 11.0517, dt: 1058.20ms, fracRes: 0.9758, norm(attn): 0.0042, norm(output): 0.1865, norm(x): 0.0333, norm(y): 0.9953, norm:0.9580, tok/sec: 123862.81, flops:96.46, batch-reuse:1
@ 62 train 10.9765 , allloss: 11.0186, dt: 1060.67ms, fracRes: 0.9733, norm(attn): 0.0048, norm(output): 0.1895, norm(x): 0.0341, norm(y): 0.9953, norm:1.0882, tok/sec: 123574.62, flops:96.24, batch-reuse:1
@ 63 train 10.9582 , allloss: 11.0033, dt: 1053.09ms, fracRes: 0.9708, norm(attn): 0.0054, norm(output): 0.1992, norm(x): 0.0350, norm(y): 0.9954, norm:0.9759, tok/sec: 124464.04, flops:96.93, batch-reuse:1
@ 64 train 10.9325 , allloss: 10.9811, dt: 1043.47ms, fracRes: 0.9679, norm(attn): 0.0061, norm(output): 0.2041, norm(x): 0.0361, norm(y): 0.9954, norm:0.9883, tok/sec: 125611.27, flops:97.83, batch-reuse:1
@ 65 train 10.9118 , allloss: 10.9642, dt: 1051.54ms, fracRes: 0.9646, norm(attn): 0.0069, norm(output): 0.2148, norm(x): 0.0373, norm(y): 0.9955, norm:0.9924, tok/sec: 124648.12, flops:97.08, batch-reuse:1
@ 66 train 10.8787 , allloss: 10.9354, dt: 1060.97ms, fracRes: 0.9610, norm(attn): 0.0078, norm(output): 0.2197, norm(x): 0.0386, norm(y): 0.9955, norm:1.0178, tok/sec: 123539.94, flops:96.21, batch-reuse:1
@ 67 train 10.8147 , allloss: 10.8763, dt: 1053.42ms, fracRes: 0.9568, norm(attn): 0.0089, norm(output): 0.2305, norm(x): 0.0403, norm(y): 0.9956, norm:1.1090, tok/sec: 124424.97, flops:96.90, batch-reuse:1
@ 68 train 10.7988 , allloss: 10.8656, dt: 1047.75ms, fracRes: 0.9526, norm(attn): 0.0100, norm(output): 0.2354, norm(x): 0.0420, norm(y): 0.9957, norm:1.1157, tok/sec: 125099.11, flops:97.43, batch-reuse:1
@ 69 train 10.7451 , allloss: 10.8183, dt: 1061.76ms, fracRes: 0.9478, norm(attn): 0.0115, norm(output): 0.2480, norm(x): 0.0440, norm(y): 0.9957, norm:1.1921, tok/sec: 123447.81, flops:96.14, batch-reuse:1
@ 70 train 10.7003 , allloss: 10.7806, dt: 1041.42ms, fracRes: 0.9425, norm(attn): 0.0129, norm(output): 0.2539, norm(x): 0.0464, norm(y): 0.9958, norm:1.2406, tok/sec: 125858.46, flops:98.02, batch-reuse:1
@ 71 train 10.6514 , allloss: 10.7400, dt: 1052.28ms, fracRes: 0.9366, norm(attn): 0.0146, norm(output): 0.2656, norm(x): 0.0491, norm(y): 0.9959, norm:1.2782, tok/sec: 124560.26, flops:97.01, batch-reuse:1
@ 72 train 10.6055 , allloss: 10.7039, dt: 1044.42ms, fracRes: 0.9303, norm(attn): 0.0166, norm(output): 0.2793, norm(x): 0.0521, norm(y): 0.9959, norm:1.3586, tok/sec: 125497.40, flops:97.74, batch-reuse:1
@ 73 train 10.5407 , allloss: 10.6508, dt: 1058.56ms, fracRes: 0.9231, norm(attn): 0.0189, norm(output): 0.2852, norm(x): 0.0556, norm(y): 0.9960, norm:1.4756, tok/sec: 123820.97, flops:96.43, batch-reuse:1
@ 74 train 10.4953 , allloss: 10.6184, dt: 1059.72ms, fracRes: 0.9156, norm(attn): 0.0215, norm(output): 0.3008, norm(x): 0.0594, norm(y): 0.9961, norm:1.5693, tok/sec: 123685.02, flops:96.33, batch-reuse:1
@ 75 train 10.6015 , allloss: 10.7367, dt: 1057.95ms, fracRes: 0.9096, norm(attn): 0.0236, norm(output): 0.3125, norm(x): 0.0630, norm(y): 0.9962, norm:1.6456, tok/sec: 123892.46, flops:96.49, batch-reuse:1
@ 76 train 10.3898 , allloss: 10.5434, dt: 1045.51ms, fracRes: 0.8983, norm(attn): 0.0273, norm(output): 0.3242, norm(x): 0.0685, norm(y): 0.9963, norm:1.7656, tok/sec: 125366.02, flops:97.64, batch-reuse:1
@ 77 train 10.4575 , allloss: 10.6254, dt: 1045.34ms, fracRes: 0.8918, norm(attn): 0.0300, norm(output): 0.3359, norm(x): 0.0727, norm(y): 0.9964, norm:1.8940, tok/sec: 125386.89, flops:97.65, batch-reuse:1
@ 78 train 10.3080 , allloss: 10.4959, dt: 1048.57ms, fracRes: 0.8802, norm(attn): 0.0344, norm(output): 0.3594, norm(x): 0.0792, norm(y): 0.9965, norm:1.8336, tok/sec: 125000.30, flops:97.35, batch-reuse:1
@ 79 train 10.2005 , allloss: 10.4073, dt: 1042.19ms, fracRes: 0.8687, norm(attn): 0.0391, norm(output): 0.3750, norm(x): 0.0859, norm(y): 0.9966, norm:1.9773, tok/sec: 125766.01, flops:97.95, batch-reuse:1
@ 80 train 10.1775 , allloss: 10.3993, dt: 1043.04ms, fracRes: 0.8597, norm(attn): 0.0430, norm(output): 0.3867, norm(x): 0.0923, norm(y): 0.9967, norm:2.0143, tok/sec: 125663.61, flops:97.87, batch-reuse:1
@ 81 train 10.1398 , allloss: 10.3743, dt: 1046.25ms, fracRes: 0.8512, norm(attn): 0.0469, norm(output): 0.4062, norm(x): 0.0987, norm(y): 0.9968, norm:2.2398, tok/sec: 125277.51, flops:97.57, batch-reuse:1
@ 82 train 10.0758 , allloss: 10.3204, dt: 1055.35ms, fracRes: 0.8426, norm(attn): 0.0513, norm(output): 0.4258, norm(x): 0.1056, norm(y): 0.9969, norm:2.2440, tok/sec: 124197.43, flops:96.73, batch-reuse:1
@ 83 train 10.0553 , allloss: 10.3061, dt: 1057.98ms, fracRes: 0.8367, norm(attn): 0.0552, norm(output): 0.4375, norm(x): 0.1115, norm(y): 0.9970, norm:2.2496, tok/sec: 123889.39, flops:96.49, batch-reuse:1
@ 84 train 10.0365 , allloss: 10.2913, dt: 1050.43ms, fracRes: 0.8314, norm(attn): 0.0591, norm(output): 0.4473, norm(x): 0.1174, norm(y): 0.9970, norm:2.3827, tok/sec: 124779.34, flops:97.18, batch-reuse:1
@ 85 train 10.0014 , allloss: 10.2582, dt: 1060.68ms, fracRes: 0.8265, norm(attn): 0.0630, norm(output): 0.4688, norm(x): 0.1234, norm(y): 0.9971, norm:2.5614, tok/sec: 123573.23, flops:96.24, batch-reuse:1
@ 86 train 9.9506 , allloss: 10.2083, dt: 1057.46ms, fracRes: 0.8224, norm(attn): 0.0664, norm(output): 0.4863, norm(x): 0.1291, norm(y): 0.9972, norm:2.6510, tok/sec: 123949.30, flops:96.53, batch-reuse:1
@ 87 train 9.9608 , allloss: 10.2179, dt: 1057.01ms, fracRes: 0.8203, norm(attn): 0.0703, norm(output): 0.5000, norm(x): 0.1336, norm(y): 0.9972, norm:2.8347, tok/sec: 124003.01, flops:96.57, batch-reuse:1
@ 88 train 9.9418 , allloss: 10.1976, dt: 1051.88ms, fracRes: 0.8188, norm(attn): 0.0742, norm(output): 0.5117, norm(x): 0.1379, norm(y): 0.9972, norm:2.8562, tok/sec: 124607.33, flops:97.04, batch-reuse:1
@ 89 train 9.8955 , allloss: 10.1500, dt: 1053.26ms, fracRes: 0.8166, norm(attn): 0.0776, norm(output): 0.5312, norm(x): 0.1427, norm(y): 0.9973, norm:2.9244, tok/sec: 124444.60, flops:96.92, batch-reuse:1
@ 90 train 9.8608 , allloss: 10.1137, dt: 1057.47ms, fracRes: 0.8151, norm(attn): 0.0811, norm(output): 0.5508, norm(x): 0.1474, norm(y): 0.9973, norm:2.8744, tok/sec: 123948.10, flops:96.53, batch-reuse:1
@ 91 train 9.8801 , allloss: 10.1297, dt: 1046.28ms, fracRes: 0.8156, norm(attn): 0.0845, norm(output): 0.5625, norm(x): 0.1507, norm(y): 0.9974, norm:2.8615, tok/sec: 125274.29, flops:97.56, batch-reuse:1
@ 92 train 9.8311 , allloss: 10.0778, dt: 1061.49ms, fracRes: 0.8147, norm(attn): 0.0874, norm(output): 0.5742, norm(x): 0.1548, norm(y): 0.9974, norm:2.8858, tok/sec: 123479.09, flops:96.17, batch-reuse:1
@ 93 train 9.8336 , allloss: 10.0764, dt: 1044.50ms, fracRes: 0.8152, norm(attn): 0.0908, norm(output): 0.5898, norm(x): 0.1580, norm(y): 0.9974, norm:2.8209, tok/sec: 125488.09, flops:97.73, batch-reuse:1
@ 94 train 9.8818 , allloss: 10.1191, dt: 1046.12ms, fracRes: 0.8161, norm(attn): 0.0933, norm(output): 0.6133, norm(x): 0.1612, norm(y): 0.9975, norm:2.7502, tok/sec: 125293.79, flops:97.58, batch-reuse:1
@ 95 train 9.7838 , allloss: 10.0179, dt: 1066.95ms, fracRes: 0.8159, norm(attn): 0.0967, norm(output): 0.6289, norm(x): 0.1652, norm(y): 0.9975, norm:2.6948, tok/sec: 122847.14, flops:95.67, batch-reuse:1
@ 96 train 9.7148 , allloss: 9.9439, dt: 1054.74ms, fracRes: 0.8155, norm(attn): 0.1011, norm(output): 0.6367, norm(x): 0.1693, norm(y): 0.9975, norm:2.6866, tok/sec: 124269.89, flops:96.78, batch-reuse:1
@ 97 train 9.7155 , allloss: 9.9391, dt: 1057.61ms, fracRes: 0.8166, norm(attn): 0.1025, norm(output): 0.6641, norm(x): 0.1722, norm(y): 0.9976, norm:2.5611, tok/sec: 123931.70, flops:96.52, batch-reuse:1
@ 98 train 9.6851 , allloss: 9.9015, dt: 1045.60ms, fracRes: 0.8160, norm(attn): 0.1079, norm(output): 0.6836, norm(x): 0.1765, norm(y): 0.9976, norm:2.6137, tok/sec: 125356.24, flops:97.63, batch-reuse:1
@ 99 train 9.6782 , allloss: 9.8876, dt: 1041.63ms, fracRes: 0.8166, norm(attn): 0.1099, norm(output): 0.6914, norm(x): 0.1801, norm(y): 0.9976, norm:2.5112, tok/sec: 125833.37, flops:98.00, batch-reuse:1
@ 100 train 9.6266 , allloss: 9.8285, dt: 1048.80ms, fracRes: 0.8160, norm(attn): 0.1147, norm(output): 0.7148, norm(x): 0.1846, norm(y): 0.9977, norm:2.4097, tok/sec: 124973.13, flops:97.33, batch-reuse:1
@ 101 train 9.5711 , allloss: 9.7643, dt: 1057.74ms, fracRes: 0.8150, norm(attn): 0.1177, norm(output): 0.7461, norm(x): 0.1898, norm(y): 0.9977, norm:2.3511, tok/sec: 123916.67, flops:96.51, batch-reuse:1
@ 102 train 9.5818 , allloss: 9.7644, dt: 1050.09ms, fracRes: 0.8143, norm(attn): 0.1221, norm(output): 0.7500, norm(x): 0.1948, norm(y): 0.9978, norm:2.2396, tok/sec: 124820.22, flops:97.21, batch-reuse:1
@ 103 train 9.5829 , allloss: 9.7545, dt: 1048.83ms, fracRes: 0.8128, norm(attn): 0.1260, norm(output): 0.7656, norm(x): 0.2007, norm(y): 0.9978, norm:2.1312, tok/sec: 124970.07, flops:97.33, batch-reuse:1
@ 104 train 9.5408 , allloss: 9.7009, dt: 1057.17ms, fracRes: 0.8101, norm(attn): 0.1309, norm(output): 0.8008, norm(x): 0.2079, norm(y): 0.9979, norm:2.0401, tok/sec: 123983.46, flops:96.56, batch-reuse:1
@ 105 train 9.4902 , allloss: 9.6377, dt: 1057.91ms, fracRes: 0.8062, norm(attn): 0.1367, norm(output): 0.8164, norm(x): 0.2165, norm(y): 0.9980, norm:2.0051, tok/sec: 123897.65, flops:96.49, batch-reuse:1
@ 106 train 9.4733 , allloss: 9.6078, dt: 1071.78ms, fracRes: 0.8016, norm(attn): 0.1416, norm(output): 0.8516, norm(x): 0.2262, norm(y): 0.9980, norm:1.9176, tok/sec: 122294.25, flops:95.24, batch-reuse:1
@ 107 train 9.4068 , allloss: 9.5282, dt: 1063.83ms, fracRes: 0.7950, norm(attn): 0.1504, norm(output): 0.8750, norm(x): 0.2382, norm(y): 0.9981, norm:1.8759, tok/sec: 123207.34, flops:95.95, batch-reuse:1
@ 108 train 9.3528 , allloss: 9.4613, dt: 1054.89ms, fracRes: 0.7875, norm(attn): 0.1572, norm(output): 0.8984, norm(x): 0.2523, norm(y): 0.9982, norm:1.8534, tok/sec: 124251.86, flops:96.77, batch-reuse:1
@ 109 train 9.2620 , allloss: 9.3583, dt: 1061.82ms, fracRes: 0.7776, norm(attn): 0.1689, norm(output): 0.9414, norm(x): 0.2694, norm(y): 0.9983, norm:1.8690, tok/sec: 123440.94, flops:96.14, batch-reuse:1
@ 110 train 9.2773 , allloss: 9.3617, dt: 1065.97ms, fracRes: 0.7681, norm(attn): 0.1758, norm(output): 0.9727, norm(x): 0.2866, norm(y): 0.9984, norm:1.7296, tok/sec: 122960.09, flops:95.76, batch-reuse:1
@ 111 train 9.1881 , allloss: 9.2615, dt: 1057.18ms, fracRes: 0.7550, norm(attn): 0.1875, norm(output): 1.0000, norm(x): 0.3098, norm(y): 0.9985, norm:1.7296, tok/sec: 123982.60, flops:96.56, batch-reuse:1
@ 112 train 9.1377 , allloss: 9.2017, dt: 1050.56ms, fracRes: 0.7414, norm(attn): 0.2012, norm(output): 1.0391, norm(x): 0.3344, norm(y): 0.9986, norm:1.7343, tok/sec: 124763.96, flops:97.17, batch-reuse:1
@ 113 train 9.0476 , allloss: 9.1041, dt: 1051.10ms, fracRes: 0.7250, norm(attn): 0.2178, norm(output): 1.0859, norm(x): 0.3633, norm(y): 0.9988, norm:1.7684, tok/sec: 124700.20, flops:97.12, batch-reuse:1
@ 114 train 8.9963 , allloss: 9.0468, dt: 1047.81ms, fracRes: 0.7085, norm(attn): 0.2324, norm(output): 1.1250, norm(x): 0.3934, norm(y): 0.9989, norm:1.7458, tok/sec: 125091.83, flops:97.42, batch-reuse:1
@ 115 train 8.9266 , allloss: 8.9723, dt: 1044.31ms, fracRes: 0.6906, norm(attn): 0.2480, norm(output): 1.1641, norm(x): 0.4262, norm(y): 0.9990, norm:1.7456, tok/sec: 125511.07, flops:97.75, batch-reuse:1
@ 116 train 8.8429 , allloss: 8.8846, dt: 1060.24ms, fracRes: 0.6715, norm(attn): 0.2637, norm(output): 1.2109, norm(x): 0.4613, norm(y): 0.9992, norm:1.7398, tok/sec: 123624.36, flops:96.28, batch-reuse:1
@ 117 train 8.7918 , allloss: 8.8301, dt: 1074.50ms, fracRes: 0.6536, norm(attn): 0.2793, norm(output): 1.2500, norm(x): 0.4955, norm(y): 0.9993, norm:1.7563, tok/sec: 121984.66, flops:95.00, batch-reuse:1
@ 118 train 8.7334 , allloss: 8.7687, dt: 1050.94ms, fracRes: 0.6368, norm(attn): 0.2930, norm(output): 1.2656, norm(x): 0.5291, norm(y): 0.9995, norm:1.7488, tok/sec: 124718.99, flops:97.13, batch-reuse:1
@ 119 train 8.6934 , allloss: 8.7258, dt: 1048.33ms, fracRes: 0.6206, norm(attn): 0.3086, norm(output): 1.2969, norm(x): 0.5621, norm(y): 0.9996, norm:1.7267, tok/sec: 125029.69, flops:97.37, batch-reuse:1
@ 120 train 8.7446 , allloss: 8.7742, dt: 1060.93ms, fracRes: 0.6094, norm(attn): 0.3164, norm(output): 1.3438, norm(x): 0.5865, norm(y): 0.9997, norm:1.6129, tok/sec: 123544.74, flops:96.22, batch-reuse:1
@ 121 train 8.7529 , allloss: 8.7800, dt: 1065.86ms, fracRes: 0.5974, norm(attn): 0.3301, norm(output): 1.3672, norm(x): 0.6131, norm(y): 0.9998, norm:1.6335, tok/sec: 122972.50, flops:95.77, batch-reuse:1
@ 122 train 8.6777 , allloss: 8.7026, dt: 1049.34ms, fracRes: 0.5843, norm(attn): 0.3438, norm(output): 1.3828, norm(x): 0.6408, norm(y): 0.9999, norm:1.5694, tok/sec: 124908.93, flops:97.28, batch-reuse:1
@ 123 train 8.5709 , allloss: 8.5936, dt: 1058.59ms, fracRes: 0.5704, norm(attn): 0.3516, norm(output): 1.4141, norm(x): 0.6708, norm(y): 1.0000, norm:1.6314, tok/sec: 123817.29, flops:96.43, batch-reuse:1
@ 124 train 8.5556 , allloss: 8.5764, dt: 1060.57ms, fracRes: 0.5618, norm(attn): 0.3633, norm(output): 1.4531, norm(x): 0.6913, norm(y): 1.0001, norm:1.5790, tok/sec: 123586.32, flops:96.25, batch-reuse:1
@ 125 train 8.5280 , allloss: 8.5470, dt: 1051.37ms, fracRes: 0.5540, norm(attn): 0.3730, norm(output): 1.4688, norm(x): 0.7100, norm(y): 1.0002, norm:1.5621, tok/sec: 124668.39, flops:97.09, batch-reuse:1
@ 126 train 8.4955 , allloss: 8.5130, dt: 1049.62ms, fracRes: 0.5478, norm(attn): 0.3750, norm(output): 1.4844, norm(x): 0.7259, norm(y): 1.0003, norm:1.5565, tok/sec: 124876.02, flops:97.25, batch-reuse:1
@ 127 train 8.4398 , allloss: 8.4560, dt: 1059.89ms, fracRes: 0.5398, norm(attn): 0.3809, norm(output): 1.4922, norm(x): 0.7450, norm(y): 1.0004, norm:1.5257, tok/sec: 123665.21, flops:96.31, batch-reuse:1
@ 128 train 8.4102 , allloss: 8.4250, dt: 1061.30ms, fracRes: 0.5344, norm(attn): 0.3828, norm(output): 1.5000, norm(x): 0.7589, norm(y): 1.0004, norm:1.5072, tok/sec: 123501.31, flops:96.18, batch-reuse:1
@ 129 train 8.4856 , allloss: 8.4992, dt: 1077.94ms, fracRes: 0.5342, norm(attn): 0.3906, norm(output): 1.5000, norm(x): 0.7609, norm(y): 1.0004, norm:1.4222, tok/sec: 121595.14, flops:94.70, batch-reuse:1
@ 130 train 8.4098 , allloss: 8.4221, dt: 1060.60ms, fracRes: 0.5287, norm(attn): 0.3945, norm(output): 1.5156, norm(x): 0.7755, norm(y): 1.0005, norm:1.4423, tok/sec: 123582.48, flops:96.25, batch-reuse:1
@ 131 train 8.3861 , allloss: 8.3974, dt: 1057.16ms, fracRes: 0.5256, norm(attn): 0.4004, norm(output): 1.5469, norm(x): 0.7845, norm(y): 1.0006, norm:1.4209, tok/sec: 123985.08, flops:96.56, batch-reuse:1
@ 132 train 8.3624 , allloss: 8.3728, dt: 1068.60ms, fracRes: 0.5242, norm(attn): 0.4023, norm(output): 1.5469, norm(x): 0.7901, norm(y): 1.0006, norm:1.4539, tok/sec: 122657.83, flops:95.53, batch-reuse:1
@ 133 train 8.3248 , allloss: 8.3346, dt: 1065.24ms, fracRes: 0.5215, norm(attn): 0.4023, norm(output): 1.5781, norm(x): 0.7982, norm(y): 1.0006, norm:1.3843, tok/sec: 123044.47, flops:95.83, batch-reuse:1
@ 134 train 8.3019 , allloss: 8.3111, dt: 1058.76ms, fracRes: 0.5218, norm(attn): 0.4043, norm(output): 1.5781, norm(x): 0.8002, norm(y): 1.0007, norm:1.4027, tok/sec: 123797.52, flops:96.41, batch-reuse:1
@ 135 train 8.2654 , allloss: 8.2741, dt: 1058.16ms, fracRes: 0.5202, norm(attn): 0.4023, norm(output): 1.5859, norm(x): 0.8052, norm(y): 1.0007, norm:1.3542, tok/sec: 123867.56, flops:96.47, batch-reuse:1
@ 136 train 8.2585 , allloss: 8.2669, dt: 1048.24ms, fracRes: 0.5230, norm(attn): 0.3965, norm(output): 1.5312, norm(x): 0.8015, norm(y): 1.0007, norm:1.3657, tok/sec: 125040.56, flops:97.38, batch-reuse:1
@ 137 train 8.1849 , allloss: 8.1930, dt: 1043.37ms, fracRes: 0.5228, norm(attn): 0.3945, norm(output): 1.5156, norm(x): 0.8037, norm(y): 1.0007, norm:1.3855, tok/sec: 125623.87, flops:97.84, batch-reuse:1
@ 138 train 8.1463 , allloss: 8.1536, dt: 1055.02ms, fracRes: 0.5220, norm(attn): 0.3926, norm(output): 1.5312, norm(x): 0.8041, norm(y): 1.0008, norm:1.3715, tok/sec: 124235.99, flops:96.76, batch-reuse:1
@ 139 train 8.0720 , allloss: 8.0788, dt: 1049.01ms, fracRes: 0.5205, norm(attn): 0.3926, norm(output): 1.5625, norm(x): 0.8052, norm(y): 1.0008, norm:1.5065, tok/sec: 124947.88, flops:97.31, batch-reuse:1
@ 140 train 8.1207 , allloss: 8.1271, dt: 1049.50ms, fracRes: 0.5217, norm(attn): 0.3906, norm(output): 1.5938, norm(x): 0.8000, norm(y): 1.0008, norm:1.2671, tok/sec: 124889.84, flops:97.26, batch-reuse:1
@ 141 train 8.1086 , allloss: 8.1145, dt: 1050.51ms, fracRes: 0.5230, norm(attn): 0.3867, norm(output): 1.5938, norm(x): 0.7945, norm(y): 1.0008, norm:1.2397, tok/sec: 124770.42, flops:97.17, batch-reuse:1
@ 142 train 8.1515 , allloss: 8.1572, dt: 1051.57ms, fracRes: 0.5261, norm(attn): 0.3770, norm(output): 1.5859, norm(x): 0.7839, norm(y): 1.0008, norm:1.1823, tok/sec: 124643.91, flops:97.07, batch-reuse:1
@ 143 train 8.1136 , allloss: 8.1190, dt: 1061.58ms, fracRes: 0.5281, norm(attn): 0.3750, norm(output): 1.5469, norm(x): 0.7754, norm(y): 1.0008, norm:1.1742, tok/sec: 123468.63, flops:96.16, batch-reuse:1
@ 144 train 8.0644 , allloss: 8.0696, dt: 1049.90ms, fracRes: 0.5303, norm(attn): 0.3730, norm(output): 1.5312, norm(x): 0.7662, norm(y): 1.0008, norm:1.1859, tok/sec: 124841.82, flops:97.23, batch-reuse:1
@ 145 train 8.0783 , allloss: 8.0834, dt: 1055.84ms, fracRes: 0.5340, norm(attn): 0.3633, norm(output): 1.5078, norm(x): 0.7521, norm(y): 1.0008, norm:1.1408, tok/sec: 124140.30, flops:96.68, batch-reuse:1
@ 146 train 8.1361 , allloss: 8.1410, dt: 1076.19ms, fracRes: 0.5401, norm(attn): 0.3496, norm(output): 1.4844, norm(x): 0.7326, norm(y): 1.0008, norm:1.0819, tok/sec: 121792.92, flops:94.85, batch-reuse:1
@ 147 train 8.0261 , allloss: 8.0307, dt: 1069.39ms, fracRes: 0.5414, norm(attn): 0.3438, norm(output): 1.4688, norm(x): 0.7222, norm(y): 1.0008, norm:1.1107, tok/sec: 122566.63, flops:95.46, batch-reuse:1
@ 148 train 7.9957 , allloss: 8.0001, dt: 1074.86ms, fracRes: 0.5433, norm(attn): 0.3438, norm(output): 1.4844, norm(x): 0.7068, norm(y): 1.0008, norm:1.0871, tok/sec: 121943.45, flops:94.97, batch-reuse:1
@ 149 train 7.9007 , allloss: 7.9048, dt: 1062.46ms, fracRes: 0.5483, norm(attn): 0.3320, norm(output): 1.4219, norm(x): 0.6893, norm(y): 1.0008, norm:1.1539, tok/sec: 123366.23, flops:96.08, batch-reuse:1
@ 150 train 8.0303 , allloss: 8.0345, dt: 1067.41ms, fracRes: 0.5528, norm(attn): 0.3242, norm(output): 1.4141, norm(x): 0.6639, norm(y): 1.0007, norm:1.0006, tok/sec: 122794.81, flops:95.63, batch-reuse:1
@ 151 train 7.8893 , allloss: 7.8931, dt: 1051.81ms, fracRes: 0.5545, norm(attn): 0.3184, norm(output): 1.3984, norm(x): 0.6486, norm(y): 1.0007, norm:1.0641, tok/sec: 124615.91, flops:97.05, batch-reuse:1
@ 152 train 7.8343 , allloss: 7.8381, dt: 1068.51ms, fracRes: 0.5624, norm(attn): 0.3105, norm(output): 1.3672, norm(x): 0.6252, norm(y): 1.0007, norm:1.2718, tok/sec: 122667.82, flops:95.53, batch-reuse:1
@ 153 train 7.8710 , allloss: 7.8746, dt: 1048.43ms, fracRes: 0.5570, norm(attn): 0.3223, norm(output): 1.4688, norm(x): 0.6206, norm(y): 1.0007, norm:1.0057, tok/sec: 125016.84, flops:97.36, batch-reuse:1
@ 154 train 7.9003 , allloss: 7.9039, dt: 1051.36ms, fracRes: 0.5592, norm(attn): 0.3223, norm(output): 1.4922, norm(x): 0.6112, norm(y): 1.0007, norm:0.9300, tok/sec: 124668.42, flops:97.09, batch-reuse:1
@ 155 train 7.9571 , allloss: 7.9608, dt: 1061.82ms, fracRes: 0.5632, norm(attn): 0.3125, norm(output): 1.4531, norm(x): 0.5988, norm(y): 1.0007, norm:0.8536, tok/sec: 123440.74, flops:96.14, batch-reuse:1
@ 156 train 7.8511 , allloss: 7.8544, dt: 1054.56ms, fracRes: 0.5661, norm(attn): 0.3008, norm(output): 1.3750, norm(x): 0.5918, norm(y): 1.0007, norm:0.9332, tok/sec: 124290.73, flops:96.80, batch-reuse:1
@ 157 train 7.9247 , allloss: 7.9280, dt: 1047.88ms, fracRes: 0.5709, norm(attn): 0.2910, norm(output): 1.3281, norm(x): 0.5801, norm(y): 1.0007, norm:1.1876, tok/sec: 125082.52, flops:97.41, batch-reuse:1
@ 158 train 7.8870 , allloss: 7.8902, dt: 1053.39ms, fracRes: 0.5662, norm(attn): 0.3047, norm(output): 1.3984, norm(x): 0.5791, norm(y): 1.0007, norm:0.8111, tok/sec: 124428.72, flops:96.91, batch-reuse:1
@ 159 train 7.8938 , allloss: 7.8968, dt: 1049.51ms, fracRes: 0.5649, norm(attn): 0.3125, norm(output): 1.4766, norm(x): 0.5765, norm(y): 1.0007, norm:0.7851, tok/sec: 124889.18, flops:97.26, batch-reuse:1
@ 160 train 7.8181 , allloss: 7.8211, dt: 1062.06ms, fracRes: 0.5636, norm(attn): 0.3125, norm(output): 1.4922, norm(x): 0.5736, norm(y): 1.0008, norm:0.8492, tok/sec: 123412.75, flops:96.11, batch-reuse:1
@ 161 train 7.8145 , allloss: 7.8172, dt: 1067.93ms, fracRes: 0.5637, norm(attn): 0.3105, norm(output): 1.4219, norm(x): 0.5676, norm(y): 1.0008, norm:0.7789, tok/sec: 122735.13, flops:95.59, batch-reuse:1
@ 162 train 7.8748 , allloss: 7.8776, dt: 1062.61ms, fracRes: 0.5679, norm(attn): 0.2930, norm(output): 1.3672, norm(x): 0.5552, norm(y): 1.0007, norm:0.7203, tok/sec: 123348.93, flops:96.06, batch-reuse:1
@ 163 train 7.8254 , allloss: 8.0807, dt: 1051.82ms, fracRes: 0.5736, norm(attn): 0.2793, norm(output): 1.2656, norm(x): 0.5423, norm(y): 1.0008, norm:5.0988, tok/sec: 124614.28, flops:97.05, batch-reuse:1
@ 164 train 7.7214 , allloss: 7.7238, dt: 1053.81ms, fracRes: 0.5667, norm(attn): 0.2852, norm(output): 1.3359, norm(x): 0.5532, norm(y): 1.0008, norm:0.8533, tok/sec: 124379.62, flops:96.87, batch-reuse:1
@ 165 train 7.7972 , allloss: 7.7995, dt: 1056.45ms, fracRes: 0.5641, norm(attn): 0.3086, norm(output): 1.4219, norm(x): 0.5565, norm(y): 1.0008, norm:0.6915, tok/sec: 124068.69, flops:96.63, batch-reuse:1
@ 166 train 7.7063 , allloss: 7.7086, dt: 1051.36ms, fracRes: 0.5632, norm(attn): 0.3105, norm(output): 1.4922, norm(x): 0.5597, norm(y): 1.0008, norm:0.9418, tok/sec: 124669.04, flops:97.09, batch-reuse:1
@ 167 train 7.7175 , allloss: 7.7196, dt: 1045.62ms, fracRes: 0.5649, norm(attn): 0.3086, norm(output): 1.4766, norm(x): 0.5589, norm(y): 1.0008, norm:0.7680, tok/sec: 125353.67, flops:97.63, batch-reuse:1
@ 168 train 7.6743 , allloss: 7.6763, dt: 1055.14ms, fracRes: 0.5669, norm(attn): 0.2949, norm(output): 1.4531, norm(x): 0.5550, norm(y): 1.0008, norm:0.6358, tok/sec: 124222.38, flops:96.74, batch-reuse:1
@ 169 train 7.7144 , allloss: 7.7163, dt: 1051.64ms, fracRes: 0.5719, norm(attn): 0.2832, norm(output): 1.3828, norm(x): 0.5441, norm(y): 1.0008, norm:0.6411, tok/sec: 124635.58, flops:97.07, batch-reuse:1
@ 170 train 7.6991 , allloss: 7.7011, dt: 1065.51ms, fracRes: 0.5773, norm(attn): 0.2754, norm(output): 1.3359, norm(x): 0.5292, norm(y): 1.0008, norm:0.7519, tok/sec: 123013.31, flops:95.80, batch-reuse:1
@ 171 train 7.6646 , allloss: 7.6665, dt: 1062.41ms, fracRes: 0.5827, norm(attn): 0.2656, norm(output): 1.2969, norm(x): 0.5073, norm(y): 1.0008, norm:0.8004, tok/sec: 123372.54, flops:96.08, batch-reuse:1
@ 172 train 7.6795 , allloss: 7.6816, dt: 1048.82ms, fracRes: 0.5891, norm(attn): 0.2598, norm(output): 1.2969, norm(x): 0.4777, norm(y): 1.0007, norm:0.5867, tok/sec: 124971.03, flops:97.33, batch-reuse:1
@ 173 train 7.6524 , allloss: 7.7101, dt: 1060.99ms, fracRes: 0.5967, norm(attn): 0.2559, norm(output): 1.3125, norm(x): 0.4474, norm(y): 1.0006, norm:1.3616, tok/sec: 123537.16, flops:96.21, batch-reuse:1
@ 174 train 7.7756 , allloss: 7.7782, dt: 1063.76ms, fracRes: 0.6088, norm(attn): 0.2539, norm(output): 1.3750, norm(x): 0.4340, norm(y): 1.0006, norm:0.7626, tok/sec: 123215.51, flops:95.96, batch-reuse:1
@ 175 train 7.6795 , allloss: 7.6817, dt: 1054.67ms, fracRes: 0.6056, norm(attn): 0.2520, norm(output): 1.3516, norm(x): 0.4375, norm(y): 1.0006, norm:1.4430, tok/sec: 124277.22, flops:96.79, batch-reuse:1
@ 176 train 7.6780 , allloss: 7.6830, dt: 1054.13ms, fracRes: 0.6039, norm(attn): 0.2383, norm(output): 1.2578, norm(x): 0.4359, norm(y): 1.0006, norm:0.4906, tok/sec: 124341.39, flops:96.84, batch-reuse:1
@ 177 train 7.6459 , allloss: 7.6584, dt: 1063.85ms, fracRes: 0.6032, norm(attn): 0.2305, norm(output): 1.2031, norm(x): 0.4388, norm(y): 1.0006, norm:1.0379, tok/sec: 123205.02, flops:95.95, batch-reuse:1
@ 178 train 7.6962 , allloss: 7.6981, dt: 1045.39ms, fracRes: 0.6028, norm(attn): 0.2334, norm(output): 1.2422, norm(x): 0.4502, norm(y): 1.0006, norm:0.5070, tok/sec: 125380.37, flops:97.65, batch-reuse:1
@ 179 train 7.5805 , allloss: 7.5822, dt: 1051.77ms, fracRes: 0.6001, norm(attn): 0.2354, norm(output): 1.2500, norm(x): 0.4587, norm(y): 1.0007, norm:0.5516, tok/sec: 124620.43, flops:97.05, batch-reuse:1
@ 180 train 7.6845 , allloss: 7.6863, dt: 1056.54ms, fracRes: 0.6012, norm(attn): 0.2334, norm(output): 1.2422, norm(x): 0.4519, norm(y): 1.0007, norm:0.4897, tok/sec: 124058.02, flops:96.62, batch-reuse:1
@ 181 train 7.6424 , allloss: 7.6451, dt: 1047.49ms, fracRes: 0.6019, norm(attn): 0.2275, norm(output): 1.2109, norm(x): 0.4418, norm(y): 1.0007, norm:0.5509, tok/sec: 125130.18, flops:97.45, batch-reuse:1
@ 182 train 7.6554 , allloss: 7.6572, dt: 1067.40ms, fracRes: 0.6018, norm(attn): 0.2227, norm(output): 1.2031, norm(x): 0.4356, norm(y): 1.0007, norm:0.4470, tok/sec: 122795.69, flops:95.63, batch-reuse:1
@ 183 train 7.6151 , allloss: 7.6170, dt: 1049.42ms, fracRes: 0.6008, norm(attn): 0.2266, norm(output): 1.2031, norm(x): 0.4320, norm(y): 1.0007, norm:0.4356, tok/sec: 124899.94, flops:97.27, batch-reuse:1
@ 184 train 7.4966 , allloss: 7.4994, dt: 1063.18ms, fracRes: 0.5995, norm(attn): 0.2285, norm(output): 1.1875, norm(x): 0.4318, norm(y): 1.0007, norm:0.5292, tok/sec: 123282.93, flops:96.01, batch-reuse:1
@ 185 train 7.5408 , allloss: 7.5427, dt: 1046.27ms, fracRes: 0.6014, norm(attn): 0.2197, norm(output): 1.1641, norm(x): 0.4311, norm(y): 1.0007, norm:0.5159, tok/sec: 125275.09, flops:97.56, batch-reuse:1
@ 186 train 7.6975 , allloss: 7.6995, dt: 1057.55ms, fracRes: 0.6048, norm(attn): 0.2188, norm(output): 1.1641, norm(x): 0.4304, norm(y): 1.0006, norm:0.4805, tok/sec: 123938.71, flops:96.52, batch-reuse:1
@ 187 train 7.7353 , allloss: 7.7373, dt: 1050.43ms, fracRes: 0.6051, norm(attn): 0.2217, norm(output): 1.2031, norm(x): 0.4347, norm(y): 1.0006, norm:0.5961, tok/sec: 124779.62, flops:97.18, batch-reuse:1
@ 188 train 7.5717 , allloss: 7.5737, dt: 1060.90ms, fracRes: 0.6043, norm(attn): 0.2197, norm(output): 1.1719, norm(x): 0.4368, norm(y): 1.0007, norm:0.4088, tok/sec: 123547.80, flops:96.22, batch-reuse:1
@ 189 train 7.6843 , allloss: 7.6864, dt: 1080.07ms, fracRes: 0.6079, norm(attn): 0.2178, norm(output): 1.1328, norm(x): 0.4292, norm(y): 1.0007, norm:0.7047, tok/sec: 121355.12, flops:94.51, batch-reuse:1
@ 190 train 7.6597 , allloss: 7.6616, dt: 1063.74ms, fracRes: 0.6064, norm(attn): 0.2256, norm(output): 1.1797, norm(x): 0.4391, norm(y): 1.0007, norm:0.6510, tok/sec: 123217.88, flops:95.96, batch-reuse:1
@ 191 train 7.6274 , allloss: 7.6292, dt: 1057.65ms, fracRes: 0.6073, norm(attn): 0.2217, norm(output): 1.1641, norm(x): 0.4411, norm(y): 1.0007, norm:0.5058, tok/sec: 123927.68, flops:96.52, batch-reuse:1
@ 192 train 7.6668 , allloss: 7.6686, dt: 1046.23ms, fracRes: 0.6116, norm(attn): 0.2168, norm(output): 1.1250, norm(x): 0.4348, norm(y): 1.0007, norm:0.6201, tok/sec: 125280.45, flops:97.57, batch-reuse:1
@ 193 train 7.5632 , allloss: 7.5649, dt: 1045.89ms, fracRes: 0.6103, norm(attn): 0.2188, norm(output): 1.1250, norm(x): 0.4356, norm(y): 1.0007, norm:0.3879, tok/sec: 125320.78, flops:97.60, batch-reuse:1
@ 194 train 7.6681 , allloss: 7.6699, dt: 1053.57ms, fracRes: 0.6132, norm(attn): 0.2188, norm(output): 1.1328, norm(x): 0.4285, norm(y): 1.0007, norm:0.5868, tok/sec: 124407.94, flops:96.89, batch-reuse:1
@ 195 train 7.6485 , allloss: 7.6504, dt: 1072.86ms, fracRes: 0.6150, norm(attn): 0.2168, norm(output): 1.1328, norm(x): 0.4247, norm(y): 1.0007, norm:0.4358, tok/sec: 122170.86, flops:95.15, batch-reuse:1
@ 196 train 7.5586 , allloss: 7.5638, dt: 1045.51ms, fracRes: 0.6154, norm(attn): 0.2168, norm(output): 1.1328, norm(x): 0.4256, norm(y): 1.0007, norm:0.9022, tok/sec: 125366.36, flops:97.64, batch-reuse:1
@ 197 train 7.5728 , allloss: 7.5744, dt: 1045.23ms, fracRes: 0.6142, norm(attn): 0.2197, norm(output): 1.1719, norm(x): 0.4411, norm(y): 1.0007, norm:0.7515, tok/sec: 125400.22, flops:97.66, batch-reuse:1
@ 198 train 7.5468 , allloss: 7.5484, dt: 1057.79ms, fracRes: 0.6151, norm(attn): 0.2178, norm(output): 1.1328, norm(x): 0.4487, norm(y): 1.0007, norm:0.4952, tok/sec: 123911.08, flops:96.50, batch-reuse:1
@ 199 train 7.6145 , allloss: 7.6161, dt: 1050.40ms, fracRes: 0.6174, norm(attn): 0.2148, norm(output): 1.1172, norm(x): 0.4491, norm(y): 1.0007, norm:1.0519, tok/sec: 124782.48, flops:97.18, batch-reuse:1
@ 200 train 7.6273 , allloss: 7.6289, dt: 1068.66ms, fracRes: 0.6164, norm(attn): 0.2197, norm(output): 1.1406, norm(x): 0.4502, norm(y): 1.0007, norm:0.3938, tok/sec: 122650.93, flops:95.52, batch-reuse:1
@ 201 train 7.6378 , allloss: 7.6395, dt: 1070.58ms, fracRes: 0.6169, norm(attn): 0.2217, norm(output): 1.1719, norm(x): 0.4452, norm(y): 1.0007, norm:0.7295, tok/sec: 122430.50, flops:95.35, batch-reuse:1
@ 202 train 7.6651 , allloss: 7.6668, dt: 1064.76ms, fracRes: 0.6198, norm(attn): 0.2178, norm(output): 1.1250, norm(x): 0.4343, norm(y): 1.0007, norm:0.5285, tok/sec: 123100.27, flops:95.87, batch-reuse:1
@ 203 train 7.6186 , allloss: 7.6203, dt: 1053.73ms, fracRes: 0.6218, norm(attn): 0.2129, norm(output): 1.1172, norm(x): 0.4276, norm(y): 1.0007, norm:0.8974, tok/sec: 124389.16, flops:96.87, batch-reuse:1
@ 204 train 7.6036 , allloss: 7.6054, dt: 1062.04ms, fracRes: 0.6223, norm(attn): 0.2188, norm(output): 1.1406, norm(x): 0.4283, norm(y): 1.0006, norm:0.5970, tok/sec: 123414.94, flops:96.12, batch-reuse:1
@ 205 train 7.5766 , allloss: 7.5784, dt: 1052.24ms, fracRes: 0.6233, norm(attn): 0.2197, norm(output): 1.1406, norm(x): 0.4258, norm(y): 1.0006, norm:0.6778, tok/sec: 124564.58, flops:97.01, batch-reuse:1
@ 206 train 7.6033 , allloss: 7.6053, dt: 1062.67ms, fracRes: 0.6266, norm(attn): 0.2148, norm(output): 1.1094, norm(x): 0.4179, norm(y): 1.0006, norm:0.6158, tok/sec: 123342.70, flops:96.06, batch-reuse:1
@ 207 train 7.4787 , allloss: 7.4831, dt: 1068.04ms, fracRes: 0.6260, norm(attn): 0.2168, norm(output): 1.1172, norm(x): 0.4183, norm(y): 1.0007, norm:0.5378, tok/sec: 122722.09, flops:95.58, batch-reuse:1
@ 208 train 7.5834 , allloss: 7.5857, dt: 1054.40ms, fracRes: 0.6286, norm(attn): 0.2188, norm(output): 1.1328, norm(x): 0.4174, norm(y): 1.0006, norm:0.6160, tok/sec: 124309.73, flops:96.81, batch-reuse:1
@ 209 train 7.6087 , allloss: 7.6108, dt: 1041.21ms, fracRes: 0.6303, norm(attn): 0.2158, norm(output): 1.1250, norm(x): 0.4159, norm(y): 1.0006, norm:0.4502, tok/sec: 125883.97, flops:98.04, batch-reuse:1
@ 210 train 7.5784 , allloss: 7.5815, dt: 1049.32ms, fracRes: 0.6306, norm(attn): 0.2129, norm(output): 1.0859, norm(x): 0.4118, norm(y): 1.0006, norm:0.8608, tok/sec: 124911.15, flops:97.28, batch-reuse:1
@ 211 train 7.5102 , allloss: 7.5146, dt: 1059.48ms, fracRes: 0.6293, norm(attn): 0.2188, norm(output): 1.1250, norm(x): 0.4144, norm(y): 1.0006, norm:0.5608, tok/sec: 123713.16, flops:96.35, batch-reuse:1
@ 212 train 7.5765 , allloss: 7.5816, dt: 1063.09ms, fracRes: 0.6301, norm(attn): 0.2188, norm(output): 1.1250, norm(x): 0.4126, norm(y): 1.0006, norm:0.4813, tok/sec: 123293.10, flops:96.02, batch-reuse:1
@ 213 train 7.4895 , allloss: 7.4917, dt: 1054.87ms, fracRes: 0.6291, norm(attn): 0.2178, norm(output): 1.1094, norm(x): 0.4170, norm(y): 1.0007, norm:0.5502, tok/sec: 124254.05, flops:96.77, batch-reuse:1
@ 214 train 7.5288 , allloss: 7.5307, dt: 1069.01ms, fracRes: 0.6290, norm(attn): 0.2188, norm(output): 1.1172, norm(x): 0.4219, norm(y): 1.0007, norm:0.3695, tok/sec: 122611.21, flops:95.49, batch-reuse:1
@ 215 train 7.4514 , allloss: 7.4532, dt: 1058.09ms, fracRes: 0.6277, norm(attn): 0.2207, norm(output): 1.1250, norm(x): 0.4260, norm(y): 1.0007, norm:0.6001, tok/sec: 123876.38, flops:96.48, batch-reuse:1
@ 216 train 7.4649 , allloss: 7.4668, dt: 1059.55ms, fracRes: 0.6289, norm(attn): 0.2188, norm(output): 1.1094, norm(x): 0.4213, norm(y): 1.0007, norm:0.7418, tok/sec: 123705.23, flops:96.34, batch-reuse:1
@ 217 train 7.5406 , allloss: 7.5425, dt: 1058.82ms, fracRes: 0.6286, norm(attn): 0.2207, norm(output): 1.1250, norm(x): 0.4223, norm(y): 1.0007, norm:0.5858, tok/sec: 123790.36, flops:96.41, batch-reuse:1
@ 218 train 7.5290 , allloss: 7.5308, dt: 1043.96ms, fracRes: 0.6286, norm(attn): 0.2197, norm(output): 1.1250, norm(x): 0.4233, norm(y): 1.0007, norm:0.3976, tok/sec: 125553.18, flops:97.78, batch-reuse:1
@ 219 train 7.6297 , allloss: 7.6315, dt: 1046.41ms, fracRes: 0.6298, norm(attn): 0.2178, norm(output): 1.1172, norm(x): 0.4211, norm(y): 1.0007, norm:0.7098, tok/sec: 125258.50, flops:97.55, batch-reuse:1
@ 220 train 7.5495 , allloss: 7.5512, dt: 1058.04ms, fracRes: 0.6274, norm(attn): 0.2217, norm(output): 1.1328, norm(x): 0.4285, norm(y): 1.0007, norm:0.5021, tok/sec: 123881.35, flops:96.48, batch-reuse:1
@ 221 train 7.5450 , allloss: 7.5467, dt: 1057.25ms, fracRes: 0.6287, norm(attn): 0.2227, norm(output): 1.1328, norm(x): 0.4252, norm(y): 1.0007, norm:0.6641, tok/sec: 123974.54, flops:96.55, batch-reuse:1
@ 222 train 7.5022 , allloss: 7.5039, dt: 1052.68ms, fracRes: 0.6280, norm(attn): 0.2207, norm(output): 1.1250, norm(x): 0.4214, norm(y): 1.0007, norm:0.4086, tok/sec: 124512.28, flops:96.97, batch-reuse:1
@ 223 train 7.5345 , allloss: 7.5362, dt: 1063.78ms, fracRes: 0.6290, norm(attn): 0.2227, norm(output): 1.1328, norm(x): 0.4189, norm(y): 1.0007, norm:0.3288, tok/sec: 123213.44, flops:95.96, batch-reuse:1
@ 224 train 7.4653 , allloss: 7.4669, dt: 1065.10ms, fracRes: 0.6286, norm(attn): 0.2285, norm(output): 1.1328, norm(x): 0.4217, norm(y): 1.0007, norm:0.4403, tok/sec: 123061.19, flops:95.84, batch-reuse:1
@ 225 train 7.4859 , allloss: 7.4875, dt: 1066.66ms, fracRes: 0.6305, norm(attn): 0.2217, norm(output): 1.1250, norm(x): 0.4200, norm(y): 1.0007, norm:0.5159, tok/sec: 122880.36, flops:95.70, batch-reuse:1
@ 226 train 7.5333 , allloss: 7.5350, dt: 1061.86ms, fracRes: 0.6326, norm(attn): 0.2305, norm(output): 1.1406, norm(x): 0.4203, norm(y): 1.0007, norm:0.3486, tok/sec: 123436.81, flops:96.13, batch-reuse:1
@ 227 train 7.5211 , allloss: 7.5229, dt: 1049.06ms, fracRes: 0.6330, norm(attn): 0.2266, norm(output): 1.1328, norm(x): 0.4195, norm(y): 1.0007, norm:0.3408, tok/sec: 124942.88, flops:97.31, batch-reuse:1
@ 228 train 7.4979 , allloss: 7.5002, dt: 1043.11ms, fracRes: 0.6338, norm(attn): 0.2227, norm(output): 1.1250, norm(x): 0.4154, norm(y): 1.0007, norm:0.7322, tok/sec: 125654.45, flops:97.86, batch-reuse:1
@ 229 train 7.5434 , allloss: 7.5452, dt: 1053.62ms, fracRes: 0.6339, norm(attn): 0.2344, norm(output): 1.1719, norm(x): 0.4184, norm(y): 1.0007, norm:1.1130, tok/sec: 124401.43, flops:96.88, batch-reuse:1
@ 230 train 7.5309 , allloss: 7.5327, dt: 1047.50ms, fracRes: 0.6345, norm(attn): 0.2227, norm(output): 1.1250, norm(x): 0.4144, norm(y): 1.0007, norm:0.8103, tok/sec: 125127.84, flops:97.45, batch-reuse:1
@ 231 train 7.4558 , allloss: 7.4575, dt: 1050.53ms, fracRes: 0.6331, norm(attn): 0.2314, norm(output): 1.1328, norm(x): 0.4186, norm(y): 1.0007, norm:0.3076, tok/sec: 124767.79, flops:97.17, batch-reuse:1
@ 232 train 7.4449 , allloss: 7.4466, dt: 1050.25ms, fracRes: 0.6329, norm(attn): 0.2334, norm(output): 1.1406, norm(x): 0.4193, norm(y): 1.0007, norm:0.6678, tok/sec: 124800.73, flops:97.20, batch-reuse:1
@ 233 train 7.5169 , allloss: 7.5193, dt: 1047.26ms, fracRes: 0.6358, norm(attn): 0.2227, norm(output): 1.1172, norm(x): 0.4119, norm(y): 1.0007, norm:1.0000, tok/sec: 125157.67, flops:97.47, batch-reuse:1
@ 234 train 7.3746 , allloss: 7.3763, dt: 1046.68ms, fracRes: 0.6332, norm(attn): 0.2344, norm(output): 1.1562, norm(x): 0.4197, norm(y): 1.0007, norm:1.0735, tok/sec: 125226.80, flops:97.53, batch-reuse:1
@ 235 train 7.4761 , allloss: 7.4778, dt: 1059.65ms, fracRes: 0.6359, norm(attn): 0.2246, norm(output): 1.1250, norm(x): 0.4133, norm(y): 1.0007, norm:0.5192, tok/sec: 123693.29, flops:96.33, batch-reuse:1
@ 236 train 7.3699 , allloss: 7.3715, dt: 1057.03ms, fracRes: 0.6339, norm(attn): 0.2236, norm(output): 1.1172, norm(x): 0.4167, norm(y): 1.0007, norm:0.6344, tok/sec: 124000.66, flops:96.57, batch-reuse:1
@ 237 train 7.4807 , allloss: 7.4823, dt: 1077.65ms, fracRes: 0.6358, norm(attn): 0.2334, norm(output): 1.1562, norm(x): 0.4164, norm(y): 1.0007, norm:1.1083, tok/sec: 121627.55, flops:94.72, batch-reuse:1
@ 238 train 7.4288 , allloss: 7.4305, dt: 1046.00ms, fracRes: 0.6357, norm(attn): 0.2227, norm(output): 1.1172, norm(x): 0.4130, norm(y): 1.0007, norm:0.4463, tok/sec: 125308.24, flops:97.59, batch-reuse:1
@ 239 train 7.4361 , allloss: 7.4379, dt: 1050.51ms, fracRes: 0.6364, norm(attn): 0.2207, norm(output): 1.1094, norm(x): 0.4105, norm(y): 1.0007, norm:0.6567, tok/sec: 124770.31, flops:97.17, batch-reuse:1
@ 240 train 7.5020 , allloss: 7.5037, dt: 1052.39ms, fracRes: 0.6380, norm(attn): 0.2295, norm(output): 1.1562, norm(x): 0.4119, norm(y): 1.0007, norm:0.8689, tok/sec: 124547.34, flops:97.00, batch-reuse:1
@ 241 train 7.4477 , allloss: 7.4493, dt: 1053.61ms, fracRes: 0.6368, norm(attn): 0.2217, norm(output): 1.1250, norm(x): 0.4121, norm(y): 1.0007, norm:0.3254, tok/sec: 124403.26, flops:96.89, batch-reuse:1
@ 242 train 7.4787 , allloss: 7.4805, dt: 1057.28ms, fracRes: 0.6380, norm(attn): 0.2207, norm(output): 1.1172, norm(x): 0.4080, norm(y): 1.0007, norm:0.7109, tok/sec: 123971.47, flops:96.55, batch-reuse:1
@ 243 train 7.3199 , allloss: 7.3214, dt: 1052.64ms, fracRes: 0.6355, norm(attn): 0.2295, norm(output): 1.1328, norm(x): 0.4138, norm(y): 1.0007, norm:0.9161, tok/sec: 124517.92, flops:96.98, batch-reuse:1
@ 244 train 7.4998 , allloss: 7.5015, dt: 1056.59ms, fracRes: 0.6402, norm(attn): 0.2217, norm(output): 1.1172, norm(x): 0.4021, norm(y): 1.0007, norm:0.5016, tok/sec: 124052.03, flops:96.61, batch-reuse:1
@ 245 train 7.3404 , allloss: 7.3422, dt: 1043.35ms, fracRes: 0.6393, norm(attn): 0.2207, norm(output): 1.1172, norm(x): 0.4047, norm(y): 1.0007, norm:0.3974, tok/sec: 125626.23, flops:97.84, batch-reuse:1
@ 246 train 7.5535 , allloss: 7.5553, dt: 1043.93ms, fracRes: 0.6437, norm(attn): 0.2227, norm(output): 1.1250, norm(x): 0.4015, norm(y): 1.0007, norm:0.6149, tok/sec: 125556.02, flops:97.78, batch-reuse:1
@ 247 train 7.4362 , allloss: 7.4380, dt: 1067.41ms, fracRes: 0.6420, norm(attn): 0.2197, norm(output): 1.1016, norm(x): 0.4028, norm(y): 1.0007, norm:0.4892, tok/sec: 122794.68, flops:95.63, batch-reuse:1
@ 248 train 7.3895 , allloss: 7.3915, dt: 1061.77ms, fracRes: 0.6415, norm(attn): 0.2197, norm(output): 1.1172, norm(x): 0.4026, norm(y): 1.0007, norm:0.3375, tok/sec: 123446.51, flops:96.14, batch-reuse:1
@ 249 train 7.3500 , allloss: 7.3521, dt: 1059.86ms, fracRes: 0.6410, norm(attn): 0.2227, norm(output): 1.1250, norm(x): 0.4033, norm(y): 1.0007, norm:0.7438, tok/sec: 123669.42, flops:96.31, batch-reuse:1
@ 250 train 7.4075 , allloss: 7.4105, dt: 1047.89ms, fracRes: 0.6424, norm(attn): 0.2197, norm(output): 1.0859, norm(x): 0.3984, norm(y): 1.0007, norm:0.9959, tok/sec: 125082.26, flops:97.41, batch-reuse:1
@ 251 train 7.3244 , allloss: 7.3262, dt: 1074.71ms, fracRes: 0.6413, norm(attn): 0.2295, norm(output): 1.1250, norm(x): 0.4081, norm(y): 1.0007, norm:1.1545, tok/sec: 121960.00, flops:94.98, batch-reuse:1
@ 252 train 7.4824 , allloss: 7.4844, dt: 1059.72ms, fracRes: 0.6453, norm(attn): 0.2207, norm(output): 1.1172, norm(x): 0.3984, norm(y): 1.0007, norm:0.6639, tok/sec: 123685.94, flops:96.33, batch-reuse:1
@ 253 train 7.3310 , allloss: 7.3334, dt: 1051.28ms, fracRes: 0.6421, norm(attn): 0.2207, norm(output): 1.1016, norm(x): 0.4004, norm(y): 1.0007, norm:0.3278, tok/sec: 124678.46, flops:97.10, batch-reuse:1
@ 254 train 7.2864 , allloss: 7.2892, dt: 1057.05ms, fracRes: 0.6429, norm(attn): 0.2227, norm(output): 1.1172, norm(x): 0.3992, norm(y): 1.0007, norm:0.6423, tok/sec: 123997.89, flops:96.57, batch-reuse:1
@ 255 train 7.3056 , allloss: 7.3078, dt: 1064.71ms, fracRes: 0.6432, norm(attn): 0.2197, norm(output): 1.0859, norm(x): 0.3985, norm(y): 1.0007, norm:0.5590, tok/sec: 123105.25, flops:95.87, batch-reuse:1
@ 256 train 7.3223 , allloss: 7.3241, dt: 1053.83ms, fracRes: 0.6442, norm(attn): 0.2197, norm(output): 1.1094, norm(x): 0.4030, norm(y): 1.0007, norm:0.4130, tok/sec: 124376.36, flops:96.86, batch-reuse:1
@ 257 train 7.3753 , allloss: 7.3773, dt: 1056.02ms, fracRes: 0.6461, norm(attn): 0.2188, norm(output): 1.0938, norm(x): 0.3997, norm(y): 1.0007, norm:0.3950, tok/sec: 124118.72, flops:96.66, batch-reuse:1
@ 258 train 7.3188 , allloss: 7.3214, dt: 1067.19ms, fracRes: 0.6456, norm(attn): 0.2197, norm(output): 1.0781, norm(x): 0.3962, norm(y): 1.0007, norm:0.5052, tok/sec: 122820.30, flops:95.65, batch-reuse:1
@ 259 train 7.3269 , allloss: 7.3302, dt: 1043.57ms, fracRes: 0.6465, norm(attn): 0.2197, norm(output): 1.1172, norm(x): 0.3948, norm(y): 1.0007, norm:0.8149, tok/sec: 125599.10, flops:97.82, batch-reuse:1
@ 260 train 7.4175 , allloss: 7.4202, dt: 1049.95ms, fracRes: 0.6488, norm(attn): 0.2188, norm(output): 1.0859, norm(x): 0.3901, norm(y): 1.0007, norm:0.7645, tok/sec: 124836.49, flops:97.22, batch-reuse:1
@ 261 train 7.3477 , allloss: 7.3496, dt: 1061.62ms, fracRes: 0.6477, norm(attn): 0.2207, norm(output): 1.1172, norm(x): 0.3971, norm(y): 1.0007, norm:0.6390, tok/sec: 123464.06, flops:96.15, batch-reuse:1
@ 262 train 7.3926 , allloss: 7.3947, dt: 1054.49ms, fracRes: 0.6478, norm(attn): 0.2188, norm(output): 1.0781, norm(x): 0.3944, norm(y): 1.0007, norm:0.5818, tok/sec: 124298.52, flops:96.80, batch-reuse:1
@ 263 train 7.3411 , allloss: 7.3433, dt: 1072.61ms, fracRes: 0.6465, norm(attn): 0.2207, norm(output): 1.1016, norm(x): 0.3931, norm(y): 1.0007, norm:0.5325, tok/sec: 122198.89, flops:95.17, batch-reuse:1
@ 264 train 7.3232 , allloss: 7.3254, dt: 1050.35ms, fracRes: 0.6462, norm(attn): 0.2197, norm(output): 1.0703, norm(x): 0.3907, norm(y): 1.0007, norm:0.7035, tok/sec: 124788.60, flops:97.19, batch-reuse:1
@ 265 train 7.3234 , allloss: 7.3251, dt: 1080.31ms, fracRes: 0.6463, norm(attn): 0.2227, norm(output): 1.1094, norm(x): 0.3969, norm(y): 1.0007, norm:1.1772, tok/sec: 121328.26, flops:94.49, batch-reuse:1
@ 266 train 7.3114 , allloss: 7.3133, dt: 1063.77ms, fracRes: 0.6470, norm(attn): 0.2188, norm(output): 1.0625, norm(x): 0.3952, norm(y): 1.0008, norm:1.1036, tok/sec: 123214.52, flops:95.96, batch-reuse:1
@ 267 train 7.2835 , allloss: 7.2853, dt: 1051.97ms, fracRes: 0.6475, norm(attn): 0.2197, norm(output): 1.0781, norm(x): 0.3951, norm(y): 1.0008, norm:0.4781, tok/sec: 124596.93, flops:97.04, batch-reuse:1
@ 268 train 7.3633 , allloss: 7.3655, dt: 1048.61ms, fracRes: 0.6499, norm(attn): 0.2197, norm(output): 1.0859, norm(x): 0.3883, norm(y): 1.0007, norm:0.5435, tok/sec: 124995.41, flops:97.35, batch-reuse:1
@ 269 train 7.3099 , allloss: 7.3126, dt: 1043.52ms, fracRes: 0.6491, norm(attn): 0.2188, norm(output): 1.0625, norm(x): 0.3865, norm(y): 1.0007, norm:1.3952, tok/sec: 125606.19, flops:97.82, batch-reuse:1
@ 270 train 7.3852 , allloss: 7.3874, dt: 1055.07ms, fracRes: 0.6517, norm(attn): 0.2197, norm(output): 1.1172, norm(x): 0.3893, norm(y): 1.0007, norm:1.0256, tok/sec: 124230.68, flops:96.75, batch-reuse:1
@ 271 train 7.2791 , allloss: 7.2814, dt: 1059.27ms, fracRes: 0.6504, norm(attn): 0.2188, norm(output): 1.0625, norm(x): 0.3913, norm(y): 1.0008, norm:0.5226, tok/sec: 123737.67, flops:96.37, batch-reuse:1
@ 272 train 7.2855 , allloss: 7.2874, dt: 1071.53ms, fracRes: 0.6507, norm(attn): 0.2188, norm(output): 1.0625, norm(x): 0.3894, norm(y): 1.0007, norm:0.5580, tok/sec: 122321.92, flops:95.26, batch-reuse:1
@ 273 train 7.4434 , allloss: 7.4456, dt: 1064.88ms, fracRes: 0.6546, norm(attn): 0.2188, norm(output): 1.1016, norm(x): 0.3832, norm(y): 1.0007, norm:0.9559, tok/sec: 123085.99, flops:95.86, batch-reuse:1
@ 274 train 7.3086 , allloss: 7.3108, dt: 1067.18ms, fracRes: 0.6511, norm(attn): 0.2188, norm(output): 1.0625, norm(x): 0.3831, norm(y): 1.0007, norm:1.1019, tok/sec: 122820.76, flops:95.65, batch-reuse:1
@ 275 train 7.2948 , allloss: 7.2970, dt: 1066.52ms, fracRes: 0.6520, norm(attn): 0.2197, norm(output): 1.0938, norm(x): 0.3888, norm(y): 1.0007, norm:0.9152, tok/sec: 122896.87, flops:95.71, batch-reuse:1
@ 276 train 7.2774 , allloss: 7.2795, dt: 1058.09ms, fracRes: 0.6517, norm(attn): 0.2188, norm(output): 1.0625, norm(x): 0.3886, norm(y): 1.0008, norm:0.6410, tok/sec: 123876.13, flops:96.48, batch-reuse:1
@ 277 train 7.1700 , allloss: 7.1720, dt: 1067.14ms, fracRes: 0.6500, norm(attn): 0.2188, norm(output): 1.0625, norm(x): 0.3908, norm(y): 1.0008, norm:0.3783, tok/sec: 122825.81, flops:95.66, batch-reuse:1
@ 278 train 7.2793 , allloss: 7.2824, dt: 1051.47ms, fracRes: 0.6525, norm(attn): 0.2188, norm(output): 1.0625, norm(x): 0.3854, norm(y): 1.0008, norm:0.4984, tok/sec: 124656.41, flops:97.08, batch-reuse:1
@ 279 train 7.2081 , allloss: 7.2108, dt: 1051.74ms, fracRes: 0.6515, norm(attn): 0.2178, norm(output): 1.0547, norm(x): 0.3874, norm(y): 1.0008, norm:0.3842, tok/sec: 124624.02, flops:97.06, batch-reuse:1
@ 280 train 7.3372 , allloss: 7.3396, dt: 1053.82ms, fracRes: 0.6560, norm(attn): 0.2188, norm(output): 1.0703, norm(x): 0.3839, norm(y): 1.0007, norm:0.4256, tok/sec: 124378.55, flops:96.87, batch-reuse:1
@ 281 train 7.2262 , allloss: 7.2287, dt: 1051.10ms, fracRes: 0.6527, norm(attn): 0.2197, norm(output): 1.0625, norm(x): 0.3891, norm(y): 1.0008, norm:0.5954, tok/sec: 124700.26, flops:97.12, batch-reuse:1
@ 282 train 7.2004 , allloss: 7.2037, dt: 1055.17ms, fracRes: 0.6508, norm(attn): 0.2188, norm(output): 1.0312, norm(x): 0.3860, norm(y): 1.0008, norm:1.6653, tok/sec: 124218.31, flops:96.74, batch-reuse:1
@ 283 train 7.1549 , allloss: 7.1569, dt: 1053.90ms, fracRes: 0.6498, norm(attn): 0.2227, norm(output): 1.0703, norm(x): 0.3914, norm(y): 1.0008, norm:1.2904, tok/sec: 124368.31, flops:96.86, batch-reuse:1
@ 284 train 7.2630 , allloss: 7.2650, dt: 1053.69ms, fracRes: 0.6512, norm(attn): 0.2197, norm(output): 1.0469, norm(x): 0.3862, norm(y): 1.0008, norm:0.9444, tok/sec: 124393.05, flops:96.88, batch-reuse:1
@ 285 train 7.2637 , allloss: 7.2655, dt: 1055.74ms, fracRes: 0.6519, norm(attn): 0.2227, norm(output): 1.0781, norm(x): 0.3922, norm(y): 1.0008, norm:1.2995, tok/sec: 124151.46, flops:96.69, batch-reuse:1
@ 286 train 7.2769 , allloss: 7.2791, dt: 1067.07ms, fracRes: 0.6519, norm(attn): 0.2197, norm(output): 1.0391, norm(x): 0.3872, norm(y): 1.0008, norm:1.0784, tok/sec: 122833.33, flops:95.66, batch-reuse:1
@ 287 train 7.2577 , allloss: 7.2600, dt: 1055.25ms, fracRes: 0.6531, norm(attn): 0.2227, norm(output): 1.0781, norm(x): 0.3878, norm(y): 1.0008, norm:0.9159, tok/sec: 124209.30, flops:96.73, batch-reuse:1
@ 288 train 7.2732 , allloss: 7.2761, dt: 1051.76ms, fracRes: 0.6532, norm(attn): 0.2197, norm(output): 1.0547, norm(x): 0.3824, norm(y): 1.0008, norm:1.0276, tok/sec: 124621.90, flops:97.06, batch-reuse:1
@ 289 train 7.2436 , allloss: 7.2459, dt: 1067.17ms, fracRes: 0.6532, norm(attn): 0.2236, norm(output): 1.0703, norm(x): 0.3889, norm(y): 1.0008, norm:1.4343, tok/sec: 122822.41, flops:95.65, batch-reuse:1
@ 290 train 7.2141 , allloss: 7.2166, dt: 1049.99ms, fracRes: 0.6528, norm(attn): 0.2217, norm(output): 1.0469, norm(x): 0.3863, norm(y): 1.0008, norm:0.8798, tok/sec: 124832.21, flops:97.22, batch-reuse:1
@ 291 train 7.1302 , allloss: 7.1324, dt: 1055.18ms, fracRes: 0.6519, norm(attn): 0.2227, norm(output): 1.0625, norm(x): 0.3892, norm(y): 1.0008, norm:0.6155, tok/sec: 124218.22, flops:96.74, batch-reuse:1
@ 292 train 7.1643 , allloss: 7.1667, dt: 1054.38ms, fracRes: 0.6536, norm(attn): 0.2227, norm(output): 1.0547, norm(x): 0.3844, norm(y): 1.0008, norm:0.7387, tok/sec: 124312.49, flops:96.82, batch-reuse:1
@ 293 train 7.2460 , allloss: 7.2481, dt: 1049.71ms, fracRes: 0.6555, norm(attn): 0.2227, norm(output): 1.0781, norm(x): 0.3878, norm(y): 1.0008, norm:1.4086, tok/sec: 124864.90, flops:97.25, batch-reuse:1
@ 294 train 7.1979 , allloss: 7.2004, dt: 1059.48ms, fracRes: 0.6538, norm(attn): 0.2197, norm(output): 1.0234, norm(x): 0.3873, norm(y): 1.0008, norm:1.0952, tok/sec: 123713.94, flops:96.35, batch-reuse:1
@ 295 train 7.2219 , allloss: 7.2243, dt: 1052.58ms, fracRes: 0.6555, norm(attn): 0.2217, norm(output): 1.0625, norm(x): 0.3867, norm(y): 1.0008, norm:0.7798, tok/sec: 124524.09, flops:96.98, batch-reuse:1
@ 296 train 7.1167 , allloss: 7.1197, dt: 1064.30ms, fracRes: 0.6527, norm(attn): 0.2197, norm(output): 1.0312, norm(x): 0.3872, norm(y): 1.0009, norm:1.1074, tok/sec: 123153.43, flops:95.91, batch-reuse:1
@ 297 train 7.0917 , allloss: 7.0939, dt: 1046.36ms, fracRes: 0.6522, norm(attn): 0.2227, norm(output): 1.0625, norm(x): 0.3948, norm(y): 1.0009, norm:1.9025, tok/sec: 125265.07, flops:97.56, batch-reuse:1
@ 298 train 7.2008 , allloss: 7.2032, dt: 1052.58ms, fracRes: 0.6555, norm(attn): 0.2197, norm(output): 1.0312, norm(x): 0.3872, norm(y): 1.0008, norm:0.6325, tok/sec: 124524.91, flops:96.98, batch-reuse:1
@ 299 train 7.1889 , allloss: 7.1918, dt: 1053.49ms, fracRes: 0.6552, norm(attn): 0.2188, norm(output): 1.0156, norm(x): 0.3838, norm(y): 1.0008, norm:1.2990, tok/sec: 124417.43, flops:96.90, batch-reuse:1
@ 300 train 7.1796 , allloss: 7.1819, dt: 1051.13ms, fracRes: 0.6560, norm(attn): 0.2227, norm(output): 1.0703, norm(x): 0.3886, norm(y): 1.0008, norm:2.0756, tok/sec: 124696.47, flops:97.11, batch-reuse:1
@ 301 train 7.3388 , allloss: 7.3415, dt: 1048.92ms, fracRes: 0.6594, norm(attn): 0.2207, norm(output): 1.0703, norm(x): 0.3790, norm(y): 1.0008, norm:0.9435, tok/sec: 124958.90, flops:97.32, batch-reuse:1
@ 302 train 7.2088 , allloss: 7.2116, dt: 1046.07ms, fracRes: 0.6545, norm(attn): 0.2188, norm(output): 0.9961, norm(x): 0.3798, norm(y): 1.0009, norm:4.0338, tok/sec: 125299.93, flops:97.58, batch-reuse:1
@ 303 train 7.2195 , allloss: 7.2222, dt: 1063.81ms, fracRes: 0.6550, norm(attn): 0.2188, norm(output): 0.9961, norm(x): 0.3813, norm(y): 1.0009, norm:3.3717, tok/sec: 123210.29, flops:95.96, batch-reuse:1
@ 304 train 7.1517 , allloss: 7.1537, dt: 1064.03ms, fracRes: 0.6562, norm(attn): 0.2246, norm(output): 1.0547, norm(x): 0.3885, norm(y): 1.0009, norm:1.0915, tok/sec: 123184.01, flops:95.94, batch-reuse:1
@ 305 train 7.0778 , allloss: 7.0798, dt: 1048.26ms, fracRes: 0.6552, norm(attn): 0.2227, norm(output): 1.0625, norm(x): 0.3904, norm(y): 1.0009, norm:1.2922, tok/sec: 125037.86, flops:97.38, batch-reuse:1
@ 306 train 7.1099 , allloss: 7.1124, dt: 1058.33ms, fracRes: 0.6554, norm(attn): 0.2188, norm(output): 1.0000, norm(x): 0.3832, norm(y): 1.0009, norm:2.6705, tok/sec: 123848.36, flops:96.45, batch-reuse:1
@ 307 train 7.2841 , allloss: 7.2868, dt: 1055.36ms, fracRes: 0.6623, norm(attn): 0.2188, norm(output): 1.0156, norm(x): 0.3739, norm(y): 1.0008, norm:1.9062, tok/sec: 124196.81, flops:96.72, batch-reuse:1
@ 308 train 7.1488 , allloss: 7.1508, dt: 1057.55ms, fracRes: 0.6586, norm(attn): 0.2227, norm(output): 1.0703, norm(x): 0.3909, norm(y): 1.0009, norm:2.2177, tok/sec: 123939.77, flops:96.52, batch-reuse:1
@ 309 train 7.1819 , allloss: 7.1839, dt: 1059.63ms, fracRes: 0.6609, norm(attn): 0.2197, norm(output): 1.0625, norm(x): 0.3891, norm(y): 1.0008, norm:1.9852, tok/sec: 123695.96, flops:96.33, batch-reuse:1
@ 310 train 7.2194 , allloss: 7.2221, dt: 1061.37ms, fracRes: 0.6618, norm(attn): 0.2178, norm(output): 1.0000, norm(x): 0.3800, norm(y): 1.0008, norm:1.2369, tok/sec: 123492.68, flops:96.18, batch-reuse:1
@ 311 train 7.2206 , allloss: 7.2237, dt: 1051.56ms, fracRes: 0.6626, norm(attn): 0.2178, norm(output): 1.0156, norm(x): 0.3765, norm(y): 1.0008, norm:1.2414, tok/sec: 124645.72, flops:97.07, batch-reuse:1
@ 312 train 7.3201 , allloss: 7.3271, dt: 1055.85ms, fracRes: 0.6673, norm(attn): 0.2207, norm(output): 1.0781, norm(x): 0.3736, norm(y): 1.0008, norm:1.6940, tok/sec: 124138.42, flops:96.68, batch-reuse:1
@ 313 train 7.1017 , allloss: 7.1037, dt: 1057.94ms, fracRes: 0.6610, norm(attn): 0.2217, norm(output): 1.0625, norm(x): 0.3857, norm(y): 1.0008, norm:1.5298, tok/sec: 123894.05, flops:96.49, batch-reuse:1
@ 314 train 7.1197 , allloss: 7.1220, dt: 1059.21ms, fracRes: 0.6605, norm(attn): 0.2178, norm(output): 0.9961, norm(x): 0.3799, norm(y): 1.0008, norm:2.0465, tok/sec: 123745.13, flops:96.37, batch-reuse:1
@ 315 train 7.1545 , allloss: 7.1569, dt: 1054.43ms, fracRes: 0.6628, norm(attn): 0.2148, norm(output): 0.9961, norm(x): 0.3774, norm(y): 1.0008, norm:1.6592, tok/sec: 124306.61, flops:96.81, batch-reuse:1
@ 316 train 7.1656 , allloss: 7.1682, dt: 1069.02ms, fracRes: 0.6642, norm(attn): 0.2168, norm(output): 1.0234, norm(x): 0.3830, norm(y): 1.0008, norm:1.1264, tok/sec: 122609.41, flops:95.49, batch-reuse:1
@ 317 train 7.1906 , allloss: 7.1950, dt: 1067.82ms, fracRes: 0.6665, norm(attn): 0.2158, norm(output): 1.0469, norm(x): 0.3780, norm(y): 1.0008, norm:1.0633, tok/sec: 122747.60, flops:95.60, batch-reuse:1
@ 318 train 7.0923 , allloss: 7.0964, dt: 1043.94ms, fracRes: 0.6631, norm(attn): 0.2129, norm(output): 1.0000, norm(x): 0.3772, norm(y): 1.0008, norm:2.5783, tok/sec: 125555.62, flops:97.78, batch-reuse:1
@ 319 train 7.0489 , allloss: 7.0513, dt: 1056.03ms, fracRes: 0.6607, norm(attn): 0.2148, norm(output): 0.9883, norm(x): 0.3834, norm(y): 1.0008, norm:1.8492, tok/sec: 124117.29, flops:96.66, batch-reuse:1
@ 320 train 7.1251 , allloss: 7.1271, dt: 1069.26ms, fracRes: 0.6630, norm(attn): 0.2178, norm(output): 1.0312, norm(x): 0.3885, norm(y): 1.0008, norm:1.8075, tok/sec: 122581.82, flops:95.47, batch-reuse:1
@ 321 train 7.1623 , allloss: 7.1645, dt: 1058.55ms, fracRes: 0.6651, norm(attn): 0.2158, norm(output): 1.0391, norm(x): 0.3847, norm(y): 1.0008, norm:1.3964, tok/sec: 123821.86, flops:96.43, batch-reuse:1
@ 322 train 7.0662 , allloss: 7.0689, dt: 1054.84ms, fracRes: 0.6630, norm(attn): 0.2080, norm(output): 1.0000, norm(x): 0.3786, norm(y): 1.0008, norm:1.7062, tok/sec: 124257.87, flops:96.77, batch-reuse:1
@ 323 train 7.1518 , allloss: 7.1545, dt: 1052.01ms, fracRes: 0.6645, norm(attn): 0.2070, norm(output): 0.9961, norm(x): 0.3775, norm(y): 1.0008, norm:1.1305, tok/sec: 124591.51, flops:97.03, batch-reuse:1
@ 324 train 7.0807 , allloss: 7.0829, dt: 1050.86ms, fracRes: 0.6633, norm(attn): 0.2148, norm(output): 1.0234, norm(x): 0.3887, norm(y): 1.0008, norm:1.5438, tok/sec: 124728.84, flops:97.14, batch-reuse:1
@ 325 train 7.1158 , allloss: 7.1180, dt: 1057.86ms, fracRes: 0.6651, norm(attn): 0.2148, norm(output): 1.0234, norm(x): 0.3850, norm(y): 1.0008, norm:1.2221, tok/sec: 123902.90, flops:96.50, batch-reuse:1
@ 326 train 7.1679 , allloss: 7.1707, dt: 1058.32ms, fracRes: 0.6663, norm(attn): 0.2139, norm(output): 0.9922, norm(x): 0.3750, norm(y): 1.0008, norm:2.0371, tok/sec: 123848.78, flops:96.45, batch-reuse:1
@ 327 train 7.2194 , allloss: 7.2222, dt: 1052.51ms, fracRes: 0.6682, norm(attn): 0.2158, norm(output): 1.0078, norm(x): 0.3698, norm(y): 1.0008, norm:1.4518, tok/sec: 124532.22, flops:96.99, batch-reuse:1
@ 328 train 7.1165 , allloss: 7.1192, dt: 1044.61ms, fracRes: 0.6653, norm(attn): 0.2188, norm(output): 1.0469, norm(x): 0.3826, norm(y): 1.0008, norm:1.6256, tok/sec: 125474.75, flops:97.72, batch-reuse:1
@ 329 train 7.1175 , allloss: 7.1205, dt: 1079.06ms, fracRes: 0.6661, norm(attn): 0.2168, norm(output): 1.0156, norm(x): 0.3836, norm(y): 1.0008, norm:1.1495, tok/sec: 121468.84, flops:94.60, batch-reuse:1
@ 330 train 7.1034 , allloss: 7.1069, dt: 1047.61ms, fracRes: 0.6633, norm(attn): 0.2061, norm(output): 0.9531, norm(x): 0.3843, norm(y): 1.0008, norm:2.0159, tok/sec: 125115.11, flops:97.44, batch-reuse:1
@ 331 train 7.0505 , allloss: 7.0536, dt: 1041.89ms, fracRes: 0.6627, norm(attn): 0.2061, norm(output): 0.9609, norm(x): 0.3856, norm(y): 1.0009, norm:1.7277, tok/sec: 125801.99, flops:97.98, batch-reuse:1
@ 332 train 7.0417 , allloss: 7.0446, dt: 1056.17ms, fracRes: 0.6658, norm(attn): 0.2148, norm(output): 1.0156, norm(x): 0.3840, norm(y): 1.0008, norm:1.1685, tok/sec: 124101.38, flops:96.65, batch-reuse:1
@ 333 train 7.0911 , allloss: 7.0939, dt: 1052.47ms, fracRes: 0.6663, norm(attn): 0.2119, norm(output): 1.0078, norm(x): 0.3837, norm(y): 1.0008, norm:0.9823, tok/sec: 124537.49, flops:96.99, batch-reuse:1
@ 334 train 7.0435 , allloss: 7.0800, dt: 1054.29ms, fracRes: 0.6625, norm(attn): 0.2051, norm(output): 0.9688, norm(x): 0.3876, norm(y): 1.0009, norm:1.6446, tok/sec: 124323.03, flops:96.82, batch-reuse:1
@ 335 train 7.0178 , allloss: 7.0200, dt: 1070.11ms, fracRes: 0.6618, norm(attn): 0.2041, norm(output): 0.9648, norm(x): 0.3915, norm(y): 1.0009, norm:1.2175, tok/sec: 122484.87, flops:95.39, batch-reuse:1
@ 336 train 7.0640 , allloss: 7.0907, dt: 1061.27ms, fracRes: 0.6637, norm(attn): 0.2100, norm(output): 1.0078, norm(x): 0.3949, norm(y): 1.0009, norm:1.4143, tok/sec: 123505.05, flops:96.19, batch-reuse:1
@ 337 train 7.0669 , allloss: 7.0696, dt: 1061.17ms, fracRes: 0.6655, norm(attn): 0.2109, norm(output): 1.0234, norm(x): 0.3865, norm(y): 1.0008, norm:1.2541, tok/sec: 123517.01, flops:96.20, batch-reuse:1
@ 338 train 7.0335 , allloss: 7.0364, dt: 1046.23ms, fracRes: 0.6631, norm(attn): 0.2061, norm(output): 0.9883, norm(x): 0.3835, norm(y): 1.0008, norm:2.5761, tok/sec: 125279.74, flops:97.57, batch-reuse:1
@ 339 train 7.1086 , allloss: 7.1119, dt: 1051.69ms, fracRes: 0.6638, norm(attn): 0.2041, norm(output): 0.9805, norm(x): 0.3872, norm(y): 1.0008, norm:1.2208, tok/sec: 124630.32, flops:97.06, batch-reuse:1
@ 340 train 7.1213 , allloss: 7.1241, dt: 1062.52ms, fracRes: 0.6658, norm(attn): 0.2070, norm(output): 1.0078, norm(x): 0.3926, norm(y): 1.0008, norm:1.3924, tok/sec: 123359.00, flops:96.07, batch-reuse:1
@ 341 train 7.0334 , allloss: 7.0365, dt: 1048.08ms, fracRes: 0.6641, norm(attn): 0.2090, norm(output): 1.0234, norm(x): 0.3935, norm(y): 1.0008, norm:1.2898, tok/sec: 125059.47, flops:97.40, batch-reuse:1
@ 342 train 6.9607 , allloss: 6.9672, dt: 1047.93ms, fracRes: 0.6607, norm(attn): 0.2090, norm(output): 0.9883, norm(x): 0.3902, norm(y): 1.0009, norm:2.2369, tok/sec: 125077.06, flops:97.41, batch-reuse:1
@ 343 train 7.0197 , allloss: 7.0240, dt: 1049.23ms, fracRes: 0.6618, norm(attn): 0.2070, norm(output): 0.9844, norm(x): 0.3902, norm(y): 1.0008, norm:1.4778, tok/sec: 124922.22, flops:97.29, batch-reuse:1
@ 344 train 6.9878 , allloss: 6.9943, dt: 1053.11ms, fracRes: 0.6601, norm(attn): 0.2080, norm(output): 1.0000, norm(x): 0.4056, norm(y): 1.0009, norm:1.3657, tok/sec: 124462.13, flops:96.93, batch-reuse:1
@ 345 train 6.9968 , allloss: 7.0010, dt: 1053.47ms, fracRes: 0.6627, norm(attn): 0.2061, norm(output): 0.9961, norm(x): 0.4015, norm(y): 1.0008, norm:1.2417, tok/sec: 124418.81, flops:96.90, batch-reuse:1
@ 346 train 7.0565 , allloss: 7.0595, dt: 1062.20ms, fracRes: 0.6644, norm(attn): 0.2061, norm(output): 0.9727, norm(x): 0.3886, norm(y): 1.0008, norm:1.0571, tok/sec: 123397.21, flops:96.10, batch-reuse:1
@ 347 train 7.0694 , allloss: 7.0729, dt: 1060.51ms, fracRes: 0.6671, norm(attn): 0.2148, norm(output): 1.0156, norm(x): 0.3842, norm(y): 1.0008, norm:1.1695, tok/sec: 123592.87, flops:96.25, batch-reuse:1
@ 348 train 7.0093 , allloss: 7.0122, dt: 1062.84ms, fracRes: 0.6650, norm(attn): 0.2178, norm(output): 1.0156, norm(x): 0.3960, norm(y): 1.0008, norm:1.3744, tok/sec: 123322.31, flops:96.04, batch-reuse:1
@ 349 train 7.0430 , allloss: 7.0456, dt: 1041.94ms, fracRes: 0.6631, norm(attn): 0.2129, norm(output): 0.9922, norm(x): 0.4022, norm(y): 1.0008, norm:1.0163, tok/sec: 125795.74, flops:97.97, batch-reuse:1
@ 350 train 7.0648 , allloss: 7.0678, dt: 1057.63ms, fracRes: 0.6645, norm(attn): 0.2109, norm(output): 0.9922, norm(x): 0.3951, norm(y): 1.0008, norm:0.6342, tok/sec: 123929.91, flops:96.52, batch-reuse:1
@ 351 train 7.0741 , allloss: 7.0775, dt: 1057.77ms, fracRes: 0.6676, norm(attn): 0.2148, norm(output): 1.0156, norm(x): 0.3876, norm(y): 1.0008, norm:1.2546, tok/sec: 123913.40, flops:96.50, batch-reuse:1
@ 352 train 7.0943 , allloss: 7.0977, dt: 1047.90ms, fracRes: 0.6661, norm(attn): 0.2129, norm(output): 1.0000, norm(x): 0.3902, norm(y): 1.0008, norm:0.6265, tok/sec: 125080.30, flops:97.41, batch-reuse:1
@ 353 train 7.0380 , allloss: 7.0412, dt: 1045.88ms, fracRes: 0.6621, norm(attn): 0.2070, norm(output): 0.9648, norm(x): 0.3988, norm(y): 1.0008, norm:1.2089, tok/sec: 125322.12, flops:97.60, batch-reuse:1
@ 354 train 6.9905 , allloss: 6.9937, dt: 1050.63ms, fracRes: 0.6608, norm(attn): 0.2129, norm(output): 0.9961, norm(x): 0.4074, norm(y): 1.0009, norm:0.9558, tok/sec: 124755.07, flops:97.16, batch-reuse:1
@ 355 train 6.9681 , allloss: 6.9717, dt: 1046.48ms, fracRes: 0.6620, norm(attn): 0.2129, norm(output): 0.9922, norm(x): 0.4007, norm(y): 1.0009, norm:0.4128, tok/sec: 125250.23, flops:97.55, batch-reuse:1
@ 356 train 7.0813 , allloss: 7.0855, dt: 1057.21ms, fracRes: 0.6667, norm(attn): 0.2090, norm(output): 0.9844, norm(x): 0.3871, norm(y): 1.0008, norm:1.2964, tok/sec: 123979.69, flops:96.56, batch-reuse:1
@ 357 train 7.0467 , allloss: 7.0509, dt: 1049.66ms, fracRes: 0.6658, norm(attn): 0.2119, norm(output): 1.0000, norm(x): 0.3942, norm(y): 1.0008, norm:0.8816, tok/sec: 124871.37, flops:97.25, batch-reuse:1
@ 358 train 6.9478 , allloss: 6.9515, dt: 1052.11ms, fracRes: 0.6604, norm(attn): 0.2061, norm(output): 0.9766, norm(x): 0.4050, norm(y): 1.0009, norm:0.5366, tok/sec: 124579.63, flops:97.02, batch-reuse:1
@ 359 train 7.1965 , allloss: 7.2011, dt: 1045.07ms, fracRes: 0.6732, norm(attn): 0.2061, norm(output): 0.9961, norm(x): 0.3805, norm(y): 1.0008, norm:0.8463, tok/sec: 125419.70, flops:97.68, batch-reuse:1
@ 360 train 7.0499 , allloss: 7.0557, dt: 1054.55ms, fracRes: 0.6661, norm(attn): 0.2168, norm(output): 1.0156, norm(x): 0.3943, norm(y): 1.0008, norm:1.2953, tok/sec: 124292.11, flops:96.80, batch-reuse:1
@ 361 train 7.0418 , allloss: 7.0468, dt: 1049.63ms, fracRes: 0.6641, norm(attn): 0.2148, norm(output): 0.9883, norm(x): 0.3923, norm(y): 1.0008, norm:1.1782, tok/sec: 124874.86, flops:97.25, batch-reuse:1
@ 362 train 6.9173 , allloss: 6.9208, dt: 1053.22ms, fracRes: 0.6588, norm(attn): 0.2070, norm(output): 0.9805, norm(x): 0.4083, norm(y): 1.0009, norm:0.5588, tok/sec: 124448.66, flops:96.92, batch-reuse:1
@ 363 train 6.9866 , allloss: 6.9898, dt: 1046.71ms, fracRes: 0.6633, norm(attn): 0.2041, norm(output): 0.9766, norm(x): 0.4040, norm(y): 1.0009, norm:1.0571, tok/sec: 125223.35, flops:97.52, batch-reuse:1
@ 364 train 6.9981 , allloss: 7.0013, dt: 1051.57ms, fracRes: 0.6610, norm(attn): 0.2070, norm(output): 1.0000, norm(x): 0.4049, norm(y): 1.0009, norm:1.0136, tok/sec: 124643.57, flops:97.07, batch-reuse:1
@ 365 train 7.0163 , allloss: 7.0202, dt: 1063.29ms, fracRes: 0.6621, norm(attn): 0.2119, norm(output): 0.9688, norm(x): 0.3940, norm(y): 1.0009, norm:2.3171, tok/sec: 123270.10, flops:96.00, batch-reuse:1
@ 366 train 7.0345 , allloss: 7.0388, dt: 1062.04ms, fracRes: 0.6634, norm(attn): 0.2158, norm(output): 0.9883, norm(x): 0.3960, norm(y): 1.0009, norm:1.0261, tok/sec: 123415.25, flops:96.12, batch-reuse:1
@ 367 train 6.9860 , allloss: 6.9892, dt: 1057.68ms, fracRes: 0.6619, norm(attn): 0.2148, norm(output): 1.0156, norm(x): 0.4106, norm(y): 1.0009, norm:4.3369, tok/sec: 123923.71, flops:96.51, batch-reuse:1
@ 368 train 7.0816 , allloss: 7.0849, dt: 1060.61ms, fracRes: 0.6648, norm(attn): 0.2070, norm(output): 1.0000, norm(x): 0.4078, norm(y): 1.0009, norm:2.3674, tok/sec: 123581.40, flops:96.25, batch-reuse:1
@ 369 train 7.0025 , allloss: 7.0058, dt: 1056.63ms, fracRes: 0.6620, norm(attn): 0.2031, norm(output): 0.9453, norm(x): 0.4049, norm(y): 1.0009, norm:1.6799, tok/sec: 124046.86, flops:96.61, batch-reuse:1
@ 370 train 7.0943 , allloss: 7.0973, dt: 1057.79ms, fracRes: 0.6633, norm(attn): 0.2041, norm(output): 0.9531, norm(x): 0.3973, norm(y): 1.0009, norm:1.9657, tok/sec: 123911.56, flops:96.50, batch-reuse:1
@ 371 train 7.0220 , allloss: 7.0252, dt: 1042.62ms, fracRes: 0.6651, norm(attn): 0.2129, norm(output): 1.0000, norm(x): 0.3980, norm(y): 1.0009, norm:0.9854, tok/sec: 125714.10, flops:97.91, batch-reuse:1
@ 372 train 7.1008 , allloss: 7.1040, dt: 1061.76ms, fracRes: 0.6657, norm(attn): 0.2129, norm(output): 1.0000, norm(x): 0.3982, norm(y): 1.0008, norm:1.2113, tok/sec: 123447.39, flops:96.14, batch-reuse:1
@ 373 train 7.0896 , allloss: 7.0928, dt: 1065.06ms, fracRes: 0.6681, norm(attn): 0.2041, norm(output): 0.9766, norm(x): 0.3906, norm(y): 1.0008, norm:1.1100, tok/sec: 123065.08, flops:95.84, batch-reuse:1
@ 374 train 7.0735 , allloss: 7.0780, dt: 1057.99ms, fracRes: 0.6678, norm(attn): 0.2031, norm(output): 0.9766, norm(x): 0.3945, norm(y): 1.0008, norm:0.6257, tok/sec: 123887.27, flops:96.48, batch-reuse:1
@ 375 train 7.1610 , allloss: 7.1675, dt: 1056.40ms, fracRes: 0.6717, norm(attn): 0.2031, norm(output): 0.9922, norm(x): 0.3892, norm(y): 1.0008, norm:1.1380, tok/sec: 124074.80, flops:96.63, batch-reuse:1
@ 376 train 7.1963 , allloss: 7.2021, dt: 1058.55ms, fracRes: 0.6744, norm(attn): 0.2031, norm(output): 1.0000, norm(x): 0.3821, norm(y): 1.0008, norm:0.7769, tok/sec: 123821.94, flops:96.43, batch-reuse:1
@ 377 train 7.0808 , allloss: 7.0867, dt: 1051.31ms, fracRes: 0.6677, norm(attn): 0.2041, norm(output): 0.9961, norm(x): 0.3935, norm(y): 1.0008, norm:0.5703, tok/sec: 124675.06, flops:97.10, batch-reuse:1
@ 378 train 7.0228 , allloss: 7.0286, dt: 1057.68ms, fracRes: 0.6671, norm(attn): 0.2041, norm(output): 1.0000, norm(x): 0.3956, norm(y): 1.0009, norm:0.7234, tok/sec: 123923.96, flops:96.51, batch-reuse:1
@ 379 train 7.1118 , allloss: 7.1165, dt: 1066.30ms, fracRes: 0.6704, norm(attn): 0.2021, norm(output): 0.9766, norm(x): 0.3890, norm(y): 1.0008, norm:0.8480, tok/sec: 122922.29, flops:95.73, batch-reuse:1
@ 380 train 7.1768 , allloss: 7.1811, dt: 1051.21ms, fracRes: 0.6745, norm(attn): 0.2021, norm(output): 1.0078, norm(x): 0.3859, norm(y): 1.0008, norm:0.9560, tok/sec: 124686.23, flops:97.11, batch-reuse:1
@ 381 train 7.1002 , allloss: 7.1042, dt: 1060.91ms, fracRes: 0.6715, norm(attn): 0.2031, norm(output): 0.9961, norm(x): 0.3859, norm(y): 1.0008, norm:0.8913, tok/sec: 123547.13, flops:96.22, batch-reuse:1
@ 382 train 7.0539 , allloss: 7.0579, dt: 1060.91ms, fracRes: 0.6685, norm(attn): 0.2041, norm(output): 1.0000, norm(x): 0.3960, norm(y): 1.0009, norm:0.8988, tok/sec: 123546.93, flops:96.22, batch-reuse:1
@ 383 train 7.0648 , allloss: 7.0680, dt: 1053.18ms, fracRes: 0.6659, norm(attn): 0.2031, norm(output): 0.9688, norm(x): 0.3988, norm(y): 1.0009, norm:1.4128, tok/sec: 124453.31, flops:96.92, batch-reuse:1
@ 384 train 7.0518 , allloss: 7.0548, dt: 1064.61ms, fracRes: 0.6686, norm(attn): 0.2031, norm(output): 0.9922, norm(x): 0.3986, norm(y): 1.0009, norm:0.9873, tok/sec: 123117.74, flops:95.88, batch-reuse:1
@ 385 train 7.0127 , allloss: 7.0153, dt: 1058.12ms, fracRes: 0.6659, norm(attn): 0.2021, norm(output): 0.9570, norm(x): 0.3984, norm(y): 1.0009, norm:1.1619, tok/sec: 123872.19, flops:96.47, batch-reuse:1
@ 386 train 7.0818 , allloss: 7.0846, dt: 1050.42ms, fracRes: 0.6678, norm(attn): 0.2021, norm(output): 0.9883, norm(x): 0.3984, norm(y): 1.0009, norm:0.8735, tok/sec: 124780.30, flops:97.18, batch-reuse:1
@ 387 train 7.0564 , allloss: 7.0590, dt: 1048.14ms, fracRes: 0.6665, norm(attn): 0.2021, norm(output): 0.9688, norm(x): 0.3991, norm(y): 1.0009, norm:0.8423, tok/sec: 125052.33, flops:97.39, batch-reuse:1
@ 388 train 6.9790 , allloss: 6.9815, dt: 1054.42ms, fracRes: 0.6651, norm(attn): 0.2041, norm(output): 0.9922, norm(x): 0.4034, norm(y): 1.0009, norm:1.0080, tok/sec: 124306.70, flops:96.81, batch-reuse:1
@ 389 train 7.0221 , allloss: 7.0247, dt: 1045.20ms, fracRes: 0.6652, norm(attn): 0.2021, norm(output): 0.9727, norm(x): 0.4012, norm(y): 1.0009, norm:0.7346, tok/sec: 125403.74, flops:97.66, batch-reuse:1
@ 390 train 7.0630 , allloss: 7.0658, dt: 1049.96ms, fracRes: 0.6687, norm(attn): 0.2012, norm(output): 0.9844, norm(x): 0.3983, norm(y): 1.0009, norm:0.6335, tok/sec: 124835.47, flops:97.22, batch-reuse:1
@ 391 train 7.0001 , allloss: 7.0031, dt: 1053.59ms, fracRes: 0.6671, norm(attn): 0.2021, norm(output): 0.9844, norm(x): 0.3979, norm(y): 1.0009, norm:1.1006, tok/sec: 124405.23, flops:96.89, batch-reuse:1
@ 392 train 7.0780 , allloss: 7.0812, dt: 1045.74ms, fracRes: 0.6684, norm(attn): 0.2021, norm(output): 0.9648, norm(x): 0.3912, norm(y): 1.0008, norm:1.2640, tok/sec: 125339.46, flops:97.61, batch-reuse:1
@ 393 train 7.0356 , allloss: 7.0383, dt: 1057.16ms, fracRes: 0.6665, norm(attn): 0.2021, norm(output): 0.9805, norm(x): 0.4052, norm(y): 1.0009, norm:1.4394, tok/sec: 123984.66, flops:96.56, batch-reuse:1
@ 394 train 7.0026 , allloss: 7.0053, dt: 1053.48ms, fracRes: 0.6655, norm(attn): 0.2012, norm(output): 0.9609, norm(x): 0.4014, norm(y): 1.0009, norm:0.7472, tok/sec: 124418.21, flops:96.90, batch-reuse:1
@ 395 train 7.1330 , allloss: 7.1367, dt: 1051.74ms, fracRes: 0.6770, norm(attn): 0.2031, norm(output): 1.0000, norm(x): 0.3767, norm(y): 1.0008, norm:0.9506, tok/sec: 124623.43, flops:97.06, batch-reuse:1
@ 396 train 6.8977 , allloss: 6.9003, dt: 1056.37ms, fracRes: 0.6659, norm(attn): 0.2021, norm(output): 0.9727, norm(x): 0.4021, norm(y): 1.0009, norm:0.9021, tok/sec: 124077.34, flops:96.63, batch-reuse:1
@ 397 train 7.0374 , allloss: 7.0402, dt: 1048.61ms, fracRes: 0.6679, norm(attn): 0.2012, norm(output): 0.9648, norm(x): 0.4035, norm(y): 1.0009, norm:1.9282, tok/sec: 124995.35, flops:97.35, batch-reuse:1
@ 398 train 7.0640 , allloss: 7.0668, dt: 1059.24ms, fracRes: 0.6674, norm(attn): 0.2021, norm(output): 0.9570, norm(x): 0.3982, norm(y): 1.0009, norm:1.8159, tok/sec: 123741.18, flops:96.37, batch-reuse:1
@ 399 train 7.0348 , allloss: 7.0377, dt: 1069.95ms, fracRes: 0.6675, norm(attn): 0.2031, norm(output): 0.9883, norm(x): 0.4019, norm(y): 1.0009, norm:1.2213, tok/sec: 122503.02, flops:95.41, batch-reuse:1
@ 400 train 7.0492 , allloss: 7.0525, dt: 1054.33ms, fracRes: 0.6692, norm(attn): 0.2031, norm(output): 0.9648, norm(x): 0.3942, norm(y): 1.0008, norm:1.1828, tok/sec: 124317.88, flops:96.82, batch-reuse:1
@ 401 train 7.0748 , allloss: 7.0779, dt: 1056.67ms, fracRes: 0.6727, norm(attn): 0.2041, norm(output): 1.0000, norm(x): 0.3931, norm(y): 1.0008, norm:0.8576, tok/sec: 124042.15, flops:96.60, batch-reuse:1
@ 402 train 7.0343 , allloss: 7.0371, dt: 1059.76ms, fracRes: 0.6677, norm(attn): 0.2031, norm(output): 0.9609, norm(x): 0.4003, norm(y): 1.0008, norm:1.0704, tok/sec: 123681.10, flops:96.32, batch-reuse:1
@ 403 train 7.0747 , allloss: 7.0774, dt: 1053.21ms, fracRes: 0.6699, norm(attn): 0.2041, norm(output): 1.0000, norm(x): 0.3997, norm(y): 1.0008, norm:1.2899, tok/sec: 124450.21, flops:96.92, batch-reuse:1
@ 404 train 6.9888 , allloss: 6.9911, dt: 1064.70ms, fracRes: 0.6668, norm(attn): 0.2041, norm(output): 0.9727, norm(x): 0.4032, norm(y): 1.0009, norm:0.6574, tok/sec: 123106.83, flops:95.88, batch-reuse:1
@ 405 train 6.9999 , allloss: 7.0023, dt: 1062.28ms, fracRes: 0.6655, norm(attn): 0.2031, norm(output): 0.9727, norm(x): 0.4082, norm(y): 1.0009, norm:0.6073, tok/sec: 123387.69, flops:96.09, batch-reuse:1
@ 406 train 7.0019 , allloss: 7.0043, dt: 1066.54ms, fracRes: 0.6665, norm(attn): 0.2041, norm(output): 0.9922, norm(x): 0.4082, norm(y): 1.0009, norm:1.2216, tok/sec: 122894.57, flops:95.71, batch-reuse:1
@ 407 train 7.0055 , allloss: 7.0079, dt: 1058.64ms, fracRes: 0.6653, norm(attn): 0.2031, norm(output): 0.9531, norm(x): 0.4046, norm(y): 1.0009, norm:1.4829, tok/sec: 123811.99, flops:96.43, batch-reuse:1
@ 408 train 7.0099 , allloss: 7.0122, dt: 1075.66ms, fracRes: 0.6668, norm(attn): 0.2041, norm(output): 0.9805, norm(x): 0.4081, norm(y): 1.0009, norm:0.4483, tok/sec: 121852.79, flops:94.90, batch-reuse:1
@ 409 train 6.9544 , allloss: 6.9566, dt: 1058.04ms, fracRes: 0.6645, norm(attn): 0.2041, norm(output): 0.9805, norm(x): 0.4148, norm(y): 1.0009, norm:0.9697, tok/sec: 123882.19, flops:96.48, batch-reuse:1
@ 410 train 7.0096 , allloss: 7.0119, dt: 1069.08ms, fracRes: 0.6642, norm(attn): 0.2031, norm(output): 0.9375, norm(x): 0.4052, norm(y): 1.0009, norm:2.8612, tok/sec: 122603.12, flops:95.48, batch-reuse:1
@ 411 train 6.9919 , allloss: 6.9942, dt: 1066.38ms, fracRes: 0.6652, norm(attn): 0.2031, norm(output): 0.9453, norm(x): 0.4092, norm(y): 1.0009, norm:1.2248, tok/sec: 122913.52, flops:95.73, batch-reuse:1
@ 412 train 7.0770 , allloss: 7.0796, dt: 1074.32ms, fracRes: 0.6690, norm(attn): 0.2041, norm(output): 1.0078, norm(x): 0.4135, norm(y): 1.0008, norm:5.6774, tok/sec: 122004.55, flops:95.02, batch-reuse:1
@ 413 train 6.8497 , allloss: 6.8520, dt: 1054.53ms, fracRes: 0.6592, norm(attn): 0.2031, norm(output): 0.9922, norm(x): 0.4306, norm(y): 1.0010, norm:4.7925, tok/sec: 124293.66, flops:96.80, batch-reuse:1
@ 414 train 7.0343 , allloss: 7.0382, dt: 1066.73ms, fracRes: 0.6696, norm(attn): 0.2021, norm(output): 0.9883, norm(x): 0.4030, norm(y): 1.0008, norm:2.3735, tok/sec: 122873.20, flops:95.69, batch-reuse:1
@ 415 train 6.9431 , allloss: 6.9461, dt: 1069.36ms, fracRes: 0.6634, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.4122, norm(y): 1.0009, norm:2.0322, tok/sec: 122570.81, flops:95.46, batch-reuse:1
@ 416 train 7.0706 , allloss: 7.0731, dt: 1067.11ms, fracRes: 0.6706, norm(attn): 0.1953, norm(output): 0.9375, norm(x): 0.4027, norm(y): 1.0008, norm:2.2344, tok/sec: 122829.49, flops:95.66, batch-reuse:1
@ 417 train 6.9638 , allloss: 6.9662, dt: 1059.20ms, fracRes: 0.6678, norm(attn): 0.1992, norm(output): 0.9609, norm(x): 0.4104, norm(y): 1.0008, norm:0.8221, tok/sec: 123746.50, flops:96.37, batch-reuse:1
@ 418 train 7.0764 , allloss: 7.0790, dt: 1051.14ms, fracRes: 0.6751, norm(attn): 0.2021, norm(output): 0.9961, norm(x): 0.3887, norm(y): 1.0008, norm:2.5204, tok/sec: 124694.58, flops:97.11, batch-reuse:1
@ 419 train 7.0017 , allloss: 7.0041, dt: 1063.08ms, fracRes: 0.6726, norm(attn): 0.2012, norm(output): 0.9766, norm(x): 0.3940, norm(y): 1.0008, norm:1.6397, tok/sec: 123294.02, flops:96.02, batch-reuse:1
@ 420 train 6.9582 , allloss: 6.9602, dt: 1058.45ms, fracRes: 0.6675, norm(attn): 0.1963, norm(output): 0.9414, norm(x): 0.4086, norm(y): 1.0008, norm:1.3744, tok/sec: 123833.44, flops:96.44, batch-reuse:1
@ 421 train 7.1344 , allloss: 7.1366, dt: 1054.63ms, fracRes: 0.6744, norm(attn): 0.1904, norm(output): 0.9570, norm(x): 0.4005, norm(y): 1.0008, norm:1.8071, tok/sec: 124282.87, flops:96.79, batch-reuse:1
@ 422 train 7.0112 , allloss: 7.0137, dt: 1055.72ms, fracRes: 0.6744, norm(attn): 0.1914, norm(output): 0.9609, norm(x): 0.3969, norm(y): 1.0008, norm:0.7600, tok/sec: 124154.04, flops:96.69, batch-reuse:1
@ 423 train 7.0584 , allloss: 7.0617, dt: 1056.11ms, fracRes: 0.6793, norm(attn): 0.1973, norm(output): 0.9727, norm(x): 0.3792, norm(y): 1.0007, norm:2.4188, tok/sec: 124108.80, flops:96.66, batch-reuse:1
@ 424 train 6.9824 , allloss: 6.9855, dt: 1060.93ms, fracRes: 0.6762, norm(attn): 0.2021, norm(output): 0.9883, norm(x): 0.3888, norm(y): 1.0007, norm:1.4621, tok/sec: 123544.05, flops:96.22, batch-reuse:1
@ 425 train 7.0533 , allloss: 7.0562, dt: 1056.31ms, fracRes: 0.6772, norm(attn): 0.1973, norm(output): 0.9727, norm(x): 0.3909, norm(y): 1.0007, norm:1.1539, tok/sec: 124085.21, flops:96.64, batch-reuse:1
@ 426 train 6.9124 , allloss: 6.9151, dt: 1055.05ms, fracRes: 0.6702, norm(attn): 0.1914, norm(output): 0.9453, norm(x): 0.4072, norm(y): 1.0008, norm:0.9825, tok/sec: 124232.93, flops:96.75, batch-reuse:1
@ 427 train 6.9951 , allloss: 6.9983, dt: 1056.96ms, fracRes: 0.6715, norm(attn): 0.1934, norm(output): 0.9531, norm(x): 0.3994, norm(y): 1.0008, norm:0.7364, tok/sec: 124008.63, flops:96.58, batch-reuse:1
@ 428 train 6.9490 , allloss: 6.9521, dt: 1071.82ms, fracRes: 0.6713, norm(attn): 0.1934, norm(output): 0.9453, norm(x): 0.3975, norm(y): 1.0008, norm:1.0732, tok/sec: 122289.54, flops:95.24, batch-reuse:1
@ 429 train 6.8872 , allloss: 6.8898, dt: 1047.91ms, fracRes: 0.6705, norm(attn): 0.1934, norm(output): 0.9609, norm(x): 0.4072, norm(y): 1.0008, norm:1.3910, tok/sec: 125079.19, flops:97.41, batch-reuse:1
@ 430 train 6.9733 , allloss: 6.9761, dt: 1066.61ms, fracRes: 0.6693, norm(attn): 0.1953, norm(output): 0.9453, norm(x): 0.4054, norm(y): 1.0008, norm:1.9351, tok/sec: 122886.87, flops:95.70, batch-reuse:1
@ 431 train 6.9493 , allloss: 6.9522, dt: 1052.21ms, fracRes: 0.6708, norm(attn): 0.1943, norm(output): 0.9609, norm(x): 0.4025, norm(y): 1.0008, norm:0.8214, tok/sec: 124568.79, flops:97.01, batch-reuse:1
@ 432 train 7.0493 , allloss: 7.0527, dt: 1065.15ms, fracRes: 0.6740, norm(attn): 0.1934, norm(output): 1.0000, norm(x): 0.4009, norm(y): 1.0008, norm:2.4666, tok/sec: 123054.88, flops:95.84, batch-reuse:1
@ 433 train 7.0331 , allloss: 7.0368, dt: 1069.93ms, fracRes: 0.6752, norm(attn): 0.1904, norm(output): 0.9844, norm(x): 0.3941, norm(y): 1.0007, norm:2.2468, tok/sec: 122505.45, flops:95.41, batch-reuse:1
@ 434 train 7.0354 , allloss: 7.0384, dt: 1085.32ms, fracRes: 0.6737, norm(attn): 0.1885, norm(output): 0.9531, norm(x): 0.3943, norm(y): 1.0008, norm:1.5656, tok/sec: 120768.23, flops:94.05, batch-reuse:1
@ 435 train 6.9590 , allloss: 6.9618, dt: 1058.07ms, fracRes: 0.6718, norm(attn): 0.1885, norm(output): 0.9648, norm(x): 0.4076, norm(y): 1.0008, norm:0.9765, tok/sec: 123878.67, flops:96.48, batch-reuse:1
@ 436 train 7.0813 , allloss: 7.0846, dt: 1055.19ms, fracRes: 0.6798, norm(attn): 0.1895, norm(output): 0.9922, norm(x): 0.3918, norm(y): 1.0007, norm:0.9962, tok/sec: 124216.82, flops:96.74, batch-reuse:1
@ 437 train 7.0084 , allloss: 7.0119, dt: 1077.93ms, fracRes: 0.6753, norm(attn): 0.1885, norm(output): 0.9531, norm(x): 0.3904, norm(y): 1.0007, norm:2.6053, tok/sec: 121596.11, flops:94.70, batch-reuse:1
@ 438 train 7.0964 , allloss: 7.1017, dt: 1058.15ms, fracRes: 0.6892, norm(attn): 0.1865, norm(output): 0.9805, norm(x): 0.3709, norm(y): 1.0006, norm:1.1116, tok/sec: 123869.01, flops:96.47, batch-reuse:1
@ 439 train 6.9086 , allloss: 6.9127, dt: 1054.46ms, fracRes: 0.6703, norm(attn): 0.1865, norm(output): 0.9453, norm(x): 0.4130, norm(y): 1.0008, norm:1.0885, tok/sec: 124302.76, flops:96.81, batch-reuse:1
@ 440 train 6.9040 , allloss: 6.9080, dt: 1051.07ms, fracRes: 0.6693, norm(attn): 0.1855, norm(output): 0.9336, norm(x): 0.4096, norm(y): 1.0008, norm:1.8869, tok/sec: 124703.88, flops:97.12, batch-reuse:1
@ 441 train 6.9335 , allloss: 6.9379, dt: 1061.51ms, fracRes: 0.6724, norm(attn): 0.1865, norm(output): 0.9453, norm(x): 0.4055, norm(y): 1.0008, norm:0.7800, tok/sec: 123477.17, flops:96.16, batch-reuse:1
@ 442 train 7.0287 , allloss: 7.0332, dt: 1047.61ms, fracRes: 0.6806, norm(attn): 0.1885, norm(output): 1.0078, norm(x): 0.3921, norm(y): 1.0007, norm:2.1774, tok/sec: 125115.86, flops:97.44, batch-reuse:1
@ 443 train 7.0484 , allloss: 7.0526, dt: 1060.29ms, fracRes: 0.6832, norm(attn): 0.1885, norm(output): 1.0078, norm(x): 0.3818, norm(y): 1.0007, norm:1.7441, tok/sec: 123619.55, flops:96.28, batch-reuse:1
@ 444 train 7.0785 , allloss: 7.0822, dt: 1065.90ms, fracRes: 0.6765, norm(attn): 0.1865, norm(output): 0.9414, norm(x): 0.3868, norm(y): 1.0007, norm:5.1070, tok/sec: 122968.46, flops:95.77, batch-reuse:1
@ 445 train 6.9461 , allloss: 6.9494, dt: 1052.99ms, fracRes: 0.6690, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.4076, norm(y): 1.0008, norm:3.2580, tok/sec: 124476.11, flops:96.94, batch-reuse:1
@ 446 train 6.9942 , allloss: 6.9977, dt: 1060.51ms, fracRes: 0.6741, norm(attn): 0.1807, norm(output): 0.9570, norm(x): 0.4139, norm(y): 1.0008, norm:2.2654, tok/sec: 123593.21, flops:96.25, batch-reuse:1
@ 447 train 7.0065 , allloss: 7.0099, dt: 1051.84ms, fracRes: 0.6721, norm(attn): 0.1836, norm(output): 0.9727, norm(x): 0.4216, norm(y): 1.0008, norm:2.8433, tok/sec: 124612.16, flops:97.05, batch-reuse:1
@ 448 train 6.9213 , allloss: 6.9250, dt: 1057.33ms, fracRes: 0.6740, norm(attn): 0.1836, norm(output): 0.9453, norm(x): 0.4072, norm(y): 1.0008, norm:0.5767, tok/sec: 123964.95, flops:96.54, batch-reuse:1
@ 449 train 6.9300 , allloss: 6.9334, dt: 1052.11ms, fracRes: 0.6736, norm(attn): 0.1865, norm(output): 0.9414, norm(x): 0.3975, norm(y): 1.0008, norm:4.0155, tok/sec: 124580.19, flops:97.02, batch-reuse:1
@ 450 train 6.9781 , allloss: 6.9814, dt: 1055.07ms, fracRes: 0.6795, norm(attn): 0.1875, norm(output): 0.9805, norm(x): 0.3916, norm(y): 1.0007, norm:1.3104, tok/sec: 124230.24, flops:96.75, batch-reuse:1
@ 451 train 6.9730 , allloss: 6.9758, dt: 1064.60ms, fracRes: 0.6778, norm(attn): 0.1865, norm(output): 1.0000, norm(x): 0.4078, norm(y): 1.0007, norm:2.1642, tok/sec: 123118.65, flops:95.89, batch-reuse:1
@ 452 train 6.9749 , allloss: 6.9778, dt: 1052.64ms, fracRes: 0.6811, norm(attn): 0.1797, norm(output): 0.9844, norm(x): 0.4054, norm(y): 1.0007, norm:1.3210, tok/sec: 124517.66, flops:96.97, batch-reuse:1
@ 453 train 6.9889 , allloss: 6.9917, dt: 1050.89ms, fracRes: 0.6758, norm(attn): 0.1816, norm(output): 0.9414, norm(x): 0.4060, norm(y): 1.0007, norm:1.7706, tok/sec: 124724.19, flops:97.14, batch-reuse:1
@ 454 train 6.9870 , allloss: 6.9899, dt: 1048.99ms, fracRes: 0.6766, norm(attn): 0.1797, norm(output): 0.9375, norm(x): 0.4003, norm(y): 1.0007, norm:2.9486, tok/sec: 124950.30, flops:97.31, batch-reuse:1
@ 455 train 7.0209 , allloss: 7.0237, dt: 1063.34ms, fracRes: 0.6836, norm(attn): 0.1787, norm(output): 0.9609, norm(x): 0.3966, norm(y): 1.0007, norm:1.0480, tok/sec: 123263.91, flops:96.00, batch-reuse:1
@ 456 train 6.9420 , allloss: 6.9447, dt: 1053.13ms, fracRes: 0.6791, norm(attn): 0.1816, norm(output): 0.9688, norm(x): 0.4068, norm(y): 1.0007, norm:0.5603, tok/sec: 124459.76, flops:96.93, batch-reuse:1
@ 457 train 7.0762 , allloss: 7.0795, dt: 1063.78ms, fracRes: 0.6839, norm(attn): 0.1836, norm(output): 0.9688, norm(x): 0.3939, norm(y): 1.0007, norm:1.3717, tok/sec: 123213.19, flops:95.96, batch-reuse:1
@ 458 train 7.0728 , allloss: 7.0762, dt: 1050.76ms, fracRes: 0.6839, norm(attn): 0.1836, norm(output): 0.9844, norm(x): 0.3963, norm(y): 1.0007, norm:0.7422, tok/sec: 124739.70, flops:97.15, batch-reuse:1
@ 459 train 6.9259 , allloss: 6.9287, dt: 1060.25ms, fracRes: 0.6776, norm(attn): 0.1816, norm(output): 0.9805, norm(x): 0.4092, norm(y): 1.0007, norm:0.8926, tok/sec: 123624.14, flops:96.28, batch-reuse:1
@ 460 train 6.8977 , allloss: 6.9006, dt: 1054.11ms, fracRes: 0.6760, norm(attn): 0.1797, norm(output): 0.9570, norm(x): 0.4125, norm(y): 1.0008, norm:0.8682, tok/sec: 124343.58, flops:96.84, batch-reuse:1
@ 461 train 6.9429 , allloss: 6.9456, dt: 1047.87ms, fracRes: 0.6762, norm(attn): 0.1768, norm(output): 0.9531, norm(x): 0.4137, norm(y): 1.0008, norm:0.7077, tok/sec: 125084.80, flops:97.42, batch-reuse:1
@ 462 train 6.9826 , allloss: 6.9856, dt: 1049.34ms, fracRes: 0.6813, norm(attn): 0.1797, norm(output): 0.9766, norm(x): 0.4043, norm(y): 1.0007, norm:0.5774, tok/sec: 124908.62, flops:97.28, batch-reuse:1
@ 463 train 6.9637 , allloss: 6.9670, dt: 1051.44ms, fracRes: 0.6805, norm(attn): 0.1855, norm(output): 0.9844, norm(x): 0.4027, norm(y): 1.0007, norm:0.6763, tok/sec: 124659.32, flops:97.09, batch-reuse:1
@ 464 train 6.9079 , allloss: 6.9107, dt: 1046.51ms, fracRes: 0.6737, norm(attn): 0.1836, norm(output): 0.9609, norm(x): 0.4172, norm(y): 1.0008, norm:0.8159, tok/sec: 125246.89, flops:97.54, batch-reuse:1
@ 465 train 6.8919 , allloss: 6.8947, dt: 1056.71ms, fracRes: 0.6735, norm(attn): 0.1836, norm(output): 0.9766, norm(x): 0.4256, norm(y): 1.0008, norm:1.0962, tok/sec: 124038.37, flops:96.60, batch-reuse:1
@ 466 train 6.9474 , allloss: 6.9504, dt: 1059.82ms, fracRes: 0.6747, norm(attn): 0.1797, norm(output): 0.9531, norm(x): 0.4147, norm(y): 1.0008, norm:0.9121, tok/sec: 123674.34, flops:96.32, batch-reuse:1
@ 467 train 6.8719 , allloss: 6.8751, dt: 1036.21ms, fracRes: 0.6722, norm(attn): 0.1816, norm(output): 0.9531, norm(x): 0.4213, norm(y): 1.0008, norm:0.8443, tok/sec: 126491.49, flops:98.51, batch-reuse:1
@ 468 train 6.8213 , allloss: 6.8244, dt: 1042.17ms, fracRes: 0.6699, norm(attn): 0.1816, norm(output): 0.9531, norm(x): 0.4303, norm(y): 1.0008, norm:0.6163, tok/sec: 125768.92, flops:97.95, batch-reuse:1
@ 469 train 6.8186 , allloss: 6.8214, dt: 1036.14ms, fracRes: 0.6709, norm(attn): 0.1836, norm(output): 0.9531, norm(x): 0.4270, norm(y): 1.0008, norm:0.8614, tok/sec: 126499.85, flops:98.52, batch-reuse:1
@ 470 train 6.9204 , allloss: 6.9234, dt: 1037.57ms, fracRes: 0.6749, norm(attn): 0.1846, norm(output): 0.9766, norm(x): 0.4185, norm(y): 1.0008, norm:1.3226, tok/sec: 126325.93, flops:98.38, batch-reuse:1
@ 471 train 6.7996 , allloss: 6.8022, dt: 1044.57ms, fracRes: 0.6669, norm(attn): 0.1865, norm(output): 0.9453, norm(x): 0.4278, norm(y): 1.0008, norm:1.6637, tok/sec: 125479.44, flops:97.72, batch-reuse:1
@ 472 train 6.9139 , allloss: 6.9166, dt: 1057.83ms, fracRes: 0.6724, norm(attn): 0.1846, norm(output): 0.9609, norm(x): 0.4235, norm(y): 1.0008, norm:1.0687, tok/sec: 123906.34, flops:96.50, batch-reuse:1
@ 473 train 6.8898 , allloss: 6.8925, dt: 1044.90ms, fracRes: 0.6716, norm(attn): 0.1846, norm(output): 0.9492, norm(x): 0.4230, norm(y): 1.0008, norm:0.6435, tok/sec: 125439.73, flops:97.69, batch-reuse:1
@ 474 train 6.8070 , allloss: 6.8095, dt: 1041.05ms, fracRes: 0.6700, norm(attn): 0.1846, norm(output): 0.9492, norm(x): 0.4266, norm(y): 1.0008, norm:0.4556, tok/sec: 125903.78, flops:98.05, batch-reuse:1
@ 475 train 6.8263 , allloss: 6.8289, dt: 1047.18ms, fracRes: 0.6690, norm(attn): 0.1836, norm(output): 0.9688, norm(x): 0.4311, norm(y): 1.0008, norm:0.5346, tok/sec: 125167.22, flops:97.48, batch-reuse:1
@ 476 train 6.8381 , allloss: 6.8407, dt: 1048.42ms, fracRes: 0.6700, norm(attn): 0.1826, norm(output): 0.9648, norm(x): 0.4279, norm(y): 1.0008, norm:0.7415, tok/sec: 125018.69, flops:97.37, batch-reuse:1
@ 477 train 6.9108 , allloss: 6.9138, dt: 1045.99ms, fracRes: 0.6751, norm(attn): 0.1816, norm(output): 0.9766, norm(x): 0.4202, norm(y): 1.0008, norm:0.7940, tok/sec: 125309.61, flops:97.59, batch-reuse:1
@ 478 train 6.8670 , allloss: 6.8696, dt: 1057.13ms, fracRes: 0.6724, norm(attn): 0.1816, norm(output): 0.9453, norm(x): 0.4226, norm(y): 1.0008, norm:0.9472, tok/sec: 123988.69, flops:96.56, batch-reuse:1
@ 479 train 7.0073 , allloss: 7.0103, dt: 1040.64ms, fracRes: 0.6783, norm(attn): 0.1797, norm(output): 0.9766, norm(x): 0.4192, norm(y): 1.0007, norm:2.6470, tok/sec: 125952.93, flops:98.09, batch-reuse:1
@ 480 train 6.8169 , allloss: 6.8200, dt: 1037.21ms, fracRes: 0.6694, norm(attn): 0.1826, norm(output): 0.9531, norm(x): 0.4273, norm(y): 1.0008, norm:1.3692, tok/sec: 126369.90, flops:98.42, batch-reuse:1
@ 481 train 6.9085 , allloss: 6.9114, dt: 1050.23ms, fracRes: 0.6720, norm(attn): 0.1807, norm(output): 0.9414, norm(x): 0.4216, norm(y): 1.0008, norm:1.6719, tok/sec: 124803.11, flops:97.20, batch-reuse:1
@ 482 train 6.8646 , allloss: 6.8675, dt: 1044.63ms, fracRes: 0.6724, norm(attn): 0.1816, norm(output): 0.9492, norm(x): 0.4276, norm(y): 1.0008, norm:0.9618, tok/sec: 125472.17, flops:97.72, batch-reuse:1
@ 483 train 6.9473 , allloss: 6.9500, dt: 1051.08ms, fracRes: 0.6750, norm(attn): 0.1855, norm(output): 0.9648, norm(x): 0.4160, norm(y): 1.0008, norm:1.2535, tok/sec: 124702.64, flops:97.12, batch-reuse:1
@ 484 train 6.8182 , allloss: 6.8206, dt: 1041.58ms, fracRes: 0.6698, norm(attn): 0.1846, norm(output): 0.9453, norm(x): 0.4243, norm(y): 1.0008, norm:1.0761, tok/sec: 125839.39, flops:98.00, batch-reuse:1
@ 485 train 6.7975 , allloss: 6.7997, dt: 1044.66ms, fracRes: 0.6691, norm(attn): 0.1846, norm(output): 0.9688, norm(x): 0.4385, norm(y): 1.0008, norm:2.3437, tok/sec: 125467.99, flops:97.71, batch-reuse:1
@ 486 train 6.9494 , allloss: 6.9517, dt: 1060.06ms, fracRes: 0.6750, norm(attn): 0.1797, norm(output): 0.9648, norm(x): 0.4230, norm(y): 1.0008, norm:0.9076, tok/sec: 123645.44, flops:96.30, batch-reuse:1
@ 487 train 6.9491 , allloss: 6.9521, dt: 1044.72ms, fracRes: 0.6804, norm(attn): 0.1826, norm(output): 0.9570, norm(x): 0.4009, norm(y): 1.0007, norm:2.7974, tok/sec: 125461.66, flops:97.71, batch-reuse:1
@ 488 train 6.8074 , allloss: 6.8105, dt: 1054.39ms, fracRes: 0.6762, norm(attn): 0.1836, norm(output): 0.9727, norm(x): 0.4132, norm(y): 1.0008, norm:1.1154, tok/sec: 124310.58, flops:96.81, batch-reuse:1
@ 489 train 6.8469 , allloss: 6.8499, dt: 1048.00ms, fracRes: 0.6733, norm(attn): 0.1826, norm(output): 0.9609, norm(x): 0.4258, norm(y): 1.0008, norm:0.8028, tok/sec: 125068.38, flops:97.40, batch-reuse:1
@ 490 train 6.8762 , allloss: 6.8793, dt: 1047.90ms, fracRes: 0.6751, norm(attn): 0.1816, norm(output): 0.9531, norm(x): 0.4218, norm(y): 1.0008, norm:1.2600, tok/sec: 125080.30, flops:97.41, batch-reuse:1
@ 491 train 6.9625 , allloss: 6.9658, dt: 1056.02ms, fracRes: 0.6784, norm(attn): 0.1807, norm(output): 0.9688, norm(x): 0.4175, norm(y): 1.0007, norm:1.5007, tok/sec: 124118.83, flops:96.66, batch-reuse:1
@ 492 train 6.9615 , allloss: 6.9649, dt: 1054.95ms, fracRes: 0.6759, norm(attn): 0.1826, norm(output): 0.9531, norm(x): 0.4159, norm(y): 1.0008, norm:1.1848, tok/sec: 124245.06, flops:96.76, batch-reuse:1
@ 493 train 6.8697 , allloss: 6.8727, dt: 1055.58ms, fracRes: 0.6762, norm(attn): 0.1816, norm(output): 0.9609, norm(x): 0.4181, norm(y): 1.0007, norm:0.4805, tok/sec: 124170.55, flops:96.70, batch-reuse:1
@ 494 train 6.8423 , allloss: 6.8450, dt: 1050.43ms, fracRes: 0.6740, norm(attn): 0.1816, norm(output): 0.9648, norm(x): 0.4274, norm(y): 1.0008, norm:1.0576, tok/sec: 124779.11, flops:97.18, batch-reuse:1
@ 495 train 6.7764 , allloss: 6.7790, dt: 1048.28ms, fracRes: 0.6712, norm(attn): 0.1826, norm(output): 0.9453, norm(x): 0.4231, norm(y): 1.0008, norm:1.8607, tok/sec: 125035.64, flops:97.38, batch-reuse:1
@ 496 train 6.8870 , allloss: 6.8898, dt: 1054.18ms, fracRes: 0.6773, norm(attn): 0.1816, norm(output): 0.9805, norm(x): 0.4158, norm(y): 1.0007, norm:1.3660, tok/sec: 124335.40, flops:96.83, batch-reuse:1
@ 497 train 6.7532 , allloss: 6.7555, dt: 1055.89ms, fracRes: 0.6710, norm(attn): 0.1816, norm(output): 0.9531, norm(x): 0.4279, norm(y): 1.0008, norm:0.5492, tok/sec: 124134.53, flops:96.68, batch-reuse:1
@ 498 train 6.9364 , allloss: 6.9390, dt: 1063.25ms, fracRes: 0.6768, norm(attn): 0.1797, norm(output): 0.9570, norm(x): 0.4194, norm(y): 1.0008, norm:1.2724, tok/sec: 123274.33, flops:96.01, batch-reuse:1
@ 499 train 6.9575 , allloss: 6.9605, dt: 1048.23ms, fracRes: 0.6799, norm(attn): 0.1797, norm(output): 0.9883, norm(x): 0.4186, norm(y): 1.0007, norm:1.9002, tok/sec: 125040.87, flops:97.38, batch-reuse:1
@ 500 train 6.8623 , allloss: 6.8652, dt: 1049.34ms, fracRes: 0.6760, norm(attn): 0.1816, norm(output): 0.9727, norm(x): 0.4173, norm(y): 1.0008, norm:0.7109, tok/sec: 124909.27, flops:97.28, batch-reuse:1
@ 501 train 6.8668 , allloss: 6.8694, dt: 1042.68ms, fracRes: 0.6755, norm(attn): 0.1816, norm(output): 0.9492, norm(x): 0.4177, norm(y): 1.0008, norm:1.7214, tok/sec: 125707.35, flops:97.90, batch-reuse:1
@ 502 train 6.9161 , allloss: 6.9187, dt: 1039.82ms, fracRes: 0.6792, norm(attn): 0.1758, norm(output): 0.9727, norm(x): 0.4214, norm(y): 1.0007, norm:1.6686, tok/sec: 126052.68, flops:98.17, batch-reuse:1
@ 503 train 6.8777 , allloss: 6.8805, dt: 1054.21ms, fracRes: 0.6765, norm(attn): 0.1758, norm(output): 0.9609, norm(x): 0.4221, norm(y): 1.0008, norm:0.6940, tok/sec: 124331.41, flops:96.83, batch-reuse:1
@ 504 train 6.9238 , allloss: 6.9283, dt: 1049.32ms, fracRes: 0.6805, norm(attn): 0.1826, norm(output): 0.9570, norm(x): 0.4067, norm(y): 1.0007, norm:1.6570, tok/sec: 124911.91, flops:97.28, batch-reuse:1
@ 505 train 6.8486 , allloss: 6.8517, dt: 1056.98ms, fracRes: 0.6794, norm(attn): 0.1826, norm(output): 0.9766, norm(x): 0.4143, norm(y): 1.0007, norm:1.0066, tok/sec: 124005.78, flops:96.58, batch-reuse:1
@ 506 train 6.8407 , allloss: 6.8434, dt: 1048.22ms, fracRes: 0.6751, norm(attn): 0.1807, norm(output): 0.9570, norm(x): 0.4233, norm(y): 1.0008, norm:0.5928, tok/sec: 125042.12, flops:97.38, batch-reuse:1
@ 507 train 6.8813 , allloss: 6.8840, dt: 1060.90ms, fracRes: 0.6773, norm(attn): 0.1748, norm(output): 0.9492, norm(x): 0.4191, norm(y): 1.0008, norm:0.5862, tok/sec: 123547.88, flops:96.22, batch-reuse:1
@ 508 train 6.8007 , allloss: 6.8052, dt: 1071.75ms, fracRes: 0.6752, norm(attn): 0.1777, norm(output): 0.9453, norm(x): 0.4189, norm(y): 1.0008, norm:0.6763, tok/sec: 122296.89, flops:95.25, batch-reuse:1
@ 509 train 6.8322 , allloss: 6.8347, dt: 1058.92ms, fracRes: 0.6748, norm(attn): 0.1797, norm(output): 0.9570, norm(x): 0.4220, norm(y): 1.0008, norm:0.4082, tok/sec: 123779.09, flops:96.40, batch-reuse:1
@ 510 train 6.7972 , allloss: 6.7997, dt: 1044.30ms, fracRes: 0.6740, norm(attn): 0.1816, norm(output): 0.9609, norm(x): 0.4242, norm(y): 1.0008, norm:0.6941, tok/sec: 125511.87, flops:97.75, batch-reuse:1
@ 511 train 6.8868 , allloss: 6.8895, dt: 1076.27ms, fracRes: 0.6780, norm(attn): 0.1836, norm(output): 0.9727, norm(x): 0.4186, norm(y): 1.0008, norm:1.1082, tok/sec: 121783.34, flops:94.85, batch-reuse:1
@ 512 train 6.8301 , allloss: 6.8326, dt: 1043.70ms, fracRes: 0.6732, norm(attn): 0.1836, norm(output): 0.9453, norm(x): 0.4219, norm(y): 1.0008, norm:1.9879, tok/sec: 125583.49, flops:97.80, batch-reuse:1
@ 513 train 6.8847 , allloss: 6.8870, dt: 1052.39ms, fracRes: 0.6711, norm(attn): 0.1846, norm(output): 0.9688, norm(x): 0.4329, norm(y): 1.0008, norm:3.6214, tok/sec: 124547.20, flops:97.00, batch-reuse:1
@ 514 train 6.8077 , allloss: 6.8100, dt: 1081.12ms, fracRes: 0.6739, norm(attn): 0.1816, norm(output): 0.9648, norm(x): 0.4318, norm(y): 1.0008, norm:2.0909, tok/sec: 121237.47, flops:94.42, batch-reuse:1
@ 515 train 6.8180 , allloss: 6.8203, dt: 1053.11ms, fracRes: 0.6744, norm(attn): 0.1807, norm(output): 0.9336, norm(x): 0.4187, norm(y): 1.0008, norm:3.5459, tok/sec: 124461.48, flops:96.93, batch-reuse:1
@ 516 train 6.8019 , allloss: 6.8047, dt: 1060.58ms, fracRes: 0.6729, norm(attn): 0.1826, norm(output): 0.9414, norm(x): 0.4240, norm(y): 1.0008, norm:2.0173, tok/sec: 123585.71, flops:96.25, batch-reuse:1
@ 517 train 6.8203 , allloss: 6.8258, dt: 1055.23ms, fracRes: 0.6760, norm(attn): 0.1816, norm(output): 0.9688, norm(x): 0.4276, norm(y): 1.0008, norm:4.2507, tok/sec: 124212.24, flops:96.74, batch-reuse:1
@ 518 train 6.9251 , allloss: 6.9937, dt: 1051.91ms, fracRes: 0.6829, norm(attn): 0.1816, norm(output): 0.9844, norm(x): 0.4102, norm(y): 1.0007, norm:3.2300, tok/sec: 124603.68, flops:97.04, batch-reuse:1
@ 519 train 6.8127 , allloss: 6.8186, dt: 1055.08ms, fracRes: 0.6778, norm(attn): 0.1816, norm(output): 0.9492, norm(x): 0.4111, norm(y): 1.0007, norm:1.2322, tok/sec: 124229.28, flops:96.75, batch-reuse:1
@ 520 train 6.8913 , allloss: 6.8942, dt: 1051.30ms, fracRes: 0.6810, norm(attn): 0.1768, norm(output): 0.9453, norm(x): 0.4090, norm(y): 1.0007, norm:2.4276, tok/sec: 124676.19, flops:97.10, batch-reuse:1
@ 521 train 6.9508 , allloss: 6.9534, dt: 1043.85ms, fracRes: 0.6831, norm(attn): 0.1738, norm(output): 0.9609, norm(x): 0.4174, norm(y): 1.0007, norm:1.7440, tok/sec: 125566.26, flops:97.79, batch-reuse:1
@ 522 train 6.7939 , allloss: 6.7965, dt: 1054.67ms, fracRes: 0.6790, norm(attn): 0.1729, norm(output): 0.9648, norm(x): 0.4233, norm(y): 1.0008, norm:1.5781, tok/sec: 124278.06, flops:96.79, batch-reuse:1
@ 523 train 6.9024 , allloss: 6.9057, dt: 1059.90ms, fracRes: 0.6827, norm(attn): 0.1738, norm(output): 0.9570, norm(x): 0.4061, norm(y): 1.0007, norm:3.0618, tok/sec: 123664.85, flops:96.31, batch-reuse:1
@ 524 train 6.8138 , allloss: 6.8171, dt: 1058.86ms, fracRes: 0.6787, norm(attn): 0.1758, norm(output): 0.9531, norm(x): 0.4164, norm(y): 1.0007, norm:0.8774, tok/sec: 123786.17, flops:96.41, batch-reuse:1
@ 525 train 6.8556 , allloss: 6.8587, dt: 1057.28ms, fracRes: 0.6808, norm(attn): 0.1738, norm(output): 0.9844, norm(x): 0.4233, norm(y): 1.0007, norm:2.0923, tok/sec: 123970.71, flops:96.55, batch-reuse:1
@ 526 train 6.8427 , allloss: 6.8457, dt: 1058.84ms, fracRes: 0.6793, norm(attn): 0.1758, norm(output): 0.9727, norm(x): 0.4235, norm(y): 1.0007, norm:1.0437, tok/sec: 123788.29, flops:96.41, batch-reuse:1
@ 527 train 6.9001 , allloss: 6.9030, dt: 1071.95ms, fracRes: 0.6798, norm(attn): 0.1758, norm(output): 0.9453, norm(x): 0.4088, norm(y): 1.0007, norm:3.8320, tok/sec: 122274.01, flops:95.23, batch-reuse:1
@ 528 train 6.8699 , allloss: 6.8725, dt: 1062.74ms, fracRes: 0.6796, norm(attn): 0.1748, norm(output): 0.9453, norm(x): 0.4113, norm(y): 1.0007, norm:3.7844, tok/sec: 123334.40, flops:96.05, batch-reuse:1
@ 529 train 6.7781 , allloss: 6.7806, dt: 1049.15ms, fracRes: 0.6762, norm(attn): 0.1729, norm(output): 0.9648, norm(x): 0.4309, norm(y): 1.0008, norm:1.4134, tok/sec: 124931.39, flops:97.30, batch-reuse:1
@ 530 train 6.9797 , allloss: 6.9826, dt: 1047.57ms, fracRes: 0.6799, norm(attn): 0.1719, norm(output): 0.9648, norm(x): 0.4301, norm(y): 1.0008, norm:5.3248, tok/sec: 125119.84, flops:97.44, batch-reuse:1
@ 531 train 6.9229 , allloss: 6.9260, dt: 1049.77ms, fracRes: 0.6828, norm(attn): 0.1709, norm(output): 0.9648, norm(x): 0.4219, norm(y): 1.0007, norm:1.6623, tok/sec: 124858.01, flops:97.24, batch-reuse:1
@ 532 train 6.7412 , allloss: 6.7439, dt: 1051.61ms, fracRes: 0.6750, norm(attn): 0.1719, norm(output): 0.9492, norm(x): 0.4269, norm(y): 1.0008, norm:1.1908, tok/sec: 124639.31, flops:97.07, batch-reuse:1
@ 533 train 6.7997 , allloss: 6.8028, dt: 1049.50ms, fracRes: 0.6817, norm(attn): 0.1719, norm(output): 0.9844, norm(x): 0.4190, norm(y): 1.0007, norm:1.4501, tok/sec: 124889.35, flops:97.26, batch-reuse:1
@ 534 train 6.7171 , allloss: 6.7202, dt: 1046.22ms, fracRes: 0.6774, norm(attn): 0.1719, norm(output): 0.9609, norm(x): 0.4289, norm(y): 1.0008, norm:0.7627, tok/sec: 125281.37, flops:97.57, batch-reuse:1
@ 535 train 6.8038 , allloss: 6.8066, dt: 1048.38ms, fracRes: 0.6813, norm(attn): 0.1719, norm(output): 0.9844, norm(x): 0.4271, norm(y): 1.0007, norm:1.1141, tok/sec: 125023.72, flops:97.37, batch-reuse:1
@ 536 train 6.7840 , allloss: 6.7869, dt: 1051.80ms, fracRes: 0.6797, norm(attn): 0.1719, norm(output): 0.9688, norm(x): 0.4220, norm(y): 1.0007, norm:1.1406, tok/sec: 124616.56, flops:97.05, batch-reuse:1
@ 537 train 6.8051 , allloss: 6.8080, dt: 1058.35ms, fracRes: 0.6811, norm(attn): 0.1719, norm(output): 0.9922, norm(x): 0.4225, norm(y): 1.0007, norm:1.8943, tok/sec: 123845.74, flops:96.45, batch-reuse:1
@ 538 train 6.7047 , allloss: 6.7071, dt: 1063.58ms, fracRes: 0.6749, norm(attn): 0.1719, norm(output): 0.9570, norm(x): 0.4340, norm(y): 1.0008, norm:1.4832, tok/sec: 123237.16, flops:95.98, batch-reuse:1
@ 539 train 6.7983 , allloss: 6.8012, dt: 1055.81ms, fracRes: 0.6807, norm(attn): 0.1689, norm(output): 0.9570, norm(x): 0.4246, norm(y): 1.0008, norm:1.4994, tok/sec: 124143.41, flops:96.68, batch-reuse:1
@ 540 train 6.8525 , allloss: 6.8555, dt: 1056.07ms, fracRes: 0.6829, norm(attn): 0.1699, norm(output): 0.9844, norm(x): 0.4267, norm(y): 1.0007, norm:2.1238, tok/sec: 124112.61, flops:96.66, batch-reuse:1
@ 541 train 6.7478 , allloss: 6.7503, dt: 1046.30ms, fracRes: 0.6783, norm(attn): 0.1719, norm(output): 0.9688, norm(x): 0.4297, norm(y): 1.0008, norm:0.7316, tok/sec: 125272.46, flops:97.56, batch-reuse:1
@ 542 train 6.8568 , allloss: 6.8601, dt: 1054.81ms, fracRes: 0.6850, norm(attn): 0.1719, norm(output): 0.9609, norm(x): 0.4091, norm(y): 1.0007, norm:2.8948, tok/sec: 124261.80, flops:96.78, batch-reuse:1
@ 543 train 6.8971 , allloss: 6.9009, dt: 1048.22ms, fracRes: 0.6904, norm(attn): 0.1729, norm(output): 1.0000, norm(x): 0.4032, norm(y): 1.0006, norm:1.0103, tok/sec: 125042.21, flops:97.38, batch-reuse:1
@ 544 train 6.7954 , allloss: 6.7981, dt: 1049.06ms, fracRes: 0.6805, norm(attn): 0.1719, norm(output): 0.9766, norm(x): 0.4289, norm(y): 1.0008, norm:1.0262, tok/sec: 124942.12, flops:97.31, batch-reuse:1
@ 545 train 6.7853 , allloss: 6.7885, dt: 1048.52ms, fracRes: 0.6825, norm(attn): 0.1729, norm(output): 0.9883, norm(x): 0.4236, norm(y): 1.0007, norm:0.6166, tok/sec: 125006.21, flops:97.36, batch-reuse:1
@ 546 train 6.7411 , allloss: 6.7437, dt: 1056.91ms, fracRes: 0.6815, norm(attn): 0.1729, norm(output): 0.9883, norm(x): 0.4229, norm(y): 1.0008, norm:0.8212, tok/sec: 124014.45, flops:96.58, batch-reuse:1
@ 547 train 6.8894 , allloss: 6.8928, dt: 1051.84ms, fracRes: 0.6901, norm(attn): 0.1729, norm(output): 1.0000, norm(x): 0.4052, norm(y): 1.0007, norm:1.3479, tok/sec: 124612.38, flops:97.05, batch-reuse:1
@ 548 train 6.9107 , allloss: 6.9136, dt: 1041.82ms, fracRes: 0.6889, norm(attn): 0.1719, norm(output): 1.0000, norm(x): 0.4185, norm(y): 1.0007, norm:2.9398, tok/sec: 125810.28, flops:97.98, batch-reuse:1
@ 549 train 6.8415 , allloss: 6.8444, dt: 1056.00ms, fracRes: 0.6861, norm(attn): 0.1709, norm(output): 0.9844, norm(x): 0.4206, norm(y): 1.0007, norm:1.0246, tok/sec: 124121.13, flops:96.67, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9141,     0.0879,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0089,     0.0354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8711,     0.0317,     0.0476,     0.0476,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0053,     0.0170,     0.0094,     0.0065,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0039,     0.0100,     0.0162,     0.0018,     0.0039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0090,     0.0064,     0.0106,     0.0023,     0.0050,     0.0073,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8477,     0.0386,     0.0151,     0.0259,     0.0334,     0.0110,     0.0162,     0.0117,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0014,     0.0071,     0.0074,     0.0022,     0.0030,     0.0019,     0.0081,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9531,     0.0020,     0.0063,     0.0082,     0.0041,     0.0045,     0.0057,     0.0067,     0.0051,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0004,     0.0032,     0.0025,     0.0001,     0.0001,     0.0004,     0.0269,     0.0002,     0.0009,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0069,     0.0093,     0.0092,     0.0060,     0.0080,     0.0069,     0.0117,     0.0053,     0.0036,     0.0058,     0.0101,     0.0000,     0.0000,     0.0000],
        [    0.8008,     0.0253,     0.0112,     0.0051,     0.0464,     0.0247,     0.0103,     0.0027,     0.0123,     0.0119,     0.0417,     0.0056,     0.0026,     0.0000,     0.0000],
        [    0.9648,     0.0014,     0.0027,     0.0023,     0.0015,     0.0008,     0.0010,     0.0061,     0.0021,     0.0024,     0.0005,     0.0054,     0.0065,     0.0025,     0.0000],
        [    0.9531,     0.0019,     0.0053,     0.0043,     0.0012,     0.0018,     0.0025,     0.0077,     0.0017,     0.0021,     0.0007,     0.0062,     0.0082,     0.0012,     0.0022]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,     -0.9570,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,     -2.4688,     -1.0938,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,     -0.5469,     -0.1436,     -0.1436,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,     -1.9844,     -0.8203,     -1.4141,     -1.7812,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,     -1.9375,     -0.9922,     -0.5078,     -2.7188,     -1.9297,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,     -0.7734,     -1.1172,     -0.6133,     -2.1250,     -1.3594,     -0.9922,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,      1.0703,      0.1309,      0.6680,      0.9258,     -0.1865,      0.2002,     -0.1309,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,     -2.1250,     -0.5078,     -0.4707,     -1.6797,     -1.3672,     -1.8203,     -0.3750,     -1.0703,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,     -1.5859,     -0.4277,     -0.1660,     -0.8633,     -0.7578,     -0.5312,     -0.3672,     -0.6406,     -1.0312,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,     -3.1250,     -0.9453,     -1.1875,     -4.4375,     -4.3438,     -2.9375,      1.1953,     -3.5156,     -2.2188,     -4.8438,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,      0.0757,      0.3809,      0.3711,     -0.0698,      0.2266,      0.0728,      0.6055,     -0.1846,     -0.5859,     -0.0874,      0.4551,        -inf,        -inf,        -inf],
          [     5.1299,      1.6719,      0.8555,      0.0649,      2.2812,      1.6484,      0.7734,     -0.5820,      0.9492,      0.9180,      2.1719,      0.1719,     -0.5898,        -inf,        -inf],
          [     5.2781,     -1.2422,     -0.6055,     -0.7539,     -1.1562,     -1.7969,     -1.5781,      0.2236,     -0.8477,     -0.7305,     -2.3750,      0.0903,      0.2832,     -0.6641,        -inf],
          [     5.4161,     -0.8008,      0.2109,      0.0007,     -1.2969,     -0.8750,     -0.5195,      0.5820,     -0.9492,     -0.7070,     -1.7422,      0.3770,      0.6562,     -1.2578,     -0.6758]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8525],
        [0.8799],
        [0.8896],
        [0.9515],
        [0.9382],
        [0.9274],
        [0.8607],
        [0.9548],
        [0.9473],
        [0.9678],
        [0.9141],
        [0.8428],
        [0.9616],
        [0.9551]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863, -13.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972, -18.0000, -22.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726,  -9.5000, -11.6875,  -6.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -9.0625, -11.3750,  -5.5000,  -9.2500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835, -11.1250, -13.5625,  -7.1250, -10.8750, -10.0625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,  -8.5625, -10.4375,  -5.6250,  -7.9688,  -7.7812,  -4.4062,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -16.6250, -20.5000, -10.6875, -15.9375, -15.9375,  -9.0000, -19.6250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944, -10.3750, -12.7500,  -6.5938, -10.3125,  -9.3750,  -5.4688, -11.8125, -10.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -8.5625, -10.3125,  -4.9688,  -8.0000,  -8.1875,  -4.5000,  -9.8125,  -8.1250,  -5.0312,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958, -11.3750, -14.4375,  -7.4688, -11.1250, -10.9375,  -6.2812, -13.5000, -11.5625,  -7.2500, -10.8750,     -inf,     -inf,     -inf,     -inf],
          [  4.9698, -10.5625, -13.3750,  -6.7500, -10.6875, -10.5625,  -5.7812, -12.6875, -10.5625,  -6.4688, -10.5000,  -6.5312,     -inf,     -inf,     -inf],
          [  5.1299, -16.6250, -20.6250, -10.3750, -16.3750, -16.0000,  -9.0625, -19.5000, -16.3750, -10.0625, -16.3750,  -9.8125, -19.8750,     -inf,     -inf],
          [  5.2781, -11.2500, -14.0625,  -6.7812, -11.1250, -10.5625,  -5.8438, -13.0000, -10.8125,  -6.8125, -10.9375,  -6.8125, -13.3750, -10.0625,     -inf],
          [  5.4161,  -7.4375,  -8.9375,  -4.5625,  -7.0938,  -7.3125,  -4.1562,  -8.6875,  -7.1562,  -4.3438,  -6.9688,  -4.5938,  -8.6250,  -6.2812,  -3.3594]]]], device='cuda:0')
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863, -13.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972, -23.6250, -33.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -13.2500, -19.0000,  -9.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189, -14.6875, -21.1250, -11.5000, -15.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835, -16.0000, -23.7500, -12.3750, -16.8750, -16.6250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918, -12.2500, -17.3750,  -8.6875, -11.6875, -12.8125,  -8.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -23.2500, -33.2500, -16.6250, -23.7500, -23.8750, -16.2500, -35.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944, -15.3125, -22.7500, -11.8750, -16.2500, -16.1250, -11.0000, -24.6250, -16.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052, -15.7500, -22.3750, -11.0625, -16.3750, -16.6250, -10.7500, -23.3750, -16.0000, -11.6875,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958, -17.1250, -25.1250, -12.5000, -18.0000, -18.1250, -11.9375, -26.7500, -18.1250, -12.6250, -19.8750,     -inf,     -inf,     -inf,     -inf],
          [  4.9698, -18.1250, -26.1250, -12.6875, -18.7500, -19.1250, -12.6875, -27.0000, -18.1250, -13.1875, -20.7500, -15.3125,     -inf,     -inf,     -inf],
          [  5.1299, -22.7500, -32.7500, -16.3750, -23.5000, -23.6250, -15.6875, -34.5000, -23.2500, -16.7500, -25.7500, -19.5000, -34.5000,     -inf,     -inf],
          [  5.2781, -16.2500, -23.8750, -11.8125, -17.3750, -17.0000, -11.4375, -25.6250, -17.2500, -11.8750, -18.8750, -14.3125, -25.5000, -17.3750,     -inf],
          [  5.4161, -13.1875, -19.2500,  -9.3125, -13.4375, -14.3125,  -9.5625, -20.0000, -14.0000, -10.0625, -15.3750, -11.7500, -19.7500, -13.9375, -10.1875]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7041],
        [0.9088],
        [0.7649],
        [0.9091],
        [0.9100],
        [0.8163],
        [0.9059],
        [0.9255],
        [0.9176],
        [0.9206],
        [0.9175],
        [0.9175],
        [0.9626],
        [0.9811]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9961,     0.0018,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0070,     0.0000,     0.0000,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0032,     0.0000,     0.0000,     0.5742,     0.4238,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0047,     0.0000,     0.0000,     0.5820,     0.4141,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0031,     0.0000,     0.0000,     0.5781,     0.4121,     0.0001,     0.0076,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0022,     0.0000,     0.0000,     0.3730,     0.2793,     0.0001,     0.0053,     0.3418,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0027,     0.0000,     0.0000,     0.3809,     0.2734,     0.0001,     0.0063,     0.3359,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0018,     0.0000,     0.0000,     0.2676,     0.2031,     0.0001,     0.0042,     0.2471,     0.0002,     0.2754,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0190,     0.0002,     0.0001,     0.2520,     0.2061,     0.0038,     0.0295,     0.2314,     0.0076,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0014,     0.0000,     0.0000,     0.2734,     0.1953,     0.0000,     0.0035,     0.2422,     0.0002,     0.2773,     0.0000,     0.0052,     0.0000,     0.0000],
        [    0.0000,     0.0013,     0.0000,     0.0000,     0.2168,     0.1621,     0.0000,     0.0031,     0.1973,     0.0002,     0.2227,     0.0000,     0.0046,     0.1924,     0.0000],
        [    0.0000,     0.0055,     0.0000,     0.0000,     0.2139,     0.1631,     0.0005,     0.0101,     0.1914,     0.0014,     0.2129,     0.0000,     0.0132,     0.1875,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, 25.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, 18.2500, 11.4375,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, 16.7500, 10.3750,  9.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189, 25.8750, 16.2500, 14.8125, 30.8750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, 26.7500, 16.7500, 15.3125, 32.0000, 31.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918, 23.2500, 14.5000, 13.1875, 28.0000, 27.7500, 20.1250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, 25.8750, 16.2500, 14.8125, 31.1250, 30.7500, 22.5000, 26.7500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, 26.6250, 16.6250, 15.1875, 31.7500, 31.3750, 23.1250, 27.5000, 31.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052, 24.3750, 15.2500, 13.9375, 29.2500, 29.0000, 21.1250, 25.2500, 29.1250, 22.5000,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, 26.2500, 16.3750, 15.0000, 31.2500, 31.0000, 22.7500, 27.1250, 31.1250, 24.2500, 31.2500,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, 11.8125,  7.3750,  6.7188, 14.4375, 14.1875, 10.1875, 12.2500, 14.3125, 10.9375, 14.4375,  4.7812,    -inf,    -inf,    -inf],
          [ 5.1299, 26.1250, 16.3750, 14.8750, 31.3750, 31.0000, 22.6250, 27.0000, 31.2500, 24.1250, 31.3750, 10.4375, 27.3750,    -inf,    -inf],
          [ 5.2781, 26.6250, 16.6250, 15.1875, 31.7500, 31.5000, 23.1250, 27.5000, 31.6250, 24.6250, 31.7500, 10.4375, 27.8750, 31.6250,    -inf],
          [ 5.4161, 17.2500, 10.8750,  9.8750, 21.0000, 20.6250, 14.9375, 17.8750, 20.8750, 15.9375, 20.8750,  7.0000, 18.1250, 20.7500, 10.3750]]]], device='cuda:0')
========
RESW: tensor([[    1.0000],
        [    0.0003],
        [    0.0795],
        [    0.1227],
        [    0.0000],
        [    0.0000],
        [    0.0037],
        [    0.0002],
        [    0.0000],
        [    0.0018],
        [    0.0000],
        [    0.2490],
        [    0.0003],
        [    0.0000],
        [    0.1272]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0305,     0.9688,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0557,     0.9414,     0.0011,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.9844,     0.0139,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.9961,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.9961,     0.0033,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.7539,     0.0236,     0.0000,     0.0000,     0.2217,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.9336,     0.0028,     0.0000,     0.0000,     0.0630,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.3867,     0.0281,     0.0000,     0.0000,     0.1768,     0.0000,     0.4082,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.5977,     0.0021,     0.0000,     0.0000,     0.0391,     0.0000,     0.3613,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.5742,     0.0019,     0.0000,     0.0000,     0.0437,     0.0000,     0.3809,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.4121,     0.0111,     0.0000,     0.0000,     0.1118,     0.0000,     0.3867,     0.0000,     0.0000,     0.0786,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.5820,     0.0019,     0.0000,     0.0000,     0.0376,     0.0000,     0.3555,     0.0000,     0.0000,     0.0233,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, 10.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972,  5.6562, -1.1562,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726,  5.5938, -1.1953, -1.2109,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189, 17.6250, 10.3125, 10.3125, 28.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, 15.4375,  6.9375,  6.9375, 29.6250, 25.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  5.5000, -1.5312, -1.5391, 20.5000, 14.6250, -1.6406,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  8.5000,  0.7188,  0.7031, 24.1250, 18.3750,  0.7500,  5.7500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, 16.8750,  8.6875,  8.6875, 29.6250, 26.2500,  9.1875, 14.4375, 28.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  6.3125, -0.9375, -0.9492, 21.5000, 15.6875, -1.0078,  3.6094, 18.7500,  0.1885,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, 17.6250, 10.0000, 10.0000, 28.7500, 26.1250, 10.6250, 15.5000, 27.8750, 11.9375, 28.7500,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698,  2.6875, -3.3594, -3.3594, 16.3750, 10.7500, -3.5938,  0.2461, 13.6875, -2.5938, 15.9375, -6.7500,    -inf,    -inf,    -inf],
          [ 5.1299,  8.8125,  0.9258,  0.9102, 24.5000, 18.7500,  0.9688,  6.0000, 21.8750,  2.2812, 24.0000, -3.4844,  6.5000,    -inf,    -inf],
          [ 5.2781, 16.6250,  8.3750,  8.3750, 29.7500, 26.1250,  8.9375, 14.1875, 28.3750, 10.3125, 29.6250,  3.8125, 14.6875, 28.1250,    -inf],
          [ 5.4161,  3.6719, -2.7344, -2.7500, 17.8750, 12.1875, -2.9375,  1.1406, 15.1250, -1.8828, 17.3750, -6.3438,  1.5312, 14.6875, -5.2812]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.1485],
        [0.3107],
        [0.3298],
        [0.3333],
        [0.2207],
        [0.0917],
        [0.1142],
        [0.3304],
        [0.0932],
        [0.3333],
        [0.1989],
        [0.1321],
        [0.3258],
        [0.1855]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1299 the:0.1650,:0.0928 the:0.0928.:0.0225,:0.1396 the:0.1631.:0.0557)
.
------
		( the:0.1650,:0.0928 the:0.0928.:0.0225,:0.1396 the:0.1631.:0.0557
:0.1260)

--------------
@ 550 train 6.8671 , allloss: 6.8699, dt: 1317.29ms, fracRes: 0.6808, norm(attn): 0.1719, norm(output): 0.9531, norm(x): 0.4180, norm(y): 1.0008, norm:4.2946, tok/sec: 99501.06, flops:77.49, batch-reuse:1
@ 551 train 6.8530 , allloss: 6.8558, dt: 1048.33ms, fracRes: 0.6861, norm(attn): 0.1729, norm(output): 0.9844, norm(x): 0.4102, norm(y): 1.0007, norm:3.1616, tok/sec: 125029.69, flops:97.37, batch-reuse:1
@ 552 train 6.8058 , allloss: 6.8083, dt: 1057.35ms, fracRes: 0.6817, norm(attn): 0.1729, norm(output): 1.0078, norm(x): 0.4332, norm(y): 1.0008, norm:4.2307, tok/sec: 123962.55, flops:96.54, batch-reuse:1
@ 553 train 6.9273 , allloss: 6.9300, dt: 1071.80ms, fracRes: 0.6863, norm(attn): 0.1719, norm(output): 1.0156, norm(x): 0.4285, norm(y): 1.0007, norm:3.6935, tok/sec: 122291.26, flops:95.24, batch-reuse:1
@ 554 train 6.8330 , allloss: 6.8365, dt: 1064.52ms, fracRes: 0.6852, norm(attn): 0.1719, norm(output): 0.9766, norm(x): 0.4245, norm(y): 1.0007, norm:1.7802, tok/sec: 123128.08, flops:95.89, batch-reuse:1
@ 555 train 6.7921 , allloss: 6.7944, dt: 1066.33ms, fracRes: 0.6808, norm(attn): 0.1719, norm(output): 0.9492, norm(x): 0.4269, norm(y): 1.0008, norm:2.2152, tok/sec: 122918.75, flops:95.73, batch-reuse:1
@ 556 train 6.7414 , allloss: 6.7446, dt: 1060.85ms, fracRes: 0.6829, norm(attn): 0.1709, norm(output): 0.9805, norm(x): 0.4266, norm(y): 1.0007, norm:1.6431, tok/sec: 123553.29, flops:96.22, batch-reuse:1
@ 557 train 6.7984 , allloss: 6.8009, dt: 1062.91ms, fracRes: 0.6867, norm(attn): 0.1709, norm(output): 0.9844, norm(x): 0.4198, norm(y): 1.0007, norm:0.9918, tok/sec: 123314.15, flops:96.04, batch-reuse:1
@ 558 train 6.9440 , allloss: 6.9466, dt: 1054.61ms, fracRes: 0.6901, norm(attn): 0.1699, norm(output): 0.9648, norm(x): 0.4092, norm(y): 1.0007, norm:2.4417, tok/sec: 124285.31, flops:96.79, batch-reuse:1
@ 559 train 7.1012 , allloss: 7.1037, dt: 1060.27ms, fracRes: 0.6952, norm(attn): 0.1660, norm(output): 0.9648, norm(x): 0.4072, norm(y): 1.0006, norm:5.8674, tok/sec: 123621.42, flops:96.28, batch-reuse:1
@ 560 train 6.9453 , allloss: 6.9479, dt: 1045.21ms, fracRes: 0.6932, norm(attn): 0.1621, norm(output): 0.9766, norm(x): 0.4080, norm(y): 1.0006, norm:0.8037, tok/sec: 125402.68, flops:97.66, batch-reuse:1
@ 561 train 7.0406 , allloss: 7.0437, dt: 1055.31ms, fracRes: 0.7002, norm(attn): 0.1670, norm(output): 0.9961, norm(x): 0.3903, norm(y): 1.0005, norm:1.1086, tok/sec: 124202.81, flops:96.73, batch-reuse:1
@ 562 train 6.9020 , allloss: 6.9046, dt: 1046.48ms, fracRes: 0.6885, norm(attn): 0.1699, norm(output): 0.9727, norm(x): 0.4124, norm(y): 1.0007, norm:1.0230, tok/sec: 125250.43, flops:97.55, batch-reuse:1
@ 563 train 7.0356 , allloss: 7.0384, dt: 1052.33ms, fracRes: 0.6928, norm(attn): 0.1719, norm(output): 1.0000, norm(x): 0.4152, norm(y): 1.0006, norm:1.7550, tok/sec: 124554.51, flops:97.00, batch-reuse:1
@ 564 train 6.8674 , allloss: 6.8700, dt: 1054.70ms, fracRes: 0.6888, norm(attn): 0.1709, norm(output): 0.9922, norm(x): 0.4195, norm(y): 1.0007, norm:1.1549, tok/sec: 124274.19, flops:96.79, batch-reuse:1
@ 565 train 6.7376 , allloss: 6.7399, dt: 1052.80ms, fracRes: 0.6832, norm(attn): 0.1709, norm(output): 0.9883, norm(x): 0.4214, norm(y): 1.0007, norm:1.6311, tok/sec: 124498.21, flops:96.96, batch-reuse:1
@ 566 train 6.9424 , allloss: 6.9449, dt: 1064.89ms, fracRes: 0.6942, norm(attn): 0.1670, norm(output): 1.0000, norm(x): 0.4019, norm(y): 1.0006, norm:1.2845, tok/sec: 123084.67, flops:95.86, batch-reuse:1
@ 567 train 6.9250 , allloss: 6.9273, dt: 1057.34ms, fracRes: 0.6901, norm(attn): 0.1641, norm(output): 0.9844, norm(x): 0.4110, norm(y): 1.0006, norm:0.9479, tok/sec: 123964.09, flops:96.54, batch-reuse:1
@ 568 train 6.9567 , allloss: 6.9594, dt: 1040.39ms, fracRes: 0.6956, norm(attn): 0.1709, norm(output): 1.0000, norm(x): 0.4022, norm(y): 1.0006, norm:0.7111, tok/sec: 125983.41, flops:98.12, batch-reuse:1
@ 569 train 6.9108 , allloss: 6.9137, dt: 1046.04ms, fracRes: 0.6938, norm(attn): 0.1709, norm(output): 1.0078, norm(x): 0.4057, norm(y): 1.0006, norm:1.2311, tok/sec: 125302.58, flops:97.59, batch-reuse:1
@ 570 train 6.9317 , allloss: 6.9373, dt: 1061.19ms, fracRes: 0.6942, norm(attn): 0.1699, norm(output): 0.9844, norm(x): 0.4000, norm(y): 1.0006, norm:2.4452, tok/sec: 123513.99, flops:96.19, batch-reuse:1
@ 571 train 6.8652 , allloss: 6.8680, dt: 1054.52ms, fracRes: 0.6905, norm(attn): 0.1670, norm(output): 0.9844, norm(x): 0.4116, norm(y): 1.0006, norm:0.8602, tok/sec: 124295.37, flops:96.80, batch-reuse:1
@ 572 train 6.8332 , allloss: 6.8357, dt: 1055.73ms, fracRes: 0.6888, norm(attn): 0.1660, norm(output): 0.9883, norm(x): 0.4183, norm(y): 1.0007, norm:0.9052, tok/sec: 124152.66, flops:96.69, batch-reuse:1
@ 573 train 6.8970 , allloss: 6.8994, dt: 1050.64ms, fracRes: 0.6895, norm(attn): 0.1689, norm(output): 0.9883, norm(x): 0.4129, norm(y): 1.0007, norm:2.6186, tok/sec: 124754.22, flops:97.16, batch-reuse:1
@ 574 train 6.8840 , allloss: 6.8865, dt: 1055.56ms, fracRes: 0.6916, norm(attn): 0.1699, norm(output): 1.0156, norm(x): 0.4128, norm(y): 1.0006, norm:0.9281, tok/sec: 124172.49, flops:96.71, batch-reuse:1
@ 575 train 6.8575 , allloss: 6.8599, dt: 1048.26ms, fracRes: 0.6895, norm(attn): 0.1699, norm(output): 1.0234, norm(x): 0.4225, norm(y): 1.0007, norm:2.5940, tok/sec: 125037.09, flops:97.38, batch-reuse:1
@ 576 train 6.7916 , allloss: 6.7939, dt: 1048.89ms, fracRes: 0.6858, norm(attn): 0.1680, norm(output): 0.9961, norm(x): 0.4262, norm(y): 1.0007, norm:0.7204, tok/sec: 124962.96, flops:97.32, batch-reuse:1
@ 577 train 6.9575 , allloss: 6.9600, dt: 1051.31ms, fracRes: 0.6899, norm(attn): 0.1670, norm(output): 0.9688, norm(x): 0.4090, norm(y): 1.0006, norm:2.8978, tok/sec: 124674.50, flops:97.10, batch-reuse:1
@ 578 train 6.8543 , allloss: 6.8568, dt: 1036.75ms, fracRes: 0.6881, norm(attn): 0.1689, norm(output): 0.9883, norm(x): 0.4190, norm(y): 1.0006, norm:1.1478, tok/sec: 126426.33, flops:98.46, batch-reuse:1
@ 579 train 6.9830 , allloss: 6.9878, dt: 1057.78ms, fracRes: 0.6942, norm(attn): 0.1680, norm(output): 1.0312, norm(x): 0.4205, norm(y): 1.0006, norm:4.0117, tok/sec: 123911.87, flops:96.50, batch-reuse:1
@ 580 train 7.0688 , allloss: 7.0732, dt: 1048.54ms, fracRes: 0.6966, norm(attn): 0.1660, norm(output): 1.0391, norm(x): 0.4155, norm(y): 1.0006, norm:3.8554, tok/sec: 125003.91, flops:97.35, batch-reuse:1
@ 581 train 6.8397 , allloss: 6.8434, dt: 1049.75ms, fracRes: 0.6902, norm(attn): 0.1641, norm(output): 1.0078, norm(x): 0.4200, norm(y): 1.0006, norm:1.0603, tok/sec: 124860.51, flops:97.24, batch-reuse:1
@ 582 train 7.0804 , allloss: 7.0849, dt: 1057.17ms, fracRes: 0.6891, norm(attn): 0.1621, norm(output): 0.9414, norm(x): 0.4076, norm(y): 1.0006, norm:4.8391, tok/sec: 123983.35, flops:96.56, batch-reuse:1
@ 583 train 7.1436 , allloss: 7.1467, dt: 1044.28ms, fracRes: 0.6859, norm(attn): 0.1611, norm(output): 0.9375, norm(x): 0.4149, norm(y): 1.0006, norm:5.0994, tok/sec: 125514.08, flops:97.75, batch-reuse:1
@ 584 train 7.0331 , allloss: 7.0353, dt: 1057.05ms, fracRes: 0.6880, norm(attn): 0.1611, norm(output): 0.9492, norm(x): 0.4209, norm(y): 1.0006, norm:3.2158, tok/sec: 123998.17, flops:96.57, batch-reuse:1
@ 585 train 6.9147 , allloss: 6.9173, dt: 1052.88ms, fracRes: 0.6902, norm(attn): 0.1592, norm(output): 1.0000, norm(x): 0.4353, norm(y): 1.0006, norm:3.0784, tok/sec: 124489.21, flops:96.95, batch-reuse:1
@ 586 train 6.9926 , allloss: 6.9954, dt: 1042.88ms, fracRes: 0.6948, norm(attn): 0.1572, norm(output): 1.0312, norm(x): 0.4283, norm(y): 1.0006, norm:2.5706, tok/sec: 125682.60, flops:97.88, batch-reuse:1
@ 587 train 7.0078 , allloss: 7.0112, dt: 1060.34ms, fracRes: 0.6979, norm(attn): 0.1602, norm(output): 1.0469, norm(x): 0.4173, norm(y): 1.0005, norm:2.7387, tok/sec: 123612.91, flops:96.27, batch-reuse:1
@ 588 train 6.9422 , allloss: 6.9456, dt: 1072.46ms, fracRes: 0.7008, norm(attn): 0.1602, norm(output): 1.0234, norm(x): 0.4001, norm(y): 1.0005, norm:2.3031, tok/sec: 122215.92, flops:95.18, batch-reuse:1
@ 589 train 6.9302 , allloss: 6.9333, dt: 1045.10ms, fracRes: 0.7005, norm(attn): 0.1572, norm(output): 1.0078, norm(x): 0.3980, norm(y): 1.0005, norm:1.5132, tok/sec: 125415.27, flops:97.67, batch-reuse:1
@ 590 train 6.9696 , allloss: 6.9720, dt: 1037.41ms, fracRes: 0.6953, norm(attn): 0.1553, norm(output): 0.9922, norm(x): 0.4174, norm(y): 1.0005, norm:2.1326, tok/sec: 126346.00, flops:98.40, batch-reuse:1
@ 591 train 6.8587 , allloss: 6.8610, dt: 1052.44ms, fracRes: 0.6972, norm(attn): 0.1514, norm(output): 1.0000, norm(x): 0.4185, norm(y): 1.0005, norm:0.9959, tok/sec: 124540.54, flops:96.99, batch-reuse:1
@ 592 train 6.8699 , allloss: 6.8724, dt: 1053.49ms, fracRes: 0.7010, norm(attn): 0.1533, norm(output): 1.0156, norm(x): 0.4117, norm(y): 1.0005, norm:1.6827, tok/sec: 124416.92, flops:96.90, batch-reuse:1
@ 593 train 6.8984 , allloss: 6.9013, dt: 1047.98ms, fracRes: 0.6986, norm(attn): 0.1523, norm(output): 1.0078, norm(x): 0.4126, norm(y): 1.0005, norm:2.2359, tok/sec: 125070.68, flops:97.41, batch-reuse:1
@ 594 train 7.0043 , allloss: 7.0075, dt: 1055.54ms, fracRes: 0.7008, norm(attn): 0.1523, norm(output): 1.0078, norm(x): 0.4035, norm(y): 1.0005, norm:0.9921, tok/sec: 124175.35, flops:96.71, batch-reuse:1
@ 595 train 6.8347 , allloss: 6.8372, dt: 1048.85ms, fracRes: 0.6959, norm(attn): 0.1543, norm(output): 1.0078, norm(x): 0.4185, norm(y): 1.0005, norm:0.8321, tok/sec: 124967.59, flops:97.33, batch-reuse:1
@ 596 train 6.8618 , allloss: 6.8646, dt: 1037.46ms, fracRes: 0.6972, norm(attn): 0.1553, norm(output): 1.0078, norm(x): 0.4183, norm(y): 1.0005, norm:1.3513, tok/sec: 126339.55, flops:98.39, batch-reuse:1
@ 597 train 6.8326 , allloss: 6.8357, dt: 1049.03ms, fracRes: 0.6984, norm(attn): 0.1562, norm(output): 1.0234, norm(x): 0.4142, norm(y): 1.0005, norm:0.8866, tok/sec: 124946.38, flops:97.31, batch-reuse:1
@ 598 train 6.8998 , allloss: 6.9043, dt: 1049.31ms, fracRes: 0.7053, norm(attn): 0.1504, norm(output): 1.0078, norm(x): 0.3981, norm(y): 1.0004, norm:0.5848, tok/sec: 124912.93, flops:97.28, batch-reuse:1
@ 599 train 6.9450 , allloss: 6.9485, dt: 1053.07ms, fracRes: 0.7024, norm(attn): 0.1465, norm(output): 1.0000, norm(x): 0.4066, norm(y): 1.0004, norm:1.0049, tok/sec: 124467.03, flops:96.94, batch-reuse:1
@ 600 train 6.8433 , allloss: 6.8460, dt: 1041.43ms, fracRes: 0.6942, norm(attn): 0.1504, norm(output): 1.0000, norm(x): 0.4276, norm(y): 1.0005, norm:0.6600, tok/sec: 125857.23, flops:98.02, batch-reuse:1
@ 601 train 6.9014 , allloss: 6.9046, dt: 1049.67ms, fracRes: 0.7027, norm(attn): 0.1553, norm(output): 1.0312, norm(x): 0.4049, norm(y): 1.0004, norm:0.8050, tok/sec: 124869.33, flops:97.25, batch-reuse:1
@ 602 train 6.8932 , allloss: 6.8964, dt: 1041.65ms, fracRes: 0.6996, norm(attn): 0.1572, norm(output): 1.0391, norm(x): 0.4124, norm(y): 1.0005, norm:0.7759, tok/sec: 125831.10, flops:98.00, batch-reuse:1
@ 603 train 6.8456 , allloss: 6.8486, dt: 1040.72ms, fracRes: 0.6974, norm(attn): 0.1553, norm(output): 1.0312, norm(x): 0.4198, norm(y): 1.0005, norm:0.6268, tok/sec: 125943.43, flops:98.09, batch-reuse:1
@ 604 train 6.7738 , allloss: 6.7765, dt: 1048.86ms, fracRes: 0.6896, norm(attn): 0.1523, norm(output): 1.0000, norm(x): 0.4325, norm(y): 1.0005, norm:0.9363, tok/sec: 124966.12, flops:97.32, batch-reuse:1
@ 605 train 6.8073 , allloss: 6.8102, dt: 1052.38ms, fracRes: 0.6951, norm(attn): 0.1523, norm(output): 1.0156, norm(x): 0.4237, norm(y): 1.0005, norm:0.6836, tok/sec: 124547.90, flops:97.00, batch-reuse:1
@ 606 train 6.8127 , allloss: 6.8153, dt: 1052.81ms, fracRes: 0.6950, norm(attn): 0.1543, norm(output): 1.0234, norm(x): 0.4215, norm(y): 1.0005, norm:0.6423, tok/sec: 124497.02, flops:96.96, batch-reuse:1
@ 607 train 6.8122 , allloss: 6.8150, dt: 1045.37ms, fracRes: 0.6937, norm(attn): 0.1553, norm(output): 1.0234, norm(x): 0.4280, norm(y): 1.0005, norm:0.6613, tok/sec: 125383.46, flops:97.65, batch-reuse:1
@ 608 train 6.7381 , allloss: 6.7406, dt: 1041.35ms, fracRes: 0.6870, norm(attn): 0.1533, norm(output): 1.0078, norm(x): 0.4391, norm(y): 1.0006, norm:0.8956, tok/sec: 125867.86, flops:98.03, batch-reuse:1
@ 609 train 6.7873 , allloss: 6.7902, dt: 1042.47ms, fracRes: 0.6914, norm(attn): 0.1543, norm(output): 1.0156, norm(x): 0.4352, norm(y): 1.0005, norm:1.1434, tok/sec: 125731.70, flops:97.92, batch-reuse:1
@ 610 train 6.9393 , allloss: 6.9431, dt: 1045.28ms, fracRes: 0.6996, norm(attn): 0.1562, norm(output): 1.0156, norm(x): 0.4094, norm(y): 1.0004, norm:0.8838, tok/sec: 125393.78, flops:97.66, batch-reuse:1
@ 611 train 6.8394 , allloss: 6.8433, dt: 1065.40ms, fracRes: 0.6952, norm(attn): 0.1562, norm(output): 1.0156, norm(x): 0.4212, norm(y): 1.0005, norm:0.4258, tok/sec: 123025.94, flops:95.81, batch-reuse:1
@ 612 train 6.8881 , allloss: 6.8925, dt: 1047.22ms, fracRes: 0.7007, norm(attn): 0.1572, norm(output): 1.0391, norm(x): 0.4139, norm(y): 1.0004, norm:0.6972, tok/sec: 125162.14, flops:97.48, batch-reuse:1
@ 613 train 6.9755 , allloss: 6.9802, dt: 1047.29ms, fracRes: 0.7005, norm(attn): 0.1582, norm(output): 1.0156, norm(x): 0.4112, norm(y): 1.0004, norm:1.6364, tok/sec: 125153.00, flops:97.47, batch-reuse:1
@ 614 train 6.8739 , allloss: 6.8778, dt: 1037.60ms, fracRes: 0.6955, norm(attn): 0.1572, norm(output): 1.0234, norm(x): 0.4260, norm(y): 1.0005, norm:0.7451, tok/sec: 126322.45, flops:98.38, batch-reuse:1
@ 615 train 6.8515 , allloss: 6.8552, dt: 1045.81ms, fracRes: 0.6937, norm(attn): 0.1553, norm(output): 1.0000, norm(x): 0.4245, norm(y): 1.0005, norm:0.5900, tok/sec: 125330.04, flops:97.61, batch-reuse:1
@ 616 train 6.8675 , allloss: 6.8710, dt: 1063.80ms, fracRes: 0.6953, norm(attn): 0.1553, norm(output): 1.0000, norm(x): 0.4253, norm(y): 1.0005, norm:0.6260, tok/sec: 123210.87, flops:95.96, batch-reuse:1
@ 617 train 6.6946 , allloss: 6.6975, dt: 1052.96ms, fracRes: 0.6867, norm(attn): 0.1553, norm(output): 0.9961, norm(x): 0.4413, norm(y): 1.0006, norm:0.8106, tok/sec: 124480.08, flops:96.95, batch-reuse:1
@ 618 train 6.8326 , allloss: 6.8357, dt: 1050.69ms, fracRes: 0.6950, norm(attn): 0.1562, norm(output): 1.0156, norm(x): 0.4309, norm(y): 1.0005, norm:1.4575, tok/sec: 124748.03, flops:97.15, batch-reuse:1
@ 619 train 6.8030 , allloss: 6.8062, dt: 1051.58ms, fracRes: 0.6977, norm(attn): 0.1562, norm(output): 1.0078, norm(x): 0.4166, norm(y): 1.0005, norm:1.2155, tok/sec: 124643.29, flops:97.07, batch-reuse:1
@ 620 train 6.7876 , allloss: 6.7903, dt: 1044.68ms, fracRes: 0.6925, norm(attn): 0.1562, norm(output): 1.0078, norm(x): 0.4352, norm(y): 1.0005, norm:0.6671, tok/sec: 125465.93, flops:97.71, batch-reuse:1
@ 621 train 6.7968 , allloss: 6.7993, dt: 1050.14ms, fracRes: 0.6922, norm(attn): 0.1562, norm(output): 1.0000, norm(x): 0.4331, norm(y): 1.0005, norm:0.5551, tok/sec: 124814.16, flops:97.21, batch-reuse:1
@ 622 train 6.7217 , allloss: 6.7240, dt: 1040.73ms, fracRes: 0.6884, norm(attn): 0.1562, norm(output): 1.0000, norm(x): 0.4415, norm(y): 1.0006, norm:0.4728, tok/sec: 125942.48, flops:98.08, batch-reuse:1
@ 623 train 6.7668 , allloss: 6.7693, dt: 1040.99ms, fracRes: 0.6955, norm(attn): 0.1562, norm(output): 1.0078, norm(x): 0.4276, norm(y): 1.0005, norm:0.6544, tok/sec: 125910.98, flops:98.06, batch-reuse:1
@ 624 train 6.8446 , allloss: 6.8472, dt: 1059.12ms, fracRes: 0.6967, norm(attn): 0.1562, norm(output): 1.0078, norm(x): 0.4194, norm(y): 1.0005, norm:1.2877, tok/sec: 123755.74, flops:96.38, batch-reuse:1
@ 625 train 6.9013 , allloss: 6.9043, dt: 1059.03ms, fracRes: 0.7030, norm(attn): 0.1582, norm(output): 1.0156, norm(x): 0.4134, norm(y): 1.0004, norm:1.3672, tok/sec: 123765.72, flops:96.39, batch-reuse:1
@ 626 train 6.7984 , allloss: 6.8011, dt: 1041.39ms, fracRes: 0.6952, norm(attn): 0.1562, norm(output): 1.0000, norm(x): 0.4245, norm(y): 1.0005, norm:0.8117, tok/sec: 125862.58, flops:98.02, batch-reuse:1
@ 627 train 6.7928 , allloss: 6.7972, dt: 1054.57ms, fracRes: 0.6985, norm(attn): 0.1582, norm(output): 1.0078, norm(x): 0.4206, norm(y): 1.0005, norm:0.8009, tok/sec: 124288.99, flops:96.80, batch-reuse:1
@ 628 train 6.8282 , allloss: 6.8308, dt: 1054.64ms, fracRes: 0.6996, norm(attn): 0.1572, norm(output): 1.0156, norm(x): 0.4166, norm(y): 1.0005, norm:0.7249, tok/sec: 124281.83, flops:96.79, batch-reuse:1
@ 629 train 6.8643 , allloss: 6.8666, dt: 1043.71ms, fracRes: 0.7036, norm(attn): 0.1562, norm(output): 1.0078, norm(x): 0.4058, norm(y): 1.0004, norm:1.1923, tok/sec: 125582.23, flops:97.80, batch-reuse:1
@ 630 train 6.9627 , allloss: 6.9654, dt: 1047.17ms, fracRes: 0.7084, norm(attn): 0.1572, norm(output): 1.0234, norm(x): 0.4014, norm(y): 1.0004, norm:1.6529, tok/sec: 125168.04, flops:97.48, batch-reuse:1
@ 631 train 6.8537 , allloss: 6.8559, dt: 1052.06ms, fracRes: 0.6984, norm(attn): 0.1553, norm(output): 1.0078, norm(x): 0.4193, norm(y): 1.0005, norm:0.4463, tok/sec: 124585.61, flops:97.03, batch-reuse:1
@ 632 train 6.9994 , allloss: 7.0018, dt: 1057.45ms, fracRes: 0.6995, norm(attn): 0.1553, norm(output): 1.0000, norm(x): 0.4108, norm(y): 1.0005, norm:2.0420, tok/sec: 123951.23, flops:96.53, batch-reuse:1
@ 633 train 6.9111 , allloss: 6.9135, dt: 1045.98ms, fracRes: 0.7008, norm(attn): 0.1562, norm(output): 1.0156, norm(x): 0.4171, norm(y): 1.0005, norm:0.8087, tok/sec: 125309.70, flops:97.59, batch-reuse:1
@ 634 train 6.7162 , allloss: 6.7182, dt: 1050.65ms, fracRes: 0.6914, norm(attn): 0.1562, norm(output): 1.0000, norm(x): 0.4368, norm(y): 1.0006, norm:0.8145, tok/sec: 124753.29, flops:97.16, batch-reuse:1
@ 635 train 6.8905 , allloss: 6.8928, dt: 1052.88ms, fracRes: 0.6992, norm(attn): 0.1562, norm(output): 1.0078, norm(x): 0.4129, norm(y): 1.0005, norm:1.7405, tok/sec: 124488.45, flops:96.95, batch-reuse:1
@ 636 train 6.8931 , allloss: 6.8953, dt: 1048.61ms, fracRes: 0.7025, norm(attn): 0.1562, norm(output): 1.0156, norm(x): 0.4106, norm(y): 1.0005, norm:0.8467, tok/sec: 124995.67, flops:97.35, batch-reuse:1
@ 637 train 6.7917 , allloss: 6.7936, dt: 1055.45ms, fracRes: 0.6950, norm(attn): 0.1523, norm(output): 1.0078, norm(x): 0.4361, norm(y): 1.0006, norm:3.0487, tok/sec: 124185.50, flops:96.72, batch-reuse:1
@ 638 train 6.7467 , allloss: 6.7486, dt: 1051.95ms, fracRes: 0.6956, norm(attn): 0.1523, norm(output): 0.9922, norm(x): 0.4300, norm(y): 1.0005, norm:0.9185, tok/sec: 124598.74, flops:97.04, batch-reuse:1
@ 639 train 6.9109 , allloss: 6.9134, dt: 1052.07ms, fracRes: 0.7023, norm(attn): 0.1553, norm(output): 0.9844, norm(x): 0.4000, norm(y): 1.0004, norm:3.4964, tok/sec: 124584.68, flops:97.03, batch-reuse:1
@ 640 train 6.8185 , allloss: 6.8210, dt: 1052.78ms, fracRes: 0.6971, norm(attn): 0.1562, norm(output): 0.9961, norm(x): 0.4130, norm(y): 1.0005, norm:2.5135, tok/sec: 124501.22, flops:96.96, batch-reuse:1
@ 641 train 6.9087 , allloss: 6.9117, dt: 1067.21ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 1.0312, norm(x): 0.3975, norm(y): 1.0004, norm:6.7924, tok/sec: 122817.88, flops:95.65, batch-reuse:1
@ 642 train 6.8175 , allloss: 6.8204, dt: 1045.25ms, fracRes: 0.7015, norm(attn): 0.1543, norm(output): 1.0391, norm(x): 0.4201, norm(y): 1.0005, norm:2.9555, tok/sec: 125397.73, flops:97.66, batch-reuse:1
@ 643 train 6.8647 , allloss: 6.8676, dt: 1065.45ms, fracRes: 0.6970, norm(attn): 0.1514, norm(output): 1.0000, norm(x): 0.4253, norm(y): 1.0005, norm:2.4664, tok/sec: 123020.19, flops:95.81, batch-reuse:1
@ 644 train 7.0013 , allloss: 7.0045, dt: 1046.24ms, fracRes: 0.7081, norm(attn): 0.1533, norm(output): 1.0078, norm(x): 0.4000, norm(y): 1.0004, norm:1.6943, tok/sec: 125278.74, flops:97.57, batch-reuse:1
@ 645 train 6.8921 , allloss: 6.8946, dt: 1049.97ms, fracRes: 0.7039, norm(attn): 0.1543, norm(output): 1.0078, norm(x): 0.4098, norm(y): 1.0004, norm:1.5714, tok/sec: 124834.11, flops:97.22, batch-reuse:1
@ 646 train 6.7916 , allloss: 6.7939, dt: 1044.72ms, fracRes: 0.7004, norm(attn): 0.1543, norm(output): 1.0234, norm(x): 0.4177, norm(y): 1.0005, norm:1.2801, tok/sec: 125461.00, flops:97.71, batch-reuse:1
@ 647 train 6.8279 , allloss: 6.8302, dt: 1053.58ms, fracRes: 0.7056, norm(attn): 0.1504, norm(output): 1.0234, norm(x): 0.4081, norm(y): 1.0004, norm:1.3084, tok/sec: 124406.05, flops:96.89, batch-reuse:1
@ 648 train 6.7181 , allloss: 6.7201, dt: 1064.51ms, fracRes: 0.6964, norm(attn): 0.1426, norm(output): 1.0000, norm(x): 0.4354, norm(y): 1.0005, norm:0.8062, tok/sec: 123129.02, flops:95.89, batch-reuse:1
@ 649 train 6.8574 , allloss: 6.8596, dt: 1055.86ms, fracRes: 0.7023, norm(attn): 0.1426, norm(output): 1.0000, norm(x): 0.4218, norm(y): 1.0004, norm:1.3664, tok/sec: 124137.97, flops:96.68, batch-reuse:1
@ 650 train 6.7165 , allloss: 6.7187, dt: 1043.90ms, fracRes: 0.6978, norm(attn): 0.1465, norm(output): 1.0156, norm(x): 0.4299, norm(y): 1.0005, norm:0.7763, tok/sec: 125560.29, flops:97.79, batch-reuse:1
@ 651 train 6.8149 , allloss: 6.8175, dt: 1054.96ms, fracRes: 0.7038, norm(attn): 0.1504, norm(output): 1.0312, norm(x): 0.4139, norm(y): 1.0004, norm:1.4368, tok/sec: 124243.71, flops:96.76, batch-reuse:1
@ 652 train 6.6895 , allloss: 6.6925, dt: 1051.93ms, fracRes: 0.6996, norm(attn): 0.1494, norm(output): 1.0234, norm(x): 0.4200, norm(y): 1.0004, norm:1.0122, tok/sec: 124601.90, flops:97.04, batch-reuse:1
@ 653 train 6.7316 , allloss: 6.7343, dt: 1047.87ms, fracRes: 0.6979, norm(attn): 0.1484, norm(output): 1.0078, norm(x): 0.4299, norm(y): 1.0005, norm:1.4294, tok/sec: 125084.28, flops:97.42, batch-reuse:1
@ 654 train 6.7605 , allloss: 6.7631, dt: 1058.69ms, fracRes: 0.7014, norm(attn): 0.1445, norm(output): 1.0000, norm(x): 0.4208, norm(y): 1.0004, norm:0.9904, tok/sec: 123805.94, flops:96.42, batch-reuse:1
@ 655 train 6.7959 , allloss: 6.7985, dt: 1055.74ms, fracRes: 0.7007, norm(attn): 0.1445, norm(output): 1.0078, norm(x): 0.4213, norm(y): 1.0004, norm:1.6921, tok/sec: 124151.54, flops:96.69, batch-reuse:1
@ 656 train 6.7275 , allloss: 6.7302, dt: 1059.78ms, fracRes: 0.7023, norm(attn): 0.1484, norm(output): 1.0156, norm(x): 0.4181, norm(y): 1.0004, norm:1.3072, tok/sec: 123678.82, flops:96.32, batch-reuse:1
@ 657 train 6.7566 , allloss: 6.7591, dt: 1060.13ms, fracRes: 0.7006, norm(attn): 0.1523, norm(output): 1.0391, norm(x): 0.4206, norm(y): 1.0004, norm:1.9085, tok/sec: 123637.54, flops:96.29, batch-reuse:1
@ 658 train 6.8627 , allloss: 6.8655, dt: 1060.60ms, fracRes: 0.7056, norm(attn): 0.1582, norm(output): 1.0703, norm(x): 0.4140, norm(y): 1.0003, norm:1.6722, tok/sec: 123582.73, flops:96.25, batch-reuse:1
@ 659 train 6.7628 , allloss: 6.7652, dt: 1065.86ms, fracRes: 0.6999, norm(attn): 0.1523, norm(output): 1.0391, norm(x): 0.4245, norm(y): 1.0004, norm:0.7498, tok/sec: 122973.02, flops:95.77, batch-reuse:1
@ 660 train 6.8433 , allloss: 6.8472, dt: 1048.65ms, fracRes: 0.7045, norm(attn): 0.1484, norm(output): 1.0234, norm(x): 0.4085, norm(y): 1.0003, norm:2.3386, tok/sec: 124991.77, flops:97.34, batch-reuse:1
@ 661 train 6.7742 , allloss: 6.7771, dt: 1066.80ms, fracRes: 0.7025, norm(attn): 0.1465, norm(output): 1.0156, norm(x): 0.4209, norm(y): 1.0004, norm:1.5332, tok/sec: 122864.49, flops:95.69, batch-reuse:1
@ 662 train 6.8109 , allloss: 6.8135, dt: 1066.15ms, fracRes: 0.7028, norm(attn): 0.1465, norm(output): 1.0312, norm(x): 0.4262, norm(y): 1.0004, norm:1.3078, tok/sec: 122939.00, flops:95.75, batch-reuse:1
@ 663 train 6.8273 , allloss: 6.8299, dt: 1052.90ms, fracRes: 0.7047, norm(attn): 0.1445, norm(output): 1.0156, norm(x): 0.4136, norm(y): 1.0004, norm:2.4998, tok/sec: 124487.18, flops:96.95, batch-reuse:1
@ 664 train 6.7513 , allloss: 6.7535, dt: 1047.38ms, fracRes: 0.6965, norm(attn): 0.1426, norm(output): 1.0078, norm(x): 0.4347, norm(y): 1.0004, norm:1.7905, tok/sec: 125143.05, flops:97.46, batch-reuse:1
@ 665 train 6.8033 , allloss: 6.8058, dt: 1056.40ms, fracRes: 0.7024, norm(attn): 0.1426, norm(output): 1.0391, norm(x): 0.4303, norm(y): 1.0004, norm:2.8269, tok/sec: 124073.93, flops:96.63, batch-reuse:1
@ 666 train 6.6252 , allloss: 6.6276, dt: 1055.13ms, fracRes: 0.6959, norm(attn): 0.1426, norm(output): 1.0312, norm(x): 0.4381, norm(y): 1.0005, norm:1.7921, tok/sec: 124223.55, flops:96.75, batch-reuse:1
@ 667 train 6.6394 , allloss: 6.6419, dt: 1051.09ms, fracRes: 0.6940, norm(attn): 0.1406, norm(output): 1.0078, norm(x): 0.4315, norm(y): 1.0005, norm:2.3488, tok/sec: 124700.77, flops:97.12, batch-reuse:1
@ 668 train 6.7766 , allloss: 6.7791, dt: 1056.23ms, fracRes: 0.6986, norm(attn): 0.1436, norm(output): 1.0078, norm(x): 0.4293, norm(y): 1.0004, norm:1.2981, tok/sec: 124093.78, flops:96.64, batch-reuse:1
@ 669 train 6.7454 , allloss: 6.7479, dt: 1047.44ms, fracRes: 0.7006, norm(attn): 0.1445, norm(output): 1.0469, norm(x): 0.4401, norm(y): 1.0004, norm:2.0600, tok/sec: 125135.73, flops:97.46, batch-reuse:1
@ 670 train 6.8366 , allloss: 6.8393, dt: 1055.14ms, fracRes: 0.7066, norm(attn): 0.1445, norm(output): 1.0469, norm(x): 0.4247, norm(y): 1.0003, norm:1.3371, tok/sec: 124222.07, flops:96.74, batch-reuse:1
@ 671 train 6.7214 , allloss: 6.7239, dt: 1054.52ms, fracRes: 0.6975, norm(attn): 0.1416, norm(output): 1.0000, norm(x): 0.4288, norm(y): 1.0004, norm:1.7486, tok/sec: 124295.01, flops:96.80, batch-reuse:1
@ 672 train 6.7469 , allloss: 6.7492, dt: 1071.13ms, fracRes: 0.7009, norm(attn): 0.1416, norm(output): 1.0078, norm(x): 0.4223, norm(y): 1.0004, norm:1.5286, tok/sec: 122368.10, flops:95.30, batch-reuse:1
@ 673 train 6.7460 , allloss: 6.7483, dt: 1065.24ms, fracRes: 0.7002, norm(attn): 0.1406, norm(output): 1.0156, norm(x): 0.4366, norm(y): 1.0004, norm:1.4964, tok/sec: 123044.78, flops:95.83, batch-reuse:1
@ 674 train 6.7815 , allloss: 6.7837, dt: 1062.54ms, fracRes: 0.7034, norm(attn): 0.1426, norm(output): 1.0156, norm(x): 0.4316, norm(y): 1.0004, norm:1.1685, tok/sec: 123357.65, flops:96.07, batch-reuse:1
@ 675 train 6.6648 , allloss: 6.6671, dt: 1064.91ms, fracRes: 0.6976, norm(attn): 0.1406, norm(output): 1.0078, norm(x): 0.4329, norm(y): 1.0004, norm:1.3714, tok/sec: 123082.43, flops:95.86, batch-reuse:1
@ 676 train 6.7401 , allloss: 6.7430, dt: 1053.00ms, fracRes: 0.7094, norm(attn): 0.1445, norm(output): 1.0234, norm(x): 0.4070, norm(y): 1.0003, norm:0.6794, tok/sec: 124475.32, flops:96.94, batch-reuse:1
@ 677 train 6.8589 , allloss: 6.8621, dt: 1060.05ms, fracRes: 0.7184, norm(attn): 0.1445, norm(output): 1.0391, norm(x): 0.3911, norm(y): 1.0002, norm:0.6932, tok/sec: 123646.50, flops:96.30, batch-reuse:1
@ 678 train 6.6739 , allloss: 6.6761, dt: 1079.41ms, fracRes: 0.6990, norm(attn): 0.1396, norm(output): 1.0078, norm(x): 0.4384, norm(y): 1.0004, norm:0.7357, tok/sec: 121429.00, flops:94.57, batch-reuse:1
@ 679 train 6.7366 , allloss: 6.7391, dt: 1052.11ms, fracRes: 0.7056, norm(attn): 0.1406, norm(output): 1.0078, norm(x): 0.4250, norm(y): 1.0003, norm:0.6206, tok/sec: 124580.67, flops:97.02, batch-reuse:1
@ 680 train 6.6984 , allloss: 6.7007, dt: 1056.32ms, fracRes: 0.7040, norm(attn): 0.1396, norm(output): 1.0156, norm(x): 0.4250, norm(y): 1.0003, norm:0.4373, tok/sec: 124083.48, flops:96.64, batch-reuse:1
@ 681 train 6.7227 , allloss: 6.7250, dt: 1063.99ms, fracRes: 0.7035, norm(attn): 0.1406, norm(output): 1.0234, norm(x): 0.4262, norm(y): 1.0003, norm:0.6467, tok/sec: 123188.78, flops:95.94, batch-reuse:1
@ 682 train 6.7543 , allloss: 6.7566, dt: 1063.66ms, fracRes: 0.7037, norm(attn): 0.1406, norm(output): 1.0156, norm(x): 0.4280, norm(y): 1.0003, norm:0.6048, tok/sec: 123227.14, flops:95.97, batch-reuse:1
@ 683 train 6.7046 , allloss: 6.7071, dt: 1055.63ms, fracRes: 0.7048, norm(attn): 0.1387, norm(output): 1.0156, norm(x): 0.4268, norm(y): 1.0003, norm:0.7318, tok/sec: 124164.33, flops:96.70, batch-reuse:1
@ 684 train 6.6644 , allloss: 6.6667, dt: 1064.25ms, fracRes: 0.7008, norm(attn): 0.1377, norm(output): 1.0078, norm(x): 0.4334, norm(y): 1.0004, norm:1.1661, tok/sec: 123159.39, flops:95.92, batch-reuse:1
@ 685 train 6.7830 , allloss: 6.7855, dt: 1060.57ms, fracRes: 0.7061, norm(attn): 0.1396, norm(output): 1.0469, norm(x): 0.4328, norm(y): 1.0003, norm:1.9078, tok/sec: 123586.71, flops:96.25, batch-reuse:1
@ 686 train 6.8158 , allloss: 6.8184, dt: 1041.91ms, fracRes: 0.7086, norm(attn): 0.1416, norm(output): 1.0391, norm(x): 0.4269, norm(y): 1.0003, norm:0.6943, tok/sec: 125800.09, flops:97.97, batch-reuse:1
@ 687 train 6.7917 , allloss: 6.7942, dt: 1054.81ms, fracRes: 0.6999, norm(attn): 0.1357, norm(output): 1.0000, norm(x): 0.4349, norm(y): 1.0004, norm:2.1633, tok/sec: 124260.76, flops:96.77, batch-reuse:1
@ 688 train 6.7709 , allloss: 6.7732, dt: 1048.08ms, fracRes: 0.7068, norm(attn): 0.1367, norm(output): 1.0234, norm(x): 0.4252, norm(y): 1.0003, norm:1.4931, tok/sec: 125058.96, flops:97.40, batch-reuse:1
@ 689 train 6.7889 , allloss: 6.7914, dt: 1067.17ms, fracRes: 0.7070, norm(attn): 0.1377, norm(output): 1.0312, norm(x): 0.4318, norm(y): 1.0003, norm:3.1948, tok/sec: 122822.19, flops:95.65, batch-reuse:1
@ 690 train 6.8068 , allloss: 6.8094, dt: 1074.01ms, fracRes: 0.7115, norm(attn): 0.1377, norm(output): 1.0469, norm(x): 0.4204, norm(y): 1.0003, norm:2.9907, tok/sec: 122040.22, flops:95.05, batch-reuse:1
@ 691 train 6.7498 , allloss: 6.7525, dt: 1075.44ms, fracRes: 0.7091, norm(attn): 0.1367, norm(output): 1.0234, norm(x): 0.4135, norm(y): 1.0003, norm:1.4095, tok/sec: 121877.92, flops:94.92, batch-reuse:1
@ 692 train 6.7101 , allloss: 6.7122, dt: 1086.49ms, fracRes: 0.7021, norm(attn): 0.1348, norm(output): 1.0000, norm(x): 0.4333, norm(y): 1.0004, norm:2.4511, tok/sec: 120638.13, flops:93.95, batch-reuse:1
@ 693 train 6.7500 , allloss: 6.7520, dt: 1054.22ms, fracRes: 0.7020, norm(attn): 0.1348, norm(output): 1.0000, norm(x): 0.4404, norm(y): 1.0004, norm:1.2442, tok/sec: 124330.23, flops:96.83, batch-reuse:1
@ 694 train 6.6931 , allloss: 6.6952, dt: 1055.34ms, fracRes: 0.7070, norm(attn): 0.1357, norm(output): 1.0078, norm(x): 0.4279, norm(y): 1.0003, norm:1.8259, tok/sec: 124199.22, flops:96.73, batch-reuse:1
@ 695 train 6.7602 , allloss: 6.7624, dt: 1047.69ms, fracRes: 0.7084, norm(attn): 0.1367, norm(output): 1.0234, norm(x): 0.4218, norm(y): 1.0003, norm:1.3554, tok/sec: 125105.58, flops:97.43, batch-reuse:1
@ 696 train 6.6151 , allloss: 6.6172, dt: 1059.86ms, fracRes: 0.7027, norm(attn): 0.1357, norm(output): 1.0078, norm(x): 0.4317, norm(y): 1.0004, norm:0.8280, tok/sec: 123669.47, flops:96.31, batch-reuse:1
@ 697 train 6.6535 , allloss: 6.6557, dt: 1044.44ms, fracRes: 0.7065, norm(attn): 0.1348, norm(output): 1.0156, norm(x): 0.4279, norm(y): 1.0003, norm:1.2519, tok/sec: 125494.54, flops:97.74, batch-reuse:1
@ 698 train 6.7263 , allloss: 6.7284, dt: 1047.58ms, fracRes: 0.7040, norm(attn): 0.1318, norm(output): 1.0000, norm(x): 0.4329, norm(y): 1.0003, norm:0.6227, tok/sec: 125118.30, flops:97.44, batch-reuse:1
@ 699 train 6.7523 , allloss: 6.7548, dt: 1074.75ms, fracRes: 0.7142, norm(attn): 0.1348, norm(output): 1.0078, norm(x): 0.4072, norm(y): 1.0002, norm:1.0907, tok/sec: 121955.84, flops:94.98, batch-reuse:1
@ 700 train 6.6920 , allloss: 6.6941, dt: 1056.39ms, fracRes: 0.7072, norm(attn): 0.1338, norm(output): 1.0078, norm(x): 0.4273, norm(y): 1.0003, norm:0.6759, tok/sec: 124075.64, flops:96.63, batch-reuse:1
@ 701 train 6.7924 , allloss: 6.7949, dt: 1057.39ms, fracRes: 0.7085, norm(attn): 0.1367, norm(output): 1.0156, norm(x): 0.4236, norm(y): 1.0003, norm:1.7378, tok/sec: 123957.58, flops:96.54, batch-reuse:1
@ 702 train 6.7726 , allloss: 6.7748, dt: 1052.56ms, fracRes: 0.7150, norm(attn): 0.1396, norm(output): 1.0312, norm(x): 0.4152, norm(y): 1.0002, norm:1.3762, tok/sec: 124527.11, flops:96.98, batch-reuse:1
@ 703 train 6.6983 , allloss: 6.7004, dt: 1064.91ms, fracRes: 0.7073, norm(attn): 0.1357, norm(output): 1.0156, norm(x): 0.4255, norm(y): 1.0003, norm:0.6134, tok/sec: 123083.21, flops:95.86, batch-reuse:1
@ 704 train 6.6440 , allloss: 6.6459, dt: 1052.41ms, fracRes: 0.7025, norm(attn): 0.1328, norm(output): 1.0000, norm(x): 0.4357, norm(y): 1.0003, norm:0.9739, tok/sec: 124544.26, flops:97.00, batch-reuse:1
@ 705 train 6.6776 , allloss: 6.6795, dt: 1049.23ms, fracRes: 0.7026, norm(attn): 0.1328, norm(output): 1.0000, norm(x): 0.4387, norm(y): 1.0003, norm:0.6032, tok/sec: 124922.22, flops:97.29, batch-reuse:1
@ 706 train 6.6882 , allloss: 6.6904, dt: 1043.49ms, fracRes: 0.7081, norm(attn): 0.1357, norm(output): 1.0078, norm(x): 0.4229, norm(y): 1.0003, norm:0.8537, tok/sec: 125609.52, flops:97.83, batch-reuse:1
@ 707 train 6.7043 , allloss: 6.7065, dt: 1042.54ms, fracRes: 0.7093, norm(attn): 0.1367, norm(output): 1.0156, norm(x): 0.4202, norm(y): 1.0002, norm:0.7520, tok/sec: 125723.96, flops:97.91, batch-reuse:1
@ 708 train 6.6902 , allloss: 6.6927, dt: 1039.87ms, fracRes: 0.7045, norm(attn): 0.1348, norm(output): 1.0078, norm(x): 0.4287, norm(y): 1.0003, norm:0.9081, tok/sec: 126046.70, flops:98.17, batch-reuse:1
@ 709 train 6.6993 , allloss: 6.7016, dt: 1049.53ms, fracRes: 0.7034, norm(attn): 0.1328, norm(output): 1.0000, norm(x): 0.4386, norm(y): 1.0003, norm:1.6176, tok/sec: 124886.40, flops:97.26, batch-reuse:1
@ 710 train 6.7604 , allloss: 6.7627, dt: 1047.33ms, fracRes: 0.7091, norm(attn): 0.1338, norm(output): 1.0000, norm(x): 0.4182, norm(y): 1.0002, norm:0.9352, tok/sec: 125149.26, flops:97.47, batch-reuse:1
@ 711 train 6.7584 , allloss: 6.7607, dt: 1055.33ms, fracRes: 0.7106, norm(attn): 0.1357, norm(output): 1.0078, norm(x): 0.4156, norm(y): 1.0002, norm:0.7224, tok/sec: 124199.84, flops:96.73, batch-reuse:1
@ 712 train 6.6702 , allloss: 6.6722, dt: 1073.31ms, fracRes: 0.7040, norm(attn): 0.1348, norm(output): 1.0156, norm(x): 0.4354, norm(y): 1.0003, norm:1.8546, tok/sec: 122119.27, flops:95.11, batch-reuse:1
@ 713 train 6.7360 , allloss: 6.7384, dt: 1057.73ms, fracRes: 0.7123, norm(attn): 0.1367, norm(output): 1.0078, norm(x): 0.4083, norm(y): 1.0002, norm:1.0857, tok/sec: 123918.40, flops:96.51, batch-reuse:1
@ 714 train 6.6098 , allloss: 6.6118, dt: 1050.04ms, fracRes: 0.6999, norm(attn): 0.1328, norm(output): 1.0000, norm(x): 0.4418, norm(y): 1.0003, norm:1.0329, tok/sec: 124825.38, flops:97.21, batch-reuse:1
@ 715 train 6.6439 , allloss: 6.6459, dt: 1061.15ms, fracRes: 0.7022, norm(attn): 0.1328, norm(output): 0.9922, norm(x): 0.4304, norm(y): 1.0003, norm:1.5785, tok/sec: 123518.76, flops:96.20, batch-reuse:1
@ 716 train 6.6972 , allloss: 6.6992, dt: 1058.54ms, fracRes: 0.7069, norm(attn): 0.1348, norm(output): 1.0000, norm(x): 0.4278, norm(y): 1.0003, norm:1.2037, tok/sec: 123823.28, flops:96.43, batch-reuse:1
@ 717 train 6.5473 , allloss: 6.5494, dt: 1056.48ms, fracRes: 0.7003, norm(attn): 0.1328, norm(output): 1.0000, norm(x): 0.4419, norm(y): 1.0003, norm:0.8322, tok/sec: 124064.83, flops:96.62, batch-reuse:1
@ 718 train 6.6968 , allloss: 6.6990, dt: 1043.87ms, fracRes: 0.7056, norm(attn): 0.1348, norm(output): 1.0078, norm(x): 0.4307, norm(y): 1.0002, norm:0.5342, tok/sec: 125563.82, flops:97.79, batch-reuse:1
@ 719 train 6.6410 , allloss: 6.6435, dt: 1049.04ms, fracRes: 0.7046, norm(attn): 0.1348, norm(output): 1.0000, norm(x): 0.4281, norm(y): 1.0003, norm:0.9740, tok/sec: 124945.07, flops:97.31, batch-reuse:1
@ 720 train 6.6228 , allloss: 6.6249, dt: 1053.98ms, fracRes: 0.7021, norm(attn): 0.1348, norm(output): 1.0000, norm(x): 0.4387, norm(y): 1.0003, norm:0.7213, tok/sec: 124358.55, flops:96.85, batch-reuse:1
@ 721 train 6.5763 , allloss: 6.5785, dt: 1048.52ms, fracRes: 0.7023, norm(attn): 0.1338, norm(output): 1.0000, norm(x): 0.4356, norm(y): 1.0003, norm:2.8424, tok/sec: 125007.21, flops:97.36, batch-reuse:1
@ 722 train 6.6853 , allloss: 6.6895, dt: 1047.40ms, fracRes: 0.7082, norm(attn): 0.1328, norm(output): 1.0000, norm(x): 0.4213, norm(y): 1.0002, norm:1.7433, tok/sec: 125140.92, flops:97.46, batch-reuse:1
@ 723 train 6.6966 , allloss: 6.6995, dt: 1051.35ms, fracRes: 0.7108, norm(attn): 0.1328, norm(output): 0.9961, norm(x): 0.4165, norm(y): 1.0002, norm:1.5049, tok/sec: 124670.45, flops:97.09, batch-reuse:1
@ 724 train 6.6971 , allloss: 6.6994, dt: 1049.51ms, fracRes: 0.7071, norm(attn): 0.1328, norm(output): 0.9961, norm(x): 0.4248, norm(y): 1.0002, norm:1.7876, tok/sec: 124888.62, flops:97.26, batch-reuse:1
@ 725 train 6.6766 , allloss: 6.6788, dt: 1065.41ms, fracRes: 0.7039, norm(attn): 0.1348, norm(output): 1.0000, norm(x): 0.4362, norm(y): 1.0003, norm:1.6003, tok/sec: 123024.98, flops:95.81, batch-reuse:1
@ 726 train 6.6981 , allloss: 6.7012, dt: 1058.22ms, fracRes: 0.7088, norm(attn): 0.1338, norm(output): 1.0000, norm(x): 0.4177, norm(y): 1.0002, norm:1.5157, tok/sec: 123860.58, flops:96.46, batch-reuse:1
@ 727 train 6.7151 , allloss: 6.7179, dt: 1063.05ms, fracRes: 0.7096, norm(attn): 0.1348, norm(output): 1.0000, norm(x): 0.4207, norm(y): 1.0002, norm:1.9874, tok/sec: 123297.64, flops:96.02, batch-reuse:1
@ 728 train 6.6920 , allloss: 6.6971, dt: 1045.13ms, fracRes: 0.7079, norm(attn): 0.1318, norm(output): 0.9922, norm(x): 0.4263, norm(y): 1.0002, norm:1.0269, tok/sec: 125412.58, flops:97.67, batch-reuse:1
@ 729 train 6.6631 , allloss: 6.6947, dt: 1056.00ms, fracRes: 0.7065, norm(attn): 0.1309, norm(output): 0.9961, norm(x): 0.4376, norm(y): 1.0003, norm:1.5399, tok/sec: 124120.88, flops:96.67, batch-reuse:1
@ 730 train 6.6639 , allloss: 6.6819, dt: 1064.45ms, fracRes: 0.7068, norm(attn): 0.1318, norm(output): 0.9883, norm(x): 0.4306, norm(y): 1.0002, norm:1.5250, tok/sec: 123135.34, flops:95.90, batch-reuse:1
@ 731 train 6.6863 , allloss: 6.6937, dt: 1052.66ms, fracRes: 0.7098, norm(attn): 0.1338, norm(output): 0.9922, norm(x): 0.4240, norm(y): 1.0002, norm:0.9457, tok/sec: 124514.45, flops:96.97, batch-reuse:1
@ 732 train 6.6441 , allloss: 6.6486, dt: 1055.59ms, fracRes: 0.7107, norm(attn): 0.1318, norm(output): 0.9961, norm(x): 0.4210, norm(y): 1.0002, norm:1.1313, tok/sec: 124169.18, flops:96.70, batch-reuse:1
@ 733 train 6.6943 , allloss: 6.6975, dt: 1064.79ms, fracRes: 0.7087, norm(attn): 0.1279, norm(output): 1.0000, norm(x): 0.4317, norm(y): 1.0002, norm:2.0064, tok/sec: 123096.60, flops:95.87, batch-reuse:1
@ 734 train 6.6769 , allloss: 6.6799, dt: 1050.86ms, fracRes: 0.7069, norm(attn): 0.1270, norm(output): 0.9961, norm(x): 0.4297, norm(y): 1.0002, norm:1.3738, tok/sec: 124728.50, flops:97.14, batch-reuse:1
@ 735 train 6.6628 , allloss: 6.6659, dt: 1064.53ms, fracRes: 0.7054, norm(attn): 0.1309, norm(output): 0.9961, norm(x): 0.4329, norm(y): 1.0002, norm:0.4900, tok/sec: 123126.32, flops:95.89, batch-reuse:1
@ 736 train 6.7142 , allloss: 6.7177, dt: 1061.11ms, fracRes: 0.7115, norm(attn): 0.1328, norm(output): 1.0000, norm(x): 0.4174, norm(y): 1.0002, norm:0.7463, tok/sec: 123523.95, flops:96.20, batch-reuse:1
@ 737 train 6.6289 , allloss: 6.6334, dt: 1046.08ms, fracRes: 0.7066, norm(attn): 0.1279, norm(output): 0.9961, norm(x): 0.4282, norm(y): 1.0002, norm:0.8048, tok/sec: 125298.67, flops:97.58, batch-reuse:1
@ 738 train 6.6912 , allloss: 6.6952, dt: 1052.87ms, fracRes: 0.7077, norm(attn): 0.1279, norm(output): 1.0000, norm(x): 0.4321, norm(y): 1.0002, norm:2.0215, tok/sec: 124490.68, flops:96.95, batch-reuse:1
@ 739 train 6.6909 , allloss: 6.6950, dt: 1052.89ms, fracRes: 0.7083, norm(attn): 0.1270, norm(output): 0.9922, norm(x): 0.4214, norm(y): 1.0002, norm:1.6293, tok/sec: 124487.69, flops:96.95, batch-reuse:1
@ 740 train 6.6054 , allloss: 6.6092, dt: 1049.94ms, fracRes: 0.7069, norm(attn): 0.1289, norm(output): 0.9961, norm(x): 0.4313, norm(y): 1.0002, norm:0.9196, tok/sec: 124837.06, flops:97.22, batch-reuse:1
@ 741 train 6.7281 , allloss: 6.7319, dt: 1060.13ms, fracRes: 0.7110, norm(attn): 0.1318, norm(output): 0.9961, norm(x): 0.4179, norm(y): 1.0002, norm:1.3939, tok/sec: 123637.93, flops:96.29, batch-reuse:1
@ 742 train 6.8008 , allloss: 6.8048, dt: 1051.70ms, fracRes: 0.7156, norm(attn): 0.1328, norm(output): 1.0000, norm(x): 0.4134, norm(y): 1.0001, norm:1.8577, tok/sec: 124628.40, flops:97.06, batch-reuse:1
@ 743 train 6.7779 , allloss: 6.7820, dt: 1063.55ms, fracRes: 0.7188, norm(attn): 0.1318, norm(output): 0.9922, norm(x): 0.3993, norm(y): 1.0001, norm:1.1732, tok/sec: 123239.95, flops:95.98, batch-reuse:1
@ 744 train 6.7582 , allloss: 6.7627, dt: 1068.65ms, fracRes: 0.7133, norm(attn): 0.1299, norm(output): 0.9883, norm(x): 0.4109, norm(y): 1.0001, norm:1.8032, tok/sec: 122651.72, flops:95.52, batch-reuse:1
@ 745 train 6.7365 , allloss: 6.7407, dt: 1054.33ms, fracRes: 0.7111, norm(attn): 0.1299, norm(output): 1.0000, norm(x): 0.4259, norm(y): 1.0002, norm:1.9956, tok/sec: 124317.97, flops:96.82, batch-reuse:1
@ 746 train 6.7865 , allloss: 6.7903, dt: 1052.39ms, fracRes: 0.7136, norm(attn): 0.1318, norm(output): 1.0000, norm(x): 0.4172, norm(y): 1.0002, norm:1.2235, tok/sec: 124546.41, flops:97.00, batch-reuse:1
@ 747 train 6.7532 , allloss: 6.7569, dt: 1054.10ms, fracRes: 0.7115, norm(attn): 0.1279, norm(output): 0.9961, norm(x): 0.4193, norm(y): 1.0002, norm:1.2202, tok/sec: 124344.91, flops:96.84, batch-reuse:1
@ 748 train 6.8251 , allloss: 6.8287, dt: 1047.95ms, fracRes: 0.7134, norm(attn): 0.1289, norm(output): 1.0000, norm(x): 0.4223, norm(y): 1.0002, norm:2.6162, tok/sec: 125075.18, flops:97.41, batch-reuse:1
@ 749 train 6.9022 , allloss: 6.9058, dt: 1061.77ms, fracRes: 0.7266, norm(attn): 0.1309, norm(output): 0.9922, norm(x): 0.3901, norm(y): 1.0000, norm:1.4728, tok/sec: 123446.20, flops:96.14, batch-reuse:1
@ 750 train 6.8648 , allloss: 6.8681, dt: 1045.42ms, fracRes: 0.7135, norm(attn): 0.1289, norm(output): 0.9922, norm(x): 0.4096, norm(y): 1.0001, norm:3.5203, tok/sec: 125376.94, flops:97.64, batch-reuse:1
@ 751 train 6.7932 , allloss: 6.7962, dt: 1057.67ms, fracRes: 0.7139, norm(attn): 0.1328, norm(output): 1.0000, norm(x): 0.4125, norm(y): 1.0001, norm:2.8072, tok/sec: 123925.36, flops:96.51, batch-reuse:1
@ 752 train 6.7910 , allloss: 6.7939, dt: 1044.55ms, fracRes: 0.7180, norm(attn): 0.1348, norm(output): 1.0078, norm(x): 0.4115, norm(y): 1.0001, norm:3.1090, tok/sec: 125481.45, flops:97.73, batch-reuse:1
@ 753 train 6.8139 , allloss: 6.8167, dt: 1065.12ms, fracRes: 0.7166, norm(attn): 0.1338, norm(output): 1.0078, norm(x): 0.4137, norm(y): 1.0001, norm:2.6891, tok/sec: 123058.16, flops:95.84, batch-reuse:1
@ 754 train 6.8040 , allloss: 6.8068, dt: 1057.32ms, fracRes: 0.7127, norm(attn): 0.1328, norm(output): 0.9961, norm(x): 0.4114, norm(y): 1.0001, norm:6.0315, tok/sec: 123966.63, flops:96.55, batch-reuse:1
@ 755 train 6.8724 , allloss: 6.8752, dt: 1059.30ms, fracRes: 0.7157, norm(attn): 0.1328, norm(output): 0.9922, norm(x): 0.4102, norm(y): 1.0001, norm:1.5718, tok/sec: 123734.21, flops:96.36, batch-reuse:1
@ 756 train 6.7651 , allloss: 6.7676, dt: 1069.37ms, fracRes: 0.7165, norm(attn): 0.1318, norm(output): 1.0000, norm(x): 0.4230, norm(y): 1.0002, norm:1.8925, tok/sec: 122569.39, flops:95.46, batch-reuse:1
@ 757 train 6.7989 , allloss: 6.8016, dt: 1062.35ms, fracRes: 0.7219, norm(attn): 0.1299, norm(output): 1.0078, norm(x): 0.4114, norm(y): 1.0001, norm:1.6297, tok/sec: 123379.27, flops:96.09, batch-reuse:1
@ 758 train 6.7092 , allloss: 6.7117, dt: 1043.12ms, fracRes: 0.7124, norm(attn): 0.1270, norm(output): 1.0000, norm(x): 0.4174, norm(y): 1.0001, norm:1.7532, tok/sec: 125653.22, flops:97.86, batch-reuse:1
@ 759 train 6.7932 , allloss: 6.7958, dt: 1043.39ms, fracRes: 0.7180, norm(attn): 0.1279, norm(output): 1.0000, norm(x): 0.4099, norm(y): 1.0001, norm:0.9522, tok/sec: 125621.37, flops:97.83, batch-reuse:1
@ 760 train 6.7719 , allloss: 6.7744, dt: 1044.02ms, fracRes: 0.7171, norm(attn): 0.1270, norm(output): 1.0156, norm(x): 0.4214, norm(y): 1.0001, norm:1.7636, tok/sec: 125545.18, flops:97.78, batch-reuse:1
@ 761 train 6.7764 , allloss: 6.7788, dt: 1069.02ms, fracRes: 0.7181, norm(attn): 0.1260, norm(output): 1.0078, norm(x): 0.4205, norm(y): 1.0001, norm:1.0741, tok/sec: 122610.04, flops:95.49, batch-reuse:1
@ 762 train 6.7745 , allloss: 6.7769, dt: 1092.87ms, fracRes: 0.7197, norm(attn): 0.1260, norm(output): 1.0078, norm(x): 0.4109, norm(y): 1.0001, norm:1.6699, tok/sec: 119934.28, flops:93.41, batch-reuse:1
@ 763 train 6.7999 , allloss: 6.8025, dt: 1070.29ms, fracRes: 0.7236, norm(attn): 0.1289, norm(output): 1.0078, norm(x): 0.4074, norm(y): 1.0001, norm:0.9007, tok/sec: 122463.89, flops:95.38, batch-reuse:1
@ 764 train 6.7527 , allloss: 6.7551, dt: 1057.97ms, fracRes: 0.7206, norm(attn): 0.1309, norm(output): 1.0000, norm(x): 0.4130, norm(y): 1.0001, norm:0.8862, tok/sec: 123889.83, flops:96.49, batch-reuse:1
@ 765 train 6.7318 , allloss: 6.7339, dt: 1058.96ms, fracRes: 0.7165, norm(attn): 0.1289, norm(output): 0.9961, norm(x): 0.4186, norm(y): 1.0001, norm:1.3915, tok/sec: 123774.05, flops:96.40, batch-reuse:1
@ 766 train 6.6866 , allloss: 6.6889, dt: 1060.06ms, fracRes: 0.7162, norm(attn): 0.1279, norm(output): 1.0078, norm(x): 0.4258, norm(y): 1.0001, norm:1.1615, tok/sec: 123645.55, flops:96.30, batch-reuse:1
@ 767 train 6.7683 , allloss: 6.7705, dt: 1047.78ms, fracRes: 0.7185, norm(attn): 0.1279, norm(output): 1.0078, norm(x): 0.4178, norm(y): 1.0001, norm:1.3438, tok/sec: 125095.19, flops:97.42, batch-reuse:1
@ 768 train 6.8408 , allloss: 6.8436, dt: 1057.44ms, fracRes: 0.7238, norm(attn): 0.1270, norm(output): 1.0078, norm(x): 0.4076, norm(y): 1.0000, norm:0.6534, tok/sec: 123951.62, flops:96.53, batch-reuse:1
@ 769 train 6.7104 , allloss: 6.7128, dt: 1062.14ms, fracRes: 0.7138, norm(attn): 0.1250, norm(output): 1.0000, norm(x): 0.4315, norm(y): 1.0001, norm:1.2216, tok/sec: 123403.72, flops:96.11, batch-reuse:1
@ 770 train 6.7148 , allloss: 6.7170, dt: 1069.93ms, fracRes: 0.7159, norm(attn): 0.1245, norm(output): 0.9922, norm(x): 0.4177, norm(y): 1.0001, norm:1.4473, tok/sec: 122505.69, flops:95.41, batch-reuse:1
@ 771 train 6.6734 , allloss: 6.6762, dt: 1067.18ms, fracRes: 0.7154, norm(attn): 0.1260, norm(output): 1.0000, norm(x): 0.4238, norm(y): 1.0001, norm:0.8108, tok/sec: 122821.23, flops:95.65, batch-reuse:1
@ 772 train 6.6982 , allloss: 6.7010, dt: 1060.71ms, fracRes: 0.7153, norm(attn): 0.1270, norm(output): 1.0000, norm(x): 0.4214, norm(y): 1.0001, norm:0.5207, tok/sec: 123569.48, flops:96.24, batch-reuse:1
@ 773 train 6.8123 , allloss: 6.8154, dt: 1062.93ms, fracRes: 0.7237, norm(attn): 0.1299, norm(output): 1.0000, norm(x): 0.4076, norm(y): 1.0000, norm:1.1194, tok/sec: 123312.49, flops:96.04, batch-reuse:1
@ 774 train 6.7132 , allloss: 6.7172, dt: 1052.61ms, fracRes: 0.7261, norm(attn): 0.1299, norm(output): 0.9961, norm(x): 0.4003, norm(y): 1.0000, norm:1.7409, tok/sec: 124521.36, flops:96.98, batch-reuse:1
@ 775 train 6.7994 , allloss: 6.8029, dt: 1046.88ms, fracRes: 0.7247, norm(attn): 0.1299, norm(output): 0.9961, norm(x): 0.4027, norm(y): 1.0000, norm:0.7770, tok/sec: 125203.02, flops:97.51, batch-reuse:1
@ 776 train 6.6114 , allloss: 6.6141, dt: 1045.18ms, fracRes: 0.7133, norm(attn): 0.1289, norm(output): 1.0000, norm(x): 0.4245, norm(y): 1.0001, norm:0.7076, tok/sec: 125406.14, flops:97.67, batch-reuse:1
@ 777 train 6.6926 , allloss: 6.6961, dt: 1040.74ms, fracRes: 0.7164, norm(attn): 0.1318, norm(output): 0.9961, norm(x): 0.4204, norm(y): 1.0001, norm:1.2861, tok/sec: 125940.64, flops:98.08, batch-reuse:1
@ 778 train 6.6908 , allloss: 6.6931, dt: 1049.35ms, fracRes: 0.7162, norm(attn): 0.1309, norm(output): 0.9883, norm(x): 0.4161, norm(y): 1.0001, norm:1.5159, tok/sec: 124907.74, flops:97.28, batch-reuse:1
@ 779 train 6.7247 , allloss: 6.7277, dt: 1058.19ms, fracRes: 0.7181, norm(attn): 0.1279, norm(output): 0.9922, norm(x): 0.4159, norm(y): 1.0001, norm:0.5853, tok/sec: 123864.57, flops:96.47, batch-reuse:1
@ 780 train 6.7072 , allloss: 6.7094, dt: 1059.12ms, fracRes: 0.7160, norm(attn): 0.1270, norm(output): 1.0000, norm(x): 0.4263, norm(y): 1.0001, norm:1.2899, tok/sec: 123755.35, flops:96.38, batch-reuse:1
@ 781 train 6.6910 , allloss: 6.6932, dt: 1064.61ms, fracRes: 0.7145, norm(attn): 0.1279, norm(output): 0.9922, norm(x): 0.4210, norm(y): 1.0001, norm:1.5991, tok/sec: 123117.47, flops:95.88, batch-reuse:1
@ 782 train 6.6709 , allloss: 6.6730, dt: 1058.15ms, fracRes: 0.7168, norm(attn): 0.1318, norm(output): 0.9961, norm(x): 0.4166, norm(y): 1.0001, norm:0.7575, tok/sec: 123868.45, flops:96.47, batch-reuse:1
@ 783 train 6.6629 , allloss: 6.6650, dt: 1060.32ms, fracRes: 0.7143, norm(attn): 0.1309, norm(output): 0.9922, norm(x): 0.4222, norm(y): 1.0001, norm:1.0334, tok/sec: 123615.89, flops:96.27, batch-reuse:1
@ 784 train 6.6898 , allloss: 6.6920, dt: 1041.18ms, fracRes: 0.7184, norm(attn): 0.1270, norm(output): 0.9766, norm(x): 0.4042, norm(y): 1.0001, norm:1.9016, tok/sec: 125888.38, flops:98.04, batch-reuse:1
@ 785 train 6.6944 , allloss: 6.6965, dt: 1058.08ms, fracRes: 0.7165, norm(attn): 0.1270, norm(output): 0.9883, norm(x): 0.4128, norm(y): 1.0001, norm:1.0249, tok/sec: 123877.44, flops:96.48, batch-reuse:1
@ 786 train 6.7211 , allloss: 6.7232, dt: 1058.05ms, fracRes: 0.7171, norm(attn): 0.1289, norm(output): 0.9961, norm(x): 0.4211, norm(y): 1.0001, norm:2.8953, tok/sec: 123880.90, flops:96.48, batch-reuse:1
@ 787 train 6.7168 , allloss: 6.7188, dt: 1063.28ms, fracRes: 0.7148, norm(attn): 0.1299, norm(output): 0.9883, norm(x): 0.4253, norm(y): 1.0001, norm:2.1597, tok/sec: 123271.68, flops:96.00, batch-reuse:1
@ 788 train 6.7831 , allloss: 6.7850, dt: 1066.70ms, fracRes: 0.7167, norm(attn): 0.1318, norm(output): 0.9609, norm(x): 0.4116, norm(y): 1.0001, norm:2.5116, tok/sec: 122875.92, flops:95.70, batch-reuse:1
@ 789 train 6.6775 , allloss: 6.6793, dt: 1044.74ms, fracRes: 0.7114, norm(attn): 0.1318, norm(output): 0.9766, norm(x): 0.4231, norm(y): 1.0001, norm:2.1303, tok/sec: 125459.23, flops:97.71, batch-reuse:1
@ 790 train 6.6878 , allloss: 6.6897, dt: 1046.26ms, fracRes: 0.7191, norm(attn): 0.1318, norm(output): 0.9961, norm(x): 0.4170, norm(y): 1.0001, norm:1.7354, tok/sec: 125276.23, flops:97.57, batch-reuse:1
@ 791 train 6.8080 , allloss: 6.8101, dt: 1056.66ms, fracRes: 0.7248, norm(attn): 0.1309, norm(output): 0.9805, norm(x): 0.3985, norm(y): 1.0000, norm:1.5693, tok/sec: 124043.30, flops:96.61, batch-reuse:1
@ 792 train 6.7530 , allloss: 6.7552, dt: 1054.75ms, fracRes: 0.7185, norm(attn): 0.1270, norm(output): 0.9688, norm(x): 0.4085, norm(y): 1.0000, norm:1.5994, tok/sec: 124267.84, flops:96.78, batch-reuse:1
@ 793 train 6.7530 , allloss: 6.7549, dt: 1060.89ms, fracRes: 0.7193, norm(attn): 0.1270, norm(output): 0.9883, norm(x): 0.4138, norm(y): 1.0001, norm:1.6275, tok/sec: 123549.54, flops:96.22, batch-reuse:1
@ 794 train 6.8248 , allloss: 6.8269, dt: 1073.77ms, fracRes: 0.7342, norm(attn): 0.1299, norm(output): 0.9961, norm(x): 0.3878, norm(y): 0.9999, norm:1.0602, tok/sec: 122067.65, flops:95.07, batch-reuse:1
@ 795 train 6.6595 , allloss: 6.6613, dt: 1041.57ms, fracRes: 0.7201, norm(attn): 0.1270, norm(output): 0.9805, norm(x): 0.4076, norm(y): 1.0000, norm:1.0503, tok/sec: 125840.72, flops:98.01, batch-reuse:1
@ 796 train 6.6149 , allloss: 6.6169, dt: 1043.29ms, fracRes: 0.7201, norm(attn): 0.1279, norm(output): 0.9727, norm(x): 0.4048, norm(y): 1.0000, norm:1.1485, tok/sec: 125633.37, flops:97.84, batch-reuse:1
@ 797 train 6.7238 , allloss: 6.7255, dt: 1056.09ms, fracRes: 0.7208, norm(attn): 0.1289, norm(output): 0.9922, norm(x): 0.4103, norm(y): 1.0000, norm:1.2219, tok/sec: 124110.17, flops:96.66, batch-reuse:1
@ 798 train 6.7264 , allloss: 6.7284, dt: 1063.74ms, fracRes: 0.7271, norm(attn): 0.1309, norm(output): 0.9844, norm(x): 0.3916, norm(y): 1.0000, norm:2.9799, tok/sec: 123217.77, flops:95.96, batch-reuse:1
@ 799 train 6.7317 , allloss: 6.7340, dt: 1052.99ms, fracRes: 0.7234, norm(attn): 0.1279, norm(output): 0.9844, norm(x): 0.3960, norm(y): 1.0000, norm:0.9559, tok/sec: 124476.44, flops:96.94, batch-reuse:1
@ 800 train 6.6786 , allloss: 6.6842, dt: 1065.44ms, fracRes: 0.7202, norm(attn): 0.1279, norm(output): 0.9766, norm(x): 0.4062, norm(y): 1.0000, norm:1.8765, tok/sec: 123021.21, flops:95.81, batch-reuse:1
@ 801 train 6.6754 , allloss: 6.6776, dt: 1046.63ms, fracRes: 0.7187, norm(attn): 0.1270, norm(output): 0.9766, norm(x): 0.4123, norm(y): 1.0001, norm:1.0477, tok/sec: 125232.68, flops:97.53, batch-reuse:1
@ 802 train 6.7207 , allloss: 6.7226, dt: 1052.07ms, fracRes: 0.7235, norm(attn): 0.1279, norm(output): 0.9766, norm(x): 0.3965, norm(y): 1.0000, norm:1.7959, tok/sec: 124585.05, flops:97.03, batch-reuse:1
@ 803 train 6.7633 , allloss: 6.7652, dt: 1054.90ms, fracRes: 0.7249, norm(attn): 0.1279, norm(output): 0.9883, norm(x): 0.3977, norm(y): 1.0000, norm:0.9541, tok/sec: 124250.25, flops:96.77, batch-reuse:1
@ 804 train 6.6750 , allloss: 6.6785, dt: 1051.22ms, fracRes: 0.7210, norm(attn): 0.1250, norm(output): 0.9922, norm(x): 0.4127, norm(y): 1.0001, norm:2.3513, tok/sec: 124685.95, flops:97.11, batch-reuse:1
@ 805 train 6.7268 , allloss: 6.7369, dt: 1064.30ms, fracRes: 0.7236, norm(attn): 0.1235, norm(output): 0.9844, norm(x): 0.4041, norm(y): 1.0001, norm:0.9710, tok/sec: 123152.91, flops:95.91, batch-reuse:1
@ 806 train 6.6506 , allloss: 6.6726, dt: 1040.12ms, fracRes: 0.7204, norm(attn): 0.1216, norm(output): 0.9570, norm(x): 0.4098, norm(y): 1.0001, norm:2.0552, tok/sec: 126016.21, flops:98.14, batch-reuse:1
@ 807 train 6.6888 , allloss: 6.6921, dt: 1053.88ms, fracRes: 0.7259, norm(attn): 0.1235, norm(output): 0.9609, norm(x): 0.3985, norm(y): 1.0000, norm:1.1336, tok/sec: 124371.38, flops:96.86, batch-reuse:1
@ 808 train 6.6959 , allloss: 6.6986, dt: 1052.01ms, fracRes: 0.7265, norm(attn): 0.1250, norm(output): 0.9844, norm(x): 0.4027, norm(y): 1.0000, norm:2.5618, tok/sec: 124592.44, flops:97.03, batch-reuse:1
@ 809 train 6.6793 , allloss: 6.6820, dt: 1055.21ms, fracRes: 0.7239, norm(attn): 0.1250, norm(output): 0.9844, norm(x): 0.4048, norm(y): 1.0000, norm:1.4617, tok/sec: 124213.68, flops:96.74, batch-reuse:1
@ 810 train 6.7520 , allloss: 6.7545, dt: 1057.65ms, fracRes: 0.7243, norm(attn): 0.1250, norm(output): 0.9688, norm(x): 0.3949, norm(y): 1.0000, norm:2.6955, tok/sec: 123928.04, flops:96.52, batch-reuse:1
@ 811 train 6.7503 , allloss: 6.7525, dt: 1049.20ms, fracRes: 0.7235, norm(attn): 0.1250, norm(output): 0.9766, norm(x): 0.3971, norm(y): 1.0000, norm:2.2107, tok/sec: 124925.14, flops:97.29, batch-reuse:1
@ 812 train 6.5874 , allloss: 6.5899, dt: 1055.47ms, fracRes: 0.7205, norm(attn): 0.1245, norm(output): 0.9922, norm(x): 0.4132, norm(y): 1.0001, norm:1.3202, tok/sec: 124182.95, flops:96.71, batch-reuse:1
@ 813 train 6.8002 , allloss: 6.8031, dt: 1050.15ms, fracRes: 0.7337, norm(attn): 0.1289, norm(output): 0.9922, norm(x): 0.3831, norm(y): 0.9999, norm:1.0708, tok/sec: 124812.09, flops:97.20, batch-reuse:1
@ 814 train 6.7484 , allloss: 6.7513, dt: 1062.66ms, fracRes: 0.7271, norm(attn): 0.1270, norm(output): 0.9688, norm(x): 0.3883, norm(y): 1.0000, norm:1.1889, tok/sec: 123342.84, flops:96.06, batch-reuse:1
@ 815 train 6.6113 , allloss: 6.6142, dt: 1065.28ms, fracRes: 0.7214, norm(attn): 0.1240, norm(output): 0.9922, norm(x): 0.4039, norm(y): 1.0000, norm:1.1404, tok/sec: 123039.93, flops:95.82, batch-reuse:1
@ 816 train 6.6852 , allloss: 6.6883, dt: 1047.24ms, fracRes: 0.7266, norm(attn): 0.1250, norm(output): 0.9961, norm(x): 0.4003, norm(y): 1.0000, norm:2.2232, tok/sec: 125159.35, flops:97.47, batch-reuse:1
@ 817 train 6.6178 , allloss: 6.6204, dt: 1063.66ms, fracRes: 0.7231, norm(attn): 0.1250, norm(output): 0.9922, norm(x): 0.4059, norm(y): 1.0000, norm:1.3029, tok/sec: 123227.03, flops:95.97, batch-reuse:1
@ 818 train 6.6540 , allloss: 6.6568, dt: 1061.71ms, fracRes: 0.7206, norm(attn): 0.1250, norm(output): 0.9688, norm(x): 0.4009, norm(y): 1.0000, norm:1.9959, tok/sec: 123453.83, flops:96.15, batch-reuse:1
@ 819 train 6.7424 , allloss: 6.7452, dt: 1056.90ms, fracRes: 0.7297, norm(attn): 0.1279, norm(output): 0.9766, norm(x): 0.3839, norm(y): 0.9999, norm:1.5704, tok/sec: 124015.04, flops:96.58, batch-reuse:1
@ 820 train 6.7850 , allloss: 6.7879, dt: 1053.00ms, fracRes: 0.7319, norm(attn): 0.1289, norm(output): 0.9922, norm(x): 0.3871, norm(y): 0.9999, norm:1.2881, tok/sec: 124475.34, flops:96.94, batch-reuse:1
@ 821 train 6.7288 , allloss: 6.7315, dt: 1049.64ms, fracRes: 0.7304, norm(attn): 0.1270, norm(output): 0.9844, norm(x): 0.3853, norm(y): 0.9999, norm:1.4945, tok/sec: 124872.76, flops:97.25, batch-reuse:1
@ 822 train 6.7804 , allloss: 6.7848, dt: 1048.42ms, fracRes: 0.7360, norm(attn): 0.1270, norm(output): 0.9688, norm(x): 0.3707, norm(y): 0.9998, norm:1.6001, tok/sec: 125018.83, flops:97.37, batch-reuse:1
@ 823 train 6.6224 , allloss: 6.6247, dt: 1058.07ms, fracRes: 0.7252, norm(attn): 0.1226, norm(output): 0.9688, norm(x): 0.3923, norm(y): 1.0000, norm:1.2701, tok/sec: 123878.78, flops:96.48, batch-reuse:1
@ 824 train 6.8121 , allloss: 6.8147, dt: 1046.99ms, fracRes: 0.7350, norm(attn): 0.1279, norm(output): 0.9883, norm(x): 0.3816, norm(y): 0.9999, norm:1.4565, tok/sec: 125189.16, flops:97.50, batch-reuse:1
@ 825 train 6.6806 , allloss: 6.6828, dt: 1051.81ms, fracRes: 0.7243, norm(attn): 0.1250, norm(output): 0.9883, norm(x): 0.3963, norm(y): 1.0000, norm:1.1358, tok/sec: 124615.63, flops:97.05, batch-reuse:1
@ 826 train 6.6355 , allloss: 6.6375, dt: 1048.29ms, fracRes: 0.7213, norm(attn): 0.1245, norm(output): 0.9844, norm(x): 0.4025, norm(y): 1.0000, norm:0.8181, tok/sec: 125033.96, flops:97.38, batch-reuse:1
@ 827 train 6.7330 , allloss: 6.7351, dt: 1067.68ms, fracRes: 0.7325, norm(attn): 0.1235, norm(output): 0.9688, norm(x): 0.3811, norm(y): 0.9999, norm:1.0372, tok/sec: 122763.03, flops:95.61, batch-reuse:1
@ 828 train 6.6450 , allloss: 6.6470, dt: 1064.93ms, fracRes: 0.7226, norm(attn): 0.1226, norm(output): 0.9727, norm(x): 0.4028, norm(y): 1.0000, norm:1.0793, tok/sec: 123080.48, flops:95.86, batch-reuse:1
@ 829 train 6.6649 , allloss: 6.6667, dt: 1049.50ms, fracRes: 0.7241, norm(attn): 0.1250, norm(output): 0.9766, norm(x): 0.3961, norm(y): 1.0000, norm:0.8326, tok/sec: 124890.18, flops:97.26, batch-reuse:1
@ 830 train 6.6628 , allloss: 6.6645, dt: 1046.30ms, fracRes: 0.7262, norm(attn): 0.1270, norm(output): 0.9766, norm(x): 0.3918, norm(y): 1.0000, norm:0.7114, tok/sec: 125271.66, flops:97.56, batch-reuse:1
@ 831 train 6.7097 , allloss: 6.7114, dt: 1058.98ms, fracRes: 0.7274, norm(attn): 0.1260, norm(output): 0.9727, norm(x): 0.3958, norm(y): 1.0000, norm:0.9151, tok/sec: 123772.21, flops:96.39, batch-reuse:1
@ 832 train 6.6910 , allloss: 6.6928, dt: 1047.63ms, fracRes: 0.7270, norm(attn): 0.1226, norm(output): 0.9766, norm(x): 0.3926, norm(y): 1.0000, norm:0.8497, tok/sec: 125113.15, flops:97.44, batch-reuse:1
@ 833 train 6.5954 , allloss: 6.5971, dt: 1045.37ms, fracRes: 0.7254, norm(attn): 0.1221, norm(output): 0.9766, norm(x): 0.3982, norm(y): 1.0000, norm:1.2665, tok/sec: 125382.97, flops:97.65, batch-reuse:1
@ 834 train 6.6242 , allloss: 6.6257, dt: 1054.43ms, fracRes: 0.7259, norm(attn): 0.1211, norm(output): 0.9531, norm(x): 0.3933, norm(y): 1.0000, norm:1.5768, tok/sec: 124306.42, flops:96.81, batch-reuse:1
@ 835 train 6.5588 , allloss: 6.5603, dt: 1057.36ms, fracRes: 0.7203, norm(attn): 0.1230, norm(output): 0.9766, norm(x): 0.4095, norm(y): 1.0000, norm:0.9915, tok/sec: 123962.05, flops:96.54, batch-reuse:1
@ 836 train 6.6087 , allloss: 6.6105, dt: 1053.57ms, fracRes: 0.7233, norm(attn): 0.1240, norm(output): 0.9805, norm(x): 0.4050, norm(y): 1.0000, norm:2.1558, tok/sec: 124407.94, flops:96.89, batch-reuse:1
@ 837 train 6.6364 , allloss: 6.6391, dt: 1054.25ms, fracRes: 0.7273, norm(attn): 0.1250, norm(output): 0.9609, norm(x): 0.3882, norm(y): 0.9999, norm:1.1504, tok/sec: 124326.97, flops:96.83, batch-reuse:1
@ 838 train 6.5972 , allloss: 6.5993, dt: 1048.83ms, fracRes: 0.7220, norm(attn): 0.1221, norm(output): 0.9531, norm(x): 0.3985, norm(y): 1.0000, norm:1.3290, tok/sec: 124969.78, flops:97.33, batch-reuse:1
@ 839 train 6.4746 , allloss: 6.4775, dt: 1052.41ms, fracRes: 0.7172, norm(attn): 0.1187, norm(output): 0.9766, norm(x): 0.4156, norm(y): 1.0001, norm:1.4308, tok/sec: 124544.57, flops:97.00, batch-reuse:1
@ 840 train 6.5724 , allloss: 6.5747, dt: 1054.55ms, fracRes: 0.7250, norm(attn): 0.1211, norm(output): 0.9648, norm(x): 0.3975, norm(y): 1.0000, norm:0.8582, tok/sec: 124291.94, flops:96.80, batch-reuse:1
@ 841 train 6.5270 , allloss: 6.5291, dt: 1065.11ms, fracRes: 0.7167, norm(attn): 0.1187, norm(output): 0.9492, norm(x): 0.4067, norm(y): 1.0001, norm:2.4310, tok/sec: 123059.57, flops:95.84, batch-reuse:1
@ 842 train 6.6335 , allloss: 6.6356, dt: 1047.77ms, fracRes: 0.7217, norm(attn): 0.1230, norm(output): 0.9609, norm(x): 0.3995, norm(y): 1.0000, norm:1.2707, tok/sec: 125095.81, flops:97.43, batch-reuse:1
@ 843 train 6.6473 , allloss: 6.6494, dt: 1061.36ms, fracRes: 0.7289, norm(attn): 0.1226, norm(output): 0.9766, norm(x): 0.3844, norm(y): 0.9999, norm:1.0795, tok/sec: 123494.62, flops:96.18, batch-reuse:1
@ 844 train 6.6800 , allloss: 6.6823, dt: 1063.36ms, fracRes: 0.7297, norm(attn): 0.1221, norm(output): 0.9492, norm(x): 0.3794, norm(y): 0.9999, norm:1.5480, tok/sec: 123261.78, flops:96.00, batch-reuse:1
@ 845 train 6.6586 , allloss: 6.6610, dt: 1059.07ms, fracRes: 0.7279, norm(attn): 0.1226, norm(output): 0.9492, norm(x): 0.3832, norm(y): 0.9999, norm:1.6221, tok/sec: 123761.07, flops:96.39, batch-reuse:1
@ 846 train 6.6205 , allloss: 6.6228, dt: 1046.06ms, fracRes: 0.7266, norm(attn): 0.1230, norm(output): 0.9492, norm(x): 0.3922, norm(y): 1.0000, norm:1.3727, tok/sec: 125301.01, flops:97.58, batch-reuse:1
@ 847 train 6.6793 , allloss: 6.6816, dt: 1059.28ms, fracRes: 0.7277, norm(attn): 0.1221, norm(output): 0.9453, norm(x): 0.3831, norm(y): 0.9999, norm:0.8649, tok/sec: 123737.42, flops:96.37, batch-reuse:1
@ 848 train 6.6665 , allloss: 6.6686, dt: 1047.81ms, fracRes: 0.7311, norm(attn): 0.1240, norm(output): 0.9492, norm(x): 0.3759, norm(y): 0.9999, norm:1.2207, tok/sec: 125091.03, flops:97.42, batch-reuse:1
@ 849 train 6.5993 , allloss: 6.6011, dt: 1043.06ms, fracRes: 0.7256, norm(attn): 0.1226, norm(output): 0.9766, norm(x): 0.3971, norm(y): 1.0000, norm:1.1933, tok/sec: 125661.52, flops:97.87, batch-reuse:1
@ 850 train 6.5942 , allloss: 6.5961, dt: 1053.18ms, fracRes: 0.7268, norm(attn): 0.1196, norm(output): 0.9609, norm(x): 0.3923, norm(y): 1.0000, norm:0.9071, tok/sec: 124453.08, flops:96.92, batch-reuse:1
@ 851 train 6.7999 , allloss: 6.8018, dt: 1049.85ms, fracRes: 0.7365, norm(attn): 0.1245, norm(output): 0.9492, norm(x): 0.3713, norm(y): 0.9998, norm:1.1174, tok/sec: 124848.82, flops:97.23, batch-reuse:1
@ 852 train 6.6649 , allloss: 6.6668, dt: 1057.86ms, fracRes: 0.7325, norm(attn): 0.1216, norm(output): 0.9648, norm(x): 0.3824, norm(y): 0.9999, norm:1.1565, tok/sec: 123903.52, flops:96.50, batch-reuse:1
@ 853 train 6.6081 , allloss: 6.6103, dt: 1058.51ms, fracRes: 0.7240, norm(attn): 0.1187, norm(output): 0.9531, norm(x): 0.3965, norm(y): 1.0000, norm:1.0148, tok/sec: 123827.36, flops:96.44, batch-reuse:1
@ 854 train 6.6147 , allloss: 6.6164, dt: 1041.75ms, fracRes: 0.7319, norm(attn): 0.1206, norm(output): 0.9531, norm(x): 0.3804, norm(y): 0.9999, norm:0.7851, tok/sec: 125818.71, flops:97.99, batch-reuse:1
@ 855 train 6.6637 , allloss: 6.6654, dt: 1054.73ms, fracRes: 0.7315, norm(attn): 0.1211, norm(output): 0.9492, norm(x): 0.3786, norm(y): 0.9999, norm:0.7758, tok/sec: 124270.14, flops:96.78, batch-reuse:1
@ 856 train 6.6286 , allloss: 6.6300, dt: 1071.29ms, fracRes: 0.7277, norm(attn): 0.1201, norm(output): 0.9688, norm(x): 0.3918, norm(y): 1.0000, norm:0.9583, tok/sec: 122349.23, flops:95.29, batch-reuse:1
@ 857 train 6.6381 , allloss: 6.6398, dt: 1049.01ms, fracRes: 0.7313, norm(attn): 0.1221, norm(output): 0.9570, norm(x): 0.3789, norm(y): 0.9999, norm:2.1972, tok/sec: 124948.34, flops:97.31, batch-reuse:1
@ 858 train 6.6589 , allloss: 6.6607, dt: 1048.80ms, fracRes: 0.7289, norm(attn): 0.1230, norm(output): 0.9531, norm(x): 0.3858, norm(y): 0.9999, norm:0.6629, tok/sec: 124973.10, flops:97.33, batch-reuse:1
@ 859 train 6.5776 , allloss: 6.5795, dt: 1055.66ms, fracRes: 0.7261, norm(attn): 0.1221, norm(output): 0.9531, norm(x): 0.3927, norm(y): 1.0000, norm:1.1560, tok/sec: 124161.27, flops:96.70, batch-reuse:1
@ 860 train 6.6096 , allloss: 6.6113, dt: 1043.34ms, fracRes: 0.7289, norm(attn): 0.1196, norm(output): 0.9453, norm(x): 0.3810, norm(y): 0.9999, norm:1.2048, tok/sec: 125627.14, flops:97.84, batch-reuse:1
@ 861 train 6.6097 , allloss: 6.6113, dt: 1057.31ms, fracRes: 0.7281, norm(attn): 0.1206, norm(output): 0.9492, norm(x): 0.3874, norm(y): 0.9999, norm:0.7007, tok/sec: 123967.97, flops:96.55, batch-reuse:1
@ 862 train 6.6684 , allloss: 6.6699, dt: 1053.42ms, fracRes: 0.7320, norm(attn): 0.1230, norm(output): 0.9453, norm(x): 0.3749, norm(y): 0.9999, norm:0.7219, tok/sec: 124425.37, flops:96.90, batch-reuse:1
@ 863 train 6.6234 , allloss: 6.6249, dt: 1055.11ms, fracRes: 0.7289, norm(attn): 0.1221, norm(output): 0.9492, norm(x): 0.3795, norm(y): 0.9999, norm:0.8953, tok/sec: 124226.14, flops:96.75, batch-reuse:1
@ 864 train 6.6414 , allloss: 6.6431, dt: 1067.97ms, fracRes: 0.7322, norm(attn): 0.1216, norm(output): 0.9531, norm(x): 0.3787, norm(y): 0.9999, norm:0.8542, tok/sec: 122729.54, flops:95.58, batch-reuse:1
@ 865 train 6.5480 , allloss: 6.5496, dt: 1063.70ms, fracRes: 0.7221, norm(attn): 0.1216, norm(output): 0.9492, norm(x): 0.3962, norm(y): 1.0000, norm:0.5671, tok/sec: 123223.05, flops:95.97, batch-reuse:1
@ 866 train 6.5222 , allloss: 6.5238, dt: 1075.83ms, fracRes: 0.7198, norm(attn): 0.1201, norm(output): 0.9492, norm(x): 0.3983, norm(y): 1.0000, norm:0.7590, tok/sec: 121833.92, flops:94.88, batch-reuse:1
@ 867 train 6.6011 , allloss: 6.6029, dt: 1044.64ms, fracRes: 0.7278, norm(attn): 0.1211, norm(output): 0.9570, norm(x): 0.3868, norm(y): 0.9999, norm:1.1294, tok/sec: 125471.48, flops:97.72, batch-reuse:1
@ 868 train 6.5716 , allloss: 6.5734, dt: 1044.90ms, fracRes: 0.7212, norm(attn): 0.1196, norm(output): 0.9453, norm(x): 0.3962, norm(y): 1.0000, norm:1.7101, tok/sec: 125439.99, flops:97.69, batch-reuse:1
@ 869 train 6.5842 , allloss: 6.5860, dt: 1043.39ms, fracRes: 0.7277, norm(attn): 0.1260, norm(output): 0.9492, norm(x): 0.3841, norm(y): 0.9999, norm:0.8162, tok/sec: 125620.97, flops:97.83, batch-reuse:1
@ 870 train 6.5640 , allloss: 6.5656, dt: 1053.17ms, fracRes: 0.7226, norm(attn): 0.1226, norm(output): 0.9492, norm(x): 0.3943, norm(y): 1.0000, norm:0.6816, tok/sec: 124454.60, flops:96.93, batch-reuse:1
@ 871 train 6.5986 , allloss: 6.6005, dt: 1069.44ms, fracRes: 0.7281, norm(attn): 0.1191, norm(output): 0.9375, norm(x): 0.3794, norm(y): 0.9999, norm:1.4273, tok/sec: 122561.44, flops:95.45, batch-reuse:1
@ 872 train 6.5544 , allloss: 6.5562, dt: 1049.52ms, fracRes: 0.7254, norm(attn): 0.1177, norm(output): 0.9492, norm(x): 0.3893, norm(y): 1.0000, norm:1.1760, tok/sec: 124887.34, flops:97.26, batch-reuse:1
@ 873 train 6.6237 , allloss: 6.6253, dt: 1058.51ms, fracRes: 0.7302, norm(attn): 0.1221, norm(output): 0.9414, norm(x): 0.3739, norm(y): 0.9999, norm:1.0116, tok/sec: 123827.41, flops:96.44, batch-reuse:1
@ 874 train 6.5299 , allloss: 6.5316, dt: 1051.32ms, fracRes: 0.7234, norm(attn): 0.1172, norm(output): 0.9453, norm(x): 0.3927, norm(y): 1.0000, norm:1.1447, tok/sec: 124673.34, flops:97.10, batch-reuse:1
@ 875 train 6.5512 , allloss: 6.5532, dt: 1059.39ms, fracRes: 0.7254, norm(attn): 0.1182, norm(output): 0.9453, norm(x): 0.3870, norm(y): 1.0000, norm:0.7800, tok/sec: 123724.02, flops:96.36, batch-reuse:1
@ 876 train 6.5623 , allloss: 6.5640, dt: 1075.29ms, fracRes: 0.7245, norm(attn): 0.1187, norm(output): 0.9414, norm(x): 0.3852, norm(y): 1.0000, norm:2.2013, tok/sec: 121894.35, flops:94.93, batch-reuse:1
@ 877 train 6.5829 , allloss: 6.5844, dt: 1077.38ms, fracRes: 0.7304, norm(attn): 0.1226, norm(output): 0.9414, norm(x): 0.3750, norm(y): 0.9999, norm:1.0973, tok/sec: 121658.00, flops:94.75, batch-reuse:1
@ 878 train 6.5795 , allloss: 6.5810, dt: 1043.95ms, fracRes: 0.7257, norm(attn): 0.1201, norm(output): 0.9414, norm(x): 0.3830, norm(y): 1.0000, norm:7.4758, tok/sec: 125553.58, flops:97.78, batch-reuse:1
@ 879 train 6.5801 , allloss: 6.5815, dt: 1052.94ms, fracRes: 0.7267, norm(attn): 0.1196, norm(output): 0.9375, norm(x): 0.3765, norm(y): 0.9999, norm:3.1938, tok/sec: 124482.39, flops:96.95, batch-reuse:1
@ 880 train 6.6467 , allloss: 6.6489, dt: 1056.78ms, fracRes: 0.7331, norm(attn): 0.1206, norm(output): 0.9375, norm(x): 0.3688, norm(y): 0.9999, norm:1.9496, tok/sec: 124029.84, flops:96.59, batch-reuse:1
@ 881 train 6.5302 , allloss: 6.5318, dt: 1050.50ms, fracRes: 0.7322, norm(attn): 0.1211, norm(output): 0.9492, norm(x): 0.3737, norm(y): 0.9999, norm:1.3435, tok/sec: 124770.59, flops:97.17, batch-reuse:1
@ 882 train 6.5673 , allloss: 6.5687, dt: 1055.95ms, fracRes: 0.7284, norm(attn): 0.1187, norm(output): 0.9453, norm(x): 0.3762, norm(y): 1.0000, norm:2.8674, tok/sec: 124127.35, flops:96.67, batch-reuse:1
@ 883 train 6.5277 , allloss: 6.5290, dt: 1058.76ms, fracRes: 0.7274, norm(attn): 0.1191, norm(output): 0.9375, norm(x): 0.3767, norm(y): 1.0000, norm:1.6580, tok/sec: 123798.05, flops:96.41, batch-reuse:1
@ 884 train 6.5390 , allloss: 6.5405, dt: 1061.08ms, fracRes: 0.7256, norm(attn): 0.1201, norm(output): 0.9453, norm(x): 0.3872, norm(y): 1.0000, norm:2.6382, tok/sec: 123526.78, flops:96.20, batch-reuse:1
@ 885 train 6.5886 , allloss: 6.5903, dt: 1047.27ms, fracRes: 0.7302, norm(attn): 0.1216, norm(output): 0.9375, norm(x): 0.3792, norm(y): 1.0000, norm:2.2195, tok/sec: 125155.79, flops:97.47, batch-reuse:1
@ 886 train 6.6022 , allloss: 6.6066, dt: 1053.54ms, fracRes: 0.7315, norm(attn): 0.1201, norm(output): 0.9336, norm(x): 0.3723, norm(y): 0.9999, norm:1.2292, tok/sec: 124411.12, flops:96.89, batch-reuse:1
@ 887 train 6.5327 , allloss: 6.5389, dt: 1067.84ms, fracRes: 0.7318, norm(attn): 0.1172, norm(output): 0.9414, norm(x): 0.3756, norm(y): 1.0000, norm:1.1888, tok/sec: 122744.56, flops:95.59, batch-reuse:1
@ 888 train 6.5640 , allloss: 6.5670, dt: 1049.65ms, fracRes: 0.7350, norm(attn): 0.1182, norm(output): 0.9453, norm(x): 0.3759, norm(y): 0.9999, norm:1.4590, tok/sec: 124871.62, flops:97.25, batch-reuse:1
@ 889 train 6.5499 , allloss: 6.5516, dt: 1050.46ms, fracRes: 0.7316, norm(attn): 0.1177, norm(output): 0.9375, norm(x): 0.3759, norm(y): 0.9999, norm:0.6651, tok/sec: 124776.06, flops:97.18, batch-reuse:1
@ 890 train 6.6339 , allloss: 6.6358, dt: 1052.60ms, fracRes: 0.7381, norm(attn): 0.1191, norm(output): 0.9258, norm(x): 0.3565, norm(y): 0.9998, norm:1.4146, tok/sec: 124521.67, flops:96.98, batch-reuse:1
@ 891 train 6.5366 , allloss: 6.5386, dt: 1055.81ms, fracRes: 0.7353, norm(attn): 0.1187, norm(output): 0.9375, norm(x): 0.3683, norm(y): 0.9999, norm:0.8377, tok/sec: 124143.05, flops:96.68, batch-reuse:1
@ 892 train 6.4782 , allloss: 6.4800, dt: 1085.81ms, fracRes: 0.7311, norm(attn): 0.1177, norm(output): 0.9414, norm(x): 0.3753, norm(y): 0.9999, norm:0.7671, tok/sec: 120713.55, flops:94.01, batch-reuse:1
@ 893 train 6.4030 , allloss: 6.4048, dt: 1052.66ms, fracRes: 0.7225, norm(attn): 0.1167, norm(output): 0.9531, norm(x): 0.3900, norm(y): 1.0000, norm:1.0833, tok/sec: 124514.93, flops:96.97, batch-reuse:1
@ 894 train 6.5481 , allloss: 6.5499, dt: 1037.92ms, fracRes: 0.7301, norm(attn): 0.1177, norm(output): 0.9492, norm(x): 0.3792, norm(y): 0.9999, norm:1.2632, tok/sec: 126282.78, flops:98.35, batch-reuse:1
@ 895 train 6.5334 , allloss: 6.5352, dt: 1048.74ms, fracRes: 0.7354, norm(attn): 0.1196, norm(output): 0.9453, norm(x): 0.3657, norm(y): 0.9999, norm:0.6542, tok/sec: 124980.80, flops:97.34, batch-reuse:1
@ 896 train 6.4061 , allloss: 6.4080, dt: 1053.12ms, fracRes: 0.7241, norm(attn): 0.1172, norm(output): 0.9453, norm(x): 0.3861, norm(y): 1.0000, norm:0.9607, tok/sec: 124460.55, flops:96.93, batch-reuse:1
@ 897 train 6.5372 , allloss: 6.5390, dt: 1059.16ms, fracRes: 0.7286, norm(attn): 0.1182, norm(output): 0.9375, norm(x): 0.3809, norm(y): 0.9999, norm:1.7808, tok/sec: 123750.40, flops:96.38, batch-reuse:1
@ 898 train 6.5420 , allloss: 6.5438, dt: 1059.34ms, fracRes: 0.7297, norm(attn): 0.1201, norm(output): 0.9375, norm(x): 0.3728, norm(y): 0.9999, norm:0.8500, tok/sec: 123730.37, flops:96.36, batch-reuse:1
@ 899 train 6.4872 , allloss: 6.4890, dt: 1062.82ms, fracRes: 0.7278, norm(attn): 0.1182, norm(output): 0.9336, norm(x): 0.3794, norm(y): 0.9999, norm:0.8674, tok/sec: 123324.44, flops:96.05, batch-reuse:1
@ 900 train 6.5558 , allloss: 6.5577, dt: 1047.28ms, fracRes: 0.7310, norm(attn): 0.1201, norm(output): 0.9570, norm(x): 0.3761, norm(y): 0.9999, norm:1.3489, tok/sec: 125154.28, flops:97.47, batch-reuse:1
@ 901 train 6.4578 , allloss: 6.4594, dt: 1049.94ms, fracRes: 0.7260, norm(attn): 0.1177, norm(output): 0.9453, norm(x): 0.3827, norm(y): 0.9999, norm:0.8948, tok/sec: 124838.11, flops:97.22, batch-reuse:1
@ 902 train 6.4417 , allloss: 6.4433, dt: 1052.89ms, fracRes: 0.7239, norm(attn): 0.1177, norm(output): 0.9453, norm(x): 0.3869, norm(y): 0.9999, norm:0.7759, tok/sec: 124488.39, flops:96.95, batch-reuse:1
@ 903 train 6.4539 , allloss: 6.4556, dt: 1048.72ms, fracRes: 0.7254, norm(attn): 0.1172, norm(output): 0.9414, norm(x): 0.3835, norm(y): 0.9999, norm:0.7807, tok/sec: 124982.96, flops:97.34, batch-reuse:1
@ 904 train 6.4309 , allloss: 6.4325, dt: 1060.35ms, fracRes: 0.7273, norm(attn): 0.1177, norm(output): 0.9414, norm(x): 0.3787, norm(y): 0.9999, norm:0.9011, tok/sec: 123612.52, flops:96.27, batch-reuse:1
@ 905 train 6.5154 , allloss: 6.5172, dt: 1055.56ms, fracRes: 0.7355, norm(attn): 0.1201, norm(output): 0.9414, norm(x): 0.3652, norm(y): 0.9998, norm:1.1366, tok/sec: 124173.25, flops:96.71, batch-reuse:1
@ 906 train 6.4687 , allloss: 6.4704, dt: 1037.71ms, fracRes: 0.7279, norm(attn): 0.1177, norm(output): 0.9375, norm(x): 0.3750, norm(y): 0.9999, norm:0.9994, tok/sec: 126309.10, flops:98.37, batch-reuse:1
@ 907 train 6.3534 , allloss: 6.3549, dt: 1051.11ms, fracRes: 0.7237, norm(attn): 0.1182, norm(output): 0.9492, norm(x): 0.3857, norm(y): 1.0000, norm:1.1064, tok/sec: 124699.16, flops:97.12, batch-reuse:1
@ 908 train 6.4652 , allloss: 6.4667, dt: 1047.00ms, fracRes: 0.7281, norm(attn): 0.1182, norm(output): 0.9414, norm(x): 0.3719, norm(y): 0.9999, norm:0.9261, tok/sec: 125187.82, flops:97.50, batch-reuse:1
@ 909 train 6.6664 , allloss: 6.6682, dt: 1052.35ms, fracRes: 0.7490, norm(attn): 0.1235, norm(output): 0.9375, norm(x): 0.3366, norm(y): 0.9997, norm:1.0913, tok/sec: 124551.83, flops:97.00, batch-reuse:1
@ 910 train 6.4779 , allloss: 6.4793, dt: 1042.67ms, fracRes: 0.7318, norm(attn): 0.1182, norm(output): 0.9375, norm(x): 0.3662, norm(y): 0.9999, norm:1.0514, tok/sec: 125708.01, flops:97.90, batch-reuse:1
@ 911 train 6.5675 , allloss: 6.5690, dt: 1054.73ms, fracRes: 0.7369, norm(attn): 0.1196, norm(output): 0.9375, norm(x): 0.3543, norm(y): 0.9998, norm:0.7990, tok/sec: 124270.45, flops:96.78, batch-reuse:1
@ 912 train 6.4727 , allloss: 6.4740, dt: 1056.97ms, fracRes: 0.7311, norm(attn): 0.1196, norm(output): 0.9453, norm(x): 0.3680, norm(y): 0.9999, norm:1.2315, tok/sec: 124007.43, flops:96.58, batch-reuse:1
@ 913 train 6.4438 , allloss: 6.4454, dt: 1052.00ms, fracRes: 0.7346, norm(attn): 0.1196, norm(output): 0.9375, norm(x): 0.3601, norm(y): 0.9998, norm:1.2926, tok/sec: 124593.72, flops:97.03, batch-reuse:1
@ 914 train 6.4714 , allloss: 6.4729, dt: 1062.77ms, fracRes: 0.7341, norm(attn): 0.1182, norm(output): 0.9414, norm(x): 0.3627, norm(y): 0.9998, norm:0.7682, tok/sec: 123330.19, flops:96.05, batch-reuse:1
@ 915 train 6.4873 , allloss: 6.4886, dt: 1052.85ms, fracRes: 0.7331, norm(attn): 0.1167, norm(output): 0.9375, norm(x): 0.3618, norm(y): 0.9998, norm:0.7328, tok/sec: 124492.28, flops:96.96, batch-reuse:1
@ 916 train 6.4123 , allloss: 6.4134, dt: 1047.27ms, fracRes: 0.7275, norm(attn): 0.1162, norm(output): 0.9375, norm(x): 0.3712, norm(y): 0.9999, norm:1.1912, tok/sec: 125155.56, flops:97.47, batch-reuse:1
@ 917 train 6.4998 , allloss: 6.5011, dt: 1050.19ms, fracRes: 0.7330, norm(attn): 0.1191, norm(output): 0.9375, norm(x): 0.3649, norm(y): 0.9999, norm:1.8356, tok/sec: 124807.41, flops:97.20, batch-reuse:1
@ 918 train 6.4944 , allloss: 6.4959, dt: 1047.85ms, fracRes: 0.7391, norm(attn): 0.1211, norm(output): 0.9336, norm(x): 0.3445, norm(y): 0.9998, norm:1.1615, tok/sec: 125086.76, flops:97.42, batch-reuse:1
@ 919 train 6.4482 , allloss: 6.4494, dt: 1058.78ms, fracRes: 0.7315, norm(attn): 0.1172, norm(output): 0.9336, norm(x): 0.3612, norm(y): 0.9999, norm:1.0499, tok/sec: 123795.82, flops:96.41, batch-reuse:1
@ 920 train 6.4994 , allloss: 6.5009, dt: 1056.50ms, fracRes: 0.7352, norm(attn): 0.1187, norm(output): 0.9336, norm(x): 0.3582, norm(y): 0.9998, norm:1.4686, tok/sec: 124062.08, flops:96.62, batch-reuse:1
@ 921 train 6.4566 , allloss: 6.4580, dt: 1060.75ms, fracRes: 0.7328, norm(attn): 0.1162, norm(output): 0.9375, norm(x): 0.3605, norm(y): 0.9998, norm:0.9187, tok/sec: 123564.85, flops:96.23, batch-reuse:1
@ 922 train 6.4797 , allloss: 6.4814, dt: 1046.39ms, fracRes: 0.7382, norm(attn): 0.1182, norm(output): 0.9375, norm(x): 0.3521, norm(y): 0.9998, norm:0.9447, tok/sec: 125261.07, flops:97.55, batch-reuse:1
@ 923 train 6.4599 , allloss: 6.4611, dt: 1052.33ms, fracRes: 0.7317, norm(attn): 0.1191, norm(output): 0.9414, norm(x): 0.3698, norm(y): 0.9999, norm:1.3011, tok/sec: 124553.60, flops:97.00, batch-reuse:1
@ 924 train 6.4198 , allloss: 6.4211, dt: 1048.36ms, fracRes: 0.7299, norm(attn): 0.1201, norm(output): 0.9375, norm(x): 0.3648, norm(y): 0.9999, norm:1.0431, tok/sec: 125026.34, flops:97.37, batch-reuse:1
@ 925 train 6.4607 , allloss: 6.4621, dt: 1052.13ms, fracRes: 0.7330, norm(attn): 0.1206, norm(output): 0.9336, norm(x): 0.3569, norm(y): 0.9998, norm:0.6630, tok/sec: 124577.20, flops:97.02, batch-reuse:1
@ 926 train 6.4332 , allloss: 6.4347, dt: 1045.58ms, fracRes: 0.7339, norm(attn): 0.1182, norm(output): 0.9375, norm(x): 0.3599, norm(y): 0.9998, norm:1.0071, tok/sec: 125358.56, flops:97.63, batch-reuse:1
@ 927 train 6.3993 , allloss: 6.4011, dt: 1070.16ms, fracRes: 0.7294, norm(attn): 0.1177, norm(output): 0.9375, norm(x): 0.3636, norm(y): 0.9999, norm:1.9443, tok/sec: 122478.81, flops:95.39, batch-reuse:1
@ 928 train 6.5688 , allloss: 6.5708, dt: 1052.29ms, fracRes: 0.7341, norm(attn): 0.1172, norm(output): 0.9336, norm(x): 0.3548, norm(y): 0.9998, norm:0.7365, tok/sec: 124559.08, flops:97.01, batch-reuse:1
@ 929 train 6.6124 , allloss: 6.6139, dt: 1053.13ms, fracRes: 0.7411, norm(attn): 0.1172, norm(output): 0.9336, norm(x): 0.3463, norm(y): 0.9997, norm:1.6025, tok/sec: 124459.23, flops:96.93, batch-reuse:1
@ 930 train 6.5507 , allloss: 6.5522, dt: 1046.37ms, fracRes: 0.7333, norm(attn): 0.1162, norm(output): 0.9336, norm(x): 0.3606, norm(y): 0.9998, norm:1.5775, tok/sec: 125263.78, flops:97.56, batch-reuse:1
@ 931 train 6.6624 , allloss: 6.6642, dt: 1047.89ms, fracRes: 0.7437, norm(attn): 0.1172, norm(output): 0.9180, norm(x): 0.3360, norm(y): 0.9997, norm:0.6136, tok/sec: 125082.32, flops:97.41, batch-reuse:1
@ 932 train 6.5900 , allloss: 6.5915, dt: 1063.36ms, fracRes: 0.7389, norm(attn): 0.1177, norm(output): 0.9258, norm(x): 0.3451, norm(y): 0.9998, norm:0.7824, tok/sec: 123261.81, flops:96.00, batch-reuse:1
@ 933 train 6.6000 , allloss: 6.6013, dt: 1047.60ms, fracRes: 0.7366, norm(attn): 0.1177, norm(output): 0.9336, norm(x): 0.3470, norm(y): 0.9998, norm:0.6616, tok/sec: 125116.71, flops:97.44, batch-reuse:1
@ 934 train 6.5857 , allloss: 6.5872, dt: 1047.66ms, fracRes: 0.7392, norm(attn): 0.1191, norm(output): 0.9375, norm(x): 0.3435, norm(y): 0.9997, norm:0.6556, tok/sec: 125109.39, flops:97.44, batch-reuse:1
@ 935 train 6.5709 , allloss: 6.5724, dt: 1058.06ms, fracRes: 0.7422, norm(attn): 0.1206, norm(output): 0.9297, norm(x): 0.3361, norm(y): 0.9997, norm:1.0367, tok/sec: 123879.59, flops:96.48, batch-reuse:1
@ 936 train 6.5864 , allloss: 6.5878, dt: 1053.85ms, fracRes: 0.7402, norm(attn): 0.1211, norm(output): 0.9180, norm(x): 0.3418, norm(y): 0.9998, norm:2.4166, tok/sec: 124374.67, flops:96.86, batch-reuse:1
@ 937 train 6.6036 , allloss: 6.6052, dt: 1049.90ms, fracRes: 0.7355, norm(attn): 0.1177, norm(output): 0.9219, norm(x): 0.3461, norm(y): 0.9998, norm:1.7879, tok/sec: 124842.81, flops:97.23, batch-reuse:1
@ 938 train 6.5456 , allloss: 6.5473, dt: 1051.50ms, fracRes: 0.7362, norm(attn): 0.1177, norm(output): 0.9258, norm(x): 0.3500, norm(y): 0.9998, norm:1.0690, tok/sec: 124652.11, flops:97.08, batch-reuse:1
@ 939 train 6.5862 , allloss: 6.5880, dt: 1058.30ms, fracRes: 0.7399, norm(attn): 0.1172, norm(output): 0.9297, norm(x): 0.3420, norm(y): 0.9998, norm:0.6527, tok/sec: 123850.98, flops:96.46, batch-reuse:1
@ 940 train 6.5971 , allloss: 6.5989, dt: 1046.52ms, fracRes: 0.7402, norm(attn): 0.1172, norm(output): 0.9336, norm(x): 0.3383, norm(y): 0.9997, norm:1.1647, tok/sec: 125245.92, flops:97.54, batch-reuse:1
@ 941 train 6.5888 , allloss: 6.5902, dt: 1057.76ms, fracRes: 0.7416, norm(attn): 0.1177, norm(output): 0.9336, norm(x): 0.3423, norm(y): 0.9997, norm:0.9439, tok/sec: 123914.52, flops:96.51, batch-reuse:1
@ 942 train 6.5586 , allloss: 6.5600, dt: 1046.97ms, fracRes: 0.7374, norm(attn): 0.1172, norm(output): 0.9336, norm(x): 0.3446, norm(y): 0.9998, norm:0.6171, tok/sec: 125191.93, flops:97.50, batch-reuse:1
@ 943 train 6.5506 , allloss: 6.5521, dt: 1063.16ms, fracRes: 0.7415, norm(attn): 0.1177, norm(output): 0.9297, norm(x): 0.3361, norm(y): 0.9997, norm:0.5709, tok/sec: 123285.33, flops:96.02, batch-reuse:1
@ 944 train 6.5557 , allloss: 6.5571, dt: 1046.92ms, fracRes: 0.7420, norm(attn): 0.1167, norm(output): 0.9297, norm(x): 0.3389, norm(y): 0.9998, norm:0.6329, tok/sec: 125197.57, flops:97.50, batch-reuse:1
@ 945 train 6.6410 , allloss: 6.6428, dt: 1056.63ms, fracRes: 0.7506, norm(attn): 0.1157, norm(output): 0.9180, norm(x): 0.3162, norm(y): 0.9997, norm:1.0047, tok/sec: 124046.66, flops:96.61, batch-reuse:1
@ 946 train 6.5701 , allloss: 6.5718, dt: 1046.78ms, fracRes: 0.7429, norm(attn): 0.1167, norm(output): 0.9297, norm(x): 0.3359, norm(y): 0.9997, norm:1.2735, tok/sec: 125214.08, flops:97.52, batch-reuse:1
@ 947 train 6.5319 , allloss: 6.5334, dt: 1059.02ms, fracRes: 0.7409, norm(attn): 0.1177, norm(output): 0.9219, norm(x): 0.3353, norm(y): 0.9997, norm:1.0445, tok/sec: 123767.11, flops:96.39, batch-reuse:1
@ 948 train 6.5203 , allloss: 6.5216, dt: 1046.22ms, fracRes: 0.7417, norm(attn): 0.1162, norm(output): 0.9297, norm(x): 0.3369, norm(y): 0.9997, norm:0.8788, tok/sec: 125282.00, flops:97.57, batch-reuse:1
@ 949 train 6.5835 , allloss: 6.5851, dt: 1049.70ms, fracRes: 0.7439, norm(attn): 0.1162, norm(output): 0.9258, norm(x): 0.3289, norm(y): 0.9997, norm:0.6690, tok/sec: 124866.21, flops:97.25, batch-reuse:1
@ 950 train 6.5406 , allloss: 6.5420, dt: 1044.31ms, fracRes: 0.7409, norm(attn): 0.1172, norm(output): 0.9258, norm(x): 0.3314, norm(y): 0.9997, norm:0.8068, tok/sec: 125511.16, flops:97.75, batch-reuse:1
@ 951 train 6.6182 , allloss: 6.6195, dt: 1053.21ms, fracRes: 0.7490, norm(attn): 0.1172, norm(output): 0.9258, norm(x): 0.3216, norm(y): 0.9996, norm:1.1641, tok/sec: 124450.43, flops:96.92, batch-reuse:1
@ 952 train 6.5442 , allloss: 6.5456, dt: 1070.31ms, fracRes: 0.7464, norm(attn): 0.1143, norm(output): 0.9180, norm(x): 0.3248, norm(y): 0.9997, norm:0.8575, tok/sec: 122461.95, flops:95.37, batch-reuse:1
@ 953 train 6.5240 , allloss: 6.5252, dt: 1058.36ms, fracRes: 0.7423, norm(attn): 0.1143, norm(output): 0.9219, norm(x): 0.3311, norm(y): 0.9997, norm:0.9596, tok/sec: 123844.82, flops:96.45, batch-reuse:1
@ 954 train 6.4720 , allloss: 6.4733, dt: 1042.66ms, fracRes: 0.7378, norm(attn): 0.1147, norm(output): 0.9336, norm(x): 0.3416, norm(y): 0.9998, norm:0.8656, tok/sec: 125709.59, flops:97.90, batch-reuse:1
@ 955 train 6.5429 , allloss: 6.5442, dt: 1048.91ms, fracRes: 0.7411, norm(attn): 0.1172, norm(output): 0.9297, norm(x): 0.3355, norm(y): 0.9997, norm:0.5607, tok/sec: 124959.81, flops:97.32, batch-reuse:1
@ 956 train 6.4992 , allloss: 6.5005, dt: 1055.20ms, fracRes: 0.7403, norm(attn): 0.1172, norm(output): 0.9219, norm(x): 0.3348, norm(y): 0.9998, norm:0.8641, tok/sec: 124215.11, flops:96.74, batch-reuse:1
@ 957 train 6.5393 , allloss: 6.5408, dt: 1045.84ms, fracRes: 0.7394, norm(attn): 0.1167, norm(output): 0.9180, norm(x): 0.3315, norm(y): 0.9997, norm:0.9859, tok/sec: 125327.35, flops:97.61, batch-reuse:1
@ 958 train 6.5463 , allloss: 6.5477, dt: 1049.23ms, fracRes: 0.7440, norm(attn): 0.1157, norm(output): 0.9219, norm(x): 0.3263, norm(y): 0.9997, norm:1.4288, tok/sec: 124921.56, flops:97.29, batch-reuse:1
@ 959 train 6.4574 , allloss: 6.4594, dt: 1053.48ms, fracRes: 0.7386, norm(attn): 0.1147, norm(output): 0.9258, norm(x): 0.3303, norm(y): 0.9998, norm:0.7492, tok/sec: 124418.55, flops:96.90, batch-reuse:1
@ 960 train 6.5748 , allloss: 6.5763, dt: 1056.04ms, fracRes: 0.7447, norm(attn): 0.1172, norm(output): 0.9102, norm(x): 0.3237, norm(y): 0.9997, norm:1.4572, tok/sec: 124116.42, flops:96.66, batch-reuse:1
@ 961 train 6.5219 , allloss: 6.5234, dt: 1049.12ms, fracRes: 0.7441, norm(attn): 0.1182, norm(output): 0.9258, norm(x): 0.3287, norm(y): 0.9997, norm:1.4169, tok/sec: 124935.22, flops:97.30, batch-reuse:1
@ 962 train 6.5227 , allloss: 6.5248, dt: 1043.87ms, fracRes: 0.7401, norm(attn): 0.1172, norm(output): 0.9297, norm(x): 0.3324, norm(y): 0.9997, norm:0.6728, tok/sec: 125563.59, flops:97.79, batch-reuse:1
@ 963 train 6.5481 , allloss: 6.5497, dt: 1052.73ms, fracRes: 0.7455, norm(attn): 0.1152, norm(output): 0.9219, norm(x): 0.3216, norm(y): 0.9997, norm:0.9706, tok/sec: 124507.17, flops:96.97, batch-reuse:1
@ 964 train 6.5469 , allloss: 6.5481, dt: 1051.69ms, fracRes: 0.7459, norm(attn): 0.1143, norm(output): 0.9336, norm(x): 0.3245, norm(y): 0.9997, norm:1.2453, tok/sec: 124630.01, flops:97.06, batch-reuse:1
@ 965 train 6.5211 , allloss: 6.5222, dt: 1054.98ms, fracRes: 0.7429, norm(attn): 0.1123, norm(output): 0.9258, norm(x): 0.3300, norm(y): 0.9997, norm:0.8359, tok/sec: 124241.35, flops:96.76, batch-reuse:1
@ 966 train 6.5375 , allloss: 6.5390, dt: 1062.48ms, fracRes: 0.7417, norm(attn): 0.1118, norm(output): 0.8984, norm(x): 0.3250, norm(y): 0.9997, norm:1.9644, tok/sec: 123364.54, flops:96.08, batch-reuse:1
@ 967 train 6.5981 , allloss: 6.5998, dt: 1052.72ms, fracRes: 0.7563, norm(attn): 0.1147, norm(output): 0.8906, norm(x): 0.2962, norm(y): 0.9996, norm:0.9566, tok/sec: 124508.50, flops:96.97, batch-reuse:1
@ 968 train 6.5948 , allloss: 6.5961, dt: 1056.73ms, fracRes: 0.7432, norm(attn): 0.1157, norm(output): 0.9297, norm(x): 0.3331, norm(y): 0.9997, norm:1.2548, tok/sec: 124035.41, flops:96.60, batch-reuse:1
@ 969 train 6.5254 , allloss: 6.5267, dt: 1050.74ms, fracRes: 0.7416, norm(attn): 0.1143, norm(output): 0.9297, norm(x): 0.3304, norm(y): 0.9997, norm:1.5598, tok/sec: 124742.39, flops:97.15, batch-reuse:1
@ 970 train 6.5381 , allloss: 6.5393, dt: 1048.48ms, fracRes: 0.7425, norm(attn): 0.1143, norm(output): 0.9297, norm(x): 0.3275, norm(y): 0.9997, norm:0.8173, tok/sec: 125011.13, flops:97.36, batch-reuse:1
@ 971 train 6.5537 , allloss: 6.5549, dt: 1048.21ms, fracRes: 0.7444, norm(attn): 0.1133, norm(output): 0.9336, norm(x): 0.3251, norm(y): 0.9998, norm:1.0037, tok/sec: 125043.80, flops:97.38, batch-reuse:1
@ 972 train 6.5453 , allloss: 6.5465, dt: 1057.44ms, fracRes: 0.7446, norm(attn): 0.1113, norm(output): 0.9141, norm(x): 0.3265, norm(y): 0.9998, norm:1.2367, tok/sec: 123951.73, flops:96.53, batch-reuse:1
@ 973 train 6.5357 , allloss: 6.5370, dt: 1071.30ms, fracRes: 0.7446, norm(attn): 0.1108, norm(output): 0.9258, norm(x): 0.3274, norm(y): 0.9997, norm:0.8943, tok/sec: 122349.09, flops:95.29, batch-reuse:1
@ 974 train 6.5544 , allloss: 6.5560, dt: 1065.13ms, fracRes: 0.7474, norm(attn): 0.1113, norm(output): 0.9219, norm(x): 0.3210, norm(y): 0.9997, norm:0.8095, tok/sec: 123056.84, flops:95.84, batch-reuse:1
@ 975 train 6.5741 , allloss: 6.5760, dt: 1068.92ms, fracRes: 0.7473, norm(attn): 0.1099, norm(output): 0.9141, norm(x): 0.3180, norm(y): 0.9997, norm:1.7250, tok/sec: 122620.87, flops:95.50, batch-reuse:1
@ 976 train 6.4934 , allloss: 6.4960, dt: 1050.95ms, fracRes: 0.7406, norm(attn): 0.1094, norm(output): 0.9336, norm(x): 0.3347, norm(y): 0.9997, norm:1.1694, tok/sec: 124717.15, flops:97.13, batch-reuse:1
@ 977 train 6.4697 , allloss: 6.4713, dt: 1054.73ms, fracRes: 0.7423, norm(attn): 0.1133, norm(output): 0.9375, norm(x): 0.3345, norm(y): 0.9997, norm:0.9275, tok/sec: 124270.59, flops:96.78, batch-reuse:1
@ 978 train 6.5085 , allloss: 6.5105, dt: 1042.87ms, fracRes: 0.7405, norm(attn): 0.1162, norm(output): 0.9336, norm(x): 0.3343, norm(y): 0.9997, norm:1.3187, tok/sec: 125683.64, flops:97.88, batch-reuse:1
@ 979 train 6.4616 , allloss: 6.4636, dt: 1063.30ms, fracRes: 0.7410, norm(attn): 0.1152, norm(output): 0.9336, norm(x): 0.3374, norm(y): 0.9997, norm:0.9614, tok/sec: 123269.33, flops:96.00, batch-reuse:1
@ 980 train 6.3895 , allloss: 6.3914, dt: 1050.78ms, fracRes: 0.7380, norm(attn): 0.1118, norm(output): 0.9375, norm(x): 0.3397, norm(y): 0.9998, norm:0.8715, tok/sec: 124738.40, flops:97.15, batch-reuse:1
@ 981 train 6.4473 , allloss: 6.4491, dt: 1048.07ms, fracRes: 0.7427, norm(attn): 0.1123, norm(output): 0.9336, norm(x): 0.3292, norm(y): 0.9997, norm:0.7460, tok/sec: 125059.84, flops:97.40, batch-reuse:1
@ 982 train 6.4213 , allloss: 6.4228, dt: 1059.08ms, fracRes: 0.7386, norm(attn): 0.1104, norm(output): 0.9336, norm(x): 0.3375, norm(y): 0.9998, norm:0.7006, tok/sec: 123760.04, flops:96.38, batch-reuse:1
@ 983 train 6.5139 , allloss: 6.5155, dt: 1047.07ms, fracRes: 0.7461, norm(attn): 0.1104, norm(output): 0.9297, norm(x): 0.3152, norm(y): 0.9997, norm:0.8679, tok/sec: 125179.70, flops:97.49, batch-reuse:1
@ 984 train 6.4376 , allloss: 6.4391, dt: 1051.14ms, fracRes: 0.7420, norm(attn): 0.1123, norm(output): 0.9336, norm(x): 0.3314, norm(y): 0.9997, norm:0.8214, tok/sec: 124695.14, flops:97.11, batch-reuse:1
@ 985 train 6.4438 , allloss: 6.4456, dt: 1046.02ms, fracRes: 0.7433, norm(attn): 0.1118, norm(output): 0.9297, norm(x): 0.3281, norm(y): 0.9997, norm:1.0914, tok/sec: 125305.18, flops:97.59, batch-reuse:1
@ 986 train 6.5123 , allloss: 6.5139, dt: 1055.03ms, fracRes: 0.7494, norm(attn): 0.1133, norm(output): 0.9297, norm(x): 0.3172, norm(y): 0.9997, norm:1.0095, tok/sec: 124234.78, flops:96.75, batch-reuse:1
@ 987 train 6.4226 , allloss: 6.4240, dt: 1047.40ms, fracRes: 0.7406, norm(attn): 0.1147, norm(output): 0.9297, norm(x): 0.3286, norm(y): 0.9997, norm:1.0131, tok/sec: 125140.80, flops:97.46, batch-reuse:1
@ 988 train 6.5197 , allloss: 6.5211, dt: 1047.92ms, fracRes: 0.7444, norm(attn): 0.1138, norm(output): 0.9297, norm(x): 0.3249, norm(y): 0.9997, norm:0.6613, tok/sec: 125078.56, flops:97.41, batch-reuse:1
@ 989 train 6.5852 , allloss: 6.5868, dt: 1064.55ms, fracRes: 0.7502, norm(attn): 0.1138, norm(output): 0.9219, norm(x): 0.3135, norm(y): 0.9996, norm:0.5939, tok/sec: 123124.33, flops:95.89, batch-reuse:1
@ 990 train 6.4404 , allloss: 6.4417, dt: 1046.14ms, fracRes: 0.7397, norm(attn): 0.1094, norm(output): 0.9336, norm(x): 0.3257, norm(y): 0.9997, norm:0.9618, tok/sec: 125291.10, flops:97.58, batch-reuse:1
@ 991 train 6.4899 , allloss: 6.4912, dt: 1059.15ms, fracRes: 0.7442, norm(attn): 0.1123, norm(output): 0.9258, norm(x): 0.3238, norm(y): 0.9997, norm:1.4607, tok/sec: 123752.23, flops:96.38, batch-reuse:1
@ 992 train 6.5421 , allloss: 6.5436, dt: 1043.92ms, fracRes: 0.7464, norm(attn): 0.1133, norm(output): 0.9219, norm(x): 0.3150, norm(y): 0.9996, norm:0.6978, tok/sec: 125557.28, flops:97.78, batch-reuse:1
@ 993 train 6.4144 , allloss: 6.4159, dt: 1056.07ms, fracRes: 0.7422, norm(attn): 0.1104, norm(output): 0.9219, norm(x): 0.3182, norm(y): 0.9997, norm:1.1106, tok/sec: 124112.67, flops:96.66, batch-reuse:1
@ 994 train 6.5683 , allloss: 6.5699, dt: 1058.42ms, fracRes: 0.7499, norm(attn): 0.1118, norm(output): 0.9141, norm(x): 0.3105, norm(y): 0.9996, norm:3.5569, tok/sec: 123837.31, flops:96.44, batch-reuse:1
@ 995 train 6.5463 , allloss: 6.5477, dt: 1058.64ms, fracRes: 0.7468, norm(attn): 0.1104, norm(output): 0.9258, norm(x): 0.3175, norm(y): 0.9997, norm:1.9854, tok/sec: 123812.02, flops:96.43, batch-reuse:1
@ 996 train 6.4570 , allloss: 6.4587, dt: 1054.88ms, fracRes: 0.7504, norm(attn): 0.1118, norm(output): 0.8984, norm(x): 0.3059, norm(y): 0.9996, norm:1.1283, tok/sec: 124252.70, flops:96.77, batch-reuse:1
@ 997 train 6.4670 , allloss: 6.4683, dt: 1038.15ms, fracRes: 0.7427, norm(attn): 0.1138, norm(output): 0.9258, norm(x): 0.3181, norm(y): 0.9997, norm:2.0221, tok/sec: 126255.96, flops:98.33, batch-reuse:1
@ 998 train 6.6189 , allloss: 6.6202, dt: 1047.66ms, fracRes: 0.7526, norm(attn): 0.1187, norm(output): 0.9297, norm(x): 0.3063, norm(y): 0.9996, norm:1.2578, tok/sec: 125109.31, flops:97.44, batch-reuse:1
@ 999 train 6.4683 , allloss: 6.4696, dt: 1049.72ms, fracRes: 0.7412, norm(attn): 0.1172, norm(output): 0.9336, norm(x): 0.3252, norm(y): 0.9997, norm:1.3529, tok/sec: 124863.97, flops:97.24, batch-reuse:1
@ 1000 train 6.5631 , allloss: 6.5647, dt: 1040.49ms, fracRes: 0.7528, norm(attn): 0.1172, norm(output): 0.9141, norm(x): 0.2989, norm(y): 0.9995, norm:1.2602, tok/sec: 125971.31, flops:98.11, batch-reuse:1
@ 1001 train 6.5185 , allloss: 6.5199, dt: 1039.51ms, fracRes: 0.7466, norm(attn): 0.1123, norm(output): 0.9258, norm(x): 0.3140, norm(y): 0.9996, norm:0.8114, tok/sec: 126090.32, flops:98.20, batch-reuse:1
@ 1002 train 6.4206 , allloss: 6.4220, dt: 1044.02ms, fracRes: 0.7448, norm(attn): 0.1113, norm(output): 0.9336, norm(x): 0.3257, norm(y): 0.9997, norm:1.0694, tok/sec: 125545.58, flops:97.78, batch-reuse:1
@ 1003 train 6.5591 , allloss: 6.5607, dt: 1057.32ms, fracRes: 0.7508, norm(attn): 0.1084, norm(output): 0.9297, norm(x): 0.3075, norm(y): 0.9996, norm:1.4007, tok/sec: 123966.55, flops:96.55, batch-reuse:1
@ 1004 train 6.4085 , allloss: 6.4102, dt: 1055.68ms, fracRes: 0.7454, norm(attn): 0.1084, norm(output): 0.9297, norm(x): 0.3164, norm(y): 0.9997, norm:0.8242, tok/sec: 124158.44, flops:96.70, batch-reuse:1
@ 1005 train 6.4541 , allloss: 6.4555, dt: 1053.86ms, fracRes: 0.7466, norm(attn): 0.1104, norm(output): 0.9297, norm(x): 0.3163, norm(y): 0.9997, norm:1.0639, tok/sec: 124373.21, flops:96.86, batch-reuse:1
@ 1006 train 6.4551 , allloss: 6.4565, dt: 1045.59ms, fracRes: 0.7474, norm(attn): 0.1104, norm(output): 0.9297, norm(x): 0.3127, norm(y): 0.9997, norm:0.6946, tok/sec: 125356.64, flops:97.63, batch-reuse:1
@ 1007 train 6.4188 , allloss: 6.4201, dt: 1039.05ms, fracRes: 0.7458, norm(attn): 0.1108, norm(output): 0.9258, norm(x): 0.3153, norm(y): 0.9997, norm:0.7122, tok/sec: 126146.45, flops:98.24, batch-reuse:1
@ 1008 train 6.4621 , allloss: 6.4636, dt: 1055.39ms, fracRes: 0.7509, norm(attn): 0.1104, norm(output): 0.9336, norm(x): 0.3048, norm(y): 0.9996, norm:0.7814, tok/sec: 124193.11, flops:96.72, batch-reuse:1
@ 1009 train 6.5063 , allloss: 6.5086, dt: 1050.34ms, fracRes: 0.7584, norm(attn): 0.1108, norm(output): 0.9141, norm(x): 0.2928, norm(y): 0.9995, norm:0.6579, tok/sec: 124790.13, flops:97.19, batch-reuse:1
@ 1010 train 6.5300 , allloss: 6.5332, dt: 1041.25ms, fracRes: 0.7563, norm(attn): 0.1123, norm(output): 0.9102, norm(x): 0.2957, norm(y): 0.9996, norm:0.5406, tok/sec: 125879.96, flops:98.04, batch-reuse:1
@ 1011 train 6.4241 , allloss: 6.4291, dt: 1055.95ms, fracRes: 0.7511, norm(attn): 0.1108, norm(output): 0.9297, norm(x): 0.3046, norm(y): 0.9996, norm:0.6534, tok/sec: 124126.54, flops:96.67, batch-reuse:1
@ 1012 train 6.4978 , allloss: 6.4996, dt: 1039.31ms, fracRes: 0.7584, norm(attn): 0.1128, norm(output): 0.9141, norm(x): 0.2935, norm(y): 0.9995, norm:0.4876, tok/sec: 126114.91, flops:98.22, batch-reuse:1
@ 1013 train 6.4675 , allloss: 6.4690, dt: 1050.94ms, fracRes: 0.7496, norm(attn): 0.1113, norm(output): 0.9219, norm(x): 0.3078, norm(y): 0.9996, norm:0.8927, tok/sec: 124718.96, flops:97.13, batch-reuse:1
@ 1014 train 6.3741 , allloss: 6.3761, dt: 1050.29ms, fracRes: 0.7448, norm(attn): 0.1123, norm(output): 0.9219, norm(x): 0.3130, norm(y): 0.9997, norm:1.3785, tok/sec: 124796.14, flops:97.19, batch-reuse:1
@ 1015 train 6.4605 , allloss: 6.4621, dt: 1051.23ms, fracRes: 0.7501, norm(attn): 0.1123, norm(output): 0.9180, norm(x): 0.3077, norm(y): 0.9996, norm:1.1687, tok/sec: 124684.65, flops:97.10, batch-reuse:1
@ 1016 train 6.5288 , allloss: 6.5302, dt: 1049.47ms, fracRes: 0.7467, norm(attn): 0.1113, norm(output): 0.9141, norm(x): 0.3093, norm(y): 0.9996, norm:3.2347, tok/sec: 124893.64, flops:97.27, batch-reuse:1
@ 1017 train 6.3784 , allloss: 6.3799, dt: 1049.23ms, fracRes: 0.7458, norm(attn): 0.1104, norm(output): 0.9102, norm(x): 0.3121, norm(y): 0.9997, norm:0.7761, tok/sec: 124922.24, flops:97.29, batch-reuse:1
@ 1018 train 6.4929 , allloss: 6.4943, dt: 1064.82ms, fracRes: 0.7539, norm(attn): 0.1118, norm(output): 0.9219, norm(x): 0.3002, norm(y): 0.9996, norm:1.5832, tok/sec: 123093.18, flops:95.87, batch-reuse:1
@ 1019 train 6.4691 , allloss: 6.4705, dt: 1055.90ms, fracRes: 0.7535, norm(attn): 0.1138, norm(output): 0.9141, norm(x): 0.2979, norm(y): 0.9996, norm:0.4899, tok/sec: 124133.32, flops:96.68, batch-reuse:1
@ 1020 train 6.4071 , allloss: 6.4087, dt: 1047.00ms, fracRes: 0.7494, norm(attn): 0.1123, norm(output): 0.9102, norm(x): 0.3012, norm(y): 0.9996, norm:1.2943, tok/sec: 125188.42, flops:97.50, batch-reuse:1
@ 1021 train 6.3892 , allloss: 6.3908, dt: 1056.89ms, fracRes: 0.7498, norm(attn): 0.1138, norm(output): 0.9062, norm(x): 0.3014, norm(y): 0.9996, norm:0.6632, tok/sec: 124016.80, flops:96.58, batch-reuse:1
@ 1022 train 6.3408 , allloss: 6.3424, dt: 1066.81ms, fracRes: 0.7465, norm(attn): 0.1162, norm(output): 0.9180, norm(x): 0.3111, norm(y): 0.9997, norm:0.7372, tok/sec: 122863.89, flops:95.69, batch-reuse:1
@ 1023 train 6.3827 , allloss: 6.3848, dt: 1064.31ms, fracRes: 0.7482, norm(attn): 0.1162, norm(output): 0.8906, norm(x): 0.3010, norm(y): 0.9996, norm:1.2049, tok/sec: 123151.80, flops:95.91, batch-reuse:1
@ 1024 train 6.3400 , allloss: 6.3414, dt: 1051.95ms, fracRes: 0.7445, norm(attn): 0.1113, norm(output): 0.9102, norm(x): 0.3139, norm(y): 0.9997, norm:0.8020, tok/sec: 124599.53, flops:97.04, batch-reuse:1
@ 1025 train 6.3904 , allloss: 6.3920, dt: 1074.02ms, fracRes: 0.7477, norm(attn): 0.1143, norm(output): 0.9141, norm(x): 0.3079, norm(y): 0.9997, norm:0.5578, tok/sec: 122039.00, flops:95.04, batch-reuse:1
@ 1026 train 6.4507 , allloss: 6.4525, dt: 1045.93ms, fracRes: 0.7519, norm(attn): 0.1152, norm(output): 0.9062, norm(x): 0.2942, norm(y): 0.9996, norm:0.8715, tok/sec: 125316.38, flops:97.60, batch-reuse:1
@ 1027 train 6.4142 , allloss: 6.4162, dt: 1056.15ms, fracRes: 0.7545, norm(attn): 0.1123, norm(output): 0.9180, norm(x): 0.2936, norm(y): 0.9996, norm:0.5140, tok/sec: 124103.39, flops:96.65, batch-reuse:1
@ 1028 train 6.3593 , allloss: 6.3609, dt: 1060.47ms, fracRes: 0.7455, norm(attn): 0.1094, norm(output): 0.9102, norm(x): 0.3121, norm(y): 0.9997, norm:0.7185, tok/sec: 123598.52, flops:96.26, batch-reuse:1
@ 1029 train 6.3486 , allloss: 6.3501, dt: 1060.91ms, fracRes: 0.7477, norm(attn): 0.1108, norm(output): 0.8906, norm(x): 0.3054, norm(y): 0.9997, norm:0.6055, tok/sec: 123547.02, flops:96.22, batch-reuse:1
@ 1030 train 6.3881 , allloss: 6.3899, dt: 1046.23ms, fracRes: 0.7597, norm(attn): 0.1138, norm(output): 0.8945, norm(x): 0.2853, norm(y): 0.9996, norm:0.5438, tok/sec: 125280.74, flops:97.57, batch-reuse:1
@ 1031 train 6.4309 , allloss: 6.4326, dt: 1056.28ms, fracRes: 0.7543, norm(attn): 0.1123, norm(output): 0.8984, norm(x): 0.2932, norm(y): 0.9996, norm:0.6948, tok/sec: 124088.52, flops:96.64, batch-reuse:1
@ 1032 train 6.3493 , allloss: 6.3509, dt: 1064.78ms, fracRes: 0.7473, norm(attn): 0.1108, norm(output): 0.8984, norm(x): 0.3035, norm(y): 0.9997, norm:0.7421, tok/sec: 123097.37, flops:95.87, batch-reuse:1
@ 1033 train 6.3539 , allloss: 6.3552, dt: 1049.17ms, fracRes: 0.7489, norm(attn): 0.1138, norm(output): 0.8867, norm(x): 0.3000, norm(y): 0.9997, norm:0.6024, tok/sec: 124929.48, flops:97.30, batch-reuse:1
@ 1034 train 6.3470 , allloss: 6.3485, dt: 1044.24ms, fracRes: 0.7477, norm(attn): 0.1138, norm(output): 0.8984, norm(x): 0.3061, norm(y): 0.9997, norm:0.6646, tok/sec: 125518.78, flops:97.75, batch-reuse:1
@ 1035 train 6.3810 , allloss: 6.3823, dt: 1056.57ms, fracRes: 0.7466, norm(attn): 0.1113, norm(output): 0.9062, norm(x): 0.3064, norm(y): 0.9997, norm:0.6896, tok/sec: 124054.52, flops:96.61, batch-reuse:1
@ 1036 train 6.4048 , allloss: 6.4065, dt: 1056.99ms, fracRes: 0.7549, norm(attn): 0.1133, norm(output): 0.8984, norm(x): 0.2923, norm(y): 0.9996, norm:0.5913, tok/sec: 124004.80, flops:96.58, batch-reuse:1
@ 1037 train 6.4100 , allloss: 6.4113, dt: 1062.69ms, fracRes: 0.7490, norm(attn): 0.1138, norm(output): 0.8984, norm(x): 0.3012, norm(y): 0.9996, norm:0.6710, tok/sec: 123340.32, flops:96.06, batch-reuse:1
@ 1038 train 6.3491 , allloss: 6.3505, dt: 1051.27ms, fracRes: 0.7495, norm(attn): 0.1162, norm(output): 0.8828, norm(x): 0.2992, norm(y): 0.9997, norm:1.1068, tok/sec: 124679.45, flops:97.10, batch-reuse:1
@ 1039 train 6.3322 , allloss: 6.3336, dt: 1055.16ms, fracRes: 0.7461, norm(attn): 0.1162, norm(output): 0.8828, norm(x): 0.3011, norm(y): 0.9997, norm:0.6519, tok/sec: 124220.52, flops:96.74, batch-reuse:1
@ 1040 train 6.2101 , allloss: 6.2113, dt: 1044.28ms, fracRes: 0.7397, norm(attn): 0.1167, norm(output): 0.9180, norm(x): 0.3160, norm(y): 0.9998, norm:1.2440, tok/sec: 125514.65, flops:97.75, batch-reuse:1
@ 1041 train 6.3436 , allloss: 6.3460, dt: 1039.84ms, fracRes: 0.7442, norm(attn): 0.1133, norm(output): 0.8906, norm(x): 0.3065, norm(y): 0.9997, norm:1.5666, tok/sec: 126049.61, flops:98.17, batch-reuse:1
@ 1042 train 6.3107 , allloss: 6.3120, dt: 1044.28ms, fracRes: 0.7464, norm(attn): 0.1152, norm(output): 0.8984, norm(x): 0.3040, norm(y): 0.9997, norm:0.7021, tok/sec: 125513.82, flops:97.75, batch-reuse:1
@ 1043 train 6.3807 , allloss: 6.3821, dt: 1066.82ms, fracRes: 0.7493, norm(attn): 0.1147, norm(output): 0.8984, norm(x): 0.2969, norm(y): 0.9997, norm:0.7606, tok/sec: 122862.54, flops:95.69, batch-reuse:1
@ 1044 train 6.4160 , allloss: 6.4177, dt: 1066.51ms, fracRes: 0.7519, norm(attn): 0.1128, norm(output): 0.8789, norm(x): 0.2867, norm(y): 0.9996, norm:0.8438, tok/sec: 122898.25, flops:95.71, batch-reuse:1
@ 1045 train 6.3903 , allloss: 6.3919, dt: 1040.53ms, fracRes: 0.7514, norm(attn): 0.1152, norm(output): 0.8828, norm(x): 0.2912, norm(y): 0.9996, norm:0.7862, tok/sec: 125966.32, flops:98.10, batch-reuse:1
@ 1046 train 6.3454 , allloss: 6.3469, dt: 1054.19ms, fracRes: 0.7490, norm(attn): 0.1099, norm(output): 0.9062, norm(x): 0.3025, norm(y): 0.9997, norm:1.1419, tok/sec: 124334.53, flops:96.83, batch-reuse:1
@ 1047 train 6.3142 , allloss: 6.3163, dt: 1054.76ms, fracRes: 0.7494, norm(attn): 0.1099, norm(output): 0.8906, norm(x): 0.2944, norm(y): 0.9997, norm:0.8325, tok/sec: 124267.56, flops:96.78, batch-reuse:1
@ 1048 train 6.3366 , allloss: 6.3377, dt: 1050.06ms, fracRes: 0.7482, norm(attn): 0.1099, norm(output): 0.8906, norm(x): 0.2966, norm(y): 0.9996, norm:0.6017, tok/sec: 124823.59, flops:97.21, batch-reuse:1
@ 1049 train 6.3057 , allloss: 6.3070, dt: 1062.90ms, fracRes: 0.7496, norm(attn): 0.1113, norm(output): 0.8906, norm(x): 0.2965, norm(y): 0.9996, norm:0.9840, tok/sec: 123314.90, flops:96.04, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0012,     0.0053,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0007,     0.0060,     0.0049,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0017,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0016,     0.0007,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0008,     0.0004,     0.0001,     0.0001,     0.0000,     0.0007,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0005,     0.0003,     0.0001,     0.0001,     0.0001,     0.0004,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0007,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0005,     0.0003,     0.0001,     0.0001,     0.0001,     0.0006,     0.0001,     0.0002,     0.0000,     0.0007,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0004,     0.0002,     0.0002,     0.0001,     0.0001,     0.0002,     0.0002,     0.0003,     0.0001,     0.0004,     0.0006,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0003,     0.0001,     0.0002,     0.0000,     0.0012,     0.0005,     0.0001,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0003,     0.0007,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -5.5312,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -4.5312, -3.0156,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -4.4375, -2.3438, -2.5469,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189, -6.0625, -3.1562, -4.1562, -7.1562,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -5.0000, -2.8281, -3.6875, -6.6562, -6.2500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918, -6.8125, -4.5312, -5.0312, -8.1875, -7.3438, -7.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, -6.5625, -5.2188, -5.6562, -7.5625, -7.8750, -8.1875, -5.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -5.0625, -2.7188, -3.5000, -5.4688, -5.2500, -5.7500, -2.8594, -4.6562,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052, -5.3125, -3.0000, -3.6406, -5.0000, -5.1562, -5.0938, -3.3281, -4.5938, -3.7500,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, -5.9375, -3.2188, -4.5938, -7.9062, -7.1562, -6.4688, -2.4844, -6.2500, -3.8125, -6.6875,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -4.3438, -2.6094, -3.0625, -4.4375, -4.2812, -4.8438, -2.5000, -4.1875, -3.8125, -5.5625, -2.3125,    -inf,    -inf,    -inf],
          [ 5.1299, -3.8125, -2.7969, -3.6406, -3.4844, -3.7969, -4.7500, -3.2969, -3.6562, -2.9219, -4.7500, -2.6875, -2.2344,    -inf,    -inf],
          [ 5.2781, -4.7188, -2.9375, -4.1250, -5.0938, -5.2500, -5.7188, -2.7031, -4.5312, -3.1094, -6.1875, -1.4766, -2.2500, -3.5625,    -inf],
          [ 5.4161, -6.4062, -3.2812, -4.3750, -7.4688, -6.6562, -7.5000, -3.1250, -6.1562, -5.0000, -9.0000, -2.6562, -1.8125, -5.4688, -6.2500]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9844],
        [0.9779],
        [0.9632],
        [0.9906],
        [0.9902],
        [0.9945],
        [0.9951],
        [0.9928],
        [0.9941],
        [0.9948],
        [0.9915],
        [0.9906],
        [0.9935],
        [0.9958]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0007,     0.0004,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0007,     0.0005,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0005,     0.0003,     0.0000,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863, -15.3750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972, -11.5625,  -8.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -13.4375,  -9.2500, -10.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -8.1250,  -5.1250,  -5.9688,  -7.3125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -8.5625,  -5.5625,  -6.6875,  -7.2812,  -8.6250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,  -8.7500,  -6.0000,  -7.1562,  -6.6875,  -7.9688,  -7.7812,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589,  -7.7188,  -5.2188,  -6.5312,  -6.1562,  -7.5938,  -6.9375,  -4.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -8.2500,  -5.4062,  -6.4375,  -7.0625,  -8.1875,  -7.6250,  -3.6719,  -6.6250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -8.0000,  -5.6562,  -6.3750,  -6.2188,  -7.5312,  -6.9688,  -3.8438,  -6.0938,  -5.0938,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -9.3125,  -5.5000,  -6.9688,  -7.5938, -10.0000,  -9.3125,  -3.7344,  -7.6562,  -6.2500,  -7.9062,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -7.8438,  -5.8438,  -6.8750,  -6.9062,  -7.6250,  -7.1562,  -3.8125,  -6.5000,  -5.0000,  -7.4688,  -2.7656,     -inf,     -inf,     -inf],
          [  5.1299,  -8.6875,  -5.6250,  -6.7812,  -8.3125,  -9.5625,  -8.3750,  -3.8594,  -8.1875,  -5.7500,  -8.6875,  -2.2031,  -2.7031,     -inf,     -inf],
          [  5.2781,  -7.2812,  -5.1875,  -5.6875,  -5.8750,  -7.1875,  -6.5625,  -3.2500,  -5.5000,  -4.7188,  -6.1875,  -2.0469,  -2.4219,  -4.8125,     -inf],
          [  5.4161,  -7.9688,  -5.1875,  -6.4688,  -6.3438,  -7.5625,  -6.8125,  -3.6875,  -5.9375,  -4.7812,  -7.0625,  -2.1406,  -2.5469,  -5.0938,  -4.3125]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.9997],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.9997]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0003,     0.0004,     0.0002,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0001,     0.0000,     0.0001,     0.0002,     0.0001,     0.0005,     0.0002,     0.0001,     0.0001,     0.0003,     0.0004,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863, -13.5000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972,  -8.3750,  -7.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -14.4375, -11.3125, -12.3750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189, -11.9375,  -8.2500,  -9.7500,  -8.8750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835, -13.1250,  -9.6875, -10.7500,  -9.5000,  -7.9688,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918, -12.4375,  -9.4375, -10.0625,  -7.4688,  -7.6562,  -8.6250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589,  -6.2188,  -5.5312,  -6.0312,  -3.8281,  -3.7188,  -4.5312,  -3.5781,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944, -12.1250,  -8.9375, -10.1250,  -8.9375,  -7.5312,  -8.8750,  -6.9062,  -6.9062,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052, -11.1875,  -8.1875,  -9.1250,  -6.7188,  -6.5938,  -7.8125,  -6.1250,  -5.5938,  -5.8438,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958, -16.1250, -11.3125, -12.5000, -10.5625,  -9.3750, -11.5000,  -8.8125,  -8.3750,  -7.3438,  -9.8750,     -inf,     -inf,     -inf,     -inf],
          [  4.9698, -10.5000,  -8.3750,  -9.3750,  -7.0312,  -6.4062,  -7.6562,  -5.7812,  -5.4062,  -5.9375,  -7.3438,  -5.5000,     -inf,     -inf,     -inf],
          [  5.1299,  -5.0312,  -4.6875,  -5.3438,  -4.1250,  -3.2969,  -3.6875,  -2.5625,  -3.4844,  -3.6875,  -4.1562,  -2.8438,  -2.7500,     -inf,     -inf],
          [  5.2781, -11.3750,  -7.9375,  -8.8125,  -7.6250,  -6.4062,  -7.9062,  -6.5312,  -6.0938,  -5.0938,  -7.0000,  -5.0000,  -4.7500,  -5.9062,     -inf],
          [  5.4161,  -9.6250,  -7.8125,  -8.8125,  -6.0938,  -6.2188,  -7.1562,  -5.3750,  -5.4688,  -5.6562,  -6.4062,  -5.7188,  -4.2812,  -5.2500,  -6.7812]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9167],
        [0.9990],
        [0.9997],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.9951],
        [0.9997],
        [0.9997],
        [1.0000],
        [0.9993],
        [0.9967],
        [1.0000],
        [0.9993]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9023,     0.0427,     0.0564,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0046,     0.0266,     0.0065,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.5430,     0.4551,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0471,     0.0030,     0.0007,     0.0009,     0.4180,     0.5234,     0.0062,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0000,     0.0000,     0.0000,     0.5039,     0.4941,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.6289,     0.3672,     0.0000,     0.0000,     0.0045,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6211,     0.0098,     0.0021,     0.0017,     0.1719,     0.0991,     0.0120,     0.0020,     0.0791,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.3594,     0.1592,     0.0000,     0.0000,     0.0018,     0.0000,     0.4805,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8945,     0.0073,     0.0040,     0.0031,     0.0281,     0.0090,     0.0045,     0.0023,     0.0216,     0.0023,     0.0219,     0.0032,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0000,     0.0000,     0.0000,     0.3516,     0.2393,     0.0001,     0.0000,     0.0752,     0.0000,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.3301,     0.1992,     0.0000,     0.0000,     0.0025,     0.0000,     0.4648,     0.0000,     0.0000,     0.0040,     0.0000],
        [    0.9805,     0.0017,     0.0034,     0.0018,     0.0005,     0.0003,     0.0019,     0.0013,     0.0005,     0.0014,     0.0004,     0.0017,     0.0014,     0.0005,     0.0012]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,     -2.1875,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,     -0.8477,     -0.5703,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,     -2.5625,     -0.8203,     -2.2188,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,     10.5625,      0.8477,      2.8438,     46.5000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,      7.4688,      0.1748,      1.8672,     33.5000,     33.5000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,      1.1484,     -0.3516,     -0.0571,      6.0625,      6.3125,      1.8672,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,      2.7969,     -0.9805,     -0.1670,     12.4375,     12.4375,      3.8125,     -0.0454,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,      8.3750,      0.6016,      2.4062,     37.2500,     36.7500,     10.8125,      2.6875,     32.2500,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,      0.4434,     -1.1016,     -1.2969,      3.3125,      2.7500,      0.6445,     -1.1406,      2.5312,     -1.5547,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,      9.1875,      0.6680,      2.4844,     40.5000,     39.7500,     11.6250,      2.7656,     35.2500,      2.0938,     41.0000,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,      0.1562,     -0.4473,     -0.6875,      1.5078,      0.3770,     -0.3301,     -1.0078,      1.2422,     -1.0078,      1.2578,     -0.6523,        -inf,        -inf,        -inf],
          [     5.1299,      2.2344,     -0.2676,      0.0884,     11.6875,     11.3125,      3.3438,     -0.0513,     10.1875,     -0.2852,     11.6250,      0.0106,      2.1094,        -inf,        -inf],
          [     5.2781,      8.2500,      0.5703,      2.3750,     36.7500,     36.2500,     10.6875,      2.6719,     32.0000,      2.1094,     37.2500,      1.1562,      8.1875,     32.5000,        -inf],
          [     5.4161,     -0.9805,     -0.2520,     -0.8711,     -2.2344,     -2.8281,     -0.8281,     -1.2500,     -2.1094,     -1.1641,     -2.5000,     -0.9297,     -1.1797,     -2.1875,     -1.2734]]]], device='cuda:0')
========
RESW: tensor([[    1.0000],
        [    0.8346],
        [    0.8680],
        [    0.9352],
        [    0.0000],
        [    0.0000],
        [    0.3619],
        [    0.3915],
        [    0.0000],
        [    0.7249],
        [    0.0000],
        [    0.8180],
        [    0.1511],
        [    0.0000],
        [    0.8109]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0098,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0003,     0.0005,     0.0066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.9453,     0.0537,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0082,     0.0008,     0.0000,     0.0000,     0.6602,     0.3301,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0000,     0.0000,     0.0002,     0.0110,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.7578,     0.1846,     0.0000,     0.0000,     0.0581,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7422,     0.0000,     0.0000,     0.0000,     0.2559,     0.0001,     0.0001,     0.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.1138,     0.1260,     0.0000,     0.0000,     0.0182,     0.0000,     0.7422,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1934,     0.0002,     0.0000,     0.0000,     0.7539,     0.0073,     0.0003,     0.0000,     0.0116,     0.0000,     0.0325,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1338,     0.0001,     0.0000,     0.0000,     0.8164,     0.0057,     0.0001,     0.0000,     0.0123,     0.0000,     0.0298,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.2852,     0.0669,     0.0000,     0.0000,     0.0205,     0.0000,     0.6055,     0.0000,     0.0000,     0.0210,     0.0000],
        [    0.4238,     0.0006,     0.0000,     0.0001,     0.4297,     0.0320,     0.0009,     0.0000,     0.0293,     0.0001,     0.0649,     0.0000,     0.0000,     0.0197,     0.0002]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863,  -3.2344,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972,  -5.6562,  -6.7812,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726,  -5.1875,  -4.9062,  -2.2500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  11.7500,   1.7891,  -2.6875,  27.6250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,   5.3438,  -3.5938,  -4.9375,  22.5000,  19.6250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,   1.5234,  -2.0156,  -1.9453,   8.2500,   7.5938,   2.1406,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589,  -7.1875,  -8.6250,  -4.6250,  -0.3418,  -7.6562,  -7.0000, -11.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,   7.8125,  -1.5547,  -4.1875,  24.8750,  23.5000,   9.4375,  -0.4375,  22.2500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -5.6562,  -8.4375,  -5.0625,   3.5312,  -3.9688,  -5.0000, -10.3750,  -2.1406,  -7.7812,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,   9.8750,  -0.4258,  -3.8281,  27.6250,  27.6250,  11.6250,   1.0781,  25.7500,   2.3906,  29.5000,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -2.1562,  -5.3750,  -3.8750,   6.3125,   1.6875,  -1.5156,  -6.6875,   2.1562,  -4.6562,   3.1875,  -5.4062,     -inf,     -inf,     -inf],
          [  5.1299,  -2.3594,  -6.1562,  -4.1875,   6.9375,   1.9688,  -2.1562,  -7.6875,   2.7344,  -5.2812,   3.6250,  -5.6562,  -8.3750,     -inf,     -inf],
          [  5.2781,   7.7812,  -1.6562,  -4.2500,  25.0000,  23.6250,   9.4375,  -0.5703,  22.3750,   0.8516,  25.7500,  -0.8594,   3.3281,  22.3750,     -inf],
          [  5.4161,  -1.1719,  -4.1562,  -2.9219,   5.4062,   2.8281,  -0.7344,  -5.0000,   2.7344,  -3.3594,   3.5312,  -4.0625,  -6.0000,   2.3281,  -2.4844]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8067],
        [0.6255],
        [0.6380],
        [0.3311],
        [0.1667],
        [0.1296],
        [0.7344],
        [0.2464],
        [0.6307],
        [0.2506],
        [0.4746],
        [0.3308],
        [0.2454],
        [0.5271]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.2930 the:0.0757,:0.1074 you:0.1147,:0.0092,:0.2373 the:0.0811
:0.0349)


------
		( the:0.0757,:0.1074 you:0.1147,:0.0092,:0.2373 the:0.0811
:0.0349The:0.1104)
The same, and the same, and the most than the first of the
@ 1050 train 6.3246 , allloss: 6.3256, dt: 1307.79ms, fracRes: 0.7489, norm(attn): 0.1104, norm(output): 0.8828, norm(x): 0.2972, norm(y): 0.9996, norm:0.6888, tok/sec: 100224.04, flops:78.05, batch-reuse:1
@ 1051 train 6.2791 , allloss: 6.2803, dt: 1059.45ms, fracRes: 0.7489, norm(attn): 0.1094, norm(output): 0.8828, norm(x): 0.2967, norm(y): 0.9996, norm:0.6402, tok/sec: 123716.45, flops:96.35, batch-reuse:1
@ 1052 train 6.2797 , allloss: 6.2809, dt: 1050.26ms, fracRes: 0.7455, norm(attn): 0.1104, norm(output): 0.8984, norm(x): 0.3028, norm(y): 0.9997, norm:0.6873, tok/sec: 124799.74, flops:97.19, batch-reuse:1
@ 1053 train 6.3119 , allloss: 6.3132, dt: 1056.30ms, fracRes: 0.7488, norm(attn): 0.1094, norm(output): 0.8867, norm(x): 0.2965, norm(y): 0.9996, norm:0.6301, tok/sec: 124085.52, flops:96.64, batch-reuse:1
@ 1054 train 6.2919 , allloss: 6.2931, dt: 1048.20ms, fracRes: 0.7486, norm(attn): 0.1099, norm(output): 0.8867, norm(x): 0.2949, norm(y): 0.9996, norm:0.5661, tok/sec: 125044.28, flops:97.38, batch-reuse:1
@ 1055 train 6.2804 , allloss: 6.2815, dt: 1065.37ms, fracRes: 0.7491, norm(attn): 0.1099, norm(output): 0.8828, norm(x): 0.2964, norm(y): 0.9996, norm:0.6534, tok/sec: 123029.47, flops:95.82, batch-reuse:1
@ 1056 train 6.2893 , allloss: 6.2906, dt: 1058.38ms, fracRes: 0.7481, norm(attn): 0.1089, norm(output): 0.8789, norm(x): 0.2940, norm(y): 0.9996, norm:0.6691, tok/sec: 123841.64, flops:96.45, batch-reuse:1
@ 1057 train 6.3368 , allloss: 6.3382, dt: 1072.88ms, fracRes: 0.7515, norm(attn): 0.1094, norm(output): 0.8828, norm(x): 0.2883, norm(y): 0.9996, norm:0.6931, tok/sec: 122168.91, flops:95.15, batch-reuse:1
@ 1058 train 6.3361 , allloss: 6.3377, dt: 1047.32ms, fracRes: 0.7499, norm(attn): 0.1118, norm(output): 0.8789, norm(x): 0.2923, norm(y): 0.9996, norm:0.4516, tok/sec: 125150.43, flops:97.47, batch-reuse:1
@ 1059 train 6.3064 , allloss: 6.3079, dt: 1047.28ms, fracRes: 0.7497, norm(attn): 0.1123, norm(output): 0.8828, norm(x): 0.2923, norm(y): 0.9996, norm:1.6818, tok/sec: 125155.13, flops:97.47, batch-reuse:1
@ 1060 train 6.3499 , allloss: 6.3511, dt: 1052.98ms, fracRes: 0.7491, norm(attn): 0.1113, norm(output): 0.8828, norm(x): 0.2938, norm(y): 0.9996, norm:1.6674, tok/sec: 124477.37, flops:96.94, batch-reuse:1
@ 1061 train 6.3613 , allloss: 6.3632, dt: 1068.21ms, fracRes: 0.7526, norm(attn): 0.1104, norm(output): 0.8828, norm(x): 0.2816, norm(y): 0.9995, norm:1.0647, tok/sec: 122702.78, flops:95.56, batch-reuse:1
@ 1062 train 6.3134 , allloss: 6.3148, dt: 1064.58ms, fracRes: 0.7512, norm(attn): 0.1104, norm(output): 0.8828, norm(x): 0.2909, norm(y): 0.9996, norm:0.9675, tok/sec: 123120.56, flops:95.89, batch-reuse:1
@ 1063 train 6.2982 , allloss: 6.2998, dt: 1063.52ms, fracRes: 0.7569, norm(attn): 0.1104, norm(output): 0.8828, norm(x): 0.2812, norm(y): 0.9995, norm:0.7521, tok/sec: 123244.13, flops:95.98, batch-reuse:1
@ 1064 train 6.3519 , allloss: 6.3533, dt: 1066.35ms, fracRes: 0.7523, norm(attn): 0.1089, norm(output): 0.8789, norm(x): 0.2829, norm(y): 0.9996, norm:0.6040, tok/sec: 122916.14, flops:95.73, batch-reuse:1
@ 1065 train 6.3617 , allloss: 6.3629, dt: 1054.53ms, fracRes: 0.7511, norm(attn): 0.1084, norm(output): 0.8789, norm(x): 0.2863, norm(y): 0.9996, norm:0.9431, tok/sec: 124293.80, flops:96.80, batch-reuse:1
@ 1066 train 6.3415 , allloss: 6.3429, dt: 1054.79ms, fracRes: 0.7559, norm(attn): 0.1113, norm(output): 0.8828, norm(x): 0.2777, norm(y): 0.9995, norm:0.5150, tok/sec: 124263.96, flops:96.78, batch-reuse:1
@ 1067 train 6.3525 , allloss: 6.3545, dt: 1047.31ms, fracRes: 0.7603, norm(attn): 0.1138, norm(output): 0.8828, norm(x): 0.2714, norm(y): 0.9995, norm:0.6808, tok/sec: 125151.23, flops:97.47, batch-reuse:1
@ 1068 train 6.3131 , allloss: 6.3143, dt: 1040.72ms, fracRes: 0.7505, norm(attn): 0.1104, norm(output): 0.8828, norm(x): 0.2877, norm(y): 0.9996, norm:0.5830, tok/sec: 125943.67, flops:98.09, batch-reuse:1
@ 1069 train 6.2533 , allloss: 6.2544, dt: 1067.91ms, fracRes: 0.7471, norm(attn): 0.1089, norm(output): 0.8867, norm(x): 0.2933, norm(y): 0.9996, norm:0.6643, tok/sec: 122736.91, flops:95.59, batch-reuse:1
@ 1070 train 6.2946 , allloss: 6.2962, dt: 1048.48ms, fracRes: 0.7524, norm(attn): 0.1118, norm(output): 0.8750, norm(x): 0.2842, norm(y): 0.9996, norm:0.7524, tok/sec: 125011.95, flops:97.36, batch-reuse:1
@ 1071 train 6.2077 , allloss: 6.2095, dt: 1053.64ms, fracRes: 0.7488, norm(attn): 0.1104, norm(output): 0.8750, norm(x): 0.2886, norm(y): 0.9996, norm:0.7343, tok/sec: 124399.80, flops:96.88, batch-reuse:1
@ 1072 train 6.3090 , allloss: 6.3107, dt: 1059.37ms, fracRes: 0.7509, norm(attn): 0.1143, norm(output): 0.8789, norm(x): 0.2873, norm(y): 0.9996, norm:0.5296, tok/sec: 123726.36, flops:96.36, batch-reuse:1
@ 1073 train 6.2284 , allloss: 6.2295, dt: 1053.25ms, fracRes: 0.7489, norm(attn): 0.1138, norm(output): 0.8828, norm(x): 0.2885, norm(y): 0.9996, norm:0.4958, tok/sec: 124444.83, flops:96.92, batch-reuse:1
@ 1074 train 6.2192 , allloss: 6.2295, dt: 1066.10ms, fracRes: 0.7505, norm(attn): 0.1113, norm(output): 0.8789, norm(x): 0.2815, norm(y): 0.9996, norm:0.5643, tok/sec: 122945.38, flops:95.75, batch-reuse:1
@ 1075 train 6.2500 , allloss: 6.2513, dt: 1049.67ms, fracRes: 0.7521, norm(attn): 0.1113, norm(output): 0.8711, norm(x): 0.2794, norm(y): 0.9996, norm:0.4759, tok/sec: 124869.16, flops:97.25, batch-reuse:1
@ 1076 train 6.3062 , allloss: 6.3077, dt: 1049.47ms, fracRes: 0.7554, norm(attn): 0.1128, norm(output): 0.8711, norm(x): 0.2711, norm(y): 0.9995, norm:0.6587, tok/sec: 124893.67, flops:97.27, batch-reuse:1
@ 1077 train 6.2351 , allloss: 6.2364, dt: 1057.69ms, fracRes: 0.7510, norm(attn): 0.1138, norm(output): 0.8750, norm(x): 0.2813, norm(y): 0.9996, norm:1.0674, tok/sec: 123922.62, flops:96.51, batch-reuse:1
@ 1078 train 6.5522 , allloss: 6.5535, dt: 1052.14ms, fracRes: 0.7621, norm(attn): 0.1162, norm(output): 0.8594, norm(x): 0.2590, norm(y): 0.9994, norm:1.6427, tok/sec: 124576.49, flops:97.02, batch-reuse:1
@ 1079 train 6.1954 , allloss: 6.1969, dt: 1062.44ms, fracRes: 0.7516, norm(attn): 0.1143, norm(output): 0.8711, norm(x): 0.2773, norm(y): 0.9996, norm:0.6352, tok/sec: 123368.89, flops:96.08, batch-reuse:1
@ 1080 train 6.3439 , allloss: 6.3451, dt: 1052.10ms, fracRes: 0.7533, norm(attn): 0.1123, norm(output): 0.8750, norm(x): 0.2787, norm(y): 0.9996, norm:3.8475, tok/sec: 124580.95, flops:97.02, batch-reuse:1
@ 1081 train 6.3434 , allloss: 6.3446, dt: 1055.25ms, fracRes: 0.7543, norm(attn): 0.1138, norm(output): 0.8789, norm(x): 0.2775, norm(y): 0.9996, norm:2.0909, tok/sec: 124208.85, flops:96.73, batch-reuse:1
@ 1082 train 6.5358 , allloss: 6.5373, dt: 1053.97ms, fracRes: 0.7572, norm(attn): 0.1113, norm(output): 0.8633, norm(x): 0.2666, norm(y): 0.9994, norm:3.0533, tok/sec: 124360.55, flops:96.85, batch-reuse:1
@ 1083 train 6.3490 , allloss: 6.3502, dt: 1080.10ms, fracRes: 0.7489, norm(attn): 0.1099, norm(output): 0.8750, norm(x): 0.2822, norm(y): 0.9996, norm:1.4601, tok/sec: 121351.29, flops:94.51, batch-reuse:1
@ 1084 train 6.2194 , allloss: 6.2206, dt: 1055.14ms, fracRes: 0.7486, norm(attn): 0.1162, norm(output): 0.8867, norm(x): 0.2903, norm(y): 0.9996, norm:1.6118, tok/sec: 124222.49, flops:96.74, batch-reuse:1
@ 1085 train 6.3951 , allloss: 6.3972, dt: 1053.92ms, fracRes: 0.7746, norm(attn): 0.1162, norm(output): 0.8711, norm(x): 0.2440, norm(y): 0.9993, norm:1.0691, tok/sec: 124366.26, flops:96.86, batch-reuse:1
@ 1086 train 6.2869 , allloss: 6.2880, dt: 1044.10ms, fracRes: 0.7500, norm(attn): 0.1104, norm(output): 0.8789, norm(x): 0.2843, norm(y): 0.9996, norm:1.2981, tok/sec: 125536.46, flops:97.77, batch-reuse:1
@ 1087 train 6.2511 , allloss: 6.2523, dt: 1061.97ms, fracRes: 0.7485, norm(attn): 0.1123, norm(output): 0.8789, norm(x): 0.2904, norm(y): 0.9996, norm:1.2705, tok/sec: 123423.75, flops:96.12, batch-reuse:1
@ 1088 train 6.3569 , allloss: 6.3584, dt: 1060.07ms, fracRes: 0.7521, norm(attn): 0.1143, norm(output): 0.8828, norm(x): 0.2776, norm(y): 0.9995, norm:2.9419, tok/sec: 123644.33, flops:96.29, batch-reuse:1
@ 1089 train 6.2818 , allloss: 6.2833, dt: 1069.32ms, fracRes: 0.7531, norm(attn): 0.1162, norm(output): 0.8867, norm(x): 0.2799, norm(y): 0.9995, norm:1.3500, tok/sec: 122574.85, flops:95.46, batch-reuse:1
@ 1090 train 6.2671 , allloss: 6.2688, dt: 1055.96ms, fracRes: 0.7496, norm(attn): 0.1108, norm(output): 0.8828, norm(x): 0.2856, norm(y): 0.9995, norm:0.7737, tok/sec: 124125.70, flops:96.67, batch-reuse:1
@ 1091 train 6.2692 , allloss: 6.2711, dt: 1048.64ms, fracRes: 0.7504, norm(attn): 0.1089, norm(output): 0.8906, norm(x): 0.2847, norm(y): 0.9995, norm:0.8064, tok/sec: 124992.06, flops:97.34, batch-reuse:1
@ 1092 train 6.3619 , allloss: 6.3643, dt: 1046.10ms, fracRes: 0.7634, norm(attn): 0.1094, norm(output): 0.8828, norm(x): 0.2700, norm(y): 0.9994, norm:0.8446, tok/sec: 125296.27, flops:97.58, batch-reuse:1
@ 1093 train 6.2200 , allloss: 6.2215, dt: 1045.14ms, fracRes: 0.7485, norm(attn): 0.1094, norm(output): 0.8945, norm(x): 0.2959, norm(y): 0.9996, norm:0.8318, tok/sec: 125410.57, flops:97.67, batch-reuse:1
@ 1094 train 6.2289 , allloss: 6.2308, dt: 1060.93ms, fracRes: 0.7511, norm(attn): 0.1113, norm(output): 0.8867, norm(x): 0.2866, norm(y): 0.9995, norm:0.7815, tok/sec: 123544.02, flops:96.22, batch-reuse:1
@ 1095 train 6.2128 , allloss: 6.2164, dt: 1048.42ms, fracRes: 0.7508, norm(attn): 0.1113, norm(output): 0.8828, norm(x): 0.2905, norm(y): 0.9996, norm:0.6556, tok/sec: 125018.26, flops:97.36, batch-reuse:1
@ 1096 train 6.2581 , allloss: 6.2614, dt: 1043.15ms, fracRes: 0.7526, norm(attn): 0.1118, norm(output): 0.8828, norm(x): 0.2858, norm(y): 0.9995, norm:0.8966, tok/sec: 125649.88, flops:97.86, batch-reuse:1
@ 1097 train 6.1654 , allloss: 6.1675, dt: 1049.67ms, fracRes: 0.7538, norm(attn): 0.1118, norm(output): 0.8945, norm(x): 0.2798, norm(y): 0.9995, norm:0.5682, tok/sec: 124870.18, flops:97.25, batch-reuse:1
@ 1098 train 6.1816 , allloss: 6.1828, dt: 1053.00ms, fracRes: 0.7503, norm(attn): 0.1104, norm(output): 0.8867, norm(x): 0.2839, norm(y): 0.9995, norm:0.4928, tok/sec: 124475.29, flops:96.94, batch-reuse:1
@ 1099 train 6.2402 , allloss: 6.2420, dt: 1054.48ms, fracRes: 0.7545, norm(attn): 0.1113, norm(output): 0.8828, norm(x): 0.2776, norm(y): 0.9995, norm:0.4893, tok/sec: 124300.54, flops:96.81, batch-reuse:1
@ 1100 train 6.2348 , allloss: 6.2360, dt: 1051.25ms, fracRes: 0.7523, norm(attn): 0.1118, norm(output): 0.8828, norm(x): 0.2815, norm(y): 0.9995, norm:0.5260, tok/sec: 124681.93, flops:97.10, batch-reuse:1
@ 1101 train 6.3008 , allloss: 6.3022, dt: 1065.08ms, fracRes: 0.7569, norm(attn): 0.1113, norm(output): 0.8789, norm(x): 0.2749, norm(y): 0.9994, norm:0.5092, tok/sec: 123062.65, flops:95.84, batch-reuse:1
@ 1102 train 6.2445 , allloss: 6.2456, dt: 1059.08ms, fracRes: 0.7521, norm(attn): 0.1094, norm(output): 0.8906, norm(x): 0.2822, norm(y): 0.9995, norm:0.4974, tok/sec: 123760.48, flops:96.39, batch-reuse:1
@ 1103 train 6.3215 , allloss: 6.3271, dt: 1056.77ms, fracRes: 0.7527, norm(attn): 0.1099, norm(output): 0.8906, norm(x): 0.2817, norm(y): 0.9995, norm:0.5356, tok/sec: 124030.51, flops:96.60, batch-reuse:1
@ 1104 train 6.3779 , allloss: 6.3794, dt: 1048.77ms, fracRes: 0.7699, norm(attn): 0.1108, norm(output): 0.8750, norm(x): 0.2558, norm(y): 0.9992, norm:0.5283, tok/sec: 124977.20, flops:97.33, batch-reuse:1
@ 1105 train 6.2573 , allloss: 6.2587, dt: 1045.15ms, fracRes: 0.7534, norm(attn): 0.1104, norm(output): 0.8828, norm(x): 0.2788, norm(y): 0.9994, norm:0.5559, tok/sec: 125409.86, flops:97.67, batch-reuse:1
@ 1106 train 6.2092 , allloss: 6.2104, dt: 1045.00ms, fracRes: 0.7498, norm(attn): 0.1094, norm(output): 0.8984, norm(x): 0.2865, norm(y): 0.9995, norm:0.5405, tok/sec: 125428.17, flops:97.68, batch-reuse:1
@ 1107 train 6.3196 , allloss: 6.3213, dt: 1058.89ms, fracRes: 0.7642, norm(attn): 0.1123, norm(output): 0.8906, norm(x): 0.2623, norm(y): 0.9993, norm:0.6266, tok/sec: 123782.80, flops:96.40, batch-reuse:1
@ 1108 train 6.2055 , allloss: 6.2067, dt: 1058.25ms, fracRes: 0.7523, norm(attn): 0.1104, norm(output): 0.8906, norm(x): 0.2792, norm(y): 0.9995, norm:0.4978, tok/sec: 123856.98, flops:96.46, batch-reuse:1
@ 1109 train 6.2170 , allloss: 6.2183, dt: 1050.47ms, fracRes: 0.7532, norm(attn): 0.1113, norm(output): 0.8945, norm(x): 0.2787, norm(y): 0.9995, norm:0.5481, tok/sec: 124774.58, flops:97.17, batch-reuse:1
@ 1110 train 6.2302 , allloss: 6.2315, dt: 1070.59ms, fracRes: 0.7509, norm(attn): 0.1118, norm(output): 0.8906, norm(x): 0.2812, norm(y): 0.9995, norm:0.6602, tok/sec: 122429.93, flops:95.35, batch-reuse:1
@ 1111 train 6.2100 , allloss: 6.2115, dt: 1064.54ms, fracRes: 0.7516, norm(attn): 0.1113, norm(output): 0.8984, norm(x): 0.2830, norm(y): 0.9995, norm:0.9762, tok/sec: 123125.38, flops:95.89, batch-reuse:1
@ 1112 train 6.4229 , allloss: 6.4243, dt: 1072.12ms, fracRes: 0.7540, norm(attn): 0.1079, norm(output): 0.8906, norm(x): 0.2738, norm(y): 0.9994, norm:2.9653, tok/sec: 122254.57, flops:95.21, batch-reuse:1
@ 1113 train 6.3662 , allloss: 6.3678, dt: 1054.64ms, fracRes: 0.7545, norm(attn): 0.1074, norm(output): 0.8945, norm(x): 0.2724, norm(y): 0.9994, norm:0.7672, tok/sec: 124281.01, flops:96.79, batch-reuse:1
@ 1114 train 6.5100 , allloss: 6.5112, dt: 1055.35ms, fracRes: 0.7506, norm(attn): 0.1094, norm(output): 0.8906, norm(x): 0.2797, norm(y): 0.9994, norm:2.1757, tok/sec: 124197.60, flops:96.73, batch-reuse:1
@ 1115 train 6.3796 , allloss: 6.3811, dt: 1066.49ms, fracRes: 0.7564, norm(attn): 0.1099, norm(output): 0.8906, norm(x): 0.2683, norm(y): 0.9994, norm:0.7742, tok/sec: 122900.75, flops:95.72, batch-reuse:1
@ 1116 train 6.3009 , allloss: 6.3025, dt: 1063.31ms, fracRes: 0.7534, norm(attn): 0.1035, norm(output): 0.8828, norm(x): 0.2708, norm(y): 0.9994, norm:1.1017, tok/sec: 123267.67, flops:96.00, batch-reuse:1
@ 1117 train 6.3115 , allloss: 6.3131, dt: 1064.58ms, fracRes: 0.7533, norm(attn): 0.1050, norm(output): 0.8945, norm(x): 0.2745, norm(y): 0.9994, norm:0.9044, tok/sec: 123121.16, flops:95.89, batch-reuse:1
@ 1118 train 6.3879 , allloss: 6.3894, dt: 1044.05ms, fracRes: 0.7563, norm(attn): 0.1074, norm(output): 0.8906, norm(x): 0.2674, norm(y): 0.9994, norm:0.7026, tok/sec: 125541.77, flops:97.77, batch-reuse:1
@ 1119 train 6.3537 , allloss: 6.3552, dt: 1060.61ms, fracRes: 0.7513, norm(attn): 0.1084, norm(output): 0.8945, norm(x): 0.2740, norm(y): 0.9994, norm:1.0187, tok/sec: 123581.34, flops:96.25, batch-reuse:1
@ 1120 train 6.3581 , allloss: 6.3596, dt: 1054.86ms, fracRes: 0.7565, norm(attn): 0.1079, norm(output): 0.9023, norm(x): 0.2701, norm(y): 0.9994, norm:0.8018, tok/sec: 124255.42, flops:96.77, batch-reuse:1
@ 1121 train 6.4097 , allloss: 6.4115, dt: 1051.59ms, fracRes: 0.7604, norm(attn): 0.1069, norm(output): 0.8828, norm(x): 0.2642, norm(y): 0.9993, norm:0.7723, tok/sec: 124641.37, flops:97.07, batch-reuse:1
@ 1122 train 6.3528 , allloss: 6.3549, dt: 1063.02ms, fracRes: 0.7610, norm(attn): 0.1064, norm(output): 0.8906, norm(x): 0.2591, norm(y): 0.9993, norm:0.7606, tok/sec: 123301.65, flops:96.03, batch-reuse:1
@ 1123 train 6.2936 , allloss: 6.2951, dt: 1060.50ms, fracRes: 0.7544, norm(attn): 0.1069, norm(output): 0.8906, norm(x): 0.2707, norm(y): 0.9994, norm:0.5389, tok/sec: 123594.68, flops:96.26, batch-reuse:1
@ 1124 train 6.3287 , allloss: 6.3302, dt: 1050.25ms, fracRes: 0.7547, norm(attn): 0.1079, norm(output): 0.8945, norm(x): 0.2717, norm(y): 0.9994, norm:0.9975, tok/sec: 124800.93, flops:97.20, batch-reuse:1
@ 1125 train 6.3528 , allloss: 6.3547, dt: 1077.96ms, fracRes: 0.7614, norm(attn): 0.1064, norm(output): 0.8828, norm(x): 0.2606, norm(y): 0.9993, norm:0.5592, tok/sec: 121592.37, flops:94.70, batch-reuse:1
@ 1126 train 6.3276 , allloss: 6.3290, dt: 1060.35ms, fracRes: 0.7534, norm(attn): 0.1050, norm(output): 0.8750, norm(x): 0.2736, norm(y): 0.9994, norm:0.9938, tok/sec: 123611.63, flops:96.27, batch-reuse:1
@ 1127 train 6.3064 , allloss: 6.3084, dt: 1054.38ms, fracRes: 0.7556, norm(attn): 0.1040, norm(output): 0.8867, norm(x): 0.2718, norm(y): 0.9994, norm:0.5885, tok/sec: 124311.56, flops:96.81, batch-reuse:1
@ 1128 train 6.3232 , allloss: 6.3247, dt: 1052.30ms, fracRes: 0.7572, norm(attn): 0.1074, norm(output): 0.8828, norm(x): 0.2687, norm(y): 0.9994, norm:0.7570, tok/sec: 124557.98, flops:97.01, batch-reuse:1
@ 1129 train 6.3214 , allloss: 6.3227, dt: 1061.50ms, fracRes: 0.7557, norm(attn): 0.1040, norm(output): 0.8828, norm(x): 0.2705, norm(y): 0.9993, norm:0.5744, tok/sec: 123478.48, flops:96.17, batch-reuse:1
@ 1130 train 6.3031 , allloss: 6.3044, dt: 1065.17ms, fracRes: 0.7552, norm(attn): 0.1040, norm(output): 0.8906, norm(x): 0.2699, norm(y): 0.9994, norm:0.6344, tok/sec: 123052.93, flops:95.83, batch-reuse:1
@ 1131 train 6.3417 , allloss: 6.3432, dt: 1064.37ms, fracRes: 0.7585, norm(attn): 0.1055, norm(output): 0.8828, norm(x): 0.2635, norm(y): 0.9993, norm:0.5127, tok/sec: 123144.91, flops:95.91, batch-reuse:1
@ 1132 train 6.3433 , allloss: 6.3447, dt: 1060.79ms, fracRes: 0.7574, norm(attn): 0.1079, norm(output): 0.8750, norm(x): 0.2653, norm(y): 0.9993, norm:0.5912, tok/sec: 123560.43, flops:96.23, batch-reuse:1
@ 1133 train 6.3593 , allloss: 6.3608, dt: 1064.89ms, fracRes: 0.7616, norm(attn): 0.1094, norm(output): 0.8789, norm(x): 0.2595, norm(y): 0.9993, norm:0.5609, tok/sec: 123084.45, flops:95.86, batch-reuse:1
@ 1134 train 6.2957 , allloss: 6.2971, dt: 1062.05ms, fracRes: 0.7587, norm(attn): 0.1094, norm(output): 0.8867, norm(x): 0.2628, norm(y): 0.9993, norm:0.4295, tok/sec: 123414.72, flops:96.12, batch-reuse:1
@ 1135 train 6.3020 , allloss: 6.3033, dt: 1064.74ms, fracRes: 0.7540, norm(attn): 0.1084, norm(output): 0.8828, norm(x): 0.2725, norm(y): 0.9993, norm:0.5951, tok/sec: 123101.89, flops:95.87, batch-reuse:1
@ 1136 train 6.3402 , allloss: 6.3415, dt: 1055.59ms, fracRes: 0.7597, norm(attn): 0.1079, norm(output): 0.8789, norm(x): 0.2645, norm(y): 0.9993, norm:0.4975, tok/sec: 124169.94, flops:96.70, batch-reuse:1
@ 1137 train 6.3168 , allloss: 6.3180, dt: 1050.91ms, fracRes: 0.7579, norm(attn): 0.1064, norm(output): 0.8750, norm(x): 0.2643, norm(y): 0.9993, norm:0.5226, tok/sec: 124722.21, flops:97.13, batch-reuse:1
@ 1138 train 6.4489 , allloss: 6.4503, dt: 1050.20ms, fracRes: 0.7601, norm(attn): 0.1064, norm(output): 0.8789, norm(x): 0.2617, norm(y): 0.9992, norm:0.4732, tok/sec: 124806.17, flops:97.20, batch-reuse:1
@ 1139 train 6.2798 , allloss: 6.2812, dt: 1058.43ms, fracRes: 0.7609, norm(attn): 0.1040, norm(output): 0.8789, norm(x): 0.2603, norm(y): 0.9992, norm:0.6099, tok/sec: 123836.53, flops:96.44, batch-reuse:1
@ 1140 train 6.3264 , allloss: 6.3276, dt: 1047.08ms, fracRes: 0.7624, norm(attn): 0.1064, norm(output): 0.8750, norm(x): 0.2563, norm(y): 0.9992, norm:0.5127, tok/sec: 125178.67, flops:97.49, batch-reuse:1
@ 1141 train 6.2333 , allloss: 6.2344, dt: 1050.80ms, fracRes: 0.7555, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2640, norm(y): 0.9993, norm:0.4417, tok/sec: 124735.68, flops:97.14, batch-reuse:1
@ 1142 train 6.2560 , allloss: 6.2571, dt: 1064.50ms, fracRes: 0.7560, norm(attn): 0.1069, norm(output): 0.8789, norm(x): 0.2638, norm(y): 0.9993, norm:0.4567, tok/sec: 123129.88, flops:95.89, batch-reuse:1
@ 1143 train 6.2703 , allloss: 6.2725, dt: 1044.87ms, fracRes: 0.7651, norm(attn): 0.1079, norm(output): 0.8828, norm(x): 0.2485, norm(y): 0.9992, norm:1.1650, tok/sec: 125443.37, flops:97.70, batch-reuse:1
@ 1144 train 6.2904 , allloss: 6.2918, dt: 1058.69ms, fracRes: 0.7537, norm(attn): 0.1050, norm(output): 0.8828, norm(x): 0.2638, norm(y): 0.9993, norm:0.8780, tok/sec: 123806.16, flops:96.42, batch-reuse:1
@ 1145 train 6.3605 , allloss: 6.3621, dt: 1058.74ms, fracRes: 0.7624, norm(attn): 0.1099, norm(output): 0.8789, norm(x): 0.2557, norm(y): 0.9992, norm:0.8881, tok/sec: 123800.08, flops:96.42, batch-reuse:1
@ 1146 train 6.3246 , allloss: 6.3260, dt: 1051.29ms, fracRes: 0.7597, norm(attn): 0.1094, norm(output): 0.8789, norm(x): 0.2588, norm(y): 0.9992, norm:0.5628, tok/sec: 124677.13, flops:97.10, batch-reuse:1
@ 1147 train 6.3216 , allloss: 6.3230, dt: 1062.25ms, fracRes: 0.7544, norm(attn): 0.1079, norm(output): 0.8867, norm(x): 0.2657, norm(y): 0.9993, norm:0.7932, tok/sec: 123390.68, flops:96.10, batch-reuse:1
@ 1148 train 6.2642 , allloss: 6.2654, dt: 1045.81ms, fracRes: 0.7509, norm(attn): 0.1074, norm(output): 0.8828, norm(x): 0.2741, norm(y): 0.9993, norm:0.6470, tok/sec: 125330.49, flops:97.61, batch-reuse:1
@ 1149 train 6.2687 , allloss: 6.2698, dt: 1049.95ms, fracRes: 0.7517, norm(attn): 0.1104, norm(output): 0.8789, norm(x): 0.2715, norm(y): 0.9993, norm:0.6527, tok/sec: 124836.32, flops:97.22, batch-reuse:1
@ 1150 train 6.2873 , allloss: 6.2888, dt: 1063.71ms, fracRes: 0.7566, norm(attn): 0.1079, norm(output): 0.8750, norm(x): 0.2608, norm(y): 0.9993, norm:0.6251, tok/sec: 123221.56, flops:95.97, batch-reuse:1
@ 1151 train 6.3593 , allloss: 6.3607, dt: 1077.91ms, fracRes: 0.7590, norm(attn): 0.1064, norm(output): 0.8750, norm(x): 0.2572, norm(y): 0.9992, norm:0.6384, tok/sec: 121598.66, flops:94.70, batch-reuse:1
@ 1152 train 6.2740 , allloss: 6.2753, dt: 1046.10ms, fracRes: 0.7571, norm(attn): 0.1094, norm(output): 0.8750, norm(x): 0.2626, norm(y): 0.9992, norm:0.5812, tok/sec: 125295.53, flops:97.58, batch-reuse:1
@ 1153 train 6.2887 , allloss: 6.2898, dt: 1056.50ms, fracRes: 0.7572, norm(attn): 0.1104, norm(output): 0.8711, norm(x): 0.2600, norm(y): 0.9992, norm:0.4653, tok/sec: 124062.11, flops:96.62, batch-reuse:1
@ 1154 train 6.2575 , allloss: 6.2588, dt: 1051.11ms, fracRes: 0.7567, norm(attn): 0.1089, norm(output): 0.8750, norm(x): 0.2605, norm(y): 0.9992, norm:0.7280, tok/sec: 124698.45, flops:97.12, batch-reuse:1
@ 1155 train 6.2017 , allloss: 6.2029, dt: 1070.65ms, fracRes: 0.7528, norm(attn): 0.1079, norm(output): 0.8789, norm(x): 0.2717, norm(y): 0.9993, norm:0.8149, tok/sec: 122423.22, flops:95.34, batch-reuse:1
@ 1156 train 6.3328 , allloss: 6.3342, dt: 1049.42ms, fracRes: 0.7600, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2598, norm(y): 0.9992, norm:1.0260, tok/sec: 124898.97, flops:97.27, batch-reuse:1
@ 1157 train 6.2821 , allloss: 6.2835, dt: 1065.90ms, fracRes: 0.7575, norm(attn): 0.1108, norm(output): 0.8750, norm(x): 0.2604, norm(y): 0.9993, norm:0.6778, tok/sec: 122968.48, flops:95.77, batch-reuse:1
@ 1158 train 6.2729 , allloss: 6.2743, dt: 1063.24ms, fracRes: 0.7578, norm(attn): 0.1104, norm(output): 0.8672, norm(x): 0.2586, norm(y): 0.9993, norm:0.7150, tok/sec: 123275.58, flops:96.01, batch-reuse:1
@ 1159 train 6.3050 , allloss: 6.3070, dt: 1066.29ms, fracRes: 0.7656, norm(attn): 0.1074, norm(output): 0.8789, norm(x): 0.2485, norm(y): 0.9992, norm:0.6919, tok/sec: 122923.09, flops:95.73, batch-reuse:1
@ 1160 train 6.2922 , allloss: 6.2936, dt: 1058.79ms, fracRes: 0.7563, norm(attn): 0.1050, norm(output): 0.8789, norm(x): 0.2618, norm(y): 0.9993, norm:0.5578, tok/sec: 123794.42, flops:96.41, batch-reuse:1
@ 1161 train 6.1680 , allloss: 6.1696, dt: 1068.09ms, fracRes: 0.7582, norm(attn): 0.1079, norm(output): 0.8750, norm(x): 0.2606, norm(y): 0.9993, norm:0.5983, tok/sec: 122716.15, flops:95.57, batch-reuse:1
@ 1162 train 6.1483 , allloss: 6.1495, dt: 1047.91ms, fracRes: 0.7518, norm(attn): 0.1084, norm(output): 0.8789, norm(x): 0.2653, norm(y): 0.9993, norm:0.8503, tok/sec: 125080.02, flops:97.41, batch-reuse:1
@ 1163 train 6.3046 , allloss: 6.3057, dt: 1041.10ms, fracRes: 0.7581, norm(attn): 0.1099, norm(output): 0.8711, norm(x): 0.2597, norm(y): 0.9992, norm:0.8441, tok/sec: 125897.49, flops:98.05, batch-reuse:1
@ 1164 train 6.2333 , allloss: 6.2352, dt: 1046.41ms, fracRes: 0.7568, norm(attn): 0.1069, norm(output): 0.8750, norm(x): 0.2588, norm(y): 0.9993, norm:0.5719, tok/sec: 125259.10, flops:97.55, batch-reuse:1
@ 1165 train 6.3002 , allloss: 6.3021, dt: 1043.89ms, fracRes: 0.7625, norm(attn): 0.1060, norm(output): 0.8750, norm(x): 0.2494, norm(y): 0.9991, norm:0.6521, tok/sec: 125560.78, flops:97.79, batch-reuse:1
@ 1166 train 6.2363 , allloss: 6.2375, dt: 1045.03ms, fracRes: 0.7574, norm(attn): 0.1060, norm(output): 0.8750, norm(x): 0.2582, norm(y): 0.9992, norm:0.5358, tok/sec: 125424.42, flops:97.68, batch-reuse:1
@ 1167 train 6.2094 , allloss: 6.2105, dt: 1052.04ms, fracRes: 0.7555, norm(attn): 0.1069, norm(output): 0.8711, norm(x): 0.2596, norm(y): 0.9992, norm:0.5334, tok/sec: 124588.12, flops:97.03, batch-reuse:1
@ 1168 train 6.1326 , allloss: 6.1337, dt: 1056.15ms, fracRes: 0.7516, norm(attn): 0.1069, norm(output): 0.8672, norm(x): 0.2633, norm(y): 0.9993, norm:0.5744, tok/sec: 124103.08, flops:96.65, batch-reuse:1
@ 1169 train 6.2369 , allloss: 6.2382, dt: 1055.27ms, fracRes: 0.7583, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2540, norm(y): 0.9992, norm:0.5558, tok/sec: 124207.00, flops:96.73, batch-reuse:1
@ 1170 train 6.1912 , allloss: 6.1923, dt: 1057.63ms, fracRes: 0.7533, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2642, norm(y): 0.9992, norm:0.5491, tok/sec: 123929.58, flops:96.52, batch-reuse:1
@ 1171 train 6.1597 , allloss: 6.1607, dt: 1049.43ms, fracRes: 0.7478, norm(attn): 0.1074, norm(output): 0.8828, norm(x): 0.2747, norm(y): 0.9993, norm:0.7445, tok/sec: 124898.77, flops:97.27, batch-reuse:1
@ 1172 train 6.2876 , allloss: 6.2887, dt: 1060.37ms, fracRes: 0.7566, norm(attn): 0.1064, norm(output): 0.8750, norm(x): 0.2595, norm(y): 0.9991, norm:0.6249, tok/sec: 123609.74, flops:96.27, batch-reuse:1
@ 1173 train 6.2072 , allloss: 6.2082, dt: 1044.27ms, fracRes: 0.7527, norm(attn): 0.1064, norm(output): 0.8750, norm(x): 0.2626, norm(y): 0.9992, norm:0.6066, tok/sec: 125515.17, flops:97.75, batch-reuse:1
@ 1174 train 6.1417 , allloss: 6.1427, dt: 1043.47ms, fracRes: 0.7500, norm(attn): 0.1089, norm(output): 0.8789, norm(x): 0.2673, norm(y): 0.9993, norm:0.6740, tok/sec: 125612.16, flops:97.83, batch-reuse:1
@ 1175 train 6.2572 , allloss: 6.2585, dt: 1057.76ms, fracRes: 0.7575, norm(attn): 0.1094, norm(output): 0.8711, norm(x): 0.2578, norm(y): 0.9992, norm:0.6166, tok/sec: 123915.02, flops:96.51, batch-reuse:1
@ 1176 train 6.2837 , allloss: 6.2850, dt: 1057.58ms, fracRes: 0.7654, norm(attn): 0.1074, norm(output): 0.8711, norm(x): 0.2460, norm(y): 0.9991, norm:0.6495, tok/sec: 123936.31, flops:96.52, batch-reuse:1
@ 1177 train 6.2648 , allloss: 6.2663, dt: 1059.96ms, fracRes: 0.7599, norm(attn): 0.1084, norm(output): 0.8672, norm(x): 0.2524, norm(y): 0.9991, norm:0.7346, tok/sec: 123657.26, flops:96.30, batch-reuse:1
@ 1178 train 6.3559 , allloss: 6.3571, dt: 1062.67ms, fracRes: 0.7624, norm(attn): 0.1089, norm(output): 0.8672, norm(x): 0.2492, norm(y): 0.9991, norm:0.6147, tok/sec: 123342.34, flops:96.06, batch-reuse:1
@ 1179 train 6.2722 , allloss: 6.2734, dt: 1062.93ms, fracRes: 0.7593, norm(attn): 0.1055, norm(output): 0.8750, norm(x): 0.2545, norm(y): 0.9991, norm:0.5588, tok/sec: 123312.32, flops:96.04, batch-reuse:1
@ 1180 train 6.2340 , allloss: 6.2354, dt: 1052.92ms, fracRes: 0.7589, norm(attn): 0.1040, norm(output): 0.8750, norm(x): 0.2535, norm(y): 0.9992, norm:0.7583, tok/sec: 124483.80, flops:96.95, batch-reuse:1
@ 1181 train 6.1912 , allloss: 6.1923, dt: 1042.82ms, fracRes: 0.7550, norm(attn): 0.1050, norm(output): 0.8789, norm(x): 0.2577, norm(y): 0.9992, norm:0.6042, tok/sec: 125690.19, flops:97.89, batch-reuse:1
@ 1182 train 6.2547 , allloss: 6.2562, dt: 1053.39ms, fracRes: 0.7699, norm(attn): 0.1084, norm(output): 0.8672, norm(x): 0.2399, norm(y): 0.9990, norm:0.5617, tok/sec: 124429.06, flops:96.91, batch-reuse:1
@ 1183 train 6.2199 , allloss: 6.2208, dt: 1052.01ms, fracRes: 0.7543, norm(attn): 0.1084, norm(output): 0.8711, norm(x): 0.2607, norm(y): 0.9992, norm:0.4569, tok/sec: 124591.74, flops:97.03, batch-reuse:1
@ 1184 train 6.1687 , allloss: 6.1700, dt: 1050.10ms, fracRes: 0.7535, norm(attn): 0.1079, norm(output): 0.8789, norm(x): 0.2629, norm(y): 0.9992, norm:0.5256, tok/sec: 124818.46, flops:97.21, batch-reuse:1
@ 1185 train 6.2488 , allloss: 6.2503, dt: 1048.87ms, fracRes: 0.7610, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2476, norm(y): 0.9991, norm:0.4750, tok/sec: 124964.58, flops:97.32, batch-reuse:1
@ 1186 train 6.2255 , allloss: 6.2269, dt: 1052.10ms, fracRes: 0.7591, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2488, norm(y): 0.9991, norm:0.4880, tok/sec: 124580.81, flops:97.02, batch-reuse:1
@ 1187 train 6.2219 , allloss: 6.2231, dt: 1047.64ms, fracRes: 0.7574, norm(attn): 0.1050, norm(output): 0.8750, norm(x): 0.2520, norm(y): 0.9992, norm:0.4217, tok/sec: 125111.64, flops:97.44, batch-reuse:1
@ 1188 train 6.1253 , allloss: 6.1264, dt: 1061.62ms, fracRes: 0.7522, norm(attn): 0.1045, norm(output): 0.8750, norm(x): 0.2619, norm(y): 0.9993, norm:0.4381, tok/sec: 123464.00, flops:96.15, batch-reuse:1
@ 1189 train 6.1662 , allloss: 6.1674, dt: 1056.38ms, fracRes: 0.7574, norm(attn): 0.1094, norm(output): 0.8672, norm(x): 0.2554, norm(y): 0.9992, norm:0.5186, tok/sec: 124076.22, flops:96.63, batch-reuse:1
@ 1190 train 6.2681 , allloss: 6.2696, dt: 1055.24ms, fracRes: 0.7691, norm(attn): 0.1084, norm(output): 0.8672, norm(x): 0.2414, norm(y): 0.9990, norm:0.6346, tok/sec: 124210.84, flops:96.74, batch-reuse:1
@ 1191 train 6.3279 , allloss: 6.3291, dt: 1051.95ms, fracRes: 0.7604, norm(attn): 0.1040, norm(output): 0.8711, norm(x): 0.2529, norm(y): 0.9991, norm:0.6932, tok/sec: 124599.25, flops:97.04, batch-reuse:1
@ 1192 train 6.1491 , allloss: 6.1502, dt: 1068.13ms, fracRes: 0.7527, norm(attn): 0.1040, norm(output): 0.8750, norm(x): 0.2618, norm(y): 0.9992, norm:0.6525, tok/sec: 122711.49, flops:95.57, batch-reuse:1
@ 1193 train 6.2163 , allloss: 6.2175, dt: 1043.83ms, fracRes: 0.7550, norm(attn): 0.1094, norm(output): 0.8711, norm(x): 0.2578, norm(y): 0.9992, norm:0.8814, tok/sec: 125568.84, flops:97.79, batch-reuse:1
@ 1194 train 6.2213 , allloss: 6.2228, dt: 1056.57ms, fracRes: 0.7603, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2455, norm(y): 0.9991, norm:0.5027, tok/sec: 124054.83, flops:96.61, batch-reuse:1
@ 1195 train 6.1746 , allloss: 6.1759, dt: 1059.25ms, fracRes: 0.7579, norm(attn): 0.1064, norm(output): 0.8633, norm(x): 0.2509, norm(y): 0.9992, norm:1.0426, tok/sec: 123740.90, flops:96.37, batch-reuse:1
@ 1196 train 6.2373 , allloss: 6.2384, dt: 1053.57ms, fracRes: 0.7618, norm(attn): 0.1074, norm(output): 0.8594, norm(x): 0.2447, norm(y): 0.9991, norm:1.1611, tok/sec: 124407.57, flops:96.89, batch-reuse:1
@ 1197 train 6.1865 , allloss: 6.1877, dt: 1052.39ms, fracRes: 0.7580, norm(attn): 0.1084, norm(output): 0.8594, norm(x): 0.2487, norm(y): 0.9991, norm:0.7763, tok/sec: 124547.54, flops:97.00, batch-reuse:1
@ 1198 train 6.1770 , allloss: 6.1782, dt: 1055.44ms, fracRes: 0.7552, norm(attn): 0.1060, norm(output): 0.8633, norm(x): 0.2532, norm(y): 0.9992, norm:0.5746, tok/sec: 124186.68, flops:96.72, batch-reuse:1
@ 1199 train 6.2165 , allloss: 6.2179, dt: 1042.84ms, fracRes: 0.7600, norm(attn): 0.1079, norm(output): 0.8672, norm(x): 0.2504, norm(y): 0.9991, norm:0.8432, tok/sec: 125687.00, flops:97.89, batch-reuse:1
@ 1200 train 6.2038 , allloss: 6.2049, dt: 1050.90ms, fracRes: 0.7641, norm(attn): 0.1094, norm(output): 0.8516, norm(x): 0.2409, norm(y): 0.9991, norm:0.5365, tok/sec: 124724.03, flops:97.14, batch-reuse:1
@ 1201 train 6.2102 , allloss: 6.2113, dt: 1056.93ms, fracRes: 0.7623, norm(attn): 0.1113, norm(output): 0.8516, norm(x): 0.2429, norm(y): 0.9991, norm:0.6887, tok/sec: 124011.54, flops:96.58, batch-reuse:1
@ 1202 train 6.2220 , allloss: 6.2231, dt: 1066.43ms, fracRes: 0.7622, norm(attn): 0.1094, norm(output): 0.8594, norm(x): 0.2438, norm(y): 0.9991, norm:0.5073, tok/sec: 122907.09, flops:95.72, batch-reuse:1
@ 1203 train 6.5182 , allloss: 6.5196, dt: 1044.03ms, fracRes: 0.7694, norm(attn): 0.1074, norm(output): 0.8555, norm(x): 0.2316, norm(y): 0.9990, norm:0.8644, tok/sec: 125544.06, flops:97.77, batch-reuse:1
@ 1204 train 6.1750 , allloss: 6.1762, dt: 1051.89ms, fracRes: 0.7573, norm(attn): 0.1050, norm(output): 0.8711, norm(x): 0.2487, norm(y): 0.9991, norm:0.6520, tok/sec: 124606.31, flops:97.04, batch-reuse:1
@ 1205 train 6.1240 , allloss: 6.1251, dt: 1074.18ms, fracRes: 0.7575, norm(attn): 0.1089, norm(output): 0.8594, norm(x): 0.2495, norm(y): 0.9992, norm:0.6521, tok/sec: 122020.91, flops:95.03, batch-reuse:1
@ 1206 train 6.1558 , allloss: 6.1567, dt: 1057.82ms, fracRes: 0.7525, norm(attn): 0.1084, norm(output): 0.8672, norm(x): 0.2543, norm(y): 0.9992, norm:0.6439, tok/sec: 123907.26, flops:96.50, batch-reuse:1
@ 1207 train 6.1573 , allloss: 6.1585, dt: 1042.72ms, fracRes: 0.7591, norm(attn): 0.1084, norm(output): 0.8633, norm(x): 0.2457, norm(y): 0.9991, norm:0.4185, tok/sec: 125701.51, flops:97.90, batch-reuse:1
@ 1208 train 6.1066 , allloss: 6.1077, dt: 1053.25ms, fracRes: 0.7552, norm(attn): 0.1069, norm(output): 0.8750, norm(x): 0.2513, norm(y): 0.9992, norm:0.5620, tok/sec: 124445.81, flops:96.92, batch-reuse:1
@ 1209 train 6.1474 , allloss: 6.1488, dt: 1044.32ms, fracRes: 0.7561, norm(attn): 0.1079, norm(output): 0.8789, norm(x): 0.2483, norm(y): 0.9992, norm:0.5197, tok/sec: 125509.50, flops:97.75, batch-reuse:1
@ 1210 train 6.1248 , allloss: 6.1265, dt: 1051.66ms, fracRes: 0.7598, norm(attn): 0.1079, norm(output): 0.8750, norm(x): 0.2442, norm(y): 0.9992, norm:0.4851, tok/sec: 124633.15, flops:97.06, batch-reuse:1
@ 1211 train 6.1845 , allloss: 6.1863, dt: 1042.15ms, fracRes: 0.7608, norm(attn): 0.1079, norm(output): 0.8750, norm(x): 0.2441, norm(y): 0.9991, norm:0.6993, tok/sec: 125770.39, flops:97.95, batch-reuse:1
@ 1212 train 6.2243 , allloss: 6.2259, dt: 1058.57ms, fracRes: 0.7593, norm(attn): 0.1055, norm(output): 0.8711, norm(x): 0.2434, norm(y): 0.9991, norm:0.5559, tok/sec: 123819.35, flops:96.43, batch-reuse:1
@ 1213 train 6.1091 , allloss: 6.1104, dt: 1044.59ms, fracRes: 0.7554, norm(attn): 0.1079, norm(output): 0.8711, norm(x): 0.2498, norm(y): 0.9992, norm:0.4860, tok/sec: 125477.50, flops:97.72, batch-reuse:1
@ 1214 train 6.1460 , allloss: 6.1472, dt: 1050.20ms, fracRes: 0.7565, norm(attn): 0.1084, norm(output): 0.8750, norm(x): 0.2483, norm(y): 0.9991, norm:0.6512, tok/sec: 124806.59, flops:97.20, batch-reuse:1
@ 1215 train 6.1550 , allloss: 6.1562, dt: 1053.22ms, fracRes: 0.7581, norm(attn): 0.1069, norm(output): 0.8750, norm(x): 0.2451, norm(y): 0.9991, norm:0.5392, tok/sec: 124448.77, flops:96.92, batch-reuse:1
@ 1216 train 6.1438 , allloss: 6.1452, dt: 1054.62ms, fracRes: 0.7591, norm(attn): 0.1055, norm(output): 0.8789, norm(x): 0.2443, norm(y): 0.9991, norm:0.4640, tok/sec: 124283.93, flops:96.79, batch-reuse:1
@ 1217 train 6.1543 , allloss: 6.1554, dt: 1058.89ms, fracRes: 0.7582, norm(attn): 0.1069, norm(output): 0.8750, norm(x): 0.2467, norm(y): 0.9991, norm:0.5074, tok/sec: 123782.63, flops:96.40, batch-reuse:1
@ 1218 train 6.0968 , allloss: 6.0990, dt: 1060.74ms, fracRes: 0.7640, norm(attn): 0.1060, norm(output): 0.8633, norm(x): 0.2424, norm(y): 0.9990, norm:0.8022, tok/sec: 123566.93, flops:96.23, batch-reuse:1
@ 1219 train 6.0807 , allloss: 6.0817, dt: 1045.43ms, fracRes: 0.7526, norm(attn): 0.1089, norm(output): 0.8750, norm(x): 0.2550, norm(y): 0.9992, norm:0.4947, tok/sec: 125375.74, flops:97.64, batch-reuse:1
@ 1220 train 6.1453 , allloss: 6.1465, dt: 1042.19ms, fracRes: 0.7560, norm(attn): 0.1079, norm(output): 0.8750, norm(x): 0.2509, norm(y): 0.9991, norm:0.6515, tok/sec: 125765.44, flops:97.95, batch-reuse:1
@ 1221 train 6.0736 , allloss: 6.0747, dt: 1046.07ms, fracRes: 0.7521, norm(attn): 0.1084, norm(output): 0.8789, norm(x): 0.2560, norm(y): 0.9992, norm:0.4819, tok/sec: 125299.19, flops:97.58, batch-reuse:1
@ 1222 train 6.0984 , allloss: 6.0999, dt: 1057.73ms, fracRes: 0.7548, norm(attn): 0.1074, norm(output): 0.8828, norm(x): 0.2520, norm(y): 0.9991, norm:0.6025, tok/sec: 123918.01, flops:96.51, batch-reuse:1
@ 1223 train 6.0835 , allloss: 6.0854, dt: 1045.26ms, fracRes: 0.7636, norm(attn): 0.1079, norm(output): 0.8828, norm(x): 0.2403, norm(y): 0.9991, norm:0.6100, tok/sec: 125396.79, flops:97.66, batch-reuse:1
@ 1224 train 6.0522 , allloss: 6.0537, dt: 1045.75ms, fracRes: 0.7554, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2487, norm(y): 0.9992, norm:0.5355, tok/sec: 125337.72, flops:97.61, batch-reuse:1
@ 1225 train 6.0852 , allloss: 6.0868, dt: 1056.91ms, fracRes: 0.7581, norm(attn): 0.1104, norm(output): 0.8789, norm(x): 0.2432, norm(y): 0.9991, norm:0.7444, tok/sec: 124014.06, flops:96.58, batch-reuse:1
@ 1226 train 6.1686 , allloss: 6.1698, dt: 1059.95ms, fracRes: 0.7559, norm(attn): 0.1084, norm(output): 0.8750, norm(x): 0.2491, norm(y): 0.9991, norm:0.7063, tok/sec: 123659.15, flops:96.31, batch-reuse:1
@ 1227 train 6.1083 , allloss: 6.1099, dt: 1053.78ms, fracRes: 0.7562, norm(attn): 0.1084, norm(output): 0.8789, norm(x): 0.2489, norm(y): 0.9991, norm:0.6114, tok/sec: 124382.38, flops:96.87, batch-reuse:1
@ 1228 train 6.0650 , allloss: 6.0664, dt: 1056.97ms, fracRes: 0.7560, norm(attn): 0.1084, norm(output): 0.8789, norm(x): 0.2481, norm(y): 0.9991, norm:0.6261, tok/sec: 124006.76, flops:96.58, batch-reuse:1
@ 1229 train 6.0966 , allloss: 6.0979, dt: 1065.15ms, fracRes: 0.7548, norm(attn): 0.1084, norm(output): 0.8828, norm(x): 0.2503, norm(y): 0.9991, norm:0.4725, tok/sec: 123055.16, flops:95.84, batch-reuse:1
@ 1230 train 6.0846 , allloss: 6.0858, dt: 1059.19ms, fracRes: 0.7522, norm(attn): 0.1060, norm(output): 0.8750, norm(x): 0.2546, norm(y): 0.9991, norm:0.6577, tok/sec: 123747.16, flops:96.37, batch-reuse:1
@ 1231 train 6.1007 , allloss: 6.1020, dt: 1051.42ms, fracRes: 0.7560, norm(attn): 0.1045, norm(output): 0.8750, norm(x): 0.2458, norm(y): 0.9991, norm:0.5710, tok/sec: 124661.63, flops:97.09, batch-reuse:1
@ 1232 train 6.0637 , allloss: 6.0649, dt: 1055.55ms, fracRes: 0.7558, norm(attn): 0.1074, norm(output): 0.8711, norm(x): 0.2468, norm(y): 0.9991, norm:0.5338, tok/sec: 124173.98, flops:96.71, batch-reuse:1
@ 1233 train 6.0533 , allloss: 6.0546, dt: 1068.04ms, fracRes: 0.7564, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2481, norm(y): 0.9991, norm:0.3921, tok/sec: 122721.73, flops:95.58, batch-reuse:1
@ 1234 train 6.0915 , allloss: 6.0930, dt: 1050.99ms, fracRes: 0.7544, norm(attn): 0.1064, norm(output): 0.8828, norm(x): 0.2512, norm(y): 0.9991, norm:0.5978, tok/sec: 124712.42, flops:97.13, batch-reuse:1
@ 1235 train 6.1208 , allloss: 6.1225, dt: 1043.47ms, fracRes: 0.7592, norm(attn): 0.1074, norm(output): 0.8711, norm(x): 0.2436, norm(y): 0.9990, norm:0.5161, tok/sec: 125611.76, flops:97.83, batch-reuse:1
@ 1236 train 6.0954 , allloss: 6.0978, dt: 1065.14ms, fracRes: 0.7639, norm(attn): 0.1074, norm(output): 0.8711, norm(x): 0.2358, norm(y): 0.9990, norm:0.5477, tok/sec: 123055.76, flops:95.84, batch-reuse:1
@ 1237 train 6.0951 , allloss: 6.0966, dt: 1074.53ms, fracRes: 0.7626, norm(attn): 0.1089, norm(output): 0.8672, norm(x): 0.2361, norm(y): 0.9990, norm:0.4900, tok/sec: 121980.22, flops:95.00, batch-reuse:1
@ 1238 train 6.0733 , allloss: 6.0766, dt: 1049.92ms, fracRes: 0.7560, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2439, norm(y): 0.9991, norm:0.5380, tok/sec: 124839.50, flops:97.23, batch-reuse:1
@ 1239 train 6.0499 , allloss: 6.0512, dt: 1058.89ms, fracRes: 0.7593, norm(attn): 0.1108, norm(output): 0.8672, norm(x): 0.2416, norm(y): 0.9990, norm:0.6920, tok/sec: 123782.69, flops:96.40, batch-reuse:1
@ 1240 train 6.0545 , allloss: 6.0560, dt: 1055.14ms, fracRes: 0.7570, norm(attn): 0.1108, norm(output): 0.8672, norm(x): 0.2475, norm(y): 0.9991, norm:0.5466, tok/sec: 124222.74, flops:96.75, batch-reuse:1
@ 1241 train 6.0310 , allloss: 6.0326, dt: 1059.92ms, fracRes: 0.7546, norm(attn): 0.1069, norm(output): 0.8672, norm(x): 0.2499, norm(y): 0.9991, norm:0.6085, tok/sec: 123662.63, flops:96.31, batch-reuse:1
@ 1242 train 6.0713 , allloss: 6.0727, dt: 1058.64ms, fracRes: 0.7562, norm(attn): 0.1060, norm(output): 0.8711, norm(x): 0.2467, norm(y): 0.9991, norm:0.3910, tok/sec: 123811.79, flops:96.43, batch-reuse:1
@ 1243 train 6.0922 , allloss: 6.0933, dt: 1047.21ms, fracRes: 0.7579, norm(attn): 0.1089, norm(output): 0.8672, norm(x): 0.2448, norm(y): 0.9990, norm:0.5487, tok/sec: 125162.88, flops:97.48, batch-reuse:1
@ 1244 train 6.0854 , allloss: 6.0867, dt: 1052.69ms, fracRes: 0.7561, norm(attn): 0.1084, norm(output): 0.8672, norm(x): 0.2446, norm(y): 0.9990, norm:0.3978, tok/sec: 124511.09, flops:96.97, batch-reuse:1
@ 1245 train 6.0508 , allloss: 6.0521, dt: 1061.94ms, fracRes: 0.7536, norm(attn): 0.1079, norm(output): 0.8633, norm(x): 0.2434, norm(y): 0.9991, norm:0.5201, tok/sec: 123427.33, flops:96.13, batch-reuse:1
@ 1246 train 6.0607 , allloss: 6.0620, dt: 1056.01ms, fracRes: 0.7561, norm(attn): 0.1113, norm(output): 0.8633, norm(x): 0.2408, norm(y): 0.9991, norm:0.4726, tok/sec: 124120.57, flops:96.67, batch-reuse:1
@ 1247 train 5.9985 , allloss: 5.9999, dt: 1049.72ms, fracRes: 0.7547, norm(attn): 0.1089, norm(output): 0.8711, norm(x): 0.2427, norm(y): 0.9991, norm:0.4725, tok/sec: 124864.36, flops:97.24, batch-reuse:1
@ 1248 train 6.0837 , allloss: 6.0851, dt: 1055.09ms, fracRes: 0.7552, norm(attn): 0.1094, norm(output): 0.8594, norm(x): 0.2408, norm(y): 0.9991, norm:0.4181, tok/sec: 124228.83, flops:96.75, batch-reuse:1
@ 1249 train 5.9905 , allloss: 5.9918, dt: 1050.38ms, fracRes: 0.7524, norm(attn): 0.1094, norm(output): 0.8672, norm(x): 0.2450, norm(y): 0.9991, norm:0.4615, tok/sec: 124785.74, flops:97.18, batch-reuse:1
@ 1250 train 6.1086 , allloss: 6.1102, dt: 1065.20ms, fracRes: 0.7585, norm(attn): 0.1094, norm(output): 0.8633, norm(x): 0.2400, norm(y): 0.9990, norm:0.5819, tok/sec: 123048.69, flops:95.83, batch-reuse:1
@ 1251 train 6.0484 , allloss: 6.0499, dt: 1057.86ms, fracRes: 0.7532, norm(attn): 0.1074, norm(output): 0.8711, norm(x): 0.2457, norm(y): 0.9991, norm:0.5577, tok/sec: 123902.57, flops:96.50, batch-reuse:1
@ 1252 train 6.0729 , allloss: 6.0748, dt: 1059.88ms, fracRes: 0.7665, norm(attn): 0.1104, norm(output): 0.8516, norm(x): 0.2294, norm(y): 0.9989, norm:0.4884, tok/sec: 123666.33, flops:96.31, batch-reuse:1
@ 1253 train 5.9764 , allloss: 5.9780, dt: 1057.85ms, fracRes: 0.7634, norm(attn): 0.1113, norm(output): 0.8594, norm(x): 0.2316, norm(y): 0.9990, norm:0.5762, tok/sec: 123904.69, flops:96.50, batch-reuse:1
@ 1254 train 6.0487 , allloss: 6.0503, dt: 1048.61ms, fracRes: 0.7592, norm(attn): 0.1064, norm(output): 0.8516, norm(x): 0.2356, norm(y): 0.9990, norm:0.5040, tok/sec: 124996.23, flops:97.35, batch-reuse:1
@ 1255 train 6.0593 , allloss: 6.0608, dt: 1055.38ms, fracRes: 0.7587, norm(attn): 0.1055, norm(output): 0.8672, norm(x): 0.2371, norm(y): 0.9990, norm:0.4933, tok/sec: 124193.84, flops:96.72, batch-reuse:1
@ 1256 train 6.0093 , allloss: 6.0106, dt: 1063.11ms, fracRes: 0.7551, norm(attn): 0.1074, norm(output): 0.8594, norm(x): 0.2423, norm(y): 0.9990, norm:0.4303, tok/sec: 123291.03, flops:96.02, batch-reuse:1
@ 1257 train 6.0604 , allloss: 6.0617, dt: 1057.31ms, fracRes: 0.7551, norm(attn): 0.1069, norm(output): 0.8672, norm(x): 0.2434, norm(y): 0.9990, norm:0.5401, tok/sec: 123967.44, flops:96.55, batch-reuse:1
@ 1258 train 5.9944 , allloss: 5.9957, dt: 1065.19ms, fracRes: 0.7555, norm(attn): 0.1094, norm(output): 0.8633, norm(x): 0.2406, norm(y): 0.9990, norm:0.5251, tok/sec: 123050.04, flops:95.83, batch-reuse:1
@ 1259 train 6.0406 , allloss: 6.0421, dt: 1062.78ms, fracRes: 0.7566, norm(attn): 0.1108, norm(output): 0.8633, norm(x): 0.2397, norm(y): 0.9990, norm:0.5697, tok/sec: 123329.78, flops:96.05, batch-reuse:1
@ 1260 train 5.9773 , allloss: 5.9787, dt: 1054.74ms, fracRes: 0.7536, norm(attn): 0.1064, norm(output): 0.8711, norm(x): 0.2422, norm(y): 0.9990, norm:0.5624, tok/sec: 124269.13, flops:96.78, batch-reuse:1
@ 1261 train 5.9813 , allloss: 5.9828, dt: 1049.12ms, fracRes: 0.7577, norm(attn): 0.1099, norm(output): 0.8555, norm(x): 0.2378, norm(y): 0.9990, norm:0.4850, tok/sec: 124935.10, flops:97.30, batch-reuse:1
@ 1262 train 5.9920 , allloss: 5.9934, dt: 1044.33ms, fracRes: 0.7588, norm(attn): 0.1084, norm(output): 0.8516, norm(x): 0.2360, norm(y): 0.9990, norm:0.4950, tok/sec: 125508.55, flops:97.75, batch-reuse:1
@ 1263 train 5.9776 , allloss: 5.9790, dt: 1064.46ms, fracRes: 0.7570, norm(attn): 0.1055, norm(output): 0.8594, norm(x): 0.2372, norm(y): 0.9990, norm:0.5226, tok/sec: 123134.79, flops:95.90, batch-reuse:1
@ 1264 train 6.0836 , allloss: 6.0852, dt: 1055.89ms, fracRes: 0.7659, norm(attn): 0.1094, norm(output): 0.8477, norm(x): 0.2275, norm(y): 0.9989, norm:0.5578, tok/sec: 124134.61, flops:96.68, batch-reuse:1
@ 1265 train 5.9979 , allloss: 5.9992, dt: 1042.86ms, fracRes: 0.7546, norm(attn): 0.1089, norm(output): 0.8594, norm(x): 0.2393, norm(y): 0.9990, norm:0.3868, tok/sec: 125684.99, flops:97.88, batch-reuse:1
@ 1266 train 6.0197 , allloss: 6.0210, dt: 1047.14ms, fracRes: 0.7562, norm(attn): 0.1094, norm(output): 0.8594, norm(x): 0.2368, norm(y): 0.9990, norm:0.4609, tok/sec: 125171.26, flops:97.48, batch-reuse:1
@ 1267 train 6.0380 , allloss: 6.0392, dt: 1044.64ms, fracRes: 0.7556, norm(attn): 0.1123, norm(output): 0.8516, norm(x): 0.2364, norm(y): 0.9990, norm:0.4343, tok/sec: 125470.85, flops:97.72, batch-reuse:1
@ 1268 train 6.0612 , allloss: 6.0626, dt: 1044.86ms, fracRes: 0.7590, norm(attn): 0.1104, norm(output): 0.8516, norm(x): 0.2311, norm(y): 0.9989, norm:0.5984, tok/sec: 125444.43, flops:97.70, batch-reuse:1
@ 1269 train 6.0351 , allloss: 6.0366, dt: 1053.92ms, fracRes: 0.7616, norm(attn): 0.1089, norm(output): 0.8398, norm(x): 0.2305, norm(y): 0.9989, norm:0.7331, tok/sec: 124365.98, flops:96.86, batch-reuse:1
@ 1270 train 5.9604 , allloss: 5.9617, dt: 1049.63ms, fracRes: 0.7596, norm(attn): 0.1089, norm(output): 0.8398, norm(x): 0.2301, norm(y): 0.9989, norm:0.5963, tok/sec: 124874.80, flops:97.25, batch-reuse:1
@ 1271 train 5.9685 , allloss: 5.9696, dt: 1055.43ms, fracRes: 0.7570, norm(attn): 0.1084, norm(output): 0.8516, norm(x): 0.2343, norm(y): 0.9990, norm:0.7247, tok/sec: 124187.89, flops:96.72, batch-reuse:1
@ 1272 train 5.9765 , allloss: 5.9780, dt: 1049.00ms, fracRes: 0.7586, norm(attn): 0.1104, norm(output): 0.8438, norm(x): 0.2346, norm(y): 0.9990, norm:0.5296, tok/sec: 124949.73, flops:97.31, batch-reuse:1
@ 1273 train 6.0449 , allloss: 6.0464, dt: 1056.80ms, fracRes: 0.7579, norm(attn): 0.1108, norm(output): 0.8398, norm(x): 0.2328, norm(y): 0.9990, norm:0.5445, tok/sec: 124027.27, flops:96.59, batch-reuse:1
@ 1274 train 5.9919 , allloss: 5.9935, dt: 1064.96ms, fracRes: 0.7656, norm(attn): 0.1113, norm(output): 0.8438, norm(x): 0.2246, norm(y): 0.9989, norm:0.6195, tok/sec: 123077.20, flops:95.85, batch-reuse:1
@ 1275 train 6.1208 , allloss: 6.1223, dt: 1059.87ms, fracRes: 0.7622, norm(attn): 0.1113, norm(output): 0.8359, norm(x): 0.2265, norm(y): 0.9989, norm:0.6025, tok/sec: 123668.33, flops:96.31, batch-reuse:1
@ 1276 train 5.9302 , allloss: 5.9316, dt: 1044.90ms, fracRes: 0.7553, norm(attn): 0.1074, norm(output): 0.8438, norm(x): 0.2328, norm(y): 0.9990, norm:0.5089, tok/sec: 125439.33, flops:97.69, batch-reuse:1
@ 1277 train 5.9247 , allloss: 5.9261, dt: 1049.11ms, fracRes: 0.7540, norm(attn): 0.1104, norm(output): 0.8477, norm(x): 0.2350, norm(y): 0.9990, norm:0.5416, tok/sec: 124936.16, flops:97.30, batch-reuse:1
@ 1278 train 6.0390 , allloss: 6.0404, dt: 1059.38ms, fracRes: 0.7592, norm(attn): 0.1099, norm(output): 0.8359, norm(x): 0.2311, norm(y): 0.9989, norm:0.5789, tok/sec: 123725.47, flops:96.36, batch-reuse:1
@ 1279 train 6.1153 , allloss: 6.1170, dt: 1073.57ms, fracRes: 0.7660, norm(attn): 0.1084, norm(output): 0.8359, norm(x): 0.2227, norm(y): 0.9988, norm:0.5125, tok/sec: 122089.41, flops:95.08, batch-reuse:1
@ 1280 train 5.9343 , allloss: 5.9358, dt: 1046.54ms, fracRes: 0.7568, norm(attn): 0.1089, norm(output): 0.8477, norm(x): 0.2337, norm(y): 0.9989, norm:0.5020, tok/sec: 125242.67, flops:97.54, batch-reuse:1
@ 1281 train 5.9344 , allloss: 5.9357, dt: 1043.00ms, fracRes: 0.7573, norm(attn): 0.1108, norm(output): 0.8281, norm(x): 0.2348, norm(y): 0.9989, norm:0.5873, tok/sec: 125667.81, flops:97.87, batch-reuse:1
@ 1282 train 5.9436 , allloss: 5.9451, dt: 1051.94ms, fracRes: 0.7565, norm(attn): 0.1089, norm(output): 0.8281, norm(x): 0.2353, norm(y): 0.9989, norm:0.7303, tok/sec: 124599.84, flops:97.04, batch-reuse:1
@ 1283 train 5.9803 , allloss: 5.9817, dt: 1053.04ms, fracRes: 0.7586, norm(attn): 0.1108, norm(output): 0.8320, norm(x): 0.2329, norm(y): 0.9989, norm:0.5524, tok/sec: 124470.36, flops:96.94, batch-reuse:1
@ 1284 train 5.9376 , allloss: 5.9389, dt: 1049.69ms, fracRes: 0.7647, norm(attn): 0.1089, norm(output): 0.8320, norm(x): 0.2234, norm(y): 0.9989, norm:0.7232, tok/sec: 124867.62, flops:97.25, batch-reuse:1
@ 1285 train 5.8939 , allloss: 5.8951, dt: 1047.82ms, fracRes: 0.7583, norm(attn): 0.1123, norm(output): 0.8281, norm(x): 0.2291, norm(y): 0.9989, norm:1.0026, tok/sec: 125090.66, flops:97.42, batch-reuse:1
@ 1286 train 6.0822 , allloss: 6.0836, dt: 1049.64ms, fracRes: 0.7662, norm(attn): 0.1094, norm(output): 0.8320, norm(x): 0.2226, norm(y): 0.9988, norm:0.6090, tok/sec: 124872.70, flops:97.25, batch-reuse:1
@ 1287 train 6.0268 , allloss: 6.0283, dt: 1048.32ms, fracRes: 0.7633, norm(attn): 0.1113, norm(output): 0.8398, norm(x): 0.2254, norm(y): 0.9988, norm:0.6692, tok/sec: 125030.01, flops:97.37, batch-reuse:1
@ 1288 train 5.9995 , allloss: 6.0010, dt: 1064.41ms, fracRes: 0.7635, norm(attn): 0.1133, norm(output): 0.8203, norm(x): 0.2242, norm(y): 0.9988, norm:0.5635, tok/sec: 123140.11, flops:95.90, batch-reuse:1
@ 1289 train 5.8979 , allloss: 5.8995, dt: 1053.90ms, fracRes: 0.7592, norm(attn): 0.1113, norm(output): 0.8359, norm(x): 0.2301, norm(y): 0.9989, norm:0.5908, tok/sec: 124368.25, flops:96.86, batch-reuse:1
@ 1290 train 5.9209 , allloss: 5.9224, dt: 1071.41ms, fracRes: 0.7585, norm(attn): 0.1094, norm(output): 0.8438, norm(x): 0.2269, norm(y): 0.9989, norm:0.6007, tok/sec: 122335.86, flops:95.28, batch-reuse:1
@ 1291 train 5.9810 , allloss: 5.9825, dt: 1045.37ms, fracRes: 0.7618, norm(attn): 0.1094, norm(output): 0.8359, norm(x): 0.2244, norm(y): 0.9989, norm:0.7884, tok/sec: 125383.95, flops:97.65, batch-reuse:1
@ 1292 train 5.9431 , allloss: 5.9447, dt: 1060.50ms, fracRes: 0.7623, norm(attn): 0.1094, norm(output): 0.8359, norm(x): 0.2229, norm(y): 0.9988, norm:0.5649, tok/sec: 123594.46, flops:96.26, batch-reuse:1
@ 1293 train 5.9691 , allloss: 5.9708, dt: 1042.73ms, fracRes: 0.7571, norm(attn): 0.1133, norm(output): 0.8398, norm(x): 0.2299, norm(y): 0.9989, norm:0.6342, tok/sec: 125700.97, flops:97.90, batch-reuse:1
@ 1294 train 5.9049 , allloss: 5.9065, dt: 1040.98ms, fracRes: 0.7543, norm(attn): 0.1177, norm(output): 0.8477, norm(x): 0.2305, norm(y): 0.9989, norm:0.6171, tok/sec: 125912.31, flops:98.06, batch-reuse:1
@ 1295 train 6.0349 , allloss: 6.0364, dt: 1046.16ms, fracRes: 0.7627, norm(attn): 0.1113, norm(output): 0.8438, norm(x): 0.2209, norm(y): 0.9988, norm:0.5695, tok/sec: 125288.25, flops:97.57, batch-reuse:1
@ 1296 train 6.0133 , allloss: 6.0156, dt: 1058.71ms, fracRes: 0.7636, norm(attn): 0.1084, norm(output): 0.8516, norm(x): 0.2221, norm(y): 0.9988, norm:0.7702, tok/sec: 123803.96, flops:96.42, batch-reuse:1
@ 1297 train 6.0705 , allloss: 6.0719, dt: 1048.52ms, fracRes: 0.7619, norm(attn): 0.1089, norm(output): 0.8477, norm(x): 0.2257, norm(y): 0.9988, norm:0.5263, tok/sec: 125006.58, flops:97.36, batch-reuse:1
@ 1298 train 6.1625 , allloss: 6.1643, dt: 1055.07ms, fracRes: 0.7663, norm(attn): 0.1104, norm(output): 0.8477, norm(x): 0.2197, norm(y): 0.9987, norm:0.5591, tok/sec: 124230.21, flops:96.75, batch-reuse:1
@ 1299 train 6.1887 , allloss: 7.3514, dt: 1053.84ms, fracRes: 0.7627, norm(attn): 0.1211, norm(output): 0.9922, norm(x): 0.3477, norm(y): 0.9987, norm:6.2582, tok/sec: 124375.57, flops:96.86, batch-reuse:1
@ 1300 train 6.1077 , allloss: 6.5462, dt: 1069.90ms, fracRes: 0.7676, norm(attn): 0.1118, norm(output): 0.8516, norm(x): 0.2219, norm(y): 0.9987, norm:8.1516, tok/sec: 122508.91, flops:95.41, batch-reuse:1
@ 1301 train 6.2200 , allloss: 6.2251, dt: 1046.35ms, fracRes: 0.7666, norm(attn): 0.1113, norm(output): 0.8594, norm(x): 0.2184, norm(y): 0.9987, norm:0.9047, tok/sec: 125265.75, flops:97.56, batch-reuse:1
@ 1302 train 6.1925 , allloss: 6.1940, dt: 1058.05ms, fracRes: 0.7660, norm(attn): 0.1094, norm(output): 0.8516, norm(x): 0.2178, norm(y): 0.9986, norm:1.3473, tok/sec: 123881.18, flops:96.48, batch-reuse:1
@ 1303 train 6.2561 , allloss: 6.2575, dt: 1069.39ms, fracRes: 0.7678, norm(attn): 0.1108, norm(output): 0.8594, norm(x): 0.2205, norm(y): 0.9986, norm:1.1241, tok/sec: 122567.04, flops:95.46, batch-reuse:1
@ 1304 train 6.1616 , allloss: 6.1630, dt: 1050.53ms, fracRes: 0.7661, norm(attn): 0.1055, norm(output): 0.8711, norm(x): 0.2231, norm(y): 0.9986, norm:0.7782, tok/sec: 124768.07, flops:97.17, batch-reuse:1
@ 1305 train 6.1363 , allloss: 6.1376, dt: 1064.15ms, fracRes: 0.7686, norm(attn): 0.1045, norm(output): 0.8672, norm(x): 0.2199, norm(y): 0.9986, norm:0.6343, tok/sec: 123170.46, flops:95.93, batch-reuse:1
@ 1306 train 6.0736 , allloss: 6.0749, dt: 1058.04ms, fracRes: 0.7705, norm(attn): 0.1094, norm(output): 0.8672, norm(x): 0.2180, norm(y): 0.9986, norm:0.7374, tok/sec: 123881.43, flops:96.48, batch-reuse:1
@ 1307 train 6.2133 , allloss: 6.2145, dt: 1060.26ms, fracRes: 0.7674, norm(attn): 0.1079, norm(output): 0.8672, norm(x): 0.2225, norm(y): 0.9986, norm:0.9003, tok/sec: 123622.42, flops:96.28, batch-reuse:1
@ 1308 train 6.1687 , allloss: 6.1701, dt: 1052.74ms, fracRes: 0.7680, norm(attn): 0.1064, norm(output): 0.8750, norm(x): 0.2184, norm(y): 0.9986, norm:0.6173, tok/sec: 124505.40, flops:96.97, batch-reuse:1
@ 1309 train 6.1512 , allloss: 6.1526, dt: 1045.14ms, fracRes: 0.7703, norm(attn): 0.1064, norm(output): 0.8750, norm(x): 0.2178, norm(y): 0.9985, norm:0.7533, tok/sec: 125411.29, flops:97.67, batch-reuse:1
@ 1310 train 6.1132 , allloss: 6.1145, dt: 1051.13ms, fracRes: 0.7672, norm(attn): 0.1069, norm(output): 0.8750, norm(x): 0.2225, norm(y): 0.9986, norm:0.5472, tok/sec: 124695.88, flops:97.11, batch-reuse:1
@ 1311 train 6.1539 , allloss: 6.1553, dt: 1054.08ms, fracRes: 0.7743, norm(attn): 0.1069, norm(output): 0.8672, norm(x): 0.2149, norm(y): 0.9985, norm:0.6090, tok/sec: 124347.86, flops:96.84, batch-reuse:1
@ 1312 train 6.1161 , allloss: 6.1176, dt: 1054.70ms, fracRes: 0.7658, norm(attn): 0.1084, norm(output): 0.8750, norm(x): 0.2246, norm(y): 0.9985, norm:0.5423, tok/sec: 124274.04, flops:96.79, batch-reuse:1
@ 1313 train 6.1554 , allloss: 6.1571, dt: 1047.88ms, fracRes: 0.7704, norm(attn): 0.1094, norm(output): 0.8750, norm(x): 0.2161, norm(y): 0.9985, norm:0.5395, tok/sec: 125082.75, flops:97.41, batch-reuse:1
@ 1314 train 6.1252 , allloss: 6.1267, dt: 1049.44ms, fracRes: 0.7653, norm(attn): 0.1064, norm(output): 0.8828, norm(x): 0.2224, norm(y): 0.9985, norm:0.5383, tok/sec: 124897.41, flops:97.27, batch-reuse:1
@ 1315 train 6.0758 , allloss: 6.0774, dt: 1057.38ms, fracRes: 0.7679, norm(attn): 0.1064, norm(output): 0.8828, norm(x): 0.2226, norm(y): 0.9985, norm:0.5941, tok/sec: 123959.42, flops:96.54, batch-reuse:1
@ 1316 train 6.0304 , allloss: 6.0319, dt: 1051.15ms, fracRes: 0.7687, norm(attn): 0.1064, norm(output): 0.8828, norm(x): 0.2225, norm(y): 0.9985, norm:0.4801, tok/sec: 124694.49, flops:97.11, batch-reuse:1
@ 1317 train 6.1498 , allloss: 6.1514, dt: 1060.03ms, fracRes: 0.7759, norm(attn): 0.1055, norm(output): 0.8750, norm(x): 0.2127, norm(y): 0.9983, norm:0.5591, tok/sec: 123649.19, flops:96.30, batch-reuse:1
@ 1318 train 6.0280 , allloss: 6.0294, dt: 1059.83ms, fracRes: 0.7652, norm(attn): 0.1074, norm(output): 0.8789, norm(x): 0.2259, norm(y): 0.9985, norm:0.5619, tok/sec: 123672.87, flops:96.32, batch-reuse:1
@ 1319 train 6.1218 , allloss: 6.1233, dt: 1049.78ms, fracRes: 0.7674, norm(attn): 0.1104, norm(output): 0.8750, norm(x): 0.2225, norm(y): 0.9984, norm:0.6204, tok/sec: 124856.22, flops:97.24, batch-reuse:1
@ 1320 train 6.1406 , allloss: 6.1422, dt: 1066.96ms, fracRes: 0.7654, norm(attn): 0.1055, norm(output): 0.8672, norm(x): 0.2242, norm(y): 0.9984, norm:0.6493, tok/sec: 122846.07, flops:95.67, batch-reuse:1
@ 1321 train 6.1007 , allloss: 6.1022, dt: 1051.84ms, fracRes: 0.7624, norm(attn): 0.1094, norm(output): 0.8750, norm(x): 0.2288, norm(y): 0.9984, norm:0.4157, tok/sec: 124612.69, flops:97.05, batch-reuse:1
@ 1322 train 6.0810 , allloss: 6.0826, dt: 1064.02ms, fracRes: 0.7642, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2277, norm(y): 0.9984, norm:0.4906, tok/sec: 123185.83, flops:95.94, batch-reuse:1
@ 1323 train 6.0912 , allloss: 6.0930, dt: 1066.08ms, fracRes: 0.7721, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2174, norm(y): 0.9983, norm:0.4804, tok/sec: 122947.89, flops:95.75, batch-reuse:1
@ 1324 train 6.1323 , allloss: 6.1340, dt: 1044.33ms, fracRes: 0.7697, norm(attn): 0.1089, norm(output): 0.8711, norm(x): 0.2175, norm(y): 0.9983, norm:0.4838, tok/sec: 125508.03, flops:97.75, batch-reuse:1
@ 1325 train 6.0419 , allloss: 6.0434, dt: 1060.32ms, fracRes: 0.7618, norm(attn): 0.1104, norm(output): 0.8672, norm(x): 0.2269, norm(y): 0.9984, norm:0.4957, tok/sec: 123615.25, flops:96.27, batch-reuse:1
@ 1326 train 6.0179 , allloss: 6.0235, dt: 1055.21ms, fracRes: 0.7619, norm(attn): 0.1099, norm(output): 0.8789, norm(x): 0.2280, norm(y): 0.9984, norm:0.4755, tok/sec: 124214.32, flops:96.74, batch-reuse:1
@ 1327 train 6.1315 , allloss: 6.1332, dt: 1055.75ms, fracRes: 0.7705, norm(attn): 0.1094, norm(output): 0.8750, norm(x): 0.2160, norm(y): 0.9983, norm:0.6414, tok/sec: 124151.01, flops:96.69, batch-reuse:1
@ 1328 train 6.0459 , allloss: 6.0475, dt: 1042.15ms, fracRes: 0.7668, norm(attn): 0.1094, norm(output): 0.8672, norm(x): 0.2213, norm(y): 0.9983, norm:0.4509, tok/sec: 125770.39, flops:97.95, batch-reuse:1
@ 1329 train 6.0795 , allloss: 6.0810, dt: 1051.76ms, fracRes: 0.7626, norm(attn): 0.1099, norm(output): 0.8672, norm(x): 0.2267, norm(y): 0.9984, norm:0.5634, tok/sec: 124621.76, flops:97.06, batch-reuse:1
@ 1330 train 6.1364 , allloss: 6.1380, dt: 1067.07ms, fracRes: 0.7711, norm(attn): 0.1089, norm(output): 0.8672, norm(x): 0.2174, norm(y): 0.9983, norm:0.4714, tok/sec: 122833.66, flops:95.66, batch-reuse:1
@ 1331 train 6.1046 , allloss: 6.1061, dt: 1061.60ms, fracRes: 0.7680, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2196, norm(y): 0.9983, norm:0.5121, tok/sec: 123466.72, flops:96.16, batch-reuse:1
@ 1332 train 6.0511 , allloss: 6.0524, dt: 1058.85ms, fracRes: 0.7626, norm(attn): 0.1099, norm(output): 0.8711, norm(x): 0.2251, norm(y): 0.9984, norm:0.5135, tok/sec: 123786.98, flops:96.41, batch-reuse:1
@ 1333 train 6.0352 , allloss: 6.0366, dt: 1061.15ms, fracRes: 0.7613, norm(attn): 0.1152, norm(output): 0.8711, norm(x): 0.2275, norm(y): 0.9984, norm:0.5080, tok/sec: 123518.68, flops:96.20, batch-reuse:1
@ 1334 train 6.0393 , allloss: 6.0408, dt: 1047.36ms, fracRes: 0.7640, norm(attn): 0.1113, norm(output): 0.8711, norm(x): 0.2246, norm(y): 0.9983, norm:0.4882, tok/sec: 125145.19, flops:97.46, batch-reuse:1
@ 1335 train 6.0667 , allloss: 6.0681, dt: 1059.35ms, fracRes: 0.7646, norm(attn): 0.1094, norm(output): 0.8750, norm(x): 0.2230, norm(y): 0.9983, norm:0.4273, tok/sec: 123729.06, flops:96.36, batch-reuse:1
@ 1336 train 6.1054 , allloss: 6.1072, dt: 1058.10ms, fracRes: 0.7729, norm(attn): 0.1069, norm(output): 0.8594, norm(x): 0.2128, norm(y): 0.9981, norm:0.7519, tok/sec: 123874.84, flops:96.47, batch-reuse:1
@ 1337 train 6.0839 , allloss: 6.0855, dt: 1064.82ms, fracRes: 0.7698, norm(attn): 0.1069, norm(output): 0.8711, norm(x): 0.2164, norm(y): 0.9982, norm:0.6706, tok/sec: 123093.04, flops:95.87, batch-reuse:1
@ 1338 train 6.0784 , allloss: 6.0798, dt: 1063.97ms, fracRes: 0.7680, norm(attn): 0.1074, norm(output): 0.8711, norm(x): 0.2160, norm(y): 0.9983, norm:0.5876, tok/sec: 123191.79, flops:95.94, batch-reuse:1
@ 1339 train 6.0787 , allloss: 6.0801, dt: 1065.01ms, fracRes: 0.7734, norm(attn): 0.1069, norm(output): 0.8672, norm(x): 0.2098, norm(y): 0.9982, norm:0.4890, tok/sec: 123071.44, flops:95.85, batch-reuse:1
@ 1340 train 6.0309 , allloss: 6.0322, dt: 1061.54ms, fracRes: 0.7672, norm(attn): 0.1084, norm(output): 0.8750, norm(x): 0.2173, norm(y): 0.9983, norm:0.6122, tok/sec: 123473.90, flops:96.16, batch-reuse:1
@ 1341 train 6.0789 , allloss: 6.0802, dt: 1048.91ms, fracRes: 0.7625, norm(attn): 0.1108, norm(output): 0.8789, norm(x): 0.2251, norm(y): 0.9983, norm:0.6526, tok/sec: 124960.44, flops:97.32, batch-reuse:1
@ 1342 train 6.1824 , allloss: 6.1841, dt: 1066.66ms, fracRes: 0.7712, norm(attn): 0.1118, norm(output): 0.8672, norm(x): 0.2142, norm(y): 0.9982, norm:0.8516, tok/sec: 122880.53, flops:95.70, batch-reuse:1
@ 1343 train 6.0207 , allloss: 6.0222, dt: 1069.26ms, fracRes: 0.7650, norm(attn): 0.1118, norm(output): 0.8828, norm(x): 0.2252, norm(y): 0.9983, norm:0.6947, tok/sec: 122581.58, flops:95.47, batch-reuse:1
@ 1344 train 6.0397 , allloss: 6.0410, dt: 1051.79ms, fracRes: 0.7666, norm(attn): 0.1143, norm(output): 0.8711, norm(x): 0.2212, norm(y): 0.9983, norm:0.6377, tok/sec: 124618.37, flops:97.05, batch-reuse:1
@ 1345 train 5.9338 , allloss: 5.9354, dt: 1061.25ms, fracRes: 0.7611, norm(attn): 0.1099, norm(output): 0.8906, norm(x): 0.2258, norm(y): 0.9984, norm:0.6203, tok/sec: 123507.11, flops:96.19, batch-reuse:1
@ 1346 train 6.0220 , allloss: 6.0235, dt: 1063.78ms, fracRes: 0.7676, norm(attn): 0.1074, norm(output): 0.8750, norm(x): 0.2185, norm(y): 0.9982, norm:0.5805, tok/sec: 123213.27, flops:95.96, batch-reuse:1
@ 1347 train 5.9828 , allloss: 5.9840, dt: 1058.85ms, fracRes: 0.7617, norm(attn): 0.1123, norm(output): 0.8711, norm(x): 0.2255, norm(y): 0.9984, norm:0.6700, tok/sec: 123786.76, flops:96.41, batch-reuse:1
@ 1348 train 6.0336 , allloss: 6.0350, dt: 1074.93ms, fracRes: 0.7669, norm(attn): 0.1099, norm(output): 0.8672, norm(x): 0.2177, norm(y): 0.9983, norm:0.5930, tok/sec: 121935.01, flops:94.96, batch-reuse:1
@ 1349 train 6.0631 , allloss: 6.0645, dt: 1040.28ms, fracRes: 0.7649, norm(attn): 0.1074, norm(output): 0.8711, norm(x): 0.2194, norm(y): 0.9983, norm:0.6193, tok/sec: 125996.57, flops:98.13, batch-reuse:1
@ 1350 train 5.9731 , allloss: 5.9746, dt: 1045.56ms, fracRes: 0.7675, norm(attn): 0.1104, norm(output): 0.8750, norm(x): 0.2204, norm(y): 0.9983, norm:0.5772, tok/sec: 125361.02, flops:97.63, batch-reuse:1
@ 1351 train 6.0411 , allloss: 6.0424, dt: 1066.22ms, fracRes: 0.7688, norm(attn): 0.1104, norm(output): 0.8555, norm(x): 0.2180, norm(y): 0.9982, norm:0.5266, tok/sec: 122931.80, flops:95.74, batch-reuse:1
@ 1352 train 6.0989 , allloss: 6.1005, dt: 1064.03ms, fracRes: 0.7692, norm(attn): 0.1064, norm(output): 0.8711, norm(x): 0.2157, norm(y): 0.9982, norm:1.0665, tok/sec: 123184.81, flops:95.94, batch-reuse:1
@ 1353 train 6.0697 , allloss: 6.0711, dt: 1055.95ms, fracRes: 0.7658, norm(attn): 0.1099, norm(output): 0.8672, norm(x): 0.2168, norm(y): 0.9983, norm:1.3367, tok/sec: 124127.52, flops:96.67, batch-reuse:1
@ 1354 train 6.0656 , allloss: 6.0670, dt: 1053.92ms, fracRes: 0.7650, norm(attn): 0.1108, norm(output): 0.8672, norm(x): 0.2158, norm(y): 0.9983, norm:0.7730, tok/sec: 124365.67, flops:96.86, batch-reuse:1
@ 1355 train 6.0060 , allloss: 6.0074, dt: 1054.39ms, fracRes: 0.7604, norm(attn): 0.1113, norm(output): 0.8750, norm(x): 0.2250, norm(y): 0.9984, norm:1.0178, tok/sec: 124310.88, flops:96.81, batch-reuse:1
@ 1356 train 6.0901 , allloss: 6.0916, dt: 1055.73ms, fracRes: 0.7714, norm(attn): 0.1084, norm(output): 0.8555, norm(x): 0.2102, norm(y): 0.9982, norm:0.6071, tok/sec: 124153.20, flops:96.69, batch-reuse:1
@ 1357 train 6.0090 , allloss: 6.0103, dt: 1065.83ms, fracRes: 0.7647, norm(attn): 0.1099, norm(output): 0.8750, norm(x): 0.2184, norm(y): 0.9983, norm:0.5239, tok/sec: 122976.16, flops:95.77, batch-reuse:1
@ 1358 train 6.0104 , allloss: 6.0117, dt: 1068.24ms, fracRes: 0.7643, norm(attn): 0.1104, norm(output): 0.8711, norm(x): 0.2181, norm(y): 0.9983, norm:0.5553, tok/sec: 122699.14, flops:95.56, batch-reuse:1
@ 1359 train 5.9563 , allloss: 5.9576, dt: 1062.34ms, fracRes: 0.7653, norm(attn): 0.1108, norm(output): 0.8672, norm(x): 0.2159, norm(y): 0.9982, norm:0.4478, tok/sec: 123380.87, flops:96.09, batch-reuse:1
@ 1360 train 5.9438 , allloss: 5.9450, dt: 1064.89ms, fracRes: 0.7630, norm(attn): 0.1108, norm(output): 0.8672, norm(x): 0.2198, norm(y): 0.9983, norm:0.4543, tok/sec: 123084.69, flops:95.86, batch-reuse:1
@ 1361 train 6.0115 , allloss: 6.0127, dt: 1044.03ms, fracRes: 0.7656, norm(attn): 0.1133, norm(output): 0.8594, norm(x): 0.2172, norm(y): 0.9983, norm:0.5111, tok/sec: 125544.12, flops:97.77, batch-reuse:1
@ 1362 train 6.0796 , allloss: 6.0808, dt: 1060.11ms, fracRes: 0.7653, norm(attn): 0.1128, norm(output): 0.8633, norm(x): 0.2163, norm(y): 0.9982, norm:0.5004, tok/sec: 123640.07, flops:96.29, batch-reuse:1
@ 1363 train 5.9572 , allloss: 5.9593, dt: 1058.42ms, fracRes: 0.7617, norm(attn): 0.1104, norm(output): 0.8672, norm(x): 0.2230, norm(y): 0.9983, norm:0.5715, tok/sec: 123836.95, flops:96.44, batch-reuse:1
@ 1364 train 5.9448 , allloss: 5.9459, dt: 1068.36ms, fracRes: 0.7618, norm(attn): 0.1128, norm(output): 0.8711, norm(x): 0.2224, norm(y): 0.9983, norm:0.7019, tok/sec: 122685.20, flops:95.55, batch-reuse:1
@ 1365 train 6.0547 , allloss: 6.0560, dt: 1046.15ms, fracRes: 0.7705, norm(attn): 0.1089, norm(output): 0.8672, norm(x): 0.2110, norm(y): 0.9982, norm:0.7477, tok/sec: 125290.22, flops:97.58, batch-reuse:1
@ 1366 train 5.9800 , allloss: 5.9814, dt: 1052.97ms, fracRes: 0.7697, norm(attn): 0.1060, norm(output): 0.8750, norm(x): 0.2142, norm(y): 0.9982, norm:0.6710, tok/sec: 124478.90, flops:96.94, batch-reuse:1
@ 1367 train 5.9604 , allloss: 5.9617, dt: 1047.90ms, fracRes: 0.7677, norm(attn): 0.1094, norm(output): 0.8672, norm(x): 0.2141, norm(y): 0.9982, norm:0.5807, tok/sec: 125080.47, flops:97.41, batch-reuse:1
@ 1368 train 6.0629 , allloss: 6.0643, dt: 1057.43ms, fracRes: 0.7701, norm(attn): 0.1099, norm(output): 0.8633, norm(x): 0.2102, norm(y): 0.9981, norm:0.5455, tok/sec: 123953.16, flops:96.54, batch-reuse:1
@ 1369 train 6.0349 , allloss: 6.0362, dt: 1061.02ms, fracRes: 0.7642, norm(attn): 0.1104, norm(output): 0.8672, norm(x): 0.2174, norm(y): 0.9983, norm:0.7249, tok/sec: 123533.50, flops:96.21, batch-reuse:1
@ 1370 train 5.9537 , allloss: 5.9551, dt: 1064.36ms, fracRes: 0.7623, norm(attn): 0.1147, norm(output): 0.8672, norm(x): 0.2172, norm(y): 0.9983, norm:0.5735, tok/sec: 123146.48, flops:95.91, batch-reuse:1
@ 1371 train 6.0015 , allloss: 6.0029, dt: 1048.48ms, fracRes: 0.7623, norm(attn): 0.1094, norm(output): 0.8789, norm(x): 0.2190, norm(y): 0.9983, norm:0.7209, tok/sec: 125011.84, flops:97.36, batch-reuse:1
@ 1372 train 5.9267 , allloss: 5.9279, dt: 1061.99ms, fracRes: 0.7623, norm(attn): 0.1118, norm(output): 0.8672, norm(x): 0.2204, norm(y): 0.9983, norm:0.4981, tok/sec: 123420.98, flops:96.12, batch-reuse:1
@ 1373 train 5.9423 , allloss: 5.9434, dt: 1055.42ms, fracRes: 0.7618, norm(attn): 0.1099, norm(output): 0.8672, norm(x): 0.2222, norm(y): 0.9983, norm:0.5647, tok/sec: 124189.96, flops:96.72, batch-reuse:1
@ 1374 train 5.9635 , allloss: 5.9648, dt: 1044.45ms, fracRes: 0.7639, norm(attn): 0.1079, norm(output): 0.8750, norm(x): 0.2210, norm(y): 0.9983, norm:0.5418, tok/sec: 125493.39, flops:97.73, batch-reuse:1
@ 1375 train 5.9248 , allloss: 5.9261, dt: 1057.81ms, fracRes: 0.7646, norm(attn): 0.1079, norm(output): 0.8750, norm(x): 0.2188, norm(y): 0.9983, norm:0.5257, tok/sec: 123908.29, flops:96.50, batch-reuse:1
@ 1376 train 5.9187 , allloss: 5.9201, dt: 1046.94ms, fracRes: 0.7606, norm(attn): 0.1138, norm(output): 0.8867, norm(x): 0.2244, norm(y): 0.9984, norm:0.6857, tok/sec: 125194.95, flops:97.50, batch-reuse:1
@ 1377 train 5.9231 , allloss: 5.9242, dt: 1054.96ms, fracRes: 0.7624, norm(attn): 0.1162, norm(output): 0.8672, norm(x): 0.2168, norm(y): 0.9983, norm:0.6652, tok/sec: 124244.13, flops:96.76, batch-reuse:1
@ 1378 train 6.0382 , allloss: 6.0395, dt: 1046.13ms, fracRes: 0.7665, norm(attn): 0.1187, norm(output): 0.8633, norm(x): 0.2129, norm(y): 0.9982, norm:0.6207, tok/sec: 125292.73, flops:97.58, batch-reuse:1
@ 1379 train 5.9779 , allloss: 5.9792, dt: 1065.97ms, fracRes: 0.7654, norm(attn): 0.1143, norm(output): 0.8633, norm(x): 0.2158, norm(y): 0.9982, norm:0.4715, tok/sec: 122959.93, flops:95.76, batch-reuse:1
@ 1380 train 5.8598 , allloss: 5.8610, dt: 1064.82ms, fracRes: 0.7611, norm(attn): 0.1108, norm(output): 0.8750, norm(x): 0.2226, norm(y): 0.9984, norm:0.5170, tok/sec: 123093.32, flops:95.87, batch-reuse:1
@ 1381 train 5.9361 , allloss: 5.9373, dt: 1049.85ms, fracRes: 0.7641, norm(attn): 0.1084, norm(output): 0.8711, norm(x): 0.2197, norm(y): 0.9983, norm:0.4977, tok/sec: 124848.20, flops:97.23, batch-reuse:1
@ 1382 train 5.9306 , allloss: 5.9318, dt: 1054.06ms, fracRes: 0.7669, norm(attn): 0.1079, norm(output): 0.8711, norm(x): 0.2145, norm(y): 0.9983, norm:0.6669, tok/sec: 124349.94, flops:96.84, batch-reuse:1
@ 1383 train 5.9974 , allloss: 5.9986, dt: 1047.28ms, fracRes: 0.7694, norm(attn): 0.1113, norm(output): 0.8672, norm(x): 0.2098, norm(y): 0.9982, norm:0.7215, tok/sec: 125155.28, flops:97.47, batch-reuse:1
@ 1384 train 5.8766 , allloss: 5.8778, dt: 1063.01ms, fracRes: 0.7653, norm(attn): 0.1138, norm(output): 0.8672, norm(x): 0.2139, norm(y): 0.9983, norm:0.5540, tok/sec: 123303.20, flops:96.03, batch-reuse:1
@ 1385 train 5.9675 , allloss: 5.9686, dt: 1065.28ms, fracRes: 0.7644, norm(attn): 0.1133, norm(output): 0.8594, norm(x): 0.2159, norm(y): 0.9983, norm:0.5069, tok/sec: 123039.57, flops:95.82, batch-reuse:1
@ 1386 train 5.9153 , allloss: 5.9165, dt: 1063.15ms, fracRes: 0.7636, norm(attn): 0.1123, norm(output): 0.8672, norm(x): 0.2183, norm(y): 0.9983, norm:0.4583, tok/sec: 123285.94, flops:96.02, batch-reuse:1
@ 1387 train 5.9034 , allloss: 5.9046, dt: 1049.07ms, fracRes: 0.7636, norm(attn): 0.1143, norm(output): 0.8711, norm(x): 0.2181, norm(y): 0.9983, norm:0.4776, tok/sec: 124941.32, flops:97.30, batch-reuse:1
@ 1388 train 5.9821 , allloss: 5.9833, dt: 1059.82ms, fracRes: 0.7677, norm(attn): 0.1113, norm(output): 0.8672, norm(x): 0.2136, norm(y): 0.9983, norm:0.5652, tok/sec: 123673.42, flops:96.32, batch-reuse:1
@ 1389 train 5.8030 , allloss: 5.8044, dt: 1056.15ms, fracRes: 0.7706, norm(attn): 0.1162, norm(output): 0.8711, norm(x): 0.2105, norm(y): 0.9983, norm:0.5806, tok/sec: 124103.03, flops:96.65, batch-reuse:1
@ 1390 train 6.0919 , allloss: 6.0933, dt: 1080.05ms, fracRes: 0.7791, norm(attn): 0.1143, norm(output): 0.8477, norm(x): 0.1960, norm(y): 0.9980, norm:0.9157, tok/sec: 121357.08, flops:94.51, batch-reuse:1
@ 1391 train 5.9763 , allloss: 5.9777, dt: 1062.14ms, fracRes: 0.7679, norm(attn): 0.1099, norm(output): 0.8672, norm(x): 0.2071, norm(y): 0.9982, norm:0.7925, tok/sec: 123403.89, flops:96.11, batch-reuse:1
@ 1392 train 5.8990 , allloss: 5.9003, dt: 1048.78ms, fracRes: 0.7609, norm(attn): 0.1123, norm(output): 0.8711, norm(x): 0.2154, norm(y): 0.9984, norm:0.4673, tok/sec: 124975.83, flops:97.33, batch-reuse:1
@ 1393 train 5.8643 , allloss: 5.8655, dt: 1046.26ms, fracRes: 0.7599, norm(attn): 0.1157, norm(output): 0.8711, norm(x): 0.2192, norm(y): 0.9984, norm:0.6674, tok/sec: 125277.26, flops:97.57, batch-reuse:1
@ 1394 train 5.8645 , allloss: 5.8659, dt: 1050.99ms, fracRes: 0.7638, norm(attn): 0.1162, norm(output): 0.8711, norm(x): 0.2144, norm(y): 0.9983, norm:0.5695, tok/sec: 124713.02, flops:97.13, batch-reuse:1
@ 1395 train 5.8699 , allloss: 5.8713, dt: 1055.86ms, fracRes: 0.7667, norm(attn): 0.1104, norm(output): 0.8711, norm(x): 0.2118, norm(y): 0.9983, norm:0.6082, tok/sec: 124137.80, flops:96.68, batch-reuse:1
@ 1396 train 5.8843 , allloss: 5.8856, dt: 1050.62ms, fracRes: 0.7659, norm(attn): 0.1089, norm(output): 0.8750, norm(x): 0.2122, norm(y): 0.9983, norm:0.5941, tok/sec: 124756.91, flops:97.16, batch-reuse:1
@ 1397 train 5.9109 , allloss: 5.9123, dt: 1054.17ms, fracRes: 0.7684, norm(attn): 0.1099, norm(output): 0.8750, norm(x): 0.2117, norm(y): 0.9982, norm:0.4535, tok/sec: 124337.12, flops:96.83, batch-reuse:1
@ 1398 train 5.9113 , allloss: 5.9126, dt: 1067.40ms, fracRes: 0.7686, norm(attn): 0.1113, norm(output): 0.8711, norm(x): 0.2115, norm(y): 0.9982, norm:0.5499, tok/sec: 122795.31, flops:95.63, batch-reuse:1
@ 1399 train 5.8208 , allloss: 5.8221, dt: 1060.87ms, fracRes: 0.7651, norm(attn): 0.1138, norm(output): 0.8672, norm(x): 0.2136, norm(y): 0.9983, norm:0.4309, tok/sec: 123551.93, flops:96.22, batch-reuse:1
@ 1400 train 5.9694 , allloss: 5.9709, dt: 1067.98ms, fracRes: 0.7687, norm(attn): 0.1113, norm(output): 0.8672, norm(x): 0.2082, norm(y): 0.9982, norm:0.4944, tok/sec: 122728.72, flops:95.58, batch-reuse:1
@ 1401 train 5.8420 , allloss: 5.8435, dt: 1048.47ms, fracRes: 0.7671, norm(attn): 0.1104, norm(output): 0.8750, norm(x): 0.2134, norm(y): 0.9982, norm:0.4757, tok/sec: 125013.12, flops:97.36, batch-reuse:1
@ 1402 train 5.7958 , allloss: 5.7973, dt: 1064.07ms, fracRes: 0.7636, norm(attn): 0.1128, norm(output): 0.8789, norm(x): 0.2172, norm(y): 0.9983, norm:0.5330, tok/sec: 123179.54, flops:95.93, batch-reuse:1
@ 1403 train 5.8814 , allloss: 5.8828, dt: 1057.01ms, fracRes: 0.7641, norm(attn): 0.1133, norm(output): 0.8672, norm(x): 0.2149, norm(y): 0.9982, norm:0.5073, tok/sec: 124002.31, flops:96.57, batch-reuse:1
@ 1404 train 5.8500 , allloss: 5.8512, dt: 1057.89ms, fracRes: 0.7657, norm(attn): 0.1138, norm(output): 0.8672, norm(x): 0.2116, norm(y): 0.9982, norm:0.5038, tok/sec: 123900.00, flops:96.49, batch-reuse:1
@ 1405 train 5.8772 , allloss: 5.8786, dt: 1045.17ms, fracRes: 0.7682, norm(attn): 0.1123, norm(output): 0.8711, norm(x): 0.2087, norm(y): 0.9982, norm:0.4269, tok/sec: 125407.89, flops:97.67, batch-reuse:1
@ 1406 train 5.9677 , allloss: 5.9689, dt: 1059.03ms, fracRes: 0.7665, norm(attn): 0.1113, norm(output): 0.8672, norm(x): 0.2097, norm(y): 0.9982, norm:0.4790, tok/sec: 123765.58, flops:96.39, batch-reuse:1
@ 1407 train 5.8672 , allloss: 5.8684, dt: 1041.76ms, fracRes: 0.7643, norm(attn): 0.1094, norm(output): 0.8750, norm(x): 0.2111, norm(y): 0.9982, norm:0.5488, tok/sec: 125818.25, flops:97.99, batch-reuse:1
@ 1408 train 5.8573 , allloss: 5.8586, dt: 1047.08ms, fracRes: 0.7685, norm(attn): 0.1089, norm(output): 0.8633, norm(x): 0.2070, norm(y): 0.9982, norm:0.5519, tok/sec: 125178.39, flops:97.49, batch-reuse:1
@ 1409 train 5.8588 , allloss: 5.8600, dt: 1057.24ms, fracRes: 0.7651, norm(attn): 0.1147, norm(output): 0.8750, norm(x): 0.2119, norm(y): 0.9982, norm:0.8491, tok/sec: 123975.55, flops:96.55, batch-reuse:1
@ 1410 train 5.8360 , allloss: 5.8373, dt: 1047.78ms, fracRes: 0.7633, norm(attn): 0.1084, norm(output): 0.8750, norm(x): 0.2119, norm(y): 0.9983, norm:0.7340, tok/sec: 125095.44, flops:97.42, batch-reuse:1
@ 1411 train 5.8335 , allloss: 5.8347, dt: 1047.41ms, fracRes: 0.7653, norm(attn): 0.1104, norm(output): 0.8672, norm(x): 0.2104, norm(y): 0.9983, norm:0.5559, tok/sec: 125139.24, flops:97.46, batch-reuse:1
@ 1412 train 5.8219 , allloss: 5.8232, dt: 1056.98ms, fracRes: 0.7683, norm(attn): 0.1133, norm(output): 0.8633, norm(x): 0.2091, norm(y): 0.9982, norm:0.7518, tok/sec: 124006.45, flops:96.58, batch-reuse:1
@ 1413 train 5.7921 , allloss: 5.7934, dt: 1049.35ms, fracRes: 0.7669, norm(attn): 0.1128, norm(output): 0.8711, norm(x): 0.2122, norm(y): 0.9983, norm:0.6269, tok/sec: 124908.22, flops:97.28, batch-reuse:1
@ 1414 train 5.8317 , allloss: 5.8330, dt: 1040.56ms, fracRes: 0.7704, norm(attn): 0.1128, norm(output): 0.8672, norm(x): 0.2073, norm(y): 0.9982, norm:0.7315, tok/sec: 125963.06, flops:98.10, batch-reuse:1
@ 1415 train 5.8941 , allloss: 5.8952, dt: 1042.37ms, fracRes: 0.7681, norm(attn): 0.1104, norm(output): 0.8672, norm(x): 0.2083, norm(y): 0.9982, norm:0.6755, tok/sec: 125743.72, flops:97.93, batch-reuse:1
@ 1416 train 5.9095 , allloss: 5.9109, dt: 1061.97ms, fracRes: 0.7750, norm(attn): 0.1152, norm(output): 0.8594, norm(x): 0.1984, norm(y): 0.9981, norm:0.5154, tok/sec: 123422.95, flops:96.12, batch-reuse:1
@ 1417 train 5.8323 , allloss: 5.8335, dt: 1048.82ms, fracRes: 0.7660, norm(attn): 0.1162, norm(output): 0.8750, norm(x): 0.2063, norm(y): 0.9983, norm:0.6141, tok/sec: 124970.75, flops:97.33, batch-reuse:1
@ 1418 train 5.8643 , allloss: 5.8656, dt: 1051.98ms, fracRes: 0.7701, norm(attn): 0.1128, norm(output): 0.8711, norm(x): 0.2038, norm(y): 0.9982, norm:0.6003, tok/sec: 124596.00, flops:97.04, batch-reuse:1
@ 1419 train 5.9192 , allloss: 5.9203, dt: 1048.39ms, fracRes: 0.7679, norm(attn): 0.1133, norm(output): 0.8672, norm(x): 0.2074, norm(y): 0.9981, norm:0.6002, tok/sec: 125022.61, flops:97.37, batch-reuse:1
@ 1420 train 5.9076 , allloss: 5.9089, dt: 1067.50ms, fracRes: 0.7702, norm(attn): 0.1133, norm(output): 0.8711, norm(x): 0.2068, norm(y): 0.9981, norm:0.4886, tok/sec: 122783.98, flops:95.62, batch-reuse:1
@ 1421 train 5.8871 , allloss: 5.8884, dt: 1046.06ms, fracRes: 0.7718, norm(attn): 0.1108, norm(output): 0.8672, norm(x): 0.2057, norm(y): 0.9981, norm:0.5961, tok/sec: 125300.87, flops:97.58, batch-reuse:1
@ 1422 train 5.8146 , allloss: 5.8160, dt: 1052.41ms, fracRes: 0.7687, norm(attn): 0.1104, norm(output): 0.8711, norm(x): 0.2098, norm(y): 0.9982, norm:0.5341, tok/sec: 124544.94, flops:97.00, batch-reuse:1
@ 1423 train 5.8461 , allloss: 5.8474, dt: 1048.79ms, fracRes: 0.7682, norm(attn): 0.1104, norm(output): 0.8633, norm(x): 0.2049, norm(y): 0.9981, norm:0.5628, tok/sec: 124974.35, flops:97.33, batch-reuse:1
@ 1424 train 5.8400 , allloss: 5.8413, dt: 1059.76ms, fracRes: 0.7651, norm(attn): 0.1108, norm(output): 0.8633, norm(x): 0.2064, norm(y): 0.9982, norm:0.5596, tok/sec: 123681.35, flops:96.32, batch-reuse:1
@ 1425 train 5.8095 , allloss: 5.8107, dt: 1052.11ms, fracRes: 0.7636, norm(attn): 0.1143, norm(output): 0.8672, norm(x): 0.2084, norm(y): 0.9982, norm:0.5228, tok/sec: 124580.45, flops:97.02, batch-reuse:1
@ 1426 train 5.7309 , allloss: 5.7321, dt: 1057.51ms, fracRes: 0.7645, norm(attn): 0.1182, norm(output): 0.8711, norm(x): 0.2092, norm(y): 0.9982, norm:0.5609, tok/sec: 123944.11, flops:96.53, batch-reuse:1
@ 1427 train 5.8224 , allloss: 5.8238, dt: 1061.55ms, fracRes: 0.7685, norm(attn): 0.1162, norm(output): 0.8594, norm(x): 0.2050, norm(y): 0.9981, norm:0.4888, tok/sec: 123472.07, flops:96.16, batch-reuse:1
@ 1428 train 5.7966 , allloss: 5.7978, dt: 1057.94ms, fracRes: 0.7665, norm(attn): 0.1138, norm(output): 0.8672, norm(x): 0.2067, norm(y): 0.9982, norm:0.4495, tok/sec: 123893.10, flops:96.49, batch-reuse:1
@ 1429 train 5.8166 , allloss: 5.8183, dt: 1056.04ms, fracRes: 0.7729, norm(attn): 0.1108, norm(output): 0.8750, norm(x): 0.2005, norm(y): 0.9980, norm:0.6884, tok/sec: 124116.14, flops:96.66, batch-reuse:1
@ 1430 train 5.8398 , allloss: 5.8410, dt: 1051.98ms, fracRes: 0.7716, norm(attn): 0.1108, norm(output): 0.8672, norm(x): 0.1992, norm(y): 0.9981, norm:0.6509, tok/sec: 124595.41, flops:97.04, batch-reuse:1
@ 1431 train 5.7932 , allloss: 5.7944, dt: 1043.16ms, fracRes: 0.7680, norm(attn): 0.1143, norm(output): 0.8672, norm(x): 0.2011, norm(y): 0.9982, norm:0.5363, tok/sec: 125649.54, flops:97.86, batch-reuse:1
@ 1432 train 5.7577 , allloss: 5.7587, dt: 1045.46ms, fracRes: 0.7651, norm(attn): 0.1138, norm(output): 0.8711, norm(x): 0.2049, norm(y): 0.9982, norm:0.7318, tok/sec: 125372.54, flops:97.64, batch-reuse:1
@ 1433 train 5.8195 , allloss: 5.8208, dt: 1059.52ms, fracRes: 0.7718, norm(attn): 0.1152, norm(output): 0.8633, norm(x): 0.1991, norm(y): 0.9980, norm:0.6480, tok/sec: 123709.10, flops:96.35, batch-reuse:1
@ 1434 train 5.8668 , allloss: 5.8681, dt: 1060.72ms, fracRes: 0.7760, norm(attn): 0.1147, norm(output): 0.8516, norm(x): 0.1947, norm(y): 0.9980, norm:0.6650, tok/sec: 123569.40, flops:96.24, batch-reuse:1
@ 1435 train 5.7874 , allloss: 5.7886, dt: 1062.40ms, fracRes: 0.7708, norm(attn): 0.1118, norm(output): 0.8711, norm(x): 0.2003, norm(y): 0.9981, norm:0.6181, tok/sec: 123373.62, flops:96.08, batch-reuse:1
@ 1436 train 5.7801 , allloss: 5.7813, dt: 1058.34ms, fracRes: 0.7686, norm(attn): 0.1143, norm(output): 0.8672, norm(x): 0.2017, norm(y): 0.9981, norm:0.6212, tok/sec: 123846.52, flops:96.45, batch-reuse:1
@ 1437 train 5.7962 , allloss: 5.7974, dt: 1056.61ms, fracRes: 0.7689, norm(attn): 0.1147, norm(output): 0.8711, norm(x): 0.2047, norm(y): 0.9981, norm:0.4994, tok/sec: 124049.77, flops:96.61, batch-reuse:1
@ 1438 train 5.7154 , allloss: 5.7168, dt: 1077.31ms, fracRes: 0.7694, norm(attn): 0.1157, norm(output): 0.8633, norm(x): 0.2044, norm(y): 0.9981, norm:0.5477, tok/sec: 121665.70, flops:94.75, batch-reuse:1
@ 1439 train 5.7397 , allloss: 5.7411, dt: 1078.11ms, fracRes: 0.7712, norm(attn): 0.1172, norm(output): 0.8633, norm(x): 0.2013, norm(y): 0.9980, norm:0.6076, tok/sec: 121575.45, flops:94.68, batch-reuse:1
@ 1440 train 5.7982 , allloss: 5.7996, dt: 1076.09ms, fracRes: 0.7710, norm(attn): 0.1123, norm(output): 0.8711, norm(x): 0.2007, norm(y): 0.9980, norm:0.6993, tok/sec: 121803.77, flops:94.86, batch-reuse:1
@ 1441 train 5.7692 , allloss: 5.7702, dt: 1041.45ms, fracRes: 0.7675, norm(attn): 0.1108, norm(output): 0.8711, norm(x): 0.2050, norm(y): 0.9981, norm:0.5846, tok/sec: 125855.30, flops:98.02, batch-reuse:1
@ 1442 train 5.7746 , allloss: 5.9044, dt: 1042.88ms, fracRes: 0.7706, norm(attn): 0.1147, norm(output): 0.8711, norm(x): 0.2078, norm(y): 0.9980, norm:1.3053, tok/sec: 125682.55, flops:97.88, batch-reuse:1
@ 1443 train 5.7352 , allloss: 5.7363, dt: 1050.83ms, fracRes: 0.7660, norm(attn): 0.1138, norm(output): 0.8711, norm(x): 0.2071, norm(y): 0.9981, norm:0.6224, tok/sec: 124732.15, flops:97.14, batch-reuse:1
@ 1444 train 5.7517 , allloss: 5.7530, dt: 1043.14ms, fracRes: 0.7693, norm(attn): 0.1152, norm(output): 0.8672, norm(x): 0.2042, norm(y): 0.9980, norm:0.5881, tok/sec: 125650.98, flops:97.86, batch-reuse:1
@ 1445 train 5.8267 , allloss: 5.8280, dt: 1063.70ms, fracRes: 0.7728, norm(attn): 0.1157, norm(output): 0.8711, norm(x): 0.1997, norm(y): 0.9979, norm:0.6227, tok/sec: 123223.24, flops:95.97, batch-reuse:1
@ 1446 train 5.7968 , allloss: 5.7980, dt: 1062.73ms, fracRes: 0.7744, norm(attn): 0.1133, norm(output): 0.8672, norm(x): 0.1965, norm(y): 0.9979, norm:0.5435, tok/sec: 123335.09, flops:96.05, batch-reuse:1
@ 1447 train 5.7891 , allloss: 5.7903, dt: 1071.14ms, fracRes: 0.7726, norm(attn): 0.1152, norm(output): 0.8672, norm(x): 0.1980, norm(y): 0.9979, norm:0.5185, tok/sec: 122366.49, flops:95.30, batch-reuse:1
@ 1448 train 5.7359 , allloss: 5.7372, dt: 1045.83ms, fracRes: 0.7690, norm(attn): 0.1177, norm(output): 0.8711, norm(x): 0.2010, norm(y): 0.9979, norm:0.4960, tok/sec: 125327.86, flops:97.61, batch-reuse:1
@ 1449 train 5.8358 , allloss: 5.8372, dt: 1049.32ms, fracRes: 0.7728, norm(attn): 0.1167, norm(output): 0.8750, norm(x): 0.1969, norm(y): 0.9978, norm:0.5269, tok/sec: 124911.06, flops:97.28, batch-reuse:1
@ 1450 train 5.8235 , allloss: 5.8250, dt: 1058.54ms, fracRes: 0.7726, norm(attn): 0.1167, norm(output): 0.8750, norm(x): 0.1986, norm(y): 0.9978, norm:0.5929, tok/sec: 123823.39, flops:96.43, batch-reuse:1
@ 1451 train 5.8447 , allloss: 5.8464, dt: 1052.52ms, fracRes: 0.7758, norm(attn): 0.1152, norm(output): 0.8672, norm(x): 0.1939, norm(y): 0.9977, norm:0.5922, tok/sec: 124531.20, flops:96.99, batch-reuse:1
@ 1452 train 5.7302 , allloss: 5.7315, dt: 1054.28ms, fracRes: 0.7699, norm(attn): 0.1157, norm(output): 0.8750, norm(x): 0.1998, norm(y): 0.9979, norm:0.6138, tok/sec: 124324.15, flops:96.82, batch-reuse:1
@ 1453 train 5.7494 , allloss: 5.7507, dt: 1055.34ms, fracRes: 0.7711, norm(attn): 0.1162, norm(output): 0.8789, norm(x): 0.1992, norm(y): 0.9979, norm:0.6180, tok/sec: 124198.47, flops:96.73, batch-reuse:1
@ 1454 train 5.7589 , allloss: 5.7603, dt: 1045.61ms, fracRes: 0.7713, norm(attn): 0.1133, norm(output): 0.8711, norm(x): 0.1980, norm(y): 0.9978, norm:0.5677, tok/sec: 125354.93, flops:97.63, batch-reuse:1
@ 1455 train 5.7127 , allloss: 5.7141, dt: 1042.95ms, fracRes: 0.7695, norm(attn): 0.1104, norm(output): 0.8711, norm(x): 0.1982, norm(y): 0.9979, norm:0.6736, tok/sec: 125673.95, flops:97.88, batch-reuse:1
@ 1456 train 5.7350 , allloss: 5.7365, dt: 1052.90ms, fracRes: 0.7748, norm(attn): 0.1157, norm(output): 0.8672, norm(x): 0.1928, norm(y): 0.9978, norm:0.6588, tok/sec: 124486.08, flops:96.95, batch-reuse:1
@ 1457 train 5.7346 , allloss: 5.7360, dt: 1048.41ms, fracRes: 0.7741, norm(attn): 0.1123, norm(output): 0.8750, norm(x): 0.1923, norm(y): 0.9978, norm:0.6223, tok/sec: 125019.23, flops:97.37, batch-reuse:1
@ 1458 train 5.7775 , allloss: 5.7789, dt: 1046.12ms, fracRes: 0.7748, norm(attn): 0.1147, norm(output): 0.8672, norm(x): 0.1902, norm(y): 0.9977, norm:0.5425, tok/sec: 125293.19, flops:97.58, batch-reuse:1
@ 1459 train 5.7963 , allloss: 5.7977, dt: 1055.21ms, fracRes: 0.7752, norm(attn): 0.1147, norm(output): 0.8711, norm(x): 0.1906, norm(y): 0.9977, norm:0.4839, tok/sec: 124214.60, flops:96.74, batch-reuse:1
@ 1460 train 5.6987 , allloss: 5.7001, dt: 1059.33ms, fracRes: 0.7688, norm(attn): 0.1167, norm(output): 0.8750, norm(x): 0.1993, norm(y): 0.9979, norm:0.5610, tok/sec: 123730.76, flops:96.36, batch-reuse:1
@ 1461 train 5.6713 , allloss: 5.6726, dt: 1044.45ms, fracRes: 0.7688, norm(attn): 0.1167, norm(output): 0.8750, norm(x): 0.1995, norm(y): 0.9978, norm:0.5132, tok/sec: 125493.48, flops:97.73, batch-reuse:1
@ 1462 train 5.7244 , allloss: 5.7256, dt: 1047.48ms, fracRes: 0.7707, norm(attn): 0.1147, norm(output): 0.8672, norm(x): 0.1975, norm(y): 0.9977, norm:0.5316, tok/sec: 125130.21, flops:97.45, batch-reuse:1
@ 1463 train 5.7330 , allloss: 5.7343, dt: 1064.03ms, fracRes: 0.7741, norm(attn): 0.1152, norm(output): 0.8633, norm(x): 0.1959, norm(y): 0.9977, norm:0.7052, tok/sec: 123184.12, flops:95.94, batch-reuse:1
@ 1464 train 5.7558 , allloss: 5.7571, dt: 1051.61ms, fracRes: 0.7698, norm(attn): 0.1133, norm(output): 0.8711, norm(x): 0.1973, norm(y): 0.9978, norm:0.5837, tok/sec: 124638.97, flops:97.07, batch-reuse:1
@ 1465 train 5.6469 , allloss: 5.6481, dt: 1049.92ms, fracRes: 0.7722, norm(attn): 0.1152, norm(output): 0.8594, norm(x): 0.1941, norm(y): 0.9978, norm:0.6367, tok/sec: 124840.20, flops:97.23, batch-reuse:1
@ 1466 train 5.6443 , allloss: 5.6454, dt: 1063.92ms, fracRes: 0.7699, norm(attn): 0.1143, norm(output): 0.8633, norm(x): 0.1992, norm(y): 0.9978, norm:0.5782, tok/sec: 123197.48, flops:95.95, batch-reuse:1
@ 1467 train 5.7231 , allloss: 5.7242, dt: 1051.43ms, fracRes: 0.7703, norm(attn): 0.1147, norm(output): 0.8711, norm(x): 0.2008, norm(y): 0.9977, norm:0.5652, tok/sec: 124660.67, flops:97.09, batch-reuse:1
@ 1468 train 5.7490 , allloss: 5.7504, dt: 1046.61ms, fracRes: 0.7732, norm(attn): 0.1157, norm(output): 0.8711, norm(x): 0.1958, norm(y): 0.9977, norm:0.5644, tok/sec: 125234.25, flops:97.53, batch-reuse:1
@ 1469 train 5.8269 , allloss: 5.8284, dt: 1056.79ms, fracRes: 0.7834, norm(attn): 0.1108, norm(output): 0.8594, norm(x): 0.1857, norm(y): 0.9975, norm:0.6545, tok/sec: 124028.69, flops:96.59, batch-reuse:1
@ 1470 train 5.7016 , allloss: 5.7028, dt: 1044.21ms, fracRes: 0.7740, norm(attn): 0.1152, norm(output): 0.8750, norm(x): 0.1943, norm(y): 0.9977, norm:0.5810, tok/sec: 125522.51, flops:97.76, batch-reuse:1
@ 1471 train 5.6340 , allloss: 5.6353, dt: 1047.59ms, fracRes: 0.7692, norm(attn): 0.1167, norm(output): 0.8750, norm(x): 0.1987, norm(y): 0.9978, norm:0.5317, tok/sec: 125117.42, flops:97.44, batch-reuse:1
@ 1472 train 5.6960 , allloss: 5.6971, dt: 1057.62ms, fracRes: 0.7711, norm(attn): 0.1182, norm(output): 0.8750, norm(x): 0.1959, norm(y): 0.9977, norm:0.5813, tok/sec: 123931.00, flops:96.52, batch-reuse:1
@ 1473 train 5.7225 , allloss: 5.7236, dt: 1059.29ms, fracRes: 0.7728, norm(attn): 0.1162, norm(output): 0.8750, norm(x): 0.1931, norm(y): 0.9977, norm:0.6936, tok/sec: 123735.91, flops:96.37, batch-reuse:1
@ 1474 train 5.8863 , allloss: 5.8880, dt: 1060.10ms, fracRes: 0.7836, norm(attn): 0.1172, norm(output): 0.8711, norm(x): 0.1825, norm(y): 0.9974, norm:0.7669, tok/sec: 123641.55, flops:96.29, batch-reuse:1
@ 1475 train 5.7407 , allloss: 5.7418, dt: 1060.40ms, fracRes: 0.7744, norm(attn): 0.1182, norm(output): 0.8711, norm(x): 0.1920, norm(y): 0.9976, norm:0.6034, tok/sec: 123606.49, flops:96.27, batch-reuse:1
@ 1476 train 5.6716 , allloss: 5.6726, dt: 1056.30ms, fracRes: 0.7699, norm(attn): 0.1177, norm(output): 0.8711, norm(x): 0.1960, norm(y): 0.9977, norm:0.5409, tok/sec: 124086.45, flops:96.64, batch-reuse:1
@ 1477 train 5.7049 , allloss: 5.7061, dt: 1054.44ms, fracRes: 0.7703, norm(attn): 0.1167, norm(output): 0.8750, norm(x): 0.1948, norm(y): 0.9977, norm:0.5572, tok/sec: 124305.38, flops:96.81, batch-reuse:1
@ 1478 train 5.6643 , allloss: 5.6654, dt: 1058.04ms, fracRes: 0.7703, norm(attn): 0.1147, norm(output): 0.8789, norm(x): 0.1969, norm(y): 0.9977, norm:0.4334, tok/sec: 123882.24, flops:96.48, batch-reuse:1
@ 1479 train 5.6791 , allloss: 5.6803, dt: 1054.45ms, fracRes: 0.7725, norm(attn): 0.1152, norm(output): 0.8750, norm(x): 0.1963, norm(y): 0.9976, norm:0.5804, tok/sec: 124303.86, flops:96.81, batch-reuse:1
@ 1480 train 5.7088 , allloss: 5.7100, dt: 1054.47ms, fracRes: 0.7724, norm(attn): 0.1157, norm(output): 0.8750, norm(x): 0.1952, norm(y): 0.9976, norm:0.6008, tok/sec: 124300.82, flops:96.81, batch-reuse:1
@ 1481 train 5.6889 , allloss: 5.6901, dt: 1056.08ms, fracRes: 0.7725, norm(attn): 0.1172, norm(output): 0.8750, norm(x): 0.1931, norm(y): 0.9977, norm:0.6211, tok/sec: 124112.05, flops:96.66, batch-reuse:1
@ 1482 train 5.7407 , allloss: 5.7418, dt: 1052.03ms, fracRes: 0.7728, norm(attn): 0.1157, norm(output): 0.8789, norm(x): 0.1920, norm(y): 0.9976, norm:0.6579, tok/sec: 124589.14, flops:97.03, batch-reuse:1
@ 1483 train 5.7573 , allloss: 5.7584, dt: 1054.16ms, fracRes: 0.7733, norm(attn): 0.1152, norm(output): 0.8750, norm(x): 0.1910, norm(y): 0.9976, norm:0.6230, tok/sec: 124338.38, flops:96.84, batch-reuse:1
@ 1484 train 5.8208 , allloss: 5.8219, dt: 1065.82ms, fracRes: 0.7737, norm(attn): 0.1182, norm(output): 0.8711, norm(x): 0.1925, norm(y): 0.9976, norm:0.7443, tok/sec: 122977.42, flops:95.78, batch-reuse:1
@ 1485 train 5.8902 , allloss: 5.8915, dt: 1064.55ms, fracRes: 0.7813, norm(attn): 0.1157, norm(output): 0.8672, norm(x): 0.1869, norm(y): 0.9975, norm:0.8121, tok/sec: 123124.03, flops:95.89, batch-reuse:1
@ 1486 train 5.8561 , allloss: 5.8571, dt: 1063.24ms, fracRes: 0.7728, norm(attn): 0.1167, norm(output): 0.8750, norm(x): 0.1943, norm(y): 0.9976, norm:0.7689, tok/sec: 123276.13, flops:96.01, batch-reuse:1
@ 1487 train 5.8176 , allloss: 5.8186, dt: 1062.53ms, fracRes: 0.7715, norm(attn): 0.1157, norm(output): 0.8789, norm(x): 0.1957, norm(y): 0.9976, norm:0.6537, tok/sec: 123358.98, flops:96.07, batch-reuse:1
@ 1488 train 5.7902 , allloss: 5.7912, dt: 1047.81ms, fracRes: 0.7705, norm(attn): 0.1162, norm(output): 0.8750, norm(x): 0.1969, norm(y): 0.9976, norm:0.6956, tok/sec: 125091.57, flops:97.42, batch-reuse:1
@ 1489 train 5.9520 , allloss: 5.9532, dt: 1059.16ms, fracRes: 0.7754, norm(attn): 0.1128, norm(output): 0.8750, norm(x): 0.1905, norm(y): 0.9975, norm:0.7193, tok/sec: 123751.32, flops:96.38, batch-reuse:1
@ 1490 train 5.9614 , allloss: 5.9628, dt: 1052.20ms, fracRes: 0.7788, norm(attn): 0.1123, norm(output): 0.8750, norm(x): 0.1885, norm(y): 0.9974, norm:0.7179, tok/sec: 124569.97, flops:97.02, batch-reuse:1
@ 1491 train 5.9580 , allloss: 5.9592, dt: 1042.15ms, fracRes: 0.7750, norm(attn): 0.1172, norm(output): 0.8789, norm(x): 0.1930, norm(y): 0.9975, norm:0.6618, tok/sec: 125770.33, flops:97.95, batch-reuse:1
@ 1492 train 5.8385 , allloss: 5.8397, dt: 1051.78ms, fracRes: 0.7733, norm(attn): 0.1216, norm(output): 0.8750, norm(x): 0.1949, norm(y): 0.9976, norm:0.9593, tok/sec: 124619.25, flops:97.05, batch-reuse:1
@ 1493 train 5.8362 , allloss: 5.8375, dt: 1050.66ms, fracRes: 0.7760, norm(attn): 0.1172, norm(output): 0.8750, norm(x): 0.1902, norm(y): 0.9975, norm:1.1509, tok/sec: 124752.41, flops:97.16, batch-reuse:1
@ 1494 train 5.8709 , allloss: 5.8722, dt: 1050.29ms, fracRes: 0.7769, norm(attn): 0.1099, norm(output): 0.8828, norm(x): 0.1917, norm(y): 0.9974, norm:1.1001, tok/sec: 124795.51, flops:97.19, batch-reuse:1
@ 1495 train 5.8106 , allloss: 5.8117, dt: 1054.68ms, fracRes: 0.7753, norm(attn): 0.1089, norm(output): 0.8828, norm(x): 0.1928, norm(y): 0.9975, norm:0.7351, tok/sec: 124276.88, flops:96.79, batch-reuse:1
@ 1496 train 5.8489 , allloss: 5.8501, dt: 1052.67ms, fracRes: 0.7765, norm(attn): 0.1094, norm(output): 0.8711, norm(x): 0.1927, norm(y): 0.9974, norm:0.6582, tok/sec: 124513.66, flops:96.97, batch-reuse:1
@ 1497 train 5.7286 , allloss: 5.7297, dt: 1047.73ms, fracRes: 0.7689, norm(attn): 0.1143, norm(output): 0.8906, norm(x): 0.2015, norm(y): 0.9975, norm:0.8052, tok/sec: 125100.65, flops:97.43, batch-reuse:1
@ 1498 train 5.9019 , allloss: 5.9029, dt: 1043.68ms, fracRes: 0.7732, norm(attn): 0.1094, norm(output): 0.8711, norm(x): 0.1950, norm(y): 0.9974, norm:0.8366, tok/sec: 125586.74, flops:97.81, batch-reuse:1
@ 1499 train 5.9228 , allloss: 5.9242, dt: 1057.53ms, fracRes: 0.7862, norm(attn): 0.1108, norm(output): 0.8633, norm(x): 0.1816, norm(y): 0.9971, norm:1.1233, tok/sec: 123941.67, flops:96.53, batch-reuse:1
@ 1500 train 5.9318 , allloss: 5.9330, dt: 1050.36ms, fracRes: 0.7780, norm(attn): 0.1123, norm(output): 0.8750, norm(x): 0.1903, norm(y): 0.9973, norm:0.9859, tok/sec: 124787.84, flops:97.19, batch-reuse:1
@ 1501 train 5.8080 , allloss: 5.8090, dt: 1060.84ms, fracRes: 0.7718, norm(attn): 0.1113, norm(output): 0.8750, norm(x): 0.1974, norm(y): 0.9975, norm:0.6887, tok/sec: 123554.57, flops:96.22, batch-reuse:1
@ 1502 train 5.8403 , allloss: 5.8413, dt: 1054.55ms, fracRes: 0.7767, norm(attn): 0.1147, norm(output): 0.8711, norm(x): 0.1952, norm(y): 0.9974, norm:0.8775, tok/sec: 124292.14, flops:96.80, batch-reuse:1
@ 1503 train 5.8977 , allloss: 5.8987, dt: 1057.96ms, fracRes: 0.7759, norm(attn): 0.1113, norm(output): 0.8711, norm(x): 0.1948, norm(y): 0.9974, norm:0.8021, tok/sec: 123890.70, flops:96.49, batch-reuse:1
@ 1504 train 5.8971 , allloss: 5.8981, dt: 1050.17ms, fracRes: 0.7766, norm(attn): 0.1108, norm(output): 0.8789, norm(x): 0.1928, norm(y): 0.9974, norm:0.5793, tok/sec: 124809.85, flops:97.20, batch-reuse:1
@ 1505 train 5.8433 , allloss: 5.8443, dt: 1052.12ms, fracRes: 0.7773, norm(attn): 0.1133, norm(output): 0.8789, norm(x): 0.1914, norm(y): 0.9974, norm:0.7090, tok/sec: 124578.47, flops:97.02, batch-reuse:1
@ 1506 train 5.8791 , allloss: 5.8801, dt: 1050.56ms, fracRes: 0.7808, norm(attn): 0.1147, norm(output): 0.8711, norm(x): 0.1883, norm(y): 0.9973, norm:0.5569, tok/sec: 124763.65, flops:97.17, batch-reuse:1
@ 1507 train 5.8914 , allloss: 5.8924, dt: 1057.54ms, fracRes: 0.7798, norm(attn): 0.1147, norm(output): 0.8672, norm(x): 0.1873, norm(y): 0.9973, norm:0.7115, tok/sec: 123940.78, flops:96.53, batch-reuse:1
@ 1508 train 5.8392 , allloss: 5.8401, dt: 1041.12ms, fracRes: 0.7747, norm(attn): 0.1162, norm(output): 0.8750, norm(x): 0.1926, norm(y): 0.9974, norm:0.4767, tok/sec: 125895.21, flops:98.05, batch-reuse:1
@ 1509 train 5.8158 , allloss: 5.8166, dt: 1057.47ms, fracRes: 0.7713, norm(attn): 0.1187, norm(output): 0.8750, norm(x): 0.1970, norm(y): 0.9975, norm:0.4928, tok/sec: 123948.83, flops:96.53, batch-reuse:1
@ 1510 train 5.8621 , allloss: 5.8630, dt: 1051.92ms, fracRes: 0.7771, norm(attn): 0.1162, norm(output): 0.8789, norm(x): 0.1910, norm(y): 0.9973, norm:0.4768, tok/sec: 124602.86, flops:97.04, batch-reuse:1
@ 1511 train 5.8784 , allloss: 5.8793, dt: 1064.55ms, fracRes: 0.7769, norm(attn): 0.1118, norm(output): 0.8828, norm(x): 0.1922, norm(y): 0.9973, norm:0.6189, tok/sec: 123124.66, flops:95.89, batch-reuse:1
@ 1512 train 5.8891 , allloss: 5.8901, dt: 1051.74ms, fracRes: 0.7781, norm(attn): 0.1128, norm(output): 0.8984, norm(x): 0.1919, norm(y): 0.9972, norm:0.5939, tok/sec: 124623.68, flops:97.06, batch-reuse:1
@ 1513 train 5.8224 , allloss: 5.8236, dt: 1064.56ms, fracRes: 0.7796, norm(attn): 0.1143, norm(output): 0.8828, norm(x): 0.1881, norm(y): 0.9973, norm:0.5608, tok/sec: 123123.18, flops:95.89, batch-reuse:1
@ 1514 train 5.9570 , allloss: 5.9579, dt: 1045.71ms, fracRes: 0.7809, norm(attn): 0.1133, norm(output): 0.8789, norm(x): 0.1856, norm(y): 0.9972, norm:0.6302, tok/sec: 125342.52, flops:97.62, batch-reuse:1
@ 1515 train 5.8381 , allloss: 5.8389, dt: 1061.54ms, fracRes: 0.7774, norm(attn): 0.1128, norm(output): 0.8828, norm(x): 0.1902, norm(y): 0.9973, norm:0.6081, tok/sec: 123473.04, flops:96.16, batch-reuse:1
@ 1516 train 5.7372 , allloss: 5.7380, dt: 1044.42ms, fracRes: 0.7738, norm(attn): 0.1187, norm(output): 0.8906, norm(x): 0.1950, norm(y): 0.9974, norm:0.5989, tok/sec: 125497.38, flops:97.74, batch-reuse:1
@ 1517 train 5.7926 , allloss: 5.7935, dt: 1051.60ms, fracRes: 0.7778, norm(attn): 0.1167, norm(output): 0.8750, norm(x): 0.1910, norm(y): 0.9973, norm:0.6613, tok/sec: 124640.83, flops:97.07, batch-reuse:1
@ 1518 train 5.7892 , allloss: 5.7902, dt: 1046.69ms, fracRes: 0.7743, norm(attn): 0.1167, norm(output): 0.8828, norm(x): 0.1953, norm(y): 0.9974, norm:0.5682, tok/sec: 125225.81, flops:97.53, batch-reuse:1
@ 1519 train 5.7859 , allloss: 5.7869, dt: 1047.66ms, fracRes: 0.7782, norm(attn): 0.1133, norm(output): 0.8906, norm(x): 0.1924, norm(y): 0.9973, norm:0.5079, tok/sec: 125109.33, flops:97.44, batch-reuse:1
@ 1520 train 5.8034 , allloss: 5.8043, dt: 1062.59ms, fracRes: 0.7789, norm(attn): 0.1143, norm(output): 0.8828, norm(x): 0.1898, norm(y): 0.9973, norm:0.4919, tok/sec: 123351.23, flops:96.07, batch-reuse:1
@ 1521 train 5.7946 , allloss: 5.7956, dt: 1059.26ms, fracRes: 0.7785, norm(attn): 0.1162, norm(output): 0.8828, norm(x): 0.1902, norm(y): 0.9973, norm:0.6673, tok/sec: 123739.06, flops:96.37, batch-reuse:1
@ 1522 train 5.8130 , allloss: 5.8138, dt: 1054.01ms, fracRes: 0.7766, norm(attn): 0.1152, norm(output): 0.8828, norm(x): 0.1916, norm(y): 0.9973, norm:0.6706, tok/sec: 124355.62, flops:96.85, batch-reuse:1
@ 1523 train 5.8271 , allloss: 5.8280, dt: 1058.26ms, fracRes: 0.7770, norm(attn): 0.1113, norm(output): 0.8828, norm(x): 0.1924, norm(y): 0.9972, norm:0.5839, tok/sec: 123855.92, flops:96.46, batch-reuse:1
@ 1524 train 5.7814 , allloss: 5.7823, dt: 1051.06ms, fracRes: 0.7766, norm(attn): 0.1123, norm(output): 0.8906, norm(x): 0.1923, norm(y): 0.9972, norm:0.6336, tok/sec: 124704.59, flops:97.12, batch-reuse:1
@ 1525 train 5.7635 , allloss: 5.7644, dt: 1284.03ms, fracRes: 0.7732, norm(attn): 0.1162, norm(output): 0.8906, norm(x): 0.1945, norm(y): 0.9973, norm:0.5266, tok/sec: 102078.22, flops:79.50, batch-reuse:1
@ 1526 train 5.8389 , allloss: 5.8398, dt: 1056.96ms, fracRes: 0.7774, norm(attn): 0.1152, norm(output): 0.8867, norm(x): 0.1914, norm(y): 0.9972, norm:0.5367, tok/sec: 124008.88, flops:96.58, batch-reuse:1
@ 1527 train 5.7783 , allloss: 5.7792, dt: 1053.24ms, fracRes: 0.7752, norm(attn): 0.1187, norm(output): 0.8867, norm(x): 0.1963, norm(y): 0.9973, norm:0.5478, tok/sec: 124447.03, flops:96.92, batch-reuse:1
@ 1528 train 5.7989 , allloss: 5.7998, dt: 1047.12ms, fracRes: 0.7779, norm(attn): 0.1182, norm(output): 0.8750, norm(x): 0.1925, norm(y): 0.9972, norm:0.4891, tok/sec: 125174.37, flops:97.49, batch-reuse:1
@ 1529 train 5.7425 , allloss: 5.7434, dt: 1058.31ms, fracRes: 0.7761, norm(attn): 0.1162, norm(output): 0.8828, norm(x): 0.1945, norm(y): 0.9972, norm:0.6080, tok/sec: 123850.40, flops:96.46, batch-reuse:1
@ 1530 train 5.7743 , allloss: 5.7752, dt: 1057.19ms, fracRes: 0.7795, norm(attn): 0.1123, norm(output): 0.8750, norm(x): 0.1906, norm(y): 0.9972, norm:0.5128, tok/sec: 123981.23, flops:96.56, batch-reuse:1
@ 1531 train 5.6770 , allloss: 5.6778, dt: 1055.12ms, fracRes: 0.7739, norm(attn): 0.1162, norm(output): 0.8945, norm(x): 0.1980, norm(y): 0.9973, norm:0.5438, tok/sec: 124224.85, flops:96.75, batch-reuse:1
@ 1532 train 5.7533 , allloss: 5.7541, dt: 1047.38ms, fracRes: 0.7706, norm(attn): 0.1162, norm(output): 0.8867, norm(x): 0.2002, norm(y): 0.9973, norm:0.5107, tok/sec: 125142.97, flops:97.46, batch-reuse:1
@ 1533 train 5.7156 , allloss: 5.7164, dt: 1045.49ms, fracRes: 0.7718, norm(attn): 0.1187, norm(output): 0.8828, norm(x): 0.1986, norm(y): 0.9973, norm:0.6316, tok/sec: 125368.62, flops:97.64, batch-reuse:1
@ 1534 train 5.7588 , allloss: 5.7595, dt: 1048.17ms, fracRes: 0.7739, norm(attn): 0.1177, norm(output): 0.8867, norm(x): 0.1952, norm(y): 0.9973, norm:0.5475, tok/sec: 125047.87, flops:97.39, batch-reuse:1
@ 1535 train 5.7748 , allloss: 5.7756, dt: 1052.85ms, fracRes: 0.7743, norm(attn): 0.1167, norm(output): 0.8828, norm(x): 0.1946, norm(y): 0.9972, norm:0.5236, tok/sec: 124492.48, flops:96.96, batch-reuse:1
@ 1536 train 5.7481 , allloss: 5.7490, dt: 1051.81ms, fracRes: 0.7694, norm(attn): 0.1182, norm(output): 0.9062, norm(x): 0.2016, norm(y): 0.9973, norm:0.7979, tok/sec: 124615.09, flops:97.05, batch-reuse:1
@ 1537 train 5.7468 , allloss: 5.7475, dt: 1071.34ms, fracRes: 0.7698, norm(attn): 0.1206, norm(output): 0.8828, norm(x): 0.2003, norm(y): 0.9973, norm:1.1227, tok/sec: 122344.41, flops:95.28, batch-reuse:1
@ 1538 train 5.6801 , allloss: 5.6810, dt: 1054.42ms, fracRes: 0.7735, norm(attn): 0.1187, norm(output): 0.8789, norm(x): 0.1952, norm(y): 0.9972, norm:0.7190, tok/sec: 124307.23, flops:96.81, batch-reuse:1
@ 1539 train 5.7614 , allloss: 5.7622, dt: 1065.63ms, fracRes: 0.7763, norm(attn): 0.1167, norm(output): 0.8789, norm(x): 0.1917, norm(y): 0.9972, norm:0.6327, tok/sec: 122999.88, flops:95.79, batch-reuse:1
@ 1540 train 5.7311 , allloss: 5.7319, dt: 1062.77ms, fracRes: 0.7738, norm(attn): 0.1182, norm(output): 0.8867, norm(x): 0.1954, norm(y): 0.9973, norm:0.8194, tok/sec: 123330.22, flops:96.05, batch-reuse:1
@ 1541 train 5.7122 , allloss: 5.7131, dt: 1058.88ms, fracRes: 0.7757, norm(attn): 0.1177, norm(output): 0.8867, norm(x): 0.1936, norm(y): 0.9973, norm:0.6021, tok/sec: 123783.30, flops:96.40, batch-reuse:1
@ 1542 train 5.7622 , allloss: 5.7632, dt: 1067.76ms, fracRes: 0.7775, norm(attn): 0.1167, norm(output): 0.8828, norm(x): 0.1916, norm(y): 0.9972, norm:0.5712, tok/sec: 122754.37, flops:95.60, batch-reuse:1
@ 1543 train 6.0550 , allloss: 6.0566, dt: 1062.48ms, fracRes: 0.7941, norm(attn): 0.1138, norm(output): 0.8789, norm(x): 0.1754, norm(y): 0.9968, norm:0.9645, tok/sec: 123363.79, flops:96.08, batch-reuse:1
@ 1544 train 5.6612 , allloss: 5.6620, dt: 1051.77ms, fracRes: 0.7749, norm(attn): 0.1172, norm(output): 0.9023, norm(x): 0.1953, norm(y): 0.9973, norm:1.0242, tok/sec: 124619.84, flops:97.05, batch-reuse:1
@ 1545 train 5.7548 , allloss: 5.7557, dt: 1063.08ms, fracRes: 0.7764, norm(attn): 0.1177, norm(output): 0.9023, norm(x): 0.1948, norm(y): 0.9971, norm:1.0955, tok/sec: 123294.32, flops:96.02, batch-reuse:1
@ 1546 train 6.1664 , allloss: 6.1674, dt: 1063.31ms, fracRes: 0.7762, norm(attn): 0.1182, norm(output): 0.8984, norm(x): 0.1917, norm(y): 0.9971, norm:0.8465, tok/sec: 123267.86, flops:96.00, batch-reuse:1
@ 1547 train 5.7974 , allloss: 5.7988, dt: 1050.69ms, fracRes: 0.7756, norm(attn): 0.1216, norm(output): 0.9023, norm(x): 0.1914, norm(y): 0.9972, norm:1.1589, tok/sec: 124748.14, flops:97.15, batch-reuse:1
@ 1548 train 5.8977 , allloss: 5.8988, dt: 1058.40ms, fracRes: 0.7769, norm(attn): 0.1211, norm(output): 0.8984, norm(x): 0.1882, norm(y): 0.9972, norm:0.8426, tok/sec: 123839.82, flops:96.45, batch-reuse:1
@ 1549 train 5.8120 , allloss: 5.8131, dt: 1054.89ms, fracRes: 0.7797, norm(attn): 0.1196, norm(output): 0.9062, norm(x): 0.1859, norm(y): 0.9971, norm:0.7443, tok/sec: 124251.27, flops:96.77, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0003,     0.0002,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863,  -7.0938,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972,  -7.2500,  -7.0625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726,  -7.9062,  -7.9062,  -7.4688,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -6.5312,  -5.1250,  -5.0312,  -6.1562,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -5.8750,  -4.7188,  -4.8125,  -5.6875,  -5.4375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,  -9.0625,  -8.9375,  -8.8750,  -8.7500,  -8.0000, -10.4375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -10.5000, -10.2500, -10.1875, -11.0625, -10.1250, -13.3750, -11.3125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -5.9688,  -6.1875,  -6.3750,  -5.2500,  -4.9688,  -6.1875,  -6.8750,  -4.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -7.5625,  -7.0938,  -7.0625,  -6.7188,  -6.2812,  -7.5000,  -8.3750,  -6.2812,  -5.9688,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -5.9062,  -6.3438,  -7.0000,  -6.2188,  -5.1562,  -6.1562,  -6.3438,  -4.9688,  -5.0312,  -4.4375,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -7.7188,  -8.0625,  -7.9062,  -7.2812,  -6.1875,  -8.7500,  -9.1250,  -6.9688,  -6.6562,  -6.2812,  -7.9375,     -inf,     -inf,     -inf],
          [  5.1299,  -7.5312,  -6.8125,  -7.1875,  -7.2812,  -7.0000,  -9.7500,  -8.5000,  -7.2812,  -5.7812,  -7.3750,  -7.4062,  -7.4375,     -inf,     -inf],
          [  5.2781,  -5.1875,  -5.7188,  -6.3750,  -4.9375,  -4.8438,  -6.3438,  -6.4688,  -4.9062,  -4.4062,  -5.0938,  -4.8125,  -5.1875,  -4.2188,     -inf],
          [  5.4161,  -9.5625,  -8.7500,  -9.1875,  -8.8125,  -7.7500, -11.3125, -10.6875,  -7.8750,  -7.9062,  -8.2500,  -8.8125,  -8.6875,  -6.9062,  -9.8750]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9993],
        [0.9987],
        [0.9980],
        [0.9967],
        [0.9967],
        [0.9993],
        [0.9990],
        [0.9993],
        [0.9993],
        [0.9997],
        [1.0000],
        [0.9997],
        [0.9997],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0004,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0004,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0001,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863,  -8.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972,  -8.3125,  -6.0625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726,  -8.5625,  -5.3750,  -6.4688,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -6.6250,  -4.5000,  -4.9062,  -8.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -6.2500,  -4.2500,  -4.4062,  -8.3750,  -7.9062,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,  -9.6875,  -6.6562,  -7.8750, -11.0000, -10.1250, -10.3125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589,  -9.2500,  -6.3750,  -8.0000, -10.7500, -10.1250, -10.3125,  -9.6875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -6.1250,  -4.5312,  -4.8438,  -8.0625,  -7.2812,  -6.9688,  -7.0938,  -5.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -8.0625,  -6.5000,  -6.4688,  -8.5000,  -8.1875,  -8.0000,  -8.5625,  -6.6875,  -7.4375,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -7.4688,  -5.0938,  -5.5625, -11.1250,  -9.8750,  -9.5000,  -8.7500,  -8.3125,  -9.3125,  -8.6875,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -7.5625,  -5.7812,  -7.0625,  -7.8750,  -7.0312,  -7.5000,  -7.7188,  -5.9062,  -6.1250,  -6.0312,  -5.0312,     -inf,     -inf,     -inf],
          [  5.1299,  -5.5938,  -3.7812,  -4.7188,  -7.4688,  -6.6250,  -6.6875,  -6.1562,  -5.8438,  -5.4062,  -5.5312,  -3.4062,  -3.7500,     -inf,     -inf],
          [  5.2781,  -6.0938,  -4.3438,  -4.6562,  -8.0625,  -7.4375,  -7.0000,  -6.7500,  -5.9375,  -6.4062,  -5.9375,  -4.2812,  -3.8281,  -4.4062,     -inf],
          [  5.4161, -10.0625,  -7.3438,  -8.6875, -10.1250,  -9.7500, -10.0000,  -9.6250,  -7.9375,  -8.0625,  -8.6250,  -5.6250,  -5.1250,  -5.9375,  -9.3125]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9990],
        [0.9948],
        [0.9987],
        [0.9984],
        [1.0000],
        [1.0000],
        [0.9993],
        [0.9997],
        [1.0000],
        [0.9997],
        [0.9987],
        [0.9993],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0002,     0.0003,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0001,     0.0000,     0.0002,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -5.2500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -5.7188, -7.0625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -8.1250, -8.1875, -8.3125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189, -6.0938, -6.1875, -5.8438, -9.5000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -4.8750, -5.1250, -4.6875, -7.1562, -5.5625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918, -7.3438, -7.2500, -6.7500, -9.1875, -7.5000, -9.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, -5.4062, -6.3750, -6.1875, -6.9688, -5.9375, -7.3438, -6.4375,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -4.9375, -5.2500, -4.8750, -7.9375, -5.8438, -7.0000, -6.0938, -5.1562,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052, -4.9375, -5.0625, -5.1250, -6.3750, -5.0625, -7.0312, -6.5938, -3.7969, -4.8438,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, -5.5625, -5.0938, -4.8125, -7.5625, -5.4375, -7.6562, -6.6250, -4.1875, -3.5000, -5.6875,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -5.2500, -5.8125, -5.8750, -7.3125, -5.6562, -7.5312, -6.5938, -3.6406, -5.2188, -5.9688, -5.1250,    -inf,    -inf,    -inf],
          [ 5.1299, -3.9375, -5.5625, -5.1875, -5.6250, -4.5625, -5.3750, -4.8125, -4.0000, -5.0312, -4.4688, -4.4375, -4.9062,    -inf,    -inf],
          [ 5.2781, -5.2188, -4.8750, -4.6250, -7.3125, -5.1250, -6.9062, -6.5938, -4.5312, -3.5469, -5.4062, -3.6250, -4.8438, -3.3750,    -inf],
          [ 5.4161, -6.1562, -6.4688, -6.9375, -8.2500, -6.6562, -8.6875, -7.6250, -5.1562, -5.9062, -7.0000, -6.1250, -6.1562, -3.8438, -7.0625]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9772],
        [0.9896],
        [0.9948],
        [0.9990],
        [0.9971],
        [0.9984],
        [0.9977],
        [0.9980],
        [0.9980],
        [0.9984],
        [0.9990],
        [0.9974],
        [0.9984],
        [0.9997]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0026,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0077,     0.0139,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0061,     0.0072,     0.0061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0109,     0.6523,     0.0226,     0.0245,     0.2910,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0383,     0.1768,     0.0087,     0.0162,     0.0505,     0.7070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3906,     0.0723,     0.0183,     0.0254,     0.0874,     0.2949,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.1641,     0.0026,     0.0056,     0.2324,     0.4590,     0.1328,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0074,     0.0175,     0.0017,     0.0016,     0.2227,     0.7344,     0.0150,     0.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0718,     0.0093,     0.0127,     0.0090,     0.0232,     0.0486,     0.0040,     0.0006,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0240,     0.0825,     0.0075,     0.0066,     0.1729,     0.6328,     0.0579,     0.0002,     0.0007,     0.0001,     0.0143,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0014,     0.0012,     0.0014,     0.0006,     0.0006,     0.0013,     0.0018,     0.0010,     0.0034,     0.0010,     0.0023,     0.0000,     0.0000,     0.0000],
        [    0.4180,     0.0280,     0.0096,     0.0143,     0.0942,     0.3379,     0.0684,     0.0019,     0.0031,     0.0021,     0.0150,     0.0006,     0.0073,     0.0000,     0.0000],
        [    0.0136,     0.0143,     0.0014,     0.0013,     0.2227,     0.7188,     0.0127,     0.0000,     0.0007,     0.0000,     0.0140,     0.0000,     0.0003,     0.0011,     0.0000],
        [    0.9844,     0.0020,     0.0018,     0.0021,     0.0003,     0.0006,     0.0024,     0.0010,     0.0002,     0.0017,     0.0002,     0.0012,     0.0021,     0.0002,     0.0016]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -4.5625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -2.6406, -2.0469,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -2.3281, -2.1562, -2.3125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  7.3125,  3.9531,  4.0312,  6.5000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  5.0938,  2.0938,  2.7188,  3.8594,  6.5000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  2.2031,  0.8281,  1.1562,  2.3906,  3.6094,  2.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  7.8438,  3.7031,  4.4688,  8.1875,  8.8750,  7.6250,  1.2031,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  5.2812,  2.9219,  2.8438,  7.8125,  9.0000,  5.1250, -0.6172,  2.0625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  2.1562,  0.1211,  0.4297,  0.0830,  1.0312,  1.7656, -0.7188, -2.5625, -1.2969,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  6.0312,  3.6250,  3.4844,  6.7500,  8.0625,  5.6562,  0.1602,  1.2031, -1.0156,  4.2812,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -1.5625, -1.7578, -1.5859, -2.3750, -2.4844, -1.6875, -1.3203, -1.8984, -0.7031, -1.8984, -1.0703,    -inf,    -inf,    -inf],
          [ 5.1299,  2.4219,  1.3516,  1.7500,  3.6406,  4.9062,  3.3125, -0.2617,  0.2109, -0.1846,  1.7969, -1.3594,  1.0781,    -inf,    -inf],
          [ 5.2781,  5.3438,  2.9844,  2.9062,  8.0625,  9.2500,  5.2188, -0.6094,  2.2500, -1.0703,  5.3125, -2.4688,  1.5469,  2.7812,    -inf],
          [ 5.4161, -0.7930, -0.8867, -0.7539, -2.8594, -2.0625, -0.5938, -1.4609, -3.2500, -0.9531, -3.3281, -1.2969, -0.7578, -3.2031, -1.0000]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8720],
        [0.8971],
        [0.8802],
        [0.0136],
        [0.0191],
        [0.4641],
        [0.2068],
        [0.0031],
        [0.7676],
        [0.0034],
        [0.9029],
        [0.1464],
        [0.0049],
        [0.8884]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7812,     0.2178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0248,     0.0142,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9531,     0.0035,     0.0017,     0.0413,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0002,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0012,     0.0010,     0.0008,     0.2236,     0.7734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1475,     0.0154,     0.0021,     0.0747,     0.0041,     0.3379,     0.4180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5078,     0.0079,     0.0011,     0.1318,     0.0001,     0.0129,     0.3379,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.3281,     0.1504,     0.0000,     0.0000,     0.5234,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0021,     0.0011,     0.0164,     0.0014,     0.0048,     0.0151,     0.0004,     0.0006,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0991,     0.3164,     0.0000,     0.0000,     0.1396,     0.0000,     0.4453,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0031,     0.0015,     0.0183,     0.0017,     0.0059,     0.0167,     0.0005,     0.0005,     0.0021,     0.0016,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.5742,     0.0063,     0.0009,     0.1089,     0.0002,     0.0236,     0.2812,     0.0001,     0.0000,     0.0012,     0.0004,     0.0000,     0.0028,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.1069,     0.0500,     0.0000,     0.0000,     0.1738,     0.0000,     0.4336,     0.0000,     0.0000,     0.2363,     0.0000],
        [    0.7773,     0.0086,     0.0045,     0.0200,     0.0059,     0.1021,     0.0479,     0.0013,     0.0041,     0.0034,     0.0089,     0.0002,     0.0073,     0.0045,     0.0046]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[     0.0000,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     1.3863,      0.1021,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.1972,     -1.4531,     -2.0156,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     2.7726,     -2.8438,     -3.5312,     -0.3750,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.2189,      7.7188,      7.9062,      5.5312,     16.6250,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.5835,      5.4375,      5.2188,      4.9688,     10.6875,     11.8750,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     3.8918,      1.6328,     -0.3750,      3.2188,      0.2969,      4.7188,      4.9375,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.1589,     -0.0027,     -2.0156,      2.8125,     -4.0000,      0.4805,      3.7500,     -3.7344,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.3944,      7.2812,      6.5938,      4.6250,     16.1250,     15.3750,      4.0938,      2.6094,     16.6250,        -inf,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.6052,     -1.5391,     -2.1719,      0.5273,     -1.9297,     -0.6953,      0.4492,     -3.1250,     -2.7188,     -1.4922,        -inf,        -inf,        -inf,        -inf,        -inf],
          [     4.7958,      8.8750,      7.5938,      6.0312,     17.1250,     18.2500,      6.2188,      3.1719,     17.5000,      3.7812,     18.6250,        -inf,        -inf,        -inf,        -inf],
          [     4.9698,     -0.7578,     -1.5000,      1.0234,     -1.3438,     -0.1118,      0.9336,     -2.6875,     -2.5938,     -1.1406,     -1.4062,     -4.4688,        -inf,        -inf,        -inf],
          [     5.1299,      0.6172,     -1.3750,      3.4688,     -2.7656,      1.9375,      4.4062,     -3.8438,     -4.2188,     -1.0703,     -2.2344,     -7.9062,     -0.1855,        -inf,        -inf],
          [     5.2781,      7.4688,      6.9062,      4.7812,     16.5000,     15.7500,      4.1875,      2.7500,     17.0000,      2.9375,     17.8750,      1.3594,      4.7500,     17.2500,        -inf],
          [     5.4161,      0.8984,      0.2656,      1.7500,      0.5234,      3.3750,      2.6250,     -0.9688,      0.1680,     -0.0243,      0.9336,     -2.6875,      0.7422,      0.2441,      0.2832]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.5410],
        [0.7153],
        [0.6749],
        [0.3696],
        [0.1887],
        [0.3722],
        [0.5199],
        [0.2593],
        [0.6097],
        [0.2606],
        [0.6452],
        [0.3316],
        [0.2565],
        [0.5598]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1152 the:0.0850,:0.0640 and:0.0977om:0.0986,:0.2617 a:0.0732vern:0.0679)
vern
------
		( the:0.0850,:0.0640 and:0.0977om:0.0986,:0.2617 a:0.0732vern:0.0679acular:0.1992)
acular, and the first, and the first, and the first, and
@ 1550 train 5.7760 , allloss: 5.7769, dt: 1316.63ms, fracRes: 0.7784, norm(attn): 0.1157, norm(output): 0.9180, norm(x): 0.1889, norm(y): 0.9971, norm:0.6788, tok/sec: 99551.23, flops:77.53, batch-reuse:1
@ 1551 train 5.7579 , allloss: 5.7590, dt: 1064.74ms, fracRes: 0.7795, norm(attn): 0.1147, norm(output): 0.9258, norm(x): 0.1885, norm(y): 0.9970, norm:0.7231, tok/sec: 123102.06, flops:95.87, batch-reuse:1
@ 1552 train 5.6443 , allloss: 5.6451, dt: 1066.20ms, fracRes: 0.7773, norm(attn): 0.1162, norm(output): 0.9180, norm(x): 0.1908, norm(y): 0.9972, norm:0.6372, tok/sec: 122933.51, flops:95.74, batch-reuse:1
@ 1553 train 5.7401 , allloss: 5.7409, dt: 1052.99ms, fracRes: 0.7789, norm(attn): 0.1157, norm(output): 0.9102, norm(x): 0.1884, norm(y): 0.9971, norm:0.8649, tok/sec: 124475.54, flops:96.94, batch-reuse:1
@ 1554 train 5.7292 , allloss: 5.7301, dt: 1045.46ms, fracRes: 0.7766, norm(attn): 0.1187, norm(output): 0.9219, norm(x): 0.1898, norm(y): 0.9971, norm:0.6424, tok/sec: 125372.19, flops:97.64, batch-reuse:1
@ 1555 train 5.7465 , allloss: 5.7473, dt: 1064.15ms, fracRes: 0.7763, norm(attn): 0.1182, norm(output): 0.9219, norm(x): 0.1919, norm(y): 0.9971, norm:0.5006, tok/sec: 123170.82, flops:95.93, batch-reuse:1
@ 1556 train 5.7986 , allloss: 5.7995, dt: 1054.26ms, fracRes: 0.7745, norm(attn): 0.1187, norm(output): 0.9258, norm(x): 0.1966, norm(y): 0.9972, norm:0.5116, tok/sec: 124325.53, flops:96.83, batch-reuse:1
@ 1557 train 5.7395 , allloss: 5.7404, dt: 1046.57ms, fracRes: 0.7751, norm(attn): 0.1187, norm(output): 0.9258, norm(x): 0.1967, norm(y): 0.9972, norm:0.5548, tok/sec: 125239.07, flops:97.54, batch-reuse:1
@ 1558 train 5.6734 , allloss: 5.6745, dt: 1056.73ms, fracRes: 0.7772, norm(attn): 0.1167, norm(output): 0.9219, norm(x): 0.1960, norm(y): 0.9971, norm:0.5762, tok/sec: 124035.63, flops:96.60, batch-reuse:1
@ 1559 train 5.7272 , allloss: 5.7281, dt: 1051.93ms, fracRes: 0.7773, norm(attn): 0.1191, norm(output): 0.9258, norm(x): 0.1953, norm(y): 0.9971, norm:0.5629, tok/sec: 124601.14, flops:97.04, batch-reuse:1
@ 1560 train 5.7684 , allloss: 5.7691, dt: 1051.60ms, fracRes: 0.7758, norm(attn): 0.1172, norm(output): 0.9219, norm(x): 0.1949, norm(y): 0.9971, norm:0.5599, tok/sec: 124640.55, flops:97.07, batch-reuse:1
@ 1561 train 5.7525 , allloss: 5.7533, dt: 1048.22ms, fracRes: 0.7755, norm(attn): 0.1172, norm(output): 0.9141, norm(x): 0.1943, norm(y): 0.9970, norm:0.5474, tok/sec: 125042.24, flops:97.38, batch-reuse:1
@ 1562 train 5.7261 , allloss: 5.7269, dt: 1052.64ms, fracRes: 0.7748, norm(attn): 0.1201, norm(output): 0.9219, norm(x): 0.1951, norm(y): 0.9970, norm:0.5666, tok/sec: 124517.18, flops:96.97, batch-reuse:1
@ 1563 train 5.6919 , allloss: 5.6926, dt: 1066.27ms, fracRes: 0.7763, norm(attn): 0.1182, norm(output): 0.9062, norm(x): 0.1941, norm(y): 0.9970, norm:0.4776, tok/sec: 122925.15, flops:95.73, batch-reuse:1
@ 1564 train 5.7310 , allloss: 5.7318, dt: 1052.57ms, fracRes: 0.7764, norm(attn): 0.1182, norm(output): 0.9102, norm(x): 0.1942, norm(y): 0.9970, norm:0.4693, tok/sec: 124525.84, flops:96.98, batch-reuse:1
@ 1565 train 5.7523 , allloss: 5.7531, dt: 1059.71ms, fracRes: 0.7791, norm(attn): 0.1167, norm(output): 0.9219, norm(x): 0.1913, norm(y): 0.9969, norm:0.4922, tok/sec: 123686.11, flops:96.33, batch-reuse:1
@ 1566 train 5.7406 , allloss: 5.7415, dt: 1060.03ms, fracRes: 0.7821, norm(attn): 0.1162, norm(output): 0.9102, norm(x): 0.1857, norm(y): 0.9969, norm:0.4572, tok/sec: 123649.69, flops:96.30, batch-reuse:1
@ 1567 train 5.6985 , allloss: 5.6993, dt: 1049.39ms, fracRes: 0.7770, norm(attn): 0.1162, norm(output): 0.9141, norm(x): 0.1907, norm(y): 0.9970, norm:0.5485, tok/sec: 124902.63, flops:97.27, batch-reuse:1
@ 1568 train 5.6812 , allloss: 5.6819, dt: 1059.10ms, fracRes: 0.7767, norm(attn): 0.1167, norm(output): 0.9102, norm(x): 0.1901, norm(y): 0.9970, norm:0.6323, tok/sec: 123758.45, flops:96.38, batch-reuse:1
@ 1569 train 5.6005 , allloss: 5.6013, dt: 1061.55ms, fracRes: 0.7764, norm(attn): 0.1162, norm(output): 0.9219, norm(x): 0.1920, norm(y): 0.9970, norm:0.6225, tok/sec: 123472.21, flops:96.16, batch-reuse:1
@ 1570 train 5.6774 , allloss: 5.6783, dt: 1059.05ms, fracRes: 0.7767, norm(attn): 0.1162, norm(output): 0.9141, norm(x): 0.1923, norm(y): 0.9970, norm:0.4449, tok/sec: 123763.38, flops:96.39, batch-reuse:1
@ 1571 train 5.7071 , allloss: 5.7081, dt: 1049.94ms, fracRes: 0.7766, norm(attn): 0.1172, norm(output): 0.9258, norm(x): 0.1912, norm(y): 0.9969, norm:0.5429, tok/sec: 124838.19, flops:97.22, batch-reuse:1
@ 1572 train 5.6842 , allloss: 5.6852, dt: 1057.15ms, fracRes: 0.7790, norm(attn): 0.1187, norm(output): 0.9102, norm(x): 0.1894, norm(y): 0.9969, norm:1.7891, tok/sec: 123985.73, flops:96.56, batch-reuse:1
@ 1573 train 5.7498 , allloss: 5.7509, dt: 1052.52ms, fracRes: 0.7807, norm(attn): 0.1187, norm(output): 0.9062, norm(x): 0.1882, norm(y): 0.9968, norm:0.5900, tok/sec: 124531.88, flops:96.99, batch-reuse:1
@ 1574 train 5.7023 , allloss: 5.7031, dt: 1057.85ms, fracRes: 0.7779, norm(attn): 0.1172, norm(output): 0.9062, norm(x): 0.1903, norm(y): 0.9969, norm:0.6758, tok/sec: 123904.30, flops:96.50, batch-reuse:1
@ 1575 train 5.6990 , allloss: 5.7000, dt: 1053.47ms, fracRes: 0.7783, norm(attn): 0.1152, norm(output): 0.9141, norm(x): 0.1925, norm(y): 0.9968, norm:0.6595, tok/sec: 124419.09, flops:96.90, batch-reuse:1
@ 1576 train 5.7157 , allloss: 5.7181, dt: 1066.52ms, fracRes: 0.7785, norm(attn): 0.1172, norm(output): 0.9141, norm(x): 0.1945, norm(y): 0.9968, norm:0.5227, tok/sec: 122897.01, flops:95.71, batch-reuse:1
@ 1577 train 5.5889 , allloss: 5.5898, dt: 1053.64ms, fracRes: 0.7730, norm(attn): 0.1201, norm(output): 0.9258, norm(x): 0.1991, norm(y): 0.9969, norm:0.6096, tok/sec: 124399.58, flops:96.88, batch-reuse:1
@ 1578 train 5.6992 , allloss: 5.7001, dt: 1057.83ms, fracRes: 0.7800, norm(attn): 0.1162, norm(output): 0.9141, norm(x): 0.1874, norm(y): 0.9968, norm:0.8141, tok/sec: 123906.76, flops:96.50, batch-reuse:1
@ 1579 train 5.5811 , allloss: 5.5821, dt: 1049.52ms, fracRes: 0.7742, norm(attn): 0.1191, norm(output): 0.9219, norm(x): 0.1930, norm(y): 0.9969, norm:0.8891, tok/sec: 124888.10, flops:97.26, batch-reuse:1
@ 1580 train 5.6231 , allloss: 5.6240, dt: 1065.84ms, fracRes: 0.7769, norm(attn): 0.1201, norm(output): 0.9219, norm(x): 0.1916, norm(y): 0.9969, norm:0.7555, tok/sec: 122975.42, flops:95.77, batch-reuse:1
@ 1581 train 5.5640 , allloss: 5.5651, dt: 1059.69ms, fracRes: 0.7825, norm(attn): 0.1187, norm(output): 0.9141, norm(x): 0.1875, norm(y): 0.9968, norm:0.7132, tok/sec: 123688.50, flops:96.33, batch-reuse:1
@ 1582 train 5.6086 , allloss: 5.6096, dt: 1058.56ms, fracRes: 0.7765, norm(attn): 0.1187, norm(output): 0.9141, norm(x): 0.1940, norm(y): 0.9968, norm:0.5126, tok/sec: 123820.63, flops:96.43, batch-reuse:1
@ 1583 train 5.5786 , allloss: 5.5796, dt: 1062.27ms, fracRes: 0.7757, norm(attn): 0.1182, norm(output): 0.9141, norm(x): 0.1946, norm(y): 0.9968, norm:0.5263, tok/sec: 123388.99, flops:96.10, batch-reuse:1
@ 1584 train 5.6160 , allloss: 5.6169, dt: 1044.45ms, fracRes: 0.7721, norm(attn): 0.1172, norm(output): 0.9219, norm(x): 0.1984, norm(y): 0.9969, norm:0.5239, tok/sec: 125494.25, flops:97.74, batch-reuse:1
@ 1585 train 5.6240 , allloss: 5.6250, dt: 1047.90ms, fracRes: 0.7758, norm(attn): 0.1152, norm(output): 0.9141, norm(x): 0.1931, norm(y): 0.9967, norm:0.4868, tok/sec: 125080.56, flops:97.41, batch-reuse:1
@ 1586 train 5.6135 , allloss: 5.6144, dt: 1041.14ms, fracRes: 0.7761, norm(attn): 0.1167, norm(output): 0.9062, norm(x): 0.1922, norm(y): 0.9967, norm:0.5871, tok/sec: 125892.82, flops:98.05, batch-reuse:1
@ 1587 train 5.6394 , allloss: 5.6405, dt: 1055.55ms, fracRes: 0.7774, norm(attn): 0.1177, norm(output): 0.9062, norm(x): 0.1926, norm(y): 0.9966, norm:0.6263, tok/sec: 124173.86, flops:96.71, batch-reuse:1
@ 1588 train 5.6720 , allloss: 5.6731, dt: 1050.62ms, fracRes: 0.7795, norm(attn): 0.1177, norm(output): 0.8945, norm(x): 0.1904, norm(y): 0.9966, norm:0.4960, tok/sec: 124757.17, flops:97.16, batch-reuse:1
@ 1589 train 5.5998 , allloss: 5.6008, dt: 1050.92ms, fracRes: 0.7765, norm(attn): 0.1201, norm(output): 0.9023, norm(x): 0.1954, norm(y): 0.9967, norm:0.4647, tok/sec: 124721.22, flops:97.13, batch-reuse:1
@ 1590 train 5.6715 , allloss: 5.6725, dt: 1051.36ms, fracRes: 0.7733, norm(attn): 0.1196, norm(output): 0.9102, norm(x): 0.1998, norm(y): 0.9967, norm:0.6800, tok/sec: 124669.52, flops:97.09, batch-reuse:1
@ 1591 train 5.5714 , allloss: 5.5724, dt: 1068.48ms, fracRes: 0.7742, norm(attn): 0.1187, norm(output): 0.9102, norm(x): 0.1984, norm(y): 0.9967, norm:0.7623, tok/sec: 122671.48, flops:95.54, batch-reuse:1
@ 1592 train 5.6460 , allloss: 5.6469, dt: 1065.06ms, fracRes: 0.7719, norm(attn): 0.1191, norm(output): 0.9102, norm(x): 0.1991, norm(y): 0.9967, norm:0.9266, tok/sec: 123065.19, flops:95.84, batch-reuse:1
@ 1593 train 5.6502 , allloss: 5.6512, dt: 1067.11ms, fracRes: 0.7744, norm(attn): 0.1201, norm(output): 0.8984, norm(x): 0.1968, norm(y): 0.9967, norm:0.7902, tok/sec: 122828.39, flops:95.66, batch-reuse:1
@ 1594 train 5.5283 , allloss: 5.5292, dt: 1061.82ms, fracRes: 0.7753, norm(attn): 0.1182, norm(output): 0.9062, norm(x): 0.1956, norm(y): 0.9967, norm:0.6412, tok/sec: 123440.58, flops:96.14, batch-reuse:1
@ 1595 train 5.6743 , allloss: 5.6753, dt: 1062.85ms, fracRes: 0.7803, norm(attn): 0.1182, norm(output): 0.9062, norm(x): 0.1909, norm(y): 0.9965, norm:0.5911, tok/sec: 123321.48, flops:96.04, batch-reuse:1
@ 1596 train 5.5890 , allloss: 5.5898, dt: 1064.31ms, fracRes: 0.7751, norm(attn): 0.1196, norm(output): 0.9102, norm(x): 0.1948, norm(y): 0.9967, norm:0.5605, tok/sec: 123152.30, flops:95.91, batch-reuse:1
@ 1597 train 5.6402 , allloss: 5.6411, dt: 1063.13ms, fracRes: 0.7783, norm(attn): 0.1201, norm(output): 0.9102, norm(x): 0.1897, norm(y): 0.9966, norm:0.5996, tok/sec: 123288.49, flops:96.02, batch-reuse:1
@ 1598 train 5.6275 , allloss: 5.6285, dt: 1050.66ms, fracRes: 0.7795, norm(attn): 0.1177, norm(output): 0.9062, norm(x): 0.1876, norm(y): 0.9965, norm:0.5075, tok/sec: 124752.41, flops:97.16, batch-reuse:1
@ 1599 train 5.6835 , allloss: 5.6846, dt: 1057.53ms, fracRes: 0.7804, norm(attn): 0.1191, norm(output): 0.8984, norm(x): 0.1876, norm(y): 0.9965, norm:0.5630, tok/sec: 123941.59, flops:96.53, batch-reuse:1
@ 1600 train 5.5928 , allloss: 5.5938, dt: 1055.55ms, fracRes: 0.7796, norm(attn): 0.1201, norm(output): 0.9023, norm(x): 0.1894, norm(y): 0.9965, norm:0.4096, tok/sec: 124173.92, flops:96.71, batch-reuse:1
@ 1601 train 5.6870 , allloss: 5.6881, dt: 1052.37ms, fracRes: 0.7787, norm(attn): 0.1191, norm(output): 0.8906, norm(x): 0.1895, norm(y): 0.9965, norm:0.5398, tok/sec: 124549.60, flops:97.00, batch-reuse:1
@ 1602 train 5.5864 , allloss: 5.5872, dt: 1053.92ms, fracRes: 0.7761, norm(attn): 0.1196, norm(output): 0.9180, norm(x): 0.1921, norm(y): 0.9966, norm:0.4210, tok/sec: 124366.43, flops:96.86, batch-reuse:1
@ 1603 train 5.5512 , allloss: 5.5520, dt: 1044.33ms, fracRes: 0.7738, norm(attn): 0.1201, norm(output): 0.9141, norm(x): 0.1946, norm(y): 0.9967, norm:0.5021, tok/sec: 125507.86, flops:97.75, batch-reuse:1
@ 1604 train 5.5748 , allloss: 5.5757, dt: 1054.37ms, fracRes: 0.7779, norm(attn): 0.1216, norm(output): 0.9102, norm(x): 0.1910, norm(y): 0.9966, norm:0.5043, tok/sec: 124313.50, flops:96.82, batch-reuse:1
@ 1605 train 5.6195 , allloss: 5.6203, dt: 1059.68ms, fracRes: 0.7753, norm(attn): 0.1206, norm(output): 0.9141, norm(x): 0.1933, norm(y): 0.9966, norm:0.5399, tok/sec: 123690.09, flops:96.33, batch-reuse:1
@ 1606 train 5.6191 , allloss: 5.6199, dt: 1045.96ms, fracRes: 0.7747, norm(attn): 0.1206, norm(output): 0.9258, norm(x): 0.1953, norm(y): 0.9965, norm:0.7754, tok/sec: 125312.29, flops:97.59, batch-reuse:1
@ 1607 train 5.6377 , allloss: 5.6385, dt: 1060.42ms, fracRes: 0.7778, norm(attn): 0.1211, norm(output): 0.8984, norm(x): 0.1912, norm(y): 0.9965, norm:0.9603, tok/sec: 123603.32, flops:96.26, batch-reuse:1
@ 1608 train 5.6693 , allloss: 5.6703, dt: 1064.52ms, fracRes: 0.7780, norm(attn): 0.1177, norm(output): 0.9062, norm(x): 0.1917, norm(y): 0.9965, norm:0.9007, tok/sec: 123128.08, flops:95.89, batch-reuse:1
@ 1609 train 5.6269 , allloss: 5.6277, dt: 1046.88ms, fracRes: 0.7750, norm(attn): 0.1226, norm(output): 0.9180, norm(x): 0.1957, norm(y): 0.9966, norm:0.9978, tok/sec: 125202.16, flops:97.51, batch-reuse:1
@ 1610 train 5.5880 , allloss: 5.5889, dt: 1052.65ms, fracRes: 0.7748, norm(attn): 0.1221, norm(output): 0.9219, norm(x): 0.1948, norm(y): 0.9966, norm:0.6353, tok/sec: 124515.83, flops:96.97, batch-reuse:1
@ 1611 train 5.5405 , allloss: 5.5414, dt: 1049.46ms, fracRes: 0.7757, norm(attn): 0.1196, norm(output): 0.9219, norm(x): 0.1950, norm(y): 0.9965, norm:0.6095, tok/sec: 124894.18, flops:97.27, batch-reuse:1
@ 1612 train 5.6031 , allloss: 5.6039, dt: 1045.13ms, fracRes: 0.7765, norm(attn): 0.1201, norm(output): 0.9258, norm(x): 0.1955, norm(y): 0.9965, norm:0.5855, tok/sec: 125412.72, flops:97.67, batch-reuse:1
@ 1613 train 5.5837 , allloss: 5.5847, dt: 1069.39ms, fracRes: 0.7763, norm(attn): 0.1196, norm(output): 0.9219, norm(x): 0.1958, norm(y): 0.9965, norm:0.4915, tok/sec: 122567.36, flops:95.46, batch-reuse:1
@ 1614 train 5.6423 , allloss: 5.6432, dt: 1060.94ms, fracRes: 0.7787, norm(attn): 0.1201, norm(output): 0.9141, norm(x): 0.1912, norm(y): 0.9965, norm:0.5103, tok/sec: 123543.19, flops:96.22, batch-reuse:1
@ 1615 train 5.5975 , allloss: 5.5983, dt: 1048.59ms, fracRes: 0.7778, norm(attn): 0.1206, norm(output): 0.9219, norm(x): 0.1926, norm(y): 0.9964, norm:0.5498, tok/sec: 124998.37, flops:97.35, batch-reuse:1
@ 1616 train 5.6457 , allloss: 5.6467, dt: 1060.79ms, fracRes: 0.7771, norm(attn): 0.1216, norm(output): 0.9258, norm(x): 0.1942, norm(y): 0.9964, norm:0.5958, tok/sec: 123560.93, flops:96.23, batch-reuse:1
@ 1617 train 5.6025 , allloss: 5.6033, dt: 1044.21ms, fracRes: 0.7753, norm(attn): 0.1211, norm(output): 0.9219, norm(x): 0.1951, norm(y): 0.9964, norm:0.6315, tok/sec: 125522.42, flops:97.76, batch-reuse:1
@ 1618 train 5.5975 , allloss: 5.5984, dt: 1065.93ms, fracRes: 0.7720, norm(attn): 0.1235, norm(output): 0.9219, norm(x): 0.1989, norm(y): 0.9965, norm:0.5295, tok/sec: 122965.46, flops:95.77, batch-reuse:1
@ 1619 train 5.5162 , allloss: 5.5171, dt: 1050.76ms, fracRes: 0.7753, norm(attn): 0.1235, norm(output): 0.9141, norm(x): 0.1961, norm(y): 0.9964, norm:0.4648, tok/sec: 124740.75, flops:97.15, batch-reuse:1
@ 1620 train 5.5398 , allloss: 5.5407, dt: 1060.77ms, fracRes: 0.7764, norm(attn): 0.1230, norm(output): 0.9297, norm(x): 0.1952, norm(y): 0.9964, norm:0.6185, tok/sec: 123563.15, flops:96.23, batch-reuse:1
@ 1621 train 5.6365 , allloss: 5.6373, dt: 1065.04ms, fracRes: 0.7768, norm(attn): 0.1221, norm(output): 0.9297, norm(x): 0.1950, norm(y): 0.9964, norm:0.6108, tok/sec: 123068.16, flops:95.85, batch-reuse:1
@ 1622 train 5.5933 , allloss: 5.5941, dt: 1060.43ms, fracRes: 0.7761, norm(attn): 0.1226, norm(output): 0.9258, norm(x): 0.1956, norm(y): 0.9963, norm:0.6385, tok/sec: 123602.52, flops:96.26, batch-reuse:1
@ 1623 train 5.5176 , allloss: 5.5185, dt: 1055.19ms, fracRes: 0.7761, norm(attn): 0.1201, norm(output): 0.9258, norm(x): 0.1944, norm(y): 0.9964, norm:0.8040, tok/sec: 124216.06, flops:96.74, batch-reuse:1
@ 1624 train 5.4836 , allloss: 5.4845, dt: 1055.30ms, fracRes: 0.7726, norm(attn): 0.1245, norm(output): 0.9297, norm(x): 0.1995, norm(y): 0.9965, norm:0.9996, tok/sec: 124203.01, flops:96.73, batch-reuse:1
@ 1625 train 5.5983 , allloss: 5.5994, dt: 1036.72ms, fracRes: 0.7798, norm(attn): 0.1250, norm(output): 0.9297, norm(x): 0.1919, norm(y): 0.9963, norm:0.8280, tok/sec: 126429.77, flops:98.46, batch-reuse:1
@ 1626 train 5.5488 , allloss: 5.5496, dt: 1053.79ms, fracRes: 0.7776, norm(attn): 0.1245, norm(output): 0.9258, norm(x): 0.1940, norm(y): 0.9964, norm:0.5751, tok/sec: 124381.20, flops:96.87, batch-reuse:1
@ 1627 train 5.4796 , allloss: 5.4804, dt: 1041.13ms, fracRes: 0.7774, norm(attn): 0.1250, norm(output): 0.9258, norm(x): 0.1938, norm(y): 0.9964, norm:0.7082, tok/sec: 125893.40, flops:98.05, batch-reuse:1
@ 1628 train 5.4779 , allloss: 5.4788, dt: 1054.28ms, fracRes: 0.7779, norm(attn): 0.1240, norm(output): 0.9336, norm(x): 0.1938, norm(y): 0.9964, norm:0.7010, tok/sec: 124323.42, flops:96.82, batch-reuse:1
@ 1629 train 5.4875 , allloss: 5.4882, dt: 1060.14ms, fracRes: 0.7770, norm(attn): 0.1221, norm(output): 0.9336, norm(x): 0.1947, norm(y): 0.9964, norm:0.5119, tok/sec: 123635.98, flops:96.29, batch-reuse:1
@ 1630 train 5.5389 , allloss: 5.5397, dt: 1050.56ms, fracRes: 0.7793, norm(attn): 0.1221, norm(output): 0.9297, norm(x): 0.1904, norm(y): 0.9963, norm:0.6557, tok/sec: 124763.68, flops:97.17, batch-reuse:1
@ 1631 train 5.4719 , allloss: 5.4728, dt: 1061.83ms, fracRes: 0.7811, norm(attn): 0.1206, norm(output): 0.9297, norm(x): 0.1885, norm(y): 0.9963, norm:0.9418, tok/sec: 123439.66, flops:96.14, batch-reuse:1
@ 1632 train 5.5565 , allloss: 5.5572, dt: 1059.48ms, fracRes: 0.7765, norm(attn): 0.1211, norm(output): 0.9336, norm(x): 0.1931, norm(y): 0.9963, norm:0.7012, tok/sec: 123713.05, flops:96.35, batch-reuse:1
@ 1633 train 5.5269 , allloss: 5.5276, dt: 1065.47ms, fracRes: 0.7730, norm(attn): 0.1211, norm(output): 0.9375, norm(x): 0.1978, norm(y): 0.9964, norm:0.6277, tok/sec: 123018.37, flops:95.81, batch-reuse:1
@ 1634 train 5.5474 , allloss: 5.5482, dt: 1066.76ms, fracRes: 0.7765, norm(attn): 0.1260, norm(output): 0.9336, norm(x): 0.1954, norm(y): 0.9963, norm:0.6587, tok/sec: 122869.63, flops:95.69, batch-reuse:1
@ 1635 train 5.4808 , allloss: 5.4816, dt: 1064.56ms, fracRes: 0.7757, norm(attn): 0.1260, norm(output): 0.9297, norm(x): 0.1962, norm(y): 0.9963, norm:0.5683, tok/sec: 123123.48, flops:95.89, batch-reuse:1
@ 1636 train 5.4569 , allloss: 5.4577, dt: 1047.10ms, fracRes: 0.7744, norm(attn): 0.1240, norm(output): 0.9336, norm(x): 0.1959, norm(y): 0.9963, norm:0.5480, tok/sec: 125176.02, flops:97.49, batch-reuse:1
@ 1637 train 5.5590 , allloss: 5.5598, dt: 1059.70ms, fracRes: 0.7771, norm(attn): 0.1221, norm(output): 0.9258, norm(x): 0.1919, norm(y): 0.9962, norm:0.5148, tok/sec: 123687.47, flops:96.33, batch-reuse:1
@ 1638 train 5.5952 , allloss: 5.5961, dt: 1059.57ms, fracRes: 0.7806, norm(attn): 0.1201, norm(output): 0.9258, norm(x): 0.1890, norm(y): 0.9961, norm:0.6467, tok/sec: 123703.39, flops:96.34, batch-reuse:1
@ 1639 train 5.4920 , allloss: 5.4927, dt: 1054.89ms, fracRes: 0.7742, norm(attn): 0.1191, norm(output): 0.9375, norm(x): 0.1982, norm(y): 0.9963, norm:0.7160, tok/sec: 124251.52, flops:96.77, batch-reuse:1
@ 1640 train 5.5155 , allloss: 5.5163, dt: 1047.91ms, fracRes: 0.7761, norm(attn): 0.1230, norm(output): 0.9297, norm(x): 0.1948, norm(y): 0.9963, norm:0.8293, tok/sec: 125079.99, flops:97.41, batch-reuse:1
@ 1641 train 5.5011 , allloss: 5.5019, dt: 1054.48ms, fracRes: 0.7729, norm(attn): 0.1240, norm(output): 0.9375, norm(x): 0.1986, norm(y): 0.9964, norm:0.9894, tok/sec: 124300.65, flops:96.81, batch-reuse:1
@ 1642 train 5.5232 , allloss: 5.5242, dt: 1053.95ms, fracRes: 0.7768, norm(attn): 0.1240, norm(output): 0.9336, norm(x): 0.1954, norm(y): 0.9962, norm:0.7352, tok/sec: 124362.43, flops:96.85, batch-reuse:1
@ 1643 train 5.5418 , allloss: 5.5426, dt: 1068.98ms, fracRes: 0.7785, norm(attn): 0.1260, norm(output): 0.9336, norm(x): 0.1927, norm(y): 0.9962, norm:0.7123, tok/sec: 122614.27, flops:95.49, batch-reuse:1
@ 1644 train 5.5812 , allloss: 5.5819, dt: 1040.99ms, fracRes: 0.7785, norm(attn): 0.1250, norm(output): 0.9336, norm(x): 0.1899, norm(y): 0.9962, norm:0.5910, tok/sec: 125910.72, flops:98.06, batch-reuse:1
@ 1645 train 5.5263 , allloss: 5.5273, dt: 1056.99ms, fracRes: 0.7860, norm(attn): 0.1230, norm(output): 0.9258, norm(x): 0.1819, norm(y): 0.9961, norm:0.7331, tok/sec: 124005.47, flops:96.58, batch-reuse:1
@ 1646 train 5.5350 , allloss: 5.5360, dt: 1064.13ms, fracRes: 0.7834, norm(attn): 0.1230, norm(output): 0.9297, norm(x): 0.1862, norm(y): 0.9961, norm:0.6863, tok/sec: 123172.80, flops:95.93, batch-reuse:1
@ 1647 train 5.5862 , allloss: 5.5871, dt: 1079.78ms, fracRes: 0.7819, norm(attn): 0.1196, norm(output): 0.9375, norm(x): 0.1893, norm(y): 0.9961, norm:0.6047, tok/sec: 121387.28, flops:94.54, batch-reuse:1
@ 1648 train 5.5401 , allloss: 5.5409, dt: 1040.96ms, fracRes: 0.7812, norm(attn): 0.1191, norm(output): 0.9414, norm(x): 0.1884, norm(y): 0.9961, norm:0.5369, tok/sec: 125914.33, flops:98.06, batch-reuse:1
@ 1649 train 5.5004 , allloss: 5.5012, dt: 1061.33ms, fracRes: 0.7784, norm(attn): 0.1230, norm(output): 0.9453, norm(x): 0.1899, norm(y): 0.9962, norm:0.7417, tok/sec: 123497.67, flops:96.18, batch-reuse:1
@ 1650 train 5.5007 , allloss: 5.5015, dt: 1062.96ms, fracRes: 0.7784, norm(attn): 0.1226, norm(output): 0.9531, norm(x): 0.1899, norm(y): 0.9962, norm:0.9303, tok/sec: 123308.62, flops:96.03, batch-reuse:1
@ 1651 train 5.5873 , allloss: 5.5880, dt: 1052.02ms, fracRes: 0.7793, norm(attn): 0.1245, norm(output): 0.9609, norm(x): 0.1883, norm(y): 0.9961, norm:0.9446, tok/sec: 124591.23, flops:97.03, batch-reuse:1
@ 1652 train 5.6542 , allloss: 5.6551, dt: 1051.03ms, fracRes: 0.7812, norm(attn): 0.1245, norm(output): 0.9336, norm(x): 0.1842, norm(y): 0.9961, norm:1.2807, tok/sec: 124708.32, flops:97.12, batch-reuse:1
@ 1653 train 5.5721 , allloss: 5.5731, dt: 1060.70ms, fracRes: 0.7819, norm(attn): 0.1240, norm(output): 0.9336, norm(x): 0.1862, norm(y): 0.9961, norm:1.1920, tok/sec: 123570.79, flops:96.24, batch-reuse:1
@ 1654 train 5.5210 , allloss: 5.5220, dt: 1051.46ms, fracRes: 0.7812, norm(attn): 0.1270, norm(output): 0.9375, norm(x): 0.1913, norm(y): 0.9961, norm:0.7375, tok/sec: 124656.57, flops:97.08, batch-reuse:1
@ 1655 train 5.4588 , allloss: 5.4597, dt: 1040.78ms, fracRes: 0.7883, norm(attn): 0.1235, norm(output): 0.9336, norm(x): 0.1861, norm(y): 0.9959, norm:0.7916, tok/sec: 125936.14, flops:98.08, batch-reuse:1
@ 1656 train 5.4947 , allloss: 5.4956, dt: 1048.17ms, fracRes: 0.7799, norm(attn): 0.1196, norm(output): 0.9453, norm(x): 0.1928, norm(y): 0.9961, norm:0.9480, tok/sec: 125048.95, flops:97.39, batch-reuse:1
@ 1657 train 5.6007 , allloss: 5.6015, dt: 1072.28ms, fracRes: 0.7769, norm(attn): 0.1250, norm(output): 0.9492, norm(x): 0.1938, norm(y): 0.9961, norm:0.9684, tok/sec: 122236.95, flops:95.20, batch-reuse:1
@ 1658 train 5.5744 , allloss: 5.5751, dt: 1048.57ms, fracRes: 0.7782, norm(attn): 0.1235, norm(output): 0.9492, norm(x): 0.1950, norm(y): 0.9960, norm:0.7403, tok/sec: 125000.38, flops:97.35, batch-reuse:1
@ 1659 train 5.5312 , allloss: 5.5319, dt: 1042.54ms, fracRes: 0.7789, norm(attn): 0.1240, norm(output): 0.9453, norm(x): 0.1945, norm(y): 0.9961, norm:0.7362, tok/sec: 125723.19, flops:97.91, batch-reuse:1
@ 1660 train 5.4704 , allloss: 5.4715, dt: 1069.28ms, fracRes: 0.7863, norm(attn): 0.1240, norm(output): 0.9414, norm(x): 0.1871, norm(y): 0.9959, norm:0.6171, tok/sec: 122579.31, flops:95.47, batch-reuse:1
@ 1661 train 5.5703 , allloss: 5.5711, dt: 1050.99ms, fracRes: 0.7822, norm(attn): 0.1230, norm(output): 0.9570, norm(x): 0.1928, norm(y): 0.9959, norm:0.5960, tok/sec: 124712.51, flops:97.13, batch-reuse:1
@ 1662 train 5.5236 , allloss: 5.5242, dt: 1059.99ms, fracRes: 0.7802, norm(attn): 0.1245, norm(output): 0.9570, norm(x): 0.1948, norm(y): 0.9960, norm:0.5080, tok/sec: 123653.84, flops:96.30, batch-reuse:1
@ 1663 train 5.5397 , allloss: 5.5404, dt: 1046.03ms, fracRes: 0.7821, norm(attn): 0.1230, norm(output): 0.9609, norm(x): 0.1910, norm(y): 0.9959, norm:0.6078, tok/sec: 125304.24, flops:97.59, batch-reuse:1
@ 1664 train 5.5077 , allloss: 5.5091, dt: 1056.64ms, fracRes: 0.7807, norm(attn): 0.1245, norm(output): 0.9492, norm(x): 0.1917, norm(y): 0.9960, norm:0.7376, tok/sec: 124046.27, flops:96.61, batch-reuse:1
@ 1665 train 5.5303 , allloss: 5.5309, dt: 1065.27ms, fracRes: 0.7798, norm(attn): 0.1240, norm(output): 0.9453, norm(x): 0.1922, norm(y): 0.9960, norm:0.7223, tok/sec: 123041.55, flops:95.83, batch-reuse:1
@ 1666 train 5.6030 , allloss: 5.6038, dt: 1046.62ms, fracRes: 0.7836, norm(attn): 0.1221, norm(output): 0.9531, norm(x): 0.1892, norm(y): 0.9958, norm:0.7159, tok/sec: 125233.65, flops:97.53, batch-reuse:1
@ 1667 train 5.7289 , allloss: 5.7457, dt: 1051.08ms, fracRes: 0.7805, norm(attn): 0.1211, norm(output): 0.9609, norm(x): 0.1983, norm(y): 0.9958, norm:0.7406, tok/sec: 124702.30, flops:97.12, batch-reuse:1
@ 1668 train 5.6534 , allloss: 5.6541, dt: 1062.54ms, fracRes: 0.7832, norm(attn): 0.1196, norm(output): 0.9492, norm(x): 0.1921, norm(y): 0.9958, norm:0.7058, tok/sec: 123357.65, flops:96.07, batch-reuse:1
@ 1669 train 5.7126 , allloss: 5.7134, dt: 1055.15ms, fracRes: 0.7821, norm(attn): 0.1226, norm(output): 0.9688, norm(x): 0.1923, norm(y): 0.9958, norm:0.8881, tok/sec: 124221.06, flops:96.74, batch-reuse:1
@ 1670 train 5.8168 , allloss: 5.8179, dt: 1047.82ms, fracRes: 0.7841, norm(attn): 0.1201, norm(output): 0.9648, norm(x): 0.1890, norm(y): 0.9956, norm:1.4295, tok/sec: 125090.09, flops:97.42, batch-reuse:1
@ 1671 train 5.7161 , allloss: 5.7173, dt: 1053.63ms, fracRes: 0.7800, norm(attn): 0.1201, norm(output): 0.9531, norm(x): 0.1934, norm(y): 0.9957, norm:0.6596, tok/sec: 124400.39, flops:96.88, batch-reuse:1
@ 1672 train 5.7322 , allloss: 5.7333, dt: 1054.47ms, fracRes: 0.7778, norm(attn): 0.1235, norm(output): 0.9805, norm(x): 0.1965, norm(y): 0.9958, norm:0.9150, tok/sec: 124301.50, flops:96.81, batch-reuse:1
@ 1673 train 5.6474 , allloss: 5.6481, dt: 1075.69ms, fracRes: 0.7792, norm(attn): 0.1245, norm(output): 0.9688, norm(x): 0.1946, norm(y): 0.9958, norm:0.9182, tok/sec: 121849.01, flops:94.90, batch-reuse:1
@ 1674 train 5.6793 , allloss: 5.6802, dt: 1052.50ms, fracRes: 0.7789, norm(attn): 0.1235, norm(output): 0.9727, norm(x): 0.1952, norm(y): 0.9958, norm:1.1243, tok/sec: 124534.02, flops:96.99, batch-reuse:1
@ 1675 train 5.7412 , allloss: 5.7420, dt: 1051.24ms, fracRes: 0.7781, norm(attn): 0.1230, norm(output): 0.9883, norm(x): 0.1959, norm(y): 0.9957, norm:0.7644, tok/sec: 124683.66, flops:97.10, batch-reuse:1
@ 1676 train 5.7640 , allloss: 5.7649, dt: 1051.73ms, fracRes: 0.7804, norm(attn): 0.1211, norm(output): 0.9766, norm(x): 0.1939, norm(y): 0.9956, norm:1.0207, tok/sec: 124625.29, flops:97.06, batch-reuse:1
@ 1677 train 5.7158 , allloss: 5.7167, dt: 1043.55ms, fracRes: 0.7821, norm(attn): 0.1206, norm(output): 0.9766, norm(x): 0.1922, norm(y): 0.9956, norm:0.9170, tok/sec: 125602.12, flops:97.82, batch-reuse:1
@ 1678 train 5.6623 , allloss: 5.6632, dt: 1039.07ms, fracRes: 0.7810, norm(attn): 0.1240, norm(output): 0.9609, norm(x): 0.1962, norm(y): 0.9956, norm:0.7714, tok/sec: 126144.02, flops:98.24, batch-reuse:1
@ 1679 train 5.7360 , allloss: 5.7370, dt: 1041.81ms, fracRes: 0.7819, norm(attn): 0.1216, norm(output): 0.9805, norm(x): 0.1976, norm(y): 0.9955, norm:0.6050, tok/sec: 125811.92, flops:97.98, batch-reuse:1
@ 1680 train 5.6391 , allloss: 5.6400, dt: 1062.45ms, fracRes: 0.7801, norm(attn): 0.1206, norm(output): 0.9922, norm(x): 0.2012, norm(y): 0.9956, norm:0.8298, tok/sec: 123367.31, flops:96.08, batch-reuse:1
@ 1681 train 5.6746 , allloss: 5.6755, dt: 1054.72ms, fracRes: 0.7818, norm(attn): 0.1211, norm(output): 0.9922, norm(x): 0.1981, norm(y): 0.9955, norm:0.7260, tok/sec: 124271.49, flops:96.78, batch-reuse:1
@ 1682 train 5.6559 , allloss: 5.6569, dt: 1053.96ms, fracRes: 0.7771, norm(attn): 0.1230, norm(output): 1.0000, norm(x): 0.2039, norm(y): 0.9955, norm:0.5354, tok/sec: 124362.04, flops:96.85, batch-reuse:1
@ 1683 train 5.6152 , allloss: 5.6160, dt: 1056.49ms, fracRes: 0.7775, norm(attn): 0.1260, norm(output): 0.9883, norm(x): 0.2018, norm(y): 0.9955, norm:0.6581, tok/sec: 124064.02, flops:96.62, batch-reuse:1
@ 1684 train 5.6223 , allloss: 5.6232, dt: 1046.97ms, fracRes: 0.7756, norm(attn): 0.1270, norm(output): 0.9922, norm(x): 0.2041, norm(y): 0.9955, norm:0.5364, tok/sec: 125191.24, flops:97.50, batch-reuse:1
@ 1685 train 5.6847 , allloss: 5.6857, dt: 1044.95ms, fracRes: 0.7769, norm(attn): 0.1279, norm(output): 0.9922, norm(x): 0.2020, norm(y): 0.9955, norm:0.5587, tok/sec: 125434.35, flops:97.69, batch-reuse:1
@ 1686 train 5.6558 , allloss: 5.6576, dt: 1043.89ms, fracRes: 0.7817, norm(attn): 0.1245, norm(output): 0.9766, norm(x): 0.1962, norm(y): 0.9954, norm:0.4631, tok/sec: 125561.04, flops:97.79, batch-reuse:1
@ 1687 train 5.6541 , allloss: 5.6551, dt: 1054.31ms, fracRes: 0.7815, norm(attn): 0.1245, norm(output): 0.9805, norm(x): 0.1967, norm(y): 0.9954, norm:0.5141, tok/sec: 124320.58, flops:96.82, batch-reuse:1
@ 1688 train 5.6821 , allloss: 5.6831, dt: 1053.36ms, fracRes: 0.7793, norm(attn): 0.1226, norm(output): 0.9883, norm(x): 0.1986, norm(y): 0.9954, norm:0.5029, tok/sec: 124431.90, flops:96.91, batch-reuse:1
@ 1689 train 5.6402 , allloss: 5.6411, dt: 1056.94ms, fracRes: 0.7808, norm(attn): 0.1230, norm(output): 0.9805, norm(x): 0.1961, norm(y): 0.9953, norm:0.5544, tok/sec: 124011.07, flops:96.58, batch-reuse:1
@ 1690 train 5.6179 , allloss: 5.6189, dt: 1045.12ms, fracRes: 0.7827, norm(attn): 0.1226, norm(output): 0.9805, norm(x): 0.1931, norm(y): 0.9953, norm:0.5476, tok/sec: 125413.46, flops:97.67, batch-reuse:1
@ 1691 train 5.5789 , allloss: 5.5797, dt: 1045.78ms, fracRes: 0.7789, norm(attn): 0.1240, norm(output): 0.9805, norm(x): 0.1969, norm(y): 0.9954, norm:0.5130, tok/sec: 125334.58, flops:97.61, batch-reuse:1
@ 1692 train 5.5373 , allloss: 5.5381, dt: 1038.87ms, fracRes: 0.7767, norm(attn): 0.1250, norm(output): 0.9922, norm(x): 0.1999, norm(y): 0.9955, norm:0.6131, tok/sec: 126167.38, flops:98.26, batch-reuse:1
@ 1693 train 5.8267 , allloss: 5.8275, dt: 1041.83ms, fracRes: 0.7794, norm(attn): 0.1216, norm(output): 0.9844, norm(x): 0.1963, norm(y): 0.9953, norm:0.7108, tok/sec: 125809.47, flops:97.98, batch-reuse:1
@ 1694 train 5.8161 , allloss: 5.8170, dt: 1056.29ms, fracRes: 0.7855, norm(attn): 0.1226, norm(output): 0.9570, norm(x): 0.1908, norm(y): 0.9952, norm:0.8512, tok/sec: 124087.43, flops:96.64, batch-reuse:1
@ 1695 train 5.6654 , allloss: 5.6661, dt: 1045.94ms, fracRes: 0.7774, norm(attn): 0.1221, norm(output): 0.9766, norm(x): 0.1988, norm(y): 0.9953, norm:0.8231, tok/sec: 125315.27, flops:97.60, batch-reuse:1
@ 1696 train 5.6295 , allloss: 5.6302, dt: 1056.69ms, fracRes: 0.7757, norm(attn): 0.1235, norm(output): 0.9922, norm(x): 0.2023, norm(y): 0.9954, norm:0.6278, tok/sec: 124040.53, flops:96.60, batch-reuse:1
@ 1697 train 5.6758 , allloss: 5.6766, dt: 1058.07ms, fracRes: 0.7783, norm(attn): 0.1240, norm(output): 0.9844, norm(x): 0.2003, norm(y): 0.9953, norm:0.6153, tok/sec: 123878.05, flops:96.48, batch-reuse:1
@ 1698 train 5.6097 , allloss: 5.6104, dt: 1041.09ms, fracRes: 0.7759, norm(attn): 0.1245, norm(output): 0.9961, norm(x): 0.2060, norm(y): 0.9954, norm:0.7246, tok/sec: 125899.13, flops:98.05, batch-reuse:1
@ 1699 train 5.6316 , allloss: 5.6324, dt: 1036.02ms, fracRes: 0.7790, norm(attn): 0.1240, norm(output): 0.9922, norm(x): 0.2026, norm(y): 0.9953, norm:0.5864, tok/sec: 126515.48, flops:98.53, batch-reuse:1
@ 1700 train 5.6431 , allloss: 5.6439, dt: 1040.87ms, fracRes: 0.7785, norm(attn): 0.1235, norm(output): 0.9922, norm(x): 0.2023, norm(y): 0.9952, norm:0.6382, tok/sec: 125925.55, flops:98.07, batch-reuse:1
@ 1701 train 5.6092 , allloss: 5.6100, dt: 1037.27ms, fracRes: 0.7787, norm(attn): 0.1230, norm(output): 0.9922, norm(x): 0.2026, norm(y): 0.9953, norm:0.6679, tok/sec: 126362.81, flops:98.41, batch-reuse:1
@ 1702 train 5.6322 , allloss: 5.6330, dt: 1046.95ms, fracRes: 0.7801, norm(attn): 0.1245, norm(output): 0.9844, norm(x): 0.1986, norm(y): 0.9952, norm:0.9344, tok/sec: 125194.41, flops:97.50, batch-reuse:1
@ 1703 train 5.6401 , allloss: 5.6410, dt: 1042.97ms, fracRes: 0.7824, norm(attn): 0.1240, norm(output): 0.9844, norm(x): 0.1968, norm(y): 0.9951, norm:0.8979, tok/sec: 125672.06, flops:97.87, batch-reuse:1
@ 1704 train 5.5937 , allloss: 5.5944, dt: 1040.43ms, fracRes: 0.7750, norm(attn): 0.1260, norm(output): 0.9961, norm(x): 0.2042, norm(y): 0.9953, norm:0.6510, tok/sec: 125979.22, flops:98.11, batch-reuse:1
@ 1705 train 5.6555 , allloss: 5.6564, dt: 1047.70ms, fracRes: 0.7826, norm(attn): 0.1270, norm(output): 0.9922, norm(x): 0.1970, norm(y): 0.9951, norm:1.1507, tok/sec: 125105.06, flops:97.43, batch-reuse:1
@ 1706 train 5.5806 , allloss: 5.5815, dt: 1040.69ms, fracRes: 0.7765, norm(attn): 0.1279, norm(output): 1.0000, norm(x): 0.2041, norm(y): 0.9953, norm:0.9120, tok/sec: 125946.72, flops:98.09, batch-reuse:1
@ 1707 train 5.5720 , allloss: 5.5728, dt: 1043.05ms, fracRes: 0.7796, norm(attn): 0.1260, norm(output): 0.9883, norm(x): 0.2010, norm(y): 0.9952, norm:0.8967, tok/sec: 125662.75, flops:97.87, batch-reuse:1
@ 1708 train 5.5512 , allloss: 5.5520, dt: 1058.44ms, fracRes: 0.7811, norm(attn): 0.1270, norm(output): 0.9922, norm(x): 0.1980, norm(y): 0.9952, norm:1.0664, tok/sec: 123834.55, flops:96.44, batch-reuse:1
@ 1709 train 5.6429 , allloss: 5.6436, dt: 1052.39ms, fracRes: 0.7792, norm(attn): 0.1260, norm(output): 0.9883, norm(x): 0.1989, norm(y): 0.9951, norm:0.6733, tok/sec: 124546.61, flops:97.00, batch-reuse:1
@ 1710 train 5.5830 , allloss: 5.5837, dt: 1057.62ms, fracRes: 0.7778, norm(attn): 0.1270, norm(output): 1.0000, norm(x): 0.2014, norm(y): 0.9952, norm:0.7351, tok/sec: 123931.48, flops:96.52, batch-reuse:1
@ 1711 train 5.5944 , allloss: 5.5952, dt: 1054.71ms, fracRes: 0.7796, norm(attn): 0.1221, norm(output): 0.9961, norm(x): 0.1991, norm(y): 0.9951, norm:0.5705, tok/sec: 124272.61, flops:96.78, batch-reuse:1
@ 1712 train 5.6710 , allloss: 5.6719, dt: 1053.48ms, fracRes: 0.7795, norm(attn): 0.1240, norm(output): 1.0000, norm(x): 0.1991, norm(y): 0.9950, norm:0.4794, tok/sec: 124418.55, flops:96.90, batch-reuse:1
@ 1713 train 5.4590 , allloss: 5.4598, dt: 1053.65ms, fracRes: 0.7751, norm(attn): 0.1279, norm(output): 1.0000, norm(x): 0.2061, norm(y): 0.9953, norm:0.5804, tok/sec: 124397.63, flops:96.88, batch-reuse:1
@ 1714 train 5.5902 , allloss: 5.5911, dt: 1055.74ms, fracRes: 0.7813, norm(attn): 0.1260, norm(output): 0.9961, norm(x): 0.1978, norm(y): 0.9951, norm:0.5972, tok/sec: 124151.57, flops:96.69, batch-reuse:1
@ 1715 train 5.5945 , allloss: 5.5952, dt: 1038.45ms, fracRes: 0.7791, norm(attn): 0.1250, norm(output): 1.0000, norm(x): 0.1994, norm(y): 0.9951, norm:0.5118, tok/sec: 126218.71, flops:98.30, batch-reuse:1
@ 1716 train 5.6133 , allloss: 5.6141, dt: 1054.15ms, fracRes: 0.7802, norm(attn): 0.1250, norm(output): 1.0000, norm(x): 0.1981, norm(y): 0.9950, norm:0.5523, tok/sec: 124338.58, flops:96.84, batch-reuse:1
@ 1717 train 5.7699 , allloss: 5.7709, dt: 1046.23ms, fracRes: 0.7835, norm(attn): 0.1250, norm(output): 1.0078, norm(x): 0.1937, norm(y): 0.9948, norm:0.7960, tok/sec: 125279.83, flops:97.57, batch-reuse:1
@ 1718 train 5.5487 , allloss: 5.5500, dt: 1051.81ms, fracRes: 0.7788, norm(attn): 0.1289, norm(output): 1.0156, norm(x): 0.2002, norm(y): 0.9950, norm:0.9017, tok/sec: 124615.35, flops:97.05, batch-reuse:1
@ 1719 train 5.6961 , allloss: 5.6969, dt: 1056.08ms, fracRes: 0.7784, norm(attn): 0.1270, norm(output): 0.9961, norm(x): 0.1993, norm(y): 0.9951, norm:0.8036, tok/sec: 124111.57, flops:96.66, batch-reuse:1
@ 1720 train 5.5988 , allloss: 5.5997, dt: 1043.66ms, fracRes: 0.7815, norm(attn): 0.1270, norm(output): 0.9922, norm(x): 0.1977, norm(y): 0.9950, norm:0.8102, tok/sec: 125588.97, flops:97.81, batch-reuse:1
@ 1721 train 5.6162 , allloss: 5.6171, dt: 1055.86ms, fracRes: 0.7792, norm(attn): 0.1260, norm(output): 0.9961, norm(x): 0.2001, norm(y): 0.9950, norm:0.8019, tok/sec: 124137.41, flops:96.68, batch-reuse:1
@ 1722 train 5.7269 , allloss: 5.7277, dt: 1052.64ms, fracRes: 0.7826, norm(attn): 0.1226, norm(output): 0.9961, norm(x): 0.1943, norm(y): 0.9949, norm:0.6874, tok/sec: 124517.80, flops:96.97, batch-reuse:1
@ 1723 train 5.6248 , allloss: 5.6256, dt: 1062.70ms, fracRes: 0.7781, norm(attn): 0.1250, norm(output): 1.0000, norm(x): 0.1997, norm(y): 0.9950, norm:0.7771, tok/sec: 123339.02, flops:96.06, batch-reuse:1
@ 1724 train 5.5505 , allloss: 5.5514, dt: 1050.41ms, fracRes: 0.7802, norm(attn): 0.1270, norm(output): 1.0000, norm(x): 0.1986, norm(y): 0.9949, norm:0.7423, tok/sec: 124781.86, flops:97.18, batch-reuse:1
@ 1725 train 5.5896 , allloss: 5.5903, dt: 1048.16ms, fracRes: 0.7804, norm(attn): 0.1260, norm(output): 0.9961, norm(x): 0.1967, norm(y): 0.9950, norm:0.7961, tok/sec: 125050.00, flops:97.39, batch-reuse:1
@ 1726 train 5.5792 , allloss: 5.5799, dt: 1048.00ms, fracRes: 0.7777, norm(attn): 0.1279, norm(output): 1.0078, norm(x): 0.1989, norm(y): 0.9951, norm:0.7008, tok/sec: 125068.49, flops:97.40, batch-reuse:1
@ 1727 train 5.5230 , allloss: 5.5238, dt: 1053.65ms, fracRes: 0.7794, norm(attn): 0.1260, norm(output): 1.0078, norm(x): 0.1975, norm(y): 0.9950, norm:0.5758, tok/sec: 124397.94, flops:96.88, batch-reuse:1
@ 1728 train 5.6303 , allloss: 5.6311, dt: 1060.27ms, fracRes: 0.7804, norm(attn): 0.1270, norm(output): 1.0078, norm(x): 0.1967, norm(y): 0.9949, norm:0.7462, tok/sec: 123621.11, flops:96.28, batch-reuse:1
@ 1729 train 5.7515 , allloss: 5.7526, dt: 1048.82ms, fracRes: 0.7832, norm(attn): 0.1230, norm(output): 1.0000, norm(x): 0.1929, norm(y): 0.9948, norm:0.7848, tok/sec: 124971.32, flops:97.33, batch-reuse:1
@ 1730 train 5.6407 , allloss: 5.6415, dt: 1046.04ms, fracRes: 0.7813, norm(attn): 0.1245, norm(output): 0.9961, norm(x): 0.1947, norm(y): 0.9948, norm:0.5784, tok/sec: 125302.58, flops:97.59, batch-reuse:1
@ 1731 train 5.5816 , allloss: 5.5823, dt: 1053.32ms, fracRes: 0.7819, norm(attn): 0.1250, norm(output): 1.0000, norm(x): 0.1943, norm(y): 0.9948, norm:0.6220, tok/sec: 124436.91, flops:96.91, batch-reuse:1
@ 1732 train 5.5626 , allloss: 5.5633, dt: 1051.69ms, fracRes: 0.7774, norm(attn): 0.1250, norm(output): 1.0000, norm(x): 0.1999, norm(y): 0.9949, norm:0.7495, tok/sec: 124629.67, flops:97.06, batch-reuse:1
@ 1733 train 5.5609 , allloss: 5.5615, dt: 1038.46ms, fracRes: 0.7749, norm(attn): 0.1260, norm(output): 1.0078, norm(x): 0.2031, norm(y): 0.9949, norm:0.7238, tok/sec: 126217.43, flops:98.30, batch-reuse:1
@ 1734 train 5.8961 , allloss: 5.8967, dt: 1037.41ms, fracRes: 0.7825, norm(attn): 0.1211, norm(output): 0.9883, norm(x): 0.1926, norm(y): 0.9948, norm:0.7584, tok/sec: 126345.15, flops:98.40, batch-reuse:1
@ 1735 train 5.5716 , allloss: 5.5723, dt: 1037.28ms, fracRes: 0.7783, norm(attn): 0.1270, norm(output): 1.0000, norm(x): 0.2004, norm(y): 0.9949, norm:0.7495, tok/sec: 126361.82, flops:98.41, batch-reuse:1
@ 1736 train 5.5530 , allloss: 5.5537, dt: 1047.71ms, fracRes: 0.7795, norm(attn): 0.1289, norm(output): 1.0078, norm(x): 0.2027, norm(y): 0.9949, norm:0.6205, tok/sec: 125103.81, flops:97.43, batch-reuse:1
@ 1737 train 5.5260 , allloss: 5.5266, dt: 1042.80ms, fracRes: 0.7778, norm(attn): 0.1279, norm(output): 1.0078, norm(x): 0.2032, norm(y): 0.9950, norm:0.7825, tok/sec: 125692.06, flops:97.89, batch-reuse:1
@ 1738 train 5.4766 , allloss: 5.4773, dt: 1040.48ms, fracRes: 0.7766, norm(attn): 0.1270, norm(output): 1.0078, norm(x): 0.2033, norm(y): 0.9949, norm:0.6161, tok/sec: 125972.35, flops:98.11, batch-reuse:1
@ 1739 train 5.5845 , allloss: 5.5852, dt: 1060.85ms, fracRes: 0.7818, norm(attn): 0.1230, norm(output): 1.0078, norm(x): 0.1965, norm(y): 0.9947, norm:0.8323, tok/sec: 123553.49, flops:96.22, batch-reuse:1
@ 1740 train 5.5050 , allloss: 5.5056, dt: 1048.29ms, fracRes: 0.7790, norm(attn): 0.1240, norm(output): 1.0000, norm(x): 0.2012, norm(y): 0.9948, norm:0.9102, tok/sec: 125034.64, flops:97.38, batch-reuse:1
@ 1741 train 5.5666 , allloss: 5.5673, dt: 1065.54ms, fracRes: 0.7775, norm(attn): 0.1240, norm(output): 1.0078, norm(x): 0.2020, norm(y): 0.9948, norm:0.7920, tok/sec: 123009.84, flops:95.80, batch-reuse:1
@ 1742 train 5.5541 , allloss: 5.5547, dt: 1047.55ms, fracRes: 0.7782, norm(attn): 0.1245, norm(output): 1.0000, norm(x): 0.2010, norm(y): 0.9948, norm:0.6587, tok/sec: 125122.66, flops:97.45, batch-reuse:1
@ 1743 train 5.6255 , allloss: 5.6263, dt: 1044.96ms, fracRes: 0.7799, norm(attn): 0.1240, norm(output): 1.0078, norm(x): 0.2005, norm(y): 0.9947, norm:0.6535, tok/sec: 125432.95, flops:97.69, batch-reuse:1
@ 1744 train 5.4774 , allloss: 5.4781, dt: 1047.22ms, fracRes: 0.7782, norm(attn): 0.1270, norm(output): 1.0078, norm(x): 0.2036, norm(y): 0.9948, norm:0.6258, tok/sec: 125162.03, flops:97.48, batch-reuse:1
@ 1745 train 5.4823 , allloss: 5.4831, dt: 1058.80ms, fracRes: 0.7789, norm(attn): 0.1289, norm(output): 1.0156, norm(x): 0.2021, norm(y): 0.9948, norm:0.5937, tok/sec: 123792.39, flops:96.41, batch-reuse:1
@ 1746 train 5.5886 , allloss: 5.5894, dt: 1047.38ms, fracRes: 0.7793, norm(attn): 0.1289, norm(output): 1.0156, norm(x): 0.2017, norm(y): 0.9947, norm:0.6306, tok/sec: 125143.00, flops:97.46, batch-reuse:1
@ 1747 train 5.4666 , allloss: 5.4672, dt: 1057.90ms, fracRes: 0.7761, norm(attn): 0.1289, norm(output): 1.0078, norm(x): 0.2054, norm(y): 0.9948, norm:0.7902, tok/sec: 123898.21, flops:96.49, batch-reuse:1
@ 1748 train 5.4953 , allloss: 5.4960, dt: 1049.34ms, fracRes: 0.7749, norm(attn): 0.1245, norm(output): 1.0156, norm(x): 0.2079, norm(y): 0.9948, norm:0.8481, tok/sec: 124908.90, flops:97.28, batch-reuse:1
@ 1749 train 5.6087 , allloss: 5.6093, dt: 1045.51ms, fracRes: 0.7788, norm(attn): 0.1221, norm(output): 1.0078, norm(x): 0.2017, norm(y): 0.9945, norm:1.0223, tok/sec: 125366.73, flops:97.64, batch-reuse:1
@ 1750 train 5.5849 , allloss: 5.5857, dt: 1056.06ms, fracRes: 0.7810, norm(attn): 0.1196, norm(output): 1.0078, norm(x): 0.1966, norm(y): 0.9946, norm:0.7431, tok/sec: 124114.10, flops:96.66, batch-reuse:1
@ 1751 train 5.7681 , allloss: 5.7691, dt: 1061.33ms, fracRes: 0.7866, norm(attn): 0.1196, norm(output): 1.0000, norm(x): 0.1883, norm(y): 0.9943, norm:1.1041, tok/sec: 123497.62, flops:96.18, batch-reuse:1
@ 1752 train 5.7698 , allloss: 5.7708, dt: 1055.12ms, fracRes: 0.7860, norm(attn): 0.1230, norm(output): 1.0000, norm(x): 0.1886, norm(y): 0.9944, norm:0.8648, tok/sec: 124224.28, flops:96.75, batch-reuse:1
@ 1753 train 5.6179 , allloss: 5.6187, dt: 1047.45ms, fracRes: 0.7789, norm(attn): 0.1230, norm(output): 1.0078, norm(x): 0.1993, norm(y): 0.9946, norm:0.9663, tok/sec: 125133.97, flops:97.45, batch-reuse:1
@ 1754 train 5.6069 , allloss: 5.6078, dt: 1047.50ms, fracRes: 0.7813, norm(attn): 0.1221, norm(output): 1.0078, norm(x): 0.1966, norm(y): 0.9946, norm:0.8478, tok/sec: 125128.90, flops:97.45, batch-reuse:1
@ 1755 train 5.5788 , allloss: 5.5795, dt: 1062.16ms, fracRes: 0.7793, norm(attn): 0.1250, norm(output): 1.0078, norm(x): 0.1996, norm(y): 0.9947, norm:0.6691, tok/sec: 123401.90, flops:96.11, batch-reuse:1
@ 1756 train 5.5627 , allloss: 5.5634, dt: 1043.27ms, fracRes: 0.7802, norm(attn): 0.1260, norm(output): 1.0078, norm(x): 0.2010, norm(y): 0.9947, norm:0.5893, tok/sec: 125636.27, flops:97.85, batch-reuse:1
@ 1757 train 5.6246 , allloss: 5.6255, dt: 1053.31ms, fracRes: 0.7804, norm(attn): 0.1260, norm(output): 1.0078, norm(x): 0.2021, norm(y): 0.9947, norm:0.6216, tok/sec: 124438.66, flops:96.91, batch-reuse:1
@ 1758 train 5.6116 , allloss: 5.6125, dt: 1066.45ms, fracRes: 0.7769, norm(attn): 0.1289, norm(output): 1.0234, norm(x): 0.2046, norm(y): 0.9947, norm:0.7023, tok/sec: 122905.42, flops:95.72, batch-reuse:1
@ 1759 train 5.5925 , allloss: 5.5934, dt: 1063.26ms, fracRes: 0.7760, norm(attn): 0.1289, norm(output): 1.0234, norm(x): 0.2061, norm(y): 0.9947, norm:1.1049, tok/sec: 123274.22, flops:96.01, batch-reuse:1
@ 1760 train 5.5010 , allloss: 5.5017, dt: 1059.90ms, fracRes: 0.7761, norm(attn): 0.1260, norm(output): 1.0078, norm(x): 0.2044, norm(y): 0.9948, norm:0.9640, tok/sec: 123663.96, flops:96.31, batch-reuse:1
@ 1761 train 5.4753 , allloss: 5.4759, dt: 1043.86ms, fracRes: 0.7788, norm(attn): 0.1270, norm(output): 1.0234, norm(x): 0.2045, norm(y): 0.9947, norm:0.7857, tok/sec: 125565.25, flops:97.79, batch-reuse:1
@ 1762 train 5.3398 , allloss: 5.3405, dt: 1063.79ms, fracRes: 0.7782, norm(attn): 0.1260, norm(output): 1.0312, norm(x): 0.2068, norm(y): 0.9947, norm:0.7227, tok/sec: 123212.11, flops:95.96, batch-reuse:1
@ 1763 train 5.4832 , allloss: 5.4839, dt: 1060.93ms, fracRes: 0.7769, norm(attn): 0.1289, norm(output): 1.0156, norm(x): 0.2057, norm(y): 0.9947, norm:0.6824, tok/sec: 123544.49, flops:96.22, batch-reuse:1
@ 1764 train 5.4986 , allloss: 5.4993, dt: 1047.53ms, fracRes: 0.7759, norm(attn): 0.1299, norm(output): 1.0156, norm(x): 0.2053, norm(y): 0.9947, norm:0.7076, tok/sec: 125124.28, flops:97.45, batch-reuse:1
@ 1765 train 5.4893 , allloss: 5.4900, dt: 1047.77ms, fracRes: 0.7767, norm(attn): 0.1309, norm(output): 1.0234, norm(x): 0.2049, norm(y): 0.9947, norm:0.5726, tok/sec: 125096.52, flops:97.43, batch-reuse:1
@ 1766 train 5.4351 , allloss: 5.4357, dt: 1058.67ms, fracRes: 0.7766, norm(attn): 0.1318, norm(output): 1.0312, norm(x): 0.2056, norm(y): 0.9947, norm:0.5853, tok/sec: 123808.03, flops:96.42, batch-reuse:1
@ 1767 train 5.4877 , allloss: 5.4884, dt: 1054.01ms, fracRes: 0.7766, norm(attn): 0.1299, norm(output): 1.0391, norm(x): 0.2073, norm(y): 0.9947, norm:0.5478, tok/sec: 124355.37, flops:96.85, batch-reuse:1
@ 1768 train 5.5503 , allloss: 5.5510, dt: 1069.05ms, fracRes: 0.7811, norm(attn): 0.1260, norm(output): 1.0312, norm(x): 0.2026, norm(y): 0.9945, norm:0.4959, tok/sec: 122605.58, flops:95.49, batch-reuse:1
@ 1769 train 5.4364 , allloss: 5.4370, dt: 1058.14ms, fracRes: 0.7783, norm(attn): 0.1260, norm(output): 1.0391, norm(x): 0.2064, norm(y): 0.9946, norm:0.4572, tok/sec: 123870.41, flops:96.47, batch-reuse:1
@ 1770 train 5.4447 , allloss: 5.4452, dt: 1057.50ms, fracRes: 0.7770, norm(attn): 0.1260, norm(output): 1.0312, norm(x): 0.2077, norm(y): 0.9946, norm:0.4411, tok/sec: 123945.25, flops:96.53, batch-reuse:1
@ 1771 train 5.4222 , allloss: 5.4228, dt: 1049.79ms, fracRes: 0.7770, norm(attn): 0.1260, norm(output): 1.0312, norm(x): 0.2065, norm(y): 0.9946, norm:0.5332, tok/sec: 124855.20, flops:97.24, batch-reuse:1
@ 1772 train 5.4540 , allloss: 5.4546, dt: 1049.22ms, fracRes: 0.7779, norm(attn): 0.1260, norm(output): 1.0312, norm(x): 0.2051, norm(y): 0.9945, norm:0.5474, tok/sec: 124923.49, flops:97.29, batch-reuse:1
@ 1773 train 5.3536 , allloss: 5.3542, dt: 1057.85ms, fracRes: 0.7745, norm(attn): 0.1270, norm(output): 1.0391, norm(x): 0.2095, norm(y): 0.9946, norm:0.6407, tok/sec: 123904.21, flops:96.50, batch-reuse:1
@ 1774 train 5.4954 , allloss: 5.4959, dt: 1056.06ms, fracRes: 0.7752, norm(attn): 0.1260, norm(output): 1.0312, norm(x): 0.2083, norm(y): 0.9945, norm:0.7258, tok/sec: 124113.82, flops:96.66, batch-reuse:1
@ 1775 train 5.4656 , allloss: 5.4662, dt: 1063.79ms, fracRes: 0.7761, norm(attn): 0.1299, norm(output): 1.0312, norm(x): 0.2084, norm(y): 0.9945, norm:0.9264, tok/sec: 123212.28, flops:95.96, batch-reuse:1
@ 1776 train 5.4203 , allloss: 5.4210, dt: 1043.72ms, fracRes: 0.7760, norm(attn): 0.1309, norm(output): 1.0312, norm(x): 0.2098, norm(y): 0.9946, norm:0.8423, tok/sec: 125581.31, flops:97.80, batch-reuse:1
@ 1777 train 5.3899 , allloss: 5.3905, dt: 1046.85ms, fracRes: 0.7758, norm(attn): 0.1309, norm(output): 1.0234, norm(x): 0.2098, norm(y): 0.9946, norm:0.7417, tok/sec: 125206.64, flops:97.51, batch-reuse:1
@ 1778 train 5.7268 , allloss: 5.7276, dt: 1054.64ms, fracRes: 0.7846, norm(attn): 0.1240, norm(output): 1.0156, norm(x): 0.1964, norm(y): 0.9942, norm:0.8527, tok/sec: 124280.93, flops:96.79, batch-reuse:1
@ 1779 train 5.4062 , allloss: 5.4067, dt: 1063.26ms, fracRes: 0.7730, norm(attn): 0.1279, norm(output): 1.0391, norm(x): 0.2093, norm(y): 0.9946, norm:0.8767, tok/sec: 123273.48, flops:96.01, batch-reuse:1
@ 1780 train 5.4912 , allloss: 5.4918, dt: 1054.29ms, fracRes: 0.7771, norm(attn): 0.1299, norm(output): 1.0312, norm(x): 0.2041, norm(y): 0.9945, norm:0.9092, tok/sec: 124322.61, flops:96.82, batch-reuse:1
@ 1781 train 5.4956 , allloss: 5.4964, dt: 1045.17ms, fracRes: 0.7788, norm(attn): 0.1260, norm(output): 1.0234, norm(x): 0.2028, norm(y): 0.9944, norm:0.8654, tok/sec: 125406.77, flops:97.67, batch-reuse:1
@ 1782 train 5.5056 , allloss: 5.5064, dt: 1058.86ms, fracRes: 0.7784, norm(attn): 0.1270, norm(output): 1.0391, norm(x): 0.2055, norm(y): 0.9944, norm:0.6983, tok/sec: 123785.45, flops:96.40, batch-reuse:1
@ 1783 train 5.4588 , allloss: 5.4595, dt: 1042.96ms, fracRes: 0.7752, norm(attn): 0.1279, norm(output): 1.0469, norm(x): 0.2088, norm(y): 0.9945, norm:0.5664, tok/sec: 125673.47, flops:97.87, batch-reuse:1
@ 1784 train 5.4331 , allloss: 5.4339, dt: 1050.60ms, fracRes: 0.7778, norm(attn): 0.1279, norm(output): 1.0391, norm(x): 0.2056, norm(y): 0.9945, norm:0.6041, tok/sec: 124759.04, flops:97.16, batch-reuse:1
@ 1785 train 5.4679 , allloss: 5.4686, dt: 1062.83ms, fracRes: 0.7786, norm(attn): 0.1299, norm(output): 1.0312, norm(x): 0.2044, norm(y): 0.9944, norm:0.5774, tok/sec: 123323.14, flops:96.04, batch-reuse:1
@ 1786 train 5.4983 , allloss: 5.4990, dt: 1052.64ms, fracRes: 0.7761, norm(attn): 0.1318, norm(output): 1.0469, norm(x): 0.2068, norm(y): 0.9945, norm:0.5511, tok/sec: 124516.90, flops:96.97, batch-reuse:1
@ 1787 train 5.4549 , allloss: 5.4555, dt: 1040.32ms, fracRes: 0.7761, norm(attn): 0.1328, norm(output): 1.0469, norm(x): 0.2064, norm(y): 0.9945, norm:0.5655, tok/sec: 125991.75, flops:98.12, batch-reuse:1
@ 1788 train 5.4739 , allloss: 5.4746, dt: 1049.23ms, fracRes: 0.7755, norm(attn): 0.1318, norm(output): 1.0469, norm(x): 0.2089, norm(y): 0.9944, norm:0.5677, tok/sec: 124922.53, flops:97.29, batch-reuse:1
@ 1789 train 5.4810 , allloss: 5.4818, dt: 1047.32ms, fracRes: 0.7776, norm(attn): 0.1279, norm(output): 1.0469, norm(x): 0.2064, norm(y): 0.9943, norm:0.6059, tok/sec: 125149.66, flops:97.47, batch-reuse:1
@ 1790 train 5.5548 , allloss: 5.5557, dt: 1054.21ms, fracRes: 0.7814, norm(attn): 0.1260, norm(output): 1.0469, norm(x): 0.2024, norm(y): 0.9941, norm:1.0129, tok/sec: 124332.31, flops:96.83, batch-reuse:1
@ 1791 train 5.4854 , allloss: 5.4862, dt: 1060.62ms, fracRes: 0.7798, norm(attn): 0.1250, norm(output): 1.0469, norm(x): 0.2051, norm(y): 0.9943, norm:0.8992, tok/sec: 123581.01, flops:96.25, batch-reuse:1
@ 1792 train 5.5314 , allloss: 5.5321, dt: 1056.09ms, fracRes: 0.7791, norm(attn): 0.1270, norm(output): 1.0469, norm(x): 0.2045, norm(y): 0.9943, norm:0.7802, tok/sec: 124110.54, flops:96.66, batch-reuse:1
@ 1793 train 5.5092 , allloss: 5.5099, dt: 1079.55ms, fracRes: 0.7759, norm(attn): 0.1279, norm(output): 1.0469, norm(x): 0.2102, norm(y): 0.9943, norm:0.8815, tok/sec: 121413.36, flops:94.56, batch-reuse:1
@ 1794 train 5.5110 , allloss: 5.5119, dt: 1053.05ms, fracRes: 0.7827, norm(attn): 0.1299, norm(output): 1.0391, norm(x): 0.2005, norm(y): 0.9941, norm:0.8473, tok/sec: 124468.36, flops:96.94, batch-reuse:1
@ 1795 train 5.4959 , allloss: 5.4967, dt: 1048.37ms, fracRes: 0.7776, norm(attn): 0.1279, norm(output): 1.0469, norm(x): 0.2071, norm(y): 0.9942, norm:0.7310, tok/sec: 125025.12, flops:97.37, batch-reuse:1
@ 1796 train 5.3945 , allloss: 5.3952, dt: 1056.49ms, fracRes: 0.7767, norm(attn): 0.1289, norm(output): 1.0469, norm(x): 0.2083, norm(y): 0.9942, norm:0.6335, tok/sec: 124063.43, flops:96.62, batch-reuse:1
@ 1797 train 5.4537 , allloss: 5.4543, dt: 1045.14ms, fracRes: 0.7766, norm(attn): 0.1299, norm(output): 1.0547, norm(x): 0.2081, norm(y): 0.9941, norm:0.7749, tok/sec: 125411.15, flops:97.67, batch-reuse:1
@ 1798 train 5.4356 , allloss: 5.4363, dt: 1058.25ms, fracRes: 0.7753, norm(attn): 0.1309, norm(output): 1.0547, norm(x): 0.2095, norm(y): 0.9942, norm:0.7030, tok/sec: 123857.46, flops:96.46, batch-reuse:1
@ 1799 train 5.4844 , allloss: 5.4851, dt: 1052.75ms, fracRes: 0.7770, norm(attn): 0.1289, norm(output): 1.0547, norm(x): 0.2070, norm(y): 0.9942, norm:0.5723, tok/sec: 124504.01, flops:96.96, batch-reuse:1
@ 1800 train 5.4136 , allloss: 5.4144, dt: 1054.53ms, fracRes: 0.7753, norm(attn): 0.1299, norm(output): 1.0547, norm(x): 0.2098, norm(y): 0.9942, norm:0.5829, tok/sec: 124294.47, flops:96.80, batch-reuse:1
@ 1801 train 5.4109 , allloss: 5.4116, dt: 1054.89ms, fracRes: 0.7795, norm(attn): 0.1309, norm(output): 1.0469, norm(x): 0.2048, norm(y): 0.9941, norm:0.6725, tok/sec: 124252.16, flops:96.77, batch-reuse:1
@ 1802 train 5.5207 , allloss: 5.5214, dt: 1039.23ms, fracRes: 0.7757, norm(attn): 0.1309, norm(output): 1.0625, norm(x): 0.2087, norm(y): 0.9941, norm:0.7380, tok/sec: 126124.48, flops:98.23, batch-reuse:1
@ 1803 train 5.4588 , allloss: 5.4595, dt: 1060.61ms, fracRes: 0.7766, norm(attn): 0.1299, norm(output): 1.0547, norm(x): 0.2063, norm(y): 0.9941, norm:0.7642, tok/sec: 123582.12, flops:96.25, batch-reuse:1
@ 1804 train 5.4067 , allloss: 5.4075, dt: 1050.57ms, fracRes: 0.7724, norm(attn): 0.1309, norm(output): 1.0703, norm(x): 0.2127, norm(y): 0.9942, norm:0.9660, tok/sec: 124763.31, flops:97.17, batch-reuse:1
@ 1805 train 5.5241 , allloss: 5.5250, dt: 1064.19ms, fracRes: 0.7819, norm(attn): 0.1309, norm(output): 1.0469, norm(x): 0.2024, norm(y): 0.9940, norm:0.9651, tok/sec: 123165.99, flops:95.92, batch-reuse:1
@ 1806 train 5.4569 , allloss: 5.4575, dt: 1046.38ms, fracRes: 0.7752, norm(attn): 0.1357, norm(output): 1.0625, norm(x): 0.2118, norm(y): 0.9942, norm:0.8089, tok/sec: 125262.41, flops:97.55, batch-reuse:1
@ 1807 train 5.5080 , allloss: 5.5087, dt: 1059.22ms, fracRes: 0.7770, norm(attn): 0.1309, norm(output): 1.0625, norm(x): 0.2086, norm(y): 0.9940, norm:0.7430, tok/sec: 123743.63, flops:96.37, batch-reuse:1
@ 1808 train 5.4023 , allloss: 5.4032, dt: 1050.50ms, fracRes: 0.7866, norm(attn): 0.1299, norm(output): 1.0703, norm(x): 0.1991, norm(y): 0.9938, norm:0.7195, tok/sec: 124770.48, flops:97.17, batch-reuse:1
@ 1809 train 5.3611 , allloss: 5.3618, dt: 1048.44ms, fracRes: 0.7733, norm(attn): 0.1318, norm(output): 1.0781, norm(x): 0.2122, norm(y): 0.9942, norm:0.7276, tok/sec: 125016.16, flops:97.36, batch-reuse:1
@ 1810 train 5.3231 , allloss: 5.3239, dt: 1048.09ms, fracRes: 0.7767, norm(attn): 0.1299, norm(output): 1.0625, norm(x): 0.2100, norm(y): 0.9940, norm:0.8032, tok/sec: 125058.02, flops:97.40, batch-reuse:1
@ 1811 train 5.3600 , allloss: 5.3607, dt: 1044.24ms, fracRes: 0.7772, norm(attn): 0.1309, norm(output): 1.0625, norm(x): 0.2097, norm(y): 0.9940, norm:0.7724, tok/sec: 125518.49, flops:97.75, batch-reuse:1
@ 1812 train 5.4220 , allloss: 5.4228, dt: 1054.31ms, fracRes: 0.7746, norm(attn): 0.1328, norm(output): 1.0625, norm(x): 0.2114, norm(y): 0.9940, norm:0.7890, tok/sec: 124320.11, flops:96.82, batch-reuse:1
@ 1813 train 5.3628 , allloss: 5.3636, dt: 1066.00ms, fracRes: 0.7770, norm(attn): 0.1328, norm(output): 1.0625, norm(x): 0.2073, norm(y): 0.9940, norm:0.6881, tok/sec: 122956.30, flops:95.76, batch-reuse:1
@ 1814 train 5.4350 , allloss: 5.4357, dt: 1065.73ms, fracRes: 0.7763, norm(attn): 0.1328, norm(output): 1.0625, norm(x): 0.2083, norm(y): 0.9940, norm:0.8276, tok/sec: 122987.91, flops:95.78, batch-reuse:1
@ 1815 train 5.3599 , allloss: 5.3606, dt: 1063.54ms, fracRes: 0.7748, norm(attn): 0.1328, norm(output): 1.0703, norm(x): 0.2105, norm(y): 0.9941, norm:0.9374, tok/sec: 123241.75, flops:95.98, batch-reuse:1
@ 1816 train 5.4028 , allloss: 5.4035, dt: 1058.62ms, fracRes: 0.7743, norm(attn): 0.1309, norm(output): 1.0781, norm(x): 0.2112, norm(y): 0.9940, norm:1.0655, tok/sec: 123814.00, flops:96.43, batch-reuse:1
@ 1817 train 5.4116 , allloss: 5.4123, dt: 1048.77ms, fracRes: 0.7777, norm(attn): 0.1348, norm(output): 1.0625, norm(x): 0.2059, norm(y): 0.9940, norm:0.8073, tok/sec: 124976.63, flops:97.33, batch-reuse:1
@ 1818 train 5.3503 , allloss: 5.3510, dt: 1065.62ms, fracRes: 0.7765, norm(attn): 0.1348, norm(output): 1.0703, norm(x): 0.2078, norm(y): 0.9940, norm:0.5618, tok/sec: 123000.40, flops:95.79, batch-reuse:1
@ 1819 train 5.4693 , allloss: 5.4702, dt: 1046.57ms, fracRes: 0.7765, norm(attn): 0.1348, norm(output): 1.0859, norm(x): 0.2072, norm(y): 0.9939, norm:0.6755, tok/sec: 125240.13, flops:97.54, batch-reuse:1
@ 1820 train 5.3877 , allloss: 5.3884, dt: 1045.19ms, fracRes: 0.7758, norm(attn): 0.1338, norm(output): 1.0938, norm(x): 0.2088, norm(y): 0.9939, norm:0.7254, tok/sec: 125405.02, flops:97.67, batch-reuse:1
@ 1821 train 5.3048 , allloss: 5.3055, dt: 1037.14ms, fracRes: 0.7770, norm(attn): 0.1357, norm(output): 1.0781, norm(x): 0.2090, norm(y): 0.9939, norm:0.6809, tok/sec: 126378.47, flops:98.42, batch-reuse:1
@ 1822 train 5.2837 , allloss: 5.2847, dt: 1053.82ms, fracRes: 0.7775, norm(attn): 0.1328, norm(output): 1.0781, norm(x): 0.2086, norm(y): 0.9939, norm:0.6309, tok/sec: 124377.68, flops:96.87, batch-reuse:1
@ 1823 train 5.3027 , allloss: 5.3034, dt: 1050.67ms, fracRes: 0.7780, norm(attn): 0.1318, norm(output): 1.0859, norm(x): 0.2083, norm(y): 0.9939, norm:0.5611, tok/sec: 124751.25, flops:97.16, batch-reuse:1
@ 1824 train 5.3583 , allloss: 5.3590, dt: 1035.86ms, fracRes: 0.7786, norm(attn): 0.1318, norm(output): 1.0781, norm(x): 0.2063, norm(y): 0.9938, norm:0.5693, tok/sec: 126534.12, flops:98.55, batch-reuse:1
@ 1825 train 5.3980 , allloss: 5.3987, dt: 1052.45ms, fracRes: 0.7792, norm(attn): 0.1328, norm(output): 1.0859, norm(x): 0.2057, norm(y): 0.9937, norm:0.6027, tok/sec: 124540.43, flops:96.99, batch-reuse:1
@ 1826 train 5.3873 , allloss: 5.3880, dt: 1051.15ms, fracRes: 0.7804, norm(attn): 0.1338, norm(output): 1.0703, norm(x): 0.2033, norm(y): 0.9937, norm:0.5328, tok/sec: 124693.78, flops:97.11, batch-reuse:1
@ 1827 train 5.4387 , allloss: 5.4396, dt: 1062.02ms, fracRes: 0.7847, norm(attn): 0.1328, norm(output): 1.0703, norm(x): 0.1977, norm(y): 0.9936, norm:0.6870, tok/sec: 123417.10, flops:96.12, batch-reuse:1
@ 1828 train 5.3675 , allloss: 5.3682, dt: 1065.73ms, fracRes: 0.7764, norm(attn): 0.1318, norm(output): 1.0703, norm(x): 0.2069, norm(y): 0.9938, norm:0.5318, tok/sec: 122988.57, flops:95.78, batch-reuse:1
@ 1829 train 5.4398 , allloss: 5.4405, dt: 1061.50ms, fracRes: 0.7771, norm(attn): 0.1328, norm(output): 1.0625, norm(x): 0.2057, norm(y): 0.9937, norm:0.6911, tok/sec: 123477.92, flops:96.17, batch-reuse:1
@ 1830 train 5.2628 , allloss: 5.2635, dt: 1057.71ms, fracRes: 0.7736, norm(attn): 0.1348, norm(output): 1.0859, norm(x): 0.2105, norm(y): 0.9939, norm:0.7868, tok/sec: 123920.50, flops:96.51, batch-reuse:1
@ 1831 train 5.3491 , allloss: 5.3499, dt: 1057.70ms, fracRes: 0.7775, norm(attn): 0.1338, norm(output): 1.0625, norm(x): 0.2052, norm(y): 0.9937, norm:0.8283, tok/sec: 123921.78, flops:96.51, batch-reuse:1
@ 1832 train 5.3727 , allloss: 5.3736, dt: 1062.16ms, fracRes: 0.7784, norm(attn): 0.1328, norm(output): 1.0703, norm(x): 0.2047, norm(y): 0.9937, norm:0.8006, tok/sec: 123401.15, flops:96.11, batch-reuse:1
@ 1833 train 5.4610 , allloss: 5.4616, dt: 1062.33ms, fracRes: 0.7776, norm(attn): 0.1357, norm(output): 1.0703, norm(x): 0.2049, norm(y): 0.9937, norm:0.9154, tok/sec: 123381.65, flops:96.09, batch-reuse:1
@ 1834 train 5.3728 , allloss: 5.3735, dt: 1063.07ms, fracRes: 0.7771, norm(attn): 0.1348, norm(output): 1.0781, norm(x): 0.2064, norm(y): 0.9936, norm:0.7775, tok/sec: 123295.70, flops:96.02, batch-reuse:1
@ 1835 train 5.2895 , allloss: 5.2903, dt: 1038.54ms, fracRes: 0.7751, norm(attn): 0.1348, norm(output): 1.0859, norm(x): 0.2104, norm(y): 0.9937, norm:0.8471, tok/sec: 126207.67, flops:98.29, batch-reuse:1
@ 1836 train 5.4148 , allloss: 5.4157, dt: 1062.49ms, fracRes: 0.7813, norm(attn): 0.1338, norm(output): 1.0781, norm(x): 0.2029, norm(y): 0.9935, norm:0.7992, tok/sec: 123363.13, flops:96.08, batch-reuse:1
@ 1837 train 5.4637 , allloss: 5.4644, dt: 1047.68ms, fracRes: 0.7758, norm(attn): 0.1338, norm(output): 1.0859, norm(x): 0.2082, norm(y): 0.9937, norm:1.0165, tok/sec: 125106.66, flops:97.43, batch-reuse:1
@ 1838 train 5.3853 , allloss: 5.3860, dt: 1068.99ms, fracRes: 0.7764, norm(attn): 0.1348, norm(output): 1.0938, norm(x): 0.2098, norm(y): 0.9936, norm:0.7836, tok/sec: 122612.72, flops:95.49, batch-reuse:1
@ 1839 train 5.3108 , allloss: 5.3115, dt: 1062.39ms, fracRes: 0.7772, norm(attn): 0.1338, norm(output): 1.1094, norm(x): 0.2087, norm(y): 0.9936, norm:0.6897, tok/sec: 123374.76, flops:96.08, batch-reuse:1
@ 1840 train 5.3278 , allloss: 5.3288, dt: 1052.97ms, fracRes: 0.7763, norm(attn): 0.1328, norm(output): 1.0859, norm(x): 0.2075, norm(y): 0.9936, norm:0.6838, tok/sec: 124477.88, flops:96.94, batch-reuse:1
@ 1841 train 5.4086 , allloss: 5.4094, dt: 1064.04ms, fracRes: 0.7748, norm(attn): 0.1338, norm(output): 1.1016, norm(x): 0.2105, norm(y): 0.9936, norm:0.6062, tok/sec: 123182.90, flops:95.94, batch-reuse:1
@ 1842 train 5.3323 , allloss: 5.3330, dt: 1050.79ms, fracRes: 0.7750, norm(attn): 0.1328, norm(output): 1.1094, norm(x): 0.2130, norm(y): 0.9937, norm:0.6013, tok/sec: 124736.76, flops:97.15, batch-reuse:1
@ 1843 train 5.3302 , allloss: 5.3310, dt: 1044.66ms, fracRes: 0.7776, norm(attn): 0.1328, norm(output): 1.1016, norm(x): 0.2085, norm(y): 0.9935, norm:0.6833, tok/sec: 125468.85, flops:97.72, batch-reuse:1
@ 1844 train 5.3399 , allloss: 5.3407, dt: 1050.48ms, fracRes: 0.7763, norm(attn): 0.1328, norm(output): 1.1094, norm(x): 0.2093, norm(y): 0.9936, norm:0.8436, tok/sec: 124773.45, flops:97.17, batch-reuse:1
@ 1845 train 5.3199 , allloss: 5.3205, dt: 1061.55ms, fracRes: 0.7786, norm(attn): 0.1328, norm(output): 1.0938, norm(x): 0.2077, norm(y): 0.9935, norm:0.9510, tok/sec: 123472.54, flops:96.16, batch-reuse:1
@ 1846 train 5.3728 , allloss: 5.3736, dt: 1046.37ms, fracRes: 0.7780, norm(attn): 0.1348, norm(output): 1.1094, norm(x): 0.2101, norm(y): 0.9935, norm:0.9059, tok/sec: 125263.61, flops:97.56, batch-reuse:1
@ 1847 train 5.3044 , allloss: 5.3063, dt: 1067.07ms, fracRes: 0.7738, norm(attn): 0.1377, norm(output): 1.1094, norm(x): 0.2144, norm(y): 0.9936, norm:0.8414, tok/sec: 122833.28, flops:95.66, batch-reuse:1
@ 1848 train 5.1969 , allloss: 5.1977, dt: 1047.86ms, fracRes: 0.7726, norm(attn): 0.1377, norm(output): 1.1016, norm(x): 0.2168, norm(y): 0.9937, norm:0.8815, tok/sec: 125085.20, flops:97.42, batch-reuse:1
@ 1849 train 5.3793 , allloss: 5.3800, dt: 1045.99ms, fracRes: 0.7759, norm(attn): 0.1338, norm(output): 1.1094, norm(x): 0.2107, norm(y): 0.9935, norm:0.8012, tok/sec: 125309.12, flops:97.59, batch-reuse:1
@ 1850 train 5.2269 , allloss: 5.2275, dt: 1040.62ms, fracRes: 0.7730, norm(attn): 0.1348, norm(output): 1.1172, norm(x): 0.2146, norm(y): 0.9936, norm:0.6867, tok/sec: 125955.09, flops:98.09, batch-reuse:1
@ 1851 train 5.2091 , allloss: 5.2098, dt: 1049.74ms, fracRes: 0.7755, norm(attn): 0.1348, norm(output): 1.1094, norm(x): 0.2101, norm(y): 0.9935, norm:0.6297, tok/sec: 124861.36, flops:97.24, batch-reuse:1
@ 1852 train 5.3160 , allloss: 5.3168, dt: 1057.53ms, fracRes: 0.7792, norm(attn): 0.1348, norm(output): 1.1172, norm(x): 0.2065, norm(y): 0.9934, norm:0.6505, tok/sec: 123941.12, flops:96.53, batch-reuse:1
@ 1853 train 5.3033 , allloss: 5.3039, dt: 1051.48ms, fracRes: 0.7765, norm(attn): 0.1357, norm(output): 1.1094, norm(x): 0.2075, norm(y): 0.9935, norm:0.5919, tok/sec: 124654.54, flops:97.08, batch-reuse:1
@ 1854 train 5.3890 , allloss: 5.3897, dt: 1053.37ms, fracRes: 0.7789, norm(attn): 0.1348, norm(output): 1.1094, norm(x): 0.2038, norm(y): 0.9934, norm:0.5813, tok/sec: 124430.86, flops:96.91, batch-reuse:1
@ 1855 train 5.5077 , allloss: 5.5087, dt: 1069.20ms, fracRes: 0.7813, norm(attn): 0.1367, norm(output): 1.1016, norm(x): 0.2026, norm(y): 0.9932, norm:0.8150, tok/sec: 122589.23, flops:95.47, batch-reuse:1
@ 1856 train 5.3814 , allloss: 5.3823, dt: 1052.05ms, fracRes: 0.7746, norm(attn): 0.1357, norm(output): 1.1094, norm(x): 0.2107, norm(y): 0.9935, norm:0.6176, tok/sec: 124587.39, flops:97.03, batch-reuse:1
@ 1857 train 5.4061 , allloss: 5.4071, dt: 1055.31ms, fracRes: 0.7788, norm(attn): 0.1338, norm(output): 1.1016, norm(x): 0.2067, norm(y): 0.9932, norm:0.8174, tok/sec: 124202.65, flops:96.73, batch-reuse:1
@ 1858 train 5.4875 , allloss: 5.4883, dt: 1061.95ms, fracRes: 0.7714, norm(attn): 0.1338, norm(output): 1.1094, norm(x): 0.2145, norm(y): 0.9936, norm:0.9454, tok/sec: 123425.22, flops:96.12, batch-reuse:1
@ 1859 train 5.5454 , allloss: 5.5461, dt: 1061.14ms, fracRes: 0.7751, norm(attn): 0.1357, norm(output): 1.1172, norm(x): 0.2137, norm(y): 0.9933, norm:1.3451, tok/sec: 123519.54, flops:96.20, batch-reuse:1
@ 1860 train 5.5232 , allloss: 5.5242, dt: 1048.38ms, fracRes: 0.7828, norm(attn): 0.1328, norm(output): 1.1016, norm(x): 0.2052, norm(y): 0.9931, norm:0.8243, tok/sec: 125023.15, flops:97.37, batch-reuse:1
@ 1861 train 5.4706 , allloss: 5.4714, dt: 1046.33ms, fracRes: 0.7768, norm(attn): 0.1367, norm(output): 1.1094, norm(x): 0.2122, norm(y): 0.9933, norm:1.0054, tok/sec: 125267.89, flops:97.56, batch-reuse:1
@ 1862 train 5.5054 , allloss: 5.5063, dt: 1055.03ms, fracRes: 0.7770, norm(attn): 0.1348, norm(output): 1.1094, norm(x): 0.2129, norm(y): 0.9933, norm:1.0201, tok/sec: 124235.71, flops:96.76, batch-reuse:1
@ 1863 train 5.5105 , allloss: 5.5114, dt: 1041.39ms, fracRes: 0.7803, norm(attn): 0.1348, norm(output): 1.1016, norm(x): 0.2087, norm(y): 0.9932, norm:0.8398, tok/sec: 125862.73, flops:98.02, batch-reuse:1
@ 1864 train 5.4585 , allloss: 5.4594, dt: 1052.26ms, fracRes: 0.7763, norm(attn): 0.1367, norm(output): 1.1094, norm(x): 0.2106, norm(y): 0.9932, norm:0.7901, tok/sec: 124562.69, flops:97.01, batch-reuse:1
@ 1865 train 5.4404 , allloss: 5.4411, dt: 1063.36ms, fracRes: 0.7750, norm(attn): 0.1387, norm(output): 1.1172, norm(x): 0.2113, norm(y): 0.9933, norm:0.6378, tok/sec: 123261.78, flops:96.00, batch-reuse:1
@ 1866 train 5.8153 , allloss: 5.8163, dt: 1066.01ms, fracRes: 0.7900, norm(attn): 0.1318, norm(output): 1.0781, norm(x): 0.1902, norm(y): 0.9929, norm:0.9268, tok/sec: 122956.22, flops:95.76, batch-reuse:1
@ 1867 train 5.4915 , allloss: 5.4928, dt: 1050.98ms, fracRes: 0.7727, norm(attn): 0.1406, norm(output): 1.1250, norm(x): 0.2140, norm(y): 0.9933, norm:1.0807, tok/sec: 124714.57, flops:97.13, batch-reuse:1
@ 1868 train 5.5275 , allloss: 5.5284, dt: 1058.13ms, fracRes: 0.7777, norm(attn): 0.1348, norm(output): 1.1172, norm(x): 0.2089, norm(y): 0.9932, norm:0.7000, tok/sec: 123870.91, flops:96.47, batch-reuse:1
@ 1869 train 5.4688 , allloss: 5.4698, dt: 1052.37ms, fracRes: 0.7782, norm(attn): 0.1367, norm(output): 1.1250, norm(x): 0.2104, norm(y): 0.9931, norm:0.7777, tok/sec: 124549.09, flops:97.00, batch-reuse:1
@ 1870 train 5.4529 , allloss: 5.4539, dt: 1076.74ms, fracRes: 0.7819, norm(attn): 0.1357, norm(output): 1.1172, norm(x): 0.2091, norm(y): 0.9930, norm:0.6924, tok/sec: 121730.19, flops:94.80, batch-reuse:1
@ 1871 train 5.4292 , allloss: 5.4301, dt: 1069.17ms, fracRes: 0.7783, norm(attn): 0.1377, norm(output): 1.1250, norm(x): 0.2115, norm(y): 0.9931, norm:0.6808, tok/sec: 122592.62, flops:95.48, batch-reuse:1
@ 1872 train 5.5253 , allloss: 5.5265, dt: 1062.91ms, fracRes: 0.7830, norm(attn): 0.1357, norm(output): 1.1172, norm(x): 0.2043, norm(y): 0.9929, norm:0.5735, tok/sec: 123314.07, flops:96.04, batch-reuse:1
@ 1873 train 5.5364 , allloss: 5.5373, dt: 1055.92ms, fracRes: 0.7803, norm(attn): 0.1367, norm(output): 1.1328, norm(x): 0.2056, norm(y): 0.9929, norm:0.7248, tok/sec: 124130.49, flops:96.67, batch-reuse:1
@ 1874 train 5.3885 , allloss: 5.3892, dt: 1051.69ms, fracRes: 0.7774, norm(attn): 0.1377, norm(output): 1.1172, norm(x): 0.2085, norm(y): 0.9931, norm:0.8194, tok/sec: 124629.36, flops:97.06, batch-reuse:1
@ 1875 train 5.4159 , allloss: 5.4166, dt: 1041.43ms, fracRes: 0.7738, norm(attn): 0.1377, norm(output): 1.1328, norm(x): 0.2116, norm(y): 0.9931, norm:0.7833, tok/sec: 125858.29, flops:98.02, batch-reuse:1
@ 1876 train 5.5285 , allloss: 5.5294, dt: 1064.41ms, fracRes: 0.7809, norm(attn): 0.1338, norm(output): 1.1172, norm(x): 0.2045, norm(y): 0.9929, norm:0.6064, tok/sec: 123140.05, flops:95.90, batch-reuse:1
@ 1877 train 5.4929 , allloss: 5.4938, dt: 1049.78ms, fracRes: 0.7826, norm(attn): 0.1328, norm(output): 1.1172, norm(x): 0.2041, norm(y): 0.9928, norm:0.6032, tok/sec: 124856.73, flops:97.24, batch-reuse:1
@ 1878 train 5.4439 , allloss: 5.4447, dt: 1060.32ms, fracRes: 0.7779, norm(attn): 0.1318, norm(output): 1.1250, norm(x): 0.2100, norm(y): 0.9929, norm:0.6670, tok/sec: 123616.00, flops:96.27, batch-reuse:1
@ 1879 train 5.4855 , allloss: 5.4863, dt: 1054.61ms, fracRes: 0.7788, norm(attn): 0.1318, norm(output): 1.1250, norm(x): 0.2081, norm(y): 0.9928, norm:0.7136, tok/sec: 124285.28, flops:96.79, batch-reuse:1
@ 1880 train 5.4763 , allloss: 5.4771, dt: 1055.73ms, fracRes: 0.7766, norm(attn): 0.1328, norm(output): 1.1250, norm(x): 0.2106, norm(y): 0.9928, norm:0.7859, tok/sec: 124152.69, flops:96.69, batch-reuse:1
@ 1881 train 5.3968 , allloss: 5.3977, dt: 1054.18ms, fracRes: 0.7772, norm(attn): 0.1348, norm(output): 1.1250, norm(x): 0.2100, norm(y): 0.9929, norm:0.9352, tok/sec: 124335.99, flops:96.83, batch-reuse:1
@ 1882 train 5.4768 , allloss: 5.4775, dt: 1061.33ms, fracRes: 0.7762, norm(attn): 0.1357, norm(output): 1.1172, norm(x): 0.2100, norm(y): 0.9929, norm:1.1390, tok/sec: 123497.53, flops:96.18, batch-reuse:1
@ 1883 train 5.3964 , allloss: 5.3971, dt: 1062.65ms, fracRes: 0.7758, norm(attn): 0.1367, norm(output): 1.1250, norm(x): 0.2134, norm(y): 0.9930, norm:0.9067, tok/sec: 123344.69, flops:96.06, batch-reuse:1
@ 1884 train 5.3529 , allloss: 5.3537, dt: 1046.00ms, fracRes: 0.7749, norm(attn): 0.1377, norm(output): 1.1328, norm(x): 0.2157, norm(y): 0.9929, norm:0.8035, tok/sec: 125308.12, flops:97.59, batch-reuse:1
@ 1885 train 5.4322 , allloss: 5.4328, dt: 1043.81ms, fracRes: 0.7741, norm(attn): 0.1357, norm(output): 1.1250, norm(x): 0.2160, norm(y): 0.9929, norm:0.7848, tok/sec: 125571.19, flops:97.80, batch-reuse:1
@ 1886 train 5.4011 , allloss: 5.4018, dt: 1045.84ms, fracRes: 0.7787, norm(attn): 0.1328, norm(output): 1.1328, norm(x): 0.2093, norm(y): 0.9927, norm:0.8649, tok/sec: 125327.24, flops:97.61, batch-reuse:1
@ 1887 train 5.3790 , allloss: 5.3797, dt: 1048.17ms, fracRes: 0.7764, norm(attn): 0.1348, norm(output): 1.1328, norm(x): 0.2126, norm(y): 0.9928, norm:1.0407, tok/sec: 125048.26, flops:97.39, batch-reuse:1
@ 1888 train 5.5383 , allloss: 5.5392, dt: 1061.78ms, fracRes: 0.7809, norm(attn): 0.1357, norm(output): 1.1250, norm(x): 0.2087, norm(y): 0.9926, norm:0.9505, tok/sec: 123445.51, flops:96.14, batch-reuse:1
@ 1889 train 5.3813 , allloss: 5.3820, dt: 1055.89ms, fracRes: 0.7775, norm(attn): 0.1377, norm(output): 1.1250, norm(x): 0.2127, norm(y): 0.9927, norm:0.8163, tok/sec: 124134.50, flops:96.68, batch-reuse:1
@ 1890 train 5.5612 , allloss: 5.5620, dt: 1059.97ms, fracRes: 0.7802, norm(attn): 0.1377, norm(output): 1.1328, norm(x): 0.2082, norm(y): 0.9926, norm:0.9185, tok/sec: 123656.56, flops:96.30, batch-reuse:1
@ 1891 train 5.4617 , allloss: 5.4624, dt: 1060.39ms, fracRes: 0.7755, norm(attn): 0.1377, norm(output): 1.1328, norm(x): 0.2166, norm(y): 0.9927, norm:0.8395, tok/sec: 123607.02, flops:96.27, batch-reuse:1
@ 1892 train 5.3850 , allloss: 5.3858, dt: 1055.50ms, fracRes: 0.7780, norm(attn): 0.1377, norm(output): 1.1328, norm(x): 0.2138, norm(y): 0.9926, norm:0.8003, tok/sec: 124180.34, flops:96.71, batch-reuse:1
@ 1893 train 5.4757 , allloss: 5.4765, dt: 1054.29ms, fracRes: 0.7758, norm(attn): 0.1367, norm(output): 1.1328, norm(x): 0.2169, norm(y): 0.9926, norm:0.7587, tok/sec: 124322.78, flops:96.82, batch-reuse:1
@ 1894 train 5.3565 , allloss: 5.3574, dt: 1052.25ms, fracRes: 0.7762, norm(attn): 0.1377, norm(output): 1.1250, norm(x): 0.2133, norm(y): 0.9927, norm:0.6200, tok/sec: 124563.82, flops:97.01, batch-reuse:1
@ 1895 train 5.5412 , allloss: 5.5420, dt: 1044.25ms, fracRes: 0.7791, norm(attn): 0.1357, norm(output): 1.1328, norm(x): 0.2065, norm(y): 0.9926, norm:0.8184, tok/sec: 125517.52, flops:97.75, batch-reuse:1
@ 1896 train 5.5222 , allloss: 5.5230, dt: 1053.34ms, fracRes: 0.7779, norm(attn): 0.1367, norm(output): 1.1406, norm(x): 0.2091, norm(y): 0.9926, norm:0.6321, tok/sec: 124435.14, flops:96.91, batch-reuse:1
@ 1897 train 5.4956 , allloss: 5.4963, dt: 1056.91ms, fracRes: 0.7761, norm(attn): 0.1396, norm(output): 1.1406, norm(x): 0.2139, norm(y): 0.9926, norm:0.7474, tok/sec: 124014.40, flops:96.58, batch-reuse:1
@ 1898 train 5.4600 , allloss: 5.4608, dt: 1055.91ms, fracRes: 0.7781, norm(attn): 0.1348, norm(output): 1.1328, norm(x): 0.2124, norm(y): 0.9924, norm:0.8390, tok/sec: 124131.83, flops:96.67, batch-reuse:1
@ 1899 train 5.4661 , allloss: 5.4669, dt: 1058.44ms, fracRes: 0.7778, norm(attn): 0.1348, norm(output): 1.1328, norm(x): 0.2116, norm(y): 0.9925, norm:1.0341, tok/sec: 123835.56, flops:96.44, batch-reuse:1
@ 1900 train 5.4056 , allloss: 5.4064, dt: 1045.61ms, fracRes: 0.7754, norm(attn): 0.1367, norm(output): 1.1328, norm(x): 0.2121, norm(y): 0.9926, norm:0.8382, tok/sec: 125354.50, flops:97.63, batch-reuse:1
@ 1901 train 5.4940 , allloss: 5.4948, dt: 1056.44ms, fracRes: 0.7762, norm(attn): 0.1357, norm(output): 1.1328, norm(x): 0.2108, norm(y): 0.9926, norm:0.8922, tok/sec: 124069.36, flops:96.63, batch-reuse:1
@ 1902 train 5.4498 , allloss: 5.4505, dt: 1046.13ms, fracRes: 0.7752, norm(attn): 0.1387, norm(output): 1.1406, norm(x): 0.2118, norm(y): 0.9925, norm:0.9426, tok/sec: 125292.42, flops:97.58, batch-reuse:1
@ 1903 train 5.4588 , allloss: 5.4598, dt: 1040.87ms, fracRes: 0.7755, norm(attn): 0.1357, norm(output): 1.1406, norm(x): 0.2129, norm(y): 0.9925, norm:0.8793, tok/sec: 125925.35, flops:98.07, batch-reuse:1
@ 1904 train 5.4075 , allloss: 5.4084, dt: 1051.19ms, fracRes: 0.7769, norm(attn): 0.1357, norm(output): 1.1484, norm(x): 0.2142, norm(y): 0.9924, norm:0.6741, tok/sec: 124689.63, flops:97.11, batch-reuse:1
@ 1905 train 5.3527 , allloss: 5.3533, dt: 1046.67ms, fracRes: 0.7737, norm(attn): 0.1367, norm(output): 1.1328, norm(x): 0.2186, norm(y): 0.9925, norm:0.9027, tok/sec: 125228.14, flops:97.53, batch-reuse:1
@ 1906 train 5.3388 , allloss: 5.3397, dt: 1065.45ms, fracRes: 0.7760, norm(attn): 0.1367, norm(output): 1.1484, norm(x): 0.2150, norm(y): 0.9924, norm:0.7427, tok/sec: 123019.80, flops:95.81, batch-reuse:1
@ 1907 train 5.3741 , allloss: 5.3749, dt: 1061.67ms, fracRes: 0.7744, norm(attn): 0.1377, norm(output): 1.1406, norm(x): 0.2173, norm(y): 0.9924, norm:0.7771, tok/sec: 123457.82, flops:96.15, batch-reuse:1
@ 1908 train 5.4031 , allloss: 5.4039, dt: 1041.13ms, fracRes: 0.7744, norm(attn): 0.1387, norm(output): 1.1406, norm(x): 0.2169, norm(y): 0.9924, norm:0.9064, tok/sec: 125894.49, flops:98.05, batch-reuse:1
@ 1909 train 5.5307 , allloss: 5.5314, dt: 1041.50ms, fracRes: 0.7714, norm(attn): 0.1367, norm(output): 1.1484, norm(x): 0.2203, norm(y): 0.9925, norm:0.7718, tok/sec: 125849.39, flops:98.01, batch-reuse:1
@ 1910 train 5.4555 , allloss: 5.4563, dt: 1052.22ms, fracRes: 0.7733, norm(attn): 0.1396, norm(output): 1.1562, norm(x): 0.2202, norm(y): 0.9924, norm:0.7171, tok/sec: 124567.60, flops:97.01, batch-reuse:1
@ 1911 train 5.4000 , allloss: 5.4008, dt: 1047.70ms, fracRes: 0.7724, norm(attn): 0.1387, norm(output): 1.1719, norm(x): 0.2222, norm(y): 0.9923, norm:0.6832, tok/sec: 125104.07, flops:97.43, batch-reuse:1
@ 1912 train 5.3994 , allloss: 5.4001, dt: 1058.55ms, fracRes: 0.7742, norm(attn): 0.1396, norm(output): 1.1562, norm(x): 0.2193, norm(y): 0.9923, norm:0.7410, tok/sec: 123822.28, flops:96.43, batch-reuse:1
@ 1913 train 5.4039 , allloss: 5.4045, dt: 1054.60ms, fracRes: 0.7734, norm(attn): 0.1387, norm(output): 1.1484, norm(x): 0.2193, norm(y): 0.9924, norm:0.5923, tok/sec: 124286.21, flops:96.79, batch-reuse:1
@ 1914 train 5.3972 , allloss: 5.3980, dt: 1050.50ms, fracRes: 0.7741, norm(attn): 0.1367, norm(output): 1.1562, norm(x): 0.2186, norm(y): 0.9922, norm:0.9290, tok/sec: 124771.50, flops:97.17, batch-reuse:1
@ 1915 train 5.3824 , allloss: 5.3832, dt: 1065.90ms, fracRes: 0.7719, norm(attn): 0.1387, norm(output): 1.1641, norm(x): 0.2205, norm(y): 0.9924, norm:0.7818, tok/sec: 122968.57, flops:95.77, batch-reuse:1
@ 1916 train 5.5731 , allloss: 5.5738, dt: 1061.39ms, fracRes: 0.7750, norm(attn): 0.1357, norm(output): 1.1641, norm(x): 0.2150, norm(y): 0.9922, norm:0.6904, tok/sec: 123490.93, flops:96.18, batch-reuse:1
@ 1917 train 5.4269 , allloss: 5.4276, dt: 1069.55ms, fracRes: 0.7748, norm(attn): 0.1367, norm(output): 1.1641, norm(x): 0.2158, norm(y): 0.9922, norm:0.7186, tok/sec: 122548.98, flops:95.44, batch-reuse:1
@ 1918 train 5.4388 , allloss: 5.4395, dt: 1058.78ms, fracRes: 0.7742, norm(attn): 0.1367, norm(output): 1.1719, norm(x): 0.2178, norm(y): 0.9922, norm:0.8246, tok/sec: 123795.46, flops:96.41, batch-reuse:1
@ 1919 train 5.4082 , allloss: 5.4090, dt: 1067.34ms, fracRes: 0.7806, norm(attn): 0.1367, norm(output): 1.1641, norm(x): 0.2086, norm(y): 0.9920, norm:1.1615, tok/sec: 122802.08, flops:95.64, batch-reuse:1
@ 1920 train 5.3668 , allloss: 5.3676, dt: 1043.43ms, fracRes: 0.7742, norm(attn): 0.1387, norm(output): 1.1719, norm(x): 0.2178, norm(y): 0.9921, norm:0.9955, tok/sec: 125615.95, flops:97.83, batch-reuse:1
@ 1921 train 5.4445 , allloss: 5.4453, dt: 1055.59ms, fracRes: 0.7744, norm(attn): 0.1377, norm(output): 1.1719, norm(x): 0.2166, norm(y): 0.9922, norm:0.9797, tok/sec: 124169.94, flops:96.70, batch-reuse:1
@ 1922 train 5.3453 , allloss: 5.3460, dt: 1047.11ms, fracRes: 0.7735, norm(attn): 0.1396, norm(output): 1.1719, norm(x): 0.2175, norm(y): 0.9922, norm:0.7146, tok/sec: 125175.48, flops:97.49, batch-reuse:1
@ 1923 train 5.4125 , allloss: 5.4134, dt: 1045.01ms, fracRes: 0.7789, norm(attn): 0.1367, norm(output): 1.1641, norm(x): 0.2099, norm(y): 0.9920, norm:0.6952, tok/sec: 125426.43, flops:97.68, batch-reuse:1
@ 1924 train 5.4198 , allloss: 5.4205, dt: 1055.50ms, fracRes: 0.7775, norm(attn): 0.1367, norm(output): 1.1719, norm(x): 0.2125, norm(y): 0.9920, norm:0.7402, tok/sec: 124180.12, flops:96.71, batch-reuse:1
@ 1925 train 5.4222 , allloss: 5.4230, dt: 1050.12ms, fracRes: 0.7777, norm(attn): 0.1396, norm(output): 1.1719, norm(x): 0.2126, norm(y): 0.9921, norm:0.7211, tok/sec: 124816.54, flops:97.21, batch-reuse:1
@ 1926 train 5.4318 , allloss: 5.4324, dt: 1049.78ms, fracRes: 0.7755, norm(attn): 0.1406, norm(output): 1.1641, norm(x): 0.2140, norm(y): 0.9921, norm:0.6664, tok/sec: 124856.96, flops:97.24, batch-reuse:1
@ 1927 train 5.4522 , allloss: 5.4529, dt: 1057.80ms, fracRes: 0.7763, norm(attn): 0.1396, norm(output): 1.1719, norm(x): 0.2160, norm(y): 0.9921, norm:0.7342, tok/sec: 123909.88, flops:96.50, batch-reuse:1
@ 1928 train 5.3612 , allloss: 5.3621, dt: 1056.09ms, fracRes: 0.7745, norm(attn): 0.1406, norm(output): 1.1719, norm(x): 0.2195, norm(y): 0.9921, norm:0.7278, tok/sec: 124110.59, flops:96.66, batch-reuse:1
@ 1929 train 5.3769 , allloss: 5.3776, dt: 1051.54ms, fracRes: 0.7732, norm(attn): 0.1396, norm(output): 1.1797, norm(x): 0.2217, norm(y): 0.9921, norm:0.6801, tok/sec: 124647.56, flops:97.08, batch-reuse:1
@ 1930 train 5.3148 , allloss: 5.3156, dt: 1066.97ms, fracRes: 0.7772, norm(attn): 0.1377, norm(output): 1.1719, norm(x): 0.2153, norm(y): 0.9919, norm:0.7026, tok/sec: 122845.55, flops:95.67, batch-reuse:1
@ 1931 train 5.4890 , allloss: 5.4898, dt: 1079.63ms, fracRes: 0.7773, norm(attn): 0.1338, norm(output): 1.1641, norm(x): 0.2144, norm(y): 0.9919, norm:1.0049, tok/sec: 121404.03, flops:94.55, batch-reuse:1
@ 1932 train 5.4493 , allloss: 5.4501, dt: 1046.32ms, fracRes: 0.7730, norm(attn): 0.1396, norm(output): 1.1719, norm(x): 0.2215, norm(y): 0.9920, norm:0.8705, tok/sec: 125269.12, flops:97.56, batch-reuse:1
@ 1933 train 5.4594 , allloss: 5.4601, dt: 1058.02ms, fracRes: 0.7748, norm(attn): 0.1377, norm(output): 1.1562, norm(x): 0.2170, norm(y): 0.9919, norm:0.9550, tok/sec: 123884.61, flops:96.48, batch-reuse:1
@ 1934 train 5.5119 , allloss: 5.5127, dt: 1056.26ms, fracRes: 0.7810, norm(attn): 0.1377, norm(output): 1.1719, norm(x): 0.2110, norm(y): 0.9917, norm:1.0196, tok/sec: 124090.81, flops:96.64, batch-reuse:1
@ 1935 train 5.3432 , allloss: 5.3437, dt: 1046.79ms, fracRes: 0.7746, norm(attn): 0.1387, norm(output): 1.1953, norm(x): 0.2162, norm(y): 0.9920, norm:0.9016, tok/sec: 125212.86, flops:97.52, batch-reuse:1
@ 1936 train 5.3832 , allloss: 5.3838, dt: 1055.64ms, fracRes: 0.7738, norm(attn): 0.1406, norm(output): 1.2031, norm(x): 0.2180, norm(y): 0.9920, norm:1.0994, tok/sec: 124163.29, flops:96.70, batch-reuse:1
@ 1937 train 5.3381 , allloss: 5.3388, dt: 1047.48ms, fracRes: 0.7738, norm(attn): 0.1387, norm(output): 1.1953, norm(x): 0.2193, norm(y): 0.9920, norm:0.7644, tok/sec: 125130.41, flops:97.45, batch-reuse:1
@ 1938 train 5.4049 , allloss: 5.4058, dt: 1059.47ms, fracRes: 0.7757, norm(attn): 0.1396, norm(output): 1.2031, norm(x): 0.2166, norm(y): 0.9919, norm:0.9254, tok/sec: 123715.08, flops:96.35, batch-reuse:1
@ 1939 train 5.3881 , allloss: 5.3891, dt: 1050.98ms, fracRes: 0.7761, norm(attn): 0.1406, norm(output): 1.1875, norm(x): 0.2182, norm(y): 0.9919, norm:0.6597, tok/sec: 124714.29, flops:97.13, batch-reuse:1
@ 1940 train 5.5333 , allloss: 5.5341, dt: 1044.84ms, fracRes: 0.7785, norm(attn): 0.1377, norm(output): 1.1953, norm(x): 0.2134, norm(y): 0.9917, norm:0.7084, tok/sec: 125447.03, flops:97.70, batch-reuse:1
@ 1941 train 5.4179 , allloss: 5.4188, dt: 1060.82ms, fracRes: 0.7738, norm(attn): 0.1396, norm(output): 1.2109, norm(x): 0.2205, norm(y): 0.9919, norm:0.6710, tok/sec: 123556.93, flops:96.23, batch-reuse:1
@ 1942 train 5.3300 , allloss: 5.3308, dt: 1067.98ms, fracRes: 0.7723, norm(attn): 0.1387, norm(output): 1.2031, norm(x): 0.2212, norm(y): 0.9919, norm:0.6475, tok/sec: 122729.02, flops:95.58, batch-reuse:1
@ 1943 train 5.3549 , allloss: 5.3556, dt: 1050.29ms, fracRes: 0.7694, norm(attn): 0.1396, norm(output): 1.2109, norm(x): 0.2266, norm(y): 0.9919, norm:0.6903, tok/sec: 124795.94, flops:97.19, batch-reuse:1
@ 1944 train 5.3717 , allloss: 5.3723, dt: 1058.61ms, fracRes: 0.7705, norm(attn): 0.1396, norm(output): 1.2109, norm(x): 0.2255, norm(y): 0.9919, norm:0.8653, tok/sec: 123814.83, flops:96.43, batch-reuse:1
@ 1945 train 5.3038 , allloss: 5.3045, dt: 1060.84ms, fracRes: 0.7737, norm(attn): 0.1406, norm(output): 1.2031, norm(x): 0.2243, norm(y): 0.9919, norm:0.8647, tok/sec: 123554.54, flops:96.22, batch-reuse:1
@ 1946 train 5.3181 , allloss: 5.3189, dt: 1054.19ms, fracRes: 0.7779, norm(attn): 0.1367, norm(output): 1.2031, norm(x): 0.2163, norm(y): 0.9917, norm:0.8499, tok/sec: 124333.94, flops:96.83, batch-reuse:1
@ 1947 train 5.4487 , allloss: 5.4495, dt: 1040.21ms, fracRes: 0.7761, norm(attn): 0.1377, norm(output): 1.1953, norm(x): 0.2161, norm(y): 0.9918, norm:0.7136, tok/sec: 126005.18, flops:98.13, batch-reuse:1
@ 1948 train 5.2987 , allloss: 5.2995, dt: 1053.71ms, fracRes: 0.7752, norm(attn): 0.1406, norm(output): 1.2031, norm(x): 0.2206, norm(y): 0.9918, norm:0.7360, tok/sec: 124391.24, flops:96.88, batch-reuse:1
@ 1949 train 5.3468 , allloss: 5.3476, dt: 1053.68ms, fracRes: 0.7741, norm(attn): 0.1406, norm(output): 1.2031, norm(x): 0.2228, norm(y): 0.9918, norm:0.6699, tok/sec: 124394.54, flops:96.88, batch-reuse:1
@ 1950 train 5.4586 , allloss: 5.4594, dt: 1046.14ms, fracRes: 0.7752, norm(attn): 0.1396, norm(output): 1.2031, norm(x): 0.2196, norm(y): 0.9917, norm:0.5495, tok/sec: 125290.68, flops:97.58, batch-reuse:1
@ 1951 train 5.3452 , allloss: 5.3459, dt: 1066.88ms, fracRes: 0.7731, norm(attn): 0.1406, norm(output): 1.2031, norm(x): 0.2252, norm(y): 0.9918, norm:0.6701, tok/sec: 122855.73, flops:95.68, batch-reuse:1
@ 1952 train 5.3124 , allloss: 5.3132, dt: 1077.39ms, fracRes: 0.7758, norm(attn): 0.1406, norm(output): 1.1875, norm(x): 0.2200, norm(y): 0.9917, norm:0.8492, tok/sec: 121657.38, flops:94.75, batch-reuse:1
@ 1953 train 5.3351 , allloss: 5.3361, dt: 1055.00ms, fracRes: 0.7749, norm(attn): 0.1406, norm(output): 1.1875, norm(x): 0.2192, norm(y): 0.9917, norm:0.8356, tok/sec: 124238.85, flops:96.76, batch-reuse:1
@ 1954 train 5.2938 , allloss: 5.2946, dt: 1051.32ms, fracRes: 0.7708, norm(attn): 0.1445, norm(output): 1.2031, norm(x): 0.2239, norm(y): 0.9919, norm:0.7765, tok/sec: 124674.05, flops:97.10, batch-reuse:1
@ 1955 train 5.3203 , allloss: 5.3212, dt: 1047.49ms, fracRes: 0.7761, norm(attn): 0.1426, norm(output): 1.1953, norm(x): 0.2185, norm(y): 0.9917, norm:0.7559, tok/sec: 125129.18, flops:97.45, batch-reuse:1
@ 1956 train 5.1871 , allloss: 5.1877, dt: 1064.30ms, fracRes: 0.7736, norm(attn): 0.1426, norm(output): 1.2031, norm(x): 0.2214, norm(y): 0.9918, norm:0.6635, tok/sec: 123152.88, flops:95.91, batch-reuse:1
@ 1957 train 5.3285 , allloss: 5.3292, dt: 1053.76ms, fracRes: 0.7760, norm(attn): 0.1396, norm(output): 1.1953, norm(x): 0.2170, norm(y): 0.9916, norm:0.7963, tok/sec: 124384.80, flops:96.87, batch-reuse:1
@ 1958 train 5.3025 , allloss: 5.3033, dt: 1065.08ms, fracRes: 0.7758, norm(attn): 0.1396, norm(output): 1.1875, norm(x): 0.2170, norm(y): 0.9916, norm:0.8233, tok/sec: 123063.01, flops:95.84, batch-reuse:1
@ 1959 train 5.2579 , allloss: 5.2586, dt: 1056.35ms, fracRes: 0.7718, norm(attn): 0.1416, norm(output): 1.2031, norm(x): 0.2221, norm(y): 0.9917, norm:1.0233, tok/sec: 124079.78, flops:96.63, batch-reuse:1
@ 1960 train 5.2181 , allloss: 5.2188, dt: 1061.03ms, fracRes: 0.7727, norm(attn): 0.1436, norm(output): 1.2031, norm(x): 0.2230, norm(y): 0.9918, norm:0.9642, tok/sec: 123533.28, flops:96.21, batch-reuse:1
@ 1961 train 5.3721 , allloss: 5.3731, dt: 1072.68ms, fracRes: 0.7763, norm(attn): 0.1436, norm(output): 1.2031, norm(x): 0.2200, norm(y): 0.9916, norm:0.8093, tok/sec: 122191.09, flops:95.16, batch-reuse:1
@ 1962 train 5.2563 , allloss: 5.2570, dt: 1052.91ms, fracRes: 0.7693, norm(attn): 0.1445, norm(output): 1.2188, norm(x): 0.2284, norm(y): 0.9918, norm:0.7779, tok/sec: 124485.94, flops:96.95, batch-reuse:1
@ 1963 train 5.4052 , allloss: 5.4061, dt: 1057.28ms, fracRes: 0.7764, norm(attn): 0.1396, norm(output): 1.2031, norm(x): 0.2192, norm(y): 0.9915, norm:0.7285, tok/sec: 123970.43, flops:96.55, batch-reuse:1
@ 1964 train 5.3329 , allloss: 5.3337, dt: 1042.11ms, fracRes: 0.7757, norm(attn): 0.1406, norm(output): 1.2031, norm(x): 0.2209, norm(y): 0.9915, norm:0.7113, tok/sec: 125775.59, flops:97.95, batch-reuse:1
@ 1965 train 5.2848 , allloss: 5.2854, dt: 1064.12ms, fracRes: 0.7689, norm(attn): 0.1416, norm(output): 1.2188, norm(x): 0.2299, norm(y): 0.9917, norm:0.7160, tok/sec: 123174.49, flops:95.93, batch-reuse:1
@ 1966 train 5.2885 , allloss: 5.2894, dt: 1056.09ms, fracRes: 0.7745, norm(attn): 0.1396, norm(output): 1.2031, norm(x): 0.2201, norm(y): 0.9915, norm:0.7384, tok/sec: 124111.21, flops:96.66, batch-reuse:1
@ 1967 train 5.2580 , allloss: 5.2586, dt: 1046.98ms, fracRes: 0.7706, norm(attn): 0.1426, norm(output): 1.2266, norm(x): 0.2286, norm(y): 0.9916, norm:0.7265, tok/sec: 125190.42, flops:97.50, batch-reuse:1
@ 1968 train 5.2687 , allloss: 5.2694, dt: 1060.43ms, fracRes: 0.7705, norm(attn): 0.1426, norm(output): 1.2109, norm(x): 0.2300, norm(y): 0.9917, norm:0.6253, tok/sec: 123602.63, flops:96.26, batch-reuse:1
@ 1969 train 5.3307 , allloss: 5.3314, dt: 1063.65ms, fracRes: 0.7730, norm(attn): 0.1416, norm(output): 1.2109, norm(x): 0.2285, norm(y): 0.9917, norm:0.6350, tok/sec: 123228.44, flops:95.97, batch-reuse:1
@ 1970 train 5.2675 , allloss: 5.2685, dt: 1051.40ms, fracRes: 0.7736, norm(attn): 0.1416, norm(output): 1.2109, norm(x): 0.2277, norm(y): 0.9915, norm:0.7518, tok/sec: 124664.66, flops:97.09, batch-reuse:1
@ 1971 train 5.3707 , allloss: 5.3715, dt: 1055.74ms, fracRes: 0.7740, norm(attn): 0.1406, norm(output): 1.2031, norm(x): 0.2248, norm(y): 0.9914, norm:0.7585, tok/sec: 124152.16, flops:96.69, batch-reuse:1
@ 1972 train 5.2847 , allloss: 5.2856, dt: 1061.95ms, fracRes: 0.7750, norm(attn): 0.1406, norm(output): 1.1953, norm(x): 0.2218, norm(y): 0.9915, norm:0.5301, tok/sec: 123425.61, flops:96.12, batch-reuse:1
@ 1973 train 5.2828 , allloss: 5.2836, dt: 1054.01ms, fracRes: 0.7724, norm(attn): 0.1406, norm(output): 1.2031, norm(x): 0.2251, norm(y): 0.9914, norm:0.8130, tok/sec: 124355.62, flops:96.85, batch-reuse:1
@ 1974 train 5.3355 , allloss: 5.3364, dt: 1043.12ms, fracRes: 0.7765, norm(attn): 0.1396, norm(output): 1.1953, norm(x): 0.2192, norm(y): 0.9913, norm:1.0699, tok/sec: 125654.25, flops:97.86, batch-reuse:1
@ 1975 train 5.1901 , allloss: 5.1912, dt: 1058.18ms, fracRes: 0.7736, norm(attn): 0.1426, norm(output): 1.2031, norm(x): 0.2247, norm(y): 0.9915, norm:0.8640, tok/sec: 123865.55, flops:96.47, batch-reuse:1
@ 1976 train 5.3607 , allloss: 5.3617, dt: 1057.38ms, fracRes: 0.7755, norm(attn): 0.1436, norm(output): 1.2109, norm(x): 0.2213, norm(y): 0.9913, norm:0.7290, tok/sec: 123959.50, flops:96.54, batch-reuse:1
@ 1977 train 5.2001 , allloss: 5.2008, dt: 1050.38ms, fracRes: 0.7718, norm(attn): 0.1426, norm(output): 1.2109, norm(x): 0.2235, norm(y): 0.9916, norm:0.7191, tok/sec: 124785.85, flops:97.18, batch-reuse:1
@ 1978 train 5.3521 , allloss: 5.3532, dt: 1050.44ms, fracRes: 0.7754, norm(attn): 0.1406, norm(output): 1.2109, norm(x): 0.2214, norm(y): 0.9913, norm:0.7355, tok/sec: 124777.64, flops:97.18, batch-reuse:1
@ 1979 train 5.3225 , allloss: 5.3234, dt: 1050.71ms, fracRes: 0.7769, norm(attn): 0.1396, norm(output): 1.2109, norm(x): 0.2189, norm(y): 0.9913, norm:0.6760, tok/sec: 124746.13, flops:97.15, batch-reuse:1
@ 1980 train 5.2702 , allloss: 5.2710, dt: 1051.59ms, fracRes: 0.7746, norm(attn): 0.1396, norm(output): 1.2031, norm(x): 0.2211, norm(y): 0.9913, norm:0.6962, tok/sec: 124641.40, flops:97.07, batch-reuse:1
@ 1981 train 5.2844 , allloss: 5.2855, dt: 1058.49ms, fracRes: 0.7728, norm(attn): 0.1406, norm(output): 1.2188, norm(x): 0.2257, norm(y): 0.9913, norm:0.8073, tok/sec: 123828.75, flops:96.44, batch-reuse:1
@ 1982 train 5.2100 , allloss: 5.2107, dt: 1061.82ms, fracRes: 0.7684, norm(attn): 0.1436, norm(output): 1.2188, norm(x): 0.2336, norm(y): 0.9915, norm:0.7514, tok/sec: 123440.49, flops:96.14, batch-reuse:1
@ 1983 train 5.2945 , allloss: 5.2953, dt: 1051.82ms, fracRes: 0.7717, norm(attn): 0.1426, norm(output): 1.2188, norm(x): 0.2290, norm(y): 0.9913, norm:0.7531, tok/sec: 124614.84, flops:97.05, batch-reuse:1
@ 1984 train 5.2428 , allloss: 5.2435, dt: 1056.19ms, fracRes: 0.7713, norm(attn): 0.1475, norm(output): 1.2266, norm(x): 0.2316, norm(y): 0.9914, norm:0.8226, tok/sec: 124099.02, flops:96.65, batch-reuse:1
@ 1985 train 5.2651 , allloss: 5.2658, dt: 1082.62ms, fracRes: 0.7722, norm(attn): 0.1455, norm(output): 1.2266, norm(x): 0.2281, norm(y): 0.9914, norm:0.6909, tok/sec: 121068.82, flops:94.29, batch-reuse:1
@ 1986 train 5.3283 , allloss: 5.3290, dt: 1054.13ms, fracRes: 0.7742, norm(attn): 0.1426, norm(output): 1.2188, norm(x): 0.2231, norm(y): 0.9912, norm:0.6669, tok/sec: 124341.22, flops:96.84, batch-reuse:1
@ 1987 train 5.3134 , allloss: 5.3141, dt: 1056.12ms, fracRes: 0.7745, norm(attn): 0.1416, norm(output): 1.2188, norm(x): 0.2231, norm(y): 0.9911, norm:0.6968, tok/sec: 124106.70, flops:96.65, batch-reuse:1
@ 1988 train 5.2391 , allloss: 5.2397, dt: 1046.80ms, fracRes: 0.7697, norm(attn): 0.1436, norm(output): 1.2344, norm(x): 0.2284, norm(y): 0.9913, norm:0.8012, tok/sec: 125212.57, flops:97.52, batch-reuse:1
@ 1989 train 5.2647 , allloss: 5.2655, dt: 1060.15ms, fracRes: 0.7731, norm(attn): 0.1416, norm(output): 1.2422, norm(x): 0.2242, norm(y): 0.9911, norm:0.7675, tok/sec: 123634.82, flops:96.29, batch-reuse:1
@ 1990 train 5.3092 , allloss: 5.3099, dt: 1049.71ms, fracRes: 0.7740, norm(attn): 0.1406, norm(output): 1.2422, norm(x): 0.2220, norm(y): 0.9911, norm:0.5930, tok/sec: 124865.21, flops:97.25, batch-reuse:1
@ 1991 train 5.1843 , allloss: 5.1850, dt: 1050.19ms, fracRes: 0.7714, norm(attn): 0.1436, norm(output): 1.2422, norm(x): 0.2263, norm(y): 0.9912, norm:0.7192, tok/sec: 124807.64, flops:97.20, batch-reuse:1
@ 1992 train 5.2609 , allloss: 5.2617, dt: 1057.19ms, fracRes: 0.7715, norm(attn): 0.1436, norm(output): 1.2500, norm(x): 0.2268, norm(y): 0.9911, norm:1.0492, tok/sec: 123981.81, flops:96.56, batch-reuse:1
@ 1993 train 5.1929 , allloss: 5.1936, dt: 1046.23ms, fracRes: 0.7702, norm(attn): 0.1445, norm(output): 1.2422, norm(x): 0.2294, norm(y): 0.9913, norm:1.0009, tok/sec: 125280.34, flops:97.57, batch-reuse:1
@ 1994 train 5.2202 , allloss: 5.2209, dt: 1056.46ms, fracRes: 0.7712, norm(attn): 0.1445, norm(output): 1.2422, norm(x): 0.2288, norm(y): 0.9912, norm:0.8309, tok/sec: 124067.57, flops:96.62, batch-reuse:1
@ 1995 train 5.2023 , allloss: 5.2030, dt: 1052.75ms, fracRes: 0.7703, norm(attn): 0.1445, norm(output): 1.2500, norm(x): 0.2285, norm(y): 0.9911, norm:0.7678, tok/sec: 124504.10, flops:96.96, batch-reuse:1
@ 1996 train 5.2503 , allloss: 5.2513, dt: 1054.60ms, fracRes: 0.7732, norm(attn): 0.1416, norm(output): 1.2500, norm(x): 0.2255, norm(y): 0.9910, norm:0.7146, tok/sec: 124285.62, flops:96.79, batch-reuse:1
@ 1997 train 5.1534 , allloss: 5.1541, dt: 1053.24ms, fracRes: 0.7697, norm(attn): 0.1445, norm(output): 1.2500, norm(x): 0.2328, norm(y): 0.9910, norm:0.9197, tok/sec: 124446.55, flops:96.92, batch-reuse:1
@ 1998 train 5.1790 , allloss: 5.1797, dt: 1066.34ms, fracRes: 0.7709, norm(attn): 0.1445, norm(output): 1.2422, norm(x): 0.2279, norm(y): 0.9910, norm:1.1813, tok/sec: 122917.84, flops:95.73, batch-reuse:1
@ 1999 train 5.1160 , allloss: 5.1168, dt: 1062.11ms, fracRes: 0.7713, norm(attn): 0.1455, norm(output): 1.2500, norm(x): 0.2269, norm(y): 0.9910, norm:1.0945, tok/sec: 123407.63, flops:96.11, batch-reuse:1
@ 2000 val 5.3229
@ 2000 train 5.2034 , allloss: 5.2042, dt: 1576.05ms, fracRes: 0.7716, norm(attn): 0.1475, norm(output): 1.2500, norm(x): 0.2279, norm(y): 0.9911, norm:1.0797, tok/sec: 83165.00, flops:64.77, batch-reuse:1
@ 2001 train 5.2493 , allloss: 5.2501, dt: 1048.84ms, fracRes: 0.7738, norm(attn): 0.1445, norm(output): 1.2500, norm(x): 0.2225, norm(y): 0.9910, norm:0.7475, tok/sec: 124967.99, flops:97.33, batch-reuse:1
@ 2002 train 5.2565 , allloss: 5.2574, dt: 1049.05ms, fracRes: 0.7726, norm(attn): 0.1465, norm(output): 1.2500, norm(x): 0.2256, norm(y): 0.9909, norm:0.8718, tok/sec: 124943.94, flops:97.31, batch-reuse:1
@ 2003 train 5.2509 , allloss: 5.2516, dt: 1057.55ms, fracRes: 0.7718, norm(attn): 0.1445, norm(output): 1.2422, norm(x): 0.2273, norm(y): 0.9909, norm:0.8289, tok/sec: 123938.74, flops:96.52, batch-reuse:1
@ 2004 train 5.2670 , allloss: 5.2678, dt: 1051.95ms, fracRes: 0.7702, norm(attn): 0.1426, norm(output): 1.2422, norm(x): 0.2320, norm(y): 0.9909, norm:0.8268, tok/sec: 124598.94, flops:97.04, batch-reuse:1
@ 2005 train 5.1114 , allloss: 5.1120, dt: 1055.73ms, fracRes: 0.7691, norm(attn): 0.1445, norm(output): 1.2500, norm(x): 0.2330, norm(y): 0.9910, norm:0.6845, tok/sec: 124153.45, flops:96.69, batch-reuse:1
@ 2006 train 5.2785 , allloss: 5.2793, dt: 1052.32ms, fracRes: 0.7735, norm(attn): 0.1426, norm(output): 1.2500, norm(x): 0.2276, norm(y): 0.9907, norm:0.6987, tok/sec: 124555.04, flops:97.00, batch-reuse:1
@ 2007 train 5.1293 , allloss: 5.1299, dt: 1060.37ms, fracRes: 0.7700, norm(attn): 0.1426, norm(output): 1.2500, norm(x): 0.2296, norm(y): 0.9909, norm:0.7346, tok/sec: 123609.38, flops:96.27, batch-reuse:1
@ 2008 train 5.1591 , allloss: 5.1598, dt: 1055.31ms, fracRes: 0.7716, norm(attn): 0.1426, norm(output): 1.2422, norm(x): 0.2256, norm(y): 0.9908, norm:0.7617, tok/sec: 124202.65, flops:96.73, batch-reuse:1
@ 2009 train 5.1576 , allloss: 5.1586, dt: 1053.09ms, fracRes: 0.7735, norm(attn): 0.1475, norm(output): 1.2422, norm(x): 0.2241, norm(y): 0.9908, norm:0.7552, tok/sec: 124463.76, flops:96.93, batch-reuse:1
@ 2010 train 5.2339 , allloss: 5.2347, dt: 1061.82ms, fracRes: 0.7728, norm(attn): 0.1445, norm(output): 1.2500, norm(x): 0.2269, norm(y): 0.9908, norm:0.7209, tok/sec: 123441.46, flops:96.14, batch-reuse:1
@ 2011 train 5.1449 , allloss: 5.1462, dt: 1058.61ms, fracRes: 0.7823, norm(attn): 0.1436, norm(output): 1.2266, norm(x): 0.2162, norm(y): 0.9905, norm:0.7023, tok/sec: 123814.64, flops:96.43, batch-reuse:1
@ 2012 train 5.1170 , allloss: 5.1179, dt: 1051.96ms, fracRes: 0.7740, norm(attn): 0.1455, norm(output): 1.2500, norm(x): 0.2273, norm(y): 0.9908, norm:0.6520, tok/sec: 124597.87, flops:97.04, batch-reuse:1
@ 2013 train 5.1377 , allloss: 5.1386, dt: 1046.45ms, fracRes: 0.7718, norm(attn): 0.1445, norm(output): 1.2500, norm(x): 0.2285, norm(y): 0.9908, norm:0.6353, tok/sec: 125253.77, flops:97.55, batch-reuse:1
@ 2014 train 5.1709 , allloss: 5.1719, dt: 1050.80ms, fracRes: 0.7707, norm(attn): 0.1455, norm(output): 1.2578, norm(x): 0.2321, norm(y): 0.9907, norm:0.8114, tok/sec: 124735.23, flops:97.14, batch-reuse:1
@ 2015 train 5.1074 , allloss: 5.1083, dt: 1060.47ms, fracRes: 0.7707, norm(attn): 0.1445, norm(output): 1.2500, norm(x): 0.2292, norm(y): 0.9908, norm:0.8952, tok/sec: 123597.93, flops:96.26, batch-reuse:1
@ 2016 train 5.1672 , allloss: 5.1679, dt: 1048.41ms, fracRes: 0.7690, norm(attn): 0.1455, norm(output): 1.2578, norm(x): 0.2322, norm(y): 0.9908, norm:1.0463, tok/sec: 125019.20, flops:97.37, batch-reuse:1
@ 2017 train 5.1938 , allloss: 5.1946, dt: 1055.06ms, fracRes: 0.7723, norm(attn): 0.1475, norm(output): 1.2500, norm(x): 0.2290, norm(y): 0.9908, norm:0.9422, tok/sec: 124232.34, flops:96.75, batch-reuse:1
@ 2018 train 5.2345 , allloss: 5.2356, dt: 1054.69ms, fracRes: 0.7708, norm(attn): 0.1484, norm(output): 1.2500, norm(x): 0.2338, norm(y): 0.9908, norm:0.6674, tok/sec: 124275.70, flops:96.79, batch-reuse:1
@ 2019 train 5.2398 , allloss: 5.2408, dt: 1048.27ms, fracRes: 0.7734, norm(attn): 0.1465, norm(output): 1.2500, norm(x): 0.2287, norm(y): 0.9907, norm:0.7720, tok/sec: 125037.03, flops:97.38, batch-reuse:1
@ 2020 train 5.1186 , allloss: 5.1194, dt: 1044.25ms, fracRes: 0.7692, norm(attn): 0.1455, norm(output): 1.2656, norm(x): 0.2318, norm(y): 0.9908, norm:0.7154, tok/sec: 125517.49, flops:97.75, batch-reuse:1
@ 2021 train 5.1366 , allloss: 5.1375, dt: 1042.08ms, fracRes: 0.7702, norm(attn): 0.1455, norm(output): 1.2578, norm(x): 0.2299, norm(y): 0.9907, norm:0.7829, tok/sec: 125779.02, flops:97.96, batch-reuse:1
@ 2022 train 5.1963 , allloss: 5.1972, dt: 1057.16ms, fracRes: 0.7694, norm(attn): 0.1436, norm(output): 1.2734, norm(x): 0.2300, norm(y): 0.9906, norm:0.7158, tok/sec: 123984.61, flops:96.56, batch-reuse:1
@ 2023 train 5.1969 , allloss: 5.1980, dt: 1051.63ms, fracRes: 0.7724, norm(attn): 0.1426, norm(output): 1.2656, norm(x): 0.2294, norm(y): 0.9905, norm:0.6620, tok/sec: 124637.44, flops:97.07, batch-reuse:1
@ 2024 train 5.0942 , allloss: 5.0949, dt: 1059.85ms, fracRes: 0.7674, norm(attn): 0.1465, norm(output): 1.2578, norm(x): 0.2349, norm(y): 0.9907, norm:0.7158, tok/sec: 123670.72, flops:96.32, batch-reuse:1
@ 2025 train 5.2141 , allloss: 5.2150, dt: 1066.55ms, fracRes: 0.7690, norm(attn): 0.1445, norm(output): 1.2734, norm(x): 0.2317, norm(y): 0.9905, norm:0.7766, tok/sec: 122893.25, flops:95.71, batch-reuse:1
@ 2026 train 5.1549 , allloss: 5.1556, dt: 1056.02ms, fracRes: 0.7691, norm(attn): 0.1455, norm(output): 1.2656, norm(x): 0.2320, norm(y): 0.9906, norm:0.7423, tok/sec: 124118.63, flops:96.66, batch-reuse:1
@ 2027 train 5.1613 , allloss: 5.1620, dt: 1063.48ms, fracRes: 0.7682, norm(attn): 0.1455, norm(output): 1.2812, norm(x): 0.2329, norm(y): 0.9906, norm:0.7645, tok/sec: 123248.74, flops:95.99, batch-reuse:1
@ 2028 train 5.5027 , allloss: 5.5041, dt: 1062.61ms, fracRes: 0.7784, norm(attn): 0.1426, norm(output): 1.2578, norm(x): 0.2180, norm(y): 0.9904, norm:0.8776, tok/sec: 123348.90, flops:96.06, batch-reuse:1
@ 2029 train 5.2893 , allloss: 5.2906, dt: 1079.68ms, fracRes: 0.7749, norm(attn): 0.1455, norm(output): 1.2656, norm(x): 0.2207, norm(y): 0.9904, norm:1.9517, tok/sec: 121399.47, flops:94.55, batch-reuse:1
@ 2030 train 5.0109 , allloss: 5.0118, dt: 1055.27ms, fracRes: 0.7700, norm(attn): 0.1465, norm(output): 1.2656, norm(x): 0.2300, norm(y): 0.9906, norm:0.8225, tok/sec: 124207.59, flops:96.73, batch-reuse:1
@ 2031 train 5.0896 , allloss: 5.0910, dt: 1060.39ms, fracRes: 0.7742, norm(attn): 0.1445, norm(output): 1.2656, norm(x): 0.2263, norm(y): 0.9904, norm:0.9519, tok/sec: 123607.07, flops:96.27, batch-reuse:1
@ 2032 train 5.1061 , allloss: 5.1071, dt: 1070.56ms, fracRes: 0.7697, norm(attn): 0.1445, norm(output): 1.2578, norm(x): 0.2314, norm(y): 0.9905, norm:1.0815, tok/sec: 122433.56, flops:95.35, batch-reuse:1
@ 2033 train 5.0964 , allloss: 5.0974, dt: 1057.70ms, fracRes: 0.7706, norm(attn): 0.1484, norm(output): 1.2578, norm(x): 0.2318, norm(y): 0.9904, norm:0.7744, tok/sec: 123922.20, flops:96.51, batch-reuse:1
@ 2034 train 5.1022 , allloss: 5.1030, dt: 1062.14ms, fracRes: 0.7688, norm(attn): 0.1484, norm(output): 1.2656, norm(x): 0.2331, norm(y): 0.9904, norm:0.7497, tok/sec: 123403.42, flops:96.11, batch-reuse:1
@ 2035 train 5.0969 , allloss: 5.0979, dt: 1047.59ms, fracRes: 0.7706, norm(attn): 0.1475, norm(output): 1.2656, norm(x): 0.2310, norm(y): 0.9904, norm:0.8340, tok/sec: 125117.48, flops:97.44, batch-reuse:1
@ 2036 train 5.1044 , allloss: 5.1052, dt: 1044.82ms, fracRes: 0.7678, norm(attn): 0.1475, norm(output): 1.2656, norm(x): 0.2346, norm(y): 0.9904, norm:0.7258, tok/sec: 125449.78, flops:97.70, batch-reuse:1
@ 2037 train 5.1434 , allloss: 5.1446, dt: 1046.53ms, fracRes: 0.7723, norm(attn): 0.1436, norm(output): 1.2656, norm(x): 0.2295, norm(y): 0.9903, norm:0.7293, tok/sec: 125244.12, flops:97.54, batch-reuse:1
@ 2038 train 5.1280 , allloss: 5.1291, dt: 1042.93ms, fracRes: 0.7713, norm(attn): 0.1455, norm(output): 1.2656, norm(x): 0.2306, norm(y): 0.9903, norm:0.7553, tok/sec: 125676.66, flops:97.88, batch-reuse:1
@ 2039 train 5.2222 , allloss: 5.2235, dt: 1054.54ms, fracRes: 0.7731, norm(attn): 0.1445, norm(output): 1.2578, norm(x): 0.2272, norm(y): 0.9902, norm:0.7267, tok/sec: 124293.52, flops:96.80, batch-reuse:1
@ 2040 train 5.2738 , allloss: 5.2750, dt: 1043.18ms, fracRes: 0.7691, norm(attn): 0.1455, norm(output): 1.2734, norm(x): 0.2317, norm(y): 0.9902, norm:0.6933, tok/sec: 125646.70, flops:97.85, batch-reuse:1
@ 2041 train 5.2379 , allloss: 5.2392, dt: 1058.11ms, fracRes: 0.7698, norm(attn): 0.1465, norm(output): 1.2656, norm(x): 0.2310, norm(y): 0.9901, norm:0.7371, tok/sec: 123874.26, flops:96.47, batch-reuse:1
@ 2042 train 5.3705 , allloss: 5.3716, dt: 1059.67ms, fracRes: 0.7727, norm(attn): 0.1426, norm(output): 1.2500, norm(x): 0.2264, norm(y): 0.9900, norm:0.7928, tok/sec: 123690.98, flops:96.33, batch-reuse:1
@ 2043 train 5.2870 , allloss: 5.2880, dt: 1046.60ms, fracRes: 0.7688, norm(attn): 0.1445, norm(output): 1.2812, norm(x): 0.2309, norm(y): 0.9901, norm:0.8054, tok/sec: 125236.42, flops:97.53, batch-reuse:1
@ 2044 train 5.3988 , allloss: 5.3998, dt: 1058.85ms, fracRes: 0.7715, norm(attn): 0.1436, norm(output): 1.2734, norm(x): 0.2280, norm(y): 0.9900, norm:0.8387, tok/sec: 123787.09, flops:96.41, batch-reuse:1
@ 2045 train 5.2807 , allloss: 5.2816, dt: 1047.98ms, fracRes: 0.7713, norm(attn): 0.1465, norm(output): 1.2656, norm(x): 0.2283, norm(y): 0.9901, norm:0.7391, tok/sec: 125070.65, flops:97.41, batch-reuse:1
@ 2046 train 5.3700 , allloss: 5.3709, dt: 1055.37ms, fracRes: 0.7727, norm(attn): 0.1445, norm(output): 1.2734, norm(x): 0.2263, norm(y): 0.9899, norm:0.9231, tok/sec: 124195.77, flops:96.72, batch-reuse:1
@ 2047 train 5.2993 , allloss: 5.3003, dt: 1065.85ms, fracRes: 0.7743, norm(attn): 0.1475, norm(output): 1.2656, norm(x): 0.2221, norm(y): 0.9900, norm:0.8487, tok/sec: 122974.45, flops:95.77, batch-reuse:1
@ 2048 train 5.2923 , allloss: 5.2975, dt: 1041.93ms, fracRes: 0.7746, norm(attn): 0.1445, norm(output): 1.2656, norm(x): 0.2235, norm(y): 0.9900, norm:1.0561, tok/sec: 125797.32, flops:97.97, batch-reuse:1
@ 2049 train 5.3389 , allloss: 5.3397, dt: 1057.97ms, fracRes: 0.7729, norm(attn): 0.1426, norm(output): 1.2734, norm(x): 0.2290, norm(y): 0.9899, norm:1.1192, tok/sec: 123890.53, flops:96.49, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0001,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -9.8750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -7.3750, -8.3125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -7.0000, -7.4062, -6.2812,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189, -8.9375, -7.0312, -6.0000, -8.4375,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -8.8750, -9.5625, -8.3125, -8.8750, -8.8125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918, -8.5625, -9.8125, -8.5625, -8.0000, -8.3750, -8.1875,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, -8.9375, -9.2500, -8.8125, -8.8125, -8.5000, -8.6875, -7.6562,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -9.3125, -9.5625, -8.5000, -8.4375, -8.5000, -7.8438, -7.5938, -8.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052, -7.2500, -7.7812, -7.1562, -6.7188, -6.6250, -5.8125, -6.1875, -7.1250, -4.8438,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, -7.4375, -8.4375, -7.5938, -7.6562, -7.7500, -7.3750, -6.6250, -7.0312, -4.7812, -4.4688,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -6.0312, -6.2188, -5.4062, -5.1250, -4.5000, -4.5312, -5.0312, -5.5625, -4.1250, -4.4062, -4.1562,    -inf,    -inf,    -inf],
          [ 5.1299, -6.7812, -6.0312, -6.4375, -6.2500, -6.0312, -6.5000, -5.5625, -7.3438, -4.1250, -6.0000, -4.7812, -4.9688,    -inf,    -inf],
          [ 5.2781, -6.8125, -7.9062, -7.5312, -6.6250, -7.0312, -6.9375, -6.4688, -7.2500, -4.5312, -5.6875, -4.4375, -5.1562, -5.4375,    -inf],
          [ 5.4161, -6.8750, -8.0000, -7.3125, -6.5312, -6.7812, -6.9375, -6.5000, -7.0938, -5.0000, -5.3750, -4.8750, -5.1250, -5.3125, -6.5000]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9987],
        [0.9987],
        [0.9961],
        [0.9990],
        [0.9997],
        [0.9990],
        [0.9997],
        [0.9990],
        [0.9993],
        [0.9990],
        [0.9993],
        [0.9997],
        [0.9997]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0007,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0001,     0.0001,     0.0002,     0.0001,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0001,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863,  -6.5938,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972,  -5.4375,  -5.4375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726,  -4.8438,  -4.5312,  -4.6562,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -6.5625,  -6.0938,  -5.7812,  -6.7188,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -6.5312,  -5.4688,  -5.7500,  -7.1875,  -7.2812,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,  -7.5000,  -5.5625,  -7.2188,  -7.5625,  -7.2812,  -7.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589,  -8.4375,  -7.3438,  -8.8125,  -8.9375,  -8.8750,  -8.8125, -10.8125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -7.9062,  -6.5312,  -7.4375,  -8.4375,  -7.9688,  -7.4375,  -8.3125,  -8.5625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -6.3125,  -6.0938,  -6.0625,  -6.2500,  -6.2188,  -5.8438,  -6.9688,  -6.8125,  -6.3438,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -5.4375,  -4.4375,  -4.7188,  -4.7188,  -4.3438,  -3.8438,  -4.5312,  -5.2500,  -4.6250,  -3.9062,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -4.8438,  -5.1250,  -5.5312,  -5.0938,  -4.7812,  -4.6562,  -6.5312,  -5.3125,  -4.4062,  -2.9062,  -4.6562,     -inf,     -inf,     -inf],
          [  5.1299,  -6.2812,  -5.2188,  -6.3125,  -7.5000,  -7.1875,  -7.0000,  -8.0625,  -6.8438,  -6.3125,  -3.8438,  -4.3438,  -6.6562,     -inf,     -inf],
          [  5.2781,  -7.1875,  -6.5000,  -6.9375,  -7.3438,  -7.2812,  -6.4062,  -7.2188,  -7.8125,  -6.5000,  -4.9688,  -5.4062,  -6.5000,  -7.0312,     -inf],
          [  5.4161,  -6.0312,  -6.3750,  -6.5938,  -4.5625,  -4.9688,  -4.4375,  -6.3438,  -6.1250,  -4.8750,  -3.7656,  -4.7812,  -5.0312,  -5.1562,  -5.1250]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9997],
        [0.9990],
        [0.9980],
        [0.9997],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.9997],
        [1.0000],
        [0.9997],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0002,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0002,     0.0004,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0002,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0001,     0.0002,     0.0004,     0.0001,     0.0001,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0002,     0.0000,     0.0001,     0.0000,     0.0002,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0001,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0002,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0002,     0.0001,     0.0003,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -6.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -6.1250, -7.0625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -7.5625, -6.0312, -5.6562,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189, -5.4375, -5.5000, -4.6875, -6.5312,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -4.4062, -5.0938, -4.1875, -6.1562, -5.8125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918, -5.4688, -5.9062, -4.7812, -6.0625, -5.0938, -5.9688,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, -6.8438, -6.0312, -5.5625, -7.1562, -5.2812, -7.7812, -7.0312,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -4.4375, -4.8438, -4.1250, -6.3125, -5.7812, -5.6875, -5.0312, -7.8750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052, -4.3750, -4.6562, -4.4375, -4.0938, -3.3594, -5.0312, -5.2188, -4.3125, -4.0938,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, -4.0312, -4.5000, -3.5625, -5.3125, -4.8750, -5.1250, -3.9531, -7.2188, -3.6719, -4.3750,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -5.5312, -5.3438, -5.1875, -5.7812, -4.2188, -6.7188, -6.4375, -4.7500, -4.8125, -5.1562, -5.7188,    -inf,    -inf,    -inf],
          [ 5.1299, -4.9062, -5.0000, -4.4062, -5.5625, -4.1875, -5.6562, -5.1875, -4.7812, -3.9531, -4.6875, -4.5625, -4.1875,    -inf,    -inf],
          [ 5.2781, -3.9375, -3.8906, -3.0938, -5.1562, -4.5312, -4.8125, -4.6250, -6.6250, -3.1875, -3.7188, -2.6875, -3.5156, -4.9688,    -inf],
          [ 5.4161, -4.3125, -5.4688, -5.4062, -5.3438, -4.6250, -5.9062, -5.5000, -6.1250, -5.3125, -5.3125, -5.5625, -4.2188, -4.4375, -6.3750]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9710],
        [0.9873],
        [0.9883],
        [0.9951],
        [0.9977],
        [0.9974],
        [0.9958],
        [0.9984],
        [0.9971],
        [0.9977],
        [0.9967],
        [0.9964],
        [0.9971],
        [0.9977]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8867,     0.1147,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0051,     0.0165,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0006,     0.0028,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.2676,     0.0452,     0.0659,     0.6211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.3496,     0.0378,     0.0845,     0.3555,     0.1719,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3652,     0.1748,     0.0679,     0.1089,     0.1260,     0.1094,     0.0479,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.2695,     0.0332,     0.0413,     0.3516,     0.2002,     0.0571,     0.0439,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.2119,     0.0369,     0.0415,     0.4902,     0.1787,     0.0245,     0.0132,     0.0024,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2188,     0.2305,     0.0674,     0.1299,     0.1074,     0.0913,     0.0972,     0.0503,     0.0066,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0070,     0.1875,     0.0425,     0.0515,     0.4434,     0.1777,     0.0221,     0.0142,     0.0037,     0.0001,     0.0513,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0008,     0.0015,     0.0023,     0.0001,     0.0001,     0.0010,     0.0004,     0.0004,     0.0020,     0.0003,     0.0012,     0.0000,     0.0000,     0.0000],
        [    0.1973,     0.1504,     0.0845,     0.0767,     0.2422,     0.1719,     0.0334,     0.0176,     0.0041,     0.0019,     0.0171,     0.0007,     0.0025,     0.0000,     0.0000],
        [    0.0018,     0.1846,     0.0291,     0.0330,     0.4922,     0.1748,     0.0211,     0.0117,     0.0020,     0.0000,     0.0471,     0.0000,     0.0024,     0.0013,     0.0000],
        [    0.9961,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0006,     0.0000,     0.0008,     0.0000,     0.0000,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -0.6602,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -3.0469, -1.8828,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -4.5938, -3.1250, -3.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  8.7500,  6.9688,  7.3438,  9.5625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, 10.0000,  7.7812,  8.5625, 10.0000,  9.2500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  3.1562,  2.2031,  2.6875,  2.8281,  2.6875,  1.8594,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  8.8750,  6.7812,  7.0000,  9.1250,  8.5625,  7.3438,  7.0625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  9.5625,  7.8438,  7.9688, 10.4375,  9.4375,  7.4375,  6.8125,  5.1250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  4.6562,  3.4219,  4.0625,  3.8906,  3.7188,  3.7812,  3.1250,  1.1016, -0.2637,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  8.0625,  6.5938,  6.7812,  8.9375,  8.0000,  5.9375,  5.5000,  4.1562,  0.5742,  6.7812,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -2.1406, -1.5234, -1.1094, -4.6875, -4.4375, -1.9297, -2.7812, -2.9375, -1.2344, -3.2500, -1.7812,    -inf,    -inf,    -inf],
          [ 5.1299,  4.8438,  4.2812,  4.1875,  5.3438,  5.0000,  3.3594,  2.7031,  1.2500,  0.4570,  2.6719, -0.5156,  0.7422,    -inf,    -inf],
          [ 5.2781,  9.9375,  8.0625,  8.1875, 10.9375,  9.8750,  7.7812,  7.1875,  5.4062,  0.9023,  8.5625, -1.2891,  5.5625,  4.9688,    -inf],
          [ 5.4161, -5.0938, -3.6250, -3.2969, -8.3750, -7.9375, -4.5000, -6.0000, -5.7812, -2.0469, -7.1562, -1.6953, -5.7812, -5.2500, -2.1562]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7911],
        [0.8748],
        [0.8785],
        [0.0187],
        [0.0075],
        [0.3296],
        [0.1655],
        [0.0199],
        [0.4363],
        [0.0139],
        [0.8519],
        [0.1256],
        [0.0235],
        [0.8376]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7383,     0.2617,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0123,     0.0135,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0101,     0.0051,     0.0028,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0342,     0.0098,     0.0442,     0.0157,     0.8945,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0198,     0.0259,     0.0098,     0.0127,     0.5703,     0.3613,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1924,     0.0089,     0.0073,     0.0038,     0.1216,     0.2266,     0.4395,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3242,     0.0056,     0.0028,     0.0022,     0.0398,     0.1030,     0.3223,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0374,     0.0031,     0.0151,     0.0077,     0.2539,     0.0942,     0.0437,     0.0245,     0.5195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3848,     0.0068,     0.0082,     0.0060,     0.0518,     0.1777,     0.0938,     0.0559,     0.2109,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0615,     0.0035,     0.0084,     0.0041,     0.1250,     0.0830,     0.1045,     0.0311,     0.3066,     0.0007,     0.2715,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9531,     0.0013,     0.0003,     0.0005,     0.0012,     0.0071,     0.0132,     0.0077,     0.0028,     0.0007,     0.0119,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2500,     0.0033,     0.0025,     0.0020,     0.0237,     0.0554,     0.1582,     0.0522,     0.0645,     0.0003,     0.2080,     0.0001,     0.1797,     0.0000,     0.0000],
        [    0.0454,     0.0015,     0.0083,     0.0047,     0.1196,     0.0410,     0.0187,     0.0090,     0.2432,     0.0008,     0.1787,     0.0046,     0.0243,     0.3008,     0.0000],
        [    0.7617,     0.0014,     0.0017,     0.0007,     0.0070,     0.0311,     0.0275,     0.0140,     0.0300,     0.0008,     0.0432,     0.0004,     0.0376,     0.0405,     0.0007]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863,  0.3398,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -2.1719, -2.0781,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -1.8125, -2.5000, -3.0938,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  1.9688,  3.4844,  2.4531,  6.5000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  3.8438,  2.8906,  3.1406,  6.9375,  6.5000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  0.8203,  0.6172, -0.0312,  3.4375,  4.0625,  4.7188,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  0.0879, -0.5977, -0.8281,  2.0625,  3.0156,  4.1562,  3.6719,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  1.9062,  3.5000,  2.8281,  6.3125,  5.3438,  4.5625,  3.9844,  7.0312,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  0.5586,  0.7539,  0.4316,  2.5938,  3.8281,  3.1875,  2.6719,  4.0000,  0.0415,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  1.9297,  2.7812,  2.0781,  5.5000,  5.0938,  5.3125,  4.0938,  6.3750,  0.3281,  6.2812,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -1.6328, -3.2500, -2.6250, -1.6953,  0.0737,  0.6914,  0.1504, -0.8711, -2.2969,  0.5820, -5.5312,    -inf,    -inf,    -inf],
          [ 5.1299,  0.8047,  0.5078,  0.3105,  2.7656,  3.6250,  4.6562,  3.5625,  3.7656, -1.7500,  4.9375, -2.4219,  4.7812,    -inf,    -inf],
          [ 5.2781,  1.8984,  3.5781,  3.0156,  6.2500,  5.1875,  4.4062,  3.6562,  6.9688,  1.1797,  6.6562,  3.0000,  4.6562,  7.1562,    -inf],
          [ 5.4161, -0.8633, -0.6914, -1.6328,  0.7227,  2.2031,  2.0781,  1.4062,  2.1719, -1.4297,  2.5312, -2.0312,  2.3906,  2.4688, -1.6562]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.6204],
        [0.6897],
        [0.6375],
        [0.3542],
        [0.2203],
        [0.3133],
        [0.3492],
        [0.1932],
        [0.3333],
        [0.2251],
        [0.5023],
        [0.2688],
        [0.1686],
        [0.3643]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.1187 not:0.0277iscovered:0.2158 and:0.1826atoes:0.2441,:0.3613 also:0.0518
:0.1650)


------
		( not:0.0277iscovered:0.2158 and:0.1826atoes:0.2441,:0.3613 also:0.0518
:0.1650-:0.1162)
- The New York Times
- "The New York Times"
-
@ 2050 train 5.2744 , allloss: 5.2754, dt: 1296.20ms, fracRes: 0.7720, norm(attn): 0.1455, norm(output): 1.2656, norm(x): 0.2301, norm(y): 0.9898, norm:0.8271, tok/sec: 101120.34, flops:78.75, batch-reuse:1
@ 2051 train 5.3884 , allloss: 5.3895, dt: 1052.76ms, fracRes: 0.7738, norm(attn): 0.1436, norm(output): 1.2812, norm(x): 0.2249, norm(y): 0.9898, norm:1.0771, tok/sec: 124503.53, flops:96.96, batch-reuse:1
@ 2052 train 5.3254 , allloss: 5.3263, dt: 1044.06ms, fracRes: 0.7717, norm(attn): 0.1484, norm(output): 1.2812, norm(x): 0.2292, norm(y): 0.9899, norm:1.0553, tok/sec: 125540.33, flops:97.77, batch-reuse:1
@ 2053 train 5.3153 , allloss: 5.3163, dt: 1031.89ms, fracRes: 0.7694, norm(attn): 0.1465, norm(output): 1.2812, norm(x): 0.2332, norm(y): 0.9899, norm:0.8572, tok/sec: 127021.54, flops:98.92, batch-reuse:1
@ 2054 train 5.2704 , allloss: 5.2716, dt: 1047.83ms, fracRes: 0.7703, norm(attn): 0.1465, norm(output): 1.2891, norm(x): 0.2342, norm(y): 0.9898, norm:0.7416, tok/sec: 125088.58, flops:97.42, batch-reuse:1
@ 2055 train 5.3253 , allloss: 5.3264, dt: 1038.33ms, fracRes: 0.7738, norm(attn): 0.1445, norm(output): 1.2734, norm(x): 0.2324, norm(y): 0.9897, norm:0.7095, tok/sec: 126233.26, flops:98.31, batch-reuse:1
@ 2056 train 5.3278 , allloss: 5.3290, dt: 1049.23ms, fracRes: 0.7734, norm(attn): 0.1445, norm(output): 1.2656, norm(x): 0.2337, norm(y): 0.9896, norm:0.7540, tok/sec: 124922.07, flops:97.29, batch-reuse:1
@ 2057 train 5.3855 , allloss: 5.4140, dt: 1046.09ms, fracRes: 0.7709, norm(attn): 0.1416, norm(output): 1.2812, norm(x): 0.2388, norm(y): 0.9895, norm:0.8772, tok/sec: 125297.21, flops:97.58, batch-reuse:1
@ 2058 train 5.3632 , allloss: 5.4094, dt: 1045.66ms, fracRes: 0.7760, norm(attn): 0.1426, norm(output): 1.2812, norm(x): 0.2323, norm(y): 0.9895, norm:3.3452, tok/sec: 125348.75, flops:97.62, batch-reuse:1
@ 2059 train 5.3040 , allloss: 5.8189, dt: 1043.85ms, fracRes: 0.7713, norm(attn): 0.1504, norm(output): 1.3281, norm(x): 0.2956, norm(y): 0.9897, norm:90.1524, tok/sec: 125565.83, flops:97.79, batch-reuse:1
@ 2060 train 5.3648 , allloss: 5.3662, dt: 1047.72ms, fracRes: 0.7687, norm(attn): 0.1484, norm(output): 1.3125, norm(x): 0.2360, norm(y): 0.9898, norm:1.3545, tok/sec: 125102.53, flops:97.43, batch-reuse:1
@ 2061 train 5.3624 , allloss: 5.3639, dt: 1037.94ms, fracRes: 0.7761, norm(attn): 0.1484, norm(output): 1.2969, norm(x): 0.2257, norm(y): 0.9895, norm:0.9383, tok/sec: 126280.32, flops:98.35, batch-reuse:1
@ 2062 train 5.2817 , allloss: 5.2831, dt: 1030.69ms, fracRes: 0.7709, norm(attn): 0.1484, norm(output): 1.2969, norm(x): 0.2359, norm(y): 0.9897, norm:0.8780, tok/sec: 127169.68, flops:99.04, batch-reuse:1
@ 2063 train 5.3726 , allloss: 5.3750, dt: 1053.09ms, fracRes: 0.7736, norm(attn): 0.1455, norm(output): 1.2891, norm(x): 0.2337, norm(y): 0.9894, norm:1.0065, tok/sec: 124463.82, flops:96.93, batch-reuse:1
@ 2064 train 5.2745 , allloss: 5.2778, dt: 1047.22ms, fracRes: 0.7715, norm(attn): 0.1465, norm(output): 1.3125, norm(x): 0.2404, norm(y): 0.9895, norm:3.5049, tok/sec: 125161.54, flops:97.48, batch-reuse:1
@ 2065 train 5.9928 , allloss: 6.0016, dt: 1046.16ms, fracRes: 0.7742, norm(attn): 0.1426, norm(output): 1.2969, norm(x): 0.2355, norm(y): 0.9893, norm:1.5458, tok/sec: 125288.16, flops:97.57, batch-reuse:1
@ 2066 train 5.4368 , allloss: 5.4384, dt: 1055.80ms, fracRes: 0.7701, norm(attn): 0.1455, norm(output): 1.3047, norm(x): 0.2412, norm(y): 0.9893, norm:1.7871, tok/sec: 124144.64, flops:96.68, batch-reuse:1
@ 2067 train 5.3409 , allloss: 5.3423, dt: 1073.12ms, fracRes: 0.7717, norm(attn): 0.1465, norm(output): 1.2969, norm(x): 0.2362, norm(y): 0.9894, norm:0.9495, tok/sec: 122141.14, flops:95.12, batch-reuse:1
@ 2068 train 5.4235 , allloss: 5.4249, dt: 1047.22ms, fracRes: 0.7714, norm(attn): 0.1484, norm(output): 1.2969, norm(x): 0.2378, norm(y): 0.9894, norm:0.9044, tok/sec: 125161.60, flops:97.48, batch-reuse:1
@ 2069 train 5.4239 , allloss: 5.4261, dt: 1049.30ms, fracRes: 0.7780, norm(attn): 0.1475, norm(output): 1.2969, norm(x): 0.2270, norm(y): 0.9893, norm:3.5044, tok/sec: 124913.22, flops:97.28, batch-reuse:1
@ 2070 train 5.5315 , allloss: 5.5336, dt: 1057.37ms, fracRes: 0.7754, norm(attn): 0.1484, norm(output): 1.2969, norm(x): 0.2290, norm(y): 0.9893, norm:1.0988, tok/sec: 123960.68, flops:96.54, batch-reuse:1
@ 2071 train 5.3782 , allloss: 5.3801, dt: 1047.15ms, fracRes: 0.7757, norm(attn): 0.1504, norm(output): 1.3047, norm(x): 0.2268, norm(y): 0.9894, norm:0.9034, tok/sec: 125170.69, flops:97.48, batch-reuse:1
@ 2072 train 5.3483 , allloss: 5.3504, dt: 1046.80ms, fracRes: 0.7741, norm(attn): 0.1523, norm(output): 1.3047, norm(x): 0.2301, norm(y): 0.9894, norm:0.8108, tok/sec: 125212.34, flops:97.52, batch-reuse:1
@ 2073 train 5.3123 , allloss: 5.3141, dt: 1049.25ms, fracRes: 0.7729, norm(attn): 0.1504, norm(output): 1.2969, norm(x): 0.2310, norm(y): 0.9894, norm:0.7203, tok/sec: 124919.83, flops:97.29, batch-reuse:1
@ 2074 train 5.3450 , allloss: 5.3467, dt: 1060.36ms, fracRes: 0.7747, norm(attn): 0.1465, norm(output): 1.2812, norm(x): 0.2293, norm(y): 0.9893, norm:0.6544, tok/sec: 123610.63, flops:96.27, batch-reuse:1
@ 2075 train 5.2967 , allloss: 5.2984, dt: 1049.43ms, fracRes: 0.7712, norm(attn): 0.1494, norm(output): 1.3203, norm(x): 0.2372, norm(y): 0.9892, norm:0.9379, tok/sec: 124897.69, flops:97.27, batch-reuse:1
@ 2076 train 5.2764 , allloss: 5.2782, dt: 1048.44ms, fracRes: 0.7755, norm(attn): 0.1475, norm(output): 1.3047, norm(x): 0.2324, norm(y): 0.9892, norm:0.8676, tok/sec: 125015.62, flops:97.36, batch-reuse:1
@ 2077 train 5.3202 , allloss: 5.3220, dt: 1056.70ms, fracRes: 0.7721, norm(attn): 0.1475, norm(output): 1.3203, norm(x): 0.2378, norm(y): 0.9892, norm:0.7946, tok/sec: 124039.52, flops:96.60, batch-reuse:1
@ 2078 train 5.4629 , allloss: 5.4645, dt: 1055.87ms, fracRes: 0.7729, norm(attn): 0.1514, norm(output): 1.3125, norm(x): 0.2338, norm(y): 0.9891, norm:1.1000, tok/sec: 124136.88, flops:96.68, batch-reuse:1
@ 2079 train 5.3770 , allloss: 5.3783, dt: 1052.44ms, fracRes: 0.7691, norm(attn): 0.1504, norm(output): 1.3203, norm(x): 0.2388, norm(y): 0.9892, norm:1.1061, tok/sec: 124540.60, flops:96.99, batch-reuse:1
@ 2080 train 5.3734 , allloss: 5.3782, dt: 1046.47ms, fracRes: 0.7725, norm(attn): 0.1494, norm(output): 1.3047, norm(x): 0.2366, norm(y): 0.9891, norm:5.1877, tok/sec: 125251.71, flops:97.55, batch-reuse:1
@ 2081 train 5.4422 , allloss: 5.4439, dt: 1055.15ms, fracRes: 0.7717, norm(attn): 0.1514, norm(output): 1.2969, norm(x): 0.2404, norm(y): 0.9891, norm:1.3990, tok/sec: 124221.65, flops:96.74, batch-reuse:1
@ 2082 train 5.3310 , allloss: 5.3332, dt: 1045.64ms, fracRes: 0.7708, norm(attn): 0.1533, norm(output): 1.2969, norm(x): 0.2405, norm(y): 0.9892, norm:0.7389, tok/sec: 125350.67, flops:97.62, batch-reuse:1
@ 2083 train 5.2959 , allloss: 5.2991, dt: 1045.07ms, fracRes: 0.7759, norm(attn): 0.1494, norm(output): 1.2969, norm(x): 0.2331, norm(y): 0.9891, norm:0.7812, tok/sec: 125419.47, flops:97.68, batch-reuse:1
@ 2084 train 5.3992 , allloss: 5.4010, dt: 1050.66ms, fracRes: 0.7718, norm(attn): 0.1484, norm(output): 1.3125, norm(x): 0.2370, norm(y): 0.9890, norm:0.7818, tok/sec: 124752.50, flops:97.16, batch-reuse:1
@ 2085 train 5.3779 , allloss: 5.3791, dt: 1050.37ms, fracRes: 0.7716, norm(attn): 0.1484, norm(output): 1.3203, norm(x): 0.2395, norm(y): 0.9891, norm:0.9093, tok/sec: 124786.45, flops:97.18, batch-reuse:1
@ 2086 train 5.2545 , allloss: 5.2559, dt: 1041.75ms, fracRes: 0.7744, norm(attn): 0.1465, norm(output): 1.3125, norm(x): 0.2346, norm(y): 0.9889, norm:0.8571, tok/sec: 125819.38, flops:97.99, batch-reuse:1
@ 2087 train 5.2785 , allloss: 5.2799, dt: 1051.18ms, fracRes: 0.7736, norm(attn): 0.1465, norm(output): 1.3203, norm(x): 0.2351, norm(y): 0.9889, norm:1.0000, tok/sec: 124690.79, flops:97.11, batch-reuse:1
@ 2088 train 5.3607 , allloss: 5.3622, dt: 1038.85ms, fracRes: 0.7727, norm(attn): 0.1504, norm(output): 1.3047, norm(x): 0.2364, norm(y): 0.9890, norm:1.0031, tok/sec: 126170.62, flops:98.26, batch-reuse:1
@ 2089 train 5.2864 , allloss: 5.2878, dt: 1042.83ms, fracRes: 0.7736, norm(attn): 0.1533, norm(output): 1.3125, norm(x): 0.2335, norm(y): 0.9890, norm:0.8143, tok/sec: 125688.92, flops:97.89, batch-reuse:1
@ 2090 train 5.3053 , allloss: 5.3066, dt: 1058.44ms, fracRes: 0.7759, norm(attn): 0.1514, norm(output): 1.3125, norm(x): 0.2310, norm(y): 0.9888, norm:0.8331, tok/sec: 123834.50, flops:96.44, batch-reuse:1
@ 2091 train 5.2968 , allloss: 5.2982, dt: 1066.34ms, fracRes: 0.7732, norm(attn): 0.1523, norm(output): 1.3203, norm(x): 0.2367, norm(y): 0.9889, norm:0.6937, tok/sec: 122918.00, flops:95.73, batch-reuse:1
@ 2092 train 5.3293 , allloss: 5.3307, dt: 1046.01ms, fracRes: 0.7766, norm(attn): 0.1504, norm(output): 1.3125, norm(x): 0.2306, norm(y): 0.9887, norm:0.7835, tok/sec: 125306.38, flops:97.59, batch-reuse:1
@ 2093 train 5.2349 , allloss: 5.2366, dt: 1064.45ms, fracRes: 0.7702, norm(attn): 0.1504, norm(output): 1.3438, norm(x): 0.2401, norm(y): 0.9889, norm:0.6160, tok/sec: 123136.16, flops:95.90, batch-reuse:1
@ 2094 train 5.2741 , allloss: 5.2754, dt: 1067.09ms, fracRes: 0.7737, norm(attn): 0.1504, norm(output): 1.3359, norm(x): 0.2376, norm(y): 0.9887, norm:0.6929, tok/sec: 122831.49, flops:95.66, batch-reuse:1
@ 2095 train 5.1707 , allloss: 5.1718, dt: 1064.67ms, fracRes: 0.7700, norm(attn): 0.1514, norm(output): 1.3594, norm(x): 0.2432, norm(y): 0.9889, norm:0.6127, tok/sec: 123110.93, flops:95.88, batch-reuse:1
@ 2096 train 5.3381 , allloss: 5.3393, dt: 1046.71ms, fracRes: 0.7713, norm(attn): 0.1484, norm(output): 1.3516, norm(x): 0.2427, norm(y): 0.9887, norm:0.7383, tok/sec: 125222.61, flops:97.52, batch-reuse:1
@ 2097 train 5.2143 , allloss: 5.2153, dt: 1043.24ms, fracRes: 0.7690, norm(attn): 0.1533, norm(output): 1.3594, norm(x): 0.2471, norm(y): 0.9889, norm:0.8149, tok/sec: 125638.86, flops:97.85, batch-reuse:1
@ 2098 train 5.1826 , allloss: 5.1836, dt: 1057.21ms, fracRes: 0.7700, norm(attn): 0.1553, norm(output): 1.3594, norm(x): 0.2466, norm(y): 0.9888, norm:0.8183, tok/sec: 123979.13, flops:96.56, batch-reuse:1
@ 2099 train 5.2593 , allloss: 5.2603, dt: 1042.36ms, fracRes: 0.7701, norm(attn): 0.1523, norm(output): 1.3594, norm(x): 0.2433, norm(y): 0.9888, norm:0.7586, tok/sec: 125745.33, flops:97.93, batch-reuse:1
@ 2100 train 5.2316 , allloss: 5.2326, dt: 1044.27ms, fracRes: 0.7703, norm(attn): 0.1504, norm(output): 1.3594, norm(x): 0.2410, norm(y): 0.9888, norm:0.6798, tok/sec: 125515.69, flops:97.75, batch-reuse:1
@ 2101 train 5.1714 , allloss: 5.1723, dt: 1058.61ms, fracRes: 0.7683, norm(attn): 0.1523, norm(output): 1.3594, norm(x): 0.2462, norm(y): 0.9888, norm:0.5964, tok/sec: 123814.61, flops:96.43, batch-reuse:1
@ 2102 train 5.2248 , allloss: 5.2258, dt: 1041.68ms, fracRes: 0.7713, norm(attn): 0.1504, norm(output): 1.3516, norm(x): 0.2405, norm(y): 0.9887, norm:0.6951, tok/sec: 125827.64, flops:98.00, batch-reuse:1
@ 2103 train 5.1852 , allloss: 5.1861, dt: 1051.97ms, fracRes: 0.7690, norm(attn): 0.1504, norm(output): 1.3672, norm(x): 0.2452, norm(y): 0.9887, norm:0.6716, tok/sec: 124596.85, flops:97.04, batch-reuse:1
@ 2104 train 5.2139 , allloss: 5.2149, dt: 1054.22ms, fracRes: 0.7717, norm(attn): 0.1475, norm(output): 1.3516, norm(x): 0.2390, norm(y): 0.9886, norm:0.6544, tok/sec: 124330.23, flops:96.83, batch-reuse:1
@ 2105 train 5.2990 , allloss: 5.3002, dt: 1073.03ms, fracRes: 0.7737, norm(attn): 0.1465, norm(output): 1.3281, norm(x): 0.2345, norm(y): 0.9885, norm:0.7566, tok/sec: 122151.83, flops:95.13, batch-reuse:1
@ 2106 train 5.2155 , allloss: 5.2164, dt: 1055.56ms, fracRes: 0.7708, norm(attn): 0.1504, norm(output): 1.3438, norm(x): 0.2373, norm(y): 0.9887, norm:0.7299, tok/sec: 124172.46, flops:96.71, batch-reuse:1
@ 2107 train 5.2242 , allloss: 5.2251, dt: 1063.84ms, fracRes: 0.7707, norm(attn): 0.1514, norm(output): 1.3594, norm(x): 0.2390, norm(y): 0.9885, norm:0.8264, tok/sec: 123206.65, flops:95.95, batch-reuse:1
@ 2108 train 5.3566 , allloss: 5.3577, dt: 1056.69ms, fracRes: 0.7744, norm(attn): 0.1484, norm(output): 1.3438, norm(x): 0.2335, norm(y): 0.9884, norm:0.8914, tok/sec: 124040.50, flops:96.60, batch-reuse:1
@ 2109 train 5.2668 , allloss: 5.2678, dt: 1057.82ms, fracRes: 0.7726, norm(attn): 0.1514, norm(output): 1.3438, norm(x): 0.2372, norm(y): 0.9886, norm:0.7439, tok/sec: 123907.96, flops:96.50, batch-reuse:1
@ 2110 train 5.1840 , allloss: 5.1849, dt: 1049.05ms, fracRes: 0.7694, norm(attn): 0.1523, norm(output): 1.3516, norm(x): 0.2429, norm(y): 0.9887, norm:0.7377, tok/sec: 124944.11, flops:97.31, batch-reuse:1
@ 2111 train 5.1598 , allloss: 5.1606, dt: 1058.32ms, fracRes: 0.7683, norm(attn): 0.1514, norm(output): 1.3594, norm(x): 0.2445, norm(y): 0.9887, norm:0.7502, tok/sec: 123849.42, flops:96.45, batch-reuse:1
@ 2112 train 5.1791 , allloss: 5.1800, dt: 1060.75ms, fracRes: 0.7684, norm(attn): 0.1465, norm(output): 1.3594, norm(x): 0.2443, norm(y): 0.9886, norm:0.7081, tok/sec: 123565.71, flops:96.23, batch-reuse:1
@ 2113 train 5.2070 , allloss: 5.2079, dt: 1053.38ms, fracRes: 0.7686, norm(attn): 0.1494, norm(output): 1.3594, norm(x): 0.2426, norm(y): 0.9885, norm:0.7797, tok/sec: 124430.29, flops:96.91, batch-reuse:1
@ 2114 train 5.2395 , allloss: 5.2403, dt: 1060.54ms, fracRes: 0.7690, norm(attn): 0.1484, norm(output): 1.3516, norm(x): 0.2402, norm(y): 0.9886, norm:0.6247, tok/sec: 123590.07, flops:96.25, batch-reuse:1
@ 2115 train 5.2307 , allloss: 5.2316, dt: 1060.63ms, fracRes: 0.7704, norm(attn): 0.1494, norm(output): 1.3516, norm(x): 0.2411, norm(y): 0.9885, norm:0.7890, tok/sec: 123579.68, flops:96.24, batch-reuse:1
@ 2116 train 5.2618 , allloss: 5.2627, dt: 1038.62ms, fracRes: 0.7707, norm(attn): 0.1514, norm(output): 1.3438, norm(x): 0.2408, norm(y): 0.9885, norm:0.7491, tok/sec: 126198.34, flops:98.28, batch-reuse:1
@ 2117 train 5.1787 , allloss: 5.1796, dt: 1059.08ms, fracRes: 0.7707, norm(attn): 0.1514, norm(output): 1.3438, norm(x): 0.2388, norm(y): 0.9884, norm:0.6853, tok/sec: 123760.48, flops:96.39, batch-reuse:1
@ 2118 train 5.1903 , allloss: 5.1914, dt: 1039.89ms, fracRes: 0.7705, norm(attn): 0.1514, norm(output): 1.3359, norm(x): 0.2411, norm(y): 0.9884, norm:0.9895, tok/sec: 126044.50, flops:98.16, batch-reuse:1
@ 2119 train 5.2549 , allloss: 5.2559, dt: 1059.16ms, fracRes: 0.7713, norm(attn): 0.1504, norm(output): 1.3516, norm(x): 0.2412, norm(y): 0.9884, norm:0.7630, tok/sec: 123750.62, flops:96.38, batch-reuse:1
@ 2120 train 5.1894 , allloss: 5.1903, dt: 1053.33ms, fracRes: 0.7711, norm(attn): 0.1523, norm(output): 1.3516, norm(x): 0.2410, norm(y): 0.9884, norm:0.6700, tok/sec: 124435.59, flops:96.91, batch-reuse:1
@ 2121 train 5.2818 , allloss: 5.2828, dt: 1060.37ms, fracRes: 0.7735, norm(attn): 0.1504, norm(output): 1.3359, norm(x): 0.2360, norm(y): 0.9882, norm:0.7352, tok/sec: 123609.52, flops:96.27, batch-reuse:1
@ 2122 train 5.1744 , allloss: 5.1755, dt: 1058.34ms, fracRes: 0.7741, norm(attn): 0.1504, norm(output): 1.3438, norm(x): 0.2320, norm(y): 0.9883, norm:0.7336, tok/sec: 123846.35, flops:96.45, batch-reuse:1
@ 2123 train 5.2358 , allloss: 5.2367, dt: 1062.25ms, fracRes: 0.7698, norm(attn): 0.1523, norm(output): 1.3438, norm(x): 0.2388, norm(y): 0.9885, norm:0.8228, tok/sec: 123390.93, flops:96.10, batch-reuse:1
@ 2124 train 5.1645 , allloss: 5.1655, dt: 1062.11ms, fracRes: 0.7716, norm(attn): 0.1523, norm(output): 1.3516, norm(x): 0.2393, norm(y): 0.9884, norm:0.7685, tok/sec: 123407.24, flops:96.11, batch-reuse:1
@ 2125 train 5.2133 , allloss: 5.2141, dt: 1061.38ms, fracRes: 0.7694, norm(attn): 0.1523, norm(output): 1.3516, norm(x): 0.2425, norm(y): 0.9885, norm:0.6694, tok/sec: 123492.15, flops:96.18, batch-reuse:1
@ 2126 train 5.1695 , allloss: 5.1704, dt: 1050.03ms, fracRes: 0.7677, norm(attn): 0.1523, norm(output): 1.3594, norm(x): 0.2448, norm(y): 0.9884, norm:0.7535, tok/sec: 124827.22, flops:97.22, batch-reuse:1
@ 2127 train 5.2171 , allloss: 5.2181, dt: 1046.62ms, fracRes: 0.7692, norm(attn): 0.1523, norm(output): 1.3594, norm(x): 0.2446, norm(y): 0.9883, norm:0.8760, tok/sec: 125234.11, flops:97.53, batch-reuse:1
@ 2128 train 5.1272 , allloss: 5.1281, dt: 1056.61ms, fracRes: 0.7715, norm(attn): 0.1514, norm(output): 1.3516, norm(x): 0.2411, norm(y): 0.9883, norm:0.7378, tok/sec: 124049.23, flops:96.61, batch-reuse:1
@ 2129 train 5.1747 , allloss: 5.1756, dt: 1067.85ms, fracRes: 0.7702, norm(attn): 0.1514, norm(output): 1.3594, norm(x): 0.2407, norm(y): 0.9883, norm:0.6631, tok/sec: 122744.17, flops:95.59, batch-reuse:1
@ 2130 train 5.1306 , allloss: 5.1316, dt: 1042.80ms, fracRes: 0.7716, norm(attn): 0.1514, norm(output): 1.3516, norm(x): 0.2382, norm(y): 0.9883, norm:0.7233, tok/sec: 125692.49, flops:97.89, batch-reuse:1
@ 2131 train 5.2201 , allloss: 5.2210, dt: 1057.05ms, fracRes: 0.7695, norm(attn): 0.1504, norm(output): 1.3594, norm(x): 0.2427, norm(y): 0.9883, norm:0.7459, tok/sec: 123997.67, flops:96.57, batch-reuse:1
@ 2132 train 5.2878 , allloss: 5.2888, dt: 1051.44ms, fracRes: 0.7759, norm(attn): 0.1484, norm(output): 1.3438, norm(x): 0.2342, norm(y): 0.9880, norm:0.8760, tok/sec: 124659.26, flops:97.09, batch-reuse:1
@ 2133 train 5.2025 , allloss: 5.2034, dt: 1058.01ms, fracRes: 0.7715, norm(attn): 0.1465, norm(output): 1.3594, norm(x): 0.2385, norm(y): 0.9883, norm:0.7945, tok/sec: 123885.67, flops:96.48, batch-reuse:1
@ 2134 train 5.1431 , allloss: 5.1441, dt: 1065.50ms, fracRes: 0.7689, norm(attn): 0.1504, norm(output): 1.3672, norm(x): 0.2446, norm(y): 0.9883, norm:0.6904, tok/sec: 123014.65, flops:95.80, batch-reuse:1
@ 2135 train 5.2145 , allloss: 5.2155, dt: 1046.99ms, fracRes: 0.7671, norm(attn): 0.1533, norm(output): 1.3672, norm(x): 0.2480, norm(y): 0.9883, norm:0.7057, tok/sec: 125188.82, flops:97.50, batch-reuse:1
@ 2136 train 5.1177 , allloss: 5.1185, dt: 1062.49ms, fracRes: 0.7682, norm(attn): 0.1543, norm(output): 1.3672, norm(x): 0.2462, norm(y): 0.9883, norm:0.6535, tok/sec: 123362.46, flops:96.08, batch-reuse:1
@ 2137 train 5.1113 , allloss: 5.1121, dt: 1047.95ms, fracRes: 0.7672, norm(attn): 0.1543, norm(output): 1.3750, norm(x): 0.2476, norm(y): 0.9883, norm:0.6749, tok/sec: 125074.95, flops:97.41, batch-reuse:1
@ 2138 train 5.1371 , allloss: 5.1379, dt: 1058.16ms, fracRes: 0.7688, norm(attn): 0.1514, norm(output): 1.3672, norm(x): 0.2465, norm(y): 0.9883, norm:0.7846, tok/sec: 123867.50, flops:96.47, batch-reuse:1
@ 2139 train 5.1949 , allloss: 5.1958, dt: 1057.45ms, fracRes: 0.7725, norm(attn): 0.1494, norm(output): 1.3516, norm(x): 0.2403, norm(y): 0.9882, norm:0.7312, tok/sec: 123951.32, flops:96.53, batch-reuse:1
@ 2140 train 5.1616 , allloss: 5.1625, dt: 1053.90ms, fracRes: 0.7703, norm(attn): 0.1523, norm(output): 1.3672, norm(x): 0.2436, norm(y): 0.9883, norm:0.6115, tok/sec: 124368.79, flops:96.86, batch-reuse:1
@ 2141 train 5.1448 , allloss: 5.1456, dt: 1065.97ms, fracRes: 0.7704, norm(attn): 0.1514, norm(output): 1.3672, norm(x): 0.2429, norm(y): 0.9882, norm:0.6357, tok/sec: 122960.56, flops:95.76, batch-reuse:1
@ 2142 train 5.0894 , allloss: 5.0903, dt: 1067.63ms, fracRes: 0.7692, norm(attn): 0.1533, norm(output): 1.3672, norm(x): 0.2433, norm(y): 0.9883, norm:0.6787, tok/sec: 122769.31, flops:95.61, batch-reuse:1
@ 2143 train 5.1864 , allloss: 5.1873, dt: 1052.13ms, fracRes: 0.7704, norm(attn): 0.1523, norm(output): 1.3750, norm(x): 0.2423, norm(y): 0.9882, norm:0.6091, tok/sec: 124577.68, flops:97.02, batch-reuse:1
@ 2144 train 5.1357 , allloss: 5.1367, dt: 1053.00ms, fracRes: 0.7704, norm(attn): 0.1523, norm(output): 1.3672, norm(x): 0.2415, norm(y): 0.9881, norm:0.6442, tok/sec: 124474.84, flops:96.94, batch-reuse:1
@ 2145 train 5.1730 , allloss: 5.1743, dt: 1051.84ms, fracRes: 0.7722, norm(attn): 0.1523, norm(output): 1.3594, norm(x): 0.2404, norm(y): 0.9881, norm:0.7402, tok/sec: 124612.27, flops:97.05, batch-reuse:1
@ 2146 train 5.5006 , allloss: 5.5018, dt: 1058.09ms, fracRes: 0.7778, norm(attn): 0.1484, norm(output): 1.3359, norm(x): 0.2323, norm(y): 0.9879, norm:0.9088, tok/sec: 123875.99, flops:96.48, batch-reuse:1
@ 2147 train 5.0985 , allloss: 5.0992, dt: 1062.55ms, fracRes: 0.7641, norm(attn): 0.1543, norm(output): 1.3750, norm(x): 0.2521, norm(y): 0.9882, norm:1.4574, tok/sec: 123356.62, flops:96.07, batch-reuse:1
@ 2148 train 5.1199 , allloss: 5.1208, dt: 1047.55ms, fracRes: 0.7673, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2463, norm(y): 0.9882, norm:0.8688, tok/sec: 125121.95, flops:97.45, batch-reuse:1
@ 2149 train 5.1309 , allloss: 5.1317, dt: 1059.63ms, fracRes: 0.7685, norm(attn): 0.1533, norm(output): 1.3750, norm(x): 0.2441, norm(y): 0.9881, norm:0.8983, tok/sec: 123695.43, flops:96.33, batch-reuse:1
@ 2150 train 5.1275 , allloss: 5.1283, dt: 1054.84ms, fracRes: 0.7703, norm(attn): 0.1533, norm(output): 1.3750, norm(x): 0.2433, norm(y): 0.9881, norm:0.7806, tok/sec: 124257.95, flops:96.77, batch-reuse:1
@ 2151 train 5.0845 , allloss: 5.0854, dt: 1046.40ms, fracRes: 0.7689, norm(attn): 0.1523, norm(output): 1.3750, norm(x): 0.2444, norm(y): 0.9882, norm:0.8682, tok/sec: 125260.42, flops:97.55, batch-reuse:1
@ 2152 train 5.1514 , allloss: 5.1522, dt: 1043.89ms, fracRes: 0.7691, norm(attn): 0.1514, norm(output): 1.3828, norm(x): 0.2433, norm(y): 0.9881, norm:0.8560, tok/sec: 125561.55, flops:97.79, batch-reuse:1
@ 2153 train 5.1178 , allloss: 5.1186, dt: 1061.73ms, fracRes: 0.7688, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2438, norm(y): 0.9881, norm:0.7736, tok/sec: 123451.75, flops:96.14, batch-reuse:1
@ 2154 train 5.1615 , allloss: 5.1625, dt: 1060.99ms, fracRes: 0.7713, norm(attn): 0.1523, norm(output): 1.3750, norm(x): 0.2397, norm(y): 0.9879, norm:0.8479, tok/sec: 123537.97, flops:96.21, batch-reuse:1
@ 2155 train 5.1259 , allloss: 5.1267, dt: 1050.76ms, fracRes: 0.7695, norm(attn): 0.1523, norm(output): 1.3750, norm(x): 0.2426, norm(y): 0.9881, norm:0.6686, tok/sec: 124740.75, flops:97.15, batch-reuse:1
@ 2156 train 5.1062 , allloss: 5.1068, dt: 1055.27ms, fracRes: 0.7677, norm(attn): 0.1514, norm(output): 1.3750, norm(x): 0.2419, norm(y): 0.9881, norm:0.7480, tok/sec: 124207.36, flops:96.73, batch-reuse:1
@ 2157 train 5.1918 , allloss: 5.1927, dt: 1053.59ms, fracRes: 0.7712, norm(attn): 0.1504, norm(output): 1.3750, norm(x): 0.2383, norm(y): 0.9879, norm:0.7952, tok/sec: 124405.38, flops:96.89, batch-reuse:1
@ 2158 train 5.1751 , allloss: 5.1759, dt: 1048.09ms, fracRes: 0.7685, norm(attn): 0.1504, norm(output): 1.3828, norm(x): 0.2444, norm(y): 0.9881, norm:0.9266, tok/sec: 125058.08, flops:97.40, batch-reuse:1
@ 2159 train 5.1046 , allloss: 5.1056, dt: 1047.99ms, fracRes: 0.7695, norm(attn): 0.1533, norm(output): 1.3828, norm(x): 0.2419, norm(y): 0.9881, norm:1.0475, tok/sec: 125069.66, flops:97.40, batch-reuse:1
@ 2160 train 5.1615 , allloss: 5.1628, dt: 1065.74ms, fracRes: 0.7790, norm(attn): 0.1504, norm(output): 1.3672, norm(x): 0.2272, norm(y): 0.9877, norm:0.8654, tok/sec: 122987.36, flops:95.78, batch-reuse:1
@ 2161 train 5.1596 , allloss: 5.1610, dt: 1085.79ms, fracRes: 0.7794, norm(attn): 0.1514, norm(output): 1.3438, norm(x): 0.2273, norm(y): 0.9877, norm:0.8144, tok/sec: 120715.62, flops:94.01, batch-reuse:1
@ 2162 train 5.0582 , allloss: 5.0591, dt: 1056.63ms, fracRes: 0.7701, norm(attn): 0.1533, norm(output): 1.3750, norm(x): 0.2437, norm(y): 0.9880, norm:0.7728, tok/sec: 124047.47, flops:96.61, batch-reuse:1
@ 2163 train 5.1539 , allloss: 5.1549, dt: 1067.47ms, fracRes: 0.7706, norm(attn): 0.1523, norm(output): 1.3750, norm(x): 0.2418, norm(y): 0.9879, norm:0.8215, tok/sec: 122787.49, flops:95.63, batch-reuse:1
@ 2164 train 5.0238 , allloss: 5.0247, dt: 1063.85ms, fracRes: 0.7676, norm(attn): 0.1562, norm(output): 1.3750, norm(x): 0.2474, norm(y): 0.9881, norm:0.7706, tok/sec: 123205.35, flops:95.95, batch-reuse:1
@ 2165 train 5.0160 , allloss: 5.0167, dt: 1062.20ms, fracRes: 0.7654, norm(attn): 0.1553, norm(output): 1.3750, norm(x): 0.2484, norm(y): 0.9881, norm:0.6831, tok/sec: 123397.30, flops:96.10, batch-reuse:1
@ 2166 train 5.1015 , allloss: 5.1022, dt: 1061.43ms, fracRes: 0.7695, norm(attn): 0.1523, norm(output): 1.3672, norm(x): 0.2440, norm(y): 0.9879, norm:0.6738, tok/sec: 123485.91, flops:96.17, batch-reuse:1
@ 2167 train 5.1356 , allloss: 5.1365, dt: 1064.60ms, fracRes: 0.7696, norm(attn): 0.1523, norm(output): 1.3750, norm(x): 0.2454, norm(y): 0.9879, norm:0.6957, tok/sec: 123118.65, flops:95.89, batch-reuse:1
@ 2168 train 5.1148 , allloss: 5.1157, dt: 1056.33ms, fracRes: 0.7678, norm(attn): 0.1553, norm(output): 1.3750, norm(x): 0.2483, norm(y): 0.9880, norm:0.6633, tok/sec: 124082.92, flops:96.64, batch-reuse:1
@ 2169 train 5.1237 , allloss: 5.1247, dt: 1056.75ms, fracRes: 0.7718, norm(attn): 0.1523, norm(output): 1.3672, norm(x): 0.2413, norm(y): 0.9878, norm:0.5650, tok/sec: 124033.37, flops:96.60, batch-reuse:1
@ 2170 train 5.1186 , allloss: 5.1196, dt: 1073.21ms, fracRes: 0.7722, norm(attn): 0.1484, norm(output): 1.3594, norm(x): 0.2393, norm(y): 0.9877, norm:0.6603, tok/sec: 122130.67, flops:95.12, batch-reuse:1
@ 2171 train 5.1488 , allloss: 5.1496, dt: 1047.92ms, fracRes: 0.7686, norm(attn): 0.1543, norm(output): 1.3750, norm(x): 0.2457, norm(y): 0.9878, norm:0.6867, tok/sec: 125077.91, flops:97.41, batch-reuse:1
@ 2172 train 5.1527 , allloss: 5.1534, dt: 1048.84ms, fracRes: 0.7691, norm(attn): 0.1523, norm(output): 1.3672, norm(x): 0.2433, norm(y): 0.9878, norm:0.6583, tok/sec: 124968.73, flops:97.33, batch-reuse:1
@ 2173 train 5.0648 , allloss: 5.0656, dt: 1056.02ms, fracRes: 0.7702, norm(attn): 0.1523, norm(output): 1.3750, norm(x): 0.2425, norm(y): 0.9879, norm:0.6434, tok/sec: 124118.41, flops:96.66, batch-reuse:1
@ 2174 train 5.1407 , allloss: 5.1415, dt: 1054.65ms, fracRes: 0.7714, norm(attn): 0.1514, norm(output): 1.3672, norm(x): 0.2409, norm(y): 0.9878, norm:0.7027, tok/sec: 124280.25, flops:96.79, batch-reuse:1
@ 2175 train 5.0797 , allloss: 5.0805, dt: 1060.41ms, fracRes: 0.7712, norm(attn): 0.1533, norm(output): 1.3672, norm(x): 0.2428, norm(y): 0.9878, norm:0.7554, tok/sec: 123605.46, flops:96.26, batch-reuse:1
@ 2176 train 5.0622 , allloss: 5.0629, dt: 1047.94ms, fracRes: 0.7690, norm(attn): 0.1553, norm(output): 1.3672, norm(x): 0.2446, norm(y): 0.9878, norm:0.6512, tok/sec: 125076.20, flops:97.41, batch-reuse:1
@ 2177 train 5.0727 , allloss: 5.0734, dt: 1063.23ms, fracRes: 0.7671, norm(attn): 0.1543, norm(output): 1.3672, norm(x): 0.2475, norm(y): 0.9878, norm:0.6405, tok/sec: 123276.90, flops:96.01, batch-reuse:1
@ 2178 train 5.1279 , allloss: 5.1287, dt: 1063.61ms, fracRes: 0.7695, norm(attn): 0.1523, norm(output): 1.3672, norm(x): 0.2426, norm(y): 0.9877, norm:0.6382, tok/sec: 123232.61, flops:95.97, batch-reuse:1
@ 2179 train 5.1224 , allloss: 5.1231, dt: 1060.31ms, fracRes: 0.7691, norm(attn): 0.1504, norm(output): 1.3750, norm(x): 0.2447, norm(y): 0.9876, norm:0.7090, tok/sec: 123616.97, flops:96.27, batch-reuse:1
@ 2180 train 5.0256 , allloss: 5.0262, dt: 1055.56ms, fracRes: 0.7676, norm(attn): 0.1504, norm(output): 1.3672, norm(x): 0.2465, norm(y): 0.9878, norm:0.7329, tok/sec: 124172.40, flops:96.71, batch-reuse:1
@ 2181 train 5.0418 , allloss: 5.0424, dt: 1045.92ms, fracRes: 0.7690, norm(attn): 0.1514, norm(output): 1.3750, norm(x): 0.2457, norm(y): 0.9877, norm:0.8090, tok/sec: 125317.04, flops:97.60, batch-reuse:1
@ 2182 train 5.1483 , allloss: 5.1489, dt: 1060.42ms, fracRes: 0.7716, norm(attn): 0.1494, norm(output): 1.3750, norm(x): 0.2388, norm(y): 0.9875, norm:0.8622, tok/sec: 123604.13, flops:96.26, batch-reuse:1
@ 2183 train 4.9646 , allloss: 4.9654, dt: 1060.12ms, fracRes: 0.7677, norm(attn): 0.1553, norm(output): 1.3750, norm(x): 0.2470, norm(y): 0.9878, norm:0.9638, tok/sec: 123638.79, flops:96.29, batch-reuse:1
@ 2184 train 4.9405 , allloss: 4.9414, dt: 1055.16ms, fracRes: 0.7683, norm(attn): 0.1553, norm(output): 1.3672, norm(x): 0.2449, norm(y): 0.9878, norm:0.8445, tok/sec: 124220.55, flops:96.74, batch-reuse:1
@ 2185 train 5.1080 , allloss: 5.1087, dt: 1051.94ms, fracRes: 0.7711, norm(attn): 0.1523, norm(output): 1.3750, norm(x): 0.2383, norm(y): 0.9876, norm:0.9316, tok/sec: 124600.66, flops:97.04, batch-reuse:1
@ 2186 train 4.9915 , allloss: 4.9922, dt: 1040.15ms, fracRes: 0.7688, norm(attn): 0.1543, norm(output): 1.3750, norm(x): 0.2412, norm(y): 0.9878, norm:0.8206, tok/sec: 126013.09, flops:98.14, batch-reuse:1
@ 2187 train 4.9819 , allloss: 4.9826, dt: 1047.27ms, fracRes: 0.7689, norm(attn): 0.1543, norm(output): 1.3750, norm(x): 0.2436, norm(y): 0.9877, norm:0.7610, tok/sec: 125156.16, flops:97.47, batch-reuse:1
@ 2188 train 4.9489 , allloss: 4.9497, dt: 1061.24ms, fracRes: 0.7651, norm(attn): 0.1562, norm(output): 1.3828, norm(x): 0.2527, norm(y): 0.9878, norm:0.8461, tok/sec: 123508.05, flops:96.19, batch-reuse:1
@ 2189 train 5.0075 , allloss: 5.0083, dt: 1058.66ms, fracRes: 0.7684, norm(attn): 0.1543, norm(output): 1.3750, norm(x): 0.2449, norm(y): 0.9877, norm:0.8418, tok/sec: 123809.90, flops:96.42, batch-reuse:1
@ 2190 train 4.9380 , allloss: 4.9390, dt: 1057.25ms, fracRes: 0.7739, norm(attn): 0.1533, norm(output): 1.3516, norm(x): 0.2366, norm(y): 0.9876, norm:0.8845, tok/sec: 123974.93, flops:96.55, batch-reuse:1
@ 2191 train 5.0396 , allloss: 5.0404, dt: 1053.67ms, fracRes: 0.7694, norm(attn): 0.1533, norm(output): 1.3750, norm(x): 0.2435, norm(y): 0.9875, norm:0.8240, tok/sec: 124396.25, flops:96.88, batch-reuse:1
@ 2192 train 4.9895 , allloss: 4.9902, dt: 1043.52ms, fracRes: 0.7676, norm(attn): 0.1533, norm(output): 1.3750, norm(x): 0.2438, norm(y): 0.9876, norm:0.7297, tok/sec: 125606.02, flops:97.82, batch-reuse:1
@ 2193 train 4.9649 , allloss: 4.9655, dt: 1052.23ms, fracRes: 0.7679, norm(attn): 0.1543, norm(output): 1.3750, norm(x): 0.2438, norm(y): 0.9875, norm:0.8458, tok/sec: 124565.54, flops:97.01, batch-reuse:1
@ 2194 train 5.0672 , allloss: 5.0680, dt: 1066.21ms, fracRes: 0.7678, norm(attn): 0.1533, norm(output): 1.3750, norm(x): 0.2434, norm(y): 0.9876, norm:0.6823, tok/sec: 122932.79, flops:95.74, batch-reuse:1
@ 2195 train 5.0628 , allloss: 5.0635, dt: 1074.61ms, fracRes: 0.7704, norm(attn): 0.1543, norm(output): 1.3672, norm(x): 0.2388, norm(y): 0.9876, norm:0.7576, tok/sec: 121971.91, flops:94.99, batch-reuse:1
@ 2196 train 5.0649 , allloss: 5.0655, dt: 1047.07ms, fracRes: 0.7656, norm(attn): 0.1553, norm(output): 1.3906, norm(x): 0.2481, norm(y): 0.9876, norm:0.7847, tok/sec: 125179.81, flops:97.49, batch-reuse:1
@ 2197 train 4.9532 , allloss: 4.9540, dt: 1051.38ms, fracRes: 0.7695, norm(attn): 0.1543, norm(output): 1.3672, norm(x): 0.2410, norm(y): 0.9874, norm:0.6585, tok/sec: 124666.36, flops:97.09, batch-reuse:1
@ 2198 train 5.0221 , allloss: 5.0228, dt: 1053.62ms, fracRes: 0.7700, norm(attn): 0.1523, norm(output): 1.3750, norm(x): 0.2404, norm(y): 0.9874, norm:0.6958, tok/sec: 124401.80, flops:96.88, batch-reuse:1
@ 2199 train 5.0415 , allloss: 5.0423, dt: 1050.16ms, fracRes: 0.7677, norm(attn): 0.1543, norm(output): 1.3828, norm(x): 0.2468, norm(y): 0.9874, norm:0.6804, tok/sec: 124811.66, flops:97.20, batch-reuse:1
@ 2200 train 4.9919 , allloss: 4.9926, dt: 1058.13ms, fracRes: 0.7678, norm(attn): 0.1533, norm(output): 1.3828, norm(x): 0.2465, norm(y): 0.9875, norm:0.6934, tok/sec: 123871.16, flops:96.47, batch-reuse:1
@ 2201 train 5.0018 , allloss: 5.0025, dt: 1053.08ms, fracRes: 0.7684, norm(attn): 0.1533, norm(output): 1.3750, norm(x): 0.2452, norm(y): 0.9875, norm:0.6740, tok/sec: 124465.71, flops:96.93, batch-reuse:1
@ 2202 train 5.0994 , allloss: 5.1000, dt: 1054.96ms, fracRes: 0.7706, norm(attn): 0.1514, norm(output): 1.3750, norm(x): 0.2431, norm(y): 0.9873, norm:0.6408, tok/sec: 124243.15, flops:96.76, batch-reuse:1
@ 2203 train 5.0242 , allloss: 5.0250, dt: 1052.93ms, fracRes: 0.7691, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2462, norm(y): 0.9873, norm:0.6349, tok/sec: 124483.15, flops:96.95, batch-reuse:1
@ 2204 train 5.0271 , allloss: 5.0278, dt: 1050.59ms, fracRes: 0.7660, norm(attn): 0.1543, norm(output): 1.3828, norm(x): 0.2480, norm(y): 0.9874, norm:0.7039, tok/sec: 124759.80, flops:97.16, batch-reuse:1
@ 2205 train 5.0407 , allloss: 5.0415, dt: 1056.11ms, fracRes: 0.7681, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2442, norm(y): 0.9873, norm:0.7784, tok/sec: 124108.80, flops:96.66, batch-reuse:1
@ 2206 train 4.9421 , allloss: 4.9427, dt: 1049.07ms, fracRes: 0.7670, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2481, norm(y): 0.9873, norm:0.7785, tok/sec: 124940.58, flops:97.30, batch-reuse:1
@ 2207 train 4.9517 , allloss: 4.9524, dt: 1066.33ms, fracRes: 0.7670, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2475, norm(y): 0.9873, norm:0.6962, tok/sec: 122918.28, flops:95.73, batch-reuse:1
@ 2208 train 5.0645 , allloss: 5.0653, dt: 1066.10ms, fracRes: 0.7697, norm(attn): 0.1533, norm(output): 1.3750, norm(x): 0.2443, norm(y): 0.9873, norm:0.7023, tok/sec: 122945.36, flops:95.75, batch-reuse:1
@ 2209 train 4.9128 , allloss: 4.9135, dt: 1055.35ms, fracRes: 0.7684, norm(attn): 0.1543, norm(output): 1.3828, norm(x): 0.2466, norm(y): 0.9873, norm:0.6674, tok/sec: 124198.24, flops:96.73, batch-reuse:1
@ 2210 train 4.8814 , allloss: 4.8822, dt: 1042.25ms, fracRes: 0.7695, norm(attn): 0.1543, norm(output): 1.3750, norm(x): 0.2440, norm(y): 0.9872, norm:0.6875, tok/sec: 125758.62, flops:97.94, batch-reuse:1
@ 2211 train 5.0016 , allloss: 5.0024, dt: 1052.92ms, fracRes: 0.7683, norm(attn): 0.1543, norm(output): 1.3828, norm(x): 0.2430, norm(y): 0.9872, norm:0.7317, tok/sec: 124484.76, flops:96.95, batch-reuse:1
@ 2212 train 4.8773 , allloss: 4.8779, dt: 1052.45ms, fracRes: 0.7652, norm(attn): 0.1562, norm(output): 1.3828, norm(x): 0.2483, norm(y): 0.9874, norm:0.6713, tok/sec: 124539.30, flops:96.99, batch-reuse:1
@ 2213 train 5.2672 , allloss: 5.2680, dt: 1060.26ms, fracRes: 0.7746, norm(attn): 0.1504, norm(output): 1.3594, norm(x): 0.2328, norm(y): 0.9870, norm:1.0974, tok/sec: 123623.08, flops:96.28, batch-reuse:1
@ 2214 train 5.1138 , allloss: 5.1149, dt: 1049.75ms, fracRes: 0.7702, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2394, norm(y): 0.9870, norm:1.3543, tok/sec: 124859.97, flops:97.24, batch-reuse:1
@ 2215 train 5.0089 , allloss: 5.0096, dt: 1051.90ms, fracRes: 0.7693, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2444, norm(y): 0.9871, norm:0.7030, tok/sec: 124604.62, flops:97.04, batch-reuse:1
@ 2216 train 5.0688 , allloss: 5.0695, dt: 1054.62ms, fracRes: 0.7704, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2439, norm(y): 0.9871, norm:1.0322, tok/sec: 124283.32, flops:96.79, batch-reuse:1
@ 2217 train 4.9693 , allloss: 4.9701, dt: 1067.02ms, fracRes: 0.7664, norm(attn): 0.1553, norm(output): 1.3906, norm(x): 0.2468, norm(y): 0.9871, norm:1.0820, tok/sec: 122839.12, flops:95.67, batch-reuse:1
@ 2218 train 4.9323 , allloss: 4.9329, dt: 1067.34ms, fracRes: 0.7675, norm(attn): 0.1553, norm(output): 1.3828, norm(x): 0.2473, norm(y): 0.9871, norm:0.7476, tok/sec: 122802.55, flops:95.64, batch-reuse:1
@ 2219 train 5.0387 , allloss: 5.0393, dt: 1052.16ms, fracRes: 0.7672, norm(attn): 0.1553, norm(output): 1.3828, norm(x): 0.2466, norm(y): 0.9872, norm:0.7728, tok/sec: 124574.49, flops:97.02, batch-reuse:1
@ 2220 train 5.0205 , allloss: 5.0212, dt: 1065.58ms, fracRes: 0.7681, norm(attn): 0.1533, norm(output): 1.3906, norm(x): 0.2458, norm(y): 0.9871, norm:0.7338, tok/sec: 123005.52, flops:95.80, batch-reuse:1
@ 2221 train 4.8861 , allloss: 4.8868, dt: 1047.37ms, fracRes: 0.7709, norm(attn): 0.1543, norm(output): 1.3750, norm(x): 0.2430, norm(y): 0.9869, norm:0.9382, tok/sec: 125143.60, flops:97.46, batch-reuse:1
@ 2222 train 5.0573 , allloss: 5.0581, dt: 1062.92ms, fracRes: 0.7705, norm(attn): 0.1533, norm(output): 1.3828, norm(x): 0.2451, norm(y): 0.9869, norm:0.9833, tok/sec: 123313.10, flops:96.04, batch-reuse:1
@ 2223 train 4.9397 , allloss: 4.9404, dt: 1048.58ms, fracRes: 0.7670, norm(attn): 0.1543, norm(output): 1.3984, norm(x): 0.2475, norm(y): 0.9870, norm:0.7759, tok/sec: 124999.62, flops:97.35, batch-reuse:1
@ 2224 train 5.0614 , allloss: 5.0624, dt: 1063.01ms, fracRes: 0.7757, norm(attn): 0.1504, norm(output): 1.3672, norm(x): 0.2315, norm(y): 0.9866, norm:0.8757, tok/sec: 123302.15, flops:96.03, batch-reuse:1
@ 2225 train 5.0563 , allloss: 5.0572, dt: 1054.76ms, fracRes: 0.7674, norm(attn): 0.1523, norm(output): 1.3906, norm(x): 0.2453, norm(y): 0.9869, norm:1.1065, tok/sec: 124266.91, flops:96.78, batch-reuse:1
@ 2226 train 5.0251 , allloss: 5.0261, dt: 1065.85ms, fracRes: 0.7665, norm(attn): 0.1543, norm(output): 1.3984, norm(x): 0.2490, norm(y): 0.9870, norm:0.8499, tok/sec: 122974.64, flops:95.77, batch-reuse:1
@ 2227 train 4.9633 , allloss: 4.9641, dt: 1048.06ms, fracRes: 0.7658, norm(attn): 0.1572, norm(output): 1.4062, norm(x): 0.2510, norm(y): 0.9870, norm:0.7818, tok/sec: 125061.61, flops:97.40, batch-reuse:1
@ 2228 train 4.9994 , allloss: 5.0001, dt: 1048.26ms, fracRes: 0.7667, norm(attn): 0.1553, norm(output): 1.3906, norm(x): 0.2481, norm(y): 0.9870, norm:0.6813, tok/sec: 125037.46, flops:97.38, batch-reuse:1
@ 2229 train 5.1652 , allloss: 5.1660, dt: 1046.61ms, fracRes: 0.7710, norm(attn): 0.1523, norm(output): 1.3906, norm(x): 0.2415, norm(y): 0.9867, norm:0.6640, tok/sec: 125234.53, flops:97.53, batch-reuse:1
@ 2230 train 5.1561 , allloss: 5.1569, dt: 1052.54ms, fracRes: 0.7707, norm(attn): 0.1523, norm(output): 1.3906, norm(x): 0.2427, norm(y): 0.9867, norm:0.7163, tok/sec: 124528.92, flops:96.98, batch-reuse:1
@ 2231 train 5.2288 , allloss: 5.2297, dt: 1053.39ms, fracRes: 0.7683, norm(attn): 0.1533, norm(output): 1.3906, norm(x): 0.2466, norm(y): 0.9867, norm:0.7655, tok/sec: 124428.91, flops:96.91, batch-reuse:1
@ 2232 train 5.1498 , allloss: 5.1506, dt: 1054.74ms, fracRes: 0.7688, norm(attn): 0.1533, norm(output): 1.3828, norm(x): 0.2460, norm(y): 0.9867, norm:0.6984, tok/sec: 124269.97, flops:96.78, batch-reuse:1
@ 2233 train 5.1149 , allloss: 5.1159, dt: 1067.73ms, fracRes: 0.7700, norm(attn): 0.1543, norm(output): 1.3984, norm(x): 0.2440, norm(y): 0.9866, norm:0.8382, tok/sec: 122757.41, flops:95.60, batch-reuse:1
@ 2234 train 5.2739 , allloss: 5.2749, dt: 1046.49ms, fracRes: 0.7730, norm(attn): 0.1514, norm(output): 1.3828, norm(x): 0.2387, norm(y): 0.9865, norm:0.7942, tok/sec: 125249.23, flops:97.54, batch-reuse:1
@ 2235 train 5.1488 , allloss: 5.1498, dt: 1059.41ms, fracRes: 0.7702, norm(attn): 0.1533, norm(output): 1.3906, norm(x): 0.2448, norm(y): 0.9866, norm:0.9003, tok/sec: 123722.02, flops:96.36, batch-reuse:1
@ 2236 train 5.1256 , allloss: 5.1266, dt: 1044.26ms, fracRes: 0.7721, norm(attn): 0.1533, norm(output): 1.3828, norm(x): 0.2425, norm(y): 0.9865, norm:0.7886, tok/sec: 125516.32, flops:97.75, batch-reuse:1
@ 2237 train 5.1959 , allloss: 5.1969, dt: 1048.57ms, fracRes: 0.7744, norm(attn): 0.1514, norm(output): 1.3828, norm(x): 0.2370, norm(y): 0.9865, norm:0.7147, tok/sec: 125000.84, flops:97.35, batch-reuse:1
@ 2238 train 5.0832 , allloss: 5.0841, dt: 1061.18ms, fracRes: 0.7696, norm(attn): 0.1533, norm(output): 1.3906, norm(x): 0.2445, norm(y): 0.9866, norm:0.6555, tok/sec: 123515.85, flops:96.19, batch-reuse:1
@ 2239 train 5.0500 , allloss: 5.0508, dt: 1056.49ms, fracRes: 0.7695, norm(attn): 0.1543, norm(output): 1.3906, norm(x): 0.2440, norm(y): 0.9866, norm:0.5786, tok/sec: 124063.06, flops:96.62, batch-reuse:1
@ 2240 train 5.1687 , allloss: 5.1695, dt: 1052.75ms, fracRes: 0.7696, norm(attn): 0.1553, norm(output): 1.3906, norm(x): 0.2450, norm(y): 0.9865, norm:0.6181, tok/sec: 124504.52, flops:96.96, batch-reuse:1
@ 2241 train 5.1797 , allloss: 5.1807, dt: 1045.66ms, fracRes: 0.7719, norm(attn): 0.1523, norm(output): 1.3906, norm(x): 0.2412, norm(y): 0.9865, norm:0.6189, tok/sec: 125348.38, flops:97.62, batch-reuse:1
@ 2242 train 5.1145 , allloss: 5.1155, dt: 1056.42ms, fracRes: 0.7673, norm(attn): 0.1543, norm(output): 1.3984, norm(x): 0.2484, norm(y): 0.9866, norm:0.7330, tok/sec: 124071.46, flops:96.63, batch-reuse:1
@ 2243 train 5.1769 , allloss: 5.1779, dt: 1058.56ms, fracRes: 0.7714, norm(attn): 0.1523, norm(output): 1.3828, norm(x): 0.2409, norm(y): 0.9865, norm:0.7566, tok/sec: 123820.47, flops:96.43, batch-reuse:1
@ 2244 train 5.1735 , allloss: 5.1746, dt: 1057.52ms, fracRes: 0.7699, norm(attn): 0.1533, norm(output): 1.3984, norm(x): 0.2448, norm(y): 0.9865, norm:1.0364, tok/sec: 123943.10, flops:96.53, batch-reuse:1
@ 2245 train 5.0954 , allloss: 5.0964, dt: 1063.34ms, fracRes: 0.7693, norm(attn): 0.1533, norm(output): 1.3984, norm(x): 0.2438, norm(y): 0.9866, norm:0.8577, tok/sec: 123264.93, flops:96.00, batch-reuse:1
@ 2246 train 5.0643 , allloss: 5.0654, dt: 1059.70ms, fracRes: 0.7720, norm(attn): 0.1533, norm(output): 1.4062, norm(x): 0.2444, norm(y): 0.9864, norm:0.7452, tok/sec: 123687.81, flops:96.33, batch-reuse:1
@ 2247 train 5.1211 , allloss: 5.1220, dt: 1066.21ms, fracRes: 0.7723, norm(attn): 0.1543, norm(output): 1.3984, norm(x): 0.2414, norm(y): 0.9865, norm:0.6547, tok/sec: 122932.79, flops:95.74, batch-reuse:1
@ 2248 train 5.1776 , allloss: 5.1784, dt: 1052.27ms, fracRes: 0.7700, norm(attn): 0.1553, norm(output): 1.3984, norm(x): 0.2431, norm(y): 0.9865, norm:0.6415, tok/sec: 124561.14, flops:97.01, batch-reuse:1
@ 2249 train 5.0158 , allloss: 5.0165, dt: 1046.59ms, fracRes: 0.7672, norm(attn): 0.1562, norm(output): 1.4062, norm(x): 0.2499, norm(y): 0.9865, norm:0.6968, tok/sec: 125236.67, flops:97.53, batch-reuse:1
@ 2250 train 5.1978 , allloss: 5.1987, dt: 1058.64ms, fracRes: 0.7739, norm(attn): 0.1523, norm(output): 1.3906, norm(x): 0.2375, norm(y): 0.9862, norm:0.7064, tok/sec: 123811.79, flops:96.43, batch-reuse:1
@ 2251 train 5.0914 , allloss: 5.0925, dt: 1048.05ms, fracRes: 0.7712, norm(attn): 0.1553, norm(output): 1.3984, norm(x): 0.2487, norm(y): 0.9862, norm:0.9985, tok/sec: 125062.91, flops:97.40, batch-reuse:1
@ 2252 train 5.0776 , allloss: 5.0782, dt: 1066.85ms, fracRes: 0.7695, norm(attn): 0.1543, norm(output): 1.3906, norm(x): 0.2445, norm(y): 0.9864, norm:1.0568, tok/sec: 122858.97, flops:95.68, batch-reuse:1
@ 2253 train 5.0752 , allloss: 5.0759, dt: 1047.17ms, fracRes: 0.7684, norm(attn): 0.1553, norm(output): 1.4062, norm(x): 0.2442, norm(y): 0.9864, norm:0.8988, tok/sec: 125168.30, flops:97.48, batch-reuse:1
@ 2254 train 5.1558 , allloss: 5.1566, dt: 1062.98ms, fracRes: 0.7681, norm(attn): 0.1543, norm(output): 1.4062, norm(x): 0.2481, norm(y): 0.9863, norm:1.0019, tok/sec: 123306.68, flops:96.03, batch-reuse:1
@ 2255 train 5.1200 , allloss: 5.1207, dt: 1047.75ms, fracRes: 0.7700, norm(attn): 0.1553, norm(output): 1.4062, norm(x): 0.2458, norm(y): 0.9863, norm:0.8707, tok/sec: 125098.35, flops:97.43, batch-reuse:1
@ 2256 train 5.2435 , allloss: 5.2446, dt: 1056.77ms, fracRes: 0.7728, norm(attn): 0.1543, norm(output): 1.4062, norm(x): 0.2447, norm(y): 0.9862, norm:0.8491, tok/sec: 124031.07, flops:96.60, batch-reuse:1
@ 2257 train 5.1344 , allloss: 5.1354, dt: 1055.20ms, fracRes: 0.7718, norm(attn): 0.1543, norm(output): 1.3984, norm(x): 0.2430, norm(y): 0.9862, norm:0.6336, tok/sec: 124215.53, flops:96.74, batch-reuse:1
@ 2258 train 5.0764 , allloss: 5.0772, dt: 1052.14ms, fracRes: 0.7703, norm(attn): 0.1543, norm(output): 1.3984, norm(x): 0.2464, norm(y): 0.9863, norm:0.7465, tok/sec: 124576.94, flops:97.02, batch-reuse:1
@ 2259 train 5.1968 , allloss: 5.1978, dt: 1050.06ms, fracRes: 0.7731, norm(attn): 0.1514, norm(output): 1.3984, norm(x): 0.2413, norm(y): 0.9860, norm:0.6966, tok/sec: 124823.08, flops:97.21, batch-reuse:1
@ 2260 train 5.0820 , allloss: 5.0828, dt: 1059.47ms, fracRes: 0.7690, norm(attn): 0.1562, norm(output): 1.4062, norm(x): 0.2472, norm(y): 0.9862, norm:0.7358, tok/sec: 123715.00, flops:96.35, batch-reuse:1
@ 2261 train 5.1354 , allloss: 5.1362, dt: 1044.73ms, fracRes: 0.7704, norm(attn): 0.1543, norm(output): 1.4062, norm(x): 0.2452, norm(y): 0.9862, norm:0.7668, tok/sec: 125460.63, flops:97.71, batch-reuse:1
@ 2262 train 5.1216 , allloss: 5.1225, dt: 1066.90ms, fracRes: 0.7697, norm(attn): 0.1553, norm(output): 1.4062, norm(x): 0.2473, norm(y): 0.9862, norm:0.7348, tok/sec: 122853.18, flops:95.68, batch-reuse:1
@ 2263 train 5.1784 , allloss: 5.1793, dt: 1052.95ms, fracRes: 0.7712, norm(attn): 0.1523, norm(output): 1.3984, norm(x): 0.2465, norm(y): 0.9861, norm:0.6914, tok/sec: 124481.12, flops:96.95, batch-reuse:1
@ 2264 train 5.1186 , allloss: 5.1195, dt: 1060.14ms, fracRes: 0.7721, norm(attn): 0.1504, norm(output): 1.4062, norm(x): 0.2445, norm(y): 0.9860, norm:0.6440, tok/sec: 123636.62, flops:96.29, batch-reuse:1
@ 2265 train 5.0747 , allloss: 5.0757, dt: 1060.94ms, fracRes: 0.7733, norm(attn): 0.1523, norm(output): 1.3984, norm(x): 0.2418, norm(y): 0.9859, norm:0.7161, tok/sec: 123543.66, flops:96.22, batch-reuse:1
@ 2266 train 4.9932 , allloss: 4.9940, dt: 1072.84ms, fracRes: 0.7688, norm(attn): 0.1523, norm(output): 1.4141, norm(x): 0.2496, norm(y): 0.9861, norm:0.5797, tok/sec: 122172.71, flops:95.15, batch-reuse:1
@ 2267 train 5.1162 , allloss: 5.1170, dt: 1046.83ms, fracRes: 0.7700, norm(attn): 0.1533, norm(output): 1.4141, norm(x): 0.2465, norm(y): 0.9860, norm:0.6346, tok/sec: 125208.15, flops:97.51, batch-reuse:1
@ 2268 train 5.1448 , allloss: 5.1456, dt: 1047.78ms, fracRes: 0.7710, norm(attn): 0.1543, norm(output): 1.4062, norm(x): 0.2415, norm(y): 0.9860, norm:0.6733, tok/sec: 125095.04, flops:97.42, batch-reuse:1
@ 2269 train 5.1575 , allloss: 5.1584, dt: 1060.06ms, fracRes: 0.7715, norm(attn): 0.1523, norm(output): 1.4141, norm(x): 0.2414, norm(y): 0.9860, norm:0.6655, tok/sec: 123646.05, flops:96.30, batch-reuse:1
@ 2270 train 5.1990 , allloss: 5.2000, dt: 1048.52ms, fracRes: 0.7727, norm(attn): 0.1494, norm(output): 1.3984, norm(x): 0.2407, norm(y): 0.9859, norm:0.6856, tok/sec: 125006.21, flops:97.36, batch-reuse:1
@ 2271 train 5.1302 , allloss: 5.1310, dt: 1049.03ms, fracRes: 0.7692, norm(attn): 0.1523, norm(output): 1.4062, norm(x): 0.2446, norm(y): 0.9860, norm:0.9596, tok/sec: 124946.35, flops:97.31, batch-reuse:1
@ 2272 train 5.0449 , allloss: 5.0458, dt: 1047.08ms, fracRes: 0.7663, norm(attn): 0.1543, norm(output): 1.4219, norm(x): 0.2535, norm(y): 0.9861, norm:1.2965, tok/sec: 125178.84, flops:97.49, batch-reuse:1
@ 2273 train 5.1646 , allloss: 5.1654, dt: 1051.43ms, fracRes: 0.7695, norm(attn): 0.1553, norm(output): 1.4219, norm(x): 0.2474, norm(y): 0.9859, norm:0.9920, tok/sec: 124660.33, flops:97.09, batch-reuse:1
@ 2274 train 5.0836 , allloss: 5.0844, dt: 1044.47ms, fracRes: 0.7691, norm(attn): 0.1533, norm(output): 1.4141, norm(x): 0.2481, norm(y): 0.9860, norm:0.9377, tok/sec: 125490.99, flops:97.73, batch-reuse:1
@ 2275 train 5.1424 , allloss: 5.1431, dt: 1047.69ms, fracRes: 0.7683, norm(attn): 0.1562, norm(output): 1.4219, norm(x): 0.2494, norm(y): 0.9860, norm:1.4329, tok/sec: 125106.23, flops:97.43, batch-reuse:1
@ 2276 train 5.1305 , allloss: 5.1313, dt: 1063.99ms, fracRes: 0.7652, norm(attn): 0.1572, norm(output): 1.4531, norm(x): 0.2547, norm(y): 0.9860, norm:0.7736, tok/sec: 123189.61, flops:95.94, batch-reuse:1
@ 2277 train 5.1086 , allloss: 5.1093, dt: 1071.69ms, fracRes: 0.7681, norm(attn): 0.1562, norm(output): 1.4375, norm(x): 0.2506, norm(y): 0.9860, norm:0.6695, tok/sec: 122304.48, flops:95.25, batch-reuse:1
@ 2278 train 5.2187 , allloss: 5.2196, dt: 1051.73ms, fracRes: 0.7729, norm(attn): 0.1523, norm(output): 1.4141, norm(x): 0.2403, norm(y): 0.9858, norm:0.9011, tok/sec: 124625.21, flops:97.06, batch-reuse:1
@ 2279 train 5.0700 , allloss: 5.0708, dt: 1067.28ms, fracRes: 0.7673, norm(attn): 0.1562, norm(output): 1.4531, norm(x): 0.2508, norm(y): 0.9860, norm:1.0060, tok/sec: 122809.79, flops:95.64, batch-reuse:1
@ 2280 train 5.0554 , allloss: 5.0560, dt: 1060.20ms, fracRes: 0.7671, norm(attn): 0.1562, norm(output): 1.4375, norm(x): 0.2500, norm(y): 0.9859, norm:0.8100, tok/sec: 123629.53, flops:96.28, batch-reuse:1
@ 2281 train 5.0037 , allloss: 5.0045, dt: 1055.79ms, fracRes: 0.7684, norm(attn): 0.1562, norm(output): 1.4219, norm(x): 0.2491, norm(y): 0.9858, norm:0.9315, tok/sec: 124145.96, flops:96.69, batch-reuse:1
@ 2282 train 5.1853 , allloss: 5.1859, dt: 1053.08ms, fracRes: 0.7680, norm(attn): 0.1562, norm(output): 1.4219, norm(x): 0.2531, norm(y): 0.9858, norm:0.8616, tok/sec: 124465.40, flops:96.93, batch-reuse:1
@ 2283 train 5.0403 , allloss: 5.0411, dt: 1048.15ms, fracRes: 0.7690, norm(attn): 0.1562, norm(output): 1.4141, norm(x): 0.2502, norm(y): 0.9858, norm:0.6772, tok/sec: 125051.11, flops:97.39, batch-reuse:1
@ 2284 train 5.0232 , allloss: 5.0239, dt: 1057.27ms, fracRes: 0.7668, norm(attn): 0.1572, norm(output): 1.4141, norm(x): 0.2514, norm(y): 0.9858, norm:0.8252, tok/sec: 123972.36, flops:96.55, batch-reuse:1
@ 2285 train 5.0374 , allloss: 5.0380, dt: 1048.98ms, fracRes: 0.7671, norm(attn): 0.1572, norm(output): 1.4062, norm(x): 0.2503, norm(y): 0.9858, norm:0.9355, tok/sec: 124952.14, flops:97.31, batch-reuse:1
@ 2286 train 5.0751 , allloss: 5.0758, dt: 1039.51ms, fracRes: 0.7675, norm(attn): 0.1562, norm(output): 1.4219, norm(x): 0.2509, norm(y): 0.9857, norm:0.5606, tok/sec: 126090.70, flops:98.20, batch-reuse:1
@ 2287 train 5.0682 , allloss: 5.0689, dt: 1039.12ms, fracRes: 0.7661, norm(attn): 0.1562, norm(output): 1.4531, norm(x): 0.2564, norm(y): 0.9857, norm:0.5957, tok/sec: 126137.80, flops:98.24, batch-reuse:1
@ 2288 train 5.1232 , allloss: 5.1239, dt: 1264.63ms, fracRes: 0.7690, norm(attn): 0.1543, norm(output): 1.4375, norm(x): 0.2516, norm(y): 0.9856, norm:0.6718, tok/sec: 103644.85, flops:80.72, batch-reuse:1
@ 2289 train 5.0194 , allloss: 5.0203, dt: 1066.45ms, fracRes: 0.7702, norm(attn): 0.1553, norm(output): 1.4453, norm(x): 0.2501, norm(y): 0.9855, norm:0.9230, tok/sec: 122904.81, flops:95.72, batch-reuse:1
@ 2290 train 4.9725 , allloss: 4.9733, dt: 1049.53ms, fracRes: 0.7682, norm(attn): 0.1562, norm(output): 1.4453, norm(x): 0.2528, norm(y): 0.9857, norm:0.7803, tok/sec: 124885.89, flops:97.26, batch-reuse:1
@ 2291 train 5.1375 , allloss: 5.1383, dt: 1065.43ms, fracRes: 0.7676, norm(attn): 0.1553, norm(output): 1.4531, norm(x): 0.2549, norm(y): 0.9856, norm:0.6389, tok/sec: 123022.56, flops:95.81, batch-reuse:1
@ 2292 train 5.0571 , allloss: 5.0581, dt: 1047.47ms, fracRes: 0.7700, norm(attn): 0.1562, norm(output): 1.4375, norm(x): 0.2492, norm(y): 0.9855, norm:0.7437, tok/sec: 125131.72, flops:97.45, batch-reuse:1
@ 2293 train 5.1426 , allloss: 5.1434, dt: 1060.06ms, fracRes: 0.7678, norm(attn): 0.1562, norm(output): 1.4531, norm(x): 0.2533, norm(y): 0.9855, norm:0.7126, tok/sec: 123646.16, flops:96.30, batch-reuse:1
@ 2294 train 5.0919 , allloss: 5.0926, dt: 1051.75ms, fracRes: 0.7674, norm(attn): 0.1572, norm(output): 1.4531, norm(x): 0.2511, norm(y): 0.9856, norm:0.8173, tok/sec: 124622.52, flops:97.06, batch-reuse:1
@ 2295 train 5.0214 , allloss: 5.0221, dt: 1050.33ms, fracRes: 0.7681, norm(attn): 0.1572, norm(output): 1.4453, norm(x): 0.2510, norm(y): 0.9855, norm:0.7805, tok/sec: 124791.32, flops:97.19, batch-reuse:1
@ 2296 train 5.0157 , allloss: 5.0165, dt: 1039.70ms, fracRes: 0.7708, norm(attn): 0.1572, norm(output): 1.4531, norm(x): 0.2487, norm(y): 0.9855, norm:0.5820, tok/sec: 126066.58, flops:98.18, batch-reuse:1
@ 2297 train 5.0235 , allloss: 5.0242, dt: 1042.96ms, fracRes: 0.7669, norm(attn): 0.1572, norm(output): 1.4609, norm(x): 0.2552, norm(y): 0.9855, norm:0.6722, tok/sec: 125673.50, flops:97.87, batch-reuse:1
@ 2298 train 5.0447 , allloss: 5.0455, dt: 1052.59ms, fracRes: 0.7694, norm(attn): 0.1553, norm(output): 1.4531, norm(x): 0.2494, norm(y): 0.9854, norm:0.6754, tok/sec: 124522.94, flops:96.98, batch-reuse:1
@ 2299 train 5.0510 , allloss: 5.0517, dt: 1045.84ms, fracRes: 0.7704, norm(attn): 0.1543, norm(output): 1.4531, norm(x): 0.2491, norm(y): 0.9854, norm:0.5978, tok/sec: 125327.29, flops:97.61, batch-reuse:1
@ 2300 train 5.0066 , allloss: 5.0075, dt: 1050.20ms, fracRes: 0.7705, norm(attn): 0.1553, norm(output): 1.4375, norm(x): 0.2489, norm(y): 0.9855, norm:0.7202, tok/sec: 124806.56, flops:97.20, batch-reuse:1
@ 2301 train 5.0447 , allloss: 5.0455, dt: 1047.91ms, fracRes: 0.7696, norm(attn): 0.1562, norm(output): 1.4375, norm(x): 0.2489, norm(y): 0.9854, norm:0.6397, tok/sec: 125079.05, flops:97.41, batch-reuse:1
@ 2302 train 5.0163 , allloss: 5.0171, dt: 1046.41ms, fracRes: 0.7702, norm(attn): 0.1562, norm(output): 1.4453, norm(x): 0.2479, norm(y): 0.9853, norm:0.6962, tok/sec: 125258.28, flops:97.55, batch-reuse:1
@ 2303 train 5.0348 , allloss: 5.0355, dt: 1047.96ms, fracRes: 0.7661, norm(attn): 0.1562, norm(output): 1.4609, norm(x): 0.2557, norm(y): 0.9853, norm:0.6445, tok/sec: 125072.93, flops:97.41, batch-reuse:1
@ 2304 train 5.0671 , allloss: 5.0679, dt: 1065.03ms, fracRes: 0.7690, norm(attn): 0.1562, norm(output): 1.4688, norm(x): 0.2513, norm(y): 0.9853, norm:0.6442, tok/sec: 123068.41, flops:95.85, batch-reuse:1
@ 2305 train 4.9916 , allloss: 4.9923, dt: 1055.16ms, fracRes: 0.7666, norm(attn): 0.1562, norm(output): 1.4609, norm(x): 0.2566, norm(y): 0.9854, norm:0.5667, tok/sec: 124219.57, flops:96.74, batch-reuse:1
@ 2306 train 5.0786 , allloss: 5.0795, dt: 1046.20ms, fracRes: 0.7717, norm(attn): 0.1553, norm(output): 1.4531, norm(x): 0.2478, norm(y): 0.9852, norm:0.6081, tok/sec: 125283.37, flops:97.57, batch-reuse:1
@ 2307 train 5.0892 , allloss: 5.0899, dt: 1061.99ms, fracRes: 0.7683, norm(attn): 0.1572, norm(output): 1.4688, norm(x): 0.2513, norm(y): 0.9853, norm:0.6648, tok/sec: 123421.32, flops:96.12, batch-reuse:1
@ 2308 train 5.0523 , allloss: 5.0531, dt: 1043.42ms, fracRes: 0.7686, norm(attn): 0.1553, norm(output): 1.4453, norm(x): 0.2499, norm(y): 0.9853, norm:0.6241, tok/sec: 125617.84, flops:97.83, batch-reuse:1
@ 2309 train 4.9497 , allloss: 4.9505, dt: 1043.37ms, fracRes: 0.7634, norm(attn): 0.1582, norm(output): 1.4688, norm(x): 0.2609, norm(y): 0.9852, norm:0.6609, tok/sec: 125623.33, flops:97.84, batch-reuse:1
@ 2310 train 5.1248 , allloss: 5.1255, dt: 1053.40ms, fracRes: 0.7661, norm(attn): 0.1553, norm(output): 1.4531, norm(x): 0.2560, norm(y): 0.9852, norm:0.7561, tok/sec: 124427.54, flops:96.90, batch-reuse:1
@ 2311 train 5.0821 , allloss: 5.0828, dt: 1049.48ms, fracRes: 0.7686, norm(attn): 0.1543, norm(output): 1.4531, norm(x): 0.2521, norm(y): 0.9851, norm:0.8387, tok/sec: 124892.02, flops:97.27, batch-reuse:1
@ 2312 train 5.0430 , allloss: 5.0438, dt: 1055.33ms, fracRes: 0.7680, norm(attn): 0.1553, norm(output): 1.4297, norm(x): 0.2508, norm(y): 0.9851, norm:0.7577, tok/sec: 124200.01, flops:96.73, batch-reuse:1
@ 2313 train 5.0716 , allloss: 5.0724, dt: 1054.15ms, fracRes: 0.7682, norm(attn): 0.1562, norm(output): 1.4453, norm(x): 0.2525, norm(y): 0.9851, norm:0.6138, tok/sec: 124338.49, flops:96.84, batch-reuse:1
@ 2314 train 5.0453 , allloss: 5.0459, dt: 1060.60ms, fracRes: 0.7679, norm(attn): 0.1572, norm(output): 1.4297, norm(x): 0.2521, norm(y): 0.9851, norm:0.5993, tok/sec: 123582.82, flops:96.25, batch-reuse:1
@ 2315 train 4.9903 , allloss: 4.9909, dt: 1046.93ms, fracRes: 0.7667, norm(attn): 0.1582, norm(output): 1.4375, norm(x): 0.2547, norm(y): 0.9852, norm:0.5963, tok/sec: 125196.15, flops:97.50, batch-reuse:1
@ 2316 train 5.0314 , allloss: 5.0323, dt: 1059.64ms, fracRes: 0.7636, norm(attn): 0.1592, norm(output): 1.4844, norm(x): 0.2590, norm(y): 0.9851, norm:0.7250, tok/sec: 123694.68, flops:96.33, batch-reuse:1
@ 2317 train 4.9755 , allloss: 4.9763, dt: 1043.81ms, fracRes: 0.7654, norm(attn): 0.1582, norm(output): 1.4453, norm(x): 0.2578, norm(y): 0.9851, norm:0.7927, tok/sec: 125570.76, flops:97.79, batch-reuse:1
@ 2318 train 5.0378 , allloss: 5.0386, dt: 1050.87ms, fracRes: 0.7664, norm(attn): 0.1562, norm(output): 1.4609, norm(x): 0.2576, norm(y): 0.9850, norm:0.7933, tok/sec: 124727.11, flops:97.14, batch-reuse:1
@ 2319 train 5.0488 , allloss: 5.0496, dt: 1048.82ms, fracRes: 0.7669, norm(attn): 0.1572, norm(output): 1.4297, norm(x): 0.2524, norm(y): 0.9851, norm:0.7101, tok/sec: 124970.97, flops:97.33, batch-reuse:1
@ 2320 train 4.9871 , allloss: 4.9877, dt: 1079.07ms, fracRes: 0.7668, norm(attn): 0.1572, norm(output): 1.4531, norm(x): 0.2530, norm(y): 0.9851, norm:0.6848, tok/sec: 121468.09, flops:94.60, batch-reuse:1
@ 2321 train 5.0081 , allloss: 5.0090, dt: 1073.32ms, fracRes: 0.7711, norm(attn): 0.1572, norm(output): 1.4453, norm(x): 0.2508, norm(y): 0.9849, norm:0.9261, tok/sec: 122117.86, flops:95.11, batch-reuse:1
@ 2322 train 5.0286 , allloss: 5.0293, dt: 1044.70ms, fracRes: 0.7663, norm(attn): 0.1562, norm(output): 1.4531, norm(x): 0.2562, norm(y): 0.9849, norm:0.8123, tok/sec: 125463.29, flops:97.71, batch-reuse:1
@ 2323 train 4.8997 , allloss: 4.9004, dt: 1059.23ms, fracRes: 0.7670, norm(attn): 0.1572, norm(output): 1.4531, norm(x): 0.2562, norm(y): 0.9850, norm:0.6782, tok/sec: 123742.88, flops:96.37, batch-reuse:1
@ 2324 train 5.0316 , allloss: 5.0323, dt: 1048.25ms, fracRes: 0.7661, norm(attn): 0.1543, norm(output): 1.4688, norm(x): 0.2568, norm(y): 0.9850, norm:0.7158, tok/sec: 125038.45, flops:97.38, batch-reuse:1
@ 2325 train 5.0650 , allloss: 5.0656, dt: 1052.40ms, fracRes: 0.7679, norm(attn): 0.1562, norm(output): 1.4609, norm(x): 0.2535, norm(y): 0.9850, norm:0.8248, tok/sec: 124546.27, flops:97.00, batch-reuse:1
@ 2326 train 4.9653 , allloss: 4.9662, dt: 1053.29ms, fracRes: 0.7677, norm(attn): 0.1592, norm(output): 1.4531, norm(x): 0.2538, norm(y): 0.9849, norm:0.7958, tok/sec: 124440.12, flops:96.91, batch-reuse:1
@ 2327 train 4.9731 , allloss: 4.9738, dt: 1048.65ms, fracRes: 0.7645, norm(attn): 0.1572, norm(output): 1.4766, norm(x): 0.2605, norm(y): 0.9850, norm:0.6809, tok/sec: 124991.55, flops:97.34, batch-reuse:1
@ 2328 train 4.9120 , allloss: 4.9127, dt: 1054.71ms, fracRes: 0.7675, norm(attn): 0.1562, norm(output): 1.4609, norm(x): 0.2552, norm(y): 0.9849, norm:0.6956, tok/sec: 124272.53, flops:96.78, batch-reuse:1
@ 2329 train 4.6196 , allloss: 4.6225, dt: 1051.58ms, fracRes: 0.8011, norm(attn): 0.1475, norm(output): 1.4609, norm(x): 0.2133, norm(y): 0.9839, norm:1.9116, tok/sec: 124643.35, flops:97.07, batch-reuse:1
@ 2330 train 5.0640 , allloss: 5.0648, dt: 1058.62ms, fracRes: 0.7676, norm(attn): 0.1543, norm(output): 1.4766, norm(x): 0.2552, norm(y): 0.9847, norm:0.9820, tok/sec: 123814.19, flops:96.43, batch-reuse:1
@ 2331 train 4.8815 , allloss: 4.8824, dt: 1053.77ms, fracRes: 0.7708, norm(attn): 0.1562, norm(output): 1.4688, norm(x): 0.2511, norm(y): 0.9847, norm:0.9792, tok/sec: 124383.65, flops:96.87, batch-reuse:1
@ 2332 train 5.0689 , allloss: 5.0697, dt: 1053.47ms, fracRes: 0.7691, norm(attn): 0.1572, norm(output): 1.4688, norm(x): 0.2529, norm(y): 0.9848, norm:0.9558, tok/sec: 124419.28, flops:96.90, batch-reuse:1
@ 2333 train 4.8722 , allloss: 4.8729, dt: 1047.25ms, fracRes: 0.7671, norm(attn): 0.1611, norm(output): 1.4766, norm(x): 0.2549, norm(y): 0.9849, norm:0.8521, tok/sec: 125157.78, flops:97.47, batch-reuse:1
@ 2334 train 4.9060 , allloss: 4.9067, dt: 1048.27ms, fracRes: 0.7636, norm(attn): 0.1621, norm(output): 1.4766, norm(x): 0.2601, norm(y): 0.9849, norm:0.9151, tok/sec: 125036.23, flops:97.38, batch-reuse:1
@ 2335 train 5.0249 , allloss: 5.0256, dt: 1058.10ms, fracRes: 0.7658, norm(attn): 0.1602, norm(output): 1.4688, norm(x): 0.2550, norm(y): 0.9847, norm:0.9459, tok/sec: 123875.10, flops:96.47, batch-reuse:1
@ 2336 train 5.0889 , allloss: 5.0899, dt: 1055.98ms, fracRes: 0.7684, norm(attn): 0.1562, norm(output): 1.4688, norm(x): 0.2520, norm(y): 0.9845, norm:0.6631, tok/sec: 124123.93, flops:96.67, batch-reuse:1
@ 2337 train 4.9484 , allloss: 4.9491, dt: 1045.81ms, fracRes: 0.7650, norm(attn): 0.1572, norm(output): 1.4766, norm(x): 0.2587, norm(y): 0.9848, norm:0.6223, tok/sec: 125330.26, flops:97.61, batch-reuse:1
@ 2338 train 4.9853 , allloss: 4.9861, dt: 1062.11ms, fracRes: 0.7672, norm(attn): 0.1562, norm(output): 1.4688, norm(x): 0.2568, norm(y): 0.9846, norm:0.7718, tok/sec: 123407.55, flops:96.11, batch-reuse:1
@ 2339 train 4.9325 , allloss: 4.9334, dt: 1068.45ms, fracRes: 0.7682, norm(attn): 0.1562, norm(output): 1.4688, norm(x): 0.2554, norm(y): 0.9848, norm:0.8847, tok/sec: 122674.36, flops:95.54, batch-reuse:1
@ 2340 train 4.9795 , allloss: 4.9802, dt: 1059.16ms, fracRes: 0.7655, norm(attn): 0.1582, norm(output): 1.4766, norm(x): 0.2586, norm(y): 0.9846, norm:1.0439, tok/sec: 123750.48, flops:96.38, batch-reuse:1
@ 2341 train 4.9779 , allloss: 4.9785, dt: 1049.29ms, fracRes: 0.7675, norm(attn): 0.1582, norm(output): 1.4688, norm(x): 0.2514, norm(y): 0.9846, norm:0.8917, tok/sec: 124915.38, flops:97.28, batch-reuse:1
@ 2342 train 4.8767 , allloss: 4.8774, dt: 1052.78ms, fracRes: 0.7672, norm(attn): 0.1611, norm(output): 1.4766, norm(x): 0.2510, norm(y): 0.9845, norm:0.6368, tok/sec: 124501.31, flops:96.96, batch-reuse:1
@ 2343 train 4.9673 , allloss: 4.9681, dt: 1056.08ms, fracRes: 0.7668, norm(attn): 0.1582, norm(output): 1.4766, norm(x): 0.2523, norm(y): 0.9845, norm:0.7004, tok/sec: 124111.91, flops:96.66, batch-reuse:1
@ 2344 train 5.0778 , allloss: 5.0787, dt: 1042.79ms, fracRes: 0.7708, norm(attn): 0.1562, norm(output): 1.4609, norm(x): 0.2475, norm(y): 0.9843, norm:0.6506, tok/sec: 125693.95, flops:97.89, batch-reuse:1
@ 2345 train 4.8960 , allloss: 4.8968, dt: 1040.99ms, fracRes: 0.7669, norm(attn): 0.1562, norm(output): 1.4844, norm(x): 0.2573, norm(y): 0.9845, norm:0.6163, tok/sec: 125910.84, flops:98.06, batch-reuse:1
@ 2346 train 5.0183 , allloss: 5.0192, dt: 1055.60ms, fracRes: 0.7699, norm(attn): 0.1553, norm(output): 1.4688, norm(x): 0.2533, norm(y): 0.9843, norm:0.7936, tok/sec: 124167.89, flops:96.70, batch-reuse:1
@ 2347 train 4.8860 , allloss: 4.8866, dt: 1058.77ms, fracRes: 0.7646, norm(attn): 0.1572, norm(output): 1.4844, norm(x): 0.2602, norm(y): 0.9845, norm:0.6927, tok/sec: 123796.21, flops:96.41, batch-reuse:1
@ 2348 train 4.9968 , allloss: 4.9975, dt: 1080.17ms, fracRes: 0.7681, norm(attn): 0.1553, norm(output): 1.4844, norm(x): 0.2521, norm(y): 0.9844, norm:0.7160, tok/sec: 121343.31, flops:94.50, batch-reuse:1
@ 2349 train 4.9951 , allloss: 4.9959, dt: 1078.64ms, fracRes: 0.7675, norm(attn): 0.1562, norm(output): 1.4688, norm(x): 0.2527, norm(y): 0.9843, norm:0.5903, tok/sec: 121515.64, flops:94.64, batch-reuse:1
@ 2350 train 4.8878 , allloss: 4.8886, dt: 1045.27ms, fracRes: 0.7666, norm(attn): 0.1572, norm(output): 1.4844, norm(x): 0.2542, norm(y): 0.9844, norm:0.7734, tok/sec: 125394.81, flops:97.66, batch-reuse:1
@ 2351 train 5.0533 , allloss: 5.0543, dt: 1052.65ms, fracRes: 0.7687, norm(attn): 0.1582, norm(output): 1.4766, norm(x): 0.2525, norm(y): 0.9844, norm:0.6687, tok/sec: 124516.51, flops:96.97, batch-reuse:1
@ 2352 train 4.9948 , allloss: 4.9955, dt: 1057.78ms, fracRes: 0.7659, norm(attn): 0.1572, norm(output): 1.4688, norm(x): 0.2564, norm(y): 0.9843, norm:0.8706, tok/sec: 123912.37, flops:96.50, batch-reuse:1
@ 2353 train 4.9730 , allloss: 4.9739, dt: 1047.56ms, fracRes: 0.7681, norm(attn): 0.1572, norm(output): 1.4609, norm(x): 0.2526, norm(y): 0.9842, norm:0.7209, tok/sec: 125121.27, flops:97.44, batch-reuse:1
@ 2354 train 5.0049 , allloss: 5.0059, dt: 1049.97ms, fracRes: 0.7694, norm(attn): 0.1562, norm(output): 1.4688, norm(x): 0.2486, norm(y): 0.9841, norm:0.6027, tok/sec: 124833.94, flops:97.22, batch-reuse:1
@ 2355 train 4.9447 , allloss: 4.9454, dt: 1051.70ms, fracRes: 0.7674, norm(attn): 0.1572, norm(output): 1.4688, norm(x): 0.2515, norm(y): 0.9842, norm:0.6658, tok/sec: 124628.94, flops:97.06, batch-reuse:1
@ 2356 train 5.0483 , allloss: 5.0489, dt: 1047.02ms, fracRes: 0.7647, norm(attn): 0.1572, norm(output): 1.4922, norm(x): 0.2602, norm(y): 0.9843, norm:0.7030, tok/sec: 125186.23, flops:97.50, batch-reuse:1
@ 2357 train 5.0131 , allloss: 5.0139, dt: 1043.31ms, fracRes: 0.7657, norm(attn): 0.1582, norm(output): 1.4844, norm(x): 0.2587, norm(y): 0.9841, norm:0.6667, tok/sec: 125630.65, flops:97.84, batch-reuse:1
@ 2358 train 5.0257 , allloss: 5.0265, dt: 1058.32ms, fracRes: 0.7681, norm(attn): 0.1572, norm(output): 1.4844, norm(x): 0.2564, norm(y): 0.9840, norm:0.7698, tok/sec: 123848.86, flops:96.45, batch-reuse:1
@ 2359 train 4.9775 , allloss: 4.9784, dt: 1059.81ms, fracRes: 0.7681, norm(attn): 0.1582, norm(output): 1.4688, norm(x): 0.2546, norm(y): 0.9841, norm:0.9833, tok/sec: 123675.15, flops:96.32, batch-reuse:1
@ 2360 train 4.9828 , allloss: 4.9836, dt: 1079.12ms, fracRes: 0.7659, norm(attn): 0.1602, norm(output): 1.4766, norm(x): 0.2602, norm(y): 0.9842, norm:0.8424, tok/sec: 121461.46, flops:94.59, batch-reuse:1
@ 2361 train 4.9632 , allloss: 4.9641, dt: 1057.32ms, fracRes: 0.7662, norm(attn): 0.1572, norm(output): 1.4844, norm(x): 0.2583, norm(y): 0.9840, norm:0.6858, tok/sec: 123966.24, flops:96.55, batch-reuse:1
@ 2362 train 4.9702 , allloss: 4.9710, dt: 1068.28ms, fracRes: 0.7661, norm(attn): 0.1572, norm(output): 1.4766, norm(x): 0.2570, norm(y): 0.9840, norm:0.8239, tok/sec: 122693.91, flops:95.55, batch-reuse:1
@ 2363 train 5.0176 , allloss: 5.0185, dt: 1061.26ms, fracRes: 0.7665, norm(attn): 0.1572, norm(output): 1.4688, norm(x): 0.2564, norm(y): 0.9839, norm:0.6906, tok/sec: 123505.94, flops:96.19, batch-reuse:1
@ 2364 train 5.0446 , allloss: 5.0456, dt: 1054.07ms, fracRes: 0.7727, norm(attn): 0.1533, norm(output): 1.4531, norm(x): 0.2458, norm(y): 0.9837, norm:0.6452, tok/sec: 124348.31, flops:96.84, batch-reuse:1
@ 2365 train 4.9923 , allloss: 4.9932, dt: 1068.63ms, fracRes: 0.7703, norm(attn): 0.1543, norm(output): 1.4609, norm(x): 0.2502, norm(y): 0.9837, norm:0.8497, tok/sec: 122654.54, flops:95.52, batch-reuse:1
@ 2366 train 5.0096 , allloss: 5.0106, dt: 1068.77ms, fracRes: 0.7692, norm(attn): 0.1553, norm(output): 1.4688, norm(x): 0.2516, norm(y): 0.9838, norm:1.0726, tok/sec: 122638.40, flops:95.51, batch-reuse:1
@ 2367 train 4.8913 , allloss: 4.8921, dt: 1061.41ms, fracRes: 0.7671, norm(attn): 0.1582, norm(output): 1.4844, norm(x): 0.2564, norm(y): 0.9839, norm:0.9371, tok/sec: 123488.24, flops:96.17, batch-reuse:1
@ 2368 train 4.8493 , allloss: 4.8500, dt: 1061.68ms, fracRes: 0.7649, norm(attn): 0.1602, norm(output): 1.4688, norm(x): 0.2595, norm(y): 0.9841, norm:0.8757, tok/sec: 123456.71, flops:96.15, batch-reuse:1
@ 2369 train 4.8806 , allloss: 4.8813, dt: 1060.49ms, fracRes: 0.7646, norm(attn): 0.1602, norm(output): 1.4844, norm(x): 0.2605, norm(y): 0.9840, norm:0.7165, tok/sec: 123595.49, flops:96.26, batch-reuse:1
@ 2370 train 4.9091 , allloss: 4.9099, dt: 1044.33ms, fracRes: 0.7680, norm(attn): 0.1572, norm(output): 1.4766, norm(x): 0.2543, norm(y): 0.9837, norm:0.7384, tok/sec: 125508.32, flops:97.75, batch-reuse:1
@ 2371 train 4.7614 , allloss: 4.7622, dt: 1059.89ms, fracRes: 0.7643, norm(attn): 0.1582, norm(output): 1.4844, norm(x): 0.2615, norm(y): 0.9839, norm:0.7969, tok/sec: 123666.02, flops:96.31, batch-reuse:1
@ 2372 train 4.8180 , allloss: 4.8187, dt: 1055.52ms, fracRes: 0.7646, norm(attn): 0.1592, norm(output): 1.4844, norm(x): 0.2617, norm(y): 0.9839, norm:0.6991, tok/sec: 124177.99, flops:96.71, batch-reuse:1
@ 2373 train 4.8528 , allloss: 4.8535, dt: 1062.46ms, fracRes: 0.7660, norm(attn): 0.1592, norm(output): 1.4688, norm(x): 0.2568, norm(y): 0.9839, norm:0.6869, tok/sec: 123366.67, flops:96.08, batch-reuse:1
@ 2374 train 4.8358 , allloss: 4.8365, dt: 1044.68ms, fracRes: 0.7651, norm(attn): 0.1611, norm(output): 1.4844, norm(x): 0.2595, norm(y): 0.9839, norm:0.6895, tok/sec: 125466.36, flops:97.71, batch-reuse:1
@ 2375 train 4.8566 , allloss: 4.8573, dt: 1050.19ms, fracRes: 0.7636, norm(attn): 0.1621, norm(output): 1.4922, norm(x): 0.2609, norm(y): 0.9839, norm:0.6564, tok/sec: 124807.87, flops:97.20, batch-reuse:1
@ 2376 train 4.8972 , allloss: 4.8980, dt: 1043.85ms, fracRes: 0.7650, norm(attn): 0.1611, norm(output): 1.4922, norm(x): 0.2601, norm(y): 0.9837, norm:0.7637, tok/sec: 125565.94, flops:97.79, batch-reuse:1
@ 2377 train 4.8642 , allloss: 4.8651, dt: 1061.74ms, fracRes: 0.7689, norm(attn): 0.1582, norm(output): 1.4688, norm(x): 0.2541, norm(y): 0.9837, norm:0.6581, tok/sec: 123450.72, flops:96.14, batch-reuse:1
@ 2378 train 4.8361 , allloss: 4.8370, dt: 1065.90ms, fracRes: 0.7664, norm(attn): 0.1582, norm(output): 1.4688, norm(x): 0.2581, norm(y): 0.9837, norm:0.6113, tok/sec: 122968.43, flops:95.77, batch-reuse:1
@ 2379 train 4.7830 , allloss: 4.7837, dt: 1057.24ms, fracRes: 0.7655, norm(attn): 0.1582, norm(output): 1.4766, norm(x): 0.2586, norm(y): 0.9838, norm:0.6631, tok/sec: 123976.14, flops:96.55, batch-reuse:1
@ 2380 train 5.0494 , allloss: 5.0507, dt: 1053.57ms, fracRes: 0.7741, norm(attn): 0.1592, norm(output): 1.4844, norm(x): 0.2444, norm(y): 0.9833, norm:0.9971, tok/sec: 124407.04, flops:96.89, batch-reuse:1
@ 2381 train 4.9235 , allloss: 4.9244, dt: 1051.75ms, fracRes: 0.7654, norm(attn): 0.1602, norm(output): 1.4844, norm(x): 0.2565, norm(y): 0.9836, norm:0.6886, tok/sec: 124622.52, flops:97.06, batch-reuse:1
@ 2382 train 4.8833 , allloss: 4.8841, dt: 1064.78ms, fracRes: 0.7649, norm(attn): 0.1582, norm(output): 1.4766, norm(x): 0.2591, norm(y): 0.9836, norm:0.7623, tok/sec: 123098.25, flops:95.87, batch-reuse:1
@ 2383 train 4.8536 , allloss: 4.8544, dt: 1047.50ms, fracRes: 0.7657, norm(attn): 0.1592, norm(output): 1.4766, norm(x): 0.2588, norm(y): 0.9837, norm:0.6691, tok/sec: 125128.19, flops:97.45, batch-reuse:1
@ 2384 train 4.8893 , allloss: 4.8900, dt: 1047.05ms, fracRes: 0.7661, norm(attn): 0.1582, norm(output): 1.4844, norm(x): 0.2595, norm(y): 0.9837, norm:0.6928, tok/sec: 125182.06, flops:97.49, batch-reuse:1
@ 2385 train 4.8527 , allloss: 4.8533, dt: 1041.43ms, fracRes: 0.7657, norm(attn): 0.1582, norm(output): 1.4844, norm(x): 0.2599, norm(y): 0.9836, norm:0.7018, tok/sec: 125858.23, flops:98.02, batch-reuse:1
@ 2386 train 4.7958 , allloss: 4.7965, dt: 1045.84ms, fracRes: 0.7672, norm(attn): 0.1582, norm(output): 1.4844, norm(x): 0.2576, norm(y): 0.9835, norm:0.6545, tok/sec: 125327.24, flops:97.61, batch-reuse:1
@ 2387 train 4.8491 , allloss: 4.8498, dt: 1063.92ms, fracRes: 0.7656, norm(attn): 0.1582, norm(output): 1.5000, norm(x): 0.2605, norm(y): 0.9835, norm:0.5770, tok/sec: 123197.40, flops:95.95, batch-reuse:1
@ 2388 train 4.8850 , allloss: 4.8857, dt: 1062.49ms, fracRes: 0.7667, norm(attn): 0.1582, norm(output): 1.5000, norm(x): 0.2576, norm(y): 0.9835, norm:0.6601, tok/sec: 123362.80, flops:96.08, batch-reuse:1
@ 2389 train 4.7946 , allloss: 4.7952, dt: 1063.41ms, fracRes: 0.7644, norm(attn): 0.1611, norm(output): 1.4922, norm(x): 0.2617, norm(y): 0.9837, norm:0.5935, tok/sec: 123256.31, flops:95.99, batch-reuse:1
@ 2390 train 4.8841 , allloss: 4.8850, dt: 1057.90ms, fracRes: 0.7703, norm(attn): 0.1582, norm(output): 1.4766, norm(x): 0.2512, norm(y): 0.9833, norm:0.6279, tok/sec: 123898.07, flops:96.49, batch-reuse:1
@ 2391 train 4.9426 , allloss: 4.9435, dt: 1058.35ms, fracRes: 0.7693, norm(attn): 0.1562, norm(output): 1.4844, norm(x): 0.2539, norm(y): 0.9833, norm:0.8369, tok/sec: 123846.16, flops:96.45, batch-reuse:1
@ 2392 train 4.8873 , allloss: 4.8880, dt: 1064.50ms, fracRes: 0.7647, norm(attn): 0.1582, norm(output): 1.5000, norm(x): 0.2629, norm(y): 0.9834, norm:0.8445, tok/sec: 123129.57, flops:95.89, batch-reuse:1
@ 2393 train 5.0199 , allloss: 5.0209, dt: 1050.14ms, fracRes: 0.7727, norm(attn): 0.1553, norm(output): 1.4766, norm(x): 0.2467, norm(y): 0.9830, norm:0.7532, tok/sec: 124814.07, flops:97.21, batch-reuse:1
@ 2394 train 4.8978 , allloss: 4.8984, dt: 1051.27ms, fracRes: 0.7647, norm(attn): 0.1572, norm(output): 1.4922, norm(x): 0.2605, norm(y): 0.9833, norm:0.8463, tok/sec: 124680.07, flops:97.10, batch-reuse:1
@ 2395 train 4.8594 , allloss: 4.8601, dt: 1050.62ms, fracRes: 0.7691, norm(attn): 0.1582, norm(output): 1.4922, norm(x): 0.2535, norm(y): 0.9833, norm:0.8509, tok/sec: 124756.69, flops:97.16, batch-reuse:1
@ 2396 train 4.8531 , allloss: 4.8537, dt: 1061.41ms, fracRes: 0.7660, norm(attn): 0.1582, norm(output): 1.5000, norm(x): 0.2576, norm(y): 0.9834, norm:0.7753, tok/sec: 123488.77, flops:96.17, batch-reuse:1
@ 2397 train 4.7984 , allloss: 4.7992, dt: 1068.35ms, fracRes: 0.7654, norm(attn): 0.1572, norm(output): 1.5000, norm(x): 0.2590, norm(y): 0.9833, norm:0.8247, tok/sec: 122685.86, flops:95.55, batch-reuse:1
@ 2398 train 4.9094 , allloss: 4.9103, dt: 1062.99ms, fracRes: 0.7693, norm(attn): 0.1602, norm(output): 1.4844, norm(x): 0.2534, norm(y): 0.9832, norm:0.8890, tok/sec: 123304.47, flops:96.03, batch-reuse:1
@ 2399 train 4.8277 , allloss: 4.8285, dt: 1043.04ms, fracRes: 0.7650, norm(attn): 0.1602, norm(output): 1.5000, norm(x): 0.2614, norm(y): 0.9832, norm:0.7222, tok/sec: 125663.01, flops:97.87, batch-reuse:1
@ 2400 train 4.8177 , allloss: 4.8184, dt: 1067.40ms, fracRes: 0.7661, norm(attn): 0.1592, norm(output): 1.5000, norm(x): 0.2588, norm(y): 0.9832, norm:0.7239, tok/sec: 122795.94, flops:95.63, batch-reuse:1
@ 2401 train 4.9062 , allloss: 4.9070, dt: 1055.96ms, fracRes: 0.7659, norm(attn): 0.1592, norm(output): 1.5000, norm(x): 0.2572, norm(y): 0.9832, norm:0.6335, tok/sec: 124125.50, flops:96.67, batch-reuse:1
@ 2402 train 4.9017 , allloss: 4.9024, dt: 1055.59ms, fracRes: 0.7699, norm(attn): 0.1582, norm(output): 1.4922, norm(x): 0.2513, norm(y): 0.9830, norm:0.7095, tok/sec: 124169.54, flops:96.70, batch-reuse:1
@ 2403 train 4.7598 , allloss: 4.7608, dt: 1052.29ms, fracRes: 0.7710, norm(attn): 0.1572, norm(output): 1.5000, norm(x): 0.2504, norm(y): 0.9829, norm:0.6981, tok/sec: 124559.36, flops:97.01, batch-reuse:1
@ 2404 train 4.7820 , allloss: 4.7827, dt: 1051.94ms, fracRes: 0.7650, norm(attn): 0.1592, norm(output): 1.5078, norm(x): 0.2626, norm(y): 0.9832, norm:0.6949, tok/sec: 124600.24, flops:97.04, batch-reuse:1
@ 2405 train 4.8628 , allloss: 4.8636, dt: 1068.08ms, fracRes: 0.7680, norm(attn): 0.1582, norm(output): 1.5000, norm(x): 0.2583, norm(y): 0.9831, norm:0.7060, tok/sec: 122717.79, flops:95.57, batch-reuse:1
@ 2406 train 4.8030 , allloss: 4.8037, dt: 1069.12ms, fracRes: 0.7647, norm(attn): 0.1602, norm(output): 1.5078, norm(x): 0.2624, norm(y): 0.9832, norm:0.7722, tok/sec: 122598.22, flops:95.48, batch-reuse:1
@ 2407 train 4.7964 , allloss: 4.7970, dt: 1059.24ms, fracRes: 0.7661, norm(attn): 0.1602, norm(output): 1.5000, norm(x): 0.2579, norm(y): 0.9831, norm:0.7508, tok/sec: 123741.20, flops:96.37, batch-reuse:1
@ 2408 train 4.8341 , allloss: 4.8348, dt: 1057.85ms, fracRes: 0.7666, norm(attn): 0.1621, norm(output): 1.5000, norm(x): 0.2576, norm(y): 0.9829, norm:0.7590, tok/sec: 123903.85, flops:96.50, batch-reuse:1
@ 2409 train 4.8303 , allloss: 4.8309, dt: 1065.28ms, fracRes: 0.7652, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2607, norm(y): 0.9830, norm:0.6479, tok/sec: 123040.23, flops:95.82, batch-reuse:1
@ 2410 train 4.7994 , allloss: 4.8000, dt: 1061.48ms, fracRes: 0.7659, norm(attn): 0.1582, norm(output): 1.5000, norm(x): 0.2589, norm(y): 0.9830, norm:0.8068, tok/sec: 123480.75, flops:96.17, batch-reuse:1
@ 2411 train 4.8336 , allloss: 4.8344, dt: 1064.20ms, fracRes: 0.7624, norm(attn): 0.1611, norm(output): 1.5234, norm(x): 0.2655, norm(y): 0.9830, norm:0.9614, tok/sec: 123164.94, flops:95.92, batch-reuse:1
@ 2412 train 4.9100 , allloss: 4.9109, dt: 1056.98ms, fracRes: 0.7691, norm(attn): 0.1572, norm(output): 1.5078, norm(x): 0.2544, norm(y): 0.9828, norm:1.0970, tok/sec: 124005.61, flops:96.58, batch-reuse:1
@ 2413 train 4.9298 , allloss: 4.9307, dt: 1060.61ms, fracRes: 0.7706, norm(attn): 0.1572, norm(output): 1.5078, norm(x): 0.2514, norm(y): 0.9828, norm:0.8733, tok/sec: 123581.32, flops:96.25, batch-reuse:1
@ 2414 train 4.9057 , allloss: 4.9065, dt: 1054.89ms, fracRes: 0.7720, norm(attn): 0.1553, norm(output): 1.4844, norm(x): 0.2505, norm(y): 0.9827, norm:0.8050, tok/sec: 124251.83, flops:96.77, batch-reuse:1
@ 2415 train 5.0035 , allloss: 5.0043, dt: 1054.64ms, fracRes: 0.7681, norm(attn): 0.1582, norm(output): 1.5078, norm(x): 0.2552, norm(y): 0.9827, norm:0.7562, tok/sec: 124281.38, flops:96.79, batch-reuse:1
@ 2416 train 4.9695 , allloss: 4.9702, dt: 1085.09ms, fracRes: 0.7665, norm(attn): 0.1602, norm(output): 1.5000, norm(x): 0.2560, norm(y): 0.9828, norm:0.8155, tok/sec: 120793.33, flops:94.07, batch-reuse:1
@ 2417 train 4.9738 , allloss: 4.9746, dt: 1054.31ms, fracRes: 0.7664, norm(attn): 0.1602, norm(output): 1.5078, norm(x): 0.2566, norm(y): 0.9826, norm:0.7823, tok/sec: 124320.64, flops:96.82, batch-reuse:1
@ 2418 train 5.0576 , allloss: 5.0585, dt: 1060.88ms, fracRes: 0.7698, norm(attn): 0.1582, norm(output): 1.5000, norm(x): 0.2523, norm(y): 0.9826, norm:0.7471, tok/sec: 123550.68, flops:96.22, batch-reuse:1
@ 2419 train 5.1001 , allloss: 5.1012, dt: 1060.25ms, fracRes: 0.7732, norm(attn): 0.1582, norm(output): 1.4922, norm(x): 0.2484, norm(y): 0.9823, norm:0.7541, tok/sec: 123623.86, flops:96.28, batch-reuse:1
@ 2420 train 5.0162 , allloss: 5.0172, dt: 1051.40ms, fracRes: 0.7683, norm(attn): 0.1602, norm(output): 1.5000, norm(x): 0.2554, norm(y): 0.9826, norm:0.7279, tok/sec: 124663.73, flops:97.09, batch-reuse:1
@ 2421 train 4.9997 , allloss: 5.0006, dt: 1049.26ms, fracRes: 0.7680, norm(attn): 0.1602, norm(output): 1.5000, norm(x): 0.2551, norm(y): 0.9826, norm:0.6290, tok/sec: 124918.10, flops:97.29, batch-reuse:1
@ 2422 train 5.0681 , allloss: 5.0692, dt: 1057.88ms, fracRes: 0.7706, norm(attn): 0.1592, norm(output): 1.4922, norm(x): 0.2509, norm(y): 0.9825, norm:0.6845, tok/sec: 123901.11, flops:96.49, batch-reuse:1
@ 2423 train 5.0962 , allloss: 5.0971, dt: 1045.81ms, fracRes: 0.7656, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2610, norm(y): 0.9825, norm:0.6633, tok/sec: 125330.41, flops:97.61, batch-reuse:1
@ 2424 train 5.0006 , allloss: 5.0015, dt: 1051.87ms, fracRes: 0.7653, norm(attn): 0.1592, norm(output): 1.5078, norm(x): 0.2600, norm(y): 0.9825, norm:0.9107, tok/sec: 124608.34, flops:97.05, batch-reuse:1
@ 2425 train 4.9299 , allloss: 4.9308, dt: 1060.39ms, fracRes: 0.7712, norm(attn): 0.1592, norm(output): 1.5000, norm(x): 0.2512, norm(y): 0.9824, norm:0.7711, tok/sec: 123607.24, flops:96.27, batch-reuse:1
@ 2426 train 4.9898 , allloss: 4.9906, dt: 1053.85ms, fracRes: 0.7688, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2564, norm(y): 0.9825, norm:0.7909, tok/sec: 124373.88, flops:96.86, batch-reuse:1
@ 2427 train 5.0778 , allloss: 5.0786, dt: 1061.10ms, fracRes: 0.7667, norm(attn): 0.1602, norm(output): 1.5078, norm(x): 0.2600, norm(y): 0.9825, norm:0.9183, tok/sec: 123524.31, flops:96.20, batch-reuse:1
@ 2428 train 5.0118 , allloss: 5.0127, dt: 1054.03ms, fracRes: 0.7694, norm(attn): 0.1582, norm(output): 1.5000, norm(x): 0.2561, norm(y): 0.9824, norm:0.8781, tok/sec: 124353.54, flops:96.85, batch-reuse:1
@ 2429 train 4.9695 , allloss: 4.9703, dt: 1051.05ms, fracRes: 0.7676, norm(attn): 0.1572, norm(output): 1.5078, norm(x): 0.2592, norm(y): 0.9823, norm:0.6639, tok/sec: 124705.80, flops:97.12, batch-reuse:1
@ 2430 train 4.9997 , allloss: 5.0005, dt: 1063.58ms, fracRes: 0.7663, norm(attn): 0.1602, norm(output): 1.5078, norm(x): 0.2618, norm(y): 0.9824, norm:0.9114, tok/sec: 123237.14, flops:95.98, batch-reuse:1
@ 2431 train 5.0048 , allloss: 5.0057, dt: 1052.30ms, fracRes: 0.7686, norm(attn): 0.1592, norm(output): 1.5078, norm(x): 0.2555, norm(y): 0.9823, norm:0.7214, tok/sec: 124557.75, flops:97.01, batch-reuse:1
@ 2432 train 4.8882 , allloss: 4.8889, dt: 1054.13ms, fracRes: 0.7673, norm(attn): 0.1611, norm(output): 1.5078, norm(x): 0.2582, norm(y): 0.9825, norm:0.8144, tok/sec: 124341.14, flops:96.84, batch-reuse:1
@ 2433 train 4.9756 , allloss: 4.9763, dt: 1048.53ms, fracRes: 0.7668, norm(attn): 0.1631, norm(output): 1.5000, norm(x): 0.2581, norm(y): 0.9825, norm:0.7316, tok/sec: 125005.50, flops:97.35, batch-reuse:1
@ 2434 train 5.0374 , allloss: 5.0383, dt: 1048.26ms, fracRes: 0.7712, norm(attn): 0.1572, norm(output): 1.5078, norm(x): 0.2502, norm(y): 0.9821, norm:0.6949, tok/sec: 125037.34, flops:97.38, batch-reuse:1
@ 2435 train 5.0162 , allloss: 5.0173, dt: 1048.57ms, fracRes: 0.7693, norm(attn): 0.1572, norm(output): 1.5156, norm(x): 0.2554, norm(y): 0.9821, norm:0.8501, tok/sec: 125001.01, flops:97.35, batch-reuse:1
@ 2436 train 4.9988 , allloss: 4.9998, dt: 1068.57ms, fracRes: 0.7728, norm(attn): 0.1553, norm(output): 1.5000, norm(x): 0.2489, norm(y): 0.9821, norm:0.7173, tok/sec: 122661.49, flops:95.53, batch-reuse:1
@ 2437 train 4.9434 , allloss: 4.9444, dt: 1073.01ms, fracRes: 0.7708, norm(attn): 0.1572, norm(output): 1.5078, norm(x): 0.2528, norm(y): 0.9822, norm:0.6498, tok/sec: 122154.06, flops:95.13, batch-reuse:1
@ 2438 train 4.9561 , allloss: 4.9571, dt: 1050.12ms, fracRes: 0.7674, norm(attn): 0.1582, norm(output): 1.5156, norm(x): 0.2601, norm(y): 0.9821, norm:0.6091, tok/sec: 124816.34, flops:97.21, batch-reuse:1
@ 2439 train 4.9866 , allloss: 4.9874, dt: 1055.12ms, fracRes: 0.7671, norm(attn): 0.1572, norm(output): 1.5078, norm(x): 0.2585, norm(y): 0.9822, norm:0.6406, tok/sec: 124225.10, flops:96.75, batch-reuse:1
@ 2440 train 5.1264 , allloss: 5.1273, dt: 1055.76ms, fracRes: 0.7739, norm(attn): 0.1572, norm(output): 1.5000, norm(x): 0.2501, norm(y): 0.9820, norm:1.0390, tok/sec: 124148.91, flops:96.69, batch-reuse:1
@ 2441 train 4.9223 , allloss: 4.9231, dt: 1051.70ms, fracRes: 0.7666, norm(attn): 0.1621, norm(output): 1.5000, norm(x): 0.2618, norm(y): 0.9823, norm:0.8411, tok/sec: 124628.54, flops:97.06, batch-reuse:1
@ 2442 train 4.9451 , allloss: 4.9459, dt: 1052.90ms, fracRes: 0.7663, norm(attn): 0.1631, norm(output): 1.5000, norm(x): 0.2611, norm(y): 0.9822, norm:0.7629, tok/sec: 124486.82, flops:96.95, batch-reuse:1
@ 2443 train 5.0702 , allloss: 5.0710, dt: 1048.53ms, fracRes: 0.7680, norm(attn): 0.1592, norm(output): 1.5000, norm(x): 0.2576, norm(y): 0.9821, norm:0.7618, tok/sec: 125005.93, flops:97.36, batch-reuse:1
@ 2444 train 4.9211 , allloss: 4.9219, dt: 1061.97ms, fracRes: 0.7649, norm(attn): 0.1602, norm(output): 1.5078, norm(x): 0.2647, norm(y): 0.9822, norm:0.6560, tok/sec: 123423.14, flops:96.12, batch-reuse:1
@ 2445 train 4.9060 , allloss: 4.9070, dt: 1054.72ms, fracRes: 0.7668, norm(attn): 0.1592, norm(output): 1.5156, norm(x): 0.2634, norm(y): 0.9820, norm:0.6919, tok/sec: 124271.40, flops:96.78, batch-reuse:1
@ 2446 train 5.1143 , allloss: 5.1152, dt: 1048.69ms, fracRes: 0.7653, norm(attn): 0.1582, norm(output): 1.5156, norm(x): 0.2671, norm(y): 0.9820, norm:0.7665, tok/sec: 124986.17, flops:97.34, batch-reuse:1
@ 2447 train 5.0541 , allloss: 5.0548, dt: 1060.57ms, fracRes: 0.7654, norm(attn): 0.1602, norm(output): 1.5078, norm(x): 0.2620, norm(y): 0.9819, norm:1.0347, tok/sec: 123586.01, flops:96.25, batch-reuse:1
@ 2448 train 4.9791 , allloss: 4.9799, dt: 1054.25ms, fracRes: 0.7682, norm(attn): 0.1582, norm(output): 1.5078, norm(x): 0.2552, norm(y): 0.9819, norm:0.8772, tok/sec: 124327.33, flops:96.83, batch-reuse:1
@ 2449 train 4.9778 , allloss: 4.9787, dt: 1046.90ms, fracRes: 0.7701, norm(attn): 0.1592, norm(output): 1.5000, norm(x): 0.2533, norm(y): 0.9819, norm:0.7443, tok/sec: 125200.03, flops:97.51, batch-reuse:1
@ 2450 train 4.9465 , allloss: 4.9472, dt: 1058.22ms, fracRes: 0.7678, norm(attn): 0.1592, norm(output): 1.5078, norm(x): 0.2582, norm(y): 0.9819, norm:0.6844, tok/sec: 123860.58, flops:96.46, batch-reuse:1
@ 2451 train 5.0922 , allloss: 5.0933, dt: 1061.57ms, fracRes: 0.7693, norm(attn): 0.1582, norm(output): 1.5156, norm(x): 0.2547, norm(y): 0.9817, norm:0.7659, tok/sec: 123469.99, flops:96.16, batch-reuse:1
@ 2452 train 4.9651 , allloss: 4.9659, dt: 1043.48ms, fracRes: 0.7705, norm(attn): 0.1582, norm(output): 1.4922, norm(x): 0.2520, norm(y): 0.9818, norm:0.7166, tok/sec: 125610.84, flops:97.83, batch-reuse:1
@ 2453 train 4.9074 , allloss: 4.9080, dt: 1047.96ms, fracRes: 0.7656, norm(attn): 0.1592, norm(output): 1.5078, norm(x): 0.2625, norm(y): 0.9819, norm:0.7036, tok/sec: 125073.04, flops:97.41, batch-reuse:1
@ 2454 train 4.9033 , allloss: 4.9040, dt: 1055.62ms, fracRes: 0.7672, norm(attn): 0.1602, norm(output): 1.5078, norm(x): 0.2586, norm(y): 0.9818, norm:0.8097, tok/sec: 124166.26, flops:96.70, batch-reuse:1
@ 2455 train 5.0445 , allloss: 5.0452, dt: 1050.49ms, fracRes: 0.7678, norm(attn): 0.1582, norm(output): 1.5078, norm(x): 0.2595, norm(y): 0.9817, norm:0.7721, tok/sec: 124771.81, flops:97.17, batch-reuse:1
@ 2456 train 4.9635 , allloss: 4.9643, dt: 1060.15ms, fracRes: 0.7662, norm(attn): 0.1572, norm(output): 1.5312, norm(x): 0.2616, norm(y): 0.9816, norm:0.8372, tok/sec: 123634.93, flops:96.29, batch-reuse:1
@ 2457 train 5.1371 , allloss: 5.1379, dt: 1051.46ms, fracRes: 0.7676, norm(attn): 0.1582, norm(output): 1.5156, norm(x): 0.2572, norm(y): 0.9815, norm:0.7888, tok/sec: 124656.57, flops:97.08, batch-reuse:1
@ 2458 train 4.8589 , allloss: 4.8596, dt: 1067.00ms, fracRes: 0.7665, norm(attn): 0.1592, norm(output): 1.5078, norm(x): 0.2594, norm(y): 0.9817, norm:0.6203, tok/sec: 122842.12, flops:95.67, batch-reuse:1
@ 2459 train 4.9879 , allloss: 4.9886, dt: 1066.55ms, fracRes: 0.7676, norm(attn): 0.1582, norm(output): 1.5000, norm(x): 0.2590, norm(y): 0.9817, norm:0.7274, tok/sec: 122893.30, flops:95.71, batch-reuse:1
@ 2460 train 5.1138 , allloss: 5.1147, dt: 1061.15ms, fracRes: 0.7707, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2543, norm(y): 0.9814, norm:0.7116, tok/sec: 123518.32, flops:96.20, batch-reuse:1
@ 2461 train 4.9251 , allloss: 4.9258, dt: 1048.44ms, fracRes: 0.7660, norm(attn): 0.1611, norm(output): 1.5078, norm(x): 0.2617, norm(y): 0.9817, norm:0.6520, tok/sec: 125016.79, flops:97.36, batch-reuse:1
@ 2462 train 4.9895 , allloss: 4.9903, dt: 1063.94ms, fracRes: 0.7663, norm(attn): 0.1592, norm(output): 1.5234, norm(x): 0.2627, norm(y): 0.9815, norm:0.7014, tok/sec: 123194.86, flops:95.94, batch-reuse:1
@ 2463 train 5.0190 , allloss: 5.0199, dt: 1056.42ms, fracRes: 0.7665, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2640, norm(y): 0.9816, norm:0.5923, tok/sec: 124072.39, flops:96.63, batch-reuse:1
@ 2464 train 4.9618 , allloss: 4.9626, dt: 1070.40ms, fracRes: 0.7672, norm(attn): 0.1592, norm(output): 1.5078, norm(x): 0.2624, norm(y): 0.9815, norm:0.8371, tok/sec: 122451.20, flops:95.37, batch-reuse:1
@ 2465 train 4.8312 , allloss: 4.8320, dt: 1053.01ms, fracRes: 0.7623, norm(attn): 0.1641, norm(output): 1.5391, norm(x): 0.2710, norm(y): 0.9818, norm:0.8273, tok/sec: 124473.94, flops:96.94, batch-reuse:1
@ 2466 train 5.0126 , allloss: 5.0134, dt: 1056.26ms, fracRes: 0.7651, norm(attn): 0.1602, norm(output): 1.5234, norm(x): 0.2640, norm(y): 0.9816, norm:0.6191, tok/sec: 124091.09, flops:96.64, batch-reuse:1
@ 2467 train 4.9008 , allloss: 4.9015, dt: 1056.18ms, fracRes: 0.7646, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2649, norm(y): 0.9815, norm:0.7509, tok/sec: 124099.67, flops:96.65, batch-reuse:1
@ 2468 train 4.9648 , allloss: 4.9655, dt: 1061.58ms, fracRes: 0.7663, norm(attn): 0.1611, norm(output): 1.5078, norm(x): 0.2633, norm(y): 0.9815, norm:0.6461, tok/sec: 123468.47, flops:96.16, batch-reuse:1
@ 2469 train 5.0821 , allloss: 5.0830, dt: 1050.84ms, fracRes: 0.7657, norm(attn): 0.1611, norm(output): 1.5234, norm(x): 0.2634, norm(y): 0.9814, norm:0.7215, tok/sec: 124730.82, flops:97.14, batch-reuse:1
@ 2470 train 4.8978 , allloss: 4.8985, dt: 1044.96ms, fracRes: 0.7654, norm(attn): 0.1611, norm(output): 1.5078, norm(x): 0.2638, norm(y): 0.9815, norm:0.7699, tok/sec: 125432.35, flops:97.69, batch-reuse:1
@ 2471 train 4.8949 , allloss: 4.8958, dt: 1049.36ms, fracRes: 0.7645, norm(attn): 0.1621, norm(output): 1.5156, norm(x): 0.2664, norm(y): 0.9815, norm:0.7971, tok/sec: 124906.18, flops:97.28, batch-reuse:1
@ 2472 train 4.9635 , allloss: 4.9642, dt: 1047.73ms, fracRes: 0.7648, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2657, norm(y): 0.9815, norm:0.6759, tok/sec: 125101.42, flops:97.43, batch-reuse:1
@ 2473 train 4.8615 , allloss: 4.8622, dt: 1049.98ms, fracRes: 0.7652, norm(attn): 0.1611, norm(output): 1.5156, norm(x): 0.2649, norm(y): 0.9814, norm:0.6890, tok/sec: 124832.30, flops:97.22, batch-reuse:1
@ 2474 train 4.8943 , allloss: 4.8950, dt: 1058.44ms, fracRes: 0.7656, norm(attn): 0.1621, norm(output): 1.5078, norm(x): 0.2638, norm(y): 0.9814, norm:0.7110, tok/sec: 123834.69, flops:96.44, batch-reuse:1
@ 2475 train 4.9947 , allloss: 4.9954, dt: 1058.37ms, fracRes: 0.7665, norm(attn): 0.1602, norm(output): 1.5078, norm(x): 0.2615, norm(y): 0.9813, norm:0.6428, tok/sec: 123843.03, flops:96.45, batch-reuse:1
@ 2476 train 4.9825 , allloss: 4.9834, dt: 1063.79ms, fracRes: 0.7674, norm(attn): 0.1592, norm(output): 1.5156, norm(x): 0.2614, norm(y): 0.9811, norm:0.6804, tok/sec: 123211.89, flops:95.96, batch-reuse:1
@ 2477 train 4.9309 , allloss: 4.9318, dt: 1048.52ms, fracRes: 0.7688, norm(attn): 0.1572, norm(output): 1.5000, norm(x): 0.2603, norm(y): 0.9811, norm:0.6098, tok/sec: 125006.41, flops:97.36, batch-reuse:1
@ 2478 train 4.8742 , allloss: 4.8749, dt: 1050.58ms, fracRes: 0.7659, norm(attn): 0.1582, norm(output): 1.5078, norm(x): 0.2648, norm(y): 0.9812, norm:0.7243, tok/sec: 124762.12, flops:97.17, batch-reuse:1
@ 2479 train 4.8815 , allloss: 4.8822, dt: 1049.50ms, fracRes: 0.7647, norm(attn): 0.1621, norm(output): 1.5156, norm(x): 0.2679, norm(y): 0.9812, norm:0.8752, tok/sec: 124890.12, flops:97.26, batch-reuse:1
@ 2480 train 4.9639 , allloss: 4.9647, dt: 1057.99ms, fracRes: 0.7679, norm(attn): 0.1592, norm(output): 1.5078, norm(x): 0.2599, norm(y): 0.9811, norm:0.8419, tok/sec: 123888.05, flops:96.48, batch-reuse:1
@ 2481 train 4.9281 , allloss: 4.9289, dt: 1057.05ms, fracRes: 0.7669, norm(attn): 0.1592, norm(output): 1.5078, norm(x): 0.2607, norm(y): 0.9812, norm:0.6957, tok/sec: 123997.72, flops:96.57, batch-reuse:1
@ 2482 train 5.0376 , allloss: 5.0384, dt: 1050.57ms, fracRes: 0.7688, norm(attn): 0.1582, norm(output): 1.5156, norm(x): 0.2580, norm(y): 0.9809, norm:0.7505, tok/sec: 124762.29, flops:97.17, batch-reuse:1
@ 2483 train 4.9954 , allloss: 4.9963, dt: 1058.32ms, fracRes: 0.7700, norm(attn): 0.1582, norm(output): 1.5078, norm(x): 0.2567, norm(y): 0.9810, norm:0.7454, tok/sec: 123849.56, flops:96.45, batch-reuse:1
@ 2484 train 4.9692 , allloss: 4.9699, dt: 1054.04ms, fracRes: 0.7655, norm(attn): 0.1621, norm(output): 1.5234, norm(x): 0.2643, norm(y): 0.9810, norm:0.7510, tok/sec: 124351.46, flops:96.85, batch-reuse:1
@ 2485 train 4.8340 , allloss: 4.8347, dt: 1054.35ms, fracRes: 0.7649, norm(attn): 0.1641, norm(output): 1.5156, norm(x): 0.2666, norm(y): 0.9812, norm:0.7268, tok/sec: 124315.75, flops:96.82, batch-reuse:1
@ 2486 train 4.8944 , allloss: 4.8950, dt: 1050.53ms, fracRes: 0.7682, norm(attn): 0.1621, norm(output): 1.5078, norm(x): 0.2590, norm(y): 0.9811, norm:0.7270, tok/sec: 124767.93, flops:97.17, batch-reuse:1
@ 2487 train 4.9941 , allloss: 4.9949, dt: 1060.98ms, fracRes: 0.7693, norm(attn): 0.1641, norm(output): 1.5078, norm(x): 0.2583, norm(y): 0.9810, norm:0.6765, tok/sec: 123538.36, flops:96.21, batch-reuse:1
@ 2488 train 4.9510 , allloss: 4.9518, dt: 1049.91ms, fracRes: 0.7689, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2570, norm(y): 0.9810, norm:0.7313, tok/sec: 124841.51, flops:97.23, batch-reuse:1
@ 2489 train 4.9036 , allloss: 4.9044, dt: 1045.47ms, fracRes: 0.7663, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2629, norm(y): 0.9809, norm:0.6472, tok/sec: 125371.48, flops:97.64, batch-reuse:1
@ 2490 train 4.9121 , allloss: 4.9129, dt: 1055.11ms, fracRes: 0.7661, norm(attn): 0.1611, norm(output): 1.5234, norm(x): 0.2681, norm(y): 0.9809, norm:0.8831, tok/sec: 124225.69, flops:96.75, batch-reuse:1
@ 2491 train 5.0176 , allloss: 5.0184, dt: 1058.22ms, fracRes: 0.7671, norm(attn): 0.1611, norm(output): 1.5156, norm(x): 0.2623, norm(y): 0.9808, norm:0.6719, tok/sec: 123861.11, flops:96.46, batch-reuse:1
@ 2492 train 4.9948 , allloss: 4.9956, dt: 1046.07ms, fracRes: 0.7667, norm(attn): 0.1611, norm(output): 1.5156, norm(x): 0.2627, norm(y): 0.9809, norm:0.6724, tok/sec: 125299.07, flops:97.58, batch-reuse:1
@ 2493 train 4.9418 , allloss: 4.9425, dt: 1042.16ms, fracRes: 0.7644, norm(attn): 0.1631, norm(output): 1.5234, norm(x): 0.2672, norm(y): 0.9810, norm:0.7603, tok/sec: 125769.12, flops:97.95, batch-reuse:1
@ 2494 train 4.8937 , allloss: 4.8945, dt: 1063.14ms, fracRes: 0.7658, norm(attn): 0.1611, norm(output): 1.5312, norm(x): 0.2662, norm(y): 0.9808, norm:0.7545, tok/sec: 123288.18, flops:96.02, batch-reuse:1
@ 2495 train 4.9077 , allloss: 4.9084, dt: 1059.48ms, fracRes: 0.7674, norm(attn): 0.1582, norm(output): 1.5156, norm(x): 0.2617, norm(y): 0.9807, norm:0.6749, tok/sec: 123713.02, flops:96.35, batch-reuse:1
@ 2496 train 4.8406 , allloss: 4.8413, dt: 1044.22ms, fracRes: 0.7684, norm(attn): 0.1602, norm(output): 1.5312, norm(x): 0.2621, norm(y): 0.9807, norm:0.7292, tok/sec: 125521.56, flops:97.76, batch-reuse:1
@ 2497 train 4.9283 , allloss: 4.9291, dt: 1052.46ms, fracRes: 0.7676, norm(attn): 0.1631, norm(output): 1.5312, norm(x): 0.2629, norm(y): 0.9808, norm:0.6693, tok/sec: 124538.31, flops:96.99, batch-reuse:1
@ 2498 train 4.9497 , allloss: 4.9504, dt: 1042.86ms, fracRes: 0.7687, norm(attn): 0.1621, norm(output): 1.5156, norm(x): 0.2586, norm(y): 0.9808, norm:0.7235, tok/sec: 125685.73, flops:97.88, batch-reuse:1
@ 2499 train 4.9163 , allloss: 4.9171, dt: 1056.68ms, fracRes: 0.7656, norm(attn): 0.1631, norm(output): 1.5234, norm(x): 0.2649, norm(y): 0.9808, norm:0.6654, tok/sec: 124041.59, flops:96.60, batch-reuse:1
@ 2500 train 4.9188 , allloss: 4.9198, dt: 1067.89ms, fracRes: 0.7697, norm(attn): 0.1602, norm(output): 1.5234, norm(x): 0.2597, norm(y): 0.9806, norm:0.6512, tok/sec: 122738.91, flops:95.59, batch-reuse:1
@ 2501 train 4.8938 , allloss: 4.8948, dt: 1051.93ms, fracRes: 0.7679, norm(attn): 0.1592, norm(output): 1.5234, norm(x): 0.2628, norm(y): 0.9806, norm:0.7822, tok/sec: 124601.31, flops:97.04, batch-reuse:1
@ 2502 train 5.0084 , allloss: 5.0095, dt: 1048.66ms, fracRes: 0.7717, norm(attn): 0.1602, norm(output): 1.5156, norm(x): 0.2566, norm(y): 0.9804, norm:0.6776, tok/sec: 124990.58, flops:97.34, batch-reuse:1
@ 2503 train 4.9153 , allloss: 4.9162, dt: 1062.05ms, fracRes: 0.7657, norm(attn): 0.1621, norm(output): 1.5312, norm(x): 0.2643, norm(y): 0.9808, norm:0.6375, tok/sec: 123413.64, flops:96.11, batch-reuse:1
@ 2504 train 4.9599 , allloss: 4.9608, dt: 1059.02ms, fracRes: 0.7665, norm(attn): 0.1621, norm(output): 1.5312, norm(x): 0.2650, norm(y): 0.9806, norm:0.6667, tok/sec: 123766.86, flops:96.39, batch-reuse:1
@ 2505 train 4.9344 , allloss: 4.9355, dt: 1054.90ms, fracRes: 0.7709, norm(attn): 0.1621, norm(output): 1.5391, norm(x): 0.2570, norm(y): 0.9805, norm:0.7120, tok/sec: 124250.23, flops:96.77, batch-reuse:1
@ 2506 train 4.9967 , allloss: 4.9975, dt: 1058.55ms, fracRes: 0.7671, norm(attn): 0.1621, norm(output): 1.5391, norm(x): 0.2634, norm(y): 0.9805, norm:0.8308, tok/sec: 123821.83, flops:96.43, batch-reuse:1
@ 2507 train 5.0342 , allloss: 5.0351, dt: 1059.43ms, fracRes: 0.7687, norm(attn): 0.1650, norm(output): 1.5312, norm(x): 0.2610, norm(y): 0.9806, norm:0.9612, tok/sec: 123719.51, flops:96.35, batch-reuse:1
@ 2508 train 4.8651 , allloss: 4.8658, dt: 1051.55ms, fracRes: 0.7664, norm(attn): 0.1621, norm(output): 1.5469, norm(x): 0.2659, norm(y): 0.9806, norm:0.7885, tok/sec: 124645.92, flops:97.07, batch-reuse:1
@ 2509 train 4.7997 , allloss: 4.8005, dt: 1051.12ms, fracRes: 0.7668, norm(attn): 0.1631, norm(output): 1.5312, norm(x): 0.2645, norm(y): 0.9805, norm:0.6883, tok/sec: 124697.04, flops:97.11, batch-reuse:1
@ 2510 train 4.8960 , allloss: 4.8968, dt: 1049.50ms, fracRes: 0.7675, norm(attn): 0.1641, norm(output): 1.5469, norm(x): 0.2655, norm(y): 0.9805, norm:0.6641, tok/sec: 124890.43, flops:97.27, batch-reuse:1
@ 2511 train 4.8531 , allloss: 4.8539, dt: 1049.85ms, fracRes: 0.7659, norm(attn): 0.1621, norm(output): 1.5469, norm(x): 0.2684, norm(y): 0.9805, norm:0.6546, tok/sec: 124848.74, flops:97.23, batch-reuse:1
@ 2512 train 4.8582 , allloss: 4.8589, dt: 1047.88ms, fracRes: 0.7664, norm(attn): 0.1602, norm(output): 1.5469, norm(x): 0.2663, norm(y): 0.9805, norm:0.7505, tok/sec: 125083.26, flops:97.42, batch-reuse:1
@ 2513 train 4.9111 , allloss: 4.9119, dt: 1051.51ms, fracRes: 0.7682, norm(attn): 0.1611, norm(output): 1.5312, norm(x): 0.2643, norm(y): 0.9804, norm:0.6556, tok/sec: 124650.78, flops:97.08, batch-reuse:1
@ 2514 train 5.0298 , allloss: 5.0305, dt: 1060.03ms, fracRes: 0.7682, norm(attn): 0.1592, norm(output): 1.5312, norm(x): 0.2620, norm(y): 0.9803, norm:0.7827, tok/sec: 123649.61, flops:96.30, batch-reuse:1
@ 2515 train 4.8214 , allloss: 4.8219, dt: 1052.38ms, fracRes: 0.7639, norm(attn): 0.1621, norm(output): 1.5625, norm(x): 0.2698, norm(y): 0.9805, norm:0.7099, tok/sec: 124547.59, flops:97.00, batch-reuse:1
@ 2516 train 4.7432 , allloss: 4.7464, dt: 1061.96ms, fracRes: 0.7657, norm(attn): 0.1650, norm(output): 1.5625, norm(x): 0.2702, norm(y): 0.9804, norm:0.6529, tok/sec: 123424.28, flops:96.12, batch-reuse:1
@ 2517 train 4.8008 , allloss: 4.8015, dt: 1063.30ms, fracRes: 0.7655, norm(attn): 0.1621, norm(output): 1.5547, norm(x): 0.2690, norm(y): 0.9804, norm:0.5925, tok/sec: 123268.83, flops:96.00, batch-reuse:1
@ 2518 train 4.9085 , allloss: 4.9094, dt: 1062.48ms, fracRes: 0.7669, norm(attn): 0.1621, norm(output): 1.5469, norm(x): 0.2651, norm(y): 0.9803, norm:0.7464, tok/sec: 123364.40, flops:96.08, batch-reuse:1
@ 2519 train 4.9629 , allloss: 12.1538, dt: 1057.17ms, fracRes: 0.7662, norm(attn): 0.1709, norm(output): 2.1250, norm(x): 1.4196, norm(y): 0.9803, norm:19.9605, tok/sec: 123983.91, flops:96.56, batch-reuse:1
@ 2520 train 4.9993 , allloss: 5.0024, dt: 1057.75ms, fracRes: 0.7698, norm(attn): 0.1641, norm(output): 1.5391, norm(x): 0.2637, norm(y): 0.9800, norm:1.4976, tok/sec: 123915.27, flops:96.51, batch-reuse:1
@ 2521 train 4.8858 , allloss: 4.8867, dt: 1054.65ms, fracRes: 0.7679, norm(attn): 0.1621, norm(output): 1.5312, norm(x): 0.2644, norm(y): 0.9802, norm:1.1806, tok/sec: 124280.23, flops:96.79, batch-reuse:1
@ 2522 train 4.9762 , allloss: 4.9772, dt: 1055.94ms, fracRes: 0.7686, norm(attn): 0.1631, norm(output): 1.5547, norm(x): 0.2622, norm(y): 0.9801, norm:0.7478, tok/sec: 124128.56, flops:96.67, batch-reuse:1
@ 2523 train 4.8793 , allloss: 4.8802, dt: 1050.67ms, fracRes: 0.7661, norm(attn): 0.1641, norm(output): 1.5781, norm(x): 0.2663, norm(y): 0.9801, norm:0.7702, tok/sec: 124750.35, flops:97.16, batch-reuse:1
@ 2524 train 4.8123 , allloss: 4.8130, dt: 1056.35ms, fracRes: 0.7650, norm(attn): 0.1621, norm(output): 1.5859, norm(x): 0.2705, norm(y): 0.9802, norm:0.7140, tok/sec: 124080.17, flops:96.63, batch-reuse:1
@ 2525 train 4.8507 , allloss: 4.8518, dt: 1055.13ms, fracRes: 0.7709, norm(attn): 0.1641, norm(output): 1.5703, norm(x): 0.2617, norm(y): 0.9799, norm:0.6276, tok/sec: 124223.75, flops:96.75, batch-reuse:1
@ 2526 train 4.9942 , allloss: 4.9950, dt: 1051.19ms, fracRes: 0.7663, norm(attn): 0.1631, norm(output): 1.5781, norm(x): 0.2681, norm(y): 0.9800, norm:0.7474, tok/sec: 124689.26, flops:97.11, batch-reuse:1
@ 2527 train 4.8453 , allloss: 4.8460, dt: 1052.67ms, fracRes: 0.7650, norm(attn): 0.1650, norm(output): 1.5938, norm(x): 0.2707, norm(y): 0.9800, norm:0.6455, tok/sec: 124513.69, flops:96.97, batch-reuse:1
@ 2528 train 4.8764 , allloss: 4.8772, dt: 1060.77ms, fracRes: 0.7652, norm(attn): 0.1602, norm(output): 1.5703, norm(x): 0.2683, norm(y): 0.9799, norm:0.6597, tok/sec: 123563.32, flops:96.23, batch-reuse:1
@ 2529 train 4.8595 , allloss: 4.8603, dt: 1048.89ms, fracRes: 0.7641, norm(attn): 0.1621, norm(output): 1.5703, norm(x): 0.2708, norm(y): 0.9799, norm:0.6610, tok/sec: 124962.71, flops:97.32, batch-reuse:1
@ 2530 train 4.8384 , allloss: 4.8395, dt: 1059.15ms, fracRes: 0.7650, norm(attn): 0.1621, norm(output): 1.5703, norm(x): 0.2702, norm(y): 0.9799, norm:0.6767, tok/sec: 123752.29, flops:96.38, batch-reuse:1
@ 2531 train 4.7934 , allloss: 4.7949, dt: 1060.68ms, fracRes: 0.7642, norm(attn): 0.1660, norm(output): 1.5781, norm(x): 0.2719, norm(y): 0.9799, norm:0.6738, tok/sec: 123573.29, flops:96.24, batch-reuse:1
@ 2532 train 4.8981 , allloss: 4.8999, dt: 1056.59ms, fracRes: 0.7677, norm(attn): 0.1621, norm(output): 1.5625, norm(x): 0.2662, norm(y): 0.9798, norm:0.6026, tok/sec: 124051.47, flops:96.61, batch-reuse:1
@ 2533 train 4.9499 , allloss: 4.9524, dt: 1049.29ms, fracRes: 0.7706, norm(attn): 0.1621, norm(output): 1.5625, norm(x): 0.2616, norm(y): 0.9795, norm:0.8685, tok/sec: 124915.23, flops:97.28, batch-reuse:1
@ 2534 train 4.9565 , allloss: 4.9589, dt: 1061.28ms, fracRes: 0.7662, norm(attn): 0.1631, norm(output): 1.5781, norm(x): 0.2685, norm(y): 0.9797, norm:0.9394, tok/sec: 123503.69, flops:96.19, batch-reuse:1
@ 2535 train 4.7906 , allloss: 4.7920, dt: 1046.38ms, fracRes: 0.7644, norm(attn): 0.1680, norm(output): 1.5859, norm(x): 0.2731, norm(y): 0.9799, norm:0.9156, tok/sec: 125262.87, flops:97.56, batch-reuse:1
@ 2536 train 4.8841 , allloss: 4.8855, dt: 1043.98ms, fracRes: 0.7676, norm(attn): 0.1631, norm(output): 1.5781, norm(x): 0.2686, norm(y): 0.9796, norm:0.8336, tok/sec: 125550.63, flops:97.78, batch-reuse:1
@ 2537 train 4.8631 , allloss: 4.8654, dt: 1045.74ms, fracRes: 0.7664, norm(attn): 0.1631, norm(output): 1.5703, norm(x): 0.2682, norm(y): 0.9797, norm:0.6696, tok/sec: 125339.52, flops:97.61, batch-reuse:1
@ 2538 train 4.9419 , allloss: 4.9431, dt: 1046.64ms, fracRes: 0.7656, norm(attn): 0.1631, norm(output): 1.5703, norm(x): 0.2685, norm(y): 0.9797, norm:0.6542, tok/sec: 125231.63, flops:97.53, batch-reuse:1
@ 2539 train 4.8965 , allloss: 4.8977, dt: 1054.12ms, fracRes: 0.7691, norm(attn): 0.1621, norm(output): 1.5625, norm(x): 0.2637, norm(y): 0.9796, norm:0.6507, tok/sec: 124342.74, flops:96.84, batch-reuse:1
@ 2540 train 4.9500 , allloss: 4.9535, dt: 1049.15ms, fracRes: 0.7666, norm(attn): 0.1631, norm(output): 1.5703, norm(x): 0.2688, norm(y): 0.9795, norm:0.6873, tok/sec: 124931.56, flops:97.30, batch-reuse:1
@ 2541 train 4.8580 , allloss: 4.8591, dt: 1049.64ms, fracRes: 0.7640, norm(attn): 0.1660, norm(output): 1.5781, norm(x): 0.2730, norm(y): 0.9797, norm:0.7168, tok/sec: 124873.27, flops:97.25, batch-reuse:1
@ 2542 train 5.0341 , allloss: 5.0356, dt: 1039.70ms, fracRes: 0.7687, norm(attn): 0.1621, norm(output): 1.5703, norm(x): 0.2670, norm(y): 0.9793, norm:1.0817, tok/sec: 126067.42, flops:98.18, batch-reuse:1
@ 2543 train 4.8210 , allloss: 4.8221, dt: 1052.79ms, fracRes: 0.7644, norm(attn): 0.1670, norm(output): 1.5859, norm(x): 0.2761, norm(y): 0.9797, norm:0.8691, tok/sec: 124499.28, flops:96.96, batch-reuse:1
@ 2544 train 4.9982 , allloss: 4.9995, dt: 1053.67ms, fracRes: 0.7695, norm(attn): 0.1621, norm(output): 1.5625, norm(x): 0.2639, norm(y): 0.9794, norm:0.7979, tok/sec: 124395.24, flops:96.88, batch-reuse:1
@ 2545 train 4.9400 , allloss: 4.9413, dt: 1048.10ms, fracRes: 0.7665, norm(attn): 0.1602, norm(output): 1.5703, norm(x): 0.2684, norm(y): 0.9794, norm:1.0036, tok/sec: 125056.46, flops:97.39, batch-reuse:1
@ 2546 train 4.9028 , allloss: 4.9038, dt: 1048.10ms, fracRes: 0.7643, norm(attn): 0.1660, norm(output): 1.5859, norm(x): 0.2715, norm(y): 0.9795, norm:0.7685, tok/sec: 125057.28, flops:97.40, batch-reuse:1
@ 2547 train 4.9193 , allloss: 4.9202, dt: 1047.03ms, fracRes: 0.7643, norm(attn): 0.1670, norm(output): 1.5781, norm(x): 0.2712, norm(y): 0.9795, norm:0.6683, tok/sec: 125184.23, flops:97.49, batch-reuse:1
@ 2548 train 5.1150 , allloss: 5.1160, dt: 1044.50ms, fracRes: 0.7728, norm(attn): 0.1621, norm(output): 1.5469, norm(x): 0.2559, norm(y): 0.9793, norm:1.0175, tok/sec: 125488.21, flops:97.73, batch-reuse:1
@ 2549 train 5.0252 , allloss: 5.0262, dt: 1041.05ms, fracRes: 0.7681, norm(attn): 0.1641, norm(output): 1.5938, norm(x): 0.2698, norm(y): 0.9792, norm:0.7425, tok/sec: 125904.03, flops:98.05, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863, -12.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972, -12.4375, -11.2500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -12.0000, -10.4375, -10.3750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189, -11.5625, -10.1875,  -9.6250, -11.2500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -7.5312, -10.1250,  -8.9375,  -9.3125,  -8.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918, -12.5625, -12.5000, -12.4375, -12.4375,  -9.9375, -10.5625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -14.6250, -12.7500, -13.4375, -13.9375, -10.8125, -11.7500, -10.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944, -10.1875, -12.1875, -11.1250, -11.1250,  -9.4375,  -8.6875,  -7.5312, -11.8750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -9.8750,  -9.6250,  -9.5625,  -9.3125,  -7.4062,  -6.8438,  -6.6562, -10.2500,  -6.5312,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -7.8750, -10.3750, -10.1250, -10.4375,  -9.1875,  -8.9375,  -7.0625, -10.3125,  -5.8125,  -8.0000,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -8.3750,  -8.0000,  -6.9375,  -7.0000,  -5.0938,  -4.9375,  -4.8750,  -7.8750,  -5.1250,  -6.0312,  -5.9062,     -inf,     -inf,     -inf],
          [  5.1299,  -9.8125,  -7.4375,  -8.0625,  -8.1875,  -6.3125,  -6.5938,  -5.9375,  -8.8750,  -5.1875,  -7.2188,  -5.0625,  -4.5000,     -inf,     -inf],
          [  5.2781,  -6.8750,  -9.5625,  -8.7500,  -8.0625,  -6.8438,  -6.6875,  -6.0625,  -9.1875,  -5.2500,  -7.3750,  -6.2500,  -4.1875,  -7.7500,     -inf],
          [  5.4161, -10.8125, -10.7500, -11.1250, -10.6250,  -8.8750,  -9.0625,  -7.6562, -12.1250,  -7.3125,  -9.8750,  -8.1875,  -6.0000, -10.1875, -10.8125]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9987],
        [0.9990],
        [0.9997],
        [0.9997],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.9997],
        [0.9993],
        [0.9997],
        [0.9997],
        [0.9997]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0007,     0.0001,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0001,     0.0002,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863,  -6.8438,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972,  -6.2188,  -7.4062,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726,  -4.5312,  -6.1875,  -5.2188,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -6.5000,  -8.0625,  -6.7188, -10.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -4.9375,  -5.8750,  -4.7500,  -7.1250,  -6.0625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,  -5.3750,  -6.7812,  -7.2500,  -9.6250,  -6.6250,  -6.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589,  -6.8750,  -8.3750,  -8.6250, -11.3750,  -7.8438,  -7.0312,  -7.0312,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -6.3750,  -7.9062,  -7.2812,  -9.1250,  -6.8438,  -5.4375,  -5.3438,  -8.4375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -5.2500,  -7.6562,  -6.3125,  -9.0000,  -6.6250,  -5.6562,  -5.3750,  -8.4375,  -7.2812,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -5.1875,  -7.3438,  -7.1875,  -8.1875,  -5.6562,  -4.9375,  -6.1562,  -7.8125,  -7.3750,  -8.3750,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -5.3125,  -6.8438,  -7.1562, -10.0000,  -6.7188,  -5.7500,  -5.8438,  -8.4375,  -7.0312,  -8.5625,  -5.8125,     -inf,     -inf,     -inf],
          [  5.1299,  -5.1562,  -5.8125,  -6.4375,  -8.6875,  -5.5312,  -4.7812,  -4.6250,  -6.2188,  -5.3438,  -6.1562,  -3.7656,  -3.5781,     -inf,     -inf],
          [  5.2781,  -5.9062,  -7.3438,  -6.4375,  -8.1250,  -6.5000,  -5.1250,  -4.7188,  -7.7812,  -5.9688,  -7.2188,  -5.4688,  -3.5469,  -6.5625,     -inf],
          [  5.4161,  -5.7188,  -8.1875,  -7.5938, -10.2500,  -7.7188,  -6.5625,  -6.5938,  -9.6250,  -8.0625,  -9.6875,  -7.1250,  -4.9062,  -9.0625,  -7.7812]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9993],
        [1.0000],
        [0.9990],
        [1.0000],
        [0.9993],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.9997],
        [0.9997],
        [1.0000],
        [0.9993],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0002,     0.0004,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0001,     0.0001,     0.0003,     0.0001,     0.0001,     0.0001,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0003,     0.0000,     0.0000,     0.0002,     0.0001,     0.0001,     0.0001,     0.0001,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0001,     0.0003,     0.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0003,     0.0001,     0.0005,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863, -11.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972, -12.8125,  -9.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -13.1250,  -7.7500,  -8.3125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -9.0625,  -7.4062,  -6.5312,  -8.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -4.6875,  -5.1250,  -4.1875,  -5.8125,  -5.9062,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,  -8.3750,  -7.0000,  -6.1562,  -7.3125,  -5.6875,  -7.5312,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -10.9375,  -7.5000,  -7.1250,  -8.0000,  -4.8438,  -9.5625,  -8.3750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -5.7188,  -5.3125,  -4.7500,  -6.6250,  -6.1250,  -6.3750,  -5.0625,  -7.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -5.0938,  -4.6250,  -4.4062,  -4.5625,  -3.6094,  -5.1562,  -4.4062,  -4.3438,  -3.4531,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -6.2500,  -5.2500,  -4.9062,  -7.0625,  -6.5625,  -6.8438,  -4.9688,  -7.6562,  -4.5000,  -5.9062,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -7.4062,  -5.2188,  -5.3125,  -6.0000,  -4.2812,  -6.9375,  -5.7812,  -4.0938,  -4.1562,  -5.1875,  -4.7188,     -inf,     -inf,     -inf],
          [  5.1299,  -5.9375,  -4.8750,  -4.5312,  -4.4688,  -2.8594,  -5.1875,  -5.1250,  -3.3750,  -3.6875,  -3.7812,  -4.4062,  -4.4062,     -inf,     -inf],
          [  5.2781,  -3.2812,  -3.7344,  -2.8906,  -4.6875,  -4.7812,  -4.2812,  -3.2969,  -6.7500,  -2.8906,  -3.6250,  -2.2969,  -3.0781,  -6.0000,     -inf],
          [  5.4161,  -6.1875,  -4.9062,  -5.3125,  -6.8438,  -5.8438,  -7.4375,  -5.4688,  -6.0000,  -4.6875,  -6.7188,  -4.5312,  -3.8281,  -5.2188,  -6.2500]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9993],
        [0.9987],
        [0.9971],
        [0.9984],
        [0.9980],
        [0.9987],
        [0.9974],
        [0.9990],
        [0.9974],
        [0.9987],
        [0.9974],
        [0.9990],
        [0.9967],
        [0.9967]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8008,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0008,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0029,     0.0107,     0.0121,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.1152,     0.1787,     0.0505,     0.6562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.1465,     0.1963,     0.0635,     0.4727,     0.1211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0096,     0.3555,     0.2656,     0.0430,     0.2080,     0.1104,     0.0073,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.2021,     0.2383,     0.0144,     0.4297,     0.0913,     0.0039,     0.0190,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.1001,     0.1445,     0.0288,     0.5312,     0.1445,     0.0029,     0.0199,     0.0280,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.2041,     0.2246,     0.0400,     0.3691,     0.1035,     0.0049,     0.0366,     0.0154,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.0952,     0.1592,     0.0371,     0.4199,     0.1367,     0.0042,     0.0225,     0.0273,     0.0001,     0.0938,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0005,     0.0007,     0.0028,     0.0003,     0.0005,     0.0025,     0.0011,     0.0007,     0.0029,     0.0007,     0.0016,     0.0000,     0.0000,     0.0000],
        [    0.0061,     0.1240,     0.1973,     0.0150,     0.4180,     0.1118,     0.0046,     0.0187,     0.0310,     0.0003,     0.0713,     0.0004,     0.0020,     0.0000,     0.0000],
        [    0.0010,     0.0879,     0.1289,     0.0243,     0.4688,     0.1250,     0.0024,     0.0166,     0.0229,     0.0000,     0.0972,     0.0000,     0.0014,     0.0253,     0.0000],
        [    0.9961,     0.0000,     0.0001,     0.0003,     0.0000,     0.0000,     0.0004,     0.0001,     0.0000,     0.0009,     0.0000,     0.0009,     0.0002,     0.0000,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -0.0123,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -4.9375, -4.0625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -3.0625, -1.7500, -1.6172,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  8.6875,  9.1250,  7.8750, 10.4375,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  9.0000,  9.3125,  8.1250, 10.1875,  8.8125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  7.5000,  7.2188,  5.3750,  6.9688,  6.3125,  3.6094,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, 11.1250, 11.2500,  8.4375, 11.8750, 10.3125,  7.1562,  8.7500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  9.6250, 10.0000,  8.3750, 11.3125, 10.0000,  6.0938,  8.0625,  8.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  9.1875,  9.2500,  7.5625,  9.7500,  8.5000,  5.4375,  7.4688,  6.5938,  1.3438,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  8.3750,  8.8750,  7.4375,  9.8750,  8.7500,  5.2500,  6.9375,  7.1250,  1.4453,  8.3750,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -2.6094, -2.3125, -0.8945, -3.1406, -2.5469, -0.9922, -1.8359, -2.3438, -0.8555, -2.3281, -1.4766,    -inf,    -inf,    -inf],
          [ 5.1299,  8.1250,  8.6250,  6.0312,  9.3750,  8.0000,  4.8438,  6.2188,  6.7500,  1.9453,  7.5625,  2.4062,  4.0312,    -inf,    -inf],
          [ 5.2781,  9.8125, 10.1875,  8.5000, 11.5000, 10.1250,  6.2188,  8.1250,  8.4375,  1.8438,  9.8750,  1.8750,  5.6562,  8.5625,    -inf],
          [ 5.4161, -4.7812, -3.9688, -2.7656, -5.9688, -5.0625, -2.5156, -4.0000, -4.5625, -1.5625, -5.2188, -1.6484, -2.9531, -4.5000, -2.1875]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7971],
        [0.9119],
        [0.8984],
        [0.0572],
        [0.0425],
        [0.2295],
        [0.2085],
        [0.0485],
        [0.2549],
        [0.0310],
        [0.8968],
        [0.1508],
        [0.0470],
        [0.8916]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0476,     0.9531,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0022,     0.0061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8945,     0.0442,     0.0327,     0.0287,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0081,     0.3164,     0.0771,     0.1318,     0.4668,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.3711,     0.0708,     0.1387,     0.1826,     0.2334,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0325,     0.0175,     0.0112,     0.0229,     0.0549,     0.0187,     0.8438,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0128,     0.0208,     0.0055,     0.0129,     0.0160,     0.0178,     0.8359,     0.0786,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.0422,     0.0087,     0.0198,     0.1270,     0.0275,     0.6094,     0.0737,     0.0908,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0079,     0.0820,     0.0184,     0.0256,     0.0962,     0.0728,     0.3926,     0.0986,     0.1543,     0.0527,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0064,     0.0258,     0.0037,     0.0120,     0.0500,     0.0118,     0.6211,     0.0232,     0.0559,     0.0104,     0.1797,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.0059,     0.0037,     0.0064,     0.0032,     0.0103,     0.0464,     0.0203,     0.0038,     0.0043,     0.0176,     0.0004,     0.0000,     0.0000,     0.0000],
        [    0.0052,     0.0264,     0.0031,     0.0087,     0.0144,     0.0209,     0.5898,     0.0454,     0.0383,     0.0060,     0.1719,     0.0002,     0.0693,     0.0000,     0.0000],
        [    0.0009,     0.0317,     0.0044,     0.0126,     0.0854,     0.0172,     0.4414,     0.0452,     0.0623,     0.0162,     0.1475,     0.0013,     0.0635,     0.0698,     0.0000],
        [    0.3809,     0.0208,     0.0134,     0.0101,     0.0229,     0.0359,     0.1758,     0.0325,     0.0620,     0.0214,     0.0850,     0.0027,     0.0437,     0.0747,     0.0184]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863,  4.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -3.9062, -2.8750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -0.2393, -0.5430, -0.6758,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  6.8750,  5.4688,  6.0000,  7.2812,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  8.5625,  6.9062,  7.5938,  7.8438,  8.1250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  3.2656,  2.8281,  3.5469,  4.4062,  3.3438,  7.1562,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  4.6250,  3.2969,  4.1562,  4.3750,  4.4688,  8.3125,  5.9688,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  8.0625,  6.4375,  7.2812,  9.1250,  7.5938, 10.6875,  8.5625,  8.8125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  6.9375,  5.4375,  5.7812,  7.0938,  6.8125,  8.5000,  7.1250,  7.5625,  6.5000,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  6.1562,  4.2188,  5.4062,  6.8438,  5.3750,  9.3750,  6.0625,  6.9375,  5.2500,  8.1250,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -0.0381, -0.4980,  0.0493, -0.6523,  0.5195,  2.0312,  1.1953, -0.4629, -0.3574,  1.0547, -2.6719,    -inf,    -inf,    -inf],
          [ 5.1299,  6.7500,  4.5938,  5.6250,  6.1250,  6.5000,  9.8750,  7.2812,  7.1250,  5.2500,  8.6250,  1.7109,  7.6875,    -inf,    -inf],
          [ 5.2781,  8.8750,  6.9375,  7.9688,  9.8750,  8.3125, 11.5625,  9.2500,  9.5625,  8.2500, 10.4375,  5.6875,  9.5625,  9.6875,    -inf],
          [ 5.4161,  2.5000,  2.0625,  1.7734,  2.5938,  3.0469,  4.6250,  2.9375,  3.5938,  2.5312,  3.9062,  0.4688,  3.2500,  3.7812,  2.3750]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.6035],
        [0.7486],
        [0.6091],
        [0.3745],
        [0.2798],
        [0.2446],
        [0.3104],
        [0.1708],
        [0.3196],
        [0.2155],
        [0.4668],
        [0.2439],
        [0.1232],
        [0.3371]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(!:0.1143 the:0.0825,:0.2402 and:0.0469tery:0.1992,:0.4199 a:0.0420ery:0.1768)
ery
------
		( the:0.0825,:0.2402 and:0.0469tery:0.1992,:0.4199 a:0.0420ery:0.1768,:0.2139)
, and are green, green, green, green, green, green,
@ 2550 train 4.9260 , allloss: 4.9268, dt: 1317.32ms, fracRes: 0.7643, norm(attn): 0.1641, norm(output): 1.5938, norm(x): 0.2760, norm(y): 0.9794, norm:0.6894, tok/sec: 99498.97, flops:77.49, batch-reuse:1
@ 2551 train 5.8241 , allloss: 5.8252, dt: 1048.81ms, fracRes: 0.7733, norm(attn): 0.1582, norm(output): 1.5391, norm(x): 0.2506, norm(y): 0.9789, norm:2.0768, tok/sec: 124972.25, flops:97.33, batch-reuse:1
@ 2552 train 4.9465 , allloss: 4.9474, dt: 1044.47ms, fracRes: 0.7641, norm(attn): 0.1650, norm(output): 1.5859, norm(x): 0.2755, norm(y): 0.9795, norm:1.2245, tok/sec: 125490.99, flops:97.73, batch-reuse:1
@ 2553 train 4.9429 , allloss: 4.9438, dt: 1050.52ms, fracRes: 0.7659, norm(attn): 0.1641, norm(output): 1.5859, norm(x): 0.2709, norm(y): 0.9794, norm:0.8060, tok/sec: 124768.27, flops:97.17, batch-reuse:1
@ 2554 train 4.8732 , allloss: 4.8740, dt: 1063.42ms, fracRes: 0.7635, norm(attn): 0.1670, norm(output): 1.5938, norm(x): 0.2746, norm(y): 0.9794, norm:0.8261, tok/sec: 123254.90, flops:95.99, batch-reuse:1
@ 2555 train 4.7115 , allloss: 4.7123, dt: 1050.37ms, fracRes: 0.7640, norm(attn): 0.1680, norm(output): 1.5781, norm(x): 0.2749, norm(y): 0.9796, norm:0.7295, tok/sec: 124786.85, flops:97.18, batch-reuse:1
@ 2556 train 4.8774 , allloss: 4.8784, dt: 1058.51ms, fracRes: 0.7702, norm(attn): 0.1660, norm(output): 1.5781, norm(x): 0.2644, norm(y): 0.9794, norm:0.7460, tok/sec: 123826.88, flops:96.44, batch-reuse:1
@ 2557 train 4.8199 , allloss: 4.8207, dt: 1044.02ms, fracRes: 0.7654, norm(attn): 0.1670, norm(output): 1.5781, norm(x): 0.2719, norm(y): 0.9794, norm:0.8853, tok/sec: 125545.35, flops:97.78, batch-reuse:1
@ 2558 train 4.8669 , allloss: 4.8678, dt: 1039.69ms, fracRes: 0.7648, norm(attn): 0.1689, norm(output): 1.5938, norm(x): 0.2749, norm(y): 0.9793, norm:0.8264, tok/sec: 126068.23, flops:98.18, batch-reuse:1
@ 2559 train 4.8765 , allloss: 4.8819, dt: 1043.08ms, fracRes: 0.7686, norm(attn): 0.1641, norm(output): 1.5703, norm(x): 0.2686, norm(y): 0.9792, norm:0.5873, tok/sec: 125658.30, flops:97.86, batch-reuse:1
@ 2560 train 4.6807 , allloss: 4.6817, dt: 1056.31ms, fracRes: 0.7671, norm(attn): 0.1631, norm(output): 1.6016, norm(x): 0.2739, norm(y): 0.9791, norm:0.7495, tok/sec: 124084.48, flops:96.64, batch-reuse:1
@ 2561 train 4.7124 , allloss: 4.7133, dt: 1036.58ms, fracRes: 0.7667, norm(attn): 0.1670, norm(output): 1.6094, norm(x): 0.2788, norm(y): 0.9790, norm:2.1816, tok/sec: 126447.18, flops:98.48, batch-reuse:1
@ 2562 train 4.7568 , allloss: 4.7575, dt: 1041.54ms, fracRes: 0.7636, norm(attn): 0.1699, norm(output): 1.6094, norm(x): 0.2809, norm(y): 0.9793, norm:1.2320, tok/sec: 125844.52, flops:98.01, batch-reuse:1
@ 2563 train 4.7356 , allloss: 4.7367, dt: 1045.86ms, fracRes: 0.7622, norm(attn): 0.1719, norm(output): 1.6250, norm(x): 0.2796, norm(y): 0.9793, norm:1.3396, tok/sec: 125324.04, flops:97.60, batch-reuse:1
@ 2564 train 4.6913 , allloss: 4.6922, dt: 1054.75ms, fracRes: 0.7646, norm(attn): 0.1689, norm(output): 1.6016, norm(x): 0.2751, norm(y): 0.9794, norm:1.6193, tok/sec: 124267.98, flops:96.78, batch-reuse:1
@ 2565 train 4.9097 , allloss: 4.9117, dt: 1057.19ms, fracRes: 0.7647, norm(attn): 0.1689, norm(output): 1.6172, norm(x): 0.2765, norm(y): 0.9792, norm:1.2918, tok/sec: 123981.81, flops:96.56, batch-reuse:1
@ 2566 train 4.8327 , allloss: 4.8380, dt: 1037.28ms, fracRes: 0.7663, norm(attn): 0.1670, norm(output): 1.5859, norm(x): 0.2750, norm(y): 0.9793, norm:0.6848, tok/sec: 126361.21, flops:98.41, batch-reuse:1
@ 2567 train 4.8598 , allloss: 4.8616, dt: 1045.85ms, fracRes: 0.7676, norm(attn): 0.1650, norm(output): 1.5859, norm(x): 0.2709, norm(y): 0.9792, norm:0.8059, tok/sec: 125325.29, flops:97.60, batch-reuse:1
@ 2568 train 4.8209 , allloss: 4.8243, dt: 1044.98ms, fracRes: 0.7696, norm(attn): 0.1631, norm(output): 1.5938, norm(x): 0.2672, norm(y): 0.9791, norm:0.7371, tok/sec: 125429.80, flops:97.69, batch-reuse:1
@ 2569 train 4.8836 , allloss: 4.8859, dt: 1062.01ms, fracRes: 0.7650, norm(attn): 0.1680, norm(output): 1.5938, norm(x): 0.2756, norm(y): 0.9793, norm:0.8031, tok/sec: 123418.63, flops:96.12, batch-reuse:1
@ 2570 train 4.7727 , allloss: 4.7741, dt: 1052.55ms, fracRes: 0.7652, norm(attn): 0.1680, norm(output): 1.5859, norm(x): 0.2723, norm(y): 0.9793, norm:0.6901, tok/sec: 124527.82, flops:96.98, batch-reuse:1
@ 2571 train 4.8123 , allloss: 4.8450, dt: 1058.18ms, fracRes: 0.7646, norm(attn): 0.1709, norm(output): 1.6094, norm(x): 0.2871, norm(y): 0.9793, norm:1.0852, tok/sec: 123866.00, flops:96.47, batch-reuse:1
@ 2572 train 4.8564 , allloss: 4.8575, dt: 1043.87ms, fracRes: 0.7666, norm(attn): 0.1660, norm(output): 1.6016, norm(x): 0.2747, norm(y): 0.9791, norm:0.6261, tok/sec: 125563.56, flops:97.79, batch-reuse:1
@ 2573 train 4.8201 , allloss: 4.8211, dt: 1053.66ms, fracRes: 0.7638, norm(attn): 0.1650, norm(output): 1.6172, norm(x): 0.2783, norm(y): 0.9790, norm:0.8511, tok/sec: 124396.96, flops:96.88, batch-reuse:1
@ 2574 train 4.7517 , allloss: 4.7528, dt: 1045.26ms, fracRes: 0.7641, norm(attn): 0.1660, norm(output): 1.6016, norm(x): 0.2755, norm(y): 0.9791, norm:0.6592, tok/sec: 125396.61, flops:97.66, batch-reuse:1
@ 2575 train 4.8130 , allloss: 4.8143, dt: 1047.15ms, fracRes: 0.7653, norm(attn): 0.1650, norm(output): 1.6094, norm(x): 0.2738, norm(y): 0.9789, norm:0.6681, tok/sec: 125170.09, flops:97.48, batch-reuse:1
@ 2576 train 4.7413 , allloss: 4.7424, dt: 1037.00ms, fracRes: 0.7627, norm(attn): 0.1680, norm(output): 1.6094, norm(x): 0.2790, norm(y): 0.9790, norm:0.6436, tok/sec: 126395.38, flops:98.44, batch-reuse:1
@ 2577 train 4.8487 , allloss: 7.7928, dt: 1041.72ms, fracRes: 0.7659, norm(attn): 0.1670, norm(output): 1.6406, norm(x): 0.2968, norm(y): 0.9788, norm:8.8447, tok/sec: 125822.75, flops:97.99, batch-reuse:1
@ 2578 train 4.6983 , allloss: 4.6994, dt: 1058.56ms, fracRes: 0.7640, norm(attn): 0.1680, norm(output): 1.6094, norm(x): 0.2754, norm(y): 0.9790, norm:1.3869, tok/sec: 123821.16, flops:96.43, batch-reuse:1
@ 2579 train 4.8489 , allloss: 4.8500, dt: 1057.49ms, fracRes: 0.7643, norm(attn): 0.1689, norm(output): 1.6094, norm(x): 0.2755, norm(y): 0.9790, norm:0.8139, tok/sec: 123946.34, flops:96.53, batch-reuse:1
@ 2580 train 4.7669 , allloss: 4.7679, dt: 1046.53ms, fracRes: 0.7629, norm(attn): 0.1689, norm(output): 1.6172, norm(x): 0.2783, norm(y): 0.9789, norm:1.6443, tok/sec: 125244.81, flops:97.54, batch-reuse:1
@ 2581 train 4.7798 , allloss: 5.2789, dt: 1048.55ms, fracRes: 0.7651, norm(attn): 0.1689, norm(output): 1.6641, norm(x): 0.3436, norm(y): 0.9788, norm:4.4991, tok/sec: 125002.91, flops:97.35, batch-reuse:1
@ 2582 train 4.7580 , allloss: 4.7591, dt: 1043.54ms, fracRes: 0.7637, norm(attn): 0.1670, norm(output): 1.6172, norm(x): 0.2769, norm(y): 0.9788, norm:0.9308, tok/sec: 125603.55, flops:97.82, batch-reuse:1
@ 2583 train 4.7280 , allloss: 4.7291, dt: 1049.48ms, fracRes: 0.7634, norm(attn): 0.1670, norm(output): 1.6094, norm(x): 0.2774, norm(y): 0.9788, norm:0.8958, tok/sec: 124891.76, flops:97.27, batch-reuse:1
@ 2584 train 4.7661 , allloss: 4.7672, dt: 1047.52ms, fracRes: 0.7647, norm(attn): 0.1699, norm(output): 1.6172, norm(x): 0.2776, norm(y): 0.9789, norm:0.7276, tok/sec: 125126.19, flops:97.45, batch-reuse:1
@ 2585 train 4.7886 , allloss: 4.7897, dt: 1044.05ms, fracRes: 0.7661, norm(attn): 0.1699, norm(output): 1.6172, norm(x): 0.2740, norm(y): 0.9788, norm:0.6292, tok/sec: 125542.05, flops:97.77, batch-reuse:1
@ 2586 train 4.7018 , allloss: 4.7030, dt: 1042.49ms, fracRes: 0.7699, norm(attn): 0.1680, norm(output): 1.5859, norm(x): 0.2678, norm(y): 0.9787, norm:0.7711, tok/sec: 125729.31, flops:97.92, batch-reuse:1
@ 2587 train 4.8294 , allloss: 4.8306, dt: 1044.95ms, fracRes: 0.7649, norm(attn): 0.1689, norm(output): 1.6250, norm(x): 0.2782, norm(y): 0.9787, norm:0.6792, tok/sec: 125433.35, flops:97.69, batch-reuse:1
@ 2588 train 4.7046 , allloss: 4.7057, dt: 1059.90ms, fracRes: 0.7655, norm(attn): 0.1650, norm(output): 1.6250, norm(x): 0.2735, norm(y): 0.9788, norm:0.6358, tok/sec: 123664.80, flops:96.31, batch-reuse:1
@ 2589 train 4.7649 , allloss: 4.7660, dt: 1058.17ms, fracRes: 0.7653, norm(attn): 0.1660, norm(output): 1.6172, norm(x): 0.2742, norm(y): 0.9787, norm:0.6816, tok/sec: 123866.14, flops:96.47, batch-reuse:1
@ 2590 train 4.7526 , allloss: 4.7539, dt: 1056.42ms, fracRes: 0.7660, norm(attn): 0.1680, norm(output): 1.6172, norm(x): 0.2741, norm(y): 0.9787, norm:1.2638, tok/sec: 124071.63, flops:96.63, batch-reuse:1
@ 2591 train 4.8206 , allloss: 4.8217, dt: 1053.33ms, fracRes: 0.7661, norm(attn): 0.1660, norm(output): 1.6172, norm(x): 0.2738, norm(y): 0.9786, norm:0.6439, tok/sec: 124435.62, flops:96.91, batch-reuse:1
@ 2592 train 4.8327 , allloss: 4.8337, dt: 1060.31ms, fracRes: 0.7660, norm(attn): 0.1660, norm(output): 1.6250, norm(x): 0.2749, norm(y): 0.9786, norm:0.6271, tok/sec: 123616.94, flops:96.27, batch-reuse:1
@ 2593 train 4.8260 , allloss: 4.8271, dt: 1042.08ms, fracRes: 0.7669, norm(attn): 0.1660, norm(output): 1.6172, norm(x): 0.2757, norm(y): 0.9784, norm:0.6984, tok/sec: 125779.68, flops:97.96, batch-reuse:1
@ 2594 train 4.7315 , allloss: 4.7385, dt: 1059.09ms, fracRes: 0.7654, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2821, norm(y): 0.9787, norm:3.5685, tok/sec: 123758.95, flops:96.38, batch-reuse:1
@ 2595 train 4.7689 , allloss: 4.7705, dt: 1043.59ms, fracRes: 0.7646, norm(attn): 0.1689, norm(output): 1.6250, norm(x): 0.2809, norm(y): 0.9788, norm:0.9337, tok/sec: 125597.32, flops:97.82, batch-reuse:1
@ 2596 train 4.8937 , allloss: 4.8951, dt: 1042.05ms, fracRes: 0.7677, norm(attn): 0.1631, norm(output): 1.6172, norm(x): 0.2727, norm(y): 0.9784, norm:1.0237, tok/sec: 125783.08, flops:97.96, batch-reuse:1
@ 2597 train 4.7694 , allloss: 4.7705, dt: 1045.22ms, fracRes: 0.7656, norm(attn): 0.1660, norm(output): 1.6094, norm(x): 0.2766, norm(y): 0.9785, norm:0.7908, tok/sec: 125400.76, flops:97.66, batch-reuse:1
@ 2598 train 4.7042 , allloss: 4.7053, dt: 1047.45ms, fracRes: 0.7635, norm(attn): 0.1689, norm(output): 1.6250, norm(x): 0.2799, norm(y): 0.9786, norm:0.8770, tok/sec: 125134.05, flops:97.45, batch-reuse:1
@ 2599 train 4.6926 , allloss: 4.6938, dt: 1043.37ms, fracRes: 0.7665, norm(attn): 0.1689, norm(output): 1.6094, norm(x): 0.2740, norm(y): 0.9785, norm:0.7337, tok/sec: 125623.64, flops:97.84, batch-reuse:1
@ 2600 train 4.7106 , allloss: 5.1925, dt: 1044.88ms, fracRes: 0.7645, norm(attn): 0.1699, norm(output): 1.6641, norm(x): 0.4091, norm(y): 0.9785, norm:6.9410, tok/sec: 125441.85, flops:97.69, batch-reuse:1
@ 2601 train 4.9103 , allloss: 4.9117, dt: 1043.16ms, fracRes: 0.7659, norm(attn): 0.1670, norm(output): 1.6172, norm(x): 0.2745, norm(y): 0.9783, norm:1.1216, tok/sec: 125649.48, flops:97.86, batch-reuse:1
@ 2602 train 4.8879 , allloss: 4.8891, dt: 1039.96ms, fracRes: 0.7667, norm(attn): 0.1641, norm(output): 1.6172, norm(x): 0.2698, norm(y): 0.9783, norm:0.8588, tok/sec: 126035.95, flops:98.16, batch-reuse:1
@ 2603 train 5.0030 , allloss: 5.0042, dt: 1053.95ms, fracRes: 0.7657, norm(attn): 0.1660, norm(output): 1.6250, norm(x): 0.2717, norm(y): 0.9782, norm:0.7551, tok/sec: 124363.11, flops:96.85, batch-reuse:1
@ 2604 train 4.9543 , allloss: 4.9556, dt: 1049.76ms, fracRes: 0.7654, norm(attn): 0.1650, norm(output): 1.6172, norm(x): 0.2740, norm(y): 0.9782, norm:0.7685, tok/sec: 124858.72, flops:97.24, batch-reuse:1
@ 2605 train 4.9201 , allloss: 4.9212, dt: 1059.45ms, fracRes: 0.7674, norm(attn): 0.1670, norm(output): 1.6250, norm(x): 0.2737, norm(y): 0.9780, norm:0.8228, tok/sec: 123717.31, flops:96.35, batch-reuse:1
@ 2606 train 4.9701 , allloss: 4.9755, dt: 1045.93ms, fracRes: 0.7661, norm(attn): 0.1670, norm(output): 1.6250, norm(x): 0.2746, norm(y): 0.9781, norm:1.0536, tok/sec: 125316.78, flops:97.60, batch-reuse:1
@ 2607 train 4.9316 , allloss: 4.9332, dt: 1061.03ms, fracRes: 0.7713, norm(attn): 0.1670, norm(output): 1.6172, norm(x): 0.2641, norm(y): 0.9779, norm:0.6990, tok/sec: 123532.42, flops:96.21, batch-reuse:1
@ 2608 train 4.9254 , allloss: 4.9266, dt: 1061.49ms, fracRes: 0.7647, norm(attn): 0.1660, norm(output): 1.6328, norm(x): 0.2760, norm(y): 0.9782, norm:0.7097, tok/sec: 123478.92, flops:96.17, batch-reuse:1
@ 2609 train 5.0906 , allloss: 5.0922, dt: 1060.20ms, fracRes: 0.7667, norm(attn): 0.1660, norm(output): 1.6406, norm(x): 0.2727, norm(y): 0.9779, norm:0.6096, tok/sec: 123629.45, flops:96.28, batch-reuse:1
@ 2610 train 5.0812 , allloss: 5.0827, dt: 1058.85ms, fracRes: 0.7714, norm(attn): 0.1631, norm(output): 1.6094, norm(x): 0.2652, norm(y): 0.9779, norm:0.6959, tok/sec: 123786.56, flops:96.41, batch-reuse:1
@ 2611 train 4.9655 , allloss: 4.9667, dt: 1054.56ms, fracRes: 0.7659, norm(attn): 0.1680, norm(output): 1.6406, norm(x): 0.2769, norm(y): 0.9781, norm:0.7185, tok/sec: 124291.18, flops:96.80, batch-reuse:1
@ 2612 train 4.9435 , allloss: 4.9449, dt: 1048.37ms, fracRes: 0.7657, norm(attn): 0.1699, norm(output): 1.6172, norm(x): 0.2763, norm(y): 0.9781, norm:0.6936, tok/sec: 125024.41, flops:97.37, batch-reuse:1
@ 2613 train 4.8417 , allloss: 4.8436, dt: 1045.63ms, fracRes: 0.7671, norm(attn): 0.1670, norm(output): 1.6250, norm(x): 0.2755, norm(y): 0.9780, norm:0.9479, tok/sec: 125351.98, flops:97.62, batch-reuse:1
@ 2614 train 4.9246 , allloss: 4.9260, dt: 1052.73ms, fracRes: 0.7663, norm(attn): 0.1650, norm(output): 1.6172, norm(x): 0.2755, norm(y): 0.9778, norm:0.4905, tok/sec: 124506.44, flops:96.97, batch-reuse:1
@ 2615 train 4.9658 , allloss: 4.9672, dt: 1050.51ms, fracRes: 0.7670, norm(attn): 0.1621, norm(output): 1.6250, norm(x): 0.2730, norm(y): 0.9777, norm:0.5682, tok/sec: 124769.29, flops:97.17, batch-reuse:1
@ 2616 train 4.9593 , allloss: 4.9631, dt: 1050.20ms, fracRes: 0.7661, norm(attn): 0.1680, norm(output): 1.6172, norm(x): 0.2764, norm(y): 0.9778, norm:0.7123, tok/sec: 124806.59, flops:97.20, batch-reuse:1
@ 2617 train 4.8474 , allloss: 4.8486, dt: 1070.12ms, fracRes: 0.7644, norm(attn): 0.1680, norm(output): 1.6172, norm(x): 0.2766, norm(y): 0.9780, norm:0.5557, tok/sec: 122483.31, flops:95.39, batch-reuse:1
@ 2618 train 4.8339 , allloss: 4.8353, dt: 1060.91ms, fracRes: 0.7668, norm(attn): 0.1670, norm(output): 1.6328, norm(x): 0.2744, norm(y): 0.9777, norm:0.5789, tok/sec: 123546.43, flops:96.22, batch-reuse:1
@ 2619 train 4.8982 , allloss: 4.8994, dt: 1056.56ms, fracRes: 0.7660, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2757, norm(y): 0.9777, norm:0.5634, tok/sec: 124055.34, flops:96.61, batch-reuse:1
@ 2620 train 4.9438 , allloss: 4.9451, dt: 1050.64ms, fracRes: 0.7682, norm(attn): 0.1641, norm(output): 1.6250, norm(x): 0.2725, norm(y): 0.9777, norm:0.5447, tok/sec: 124754.05, flops:97.16, batch-reuse:1
@ 2621 train 4.9269 , allloss: 4.9283, dt: 1046.37ms, fracRes: 0.7680, norm(attn): 0.1650, norm(output): 1.6172, norm(x): 0.2721, norm(y): 0.9777, norm:0.5700, tok/sec: 125263.41, flops:97.56, batch-reuse:1
@ 2622 train 4.9067 , allloss: 4.9079, dt: 1044.73ms, fracRes: 0.7662, norm(attn): 0.1660, norm(output): 1.6172, norm(x): 0.2754, norm(y): 0.9777, norm:0.5551, tok/sec: 125460.34, flops:97.71, batch-reuse:1
@ 2623 train 4.9907 , allloss: 4.9918, dt: 1055.00ms, fracRes: 0.7656, norm(attn): 0.1660, norm(output): 1.6172, norm(x): 0.2758, norm(y): 0.9777, norm:0.6719, tok/sec: 124238.94, flops:96.76, batch-reuse:1
@ 2624 train 5.0051 , allloss: 5.0063, dt: 1052.58ms, fracRes: 0.7675, norm(attn): 0.1641, norm(output): 1.6250, norm(x): 0.2720, norm(y): 0.9776, norm:0.6054, tok/sec: 124524.46, flops:96.98, batch-reuse:1
@ 2625 train 4.9152 , allloss: 4.9163, dt: 1051.64ms, fracRes: 0.7669, norm(attn): 0.1670, norm(output): 1.6328, norm(x): 0.2747, norm(y): 0.9776, norm:0.6703, tok/sec: 124635.77, flops:97.07, batch-reuse:1
@ 2626 train 4.9021 , allloss: 4.9033, dt: 1059.71ms, fracRes: 0.7657, norm(attn): 0.1670, norm(output): 1.6328, norm(x): 0.2780, norm(y): 0.9776, norm:0.7911, tok/sec: 123686.17, flops:96.33, batch-reuse:1
@ 2627 train 4.9491 , allloss: 4.9503, dt: 1064.37ms, fracRes: 0.7649, norm(attn): 0.1660, norm(output): 1.6328, norm(x): 0.2784, norm(y): 0.9776, norm:0.7992, tok/sec: 123144.88, flops:95.91, batch-reuse:1
@ 2628 train 4.8456 , allloss: 4.8468, dt: 1039.84ms, fracRes: 0.7680, norm(attn): 0.1650, norm(output): 1.6172, norm(x): 0.2720, norm(y): 0.9775, norm:0.7217, tok/sec: 126049.87, flops:98.17, batch-reuse:1
@ 2629 train 4.8634 , allloss: 4.8646, dt: 1052.99ms, fracRes: 0.7652, norm(attn): 0.1650, norm(output): 1.6250, norm(x): 0.2794, norm(y): 0.9776, norm:0.7118, tok/sec: 124476.58, flops:96.94, batch-reuse:1
@ 2630 train 4.9527 , allloss: 4.9539, dt: 1052.39ms, fracRes: 0.7674, norm(attn): 0.1641, norm(output): 1.6250, norm(x): 0.2760, norm(y): 0.9775, norm:0.6905, tok/sec: 124546.66, flops:97.00, batch-reuse:1
@ 2631 train 4.8440 , allloss: 4.8450, dt: 1050.59ms, fracRes: 0.7646, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2801, norm(y): 0.9777, norm:0.7669, tok/sec: 124760.48, flops:97.16, batch-reuse:1
@ 2632 train 4.8955 , allloss: 4.8967, dt: 1049.34ms, fracRes: 0.7673, norm(attn): 0.1660, norm(output): 1.6172, norm(x): 0.2742, norm(y): 0.9776, norm:0.6703, tok/sec: 124908.42, flops:97.28, batch-reuse:1
@ 2633 train 4.8809 , allloss: 4.8820, dt: 1042.00ms, fracRes: 0.7656, norm(attn): 0.1641, norm(output): 1.6172, norm(x): 0.2762, norm(y): 0.9775, norm:0.6159, tok/sec: 125789.44, flops:97.97, batch-reuse:1
@ 2634 train 4.8501 , allloss: 4.8513, dt: 1061.80ms, fracRes: 0.7660, norm(attn): 0.1670, norm(output): 1.6172, norm(x): 0.2755, norm(y): 0.9775, norm:0.6827, tok/sec: 123443.04, flops:96.14, batch-reuse:1
@ 2635 train 4.8533 , allloss: 4.8545, dt: 1052.88ms, fracRes: 0.7652, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2788, norm(y): 0.9777, norm:0.7425, tok/sec: 124488.54, flops:96.95, batch-reuse:1
@ 2636 train 4.9148 , allloss: 4.9160, dt: 1043.33ms, fracRes: 0.7645, norm(attn): 0.1689, norm(output): 1.6328, norm(x): 0.2799, norm(y): 0.9775, norm:0.7979, tok/sec: 125628.41, flops:97.84, batch-reuse:1
@ 2637 train 4.8655 , allloss: 4.8667, dt: 1051.79ms, fracRes: 0.7642, norm(attn): 0.1670, norm(output): 1.6250, norm(x): 0.2787, norm(y): 0.9774, norm:0.8117, tok/sec: 124617.69, flops:97.05, batch-reuse:1
@ 2638 train 4.9157 , allloss: 4.9168, dt: 1065.16ms, fracRes: 0.7654, norm(attn): 0.1660, norm(output): 1.6250, norm(x): 0.2763, norm(y): 0.9775, norm:0.7077, tok/sec: 123053.59, flops:95.83, batch-reuse:1
@ 2639 train 5.0629 , allloss: 5.0641, dt: 1061.68ms, fracRes: 0.7712, norm(attn): 0.1641, norm(output): 1.6094, norm(x): 0.2658, norm(y): 0.9771, norm:0.6266, tok/sec: 123456.85, flops:96.15, batch-reuse:1
@ 2640 train 4.8707 , allloss: 4.8719, dt: 1055.42ms, fracRes: 0.7652, norm(attn): 0.1689, norm(output): 1.6250, norm(x): 0.2798, norm(y): 0.9773, norm:0.9486, tok/sec: 124189.74, flops:96.72, batch-reuse:1
@ 2641 train 4.9725 , allloss: 4.9736, dt: 1048.56ms, fracRes: 0.7690, norm(attn): 0.1660, norm(output): 1.6172, norm(x): 0.2726, norm(y): 0.9773, norm:1.0394, tok/sec: 125001.92, flops:97.35, batch-reuse:1
@ 2642 train 4.8895 , allloss: 4.8908, dt: 1039.51ms, fracRes: 0.7673, norm(attn): 0.1641, norm(output): 1.6172, norm(x): 0.2744, norm(y): 0.9773, norm:0.6735, tok/sec: 126089.68, flops:98.20, batch-reuse:1
@ 2643 train 4.7997 , allloss: 4.8009, dt: 1040.75ms, fracRes: 0.7654, norm(attn): 0.1670, norm(output): 1.6094, norm(x): 0.2779, norm(y): 0.9774, norm:0.6981, tok/sec: 125940.29, flops:98.08, batch-reuse:1
@ 2644 train 4.8473 , allloss: 4.8484, dt: 1054.92ms, fracRes: 0.7640, norm(attn): 0.1699, norm(output): 1.6172, norm(x): 0.2805, norm(y): 0.9774, norm:0.6329, tok/sec: 124248.65, flops:96.77, batch-reuse:1
@ 2645 train 4.9019 , allloss: 4.9031, dt: 1061.86ms, fracRes: 0.7683, norm(attn): 0.1660, norm(output): 1.6172, norm(x): 0.2713, norm(y): 0.9772, norm:0.6144, tok/sec: 123436.61, flops:96.13, batch-reuse:1
@ 2646 train 4.9216 , allloss: 4.9226, dt: 1066.70ms, fracRes: 0.7657, norm(attn): 0.1660, norm(output): 1.6406, norm(x): 0.2804, norm(y): 0.9774, norm:0.9253, tok/sec: 122875.67, flops:95.70, batch-reuse:1
@ 2647 train 4.8819 , allloss: 4.8829, dt: 1062.41ms, fracRes: 0.7641, norm(attn): 0.1680, norm(output): 1.6406, norm(x): 0.2818, norm(y): 0.9775, norm:0.8495, tok/sec: 123372.62, flops:96.08, batch-reuse:1
@ 2648 train 4.8149 , allloss: 4.8158, dt: 1044.70ms, fracRes: 0.7651, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2815, norm(y): 0.9774, norm:0.7186, tok/sec: 125464.07, flops:97.71, batch-reuse:1
@ 2649 train 4.8788 , allloss: 4.8798, dt: 1058.34ms, fracRes: 0.7668, norm(attn): 0.1680, norm(output): 1.6328, norm(x): 0.2813, norm(y): 0.9773, norm:0.7317, tok/sec: 123847.13, flops:96.45, batch-reuse:1
@ 2650 train 4.8162 , allloss: 4.8171, dt: 1056.53ms, fracRes: 0.7642, norm(attn): 0.1680, norm(output): 1.6172, norm(x): 0.2841, norm(y): 0.9775, norm:0.8893, tok/sec: 124058.86, flops:96.62, batch-reuse:1
@ 2651 train 4.8376 , allloss: 4.8384, dt: 1055.75ms, fracRes: 0.7657, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2789, norm(y): 0.9774, norm:0.6864, tok/sec: 124150.36, flops:96.69, batch-reuse:1
@ 2652 train 4.8421 , allloss: 4.8431, dt: 1058.19ms, fracRes: 0.7666, norm(attn): 0.1689, norm(output): 1.6406, norm(x): 0.2801, norm(y): 0.9773, norm:0.6361, tok/sec: 123863.88, flops:96.47, batch-reuse:1
@ 2653 train 4.8625 , allloss: 4.8633, dt: 1048.75ms, fracRes: 0.7668, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2804, norm(y): 0.9773, norm:0.7827, tok/sec: 124978.76, flops:97.33, batch-reuse:1
@ 2654 train 4.8369 , allloss: 4.8378, dt: 1038.88ms, fracRes: 0.7680, norm(attn): 0.1670, norm(output): 1.6328, norm(x): 0.2779, norm(y): 0.9773, norm:0.5837, tok/sec: 126166.45, flops:98.26, batch-reuse:1
@ 2655 train 4.8194 , allloss: 4.8203, dt: 1050.45ms, fracRes: 0.7672, norm(attn): 0.1670, norm(output): 1.6250, norm(x): 0.2766, norm(y): 0.9773, norm:0.7033, tok/sec: 124776.82, flops:97.18, batch-reuse:1
@ 2656 train 4.9032 , allloss: 4.9041, dt: 1040.65ms, fracRes: 0.7648, norm(attn): 0.1699, norm(output): 1.6328, norm(x): 0.2796, norm(y): 0.9774, norm:0.7523, tok/sec: 125952.35, flops:98.09, batch-reuse:1
@ 2657 train 4.7773 , allloss: 4.7781, dt: 1048.23ms, fracRes: 0.7618, norm(attn): 0.1709, norm(output): 1.6406, norm(x): 0.2846, norm(y): 0.9774, norm:0.7233, tok/sec: 125040.70, flops:97.38, batch-reuse:1
@ 2658 train 4.8555 , allloss: 4.8563, dt: 1054.65ms, fracRes: 0.7646, norm(attn): 0.1689, norm(output): 1.6250, norm(x): 0.2811, norm(y): 0.9773, norm:0.6766, tok/sec: 124280.25, flops:96.79, batch-reuse:1
@ 2659 train 4.8216 , allloss: 4.8224, dt: 1046.10ms, fracRes: 0.7633, norm(attn): 0.1680, norm(output): 1.6328, norm(x): 0.2845, norm(y): 0.9773, norm:0.7995, tok/sec: 125295.56, flops:97.58, batch-reuse:1
@ 2660 train 4.8837 , allloss: 4.8846, dt: 1050.87ms, fracRes: 0.7677, norm(attn): 0.1660, norm(output): 1.6094, norm(x): 0.2740, norm(y): 0.9773, norm:0.7060, tok/sec: 124727.59, flops:97.14, batch-reuse:1
@ 2661 train 4.8240 , allloss: 4.8249, dt: 1051.71ms, fracRes: 0.7652, norm(attn): 0.1689, norm(output): 1.6328, norm(x): 0.2808, norm(y): 0.9772, norm:0.6611, tok/sec: 124627.81, flops:97.06, batch-reuse:1
@ 2662 train 4.7918 , allloss: 4.7929, dt: 1060.11ms, fracRes: 0.7651, norm(attn): 0.1699, norm(output): 1.6172, norm(x): 0.2802, norm(y): 0.9772, norm:0.7863, tok/sec: 123639.52, flops:96.29, batch-reuse:1
@ 2663 train 4.8245 , allloss: 4.8253, dt: 1055.67ms, fracRes: 0.7641, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2845, norm(y): 0.9773, norm:0.7281, tok/sec: 124160.15, flops:96.70, batch-reuse:1
@ 2664 train 4.8644 , allloss: 4.8652, dt: 1059.01ms, fracRes: 0.7656, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2828, norm(y): 0.9772, norm:0.7237, tok/sec: 123768.28, flops:96.39, batch-reuse:1
@ 2665 train 4.8064 , allloss: 4.8072, dt: 1047.80ms, fracRes: 0.7638, norm(attn): 0.1680, norm(output): 1.6328, norm(x): 0.2860, norm(y): 0.9772, norm:0.7353, tok/sec: 125093.05, flops:97.42, batch-reuse:1
@ 2666 train 4.9183 , allloss: 4.9192, dt: 1053.16ms, fracRes: 0.7657, norm(attn): 0.1670, norm(output): 1.6328, norm(x): 0.2827, norm(y): 0.9771, norm:0.7081, tok/sec: 124456.07, flops:96.93, batch-reuse:1
@ 2667 train 4.8843 , allloss: 4.8852, dt: 1048.48ms, fracRes: 0.7666, norm(attn): 0.1689, norm(output): 1.6328, norm(x): 0.2791, norm(y): 0.9771, norm:0.5842, tok/sec: 125012.04, flops:97.36, batch-reuse:1
@ 2668 train 4.8703 , allloss: 4.8711, dt: 1047.96ms, fracRes: 0.7655, norm(attn): 0.1709, norm(output): 1.6250, norm(x): 0.2806, norm(y): 0.9772, norm:0.6848, tok/sec: 125073.70, flops:97.41, batch-reuse:1
@ 2669 train 4.7990 , allloss: 4.7998, dt: 1040.49ms, fracRes: 0.7632, norm(attn): 0.1709, norm(output): 1.6328, norm(x): 0.2857, norm(y): 0.9770, norm:0.6823, tok/sec: 125971.23, flops:98.11, batch-reuse:1
@ 2670 train 4.8026 , allloss: 4.8033, dt: 1052.37ms, fracRes: 0.7634, norm(attn): 0.1709, norm(output): 1.6406, norm(x): 0.2858, norm(y): 0.9771, norm:0.6613, tok/sec: 124549.09, flops:97.00, batch-reuse:1
@ 2671 train 4.8221 , allloss: 4.8229, dt: 1037.01ms, fracRes: 0.7660, norm(attn): 0.1689, norm(output): 1.6406, norm(x): 0.2830, norm(y): 0.9771, norm:0.5570, tok/sec: 126394.36, flops:98.44, batch-reuse:1
@ 2672 train 4.8067 , allloss: 4.8076, dt: 1045.68ms, fracRes: 0.7644, norm(attn): 0.1709, norm(output): 1.6406, norm(x): 0.2856, norm(y): 0.9771, norm:0.6064, tok/sec: 125346.55, flops:97.62, batch-reuse:1
@ 2673 train 4.7261 , allloss: 4.7271, dt: 1054.78ms, fracRes: 0.7636, norm(attn): 0.1709, norm(output): 1.6406, norm(x): 0.2862, norm(y): 0.9771, norm:0.5587, tok/sec: 124265.11, flops:96.78, batch-reuse:1
@ 2674 train 4.9149 , allloss: 4.9159, dt: 1049.86ms, fracRes: 0.7644, norm(attn): 0.1689, norm(output): 1.6250, norm(x): 0.2817, norm(y): 0.9769, norm:0.7411, tok/sec: 124847.26, flops:97.23, batch-reuse:1
@ 2675 train 4.8473 , allloss: 4.8482, dt: 1052.25ms, fracRes: 0.7642, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2829, norm(y): 0.9771, norm:0.6492, tok/sec: 124563.37, flops:97.01, batch-reuse:1
@ 2676 train 4.7884 , allloss: 4.7893, dt: 1066.76ms, fracRes: 0.7630, norm(attn): 0.1709, norm(output): 1.6250, norm(x): 0.2859, norm(y): 0.9772, norm:0.5955, tok/sec: 122869.57, flops:95.69, batch-reuse:1
@ 2677 train 4.7859 , allloss: 4.7868, dt: 1059.98ms, fracRes: 0.7644, norm(attn): 0.1699, norm(output): 1.6406, norm(x): 0.2849, norm(y): 0.9771, norm:0.6103, tok/sec: 123655.67, flops:96.30, batch-reuse:1
@ 2678 train 4.9051 , allloss: 4.9060, dt: 1062.94ms, fracRes: 0.7652, norm(attn): 0.1699, norm(output): 1.6406, norm(x): 0.2822, norm(y): 0.9768, norm:0.7005, tok/sec: 123310.61, flops:96.03, batch-reuse:1
@ 2679 train 4.8407 , allloss: 4.8417, dt: 1065.54ms, fracRes: 0.7655, norm(attn): 0.1709, norm(output): 1.6406, norm(x): 0.2840, norm(y): 0.9769, norm:0.6299, tok/sec: 123009.62, flops:95.80, batch-reuse:1
@ 2680 train 4.7358 , allloss: 4.7365, dt: 1048.81ms, fracRes: 0.7629, norm(attn): 0.1709, norm(output): 1.6406, norm(x): 0.2895, norm(y): 0.9770, norm:0.6381, tok/sec: 124972.11, flops:97.33, batch-reuse:1
@ 2681 train 4.8298 , allloss: 4.8306, dt: 1045.09ms, fracRes: 0.7643, norm(attn): 0.1670, norm(output): 1.6406, norm(x): 0.2874, norm(y): 0.9770, norm:0.6423, tok/sec: 125416.41, flops:97.67, batch-reuse:1
@ 2682 train 4.7112 , allloss: 4.7119, dt: 1048.89ms, fracRes: 0.7607, norm(attn): 0.1699, norm(output): 1.6562, norm(x): 0.2916, norm(y): 0.9771, norm:0.7775, tok/sec: 124962.08, flops:97.32, batch-reuse:1
@ 2683 train 4.7646 , allloss: 4.7654, dt: 1041.15ms, fracRes: 0.7642, norm(attn): 0.1689, norm(output): 1.6406, norm(x): 0.2846, norm(y): 0.9768, norm:0.6213, tok/sec: 125891.72, flops:98.04, batch-reuse:1
@ 2684 train 4.8172 , allloss: 4.8180, dt: 1046.09ms, fracRes: 0.7637, norm(attn): 0.1689, norm(output): 1.6328, norm(x): 0.2860, norm(y): 0.9769, norm:0.5849, tok/sec: 125297.44, flops:97.58, batch-reuse:1
@ 2685 train 4.8169 , allloss: 4.8176, dt: 1057.74ms, fracRes: 0.7627, norm(attn): 0.1689, norm(output): 1.6484, norm(x): 0.2894, norm(y): 0.9770, norm:0.7540, tok/sec: 123917.17, flops:96.51, batch-reuse:1
@ 2686 train 4.8687 , allloss: 4.8696, dt: 1040.45ms, fracRes: 0.7649, norm(attn): 0.1689, norm(output): 1.6562, norm(x): 0.2832, norm(y): 0.9768, norm:0.6573, tok/sec: 125976.28, flops:98.11, batch-reuse:1
@ 2687 train 4.8140 , allloss: 4.8149, dt: 1052.88ms, fracRes: 0.7678, norm(attn): 0.1670, norm(output): 1.6328, norm(x): 0.2776, norm(y): 0.9768, norm:0.7158, tok/sec: 124488.93, flops:96.95, batch-reuse:1
@ 2688 train 4.7745 , allloss: 4.7753, dt: 1045.67ms, fracRes: 0.7636, norm(attn): 0.1699, norm(output): 1.6328, norm(x): 0.2857, norm(y): 0.9769, norm:0.9048, tok/sec: 125347.72, flops:97.62, batch-reuse:1
@ 2689 train 4.8928 , allloss: 4.8936, dt: 1048.26ms, fracRes: 0.7669, norm(attn): 0.1670, norm(output): 1.6250, norm(x): 0.2809, norm(y): 0.9768, norm:0.8105, tok/sec: 125037.88, flops:97.38, batch-reuse:1
@ 2690 train 4.8361 , allloss: 4.8370, dt: 1050.37ms, fracRes: 0.7655, norm(attn): 0.1680, norm(output): 1.6328, norm(x): 0.2818, norm(y): 0.9768, norm:0.7771, tok/sec: 124786.05, flops:97.18, batch-reuse:1
@ 2691 train 4.8181 , allloss: 4.8190, dt: 1068.29ms, fracRes: 0.7642, norm(attn): 0.1680, norm(output): 1.6406, norm(x): 0.2836, norm(y): 0.9767, norm:0.9477, tok/sec: 122692.73, flops:95.55, batch-reuse:1
@ 2692 train 4.7162 , allloss: 4.7170, dt: 1084.66ms, fracRes: 0.7656, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2804, norm(y): 0.9767, norm:0.8608, tok/sec: 120841.42, flops:94.11, batch-reuse:1
@ 2693 train 4.8848 , allloss: 4.8856, dt: 1052.36ms, fracRes: 0.7644, norm(attn): 0.1689, norm(output): 1.6250, norm(x): 0.2828, norm(y): 0.9768, norm:0.7139, tok/sec: 124550.92, flops:97.00, batch-reuse:1
@ 2694 train 4.8295 , allloss: 4.8304, dt: 1061.96ms, fracRes: 0.7634, norm(attn): 0.1689, norm(output): 1.6406, norm(x): 0.2864, norm(y): 0.9768, norm:0.7658, tok/sec: 123424.14, flops:96.12, batch-reuse:1
@ 2695 train 4.8314 , allloss: 4.8323, dt: 1064.57ms, fracRes: 0.7673, norm(attn): 0.1670, norm(output): 1.6328, norm(x): 0.2800, norm(y): 0.9767, norm:0.7004, tok/sec: 123121.82, flops:95.89, batch-reuse:1
@ 2696 train 4.7676 , allloss: 4.7684, dt: 1048.73ms, fracRes: 0.7647, norm(attn): 0.1680, norm(output): 1.6328, norm(x): 0.2858, norm(y): 0.9768, norm:0.7125, tok/sec: 124981.15, flops:97.34, batch-reuse:1
@ 2697 train 4.7243 , allloss: 4.7252, dt: 1055.65ms, fracRes: 0.7656, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2846, norm(y): 0.9768, norm:0.6176, tok/sec: 124162.00, flops:96.70, batch-reuse:1
@ 2698 train 4.7435 , allloss: 4.7443, dt: 1047.04ms, fracRes: 0.7658, norm(attn): 0.1709, norm(output): 1.6250, norm(x): 0.2820, norm(y): 0.9768, norm:0.5949, tok/sec: 125182.95, flops:97.49, batch-reuse:1
@ 2699 train 4.8174 , allloss: 4.8182, dt: 1049.25ms, fracRes: 0.7632, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2862, norm(y): 0.9768, norm:0.6952, tok/sec: 124920.29, flops:97.29, batch-reuse:1
@ 2700 train 4.7397 , allloss: 4.7405, dt: 1041.16ms, fracRes: 0.7645, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2820, norm(y): 0.9767, norm:0.7399, tok/sec: 125890.63, flops:98.04, batch-reuse:1
@ 2701 train 4.6798 , allloss: 4.6805, dt: 1043.04ms, fracRes: 0.7630, norm(attn): 0.1699, norm(output): 1.6328, norm(x): 0.2856, norm(y): 0.9768, norm:0.5828, tok/sec: 125663.84, flops:97.87, batch-reuse:1
@ 2702 train 4.8273 , allloss: 4.8280, dt: 1047.75ms, fracRes: 0.7656, norm(attn): 0.1689, norm(output): 1.6250, norm(x): 0.2826, norm(y): 0.9767, norm:0.6671, tok/sec: 125098.15, flops:97.43, batch-reuse:1
@ 2703 train 4.8073 , allloss: 4.8080, dt: 1049.20ms, fracRes: 0.7646, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2853, norm(y): 0.9768, norm:0.6608, tok/sec: 124925.93, flops:97.29, batch-reuse:1
@ 2704 train 4.9076 , allloss: 4.9085, dt: 1050.37ms, fracRes: 0.7683, norm(attn): 0.1689, norm(output): 1.6250, norm(x): 0.2776, norm(y): 0.9764, norm:0.6172, tok/sec: 124786.90, flops:97.18, batch-reuse:1
@ 2705 train 4.7602 , allloss: 4.7610, dt: 1048.75ms, fracRes: 0.7644, norm(attn): 0.1719, norm(output): 1.6328, norm(x): 0.2851, norm(y): 0.9766, norm:0.6667, tok/sec: 124978.76, flops:97.33, batch-reuse:1
@ 2706 train 4.7197 , allloss: 4.7204, dt: 1043.24ms, fracRes: 0.7643, norm(attn): 0.1709, norm(output): 1.6250, norm(x): 0.2831, norm(y): 0.9766, norm:0.6623, tok/sec: 125638.77, flops:97.85, batch-reuse:1
@ 2707 train 4.7783 , allloss: 4.7790, dt: 1056.21ms, fracRes: 0.7630, norm(attn): 0.1709, norm(output): 1.6328, norm(x): 0.2860, norm(y): 0.9766, norm:0.7817, tok/sec: 124096.30, flops:96.65, batch-reuse:1
@ 2708 train 4.7342 , allloss: 4.7349, dt: 1054.67ms, fracRes: 0.7641, norm(attn): 0.1709, norm(output): 1.6172, norm(x): 0.2858, norm(y): 0.9766, norm:0.7380, tok/sec: 124278.06, flops:96.79, batch-reuse:1
@ 2709 train 4.7520 , allloss: 4.7528, dt: 1056.38ms, fracRes: 0.7647, norm(attn): 0.1699, norm(output): 1.6172, norm(x): 0.2846, norm(y): 0.9766, norm:0.6735, tok/sec: 124076.08, flops:96.63, batch-reuse:1
@ 2710 train 4.9077 , allloss: 4.9084, dt: 1055.86ms, fracRes: 0.7647, norm(attn): 0.1660, norm(output): 1.6328, norm(x): 0.2861, norm(y): 0.9764, norm:0.7535, tok/sec: 124137.69, flops:96.68, batch-reuse:1
@ 2711 train 4.8858 , allloss: 4.8866, dt: 1048.03ms, fracRes: 0.7622, norm(attn): 0.1670, norm(output): 1.6406, norm(x): 0.2899, norm(y): 0.9763, norm:0.8409, tok/sec: 125064.94, flops:97.40, batch-reuse:1
@ 2712 train 4.7942 , allloss: 4.7950, dt: 1059.45ms, fracRes: 0.7650, norm(attn): 0.1689, norm(output): 1.6328, norm(x): 0.2842, norm(y): 0.9764, norm:0.8448, tok/sec: 123716.64, flops:96.35, batch-reuse:1
@ 2713 train 4.8032 , allloss: 4.8043, dt: 1051.53ms, fracRes: 0.7657, norm(attn): 0.1709, norm(output): 1.6250, norm(x): 0.2839, norm(y): 0.9764, norm:0.7274, tok/sec: 124648.52, flops:97.08, batch-reuse:1
@ 2714 train 4.8687 , allloss: 4.8697, dt: 1042.46ms, fracRes: 0.7684, norm(attn): 0.1699, norm(output): 1.6172, norm(x): 0.2801, norm(y): 0.9764, norm:0.7773, tok/sec: 125733.14, flops:97.92, batch-reuse:1
@ 2715 train 4.7337 , allloss: 4.7345, dt: 1047.46ms, fracRes: 0.7647, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2865, norm(y): 0.9764, norm:0.6244, tok/sec: 125133.06, flops:97.45, batch-reuse:1
@ 2716 train 4.7284 , allloss: 4.7291, dt: 1054.86ms, fracRes: 0.7632, norm(attn): 0.1689, norm(output): 1.6328, norm(x): 0.2891, norm(y): 0.9763, norm:0.6120, tok/sec: 124255.45, flops:96.77, batch-reuse:1
@ 2717 train 4.7738 , allloss: 4.7746, dt: 1048.84ms, fracRes: 0.7647, norm(attn): 0.1689, norm(output): 1.6328, norm(x): 0.2846, norm(y): 0.9763, norm:0.6197, tok/sec: 124969.13, flops:97.33, batch-reuse:1
@ 2718 train 4.6813 , allloss: 4.6820, dt: 1048.18ms, fracRes: 0.7647, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2841, norm(y): 0.9763, norm:0.6396, tok/sec: 125047.21, flops:97.39, batch-reuse:1
@ 2719 train 4.8359 , allloss: 4.8368, dt: 1060.85ms, fracRes: 0.7656, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2823, norm(y): 0.9762, norm:0.6408, tok/sec: 123553.90, flops:96.22, batch-reuse:1
@ 2720 train 4.7941 , allloss: 4.7949, dt: 1062.51ms, fracRes: 0.7648, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2840, norm(y): 0.9763, norm:0.5432, tok/sec: 123361.22, flops:96.07, batch-reuse:1
@ 2721 train 4.7239 , allloss: 4.7245, dt: 1051.09ms, fracRes: 0.7648, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2833, norm(y): 0.9764, norm:0.5752, tok/sec: 124701.02, flops:97.12, batch-reuse:1
@ 2722 train 4.7425 , allloss: 4.7431, dt: 1043.03ms, fracRes: 0.7634, norm(attn): 0.1709, norm(output): 1.6328, norm(x): 0.2874, norm(y): 0.9763, norm:0.5787, tok/sec: 125665.25, flops:97.87, batch-reuse:1
@ 2723 train 4.8178 , allloss: 4.8185, dt: 1048.52ms, fracRes: 0.7645, norm(attn): 0.1699, norm(output): 1.6328, norm(x): 0.2850, norm(y): 0.9762, norm:0.6037, tok/sec: 125006.61, flops:97.36, batch-reuse:1
@ 2724 train 4.7144 , allloss: 4.7152, dt: 1050.56ms, fracRes: 0.7636, norm(attn): 0.1699, norm(output): 1.6406, norm(x): 0.2888, norm(y): 0.9763, norm:0.7428, tok/sec: 124764.47, flops:97.17, batch-reuse:1
@ 2725 train 4.7416 , allloss: 4.7425, dt: 1052.80ms, fracRes: 0.7635, norm(attn): 0.1689, norm(output): 1.6328, norm(x): 0.2880, norm(y): 0.9762, norm:0.7529, tok/sec: 124498.49, flops:96.96, batch-reuse:1
@ 2726 train 4.7320 , allloss: 4.7327, dt: 1063.85ms, fracRes: 0.7625, norm(attn): 0.1709, norm(output): 1.6406, norm(x): 0.2896, norm(y): 0.9763, norm:0.7673, tok/sec: 123205.24, flops:95.95, batch-reuse:1
@ 2727 train 4.8154 , allloss: 4.8164, dt: 1051.68ms, fracRes: 0.7663, norm(attn): 0.1699, norm(output): 1.6172, norm(x): 0.2808, norm(y): 0.9762, norm:0.6080, tok/sec: 124631.08, flops:97.06, batch-reuse:1
@ 2728 train 4.8203 , allloss: 4.8211, dt: 1063.22ms, fracRes: 0.7635, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2854, norm(y): 0.9762, norm:0.5670, tok/sec: 123278.51, flops:96.01, batch-reuse:1
@ 2729 train 4.7983 , allloss: 4.7992, dt: 1054.99ms, fracRes: 0.7673, norm(attn): 0.1680, norm(output): 1.6250, norm(x): 0.2794, norm(y): 0.9760, norm:0.6382, tok/sec: 124239.81, flops:96.76, batch-reuse:1
@ 2730 train 4.7924 , allloss: 4.7932, dt: 1056.02ms, fracRes: 0.7628, norm(attn): 0.1709, norm(output): 1.6328, norm(x): 0.2880, norm(y): 0.9762, norm:0.6039, tok/sec: 124118.91, flops:96.66, batch-reuse:1
@ 2731 train 4.7383 , allloss: 4.7391, dt: 1050.59ms, fracRes: 0.7638, norm(attn): 0.1709, norm(output): 1.6328, norm(x): 0.2868, norm(y): 0.9762, norm:0.6695, tok/sec: 124760.34, flops:97.16, batch-reuse:1
@ 2732 train 4.7568 , allloss: 4.7577, dt: 1056.84ms, fracRes: 0.7672, norm(attn): 0.1699, norm(output): 1.6250, norm(x): 0.2804, norm(y): 0.9761, norm:0.5579, tok/sec: 124022.79, flops:96.59, batch-reuse:1
@ 2733 train 4.7929 , allloss: 4.7937, dt: 1053.09ms, fracRes: 0.7638, norm(attn): 0.1719, norm(output): 1.6328, norm(x): 0.2862, norm(y): 0.9762, norm:0.6848, tok/sec: 124464.64, flops:96.93, batch-reuse:1
@ 2734 train 4.7201 , allloss: 4.7209, dt: 1052.46ms, fracRes: 0.7643, norm(attn): 0.1699, norm(output): 1.6328, norm(x): 0.2858, norm(y): 0.9760, norm:0.7452, tok/sec: 124539.13, flops:96.99, batch-reuse:1
@ 2735 train 4.8057 , allloss: 4.8065, dt: 1044.89ms, fracRes: 0.7651, norm(attn): 0.1660, norm(output): 1.6328, norm(x): 0.2838, norm(y): 0.9758, norm:0.6623, tok/sec: 125440.94, flops:97.69, batch-reuse:1
@ 2736 train 4.8398 , allloss: 4.8405, dt: 1043.16ms, fracRes: 0.7644, norm(attn): 0.1680, norm(output): 1.6406, norm(x): 0.2862, norm(y): 0.9759, norm:0.6602, tok/sec: 125648.53, flops:97.86, batch-reuse:1
@ 2737 train 4.7774 , allloss: 4.7783, dt: 1060.60ms, fracRes: 0.7629, norm(attn): 0.1670, norm(output): 1.6406, norm(x): 0.2888, norm(y): 0.9759, norm:0.6254, tok/sec: 123583.37, flops:96.25, batch-reuse:1
@ 2738 train 4.6957 , allloss: 4.6968, dt: 1067.52ms, fracRes: 0.7688, norm(attn): 0.1670, norm(output): 1.6172, norm(x): 0.2764, norm(y): 0.9758, norm:1.0495, tok/sec: 122782.20, flops:95.62, batch-reuse:1
@ 2739 train 4.7773 , allloss: 4.7782, dt: 1049.40ms, fracRes: 0.7649, norm(attn): 0.1699, norm(output): 1.6484, norm(x): 0.2875, norm(y): 0.9759, norm:0.7554, tok/sec: 124901.95, flops:97.27, batch-reuse:1
@ 2740 train 4.6184 , allloss: 4.6193, dt: 1046.87ms, fracRes: 0.7635, norm(attn): 0.1699, norm(output): 1.6406, norm(x): 0.2894, norm(y): 0.9760, norm:0.6852, tok/sec: 125203.56, flops:97.51, batch-reuse:1
@ 2741 train 4.6988 , allloss: 4.6997, dt: 1058.63ms, fracRes: 0.7639, norm(attn): 0.1699, norm(output): 1.6406, norm(x): 0.2897, norm(y): 0.9758, norm:0.7166, tok/sec: 123812.35, flops:96.43, batch-reuse:1
@ 2742 train 4.7135 , allloss: 4.7143, dt: 1067.42ms, fracRes: 0.7657, norm(attn): 0.1699, norm(output): 1.6484, norm(x): 0.2875, norm(y): 0.9758, norm:0.7302, tok/sec: 122792.73, flops:95.63, batch-reuse:1
@ 2743 train 4.6677 , allloss: 4.6686, dt: 1062.61ms, fracRes: 0.7653, norm(attn): 0.1709, norm(output): 1.6562, norm(x): 0.2873, norm(y): 0.9759, norm:0.6659, tok/sec: 123349.45, flops:96.07, batch-reuse:1
@ 2744 train 4.7310 , allloss: 4.7317, dt: 1058.03ms, fracRes: 0.7663, norm(attn): 0.1680, norm(output): 1.6406, norm(x): 0.2852, norm(y): 0.9760, norm:0.7650, tok/sec: 123883.30, flops:96.48, batch-reuse:1
@ 2745 train 4.6750 , allloss: 4.6759, dt: 1042.38ms, fracRes: 0.7676, norm(attn): 0.1699, norm(output): 1.6719, norm(x): 0.2829, norm(y): 0.9757, norm:0.8147, tok/sec: 125743.57, flops:97.93, batch-reuse:1
@ 2746 train 4.6568 , allloss: 4.6576, dt: 1052.88ms, fracRes: 0.7639, norm(attn): 0.1709, norm(output): 1.6562, norm(x): 0.2902, norm(y): 0.9758, norm:0.8022, tok/sec: 124488.56, flops:96.95, batch-reuse:1
@ 2747 train 4.7055 , allloss: 4.7064, dt: 1052.77ms, fracRes: 0.7653, norm(attn): 0.1709, norm(output): 1.6484, norm(x): 0.2854, norm(y): 0.9758, norm:0.8323, tok/sec: 124502.35, flops:96.96, batch-reuse:1
@ 2748 train 4.7407 , allloss: 4.7414, dt: 1047.57ms, fracRes: 0.7604, norm(attn): 0.1719, norm(output): 1.6797, norm(x): 0.2955, norm(y): 0.9758, norm:0.7225, tok/sec: 125120.30, flops:97.44, batch-reuse:1
@ 2749 train 4.6722 , allloss: 4.6730, dt: 1057.13ms, fracRes: 0.7618, norm(attn): 0.1719, norm(output): 1.6719, norm(x): 0.2939, norm(y): 0.9759, norm:0.7188, tok/sec: 123988.78, flops:96.56, batch-reuse:1
@ 2750 train 4.7111 , allloss: 4.7122, dt: 1066.97ms, fracRes: 0.7680, norm(attn): 0.1719, norm(output): 1.6406, norm(x): 0.2824, norm(y): 0.9756, norm:0.7711, tok/sec: 122844.53, flops:95.67, batch-reuse:1
@ 2751 train 4.7495 , allloss: 4.7502, dt: 1068.18ms, fracRes: 0.7642, norm(attn): 0.1719, norm(output): 1.6641, norm(x): 0.2892, norm(y): 0.9758, norm:0.7841, tok/sec: 122706.15, flops:95.56, batch-reuse:1
@ 2752 train 4.6842 , allloss: 4.6850, dt: 1063.21ms, fracRes: 0.7641, norm(attn): 0.1719, norm(output): 1.6797, norm(x): 0.2897, norm(y): 0.9758, norm:0.6804, tok/sec: 123279.09, flops:96.01, batch-reuse:1
@ 2753 train 4.7326 , allloss: 4.7333, dt: 1054.02ms, fracRes: 0.7644, norm(attn): 0.1709, norm(output): 1.6797, norm(x): 0.2895, norm(y): 0.9756, norm:0.6373, tok/sec: 124354.92, flops:96.85, batch-reuse:1
@ 2754 train 4.6912 , allloss: 4.6920, dt: 1066.53ms, fracRes: 0.7655, norm(attn): 0.1709, norm(output): 1.6484, norm(x): 0.2868, norm(y): 0.9757, norm:0.6983, tok/sec: 122896.19, flops:95.71, batch-reuse:1
@ 2755 train 4.7008 , allloss: 4.7015, dt: 1061.97ms, fracRes: 0.7646, norm(attn): 0.1699, norm(output): 1.6484, norm(x): 0.2864, norm(y): 0.9756, norm:0.7070, tok/sec: 123423.09, flops:96.12, batch-reuse:1
@ 2756 train 4.6353 , allloss: 4.6360, dt: 1060.87ms, fracRes: 0.7653, norm(attn): 0.1719, norm(output): 1.6484, norm(x): 0.2851, norm(y): 0.9757, norm:0.6255, tok/sec: 123551.88, flops:96.22, batch-reuse:1
@ 2757 train 4.7056 , allloss: 4.7064, dt: 1063.09ms, fracRes: 0.7635, norm(attn): 0.1719, norm(output): 1.6641, norm(x): 0.2902, norm(y): 0.9755, norm:0.6036, tok/sec: 123292.91, flops:96.02, batch-reuse:1
@ 2758 train 4.6882 , allloss: 4.6890, dt: 1048.50ms, fracRes: 0.7625, norm(attn): 0.1709, norm(output): 1.6484, norm(x): 0.2901, norm(y): 0.9756, norm:0.6522, tok/sec: 125009.05, flops:97.36, batch-reuse:1
@ 2759 train 4.6806 , allloss: 4.6813, dt: 1059.43ms, fracRes: 0.7641, norm(attn): 0.1709, norm(output): 1.6562, norm(x): 0.2884, norm(y): 0.9756, norm:0.6420, tok/sec: 123719.21, flops:96.35, batch-reuse:1
@ 2760 train 4.5857 , allloss: 4.5864, dt: 1044.62ms, fracRes: 0.7636, norm(attn): 0.1709, norm(output): 1.6484, norm(x): 0.2890, norm(y): 0.9756, norm:0.6430, tok/sec: 125473.55, flops:97.72, batch-reuse:1
@ 2761 train 4.7406 , allloss: 4.7414, dt: 1053.42ms, fracRes: 0.7630, norm(attn): 0.1709, norm(output): 1.6719, norm(x): 0.2913, norm(y): 0.9755, norm:0.6698, tok/sec: 124424.63, flops:96.90, batch-reuse:1
@ 2762 train 4.7211 , allloss: 4.7217, dt: 1054.28ms, fracRes: 0.7644, norm(attn): 0.1699, norm(output): 1.6562, norm(x): 0.2905, norm(y): 0.9754, norm:0.6690, tok/sec: 124324.07, flops:96.82, batch-reuse:1
@ 2763 train 4.7154 , allloss: 4.7161, dt: 1051.09ms, fracRes: 0.7681, norm(attn): 0.1680, norm(output): 1.6406, norm(x): 0.2817, norm(y): 0.9752, norm:0.5436, tok/sec: 124700.49, flops:97.12, batch-reuse:1
@ 2764 train 4.6533 , allloss: 4.6539, dt: 1063.06ms, fracRes: 0.7637, norm(attn): 0.1699, norm(output): 1.6641, norm(x): 0.2923, norm(y): 0.9753, norm:0.6303, tok/sec: 123297.33, flops:96.02, batch-reuse:1
@ 2765 train 4.7366 , allloss: 4.7373, dt: 1065.17ms, fracRes: 0.7644, norm(attn): 0.1699, norm(output): 1.6484, norm(x): 0.2874, norm(y): 0.9753, norm:0.7894, tok/sec: 123053.15, flops:95.83, batch-reuse:1
@ 2766 train 4.7155 , allloss: 4.7163, dt: 1059.62ms, fracRes: 0.7626, norm(attn): 0.1709, norm(output): 1.6562, norm(x): 0.2907, norm(y): 0.9752, norm:1.0335, tok/sec: 123697.55, flops:96.34, batch-reuse:1
@ 2767 train 4.6873 , allloss: 4.6880, dt: 1051.86ms, fracRes: 0.7628, norm(attn): 0.1719, norm(output): 1.6562, norm(x): 0.2922, norm(y): 0.9753, norm:0.7937, tok/sec: 124610.26, flops:97.05, batch-reuse:1
@ 2768 train 4.6823 , allloss: 4.6831, dt: 1041.28ms, fracRes: 0.7645, norm(attn): 0.1699, norm(output): 1.6484, norm(x): 0.2901, norm(y): 0.9754, norm:0.7348, tok/sec: 125876.39, flops:98.03, batch-reuse:1
@ 2769 train 4.7091 , allloss: 4.7101, dt: 1051.81ms, fracRes: 0.7665, norm(attn): 0.1689, norm(output): 1.6406, norm(x): 0.2861, norm(y): 0.9752, norm:0.6809, tok/sec: 124615.41, flops:97.05, batch-reuse:1
@ 2770 train 4.6644 , allloss: 4.6654, dt: 1046.69ms, fracRes: 0.7640, norm(attn): 0.1699, norm(output): 1.6562, norm(x): 0.2929, norm(y): 0.9752, norm:0.5801, tok/sec: 125225.06, flops:97.53, batch-reuse:1
@ 2771 train 4.7980 , allloss: 4.7990, dt: 1048.68ms, fracRes: 0.7644, norm(attn): 0.1689, norm(output): 1.6562, norm(x): 0.2889, norm(y): 0.9750, norm:0.7503, tok/sec: 124987.42, flops:97.34, batch-reuse:1
@ 2772 train 4.5943 , allloss: 4.5951, dt: 1040.97ms, fracRes: 0.7616, norm(attn): 0.1709, norm(output): 1.6641, norm(x): 0.2936, norm(y): 0.9753, norm:0.6685, tok/sec: 125913.64, flops:98.06, batch-reuse:1
@ 2773 train 4.6683 , allloss: 4.6691, dt: 1050.56ms, fracRes: 0.7625, norm(attn): 0.1709, norm(output): 1.6641, norm(x): 0.2921, norm(y): 0.9752, norm:0.7147, tok/sec: 124764.19, flops:97.17, batch-reuse:1
@ 2774 train 4.6111 , allloss: 4.6121, dt: 1052.96ms, fracRes: 0.7644, norm(attn): 0.1709, norm(output): 1.6562, norm(x): 0.2885, norm(y): 0.9751, norm:0.7640, tok/sec: 124479.15, flops:96.94, batch-reuse:1
@ 2775 train 4.6911 , allloss: 4.6918, dt: 1054.62ms, fracRes: 0.7633, norm(attn): 0.1709, norm(output): 1.6484, norm(x): 0.2919, norm(y): 0.9751, norm:0.9052, tok/sec: 124283.96, flops:96.79, batch-reuse:1
@ 2776 train 4.8325 , allloss: 4.8336, dt: 1050.62ms, fracRes: 0.7672, norm(attn): 0.1660, norm(output): 1.6562, norm(x): 0.2836, norm(y): 0.9749, norm:0.8230, tok/sec: 124757.14, flops:97.16, batch-reuse:1
@ 2777 train 4.6887 , allloss: 4.6897, dt: 1051.57ms, fracRes: 0.7645, norm(attn): 0.1699, norm(output): 1.6875, norm(x): 0.2905, norm(y): 0.9748, norm:0.6967, tok/sec: 124643.83, flops:97.07, batch-reuse:1
@ 2778 train 4.8036 , allloss: 4.8046, dt: 1065.24ms, fracRes: 0.7663, norm(attn): 0.1699, norm(output): 1.6719, norm(x): 0.2863, norm(y): 0.9748, norm:0.6416, tok/sec: 123044.00, flops:95.83, batch-reuse:1
@ 2779 train 4.6554 , allloss: 4.6562, dt: 1062.60ms, fracRes: 0.7648, norm(attn): 0.1709, norm(output): 1.6484, norm(x): 0.2910, norm(y): 0.9749, norm:0.6795, tok/sec: 123349.98, flops:96.07, batch-reuse:1
@ 2780 train 4.5482 , allloss: 4.5490, dt: 1060.31ms, fracRes: 0.7623, norm(attn): 0.1709, norm(output): 1.6641, norm(x): 0.2954, norm(y): 0.9751, norm:0.7100, tok/sec: 123616.91, flops:96.27, batch-reuse:1
@ 2781 train 4.5059 , allloss: 4.5067, dt: 1063.72ms, fracRes: 0.7612, norm(attn): 0.1719, norm(output): 1.6797, norm(x): 0.2971, norm(y): 0.9752, norm:0.6624, tok/sec: 123220.15, flops:95.96, batch-reuse:1
@ 2782 train 4.7129 , allloss: 4.7138, dt: 1043.05ms, fracRes: 0.7661, norm(attn): 0.1689, norm(output): 1.6719, norm(x): 0.2869, norm(y): 0.9748, norm:0.7401, tok/sec: 125662.29, flops:97.87, batch-reuse:1
@ 2783 train 4.6462 , allloss: 4.6471, dt: 1051.69ms, fracRes: 0.7613, norm(attn): 0.1709, norm(output): 1.7188, norm(x): 0.2973, norm(y): 0.9750, norm:0.6667, tok/sec: 124629.64, flops:97.06, batch-reuse:1
@ 2784 train 4.7180 , allloss: 4.7188, dt: 1051.56ms, fracRes: 0.7650, norm(attn): 0.1680, norm(output): 1.7031, norm(x): 0.2896, norm(y): 0.9748, norm:0.6753, tok/sec: 124645.55, flops:97.07, batch-reuse:1
@ 2785 train 4.8106 , allloss: 4.8116, dt: 1044.07ms, fracRes: 0.7650, norm(attn): 0.1680, norm(output): 1.7031, norm(x): 0.2905, norm(y): 0.9747, norm:0.7061, tok/sec: 125539.65, flops:97.77, batch-reuse:1
@ 2786 train 4.7356 , allloss: 4.7365, dt: 1044.46ms, fracRes: 0.7653, norm(attn): 0.1699, norm(output): 1.6875, norm(x): 0.2902, norm(y): 0.9748, norm:0.6820, tok/sec: 125492.48, flops:97.73, batch-reuse:1
@ 2787 train 4.8360 , allloss: 4.8369, dt: 1054.43ms, fracRes: 0.7651, norm(attn): 0.1670, norm(output): 1.6953, norm(x): 0.2887, norm(y): 0.9748, norm:0.7486, tok/sec: 124305.63, flops:96.81, batch-reuse:1
@ 2788 train 4.8394 , allloss: 4.8402, dt: 1045.25ms, fracRes: 0.7626, norm(attn): 0.1689, norm(output): 1.7109, norm(x): 0.2951, norm(y): 0.9747, norm:0.8275, tok/sec: 125398.10, flops:97.66, batch-reuse:1
@ 2789 train 4.8305 , allloss: 4.8312, dt: 1054.09ms, fracRes: 0.7645, norm(attn): 0.1680, norm(output): 1.7188, norm(x): 0.2931, norm(y): 0.9747, norm:0.7345, tok/sec: 124346.51, flops:96.84, batch-reuse:1
@ 2790 train 4.9319 , allloss: 4.9329, dt: 1061.00ms, fracRes: 0.7699, norm(attn): 0.1670, norm(output): 1.6484, norm(x): 0.2794, norm(y): 0.9744, norm:0.7037, tok/sec: 123536.36, flops:96.21, batch-reuse:1
@ 2791 train 4.7930 , allloss: 4.7939, dt: 1057.10ms, fracRes: 0.7650, norm(attn): 0.1680, norm(output): 1.6953, norm(x): 0.2889, norm(y): 0.9746, norm:0.7508, tok/sec: 123991.60, flops:96.57, batch-reuse:1
@ 2792 train 5.5157 , allloss: 5.5169, dt: 1048.22ms, fracRes: 0.7743, norm(attn): 0.1611, norm(output): 1.6562, norm(x): 0.2670, norm(y): 0.9740, norm:0.9440, tok/sec: 125042.72, flops:97.38, batch-reuse:1
@ 2793 train 4.9069 , allloss: 4.9078, dt: 1054.18ms, fracRes: 0.7637, norm(attn): 0.1699, norm(output): 1.7031, norm(x): 0.2912, norm(y): 0.9744, norm:0.9600, tok/sec: 124335.91, flops:96.83, batch-reuse:1
@ 2794 train 4.7840 , allloss: 4.7848, dt: 1053.45ms, fracRes: 0.7639, norm(attn): 0.1699, norm(output): 1.6875, norm(x): 0.2910, norm(y): 0.9746, norm:0.6557, tok/sec: 124421.56, flops:96.90, batch-reuse:1
@ 2795 train 4.7938 , allloss: 4.7948, dt: 1066.01ms, fracRes: 0.7646, norm(attn): 0.1709, norm(output): 1.6875, norm(x): 0.2908, norm(y): 0.9745, norm:0.7126, tok/sec: 122956.24, flops:95.76, batch-reuse:1
@ 2796 train 4.8977 , allloss: 4.8986, dt: 1065.26ms, fracRes: 0.7651, norm(attn): 0.1699, norm(output): 1.7188, norm(x): 0.2912, norm(y): 0.9744, norm:0.7604, tok/sec: 123042.30, flops:95.83, batch-reuse:1
@ 2797 train 4.8281 , allloss: 4.8288, dt: 1060.53ms, fracRes: 0.7642, norm(attn): 0.1699, norm(output): 1.6875, norm(x): 0.2929, norm(y): 0.9745, norm:0.7773, tok/sec: 123590.68, flops:96.25, batch-reuse:1
@ 2798 train 4.8258 , allloss: 4.8267, dt: 1046.56ms, fracRes: 0.7650, norm(attn): 0.1699, norm(output): 1.6875, norm(x): 0.2927, norm(y): 0.9745, norm:0.7541, tok/sec: 125240.33, flops:97.54, batch-reuse:1
@ 2799 train 4.8640 , allloss: 4.8648, dt: 1050.52ms, fracRes: 0.7658, norm(attn): 0.1699, norm(output): 1.7188, norm(x): 0.2911, norm(y): 0.9742, norm:0.8859, tok/sec: 124768.66, flops:97.17, batch-reuse:1
@ 2800 train 5.0304 , allloss: 5.0316, dt: 1063.06ms, fracRes: 0.7715, norm(attn): 0.1660, norm(output): 1.6797, norm(x): 0.2739, norm(y): 0.9741, norm:0.7663, tok/sec: 123297.25, flops:96.02, batch-reuse:1
@ 2801 train 4.8589 , allloss: 4.8603, dt: 1047.75ms, fracRes: 0.7682, norm(attn): 0.1689, norm(output): 1.6953, norm(x): 0.2832, norm(y): 0.9741, norm:0.9598, tok/sec: 125097.98, flops:97.43, batch-reuse:1
@ 2802 train 4.7929 , allloss: 4.7937, dt: 1052.96ms, fracRes: 0.7620, norm(attn): 0.1709, norm(output): 1.7188, norm(x): 0.2952, norm(y): 0.9744, norm:0.9213, tok/sec: 124479.54, flops:96.95, batch-reuse:1
@ 2803 train 4.7788 , allloss: 4.7797, dt: 1054.26ms, fracRes: 0.7636, norm(attn): 0.1719, norm(output): 1.7031, norm(x): 0.2924, norm(y): 0.9744, norm:0.6998, tok/sec: 124326.54, flops:96.83, batch-reuse:1
@ 2804 train 4.9187 , allloss: 4.9198, dt: 1052.36ms, fracRes: 0.7693, norm(attn): 0.1680, norm(output): 1.6875, norm(x): 0.2808, norm(y): 0.9741, norm:0.7378, tok/sec: 124550.89, flops:97.00, batch-reuse:1
@ 2805 train 4.8135 , allloss: 4.8147, dt: 1055.75ms, fracRes: 0.7653, norm(attn): 0.1709, norm(output): 1.7109, norm(x): 0.2917, norm(y): 0.9742, norm:1.2664, tok/sec: 124151.01, flops:96.69, batch-reuse:1
@ 2806 train 4.7620 , allloss: 4.7630, dt: 1064.00ms, fracRes: 0.7641, norm(attn): 0.1719, norm(output): 1.7188, norm(x): 0.2935, norm(y): 0.9743, norm:0.8821, tok/sec: 123188.40, flops:95.94, batch-reuse:1
@ 2807 train 5.0237 , allloss: 5.0247, dt: 1059.91ms, fracRes: 0.7653, norm(attn): 0.1699, norm(output): 1.7109, norm(x): 0.2925, norm(y): 0.9742, norm:0.7078, tok/sec: 123663.49, flops:96.31, batch-reuse:1
@ 2808 train 4.7900 , allloss: 4.7910, dt: 1067.21ms, fracRes: 0.7662, norm(attn): 0.1709, norm(output): 1.7031, norm(x): 0.2894, norm(y): 0.9741, norm:0.7052, tok/sec: 122817.39, flops:95.65, batch-reuse:1
@ 2809 train 4.7803 , allloss: 4.7812, dt: 1051.31ms, fracRes: 0.7651, norm(attn): 0.1699, norm(output): 1.7188, norm(x): 0.2927, norm(y): 0.9741, norm:0.7037, tok/sec: 124675.09, flops:97.10, batch-reuse:1
@ 2810 train 4.7354 , allloss: 4.7363, dt: 1049.10ms, fracRes: 0.7648, norm(attn): 0.1738, norm(output): 1.7266, norm(x): 0.2944, norm(y): 0.9741, norm:0.5900, tok/sec: 124937.04, flops:97.30, batch-reuse:1
@ 2811 train 4.8189 , allloss: 4.8198, dt: 1043.03ms, fracRes: 0.7659, norm(attn): 0.1719, norm(output): 1.7188, norm(x): 0.2910, norm(y): 0.9740, norm:0.6105, tok/sec: 125665.16, flops:97.87, batch-reuse:1
@ 2812 train 4.8448 , allloss: 4.8457, dt: 1045.04ms, fracRes: 0.7653, norm(attn): 0.1709, norm(output): 1.7266, norm(x): 0.2921, norm(y): 0.9740, norm:0.6023, tok/sec: 125423.45, flops:97.68, batch-reuse:1
@ 2813 train 4.9267 , allloss: 4.9277, dt: 1058.31ms, fracRes: 0.7679, norm(attn): 0.1699, norm(output): 1.7031, norm(x): 0.2872, norm(y): 0.9738, norm:0.7212, tok/sec: 123850.79, flops:96.46, batch-reuse:1
@ 2814 train 4.8503 , allloss: 4.8512, dt: 1045.87ms, fracRes: 0.7648, norm(attn): 0.1709, norm(output): 1.7031, norm(x): 0.2904, norm(y): 0.9739, norm:0.6789, tok/sec: 125323.95, flops:97.60, batch-reuse:1
@ 2815 train 4.9078 , allloss: 4.9087, dt: 1052.38ms, fracRes: 0.7626, norm(attn): 0.1719, norm(output): 1.7109, norm(x): 0.2933, norm(y): 0.9737, norm:0.8139, tok/sec: 124548.52, flops:97.00, batch-reuse:1
@ 2816 train 4.8012 , allloss: 4.8022, dt: 1045.03ms, fracRes: 0.7651, norm(attn): 0.1719, norm(output): 1.7188, norm(x): 0.2911, norm(y): 0.9738, norm:0.7625, tok/sec: 125424.25, flops:97.68, batch-reuse:1
@ 2817 train 4.8613 , allloss: 4.8622, dt: 1056.53ms, fracRes: 0.7645, norm(attn): 0.1709, norm(output): 1.7188, norm(x): 0.2932, norm(y): 0.9738, norm:0.7589, tok/sec: 124059.51, flops:96.62, batch-reuse:1
@ 2818 train 4.8539 , allloss: 4.8549, dt: 1059.19ms, fracRes: 0.7650, norm(attn): 0.1719, norm(output): 1.7109, norm(x): 0.2939, norm(y): 0.9737, norm:0.6312, tok/sec: 123747.28, flops:96.37, batch-reuse:1
@ 2819 train 4.8347 , allloss: 4.8357, dt: 1042.11ms, fracRes: 0.7637, norm(attn): 0.1719, norm(output): 1.7109, norm(x): 0.2963, norm(y): 0.9738, norm:0.6814, tok/sec: 125775.80, flops:97.95, batch-reuse:1
@ 2820 train 4.8157 , allloss: 4.8165, dt: 1050.43ms, fracRes: 0.7639, norm(attn): 0.1689, norm(output): 1.7188, norm(x): 0.2939, norm(y): 0.9738, norm:0.7048, tok/sec: 124779.20, flops:97.18, batch-reuse:1
@ 2821 train 4.7902 , allloss: 4.7911, dt: 1063.39ms, fracRes: 0.7643, norm(attn): 0.1699, norm(output): 1.7188, norm(x): 0.2948, norm(y): 0.9737, norm:0.6836, tok/sec: 123258.88, flops:95.99, batch-reuse:1
@ 2822 train 4.7335 , allloss: 4.7344, dt: 1060.56ms, fracRes: 0.7644, norm(attn): 0.1709, norm(output): 1.7188, norm(x): 0.2951, norm(y): 0.9737, norm:0.6179, tok/sec: 123587.32, flops:96.25, batch-reuse:1
@ 2823 train 4.7948 , allloss: 4.7959, dt: 1054.33ms, fracRes: 0.7630, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.2997, norm(y): 0.9736, norm:0.6563, tok/sec: 124317.38, flops:96.82, batch-reuse:1
@ 2824 train 4.7635 , allloss: 4.7644, dt: 1064.08ms, fracRes: 0.7650, norm(attn): 0.1719, norm(output): 1.7109, norm(x): 0.2933, norm(y): 0.9736, norm:0.6242, tok/sec: 123178.46, flops:95.93, batch-reuse:1
@ 2825 train 4.7764 , allloss: 4.7772, dt: 1048.90ms, fracRes: 0.7633, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.2974, norm(y): 0.9736, norm:0.6969, tok/sec: 124961.51, flops:97.32, batch-reuse:1
@ 2826 train 4.8311 , allloss: 4.8321, dt: 1056.82ms, fracRes: 0.7653, norm(attn): 0.1719, norm(output): 1.7109, norm(x): 0.2934, norm(y): 0.9734, norm:0.7143, tok/sec: 124024.86, flops:96.59, batch-reuse:1
@ 2827 train 4.8670 , allloss: 4.8680, dt: 1055.70ms, fracRes: 0.7660, norm(attn): 0.1699, norm(output): 1.7188, norm(x): 0.2931, norm(y): 0.9734, norm:0.6802, tok/sec: 124156.11, flops:96.69, batch-reuse:1
@ 2828 train 4.8530 , allloss: 4.8541, dt: 1068.84ms, fracRes: 0.7679, norm(attn): 0.1699, norm(output): 1.6797, norm(x): 0.2884, norm(y): 0.9734, norm:0.6541, tok/sec: 122630.11, flops:95.50, batch-reuse:1
@ 2829 train 4.7912 , allloss: 4.7921, dt: 1060.47ms, fracRes: 0.7628, norm(attn): 0.1709, norm(output): 1.7266, norm(x): 0.2980, norm(y): 0.9734, norm:0.8114, tok/sec: 123597.49, flops:96.26, batch-reuse:1
@ 2830 train 4.9460 , allloss: 4.9470, dt: 1059.51ms, fracRes: 0.7672, norm(attn): 0.1699, norm(output): 1.6953, norm(x): 0.2880, norm(y): 0.9732, norm:0.8494, tok/sec: 123710.13, flops:96.35, batch-reuse:1
@ 2831 train 4.8574 , allloss: 4.8582, dt: 1047.19ms, fracRes: 0.7640, norm(attn): 0.1699, norm(output): 1.7031, norm(x): 0.2955, norm(y): 0.9733, norm:0.6276, tok/sec: 125165.76, flops:97.48, batch-reuse:1
@ 2832 train 4.7430 , allloss: 4.7437, dt: 1050.39ms, fracRes: 0.7637, norm(attn): 0.1709, norm(output): 1.7109, norm(x): 0.2962, norm(y): 0.9736, norm:0.7198, tok/sec: 124783.65, flops:97.18, batch-reuse:1
@ 2833 train 4.8118 , allloss: 4.8126, dt: 1050.21ms, fracRes: 0.7637, norm(attn): 0.1719, norm(output): 1.7188, norm(x): 0.2967, norm(y): 0.9735, norm:0.6264, tok/sec: 124805.57, flops:97.20, batch-reuse:1
@ 2834 train 4.8262 , allloss: 4.8270, dt: 1052.07ms, fracRes: 0.7630, norm(attn): 0.1729, norm(output): 1.7266, norm(x): 0.2985, norm(y): 0.9734, norm:0.6091, tok/sec: 124584.71, flops:97.03, batch-reuse:1
@ 2835 train 4.8942 , allloss: 4.8950, dt: 1044.58ms, fracRes: 0.7670, norm(attn): 0.1680, norm(output): 1.6875, norm(x): 0.2916, norm(y): 0.9733, norm:0.7271, tok/sec: 125478.16, flops:97.72, batch-reuse:1
@ 2836 train 4.8010 , allloss: 4.8017, dt: 1042.96ms, fracRes: 0.7630, norm(attn): 0.1699, norm(output): 1.7266, norm(x): 0.3001, norm(y): 0.9732, norm:0.7140, tok/sec: 125673.21, flops:97.87, batch-reuse:1
@ 2837 train 4.8702 , allloss: 4.8711, dt: 1053.54ms, fracRes: 0.7658, norm(attn): 0.1680, norm(output): 1.7188, norm(x): 0.2935, norm(y): 0.9732, norm:0.6443, tok/sec: 124410.78, flops:96.89, batch-reuse:1
@ 2838 train 4.9302 , allloss: 4.9311, dt: 1061.04ms, fracRes: 0.7637, norm(attn): 0.1719, norm(output): 1.7266, norm(x): 0.2971, norm(y): 0.9732, norm:0.6512, tok/sec: 123531.28, flops:96.21, batch-reuse:1
@ 2839 train 4.7797 , allloss: 4.7805, dt: 1047.01ms, fracRes: 0.7649, norm(attn): 0.1719, norm(output): 1.7109, norm(x): 0.2938, norm(y): 0.9734, norm:0.5788, tok/sec: 125187.11, flops:97.50, batch-reuse:1
@ 2840 train 4.8098 , allloss: 4.8107, dt: 1058.25ms, fracRes: 0.7648, norm(attn): 0.1709, norm(output): 1.6875, norm(x): 0.2951, norm(y): 0.9732, norm:0.6640, tok/sec: 123857.68, flops:96.46, batch-reuse:1
@ 2841 train 4.7964 , allloss: 4.7972, dt: 1057.82ms, fracRes: 0.7632, norm(attn): 0.1699, norm(output): 1.7188, norm(x): 0.2979, norm(y): 0.9732, norm:0.6723, tok/sec: 123907.26, flops:96.50, batch-reuse:1
@ 2842 train 4.8056 , allloss: 4.8064, dt: 1046.30ms, fracRes: 0.7644, norm(attn): 0.1709, norm(output): 1.7266, norm(x): 0.2976, norm(y): 0.9732, norm:0.6109, tok/sec: 125272.09, flops:97.56, batch-reuse:1
@ 2843 train 4.7484 , allloss: 4.7491, dt: 1055.22ms, fracRes: 0.7638, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.2984, norm(y): 0.9733, norm:0.5704, tok/sec: 124212.52, flops:96.74, batch-reuse:1
@ 2844 train 4.7434 , allloss: 4.7442, dt: 1045.70ms, fracRes: 0.7631, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3008, norm(y): 0.9732, norm:0.6455, tok/sec: 125343.44, flops:97.62, batch-reuse:1
@ 2845 train 4.7859 , allloss: 4.7867, dt: 1057.11ms, fracRes: 0.7644, norm(attn): 0.1709, norm(output): 1.7266, norm(x): 0.2985, norm(y): 0.9733, norm:0.5562, tok/sec: 123990.70, flops:96.56, batch-reuse:1
@ 2846 train 4.8229 , allloss: 4.8237, dt: 1054.29ms, fracRes: 0.7617, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3038, norm(y): 0.9733, norm:0.7198, tok/sec: 124322.61, flops:96.82, batch-reuse:1
@ 2847 train 4.8353 , allloss: 4.8362, dt: 1060.34ms, fracRes: 0.7635, norm(attn): 0.1699, norm(output): 1.7188, norm(x): 0.2983, norm(y): 0.9731, norm:0.6976, tok/sec: 123613.30, flops:96.27, batch-reuse:1
@ 2848 train 4.7802 , allloss: 4.7809, dt: 1059.65ms, fracRes: 0.7602, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.3047, norm(y): 0.9731, norm:0.5908, tok/sec: 123693.15, flops:96.33, batch-reuse:1
@ 2849 train 4.7556 , allloss: 4.7565, dt: 1043.77ms, fracRes: 0.7625, norm(attn): 0.1709, norm(output): 1.7422, norm(x): 0.3018, norm(y): 0.9730, norm:0.6224, tok/sec: 125575.43, flops:97.80, batch-reuse:1
@ 2850 train 4.7168 , allloss: 4.7176, dt: 1045.19ms, fracRes: 0.7647, norm(attn): 0.1719, norm(output): 1.7266, norm(x): 0.2984, norm(y): 0.9732, norm:0.5734, tok/sec: 125405.17, flops:97.67, batch-reuse:1
@ 2851 train 4.7160 , allloss: 4.7170, dt: 1051.22ms, fracRes: 0.7644, norm(attn): 0.1719, norm(output): 1.7266, norm(x): 0.2996, norm(y): 0.9730, norm:0.6104, tok/sec: 124685.64, flops:97.11, batch-reuse:1
@ 2852 train 4.7016 , allloss: 4.7024, dt: 1038.90ms, fracRes: 0.7630, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.3005, norm(y): 0.9732, norm:0.6725, tok/sec: 126164.80, flops:98.26, batch-reuse:1
@ 2853 train 4.8167 , allloss: 4.8178, dt: 1054.42ms, fracRes: 0.7658, norm(attn): 0.1719, norm(output): 1.7266, norm(x): 0.2954, norm(y): 0.9730, norm:0.7441, tok/sec: 124307.29, flops:96.81, batch-reuse:1
@ 2854 train 4.7789 , allloss: 4.7804, dt: 1050.62ms, fracRes: 0.7681, norm(attn): 0.1719, norm(output): 1.7188, norm(x): 0.2909, norm(y): 0.9727, norm:0.8961, tok/sec: 124756.89, flops:97.16, batch-reuse:1
@ 2855 train 4.7479 , allloss: 4.7497, dt: 1045.69ms, fracRes: 0.7640, norm(attn): 0.1719, norm(output): 1.7266, norm(x): 0.2998, norm(y): 0.9730, norm:0.7467, tok/sec: 125344.64, flops:97.62, batch-reuse:1
@ 2856 train 4.7729 , allloss: 4.7737, dt: 1064.61ms, fracRes: 0.7624, norm(attn): 0.1719, norm(output): 1.7266, norm(x): 0.3031, norm(y): 0.9730, norm:0.9073, tok/sec: 123117.22, flops:95.88, batch-reuse:1
@ 2857 train 4.7100 , allloss: 4.7109, dt: 1052.54ms, fracRes: 0.7612, norm(attn): 0.1719, norm(output): 1.7188, norm(x): 0.3043, norm(y): 0.9731, norm:0.8588, tok/sec: 124529.65, flops:96.98, batch-reuse:1
@ 2858 train 4.7017 , allloss: 4.7026, dt: 1048.71ms, fracRes: 0.7627, norm(attn): 0.1719, norm(output): 1.7188, norm(x): 0.3003, norm(y): 0.9730, norm:0.7185, tok/sec: 124983.53, flops:97.34, batch-reuse:1
@ 2859 train 4.6807 , allloss: 4.6816, dt: 1041.96ms, fracRes: 0.7611, norm(attn): 0.1738, norm(output): 1.7422, norm(x): 0.3065, norm(y): 0.9729, norm:1.1463, tok/sec: 125793.58, flops:97.97, batch-reuse:1
@ 2860 train 4.8583 , allloss: 4.8592, dt: 1061.28ms, fracRes: 0.7632, norm(attn): 0.1729, norm(output): 1.7344, norm(x): 0.3014, norm(y): 0.9728, norm:1.0038, tok/sec: 123503.75, flops:96.19, batch-reuse:1
@ 2861 train 4.8449 , allloss: 4.8457, dt: 1046.24ms, fracRes: 0.7600, norm(attn): 0.1719, norm(output): 1.7734, norm(x): 0.3083, norm(y): 0.9729, norm:0.9461, tok/sec: 125279.26, flops:97.57, batch-reuse:1
@ 2862 train 4.8529 , allloss: 4.8539, dt: 1045.80ms, fracRes: 0.7642, norm(attn): 0.1709, norm(output): 1.7188, norm(x): 0.2984, norm(y): 0.9727, norm:1.4507, tok/sec: 125331.86, flops:97.61, batch-reuse:1
@ 2863 train 4.8643 , allloss: 4.8654, dt: 1045.47ms, fracRes: 0.7626, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3035, norm(y): 0.9728, norm:1.1038, tok/sec: 125371.11, flops:97.64, batch-reuse:1
@ 2864 train 4.6961 , allloss: 4.6970, dt: 1052.00ms, fracRes: 0.7639, norm(attn): 0.1729, norm(output): 1.7344, norm(x): 0.2998, norm(y): 0.9729, norm:0.8190, tok/sec: 124593.15, flops:97.03, batch-reuse:1
@ 2865 train 4.7801 , allloss: 4.7811, dt: 1050.85ms, fracRes: 0.7646, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.3005, norm(y): 0.9726, norm:0.9020, tok/sec: 124729.18, flops:97.14, batch-reuse:1
@ 2866 train 4.8429 , allloss: 4.8438, dt: 1052.23ms, fracRes: 0.7631, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.3006, norm(y): 0.9728, norm:0.6871, tok/sec: 124565.46, flops:97.01, batch-reuse:1
@ 2867 train 4.7447 , allloss: 4.7455, dt: 1040.32ms, fracRes: 0.7615, norm(attn): 0.1729, norm(output): 1.7578, norm(x): 0.3056, norm(y): 0.9727, norm:0.8805, tok/sec: 125991.98, flops:98.12, batch-reuse:1
@ 2868 train 4.8475 , allloss: 4.8482, dt: 1043.94ms, fracRes: 0.7636, norm(attn): 0.1738, norm(output): 1.7344, norm(x): 0.3029, norm(y): 0.9728, norm:0.8623, tok/sec: 125555.16, flops:97.78, batch-reuse:1
@ 2869 train 4.7914 , allloss: 4.7922, dt: 1048.96ms, fracRes: 0.7656, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.2990, norm(y): 0.9725, norm:0.6501, tok/sec: 124954.64, flops:97.32, batch-reuse:1
@ 2870 train 4.8257 , allloss: 4.8266, dt: 1065.36ms, fracRes: 0.7644, norm(attn): 0.1709, norm(output): 1.7422, norm(x): 0.3012, norm(y): 0.9726, norm:0.6679, tok/sec: 123030.54, flops:95.82, batch-reuse:1
@ 2871 train 4.7404 , allloss: 4.7412, dt: 1059.84ms, fracRes: 0.7661, norm(attn): 0.1709, norm(output): 1.7344, norm(x): 0.2949, norm(y): 0.9726, norm:0.6377, tok/sec: 123671.89, flops:96.32, batch-reuse:1
@ 2872 train 4.8255 , allloss: 4.8263, dt: 1048.34ms, fracRes: 0.7633, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.3006, norm(y): 0.9725, norm:0.6398, tok/sec: 125028.10, flops:97.37, batch-reuse:1
@ 2873 train 4.9359 , allloss: 4.9367, dt: 1066.04ms, fracRes: 0.7656, norm(attn): 0.1709, norm(output): 1.7266, norm(x): 0.2970, norm(y): 0.9724, norm:0.8835, tok/sec: 122952.12, flops:95.76, batch-reuse:1
@ 2874 train 4.7565 , allloss: 4.7573, dt: 1041.39ms, fracRes: 0.7637, norm(attn): 0.1709, norm(output): 1.7422, norm(x): 0.3007, norm(y): 0.9725, norm:0.7867, tok/sec: 125862.01, flops:98.02, batch-reuse:1
@ 2875 train 4.8769 , allloss: 4.8778, dt: 1045.96ms, fracRes: 0.7639, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3034, norm(y): 0.9725, norm:0.6935, tok/sec: 125312.61, flops:97.59, batch-reuse:1
@ 2876 train 4.7864 , allloss: 4.7874, dt: 1050.56ms, fracRes: 0.7664, norm(attn): 0.1709, norm(output): 1.7344, norm(x): 0.2977, norm(y): 0.9724, norm:0.7932, tok/sec: 124763.65, flops:97.17, batch-reuse:1
@ 2877 train 4.8583 , allloss: 4.8592, dt: 1047.23ms, fracRes: 0.7656, norm(attn): 0.1709, norm(output): 1.7344, norm(x): 0.2977, norm(y): 0.9723, norm:0.7425, tok/sec: 125160.35, flops:97.48, batch-reuse:1
@ 2878 train 4.7743 , allloss: 4.7752, dt: 1046.88ms, fracRes: 0.7616, norm(attn): 0.1738, norm(output): 1.7500, norm(x): 0.3042, norm(y): 0.9725, norm:0.6507, tok/sec: 125202.76, flops:97.51, batch-reuse:1
@ 2879 train 4.7464 , allloss: 4.7473, dt: 1053.07ms, fracRes: 0.7634, norm(attn): 0.1729, norm(output): 1.7422, norm(x): 0.3010, norm(y): 0.9725, norm:0.6724, tok/sec: 124466.41, flops:96.93, batch-reuse:1
@ 2880 train 4.7680 , allloss: 4.7688, dt: 1047.03ms, fracRes: 0.7636, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3047, norm(y): 0.9724, norm:0.6622, tok/sec: 125184.12, flops:97.49, batch-reuse:1
@ 2881 train 4.7555 , allloss: 4.7563, dt: 1062.55ms, fracRes: 0.7634, norm(attn): 0.1709, norm(output): 1.7422, norm(x): 0.3044, norm(y): 0.9723, norm:0.6441, tok/sec: 123356.57, flops:96.07, batch-reuse:1
@ 2882 train 4.7322 , allloss: 4.7331, dt: 1048.29ms, fracRes: 0.7638, norm(attn): 0.1709, norm(output): 1.7578, norm(x): 0.3054, norm(y): 0.9722, norm:0.5859, tok/sec: 125034.02, flops:97.38, batch-reuse:1
@ 2883 train 4.7881 , allloss: 4.7890, dt: 1042.97ms, fracRes: 0.7659, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.2983, norm(y): 0.9721, norm:0.6823, tok/sec: 125672.17, flops:97.87, batch-reuse:1
@ 2884 train 4.6418 , allloss: 4.6426, dt: 1051.04ms, fracRes: 0.7634, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.3029, norm(y): 0.9724, norm:0.6697, tok/sec: 124707.53, flops:97.12, batch-reuse:1
@ 2885 train 4.6459 , allloss: 4.6467, dt: 1061.09ms, fracRes: 0.7629, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.3029, norm(y): 0.9723, norm:0.5896, tok/sec: 123525.34, flops:96.20, batch-reuse:1
@ 2886 train 4.6955 , allloss: 4.6962, dt: 1047.13ms, fracRes: 0.7641, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.2989, norm(y): 0.9722, norm:0.6743, tok/sec: 125172.49, flops:97.48, batch-reuse:1
@ 2887 train 4.7241 , allloss: 4.7250, dt: 1062.12ms, fracRes: 0.7648, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.2967, norm(y): 0.9721, norm:0.5965, tok/sec: 123406.55, flops:96.11, batch-reuse:1
@ 2888 train 4.6860 , allloss: 4.6867, dt: 1059.14ms, fracRes: 0.7611, norm(attn): 0.1719, norm(output): 1.7578, norm(x): 0.3059, norm(y): 0.9722, norm:0.7131, tok/sec: 123752.71, flops:96.38, batch-reuse:1
@ 2889 train 4.6756 , allloss: 4.6764, dt: 1046.82ms, fracRes: 0.7627, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3050, norm(y): 0.9721, norm:0.6321, tok/sec: 125209.69, flops:97.51, batch-reuse:1
@ 2890 train 4.7572 , allloss: 4.7580, dt: 1057.59ms, fracRes: 0.7639, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3016, norm(y): 0.9722, norm:0.5857, tok/sec: 123934.58, flops:96.52, batch-reuse:1
@ 2891 train 4.6958 , allloss: 4.6965, dt: 1060.40ms, fracRes: 0.7621, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3044, norm(y): 0.9721, norm:0.6027, tok/sec: 123606.63, flops:96.27, batch-reuse:1
@ 2892 train 4.6698 , allloss: 4.6709, dt: 1040.45ms, fracRes: 0.7630, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3044, norm(y): 0.9720, norm:0.6031, tok/sec: 125976.31, flops:98.11, batch-reuse:1
@ 2893 train 4.6513 , allloss: 4.6521, dt: 1044.36ms, fracRes: 0.7631, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.3028, norm(y): 0.9721, norm:0.4989, tok/sec: 125504.45, flops:97.74, batch-reuse:1
@ 2894 train 4.6766 , allloss: 4.6773, dt: 1050.67ms, fracRes: 0.7613, norm(attn): 0.1738, norm(output): 1.7500, norm(x): 0.3061, norm(y): 0.9721, norm:0.6562, tok/sec: 124750.91, flops:97.16, batch-reuse:1
@ 2895 train 4.7973 , allloss: 4.7982, dt: 1049.73ms, fracRes: 0.7656, norm(attn): 0.1709, norm(output): 1.7344, norm(x): 0.2974, norm(y): 0.9718, norm:0.5298, tok/sec: 124863.12, flops:97.24, batch-reuse:1
@ 2896 train 4.7870 , allloss: 4.7880, dt: 1066.68ms, fracRes: 0.7649, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.2997, norm(y): 0.9719, norm:0.5885, tok/sec: 122877.97, flops:95.70, batch-reuse:1
@ 2897 train 4.6875 , allloss: 4.6885, dt: 1054.36ms, fracRes: 0.7634, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3029, norm(y): 0.9719, norm:0.5428, tok/sec: 124313.86, flops:96.82, batch-reuse:1
@ 2898 train 4.7097 , allloss: 4.7106, dt: 1061.61ms, fracRes: 0.7636, norm(attn): 0.1709, norm(output): 1.7422, norm(x): 0.3019, norm(y): 0.9717, norm:0.5555, tok/sec: 123465.28, flops:96.16, batch-reuse:1
@ 2899 train 4.7224 , allloss: 4.7232, dt: 1046.84ms, fracRes: 0.7620, norm(attn): 0.1709, norm(output): 1.7500, norm(x): 0.3044, norm(y): 0.9718, norm:0.5443, tok/sec: 125207.75, flops:97.51, batch-reuse:1
@ 2900 train 4.7043 , allloss: 4.7052, dt: 1052.08ms, fracRes: 0.7644, norm(attn): 0.1709, norm(output): 1.7266, norm(x): 0.3004, norm(y): 0.9717, norm:0.5863, tok/sec: 124583.78, flops:97.03, batch-reuse:1
@ 2901 train 4.6572 , allloss: 4.6580, dt: 1045.56ms, fracRes: 0.7614, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3071, norm(y): 0.9719, norm:0.6893, tok/sec: 125360.21, flops:97.63, batch-reuse:1
@ 2902 train 4.7193 , allloss: 4.7201, dt: 1051.72ms, fracRes: 0.7646, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.3005, norm(y): 0.9718, norm:0.7440, tok/sec: 124626.76, flops:97.06, batch-reuse:1
@ 2903 train 4.8551 , allloss: 4.8563, dt: 1054.93ms, fracRes: 0.7662, norm(attn): 0.1689, norm(output): 1.7344, norm(x): 0.2965, norm(y): 0.9715, norm:0.8171, tok/sec: 124247.67, flops:96.76, batch-reuse:1
@ 2904 train 4.7090 , allloss: 4.7102, dt: 1053.61ms, fracRes: 0.7638, norm(attn): 0.1709, norm(output): 1.7656, norm(x): 0.3033, norm(y): 0.9714, norm:0.9769, tok/sec: 124402.36, flops:96.89, batch-reuse:1
@ 2905 train 4.9684 , allloss: 4.9695, dt: 1057.59ms, fracRes: 0.7689, norm(attn): 0.1699, norm(output): 1.7344, norm(x): 0.2913, norm(y): 0.9714, norm:0.7502, tok/sec: 123934.74, flops:96.52, batch-reuse:1
@ 2906 train 4.6748 , allloss: 4.6757, dt: 1058.84ms, fracRes: 0.7616, norm(attn): 0.1729, norm(output): 1.7422, norm(x): 0.3078, norm(y): 0.9717, norm:0.8482, tok/sec: 123787.79, flops:96.41, batch-reuse:1
@ 2907 train 4.7876 , allloss: 4.7884, dt: 1055.98ms, fracRes: 0.7625, norm(attn): 0.1709, norm(output): 1.7500, norm(x): 0.3057, norm(y): 0.9716, norm:0.9029, tok/sec: 124123.54, flops:96.67, batch-reuse:1
@ 2908 train 4.6592 , allloss: 4.6600, dt: 1042.74ms, fracRes: 0.7609, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3094, norm(y): 0.9717, norm:0.6903, tok/sec: 125699.27, flops:97.90, batch-reuse:1
@ 2909 train 4.7230 , allloss: 4.7239, dt: 1057.44ms, fracRes: 0.7657, norm(attn): 0.1709, norm(output): 1.7266, norm(x): 0.2970, norm(y): 0.9716, norm:0.8238, tok/sec: 123951.68, flops:96.53, batch-reuse:1
@ 2910 train 4.7400 , allloss: 4.7408, dt: 1056.70ms, fracRes: 0.7639, norm(attn): 0.1719, norm(output): 1.7344, norm(x): 0.3012, norm(y): 0.9716, norm:0.7599, tok/sec: 124039.33, flops:96.60, batch-reuse:1
@ 2911 train 4.7152 , allloss: 4.7161, dt: 1060.73ms, fracRes: 0.7608, norm(attn): 0.1738, norm(output): 1.7500, norm(x): 0.3079, norm(y): 0.9717, norm:0.7496, tok/sec: 123567.26, flops:96.23, batch-reuse:1
@ 2912 train 4.7642 , allloss: 4.7651, dt: 1048.52ms, fracRes: 0.7631, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3031, norm(y): 0.9715, norm:0.9845, tok/sec: 125006.98, flops:97.36, batch-reuse:1
@ 2913 train 4.6993 , allloss: 4.7000, dt: 1047.99ms, fracRes: 0.7618, norm(attn): 0.1729, norm(output): 1.7422, norm(x): 0.3060, norm(y): 0.9717, norm:0.7180, tok/sec: 125069.97, flops:97.40, batch-reuse:1
@ 2914 train 4.6406 , allloss: 4.6414, dt: 1057.32ms, fracRes: 0.7624, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.3072, norm(y): 0.9715, norm:0.6413, tok/sec: 123966.30, flops:96.55, batch-reuse:1
@ 2915 train 4.6444 , allloss: 4.6452, dt: 1059.08ms, fracRes: 0.7615, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3098, norm(y): 0.9715, norm:0.5856, tok/sec: 123759.90, flops:96.38, batch-reuse:1
@ 2916 train 4.6440 , allloss: 4.6451, dt: 1048.49ms, fracRes: 0.7677, norm(attn): 0.1729, norm(output): 1.7266, norm(x): 0.2953, norm(y): 0.9713, norm:0.7654, tok/sec: 125010.82, flops:97.36, batch-reuse:1
@ 2917 train 4.7100 , allloss: 4.7111, dt: 1051.28ms, fracRes: 0.7652, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3009, norm(y): 0.9713, norm:0.8445, tok/sec: 124678.68, flops:97.10, batch-reuse:1
@ 2918 train 4.8050 , allloss: 4.8059, dt: 1047.33ms, fracRes: 0.7638, norm(attn): 0.1709, norm(output): 1.7500, norm(x): 0.3049, norm(y): 0.9713, norm:0.7818, tok/sec: 125148.87, flops:97.47, batch-reuse:1
@ 2919 train 4.6597 , allloss: 4.6605, dt: 1049.24ms, fracRes: 0.7636, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3057, norm(y): 0.9715, norm:0.6807, tok/sec: 124921.19, flops:97.29, batch-reuse:1
@ 2920 train 4.8028 , allloss: 4.8037, dt: 1045.41ms, fracRes: 0.7630, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3055, norm(y): 0.9714, norm:0.6326, tok/sec: 125378.60, flops:97.65, batch-reuse:1
@ 2921 train 4.7049 , allloss: 4.7057, dt: 1063.01ms, fracRes: 0.7619, norm(attn): 0.1709, norm(output): 1.7656, norm(x): 0.3074, norm(y): 0.9713, norm:0.6078, tok/sec: 123302.17, flops:96.03, batch-reuse:1
@ 2922 train 4.6687 , allloss: 4.6696, dt: 1062.13ms, fracRes: 0.7625, norm(attn): 0.1709, norm(output): 1.7656, norm(x): 0.3060, norm(y): 0.9712, norm:0.6073, tok/sec: 123404.50, flops:96.11, batch-reuse:1
@ 2923 train 4.6630 , allloss: 4.6639, dt: 1053.04ms, fracRes: 0.7636, norm(attn): 0.1709, norm(output): 1.7500, norm(x): 0.3039, norm(y): 0.9712, norm:0.7581, tok/sec: 124470.53, flops:96.94, batch-reuse:1
@ 2924 train 4.7378 , allloss: 4.7386, dt: 1073.04ms, fracRes: 0.7627, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3044, norm(y): 0.9713, norm:0.7311, tok/sec: 122149.96, flops:95.13, batch-reuse:1
@ 2925 train 4.9149 , allloss: 4.9157, dt: 1057.95ms, fracRes: 0.7650, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.2977, norm(y): 0.9711, norm:0.8109, tok/sec: 123892.12, flops:96.49, batch-reuse:1
@ 2926 train 4.7130 , allloss: 4.7138, dt: 1063.29ms, fracRes: 0.7632, norm(attn): 0.1729, norm(output): 1.7578, norm(x): 0.3044, norm(y): 0.9712, norm:0.9126, tok/sec: 123270.57, flops:96.00, batch-reuse:1
@ 2927 train 4.6134 , allloss: 4.6142, dt: 1054.34ms, fracRes: 0.7644, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3018, norm(y): 0.9712, norm:0.9485, tok/sec: 124316.82, flops:96.82, batch-reuse:1
@ 2928 train 4.6820 , allloss: 4.6827, dt: 1066.80ms, fracRes: 0.7621, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3077, norm(y): 0.9712, norm:0.8069, tok/sec: 122864.66, flops:95.69, batch-reuse:1
@ 2929 train 4.6450 , allloss: 4.6457, dt: 1044.00ms, fracRes: 0.7617, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3089, norm(y): 0.9713, norm:0.7177, tok/sec: 125547.50, flops:97.78, batch-reuse:1
@ 2930 train 4.6128 , allloss: 4.6136, dt: 1054.16ms, fracRes: 0.7636, norm(attn): 0.1709, norm(output): 1.7500, norm(x): 0.3044, norm(y): 0.9713, norm:0.7108, tok/sec: 124337.45, flops:96.83, batch-reuse:1
@ 2931 train 4.6375 , allloss: 4.6385, dt: 1063.23ms, fracRes: 0.7648, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3041, norm(y): 0.9712, norm:0.7239, tok/sec: 123277.54, flops:96.01, batch-reuse:1
@ 2932 train 4.5477 , allloss: 4.5488, dt: 1040.58ms, fracRes: 0.7643, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3048, norm(y): 0.9711, norm:0.6209, tok/sec: 125960.11, flops:98.10, batch-reuse:1
@ 2933 train 4.6758 , allloss: 4.6768, dt: 1055.06ms, fracRes: 0.7629, norm(attn): 0.1729, norm(output): 1.7734, norm(x): 0.3060, norm(y): 0.9712, norm:0.7366, tok/sec: 124232.31, flops:96.75, batch-reuse:1
@ 2934 train 4.7018 , allloss: 4.7028, dt: 1049.43ms, fracRes: 0.7630, norm(attn): 0.1738, norm(output): 1.7734, norm(x): 0.3066, norm(y): 0.9711, norm:0.6934, tok/sec: 124897.78, flops:97.27, batch-reuse:1
@ 2935 train 4.6116 , allloss: 4.6127, dt: 1046.57ms, fracRes: 0.7627, norm(attn): 0.1738, norm(output): 1.7656, norm(x): 0.3098, norm(y): 0.9712, norm:0.6427, tok/sec: 125239.38, flops:97.54, batch-reuse:1
@ 2936 train 4.5046 , allloss: 4.5054, dt: 1057.35ms, fracRes: 0.7620, norm(attn): 0.1738, norm(output): 1.7656, norm(x): 0.3084, norm(y): 0.9713, norm:0.7243, tok/sec: 123962.66, flops:96.54, batch-reuse:1
@ 2937 train 4.5837 , allloss: 4.5847, dt: 1047.27ms, fracRes: 0.7622, norm(attn): 0.1738, norm(output): 1.7578, norm(x): 0.3086, norm(y): 0.9713, norm:0.6609, tok/sec: 125155.85, flops:97.47, batch-reuse:1
@ 2938 train 4.6299 , allloss: 4.6309, dt: 1052.91ms, fracRes: 0.7642, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3031, norm(y): 0.9710, norm:0.7717, tok/sec: 124485.29, flops:96.95, batch-reuse:1
@ 2939 train 4.6262 , allloss: 4.6270, dt: 1063.38ms, fracRes: 0.7612, norm(attn): 0.1729, norm(output): 1.7578, norm(x): 0.3086, norm(y): 0.9712, norm:0.5546, tok/sec: 123260.24, flops:96.00, batch-reuse:1
@ 2940 train 4.6095 , allloss: 4.6104, dt: 1051.57ms, fracRes: 0.7631, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3054, norm(y): 0.9710, norm:0.6572, tok/sec: 124643.57, flops:97.07, batch-reuse:1
@ 2941 train 4.5090 , allloss: 4.5097, dt: 1069.64ms, fracRes: 0.7624, norm(attn): 0.1729, norm(output): 1.7422, norm(x): 0.3086, norm(y): 0.9712, norm:0.6736, tok/sec: 122538.87, flops:95.43, batch-reuse:1
@ 2942 train 4.6306 , allloss: 4.6313, dt: 1047.77ms, fracRes: 0.7618, norm(attn): 0.1738, norm(output): 1.7656, norm(x): 0.3074, norm(y): 0.9710, norm:0.6280, tok/sec: 125095.64, flops:97.42, batch-reuse:1
@ 2943 train 4.6102 , allloss: 4.6110, dt: 1058.77ms, fracRes: 0.7645, norm(attn): 0.1719, norm(output): 1.7422, norm(x): 0.3018, norm(y): 0.9708, norm:0.6693, tok/sec: 123796.54, flops:96.41, batch-reuse:1
@ 2944 train 4.6587 , allloss: 4.6594, dt: 1057.46ms, fracRes: 0.7617, norm(attn): 0.1709, norm(output): 1.7656, norm(x): 0.3082, norm(y): 0.9708, norm:0.6614, tok/sec: 123949.97, flops:96.53, batch-reuse:1
@ 2945 train 4.6446 , allloss: 4.6454, dt: 1040.62ms, fracRes: 0.7633, norm(attn): 0.1719, norm(output): 1.7578, norm(x): 0.3070, norm(y): 0.9709, norm:0.5929, tok/sec: 125955.76, flops:98.09, batch-reuse:1
@ 2946 train 4.5676 , allloss: 4.5684, dt: 1044.08ms, fracRes: 0.7616, norm(attn): 0.1729, norm(output): 1.7578, norm(x): 0.3106, norm(y): 0.9708, norm:0.6709, tok/sec: 125537.90, flops:97.77, batch-reuse:1
@ 2947 train 4.5940 , allloss: 4.5948, dt: 1047.34ms, fracRes: 0.7627, norm(attn): 0.1738, norm(output): 1.7500, norm(x): 0.3073, norm(y): 0.9709, norm:0.6037, tok/sec: 125147.95, flops:97.47, batch-reuse:1
@ 2948 train 4.5010 , allloss: 4.5016, dt: 1053.61ms, fracRes: 0.7602, norm(attn): 0.1729, norm(output): 1.7578, norm(x): 0.3122, norm(y): 0.9710, norm:0.6019, tok/sec: 124402.31, flops:96.88, batch-reuse:1
@ 2949 train 4.5503 , allloss: 4.5511, dt: 1048.49ms, fracRes: 0.7609, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3108, norm(y): 0.9709, norm:0.6144, tok/sec: 125010.73, flops:97.36, batch-reuse:1
@ 2950 train 4.7231 , allloss: 4.7242, dt: 1056.12ms, fracRes: 0.7647, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3019, norm(y): 0.9707, norm:0.6670, tok/sec: 124106.95, flops:96.65, batch-reuse:1
@ 2951 train 4.5480 , allloss: 4.5488, dt: 1057.37ms, fracRes: 0.7621, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3089, norm(y): 0.9707, norm:0.7864, tok/sec: 123960.82, flops:96.54, batch-reuse:1
@ 2952 train 4.6831 , allloss: 4.6839, dt: 1044.82ms, fracRes: 0.7599, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3120, norm(y): 0.9708, norm:0.7783, tok/sec: 125449.21, flops:97.70, batch-reuse:1
@ 2953 train 4.6709 , allloss: 4.6717, dt: 1048.33ms, fracRes: 0.7627, norm(attn): 0.1729, norm(output): 1.7578, norm(x): 0.3049, norm(y): 0.9707, norm:0.7293, tok/sec: 125028.76, flops:97.37, batch-reuse:1
@ 2954 train 4.6387 , allloss: 4.6395, dt: 1054.56ms, fracRes: 0.7629, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3058, norm(y): 0.9707, norm:0.6890, tok/sec: 124290.73, flops:96.80, batch-reuse:1
@ 2955 train 4.6141 , allloss: 4.6150, dt: 1068.40ms, fracRes: 0.7626, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3089, norm(y): 0.9706, norm:0.6517, tok/sec: 122680.87, flops:95.54, batch-reuse:1
@ 2956 train 4.5382 , allloss: 4.5389, dt: 1068.24ms, fracRes: 0.7604, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3164, norm(y): 0.9708, norm:0.6319, tok/sec: 122698.95, flops:95.56, batch-reuse:1
@ 2957 train 4.6073 , allloss: 4.6080, dt: 1064.78ms, fracRes: 0.7606, norm(attn): 0.1729, norm(output): 1.7812, norm(x): 0.3158, norm(y): 0.9707, norm:0.5960, tok/sec: 123098.09, flops:95.87, batch-reuse:1
@ 2958 train 4.5994 , allloss: 4.6002, dt: 1041.63ms, fracRes: 0.7620, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3122, norm(y): 0.9707, norm:0.6493, tok/sec: 125834.01, flops:98.00, batch-reuse:1
@ 2959 train 4.6145 , allloss: 4.6154, dt: 1050.27ms, fracRes: 0.7611, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3136, norm(y): 0.9706, norm:0.6001, tok/sec: 124798.72, flops:97.19, batch-reuse:1
@ 2960 train 4.5840 , allloss: 4.5847, dt: 1065.37ms, fracRes: 0.7613, norm(attn): 0.1729, norm(output): 1.7500, norm(x): 0.3099, norm(y): 0.9707, norm:0.6757, tok/sec: 123029.63, flops:95.82, batch-reuse:1
@ 2961 train 4.5279 , allloss: 4.5288, dt: 1052.76ms, fracRes: 0.7637, norm(attn): 0.1738, norm(output): 1.7500, norm(x): 0.3066, norm(y): 0.9706, norm:0.6124, tok/sec: 124503.56, flops:96.96, batch-reuse:1
@ 2962 train 4.5255 , allloss: 4.5263, dt: 1045.11ms, fracRes: 0.7596, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3161, norm(y): 0.9706, norm:0.6095, tok/sec: 125414.35, flops:97.67, batch-reuse:1
@ 2963 train 4.6039 , allloss: 4.6050, dt: 1045.01ms, fracRes: 0.7621, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3106, norm(y): 0.9704, norm:0.7112, tok/sec: 125426.20, flops:97.68, batch-reuse:1
@ 2964 train 4.6562 , allloss: 4.6572, dt: 1042.12ms, fracRes: 0.7655, norm(attn): 0.1719, norm(output): 1.7578, norm(x): 0.3061, norm(y): 0.9704, norm:0.6584, tok/sec: 125774.27, flops:97.95, batch-reuse:1
@ 2965 train 4.6463 , allloss: 4.6472, dt: 1039.96ms, fracRes: 0.7653, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3070, norm(y): 0.9703, norm:0.7257, tok/sec: 126035.11, flops:98.16, batch-reuse:1
@ 2966 train 4.5191 , allloss: 4.5199, dt: 1049.68ms, fracRes: 0.7628, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3133, norm(y): 0.9704, norm:0.7050, tok/sec: 124868.59, flops:97.25, batch-reuse:1
@ 2967 train 4.5832 , allloss: 4.5840, dt: 1055.52ms, fracRes: 0.7616, norm(attn): 0.1738, norm(output): 1.7812, norm(x): 0.3136, norm(y): 0.9704, norm:0.6893, tok/sec: 124177.51, flops:96.71, batch-reuse:1
@ 2968 train 4.6014 , allloss: 4.6021, dt: 1048.82ms, fracRes: 0.7614, norm(attn): 0.1729, norm(output): 1.7734, norm(x): 0.3125, norm(y): 0.9705, norm:0.6292, tok/sec: 124971.06, flops:97.33, batch-reuse:1
@ 2969 train 4.5392 , allloss: 4.5400, dt: 1045.69ms, fracRes: 0.7633, norm(attn): 0.1719, norm(output): 1.7578, norm(x): 0.3078, norm(y): 0.9704, norm:0.6482, tok/sec: 125345.18, flops:97.62, batch-reuse:1
@ 2970 train 4.5399 , allloss: 4.5406, dt: 1044.32ms, fracRes: 0.7626, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3114, norm(y): 0.9704, norm:0.6087, tok/sec: 125509.52, flops:97.75, batch-reuse:1
@ 2971 train 4.5719 , allloss: 4.5728, dt: 1050.62ms, fracRes: 0.7633, norm(attn): 0.1719, norm(output): 1.7578, norm(x): 0.3090, norm(y): 0.9703, norm:0.6526, tok/sec: 124756.57, flops:97.16, batch-reuse:1
@ 2972 train 4.4728 , allloss: 4.4736, dt: 1049.35ms, fracRes: 0.7628, norm(attn): 0.1729, norm(output): 1.7578, norm(x): 0.3108, norm(y): 0.9703, norm:0.6729, tok/sec: 124907.31, flops:97.28, batch-reuse:1
@ 2973 train 4.6112 , allloss: 4.6121, dt: 1062.68ms, fracRes: 0.7640, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3065, norm(y): 0.9702, norm:0.6767, tok/sec: 123341.40, flops:96.06, batch-reuse:1
@ 2974 train 4.5145 , allloss: 4.5154, dt: 1043.76ms, fracRes: 0.7613, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3111, norm(y): 0.9703, norm:0.7224, tok/sec: 125577.07, flops:97.80, batch-reuse:1
@ 2975 train 4.6730 , allloss: 4.6739, dt: 1056.55ms, fracRes: 0.7630, norm(attn): 0.1729, norm(output): 1.7578, norm(x): 0.3083, norm(y): 0.9702, norm:0.6468, tok/sec: 124057.07, flops:96.62, batch-reuse:1
@ 2976 train 4.7548 , allloss: 4.7557, dt: 1060.76ms, fracRes: 0.7655, norm(attn): 0.1709, norm(output): 1.7656, norm(x): 0.3037, norm(y): 0.9700, norm:0.5696, tok/sec: 123564.01, flops:96.23, batch-reuse:1
@ 2977 train 4.7451 , allloss: 4.7460, dt: 1061.67ms, fracRes: 0.7631, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3101, norm(y): 0.9700, norm:0.6409, tok/sec: 123457.87, flops:96.15, batch-reuse:1
@ 2978 train 4.7574 , allloss: 4.7582, dt: 1062.86ms, fracRes: 0.7662, norm(attn): 0.1709, norm(output): 1.7422, norm(x): 0.3024, norm(y): 0.9701, norm:0.7588, tok/sec: 123320.10, flops:96.04, batch-reuse:1
@ 2979 train 4.8553 , allloss: 4.8564, dt: 1049.67ms, fracRes: 0.7633, norm(attn): 0.1719, norm(output): 1.7578, norm(x): 0.3077, norm(y): 0.9702, norm:0.9335, tok/sec: 124869.21, flops:97.25, batch-reuse:1
@ 2980 train 4.6683 , allloss: 4.6693, dt: 1041.69ms, fracRes: 0.7655, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3047, norm(y): 0.9700, norm:0.7696, tok/sec: 125826.12, flops:97.99, batch-reuse:1
@ 2981 train 4.7253 , allloss: 4.7263, dt: 1052.14ms, fracRes: 0.7634, norm(attn): 0.1748, norm(output): 1.7812, norm(x): 0.3121, norm(y): 0.9699, norm:0.8534, tok/sec: 124576.10, flops:97.02, batch-reuse:1
@ 2982 train 4.8409 , allloss: 4.8421, dt: 1056.61ms, fracRes: 0.7663, norm(attn): 0.1719, norm(output): 1.7578, norm(x): 0.3046, norm(y): 0.9699, norm:1.0302, tok/sec: 124049.96, flops:96.61, batch-reuse:1
@ 2983 train 4.7390 , allloss: 4.7402, dt: 1041.51ms, fracRes: 0.7667, norm(attn): 0.1719, norm(output): 1.7500, norm(x): 0.3039, norm(y): 0.9699, norm:0.8983, tok/sec: 125847.92, flops:98.01, batch-reuse:1
@ 2984 train 4.7374 , allloss: 4.7384, dt: 1050.13ms, fracRes: 0.7637, norm(attn): 0.1729, norm(output): 1.7812, norm(x): 0.3130, norm(y): 0.9700, norm:0.6475, tok/sec: 124814.95, flops:97.21, batch-reuse:1
@ 2985 train 4.7848 , allloss: 4.7858, dt: 1068.28ms, fracRes: 0.7640, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3096, norm(y): 0.9700, norm:0.7231, tok/sec: 122694.24, flops:95.55, batch-reuse:1
@ 2986 train 4.7085 , allloss: 4.7093, dt: 1060.87ms, fracRes: 0.7632, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3114, norm(y): 0.9699, norm:0.8410, tok/sec: 123551.96, flops:96.22, batch-reuse:1
@ 2987 train 4.7690 , allloss: 4.7698, dt: 1067.74ms, fracRes: 0.7629, norm(attn): 0.1719, norm(output): 1.7812, norm(x): 0.3096, norm(y): 0.9698, norm:0.7322, tok/sec: 122757.03, flops:95.60, batch-reuse:1
@ 2988 train 4.8997 , allloss: 4.9006, dt: 1061.74ms, fracRes: 0.7640, norm(attn): 0.1719, norm(output): 1.7812, norm(x): 0.3069, norm(y): 0.9697, norm:0.6141, tok/sec: 123450.36, flops:96.14, batch-reuse:1
@ 2989 train 4.7942 , allloss: 4.7951, dt: 1065.22ms, fracRes: 0.7642, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3045, norm(y): 0.9698, norm:0.7648, tok/sec: 123047.03, flops:95.83, batch-reuse:1
@ 2990 train 4.8159 , allloss: 4.8169, dt: 1059.11ms, fracRes: 0.7651, norm(attn): 0.1709, norm(output): 1.7656, norm(x): 0.3031, norm(y): 0.9698, norm:0.8818, tok/sec: 123757.25, flops:96.38, batch-reuse:1
@ 2991 train 4.7124 , allloss: 4.7133, dt: 1062.20ms, fracRes: 0.7647, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3076, norm(y): 0.9697, norm:0.6794, tok/sec: 123396.16, flops:96.10, batch-reuse:1
@ 2992 train 4.7668 , allloss: 4.7677, dt: 1046.66ms, fracRes: 0.7637, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3100, norm(y): 0.9698, norm:0.7024, tok/sec: 125229.40, flops:97.53, batch-reuse:1
@ 2993 train 4.8163 , allloss: 4.8174, dt: 1059.22ms, fracRes: 0.7663, norm(attn): 0.1709, norm(output): 1.7656, norm(x): 0.3018, norm(y): 0.9695, norm:0.7153, tok/sec: 123744.05, flops:96.37, batch-reuse:1
@ 2994 train 4.7957 , allloss: 4.7967, dt: 1041.44ms, fracRes: 0.7636, norm(attn): 0.1729, norm(output): 1.7734, norm(x): 0.3089, norm(y): 0.9696, norm:0.6590, tok/sec: 125856.91, flops:98.02, batch-reuse:1
@ 2995 train 4.6704 , allloss: 4.6714, dt: 1055.24ms, fracRes: 0.7639, norm(attn): 0.1719, norm(output): 1.7812, norm(x): 0.3073, norm(y): 0.9697, norm:0.6305, tok/sec: 124210.92, flops:96.74, batch-reuse:1
@ 2996 train 4.7081 , allloss: 4.7093, dt: 1051.76ms, fracRes: 0.7644, norm(attn): 0.1719, norm(output): 1.7891, norm(x): 0.3097, norm(y): 0.9695, norm:0.7130, tok/sec: 124622.13, flops:97.06, batch-reuse:1
@ 2997 train 4.7552 , allloss: 4.7564, dt: 1058.74ms, fracRes: 0.7645, norm(attn): 0.1719, norm(output): 1.7812, norm(x): 0.3085, norm(y): 0.9695, norm:0.6902, tok/sec: 123799.97, flops:96.42, batch-reuse:1
@ 2998 train 4.7670 , allloss: 4.7681, dt: 1075.19ms, fracRes: 0.7642, norm(attn): 0.1729, norm(output): 1.7734, norm(x): 0.3085, norm(y): 0.9694, norm:0.6855, tok/sec: 121906.16, flops:94.94, batch-reuse:1
@ 2999 train 4.6627 , allloss: 4.6637, dt: 1041.40ms, fracRes: 0.7633, norm(attn): 0.1738, norm(output): 1.7812, norm(x): 0.3100, norm(y): 0.9695, norm:0.7226, tok/sec: 125861.69, flops:98.02, batch-reuse:1
@ 3000 train 4.8528 , allloss: 4.8539, dt: 1055.06ms, fracRes: 0.7652, norm(attn): 0.1738, norm(output): 1.7656, norm(x): 0.3047, norm(y): 0.9696, norm:0.8919, tok/sec: 124231.27, flops:96.75, batch-reuse:1
@ 3001 train 4.8420 , allloss: 4.8433, dt: 1060.02ms, fracRes: 0.7626, norm(attn): 0.1729, norm(output): 1.7812, norm(x): 0.3103, norm(y): 0.9696, norm:0.6722, tok/sec: 123650.36, flops:96.30, batch-reuse:1
@ 3002 train 4.7203 , allloss: 4.7218, dt: 1057.88ms, fracRes: 0.7651, norm(attn): 0.1738, norm(output): 1.7812, norm(x): 0.3052, norm(y): 0.9694, norm:0.8552, tok/sec: 123900.33, flops:96.49, batch-reuse:1
@ 3003 train 4.7606 , allloss: 4.7617, dt: 1050.62ms, fracRes: 0.7643, norm(attn): 0.1738, norm(output): 1.7734, norm(x): 0.3095, norm(y): 0.9695, norm:0.8163, tok/sec: 124757.34, flops:97.16, batch-reuse:1
@ 3004 train 4.8094 , allloss: 4.8103, dt: 1046.54ms, fracRes: 0.7632, norm(attn): 0.1729, norm(output): 1.7656, norm(x): 0.3105, norm(y): 0.9695, norm:0.7025, tok/sec: 125242.89, flops:97.54, batch-reuse:1
@ 3005 train 5.0232 , allloss: 5.0245, dt: 1052.30ms, fracRes: 0.7664, norm(attn): 0.1738, norm(output): 1.7734, norm(x): 0.3046, norm(y): 0.9693, norm:0.8850, tok/sec: 124557.69, flops:97.01, batch-reuse:1
@ 3006 train 4.7693 , allloss: 4.7704, dt: 1049.78ms, fracRes: 0.7633, norm(attn): 0.1729, norm(output): 1.7812, norm(x): 0.3098, norm(y): 0.9693, norm:1.2875, tok/sec: 124856.73, flops:97.24, batch-reuse:1
@ 3007 train 4.8048 , allloss: 4.8059, dt: 1047.35ms, fracRes: 0.7643, norm(attn): 0.1719, norm(output): 1.7734, norm(x): 0.3094, norm(y): 0.9692, norm:0.7610, tok/sec: 125146.84, flops:97.46, batch-reuse:1
@ 3008 train 4.7544 , allloss: 4.7555, dt: 1049.88ms, fracRes: 0.7654, norm(attn): 0.1719, norm(output): 1.7812, norm(x): 0.3084, norm(y): 0.9693, norm:0.8638, tok/sec: 124844.32, flops:97.23, batch-reuse:1
@ 3009 train 4.6808 , allloss: 4.6815, dt: 1051.02ms, fracRes: 0.7646, norm(attn): 0.1738, norm(output): 1.7656, norm(x): 0.3110, norm(y): 0.9696, norm:0.9739, tok/sec: 124709.26, flops:97.12, batch-reuse:1
@ 3010 train 4.8019 , allloss: 4.8028, dt: 1046.91ms, fracRes: 0.7661, norm(attn): 0.1729, norm(output): 1.7812, norm(x): 0.3079, norm(y): 0.9693, norm:0.7269, tok/sec: 125199.00, flops:97.51, batch-reuse:1
@ 3011 train 4.7636 , allloss: 4.7645, dt: 1048.54ms, fracRes: 0.7635, norm(attn): 0.1729, norm(output): 1.8047, norm(x): 0.3116, norm(y): 0.9692, norm:0.7633, tok/sec: 125004.53, flops:97.35, batch-reuse:1
@ 3012 train 4.8965 , allloss: 4.8972, dt: 1049.57ms, fracRes: 0.7639, norm(attn): 0.1729, norm(output): 1.8125, norm(x): 0.3115, norm(y): 0.9693, norm:0.7519, tok/sec: 124881.24, flops:97.26, batch-reuse:1
@ 3013 train 4.8883 , allloss: 4.8890, dt: 1066.88ms, fracRes: 0.7631, norm(attn): 0.1729, norm(output): 1.8125, norm(x): 0.3144, norm(y): 0.9692, norm:0.8965, tok/sec: 122855.29, flops:95.68, batch-reuse:1
@ 3014 train 4.7463 , allloss: 4.7471, dt: 1063.83ms, fracRes: 0.7644, norm(attn): 0.1719, norm(output): 1.7812, norm(x): 0.3102, norm(y): 0.9692, norm:0.6613, tok/sec: 123207.11, flops:95.95, batch-reuse:1
@ 3015 train 4.7555 , allloss: 4.7564, dt: 1062.46ms, fracRes: 0.7636, norm(attn): 0.1729, norm(output): 1.8047, norm(x): 0.3130, norm(y): 0.9692, norm:0.6983, tok/sec: 123366.31, flops:96.08, batch-reuse:1
@ 3016 train 4.6722 , allloss: 4.6731, dt: 1061.09ms, fracRes: 0.7633, norm(attn): 0.1729, norm(output): 1.7969, norm(x): 0.3147, norm(y): 0.9692, norm:0.6189, tok/sec: 123525.98, flops:96.20, batch-reuse:1
@ 3017 train 4.7014 , allloss: 4.7024, dt: 1058.89ms, fracRes: 0.7653, norm(attn): 0.1719, norm(output): 1.8047, norm(x): 0.3099, norm(y): 0.9690, norm:0.6971, tok/sec: 123782.83, flops:96.40, batch-reuse:1
@ 3018 train 4.7324 , allloss: 4.7333, dt: 1054.76ms, fracRes: 0.7626, norm(attn): 0.1738, norm(output): 1.7891, norm(x): 0.3137, norm(y): 0.9692, norm:0.5943, tok/sec: 124267.67, flops:96.78, batch-reuse:1
@ 3019 train 4.9470 , allloss: 4.9480, dt: 1045.19ms, fracRes: 0.7643, norm(attn): 0.1729, norm(output): 1.8047, norm(x): 0.3104, norm(y): 0.9691, norm:0.8519, tok/sec: 125405.00, flops:97.67, batch-reuse:1
@ 3020 train 4.6656 , allloss: 4.6663, dt: 1059.12ms, fracRes: 0.7624, norm(attn): 0.1738, norm(output): 1.7812, norm(x): 0.3124, norm(y): 0.9693, norm:0.9300, tok/sec: 123756.13, flops:96.38, batch-reuse:1
@ 3021 train 4.6941 , allloss: 4.6948, dt: 1061.53ms, fracRes: 0.7620, norm(attn): 0.1748, norm(output): 1.7812, norm(x): 0.3141, norm(y): 0.9692, norm:0.8079, tok/sec: 123474.82, flops:96.16, batch-reuse:1
@ 3022 train 4.8021 , allloss: 4.8033, dt: 1055.53ms, fracRes: 0.7673, norm(attn): 0.1719, norm(output): 1.7656, norm(x): 0.3033, norm(y): 0.9689, norm:0.6873, tok/sec: 124176.33, flops:96.71, batch-reuse:1
@ 3023 train 4.8263 , allloss: 4.8272, dt: 1058.46ms, fracRes: 0.7645, norm(attn): 0.1719, norm(output): 1.8047, norm(x): 0.3076, norm(y): 0.9689, norm:0.7270, tok/sec: 123832.38, flops:96.44, batch-reuse:1
@ 3024 train 4.7174 , allloss: 4.7182, dt: 1052.39ms, fracRes: 0.7629, norm(attn): 0.1729, norm(output): 1.8203, norm(x): 0.3144, norm(y): 0.9690, norm:0.6891, tok/sec: 124547.06, flops:97.00, batch-reuse:1
@ 3025 train 4.7238 , allloss: 4.7246, dt: 1048.71ms, fracRes: 0.7626, norm(attn): 0.1738, norm(output): 1.8203, norm(x): 0.3138, norm(y): 0.9690, norm:0.6878, tok/sec: 124983.82, flops:97.34, batch-reuse:1
@ 3026 train 4.8197 , allloss: 4.8206, dt: 1043.15ms, fracRes: 0.7648, norm(attn): 0.1738, norm(output): 1.7812, norm(x): 0.3088, norm(y): 0.9688, norm:0.8076, tok/sec: 125650.60, flops:97.86, batch-reuse:1
@ 3027 train 4.8193 , allloss: 4.8202, dt: 1056.59ms, fracRes: 0.7628, norm(attn): 0.1738, norm(output): 1.8125, norm(x): 0.3124, norm(y): 0.9689, norm:0.6764, tok/sec: 124051.81, flops:96.61, batch-reuse:1
@ 3028 train 4.7450 , allloss: 4.7459, dt: 1047.35ms, fracRes: 0.7621, norm(attn): 0.1748, norm(output): 1.8125, norm(x): 0.3144, norm(y): 0.9688, norm:0.6699, tok/sec: 125146.19, flops:97.46, batch-reuse:1
@ 3029 train 4.6222 , allloss: 4.6230, dt: 1061.36ms, fracRes: 0.7612, norm(attn): 0.1758, norm(output): 1.8203, norm(x): 0.3178, norm(y): 0.9690, norm:0.6560, tok/sec: 123494.56, flops:96.18, batch-reuse:1
@ 3030 train 4.6700 , allloss: 4.6708, dt: 1056.77ms, fracRes: 0.7625, norm(attn): 0.1758, norm(output): 1.8203, norm(x): 0.3181, norm(y): 0.9690, norm:0.7221, tok/sec: 124031.04, flops:96.60, batch-reuse:1
@ 3031 train 4.7044 , allloss: 4.7052, dt: 1049.34ms, fracRes: 0.7620, norm(attn): 0.1738, norm(output): 1.8281, norm(x): 0.3162, norm(y): 0.9690, norm:0.6932, tok/sec: 124908.51, flops:97.28, batch-reuse:1
@ 3032 train 4.7012 , allloss: 4.7020, dt: 1047.08ms, fracRes: 0.7616, norm(attn): 0.1758, norm(output): 1.8203, norm(x): 0.3169, norm(y): 0.9689, norm:0.5703, tok/sec: 125178.19, flops:97.49, batch-reuse:1
@ 3033 train 4.6852 , allloss: 4.6859, dt: 1056.64ms, fracRes: 0.7618, norm(attn): 0.1758, norm(output): 1.8203, norm(x): 0.3167, norm(y): 0.9690, norm:0.6908, tok/sec: 124045.82, flops:96.61, batch-reuse:1
@ 3034 train 4.7498 , allloss: 4.7505, dt: 1046.61ms, fracRes: 0.7622, norm(attn): 0.1738, norm(output): 1.8438, norm(x): 0.3168, norm(y): 0.9688, norm:0.6089, tok/sec: 125234.31, flops:97.53, batch-reuse:1
@ 3035 train 4.7811 , allloss: 4.7819, dt: 1059.76ms, fracRes: 0.7619, norm(attn): 0.1729, norm(output): 1.8281, norm(x): 0.3166, norm(y): 0.9688, norm:0.6996, tok/sec: 123680.93, flops:96.32, batch-reuse:1
@ 3036 train 4.6890 , allloss: 4.6898, dt: 1053.98ms, fracRes: 0.7610, norm(attn): 0.1738, norm(output): 1.8281, norm(x): 0.3204, norm(y): 0.9688, norm:0.7495, tok/sec: 124359.56, flops:96.85, batch-reuse:1
@ 3037 train 4.7729 , allloss: 4.7737, dt: 1050.76ms, fracRes: 0.7629, norm(attn): 0.1729, norm(output): 1.8125, norm(x): 0.3144, norm(y): 0.9687, norm:0.6654, tok/sec: 124739.99, flops:97.15, batch-reuse:1
@ 3038 train 4.6932 , allloss: 4.6941, dt: 1055.97ms, fracRes: 0.7624, norm(attn): 0.1729, norm(output): 1.8281, norm(x): 0.3193, norm(y): 0.9686, norm:0.7371, tok/sec: 124124.55, flops:96.67, batch-reuse:1
@ 3039 train 4.8980 , allloss: 4.8991, dt: 1058.00ms, fracRes: 0.7603, norm(attn): 0.1729, norm(output): 1.8438, norm(x): 0.3246, norm(y): 0.9684, norm:1.2190, tok/sec: 123886.01, flops:96.48, batch-reuse:1
@ 3040 train 4.7615 , allloss: 4.7625, dt: 1048.25ms, fracRes: 0.7645, norm(attn): 0.1729, norm(output): 1.8047, norm(x): 0.3121, norm(y): 0.9686, norm:1.0848, tok/sec: 125038.79, flops:97.38, batch-reuse:1
@ 3041 train 4.8008 , allloss: 4.8018, dt: 1054.38ms, fracRes: 0.7635, norm(attn): 0.1729, norm(output): 1.7812, norm(x): 0.3168, norm(y): 0.9688, norm:0.8248, tok/sec: 124311.92, flops:96.81, batch-reuse:1
@ 3042 train 4.6479 , allloss: 4.6491, dt: 1048.69ms, fracRes: 0.7623, norm(attn): 0.1768, norm(output): 1.8203, norm(x): 0.3196, norm(y): 0.9686, norm:0.9208, tok/sec: 124986.71, flops:97.34, batch-reuse:1
@ 3043 train 4.6774 , allloss: 4.6783, dt: 1053.76ms, fracRes: 0.7609, norm(attn): 0.1758, norm(output): 1.8281, norm(x): 0.3211, norm(y): 0.9688, norm:0.7423, tok/sec: 124385.39, flops:96.87, batch-reuse:1
@ 3044 train 4.7234 , allloss: 4.7240, dt: 1055.00ms, fracRes: 0.7601, norm(attn): 0.1758, norm(output): 1.8203, norm(x): 0.3204, norm(y): 0.9688, norm:0.6540, tok/sec: 124238.49, flops:96.76, batch-reuse:1
@ 3045 train 4.9280 , allloss: 4.9287, dt: 1056.70ms, fracRes: 0.7618, norm(attn): 0.1719, norm(output): 1.8359, norm(x): 0.3185, norm(y): 0.9684, norm:1.0118, tok/sec: 124038.79, flops:96.60, batch-reuse:1
@ 3046 train 4.7249 , allloss: 4.7256, dt: 1043.09ms, fracRes: 0.7626, norm(attn): 0.1729, norm(output): 1.8516, norm(x): 0.3186, norm(y): 0.9683, norm:0.9200, tok/sec: 125657.29, flops:97.86, batch-reuse:1
@ 3047 train 4.8371 , allloss: 4.8379, dt: 1046.30ms, fracRes: 0.7657, norm(attn): 0.1719, norm(output): 1.8047, norm(x): 0.3085, norm(y): 0.9683, norm:0.9744, tok/sec: 125271.80, flops:97.56, batch-reuse:1
@ 3048 train 4.6927 , allloss: 4.6935, dt: 1058.12ms, fracRes: 0.7643, norm(attn): 0.1758, norm(output): 1.8438, norm(x): 0.3160, norm(y): 0.9686, norm:0.7541, tok/sec: 123872.92, flops:96.47, batch-reuse:1
@ 3049 train 4.8815 , allloss: 4.8822, dt: 1048.69ms, fracRes: 0.7640, norm(attn): 0.1748, norm(output): 1.8438, norm(x): 0.3144, norm(y): 0.9685, norm:0.8153, tok/sec: 124987.00, flops:97.34, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863, -15.5625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972, -12.2500,  -9.5625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -14.5625, -11.0625, -12.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189, -10.0000,  -9.4375,  -8.4375,  -8.2500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -9.0000, -10.5625,  -9.8125,  -9.6875,  -9.0625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918, -12.1250, -10.5000, -10.6875, -10.9375,  -9.5625,  -9.5625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -17.1250, -13.3125, -15.6250, -17.0000, -14.5625, -16.3750, -18.8750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944, -10.3750, -11.5625, -11.1250, -10.6250,  -9.1250,  -8.3125,  -9.8750,  -9.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052, -11.4375, -10.0000, -10.7500, -12.1250,  -9.4375,  -8.6875, -11.0000, -10.5625,  -8.3125,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -7.5625,  -9.1875,  -9.5000,  -8.8750,  -7.5000,  -7.1250,  -8.2500,  -7.2188,  -5.9375,  -6.9062,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -9.5000,  -7.9375,  -7.9375,  -8.6875,  -6.9375,  -6.6875,  -9.3125,  -7.9375,  -6.3438,  -5.7812,  -6.2188,     -inf,     -inf,     -inf],
          [  5.1299, -11.1250,  -8.0625,  -9.3750, -10.3750,  -8.8750,  -9.4375, -11.1875,  -9.2500,  -5.8438,  -7.5938,  -3.8906,  -7.7188,     -inf,     -inf],
          [  5.2781,  -9.1250, -10.3125, -10.6875, -10.5000,  -8.5625,  -8.5000,  -9.5625,  -9.3125,  -7.1562,  -8.9375,  -5.7812,  -6.7812,  -8.5000,     -inf],
          [  5.4161, -11.6875,  -9.7500, -11.3125, -11.2500,  -9.2500, -10.0625, -12.5625, -10.8125,  -7.9688,  -8.8750,  -7.3438,  -9.6250, -10.0000, -12.6250]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9974],
        [0.9961],
        [0.9997],
        [0.9997],
        [0.9997],
        [0.9993],
        [0.9997],
        [0.9997],
        [0.9997],
        [0.9980],
        [0.9993],
        [0.9993],
        [0.9993]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0006,     0.0001,     0.0001,     0.0002,     0.0000,     0.0003,     0.0003,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863,  -9.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972,  -8.5000,  -9.3125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726,  -6.9062,  -8.3750,  -5.9688,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -6.8438,  -8.3125,  -5.5625,  -7.5000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -5.5000,  -6.3750,  -4.5938,  -6.3125,  -7.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,  -5.6562,  -6.9688,  -6.2812,  -7.9375,  -7.0625,  -4.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589,  -8.6250, -10.1250,  -8.6250, -11.7500, -10.0000,  -6.0938,  -8.3750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -7.5938,  -8.3750,  -6.2812,  -7.9375,  -7.5312,  -4.2500,  -4.4375,  -7.5000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -6.2812,  -8.2500,  -6.1875,  -7.6875,  -7.1875,  -4.5000,  -5.8750,  -7.1875,  -6.0938,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -7.0000,  -9.1250,  -8.5625,  -9.6250,  -8.5000,  -5.9375,  -7.4375,  -7.9688,  -7.5312,  -8.8750,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -5.2500,  -6.1250,  -5.6875,  -7.0938,  -6.2188,  -3.3125,  -5.4688,  -5.9688,  -5.0000,  -6.0312,  -4.3750,     -inf,     -inf,     -inf],
          [  5.1299,  -5.3750,  -6.0625,  -4.7500,  -6.4688,  -5.0312,  -2.2969,  -4.1875,  -4.7188,  -3.6250,  -4.9375,  -2.8906,  -3.1094,     -inf,     -inf],
          [  5.2781,  -7.5625,  -8.6250,  -6.8438,  -8.9375,  -8.8125,  -5.4688,  -5.6562,  -8.3750,  -5.6562,  -8.0625,  -5.1250,  -4.2500,  -7.2188,     -inf],
          [  5.4161,  -8.0625,  -9.9375,  -8.1875,  -9.8750,  -9.3125,  -5.3750,  -7.3438,  -9.1875,  -7.1250,  -9.0625,  -6.4688,  -5.5938,  -8.6875,  -8.1875]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [1.0000],
        [1.0000],
        [0.9990],
        [1.0000],
        [0.9997],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.9997],
        [0.9997],
        [0.9993],
        [0.9997],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0008,     0.0010,     0.0006,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0009,     0.0017,     0.0008,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0010,     0.0018,     0.0004,     0.0002,     0.0001,     0.0003,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0001,     0.0001,     0.0000,     0.0001,     0.0001,     0.0001,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0003,     0.0001,     0.0002,     0.0001,     0.0001,     0.0000,     0.0012,     0.0005,     0.0002,     0.0006,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0003,     0.0001,     0.0003,     0.0003,     0.0002,     0.0001,     0.0009,     0.0008,     0.0002,     0.0010,     0.0004,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0010,     0.0002,     0.0001,     0.0000,     0.0001,     0.0001,     0.0000,     0.0003,     0.0001,     0.0021,     0.0003,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -5.5312,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -6.5312, -4.7812,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -7.9375, -5.4688, -8.3125,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189, -3.8750, -3.7031, -4.1562, -4.2500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -3.4062, -2.7656, -3.5469, -4.8438, -5.5625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918, -5.6875, -5.4375, -6.5312, -6.1875, -6.3125, -6.5625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, -7.1875, -4.9375, -7.5625, -5.3438, -6.0625, -7.7188, -9.0625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -2.5312, -1.9062, -3.3906, -4.2500, -4.6875, -3.7344, -3.6875, -5.4688,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052, -4.2812, -3.7969, -5.0000, -4.8750, -5.3125, -5.0625, -4.8438, -5.0000, -3.3906,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, -4.1250, -3.8438, -5.4688, -5.0000, -5.2500, -5.1875, -5.8750, -5.1562, -4.1250, -4.2500,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -4.6875, -3.2188, -4.8750, -3.3281, -4.1875, -4.5938, -5.8438, -1.7891, -2.7188, -3.6875, -2.4688,    -inf,    -inf,    -inf],
          [ 5.1299, -3.9688, -2.9531, -3.7812, -3.1406, -3.0938, -3.6094, -4.0000, -1.8438, -2.0000, -3.2344, -1.7812, -2.6406,    -inf,    -inf],
          [ 5.2781, -2.2344, -1.6016, -3.1562, -4.4062, -4.9375, -3.7969, -3.8281, -6.0625, -2.7656, -3.9062, -0.8828, -2.7031, -6.5625,    -inf],
          [ 5.4161, -3.8906, -3.7031, -6.6250, -5.5625, -6.7188, -6.6562, -7.8125, -5.5938, -4.8750, -6.3750, -3.2812, -4.7188, -7.3438, -5.9375]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9954],
        [0.9958],
        [0.9993],
        [0.9987],
        [0.9977],
        [0.9997],
        [0.9997],
        [0.9987],
        [0.9993],
        [0.9993],
        [0.9961],
        [0.9958],
        [0.9984],
        [0.9987]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3848,     0.6133,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0027,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0058,     0.0104,     0.0102,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0361,     0.1494,     0.0293,     0.7852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0393,     0.1641,     0.0243,     0.6602,     0.1123,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0107,     0.1885,     0.3633,     0.0366,     0.2773,     0.1216,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0576,     0.5781,     0.0084,     0.3184,     0.0305,     0.0016,     0.0052,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0273,     0.1128,     0.0173,     0.6133,     0.1328,     0.0010,     0.0049,     0.0884,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0068,     0.0659,     0.2520,     0.0247,     0.4434,     0.1030,     0.0022,     0.0145,     0.0874,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.0310,     0.1514,     0.0220,     0.4980,     0.1045,     0.0014,     0.0076,     0.0635,     0.0000,     0.1182,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0003,     0.0003,     0.0013,     0.0001,     0.0002,     0.0020,     0.0009,     0.0002,     0.0034,     0.0001,     0.0012,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0449,     0.4316,     0.0033,     0.4043,     0.0226,     0.0004,     0.0024,     0.0293,     0.0000,     0.0620,     0.0000,     0.0003,     0.0000,     0.0000],
        [    0.0008,     0.0222,     0.0967,     0.0137,     0.4902,     0.1021,     0.0007,     0.0037,     0.0659,     0.0000,     0.1338,     0.0001,     0.0009,     0.0688,     0.0000],
        [    0.9961,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0007,     0.0001,     0.0000,     0.0017,     0.0000,     0.0006,     0.0004,     0.0000,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863,  1.8516,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -3.7188, -3.5312,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -2.3594, -1.7734, -1.7969,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  7.9375,  9.3750,  7.7188, 11.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  7.9062,  9.3125,  7.4062, 10.6875,  8.9375,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  6.7500,  7.4062,  5.1250,  7.1562,  6.3125,  2.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  9.0000, 11.3125,  7.0938, 10.7500,  8.3750,  5.4062,  6.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  8.4375,  9.8125,  7.9688, 11.5625, 10.0000,  5.0625,  6.7188,  9.6250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  6.8750,  8.1875,  5.8750,  8.7500,  7.3125,  3.4844,  5.3438,  7.1562,  0.2812,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  7.5938,  9.1875,  7.2500, 10.3750,  8.8125,  4.4688,  6.2188,  8.3125,  0.7539,  8.9375,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -3.2969, -3.1406, -1.6719, -4.2812, -3.4375, -1.2578, -1.9844, -3.5625, -0.7031, -3.8281, -1.7812,    -inf,    -inf,    -inf],
          [ 5.1299,  9.9375, 12.1875,  7.3125, 12.1250,  9.2500,  5.1250,  7.0000,  9.5000,  0.0947, 10.2500,  2.7812,  4.7500,    -inf,    -inf],
          [ 5.2781,  8.5625, 10.0625,  8.1250, 11.6875, 10.1250,  5.1562,  6.7812,  9.6875,  1.1641, 10.3750,  3.5312,  5.3750,  9.6875,    -inf],
          [ 5.4161, -4.9688, -5.0312, -3.1250, -6.4688, -5.2188, -1.8203, -3.5312, -5.2812, -0.9844, -5.7812, -2.0000, -2.5156, -5.2500, -2.2500]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7467],
        [0.9079],
        [0.8816],
        [0.0556],
        [0.0408],
        [0.1409],
        [0.1509],
        [0.0370],
        [0.1981],
        [0.0352],
        [0.8979],
        [0.1266],
        [0.0390],
        [0.5420]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0134, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9570, 0.0193, 0.0249, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.4316, 0.1846, 0.2373, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0069, 0.5547, 0.1289, 0.1621, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0023, 0.5703, 0.1172, 0.1187, 0.0376, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.1074, 0.0474, 0.1152, 0.0796, 0.0214, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0082, 0.0811, 0.0251, 0.0527, 0.0160, 0.0214, 0.6641, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0089, 0.0801, 0.0189, 0.0204, 0.0659, 0.0239, 0.4980, 0.1992, 0.0840, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0042, 0.1533, 0.0297, 0.0256, 0.0349, 0.0369, 0.4023, 0.1680, 0.0781, 0.0664, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0369, 0.0796, 0.0128, 0.0247, 0.0625, 0.0142, 0.4062, 0.1201, 0.0723, 0.0640, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4629, 0.0281, 0.0114, 0.0221, 0.0045, 0.0391, 0.1973, 0.1211, 0.0299, 0.0309, 0.0493, 0.0040, 0.0000, 0.0000, 0.0000],
        [0.0017, 0.0796, 0.0101, 0.0225, 0.0128, 0.0266, 0.4941, 0.0796, 0.0796, 0.0327, 0.0913, 0.0014, 0.0684, 0.0000, 0.0000],
        [0.0052, 0.0669, 0.0098, 0.0126, 0.0532, 0.0165, 0.3965, 0.1309, 0.0591, 0.0481, 0.0747, 0.0060, 0.0654, 0.0559, 0.0000],
        [0.0024, 0.0620, 0.0125, 0.0167, 0.0302, 0.0309, 0.2812, 0.0723, 0.0986, 0.0386, 0.0569, 0.0023, 0.0493, 0.0879, 0.1592]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863,  5.6875,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -1.7031, -1.4453,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726,  3.8438,  3.0000,  3.2500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  7.5938,  6.1562,  6.3750,  6.2812,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  9.0625,  7.5000,  7.5312,  6.3750,  7.7812,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  2.8750,  2.0625,  2.9531,  2.5781,  1.2656,  4.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  6.4375,  5.2812,  6.0312,  4.8125,  5.1250,  8.5625,  6.9062,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  6.5938,  5.1562,  5.2500,  6.4062,  5.4062,  8.4375,  7.5312,  6.6562,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  8.1875,  6.5312,  6.3750,  6.6875,  6.7500,  9.1250,  8.2500,  7.5000,  7.3438,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  5.5625,  3.7188,  4.3750,  5.3125,  3.8281,  7.1875,  5.9688,  5.4375,  5.3438,  5.8438,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698,  2.1719,  1.2656,  1.9297,  0.3262,  2.5000,  4.1250,  3.6250,  2.2344,  2.2656,  2.7344,  0.2178,    -inf,    -inf,    -inf],
          [ 5.1299,  9.0000,  6.9375,  7.7188,  7.1562,  7.9062, 10.8125,  9.0000,  9.0000,  8.1250,  9.1250,  4.9688,  8.8125,    -inf,    -inf],
          [ 5.2781,  7.8438,  5.9062,  6.1562,  7.5938,  6.4375,  9.6250,  8.5000,  7.7188,  7.5000,  7.9375,  5.4062,  7.8125,  7.6562,    -inf],
          [ 5.4161,  8.6250,  7.0312,  7.3438,  7.9375,  7.9375, 10.1250,  8.8125,  9.1250,  8.1875,  8.5625,  5.3438,  8.4375,  9.0000,  9.5625]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.5978],
        [0.6979],
        [0.4574],
        [0.3957],
        [0.3502],
        [0.2997],
        [0.3257],
        [0.2464],
        [0.3313],
        [0.2805],
        [0.5409],
        [0.2749],
        [0.1994],
        [0.2046]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(!:0.2891 the:0.1064,:0.2559 yellow:0.0830tery:0.2246,:0.3418 a:0.0703
:0.0718)


------
		( the:0.1064,:0.2559 yellow:0.0830tery:0.2246,:0.3418 a:0.0703
:0.0718The:0.0530)
The first is the first time of the year of the year.
The
@ 3050 train 4.8283 , allloss: 4.8290, dt: 1322.68ms, fracRes: 0.7630, norm(attn): 0.1768, norm(output): 1.8438, norm(x): 0.3155, norm(y): 0.9686, norm:0.8966, tok/sec: 99095.61, flops:77.18, batch-reuse:1
@ 3051 train 4.7296 , allloss: 4.7306, dt: 1307.19ms, fracRes: 0.7620, norm(attn): 0.1758, norm(output): 1.8359, norm(x): 0.3183, norm(y): 0.9686, norm:0.7133, tok/sec: 100270.31, flops:78.09, batch-reuse:1
@ 3052 train 4.7084 , allloss: 4.7093, dt: 1050.70ms, fracRes: 0.7607, norm(attn): 0.1787, norm(output): 1.8203, norm(x): 0.3221, norm(y): 0.9686, norm:0.7104, tok/sec: 124746.92, flops:97.15, batch-reuse:1
@ 3053 train 4.7599 , allloss: 4.7611, dt: 1046.76ms, fracRes: 0.7649, norm(attn): 0.1758, norm(output): 1.8047, norm(x): 0.3129, norm(y): 0.9684, norm:0.6909, tok/sec: 125217.33, flops:97.52, batch-reuse:1
@ 3054 train 4.7537 , allloss: 4.7548, dt: 1044.61ms, fracRes: 0.7631, norm(attn): 0.1748, norm(output): 1.8281, norm(x): 0.3161, norm(y): 0.9684, norm:0.7655, tok/sec: 125474.98, flops:97.72, batch-reuse:1
@ 3055 train 4.6838 , allloss: 4.6849, dt: 1065.58ms, fracRes: 0.7628, norm(attn): 0.1758, norm(output): 1.8438, norm(x): 0.3193, norm(y): 0.9684, norm:0.6491, tok/sec: 123005.38, flops:95.80, batch-reuse:1
@ 3056 train 4.7987 , allloss: 4.7998, dt: 1066.28ms, fracRes: 0.7647, norm(attn): 0.1738, norm(output): 1.8438, norm(x): 0.3175, norm(y): 0.9682, norm:0.6414, tok/sec: 122924.82, flops:95.73, batch-reuse:1
@ 3057 train 4.7711 , allloss: 4.7720, dt: 1056.61ms, fracRes: 0.7644, norm(attn): 0.1729, norm(output): 1.8359, norm(x): 0.3156, norm(y): 0.9683, norm:0.6339, tok/sec: 124050.07, flops:96.61, batch-reuse:1
@ 3058 train 4.7295 , allloss: 4.7304, dt: 1059.29ms, fracRes: 0.7619, norm(attn): 0.1748, norm(output): 1.8281, norm(x): 0.3191, norm(y): 0.9684, norm:0.5991, tok/sec: 123735.49, flops:96.37, batch-reuse:1
@ 3059 train 4.7001 , allloss: 4.7010, dt: 1052.62ms, fracRes: 0.7610, norm(attn): 0.1748, norm(output): 1.8516, norm(x): 0.3204, norm(y): 0.9684, norm:0.6173, tok/sec: 124520.14, flops:96.98, batch-reuse:1
@ 3060 train 4.8781 , allloss: 4.8790, dt: 1055.91ms, fracRes: 0.7622, norm(attn): 0.1748, norm(output): 1.8359, norm(x): 0.3161, norm(y): 0.9682, norm:0.6671, tok/sec: 124132.09, flops:96.67, batch-reuse:1
@ 3061 train 4.6296 , allloss: 4.6308, dt: 1054.41ms, fracRes: 0.7713, norm(attn): 0.1738, norm(output): 1.8281, norm(x): 0.3017, norm(y): 0.9681, norm:0.9493, tok/sec: 124308.47, flops:96.81, batch-reuse:1
@ 3062 train 4.6646 , allloss: 4.6654, dt: 1054.33ms, fracRes: 0.7632, norm(attn): 0.1738, norm(output): 1.8281, norm(x): 0.3175, norm(y): 0.9682, norm:0.6746, tok/sec: 124318.36, flops:96.82, batch-reuse:1
@ 3063 train 4.6444 , allloss: 4.6452, dt: 1051.34ms, fracRes: 0.7633, norm(attn): 0.1738, norm(output): 1.8438, norm(x): 0.3164, norm(y): 0.9682, norm:0.6120, tok/sec: 124671.95, flops:97.09, batch-reuse:1
@ 3064 train 4.6608 , allloss: 4.6616, dt: 1053.81ms, fracRes: 0.7628, norm(attn): 0.1758, norm(output): 1.8047, norm(x): 0.3160, norm(y): 0.9682, norm:0.5953, tok/sec: 124378.64, flops:96.87, batch-reuse:1
@ 3065 train 4.7365 , allloss: 4.7373, dt: 1060.97ms, fracRes: 0.7622, norm(attn): 0.1758, norm(output): 1.8594, norm(x): 0.3170, norm(y): 0.9681, norm:0.6156, tok/sec: 123539.91, flops:96.21, batch-reuse:1
@ 3066 train 4.7651 , allloss: 4.7659, dt: 1068.36ms, fracRes: 0.7630, norm(attn): 0.1738, norm(output): 1.8438, norm(x): 0.3157, norm(y): 0.9681, norm:0.5869, tok/sec: 122684.79, flops:95.55, batch-reuse:1
@ 3067 train 4.7875 , allloss: 4.7884, dt: 1067.66ms, fracRes: 0.7617, norm(attn): 0.1738, norm(output): 1.8672, norm(x): 0.3197, norm(y): 0.9679, norm:0.6367, tok/sec: 122765.83, flops:95.61, batch-reuse:1
@ 3068 train 4.6829 , allloss: 4.6837, dt: 1044.08ms, fracRes: 0.7625, norm(attn): 0.1748, norm(output): 1.8359, norm(x): 0.3172, norm(y): 0.9681, norm:0.7031, tok/sec: 125537.75, flops:97.77, batch-reuse:1
@ 3069 train 4.7141 , allloss: 4.7153, dt: 1055.05ms, fracRes: 0.7608, norm(attn): 0.1738, norm(output): 1.8672, norm(x): 0.3215, norm(y): 0.9680, norm:0.7772, tok/sec: 124232.96, flops:96.75, batch-reuse:1
@ 3070 train 4.7020 , allloss: 4.7028, dt: 1051.50ms, fracRes: 0.7610, norm(attn): 0.1758, norm(output): 1.8281, norm(x): 0.3208, norm(y): 0.9681, norm:0.7624, tok/sec: 124652.73, flops:97.08, batch-reuse:1
@ 3071 train 4.7175 , allloss: 4.7182, dt: 1044.84ms, fracRes: 0.7629, norm(attn): 0.1768, norm(output): 1.8281, norm(x): 0.3155, norm(y): 0.9680, norm:0.6705, tok/sec: 125447.55, flops:97.70, batch-reuse:1
@ 3072 train 4.7063 , allloss: 4.7071, dt: 1049.35ms, fracRes: 0.7637, norm(attn): 0.1748, norm(output): 1.8203, norm(x): 0.3167, norm(y): 0.9679, norm:0.6116, tok/sec: 124907.54, flops:97.28, batch-reuse:1
@ 3073 train 4.6201 , allloss: 4.6208, dt: 1049.21ms, fracRes: 0.7618, norm(attn): 0.1758, norm(output): 1.8359, norm(x): 0.3227, norm(y): 0.9681, norm:0.6698, tok/sec: 124924.71, flops:97.29, batch-reuse:1
@ 3074 train 4.6469 , allloss: 4.6478, dt: 1045.71ms, fracRes: 0.7615, norm(attn): 0.1768, norm(output): 1.8594, norm(x): 0.3219, norm(y): 0.9679, norm:0.5666, tok/sec: 125342.09, flops:97.62, batch-reuse:1
@ 3075 train 4.6923 , allloss: 4.6932, dt: 1047.39ms, fracRes: 0.7612, norm(attn): 0.1748, norm(output): 1.8516, norm(x): 0.3225, norm(y): 0.9679, norm:0.6901, tok/sec: 125141.80, flops:97.46, batch-reuse:1
@ 3076 train 4.6695 , allloss: 4.6705, dt: 1046.68ms, fracRes: 0.7604, norm(attn): 0.1758, norm(output): 1.8672, norm(x): 0.3246, norm(y): 0.9678, norm:0.8660, tok/sec: 125226.40, flops:97.53, batch-reuse:1
@ 3077 train 4.6316 , allloss: 4.6323, dt: 1051.18ms, fracRes: 0.7610, norm(attn): 0.1758, norm(output): 1.8516, norm(x): 0.3230, norm(y): 0.9681, norm:0.6760, tok/sec: 124690.02, flops:97.11, batch-reuse:1
@ 3078 train 4.6328 , allloss: 4.6337, dt: 1045.46ms, fracRes: 0.7632, norm(attn): 0.1758, norm(output): 1.8281, norm(x): 0.3183, norm(y): 0.9679, norm:0.5985, tok/sec: 125372.79, flops:97.64, batch-reuse:1
@ 3079 train 4.5841 , allloss: 4.5850, dt: 1042.03ms, fracRes: 0.7608, norm(attn): 0.1758, norm(output): 1.8594, norm(x): 0.3247, norm(y): 0.9679, norm:0.6238, tok/sec: 125785.78, flops:97.96, batch-reuse:1
@ 3080 train 4.7411 , allloss: 4.7419, dt: 1046.57ms, fracRes: 0.7613, norm(attn): 0.1748, norm(output): 1.8516, norm(x): 0.3240, norm(y): 0.9678, norm:0.5866, tok/sec: 125239.87, flops:97.54, batch-reuse:1
@ 3081 train 4.6984 , allloss: 4.6993, dt: 1047.65ms, fracRes: 0.7626, norm(attn): 0.1729, norm(output): 1.8438, norm(x): 0.3201, norm(y): 0.9677, norm:0.6322, tok/sec: 125110.79, flops:97.44, batch-reuse:1
@ 3082 train 4.7366 , allloss: 4.7375, dt: 1050.20ms, fracRes: 0.7624, norm(attn): 0.1777, norm(output): 1.8359, norm(x): 0.3196, norm(y): 0.9679, norm:0.6056, tok/sec: 124806.14, flops:97.20, batch-reuse:1
@ 3083 train 4.6123 , allloss: 4.6130, dt: 1047.46ms, fracRes: 0.7611, norm(attn): 0.1777, norm(output): 1.8281, norm(x): 0.3214, norm(y): 0.9680, norm:0.6130, tok/sec: 125133.60, flops:97.45, batch-reuse:1
@ 3084 train 4.6057 , allloss: 4.6065, dt: 1050.88ms, fracRes: 0.7611, norm(attn): 0.1768, norm(output): 1.8359, norm(x): 0.3217, norm(y): 0.9677, norm:0.6686, tok/sec: 124726.32, flops:97.14, batch-reuse:1
@ 3085 train 4.7660 , allloss: 4.7668, dt: 1048.43ms, fracRes: 0.7647, norm(attn): 0.1738, norm(output): 1.8125, norm(x): 0.3136, norm(y): 0.9677, norm:0.7191, tok/sec: 125016.81, flops:97.36, batch-reuse:1
@ 3086 train 4.6314 , allloss: 4.6322, dt: 1049.15ms, fracRes: 0.7651, norm(attn): 0.1758, norm(output): 1.8125, norm(x): 0.3147, norm(y): 0.9675, norm:0.6814, tok/sec: 124931.78, flops:97.30, batch-reuse:1
@ 3087 train 4.6709 , allloss: 4.6717, dt: 1060.13ms, fracRes: 0.7621, norm(attn): 0.1758, norm(output): 1.8359, norm(x): 0.3202, norm(y): 0.9677, norm:0.6256, tok/sec: 123638.21, flops:96.29, batch-reuse:1
@ 3088 train 4.6527 , allloss: 4.6534, dt: 1050.75ms, fracRes: 0.7605, norm(attn): 0.1748, norm(output): 1.8281, norm(x): 0.3234, norm(y): 0.9678, norm:0.5829, tok/sec: 124741.94, flops:97.15, batch-reuse:1
@ 3089 train 4.6675 , allloss: 4.6685, dt: 1062.84ms, fracRes: 0.7623, norm(attn): 0.1758, norm(output): 1.8438, norm(x): 0.3208, norm(y): 0.9675, norm:0.6430, tok/sec: 123322.84, flops:96.04, batch-reuse:1
@ 3090 train 4.5991 , allloss: 4.5999, dt: 1056.87ms, fracRes: 0.7618, norm(attn): 0.1768, norm(output): 1.8594, norm(x): 0.3250, norm(y): 0.9677, norm:0.8309, tok/sec: 124018.45, flops:96.59, batch-reuse:1
@ 3091 train 4.8231 , allloss: 4.8242, dt: 1050.99ms, fracRes: 0.7637, norm(attn): 0.1748, norm(output): 1.8203, norm(x): 0.3197, norm(y): 0.9675, norm:0.8258, tok/sec: 124713.27, flops:97.13, batch-reuse:1
@ 3092 train 4.6495 , allloss: 4.6504, dt: 1053.66ms, fracRes: 0.7613, norm(attn): 0.1777, norm(output): 1.8203, norm(x): 0.3229, norm(y): 0.9677, norm:0.5625, tok/sec: 124397.27, flops:96.88, batch-reuse:1
@ 3093 train 4.6692 , allloss: 4.6702, dt: 1042.93ms, fracRes: 0.7616, norm(attn): 0.1738, norm(output): 1.8203, norm(x): 0.3211, norm(y): 0.9676, norm:0.5717, tok/sec: 125677.14, flops:97.88, batch-reuse:1
@ 3094 train 4.6544 , allloss: 4.6554, dt: 1046.77ms, fracRes: 0.7609, norm(attn): 0.1758, norm(output): 1.8281, norm(x): 0.3216, norm(y): 0.9674, norm:0.6585, tok/sec: 125215.48, flops:97.52, batch-reuse:1
@ 3095 train 4.6484 , allloss: 4.6493, dt: 1047.90ms, fracRes: 0.7603, norm(attn): 0.1768, norm(output): 1.8281, norm(x): 0.3237, norm(y): 0.9676, norm:0.6190, tok/sec: 125080.67, flops:97.41, batch-reuse:1
@ 3096 train 4.7709 , allloss: 4.7719, dt: 1050.38ms, fracRes: 0.7616, norm(attn): 0.1738, norm(output): 1.8516, norm(x): 0.3218, norm(y): 0.9674, norm:0.5683, tok/sec: 124785.74, flops:97.18, batch-reuse:1
@ 3097 train 4.6904 , allloss: 4.6913, dt: 1050.32ms, fracRes: 0.7623, norm(attn): 0.1729, norm(output): 1.8359, norm(x): 0.3197, norm(y): 0.9674, norm:0.6830, tok/sec: 124792.03, flops:97.19, batch-reuse:1
@ 3098 train 4.6378 , allloss: 4.6387, dt: 1047.05ms, fracRes: 0.7599, norm(attn): 0.1748, norm(output): 1.8516, norm(x): 0.3245, norm(y): 0.9676, norm:0.6579, tok/sec: 125181.98, flops:97.49, batch-reuse:1
@ 3099 train 4.6892 , allloss: 4.6901, dt: 1064.19ms, fracRes: 0.7611, norm(attn): 0.1748, norm(output): 1.8438, norm(x): 0.3218, norm(y): 0.9674, norm:0.6605, tok/sec: 123166.37, flops:95.92, batch-reuse:1
@ 3100 train 4.5803 , allloss: 4.5811, dt: 1052.53ms, fracRes: 0.7611, norm(attn): 0.1758, norm(output): 1.8359, norm(x): 0.3215, norm(y): 0.9674, norm:0.6576, tok/sec: 124530.78, flops:96.99, batch-reuse:1
@ 3101 train 4.6341 , allloss: 4.6349, dt: 1052.96ms, fracRes: 0.7620, norm(attn): 0.1738, norm(output): 1.8516, norm(x): 0.3222, norm(y): 0.9673, norm:0.5840, tok/sec: 124479.74, flops:96.95, batch-reuse:1
@ 3102 train 4.6909 , allloss: 4.6919, dt: 1066.40ms, fracRes: 0.7620, norm(attn): 0.1758, norm(output): 1.8438, norm(x): 0.3203, norm(y): 0.9672, norm:0.5812, tok/sec: 122910.23, flops:95.72, batch-reuse:1
@ 3103 train 4.6588 , allloss: 4.6597, dt: 1057.23ms, fracRes: 0.7612, norm(attn): 0.1787, norm(output): 1.8594, norm(x): 0.3235, norm(y): 0.9673, norm:0.5374, tok/sec: 123976.50, flops:96.55, batch-reuse:1
@ 3104 train 4.5507 , allloss: 4.5517, dt: 1050.06ms, fracRes: 0.7605, norm(attn): 0.1768, norm(output): 1.8594, norm(x): 0.3252, norm(y): 0.9673, norm:0.6185, tok/sec: 124823.68, flops:97.21, batch-reuse:1
@ 3105 train 4.7673 , allloss: 4.7683, dt: 1051.60ms, fracRes: 0.7630, norm(attn): 0.1758, norm(output): 1.8359, norm(x): 0.3202, norm(y): 0.9670, norm:0.6744, tok/sec: 124640.58, flops:97.07, batch-reuse:1
@ 3106 train 4.5732 , allloss: 4.5740, dt: 1056.46ms, fracRes: 0.7607, norm(attn): 0.1768, norm(output): 1.8438, norm(x): 0.3253, norm(y): 0.9672, norm:0.7059, tok/sec: 124066.79, flops:96.62, batch-reuse:1
@ 3107 train 4.5932 , allloss: 4.5941, dt: 1048.32ms, fracRes: 0.7599, norm(attn): 0.1787, norm(output): 1.8516, norm(x): 0.3292, norm(y): 0.9671, norm:0.7324, tok/sec: 125031.00, flops:97.37, batch-reuse:1
@ 3108 train 4.6419 , allloss: 4.6428, dt: 1061.98ms, fracRes: 0.7622, norm(attn): 0.1758, norm(output): 1.8359, norm(x): 0.3231, norm(y): 0.9670, norm:0.8069, tok/sec: 123422.09, flops:96.12, batch-reuse:1
@ 3109 train 4.5860 , allloss: 4.5869, dt: 1045.92ms, fracRes: 0.7635, norm(attn): 0.1787, norm(output): 1.8359, norm(x): 0.3212, norm(y): 0.9670, norm:0.6678, tok/sec: 125316.84, flops:97.60, batch-reuse:1
@ 3110 train 4.5757 , allloss: 4.5763, dt: 1063.02ms, fracRes: 0.7613, norm(attn): 0.1787, norm(output): 1.8203, norm(x): 0.3224, norm(y): 0.9672, norm:0.6168, tok/sec: 123301.43, flops:96.03, batch-reuse:1
@ 3111 train 4.7117 , allloss: 4.7126, dt: 1051.45ms, fracRes: 0.7625, norm(attn): 0.1777, norm(output): 1.8125, norm(x): 0.3189, norm(y): 0.9670, norm:0.5585, tok/sec: 124658.36, flops:97.08, batch-reuse:1
@ 3112 train 4.5447 , allloss: 4.5455, dt: 1051.35ms, fracRes: 0.7598, norm(attn): 0.1787, norm(output): 1.8516, norm(x): 0.3282, norm(y): 0.9671, norm:0.6038, tok/sec: 124670.03, flops:97.09, batch-reuse:1
@ 3113 train 4.5938 , allloss: 4.5947, dt: 1059.46ms, fracRes: 0.7619, norm(attn): 0.1758, norm(output): 1.8281, norm(x): 0.3249, norm(y): 0.9670, norm:0.5800, tok/sec: 123716.23, flops:96.35, batch-reuse:1
@ 3114 train 4.6247 , allloss: 4.6256, dt: 1053.48ms, fracRes: 0.7627, norm(attn): 0.1768, norm(output): 1.8438, norm(x): 0.3225, norm(y): 0.9669, norm:0.5916, tok/sec: 124417.90, flops:96.90, batch-reuse:1
@ 3115 train 4.5939 , allloss: 4.5948, dt: 1065.65ms, fracRes: 0.7606, norm(attn): 0.1768, norm(output): 1.8281, norm(x): 0.3250, norm(y): 0.9670, norm:0.7259, tok/sec: 122997.54, flops:95.79, batch-reuse:1
@ 3116 train 4.5589 , allloss: 4.5598, dt: 1062.38ms, fracRes: 0.7627, norm(attn): 0.1768, norm(output): 1.8359, norm(x): 0.3226, norm(y): 0.9669, norm:0.6903, tok/sec: 123375.45, flops:96.09, batch-reuse:1
@ 3117 train 4.5820 , allloss: 4.5831, dt: 1052.49ms, fracRes: 0.7632, norm(attn): 0.1777, norm(output): 1.8359, norm(x): 0.3226, norm(y): 0.9668, norm:0.6681, tok/sec: 124535.69, flops:96.99, batch-reuse:1
@ 3118 train 4.5083 , allloss: 4.5092, dt: 1064.35ms, fracRes: 0.7603, norm(attn): 0.1768, norm(output): 1.8438, norm(x): 0.3257, norm(y): 0.9669, norm:0.6907, tok/sec: 123147.28, flops:95.91, batch-reuse:1
@ 3119 train 4.8492 , allloss: 4.8504, dt: 1061.34ms, fracRes: 0.7604, norm(attn): 0.1777, norm(output): 1.8516, norm(x): 0.3246, norm(y): 0.9665, norm:0.8031, tok/sec: 123496.73, flops:96.18, batch-reuse:1
@ 3120 train 4.6059 , allloss: 4.6068, dt: 1056.86ms, fracRes: 0.7587, norm(attn): 0.1777, norm(output): 1.8594, norm(x): 0.3289, norm(y): 0.9669, norm:0.7364, tok/sec: 124019.71, flops:96.59, batch-reuse:1
@ 3121 train 4.4404 , allloss: 4.4413, dt: 1078.29ms, fracRes: 0.7607, norm(attn): 0.1787, norm(output): 1.8594, norm(x): 0.3273, norm(y): 0.9669, norm:1.1090, tok/sec: 121555.83, flops:94.67, batch-reuse:1
@ 3122 train 4.5339 , allloss: 4.5353, dt: 1076.17ms, fracRes: 0.7610, norm(attn): 0.1816, norm(output): 1.8594, norm(x): 0.3272, norm(y): 0.9670, norm:0.8576, tok/sec: 121794.67, flops:94.85, batch-reuse:1
@ 3123 train 4.7783 , allloss: 4.7795, dt: 1051.63ms, fracRes: 0.7621, norm(attn): 0.1797, norm(output): 1.8594, norm(x): 0.3240, norm(y): 0.9667, norm:0.9321, tok/sec: 124637.36, flops:97.07, batch-reuse:1
@ 3124 train 4.6737 , allloss: 4.6747, dt: 1075.39ms, fracRes: 0.7599, norm(attn): 0.1787, norm(output): 1.9062, norm(x): 0.3290, norm(y): 0.9666, norm:0.8983, tok/sec: 121882.94, flops:94.92, batch-reuse:1
@ 3125 train 4.6447 , allloss: 4.6457, dt: 1045.67ms, fracRes: 0.7618, norm(attn): 0.1758, norm(output): 1.8594, norm(x): 0.3225, norm(y): 0.9666, norm:0.9960, tok/sec: 125347.15, flops:97.62, batch-reuse:1
@ 3126 train 4.4746 , allloss: 4.4755, dt: 1045.43ms, fracRes: 0.7617, norm(attn): 0.1816, norm(output): 1.8516, norm(x): 0.3247, norm(y): 0.9667, norm:0.7555, tok/sec: 125376.65, flops:97.64, batch-reuse:1
@ 3127 train 4.5894 , allloss: 4.5902, dt: 1045.10ms, fracRes: 0.7615, norm(attn): 0.1816, norm(output): 1.8438, norm(x): 0.3263, norm(y): 0.9668, norm:0.8917, tok/sec: 125415.64, flops:97.67, batch-reuse:1
@ 3128 train 4.6152 , allloss: 4.6161, dt: 1056.20ms, fracRes: 0.7600, norm(attn): 0.1768, norm(output): 1.8750, norm(x): 0.3308, norm(y): 0.9667, norm:1.0391, tok/sec: 124097.87, flops:96.65, batch-reuse:1
@ 3129 train 4.4557 , allloss: 4.4564, dt: 1045.43ms, fracRes: 0.7601, norm(attn): 0.1787, norm(output): 1.8750, norm(x): 0.3315, norm(y): 0.9668, norm:0.7570, tok/sec: 125375.91, flops:97.64, batch-reuse:1
@ 3130 train 4.5777 , allloss: 4.5785, dt: 1063.49ms, fracRes: 0.7621, norm(attn): 0.1816, norm(output): 1.8672, norm(x): 0.3263, norm(y): 0.9668, norm:0.7156, tok/sec: 123247.08, flops:95.99, batch-reuse:1
@ 3131 train 4.4369 , allloss: 4.4379, dt: 1055.03ms, fracRes: 0.7612, norm(attn): 0.1797, norm(output): 1.8750, norm(x): 0.3287, norm(y): 0.9667, norm:0.6061, tok/sec: 124234.84, flops:96.75, batch-reuse:1
@ 3132 train 4.5013 , allloss: 4.5020, dt: 1052.10ms, fracRes: 0.7593, norm(attn): 0.1777, norm(output): 1.8906, norm(x): 0.3339, norm(y): 0.9667, norm:0.7401, tok/sec: 124581.38, flops:97.02, batch-reuse:1
@ 3133 train 4.5241 , allloss: 4.5250, dt: 1046.22ms, fracRes: 0.7642, norm(attn): 0.1777, norm(output): 1.8672, norm(x): 0.3234, norm(y): 0.9665, norm:0.6570, tok/sec: 125281.80, flops:97.57, batch-reuse:1
@ 3134 train 4.5174 , allloss: 4.5183, dt: 1052.53ms, fracRes: 0.7625, norm(attn): 0.1768, norm(output): 1.8750, norm(x): 0.3247, norm(y): 0.9664, norm:0.6501, tok/sec: 124530.72, flops:96.98, batch-reuse:1
@ 3135 train 4.5109 , allloss: 4.5117, dt: 1036.72ms, fracRes: 0.7610, norm(attn): 0.1787, norm(output): 1.8672, norm(x): 0.3243, norm(y): 0.9668, norm:0.6365, tok/sec: 126430.03, flops:98.46, batch-reuse:1
@ 3136 train 4.5524 , allloss: 4.5533, dt: 1044.53ms, fracRes: 0.7605, norm(attn): 0.1797, norm(output): 1.8750, norm(x): 0.3250, norm(y): 0.9666, norm:0.7788, tok/sec: 125484.69, flops:97.73, batch-reuse:1
@ 3137 train 4.5604 , allloss: 4.5612, dt: 1049.96ms, fracRes: 0.7616, norm(attn): 0.1787, norm(output): 1.8750, norm(x): 0.3263, norm(y): 0.9666, norm:0.6133, tok/sec: 124835.10, flops:97.22, batch-reuse:1
@ 3138 train 4.6128 , allloss: 4.6135, dt: 1054.78ms, fracRes: 0.7622, norm(attn): 0.1768, norm(output): 1.8750, norm(x): 0.3271, norm(y): 0.9664, norm:0.5851, tok/sec: 124264.61, flops:96.78, batch-reuse:1
@ 3139 train 4.5167 , allloss: 4.5176, dt: 1063.68ms, fracRes: 0.7623, norm(attn): 0.1777, norm(output): 1.8750, norm(x): 0.3285, norm(y): 0.9664, norm:0.5789, tok/sec: 123224.76, flops:95.97, batch-reuse:1
@ 3140 train 4.5732 , allloss: 4.5740, dt: 1064.22ms, fracRes: 0.7621, norm(attn): 0.1777, norm(output): 1.8672, norm(x): 0.3268, norm(y): 0.9665, norm:0.6241, tok/sec: 123162.12, flops:95.92, batch-reuse:1
@ 3141 train 4.5743 , allloss: 4.5753, dt: 1060.96ms, fracRes: 0.7609, norm(attn): 0.1777, norm(output): 1.8672, norm(x): 0.3281, norm(y): 0.9663, norm:0.6662, tok/sec: 123540.63, flops:96.21, batch-reuse:1
@ 3142 train 4.4903 , allloss: 4.4912, dt: 1042.58ms, fracRes: 0.7607, norm(attn): 0.1797, norm(output): 1.8594, norm(x): 0.3279, norm(y): 0.9664, norm:0.6466, tok/sec: 125719.13, flops:97.91, batch-reuse:1
@ 3143 train 4.8698 , allloss: 4.8714, dt: 1055.22ms, fracRes: 0.7677, norm(attn): 0.1777, norm(output): 1.8750, norm(x): 0.3142, norm(y): 0.9657, norm:0.8914, tok/sec: 124213.03, flops:96.74, batch-reuse:1
@ 3144 train 4.5842 , allloss: 4.5853, dt: 1044.32ms, fracRes: 0.7603, norm(attn): 0.1787, norm(output): 1.8828, norm(x): 0.3310, norm(y): 0.9663, norm:0.9872, tok/sec: 125509.72, flops:97.75, batch-reuse:1
@ 3145 train 4.5455 , allloss: 4.5464, dt: 1052.99ms, fracRes: 0.7620, norm(attn): 0.1797, norm(output): 1.8594, norm(x): 0.3264, norm(y): 0.9663, norm:0.7581, tok/sec: 124475.51, flops:96.94, batch-reuse:1
@ 3146 train 4.5025 , allloss: 4.5035, dt: 1047.35ms, fracRes: 0.7601, norm(attn): 0.1816, norm(output): 1.8750, norm(x): 0.3324, norm(y): 0.9666, norm:0.7268, tok/sec: 125146.24, flops:97.46, batch-reuse:1
@ 3147 train 4.4869 , allloss: 4.4879, dt: 1055.66ms, fracRes: 0.7613, norm(attn): 0.1797, norm(output): 1.8672, norm(x): 0.3271, norm(y): 0.9665, norm:0.6811, tok/sec: 124160.88, flops:96.70, batch-reuse:1
@ 3148 train 4.5811 , allloss: 4.5821, dt: 1048.98ms, fracRes: 0.7620, norm(attn): 0.1768, norm(output): 1.8516, norm(x): 0.3251, norm(y): 0.9662, norm:0.6644, tok/sec: 124951.49, flops:97.31, batch-reuse:1
@ 3149 train 4.6009 , allloss: 4.6017, dt: 1047.86ms, fracRes: 0.7618, norm(attn): 0.1768, norm(output): 1.8594, norm(x): 0.3274, norm(y): 0.9662, norm:0.6291, tok/sec: 125084.94, flops:97.42, batch-reuse:1
@ 3150 train 4.5765 , allloss: 4.5773, dt: 1056.20ms, fracRes: 0.7615, norm(attn): 0.1777, norm(output): 1.8672, norm(x): 0.3262, norm(y): 0.9662, norm:0.6421, tok/sec: 124097.96, flops:96.65, batch-reuse:1
@ 3151 train 4.5466 , allloss: 4.5474, dt: 1068.97ms, fracRes: 0.7608, norm(attn): 0.1777, norm(output): 1.8750, norm(x): 0.3265, norm(y): 0.9662, norm:0.6686, tok/sec: 122615.31, flops:95.49, batch-reuse:1
@ 3152 train 4.5480 , allloss: 4.5488, dt: 1063.20ms, fracRes: 0.7618, norm(attn): 0.1768, norm(output): 1.8672, norm(x): 0.3251, norm(y): 0.9662, norm:0.5893, tok/sec: 123280.80, flops:96.01, batch-reuse:1
@ 3153 train 4.5244 , allloss: 4.5252, dt: 1048.98ms, fracRes: 0.7595, norm(attn): 0.1797, norm(output): 1.8750, norm(x): 0.3319, norm(y): 0.9663, norm:0.5567, tok/sec: 124951.97, flops:97.31, batch-reuse:1
@ 3154 train 4.6026 , allloss: 4.6034, dt: 1062.05ms, fracRes: 0.7612, norm(attn): 0.1787, norm(output): 1.8750, norm(x): 0.3277, norm(y): 0.9661, norm:0.5676, tok/sec: 123414.64, flops:96.12, batch-reuse:1
@ 3155 train 4.4561 , allloss: 4.4567, dt: 1047.29ms, fracRes: 0.7614, norm(attn): 0.1797, norm(output): 1.8750, norm(x): 0.3266, norm(y): 0.9661, norm:0.5775, tok/sec: 125153.85, flops:97.47, batch-reuse:1
@ 3156 train 4.5220 , allloss: 4.5228, dt: 1049.39ms, fracRes: 0.7616, norm(attn): 0.1768, norm(output): 1.8672, norm(x): 0.3250, norm(y): 0.9660, norm:0.5542, tok/sec: 124903.26, flops:97.28, batch-reuse:1
@ 3157 train 4.5931 , allloss: 4.5939, dt: 1046.51ms, fracRes: 0.7610, norm(attn): 0.1777, norm(output): 1.8828, norm(x): 0.3262, norm(y): 0.9660, norm:0.5623, tok/sec: 125246.75, flops:97.54, batch-reuse:1
@ 3158 train 4.5273 , allloss: 4.5280, dt: 1063.26ms, fracRes: 0.7595, norm(attn): 0.1777, norm(output): 1.8828, norm(x): 0.3306, norm(y): 0.9660, norm:0.6222, tok/sec: 123273.45, flops:96.01, batch-reuse:1
@ 3159 train 4.4715 , allloss: 4.4722, dt: 1054.90ms, fracRes: 0.7612, norm(attn): 0.1787, norm(output): 1.8828, norm(x): 0.3286, norm(y): 0.9661, norm:0.5845, tok/sec: 124251.18, flops:96.77, batch-reuse:1
@ 3160 train 4.7264 , allloss: 4.7273, dt: 1056.55ms, fracRes: 0.7626, norm(attn): 0.1748, norm(output): 1.8672, norm(x): 0.3256, norm(y): 0.9658, norm:0.5694, tok/sec: 124056.12, flops:96.62, batch-reuse:1
@ 3161 train 4.7133 , allloss: 4.7145, dt: 1051.87ms, fracRes: 0.7644, norm(attn): 0.1738, norm(output): 1.8672, norm(x): 0.3217, norm(y): 0.9656, norm:0.7386, tok/sec: 124608.32, flops:97.05, batch-reuse:1
@ 3162 train 4.6200 , allloss: 4.6210, dt: 1070.94ms, fracRes: 0.7595, norm(attn): 0.1777, norm(output): 1.8906, norm(x): 0.3301, norm(y): 0.9657, norm:0.6181, tok/sec: 122389.51, flops:95.32, batch-reuse:1
@ 3163 train 4.7259 , allloss: 4.7269, dt: 1060.11ms, fracRes: 0.7625, norm(attn): 0.1748, norm(output): 1.8672, norm(x): 0.3225, norm(y): 0.9656, norm:0.6208, tok/sec: 123639.46, flops:96.29, batch-reuse:1
@ 3164 train 4.6955 , allloss: 4.6968, dt: 1056.51ms, fracRes: 0.7638, norm(attn): 0.1758, norm(output): 1.8828, norm(x): 0.3201, norm(y): 0.9655, norm:0.6375, tok/sec: 124061.10, flops:96.62, batch-reuse:1
@ 3165 train 4.6949 , allloss: 4.6959, dt: 1064.54ms, fracRes: 0.7620, norm(attn): 0.1758, norm(output): 1.8906, norm(x): 0.3264, norm(y): 0.9656, norm:0.5829, tok/sec: 123125.08, flops:95.89, batch-reuse:1
@ 3166 train 4.8455 , allloss: 4.8467, dt: 1045.69ms, fracRes: 0.7621, norm(attn): 0.1758, norm(output): 1.8750, norm(x): 0.3251, norm(y): 0.9653, norm:0.9662, tok/sec: 125344.64, flops:97.62, batch-reuse:1
@ 3167 train 4.6281 , allloss: 4.6291, dt: 1051.30ms, fracRes: 0.7629, norm(attn): 0.1768, norm(output): 1.8594, norm(x): 0.3214, norm(y): 0.9657, norm:0.9322, tok/sec: 124676.02, flops:97.10, batch-reuse:1
@ 3168 train 4.6916 , allloss: 4.6923, dt: 1057.99ms, fracRes: 0.7615, norm(attn): 0.1777, norm(output): 1.8672, norm(x): 0.3264, norm(y): 0.9657, norm:0.8470, tok/sec: 123887.63, flops:96.48, batch-reuse:1
@ 3169 train 4.7744 , allloss: 4.7753, dt: 1055.91ms, fracRes: 0.7642, norm(attn): 0.1777, norm(output): 1.8672, norm(x): 0.3212, norm(y): 0.9655, norm:0.7432, tok/sec: 124131.89, flops:96.67, batch-reuse:1
@ 3170 train 4.6968 , allloss: 4.6977, dt: 1054.99ms, fracRes: 0.7619, norm(attn): 0.1777, norm(output): 1.8750, norm(x): 0.3281, norm(y): 0.9654, norm:0.7823, tok/sec: 124239.47, flops:96.76, batch-reuse:1
@ 3171 train 4.7097 , allloss: 4.7105, dt: 1063.70ms, fracRes: 0.7609, norm(attn): 0.1777, norm(output): 1.8750, norm(x): 0.3279, norm(y): 0.9654, norm:0.7484, tok/sec: 123223.02, flops:95.97, batch-reuse:1
@ 3172 train 4.7162 , allloss: 4.7174, dt: 1051.09ms, fracRes: 0.7645, norm(attn): 0.1758, norm(output): 1.8750, norm(x): 0.3198, norm(y): 0.9652, norm:0.7162, tok/sec: 124700.71, flops:97.12, batch-reuse:1
@ 3173 train 4.7066 , allloss: 4.7083, dt: 1053.43ms, fracRes: 0.7629, norm(attn): 0.1758, norm(output): 1.8906, norm(x): 0.3251, norm(y): 0.9652, norm:0.7394, tok/sec: 124423.76, flops:96.90, batch-reuse:1
@ 3174 train 4.7493 , allloss: 4.7504, dt: 1052.78ms, fracRes: 0.7623, norm(attn): 0.1738, norm(output): 1.8828, norm(x): 0.3287, norm(y): 0.9652, norm:0.7314, tok/sec: 124500.91, flops:96.96, batch-reuse:1
@ 3175 train 4.7215 , allloss: 4.7249, dt: 1045.91ms, fracRes: 0.7630, norm(attn): 0.1748, norm(output): 1.8750, norm(x): 0.3269, norm(y): 0.9652, norm:0.7324, tok/sec: 125318.86, flops:97.60, batch-reuse:1
@ 3176 train 4.7003 , allloss: 4.7019, dt: 1054.99ms, fracRes: 0.7639, norm(attn): 0.1748, norm(output): 1.8594, norm(x): 0.3221, norm(y): 0.9652, norm:0.5979, tok/sec: 124239.87, flops:96.76, batch-reuse:1
@ 3177 train 4.6286 , allloss: 4.6297, dt: 1056.61ms, fracRes: 0.7610, norm(attn): 0.1758, norm(output): 1.8750, norm(x): 0.3274, norm(y): 0.9653, norm:0.6661, tok/sec: 124049.82, flops:96.61, batch-reuse:1
@ 3178 train 4.8103 , allloss: 4.8116, dt: 1054.83ms, fracRes: 0.7620, norm(attn): 0.1758, norm(output): 1.8828, norm(x): 0.3272, norm(y): 0.9651, norm:0.6712, tok/sec: 124258.34, flops:96.77, batch-reuse:1
@ 3179 train 4.6466 , allloss: 4.6478, dt: 1053.10ms, fracRes: 0.7617, norm(attn): 0.1768, norm(output): 1.8750, norm(x): 0.3268, norm(y): 0.9653, norm:0.7130, tok/sec: 124462.80, flops:96.93, batch-reuse:1
@ 3180 train 4.6993 , allloss: 4.7035, dt: 1050.81ms, fracRes: 0.7634, norm(attn): 0.1748, norm(output): 1.8750, norm(x): 0.3259, norm(y): 0.9651, norm:0.6899, tok/sec: 124733.84, flops:97.14, batch-reuse:1
@ 3181 train 4.7192 , allloss: 4.7202, dt: 1059.59ms, fracRes: 0.7618, norm(attn): 0.1758, norm(output): 1.8672, norm(x): 0.3263, norm(y): 0.9653, norm:0.7921, tok/sec: 123700.92, flops:96.34, batch-reuse:1
@ 3182 train 4.6427 , allloss: 4.6448, dt: 1045.14ms, fracRes: 0.7728, norm(attn): 0.1758, norm(output): 1.8516, norm(x): 0.3072, norm(y): 0.9648, norm:0.9322, tok/sec: 125411.35, flops:97.67, batch-reuse:1
@ 3183 train 4.7670 , allloss: 4.7678, dt: 1055.22ms, fracRes: 0.7608, norm(attn): 0.1787, norm(output): 1.8672, norm(x): 0.3287, norm(y): 0.9653, norm:1.0176, tok/sec: 124212.44, flops:96.74, batch-reuse:1
@ 3184 train 4.7877 , allloss: 4.7891, dt: 1045.64ms, fracRes: 0.7634, norm(attn): 0.1748, norm(output): 1.8750, norm(x): 0.3216, norm(y): 0.9648, norm:0.9347, tok/sec: 125350.90, flops:97.62, batch-reuse:1
@ 3185 train 4.8264 , allloss: 4.8275, dt: 1057.07ms, fracRes: 0.7624, norm(attn): 0.1748, norm(output): 1.8828, norm(x): 0.3264, norm(y): 0.9649, norm:0.8121, tok/sec: 123996.02, flops:96.57, batch-reuse:1
@ 3186 train 4.7396 , allloss: 4.7425, dt: 1063.06ms, fracRes: 0.7635, norm(attn): 0.1758, norm(output): 1.8906, norm(x): 0.3273, norm(y): 0.9647, norm:0.6285, tok/sec: 123297.14, flops:96.02, batch-reuse:1
@ 3187 train 4.6610 , allloss: 4.6624, dt: 1042.30ms, fracRes: 0.7620, norm(attn): 0.1748, norm(output): 1.8828, norm(x): 0.3287, norm(y): 0.9650, norm:0.8497, tok/sec: 125752.23, flops:97.94, batch-reuse:1
@ 3188 train 4.5880 , allloss: 4.5889, dt: 1062.91ms, fracRes: 0.7618, norm(attn): 0.1768, norm(output): 1.8750, norm(x): 0.3276, norm(y): 0.9650, norm:0.6937, tok/sec: 123314.32, flops:96.04, batch-reuse:1
@ 3189 train 4.6531 , allloss: 4.6541, dt: 1047.94ms, fracRes: 0.7626, norm(attn): 0.1768, norm(output): 1.8750, norm(x): 0.3267, norm(y): 0.9651, norm:0.6727, tok/sec: 125075.61, flops:97.41, batch-reuse:1
@ 3190 train 4.7208 , allloss: 4.7228, dt: 1048.17ms, fracRes: 0.7610, norm(attn): 0.1758, norm(output): 1.8828, norm(x): 0.3292, norm(y): 0.9649, norm:0.6929, tok/sec: 125048.09, flops:97.39, batch-reuse:1
@ 3191 train 4.6195 , allloss: 4.6206, dt: 1048.59ms, fracRes: 0.7590, norm(attn): 0.1768, norm(output): 1.8984, norm(x): 0.3334, norm(y): 0.9651, norm:0.7047, tok/sec: 124998.54, flops:97.35, batch-reuse:1
@ 3192 train 4.6612 , allloss: 4.6625, dt: 1044.87ms, fracRes: 0.7612, norm(attn): 0.1787, norm(output): 1.8984, norm(x): 0.3300, norm(y): 0.9648, norm:0.6308, tok/sec: 125442.82, flops:97.70, batch-reuse:1
@ 3193 train 4.6714 , allloss: 4.6727, dt: 1045.02ms, fracRes: 0.7609, norm(attn): 0.1777, norm(output): 1.8828, norm(x): 0.3328, norm(y): 0.9648, norm:0.6031, tok/sec: 125425.88, flops:97.68, batch-reuse:1
@ 3194 train 4.6637 , allloss: 4.6647, dt: 1048.18ms, fracRes: 0.7604, norm(attn): 0.1777, norm(output): 1.8750, norm(x): 0.3320, norm(y): 0.9648, norm:0.6237, tok/sec: 125047.07, flops:97.39, batch-reuse:1
@ 3195 train 4.6837 , allloss: 4.6848, dt: 1059.31ms, fracRes: 0.7623, norm(attn): 0.1768, norm(output): 1.8750, norm(x): 0.3266, norm(y): 0.9647, norm:0.6079, tok/sec: 123733.16, flops:96.36, batch-reuse:1
@ 3196 train 4.6859 , allloss: 4.6868, dt: 1057.09ms, fracRes: 0.7625, norm(attn): 0.1768, norm(output): 1.8672, norm(x): 0.3259, norm(y): 0.9647, norm:0.6469, tok/sec: 123993.08, flops:96.57, batch-reuse:1
@ 3197 train 4.6518 , allloss: 4.6527, dt: 1050.26ms, fracRes: 0.7610, norm(attn): 0.1777, norm(output): 1.8672, norm(x): 0.3287, norm(y): 0.9649, norm:0.6319, tok/sec: 124799.40, flops:97.19, batch-reuse:1
@ 3198 train 4.6074 , allloss: 4.6083, dt: 1044.07ms, fracRes: 0.7617, norm(attn): 0.1777, norm(output): 1.8750, norm(x): 0.3277, norm(y): 0.9647, norm:0.5888, tok/sec: 125539.93, flops:97.77, batch-reuse:1
@ 3199 train 4.6433 , allloss: 4.6443, dt: 1062.13ms, fracRes: 0.7612, norm(attn): 0.1758, norm(output): 1.8750, norm(x): 0.3289, norm(y): 0.9647, norm:0.5858, tok/sec: 123404.83, flops:96.11, batch-reuse:1
@ 3200 train 4.6699 , allloss: 4.6713, dt: 1044.88ms, fracRes: 0.7676, norm(attn): 0.1729, norm(output): 1.8750, norm(x): 0.3208, norm(y): 0.9641, norm:0.8171, tok/sec: 125442.37, flops:97.69, batch-reuse:1
@ 3201 train 4.6897 , allloss: 4.6907, dt: 1054.86ms, fracRes: 0.7634, norm(attn): 0.1729, norm(output): 1.8750, norm(x): 0.3254, norm(y): 0.9644, norm:0.6455, tok/sec: 124255.90, flops:96.77, batch-reuse:1
@ 3202 train 4.7037 , allloss: 4.7047, dt: 1040.38ms, fracRes: 0.7622, norm(attn): 0.1768, norm(output): 1.8750, norm(x): 0.3276, norm(y): 0.9646, norm:0.5868, tok/sec: 125984.16, flops:98.12, batch-reuse:1
@ 3203 train 4.7429 , allloss: 4.7439, dt: 1045.19ms, fracRes: 0.7601, norm(attn): 0.1797, norm(output): 1.8750, norm(x): 0.3333, norm(y): 0.9647, norm:0.6576, tok/sec: 125404.71, flops:97.67, batch-reuse:1
@ 3204 train 4.6285 , allloss: 4.6293, dt: 1059.70ms, fracRes: 0.7598, norm(attn): 0.1787, norm(output): 1.8828, norm(x): 0.3364, norm(y): 0.9646, norm:0.8153, tok/sec: 123687.33, flops:96.33, batch-reuse:1
@ 3205 train 4.6604 , allloss: 4.6613, dt: 1048.64ms, fracRes: 0.7603, norm(attn): 0.1807, norm(output): 1.8672, norm(x): 0.3318, norm(y): 0.9646, norm:1.0162, tok/sec: 124992.68, flops:97.34, batch-reuse:1
@ 3206 train 4.5451 , allloss: 4.5461, dt: 1055.59ms, fracRes: 0.7612, norm(attn): 0.1797, norm(output): 1.8906, norm(x): 0.3342, norm(y): 0.9644, norm:0.7928, tok/sec: 124169.24, flops:96.70, batch-reuse:1
@ 3207 train 4.7721 , allloss: 4.7731, dt: 1051.94ms, fracRes: 0.7634, norm(attn): 0.1807, norm(output): 1.8906, norm(x): 0.3305, norm(y): 0.9644, norm:0.7579, tok/sec: 124600.07, flops:97.04, batch-reuse:1
@ 3208 train 4.7166 , allloss: 4.7175, dt: 1048.44ms, fracRes: 0.7643, norm(attn): 0.1797, norm(output): 1.8750, norm(x): 0.3273, norm(y): 0.9644, norm:0.6884, tok/sec: 125015.68, flops:97.36, batch-reuse:1
@ 3209 train 4.7472 , allloss: 4.7481, dt: 1055.21ms, fracRes: 0.7606, norm(attn): 0.1816, norm(output): 1.8984, norm(x): 0.3339, norm(y): 0.9645, norm:0.7419, tok/sec: 124214.38, flops:96.74, batch-reuse:1
@ 3210 train 4.6375 , allloss: 4.6384, dt: 1054.59ms, fracRes: 0.7613, norm(attn): 0.1826, norm(output): 1.8984, norm(x): 0.3307, norm(y): 0.9644, norm:0.7333, tok/sec: 124286.83, flops:96.80, batch-reuse:1
@ 3211 train 4.6632 , allloss: 4.6641, dt: 1048.89ms, fracRes: 0.7582, norm(attn): 0.1826, norm(output): 1.8906, norm(x): 0.3365, norm(y): 0.9647, norm:0.7320, tok/sec: 124963.02, flops:97.32, batch-reuse:1
@ 3212 train 4.7903 , allloss: 4.7913, dt: 1043.80ms, fracRes: 0.7589, norm(attn): 0.1836, norm(output): 1.9141, norm(x): 0.3347, norm(y): 0.9642, norm:0.7676, tok/sec: 125571.79, flops:97.80, batch-reuse:1
@ 3213 train 4.6877 , allloss: 4.6886, dt: 1040.22ms, fracRes: 0.7611, norm(attn): 0.1797, norm(output): 1.8828, norm(x): 0.3327, norm(y): 0.9642, norm:0.7370, tok/sec: 126004.34, flops:98.13, batch-reuse:1
@ 3214 train 4.7799 , allloss: 4.7808, dt: 1047.48ms, fracRes: 0.7641, norm(attn): 0.1777, norm(output): 1.8750, norm(x): 0.3262, norm(y): 0.9641, norm:0.6520, tok/sec: 125131.26, flops:97.45, batch-reuse:1
@ 3215 train 4.6850 , allloss: 4.6861, dt: 1047.28ms, fracRes: 0.7632, norm(attn): 0.1797, norm(output): 1.8750, norm(x): 0.3263, norm(y): 0.9641, norm:0.7424, tok/sec: 125155.13, flops:97.47, batch-reuse:1
@ 3216 train 4.6781 , allloss: 4.6789, dt: 1043.08ms, fracRes: 0.7607, norm(attn): 0.1797, norm(output): 1.8828, norm(x): 0.3328, norm(y): 0.9644, norm:0.6910, tok/sec: 125658.76, flops:97.86, batch-reuse:1
@ 3217 train 4.6505 , allloss: 4.6513, dt: 1041.72ms, fracRes: 0.7620, norm(attn): 0.1777, norm(output): 1.8984, norm(x): 0.3294, norm(y): 0.9642, norm:0.6433, tok/sec: 125823.26, flops:97.99, batch-reuse:1
@ 3218 train 4.7114 , allloss: 4.7123, dt: 1045.42ms, fracRes: 0.7614, norm(attn): 0.1768, norm(output): 1.8984, norm(x): 0.3314, norm(y): 0.9641, norm:0.6214, tok/sec: 125377.11, flops:97.64, batch-reuse:1
@ 3219 train 4.7588 , allloss: 4.7597, dt: 1044.25ms, fracRes: 0.7606, norm(attn): 0.1797, norm(output): 1.9062, norm(x): 0.3315, norm(y): 0.9641, norm:0.7531, tok/sec: 125518.24, flops:97.75, batch-reuse:1
@ 3220 train 4.6940 , allloss: 4.6951, dt: 1042.16ms, fracRes: 0.7617, norm(attn): 0.1768, norm(output): 1.8984, norm(x): 0.3310, norm(y): 0.9641, norm:1.8450, tok/sec: 125770.04, flops:97.95, batch-reuse:1
@ 3221 train 4.6265 , allloss: 4.6273, dt: 1046.20ms, fracRes: 0.7592, norm(attn): 0.1797, norm(output): 1.9141, norm(x): 0.3361, norm(y): 0.9643, norm:0.7514, tok/sec: 125283.59, flops:97.57, batch-reuse:1
@ 3222 train 4.6812 , allloss: 4.6821, dt: 1053.20ms, fracRes: 0.7615, norm(attn): 0.1787, norm(output): 1.8984, norm(x): 0.3313, norm(y): 0.9641, norm:0.7405, tok/sec: 124450.66, flops:96.92, batch-reuse:1
@ 3223 train 4.6586 , allloss: 4.6596, dt: 1052.62ms, fracRes: 0.7620, norm(attn): 0.1797, norm(output): 1.8906, norm(x): 0.3297, norm(y): 0.9642, norm:0.6582, tok/sec: 124519.21, flops:96.98, batch-reuse:1
@ 3224 train 4.7015 , allloss: 4.7027, dt: 1061.93ms, fracRes: 0.7624, norm(attn): 0.1797, norm(output): 1.8984, norm(x): 0.3313, norm(y): 0.9642, norm:0.7241, tok/sec: 123427.86, flops:96.13, batch-reuse:1
@ 3225 train 4.7142 , allloss: 4.7153, dt: 1054.45ms, fracRes: 0.7618, norm(attn): 0.1787, norm(output): 1.8906, norm(x): 0.3328, norm(y): 0.9640, norm:0.6388, tok/sec: 124303.77, flops:96.81, batch-reuse:1
@ 3226 train 4.6317 , allloss: 4.6326, dt: 1060.39ms, fracRes: 0.7605, norm(attn): 0.1777, norm(output): 1.8984, norm(x): 0.3352, norm(y): 0.9641, norm:0.7178, tok/sec: 123607.52, flops:96.27, batch-reuse:1
@ 3227 train 4.6080 , allloss: 4.6089, dt: 1064.47ms, fracRes: 0.7588, norm(attn): 0.1826, norm(output): 1.9141, norm(x): 0.3384, norm(y): 0.9642, norm:0.7889, tok/sec: 123134.12, flops:95.90, batch-reuse:1
@ 3228 train 4.5536 , allloss: 4.5544, dt: 1066.58ms, fracRes: 0.7616, norm(attn): 0.1797, norm(output): 1.8906, norm(x): 0.3309, norm(y): 0.9641, norm:0.6170, tok/sec: 122890.42, flops:95.71, batch-reuse:1
@ 3229 train 4.6877 , allloss: 4.6886, dt: 1045.60ms, fracRes: 0.7615, norm(attn): 0.1807, norm(output): 1.8906, norm(x): 0.3306, norm(y): 0.9640, norm:0.7211, tok/sec: 125355.98, flops:97.63, batch-reuse:1
@ 3230 train 4.8064 , allloss: 4.8075, dt: 1056.66ms, fracRes: 0.7637, norm(attn): 0.1807, norm(output): 1.8750, norm(x): 0.3274, norm(y): 0.9638, norm:0.6686, tok/sec: 124043.94, flops:96.61, batch-reuse:1
@ 3231 train 4.5908 , allloss: 4.5918, dt: 1041.31ms, fracRes: 0.7599, norm(attn): 0.1816, norm(output): 1.9141, norm(x): 0.3382, norm(y): 0.9639, norm:0.8992, tok/sec: 125872.21, flops:98.03, batch-reuse:1
@ 3232 train 4.6236 , allloss: 4.6245, dt: 1045.74ms, fracRes: 0.7601, norm(attn): 0.1787, norm(output): 1.8906, norm(x): 0.3349, norm(y): 0.9641, norm:0.7080, tok/sec: 125339.18, flops:97.61, batch-reuse:1
@ 3233 train 4.6711 , allloss: 4.6721, dt: 1064.86ms, fracRes: 0.7624, norm(attn): 0.1797, norm(output): 1.9219, norm(x): 0.3322, norm(y): 0.9640, norm:0.7656, tok/sec: 123088.03, flops:95.86, batch-reuse:1
@ 3234 train 4.8324 , allloss: 4.8334, dt: 1070.42ms, fracRes: 0.7629, norm(attn): 0.1777, norm(output): 1.8984, norm(x): 0.3310, norm(y): 0.9639, norm:1.1670, tok/sec: 122448.94, flops:95.36, batch-reuse:1
@ 3235 train 4.6759 , allloss: 4.6771, dt: 1053.69ms, fracRes: 0.7613, norm(attn): 0.1797, norm(output): 1.9219, norm(x): 0.3322, norm(y): 0.9636, norm:0.9460, tok/sec: 124392.79, flops:96.88, batch-reuse:1
@ 3236 train 4.7401 , allloss: 4.7410, dt: 1051.15ms, fracRes: 0.7605, norm(attn): 0.1777, norm(output): 1.9297, norm(x): 0.3369, norm(y): 0.9638, norm:1.0031, tok/sec: 124694.18, flops:97.11, batch-reuse:1
@ 3237 train 4.6131 , allloss: 4.6139, dt: 1044.79ms, fracRes: 0.7608, norm(attn): 0.1777, norm(output): 1.9062, norm(x): 0.3358, norm(y): 0.9639, norm:1.0510, tok/sec: 125452.82, flops:97.70, batch-reuse:1
@ 3238 train 4.6557 , allloss: 4.6566, dt: 1052.61ms, fracRes: 0.7593, norm(attn): 0.1826, norm(output): 1.9062, norm(x): 0.3392, norm(y): 0.9638, norm:0.8235, tok/sec: 124521.22, flops:96.98, batch-reuse:1
@ 3239 train 4.6979 , allloss: 4.6988, dt: 1051.05ms, fracRes: 0.7594, norm(attn): 0.1836, norm(output): 1.9219, norm(x): 0.3373, norm(y): 0.9638, norm:0.9122, tok/sec: 124706.03, flops:97.12, batch-reuse:1
@ 3240 train 4.7459 , allloss: 4.7468, dt: 1064.77ms, fracRes: 0.7613, norm(attn): 0.1787, norm(output): 1.8984, norm(x): 0.3324, norm(y): 0.9637, norm:0.7802, tok/sec: 123098.47, flops:95.87, batch-reuse:1
@ 3241 train 4.6883 , allloss: 4.6892, dt: 1062.86ms, fracRes: 0.7605, norm(attn): 0.1797, norm(output): 1.9062, norm(x): 0.3350, norm(y): 0.9636, norm:0.7768, tok/sec: 123320.07, flops:96.04, batch-reuse:1
@ 3242 train 4.6870 , allloss: 4.6879, dt: 1050.73ms, fracRes: 0.7609, norm(attn): 0.1797, norm(output): 1.9219, norm(x): 0.3356, norm(y): 0.9636, norm:0.7266, tok/sec: 124743.92, flops:97.15, batch-reuse:1
@ 3243 train 4.6534 , allloss: 4.6542, dt: 1059.60ms, fracRes: 0.7612, norm(attn): 0.1807, norm(output): 1.9141, norm(x): 0.3349, norm(y): 0.9638, norm:0.6222, tok/sec: 123699.02, flops:96.34, batch-reuse:1
@ 3244 train 4.6393 , allloss: 4.6403, dt: 1074.86ms, fracRes: 0.7614, norm(attn): 0.1816, norm(output): 1.9062, norm(x): 0.3333, norm(y): 0.9638, norm:0.9966, tok/sec: 121942.96, flops:94.97, batch-reuse:1
@ 3245 train 4.6038 , allloss: 4.6047, dt: 1045.98ms, fracRes: 0.7606, norm(attn): 0.1826, norm(output): 1.9141, norm(x): 0.3372, norm(y): 0.9637, norm:0.6809, tok/sec: 125310.27, flops:97.59, batch-reuse:1
@ 3246 train 4.5723 , allloss: 4.5731, dt: 1058.88ms, fracRes: 0.7609, norm(attn): 0.1826, norm(output): 1.9062, norm(x): 0.3348, norm(y): 0.9637, norm:0.6962, tok/sec: 123783.94, flops:96.40, batch-reuse:1
@ 3247 train 4.6134 , allloss: 4.6142, dt: 1060.79ms, fracRes: 0.7599, norm(attn): 0.1816, norm(output): 1.9297, norm(x): 0.3379, norm(y): 0.9636, norm:0.7242, tok/sec: 123560.49, flops:96.23, batch-reuse:1
@ 3248 train 4.7195 , allloss: 4.7202, dt: 1080.23ms, fracRes: 0.7607, norm(attn): 0.1807, norm(output): 1.9219, norm(x): 0.3360, norm(y): 0.9634, norm:0.6711, tok/sec: 121337.36, flops:94.50, batch-reuse:1
@ 3249 train 4.6060 , allloss: 4.6067, dt: 1048.86ms, fracRes: 0.7606, norm(attn): 0.1816, norm(output): 1.9141, norm(x): 0.3367, norm(y): 0.9635, norm:0.6167, tok/sec: 124966.20, flops:97.32, batch-reuse:1
@ 3250 train 4.5914 , allloss: 4.5921, dt: 1049.87ms, fracRes: 0.7604, norm(attn): 0.1807, norm(output): 1.8984, norm(x): 0.3364, norm(y): 0.9637, norm:0.6208, tok/sec: 124846.22, flops:97.23, batch-reuse:1
@ 3251 train 4.5798 , allloss: 4.5806, dt: 1055.03ms, fracRes: 0.7591, norm(attn): 0.1826, norm(output): 1.9062, norm(x): 0.3369, norm(y): 0.9637, norm:0.6111, tok/sec: 124235.85, flops:96.76, batch-reuse:1
@ 3252 train 4.5747 , allloss: 4.5756, dt: 1040.41ms, fracRes: 0.7590, norm(attn): 0.1807, norm(output): 1.9297, norm(x): 0.3369, norm(y): 0.9637, norm:0.6162, tok/sec: 125980.90, flops:98.11, batch-reuse:1
@ 3253 train 4.7266 , allloss: 4.7278, dt: 1052.43ms, fracRes: 0.7624, norm(attn): 0.1826, norm(output): 1.9062, norm(x): 0.3320, norm(y): 0.9635, norm:0.6913, tok/sec: 124541.92, flops:96.99, batch-reuse:1
@ 3254 train 4.5196 , allloss: 4.5205, dt: 1062.86ms, fracRes: 0.7593, norm(attn): 0.1836, norm(output): 1.8984, norm(x): 0.3388, norm(y): 0.9638, norm:0.6346, tok/sec: 123320.51, flops:96.04, batch-reuse:1
@ 3255 train 4.6255 , allloss: 4.6264, dt: 1061.29ms, fracRes: 0.7578, norm(attn): 0.1816, norm(output): 1.9297, norm(x): 0.3430, norm(y): 0.9636, norm:0.5703, tok/sec: 123502.39, flops:96.18, batch-reuse:1
@ 3256 train 4.6821 , allloss: 4.6830, dt: 1059.25ms, fracRes: 0.7614, norm(attn): 0.1797, norm(output): 1.8984, norm(x): 0.3349, norm(y): 0.9635, norm:0.6142, tok/sec: 123740.76, flops:96.37, batch-reuse:1
@ 3257 train 4.6246 , allloss: 4.6256, dt: 1061.88ms, fracRes: 0.7604, norm(attn): 0.1807, norm(output): 1.9141, norm(x): 0.3383, norm(y): 0.9635, norm:0.7068, tok/sec: 123433.98, flops:96.13, batch-reuse:1
@ 3258 train 4.5909 , allloss: 4.5917, dt: 1060.51ms, fracRes: 0.7593, norm(attn): 0.1816, norm(output): 1.9219, norm(x): 0.3408, norm(y): 0.9635, norm:0.6430, tok/sec: 123593.76, flops:96.26, batch-reuse:1
@ 3259 train 4.6089 , allloss: 4.6097, dt: 1048.83ms, fracRes: 0.7608, norm(attn): 0.1797, norm(output): 1.9219, norm(x): 0.3344, norm(y): 0.9635, norm:0.6248, tok/sec: 124970.26, flops:97.33, batch-reuse:1
@ 3260 train 4.6000 , allloss: 4.6008, dt: 1046.65ms, fracRes: 0.7584, norm(attn): 0.1816, norm(output): 1.9219, norm(x): 0.3407, norm(y): 0.9635, norm:0.5904, tok/sec: 125229.97, flops:97.53, batch-reuse:1
@ 3261 train 4.6245 , allloss: 4.6253, dt: 1058.99ms, fracRes: 0.7615, norm(attn): 0.1807, norm(output): 1.9062, norm(x): 0.3335, norm(y): 0.9635, norm:0.6771, tok/sec: 123771.07, flops:96.39, batch-reuse:1
@ 3262 train 4.5580 , allloss: 4.5590, dt: 1061.62ms, fracRes: 0.7583, norm(attn): 0.1816, norm(output): 1.9219, norm(x): 0.3442, norm(y): 0.9635, norm:0.6513, tok/sec: 123464.22, flops:96.15, batch-reuse:1
@ 3263 train 4.5844 , allloss: 4.5852, dt: 1056.55ms, fracRes: 0.7600, norm(attn): 0.1816, norm(output): 1.9062, norm(x): 0.3380, norm(y): 0.9634, norm:0.7779, tok/sec: 124056.32, flops:96.62, batch-reuse:1
@ 3264 train 4.6511 , allloss: 4.6520, dt: 1057.54ms, fracRes: 0.7606, norm(attn): 0.1797, norm(output): 1.9141, norm(x): 0.3355, norm(y): 0.9634, norm:0.6193, tok/sec: 123940.19, flops:96.53, batch-reuse:1
@ 3265 train 4.5466 , allloss: 4.5475, dt: 1049.31ms, fracRes: 0.7583, norm(attn): 0.1807, norm(output): 1.9297, norm(x): 0.3429, norm(y): 0.9635, norm:0.5724, tok/sec: 124912.37, flops:97.28, batch-reuse:1
@ 3266 train 4.5638 , allloss: 4.5649, dt: 1070.69ms, fracRes: 0.7608, norm(attn): 0.1797, norm(output): 1.9297, norm(x): 0.3382, norm(y): 0.9633, norm:0.6839, tok/sec: 122418.07, flops:95.34, batch-reuse:1
@ 3267 train 4.5366 , allloss: 4.5374, dt: 1050.50ms, fracRes: 0.7588, norm(attn): 0.1826, norm(output): 1.9531, norm(x): 0.3438, norm(y): 0.9635, norm:0.6957, tok/sec: 124771.30, flops:97.17, batch-reuse:1
@ 3268 train 4.5748 , allloss: 4.5757, dt: 1064.81ms, fracRes: 0.7580, norm(attn): 0.1836, norm(output): 1.9219, norm(x): 0.3437, norm(y): 0.9634, norm:0.5741, tok/sec: 123094.12, flops:95.87, batch-reuse:1
@ 3269 train 4.5598 , allloss: 4.5607, dt: 1052.00ms, fracRes: 0.7579, norm(attn): 0.1836, norm(output): 1.9453, norm(x): 0.3429, norm(y): 0.9634, norm:0.5796, tok/sec: 124592.98, flops:97.03, batch-reuse:1
@ 3270 train 4.5866 , allloss: 4.5875, dt: 1048.28ms, fracRes: 0.7595, norm(attn): 0.1836, norm(output): 1.9141, norm(x): 0.3391, norm(y): 0.9634, norm:0.6368, tok/sec: 125035.64, flops:97.38, batch-reuse:1
@ 3271 train 4.5229 , allloss: 4.5236, dt: 1058.80ms, fracRes: 0.7581, norm(attn): 0.1826, norm(output): 1.9297, norm(x): 0.3435, norm(y): 0.9634, norm:0.6509, tok/sec: 123793.06, flops:96.41, batch-reuse:1
@ 3272 train 4.5857 , allloss: 4.5867, dt: 1058.72ms, fracRes: 0.7614, norm(attn): 0.1797, norm(output): 1.9219, norm(x): 0.3359, norm(y): 0.9631, norm:0.6335, tok/sec: 123802.31, flops:96.42, batch-reuse:1
@ 3273 train 4.6004 , allloss: 4.6013, dt: 1040.83ms, fracRes: 0.7596, norm(attn): 0.1826, norm(output): 1.9297, norm(x): 0.3410, norm(y): 0.9634, norm:0.5374, tok/sec: 125929.79, flops:98.07, batch-reuse:1
@ 3274 train 4.5522 , allloss: 4.5529, dt: 1054.81ms, fracRes: 0.7591, norm(attn): 0.1836, norm(output): 1.9141, norm(x): 0.3401, norm(y): 0.9634, norm:0.5514, tok/sec: 124261.38, flops:96.78, batch-reuse:1
@ 3275 train 4.5569 , allloss: 4.5577, dt: 1057.60ms, fracRes: 0.7581, norm(attn): 0.1826, norm(output): 1.9297, norm(x): 0.3413, norm(y): 0.9633, norm:0.5790, tok/sec: 123933.66, flops:96.52, batch-reuse:1
@ 3276 train 4.5907 , allloss: 4.5915, dt: 1052.86ms, fracRes: 0.7589, norm(attn): 0.1816, norm(output): 1.9062, norm(x): 0.3414, norm(y): 0.9634, norm:0.5621, tok/sec: 124491.04, flops:96.95, batch-reuse:1
@ 3277 train 4.5869 , allloss: 4.5877, dt: 1063.19ms, fracRes: 0.7589, norm(attn): 0.1797, norm(output): 1.9297, norm(x): 0.3418, norm(y): 0.9632, norm:0.5131, tok/sec: 123281.71, flops:96.01, batch-reuse:1
@ 3278 train 4.5818 , allloss: 4.5826, dt: 1045.81ms, fracRes: 0.7592, norm(attn): 0.1807, norm(output): 1.9375, norm(x): 0.3408, norm(y): 0.9632, norm:0.6207, tok/sec: 125331.04, flops:97.61, batch-reuse:1
@ 3279 train 4.6467 , allloss: 4.6476, dt: 1044.71ms, fracRes: 0.7603, norm(attn): 0.1797, norm(output): 1.9062, norm(x): 0.3379, norm(y): 0.9632, norm:0.8046, tok/sec: 125462.52, flops:97.71, batch-reuse:1
@ 3280 train 4.5576 , allloss: 4.5586, dt: 1042.54ms, fracRes: 0.7591, norm(attn): 0.1816, norm(output): 1.9062, norm(x): 0.3411, norm(y): 0.9632, norm:0.8725, tok/sec: 125723.65, flops:97.91, batch-reuse:1
@ 3281 train 4.5584 , allloss: 4.5594, dt: 1070.15ms, fracRes: 0.7593, norm(attn): 0.1826, norm(output): 1.9297, norm(x): 0.3431, norm(y): 0.9630, norm:0.6394, tok/sec: 122480.47, flops:95.39, batch-reuse:1
@ 3282 train 4.5408 , allloss: 4.5419, dt: 1041.79ms, fracRes: 0.7607, norm(attn): 0.1816, norm(output): 1.9219, norm(x): 0.3396, norm(y): 0.9629, norm:0.5918, tok/sec: 125813.79, flops:97.98, batch-reuse:1
@ 3283 train 4.6016 , allloss: 4.6029, dt: 1043.61ms, fracRes: 0.7593, norm(attn): 0.1816, norm(output): 1.9531, norm(x): 0.3436, norm(y): 0.9629, norm:0.6974, tok/sec: 125594.25, flops:97.81, batch-reuse:1
@ 3284 train 4.5806 , allloss: 4.5817, dt: 1043.68ms, fracRes: 0.7595, norm(attn): 0.1807, norm(output): 1.9219, norm(x): 0.3420, norm(y): 0.9630, norm:0.8484, tok/sec: 125586.36, flops:97.81, batch-reuse:1
@ 3285 train 4.5460 , allloss: 4.5470, dt: 1060.70ms, fracRes: 0.7604, norm(attn): 0.1797, norm(output): 1.9062, norm(x): 0.3396, norm(y): 0.9630, norm:0.7570, tok/sec: 123571.07, flops:96.24, batch-reuse:1
@ 3286 train 4.6015 , allloss: 4.6027, dt: 1052.95ms, fracRes: 0.7610, norm(attn): 0.1816, norm(output): 1.8984, norm(x): 0.3359, norm(y): 0.9629, norm:0.6982, tok/sec: 124480.64, flops:96.95, batch-reuse:1
@ 3287 train 4.5107 , allloss: 4.5116, dt: 1067.45ms, fracRes: 0.7586, norm(attn): 0.1846, norm(output): 1.8984, norm(x): 0.3424, norm(y): 0.9631, norm:0.6153, tok/sec: 122789.82, flops:95.63, batch-reuse:1
@ 3288 train 4.7881 , allloss: 4.7891, dt: 1048.82ms, fracRes: 0.7635, norm(attn): 0.1826, norm(output): 1.8750, norm(x): 0.3302, norm(y): 0.9630, norm:0.7768, tok/sec: 124970.49, flops:97.33, batch-reuse:1
@ 3289 train 4.7261 , allloss: 4.7271, dt: 1051.84ms, fracRes: 0.7616, norm(attn): 0.1807, norm(output): 1.9062, norm(x): 0.3326, norm(y): 0.9629, norm:0.9261, tok/sec: 124611.96, flops:97.05, batch-reuse:1
@ 3290 train 4.6312 , allloss: 4.6319, dt: 1049.00ms, fracRes: 0.7588, norm(attn): 0.1816, norm(output): 1.9141, norm(x): 0.3424, norm(y): 0.9631, norm:0.8121, tok/sec: 124949.13, flops:97.31, batch-reuse:1
@ 3291 train 4.4886 , allloss: 4.4893, dt: 1058.65ms, fracRes: 0.7642, norm(attn): 0.1816, norm(output): 1.9062, norm(x): 0.3323, norm(y): 0.9630, norm:0.6687, tok/sec: 123810.68, flops:96.42, batch-reuse:1
@ 3292 train 4.7244 , allloss: 4.7251, dt: 1053.55ms, fracRes: 0.7616, norm(attn): 0.1816, norm(output): 1.9219, norm(x): 0.3405, norm(y): 0.9630, norm:0.8508, tok/sec: 124409.77, flops:96.89, batch-reuse:1
@ 3293 train 4.6870 , allloss: 4.6878, dt: 1056.51ms, fracRes: 0.7608, norm(attn): 0.1816, norm(output): 1.9219, norm(x): 0.3410, norm(y): 0.9630, norm:0.8756, tok/sec: 124061.80, flops:96.62, batch-reuse:1
@ 3294 train 4.6339 , allloss: 4.6349, dt: 1063.31ms, fracRes: 0.7630, norm(attn): 0.1797, norm(output): 1.8984, norm(x): 0.3350, norm(y): 0.9627, norm:0.7629, tok/sec: 123267.53, flops:96.00, batch-reuse:1
@ 3295 train 4.4465 , allloss: 4.4473, dt: 1069.94ms, fracRes: 0.7589, norm(attn): 0.1846, norm(output): 1.9375, norm(x): 0.3463, norm(y): 0.9633, norm:0.6764, tok/sec: 122503.76, flops:95.41, batch-reuse:1
@ 3296 train 4.5265 , allloss: 4.5275, dt: 1049.34ms, fracRes: 0.7611, norm(attn): 0.1807, norm(output): 1.9141, norm(x): 0.3408, norm(y): 0.9630, norm:0.7833, tok/sec: 124909.44, flops:97.28, batch-reuse:1
@ 3297 train 4.4107 , allloss: 4.4117, dt: 1061.77ms, fracRes: 0.7596, norm(attn): 0.1846, norm(output): 1.9141, norm(x): 0.3449, norm(y): 0.9629, norm:0.8294, tok/sec: 123447.12, flops:96.14, batch-reuse:1
@ 3298 train 4.4837 , allloss: 4.4847, dt: 1051.57ms, fracRes: 0.7597, norm(attn): 0.1836, norm(output): 1.9219, norm(x): 0.3452, norm(y): 0.9630, norm:0.7544, tok/sec: 124644.51, flops:97.07, batch-reuse:1
@ 3299 train 4.4259 , allloss: 4.4284, dt: 1047.83ms, fracRes: 0.7579, norm(attn): 0.1855, norm(output): 1.9297, norm(x): 0.3462, norm(y): 0.9631, norm:0.7940, tok/sec: 125088.58, flops:97.42, batch-reuse:1
@ 3300 train 4.4664 , allloss: 4.4673, dt: 1057.39ms, fracRes: 0.7583, norm(attn): 0.1836, norm(output): 1.9219, norm(x): 0.3428, norm(y): 0.9629, norm:0.6119, tok/sec: 123958.55, flops:96.54, batch-reuse:1
@ 3301 train 4.4936 , allloss: 4.4945, dt: 1052.89ms, fracRes: 0.7594, norm(attn): 0.1836, norm(output): 1.9219, norm(x): 0.3424, norm(y): 0.9628, norm:0.7058, tok/sec: 124487.32, flops:96.95, batch-reuse:1
@ 3302 train 4.4847 , allloss: 4.4855, dt: 1045.24ms, fracRes: 0.7606, norm(attn): 0.1816, norm(output): 1.9141, norm(x): 0.3389, norm(y): 0.9629, norm:0.6527, tok/sec: 125399.39, flops:97.66, batch-reuse:1
@ 3303 train 4.4096 , allloss: 4.4103, dt: 1059.47ms, fracRes: 0.7591, norm(attn): 0.1855, norm(output): 1.9141, norm(x): 0.3437, norm(y): 0.9629, norm:0.6826, tok/sec: 123715.20, flops:96.35, batch-reuse:1
@ 3304 train 4.5298 , allloss: 4.5304, dt: 1050.94ms, fracRes: 0.7592, norm(attn): 0.1826, norm(output): 1.9062, norm(x): 0.3428, norm(y): 0.9627, norm:0.6930, tok/sec: 124718.99, flops:97.13, batch-reuse:1
@ 3305 train 4.5659 , allloss: 4.5666, dt: 1059.23ms, fracRes: 0.7587, norm(attn): 0.1836, norm(output): 1.9062, norm(x): 0.3427, norm(y): 0.9628, norm:0.6015, tok/sec: 123742.35, flops:96.37, batch-reuse:1
@ 3306 train 4.4225 , allloss: 4.4231, dt: 1071.21ms, fracRes: 0.7588, norm(attn): 0.1855, norm(output): 1.9141, norm(x): 0.3427, norm(y): 0.9627, norm:0.7119, tok/sec: 122359.27, flops:95.29, batch-reuse:1
@ 3307 train 4.4604 , allloss: 4.4610, dt: 1038.87ms, fracRes: 0.7583, norm(attn): 0.1846, norm(output): 1.9219, norm(x): 0.3449, norm(y): 0.9627, norm:0.6065, tok/sec: 126167.64, flops:98.26, batch-reuse:1
@ 3308 train 4.5251 , allloss: 4.5256, dt: 1051.54ms, fracRes: 0.7585, norm(attn): 0.1855, norm(output): 1.8984, norm(x): 0.3439, norm(y): 0.9628, norm:0.6387, tok/sec: 124647.93, flops:97.08, batch-reuse:1
@ 3309 train 4.4664 , allloss: 4.4670, dt: 1048.47ms, fracRes: 0.7573, norm(attn): 0.1855, norm(output): 1.9453, norm(x): 0.3480, norm(y): 0.9628, norm:0.6921, tok/sec: 125012.75, flops:97.36, batch-reuse:1
@ 3310 train 4.5242 , allloss: 4.5250, dt: 1048.09ms, fracRes: 0.7598, norm(attn): 0.1826, norm(output): 1.9375, norm(x): 0.3435, norm(y): 0.9625, norm:0.8620, tok/sec: 125058.39, flops:97.40, batch-reuse:1
@ 3311 train 4.5845 , allloss: 4.5853, dt: 1048.09ms, fracRes: 0.7638, norm(attn): 0.1826, norm(output): 1.9219, norm(x): 0.3359, norm(y): 0.9624, norm:0.9863, tok/sec: 125057.71, flops:97.40, batch-reuse:1
@ 3312 train 4.5071 , allloss: 4.5079, dt: 1053.57ms, fracRes: 0.7611, norm(attn): 0.1836, norm(output): 1.9219, norm(x): 0.3393, norm(y): 0.9626, norm:0.7398, tok/sec: 124406.98, flops:96.89, batch-reuse:1
@ 3313 train 4.5013 , allloss: 4.5022, dt: 1054.43ms, fracRes: 0.7567, norm(attn): 0.1846, norm(output): 1.9688, norm(x): 0.3493, norm(y): 0.9626, norm:0.6378, tok/sec: 124305.54, flops:96.81, batch-reuse:1
@ 3314 train 4.4629 , allloss: 4.4636, dt: 1055.19ms, fracRes: 0.7581, norm(attn): 0.1836, norm(output): 1.9453, norm(x): 0.3447, norm(y): 0.9627, norm:0.7268, tok/sec: 124216.68, flops:96.74, batch-reuse:1
@ 3315 train 4.5899 , allloss: 4.5909, dt: 1067.23ms, fracRes: 0.7589, norm(attn): 0.1826, norm(output): 1.9531, norm(x): 0.3450, norm(y): 0.9626, norm:0.5865, tok/sec: 122814.59, flops:95.65, batch-reuse:1
@ 3316 train 4.5237 , allloss: 4.5249, dt: 1064.86ms, fracRes: 0.7609, norm(attn): 0.1836, norm(output): 1.9531, norm(x): 0.3441, norm(y): 0.9623, norm:0.7863, tok/sec: 123088.61, flops:95.86, batch-reuse:1
@ 3317 train 4.5222 , allloss: 4.5232, dt: 1056.53ms, fracRes: 0.7595, norm(attn): 0.1836, norm(output): 1.9531, norm(x): 0.3452, norm(y): 0.9625, norm:0.6701, tok/sec: 124058.47, flops:96.62, batch-reuse:1
@ 3318 train 4.2629 , allloss: 4.2641, dt: 1049.17ms, fracRes: 0.7605, norm(attn): 0.1855, norm(output): 1.9375, norm(x): 0.3419, norm(y): 0.9624, norm:0.6203, tok/sec: 124929.26, flops:97.30, batch-reuse:1
@ 3319 train 4.5471 , allloss: 4.5498, dt: 1061.16ms, fracRes: 0.7578, norm(attn): 0.1836, norm(output): 1.9531, norm(x): 0.3492, norm(y): 0.9624, norm:0.5742, tok/sec: 123518.12, flops:96.20, batch-reuse:1
@ 3320 train 4.6119 , allloss: 4.6129, dt: 1043.48ms, fracRes: 0.7596, norm(attn): 0.1807, norm(output): 1.9531, norm(x): 0.3426, norm(y): 0.9622, norm:0.5923, tok/sec: 125610.90, flops:97.83, batch-reuse:1
@ 3321 train 4.5018 , allloss: 4.5027, dt: 1056.96ms, fracRes: 0.7569, norm(attn): 0.1836, norm(output): 1.9766, norm(x): 0.3513, norm(y): 0.9625, norm:0.5874, tok/sec: 124008.88, flops:96.58, batch-reuse:1
@ 3322 train 4.4147 , allloss: 4.4158, dt: 1057.32ms, fracRes: 0.7589, norm(attn): 0.1846, norm(output): 1.9609, norm(x): 0.3472, norm(y): 0.9625, norm:0.6323, tok/sec: 123965.96, flops:96.55, batch-reuse:1
@ 3323 train 4.3384 , allloss: 4.3393, dt: 1058.34ms, fracRes: 0.7578, norm(attn): 0.1865, norm(output): 1.9766, norm(x): 0.3512, norm(y): 0.9624, norm:0.6520, tok/sec: 123847.19, flops:96.45, batch-reuse:1
@ 3324 train 4.4518 , allloss: 4.4530, dt: 1051.84ms, fracRes: 0.7567, norm(attn): 0.1855, norm(output): 1.9844, norm(x): 0.3526, norm(y): 0.9625, norm:0.6006, tok/sec: 124612.21, flops:97.05, batch-reuse:1
@ 3325 train 4.5446 , allloss: 4.6750, dt: 1052.96ms, fracRes: 0.7573, norm(attn): 0.1855, norm(output): 2.0781, norm(x): 0.4343, norm(y): 0.9623, norm:1.4112, tok/sec: 124479.52, flops:96.95, batch-reuse:1
@ 3326 train 4.5596 , allloss: 16.1363, dt: 1056.14ms, fracRes: 0.7603, norm(attn): 0.2119, norm(output): 6.1250, norm(x): 7.2680, norm(y): 0.9624, norm:8.5840, tok/sec: 124104.37, flops:96.65, batch-reuse:1
@ 3327 train 4.5666 , allloss: 4.5985, dt: 1068.37ms, fracRes: 0.7581, norm(attn): 0.1855, norm(output): 1.9688, norm(x): 0.3514, norm(y): 0.9624, norm:9.6018, tok/sec: 122684.57, flops:95.55, batch-reuse:1
@ 3328 train 4.4881 , allloss: 4.5324, dt: 1060.00ms, fracRes: 0.7576, norm(attn): 0.1865, norm(output): 1.9922, norm(x): 0.3569, norm(y): 0.9624, norm:1.4792, tok/sec: 123653.31, flops:96.30, batch-reuse:1
@ 3329 train 4.4481 , allloss: 4.4548, dt: 1073.43ms, fracRes: 0.7588, norm(attn): 0.1865, norm(output): 1.9688, norm(x): 0.3506, norm(y): 0.9623, norm:0.9949, tok/sec: 122105.39, flops:95.10, batch-reuse:1
@ 3330 train 4.4622 , allloss: 4.4646, dt: 1045.72ms, fracRes: 0.7596, norm(attn): 0.1865, norm(output): 1.9609, norm(x): 0.3482, norm(y): 0.9622, norm:0.8387, tok/sec: 125341.29, flops:97.62, batch-reuse:1
@ 3331 train 4.2510 , allloss: 4.2521, dt: 1059.56ms, fracRes: 0.7607, norm(attn): 0.1875, norm(output): 1.9453, norm(x): 0.3439, norm(y): 0.9621, norm:0.7455, tok/sec: 123703.78, flops:96.34, batch-reuse:1
@ 3332 train 4.4805 , allloss: 4.4839, dt: 1050.96ms, fracRes: 0.7579, norm(attn): 0.1865, norm(output): 1.9922, norm(x): 0.3512, norm(y): 0.9621, norm:0.8175, tok/sec: 124716.92, flops:97.13, batch-reuse:1
@ 3333 train 4.4409 , allloss: 4.4437, dt: 1052.58ms, fracRes: 0.7583, norm(attn): 0.1875, norm(output): 2.0000, norm(x): 0.3511, norm(y): 0.9621, norm:0.8111, tok/sec: 124524.85, flops:96.98, batch-reuse:1
@ 3334 train 4.4822 , allloss: 4.4834, dt: 1042.73ms, fracRes: 0.7619, norm(attn): 0.1855, norm(output): 1.9609, norm(x): 0.3400, norm(y): 0.9620, norm:0.7246, tok/sec: 125700.99, flops:97.90, batch-reuse:1
@ 3335 train 4.4570 , allloss: 4.4582, dt: 1052.59ms, fracRes: 0.7602, norm(attn): 0.1865, norm(output): 1.9766, norm(x): 0.3428, norm(y): 0.9619, norm:0.6951, tok/sec: 124522.77, flops:96.98, batch-reuse:1
@ 3336 train 4.5485 , allloss: 4.5500, dt: 1056.99ms, fracRes: 0.7598, norm(attn): 0.1846, norm(output): 1.9609, norm(x): 0.3412, norm(y): 0.9617, norm:0.6656, tok/sec: 124004.88, flops:96.58, batch-reuse:1
@ 3337 train 4.4497 , allloss: 4.4510, dt: 1058.52ms, fracRes: 0.7588, norm(attn): 0.1846, norm(output): 1.9766, norm(x): 0.3444, norm(y): 0.9617, norm:0.7303, tok/sec: 123825.96, flops:96.44, batch-reuse:1
@ 3338 train 4.4281 , allloss: 4.4296, dt: 1055.95ms, fracRes: 0.7591, norm(attn): 0.1865, norm(output): 1.9766, norm(x): 0.3434, norm(y): 0.9618, norm:0.6682, tok/sec: 124126.62, flops:96.67, batch-reuse:1
@ 3339 train 4.4600 , allloss: 4.4632, dt: 1059.79ms, fracRes: 0.7595, norm(attn): 0.1855, norm(output): 1.9922, norm(x): 0.3455, norm(y): 0.9617, norm:0.6632, tok/sec: 123677.59, flops:96.32, batch-reuse:1
@ 3340 train 4.3708 , allloss: 4.3729, dt: 1051.70ms, fracRes: 0.7596, norm(attn): 0.1855, norm(output): 1.9844, norm(x): 0.3462, norm(y): 0.9617, norm:0.6306, tok/sec: 124628.43, flops:97.06, batch-reuse:1
@ 3341 train 4.6910 , allloss: 4.6924, dt: 1067.93ms, fracRes: 0.7601, norm(attn): 0.1807, norm(output): 1.9844, norm(x): 0.3438, norm(y): 0.9615, norm:0.8034, tok/sec: 122735.08, flops:95.59, batch-reuse:1
@ 3342 train 4.6229 , allloss: 4.6246, dt: 1065.89ms, fracRes: 0.7606, norm(attn): 0.1846, norm(output): 1.9922, norm(x): 0.3406, norm(y): 0.9611, norm:1.4855, tok/sec: 122969.53, flops:95.77, batch-reuse:1
@ 3343 train 4.6776 , allloss: 4.6790, dt: 1060.88ms, fracRes: 0.7622, norm(attn): 0.1816, norm(output): 1.9688, norm(x): 0.3364, norm(y): 0.9613, norm:0.7950, tok/sec: 123549.93, flops:96.22, batch-reuse:1
@ 3344 train 4.6815 , allloss: 4.6828, dt: 1053.85ms, fracRes: 0.7620, norm(attn): 0.1836, norm(output): 1.9766, norm(x): 0.3378, norm(y): 0.9613, norm:0.7000, tok/sec: 124374.39, flops:96.86, batch-reuse:1
@ 3345 train 4.6169 , allloss: 4.6184, dt: 1044.25ms, fracRes: 0.7599, norm(attn): 0.1855, norm(output): 1.9766, norm(x): 0.3432, norm(y): 0.9614, norm:0.7147, tok/sec: 125517.92, flops:97.75, batch-reuse:1
@ 3346 train 4.6051 , allloss: 4.6068, dt: 1055.34ms, fracRes: 0.7623, norm(attn): 0.1826, norm(output): 1.9688, norm(x): 0.3346, norm(y): 0.9611, norm:0.8285, tok/sec: 124198.33, flops:96.73, batch-reuse:1
@ 3347 train 4.6333 , allloss: 4.6347, dt: 1049.14ms, fracRes: 0.7609, norm(attn): 0.1846, norm(output): 1.9609, norm(x): 0.3396, norm(y): 0.9612, norm:0.7816, tok/sec: 124932.46, flops:97.30, batch-reuse:1
@ 3348 train 4.6329 , allloss: 4.6344, dt: 1058.42ms, fracRes: 0.7602, norm(attn): 0.1855, norm(output): 1.9688, norm(x): 0.3430, norm(y): 0.9612, norm:0.7085, tok/sec: 123837.17, flops:96.44, batch-reuse:1
@ 3349 train 4.5583 , allloss: 4.5598, dt: 1044.98ms, fracRes: 0.7601, norm(attn): 0.1836, norm(output): 1.9609, norm(x): 0.3435, norm(y): 0.9612, norm:0.7768, tok/sec: 125430.63, flops:97.69, batch-reuse:1
@ 3350 train 4.6547 , allloss: 4.6563, dt: 1056.89ms, fracRes: 0.7625, norm(attn): 0.1836, norm(output): 1.9688, norm(x): 0.3398, norm(y): 0.9611, norm:0.6890, tok/sec: 124016.75, flops:96.58, batch-reuse:1
@ 3351 train 4.7390 , allloss: 4.7406, dt: 1062.43ms, fracRes: 0.7613, norm(attn): 0.1816, norm(output): 1.9688, norm(x): 0.3419, norm(y): 0.9609, norm:0.6553, tok/sec: 123370.52, flops:96.08, batch-reuse:1
@ 3352 train 4.6265 , allloss: 4.6280, dt: 1062.07ms, fracRes: 0.7582, norm(attn): 0.1846, norm(output): 1.9922, norm(x): 0.3494, norm(y): 0.9612, norm:0.6124, tok/sec: 123412.03, flops:96.11, batch-reuse:1
@ 3353 train 4.6531 , allloss: 4.6544, dt: 1036.14ms, fracRes: 0.7603, norm(attn): 0.1846, norm(output): 1.9766, norm(x): 0.3424, norm(y): 0.9611, norm:0.7847, tok/sec: 126500.66, flops:98.52, batch-reuse:1
@ 3354 train 4.6571 , allloss: 4.6585, dt: 1046.57ms, fracRes: 0.7621, norm(attn): 0.1836, norm(output): 1.9844, norm(x): 0.3400, norm(y): 0.9609, norm:0.7937, tok/sec: 125239.53, flops:97.54, batch-reuse:1
@ 3355 train 4.6941 , allloss: 4.6956, dt: 1059.83ms, fracRes: 0.7626, norm(attn): 0.1807, norm(output): 1.9688, norm(x): 0.3397, norm(y): 0.9608, norm:0.5882, tok/sec: 123673.17, flops:96.32, batch-reuse:1
@ 3356 train 4.6619 , allloss: 4.6631, dt: 1060.50ms, fracRes: 0.7630, norm(attn): 0.1807, norm(output): 1.9688, norm(x): 0.3381, norm(y): 0.9609, norm:0.7003, tok/sec: 123594.38, flops:96.26, batch-reuse:1
@ 3357 train 4.6425 , allloss: 4.6439, dt: 1057.88ms, fracRes: 0.7627, norm(attn): 0.1846, norm(output): 1.9844, norm(x): 0.3382, norm(y): 0.9608, norm:0.6840, tok/sec: 123900.50, flops:96.49, batch-reuse:1
@ 3358 train 4.6909 , allloss: 4.6921, dt: 1043.66ms, fracRes: 0.7620, norm(attn): 0.1816, norm(output): 1.9688, norm(x): 0.3385, norm(y): 0.9609, norm:0.6955, tok/sec: 125588.29, flops:97.81, batch-reuse:1
@ 3359 train 4.6152 , allloss: 4.6164, dt: 1049.99ms, fracRes: 0.7610, norm(attn): 0.1816, norm(output): 1.9688, norm(x): 0.3416, norm(y): 0.9609, norm:0.6792, tok/sec: 124831.22, flops:97.22, batch-reuse:1
@ 3360 train 4.6108 , allloss: 4.6119, dt: 1046.82ms, fracRes: 0.7590, norm(attn): 0.1836, norm(output): 1.9766, norm(x): 0.3488, norm(y): 0.9609, norm:0.6132, tok/sec: 125209.52, flops:97.51, batch-reuse:1
@ 3361 train 4.6617 , allloss: 4.6629, dt: 1055.75ms, fracRes: 0.7606, norm(attn): 0.1826, norm(output): 1.9688, norm(x): 0.3430, norm(y): 0.9608, norm:0.6475, tok/sec: 124150.64, flops:96.69, batch-reuse:1
@ 3362 train 4.5589 , allloss: 4.5601, dt: 1059.45ms, fracRes: 0.7594, norm(attn): 0.1836, norm(output): 1.9844, norm(x): 0.3454, norm(y): 0.9610, norm:0.5540, tok/sec: 123716.95, flops:96.35, batch-reuse:1
@ 3363 train 4.6182 , allloss: 4.6194, dt: 1056.63ms, fracRes: 0.7593, norm(attn): 0.1855, norm(output): 1.9766, norm(x): 0.3434, norm(y): 0.9610, norm:2.1678, tok/sec: 124046.99, flops:96.61, batch-reuse:1
@ 3364 train 4.6684 , allloss: 4.6698, dt: 1054.73ms, fracRes: 0.7613, norm(attn): 0.1836, norm(output): 1.9531, norm(x): 0.3382, norm(y): 0.9607, norm:0.6884, tok/sec: 124271.15, flops:96.78, batch-reuse:1
@ 3365 train 4.6317 , allloss: 4.6330, dt: 1043.72ms, fracRes: 0.7621, norm(attn): 0.1816, norm(output): 1.9688, norm(x): 0.3394, norm(y): 0.9606, norm:0.6798, tok/sec: 125581.74, flops:97.80, batch-reuse:1
@ 3366 train 4.7647 , allloss: 4.7661, dt: 1058.06ms, fracRes: 0.7636, norm(attn): 0.1797, norm(output): 1.9609, norm(x): 0.3351, norm(y): 0.9607, norm:0.6504, tok/sec: 123879.14, flops:96.48, batch-reuse:1
@ 3367 train 4.6765 , allloss: 4.6779, dt: 1052.11ms, fracRes: 0.7603, norm(attn): 0.1826, norm(output): 1.9766, norm(x): 0.3432, norm(y): 0.9608, norm:0.7432, tok/sec: 124580.30, flops:97.02, batch-reuse:1
@ 3368 train 4.7167 , allloss: 4.7179, dt: 1051.97ms, fracRes: 0.7600, norm(attn): 0.1836, norm(output): 1.9922, norm(x): 0.3452, norm(y): 0.9607, norm:0.7564, tok/sec: 124597.22, flops:97.04, batch-reuse:1
@ 3369 train 4.6606 , allloss: 4.6618, dt: 1054.89ms, fracRes: 0.7602, norm(attn): 0.1836, norm(output): 1.9844, norm(x): 0.3433, norm(y): 0.9606, norm:0.8328, tok/sec: 124251.63, flops:96.77, batch-reuse:1
@ 3370 train 4.6628 , allloss: 4.6642, dt: 1057.51ms, fracRes: 0.7616, norm(attn): 0.1816, norm(output): 1.9688, norm(x): 0.3387, norm(y): 0.9606, norm:0.8043, tok/sec: 123944.41, flops:96.53, batch-reuse:1
@ 3371 train 4.5835 , allloss: 4.5846, dt: 1049.38ms, fracRes: 0.7597, norm(attn): 0.1836, norm(output): 1.9766, norm(x): 0.3436, norm(y): 0.9608, norm:0.5945, tok/sec: 124903.82, flops:97.28, batch-reuse:1
@ 3372 train 4.6049 , allloss: 4.6061, dt: 1046.99ms, fracRes: 0.7603, norm(attn): 0.1846, norm(output): 1.9844, norm(x): 0.3441, norm(y): 0.9607, norm:0.6426, tok/sec: 125188.79, flops:97.50, batch-reuse:1
@ 3373 train 4.6657 , allloss: 4.6670, dt: 1054.25ms, fracRes: 0.7600, norm(attn): 0.1826, norm(output): 1.9844, norm(x): 0.3458, norm(y): 0.9606, norm:0.6934, tok/sec: 124326.80, flops:96.83, batch-reuse:1
@ 3374 train 4.5900 , allloss: 4.5911, dt: 1048.73ms, fracRes: 0.7599, norm(attn): 0.1836, norm(output): 1.9844, norm(x): 0.3463, norm(y): 0.9606, norm:0.6381, tok/sec: 124982.05, flops:97.34, batch-reuse:1
@ 3375 train 4.5469 , allloss: 4.5479, dt: 1059.55ms, fracRes: 0.7590, norm(attn): 0.1855, norm(output): 1.9844, norm(x): 0.3468, norm(y): 0.9608, norm:0.6965, tok/sec: 123705.54, flops:96.34, batch-reuse:1
@ 3376 train 4.7896 , allloss: 4.7907, dt: 1062.15ms, fracRes: 0.7619, norm(attn): 0.1826, norm(output): 1.9922, norm(x): 0.3424, norm(y): 0.9605, norm:0.6377, tok/sec: 123402.98, flops:96.11, batch-reuse:1
@ 3377 train 4.7769 , allloss: 4.7787, dt: 1058.39ms, fracRes: 0.7781, norm(attn): 0.1797, norm(output): 1.9531, norm(x): 0.3116, norm(y): 0.9596, norm:0.9438, tok/sec: 123840.47, flops:96.45, batch-reuse:1
@ 3378 train 4.7199 , allloss: 4.7210, dt: 1058.37ms, fracRes: 0.7599, norm(attn): 0.1797, norm(output): 1.9844, norm(x): 0.3461, norm(y): 0.9605, norm:0.9074, tok/sec: 123842.92, flops:96.45, batch-reuse:1
@ 3379 train 4.5600 , allloss: 4.5610, dt: 1053.53ms, fracRes: 0.7589, norm(attn): 0.1846, norm(output): 1.9766, norm(x): 0.3483, norm(y): 0.9609, norm:0.7067, tok/sec: 124411.77, flops:96.89, batch-reuse:1
@ 3380 train 4.6414 , allloss: 4.6427, dt: 1055.75ms, fracRes: 0.7610, norm(attn): 0.1846, norm(output): 1.9844, norm(x): 0.3430, norm(y): 0.9606, norm:0.6488, tok/sec: 124150.90, flops:96.69, batch-reuse:1
@ 3381 train 4.6227 , allloss: 4.6238, dt: 1056.01ms, fracRes: 0.7592, norm(attn): 0.1846, norm(output): 1.9922, norm(x): 0.3461, norm(y): 0.9607, norm:0.7827, tok/sec: 124120.15, flops:96.67, batch-reuse:1
@ 3382 train 4.6816 , allloss: 4.6826, dt: 1051.21ms, fracRes: 0.7599, norm(attn): 0.1846, norm(output): 2.0000, norm(x): 0.3489, norm(y): 0.9607, norm:0.7728, tok/sec: 124686.77, flops:97.11, batch-reuse:1
@ 3383 train 4.6658 , allloss: 4.6669, dt: 1047.98ms, fracRes: 0.7611, norm(attn): 0.1836, norm(output): 1.9922, norm(x): 0.3453, norm(y): 0.9606, norm:0.7074, tok/sec: 125071.51, flops:97.41, batch-reuse:1
@ 3384 train 4.6222 , allloss: 4.6234, dt: 1046.87ms, fracRes: 0.7604, norm(attn): 0.1846, norm(output): 1.9922, norm(x): 0.3459, norm(y): 0.9606, norm:0.6386, tok/sec: 125204.05, flops:97.51, batch-reuse:1
@ 3385 train 4.5853 , allloss: 4.5865, dt: 1046.80ms, fracRes: 0.7610, norm(attn): 0.1846, norm(output): 1.9766, norm(x): 0.3436, norm(y): 0.9606, norm:0.7025, tok/sec: 125211.60, flops:97.52, batch-reuse:1
@ 3386 train 4.8733 , allloss: 4.8746, dt: 1056.68ms, fracRes: 0.7617, norm(attn): 0.1836, norm(output): 1.9844, norm(x): 0.3415, norm(y): 0.9606, norm:0.9384, tok/sec: 124041.09, flops:96.60, batch-reuse:1
@ 3387 train 4.6580 , allloss: 4.6589, dt: 1061.87ms, fracRes: 0.7585, norm(attn): 0.1855, norm(output): 1.9922, norm(x): 0.3512, norm(y): 0.9605, norm:0.9280, tok/sec: 123435.17, flops:96.13, batch-reuse:1
@ 3388 train 4.5274 , allloss: 4.5284, dt: 1043.19ms, fracRes: 0.7591, norm(attn): 0.1855, norm(output): 1.9844, norm(x): 0.3483, norm(y): 0.9604, norm:0.7689, tok/sec: 125645.35, flops:97.85, batch-reuse:1
@ 3389 train 4.5806 , allloss: 4.5815, dt: 1054.86ms, fracRes: 0.7614, norm(attn): 0.1836, norm(output): 1.9844, norm(x): 0.3449, norm(y): 0.9604, norm:0.6708, tok/sec: 124255.65, flops:96.77, batch-reuse:1
@ 3390 train 4.7224 , allloss: 4.7233, dt: 1045.50ms, fracRes: 0.7613, norm(attn): 0.1826, norm(output): 1.9844, norm(x): 0.3470, norm(y): 0.9604, norm:0.6878, tok/sec: 125368.19, flops:97.64, batch-reuse:1
@ 3391 train 4.6999 , allloss: 4.7009, dt: 1037.89ms, fracRes: 0.7613, norm(attn): 0.1836, norm(output): 1.9766, norm(x): 0.3446, norm(y): 0.9605, norm:0.7149, tok/sec: 126287.19, flops:98.35, batch-reuse:1
@ 3392 train 4.5895 , allloss: 4.5905, dt: 1046.35ms, fracRes: 0.7599, norm(attn): 0.1826, norm(output): 2.0000, norm(x): 0.3515, norm(y): 0.9603, norm:0.6176, tok/sec: 125266.24, flops:97.56, batch-reuse:1
@ 3393 train 4.7228 , allloss: 4.7239, dt: 1057.12ms, fracRes: 0.7601, norm(attn): 0.1836, norm(output): 2.0156, norm(x): 0.3501, norm(y): 0.9602, norm:0.6940, tok/sec: 123989.53, flops:96.56, batch-reuse:1
@ 3394 train 4.6495 , allloss: 4.6505, dt: 1046.64ms, fracRes: 0.7598, norm(attn): 0.1855, norm(output): 2.0000, norm(x): 0.3491, norm(y): 0.9605, norm:0.6810, tok/sec: 125230.80, flops:97.53, batch-reuse:1
@ 3395 train 4.6298 , allloss: 4.6308, dt: 1044.57ms, fracRes: 0.7599, norm(attn): 0.1855, norm(output): 2.0000, norm(x): 0.3496, norm(y): 0.9605, norm:0.6629, tok/sec: 125479.76, flops:97.72, batch-reuse:1
@ 3396 train 4.6288 , allloss: 4.6298, dt: 1060.15ms, fracRes: 0.7597, norm(attn): 0.1865, norm(output): 2.0000, norm(x): 0.3519, norm(y): 0.9604, norm:0.6935, tok/sec: 123635.32, flops:96.29, batch-reuse:1
@ 3397 train 4.5972 , allloss: 4.5983, dt: 1054.33ms, fracRes: 0.7595, norm(attn): 0.1846, norm(output): 1.9922, norm(x): 0.3526, norm(y): 0.9603, norm:0.5936, tok/sec: 124317.69, flops:96.82, batch-reuse:1
@ 3398 train 4.6838 , allloss: 4.6851, dt: 1050.05ms, fracRes: 0.7600, norm(attn): 0.1855, norm(output): 1.9688, norm(x): 0.3505, norm(y): 0.9602, norm:0.6383, tok/sec: 124824.36, flops:97.21, batch-reuse:1
@ 3399 train 4.5959 , allloss: 4.5970, dt: 1067.63ms, fracRes: 0.7594, norm(attn): 0.1855, norm(output): 2.0000, norm(x): 0.3537, norm(y): 0.9603, norm:0.5694, tok/sec: 122768.73, flops:95.61, batch-reuse:1
@ 3400 train 4.6282 , allloss: 4.6291, dt: 1060.37ms, fracRes: 0.7590, norm(attn): 0.1846, norm(output): 2.0000, norm(x): 0.3537, norm(y): 0.9602, norm:0.7596, tok/sec: 123609.55, flops:96.27, batch-reuse:1
@ 3401 train 4.6182 , allloss: 4.6192, dt: 1051.50ms, fracRes: 0.7587, norm(attn): 0.1836, norm(output): 2.0000, norm(x): 0.3519, norm(y): 0.9603, norm:0.7712, tok/sec: 124652.56, flops:97.08, batch-reuse:1
@ 3402 train 4.6577 , allloss: 4.6588, dt: 1041.83ms, fracRes: 0.7618, norm(attn): 0.1865, norm(output): 1.9766, norm(x): 0.3429, norm(y): 0.9601, norm:0.6834, tok/sec: 125809.87, flops:97.98, batch-reuse:1
@ 3403 train 4.5945 , allloss: 4.5956, dt: 1056.43ms, fracRes: 0.7597, norm(attn): 0.1855, norm(output): 1.9844, norm(x): 0.3484, norm(y): 0.9603, norm:0.5685, tok/sec: 124070.76, flops:96.63, batch-reuse:1
@ 3404 train 4.5578 , allloss: 4.5590, dt: 1065.95ms, fracRes: 0.7596, norm(attn): 0.1855, norm(output): 2.0000, norm(x): 0.3500, norm(y): 0.9601, norm:0.6721, tok/sec: 122962.57, flops:95.76, batch-reuse:1
@ 3405 train 4.6030 , allloss: 4.6039, dt: 1043.33ms, fracRes: 0.7602, norm(attn): 0.1836, norm(output): 2.0000, norm(x): 0.3500, norm(y): 0.9602, norm:0.6901, tok/sec: 125628.46, flops:97.84, batch-reuse:1
@ 3406 train 4.5622 , allloss: 4.5631, dt: 1063.13ms, fracRes: 0.7598, norm(attn): 0.1846, norm(output): 2.0000, norm(x): 0.3532, norm(y): 0.9602, norm:0.6047, tok/sec: 123288.87, flops:96.02, batch-reuse:1
@ 3407 train 4.5749 , allloss: 4.5759, dt: 1049.16ms, fracRes: 0.7593, norm(attn): 0.1846, norm(output): 2.0000, norm(x): 0.3537, norm(y): 0.9600, norm:0.5543, tok/sec: 124930.73, flops:97.30, batch-reuse:1
@ 3408 train 4.5790 , allloss: 4.5800, dt: 1049.76ms, fracRes: 0.7590, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3545, norm(y): 0.9600, norm:0.6285, tok/sec: 124859.49, flops:97.24, batch-reuse:1
@ 3409 train 4.6998 , allloss: 4.7008, dt: 1047.04ms, fracRes: 0.7601, norm(attn): 0.1826, norm(output): 1.9844, norm(x): 0.3494, norm(y): 0.9600, norm:0.5946, tok/sec: 125183.29, flops:97.49, batch-reuse:1
@ 3410 train 4.6789 , allloss: 4.6801, dt: 1053.77ms, fracRes: 0.7603, norm(attn): 0.1846, norm(output): 1.9844, norm(x): 0.3458, norm(y): 0.9598, norm:0.6552, tok/sec: 124384.07, flops:96.87, batch-reuse:1
@ 3411 train 4.6324 , allloss: 4.6334, dt: 1049.31ms, fracRes: 0.7577, norm(attn): 0.1855, norm(output): 2.0000, norm(x): 0.3550, norm(y): 0.9601, norm:0.6994, tok/sec: 124912.93, flops:97.28, batch-reuse:1
@ 3412 train 4.6529 , allloss: 4.6540, dt: 1053.21ms, fracRes: 0.7596, norm(attn): 0.1855, norm(output): 1.9844, norm(x): 0.3510, norm(y): 0.9601, norm:0.6224, tok/sec: 124450.13, flops:96.92, batch-reuse:1
@ 3413 train 4.7068 , allloss: 4.7079, dt: 1066.14ms, fracRes: 0.7593, norm(attn): 0.1836, norm(output): 1.9766, norm(x): 0.3518, norm(y): 0.9600, norm:0.6685, tok/sec: 122940.49, flops:95.75, batch-reuse:1
@ 3414 train 4.5886 , allloss: 4.5897, dt: 1061.13ms, fracRes: 0.7577, norm(attn): 0.1846, norm(output): 2.0000, norm(x): 0.3592, norm(y): 0.9601, norm:0.8035, tok/sec: 123521.37, flops:96.20, batch-reuse:1
@ 3415 train 4.5636 , allloss: 4.5647, dt: 1062.51ms, fracRes: 0.7594, norm(attn): 0.1855, norm(output): 1.9922, norm(x): 0.3526, norm(y): 0.9600, norm:0.8061, tok/sec: 123360.30, flops:96.07, batch-reuse:1
@ 3416 train 4.6447 , allloss: 4.6460, dt: 1056.07ms, fracRes: 0.7616, norm(attn): 0.1846, norm(output): 1.9766, norm(x): 0.3460, norm(y): 0.9598, norm:0.6811, tok/sec: 124113.11, flops:96.66, batch-reuse:1
@ 3417 train 4.6108 , allloss: 4.6119, dt: 1047.99ms, fracRes: 0.7621, norm(attn): 0.1846, norm(output): 1.9766, norm(x): 0.3455, norm(y): 0.9599, norm:0.6859, tok/sec: 125070.17, flops:97.41, batch-reuse:1
@ 3418 train 4.5374 , allloss: 4.5384, dt: 1055.97ms, fracRes: 0.7601, norm(attn): 0.1865, norm(output): 1.9844, norm(x): 0.3471, norm(y): 0.9600, norm:0.6058, tok/sec: 124124.24, flops:96.67, batch-reuse:1
@ 3419 train 4.5901 , allloss: 4.5909, dt: 1044.63ms, fracRes: 0.7592, norm(attn): 0.1855, norm(output): 1.9844, norm(x): 0.3503, norm(y): 0.9600, norm:0.5881, tok/sec: 125472.63, flops:97.72, batch-reuse:1
@ 3420 train 4.5656 , allloss: 4.5665, dt: 1055.68ms, fracRes: 0.7587, norm(attn): 0.1865, norm(output): 2.0000, norm(x): 0.3543, norm(y): 0.9599, norm:0.5280, tok/sec: 124158.27, flops:96.69, batch-reuse:1
@ 3421 train 4.6216 , allloss: 4.6226, dt: 1058.14ms, fracRes: 0.7595, norm(attn): 0.1855, norm(output): 1.9922, norm(x): 0.3515, norm(y): 0.9598, norm:0.7599, tok/sec: 123869.62, flops:96.47, batch-reuse:1
@ 3422 train 4.6246 , allloss: 4.6257, dt: 1044.74ms, fracRes: 0.7610, norm(attn): 0.1826, norm(output): 1.9844, norm(x): 0.3464, norm(y): 0.9598, norm:0.5625, tok/sec: 125459.17, flops:97.71, batch-reuse:1
@ 3423 train 4.5680 , allloss: 4.5689, dt: 1049.43ms, fracRes: 0.7590, norm(attn): 0.1855, norm(output): 2.0000, norm(x): 0.3520, norm(y): 0.9598, norm:0.5682, tok/sec: 124897.89, flops:97.27, batch-reuse:1
@ 3424 train 4.5994 , allloss: 4.6006, dt: 1044.34ms, fracRes: 0.7594, norm(attn): 0.1855, norm(output): 1.9844, norm(x): 0.3512, norm(y): 0.9598, norm:0.5409, tok/sec: 125506.80, flops:97.75, batch-reuse:1
@ 3425 train 4.6310 , allloss: 4.6320, dt: 1044.71ms, fracRes: 0.7599, norm(attn): 0.1855, norm(output): 1.9844, norm(x): 0.3489, norm(y): 0.9598, norm:0.5348, tok/sec: 125462.12, flops:97.71, batch-reuse:1
@ 3426 train 4.5636 , allloss: 4.5645, dt: 1071.17ms, fracRes: 0.7580, norm(attn): 0.1865, norm(output): 2.0156, norm(x): 0.3542, norm(y): 0.9599, norm:0.5043, tok/sec: 122363.33, flops:95.30, batch-reuse:1
@ 3427 train 4.5954 , allloss: 4.5963, dt: 1050.38ms, fracRes: 0.7587, norm(attn): 0.1865, norm(output): 2.0000, norm(x): 0.3532, norm(y): 0.9597, norm:0.5656, tok/sec: 124785.01, flops:97.18, batch-reuse:1
@ 3428 train 4.5142 , allloss: 4.5152, dt: 1064.03ms, fracRes: 0.7589, norm(attn): 0.1855, norm(output): 2.0000, norm(x): 0.3519, norm(y): 0.9597, norm:0.6920, tok/sec: 123185.06, flops:95.94, batch-reuse:1
@ 3429 train 4.5554 , allloss: 4.5563, dt: 1066.25ms, fracRes: 0.7582, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3573, norm(y): 0.9596, norm:0.7806, tok/sec: 122928.39, flops:95.74, batch-reuse:1
@ 3430 train 4.7292 , allloss: 4.7303, dt: 1062.55ms, fracRes: 0.7566, norm(attn): 0.1846, norm(output): 2.0625, norm(x): 0.3638, norm(y): 0.9595, norm:0.7479, tok/sec: 123355.54, flops:96.07, batch-reuse:1
@ 3431 train 4.7053 , allloss: 4.7062, dt: 1061.23ms, fracRes: 0.7605, norm(attn): 0.1777, norm(output): 1.9922, norm(x): 0.3464, norm(y): 0.9594, norm:1.4411, tok/sec: 123508.96, flops:96.19, batch-reuse:1
@ 3432 train 4.6233 , allloss: 4.6247, dt: 1045.33ms, fracRes: 0.7584, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3608, norm(y): 0.9593, norm:1.4219, tok/sec: 125388.72, flops:97.65, batch-reuse:1
@ 3433 train 4.6120 , allloss: 4.6129, dt: 1046.54ms, fracRes: 0.7571, norm(attn): 0.1875, norm(output): 2.0000, norm(x): 0.3610, norm(y): 0.9599, norm:1.0393, tok/sec: 125243.69, flops:97.54, batch-reuse:1
@ 3434 train 4.5837 , allloss: 4.5848, dt: 1046.90ms, fracRes: 0.7605, norm(attn): 0.1875, norm(output): 1.9922, norm(x): 0.3509, norm(y): 0.9598, norm:0.8624, tok/sec: 125200.54, flops:97.51, batch-reuse:1
@ 3435 train 4.5639 , allloss: 4.5648, dt: 1069.19ms, fracRes: 0.7598, norm(attn): 0.1855, norm(output): 2.0000, norm(x): 0.3531, norm(y): 0.9598, norm:1.0276, tok/sec: 122589.72, flops:95.47, batch-reuse:1
@ 3436 train 4.5898 , allloss: 4.5907, dt: 1042.23ms, fracRes: 0.7597, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3542, norm(y): 0.9597, norm:0.9317, tok/sec: 125761.47, flops:97.94, batch-reuse:1
@ 3437 train 4.5450 , allloss: 4.5459, dt: 1041.00ms, fracRes: 0.7590, norm(attn): 0.1875, norm(output): 2.0156, norm(x): 0.3570, norm(y): 0.9600, norm:0.7561, tok/sec: 125909.43, flops:98.06, batch-reuse:1
@ 3438 train 4.6248 , allloss: 4.6258, dt: 1064.35ms, fracRes: 0.7593, norm(attn): 0.1875, norm(output): 2.0156, norm(x): 0.3571, norm(y): 0.9597, norm:0.6440, tok/sec: 123147.56, flops:95.91, batch-reuse:1
@ 3439 train 4.5264 , allloss: 4.5273, dt: 1042.10ms, fracRes: 0.7605, norm(attn): 0.1865, norm(output): 2.0000, norm(x): 0.3545, norm(y): 0.9598, norm:0.6648, tok/sec: 125777.26, flops:97.96, batch-reuse:1
@ 3440 train 4.4681 , allloss: 4.4692, dt: 1043.21ms, fracRes: 0.7596, norm(attn): 0.1875, norm(output): 2.0156, norm(x): 0.3553, norm(y): 0.9597, norm:0.6050, tok/sec: 125643.51, flops:97.85, batch-reuse:1
@ 3441 train 4.6027 , allloss: 4.6037, dt: 1056.55ms, fracRes: 0.7604, norm(attn): 0.1865, norm(output): 2.0156, norm(x): 0.3531, norm(y): 0.9597, norm:0.5824, tok/sec: 124056.90, flops:96.62, batch-reuse:1
@ 3442 train 4.5807 , allloss: 4.5816, dt: 1067.48ms, fracRes: 0.7600, norm(attn): 0.1865, norm(output): 2.0156, norm(x): 0.3533, norm(y): 0.9596, norm:0.5748, tok/sec: 122786.94, flops:95.63, batch-reuse:1
@ 3443 train 4.5717 , allloss: 4.5725, dt: 1061.42ms, fracRes: 0.7601, norm(attn): 0.1836, norm(output): 2.0000, norm(x): 0.3528, norm(y): 0.9595, norm:0.6831, tok/sec: 123487.08, flops:96.17, batch-reuse:1
@ 3444 train 4.5098 , allloss: 4.5105, dt: 1079.90ms, fracRes: 0.7589, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3550, norm(y): 0.9596, norm:0.6073, tok/sec: 121373.77, flops:94.53, batch-reuse:1
@ 3445 train 4.5714 , allloss: 4.5721, dt: 1073.26ms, fracRes: 0.7581, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3578, norm(y): 0.9596, norm:0.5733, tok/sec: 122125.02, flops:95.11, batch-reuse:1
@ 3446 train 4.5486 , allloss: 4.5493, dt: 1062.79ms, fracRes: 0.7591, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3533, norm(y): 0.9596, norm:0.7237, tok/sec: 123328.67, flops:96.05, batch-reuse:1
@ 3447 train 4.5757 , allloss: 4.5764, dt: 1042.70ms, fracRes: 0.7581, norm(attn): 0.1875, norm(output): 2.0156, norm(x): 0.3578, norm(y): 0.9596, norm:0.5618, tok/sec: 125704.39, flops:97.90, batch-reuse:1
@ 3448 train 4.5236 , allloss: 4.5244, dt: 1064.98ms, fracRes: 0.7612, norm(attn): 0.1855, norm(output): 2.0312, norm(x): 0.3513, norm(y): 0.9595, norm:0.5487, tok/sec: 123074.61, flops:95.85, batch-reuse:1
@ 3449 train 4.5690 , allloss: 4.5699, dt: 1042.76ms, fracRes: 0.7604, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3529, norm(y): 0.9595, norm:0.5122, tok/sec: 125697.00, flops:97.89, batch-reuse:1
@ 3450 train 4.5034 , allloss: 4.5043, dt: 1058.01ms, fracRes: 0.7590, norm(attn): 0.1855, norm(output): 2.0312, norm(x): 0.3579, norm(y): 0.9595, norm:0.5806, tok/sec: 123884.95, flops:96.48, batch-reuse:1
@ 3451 train 4.6067 , allloss: 4.6076, dt: 1050.13ms, fracRes: 0.7594, norm(attn): 0.1836, norm(output): 2.0312, norm(x): 0.3544, norm(y): 0.9594, norm:0.6387, tok/sec: 124815.15, flops:97.21, batch-reuse:1
@ 3452 train 4.5901 , allloss: 4.5908, dt: 1052.79ms, fracRes: 0.7582, norm(attn): 0.1855, norm(output): 2.0469, norm(x): 0.3573, norm(y): 0.9594, norm:0.8407, tok/sec: 124499.22, flops:96.96, batch-reuse:1
@ 3453 train 4.5895 , allloss: 4.5903, dt: 1038.66ms, fracRes: 0.7598, norm(attn): 0.1875, norm(output): 2.0000, norm(x): 0.3498, norm(y): 0.9596, norm:0.7891, tok/sec: 126193.94, flops:98.28, batch-reuse:1
@ 3454 train 4.5514 , allloss: 4.5525, dt: 1042.89ms, fracRes: 0.7582, norm(attn): 0.1855, norm(output): 2.0781, norm(x): 0.3592, norm(y): 0.9589, norm:0.8252, tok/sec: 125681.51, flops:97.88, batch-reuse:1
@ 3455 train 4.5623 , allloss: 4.5631, dt: 1055.51ms, fracRes: 0.7603, norm(attn): 0.1855, norm(output): 2.0312, norm(x): 0.3534, norm(y): 0.9593, norm:0.8644, tok/sec: 124179.25, flops:96.71, batch-reuse:1
@ 3456 train 4.4891 , allloss: 4.4902, dt: 1042.31ms, fracRes: 0.7603, norm(attn): 0.1855, norm(output): 2.0469, norm(x): 0.3575, norm(y): 0.9594, norm:0.7502, tok/sec: 125751.14, flops:97.94, batch-reuse:1
@ 3457 train 4.5312 , allloss: 4.5321, dt: 1069.52ms, fracRes: 0.7612, norm(attn): 0.1855, norm(output): 2.0312, norm(x): 0.3535, norm(y): 0.9592, norm:0.8622, tok/sec: 122552.36, flops:95.44, batch-reuse:1
@ 3458 train 4.4692 , allloss: 4.4701, dt: 1048.25ms, fracRes: 0.7623, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3495, norm(y): 0.9592, norm:0.6275, tok/sec: 125038.91, flops:97.38, batch-reuse:1
@ 3459 train 4.5285 , allloss: 4.5295, dt: 1054.06ms, fracRes: 0.7612, norm(attn): 0.1855, norm(output): 2.0312, norm(x): 0.3512, norm(y): 0.9591, norm:0.6106, tok/sec: 124349.13, flops:96.84, batch-reuse:1
@ 3460 train 4.6258 , allloss: 4.6269, dt: 1051.80ms, fracRes: 0.7604, norm(attn): 0.1855, norm(output): 2.0469, norm(x): 0.3550, norm(y): 0.9591, norm:0.6893, tok/sec: 124616.87, flops:97.05, batch-reuse:1
@ 3461 train 4.5053 , allloss: 4.5060, dt: 1043.59ms, fracRes: 0.7577, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 0.3602, norm(y): 0.9593, norm:0.7370, tok/sec: 125597.47, flops:97.82, batch-reuse:1
@ 3462 train 4.5361 , allloss: 4.5370, dt: 1044.56ms, fracRes: 0.7613, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3524, norm(y): 0.9593, norm:0.6638, tok/sec: 125480.36, flops:97.72, batch-reuse:1
@ 3463 train 4.5878 , allloss: 4.5889, dt: 1068.99ms, fracRes: 0.7623, norm(attn): 0.1846, norm(output): 2.0156, norm(x): 0.3506, norm(y): 0.9591, norm:0.6631, tok/sec: 122612.91, flops:95.49, batch-reuse:1
@ 3464 train 4.3874 , allloss: 4.3883, dt: 1044.83ms, fracRes: 0.7596, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3545, norm(y): 0.9592, norm:0.5900, tok/sec: 125447.92, flops:97.70, batch-reuse:1
@ 3465 train 4.5641 , allloss: 4.5652, dt: 1058.56ms, fracRes: 0.7609, norm(attn): 0.1836, norm(output): 2.0156, norm(x): 0.3523, norm(y): 0.9590, norm:0.6791, tok/sec: 123820.83, flops:96.43, batch-reuse:1
@ 3466 train 4.5215 , allloss: 4.5222, dt: 1054.70ms, fracRes: 0.7574, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3597, norm(y): 0.9592, norm:0.6799, tok/sec: 124274.30, flops:96.79, batch-reuse:1
@ 3467 train 4.5482 , allloss: 4.5492, dt: 1043.22ms, fracRes: 0.7588, norm(attn): 0.1855, norm(output): 2.0312, norm(x): 0.3554, norm(y): 0.9591, norm:0.6816, tok/sec: 125641.56, flops:97.85, batch-reuse:1
@ 3468 train 4.4442 , allloss: 4.4451, dt: 1051.79ms, fracRes: 0.7574, norm(attn): 0.1875, norm(output): 2.0781, norm(x): 0.3597, norm(y): 0.9592, norm:0.6513, tok/sec: 124618.40, flops:97.05, batch-reuse:1
@ 3469 train 4.5297 , allloss: 4.5305, dt: 1053.13ms, fracRes: 0.7588, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3558, norm(y): 0.9591, norm:0.5730, tok/sec: 124459.00, flops:96.93, batch-reuse:1
@ 3470 train 4.6335 , allloss: 4.6342, dt: 1051.02ms, fracRes: 0.7581, norm(attn): 0.1846, norm(output): 2.0312, norm(x): 0.3599, norm(y): 0.9591, norm:0.7346, tok/sec: 124709.17, flops:97.12, batch-reuse:1
@ 3471 train 4.5396 , allloss: 4.5405, dt: 1061.10ms, fracRes: 0.7608, norm(attn): 0.1855, norm(output): 2.0156, norm(x): 0.3512, norm(y): 0.9588, norm:0.8065, tok/sec: 123524.28, flops:96.20, batch-reuse:1
@ 3472 train 4.5463 , allloss: 4.5472, dt: 1050.09ms, fracRes: 0.7601, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 0.3572, norm(y): 0.9590, norm:0.6673, tok/sec: 124819.91, flops:97.21, batch-reuse:1
@ 3473 train 4.4678 , allloss: 4.4688, dt: 1062.28ms, fracRes: 0.7605, norm(attn): 0.1855, norm(output): 2.0312, norm(x): 0.3536, norm(y): 0.9588, norm:0.6802, tok/sec: 123387.99, flops:96.10, batch-reuse:1
@ 3474 train 4.5116 , allloss: 4.5126, dt: 1063.22ms, fracRes: 0.7605, norm(attn): 0.1875, norm(output): 2.0312, norm(x): 0.3524, norm(y): 0.9589, norm:0.6960, tok/sec: 123278.06, flops:96.01, batch-reuse:1
@ 3475 train 4.3674 , allloss: 4.3682, dt: 1058.41ms, fracRes: 0.7583, norm(attn): 0.1875, norm(output): 2.0312, norm(x): 0.3594, norm(y): 0.9592, norm:0.5824, tok/sec: 123838.54, flops:96.45, batch-reuse:1
@ 3476 train 4.4710 , allloss: 4.4718, dt: 1063.60ms, fracRes: 0.7586, norm(attn): 0.1855, norm(output): 2.0469, norm(x): 0.3571, norm(y): 0.9590, norm:0.7197, tok/sec: 123234.87, flops:95.98, batch-reuse:1
@ 3477 train 4.3751 , allloss: 4.3760, dt: 1056.74ms, fracRes: 0.7573, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3605, norm(y): 0.9591, norm:0.6100, tok/sec: 124034.76, flops:96.60, batch-reuse:1
@ 3478 train 4.4462 , allloss: 4.4471, dt: 1044.39ms, fracRes: 0.7582, norm(attn): 0.1865, norm(output): 2.0156, norm(x): 0.3580, norm(y): 0.9590, norm:0.5206, tok/sec: 125500.61, flops:97.74, batch-reuse:1
@ 3479 train 4.3505 , allloss: 4.3514, dt: 1059.64ms, fracRes: 0.7591, norm(attn): 0.1875, norm(output): 2.0312, norm(x): 0.3577, norm(y): 0.9590, norm:0.6138, tok/sec: 123694.35, flops:96.33, batch-reuse:1
@ 3480 train 4.4812 , allloss: 4.4822, dt: 1061.55ms, fracRes: 0.7585, norm(attn): 0.1875, norm(output): 2.0469, norm(x): 0.3612, norm(y): 0.9588, norm:0.5662, tok/sec: 123472.13, flops:96.16, batch-reuse:1
@ 3481 train 4.5469 , allloss: 4.5480, dt: 1052.89ms, fracRes: 0.7602, norm(attn): 0.1855, norm(output): 2.0469, norm(x): 0.3543, norm(y): 0.9588, norm:0.7542, tok/sec: 124488.42, flops:96.95, batch-reuse:1
@ 3482 train 4.4281 , allloss: 4.4294, dt: 1056.67ms, fracRes: 0.7603, norm(attn): 0.1875, norm(output): 2.0469, norm(x): 0.3520, norm(y): 0.9582, norm:0.9152, tok/sec: 124042.88, flops:96.61, batch-reuse:1
@ 3483 train 4.4392 , allloss: 4.4401, dt: 1049.99ms, fracRes: 0.7573, norm(attn): 0.1875, norm(output): 2.0312, norm(x): 0.3627, norm(y): 0.9588, norm:0.7173, tok/sec: 124831.39, flops:97.22, batch-reuse:1
@ 3484 train 4.4473 , allloss: 4.4481, dt: 1063.36ms, fracRes: 0.7573, norm(attn): 0.1885, norm(output): 2.0312, norm(x): 0.3626, norm(y): 0.9589, norm:0.6087, tok/sec: 123262.03, flops:96.00, batch-reuse:1
@ 3485 train 4.4068 , allloss: 4.4074, dt: 1047.39ms, fracRes: 0.7590, norm(attn): 0.1875, norm(output): 2.0000, norm(x): 0.3573, norm(y): 0.9588, norm:0.6390, tok/sec: 125141.20, flops:97.46, batch-reuse:1
@ 3486 train 4.4577 , allloss: 4.4585, dt: 1043.62ms, fracRes: 0.7578, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 0.3622, norm(y): 0.9588, norm:0.7713, tok/sec: 125593.16, flops:97.81, batch-reuse:1
@ 3487 train 4.3343 , allloss: 4.3349, dt: 1067.83ms, fracRes: 0.7579, norm(attn): 0.1875, norm(output): 2.0312, norm(x): 0.3621, norm(y): 0.9589, norm:0.7562, tok/sec: 122746.67, flops:95.60, batch-reuse:1
@ 3488 train 4.4518 , allloss: 4.4524, dt: 1055.25ms, fracRes: 0.7585, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3594, norm(y): 0.9587, norm:0.6138, tok/sec: 124209.97, flops:96.74, batch-reuse:1
@ 3489 train 4.4724 , allloss: 4.4731, dt: 1047.05ms, fracRes: 0.7603, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3559, norm(y): 0.9585, norm:0.6366, tok/sec: 125182.04, flops:97.49, batch-reuse:1
@ 3490 train 4.3961 , allloss: 4.3969, dt: 1063.19ms, fracRes: 0.7594, norm(attn): 0.1875, norm(output): 2.0312, norm(x): 0.3587, norm(y): 0.9586, norm:0.5273, tok/sec: 123282.10, flops:96.01, batch-reuse:1
@ 3491 train 4.3972 , allloss: 4.3980, dt: 1041.53ms, fracRes: 0.7582, norm(attn): 0.1875, norm(output): 2.0156, norm(x): 0.3582, norm(y): 0.9586, norm:0.6625, tok/sec: 125845.07, flops:98.01, batch-reuse:1
@ 3492 train 4.4478 , allloss: 4.4486, dt: 1048.82ms, fracRes: 0.7572, norm(attn): 0.1855, norm(output): 2.0312, norm(x): 0.3606, norm(y): 0.9587, norm:0.6366, tok/sec: 124970.75, flops:97.33, batch-reuse:1
@ 3493 train 4.4329 , allloss: 4.4335, dt: 1049.19ms, fracRes: 0.7571, norm(attn): 0.1865, norm(output): 2.0156, norm(x): 0.3583, norm(y): 0.9586, norm:0.6950, tok/sec: 124926.93, flops:97.29, batch-reuse:1
@ 3494 train 4.4250 , allloss: 4.4258, dt: 1055.91ms, fracRes: 0.7568, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3597, norm(y): 0.9583, norm:0.6543, tok/sec: 124131.36, flops:96.67, batch-reuse:1
@ 3495 train 4.4406 , allloss: 4.4415, dt: 1044.60ms, fracRes: 0.7597, norm(attn): 0.1846, norm(output): 2.0312, norm(x): 0.3534, norm(y): 0.9584, norm:0.6504, tok/sec: 125476.29, flops:97.72, batch-reuse:1
@ 3496 train 4.4367 , allloss: 4.4377, dt: 1043.86ms, fracRes: 0.7580, norm(attn): 0.1875, norm(output): 2.0469, norm(x): 0.3606, norm(y): 0.9583, norm:0.6825, tok/sec: 125564.31, flops:97.79, batch-reuse:1
@ 3497 train 4.3967 , allloss: 4.3976, dt: 1063.85ms, fracRes: 0.7577, norm(attn): 0.1885, norm(output): 2.0312, norm(x): 0.3640, norm(y): 0.9586, norm:0.6379, tok/sec: 123205.82, flops:95.95, batch-reuse:1
@ 3498 train 4.4144 , allloss: 4.4154, dt: 1045.50ms, fracRes: 0.7594, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3575, norm(y): 0.9584, norm:0.6316, tok/sec: 125368.33, flops:97.64, batch-reuse:1
@ 3499 train 4.4270 , allloss: 4.4279, dt: 1062.32ms, fracRes: 0.7587, norm(attn): 0.1855, norm(output): 2.0312, norm(x): 0.3573, norm(y): 0.9584, norm:0.6713, tok/sec: 123382.23, flops:96.09, batch-reuse:1
@ 3500 train 4.3851 , allloss: 4.3861, dt: 1048.32ms, fracRes: 0.7611, norm(attn): 0.1875, norm(output): 2.0000, norm(x): 0.3507, norm(y): 0.9582, norm:0.7162, tok/sec: 125031.06, flops:97.37, batch-reuse:1
@ 3501 train 4.3285 , allloss: 4.3293, dt: 1073.31ms, fracRes: 0.7570, norm(attn): 0.1875, norm(output): 2.0469, norm(x): 0.3608, norm(y): 0.9584, norm:0.7370, tok/sec: 122119.03, flops:95.11, batch-reuse:1
@ 3502 train 4.4005 , allloss: 4.4015, dt: 1050.43ms, fracRes: 0.7595, norm(attn): 0.1875, norm(output): 2.0156, norm(x): 0.3541, norm(y): 0.9584, norm:0.6147, tok/sec: 124779.71, flops:97.18, batch-reuse:1
@ 3503 train 4.3883 , allloss: 4.3890, dt: 1060.81ms, fracRes: 0.7560, norm(attn): 0.1875, norm(output): 2.0469, norm(x): 0.3655, norm(y): 0.9585, norm:0.7065, tok/sec: 123557.99, flops:96.23, batch-reuse:1
@ 3504 train 4.3665 , allloss: 4.3673, dt: 1057.22ms, fracRes: 0.7574, norm(attn): 0.1865, norm(output): 2.0156, norm(x): 0.3601, norm(y): 0.9583, norm:0.7142, tok/sec: 123978.46, flops:96.55, batch-reuse:1
@ 3505 train 4.3375 , allloss: 4.3384, dt: 1056.23ms, fracRes: 0.7587, norm(attn): 0.1875, norm(output): 2.0156, norm(x): 0.3569, norm(y): 0.9582, norm:0.7312, tok/sec: 124093.70, flops:96.64, batch-reuse:1
@ 3506 train 4.3281 , allloss: 4.3293, dt: 1051.47ms, fracRes: 0.7628, norm(attn): 0.1885, norm(output): 2.0156, norm(x): 0.3503, norm(y): 0.9581, norm:0.7481, tok/sec: 124656.12, flops:97.08, batch-reuse:1
@ 3507 train 4.4039 , allloss: 4.4049, dt: 1062.60ms, fracRes: 0.7589, norm(attn): 0.1875, norm(output): 2.0156, norm(x): 0.3599, norm(y): 0.9583, norm:0.7627, tok/sec: 123350.51, flops:96.07, batch-reuse:1
@ 3508 train 4.4922 , allloss: 4.4935, dt: 1049.26ms, fracRes: 0.7579, norm(attn): 0.1895, norm(output): 2.0625, norm(x): 0.3623, norm(y): 0.9582, norm:0.7376, tok/sec: 124918.84, flops:97.29, batch-reuse:1
@ 3509 train 4.4537 , allloss: 4.4550, dt: 1054.47ms, fracRes: 0.7604, norm(attn): 0.1885, norm(output): 2.0469, norm(x): 0.3553, norm(y): 0.9581, norm:0.7051, tok/sec: 124301.44, flops:96.81, batch-reuse:1
@ 3510 train 4.3884 , allloss: 4.3894, dt: 1042.81ms, fracRes: 0.7567, norm(attn): 0.1885, norm(output): 2.0781, norm(x): 0.3673, norm(y): 0.9583, norm:0.7093, tok/sec: 125690.82, flops:97.89, batch-reuse:1
@ 3511 train 4.4728 , allloss: 4.4738, dt: 1048.79ms, fracRes: 0.7601, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3575, norm(y): 0.9581, norm:0.6481, tok/sec: 124974.18, flops:97.33, batch-reuse:1
@ 3512 train 4.4556 , allloss: 4.4570, dt: 1059.34ms, fracRes: 0.7600, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 0.3580, norm(y): 0.9580, norm:0.8186, tok/sec: 123729.31, flops:96.36, batch-reuse:1
@ 3513 train 4.4062 , allloss: 4.4070, dt: 1052.29ms, fracRes: 0.7564, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 0.3688, norm(y): 0.9581, norm:0.6458, tok/sec: 124558.51, flops:97.01, batch-reuse:1
@ 3514 train 4.5558 , allloss: 4.5568, dt: 1054.61ms, fracRes: 0.7598, norm(attn): 0.1846, norm(output): 2.0156, norm(x): 0.3610, norm(y): 0.9580, norm:0.8807, tok/sec: 124284.92, flops:96.79, batch-reuse:1
@ 3515 train 4.3853 , allloss: 4.3862, dt: 1053.67ms, fracRes: 0.7581, norm(attn): 0.1875, norm(output): 2.0469, norm(x): 0.3631, norm(y): 0.9581, norm:0.7225, tok/sec: 124395.52, flops:96.88, batch-reuse:1
@ 3516 train 4.5213 , allloss: 4.5222, dt: 1071.44ms, fracRes: 0.7579, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3604, norm(y): 0.9580, norm:0.6708, tok/sec: 122332.73, flops:95.27, batch-reuse:1
@ 3517 train 4.4485 , allloss: 4.4495, dt: 1048.59ms, fracRes: 0.7569, norm(attn): 0.1875, norm(output): 2.0781, norm(x): 0.3630, norm(y): 0.9582, norm:0.8654, tok/sec: 124997.91, flops:97.35, batch-reuse:1
@ 3518 train 4.5279 , allloss: 4.5289, dt: 1058.64ms, fracRes: 0.7608, norm(attn): 0.1875, norm(output): 2.0312, norm(x): 0.3558, norm(y): 0.9577, norm:0.7891, tok/sec: 123811.54, flops:96.42, batch-reuse:1
@ 3519 train 4.3598 , allloss: 4.3605, dt: 1062.49ms, fracRes: 0.7574, norm(attn): 0.1875, norm(output): 2.0312, norm(x): 0.3631, norm(y): 0.9581, norm:0.7217, tok/sec: 123363.46, flops:96.08, batch-reuse:1
@ 3520 train 4.3795 , allloss: 4.3805, dt: 1057.65ms, fracRes: 0.7607, norm(attn): 0.1865, norm(output): 2.0312, norm(x): 0.3548, norm(y): 0.9576, norm:0.7450, tok/sec: 123927.70, flops:96.52, batch-reuse:1
@ 3521 train 4.4005 , allloss: 4.4017, dt: 1048.69ms, fracRes: 0.7581, norm(attn): 0.1885, norm(output): 2.0312, norm(x): 0.3616, norm(y): 0.9581, norm:0.6407, tok/sec: 124986.80, flops:97.34, batch-reuse:1
@ 3522 train 4.4936 , allloss: 4.4949, dt: 1069.90ms, fracRes: 0.7531, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3785, norm(y): 0.9580, norm:0.9985, tok/sec: 122508.48, flops:95.41, batch-reuse:1
@ 3523 train 4.4570 , allloss: 4.4581, dt: 1061.91ms, fracRes: 0.7567, norm(attn): 0.1895, norm(output): 2.1094, norm(x): 0.3691, norm(y): 0.9578, norm:1.5946, tok/sec: 123430.07, flops:96.13, batch-reuse:1
@ 3524 train 4.4773 , allloss: 4.4785, dt: 1046.25ms, fracRes: 0.7597, norm(attn): 0.1875, norm(output): 2.0625, norm(x): 0.3613, norm(y): 0.9578, norm:0.7484, tok/sec: 125278.14, flops:97.57, batch-reuse:1
@ 3525 train 4.4538 , allloss: 4.4550, dt: 1050.17ms, fracRes: 0.7587, norm(attn): 0.1885, norm(output): 2.0938, norm(x): 0.3639, norm(y): 0.9579, norm:0.9358, tok/sec: 124810.53, flops:97.20, batch-reuse:1
@ 3526 train 4.6029 , allloss: 4.6040, dt: 1054.73ms, fracRes: 0.7597, norm(attn): 0.1875, norm(output): 2.0625, norm(x): 0.3584, norm(y): 0.9580, norm:0.7937, tok/sec: 124270.67, flops:96.78, batch-reuse:1
@ 3527 train 4.6210 , allloss: 4.6221, dt: 1057.08ms, fracRes: 0.7595, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 0.3583, norm(y): 0.9577, norm:0.7017, tok/sec: 123994.79, flops:96.57, batch-reuse:1
@ 3528 train 4.6255 , allloss: 4.6267, dt: 1062.97ms, fracRes: 0.7606, norm(attn): 0.1855, norm(output): 2.0469, norm(x): 0.3569, norm(y): 0.9574, norm:0.7652, tok/sec: 123307.73, flops:96.03, batch-reuse:1
@ 3529 train 4.6794 , allloss: 4.6807, dt: 1040.99ms, fracRes: 0.7600, norm(attn): 0.1865, norm(output): 2.0781, norm(x): 0.3590, norm(y): 0.9575, norm:0.7827, tok/sec: 125911.47, flops:98.06, batch-reuse:1
@ 3530 train 4.6566 , allloss: 4.6576, dt: 1065.96ms, fracRes: 0.7619, norm(attn): 0.1855, norm(output): 2.0625, norm(x): 0.3535, norm(y): 0.9575, norm:0.6636, tok/sec: 122960.97, flops:95.76, batch-reuse:1
@ 3531 train 4.7590 , allloss: 4.7600, dt: 1044.68ms, fracRes: 0.7607, norm(attn): 0.1855, norm(output): 2.0938, norm(x): 0.3597, norm(y): 0.9575, norm:0.7668, tok/sec: 125466.16, flops:97.71, batch-reuse:1
@ 3532 train 4.6332 , allloss: 4.6339, dt: 1063.27ms, fracRes: 0.7590, norm(attn): 0.1865, norm(output): 2.0781, norm(x): 0.3624, norm(y): 0.9577, norm:0.7598, tok/sec: 123273.12, flops:96.01, batch-reuse:1
@ 3533 train 4.7380 , allloss: 4.7389, dt: 1059.99ms, fracRes: 0.7617, norm(attn): 0.1826, norm(output): 2.0625, norm(x): 0.3556, norm(y): 0.9573, norm:0.7553, tok/sec: 123654.53, flops:96.30, batch-reuse:1
@ 3534 train 4.5936 , allloss: 4.5945, dt: 1056.04ms, fracRes: 0.7616, norm(attn): 0.1865, norm(output): 2.0625, norm(x): 0.3568, norm(y): 0.9575, norm:0.7026, tok/sec: 124116.76, flops:96.66, batch-reuse:1
@ 3535 train 4.8056 , allloss: 4.8064, dt: 1052.34ms, fracRes: 0.7630, norm(attn): 0.1846, norm(output): 2.0469, norm(x): 0.3530, norm(y): 0.9573, norm:1.1109, tok/sec: 124552.59, flops:97.00, batch-reuse:1
@ 3536 train 4.5977 , allloss: 4.5985, dt: 1043.04ms, fracRes: 0.7588, norm(attn): 0.1855, norm(output): 2.0938, norm(x): 0.3647, norm(y): 0.9572, norm:1.1553, tok/sec: 125663.15, flops:97.87, batch-reuse:1
@ 3537 train 4.6651 , allloss: 4.6657, dt: 1054.26ms, fracRes: 0.7605, norm(attn): 0.1855, norm(output): 2.0625, norm(x): 0.3607, norm(y): 0.9572, norm:0.7350, tok/sec: 124326.26, flops:96.83, batch-reuse:1
@ 3538 train 4.6016 , allloss: 4.6023, dt: 1049.68ms, fracRes: 0.7602, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3607, norm(y): 0.9572, norm:0.9715, tok/sec: 124869.01, flops:97.25, batch-reuse:1
@ 3539 train 4.6023 , allloss: 4.6030, dt: 1062.88ms, fracRes: 0.7603, norm(attn): 0.1875, norm(output): 2.0781, norm(x): 0.3588, norm(y): 0.9573, norm:1.0144, tok/sec: 123318.02, flops:96.04, batch-reuse:1
@ 3540 train 4.6161 , allloss: 4.6167, dt: 1047.36ms, fracRes: 0.7602, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3579, norm(y): 0.9572, norm:0.6676, tok/sec: 125145.30, flops:97.46, batch-reuse:1
@ 3541 train 4.6277 , allloss: 4.6284, dt: 1067.62ms, fracRes: 0.7629, norm(attn): 0.1865, norm(output): 2.0625, norm(x): 0.3512, norm(y): 0.9570, norm:0.8567, tok/sec: 122769.89, flops:95.61, batch-reuse:1
@ 3542 train 4.6302 , allloss: 4.6311, dt: 1046.88ms, fracRes: 0.7617, norm(attn): 0.1865, norm(output): 2.0625, norm(x): 0.3538, norm(y): 0.9568, norm:0.7823, tok/sec: 125202.53, flops:97.51, batch-reuse:1
@ 3543 train 4.7095 , allloss: 4.7102, dt: 1039.25ms, fracRes: 0.7620, norm(attn): 0.1855, norm(output): 2.0781, norm(x): 0.3558, norm(y): 0.9571, norm:0.7169, tok/sec: 126122.14, flops:98.22, batch-reuse:1
@ 3544 train 4.5479 , allloss: 4.5487, dt: 1045.19ms, fracRes: 0.7604, norm(attn): 0.1865, norm(output): 2.0625, norm(x): 0.3574, norm(y): 0.9571, norm:0.6970, tok/sec: 125404.97, flops:97.67, batch-reuse:1
@ 3545 train 4.5989 , allloss: 4.5998, dt: 1049.81ms, fracRes: 0.7590, norm(attn): 0.1875, norm(output): 2.0781, norm(x): 0.3595, norm(y): 0.9572, norm:0.6095, tok/sec: 124852.96, flops:97.24, batch-reuse:1
@ 3546 train 4.5407 , allloss: 4.5417, dt: 1064.88ms, fracRes: 0.7598, norm(attn): 0.1875, norm(output): 2.0625, norm(x): 0.3576, norm(y): 0.9572, norm:0.5914, tok/sec: 123085.69, flops:95.86, batch-reuse:1
@ 3547 train 4.5617 , allloss: 4.5626, dt: 1046.96ms, fracRes: 0.7610, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 0.3557, norm(y): 0.9571, norm:0.6296, tok/sec: 125192.64, flops:97.50, batch-reuse:1
@ 3548 train 4.5578 , allloss: 4.5590, dt: 1051.69ms, fracRes: 0.7610, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3585, norm(y): 0.9569, norm:0.5414, tok/sec: 124629.95, flops:97.06, batch-reuse:1
@ 3549 train 4.5633 , allloss: 4.5645, dt: 1039.97ms, fracRes: 0.7618, norm(attn): 0.1855, norm(output): 2.0625, norm(x): 0.3549, norm(y): 0.9569, norm:0.5817, tok/sec: 126034.41, flops:98.16, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863, -22.3750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972, -17.8750, -11.8125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -19.5000, -11.4375, -17.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189, -17.8750, -10.6250, -13.5000, -15.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835, -13.3125, -10.6875, -12.1250, -13.5000, -11.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918, -18.7500, -10.9375, -15.8125, -16.7500, -12.1875, -13.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -24.8750, -14.2500, -23.3750, -22.6250, -16.2500, -20.7500, -22.8750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944, -15.5000, -10.9375, -13.4375, -14.7500, -11.7500, -11.1250, -10.3125, -14.0625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052, -16.2500, -11.0000, -13.8125, -15.6250, -11.3125, -11.2500, -11.9375, -15.0625,  -9.3125,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -9.8750,  -7.3750,  -9.4375,  -9.7500,  -8.2500,  -8.0625,  -8.0000,  -9.0625,  -5.6562,  -8.5625,     -inf,     -inf,     -inf,     -inf],
          [  4.9698, -19.2500, -11.5000, -16.6250, -16.7500, -11.6875, -13.9375, -15.6875, -17.3750,  -9.9375, -14.0625, -13.3750,     -inf,     -inf,     -inf],
          [  5.1299, -11.8750,  -7.5625, -11.3750, -10.9375,  -8.2500,  -9.4375, -10.9375, -11.8750,  -7.0938,  -9.3750,  -9.1250,  -6.6250,     -inf,     -inf],
          [  5.2781, -11.6875,  -8.8125, -10.8750, -11.8125,  -9.5000,  -9.2500,  -8.3750, -11.3750,  -7.2188, -11.1250,  -7.4375,  -5.0312, -10.0625,     -inf],
          [  5.4161, -14.7500,  -8.5000, -13.8125, -13.3125,  -8.7500, -11.4375, -13.2500, -14.6875,  -7.7500, -12.0625, -11.8750,  -7.4062, -12.6875, -16.1250]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9990],
        [0.9993],
        [0.9997],
        [0.9997],
        [0.9997],
        [0.9997],
        [1.0000],
        [0.9997],
        [0.9993],
        [0.9993],
        [0.9993],
        [0.9997],
        [0.9997]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0001,     0.0002,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0001,     0.0001,     0.0001,     0.0001,     0.0001,     0.0000,     0.0001,     0.0001,     0.0004,     0.0005,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863, -7.9688,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -6.7188, -7.9375,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -6.4688, -7.2500, -5.1250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189, -6.9375, -8.5000, -5.8750, -9.5000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835, -5.2812, -6.4062, -4.8750, -6.9375, -8.1250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918, -4.9062, -5.6562, -4.8750, -6.9375, -6.8750, -5.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589, -7.3438, -8.2500, -5.9375, -7.7188, -7.3125, -6.8438, -7.2812,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944, -6.4062, -7.5625, -5.6562, -8.0625, -8.7500, -6.2500, -5.8438, -8.1250,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052, -6.0938, -7.5312, -5.7812, -7.5312, -7.2812, -5.8438, -5.7188, -7.5312, -6.7188,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958, -6.5000, -7.4375, -6.1250, -8.8750, -9.4375, -7.3438, -7.0625, -8.2500, -7.3750, -8.0625,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -6.6562, -7.1875, -6.1875, -8.6250, -8.5625, -7.0000, -7.4062, -9.0625, -7.5312, -7.8438, -5.5000,    -inf,    -inf,    -inf],
          [ 5.1299, -4.4062, -5.4688, -3.8281, -4.7500, -4.4688, -3.7188, -4.3750, -4.9375, -3.9062, -4.1875, -2.7031, -2.5625,    -inf,    -inf],
          [ 5.2781, -5.9062, -6.8438, -5.3438, -7.7812, -8.7500, -6.3125, -5.6562, -7.8750, -5.7500, -6.9688, -3.7969, -3.7969, -6.1250,    -inf],
          [ 5.4161, -6.0312, -6.8125, -5.3438, -7.4688, -7.8438, -5.3438, -5.4062, -8.1875, -5.8438, -7.4062, -3.9062, -3.3438, -6.3438, -5.6875]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [1.0000],
        [1.0000],
        [0.9997],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0003,     0.0002,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0002,     0.0001,     0.0001,     0.0004,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0001,     0.0001,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0001,     0.0007,     0.0006,     0.0005,     0.0006,     0.0004,     0.0003,     0.0007,     0.0019,     0.0001,     0.0006,     0.0011,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0008,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0006,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863,  -8.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972, -11.1250,  -7.8750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -13.0625,  -8.8125,  -7.9688,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189, -10.3750,  -7.5312,  -6.7500,  -6.6250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -6.9688,  -5.1875,  -4.4062,  -4.7188,  -4.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918, -15.5625, -10.1875,  -9.5000,  -8.8125,  -8.5625,  -9.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -13.7500,  -7.7500,  -7.6562,  -7.2812,  -7.5938,  -9.2500, -11.3125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -6.1562,  -4.2500,  -4.0312,  -5.4062,  -4.9062,  -3.4531,  -3.5469,  -6.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -8.9375,  -5.3750,  -4.8750,  -5.7500,  -5.5000,  -5.0938,  -4.8125,  -5.1250,  -2.7656,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958, -12.2500,  -8.7500,  -7.8125,  -7.3125,  -7.6250,  -7.8125,  -9.6250,  -6.6562,  -7.2188,  -9.5000,     -inf,     -inf,     -inf,     -inf],
          [  4.9698, -10.3750,  -6.4062,  -6.0938,  -5.9688,  -5.5000,  -5.5938,  -6.5938,  -4.6875,  -3.5312,  -7.9375,  -5.0625,     -inf,     -inf,     -inf],
          [  5.1299,  -4.3438,  -2.1875,  -2.2656,  -2.5000,  -2.3594,  -2.8281,  -2.9219,  -2.1562,  -1.1484,  -4.2188,  -2.2188,  -1.7266,     -inf,     -inf],
          [  5.2781,  -6.8125,  -4.3125,  -4.2500,  -6.0938,  -6.2188,  -4.4375,  -4.7812,  -6.9062,  -4.2188,  -7.3750,  -4.1250,  -1.8125,  -6.7812,     -inf],
          [  5.4161, -10.1250,  -6.0000,  -6.1562,  -6.3125,  -6.4375,  -6.7812,  -7.3750,  -5.4062,  -4.6250,  -8.5625,  -5.1250,  -2.0938,  -5.5312,  -4.9375]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9971],
        [0.9938],
        [0.9967],
        [0.9997],
        [0.9980],
        [0.9997],
        [0.9997],
        [0.9997],
        [0.9993],
        [1.0000],
        [0.9987],
        [0.9951],
        [0.9993],
        [0.9984]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3203,     0.6797,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.0654,     0.0781,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0080,     0.0255,     0.0092,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0166,     0.0287,     0.0142,     0.9414,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.0410,     0.0654,     0.0226,     0.7891,     0.0786,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0183,     0.0688,     0.1240,     0.0354,     0.6445,     0.1060,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0245,     0.1543,     0.0043,     0.8008,     0.0156,     0.0001,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0186,     0.0312,     0.0141,     0.7344,     0.0718,     0.0004,     0.0013,     0.1279,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0084,     0.0383,     0.0825,     0.0267,     0.6016,     0.0635,     0.0008,     0.0055,     0.1709,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.0146,     0.0481,     0.0134,     0.6602,     0.0466,     0.0004,     0.0029,     0.0835,     0.0001,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0027,     0.0073,     0.0094,     0.0043,     0.0033,     0.0082,     0.0206,     0.0030,     0.0046,     0.0035,     0.0033,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.0442,     0.1084,     0.0079,     0.5469,     0.0281,     0.0004,     0.0012,     0.1240,     0.0002,     0.1348,     0.0007,     0.0001,     0.0000,     0.0000],
        [    0.0015,     0.0150,     0.0293,     0.0116,     0.5625,     0.0474,     0.0002,     0.0010,     0.0845,     0.0001,     0.1406,     0.0006,     0.0001,     0.1040,     0.0000],
        [    0.9844,     0.0003,     0.0005,     0.0007,     0.0002,     0.0004,     0.0030,     0.0026,     0.0002,     0.0011,     0.0002,     0.0006,     0.0052,     0.0002,     0.0006]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863,  2.1406,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -0.3672, -0.1943,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -2.0156, -0.8594, -1.8750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  6.8125,  7.3750,  6.6562, 10.8750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  6.4375,  6.9062,  5.8438,  9.3750,  7.0938,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  5.2188,  5.8125,  4.5312,  7.4375,  5.6562,  1.5000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  9.3750, 11.1875,  7.6250, 12.8750,  8.9375,  4.0938,  5.7500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  7.3125,  7.8438,  7.0625, 11.0000,  8.6875,  3.3594,  4.6562,  9.2500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  6.1250,  6.8750,  5.7500,  8.8750,  6.6250,  2.2344,  4.1562,  7.6250,  1.8750,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  6.3125,  7.5000,  6.2188, 10.1250,  7.4688,  2.8281,  4.7188,  8.0625,  1.5938,  8.4375,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -0.8867,  0.1167,  0.3770, -0.4160, -0.6797,  0.2432,  1.1562, -0.7812, -0.3438, -0.6250, -0.6758,    -inf,    -inf,    -inf],
          [ 5.1299,  7.5000,  8.3750,  5.7500, 10.0000,  7.0312,  2.8750,  3.8906,  8.5000,  1.8281,  8.6250,  3.3594,  1.3047,    -inf,    -inf],
          [ 5.2781,  7.5625,  8.2500,  7.3125, 11.1875,  8.6875,  3.4062,  4.8750,  9.3125,  2.3906,  9.8125,  4.3438,  2.9219,  9.5000,    -inf],
          [ 5.4161, -2.7969, -2.2031, -1.7734, -3.2188, -2.4531, -0.3926, -0.5195, -3.0156, -1.4297, -3.2500, -2.0000,  0.1641, -3.0781, -2.0312]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.7856],
        [0.8887],
        [0.8903],
        [0.0596],
        [0.0556],
        [0.1565],
        [0.1502],
        [0.0412],
        [0.2166],
        [0.0353],
        [0.7405],
        [0.1297],
        [0.0387],
        [0.8208]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0065, 0.9922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9844, 0.0034, 0.0107, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.2754, 0.3164, 0.3164, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0125, 0.5234, 0.1670, 0.1445, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0045, 0.3965, 0.1748, 0.0684, 0.0537, 0.3027, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0483, 0.1172, 0.0354, 0.1396, 0.0503, 0.0332, 0.5742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0063, 0.0737, 0.0364, 0.0415, 0.0128, 0.0233, 0.7305, 0.0767, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0046, 0.0830, 0.0342, 0.0205, 0.0586, 0.0486, 0.5039, 0.1602, 0.0864, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0073, 0.1484, 0.0400, 0.0249, 0.0157, 0.0226, 0.5469, 0.1152, 0.0405, 0.0378, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0075, 0.0845, 0.0176, 0.0151, 0.0427, 0.0243, 0.4473, 0.1128, 0.0664, 0.0679, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.0308, 0.0219, 0.0293, 0.0054, 0.0522, 0.1846, 0.0806, 0.0615, 0.0396, 0.0854, 0.0094, 0.0000, 0.0000, 0.0000],
        [0.0029, 0.0693, 0.0115, 0.0172, 0.0051, 0.0164, 0.6445, 0.0366, 0.0645, 0.0197, 0.0928, 0.0027, 0.0179, 0.0000, 0.0000],
        [0.0029, 0.0698, 0.0184, 0.0126, 0.0388, 0.0330, 0.4258, 0.1196, 0.0522, 0.0649, 0.0825, 0.0088, 0.0327, 0.0388, 0.0000],
        [0.0033, 0.0459, 0.0189, 0.0076, 0.0220, 0.0137, 0.2061, 0.0332, 0.0342, 0.0312, 0.0249, 0.0055, 0.0195, 0.0297, 0.5039]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863,  6.4062,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -3.4844, -2.3281,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726,  3.8594,  4.0000,  4.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  6.9688,  5.8125,  5.6562,  5.7188,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  8.0625,  7.2500,  6.2812,  6.0625,  7.7812,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  4.7812,  3.5781,  4.9688,  3.9219,  3.5156,  6.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  6.6250,  5.9062,  6.0625,  4.8750,  5.4688,  8.9375,  6.6562,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  7.3125,  6.4062,  5.9062,  6.9375,  6.7500,  9.1250,  7.9688,  7.3438,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  7.5938,  6.2812,  5.8125,  5.3750,  5.7188,  8.9375,  7.3438,  6.3125,  6.2188,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  7.1875,  5.6250,  5.4688,  6.5312,  5.9688,  8.8750,  7.5000,  6.9688,  6.9688,  7.5000,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698,  2.4062,  2.0625,  2.3594,  0.6602,  2.9375,  4.1875,  3.3594,  3.0938,  2.6562,  3.4219,  1.2188,    -inf,    -inf,    -inf],
          [ 5.1299,  8.3125,  6.5000,  6.9062,  5.6875,  6.8750, 10.5625,  7.6562,  8.2500,  7.0312,  8.6250,  5.0312,  6.9688,    -inf,    -inf],
          [ 5.2781,  8.4375,  7.1250,  6.7500,  7.8750,  7.6875, 10.2500,  9.0000,  8.1875,  8.3750,  8.6250,  6.3750,  7.6875,  7.8750,    -inf],
          [ 5.4161,  8.0000,  7.1250,  6.2188,  7.2812,  6.8125,  9.5000,  7.7188,  7.7188,  7.6562,  7.4062,  5.9062,  7.1562,  7.5938, 10.4375]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.6333],
        [0.7260],
        [0.4913],
        [0.3540],
        [0.2633],
        [0.2326],
        [0.3244],
        [0.2155],
        [0.3044],
        [0.2504],
        [0.4527],
        [0.2792],
        [0.1510],
        [0.1853]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(!:0.1011 the:0.1113,:0.2969 and:0.1572om:0.1113,:0.6172 a:0.1172____:0.0596)
____
------
		( the:0.1113,:0.2969 and:0.1572om:0.1113,:0.6172 a:0.1172____:0.0596.:0.1250)
.
The first two-thirds of the world's population is the second
@ 3550 train 4.5963 , allloss: 4.5973, dt: 1310.22ms, fracRes: 0.7606, norm(attn): 0.1875, norm(output): 2.0781, norm(x): 0.3574, norm(y): 0.9569, norm:0.5181, tok/sec: 100037.96, flops:77.91, batch-reuse:1
@ 3551 train 4.7272 , allloss: 4.7282, dt: 1061.95ms, fracRes: 0.7603, norm(attn): 0.1855, norm(output): 2.0938, norm(x): 0.3570, norm(y): 0.9568, norm:0.5602, tok/sec: 123425.53, flops:96.12, batch-reuse:1
@ 3552 train 4.6036 , allloss: 4.6045, dt: 1055.79ms, fracRes: 0.7591, norm(attn): 0.1846, norm(output): 2.0625, norm(x): 0.3600, norm(y): 0.9569, norm:0.6927, tok/sec: 124146.41, flops:96.69, batch-reuse:1
@ 3553 train 4.5883 , allloss: 4.5892, dt: 1050.53ms, fracRes: 0.7612, norm(attn): 0.1836, norm(output): 2.0625, norm(x): 0.3576, norm(y): 0.9567, norm:0.6808, tok/sec: 124767.53, flops:97.17, batch-reuse:1
@ 3554 train 4.5808 , allloss: 4.5817, dt: 1060.81ms, fracRes: 0.7603, norm(attn): 0.1865, norm(output): 2.0781, norm(x): 0.3594, norm(y): 0.9568, norm:0.6101, tok/sec: 123558.90, flops:96.23, batch-reuse:1
@ 3555 train 4.6339 , allloss: 4.6348, dt: 1050.59ms, fracRes: 0.7605, norm(attn): 0.1855, norm(output): 2.0781, norm(x): 0.3577, norm(y): 0.9568, norm:0.6278, tok/sec: 124760.57, flops:97.16, batch-reuse:1
@ 3556 train 4.5656 , allloss: 4.5664, dt: 1044.53ms, fracRes: 0.7581, norm(attn): 0.1865, norm(output): 2.0938, norm(x): 0.3627, norm(y): 0.9568, norm:0.6773, tok/sec: 125484.26, flops:97.73, batch-reuse:1
@ 3557 train 4.7190 , allloss: 4.7199, dt: 1052.11ms, fracRes: 0.7603, norm(attn): 0.1865, norm(output): 2.0781, norm(x): 0.3566, norm(y): 0.9565, norm:0.7507, tok/sec: 124580.64, flops:97.02, batch-reuse:1
@ 3558 train 4.4737 , allloss: 4.4747, dt: 1053.88ms, fracRes: 0.7588, norm(attn): 0.1865, norm(output): 2.0938, norm(x): 0.3632, norm(y): 0.9567, norm:0.7486, tok/sec: 124370.84, flops:96.86, batch-reuse:1
@ 3559 train 4.6219 , allloss: 4.6228, dt: 1051.44ms, fracRes: 0.7620, norm(attn): 0.1855, norm(output): 2.0469, norm(x): 0.3559, norm(y): 0.9566, norm:0.8039, tok/sec: 124659.74, flops:97.09, batch-reuse:1
@ 3560 train 4.5570 , allloss: 4.5580, dt: 1060.43ms, fracRes: 0.7623, norm(attn): 0.1855, norm(output): 2.0625, norm(x): 0.3574, norm(y): 0.9566, norm:0.9120, tok/sec: 123602.99, flops:96.26, batch-reuse:1
@ 3561 train 4.6131 , allloss: 4.6142, dt: 1050.03ms, fracRes: 0.7609, norm(attn): 0.1865, norm(output): 2.0781, norm(x): 0.3609, norm(y): 0.9566, norm:0.7487, tok/sec: 124827.19, flops:97.22, batch-reuse:1
@ 3562 train 4.6251 , allloss: 4.6262, dt: 1072.93ms, fracRes: 0.7603, norm(attn): 0.1865, norm(output): 2.0625, norm(x): 0.3605, norm(y): 0.9566, norm:1.1373, tok/sec: 122163.13, flops:95.14, batch-reuse:1
@ 3563 train 4.6129 , allloss: 4.6140, dt: 1052.33ms, fracRes: 0.7584, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3660, norm(y): 0.9567, norm:0.8120, tok/sec: 124554.34, flops:97.00, batch-reuse:1
@ 3564 train 4.5384 , allloss: 4.5392, dt: 1055.01ms, fracRes: 0.7576, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3695, norm(y): 0.9567, norm:0.6946, tok/sec: 124237.98, flops:96.76, batch-reuse:1
@ 3565 train 4.6086 , allloss: 4.6094, dt: 1045.53ms, fracRes: 0.7591, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3671, norm(y): 0.9566, norm:0.7392, tok/sec: 125364.56, flops:97.63, batch-reuse:1
@ 3566 train 4.5944 , allloss: 4.5953, dt: 1060.87ms, fracRes: 0.7608, norm(attn): 0.1875, norm(output): 2.0625, norm(x): 0.3605, norm(y): 0.9566, norm:0.6528, tok/sec: 123551.27, flops:96.22, batch-reuse:1
@ 3567 train 4.6375 , allloss: 4.6386, dt: 1063.04ms, fracRes: 0.7598, norm(attn): 0.1875, norm(output): 2.0312, norm(x): 0.3620, norm(y): 0.9564, norm:0.7558, tok/sec: 123298.99, flops:96.03, batch-reuse:1
@ 3568 train 4.5358 , allloss: 4.5367, dt: 1061.24ms, fracRes: 0.7600, norm(attn): 0.1865, norm(output): 2.0781, norm(x): 0.3627, norm(y): 0.9564, norm:0.7686, tok/sec: 123507.91, flops:96.19, batch-reuse:1
@ 3569 train 4.6540 , allloss: 4.6549, dt: 1044.99ms, fracRes: 0.7603, norm(attn): 0.1855, norm(output): 2.0625, norm(x): 0.3594, norm(y): 0.9564, norm:0.5901, tok/sec: 125429.23, flops:97.68, batch-reuse:1
@ 3570 train 4.6229 , allloss: 4.6238, dt: 1045.87ms, fracRes: 0.7608, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 0.3600, norm(y): 0.9563, norm:0.6316, tok/sec: 125323.09, flops:97.60, batch-reuse:1
@ 3571 train 4.5764 , allloss: 4.5772, dt: 1051.15ms, fracRes: 0.7561, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3731, norm(y): 0.9567, norm:0.5998, tok/sec: 124694.29, flops:97.11, batch-reuse:1
@ 3572 train 4.5671 , allloss: 4.5680, dt: 1053.09ms, fracRes: 0.7583, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3668, norm(y): 0.9566, norm:0.6648, tok/sec: 124464.72, flops:96.93, batch-reuse:1
@ 3573 train 4.6329 , allloss: 4.6338, dt: 1055.92ms, fracRes: 0.7588, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3656, norm(y): 0.9565, norm:0.5180, tok/sec: 124130.85, flops:96.67, batch-reuse:1
@ 3574 train 4.5070 , allloss: 4.5079, dt: 1044.50ms, fracRes: 0.7586, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3649, norm(y): 0.9565, norm:0.6277, tok/sec: 125487.67, flops:97.73, batch-reuse:1
@ 3575 train 4.5395 , allloss: 4.5404, dt: 1062.20ms, fracRes: 0.7580, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3685, norm(y): 0.9563, norm:0.6318, tok/sec: 123396.16, flops:96.10, batch-reuse:1
@ 3576 train 4.4675 , allloss: 4.4684, dt: 1044.65ms, fracRes: 0.7575, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3706, norm(y): 0.9564, norm:0.5618, tok/sec: 125470.25, flops:97.72, batch-reuse:1
@ 3577 train 4.7103 , allloss: 4.7112, dt: 1055.01ms, fracRes: 0.7582, norm(attn): 0.1875, norm(output): 2.0781, norm(x): 0.3705, norm(y): 0.9561, norm:0.6657, tok/sec: 124237.11, flops:96.76, batch-reuse:1
@ 3578 train 4.5549 , allloss: 4.5559, dt: 1050.89ms, fracRes: 0.7588, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3694, norm(y): 0.9563, norm:0.6208, tok/sec: 124724.45, flops:97.14, batch-reuse:1
@ 3579 train 4.5286 , allloss: 4.5302, dt: 1047.87ms, fracRes: 0.7591, norm(attn): 0.1875, norm(output): 2.0781, norm(x): 0.3674, norm(y): 0.9564, norm:0.6409, tok/sec: 125084.03, flops:97.42, batch-reuse:1
@ 3580 train 4.5835 , allloss: 4.5846, dt: 1054.51ms, fracRes: 0.7608, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 0.3621, norm(y): 0.9561, norm:0.5813, tok/sec: 124297.11, flops:96.80, batch-reuse:1
@ 3581 train 4.5001 , allloss: 4.5012, dt: 1050.78ms, fracRes: 0.7583, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3683, norm(y): 0.9562, norm:0.7682, tok/sec: 124737.24, flops:97.15, batch-reuse:1
@ 3582 train 4.5388 , allloss: 4.5396, dt: 1039.27ms, fracRes: 0.7581, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3681, norm(y): 0.9562, norm:0.8215, tok/sec: 126119.51, flops:98.22, batch-reuse:1
@ 3583 train 4.6283 , allloss: 4.6293, dt: 1065.96ms, fracRes: 0.7594, norm(attn): 0.1875, norm(output): 2.0781, norm(x): 0.3649, norm(y): 0.9560, norm:0.6702, tok/sec: 122961.25, flops:95.76, batch-reuse:1
@ 3584 train 4.5422 , allloss: 4.5430, dt: 1075.77ms, fracRes: 0.7575, norm(attn): 0.1885, norm(output): 2.0938, norm(x): 0.3706, norm(y): 0.9563, norm:0.6314, tok/sec: 121839.61, flops:94.89, batch-reuse:1
@ 3585 train 4.5443 , allloss: 4.5454, dt: 1067.62ms, fracRes: 0.7589, norm(attn): 0.1895, norm(output): 2.0625, norm(x): 0.3666, norm(y): 0.9560, norm:0.6289, tok/sec: 122770.16, flops:95.61, batch-reuse:1
@ 3586 train 4.4375 , allloss: 4.4384, dt: 1062.78ms, fracRes: 0.7580, norm(attn): 0.1885, norm(output): 2.0625, norm(x): 0.3694, norm(y): 0.9560, norm:0.5218, tok/sec: 123329.09, flops:96.05, batch-reuse:1
@ 3587 train 4.5950 , allloss: 4.5963, dt: 1059.21ms, fracRes: 0.7613, norm(attn): 0.1855, norm(output): 2.0625, norm(x): 0.3627, norm(y): 0.9557, norm:0.6203, tok/sec: 123745.16, flops:96.37, batch-reuse:1
@ 3588 train 4.5265 , allloss: 4.5274, dt: 1059.31ms, fracRes: 0.7577, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3713, norm(y): 0.9560, norm:0.6441, tok/sec: 123733.10, flops:96.36, batch-reuse:1
@ 3589 train 4.6250 , allloss: 4.6260, dt: 1063.80ms, fracRes: 0.7572, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3724, norm(y): 0.9559, norm:0.7284, tok/sec: 123211.15, flops:95.96, batch-reuse:1
@ 3590 train 4.4436 , allloss: 4.4446, dt: 1065.88ms, fracRes: 0.7580, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3697, norm(y): 0.9561, norm:0.7256, tok/sec: 122970.77, flops:95.77, batch-reuse:1
@ 3591 train 4.5588 , allloss: 4.5598, dt: 1046.87ms, fracRes: 0.7595, norm(attn): 0.1885, norm(output): 2.0938, norm(x): 0.3682, norm(y): 0.9559, norm:0.7370, tok/sec: 125203.67, flops:97.51, batch-reuse:1
@ 3592 train 4.4231 , allloss: 4.4242, dt: 1051.21ms, fracRes: 0.7572, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3753, norm(y): 0.9560, norm:0.6329, tok/sec: 124686.32, flops:97.11, batch-reuse:1
@ 3593 train 4.5951 , allloss: 4.5962, dt: 1059.02ms, fracRes: 0.7586, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3676, norm(y): 0.9559, norm:0.6328, tok/sec: 123767.73, flops:96.39, batch-reuse:1
@ 3594 train 4.5187 , allloss: 4.5201, dt: 1058.13ms, fracRes: 0.7603, norm(attn): 0.1875, norm(output): 2.0781, norm(x): 0.3645, norm(y): 0.9556, norm:0.5838, tok/sec: 123871.55, flops:96.47, batch-reuse:1
@ 3595 train 4.5739 , allloss: 4.5750, dt: 1060.72ms, fracRes: 0.7599, norm(attn): 0.1865, norm(output): 2.1094, norm(x): 0.3677, norm(y): 0.9554, norm:0.6437, tok/sec: 123569.15, flops:96.24, batch-reuse:1
@ 3596 train 4.5499 , allloss: 4.5509, dt: 1059.33ms, fracRes: 0.7569, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3731, norm(y): 0.9557, norm:0.6156, tok/sec: 123731.07, flops:96.36, batch-reuse:1
@ 3597 train 4.5191 , allloss: 4.5202, dt: 1062.70ms, fracRes: 0.7577, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3717, norm(y): 0.9559, norm:0.5777, tok/sec: 123338.11, flops:96.06, batch-reuse:1
@ 3598 train 4.5692 , allloss: 4.5702, dt: 1048.21ms, fracRes: 0.7583, norm(attn): 0.1885, norm(output): 2.0938, norm(x): 0.3715, norm(y): 0.9558, norm:0.5882, tok/sec: 125043.54, flops:97.38, batch-reuse:1
@ 3599 train 4.5224 , allloss: 4.5234, dt: 1064.58ms, fracRes: 0.7599, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3672, norm(y): 0.9556, norm:0.5701, tok/sec: 123121.33, flops:95.89, batch-reuse:1
@ 3600 train 4.4594 , allloss: 4.4605, dt: 1057.70ms, fracRes: 0.7570, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3741, norm(y): 0.9556, norm:0.6289, tok/sec: 123921.20, flops:96.51, batch-reuse:1
@ 3601 train 4.5342 , allloss: 4.5352, dt: 1051.98ms, fracRes: 0.7566, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3737, norm(y): 0.9556, norm:0.6409, tok/sec: 124595.72, flops:97.04, batch-reuse:1
@ 3602 train 4.6044 , allloss: 4.6055, dt: 1048.92ms, fracRes: 0.7572, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3703, norm(y): 0.9558, norm:0.6583, tok/sec: 124958.48, flops:97.32, batch-reuse:1
@ 3603 train 4.5552 , allloss: 4.5564, dt: 1045.37ms, fracRes: 0.7567, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3756, norm(y): 0.9557, norm:0.6491, tok/sec: 125383.75, flops:97.65, batch-reuse:1
@ 3604 train 4.5433 , allloss: 4.5444, dt: 1052.47ms, fracRes: 0.7568, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3779, norm(y): 0.9556, norm:0.5868, tok/sec: 124537.97, flops:96.99, batch-reuse:1
@ 3605 train 4.5282 , allloss: 4.5293, dt: 1060.59ms, fracRes: 0.7572, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3740, norm(y): 0.9557, norm:0.6170, tok/sec: 123584.51, flops:96.25, batch-reuse:1
@ 3606 train 4.4792 , allloss: 4.4801, dt: 1063.45ms, fracRes: 0.7557, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3778, norm(y): 0.9558, norm:0.5813, tok/sec: 123251.20, flops:95.99, batch-reuse:1
@ 3607 train 4.5251 , allloss: 4.5260, dt: 1047.08ms, fracRes: 0.7572, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3739, norm(y): 0.9557, norm:0.6926, tok/sec: 125178.02, flops:97.49, batch-reuse:1
@ 3608 train 4.5798 , allloss: 4.5807, dt: 1037.45ms, fracRes: 0.7573, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3734, norm(y): 0.9555, norm:0.8287, tok/sec: 126340.89, flops:98.39, batch-reuse:1
@ 3609 train 4.5911 , allloss: 4.5919, dt: 1062.75ms, fracRes: 0.7588, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3693, norm(y): 0.9553, norm:0.6622, tok/sec: 123333.02, flops:96.05, batch-reuse:1
@ 3610 train 4.5533 , allloss: 4.5544, dt: 1057.27ms, fracRes: 0.7622, norm(attn): 0.1855, norm(output): 2.0781, norm(x): 0.3595, norm(y): 0.9551, norm:0.7719, tok/sec: 123971.55, flops:96.55, batch-reuse:1
@ 3611 train 4.5471 , allloss: 4.5480, dt: 1065.36ms, fracRes: 0.7593, norm(attn): 0.1865, norm(output): 2.0938, norm(x): 0.3692, norm(y): 0.9553, norm:0.8686, tok/sec: 123030.40, flops:95.82, batch-reuse:1
@ 3612 train 4.5622 , allloss: 4.5633, dt: 1055.38ms, fracRes: 0.7593, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3701, norm(y): 0.9554, norm:0.7739, tok/sec: 124194.45, flops:96.72, batch-reuse:1
@ 3613 train 4.5275 , allloss: 4.5285, dt: 1041.90ms, fracRes: 0.7594, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3686, norm(y): 0.9556, norm:0.7181, tok/sec: 125801.21, flops:97.97, batch-reuse:1
@ 3614 train 4.5397 , allloss: 4.5409, dt: 1044.88ms, fracRes: 0.7593, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3686, norm(y): 0.9554, norm:0.6229, tok/sec: 125442.68, flops:97.70, batch-reuse:1
@ 3615 train 4.5132 , allloss: 4.5145, dt: 1049.89ms, fracRes: 0.7580, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3731, norm(y): 0.9555, norm:0.6071, tok/sec: 124844.09, flops:97.23, batch-reuse:1
@ 3616 train 4.4507 , allloss: 4.4519, dt: 1040.12ms, fracRes: 0.7607, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3672, norm(y): 0.9554, norm:0.6285, tok/sec: 126016.10, flops:98.14, batch-reuse:1
@ 3617 train 4.4628 , allloss: 4.4638, dt: 1044.57ms, fracRes: 0.7585, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3732, norm(y): 0.9556, norm:0.6094, tok/sec: 125479.93, flops:97.72, batch-reuse:1
@ 3618 train 4.4015 , allloss: 4.4025, dt: 1057.98ms, fracRes: 0.7581, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3744, norm(y): 0.9555, norm:0.5593, tok/sec: 123889.05, flops:96.49, batch-reuse:1
@ 3619 train 4.4888 , allloss: 4.4897, dt: 1047.91ms, fracRes: 0.7585, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3745, norm(y): 0.9555, norm:0.7242, tok/sec: 125079.33, flops:97.41, batch-reuse:1
@ 3620 train 4.5528 , allloss: 4.5539, dt: 1048.57ms, fracRes: 0.7606, norm(attn): 0.1895, norm(output): 2.0938, norm(x): 0.3694, norm(y): 0.9551, norm:0.6769, tok/sec: 125000.55, flops:97.35, batch-reuse:1
@ 3621 train 4.4823 , allloss: 4.4832, dt: 1068.96ms, fracRes: 0.7575, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3800, norm(y): 0.9553, norm:0.8672, tok/sec: 122616.52, flops:95.49, batch-reuse:1
@ 3622 train 4.5478 , allloss: 4.5487, dt: 1043.83ms, fracRes: 0.7593, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3724, norm(y): 0.9555, norm:0.9546, tok/sec: 125568.06, flops:97.79, batch-reuse:1
@ 3623 train 4.5646 , allloss: 4.5662, dt: 1052.98ms, fracRes: 0.7594, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3727, norm(y): 0.9552, norm:0.8108, tok/sec: 124477.06, flops:96.94, batch-reuse:1
@ 3624 train 4.4146 , allloss: 4.4158, dt: 1049.14ms, fracRes: 0.7594, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3703, norm(y): 0.9553, norm:0.5627, tok/sec: 124932.27, flops:97.30, batch-reuse:1
@ 3625 train 4.5301 , allloss: 4.5311, dt: 1057.99ms, fracRes: 0.7578, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3746, norm(y): 0.9553, norm:0.6228, tok/sec: 123888.05, flops:96.48, batch-reuse:1
@ 3626 train 4.4560 , allloss: 4.4571, dt: 1075.11ms, fracRes: 0.7571, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 0.3767, norm(y): 0.9554, norm:0.6735, tok/sec: 121915.40, flops:94.95, batch-reuse:1
@ 3627 train 4.5567 , allloss: 4.5576, dt: 1063.04ms, fracRes: 0.7582, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3744, norm(y): 0.9553, norm:0.6146, tok/sec: 123299.13, flops:96.03, batch-reuse:1
@ 3628 train 4.5659 , allloss: 4.5669, dt: 1050.92ms, fracRes: 0.7602, norm(attn): 0.1865, norm(output): 2.1094, norm(x): 0.3682, norm(y): 0.9550, norm:0.5778, tok/sec: 124720.97, flops:97.13, batch-reuse:1
@ 3629 train 4.4896 , allloss: 4.4907, dt: 1049.25ms, fracRes: 0.7599, norm(attn): 0.1865, norm(output): 2.1250, norm(x): 0.3689, norm(y): 0.9549, norm:0.6754, tok/sec: 124920.03, flops:97.29, batch-reuse:1
@ 3630 train 4.4930 , allloss: 4.4941, dt: 1064.41ms, fracRes: 0.7609, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3670, norm(y): 0.9550, norm:0.6915, tok/sec: 123140.14, flops:95.90, batch-reuse:1
@ 3631 train 4.4707 , allloss: 4.4721, dt: 1060.92ms, fracRes: 0.7579, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3736, norm(y): 0.9553, norm:0.5868, tok/sec: 123545.27, flops:96.22, batch-reuse:1
@ 3632 train 4.5045 , allloss: 4.5056, dt: 1048.61ms, fracRes: 0.7611, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3647, norm(y): 0.9551, norm:0.5868, tok/sec: 124996.18, flops:97.35, batch-reuse:1
@ 3633 train 4.5615 , allloss: 4.5625, dt: 1047.51ms, fracRes: 0.7603, norm(attn): 0.1875, norm(output): 2.1094, norm(x): 0.3673, norm(y): 0.9549, norm:0.6446, tok/sec: 125127.33, flops:97.45, batch-reuse:1
@ 3634 train 4.4020 , allloss: 4.4029, dt: 1055.61ms, fracRes: 0.7579, norm(attn): 0.1895, norm(output): 2.1094, norm(x): 0.3759, norm(y): 0.9554, norm:0.5811, tok/sec: 124166.66, flops:96.70, batch-reuse:1
@ 3635 train 4.5087 , allloss: 4.5101, dt: 1064.99ms, fracRes: 0.7583, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3766, norm(y): 0.9551, norm:0.6497, tok/sec: 123073.95, flops:95.85, batch-reuse:1
@ 3636 train 4.4196 , allloss: 4.4205, dt: 1051.00ms, fracRes: 0.7577, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3788, norm(y): 0.9552, norm:0.5880, tok/sec: 124711.60, flops:97.13, batch-reuse:1
@ 3637 train 4.5321 , allloss: 4.5334, dt: 1050.58ms, fracRes: 0.7573, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3792, norm(y): 0.9549, norm:0.8115, tok/sec: 124761.53, flops:97.16, batch-reuse:1
@ 3638 train 4.4801 , allloss: 4.4809, dt: 1047.81ms, fracRes: 0.7559, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 0.3808, norm(y): 0.9552, norm:0.6375, tok/sec: 125091.91, flops:97.42, batch-reuse:1
@ 3639 train 4.4912 , allloss: 4.4922, dt: 1044.56ms, fracRes: 0.7561, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3800, norm(y): 0.9550, norm:0.5952, tok/sec: 125480.30, flops:97.72, batch-reuse:1
@ 3640 train 4.4430 , allloss: 4.4443, dt: 1052.85ms, fracRes: 0.7562, norm(attn): 0.1895, norm(output): 2.1875, norm(x): 0.3838, norm(y): 0.9551, norm:0.6377, tok/sec: 124492.85, flops:96.96, batch-reuse:1
@ 3641 train 4.5401 , allloss: 4.5412, dt: 1052.93ms, fracRes: 0.7590, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3736, norm(y): 0.9550, norm:0.6295, tok/sec: 124482.87, flops:96.95, batch-reuse:1
@ 3642 train 4.6489 , allloss: 4.6499, dt: 1051.03ms, fracRes: 0.7578, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3761, norm(y): 0.9551, norm:0.5727, tok/sec: 124707.90, flops:97.12, batch-reuse:1
@ 3643 train 4.4699 , allloss: 4.4722, dt: 1046.49ms, fracRes: 0.7576, norm(attn): 0.1885, norm(output): 2.1406, norm(x): 0.3811, norm(y): 0.9550, norm:0.6153, tok/sec: 125249.00, flops:97.54, batch-reuse:1
@ 3644 train 4.5642 , allloss: 4.5691, dt: 1040.44ms, fracRes: 0.7587, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3750, norm(y): 0.9550, norm:0.6601, tok/sec: 125977.32, flops:98.11, batch-reuse:1
@ 3645 train 4.4821 , allloss: 4.4853, dt: 1055.63ms, fracRes: 0.7564, norm(attn): 0.1885, norm(output): 2.1406, norm(x): 0.3787, norm(y): 0.9551, norm:0.7683, tok/sec: 124164.13, flops:96.70, batch-reuse:1
@ 3646 train 4.5260 , allloss: 4.5284, dt: 1060.70ms, fracRes: 0.7580, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3739, norm(y): 0.9549, norm:0.6990, tok/sec: 123571.59, flops:96.24, batch-reuse:1
@ 3647 train 4.5044 , allloss: 4.5056, dt: 1047.89ms, fracRes: 0.7567, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 0.3786, norm(y): 0.9550, norm:0.6018, tok/sec: 125082.26, flops:97.41, batch-reuse:1
@ 3648 train 4.5231 , allloss: 4.5243, dt: 1039.47ms, fracRes: 0.7575, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3767, norm(y): 0.9547, norm:0.6664, tok/sec: 126094.95, flops:98.20, batch-reuse:1
@ 3649 train 4.5587 , allloss: 4.5597, dt: 1061.25ms, fracRes: 0.7558, norm(attn): 0.1885, norm(output): 2.1406, norm(x): 0.3835, norm(y): 0.9548, norm:0.6845, tok/sec: 123507.74, flops:96.19, batch-reuse:1
@ 3650 train 4.5665 , allloss: 4.5676, dt: 1048.62ms, fracRes: 0.7570, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3794, norm(y): 0.9548, norm:0.6747, tok/sec: 124994.70, flops:97.35, batch-reuse:1
@ 3651 train 4.5175 , allloss: 4.5359, dt: 1047.39ms, fracRes: 0.7577, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3759, norm(y): 0.9548, norm:0.7538, tok/sec: 125142.06, flops:97.46, batch-reuse:1
@ 3652 train 4.4382 , allloss: 4.4392, dt: 1057.81ms, fracRes: 0.7577, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3765, norm(y): 0.9547, norm:0.7212, tok/sec: 123909.33, flops:96.50, batch-reuse:1
@ 3653 train 4.4541 , allloss: 4.4551, dt: 1038.25ms, fracRes: 0.7578, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3752, norm(y): 0.9548, norm:0.6247, tok/sec: 126242.62, flops:98.32, batch-reuse:1
@ 3654 train 4.5836 , allloss: 4.5850, dt: 1055.60ms, fracRes: 0.7585, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3735, norm(y): 0.9546, norm:0.5883, tok/sec: 124168.79, flops:96.70, batch-reuse:1
@ 3655 train 4.6206 , allloss: 4.6215, dt: 1043.72ms, fracRes: 0.7574, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3772, norm(y): 0.9547, norm:0.5853, tok/sec: 125581.77, flops:97.80, batch-reuse:1
@ 3656 train 4.5626 , allloss: 4.5635, dt: 1050.84ms, fracRes: 0.7568, norm(attn): 0.1875, norm(output): 2.1562, norm(x): 0.3800, norm(y): 0.9546, norm:0.8377, tok/sec: 124730.73, flops:97.14, batch-reuse:1
@ 3657 train 4.5463 , allloss: 4.5472, dt: 1059.68ms, fracRes: 0.7558, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3817, norm(y): 0.9547, norm:0.9801, tok/sec: 123689.59, flops:96.33, batch-reuse:1
@ 3658 train 4.4462 , allloss: 4.4473, dt: 1051.67ms, fracRes: 0.7557, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3801, norm(y): 0.9546, norm:0.7049, tok/sec: 124632.02, flops:97.06, batch-reuse:1
@ 3659 train 4.5150 , allloss: 4.5163, dt: 1053.37ms, fracRes: 0.7577, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3742, norm(y): 0.9547, norm:0.6994, tok/sec: 124431.25, flops:96.91, batch-reuse:1
@ 3660 train 4.3884 , allloss: 4.3895, dt: 1053.58ms, fracRes: 0.7570, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3809, norm(y): 0.9546, norm:0.7617, tok/sec: 124405.99, flops:96.89, batch-reuse:1
@ 3661 train 4.4166 , allloss: 4.4179, dt: 1047.71ms, fracRes: 0.7561, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3795, norm(y): 0.9547, norm:2.2594, tok/sec: 125103.07, flops:97.43, batch-reuse:1
@ 3662 train 4.2648 , allloss: 4.2658, dt: 1068.43ms, fracRes: 0.7552, norm(attn): 0.1924, norm(output): 2.1406, norm(x): 0.3817, norm(y): 0.9550, norm:0.8791, tok/sec: 122677.04, flops:95.54, batch-reuse:1
@ 3663 train 4.3507 , allloss: 4.3516, dt: 1046.34ms, fracRes: 0.7557, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3827, norm(y): 0.9551, norm:0.8592, tok/sec: 125266.72, flops:97.56, batch-reuse:1
@ 3664 train 4.4147 , allloss: 4.4157, dt: 1047.27ms, fracRes: 0.7554, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 0.3813, norm(y): 0.9549, norm:0.7160, tok/sec: 125155.56, flops:97.47, batch-reuse:1
@ 3665 train 4.4255 , allloss: 4.4266, dt: 1053.21ms, fracRes: 0.7554, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3823, norm(y): 0.9546, norm:0.7627, tok/sec: 124449.96, flops:96.92, batch-reuse:1
@ 3666 train 4.3116 , allloss: 4.3136, dt: 1053.70ms, fracRes: 0.7573, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 0.3747, norm(y): 0.9547, norm:0.8266, tok/sec: 124391.58, flops:96.88, batch-reuse:1
@ 3667 train 4.4379 , allloss: 4.4394, dt: 1051.01ms, fracRes: 0.7589, norm(attn): 0.1895, norm(output): 2.0938, norm(x): 0.3684, norm(y): 0.9545, norm:0.7267, tok/sec: 124710.87, flops:97.13, batch-reuse:1
@ 3668 train 4.4100 , allloss: 4.4110, dt: 1052.41ms, fracRes: 0.7584, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3754, norm(y): 0.9547, norm:0.7685, tok/sec: 124545.17, flops:97.00, batch-reuse:1
@ 3669 train 4.5001 , allloss: 4.5010, dt: 1058.12ms, fracRes: 0.7577, norm(attn): 0.1895, norm(output): 2.1406, norm(x): 0.3808, norm(y): 0.9546, norm:1.1373, tok/sec: 123872.16, flops:96.47, batch-reuse:1
@ 3670 train 4.4957 , allloss: 4.4968, dt: 1063.31ms, fracRes: 0.7561, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3814, norm(y): 0.9548, norm:0.8920, tok/sec: 123267.34, flops:96.00, batch-reuse:1
@ 3671 train 4.3304 , allloss: 4.3314, dt: 1050.27ms, fracRes: 0.7566, norm(attn): 0.1914, norm(output): 2.1719, norm(x): 0.3864, norm(y): 0.9547, norm:0.7653, tok/sec: 124797.92, flops:97.19, batch-reuse:1
@ 3672 train 4.3776 , allloss: 4.3785, dt: 1044.60ms, fracRes: 0.7576, norm(attn): 0.1914, norm(output): 2.1250, norm(x): 0.3790, norm(y): 0.9548, norm:0.6923, tok/sec: 125475.52, flops:97.72, batch-reuse:1
@ 3673 train 4.3832 , allloss: 4.3842, dt: 1047.48ms, fracRes: 0.7572, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3800, norm(y): 0.9548, norm:0.7419, tok/sec: 125130.24, flops:97.45, batch-reuse:1
@ 3674 train 4.3883 , allloss: 4.3894, dt: 1060.12ms, fracRes: 0.7592, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3727, norm(y): 0.9545, norm:0.6387, tok/sec: 123639.07, flops:96.29, batch-reuse:1
@ 3675 train 4.4142 , allloss: 4.4151, dt: 1061.95ms, fracRes: 0.7571, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3775, norm(y): 0.9546, norm:0.7294, tok/sec: 123425.20, flops:96.12, batch-reuse:1
@ 3676 train 4.4486 , allloss: 4.4496, dt: 1064.37ms, fracRes: 0.7565, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3775, norm(y): 0.9546, norm:0.6220, tok/sec: 123144.63, flops:95.91, batch-reuse:1
@ 3677 train 4.3962 , allloss: 4.3972, dt: 1057.67ms, fracRes: 0.7584, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3735, norm(y): 0.9547, norm:0.6053, tok/sec: 123925.33, flops:96.51, batch-reuse:1
@ 3678 train 4.4020 , allloss: 4.4031, dt: 1051.96ms, fracRes: 0.7589, norm(attn): 0.1895, norm(output): 2.1406, norm(x): 0.3729, norm(y): 0.9546, norm:0.6053, tok/sec: 124597.36, flops:97.04, batch-reuse:1
@ 3679 train 4.3471 , allloss: 4.3481, dt: 1045.08ms, fracRes: 0.7597, norm(attn): 0.1885, norm(output): 2.1406, norm(x): 0.3727, norm(y): 0.9545, norm:0.6461, tok/sec: 125418.47, flops:97.68, batch-reuse:1
@ 3680 train 4.2636 , allloss: 4.2658, dt: 1055.90ms, fracRes: 0.7543, norm(attn): 0.1895, norm(output): 2.1875, norm(x): 0.3883, norm(y): 0.9548, norm:0.5921, tok/sec: 124132.62, flops:96.67, batch-reuse:1
@ 3681 train 4.3316 , allloss: 4.3326, dt: 1050.10ms, fracRes: 0.7562, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3806, norm(y): 0.9547, norm:0.7518, tok/sec: 124819.17, flops:97.21, batch-reuse:1
@ 3682 train 4.3238 , allloss: 4.3249, dt: 1046.98ms, fracRes: 0.7582, norm(attn): 0.1885, norm(output): 2.1406, norm(x): 0.3770, norm(y): 0.9544, norm:0.7926, tok/sec: 125190.50, flops:97.50, batch-reuse:1
@ 3683 train 4.4173 , allloss: 4.4184, dt: 1055.04ms, fracRes: 0.7581, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 0.3765, norm(y): 0.9545, norm:0.5568, tok/sec: 124233.86, flops:96.75, batch-reuse:1
@ 3684 train 4.4467 , allloss: 4.4477, dt: 1054.30ms, fracRes: 0.7573, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3798, norm(y): 0.9545, norm:0.6923, tok/sec: 124321.65, flops:96.82, batch-reuse:1
@ 3685 train 4.3103 , allloss: 4.3112, dt: 1061.06ms, fracRes: 0.7559, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3843, norm(y): 0.9546, norm:0.6363, tok/sec: 123528.81, flops:96.20, batch-reuse:1
@ 3686 train 4.3237 , allloss: 4.3246, dt: 1062.31ms, fracRes: 0.7561, norm(attn): 0.1904, norm(output): 2.1562, norm(x): 0.3818, norm(y): 0.9547, norm:0.5922, tok/sec: 123384.09, flops:96.09, batch-reuse:1
@ 3687 train 4.3784 , allloss: 4.3793, dt: 1047.37ms, fracRes: 0.7558, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3818, norm(y): 0.9545, norm:0.7029, tok/sec: 125144.22, flops:97.46, batch-reuse:1
@ 3688 train 4.4331 , allloss: 4.4339, dt: 1051.30ms, fracRes: 0.7558, norm(attn): 0.1875, norm(output): 2.1562, norm(x): 0.3808, norm(y): 0.9546, norm:0.6233, tok/sec: 124676.67, flops:97.10, batch-reuse:1
@ 3689 train 4.4318 , allloss: 4.4327, dt: 1051.23ms, fracRes: 0.7559, norm(attn): 0.1875, norm(output): 2.1406, norm(x): 0.3794, norm(y): 0.9545, norm:0.6430, tok/sec: 124684.34, flops:97.10, batch-reuse:1
@ 3690 train 4.2857 , allloss: 4.2868, dt: 1051.45ms, fracRes: 0.7547, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3823, norm(y): 0.9547, norm:0.6111, tok/sec: 124658.67, flops:97.08, batch-reuse:1
@ 3691 train 4.4120 , allloss: 4.4134, dt: 1054.14ms, fracRes: 0.7577, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3748, norm(y): 0.9545, norm:0.6139, tok/sec: 124340.10, flops:96.84, batch-reuse:1
@ 3692 train 4.4336 , allloss: 4.4347, dt: 1043.29ms, fracRes: 0.7597, norm(attn): 0.1875, norm(output): 2.1406, norm(x): 0.3698, norm(y): 0.9542, norm:0.7895, tok/sec: 125633.43, flops:97.84, batch-reuse:1
@ 3693 train 4.3901 , allloss: 4.3913, dt: 1063.13ms, fracRes: 0.7562, norm(attn): 0.1885, norm(output): 2.1406, norm(x): 0.3809, norm(y): 0.9545, norm:0.5975, tok/sec: 123289.15, flops:96.02, batch-reuse:1
@ 3694 train 4.3895 , allloss: 4.3909, dt: 1046.35ms, fracRes: 0.7555, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3831, norm(y): 0.9546, norm:0.6715, tok/sec: 125266.41, flops:97.56, batch-reuse:1
@ 3695 train 4.3827 , allloss: 4.3838, dt: 1048.98ms, fracRes: 0.7562, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3802, norm(y): 0.9546, norm:0.5785, tok/sec: 124951.29, flops:97.31, batch-reuse:1
@ 3696 train 4.4049 , allloss: 4.4063, dt: 1057.12ms, fracRes: 0.7572, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3752, norm(y): 0.9545, norm:0.6038, tok/sec: 123989.81, flops:96.56, batch-reuse:1
@ 3697 train 4.3516 , allloss: 4.3527, dt: 1047.50ms, fracRes: 0.7540, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3847, norm(y): 0.9546, norm:0.6022, tok/sec: 125128.44, flops:97.45, batch-reuse:1
@ 3698 train 4.4677 , allloss: 4.4692, dt: 1056.14ms, fracRes: 0.7573, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 0.3770, norm(y): 0.9542, norm:0.5830, tok/sec: 124104.32, flops:96.65, batch-reuse:1
@ 3699 train 4.2503 , allloss: 4.2516, dt: 1055.86ms, fracRes: 0.7554, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3820, norm(y): 0.9545, norm:0.6420, tok/sec: 124137.19, flops:96.68, batch-reuse:1
@ 3700 train 4.4093 , allloss: 4.4106, dt: 1053.37ms, fracRes: 0.7571, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3747, norm(y): 0.9543, norm:0.6546, tok/sec: 124430.72, flops:96.91, batch-reuse:1
@ 3701 train 4.4658 , allloss: 4.4667, dt: 1046.40ms, fracRes: 0.7562, norm(attn): 0.1875, norm(output): 2.1562, norm(x): 0.3779, norm(y): 0.9544, norm:0.6100, tok/sec: 125259.93, flops:97.55, batch-reuse:1
@ 3702 train 4.3658 , allloss: 4.3667, dt: 1035.50ms, fracRes: 0.7544, norm(attn): 0.1895, norm(output): 2.1406, norm(x): 0.3845, norm(y): 0.9544, norm:0.6638, tok/sec: 126578.58, flops:98.58, batch-reuse:1
@ 3703 train 4.2945 , allloss: 4.2954, dt: 1049.02ms, fracRes: 0.7549, norm(attn): 0.1914, norm(output): 2.1250, norm(x): 0.3804, norm(y): 0.9546, norm:0.5269, tok/sec: 124947.60, flops:97.31, batch-reuse:1
@ 3704 train 4.3415 , allloss: 4.3426, dt: 1050.49ms, fracRes: 0.7552, norm(attn): 0.1895, norm(output): 2.1406, norm(x): 0.3807, norm(y): 0.9544, norm:0.6547, tok/sec: 124772.37, flops:97.17, batch-reuse:1
@ 3705 train 4.4053 , allloss: 4.4071, dt: 1058.47ms, fracRes: 0.7541, norm(attn): 0.1885, norm(output): 2.2031, norm(x): 0.3888, norm(y): 0.9542, norm:0.7726, tok/sec: 123831.85, flops:96.44, batch-reuse:1
@ 3706 train 4.3593 , allloss: 4.3601, dt: 1071.92ms, fracRes: 0.7556, norm(attn): 0.1875, norm(output): 2.1719, norm(x): 0.3860, norm(y): 0.9543, norm:0.7807, tok/sec: 122277.68, flops:95.23, batch-reuse:1
@ 3707 train 4.5520 , allloss: 4.5535, dt: 1058.46ms, fracRes: 0.7592, norm(attn): 0.1875, norm(output): 2.1406, norm(x): 0.3728, norm(y): 0.9540, norm:0.6395, tok/sec: 123833.21, flops:96.44, batch-reuse:1
@ 3708 train 4.5621 , allloss: 4.5635, dt: 1054.64ms, fracRes: 0.7579, norm(attn): 0.1885, norm(output): 2.1406, norm(x): 0.3762, norm(y): 0.9540, norm:0.5962, tok/sec: 124281.43, flops:96.79, batch-reuse:1
@ 3709 train 4.5540 , allloss: 4.5558, dt: 1047.93ms, fracRes: 0.7568, norm(attn): 0.1895, norm(output): 2.1406, norm(x): 0.3778, norm(y): 0.9541, norm:0.6886, tok/sec: 125076.71, flops:97.41, batch-reuse:1
@ 3710 train 4.6135 , allloss: 4.6151, dt: 1050.78ms, fracRes: 0.7571, norm(attn): 0.1895, norm(output): 2.1406, norm(x): 0.3759, norm(y): 0.9542, norm:0.6804, tok/sec: 124737.92, flops:97.15, batch-reuse:1
@ 3711 train 4.6693 , allloss: 4.6711, dt: 1044.09ms, fracRes: 0.7580, norm(attn): 0.1885, norm(output): 2.1719, norm(x): 0.3765, norm(y): 0.9540, norm:0.6583, tok/sec: 125536.58, flops:97.77, batch-reuse:1
@ 3712 train 4.5891 , allloss: 4.5910, dt: 1043.71ms, fracRes: 0.7581, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3764, norm(y): 0.9539, norm:0.8013, tok/sec: 125583.15, flops:97.80, batch-reuse:1
@ 3713 train 4.7321 , allloss: 4.7332, dt: 1065.99ms, fracRes: 0.7590, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 0.3702, norm(y): 0.9541, norm:1.1862, tok/sec: 122958.14, flops:95.76, batch-reuse:1
@ 3714 train 4.6497 , allloss: 4.6511, dt: 1042.37ms, fracRes: 0.7588, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 0.3736, norm(y): 0.9538, norm:0.8555, tok/sec: 125744.18, flops:97.93, batch-reuse:1
@ 3715 train 4.5993 , allloss: 4.6006, dt: 1064.02ms, fracRes: 0.7586, norm(attn): 0.1885, norm(output): 2.1406, norm(x): 0.3779, norm(y): 0.9539, norm:0.7300, tok/sec: 123185.86, flops:95.94, batch-reuse:1
@ 3716 train 4.5744 , allloss: 4.5766, dt: 1053.84ms, fracRes: 0.7596, norm(attn): 0.1875, norm(output): 2.1406, norm(x): 0.3747, norm(y): 0.9539, norm:0.8871, tok/sec: 124375.18, flops:96.86, batch-reuse:1
@ 3717 train 4.5589 , allloss: 4.5605, dt: 1054.63ms, fracRes: 0.7578, norm(attn): 0.1885, norm(output): 2.1719, norm(x): 0.3793, norm(y): 0.9542, norm:0.7338, tok/sec: 124282.02, flops:96.79, batch-reuse:1
@ 3718 train 4.5177 , allloss: 4.5204, dt: 1060.46ms, fracRes: 0.7581, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3792, norm(y): 0.9542, norm:0.7013, tok/sec: 123598.68, flops:96.26, batch-reuse:1
@ 3719 train 4.5614 , allloss: 4.5632, dt: 1079.67ms, fracRes: 0.7574, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3809, norm(y): 0.9542, norm:0.6551, tok/sec: 121399.96, flops:94.55, batch-reuse:1
@ 3720 train 4.5122 , allloss: 4.5135, dt: 1049.29ms, fracRes: 0.7573, norm(attn): 0.1895, norm(output): 2.1719, norm(x): 0.3808, norm(y): 0.9541, norm:0.6749, tok/sec: 124914.72, flops:97.28, batch-reuse:1
@ 3721 train 4.5254 , allloss: 4.5274, dt: 1063.60ms, fracRes: 0.7567, norm(attn): 0.1895, norm(output): 2.1719, norm(x): 0.3818, norm(y): 0.9540, norm:0.6348, tok/sec: 123234.26, flops:95.98, batch-reuse:1
@ 3722 train 4.4718 , allloss: 4.4747, dt: 1057.20ms, fracRes: 0.7580, norm(attn): 0.1875, norm(output): 2.1719, norm(x): 0.3769, norm(y): 0.9540, norm:0.6469, tok/sec: 123980.55, flops:96.56, batch-reuse:1
@ 3723 train 4.5467 , allloss: 4.5488, dt: 1068.45ms, fracRes: 0.7573, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3790, norm(y): 0.9541, norm:0.7012, tok/sec: 122674.93, flops:95.54, batch-reuse:1
@ 3724 train 4.6120 , allloss: 4.6146, dt: 1063.37ms, fracRes: 0.7590, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3764, norm(y): 0.9541, norm:0.6841, tok/sec: 123261.18, flops:96.00, batch-reuse:1
@ 3725 train 4.6019 , allloss: 4.6035, dt: 1053.86ms, fracRes: 0.7585, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3782, norm(y): 0.9539, norm:0.6461, tok/sec: 124372.90, flops:96.86, batch-reuse:1
@ 3726 train 4.6201 , allloss: 4.6218, dt: 1060.49ms, fracRes: 0.7576, norm(attn): 0.1895, norm(output): 2.1719, norm(x): 0.3821, norm(y): 0.9540, norm:0.5815, tok/sec: 123595.18, flops:96.26, batch-reuse:1
@ 3727 train 4.5797 , allloss: 4.5814, dt: 1048.45ms, fracRes: 0.7576, norm(attn): 0.1875, norm(output): 2.1562, norm(x): 0.3798, norm(y): 0.9538, norm:0.7095, tok/sec: 125015.36, flops:97.36, batch-reuse:1
@ 3728 train 4.5548 , allloss: 4.5574, dt: 1043.94ms, fracRes: 0.7573, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3805, norm(y): 0.9540, norm:0.6999, tok/sec: 125555.62, flops:97.78, batch-reuse:1
@ 3729 train 4.5757 , allloss: 4.5785, dt: 1069.23ms, fracRes: 0.7567, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3798, norm(y): 0.9540, norm:0.6768, tok/sec: 122585.46, flops:95.47, batch-reuse:1
@ 3730 train 4.5815 , allloss: 4.5841, dt: 1050.51ms, fracRes: 0.7569, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3814, norm(y): 0.9540, norm:0.6203, tok/sec: 124770.45, flops:97.17, batch-reuse:1
@ 3731 train 4.5565 , allloss: 4.5591, dt: 1052.24ms, fracRes: 0.7565, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 0.3811, norm(y): 0.9541, norm:0.6727, tok/sec: 124564.58, flops:97.01, batch-reuse:1
@ 3732 train 4.6055 , allloss: 4.6086, dt: 1060.19ms, fracRes: 0.7582, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 0.3783, norm(y): 0.9539, norm:0.6983, tok/sec: 123630.87, flops:96.28, batch-reuse:1
@ 3733 train 4.6130 , allloss: 4.6158, dt: 1063.30ms, fracRes: 0.7577, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3817, norm(y): 0.9541, norm:0.6656, tok/sec: 123269.25, flops:96.00, batch-reuse:1
@ 3734 train 4.5533 , allloss: 4.5561, dt: 1054.41ms, fracRes: 0.7576, norm(attn): 0.1895, norm(output): 2.1719, norm(x): 0.3825, norm(y): 0.9540, norm:0.6951, tok/sec: 124308.50, flops:96.81, batch-reuse:1
@ 3735 train 4.6728 , allloss: 4.6771, dt: 1067.48ms, fracRes: 0.7590, norm(attn): 0.1895, norm(output): 2.1406, norm(x): 0.3769, norm(y): 0.9537, norm:0.6974, tok/sec: 122786.45, flops:95.63, batch-reuse:1
@ 3736 train 4.6506 , allloss: 4.6541, dt: 1063.32ms, fracRes: 0.7594, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3740, norm(y): 0.9539, norm:0.8696, tok/sec: 123266.70, flops:96.00, batch-reuse:1
@ 3737 train 4.5121 , allloss: 4.5147, dt: 1043.02ms, fracRes: 0.7583, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 0.3761, norm(y): 0.9539, norm:0.5839, tok/sec: 125665.54, flops:97.87, batch-reuse:1
@ 3738 train 4.5399 , allloss: 4.5425, dt: 1043.90ms, fracRes: 0.7585, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 0.3764, norm(y): 0.9538, norm:0.6652, tok/sec: 125559.83, flops:97.79, batch-reuse:1
@ 3739 train 4.5147 , allloss: 4.5167, dt: 1059.89ms, fracRes: 0.7566, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3819, norm(y): 0.9539, norm:0.7286, tok/sec: 123666.08, flops:96.31, batch-reuse:1
@ 3740 train 4.6083 , allloss: 4.6109, dt: 1047.26ms, fracRes: 0.7553, norm(attn): 0.1895, norm(output): 2.1719, norm(x): 0.3850, norm(y): 0.9539, norm:0.7448, tok/sec: 125157.16, flops:97.47, batch-reuse:1
@ 3741 train 4.8055 , allloss: 4.8099, dt: 1063.30ms, fracRes: 0.7604, norm(attn): 0.1875, norm(output): 2.0938, norm(x): 0.3669, norm(y): 0.9535, norm:0.8874, tok/sec: 123268.94, flops:96.00, batch-reuse:1
@ 3742 train 4.5027 , allloss: 4.5042, dt: 1048.93ms, fracRes: 0.7564, norm(attn): 0.1895, norm(output): 2.1406, norm(x): 0.3793, norm(y): 0.9539, norm:1.0894, tok/sec: 124958.11, flops:97.32, batch-reuse:1
@ 3743 train 4.5808 , allloss: 4.5833, dt: 1060.62ms, fracRes: 0.7562, norm(attn): 0.1895, norm(output): 2.1094, norm(x): 0.3804, norm(y): 0.9540, norm:0.8330, tok/sec: 123581.07, flops:96.25, batch-reuse:1
@ 3744 train 4.7693 , allloss: 4.7720, dt: 1051.69ms, fracRes: 0.7592, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3740, norm(y): 0.9539, norm:0.7931, tok/sec: 124629.47, flops:97.06, batch-reuse:1
@ 3745 train 4.6274 , allloss: 4.6290, dt: 1060.92ms, fracRes: 0.7607, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 0.3740, norm(y): 0.9536, norm:1.0074, tok/sec: 123546.02, flops:96.22, batch-reuse:1
@ 3746 train 4.5544 , allloss: 4.5562, dt: 1070.71ms, fracRes: 0.7594, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 0.3771, norm(y): 0.9540, norm:0.8945, tok/sec: 122415.95, flops:95.34, batch-reuse:1
@ 3747 train 4.5468 , allloss: 4.5484, dt: 1051.68ms, fracRes: 0.7585, norm(attn): 0.1914, norm(output): 2.1250, norm(x): 0.3794, norm(y): 0.9541, norm:0.8624, tok/sec: 124631.08, flops:97.06, batch-reuse:1
@ 3748 train 4.5528 , allloss: 4.5549, dt: 1058.08ms, fracRes: 0.7576, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3799, norm(y): 0.9542, norm:0.7118, tok/sec: 123877.38, flops:96.48, batch-reuse:1
@ 3749 train 4.5710 , allloss: 4.5727, dt: 1051.10ms, fracRes: 0.7573, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 0.3777, norm(y): 0.9540, norm:0.8061, tok/sec: 124700.26, flops:97.12, batch-reuse:1
@ 3750 train 4.5969 , allloss: 4.5985, dt: 1063.20ms, fracRes: 0.7576, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3781, norm(y): 0.9541, norm:0.6502, tok/sec: 123280.61, flops:96.01, batch-reuse:1
@ 3751 train 4.5550 , allloss: 4.5570, dt: 1053.20ms, fracRes: 0.7570, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3814, norm(y): 0.9541, norm:0.5749, tok/sec: 124451.39, flops:96.92, batch-reuse:1
@ 3752 train 4.5412 , allloss: 4.5431, dt: 1052.52ms, fracRes: 0.7603, norm(attn): 0.1914, norm(output): 2.1406, norm(x): 0.3727, norm(y): 0.9538, norm:0.8962, tok/sec: 124531.20, flops:96.99, batch-reuse:1
@ 3753 train 4.5696 , allloss: 4.5722, dt: 1050.57ms, fracRes: 0.7562, norm(attn): 0.1963, norm(output): 2.1719, norm(x): 0.3862, norm(y): 0.9540, norm:0.9745, tok/sec: 124762.44, flops:97.17, batch-reuse:1
@ 3754 train 4.4973 , allloss: 4.4998, dt: 1055.48ms, fracRes: 0.7567, norm(attn): 0.1914, norm(output): 2.1875, norm(x): 0.3876, norm(y): 0.9540, norm:0.6904, tok/sec: 124182.03, flops:96.71, batch-reuse:1
@ 3755 train 4.5466 , allloss: 4.5491, dt: 1047.81ms, fracRes: 0.7569, norm(attn): 0.1904, norm(output): 2.1719, norm(x): 0.3859, norm(y): 0.9541, norm:0.7180, tok/sec: 125091.29, flops:97.42, batch-reuse:1
@ 3756 train 4.6416 , allloss: 4.6448, dt: 1060.87ms, fracRes: 0.7578, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3844, norm(y): 0.9541, norm:0.8396, tok/sec: 123551.46, flops:96.22, batch-reuse:1
@ 3757 train 4.5767 , allloss: 4.5790, dt: 1054.29ms, fracRes: 0.7562, norm(attn): 0.1914, norm(output): 2.2031, norm(x): 0.3891, norm(y): 0.9541, norm:0.6816, tok/sec: 124322.02, flops:96.82, batch-reuse:1
@ 3758 train 4.5173 , allloss: 4.5197, dt: 1068.98ms, fracRes: 0.7574, norm(attn): 0.1904, norm(output): 2.1562, norm(x): 0.3837, norm(y): 0.9539, norm:0.6837, tok/sec: 122614.27, flops:95.49, batch-reuse:1
@ 3759 train 4.5395 , allloss: 4.5413, dt: 1050.21ms, fracRes: 0.7561, norm(attn): 0.1934, norm(output): 2.1875, norm(x): 0.3888, norm(y): 0.9540, norm:0.6910, tok/sec: 124805.20, flops:97.20, batch-reuse:1
@ 3760 train 4.5843 , allloss: 4.5861, dt: 1043.64ms, fracRes: 0.7568, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3840, norm(y): 0.9541, norm:0.6619, tok/sec: 125591.21, flops:97.81, batch-reuse:1
@ 3761 train 4.6695 , allloss: 4.6717, dt: 1060.42ms, fracRes: 0.7584, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3798, norm(y): 0.9538, norm:0.6448, tok/sec: 123603.57, flops:96.26, batch-reuse:1
@ 3762 train 4.4653 , allloss: 4.4674, dt: 1065.91ms, fracRes: 0.7600, norm(attn): 0.1934, norm(output): 2.1094, norm(x): 0.3737, norm(y): 0.9537, norm:0.8653, tok/sec: 122966.72, flops:95.77, batch-reuse:1
@ 3763 train 4.6353 , allloss: 4.6380, dt: 1059.35ms, fracRes: 0.7602, norm(attn): 0.1914, norm(output): 2.1094, norm(x): 0.3754, norm(y): 0.9538, norm:0.8148, tok/sec: 123728.28, flops:96.36, batch-reuse:1
@ 3764 train 4.5259 , allloss: 4.5273, dt: 1048.20ms, fracRes: 0.7562, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3862, norm(y): 0.9540, norm:0.6168, tok/sec: 125044.79, flops:97.39, batch-reuse:1
@ 3765 train 4.5072 , allloss: 4.5089, dt: 1052.85ms, fracRes: 0.7561, norm(attn): 0.1924, norm(output): 2.1406, norm(x): 0.3850, norm(y): 0.9541, norm:0.7315, tok/sec: 124492.37, flops:96.96, batch-reuse:1
@ 3766 train 4.5181 , allloss: 4.5214, dt: 1051.43ms, fracRes: 0.7575, norm(attn): 0.1914, norm(output): 2.1094, norm(x): 0.3792, norm(y): 0.9541, norm:0.7579, tok/sec: 124660.31, flops:97.09, batch-reuse:1
@ 3767 train 4.5175 , allloss: 4.5194, dt: 1054.49ms, fracRes: 0.7558, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 0.3834, norm(y): 0.9541, norm:0.6682, tok/sec: 124298.97, flops:96.80, batch-reuse:1
@ 3768 train 4.5177 , allloss: 4.5195, dt: 1055.54ms, fracRes: 0.7556, norm(attn): 0.1924, norm(output): 2.1562, norm(x): 0.3842, norm(y): 0.9539, norm:0.7688, tok/sec: 124174.96, flops:96.71, batch-reuse:1
@ 3769 train 4.7244 , allloss: 4.7263, dt: 1054.86ms, fracRes: 0.7568, norm(attn): 0.1895, norm(output): 2.1406, norm(x): 0.3766, norm(y): 0.9540, norm:0.7683, tok/sec: 124255.45, flops:96.77, batch-reuse:1
@ 3770 train 4.5688 , allloss: 4.5709, dt: 1055.03ms, fracRes: 0.7573, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 0.3768, norm(y): 0.9539, norm:0.7008, tok/sec: 124234.87, flops:96.75, batch-reuse:1
@ 3771 train 4.5682 , allloss: 4.5699, dt: 1062.46ms, fracRes: 0.7585, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3764, norm(y): 0.9538, norm:0.8079, tok/sec: 123366.06, flops:96.08, batch-reuse:1
@ 3772 train 4.5400 , allloss: 4.5418, dt: 1052.27ms, fracRes: 0.7569, norm(attn): 0.1895, norm(output): 2.1562, norm(x): 0.3843, norm(y): 0.9540, norm:0.6186, tok/sec: 124561.45, flops:97.01, batch-reuse:1
@ 3773 train 4.5423 , allloss: 4.5439, dt: 1056.38ms, fracRes: 0.7567, norm(attn): 0.1904, norm(output): 2.1719, norm(x): 0.3842, norm(y): 0.9539, norm:0.7409, tok/sec: 124076.36, flops:96.63, batch-reuse:1
@ 3774 train 4.5430 , allloss: 4.5449, dt: 1050.72ms, fracRes: 0.7567, norm(attn): 0.1895, norm(output): 2.1719, norm(x): 0.3850, norm(y): 0.9539, norm:0.7474, tok/sec: 124745.39, flops:97.15, batch-reuse:1
@ 3775 train 4.6183 , allloss: 4.6199, dt: 1062.36ms, fracRes: 0.7600, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 0.3749, norm(y): 0.9536, norm:0.7576, tok/sec: 123378.41, flops:96.09, batch-reuse:1
@ 3776 train 4.6218 , allloss: 4.6230, dt: 1049.04ms, fracRes: 0.7564, norm(attn): 0.1924, norm(output): 2.1250, norm(x): 0.3813, norm(y): 0.9537, norm:0.9294, tok/sec: 124944.33, flops:97.31, batch-reuse:1
@ 3777 train 4.5547 , allloss: 4.5559, dt: 1061.84ms, fracRes: 0.7568, norm(attn): 0.1914, norm(output): 2.1406, norm(x): 0.3796, norm(y): 0.9537, norm:0.6308, tok/sec: 123438.44, flops:96.13, batch-reuse:1
@ 3778 train 4.5079 , allloss: 4.5090, dt: 1055.35ms, fracRes: 0.7551, norm(attn): 0.1924, norm(output): 2.1875, norm(x): 0.3889, norm(y): 0.9540, norm:0.7768, tok/sec: 124197.85, flops:96.73, batch-reuse:1
@ 3779 train 4.4613 , allloss: 4.4625, dt: 1059.48ms, fracRes: 0.7574, norm(attn): 0.1914, norm(output): 2.1250, norm(x): 0.3816, norm(y): 0.9539, norm:0.6724, tok/sec: 123713.97, flops:96.35, batch-reuse:1
@ 3780 train 4.5250 , allloss: 4.5263, dt: 1050.65ms, fracRes: 0.7568, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3832, norm(y): 0.9537, norm:0.8191, tok/sec: 124753.66, flops:97.16, batch-reuse:1
@ 3781 train 4.4689 , allloss: 4.4705, dt: 1058.48ms, fracRes: 0.7568, norm(attn): 0.1914, norm(output): 2.1406, norm(x): 0.3811, norm(y): 0.9537, norm:0.7442, tok/sec: 123829.87, flops:96.44, batch-reuse:1
@ 3782 train 4.7577 , allloss: 4.7597, dt: 1054.48ms, fracRes: 0.7561, norm(attn): 0.1895, norm(output): 2.1094, norm(x): 0.3798, norm(y): 0.9535, norm:0.8418, tok/sec: 124300.68, flops:96.81, batch-reuse:1
@ 3783 train 4.4606 , allloss: 4.4629, dt: 1050.91ms, fracRes: 0.7542, norm(attn): 0.1914, norm(output): 2.1406, norm(x): 0.3855, norm(y): 0.9538, norm:0.8570, tok/sec: 124722.16, flops:97.13, batch-reuse:1
@ 3784 train 4.5023 , allloss: 4.5037, dt: 1053.88ms, fracRes: 0.7569, norm(attn): 0.1914, norm(output): 2.1406, norm(x): 0.3803, norm(y): 0.9537, norm:0.6692, tok/sec: 124371.04, flops:96.86, batch-reuse:1
@ 3785 train 4.4945 , allloss: 4.4960, dt: 1075.52ms, fracRes: 0.7572, norm(attn): 0.1904, norm(output): 2.1562, norm(x): 0.3804, norm(y): 0.9536, norm:0.6477, tok/sec: 121869.03, flops:94.91, batch-reuse:1
@ 3786 train 4.5375 , allloss: 4.5388, dt: 1053.04ms, fracRes: 0.7558, norm(attn): 0.1924, norm(output): 2.1562, norm(x): 0.3827, norm(y): 0.9536, norm:0.7077, tok/sec: 124469.76, flops:96.94, batch-reuse:1
@ 3787 train 4.5490 , allloss: 4.5506, dt: 1061.04ms, fracRes: 0.7571, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 0.3780, norm(y): 0.9534, norm:0.6799, tok/sec: 123531.08, flops:96.21, batch-reuse:1
@ 3788 train 4.4840 , allloss: 4.4860, dt: 1046.96ms, fracRes: 0.7559, norm(attn): 0.1904, norm(output): 2.1562, norm(x): 0.3829, norm(y): 0.9535, norm:0.6871, tok/sec: 125193.04, flops:97.50, batch-reuse:1
@ 3789 train 4.5370 , allloss: 4.5388, dt: 1057.33ms, fracRes: 0.7586, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 0.3764, norm(y): 0.9532, norm:0.7161, tok/sec: 123964.98, flops:96.54, batch-reuse:1
@ 3790 train 4.6112 , allloss: 4.6123, dt: 1053.34ms, fracRes: 0.7569, norm(attn): 0.1914, norm(output): 2.1250, norm(x): 0.3830, norm(y): 0.9534, norm:0.7074, tok/sec: 124434.29, flops:96.91, batch-reuse:1
@ 3791 train 4.5600 , allloss: 4.5613, dt: 1058.23ms, fracRes: 0.7584, norm(attn): 0.1914, norm(output): 2.1406, norm(x): 0.3817, norm(y): 0.9531, norm:0.8878, tok/sec: 123859.13, flops:96.46, batch-reuse:1
@ 3792 train 4.6192 , allloss: 4.6213, dt: 1046.93ms, fracRes: 0.7571, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3838, norm(y): 0.9534, norm:1.1063, tok/sec: 125196.00, flops:97.50, batch-reuse:1
@ 3793 train 4.5613 , allloss: 4.5637, dt: 1046.08ms, fracRes: 0.7564, norm(attn): 0.1914, norm(output): 2.1250, norm(x): 0.3835, norm(y): 0.9536, norm:0.8354, tok/sec: 125298.04, flops:97.58, batch-reuse:1
@ 3794 train 4.4976 , allloss: 4.4989, dt: 1056.28ms, fracRes: 0.7544, norm(attn): 0.1924, norm(output): 2.1562, norm(x): 0.3903, norm(y): 0.9536, norm:0.7675, tok/sec: 124087.73, flops:96.64, batch-reuse:1
@ 3795 train 4.4675 , allloss: 4.4687, dt: 1051.32ms, fracRes: 0.7576, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3817, norm(y): 0.9534, norm:0.8471, tok/sec: 124673.99, flops:97.10, batch-reuse:1
@ 3796 train 4.5721 , allloss: 4.5735, dt: 1074.61ms, fracRes: 0.7566, norm(attn): 0.1904, norm(output): 2.1562, norm(x): 0.3840, norm(y): 0.9534, norm:0.6805, tok/sec: 121971.88, flops:94.99, batch-reuse:1
@ 3797 train 4.6315 , allloss: 4.6330, dt: 1055.54ms, fracRes: 0.7615, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 0.3712, norm(y): 0.9528, norm:0.6151, tok/sec: 124175.69, flops:96.71, batch-reuse:1
@ 3798 train 4.5303 , allloss: 4.5319, dt: 1054.79ms, fracRes: 0.7573, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3825, norm(y): 0.9534, norm:0.6602, tok/sec: 124263.54, flops:96.78, batch-reuse:1
@ 3799 train 4.5284 , allloss: 4.5302, dt: 1070.03ms, fracRes: 0.7568, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3826, norm(y): 0.9534, norm:0.6614, tok/sec: 122493.46, flops:95.40, batch-reuse:1
@ 3800 train 4.5010 , allloss: 4.5026, dt: 1053.86ms, fracRes: 0.7569, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3833, norm(y): 0.9535, norm:0.5700, tok/sec: 124373.57, flops:96.86, batch-reuse:1
@ 3801 train 4.4771 , allloss: 4.4786, dt: 1057.05ms, fracRes: 0.7557, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3864, norm(y): 0.9535, norm:0.5911, tok/sec: 123997.72, flops:96.57, batch-reuse:1
@ 3802 train 4.4794 , allloss: 4.4808, dt: 1056.24ms, fracRes: 0.7551, norm(attn): 0.1914, norm(output): 2.1719, norm(x): 0.3898, norm(y): 0.9535, norm:0.5401, tok/sec: 124092.58, flops:96.64, batch-reuse:1
@ 3803 train 4.5028 , allloss: 4.5039, dt: 1045.88ms, fracRes: 0.7559, norm(attn): 0.1914, norm(output): 2.1875, norm(x): 0.3869, norm(y): 0.9535, norm:0.5817, tok/sec: 125322.01, flops:97.60, batch-reuse:1
@ 3804 train 4.4780 , allloss: 4.4795, dt: 1062.72ms, fracRes: 0.7579, norm(attn): 0.1924, norm(output): 2.1406, norm(x): 0.3788, norm(y): 0.9533, norm:0.6057, tok/sec: 123336.78, flops:96.06, batch-reuse:1
@ 3805 train 4.5509 , allloss: 4.5521, dt: 1046.00ms, fracRes: 0.7567, norm(attn): 0.1934, norm(output): 2.1719, norm(x): 0.3838, norm(y): 0.9532, norm:0.5781, tok/sec: 125308.04, flops:97.59, batch-reuse:1
@ 3806 train 4.5015 , allloss: 4.5029, dt: 1056.86ms, fracRes: 0.7561, norm(attn): 0.1914, norm(output): 2.1719, norm(x): 0.3842, norm(y): 0.9534, norm:0.6571, tok/sec: 124019.85, flops:96.59, batch-reuse:1
@ 3807 train 4.4423 , allloss: 4.4440, dt: 1055.36ms, fracRes: 0.7567, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3848, norm(y): 0.9534, norm:0.5775, tok/sec: 124196.25, flops:96.72, batch-reuse:1
@ 3808 train 4.4735 , allloss: 4.4761, dt: 1055.60ms, fracRes: 0.7574, norm(attn): 0.1914, norm(output): 2.1719, norm(x): 0.3812, norm(y): 0.9533, norm:0.5732, tok/sec: 124168.09, flops:96.70, batch-reuse:1
@ 3809 train 4.4458 , allloss: 4.4471, dt: 1058.13ms, fracRes: 0.7550, norm(attn): 0.1914, norm(output): 2.1875, norm(x): 0.3902, norm(y): 0.9534, norm:0.6222, tok/sec: 123871.91, flops:96.47, batch-reuse:1
@ 3810 train 4.4572 , allloss: 4.4584, dt: 1057.26ms, fracRes: 0.7560, norm(attn): 0.1914, norm(output): 2.1875, norm(x): 0.3875, norm(y): 0.9534, norm:0.6599, tok/sec: 123973.84, flops:96.55, batch-reuse:1
@ 3811 train 4.4186 , allloss: 4.4204, dt: 1054.93ms, fracRes: 0.7558, norm(attn): 0.1943, norm(output): 2.2031, norm(x): 0.3865, norm(y): 0.9532, norm:0.6283, tok/sec: 124246.86, flops:96.76, batch-reuse:1
@ 3812 train 4.4117 , allloss: 4.4134, dt: 1051.94ms, fracRes: 0.7547, norm(attn): 0.1934, norm(output): 2.2188, norm(x): 0.3912, norm(y): 0.9536, norm:0.5957, tok/sec: 124600.38, flops:97.04, batch-reuse:1
@ 3813 train 4.3018 , allloss: 4.3035, dt: 1057.02ms, fracRes: 0.7564, norm(attn): 0.1943, norm(output): 2.1719, norm(x): 0.3845, norm(y): 0.9534, norm:0.6443, tok/sec: 124001.53, flops:96.57, batch-reuse:1
@ 3814 train 4.4713 , allloss: 4.4731, dt: 1282.96ms, fracRes: 0.7555, norm(attn): 0.1943, norm(output): 2.1719, norm(x): 0.3888, norm(y): 0.9535, norm:0.5738, tok/sec: 102164.09, flops:79.57, batch-reuse:1
@ 3815 train 4.5216 , allloss: 4.5237, dt: 1047.26ms, fracRes: 0.7590, norm(attn): 0.1943, norm(output): 2.1250, norm(x): 0.3784, norm(y): 0.9532, norm:0.6059, tok/sec: 125156.79, flops:97.47, batch-reuse:1
@ 3816 train 4.4882 , allloss: 4.4895, dt: 1061.66ms, fracRes: 0.7548, norm(attn): 0.1934, norm(output): 2.1719, norm(x): 0.3876, norm(y): 0.9536, norm:0.7315, tok/sec: 123459.40, flops:96.15, batch-reuse:1
@ 3817 train 4.4507 , allloss: 4.4521, dt: 1052.64ms, fracRes: 0.7560, norm(attn): 0.1924, norm(output): 2.1562, norm(x): 0.3831, norm(y): 0.9536, norm:0.7083, tok/sec: 124517.21, flops:96.97, batch-reuse:1
@ 3818 train 4.4731 , allloss: 4.4746, dt: 1068.93ms, fracRes: 0.7563, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3836, norm(y): 0.9533, norm:0.7097, tok/sec: 122620.29, flops:95.50, batch-reuse:1
@ 3819 train 4.4586 , allloss: 4.4600, dt: 1044.27ms, fracRes: 0.7576, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3808, norm(y): 0.9533, norm:0.6001, tok/sec: 125515.14, flops:97.75, batch-reuse:1
@ 3820 train 4.5194 , allloss: 4.5209, dt: 1052.36ms, fracRes: 0.7558, norm(attn): 0.1904, norm(output): 2.1719, norm(x): 0.3873, norm(y): 0.9533, norm:0.6132, tok/sec: 124551.01, flops:97.00, batch-reuse:1
@ 3821 train 4.5147 , allloss: 4.5163, dt: 1051.33ms, fracRes: 0.7561, norm(attn): 0.1924, norm(output): 2.1875, norm(x): 0.3890, norm(y): 0.9532, norm:0.6562, tok/sec: 124672.04, flops:97.10, batch-reuse:1
@ 3822 train 4.4148 , allloss: 4.4162, dt: 1055.20ms, fracRes: 0.7559, norm(attn): 0.1914, norm(output): 2.1875, norm(x): 0.3897, norm(y): 0.9534, norm:0.6860, tok/sec: 124214.85, flops:96.74, batch-reuse:1
@ 3823 train 4.4593 , allloss: 4.4614, dt: 1063.48ms, fracRes: 0.7564, norm(attn): 0.1895, norm(output): 2.1719, norm(x): 0.3842, norm(y): 0.9534, norm:0.6486, tok/sec: 123248.05, flops:95.99, batch-reuse:1
@ 3824 train 4.4003 , allloss: 4.4017, dt: 1048.05ms, fracRes: 0.7548, norm(attn): 0.1904, norm(output): 2.1562, norm(x): 0.3890, norm(y): 0.9535, norm:0.5682, tok/sec: 125062.97, flops:97.40, batch-reuse:1
@ 3825 train 4.4697 , allloss: 4.4754, dt: 1050.24ms, fracRes: 0.7566, norm(attn): 0.1914, norm(output): 2.1719, norm(x): 0.3868, norm(y): 0.9530, norm:0.6546, tok/sec: 124801.55, flops:97.20, batch-reuse:1
@ 3826 train 4.4850 , allloss: 4.4865, dt: 1063.29ms, fracRes: 0.7553, norm(attn): 0.1924, norm(output): 2.2031, norm(x): 0.3921, norm(y): 0.9534, norm:0.6462, tok/sec: 123269.91, flops:96.00, batch-reuse:1
@ 3827 train 4.4423 , allloss: 4.4445, dt: 1046.36ms, fracRes: 0.7575, norm(attn): 0.1914, norm(output): 2.1719, norm(x): 0.3864, norm(y): 0.9534, norm:0.6714, tok/sec: 125264.24, flops:97.56, batch-reuse:1
@ 3828 train 4.4000 , allloss: 4.4016, dt: 1050.89ms, fracRes: 0.7554, norm(attn): 0.1934, norm(output): 2.2188, norm(x): 0.3925, norm(y): 0.9534, norm:0.6645, tok/sec: 124724.65, flops:97.14, batch-reuse:1
@ 3829 train 4.4514 , allloss: 4.4530, dt: 1068.83ms, fracRes: 0.7566, norm(attn): 0.1934, norm(output): 2.2031, norm(x): 0.3899, norm(y): 0.9532, norm:0.6259, tok/sec: 122631.15, flops:95.51, batch-reuse:1
@ 3830 train 4.5632 , allloss: 4.5647, dt: 1055.02ms, fracRes: 0.7571, norm(attn): 0.1914, norm(output): 2.1406, norm(x): 0.3831, norm(y): 0.9533, norm:0.7565, tok/sec: 124236.10, flops:96.76, batch-reuse:1
@ 3831 train 4.3779 , allloss: 4.3799, dt: 1046.14ms, fracRes: 0.7560, norm(attn): 0.1943, norm(output): 2.1406, norm(x): 0.3881, norm(y): 0.9533, norm:0.6822, tok/sec: 125291.39, flops:97.58, batch-reuse:1
@ 3832 train 4.4515 , allloss: 4.4532, dt: 1058.36ms, fracRes: 0.7613, norm(attn): 0.1904, norm(output): 2.1094, norm(x): 0.3730, norm(y): 0.9530, norm:0.7261, tok/sec: 123844.20, flops:96.45, batch-reuse:1
@ 3833 train 4.4174 , allloss: 4.4191, dt: 1057.21ms, fracRes: 0.7579, norm(attn): 0.1934, norm(output): 2.1406, norm(x): 0.3802, norm(y): 0.9532, norm:0.6572, tok/sec: 123979.10, flops:96.56, batch-reuse:1
@ 3834 train 4.4505 , allloss: 4.4521, dt: 1061.73ms, fracRes: 0.7557, norm(attn): 0.1924, norm(output): 2.1562, norm(x): 0.3878, norm(y): 0.9535, norm:0.6732, tok/sec: 123450.80, flops:96.14, batch-reuse:1
@ 3835 train 4.3823 , allloss: 4.3842, dt: 1059.92ms, fracRes: 0.7591, norm(attn): 0.1934, norm(output): 2.1250, norm(x): 0.3772, norm(y): 0.9531, norm:0.8549, tok/sec: 123661.63, flops:96.31, batch-reuse:1
@ 3836 train 4.4517 , allloss: 4.4539, dt: 1051.15ms, fracRes: 0.7577, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3833, norm(y): 0.9534, norm:0.7956, tok/sec: 124693.56, flops:97.11, batch-reuse:1
@ 3837 train 4.5206 , allloss: 4.5258, dt: 1056.87ms, fracRes: 0.7575, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3834, norm(y): 0.9532, norm:0.6580, tok/sec: 124019.35, flops:96.59, batch-reuse:1
@ 3838 train 4.4374 , allloss: 4.4390, dt: 1052.67ms, fracRes: 0.7582, norm(attn): 0.1904, norm(output): 2.1406, norm(x): 0.3822, norm(y): 0.9534, norm:0.7078, tok/sec: 124513.69, flops:96.97, batch-reuse:1
@ 3839 train 4.4017 , allloss: 4.4039, dt: 1063.44ms, fracRes: 0.7573, norm(attn): 0.1914, norm(output): 2.1719, norm(x): 0.3853, norm(y): 0.9535, norm:0.7414, tok/sec: 123252.47, flops:95.99, batch-reuse:1
@ 3840 train 4.5541 , allloss: 4.5567, dt: 1050.34ms, fracRes: 0.7579, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3825, norm(y): 0.9533, norm:0.6394, tok/sec: 124789.79, flops:97.19, batch-reuse:1
@ 3841 train 4.4383 , allloss: 4.4417, dt: 1061.59ms, fracRes: 0.7537, norm(attn): 0.1943, norm(output): 2.2031, norm(x): 0.3953, norm(y): 0.9533, norm:0.6541, tok/sec: 123467.91, flops:96.16, batch-reuse:1
@ 3842 train 4.3672 , allloss: 4.3697, dt: 1052.30ms, fracRes: 0.7479, norm(attn): 0.1973, norm(output): 2.2969, norm(x): 0.4128, norm(y): 0.9536, norm:1.1010, tok/sec: 124557.61, flops:97.01, batch-reuse:1
@ 3843 train 4.4697 , allloss: 4.4732, dt: 1067.37ms, fracRes: 0.7567, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3852, norm(y): 0.9535, norm:1.1111, tok/sec: 122798.46, flops:95.64, batch-reuse:1
@ 3844 train 4.4241 , allloss: 4.4263, dt: 1068.59ms, fracRes: 0.7567, norm(attn): 0.1953, norm(output): 2.1719, norm(x): 0.3885, norm(y): 0.9535, norm:0.8392, tok/sec: 122658.62, flops:95.53, batch-reuse:1
@ 3845 train 4.4245 , allloss: 4.4276, dt: 1060.80ms, fracRes: 0.7584, norm(attn): 0.1973, norm(output): 2.1406, norm(x): 0.3824, norm(y): 0.9535, norm:0.6825, tok/sec: 123559.82, flops:96.23, batch-reuse:1
@ 3846 train 4.2740 , allloss: 4.2764, dt: 1065.52ms, fracRes: 0.7572, norm(attn): 0.1963, norm(output): 2.1406, norm(x): 0.3848, norm(y): 0.9532, norm:0.7442, tok/sec: 123012.56, flops:95.80, batch-reuse:1
@ 3847 train 4.5115 , allloss: 4.5140, dt: 1064.60ms, fracRes: 0.7586, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3809, norm(y): 0.9530, norm:0.6301, tok/sec: 123119.01, flops:95.89, batch-reuse:1
@ 3848 train 4.4005 , allloss: 4.4027, dt: 1057.77ms, fracRes: 0.7555, norm(attn): 0.1982, norm(output): 2.1562, norm(x): 0.3874, norm(y): 0.9534, norm:0.6796, tok/sec: 123912.98, flops:96.50, batch-reuse:1
@ 3849 train 4.3170 , allloss: 4.3186, dt: 1044.58ms, fracRes: 0.7555, norm(attn): 0.1982, norm(output): 2.1562, norm(x): 0.3860, norm(y): 0.9535, norm:0.7006, tok/sec: 125478.56, flops:97.72, batch-reuse:1
@ 3850 train 4.4203 , allloss: 4.4216, dt: 1055.82ms, fracRes: 0.7564, norm(attn): 0.1953, norm(output): 2.1562, norm(x): 0.3849, norm(y): 0.9531, norm:0.6270, tok/sec: 124142.43, flops:96.68, batch-reuse:1
@ 3851 train 4.3760 , allloss: 4.3778, dt: 1044.40ms, fracRes: 0.7565, norm(attn): 0.1953, norm(output): 2.1719, norm(x): 0.3880, norm(y): 0.9531, norm:0.6454, tok/sec: 125499.61, flops:97.74, batch-reuse:1
@ 3852 train 4.3601 , allloss: 4.3806, dt: 1056.36ms, fracRes: 0.7567, norm(attn): 0.1953, norm(output): 2.1562, norm(x): 0.3865, norm(y): 0.9532, norm:1.0886, tok/sec: 124078.44, flops:96.63, batch-reuse:1
@ 3853 train 4.4068 , allloss: 4.4089, dt: 1066.77ms, fracRes: 0.7574, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3818, norm(y): 0.9531, norm:0.6669, tok/sec: 122867.59, flops:95.69, batch-reuse:1
@ 3854 train 4.3544 , allloss: 4.3561, dt: 1049.29ms, fracRes: 0.7549, norm(attn): 0.1963, norm(output): 2.1562, norm(x): 0.3870, norm(y): 0.9536, norm:0.6153, tok/sec: 124914.84, flops:97.28, batch-reuse:1
@ 3855 train 4.2748 , allloss: 4.2763, dt: 1059.99ms, fracRes: 0.7557, norm(attn): 0.1982, norm(output): 2.1719, norm(x): 0.3859, norm(y): 0.9534, norm:0.6506, tok/sec: 123654.00, flops:96.30, batch-reuse:1
@ 3856 train 4.3117 , allloss: 4.3139, dt: 1052.75ms, fracRes: 0.7555, norm(attn): 0.1982, norm(output): 2.1719, norm(x): 0.3867, norm(y): 0.9534, norm:0.6506, tok/sec: 124504.77, flops:96.96, batch-reuse:1
@ 3857 train 4.2786 , allloss: 4.2804, dt: 1061.28ms, fracRes: 0.7542, norm(attn): 0.1973, norm(output): 2.1875, norm(x): 0.3939, norm(y): 0.9536, norm:0.7950, tok/sec: 123503.55, flops:96.19, batch-reuse:1
@ 3858 train 4.3212 , allloss: 4.3231, dt: 1055.19ms, fracRes: 0.7550, norm(attn): 0.1973, norm(output): 2.1562, norm(x): 0.3898, norm(y): 0.9535, norm:0.8913, tok/sec: 124216.14, flops:96.74, batch-reuse:1
@ 3859 train 4.2776 , allloss: 4.2795, dt: 1047.95ms, fracRes: 0.7540, norm(attn): 0.1982, norm(output): 2.1875, norm(x): 0.3941, norm(y): 0.9535, norm:0.5893, tok/sec: 125074.47, flops:97.41, batch-reuse:1
@ 3860 train 4.4621 , allloss: 4.4649, dt: 1062.34ms, fracRes: 0.7615, norm(attn): 0.1934, norm(output): 2.1406, norm(x): 0.3713, norm(y): 0.9528, norm:0.8076, tok/sec: 123380.63, flops:96.09, batch-reuse:1
@ 3861 train 4.4039 , allloss: 4.4062, dt: 1057.54ms, fracRes: 0.7577, norm(attn): 0.1953, norm(output): 2.1719, norm(x): 0.3863, norm(y): 0.9531, norm:0.7986, tok/sec: 123940.47, flops:96.53, batch-reuse:1
@ 3862 train 4.3900 , allloss: 4.3917, dt: 1047.99ms, fracRes: 0.7561, norm(attn): 0.1953, norm(output): 2.1875, norm(x): 0.3914, norm(y): 0.9533, norm:0.6416, tok/sec: 125069.71, flops:97.40, batch-reuse:1
@ 3863 train 4.3893 , allloss: 4.3915, dt: 1063.48ms, fracRes: 0.7562, norm(attn): 0.1973, norm(output): 2.1562, norm(x): 0.3907, norm(y): 0.9533, norm:0.6767, tok/sec: 123248.49, flops:95.99, batch-reuse:1
@ 3864 train 4.3764 , allloss: 4.3785, dt: 1061.06ms, fracRes: 0.7567, norm(attn): 0.1963, norm(output): 2.1875, norm(x): 0.3874, norm(y): 0.9531, norm:0.5772, tok/sec: 123529.39, flops:96.21, batch-reuse:1
@ 3865 train 4.4127 , allloss: 4.4147, dt: 1055.87ms, fracRes: 0.7560, norm(attn): 0.1943, norm(output): 2.1719, norm(x): 0.3870, norm(y): 0.9530, norm:0.6662, tok/sec: 124137.08, flops:96.68, batch-reuse:1
@ 3866 train 4.2884 , allloss: 4.2903, dt: 1057.62ms, fracRes: 0.7549, norm(attn): 0.1982, norm(output): 2.1719, norm(x): 0.3870, norm(y): 0.9532, norm:0.6922, tok/sec: 123931.17, flops:96.52, batch-reuse:1
@ 3867 train 4.3594 , allloss: 4.3609, dt: 1052.03ms, fracRes: 0.7554, norm(attn): 0.1973, norm(output): 2.1875, norm(x): 0.3858, norm(y): 0.9531, norm:0.6503, tok/sec: 124589.71, flops:97.03, batch-reuse:1
@ 3868 train 4.2589 , allloss: 4.2604, dt: 1053.48ms, fracRes: 0.7542, norm(attn): 0.1963, norm(output): 2.2344, norm(x): 0.3915, norm(y): 0.9534, norm:0.6903, tok/sec: 124418.61, flops:96.90, batch-reuse:1
@ 3869 train 4.2925 , allloss: 4.2942, dt: 1068.00ms, fracRes: 0.7591, norm(attn): 0.1914, norm(output): 2.1250, norm(x): 0.3768, norm(y): 0.9529, norm:0.5869, tok/sec: 122726.61, flops:95.58, batch-reuse:1
@ 3870 train 4.3240 , allloss: 4.3253, dt: 1071.49ms, fracRes: 0.7552, norm(attn): 0.1953, norm(output): 2.1719, norm(x): 0.3890, norm(y): 0.9532, norm:0.6136, tok/sec: 122326.33, flops:95.27, batch-reuse:1
@ 3871 train 4.4116 , allloss: 4.4130, dt: 1068.05ms, fracRes: 0.7573, norm(attn): 0.1934, norm(output): 2.1719, norm(x): 0.3848, norm(y): 0.9526, norm:0.9405, tok/sec: 122720.83, flops:95.58, batch-reuse:1
@ 3872 train 4.4121 , allloss: 4.4137, dt: 1047.48ms, fracRes: 0.7566, norm(attn): 0.1934, norm(output): 2.1875, norm(x): 0.3828, norm(y): 0.9528, norm:1.0212, tok/sec: 125130.38, flops:97.45, batch-reuse:1
@ 3873 train 4.3250 , allloss: 4.3265, dt: 1054.28ms, fracRes: 0.7563, norm(attn): 0.1963, norm(output): 2.1875, norm(x): 0.3860, norm(y): 0.9530, norm:0.8417, tok/sec: 124324.24, flops:96.82, batch-reuse:1
@ 3874 train 4.3440 , allloss: 4.3451, dt: 1063.54ms, fracRes: 0.7553, norm(attn): 0.1953, norm(output): 2.2188, norm(x): 0.3905, norm(y): 0.9530, norm:0.5953, tok/sec: 123241.47, flops:95.98, batch-reuse:1
@ 3875 train 4.2920 , allloss: 4.2932, dt: 1064.77ms, fracRes: 0.7540, norm(attn): 0.1963, norm(output): 2.2031, norm(x): 0.3934, norm(y): 0.9532, norm:0.7310, tok/sec: 123099.44, flops:95.87, batch-reuse:1
@ 3876 train 4.3809 , allloss: 4.3822, dt: 1046.27ms, fracRes: 0.7562, norm(attn): 0.1934, norm(output): 2.2031, norm(x): 0.3880, norm(y): 0.9528, norm:0.7543, tok/sec: 125275.57, flops:97.57, batch-reuse:1
@ 3877 train 4.4036 , allloss: 4.4048, dt: 1050.14ms, fracRes: 0.7571, norm(attn): 0.1924, norm(output): 2.1719, norm(x): 0.3846, norm(y): 0.9527, norm:0.7054, tok/sec: 124813.42, flops:97.21, batch-reuse:1
@ 3878 train 4.3137 , allloss: 4.3146, dt: 1047.32ms, fracRes: 0.7552, norm(attn): 0.1963, norm(output): 2.1719, norm(x): 0.3861, norm(y): 0.9531, norm:0.8940, tok/sec: 125150.15, flops:97.47, batch-reuse:1
@ 3879 train 4.3397 , allloss: 4.3407, dt: 1049.20ms, fracRes: 0.7560, norm(attn): 0.1953, norm(output): 2.1719, norm(x): 0.3844, norm(y): 0.9530, norm:0.7768, tok/sec: 124926.16, flops:97.29, batch-reuse:1
@ 3880 train 4.4859 , allloss: 4.4869, dt: 1068.20ms, fracRes: 0.7560, norm(attn): 0.1934, norm(output): 2.1875, norm(x): 0.3861, norm(y): 0.9526, norm:0.7173, tok/sec: 122703.68, flops:95.56, batch-reuse:1
@ 3881 train 4.3779 , allloss: 4.3789, dt: 1054.77ms, fracRes: 0.7551, norm(attn): 0.1934, norm(output): 2.2031, norm(x): 0.3883, norm(y): 0.9528, norm:0.7753, tok/sec: 124265.84, flops:96.78, batch-reuse:1
@ 3882 train 4.3483 , allloss: 4.3493, dt: 1050.15ms, fracRes: 0.7543, norm(attn): 0.1963, norm(output): 2.2031, norm(x): 0.3909, norm(y): 0.9531, norm:0.5942, tok/sec: 124812.29, flops:97.20, batch-reuse:1
@ 3883 train 4.2558 , allloss: 4.2570, dt: 1064.83ms, fracRes: 0.7546, norm(attn): 0.1982, norm(output): 2.1719, norm(x): 0.3911, norm(y): 0.9531, norm:0.6718, tok/sec: 123092.02, flops:95.86, batch-reuse:1
@ 3884 train 4.3540 , allloss: 4.3552, dt: 1052.54ms, fracRes: 0.7550, norm(attn): 0.1953, norm(output): 2.2188, norm(x): 0.3916, norm(y): 0.9529, norm:0.6090, tok/sec: 124529.20, flops:96.98, batch-reuse:1
@ 3885 train 4.4097 , allloss: 4.4111, dt: 1059.64ms, fracRes: 0.7549, norm(attn): 0.1934, norm(output): 2.2031, norm(x): 0.3911, norm(y): 0.9527, norm:0.6022, tok/sec: 123694.51, flops:96.33, batch-reuse:1
@ 3886 train 4.3142 , allloss: 4.3155, dt: 1048.24ms, fracRes: 0.7561, norm(attn): 0.1934, norm(output): 2.2188, norm(x): 0.3880, norm(y): 0.9528, norm:0.6613, tok/sec: 125040.10, flops:97.38, batch-reuse:1
@ 3887 train 4.3089 , allloss: 4.3105, dt: 1070.13ms, fracRes: 0.7564, norm(attn): 0.1973, norm(output): 2.2031, norm(x): 0.3898, norm(y): 0.9528, norm:0.6630, tok/sec: 122482.11, flops:95.39, batch-reuse:1
@ 3888 train 4.4003 , allloss: 4.4030, dt: 1047.08ms, fracRes: 0.7547, norm(attn): 0.1963, norm(output): 2.2031, norm(x): 0.3942, norm(y): 0.9528, norm:0.6730, tok/sec: 125178.36, flops:97.49, batch-reuse:1
@ 3889 train 4.3894 , allloss: 4.3914, dt: 1060.66ms, fracRes: 0.7553, norm(attn): 0.1943, norm(output): 2.1875, norm(x): 0.3892, norm(y): 0.9528, norm:0.6683, tok/sec: 123575.71, flops:96.24, batch-reuse:1
@ 3890 train 4.3979 , allloss: 4.3997, dt: 1056.89ms, fracRes: 0.7595, norm(attn): 0.1953, norm(output): 2.1250, norm(x): 0.3789, norm(y): 0.9523, norm:0.6550, tok/sec: 124017.19, flops:96.59, batch-reuse:1
@ 3891 train 4.2447 , allloss: 4.2460, dt: 1053.37ms, fracRes: 0.7543, norm(attn): 0.1943, norm(output): 2.1875, norm(x): 0.3946, norm(y): 0.9527, norm:0.6852, tok/sec: 124431.51, flops:96.91, batch-reuse:1
@ 3892 train 4.3635 , allloss: 4.3646, dt: 1054.11ms, fracRes: 0.7561, norm(attn): 0.1953, norm(output): 2.1875, norm(x): 0.3856, norm(y): 0.9527, norm:0.6898, tok/sec: 124343.92, flops:96.84, batch-reuse:1
@ 3893 train 4.3972 , allloss: 4.3987, dt: 1045.63ms, fracRes: 0.7540, norm(attn): 0.1934, norm(output): 2.1875, norm(x): 0.3885, norm(y): 0.9528, norm:0.6685, tok/sec: 125352.44, flops:97.62, batch-reuse:1
@ 3894 train 4.5745 , allloss: 4.5761, dt: 1054.85ms, fracRes: 0.7564, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3831, norm(y): 0.9523, norm:0.7367, tok/sec: 124255.96, flops:96.77, batch-reuse:1
@ 3895 train 4.5262 , allloss: 4.5274, dt: 1068.53ms, fracRes: 0.7550, norm(attn): 0.1914, norm(output): 2.2031, norm(x): 0.3895, norm(y): 0.9524, norm:0.6915, tok/sec: 122665.57, flops:95.53, batch-reuse:1
@ 3896 train 4.4701 , allloss: 4.4713, dt: 1053.35ms, fracRes: 0.7568, norm(attn): 0.1904, norm(output): 2.1562, norm(x): 0.3835, norm(y): 0.9524, norm:0.6468, tok/sec: 124433.17, flops:96.91, batch-reuse:1
@ 3897 train 4.4402 , allloss: 4.4415, dt: 1050.66ms, fracRes: 0.7567, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3842, norm(y): 0.9523, norm:0.7316, tok/sec: 124751.93, flops:97.16, batch-reuse:1
@ 3898 train 4.6451 , allloss: 4.6467, dt: 1046.53ms, fracRes: 0.7572, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3835, norm(y): 0.9521, norm:0.6730, tok/sec: 125244.49, flops:97.54, batch-reuse:1
@ 3899 train 4.5119 , allloss: 4.5137, dt: 1061.57ms, fracRes: 0.7559, norm(attn): 0.1953, norm(output): 2.1875, norm(x): 0.3871, norm(y): 0.9524, norm:0.7133, tok/sec: 123469.63, flops:96.16, batch-reuse:1
@ 3900 train 4.4676 , allloss: 4.4690, dt: 1061.45ms, fracRes: 0.7571, norm(attn): 0.1953, norm(output): 2.1719, norm(x): 0.3841, norm(y): 0.9523, norm:0.7741, tok/sec: 123483.66, flops:96.17, batch-reuse:1
@ 3901 train 4.5345 , allloss: 4.5359, dt: 1048.70ms, fracRes: 0.7575, norm(attn): 0.1943, norm(output): 2.1562, norm(x): 0.3807, norm(y): 0.9522, norm:0.7335, tok/sec: 124985.38, flops:97.34, batch-reuse:1
@ 3902 train 4.4204 , allloss: 4.4218, dt: 1056.30ms, fracRes: 0.7568, norm(attn): 0.1934, norm(output): 2.1875, norm(x): 0.3850, norm(y): 0.9523, norm:0.5739, tok/sec: 124086.33, flops:96.64, batch-reuse:1
@ 3903 train 4.4953 , allloss: 4.4966, dt: 1053.21ms, fracRes: 0.7576, norm(attn): 0.1934, norm(output): 2.2031, norm(x): 0.3851, norm(y): 0.9522, norm:0.7694, tok/sec: 124450.15, flops:96.92, batch-reuse:1
@ 3904 train 4.5953 , allloss: 4.5967, dt: 1069.32ms, fracRes: 0.7572, norm(attn): 0.1914, norm(output): 2.1875, norm(x): 0.3865, norm(y): 0.9522, norm:0.6593, tok/sec: 122575.32, flops:95.46, batch-reuse:1
@ 3905 train 4.5515 , allloss: 4.5532, dt: 1054.90ms, fracRes: 0.7564, norm(attn): 0.1914, norm(output): 2.2031, norm(x): 0.3902, norm(y): 0.9520, norm:0.8005, tok/sec: 124250.31, flops:96.77, batch-reuse:1
@ 3906 train 4.5798 , allloss: 4.5811, dt: 1065.93ms, fracRes: 0.7559, norm(attn): 0.1934, norm(output): 2.2031, norm(x): 0.3926, norm(y): 0.9522, norm:0.7608, tok/sec: 122964.58, flops:95.77, batch-reuse:1
@ 3907 train 4.5189 , allloss: 4.5204, dt: 1069.35ms, fracRes: 0.7567, norm(attn): 0.1953, norm(output): 2.2031, norm(x): 0.3920, norm(y): 0.9522, norm:0.8533, tok/sec: 122571.22, flops:95.46, batch-reuse:1
@ 3908 train 4.4879 , allloss: 4.4900, dt: 1053.53ms, fracRes: 0.7557, norm(attn): 0.1934, norm(output): 2.2344, norm(x): 0.3946, norm(y): 0.9522, norm:0.7211, tok/sec: 124412.08, flops:96.89, batch-reuse:1
@ 3909 train 4.4566 , allloss: 4.4588, dt: 1065.17ms, fracRes: 0.7548, norm(attn): 0.1953, norm(output): 2.2500, norm(x): 0.3949, norm(y): 0.9522, norm:0.8967, tok/sec: 123052.62, flops:95.83, batch-reuse:1
@ 3910 train 4.5619 , allloss: 4.5636, dt: 1062.28ms, fracRes: 0.7565, norm(attn): 0.1943, norm(output): 2.1719, norm(x): 0.3869, norm(y): 0.9522, norm:0.7620, tok/sec: 123387.30, flops:96.09, batch-reuse:1
@ 3911 train 4.5343 , allloss: 4.5362, dt: 1050.37ms, fracRes: 0.7569, norm(attn): 0.1953, norm(output): 2.1719, norm(x): 0.3878, norm(y): 0.9522, norm:0.6914, tok/sec: 124786.17, flops:97.18, batch-reuse:1
@ 3912 train 4.4574 , allloss: 4.4589, dt: 1063.87ms, fracRes: 0.7574, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3890, norm(y): 0.9523, norm:0.6322, tok/sec: 123203.03, flops:95.95, batch-reuse:1
@ 3913 train 4.5650 , allloss: 4.5670, dt: 1051.92ms, fracRes: 0.7593, norm(attn): 0.1924, norm(output): 2.1562, norm(x): 0.3836, norm(y): 0.9520, norm:0.8122, tok/sec: 124602.13, flops:97.04, batch-reuse:1
@ 3914 train 4.5822 , allloss: 4.5842, dt: 1048.36ms, fracRes: 0.7585, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3831, norm(y): 0.9520, norm:0.7444, tok/sec: 125025.43, flops:97.37, batch-reuse:1
@ 3915 train 4.5430 , allloss: 4.5450, dt: 1042.97ms, fracRes: 0.7570, norm(attn): 0.1934, norm(output): 2.1719, norm(x): 0.3866, norm(y): 0.9521, norm:0.6266, tok/sec: 125671.60, flops:97.87, batch-reuse:1
@ 3916 train 4.5794 , allloss: 4.5808, dt: 1064.24ms, fracRes: 0.7564, norm(attn): 0.1934, norm(output): 2.1719, norm(x): 0.3874, norm(y): 0.9523, norm:0.7173, tok/sec: 123160.41, flops:95.92, batch-reuse:1
@ 3917 train 4.6453 , allloss: 4.6470, dt: 1063.25ms, fracRes: 0.7563, norm(attn): 0.1914, norm(output): 2.1719, norm(x): 0.3873, norm(y): 0.9522, norm:0.7658, tok/sec: 123274.83, flops:96.01, batch-reuse:1
@ 3918 train 4.5195 , allloss: 4.5212, dt: 1055.95ms, fracRes: 0.7574, norm(attn): 0.1934, norm(output): 2.1719, norm(x): 0.3836, norm(y): 0.9518, norm:0.8924, tok/sec: 124127.49, flops:96.67, batch-reuse:1
@ 3919 train 4.5298 , allloss: 4.5312, dt: 1054.04ms, fracRes: 0.7557, norm(attn): 0.1924, norm(output): 2.1719, norm(x): 0.3898, norm(y): 0.9521, norm:0.7111, tok/sec: 124351.99, flops:96.85, batch-reuse:1
@ 3920 train 4.4942 , allloss: 4.4961, dt: 1056.22ms, fracRes: 0.7545, norm(attn): 0.1973, norm(output): 2.2031, norm(x): 0.3927, norm(y): 0.9523, norm:0.8852, tok/sec: 124095.63, flops:96.65, batch-reuse:1
@ 3921 train 4.6158 , allloss: 4.6175, dt: 1070.68ms, fracRes: 0.7572, norm(attn): 0.1953, norm(output): 2.1562, norm(x): 0.3867, norm(y): 0.9521, norm:0.8109, tok/sec: 122419.52, flops:95.34, batch-reuse:1
@ 3922 train 4.5476 , allloss: 4.5502, dt: 1044.48ms, fracRes: 0.7563, norm(attn): 0.1953, norm(output): 2.1562, norm(x): 0.3904, norm(y): 0.9520, norm:0.7804, tok/sec: 125489.78, flops:97.73, batch-reuse:1
@ 3923 train 4.4715 , allloss: 4.4737, dt: 1049.23ms, fracRes: 0.7548, norm(attn): 0.1973, norm(output): 2.1719, norm(x): 0.3959, norm(y): 0.9521, norm:0.6126, tok/sec: 124922.33, flops:97.29, batch-reuse:1
@ 3924 train 4.5420 , allloss: 4.5438, dt: 1059.23ms, fracRes: 0.7554, norm(attn): 0.1973, norm(output): 2.1562, norm(x): 0.3904, norm(y): 0.9522, norm:0.7547, tok/sec: 123743.24, flops:96.37, batch-reuse:1
@ 3925 train 4.5988 , allloss: 4.6009, dt: 1041.44ms, fracRes: 0.7549, norm(attn): 0.1963, norm(output): 2.1719, norm(x): 0.3908, norm(y): 0.9520, norm:0.7165, tok/sec: 125856.45, flops:98.02, batch-reuse:1
@ 3926 train 4.5205 , allloss: 4.5230, dt: 1050.99ms, fracRes: 0.7543, norm(attn): 0.1934, norm(output): 2.1875, norm(x): 0.3917, norm(y): 0.9521, norm:0.6795, tok/sec: 124713.22, flops:97.13, batch-reuse:1
@ 3927 train 4.4633 , allloss: 4.4650, dt: 1059.54ms, fracRes: 0.7554, norm(attn): 0.1943, norm(output): 2.1562, norm(x): 0.3903, norm(y): 0.9521, norm:0.6844, tok/sec: 123706.68, flops:96.34, batch-reuse:1
@ 3928 train 4.4910 , allloss: 4.4930, dt: 1044.77ms, fracRes: 0.7559, norm(attn): 0.1953, norm(output): 2.1719, norm(x): 0.3920, norm(y): 0.9521, norm:0.6340, tok/sec: 125455.68, flops:97.71, batch-reuse:1
@ 3929 train 4.5010 , allloss: 4.5039, dt: 1049.41ms, fracRes: 0.7584, norm(attn): 0.1934, norm(output): 2.1250, norm(x): 0.3845, norm(y): 0.9517, norm:0.5969, tok/sec: 124900.16, flops:97.27, batch-reuse:1
@ 3930 train 4.5379 , allloss: 4.5408, dt: 1049.05ms, fracRes: 0.7572, norm(attn): 0.1934, norm(output): 2.1406, norm(x): 0.3862, norm(y): 0.9517, norm:0.6843, tok/sec: 124943.96, flops:97.31, batch-reuse:1
@ 3931 train 4.4161 , allloss: 4.4182, dt: 1063.41ms, fracRes: 0.7541, norm(attn): 0.1973, norm(output): 2.1562, norm(x): 0.3938, norm(y): 0.9521, norm:0.5804, tok/sec: 123255.98, flops:95.99, batch-reuse:1
@ 3932 train 4.4567 , allloss: 4.4589, dt: 1059.69ms, fracRes: 0.7569, norm(attn): 0.1963, norm(output): 2.1406, norm(x): 0.3876, norm(y): 0.9518, norm:0.6402, tok/sec: 123688.84, flops:96.33, batch-reuse:1
@ 3933 train 4.5099 , allloss: 4.5125, dt: 1061.42ms, fracRes: 0.7568, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3876, norm(y): 0.9519, norm:0.5519, tok/sec: 123487.41, flops:96.17, batch-reuse:1
@ 3934 train 4.5423 , allloss: 4.5454, dt: 1045.78ms, fracRes: 0.7539, norm(attn): 0.1934, norm(output): 2.2031, norm(x): 0.3963, norm(y): 0.9520, norm:0.6668, tok/sec: 125333.78, flops:97.61, batch-reuse:1
@ 3935 train 4.5202 , allloss: 4.5224, dt: 1050.64ms, fracRes: 0.7553, norm(attn): 0.1914, norm(output): 2.1562, norm(x): 0.3886, norm(y): 0.9520, norm:0.6443, tok/sec: 124754.17, flops:97.16, batch-reuse:1
@ 3936 train 4.4974 , allloss: 4.4990, dt: 1048.25ms, fracRes: 0.7554, norm(attn): 0.1943, norm(output): 2.1719, norm(x): 0.3883, norm(y): 0.9520, norm:0.6347, tok/sec: 125038.94, flops:97.38, batch-reuse:1
@ 3937 train 4.5312 , allloss: 4.5343, dt: 1062.77ms, fracRes: 0.7567, norm(attn): 0.1934, norm(output): 2.1719, norm(x): 0.3869, norm(y): 0.9518, norm:0.6170, tok/sec: 123330.39, flops:96.05, batch-reuse:1
@ 3938 train 4.4492 , allloss: 4.4518, dt: 1052.34ms, fracRes: 0.7555, norm(attn): 0.1934, norm(output): 2.1875, norm(x): 0.3928, norm(y): 0.9518, norm:0.5918, tok/sec: 124553.07, flops:97.00, batch-reuse:1
@ 3939 train 4.5530 , allloss: 4.5588, dt: 1064.03ms, fracRes: 0.7604, norm(attn): 0.1943, norm(output): 2.1562, norm(x): 0.3822, norm(y): 0.9513, norm:0.6726, tok/sec: 123184.48, flops:95.94, batch-reuse:1
@ 3940 train 4.4605 , allloss: 4.4629, dt: 1066.92ms, fracRes: 0.7546, norm(attn): 0.1934, norm(output): 2.2188, norm(x): 0.3957, norm(y): 0.9518, norm:0.5864, tok/sec: 122850.93, flops:95.68, batch-reuse:1
@ 3941 train 4.4666 , allloss: 4.4689, dt: 1049.34ms, fracRes: 0.7567, norm(attn): 0.1934, norm(output): 2.1562, norm(x): 0.3895, norm(y): 0.9517, norm:0.6358, tok/sec: 124909.05, flops:97.28, batch-reuse:1
@ 3942 train 4.4306 , allloss: 4.4318, dt: 1062.94ms, fracRes: 0.7547, norm(attn): 0.1992, norm(output): 2.1719, norm(x): 0.3932, norm(y): 0.9519, norm:0.6495, tok/sec: 123310.64, flops:96.03, batch-reuse:1
@ 3943 train 4.5062 , allloss: 4.5084, dt: 1067.42ms, fracRes: 0.7549, norm(attn): 0.1973, norm(output): 2.1719, norm(x): 0.3924, norm(y): 0.9519, norm:0.5980, tok/sec: 122793.55, flops:95.63, batch-reuse:1
@ 3944 train 4.4157 , allloss: 4.4176, dt: 1080.50ms, fracRes: 0.7568, norm(attn): 0.1992, norm(output): 2.1719, norm(x): 0.3894, norm(y): 0.9515, norm:0.6498, tok/sec: 121306.31, flops:94.47, batch-reuse:1
@ 3945 train 4.6033 , allloss: 4.6054, dt: 1056.59ms, fracRes: 0.7563, norm(attn): 0.1973, norm(output): 2.1875, norm(x): 0.3904, norm(y): 0.9514, norm:0.6651, tok/sec: 124051.78, flops:96.61, batch-reuse:1
@ 3946 train 4.4545 , allloss: 4.4563, dt: 1056.96ms, fracRes: 0.7558, norm(attn): 0.1943, norm(output): 2.1719, norm(x): 0.3916, norm(y): 0.9516, norm:0.6551, tok/sec: 124008.88, flops:96.58, batch-reuse:1
@ 3947 train 4.4698 , allloss: 4.4719, dt: 1056.13ms, fracRes: 0.7568, norm(attn): 0.1934, norm(output): 2.1875, norm(x): 0.3891, norm(y): 0.9516, norm:0.6970, tok/sec: 124105.75, flops:96.65, batch-reuse:1
@ 3948 train 4.4600 , allloss: 4.4619, dt: 1041.37ms, fracRes: 0.7559, norm(attn): 0.1953, norm(output): 2.1875, norm(x): 0.3917, norm(y): 0.9516, norm:0.6773, tok/sec: 125864.80, flops:98.02, batch-reuse:1
@ 3949 train 4.4762 , allloss: 4.4793, dt: 1054.05ms, fracRes: 0.7545, norm(attn): 0.1973, norm(output): 2.1875, norm(x): 0.3960, norm(y): 0.9516, norm:0.6178, tok/sec: 124350.67, flops:96.84, batch-reuse:1
@ 3950 train 4.5101 , allloss: 4.5117, dt: 1063.17ms, fracRes: 0.7545, norm(attn): 0.1973, norm(output): 2.1875, norm(x): 0.3952, norm(y): 0.9517, norm:0.6807, tok/sec: 123283.84, flops:96.01, batch-reuse:1
@ 3951 train 4.4395 , allloss: 4.4409, dt: 1060.16ms, fracRes: 0.7543, norm(attn): 0.1982, norm(output): 2.1562, norm(x): 0.3966, norm(y): 0.9517, norm:0.5652, tok/sec: 123634.57, flops:96.29, batch-reuse:1
@ 3952 train 4.5166 , allloss: 4.5182, dt: 1062.04ms, fracRes: 0.7550, norm(attn): 0.1982, norm(output): 2.1562, norm(x): 0.3923, norm(y): 0.9517, norm:0.6262, tok/sec: 123415.22, flops:96.12, batch-reuse:1
@ 3953 train 4.6227 , allloss: 4.6247, dt: 1060.27ms, fracRes: 0.7564, norm(attn): 0.1973, norm(output): 2.1562, norm(x): 0.3873, norm(y): 0.9512, norm:0.8857, tok/sec: 123621.03, flops:96.28, batch-reuse:1
@ 3954 train 4.5144 , allloss: 4.5157, dt: 1048.71ms, fracRes: 0.7545, norm(attn): 0.1973, norm(output): 2.1719, norm(x): 0.3961, norm(y): 0.9515, norm:0.8713, tok/sec: 124984.10, flops:97.34, batch-reuse:1
@ 3955 train 4.4603 , allloss: 4.4615, dt: 1061.67ms, fracRes: 0.7550, norm(attn): 0.1963, norm(output): 2.1875, norm(x): 0.3965, norm(y): 0.9516, norm:0.8432, tok/sec: 123458.37, flops:96.15, batch-reuse:1
@ 3956 train 4.5443 , allloss: 4.5459, dt: 1060.35ms, fracRes: 0.7568, norm(attn): 0.1982, norm(output): 2.1406, norm(x): 0.3897, norm(y): 0.9515, norm:0.9013, tok/sec: 123611.44, flops:96.27, batch-reuse:1
@ 3957 train 4.5204 , allloss: 4.5222, dt: 1055.41ms, fracRes: 0.7569, norm(attn): 0.2002, norm(output): 2.1562, norm(x): 0.3932, norm(y): 0.9516, norm:0.7586, tok/sec: 124190.58, flops:96.72, batch-reuse:1
@ 3958 train 4.4723 , allloss: 4.4738, dt: 1050.38ms, fracRes: 0.7567, norm(attn): 0.1992, norm(output): 2.1719, norm(x): 0.3918, norm(y): 0.9513, norm:0.8778, tok/sec: 124785.09, flops:97.18, batch-reuse:1
@ 3959 train 4.5822 , allloss: 4.5839, dt: 1041.44ms, fracRes: 0.7582, norm(attn): 0.1963, norm(output): 2.1250, norm(x): 0.3814, norm(y): 0.9508, norm:0.9001, tok/sec: 125856.53, flops:98.02, batch-reuse:1
@ 3960 train 4.4659 , allloss: 4.4670, dt: 1055.13ms, fracRes: 0.7548, norm(attn): 0.1982, norm(output): 2.1875, norm(x): 0.3957, norm(y): 0.9516, norm:0.8564, tok/sec: 124223.11, flops:96.75, batch-reuse:1
@ 3961 train 4.4461 , allloss: 4.4497, dt: 1060.23ms, fracRes: 0.7559, norm(attn): 0.1973, norm(output): 2.1719, norm(x): 0.3935, norm(y): 0.9515, norm:0.9042, tok/sec: 123626.48, flops:96.28, batch-reuse:1
@ 3962 train 4.5320 , allloss: 4.5342, dt: 1056.59ms, fracRes: 0.7558, norm(attn): 0.1973, norm(output): 2.1562, norm(x): 0.3915, norm(y): 0.9514, norm:0.7478, tok/sec: 124051.42, flops:96.61, batch-reuse:1
@ 3963 train 4.4504 , allloss: 4.4523, dt: 1075.02ms, fracRes: 0.7537, norm(attn): 0.1992, norm(output): 2.1719, norm(x): 0.3960, norm(y): 0.9516, norm:0.8186, tok/sec: 121924.73, flops:94.96, batch-reuse:1
@ 3964 train 4.4442 , allloss: 4.4462, dt: 1053.80ms, fracRes: 0.7545, norm(attn): 0.2002, norm(output): 2.1719, norm(x): 0.3933, norm(y): 0.9514, norm:0.8173, tok/sec: 124380.38, flops:96.87, batch-reuse:1
@ 3965 train 4.4919 , allloss: 4.4936, dt: 1066.77ms, fracRes: 0.7561, norm(attn): 0.1992, norm(output): 2.1406, norm(x): 0.3860, norm(y): 0.9515, norm:0.7165, tok/sec: 122868.56, flops:95.69, batch-reuse:1
@ 3966 train 4.5473 , allloss: 4.5489, dt: 1067.12ms, fracRes: 0.7549, norm(attn): 0.1982, norm(output): 2.1719, norm(x): 0.3918, norm(y): 0.9514, norm:0.7235, tok/sec: 122827.60, flops:95.66, batch-reuse:1
@ 3967 train 4.5361 , allloss: 4.5377, dt: 1059.35ms, fracRes: 0.7553, norm(attn): 0.1963, norm(output): 2.1875, norm(x): 0.3938, norm(y): 0.9512, norm:0.7262, tok/sec: 123728.48, flops:96.36, batch-reuse:1
@ 3968 train 4.5001 , allloss: 4.5020, dt: 1060.99ms, fracRes: 0.7562, norm(attn): 0.1973, norm(output): 2.1875, norm(x): 0.3921, norm(y): 0.9513, norm:0.7528, tok/sec: 123537.91, flops:96.21, batch-reuse:1
@ 3969 train 4.5473 , allloss: 4.5490, dt: 1050.95ms, fracRes: 0.7576, norm(attn): 0.1973, norm(output): 2.1875, norm(x): 0.3882, norm(y): 0.9512, norm:0.5886, tok/sec: 124717.29, flops:97.13, batch-reuse:1
@ 3970 train 4.4668 , allloss: 4.4685, dt: 1055.66ms, fracRes: 0.7565, norm(attn): 0.1992, norm(output): 2.2188, norm(x): 0.3917, norm(y): 0.9513, norm:0.6781, tok/sec: 124161.24, flops:96.70, batch-reuse:1
@ 3971 train 4.4654 , allloss: 4.4669, dt: 1044.65ms, fracRes: 0.7556, norm(attn): 0.1973, norm(output): 2.2031, norm(x): 0.3942, norm(y): 0.9514, norm:0.6381, tok/sec: 125470.08, flops:97.72, batch-reuse:1
@ 3972 train 4.5885 , allloss: 4.5905, dt: 1057.50ms, fracRes: 0.7586, norm(attn): 0.1973, norm(output): 2.1719, norm(x): 0.3870, norm(y): 0.9509, norm:1.0267, tok/sec: 123945.53, flops:96.53, batch-reuse:1
@ 3973 train 4.4113 , allloss: 4.4136, dt: 1065.35ms, fracRes: 0.7543, norm(attn): 0.1992, norm(output): 2.2188, norm(x): 0.3993, norm(y): 0.9514, norm:2.1684, tok/sec: 123031.83, flops:95.82, batch-reuse:1
@ 3974 train 4.5467 , allloss: 4.5506, dt: 1056.44ms, fracRes: 0.7542, norm(attn): 0.2002, norm(output): 2.1875, norm(x): 0.3987, norm(y): 0.9513, norm:0.8841, tok/sec: 124069.17, flops:96.63, batch-reuse:1
@ 3975 train 4.4313 , allloss: 4.4338, dt: 1056.75ms, fracRes: 0.7537, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4059, norm(y): 0.9515, norm:0.8984, tok/sec: 124033.56, flops:96.60, batch-reuse:1
@ 3976 train 4.5048 , allloss: 4.5066, dt: 1069.09ms, fracRes: 0.7555, norm(attn): 0.1992, norm(output): 2.2031, norm(x): 0.3986, norm(y): 0.9513, norm:0.7151, tok/sec: 122601.26, flops:95.48, batch-reuse:1
@ 3977 train 4.1908 , allloss: 4.1932, dt: 1056.27ms, fracRes: 0.7625, norm(attn): 0.1992, norm(output): 2.1719, norm(x): 0.3816, norm(y): 0.9511, norm:0.7855, tok/sec: 124089.89, flops:96.64, batch-reuse:1
@ 3978 train 4.4551 , allloss: 4.4577, dt: 1046.70ms, fracRes: 0.7550, norm(attn): 0.2002, norm(output): 2.2031, norm(x): 0.3960, norm(y): 0.9514, norm:0.8859, tok/sec: 125223.92, flops:97.52, batch-reuse:1
@ 3979 train 4.5135 , allloss: 4.5169, dt: 1050.69ms, fracRes: 0.7562, norm(attn): 0.1982, norm(output): 2.2031, norm(x): 0.3919, norm(y): 0.9513, norm:0.7911, tok/sec: 124748.93, flops:97.15, batch-reuse:1
@ 3980 train 4.4789 , allloss: 4.4823, dt: 1071.01ms, fracRes: 0.7575, norm(attn): 0.1992, norm(output): 2.2031, norm(x): 0.3877, norm(y): 0.9510, norm:0.7242, tok/sec: 122382.07, flops:95.31, batch-reuse:1
@ 3981 train 4.5136 , allloss: 4.5160, dt: 1064.78ms, fracRes: 0.7553, norm(attn): 0.1992, norm(output): 2.1875, norm(x): 0.3927, norm(y): 0.9511, norm:0.8978, tok/sec: 123098.20, flops:95.87, batch-reuse:1
@ 3982 train 4.4735 , allloss: 4.4764, dt: 1048.13ms, fracRes: 0.7546, norm(attn): 0.1973, norm(output): 2.2031, norm(x): 0.3953, norm(y): 0.9511, norm:0.8050, tok/sec: 125053.02, flops:97.39, batch-reuse:1
@ 3983 train 4.5134 , allloss: 4.5157, dt: 1060.03ms, fracRes: 0.7549, norm(attn): 0.1992, norm(output): 2.2188, norm(x): 0.3972, norm(y): 0.9511, norm:0.7517, tok/sec: 123648.97, flops:96.30, batch-reuse:1
@ 3984 train 4.4618 , allloss: 4.4641, dt: 1049.27ms, fracRes: 0.7545, norm(attn): 0.1992, norm(output): 2.2031, norm(x): 0.3971, norm(y): 0.9512, norm:0.8773, tok/sec: 124916.79, flops:97.29, batch-reuse:1
@ 3985 train 4.5053 , allloss: 4.5075, dt: 1055.81ms, fracRes: 0.7537, norm(attn): 0.1992, norm(output): 2.2031, norm(x): 0.4002, norm(y): 0.9512, norm:0.7361, tok/sec: 124143.30, flops:96.68, batch-reuse:1
@ 3986 train 4.4134 , allloss: 4.4155, dt: 1060.75ms, fracRes: 0.7571, norm(attn): 0.2012, norm(output): 2.1719, norm(x): 0.3922, norm(y): 0.9509, norm:0.7053, tok/sec: 123565.76, flops:96.23, batch-reuse:1
@ 3987 train 4.3019 , allloss: 4.3033, dt: 1049.49ms, fracRes: 0.7525, norm(attn): 0.2041, norm(output): 2.2344, norm(x): 0.4094, norm(y): 0.9515, norm:0.8347, tok/sec: 124891.25, flops:97.27, batch-reuse:1
@ 3988 train 4.3838 , allloss: 4.3858, dt: 1060.01ms, fracRes: 0.7545, norm(attn): 0.2031, norm(output): 2.1875, norm(x): 0.3976, norm(y): 0.9513, norm:0.7341, tok/sec: 123651.70, flops:96.30, batch-reuse:1
@ 3989 train 4.4662 , allloss: 4.4685, dt: 1051.16ms, fracRes: 0.7555, norm(attn): 0.2012, norm(output): 2.1875, norm(x): 0.3948, norm(y): 0.9509, norm:0.6761, tok/sec: 124692.96, flops:97.11, batch-reuse:1
@ 3990 train 4.4161 , allloss: 4.4182, dt: 1063.76ms, fracRes: 0.7568, norm(attn): 0.1982, norm(output): 2.2031, norm(x): 0.3931, norm(y): 0.9507, norm:0.6632, tok/sec: 123216.12, flops:95.96, batch-reuse:1
@ 3991 train 4.4446 , allloss: 4.4462, dt: 1058.86ms, fracRes: 0.7543, norm(attn): 0.2002, norm(output): 2.2031, norm(x): 0.3993, norm(y): 0.9510, norm:0.6362, tok/sec: 123785.39, flops:96.40, batch-reuse:1
@ 3992 train 4.4537 , allloss: 4.4552, dt: 1049.84ms, fracRes: 0.7548, norm(attn): 0.1992, norm(output): 2.2188, norm(x): 0.3992, norm(y): 0.9508, norm:0.6134, tok/sec: 124848.91, flops:97.23, batch-reuse:1
@ 3993 train 4.4181 , allloss: 4.4200, dt: 1051.24ms, fracRes: 0.7554, norm(attn): 0.1982, norm(output): 2.2344, norm(x): 0.3994, norm(y): 0.9508, norm:0.5764, tok/sec: 124683.40, flops:97.10, batch-reuse:1
@ 3994 train 4.4111 , allloss: 4.4133, dt: 1054.49ms, fracRes: 0.7566, norm(attn): 0.1982, norm(output): 2.2031, norm(x): 0.3946, norm(y): 0.9509, norm:0.5994, tok/sec: 124298.38, flops:96.80, batch-reuse:1
@ 3995 train 4.4092 , allloss: 4.4105, dt: 1042.47ms, fracRes: 0.7550, norm(attn): 0.1982, norm(output): 2.2344, norm(x): 0.3989, norm(y): 0.9509, norm:0.5315, tok/sec: 125731.67, flops:97.92, batch-reuse:1
@ 3996 train 4.4544 , allloss: 4.4559, dt: 1069.36ms, fracRes: 0.7551, norm(attn): 0.1982, norm(output): 2.2188, norm(x): 0.3976, norm(y): 0.9507, norm:0.5525, tok/sec: 122570.48, flops:95.46, batch-reuse:1
@ 3997 train 4.4027 , allloss: 4.4041, dt: 1048.60ms, fracRes: 0.7548, norm(attn): 0.1992, norm(output): 2.2344, norm(x): 0.4005, norm(y): 0.9509, norm:0.8160, tok/sec: 124997.57, flops:97.35, batch-reuse:1
@ 3998 train 4.3966 , allloss: 4.3982, dt: 1052.02ms, fracRes: 0.7576, norm(attn): 0.1992, norm(output): 2.2031, norm(x): 0.3937, norm(y): 0.9506, norm:0.6095, tok/sec: 124590.89, flops:97.03, batch-reuse:1
@ 3999 train 4.4543 , allloss: 4.4560, dt: 1060.53ms, fracRes: 0.7573, norm(attn): 0.1982, norm(output): 2.2031, norm(x): 0.3944, norm(y): 0.9506, norm:0.6326, tok/sec: 123590.87, flops:96.25, batch-reuse:1
@ 4000 val 4.4381
@ 4000 train 4.4307 , allloss: 4.4321, dt: 1579.26ms, fracRes: 0.7558, norm(attn): 0.1992, norm(output): 2.2188, norm(x): 0.3968, norm(y): 0.9507, norm:0.6147, tok/sec: 82996.09, flops:64.64, batch-reuse:1
@ 4001 train 4.3594 , allloss: 4.3608, dt: 1058.35ms, fracRes: 0.7579, norm(attn): 0.2002, norm(output): 2.2031, norm(x): 0.3903, norm(y): 0.9504, norm:0.7276, tok/sec: 123846.13, flops:96.45, batch-reuse:1
@ 4002 train 4.3874 , allloss: 4.3888, dt: 1050.77ms, fracRes: 0.7538, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.3995, norm(y): 0.9506, norm:0.7273, tok/sec: 124739.56, flops:97.15, batch-reuse:1
@ 4003 train 4.4931 , allloss: 4.4946, dt: 1049.05ms, fracRes: 0.7547, norm(attn): 0.2021, norm(output): 2.1875, norm(x): 0.3964, norm(y): 0.9507, norm:0.6975, tok/sec: 124944.08, flops:97.31, batch-reuse:1
@ 4004 train 4.3747 , allloss: 4.3763, dt: 1053.63ms, fracRes: 0.7547, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.3984, norm(y): 0.9506, norm:0.6654, tok/sec: 124400.96, flops:96.88, batch-reuse:1
@ 4005 train 4.7873 , allloss: 4.7888, dt: 1048.15ms, fracRes: 0.7603, norm(attn): 0.2002, norm(output): 2.1250, norm(x): 0.3787, norm(y): 0.9499, norm:1.1619, tok/sec: 125050.88, flops:97.39, batch-reuse:1
@ 4006 train 4.4819 , allloss: 4.4836, dt: 1052.26ms, fracRes: 0.7558, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.3989, norm(y): 0.9503, norm:1.1437, tok/sec: 124562.15, flops:97.01, batch-reuse:1
@ 4007 train 4.4817 , allloss: 4.4842, dt: 1053.74ms, fracRes: 0.7571, norm(attn): 0.2002, norm(output): 2.1719, norm(x): 0.3908, norm(y): 0.9506, norm:1.0500, tok/sec: 124387.22, flops:96.87, batch-reuse:1
@ 4008 train 4.4824 , allloss: 4.4844, dt: 1046.46ms, fracRes: 0.7563, norm(attn): 0.2012, norm(output): 2.1719, norm(x): 0.3931, norm(y): 0.9505, norm:0.8337, tok/sec: 125252.57, flops:97.55, batch-reuse:1
@ 4009 train 4.4243 , allloss: 4.4258, dt: 1056.12ms, fracRes: 0.7553, norm(attn): 0.2012, norm(output): 2.2188, norm(x): 0.3995, norm(y): 0.9506, norm:0.7083, tok/sec: 124107.57, flops:96.66, batch-reuse:1
@ 4010 train 4.4833 , allloss: 4.4847, dt: 1049.64ms, fracRes: 0.7570, norm(attn): 0.2012, norm(output): 2.2188, norm(x): 0.3969, norm(y): 0.9501, norm:1.0774, tok/sec: 124873.86, flops:97.25, batch-reuse:1
@ 4011 train 4.4639 , allloss: 4.4667, dt: 1048.51ms, fracRes: 0.7571, norm(attn): 0.1992, norm(output): 2.2188, norm(x): 0.3965, norm(y): 0.9502, norm:1.2378, tok/sec: 125007.75, flops:97.36, batch-reuse:1
@ 4012 train 4.4830 , allloss: 4.4845, dt: 1059.13ms, fracRes: 0.7569, norm(attn): 0.1982, norm(output): 2.2031, norm(x): 0.3946, norm(y): 0.9503, norm:0.6953, tok/sec: 123754.21, flops:96.38, batch-reuse:1
@ 4013 train 4.4926 , allloss: 4.4939, dt: 1053.13ms, fracRes: 0.7561, norm(attn): 0.2002, norm(output): 2.2188, norm(x): 0.3984, norm(y): 0.9504, norm:0.8886, tok/sec: 124459.93, flops:96.93, batch-reuse:1
@ 4014 train 4.5736 , allloss: 4.5754, dt: 1067.18ms, fracRes: 0.7579, norm(attn): 0.2002, norm(output): 2.2344, norm(x): 0.3913, norm(y): 0.9500, norm:0.8283, tok/sec: 122821.26, flops:95.65, batch-reuse:1
@ 4015 train 4.4670 , allloss: 4.4684, dt: 1067.69ms, fracRes: 0.7553, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.3974, norm(y): 0.9504, norm:0.7309, tok/sec: 122762.51, flops:95.61, batch-reuse:1
@ 4016 train 4.4750 , allloss: 4.4761, dt: 1073.51ms, fracRes: 0.7559, norm(attn): 0.2002, norm(output): 2.2344, norm(x): 0.3975, norm(y): 0.9504, norm:0.6628, tok/sec: 122096.44, flops:95.09, batch-reuse:1
@ 4017 train 4.4062 , allloss: 4.4073, dt: 1064.34ms, fracRes: 0.7557, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4023, norm(y): 0.9506, norm:0.6795, tok/sec: 123148.33, flops:95.91, batch-reuse:1
@ 4018 train 4.4033 , allloss: 4.4046, dt: 1064.46ms, fracRes: 0.7544, norm(attn): 0.2012, norm(output): 2.2656, norm(x): 0.4053, norm(y): 0.9507, norm:0.6374, tok/sec: 123134.54, flops:95.90, batch-reuse:1
@ 4019 train 4.5845 , allloss: 4.5864, dt: 1064.54ms, fracRes: 0.7579, norm(attn): 0.1992, norm(output): 2.2344, norm(x): 0.3964, norm(y): 0.9502, norm:0.6460, tok/sec: 123125.88, flops:95.89, batch-reuse:1
@ 4020 train 4.4257 , allloss: 4.4270, dt: 1070.38ms, fracRes: 0.7565, norm(attn): 0.2002, norm(output): 2.2344, norm(x): 0.4001, norm(y): 0.9504, norm:0.6455, tok/sec: 122453.68, flops:95.37, batch-reuse:1
@ 4021 train 4.4403 , allloss: 4.4415, dt: 1051.88ms, fracRes: 0.7567, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.3986, norm(y): 0.9502, norm:0.6250, tok/sec: 124607.44, flops:97.04, batch-reuse:1
@ 4022 train 4.2791 , allloss: 4.2804, dt: 1046.36ms, fracRes: 0.7571, norm(attn): 0.2031, norm(output): 2.2188, norm(x): 0.3954, norm(y): 0.9500, norm:0.6533, tok/sec: 125264.47, flops:97.56, batch-reuse:1
@ 4023 train 4.5548 , allloss: 4.5560, dt: 1056.52ms, fracRes: 0.7575, norm(attn): 0.1992, norm(output): 2.2344, norm(x): 0.3951, norm(y): 0.9501, norm:0.6720, tok/sec: 124060.18, flops:96.62, batch-reuse:1
@ 4024 train 4.4950 , allloss: 4.4964, dt: 1051.91ms, fracRes: 0.7558, norm(attn): 0.2002, norm(output): 2.2031, norm(x): 0.3980, norm(y): 0.9501, norm:0.7437, tok/sec: 124603.77, flops:97.04, batch-reuse:1
@ 4025 train 4.4070 , allloss: 4.4083, dt: 1059.53ms, fracRes: 0.7547, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4009, norm(y): 0.9502, norm:0.5864, tok/sec: 123707.65, flops:96.34, batch-reuse:1
@ 4026 train 4.3263 , allloss: 4.3276, dt: 1051.83ms, fracRes: 0.7553, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.3987, norm(y): 0.9502, norm:0.6288, tok/sec: 124613.51, flops:97.05, batch-reuse:1
@ 4027 train 4.4365 , allloss: 4.4380, dt: 1063.52ms, fracRes: 0.7560, norm(attn): 0.2002, norm(output): 2.2344, norm(x): 0.4007, norm(y): 0.9503, norm:0.7487, tok/sec: 123243.33, flops:95.98, batch-reuse:1
@ 4028 train 4.4288 , allloss: 4.4304, dt: 1059.74ms, fracRes: 0.7558, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.3997, norm(y): 0.9502, norm:0.5911, tok/sec: 123682.85, flops:96.32, batch-reuse:1
@ 4029 train 4.4383 , allloss: 4.4400, dt: 1062.52ms, fracRes: 0.7551, norm(attn): 0.2012, norm(output): 2.2188, norm(x): 0.3990, norm(y): 0.9502, norm:1.7916, tok/sec: 123359.75, flops:96.07, batch-reuse:1
@ 4030 train 4.3232 , allloss: 4.3250, dt: 1064.53ms, fracRes: 0.7559, norm(attn): 0.2031, norm(output): 2.2031, norm(x): 0.3955, norm(y): 0.9502, norm:0.7025, tok/sec: 123126.82, flops:95.89, batch-reuse:1
@ 4031 train 4.3132 , allloss: 4.3145, dt: 1059.12ms, fracRes: 0.7547, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.4003, norm(y): 0.9504, norm:0.6701, tok/sec: 123755.86, flops:96.38, batch-reuse:1
@ 4032 train 4.3213 , allloss: 4.3226, dt: 1071.25ms, fracRes: 0.7544, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4013, norm(y): 0.9503, norm:0.8275, tok/sec: 122354.54, flops:95.29, batch-reuse:1
@ 4033 train 4.3651 , allloss: 4.3664, dt: 1048.08ms, fracRes: 0.7543, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4008, norm(y): 0.9502, norm:0.6967, tok/sec: 125059.30, flops:97.40, batch-reuse:1
@ 4034 train 4.3762 , allloss: 4.3778, dt: 1052.86ms, fracRes: 0.7571, norm(attn): 0.2012, norm(output): 2.1875, norm(x): 0.3922, norm(y): 0.9499, norm:0.6855, tok/sec: 124491.72, flops:96.95, batch-reuse:1
@ 4035 train 4.3365 , allloss: 4.3378, dt: 1049.38ms, fracRes: 0.7555, norm(attn): 0.1992, norm(output): 2.2344, norm(x): 0.3991, norm(y): 0.9500, norm:0.6018, tok/sec: 124904.22, flops:97.28, batch-reuse:1
@ 4036 train 4.2583 , allloss: 4.2596, dt: 1084.88ms, fracRes: 0.7557, norm(attn): 0.2002, norm(output): 2.2188, norm(x): 0.3974, norm(y): 0.9500, norm:0.5821, tok/sec: 120817.51, flops:94.09, batch-reuse:1
@ 4037 train 4.2835 , allloss: 4.2848, dt: 1061.05ms, fracRes: 0.7542, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4008, norm(y): 0.9502, norm:0.5855, tok/sec: 123530.81, flops:96.21, batch-reuse:1
@ 4038 train 4.2896 , allloss: 4.2911, dt: 1061.64ms, fracRes: 0.7551, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.3995, norm(y): 0.9500, norm:0.6831, tok/sec: 123461.51, flops:96.15, batch-reuse:1
@ 4039 train 4.2649 , allloss: 4.2662, dt: 1043.55ms, fracRes: 0.7534, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4039, norm(y): 0.9503, norm:0.7307, tok/sec: 125602.03, flops:97.82, batch-reuse:1
@ 4040 train 4.3294 , allloss: 4.3308, dt: 1065.35ms, fracRes: 0.7550, norm(attn): 0.1992, norm(output): 2.2344, norm(x): 0.3995, norm(y): 0.9501, norm:0.7284, tok/sec: 123031.34, flops:95.82, batch-reuse:1
@ 4041 train 4.2120 , allloss: 4.2132, dt: 1064.02ms, fracRes: 0.7526, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4039, norm(y): 0.9504, norm:0.6345, tok/sec: 123185.25, flops:95.94, batch-reuse:1
@ 4042 train 4.3271 , allloss: 4.3288, dt: 1061.49ms, fracRes: 0.7545, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4030, norm(y): 0.9501, norm:0.7021, tok/sec: 123479.81, flops:96.17, batch-reuse:1
@ 4043 train 4.3340 , allloss: 4.3352, dt: 1052.22ms, fracRes: 0.7536, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4052, norm(y): 0.9503, norm:0.6578, tok/sec: 124567.60, flops:97.01, batch-reuse:1
@ 4044 train 4.3500 , allloss: 4.3513, dt: 1050.88ms, fracRes: 0.7541, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4044, norm(y): 0.9501, norm:0.8104, tok/sec: 124725.44, flops:97.14, batch-reuse:1
@ 4045 train 4.3070 , allloss: 4.3084, dt: 1060.85ms, fracRes: 0.7562, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4003, norm(y): 0.9501, norm:0.6366, tok/sec: 123553.54, flops:96.22, batch-reuse:1
@ 4046 train 4.3700 , allloss: 4.3715, dt: 1052.25ms, fracRes: 0.7564, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.3999, norm(y): 0.9497, norm:0.6918, tok/sec: 124563.54, flops:97.01, batch-reuse:1
@ 4047 train 4.4235 , allloss: 4.4253, dt: 1051.42ms, fracRes: 0.7546, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.4010, norm(y): 0.9498, norm:0.6327, tok/sec: 124662.43, flops:97.09, batch-reuse:1
@ 4048 train 4.3630 , allloss: 4.3645, dt: 1055.57ms, fracRes: 0.7551, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.3977, norm(y): 0.9498, norm:0.6612, tok/sec: 124172.35, flops:96.71, batch-reuse:1
@ 4049 train 4.2742 , allloss: 4.2759, dt: 1052.25ms, fracRes: 0.7553, norm(attn): 0.2021, norm(output): 2.2031, norm(x): 0.3958, norm(y): 0.9497, norm:0.6872, tok/sec: 124563.42, flops:97.01, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863, -20.2500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972, -17.6250, -14.3125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -18.8750, -15.1250, -18.2500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189, -14.4375, -12.3750, -12.1250, -11.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835, -12.0625, -11.8125, -11.8125, -11.8125, -13.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918, -18.2500, -14.9375, -17.5000, -16.6250, -18.5000, -15.5000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -25.1250, -19.2500, -27.1250, -24.2500, -26.6250, -26.0000, -30.3750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -8.7500,  -9.6250,  -7.6250,  -7.6875,  -9.1875,  -5.1562,  -8.2500,  -6.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052, -15.6250, -14.1875, -15.6875, -15.2500, -15.8750, -13.1250, -17.2500, -12.2500, -12.7500,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -5.1875,  -7.9688,  -6.0938,  -5.3750,  -7.3125,  -4.1875,  -8.3750,  -4.4375,  -4.8750,  -3.9062,     -inf,     -inf,     -inf,     -inf],
          [  4.9698, -16.8750, -13.0000, -16.3750, -15.0625, -16.1250, -14.1250, -17.3750, -12.1875, -12.2500, -10.4375, -13.5625,     -inf,     -inf,     -inf],
          [  5.1299, -14.0000, -10.8125, -15.2500, -13.6250, -14.5625, -14.4375, -16.3750, -10.9375, -10.9375,  -9.6250, -12.0625, -10.6875,     -inf,     -inf],
          [  5.2781,  -6.1562,  -8.2500,  -6.7812,  -6.2188,  -7.6250,  -4.6562,  -8.1250,  -5.7500,  -5.6562,  -5.2188,  -7.1562,  -6.4375,  -5.8750,     -inf],
          [  5.4161, -16.5000, -12.7500, -16.7500, -15.1875, -16.3750, -14.2500, -17.6250, -12.4375, -12.0625, -11.2500, -14.7500, -11.8125, -11.5000, -14.4375]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9993],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.9997],
        [0.9997],
        [0.9997]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863,  -9.3750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972,  -9.0000, -10.3125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726,  -8.7500,  -9.4375,  -7.7812,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -8.1875, -10.8125,  -7.4062,  -7.3750,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835,  -8.1250,  -9.5000,  -8.1875,  -8.2500, -11.1250,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918,  -8.8750,  -9.0625,  -8.5625,  -9.3750, -10.5625,  -9.9375,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -10.0625,  -9.5000,  -9.0000,  -9.8750, -11.1875, -10.9375,  -7.5312,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -7.1250,  -8.5625,  -6.8750,  -7.0000,  -8.8125,  -6.9062,  -7.2500,  -7.4062,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052,  -8.0625,  -9.2500,  -7.6875,  -7.6875,  -9.0625,  -8.1875,  -6.7500,  -7.5312,  -8.7500,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958,  -6.6875,  -7.5312,  -7.4375,  -7.5625,  -8.9375,  -6.6562,  -6.6250,  -7.5312,  -7.4375,  -7.7812,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -7.5312,  -6.9688,  -7.3438,  -8.1250,  -9.5000,  -8.3750,  -5.6250,  -8.0625,  -8.8125,  -9.0625,  -4.6562,     -inf,     -inf,     -inf],
          [  5.1299,  -6.7188,  -7.2812,  -5.9062,  -5.9375,  -6.6250,  -6.5000,  -5.1562,  -5.6250,  -6.6562,  -6.3438,  -3.7031,  -3.9219,     -inf,     -inf],
          [  5.2781,  -6.5625,  -8.1250,  -6.4375,  -6.5312,  -8.6875,  -6.8750,  -7.2500,  -7.0000,  -6.3125,  -5.9375,  -4.9688,  -5.5625,  -5.5938,     -inf],
          [  5.4161,  -8.6875,  -9.6250,  -8.1875,  -8.6875, -10.8750,  -8.7500,  -8.2500,  -9.2500,  -8.7500,  -8.3125,  -5.7500,  -6.5938,  -7.6875,  -8.3125]]]], device='cuda:0')
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0001,     0.0002,     0.0003,     0.0007,     0.0007,     0.0010,     0.0012,     0.0010,     0.0009,     0.0005,     0.0005,     0.0015,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0005,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[  0.0000,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  1.3863,  -8.1875,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.1972,  -8.5000,  -7.0625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  2.7726, -10.6875,  -6.0625,  -7.7812,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.2189,  -9.9375,  -5.8750,  -7.1875,  -7.2188,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.5835, -10.0000,  -6.4375,  -7.0312,  -7.5625,  -7.0625,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  3.8918, -13.0000,  -6.8750,  -9.9375,  -8.7500,  -9.4375,  -8.7500,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.1589, -10.1875,  -6.2812,  -7.7188,  -6.1250,  -6.8438,  -6.0000,  -6.8438,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.3944,  -8.6250,  -5.5000,  -6.4688,  -7.6562,  -7.1562,  -5.4688,  -5.5938,  -7.8125,     -inf,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.6052, -10.5625,  -6.0938,  -7.5938,  -7.1250,  -7.7500,  -7.0938,  -7.5625,  -6.8750,  -6.5000,     -inf,     -inf,     -inf,     -inf,     -inf],
          [  4.7958, -10.4375,  -4.1562,  -8.3125,  -7.5625,  -9.0000,  -8.1250,  -9.7500,  -8.2500,  -9.3750, -10.0625,     -inf,     -inf,     -inf,     -inf],
          [  4.9698,  -9.0625,  -6.1562,  -6.7500,  -5.3438,  -5.5625,  -4.5938,  -5.2188,  -4.4062,  -5.0938,  -6.0625,  -5.3750,     -inf,     -inf,     -inf],
          [  5.1299,  -3.7969,  -3.3906,  -2.9219,  -2.1406,  -2.1562,  -1.7734,  -1.6016,  -1.8203,  -1.8984,  -2.5312,  -2.5625,  -1.3906,     -inf,     -inf],
          [  5.2781,  -7.0312,  -4.3438,  -5.1562,  -7.0938,  -6.7500,  -4.8750,  -5.0625,  -7.4688,  -5.3750,  -7.0312,  -4.1875,  -2.2812,  -6.9062,     -inf],
          [  5.4161, -11.2500,  -5.3125,  -8.5625,  -6.6562,  -7.7500,  -7.2500,  -8.7500,  -6.8438,  -7.2188,  -9.1875,  -7.1562,  -2.2188,  -5.6875,  -8.5000]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.9961],
        [0.9906],
        [0.9941],
        [0.9987],
        [0.9990],
        [0.9990],
        [0.9997],
        [0.9990],
        [1.0000],
        [0.9990],
        [0.9964],
        [0.9919],
        [0.9980],
        [0.9990]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1582,     0.8398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6172,     0.1445,     0.2383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0076,     0.0488,     0.0108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0068,     0.0093,     0.0073,     0.9766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0063,     0.0079,     0.0047,     0.8203,     0.1582,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0125,     0.0115,     0.0031,     0.8203,     0.1523,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0072,     0.0146,     0.0020,     0.8828,     0.0913,     0.0003,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0030,     0.0028,     0.0034,     0.7148,     0.1416,     0.0003,     0.0003,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0018,     0.0024,     0.0012,     0.8086,     0.0884,     0.0000,     0.0001,     0.0967,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0068,     0.0056,     0.0111,     0.0108,     0.6719,     0.1060,     0.0012,     0.0015,     0.1079,     0.0002,     0.0762,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0013,     0.0053,     0.0086,     0.0035,     0.0031,     0.0095,     0.0182,     0.0035,     0.0052,     0.0036,     0.0076,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0056,     0.0062,     0.0009,     0.7344,     0.0654,     0.0001,     0.0001,     0.1118,     0.0000,     0.0757,     0.0004,     0.0001,     0.0000,     0.0000],
        [    0.0019,     0.0025,     0.0026,     0.0033,     0.5859,     0.1118,     0.0003,     0.0003,     0.1006,     0.0001,     0.0762,     0.0012,     0.0004,     0.1147,     0.0000],
        [    0.9844,     0.0003,     0.0010,     0.0014,     0.0002,     0.0002,     0.0024,     0.0027,     0.0002,     0.0009,     0.0001,     0.0014,     0.0022,     0.0002,     0.0008]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863,  3.0469,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972,  0.7500,  1.2500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726, -2.0469, -0.1836, -1.6953,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  5.2188,  5.5312,  5.3125, 10.1875,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  5.2812,  5.5000,  5.0000, 10.1250,  8.5000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  6.6250,  6.5625,  5.2500, 10.8125,  9.1250,  2.3594,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  7.1250,  7.8438,  5.8750, 11.9375,  9.6875,  3.8594,  3.5625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  5.5625,  5.4688,  5.6875, 11.0625,  9.4375,  3.4062,  3.2188,  9.3750,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  6.8750,  7.1875,  6.4688, 13.0000, 10.7500,  3.2500,  3.8281, 10.8750,  1.5938,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  4.5938,  5.2500,  5.2500,  9.3750,  7.5312,  3.0469,  3.2969,  7.5312,  1.0781,  7.1875,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698, -1.5703, -0.1924,  0.2891, -0.6250, -0.7305,  0.3809,  1.0391, -0.6211, -0.2080, -0.5898,  0.1562,    -inf,    -inf,    -inf],
          [ 5.1299,  7.7812,  7.8750,  6.0000, 12.6250, 10.2500,  3.5625,  3.0625, 10.7500,  1.8203, 10.3750,  5.0312,  3.4219,    -inf,    -inf],
          [ 5.2781,  5.5312,  5.5625,  5.8125, 11.0000,  9.3125,  3.4062,  3.2969,  9.2500,  1.6641,  8.9375,  4.8438,  3.6719,  9.3750,    -inf],
          [ 5.4161, -2.7031, -1.5000, -1.1797, -3.2344, -2.9688, -0.6211, -0.4746, -3.0312, -1.6250, -3.4531, -1.1875, -0.7227, -3.0156, -1.7656]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.8010],
        [0.8580],
        [0.8916],
        [0.0744],
        [0.0691],
        [0.1877],
        [0.2045],
        [0.0512],
        [0.1926],
        [0.0429],
        [0.8200],
        [0.2114],
        [0.0433],
        [0.7668]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0153, 0.9844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9570, 0.0145, 0.0282, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.1797, 0.2217, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0042, 0.5000, 0.1348, 0.2246, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0282, 0.3184, 0.2432, 0.1709, 0.0938, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0364, 0.0889, 0.0554, 0.2578, 0.1006, 0.0339, 0.4258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0327, 0.0879, 0.0513, 0.0835, 0.0349, 0.0327, 0.5820, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0322, 0.0786, 0.0525, 0.0623, 0.0544, 0.0527, 0.3965, 0.1660, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0159, 0.1523, 0.0493, 0.0442, 0.0354, 0.0306, 0.4160, 0.1094, 0.0708, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0140, 0.0791, 0.0277, 0.0383, 0.0420, 0.0245, 0.3457, 0.1279, 0.0728, 0.0796, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6133, 0.0173, 0.0120, 0.0322, 0.0102, 0.0283, 0.0762, 0.0425, 0.0515, 0.0427, 0.0688, 0.0057, 0.0000, 0.0000, 0.0000],
        [0.0017, 0.0742, 0.0121, 0.0219, 0.0117, 0.0166, 0.6445, 0.0220, 0.0515, 0.0391, 0.0786, 0.0041, 0.0227, 0.0000, 0.0000],
        [0.0082, 0.0723, 0.0216, 0.0259, 0.0322, 0.0356, 0.3828, 0.0894, 0.0486, 0.1079, 0.0781, 0.0161, 0.0347, 0.0474, 0.0000],
        [0.0049, 0.0649, 0.0222, 0.0142, 0.0286, 0.0133, 0.1807, 0.0447, 0.0466, 0.0457, 0.0703, 0.0201, 0.0488, 0.0718, 0.3242]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES (withmask)
tensor([[[[ 0.0000,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 1.3863,  5.5625,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.1972, -1.9844, -1.3203,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 2.7726,  3.6719,  3.8750,  4.7500,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.2189,  8.0000,  6.6875,  7.1875,  6.6875,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.5835,  6.0000,  5.7188,  5.3750,  4.7812,  5.2188,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 3.8918,  4.7812,  4.3125,  5.8438,  4.9062,  3.8281,  6.3438,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.1589,  5.1562,  4.5938,  5.0938,  4.2188,  4.1562,  7.0312,  5.2188,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.3944,  5.2812,  4.8750,  5.0625,  4.9375,  4.9062,  6.9062,  6.0312,  5.5938,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.6052,  6.8438,  5.7188,  5.6250,  5.4062,  5.2500,  7.8750,  6.5312,  6.0938,  6.1562,    -inf,    -inf,    -inf,    -inf,    -inf],
          [ 4.7958,  6.5000,  5.4688,  5.7812,  5.8750,  5.3438,  8.0000,  7.0000,  6.4375,  6.5312,  7.1562,    -inf,    -inf,    -inf,    -inf],
          [ 4.9698,  1.4062,  1.0391,  2.0156,  0.8711,  1.8906,  2.8906,  2.2969,  2.5000,  2.3125,  2.7812,  0.2930,    -inf,    -inf,    -inf],
          [ 5.1299,  8.9375,  7.0938,  7.6875,  7.0625,  7.4062, 11.0625,  7.6875,  8.5625,  8.2500,  8.9375,  6.0000,  7.7188,    -inf,    -inf],
          [ 5.2781,  7.4688,  6.2500,  6.4375,  6.6562,  6.7500,  9.1250,  7.6562,  7.0625,  7.8438,  7.5312,  5.9688,  6.7188,  7.0312,    -inf],
          [ 5.4161,  8.0000,  6.9375,  6.4688,  7.1875,  6.4062,  9.0000,  7.6250,  7.6562,  7.6562,  8.0625,  6.8125,  7.7188,  8.1250,  9.6250]]]], device='cuda:0')
========
RESW: tensor([[1.0000],
        [0.6506],
        [0.6857],
        [0.4186],
        [0.3568],
        [0.2532],
        [0.2319],
        [0.2858],
        [0.2257],
        [0.3192],
        [0.2530],
        [0.4385],
        [0.2770],
        [0.1591],
        [0.2309]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(!:0.2441 a:0.1309,:0.1807 and:0.1230tery:0.1143,:0.5156 a:0.1299iced:0.3848)
iced
------
		( a:0.1309,:0.1807 and:0.1230tery:0.1143,:0.5156 a:0.1299iced:0.3848,:0.0942)
, and they are sweet.
The first thing to remember is that you
@ 4050 train 4.2911 , allloss: 4.2927, dt: 1315.62ms, fracRes: 0.7540, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.4000, norm(y): 0.9500, norm:0.6996, tok/sec: 99627.34, flops:77.59, batch-reuse:1
@ 4051 train 4.2658 , allloss: 4.2671, dt: 1068.52ms, fracRes: 0.7548, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.3979, norm(y): 0.9498, norm:0.5995, tok/sec: 122666.97, flops:95.53, batch-reuse:1
@ 4052 train 4.2334 , allloss: 4.2348, dt: 1066.06ms, fracRes: 0.7545, norm(attn): 0.2021, norm(output): 2.2031, norm(x): 0.4001, norm(y): 0.9497, norm:0.6065, tok/sec: 122949.98, flops:95.75, batch-reuse:1
@ 4053 train 4.2362 , allloss: 4.2375, dt: 1065.23ms, fracRes: 0.7547, norm(attn): 0.2031, norm(output): 2.2031, norm(x): 0.4004, norm(y): 0.9499, norm:0.6665, tok/sec: 123045.33, flops:95.83, batch-reuse:1
@ 4054 train 4.3702 , allloss: 4.3714, dt: 1047.08ms, fracRes: 0.7542, norm(attn): 0.2002, norm(output): 2.2188, norm(x): 0.4000, norm(y): 0.9497, norm:0.6091, tok/sec: 125178.76, flops:97.49, batch-reuse:1
@ 4055 train 4.4200 , allloss: 4.4212, dt: 1063.21ms, fracRes: 0.7544, norm(attn): 0.2012, norm(output): 2.2031, norm(x): 0.4002, norm(y): 0.9495, norm:0.6848, tok/sec: 123279.00, flops:96.01, batch-reuse:1
@ 4056 train 4.4219 , allloss: 4.4230, dt: 1051.54ms, fracRes: 0.7537, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4039, norm(y): 0.9498, norm:0.6330, tok/sec: 124647.62, flops:97.08, batch-reuse:1
@ 4057 train 4.2324 , allloss: 4.2336, dt: 1066.25ms, fracRes: 0.7538, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.4048, norm(y): 0.9499, norm:0.6053, tok/sec: 122928.26, flops:95.74, batch-reuse:1
@ 4058 train 4.4140 , allloss: 4.4155, dt: 1046.73ms, fracRes: 0.7545, norm(attn): 0.1992, norm(output): 2.2344, norm(x): 0.4032, norm(y): 0.9496, norm:0.7242, tok/sec: 125220.50, flops:97.52, batch-reuse:1
@ 4059 train 4.3111 , allloss: 4.9573, dt: 1057.83ms, fracRes: 0.7532, norm(attn): 0.2100, norm(output): 2.4062, norm(x): 0.5134, norm(y): 0.9499, norm:122.2250, tok/sec: 123906.98, flops:96.50, batch-reuse:1
@ 4060 train 4.2943 , allloss: 4.2953, dt: 1062.78ms, fracRes: 0.7526, norm(attn): 0.2041, norm(output): 2.2344, norm(x): 0.4092, norm(y): 0.9501, norm:1.6039, tok/sec: 123329.81, flops:96.05, batch-reuse:1
@ 4061 train 4.4010 , allloss: 4.4023, dt: 1052.48ms, fracRes: 0.7550, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4035, norm(y): 0.9496, norm:0.8509, tok/sec: 124536.65, flops:96.99, batch-reuse:1
@ 4062 train 4.3429 , allloss: 4.3441, dt: 1048.21ms, fracRes: 0.7552, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4009, norm(y): 0.9496, norm:0.8035, tok/sec: 125043.17, flops:97.38, batch-reuse:1
@ 4063 train 4.2841 , allloss: 4.2853, dt: 1058.94ms, fracRes: 0.7544, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4035, norm(y): 0.9496, norm:0.8337, tok/sec: 123776.87, flops:96.40, batch-reuse:1
@ 4064 train 4.3540 , allloss: 4.3553, dt: 1052.94ms, fracRes: 0.7543, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.4040, norm(y): 0.9496, norm:0.8363, tok/sec: 124481.86, flops:96.95, batch-reuse:1
@ 4065 train 4.3460 , allloss: 4.3471, dt: 1069.98ms, fracRes: 0.7545, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4027, norm(y): 0.9495, norm:0.6914, tok/sec: 122499.22, flops:95.40, batch-reuse:1
@ 4066 train 4.2330 , allloss: 4.2341, dt: 1066.69ms, fracRes: 0.7567, norm(attn): 0.2012, norm(output): 2.2188, norm(x): 0.3972, norm(y): 0.9493, norm:0.7504, tok/sec: 122877.21, flops:95.70, batch-reuse:1
@ 4067 train 4.4008 , allloss: 4.4020, dt: 1058.81ms, fracRes: 0.7565, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.3953, norm(y): 0.9491, norm:0.7146, tok/sec: 123791.75, flops:96.41, batch-reuse:1
@ 4068 train 4.2615 , allloss: 4.2626, dt: 1043.53ms, fracRes: 0.7537, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4042, norm(y): 0.9496, norm:0.6756, tok/sec: 125604.64, flops:97.82, batch-reuse:1
@ 4069 train 4.4044 , allloss: 4.4056, dt: 1058.71ms, fracRes: 0.7541, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4025, norm(y): 0.9493, norm:0.6578, tok/sec: 123803.54, flops:96.42, batch-reuse:1
@ 4070 train 4.3762 , allloss: 4.3771, dt: 1055.26ms, fracRes: 0.7549, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4030, norm(y): 0.9495, norm:0.6154, tok/sec: 124207.95, flops:96.73, batch-reuse:1
@ 4071 train 4.2793 , allloss: 4.2802, dt: 1060.52ms, fracRes: 0.7530, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4100, norm(y): 0.9498, norm:0.7733, tok/sec: 123592.21, flops:96.25, batch-reuse:1
@ 4072 train 4.2905 , allloss: 4.2916, dt: 1054.85ms, fracRes: 0.7547, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4033, norm(y): 0.9494, norm:0.6812, tok/sec: 124256.24, flops:96.77, batch-reuse:1
@ 4073 train 4.2996 , allloss: 4.3007, dt: 1062.49ms, fracRes: 0.7549, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4015, norm(y): 0.9493, norm:0.6604, tok/sec: 123363.54, flops:96.08, batch-reuse:1
@ 4074 train 4.3780 , allloss: 4.3790, dt: 1059.88ms, fracRes: 0.7520, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4069, norm(y): 0.9495, norm:0.7016, tok/sec: 123666.80, flops:96.31, batch-reuse:1
@ 4075 train 4.2675 , allloss: 4.2685, dt: 1051.03ms, fracRes: 0.7511, norm(attn): 0.2041, norm(output): 2.2500, norm(x): 0.4085, norm(y): 0.9496, norm:0.6520, tok/sec: 124708.58, flops:97.12, batch-reuse:1
@ 4076 train 4.5282 , allloss: 4.5293, dt: 1061.24ms, fracRes: 0.7544, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4007, norm(y): 0.9491, norm:0.7466, tok/sec: 123508.55, flops:96.19, batch-reuse:1
@ 4077 train 4.4880 , allloss: 4.4891, dt: 1048.68ms, fracRes: 0.7543, norm(attn): 0.2031, norm(output): 2.1875, norm(x): 0.4003, norm(y): 0.9490, norm:0.7163, tok/sec: 124988.14, flops:97.34, batch-reuse:1
@ 4078 train 4.4524 , allloss: 4.4536, dt: 1045.87ms, fracRes: 0.7546, norm(attn): 0.2021, norm(output): 2.2031, norm(x): 0.4019, norm(y): 0.9489, norm:0.6755, tok/sec: 125322.95, flops:97.60, batch-reuse:1
@ 4079 train 4.4801 , allloss: 4.4815, dt: 1058.39ms, fracRes: 0.7544, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4048, norm(y): 0.9490, norm:0.6164, tok/sec: 123841.50, flops:96.45, batch-reuse:1
@ 4080 train 4.6594 , allloss: 4.6610, dt: 1055.86ms, fracRes: 0.7556, norm(attn): 0.2002, norm(output): 2.2188, norm(x): 0.4000, norm(y): 0.9489, norm:0.7725, tok/sec: 124137.69, flops:96.68, batch-reuse:1
@ 4081 train 4.5393 , allloss: 4.5407, dt: 1045.64ms, fracRes: 0.7554, norm(attn): 0.2002, norm(output): 2.2188, norm(x): 0.3985, norm(y): 0.9490, norm:0.8528, tok/sec: 125351.27, flops:97.62, batch-reuse:1
@ 4082 train 4.4712 , allloss: 4.4726, dt: 1050.47ms, fracRes: 0.7556, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.3988, norm(y): 0.9489, norm:0.6453, tok/sec: 124774.44, flops:97.17, batch-reuse:1
@ 4083 train 4.5917 , allloss: 4.5936, dt: 1048.99ms, fracRes: 0.7572, norm(attn): 0.1992, norm(output): 2.2188, norm(x): 0.3946, norm(y): 0.9484, norm:0.7245, tok/sec: 124950.78, flops:97.31, batch-reuse:1
@ 4084 train 4.5440 , allloss: 4.5455, dt: 1061.43ms, fracRes: 0.7546, norm(attn): 0.1992, norm(output): 2.2344, norm(x): 0.4037, norm(y): 0.9488, norm:0.7536, tok/sec: 123486.66, flops:96.17, batch-reuse:1
@ 4085 train 4.4060 , allloss: 4.4073, dt: 1058.40ms, fracRes: 0.7547, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4035, norm(y): 0.9489, norm:0.7276, tok/sec: 123839.46, flops:96.45, batch-reuse:1
@ 4086 train 4.4530 , allloss: 4.4543, dt: 1052.37ms, fracRes: 0.7555, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4020, norm(y): 0.9489, norm:0.7243, tok/sec: 124549.40, flops:97.00, batch-reuse:1
@ 4087 train 4.5424 , allloss: 4.5437, dt: 1062.07ms, fracRes: 0.7564, norm(attn): 0.2002, norm(output): 2.2500, norm(x): 0.4036, norm(y): 0.9486, norm:0.7358, tok/sec: 123411.65, flops:96.11, batch-reuse:1
@ 4088 train 4.4587 , allloss: 4.4602, dt: 1051.07ms, fracRes: 0.7564, norm(attn): 0.1992, norm(output): 2.2656, norm(x): 0.4027, norm(y): 0.9487, norm:0.6590, tok/sec: 124703.46, flops:97.12, batch-reuse:1
@ 4089 train 4.4789 , allloss: 4.4803, dt: 1053.68ms, fracRes: 0.7560, norm(attn): 0.2002, norm(output): 2.2500, norm(x): 0.4000, norm(y): 0.9487, norm:0.7326, tok/sec: 124394.03, flops:96.88, batch-reuse:1
@ 4090 train 4.5580 , allloss: 4.5595, dt: 1063.03ms, fracRes: 0.7546, norm(attn): 0.2002, norm(output): 2.2500, norm(x): 0.4015, norm(y): 0.9488, norm:0.6889, tok/sec: 123299.85, flops:96.03, batch-reuse:1
@ 4091 train 4.5365 , allloss: 4.5377, dt: 1050.95ms, fracRes: 0.7549, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4015, norm(y): 0.9488, norm:0.5680, tok/sec: 124717.29, flops:97.13, batch-reuse:1
@ 4092 train 4.5144 , allloss: 4.5156, dt: 1057.53ms, fracRes: 0.7570, norm(attn): 0.2002, norm(output): 2.2344, norm(x): 0.3966, norm(y): 0.9484, norm:0.6247, tok/sec: 123941.98, flops:96.53, batch-reuse:1
@ 4093 train 4.6270 , allloss: 4.6284, dt: 1049.24ms, fracRes: 0.7581, norm(attn): 0.1982, norm(output): 2.1875, norm(x): 0.3906, norm(y): 0.9484, norm:0.7145, tok/sec: 124920.37, flops:97.29, batch-reuse:1
@ 4094 train 4.4879 , allloss: 4.4894, dt: 1063.21ms, fracRes: 0.7573, norm(attn): 0.2002, norm(output): 2.2031, norm(x): 0.3945, norm(y): 0.9484, norm:0.8418, tok/sec: 123279.20, flops:96.01, batch-reuse:1
@ 4095 train 4.4421 , allloss: 4.4432, dt: 1057.72ms, fracRes: 0.7535, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4057, norm(y): 0.9488, norm:0.8437, tok/sec: 123919.69, flops:96.51, batch-reuse:1
@ 4096 train 4.5701 , allloss: 4.5712, dt: 1047.29ms, fracRes: 0.7553, norm(attn): 0.2021, norm(output): 2.2656, norm(x): 0.4046, norm(y): 0.9487, norm:0.7305, tok/sec: 125153.40, flops:97.47, batch-reuse:1
@ 4097 train 4.4944 , allloss: 4.4958, dt: 1059.36ms, fracRes: 0.7554, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4034, norm(y): 0.9487, norm:0.8744, tok/sec: 123727.92, flops:96.36, batch-reuse:1
@ 4098 train 4.3732 , allloss: 4.3744, dt: 1063.33ms, fracRes: 0.7552, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4056, norm(y): 0.9487, norm:0.8033, tok/sec: 123265.51, flops:96.00, batch-reuse:1
@ 4099 train 4.5144 , allloss: 4.5157, dt: 1051.88ms, fracRes: 0.7549, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4069, norm(y): 0.9486, norm:0.7034, tok/sec: 124606.88, flops:97.04, batch-reuse:1
@ 4100 train 4.5892 , allloss: 4.5907, dt: 1056.34ms, fracRes: 0.7557, norm(attn): 0.2002, norm(output): 2.2031, norm(x): 0.4012, norm(y): 0.9484, norm:0.8749, tok/sec: 124081.54, flops:96.64, batch-reuse:1
@ 4101 train 4.6272 , allloss: 4.6284, dt: 1053.28ms, fracRes: 0.7553, norm(attn): 0.1992, norm(output): 2.2031, norm(x): 0.4020, norm(y): 0.9484, norm:0.8207, tok/sec: 124441.62, flops:96.92, batch-reuse:1
@ 4102 train 4.5021 , allloss: 4.5035, dt: 1057.63ms, fracRes: 0.7555, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4057, norm(y): 0.9485, norm:0.8695, tok/sec: 123929.52, flops:96.52, batch-reuse:1
@ 4103 train 4.5381 , allloss: 4.5394, dt: 1055.87ms, fracRes: 0.7574, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4018, norm(y): 0.9486, norm:0.6958, tok/sec: 124136.43, flops:96.68, batch-reuse:1
@ 4104 train 4.4363 , allloss: 4.4375, dt: 1071.68ms, fracRes: 0.7543, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4094, norm(y): 0.9490, norm:0.6249, tok/sec: 122305.70, flops:95.25, batch-reuse:1
@ 4105 train 4.5122 , allloss: 4.5134, dt: 1061.75ms, fracRes: 0.7554, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4044, norm(y): 0.9486, norm:0.6337, tok/sec: 123449.06, flops:96.14, batch-reuse:1
@ 4106 train 4.6118 , allloss: 4.6132, dt: 1052.98ms, fracRes: 0.7564, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.4017, norm(y): 0.9484, norm:0.6093, tok/sec: 124476.92, flops:96.94, batch-reuse:1
@ 4107 train 4.3962 , allloss: 4.3978, dt: 1041.51ms, fracRes: 0.7575, norm(attn): 0.2021, norm(output): 2.2188, norm(x): 0.3987, norm(y): 0.9485, norm:0.7008, tok/sec: 125848.15, flops:98.01, batch-reuse:1
@ 4108 train 4.4862 , allloss: 4.4875, dt: 1053.17ms, fracRes: 0.7552, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4069, norm(y): 0.9486, norm:0.7415, tok/sec: 124455.31, flops:96.93, batch-reuse:1
@ 4109 train 4.5807 , allloss: 4.5820, dt: 1054.37ms, fracRes: 0.7558, norm(attn): 0.2002, norm(output): 2.2344, norm(x): 0.4018, norm(y): 0.9484, norm:0.7946, tok/sec: 124312.68, flops:96.82, batch-reuse:1
@ 4110 train 4.4710 , allloss: 4.4723, dt: 1054.55ms, fracRes: 0.7555, norm(attn): 0.2002, norm(output): 2.2188, norm(x): 0.4000, norm(y): 0.9483, norm:0.6980, tok/sec: 124291.30, flops:96.80, batch-reuse:1
@ 4111 train 4.4980 , allloss: 4.4995, dt: 1063.48ms, fracRes: 0.7566, norm(attn): 0.2012, norm(output): 2.2188, norm(x): 0.3991, norm(y): 0.9485, norm:0.6278, tok/sec: 123247.94, flops:95.99, batch-reuse:1
@ 4112 train 4.5086 , allloss: 4.5099, dt: 1047.84ms, fracRes: 0.7570, norm(attn): 0.2012, norm(output): 2.2188, norm(x): 0.3996, norm(y): 0.9483, norm:0.7192, tok/sec: 125087.64, flops:97.42, batch-reuse:1
@ 4113 train 4.4250 , allloss: 4.4263, dt: 1058.74ms, fracRes: 0.7547, norm(attn): 0.2002, norm(output): 2.2500, norm(x): 0.4070, norm(y): 0.9486, norm:0.5694, tok/sec: 123800.17, flops:96.42, batch-reuse:1
@ 4114 train 4.6386 , allloss: 4.6405, dt: 1047.41ms, fracRes: 0.7588, norm(attn): 0.1982, norm(output): 2.2031, norm(x): 0.3946, norm(y): 0.9480, norm:0.6774, tok/sec: 125138.75, flops:97.46, batch-reuse:1
@ 4115 train 4.4014 , allloss: 4.4028, dt: 1055.38ms, fracRes: 0.7548, norm(attn): 0.2031, norm(output): 2.2500, norm(x): 0.4048, norm(y): 0.9484, norm:0.7605, tok/sec: 124194.12, flops:96.72, batch-reuse:1
@ 4116 train 4.5184 , allloss: 4.5199, dt: 1053.44ms, fracRes: 0.7529, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4080, norm(y): 0.9485, norm:0.7047, tok/sec: 124423.37, flops:96.90, batch-reuse:1
@ 4117 train 4.4048 , allloss: 4.4062, dt: 1053.00ms, fracRes: 0.7552, norm(attn): 0.2012, norm(output): 2.2344, norm(x): 0.4035, norm(y): 0.9484, norm:0.6529, tok/sec: 124475.01, flops:96.94, batch-reuse:1
@ 4118 train 4.5827 , allloss: 4.5843, dt: 1062.82ms, fracRes: 0.7567, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4038, norm(y): 0.9481, norm:0.6781, tok/sec: 123324.63, flops:96.05, batch-reuse:1
@ 4119 train 4.5665 , allloss: 4.5677, dt: 1063.72ms, fracRes: 0.7578, norm(attn): 0.2002, norm(output): 2.2344, norm(x): 0.3986, norm(y): 0.9484, norm:0.6060, tok/sec: 123220.40, flops:95.96, batch-reuse:1
@ 4120 train 4.4804 , allloss: 4.4815, dt: 1065.93ms, fracRes: 0.7557, norm(attn): 0.2031, norm(output): 2.2500, norm(x): 0.4053, norm(y): 0.9485, norm:0.6736, tok/sec: 122965.18, flops:95.77, batch-reuse:1
@ 4121 train 4.4339 , allloss: 4.4351, dt: 1089.30ms, fracRes: 0.7544, norm(attn): 0.2021, norm(output): 2.2656, norm(x): 0.4097, norm(y): 0.9485, norm:0.6436, tok/sec: 120327.30, flops:93.71, batch-reuse:1
@ 4122 train 4.5654 , allloss: 4.5669, dt: 1069.32ms, fracRes: 0.7557, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4027, norm(y): 0.9481, norm:0.6108, tok/sec: 122575.45, flops:95.46, batch-reuse:1
@ 4123 train 4.5013 , allloss: 4.5026, dt: 1045.57ms, fracRes: 0.7559, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4032, norm(y): 0.9482, norm:0.6384, tok/sec: 125359.10, flops:97.63, batch-reuse:1
@ 4124 train 4.4662 , allloss: 4.4675, dt: 1061.70ms, fracRes: 0.7563, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4023, norm(y): 0.9483, norm:0.6113, tok/sec: 123454.88, flops:96.15, batch-reuse:1
@ 4125 train 4.4449 , allloss: 4.4461, dt: 1061.70ms, fracRes: 0.7558, norm(attn): 0.2012, norm(output): 2.2656, norm(x): 0.4071, norm(y): 0.9485, norm:0.5546, tok/sec: 123455.27, flops:96.15, batch-reuse:1
@ 4126 train 4.3296 , allloss: 4.3311, dt: 1053.87ms, fracRes: 0.7563, norm(attn): 0.2031, norm(output): 2.2500, norm(x): 0.4062, norm(y): 0.9481, norm:0.5901, tok/sec: 124372.14, flops:96.86, batch-reuse:1
@ 4127 train 4.5091 , allloss: 4.5102, dt: 1067.39ms, fracRes: 0.7557, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4055, norm(y): 0.9483, norm:0.6051, tok/sec: 122796.65, flops:95.63, batch-reuse:1
@ 4128 train 4.3972 , allloss: 4.3983, dt: 1055.88ms, fracRes: 0.7528, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4115, norm(y): 0.9485, norm:0.6014, tok/sec: 124135.56, flops:96.68, batch-reuse:1
@ 4129 train 4.4373 , allloss: 4.4384, dt: 1062.44ms, fracRes: 0.7541, norm(attn): 0.2031, norm(output): 2.2500, norm(x): 0.4099, norm(y): 0.9484, norm:0.6398, tok/sec: 123368.94, flops:96.08, batch-reuse:1
@ 4130 train 4.5885 , allloss: 4.5898, dt: 1060.80ms, fracRes: 0.7547, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4055, norm(y): 0.9481, norm:0.5688, tok/sec: 123559.21, flops:96.23, batch-reuse:1
@ 4131 train 4.4062 , allloss: 4.4074, dt: 1053.01ms, fracRes: 0.7541, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4062, norm(y): 0.9484, norm:0.6238, tok/sec: 124473.46, flops:96.94, batch-reuse:1
@ 4132 train 4.4368 , allloss: 4.4381, dt: 1052.08ms, fracRes: 0.7545, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4065, norm(y): 0.9481, norm:0.7386, tok/sec: 124583.21, flops:97.03, batch-reuse:1
@ 4133 train 4.4611 , allloss: 4.4622, dt: 1070.57ms, fracRes: 0.7545, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4051, norm(y): 0.9481, norm:0.6485, tok/sec: 122431.98, flops:95.35, batch-reuse:1
@ 4134 train 4.5559 , allloss: 4.5572, dt: 1067.20ms, fracRes: 0.7549, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4025, norm(y): 0.9481, norm:0.6494, tok/sec: 122818.68, flops:95.65, batch-reuse:1
@ 4135 train 4.4653 , allloss: 4.4664, dt: 1068.78ms, fracRes: 0.7536, norm(attn): 0.2021, norm(output): 2.2656, norm(x): 0.4077, norm(y): 0.9482, norm:0.6167, tok/sec: 122637.50, flops:95.51, batch-reuse:1
@ 4136 train 4.5287 , allloss: 4.5302, dt: 1068.47ms, fracRes: 0.7557, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4027, norm(y): 0.9479, norm:0.7034, tok/sec: 122672.44, flops:95.54, batch-reuse:1
@ 4137 train 4.4538 , allloss: 4.4551, dt: 1066.49ms, fracRes: 0.7534, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4101, norm(y): 0.9483, norm:0.7187, tok/sec: 122900.36, flops:95.72, batch-reuse:1
@ 4138 train 4.5443 , allloss: 4.5458, dt: 1050.29ms, fracRes: 0.7541, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4082, norm(y): 0.9482, norm:0.6611, tok/sec: 124795.63, flops:97.19, batch-reuse:1
@ 4139 train 4.4823 , allloss: 4.4837, dt: 1088.07ms, fracRes: 0.7551, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4059, norm(y): 0.9480, norm:0.6657, tok/sec: 120463.03, flops:93.82, batch-reuse:1
@ 4140 train 4.6293 , allloss: 4.6309, dt: 1051.25ms, fracRes: 0.7554, norm(attn): 0.2012, norm(output): 2.2812, norm(x): 0.4068, norm(y): 0.9479, norm:0.6854, tok/sec: 124682.53, flops:97.10, batch-reuse:1
@ 4141 train 4.4758 , allloss: 4.4770, dt: 1056.59ms, fracRes: 0.7536, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4105, norm(y): 0.9481, norm:0.6052, tok/sec: 124051.53, flops:96.61, batch-reuse:1
@ 4142 train 4.4341 , allloss: 4.4353, dt: 1055.26ms, fracRes: 0.7535, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4101, norm(y): 0.9483, norm:0.7005, tok/sec: 124207.89, flops:96.73, batch-reuse:1
@ 4143 train 4.4915 , allloss: 4.4926, dt: 1047.97ms, fracRes: 0.7544, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4105, norm(y): 0.9483, norm:0.5735, tok/sec: 125072.05, flops:97.41, batch-reuse:1
@ 4144 train 4.4960 , allloss: 4.4972, dt: 1046.77ms, fracRes: 0.7552, norm(attn): 0.2031, norm(output): 2.2500, norm(x): 0.4093, norm(y): 0.9482, norm:0.6023, tok/sec: 125215.31, flops:97.52, batch-reuse:1
@ 4145 train 4.3978 , allloss: 4.3989, dt: 1046.26ms, fracRes: 0.7551, norm(attn): 0.2031, norm(output): 2.2500, norm(x): 0.4096, norm(y): 0.9479, norm:0.7352, tok/sec: 125277.00, flops:97.57, batch-reuse:1
@ 4146 train 4.4653 , allloss: 4.4664, dt: 1057.94ms, fracRes: 0.7552, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4075, norm(y): 0.9480, norm:0.7435, tok/sec: 123893.05, flops:96.49, batch-reuse:1
@ 4147 train 4.7269 , allloss: 4.7287, dt: 1050.00ms, fracRes: 0.7534, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4066, norm(y): 0.9478, norm:0.8523, tok/sec: 124830.20, flops:97.22, batch-reuse:1
@ 4148 train 4.5150 , allloss: 4.5162, dt: 1047.69ms, fracRes: 0.7539, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4084, norm(y): 0.9480, norm:1.0165, tok/sec: 125105.86, flops:97.43, batch-reuse:1
@ 4149 train 4.5280 , allloss: 4.5291, dt: 1068.38ms, fracRes: 0.7546, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4098, norm(y): 0.9480, norm:0.8686, tok/sec: 122683.06, flops:95.55, batch-reuse:1
@ 4150 train 4.4101 , allloss: 4.4111, dt: 1056.44ms, fracRes: 0.7532, norm(attn): 0.2031, norm(output): 2.3125, norm(x): 0.4176, norm(y): 0.9482, norm:0.9322, tok/sec: 124069.73, flops:96.63, batch-reuse:1
@ 4151 train 4.4529 , allloss: 4.4541, dt: 1062.92ms, fracRes: 0.7550, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4087, norm(y): 0.9478, norm:0.7964, tok/sec: 123312.71, flops:96.04, batch-reuse:1
@ 4152 train 4.4119 , allloss: 4.4131, dt: 1052.66ms, fracRes: 0.7567, norm(attn): 0.2012, norm(output): 2.2188, norm(x): 0.4047, norm(y): 0.9478, norm:0.7266, tok/sec: 124515.60, flops:96.97, batch-reuse:1
@ 4153 train 4.3986 , allloss: 4.4000, dt: 1075.00ms, fracRes: 0.7589, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4017, norm(y): 0.9476, norm:0.8342, tok/sec: 121927.82, flops:94.96, batch-reuse:1
@ 4154 train 4.4872 , allloss: 4.4886, dt: 1054.09ms, fracRes: 0.7572, norm(attn): 0.2002, norm(output): 2.2344, norm(x): 0.4010, norm(y): 0.9475, norm:0.6473, tok/sec: 124346.43, flops:96.84, batch-reuse:1
@ 4155 train 4.4732 , allloss: 4.4745, dt: 1132.21ms, fracRes: 0.7558, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4063, norm(y): 0.9478, norm:0.8102, tok/sec: 115766.17, flops:90.16, batch-reuse:1
@ 4156 train 4.4467 , allloss: 4.4481, dt: 1043.91ms, fracRes: 0.7544, norm(attn): 0.2012, norm(output): 2.2656, norm(x): 0.4107, norm(y): 0.9476, norm:0.7995, tok/sec: 125559.17, flops:97.79, batch-reuse:1
@ 4157 train 4.4826 , allloss: 4.4839, dt: 1052.19ms, fracRes: 0.7543, norm(attn): 0.2021, norm(output): 2.2656, norm(x): 0.4121, norm(y): 0.9477, norm:0.6381, tok/sec: 124570.68, flops:97.02, batch-reuse:1
@ 4158 train 4.3938 , allloss: 4.3952, dt: 1062.23ms, fracRes: 0.7561, norm(attn): 0.2041, norm(output): 2.2344, norm(x): 0.4034, norm(y): 0.9476, norm:0.6630, tok/sec: 123393.81, flops:96.10, batch-reuse:1
@ 4159 train 4.4897 , allloss: 4.4911, dt: 1067.46ms, fracRes: 0.7578, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4035, norm(y): 0.9474, norm:0.7768, tok/sec: 122788.78, flops:95.63, batch-reuse:1
@ 4160 train 4.5108 , allloss: 4.5119, dt: 1057.38ms, fracRes: 0.7554, norm(attn): 0.2031, norm(output): 2.2344, norm(x): 0.4035, norm(y): 0.9477, norm:0.6988, tok/sec: 123958.83, flops:96.54, batch-reuse:1
@ 4161 train 4.4110 , allloss: 4.4119, dt: 1057.86ms, fracRes: 0.7534, norm(attn): 0.2031, norm(output): 2.2500, norm(x): 0.4114, norm(y): 0.9481, norm:0.6346, tok/sec: 123902.57, flops:96.50, batch-reuse:1
@ 4162 train 4.4433 , allloss: 4.4444, dt: 1058.65ms, fracRes: 0.7559, norm(attn): 0.2021, norm(output): 2.2344, norm(x): 0.4035, norm(y): 0.9478, norm:0.7667, tok/sec: 123810.15, flops:96.42, batch-reuse:1
@ 4163 train 4.3789 , allloss: 4.3798, dt: 1057.53ms, fracRes: 0.7547, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4097, norm(y): 0.9479, norm:0.6442, tok/sec: 123941.56, flops:96.53, batch-reuse:1
@ 4164 train 4.4969 , allloss: 4.4979, dt: 1060.61ms, fracRes: 0.7544, norm(attn): 0.2012, norm(output): 2.2500, norm(x): 0.4069, norm(y): 0.9477, norm:0.7292, tok/sec: 123581.62, flops:96.25, batch-reuse:1
@ 4165 train 4.4542 , allloss: 4.4554, dt: 1057.40ms, fracRes: 0.7532, norm(attn): 0.2021, norm(output): 2.2500, norm(x): 0.4100, norm(y): 0.9477, norm:0.8037, tok/sec: 123957.44, flops:96.54, batch-reuse:1
@ 4166 train 4.4536 , allloss: 4.4545, dt: 1059.42ms, fracRes: 0.7543, norm(attn): 0.2002, norm(output): 2.2656, norm(x): 0.4074, norm(y): 0.9477, norm:0.6344, tok/sec: 123720.68, flops:96.35, batch-reuse:1
@ 4167 train 4.3706 , allloss: 4.3714, dt: 1062.48ms, fracRes: 0.7515, norm(attn): 0.2021, norm(output): 2.2812, norm(x): 0.4156, norm(y): 0.9481, norm:0.6475, tok/sec: 123363.90, flops:96.08, batch-reuse:1
@ 4168 train 4.3684 , allloss: 4.3693, dt: 1047.52ms, fracRes: 0.7535, norm(attn): 0.2021, norm(output): 2.2656, norm(x): 0.4109, norm(y): 0.9479, norm:0.6739, tok/sec: 125125.94, flops:97.45, batch-reuse:1
@ 4169 train 4.4166 , allloss: 4.4176, dt: 1048.24ms, fracRes: 0.7549, norm(attn): 0.2031, norm(output): 2.2500, norm(x): 0.4067, norm(y): 0.9477, norm:0.6903, tok/sec: 125039.73, flops:97.38, batch-reuse:1
@ 4170 train 4.3957 , allloss: 4.3967, dt: 1050.00ms, fracRes: 0.7537, norm(attn): 0.2041, norm(output): 2.2969, norm(x): 0.4158, norm(y): 0.9478, norm:0.6868, tok/sec: 124829.89, flops:97.22, batch-reuse:1
@ 4171 train 4.3585 , allloss: 4.3595, dt: 1057.63ms, fracRes: 0.7544, norm(attn): 0.2041, norm(output): 2.2969, norm(x): 0.4169, norm(y): 0.9477, norm:0.6202, tok/sec: 123929.94, flops:96.52, batch-reuse:1
@ 4172 train 4.3926 , allloss: 4.3936, dt: 1047.02ms, fracRes: 0.7540, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4147, norm(y): 0.9478, norm:0.6451, tok/sec: 125186.17, flops:97.50, batch-reuse:1
@ 4173 train 4.3362 , allloss: 4.3373, dt: 1057.38ms, fracRes: 0.7520, norm(attn): 0.2051, norm(output): 2.2812, norm(x): 0.4177, norm(y): 0.9478, norm:0.7139, tok/sec: 123959.76, flops:96.54, batch-reuse:1
@ 4174 train 4.3720 , allloss: 4.3731, dt: 1061.36ms, fracRes: 0.7532, norm(attn): 0.2031, norm(output): 2.2812, norm(x): 0.4141, norm(y): 0.9477, norm:0.5759, tok/sec: 123494.84, flops:96.18, batch-reuse:1
@ 4175 train 4.3600 , allloss: 4.3609, dt: 1052.05ms, fracRes: 0.7528, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4158, norm(y): 0.9477, norm:0.6509, tok/sec: 124587.31, flops:97.03, batch-reuse:1
@ 4176 train 4.3834 , allloss: 4.8956, dt: 1047.79ms, fracRes: 0.7531, norm(attn): 0.2109, norm(output): 2.3594, norm(x): 0.5083, norm(y): 0.9477, norm:292.1790, tok/sec: 125094.19, flops:97.42, batch-reuse:1
@ 4177 train 4.3551 , allloss: 4.3562, dt: 1059.07ms, fracRes: 0.7521, norm(attn): 0.2061, norm(output): 2.3281, norm(x): 0.4218, norm(y): 0.9479, norm:1.2210, tok/sec: 123761.23, flops:96.39, batch-reuse:1
@ 4178 train 4.4485 , allloss: 4.4496, dt: 1045.52ms, fracRes: 0.7539, norm(attn): 0.2041, norm(output): 2.2500, norm(x): 0.4126, norm(y): 0.9477, norm:0.8455, tok/sec: 125365.13, flops:97.63, batch-reuse:1
@ 4179 train 4.4021 , allloss: 4.4031, dt: 1063.39ms, fracRes: 0.7535, norm(attn): 0.2031, norm(output): 2.2812, norm(x): 0.4160, norm(y): 0.9477, norm:0.7518, tok/sec: 123258.96, flops:95.99, batch-reuse:1
@ 4180 train 4.3728 , allloss: 4.3738, dt: 1049.24ms, fracRes: 0.7541, norm(attn): 0.2041, norm(output): 2.2812, norm(x): 0.4143, norm(y): 0.9476, norm:0.6177, tok/sec: 124921.19, flops:97.29, batch-reuse:1
@ 4181 train 4.3858 , allloss: 4.3871, dt: 1055.45ms, fracRes: 0.7524, norm(attn): 0.2031, norm(output): 2.2812, norm(x): 0.4180, norm(y): 0.9475, norm:0.7778, tok/sec: 124186.46, flops:96.72, batch-reuse:1
@ 4182 train 4.3296 , allloss: 4.3309, dt: 1043.76ms, fracRes: 0.7519, norm(attn): 0.2041, norm(output): 2.2812, norm(x): 0.4196, norm(y): 0.9477, norm:0.6861, tok/sec: 125576.55, flops:97.80, batch-reuse:1
@ 4183 train 4.3948 , allloss: 4.3962, dt: 1062.07ms, fracRes: 0.7540, norm(attn): 0.2041, norm(output): 2.2812, norm(x): 0.4150, norm(y): 0.9471, norm:0.8574, tok/sec: 123412.39, flops:96.11, batch-reuse:1
@ 4184 train 4.3930 , allloss: 4.3945, dt: 1057.88ms, fracRes: 0.7529, norm(attn): 0.2041, norm(output): 2.2812, norm(x): 0.4175, norm(y): 0.9475, norm:0.7516, tok/sec: 123901.14, flops:96.49, batch-reuse:1
@ 4185 train 4.3908 , allloss: 4.3920, dt: 1067.94ms, fracRes: 0.7532, norm(attn): 0.2041, norm(output): 2.2969, norm(x): 0.4181, norm(y): 0.9474, norm:0.6242, tok/sec: 122733.38, flops:95.59, batch-reuse:1
@ 4186 train 4.4843 , allloss: 4.4854, dt: 1069.25ms, fracRes: 0.7566, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4088, norm(y): 0.9473, norm:0.6460, tok/sec: 122582.75, flops:95.47, batch-reuse:1
@ 4187 train 4.3914 , allloss: 4.3927, dt: 1051.96ms, fracRes: 0.7569, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4072, norm(y): 0.9473, norm:0.6089, tok/sec: 124597.75, flops:97.04, batch-reuse:1
@ 4188 train 4.3894 , allloss: 4.3904, dt: 1058.59ms, fracRes: 0.7527, norm(attn): 0.2051, norm(output): 2.2969, norm(x): 0.4204, norm(y): 0.9475, norm:0.6992, tok/sec: 123817.18, flops:96.43, batch-reuse:1
@ 4189 train 4.3335 , allloss: 4.3345, dt: 1058.76ms, fracRes: 0.7526, norm(attn): 0.2031, norm(output): 2.2812, norm(x): 0.4161, norm(y): 0.9475, norm:0.6734, tok/sec: 123797.74, flops:96.41, batch-reuse:1
@ 4190 train 4.3375 , allloss: 4.3386, dt: 1051.22ms, fracRes: 0.7553, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4086, norm(y): 0.9472, norm:0.7029, tok/sec: 124685.75, flops:97.11, batch-reuse:1
@ 4191 train 4.3478 , allloss: 4.3488, dt: 1047.06ms, fracRes: 0.7550, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4106, norm(y): 0.9472, norm:0.6987, tok/sec: 125180.72, flops:97.49, batch-reuse:1
@ 4192 train 4.3469 , allloss: 4.3482, dt: 1042.69ms, fracRes: 0.7551, norm(attn): 0.2031, norm(output): 2.2969, norm(x): 0.4146, norm(y): 0.9472, norm:0.5716, tok/sec: 125705.45, flops:97.90, batch-reuse:1
@ 4193 train 4.3597 , allloss: 4.3609, dt: 1046.95ms, fracRes: 0.7545, norm(attn): 0.2041, norm(output): 2.2812, norm(x): 0.4156, norm(y): 0.9473, norm:0.6925, tok/sec: 125194.47, flops:97.50, batch-reuse:1
@ 4194 train 4.2926 , allloss: 4.2942, dt: 1060.52ms, fracRes: 0.7567, norm(attn): 0.2041, norm(output): 2.2500, norm(x): 0.4083, norm(y): 0.9469, norm:0.6720, tok/sec: 123591.82, flops:96.25, batch-reuse:1
@ 4195 train 4.3068 , allloss: 4.3079, dt: 1061.50ms, fracRes: 0.7527, norm(attn): 0.2061, norm(output): 2.2969, norm(x): 0.4190, norm(y): 0.9474, norm:0.7057, tok/sec: 123478.06, flops:96.17, batch-reuse:1
@ 4196 train 4.4441 , allloss: 4.4451, dt: 1053.37ms, fracRes: 0.7532, norm(attn): 0.2031, norm(output): 2.3125, norm(x): 0.4186, norm(y): 0.9474, norm:0.7555, tok/sec: 124430.80, flops:96.91, batch-reuse:1
@ 4197 train 4.3411 , allloss: 4.3422, dt: 1062.44ms, fracRes: 0.7531, norm(attn): 0.2031, norm(output): 2.3281, norm(x): 0.4215, norm(y): 0.9472, norm:0.6685, tok/sec: 123369.22, flops:96.08, batch-reuse:1
@ 4198 train 4.4096 , allloss: 4.4106, dt: 1056.50ms, fracRes: 0.7525, norm(attn): 0.2031, norm(output): 2.3125, norm(x): 0.4210, norm(y): 0.9472, norm:0.6809, tok/sec: 124061.97, flops:96.62, batch-reuse:1
@ 4199 train 4.4466 , allloss: 4.4480, dt: 1071.66ms, fracRes: 0.7555, norm(attn): 0.2012, norm(output): 2.3281, norm(x): 0.4137, norm(y): 0.9468, norm:0.6355, tok/sec: 122307.23, flops:95.25, batch-reuse:1
@ 4200 train 4.5242 , allloss: 4.5251, dt: 1067.38ms, fracRes: 0.7563, norm(attn): 0.2002, norm(output): 2.2969, norm(x): 0.4120, norm(y): 0.9471, norm:0.6381, tok/sec: 122798.10, flops:95.64, batch-reuse:1
@ 4201 train 4.3516 , allloss: 4.3524, dt: 1068.54ms, fracRes: 0.7545, norm(attn): 0.2031, norm(output): 2.3438, norm(x): 0.4189, norm(y): 0.9473, norm:0.6926, tok/sec: 122664.42, flops:95.53, batch-reuse:1
@ 4202 train 4.3844 , allloss: 4.3855, dt: 1052.56ms, fracRes: 0.7550, norm(attn): 0.2031, norm(output): 2.3125, norm(x): 0.4173, norm(y): 0.9471, norm:0.7711, tok/sec: 124526.60, flops:96.98, batch-reuse:1
@ 4203 train 4.3090 , allloss: 4.3108, dt: 1063.93ms, fracRes: 0.7602, norm(attn): 0.2031, norm(output): 2.2656, norm(x): 0.4009, norm(y): 0.9465, norm:1.0459, tok/sec: 123196.15, flops:95.95, batch-reuse:1
@ 4204 train 4.4413 , allloss: 4.4430, dt: 1059.34ms, fracRes: 0.7576, norm(attn): 0.2021, norm(output): 2.2656, norm(x): 0.4034, norm(y): 0.9468, norm:0.6583, tok/sec: 123730.20, flops:96.36, batch-reuse:1
@ 4205 train 4.3124 , allloss: 4.3136, dt: 1050.06ms, fracRes: 0.7527, norm(attn): 0.2051, norm(output): 2.3125, norm(x): 0.4162, norm(y): 0.9473, norm:0.6152, tok/sec: 124822.94, flops:97.21, batch-reuse:1
@ 4206 train 4.4019 , allloss: 4.4029, dt: 1060.13ms, fracRes: 0.7519, norm(attn): 0.2041, norm(output): 2.3438, norm(x): 0.4214, norm(y): 0.9475, norm:0.6041, tok/sec: 123637.60, flops:96.29, batch-reuse:1
@ 4207 train 4.4723 , allloss: 4.4733, dt: 1050.54ms, fracRes: 0.7533, norm(attn): 0.2031, norm(output): 2.3125, norm(x): 0.4177, norm(y): 0.9469, norm:0.6287, tok/sec: 124766.82, flops:97.17, batch-reuse:1
@ 4208 train 4.3569 , allloss: 4.3578, dt: 1056.70ms, fracRes: 0.7531, norm(attn): 0.2031, norm(output): 2.2969, norm(x): 0.4186, norm(y): 0.9471, norm:0.6520, tok/sec: 124038.57, flops:96.60, batch-reuse:1
@ 4209 train 4.4266 , allloss: 4.4275, dt: 1056.90ms, fracRes: 0.7534, norm(attn): 0.2041, norm(output): 2.3125, norm(x): 0.4213, norm(y): 0.9470, norm:0.5522, tok/sec: 124015.23, flops:96.58, batch-reuse:1
@ 4210 train 4.5386 , allloss: 4.5400, dt: 1046.41ms, fracRes: 0.7551, norm(attn): 0.2021, norm(output): 2.3281, norm(x): 0.4175, norm(y): 0.9466, norm:0.6384, tok/sec: 125259.30, flops:97.55, batch-reuse:1
@ 4211 train 4.2843 , allloss: 4.2852, dt: 1043.74ms, fracRes: 0.7531, norm(attn): 0.2031, norm(output): 2.3281, norm(x): 0.4227, norm(y): 0.9471, norm:0.7560, tok/sec: 125579.62, flops:97.80, batch-reuse:1
@ 4212 train 4.3410 , allloss: 4.3421, dt: 1052.81ms, fracRes: 0.7524, norm(attn): 0.2051, norm(output): 2.3281, norm(x): 0.4235, norm(y): 0.9472, norm:0.5940, tok/sec: 124496.82, flops:96.96, batch-reuse:1
@ 4213 train 4.2287 , allloss: 4.2297, dt: 1049.68ms, fracRes: 0.7534, norm(attn): 0.2041, norm(output): 2.3125, norm(x): 0.4188, norm(y): 0.9471, norm:0.7454, tok/sec: 124868.59, flops:97.25, batch-reuse:1
@ 4214 train 4.2828 , allloss: 4.2840, dt: 1041.27ms, fracRes: 0.7528, norm(attn): 0.2041, norm(output): 2.2969, norm(x): 0.4203, norm(y): 0.9472, norm:1.0128, tok/sec: 125876.53, flops:98.03, batch-reuse:1
@ 4215 train 4.2973 , allloss: 4.2984, dt: 1048.83ms, fracRes: 0.7530, norm(attn): 0.2041, norm(output): 2.3125, norm(x): 0.4222, norm(y): 0.9470, norm:0.7670, tok/sec: 124969.53, flops:97.33, batch-reuse:1
@ 4216 train 4.2685 , allloss: 4.2694, dt: 1047.64ms, fracRes: 0.7531, norm(attn): 0.2031, norm(output): 2.3438, norm(x): 0.4228, norm(y): 0.9469, norm:0.6205, tok/sec: 125111.73, flops:97.44, batch-reuse:1
@ 4217 train 4.2842 , allloss: 4.2851, dt: 1062.58ms, fracRes: 0.7521, norm(attn): 0.2041, norm(output): 2.3594, norm(x): 0.4248, norm(y): 0.9471, norm:0.6025, tok/sec: 123352.67, flops:96.07, batch-reuse:1
@ 4218 train 4.2360 , allloss: 4.2368, dt: 1059.60ms, fracRes: 0.7521, norm(attn): 0.2041, norm(output): 2.3438, norm(x): 0.4232, norm(y): 0.9471, norm:0.5984, tok/sec: 123699.02, flops:96.34, batch-reuse:1
@ 4219 train 4.3298 , allloss: 4.3305, dt: 1046.67ms, fracRes: 0.7529, norm(attn): 0.2031, norm(output): 2.3438, norm(x): 0.4231, norm(y): 0.9469, norm:0.6389, tok/sec: 125227.43, flops:97.53, batch-reuse:1
@ 4220 train 4.2573 , allloss: 4.2582, dt: 1057.09ms, fracRes: 0.7547, norm(attn): 0.2031, norm(output): 2.3125, norm(x): 0.4171, norm(y): 0.9469, norm:0.6665, tok/sec: 123993.67, flops:96.57, batch-reuse:1
@ 4221 train 4.3747 , allloss: 4.3757, dt: 1064.43ms, fracRes: 0.7526, norm(attn): 0.2031, norm(output): 2.3750, norm(x): 0.4236, norm(y): 0.9469, norm:0.5808, tok/sec: 123138.56, flops:95.90, batch-reuse:1
@ 4222 train 4.2005 , allloss: 4.2012, dt: 1084.33ms, fracRes: 0.7513, norm(attn): 0.2041, norm(output): 2.3438, norm(x): 0.4263, norm(y): 0.9470, norm:0.7156, tok/sec: 120878.37, flops:94.14, batch-reuse:1
@ 4223 train 4.3716 , allloss: 4.3732, dt: 1047.28ms, fracRes: 0.7590, norm(attn): 0.2021, norm(output): 2.3125, norm(x): 0.4064, norm(y): 0.9466, norm:0.8113, tok/sec: 125154.51, flops:97.47, batch-reuse:1
@ 4224 train 4.1707 , allloss: 4.1718, dt: 1051.40ms, fracRes: 0.7539, norm(attn): 0.2041, norm(output): 2.3281, norm(x): 0.4202, norm(y): 0.9469, norm:0.6025, tok/sec: 124664.21, flops:97.09, batch-reuse:1
@ 4225 train 4.3168 , allloss: 4.3178, dt: 1049.57ms, fracRes: 0.7535, norm(attn): 0.2051, norm(output): 2.3125, norm(x): 0.4217, norm(y): 0.9470, norm:0.7312, tok/sec: 124882.18, flops:97.26, batch-reuse:1
@ 4226 train 4.3760 , allloss: 4.3775, dt: 1048.82ms, fracRes: 0.7560, norm(attn): 0.2041, norm(output): 2.3125, norm(x): 0.4144, norm(y): 0.9464, norm:0.6873, tok/sec: 124971.17, flops:97.33, batch-reuse:1
@ 4227 train 4.3135 , allloss: 4.3147, dt: 1063.98ms, fracRes: 0.7537, norm(attn): 0.2041, norm(output): 2.3281, norm(x): 0.4193, norm(y): 0.9467, norm:0.6557, tok/sec: 123189.89, flops:95.94, batch-reuse:1
@ 4228 train 4.5437 , allloss: 4.5453, dt: 1058.51ms, fracRes: 0.7548, norm(attn): 0.2031, norm(output): 2.3125, norm(x): 0.4148, norm(y): 0.9464, norm:0.8396, tok/sec: 123826.99, flops:96.44, batch-reuse:1
@ 4229 train 4.4171 , allloss: 4.4187, dt: 1064.74ms, fracRes: 0.7549, norm(attn): 0.2051, norm(output): 2.2969, norm(x): 0.4140, norm(y): 0.9463, norm:1.0327, tok/sec: 123101.89, flops:95.87, batch-reuse:1
@ 4230 train 4.2838 , allloss: 4.2847, dt: 1047.11ms, fracRes: 0.7521, norm(attn): 0.2051, norm(output): 2.3594, norm(x): 0.4283, norm(y): 0.9469, norm:0.7037, tok/sec: 125175.51, flops:97.49, batch-reuse:1
@ 4231 train 4.2814 , allloss: 4.2822, dt: 1043.72ms, fracRes: 0.7533, norm(attn): 0.2031, norm(output): 2.3750, norm(x): 0.4271, norm(y): 0.9467, norm:0.7383, tok/sec: 125581.00, flops:97.80, batch-reuse:1
@ 4232 train 4.3556 , allloss: 4.3564, dt: 1059.94ms, fracRes: 0.7531, norm(attn): 0.2041, norm(output): 2.3438, norm(x): 0.4233, norm(y): 0.9468, norm:0.6953, tok/sec: 123659.43, flops:96.31, batch-reuse:1
@ 4233 train 4.3626 , allloss: 4.3636, dt: 1071.02ms, fracRes: 0.7539, norm(attn): 0.2051, norm(output): 2.3594, norm(x): 0.4243, norm(y): 0.9466, norm:0.8176, tok/sec: 122380.68, flops:95.31, batch-reuse:1
@ 4234 train 4.3367 , allloss: 4.3377, dt: 1053.22ms, fracRes: 0.7530, norm(attn): 0.2031, norm(output): 2.3594, norm(x): 0.4240, norm(y): 0.9466, norm:0.8822, tok/sec: 124449.11, flops:96.92, batch-reuse:1
@ 4235 train 4.3291 , allloss: 4.3300, dt: 1057.38ms, fracRes: 0.7516, norm(attn): 0.2051, norm(output): 2.3438, norm(x): 0.4283, norm(y): 0.9467, norm:0.9513, tok/sec: 123958.92, flops:96.54, batch-reuse:1
@ 4236 train 4.4446 , allloss: 4.4454, dt: 1061.56ms, fracRes: 0.7551, norm(attn): 0.2021, norm(output): 2.3125, norm(x): 0.4135, norm(y): 0.9465, norm:0.9151, tok/sec: 123471.32, flops:96.16, batch-reuse:1
@ 4237 train 4.3173 , allloss: 4.3183, dt: 1059.81ms, fracRes: 0.7551, norm(attn): 0.2031, norm(output): 2.3281, norm(x): 0.4178, norm(y): 0.9464, norm:0.7781, tok/sec: 123675.23, flops:96.32, batch-reuse:1
@ 4238 train 4.3631 , allloss: 4.3641, dt: 1057.91ms, fracRes: 0.7541, norm(attn): 0.2041, norm(output): 2.3750, norm(x): 0.4251, norm(y): 0.9465, norm:0.8340, tok/sec: 123896.70, flops:96.49, batch-reuse:1
@ 4239 train 4.2853 , allloss: 4.2864, dt: 1062.54ms, fracRes: 0.7517, norm(attn): 0.2051, norm(output): 2.3750, norm(x): 0.4301, norm(y): 0.9469, norm:0.6722, tok/sec: 123356.98, flops:96.07, batch-reuse:1
@ 4240 train 4.3293 , allloss: 4.3303, dt: 1051.87ms, fracRes: 0.7527, norm(attn): 0.2051, norm(output): 2.3438, norm(x): 0.4217, norm(y): 0.9466, norm:0.6718, tok/sec: 124608.12, flops:97.05, batch-reuse:1
@ 4241 train 4.3544 , allloss: 4.3555, dt: 1066.55ms, fracRes: 0.7542, norm(attn): 0.2041, norm(output): 2.3125, norm(x): 0.4166, norm(y): 0.9464, norm:0.6270, tok/sec: 122893.82, flops:95.71, batch-reuse:1
@ 4242 train 4.4660 , allloss: 4.4673, dt: 1049.68ms, fracRes: 0.7521, norm(attn): 0.2070, norm(output): 2.4219, norm(x): 0.4302, norm(y): 0.9467, norm:0.6882, tok/sec: 124868.39, flops:97.25, batch-reuse:1
@ 4243 train 4.2733 , allloss: 4.2745, dt: 1058.18ms, fracRes: 0.7535, norm(attn): 0.2041, norm(output): 2.3594, norm(x): 0.4244, norm(y): 0.9467, norm:0.7591, tok/sec: 123865.21, flops:96.47, batch-reuse:1
@ 4244 train 4.1334 , allloss: 4.1345, dt: 1053.34ms, fracRes: 0.7524, norm(attn): 0.2070, norm(output): 2.3594, norm(x): 0.4296, norm(y): 0.9468, norm:0.6985, tok/sec: 124434.18, flops:96.91, batch-reuse:1
@ 4245 train 4.2351 , allloss: 4.2366, dt: 1042.15ms, fracRes: 0.7521, norm(attn): 0.2080, norm(output): 2.3438, norm(x): 0.4330, norm(y): 0.9469, norm:0.6457, tok/sec: 125771.31, flops:97.95, batch-reuse:1
@ 4246 train 4.5787 , allloss: 4.5800, dt: 1059.51ms, fracRes: 0.7532, norm(attn): 0.2070, norm(output): 2.3594, norm(x): 0.4311, norm(y): 0.9465, norm:0.9555, tok/sec: 123710.35, flops:96.35, batch-reuse:1
@ 4247 train 4.3565 , allloss: 4.3583, dt: 1052.22ms, fracRes: 0.7511, norm(attn): 0.2070, norm(output): 2.3438, norm(x): 0.4373, norm(y): 0.9466, norm:0.8902, tok/sec: 124567.32, flops:97.01, batch-reuse:1
@ 4248 train 4.3580 , allloss: 4.3593, dt: 1060.08ms, fracRes: 0.7546, norm(attn): 0.2051, norm(output): 2.3438, norm(x): 0.4275, norm(y): 0.9465, norm:0.6719, tok/sec: 123643.80, flops:96.29, batch-reuse:1
@ 4249 train 4.3125 , allloss: 4.3137, dt: 1049.15ms, fracRes: 0.7535, norm(attn): 0.2061, norm(output): 2.3594, norm(x): 0.4301, norm(y): 0.9467, norm:0.6765, tok/sec: 124931.84, flops:97.30, batch-reuse:1
@ 4250 train 4.2394 , allloss: 4.2409, dt: 1057.50ms, fracRes: 0.7542, norm(attn): 0.2051, norm(output): 2.3594, norm(x): 0.4244, norm(y): 0.9466, norm:0.7207, tok/sec: 123945.22, flops:96.53, batch-reuse:1
@ 4251 train 4.3511 , allloss: 4.3524, dt: 1054.35ms, fracRes: 0.7539, norm(attn): 0.2031, norm(output): 2.3281, norm(x): 0.4246, norm(y): 0.9463, norm:0.6476, tok/sec: 124315.33, flops:96.82, batch-reuse:1
@ 4252 train 4.1804 , allloss: 4.1815, dt: 1065.28ms, fracRes: 0.7535, norm(attn): 0.2041, norm(output): 2.3438, norm(x): 0.4280, norm(y): 0.9466, norm:0.6011, tok/sec: 123040.29, flops:95.82, batch-reuse:1
@ 4253 train 4.2493 , allloss: 4.2504, dt: 1058.62ms, fracRes: 0.7525, norm(attn): 0.2041, norm(output): 2.3594, norm(x): 0.4286, norm(y): 0.9469, norm:0.5826, tok/sec: 123813.50, flops:96.43, batch-reuse:1
@ 4254 train 4.3215 , allloss: 4.3227, dt: 1064.27ms, fracRes: 0.7535, norm(attn): 0.2041, norm(output): 2.3438, norm(x): 0.4285, norm(y): 0.9464, norm:0.5998, tok/sec: 123157.10, flops:95.92, batch-reuse:1
@ 4255 train 4.2631 , allloss: 4.2644, dt: 1056.69ms, fracRes: 0.7526, norm(attn): 0.2041, norm(output): 2.3750, norm(x): 0.4275, norm(y): 0.9464, norm:0.7346, tok/sec: 124039.66, flops:96.60, batch-reuse:1
@ 4256 train 4.2137 , allloss: 4.2155, dt: 1054.78ms, fracRes: 0.7556, norm(attn): 0.2041, norm(output): 2.3438, norm(x): 0.4202, norm(y): 0.9460, norm:1.1732, tok/sec: 124264.33, flops:96.78, batch-reuse:1
@ 4257 train 4.2197 , allloss: 4.2206, dt: 1049.06ms, fracRes: 0.7535, norm(attn): 0.2031, norm(output): 2.3438, norm(x): 0.4273, norm(y): 0.9463, norm:0.6241, tok/sec: 124942.77, flops:97.31, batch-reuse:1
@ 4258 train 4.3601 , allloss: 4.3614, dt: 1052.63ms, fracRes: 0.7534, norm(attn): 0.2031, norm(output): 2.3438, norm(x): 0.4265, norm(y): 0.9463, norm:0.7311, tok/sec: 124519.02, flops:96.98, batch-reuse:1
@ 4259 train 4.3462 , allloss: 4.3473, dt: 1045.95ms, fracRes: 0.7517, norm(attn): 0.2061, norm(output): 2.3906, norm(x): 0.4340, norm(y): 0.9467, norm:0.7558, tok/sec: 125313.35, flops:97.59, batch-reuse:1
@ 4260 train 4.4254 , allloss: 4.4265, dt: 1060.34ms, fracRes: 0.7532, norm(attn): 0.2041, norm(output): 2.3438, norm(x): 0.4282, norm(y): 0.9464, norm:0.7188, tok/sec: 123612.74, flops:96.27, batch-reuse:1
@ 4261 train 4.5757 , allloss: 4.5772, dt: 1046.39ms, fracRes: 0.7541, norm(attn): 0.2041, norm(output): 2.3594, norm(x): 0.4230, norm(y): 0.9460, norm:0.6121, tok/sec: 125260.70, flops:97.55, batch-reuse:1
@ 4262 train 4.4395 , allloss: 4.4409, dt: 1067.15ms, fracRes: 0.7532, norm(attn): 0.2051, norm(output): 2.3438, norm(x): 0.4273, norm(y): 0.9461, norm:0.7237, tok/sec: 122824.19, flops:95.66, batch-reuse:1
@ 4263 train 4.4791 , allloss: 4.4806, dt: 1056.65ms, fracRes: 0.7525, norm(attn): 0.2041, norm(output): 2.3750, norm(x): 0.4297, norm(y): 0.9463, norm:0.6630, tok/sec: 124044.67, flops:96.61, batch-reuse:1
@ 4264 train 4.6451 , allloss: 4.6476, dt: 1059.09ms, fracRes: 0.7531, norm(attn): 0.2041, norm(output): 2.3750, norm(x): 0.4302, norm(y): 0.9460, norm:1.1214, tok/sec: 123759.03, flops:96.38, batch-reuse:1
@ 4265 train 4.5750 , allloss: 4.5767, dt: 1047.99ms, fracRes: 0.7563, norm(attn): 0.2031, norm(output): 2.3750, norm(x): 0.4200, norm(y): 0.9457, norm:0.9005, tok/sec: 125070.28, flops:97.41, batch-reuse:1
@ 4266 train 4.4485 , allloss: 4.4502, dt: 1055.11ms, fracRes: 0.7534, norm(attn): 0.2041, norm(output): 2.3906, norm(x): 0.4329, norm(y): 0.9458, norm:0.9074, tok/sec: 124226.17, flops:96.75, batch-reuse:1
@ 4267 train 4.5268 , allloss: 4.5288, dt: 1049.97ms, fracRes: 0.7559, norm(attn): 0.2021, norm(output): 2.3438, norm(x): 0.4218, norm(y): 0.9455, norm:0.8884, tok/sec: 124834.00, flops:97.22, batch-reuse:1
@ 4268 train 4.5457 , allloss: 4.5476, dt: 1056.07ms, fracRes: 0.7549, norm(attn): 0.2031, norm(output): 2.3438, norm(x): 0.4231, norm(y): 0.9459, norm:0.6949, tok/sec: 124113.51, flops:96.66, batch-reuse:1
@ 4269 train 4.5347 , allloss: 4.5376, dt: 1054.18ms, fracRes: 0.7534, norm(attn): 0.2041, norm(output): 2.3594, norm(x): 0.4288, norm(y): 0.9458, norm:0.9129, tok/sec: 124335.57, flops:96.83, batch-reuse:1
@ 4270 train 4.6560 , allloss: 4.6579, dt: 1053.62ms, fracRes: 0.7513, norm(attn): 0.2109, norm(output): 2.5312, norm(x): 0.4440, norm(y): 0.9462, norm:1.3334, tok/sec: 124402.14, flops:96.88, batch-reuse:1
@ 4271 train 4.4306 , allloss: 4.4327, dt: 1075.05ms, fracRes: 0.7539, norm(attn): 0.2041, norm(output): 2.3438, norm(x): 0.4300, norm(y): 0.9459, norm:1.2070, tok/sec: 121921.24, flops:94.95, batch-reuse:1
@ 4272 train 4.5496 , allloss: 4.5563, dt: 1050.49ms, fracRes: 0.7562, norm(attn): 0.2031, norm(output): 2.3281, norm(x): 0.4190, norm(y): 0.9457, norm:0.7441, tok/sec: 124772.35, flops:97.17, batch-reuse:1
@ 4273 train 4.5320 , allloss: 4.5352, dt: 1057.17ms, fracRes: 0.7547, norm(attn): 0.2031, norm(output): 2.3438, norm(x): 0.4266, norm(y): 0.9458, norm:0.8611, tok/sec: 123983.35, flops:96.56, batch-reuse:1
@ 4274 train 4.5122 , allloss: 4.5142, dt: 1052.73ms, fracRes: 0.7532, norm(attn): 0.2041, norm(output): 2.3750, norm(x): 0.4348, norm(y): 0.9460, norm:0.9704, tok/sec: 124506.72, flops:96.97, batch-reuse:1
@ 4275 train 4.4119 , allloss: 4.4142, dt: 1061.70ms, fracRes: 0.7541, norm(attn): 0.2051, norm(output): 2.3594, norm(x): 0.4284, norm(y): 0.9460, norm:1.0238, tok/sec: 123454.85, flops:96.15, batch-reuse:1
