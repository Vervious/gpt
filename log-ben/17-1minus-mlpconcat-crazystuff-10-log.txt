Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 17-1minus-mlpconcat-crazystuff-10
MLPSCALE: 4
Experiment description: 
```
Transformer, max LR 0.0006 n_layer 8
Setting:
==machine code======
class BenExecute(nn.Module):

    def __init__(self, config):
        super().__init__()
        self.mlp = MLPConcat(config)
        # self.ln_2 = nn.LayerNorm(config.n_embd, elementwise_affine=ELEMENTWISEAFFINE)

    
    def forward(self, program, attn):
        return self.mlp(program, attn)
==machine modules======
        self.compiler = BenCompilerNoOp(config)
        self.execute = BenExecute(config)
==block logic======
        y = self.ln_1(x)
        attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
        program = self.compiler(y)
        machineOutput = self.execute(program, attn)
        newx = xWeights * x + (1 - xWeights) * machineOutput
==loss computation======
                x, metadata = block(x,print_weights=print_weights,step=i)
                _x_total = x
                _in = x.detach()
                _x, _ = block(_in,print_weights=False) # Do again... lol
                _xtraloss = _xtraloss + (1 - F.cosine_similarity(_x, _in, dim=-1).mean())
========
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
ATTENTION_SINK=True
IDENTITY_LOSS=True
```
![caption](img/17-1minus-mlpconcat-crazystuff-10.jpg)

Warmup steps: 2000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 8, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 34, with 114,917,376 parameters
num non-decayed parameter tensors: 34, with 44,544 parameters
@ 0 train 10.9929 , allloss: 18.0081, dt: 2171.01ms, fracRes: 0.0063, norm(attn): 0.0354, norm(output): 0.0908, norm(x): 0.0819, norm(y): 0.9993, norm:13.8725, tok/sec: 60373.63, flops:47.02, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4922, 0.5078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.3008, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2363, 0.2930, 0.2393, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.1846, 0.2188, 0.1826, 0.2461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.2734, 0.1138, 0.1680, 0.1953, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.2500, 0.2520, 0.0737, 0.1001, 0.0688, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.2334, 0.1445, 0.0894, 0.1455, 0.0913, 0.1040, 0.0898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1001, 0.0771, 0.0908, 0.1416, 0.1157, 0.0786, 0.1221, 0.1396, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.1050, 0.1177, 0.0728, 0.0864, 0.0898, 0.1172, 0.1016, 0.0693, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0991, 0.1475, 0.0806, 0.0801, 0.0801, 0.1060, 0.0591, 0.0396, 0.1387, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.1196, 0.0601, 0.0938, 0.0654, 0.1240, 0.1289, 0.0820, 0.0557, 0.0679, 0.0547, 0.0757, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0713, 0.0718, 0.0747, 0.0947, 0.0908, 0.0593, 0.1030, 0.0645, 0.0718, 0.0679, 0.1055, 0.0461, 0.0000, 0.0000],
        [0.0618, 0.0442, 0.0332, 0.1226, 0.0781, 0.0527, 0.0605, 0.0654, 0.1089, 0.0488, 0.0771, 0.1260, 0.0520, 0.0684, 0.0000],
        [0.0608, 0.0767, 0.0447, 0.0645, 0.0854, 0.0742, 0.0420, 0.0908, 0.0356, 0.0483, 0.0479, 0.1533, 0.0757, 0.0493, 0.0508]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0013, -0.0221, -0.0100,  ...,  0.0010,  0.0108, -0.0228],
        [-0.0382,  0.0283, -0.0002,  ..., -0.0292, -0.0084, -0.0055],
        [ 0.0090,  0.0362, -0.0065,  ...,  0.0031, -0.0151,  0.0032],
        ...,
        [ 0.0177,  0.0030, -0.0117,  ...,  0.0107,  0.0006, -0.0123],
        [-0.0092,  0.0255,  0.0190,  ..., -0.0011, -0.0043, -0.0146],
        [ 0.0260, -0.0057,  0.0288,  ...,  0.0268,  0.0090,  0.0303]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6289, -0.4609, -0.1270, -0.7500, -0.0481,  0.1328,  0.0042, -0.2988, -0.3594, -0.2891, -0.4980,  0.3828,  0.5859, -0.7109,  0.5664, -0.8398, -0.0593, -1.3281,  0.6016,  0.8047,  0.2734, -0.6914, -0.3906,  0.2773, -0.4844, -0.1416, -0.6914, -0.6016,  1.0156,  0.2930, -0.6992, -0.3711,
         0.2812, -0.4609, -0.3359, -0.1406,  0.7617, -0.2754,  0.2197,  0.9531, -0.5312,  0.1201, -0.4941, -0.8164, -1.3281,  0.3711,  0.5977, -0.4902,  0.0518, -0.2988,  0.5938,  0.1455,  0.2715, -0.6719,  0.1982,  0.1465, -0.0957,  0.1143, -0.4160, -0.3223,  1.1953,  0.7109,  0.5078,  0.3320],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0331, -0.0058, -0.0126,  ...,  0.0204,  0.0067, -0.0250],
        [ 0.0044, -0.0160, -0.0052,  ..., -0.0133, -0.0255, -0.0298],
        [ 0.0034,  0.0037, -0.0102,  ...,  0.0219,  0.0053, -0.0051],
        ...,
        [ 0.0216,  0.0228, -0.0018,  ...,  0.0233, -0.0098, -0.0049],
        [ 0.0362, -0.0129, -0.0429,  ..., -0.0093,  0.0104,  0.0053],
        [ 0.0119,  0.0163, -0.0108,  ..., -0.0350, -0.0399, -0.0240]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3008, -0.6133,  0.0986, -0.7578,  0.2178,  1.2422, -0.9609,  0.3574,  1.9297,  0.4902,  0.2812, -0.2471, -0.4609, -0.1787, -0.8242,  1.1250, -0.2891, -0.3672,  0.8125, -0.2812,  0.2080,  0.5469,  0.5195,  0.1367, -0.2031, -0.6289,  1.5312, -0.2451, -0.5430, -0.1177, -0.1846,  0.4180,
        -0.4160,  0.1143,  0.5820, -0.2598,  0.1089, -0.2295, -1.1953, -0.7852,  0.3516, -0.2949, -0.6602,  0.2988, -0.5352,  0.3535, -0.2070,  0.0732, -1.0781, -1.3750,  1.0938,  0.2051,  0.1060, -0.3086,  0.9297,  0.3965, -0.1719, -0.5039,  0.5234,  0.0410,  0.6055, -0.1187,  0.0898, -0.3164],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0334, -0.5391,  0.7930,  0.0571, -0.1787, -0.4688,  0.3574,  0.5273, -0.2500,  0.2578,  0.3477, -0.0437,  0.4199, -0.1846],
        [ 0.0000,  0.1226,  0.4863, -0.3359,  0.0874,  0.2734, -0.3223,  0.6094,  0.2363,  0.0245, -0.0581, -0.2188, -0.0825,  0.5664,  0.1396],
        [ 0.0000,  0.2129,  0.0150, -0.0171,  0.0688, -0.0532,  0.2773, -0.0417,  0.5742, -0.5000, -0.0366, -0.3926, -0.0239, -0.0327,  0.1123],
        [ 0.0000,  0.0928,  0.2598,  0.0811,  0.3789, -0.0591, -0.2402,  0.2168,  0.1328, -0.1885, -0.4551, -0.3281, -0.5547,  0.4746, -0.6445],
        [ 0.0000,  0.6211, -0.2578,  0.1289,  0.2812, -0.3828, -0.2422, -0.1562, -0.7773,  0.1162,  0.0845,  0.4316,  0.1855, -0.3652, -0.1240],
        [ 0.0000,  0.6875,  0.6953, -0.5352, -0.2275, -0.6055,  0.0337, -0.0452, -0.4043, -0.0615, -0.1367, -0.5430,  0.3496,  0.0239, -0.0415],
        [ 0.0000,  0.8281,  0.3496, -0.1299,  0.3574, -0.1128,  0.0204, -0.1279, -0.2334, -0.0403, -0.3496, -0.5938,  0.5977,  0.1611,  0.1494],
        [ 0.0000, -0.2656, -0.0986,  0.3438,  0.1416, -0.2412,  0.1963,  0.3320,  0.2910,  0.2100,  0.4297,  0.4062, -0.5234,  0.2617,  0.3418],
        [ 0.0000, -0.0204,  0.0938, -0.3848, -0.2178, -0.1777,  0.0889, -0.0544, -0.4375,  0.2207,  0.0371, -0.0908, -0.4336, -0.2871,  0.0728],
        [ 0.0000,  0.2793,  0.6797,  0.0708,  0.0640,  0.0679,  0.3438, -0.2393, -0.6406,  0.6172,  0.2188, -0.4941,  0.2598,  0.1143,  0.0840],
        [ 0.0000,  0.5000, -0.1865,  0.2578, -0.1011,  0.5391,  0.5742,  0.1250, -0.2656, -0.0684, -0.2832,  0.0398,  0.0991,  0.0266,  0.2598],
        [ 0.0000, -0.0962, -0.0859, -0.0481,  0.1895,  0.1445, -0.2773,  0.2715, -0.1934, -0.0869, -0.1426,  0.2969, -0.5312,  0.3809, -0.5391],
        [ 0.0000, -0.3359, -0.6250,  0.6836,  0.2305, -0.1611, -0.0231,  0.0583,  0.5664, -0.2354,  0.2217,  0.7109, -0.1729,  0.1025,  0.5117],
        [ 0.0000,  0.2334, -0.3086,  0.0581,  0.3418,  0.1992, -0.3711,  0.4023, -0.5352, -0.2256, -0.2412,  0.9297,  0.2217, -0.2090, -0.1797]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4909],
        [0.3343],
        [0.2380],
        [0.1818],
        [0.1613],
        [0.1405],
        [0.1202],
        [0.1014],
        [0.0937],
        [0.0915],
        [0.0789],
        [0.0743],
        [0.0698],
        [0.0628]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4727, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3398, 0.3789, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.2344, 0.3242, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.2100, 0.2676, 0.1660, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.2578, 0.1621, 0.1855, 0.1455, 0.1094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1328, 0.2217, 0.1045, 0.2100, 0.0957, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1104, 0.1191, 0.1035, 0.0879, 0.1641, 0.1523, 0.1660, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1182, 0.1138, 0.1182, 0.1553, 0.0674, 0.0986, 0.1099, 0.0991, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.0894, 0.1201, 0.0559, 0.1631, 0.0496, 0.1494, 0.0786, 0.0879, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.0796, 0.0864, 0.1025, 0.0781, 0.0938, 0.0688, 0.1289, 0.1079, 0.1060, 0.0601, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.0767, 0.1089, 0.0469, 0.1021, 0.1021, 0.0840, 0.0649, 0.0515, 0.0986, 0.1177, 0.0664, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.0986, 0.1582, 0.0505, 0.0757, 0.0452, 0.0684, 0.0801, 0.0376, 0.0581, 0.0991, 0.0972, 0.0654, 0.0000, 0.0000],
        [0.0771, 0.1089, 0.0530, 0.0513, 0.0674, 0.0552, 0.0762, 0.0796, 0.0679, 0.0864, 0.0564, 0.0811, 0.0669, 0.0723, 0.0000],
        [0.0576, 0.1035, 0.0554, 0.0505, 0.0522, 0.0403, 0.0562, 0.0645, 0.0869, 0.0571, 0.0825, 0.0669, 0.1025, 0.0613, 0.0625]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0257, -0.0166,  0.0376,  ..., -0.0026, -0.0072, -0.0218],
        [ 0.0161, -0.0116,  0.0083,  ..., -0.0002, -0.0135, -0.0062],
        [ 0.0047,  0.0304, -0.0009,  ..., -0.0150, -0.0368,  0.0194],
        ...,
        [ 0.0219, -0.0041, -0.0066,  ...,  0.0216,  0.0259,  0.0281],
        [ 0.0251,  0.0031,  0.0164,  ...,  0.0022,  0.0029, -0.0005],
        [ 0.0113, -0.0150, -0.0105,  ...,  0.0233,  0.0066,  0.0087]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9727, -0.2578, -0.8047, -0.1650,  0.4219,  0.2373,  0.9844,  1.1172, -0.4746,  0.0143,  0.8633,  0.7148, -0.0898,  0.5000,  0.2754, -1.2109,  0.2715, -0.2314, -1.1797, -0.2031,  0.1128,  0.5586,  0.4180, -0.2930, -0.5469, -0.0095,  0.3789, -0.3945, -0.3887, -0.1846, -0.6133,  0.3945,
        -0.2041,  0.2754,  0.2002, -0.5820, -0.2871, -0.2695, -0.4023, -0.9180,  0.2617, -0.4434, -1.0078, -0.8867,  0.8047,  0.6953,  1.0000,  0.1328,  0.4473,  0.5195, -1.0625,  0.0250, -0.1196, -0.5977, -0.3477,  0.9414,  0.2080,  1.0859,  0.8672, -0.5586,  0.5508, -1.0156, -0.0270,  0.3359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0144,  0.0096, -0.0020,  ..., -0.0138,  0.0082,  0.0102],
        [ 0.0184,  0.0019,  0.0088,  ..., -0.0012, -0.0212, -0.0278],
        [ 0.0197,  0.0312,  0.0157,  ...,  0.0329,  0.0218, -0.0157],
        ...,
        [-0.0309, -0.0014, -0.0121,  ..., -0.0169, -0.0107, -0.0502],
        [-0.0196, -0.0073,  0.0143,  ...,  0.0316, -0.0326,  0.0218],
        [-0.0042,  0.0135, -0.0224,  ..., -0.0571, -0.0039, -0.0053]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1152, -0.9688,  0.9727,  0.2031, -0.3047,  0.0021,  0.4590,  0.1562, -0.2021,  0.3906, -0.1167, -0.4590,  0.3242,  0.3340, -1.1094, -0.3672, -0.0933, -0.2217,  0.0105,  0.3438,  0.2012,  1.8984,  0.6992, -0.1631,  0.4102, -0.2305,  0.4551,  0.0898,  0.9961, -0.1963,  0.4199,  0.3848,
         0.4180, -0.2305, -0.2910,  0.2432, -0.6484, -0.5898, -1.0234,  0.7031, -0.6719,  0.0713, -0.6562, -0.0150, -0.7148, -0.3945, -0.0255, -0.4453, -0.0266,  0.2598,  0.4941,  0.2314, -0.0449,  0.5469, -0.1631,  0.3359,  0.4980, -0.2100,  0.2236, -0.3789, -0.3438, -0.6953, -0.0140,  0.9492],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1079,  0.1123, -0.5117, -0.0564, -0.3574, -0.1777, -0.4082, -0.1719, -0.3184, -0.0610,  0.2988,  0.0654, -0.0977, -0.0664],
        [ 0.0000,  0.1045, -0.1934,  0.0603, -0.3086,  0.4727,  0.0366, -0.1377, -0.3711, -0.2012, -0.3047, -0.2617,  0.2158, -0.2500,  0.0048],
        [ 0.0000, -0.1982,  0.1260, -0.5977,  0.2109, -0.0596,  0.1118, -0.4141, -0.3750,  0.0041,  0.3184, -0.0820, -0.5391,  0.0135, -0.2832],
        [ 0.0000,  0.2178,  0.4590, -0.0171,  0.1128,  0.3242, -0.4688, -0.3730, -0.4004, -0.1768,  0.5352,  0.2969,  0.3965, -0.6445, -0.2793],
        [ 0.0000,  0.6172,  0.1504,  0.2852,  0.0442, -0.2422, -0.0359, -0.0510,  0.0432,  0.4082,  0.1035,  0.1611, -0.1602,  0.1680,  0.2578],
        [ 0.0000,  0.0306,  0.5469, -0.2051,  0.4902, -0.2930, -0.1738,  0.0640,  0.2051, -0.4727,  0.3672, -0.1074,  0.2754, -0.0205, -0.3652],
        [ 0.0000,  0.0767, -0.0659, -0.2256,  0.3926,  0.3242,  0.4062, -0.1338, -0.1807,  0.1953, -0.2910,  0.0088,  0.6328, -0.0981, -0.0117],
        [ 0.0000, -0.0391, -0.0014,  0.2715, -0.5625, -0.1797, -0.0708, -0.1758,  0.0142,  0.1040,  0.1660,  0.4883, -0.0757, -0.0076,  0.1650],
        [ 0.0000, -0.1660,  0.1338, -0.6328,  0.4395, -0.7500,  0.3477, -0.2949, -0.1797, -0.0342, -0.1260, -0.2236,  0.1611,  0.4102, -0.3281],
        [ 0.0000, -0.1016, -0.0216,  0.1504, -0.1187,  0.0591, -0.2461,  0.3770,  0.2031,  0.1836, -0.3848, -0.1050,  0.4121, -0.2930,  0.3496],
        [ 0.0000, -0.0493,  0.2988, -0.5430,  0.2354,  0.2344,  0.0427, -0.2197, -0.4473,  0.2002,  0.3789, -0.1924, -0.0981, -0.0294,  0.2422],
        [ 0.0000,  0.3906,  0.8633, -0.2754,  0.1270, -0.3926,  0.0260,  0.1807, -0.5742, -0.1377,  0.3945,  0.3750, -0.0228, -0.0693, -0.0226],
        [ 0.0000,  0.3477, -0.3730, -0.4062, -0.1367, -0.3320, -0.0113,  0.0354, -0.1289,  0.1147, -0.3105,  0.0530, -0.1396, -0.0625,  0.3828],
        [ 0.0000,  0.5859, -0.0410, -0.1318, -0.0967, -0.3574, -0.0276,  0.1079,  0.4082, -0.0108,  0.3574,  0.1494,  0.5742,  0.0618,  0.0830]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5107],
        [0.3498],
        [0.2489],
        [0.1938],
        [0.1611],
        [0.1448],
        [0.1211],
        [0.1128],
        [0.0984],
        [0.0865],
        [0.0797],
        [0.0746],
        [0.0718],
        [0.0682]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5234, 0.4766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3809, 0.3008, 0.3184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3203, 0.2441, 0.2002, 0.2363, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2500, 0.2197, 0.1543, 0.1953, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.1475, 0.1992, 0.1230, 0.1973, 0.2021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.1162, 0.1406, 0.1465, 0.1040, 0.1846, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1133, 0.0962, 0.1572, 0.1226, 0.1016, 0.1426, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.1143, 0.0923, 0.1064, 0.1084, 0.1138, 0.1289, 0.0859, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.1055, 0.1172, 0.0747, 0.0806, 0.1299, 0.0835, 0.1069, 0.0864, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0815, 0.0830, 0.0659, 0.1040, 0.0845, 0.1318, 0.0693, 0.0771, 0.1064, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.0854, 0.1069, 0.1387, 0.0786, 0.0918, 0.0991, 0.0664, 0.0493, 0.0967, 0.0579, 0.0640, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0569, 0.0574, 0.0486, 0.1162, 0.0457, 0.1338, 0.0757, 0.0400, 0.0986, 0.1348, 0.0654, 0.0588, 0.0000, 0.0000],
        [0.0698, 0.0796, 0.0618, 0.0806, 0.0525, 0.0854, 0.1035, 0.0588, 0.0593, 0.0684, 0.0439, 0.0752, 0.0806, 0.0801, 0.0000],
        [0.0703, 0.0571, 0.0449, 0.0396, 0.0635, 0.0615, 0.1191, 0.0679, 0.0776, 0.0552, 0.0684, 0.0571, 0.0835, 0.0640, 0.0708]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0034, -0.0300, -0.0053,  ...,  0.0094, -0.0062,  0.0040],
        [ 0.0070, -0.0157, -0.0107,  ..., -0.0013, -0.0147, -0.0306],
        [ 0.0294,  0.0493,  0.0030,  ..., -0.0047,  0.0295,  0.0330],
        ...,
        [ 0.0502,  0.0146, -0.0129,  ...,  0.0047,  0.0003,  0.0092],
        [-0.0042,  0.0378, -0.0216,  ...,  0.0094, -0.0033, -0.0210],
        [-0.0358,  0.0035,  0.0154,  ...,  0.0286,  0.0200,  0.0083]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1738,  0.7266,  0.7461,  0.8242,  0.0825, -0.0106, -0.2158,  0.7109,  0.8281, -0.0030, -0.1089,  0.5391,  0.3066, -0.6602, -0.1758, -0.9258,  0.0027,  0.4512, -0.4082, -0.1416, -0.0295, -0.0194, -0.4727, -0.6797,  0.5586, -0.3535,  0.0151,  0.0413, -0.3926,  0.0525, -0.4062, -0.8516,
        -0.2324,  1.0703,  0.0830,  0.0123, -0.2178,  0.4121, -0.4023, -0.5586, -0.9844, -0.6133,  0.6094,  0.2070, -0.7188, -0.5469,  0.9688,  0.0281,  0.3066, -0.0151, -0.4199, -1.6875, -0.6445,  0.3164,  0.6016,  0.4004, -0.0825, -0.0781, -0.0840, -0.6680,  0.8477, -1.5469,  1.0078, -0.9258],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0323,  0.0040, -0.0029,  ...,  0.0040, -0.0024,  0.0046],
        [ 0.0088, -0.0444,  0.0029,  ..., -0.0104, -0.0192, -0.0100],
        [ 0.0473,  0.0190, -0.0008,  ...,  0.0192,  0.0109, -0.0460],
        ...,
        [-0.0181,  0.0134, -0.0207,  ...,  0.0113, -0.0092,  0.0058],
        [ 0.0253, -0.0359,  0.0316,  ...,  0.0305, -0.0077, -0.0486],
        [-0.0021, -0.0219,  0.0250,  ...,  0.0004,  0.0125, -0.0323]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0327,  0.2852,  0.3594,  0.6914,  0.7695, -0.0549,  0.3828,  0.0393,  0.6562,  0.3809,  0.2393,  0.5117,  0.2949,  0.8750,  1.0781,  0.5820,  0.2930,  0.5859,  0.8516,  0.5430,  0.3887,  0.9961, -0.0073,  0.0044,  0.3184,  0.1367,  0.3281, -0.6055,  0.5312,  0.5625, -0.3574,  0.4297,
        -0.1338, -0.1045,  0.1055,  0.4316, -0.6875, -1.4297,  0.3320, -0.7930,  0.1309,  0.0645,  1.1953, -0.5469,  0.4824,  0.0938,  0.5664,  0.3066, -0.5352, -0.2578, -0.0879,  0.1377, -0.5547, -0.1436, -0.2275, -0.5234,  0.6953, -0.8984,  0.4375,  0.3711,  0.2910,  0.4375,  0.5938,  0.0371],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0952,  0.1069,  0.0118,  0.1582,  0.2910,  0.5000, -0.0410, -0.6055, -0.2363, -0.0679, -0.1621, -0.5469, -0.3242, -0.0021],
        [ 0.0000, -0.2402, -0.1807, -0.1621,  0.1621, -0.2119, -0.2451, -0.4531, -0.8203, -0.1768, -0.2598, -0.5117, -0.5273, -0.4883, -0.0840],
        [ 0.0000, -0.2676, -0.4688, -0.3027,  0.0596, -0.0840,  0.4277, -0.1226, -0.0083,  0.2070, -0.2383, -0.3965,  0.0640,  0.0967, -0.1729],
        [ 0.0000, -0.1289, -0.4824, -0.2451, -0.3223,  0.2236,  0.3086, -0.0267,  0.2285,  0.5781, -0.0752,  0.0649,  0.1533, -0.1367,  0.2754],
        [ 0.0000,  0.1226,  0.4199, -0.0613,  0.4082,  0.4355,  0.3262,  0.0505,  0.2031,  0.4004, -0.0583, -0.0347,  0.3008,  0.4492,  0.2832],
        [ 0.0000, -0.3066, -0.1133, -0.0767, -0.4180,  0.1543, -0.0420, -0.2637, -0.2617,  0.1338, -0.1895, -0.0923,  0.2891, -0.0449,  0.4102],
        [ 0.0000, -0.2012, -0.3652,  0.1260, -0.1240, -0.3105,  0.0298, -0.0752, -0.1807,  0.3125, -0.4688, -0.1934,  0.2578, -0.3379,  0.2812],
        [ 0.0000,  0.0884, -0.1230,  0.0209,  0.0359,  0.0835,  0.2070, -0.1934,  0.3340,  0.3301, -0.1367, -0.1895,  0.0903,  0.7461, -0.1494],
        [ 0.0000,  0.1768,  0.2832, -0.1680, -0.0908,  0.3848, -0.0591,  0.1914, -0.0237,  0.3613, -0.2637,  0.0066, -0.1021,  0.2715, -0.1416],
        [ 0.0000, -0.0400, -0.0229, -0.2539,  0.2002, -0.0027,  0.4375, -0.2012, -0.0977,  0.2266,  0.2734,  0.3125,  0.1836,  0.4629,  0.4961],
        [ 0.0000,  0.2637,  0.4863,  0.7461,  0.1816,  0.3320,  0.4102,  0.0121, -0.2852,  0.3848, -0.1289, -0.0265,  0.1211,  0.2949,  0.5586],
        [ 0.0000, -0.1875, -0.1777, -0.3457,  0.5312, -0.4062,  0.6680,  0.1016, -0.5391,  0.3652,  0.6719, -0.0449, -0.1523,  0.1416,  0.3203],
        [ 0.0000,  0.1328, -0.1191,  0.1475, -0.2832,  0.2061,  0.3945, -0.1699, -0.1631, -0.0183, -0.4609,  0.0776,  0.1445,  0.1406, -0.1328],
        [ 0.0000, -0.2090, -0.4473, -0.5742, -0.1060, -0.1357,  0.5273, -0.0378,  0.0986, -0.2441, -0.0292, -0.2100,  0.1719, -0.0947,  0.0034]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5254],
        [0.3446],
        [0.2389],
        [0.1965],
        [0.1651],
        [0.1382],
        [0.1260],
        [0.1119],
        [0.0929],
        [0.0879],
        [0.0781],
        [0.0817],
        [0.0716],
        [0.0680]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5391, 0.4629, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.3477, 0.3770, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.2148, 0.3125, 0.2031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.2090, 0.2520, 0.1445, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.1406, 0.1738, 0.1992, 0.2002, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1348, 0.1631, 0.2305, 0.1465, 0.0933, 0.1074, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.1309, 0.1494, 0.1191, 0.1328, 0.1143, 0.1128, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.0879, 0.1436, 0.1445, 0.0869, 0.0732, 0.0908, 0.1118, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.0581, 0.1318, 0.1069, 0.0820, 0.1118, 0.1157, 0.0928, 0.1201, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.0850, 0.0996, 0.0894, 0.0830, 0.0471, 0.0889, 0.0972, 0.1553, 0.0942, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.0708, 0.1050, 0.0908, 0.0859, 0.0498, 0.0796, 0.1021, 0.1201, 0.0552, 0.0713, 0.1021, 0.0000, 0.0000, 0.0000],
        [0.0640, 0.0554, 0.1172, 0.0703, 0.0664, 0.0415, 0.0579, 0.0806, 0.1187, 0.0366, 0.0820, 0.1187, 0.0913, 0.0000, 0.0000],
        [0.0579, 0.0588, 0.0649, 0.0771, 0.0576, 0.0630, 0.0605, 0.0737, 0.1152, 0.0415, 0.0703, 0.0835, 0.0703, 0.1060, 0.0000],
        [0.0522, 0.0454, 0.0825, 0.0596, 0.0933, 0.0369, 0.0664, 0.0552, 0.0840, 0.0645, 0.0625, 0.0830, 0.0747, 0.0566, 0.0835]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0047, -0.0131,  0.0112,  ...,  0.0112, -0.0097,  0.0493],
        [-0.0107, -0.0281,  0.0038,  ...,  0.0015,  0.0027,  0.0092],
        [-0.0081, -0.0121,  0.0034,  ..., -0.0113,  0.0034, -0.0200],
        ...,
        [-0.0160, -0.0045,  0.0046,  ..., -0.0043,  0.0325,  0.0099],
        [ 0.0301, -0.0311,  0.0233,  ...,  0.0302, -0.0060, -0.0287],
        [-0.0073,  0.0063, -0.0491,  ..., -0.0331, -0.0080, -0.0488]], device='cuda:0', requires_grad=True)
K: tensor([-0.2393, -0.2422, -0.4707, -0.4531, -0.1787,  0.1709,  0.2422,  0.1973,  0.2012,  0.8281, -0.5234, -0.9297,  0.1943, -0.1689,  0.8906,  0.6406, -0.3652, -0.1680,  0.2061, -0.7773, -0.1699,  0.0908,  0.1826,  0.4258,  0.0398, -0.3887,  0.0894, -0.3066, -0.4336,  0.8906,  0.1045, -0.1162,
         0.6484,  0.0845, -0.9453, -0.0233, -1.0391, -0.1865,  0.0664,  0.2656,  0.1777, -0.4043,  0.0820,  0.0562,  0.4023,  0.2393,  0.6055, -0.0505, -0.2051,  0.1865, -0.5234,  0.4336,  0.5039,  0.4434, -0.4141,  0.6523,  0.5195, -0.6992, -0.1533, -0.8906,  0.3594, -0.0737,  0.0889, -0.2422],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0028,      0.0269,     -0.0017,  ...,      0.0434,     -0.0032,      0.0453],
        [    -0.0081,     -0.0128,     -0.0256,  ...,     -0.0156,      0.0085,     -0.0193],
        [    -0.0136,     -0.0130,     -0.0046,  ...,     -0.0103,     -0.0214,     -0.0070],
        ...,
        [    -0.0073,     -0.0059,      0.0095,  ...,      0.0171,     -0.0056,      0.0252],
        [    -0.0000,      0.0002,     -0.0095,  ...,     -0.0036,      0.0252,      0.0251],
        [    -0.0233,     -0.0104,     -0.0242,  ...,      0.0155,     -0.0117,      0.0103]], device='cuda:0', requires_grad=True)
Q: tensor([     0.0713,      0.3750,      0.1670,     -0.4551,      0.2969,      0.3535,     -0.3555,      0.2949,      0.7578,      0.3945,     -0.6914,      0.0928,      0.3574,      0.5234,      0.6719,      0.0010,      0.5898,     -0.4766,      0.3496,      0.4434,     -0.2266,      0.5508,
             0.9766,     -0.0315,      0.0879,     -0.1641,     -0.3301,      0.3008,      0.2871,      0.6016,      0.3809,     -0.0537,      0.7266,     -0.3047,     -0.3047,      0.2988,     -0.6484,      0.3340,     -0.2715,      0.3730,     -0.6914,      0.6289,     -0.2793,      1.3281,
             0.4609,      0.5820,      1.2734,     -0.7656,      0.3652,     -0.6406,     -0.3691,     -0.0928,      0.4395,      0.6797,      1.1875,     -0.5156,      0.0640,     -0.1924,     -0.1631,     -0.0342,      0.4824,     -0.7461,     -0.8008,      0.4453], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.1514,      0.4570,      0.4551,     -0.1270,     -0.0918,      0.1729,      0.0325,      0.3789,      0.3301,      0.5508,      0.5195,      0.2129,      0.3301,      0.1221],
        [     0.0000,      0.2266,      0.3066,      0.3301,      0.4297,      0.0435,      0.0364,      0.2285,      0.4629,      0.1992,      0.3477,      1.1094,      0.5391,      0.6367,      0.6562],
        [     0.0000,     -0.2256,      0.1455,     -0.2832,      0.1592,     -0.2373,     -0.2871,     -0.0469,      0.1904,      0.1396,      0.0591,     -0.0302,      0.1475,      0.5508,      0.2256],
        [     0.0000,      0.2158,      0.4023,     -0.1523,      0.2852,     -0.0728,      0.0019,      0.2314,      0.7773,     -0.3281,      0.0708,      0.1709,     -0.0684,      0.6172,      0.3594],
        [     0.0000,     -0.1982,      0.0149,      0.1523,      0.1572,     -0.4121,      0.0542,     -0.2354,      0.0947,      0.1777,     -0.0708,      0.3379,      0.2148,      0.2393,      0.4512],
        [     0.0000,      0.0664,      0.2578,      0.6055,      0.1553,     -0.2969,     -0.1592,     -0.2324,      0.0898,      0.1011,     -0.1494,     -0.0430,     -0.0859,      0.1201,      0.6172],
        [     0.0000,      0.2031,      0.3398,      0.1138,      0.2188,      0.0713,      0.0569,      0.2295,      0.7852,      0.2695,      0.3086,      0.6719,      0.6328,      0.5039,      0.5352],
        [     0.0000,     -0.1650,      0.3242,      0.3320,     -0.1768,     -0.3496,     -0.1328,      0.0771,      0.4277,     -0.0002,      0.1504,      0.5156,      0.4336,      0.4160,      0.5352],
        [     0.0000,     -0.3730,      0.4453,      0.2363,     -0.0255,      0.2832,      0.3164,      0.0986,      0.3535,      0.1416,      0.0308,      0.8867,      0.3184,      0.4336,      0.0923],
        [     0.0000,      0.0449,      0.2002,      0.0942,      0.0204,     -0.5508,      0.0889,      0.1768,      0.6484,      0.1445,     -0.0361,      0.5898,      0.3652,      0.6250,      0.6758],
        [     0.0000,      0.0500,      0.4414,      0.3008,      0.2461,     -0.3027,      0.1680,      0.4141,      0.5781,     -0.1992,      0.0540,      0.4141,      0.0723,      0.3613,      0.4219],
        [     0.0000,     -0.1396,      0.6055,      0.0986,      0.0417,     -0.4297,     -0.0972,      0.2344,      0.6211,     -0.5547,      0.2520,      0.6211,      0.3574,      0.2598,      0.5117],
        [     0.0000,      0.0193,      0.1152,      0.2871,     -0.0011,      0.0825,      0.0479,      0.2422,      0.6914,     -0.3320,      0.1973,      0.3691,      0.1934,      0.6094,      0.1377],
        [     0.0000,     -0.1396,      0.4570,      0.1309,      0.5820,     -0.3516,      0.2363,      0.0554,      0.4727,      0.2061,      0.1797,      0.4648,      0.3594,      0.0791,      0.4668]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5002],
        [0.3119],
        [0.2504],
        [0.1785],
        [0.1735],
        [0.1436],
        [0.1239],
        [0.1154],
        [0.0900],
        [0.0875],
        [0.0928],
        [0.0763],
        [0.0676],
        [0.0604]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5195, 0.4824, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.2773, 0.3574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.1533, 0.3320, 0.1855, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1992, 0.1299, 0.2559, 0.1543, 0.2617, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1426, 0.1123, 0.1904, 0.1533, 0.2295, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.0747, 0.1543, 0.1211, 0.1699, 0.1934, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.0547, 0.1299, 0.1094, 0.1982, 0.1216, 0.1211, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.0674, 0.1055, 0.1011, 0.1641, 0.1133, 0.1006, 0.1318, 0.1167, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0708, 0.1025, 0.0947, 0.1582, 0.1143, 0.0898, 0.1025, 0.0996, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0981, 0.0781, 0.0732, 0.0786, 0.0996, 0.1030, 0.0669, 0.1226, 0.0786, 0.1123, 0.0889, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0659, 0.0742, 0.0688, 0.0840, 0.1021, 0.0825, 0.0649, 0.1328, 0.0913, 0.1021, 0.0454, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0547, 0.0879, 0.0781, 0.1089, 0.0806, 0.0488, 0.0669, 0.0898, 0.0991, 0.0771, 0.0596, 0.0586, 0.0000, 0.0000],
        [0.0679, 0.0425, 0.0806, 0.0684, 0.1079, 0.0801, 0.0894, 0.0688, 0.0581, 0.0630, 0.0579, 0.0859, 0.0466, 0.0820, 0.0000],
        [0.0698, 0.0444, 0.0776, 0.0674, 0.1230, 0.0564, 0.0593, 0.0645, 0.0549, 0.0522, 0.0474, 0.0796, 0.0483, 0.1006, 0.0544]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0157, -0.0098, -0.0205,  ..., -0.0530,  0.0032,  0.0185],
        [-0.0295,  0.0254,  0.0124,  ...,  0.0025, -0.0295,  0.0284],
        [ 0.0202, -0.0015, -0.0088,  ...,  0.0040,  0.0318, -0.0017],
        ...,
        [ 0.0421,  0.0304, -0.0034,  ..., -0.0080,  0.0162, -0.0146],
        [-0.0054, -0.0010,  0.0082,  ..., -0.0181,  0.0237, -0.0166],
        [-0.0410,  0.0206, -0.0261,  ..., -0.0041,  0.0157, -0.0218]], device='cuda:0', requires_grad=True)
K: tensor([-0.2080,  0.5352,  0.8672,  0.3242,  0.3184,  0.3438,  0.5273,  0.1162,  0.1768,  0.1641, -0.3379,  0.7266, -1.0391,  0.6094,  0.1011, -0.2354, -0.0757, -0.9141,  0.0718,  0.6992, -0.1621,  0.0075,  0.6289, -0.1592,  0.1377,  0.3398, -0.2041,  0.5742, -0.5430,  0.0757,  1.3125, -0.1807,
        -0.6016,  0.1387, -0.8906, -0.7969,  0.3184, -0.5664, -0.4023, -0.5898, -0.1045, -0.2539,  0.7500, -0.3477, -0.2266,  1.0781, -0.0201, -0.5352,  0.7070, -0.3184,  0.0110, -0.6328, -0.6602, -0.1484,  0.3691,  0.9922, -0.0557, -0.5586, -0.3516, -0.4395, -0.2793,  0.0801, -0.9844,  0.1660],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0049,  0.0064, -0.0071,  ...,  0.0205,  0.0094,  0.0085],
        [ 0.0634,  0.0197,  0.0425,  ..., -0.0279, -0.0079,  0.0028],
        [-0.0175, -0.0162,  0.0052,  ..., -0.0037,  0.0216,  0.0126],
        ...,
        [-0.0217, -0.0096,  0.0131,  ...,  0.0182,  0.0069, -0.0076],
        [ 0.0130, -0.0185, -0.0265,  ...,  0.0044,  0.0136, -0.0098],
        [-0.0119,  0.0150,  0.0106,  ...,  0.0155, -0.0250, -0.0052]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5781,  0.2412, -0.9414,  0.9805, -0.2490,  0.3223, -0.4961,  0.8555, -0.2441, -0.2676,  0.3281, -0.9648, -0.2090, -0.3887, -0.1475,  0.5312,  0.5508,  0.2002, -0.7188, -0.2871,  0.7500,  0.0025, -0.3340,  0.8320,  0.4082,  0.1396, -0.4492, -1.4141,  0.4746,  0.0078,  0.1914,  0.2148,
         0.4219,  0.7617, -0.4805,  0.1021,  0.4355, -0.5391, -0.3164,  0.4941, -0.0825, -0.5312, -0.2217, -0.7188, -0.4297, -0.0201, -0.7344,  0.2324, -0.3359, -0.4004, -0.2773,  0.1045, -0.4531, -0.7266, -0.6367,  0.2168,  0.4590,  0.4277, -0.3301, -0.2715, -0.9375, -0.3789, -0.1904, -0.0386],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.0708,      0.9453,     -0.4121,      0.2041,      0.3301,      0.1904,      0.1514,     -0.1973,      0.0625,      0.1167,      0.0271,     -0.0583,     -0.3262,      0.2871],
        [     0.0000,     -0.2793,     -0.0247,     -0.4004,      0.3105,      0.5117,     -0.0179,      0.0811,      0.2656,      0.3281,      0.0034,     -0.1631,     -0.3223,     -0.0339,      0.1318],
        [     0.0000,     -0.7656,      0.0069,     -0.5781,      0.1138,      0.1406,     -0.1865,     -0.0679,     -0.1953,     -0.5977,     -0.2910,     -0.1396,     -0.2256,     -0.0135,     -0.1709],
        [     0.0000,     -0.4297,      0.2539,     -0.2520,      0.2734,     -0.0898,      0.1235,      0.0623,      0.2256,     -0.1992,      0.3613,      0.1699,     -0.0889,      0.7812,     -0.0278],
        [     0.0000,     -0.2363,      0.2949,      0.0728,      0.4785,      0.1963,      0.0018,      0.2490,      0.4492,     -0.4023,      0.2441,      0.1416,     -0.5117,      0.5547,     -0.1006],
        [     0.0000,     -0.4668,      0.2539,      0.0148,      0.3555,      0.4824,      0.3320,      0.3652,      0.2188,      0.1055,      0.0703,     -0.0203,      0.0972,      0.3379,      0.1455],
        [     0.0000,     -0.8398,      0.0243,     -0.1514,      0.4453,     -0.0420,     -0.0459,      0.0815,      0.0742,     -0.2314,      0.1445,      0.1191,     -0.1216,      0.0549,      0.0708],
        [     0.0000,     -0.4043,      0.0459,      0.0051,      0.4863,      0.1196,     -0.0009,      0.2676,      0.1455,      0.0447,     -0.0258,      0.0576,     -0.2412,      0.0454,      0.2402],
        [     0.0000,     -0.2158,      0.1553,      0.0776,      0.5898,      0.2656,      0.0212,      0.1543,      0.1260,     -0.1060,      0.4141,      0.3242,      0.4492,      0.5117,      0.4395],
        [     0.0000,     -0.2275,     -0.2871,     -0.2227,      0.0178,      0.0522,     -0.3789,      0.2266,     -0.2227,      0.1377,     -0.0981,     -0.0649,     -0.3066,     -0.2910,     -0.0991],
        [     0.0000,     -0.2520,     -0.1348,     -0.2080,     -0.0098,      0.1846,     -0.0276,     -0.2676,      0.4473,      0.0723,      0.1816,     -0.6250,     -0.0188,      0.2793,      0.3125],
        [     0.0000,     -0.4883,     -0.0156,     -0.1328,      0.2002,     -0.1001,     -0.6016,     -0.2910,      0.0040,      0.1050,     -0.1436,     -0.4023,     -0.4219,      0.3164,      0.0679],
        [     0.0000,     -0.4746,      0.1709,      0.0064,      0.4590,      0.1611,      0.2734,      0.0117,     -0.1592,     -0.0791,     -0.1621,      0.2334,     -0.3770,      0.1895,     -0.2734],
        [     0.0000,     -0.4512,      0.1025,     -0.0376,      0.5664,     -0.2168,     -0.1660,     -0.0830,     -0.2412,     -0.2910,     -0.3926,      0.1260,     -0.3691,      0.3613,     -0.2520]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4915],
        [0.3232],
        [0.2408],
        [0.1934],
        [0.1540],
        [0.1338],
        [0.1197],
        [0.1038],
        [0.0953],
        [0.0901],
        [0.0854],
        [0.0750],
        [0.0684],
        [0.0646]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Pract:0.0003 viewpoint:0.0002 removal:0.0002 outlined:0.0002omes:0.0002 veh:0.0003 forbidden:0.0002 lawyer:0.0002)
 lawyer
------
		( viewpoint:0.0002 removal:0.0002 outlined:0.0002omes:0.0002 veh:0.0003 forbidden:0.0002 lawyer:0.0002 Adolf:0.0002)
 Adolf removal snlocationhiZelocation>) Ellison Alison diagrams comicappa Brigadeshake
@ 1 train 10.9731 , allloss: 17.9834, dt: 1460.88ms, fracRes: 0.0063, norm(attn): 0.0354, norm(output): 0.0908, norm(x): 0.0819, norm(y): 0.9993, norm:14.1870, tok/sec: 89721.35, flops:69.88, batch-reuse:1
@ 2 train 10.9594 , allloss: 17.9597, dt: 869.20ms, fracRes: 0.0063, norm(attn): 0.0354, norm(output): 0.0908, norm(x): 0.0819, norm(y): 0.9993, norm:14.0851, tok/sec: 150796.67, flops:117.44, batch-reuse:1
@ 3 train 10.9301 , allloss: 17.9166, dt: 853.02ms, fracRes: 0.0063, norm(attn): 0.0356, norm(output): 0.0908, norm(x): 0.0820, norm(y): 0.9993, norm:14.0387, tok/sec: 153655.57, flops:119.67, batch-reuse:1
@ 4 train 10.8905 , allloss: 17.8603, dt: 866.46ms, fracRes: 0.0063, norm(attn): 0.0359, norm(output): 0.0913, norm(x): 0.0821, norm(y): 0.9993, norm:13.9316, tok/sec: 151272.98, flops:117.81, batch-reuse:1
@ 5 train 10.8500 , allloss: 17.7980, dt: 871.90ms, fracRes: 0.0063, norm(attn): 0.0366, norm(output): 0.0913, norm(x): 0.0822, norm(y): 0.9993, norm:13.7618, tok/sec: 150329.48, flops:117.08, batch-reuse:1
@ 6 train 10.7837 , allloss: 17.7054, dt: 874.62ms, fracRes: 0.0063, norm(attn): 0.0371, norm(output): 0.0913, norm(x): 0.0824, norm(y): 0.9993, norm:14.5102, tok/sec: 149861.62, flops:116.71, batch-reuse:1
@ 7 train 10.7225 , allloss: 17.6154, dt: 873.15ms, fracRes: 0.0063, norm(attn): 0.0376, norm(output): 0.0928, norm(x): 0.0827, norm(y): 0.9993, norm:14.4606, tok/sec: 150113.94, flops:116.91, batch-reuse:1
@ 8 train 10.6598 , allloss: 17.5198, dt: 872.50ms, fracRes: 0.0063, norm(attn): 0.0388, norm(output): 0.0928, norm(x): 0.0831, norm(y): 0.9993, norm:14.4464, tok/sec: 150225.76, flops:117.00, batch-reuse:1
@ 9 train 10.5691 , allloss: 17.3920, dt: 877.84ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.0933, norm(x): 0.0837, norm(y): 0.9994, norm:14.6112, tok/sec: 149311.45, flops:116.28, batch-reuse:1
@ 10 train 10.4958 , allloss: 17.2759, dt: 877.17ms, fracRes: 0.0064, norm(attn): 0.0415, norm(output): 0.0933, norm(x): 0.0845, norm(y): 0.9994, norm:14.5380, tok/sec: 149426.02, flops:116.37, batch-reuse:1
@ 11 train 10.4545 , allloss: 17.1835, dt: 879.68ms, fracRes: 0.0064, norm(attn): 0.0427, norm(output): 0.0942, norm(x): 0.0854, norm(y): 0.9994, norm:14.3576, tok/sec: 148999.89, flops:116.04, batch-reuse:1
@ 12 train 10.3577 , allloss: 17.0243, dt: 876.61ms, fracRes: 0.0064, norm(attn): 0.0442, norm(output): 0.0957, norm(x): 0.0864, norm(y): 0.9994, norm:14.8320, tok/sec: 149521.97, flops:116.45, batch-reuse:1
@ 13 train 10.2946 , allloss: 16.8872, dt: 876.72ms, fracRes: 0.0064, norm(attn): 0.0457, norm(output): 0.0967, norm(x): 0.0876, norm(y): 0.9994, norm:14.8589, tok/sec: 149502.86, flops:116.43, batch-reuse:1
@ 14 train 10.2362 , allloss: 16.7378, dt: 889.63ms, fracRes: 0.0064, norm(attn): 0.0469, norm(output): 0.0996, norm(x): 0.0888, norm(y): 0.9994, norm:15.0252, tok/sec: 147332.52, flops:114.74, batch-reuse:1
@ 15 train 10.1816 , allloss: 16.5775, dt: 880.32ms, fracRes: 0.0064, norm(attn): 0.0481, norm(output): 0.1011, norm(x): 0.0902, norm(y): 0.9994, norm:15.1711, tok/sec: 148890.82, flops:115.96, batch-reuse:1
@ 16 train 10.1247 , allloss: 16.4008, dt: 884.28ms, fracRes: 0.0065, norm(attn): 0.0503, norm(output): 0.1021, norm(x): 0.0916, norm(y): 0.9995, norm:15.2495, tok/sec: 148224.95, flops:115.44, batch-reuse:1
@ 17 train 10.0774 , allloss: 16.2167, dt: 879.37ms, fracRes: 0.0065, norm(attn): 0.0508, norm(output): 0.1035, norm(x): 0.0931, norm(y): 0.9995, norm:15.3345, tok/sec: 149052.97, flops:116.08, batch-reuse:1
@ 18 train 10.0473 , allloss: 16.0360, dt: 884.52ms, fracRes: 0.0065, norm(attn): 0.0518, norm(output): 0.1040, norm(x): 0.0946, norm(y): 0.9995, norm:15.3377, tok/sec: 148184.40, flops:115.41, batch-reuse:1
@ 19 train 9.9745 , allloss: 15.7988, dt: 883.36ms, fracRes: 0.0065, norm(attn): 0.0537, norm(output): 0.1074, norm(x): 0.0962, norm(y): 0.9995, norm:15.4170, tok/sec: 148378.21, flops:115.56, batch-reuse:1
@ 20 train 9.9323 , allloss: 15.5789, dt: 877.42ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 0.1089, norm(x): 0.0978, norm(y): 0.9995, norm:15.3794, tok/sec: 149383.27, flops:116.34, batch-reuse:1
@ 21 train 9.8818 , allloss: 15.3379, dt: 889.02ms, fracRes: 0.0065, norm(attn): 0.0549, norm(output): 0.1099, norm(x): 0.0994, norm(y): 0.9995, norm:15.2852, tok/sec: 147434.54, flops:114.82, batch-reuse:1
@ 22 train 9.8720 , allloss: 15.1265, dt: 878.98ms, fracRes: 0.0065, norm(attn): 0.0549, norm(output): 0.1108, norm(x): 0.1009, norm(y): 0.9996, norm:15.0451, tok/sec: 149117.82, flops:116.13, batch-reuse:1
@ 23 train 9.8667 , allloss: 14.9122, dt: 883.54ms, fracRes: 0.0065, norm(attn): 0.0557, norm(output): 0.1113, norm(x): 0.1025, norm(y): 0.9996, norm:14.7658, tok/sec: 148348.14, flops:115.53, batch-reuse:1
@ 24 train 9.8408 , allloss: 14.6663, dt: 890.13ms, fracRes: 0.0065, norm(attn): 0.0579, norm(output): 0.1167, norm(x): 0.1040, norm(y): 0.9996, norm:14.5130, tok/sec: 147250.63, flops:114.68, batch-reuse:1
@ 25 train 9.7433 , allloss: 14.3462, dt: 881.09ms, fracRes: 0.0065, norm(attn): 0.0583, norm(output): 0.1167, norm(x): 0.1055, norm(y): 0.9996, norm:14.2449, tok/sec: 148760.72, flops:115.86, batch-reuse:1
@ 26 train 9.7748 , allloss: 14.1499, dt: 884.47ms, fracRes: 0.0065, norm(attn): 0.0583, norm(output): 0.1177, norm(x): 0.1070, norm(y): 0.9996, norm:13.7586, tok/sec: 148193.06, flops:115.41, batch-reuse:1
@ 27 train 9.7445 , allloss: 13.8892, dt: 889.05ms, fracRes: 0.0065, norm(attn): 0.0588, norm(output): 0.1187, norm(x): 0.1084, norm(y): 0.9996, norm:13.2795, tok/sec: 147428.49, flops:114.82, batch-reuse:1
@ 28 train 9.7262 , allloss: 13.6390, dt: 881.06ms, fracRes: 0.0064, norm(attn): 0.0593, norm(output): 0.1230, norm(x): 0.1098, norm(y): 0.9996, norm:12.7940, tok/sec: 148766.08, flops:115.86, batch-reuse:1
@ 29 train 9.7165 , allloss: 13.3995, dt: 884.38ms, fracRes: 0.0064, norm(attn): 0.0596, norm(output): 0.1230, norm(x): 0.1112, norm(y): 0.9996, norm:12.2692, tok/sec: 148208.33, flops:115.43, batch-reuse:1
@ 30 train 9.6740 , allloss: 13.1280, dt: 898.81ms, fracRes: 0.0064, norm(attn): 0.0615, norm(output): 0.1245, norm(x): 0.1125, norm(y): 0.9997, norm:11.7606, tok/sec: 145828.97, flops:113.57, batch-reuse:1
@ 31 train 9.6942 , allloss: 12.9233, dt: 891.23ms, fracRes: 0.0064, norm(attn): 0.0615, norm(output): 0.1250, norm(x): 0.1138, norm(y): 0.9997, norm:11.2137, tok/sec: 147069.43, flops:114.54, batch-reuse:1
@ 32 train 9.6651 , allloss: 12.6762, dt: 879.22ms, fracRes: 0.0064, norm(attn): 0.0623, norm(output): 0.1260, norm(x): 0.1150, norm(y): 0.9997, norm:10.6861, tok/sec: 149077.55, flops:116.10, batch-reuse:1
@ 33 train 9.6065 , allloss: 12.4043, dt: 885.83ms, fracRes: 0.0064, norm(attn): 0.0623, norm(output): 0.1270, norm(x): 0.1161, norm(y): 0.9997, norm:10.1340, tok/sec: 147965.32, flops:115.24, batch-reuse:1
@ 34 train 9.6203 , allloss: 12.2155, dt: 871.56ms, fracRes: 0.0064, norm(attn): 0.0625, norm(output): 0.1270, norm(x): 0.1172, norm(y): 0.9997, norm:9.5162, tok/sec: 150388.66, flops:117.12, batch-reuse:1
@ 35 train 9.6157 , allloss: 12.0171, dt: 884.16ms, fracRes: 0.0063, norm(attn): 0.0625, norm(output): 0.1309, norm(x): 0.1182, norm(y): 0.9997, norm:9.0570, tok/sec: 148244.81, flops:115.45, batch-reuse:1
@ 36 train 9.5876 , allloss: 11.8066, dt: 886.26ms, fracRes: 0.0063, norm(attn): 0.0630, norm(output): 0.1309, norm(x): 0.1191, norm(y): 0.9997, norm:8.4937, tok/sec: 147893.95, flops:115.18, batch-reuse:1
@ 37 train 9.5916 , allloss: 11.6438, dt: 882.90ms, fracRes: 0.0063, norm(attn): 0.0630, norm(output): 0.1318, norm(x): 0.1198, norm(y): 0.9997, norm:7.8748, tok/sec: 148456.46, flops:115.62, batch-reuse:1
@ 38 train 9.5638 , allloss: 11.4580, dt: 888.62ms, fracRes: 0.0063, norm(attn): 0.0630, norm(output): 0.1328, norm(x): 0.1204, norm(y): 0.9997, norm:7.4906, tok/sec: 147500.56, flops:114.87, batch-reuse:1
@ 39 train 9.5768 , allloss: 11.3329, dt: 894.33ms, fracRes: 0.0062, norm(attn): 0.0630, norm(output): 0.1328, norm(x): 0.1208, norm(y): 0.9997, norm:6.8142, tok/sec: 146559.22, flops:114.14, batch-reuse:1
@ 40 train 9.5262 , allloss: 11.1586, dt: 897.85ms, fracRes: 0.0062, norm(attn): 0.0630, norm(output): 0.1328, norm(x): 0.1209, norm(y): 0.9997, norm:6.3718, tok/sec: 145983.82, flops:113.69, batch-reuse:1
@ 41 train 9.5098 , allloss: 11.0323, dt: 898.23ms, fracRes: 0.0062, norm(attn): 0.0630, norm(output): 0.1328, norm(x): 0.1209, norm(y): 0.9997, norm:5.9204, tok/sec: 145922.80, flops:113.65, batch-reuse:1
@ 42 train 9.5100 , allloss: 10.9384, dt: 894.30ms, fracRes: 0.0062, norm(attn): 0.0630, norm(output): 0.1328, norm(x): 0.1206, norm(y): 0.9997, norm:5.4695, tok/sec: 146564.46, flops:114.14, batch-reuse:1
@ 43 train 9.5161 , allloss: 10.8681, dt: 894.40ms, fracRes: 0.0062, norm(attn): 0.0630, norm(output): 0.1318, norm(x): 0.1202, norm(y): 0.9997, norm:4.9357, tok/sec: 146548.21, flops:114.13, batch-reuse:1
@ 44 train 9.5238 , allloss: 10.8265, dt: 900.03ms, fracRes: 0.0061, norm(attn): 0.0630, norm(output): 0.1318, norm(x): 0.1196, norm(y): 0.9997, norm:4.6322, tok/sec: 145631.06, flops:113.42, batch-reuse:1
@ 45 train 9.4966 , allloss: 10.7703, dt: 891.41ms, fracRes: 0.0061, norm(attn): 0.0630, norm(output): 0.1318, norm(x): 0.1188, norm(y): 0.9997, norm:4.4083, tok/sec: 147038.31, flops:114.51, batch-reuse:1
@ 46 train 9.4560 , allloss: 10.6990, dt: 893.83ms, fracRes: 0.0061, norm(attn): 0.0625, norm(output): 0.1318, norm(x): 0.1178, norm(y): 0.9997, norm:4.0630, tok/sec: 146641.44, flops:114.20, batch-reuse:1
@ 47 train 9.4277 , allloss: 10.6408, dt: 913.10ms, fracRes: 0.0061, norm(attn): 0.0625, norm(output): 0.1309, norm(x): 0.1166, norm(y): 0.9997, norm:3.8954, tok/sec: 143546.61, flops:111.79, batch-reuse:1
@ 48 train 9.4128 , allloss: 10.6256, dt: 912.12ms, fracRes: 0.0060, norm(attn): 0.0625, norm(output): 0.1270, norm(x): 0.1151, norm(y): 0.9997, norm:3.6624, tok/sec: 143700.30, flops:111.91, batch-reuse:1
@ 49 train 9.4158 , allloss: 10.6297, dt: 909.82ms, fracRes: 0.0060, norm(attn): 0.0625, norm(output): 0.1260, norm(x): 0.1135, norm(y): 0.9997, norm:3.5406, tok/sec: 144063.72, flops:112.20, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4961, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.3027, 0.4316, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2354, 0.2910, 0.2393, 0.2334, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.1865, 0.2188, 0.1836, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.2754, 0.1152, 0.1670, 0.1943, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.2520, 0.2520, 0.0737, 0.0996, 0.0688, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.2334, 0.1445, 0.0898, 0.1465, 0.0908, 0.1035, 0.0903, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.0771, 0.0908, 0.1436, 0.1143, 0.0786, 0.1216, 0.1396, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.1064, 0.1187, 0.0728, 0.0859, 0.0898, 0.1167, 0.1011, 0.0693, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0991, 0.1475, 0.0801, 0.0796, 0.0801, 0.1060, 0.0588, 0.0396, 0.1387, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.1187, 0.0601, 0.0938, 0.0654, 0.1250, 0.1289, 0.0820, 0.0557, 0.0679, 0.0549, 0.0752, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0713, 0.0718, 0.0737, 0.0957, 0.0908, 0.0601, 0.1021, 0.0635, 0.0728, 0.0688, 0.1045, 0.0461, 0.0000, 0.0000],
        [0.0618, 0.0439, 0.0330, 0.1230, 0.0767, 0.0522, 0.0605, 0.0654, 0.1089, 0.0488, 0.0776, 0.1270, 0.0527, 0.0679, 0.0000],
        [0.0608, 0.0767, 0.0454, 0.0630, 0.0854, 0.0747, 0.0422, 0.0908, 0.0352, 0.0486, 0.0486, 0.1533, 0.0762, 0.0488, 0.0505]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0009, -0.0217, -0.0104,  ...,  0.0014,  0.0104, -0.0224],
        [-0.0386,  0.0279,  0.0002,  ..., -0.0296, -0.0080, -0.0059],
        [ 0.0087,  0.0359, -0.0061,  ...,  0.0027, -0.0148,  0.0028],
        ...,
        [ 0.0181,  0.0034, -0.0121,  ...,  0.0111,  0.0002, -0.0120],
        [-0.0088,  0.0258,  0.0186,  ..., -0.0007, -0.0047, -0.0142],
        [ 0.0256, -0.0061,  0.0292,  ...,  0.0264,  0.0094,  0.0299]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6172, -0.4863, -0.1050, -0.7578, -0.0430,  0.1426,  0.0167, -0.3105, -0.3711, -0.2910, -0.4902,  0.3887,  0.5781, -0.7109,  0.5547, -0.8242, -0.0835, -1.3438,  0.6172,  0.7930,  0.2988, -0.7031, -0.4004,  0.2617, -0.5000, -0.1357, -0.7227, -0.6055,  1.0000,  0.3105, -0.7109, -0.3770,
         0.2695, -0.4746, -0.3418, -0.1602,  0.7500, -0.2754,  0.2158,  0.9414, -0.5078,  0.1357, -0.5156, -0.8320, -1.3203,  0.3516,  0.6211, -0.4883,  0.0598, -0.3086,  0.5859,  0.1328,  0.2773, -0.6875,  0.1816,  0.1621, -0.0835,  0.1079, -0.4004, -0.3359,  1.1875,  0.7070,  0.5195,  0.3164],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0334, -0.0062, -0.0122,  ...,  0.0200,  0.0071, -0.0254],
        [ 0.0048, -0.0156, -0.0056,  ..., -0.0129, -0.0259, -0.0294],
        [ 0.0038,  0.0041, -0.0106,  ...,  0.0223,  0.0049, -0.0047],
        ...,
        [ 0.0220,  0.0232, -0.0022,  ...,  0.0237, -0.0102, -0.0045],
        [ 0.0358, -0.0133, -0.0425,  ..., -0.0097,  0.0109,  0.0049],
        [ 0.0123,  0.0167, -0.0112,  ..., -0.0346, -0.0403, -0.0237]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3145, -0.5938,  0.0752, -0.7500,  0.1924,  1.2578, -0.9766,  0.3359,  1.9453,  0.5156,  0.2676, -0.2158, -0.4434, -0.1670, -0.8320,  1.1484, -0.3125, -0.3477,  0.7852, -0.3027,  0.2207,  0.5273,  0.5312,  0.1582, -0.1826, -0.6094,  1.5234, -0.2559, -0.5625, -0.0918, -0.1709,  0.4297,
        -0.4297,  0.1279,  0.5664, -0.2480,  0.1357, -0.2100, -1.1797, -0.7617,  0.3555, -0.3066, -0.6367,  0.2812, -0.5273,  0.3672, -0.2314,  0.0640, -1.0547, -1.3672,  1.1094,  0.2207,  0.0923, -0.2910,  0.9297,  0.3770, -0.1914, -0.4961,  0.5078,  0.0231,  0.6250, -0.1367,  0.0723, -0.2930],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0139,     -0.5234,      0.7852,      0.0442,     -0.1836,     -0.4492,      0.3594,      0.5156,     -0.2402,      0.2852,      0.3398,     -0.0422,      0.4141,     -0.1807],
        [     0.0000,      0.1260,      0.4824,     -0.3242,      0.0728,      0.2715,     -0.3242,      0.6133,      0.2432,      0.0284,     -0.0547,     -0.2119,     -0.0791,      0.5664,      0.1387],
        [     0.0000,      0.2119,      0.0164,     -0.0096,      0.0566,     -0.0579,      0.2734,     -0.0312,      0.5820,     -0.5000,     -0.0457,     -0.3809,     -0.0248,     -0.0391,      0.1040],
        [     0.0000,      0.1050,      0.2637,      0.0903,      0.3672,     -0.0649,     -0.2500,      0.2246,      0.1455,     -0.1924,     -0.4570,     -0.3223,     -0.5508,      0.4746,     -0.6562],
        [     0.0000,      0.6250,     -0.2471,      0.1260,      0.2734,     -0.3809,     -0.2412,     -0.1494,     -0.7695,      0.1143,      0.0952,      0.4297,      0.1846,     -0.3613,     -0.1318],
        [     0.0000,      0.6914,      0.6992,     -0.5352,     -0.2295,     -0.6016,      0.0250,     -0.0386,     -0.3926,     -0.0659,     -0.1357,     -0.5391,      0.3379,      0.0282,     -0.0645],
        [     0.0000,      0.8281,      0.3457,     -0.1260,      0.3594,     -0.1167,      0.0161,     -0.1216,     -0.2256,     -0.0427,     -0.3633,     -0.5938,      0.5938,      0.1611,      0.1514],
        [     0.0000,     -0.2559,     -0.0962,      0.3613,      0.1338,     -0.2402,      0.1963,      0.3340,      0.3066,      0.2090,      0.4395,      0.4121,     -0.5234,      0.2676,      0.3398],
        [     0.0000,      0.0009,      0.1108,     -0.3809,     -0.2109,     -0.1699,      0.0938,     -0.0493,     -0.4238,      0.2246,      0.0452,     -0.0996,     -0.4473,     -0.2695,      0.0566],
        [     0.0000,      0.2812,      0.6758,      0.0664,      0.0576,      0.0679,      0.3438,     -0.2402,     -0.6406,      0.6172,      0.2402,     -0.4961,      0.2656,      0.1147,      0.0894],
        [     0.0000,      0.4922,     -0.1875,      0.2578,     -0.0991,      0.5469,      0.5781,      0.1216,     -0.2637,     -0.0649,     -0.2773,      0.0339,      0.0952,      0.0267,      0.2715],
        [     0.0000,     -0.0967,     -0.0879,     -0.0635,      0.1963,      0.1475,     -0.2656,      0.2656,     -0.2129,     -0.0786,     -0.1279,      0.2871,     -0.5312,      0.3789,     -0.5312],
        [     0.0000,     -0.3418,     -0.6289,      0.6875,      0.2178,     -0.1670,     -0.0193,      0.0596,      0.5664,     -0.2363,      0.2266,      0.7188,     -0.1611,      0.0957,      0.5156],
        [     0.0000,      0.2334,     -0.2930,      0.0342,      0.3398,      0.2041,     -0.3633,      0.4004,     -0.5508,     -0.2246,     -0.2227,      0.9219,      0.2227,     -0.2178,     -0.1836]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4979],
        [0.3351],
        [0.2389],
        [0.1822],
        [0.1619],
        [0.1404],
        [0.1202],
        [0.1016],
        [0.0938],
        [0.0916],
        [0.0789],
        [0.0744],
        [0.0697],
        [0.0629]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5469, 0.4512, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.3477, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2930, 0.2402, 0.3105, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.2109, 0.2500, 0.1484, 0.2100, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.2236, 0.1836, 0.1611, 0.1777, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1245, 0.1338, 0.1982, 0.1035, 0.2129, 0.1050, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1230, 0.1201, 0.0840, 0.1699, 0.1328, 0.1475, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1172, 0.1143, 0.1338, 0.1206, 0.0903, 0.1045, 0.1157, 0.0986, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.0913, 0.1152, 0.0588, 0.1641, 0.0601, 0.1309, 0.0771, 0.0796, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.0815, 0.0986, 0.0864, 0.1006, 0.0908, 0.0771, 0.1074, 0.0942, 0.1001, 0.0664, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0942, 0.0850, 0.1055, 0.0500, 0.1128, 0.0908, 0.0854, 0.0635, 0.0540, 0.0908, 0.1011, 0.0664, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0991, 0.1406, 0.0542, 0.0938, 0.0527, 0.0737, 0.0767, 0.0449, 0.0613, 0.0874, 0.0854, 0.0608, 0.0000, 0.0000],
        [0.0830, 0.0977, 0.0698, 0.0518, 0.0801, 0.0630, 0.0791, 0.0747, 0.0645, 0.0811, 0.0581, 0.0762, 0.0625, 0.0583, 0.0000],
        [0.0664, 0.0962, 0.0645, 0.0508, 0.0659, 0.0479, 0.0640, 0.0640, 0.0767, 0.0615, 0.0771, 0.0664, 0.0845, 0.0527, 0.0615]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0261, -0.0170,  0.0375,  ..., -0.0022, -0.0070, -0.0221],
        [ 0.0165, -0.0112,  0.0085,  ..., -0.0006, -0.0136, -0.0058],
        [ 0.0051,  0.0308, -0.0007,  ..., -0.0154, -0.0370,  0.0197],
        ...,
        [ 0.0216, -0.0042, -0.0069,  ...,  0.0219,  0.0260,  0.0283],
        [ 0.0251,  0.0032,  0.0162,  ...,  0.0022,  0.0026, -0.0005],
        [ 0.0109, -0.0154, -0.0106,  ...,  0.0237,  0.0068,  0.0083]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9492, -0.0938, -1.0234,  0.0625,  0.1582,  0.3125,  0.8516,  1.2891, -0.6211, -0.2139,  0.8320,  0.5391,  0.0176,  0.6250,  0.1270, -0.8555,  0.3496,  0.0388, -1.0625, -0.0889,  0.1357,  0.5742,  0.2490, -0.4609, -0.8320, -0.2002,  0.3672, -0.7930, -0.4902, -0.2227, -0.5195,  0.5625,
        -0.0240, -0.1138,  0.2480, -0.6641, -0.3164, -0.3535, -0.3223, -0.7422, -0.0425, -0.3809, -0.9570, -1.0312,  1.0156,  0.5664,  0.9414,  0.1953, -0.1147,  0.0640, -0.6953, -0.0977, -0.5859, -0.4648, -0.3691,  0.4551,  0.4629,  0.8438,  0.8750, -0.3496,  0.8242, -1.0078, -0.1582,  0.4121],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0146,  0.0099, -0.0020,  ..., -0.0140,  0.0080,  0.0105],
        [ 0.0188,  0.0023,  0.0090,  ..., -0.0016, -0.0214, -0.0274],
        [ 0.0193,  0.0308,  0.0155,  ...,  0.0333,  0.0220, -0.0160],
        ...,
        [-0.0305, -0.0010, -0.0119,  ..., -0.0173, -0.0109, -0.0500],
        [-0.0200, -0.0077,  0.0141,  ...,  0.0320, -0.0324,  0.0214],
        [-0.0038,  0.0139, -0.0222,  ..., -0.0575, -0.0041, -0.0052]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2598, -0.8203,  0.9219, -0.0061, -0.4160,  0.4727, -0.0083,  0.2246, -0.3223,  0.3574, -0.2539, -0.3379,  0.1807,  0.3672, -0.9570, -0.3164, -0.0259, -0.1128,  0.1250,  0.4883,  0.2754,  1.4453,  0.8477, -0.1758,  0.6680, -0.0439,  0.5508, -0.0522,  1.0234,  0.1348,  0.3770,  0.2090,
         0.4727, -0.0742, -0.3984, -0.0210, -0.8633, -0.4980, -1.3516,  0.7031, -0.3066, -0.1279, -0.4805,  0.1992, -0.5078, -0.4355,  0.0923, -0.5352,  0.3965,  0.2256,  0.6250,  0.5234,  0.0908,  0.2656, -0.1118,  0.1807,  0.4277, -0.2930,  0.0791, -0.4023, -0.4824, -0.7383, -0.1387,  0.4883],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1934, -0.1797, -0.7852, -0.1514, -0.5742, -0.3945, -0.6680, -0.5195, -0.5195, -0.3496, -0.1572, -0.3320, -0.5781, -0.3789],
        [ 0.0000, -0.0037, -0.1377, -0.2344, -0.1396,  0.1455, -0.0396, -0.2715, -0.4746, -0.2637, -0.3848, -0.3496, -0.0557, -0.5312, -0.2119],
        [ 0.0000, -0.2021,  0.0562, -0.6367,  0.2354, -0.1377,  0.0092, -0.4160, -0.4434, -0.1050,  0.0874, -0.1797, -0.5703, -0.3184, -0.3633],
        [ 0.0000,  0.1553,  0.3242, -0.2002,  0.1465,  0.1069, -0.3770, -0.3945, -0.4512, -0.1846,  0.2061,  0.0591,  0.0413, -0.7422, -0.3691],
        [ 0.0000,  0.5156,  0.3184,  0.1885,  0.2832, -0.1079,  0.0854, -0.0129, -0.0140,  0.2988,  0.0608,  0.1133, -0.2012, -0.0356,  0.1289],
        [ 0.0000,  0.0703,  0.4648, -0.1865,  0.5352, -0.1719, -0.0278,  0.0579,  0.0947, -0.2891,  0.1992, -0.0454,  0.0977, -0.1807, -0.2930],
        [ 0.0000, -0.0204, -0.0457, -0.4023,  0.3027,  0.0562,  0.1611, -0.2773, -0.3535, -0.0437, -0.4121, -0.1846,  0.1611, -0.4258, -0.2109],
        [ 0.0000, -0.0261,  0.1367,  0.0294, -0.2578, -0.1157, -0.0097, -0.1699, -0.1123,  0.0160,  0.0175,  0.2344, -0.1787, -0.2715, -0.0142],
        [ 0.0000, -0.3242, -0.0947, -0.7656,  0.2578, -0.7461,  0.0303, -0.4922, -0.4668, -0.2656, -0.2969, -0.4277, -0.1914, -0.1504, -0.5000],
        [ 0.0000, -0.1650,  0.0231, -0.1069,  0.0410, -0.0576, -0.2207,  0.1104, -0.0248,  0.0371, -0.3770, -0.2354,  0.1201, -0.5000,  0.1089],
        [ 0.0000, -0.1040,  0.1108, -0.6328,  0.1787, -0.0364, -0.1021, -0.3984, -0.5586, -0.0413,  0.0703, -0.3535, -0.3359, -0.3965, -0.0864],
        [ 0.0000,  0.3613,  0.7148, -0.2383,  0.3086, -0.2656,  0.0688,  0.1060, -0.4258, -0.1182,  0.2393,  0.2139, -0.1270, -0.1348, -0.0728],
        [ 0.0000,  0.1602, -0.1768, -0.4727, -0.0361, -0.2793, -0.0488, -0.1099, -0.2578, -0.0253, -0.3594, -0.0879, -0.2832, -0.3555,  0.0835],
        [ 0.0000,  0.3691, -0.0283, -0.2676, -0.0081, -0.3262, -0.0359, -0.0342,  0.1426, -0.0742,  0.1523, -0.0020,  0.2412, -0.2305, -0.0762]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5140],
        [0.3384],
        [0.2391],
        [0.1873],
        [0.1593],
        [0.1453],
        [0.1176],
        [0.1101],
        [0.0976],
        [0.0875],
        [0.0766],
        [0.0777],
        [0.0709],
        [0.0699]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.5547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3223, 0.3496, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.2793, 0.2100, 0.2441, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2080, 0.2305, 0.1699, 0.2031, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.1816, 0.1768, 0.1582, 0.1660, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.1436, 0.1504, 0.1660, 0.1118, 0.1680, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1396, 0.1182, 0.1514, 0.1191, 0.1147, 0.1270, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0854, 0.1338, 0.1055, 0.1206, 0.1113, 0.1162, 0.1289, 0.0947, 0.1040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.1260, 0.1143, 0.0957, 0.0879, 0.1191, 0.1021, 0.0942, 0.0796, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.1030, 0.0977, 0.0952, 0.1050, 0.0928, 0.1128, 0.0796, 0.0796, 0.0840, 0.0859, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.1021, 0.0967, 0.1245, 0.0835, 0.0918, 0.0923, 0.0732, 0.0645, 0.0757, 0.0583, 0.0679, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.0742, 0.0737, 0.0786, 0.0981, 0.0645, 0.1162, 0.0728, 0.0552, 0.0776, 0.0854, 0.0679, 0.0688, 0.0000, 0.0000],
        [0.0654, 0.0947, 0.0742, 0.0825, 0.0586, 0.0811, 0.0898, 0.0684, 0.0596, 0.0579, 0.0496, 0.0688, 0.0732, 0.0762, 0.0000],
        [0.0723, 0.0654, 0.0613, 0.0576, 0.0669, 0.0645, 0.0996, 0.0608, 0.0613, 0.0574, 0.0552, 0.0583, 0.0752, 0.0688, 0.0752]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0034, -0.0303, -0.0057,  ...,  0.0097, -0.0058,  0.0037],
        [ 0.0070, -0.0153, -0.0103,  ..., -0.0016, -0.0151, -0.0304],
        [ 0.0294,  0.0490,  0.0026,  ..., -0.0044,  0.0299,  0.0328],
        ...,
        [ 0.0502,  0.0143, -0.0133,  ...,  0.0050,  0.0007,  0.0089],
        [-0.0043,  0.0375, -0.0220,  ...,  0.0098, -0.0030, -0.0212],
        [-0.0358,  0.0031,  0.0150,  ...,  0.0290,  0.0204,  0.0081]], device='cuda:0', requires_grad=True)
K: tensor([-0.0571, -0.0325,  0.5938,  1.1250,  0.0045,  0.9453,  0.0391,  0.4414,  0.5938,  0.1924, -0.0447, -0.2363,  0.2832, -0.8398, -0.2119, -0.6797, -0.0923,  0.5742,  0.1157, -0.4590, -0.2520, -0.1836, -0.8164, -0.2207,  0.1514, -0.2363, -0.3633, -0.0640, -0.0278,  0.7969, -0.0669, -0.2021,
         0.2930,  0.8984,  0.0923,  0.0014, -0.1719,  0.5742, -0.4434, -0.6875, -0.7773, -0.7344,  0.3105, -0.2129, -1.2031, -0.6953,  1.0547,  1.1328,  0.1621,  0.6094, -0.1157, -1.3516, -0.7930,  0.3711,  0.9531,  0.2100, -0.1602,  0.5195,  0.2812, -0.2637,  0.1475, -1.0000,  0.6211, -0.0698],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0321,  0.0038, -0.0030,  ...,  0.0041, -0.0023,  0.0048],
        [ 0.0087, -0.0447,  0.0027,  ..., -0.0101, -0.0189, -0.0102],
        [ 0.0471,  0.0191, -0.0006,  ...,  0.0189,  0.0107, -0.0457],
        ...,
        [-0.0182,  0.0131, -0.0211,  ...,  0.0116, -0.0088,  0.0056],
        [ 0.0252, -0.0355,  0.0320,  ...,  0.0301, -0.0080, -0.0482],
        [-0.0023, -0.0222,  0.0247,  ...,  0.0006,  0.0128, -0.0324]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4062,  0.5742,  0.5352,  0.5078,  0.5625,  0.3867, -0.1377, -0.3652,  0.6211,  0.5547,  0.1602,  0.8594, -0.4648,  1.0547,  0.7734,  0.6445, -0.2520,  0.0879,  0.4570,  0.3223, -0.2910,  0.6172, -0.3516,  0.3066,  0.5273,  0.8086,  0.8125, -0.6719,  0.1592,  0.3809, -0.6016, -0.0300,
        -0.6641,  0.2471,  0.2539,  0.2637, -0.9609, -1.0625,  0.3145, -0.8008,  0.1670, -0.3730,  0.7930, -0.9492,  0.4277,  0.3848,  0.4023,  0.2891, -0.1021, -0.1836, -0.1157,  0.1187, -0.2217,  0.5898,  0.0020, -0.2578,  0.1309, -0.5273,  0.4180,  0.2236, -0.1758,  0.0608,  0.1260, -0.2715],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2188,      0.2734,      0.2891,      0.3086,      0.3301,      0.4219,      0.0933,     -0.3047,     -0.1377,     -0.0801,      0.0723,     -0.2490,     -0.0908,      0.2090],
        [     0.0000,      0.0796,      0.0115,      0.0713,      0.1514,      0.0530,      0.0000,     -0.1992,     -0.3145,     -0.1245,     -0.1904,     -0.2305,     -0.2070,     -0.0077,      0.1328],
        [     0.0000,      0.0474,     -0.2402,     -0.0864,      0.0150,     -0.0525,      0.2227,     -0.1758,     -0.2041,     -0.0547,     -0.4902,     -0.3203,     -0.0928,      0.0069,      0.0010],
        [     0.0000,      0.1025,     -0.1992,     -0.0215,     -0.0986,      0.1060,      0.2754,     -0.0289,     -0.0728,      0.1050,     -0.3184,     -0.0508,      0.0537,      0.0078,      0.2012],
        [     0.0000,      0.2500,      0.2227,      0.1099,      0.1562,      0.2148,      0.1904,     -0.1016,     -0.0608,      0.0549,     -0.2578,     -0.1074,      0.1250,      0.2314,      0.2129],
        [     0.0000,      0.2432,      0.2891,      0.3867,     -0.0060,      0.4004,      0.2676,      0.1064,     -0.0170,      0.1338,     -0.0106,      0.2422,      0.3691,      0.2559,      0.5117],
        [     0.0000,      0.0947,     -0.0698,      0.1768,     -0.0601,     -0.1006,      0.0055,     -0.1992,     -0.2559,     -0.0605,     -0.4355,     -0.2969,     -0.0120,     -0.0850,      0.1914],
        [     0.0000,      0.4473,      0.2119,      0.3477,      0.2637,      0.3086,      0.4141,      0.1050,      0.1982,      0.2695,      0.0374,      0.1631,      0.2617,      0.6133,      0.2930],
        [     0.0000,      0.3789,      0.2832,      0.1069,      0.0215,      0.3242,      0.1709,      0.0913,     -0.0815,      0.0981,     -0.2070,      0.0708,      0.0143,      0.2051,      0.1357],
        [     0.0000,      0.4746,      0.4160,      0.3906,      0.4922,      0.3691,      0.5625,      0.2148,      0.2109,      0.2695,      0.2871,      0.3691,      0.3887,      0.6211,      0.6875],
        [     0.0000,      0.3750,      0.3203,      0.5742,      0.1738,      0.2676,      0.2754,      0.0471,     -0.0850,      0.0742,     -0.1846,     -0.0317,      0.1533,      0.2383,      0.3809],
        [     0.0000,      0.1006,      0.0938,      0.1611,      0.3789,     -0.0398,      0.5469,      0.0815,     -0.1943,      0.1436,      0.2441,      0.0112,      0.0266,      0.2412,      0.3359],
        [     0.0000,      0.3691,      0.1260,      0.2324,     -0.1099,      0.2129,      0.3184,      0.0422,     -0.0952,     -0.1235,     -0.2754,      0.0483,      0.1128,      0.1533,      0.0630],
        [     0.0000,     -0.0967,     -0.1650,     -0.2246,     -0.0747,     -0.1113,      0.3203,     -0.1709,     -0.1641,     -0.2295,     -0.2676,     -0.2148,      0.0437,     -0.0474,      0.0376]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5194],
        [0.3493],
        [0.2497],
        [0.2013],
        [0.1595],
        [0.1357],
        [0.1252],
        [0.1081],
        [0.0928],
        [0.0830],
        [0.0777],
        [0.0815],
        [0.0702],
        [0.0641]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4980, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.3398, 0.3867, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2080, 0.2393, 0.2793, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.1953, 0.2188, 0.2070, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1475, 0.1865, 0.1846, 0.1797, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.1289, 0.1572, 0.1562, 0.1494, 0.1436, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.1138, 0.1377, 0.1338, 0.1270, 0.1211, 0.1270, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0947, 0.1221, 0.1167, 0.1113, 0.1079, 0.1133, 0.1211, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.0874, 0.1084, 0.1035, 0.0981, 0.0952, 0.1045, 0.1074, 0.1089, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0815, 0.0972, 0.0933, 0.0908, 0.0864, 0.0938, 0.0972, 0.1025, 0.1021, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.0742, 0.0898, 0.0854, 0.0801, 0.0796, 0.0840, 0.0889, 0.0928, 0.0884, 0.0723, 0.0933, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.0640, 0.0811, 0.0781, 0.0732, 0.0732, 0.0786, 0.0801, 0.0835, 0.0811, 0.0679, 0.0864, 0.0889, 0.0000, 0.0000],
        [0.0557, 0.0605, 0.0757, 0.0723, 0.0684, 0.0674, 0.0713, 0.0762, 0.0771, 0.0742, 0.0630, 0.0781, 0.0771, 0.0825, 0.0000],
        [0.0500, 0.0610, 0.0703, 0.0693, 0.0654, 0.0613, 0.0640, 0.0703, 0.0718, 0.0679, 0.0564, 0.0742, 0.0698, 0.0737, 0.0747]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0051, -0.0134,  0.0116,  ...,  0.0108, -0.0101,  0.0497],
        [-0.0111, -0.0277,  0.0034,  ...,  0.0018,  0.0031,  0.0089],
        [-0.0079, -0.0122,  0.0036,  ..., -0.0115,  0.0031, -0.0198],
        ...,
        [-0.0159, -0.0046,  0.0046,  ..., -0.0044,  0.0324,  0.0099],
        [ 0.0297, -0.0307,  0.0229,  ...,  0.0306, -0.0056, -0.0290],
        [-0.0073,  0.0060, -0.0490,  ..., -0.0331, -0.0080, -0.0488]], device='cuda:0', requires_grad=True)
K: tensor([-0.9531,  0.3164,  0.3027,  0.2021,  0.2490,  0.5547, -1.0078,  0.0156,  0.2812,  0.4238,  0.7852,  0.2891, -0.2129,  0.5312,  0.5820,  0.0913, -0.1328, -0.6211,  0.2930, -0.5703,  0.3613, -0.1895, -0.5156,  0.3594, -0.3965,  0.2393,  1.1797,  0.5781, -0.0625,  0.4004,  0.2793, -0.1235,
         0.1953, -0.4316, -0.5859,  0.7227, -0.5664,  0.6250, -0.2969, -0.4336,  0.4531, -1.1953,  0.4219, -0.8047,  0.3887,  0.0415,  0.1035,  0.1660, -0.9297, -0.3711,  0.1050,  0.8984,  0.1699,  0.4238, -0.2148,  0.1504, -0.3809, -1.1875, -0.0227, -0.5039,  0.0923, -0.3770,  0.0962, -0.4121],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0025,  0.0269, -0.0020,  ...,  0.0437, -0.0029,  0.0451],
        [-0.0078, -0.0131, -0.0253,  ..., -0.0159,  0.0082, -0.0191],
        [-0.0140, -0.0126, -0.0050,  ..., -0.0100, -0.0210, -0.0073],
        ...,
        [-0.0077, -0.0056,  0.0091,  ...,  0.0174, -0.0052,  0.0248],
        [ 0.0004, -0.0002, -0.0092,  ..., -0.0040,  0.0248,  0.0255],
        [-0.0229, -0.0108, -0.0238,  ...,  0.0152, -0.0121,  0.0107]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3750,  0.5508, -0.4102,  0.6289, -0.4746, -1.1172,  0.1553, -0.1260, -0.2061,  0.8516,  0.2832,  0.0466,  0.2490,  0.1758, -0.2520,  0.3359,  0.2500, -0.2129,  0.2988,  0.1689,  0.3711, -0.2471, -0.0840, -0.3027, -0.9844,  0.3262, -0.0693,  1.4062,  0.2295,  0.7891,  0.0547,  0.0164,
         1.0469,  0.7500, -1.0859,  0.7109, -0.3184, -0.2930,  0.5898,  0.0791, -0.9180,  0.0201,  0.5312,  0.0135, -0.0581,  0.5938,  0.8086, -0.3008,  0.1021, -0.1484, -0.2129,  0.1533, -0.0231,  0.1885,  0.0077, -0.0549,  0.1865, -0.7344, -0.4844, -0.5391,  0.6406, -0.6328, -1.2812, -0.1309],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0080,  0.2617,  0.2910,  0.1855,  0.2393,  0.2451,  0.3359,  0.3770,  0.3379,  0.1777,  0.3965,  0.3145,  0.3984,  0.3770],
        [ 0.0000,  0.2207,  0.3516,  0.3789,  0.3164,  0.2656,  0.3145,  0.3926,  0.4512,  0.3965,  0.1875,  0.4570,  0.3848,  0.4805,  0.4883],
        [ 0.0000,  0.1426,  0.2969,  0.2734,  0.2002,  0.1660,  0.2031,  0.3027,  0.3555,  0.2812,  0.0845,  0.3672,  0.2734,  0.3965,  0.3652],
        [ 0.0000,  0.0684,  0.1846,  0.1289,  0.0771,  0.0364,  0.0737,  0.1719,  0.2246,  0.1377, -0.0322,  0.2188,  0.1562,  0.2656,  0.2070],
        [ 0.0000,  0.1279,  0.3613,  0.3516,  0.3281,  0.2812,  0.3496,  0.3945,  0.4102,  0.4023,  0.2090,  0.4336,  0.4434,  0.4609,  0.4590],
        [ 0.0000,  0.1250,  0.3262,  0.3203,  0.2734,  0.2373,  0.2891,  0.3379,  0.3574,  0.3496,  0.1680,  0.4004,  0.3848,  0.4004,  0.4180],
        [ 0.0000,  0.1348,  0.3262,  0.2988,  0.2432,  0.1982,  0.2432,  0.3359,  0.3652,  0.3125,  0.1133,  0.3848,  0.3359,  0.4238,  0.4062],
        [ 0.0000,  0.0747,  0.3242,  0.2832,  0.2324,  0.2012,  0.2520,  0.3164,  0.3496,  0.3184,  0.1309,  0.3652,  0.3535,  0.4160,  0.3789],
        [ 0.0000,  0.0830,  0.2949,  0.2490,  0.1973,  0.1670,  0.2617,  0.2871,  0.3027,  0.2754,  0.0928,  0.3496,  0.3418,  0.3516,  0.3457],
        [ 0.0000,  0.0850,  0.2598,  0.2227,  0.1953,  0.1465,  0.2236,  0.2598,  0.3164,  0.3105,  0.0752,  0.3652,  0.3555,  0.3711,  0.3242],
        [ 0.0000,  0.0405,  0.2305,  0.1807,  0.1182,  0.1104,  0.1631,  0.2188,  0.2637,  0.2158,  0.0116,  0.2676,  0.2656,  0.3086,  0.2871],
        [ 0.0000,  0.0070,  0.2432,  0.2061,  0.1416,  0.1396,  0.2100,  0.2344,  0.2754,  0.2451,  0.0693,  0.3047,  0.3379,  0.3438,  0.3086],
        [ 0.0000,  0.0845,  0.3047,  0.2617,  0.2070,  0.1875,  0.2471,  0.3145,  0.3262,  0.2891,  0.1196,  0.3379,  0.3281,  0.3906,  0.3613],
        [ 0.0000,  0.1982,  0.3379,  0.3242,  0.2676,  0.2041,  0.2461,  0.3398,  0.3652,  0.3086,  0.1226,  0.3926,  0.3379,  0.3906,  0.3984]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4598],
        [0.2917],
        [0.2179],
        [0.1725],
        [0.1441],
        [0.1235],
        [0.1055],
        [0.0952],
        [0.0853],
        [0.0763],
        [0.0697],
        [0.0654],
        [0.0592],
        [0.0553]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3672, 0.6328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2090, 0.4082, 0.3828, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.2852, 0.2852, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.2207, 0.2197, 0.2168, 0.2129, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1143, 0.1934, 0.1875, 0.1768, 0.1787, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.1719, 0.1631, 0.1533, 0.1523, 0.1328, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.1455, 0.1436, 0.1396, 0.1396, 0.1167, 0.1094, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.1348, 0.1289, 0.1245, 0.1230, 0.1035, 0.0972, 0.1118, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.1245, 0.1182, 0.1133, 0.1133, 0.0928, 0.0859, 0.1011, 0.0952, 0.0864, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.1167, 0.1079, 0.1030, 0.1016, 0.0869, 0.0796, 0.0903, 0.0864, 0.0786, 0.0688, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0544, 0.1025, 0.0996, 0.0962, 0.0967, 0.0801, 0.0752, 0.0869, 0.0825, 0.0752, 0.0688, 0.0820, 0.0000, 0.0000, 0.0000],
        [0.0598, 0.0991, 0.0928, 0.0884, 0.0879, 0.0752, 0.0693, 0.0796, 0.0762, 0.0693, 0.0615, 0.0742, 0.0664, 0.0000, 0.0000],
        [0.0496, 0.0864, 0.0850, 0.0820, 0.0820, 0.0713, 0.0659, 0.0752, 0.0723, 0.0659, 0.0593, 0.0713, 0.0630, 0.0698, 0.0000],
        [0.0500, 0.0850, 0.0801, 0.0781, 0.0771, 0.0659, 0.0610, 0.0698, 0.0664, 0.0608, 0.0535, 0.0664, 0.0581, 0.0645, 0.0635]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0158, -0.0096, -0.0207,  ..., -0.0528,  0.0029,  0.0183],
        [-0.0298,  0.0251,  0.0124,  ...,  0.0024, -0.0294,  0.0286],
        [ 0.0203, -0.0014, -0.0089,  ...,  0.0038,  0.0321, -0.0014],
        ...,
        [ 0.0418,  0.0303, -0.0035,  ..., -0.0083,  0.0165, -0.0143],
        [-0.0052, -0.0009,  0.0083,  ..., -0.0177,  0.0234, -0.0170],
        [-0.0408,  0.0205, -0.0262,  ..., -0.0045,  0.0161, -0.0214]], device='cuda:0', requires_grad=True)
K: tensor([-0.1719,  1.0625,  0.1040, -0.2891, -0.4043,  0.9492,  0.1104,  0.3477,  0.5898, -0.6484, -0.2412,  0.6133,  0.0352, -0.9648, -0.1187, -0.4785,  0.5039, -0.5938,  0.3555,  0.3125, -0.3125,  0.8203,  0.2354,  0.4355, -0.3477, -0.0393, -0.4004, -0.3223,  0.3027,  0.7656,  0.0972, -0.0640,
        -1.3125, -0.2500, -0.7109,  0.2246, -0.4922,  0.2266,  1.2656, -0.3184, -0.1196, -0.1133, -0.3340, -0.8516, -0.0105,  0.8164,  0.5508,  0.3418,  0.8438,  0.4180, -0.1475, -1.4453, -0.1172, -0.5859,  0.1260,  0.7578,  0.2041, -0.0679, -0.4414, -0.4844,  0.5469, -0.6289, -0.0525,  0.4883],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0053,  0.0063, -0.0071,  ...,  0.0202,  0.0097,  0.0089],
        [ 0.0635,  0.0195,  0.0424,  ..., -0.0283, -0.0075,  0.0032],
        [-0.0171, -0.0165,  0.0055,  ..., -0.0041,  0.0217,  0.0129],
        ...,
        [-0.0219, -0.0096,  0.0132,  ...,  0.0185,  0.0067, -0.0079],
        [ 0.0128, -0.0185, -0.0266,  ...,  0.0046,  0.0134, -0.0100],
        [-0.0121,  0.0150,  0.0108,  ...,  0.0159, -0.0252, -0.0055]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9688,  0.6758,  0.4238, -0.2520, -0.3379,  0.4043, -0.2061,  0.4512,  0.3086, -0.2061, -0.0796,  0.1484,  0.0496, -0.4688,  0.1533,  0.0620,  0.1216,  0.8398,  0.0649, -0.2109, -0.1025,  0.1328, -0.3867, -0.3809, -0.6523,  0.1299,  0.3594,  1.1719, -0.5859,  0.8477,  0.3457, -0.0786,
         0.4414,  0.0815, -0.1787,  0.6758, -0.1709, -0.7344, -0.1514,  0.0312, -0.1768,  0.1699, -1.1562,  0.8242, -0.0014, -0.6914,  0.9141,  0.3320,  0.1484,  0.1289,  0.4336, -0.4824,  0.1133, -0.5625, -0.0197,  0.5898, -0.8359,  0.3281, -0.3086, -0.4512, -1.0156,  0.2168, -0.3320, -0.1602],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.5469,  0.4492,  0.3926,  0.3613,  0.2314,  0.1445,  0.2793,  0.2227,  0.1650,  0.0322,  0.2314,  0.0864,  0.1699,  0.1670],
        [ 0.0000,  0.6680,  0.6055,  0.5703,  0.5469,  0.3242,  0.2598,  0.4277,  0.3438,  0.2578,  0.1699,  0.3711,  0.1973,  0.3027,  0.3027],
        [ 0.0000,  0.6641,  0.6602,  0.6445,  0.6406,  0.3848,  0.3301,  0.4922,  0.4102,  0.3223,  0.2461,  0.4473,  0.2676,  0.3770,  0.3965],
        [ 0.0000,  0.5352,  0.5352,  0.5195,  0.5000,  0.2871,  0.2168,  0.3770,  0.3086,  0.2207,  0.1094,  0.3398,  0.1738,  0.2754,  0.2930],
        [ 0.0000,  0.5312,  0.4961,  0.4395,  0.4512,  0.2656,  0.2031,  0.3379,  0.2871,  0.1836,  0.1089,  0.2715,  0.1348,  0.2559,  0.2480],
        [ 0.0000,  0.5156,  0.4629,  0.4004,  0.3945,  0.2520,  0.1807,  0.2930,  0.2500,  0.1602,  0.0486,  0.2324,  0.1206,  0.2119,  0.1963],
        [ 0.0000,  0.5938,  0.5820,  0.5508,  0.5547,  0.3730,  0.3105,  0.4434,  0.3965,  0.3027,  0.2021,  0.3984,  0.2578,  0.3633,  0.3672],
        [ 0.0000,  0.6484,  0.6055,  0.5703,  0.5547,  0.3828,  0.3184,  0.4590,  0.3965,  0.3008,  0.2109,  0.3945,  0.2637,  0.3633,  0.3594],
        [ 0.0000,  0.5703,  0.5195,  0.4746,  0.4746,  0.2754,  0.2002,  0.3613,  0.3008,  0.2041,  0.1182,  0.2949,  0.1602,  0.2656,  0.2637],
        [ 0.0000,  0.3750,  0.2988,  0.2520,  0.2373,  0.0815, -0.0059,  0.1177,  0.0728, -0.0209, -0.1494,  0.0635, -0.0430,  0.0221,  0.0170],
        [ 0.0000,  0.6289,  0.6016,  0.5664,  0.5742,  0.3867,  0.3184,  0.4629,  0.4121,  0.3223,  0.2334,  0.4102,  0.2676,  0.3828,  0.3887],
        [ 0.0000,  0.5078,  0.4414,  0.3906,  0.3828,  0.2275,  0.1465,  0.2871,  0.2461,  0.1504,  0.0305,  0.2197,  0.1074,  0.2119,  0.1875],
        [ 0.0000,  0.5547,  0.5391,  0.5039,  0.5039,  0.3613,  0.2871,  0.4160,  0.3750,  0.2852,  0.1768,  0.3613,  0.2363,  0.3438,  0.3359],
        [ 0.0000,  0.5273,  0.4688,  0.4414,  0.4336,  0.2754,  0.1963,  0.3340,  0.2852,  0.1924,  0.0674,  0.2812,  0.1484,  0.2500,  0.2354]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3838],
        [0.2402],
        [0.1818],
        [0.1453],
        [0.1222],
        [0.1037],
        [0.0923],
        [0.0808],
        [0.0757],
        [0.0704],
        [0.0629],
        [0.0582],
        [0.0529],
        [0.0500]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0118.:0.0119.:0.0106 the:0.0119.:0.0123.:0.0087.:0.0123 the:0.0139)
 the
------
		(.:0.0119.:0.0106 the:0.0119.:0.0123.:0.0087.:0.0123 the:0.0139.:0.0109)
.
 the.
.
.
.
.
.

@ 50 train 9.3893 , allloss: 10.6240, dt: 1249.91ms, fracRes: 0.0060, norm(attn): 0.0620, norm(output): 0.1250, norm(x): 0.1121, norm(y): 0.9997, norm:3.5736, tok/sec: 104864.98, flops:81.67, batch-reuse:1
@ 51 train 9.4075 , allloss: 10.6629, dt: 901.28ms, fracRes: 0.0060, norm(attn): 0.0620, norm(output): 0.1250, norm(x): 0.1107, norm(y): 0.9997, norm:3.3655, tok/sec: 145428.58, flops:113.26, batch-reuse:1
@ 52 train 9.3360 , allloss: 10.6472, dt: 905.23ms, fracRes: 0.0060, norm(attn): 0.0613, norm(output): 0.1245, norm(x): 0.1095, norm(y): 0.9997, norm:3.6506, tok/sec: 144794.71, flops:112.77, batch-reuse:1
@ 53 train 9.3532 , allloss: 10.6909, dt: 881.55ms, fracRes: 0.0060, norm(attn): 0.0605, norm(output): 0.1245, norm(x): 0.1089, norm(y): 0.9997, norm:3.3942, tok/sec: 148684.00, flops:115.80, batch-reuse:1
@ 54 train 9.3207 , allloss: 10.6855, dt: 889.37ms, fracRes: 0.0059, norm(attn): 0.0596, norm(output): 0.1245, norm(x): 0.1081, norm(y): 0.9997, norm:3.3678, tok/sec: 147376.52, flops:114.78, batch-reuse:1
@ 55 train 9.3604 , allloss: 10.7458, dt: 894.96ms, fracRes: 0.0059, norm(attn): 0.0596, norm(output): 0.1235, norm(x): 0.1077, norm(y): 0.9997, norm:3.4626, tok/sec: 146455.33, flops:114.06, batch-reuse:1
@ 56 train 9.2535 , allloss: 10.6171, dt: 902.31ms, fracRes: 0.0059, norm(attn): 0.0596, norm(output): 0.1245, norm(x): 0.1086, norm(y): 0.9997, norm:3.1488, tok/sec: 145263.46, flops:113.13, batch-reuse:1
@ 57 train 9.2213 , allloss: 10.5973, dt: 896.46ms, fracRes: 0.0059, norm(attn): 0.0593, norm(output): 0.1250, norm(x): 0.1091, norm(y): 0.9997, norm:3.4321, tok/sec: 146210.84, flops:113.87, batch-reuse:1
@ 58 train 9.2411 , allloss: 10.6230, dt: 887.50ms, fracRes: 0.0059, norm(attn): 0.0593, norm(output): 0.1250, norm(x): 0.1093, norm(y): 0.9997, norm:3.0963, tok/sec: 147687.51, flops:115.02, batch-reuse:1
@ 59 train 9.1460 , allloss: 10.5750, dt: 907.16ms, fracRes: 0.0059, norm(attn): 0.0588, norm(output): 0.1250, norm(x): 0.1085, norm(y): 0.9997, norm:3.9820, tok/sec: 144486.46, flops:112.53, batch-reuse:1
@ 60 train 9.1619 , allloss: 10.6489, dt: 907.92ms, fracRes: 0.0059, norm(attn): 0.0586, norm(output): 0.1245, norm(x): 0.1075, norm(y): 0.9997, norm:3.3547, tok/sec: 144365.31, flops:112.43, batch-reuse:1
@ 61 train 9.1501 , allloss: 10.6069, dt: 907.25ms, fracRes: 0.0059, norm(attn): 0.0588, norm(output): 0.1250, norm(x): 0.1084, norm(y): 0.9997, norm:2.9305, tok/sec: 144472.03, flops:112.52, batch-reuse:1
@ 62 train 9.1461 , allloss: 10.6393, dt: 910.21ms, fracRes: 0.0059, norm(attn): 0.0588, norm(output): 0.1260, norm(x): 0.1092, norm(y): 0.9997, norm:4.3688, tok/sec: 144001.65, flops:112.15, batch-reuse:1
@ 63 train 9.1189 , allloss: 10.5749, dt: 905.39ms, fracRes: 0.0059, norm(attn): 0.0588, norm(output): 0.1260, norm(x): 0.1096, norm(y): 0.9997, norm:3.7519, tok/sec: 144768.21, flops:112.75, batch-reuse:1
@ 64 train 9.0831 , allloss: 10.5746, dt: 903.18ms, fracRes: 0.0059, norm(attn): 0.0586, norm(output): 0.1260, norm(x): 0.1088, norm(y): 0.9997, norm:2.7358, tok/sec: 145122.85, flops:113.02, batch-reuse:1
@ 65 train 9.1040 , allloss: 10.6372, dt: 901.06ms, fracRes: 0.0059, norm(attn): 0.0583, norm(output): 0.1250, norm(x): 0.1081, norm(y): 0.9997, norm:4.4009, tok/sec: 145463.91, flops:113.29, batch-reuse:1
@ 66 train 9.0928 , allloss: 10.5690, dt: 907.91ms, fracRes: 0.0059, norm(attn): 0.0586, norm(output): 0.1260, norm(x): 0.1093, norm(y): 0.9997, norm:2.8444, tok/sec: 144367.51, flops:112.43, batch-reuse:1
@ 67 train 8.9782 , allloss: 10.4329, dt: 874.02ms, fracRes: 0.0058, norm(attn): 0.0588, norm(output): 0.1289, norm(x): 0.1110, norm(y): 0.9997, norm:3.9784, tok/sec: 149964.92, flops:116.79, batch-reuse:1
@ 68 train 9.0092 , allloss: 10.4711, dt: 890.53ms, fracRes: 0.0058, norm(attn): 0.0586, norm(output): 0.1279, norm(x): 0.1110, norm(y): 0.9997, norm:3.2335, tok/sec: 147184.24, flops:114.63, batch-reuse:1
@ 69 train 8.9480 , allloss: 10.4869, dt: 886.45ms, fracRes: 0.0059, norm(attn): 0.0583, norm(output): 0.1260, norm(x): 0.1090, norm(y): 0.9997, norm:3.0568, tok/sec: 147861.09, flops:115.15, batch-reuse:1
@ 70 train 8.9386 , allloss: 10.5175, dt: 879.13ms, fracRes: 0.0059, norm(attn): 0.0579, norm(output): 0.1260, norm(x): 0.1084, norm(y): 0.9997, norm:3.5062, tok/sec: 149092.10, flops:116.11, batch-reuse:1
@ 71 train 8.9171 , allloss: 10.4250, dt: 881.27ms, fracRes: 0.0058, norm(attn): 0.0583, norm(output): 0.1299, norm(x): 0.1104, norm(y): 0.9997, norm:3.1694, tok/sec: 148730.58, flops:115.83, batch-reuse:1
@ 72 train 8.9141 , allloss: 10.3111, dt: 895.74ms, fracRes: 0.0058, norm(attn): 0.0591, norm(output): 0.1328, norm(x): 0.1131, norm(y): 0.9997, norm:3.0423, tok/sec: 146327.66, flops:113.96, batch-reuse:1
@ 73 train 8.9251 , allloss: 10.2760, dt: 895.72ms, fracRes: 0.0058, norm(attn): 0.0596, norm(output): 0.1328, norm(x): 0.1139, norm(y): 0.9997, norm:2.7779, tok/sec: 146331.33, flops:113.96, batch-reuse:1
@ 74 train 8.8991 , allloss: 10.3099, dt: 895.93ms, fracRes: 0.0058, norm(attn): 0.0586, norm(output): 0.1328, norm(x): 0.1127, norm(y): 0.9997, norm:3.4936, tok/sec: 146296.90, flops:113.94, batch-reuse:1
@ 75 train 9.2268 , allloss: 10.5782, dt: 916.20ms, fracRes: 0.0058, norm(attn): 0.0588, norm(output): 0.1328, norm(x): 0.1127, norm(y): 0.9997, norm:3.6553, tok/sec: 143059.77, flops:111.42, batch-reuse:1
@ 76 train 8.8514 , allloss: 10.3052, dt: 910.58ms, fracRes: 0.0058, norm(attn): 0.0586, norm(output): 0.1328, norm(x): 0.1126, norm(y): 0.9997, norm:3.3920, tok/sec: 143944.07, flops:112.10, batch-reuse:1
@ 77 train 9.1364 , allloss: 10.5268, dt: 894.52ms, fracRes: 0.0058, norm(attn): 0.0596, norm(output): 0.1348, norm(x): 0.1143, norm(y): 0.9997, norm:4.3526, tok/sec: 146527.74, flops:114.12, batch-reuse:1
@ 78 train 8.9402 , allloss: 10.3345, dt: 898.77ms, fracRes: 0.0058, norm(attn): 0.0593, norm(output): 0.1348, norm(x): 0.1145, norm(y): 0.9997, norm:3.2216, tok/sec: 145834.50, flops:113.58, batch-reuse:1
@ 79 train 8.7507 , allloss: 10.2375, dt: 895.25ms, fracRes: 0.0058, norm(attn): 0.0581, norm(output): 0.1338, norm(x): 0.1133, norm(y): 0.9997, norm:3.0406, tok/sec: 146408.25, flops:114.02, batch-reuse:1
@ 80 train 8.7498 , allloss: 10.2634, dt: 904.15ms, fracRes: 0.0059, norm(attn): 0.0579, norm(output): 0.1338, norm(x): 0.1134, norm(y): 0.9997, norm:3.6872, tok/sec: 144966.87, flops:112.90, batch-reuse:1
@ 81 train 8.7610 , allloss: 10.2211, dt: 901.18ms, fracRes: 0.0059, norm(attn): 0.0583, norm(output): 0.1357, norm(x): 0.1149, norm(y): 0.9997, norm:2.3644, tok/sec: 145444.16, flops:113.27, batch-reuse:1
@ 82 train 8.6900 , allloss: 10.1524, dt: 922.00ms, fracRes: 0.0059, norm(attn): 0.0581, norm(output): 0.1387, norm(x): 0.1154, norm(y): 0.9997, norm:2.7600, tok/sec: 142160.46, flops:110.72, batch-reuse:1
@ 83 train 8.6907 , allloss: 10.1886, dt: 889.01ms, fracRes: 0.0059, norm(attn): 0.0576, norm(output): 0.1348, norm(x): 0.1147, norm(y): 0.9997, norm:2.4679, tok/sec: 147436.08, flops:114.82, batch-reuse:1
@ 84 train 8.6873 , allloss: 10.1961, dt: 916.98ms, fracRes: 0.0059, norm(attn): 0.0566, norm(output): 0.1348, norm(x): 0.1143, norm(y): 0.9997, norm:2.4596, tok/sec: 142938.85, flops:111.32, batch-reuse:1
@ 85 train 8.6277 , allloss: 10.0904, dt: 909.49ms, fracRes: 0.0059, norm(attn): 0.0566, norm(output): 0.1387, norm(x): 0.1157, norm(y): 0.9997, norm:2.6502, tok/sec: 144116.14, flops:112.24, batch-reuse:1
@ 86 train 8.5778 , allloss: 9.9536, dt: 919.56ms, fracRes: 0.0059, norm(attn): 0.0581, norm(output): 0.1406, norm(x): 0.1181, norm(y): 0.9997, norm:2.5203, tok/sec: 142538.19, flops:111.01, batch-reuse:1
@ 87 train 8.5945 , allloss: 9.9753, dt: 896.37ms, fracRes: 0.0060, norm(attn): 0.0579, norm(output): 0.1406, norm(x): 0.1179, norm(y): 0.9997, norm:2.3288, tok/sec: 146224.64, flops:113.88, batch-reuse:1
@ 88 train 8.5685 , allloss: 10.0280, dt: 927.66ms, fracRes: 0.0060, norm(attn): 0.0564, norm(output): 0.1396, norm(x): 0.1159, norm(y): 0.9997, norm:2.0186, tok/sec: 141293.51, flops:110.04, batch-reuse:1
@ 89 train 8.5236 , allloss: 9.9773, dt: 899.29ms, fracRes: 0.0060, norm(attn): 0.0554, norm(output): 0.1387, norm(x): 0.1155, norm(y): 0.9997, norm:2.6233, tok/sec: 145750.64, flops:113.51, batch-reuse:1
@ 90 train 8.5360 , allloss: 9.8686, dt: 908.38ms, fracRes: 0.0060, norm(attn): 0.0574, norm(output): 0.1406, norm(x): 0.1178, norm(y): 0.9998, norm:2.3139, tok/sec: 144292.60, flops:112.38, batch-reuse:1
@ 91 train 8.5162 , allloss: 9.8483, dt: 896.07ms, fracRes: 0.0061, norm(attn): 0.0569, norm(output): 0.1416, norm(x): 0.1181, norm(y): 0.9998, norm:2.1608, tok/sec: 146274.40, flops:113.92, batch-reuse:1
@ 92 train 8.4314 , allloss: 9.7803, dt: 908.68ms, fracRes: 0.0061, norm(attn): 0.0557, norm(output): 0.1406, norm(x): 0.1174, norm(y): 0.9998, norm:2.0604, tok/sec: 144244.40, flops:112.34, batch-reuse:1
@ 93 train 8.4550 , allloss: 9.7949, dt: 911.46ms, fracRes: 0.0061, norm(attn): 0.0552, norm(output): 0.1406, norm(x): 0.1167, norm(y): 0.9998, norm:2.1414, tok/sec: 143803.82, flops:111.99, batch-reuse:1
@ 94 train 8.6220 , allloss: 9.8270, dt: 906.57ms, fracRes: 0.0062, norm(attn): 0.0562, norm(output): 0.1416, norm(x): 0.1187, norm(y): 0.9998, norm:2.6050, tok/sec: 144579.37, flops:112.60, batch-reuse:1
@ 95 train 8.4027 , allloss: 9.5807, dt: 907.21ms, fracRes: 0.0062, norm(attn): 0.0576, norm(output): 0.1455, norm(x): 0.1201, norm(y): 0.9998, norm:2.6618, tok/sec: 144477.54, flops:112.52, batch-reuse:1
@ 96 train 8.3053 , allloss: 9.4988, dt: 916.18ms, fracRes: 0.0063, norm(attn): 0.0557, norm(output): 0.1416, norm(x): 0.1191, norm(y): 0.9998, norm:2.1358, tok/sec: 143063.53, flops:111.42, batch-reuse:1
@ 97 train 8.3567 , allloss: 9.5685, dt: 910.55ms, fracRes: 0.0063, norm(attn): 0.0549, norm(output): 0.1406, norm(x): 0.1169, norm(y): 0.9998, norm:3.0216, tok/sec: 143947.77, flops:112.11, batch-reuse:1
@ 98 train 8.3715 , allloss: 9.5540, dt: 899.12ms, fracRes: 0.0063, norm(attn): 0.0552, norm(output): 0.1416, norm(x): 0.1176, norm(y): 0.9998, norm:2.3453, tok/sec: 145777.81, flops:113.53, batch-reuse:1
@ 99 train 8.3110 , allloss: 9.4869, dt: 882.35ms, fracRes: 0.0064, norm(attn): 0.0552, norm(output): 0.1436, norm(x): 0.1189, norm(y): 0.9998, norm:3.2770, tok/sec: 148548.93, flops:115.69, batch-reuse:1
@ 100 train 8.2624 , allloss: 9.4208, dt: 892.88ms, fracRes: 0.0064, norm(attn): 0.0549, norm(output): 0.1426, norm(x): 0.1190, norm(y): 0.9998, norm:2.3961, tok/sec: 146797.44, flops:114.33, batch-reuse:1
@ 101 train 8.1765 , allloss: 9.3449, dt: 915.07ms, fracRes: 0.0064, norm(attn): 0.0544, norm(output): 0.1416, norm(x): 0.1174, norm(y): 0.9998, norm:3.5249, tok/sec: 143236.71, flops:111.55, batch-reuse:1
@ 102 train 8.2248 , allloss: 9.3686, dt: 904.63ms, fracRes: 0.0064, norm(attn): 0.0544, norm(output): 0.1426, norm(x): 0.1180, norm(y): 0.9998, norm:2.7827, tok/sec: 144889.96, flops:112.84, batch-reuse:1
@ 103 train 8.2257 , allloss: 9.3315, dt: 901.19ms, fracRes: 0.0066, norm(attn): 0.0547, norm(output): 0.1455, norm(x): 0.1197, norm(y): 0.9998, norm:2.3490, tok/sec: 145443.55, flops:113.27, batch-reuse:1
@ 104 train 8.2491 , allloss: 9.3319, dt: 894.19ms, fracRes: 0.0066, norm(attn): 0.0547, norm(output): 0.1465, norm(x): 0.1199, norm(y): 0.9998, norm:2.5503, tok/sec: 146581.19, flops:114.16, batch-reuse:1
@ 105 train 8.1862 , allloss: 9.2922, dt: 914.48ms, fracRes: 0.0065, norm(attn): 0.0537, norm(output): 0.1426, norm(x): 0.1186, norm(y): 0.9998, norm:1.9529, tok/sec: 143329.29, flops:111.63, batch-reuse:1
@ 106 train 8.1382 , allloss: 9.2536, dt: 916.21ms, fracRes: 0.0065, norm(attn): 0.0520, norm(output): 0.1416, norm(x): 0.1182, norm(y): 0.9998, norm:2.6337, tok/sec: 143059.03, flops:111.41, batch-reuse:1
@ 107 train 8.1034 , allloss: 9.1464, dt: 913.63ms, fracRes: 0.0066, norm(attn): 0.0535, norm(output): 0.1465, norm(x): 0.1199, norm(y): 0.9999, norm:1.7441, tok/sec: 143462.14, flops:111.73, batch-reuse:1
@ 108 train 8.0844 , allloss: 9.1060, dt: 920.99ms, fracRes: 0.0067, norm(attn): 0.0535, norm(output): 0.1465, norm(x): 0.1207, norm(y): 0.9999, norm:2.3317, tok/sec: 142316.27, flops:110.84, batch-reuse:1
@ 109 train 8.0384 , allloss: 9.0415, dt: 901.96ms, fracRes: 0.0067, norm(attn): 0.0530, norm(output): 0.1465, norm(x): 0.1199, norm(y): 0.9999, norm:1.9445, tok/sec: 145318.91, flops:113.17, batch-reuse:1
@ 110 train 8.0794 , allloss: 9.1295, dt: 913.20ms, fracRes: 0.0066, norm(attn): 0.0513, norm(output): 0.1416, norm(x): 0.1175, norm(y): 0.9999, norm:3.2591, tok/sec: 143530.01, flops:111.78, batch-reuse:1
@ 111 train 8.0361 , allloss: 9.0832, dt: 918.44ms, fracRes: 0.0066, norm(attn): 0.0508, norm(output): 0.1416, norm(x): 0.1175, norm(y): 0.9999, norm:1.8870, tok/sec: 142711.13, flops:111.14, batch-reuse:1
@ 112 train 8.0357 , allloss: 9.0142, dt: 915.30ms, fracRes: 0.0067, norm(attn): 0.0513, norm(output): 0.1465, norm(x): 0.1199, norm(y): 0.9999, norm:2.2750, tok/sec: 143201.56, flops:111.53, batch-reuse:1
@ 113 train 7.9829 , allloss: 8.9329, dt: 894.85ms, fracRes: 0.0067, norm(attn): 0.0513, norm(output): 0.1465, norm(x): 0.1207, norm(y): 0.9999, norm:1.9881, tok/sec: 146473.32, flops:114.07, batch-reuse:1
@ 114 train 7.9752 , allloss: 8.9228, dt: 912.09ms, fracRes: 0.0066, norm(attn): 0.0508, norm(output): 0.1465, norm(x): 0.1195, norm(y): 0.9999, norm:2.0612, tok/sec: 143704.66, flops:111.92, batch-reuse:1
@ 115 train 7.9365 , allloss: 8.8841, dt: 895.14ms, fracRes: 0.0066, norm(attn): 0.0505, norm(output): 0.1436, norm(x): 0.1188, norm(y): 0.9999, norm:2.2449, tok/sec: 146426.50, flops:114.04, batch-reuse:1
@ 116 train 7.9055 , allloss: 8.8118, dt: 907.85ms, fracRes: 0.0066, norm(attn): 0.0505, norm(output): 0.1455, norm(x): 0.1197, norm(y): 0.9999, norm:2.1096, tok/sec: 144376.19, flops:112.44, batch-reuse:1
@ 117 train 7.8813 , allloss: 8.7320, dt: 905.66ms, fracRes: 0.0067, norm(attn): 0.0510, norm(output): 0.1465, norm(x): 0.1210, norm(y): 0.9999, norm:1.9951, tok/sec: 144724.84, flops:112.71, batch-reuse:1
@ 118 train 7.8621 , allloss: 8.6980, dt: 893.72ms, fracRes: 0.0067, norm(attn): 0.0510, norm(output): 0.1465, norm(x): 0.1205, norm(y): 0.9999, norm:1.9667, tok/sec: 146658.92, flops:114.22, batch-reuse:1
@ 119 train 7.8365 , allloss: 8.6986, dt: 913.99ms, fracRes: 0.0066, norm(attn): 0.0498, norm(output): 0.1445, norm(x): 0.1192, norm(y): 0.9999, norm:2.2043, tok/sec: 143405.78, flops:111.68, batch-reuse:1
@ 120 train 7.9551 , allloss: 8.7726, dt: 884.01ms, fracRes: 0.0066, norm(attn): 0.0503, norm(output): 0.1465, norm(x): 0.1199, norm(y): 1.0000, norm:1.7364, tok/sec: 148269.16, flops:115.47, batch-reuse:1
@ 121 train 7.9764 , allloss: 8.7698, dt: 901.41ms, fracRes: 0.0066, norm(attn): 0.0505, norm(output): 0.1465, norm(x): 0.1200, norm(y): 1.0000, norm:1.7175, tok/sec: 145407.62, flops:113.24, batch-reuse:1
@ 122 train 7.9329 , allloss: 8.7052, dt: 903.01ms, fracRes: 0.0066, norm(attn): 0.0505, norm(output): 0.1465, norm(x): 0.1199, norm(y): 1.0000, norm:1.8933, tok/sec: 145150.36, flops:113.04, batch-reuse:1
@ 123 train 7.8164 , allloss: 8.5636, dt: 882.91ms, fracRes: 0.0066, norm(attn): 0.0503, norm(output): 0.1465, norm(x): 0.1203, norm(y): 1.0000, norm:1.6529, tok/sec: 148455.18, flops:115.62, batch-reuse:1
@ 124 train 7.8178 , allloss: 8.5295, dt: 906.57ms, fracRes: 0.0066, norm(attn): 0.0500, norm(output): 0.1475, norm(x): 0.1211, norm(y): 1.0000, norm:1.7776, tok/sec: 144579.86, flops:112.60, batch-reuse:1
@ 125 train 7.8143 , allloss: 8.4977, dt: 906.07ms, fracRes: 0.0066, norm(attn): 0.0500, norm(output): 0.1465, norm(x): 0.1210, norm(y): 1.0000, norm:1.6251, tok/sec: 144660.44, flops:112.66, batch-reuse:1
@ 126 train 7.8108 , allloss: 8.4748, dt: 900.19ms, fracRes: 0.0066, norm(attn): 0.0505, norm(output): 0.1465, norm(x): 0.1205, norm(y): 1.0000, norm:2.3032, tok/sec: 145604.99, flops:113.40, batch-reuse:1
@ 127 train 7.7257 , allloss: 8.3967, dt: 903.47ms, fracRes: 0.0066, norm(attn): 0.0498, norm(output): 0.1465, norm(x): 0.1203, norm(y): 1.0000, norm:1.6886, tok/sec: 145076.05, flops:112.99, batch-reuse:1
@ 128 train 7.6747 , allloss: 8.3752, dt: 905.09ms, fracRes: 0.0066, norm(attn): 0.0479, norm(output): 0.1455, norm(x): 0.1191, norm(y): 1.0000, norm:1.7367, tok/sec: 144817.13, flops:112.78, batch-reuse:1
@ 129 train 7.8188 , allloss: 8.4858, dt: 901.36ms, fracRes: 0.0066, norm(attn): 0.0488, norm(output): 0.1465, norm(x): 0.1197, norm(y): 1.0000, norm:1.9817, tok/sec: 145415.54, flops:113.25, batch-reuse:1
@ 130 train 7.7211 , allloss: 8.3519, dt: 893.93ms, fracRes: 0.0066, norm(attn): 0.0486, norm(output): 0.1475, norm(x): 0.1211, norm(y): 1.0001, norm:1.5063, tok/sec: 146623.99, flops:114.19, batch-reuse:1
@ 131 train 7.7216 , allloss: 8.3393, dt: 884.96ms, fracRes: 0.0066, norm(attn): 0.0488, norm(output): 0.1465, norm(x): 0.1206, norm(y): 1.0001, norm:1.4355, tok/sec: 148110.66, flops:115.35, batch-reuse:1
@ 132 train 7.7104 , allloss: 8.3194, dt: 911.23ms, fracRes: 0.0066, norm(attn): 0.0486, norm(output): 0.1475, norm(x): 0.1207, norm(y): 1.0001, norm:1.6820, tok/sec: 143841.52, flops:112.02, batch-reuse:1
@ 133 train 7.6482 , allloss: 8.2536, dt: 903.72ms, fracRes: 0.0067, norm(attn): 0.0486, norm(output): 0.1475, norm(x): 0.1211, norm(y): 1.0001, norm:1.3922, tok/sec: 145036.17, flops:112.95, batch-reuse:1
@ 134 train 7.6661 , allloss: 8.2600, dt: 906.98ms, fracRes: 0.0067, norm(attn): 0.0483, norm(output): 0.1465, norm(x): 0.1206, norm(y): 1.0001, norm:1.3700, tok/sec: 144514.19, flops:112.55, batch-reuse:1
@ 135 train 7.5737 , allloss: 8.1881, dt: 908.27ms, fracRes: 0.0066, norm(attn): 0.0474, norm(output): 0.1455, norm(x): 0.1191, norm(y): 1.0001, norm:1.4365, tok/sec: 144309.27, flops:112.39, batch-reuse:1
@ 136 train 7.5928 , allloss: 8.1614, dt: 898.13ms, fracRes: 0.0066, norm(attn): 0.0476, norm(output): 0.1465, norm(x): 0.1205, norm(y): 1.0001, norm:1.3223, tok/sec: 145939.03, flops:113.66, batch-reuse:1
@ 137 train 7.4928 , allloss: 8.0496, dt: 907.71ms, fracRes: 0.0066, norm(attn): 0.0479, norm(output): 0.1484, norm(x): 0.1213, norm(y): 1.0002, norm:1.5688, tok/sec: 144398.72, flops:112.46, batch-reuse:1
@ 138 train 7.4586 , allloss: 8.0184, dt: 911.60ms, fracRes: 0.0066, norm(attn): 0.0471, norm(output): 0.1465, norm(x): 0.1200, norm(y): 1.0002, norm:1.4713, tok/sec: 143781.59, flops:111.98, batch-reuse:1
@ 139 train 7.4303 , allloss: 7.9684, dt: 906.65ms, fracRes: 0.0066, norm(attn): 0.0469, norm(output): 0.1465, norm(x): 0.1203, norm(y): 1.0002, norm:1.9325, tok/sec: 144567.09, flops:112.59, batch-reuse:1
@ 140 train 7.4422 , allloss: 7.9961, dt: 913.63ms, fracRes: 0.0067, norm(attn): 0.0469, norm(output): 0.1465, norm(x): 0.1201, norm(y): 1.0002, norm:1.4697, tok/sec: 143462.89, flops:111.73, batch-reuse:1
@ 141 train 7.4371 , allloss: 7.9716, dt: 919.00ms, fracRes: 0.0067, norm(attn): 0.0469, norm(output): 0.1465, norm(x): 0.1201, norm(y): 1.0002, norm:2.3276, tok/sec: 142625.31, flops:111.08, batch-reuse:1
@ 142 train 7.5156 , allloss: 8.0376, dt: 896.30ms, fracRes: 0.0067, norm(attn): 0.0469, norm(output): 0.1475, norm(x): 0.1208, norm(y): 1.0002, norm:1.4177, tok/sec: 146235.96, flops:113.89, batch-reuse:1
@ 143 train 7.4616 , allloss: 7.9694, dt: 905.59ms, fracRes: 0.0067, norm(attn): 0.0469, norm(output): 0.1484, norm(x): 0.1207, norm(y): 1.0002, norm:1.3209, tok/sec: 144736.34, flops:112.72, batch-reuse:1
@ 144 train 7.4188 , allloss: 7.8976, dt: 904.60ms, fracRes: 0.0068, norm(attn): 0.0466, norm(output): 0.1484, norm(x): 0.1214, norm(y): 1.0002, norm:2.0468, tok/sec: 144895.57, flops:112.85, batch-reuse:1
@ 145 train 7.4027 , allloss: 7.8945, dt: 916.20ms, fracRes: 0.0068, norm(attn): 0.0469, norm(output): 0.1494, norm(x): 0.1217, norm(y): 1.0003, norm:1.5624, tok/sec: 143060.52, flops:111.42, batch-reuse:1
@ 146 train 7.5287 , allloss: 8.0342, dt: 921.73ms, fracRes: 0.0067, norm(attn): 0.0464, norm(output): 0.1475, norm(x): 0.1198, norm(y): 1.0003, norm:1.6696, tok/sec: 142202.78, flops:110.75, batch-reuse:1
@ 147 train 7.3978 , allloss: 7.8495, dt: 920.67ms, fracRes: 0.0068, norm(attn): 0.0466, norm(output): 0.1484, norm(x): 0.1212, norm(y): 1.0003, norm:1.5342, tok/sec: 142366.32, flops:110.88, batch-reuse:1
@ 148 train 7.3613 , allloss: 7.8047, dt: 902.59ms, fracRes: 0.0068, norm(attn): 0.0466, norm(output): 0.1504, norm(x): 0.1222, norm(y): 1.0003, norm:1.2431, tok/sec: 145217.07, flops:113.10, batch-reuse:1
@ 149 train 7.2437 , allloss: 7.7302, dt: 896.75ms, fracRes: 0.0067, norm(attn): 0.0442, norm(output): 0.1465, norm(x): 0.1200, norm(y): 1.0003, norm:1.4723, tok/sec: 146162.67, flops:113.83, batch-reuse:1
@ 150 train 7.4429 , allloss: 7.8937, dt: 899.41ms, fracRes: 0.0069, norm(attn): 0.0457, norm(output): 0.1504, norm(x): 0.1206, norm(y): 1.0003, norm:1.3202, tok/sec: 145731.09, flops:113.50, batch-reuse:1
@ 151 train 7.2505 , allloss: 7.6758, dt: 885.27ms, fracRes: 0.0069, norm(attn): 0.0464, norm(output): 0.1504, norm(x): 0.1220, norm(y): 1.0004, norm:1.8633, tok/sec: 148059.16, flops:115.31, batch-reuse:1
@ 152 train 7.2420 , allloss: 7.6534, dt: 903.57ms, fracRes: 0.0068, norm(attn): 0.0454, norm(output): 0.1484, norm(x): 0.1209, norm(y): 1.0004, norm:1.6249, tok/sec: 145059.85, flops:112.97, batch-reuse:1
@ 153 train 7.2221 , allloss: 7.6292, dt: 904.37ms, fracRes: 0.0068, norm(attn): 0.0439, norm(output): 0.1484, norm(x): 0.1211, norm(y): 1.0004, norm:1.8382, tok/sec: 144932.39, flops:112.87, batch-reuse:1
@ 154 train 7.3024 , allloss: 7.6922, dt: 897.91ms, fracRes: 0.0069, norm(attn): 0.0452, norm(output): 0.1514, norm(x): 0.1228, norm(y): 1.0004, norm:1.8828, tok/sec: 145974.02, flops:113.69, batch-reuse:1
@ 155 train 7.3964 , allloss: 7.7497, dt: 895.66ms, fracRes: 0.0069, norm(attn): 0.0461, norm(output): 0.1523, norm(x): 0.1232, norm(y): 1.0004, norm:1.3261, tok/sec: 146341.41, flops:113.97, batch-reuse:1
@ 156 train 7.2623 , allloss: 7.6449, dt: 886.81ms, fracRes: 0.0068, norm(attn): 0.0442, norm(output): 0.1475, norm(x): 0.1205, norm(y): 1.0004, norm:3.4055, tok/sec: 147801.06, flops:115.11, batch-reuse:1
@ 157 train 7.3512 , allloss: 7.7303, dt: 901.27ms, fracRes: 0.0068, norm(attn): 0.0444, norm(output): 0.1504, norm(x): 0.1213, norm(y): 1.0004, norm:1.9127, tok/sec: 145431.08, flops:113.26, batch-reuse:1
@ 158 train 7.3325 , allloss: 7.6939, dt: 898.47ms, fracRes: 0.0070, norm(attn): 0.0459, norm(output): 0.1533, norm(x): 0.1236, norm(y): 1.0005, norm:2.5589, tok/sec: 145884.27, flops:113.62, batch-reuse:1
@ 159 train 7.3506 , allloss: 7.6840, dt: 900.47ms, fracRes: 0.0071, norm(attn): 0.0454, norm(output): 0.1553, norm(x): 0.1249, norm(y): 1.0005, norm:1.9983, tok/sec: 145560.23, flops:113.36, batch-reuse:1
@ 160 train 7.2400 , allloss: 7.5797, dt: 911.27ms, fracRes: 0.0070, norm(attn): 0.0432, norm(output): 0.1533, norm(x): 0.1236, norm(y): 1.0005, norm:1.6024, tok/sec: 143834.26, flops:112.02, batch-reuse:1
@ 161 train 7.2402 , allloss: 7.5917, dt: 904.04ms, fracRes: 0.0069, norm(attn): 0.0427, norm(output): 0.1504, norm(x): 0.1227, norm(y): 1.0005, norm:1.8280, tok/sec: 144984.11, flops:112.91, batch-reuse:1
@ 162 train 7.3293 , allloss: 7.6520, dt: 900.76ms, fracRes: 0.0069, norm(attn): 0.0432, norm(output): 0.1533, norm(x): 0.1238, norm(y): 1.0005, norm:1.1743, tok/sec: 145513.30, flops:113.33, batch-reuse:1
@ 163 train 7.2432 , allloss: 7.5537, dt: 891.37ms, fracRes: 0.0070, norm(attn): 0.0437, norm(output): 0.1553, norm(x): 0.1244, norm(y): 1.0005, norm:1.6289, tok/sec: 147045.00, flops:114.52, batch-reuse:1
@ 164 train 7.1533 , allloss: 7.4796, dt: 898.80ms, fracRes: 0.0071, norm(attn): 0.0427, norm(output): 0.1543, norm(x): 0.1240, norm(y): 1.0005, norm:1.4106, tok/sec: 145830.55, flops:113.57, batch-reuse:1
@ 165 train 7.2448 , allloss: 7.6025, dt: 912.22ms, fracRes: 0.0071, norm(attn): 0.0417, norm(output): 0.1514, norm(x): 0.1229, norm(y): 1.0005, norm:1.5751, tok/sec: 143685.28, flops:111.90, batch-reuse:1
@ 166 train 7.1861 , allloss: 7.5173, dt: 910.60ms, fracRes: 0.0070, norm(attn): 0.0417, norm(output): 0.1533, norm(x): 0.1237, norm(y): 1.0006, norm:2.3729, tok/sec: 143940.23, flops:112.10, batch-reuse:1
@ 167 train 7.1982 , allloss: 7.5107, dt: 902.34ms, fracRes: 0.0071, norm(attn): 0.0422, norm(output): 0.1553, norm(x): 0.1250, norm(y): 1.0006, norm:1.5200, tok/sec: 145257.90, flops:113.13, batch-reuse:1
@ 168 train 7.1148 , allloss: 7.3977, dt: 900.52ms, fracRes: 0.0072, norm(attn): 0.0427, norm(output): 0.1562, norm(x): 0.1267, norm(y): 1.0006, norm:1.3744, tok/sec: 145550.91, flops:113.36, batch-reuse:1
@ 169 train 7.1645 , allloss: 7.4437, dt: 903.37ms, fracRes: 0.0071, norm(attn): 0.0422, norm(output): 0.1553, norm(x): 0.1255, norm(y): 1.0006, norm:1.5015, tok/sec: 145092.86, flops:113.00, batch-reuse:1
@ 170 train 7.1260 , allloss: 7.4395, dt: 904.79ms, fracRes: 0.0070, norm(attn): 0.0405, norm(output): 0.1543, norm(x): 0.1243, norm(y): 1.0006, norm:1.1212, tok/sec: 144864.95, flops:112.82, batch-reuse:1
@ 171 train 7.0900 , allloss: 7.4011, dt: 902.55ms, fracRes: 0.0071, norm(attn): 0.0408, norm(output): 0.1543, norm(x): 0.1239, norm(y): 1.0006, norm:1.2420, tok/sec: 145224.63, flops:113.10, batch-reuse:1
@ 172 train 7.1404 , allloss: 7.4070, dt: 897.17ms, fracRes: 0.0071, norm(attn): 0.0415, norm(output): 0.1553, norm(x): 0.1243, norm(y): 1.0007, norm:1.5638, tok/sec: 146095.63, flops:113.78, batch-reuse:1
@ 173 train 7.1046 , allloss: 7.3720, dt: 892.85ms, fracRes: 0.0070, norm(attn): 0.0405, norm(output): 0.1553, norm(x): 0.1242, norm(y): 1.0007, norm:1.2141, tok/sec: 146801.24, flops:114.33, batch-reuse:1
@ 174 train 7.2624 , allloss: 7.5295, dt: 877.61ms, fracRes: 0.0071, norm(attn): 0.0405, norm(output): 0.1543, norm(x): 0.1237, norm(y): 1.0007, norm:1.2208, tok/sec: 149351.29, flops:116.32, batch-reuse:1
@ 175 train 7.1981 , allloss: 7.4442, dt: 900.05ms, fracRes: 0.0071, norm(attn): 0.0413, norm(output): 0.1553, norm(x): 0.1252, norm(y): 1.0007, norm:2.7450, tok/sec: 145626.94, flops:113.41, batch-reuse:1
@ 176 train 7.1494 , allloss: 7.3726, dt: 892.74ms, fracRes: 0.0072, norm(attn): 0.0420, norm(output): 0.1562, norm(x): 0.1262, norm(y): 1.0007, norm:1.1781, tok/sec: 146819.86, flops:114.34, batch-reuse:1
@ 177 train 7.1048 , allloss: 7.3309, dt: 895.43ms, fracRes: 0.0070, norm(attn): 0.0408, norm(output): 0.1553, norm(x): 0.1256, norm(y): 1.0008, norm:1.0613, tok/sec: 146378.55, flops:114.00, batch-reuse:1
@ 178 train 7.1671 , allloss: 7.3916, dt: 897.91ms, fracRes: 0.0071, norm(attn): 0.0405, norm(output): 0.1553, norm(x): 0.1244, norm(y): 1.0008, norm:1.2377, tok/sec: 145974.10, flops:113.69, batch-reuse:1
@ 179 train 7.0132 , allloss: 7.2536, dt: 903.45ms, fracRes: 0.0071, norm(attn): 0.0405, norm(output): 0.1514, norm(x): 0.1231, norm(y): 1.0008, norm:1.6049, tok/sec: 145079.57, flops:112.99, batch-reuse:1
@ 180 train 7.1691 , allloss: 7.3842, dt: 886.02ms, fracRes: 0.0072, norm(attn): 0.0405, norm(output): 0.1543, norm(x): 0.1239, norm(y): 1.0008, norm:1.3259, tok/sec: 147933.94, flops:115.21, batch-reuse:1
@ 181 train 7.0944 , allloss: 7.3211, dt: 904.72ms, fracRes: 0.0070, norm(attn): 0.0398, norm(output): 0.1543, norm(x): 0.1237, norm(y): 1.0008, norm:1.1613, tok/sec: 144876.13, flops:112.83, batch-reuse:1
@ 182 train 7.1117 , allloss: 7.3269, dt: 897.66ms, fracRes: 0.0070, norm(attn): 0.0393, norm(output): 0.1543, norm(x): 0.1238, norm(y): 1.0008, norm:1.0068, tok/sec: 146016.01, flops:113.72, batch-reuse:1
@ 183 train 7.0613 , allloss: 7.2667, dt: 895.57ms, fracRes: 0.0071, norm(attn): 0.0396, norm(output): 0.1543, norm(x): 0.1246, norm(y): 1.0008, norm:1.2555, tok/sec: 146355.83, flops:113.98, batch-reuse:1
@ 184 train 6.9245 , allloss: 7.1137, dt: 913.57ms, fracRes: 0.0070, norm(attn): 0.0398, norm(output): 0.1543, norm(x): 0.1243, norm(y): 1.0009, norm:1.2344, tok/sec: 143471.54, flops:111.74, batch-reuse:1
@ 185 train 6.9691 , allloss: 7.1559, dt: 924.86ms, fracRes: 0.0069, norm(attn): 0.0398, norm(output): 0.1543, norm(x): 0.1241, norm(y): 1.0009, norm:1.2920, tok/sec: 141720.80, flops:110.37, batch-reuse:1
@ 186 train 7.1705 , allloss: 7.3364, dt: 898.19ms, fracRes: 0.0070, norm(attn): 0.0415, norm(output): 0.1543, norm(x): 0.1239, norm(y): 1.0009, norm:1.0646, tok/sec: 145929.19, flops:113.65, batch-reuse:1
@ 187 train 7.2547 , allloss: 7.4177, dt: 886.87ms, fracRes: 0.0070, norm(attn): 0.0420, norm(output): 0.1553, norm(x): 0.1250, norm(y): 1.0009, norm:1.1859, tok/sec: 147791.01, flops:115.10, batch-reuse:1
@ 188 train 7.0746 , allloss: 7.2521, dt: 891.93ms, fracRes: 0.0070, norm(attn): 0.0400, norm(output): 0.1543, norm(x): 0.1241, norm(y): 1.0009, norm:1.4169, tok/sec: 146953.73, flops:114.45, batch-reuse:1
@ 189 train 7.2008 , allloss: 7.3630, dt: 899.46ms, fracRes: 0.0071, norm(attn): 0.0408, norm(output): 0.1543, norm(x): 0.1242, norm(y): 1.0010, norm:1.4973, tok/sec: 145723.44, flops:113.49, batch-reuse:1
@ 190 train 7.1682 , allloss: 7.3326, dt: 899.95ms, fracRes: 0.0070, norm(attn): 0.0415, norm(output): 0.1553, norm(x): 0.1246, norm(y): 1.0010, norm:1.7893, tok/sec: 145643.87, flops:113.43, batch-reuse:1
@ 191 train 7.1078 , allloss: 7.2601, dt: 899.67ms, fracRes: 0.0069, norm(attn): 0.0415, norm(output): 0.1543, norm(x): 0.1246, norm(y): 1.0010, norm:1.1107, tok/sec: 145688.38, flops:113.46, batch-reuse:1
@ 192 train 7.1739 , allloss: 7.3171, dt: 906.44ms, fracRes: 0.0069, norm(attn): 0.0422, norm(output): 0.1523, norm(x): 0.1231, norm(y): 1.0010, norm:2.0171, tok/sec: 144600.59, flops:112.62, batch-reuse:1
@ 193 train 7.0747 , allloss: 7.2470, dt: 908.56ms, fracRes: 0.0068, norm(attn): 0.0413, norm(output): 0.1504, norm(x): 0.1227, norm(y): 1.0010, norm:2.3428, tok/sec: 144263.67, flops:112.35, batch-reuse:1
@ 194 train 7.2011 , allloss: 7.3561, dt: 900.37ms, fracRes: 0.0071, norm(attn): 0.0415, norm(output): 0.1553, norm(x): 0.1248, norm(y): 1.0011, norm:1.7268, tok/sec: 145575.88, flops:113.38, batch-reuse:1
@ 195 train 7.1447 , allloss: 7.2918, dt: 900.18ms, fracRes: 0.0071, norm(attn): 0.0417, norm(output): 0.1553, norm(x): 0.1258, norm(y): 1.0011, norm:1.2737, tok/sec: 145605.96, flops:113.40, batch-reuse:1
@ 196 train 7.0543 , allloss: 7.2241, dt: 913.86ms, fracRes: 0.0069, norm(attn): 0.0415, norm(output): 0.1533, norm(x): 0.1250, norm(y): 1.0011, norm:1.9957, tok/sec: 143427.29, flops:111.70, batch-reuse:1
@ 197 train 7.0548 , allloss: 7.2212, dt: 907.29ms, fracRes: 0.0068, norm(attn): 0.0405, norm(output): 0.1553, norm(x): 0.1249, norm(y): 1.0011, norm:1.5349, tok/sec: 144465.50, flops:112.51, batch-reuse:1
@ 198 train 7.0112 , allloss: 7.1565, dt: 890.52ms, fracRes: 0.0069, norm(attn): 0.0425, norm(output): 0.1562, norm(x): 0.1263, norm(y): 1.0011, norm:1.0792, tok/sec: 147186.10, flops:114.63, batch-reuse:1
@ 199 train 7.0940 , allloss: 7.2357, dt: 903.45ms, fracRes: 0.0069, norm(attn): 0.0413, norm(output): 0.1553, norm(x): 0.1260, norm(y): 1.0011, norm:1.2253, tok/sec: 145079.03, flops:112.99, batch-reuse:1
@ 200 train 7.1090 , allloss: 7.2542, dt: 903.70ms, fracRes: 0.0068, norm(attn): 0.0413, norm(output): 0.1543, norm(x): 0.1252, norm(y): 1.0012, norm:1.0647, tok/sec: 145038.88, flops:112.96, batch-reuse:1
@ 201 train 7.1009 , allloss: 7.2496, dt: 920.92ms, fracRes: 0.0067, norm(attn): 0.0425, norm(output): 0.1553, norm(x): 0.1250, norm(y): 1.0012, norm:2.1508, tok/sec: 142327.88, flops:110.85, batch-reuse:1
@ 202 train 7.1409 , allloss: 7.2880, dt: 910.64ms, fracRes: 0.0068, norm(attn): 0.0415, norm(output): 0.1543, norm(x): 0.1247, norm(y): 1.0012, norm:0.9112, tok/sec: 143933.63, flops:112.10, batch-reuse:1
@ 203 train 7.1137 , allloss: 7.2624, dt: 888.46ms, fracRes: 0.0067, norm(attn): 0.0413, norm(output): 0.1514, norm(x): 0.1246, norm(y): 1.0012, norm:2.0875, tok/sec: 147526.92, flops:114.89, batch-reuse:1
@ 204 train 7.0801 , allloss: 7.2096, dt: 904.36ms, fracRes: 0.0067, norm(attn): 0.0413, norm(output): 0.1553, norm(x): 0.1257, norm(y): 1.0012, norm:1.1850, tok/sec: 144932.78, flops:112.87, batch-reuse:1
@ 205 train 7.0540 , allloss: 7.1892, dt: 906.82ms, fracRes: 0.0068, norm(attn): 0.0422, norm(output): 0.1553, norm(x): 0.1258, norm(y): 1.0012, norm:0.9829, tok/sec: 144540.63, flops:112.57, batch-reuse:1
@ 206 train 7.0939 , allloss: 7.2301, dt: 900.23ms, fracRes: 0.0068, norm(attn): 0.0405, norm(output): 0.1553, norm(x): 0.1253, norm(y): 1.0013, norm:1.0702, tok/sec: 145598.98, flops:113.39, batch-reuse:1
@ 207 train 6.9704 , allloss: 7.1046, dt: 890.59ms, fracRes: 0.0067, norm(attn): 0.0405, norm(output): 0.1553, norm(x): 0.1258, norm(y): 1.0013, norm:1.5071, tok/sec: 147174.20, flops:114.62, batch-reuse:1
@ 208 train 7.0655 , allloss: 7.1924, dt: 898.87ms, fracRes: 0.0066, norm(attn): 0.0405, norm(output): 0.1553, norm(x): 0.1259, norm(y): 1.0013, norm:1.5912, tok/sec: 145818.56, flops:113.56, batch-reuse:1
@ 209 train 7.0971 , allloss: 7.2291, dt: 906.05ms, fracRes: 0.0066, norm(attn): 0.0408, norm(output): 0.1553, norm(x): 0.1254, norm(y): 1.0013, norm:1.4770, tok/sec: 144663.37, flops:112.66, batch-reuse:1
@ 210 train 7.0353 , allloss: 7.1726, dt: 894.35ms, fracRes: 0.0066, norm(attn): 0.0410, norm(output): 0.1543, norm(x): 0.1252, norm(y): 1.0013, norm:1.1776, tok/sec: 146555.98, flops:114.14, batch-reuse:1
@ 211 train 6.9746 , allloss: 7.1224, dt: 909.12ms, fracRes: 0.0066, norm(attn): 0.0410, norm(output): 0.1553, norm(x): 0.1251, norm(y): 1.0013, norm:1.1731, tok/sec: 144174.20, flops:112.28, batch-reuse:1
@ 212 train 7.0607 , allloss: 7.1959, dt: 918.20ms, fracRes: 0.0067, norm(attn): 0.0415, norm(output): 0.1553, norm(x): 0.1252, norm(y): 1.0013, norm:1.4843, tok/sec: 142749.00, flops:111.17, batch-reuse:1
@ 213 train 6.9425 , allloss: 7.0824, dt: 916.35ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.1553, norm(x): 0.1255, norm(y): 1.0014, norm:1.3819, tok/sec: 143037.55, flops:111.40, batch-reuse:1
@ 214 train 6.9850 , allloss: 7.1057, dt: 901.31ms, fracRes: 0.0066, norm(attn): 0.0400, norm(output): 0.1553, norm(x): 0.1258, norm(y): 1.0014, norm:1.1948, tok/sec: 145424.54, flops:113.26, batch-reuse:1
@ 215 train 6.8972 , allloss: 7.0093, dt: 912.88ms, fracRes: 0.0066, norm(attn): 0.0408, norm(output): 0.1562, norm(x): 0.1268, norm(y): 1.0014, norm:1.3841, tok/sec: 143580.91, flops:111.82, batch-reuse:1
@ 216 train 6.9217 , allloss: 7.0356, dt: 902.63ms, fracRes: 0.0067, norm(attn): 0.0422, norm(output): 0.1562, norm(x): 0.1266, norm(y): 1.0014, norm:1.1150, tok/sec: 145210.66, flops:113.09, batch-reuse:1
@ 217 train 6.9903 , allloss: 7.1198, dt: 893.94ms, fracRes: 0.0066, norm(attn): 0.0403, norm(output): 0.1543, norm(x): 0.1248, norm(y): 1.0014, norm:0.9471, tok/sec: 146622.35, flops:114.19, batch-reuse:1
@ 218 train 6.9610 , allloss: 7.0786, dt: 892.22ms, fracRes: 0.0065, norm(attn): 0.0425, norm(output): 0.1533, norm(x): 0.1247, norm(y): 1.0014, norm:1.9348, tok/sec: 146905.90, flops:114.41, batch-reuse:1
@ 219 train 7.0845 , allloss: 7.1839, dt: 902.93ms, fracRes: 0.0066, norm(attn): 0.0425, norm(output): 0.1553, norm(x): 0.1257, norm(y): 1.0015, norm:1.6105, tok/sec: 145163.16, flops:113.05, batch-reuse:1
@ 220 train 7.0124 , allloss: 7.1189, dt: 901.00ms, fracRes: 0.0067, norm(attn): 0.0432, norm(output): 0.1553, norm(x): 0.1263, norm(y): 1.0015, norm:1.1623, tok/sec: 145473.18, flops:113.30, batch-reuse:1
@ 221 train 7.0089 , allloss: 7.1271, dt: 896.66ms, fracRes: 0.0067, norm(attn): 0.0442, norm(output): 0.1543, norm(x): 0.1252, norm(y): 1.0015, norm:1.5300, tok/sec: 146178.02, flops:113.84, batch-reuse:1
@ 222 train 6.9505 , allloss: 7.0851, dt: 903.09ms, fracRes: 0.0066, norm(attn): 0.0415, norm(output): 0.1543, norm(x): 0.1244, norm(y): 1.0015, norm:2.0158, tok/sec: 145136.87, flops:113.03, batch-reuse:1
@ 223 train 6.9826 , allloss: 7.1007, dt: 895.70ms, fracRes: 0.0068, norm(attn): 0.0430, norm(output): 0.1553, norm(x): 0.1249, norm(y): 1.0015, norm:1.0967, tok/sec: 146335.34, flops:113.97, batch-reuse:1
@ 224 train 6.8940 , allloss: 7.0027, dt: 908.21ms, fracRes: 0.0067, norm(attn): 0.0435, norm(output): 0.1553, norm(x): 0.1260, norm(y): 1.0016, norm:1.5409, tok/sec: 144319.08, flops:112.40, batch-reuse:1
@ 225 train 6.9454 , allloss: 7.0360, dt: 893.73ms, fracRes: 0.0067, norm(attn): 0.0447, norm(output): 0.1562, norm(x): 0.1271, norm(y): 1.0016, norm:1.6132, tok/sec: 146656.97, flops:114.22, batch-reuse:1
@ 226 train 6.9949 , allloss: 7.0881, dt: 885.43ms, fracRes: 0.0068, norm(attn): 0.0449, norm(output): 0.1562, norm(x): 0.1269, norm(y): 1.0016, norm:1.0384, tok/sec: 148031.22, flops:115.29, batch-reuse:1
@ 227 train 6.9759 , allloss: 7.0803, dt: 903.54ms, fracRes: 0.0066, norm(attn): 0.0432, norm(output): 0.1543, norm(x): 0.1254, norm(y): 1.0016, norm:2.6476, tok/sec: 145064.95, flops:112.98, batch-reuse:1
@ 228 train 6.9449 , allloss: 7.0537, dt: 886.97ms, fracRes: 0.0066, norm(attn): 0.0420, norm(output): 0.1533, norm(x): 0.1243, norm(y): 1.0016, norm:1.4642, tok/sec: 147775.52, flops:115.09, batch-reuse:1
@ 229 train 6.9930 , allloss: 7.0962, dt: 904.12ms, fracRes: 0.0066, norm(attn): 0.0430, norm(output): 0.1553, norm(x): 0.1252, norm(y): 1.0016, norm:1.9366, tok/sec: 144972.48, flops:112.91, batch-reuse:1
@ 230 train 6.9753 , allloss: 7.0657, dt: 884.17ms, fracRes: 0.0067, norm(attn): 0.0459, norm(output): 0.1562, norm(x): 0.1265, norm(y): 1.0017, norm:1.2103, tok/sec: 148243.62, flops:115.45, batch-reuse:1
@ 231 train 6.8753 , allloss: 6.9639, dt: 904.89ms, fracRes: 0.0066, norm(attn): 0.0449, norm(output): 0.1562, norm(x): 0.1271, norm(y): 1.0017, norm:1.2027, tok/sec: 144848.92, flops:112.81, batch-reuse:1
@ 232 train 6.8537 , allloss: 6.9423, dt: 897.24ms, fracRes: 0.0068, norm(attn): 0.0444, norm(output): 0.1562, norm(x): 0.1273, norm(y): 1.0017, norm:1.3419, tok/sec: 146083.79, flops:113.77, batch-reuse:1
@ 233 train 6.9396 , allloss: 7.0335, dt: 899.42ms, fracRes: 0.0067, norm(attn): 0.0432, norm(output): 0.1562, norm(x): 0.1271, norm(y): 1.0017, norm:1.2091, tok/sec: 145730.08, flops:113.50, batch-reuse:1
@ 234 train 6.7526 , allloss: 6.8442, dt: 906.74ms, fracRes: 0.0065, norm(attn): 0.0444, norm(output): 0.1553, norm(x): 0.1268, norm(y): 1.0017, norm:1.8004, tok/sec: 144552.98, flops:112.58, batch-reuse:1
@ 235 train 6.9200 , allloss: 7.0072, dt: 915.37ms, fracRes: 0.0067, norm(attn): 0.0425, norm(output): 0.1553, norm(x): 0.1262, norm(y): 1.0017, norm:1.4010, tok/sec: 143190.78, flops:111.52, batch-reuse:1
@ 236 train 6.7723 , allloss: 6.8636, dt: 923.64ms, fracRes: 0.0066, norm(attn): 0.0420, norm(output): 0.1553, norm(x): 0.1259, norm(y): 1.0017, norm:1.6273, tok/sec: 141907.44, flops:110.52, batch-reuse:1
@ 237 train 6.8786 , allloss: 6.9683, dt: 927.88ms, fracRes: 0.0067, norm(attn): 0.0422, norm(output): 0.1553, norm(x): 0.1262, norm(y): 1.0018, norm:1.2294, tok/sec: 141259.49, flops:110.01, batch-reuse:1
@ 238 train 6.8365 , allloss: 6.9233, dt: 885.27ms, fracRes: 0.0066, norm(attn): 0.0435, norm(output): 0.1562, norm(x): 0.1270, norm(y): 1.0018, norm:1.2820, tok/sec: 148059.44, flops:115.31, batch-reuse:1
@ 239 train 6.8419 , allloss: 6.9278, dt: 903.48ms, fracRes: 0.0066, norm(attn): 0.0432, norm(output): 0.1562, norm(x): 0.1270, norm(y): 1.0018, norm:1.2825, tok/sec: 145075.01, flops:112.98, batch-reuse:1
@ 240 train 6.9219 , allloss: 7.0194, dt: 896.01ms, fracRes: 0.0066, norm(attn): 0.0454, norm(output): 0.1562, norm(x): 0.1272, norm(y): 1.0018, norm:1.5098, tok/sec: 146284.48, flops:113.93, batch-reuse:1
@ 241 train 6.8624 , allloss: 6.9520, dt: 919.18ms, fracRes: 0.0065, norm(attn): 0.0435, norm(output): 0.1553, norm(x): 0.1266, norm(y): 1.0018, norm:0.8053, tok/sec: 142596.19, flops:111.05, batch-reuse:1
@ 242 train 6.8697 , allloss: 6.9516, dt: 922.77ms, fracRes: 0.0066, norm(attn): 0.0439, norm(output): 0.1553, norm(x): 0.1269, norm(y): 1.0018, norm:1.1093, tok/sec: 142041.60, flops:110.62, batch-reuse:1
@ 243 train 6.7089 , allloss: 6.7871, dt: 933.74ms, fracRes: 0.0066, norm(attn): 0.0425, norm(output): 0.1553, norm(x): 0.1271, norm(y): 1.0019, norm:1.2205, tok/sec: 140372.92, flops:109.32, batch-reuse:1
@ 244 train 6.9269 , allloss: 6.9976, dt: 906.39ms, fracRes: 0.0067, norm(attn): 0.0461, norm(output): 0.1562, norm(x): 0.1274, norm(y): 1.0019, norm:2.0207, tok/sec: 144608.92, flops:112.62, batch-reuse:1
@ 245 train 6.7157 , allloss: 6.7892, dt: 909.46ms, fracRes: 0.0066, norm(attn): 0.0439, norm(output): 0.1562, norm(x): 0.1277, norm(y): 1.0019, norm:1.2623, tok/sec: 144120.71, flops:112.24, batch-reuse:1
@ 246 train 6.9790 , allloss: 7.0482, dt: 893.63ms, fracRes: 0.0066, norm(attn): 0.0469, norm(output): 0.1553, norm(x): 0.1270, norm(y): 1.0019, norm:2.2823, tok/sec: 146673.71, flops:114.23, batch-reuse:1
@ 247 train 6.8473 , allloss: 6.9053, dt: 907.32ms, fracRes: 0.0066, norm(attn): 0.0457, norm(output): 0.1562, norm(x): 0.1267, norm(y): 1.0019, norm:2.0638, tok/sec: 144461.36, flops:112.51, batch-reuse:1
@ 248 train 6.7958 , allloss: 6.8657, dt: 902.40ms, fracRes: 0.0066, norm(attn): 0.0471, norm(output): 0.1562, norm(x): 0.1278, norm(y): 1.0019, norm:1.7011, tok/sec: 145247.96, flops:113.12, batch-reuse:1
@ 249 train 6.7424 , allloss: 6.8124, dt: 892.09ms, fracRes: 0.0066, norm(attn): 0.0466, norm(output): 0.1562, norm(x): 0.1281, norm(y): 1.0020, norm:1.5443, tok/sec: 146927.46, flops:114.43, batch-reuse:1
@ 250 train 6.7999 , allloss: 6.8628, dt: 900.61ms, fracRes: 0.0066, norm(attn): 0.0459, norm(output): 0.1562, norm(x): 0.1272, norm(y): 1.0020, norm:1.7390, tok/sec: 145536.11, flops:113.34, batch-reuse:1
@ 251 train 6.7040 , allloss: 6.7687, dt: 888.95ms, fracRes: 0.0066, norm(attn): 0.0452, norm(output): 0.1562, norm(x): 0.1274, norm(y): 1.0020, norm:0.9361, tok/sec: 147445.96, flops:114.83, batch-reuse:1
@ 252 train 6.8838 , allloss: 6.9532, dt: 892.11ms, fracRes: 0.0065, norm(attn): 0.0483, norm(output): 0.1562, norm(x): 0.1279, norm(y): 1.0020, norm:1.0990, tok/sec: 146923.49, flops:114.42, batch-reuse:1
@ 253 train 6.7261 , allloss: 6.7885, dt: 911.38ms, fracRes: 0.0064, norm(attn): 0.0459, norm(output): 0.1553, norm(x): 0.1276, norm(y): 1.0020, norm:1.2245, tok/sec: 143817.40, flops:112.01, batch-reuse:1
@ 254 train 6.6651 , allloss: 6.7220, dt: 910.70ms, fracRes: 0.0065, norm(attn): 0.0447, norm(output): 0.1562, norm(x): 0.1278, norm(y): 1.0020, norm:0.8849, tok/sec: 143924.52, flops:112.09, batch-reuse:1
@ 255 train 6.6872 , allloss: 6.7409, dt: 911.09ms, fracRes: 0.0066, norm(attn): 0.0461, norm(output): 0.1562, norm(x): 0.1281, norm(y): 1.0021, norm:1.0864, tok/sec: 143863.54, flops:112.04, batch-reuse:1
@ 256 train 6.7220 , allloss: 6.7702, dt: 882.71ms, fracRes: 0.0067, norm(attn): 0.0457, norm(output): 0.1553, norm(x): 0.1277, norm(y): 1.0021, norm:0.9785, tok/sec: 148488.02, flops:115.64, batch-reuse:1
@ 257 train 6.7715 , allloss: 6.8218, dt: 902.90ms, fracRes: 0.0067, norm(attn): 0.0476, norm(output): 0.1562, norm(x): 0.1283, norm(y): 1.0021, norm:0.8841, tok/sec: 145168.03, flops:113.06, batch-reuse:1
@ 258 train 6.7006 , allloss: 6.7551, dt: 908.81ms, fracRes: 0.0066, norm(attn): 0.0469, norm(output): 0.1553, norm(x): 0.1278, norm(y): 1.0021, norm:1.5031, tok/sec: 144223.78, flops:112.32, batch-reuse:1
@ 259 train 6.7019 , allloss: 6.7546, dt: 901.42ms, fracRes: 0.0065, norm(attn): 0.0479, norm(output): 0.1553, norm(x): 0.1272, norm(y): 1.0021, norm:1.0330, tok/sec: 145406.81, flops:113.24, batch-reuse:1
@ 260 train 6.8023 , allloss: 6.8504, dt: 919.35ms, fracRes: 0.0066, norm(attn): 0.0493, norm(output): 0.1562, norm(x): 0.1277, norm(y): 1.0021, norm:1.1127, tok/sec: 142571.01, flops:111.03, batch-reuse:1
@ 261 train 6.7241 , allloss: 6.7694, dt: 914.72ms, fracRes: 0.0066, norm(attn): 0.0479, norm(output): 0.1553, norm(x): 0.1274, norm(y): 1.0022, norm:0.9420, tok/sec: 143292.49, flops:111.60, batch-reuse:1
@ 262 train 6.7973 , allloss: 6.8443, dt: 905.31ms, fracRes: 0.0066, norm(attn): 0.0488, norm(output): 0.1562, norm(x): 0.1273, norm(y): 1.0022, norm:1.9750, tok/sec: 144781.05, flops:112.76, batch-reuse:1
@ 263 train 6.7512 , allloss: 6.8081, dt: 921.50ms, fracRes: 0.0066, norm(attn): 0.0491, norm(output): 0.1553, norm(x): 0.1278, norm(y): 1.0022, norm:2.0181, tok/sec: 142237.18, flops:110.77, batch-reuse:1
@ 264 train 6.7115 , allloss: 6.7585, dt: 923.30ms, fracRes: 0.0067, norm(attn): 0.0491, norm(output): 0.1562, norm(x): 0.1281, norm(y): 1.0022, norm:1.2812, tok/sec: 141959.77, flops:110.56, batch-reuse:1
@ 265 train 6.7079 , allloss: 6.7492, dt: 886.74ms, fracRes: 0.0066, norm(attn): 0.0498, norm(output): 0.1553, norm(x): 0.1279, norm(y): 1.0022, norm:1.7970, tok/sec: 147814.02, flops:115.12, batch-reuse:1
@ 266 train 6.6782 , allloss: 6.7191, dt: 894.04ms, fracRes: 0.0065, norm(attn): 0.0488, norm(output): 0.1562, norm(x): 0.1282, norm(y): 1.0022, norm:1.1902, tok/sec: 146605.93, flops:114.18, batch-reuse:1
@ 267 train 6.6871 , allloss: 6.7290, dt: 894.99ms, fracRes: 0.0065, norm(attn): 0.0488, norm(output): 0.1562, norm(x): 0.1286, norm(y): 1.0022, norm:1.3397, tok/sec: 146451.12, flops:114.06, batch-reuse:1
@ 268 train 6.7548 , allloss: 6.7957, dt: 901.40ms, fracRes: 0.0065, norm(attn): 0.0498, norm(output): 0.1562, norm(x): 0.1286, norm(y): 1.0023, norm:1.2468, tok/sec: 145408.93, flops:113.24, batch-reuse:1
@ 269 train 6.6994 , allloss: 6.7369, dt: 892.26ms, fracRes: 0.0065, norm(attn): 0.0486, norm(output): 0.1553, norm(x): 0.1282, norm(y): 1.0023, norm:1.5368, tok/sec: 146898.40, flops:114.41, batch-reuse:1
@ 270 train 6.7866 , allloss: 6.8223, dt: 888.60ms, fracRes: 0.0066, norm(attn): 0.0471, norm(output): 0.1553, norm(x): 0.1279, norm(y): 1.0023, norm:1.3881, tok/sec: 147503.60, flops:114.88, batch-reuse:1
@ 271 train 6.6428 , allloss: 6.6820, dt: 900.69ms, fracRes: 0.0066, norm(attn): 0.0505, norm(output): 0.1572, norm(x): 0.1290, norm(y): 1.0023, norm:1.1077, tok/sec: 145523.51, flops:113.33, batch-reuse:1
@ 272 train 6.6754 , allloss: 6.7120, dt: 902.69ms, fracRes: 0.0067, norm(attn): 0.0486, norm(output): 0.1572, norm(x): 0.1294, norm(y): 1.0023, norm:1.3332, tok/sec: 145202.00, flops:113.08, batch-reuse:1
@ 273 train 6.8111 , allloss: 6.8469, dt: 895.36ms, fracRes: 0.0066, norm(attn): 0.0532, norm(output): 0.1562, norm(x): 0.1293, norm(y): 1.0023, norm:1.2723, tok/sec: 146390.55, flops:114.01, batch-reuse:1
@ 274 train 6.6798 , allloss: 6.7169, dt: 910.22ms, fracRes: 0.0066, norm(attn): 0.0488, norm(output): 0.1562, norm(x): 0.1289, norm(y): 1.0023, norm:1.6114, tok/sec: 143999.99, flops:112.15, batch-reuse:1
@ 275 train 6.6532 , allloss: 6.6891, dt: 905.71ms, fracRes: 0.0066, norm(attn): 0.0483, norm(output): 0.1572, norm(x): 0.1294, norm(y): 1.0024, norm:1.2832, tok/sec: 144716.87, flops:112.71, batch-reuse:1
@ 276 train 6.6436 , allloss: 6.6770, dt: 908.09ms, fracRes: 0.0067, norm(attn): 0.0496, norm(output): 0.1572, norm(x): 0.1296, norm(y): 1.0024, norm:0.9586, tok/sec: 144337.87, flops:112.41, batch-reuse:1
@ 277 train 6.5081 , allloss: 6.5444, dt: 898.11ms, fracRes: 0.0066, norm(attn): 0.0500, norm(output): 0.1572, norm(x): 0.1295, norm(y): 1.0024, norm:1.1411, tok/sec: 145941.82, flops:113.66, batch-reuse:1
@ 278 train 6.6528 , allloss: 6.6870, dt: 903.46ms, fracRes: 0.0065, norm(attn): 0.0508, norm(output): 0.1562, norm(x): 0.1291, norm(y): 1.0024, norm:1.6490, tok/sec: 145077.54, flops:112.99, batch-reuse:1
@ 279 train 6.5736 , allloss: 6.6041, dt: 902.75ms, fracRes: 0.0065, norm(attn): 0.0493, norm(output): 0.1562, norm(x): 0.1291, norm(y): 1.0024, norm:0.9253, tok/sec: 145192.45, flops:113.08, batch-reuse:1
@ 280 train 6.7158 , allloss: 6.7550, dt: 902.80ms, fracRes: 0.0064, norm(attn): 0.0549, norm(output): 0.1562, norm(x): 0.1294, norm(y): 1.0024, norm:1.6350, tok/sec: 145184.13, flops:113.07, batch-reuse:1
@ 281 train 6.5784 , allloss: 6.6122, dt: 892.58ms, fracRes: 0.0065, norm(attn): 0.0496, norm(output): 0.1562, norm(x): 0.1294, norm(y): 1.0024, norm:1.5096, tok/sec: 146846.69, flops:114.36, batch-reuse:1
@ 282 train 6.5454 , allloss: 6.5717, dt: 909.73ms, fracRes: 0.0066, norm(attn): 0.0513, norm(output): 0.1572, norm(x): 0.1297, norm(y): 1.0025, norm:1.1853, tok/sec: 144077.20, flops:112.21, batch-reuse:1
@ 283 train 6.5037 , allloss: 6.5300, dt: 921.59ms, fracRes: 0.0065, norm(attn): 0.0535, norm(output): 0.1572, norm(x): 0.1304, norm(y): 1.0025, norm:0.9240, tok/sec: 142223.20, flops:110.76, batch-reuse:1
@ 284 train 6.6052 , allloss: 6.6339, dt: 912.13ms, fracRes: 0.0066, norm(attn): 0.0532, norm(output): 0.1572, norm(x): 0.1301, norm(y): 1.0025, norm:0.9692, tok/sec: 143699.51, flops:111.91, batch-reuse:1
@ 285 train 6.6079 , allloss: 6.6321, dt: 902.02ms, fracRes: 0.0067, norm(attn): 0.0510, norm(output): 0.1562, norm(x): 0.1292, norm(y): 1.0025, norm:1.0567, tok/sec: 145308.88, flops:113.17, batch-reuse:1
@ 286 train 6.6153 , allloss: 6.6427, dt: 917.85ms, fracRes: 0.0066, norm(attn): 0.0527, norm(output): 0.1572, norm(x): 0.1293, norm(y): 1.0025, norm:0.9077, tok/sec: 142804.03, flops:111.22, batch-reuse:1
@ 287 train 6.6217 , allloss: 6.6458, dt: 904.26ms, fracRes: 0.0066, norm(attn): 0.0522, norm(output): 0.1572, norm(x): 0.1297, norm(y): 1.0025, norm:0.9297, tok/sec: 144950.09, flops:112.89, batch-reuse:1
@ 288 train 6.6097 , allloss: 6.6347, dt: 927.45ms, fracRes: 0.0067, norm(attn): 0.0557, norm(output): 0.1572, norm(x): 0.1301, norm(y): 1.0026, norm:1.1298, tok/sec: 141325.40, flops:110.06, batch-reuse:1
@ 289 train 6.6038 , allloss: 6.6296, dt: 897.34ms, fracRes: 0.0066, norm(attn): 0.0525, norm(output): 0.1562, norm(x): 0.1296, norm(y): 1.0026, norm:1.4600, tok/sec: 146066.83, flops:113.76, batch-reuse:1
@ 290 train 6.5789 , allloss: 6.6018, dt: 898.28ms, fracRes: 0.0066, norm(attn): 0.0537, norm(output): 0.1562, norm(x): 0.1300, norm(y): 1.0026, norm:1.2033, tok/sec: 145913.89, flops:113.64, batch-reuse:1
@ 291 train 6.4765 , allloss: 6.4950, dt: 914.29ms, fracRes: 0.0067, norm(attn): 0.0559, norm(output): 0.1572, norm(x): 0.1297, norm(y): 1.0026, norm:1.0081, tok/sec: 143359.00, flops:111.65, batch-reuse:1
@ 292 train 6.5292 , allloss: 6.5470, dt: 914.44ms, fracRes: 0.0067, norm(attn): 0.0564, norm(output): 0.1572, norm(x): 0.1298, norm(y): 1.0026, norm:1.3796, tok/sec: 143335.41, flops:111.63, batch-reuse:1
@ 293 train 6.5939 , allloss: 6.6149, dt: 900.22ms, fracRes: 0.0067, norm(attn): 0.0564, norm(output): 0.1562, norm(x): 0.1294, norm(y): 1.0026, norm:1.1890, tok/sec: 145599.71, flops:113.39, batch-reuse:1
@ 294 train 6.5689 , allloss: 6.5919, dt: 921.46ms, fracRes: 0.0066, norm(attn): 0.0547, norm(output): 0.1572, norm(x): 0.1298, norm(y): 1.0026, norm:1.4962, tok/sec: 142243.73, flops:110.78, batch-reuse:1
@ 295 train 6.5850 , allloss: 6.6067, dt: 917.19ms, fracRes: 0.0066, norm(attn): 0.0552, norm(output): 0.1572, norm(x): 0.1300, norm(y): 1.0026, norm:0.9328, tok/sec: 142905.33, flops:111.30, batch-reuse:1
@ 296 train 6.4574 , allloss: 6.4791, dt: 902.35ms, fracRes: 0.0065, norm(attn): 0.0552, norm(output): 0.1562, norm(x): 0.1306, norm(y): 1.0027, norm:1.2037, tok/sec: 145256.82, flops:113.13, batch-reuse:1
@ 297 train 6.4495 , allloss: 6.4669, dt: 908.90ms, fracRes: 0.0067, norm(attn): 0.0569, norm(output): 0.1572, norm(x): 0.1312, norm(y): 1.0027, norm:1.5855, tok/sec: 144209.86, flops:112.31, batch-reuse:1
@ 298 train 6.5624 , allloss: 6.5782, dt: 890.03ms, fracRes: 0.0067, norm(attn): 0.0591, norm(output): 0.1582, norm(x): 0.1316, norm(y): 1.0027, norm:1.3046, tok/sec: 147266.13, flops:114.69, batch-reuse:1
@ 299 train 6.5327 , allloss: 6.5506, dt: 917.69ms, fracRes: 0.0066, norm(attn): 0.0547, norm(output): 0.1572, norm(x): 0.1310, norm(y): 1.0027, norm:0.9356, tok/sec: 142827.85, flops:111.23, batch-reuse:1
@ 300 train 6.4949 , allloss: 6.5149, dt: 920.30ms, fracRes: 0.0066, norm(attn): 0.0540, norm(output): 0.1572, norm(x): 0.1309, norm(y): 1.0027, norm:1.1259, tok/sec: 142422.46, flops:110.92, batch-reuse:1
@ 301 train 6.6740 , allloss: 6.6966, dt: 899.72ms, fracRes: 0.0066, norm(attn): 0.0586, norm(output): 0.1582, norm(x): 0.1315, norm(y): 1.0027, norm:1.1080, tok/sec: 145680.54, flops:113.46, batch-reuse:1
@ 302 train 6.5003 , allloss: 6.5165, dt: 909.32ms, fracRes: 0.0067, norm(attn): 0.0574, norm(output): 0.1572, norm(x): 0.1313, norm(y): 1.0028, norm:1.5314, tok/sec: 144143.54, flops:112.26, batch-reuse:1
@ 303 train 6.5157 , allloss: 6.5329, dt: 897.26ms, fracRes: 0.0067, norm(attn): 0.0569, norm(output): 0.1572, norm(x): 0.1310, norm(y): 1.0028, norm:0.8622, tok/sec: 146080.34, flops:113.77, batch-reuse:1
@ 304 train 6.4885 , allloss: 6.5072, dt: 904.47ms, fracRes: 0.0066, norm(attn): 0.0581, norm(output): 0.1572, norm(x): 0.1307, norm(y): 1.0028, norm:1.2587, tok/sec: 144915.89, flops:112.86, batch-reuse:1
@ 305 train 6.4255 , allloss: 6.4391, dt: 894.86ms, fracRes: 0.0069, norm(attn): 0.0593, norm(output): 0.1572, norm(x): 0.1309, norm(y): 1.0028, norm:1.2215, tok/sec: 146471.41, flops:114.07, batch-reuse:1
@ 306 train 6.4387 , allloss: 6.4530, dt: 891.63ms, fracRes: 0.0070, norm(attn): 0.0605, norm(output): 0.1582, norm(x): 0.1310, norm(y): 1.0028, norm:1.2633, tok/sec: 147002.61, flops:114.49, batch-reuse:1
@ 307 train 6.6261 , allloss: 6.6417, dt: 893.11ms, fracRes: 0.0069, norm(attn): 0.0608, norm(output): 0.1582, norm(x): 0.1317, norm(y): 1.0028, norm:1.4537, tok/sec: 146759.35, flops:114.30, batch-reuse:1
@ 308 train 6.4662 , allloss: 6.4808, dt: 906.33ms, fracRes: 0.0069, norm(attn): 0.0564, norm(output): 0.1572, norm(x): 0.1312, norm(y): 1.0028, norm:1.2979, tok/sec: 144617.78, flops:112.63, batch-reuse:1
@ 309 train 6.5143 , allloss: 6.5269, dt: 896.43ms, fracRes: 0.0070, norm(attn): 0.0601, norm(output): 0.1572, norm(x): 0.1312, norm(y): 1.0029, norm:1.7378, tok/sec: 146215.19, flops:113.87, batch-reuse:1
@ 310 train 6.5661 , allloss: 6.5792, dt: 900.23ms, fracRes: 0.0070, norm(attn): 0.0618, norm(output): 0.1582, norm(x): 0.1319, norm(y): 1.0029, norm:1.5401, tok/sec: 145598.55, flops:113.39, batch-reuse:1
@ 311 train 6.5826 , allloss: 6.5961, dt: 900.43ms, fracRes: 0.0071, norm(attn): 0.0581, norm(output): 0.1572, norm(x): 0.1313, norm(y): 1.0029, norm:1.1332, tok/sec: 145566.67, flops:113.37, batch-reuse:1
@ 312 train 6.6510 , allloss: 6.6657, dt: 895.69ms, fracRes: 0.0070, norm(attn): 0.0593, norm(output): 0.1582, norm(x): 0.1320, norm(y): 1.0029, norm:1.5592, tok/sec: 146336.23, flops:113.97, batch-reuse:1
@ 313 train 6.4517 , allloss: 6.4660, dt: 900.73ms, fracRes: 0.0070, norm(attn): 0.0552, norm(output): 0.1582, norm(x): 0.1325, norm(y): 1.0029, norm:1.6902, tok/sec: 145518.31, flops:113.33, batch-reuse:1
@ 314 train 6.4677 , allloss: 6.4796, dt: 906.90ms, fracRes: 0.0070, norm(attn): 0.0569, norm(output): 0.1582, norm(x): 0.1329, norm(y): 1.0029, norm:1.2324, tok/sec: 144526.88, flops:112.56, batch-reuse:1
@ 315 train 6.4845 , allloss: 6.4970, dt: 909.62ms, fracRes: 0.0072, norm(attn): 0.0613, norm(output): 0.1592, norm(x): 0.1331, norm(y): 1.0029, norm:1.3365, tok/sec: 144095.82, flops:112.22, batch-reuse:1
@ 316 train 6.4970 , allloss: 6.5124, dt: 900.15ms, fracRes: 0.0071, norm(attn): 0.0608, norm(output): 0.1592, norm(x): 0.1325, norm(y): 1.0029, norm:1.4264, tok/sec: 145610.54, flops:113.40, batch-reuse:1
@ 317 train 6.5319 , allloss: 6.5479, dt: 900.01ms, fracRes: 0.0070, norm(attn): 0.0608, norm(output): 0.1592, norm(x): 0.1323, norm(y): 1.0029, norm:1.2414, tok/sec: 145633.96, flops:113.42, batch-reuse:1
@ 318 train 6.4095 , allloss: 6.4227, dt: 916.73ms, fracRes: 0.0069, norm(attn): 0.0566, norm(output): 0.1582, norm(x): 0.1323, norm(y): 1.0029, norm:1.0210, tok/sec: 142978.51, flops:111.35, batch-reuse:1
@ 319 train 6.3583 , allloss: 6.3711, dt: 917.30ms, fracRes: 0.0069, norm(attn): 0.0576, norm(output): 0.1582, norm(x): 0.1324, norm(y): 1.0029, norm:1.2997, tok/sec: 142888.43, flops:111.28, batch-reuse:1
@ 320 train 6.4580 , allloss: 6.4705, dt: 907.12ms, fracRes: 0.0069, norm(attn): 0.0588, norm(output): 0.1582, norm(x): 0.1331, norm(y): 1.0029, norm:0.8856, tok/sec: 144493.07, flops:112.53, batch-reuse:1
@ 321 train 6.4914 , allloss: 6.5038, dt: 907.52ms, fracRes: 0.0070, norm(attn): 0.0605, norm(output): 0.1592, norm(x): 0.1329, norm(y): 1.0030, norm:1.0781, tok/sec: 144428.16, flops:112.48, batch-reuse:1
@ 322 train 6.3896 , allloss: 6.4030, dt: 899.34ms, fracRes: 0.0070, norm(attn): 0.0620, norm(output): 0.1582, norm(x): 0.1326, norm(y): 1.0030, norm:1.1469, tok/sec: 145741.79, flops:113.50, batch-reuse:1
@ 323 train 6.4828 , allloss: 6.4952, dt: 892.16ms, fracRes: 0.0070, norm(attn): 0.0610, norm(output): 0.1572, norm(x): 0.1319, norm(y): 1.0030, norm:1.0204, tok/sec: 146914.85, flops:114.42, batch-reuse:1
@ 324 train 6.3879 , allloss: 6.4017, dt: 897.37ms, fracRes: 0.0071, norm(attn): 0.0615, norm(output): 0.1572, norm(x): 0.1315, norm(y): 1.0030, norm:1.2109, tok/sec: 146061.78, flops:113.75, batch-reuse:1
@ 325 train 6.4239 , allloss: 6.4366, dt: 891.17ms, fracRes: 0.0072, norm(attn): 0.0623, norm(output): 0.1572, norm(x): 0.1320, norm(y): 1.0030, norm:0.9461, tok/sec: 147079.26, flops:114.55, batch-reuse:1
@ 326 train 6.4979 , allloss: 6.5095, dt: 888.32ms, fracRes: 0.0074, norm(attn): 0.0640, norm(output): 0.1592, norm(x): 0.1328, norm(y): 1.0030, norm:1.4261, tok/sec: 147550.20, flops:114.91, batch-reuse:1
@ 327 train 6.5295 , allloss: 6.5395, dt: 907.90ms, fracRes: 0.0076, norm(attn): 0.0659, norm(output): 0.1602, norm(x): 0.1328, norm(y): 1.0031, norm:1.2173, tok/sec: 144368.76, flops:112.43, batch-reuse:1
@ 328 train 6.4368 , allloss: 6.4484, dt: 907.26ms, fracRes: 0.0073, norm(attn): 0.0645, norm(output): 0.1582, norm(x): 0.1328, norm(y): 1.0031, norm:1.1754, tok/sec: 144470.70, flops:112.51, batch-reuse:1
@ 329 train 6.4345 , allloss: 6.4454, dt: 897.83ms, fracRes: 0.0072, norm(attn): 0.0635, norm(output): 0.1582, norm(x): 0.1324, norm(y): 1.0031, norm:1.6033, tok/sec: 145988.17, flops:113.70, batch-reuse:1
@ 330 train 6.4168 , allloss: 6.4294, dt: 908.17ms, fracRes: 0.0072, norm(attn): 0.0615, norm(output): 0.1572, norm(x): 0.1323, norm(y): 1.0031, norm:1.0948, tok/sec: 144325.33, flops:112.40, batch-reuse:1
@ 331 train 6.3647 , allloss: 6.3754, dt: 889.57ms, fracRes: 0.0072, norm(attn): 0.0649, norm(output): 0.1592, norm(x): 0.1328, norm(y): 1.0031, norm:1.1663, tok/sec: 147342.31, flops:114.75, batch-reuse:1
@ 332 train 6.3559 , allloss: 6.3675, dt: 907.24ms, fracRes: 0.0072, norm(attn): 0.0688, norm(output): 0.1592, norm(x): 0.1331, norm(y): 1.0031, norm:1.3211, tok/sec: 144473.97, flops:112.52, batch-reuse:1
@ 333 train 6.4195 , allloss: 6.4302, dt: 900.60ms, fracRes: 0.0074, norm(attn): 0.0645, norm(output): 0.1582, norm(x): 0.1327, norm(y): 1.0031, norm:1.1177, tok/sec: 145539.15, flops:113.35, batch-reuse:1
@ 334 train 6.3541 , allloss: 6.3660, dt: 898.76ms, fracRes: 0.0075, norm(attn): 0.0625, norm(output): 0.1582, norm(x): 0.1324, norm(y): 1.0031, norm:1.0745, tok/sec: 145835.93, flops:113.58, batch-reuse:1
@ 335 train 6.3293 , allloss: 6.3399, dt: 909.06ms, fracRes: 0.0075, norm(attn): 0.0659, norm(output): 0.1592, norm(x): 0.1330, norm(y): 1.0031, norm:1.6078, tok/sec: 144183.35, flops:112.29, batch-reuse:1
@ 336 train 6.3840 , allloss: 6.3934, dt: 914.57ms, fracRes: 0.0075, norm(attn): 0.0635, norm(output): 0.1592, norm(x): 0.1328, norm(y): 1.0031, norm:1.1054, tok/sec: 143314.75, flops:111.61, batch-reuse:1
@ 337 train 6.3659 , allloss: 6.3753, dt: 907.73ms, fracRes: 0.0076, norm(attn): 0.0640, norm(output): 0.1592, norm(x): 0.1329, norm(y): 1.0032, norm:1.1618, tok/sec: 144396.10, flops:112.46, batch-reuse:1
@ 338 train 6.3461 , allloss: 6.3548, dt: 902.05ms, fracRes: 0.0076, norm(attn): 0.0635, norm(output): 0.1602, norm(x): 0.1334, norm(y): 1.0032, norm:1.4024, tok/sec: 145305.16, flops:113.16, batch-reuse:1
@ 339 train 6.4443 , allloss: 6.4532, dt: 899.09ms, fracRes: 0.0078, norm(attn): 0.0640, norm(output): 0.1592, norm(x): 0.1328, norm(y): 1.0032, norm:1.0987, tok/sec: 145783.65, flops:113.54, batch-reuse:1
@ 340 train 6.4267 , allloss: 6.4389, dt: 919.68ms, fracRes: 0.0077, norm(attn): 0.0640, norm(output): 0.1592, norm(x): 0.1328, norm(y): 1.0032, norm:1.5813, tok/sec: 142519.08, flops:110.99, batch-reuse:1
@ 341 train 6.3529 , allloss: 6.3614, dt: 911.21ms, fracRes: 0.0075, norm(attn): 0.0640, norm(output): 0.1592, norm(x): 0.1330, norm(y): 1.0032, norm:1.0665, tok/sec: 143843.44, flops:112.03, batch-reuse:1
@ 342 train 6.2800 , allloss: 6.2884, dt: 903.32ms, fracRes: 0.0075, norm(attn): 0.0654, norm(output): 0.1602, norm(x): 0.1335, norm(y): 1.0032, norm:1.3863, tok/sec: 145100.51, flops:113.00, batch-reuse:1
@ 343 train 6.3535 , allloss: 6.3636, dt: 893.87ms, fracRes: 0.0077, norm(attn): 0.0669, norm(output): 0.1611, norm(x): 0.1345, norm(y): 1.0032, norm:1.1992, tok/sec: 146635.06, flops:114.20, batch-reuse:1
@ 344 train 6.3130 , allloss: 6.3240, dt: 905.35ms, fracRes: 0.0077, norm(attn): 0.0649, norm(output): 0.1611, norm(x): 0.1343, norm(y): 1.0032, norm:1.2619, tok/sec: 144774.65, flops:112.75, batch-reuse:1
@ 345 train 6.3181 , allloss: 6.3323, dt: 921.70ms, fracRes: 0.0078, norm(attn): 0.0659, norm(output): 0.1611, norm(x): 0.1340, norm(y): 1.0032, norm:1.9284, tok/sec: 142207.12, flops:110.75, batch-reuse:1
@ 346 train 6.3836 , allloss: 6.3949, dt: 909.75ms, fracRes: 0.0078, norm(attn): 0.0669, norm(output): 0.1611, norm(x): 0.1337, norm(y): 1.0032, norm:1.0830, tok/sec: 144073.96, flops:112.21, batch-reuse:1
@ 347 train 6.3943 , allloss: 6.4021, dt: 906.54ms, fracRes: 0.0078, norm(attn): 0.0693, norm(output): 0.1621, norm(x): 0.1337, norm(y): 1.0032, norm:1.9740, tok/sec: 144584.42, flops:112.60, batch-reuse:1
@ 348 train 6.3599 , allloss: 6.3665, dt: 917.96ms, fracRes: 0.0077, norm(attn): 0.0645, norm(output): 0.1621, norm(x): 0.1337, norm(y): 1.0032, norm:1.4718, tok/sec: 142786.08, flops:111.20, batch-reuse:1
@ 349 train 6.3881 , allloss: 6.3952, dt: 912.06ms, fracRes: 0.0078, norm(attn): 0.0664, norm(output): 0.1611, norm(x): 0.1340, norm(y): 1.0033, norm:1.1799, tok/sec: 143710.22, flops:111.92, batch-reuse:1
@ 350 train 6.4184 , allloss: 6.4267, dt: 889.18ms, fracRes: 0.0080, norm(attn): 0.0688, norm(output): 0.1621, norm(x): 0.1348, norm(y): 1.0033, norm:1.3221, tok/sec: 147408.01, flops:114.80, batch-reuse:1
@ 351 train 6.3899 , allloss: 6.3966, dt: 915.64ms, fracRes: 0.0082, norm(attn): 0.0703, norm(output): 0.1621, norm(x): 0.1355, norm(y): 1.0033, norm:1.1320, tok/sec: 143147.87, flops:111.48, batch-reuse:1
@ 352 train 6.4438 , allloss: 6.4517, dt: 901.66ms, fracRes: 0.0082, norm(attn): 0.0693, norm(output): 0.1621, norm(x): 0.1349, norm(y): 1.0033, norm:1.5744, tok/sec: 145367.02, flops:113.21, batch-reuse:1
@ 353 train 6.3901 , allloss: 6.4003, dt: 905.30ms, fracRes: 0.0080, norm(attn): 0.0718, norm(output): 0.1621, norm(x): 0.1350, norm(y): 1.0033, norm:1.1981, tok/sec: 144782.39, flops:112.76, batch-reuse:1
@ 354 train 6.3584 , allloss: 6.3671, dt: 894.96ms, fracRes: 0.0080, norm(attn): 0.0742, norm(output): 0.1621, norm(x): 0.1353, norm(y): 1.0033, norm:3.4953, tok/sec: 146456.27, flops:114.06, batch-reuse:1
@ 355 train 6.3325 , allloss: 6.3394, dt: 893.37ms, fracRes: 0.0078, norm(attn): 0.0708, norm(output): 0.1621, norm(x): 0.1355, norm(y): 1.0033, norm:1.3795, tok/sec: 146716.93, flops:114.26, batch-reuse:1
@ 356 train 6.4233 , allloss: 6.4327, dt: 903.43ms, fracRes: 0.0075, norm(attn): 0.0698, norm(output): 0.1631, norm(x): 0.1350, norm(y): 1.0033, norm:1.2802, tok/sec: 145082.40, flops:112.99, batch-reuse:1
@ 357 train 6.3918 , allloss: 6.4007, dt: 922.57ms, fracRes: 0.0075, norm(attn): 0.0693, norm(output): 0.1621, norm(x): 0.1355, norm(y): 1.0033, norm:1.4389, tok/sec: 142072.80, flops:110.65, batch-reuse:1
@ 358 train 6.3367 , allloss: 6.3456, dt: 919.07ms, fracRes: 0.0075, norm(attn): 0.0669, norm(output): 0.1611, norm(x): 0.1349, norm(y): 1.0033, norm:1.4621, tok/sec: 142613.03, flops:111.07, batch-reuse:1
@ 359 train 6.5469 , allloss: 6.5556, dt: 917.92ms, fracRes: 0.0077, norm(attn): 0.0732, norm(output): 0.1631, norm(x): 0.1357, norm(y): 1.0033, norm:1.8707, tok/sec: 142792.01, flops:111.21, batch-reuse:1
@ 360 train 6.4096 , allloss: 6.4184, dt: 920.95ms, fracRes: 0.0077, norm(attn): 0.0708, norm(output): 0.1660, norm(x): 0.1368, norm(y): 1.0033, norm:1.8771, tok/sec: 142322.02, flops:110.84, batch-reuse:1
@ 361 train 6.4012 , allloss: 6.4118, dt: 902.24ms, fracRes: 0.0075, norm(attn): 0.0713, norm(output): 0.1660, norm(x): 0.1371, norm(y): 1.0033, norm:1.4395, tok/sec: 145274.55, flops:113.14, batch-reuse:1
@ 362 train 6.3013 , allloss: 6.3109, dt: 896.82ms, fracRes: 0.0075, norm(attn): 0.0679, norm(output): 0.1641, norm(x): 0.1368, norm(y): 1.0033, norm:1.2969, tok/sec: 146151.99, flops:113.82, batch-reuse:1
@ 363 train 6.3288 , allloss: 6.3386, dt: 902.28ms, fracRes: 0.0078, norm(attn): 0.0723, norm(output): 0.1660, norm(x): 0.1376, norm(y): 1.0033, norm:1.2527, tok/sec: 145267.88, flops:113.14, batch-reuse:1
@ 364 train 6.3786 , allloss: 6.3922, dt: 903.56ms, fracRes: 0.0077, norm(attn): 0.0654, norm(output): 0.1641, norm(x): 0.1370, norm(y): 1.0033, norm:1.6422, tok/sec: 145061.96, flops:112.97, batch-reuse:1
@ 365 train 6.3451 , allloss: 6.3547, dt: 904.52ms, fracRes: 0.0076, norm(attn): 0.0693, norm(output): 0.1650, norm(x): 0.1372, norm(y): 1.0033, norm:1.0652, tok/sec: 144907.49, flops:112.85, batch-reuse:1
@ 366 train 6.4245 , allloss: 6.4334, dt: 890.46ms, fracRes: 0.0076, norm(attn): 0.0708, norm(output): 0.1641, norm(x): 0.1371, norm(y): 1.0034, norm:1.8764, tok/sec: 147196.34, flops:114.64, batch-reuse:1
@ 367 train 6.3043 , allloss: 6.3130, dt: 901.61ms, fracRes: 0.0072, norm(attn): 0.0688, norm(output): 0.1660, norm(x): 0.1382, norm(y): 1.0033, norm:1.2357, tok/sec: 145376.01, flops:113.22, batch-reuse:1
@ 368 train 6.4275 , allloss: 6.4336, dt: 903.74ms, fracRes: 0.0074, norm(attn): 0.0693, norm(output): 0.1670, norm(x): 0.1386, norm(y): 1.0033, norm:1.3341, tok/sec: 145033.37, flops:112.95, batch-reuse:1
@ 369 train 6.3566 , allloss: 6.3630, dt: 905.54ms, fracRes: 0.0074, norm(attn): 0.0674, norm(output): 0.1660, norm(x): 0.1383, norm(y): 1.0034, norm:1.3635, tok/sec: 144745.26, flops:112.73, batch-reuse:1
@ 370 train 6.4718 , allloss: 6.4792, dt: 910.11ms, fracRes: 0.0074, norm(attn): 0.0659, norm(output): 0.1660, norm(x): 0.1381, norm(y): 1.0033, norm:1.1909, tok/sec: 144017.72, flops:112.16, batch-reuse:1
@ 371 train 6.4006 , allloss: 6.4082, dt: 905.60ms, fracRes: 0.0071, norm(attn): 0.0664, norm(output): 0.1660, norm(x): 0.1385, norm(y): 1.0033, norm:1.0637, tok/sec: 144735.66, flops:112.72, batch-reuse:1
@ 372 train 6.4755 , allloss: 6.4842, dt: 889.63ms, fracRes: 0.0073, norm(attn): 0.0664, norm(output): 0.1660, norm(x): 0.1381, norm(y): 1.0034, norm:1.1199, tok/sec: 147332.87, flops:114.74, batch-reuse:1
@ 373 train 6.4599 , allloss: 6.4660, dt: 890.06ms, fracRes: 0.0079, norm(attn): 0.0723, norm(output): 0.1689, norm(x): 0.1391, norm(y): 1.0034, norm:1.2237, tok/sec: 147262.39, flops:114.69, batch-reuse:1
@ 374 train 6.4599 , allloss: 6.4654, dt: 898.37ms, fracRes: 0.0081, norm(attn): 0.0732, norm(output): 0.1680, norm(x): 0.1391, norm(y): 1.0035, norm:1.6930, tok/sec: 145900.45, flops:113.63, batch-reuse:1
@ 375 train 6.5338 , allloss: 6.5414, dt: 902.71ms, fracRes: 0.0080, norm(attn): 0.0732, norm(output): 0.1689, norm(x): 0.1391, norm(y): 1.0034, norm:1.0542, tok/sec: 145198.93, flops:113.08, batch-reuse:1
@ 376 train 6.5871 , allloss: 6.5941, dt: 903.97ms, fracRes: 0.0077, norm(attn): 0.0771, norm(output): 0.1699, norm(x): 0.1402, norm(y): 1.0034, norm:1.9681, tok/sec: 144995.85, flops:112.92, batch-reuse:1
@ 377 train 6.4674 , allloss: 6.4733, dt: 900.30ms, fracRes: 0.0079, norm(attn): 0.0728, norm(output): 0.1689, norm(x): 0.1390, norm(y): 1.0034, norm:1.2327, tok/sec: 145587.41, flops:113.38, batch-reuse:1
@ 378 train 6.4146 , allloss: 6.4213, dt: 882.60ms, fracRes: 0.0080, norm(attn): 0.0713, norm(output): 0.1689, norm(x): 0.1391, norm(y): 1.0035, norm:1.2428, tok/sec: 148506.23, flops:115.66, batch-reuse:1
@ 379 train 6.5150 , allloss: 6.5218, dt: 889.84ms, fracRes: 0.0080, norm(attn): 0.0708, norm(output): 0.1670, norm(x): 0.1392, norm(y): 1.0035, norm:1.1408, tok/sec: 147297.86, flops:114.72, batch-reuse:1
@ 380 train 6.5630 , allloss: 6.5682, dt: 900.31ms, fracRes: 0.0083, norm(attn): 0.0767, norm(output): 0.1699, norm(x): 0.1400, norm(y): 1.0035, norm:1.1266, tok/sec: 145584.94, flops:113.38, batch-reuse:1
@ 381 train 6.4909 , allloss: 6.4954, dt: 903.74ms, fracRes: 0.0089, norm(attn): 0.0776, norm(output): 0.1699, norm(x): 0.1394, norm(y): 1.0035, norm:1.1595, tok/sec: 145032.45, flops:112.95, batch-reuse:1
@ 382 train 6.4471 , allloss: 6.4523, dt: 902.14ms, fracRes: 0.0093, norm(attn): 0.0737, norm(output): 0.1699, norm(x): 0.1395, norm(y): 1.0035, norm:1.0614, tok/sec: 145289.83, flops:113.15, batch-reuse:1
@ 383 train 6.4369 , allloss: 6.4417, dt: 888.10ms, fracRes: 0.0090, norm(attn): 0.0757, norm(output): 0.1699, norm(x): 0.1400, norm(y): 1.0035, norm:1.6716, tok/sec: 147587.16, flops:114.94, batch-reuse:1
@ 384 train 6.4219 , allloss: 6.4292, dt: 902.40ms, fracRes: 0.0094, norm(attn): 0.0737, norm(output): 0.1699, norm(x): 0.1398, norm(y): 1.0035, norm:0.9386, tok/sec: 145248.19, flops:113.12, batch-reuse:1
@ 385 train 6.4062 , allloss: 6.4132, dt: 900.41ms, fracRes: 0.0097, norm(attn): 0.0747, norm(output): 0.1699, norm(x): 0.1401, norm(y): 1.0036, norm:1.5054, tok/sec: 145568.44, flops:113.37, batch-reuse:1
@ 386 train 6.5006 , allloss: 6.5056, dt: 898.93ms, fracRes: 0.0093, norm(attn): 0.0747, norm(output): 0.1699, norm(x): 0.1400, norm(y): 1.0036, norm:1.0606, tok/sec: 145808.74, flops:113.56, batch-reuse:1
@ 387 train 6.4299 , allloss: 6.4336, dt: 907.99ms, fracRes: 0.0092, norm(attn): 0.0757, norm(output): 0.1709, norm(x): 0.1407, norm(y): 1.0036, norm:0.9581, tok/sec: 144353.83, flops:112.42, batch-reuse:1
@ 388 train 6.3489 , allloss: 6.3527, dt: 911.32ms, fracRes: 0.0094, norm(attn): 0.0718, norm(output): 0.1699, norm(x): 0.1404, norm(y): 1.0036, norm:1.3867, tok/sec: 143826.96, flops:112.01, batch-reuse:1
@ 389 train 6.4199 , allloss: 6.4248, dt: 916.46ms, fracRes: 0.0094, norm(attn): 0.0747, norm(output): 0.1689, norm(x): 0.1395, norm(y): 1.0036, norm:1.4696, tok/sec: 143019.65, flops:111.38, batch-reuse:1
@ 390 train 6.4623 , allloss: 6.4665, dt: 915.41ms, fracRes: 0.0094, norm(attn): 0.0791, norm(output): 0.1699, norm(x): 0.1403, norm(y): 1.0036, norm:1.1974, tok/sec: 143184.26, flops:111.51, batch-reuse:1
@ 391 train 6.3834 , allloss: 6.3896, dt: 896.12ms, fracRes: 0.0098, norm(attn): 0.0791, norm(output): 0.1709, norm(x): 0.1407, norm(y): 1.0036, norm:1.0796, tok/sec: 146265.41, flops:113.91, batch-reuse:1
@ 392 train 6.4848 , allloss: 6.4886, dt: 905.34ms, fracRes: 0.0098, norm(attn): 0.0811, norm(output): 0.1719, norm(x): 0.1415, norm(y): 1.0036, norm:1.3880, tok/sec: 144776.90, flops:112.75, batch-reuse:1
@ 393 train 6.4251 , allloss: 6.4285, dt: 894.39ms, fracRes: 0.0100, norm(attn): 0.0815, norm(output): 0.1709, norm(x): 0.1405, norm(y): 1.0036, norm:1.6504, tok/sec: 146549.50, flops:114.13, batch-reuse:1
@ 394 train 6.4216 , allloss: 6.4257, dt: 893.46ms, fracRes: 0.0101, norm(attn): 0.0767, norm(output): 0.1699, norm(x): 0.1401, norm(y): 1.0037, norm:1.3977, tok/sec: 146700.80, flops:114.25, batch-reuse:1
@ 395 train 6.4825 , allloss: 6.4866, dt: 901.74ms, fracRes: 0.0100, norm(attn): 0.0825, norm(output): 0.1709, norm(x): 0.1415, norm(y): 1.0036, norm:1.1558, tok/sec: 145354.68, flops:113.20, batch-reuse:1
@ 396 train 6.3454 , allloss: 6.3502, dt: 880.57ms, fracRes: 0.0099, norm(attn): 0.0786, norm(output): 0.1719, norm(x): 0.1411, norm(y): 1.0037, norm:1.3905, tok/sec: 148848.21, flops:115.92, batch-reuse:1
@ 397 train 6.4592 , allloss: 6.4631, dt: 908.13ms, fracRes: 0.0099, norm(attn): 0.0776, norm(output): 0.1709, norm(x): 0.1406, norm(y): 1.0037, norm:1.4567, tok/sec: 144332.49, flops:112.41, batch-reuse:1
@ 398 train 6.4383 , allloss: 6.4464, dt: 904.16ms, fracRes: 0.0098, norm(attn): 0.0767, norm(output): 0.1709, norm(x): 0.1408, norm(y): 1.0037, norm:1.0769, tok/sec: 144965.45, flops:112.90, batch-reuse:1
@ 399 train 6.4296 , allloss: 6.4366, dt: 907.28ms, fracRes: 0.0100, norm(attn): 0.0747, norm(output): 0.1699, norm(x): 0.1403, norm(y): 1.0037, norm:1.2191, tok/sec: 144466.83, flops:112.51, batch-reuse:1
@ 400 train 6.4698 , allloss: 6.4775, dt: 917.43ms, fracRes: 0.0109, norm(attn): 0.0762, norm(output): 0.1709, norm(x): 0.1407, norm(y): 1.0037, norm:1.1994, tok/sec: 142868.34, flops:111.27, batch-reuse:1
@ 401 train 6.4677 , allloss: 6.4708, dt: 926.28ms, fracRes: 0.0114, norm(attn): 0.0835, norm(output): 0.1729, norm(x): 0.1424, norm(y): 1.0037, norm:1.5108, tok/sec: 141503.54, flops:110.20, batch-reuse:1
@ 402 train 6.4254 , allloss: 6.4294, dt: 924.06ms, fracRes: 0.0104, norm(attn): 0.0815, norm(output): 0.1719, norm(x): 0.1423, norm(y): 1.0037, norm:1.0344, tok/sec: 141843.29, flops:110.47, batch-reuse:1
@ 403 train 6.4671 , allloss: 6.4725, dt: 896.37ms, fracRes: 0.0095, norm(attn): 0.0811, norm(output): 0.1719, norm(x): 0.1428, norm(y): 1.0037, norm:1.1381, tok/sec: 146225.19, flops:113.88, batch-reuse:1
@ 404 train 6.3890 , allloss: 6.3956, dt: 911.30ms, fracRes: 0.0089, norm(attn): 0.0801, norm(output): 0.1719, norm(x): 0.1431, norm(y): 1.0037, norm:1.6724, tok/sec: 143828.95, flops:112.01, batch-reuse:1
@ 405 train 6.4051 , allloss: 6.4130, dt: 895.54ms, fracRes: 0.0089, norm(attn): 0.0776, norm(output): 0.1719, norm(x): 0.1427, norm(y): 1.0037, norm:1.2894, tok/sec: 146360.39, flops:113.99, batch-reuse:1
@ 406 train 6.4008 , allloss: 6.4063, dt: 894.53ms, fracRes: 0.0094, norm(attn): 0.0771, norm(output): 0.1719, norm(x): 0.1426, norm(y): 1.0037, norm:1.1755, tok/sec: 146526.45, flops:114.12, batch-reuse:1
@ 407 train 6.3753 , allloss: 6.3798, dt: 889.62ms, fracRes: 0.0096, norm(attn): 0.0781, norm(output): 0.1719, norm(x): 0.1424, norm(y): 1.0037, norm:1.0344, tok/sec: 147334.61, flops:114.74, batch-reuse:1
@ 408 train 6.4053 , allloss: 6.4082, dt: 922.79ms, fracRes: 0.0100, norm(attn): 0.0806, norm(output): 0.1719, norm(x): 0.1426, norm(y): 1.0037, norm:1.3697, tok/sec: 142038.63, flops:110.62, batch-reuse:1
@ 409 train 6.3251 , allloss: 6.3280, dt: 919.52ms, fracRes: 0.0108, norm(attn): 0.0850, norm(output): 0.1719, norm(x): 0.1427, norm(y): 1.0038, norm:1.2478, tok/sec: 142543.32, flops:111.01, batch-reuse:1
@ 410 train 6.3969 , allloss: 6.4006, dt: 909.41ms, fracRes: 0.0113, norm(attn): 0.0859, norm(output): 0.1719, norm(x): 0.1423, norm(y): 1.0038, norm:1.5564, tok/sec: 144127.97, flops:112.25, batch-reuse:1
@ 411 train 6.3878 , allloss: 6.3939, dt: 891.08ms, fracRes: 0.0125, norm(attn): 0.0811, norm(output): 0.1719, norm(x): 0.1424, norm(y): 1.0038, norm:1.1365, tok/sec: 147093.35, flops:114.56, batch-reuse:1
@ 412 train 6.3919 , allloss: 6.3948, dt: 898.89ms, fracRes: 0.0132, norm(attn): 0.0840, norm(output): 0.1719, norm(x): 0.1430, norm(y): 1.0038, norm:1.4431, tok/sec: 145814.93, flops:113.56, batch-reuse:1
@ 413 train 6.0578 , allloss: 6.0615, dt: 895.27ms, fracRes: 0.0112, norm(attn): 0.0874, norm(output): 0.1719, norm(x): 0.1430, norm(y): 1.0038, norm:2.1693, tok/sec: 146405.80, flops:114.02, batch-reuse:1
@ 414 train 6.3751 , allloss: 6.3798, dt: 901.90ms, fracRes: 0.0121, norm(attn): 0.0879, norm(output): 0.1719, norm(x): 0.1425, norm(y): 1.0038, norm:1.6321, tok/sec: 145329.01, flops:113.18, batch-reuse:1
@ 415 train 6.3100 , allloss: 6.3129, dt: 908.49ms, fracRes: 0.0107, norm(attn): 0.0850, norm(output): 0.1719, norm(x): 0.1431, norm(y): 1.0038, norm:1.3657, tok/sec: 144274.57, flops:112.36, batch-reuse:1
@ 416 train 6.4508 , allloss: 6.4546, dt: 904.83ms, fracRes: 0.0099, norm(attn): 0.0869, norm(output): 0.1729, norm(x): 0.1438, norm(y): 1.0038, norm:1.4810, tok/sec: 144858.69, flops:112.82, batch-reuse:1
@ 417 train 6.3323 , allloss: 6.3366, dt: 899.33ms, fracRes: 0.0088, norm(attn): 0.0850, norm(output): 0.1719, norm(x): 0.1444, norm(y): 1.0037, norm:1.3355, tok/sec: 145743.80, flops:113.51, batch-reuse:1
@ 418 train 6.4092 , allloss: 6.4149, dt: 893.40ms, fracRes: 0.0094, norm(attn): 0.0854, norm(output): 0.1719, norm(x): 0.1437, norm(y): 1.0037, norm:1.0176, tok/sec: 146711.41, flops:114.26, batch-reuse:1
@ 419 train 6.3474 , allloss: 6.3524, dt: 888.74ms, fracRes: 0.0098, norm(attn): 0.0854, norm(output): 0.1719, norm(x): 0.1439, norm(y): 1.0038, norm:1.0739, tok/sec: 147480.18, flops:114.86, batch-reuse:1
@ 420 train 6.3119 , allloss: 6.3176, dt: 915.00ms, fracRes: 0.0093, norm(attn): 0.0864, norm(output): 0.1719, norm(x): 0.1437, norm(y): 1.0038, norm:1.3281, tok/sec: 143248.43, flops:111.56, batch-reuse:1
@ 421 train 6.4496 , allloss: 6.4548, dt: 918.35ms, fracRes: 0.0093, norm(attn): 0.0850, norm(output): 0.1729, norm(x): 0.1441, norm(y): 1.0037, norm:1.0379, tok/sec: 142725.84, flops:111.16, batch-reuse:1
@ 422 train 6.3710 , allloss: 6.3765, dt: 891.13ms, fracRes: 0.0091, norm(attn): 0.0854, norm(output): 0.1719, norm(x): 0.1440, norm(y): 1.0038, norm:0.9945, tok/sec: 147084.62, flops:114.55, batch-reuse:1
@ 423 train 6.3874 , allloss: 6.3918, dt: 909.05ms, fracRes: 0.0095, norm(attn): 0.0850, norm(output): 0.1738, norm(x): 0.1454, norm(y): 1.0038, norm:1.0902, tok/sec: 144185.46, flops:112.29, batch-reuse:1
@ 424 train 6.3499 , allloss: 6.3535, dt: 902.45ms, fracRes: 0.0098, norm(attn): 0.0830, norm(output): 0.1738, norm(x): 0.1460, norm(y): 1.0038, norm:1.2608, tok/sec: 145240.86, flops:113.11, batch-reuse:1
@ 425 train 6.4292 , allloss: 6.4331, dt: 906.13ms, fracRes: 0.0104, norm(attn): 0.0869, norm(output): 0.1729, norm(x): 0.1450, norm(y): 1.0038, norm:1.1822, tok/sec: 144650.50, flops:112.65, batch-reuse:1
@ 426 train 6.2685 , allloss: 6.2718, dt: 887.44ms, fracRes: 0.0111, norm(attn): 0.0879, norm(output): 0.1729, norm(x): 0.1445, norm(y): 1.0038, norm:1.2023, tok/sec: 147697.23, flops:115.03, batch-reuse:1
@ 427 train 6.3338 , allloss: 6.3370, dt: 908.36ms, fracRes: 0.0118, norm(attn): 0.0894, norm(output): 0.1738, norm(x): 0.1448, norm(y): 1.0039, norm:1.6038, tok/sec: 144295.67, flops:112.38, batch-reuse:1
@ 428 train 6.2913 , allloss: 6.2943, dt: 903.23ms, fracRes: 0.0121, norm(attn): 0.0898, norm(output): 0.1738, norm(x): 0.1452, norm(y): 1.0039, norm:1.8813, tok/sec: 145114.42, flops:113.02, batch-reuse:1
@ 429 train 6.2398 , allloss: 6.2424, dt: 904.79ms, fracRes: 0.0124, norm(attn): 0.0908, norm(output): 0.1729, norm(x): 0.1446, norm(y): 1.0039, norm:0.9898, tok/sec: 144864.60, flops:112.82, batch-reuse:1
@ 430 train 6.3304 , allloss: 6.3324, dt: 914.31ms, fracRes: 0.0124, norm(attn): 0.0879, norm(output): 0.1719, norm(x): 0.1441, norm(y): 1.0039, norm:0.9467, tok/sec: 143356.38, flops:111.65, batch-reuse:1
@ 431 train 6.3032 , allloss: 6.3057, dt: 906.46ms, fracRes: 0.0110, norm(attn): 0.0869, norm(output): 0.1738, norm(x): 0.1457, norm(y): 1.0039, norm:0.8675, tok/sec: 144597.85, flops:112.61, batch-reuse:1
@ 432 train 6.3652 , allloss: 6.3679, dt: 894.30ms, fracRes: 0.0110, norm(attn): 0.0864, norm(output): 0.1738, norm(x): 0.1456, norm(y): 1.0039, norm:0.9415, tok/sec: 146563.91, flops:114.14, batch-reuse:1
@ 433 train 6.3611 , allloss: 6.3633, dt: 898.43ms, fracRes: 0.0120, norm(attn): 0.0884, norm(output): 0.1729, norm(x): 0.1448, norm(y): 1.0039, norm:0.9697, tok/sec: 145890.73, flops:113.62, batch-reuse:1
@ 434 train 6.3733 , allloss: 6.3747, dt: 901.93ms, fracRes: 0.0123, norm(attn): 0.0898, norm(output): 0.1738, norm(x): 0.1455, norm(y): 1.0039, norm:1.0484, tok/sec: 145323.44, flops:113.18, batch-reuse:1
@ 435 train 6.2867 , allloss: 6.2891, dt: 916.13ms, fracRes: 0.0125, norm(attn): 0.0908, norm(output): 0.1729, norm(x): 0.1452, norm(y): 1.0040, norm:1.0148, tok/sec: 143071.61, flops:111.42, batch-reuse:1
@ 436 train 6.4264 , allloss: 6.4281, dt: 905.91ms, fracRes: 0.0121, norm(attn): 0.0918, norm(output): 0.1729, norm(x): 0.1458, norm(y): 1.0039, norm:1.0836, tok/sec: 144685.76, flops:112.68, batch-reuse:1
@ 437 train 6.3226 , allloss: 6.3246, dt: 889.52ms, fracRes: 0.0130, norm(attn): 0.0889, norm(output): 0.1729, norm(x): 0.1453, norm(y): 1.0039, norm:1.1917, tok/sec: 147351.35, flops:114.76, batch-reuse:1
@ 438 train 6.3827 , allloss: 6.3873, dt: 895.49ms, fracRes: 0.0124, norm(attn): 0.0957, norm(output): 0.1738, norm(x): 0.1450, norm(y): 1.0039, norm:1.2791, tok/sec: 146368.34, flops:113.99, batch-reuse:1
@ 439 train 6.2584 , allloss: 6.2602, dt: 900.41ms, fracRes: 0.0130, norm(attn): 0.0923, norm(output): 0.1719, norm(x): 0.1443, norm(y): 1.0039, norm:1.3583, tok/sec: 145568.44, flops:113.37, batch-reuse:1
@ 440 train 6.2248 , allloss: 6.2270, dt: 887.06ms, fracRes: 0.0143, norm(attn): 0.0933, norm(output): 0.1729, norm(x): 0.1446, norm(y): 1.0040, norm:1.2064, tok/sec: 147760.50, flops:115.08, batch-reuse:1
@ 441 train 6.3001 , allloss: 6.3023, dt: 904.57ms, fracRes: 0.0134, norm(attn): 0.0938, norm(output): 0.1729, norm(x): 0.1447, norm(y): 1.0040, norm:1.1333, tok/sec: 144900.30, flops:112.85, batch-reuse:1
@ 442 train 6.3775 , allloss: 6.3808, dt: 894.81ms, fracRes: 0.0137, norm(attn): 0.0928, norm(output): 0.1729, norm(x): 0.1457, norm(y): 1.0039, norm:1.6205, tok/sec: 146479.76, flops:114.08, batch-reuse:1
@ 443 train 6.3651 , allloss: 6.3708, dt: 886.50ms, fracRes: 0.0152, norm(attn): 0.0942, norm(output): 0.1729, norm(x): 0.1454, norm(y): 1.0040, norm:1.1073, tok/sec: 147852.66, flops:115.15, batch-reuse:1
@ 444 train 6.3532 , allloss: 6.3614, dt: 917.68ms, fracRes: 0.0139, norm(attn): 0.0947, norm(output): 0.1729, norm(x): 0.1449, norm(y): 1.0040, norm:1.1981, tok/sec: 142830.07, flops:111.24, batch-reuse:1
@ 445 train 6.2557 , allloss: 6.2577, dt: 907.88ms, fracRes: 0.0114, norm(attn): 0.0947, norm(output): 0.1729, norm(x): 0.1464, norm(y): 1.0039, norm:1.1906, tok/sec: 144371.83, flops:112.44, batch-reuse:1
@ 446 train 6.2473 , allloss: 6.2505, dt: 897.80ms, fracRes: 0.0101, norm(attn): 0.0977, norm(output): 0.1748, norm(x): 0.1468, norm(y): 1.0039, norm:0.9526, tok/sec: 145991.85, flops:113.70, batch-reuse:1
@ 447 train 6.2965 , allloss: 6.3038, dt: 897.43ms, fracRes: 0.0096, norm(attn): 0.0977, norm(output): 0.1729, norm(x): 0.1457, norm(y): 1.0039, norm:0.9843, tok/sec: 146053.25, flops:113.75, batch-reuse:1
@ 448 train 6.2534 , allloss: 6.2603, dt: 894.74ms, fracRes: 0.0101, norm(attn): 0.0967, norm(output): 0.1738, norm(x): 0.1461, norm(y): 1.0039, norm:0.8800, tok/sec: 146492.25, flops:114.09, batch-reuse:1
@ 449 train 6.2413 , allloss: 6.2433, dt: 905.16ms, fracRes: 0.0111, norm(attn): 0.0947, norm(output): 0.1738, norm(x): 0.1462, norm(y): 1.0040, norm:1.2588, tok/sec: 144805.73, flops:112.78, batch-reuse:1
@ 450 train 6.2859 , allloss: 6.2897, dt: 888.37ms, fracRes: 0.0126, norm(attn): 0.0952, norm(output): 0.1738, norm(x): 0.1463, norm(y): 1.0040, norm:1.4317, tok/sec: 147542.52, flops:114.91, batch-reuse:1
@ 451 train 6.2916 , allloss: 6.2929, dt: 901.62ms, fracRes: 0.0132, norm(attn): 0.0986, norm(output): 0.1729, norm(x): 0.1458, norm(y): 1.0041, norm:1.1831, tok/sec: 145374.09, flops:113.22, batch-reuse:1
@ 452 train 6.3027 , allloss: 6.3049, dt: 904.26ms, fracRes: 0.0135, norm(attn): 0.0986, norm(output): 0.1729, norm(x): 0.1467, norm(y): 1.0040, norm:1.5885, tok/sec: 144949.02, flops:112.89, batch-reuse:1
@ 453 train 6.2954 , allloss: 6.2978, dt: 898.98ms, fracRes: 0.0128, norm(attn): 0.0981, norm(output): 0.1738, norm(x): 0.1469, norm(y): 1.0040, norm:1.2682, tok/sec: 145801.51, flops:113.55, batch-reuse:1
@ 454 train 6.2870 , allloss: 6.2889, dt: 908.56ms, fracRes: 0.0150, norm(attn): 0.0967, norm(output): 0.1768, norm(x): 0.1469, norm(y): 1.0041, norm:1.1943, tok/sec: 144264.24, flops:112.35, batch-reuse:1
@ 455 train 6.3498 , allloss: 6.3513, dt: 900.44ms, fracRes: 0.0156, norm(attn): 0.0991, norm(output): 0.1768, norm(x): 0.1470, norm(y): 1.0041, norm:0.9249, tok/sec: 145564.55, flops:113.37, batch-reuse:1
@ 456 train 6.3223 , allloss: 6.3235, dt: 900.09ms, fracRes: 0.0142, norm(attn): 0.0991, norm(output): 0.1729, norm(x): 0.1466, norm(y): 1.0041, norm:1.5073, tok/sec: 145620.50, flops:113.41, batch-reuse:1
@ 457 train 6.3804 , allloss: 6.3827, dt: 903.49ms, fracRes: 0.0134, norm(attn): 0.0986, norm(output): 0.1758, norm(x): 0.1478, norm(y): 1.0040, norm:1.2135, tok/sec: 145072.83, flops:112.98, batch-reuse:1
@ 458 train 6.3484 , allloss: 6.3510, dt: 912.27ms, fracRes: 0.0138, norm(attn): 0.0986, norm(output): 0.1768, norm(x): 0.1479, norm(y): 1.0041, norm:1.0090, tok/sec: 143677.39, flops:111.90, batch-reuse:1
@ 459 train 6.2727 , allloss: 6.2767, dt: 904.86ms, fracRes: 0.0137, norm(attn): 0.0986, norm(output): 0.1748, norm(x): 0.1473, norm(y): 1.0041, norm:0.9549, tok/sec: 144852.58, flops:112.81, batch-reuse:1
@ 460 train 6.2593 , allloss: 6.2617, dt: 919.60ms, fracRes: 0.0141, norm(attn): 0.1016, norm(output): 0.1768, norm(x): 0.1480, norm(y): 1.0041, norm:1.2224, tok/sec: 142531.90, flops:111.00, batch-reuse:1
@ 461 train 6.3040 , allloss: 6.3067, dt: 905.32ms, fracRes: 0.0137, norm(attn): 0.1025, norm(output): 0.1787, norm(x): 0.1484, norm(y): 1.0040, norm:2.3249, tok/sec: 144779.95, flops:112.76, batch-reuse:1
@ 462 train 6.3579 , allloss: 6.3598, dt: 904.36ms, fracRes: 0.0141, norm(attn): 0.1025, norm(output): 0.1777, norm(x): 0.1479, norm(y): 1.0040, norm:1.2954, tok/sec: 144933.23, flops:112.87, batch-reuse:1
@ 463 train 6.3411 , allloss: 6.3422, dt: 898.57ms, fracRes: 0.0168, norm(attn): 0.1055, norm(output): 0.1768, norm(x): 0.1474, norm(y): 1.0041, norm:1.3318, tok/sec: 145866.54, flops:113.60, batch-reuse:1
@ 464 train 6.2528 , allloss: 6.2550, dt: 894.81ms, fracRes: 0.0202, norm(attn): 0.1021, norm(output): 0.1768, norm(x): 0.1476, norm(y): 1.0041, norm:1.3867, tok/sec: 146480.62, flops:114.08, batch-reuse:1
@ 465 train 6.2111 , allloss: 6.2129, dt: 914.40ms, fracRes: 0.0176, norm(attn): 0.1011, norm(output): 0.1768, norm(x): 0.1476, norm(y): 1.0042, norm:1.0880, tok/sec: 143341.58, flops:111.63, batch-reuse:1
@ 466 train 6.2985 , allloss: 6.2999, dt: 900.16ms, fracRes: 0.0136, norm(attn): 0.0977, norm(output): 0.1768, norm(x): 0.1489, norm(y): 1.0041, norm:1.2633, tok/sec: 145609.50, flops:113.40, batch-reuse:1
@ 467 train 6.2100 , allloss: 6.2115, dt: 889.76ms, fracRes: 0.0126, norm(attn): 0.0977, norm(output): 0.1768, norm(x): 0.1488, norm(y): 1.0041, norm:1.1183, tok/sec: 147311.87, flops:114.73, batch-reuse:1
@ 468 train 6.1672 , allloss: 6.1689, dt: 897.17ms, fracRes: 0.0113, norm(attn): 0.1030, norm(output): 0.1787, norm(x): 0.1494, norm(y): 1.0041, norm:0.9966, tok/sec: 146094.85, flops:113.78, batch-reuse:1
@ 469 train 6.1624 , allloss: 6.1649, dt: 896.17ms, fracRes: 0.0118, norm(attn): 0.1016, norm(output): 0.1777, norm(x): 0.1492, norm(y): 1.0041, norm:0.9868, tok/sec: 146257.75, flops:113.91, batch-reuse:1
@ 470 train 6.2597 , allloss: 6.2626, dt: 890.22ms, fracRes: 0.0118, norm(attn): 0.1050, norm(output): 0.1768, norm(x): 0.1492, norm(y): 1.0041, norm:1.1073, tok/sec: 147235.21, flops:114.67, batch-reuse:1
@ 471 train 6.1309 , allloss: 6.1332, dt: 894.49ms, fracRes: 0.0144, norm(attn): 0.1055, norm(output): 0.1777, norm(x): 0.1494, norm(y): 1.0042, norm:1.2397, tok/sec: 146531.92, flops:114.12, batch-reuse:1
@ 472 train 6.2658 , allloss: 6.2677, dt: 890.95ms, fracRes: 0.0141, norm(attn): 0.1045, norm(output): 0.1787, norm(x): 0.1495, norm(y): 1.0042, norm:1.1231, tok/sec: 147115.51, flops:114.57, batch-reuse:1
@ 473 train 6.2238 , allloss: 6.2249, dt: 902.01ms, fracRes: 0.0124, norm(attn): 0.1069, norm(output): 0.1777, norm(x): 0.1492, norm(y): 1.0041, norm:1.1355, tok/sec: 145311.42, flops:113.17, batch-reuse:1
@ 474 train 6.1384 , allloss: 6.1413, dt: 909.43ms, fracRes: 0.0128, norm(attn): 0.1045, norm(output): 0.1797, norm(x): 0.1501, norm(y): 1.0042, norm:1.1768, tok/sec: 144125.66, flops:112.25, batch-reuse:1
@ 475 train 6.1538 , allloss: 6.1583, dt: 912.66ms, fracRes: 0.0124, norm(attn): 0.1030, norm(output): 0.1797, norm(x): 0.1493, norm(y): 1.0041, norm:1.0041, tok/sec: 143614.90, flops:111.85, batch-reuse:1
@ 476 train 6.1714 , allloss: 6.1730, dt: 914.85ms, fracRes: 0.0124, norm(attn): 0.1035, norm(output): 0.1777, norm(x): 0.1499, norm(y): 1.0042, norm:1.1476, tok/sec: 143271.43, flops:111.58, batch-reuse:1
@ 477 train 6.2508 , allloss: 6.2544, dt: 908.12ms, fracRes: 0.0135, norm(attn): 0.1055, norm(output): 0.1816, norm(x): 0.1501, norm(y): 1.0042, norm:1.1589, tok/sec: 144333.10, flops:112.41, batch-reuse:1
@ 478 train 6.1807 , allloss: 6.1831, dt: 899.83ms, fracRes: 0.0146, norm(attn): 0.1060, norm(output): 0.1807, norm(x): 0.1504, norm(y): 1.0042, norm:0.9927, tok/sec: 145663.82, flops:113.44, batch-reuse:1
@ 479 train 6.2789 , allloss: 6.2808, dt: 907.40ms, fracRes: 0.0188, norm(attn): 0.1108, norm(output): 0.1797, norm(x): 0.1492, norm(y): 1.0042, norm:0.9517, tok/sec: 144447.24, flops:112.50, batch-reuse:1
@ 480 train 6.1207 , allloss: 6.1223, dt: 910.53ms, fracRes: 0.0141, norm(attn): 0.1055, norm(output): 0.1816, norm(x): 0.1500, norm(y): 1.0042, norm:1.0762, tok/sec: 143951.01, flops:112.11, batch-reuse:1
@ 481 train 6.2240 , allloss: 6.2261, dt: 905.40ms, fracRes: 0.0126, norm(attn): 0.1074, norm(output): 0.1797, norm(x): 0.1493, norm(y): 1.0042, norm:0.9840, tok/sec: 144766.76, flops:112.74, batch-reuse:1
@ 482 train 6.1793 , allloss: 6.1833, dt: 901.78ms, fracRes: 0.0129, norm(attn): 0.1084, norm(output): 0.1816, norm(x): 0.1495, norm(y): 1.0042, norm:1.2002, tok/sec: 145347.61, flops:113.20, batch-reuse:1
@ 483 train 6.2594 , allloss: 6.2618, dt: 902.46ms, fracRes: 0.0131, norm(attn): 0.1108, norm(output): 0.1768, norm(x): 0.1490, norm(y): 1.0042, norm:0.9540, tok/sec: 145237.79, flops:113.11, batch-reuse:1
@ 484 train 6.1302 , allloss: 6.1342, dt: 916.17ms, fracRes: 0.0134, norm(attn): 0.1099, norm(output): 0.1807, norm(x): 0.1497, norm(y): 1.0043, norm:1.2018, tok/sec: 143065.36, flops:111.42, batch-reuse:1
@ 485 train 6.0730 , allloss: 6.0761, dt: 898.69ms, fracRes: 0.0127, norm(attn): 0.1104, norm(output): 0.1816, norm(x): 0.1501, norm(y): 1.0042, norm:1.0029, tok/sec: 145848.58, flops:113.59, batch-reuse:1
@ 486 train 6.2551 , allloss: 6.2573, dt: 900.63ms, fracRes: 0.0133, norm(attn): 0.1143, norm(output): 0.1807, norm(x): 0.1494, norm(y): 1.0042, norm:1.0310, tok/sec: 145533.26, flops:113.34, batch-reuse:1
@ 487 train 6.1846 , allloss: 6.1883, dt: 903.50ms, fracRes: 0.0144, norm(attn): 0.1118, norm(output): 0.1797, norm(x): 0.1497, norm(y): 1.0042, norm:1.1693, tok/sec: 145072.18, flops:112.98, batch-reuse:1
@ 488 train 6.0802 , allloss: 6.0820, dt: 901.87ms, fracRes: 0.0165, norm(attn): 0.1113, norm(output): 0.1787, norm(x): 0.1495, norm(y): 1.0043, norm:1.2461, tok/sec: 145332.97, flops:113.19, batch-reuse:1
@ 489 train 6.1486 , allloss: 6.1512, dt: 895.60ms, fracRes: 0.0157, norm(attn): 0.1099, norm(output): 0.1777, norm(x): 0.1494, norm(y): 1.0042, norm:0.9868, tok/sec: 146351.19, flops:113.98, batch-reuse:1
@ 490 train 6.1984 , allloss: 6.2003, dt: 907.59ms, fracRes: 0.0146, norm(attn): 0.1128, norm(output): 0.1777, norm(x): 0.1499, norm(y): 1.0042, norm:0.9545, tok/sec: 144417.61, flops:112.47, batch-reuse:1
@ 491 train 6.2551 , allloss: 6.2566, dt: 878.69ms, fracRes: 0.0153, norm(attn): 0.1162, norm(output): 0.1816, norm(x): 0.1501, norm(y): 1.0043, norm:1.2740, tok/sec: 149167.11, flops:116.17, batch-reuse:1
@ 492 train 6.2502 , allloss: 6.2522, dt: 892.79ms, fracRes: 0.0158, norm(attn): 0.1123, norm(output): 0.1777, norm(x): 0.1502, norm(y): 1.0043, norm:1.2855, tok/sec: 146812.29, flops:114.34, batch-reuse:1
@ 493 train 6.2115 , allloss: 6.2135, dt: 900.71ms, fracRes: 0.0169, norm(attn): 0.1089, norm(output): 0.1787, norm(x): 0.1505, norm(y): 1.0043, norm:1.5113, tok/sec: 145520.32, flops:113.33, batch-reuse:1
@ 494 train 6.1852 , allloss: 6.1869, dt: 900.64ms, fracRes: 0.0165, norm(attn): 0.1118, norm(output): 0.1797, norm(x): 0.1501, norm(y): 1.0043, norm:1.4137, tok/sec: 145532.18, flops:113.34, batch-reuse:1
@ 495 train 6.0727 , allloss: 6.0755, dt: 902.65ms, fracRes: 0.0141, norm(attn): 0.1152, norm(output): 0.1816, norm(x): 0.1513, norm(y): 1.0042, norm:1.3278, tok/sec: 145208.59, flops:113.09, batch-reuse:1
@ 496 train 6.1769 , allloss: 6.1792, dt: 886.70ms, fracRes: 0.0151, norm(attn): 0.1152, norm(output): 0.1816, norm(x): 0.1508, norm(y): 1.0043, norm:1.0924, tok/sec: 147819.19, flops:115.12, batch-reuse:1
@ 497 train 6.0825 , allloss: 6.0854, dt: 899.70ms, fracRes: 0.0190, norm(attn): 0.1172, norm(output): 0.1787, norm(x): 0.1502, norm(y): 1.0044, norm:1.4711, tok/sec: 145683.74, flops:113.46, batch-reuse:1
@ 498 train 6.2412 , allloss: 6.2431, dt: 904.77ms, fracRes: 0.0200, norm(attn): 0.1147, norm(output): 0.1816, norm(x): 0.1517, norm(y): 1.0044, norm:1.5913, tok/sec: 144867.66, flops:112.82, batch-reuse:1
@ 499 train 6.2590 , allloss: 6.2607, dt: 889.48ms, fracRes: 0.0165, norm(attn): 0.1172, norm(output): 0.1816, norm(x): 0.1513, norm(y): 1.0043, norm:1.2715, tok/sec: 147357.79, flops:114.76, batch-reuse:1
@ 500 train 6.1479 , allloss: 6.1511, dt: 886.97ms, fracRes: 0.0155, norm(attn): 0.1221, norm(output): 0.1816, norm(x): 0.1507, norm(y): 1.0043, norm:1.4204, tok/sec: 147775.52, flops:115.09, batch-reuse:1
@ 501 train 6.2128 , allloss: 6.2150, dt: 907.63ms, fracRes: 0.0162, norm(attn): 0.1138, norm(output): 0.1836, norm(x): 0.1516, norm(y): 1.0043, norm:1.2942, tok/sec: 144411.12, flops:112.47, batch-reuse:1
@ 502 train 6.2123 , allloss: 6.2135, dt: 901.15ms, fracRes: 0.0161, norm(attn): 0.1143, norm(output): 0.1836, norm(x): 0.1518, norm(y): 1.0043, norm:1.2001, tok/sec: 145449.13, flops:113.28, batch-reuse:1
@ 503 train 6.1864 , allloss: 6.1885, dt: 903.26ms, fracRes: 0.0169, norm(attn): 0.1138, norm(output): 0.1836, norm(x): 0.1520, norm(y): 1.0043, norm:1.3941, tok/sec: 145109.48, flops:113.01, batch-reuse:1
@ 504 train 6.2096 , allloss: 6.2134, dt: 895.43ms, fracRes: 0.0164, norm(attn): 0.1133, norm(output): 0.1836, norm(x): 0.1516, norm(y): 1.0043, norm:1.2387, tok/sec: 146378.27, flops:114.00, batch-reuse:1
@ 505 train 6.1226 , allloss: 6.1241, dt: 890.49ms, fracRes: 0.0177, norm(attn): 0.1143, norm(output): 0.1846, norm(x): 0.1523, norm(y): 1.0044, norm:0.9388, tok/sec: 147190.23, flops:114.63, batch-reuse:1
@ 506 train 6.1663 , allloss: 6.1710, dt: 876.69ms, fracRes: 0.0185, norm(attn): 0.1143, norm(output): 0.1816, norm(x): 0.1518, norm(y): 1.0044, norm:1.0677, tok/sec: 149507.94, flops:116.44, batch-reuse:1
@ 507 train 6.1572 , allloss: 6.1593, dt: 897.48ms, fracRes: 0.0159, norm(attn): 0.1221, norm(output): 0.1846, norm(x): 0.1523, norm(y): 1.0043, norm:1.0780, tok/sec: 146044.13, flops:113.74, batch-reuse:1
@ 508 train 6.0847 , allloss: 6.0876, dt: 895.65ms, fracRes: 0.0145, norm(attn): 0.1221, norm(output): 0.1826, norm(x): 0.1528, norm(y): 1.0043, norm:1.0897, tok/sec: 146342.93, flops:113.97, batch-reuse:1
@ 509 train 6.1575 , allloss: 6.1600, dt: 901.53ms, fracRes: 0.0150, norm(attn): 0.1211, norm(output): 0.1846, norm(x): 0.1530, norm(y): 1.0043, norm:1.1205, tok/sec: 145388.51, flops:113.23, batch-reuse:1
@ 510 train 6.1089 , allloss: 6.1123, dt: 908.58ms, fracRes: 0.0178, norm(attn): 0.1201, norm(output): 0.1865, norm(x): 0.1540, norm(y): 1.0045, norm:1.6812, tok/sec: 144260.23, flops:112.35, batch-reuse:1
@ 511 train 6.2045 , allloss: 6.2066, dt: 904.40ms, fracRes: 0.0202, norm(attn): 0.1240, norm(output): 0.1836, norm(x): 0.1524, norm(y): 1.0046, norm:1.8799, tok/sec: 144927.08, flops:112.87, batch-reuse:1
@ 512 train 6.1141 , allloss: 6.1166, dt: 905.58ms, fracRes: 0.0194, norm(attn): 0.1191, norm(output): 0.1855, norm(x): 0.1537, norm(y): 1.0045, norm:0.9277, tok/sec: 144738.36, flops:112.72, batch-reuse:1
@ 513 train 6.1159 , allloss: 6.1180, dt: 900.41ms, fracRes: 0.0191, norm(attn): 0.1191, norm(output): 0.1855, norm(x): 0.1536, norm(y): 1.0045, norm:1.1503, tok/sec: 145569.06, flops:113.37, batch-reuse:1
@ 514 train 6.0602 , allloss: 6.0616, dt: 895.55ms, fracRes: 0.0185, norm(attn): 0.1196, norm(output): 0.1865, norm(x): 0.1544, norm(y): 1.0044, norm:0.9621, tok/sec: 146359.30, flops:113.99, batch-reuse:1
@ 515 train 6.0500 , allloss: 6.0514, dt: 900.00ms, fracRes: 0.0164, norm(attn): 0.1187, norm(output): 0.1865, norm(x): 0.1547, norm(y): 1.0044, norm:1.0989, tok/sec: 145635.85, flops:113.42, batch-reuse:1
@ 516 train 6.0543 , allloss: 6.0555, dt: 908.32ms, fracRes: 0.0177, norm(attn): 0.1240, norm(output): 0.1846, norm(x): 0.1536, norm(y): 1.0045, norm:1.0645, tok/sec: 144302.18, flops:112.38, batch-reuse:1
@ 517 train 6.0547 , allloss: 6.0563, dt: 893.49ms, fracRes: 0.0200, norm(attn): 0.1230, norm(output): 0.1826, norm(x): 0.1525, norm(y): 1.0045, norm:1.1687, tok/sec: 146697.31, flops:114.25, batch-reuse:1
@ 518 train 6.1412 , allloss: 6.1432, dt: 900.48ms, fracRes: 0.0193, norm(attn): 0.1211, norm(output): 0.1865, norm(x): 0.1540, norm(y): 1.0044, norm:1.4617, tok/sec: 145557.73, flops:113.36, batch-reuse:1
@ 519 train 6.0784 , allloss: 6.0804, dt: 891.46ms, fracRes: 0.0178, norm(attn): 0.1245, norm(output): 0.1846, norm(x): 0.1538, norm(y): 1.0044, norm:1.3269, tok/sec: 147030.45, flops:114.51, batch-reuse:1
@ 520 train 6.1379 , allloss: 6.1421, dt: 898.75ms, fracRes: 0.0166, norm(attn): 0.1240, norm(output): 0.1855, norm(x): 0.1542, norm(y): 1.0044, norm:1.1309, tok/sec: 145837.75, flops:113.58, batch-reuse:1
@ 521 train 6.2082 , allloss: 6.2130, dt: 891.80ms, fracRes: 0.0165, norm(attn): 0.1309, norm(output): 0.1855, norm(x): 0.1545, norm(y): 1.0044, norm:1.4324, tok/sec: 146974.32, flops:114.46, batch-reuse:1
@ 522 train 6.0586 , allloss: 6.0620, dt: 890.36ms, fracRes: 0.0149, norm(attn): 0.1270, norm(output): 0.1865, norm(x): 0.1546, norm(y): 1.0044, norm:1.2760, tok/sec: 147211.71, flops:114.65, batch-reuse:1
@ 523 train 6.1376 , allloss: 6.1393, dt: 903.70ms, fracRes: 0.0173, norm(attn): 0.1235, norm(output): 0.1855, norm(x): 0.1543, norm(y): 1.0045, norm:0.8689, tok/sec: 145039.49, flops:112.96, batch-reuse:1
@ 524 train 6.0562 , allloss: 6.0589, dt: 903.48ms, fracRes: 0.0172, norm(attn): 0.1221, norm(output): 0.1865, norm(x): 0.1560, norm(y): 1.0045, norm:1.3500, tok/sec: 145074.90, flops:112.98, batch-reuse:1
@ 525 train 6.1023 , allloss: 6.1037, dt: 917.42ms, fracRes: 0.0163, norm(attn): 0.1230, norm(output): 0.1865, norm(x): 0.1554, norm(y): 1.0045, norm:1.4364, tok/sec: 142869.94, flops:111.27, batch-reuse:1
@ 526 train 6.1054 , allloss: 6.1068, dt: 892.97ms, fracRes: 0.0135, norm(attn): 0.1235, norm(output): 0.1865, norm(x): 0.1561, norm(y): 1.0044, norm:1.1151, tok/sec: 146782.58, flops:114.31, batch-reuse:1
@ 527 train 6.1177 , allloss: 6.1193, dt: 911.50ms, fracRes: 0.0124, norm(attn): 0.1201, norm(output): 0.1865, norm(x): 0.1564, norm(y): 1.0044, norm:1.0556, tok/sec: 143797.61, flops:111.99, batch-reuse:1
@ 528 train 6.0575 , allloss: 6.0585, dt: 903.11ms, fracRes: 0.0140, norm(attn): 0.1240, norm(output): 0.1865, norm(x): 0.1557, norm(y): 1.0045, norm:1.0975, tok/sec: 145133.42, flops:113.03, batch-reuse:1
@ 529 train 6.0586 , allloss: 6.0607, dt: 908.88ms, fracRes: 0.0146, norm(attn): 0.1260, norm(output): 0.1855, norm(x): 0.1552, norm(y): 1.0045, norm:1.4601, tok/sec: 144213.19, flops:112.31, batch-reuse:1
@ 530 train 6.1384 , allloss: 6.1409, dt: 898.03ms, fracRes: 0.0144, norm(attn): 0.1235, norm(output): 0.1875, norm(x): 0.1567, norm(y): 1.0044, norm:0.9963, tok/sec: 145954.80, flops:113.67, batch-reuse:1
@ 531 train 6.1844 , allloss: 6.1878, dt: 897.81ms, fracRes: 0.0146, norm(attn): 0.1250, norm(output): 0.1865, norm(x): 0.1576, norm(y): 1.0045, norm:0.9523, tok/sec: 145991.42, flops:113.70, batch-reuse:1
@ 532 train 5.9854 , allloss: 5.9897, dt: 894.20ms, fracRes: 0.0149, norm(attn): 0.1230, norm(output): 0.1885, norm(x): 0.1577, norm(y): 1.0045, norm:1.4274, tok/sec: 146580.72, flops:114.16, batch-reuse:1
@ 533 train 6.0772 , allloss: 6.0788, dt: 903.99ms, fracRes: 0.0144, norm(attn): 0.1260, norm(output): 0.1875, norm(x): 0.1578, norm(y): 1.0045, norm:1.3367, tok/sec: 144992.79, flops:112.92, batch-reuse:1
@ 534 train 5.9873 , allloss: 5.9886, dt: 877.99ms, fracRes: 0.0159, norm(attn): 0.1260, norm(output): 0.1875, norm(x): 0.1578, norm(y): 1.0046, norm:1.1309, tok/sec: 149285.71, flops:116.26, batch-reuse:1
@ 535 train 6.0862 , allloss: 6.0876, dt: 897.46ms, fracRes: 0.0207, norm(attn): 0.1299, norm(output): 0.1875, norm(x): 0.1563, norm(y): 1.0047, norm:1.1663, tok/sec: 146047.47, flops:113.74, batch-reuse:1
@ 536 train 6.0814 , allloss: 6.0840, dt: 905.29ms, fracRes: 0.0194, norm(attn): 0.1279, norm(output): 0.1865, norm(x): 0.1555, norm(y): 1.0047, norm:1.4843, tok/sec: 144784.79, flops:112.76, batch-reuse:1
@ 537 train 6.0378 , allloss: 6.0394, dt: 894.26ms, fracRes: 0.0188, norm(attn): 0.1328, norm(output): 0.1875, norm(x): 0.1562, norm(y): 1.0046, norm:1.0446, tok/sec: 146570.32, flops:114.15, batch-reuse:1
@ 538 train 6.0447 , allloss: 6.0465, dt: 907.23ms, fracRes: 0.0181, norm(attn): 0.1328, norm(output): 0.1865, norm(x): 0.1565, norm(y): 1.0045, norm:1.3367, tok/sec: 144474.99, flops:112.52, batch-reuse:1
@ 539 train 6.0557 , allloss: 6.0577, dt: 898.20ms, fracRes: 0.0166, norm(attn): 0.1348, norm(output): 0.1895, norm(x): 0.1584, norm(y): 1.0045, norm:1.3681, tok/sec: 145927.71, flops:113.65, batch-reuse:1
@ 540 train 6.1034 , allloss: 6.1054, dt: 900.09ms, fracRes: 0.0169, norm(attn): 0.1338, norm(output): 0.1875, norm(x): 0.1570, norm(y): 1.0045, norm:1.0472, tok/sec: 145620.50, flops:113.41, batch-reuse:1
@ 541 train 6.0589 , allloss: 6.0606, dt: 891.50ms, fracRes: 0.0201, norm(attn): 0.1299, norm(output): 0.1885, norm(x): 0.1565, norm(y): 1.0046, norm:1.4990, tok/sec: 147024.47, flops:114.50, batch-reuse:1
@ 542 train 6.0809 , allloss: 6.0820, dt: 885.68ms, fracRes: 0.0207, norm(attn): 0.1270, norm(output): 0.1865, norm(x): 0.1560, norm(y): 1.0047, norm:1.4349, tok/sec: 147989.49, flops:115.25, batch-reuse:1
@ 543 train 6.1457 , allloss: 6.1466, dt: 901.42ms, fracRes: 0.0192, norm(attn): 0.1245, norm(output): 0.1885, norm(x): 0.1585, norm(y): 1.0046, norm:1.0793, tok/sec: 145405.39, flops:113.24, batch-reuse:1
@ 544 train 6.0526 , allloss: 6.0540, dt: 904.87ms, fracRes: 0.0191, norm(attn): 0.1250, norm(output): 0.1885, norm(x): 0.1588, norm(y): 1.0046, norm:1.3083, tok/sec: 144851.44, flops:112.81, batch-reuse:1
@ 545 train 6.0869 , allloss: 6.0883, dt: 903.64ms, fracRes: 0.0199, norm(attn): 0.1318, norm(output): 0.1875, norm(x): 0.1576, norm(y): 1.0047, norm:1.7076, tok/sec: 145048.26, flops:112.96, batch-reuse:1
@ 546 train 6.0044 , allloss: 6.0064, dt: 889.21ms, fracRes: 0.0187, norm(attn): 0.1299, norm(output): 0.1885, norm(x): 0.1582, norm(y): 1.0047, norm:0.8952, tok/sec: 147402.48, flops:114.80, batch-reuse:1
@ 547 train 6.1449 , allloss: 6.1458, dt: 907.31ms, fracRes: 0.0178, norm(attn): 0.1299, norm(output): 0.1895, norm(x): 0.1605, norm(y): 1.0046, norm:1.4442, tok/sec: 144462.73, flops:112.51, batch-reuse:1
@ 548 train 6.1404 , allloss: 6.1418, dt: 903.00ms, fracRes: 0.0163, norm(attn): 0.1328, norm(output): 0.1885, norm(x): 0.1593, norm(y): 1.0046, norm:1.0415, tok/sec: 145152.43, flops:113.05, batch-reuse:1
@ 549 train 6.0704 , allloss: 6.0719, dt: 902.82ms, fracRes: 0.0172, norm(attn): 0.1367, norm(output): 0.1875, norm(x): 0.1589, norm(y): 1.0046, norm:1.3085, tok/sec: 145181.06, flops:113.07, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.6523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7539, 0.0747, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3184, 0.2100, 0.2070, 0.2656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1904, 0.2266, 0.1387, 0.2178, 0.2266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0320, 0.6406, 0.1768, 0.0894, 0.0537, 0.0057, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0383, 0.5156, 0.3223, 0.0583, 0.0369, 0.0075, 0.0228, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.1172, 0.2295, 0.1016, 0.1445, 0.0508, 0.1069, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1001, 0.1079, 0.0815, 0.1338, 0.0981, 0.0991, 0.1206, 0.1309, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.2275, 0.1924, 0.0850, 0.0942, 0.0378, 0.0684, 0.0703, 0.0603, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0476, 0.3105, 0.1846, 0.0947, 0.0554, 0.0325, 0.0498, 0.0278, 0.0311, 0.0918, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0605, 0.0095, 0.0093, 0.0249, 0.0439, 0.4141, 0.1494, 0.0698, 0.0522, 0.0674, 0.0742, 0.0238, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0564, 0.1147, 0.0767, 0.1104, 0.0664, 0.0659, 0.0825, 0.0703, 0.0635, 0.0566, 0.1250, 0.0347, 0.0000, 0.0000],
        [0.0630, 0.0488, 0.0261, 0.1011, 0.0571, 0.0776, 0.0698, 0.0664, 0.0913, 0.0488, 0.1045, 0.0952, 0.0786, 0.0708, 0.0000],
        [0.0674, 0.0283, 0.0173, 0.0332, 0.0737, 0.1787, 0.0581, 0.1001, 0.0417, 0.0623, 0.0752, 0.0923, 0.0791, 0.0505, 0.0427]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0156,     -0.0068,     -0.0259,  ...,      0.0177,     -0.0044,     -0.0370],
        [    -0.0537,      0.0170,      0.0138,  ...,     -0.0421,      0.0023,      0.0055],
        [    -0.0060,      0.0245,      0.0093,  ...,     -0.0106,     -0.0013,      0.0128],
        ...,
        [     0.0055,     -0.0066,      0.0007,  ...,     -0.0001,      0.0111,     -0.0004],
        [     0.0063,      0.0378,      0.0061,  ...,      0.0128,     -0.0176,     -0.0268],
        [     0.0080,     -0.0235,      0.0446,  ...,      0.0097,      0.0257,      0.0458]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5625, -0.3398, -0.2119, -0.6953, -0.3516,  0.3145, -0.2070, -0.3945, -0.2559, -0.0359, -0.6523,  0.5898,  0.6992, -0.8438,  0.6875, -0.8555, -0.1572, -1.0234,  0.2891,  0.5703,  0.1602, -0.7461, -0.3086,  0.3789, -0.5000,  0.1260, -0.6523, -0.1895,  1.1172,  0.1963, -0.6055, -0.2373,
         0.1562, -0.1914, -0.3457, -0.1934,  1.0625, -0.2324,  0.4121,  1.1797, -0.7305, -0.1475, -0.3496, -0.9297, -1.3984,  0.4805,  0.5703, -0.7188, -0.2139, -0.0225,  0.8008,  0.1689,  0.0133, -0.5625,  0.4727,  0.1699, -0.1060,  0.2578, -0.3379, -0.2383,  1.4922,  0.6875,  0.4766,  0.6523],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0475, -0.0181,  0.0041,  ...,  0.0085,  0.0206, -0.0088],
        [ 0.0183, -0.0040, -0.0187,  ..., -0.0027, -0.0371, -0.0446],
        [ 0.0155,  0.0156, -0.0242,  ...,  0.0321, -0.0036, -0.0220],
        ...,
        [ 0.0350,  0.0380, -0.0154,  ...,  0.0338, -0.0205, -0.0201],
        [ 0.0247, -0.0256, -0.0297,  ..., -0.0178,  0.0181,  0.0180],
        [ 0.0255,  0.0318, -0.0256,  ..., -0.0232, -0.0509, -0.0373]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1309, -0.8867,  0.2988, -0.9023,  0.2031,  1.0078, -0.8125,  0.5547,  1.5547,  0.3320,  0.2598, -0.2295, -0.7031,  0.2305, -1.1562,  1.3359, -0.4043, -0.6719,  1.0625,  0.0170,  0.4316,  0.7812,  0.3223, -0.0366, -0.3379, -0.8398,  1.2500, -0.4551, -0.6094,  0.3633, -0.3711,  0.1533,
        -0.1279, -0.1768,  0.9414, -0.4824,  0.1533, -0.5898, -1.1406, -0.8789,  0.6602, -0.1396, -0.7305,  0.5742, -0.3320,  0.1748, -0.1504,  0.3379, -0.7227, -1.5703,  1.0156, -0.0081,  0.2891, -0.6211,  0.4883,  0.6211,  0.1709, -0.7422,  0.7930, -0.2930,  0.2256, -0.2432,  0.2930, -0.6289],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.6250, -0.4004,  0.5430,  0.2197,  0.2969, -0.0311, -0.2334,  0.4961, -0.1504,  0.8867,  0.0410, -0.1250,  0.6094,  0.1133],
        [ 0.0000, -2.3125, -1.4766, -1.4609, -0.3301,  1.6562,  0.2949,  0.7383,  0.2891,  0.0835,  0.4648, -1.1406, -0.1514,  0.1895, -0.4941],
        [ 0.0000, -0.4160, -0.4297, -0.1797, -0.3672,  0.1973,  0.4434,  0.1553,  0.5117, -0.6211,  0.0194, -0.6758,  0.0171, -0.2207, -0.1201],
        [ 0.0000,  0.1748, -0.3145,  0.1328,  0.1758,  0.3281, -0.0522,  0.2002,  0.3047, -0.1348,  0.0304, -0.4395, -0.3496,  0.5430, -0.6094],
        [ 0.0000,  3.0000,  1.7109,  1.0234,  0.5156, -1.7266, -0.8359, -0.3203, -0.5938,  0.0815, -0.1416,  1.4062,  0.1079,  0.1494,  0.4551],
        [ 0.0000,  2.5938,  2.1250,  0.4219, -0.0403, -1.6250, -0.5156, -0.2285, -0.2812, -0.1572, -0.3672,  0.3398,  0.2734,  0.2324,  0.5117],
        [ 0.0000,  0.1021,  0.7734, -0.0403,  0.3066, -0.7383,  0.0096,  0.3027, -0.4551, -0.3008, -1.0859, -0.0986,  0.3594, -0.2891,  0.1299],
        [ 0.0000,  0.0742, -0.2021,  0.2871, -0.0181, -0.0114,  0.1865,  0.2695,  0.2500,  0.1455,  0.5078,  0.3398, -0.3477,  0.3438,  0.2578],
        [ 0.0000,  1.0781,  0.9141,  0.0957,  0.1973, -0.7109, -0.1196, -0.0962, -0.2451,  0.1299, -0.2480,  0.3203, -0.4277,  0.0410,  0.4121],
        [ 0.0000,  1.8750,  1.3516,  0.6875,  0.1504, -0.3848,  0.0466, -0.5391, -0.4238,  0.6523,  0.4512, -0.1113,  0.4277,  0.4277,  0.5625],
        [ 0.0000, -1.8594, -1.8750, -0.8867, -0.3164,  1.9297,  0.9062,  0.1416, -0.1455,  0.1094,  0.2061, -0.9336, -0.1533, -0.3262, -0.2285],
        [ 0.0000, -0.3164,  0.3926, -0.0097,  0.3555, -0.1533, -0.1611,  0.0613, -0.0986, -0.2021, -0.3125,  0.4785, -0.8008,  0.3789, -0.3672],
        [ 0.0000, -0.2559, -0.8828,  0.4727, -0.0981,  0.2051,  0.1021,  0.0498,  0.3711, -0.2578,  0.5039,  0.4141,  0.2207,  0.1162,  0.3867],
        [ 0.0000, -0.8633, -1.3516, -0.7031,  0.0908,  0.9766, -0.1445,  0.4004, -0.4746, -0.0767,  0.1099,  0.3164,  0.1650, -0.2871, -0.4512]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3051],
        [0.7669],
        [0.3561],
        [0.2192],
        [0.0551],
        [0.0839],
        [0.1073],
        [0.0997],
        [0.0882],
        [0.0747],
        [0.0734],
        [0.0679],
        [0.0673],
        [0.0637]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.8125, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.3164, 0.3359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.2656, 0.3223, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.1484, 0.3672, 0.1553, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4805, 0.0806, 0.1152, 0.1729, 0.1201, 0.0310, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.1138, 0.2100, 0.1641, 0.1504, 0.0737, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.1245, 0.1562, 0.1138, 0.1318, 0.0737, 0.0806, 0.0659, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.0737, 0.1060, 0.0757, 0.0645, 0.2168, 0.0889, 0.2559, 0.0525, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.0454, 0.0503, 0.0645, 0.0776, 0.0188, 0.0635, 0.1006, 0.3281, 0.0175, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.0356, 0.0825, 0.0776, 0.0588, 0.0155, 0.0166, 0.0260, 0.2295, 0.0056, 0.0014, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2490, 0.0664, 0.1328, 0.0908, 0.0791, 0.0315, 0.0559, 0.0388, 0.1865, 0.0238, 0.0178, 0.0272, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.1113, 0.1226, 0.0503, 0.0830, 0.0615, 0.0645, 0.0640, 0.0713, 0.0449, 0.0796, 0.0757, 0.0684, 0.0000, 0.0000],
        [0.0124, 0.0327, 0.0281, 0.0178, 0.0204, 0.1084, 0.0293, 0.0737, 0.0084, 0.2285, 0.2715, 0.1318, 0.0332, 0.0052, 0.0000],
        [0.0942, 0.0530, 0.0698, 0.0713, 0.0378, 0.0354, 0.0811, 0.0815, 0.0884, 0.0640, 0.0496, 0.0471, 0.0879, 0.0752, 0.0635]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0299, -0.0289,  0.0269,  ...,  0.0114, -0.0224, -0.0217],
        [ 0.0207, -0.0014,  0.0195,  ..., -0.0145,  0.0020, -0.0064],
        [ 0.0075,  0.0438,  0.0097,  ..., -0.0290, -0.0221,  0.0192],
        ...,
        [ 0.0183, -0.0180, -0.0168,  ...,  0.0365,  0.0114,  0.0286],
        [ 0.0280,  0.0146,  0.0285,  ..., -0.0117,  0.0185,  0.0003],
        [ 0.0083, -0.0277, -0.0218,  ...,  0.0400, -0.0093,  0.0096]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2891, -0.6680,  0.2422, -0.4219,  0.2236, -0.7344,  0.2617,  1.6172,  0.3379, -1.0781, -0.5820, -0.6680, -0.9102, -0.0659, -1.0078, -1.1641,  0.1689,  0.0811,  0.6562, -0.2715, -0.7383, -0.1387,  0.4844, -0.1367,  0.5703, -0.6992, -0.7227,  0.5078,  0.0752, -0.0889, -0.0903, -0.9375,
        -1.7188, -0.8164,  1.1484, -0.0018, -1.1562, -0.5703,  0.5117, -0.4570, -0.3633, -0.0981,  0.5898,  0.0771, -0.0659,  0.0508,  1.3828,  0.2754, -0.3750,  1.0156, -1.0938,  0.9414, -0.7969, -0.5820, -0.1562,  0.6602,  0.3438,  0.1904,  0.0113, -0.6445,  0.6328, -0.7500,  0.6289, -0.8086],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0156,  0.0169,  0.0118,  ..., -0.0292,  0.0190,  0.0075],
        [ 0.0196, -0.0021, -0.0031,  ...,  0.0106, -0.0325, -0.0215],
        [ 0.0206,  0.0237,  0.0015,  ...,  0.0505,  0.0113, -0.0129],
        ...,
        [-0.0321,  0.0044,  0.0027,  ..., -0.0335, -0.0006, -0.0518],
        [-0.0188, -0.0140, -0.0001,  ...,  0.0491, -0.0439,  0.0242],
        [-0.0058,  0.0190, -0.0072,  ..., -0.0750,  0.0064, -0.0091]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0776, -0.8828,  0.6328,  0.5703,  0.4062,  0.6133, -0.4883,  0.3730, -0.3418,  0.6406, -0.3223, -0.1582,  0.2500,  0.2559, -0.8047, -0.7617,  0.1963,  0.0708,  0.3555,  0.4551,  0.9531,  1.4609, -0.3477, -0.0347, -0.8477,  0.2832, -0.0339, -0.2432,  0.7812,  0.2246, -0.0393,  0.2871,
         0.7500, -1.1797, -0.8555, -0.7070,  0.6133,  0.0067, -0.4434,  1.1875, -0.7344, -0.4238, -0.0188, -0.1631, -0.0330, -0.0630,  0.6836, -0.5312,  0.0903,  0.3750,  0.4980, -0.3203, -0.0237,  0.2559, -0.1611,  0.6094,  0.2354,  0.0776,  1.2500, -0.3555, -0.2500,  0.0903, -0.9141,  0.6680],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.4766,  1.3984,  0.6602,  1.5156,  2.9219,  2.0781,  1.8516, -0.1191,  3.2656,  4.1562,  3.0625,  2.1562, -0.7422,  2.5000],
        [ 0.0000, -0.0918, -0.0320,  0.1523, -0.5469,  0.0461, -0.1738, -0.0854, -0.2090,  0.0645, -0.4199, -0.4336,  0.3750, -0.3320,  0.0150],
        [ 0.0000,  0.3867,  0.5820,  0.2520,  1.1797,  1.4141,  1.3594,  1.3750,  0.1167,  2.0000,  2.7656,  1.3047,  1.5469, -0.1226,  1.4375],
        [ 0.0000, -0.2236,  0.6836, -0.1777, -0.2451,  0.0747, -0.5820, -0.1533, -0.3789,  0.2500,  0.1797,  0.7188, -0.1104, -0.9453,  0.2910],
        [ 0.0000, -1.7812, -1.4297, -1.0156, -1.3828, -2.7344, -1.6797, -1.6797, -0.3750, -3.1875, -3.5469, -2.2812, -1.9844, -0.1177, -1.8203],
        [ 0.0000, -0.5195,  0.0928, -0.1533, -0.2441, -0.9531, -0.6758,  0.2930,  0.0505, -0.1953, -0.3340, -0.2236, -0.0747, -0.2695, -0.4434],
        [ 0.0000, -0.7148, -0.4863, -0.8008, -0.6562, -1.2344, -1.1484, -1.3516, -0.2373, -1.9609, -2.5469, -1.5391, -0.7812,  0.2168, -1.4062],
        [ 0.0000,  0.0957,  0.4609,  0.1221, -0.0356,  1.1719,  0.2832,  1.3359, -0.2432,  1.8828,  1.8047,  1.7500,  0.6602, -0.6641,  1.1406],
        [ 0.0000, -1.6328, -1.5391, -1.2891, -1.1016, -2.5156, -1.3047, -0.8398,  0.3398, -2.5938, -3.3438, -2.0156, -0.9453,  0.6641, -1.7578],
        [ 0.0000, -2.5312, -1.7031, -1.7656, -2.0312, -3.3750, -3.2969, -2.8594, -0.6797, -4.3750, -5.7500, -3.7344, -2.3750, -0.3203, -2.5938],
        [ 0.0000, -1.3203, -0.6289, -1.0078, -1.1484, -2.0625, -1.4922, -1.8594, -0.2891, -2.3438, -2.6406, -2.2188, -1.6016,  0.0879, -1.3203],
        [ 0.0000,  0.0796,  0.1768, -0.7109, -0.2129, -0.5156, -0.4688, -0.4707, -0.3652, -0.8242, -0.2578, -0.3047, -0.4102,  0.1582, -0.7734],
        [ 0.0000,  0.9727,  0.8203,  0.3633,  0.5039,  2.1719,  0.8633,  1.7812, -0.3828,  2.9219,  3.0781,  2.3594,  0.9883, -0.8789,  2.0625],
        [ 0.0000, -0.5781, -0.2988, -0.2793, -0.9180, -0.9844, -0.1533, -0.1445, -0.0654, -0.3887, -0.6484, -0.6953, -0.0723, -0.2295, -0.3984]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1383],
        [0.4385],
        [0.1669],
        [0.1891],
        [0.5278],
        [0.1842],
        [0.3000],
        [0.0420],
        [0.2795],
        [0.4982],
        [0.3039],
        [0.1135],
        [0.0091],
        [0.1449]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.7109, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2490, 0.4023, 0.3496, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1973, 0.2441, 0.3066, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1104, 0.2188, 0.2520, 0.1777, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.1396, 0.1963, 0.1504, 0.2490, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3184, 0.1104, 0.1787, 0.1543, 0.0918, 0.1270, 0.0198, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2871, 0.0859, 0.0835, 0.2080, 0.0537, 0.2139, 0.0322, 0.0352, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.1367, 0.1582, 0.1030, 0.1035, 0.0986, 0.0776, 0.0728, 0.0830, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2217, 0.1660, 0.0923, 0.1104, 0.0996, 0.1030, 0.0488, 0.0386, 0.0825, 0.0369, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0532, 0.0933, 0.0576, 0.1230, 0.1455, 0.1079, 0.0786, 0.0471, 0.0830, 0.0957, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.1230, 0.0762, 0.0874, 0.0608, 0.1113, 0.0337, 0.0352, 0.0427, 0.0135, 0.0732, 0.0444, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.0688, 0.0723, 0.1523, 0.0767, 0.1504, 0.0249, 0.0195, 0.0620, 0.0179, 0.0996, 0.0337, 0.0291, 0.0000, 0.0000],
        [0.1768, 0.1162, 0.1074, 0.0693, 0.0613, 0.0703, 0.0432, 0.0449, 0.0488, 0.0275, 0.0732, 0.0610, 0.0566, 0.0432, 0.0000],
        [0.2383, 0.1035, 0.0564, 0.0850, 0.0491, 0.0859, 0.0238, 0.0417, 0.0806, 0.0178, 0.0559, 0.0298, 0.0532, 0.0535, 0.0253]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0119, -0.0441, -0.0225,  ...,  0.0042, -0.0121,  0.0193],
        [ 0.0194, -0.0051,  0.0071,  ...,  0.0047, -0.0083, -0.0442],
        [ 0.0207,  0.0365, -0.0154,  ..., -0.0109,  0.0237,  0.0470],
        ...,
        [ 0.0395, -0.0023, -0.0342,  ..., -0.0004, -0.0062,  0.0246],
        [ 0.0082,  0.0530, -0.0016,  ...,  0.0155,  0.0046, -0.0391],
        [-0.0450, -0.0113, -0.0041,  ...,  0.0227,  0.0137,  0.0238]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0806, -0.9453, -0.2812,  1.0703, -0.3281,  1.1094,  0.9023,  1.1797,  0.0417,  1.4062, -0.0398,  1.4609,  0.5781, -1.0391, -0.0864, -0.7812, -1.3047,  0.0579, -1.2344,  0.5742, -0.8047,  1.1875, -1.1094,  0.7695, -0.7344, -1.1094, -0.4727,  0.6172, -0.6055, -0.4316,  1.3281, -1.5078,
        -0.8477,  0.1147, -0.9219,  0.2305,  0.7617,  0.6719,  1.4141, -0.6094, -0.1514,  0.0391, -0.9727, -0.3730, -0.3203, -0.9492, -0.4668,  0.9180,  0.9453, -0.4941, -0.0610, -0.0249, -1.2734,  0.0461, -0.6992,  0.6680, -1.6875,  0.3613, -0.5938, -1.1328,  1.2578, -1.1875,  1.0469, -0.0447],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0437,  0.0138,  0.0113,  ...,  0.0063,  0.0048, -0.0124],
        [-0.0005, -0.0533, -0.0103,  ..., -0.0120, -0.0224,  0.0052],
        [ 0.0554,  0.0268,  0.0118,  ...,  0.0210,  0.0137, -0.0609],
        ...,
        [-0.0070,  0.0213, -0.0064,  ...,  0.0138, -0.0037, -0.0134],
        [ 0.0131, -0.0422,  0.0173,  ...,  0.0276, -0.0129, -0.0312],
        [ 0.0086, -0.0121,  0.0414,  ...,  0.0017,  0.0170, -0.0480]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.7812, -0.2773, -0.3047, -0.2578, -0.6289, -0.4395, -0.9766,  0.0481, -0.4863,  0.1836,  0.2539,  0.2793, -0.2734,  1.3750, -0.2773, -0.2754,  1.0156,  0.0884, -0.1426,  1.0000,  1.8203, -0.3711,  0.4648, -0.2354,  1.1719,  0.6992,  0.5312, -0.3809,  0.3008,  0.4883, -1.0703, -0.4082,
         0.3223,  0.7617,  1.1953, -0.1074, -1.3672, -0.2656, -1.0234,  0.1533,  0.6758,  0.3867,  1.0625,  0.8789,  0.7656,  0.3379,  0.6445, -0.0214, -0.2480,  0.5312,  0.1406, -1.0234, -0.2383,  0.8086,  1.0859,  0.0713,  0.4883, -0.5664,  1.2344,  0.3027, -0.0815, -0.0234, -0.3086,  0.3223],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.8906,  1.4141,  0.5703,  1.8984,  0.9375,  2.8281,  1.6797,  0.7891,  2.3438,  0.9180,  2.2344,  1.5469,  1.1953,  2.3750],
        [ 0.0000,  0.4785,  0.3398,  0.1572,  0.4980,  0.6602,  0.8438,  0.0391, -0.0613,  0.4805,  0.1895,  0.5117,  0.2051,  0.2002,  0.5664],
        [ 0.0000,  0.2109,  0.4414,  0.2383,  1.5703,  0.1182,  1.5781,  0.2891,  0.8164,  0.8203,  0.7773,  1.2109,  0.6680,  1.0938,  1.1406],
        [ 0.0000,  0.6836,  0.8281,  0.4746,  0.7852, -0.1416,  0.7734,  0.2168,  0.1128,  0.8867,  0.3828,  1.0625,  0.2451,  0.1904,  0.8672],
        [ 0.0000,  0.6875,  1.0312,  0.7617,  1.2656,  1.0234,  1.3672,  0.6797,  0.8633,  1.5156,  0.6250,  1.1641,  0.6016,  1.0312,  1.1562],
        [ 0.0000, -1.0625, -0.5820, -0.7266, -1.2422, -0.9219, -2.7812, -2.3438, -1.2188, -2.5781, -0.9102, -1.6797, -2.0625, -1.8516, -2.0469],
        [ 0.0000, -1.2109, -1.2344, -0.3242, -1.6797, -0.2949, -2.1875, -2.0938, -1.4922, -2.1719, -0.7930, -1.8828, -1.6797, -1.8438, -2.0156],
        [ 0.0000, -0.1914, -0.0452, -0.4785, -0.4727, -0.5234, -0.7578, -0.8242, -0.6953, -1.0469, -0.3789, -0.4316, -0.6914, -0.6680, -0.7148],
        [ 0.0000, -0.2871, -0.8750, -0.6992, -0.8008, -0.7656, -1.5156, -1.7500, -0.9844, -1.7969, -0.4941, -1.4141, -1.0391, -1.1719, -1.3281],
        [ 0.0000,  0.5625,  0.0781,  0.8398,  1.0078,  0.7070,  0.3867, -0.1240,  0.4473,  0.5859,  0.7695,  0.6250, -0.0527,  0.5703,  0.1504],
        [ 0.0000, -0.8906, -1.3672, -1.2266, -1.5938, -0.9883, -2.1875, -2.1406, -1.9453, -3.0938, -1.4062, -1.9062, -1.5469, -2.2344, -1.9531],
        [ 0.0000, -1.0312, -0.9844, -0.2402, -0.9258, -0.2520, -2.0469, -2.2969, -1.1328, -2.3750, -0.6602, -1.7500, -1.8984, -1.4844, -1.6953],
        [ 0.0000, -0.4199, -0.4961, -0.9336, -1.0625, -0.9180, -1.4062, -1.3672, -1.2812, -1.8594, -0.8828, -1.0625, -1.1328, -1.4062, -1.4062],
        [ 0.0000, -0.8359, -1.4453, -1.0312, -1.5859, -1.0234, -2.2969, -1.7422, -1.0859, -2.5938, -1.4531, -2.0781, -1.5000, -1.5000, -2.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3456],
        [0.2398],
        [0.1705],
        [0.1490],
        [0.1031],
        [0.2803],
        [0.2392],
        [0.1280],
        [0.1377],
        [0.0549],
        [0.1513],
        [0.1534],
        [0.1119],
        [0.1329]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4355, 0.5664, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3398, 0.3359, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0240, 0.1045, 0.7461, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0566, 0.1143, 0.5664, 0.1562, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0361, 0.0825, 0.4961, 0.1514, 0.0613, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.1187, 0.3203, 0.0908, 0.1426, 0.0864, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1245, 0.0635, 0.1211, 0.1016, 0.1230, 0.1631, 0.0811, 0.2236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.0688, 0.1245, 0.0767, 0.0781, 0.1943, 0.0422, 0.1318, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.0801, 0.0908, 0.0381, 0.0488, 0.1245, 0.0486, 0.1973, 0.1533, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2383, 0.0635, 0.0513, 0.0183, 0.0630, 0.1089, 0.0317, 0.1299, 0.2275, 0.0459, 0.0219, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0308, 0.0757, 0.1357, 0.1387, 0.0654, 0.0598, 0.0354, 0.0928, 0.0610, 0.0457, 0.0757, 0.1836, 0.0000, 0.0000, 0.0000],
        [0.0557, 0.0356, 0.0854, 0.0566, 0.0618, 0.0791, 0.0361, 0.0977, 0.1328, 0.0308, 0.1167, 0.0996, 0.1108, 0.0000, 0.0000],
        [0.0630, 0.0449, 0.0732, 0.0483, 0.0486, 0.1338, 0.0287, 0.0874, 0.1235, 0.0908, 0.0244, 0.0552, 0.0583, 0.1191, 0.0000],
        [0.2158, 0.0557, 0.0214, 0.0292, 0.0757, 0.0400, 0.0918, 0.0537, 0.0962, 0.0156, 0.0361, 0.0381, 0.0603, 0.0952, 0.0752]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0116, -0.0086,  0.0170,  ...,  0.0157, -0.0128,  0.0670],
        [-0.0191, -0.0302, -0.0023,  ..., -0.0016,  0.0086, -0.0097],
        [ 0.0004, -0.0071,  0.0102,  ..., -0.0050, -0.0004,  0.0027],
        ...,
        [-0.0168,  0.0009,  0.0127,  ...,  0.0076,  0.0274,  0.0343],
        [ 0.0210, -0.0358,  0.0142,  ...,  0.0256, -0.0026, -0.0510],
        [-0.0128,  0.0002, -0.0538,  ..., -0.0397, -0.0036, -0.0700]], device='cuda:0', requires_grad=True)
K: tensor([-2.0625, -1.5234,  0.7578, -0.6445,  0.3945,  0.1064, -1.0547,  0.4570, -0.1196,  0.5352,  1.2266,  1.1094,  1.1250, -0.5234,  1.0469, -1.1094, -0.0845, -0.1250, -0.5703,  0.8945,  1.1250, -0.5000, -0.4492,  0.4707, -0.4004,  1.5781,  2.1562, -1.0703, -1.2734, -0.7031,  0.2715, -1.6250,
         0.6758,  1.0703,  1.6484,  0.1582, -1.7344,  0.1768, -0.2852, -1.5469,  0.1270, -0.4258, -0.0337, -0.7812,  0.5391,  1.6016, -0.0605, -1.1797, -0.5156, -1.0156, -1.8594, -0.4414,  0.7461,  0.6836, -0.8555, -0.1875,  0.3027,  0.8203, -0.4258, -1.2109, -0.1328, -0.0400,  1.1953,  0.1953],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0010,  0.0268, -0.0032,  ...,  0.0427,  0.0013,  0.0244],
        [-0.0073, -0.0124, -0.0236,  ..., -0.0125,  0.0019,  0.0059],
        [-0.0147, -0.0121, -0.0060,  ..., -0.0129, -0.0158, -0.0295],
        ...,
        [-0.0115, -0.0083,  0.0034,  ...,  0.0166, -0.0034,  0.0012],
        [ 0.0019,  0.0011, -0.0080,  ..., -0.0015,  0.0210,  0.0453],
        [-0.0216, -0.0076, -0.0173,  ...,  0.0205, -0.0187,  0.0384]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1514,  0.4883, -0.4590,  0.5039, -0.6719,  0.1167,  0.8359,  0.5156,  0.0299,  0.1465,  0.4043, -0.2949, -1.1250, -0.3184, -0.0043, -0.0369, -0.2168, -0.3242,  0.0223, -1.2500, -0.1416, -0.6758, -0.1719,  0.5312, -0.8594, -0.9258,  0.0815, -0.9805, -0.2393, -1.0469,  0.6914,  0.2188,
        -1.1172, -0.4473, -0.0299,  0.0115,  0.3691, -0.0815, -0.6953, -0.3320,  0.1738,  0.9648, -0.3672,  0.6562, -0.1504,  0.4805, -0.0067,  0.9062, -0.5742,  0.2119, -0.5273,  0.3633,  1.3125, -0.5820,  0.7344,  0.1108, -1.1953, -0.2490, -0.6992,  1.2344,  0.0571, -0.1318, -1.6797,  0.1035],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2617,      0.8594,      0.0001,      0.2109,     -0.0038,     -0.5039,      0.0064,      0.9492,      0.2119,     -0.5703,      0.5742,     -0.2793,      0.9219,     -0.2236],
        [     0.0000,     -0.0095,     -0.0488,     -0.5664,     -0.5469,     -0.4434,     -0.2793,      0.1611,      0.1611,     -0.6133,     -1.0625,      0.2676,      0.2266,      0.1494,     -0.0062],
        [     0.0000,      1.4688,      3.4375,      1.6406,      0.8125,      1.2266,     -0.1807,      1.8359,      1.4922,      1.2031,      1.9453,      2.6875,      1.5781,      1.5938,      1.8828],
        [     0.0000,      0.7031,      2.2969,      1.0156,      0.6367,      1.1797,     -0.2598,      1.4922,      1.3438,      1.4141,      1.3984,      1.5938,      0.9453,      1.3672,      0.4121],
        [     0.0000,      0.8281,      2.6250,      1.4375,      0.5273,      1.5547,      0.1152,      1.5938,      1.4922,      1.6719,      1.5703,      2.1250,      1.3281,      1.5234,      1.1172],
        [     0.0000,     -0.3242,      0.6680,     -0.5898,     -0.1396,     -0.6406,     -0.7539,     -0.4883,      0.5938,     -0.9531,      0.6133,      0.5430,     -0.3438,      0.6953,      0.6094],
        [     0.0000,     -0.6758,     -0.0275,     -0.2051,     -0.0124,      0.2676,     -0.4297,      0.5820,      1.0547,     -0.8164,      0.3340,      0.3105,      0.7266,      1.0703,      1.0625],
        [     0.0000,     -0.2734,      0.3184,     -0.1660,     -0.1465,      0.7656,     -0.7656,      0.3730,      0.7539,      0.4043,     -0.7969,      0.0183,     -0.0427,      0.7227,     -0.9141],
        [     0.0000,     -0.4219,     -0.2930,     -1.1641,     -0.9180,      0.0186,     -0.9180,      0.4805,      0.2275,     -0.2314,     -1.2812,     -0.2812,      0.3828,      0.2051,     -0.4766],
        [     0.0000,     -1.3281,     -1.5391,     -2.5625,     -1.3359,     -0.7852,     -2.0156,     -0.6094,     -0.0493,     -1.6484,     -2.3906,     -1.9062,     -0.8594,     -0.0586,     -2.1406],
        [     0.0000,      0.9023,      1.4844,      1.5078,      0.7539,      0.6680,      0.1387,      1.1016,      0.6875,      0.3945,      0.9023,      1.7891,      1.1875,      0.7188,      1.2578],
        [     0.0000,     -0.4453,      0.4297,      0.0176,      0.1030,      0.3535,     -0.4297,      0.5625,      0.8711,     -0.5938,      0.7383,      0.5820,      0.6875,      0.9180,      1.0156],
        [     0.0000,     -0.3398,      0.1523,     -0.2656,     -0.2578,      0.7539,     -0.7891,      0.3301,      0.6758,      0.3672,     -0.9453,     -0.1338,     -0.0752,      0.6367,     -1.0547],
        [     0.0000,     -1.3594,     -2.3125,     -2.0000,     -1.0547,     -1.6797,     -0.8555,     -1.3906,     -0.8086,     -2.6250,     -1.7891,     -1.7344,     -1.2734,     -0.8203,     -1.0547]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4805],
        [0.4637],
        [0.1976],
        [0.2456],
        [0.2740],
        [0.2297],
        [0.3299],
        [0.2257],
        [0.1414],
        [0.3525],
        [0.0804],
        [0.2243],
        [0.1754],
        [0.1966]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4375, 0.5625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2236, 0.2969, 0.4805, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3848, 0.1875, 0.2363, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3164, 0.2793, 0.1133, 0.0977, 0.1934, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2178, 0.1768, 0.1187, 0.0591, 0.0894, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3691, 0.1299, 0.1050, 0.0347, 0.0503, 0.1855, 0.1260, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3359, 0.0801, 0.0211, 0.0151, 0.0408, 0.1387, 0.3184, 0.0491, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.1064, 0.0383, 0.0293, 0.0874, 0.1953, 0.1328, 0.0742, 0.2354, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.0918, 0.0693, 0.1270, 0.1016, 0.0801, 0.0830, 0.1768, 0.0452, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.0649, 0.0374, 0.0244, 0.0464, 0.1455, 0.1465, 0.0469, 0.1963, 0.0510, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.0869, 0.0713, 0.0830, 0.0840, 0.1201, 0.1128, 0.0630, 0.0928, 0.0459, 0.0679, 0.0635, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.0398, 0.0184, 0.0061, 0.0155, 0.1035, 0.1719, 0.0187, 0.2393, 0.0126, 0.0635, 0.0042, 0.0161, 0.0000, 0.0000],
        [0.0786, 0.0674, 0.0259, 0.0183, 0.0559, 0.1338, 0.0903, 0.0481, 0.1572, 0.0303, 0.0630, 0.0337, 0.0588, 0.1396, 0.0000],
        [0.1348, 0.0601, 0.0840, 0.0476, 0.0420, 0.0859, 0.0581, 0.0347, 0.0913, 0.0417, 0.0598, 0.0327, 0.0381, 0.0952, 0.0938]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0163, -0.0046, -0.0213,  ..., -0.0489,  0.0011,  0.0144],
        [-0.0298,  0.0296,  0.0105,  ...,  0.0045, -0.0304,  0.0271],
        [ 0.0224,  0.0119, -0.0100,  ...,  0.0117,  0.0262, -0.0053],
        ...,
        [ 0.0408,  0.0272, -0.0048,  ..., -0.0101,  0.0181, -0.0123],
        [-0.0054,  0.0067,  0.0060,  ..., -0.0141,  0.0204, -0.0190],
        [-0.0399,  0.0109, -0.0268,  ..., -0.0070,  0.0191, -0.0182]], device='cuda:0', requires_grad=True)
K: tensor([    -0.8984,     -0.7031,      0.4414,     -1.2734,      0.1885,      0.6172,      0.6953,     -0.6328,      0.4980,      0.5859,      0.0664,      0.5547,     -0.6055,     -0.2773,     -0.4102,     -0.8242,     -0.8047,     -0.8711,      0.5625,      0.0165,     -0.1211,      0.1924,
             0.0630,     -0.1670,     -0.5742,     -0.9219,     -0.2471,      0.1030,     -0.6289,     -0.5430,     -0.2305,     -1.2344,      0.3398,      0.1680,     -0.9766,     -0.2539,      0.1797,     -1.3906,      0.2891,     -0.9961,      0.7656,      0.6094,      0.2539,      0.0021,
             0.5273,      0.4062,     -0.1943,      2.1875,     -0.2559,     -1.0156,      0.3262,     -0.2021,      0.3535,     -0.1396,      0.2637,     -0.4980,      0.2773,     -0.2051,     -1.0703,      0.7852,     -0.6094,      0.1816,      1.6094,     -0.1357], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0045,  0.0028, -0.0051,  ...,  0.0170,  0.0142,  0.0131],
        [ 0.0633,  0.0173,  0.0430,  ..., -0.0326, -0.0057,  0.0071],
        [-0.0144, -0.0278,  0.0126,  ..., -0.0114,  0.0243,  0.0212],
        ...,
        [-0.0230, -0.0059,  0.0120,  ...,  0.0231,  0.0039, -0.0090],
        [ 0.0128, -0.0220, -0.0233,  ...,  0.0012,  0.0193, -0.0083],
        [-0.0139,  0.0196,  0.0083,  ...,  0.0198, -0.0309, -0.0086]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3262, -0.2334, -1.8594,  0.9141,  0.1357, -0.1719,  0.3047, -0.5117, -0.2773,  0.1875,  1.1172, -0.3105,  1.0469,  0.5195,  0.4102,  0.5039, -0.0613,  0.3066,  0.4727,  0.1631, -1.5000,  0.5391,  1.2656, -0.0708,  0.2100,  0.8711,  0.1572, -0.4102,  0.1182,  0.0493,  0.4297,  0.3906,
         0.0713, -0.4805, -0.1426, -1.2812, -0.5117,  0.5859,  1.0469,  0.9219,  1.1094,  1.4453,  0.6484,  0.8750,  1.1562, -0.2500, -0.2988,  0.2119, -0.1279,  0.9180, -1.0312,  0.2812, -0.2334,  0.3926, -0.7930,  0.1396, -0.9609, -0.6367, -0.6406, -0.4375,  0.5820, -0.0874,  0.9922,  0.1777],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2480,      0.6328,      0.4199,      0.2441,      0.3711,      0.3418,      0.8359,     -0.1455,      0.7031,      0.3672,      0.2178,      0.8359,     -0.0581,      0.2139],
        [     0.0000,      0.2852,      0.7656,      1.0547,      0.7266,     -0.1562,     -0.4531,      0.1855,     -0.1187,      0.2148,      0.3301,      0.3770,      0.1484,     -0.0042,      0.4551],
        [     0.0000,     -0.7188,     -0.4844,     -0.6953,     -0.6289,     -0.4570,     -0.4980,     -0.7734,     -0.6758,     -0.8359,     -0.6289,     -1.1328,     -0.9531,     -0.6055,     -0.5547],
        [     0.0000,     -0.1221,     -1.0312,     -1.1719,     -0.4902,      0.0830,      0.4043,     -0.5742,     -0.1167,     -0.7539,     -0.5352,     -0.9102,     -0.6602,     -0.1787,     -0.7891],
        [     0.0000,     -0.2090,     -0.6094,     -1.3047,     -0.8945,      0.4375,     -0.2158,     -1.3203,      1.0703,     -1.0859,     -0.4492,     -1.5547,     -1.3594,      1.0312,     -0.9297],
        [     0.0000,     -1.0391,     -1.2578,     -2.3594,     -1.9922,     -0.6875,     -1.0703,     -1.8906,     -0.8906,     -2.5156,     -2.0938,     -2.6719,     -2.1406,     -0.9102,     -1.1484],
        [     0.0000,     -1.4297,     -2.7656,     -3.1094,     -2.1094,     -0.8867,     -0.0562,     -1.9219,      0.4590,     -2.5312,     -0.4414,     -3.4531,     -1.9922,      0.3555,     -1.6406],
        [     0.0000,      0.0493,     -0.9727,     -1.2422,     -0.1514,      0.6523,      0.2656,     -0.3125,      0.8398,     -0.7383,     -0.0210,     -0.6328,     -0.1035,      0.6992,     -0.2988],
        [     0.0000,     -0.2139,     -0.4922,      0.1094,     -0.1128,     -0.3477,     -0.3164,      0.4395,     -0.9258,     -0.0159,      0.0226,     -0.4551,      0.0732,     -0.8633,     -0.6523],
        [     0.0000,     -0.8164,     -1.3672,     -1.7969,     -1.1484,     -0.0109,      0.0007,     -1.1406,      0.2910,     -1.0547,     -0.4551,     -1.3281,     -1.5703,      0.1865,     -1.3359],
        [     0.0000,     -0.2217,     -0.4258,     -0.2695,     -0.2578,      0.1001,      0.0356,     -0.5469,     -0.1562,     -0.8633,     -0.4707,     -0.5391,     -0.3379,     -0.1133,      0.0742],
        [     0.0000,     -1.9844,     -2.7656,     -3.8594,     -2.9375,     -1.0391,     -0.5234,     -2.7500,     -0.1963,     -3.1406,     -1.5234,     -4.2500,     -2.8906,     -0.2520,     -2.0000],
        [     0.0000,     -0.1562,     -1.1094,     -1.4531,     -0.3418,      0.5273,      0.1348,     -0.4922,      0.6914,     -0.9531,     -0.2217,     -0.8477,     -0.2930,      0.5703,     -0.4609],
        [     0.0000,     -0.8086,     -0.4746,     -1.0391,     -1.1641,     -0.4531,     -0.8438,     -1.3594,     -0.3887,     -1.1719,     -0.8125,     -1.4219,     -1.2656,     -0.3457,     -0.3613]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5036],
        [0.2511],
        [0.3459],
        [0.3495],
        [0.2190],
        [0.2643],
        [0.2372],
        [0.1533],
        [0.1488],
        [0.1494],
        [0.1300],
        [0.2319],
        [0.1243],
        [0.1422]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0928 a:0.0608,:0.0439 and:0.1221ing:0.0537,:0.1245 a:0.0530
:0.2559)


------
		( a:0.0608,:0.0439 and:0.1221ing:0.0537,:0.1245 a:0.0530
:0.2559-:0.1045)
- The first- The first- The first- The first- The first
@ 550 train 6.0658 , allloss: 6.0695, dt: 1239.66ms, fracRes: 0.0173, norm(attn): 0.1270, norm(output): 0.1895, norm(x): 0.1606, norm(y): 1.0047, norm:1.2858, tok/sec: 105731.81, flops:82.34, batch-reuse:1
@ 551 train 6.1189 , allloss: 6.1211, dt: 889.02ms, fracRes: 0.0175, norm(attn): 0.1299, norm(output): 0.1914, norm(x): 0.1611, norm(y): 1.0047, norm:1.7185, tok/sec: 147434.06, flops:114.82, batch-reuse:1
@ 552 train 5.9765 , allloss: 5.9776, dt: 901.66ms, fracRes: 0.0166, norm(attn): 0.1309, norm(output): 0.1895, norm(x): 0.1610, norm(y): 1.0046, norm:1.2070, tok/sec: 145367.36, flops:113.21, batch-reuse:1
@ 553 train 6.1083 , allloss: 6.1104, dt: 900.22ms, fracRes: 0.0176, norm(attn): 0.1348, norm(output): 0.1885, norm(x): 0.1604, norm(y): 1.0046, norm:1.2180, tok/sec: 145599.59, flops:113.39, batch-reuse:1
@ 554 train 6.0460 , allloss: 6.0474, dt: 903.21ms, fracRes: 0.0190, norm(attn): 0.1338, norm(output): 0.1885, norm(x): 0.1598, norm(y): 1.0047, norm:1.1700, tok/sec: 145117.37, flops:113.02, batch-reuse:1
@ 555 train 6.0226 , allloss: 6.0255, dt: 916.66ms, fracRes: 0.0219, norm(attn): 0.1318, norm(output): 0.1885, norm(x): 0.1598, norm(y): 1.0048, norm:0.8775, tok/sec: 142988.26, flops:111.36, batch-reuse:1
@ 556 train 5.9840 , allloss: 5.9862, dt: 909.28ms, fracRes: 0.0219, norm(attn): 0.1289, norm(output): 0.1885, norm(x): 0.1605, norm(y): 1.0048, norm:1.1556, tok/sec: 144150.00, flops:112.26, batch-reuse:1
@ 557 train 6.0665 , allloss: 6.0681, dt: 889.54ms, fracRes: 0.0194, norm(attn): 0.1338, norm(output): 0.1885, norm(x): 0.1599, norm(y): 1.0047, norm:1.3176, tok/sec: 147348.11, flops:114.76, batch-reuse:1
@ 558 train 6.2164 , allloss: 6.2199, dt: 912.28ms, fracRes: 0.0192, norm(attn): 0.1348, norm(output): 0.1885, norm(x): 0.1599, norm(y): 1.0047, norm:1.1909, tok/sec: 143675.59, flops:111.90, batch-reuse:1
@ 559 train 6.2797 , allloss: 6.2826, dt: 904.65ms, fracRes: 0.0175, norm(attn): 0.1377, norm(output): 0.1914, norm(x): 0.1620, norm(y): 1.0046, norm:1.2322, tok/sec: 144886.75, flops:112.84, batch-reuse:1
@ 560 train 6.2422 , allloss: 6.2466, dt: 909.02ms, fracRes: 0.0185, norm(attn): 0.1377, norm(output): 0.1914, norm(x): 0.1620, norm(y): 1.0047, norm:2.1561, tok/sec: 144190.08, flops:112.30, batch-reuse:1
@ 561 train 6.3145 , allloss: 6.3152, dt: 924.24ms, fracRes: 0.0200, norm(attn): 0.1377, norm(output): 0.1914, norm(x): 0.1610, norm(y): 1.0048, norm:1.7328, tok/sec: 141815.23, flops:110.45, batch-reuse:1
@ 562 train 6.1956 , allloss: 6.1986, dt: 921.14ms, fracRes: 0.0184, norm(attn): 0.1338, norm(output): 0.1904, norm(x): 0.1609, norm(y): 1.0048, norm:0.9882, tok/sec: 142292.52, flops:110.82, batch-reuse:1
@ 563 train 6.2861 , allloss: 6.2876, dt: 894.31ms, fracRes: 0.0156, norm(attn): 0.1357, norm(output): 0.1904, norm(x): 0.1623, norm(y): 1.0047, norm:1.1603, tok/sec: 146561.37, flops:114.14, batch-reuse:1
@ 564 train 6.1173 , allloss: 6.1187, dt: 900.49ms, fracRes: 0.0158, norm(attn): 0.1387, norm(output): 0.1934, norm(x): 0.1631, norm(y): 1.0046, norm:1.0300, tok/sec: 145557.07, flops:113.36, batch-reuse:1
@ 565 train 6.0195 , allloss: 6.0215, dt: 896.66ms, fracRes: 0.0172, norm(attn): 0.1426, norm(output): 0.1943, norm(x): 0.1628, norm(y): 1.0047, norm:1.1590, tok/sec: 146177.25, flops:113.84, batch-reuse:1
@ 566 train 6.2073 , allloss: 6.2085, dt: 906.86ms, fracRes: 0.0171, norm(attn): 0.1357, norm(output): 0.1914, norm(x): 0.1623, norm(y): 1.0047, norm:1.2624, tok/sec: 144534.55, flops:112.56, batch-reuse:1
@ 567 train 6.2223 , allloss: 6.2234, dt: 888.34ms, fracRes: 0.0178, norm(attn): 0.1328, norm(output): 0.1934, norm(x): 0.1636, norm(y): 1.0047, norm:1.2146, tok/sec: 147547.43, flops:114.91, batch-reuse:1
@ 568 train 6.2651 , allloss: 6.2675, dt: 895.20ms, fracRes: 0.0201, norm(attn): 0.1367, norm(output): 0.1934, norm(x): 0.1635, norm(y): 1.0048, norm:1.3913, tok/sec: 146416.25, flops:114.03, batch-reuse:1
@ 569 train 6.1992 , allloss: 6.2010, dt: 905.26ms, fracRes: 0.0200, norm(attn): 0.1396, norm(output): 0.1934, norm(x): 0.1626, norm(y): 1.0048, norm:0.8971, tok/sec: 144789.52, flops:112.76, batch-reuse:1
@ 570 train 6.1546 , allloss: 6.1562, dt: 895.54ms, fracRes: 0.0184, norm(attn): 0.1416, norm(output): 0.1953, norm(x): 0.1636, norm(y): 1.0047, norm:0.9905, tok/sec: 146360.97, flops:113.99, batch-reuse:1
@ 571 train 6.1236 , allloss: 6.1248, dt: 894.08ms, fracRes: 0.0193, norm(attn): 0.1396, norm(output): 0.1914, norm(x): 0.1626, norm(y): 1.0048, norm:1.2585, tok/sec: 146600.46, flops:114.17, batch-reuse:1
@ 572 train 6.0940 , allloss: 6.0958, dt: 888.46ms, fracRes: 0.0188, norm(attn): 0.1348, norm(output): 0.1934, norm(x): 0.1635, norm(y): 1.0048, norm:1.1109, tok/sec: 147527.43, flops:114.89, batch-reuse:1
@ 573 train 6.1398 , allloss: 6.1422, dt: 915.02ms, fracRes: 0.0188, norm(attn): 0.1357, norm(output): 0.1943, norm(x): 0.1629, norm(y): 1.0048, norm:0.9316, tok/sec: 143245.14, flops:111.56, batch-reuse:1
@ 574 train 6.1501 , allloss: 6.1521, dt: 905.98ms, fracRes: 0.0189, norm(attn): 0.1416, norm(output): 0.1914, norm(x): 0.1630, norm(y): 1.0047, norm:0.9521, tok/sec: 144675.06, flops:112.67, batch-reuse:1
@ 575 train 6.0952 , allloss: 6.0981, dt: 908.17ms, fracRes: 0.0206, norm(attn): 0.1396, norm(output): 0.1953, norm(x): 0.1643, norm(y): 1.0048, norm:1.0015, tok/sec: 144324.99, flops:112.40, batch-reuse:1
@ 576 train 6.0893 , allloss: 6.0903, dt: 905.54ms, fracRes: 0.0218, norm(attn): 0.1426, norm(output): 0.1973, norm(x): 0.1636, norm(y): 1.0048, norm:1.4577, tok/sec: 144744.12, flops:112.73, batch-reuse:1
@ 577 train 6.1689 , allloss: 6.1697, dt: 910.66ms, fracRes: 0.0242, norm(attn): 0.1426, norm(output): 0.1934, norm(x): 0.1625, norm(y): 1.0048, norm:1.2833, tok/sec: 143931.52, flops:112.09, batch-reuse:1
@ 578 train 6.1022 , allloss: 6.1041, dt: 908.35ms, fracRes: 0.0225, norm(attn): 0.1396, norm(output): 0.1924, norm(x): 0.1638, norm(y): 1.0048, norm:1.0755, tok/sec: 144296.95, flops:112.38, batch-reuse:1
@ 579 train 6.1348 , allloss: 6.1371, dt: 900.77ms, fracRes: 0.0208, norm(attn): 0.1445, norm(output): 0.1953, norm(x): 0.1647, norm(y): 1.0048, norm:1.7273, tok/sec: 145511.65, flops:113.32, batch-reuse:1
@ 580 train 6.1725 , allloss: 6.1737, dt: 893.42ms, fracRes: 0.0176, norm(attn): 0.1416, norm(output): 0.1973, norm(x): 0.1653, norm(y): 1.0048, norm:1.4324, tok/sec: 146708.75, flops:114.26, batch-reuse:1
@ 581 train 6.1143 , allloss: 6.1153, dt: 878.09ms, fracRes: 0.0165, norm(attn): 0.1387, norm(output): 0.1953, norm(x): 0.1655, norm(y): 1.0048, norm:1.2694, tok/sec: 149269.57, flops:116.25, batch-reuse:1
@ 582 train 6.1050 , allloss: 6.1064, dt: 897.94ms, fracRes: 0.0153, norm(attn): 0.1387, norm(output): 0.1953, norm(x): 0.1655, norm(y): 1.0048, norm:1.0989, tok/sec: 145969.99, flops:113.68, batch-reuse:1
@ 583 train 6.0457 , allloss: 6.0485, dt: 899.24ms, fracRes: 0.0159, norm(attn): 0.1426, norm(output): 0.1953, norm(x): 0.1655, norm(y): 1.0048, norm:1.0994, tok/sec: 145758.29, flops:113.52, batch-reuse:1
@ 584 train 6.1457 , allloss: 6.1471, dt: 898.42ms, fracRes: 0.0174, norm(attn): 0.1406, norm(output): 0.1973, norm(x): 0.1659, norm(y): 1.0048, norm:0.9933, tok/sec: 145892.40, flops:113.62, batch-reuse:1
@ 585 train 6.0832 , allloss: 6.0848, dt: 914.97ms, fracRes: 0.0185, norm(attn): 0.1455, norm(output): 0.1953, norm(x): 0.1652, norm(y): 1.0048, norm:0.8603, tok/sec: 143252.95, flops:111.57, batch-reuse:1
@ 586 train 6.1171 , allloss: 6.1201, dt: 910.75ms, fracRes: 0.0211, norm(attn): 0.1455, norm(output): 0.1953, norm(x): 0.1637, norm(y): 1.0049, norm:0.9589, tok/sec: 143915.77, flops:112.08, batch-reuse:1
@ 587 train 6.1236 , allloss: 6.1257, dt: 889.30ms, fracRes: 0.0205, norm(attn): 0.1426, norm(output): 0.1973, norm(x): 0.1644, norm(y): 1.0048, norm:0.8665, tok/sec: 147387.97, flops:114.79, batch-reuse:1
@ 588 train 6.1417 , allloss: 6.1435, dt: 912.75ms, fracRes: 0.0196, norm(attn): 0.1396, norm(output): 0.1992, norm(x): 0.1663, norm(y): 1.0049, norm:1.0469, tok/sec: 143600.83, flops:111.84, batch-reuse:1
@ 589 train 6.1479 , allloss: 6.1502, dt: 909.86ms, fracRes: 0.0184, norm(attn): 0.1455, norm(output): 0.1982, norm(x): 0.1662, norm(y): 1.0048, norm:1.5403, tok/sec: 144057.76, flops:112.19, batch-reuse:1
@ 590 train 6.1502 , allloss: 6.1513, dt: 910.35ms, fracRes: 0.0174, norm(attn): 0.1416, norm(output): 0.1973, norm(x): 0.1665, norm(y): 1.0048, norm:1.3709, tok/sec: 143980.00, flops:112.13, batch-reuse:1
@ 591 train 6.0751 , allloss: 6.0762, dt: 910.59ms, fracRes: 0.0162, norm(attn): 0.1445, norm(output): 0.1973, norm(x): 0.1671, norm(y): 1.0048, norm:1.0774, tok/sec: 143942.15, flops:112.10, batch-reuse:1
@ 592 train 6.0917 , allloss: 6.0926, dt: 926.75ms, fracRes: 0.0193, norm(attn): 0.1406, norm(output): 0.1982, norm(x): 0.1660, norm(y): 1.0049, norm:1.0964, tok/sec: 141431.46, flops:110.15, batch-reuse:1
@ 593 train 6.0714 , allloss: 6.0724, dt: 925.36ms, fracRes: 0.0201, norm(attn): 0.1387, norm(output): 0.1973, norm(x): 0.1662, norm(y): 1.0049, norm:0.7321, tok/sec: 141645.03, flops:110.31, batch-reuse:1
@ 594 train 6.2788 , allloss: 6.2809, dt: 902.08ms, fracRes: 0.0195, norm(attn): 0.1436, norm(output): 0.1982, norm(x): 0.1668, norm(y): 1.0049, norm:0.9226, tok/sec: 145300.24, flops:113.16, batch-reuse:1
@ 595 train 6.0419 , allloss: 6.0446, dt: 899.38ms, fracRes: 0.0207, norm(attn): 0.1484, norm(output): 0.1953, norm(x): 0.1659, norm(y): 1.0049, norm:1.1918, tok/sec: 145736.46, flops:113.50, batch-reuse:1
@ 596 train 6.0674 , allloss: 6.0700, dt: 916.10ms, fracRes: 0.0242, norm(attn): 0.1416, norm(output): 0.1982, norm(x): 0.1663, norm(y): 1.0051, norm:1.2452, tok/sec: 143075.56, flops:111.43, batch-reuse:1
@ 597 train 6.0854 , allloss: 6.0884, dt: 910.76ms, fracRes: 0.0209, norm(attn): 0.1377, norm(output): 0.1982, norm(x): 0.1673, norm(y): 1.0050, norm:1.9275, tok/sec: 143914.57, flops:112.08, batch-reuse:1
@ 598 train 6.1388 , allloss: 6.1404, dt: 888.38ms, fracRes: 0.0187, norm(attn): 0.1445, norm(output): 0.2002, norm(x): 0.1672, norm(y): 1.0049, norm:1.0508, tok/sec: 147540.54, flops:114.91, batch-reuse:1
@ 599 train 6.1191 , allloss: 6.1230, dt: 897.20ms, fracRes: 0.0204, norm(attn): 0.1494, norm(output): 0.1973, norm(x): 0.1654, norm(y): 1.0051, norm:1.3352, tok/sec: 146089.65, flops:113.78, batch-reuse:1
@ 600 train 6.0784 , allloss: 6.0805, dt: 895.72ms, fracRes: 0.0199, norm(attn): 0.1494, norm(output): 0.1982, norm(x): 0.1662, norm(y): 1.0050, norm:1.5131, tok/sec: 146330.82, flops:113.96, batch-reuse:1
@ 601 train 6.1501 , allloss: 6.1514, dt: 891.84ms, fracRes: 0.0209, norm(attn): 0.1543, norm(output): 0.1973, norm(x): 0.1663, norm(y): 1.0049, norm:1.3903, tok/sec: 146968.30, flops:114.46, batch-reuse:1
@ 602 train 6.1278 , allloss: 6.1314, dt: 920.80ms, fracRes: 0.0196, norm(attn): 0.1562, norm(output): 0.1963, norm(x): 0.1668, norm(y): 1.0049, norm:1.1487, tok/sec: 142345.16, flops:110.86, batch-reuse:1
@ 603 train 6.0707 , allloss: 6.0721, dt: 890.99ms, fracRes: 0.0179, norm(attn): 0.1504, norm(output): 0.1982, norm(x): 0.1677, norm(y): 1.0048, norm:1.0994, tok/sec: 147108.62, flops:114.57, batch-reuse:1
@ 604 train 5.9814 , allloss: 5.9821, dt: 897.43ms, fracRes: 0.0172, norm(attn): 0.1445, norm(output): 0.2002, norm(x): 0.1675, norm(y): 1.0050, norm:1.0758, tok/sec: 146053.01, flops:113.75, batch-reuse:1
@ 605 train 6.0041 , allloss: 6.0044, dt: 914.71ms, fracRes: 0.0170, norm(attn): 0.1436, norm(output): 0.2002, norm(x): 0.1684, norm(y): 1.0050, norm:1.2165, tok/sec: 143293.01, flops:111.60, batch-reuse:1
@ 606 train 6.0282 , allloss: 6.0297, dt: 897.46ms, fracRes: 0.0166, norm(attn): 0.1426, norm(output): 0.2002, norm(x): 0.1682, norm(y): 1.0050, norm:0.7937, tok/sec: 146047.74, flops:113.74, batch-reuse:1
@ 607 train 6.0251 , allloss: 6.0257, dt: 901.34ms, fracRes: 0.0168, norm(attn): 0.1455, norm(output): 0.2002, norm(x): 0.1685, norm(y): 1.0050, norm:1.3357, tok/sec: 145418.73, flops:113.25, batch-reuse:1
@ 608 train 5.9642 , allloss: 5.9671, dt: 911.46ms, fracRes: 0.0178, norm(attn): 0.1494, norm(output): 0.2012, norm(x): 0.1695, norm(y): 1.0049, norm:1.4308, tok/sec: 143804.83, flops:112.00, batch-reuse:1
@ 609 train 6.0130 , allloss: 6.0149, dt: 905.75ms, fracRes: 0.0211, norm(attn): 0.1484, norm(output): 0.2012, norm(x): 0.1688, norm(y): 1.0050, norm:1.1167, tok/sec: 144710.25, flops:112.70, batch-reuse:1
@ 610 train 6.1745 , allloss: 6.1754, dt: 915.45ms, fracRes: 0.0223, norm(attn): 0.1494, norm(output): 0.2021, norm(x): 0.1682, norm(y): 1.0050, norm:1.1792, tok/sec: 143178.03, flops:111.51, batch-reuse:1
@ 611 train 6.0633 , allloss: 6.0643, dt: 908.63ms, fracRes: 0.0214, norm(attn): 0.1494, norm(output): 0.2002, norm(x): 0.1686, norm(y): 1.0050, norm:1.3286, tok/sec: 144252.01, flops:112.34, batch-reuse:1
@ 612 train 6.0905 , allloss: 6.0911, dt: 897.85ms, fracRes: 0.0214, norm(attn): 0.1445, norm(output): 0.2021, norm(x): 0.1707, norm(y): 1.0050, norm:1.4213, tok/sec: 145984.99, flops:113.69, batch-reuse:1
@ 613 train 6.1495 , allloss: 6.1507, dt: 894.18ms, fracRes: 0.0203, norm(attn): 0.1436, norm(output): 0.2002, norm(x): 0.1699, norm(y): 1.0050, norm:1.0039, tok/sec: 146583.41, flops:114.16, batch-reuse:1
@ 614 train 6.0813 , allloss: 6.0823, dt: 899.31ms, fracRes: 0.0193, norm(attn): 0.1504, norm(output): 0.2021, norm(x): 0.1697, norm(y): 1.0049, norm:1.0886, tok/sec: 145746.77, flops:113.51, batch-reuse:1
@ 615 train 6.0973 , allloss: 6.0987, dt: 894.62ms, fracRes: 0.0191, norm(attn): 0.1494, norm(output): 0.2021, norm(x): 0.1706, norm(y): 1.0050, norm:1.3656, tok/sec: 146511.53, flops:114.10, batch-reuse:1
@ 616 train 6.0824 , allloss: 6.0837, dt: 915.75ms, fracRes: 0.0206, norm(attn): 0.1504, norm(output): 0.2021, norm(x): 0.1700, norm(y): 1.0050, norm:0.8378, tok/sec: 143131.17, flops:111.47, batch-reuse:1
@ 617 train 5.9107 , allloss: 5.9124, dt: 909.28ms, fracRes: 0.0216, norm(attn): 0.1465, norm(output): 0.2021, norm(x): 0.1703, norm(y): 1.0051, norm:1.2487, tok/sec: 144148.83, flops:112.26, batch-reuse:1
@ 618 train 6.0355 , allloss: 6.0365, dt: 906.63ms, fracRes: 0.0207, norm(attn): 0.1494, norm(output): 0.2031, norm(x): 0.1710, norm(y): 1.0050, norm:1.2281, tok/sec: 144570.09, flops:112.59, batch-reuse:1
@ 619 train 6.0021 , allloss: 6.0031, dt: 902.48ms, fracRes: 0.0208, norm(attn): 0.1514, norm(output): 0.2031, norm(x): 0.1711, norm(y): 1.0050, norm:1.0077, tok/sec: 145235.18, flops:113.11, batch-reuse:1
@ 620 train 6.0188 , allloss: 6.0209, dt: 899.19ms, fracRes: 0.0220, norm(attn): 0.1455, norm(output): 0.2021, norm(x): 0.1698, norm(y): 1.0051, norm:1.1039, tok/sec: 145767.10, flops:113.52, batch-reuse:1
@ 621 train 6.0232 , allloss: 6.0259, dt: 910.16ms, fracRes: 0.0199, norm(attn): 0.1484, norm(output): 0.2041, norm(x): 0.1717, norm(y): 1.0051, norm:1.3990, tok/sec: 144009.38, flops:112.16, batch-reuse:1
@ 622 train 5.9580 , allloss: 5.9606, dt: 905.55ms, fracRes: 0.0174, norm(attn): 0.1494, norm(output): 0.2021, norm(x): 0.1720, norm(y): 1.0049, norm:1.0069, tok/sec: 144743.43, flops:112.73, batch-reuse:1
@ 623 train 5.9630 , allloss: 5.9637, dt: 906.01ms, fracRes: 0.0182, norm(attn): 0.1455, norm(output): 0.2031, norm(x): 0.1718, norm(y): 1.0050, norm:1.2145, tok/sec: 144670.26, flops:112.67, batch-reuse:1
@ 624 train 6.0431 , allloss: 6.0441, dt: 901.66ms, fracRes: 0.0204, norm(attn): 0.1475, norm(output): 0.2021, norm(x): 0.1714, norm(y): 1.0051, norm:1.2161, tok/sec: 145367.05, flops:113.21, batch-reuse:1
@ 625 train 6.0804 , allloss: 6.0823, dt: 885.07ms, fracRes: 0.0224, norm(attn): 0.1484, norm(output): 0.2041, norm(x): 0.1721, norm(y): 1.0051, norm:1.1522, tok/sec: 148091.83, flops:115.33, batch-reuse:1
@ 626 train 6.0118 , allloss: 6.0130, dt: 905.35ms, fracRes: 0.0255, norm(attn): 0.1494, norm(output): 0.2031, norm(x): 0.1707, norm(y): 1.0052, norm:0.8406, tok/sec: 144775.11, flops:112.75, batch-reuse:1
@ 627 train 5.9592 , allloss: 5.9603, dt: 896.53ms, fracRes: 0.0256, norm(attn): 0.1553, norm(output): 0.2041, norm(x): 0.1713, norm(y): 1.0051, norm:1.1887, tok/sec: 146199.60, flops:113.86, batch-reuse:1
@ 628 train 6.0528 , allloss: 6.0541, dt: 917.06ms, fracRes: 0.0241, norm(attn): 0.1562, norm(output): 0.2031, norm(x): 0.1711, norm(y): 1.0051, norm:1.2071, tok/sec: 142926.81, flops:111.31, batch-reuse:1
@ 629 train 6.0958 , allloss: 6.0972, dt: 912.23ms, fracRes: 0.0235, norm(attn): 0.1553, norm(output): 0.2041, norm(x): 0.1719, norm(y): 1.0050, norm:1.3181, tok/sec: 143683.32, flops:111.90, batch-reuse:1
@ 630 train 6.1241 , allloss: 6.1286, dt: 919.57ms, fracRes: 0.0228, norm(attn): 0.1533, norm(output): 0.2051, norm(x): 0.1729, norm(y): 1.0051, norm:1.3104, tok/sec: 142536.04, flops:111.01, batch-reuse:1
@ 631 train 6.0896 , allloss: 6.0902, dt: 919.83ms, fracRes: 0.0219, norm(attn): 0.1504, norm(output): 0.2021, norm(x): 0.1713, norm(y): 1.0052, norm:1.3935, tok/sec: 142495.70, flops:110.98, batch-reuse:1
@ 632 train 6.2706 , allloss: 6.2711, dt: 917.79ms, fracRes: 0.0214, norm(attn): 0.1484, norm(output): 0.2041, norm(x): 0.1730, norm(y): 1.0052, norm:1.3106, tok/sec: 142812.15, flops:111.22, batch-reuse:1
@ 633 train 6.1373 , allloss: 6.1382, dt: 923.14ms, fracRes: 0.0204, norm(attn): 0.1523, norm(output): 0.2031, norm(x): 0.1724, norm(y): 1.0051, norm:1.6841, tok/sec: 141985.14, flops:110.58, batch-reuse:1
@ 634 train 6.0166 , allloss: 6.0258, dt: 893.79ms, fracRes: 0.0174, norm(attn): 0.1699, norm(output): 0.2031, norm(x): 0.1730, norm(y): 1.0048, norm:1.9181, tok/sec: 146646.95, flops:114.21, batch-reuse:1
@ 635 train 6.0548 , allloss: 6.0570, dt: 909.00ms, fracRes: 0.0185, norm(attn): 0.1523, norm(output): 0.2041, norm(x): 0.1729, norm(y): 1.0051, norm:1.1430, tok/sec: 144193.25, flops:112.30, batch-reuse:1
@ 636 train 6.1087 , allloss: 6.1112, dt: 910.76ms, fracRes: 0.0194, norm(attn): 0.1455, norm(output): 0.2041, norm(x): 0.1745, norm(y): 1.0052, norm:1.0303, tok/sec: 143914.57, flops:112.08, batch-reuse:1
@ 637 train 5.9645 , allloss: 5.9656, dt: 890.89ms, fracRes: 0.0192, norm(attn): 0.1455, norm(output): 0.2041, norm(x): 0.1738, norm(y): 1.0053, norm:1.0267, tok/sec: 147125.08, flops:114.58, batch-reuse:1
@ 638 train 5.9674 , allloss: 5.9683, dt: 909.47ms, fracRes: 0.0181, norm(attn): 0.1475, norm(output): 0.2031, norm(x): 0.1741, norm(y): 1.0052, norm:1.2456, tok/sec: 144119.32, flops:112.24, batch-reuse:1
@ 639 train 6.0316 , allloss: 6.0346, dt: 901.94ms, fracRes: 0.0174, norm(attn): 0.1523, norm(output): 0.2051, norm(x): 0.1751, norm(y): 1.0051, norm:0.9065, tok/sec: 145322.33, flops:113.18, batch-reuse:1
@ 640 train 5.9465 , allloss: 5.9485, dt: 910.21ms, fracRes: 0.0190, norm(attn): 0.1494, norm(output): 0.2041, norm(x): 0.1744, norm(y): 1.0052, norm:0.8869, tok/sec: 144002.33, flops:112.15, batch-reuse:1
@ 641 train 5.9549 , allloss: 5.9602, dt: 911.46ms, fracRes: 0.0200, norm(attn): 0.1543, norm(output): 0.2051, norm(x): 0.1749, norm(y): 1.0052, norm:1.1739, tok/sec: 143804.12, flops:112.00, batch-reuse:1
@ 642 train 5.9250 , allloss: 5.9271, dt: 899.84ms, fracRes: 0.0189, norm(attn): 0.1484, norm(output): 0.2061, norm(x): 0.1756, norm(y): 1.0052, norm:1.5007, tok/sec: 145662.20, flops:113.44, batch-reuse:1
@ 643 train 5.9755 , allloss: 5.9771, dt: 896.63ms, fracRes: 0.0216, norm(attn): 0.1484, norm(output): 0.2051, norm(x): 0.1741, norm(y): 1.0052, norm:1.1669, tok/sec: 146183.62, flops:113.85, batch-reuse:1
@ 644 train 6.1307 , allloss: 6.1322, dt: 896.43ms, fracRes: 0.0218, norm(attn): 0.1523, norm(output): 0.2051, norm(x): 0.1744, norm(y): 1.0052, norm:1.1256, tok/sec: 146215.19, flops:113.87, batch-reuse:1
@ 645 train 6.0542 , allloss: 6.0554, dt: 925.37ms, fracRes: 0.0219, norm(attn): 0.1533, norm(output): 0.2041, norm(x): 0.1751, norm(y): 1.0052, norm:1.1441, tok/sec: 141642.51, flops:110.31, batch-reuse:1
@ 646 train 5.9877 , allloss: 5.9890, dt: 904.28ms, fracRes: 0.0221, norm(attn): 0.1494, norm(output): 0.2061, norm(x): 0.1755, norm(y): 1.0053, norm:1.3171, tok/sec: 144946.53, flops:112.88, batch-reuse:1
@ 647 train 6.0625 , allloss: 6.0636, dt: 885.23ms, fracRes: 0.0204, norm(attn): 0.1504, norm(output): 0.2061, norm(x): 0.1770, norm(y): 1.0052, norm:1.8743, tok/sec: 148064.75, flops:115.31, batch-reuse:1
@ 648 train 5.9221 , allloss: 5.9232, dt: 892.94ms, fracRes: 0.0174, norm(attn): 0.1553, norm(output): 0.2070, norm(x): 0.1777, norm(y): 1.0051, norm:0.9242, tok/sec: 146786.54, flops:114.32, batch-reuse:1
@ 649 train 6.0020 , allloss: 6.0035, dt: 888.82ms, fracRes: 0.0181, norm(attn): 0.1543, norm(output): 0.2070, norm(x): 0.1779, norm(y): 1.0052, norm:1.0457, tok/sec: 147467.84, flops:114.85, batch-reuse:1
@ 650 train 5.9110 , allloss: 5.9124, dt: 886.50ms, fracRes: 0.0207, norm(attn): 0.1523, norm(output): 0.2080, norm(x): 0.1777, norm(y): 1.0053, norm:1.0673, tok/sec: 147852.70, flops:115.15, batch-reuse:1
@ 651 train 5.9669 , allloss: 5.9687, dt: 885.12ms, fracRes: 0.0214, norm(attn): 0.1523, norm(output): 0.2061, norm(x): 0.1782, norm(y): 1.0052, norm:1.0988, tok/sec: 148084.45, flops:115.33, batch-reuse:1
@ 652 train 5.8807 , allloss: 5.8824, dt: 891.30ms, fracRes: 0.0223, norm(attn): 0.1533, norm(output): 0.2080, norm(x): 0.1779, norm(y): 1.0053, norm:0.9350, tok/sec: 147057.59, flops:114.53, batch-reuse:1
@ 653 train 5.8857 , allloss: 5.8877, dt: 903.03ms, fracRes: 0.0233, norm(attn): 0.1562, norm(output): 0.2070, norm(x): 0.1776, norm(y): 1.0053, norm:1.1280, tok/sec: 145146.52, flops:113.04, batch-reuse:1
@ 654 train 5.9221 , allloss: 5.9245, dt: 897.41ms, fracRes: 0.0202, norm(attn): 0.1572, norm(output): 0.2080, norm(x): 0.1781, norm(y): 1.0052, norm:0.9138, tok/sec: 146056.55, flops:113.75, batch-reuse:1
@ 655 train 5.9409 , allloss: 5.9419, dt: 879.62ms, fracRes: 0.0206, norm(attn): 0.1562, norm(output): 0.2090, norm(x): 0.1780, norm(y): 1.0052, norm:1.0640, tok/sec: 149010.03, flops:116.05, batch-reuse:1
@ 656 train 5.8350 , allloss: 5.8359, dt: 903.29ms, fracRes: 0.0206, norm(attn): 0.1553, norm(output): 0.2061, norm(x): 0.1767, norm(y): 1.0053, norm:0.8694, tok/sec: 145105.00, flops:113.01, batch-reuse:1
@ 657 train 5.8903 , allloss: 5.8910, dt: 895.93ms, fracRes: 0.0205, norm(attn): 0.1562, norm(output): 0.2051, norm(x): 0.1766, norm(y): 1.0053, norm:1.1713, tok/sec: 146296.63, flops:113.94, batch-reuse:1
@ 658 train 5.9808 , allloss: 5.9826, dt: 890.55ms, fracRes: 0.0207, norm(attn): 0.1562, norm(output): 0.2100, norm(x): 0.1783, norm(y): 1.0052, norm:1.4000, tok/sec: 147180.46, flops:114.62, batch-reuse:1
@ 659 train 5.9499 , allloss: 5.9507, dt: 893.59ms, fracRes: 0.0231, norm(attn): 0.1572, norm(output): 0.2100, norm(x): 0.1782, norm(y): 1.0053, norm:0.9492, tok/sec: 146679.66, flops:114.23, batch-reuse:1
@ 660 train 5.9768 , allloss: 5.9788, dt: 899.82ms, fracRes: 0.0228, norm(attn): 0.1562, norm(output): 0.2070, norm(x): 0.1776, norm(y): 1.0053, norm:1.2036, tok/sec: 145664.02, flops:113.44, batch-reuse:1
@ 661 train 5.9210 , allloss: 5.9254, dt: 886.60ms, fracRes: 0.0234, norm(attn): 0.1523, norm(output): 0.2080, norm(x): 0.1783, norm(y): 1.0053, norm:1.1524, tok/sec: 147837.07, flops:115.14, batch-reuse:1
@ 662 train 5.9961 , allloss: 5.9977, dt: 901.97ms, fracRes: 0.0225, norm(attn): 0.1562, norm(output): 0.2090, norm(x): 0.1785, norm(y): 1.0053, norm:1.2000, tok/sec: 145317.18, flops:113.17, batch-reuse:1
@ 663 train 5.9512 , allloss: 5.9535, dt: 882.86ms, fracRes: 0.0198, norm(attn): 0.1602, norm(output): 0.2070, norm(x): 0.1786, norm(y): 1.0052, norm:1.1367, tok/sec: 148462.84, flops:115.62, batch-reuse:1
@ 664 train 5.9002 , allloss: 5.9012, dt: 906.57ms, fracRes: 0.0175, norm(attn): 0.1582, norm(output): 0.2129, norm(x): 0.1812, norm(y): 1.0051, norm:1.3726, tok/sec: 144579.40, flops:112.60, batch-reuse:1
@ 665 train 5.9107 , allloss: 5.9117, dt: 905.86ms, fracRes: 0.0197, norm(attn): 0.1582, norm(output): 0.2100, norm(x): 0.1791, norm(y): 1.0053, norm:0.8541, tok/sec: 144693.14, flops:112.69, batch-reuse:1
@ 666 train 5.7699 , allloss: 5.7717, dt: 924.14ms, fracRes: 0.0200, norm(attn): 0.1582, norm(output): 0.2139, norm(x): 0.1797, norm(y): 1.0054, norm:1.5900, tok/sec: 141831.88, flops:110.46, batch-reuse:1
@ 667 train 5.7358 , allloss: 5.7386, dt: 905.22ms, fracRes: 0.0208, norm(attn): 0.1592, norm(output): 0.2109, norm(x): 0.1795, norm(y): 1.0055, norm:1.4963, tok/sec: 144795.58, flops:112.77, batch-reuse:1
@ 668 train 5.9592 , allloss: 5.9621, dt: 911.36ms, fracRes: 0.0210, norm(attn): 0.1553, norm(output): 0.2100, norm(x): 0.1789, norm(y): 1.0054, norm:1.3239, tok/sec: 143819.69, flops:112.01, batch-reuse:1
@ 669 train 5.8871 , allloss: 5.8887, dt: 903.06ms, fracRes: 0.0191, norm(attn): 0.1562, norm(output): 0.2139, norm(x): 0.1810, norm(y): 1.0053, norm:1.3781, tok/sec: 145141.39, flops:113.04, batch-reuse:1
@ 670 train 6.0045 , allloss: 6.0067, dt: 878.16ms, fracRes: 0.0189, norm(attn): 0.1621, norm(output): 0.2119, norm(x): 0.1803, norm(y): 1.0052, norm:1.6167, tok/sec: 149257.25, flops:116.24, batch-reuse:1
@ 671 train 5.8816 , allloss: 5.8839, dt: 902.36ms, fracRes: 0.0209, norm(attn): 0.1572, norm(output): 0.2090, norm(x): 0.1798, norm(y): 1.0053, norm:1.4192, tok/sec: 145255.25, flops:113.13, batch-reuse:1
@ 672 train 5.9127 , allloss: 5.9197, dt: 907.00ms, fracRes: 0.0237, norm(attn): 0.1543, norm(output): 0.2148, norm(x): 0.1806, norm(y): 1.0054, norm:1.1105, tok/sec: 144511.91, flops:112.55, batch-reuse:1
@ 673 train 5.9372 , allloss: 5.9408, dt: 895.77ms, fracRes: 0.0230, norm(attn): 0.1514, norm(output): 0.2148, norm(x): 0.1812, norm(y): 1.0054, norm:1.0608, tok/sec: 146322.91, flops:113.96, batch-reuse:1
@ 674 train 5.9194 , allloss: 5.9234, dt: 903.41ms, fracRes: 0.0203, norm(attn): 0.1562, norm(output): 0.2148, norm(x): 0.1814, norm(y): 1.0053, norm:1.2304, tok/sec: 145085.27, flops:112.99, batch-reuse:1
@ 675 train 5.8192 , allloss: 5.8198, dt: 898.65ms, fracRes: 0.0217, norm(attn): 0.1562, norm(output): 0.2139, norm(x): 0.1808, norm(y): 1.0053, norm:1.1597, tok/sec: 145854.85, flops:113.59, batch-reuse:1
@ 676 train 5.8528 , allloss: 5.8539, dt: 902.19ms, fracRes: 0.0244, norm(attn): 0.1592, norm(output): 0.2148, norm(x): 0.1809, norm(y): 1.0054, norm:0.9292, tok/sec: 145281.46, flops:113.15, batch-reuse:1
@ 677 train 6.0119 , allloss: 6.0126, dt: 903.39ms, fracRes: 0.0271, norm(attn): 0.1592, norm(output): 0.2148, norm(x): 0.1820, norm(y): 1.0055, norm:1.5392, tok/sec: 145089.33, flops:113.00, batch-reuse:1
@ 678 train 5.8388 , allloss: 5.8400, dt: 912.43ms, fracRes: 0.0255, norm(attn): 0.1553, norm(output): 0.2148, norm(x): 0.1813, norm(y): 1.0054, norm:1.1259, tok/sec: 143651.37, flops:111.88, batch-reuse:1
@ 679 train 5.8746 , allloss: 5.8753, dt: 907.41ms, fracRes: 0.0259, norm(attn): 0.1641, norm(output): 0.2109, norm(x): 0.1808, norm(y): 1.0054, norm:1.0589, tok/sec: 144446.71, flops:112.50, batch-reuse:1
@ 680 train 5.8565 , allloss: 5.8584, dt: 905.70ms, fracRes: 0.0259, norm(attn): 0.1592, norm(output): 0.2158, norm(x): 0.1821, norm(y): 1.0054, norm:1.0796, tok/sec: 144718.32, flops:112.71, batch-reuse:1
@ 681 train 5.8855 , allloss: 5.8864, dt: 904.03ms, fracRes: 0.0268, norm(attn): 0.1602, norm(output): 0.2148, norm(x): 0.1816, norm(y): 1.0055, norm:1.0632, tok/sec: 144985.94, flops:112.92, batch-reuse:1
@ 682 train 5.8978 , allloss: 5.8987, dt: 892.46ms, fracRes: 0.0268, norm(attn): 0.1680, norm(output): 0.2139, norm(x): 0.1805, norm(y): 1.0054, norm:1.2185, tok/sec: 146866.07, flops:114.38, batch-reuse:1
@ 683 train 5.8516 , allloss: 5.8528, dt: 894.13ms, fracRes: 0.0247, norm(attn): 0.1621, norm(output): 0.2168, norm(x): 0.1823, norm(y): 1.0054, norm:1.0604, tok/sec: 146591.82, flops:114.17, batch-reuse:1
@ 684 train 5.8300 , allloss: 5.8308, dt: 900.86ms, fracRes: 0.0266, norm(attn): 0.1621, norm(output): 0.2148, norm(x): 0.1813, norm(y): 1.0055, norm:1.3113, tok/sec: 145496.36, flops:113.31, batch-reuse:1
@ 685 train 5.9128 , allloss: 5.9137, dt: 900.09ms, fracRes: 0.0284, norm(attn): 0.1641, norm(output): 0.2148, norm(x): 0.1806, norm(y): 1.0056, norm:1.2819, tok/sec: 145621.65, flops:113.41, batch-reuse:1
@ 686 train 5.9722 , allloss: 5.9736, dt: 889.39ms, fracRes: 0.0283, norm(attn): 0.1660, norm(output): 0.2148, norm(x): 0.1805, norm(y): 1.0055, norm:1.0284, tok/sec: 147373.59, flops:114.78, batch-reuse:1
@ 687 train 5.9143 , allloss: 5.9155, dt: 914.58ms, fracRes: 0.0256, norm(attn): 0.1699, norm(output): 0.2178, norm(x): 0.1838, norm(y): 1.0054, norm:1.3985, tok/sec: 143314.60, flops:111.61, batch-reuse:1
@ 688 train 5.8877 , allloss: 5.8885, dt: 906.20ms, fracRes: 0.0236, norm(attn): 0.1641, norm(output): 0.2168, norm(x): 0.1826, norm(y): 1.0055, norm:1.2871, tok/sec: 144638.67, flops:112.65, batch-reuse:1
@ 689 train 5.8926 , allloss: 5.8937, dt: 902.58ms, fracRes: 0.0235, norm(attn): 0.1572, norm(output): 0.2158, norm(x): 0.1831, norm(y): 1.0056, norm:1.1994, tok/sec: 145218.83, flops:113.10, batch-reuse:1
@ 690 train 5.8483 , allloss: 5.8490, dt: 903.15ms, fracRes: 0.0219, norm(attn): 0.1592, norm(output): 0.2168, norm(x): 0.1839, norm(y): 1.0056, norm:1.1638, tok/sec: 145127.52, flops:113.03, batch-reuse:1
@ 691 train 5.8797 , allloss: 5.8810, dt: 908.57ms, fracRes: 0.0227, norm(attn): 0.1631, norm(output): 0.2168, norm(x): 0.1842, norm(y): 1.0055, norm:1.1726, tok/sec: 144261.85, flops:112.35, batch-reuse:1
@ 692 train 5.8416 , allloss: 5.8427, dt: 896.82ms, fracRes: 0.0246, norm(attn): 0.1680, norm(output): 0.2168, norm(x): 0.1840, norm(y): 1.0054, norm:1.0744, tok/sec: 146152.34, flops:113.82, batch-reuse:1
@ 693 train 5.9051 , allloss: 5.9062, dt: 919.92ms, fracRes: 0.0283, norm(attn): 0.1621, norm(output): 0.2178, norm(x): 0.1842, norm(y): 1.0055, norm:1.1542, tok/sec: 142481.48, flops:110.97, batch-reuse:1
@ 694 train 5.7845 , allloss: 5.7858, dt: 903.67ms, fracRes: 0.0311, norm(attn): 0.1660, norm(output): 0.2168, norm(x): 0.1827, norm(y): 1.0056, norm:1.1793, tok/sec: 145043.36, flops:112.96, batch-reuse:1
@ 695 train 5.8649 , allloss: 5.8659, dt: 890.28ms, fracRes: 0.0301, norm(attn): 0.1670, norm(output): 0.2178, norm(x): 0.1828, norm(y): 1.0056, norm:1.4362, tok/sec: 147226.22, flops:114.66, batch-reuse:1
@ 696 train 5.7446 , allloss: 5.7450, dt: 903.12ms, fracRes: 0.0282, norm(attn): 0.1631, norm(output): 0.2168, norm(x): 0.1830, norm(y): 1.0056, norm:1.1998, tok/sec: 145132.12, flops:113.03, batch-reuse:1
@ 697 train 5.7508 , allloss: 5.7514, dt: 889.00ms, fracRes: 0.0232, norm(attn): 0.1611, norm(output): 0.2188, norm(x): 0.1856, norm(y): 1.0055, norm:1.0990, tok/sec: 147436.87, flops:114.82, batch-reuse:1
@ 698 train 5.8476 , allloss: 5.8491, dt: 903.38ms, fracRes: 0.0224, norm(attn): 0.1650, norm(output): 0.2178, norm(x): 0.1849, norm(y): 1.0054, norm:0.9351, tok/sec: 145090.90, flops:113.00, batch-reuse:1
@ 699 train 5.8375 , allloss: 5.8395, dt: 914.53ms, fracRes: 0.0253, norm(attn): 0.1650, norm(output): 0.2188, norm(x): 0.1855, norm(y): 1.0055, norm:1.0905, tok/sec: 143321.89, flops:111.62, batch-reuse:1
@ 700 train 5.8075 , allloss: 5.8083, dt: 910.80ms, fracRes: 0.0284, norm(attn): 0.1582, norm(output): 0.2188, norm(x): 0.1848, norm(y): 1.0057, norm:0.9114, tok/sec: 143909.33, flops:112.08, batch-reuse:1
@ 701 train 5.8782 , allloss: 5.8792, dt: 906.90ms, fracRes: 0.0293, norm(attn): 0.1631, norm(output): 0.2188, norm(x): 0.1851, norm(y): 1.0056, norm:1.2499, tok/sec: 144527.03, flops:112.56, batch-reuse:1
@ 702 train 5.8701 , allloss: 5.8729, dt: 903.73ms, fracRes: 0.0278, norm(attn): 0.1631, norm(output): 0.2188, norm(x): 0.1854, norm(y): 1.0056, norm:1.2701, tok/sec: 145034.25, flops:112.95, batch-reuse:1
@ 703 train 5.8428 , allloss: 5.8441, dt: 897.64ms, fracRes: 0.0242, norm(attn): 0.1621, norm(output): 0.2188, norm(x): 0.1864, norm(y): 1.0056, norm:1.0800, tok/sec: 146018.33, flops:113.72, batch-reuse:1
@ 704 train 5.7592 , allloss: 5.7633, dt: 897.67ms, fracRes: 0.0216, norm(attn): 0.1631, norm(output): 0.2188, norm(x): 0.1876, norm(y): 1.0055, norm:1.2069, tok/sec: 146013.91, flops:113.72, batch-reuse:1
@ 705 train 5.8437 , allloss: 5.8448, dt: 890.55ms, fracRes: 0.0204, norm(attn): 0.1611, norm(output): 0.2197, norm(x): 0.1872, norm(y): 1.0056, norm:1.3376, tok/sec: 147180.74, flops:114.62, batch-reuse:1
@ 706 train 5.7669 , allloss: 5.7678, dt: 900.27ms, fracRes: 0.0193, norm(attn): 0.1602, norm(output): 0.2197, norm(x): 0.1890, norm(y): 1.0056, norm:0.8717, tok/sec: 145591.42, flops:113.39, batch-reuse:1
@ 707 train 5.8126 , allloss: 5.8140, dt: 901.06ms, fracRes: 0.0189, norm(attn): 0.1641, norm(output): 0.2197, norm(x): 0.1890, norm(y): 1.0056, norm:1.1137, tok/sec: 145463.94, flops:113.29, batch-reuse:1
@ 708 train 5.8111 , allloss: 5.8138, dt: 917.45ms, fracRes: 0.0189, norm(attn): 0.1709, norm(output): 0.2207, norm(x): 0.1900, norm(y): 1.0055, norm:1.2026, tok/sec: 142866.23, flops:111.26, batch-reuse:1
@ 709 train 5.7945 , allloss: 5.7967, dt: 915.49ms, fracRes: 0.0210, norm(attn): 0.1660, norm(output): 0.2188, norm(x): 0.1875, norm(y): 1.0057, norm:1.0050, tok/sec: 143171.80, flops:111.50, batch-reuse:1
@ 710 train 5.9107 , allloss: 5.9123, dt: 908.83ms, fracRes: 0.0219, norm(attn): 0.1611, norm(output): 0.2188, norm(x): 0.1890, norm(y): 1.0056, norm:1.2688, tok/sec: 144219.92, flops:112.32, batch-reuse:1
@ 711 train 5.8703 , allloss: 5.8712, dt: 912.66ms, fracRes: 0.0223, norm(attn): 0.1650, norm(output): 0.2188, norm(x): 0.1884, norm(y): 1.0056, norm:1.1719, tok/sec: 143614.67, flops:111.85, batch-reuse:1
@ 712 train 5.7801 , allloss: 5.7810, dt: 914.86ms, fracRes: 0.0236, norm(attn): 0.1699, norm(output): 0.2178, norm(x): 0.1864, norm(y): 1.0056, norm:0.9095, tok/sec: 143270.04, flops:111.58, batch-reuse:1
@ 713 train 5.8125 , allloss: 5.8142, dt: 916.97ms, fracRes: 0.0251, norm(attn): 0.1660, norm(output): 0.2197, norm(x): 0.1881, norm(y): 1.0056, norm:1.0509, tok/sec: 142939.89, flops:111.32, batch-reuse:1
@ 714 train 5.7318 , allloss: 5.7331, dt: 902.68ms, fracRes: 0.0238, norm(attn): 0.1621, norm(output): 0.2197, norm(x): 0.1899, norm(y): 1.0056, norm:1.3841, tok/sec: 145202.84, flops:113.08, batch-reuse:1
@ 715 train 5.7507 , allloss: 5.7519, dt: 903.57ms, fracRes: 0.0234, norm(attn): 0.1699, norm(output): 0.2197, norm(x): 0.1904, norm(y): 1.0056, norm:1.1962, tok/sec: 145059.89, flops:112.97, batch-reuse:1
@ 716 train 5.8209 , allloss: 5.8216, dt: 913.51ms, fracRes: 0.0249, norm(attn): 0.1689, norm(output): 0.2188, norm(x): 0.1879, norm(y): 1.0057, norm:1.4136, tok/sec: 143482.40, flops:111.74, batch-reuse:1
@ 717 train 5.6589 , allloss: 5.6604, dt: 903.60ms, fracRes: 0.0260, norm(attn): 0.1660, norm(output): 0.2197, norm(x): 0.1888, norm(y): 1.0058, norm:1.0178, tok/sec: 145055.64, flops:112.97, batch-reuse:1
@ 718 train 5.8063 , allloss: 5.8076, dt: 897.34ms, fracRes: 0.0248, norm(attn): 0.1689, norm(output): 0.2188, norm(x): 0.1884, norm(y): 1.0056, norm:1.4379, tok/sec: 146066.87, flops:113.76, batch-reuse:1
@ 719 train 5.7518 , allloss: 5.7543, dt: 889.53ms, fracRes: 0.0244, norm(attn): 0.1699, norm(output): 0.2207, norm(x): 0.1906, norm(y): 1.0055, norm:0.9792, tok/sec: 147350.09, flops:114.76, batch-reuse:1
@ 720 train 5.7324 , allloss: 5.7330, dt: 905.09ms, fracRes: 0.0263, norm(attn): 0.1670, norm(output): 0.2207, norm(x): 0.1894, norm(y): 1.0058, norm:1.1091, tok/sec: 144816.45, flops:112.78, batch-reuse:1
@ 721 train 5.6966 , allloss: 5.6980, dt: 903.30ms, fracRes: 0.0271, norm(attn): 0.1631, norm(output): 0.2207, norm(x): 0.1899, norm(y): 1.0059, norm:1.6360, tok/sec: 145103.77, flops:113.01, batch-reuse:1
@ 722 train 5.7622 , allloss: 5.7636, dt: 904.82ms, fracRes: 0.0249, norm(attn): 0.1641, norm(output): 0.2197, norm(x): 0.1890, norm(y): 1.0058, norm:1.1986, tok/sec: 144860.02, flops:112.82, batch-reuse:1
@ 723 train 5.8309 , allloss: 5.8361, dt: 894.32ms, fracRes: 0.0270, norm(attn): 0.1689, norm(output): 0.2227, norm(x): 0.1902, norm(y): 1.0058, norm:1.2584, tok/sec: 146559.89, flops:114.14, batch-reuse:1
@ 724 train 5.7865 , allloss: 5.7926, dt: 902.01ms, fracRes: 0.0263, norm(attn): 0.1699, norm(output): 0.2197, norm(x): 0.1894, norm(y): 1.0057, norm:1.0880, tok/sec: 145310.99, flops:113.17, batch-reuse:1
@ 725 train 5.7709 , allloss: 5.7726, dt: 909.61ms, fracRes: 0.0268, norm(attn): 0.1660, norm(output): 0.2207, norm(x): 0.1904, norm(y): 1.0057, norm:1.2451, tok/sec: 144097.41, flops:112.22, batch-reuse:1
@ 726 train 5.7796 , allloss: 5.7809, dt: 887.88ms, fracRes: 0.0309, norm(attn): 0.1641, norm(output): 0.2207, norm(x): 0.1891, norm(y): 1.0059, norm:0.9382, tok/sec: 147623.70, flops:114.97, batch-reuse:1
@ 727 train 5.7603 , allloss: 5.7614, dt: 903.38ms, fracRes: 0.0314, norm(attn): 0.1680, norm(output): 0.2227, norm(x): 0.1901, norm(y): 1.0058, norm:0.9942, tok/sec: 145090.06, flops:113.00, batch-reuse:1
@ 728 train 5.8155 , allloss: 5.8162, dt: 882.37ms, fracRes: 0.0289, norm(attn): 0.1748, norm(output): 0.2207, norm(x): 0.1898, norm(y): 1.0057, norm:1.5425, tok/sec: 148545.76, flops:115.69, batch-reuse:1
@ 729 train 5.7421 , allloss: 5.7445, dt: 899.57ms, fracRes: 0.0316, norm(attn): 0.1699, norm(output): 0.2207, norm(x): 0.1912, norm(y): 1.0058, norm:1.0668, tok/sec: 145705.83, flops:113.48, batch-reuse:1
@ 730 train 5.7500 , allloss: 5.7518, dt: 896.94ms, fracRes: 0.0306, norm(attn): 0.1641, norm(output): 0.2236, norm(x): 0.1923, norm(y): 1.0058, norm:1.0727, tok/sec: 146131.67, flops:113.81, batch-reuse:1
@ 731 train 5.7782 , allloss: 5.7796, dt: 904.24ms, fracRes: 0.0354, norm(attn): 0.1670, norm(output): 0.2236, norm(x): 0.1899, norm(y): 1.0059, norm:1.1342, tok/sec: 144952.00, flops:112.89, batch-reuse:1
@ 732 train 5.7110 , allloss: 5.7114, dt: 897.47ms, fracRes: 0.0318, norm(attn): 0.1699, norm(output): 0.2207, norm(x): 0.1907, norm(y): 1.0058, norm:0.8869, tok/sec: 146046.30, flops:113.74, batch-reuse:1
@ 733 train 5.7624 , allloss: 5.7629, dt: 900.31ms, fracRes: 0.0290, norm(attn): 0.1738, norm(output): 0.2217, norm(x): 0.1924, norm(y): 1.0057, norm:1.0997, tok/sec: 145585.25, flops:113.38, batch-reuse:1
@ 734 train 5.7675 , allloss: 5.7679, dt: 914.26ms, fracRes: 0.0277, norm(attn): 0.1699, norm(output): 0.2227, norm(x): 0.1924, norm(y): 1.0058, norm:1.2748, tok/sec: 143363.78, flops:111.65, batch-reuse:1
@ 735 train 5.7816 , allloss: 5.7822, dt: 901.46ms, fracRes: 0.0294, norm(attn): 0.1611, norm(output): 0.2227, norm(x): 0.1927, norm(y): 1.0060, norm:1.3062, tok/sec: 145399.77, flops:113.24, batch-reuse:1
@ 736 train 5.8381 , allloss: 5.8387, dt: 897.77ms, fracRes: 0.0289, norm(attn): 0.1602, norm(output): 0.2227, norm(x): 0.1937, norm(y): 1.0060, norm:1.3130, tok/sec: 145996.58, flops:113.70, batch-reuse:1
@ 737 train 5.7628 , allloss: 5.7635, dt: 902.58ms, fracRes: 0.0267, norm(attn): 0.1689, norm(output): 0.2227, norm(x): 0.1944, norm(y): 1.0058, norm:1.2285, tok/sec: 145219.79, flops:113.10, batch-reuse:1
@ 738 train 5.7950 , allloss: 5.7956, dt: 901.47ms, fracRes: 0.0257, norm(attn): 0.1719, norm(output): 0.2266, norm(x): 0.1944, norm(y): 1.0057, norm:1.1474, tok/sec: 145398.08, flops:113.24, batch-reuse:1
@ 739 train 5.7619 , allloss: 5.7653, dt: 888.68ms, fracRes: 0.0296, norm(attn): 0.1709, norm(output): 0.2246, norm(x): 0.1941, norm(y): 1.0058, norm:1.0585, tok/sec: 147490.58, flops:114.87, batch-reuse:1
@ 740 train 5.7396 , allloss: 5.7421, dt: 915.11ms, fracRes: 0.0362, norm(attn): 0.1689, norm(output): 0.2227, norm(x): 0.1918, norm(y): 1.0061, norm:1.0497, tok/sec: 143230.89, flops:111.55, batch-reuse:1
@ 741 train 5.8734 , allloss: 5.8770, dt: 889.55ms, fracRes: 0.0345, norm(attn): 0.1670, norm(output): 0.2285, norm(x): 0.1937, norm(y): 1.0060, norm:1.3074, tok/sec: 147346.14, flops:114.75, batch-reuse:1
@ 742 train 5.9135 , allloss: 5.9146, dt: 903.46ms, fracRes: 0.0299, norm(attn): 0.1689, norm(output): 0.2256, norm(x): 0.1945, norm(y): 1.0059, norm:1.5475, tok/sec: 145078.57, flops:112.99, batch-reuse:1
@ 743 train 5.8771 , allloss: 5.8837, dt: 925.56ms, fracRes: 0.0289, norm(attn): 0.1729, norm(output): 0.2305, norm(x): 0.1963, norm(y): 1.0058, norm:1.4406, tok/sec: 141614.42, flops:110.29, batch-reuse:1
@ 744 train 5.8689 , allloss: 5.8724, dt: 927.71ms, fracRes: 0.0302, norm(attn): 0.1650, norm(output): 0.2305, norm(x): 0.1953, norm(y): 1.0058, norm:1.2394, tok/sec: 141285.49, flops:110.03, batch-reuse:1
@ 745 train 5.8516 , allloss: 5.8527, dt: 928.82ms, fracRes: 0.0346, norm(attn): 0.1709, norm(output): 0.2295, norm(x): 0.1939, norm(y): 1.0059, norm:1.0699, tok/sec: 141116.88, flops:109.90, batch-reuse:1
@ 746 train 5.8839 , allloss: 5.8848, dt: 927.78ms, fracRes: 0.0337, norm(attn): 0.1719, norm(output): 0.2285, norm(x): 0.1947, norm(y): 1.0058, norm:1.1101, tok/sec: 141274.81, flops:110.03, batch-reuse:1
@ 747 train 5.8647 , allloss: 5.8655, dt: 917.72ms, fracRes: 0.0337, norm(attn): 0.1719, norm(output): 0.2324, norm(x): 0.1956, norm(y): 1.0058, norm:1.1632, tok/sec: 142823.54, flops:111.23, batch-reuse:1
@ 748 train 5.8887 , allloss: 5.8893, dt: 882.23ms, fracRes: 0.0313, norm(attn): 0.1709, norm(output): 0.2275, norm(x): 0.1941, norm(y): 1.0059, norm:1.2350, tok/sec: 148569.64, flops:115.71, batch-reuse:1
@ 749 train 5.9680 , allloss: 5.9697, dt: 898.39ms, fracRes: 0.0305, norm(attn): 0.1680, norm(output): 0.2314, norm(x): 0.1957, norm(y): 1.0060, norm:1.4658, tok/sec: 145895.92, flops:113.62, batch-reuse:1
@ 750 train 5.9683 , allloss: 5.9694, dt: 890.89ms, fracRes: 0.0293, norm(attn): 0.1650, norm(output): 0.2324, norm(x): 0.1968, norm(y): 1.0060, norm:1.1879, tok/sec: 147125.04, flops:114.58, batch-reuse:1
@ 751 train 5.8538 , allloss: 5.8555, dt: 903.56ms, fracRes: 0.0289, norm(attn): 0.1709, norm(output): 0.2324, norm(x): 0.1971, norm(y): 1.0059, norm:0.8789, tok/sec: 145062.50, flops:112.98, batch-reuse:1
@ 752 train 5.8160 , allloss: 5.8183, dt: 901.65ms, fracRes: 0.0300, norm(attn): 0.1729, norm(output): 0.2305, norm(x): 0.1962, norm(y): 1.0059, norm:0.9835, tok/sec: 145369.05, flops:113.21, batch-reuse:1
@ 753 train 5.8635 , allloss: 5.8657, dt: 905.28ms, fracRes: 0.0303, norm(attn): 0.1729, norm(output): 0.2305, norm(x): 0.1963, norm(y): 1.0060, norm:1.3930, tok/sec: 144786.13, flops:112.76, batch-reuse:1
@ 754 train 5.8320 , allloss: 5.8347, dt: 893.81ms, fracRes: 0.0302, norm(attn): 0.1719, norm(output): 0.2314, norm(x): 0.1970, norm(y): 1.0060, norm:1.1163, tok/sec: 146644.02, flops:114.21, batch-reuse:1
@ 755 train 5.9531 , allloss: 5.9546, dt: 902.69ms, fracRes: 0.0289, norm(attn): 0.1689, norm(output): 0.2334, norm(x): 0.1981, norm(y): 1.0060, norm:1.0026, tok/sec: 145201.19, flops:113.08, batch-reuse:1
@ 756 train 5.8481 , allloss: 5.8496, dt: 889.06ms, fracRes: 0.0280, norm(attn): 0.1719, norm(output): 0.2334, norm(x): 0.1996, norm(y): 1.0060, norm:1.3552, tok/sec: 147427.38, flops:114.82, batch-reuse:1
@ 757 train 5.8855 , allloss: 5.8870, dt: 888.32ms, fracRes: 0.0277, norm(attn): 0.1729, norm(output): 0.2324, norm(x): 0.1992, norm(y): 1.0059, norm:1.1437, tok/sec: 147549.76, flops:114.91, batch-reuse:1
@ 758 train 5.8198 , allloss: 5.8216, dt: 897.62ms, fracRes: 0.0293, norm(attn): 0.1719, norm(output): 0.2334, norm(x): 0.2004, norm(y): 1.0060, norm:1.1147, tok/sec: 146021.79, flops:113.72, batch-reuse:1
@ 759 train 5.9035 , allloss: 5.9050, dt: 887.66ms, fracRes: 0.0261, norm(attn): 0.1729, norm(output): 0.2344, norm(x): 0.2005, norm(y): 1.0058, norm:1.2757, tok/sec: 147660.81, flops:115.00, batch-reuse:1
@ 760 train 5.9063 , allloss: 5.9089, dt: 901.93ms, fracRes: 0.0244, norm(attn): 0.1709, norm(output): 0.2344, norm(x): 0.2002, norm(y): 1.0059, norm:1.1237, tok/sec: 145324.71, flops:113.18, batch-reuse:1
@ 761 train 5.9210 , allloss: 5.9241, dt: 900.72ms, fracRes: 0.0256, norm(attn): 0.1699, norm(output): 0.2363, norm(x): 0.2016, norm(y): 1.0059, norm:1.8788, tok/sec: 145518.93, flops:113.33, batch-reuse:1
@ 762 train 5.8804 , allloss: 5.8864, dt: 949.28ms, fracRes: 0.0304, norm(attn): 0.1689, norm(output): 0.2344, norm(x): 0.1998, norm(y): 1.0061, norm:1.1575, tok/sec: 138074.48, flops:107.53, batch-reuse:1
@ 763 train 5.9368 , allloss: 5.9383, dt: 888.90ms, fracRes: 0.0361, norm(attn): 0.1738, norm(output): 0.2334, norm(x): 0.1974, norm(y): 1.0063, norm:1.5341, tok/sec: 147453.71, flops:114.84, batch-reuse:1
@ 764 train 5.8793 , allloss: 5.8803, dt: 883.36ms, fracRes: 0.0351, norm(attn): 0.1738, norm(output): 0.2344, norm(x): 0.1998, norm(y): 1.0062, norm:1.4194, tok/sec: 148378.45, flops:115.56, batch-reuse:1
@ 765 train 5.8803 , allloss: 5.8810, dt: 893.54ms, fracRes: 0.0299, norm(attn): 0.1797, norm(output): 0.2354, norm(x): 0.2023, norm(y): 1.0059, norm:1.2438, tok/sec: 146688.55, flops:114.24, batch-reuse:1
@ 766 train 5.7871 , allloss: 5.7877, dt: 898.93ms, fracRes: 0.0281, norm(attn): 0.1719, norm(output): 0.2334, norm(x): 0.2011, norm(y): 1.0060, norm:1.1573, tok/sec: 145808.35, flops:113.56, batch-reuse:1
@ 767 train 5.8917 , allloss: 5.8927, dt: 874.39ms, fracRes: 0.0295, norm(attn): 0.1699, norm(output): 0.2344, norm(x): 0.1998, norm(y): 1.0061, norm:1.0852, tok/sec: 149901.67, flops:116.74, batch-reuse:1
@ 768 train 5.9914 , allloss: 5.9922, dt: 900.19ms, fracRes: 0.0321, norm(attn): 0.1689, norm(output): 0.2373, norm(x): 0.2012, norm(y): 1.0061, norm:1.2441, tok/sec: 145604.26, flops:113.40, batch-reuse:1
@ 769 train 5.8419 , allloss: 5.8446, dt: 905.92ms, fracRes: 0.0381, norm(attn): 0.1729, norm(output): 0.2354, norm(x): 0.1981, norm(y): 1.0062, norm:1.0530, tok/sec: 144683.66, flops:112.68, batch-reuse:1
@ 770 train 5.8120 , allloss: 5.8148, dt: 903.69ms, fracRes: 0.0406, norm(attn): 0.1748, norm(output): 0.2344, norm(x): 0.1984, norm(y): 1.0061, norm:1.1917, tok/sec: 145040.34, flops:112.96, batch-reuse:1
@ 771 train 5.8220 , allloss: 5.8240, dt: 894.56ms, fracRes: 0.0417, norm(attn): 0.1816, norm(output): 0.2344, norm(x): 0.1980, norm(y): 1.0061, norm:1.3594, tok/sec: 146521.37, flops:114.11, batch-reuse:1
@ 772 train 5.8356 , allloss: 5.8361, dt: 905.74ms, fracRes: 0.0417, norm(attn): 0.1738, norm(output): 0.2354, norm(x): 0.2002, norm(y): 1.0061, norm:0.9628, tok/sec: 144712.11, flops:112.70, batch-reuse:1
@ 773 train 5.9096 , allloss: 5.9105, dt: 897.30ms, fracRes: 0.0392, norm(attn): 0.1729, norm(output): 0.2344, norm(x): 0.1985, norm(y): 1.0061, norm:1.2502, tok/sec: 146073.19, flops:113.76, batch-reuse:1
@ 774 train 5.7716 , allloss: 5.7726, dt: 905.67ms, fracRes: 0.0348, norm(attn): 0.1748, norm(output): 0.2383, norm(x): 0.2049, norm(y): 1.0060, norm:1.5302, tok/sec: 144723.24, flops:112.71, batch-reuse:1
@ 775 train 5.8978 , allloss: 5.8988, dt: 905.79ms, fracRes: 0.0356, norm(attn): 0.1729, norm(output): 0.2354, norm(x): 0.2030, norm(y): 1.0061, norm:1.2002, tok/sec: 144704.61, flops:112.70, batch-reuse:1
@ 776 train 5.7358 , allloss: 5.7367, dt: 879.82ms, fracRes: 0.0338, norm(attn): 0.1758, norm(output): 0.2363, norm(x): 0.2035, norm(y): 1.0061, norm:1.2801, tok/sec: 148975.71, flops:116.02, batch-reuse:1
@ 777 train 5.8031 , allloss: 5.8040, dt: 895.87ms, fracRes: 0.0318, norm(attn): 0.1758, norm(output): 0.2363, norm(x): 0.2046, norm(y): 1.0060, norm:1.3664, tok/sec: 146307.53, flops:113.94, batch-reuse:1
@ 778 train 5.8001 , allloss: 5.8050, dt: 900.66ms, fracRes: 0.0313, norm(attn): 0.1738, norm(output): 0.2354, norm(x): 0.2040, norm(y): 1.0061, norm:1.2533, tok/sec: 145528.60, flops:113.34, batch-reuse:1
@ 779 train 5.8448 , allloss: 5.8452, dt: 907.39ms, fracRes: 0.0309, norm(attn): 0.1699, norm(output): 0.2363, norm(x): 0.2042, norm(y): 1.0062, norm:1.2223, tok/sec: 144449.86, flops:112.50, batch-reuse:1
@ 780 train 5.8231 , allloss: 5.8236, dt: 875.98ms, fracRes: 0.0311, norm(attn): 0.1709, norm(output): 0.2363, norm(x): 0.2033, norm(y): 1.0062, norm:1.1725, tok/sec: 149628.56, flops:116.53, batch-reuse:1
@ 781 train 5.8199 , allloss: 5.8206, dt: 912.35ms, fracRes: 0.0296, norm(attn): 0.1738, norm(output): 0.2354, norm(x): 0.2042, norm(y): 1.0061, norm:1.1645, tok/sec: 143663.80, flops:111.89, batch-reuse:1
@ 782 train 5.8160 , allloss: 5.8172, dt: 912.68ms, fracRes: 0.0322, norm(attn): 0.1768, norm(output): 0.2383, norm(x): 0.2040, norm(y): 1.0061, norm:1.2934, tok/sec: 143612.68, flops:111.85, batch-reuse:1
@ 783 train 5.7769 , allloss: 5.7785, dt: 900.59ms, fracRes: 0.0334, norm(attn): 0.1748, norm(output): 0.2402, norm(x): 0.2052, norm(y): 1.0063, norm:1.1230, tok/sec: 145539.65, flops:113.35, batch-reuse:1
@ 784 train 5.7807 , allloss: 5.7820, dt: 895.28ms, fracRes: 0.0291, norm(attn): 0.1758, norm(output): 0.2373, norm(x): 0.2065, norm(y): 1.0061, norm:1.2745, tok/sec: 146403.46, flops:114.02, batch-reuse:1
@ 785 train 5.7845 , allloss: 5.7849, dt: 913.58ms, fracRes: 0.0263, norm(attn): 0.1787, norm(output): 0.2412, norm(x): 0.2075, norm(y): 1.0060, norm:1.6761, tok/sec: 143470.98, flops:111.74, batch-reuse:1
@ 786 train 5.7415 , allloss: 5.7419, dt: 903.93ms, fracRes: 0.0288, norm(attn): 0.1699, norm(output): 0.2383, norm(x): 0.2050, norm(y): 1.0062, norm:1.0164, tok/sec: 145001.89, flops:112.93, batch-reuse:1
@ 787 train 5.7807 , allloss: 5.7812, dt: 912.14ms, fracRes: 0.0301, norm(attn): 0.1689, norm(output): 0.2393, norm(x): 0.2059, norm(y): 1.0062, norm:1.3393, tok/sec: 143696.77, flops:111.91, batch-reuse:1
@ 788 train 5.8571 , allloss: 5.8583, dt: 914.09ms, fracRes: 0.0316, norm(attn): 0.1719, norm(output): 0.2383, norm(x): 0.2055, norm(y): 1.0062, norm:1.1273, tok/sec: 143390.03, flops:111.67, batch-reuse:1
@ 789 train 5.7442 , allloss: 5.7446, dt: 917.73ms, fracRes: 0.0357, norm(attn): 0.1709, norm(output): 0.2441, norm(x): 0.2067, norm(y): 1.0063, norm:1.0193, tok/sec: 142821.39, flops:111.23, batch-reuse:1
@ 790 train 5.7228 , allloss: 5.7239, dt: 916.22ms, fracRes: 0.0365, norm(attn): 0.1719, norm(output): 0.2393, norm(x): 0.2051, norm(y): 1.0063, norm:0.9855, tok/sec: 143057.05, flops:111.41, batch-reuse:1
@ 791 train 5.8911 , allloss: 5.8921, dt: 918.29ms, fracRes: 0.0342, norm(attn): 0.1729, norm(output): 0.2422, norm(x): 0.2067, norm(y): 1.0062, norm:1.2753, tok/sec: 142735.40, flops:111.16, batch-reuse:1
@ 792 train 5.8358 , allloss: 5.8413, dt: 893.87ms, fracRes: 0.0276, norm(attn): 0.1816, norm(output): 0.2461, norm(x): 0.2113, norm(y): 1.0059, norm:1.3582, tok/sec: 146635.10, flops:114.20, batch-reuse:1
@ 793 train 5.8153 , allloss: 5.8178, dt: 902.19ms, fracRes: 0.0297, norm(attn): 0.1787, norm(output): 0.2432, norm(x): 0.2085, norm(y): 1.0061, norm:1.3625, tok/sec: 145281.27, flops:113.15, batch-reuse:1
@ 794 train 5.8648 , allloss: 5.8676, dt: 915.66ms, fracRes: 0.0350, norm(attn): 0.1748, norm(output): 0.2461, norm(x): 0.2088, norm(y): 1.0063, norm:1.2446, tok/sec: 143144.10, flops:111.48, batch-reuse:1
@ 795 train 5.7192 , allloss: 5.7213, dt: 936.88ms, fracRes: 0.0375, norm(attn): 0.1738, norm(output): 0.2422, norm(x): 0.2061, norm(y): 1.0063, norm:1.2253, tok/sec: 139901.96, flops:108.96, batch-reuse:1
@ 796 train 5.6561 , allloss: 5.6577, dt: 930.52ms, fracRes: 0.0394, norm(attn): 0.1787, norm(output): 0.2412, norm(x): 0.2062, norm(y): 1.0063, norm:1.2050, tok/sec: 140858.54, flops:109.70, batch-reuse:1
@ 797 train 5.8074 , allloss: 5.8090, dt: 880.44ms, fracRes: 0.0364, norm(attn): 0.1787, norm(output): 0.2422, norm(x): 0.2083, norm(y): 1.0062, norm:1.3511, tok/sec: 148870.82, flops:115.94, batch-reuse:1
@ 798 train 5.8016 , allloss: 5.8034, dt: 897.35ms, fracRes: 0.0376, norm(attn): 0.1768, norm(output): 0.2461, norm(x): 0.2088, norm(y): 1.0063, norm:1.0932, tok/sec: 146065.16, flops:113.76, batch-reuse:1
@ 799 train 5.8116 , allloss: 5.8147, dt: 889.91ms, fracRes: 0.0392, norm(attn): 0.1748, norm(output): 0.2422, norm(x): 0.2075, norm(y): 1.0063, norm:1.3073, tok/sec: 147287.52, flops:114.71, batch-reuse:1
@ 800 train 5.7467 , allloss: 5.7492, dt: 891.55ms, fracRes: 0.0403, norm(attn): 0.1758, norm(output): 0.2461, norm(x): 0.2078, norm(y): 1.0064, norm:1.1783, tok/sec: 147016.57, flops:114.50, batch-reuse:1
@ 801 train 5.7792 , allloss: 5.7811, dt: 895.01ms, fracRes: 0.0403, norm(attn): 0.1748, norm(output): 0.2461, norm(x): 0.2094, norm(y): 1.0063, norm:1.5150, tok/sec: 146448.31, flops:114.05, batch-reuse:1
@ 802 train 5.7729 , allloss: 5.7770, dt: 892.27ms, fracRes: 0.0415, norm(attn): 0.1826, norm(output): 0.2461, norm(x): 0.2098, norm(y): 1.0062, norm:1.0813, tok/sec: 146897.03, flops:114.40, batch-reuse:1
@ 803 train 5.8178 , allloss: 5.8203, dt: 903.96ms, fracRes: 0.0448, norm(attn): 0.1826, norm(output): 0.2441, norm(x): 0.2075, norm(y): 1.0063, norm:0.9333, tok/sec: 144997.95, flops:112.92, batch-reuse:1
@ 804 train 5.7430 , allloss: 5.7447, dt: 902.30ms, fracRes: 0.0464, norm(attn): 0.1738, norm(output): 0.2471, norm(x): 0.2078, norm(y): 1.0065, norm:1.2007, tok/sec: 145264.42, flops:113.13, batch-reuse:1
@ 805 train 5.8325 , allloss: 5.8336, dt: 901.64ms, fracRes: 0.0439, norm(attn): 0.1719, norm(output): 0.2461, norm(x): 0.2087, norm(y): 1.0065, norm:1.5018, tok/sec: 145371.21, flops:113.22, batch-reuse:1
@ 806 train 5.7288 , allloss: 5.7309, dt: 908.65ms, fracRes: 0.0407, norm(attn): 0.1816, norm(output): 0.2441, norm(x): 0.2080, norm(y): 1.0063, norm:1.0527, tok/sec: 144248.64, flops:112.34, batch-reuse:1
@ 807 train 5.7433 , allloss: 5.7443, dt: 894.46ms, fracRes: 0.0396, norm(attn): 0.1816, norm(output): 0.2471, norm(x): 0.2094, norm(y): 1.0062, norm:1.3079, tok/sec: 146536.80, flops:114.12, batch-reuse:1
@ 808 train 5.7897 , allloss: 5.7910, dt: 904.78ms, fracRes: 0.0423, norm(attn): 0.1768, norm(output): 0.2480, norm(x): 0.2099, norm(y): 1.0063, norm:1.4520, tok/sec: 144866.89, flops:112.82, batch-reuse:1
@ 809 train 5.7608 , allloss: 5.7659, dt: 910.28ms, fracRes: 0.0447, norm(attn): 0.1777, norm(output): 0.2461, norm(x): 0.2087, norm(y): 1.0064, norm:1.1377, tok/sec: 143990.48, flops:112.14, batch-reuse:1
@ 810 train 5.7686 , allloss: 5.7697, dt: 901.97ms, fracRes: 0.0509, norm(attn): 0.1836, norm(output): 0.2451, norm(x): 0.2067, norm(y): 1.0065, norm:0.9749, tok/sec: 145317.41, flops:113.17, batch-reuse:1
@ 811 train 5.7650 , allloss: 5.7696, dt: 918.82ms, fracRes: 0.0498, norm(attn): 0.1836, norm(output): 0.2461, norm(x): 0.2077, norm(y): 1.0065, norm:1.4159, tok/sec: 142652.18, flops:111.10, batch-reuse:1
@ 812 train 5.6676 , allloss: 5.6745, dt: 890.89ms, fracRes: 0.0442, norm(attn): 0.1816, norm(output): 0.2500, norm(x): 0.2108, norm(y): 1.0064, norm:1.0538, tok/sec: 147125.16, flops:114.58, batch-reuse:1
@ 813 train 5.8183 , allloss: 5.8197, dt: 897.35ms, fracRes: 0.0380, norm(attn): 0.1758, norm(output): 0.2490, norm(x): 0.2126, norm(y): 1.0063, norm:1.2390, tok/sec: 146066.13, flops:113.76, batch-reuse:1
@ 814 train 5.8312 , allloss: 5.8327, dt: 893.86ms, fracRes: 0.0373, norm(attn): 0.1729, norm(output): 0.2490, norm(x): 0.2126, norm(y): 1.0063, norm:1.3994, tok/sec: 146636.23, flops:114.20, batch-reuse:1
@ 815 train 5.7013 , allloss: 5.7022, dt: 892.76ms, fracRes: 0.0383, norm(attn): 0.1729, norm(output): 0.2490, norm(x): 0.2135, norm(y): 1.0064, norm:1.2599, tok/sec: 146816.45, flops:114.34, batch-reuse:1
@ 816 train 5.7595 , allloss: 5.7622, dt: 898.54ms, fracRes: 0.0395, norm(attn): 0.1777, norm(output): 0.2500, norm(x): 0.2153, norm(y): 1.0064, norm:1.5031, tok/sec: 145872.03, flops:113.61, batch-reuse:1
@ 817 train 5.6974 , allloss: 5.6990, dt: 899.30ms, fracRes: 0.0403, norm(attn): 0.1816, norm(output): 0.2500, norm(x): 0.2144, norm(y): 1.0064, norm:1.1322, tok/sec: 145748.71, flops:113.51, batch-reuse:1
@ 818 train 5.7085 , allloss: 5.7117, dt: 890.90ms, fracRes: 0.0410, norm(attn): 0.1836, norm(output): 0.2490, norm(x): 0.2127, norm(y): 1.0064, norm:0.9526, tok/sec: 147123.03, flops:114.58, batch-reuse:1
@ 819 train 5.8230 , allloss: 5.8239, dt: 900.76ms, fracRes: 0.0406, norm(attn): 0.1738, norm(output): 0.2520, norm(x): 0.2135, norm(y): 1.0065, norm:1.1029, tok/sec: 145512.50, flops:113.33, batch-reuse:1
@ 820 train 5.8747 , allloss: 5.8754, dt: 899.37ms, fracRes: 0.0409, norm(attn): 0.1738, norm(output): 0.2500, norm(x): 0.2131, norm(y): 1.0065, norm:1.1278, tok/sec: 145737.19, flops:113.50, batch-reuse:1
@ 821 train 5.7902 , allloss: 5.7918, dt: 913.67ms, fracRes: 0.0427, norm(attn): 0.1768, norm(output): 0.2500, norm(x): 0.2133, norm(y): 1.0066, norm:1.1823, tok/sec: 143456.94, flops:111.72, batch-reuse:1
@ 822 train 5.7642 , allloss: 5.7661, dt: 908.51ms, fracRes: 0.0415, norm(attn): 0.1816, norm(output): 0.2520, norm(x): 0.2152, norm(y): 1.0064, norm:1.2322, tok/sec: 144270.71, flops:112.36, batch-reuse:1
@ 823 train 5.6876 , allloss: 5.6888, dt: 908.79ms, fracRes: 0.0407, norm(attn): 0.1826, norm(output): 0.2500, norm(x): 0.2155, norm(y): 1.0064, norm:1.2150, tok/sec: 144226.24, flops:112.32, batch-reuse:1
@ 824 train 5.8065 , allloss: 5.8207, dt: 910.57ms, fracRes: 0.0424, norm(attn): 0.1777, norm(output): 0.2520, norm(x): 0.2153, norm(y): 1.0064, norm:1.3107, tok/sec: 143945.66, flops:112.11, batch-reuse:1
@ 825 train 5.7492 , allloss: 5.7499, dt: 911.74ms, fracRes: 0.0430, norm(attn): 0.1748, norm(output): 0.2500, norm(x): 0.2133, norm(y): 1.0066, norm:0.9645, tok/sec: 143759.86, flops:111.96, batch-reuse:1
@ 826 train 5.7553 , allloss: 5.7567, dt: 908.15ms, fracRes: 0.0440, norm(attn): 0.1855, norm(output): 0.2500, norm(x): 0.2129, norm(y): 1.0066, norm:1.6916, tok/sec: 144328.32, flops:112.40, batch-reuse:1
@ 827 train 5.8226 , allloss: 5.8232, dt: 922.01ms, fracRes: 0.0437, norm(attn): 0.1855, norm(output): 0.2500, norm(x): 0.2143, norm(y): 1.0065, norm:2.1241, tok/sec: 142159.50, flops:110.71, batch-reuse:1
@ 828 train 5.7636 , allloss: 5.7648, dt: 923.24ms, fracRes: 0.0432, norm(attn): 0.1836, norm(output): 0.2520, norm(x): 0.2156, norm(y): 1.0064, norm:1.1999, tok/sec: 141969.26, flops:110.57, batch-reuse:1
@ 829 train 5.7782 , allloss: 5.7791, dt: 918.40ms, fracRes: 0.0455, norm(attn): 0.1777, norm(output): 0.2539, norm(x): 0.2168, norm(y): 1.0065, norm:1.1513, tok/sec: 142717.91, flops:111.15, batch-reuse:1
@ 830 train 5.7940 , allloss: 5.7952, dt: 894.97ms, fracRes: 0.0482, norm(attn): 0.1758, norm(output): 0.2539, norm(x): 0.2171, norm(y): 1.0065, norm:1.4011, tok/sec: 146454.08, flops:114.06, batch-reuse:1
@ 831 train 5.7515 , allloss: 5.7525, dt: 886.91ms, fracRes: 0.0464, norm(attn): 0.1738, norm(output): 0.2539, norm(x): 0.2172, norm(y): 1.0065, norm:1.0422, tok/sec: 147784.58, flops:115.10, batch-reuse:1
@ 832 train 5.8282 , allloss: 5.8293, dt: 902.14ms, fracRes: 0.0482, norm(attn): 0.1816, norm(output): 0.2520, norm(x): 0.2164, norm(y): 1.0065, norm:1.9111, tok/sec: 145289.41, flops:113.15, batch-reuse:1
@ 833 train 5.6960 , allloss: 5.6964, dt: 905.59ms, fracRes: 0.0457, norm(attn): 0.1836, norm(output): 0.2520, norm(x): 0.2187, norm(y): 1.0064, norm:1.2870, tok/sec: 144735.85, flops:112.72, batch-reuse:1
@ 834 train 5.7298 , allloss: 5.7304, dt: 891.76ms, fracRes: 0.0434, norm(attn): 0.1807, norm(output): 0.2539, norm(x): 0.2201, norm(y): 1.0063, norm:1.2273, tok/sec: 146981.00, flops:114.47, batch-reuse:1
@ 835 train 5.6380 , allloss: 5.6386, dt: 906.46ms, fracRes: 0.0461, norm(attn): 0.1777, norm(output): 0.2539, norm(x): 0.2172, norm(y): 1.0065, norm:1.0167, tok/sec: 144596.94, flops:112.61, batch-reuse:1
@ 836 train 5.6622 , allloss: 5.6634, dt: 893.25ms, fracRes: 0.0474, norm(attn): 0.1797, norm(output): 0.2520, norm(x): 0.2169, norm(y): 1.0066, norm:1.0441, tok/sec: 146735.69, flops:114.28, batch-reuse:1
@ 837 train 5.6504 , allloss: 5.6525, dt: 905.62ms, fracRes: 0.0505, norm(attn): 0.1787, norm(output): 0.2539, norm(x): 0.2164, norm(y): 1.0067, norm:1.1317, tok/sec: 144731.77, flops:112.72, batch-reuse:1
@ 838 train 5.7062 , allloss: 5.7073, dt: 906.72ms, fracRes: 0.0493, norm(attn): 0.1777, norm(output): 0.2539, norm(x): 0.2175, norm(y): 1.0066, norm:1.9972, tok/sec: 144555.80, flops:112.58, batch-reuse:1
@ 839 train 5.6201 , allloss: 5.6211, dt: 897.89ms, fracRes: 0.0454, norm(attn): 0.1826, norm(output): 0.2578, norm(x): 0.2203, norm(y): 1.0064, norm:1.4409, tok/sec: 145978.24, flops:113.69, batch-reuse:1
@ 840 train 5.6718 , allloss: 5.6739, dt: 894.48ms, fracRes: 0.0467, norm(attn): 0.1826, norm(output): 0.2559, norm(x): 0.2200, norm(y): 1.0065, norm:1.2220, tok/sec: 146535.00, flops:114.12, batch-reuse:1
@ 841 train 5.6363 , allloss: 5.6375, dt: 887.16ms, fracRes: 0.0512, norm(attn): 0.1777, norm(output): 0.2578, norm(x): 0.2201, norm(y): 1.0067, norm:1.3089, tok/sec: 147743.79, flops:115.06, batch-reuse:1
@ 842 train 5.7289 , allloss: 5.7302, dt: 907.05ms, fracRes: 0.0554, norm(attn): 0.1738, norm(output): 0.2559, norm(x): 0.2174, norm(y): 1.0068, norm:1.0872, tok/sec: 144502.91, flops:112.54, batch-reuse:1
@ 843 train 5.7372 , allloss: 5.7382, dt: 896.97ms, fracRes: 0.0541, norm(attn): 0.1777, norm(output): 0.2578, norm(x): 0.2183, norm(y): 1.0068, norm:1.2164, tok/sec: 146127.36, flops:113.80, batch-reuse:1
@ 844 train 5.7646 , allloss: 5.7654, dt: 898.39ms, fracRes: 0.0501, norm(attn): 0.1807, norm(output): 0.2559, norm(x): 0.2199, norm(y): 1.0066, norm:1.3010, tok/sec: 145896.66, flops:113.62, batch-reuse:1
@ 845 train 5.7242 , allloss: 5.7252, dt: 898.58ms, fracRes: 0.0512, norm(attn): 0.1855, norm(output): 0.2559, norm(x): 0.2190, norm(y): 1.0066, norm:1.5258, tok/sec: 145865.73, flops:113.60, batch-reuse:1
@ 846 train 5.6899 , allloss: 5.6917, dt: 884.06ms, fracRes: 0.0504, norm(attn): 0.1777, norm(output): 0.2617, norm(x): 0.2196, norm(y): 1.0066, norm:1.0335, tok/sec: 148262.01, flops:115.47, batch-reuse:1
@ 847 train 5.7654 , allloss: 5.7668, dt: 888.01ms, fracRes: 0.0543, norm(attn): 0.1807, norm(output): 0.2578, norm(x): 0.2189, norm(y): 1.0067, norm:1.3687, tok/sec: 147602.49, flops:114.95, batch-reuse:1
@ 848 train 5.6984 , allloss: 5.6999, dt: 891.47ms, fracRes: 0.0578, norm(attn): 0.1836, norm(output): 0.2578, norm(x): 0.2182, norm(y): 1.0068, norm:1.2108, tok/sec: 147029.86, flops:114.51, batch-reuse:1
@ 849 train 5.6925 , allloss: 5.6967, dt: 922.95ms, fracRes: 0.0545, norm(attn): 0.1855, norm(output): 0.2578, norm(x): 0.2194, norm(y): 1.0068, norm:1.5326, tok/sec: 142014.81, flops:110.60, batch-reuse:1
@ 850 train 5.6503 , allloss: 5.6536, dt: 902.59ms, fracRes: 0.0481, norm(attn): 0.1895, norm(output): 0.2617, norm(x): 0.2231, norm(y): 1.0065, norm:1.3436, tok/sec: 145217.91, flops:113.10, batch-reuse:1
@ 851 train 5.9110 , allloss: 5.9122, dt: 893.07ms, fracRes: 0.0479, norm(attn): 0.1836, norm(output): 0.2617, norm(x): 0.2235, norm(y): 1.0066, norm:1.2491, tok/sec: 146765.81, flops:114.30, batch-reuse:1
@ 852 train 5.7549 , allloss: 5.7557, dt: 900.79ms, fracRes: 0.0450, norm(attn): 0.1797, norm(output): 0.2656, norm(x): 0.2255, norm(y): 1.0066, norm:1.3733, tok/sec: 145507.37, flops:113.32, batch-reuse:1
@ 853 train 5.6935 , allloss: 5.6943, dt: 903.91ms, fracRes: 0.0457, norm(attn): 0.1768, norm(output): 0.2656, norm(x): 0.2253, norm(y): 1.0067, norm:1.2696, tok/sec: 145005.68, flops:112.93, batch-reuse:1
@ 854 train 5.6856 , allloss: 5.6872, dt: 905.59ms, fracRes: 0.0501, norm(attn): 0.1787, norm(output): 0.2656, norm(x): 0.2247, norm(y): 1.0068, norm:1.0813, tok/sec: 144736.65, flops:112.72, batch-reuse:1
@ 855 train 5.7072 , allloss: 5.7094, dt: 902.06ms, fracRes: 0.0546, norm(attn): 0.1855, norm(output): 0.2656, norm(x): 0.2232, norm(y): 1.0067, norm:1.0748, tok/sec: 145302.85, flops:113.16, batch-reuse:1
@ 856 train 5.7022 , allloss: 5.7055, dt: 906.50ms, fracRes: 0.0555, norm(attn): 0.1875, norm(output): 0.2637, norm(x): 0.2232, norm(y): 1.0067, norm:1.1942, tok/sec: 144590.55, flops:112.61, batch-reuse:1
@ 857 train 5.6537 , allloss: 5.6574, dt: 904.11ms, fracRes: 0.0539, norm(attn): 0.1875, norm(output): 0.2637, norm(x): 0.2225, norm(y): 1.0067, norm:0.8261, tok/sec: 144973.17, flops:112.91, batch-reuse:1
@ 858 train 5.7369 , allloss: 5.7385, dt: 908.67ms, fracRes: 0.0515, norm(attn): 0.1787, norm(output): 0.2656, norm(x): 0.2234, norm(y): 1.0068, norm:0.8935, tok/sec: 144246.22, flops:112.34, batch-reuse:1
@ 859 train 5.6662 , allloss: 5.6671, dt: 903.10ms, fracRes: 0.0484, norm(attn): 0.1787, norm(output): 0.2656, norm(x): 0.2254, norm(y): 1.0068, norm:0.9562, tok/sec: 145135.99, flops:113.03, batch-reuse:1
@ 860 train 5.6865 , allloss: 5.6875, dt: 895.29ms, fracRes: 0.0459, norm(attn): 0.1816, norm(output): 0.2656, norm(x): 0.2265, norm(y): 1.0067, norm:1.1243, tok/sec: 146401.86, flops:114.02, batch-reuse:1
@ 861 train 5.7035 , allloss: 5.7055, dt: 876.47ms, fracRes: 0.0491, norm(attn): 0.1855, norm(output): 0.2656, norm(x): 0.2250, norm(y): 1.0067, norm:1.5085, tok/sec: 149546.01, flops:116.47, batch-reuse:1
@ 862 train 5.7094 , allloss: 5.7118, dt: 888.54ms, fracRes: 0.0492, norm(attn): 0.1904, norm(output): 0.2656, norm(x): 0.2268, norm(y): 1.0067, norm:1.1408, tok/sec: 147513.26, flops:114.88, batch-reuse:1
@ 863 train 5.6696 , allloss: 5.6706, dt: 916.84ms, fracRes: 0.0544, norm(attn): 0.1846, norm(output): 0.2637, norm(x): 0.2253, norm(y): 1.0069, norm:1.2185, tok/sec: 142961.22, flops:111.34, batch-reuse:1
@ 864 train 5.6881 , allloss: 5.6889, dt: 911.86ms, fracRes: 0.0579, norm(attn): 0.1855, norm(output): 0.2637, norm(x): 0.2237, norm(y): 1.0069, norm:1.1385, tok/sec: 143741.33, flops:111.95, batch-reuse:1
@ 865 train 5.5977 , allloss: 5.5988, dt: 906.82ms, fracRes: 0.0558, norm(attn): 0.1855, norm(output): 0.2656, norm(x): 0.2265, norm(y): 1.0068, norm:1.1565, tok/sec: 144539.91, flops:112.57, batch-reuse:1
@ 866 train 5.5833 , allloss: 5.5841, dt: 898.52ms, fracRes: 0.0539, norm(attn): 0.1836, norm(output): 0.2656, norm(x): 0.2286, norm(y): 1.0067, norm:1.0806, tok/sec: 145874.67, flops:113.61, batch-reuse:1
@ 867 train 5.6484 , allloss: 5.6493, dt: 895.84ms, fracRes: 0.0547, norm(attn): 0.1855, norm(output): 0.2656, norm(x): 0.2269, norm(y): 1.0068, norm:1.4128, tok/sec: 146312.51, flops:113.95, batch-reuse:1
@ 868 train 5.6361 , allloss: 5.6380, dt: 909.61ms, fracRes: 0.0561, norm(attn): 0.1807, norm(output): 0.2656, norm(x): 0.2273, norm(y): 1.0069, norm:1.0730, tok/sec: 144097.60, flops:112.22, batch-reuse:1
@ 869 train 5.6538 , allloss: 5.6554, dt: 908.22ms, fracRes: 0.0592, norm(attn): 0.1855, norm(output): 0.2695, norm(x): 0.2285, norm(y): 1.0069, norm:1.1787, tok/sec: 144316.77, flops:112.39, batch-reuse:1
@ 870 train 5.6420 , allloss: 5.6433, dt: 903.44ms, fracRes: 0.0610, norm(attn): 0.1875, norm(output): 0.2695, norm(x): 0.2274, norm(y): 1.0070, norm:1.0327, tok/sec: 145081.41, flops:112.99, batch-reuse:1
@ 871 train 5.6423 , allloss: 5.6450, dt: 889.81ms, fracRes: 0.0507, norm(attn): 0.1875, norm(output): 0.2695, norm(x): 0.2308, norm(y): 1.0068, norm:0.8700, tok/sec: 147302.75, flops:114.72, batch-reuse:1
@ 872 train 5.6247 , allloss: 5.6254, dt: 890.66ms, fracRes: 0.0466, norm(attn): 0.1846, norm(output): 0.2695, norm(x): 0.2324, norm(y): 1.0068, norm:1.2424, tok/sec: 147162.93, flops:114.61, batch-reuse:1
@ 873 train 5.6596 , allloss: 5.6612, dt: 899.58ms, fracRes: 0.0491, norm(attn): 0.1846, norm(output): 0.2715, norm(x): 0.2305, norm(y): 1.0069, norm:1.2883, tok/sec: 145702.82, flops:113.47, batch-reuse:1
@ 874 train 5.5573 , allloss: 5.5600, dt: 902.46ms, fracRes: 0.0507, norm(attn): 0.1787, norm(output): 0.2715, norm(x): 0.2307, norm(y): 1.0070, norm:1.1622, tok/sec: 145237.83, flops:113.11, batch-reuse:1
@ 875 train 5.6131 , allloss: 5.6154, dt: 893.39ms, fracRes: 0.0537, norm(attn): 0.1865, norm(output): 0.2695, norm(x): 0.2296, norm(y): 1.0070, norm:1.2411, tok/sec: 146713.37, flops:114.26, batch-reuse:1
@ 876 train 5.6181 , allloss: 5.6227, dt: 896.30ms, fracRes: 0.0507, norm(attn): 0.1875, norm(output): 0.2715, norm(x): 0.2319, norm(y): 1.0069, norm:0.9725, tok/sec: 146237.01, flops:113.89, batch-reuse:1
@ 877 train 5.6331 , allloss: 5.6356, dt: 903.49ms, fracRes: 0.0541, norm(attn): 0.1855, norm(output): 0.2734, norm(x): 0.2322, norm(y): 1.0070, norm:1.0633, tok/sec: 145073.33, flops:112.98, batch-reuse:1
@ 878 train 5.6025 , allloss: 5.6045, dt: 900.35ms, fracRes: 0.0531, norm(attn): 0.1826, norm(output): 0.2695, norm(x): 0.2312, norm(y): 1.0071, norm:0.9619, tok/sec: 145578.96, flops:113.38, batch-reuse:1
@ 879 train 5.5438 , allloss: 5.5457, dt: 894.44ms, fracRes: 0.0540, norm(attn): 0.1836, norm(output): 0.2715, norm(x): 0.2315, norm(y): 1.0071, norm:1.2623, tok/sec: 146540.08, flops:114.13, batch-reuse:1
@ 880 train 5.6632 , allloss: 5.6649, dt: 912.40ms, fracRes: 0.0516, norm(attn): 0.1875, norm(output): 0.2715, norm(x): 0.2327, norm(y): 1.0069, norm:1.1107, tok/sec: 143655.99, flops:111.88, batch-reuse:1
@ 881 train 5.5338 , allloss: 5.5352, dt: 895.74ms, fracRes: 0.0503, norm(attn): 0.1875, norm(output): 0.2734, norm(x): 0.2344, norm(y): 1.0068, norm:1.2122, tok/sec: 146328.91, flops:113.96, batch-reuse:1
@ 882 train 5.5428 , allloss: 5.5459, dt: 899.13ms, fracRes: 0.0554, norm(attn): 0.1836, norm(output): 0.2715, norm(x): 0.2319, norm(y): 1.0071, norm:1.1514, tok/sec: 145775.95, flops:113.53, batch-reuse:1
@ 883 train 5.5265 , allloss: 5.5298, dt: 907.41ms, fracRes: 0.0570, norm(attn): 0.1816, norm(output): 0.2754, norm(x): 0.2324, norm(y): 1.0072, norm:1.3953, tok/sec: 144446.52, flops:112.50, batch-reuse:1
@ 884 train 5.5225 , allloss: 5.5290, dt: 890.62ms, fracRes: 0.0549, norm(attn): 0.1855, norm(output): 0.2695, norm(x): 0.2313, norm(y): 1.0070, norm:1.2112, tok/sec: 147169.19, flops:114.62, batch-reuse:1
@ 885 train 5.5538 , allloss: 5.5578, dt: 918.10ms, fracRes: 0.0536, norm(attn): 0.1885, norm(output): 0.2734, norm(x): 0.2327, norm(y): 1.0069, norm:1.3165, tok/sec: 142765.13, flops:111.19, batch-reuse:1
@ 886 train 5.6281 , allloss: 5.6296, dt: 919.10ms, fracRes: 0.0531, norm(attn): 0.1846, norm(output): 0.2754, norm(x): 0.2341, norm(y): 1.0069, norm:1.5031, tok/sec: 142609.58, flops:111.06, batch-reuse:1
@ 887 train 5.5919 , allloss: 5.5941, dt: 919.53ms, fracRes: 0.0594, norm(attn): 0.1797, norm(output): 0.2695, norm(x): 0.2307, norm(y): 1.0072, norm:1.0829, tok/sec: 142542.10, flops:111.01, batch-reuse:1
@ 888 train 5.5505 , allloss: 5.5537, dt: 913.48ms, fracRes: 0.0627, norm(attn): 0.1816, norm(output): 0.2734, norm(x): 0.2318, norm(y): 1.0072, norm:1.3246, tok/sec: 143487.08, flops:111.75, batch-reuse:1
@ 889 train 5.6113 , allloss: 5.6156, dt: 902.03ms, fracRes: 0.0616, norm(attn): 0.1855, norm(output): 0.2754, norm(x): 0.2325, norm(y): 1.0071, norm:1.1428, tok/sec: 145307.81, flops:113.17, batch-reuse:1
@ 890 train 5.6149 , allloss: 5.6195, dt: 897.15ms, fracRes: 0.0592, norm(attn): 0.1875, norm(output): 0.2734, norm(x): 0.2333, norm(y): 1.0070, norm:1.3131, tok/sec: 146097.81, flops:113.78, batch-reuse:1
@ 891 train 5.5670 , allloss: 5.5704, dt: 919.47ms, fracRes: 0.0536, norm(attn): 0.1875, norm(output): 0.2793, norm(x): 0.2367, norm(y): 1.0069, norm:1.1080, tok/sec: 142551.23, flops:111.02, batch-reuse:1
@ 892 train 5.5300 , allloss: 5.5332, dt: 888.09ms, fracRes: 0.0549, norm(attn): 0.1865, norm(output): 0.2773, norm(x): 0.2349, norm(y): 1.0070, norm:1.4670, tok/sec: 147587.87, flops:114.94, batch-reuse:1
@ 893 train 5.4491 , allloss: 5.4522, dt: 899.57ms, fracRes: 0.0565, norm(attn): 0.1826, norm(output): 0.2773, norm(x): 0.2351, norm(y): 1.0071, norm:0.9360, tok/sec: 145705.91, flops:113.48, batch-reuse:1
@ 894 train 5.5699 , allloss: 5.5722, dt: 902.01ms, fracRes: 0.0589, norm(attn): 0.1826, norm(output): 0.2773, norm(x): 0.2357, norm(y): 1.0071, norm:1.2549, tok/sec: 145311.11, flops:113.17, batch-reuse:1
@ 895 train 5.5183 , allloss: 5.5229, dt: 901.97ms, fracRes: 0.0598, norm(attn): 0.1914, norm(output): 0.2793, norm(x): 0.2361, norm(y): 1.0071, norm:0.9517, tok/sec: 145317.99, flops:113.17, batch-reuse:1
@ 896 train 5.4497 , allloss: 5.4522, dt: 902.03ms, fracRes: 0.0598, norm(attn): 0.1885, norm(output): 0.2793, norm(x): 0.2357, norm(y): 1.0071, norm:0.9291, tok/sec: 145307.65, flops:113.17, batch-reuse:1
@ 897 train 5.5495 , allloss: 5.5506, dt: 911.96ms, fracRes: 0.0609, norm(attn): 0.1865, norm(output): 0.2773, norm(x): 0.2347, norm(y): 1.0072, norm:1.0821, tok/sec: 143724.98, flops:111.93, batch-reuse:1
@ 898 train 5.5928 , allloss: 5.5937, dt: 905.22ms, fracRes: 0.0618, norm(attn): 0.1875, norm(output): 0.2793, norm(x): 0.2356, norm(y): 1.0072, norm:1.3607, tok/sec: 144795.43, flops:112.77, batch-reuse:1
@ 899 train 5.5440 , allloss: 5.5456, dt: 903.98ms, fracRes: 0.0625, norm(attn): 0.1885, norm(output): 0.2754, norm(x): 0.2344, norm(y): 1.0072, norm:1.1786, tok/sec: 144994.09, flops:112.92, batch-reuse:1
@ 900 train 5.5886 , allloss: 5.5920, dt: 898.58ms, fracRes: 0.0644, norm(attn): 0.1865, norm(output): 0.2793, norm(x): 0.2363, norm(y): 1.0071, norm:0.8785, tok/sec: 145865.80, flops:113.60, batch-reuse:1
@ 901 train 5.5342 , allloss: 5.5369, dt: 912.33ms, fracRes: 0.0624, norm(attn): 0.1885, norm(output): 0.2812, norm(x): 0.2379, norm(y): 1.0071, norm:1.1561, tok/sec: 143667.97, flops:111.89, batch-reuse:1
@ 902 train 5.5153 , allloss: 5.5176, dt: 911.95ms, fracRes: 0.0648, norm(attn): 0.1855, norm(output): 0.2793, norm(x): 0.2373, norm(y): 1.0073, norm:1.4167, tok/sec: 143727.80, flops:111.94, batch-reuse:1
@ 903 train 5.5128 , allloss: 5.5159, dt: 915.81ms, fracRes: 0.0684, norm(attn): 0.1875, norm(output): 0.2793, norm(x): 0.2351, norm(y): 1.0073, norm:1.1216, tok/sec: 143121.04, flops:111.46, batch-reuse:1
@ 904 train 5.4561 , allloss: 5.4617, dt: 915.32ms, fracRes: 0.0716, norm(attn): 0.1885, norm(output): 0.2793, norm(x): 0.2360, norm(y): 1.0073, norm:1.0691, tok/sec: 143197.72, flops:111.52, batch-reuse:1
@ 905 train 5.5119 , allloss: 5.5154, dt: 900.56ms, fracRes: 0.0662, norm(attn): 0.1943, norm(output): 0.2812, norm(x): 0.2394, norm(y): 1.0071, norm:1.1377, tok/sec: 145544.32, flops:113.35, batch-reuse:1
@ 906 train 5.5151 , allloss: 5.5247, dt: 892.51ms, fracRes: 0.0662, norm(attn): 0.1885, norm(output): 0.2812, norm(x): 0.2387, norm(y): 1.0072, norm:1.0209, tok/sec: 146858.18, flops:114.37, batch-reuse:1
@ 907 train 5.3698 , allloss: 5.3717, dt: 899.37ms, fracRes: 0.0627, norm(attn): 0.1865, norm(output): 0.2812, norm(x): 0.2391, norm(y): 1.0072, norm:1.3950, tok/sec: 145737.50, flops:113.50, batch-reuse:1
@ 908 train 5.5521 , allloss: 5.5541, dt: 885.02ms, fracRes: 0.0586, norm(attn): 0.1885, norm(output): 0.2812, norm(x): 0.2408, norm(y): 1.0071, norm:1.5811, tok/sec: 148101.04, flops:115.34, batch-reuse:1
@ 909 train 5.7658 , allloss: 5.7684, dt: 899.03ms, fracRes: 0.0655, norm(attn): 0.1875, norm(output): 0.2832, norm(x): 0.2398, norm(y): 1.0072, norm:1.2538, tok/sec: 145792.11, flops:113.54, batch-reuse:1
@ 910 train 5.5377 , allloss: 5.5398, dt: 907.90ms, fracRes: 0.0678, norm(attn): 0.1855, norm(output): 0.2812, norm(x): 0.2377, norm(y): 1.0073, norm:1.3381, tok/sec: 144367.85, flops:112.43, batch-reuse:1
@ 911 train 5.5836 , allloss: 5.5910, dt: 889.75ms, fracRes: 0.0706, norm(attn): 0.1953, norm(output): 0.2793, norm(x): 0.2362, norm(y): 1.0073, norm:1.4317, tok/sec: 147312.89, flops:114.73, batch-reuse:1
@ 912 train 5.5307 , allloss: 5.5396, dt: 895.93ms, fracRes: 0.0669, norm(attn): 0.1963, norm(output): 0.2812, norm(x): 0.2403, norm(y): 1.0072, norm:1.5343, tok/sec: 146297.29, flops:113.94, batch-reuse:1
@ 913 train 5.5062 , allloss: 5.5148, dt: 906.81ms, fracRes: 0.0632, norm(attn): 0.1943, norm(output): 0.2832, norm(x): 0.2421, norm(y): 1.0071, norm:1.5227, tok/sec: 144542.04, flops:112.57, batch-reuse:1
@ 914 train 5.5615 , allloss: 5.5704, dt: 900.74ms, fracRes: 0.0627, norm(attn): 0.1924, norm(output): 0.2812, norm(x): 0.2397, norm(y): 1.0072, norm:1.2254, tok/sec: 145516.39, flops:113.33, batch-reuse:1
@ 915 train 5.5684 , allloss: 5.5748, dt: 908.93ms, fracRes: 0.0662, norm(attn): 0.1855, norm(output): 0.2812, norm(x): 0.2387, norm(y): 1.0074, norm:1.0478, tok/sec: 144204.11, flops:112.31, batch-reuse:1
@ 916 train 5.4715 , allloss: 5.4742, dt: 894.89ms, fracRes: 0.0662, norm(attn): 0.1836, norm(output): 0.2832, norm(x): 0.2410, norm(y): 1.0074, norm:1.3054, tok/sec: 146467.70, flops:114.07, batch-reuse:1
@ 917 train 5.5300 , allloss: 5.5324, dt: 901.18ms, fracRes: 0.0656, norm(attn): 0.1904, norm(output): 0.2812, norm(x): 0.2411, norm(y): 1.0073, norm:1.8424, tok/sec: 145445.55, flops:113.27, batch-reuse:1
@ 918 train 5.5544 , allloss: 5.5585, dt: 922.03ms, fracRes: 0.0679, norm(attn): 0.1904, norm(output): 0.2832, norm(x): 0.2418, norm(y): 1.0073, norm:1.3978, tok/sec: 142156.30, flops:110.71, batch-reuse:1
@ 919 train 5.4834 , allloss: 5.4874, dt: 916.72ms, fracRes: 0.0739, norm(attn): 0.1885, norm(output): 0.2832, norm(x): 0.2393, norm(y): 1.0075, norm:1.2180, tok/sec: 142979.55, flops:111.35, batch-reuse:1
@ 920 train 5.5634 , allloss: 5.5686, dt: 919.34ms, fracRes: 0.0785, norm(attn): 0.1885, norm(output): 0.2832, norm(x): 0.2373, norm(y): 1.0076, norm:1.4693, tok/sec: 142571.23, flops:111.03, batch-reuse:1
@ 921 train 5.5221 , allloss: 5.5261, dt: 922.00ms, fracRes: 0.0722, norm(attn): 0.1865, norm(output): 0.2832, norm(x): 0.2406, norm(y): 1.0075, norm:1.2241, tok/sec: 142160.86, flops:110.72, batch-reuse:1
@ 922 train 5.5081 , allloss: 5.5114, dt: 892.25ms, fracRes: 0.0664, norm(attn): 0.1895, norm(output): 0.2871, norm(x): 0.2449, norm(y): 1.0073, norm:1.1859, tok/sec: 146900.17, flops:114.41, batch-reuse:1
@ 923 train 5.5169 , allloss: 5.5197, dt: 910.77ms, fracRes: 0.0662, norm(attn): 0.1895, norm(output): 0.2832, norm(x): 0.2433, norm(y): 1.0073, norm:1.6820, tok/sec: 143913.97, flops:112.08, batch-reuse:1
@ 924 train 5.4810 , allloss: 5.4854, dt: 905.48ms, fracRes: 0.0683, norm(attn): 0.1895, norm(output): 0.2832, norm(x): 0.2424, norm(y): 1.0074, norm:1.1063, tok/sec: 144754.83, flops:112.74, batch-reuse:1
@ 925 train 5.5324 , allloss: 5.5395, dt: 912.83ms, fracRes: 0.0668, norm(attn): 0.1953, norm(output): 0.2852, norm(x): 0.2443, norm(y): 1.0072, norm:1.2577, tok/sec: 143588.45, flops:111.83, batch-reuse:1
@ 926 train 5.5025 , allloss: 5.5052, dt: 883.91ms, fracRes: 0.0698, norm(attn): 0.1895, norm(output): 0.2832, norm(x): 0.2428, norm(y): 1.0075, norm:1.3496, tok/sec: 148286.96, flops:115.49, batch-reuse:1
@ 927 train 5.4350 , allloss: 5.4407, dt: 897.75ms, fracRes: 0.0708, norm(attn): 0.1875, norm(output): 0.2852, norm(x): 0.2426, norm(y): 1.0076, norm:1.1369, tok/sec: 146001.27, flops:113.71, batch-reuse:1
@ 928 train 5.6292 , allloss: 5.6327, dt: 896.59ms, fracRes: 0.0737, norm(attn): 0.1846, norm(output): 0.2852, norm(x): 0.2430, norm(y): 1.0076, norm:0.9921, tok/sec: 146189.02, flops:113.85, batch-reuse:1
@ 929 train 5.6684 , allloss: 5.6712, dt: 905.41ms, fracRes: 0.0758, norm(attn): 0.1914, norm(output): 0.2891, norm(x): 0.2448, norm(y): 1.0076, norm:1.5194, tok/sec: 144766.03, flops:112.74, batch-reuse:1
@ 930 train 5.6372 , allloss: 5.6411, dt: 894.76ms, fracRes: 0.0728, norm(attn): 0.1963, norm(output): 0.2852, norm(x): 0.2445, norm(y): 1.0074, norm:1.2280, tok/sec: 146488.46, flops:114.09, batch-reuse:1
@ 931 train 5.7383 , allloss: 5.7429, dt: 878.48ms, fracRes: 0.0740, norm(attn): 0.1963, norm(output): 0.2891, norm(x): 0.2439, norm(y): 1.0074, norm:1.2681, tok/sec: 149203.74, flops:116.20, batch-reuse:1
@ 932 train 5.6920 , allloss: 5.6961, dt: 920.31ms, fracRes: 0.0715, norm(attn): 0.1895, norm(output): 0.2930, norm(x): 0.2458, norm(y): 1.0074, norm:1.2610, tok/sec: 142420.91, flops:110.92, batch-reuse:1
@ 933 train 5.6919 , allloss: 5.6950, dt: 893.06ms, fracRes: 0.0732, norm(attn): 0.1904, norm(output): 0.2930, norm(x): 0.2450, norm(y): 1.0075, norm:1.1270, tok/sec: 146766.87, flops:114.30, batch-reuse:1
@ 934 train 5.6619 , allloss: 5.6662, dt: 886.07ms, fracRes: 0.0787, norm(attn): 0.1885, norm(output): 0.2871, norm(x): 0.2426, norm(y): 1.0076, norm:1.1174, tok/sec: 147925.11, flops:115.20, batch-reuse:1
@ 935 train 5.5989 , allloss: 5.6016, dt: 888.44ms, fracRes: 0.0751, norm(attn): 0.1924, norm(output): 0.2910, norm(x): 0.2465, norm(y): 1.0075, norm:1.1722, tok/sec: 147531.27, flops:114.90, batch-reuse:1
@ 936 train 5.6514 , allloss: 5.6546, dt: 899.62ms, fracRes: 0.0724, norm(attn): 0.1924, norm(output): 0.2949, norm(x): 0.2488, norm(y): 1.0074, norm:1.3144, tok/sec: 145697.87, flops:113.47, batch-reuse:1
@ 937 train 5.6722 , allloss: 5.6746, dt: 902.18ms, fracRes: 0.0725, norm(attn): 0.1895, norm(output): 0.2969, norm(x): 0.2500, norm(y): 1.0074, norm:1.2957, tok/sec: 145283.81, flops:113.15, batch-reuse:1
@ 938 train 5.6331 , allloss: 5.6353, dt: 894.29ms, fracRes: 0.0764, norm(attn): 0.1885, norm(output): 0.2930, norm(x): 0.2478, norm(y): 1.0076, norm:1.5357, tok/sec: 146564.73, flops:114.15, batch-reuse:1
@ 939 train 5.7080 , allloss: 5.7109, dt: 907.69ms, fracRes: 0.0832, norm(attn): 0.1895, norm(output): 0.2891, norm(x): 0.2450, norm(y): 1.0077, norm:1.3495, tok/sec: 144401.72, flops:112.46, batch-reuse:1
@ 940 train 5.6763 , allloss: 5.6804, dt: 906.46ms, fracRes: 0.0825, norm(attn): 0.1914, norm(output): 0.2930, norm(x): 0.2470, norm(y): 1.0076, norm:1.0518, tok/sec: 144597.39, flops:112.61, batch-reuse:1
@ 941 train 5.6598 , allloss: 5.6652, dt: 906.71ms, fracRes: 0.0782, norm(attn): 0.2012, norm(output): 0.2930, norm(x): 0.2477, norm(y): 1.0074, norm:1.2349, tok/sec: 144557.17, flops:112.58, batch-reuse:1
@ 942 train 5.7184 , allloss: 5.7222, dt: 910.13ms, fracRes: 0.0677, norm(attn): 0.1934, norm(output): 0.2969, norm(x): 0.2534, norm(y): 1.0072, norm:1.1237, tok/sec: 144015.00, flops:112.16, batch-reuse:1
@ 943 train 5.6172 , allloss: 5.6201, dt: 900.40ms, fracRes: 0.0712, norm(attn): 0.1924, norm(output): 0.2988, norm(x): 0.2522, norm(y): 1.0075, norm:1.3372, tok/sec: 145570.10, flops:113.37, batch-reuse:1
@ 944 train 5.6557 , allloss: 5.6572, dt: 908.40ms, fracRes: 0.0767, norm(attn): 0.1875, norm(output): 0.2988, norm(x): 0.2496, norm(y): 1.0077, norm:1.4807, tok/sec: 144288.81, flops:112.37, batch-reuse:1
@ 945 train 5.7347 , allloss: 5.7387, dt: 892.31ms, fracRes: 0.0813, norm(attn): 0.1914, norm(output): 0.2969, norm(x): 0.2491, norm(y): 1.0078, norm:1.2073, tok/sec: 146889.85, flops:114.40, batch-reuse:1
@ 946 train 5.6647 , allloss: 5.6663, dt: 877.52ms, fracRes: 0.0819, norm(attn): 0.1885, norm(output): 0.2930, norm(x): 0.2468, norm(y): 1.0078, norm:1.6894, tok/sec: 149365.85, flops:116.33, batch-reuse:1
@ 947 train 5.6626 , allloss: 5.6644, dt: 902.20ms, fracRes: 0.0805, norm(attn): 0.1934, norm(output): 0.2949, norm(x): 0.2472, norm(y): 1.0077, norm:1.3867, tok/sec: 145281.20, flops:113.15, batch-reuse:1
@ 948 train 5.6521 , allloss: 5.6542, dt: 909.43ms, fracRes: 0.0762, norm(attn): 0.1943, norm(output): 0.3008, norm(x): 0.2497, norm(y): 1.0075, norm:1.0467, tok/sec: 144125.06, flops:112.25, batch-reuse:1
@ 949 train 5.6988 , allloss: 5.7017, dt: 890.76ms, fracRes: 0.0748, norm(attn): 0.1934, norm(output): 0.2969, norm(x): 0.2512, norm(y): 1.0075, norm:1.3378, tok/sec: 147145.91, flops:114.60, batch-reuse:1
@ 950 train 5.6248 , allloss: 5.6259, dt: 892.58ms, fracRes: 0.0727, norm(attn): 0.1904, norm(output): 0.3008, norm(x): 0.2540, norm(y): 1.0075, norm:1.2230, tok/sec: 146846.76, flops:114.36, batch-reuse:1
@ 951 train 5.6703 , allloss: 5.6720, dt: 902.57ms, fracRes: 0.0752, norm(attn): 0.1895, norm(output): 0.3008, norm(x): 0.2538, norm(y): 1.0076, norm:1.1703, tok/sec: 145221.37, flops:113.10, batch-reuse:1
@ 952 train 5.6013 , allloss: 5.6049, dt: 904.97ms, fracRes: 0.0767, norm(attn): 0.1953, norm(output): 0.3027, norm(x): 0.2542, norm(y): 1.0075, norm:1.2340, tok/sec: 144835.48, flops:112.80, batch-reuse:1
@ 953 train 5.6048 , allloss: 5.6126, dt: 919.62ms, fracRes: 0.0791, norm(attn): 0.1963, norm(output): 0.3008, norm(x): 0.2523, norm(y): 1.0076, norm:1.0344, tok/sec: 142527.95, flops:111.00, batch-reuse:1
@ 954 train 5.5442 , allloss: 5.5465, dt: 915.01ms, fracRes: 0.0826, norm(attn): 0.1943, norm(output): 0.3008, norm(x): 0.2510, norm(y): 1.0077, norm:1.0941, tok/sec: 143247.09, flops:111.56, batch-reuse:1
@ 955 train 5.6414 , allloss: 5.6439, dt: 905.09ms, fracRes: 0.0797, norm(attn): 0.1885, norm(output): 0.3008, norm(x): 0.2537, norm(y): 1.0077, norm:1.0367, tok/sec: 144817.17, flops:112.78, batch-reuse:1
@ 956 train 5.5993 , allloss: 5.6020, dt: 914.52ms, fracRes: 0.0795, norm(attn): 0.1934, norm(output): 0.3008, norm(x): 0.2524, norm(y): 1.0077, norm:1.2583, tok/sec: 143322.75, flops:111.62, batch-reuse:1
@ 957 train 5.6196 , allloss: 5.6218, dt: 905.44ms, fracRes: 0.0786, norm(attn): 0.1973, norm(output): 0.3027, norm(x): 0.2548, norm(y): 1.0077, norm:1.1435, tok/sec: 144759.78, flops:112.74, batch-reuse:1
@ 958 train 5.6413 , allloss: 5.6438, dt: 921.77ms, fracRes: 0.0772, norm(attn): 0.2002, norm(output): 0.3047, norm(x): 0.2563, norm(y): 1.0077, norm:1.4140, tok/sec: 142196.60, flops:110.74, batch-reuse:1
@ 959 train 5.5140 , allloss: 5.5162, dt: 892.71ms, fracRes: 0.0780, norm(attn): 0.1973, norm(output): 0.3047, norm(x): 0.2567, norm(y): 1.0077, norm:1.1620, tok/sec: 146824.76, flops:114.35, batch-reuse:1
@ 960 train 5.6653 , allloss: 5.6670, dt: 881.33ms, fracRes: 0.0800, norm(attn): 0.1943, norm(output): 0.3008, norm(x): 0.2544, norm(y): 1.0078, norm:1.2265, tok/sec: 148721.04, flops:115.82, batch-reuse:1
@ 961 train 5.5709 , allloss: 5.5738, dt: 889.99ms, fracRes: 0.0830, norm(attn): 0.2002, norm(output): 0.3008, norm(x): 0.2527, norm(y): 1.0078, norm:1.1930, tok/sec: 147272.80, flops:114.70, batch-reuse:1
@ 962 train 5.6342 , allloss: 5.6376, dt: 891.75ms, fracRes: 0.0814, norm(attn): 0.2031, norm(output): 0.3008, norm(x): 0.2545, norm(y): 1.0077, norm:1.2989, tok/sec: 146983.55, flops:114.47, batch-reuse:1
@ 963 train 5.6270 , allloss: 5.6313, dt: 909.01ms, fracRes: 0.0817, norm(attn): 0.2002, norm(output): 0.3047, norm(x): 0.2550, norm(y): 1.0077, norm:0.8292, tok/sec: 144191.97, flops:112.30, batch-reuse:1
@ 964 train 5.6435 , allloss: 5.6461, dt: 892.67ms, fracRes: 0.0838, norm(attn): 0.1943, norm(output): 0.3086, norm(x): 0.2555, norm(y): 1.0077, norm:1.1999, tok/sec: 146830.92, flops:114.35, batch-reuse:1
@ 965 train 5.6473 , allloss: 5.6486, dt: 910.07ms, fracRes: 0.0827, norm(attn): 0.1934, norm(output): 0.3086, norm(x): 0.2575, norm(y): 1.0078, norm:1.4156, tok/sec: 144024.51, flops:112.17, batch-reuse:1
@ 966 train 5.5763 , allloss: 5.5778, dt: 896.32ms, fracRes: 0.0796, norm(attn): 0.1934, norm(output): 0.3105, norm(x): 0.2613, norm(y): 1.0077, norm:1.1482, tok/sec: 146233.43, flops:113.89, batch-reuse:1
@ 967 train 5.5480 , allloss: 5.5495, dt: 898.54ms, fracRes: 0.0847, norm(attn): 0.2012, norm(output): 0.3105, norm(x): 0.2596, norm(y): 1.0078, norm:1.7464, tok/sec: 145872.65, flops:113.61, batch-reuse:1
@ 968 train 5.7366 , allloss: 5.7386, dt: 898.96ms, fracRes: 0.0844, norm(attn): 0.1914, norm(output): 0.3105, norm(x): 0.2570, norm(y): 1.0078, norm:1.4855, tok/sec: 145804.18, flops:113.55, batch-reuse:1
@ 969 train 5.6067 , allloss: 5.6090, dt: 886.85ms, fracRes: 0.0855, norm(attn): 0.1963, norm(output): 0.3105, norm(x): 0.2579, norm(y): 1.0078, norm:1.1191, tok/sec: 147794.27, flops:115.10, batch-reuse:1
@ 970 train 5.6146 , allloss: 5.6167, dt: 899.10ms, fracRes: 0.0815, norm(attn): 0.1914, norm(output): 0.3105, norm(x): 0.2608, norm(y): 1.0076, norm:1.6592, tok/sec: 145781.33, flops:113.54, batch-reuse:1
@ 971 train 5.6504 , allloss: 5.6533, dt: 898.87ms, fracRes: 0.0862, norm(attn): 0.1953, norm(output): 0.3105, norm(x): 0.2579, norm(y): 1.0077, norm:1.6646, tok/sec: 145818.33, flops:113.56, batch-reuse:1
@ 972 train 5.6376 , allloss: 5.6398, dt: 910.06ms, fracRes: 0.0934, norm(attn): 0.1943, norm(output): 0.3105, norm(x): 0.2560, norm(y): 1.0079, norm:1.1442, tok/sec: 144025.98, flops:112.17, batch-reuse:1
@ 973 train 5.6251 , allloss: 5.6289, dt: 887.30ms, fracRes: 0.0976, norm(attn): 0.1934, norm(output): 0.3105, norm(x): 0.2552, norm(y): 1.0080, norm:1.1022, tok/sec: 147719.97, flops:115.04, batch-reuse:1
@ 974 train 5.6082 , allloss: 5.6104, dt: 914.94ms, fracRes: 0.0905, norm(attn): 0.2002, norm(output): 0.3105, norm(x): 0.2580, norm(y): 1.0079, norm:1.1896, tok/sec: 143257.09, flops:111.57, batch-reuse:1
@ 975 train 5.6351 , allloss: 5.6372, dt: 915.19ms, fracRes: 0.0862, norm(attn): 0.1953, norm(output): 0.3125, norm(x): 0.2606, norm(y): 1.0078, norm:1.1853, tok/sec: 143219.02, flops:111.54, batch-reuse:1
@ 976 train 5.5575 , allloss: 5.5593, dt: 913.69ms, fracRes: 0.0848, norm(attn): 0.1953, norm(output): 0.3125, norm(x): 0.2608, norm(y): 1.0078, norm:1.2497, tok/sec: 143453.53, flops:111.72, batch-reuse:1
@ 977 train 5.5683 , allloss: 5.5698, dt: 912.57ms, fracRes: 0.0874, norm(attn): 0.2021, norm(output): 0.3105, norm(x): 0.2591, norm(y): 1.0078, norm:1.1737, tok/sec: 143629.23, flops:111.86, batch-reuse:1
@ 978 train 5.5586 , allloss: 5.5607, dt: 892.86ms, fracRes: 0.0876, norm(attn): 0.2002, norm(output): 0.3105, norm(x): 0.2588, norm(y): 1.0079, norm:0.9605, tok/sec: 146799.36, flops:114.33, batch-reuse:1
@ 979 train 5.5112 , allloss: 5.5138, dt: 908.97ms, fracRes: 0.0866, norm(attn): 0.2002, norm(output): 0.3105, norm(x): 0.2606, norm(y): 1.0079, norm:1.3980, tok/sec: 144198.25, flops:112.30, batch-reuse:1
@ 980 train 5.4595 , allloss: 5.4609, dt: 901.31ms, fracRes: 0.0826, norm(attn): 0.1973, norm(output): 0.3125, norm(x): 0.2628, norm(y): 1.0079, norm:1.1290, tok/sec: 145424.12, flops:113.26, batch-reuse:1
@ 981 train 5.4741 , allloss: 5.4754, dt: 914.98ms, fracRes: 0.0847, norm(attn): 0.1992, norm(output): 0.3125, norm(x): 0.2629, norm(y): 1.0079, norm:1.3633, tok/sec: 143251.42, flops:111.56, batch-reuse:1
@ 982 train 5.4888 , allloss: 5.4912, dt: 914.68ms, fracRes: 0.0834, norm(attn): 0.2002, norm(output): 0.3125, norm(x): 0.2619, norm(y): 1.0078, norm:1.2660, tok/sec: 143297.45, flops:111.60, batch-reuse:1
@ 983 train 5.5601 , allloss: 5.5615, dt: 894.93ms, fracRes: 0.0913, norm(attn): 0.1992, norm(output): 0.3164, norm(x): 0.2628, norm(y): 1.0080, norm:1.0872, tok/sec: 146460.21, flops:114.06, batch-reuse:1
@ 984 train 5.5226 , allloss: 5.5237, dt: 903.27ms, fracRes: 0.0950, norm(attn): 0.1982, norm(output): 0.3125, norm(x): 0.2594, norm(y): 1.0081, norm:1.5942, tok/sec: 145108.52, flops:113.01, batch-reuse:1
@ 985 train 5.5425 , allloss: 5.5443, dt: 899.84ms, fracRes: 0.0929, norm(attn): 0.1982, norm(output): 0.3125, norm(x): 0.2598, norm(y): 1.0080, norm:1.4410, tok/sec: 145662.13, flops:113.44, batch-reuse:1
@ 986 train 5.5917 , allloss: 5.5936, dt: 897.73ms, fracRes: 0.0859, norm(attn): 0.1992, norm(output): 0.3145, norm(x): 0.2654, norm(y): 1.0078, norm:1.1437, tok/sec: 146004.14, flops:113.71, batch-reuse:1
@ 987 train 5.4715 , allloss: 5.4744, dt: 919.82ms, fracRes: 0.0840, norm(attn): 0.1992, norm(output): 0.3145, norm(x): 0.2669, norm(y): 1.0078, norm:0.9883, tok/sec: 142497.55, flops:110.98, batch-reuse:1
@ 988 train 5.6290 , allloss: 5.6342, dt: 895.84ms, fracRes: 0.0933, norm(attn): 0.1943, norm(output): 0.3125, norm(x): 0.2623, norm(y): 1.0082, norm:1.2705, tok/sec: 146312.63, flops:113.95, batch-reuse:1
@ 989 train 5.6582 , allloss: 5.6601, dt: 903.21ms, fracRes: 0.0989, norm(attn): 0.1992, norm(output): 0.3125, norm(x): 0.2608, norm(y): 1.0082, norm:1.4701, tok/sec: 145118.17, flops:113.02, batch-reuse:1
@ 990 train 5.5328 , allloss: 5.5364, dt: 902.38ms, fracRes: 0.0972, norm(attn): 0.2041, norm(output): 0.3125, norm(x): 0.2601, norm(y): 1.0080, norm:1.2264, tok/sec: 145251.60, flops:113.12, batch-reuse:1
@ 991 train 5.5324 , allloss: 5.5351, dt: 904.47ms, fracRes: 0.0950, norm(attn): 0.2021, norm(output): 0.3125, norm(x): 0.2603, norm(y): 1.0081, norm:1.1184, tok/sec: 144915.12, flops:112.86, batch-reuse:1
@ 992 train 5.5913 , allloss: 5.5938, dt: 894.05ms, fracRes: 0.0885, norm(attn): 0.2002, norm(output): 0.3125, norm(x): 0.2633, norm(y): 1.0079, norm:0.9130, tok/sec: 146605.11, flops:114.18, batch-reuse:1
@ 993 train 5.4488 , allloss: 5.4541, dt: 903.95ms, fracRes: 0.0864, norm(attn): 0.1953, norm(output): 0.3164, norm(x): 0.2677, norm(y): 1.0080, norm:0.9804, tok/sec: 144998.41, flops:112.93, batch-reuse:1
@ 994 train 5.5399 , allloss: 5.5445, dt: 919.42ms, fracRes: 0.0865, norm(attn): 0.2041, norm(output): 0.3145, norm(x): 0.2667, norm(y): 1.0080, norm:1.2098, tok/sec: 142559.96, flops:111.03, batch-reuse:1
@ 995 train 5.5023 , allloss: 5.5044, dt: 899.80ms, fracRes: 0.0876, norm(attn): 0.2021, norm(output): 0.3145, norm(x): 0.2682, norm(y): 1.0080, norm:1.1682, tok/sec: 145668.11, flops:113.45, batch-reuse:1
@ 996 train 5.4034 , allloss: 5.4071, dt: 880.52ms, fracRes: 0.0932, norm(attn): 0.1992, norm(output): 0.3164, norm(x): 0.2663, norm(y): 1.0081, norm:1.5634, tok/sec: 148856.67, flops:115.93, batch-reuse:1
@ 997 train 5.5032 , allloss: 5.5056, dt: 897.14ms, fracRes: 0.0960, norm(attn): 0.1963, norm(output): 0.3184, norm(x): 0.2655, norm(y): 1.0081, norm:1.3174, tok/sec: 146100.60, flops:113.78, batch-reuse:1
@ 998 train 5.6803 , allloss: 5.6823, dt: 914.45ms, fracRes: 0.0955, norm(attn): 0.1943, norm(output): 0.3203, norm(x): 0.2677, norm(y): 1.0082, norm:1.2937, tok/sec: 143334.78, flops:111.63, batch-reuse:1
@ 999 train 5.4752 , allloss: 5.4775, dt: 923.34ms, fracRes: 0.0936, norm(attn): 0.1982, norm(output): 0.3203, norm(x): 0.2680, norm(y): 1.0081, norm:1.3035, tok/sec: 141953.57, flops:110.55, batch-reuse:1
@ 1000 train 5.5175 , allloss: 5.5209, dt: 919.31ms, fracRes: 0.0915, norm(attn): 0.2021, norm(output): 0.3145, norm(x): 0.2678, norm(y): 1.0079, norm:1.3028, tok/sec: 142576.52, flops:111.04, batch-reuse:1
@ 1001 train 5.5841 , allloss: 5.5894, dt: 906.63ms, fracRes: 0.0919, norm(attn): 0.1992, norm(output): 0.3184, norm(x): 0.2692, norm(y): 1.0079, norm:1.0708, tok/sec: 144570.55, flops:112.59, batch-reuse:1
@ 1002 train 5.4696 , allloss: 5.4729, dt: 917.52ms, fracRes: 0.0946, norm(attn): 0.1982, norm(output): 0.3203, norm(x): 0.2694, norm(y): 1.0081, norm:1.1356, tok/sec: 142855.16, flops:111.26, batch-reuse:1
@ 1003 train 5.5936 , allloss: 5.5969, dt: 920.98ms, fracRes: 0.0967, norm(attn): 0.1973, norm(output): 0.3242, norm(x): 0.2696, norm(y): 1.0082, norm:1.2048, tok/sec: 142318.26, flops:110.84, batch-reuse:1
@ 1004 train 5.4320 , allloss: 5.4357, dt: 918.13ms, fracRes: 0.0937, norm(attn): 0.2021, norm(output): 0.3242, norm(x): 0.2706, norm(y): 1.0081, norm:1.0029, tok/sec: 142759.68, flops:111.18, batch-reuse:1
@ 1005 train 5.5228 , allloss: 5.5250, dt: 916.91ms, fracRes: 0.0952, norm(attn): 0.2041, norm(output): 0.3242, norm(x): 0.2725, norm(y): 1.0082, norm:1.2342, tok/sec: 142949.18, flops:111.33, batch-reuse:1
@ 1006 train 5.5386 , allloss: 5.5411, dt: 909.92ms, fracRes: 0.0931, norm(attn): 0.2051, norm(output): 0.3223, norm(x): 0.2711, norm(y): 1.0081, norm:1.1960, tok/sec: 144047.95, flops:112.19, batch-reuse:1
@ 1007 train 5.4977 , allloss: 5.4996, dt: 904.13ms, fracRes: 0.0928, norm(attn): 0.2041, norm(output): 0.3184, norm(x): 0.2698, norm(y): 1.0081, norm:1.1275, tok/sec: 144970.11, flops:112.90, batch-reuse:1
@ 1008 train 5.5116 , allloss: 5.5139, dt: 909.47ms, fracRes: 0.0973, norm(attn): 0.2041, norm(output): 0.3242, norm(x): 0.2694, norm(y): 1.0082, norm:1.1395, tok/sec: 144119.32, flops:112.24, batch-reuse:1
@ 1009 train 5.5074 , allloss: 5.5120, dt: 899.38ms, fracRes: 0.1005, norm(attn): 0.2031, norm(output): 0.3242, norm(x): 0.2677, norm(y): 1.0083, norm:0.9359, tok/sec: 145735.18, flops:113.50, batch-reuse:1
@ 1010 train 5.5622 , allloss: 5.5640, dt: 891.60ms, fracRes: 0.0973, norm(attn): 0.2041, norm(output): 0.3242, norm(x): 0.2711, norm(y): 1.0082, norm:1.0548, tok/sec: 147007.80, flops:114.49, batch-reuse:1
@ 1011 train 5.4724 , allloss: 5.4751, dt: 893.00ms, fracRes: 0.0942, norm(attn): 0.2041, norm(output): 0.3242, norm(x): 0.2731, norm(y): 1.0081, norm:0.9871, tok/sec: 146776.47, flops:114.31, batch-reuse:1
@ 1012 train 5.5410 , allloss: 5.5424, dt: 908.89ms, fracRes: 0.0958, norm(attn): 0.2031, norm(output): 0.3301, norm(x): 0.2740, norm(y): 1.0081, norm:1.0893, tok/sec: 144210.43, flops:112.31, batch-reuse:1
@ 1013 train 5.5103 , allloss: 5.5118, dt: 901.39ms, fracRes: 0.1014, norm(attn): 0.2012, norm(output): 0.3242, norm(x): 0.2711, norm(y): 1.0082, norm:1.1258, tok/sec: 145410.39, flops:113.25, batch-reuse:1
@ 1014 train 5.4649 , allloss: 5.4671, dt: 910.04ms, fracRes: 0.1041, norm(attn): 0.2031, norm(output): 0.3281, norm(x): 0.2709, norm(y): 1.0082, norm:1.1263, tok/sec: 144028.36, flops:112.17, batch-reuse:1
@ 1015 train 5.5557 , allloss: 5.5579, dt: 898.79ms, fracRes: 0.1065, norm(attn): 0.2031, norm(output): 0.3281, norm(x): 0.2712, norm(y): 1.0083, norm:1.3376, tok/sec: 145830.82, flops:113.57, batch-reuse:1
@ 1016 train 5.6026 , allloss: 5.6050, dt: 892.53ms, fracRes: 0.1067, norm(attn): 0.2041, norm(output): 0.3242, norm(x): 0.2716, norm(y): 1.0083, norm:1.3411, tok/sec: 146853.63, flops:114.37, batch-reuse:1
@ 1017 train 5.4416 , allloss: 5.4436, dt: 903.89ms, fracRes: 0.1041, norm(attn): 0.2041, norm(output): 0.3262, norm(x): 0.2720, norm(y): 1.0083, norm:1.1410, tok/sec: 145009.39, flops:112.93, batch-reuse:1
@ 1018 train 5.5397 , allloss: 5.5421, dt: 903.14ms, fracRes: 0.1030, norm(attn): 0.2012, norm(output): 0.3320, norm(x): 0.2737, norm(y): 1.0084, norm:0.9589, tok/sec: 145128.59, flops:113.03, batch-reuse:1
@ 1019 train 5.5093 , allloss: 5.5107, dt: 900.61ms, fracRes: 0.1011, norm(attn): 0.2021, norm(output): 0.3320, norm(x): 0.2757, norm(y): 1.0083, norm:1.1707, tok/sec: 145537.23, flops:113.34, batch-reuse:1
@ 1020 train 5.4388 , allloss: 5.4402, dt: 900.66ms, fracRes: 0.0952, norm(attn): 0.2061, norm(output): 0.3320, norm(x): 0.2787, norm(y): 1.0082, norm:1.1419, tok/sec: 145528.91, flops:113.34, batch-reuse:1
@ 1021 train 5.4414 , allloss: 5.4428, dt: 904.02ms, fracRes: 0.0929, norm(attn): 0.2061, norm(output): 0.3340, norm(x): 0.2796, norm(y): 1.0082, norm:1.3017, tok/sec: 144987.20, flops:112.92, batch-reuse:1
@ 1022 train 5.3608 , allloss: 5.3627, dt: 892.46ms, fracRes: 0.0965, norm(attn): 0.2031, norm(output): 0.3320, norm(x): 0.2755, norm(y): 1.0083, norm:1.0584, tok/sec: 146866.14, flops:114.38, batch-reuse:1
@ 1023 train 5.4215 , allloss: 5.4236, dt: 916.35ms, fracRes: 0.0987, norm(attn): 0.2041, norm(output): 0.3281, norm(x): 0.2751, norm(y): 1.0084, norm:1.4043, tok/sec: 143037.10, flops:111.40, batch-reuse:1
@ 1024 train 5.3902 , allloss: 5.3923, dt: 905.22ms, fracRes: 0.1006, norm(attn): 0.2080, norm(output): 0.3301, norm(x): 0.2757, norm(y): 1.0084, norm:1.0833, tok/sec: 144795.85, flops:112.77, batch-reuse:1
@ 1025 train 5.4760 , allloss: 5.4778, dt: 884.49ms, fracRes: 0.1031, norm(attn): 0.2041, norm(output): 0.3340, norm(x): 0.2778, norm(y): 1.0084, norm:1.5177, tok/sec: 148188.79, flops:115.41, batch-reuse:1
@ 1026 train 5.4760 , allloss: 5.4787, dt: 895.66ms, fracRes: 0.1057, norm(attn): 0.2051, norm(output): 0.3320, norm(x): 0.2745, norm(y): 1.0084, norm:1.0994, tok/sec: 146342.00, flops:113.97, batch-reuse:1
@ 1027 train 5.4790 , allloss: 5.4813, dt: 907.27ms, fracRes: 0.1054, norm(attn): 0.2061, norm(output): 0.3262, norm(x): 0.2738, norm(y): 1.0084, norm:1.2297, tok/sec: 144468.20, flops:112.51, batch-reuse:1
@ 1028 train 5.4214 , allloss: 5.4232, dt: 906.92ms, fracRes: 0.1019, norm(attn): 0.2051, norm(output): 0.3320, norm(x): 0.2765, norm(y): 1.0083, norm:1.1651, tok/sec: 144524.18, flops:112.56, batch-reuse:1
@ 1029 train 5.4274 , allloss: 5.4285, dt: 900.83ms, fracRes: 0.1048, norm(attn): 0.2051, norm(output): 0.3379, norm(x): 0.2778, norm(y): 1.0084, norm:1.0183, tok/sec: 145500.75, flops:113.32, batch-reuse:1
@ 1030 train 5.4310 , allloss: 5.4323, dt: 908.60ms, fracRes: 0.1061, norm(attn): 0.2090, norm(output): 0.3320, norm(x): 0.2779, norm(y): 1.0084, norm:1.1976, tok/sec: 144257.20, flops:112.35, batch-reuse:1
@ 1031 train 5.4848 , allloss: 5.4864, dt: 904.63ms, fracRes: 0.1019, norm(attn): 0.2061, norm(output): 0.3379, norm(x): 0.2795, norm(y): 1.0083, norm:1.1961, tok/sec: 144890.76, flops:112.84, batch-reuse:1
@ 1032 train 5.3912 , allloss: 5.3925, dt: 910.13ms, fracRes: 0.1034, norm(attn): 0.2031, norm(output): 0.3379, norm(x): 0.2801, norm(y): 1.0084, norm:1.1334, tok/sec: 144014.02, flops:112.16, batch-reuse:1
@ 1033 train 5.4239 , allloss: 5.4251, dt: 912.00ms, fracRes: 0.1053, norm(attn): 0.2021, norm(output): 0.3359, norm(x): 0.2780, norm(y): 1.0084, norm:1.1261, tok/sec: 143718.74, flops:111.93, batch-reuse:1
@ 1034 train 5.3854 , allloss: 5.3867, dt: 913.67ms, fracRes: 0.1098, norm(attn): 0.2041, norm(output): 0.3359, norm(x): 0.2770, norm(y): 1.0085, norm:1.0309, tok/sec: 143457.12, flops:111.72, batch-reuse:1
@ 1035 train 5.4076 , allloss: 5.4088, dt: 901.44ms, fracRes: 0.1082, norm(attn): 0.2061, norm(output): 0.3340, norm(x): 0.2783, norm(y): 1.0085, norm:1.1066, tok/sec: 145403.62, flops:113.24, batch-reuse:1
@ 1036 train 5.4541 , allloss: 5.4563, dt: 893.85ms, fracRes: 0.1089, norm(attn): 0.2061, norm(output): 0.3340, norm(x): 0.2794, norm(y): 1.0085, norm:1.0761, tok/sec: 146638.35, flops:114.20, batch-reuse:1
@ 1037 train 5.4196 , allloss: 5.4219, dt: 920.66ms, fracRes: 0.1095, norm(attn): 0.2070, norm(output): 0.3359, norm(x): 0.2794, norm(y): 1.0086, norm:1.1035, tok/sec: 142368.02, flops:110.88, batch-reuse:1
@ 1038 train 5.3758 , allloss: 5.3776, dt: 916.77ms, fracRes: 0.1109, norm(attn): 0.2080, norm(output): 0.3398, norm(x): 0.2799, norm(y): 1.0086, norm:1.2775, tok/sec: 142971.49, flops:111.35, batch-reuse:1
@ 1039 train 5.4087 , allloss: 5.4107, dt: 921.04ms, fracRes: 0.1059, norm(attn): 0.2070, norm(output): 0.3398, norm(x): 0.2817, norm(y): 1.0084, norm:1.2336, tok/sec: 142308.91, flops:110.83, batch-reuse:1
@ 1040 train 5.3186 , allloss: 5.3199, dt: 914.66ms, fracRes: 0.1058, norm(attn): 0.2051, norm(output): 0.3340, norm(x): 0.2793, norm(y): 1.0084, norm:1.3018, tok/sec: 143300.59, flops:111.60, batch-reuse:1
@ 1041 train 5.4286 , allloss: 5.4307, dt: 916.02ms, fracRes: 0.1093, norm(attn): 0.2061, norm(output): 0.3340, norm(x): 0.2766, norm(y): 1.0085, norm:1.2334, tok/sec: 143088.03, flops:111.44, batch-reuse:1
@ 1042 train 5.3325 , allloss: 5.3348, dt: 909.45ms, fracRes: 0.1115, norm(attn): 0.2080, norm(output): 0.3359, norm(x): 0.2777, norm(y): 1.0085, norm:1.0825, tok/sec: 144121.92, flops:112.24, batch-reuse:1
@ 1043 train 5.4355 , allloss: 5.4375, dt: 894.91ms, fracRes: 0.1122, norm(attn): 0.2129, norm(output): 0.3398, norm(x): 0.2782, norm(y): 1.0086, norm:1.4233, tok/sec: 146464.38, flops:114.07, batch-reuse:1
@ 1044 train 5.4254 , allloss: 5.4270, dt: 907.30ms, fracRes: 0.1061, norm(attn): 0.2109, norm(output): 0.3418, norm(x): 0.2829, norm(y): 1.0085, norm:1.4196, tok/sec: 144463.34, flops:112.51, batch-reuse:1
@ 1045 train 5.4371 , allloss: 5.4386, dt: 894.03ms, fracRes: 0.1070, norm(attn): 0.2070, norm(output): 0.3418, norm(x): 0.2823, norm(y): 1.0085, norm:0.9592, tok/sec: 146608.39, flops:114.18, batch-reuse:1
@ 1046 train 5.4100 , allloss: 5.4115, dt: 895.73ms, fracRes: 0.1052, norm(attn): 0.2070, norm(output): 0.3418, norm(x): 0.2836, norm(y): 1.0085, norm:1.1233, tok/sec: 146329.65, flops:113.96, batch-reuse:1
@ 1047 train 5.3494 , allloss: 5.3511, dt: 899.48ms, fracRes: 0.1055, norm(attn): 0.2070, norm(output): 0.3438, norm(x): 0.2837, norm(y): 1.0085, norm:1.0697, tok/sec: 145719.73, flops:113.49, batch-reuse:1
@ 1048 train 5.3848 , allloss: 5.3861, dt: 892.75ms, fracRes: 0.1104, norm(attn): 0.2070, norm(output): 0.3438, norm(x): 0.2845, norm(y): 1.0087, norm:1.0957, tok/sec: 146818.21, flops:114.34, batch-reuse:1
@ 1049 train 5.3249 , allloss: 5.3267, dt: 907.34ms, fracRes: 0.1126, norm(attn): 0.2100, norm(output): 0.3418, norm(x): 0.2830, norm(y): 1.0086, norm:1.1273, tok/sec: 144457.23, flops:112.50, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4980, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.1318, 0.0284, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.1748, 0.3262, 0.1699, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.4102, 0.1270, 0.3008, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0605, 0.2891, 0.4043, 0.1436, 0.0669, 0.0354, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0212, 0.0781, 0.7812, 0.0811, 0.0183, 0.0103, 0.0112, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0039, 0.3145, 0.0437, 0.1245, 0.0312, 0.1050, 0.2852, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.3984, 0.0217, 0.0801, 0.0342, 0.0767, 0.1099, 0.1465, 0.0505, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.0432, 0.4473, 0.0698, 0.0698, 0.0298, 0.0339, 0.0540, 0.1318, 0.0552, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0188, 0.7539, 0.0228, 0.0693, 0.0129, 0.0342, 0.0239, 0.0076, 0.0275, 0.0171, 0.0141, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.0170, 0.0051, 0.0087, 0.0334, 0.1475, 0.2021, 0.3184, 0.0032, 0.1396, 0.0125, 0.0095, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.0036, 0.1260, 0.0237, 0.0874, 0.0518, 0.0820, 0.2168, 0.0231, 0.1289, 0.0645, 0.0718, 0.0183, 0.0000, 0.0000],
        [0.0476, 0.2812, 0.0097, 0.0835, 0.0275, 0.0610, 0.0649, 0.0398, 0.0486, 0.0256, 0.0264, 0.0835, 0.1465, 0.0540, 0.0000],
        [0.0613, 0.1299, 0.0337, 0.0454, 0.0347, 0.0527, 0.0466, 0.1152, 0.0197, 0.0366, 0.0167, 0.1426, 0.1719, 0.0337, 0.0596]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0088,  0.0067, -0.0361,  ...,  0.0260,  0.0034, -0.0384],
        [-0.0529,  0.0128,  0.0201,  ..., -0.0457, -0.0029,  0.0054],
        [-0.0020,  0.0216,  0.0147,  ..., -0.0150,  0.0017,  0.0121],
        ...,
        [ 0.0020, -0.0073,  0.0059,  ..., -0.0072,  0.0105,  0.0030],
        [ 0.0102,  0.0368,  0.0018,  ...,  0.0185, -0.0169, -0.0448],
        [ 0.0113, -0.0300,  0.0474,  ...,  0.0008,  0.0264,  0.0452]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2354, -0.5742, -0.0234, -1.1016, -0.2930,  0.1299,  0.1592,  0.1611, -0.2930, -0.3262, -0.5352,  0.5664,  0.3438, -0.7773,  0.4375, -0.4883, -0.4805, -0.9922,  0.1416,  0.8555,  0.4473, -0.1602, -0.7344,  0.1855, -1.0938, -0.2520, -1.0078, -0.0698,  0.8984,  0.6797, -0.6914, -0.4961,
         0.6641, -0.1660,  0.0144, -0.5117,  0.7188, -0.4219,  0.2930,  1.1094, -0.5039, -0.1260, -0.4434, -0.6055, -1.3047,  0.0061,  1.0781, -0.7266, -0.1787, -0.2051,  0.4941, -0.3184,  0.0859, -0.8242,  0.2695,  0.5664,  0.2773,  0.1729, -0.1455, -0.5703,  1.3906,  0.2754,  0.5430,  0.6758],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0368, -0.0186,  0.0009,  ...,  0.0073,  0.0136, -0.0059],
        [ 0.0097, -0.0017, -0.0097,  ..., -0.0019, -0.0248, -0.0446],
        [ 0.0088,  0.0135, -0.0157,  ...,  0.0323,  0.0035, -0.0223],
        ...,
        [ 0.0271,  0.0443, -0.0129,  ...,  0.0315, -0.0093, -0.0251],
        [ 0.0356, -0.0263, -0.0323,  ..., -0.0174,  0.0062,  0.0206],
        [ 0.0160,  0.0325, -0.0274,  ..., -0.0196, -0.0437, -0.0390]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0762, -0.2158, -0.0415, -1.0859,  0.0571,  1.2344, -1.3359,  0.5859,  1.2266,  0.2041, -0.0065, -0.1826, -0.5820,  0.0459, -1.0469,  0.7891,  0.3398, -0.5273,  1.3594, -0.2031, -0.0688,  0.7031,  0.8086,  0.3984,  0.0581, -0.6445,  1.3750, -0.4492, -0.8047,  0.4316, -0.3711,  0.4277,
        -0.2793, -0.1572,  1.1797, -0.4531,  0.5312, -1.0781, -0.9375, -0.9180,  0.4375, -0.3496,  0.0513,  0.6289, -0.8164,  0.5742, -0.5938,  0.3359, -0.7812, -1.7031,  1.2109,  0.5391,  0.3691, -0.7227,  0.3691,  0.4355,  0.4551, -0.2891,  0.5625, -0.3086,  0.5625, -0.3438,  0.3145, -0.2637],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0041,  1.2812,  1.2969,  0.7070,  0.0879, -0.5859, -0.7461,  2.0625, -0.3770,  1.4375,  1.2109, -0.4219,  1.9453,  0.1953],
        [ 0.0000, -1.8594, -3.3906, -2.7188, -0.7773, -0.0586,  0.4414,  1.3594, -2.9062,  0.4277, -1.8047, -2.7031, -0.6172, -2.7031,  0.2090],
        [ 0.0000, -0.6367, -0.0131, -0.6602, -0.8594, -0.7422,  0.3809,  0.5586, -0.4512, -0.4062, -0.6797, -0.8516, -0.2129, -0.9727, -0.0317],
        [ 0.0000,  1.7812,  0.6133,  1.4766,  0.2930,  0.3750, -0.0216, -0.3398,  1.5781, -0.5625,  0.1934,  0.9414,  0.5117,  1.7969, -0.0640],
        [ 0.0000,  1.5625,  1.8984,  0.8633,  0.1025, -0.5352, -0.7031, -0.1621,  0.8906, -0.1973,  0.5781,  2.1250,  0.9180,  1.3594, -0.3516],
        [ 0.0000,  1.2969,  3.5938,  1.3359, -0.1523, -0.7227, -0.6367, -0.2852,  1.9141, -0.5156,  0.8125,  2.0312,  1.0469,  1.9375, -0.0801],
        [ 0.0000, -3.1719,  1.2266, -0.7461,  0.3008, -1.0781,  0.1289,  1.1250, -0.9688, -0.0220, -0.3828, -0.2002, -0.6484, -0.9883, -0.6680],
        [ 0.0000,  1.6016, -1.3125, -0.0049, -0.8594, -0.0513,  0.3105,  0.5977, -0.4668, -0.2207, -0.9297,  0.2363,  0.7266, -0.1108,  0.4238],
        [ 0.0000, -0.4121,  1.9297,  0.0684,  0.0698, -0.7812, -0.6523, -0.1865,  0.7070, -0.1660,  0.8125,  0.9766, -0.1611,  0.6914,  0.1040],
        [ 0.0000,  3.6875,  0.1934,  1.3047, -0.3730,  0.5938,  0.2373, -0.9023,  0.3770, -0.0996, -0.2910,  0.5938,  1.8984,  1.1797,  1.0625],
        [ 0.0000, -1.8125, -3.0156, -2.4844, -1.1406,  0.3418,  0.6562,  1.1094, -3.4844,  0.2891, -2.1250, -2.4062, -0.8281, -3.2500,  0.2559],
        [ 0.0000, -3.3438,  0.2031, -1.4688, -0.1631, -0.6836, -0.2266,  0.7461, -1.4922,  0.2305, -0.4688, -0.3613, -1.7188, -1.1719, -1.0547],
        [ 0.0000,  1.7734, -1.5938,  0.5625, -0.5508,  0.2480,  0.3086, -0.1787,  0.0176, -0.6172, -0.5898,  0.5586,  1.1250,  0.1230,  0.6953],
        [ 0.0000,  0.7539, -0.6016, -0.3008, -0.5703, -0.1494, -0.2715,  0.6328, -1.1328, -0.5156, -1.2969,  0.8438,  1.0312, -0.5977, -0.0281]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5301],
        [0.7743],
        [0.4886],
        [0.1675],
        [0.0979],
        [0.0378],
        [0.1101],
        [0.0808],
        [0.0798],
        [0.0442],
        [0.1195],
        [0.0708],
        [0.0599],
        [0.0641]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9922, 0.0081, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7656, 0.0176, 0.2158, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.0068, 0.3828, 0.2090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2500, 0.0034, 0.7148, 0.0261, 0.0077, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3359, 0.0087, 0.5039, 0.1138, 0.0217, 0.0170, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.0042, 0.6602, 0.0942, 0.0128, 0.0098, 0.0150, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.0112, 0.1455, 0.3438, 0.1953, 0.0205, 0.0231, 0.0742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.0017, 0.6562, 0.0129, 0.0027, 0.0070, 0.0125, 0.0247, 0.0034, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5273, 0.0014, 0.2891, 0.0322, 0.0058, 0.0031, 0.0090, 0.0796, 0.0091, 0.0413, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.0054, 0.5547, 0.0459, 0.0211, 0.0248, 0.0211, 0.0718, 0.0134, 0.0923, 0.0064, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2832, 0.0046, 0.2188, 0.0669, 0.0110, 0.0095, 0.0139, 0.1118, 0.0184, 0.0801, 0.0070, 0.1738, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.0069, 0.0613, 0.1289, 0.0737, 0.0086, 0.0103, 0.0256, 0.0247, 0.2148, 0.0371, 0.1543, 0.1201, 0.0000, 0.0000],
        [0.1777, 0.0016, 0.4941, 0.0156, 0.0041, 0.0074, 0.0103, 0.0187, 0.0038, 0.0217, 0.0027, 0.2090, 0.0302, 0.0037, 0.0000],
        [0.1416, 0.0024, 0.1533, 0.0209, 0.0043, 0.0097, 0.0234, 0.1299, 0.0146, 0.0688, 0.0042, 0.1992, 0.1807, 0.0104, 0.0369]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0273,     -0.0253,      0.0203,  ...,      0.0200,     -0.0224,     -0.0181],
        [     0.0118,     -0.0016,      0.0212,  ...,     -0.0199,      0.0063,     -0.0042],
        [    -0.0001,      0.0554,      0.0212,  ...,     -0.0371,     -0.0143,      0.0123],
        ...,
        [     0.0216,     -0.0276,     -0.0128,  ...,      0.0355,      0.0150,      0.0375],
        [     0.0298,      0.0162,      0.0274,  ...,     -0.0149,      0.0200,     -0.0017],
        [     0.0087,     -0.0350,     -0.0227,  ...,      0.0442,     -0.0080,      0.0197]], device='cuda:0', requires_grad=True)
K: tensor([ 1.0312, -0.6719,  0.1611, -0.1885, -1.0703, -0.6250,  0.4434,  2.0312, -0.0581, -0.7617,  0.5664, -0.8867, -1.3359,  0.5078, -0.2598, -0.7422, -0.0347,  0.1152, -0.2617, -0.0830, -0.3516,  0.4180,  1.2812, -0.2119,  0.6992, -1.2188, -1.4688, -0.1865,  0.4922,  0.2217,  0.0703, -0.5781,
        -1.9688, -1.5078,  1.0781,  0.2969, -0.1040,  0.5898,  0.7109,  0.6328, -0.6250, -0.8594,  1.1719, -0.3477, -0.2793,  0.9180,  0.8555,  0.4453, -1.0156,  0.1055, -0.1514,  0.3027, -0.2754, -0.1260, -0.1777,  0.0742,  1.0156, -0.4766, -0.5703,  0.1836,  0.0150, -0.6758,  0.5781, -1.3359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0146,  0.0189,  0.0202,  ..., -0.0334,  0.0204,  0.0093],
        [ 0.0182, -0.0024, -0.0120,  ...,  0.0120, -0.0340, -0.0260],
        [ 0.0206,  0.0193, -0.0136,  ...,  0.0564,  0.0128, -0.0116],
        ...,
        [-0.0313,  0.0093,  0.0032,  ..., -0.0363, -0.0007, -0.0584],
        [-0.0193, -0.0144,  0.0047,  ...,  0.0494, -0.0432,  0.0279],
        [-0.0050,  0.0233, -0.0103,  ..., -0.0750,  0.0079, -0.0154]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.0000,  0.1572,  1.4531,  0.3164,  1.3359, -0.1128, -2.1875, -0.6055,  1.2344,  0.5742, -0.3105,  0.2578,  0.4453, -0.5039, -0.2734, -1.0312,  0.8008,  0.4297,  0.7305,  0.7617,  0.8672,  0.3164, -0.6445,  0.5117, -0.6094,  0.9336, -0.0962, -0.1177,  0.1338,  0.3477, -0.7852, -0.6680,
         1.0781, -0.3086, -2.0938, -0.7812,  0.6133, -0.5703, -0.2285,  0.4277, -1.5000,  0.1484,  0.2578,  0.4473, -1.6328, -1.1406,  0.4570, -1.5703,  0.0486,  1.5625,  0.6172,  0.8398, -0.6328,  0.3008,  0.5039, -1.0703,  0.0289,  0.5117,  1.1875, -0.9766,  1.5469, -0.0427, -1.8281, -0.0583],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -4.8125,      0.0049,     -2.1406,     -3.0156,     -3.5000,     -2.6094,     -2.0938,     -3.4844,     -1.8359,     -3.8750,      0.0659,     -0.5195,     -3.7969,     -0.6055],
        [     0.0000,     -3.7812,     -1.2656,     -1.2578,     -2.9062,     -3.2031,     -2.5625,     -0.5859,     -2.4375,     -0.9648,     -3.7344,     -0.9609,      0.3828,     -2.5625,     -2.5781],
        [     0.0000,     -4.0938,     -0.0466,     -0.6523,     -1.8984,     -3.0312,     -2.4062,     -0.9922,     -2.3438,     -0.4395,     -3.2344,      0.4629,      0.8711,     -2.5938,     -1.1328],
        [     0.0000,     -4.2812,      1.0469,     -2.2656,     -3.4688,     -2.7500,     -2.2188,     -1.6562,     -3.3750,     -1.7109,     -3.7500,      0.2949,     -1.4766,     -3.5625,     -0.8086],
        [     0.0000,     -3.6562,      0.4023,     -1.0859,     -2.7344,     -2.9844,     -1.8828,     -0.8555,     -2.5938,     -0.9688,     -2.9062,      0.5703,     -0.2178,     -2.8750,     -0.6953],
        [     0.0000,     -3.8906,      1.1641,     -0.7773,     -2.7656,     -3.0469,     -2.6094,     -0.9219,     -2.8281,     -0.3223,     -3.3906,      1.1719,     -0.5703,     -3.1406,     -0.6641],
        [     0.0000,     -2.8125,     -0.2490,      0.6133,      0.0449,     -2.2031,     -2.0938,     -0.9180,     -1.4531,      1.1719,     -1.1797,      0.9805,      0.6875,     -1.8359,     -0.5508],
        [     0.0000,     -5.1250,      0.8516,     -3.0781,     -4.6562,     -3.6875,     -3.1094,     -2.4219,     -4.4062,     -2.8750,     -4.8125,     -0.2734,     -2.0781,     -4.2500,     -1.3516],
        [     0.0000,     -5.9688,     -0.6016,     -2.7969,     -4.5000,     -5.1562,     -4.0625,     -1.8906,     -4.0625,     -2.5469,     -5.2188,     -0.5703,     -0.9883,     -4.0000,     -2.5781],
        [     0.0000,     -3.2812,      1.3438,     -1.1484,     -1.9219,     -1.7656,     -1.9219,     -0.6953,     -2.3750,     -0.4453,     -3.1094,      1.5391,     -0.0605,     -2.5625,     -0.0811],
        [     0.0000,     -4.1250,     -0.2598,     -1.4453,     -3.2500,     -3.4062,     -3.0156,     -0.9297,     -2.7344,     -1.2656,     -3.7031,     -0.4863,      0.1826,     -2.6562,     -2.0938],
        [     0.0000,     -2.9688,     -0.7852,     -0.0459,     -0.6055,     -2.7500,     -2.5625,     -1.6562,     -1.6953,      0.4688,     -1.2891,      0.1367,     -0.1147,     -1.9766,     -0.6172],
        [     0.0000,     -4.6875,      1.0234,     -2.4375,     -3.7812,     -3.1875,     -2.8594,     -2.2500,     -3.8438,     -2.1094,     -4.1562,      0.1621,     -1.7734,     -3.8750,     -0.6094],
        [     0.0000,     -4.0938,      0.0806,     -1.9141,     -3.4844,     -2.6719,     -1.7969,     -0.0840,     -2.2656,     -0.7227,     -3.5156,      0.3438,      0.2432,     -2.6094,     -1.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7055],
        [0.8245],
        [0.6245],
        [0.4905],
        [0.5015],
        [0.4843],
        [0.4535],
        [0.4608],
        [0.7008],
        [0.4834],
        [0.6983],
        [0.4928],
        [0.4273],
        [0.5160]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0021,     0.0021,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0016,     0.0194,     0.0029,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0008,     0.0052,     0.0024,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0004,     0.0078,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0004,     0.0075,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0079, -0.0494, -0.0319,  ...,  0.0072, -0.0103,  0.0219],
        [ 0.0181, -0.0021,  0.0160,  ...,  0.0046, -0.0086, -0.0451],
        [ 0.0164,  0.0347, -0.0185,  ..., -0.0149,  0.0263,  0.0572],
        ...,
        [ 0.0423, -0.0172, -0.0463,  ...,  0.0048, -0.0099,  0.0307],
        [ 0.0052,  0.0650,  0.0110,  ...,  0.0097,  0.0047, -0.0419],
        [-0.0439, -0.0266, -0.0158,  ...,  0.0267,  0.0126,  0.0302]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3906, -1.7734, -1.8906,  1.6641, -1.3516,  2.2500,  1.9609,  1.8359,  1.2266,  1.3672, -1.3281,  1.5156,  2.1250, -2.0625,  1.0312, -2.1875, -2.2344, -0.8828, -1.9922,  1.3672, -2.6875,  2.0156, -2.0156,  2.3594, -2.7500, -2.2500, -1.5781,  1.5625, -1.4375, -1.5547,  2.5156, -2.0625,
        -1.9141, -0.1445, -2.4219,  0.4492,  2.0938,  1.5234,  2.5156, -1.2578, -1.6562,  1.2812, -2.5312, -1.6797,  1.2031, -2.0156, -1.3281,  1.8516,  1.7891, -0.7188,  0.2197,  1.7031, -1.7891, -1.8516, -0.9453,  1.2422, -3.1250,  1.4844, -0.9570, -2.4062,  1.2578, -1.6953,  1.3047, -1.1328],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0445,  0.0140,  0.0168,  ...,  0.0004,  0.0081, -0.0155],
        [ 0.0020, -0.0496, -0.0179,  ..., -0.0149, -0.0220,  0.0095],
        [ 0.0552,  0.0218,  0.0243,  ...,  0.0332,  0.0118, -0.0729],
        ...,
        [-0.0023,  0.0325,  0.0091,  ...,  0.0046,  0.0036, -0.0247],
        [ 0.0082, -0.0525,  0.0031,  ...,  0.0368, -0.0186, -0.0226],
        [ 0.0120,  0.0020,  0.0569,  ..., -0.0045,  0.0213, -0.0595]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5898,  0.7930,  1.2109, -1.0781,  0.5391, -1.9297, -1.4688, -1.2734, -2.0938,  0.0422,  0.3496, -1.2422, -1.7031,  3.0156, -0.7148,  1.5938,  2.6250,  0.9453,  0.8711, -0.5078,  2.8125, -1.7344,  1.1875, -1.2031,  2.1250,  2.0625,  1.8203, -1.7500,  1.2812,  1.2188, -2.4531,  0.6016,
         1.4062,  1.0312,  1.7891, -1.0703, -2.2344, -0.1406, -2.5625,  1.0312,  1.7812, -0.8945,  2.1719,  1.2656, -0.9102,  1.2266,  1.1719, -1.2812, -0.9961,  0.5508, -1.0156, -2.4844,  0.3496,  2.2656,  1.8672, -1.1094,  1.3047, -1.3984,  1.7188,  1.2344, -1.0312,  1.3438, -0.9102,  1.5000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.5625,  -6.3438,  -6.8125,  -9.8750,  -8.8125,  -9.4375,  -9.8750, -10.2500, -10.0000, -11.8750,  -8.8750,  -9.8125, -10.6250,  -9.5000],
        [  0.0000, -13.1250, -13.6250, -11.9375, -18.0000, -15.3125, -16.8750, -17.6250, -17.3750, -18.7500, -20.6250, -17.1250, -17.8750, -18.1250, -18.6250],
        [  0.0000,  -6.1875,  -6.1250,  -5.9688,  -7.6250,  -7.4375,  -8.0625,  -7.7500,  -7.7500,  -8.4375,  -9.1875,  -8.0625,  -7.7188,  -7.9688,  -8.5625],
        [  0.0000,  -6.4062,  -3.9219,  -5.8438,  -9.1250,  -8.6250,  -9.3125,  -9.3125,  -9.8750,  -7.9688, -11.1250,  -7.1875,  -8.8750, -10.2500,  -7.8438],
        [  0.0000,  -7.0938,  -5.2500,  -6.0312,  -9.9375,  -9.0000,  -9.6250,  -9.3125, -10.1250,  -9.2500, -11.7500,  -8.1250,  -9.4375, -10.5625,  -9.1875],
        [  0.0000, -13.1250, -10.6250, -11.3125, -18.1250, -16.2500, -18.1250, -17.5000, -18.2500, -17.0000, -21.3750, -15.8125, -17.3750, -19.1250, -17.7500],
        [  0.0000, -11.5000, -10.8125, -10.2500, -15.2500, -13.3750, -15.7500, -16.1250, -15.4375, -16.1250, -18.0000, -14.6875, -15.5625, -16.0000, -16.1250],
        [  0.0000,  -7.9062,  -4.8438,  -7.1562, -11.0625, -10.0000, -11.3750, -10.8125, -11.8125,  -9.8125, -13.3125,  -8.8125, -10.5000, -12.2500,  -9.7500],
        [  0.0000, -14.3750, -14.0625, -13.8750, -20.0000, -17.6250, -19.3750, -19.3750, -19.7500, -21.0000, -23.2500, -18.8750, -19.6250, -20.6250, -20.5000],
        [  0.0000, -10.3750,  -7.7188,  -9.1250, -14.1875, -12.8125, -14.2500, -13.5000, -15.0000, -13.3125, -17.1250, -12.2500, -13.3125, -15.5000, -13.6250],
        [  0.0000, -15.7500, -14.7500, -14.3750, -21.3750, -18.6250, -20.2500, -21.1250, -21.5000, -21.6250, -25.1250, -19.8750, -21.2500, -22.3750, -21.2500],
        [  0.0000, -12.5000, -11.1250, -10.8750, -17.2500, -14.6875, -16.7500, -16.7500, -17.0000, -17.1250, -19.2500, -15.5625, -17.0000, -17.7500, -17.1250],
        [  0.0000,  -7.9062,  -4.8750,  -7.1250, -11.0000, -10.0625, -11.3750, -10.8750, -11.8750,  -9.8750, -13.3750,  -8.8125, -10.5625, -12.3125,  -9.8125],
        [  0.0000, -14.5625, -12.6875, -12.8125, -20.1250, -17.8750, -19.5000, -18.7500, -19.8750, -19.5000, -23.6250, -17.7500, -19.2500, -20.7500, -20.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7747],
        [0.6297],
        [0.6378],
        [0.5763],
        [0.5132],
        [0.6996],
        [0.7124],
        [0.5895],
        [0.6043],
        [0.6310],
        [0.5589],
        [0.6046],
        [0.5369],
        [0.5316]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1582,     0.8398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1050,     0.3887,     0.5078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0250,     0.0388,     0.0284,     0.9062,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0825,     0.3164,     0.3535,     0.1230,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1611,     0.2500,     0.2266,     0.1807,     0.0938,     0.0869,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2793,     0.2715,     0.0248,     0.1089,     0.2480,     0.0262,     0.0403,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2217,     0.1182,     0.0085,     0.0664,     0.2217,     0.0598,     0.1030,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0591,     0.0840,     0.0240,     0.0267,     0.0361,     0.0452,     0.1245,     0.5195,     0.0796,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0938,     0.0206,     0.0096,     0.0354,     0.0125,     0.0231,     0.0491,     0.4609,     0.2070,     0.0884,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4766,     0.0708,     0.0030,     0.0128,     0.0286,     0.0114,     0.0139,     0.1924,     0.1699,     0.0120,     0.0086,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.0076,     0.0080,     0.4746,     0.0118,     0.0104,     0.0275,     0.3086,     0.0123,     0.0101,     0.0918,     0.0354,     0.0000,     0.0000,     0.0000],
        [    0.1934,     0.0747,     0.0075,     0.0161,     0.0498,     0.0322,     0.0435,     0.0522,     0.1299,     0.0115,     0.0151,     0.0540,     0.3203,     0.0000,     0.0000],
        [    0.0679,     0.0295,     0.0055,     0.0082,     0.0159,     0.0115,     0.0249,     0.1309,     0.0361,     0.0074,     0.0010,     0.0413,     0.5781,     0.0425,     0.0000],
        [    0.1230,     0.0425,     0.0069,     0.1777,     0.0649,     0.0088,     0.0165,     0.0525,     0.0464,     0.0056,     0.0267,     0.0469,     0.1084,     0.1069,     0.1660]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0120, -0.0067,  0.0213,  ...,  0.0181, -0.0062,  0.0624],
        [-0.0191, -0.0311, -0.0037,  ..., -0.0015,  0.0075, -0.0122],
        [ 0.0025, -0.0045,  0.0070,  ..., -0.0043,  0.0077,  0.0026],
        ...,
        [-0.0284,  0.0048,  0.0114,  ...,  0.0075,  0.0315,  0.0357],
        [ 0.0094, -0.0299,  0.0213,  ...,  0.0194, -0.0095, -0.0561],
        [-0.0163, -0.0007, -0.0513,  ..., -0.0393, -0.0069, -0.0694]], device='cuda:0', requires_grad=True)
K: tensor([-2.2500, -1.7031,  0.5078,  0.0228, -0.5898,  0.9844, -0.7812, -0.0447, -1.4219, -0.9883,  0.8398,  0.9531,  1.4062,  0.2090, -0.2891, -1.0391, -0.6172,  0.0535, -0.4355,  0.3262,  0.0957, -1.0547,  0.2158, -1.3359, -1.1406,  1.4062,  2.0469, -1.3203, -1.2188, -2.0938,  1.0078, -1.9453,
         0.3027,  1.4297,  2.1719, -0.7734, -0.1348, -0.1245, -1.4141, -1.2734, -1.3516, -0.6445,  1.8594, -0.6680, -0.2373,  0.2852,  0.2197, -0.0288,  0.8750, -0.6758, -0.6328, -0.8477,  1.2969,  1.0234, -0.1738,  0.7031,  0.5117,  0.9180,  0.9609, -0.7148, -0.0762,  2.1250,  2.4688,  0.7188],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0033,  0.0250, -0.0045,  ...,  0.0464, -0.0014,  0.0135],
        [-0.0101, -0.0093, -0.0168,  ..., -0.0056, -0.0002,  0.0093],
        [-0.0128, -0.0111, -0.0097,  ..., -0.0173, -0.0167, -0.0369],
        ...,
        [-0.0123, -0.0069, -0.0084,  ...,  0.0199, -0.0064, -0.0044],
        [-0.0011,  0.0005, -0.0138,  ...,  0.0010,  0.0220,  0.0485],
        [-0.0200,  0.0030, -0.0027,  ...,  0.0190, -0.0258,  0.0512]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5547, -1.3125, -0.1807, -0.1562,  0.0099, -0.4902, -0.2451,  0.4805,  0.5195,  0.1611,  0.9375, -0.7383, -0.5234, -1.0234, -1.3125,  0.6992, -0.3984, -0.4102, -0.3184, -0.1738,  1.8281, -1.2891,  0.1934,  0.0664, -1.6484,  0.6055,  0.3672, -1.6016, -1.1250, -0.7734,  1.8125, -0.5469,
         0.2422, -0.5039,  0.1426, -0.1108,  0.3125,  0.7969,  0.0327,  0.4570,  0.9062, -0.3516, -0.7891, -0.1113, -0.5508,  0.9961, -0.7422,  1.9609, -1.5000, -0.8281, -1.7969,  2.2969,  1.2656, -0.3984, -0.1387, -0.1816, -0.7461,  0.5469, -2.4062,  2.3125, -0.5742, -0.4199, -1.5156,  0.3223],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.6719,      1.6484,      2.9062,      0.9219,      0.3516,      1.5234,      0.8008,      0.7852,     -0.6680,      1.1797,      1.4688,      0.3555,      0.8320,      1.9531],
        [     0.0000,      1.3125,      1.5703,      5.7188,      1.8594,      0.5703,      1.2031,      2.1875,     -0.1396,      0.2363,      2.8281,      2.9062,      1.7344,      0.5234,      3.3750],
        [     0.0000,      0.4375,      0.1260,      3.5938,      0.4531,     -0.5469,      0.1924,      2.6094,     -0.4258,     -0.7383,      0.2471,      2.2656,      3.0000,      0.6445,      1.1328],
        [     0.0000,      1.3438,      1.4609,      0.4023,      0.4160,      2.1094,      2.3281,      3.2344,      1.0938,      1.5391,      0.1738,      1.5312,      3.3125,      1.1172,      0.2598],
        [     0.0000,      0.4453,      0.3418,      0.1187,     -0.5391,     -0.6133,      0.2109,      0.6133,      0.4004,     -0.5430,     -1.6641,      1.0859,      0.6602,      0.2285,     -0.0055],
        [     0.0000,     -0.0327,     -2.4219,     -0.9453,     -0.1206,     -2.3750,     -1.9375,     -2.4375,     -1.1094,     -3.8594,     -3.7031,     -1.1406,     -2.0000,     -1.6328,     -1.2734],
        [     0.0000,     -0.6289,     -3.2656,     -1.2031,     -0.0014,     -1.3125,     -0.7695,     -0.1055,      0.1167,     -2.0000,     -1.7734,     -0.9688,      1.6641,      0.3125,     -0.2578],
        [     0.0000,      0.3535,     -0.8984,     -0.7930,     -0.4863,     -0.2676,      0.7500,      2.1719,      0.3027,     -0.7969,     -2.8750,      0.5859,      2.7500,      0.0129,     -0.9727],
        [     0.0000,     -1.5156,     -2.2812,     -0.9766,     -2.0156,     -1.3984,     -0.6445,      1.5938,      0.7930,     -0.0571,     -0.8086,     -0.6953,      3.4844,      1.5859,      0.3535],
        [     0.0000,     -1.9062,     -5.0938,     -3.6250,     -2.8125,     -3.7344,     -3.5312,     -0.9102,     -1.0312,     -3.6875,     -4.0000,     -2.6875,      1.3359,      0.1226,     -2.2656],
        [     0.0000,      0.9062,      0.9531,      5.0312,      1.3438,      1.2109,      2.1875,      4.5938,      1.3828,      1.1797,      3.3906,      2.4375,      5.0312,      2.5156,      3.4219],
        [     0.0000,     -0.9531,     -3.2500,     -2.4844,     -1.3594,     -1.7969,     -1.5000,     -1.3125,     -0.3984,     -2.8125,     -2.5469,     -1.2734,      0.5039,     -0.0564,     -1.0469],
        [     0.0000,     -0.8320,     -2.5156,     -2.1250,     -1.4531,     -1.7734,     -1.0078,      0.6523,     -0.6328,     -2.2188,     -4.2500,     -0.5039,      2.1406,     -0.4668,     -2.1406],
        [     0.0000,     -1.0625,     -2.8906,      0.3652,     -0.6445,     -2.6406,     -2.0156,     -0.8516,     -0.9766,     -3.0938,     -1.5234,     -0.9648,     -0.1289,     -0.1396,      0.2969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3470],
        [0.2048],
        [0.2510],
        [0.1965],
        [0.2489],
        [0.2690],
        [0.2395],
        [0.1615],
        [0.0915],
        [0.3346],
        [0.0374],
        [0.2191],
        [0.1658],
        [0.0646]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4414, 0.5586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.4668, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.0820, 0.3965, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.0854, 0.0986, 0.0723, 0.4668, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2100, 0.0608, 0.1455, 0.0864, 0.2988, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.0649, 0.0369, 0.0767, 0.1650, 0.2041, 0.2334, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2871, 0.0317, 0.0513, 0.0171, 0.2148, 0.1357, 0.1836, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0625, 0.0688, 0.0515, 0.0366, 0.1533, 0.1318, 0.1562, 0.1104, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0131, 0.0737, 0.1719, 0.0630, 0.0515, 0.0579, 0.1641, 0.2520, 0.0188, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0503, 0.0248, 0.0981, 0.0211, 0.0625, 0.0708, 0.1279, 0.0732, 0.1309, 0.2246, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0574, 0.0339, 0.0220, 0.0864, 0.0806, 0.1348, 0.0913, 0.1436, 0.2324, 0.0398, 0.0505, 0.0266, 0.0000, 0.0000, 0.0000],
        [0.0449, 0.0024, 0.0051, 0.0015, 0.0200, 0.0096, 0.0151, 0.0059, 0.8008, 0.0310, 0.0173, 0.0156, 0.0315, 0.0000, 0.0000],
        [0.0613, 0.0284, 0.0179, 0.0161, 0.1011, 0.0535, 0.0593, 0.0496, 0.1826, 0.0513, 0.0400, 0.0305, 0.0815, 0.2266, 0.0000],
        [0.0562, 0.0193, 0.0239, 0.0437, 0.0530, 0.0864, 0.0796, 0.1094, 0.1230, 0.0496, 0.0302, 0.0605, 0.1060, 0.0967, 0.0625]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0159, -0.0024, -0.0134,  ..., -0.0468, -0.0039,  0.0143],
        [-0.0229,  0.0443, -0.0015,  ...,  0.0094, -0.0207,  0.0306],
        [ 0.0164,  0.0340, -0.0088,  ...,  0.0186,  0.0272, -0.0023],
        ...,
        [ 0.0395,  0.0260, -0.0030,  ..., -0.0108,  0.0203, -0.0163],
        [ 0.0007,  0.0206,  0.0047,  ..., -0.0138,  0.0206, -0.0168],
        [-0.0542,  0.0006, -0.0289,  ..., -0.0138,  0.0185, -0.0175]], device='cuda:0', requires_grad=True)
K: tensor([-1.6953, -0.7695,  1.6328, -1.9062,  0.6641,  1.2734,  0.1895,  0.0337, -0.6602,  0.0481, -0.2617,  0.8633, -0.8477,  0.0381, -0.6445, -1.0859, -1.3672, -1.0547,  0.5703,  0.2852,  0.2080, -0.3145,  0.4004, -0.7656, -0.8008, -0.7383, -0.6914,  0.3848, -1.0781, -0.8320, -1.2031, -1.5469,
         0.5234, -1.1797, -0.3379, -0.7109,  0.0552, -0.8359, -0.2910, -0.8984,  1.0625,  0.4434,  0.6875,  0.6562,  0.4277,  1.2969, -0.2539,  2.0938, -1.1172, -1.3281,  0.9414,  0.8984,  0.2275, -0.9297, -0.0299, -1.5859,  1.5547,  0.8164, -1.8672,  0.7539,  0.1152, -0.2910,  1.4688, -0.4902],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0006,  0.0060, -0.0035,  ...,  0.0125,  0.0152,  0.0202],
        [ 0.0616,  0.0151,  0.0440,  ..., -0.0418, -0.0074,  0.0205],
        [-0.0181, -0.0384,  0.0173,  ..., -0.0131,  0.0151,  0.0327],
        ...,
        [-0.0248, -0.0024,  0.0126,  ...,  0.0251,  0.0087, -0.0104],
        [ 0.0130, -0.0259, -0.0171,  ...,  0.0029,  0.0143, -0.0089],
        [-0.0143,  0.0234,  0.0098,  ...,  0.0170, -0.0267, -0.0061]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1855,  0.0483, -0.3730,  0.2217,  0.7266, -0.0840,  0.9102, -1.0703,  0.2891,  0.4160,  0.7070,  0.0625,  0.2021, -0.7617, -1.0156, -1.3359, -0.2578, -0.4316,  0.5156,  0.5195, -1.0000,  1.5000, -0.2207, -0.1621,  0.1289,  1.0703,  0.1191, -0.1924, -0.4648,  0.1367,  0.3496, -0.4277,
        -0.1016,  0.1309, -0.4453, -1.5234, -1.0703, -0.0045,  1.2891,  0.8906, -0.6016,  1.1016, -0.3848,  0.2930,  1.4531,  0.1768,  0.3301, -0.1260,  0.6523,  0.7734, -1.3828,  0.3809,  0.6016,  0.0154, -1.6953,  0.3613, -0.8906,  0.5352, -0.6250,  0.2314, -0.5195,  0.4062,  1.3516, -0.3711],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2314,  0.0271, -0.1602,  1.5391,  0.9258,  0.6562,  1.0625,  2.6562, -0.3027, -0.9258, -0.2197,  0.5391,  1.9375,  0.0254],
        [ 0.0000,  0.7188,  0.3047,  2.1094,  1.5000,  1.9062,  0.9336,  2.1250,  0.8672,  0.3809,  1.2734,  0.1089,  1.2891,  0.1924,  0.5625],
        [ 0.0000, -0.4766,  1.1016,  1.0859,  1.9375,  1.4922,  1.0469,  1.6484,  2.9531,  0.9414,  0.6641,  0.7891,  1.2578,  2.2969,  0.9727],
        [ 0.0000, -1.1719, -1.0312, -1.3438,  0.5234,  0.5469,  0.1641, -0.7383,  2.2656, -0.6602, -1.3047, -0.4668, -0.2695,  1.7031, -0.9531],
        [ 0.0000, -1.2422, -0.3652, -0.8867,  0.3516, -0.0593, -0.0664, -0.0359,  3.7656,  0.3809, -0.2734, -0.0408,  0.1641,  3.1250,  0.3145],
        [ 0.0000, -1.2188, -1.7812, -1.0469, -0.2852, -0.0728,  0.0645, -0.4375,  2.3750, -1.3203, -1.5391, -1.0234, -0.7500,  1.3672, -0.7422],
        [ 0.0000, -2.2031, -1.7188, -2.8125, -0.2871, -0.7461, -0.4453, -1.2891,  3.9531, -0.5898, -0.8945, -1.1016, -0.7500,  3.5469, -0.8477],
        [ 0.0000,  0.0962, -0.1973, -0.5352,  0.8906,  0.7422,  0.9102,  0.5625,  1.2969,  0.0781, -0.5312, -0.4902,  0.1045,  0.7188,  0.0233],
        [ 0.0000,  1.7266,  2.5781,  1.5625,  1.3672,  1.4844,  2.5312,  2.9531,  0.3574,  2.3281,  1.5156,  2.3125,  2.2500,  0.7656,  2.0312],
        [ 0.0000, -0.7070,  0.6680, -0.8711,  0.2158,  0.3379,  0.9336,  0.3750,  0.9570,  1.4922,  0.8320,  1.3516,  0.7930,  1.6562,  1.4688],
        [ 0.0000, -0.5273, -0.9609,  0.4102,  0.3379,  0.8555,  0.4648,  0.9180,  1.3984, -0.3691, -0.1270, -0.7734,  0.6602,  0.8750, -0.8008],
        [ 0.0000, -2.9531, -2.1719, -3.4375, -0.8125, -1.5469, -1.0938, -2.0312,  2.8750, -0.3730, -0.9531, -1.0625, -0.3555,  3.5938, -1.0781],
        [ 0.0000, -0.7695, -1.2344, -1.3359,  0.5000, -0.1367, -0.0327, -0.2148,  1.0859, -0.1807, -0.4277, -0.6992,  0.2832,  1.3047, -0.4688],
        [ 0.0000, -1.0703, -0.8516, -0.2520, -0.0559,  0.4297,  0.3477,  0.6680,  0.7852, -0.1240, -0.6211,  0.0767,  0.6328,  0.5430,  0.1108]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2531],
        [0.1545],
        [0.2083],
        [0.2034],
        [0.1065],
        [0.0707],
        [0.1534],
        [0.1042],
        [0.1438],
        [0.0423],
        [0.0532],
        [0.1579],
        [0.1074],
        [0.0509]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(?:0.0559 a:0.0791-:0.0486 and:0.1162als:0.3008,:0.1309 a:0.0884
:0.0889)


------
		( a:0.0791-:0.0486 and:0.1162als:0.3008,:0.1309 a:0.0884
:0.0889-:0.0933)
- The most common source of the most common in the world.
-
@ 1050 train 5.3966 , allloss: 5.3985, dt: 1258.66ms, fracRes: 0.1090, norm(attn): 0.2041, norm(output): 0.3438, norm(x): 0.2844, norm(y): 1.0085, norm:1.0666, tok/sec: 104136.16, flops:81.10, batch-reuse:1
@ 1051 train 5.3531 , allloss: 5.3565, dt: 916.47ms, fracRes: 0.1042, norm(attn): 0.2119, norm(output): 0.3438, norm(x): 0.2848, norm(y): 1.0084, norm:1.2208, tok/sec: 143018.94, flops:111.38, batch-reuse:1
@ 1052 train 5.3602 , allloss: 5.3616, dt: 917.45ms, fracRes: 0.1062, norm(attn): 0.2051, norm(output): 0.3438, norm(x): 0.2834, norm(y): 1.0085, norm:0.9400, tok/sec: 142865.00, flops:111.26, batch-reuse:1
@ 1053 train 5.3691 , allloss: 5.3706, dt: 908.32ms, fracRes: 0.1111, norm(attn): 0.2080, norm(output): 0.3438, norm(x): 0.2863, norm(y): 1.0086, norm:1.2685, tok/sec: 144301.20, flops:112.38, batch-reuse:1
@ 1054 train 5.3407 , allloss: 5.3423, dt: 920.08ms, fracRes: 0.1165, norm(attn): 0.2080, norm(output): 0.3438, norm(x): 0.2839, norm(y): 1.0087, norm:1.1017, tok/sec: 142456.63, flops:110.95, batch-reuse:1
@ 1055 train 5.3271 , allloss: 5.3287, dt: 919.40ms, fracRes: 0.1137, norm(attn): 0.2090, norm(output): 0.3438, norm(x): 0.2843, norm(y): 1.0087, norm:1.0098, tok/sec: 142562.84, flops:111.03, batch-reuse:1
@ 1056 train 5.3379 , allloss: 5.3397, dt: 911.78ms, fracRes: 0.1093, norm(attn): 0.2109, norm(output): 0.3457, norm(x): 0.2876, norm(y): 1.0085, norm:1.1236, tok/sec: 143754.11, flops:111.96, batch-reuse:1
@ 1057 train 5.3672 , allloss: 5.3689, dt: 893.23ms, fracRes: 0.1108, norm(attn): 0.2051, norm(output): 0.3438, norm(x): 0.2868, norm(y): 1.0086, norm:1.1919, tok/sec: 146739.96, flops:114.28, batch-reuse:1
@ 1058 train 5.3945 , allloss: 5.3960, dt: 903.06ms, fracRes: 0.1116, norm(attn): 0.2041, norm(output): 0.3438, norm(x): 0.2857, norm(y): 1.0086, norm:1.1424, tok/sec: 145141.54, flops:113.04, batch-reuse:1
@ 1059 train 5.3827 , allloss: 5.3847, dt: 894.51ms, fracRes: 0.1157, norm(attn): 0.2119, norm(output): 0.3438, norm(x): 0.2848, norm(y): 1.0086, norm:1.1317, tok/sec: 146528.95, flops:114.12, batch-reuse:1
@ 1060 train 5.3998 , allloss: 5.4013, dt: 915.33ms, fracRes: 0.1191, norm(attn): 0.2109, norm(output): 0.3438, norm(x): 0.2828, norm(y): 1.0087, norm:1.0275, tok/sec: 143196.98, flops:111.52, batch-reuse:1
@ 1061 train 5.3861 , allloss: 5.3875, dt: 902.25ms, fracRes: 0.1223, norm(attn): 0.2109, norm(output): 0.3418, norm(x): 0.2817, norm(y): 1.0088, norm:0.8599, tok/sec: 145273.10, flops:113.14, batch-reuse:1
@ 1062 train 5.3163 , allloss: 5.3178, dt: 902.44ms, fracRes: 0.1185, norm(attn): 0.2129, norm(output): 0.3457, norm(x): 0.2860, norm(y): 1.0088, norm:1.1586, tok/sec: 145242.39, flops:113.12, batch-reuse:1
@ 1063 train 5.3098 , allloss: 5.3114, dt: 898.06ms, fracRes: 0.1173, norm(attn): 0.2129, norm(output): 0.3457, norm(x): 0.2881, norm(y): 1.0088, norm:1.0499, tok/sec: 145950.26, flops:113.67, batch-reuse:1
@ 1064 train 5.4236 , allloss: 5.4251, dt: 915.35ms, fracRes: 0.1140, norm(attn): 0.2148, norm(output): 0.3496, norm(x): 0.2900, norm(y): 1.0086, norm:0.9813, tok/sec: 143194.07, flops:111.52, batch-reuse:1
@ 1065 train 5.4343 , allloss: 5.4354, dt: 912.01ms, fracRes: 0.1160, norm(attn): 0.2119, norm(output): 0.3496, norm(x): 0.2910, norm(y): 1.0087, norm:1.1376, tok/sec: 143717.84, flops:111.93, batch-reuse:1
@ 1066 train 5.3820 , allloss: 5.3838, dt: 899.67ms, fracRes: 0.1212, norm(attn): 0.2168, norm(output): 0.3457, norm(x): 0.2868, norm(y): 1.0088, norm:1.1684, tok/sec: 145688.99, flops:113.46, batch-reuse:1
@ 1067 train 5.3208 , allloss: 5.3226, dt: 905.35ms, fracRes: 0.1214, norm(attn): 0.2188, norm(output): 0.3438, norm(x): 0.2863, norm(y): 1.0088, norm:1.4193, tok/sec: 144774.57, flops:112.75, batch-reuse:1
@ 1068 train 5.3491 , allloss: 5.3521, dt: 909.67ms, fracRes: 0.1214, norm(attn): 0.2148, norm(output): 0.3457, norm(x): 0.2862, norm(y): 1.0088, norm:1.0460, tok/sec: 144087.81, flops:112.22, batch-reuse:1
@ 1069 train 5.2938 , allloss: 5.2982, dt: 902.67ms, fracRes: 0.1199, norm(attn): 0.2158, norm(output): 0.3477, norm(x): 0.2876, norm(y): 1.0088, norm:1.2216, tok/sec: 145204.57, flops:113.09, batch-reuse:1
@ 1070 train 5.3129 , allloss: 5.3147, dt: 917.81ms, fracRes: 0.1165, norm(attn): 0.2178, norm(output): 0.3477, norm(x): 0.2910, norm(y): 1.0088, norm:1.2134, tok/sec: 142809.56, flops:111.22, batch-reuse:1
@ 1071 train 5.2147 , allloss: 5.2170, dt: 930.14ms, fracRes: 0.1147, norm(attn): 0.2148, norm(output): 0.3496, norm(x): 0.2916, norm(y): 1.0088, norm:1.2479, tok/sec: 140917.10, flops:109.75, batch-reuse:1
@ 1072 train 5.3222 , allloss: 5.3239, dt: 928.84ms, fracRes: 0.1210, norm(attn): 0.2129, norm(output): 0.3457, norm(x): 0.2888, norm(y): 1.0090, norm:1.1528, tok/sec: 141114.17, flops:109.90, batch-reuse:1
@ 1073 train 5.2566 , allloss: 5.2583, dt: 933.37ms, fracRes: 0.1193, norm(attn): 0.2148, norm(output): 0.3477, norm(x): 0.2915, norm(y): 1.0089, norm:1.2639, tok/sec: 140429.04, flops:109.37, batch-reuse:1
@ 1074 train 5.2416 , allloss: 5.2433, dt: 918.69ms, fracRes: 0.1168, norm(attn): 0.2188, norm(output): 0.3555, norm(x): 0.2958, norm(y): 1.0087, norm:1.3128, tok/sec: 142673.17, flops:111.11, batch-reuse:1
@ 1075 train 5.2993 , allloss: 5.3005, dt: 928.00ms, fracRes: 0.1242, norm(attn): 0.2070, norm(output): 0.3477, norm(x): 0.2910, norm(y): 1.0091, norm:1.3071, tok/sec: 141241.56, flops:110.00, batch-reuse:1
@ 1076 train 5.3638 , allloss: 5.3650, dt: 904.73ms, fracRes: 0.1267, norm(attn): 0.2070, norm(output): 0.3535, norm(x): 0.2910, norm(y): 1.0092, norm:1.1913, tok/sec: 144874.03, flops:112.83, batch-reuse:1
@ 1077 train 5.2590 , allloss: 5.2600, dt: 897.22ms, fracRes: 0.1273, norm(attn): 0.2129, norm(output): 0.3477, norm(x): 0.2872, norm(y): 1.0091, norm:1.4451, tok/sec: 146086.62, flops:113.77, batch-reuse:1
@ 1078 train 5.5619 , allloss: 5.5632, dt: 893.88ms, fracRes: 0.1234, norm(attn): 0.2090, norm(output): 0.3516, norm(x): 0.2941, norm(y): 1.0090, norm:1.9545, tok/sec: 146632.56, flops:114.20, batch-reuse:1
@ 1079 train 5.2618 , allloss: 5.2640, dt: 900.03ms, fracRes: 0.1215, norm(attn): 0.2080, norm(output): 0.3594, norm(x): 0.2969, norm(y): 1.0089, norm:1.7404, tok/sec: 145630.52, flops:113.42, batch-reuse:1
@ 1080 train 5.3633 , allloss: 5.3656, dt: 901.17ms, fracRes: 0.1239, norm(attn): 0.2090, norm(output): 0.3555, norm(x): 0.2947, norm(y): 1.0089, norm:1.5262, tok/sec: 145445.78, flops:113.27, batch-reuse:1
@ 1081 train 5.3245 , allloss: 5.3284, dt: 898.00ms, fracRes: 0.1280, norm(attn): 0.2109, norm(output): 0.3516, norm(x): 0.2915, norm(y): 1.0088, norm:1.1860, tok/sec: 145960.03, flops:113.67, batch-reuse:1
@ 1082 train 5.4962 , allloss: 5.4986, dt: 894.73ms, fracRes: 0.1377, norm(attn): 0.2100, norm(output): 0.3535, norm(x): 0.2880, norm(y): 1.0091, norm:1.2139, tok/sec: 146493.73, flops:114.09, batch-reuse:1
@ 1083 train 5.3046 , allloss: 5.3061, dt: 915.00ms, fracRes: 0.1330, norm(attn): 0.2051, norm(output): 0.3555, norm(x): 0.2918, norm(y): 1.0091, norm:1.5384, tok/sec: 143248.24, flops:111.56, batch-reuse:1
@ 1084 train 5.2524 , allloss: 5.2542, dt: 919.93ms, fracRes: 0.1227, norm(attn): 0.2090, norm(output): 0.3574, norm(x): 0.2988, norm(y): 1.0089, norm:1.2980, tok/sec: 142480.67, flops:110.96, batch-reuse:1
@ 1085 train 5.3361 , allloss: 5.3386, dt: 917.26ms, fracRes: 0.1187, norm(attn): 0.2148, norm(output): 0.3633, norm(x): 0.3001, norm(y): 1.0087, norm:1.6228, tok/sec: 142894.49, flops:111.29, batch-reuse:1
@ 1086 train 5.3400 , allloss: 5.3414, dt: 902.19ms, fracRes: 0.1147, norm(attn): 0.2070, norm(output): 0.3574, norm(x): 0.3008, norm(y): 1.0088, norm:1.4442, tok/sec: 145281.70, flops:113.15, batch-reuse:1
@ 1087 train 5.2963 , allloss: 5.3005, dt: 912.61ms, fracRes: 0.1099, norm(attn): 0.2129, norm(output): 0.3633, norm(x): 0.3045, norm(y): 1.0086, norm:1.4710, tok/sec: 143623.86, flops:111.85, batch-reuse:1
@ 1088 train 5.3711 , allloss: 5.3743, dt: 904.29ms, fracRes: 0.1126, norm(attn): 0.2100, norm(output): 0.3633, norm(x): 0.3024, norm(y): 1.0088, norm:1.2653, tok/sec: 144944.47, flops:112.88, batch-reuse:1
@ 1089 train 5.2788 , allloss: 5.2822, dt: 892.06ms, fracRes: 0.1148, norm(attn): 0.2129, norm(output): 0.3594, norm(x): 0.2989, norm(y): 1.0089, norm:1.3108, tok/sec: 146931.11, flops:114.43, batch-reuse:1
@ 1090 train 5.2714 , allloss: 5.2738, dt: 905.12ms, fracRes: 0.1184, norm(attn): 0.2070, norm(output): 0.3652, norm(x): 0.2993, norm(y): 1.0091, norm:1.2179, tok/sec: 144810.95, flops:112.78, batch-reuse:1
@ 1091 train 5.3257 , allloss: 5.3281, dt: 917.60ms, fracRes: 0.1192, norm(attn): 0.2100, norm(output): 0.3594, norm(x): 0.2976, norm(y): 1.0090, norm:1.2903, tok/sec: 142842.40, flops:111.25, batch-reuse:1
@ 1092 train 5.4283 , allloss: 5.4301, dt: 916.05ms, fracRes: 0.1207, norm(attn): 0.2158, norm(output): 0.3633, norm(x): 0.2995, norm(y): 1.0089, norm:1.2684, tok/sec: 143083.34, flops:111.43, batch-reuse:1
@ 1093 train 5.2986 , allloss: 5.3030, dt: 913.05ms, fracRes: 0.1206, norm(attn): 0.2080, norm(output): 0.3691, norm(x): 0.3013, norm(y): 1.0089, norm:1.3950, tok/sec: 143554.26, flops:111.80, batch-reuse:1
@ 1094 train 5.2672 , allloss: 5.2687, dt: 910.75ms, fracRes: 0.1259, norm(attn): 0.2090, norm(output): 0.3652, norm(x): 0.2992, norm(y): 1.0090, norm:1.4460, tok/sec: 143915.96, flops:112.08, batch-reuse:1
@ 1095 train 5.2559 , allloss: 5.2598, dt: 909.80ms, fracRes: 0.1246, norm(attn): 0.2129, norm(output): 0.3594, norm(x): 0.2978, norm(y): 1.0088, norm:1.1430, tok/sec: 144066.29, flops:112.20, batch-reuse:1
@ 1096 train 5.2938 , allloss: 5.2957, dt: 916.79ms, fracRes: 0.1263, norm(attn): 0.2090, norm(output): 0.3633, norm(x): 0.2985, norm(y): 1.0090, norm:0.9923, tok/sec: 142968.51, flops:111.34, batch-reuse:1
@ 1097 train 5.1971 , allloss: 5.1992, dt: 915.31ms, fracRes: 0.1297, norm(attn): 0.2090, norm(output): 0.3711, norm(x): 0.3011, norm(y): 1.0092, norm:1.0560, tok/sec: 143200.26, flops:111.52, batch-reuse:1
@ 1098 train 5.2205 , allloss: 5.2233, dt: 896.85ms, fracRes: 0.1290, norm(attn): 0.2100, norm(output): 0.3691, norm(x): 0.3009, norm(y): 1.0091, norm:1.1545, tok/sec: 146146.28, flops:113.82, batch-reuse:1
@ 1099 train 5.2594 , allloss: 5.2660, dt: 898.25ms, fracRes: 0.1288, norm(attn): 0.2148, norm(output): 0.3691, norm(x): 0.3013, norm(y): 1.0089, norm:0.9685, tok/sec: 145919.31, flops:113.64, batch-reuse:1
@ 1100 train 5.2353 , allloss: 5.2395, dt: 903.17ms, fracRes: 0.1310, norm(attn): 0.2109, norm(output): 0.3711, norm(x): 0.3009, norm(y): 1.0091, norm:1.2325, tok/sec: 145124.42, flops:113.02, batch-reuse:1
@ 1101 train 5.3911 , allloss: 5.3937, dt: 889.93ms, fracRes: 0.1303, norm(attn): 0.2090, norm(output): 0.3672, norm(x): 0.3002, norm(y): 1.0092, norm:1.5103, tok/sec: 147282.86, flops:114.70, batch-reuse:1
@ 1102 train 5.2916 , allloss: 5.2938, dt: 907.10ms, fracRes: 0.1310, norm(attn): 0.2148, norm(output): 0.3652, norm(x): 0.2974, norm(y): 1.0092, norm:1.0215, tok/sec: 144495.31, flops:112.53, batch-reuse:1
@ 1103 train 5.3658 , allloss: 5.3675, dt: 887.71ms, fracRes: 0.1289, norm(attn): 0.2168, norm(output): 0.3652, norm(x): 0.3009, norm(y): 1.0091, norm:1.2186, tok/sec: 147651.85, flops:114.99, batch-reuse:1
@ 1104 train 5.4012 , allloss: 5.4031, dt: 900.49ms, fracRes: 0.1273, norm(attn): 0.2188, norm(output): 0.3711, norm(x): 0.3059, norm(y): 1.0090, norm:1.2859, tok/sec: 145556.57, flops:113.36, batch-reuse:1
@ 1105 train 5.2926 , allloss: 5.2942, dt: 900.73ms, fracRes: 0.1281, norm(attn): 0.2178, norm(output): 0.3730, norm(x): 0.3064, norm(y): 1.0091, norm:1.4154, tok/sec: 145517.97, flops:113.33, batch-reuse:1
@ 1106 train 5.2870 , allloss: 5.2890, dt: 885.40ms, fracRes: 0.1291, norm(attn): 0.2148, norm(output): 0.3730, norm(x): 0.3049, norm(y): 1.0091, norm:1.6180, tok/sec: 148037.20, flops:115.29, batch-reuse:1
@ 1107 train 5.3801 , allloss: 5.3815, dt: 896.87ms, fracRes: 0.1359, norm(attn): 0.2178, norm(output): 0.3730, norm(x): 0.3028, norm(y): 1.0092, norm:1.3556, tok/sec: 146143.44, flops:113.82, batch-reuse:1
@ 1108 train 5.2382 , allloss: 5.2395, dt: 904.43ms, fracRes: 0.1409, norm(attn): 0.2158, norm(output): 0.3711, norm(x): 0.3006, norm(y): 1.0094, norm:0.9620, tok/sec: 144921.92, flops:112.87, batch-reuse:1
@ 1109 train 5.2617 , allloss: 5.2631, dt: 887.42ms, fracRes: 0.1377, norm(attn): 0.2148, norm(output): 0.3711, norm(x): 0.3012, norm(y): 1.0092, norm:1.1529, tok/sec: 147699.93, flops:115.03, batch-reuse:1
@ 1110 train 5.2797 , allloss: 5.2810, dt: 902.14ms, fracRes: 0.1308, norm(attn): 0.2158, norm(output): 0.3750, norm(x): 0.3082, norm(y): 1.0090, norm:1.0212, tok/sec: 145289.57, flops:113.15, batch-reuse:1
@ 1111 train 5.2594 , allloss: 5.2604, dt: 926.28ms, fracRes: 0.1302, norm(attn): 0.2168, norm(output): 0.3750, norm(x): 0.3092, norm(y): 1.0091, norm:1.2614, tok/sec: 141504.05, flops:110.20, batch-reuse:1
@ 1112 train 5.3943 , allloss: 5.3955, dt: 922.60ms, fracRes: 0.1306, norm(attn): 0.2119, norm(output): 0.3750, norm(x): 0.3095, norm(y): 1.0092, norm:1.2083, tok/sec: 142068.17, flops:110.64, batch-reuse:1
@ 1113 train 5.4203 , allloss: 5.4222, dt: 902.62ms, fracRes: 0.1336, norm(attn): 0.2129, norm(output): 0.3750, norm(x): 0.3090, norm(y): 1.0094, norm:1.4268, tok/sec: 145212.12, flops:113.09, batch-reuse:1
@ 1114 train 5.5388 , allloss: 5.5401, dt: 906.77ms, fracRes: 0.1376, norm(attn): 0.2158, norm(output): 0.3750, norm(x): 0.3054, norm(y): 1.0093, norm:1.4270, tok/sec: 144548.65, flops:112.58, batch-reuse:1
@ 1115 train 5.4785 , allloss: 5.4798, dt: 909.99ms, fracRes: 0.1375, norm(attn): 0.2148, norm(output): 0.3750, norm(x): 0.3055, norm(y): 1.0093, norm:1.5679, tok/sec: 144037.04, flops:112.18, batch-reuse:1
@ 1116 train 5.3409 , allloss: 5.3421, dt: 899.15ms, fracRes: 0.1333, norm(attn): 0.2178, norm(output): 0.3750, norm(x): 0.3082, norm(y): 1.0091, norm:1.3040, tok/sec: 145773.40, flops:113.53, batch-reuse:1
@ 1117 train 5.3610 , allloss: 5.3621, dt: 905.91ms, fracRes: 0.1297, norm(attn): 0.2197, norm(output): 0.3789, norm(x): 0.3119, norm(y): 1.0089, norm:1.0303, tok/sec: 144684.84, flops:112.68, batch-reuse:1
@ 1118 train 5.4593 , allloss: 5.4606, dt: 881.79ms, fracRes: 0.1337, norm(attn): 0.2178, norm(output): 0.3789, norm(x): 0.3107, norm(y): 1.0091, norm:1.2334, tok/sec: 148642.63, flops:115.76, batch-reuse:1
@ 1119 train 5.4575 , allloss: 5.4583, dt: 894.76ms, fracRes: 0.1384, norm(attn): 0.2148, norm(output): 0.3789, norm(x): 0.3110, norm(y): 1.0094, norm:1.1306, tok/sec: 146488.19, flops:114.09, batch-reuse:1
@ 1120 train 5.4282 , allloss: 5.4293, dt: 904.09ms, fracRes: 0.1412, norm(attn): 0.2080, norm(output): 0.3789, norm(x): 0.3109, norm(y): 1.0095, norm:1.2735, tok/sec: 144975.96, flops:112.91, batch-reuse:1
@ 1121 train 5.4748 , allloss: 5.4759, dt: 901.34ms, fracRes: 0.1405, norm(attn): 0.2129, norm(output): 0.3750, norm(x): 0.3100, norm(y): 1.0095, norm:1.3640, tok/sec: 145419.70, flops:113.25, batch-reuse:1
@ 1122 train 5.4461 , allloss: 5.4473, dt: 896.22ms, fracRes: 0.1369, norm(attn): 0.2158, norm(output): 0.3770, norm(x): 0.3105, norm(y): 1.0092, norm:1.2294, tok/sec: 146249.62, flops:113.90, batch-reuse:1
@ 1123 train 5.4269 , allloss: 5.4280, dt: 905.98ms, fracRes: 0.1384, norm(attn): 0.2148, norm(output): 0.3809, norm(x): 0.3112, norm(y): 1.0093, norm:1.1597, tok/sec: 144674.79, flops:112.67, batch-reuse:1
@ 1124 train 5.3934 , allloss: 5.3946, dt: 896.48ms, fracRes: 0.1391, norm(attn): 0.2168, norm(output): 0.3770, norm(x): 0.3094, norm(y): 1.0093, norm:1.0761, tok/sec: 146207.73, flops:113.87, batch-reuse:1
@ 1125 train 5.4131 , allloss: 5.4144, dt: 902.65ms, fracRes: 0.1341, norm(attn): 0.2178, norm(output): 0.3789, norm(x): 0.3134, norm(y): 1.0092, norm:1.0915, tok/sec: 145208.09, flops:113.09, batch-reuse:1
@ 1126 train 5.4186 , allloss: 5.4204, dt: 919.68ms, fracRes: 0.1295, norm(attn): 0.2178, norm(output): 0.3809, norm(x): 0.3155, norm(y): 1.0091, norm:1.0600, tok/sec: 142518.53, flops:110.99, batch-reuse:1
@ 1127 train 5.3867 , allloss: 5.3875, dt: 919.47ms, fracRes: 0.1275, norm(attn): 0.2168, norm(output): 0.3848, norm(x): 0.3188, norm(y): 1.0092, norm:1.2150, tok/sec: 142551.16, flops:111.02, batch-reuse:1
@ 1128 train 5.3411 , allloss: 5.3422, dt: 919.63ms, fracRes: 0.1312, norm(attn): 0.2168, norm(output): 0.3828, norm(x): 0.3151, norm(y): 1.0093, norm:0.9937, tok/sec: 142526.32, flops:111.00, batch-reuse:1
@ 1129 train 5.3925 , allloss: 5.3936, dt: 883.53ms, fracRes: 0.1362, norm(attn): 0.2178, norm(output): 0.3809, norm(x): 0.3120, norm(y): 1.0093, norm:1.2049, tok/sec: 148350.90, flops:115.54, batch-reuse:1
@ 1130 train 5.3542 , allloss: 5.3553, dt: 901.62ms, fracRes: 0.1397, norm(attn): 0.2207, norm(output): 0.3770, norm(x): 0.3098, norm(y): 1.0092, norm:1.0870, tok/sec: 145373.44, flops:113.22, batch-reuse:1
@ 1131 train 5.3949 , allloss: 5.3959, dt: 899.91ms, fracRes: 0.1371, norm(attn): 0.2197, norm(output): 0.3809, norm(x): 0.3137, norm(y): 1.0093, norm:0.9998, tok/sec: 145649.74, flops:113.43, batch-reuse:1
@ 1132 train 5.3875 , allloss: 5.3889, dt: 917.38ms, fracRes: 0.1373, norm(attn): 0.2168, norm(output): 0.3848, norm(x): 0.3136, norm(y): 1.0093, norm:1.1032, tok/sec: 142876.73, flops:111.27, batch-reuse:1
@ 1133 train 5.3926 , allloss: 5.3939, dt: 899.33ms, fracRes: 0.1381, norm(attn): 0.2178, norm(output): 0.3867, norm(x): 0.3164, norm(y): 1.0094, norm:1.0306, tok/sec: 145744.57, flops:113.51, batch-reuse:1
@ 1134 train 5.3296 , allloss: 5.3304, dt: 893.94ms, fracRes: 0.1394, norm(attn): 0.2188, norm(output): 0.3828, norm(x): 0.3153, norm(y): 1.0093, norm:0.9169, tok/sec: 146622.86, flops:114.19, batch-reuse:1
@ 1135 train 5.3719 , allloss: 5.3729, dt: 903.15ms, fracRes: 0.1393, norm(attn): 0.2207, norm(output): 0.3828, norm(x): 0.3171, norm(y): 1.0093, norm:1.0759, tok/sec: 145127.10, flops:113.03, batch-reuse:1
@ 1136 train 5.4153 , allloss: 5.4164, dt: 905.77ms, fracRes: 0.1377, norm(attn): 0.2197, norm(output): 0.3887, norm(x): 0.3191, norm(y): 1.0093, norm:1.2985, tok/sec: 144707.24, flops:112.70, batch-reuse:1
@ 1137 train 5.3760 , allloss: 5.3775, dt: 902.52ms, fracRes: 0.1365, norm(attn): 0.2188, norm(output): 0.3828, norm(x): 0.3174, norm(y): 1.0093, norm:1.0226, tok/sec: 145228.81, flops:113.10, batch-reuse:1
@ 1138 train 5.5543 , allloss: 5.5558, dt: 904.65ms, fracRes: 0.1387, norm(attn): 0.2178, norm(output): 0.3965, norm(x): 0.3194, norm(y): 1.0094, norm:1.0321, tok/sec: 144886.82, flops:112.84, batch-reuse:1
@ 1139 train 5.3391 , allloss: 5.3404, dt: 903.35ms, fracRes: 0.1398, norm(attn): 0.2197, norm(output): 0.3906, norm(x): 0.3184, norm(y): 1.0094, norm:1.1231, tok/sec: 145096.07, flops:113.00, batch-reuse:1
@ 1140 train 5.3689 , allloss: 5.3703, dt: 903.19ms, fracRes: 0.1404, norm(attn): 0.2217, norm(output): 0.3906, norm(x): 0.3206, norm(y): 1.0093, norm:1.1598, tok/sec: 145121.08, flops:113.02, batch-reuse:1
@ 1141 train 5.2596 , allloss: 5.2612, dt: 905.26ms, fracRes: 0.1357, norm(attn): 0.2217, norm(output): 0.3867, norm(x): 0.3229, norm(y): 1.0092, norm:1.0328, tok/sec: 144789.02, flops:112.76, batch-reuse:1
@ 1142 train 5.3277 , allloss: 5.3289, dt: 899.74ms, fracRes: 0.1347, norm(attn): 0.2207, norm(output): 0.3906, norm(x): 0.3217, norm(y): 1.0093, norm:1.0742, tok/sec: 145677.26, flops:113.45, batch-reuse:1
@ 1143 train 5.3960 , allloss: 5.3968, dt: 903.57ms, fracRes: 0.1368, norm(attn): 0.2236, norm(output): 0.3945, norm(x): 0.3231, norm(y): 1.0094, norm:1.9872, tok/sec: 145059.82, flops:112.97, batch-reuse:1
@ 1144 train 5.4189 , allloss: 5.4198, dt: 902.42ms, fracRes: 0.1402, norm(attn): 0.2217, norm(output): 0.3906, norm(x): 0.3201, norm(y): 1.0096, norm:1.3986, tok/sec: 145245.04, flops:113.12, batch-reuse:1
@ 1145 train 5.4532 , allloss: 5.4548, dt: 896.06ms, fracRes: 0.1441, norm(attn): 0.2217, norm(output): 0.3828, norm(x): 0.3151, norm(y): 1.0095, norm:1.2181, tok/sec: 146275.34, flops:113.92, batch-reuse:1
@ 1146 train 5.3975 , allloss: 5.3993, dt: 910.75ms, fracRes: 0.1396, norm(attn): 0.2207, norm(output): 0.3867, norm(x): 0.3185, norm(y): 1.0094, norm:1.0703, tok/sec: 143915.93, flops:112.08, batch-reuse:1
@ 1147 train 5.3741 , allloss: 5.3760, dt: 898.11ms, fracRes: 0.1370, norm(attn): 0.2217, norm(output): 0.3984, norm(x): 0.3244, norm(y): 1.0092, norm:1.0223, tok/sec: 145941.27, flops:113.66, batch-reuse:1
@ 1148 train 5.3023 , allloss: 5.3039, dt: 908.54ms, fracRes: 0.1370, norm(attn): 0.2207, norm(output): 0.3906, norm(x): 0.3257, norm(y): 1.0092, norm:1.0643, tok/sec: 144266.47, flops:112.36, batch-reuse:1
@ 1149 train 5.3635 , allloss: 5.3648, dt: 907.56ms, fracRes: 0.1392, norm(attn): 0.2188, norm(output): 0.3965, norm(x): 0.3235, norm(y): 1.0093, norm:1.3631, tok/sec: 144421.71, flops:112.48, batch-reuse:1
@ 1150 train 5.4115 , allloss: 5.4138, dt: 882.04ms, fracRes: 0.1452, norm(attn): 0.2227, norm(output): 0.3848, norm(x): 0.3156, norm(y): 1.0094, norm:1.2031, tok/sec: 148601.37, flops:115.73, batch-reuse:1
@ 1151 train 5.4580 , allloss: 5.4610, dt: 899.64ms, fracRes: 0.1421, norm(attn): 0.2266, norm(output): 0.3848, norm(x): 0.3192, norm(y): 1.0094, norm:1.1485, tok/sec: 145693.55, flops:113.47, batch-reuse:1
@ 1152 train 5.3340 , allloss: 5.3356, dt: 892.89ms, fracRes: 0.1460, norm(attn): 0.2178, norm(output): 0.3965, norm(x): 0.3213, norm(y): 1.0096, norm:1.2067, tok/sec: 146794.97, flops:114.32, batch-reuse:1
@ 1153 train 5.3317 , allloss: 5.3327, dt: 898.20ms, fracRes: 0.1497, norm(attn): 0.2178, norm(output): 0.4004, norm(x): 0.3218, norm(y): 1.0096, norm:1.2131, tok/sec: 145928.02, flops:113.65, batch-reuse:1
@ 1154 train 5.3570 , allloss: 5.3585, dt: 897.18ms, fracRes: 0.1494, norm(attn): 0.2188, norm(output): 0.3984, norm(x): 0.3221, norm(y): 1.0094, norm:1.0639, tok/sec: 146093.07, flops:113.78, batch-reuse:1
@ 1155 train 5.3078 , allloss: 5.3089, dt: 911.35ms, fracRes: 0.1510, norm(attn): 0.2188, norm(output): 0.3984, norm(x): 0.3212, norm(y): 1.0094, norm:1.0557, tok/sec: 143821.12, flops:112.01, batch-reuse:1
@ 1156 train 5.3636 , allloss: 5.3646, dt: 917.66ms, fracRes: 0.1544, norm(attn): 0.2178, norm(output): 0.3945, norm(x): 0.3207, norm(y): 1.0095, norm:1.0745, tok/sec: 142833.60, flops:111.24, batch-reuse:1
@ 1157 train 5.3302 , allloss: 5.3315, dt: 921.36ms, fracRes: 0.1509, norm(attn): 0.2178, norm(output): 0.4004, norm(x): 0.3236, norm(y): 1.0094, norm:1.1129, tok/sec: 142259.78, flops:110.79, batch-reuse:1
@ 1158 train 5.3305 , allloss: 5.3320, dt: 906.42ms, fracRes: 0.1520, norm(attn): 0.2168, norm(output): 0.3984, norm(x): 0.3227, norm(y): 1.0096, norm:1.2008, tok/sec: 144604.05, flops:112.62, batch-reuse:1
@ 1159 train 5.3760 , allloss: 5.3777, dt: 898.96ms, fracRes: 0.1520, norm(attn): 0.2227, norm(output): 0.4004, norm(x): 0.3238, norm(y): 1.0096, norm:1.2010, tok/sec: 145803.33, flops:113.55, batch-reuse:1
@ 1160 train 5.3936 , allloss: 5.3952, dt: 917.75ms, fracRes: 0.1507, norm(attn): 0.2207, norm(output): 0.4004, norm(x): 0.3241, norm(y): 1.0095, norm:0.9666, tok/sec: 142819.46, flops:111.23, batch-reuse:1
@ 1161 train 5.2853 , allloss: 5.2863, dt: 899.77ms, fracRes: 0.1512, norm(attn): 0.2178, norm(output): 0.4023, norm(x): 0.3246, norm(y): 1.0096, norm:1.4993, tok/sec: 145672.59, flops:113.45, batch-reuse:1
@ 1162 train 5.2141 , allloss: 5.2153, dt: 909.55ms, fracRes: 0.1509, norm(attn): 0.2178, norm(output): 0.4023, norm(x): 0.3259, norm(y): 1.0095, norm:1.0388, tok/sec: 144106.74, flops:112.23, batch-reuse:1
@ 1163 train 5.3419 , allloss: 5.3442, dt: 911.39ms, fracRes: 0.1532, norm(attn): 0.2207, norm(output): 0.4004, norm(x): 0.3243, norm(y): 1.0094, norm:1.0495, tok/sec: 143816.16, flops:112.00, batch-reuse:1
@ 1164 train 5.3144 , allloss: 5.3153, dt: 910.21ms, fracRes: 0.1546, norm(attn): 0.2217, norm(output): 0.4004, norm(x): 0.3223, norm(y): 1.0096, norm:0.9549, tok/sec: 144001.65, flops:112.15, batch-reuse:1
@ 1165 train 5.3156 , allloss: 5.3163, dt: 894.57ms, fracRes: 0.1523, norm(attn): 0.2227, norm(output): 0.4043, norm(x): 0.3270, norm(y): 1.0096, norm:1.0250, tok/sec: 146519.46, flops:114.11, batch-reuse:1
@ 1166 train 5.3090 , allloss: 5.3097, dt: 899.95ms, fracRes: 0.1510, norm(attn): 0.2217, norm(output): 0.4043, norm(x): 0.3285, norm(y): 1.0097, norm:1.0874, tok/sec: 145643.37, flops:113.43, batch-reuse:1
@ 1167 train 5.2659 , allloss: 5.2673, dt: 897.15ms, fracRes: 0.1478, norm(attn): 0.2217, norm(output): 0.4043, norm(x): 0.3296, norm(y): 1.0096, norm:1.0766, tok/sec: 146098.39, flops:113.78, batch-reuse:1
@ 1168 train 5.1840 , allloss: 5.1857, dt: 899.35ms, fracRes: 0.1456, norm(attn): 0.2236, norm(output): 0.4082, norm(x): 0.3332, norm(y): 1.0095, norm:1.1511, tok/sec: 145741.40, flops:113.50, batch-reuse:1
@ 1169 train 5.2809 , allloss: 5.2830, dt: 905.83ms, fracRes: 0.1496, norm(attn): 0.2207, norm(output): 0.4062, norm(x): 0.3296, norm(y): 1.0095, norm:0.9900, tok/sec: 144697.56, flops:112.69, batch-reuse:1
@ 1170 train 5.2607 , allloss: 5.2617, dt: 897.21ms, fracRes: 0.1558, norm(attn): 0.2217, norm(output): 0.4043, norm(x): 0.3242, norm(y): 1.0096, norm:1.0808, tok/sec: 146088.06, flops:113.77, batch-reuse:1
@ 1171 train 5.2898 , allloss: 5.2904, dt: 885.56ms, fracRes: 0.1542, norm(attn): 0.2246, norm(output): 0.4082, norm(x): 0.3302, norm(y): 1.0096, norm:1.4845, tok/sec: 148011.05, flops:115.27, batch-reuse:1
@ 1172 train 5.3633 , allloss: 5.3650, dt: 896.50ms, fracRes: 0.1550, norm(attn): 0.2314, norm(output): 0.4023, norm(x): 0.3288, norm(y): 1.0095, norm:1.1938, tok/sec: 146204.73, flops:113.86, batch-reuse:1
@ 1173 train 5.2646 , allloss: 5.2655, dt: 883.13ms, fracRes: 0.1574, norm(attn): 0.2227, norm(output): 0.4062, norm(x): 0.3283, norm(y): 1.0097, norm:1.0151, tok/sec: 148417.43, flops:115.59, batch-reuse:1
@ 1174 train 5.2185 , allloss: 5.2191, dt: 889.71ms, fracRes: 0.1530, norm(attn): 0.2207, norm(output): 0.4082, norm(x): 0.3338, norm(y): 1.0097, norm:1.0715, tok/sec: 147320.24, flops:114.73, batch-reuse:1
@ 1175 train 5.3336 , allloss: 5.3343, dt: 893.58ms, fracRes: 0.1545, norm(attn): 0.2207, norm(output): 0.4121, norm(x): 0.3366, norm(y): 1.0098, norm:1.3304, tok/sec: 146682.09, flops:114.24, batch-reuse:1
@ 1176 train 5.2862 , allloss: 5.2872, dt: 903.16ms, fracRes: 0.1568, norm(attn): 0.2256, norm(output): 0.4082, norm(x): 0.3350, norm(y): 1.0098, norm:1.1686, tok/sec: 145125.99, flops:113.02, batch-reuse:1
@ 1177 train 5.3061 , allloss: 5.3078, dt: 890.65ms, fracRes: 0.1592, norm(attn): 0.2227, norm(output): 0.4082, norm(x): 0.3298, norm(y): 1.0099, norm:1.0649, tok/sec: 147164.35, flops:114.61, batch-reuse:1
@ 1178 train 5.4450 , allloss: 5.4471, dt: 918.39ms, fracRes: 0.1568, norm(attn): 0.2217, norm(output): 0.4082, norm(x): 0.3316, norm(y): 1.0096, norm:1.0050, tok/sec: 142719.95, flops:111.15, batch-reuse:1
@ 1179 train 5.3336 , allloss: 5.3350, dt: 912.54ms, fracRes: 0.1547, norm(attn): 0.2236, norm(output): 0.4102, norm(x): 0.3356, norm(y): 1.0096, norm:1.1370, tok/sec: 143633.85, flops:111.86, batch-reuse:1
@ 1180 train 5.3500 , allloss: 5.3510, dt: 907.38ms, fracRes: 0.1529, norm(attn): 0.2217, norm(output): 0.4102, norm(x): 0.3375, norm(y): 1.0097, norm:1.3255, tok/sec: 144451.42, flops:112.50, batch-reuse:1
@ 1181 train 5.2613 , allloss: 5.2623, dt: 901.09ms, fracRes: 0.1530, norm(attn): 0.2197, norm(output): 0.4102, norm(x): 0.3374, norm(y): 1.0098, norm:0.9262, tok/sec: 145458.59, flops:113.28, batch-reuse:1
@ 1182 train 5.2993 , allloss: 5.3023, dt: 888.06ms, fracRes: 0.1571, norm(attn): 0.2246, norm(output): 0.4121, norm(x): 0.3366, norm(y): 1.0098, norm:1.3723, tok/sec: 147593.62, flops:114.95, batch-reuse:1
@ 1183 train 5.3063 , allloss: 5.3082, dt: 907.10ms, fracRes: 0.1575, norm(attn): 0.2227, norm(output): 0.4062, norm(x): 0.3328, norm(y): 1.0098, norm:1.0425, tok/sec: 144495.39, flops:112.53, batch-reuse:1
@ 1184 train 5.2889 , allloss: 5.2898, dt: 900.75ms, fracRes: 0.1601, norm(attn): 0.2246, norm(output): 0.4082, norm(x): 0.3305, norm(y): 1.0097, norm:1.0023, tok/sec: 145514.50, flops:113.33, batch-reuse:1
@ 1185 train 5.2698 , allloss: 5.2708, dt: 909.80ms, fracRes: 0.1581, norm(attn): 0.2246, norm(output): 0.4102, norm(x): 0.3327, norm(y): 1.0097, norm:0.8934, tok/sec: 144066.71, flops:112.20, batch-reuse:1
@ 1186 train 5.2963 , allloss: 5.2979, dt: 892.66ms, fracRes: 0.1551, norm(attn): 0.2227, norm(output): 0.4141, norm(x): 0.3374, norm(y): 1.0097, norm:0.8859, tok/sec: 146833.51, flops:114.35, batch-reuse:1
@ 1187 train 5.2884 , allloss: 5.2892, dt: 899.88ms, fracRes: 0.1573, norm(attn): 0.2188, norm(output): 0.4121, norm(x): 0.3373, norm(y): 1.0099, norm:0.9775, tok/sec: 145654.79, flops:113.44, batch-reuse:1
@ 1188 train 5.1959 , allloss: 5.1968, dt: 889.92ms, fracRes: 0.1582, norm(attn): 0.2207, norm(output): 0.4082, norm(x): 0.3349, norm(y): 1.0098, norm:1.0902, tok/sec: 147284.36, flops:114.71, batch-reuse:1
@ 1189 train 5.2339 , allloss: 5.2352, dt: 900.81ms, fracRes: 0.1607, norm(attn): 0.2275, norm(output): 0.4082, norm(x): 0.3360, norm(y): 1.0097, norm:1.0425, tok/sec: 145504.37, flops:113.32, batch-reuse:1
@ 1190 train 5.3107 , allloss: 5.3116, dt: 894.83ms, fracRes: 0.1651, norm(attn): 0.2227, norm(output): 0.4102, norm(x): 0.3358, norm(y): 1.0100, norm:1.1117, tok/sec: 146477.61, flops:114.08, batch-reuse:1
@ 1191 train 5.4070 , allloss: 5.4079, dt: 905.62ms, fracRes: 0.1612, norm(attn): 0.2236, norm(output): 0.4180, norm(x): 0.3391, norm(y): 1.0099, norm:1.2267, tok/sec: 144731.27, flops:112.72, batch-reuse:1
@ 1192 train 5.2521 , allloss: 5.2533, dt: 890.10ms, fracRes: 0.1581, norm(attn): 0.2227, norm(output): 0.4160, norm(x): 0.3399, norm(y): 1.0097, norm:1.0605, tok/sec: 147256.15, flops:114.68, batch-reuse:1
@ 1193 train 5.2997 , allloss: 5.3011, dt: 907.84ms, fracRes: 0.1628, norm(attn): 0.2236, norm(output): 0.4102, norm(x): 0.3357, norm(y): 1.0097, norm:1.0184, tok/sec: 144377.71, flops:112.44, batch-reuse:1
@ 1194 train 5.3017 , allloss: 5.3032, dt: 904.07ms, fracRes: 0.1692, norm(attn): 0.2246, norm(output): 0.4102, norm(x): 0.3320, norm(y): 1.0100, norm:1.0399, tok/sec: 144980.05, flops:112.91, batch-reuse:1
@ 1195 train 5.2927 , allloss: 5.2936, dt: 897.24ms, fracRes: 0.1667, norm(attn): 0.2256, norm(output): 0.4082, norm(x): 0.3347, norm(y): 1.0100, norm:1.3122, tok/sec: 146084.06, flops:113.77, batch-reuse:1
@ 1196 train 5.2557 , allloss: 5.2570, dt: 902.43ms, fracRes: 0.1570, norm(attn): 0.2227, norm(output): 0.4141, norm(x): 0.3444, norm(y): 1.0097, norm:1.1389, tok/sec: 145243.47, flops:113.12, batch-reuse:1
@ 1197 train 5.2211 , allloss: 5.2220, dt: 888.55ms, fracRes: 0.1614, norm(attn): 0.2207, norm(output): 0.4141, norm(x): 0.3403, norm(y): 1.0099, norm:1.1952, tok/sec: 147511.92, flops:114.88, batch-reuse:1
@ 1198 train 5.2359 , allloss: 5.2366, dt: 904.02ms, fracRes: 0.1623, norm(attn): 0.2197, norm(output): 0.4160, norm(x): 0.3400, norm(y): 1.0100, norm:1.0469, tok/sec: 144987.40, flops:112.92, batch-reuse:1
@ 1199 train 5.2877 , allloss: 5.2886, dt: 920.17ms, fracRes: 0.1603, norm(attn): 0.2285, norm(output): 0.4141, norm(x): 0.3400, norm(y): 1.0098, norm:1.1113, tok/sec: 142442.50, flops:110.93, batch-reuse:1
@ 1200 train 5.2392 , allloss: 5.2402, dt: 888.16ms, fracRes: 0.1592, norm(attn): 0.2324, norm(output): 0.4160, norm(x): 0.3420, norm(y): 1.0098, norm:1.1632, tok/sec: 147576.90, flops:114.93, batch-reuse:1
@ 1201 train 5.2340 , allloss: 5.2345, dt: 901.62ms, fracRes: 0.1634, norm(attn): 0.2227, norm(output): 0.4141, norm(x): 0.3393, norm(y): 1.0101, norm:1.0168, tok/sec: 145374.55, flops:113.22, batch-reuse:1
@ 1202 train 5.2701 , allloss: 5.2705, dt: 896.25ms, fracRes: 0.1631, norm(attn): 0.2207, norm(output): 0.4297, norm(x): 0.3424, norm(y): 1.0102, norm:1.0424, tok/sec: 146245.22, flops:113.90, batch-reuse:1
@ 1203 train 5.6595 , allloss: 5.6600, dt: 898.39ms, fracRes: 0.1638, norm(attn): 0.2236, norm(output): 0.4297, norm(x): 0.3428, norm(y): 1.0102, norm:1.2122, tok/sec: 145896.23, flops:113.62, batch-reuse:1
@ 1204 train 5.2385 , allloss: 5.2390, dt: 891.20ms, fracRes: 0.1615, norm(attn): 0.2246, norm(output): 0.4316, norm(x): 0.3443, norm(y): 1.0101, norm:1.1654, tok/sec: 147073.40, flops:114.54, batch-reuse:1
@ 1205 train 5.1841 , allloss: 5.1849, dt: 894.82ms, fracRes: 0.1641, norm(attn): 0.2256, norm(output): 0.4258, norm(x): 0.3429, norm(y): 1.0100, norm:1.0331, tok/sec: 146478.86, flops:114.08, batch-reuse:1
@ 1206 train 5.2185 , allloss: 5.2193, dt: 895.10ms, fracRes: 0.1654, norm(attn): 0.2285, norm(output): 0.4297, norm(x): 0.3446, norm(y): 1.0100, norm:1.1981, tok/sec: 146432.35, flops:114.04, batch-reuse:1
@ 1207 train 5.2048 , allloss: 5.2062, dt: 916.30ms, fracRes: 0.1674, norm(attn): 0.2324, norm(output): 0.4297, norm(x): 0.3447, norm(y): 1.0100, norm:1.1729, tok/sec: 143044.21, flops:111.40, batch-reuse:1
@ 1208 train 5.1632 , allloss: 5.1646, dt: 915.44ms, fracRes: 0.1639, norm(attn): 0.2314, norm(output): 0.4297, norm(x): 0.3475, norm(y): 1.0098, norm:0.9194, tok/sec: 143179.37, flops:111.51, batch-reuse:1
@ 1209 train 5.2853 , allloss: 5.2867, dt: 901.10ms, fracRes: 0.1625, norm(attn): 0.2285, norm(output): 0.4336, norm(x): 0.3486, norm(y): 1.0098, norm:1.0414, tok/sec: 145458.13, flops:113.28, batch-reuse:1
@ 1210 train 5.1798 , allloss: 5.1813, dt: 896.75ms, fracRes: 0.1636, norm(attn): 0.2305, norm(output): 0.4297, norm(x): 0.3500, norm(y): 1.0098, norm:1.2986, tok/sec: 146163.37, flops:113.83, batch-reuse:1
@ 1211 train 5.2611 , allloss: 5.2620, dt: 922.81ms, fracRes: 0.1673, norm(attn): 0.2266, norm(output): 0.4336, norm(x): 0.3487, norm(y): 1.0099, norm:1.2259, tok/sec: 142035.65, flops:110.62, batch-reuse:1
@ 1212 train 5.3322 , allloss: 5.3336, dt: 915.46ms, fracRes: 0.1713, norm(attn): 0.2197, norm(output): 0.4336, norm(x): 0.3482, norm(y): 1.0100, norm:1.2781, tok/sec: 143175.61, flops:111.51, batch-reuse:1
@ 1213 train 5.1548 , allloss: 5.1558, dt: 908.04ms, fracRes: 0.1745, norm(attn): 0.2256, norm(output): 0.4297, norm(x): 0.3414, norm(y): 1.0100, norm:1.0201, tok/sec: 144345.75, flops:112.42, batch-reuse:1
@ 1214 train 5.1965 , allloss: 5.1976, dt: 904.74ms, fracRes: 0.1724, norm(attn): 0.2285, norm(output): 0.4316, norm(x): 0.3453, norm(y): 1.0100, norm:1.1439, tok/sec: 144872.05, flops:112.83, batch-reuse:1
@ 1215 train 5.2437 , allloss: 5.2447, dt: 903.07ms, fracRes: 0.1664, norm(attn): 0.2324, norm(output): 0.4355, norm(x): 0.3518, norm(y): 1.0098, norm:1.0339, tok/sec: 145140.58, flops:113.04, batch-reuse:1
@ 1216 train 5.1863 , allloss: 5.1879, dt: 914.74ms, fracRes: 0.1684, norm(attn): 0.2236, norm(output): 0.4336, norm(x): 0.3502, norm(y): 1.0100, norm:1.0204, tok/sec: 143288.12, flops:111.59, batch-reuse:1
@ 1217 train 5.2324 , allloss: 5.2335, dt: 890.39ms, fracRes: 0.1735, norm(attn): 0.2236, norm(output): 0.4355, norm(x): 0.3502, norm(y): 1.0103, norm:1.0582, tok/sec: 147207.34, flops:114.65, batch-reuse:1
@ 1218 train 5.1441 , allloss: 5.1453, dt: 901.52ms, fracRes: 0.1741, norm(attn): 0.2256, norm(output): 0.4395, norm(x): 0.3516, norm(y): 1.0103, norm:1.2673, tok/sec: 145390.16, flops:113.23, batch-reuse:1
@ 1219 train 5.1215 , allloss: 5.1224, dt: 901.53ms, fracRes: 0.1700, norm(attn): 0.2256, norm(output): 0.4355, norm(x): 0.3555, norm(y): 1.0102, norm:0.9850, tok/sec: 145388.78, flops:113.23, batch-reuse:1
@ 1220 train 5.2230 , allloss: 5.2241, dt: 896.94ms, fracRes: 0.1718, norm(attn): 0.2236, norm(output): 0.4355, norm(x): 0.3532, norm(y): 1.0102, norm:1.1284, tok/sec: 146132.17, flops:113.81, batch-reuse:1
@ 1221 train 5.1812 , allloss: 5.1823, dt: 909.89ms, fracRes: 0.1687, norm(attn): 0.2246, norm(output): 0.4375, norm(x): 0.3539, norm(y): 1.0101, norm:1.0282, tok/sec: 144052.44, flops:112.19, batch-reuse:1
@ 1222 train 5.1598 , allloss: 5.1610, dt: 891.37ms, fracRes: 0.1642, norm(attn): 0.2295, norm(output): 0.4375, norm(x): 0.3563, norm(y): 1.0099, norm:0.9196, tok/sec: 147045.31, flops:114.52, batch-reuse:1
@ 1223 train 5.1294 , allloss: 5.1305, dt: 906.92ms, fracRes: 0.1667, norm(attn): 0.2295, norm(output): 0.4375, norm(x): 0.3569, norm(y): 1.0099, norm:1.0143, tok/sec: 144524.56, flops:112.56, batch-reuse:1
@ 1224 train 5.1176 , allloss: 5.1185, dt: 896.48ms, fracRes: 0.1697, norm(attn): 0.2236, norm(output): 0.4375, norm(x): 0.3553, norm(y): 1.0102, norm:1.1353, tok/sec: 146206.83, flops:113.87, batch-reuse:1
@ 1225 train 5.1622 , allloss: 5.1630, dt: 913.33ms, fracRes: 0.1727, norm(attn): 0.2295, norm(output): 0.4375, norm(x): 0.3531, norm(y): 1.0102, norm:0.9896, tok/sec: 143510.71, flops:111.77, batch-reuse:1
@ 1226 train 5.2379 , allloss: 5.2391, dt: 896.86ms, fracRes: 0.1726, norm(attn): 0.2266, norm(output): 0.4375, norm(x): 0.3523, norm(y): 1.0101, norm:1.0700, tok/sec: 146144.92, flops:113.82, batch-reuse:1
@ 1227 train 5.1737 , allloss: 5.1748, dt: 901.11ms, fracRes: 0.1720, norm(attn): 0.2324, norm(output): 0.4355, norm(x): 0.3517, norm(y): 1.0100, norm:1.1715, tok/sec: 145456.25, flops:113.28, batch-reuse:1
@ 1228 train 5.1293 , allloss: 5.1306, dt: 906.11ms, fracRes: 0.1707, norm(attn): 0.2305, norm(output): 0.4375, norm(x): 0.3530, norm(y): 1.0100, norm:0.9421, tok/sec: 144653.97, flops:112.66, batch-reuse:1
@ 1229 train 5.1692 , allloss: 5.1712, dt: 918.37ms, fracRes: 0.1712, norm(attn): 0.2246, norm(output): 0.4414, norm(x): 0.3568, norm(y): 1.0102, norm:0.9833, tok/sec: 142723.06, flops:111.15, batch-reuse:1
@ 1230 train 5.2052 , allloss: 5.2063, dt: 909.58ms, fracRes: 0.1702, norm(attn): 0.2246, norm(output): 0.4395, norm(x): 0.3545, norm(y): 1.0102, norm:1.1047, tok/sec: 144101.75, flops:112.23, batch-reuse:1
@ 1231 train 5.1482 , allloss: 5.1490, dt: 912.46ms, fracRes: 0.1709, norm(attn): 0.2266, norm(output): 0.4375, norm(x): 0.3540, norm(y): 1.0102, norm:1.1513, tok/sec: 143647.62, flops:111.87, batch-reuse:1
@ 1232 train 5.1250 , allloss: 5.1260, dt: 926.62ms, fracRes: 0.1713, norm(attn): 0.2314, norm(output): 0.4375, norm(x): 0.3566, norm(y): 1.0100, norm:0.9252, tok/sec: 141451.22, flops:110.16, batch-reuse:1
@ 1233 train 5.1445 , allloss: 5.1456, dt: 893.82ms, fracRes: 0.1765, norm(attn): 0.2334, norm(output): 0.4375, norm(x): 0.3542, norm(y): 1.0101, norm:0.9098, tok/sec: 146642.22, flops:114.21, batch-reuse:1
@ 1234 train 5.1649 , allloss: 5.1658, dt: 926.54ms, fracRes: 0.1758, norm(attn): 0.2305, norm(output): 0.4414, norm(x): 0.3588, norm(y): 1.0102, norm:0.8616, tok/sec: 141463.19, flops:110.17, batch-reuse:1
@ 1235 train 5.2372 , allloss: 5.2377, dt: 923.07ms, fracRes: 0.1760, norm(attn): 0.2344, norm(output): 0.4531, norm(x): 0.3631, norm(y): 1.0102, norm:1.0311, tok/sec: 141995.52, flops:110.59, batch-reuse:1
@ 1236 train 5.1221 , allloss: 5.1228, dt: 919.46ms, fracRes: 0.1755, norm(attn): 0.2393, norm(output): 0.4395, norm(x): 0.3603, norm(y): 1.0100, norm:1.0626, tok/sec: 142553.15, flops:111.02, batch-reuse:1
@ 1237 train 5.1917 , allloss: 5.1923, dt: 920.85ms, fracRes: 0.1791, norm(attn): 0.2354, norm(output): 0.4395, norm(x): 0.3558, norm(y): 1.0101, norm:1.0981, tok/sec: 142338.42, flops:110.85, batch-reuse:1
@ 1238 train 5.1404 , allloss: 5.1414, dt: 922.04ms, fracRes: 0.1765, norm(attn): 0.2344, norm(output): 0.4395, norm(x): 0.3544, norm(y): 1.0101, norm:0.9050, tok/sec: 142153.80, flops:110.71, batch-reuse:1
@ 1239 train 5.0866 , allloss: 5.0872, dt: 923.45ms, fracRes: 0.1747, norm(attn): 0.2344, norm(output): 0.4414, norm(x): 0.3602, norm(y): 1.0102, norm:1.3110, tok/sec: 141936.86, flops:110.54, batch-reuse:1
@ 1240 train 5.0928 , allloss: 5.0938, dt: 923.35ms, fracRes: 0.1729, norm(attn): 0.2314, norm(output): 0.4453, norm(x): 0.3622, norm(y): 1.0103, norm:0.9972, tok/sec: 141953.10, flops:110.55, batch-reuse:1
@ 1241 train 5.0959 , allloss: 5.0969, dt: 903.28ms, fracRes: 0.1716, norm(attn): 0.2275, norm(output): 0.4453, norm(x): 0.3627, norm(y): 1.0102, norm:1.2016, tok/sec: 145106.07, flops:113.01, batch-reuse:1
@ 1242 train 5.1647 , allloss: 5.1661, dt: 906.92ms, fracRes: 0.1718, norm(attn): 0.2314, norm(output): 0.4453, norm(x): 0.3607, norm(y): 1.0100, norm:1.0117, tok/sec: 144524.18, flops:112.56, batch-reuse:1
@ 1243 train 5.1541 , allloss: 5.1549, dt: 922.17ms, fracRes: 0.1731, norm(attn): 0.2324, norm(output): 0.4414, norm(x): 0.3603, norm(y): 1.0101, norm:1.1475, tok/sec: 142133.77, flops:110.69, batch-reuse:1
@ 1244 train 5.1758 , allloss: 5.1766, dt: 919.72ms, fracRes: 0.1739, norm(attn): 0.2334, norm(output): 0.4414, norm(x): 0.3621, norm(y): 1.0102, norm:1.0792, tok/sec: 142513.10, flops:110.99, batch-reuse:1
@ 1245 train 5.1643 , allloss: 5.1649, dt: 923.39ms, fracRes: 0.1732, norm(attn): 0.2324, norm(output): 0.4434, norm(x): 0.3629, norm(y): 1.0105, norm:1.1449, tok/sec: 141946.76, flops:110.55, batch-reuse:1
@ 1246 train 5.1536 , allloss: 5.1543, dt: 917.85ms, fracRes: 0.1721, norm(attn): 0.2324, norm(output): 0.4531, norm(x): 0.3656, norm(y): 1.0104, norm:1.1313, tok/sec: 142803.73, flops:111.22, batch-reuse:1
@ 1247 train 5.0704 , allloss: 5.0724, dt: 923.26ms, fracRes: 0.1753, norm(attn): 0.2344, norm(output): 0.4414, norm(x): 0.3581, norm(y): 1.0103, norm:1.0065, tok/sec: 141966.48, flops:110.56, batch-reuse:1
@ 1248 train 5.1711 , allloss: 5.1721, dt: 906.47ms, fracRes: 0.1744, norm(attn): 0.2344, norm(output): 0.4453, norm(x): 0.3637, norm(y): 1.0103, norm:0.9399, tok/sec: 144595.91, flops:112.61, batch-reuse:1
@ 1249 train 5.0626 , allloss: 5.0633, dt: 898.66ms, fracRes: 0.1739, norm(attn): 0.2314, norm(output): 0.4492, norm(x): 0.3674, norm(y): 1.0103, norm:1.0316, tok/sec: 145853.15, flops:113.59, batch-reuse:1
@ 1250 train 5.1662 , allloss: 5.1670, dt: 903.01ms, fracRes: 0.1782, norm(attn): 0.2314, norm(output): 0.4453, norm(x): 0.3659, norm(y): 1.0104, norm:1.2085, tok/sec: 145150.74, flops:113.04, batch-reuse:1
@ 1251 train 5.0940 , allloss: 5.0948, dt: 908.03ms, fracRes: 0.1779, norm(attn): 0.2314, norm(output): 0.4512, norm(x): 0.3677, norm(y): 1.0104, norm:1.0519, tok/sec: 144347.65, flops:112.42, batch-reuse:1
@ 1252 train 5.1191 , allloss: 5.1219, dt: 891.57ms, fracRes: 0.1786, norm(attn): 0.2314, norm(output): 0.4609, norm(x): 0.3713, norm(y): 1.0104, norm:1.1222, tok/sec: 147013.27, flops:114.49, batch-reuse:1
@ 1253 train 4.9954 , allloss: 4.9970, dt: 915.12ms, fracRes: 0.1765, norm(attn): 0.2334, norm(output): 0.4551, norm(x): 0.3715, norm(y): 1.0103, norm:1.0920, tok/sec: 143229.17, flops:111.55, batch-reuse:1
@ 1254 train 5.0777 , allloss: 5.0789, dt: 914.50ms, fracRes: 0.1766, norm(attn): 0.2324, norm(output): 0.4453, norm(x): 0.3689, norm(y): 1.0103, norm:0.9290, tok/sec: 143326.41, flops:111.62, batch-reuse:1
@ 1255 train 5.1130 , allloss: 5.1140, dt: 903.09ms, fracRes: 0.1779, norm(attn): 0.2314, norm(output): 0.4453, norm(x): 0.3679, norm(y): 1.0104, norm:1.0597, tok/sec: 145137.83, flops:113.03, batch-reuse:1
@ 1256 train 5.0244 , allloss: 5.0254, dt: 900.55ms, fracRes: 0.1782, norm(attn): 0.2344, norm(output): 0.4492, norm(x): 0.3660, norm(y): 1.0104, norm:0.8350, tok/sec: 145546.67, flops:113.35, batch-reuse:1
@ 1257 train 5.1110 , allloss: 5.1118, dt: 899.26ms, fracRes: 0.1773, norm(attn): 0.2344, norm(output): 0.4551, norm(x): 0.3684, norm(y): 1.0104, norm:0.8667, tok/sec: 145755.70, flops:113.52, batch-reuse:1
@ 1258 train 5.0532 , allloss: 5.0539, dt: 913.51ms, fracRes: 0.1773, norm(attn): 0.2324, norm(output): 0.4609, norm(x): 0.3693, norm(y): 1.0105, norm:0.9274, tok/sec: 143481.46, flops:111.74, batch-reuse:1
@ 1259 train 5.1150 , allloss: 5.1157, dt: 909.45ms, fracRes: 0.1799, norm(attn): 0.2334, norm(output): 0.4609, norm(x): 0.3681, norm(y): 1.0104, norm:1.1619, tok/sec: 144121.58, flops:112.24, batch-reuse:1
@ 1260 train 5.0283 , allloss: 5.0291, dt: 921.10ms, fracRes: 0.1791, norm(attn): 0.2344, norm(output): 0.4570, norm(x): 0.3674, norm(y): 1.0103, norm:0.9231, tok/sec: 142299.73, flops:110.82, batch-reuse:1
@ 1261 train 5.0460 , allloss: 5.0466, dt: 905.87ms, fracRes: 0.1771, norm(attn): 0.2334, norm(output): 0.4570, norm(x): 0.3701, norm(y): 1.0104, norm:0.9063, tok/sec: 144691.74, flops:112.69, batch-reuse:1
@ 1262 train 4.9853 , allloss: 4.9859, dt: 918.51ms, fracRes: 0.1787, norm(attn): 0.2334, norm(output): 0.4570, norm(x): 0.3700, norm(y): 1.0104, norm:0.8756, tok/sec: 142701.28, flops:111.14, batch-reuse:1
@ 1263 train 5.0261 , allloss: 5.0269, dt: 913.93ms, fracRes: 0.1779, norm(attn): 0.2344, norm(output): 0.4629, norm(x): 0.3734, norm(y): 1.0104, norm:0.9632, tok/sec: 143416.56, flops:111.69, batch-reuse:1
@ 1264 train 5.1392 , allloss: 5.1401, dt: 898.71ms, fracRes: 0.1821, norm(attn): 0.2363, norm(output): 0.4629, norm(x): 0.3711, norm(y): 1.0104, norm:1.0516, tok/sec: 145844.56, flops:113.58, batch-reuse:1
@ 1265 train 5.0659 , allloss: 5.0668, dt: 901.89ms, fracRes: 0.1764, norm(attn): 0.2354, norm(output): 0.4590, norm(x): 0.3730, norm(y): 1.0102, norm:1.0205, tok/sec: 145329.74, flops:113.18, batch-reuse:1
@ 1266 train 5.0901 , allloss: 5.0914, dt: 891.48ms, fracRes: 0.1749, norm(attn): 0.2363, norm(output): 0.4629, norm(x): 0.3759, norm(y): 1.0102, norm:1.1502, tok/sec: 147028.01, flops:114.51, batch-reuse:1
@ 1267 train 5.1271 , allloss: 5.1286, dt: 901.87ms, fracRes: 0.1801, norm(attn): 0.2324, norm(output): 0.4629, norm(x): 0.3719, norm(y): 1.0104, norm:0.9518, tok/sec: 145333.54, flops:113.19, batch-reuse:1
@ 1268 train 5.0989 , allloss: 5.1009, dt: 907.55ms, fracRes: 0.1816, norm(attn): 0.2344, norm(output): 0.4648, norm(x): 0.3733, norm(y): 1.0105, norm:1.2236, tok/sec: 144423.60, flops:112.48, batch-reuse:1
@ 1269 train 5.0732 , allloss: 5.0739, dt: 898.16ms, fracRes: 0.1827, norm(attn): 0.2354, norm(output): 0.4629, norm(x): 0.3711, norm(y): 1.0104, norm:0.9778, tok/sec: 145934.69, flops:113.65, batch-reuse:1
@ 1270 train 4.9783 , allloss: 4.9788, dt: 886.48ms, fracRes: 0.1840, norm(attn): 0.2354, norm(output): 0.4648, norm(x): 0.3731, norm(y): 1.0105, norm:1.0121, tok/sec: 147857.35, flops:115.15, batch-reuse:1
@ 1271 train 5.0050 , allloss: 5.0057, dt: 893.88ms, fracRes: 0.1834, norm(attn): 0.2344, norm(output): 0.4648, norm(x): 0.3722, norm(y): 1.0105, norm:0.9375, tok/sec: 146633.46, flops:114.20, batch-reuse:1
@ 1272 train 5.0155 , allloss: 5.0162, dt: 901.27ms, fracRes: 0.1840, norm(attn): 0.2363, norm(output): 0.4648, norm(x): 0.3739, norm(y): 1.0105, norm:1.0862, tok/sec: 145430.77, flops:113.26, batch-reuse:1
@ 1273 train 5.1665 , allloss: 5.1670, dt: 890.02ms, fracRes: 0.1839, norm(attn): 0.2314, norm(output): 0.4668, norm(x): 0.3744, norm(y): 1.0106, norm:1.0574, tok/sec: 147269.01, flops:114.69, batch-reuse:1
@ 1274 train 5.0355 , allloss: 5.0365, dt: 905.49ms, fracRes: 0.1823, norm(attn): 0.2393, norm(output): 0.4648, norm(x): 0.3763, norm(y): 1.0104, norm:1.2798, tok/sec: 144752.46, flops:112.73, batch-reuse:1
@ 1275 train 5.1904 , allloss: 5.1912, dt: 900.72ms, fracRes: 0.1828, norm(attn): 0.2354, norm(output): 0.4668, norm(x): 0.3763, norm(y): 1.0104, norm:0.8458, tok/sec: 145519.31, flops:113.33, batch-reuse:1
@ 1276 train 4.9881 , allloss: 4.9914, dt: 899.43ms, fracRes: 0.1826, norm(attn): 0.2354, norm(output): 0.4668, norm(x): 0.3767, norm(y): 1.0105, norm:1.0301, tok/sec: 145727.88, flops:113.49, batch-reuse:1
@ 1277 train 4.9761 , allloss: 4.9773, dt: 900.96ms, fracRes: 0.1827, norm(attn): 0.2354, norm(output): 0.4648, norm(x): 0.3760, norm(y): 1.0106, norm:1.1025, tok/sec: 145480.50, flops:113.30, batch-reuse:1
@ 1278 train 5.0916 , allloss: 5.0927, dt: 900.23ms, fracRes: 0.1766, norm(attn): 0.2373, norm(output): 0.4707, norm(x): 0.3831, norm(y): 1.0104, norm:1.1425, tok/sec: 145597.70, flops:113.39, batch-reuse:1
@ 1279 train 5.1822 , allloss: 5.1834, dt: 901.89ms, fracRes: 0.1794, norm(attn): 0.2354, norm(output): 0.4707, norm(x): 0.3810, norm(y): 1.0104, norm:0.9680, tok/sec: 145331.09, flops:113.18, batch-reuse:1
@ 1280 train 4.9596 , allloss: 4.9608, dt: 899.85ms, fracRes: 0.1807, norm(attn): 0.2373, norm(output): 0.4668, norm(x): 0.3748, norm(y): 1.0105, norm:0.8469, tok/sec: 145660.04, flops:113.44, batch-reuse:1
@ 1281 train 4.9867 , allloss: 4.9879, dt: 891.84ms, fracRes: 0.1794, norm(attn): 0.2373, norm(output): 0.4668, norm(x): 0.3762, norm(y): 1.0106, norm:1.1370, tok/sec: 146967.95, flops:114.46, batch-reuse:1
@ 1282 train 5.0058 , allloss: 5.0068, dt: 933.87ms, fracRes: 0.1811, norm(attn): 0.2383, norm(output): 0.4688, norm(x): 0.3781, norm(y): 1.0106, norm:1.2093, tok/sec: 140354.25, flops:109.31, batch-reuse:1
@ 1283 train 5.0633 , allloss: 5.0646, dt: 903.58ms, fracRes: 0.1828, norm(attn): 0.2383, norm(output): 0.4688, norm(x): 0.3788, norm(y): 1.0106, norm:1.0888, tok/sec: 145058.02, flops:112.97, batch-reuse:1
@ 1284 train 4.9982 , allloss: 4.9995, dt: 912.12ms, fracRes: 0.1836, norm(attn): 0.2402, norm(output): 0.4688, norm(x): 0.3813, norm(y): 1.0105, norm:1.0589, tok/sec: 143700.79, flops:111.91, batch-reuse:1
@ 1285 train 4.9234 , allloss: 4.9245, dt: 906.90ms, fracRes: 0.1821, norm(attn): 0.2393, norm(output): 0.4707, norm(x): 0.3860, norm(y): 1.0104, norm:1.0568, tok/sec: 144527.22, flops:112.56, batch-reuse:1
@ 1286 train 5.1746 , allloss: 5.1754, dt: 906.67ms, fracRes: 0.1861, norm(attn): 0.2402, norm(output): 0.4727, norm(x): 0.3853, norm(y): 1.0104, norm:1.2472, tok/sec: 144564.73, flops:112.59, batch-reuse:1
@ 1287 train 5.0729 , allloss: 5.0743, dt: 902.47ms, fracRes: 0.1909, norm(attn): 0.2480, norm(output): 0.4688, norm(x): 0.3777, norm(y): 1.0105, norm:0.9786, tok/sec: 145236.87, flops:113.11, batch-reuse:1
@ 1288 train 5.0350 , allloss: 5.0363, dt: 908.93ms, fracRes: 0.1906, norm(attn): 0.2402, norm(output): 0.4688, norm(x): 0.3820, norm(y): 1.0106, norm:0.9103, tok/sec: 144204.60, flops:112.31, batch-reuse:1
@ 1289 train 4.9665 , allloss: 4.9692, dt: 895.16ms, fracRes: 0.1861, norm(attn): 0.2393, norm(output): 0.4727, norm(x): 0.3834, norm(y): 1.0106, norm:0.9061, tok/sec: 146422.99, flops:114.03, batch-reuse:1
@ 1290 train 4.9766 , allloss: 4.9779, dt: 904.91ms, fracRes: 0.1875, norm(attn): 0.2373, norm(output): 0.4785, norm(x): 0.3838, norm(y): 1.0108, norm:1.0688, tok/sec: 144845.52, flops:112.81, batch-reuse:1
@ 1291 train 5.0360 , allloss: 5.0379, dt: 893.13ms, fracRes: 0.1878, norm(attn): 0.2402, norm(output): 0.4707, norm(x): 0.3794, norm(y): 1.0106, norm:1.0338, tok/sec: 146756.25, flops:114.29, batch-reuse:1
@ 1292 train 4.9783 , allloss: 4.9810, dt: 903.03ms, fracRes: 0.1913, norm(attn): 0.2354, norm(output): 0.4707, norm(x): 0.3777, norm(y): 1.0107, norm:0.9983, tok/sec: 145146.87, flops:113.04, batch-reuse:1
@ 1293 train 5.0364 , allloss: 5.0379, dt: 909.72ms, fracRes: 0.1866, norm(attn): 0.2373, norm(output): 0.4727, norm(x): 0.3848, norm(y): 1.0106, norm:1.1816, tok/sec: 144078.79, flops:112.21, batch-reuse:1
@ 1294 train 4.9571 , allloss: 4.9582, dt: 905.81ms, fracRes: 0.1883, norm(attn): 0.2363, norm(output): 0.4688, norm(x): 0.3818, norm(y): 1.0107, norm:1.0565, tok/sec: 144701.45, flops:112.69, batch-reuse:1
@ 1295 train 5.1084 , allloss: 5.1098, dt: 899.01ms, fracRes: 0.1866, norm(attn): 0.2354, norm(output): 0.4727, norm(x): 0.3874, norm(y): 1.0106, norm:1.1630, tok/sec: 145796.48, flops:113.55, batch-reuse:1
@ 1296 train 5.0823 , allloss: 5.0849, dt: 906.17ms, fracRes: 0.1853, norm(attn): 0.2441, norm(output): 0.4707, norm(x): 0.3889, norm(y): 1.0105, norm:0.9560, tok/sec: 144644.61, flops:112.65, batch-reuse:1
@ 1297 train 5.1319 , allloss: 5.1333, dt: 898.57ms, fracRes: 0.1922, norm(attn): 0.2363, norm(output): 0.4727, norm(x): 0.3833, norm(y): 1.0109, norm:0.8240, tok/sec: 145867.39, flops:113.60, batch-reuse:1
@ 1298 train 5.2467 , allloss: 5.2477, dt: 895.64ms, fracRes: 0.1917, norm(attn): 0.2373, norm(output): 0.4727, norm(x): 0.3840, norm(y): 1.0109, norm:0.8599, tok/sec: 146344.88, flops:113.97, batch-reuse:1
@ 1299 train 5.2165 , allloss: 5.2174, dt: 895.31ms, fracRes: 0.1896, norm(attn): 0.2383, norm(output): 0.4766, norm(x): 0.3881, norm(y): 1.0107, norm:1.1470, tok/sec: 146398.58, flops:114.02, batch-reuse:1
@ 1300 train 5.1685 , allloss: 5.1698, dt: 911.58ms, fracRes: 0.1924, norm(attn): 0.2383, norm(output): 0.4805, norm(x): 0.3866, norm(y): 1.0108, norm:1.1543, tok/sec: 143785.88, flops:111.98, batch-reuse:1
@ 1301 train 5.2527 , allloss: 5.2538, dt: 908.54ms, fracRes: 0.1936, norm(attn): 0.2383, norm(output): 0.4785, norm(x): 0.3855, norm(y): 1.0108, norm:0.9727, tok/sec: 144265.87, flops:112.35, batch-reuse:1
@ 1302 train 5.2315 , allloss: 5.2332, dt: 910.60ms, fracRes: 0.1947, norm(attn): 0.2373, norm(output): 0.4805, norm(x): 0.3874, norm(y): 1.0108, norm:1.1291, tok/sec: 143940.80, flops:112.10, batch-reuse:1
@ 1303 train 5.2959 , allloss: 5.2968, dt: 911.39ms, fracRes: 0.1912, norm(attn): 0.2363, norm(output): 0.4844, norm(x): 0.3930, norm(y): 1.0106, norm:1.1163, tok/sec: 143815.67, flops:112.00, batch-reuse:1
@ 1304 train 5.2433 , allloss: 5.2444, dt: 898.46ms, fracRes: 0.1932, norm(attn): 0.2344, norm(output): 0.4863, norm(x): 0.3908, norm(y): 1.0107, norm:1.0344, tok/sec: 145885.74, flops:113.62, batch-reuse:1
@ 1305 train 5.1605 , allloss: 5.1621, dt: 920.89ms, fracRes: 0.1978, norm(attn): 0.2344, norm(output): 0.4727, norm(x): 0.3847, norm(y): 1.0109, norm:1.1346, tok/sec: 142331.68, flops:110.85, batch-reuse:1
@ 1306 train 5.1005 , allloss: 5.1024, dt: 915.11ms, fracRes: 0.1978, norm(attn): 0.2373, norm(output): 0.4746, norm(x): 0.3837, norm(y): 1.0108, norm:1.1745, tok/sec: 143231.52, flops:111.55, batch-reuse:1
@ 1307 train 5.2846 , allloss: 5.2859, dt: 907.29ms, fracRes: 0.1929, norm(attn): 0.2373, norm(output): 0.4766, norm(x): 0.3902, norm(y): 1.0106, norm:1.0029, tok/sec: 144464.59, flops:112.51, batch-reuse:1
@ 1308 train 5.2710 , allloss: 5.2725, dt: 899.63ms, fracRes: 0.1911, norm(attn): 0.2363, norm(output): 0.4746, norm(x): 0.3896, norm(y): 1.0106, norm:1.0052, tok/sec: 145695.90, flops:113.47, batch-reuse:1
@ 1309 train 5.2409 , allloss: 5.2416, dt: 911.30ms, fracRes: 0.1939, norm(attn): 0.2402, norm(output): 0.4844, norm(x): 0.3906, norm(y): 1.0107, norm:1.0736, tok/sec: 143829.03, flops:112.01, batch-reuse:1
@ 1310 train 5.2077 , allloss: 5.2087, dt: 908.59ms, fracRes: 0.1893, norm(attn): 0.2432, norm(output): 0.4922, norm(x): 0.3959, norm(y): 1.0106, norm:1.2113, tok/sec: 144258.37, flops:112.35, batch-reuse:1
@ 1311 train 5.1842 , allloss: 5.1860, dt: 908.37ms, fracRes: 0.1892, norm(attn): 0.2373, norm(output): 0.4863, norm(x): 0.3949, norm(y): 1.0106, norm:1.0563, tok/sec: 144294.23, flops:112.38, batch-reuse:1
@ 1312 train 5.2293 , allloss: 5.2307, dt: 897.43ms, fracRes: 0.1881, norm(attn): 0.2363, norm(output): 0.4922, norm(x): 0.3946, norm(y): 1.0107, norm:1.0559, tok/sec: 146051.97, flops:113.75, batch-reuse:1
@ 1313 train 5.2661 , allloss: 5.2675, dt: 920.19ms, fracRes: 0.1892, norm(attn): 0.2383, norm(output): 0.4980, norm(x): 0.3967, norm(y): 1.0108, norm:1.0654, tok/sec: 142440.17, flops:110.93, batch-reuse:1
@ 1314 train 5.2039 , allloss: 5.2049, dt: 916.43ms, fracRes: 0.1888, norm(attn): 0.2441, norm(output): 0.4961, norm(x): 0.3967, norm(y): 1.0108, norm:1.0515, tok/sec: 143024.04, flops:111.39, batch-reuse:1
@ 1315 train 5.1803 , allloss: 5.1816, dt: 905.37ms, fracRes: 0.1893, norm(attn): 0.2441, norm(output): 0.4961, norm(x): 0.3972, norm(y): 1.0107, norm:0.9474, tok/sec: 144772.06, flops:112.75, batch-reuse:1
@ 1316 train 5.1125 , allloss: 5.1142, dt: 915.55ms, fracRes: 0.1925, norm(attn): 0.2393, norm(output): 0.4980, norm(x): 0.3957, norm(y): 1.0108, norm:1.0779, tok/sec: 143162.00, flops:111.50, batch-reuse:1
@ 1317 train 5.2058 , allloss: 5.2076, dt: 906.80ms, fracRes: 0.1963, norm(attn): 0.2412, norm(output): 0.4980, norm(x): 0.3958, norm(y): 1.0109, norm:0.9549, tok/sec: 144542.95, flops:112.57, batch-reuse:1
@ 1318 train 5.1101 , allloss: 5.1120, dt: 904.81ms, fracRes: 0.1935, norm(attn): 0.2402, norm(output): 0.4980, norm(x): 0.3974, norm(y): 1.0108, norm:0.8737, tok/sec: 144860.63, flops:112.82, batch-reuse:1
@ 1319 train 5.2251 , allloss: 5.2273, dt: 916.94ms, fracRes: 0.1927, norm(attn): 0.2373, norm(output): 0.5000, norm(x): 0.4017, norm(y): 1.0107, norm:1.0036, tok/sec: 142945.02, flops:111.33, batch-reuse:1
@ 1320 train 5.2647 , allloss: 5.2659, dt: 910.92ms, fracRes: 0.1980, norm(attn): 0.2354, norm(output): 0.5000, norm(x): 0.4003, norm(y): 1.0108, norm:1.0748, tok/sec: 143889.37, flops:112.06, batch-reuse:1
@ 1321 train 5.1931 , allloss: 5.1939, dt: 932.73ms, fracRes: 0.2016, norm(attn): 0.2393, norm(output): 0.4980, norm(x): 0.3972, norm(y): 1.0110, norm:0.9077, tok/sec: 140525.49, flops:109.44, batch-reuse:1
@ 1322 train 5.1886 , allloss: 5.1892, dt: 927.46ms, fracRes: 0.2009, norm(attn): 0.2480, norm(output): 0.4980, norm(x): 0.3982, norm(y): 1.0107, norm:1.0629, tok/sec: 141323.62, flops:110.06, batch-reuse:1
@ 1323 train 5.1717 , allloss: 5.1729, dt: 926.59ms, fracRes: 0.2004, norm(attn): 0.2500, norm(output): 0.4941, norm(x): 0.3987, norm(y): 1.0106, norm:0.9065, tok/sec: 141456.17, flops:110.17, batch-reuse:1
@ 1324 train 5.2027 , allloss: 5.2037, dt: 884.16ms, fracRes: 0.1997, norm(attn): 0.2471, norm(output): 0.4980, norm(x): 0.3994, norm(y): 1.0108, norm:0.8062, tok/sec: 148243.98, flops:115.45, batch-reuse:1
@ 1325 train 5.1255 , allloss: 5.1263, dt: 891.15ms, fracRes: 0.1976, norm(attn): 0.2461, norm(output): 0.5000, norm(x): 0.4027, norm(y): 1.0109, norm:0.8949, tok/sec: 147082.61, flops:114.55, batch-reuse:1
@ 1326 train 5.1110 , allloss: 5.1119, dt: 898.46ms, fracRes: 0.1956, norm(attn): 0.2461, norm(output): 0.5000, norm(x): 0.4022, norm(y): 1.0110, norm:1.0047, tok/sec: 145884.92, flops:113.62, batch-reuse:1
@ 1327 train 5.2215 , allloss: 5.2224, dt: 892.97ms, fracRes: 0.1944, norm(attn): 0.2471, norm(output): 0.5039, norm(x): 0.4050, norm(y): 1.0109, norm:1.1926, tok/sec: 146781.33, flops:114.31, batch-reuse:1
@ 1328 train 5.1769 , allloss: 5.1785, dt: 911.72ms, fracRes: 0.1956, norm(attn): 0.2490, norm(output): 0.4980, norm(x): 0.4014, norm(y): 1.0107, norm:0.9540, tok/sec: 143762.98, flops:111.96, batch-reuse:1
@ 1329 train 5.1809 , allloss: 5.1819, dt: 896.83ms, fracRes: 0.1967, norm(attn): 0.2461, norm(output): 0.4961, norm(x): 0.3984, norm(y): 1.0108, norm:0.9425, tok/sec: 146150.86, flops:113.82, batch-reuse:1
@ 1330 train 5.2375 , allloss: 5.2380, dt: 917.51ms, fracRes: 0.1949, norm(attn): 0.2490, norm(output): 0.5000, norm(x): 0.4064, norm(y): 1.0109, norm:0.9941, tok/sec: 142856.83, flops:111.26, batch-reuse:1
@ 1331 train 5.2287 , allloss: 5.2296, dt: 913.95ms, fracRes: 0.1935, norm(attn): 0.2451, norm(output): 0.5039, norm(x): 0.4083, norm(y): 1.0110, norm:1.3297, tok/sec: 143412.40, flops:111.69, batch-reuse:1
@ 1332 train 5.1410 , allloss: 5.1421, dt: 896.13ms, fracRes: 0.1913, norm(attn): 0.2461, norm(output): 0.5078, norm(x): 0.4153, norm(y): 1.0109, norm:1.3611, tok/sec: 146265.06, flops:113.91, batch-reuse:1
@ 1333 train 5.1377 , allloss: 5.1413, dt: 897.56ms, fracRes: 0.1917, norm(attn): 0.2461, norm(output): 0.5039, norm(x): 0.4126, norm(y): 1.0108, norm:1.0221, tok/sec: 146031.13, flops:113.73, batch-reuse:1
@ 1334 train 5.1678 , allloss: 5.1702, dt: 901.97ms, fracRes: 0.1981, norm(attn): 0.2373, norm(output): 0.5000, norm(x): 0.4072, norm(y): 1.0110, norm:0.9697, tok/sec: 145318.25, flops:113.17, batch-reuse:1
@ 1335 train 5.1975 , allloss: 5.1990, dt: 899.69ms, fracRes: 0.1963, norm(attn): 0.2383, norm(output): 0.5039, norm(x): 0.4114, norm(y): 1.0110, norm:1.0390, tok/sec: 145685.13, flops:113.46, batch-reuse:1
@ 1336 train 5.1867 , allloss: 5.1884, dt: 903.26ms, fracRes: 0.2024, norm(attn): 0.2402, norm(output): 0.5078, norm(x): 0.4107, norm(y): 1.0112, norm:1.2251, tok/sec: 145110.05, flops:113.01, batch-reuse:1
@ 1337 train 5.1929 , allloss: 5.1942, dt: 902.04ms, fracRes: 0.2025, norm(attn): 0.2412, norm(output): 0.5039, norm(x): 0.4093, norm(y): 1.0112, norm:1.1192, tok/sec: 145305.93, flops:113.16, batch-reuse:1
@ 1338 train 5.1962 , allloss: 5.1972, dt: 894.29ms, fracRes: 0.2009, norm(attn): 0.2373, norm(output): 0.5039, norm(x): 0.4077, norm(y): 1.0112, norm:1.1140, tok/sec: 146565.51, flops:114.15, batch-reuse:1
@ 1339 train 5.1696 , allloss: 5.1707, dt: 906.55ms, fracRes: 0.2031, norm(attn): 0.2461, norm(output): 0.5000, norm(x): 0.4035, norm(y): 1.0111, norm:1.2011, tok/sec: 144583.51, flops:112.60, batch-reuse:1
@ 1340 train 5.1570 , allloss: 5.1578, dt: 884.54ms, fracRes: 0.1963, norm(attn): 0.2480, norm(output): 0.5000, norm(x): 0.4091, norm(y): 1.0109, norm:1.0510, tok/sec: 148180.68, flops:115.40, batch-reuse:1
@ 1341 train 5.2009 , allloss: 5.2022, dt: 922.20ms, fracRes: 0.1942, norm(attn): 0.2441, norm(output): 0.5039, norm(x): 0.4136, norm(y): 1.0108, norm:0.8817, tok/sec: 142130.43, flops:110.69, batch-reuse:1
@ 1342 train 5.2826 , allloss: 5.2876, dt: 881.86ms, fracRes: 0.1957, norm(attn): 0.2471, norm(output): 0.5039, norm(x): 0.4165, norm(y): 1.0109, norm:0.9949, tok/sec: 148631.74, flops:115.75, batch-reuse:1
@ 1343 train 5.1131 , allloss: 5.1150, dt: 904.54ms, fracRes: 0.1963, norm(attn): 0.2500, norm(output): 0.5117, norm(x): 0.4166, norm(y): 1.0109, norm:0.9231, tok/sec: 144905.00, flops:112.85, batch-reuse:1
@ 1344 train 5.1440 , allloss: 5.1450, dt: 903.82ms, fracRes: 0.2024, norm(attn): 0.2451, norm(output): 0.5117, norm(x): 0.4160, norm(y): 1.0112, norm:1.2463, tok/sec: 145019.83, flops:112.94, batch-reuse:1
@ 1345 train 5.0829 , allloss: 5.0837, dt: 894.09ms, fracRes: 0.2048, norm(attn): 0.2412, norm(output): 0.5039, norm(x): 0.4115, norm(y): 1.0112, norm:1.3454, tok/sec: 146598.03, flops:114.17, batch-reuse:1
@ 1346 train 5.1323 , allloss: 5.1334, dt: 894.85ms, fracRes: 0.2049, norm(attn): 0.2441, norm(output): 0.5039, norm(x): 0.4111, norm(y): 1.0111, norm:1.1491, tok/sec: 146474.33, flops:114.07, batch-reuse:1
@ 1347 train 5.0999 , allloss: 5.1005, dt: 901.93ms, fracRes: 0.2034, norm(attn): 0.2471, norm(output): 0.5039, norm(x): 0.4160, norm(y): 1.0109, norm:1.0066, tok/sec: 145323.86, flops:113.18, batch-reuse:1
@ 1348 train 5.1353 , allloss: 5.1362, dt: 899.39ms, fracRes: 0.2065, norm(attn): 0.2451, norm(output): 0.5078, norm(x): 0.4144, norm(y): 1.0111, norm:0.9838, tok/sec: 145735.11, flops:113.50, batch-reuse:1
@ 1349 train 5.1715 , allloss: 5.1723, dt: 903.13ms, fracRes: 0.2053, norm(attn): 0.2402, norm(output): 0.5117, norm(x): 0.4161, norm(y): 1.0112, norm:1.0206, tok/sec: 145130.51, flops:113.03, batch-reuse:1
@ 1350 train 5.0652 , allloss: 5.0661, dt: 905.95ms, fracRes: 0.2057, norm(attn): 0.2451, norm(output): 0.5117, norm(x): 0.4172, norm(y): 1.0111, norm:1.1114, tok/sec: 144679.40, flops:112.68, batch-reuse:1
@ 1351 train 5.1143 , allloss: 5.1155, dt: 892.75ms, fracRes: 0.2032, norm(attn): 0.2461, norm(output): 0.5078, norm(x): 0.4187, norm(y): 1.0108, norm:1.0411, tok/sec: 146818.18, flops:114.34, batch-reuse:1
@ 1352 train 5.2206 , allloss: 5.2216, dt: 894.65ms, fracRes: 0.2022, norm(attn): 0.2480, norm(output): 0.5078, norm(x): 0.4167, norm(y): 1.0109, norm:1.0497, tok/sec: 146506.07, flops:114.10, batch-reuse:1
@ 1353 train 5.1537 , allloss: 5.1546, dt: 897.35ms, fracRes: 0.1996, norm(attn): 0.2471, norm(output): 0.5195, norm(x): 0.4234, norm(y): 1.0109, norm:1.0828, tok/sec: 146065.63, flops:113.76, batch-reuse:1
@ 1354 train 5.1714 , allloss: 5.1722, dt: 899.75ms, fracRes: 0.1994, norm(attn): 0.2480, norm(output): 0.5234, norm(x): 0.4226, norm(y): 1.0110, norm:1.1038, tok/sec: 145676.10, flops:113.45, batch-reuse:1
@ 1355 train 5.1636 , allloss: 5.1643, dt: 920.29ms, fracRes: 0.1994, norm(attn): 0.2461, norm(output): 0.5156, norm(x): 0.4185, norm(y): 1.0110, norm:0.8839, tok/sec: 142424.52, flops:110.92, batch-reuse:1
@ 1356 train 5.1830 , allloss: 5.1839, dt: 907.42ms, fracRes: 0.2047, norm(attn): 0.2461, norm(output): 0.5078, norm(x): 0.4162, norm(y): 1.0111, norm:0.9915, tok/sec: 144445.42, flops:112.49, batch-reuse:1
@ 1357 train 5.1582 , allloss: 5.1588, dt: 917.64ms, fracRes: 0.2009, norm(attn): 0.2461, norm(output): 0.5195, norm(x): 0.4205, norm(y): 1.0110, norm:1.0392, tok/sec: 142835.57, flops:111.24, batch-reuse:1
@ 1358 train 5.1253 , allloss: 5.1259, dt: 917.40ms, fracRes: 0.2032, norm(attn): 0.2490, norm(output): 0.5273, norm(x): 0.4212, norm(y): 1.0111, norm:1.1451, tok/sec: 142872.76, flops:111.27, batch-reuse:1
@ 1359 train 5.0400 , allloss: 5.0406, dt: 920.83ms, fracRes: 0.2065, norm(attn): 0.2500, norm(output): 0.5273, norm(x): 0.4213, norm(y): 1.0113, norm:1.0040, tok/sec: 142341.88, flops:110.86, batch-reuse:1
@ 1360 train 5.0644 , allloss: 5.0651, dt: 904.12ms, fracRes: 0.2033, norm(attn): 0.2490, norm(output): 0.5273, norm(x): 0.4241, norm(y): 1.0110, norm:0.8859, tok/sec: 144971.19, flops:112.90, batch-reuse:1
@ 1361 train 5.1293 , allloss: 5.1302, dt: 914.57ms, fracRes: 0.2066, norm(attn): 0.2500, norm(output): 0.5273, norm(x): 0.4222, norm(y): 1.0111, norm:0.8642, tok/sec: 143315.65, flops:111.61, batch-reuse:1
@ 1362 train 5.2022 , allloss: 5.2031, dt: 905.04ms, fracRes: 0.2070, norm(attn): 0.2500, norm(output): 0.5195, norm(x): 0.4193, norm(y): 1.0111, norm:0.8670, tok/sec: 144823.81, flops:112.79, batch-reuse:1
@ 1363 train 5.1231 , allloss: 5.1240, dt: 905.75ms, fracRes: 0.2069, norm(attn): 0.2461, norm(output): 0.5156, norm(x): 0.4181, norm(y): 1.0112, norm:1.0473, tok/sec: 144711.73, flops:112.70, batch-reuse:1
@ 1364 train 5.0458 , allloss: 5.0466, dt: 897.62ms, fracRes: 0.2030, norm(attn): 0.2461, norm(output): 0.5273, norm(x): 0.4250, norm(y): 1.0110, norm:1.1262, tok/sec: 146022.48, flops:113.72, batch-reuse:1
@ 1365 train 5.1569 , allloss: 5.1577, dt: 911.61ms, fracRes: 0.2060, norm(attn): 0.2490, norm(output): 0.5273, norm(x): 0.4250, norm(y): 1.0109, norm:1.0511, tok/sec: 143781.48, flops:111.98, batch-reuse:1
@ 1366 train 5.0984 , allloss: 5.0989, dt: 905.31ms, fracRes: 0.2119, norm(attn): 0.2461, norm(output): 0.5234, norm(x): 0.4204, norm(y): 1.0111, norm:0.9316, tok/sec: 144781.70, flops:112.76, batch-reuse:1
@ 1367 train 5.0581 , allloss: 5.0585, dt: 908.01ms, fracRes: 0.2128, norm(attn): 0.2461, norm(output): 0.5273, norm(x): 0.4234, norm(y): 1.0112, norm:0.8986, tok/sec: 144351.10, flops:112.42, batch-reuse:1
@ 1368 train 5.2123 , allloss: 5.2131, dt: 892.89ms, fracRes: 0.2135, norm(attn): 0.2451, norm(output): 0.5273, norm(x): 0.4259, norm(y): 1.0112, norm:1.0629, tok/sec: 146795.12, flops:114.32, batch-reuse:1
@ 1369 train 5.1999 , allloss: 5.2003, dt: 908.28ms, fracRes: 0.2102, norm(attn): 0.2490, norm(output): 0.5273, norm(x): 0.4267, norm(y): 1.0111, norm:1.0306, tok/sec: 144307.67, flops:112.39, batch-reuse:1
@ 1370 train 5.0683 , allloss: 5.0695, dt: 905.72ms, fracRes: 0.2112, norm(attn): 0.2500, norm(output): 0.5234, norm(x): 0.4246, norm(y): 1.0110, norm:0.8877, tok/sec: 144716.15, flops:112.71, batch-reuse:1
@ 1371 train 5.2133 , allloss: 5.2140, dt: 905.69ms, fracRes: 0.2127, norm(attn): 0.2441, norm(output): 0.5273, norm(x): 0.4240, norm(y): 1.0110, norm:0.9752, tok/sec: 144720.11, flops:112.71, batch-reuse:1
@ 1372 train 5.0837 , allloss: 5.0846, dt: 897.80ms, fracRes: 0.2099, norm(attn): 0.2490, norm(output): 0.5312, norm(x): 0.4288, norm(y): 1.0109, norm:1.2829, tok/sec: 145992.16, flops:113.70, batch-reuse:1
@ 1373 train 5.0842 , allloss: 5.0848, dt: 895.44ms, fracRes: 0.2076, norm(attn): 0.2520, norm(output): 0.5312, norm(x): 0.4323, norm(y): 1.0108, norm:1.0524, tok/sec: 146376.68, flops:114.00, batch-reuse:1
@ 1374 train 5.0738 , allloss: 5.0747, dt: 912.82ms, fracRes: 0.2095, norm(attn): 0.2490, norm(output): 0.5312, norm(x): 0.4271, norm(y): 1.0111, norm:0.9831, tok/sec: 143590.40, flops:111.83, batch-reuse:1
@ 1375 train 5.0709 , allloss: 5.0714, dt: 902.63ms, fracRes: 0.2063, norm(attn): 0.2480, norm(output): 0.5352, norm(x): 0.4307, norm(y): 1.0111, norm:1.1507, tok/sec: 145210.82, flops:113.09, batch-reuse:1
@ 1376 train 5.0371 , allloss: 5.0402, dt: 905.61ms, fracRes: 0.2054, norm(attn): 0.2520, norm(output): 0.5352, norm(x): 0.4285, norm(y): 1.0112, norm:1.3488, tok/sec: 144732.91, flops:112.72, batch-reuse:1
@ 1377 train 5.0252 , allloss: 5.0261, dt: 905.53ms, fracRes: 0.2069, norm(attn): 0.2500, norm(output): 0.5312, norm(x): 0.4302, norm(y): 1.0111, norm:0.9494, tok/sec: 144746.56, flops:112.73, batch-reuse:1
@ 1378 train 5.1521 , allloss: 5.1530, dt: 908.37ms, fracRes: 0.2076, norm(attn): 0.2500, norm(output): 0.5391, norm(x): 0.4357, norm(y): 1.0111, norm:1.0276, tok/sec: 144293.28, flops:112.38, batch-reuse:1
@ 1379 train 5.1225 , allloss: 5.1230, dt: 906.75ms, fracRes: 0.2074, norm(attn): 0.2500, norm(output): 0.5352, norm(x): 0.4342, norm(y): 1.0112, norm:1.0235, tok/sec: 144552.00, flops:112.58, batch-reuse:1
@ 1380 train 5.0054 , allloss: 5.0068, dt: 908.44ms, fracRes: 0.2049, norm(attn): 0.2500, norm(output): 0.5312, norm(x): 0.4341, norm(y): 1.0109, norm:0.9037, tok/sec: 144283.09, flops:112.37, batch-reuse:1
@ 1381 train 5.0593 , allloss: 5.0602, dt: 910.42ms, fracRes: 0.2068, norm(attn): 0.2500, norm(output): 0.5352, norm(x): 0.4347, norm(y): 1.0111, norm:0.9471, tok/sec: 143969.18, flops:112.12, batch-reuse:1
@ 1382 train 5.0608 , allloss: 5.0614, dt: 906.66ms, fracRes: 0.2062, norm(attn): 0.2500, norm(output): 0.5430, norm(x): 0.4413, norm(y): 1.0111, norm:1.0698, tok/sec: 144565.11, flops:112.59, batch-reuse:1
@ 1383 train 5.1198 , allloss: 5.1203, dt: 909.30ms, fracRes: 0.2096, norm(attn): 0.2520, norm(output): 0.5391, norm(x): 0.4360, norm(y): 1.0112, norm:1.0634, tok/sec: 144145.62, flops:112.26, batch-reuse:1
@ 1384 train 4.9715 , allloss: 4.9725, dt: 905.07ms, fracRes: 0.2100, norm(attn): 0.2520, norm(output): 0.5352, norm(x): 0.4347, norm(y): 1.0112, norm:0.9791, tok/sec: 144819.99, flops:112.79, batch-reuse:1
@ 1385 train 5.0749 , allloss: 5.0760, dt: 913.28ms, fracRes: 0.2097, norm(attn): 0.2520, norm(output): 0.5352, norm(x): 0.4355, norm(y): 1.0111, norm:0.9984, tok/sec: 143518.09, flops:111.77, batch-reuse:1
@ 1386 train 5.0443 , allloss: 5.0456, dt: 912.57ms, fracRes: 0.2070, norm(attn): 0.2520, norm(output): 0.5430, norm(x): 0.4394, norm(y): 1.0110, norm:0.9196, tok/sec: 143629.08, flops:111.86, batch-reuse:1
@ 1387 train 5.0293 , allloss: 5.0303, dt: 904.22ms, fracRes: 0.2085, norm(attn): 0.2500, norm(output): 0.5391, norm(x): 0.4385, norm(y): 1.0112, norm:0.9053, tok/sec: 144955.93, flops:112.89, batch-reuse:1
@ 1388 train 5.0936 , allloss: 5.0946, dt: 915.21ms, fracRes: 0.2088, norm(attn): 0.2500, norm(output): 0.5391, norm(x): 0.4409, norm(y): 1.0112, norm:0.9350, tok/sec: 143215.18, flops:111.54, batch-reuse:1
@ 1389 train 4.9095 , allloss: 4.9103, dt: 914.15ms, fracRes: 0.2093, norm(attn): 0.2520, norm(output): 0.5430, norm(x): 0.4421, norm(y): 1.0112, norm:0.9362, tok/sec: 143380.68, flops:111.67, batch-reuse:1
@ 1390 train 5.1764 , allloss: 5.1770, dt: 907.16ms, fracRes: 0.2165, norm(attn): 0.2500, norm(output): 0.5469, norm(x): 0.4393, norm(y): 1.0114, norm:1.0779, tok/sec: 144486.42, flops:112.53, batch-reuse:1
@ 1391 train 5.0685 , allloss: 5.0691, dt: 909.45ms, fracRes: 0.2153, norm(attn): 0.2500, norm(output): 0.5391, norm(x): 0.4390, norm(y): 1.0115, norm:1.0145, tok/sec: 144121.70, flops:112.24, batch-reuse:1
@ 1392 train 5.0388 , allloss: 5.0394, dt: 906.20ms, fracRes: 0.2121, norm(attn): 0.2490, norm(output): 0.5508, norm(x): 0.4431, norm(y): 1.0113, norm:1.1861, tok/sec: 144639.92, flops:112.65, batch-reuse:1
@ 1393 train 5.0242 , allloss: 5.0255, dt: 893.85ms, fracRes: 0.2107, norm(attn): 0.2500, norm(output): 0.5391, norm(x): 0.4424, norm(y): 1.0111, norm:1.1384, tok/sec: 146637.56, flops:114.20, batch-reuse:1
@ 1394 train 4.9959 , allloss: 4.9972, dt: 889.71ms, fracRes: 0.2164, norm(attn): 0.2500, norm(output): 0.5352, norm(x): 0.4376, norm(y): 1.0111, norm:0.9055, tok/sec: 147319.13, flops:114.73, batch-reuse:1
@ 1395 train 5.0100 , allloss: 5.0109, dt: 908.03ms, fracRes: 0.2167, norm(attn): 0.2490, norm(output): 0.5391, norm(x): 0.4376, norm(y): 1.0113, norm:0.8683, tok/sec: 144347.35, flops:112.42, batch-reuse:1
@ 1396 train 5.0115 , allloss: 5.0124, dt: 905.30ms, fracRes: 0.2121, norm(attn): 0.2490, norm(output): 0.5391, norm(x): 0.4415, norm(y): 1.0112, norm:0.9085, tok/sec: 144783.27, flops:112.76, batch-reuse:1
@ 1397 train 5.0483 , allloss: 5.0489, dt: 894.12ms, fracRes: 0.2098, norm(attn): 0.2500, norm(output): 0.5508, norm(x): 0.4477, norm(y): 1.0112, norm:1.1165, tok/sec: 146593.54, flops:114.17, batch-reuse:1
@ 1398 train 5.0410 , allloss: 5.0417, dt: 901.31ms, fracRes: 0.2131, norm(attn): 0.2500, norm(output): 0.5508, norm(x): 0.4427, norm(y): 1.0114, norm:0.9811, tok/sec: 145423.31, flops:113.26, batch-reuse:1
@ 1399 train 4.9549 , allloss: 4.9556, dt: 908.67ms, fracRes: 0.2143, norm(attn): 0.2520, norm(output): 0.5391, norm(x): 0.4398, norm(y): 1.0113, norm:0.8783, tok/sec: 144245.69, flops:112.34, batch-reuse:1
@ 1400 train 5.0977 , allloss: 5.0984, dt: 907.82ms, fracRes: 0.2139, norm(attn): 0.2559, norm(output): 0.5508, norm(x): 0.4443, norm(y): 1.0111, norm:0.9129, tok/sec: 144380.90, flops:112.44, batch-reuse:1
@ 1401 train 4.9956 , allloss: 4.9965, dt: 907.37ms, fracRes: 0.2123, norm(attn): 0.2500, norm(output): 0.5547, norm(x): 0.4448, norm(y): 1.0113, norm:0.9371, tok/sec: 144453.01, flops:112.50, batch-reuse:1
@ 1402 train 4.9212 , allloss: 4.9219, dt: 902.06ms, fracRes: 0.2125, norm(attn): 0.2490, norm(output): 0.5586, norm(x): 0.4446, norm(y): 1.0114, norm:0.8872, tok/sec: 145303.77, flops:113.16, batch-reuse:1
@ 1403 train 5.0603 , allloss: 5.0609, dt: 911.84ms, fracRes: 0.2154, norm(attn): 0.2490, norm(output): 0.5586, norm(x): 0.4452, norm(y): 1.0114, norm:0.9626, tok/sec: 143743.73, flops:111.95, batch-reuse:1
@ 1404 train 4.9675 , allloss: 4.9682, dt: 925.54ms, fracRes: 0.2184, norm(attn): 0.2520, norm(output): 0.5508, norm(x): 0.4438, norm(y): 1.0113, norm:0.8548, tok/sec: 141617.19, flops:110.29, batch-reuse:1
@ 1405 train 4.9977 , allloss: 4.9983, dt: 904.95ms, fracRes: 0.2179, norm(attn): 0.2539, norm(output): 0.5508, norm(x): 0.4488, norm(y): 1.0112, norm:0.8021, tok/sec: 144839.03, flops:112.80, batch-reuse:1
@ 1406 train 5.1327 , allloss: 5.1334, dt: 929.53ms, fracRes: 0.2170, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.4531, norm(y): 1.0111, norm:0.7987, tok/sec: 141008.30, flops:109.82, batch-reuse:1
@ 1407 train 4.9918 , allloss: 4.9923, dt: 914.46ms, fracRes: 0.2170, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.4533, norm(y): 1.0112, norm:1.0650, tok/sec: 143333.43, flops:111.63, batch-reuse:1
@ 1408 train 4.9916 , allloss: 4.9921, dt: 898.92ms, fracRes: 0.2206, norm(attn): 0.2500, norm(output): 0.5547, norm(x): 0.4486, norm(y): 1.0113, norm:1.0736, tok/sec: 145809.98, flops:113.56, batch-reuse:1
@ 1409 train 5.0016 , allloss: 5.0024, dt: 900.39ms, fracRes: 0.2202, norm(attn): 0.2520, norm(output): 0.5508, norm(x): 0.4489, norm(y): 1.0112, norm:0.7892, tok/sec: 145572.18, flops:113.37, batch-reuse:1
@ 1410 train 4.9652 , allloss: 4.9657, dt: 904.27ms, fracRes: 0.2189, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.4522, norm(y): 1.0114, norm:0.7299, tok/sec: 144948.37, flops:112.89, batch-reuse:1
@ 1411 train 4.9657 , allloss: 4.9661, dt: 905.72ms, fracRes: 0.2172, norm(attn): 0.2500, norm(output): 0.5625, norm(x): 0.4558, norm(y): 1.0114, norm:0.9763, tok/sec: 144716.00, flops:112.71, batch-reuse:1
@ 1412 train 4.9368 , allloss: 4.9373, dt: 897.58ms, fracRes: 0.2168, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.4530, norm(y): 1.0115, norm:1.1482, tok/sec: 146028.50, flops:113.73, batch-reuse:1
@ 1413 train 4.9825 , allloss: 4.9831, dt: 909.41ms, fracRes: 0.2122, norm(attn): 0.2500, norm(output): 0.5586, norm(x): 0.4552, norm(y): 1.0112, norm:1.0672, tok/sec: 144128.54, flops:112.25, batch-reuse:1
@ 1414 train 4.9435 , allloss: 4.9444, dt: 907.72ms, fracRes: 0.2125, norm(attn): 0.2520, norm(output): 0.5586, norm(x): 0.4556, norm(y): 1.0112, norm:0.8868, tok/sec: 144397.66, flops:112.46, batch-reuse:1
@ 1415 train 5.0527 , allloss: 5.0533, dt: 896.15ms, fracRes: 0.2151, norm(attn): 0.2539, norm(output): 0.5586, norm(x): 0.4544, norm(y): 1.0113, norm:1.0220, tok/sec: 146261.17, flops:113.91, batch-reuse:1
@ 1416 train 5.0339 , allloss: 5.0350, dt: 898.70ms, fracRes: 0.2184, norm(attn): 0.2559, norm(output): 0.5625, norm(x): 0.4575, norm(y): 1.0113, norm:0.8949, tok/sec: 145845.45, flops:113.58, batch-reuse:1
@ 1417 train 4.9845 , allloss: 4.9878, dt: 914.80ms, fracRes: 0.2162, norm(attn): 0.2520, norm(output): 0.5625, norm(x): 0.4548, norm(y): 1.0113, norm:0.8474, tok/sec: 143279.27, flops:111.59, batch-reuse:1
@ 1418 train 4.9681 , allloss: 4.9694, dt: 921.73ms, fracRes: 0.2159, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.4576, norm(y): 1.0113, norm:0.8013, tok/sec: 142201.86, flops:110.75, batch-reuse:1
@ 1419 train 5.0722 , allloss: 5.0732, dt: 900.35ms, fracRes: 0.2140, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.4623, norm(y): 1.0113, norm:0.8419, tok/sec: 145578.66, flops:113.38, batch-reuse:1
@ 1420 train 5.0538 , allloss: 5.0548, dt: 899.81ms, fracRes: 0.2149, norm(attn): 0.2539, norm(output): 0.5664, norm(x): 0.4617, norm(y): 1.0113, norm:0.8527, tok/sec: 145667.11, flops:113.45, batch-reuse:1
@ 1421 train 5.0073 , allloss: 5.0080, dt: 902.04ms, fracRes: 0.2160, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.4621, norm(y): 1.0113, norm:0.8828, tok/sec: 145306.92, flops:113.17, batch-reuse:1
@ 1422 train 4.9630 , allloss: 4.9639, dt: 910.32ms, fracRes: 0.2179, norm(attn): 0.2539, norm(output): 0.5625, norm(x): 0.4580, norm(y): 1.0114, norm:0.9291, tok/sec: 143983.81, flops:112.14, batch-reuse:1
@ 1423 train 4.9655 , allloss: 4.9667, dt: 885.37ms, fracRes: 0.2139, norm(attn): 0.2598, norm(output): 0.5664, norm(x): 0.4661, norm(y): 1.0111, norm:0.9205, tok/sec: 148041.94, flops:115.30, batch-reuse:1
@ 1424 train 4.9816 , allloss: 4.9826, dt: 900.37ms, fracRes: 0.2229, norm(attn): 0.2490, norm(output): 0.5664, norm(x): 0.4585, norm(y): 1.0117, norm:0.9312, tok/sec: 145576.34, flops:113.38, batch-reuse:1
@ 1425 train 4.9759 , allloss: 4.9769, dt: 891.80ms, fracRes: 0.2251, norm(attn): 0.2480, norm(output): 0.5664, norm(x): 0.4546, norm(y): 1.0119, norm:1.0018, tok/sec: 146974.00, flops:114.46, batch-reuse:1
@ 1426 train 4.8629 , allloss: 4.8637, dt: 899.72ms, fracRes: 0.2249, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.4564, norm(y): 1.0117, norm:0.9793, tok/sec: 145680.77, flops:113.46, batch-reuse:1
@ 1427 train 4.9556 , allloss: 4.9563, dt: 911.32ms, fracRes: 0.2245, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.4613, norm(y): 1.0115, norm:0.9552, tok/sec: 143826.09, flops:112.01, batch-reuse:1
@ 1428 train 4.9451 , allloss: 4.9457, dt: 900.56ms, fracRes: 0.2261, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.4581, norm(y): 1.0117, norm:0.9422, tok/sec: 145544.43, flops:113.35, batch-reuse:1
@ 1429 train 4.9478 , allloss: 4.9487, dt: 902.05ms, fracRes: 0.2258, norm(attn): 0.2539, norm(output): 0.5742, norm(x): 0.4630, norm(y): 1.0117, norm:1.2000, tok/sec: 145304.54, flops:113.16, batch-reuse:1
@ 1430 train 5.0125 , allloss: 5.0133, dt: 918.44ms, fracRes: 0.2237, norm(attn): 0.2500, norm(output): 0.5664, norm(x): 0.4656, norm(y): 1.0115, norm:1.0919, tok/sec: 142711.58, flops:111.14, batch-reuse:1
@ 1431 train 4.9559 , allloss: 4.9566, dt: 910.69ms, fracRes: 0.2208, norm(attn): 0.2520, norm(output): 0.5664, norm(x): 0.4710, norm(y): 1.0113, norm:1.1087, tok/sec: 143926.40, flops:112.09, batch-reuse:1
@ 1432 train 4.9098 , allloss: 4.9105, dt: 929.64ms, fracRes: 0.2184, norm(attn): 0.2520, norm(output): 0.5703, norm(x): 0.4711, norm(y): 1.0113, norm:0.9381, tok/sec: 140991.91, flops:109.81, batch-reuse:1
@ 1433 train 4.9675 , allloss: 4.9685, dt: 932.46ms, fracRes: 0.2210, norm(attn): 0.2539, norm(output): 0.5742, norm(x): 0.4707, norm(y): 1.0115, norm:0.9254, tok/sec: 140565.70, flops:109.47, batch-reuse:1
@ 1434 train 5.0114 , allloss: 5.0132, dt: 900.06ms, fracRes: 0.2223, norm(attn): 0.2539, norm(output): 0.5742, norm(x): 0.4713, norm(y): 1.0115, norm:0.8809, tok/sec: 145625.55, flops:113.41, batch-reuse:1
@ 1435 train 4.9241 , allloss: 4.9250, dt: 904.36ms, fracRes: 0.2232, norm(attn): 0.2520, norm(output): 0.5820, norm(x): 0.4733, norm(y): 1.0115, norm:0.8695, tok/sec: 144933.04, flops:112.87, batch-reuse:1
@ 1436 train 4.9107 , allloss: 4.9114, dt: 883.08ms, fracRes: 0.2246, norm(attn): 0.2500, norm(output): 0.5781, norm(x): 0.4734, norm(y): 1.0116, norm:0.8685, tok/sec: 148426.12, flops:115.59, batch-reuse:1
@ 1437 train 4.9483 , allloss: 4.9490, dt: 900.60ms, fracRes: 0.2240, norm(attn): 0.2500, norm(output): 0.5859, norm(x): 0.4766, norm(y): 1.0116, norm:1.2421, tok/sec: 145537.80, flops:113.35, batch-reuse:1
@ 1438 train 4.8632 , allloss: 4.8640, dt: 887.55ms, fracRes: 0.2266, norm(attn): 0.2520, norm(output): 0.5898, norm(x): 0.4740, norm(y): 1.0116, norm:1.2359, tok/sec: 147677.99, flops:115.01, batch-reuse:1
@ 1439 train 4.8786 , allloss: 4.8791, dt: 880.83ms, fracRes: 0.2284, norm(attn): 0.2539, norm(output): 0.5781, norm(x): 0.4698, norm(y): 1.0116, norm:0.8681, tok/sec: 148804.98, flops:115.89, batch-reuse:1
@ 1440 train 4.9138 , allloss: 4.9143, dt: 879.65ms, fracRes: 0.2239, norm(attn): 0.2559, norm(output): 0.5859, norm(x): 0.4787, norm(y): 1.0116, norm:0.9203, tok/sec: 149004.94, flops:116.05, batch-reuse:1
@ 1441 train 4.8966 , allloss: 4.8976, dt: 902.12ms, fracRes: 0.2240, norm(attn): 0.2559, norm(output): 0.5938, norm(x): 0.4796, norm(y): 1.0116, norm:0.9881, tok/sec: 145293.98, flops:113.16, batch-reuse:1
@ 1442 train 4.9241 , allloss: 4.9255, dt: 905.33ms, fracRes: 0.2254, norm(attn): 0.2539, norm(output): 0.5781, norm(x): 0.4723, norm(y): 1.0116, norm:1.1725, tok/sec: 144778.42, flops:112.75, batch-reuse:1
@ 1443 train 4.8673 , allloss: 4.8684, dt: 911.48ms, fracRes: 0.2242, norm(attn): 0.2578, norm(output): 0.5859, norm(x): 0.4747, norm(y): 1.0115, norm:0.8819, tok/sec: 143801.34, flops:111.99, batch-reuse:1
@ 1444 train 4.8852 , allloss: 4.8862, dt: 907.31ms, fracRes: 0.2218, norm(attn): 0.2598, norm(output): 0.5938, norm(x): 0.4852, norm(y): 1.0113, norm:0.9766, tok/sec: 144462.43, flops:112.51, batch-reuse:1
@ 1445 train 4.9485 , allloss: 4.9493, dt: 905.43ms, fracRes: 0.2225, norm(attn): 0.2598, norm(output): 0.5938, norm(x): 0.4852, norm(y): 1.0114, norm:1.0488, tok/sec: 144761.80, flops:112.74, batch-reuse:1
@ 1446 train 4.9482 , allloss: 4.9487, dt: 906.51ms, fracRes: 0.2277, norm(attn): 0.2578, norm(output): 0.5859, norm(x): 0.4767, norm(y): 1.0117, norm:0.9762, tok/sec: 144589.03, flops:112.61, batch-reuse:1
@ 1447 train 4.9197 , allloss: 4.9206, dt: 905.69ms, fracRes: 0.2308, norm(attn): 0.2578, norm(output): 0.5898, norm(x): 0.4746, norm(y): 1.0118, norm:1.0703, tok/sec: 144721.06, flops:112.71, batch-reuse:1
@ 1448 train 4.9005 , allloss: 4.9013, dt: 901.72ms, fracRes: 0.2297, norm(attn): 0.2578, norm(output): 0.5859, norm(x): 0.4750, norm(y): 1.0117, norm:0.8843, tok/sec: 145357.71, flops:113.21, batch-reuse:1
@ 1449 train 4.9858 , allloss: 4.9866, dt: 900.69ms, fracRes: 0.2310, norm(attn): 0.2578, norm(output): 0.5859, norm(x): 0.4759, norm(y): 1.0116, norm:0.8020, tok/sec: 145524.01, flops:113.33, batch-reuse:1
@ 1450 train 4.9711 , allloss: 4.9723, dt: 911.51ms, fracRes: 0.2314, norm(attn): 0.2539, norm(output): 0.5977, norm(x): 0.4812, norm(y): 1.0117, norm:0.9115, tok/sec: 143795.84, flops:111.99, batch-reuse:1
@ 1451 train 4.9425 , allloss: 4.9435, dt: 900.67ms, fracRes: 0.2320, norm(attn): 0.2559, norm(output): 0.6016, norm(x): 0.4867, norm(y): 1.0117, norm:0.9149, tok/sec: 145527.87, flops:113.34, batch-reuse:1
@ 1452 train 4.8712 , allloss: 4.8725, dt: 895.51ms, fracRes: 0.2299, norm(attn): 0.2539, norm(output): 0.6055, norm(x): 0.4896, norm(y): 1.0116, norm:1.1233, tok/sec: 146366.12, flops:113.99, batch-reuse:1
@ 1453 train 4.9583 , allloss: 4.9593, dt: 902.69ms, fracRes: 0.2278, norm(attn): 0.2598, norm(output): 0.6055, norm(x): 0.4899, norm(y): 1.0115, norm:1.1310, tok/sec: 145201.42, flops:113.08, batch-reuse:1
@ 1454 train 4.9180 , allloss: 4.9187, dt: 900.40ms, fracRes: 0.2269, norm(attn): 0.2598, norm(output): 0.5938, norm(x): 0.4872, norm(y): 1.0114, norm:0.9725, tok/sec: 145570.79, flops:113.37, batch-reuse:1
@ 1455 train 4.8445 , allloss: 4.8458, dt: 909.55ms, fracRes: 0.2265, norm(attn): 0.2578, norm(output): 0.5938, norm(x): 0.4895, norm(y): 1.0115, norm:1.0192, tok/sec: 144106.25, flops:112.23, batch-reuse:1
@ 1456 train 4.8698 , allloss: 4.8711, dt: 906.13ms, fracRes: 0.2303, norm(attn): 0.2578, norm(output): 0.6016, norm(x): 0.4872, norm(y): 1.0116, norm:1.0164, tok/sec: 144650.12, flops:112.65, batch-reuse:1
@ 1457 train 4.8849 , allloss: 4.8866, dt: 904.67ms, fracRes: 0.2273, norm(attn): 0.2617, norm(output): 0.5938, norm(x): 0.4875, norm(y): 1.0114, norm:0.7981, tok/sec: 144883.43, flops:112.84, batch-reuse:1
@ 1458 train 4.9342 , allloss: 4.9352, dt: 906.92ms, fracRes: 0.2275, norm(attn): 0.2617, norm(output): 0.6016, norm(x): 0.4905, norm(y): 1.0115, norm:0.9250, tok/sec: 144524.07, flops:112.56, batch-reuse:1
@ 1459 train 4.9420 , allloss: 4.9440, dt: 900.42ms, fracRes: 0.2264, norm(attn): 0.2598, norm(output): 0.5898, norm(x): 0.4892, norm(y): 1.0116, norm:0.9523, tok/sec: 145568.36, flops:113.37, batch-reuse:1
@ 1460 train 4.8938 , allloss: 4.8949, dt: 905.35ms, fracRes: 0.2279, norm(attn): 0.2637, norm(output): 0.5938, norm(x): 0.4871, norm(y): 1.0116, norm:0.9734, tok/sec: 144775.49, flops:112.75, batch-reuse:1
@ 1461 train 4.8302 , allloss: 4.8312, dt: 909.94ms, fracRes: 0.2268, norm(attn): 0.2637, norm(output): 0.6016, norm(x): 0.4899, norm(y): 1.0115, norm:0.9322, tok/sec: 144045.00, flops:112.18, batch-reuse:1
@ 1462 train 4.8740 , allloss: 4.8749, dt: 908.12ms, fracRes: 0.2256, norm(attn): 0.2637, norm(output): 0.6016, norm(x): 0.4944, norm(y): 1.0114, norm:0.8564, tok/sec: 144332.64, flops:112.41, batch-reuse:1
@ 1463 train 4.8927 , allloss: 4.8934, dt: 907.31ms, fracRes: 0.2297, norm(attn): 0.2617, norm(output): 0.6016, norm(x): 0.4921, norm(y): 1.0116, norm:0.9279, tok/sec: 144461.48, flops:112.51, batch-reuse:1
@ 1464 train 4.8925 , allloss: 4.8933, dt: 902.33ms, fracRes: 0.2339, norm(attn): 0.2578, norm(output): 0.6016, norm(x): 0.4882, norm(y): 1.0117, norm:0.8158, tok/sec: 145259.81, flops:113.13, batch-reuse:1
@ 1465 train 4.7808 , allloss: 4.7814, dt: 906.85ms, fracRes: 0.2370, norm(attn): 0.2637, norm(output): 0.6094, norm(x): 0.4892, norm(y): 1.0118, norm:0.8517, tok/sec: 144535.62, flops:112.56, batch-reuse:1
@ 1466 train 4.7643 , allloss: 4.7651, dt: 892.52ms, fracRes: 0.2345, norm(attn): 0.2578, norm(output): 0.6016, norm(x): 0.4889, norm(y): 1.0117, norm:0.8582, tok/sec: 146856.22, flops:114.37, batch-reuse:1
@ 1467 train 4.8736 , allloss: 4.8747, dt: 897.66ms, fracRes: 0.2347, norm(attn): 0.2578, norm(output): 0.6016, norm(x): 0.4870, norm(y): 1.0116, norm:0.8170, tok/sec: 146014.80, flops:113.72, batch-reuse:1
@ 1468 train 4.8976 , allloss: 4.8985, dt: 897.82ms, fracRes: 0.2350, norm(attn): 0.2578, norm(output): 0.6016, norm(x): 0.4906, norm(y): 1.0117, norm:0.9695, tok/sec: 145988.52, flops:113.70, batch-reuse:1
@ 1469 train 4.9811 , allloss: 4.9829, dt: 888.33ms, fracRes: 0.2356, norm(attn): 0.2617, norm(output): 0.6094, norm(x): 0.4902, norm(y): 1.0117, norm:0.9932, tok/sec: 147547.98, flops:114.91, batch-reuse:1
@ 1470 train 4.8878 , allloss: 4.8886, dt: 903.97ms, fracRes: 0.2318, norm(attn): 0.2637, norm(output): 0.6172, norm(x): 0.4936, norm(y): 1.0117, norm:0.9308, tok/sec: 144996.50, flops:112.92, batch-reuse:1
@ 1471 train 4.7840 , allloss: 4.7848, dt: 896.02ms, fracRes: 0.2333, norm(attn): 0.2637, norm(output): 0.6094, norm(x): 0.4907, norm(y): 1.0117, norm:1.0214, tok/sec: 146283.00, flops:113.93, batch-reuse:1
@ 1472 train 4.8378 , allloss: 4.8389, dt: 898.99ms, fracRes: 0.2367, norm(attn): 0.2656, norm(output): 0.6016, norm(x): 0.4863, norm(y): 1.0117, norm:0.8912, tok/sec: 145799.03, flops:113.55, batch-reuse:1
@ 1473 train 4.8968 , allloss: 4.8996, dt: 900.05ms, fracRes: 0.2329, norm(attn): 0.2637, norm(output): 0.6094, norm(x): 0.4936, norm(y): 1.0116, norm:0.9086, tok/sec: 145626.67, flops:113.41, batch-reuse:1
@ 1474 train 5.0401 , allloss: 5.0414, dt: 920.08ms, fracRes: 0.2332, norm(attn): 0.2617, norm(output): 0.6172, norm(x): 0.4987, norm(y): 1.0116, norm:0.9694, tok/sec: 142456.89, flops:110.95, batch-reuse:1
@ 1475 train 4.8682 , allloss: 4.8717, dt: 916.71ms, fracRes: 0.2324, norm(attn): 0.2617, norm(output): 0.6172, norm(x): 0.4978, norm(y): 1.0117, norm:0.9156, tok/sec: 142980.60, flops:111.35, batch-reuse:1
@ 1476 train 4.8234 , allloss: 4.8271, dt: 895.47ms, fracRes: 0.2327, norm(attn): 0.2637, norm(output): 0.6172, norm(x): 0.4994, norm(y): 1.0117, norm:1.0763, tok/sec: 146372.66, flops:114.00, batch-reuse:1
@ 1477 train 4.8549 , allloss: 4.8561, dt: 891.09ms, fracRes: 0.2329, norm(attn): 0.2637, norm(output): 0.6055, norm(x): 0.4965, norm(y): 1.0115, norm:1.1229, tok/sec: 147091.19, flops:114.56, batch-reuse:1
@ 1478 train 4.8212 , allloss: 4.8237, dt: 894.32ms, fracRes: 0.2344, norm(attn): 0.2637, norm(output): 0.6211, norm(x): 0.4995, norm(y): 1.0117, norm:0.8830, tok/sec: 146559.85, flops:114.14, batch-reuse:1
@ 1479 train 4.8379 , allloss: 4.8390, dt: 885.01ms, fracRes: 0.2321, norm(attn): 0.2656, norm(output): 0.6250, norm(x): 0.5084, norm(y): 1.0117, norm:0.9506, tok/sec: 148102.56, flops:115.34, batch-reuse:1
@ 1480 train 4.8825 , allloss: 4.8834, dt: 880.93ms, fracRes: 0.2334, norm(attn): 0.2598, norm(output): 0.6289, norm(x): 0.5055, norm(y): 1.0119, norm:0.9569, tok/sec: 148788.74, flops:115.88, batch-reuse:1
@ 1481 train 4.8474 , allloss: 4.8487, dt: 895.69ms, fracRes: 0.2340, norm(attn): 0.2637, norm(output): 0.6250, norm(x): 0.5050, norm(y): 1.0118, norm:0.9620, tok/sec: 146336.66, flops:113.97, batch-reuse:1
@ 1482 train 4.8986 , allloss: 4.9005, dt: 902.27ms, fracRes: 0.2353, norm(attn): 0.2656, norm(output): 0.6211, norm(x): 0.5051, norm(y): 1.0118, norm:0.8868, tok/sec: 145269.30, flops:113.14, batch-reuse:1
@ 1483 train 4.9287 , allloss: 4.9302, dt: 893.48ms, fracRes: 0.2344, norm(attn): 0.2656, norm(output): 0.6211, norm(x): 0.5041, norm(y): 1.0118, norm:0.9190, tok/sec: 146697.86, flops:114.25, batch-reuse:1
@ 1484 train 4.9836 , allloss: 4.9847, dt: 902.55ms, fracRes: 0.2340, norm(attn): 0.2656, norm(output): 0.6250, norm(x): 0.5078, norm(y): 1.0119, norm:0.9731, tok/sec: 145224.82, flops:113.10, batch-reuse:1
@ 1485 train 5.0767 , allloss: 5.0776, dt: 906.39ms, fracRes: 0.2331, norm(attn): 0.2656, norm(output): 0.6289, norm(x): 0.5152, norm(y): 1.0117, norm:1.0651, tok/sec: 144608.61, flops:112.62, batch-reuse:1
@ 1486 train 5.0324 , allloss: 5.0331, dt: 898.96ms, fracRes: 0.2335, norm(attn): 0.2656, norm(output): 0.6328, norm(x): 0.5133, norm(y): 1.0118, norm:0.9507, tok/sec: 145803.71, flops:113.55, batch-reuse:1
@ 1487 train 5.0386 , allloss: 5.0394, dt: 902.59ms, fracRes: 0.2350, norm(attn): 0.2656, norm(output): 0.6250, norm(x): 0.5078, norm(y): 1.0118, norm:1.0456, tok/sec: 145218.11, flops:113.10, batch-reuse:1
@ 1488 train 4.9902 , allloss: 4.9906, dt: 894.02ms, fracRes: 0.2362, norm(attn): 0.2656, norm(output): 0.6250, norm(x): 0.5077, norm(y): 1.0117, norm:1.1304, tok/sec: 146609.72, flops:114.18, batch-reuse:1
@ 1489 train 5.1468 , allloss: 5.1474, dt: 915.65ms, fracRes: 0.2340, norm(attn): 0.2656, norm(output): 0.6289, norm(x): 0.5112, norm(y): 1.0115, norm:1.0297, tok/sec: 143146.34, flops:111.48, batch-reuse:1
@ 1490 train 5.1839 , allloss: 5.1844, dt: 921.15ms, fracRes: 0.2351, norm(attn): 0.2617, norm(output): 0.6289, norm(x): 0.5135, norm(y): 1.0118, norm:1.0928, tok/sec: 142291.59, flops:110.82, batch-reuse:1
@ 1491 train 5.1530 , allloss: 5.1536, dt: 902.97ms, fracRes: 0.2373, norm(attn): 0.2637, norm(output): 0.6289, norm(x): 0.5132, norm(y): 1.0118, norm:1.0614, tok/sec: 145157.03, flops:113.05, batch-reuse:1
@ 1492 train 5.0237 , allloss: 5.0243, dt: 898.44ms, fracRes: 0.2377, norm(attn): 0.2656, norm(output): 0.6289, norm(x): 0.5127, norm(y): 1.0117, norm:1.0479, tok/sec: 145888.06, flops:113.62, batch-reuse:1
@ 1493 train 4.9715 , allloss: 4.9720, dt: 907.34ms, fracRes: 0.2398, norm(attn): 0.2598, norm(output): 0.6328, norm(x): 0.5097, norm(y): 1.0120, norm:0.9561, tok/sec: 144457.76, flops:112.50, batch-reuse:1
@ 1494 train 5.0055 , allloss: 5.0063, dt: 908.97ms, fracRes: 0.2379, norm(attn): 0.2598, norm(output): 0.6289, norm(x): 0.5117, norm(y): 1.0120, norm:0.9125, tok/sec: 144197.75, flops:112.30, batch-reuse:1
@ 1495 train 4.9862 , allloss: 4.9872, dt: 905.61ms, fracRes: 0.2364, norm(attn): 0.2578, norm(output): 0.6289, norm(x): 0.5114, norm(y): 1.0119, norm:0.8882, tok/sec: 144733.48, flops:112.72, batch-reuse:1
@ 1496 train 4.9970 , allloss: 4.9992, dt: 899.18ms, fracRes: 0.2353, norm(attn): 0.2598, norm(output): 0.6367, norm(x): 0.5165, norm(y): 1.0119, norm:0.8150, tok/sec: 145768.15, flops:113.52, batch-reuse:1
@ 1497 train 4.8610 , allloss: 4.8616, dt: 898.94ms, fracRes: 0.2345, norm(attn): 0.2656, norm(output): 0.6484, norm(x): 0.5180, norm(y): 1.0121, norm:0.8735, tok/sec: 145807.97, flops:113.56, batch-reuse:1
@ 1498 train 5.0681 , allloss: 5.0691, dt: 888.70ms, fracRes: 0.2345, norm(attn): 0.2656, norm(output): 0.6445, norm(x): 0.5212, norm(y): 1.0120, norm:1.0221, tok/sec: 147487.10, flops:114.86, batch-reuse:1
@ 1499 train 5.0227 , allloss: 5.0238, dt: 904.41ms, fracRes: 0.2372, norm(attn): 0.2676, norm(output): 0.6484, norm(x): 0.5224, norm(y): 1.0120, norm:1.2668, tok/sec: 144925.90, flops:112.87, batch-reuse:1
@ 1500 train 5.0914 , allloss: 5.0921, dt: 899.40ms, fracRes: 0.2366, norm(attn): 0.2637, norm(output): 0.6328, norm(x): 0.5210, norm(y): 1.0120, norm:1.1881, tok/sec: 145732.90, flops:113.50, batch-reuse:1
@ 1501 train 4.9763 , allloss: 4.9773, dt: 901.64ms, fracRes: 0.2337, norm(attn): 0.2656, norm(output): 0.6367, norm(x): 0.5249, norm(y): 1.0118, norm:1.0614, tok/sec: 145371.24, flops:113.22, batch-reuse:1
@ 1502 train 4.9717 , allloss: 4.9727, dt: 902.74ms, fracRes: 0.2377, norm(attn): 0.2656, norm(output): 0.6367, norm(x): 0.5220, norm(y): 1.0120, norm:0.9492, tok/sec: 145192.91, flops:113.08, batch-reuse:1
@ 1503 train 5.0735 , allloss: 5.0749, dt: 907.13ms, fracRes: 0.2382, norm(attn): 0.2695, norm(output): 0.6445, norm(x): 0.5220, norm(y): 1.0121, norm:0.9851, tok/sec: 144491.44, flops:112.53, batch-reuse:1
@ 1504 train 5.0804 , allloss: 5.0814, dt: 897.80ms, fracRes: 0.2383, norm(attn): 0.2656, norm(output): 0.6445, norm(x): 0.5232, norm(y): 1.0121, norm:1.0248, tok/sec: 145992.04, flops:113.70, batch-reuse:1
@ 1505 train 5.0134 , allloss: 5.0147, dt: 899.55ms, fracRes: 0.2398, norm(attn): 0.2637, norm(output): 0.6367, norm(x): 0.5210, norm(y): 1.0120, norm:0.9886, tok/sec: 145708.45, flops:113.48, batch-reuse:1
@ 1506 train 5.0774 , allloss: 5.0784, dt: 905.76ms, fracRes: 0.2392, norm(attn): 0.2656, norm(output): 0.6445, norm(x): 0.5258, norm(y): 1.0118, norm:0.8609, tok/sec: 144709.29, flops:112.70, batch-reuse:1
@ 1507 train 5.0245 , allloss: 5.0255, dt: 917.51ms, fracRes: 0.2426, norm(attn): 0.2637, norm(output): 0.6445, norm(x): 0.5265, norm(y): 1.0119, norm:0.9492, tok/sec: 142856.98, flops:111.26, batch-reuse:1
@ 1508 train 5.0559 , allloss: 5.0565, dt: 895.66ms, fracRes: 0.2446, norm(attn): 0.2656, norm(output): 0.6445, norm(x): 0.5223, norm(y): 1.0120, norm:1.1238, tok/sec: 146341.06, flops:113.97, batch-reuse:1
@ 1509 train 5.0063 , allloss: 5.0066, dt: 907.91ms, fracRes: 0.2414, norm(attn): 0.2656, norm(output): 0.6445, norm(x): 0.5216, norm(y): 1.0120, norm:1.1016, tok/sec: 144367.25, flops:112.43, batch-reuse:1
@ 1510 train 5.0278 , allloss: 5.0284, dt: 905.42ms, fracRes: 0.2398, norm(attn): 0.2656, norm(output): 0.6367, norm(x): 0.5232, norm(y): 1.0118, norm:0.8877, tok/sec: 144764.24, flops:112.74, batch-reuse:1
@ 1511 train 5.0755 , allloss: 5.0761, dt: 890.89ms, fracRes: 0.2375, norm(attn): 0.2656, norm(output): 0.6484, norm(x): 0.5288, norm(y): 1.0118, norm:1.0173, tok/sec: 147125.20, flops:114.58, batch-reuse:1
@ 1512 train 5.1074 , allloss: 5.1083, dt: 907.04ms, fracRes: 0.2390, norm(attn): 0.2715, norm(output): 0.6523, norm(x): 0.5275, norm(y): 1.0119, norm:0.9991, tok/sec: 144504.50, flops:112.54, batch-reuse:1
@ 1513 train 5.0200 , allloss: 5.0208, dt: 908.49ms, fracRes: 0.2402, norm(attn): 0.2656, norm(output): 0.6562, norm(x): 0.5274, norm(y): 1.0119, norm:1.2056, tok/sec: 144274.39, flops:112.36, batch-reuse:1
@ 1514 train 5.1261 , allloss: 5.1276, dt: 908.55ms, fracRes: 0.2399, norm(attn): 0.2715, norm(output): 0.6641, norm(x): 0.5346, norm(y): 1.0118, norm:1.1153, tok/sec: 144264.50, flops:112.35, batch-reuse:1
@ 1515 train 5.0230 , allloss: 5.0237, dt: 907.63ms, fracRes: 0.2391, norm(attn): 0.2656, norm(output): 0.6484, norm(x): 0.5364, norm(y): 1.0117, norm:0.8672, tok/sec: 144410.63, flops:112.47, batch-reuse:1
@ 1516 train 4.9012 , allloss: 4.9018, dt: 894.92ms, fracRes: 0.2381, norm(attn): 0.2676, norm(output): 0.6602, norm(x): 0.5380, norm(y): 1.0117, norm:0.8453, tok/sec: 146462.39, flops:114.07, batch-reuse:1
@ 1517 train 4.9681 , allloss: 4.9691, dt: 906.29ms, fracRes: 0.2392, norm(attn): 0.2676, norm(output): 0.6602, norm(x): 0.5371, norm(y): 1.0118, norm:0.9294, tok/sec: 144624.21, flops:112.63, batch-reuse:1
@ 1518 train 4.9654 , allloss: 4.9664, dt: 904.64ms, fracRes: 0.2385, norm(attn): 0.2676, norm(output): 0.6641, norm(x): 0.5354, norm(y): 1.0119, norm:0.9533, tok/sec: 144889.19, flops:112.84, batch-reuse:1
@ 1519 train 4.9734 , allloss: 4.9744, dt: 906.22ms, fracRes: 0.2396, norm(attn): 0.2676, norm(output): 0.6641, norm(x): 0.5339, norm(y): 1.0121, norm:0.7580, tok/sec: 144635.89, flops:112.64, batch-reuse:1
@ 1520 train 4.9748 , allloss: 4.9757, dt: 914.58ms, fracRes: 0.2402, norm(attn): 0.2676, norm(output): 0.6680, norm(x): 0.5402, norm(y): 1.0121, norm:0.8178, tok/sec: 143314.41, flops:111.61, batch-reuse:1
@ 1521 train 4.9620 , allloss: 4.9628, dt: 917.40ms, fracRes: 0.2416, norm(attn): 0.2734, norm(output): 0.6797, norm(x): 0.5459, norm(y): 1.0121, norm:0.9971, tok/sec: 142872.80, flops:111.27, batch-reuse:1
@ 1522 train 4.9796 , allloss: 4.9802, dt: 919.69ms, fracRes: 0.2443, norm(attn): 0.2676, norm(output): 0.6641, norm(x): 0.5401, norm(y): 1.0119, norm:0.9769, tok/sec: 142517.90, flops:110.99, batch-reuse:1
@ 1523 train 5.0138 , allloss: 5.0142, dt: 922.21ms, fracRes: 0.2439, norm(attn): 0.2695, norm(output): 0.6562, norm(x): 0.5373, norm(y): 1.0119, norm:0.9416, tok/sec: 142127.49, flops:110.69, batch-reuse:1
@ 1524 train 5.0040 , allloss: 5.0045, dt: 911.57ms, fracRes: 0.2426, norm(attn): 0.2695, norm(output): 0.6797, norm(x): 0.5442, norm(y): 1.0119, norm:1.0936, tok/sec: 143787.65, flops:111.98, batch-reuse:1
@ 1525 train 4.9715 , allloss: 4.9720, dt: 950.91ms, fracRes: 0.2403, norm(attn): 0.2656, norm(output): 0.6680, norm(x): 0.5438, norm(y): 1.0120, norm:0.9892, tok/sec: 137838.37, flops:107.35, batch-reuse:1
@ 1526 train 5.0540 , allloss: 5.0555, dt: 911.06ms, fracRes: 0.2410, norm(attn): 0.2695, norm(output): 0.6602, norm(x): 0.5424, norm(y): 1.0117, norm:1.0585, tok/sec: 143867.45, flops:112.04, batch-reuse:1
@ 1527 train 4.9513 , allloss: 4.9521, dt: 889.15ms, fracRes: 0.2446, norm(attn): 0.2656, norm(output): 0.6602, norm(x): 0.5341, norm(y): 1.0119, norm:0.9363, tok/sec: 147413.03, flops:114.81, batch-reuse:1
@ 1528 train 5.0059 , allloss: 5.0068, dt: 900.82ms, fracRes: 0.2440, norm(attn): 0.2695, norm(output): 0.6719, norm(x): 0.5430, norm(y): 1.0118, norm:0.9816, tok/sec: 145503.41, flops:113.32, batch-reuse:1
@ 1529 train 4.9243 , allloss: 4.9247, dt: 899.18ms, fracRes: 0.2458, norm(attn): 0.2695, norm(output): 0.6680, norm(x): 0.5428, norm(y): 1.0120, norm:0.8359, tok/sec: 145768.03, flops:113.52, batch-reuse:1
@ 1530 train 4.9393 , allloss: 4.9397, dt: 902.25ms, fracRes: 0.2472, norm(attn): 0.2676, norm(output): 0.6719, norm(x): 0.5411, norm(y): 1.0121, norm:0.8308, tok/sec: 145272.33, flops:113.14, batch-reuse:1
@ 1531 train 4.8880 , allloss: 4.8883, dt: 901.35ms, fracRes: 0.2460, norm(attn): 0.2676, norm(output): 0.6758, norm(x): 0.5398, norm(y): 1.0121, norm:0.8590, tok/sec: 145417.70, flops:113.25, batch-reuse:1
@ 1532 train 4.9521 , allloss: 4.9526, dt: 908.35ms, fracRes: 0.2440, norm(attn): 0.2695, norm(output): 0.6836, norm(x): 0.5441, norm(y): 1.0121, norm:0.8567, tok/sec: 144297.41, flops:112.38, batch-reuse:1
@ 1533 train 4.8814 , allloss: 4.8818, dt: 905.56ms, fracRes: 0.2432, norm(attn): 0.2715, norm(output): 0.6797, norm(x): 0.5478, norm(y): 1.0119, norm:0.8015, tok/sec: 144741.03, flops:112.72, batch-reuse:1
@ 1534 train 4.9533 , allloss: 4.9537, dt: 895.61ms, fracRes: 0.2426, norm(attn): 0.2695, norm(output): 0.6797, norm(x): 0.5506, norm(y): 1.0119, norm:0.6827, tok/sec: 146348.66, flops:113.98, batch-reuse:1
@ 1535 train 4.9743 , allloss: 4.9748, dt: 913.29ms, fracRes: 0.2428, norm(attn): 0.2656, norm(output): 0.6797, norm(x): 0.5506, norm(y): 1.0119, norm:0.7142, tok/sec: 143516.86, flops:111.77, batch-reuse:1
@ 1536 train 4.9652 , allloss: 4.9659, dt: 902.81ms, fracRes: 0.2433, norm(attn): 0.2734, norm(output): 0.6875, norm(x): 0.5485, norm(y): 1.0120, norm:0.9411, tok/sec: 145181.83, flops:113.07, batch-reuse:1
@ 1537 train 4.9497 , allloss: 4.9502, dt: 921.25ms, fracRes: 0.2456, norm(attn): 0.2695, norm(output): 0.6836, norm(x): 0.5490, norm(y): 1.0120, norm:1.0058, tok/sec: 142275.65, flops:110.80, batch-reuse:1
@ 1538 train 4.8631 , allloss: 4.8636, dt: 903.22ms, fracRes: 0.2452, norm(attn): 0.2715, norm(output): 0.6836, norm(x): 0.5509, norm(y): 1.0119, norm:0.9693, tok/sec: 145116.29, flops:113.02, batch-reuse:1
@ 1539 train 4.9356 , allloss: 4.9363, dt: 908.47ms, fracRes: 0.2445, norm(attn): 0.2773, norm(output): 0.6797, norm(x): 0.5539, norm(y): 1.0118, norm:0.8374, tok/sec: 144277.60, flops:112.36, batch-reuse:1
@ 1540 train 4.9302 , allloss: 4.9309, dt: 905.58ms, fracRes: 0.2447, norm(attn): 0.2695, norm(output): 0.6836, norm(x): 0.5526, norm(y): 1.0120, norm:0.8048, tok/sec: 144737.45, flops:112.72, batch-reuse:1
@ 1541 train 4.8880 , allloss: 4.8887, dt: 904.95ms, fracRes: 0.2454, norm(attn): 0.2695, norm(output): 0.6836, norm(x): 0.5510, norm(y): 1.0121, norm:0.9478, tok/sec: 144838.65, flops:112.80, batch-reuse:1
@ 1542 train 4.9403 , allloss: 4.9411, dt: 906.27ms, fracRes: 0.2443, norm(attn): 0.2695, norm(output): 0.6875, norm(x): 0.5539, norm(y): 1.0120, norm:0.9113, tok/sec: 144627.29, flops:112.64, batch-reuse:1
@ 1543 train 5.2497 , allloss: 5.2509, dt: 903.74ms, fracRes: 0.2462, norm(attn): 0.2754, norm(output): 0.6875, norm(x): 0.5602, norm(y): 1.0120, norm:1.6492, tok/sec: 145032.11, flops:112.95, batch-reuse:1
@ 1544 train 4.8310 , allloss: 4.8320, dt: 903.40ms, fracRes: 0.2435, norm(attn): 0.2754, norm(output): 0.6875, norm(x): 0.5575, norm(y): 1.0121, norm:1.0663, tok/sec: 145087.69, flops:112.99, batch-reuse:1
@ 1545 train 4.9492 , allloss: 4.9513, dt: 909.01ms, fracRes: 0.2427, norm(attn): 0.2754, norm(output): 0.6875, norm(x): 0.5648, norm(y): 1.0119, norm:1.2056, tok/sec: 144192.04, flops:112.30, batch-reuse:1
@ 1546 train 5.4525 , allloss: 5.4548, dt: 918.95ms, fracRes: 0.2446, norm(attn): 0.2734, norm(output): 0.6797, norm(x): 0.5580, norm(y): 1.0117, norm:1.0893, tok/sec: 142631.78, flops:111.08, batch-reuse:1
@ 1547 train 5.0080 , allloss: 5.0088, dt: 923.74ms, fracRes: 0.2489, norm(attn): 0.2715, norm(output): 0.6836, norm(x): 0.5542, norm(y): 1.0119, norm:1.5030, tok/sec: 141892.57, flops:110.51, batch-reuse:1
@ 1548 train 5.1088 , allloss: 5.1102, dt: 925.15ms, fracRes: 0.2524, norm(attn): 0.2715, norm(output): 0.6836, norm(x): 0.5538, norm(y): 1.0119, norm:1.3315, tok/sec: 141675.84, flops:110.34, batch-reuse:1
@ 1549 train 5.0535 , allloss: 5.0554, dt: 894.13ms, fracRes: 0.2496, norm(attn): 0.2715, norm(output): 0.6914, norm(x): 0.5640, norm(y): 1.0118, norm:0.9709, tok/sec: 146591.54, flops:114.17, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8359, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5547, 0.3398, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.3164, 0.1533, 0.2188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0515, 0.2314, 0.0996, 0.4883, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1797, 0.2812, 0.1338, 0.1357, 0.1436, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0408, 0.0879, 0.3887, 0.1963, 0.0996, 0.1138, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.0120, 0.0815, 0.0251, 0.1196, 0.0449, 0.1865, 0.2490, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0623, 0.2949, 0.0273, 0.1162, 0.0364, 0.0674, 0.1826, 0.0659, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0562, 0.1982, 0.0613, 0.0928, 0.0591, 0.0549, 0.1533, 0.0806, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0104, 0.4043, 0.0135, 0.1216, 0.0369, 0.1016, 0.0698, 0.0030, 0.1338, 0.0139, 0.0913, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.0481, 0.0137, 0.0170, 0.0486, 0.0674, 0.1670, 0.0664, 0.0168, 0.2598, 0.0234, 0.0208, 0.0000, 0.0000, 0.0000],
        [0.1904, 0.0146, 0.0542, 0.0164, 0.0457, 0.0430, 0.0981, 0.1328, 0.0148, 0.2930, 0.0146, 0.0659, 0.0165, 0.0000, 0.0000],
        [0.0386, 0.2109, 0.0090, 0.0723, 0.0287, 0.0474, 0.1216, 0.0205, 0.1084, 0.0243, 0.0327, 0.0525, 0.1206, 0.1128, 0.0000],
        [0.0742, 0.1836, 0.0137, 0.0359, 0.0483, 0.0747, 0.1030, 0.0284, 0.0664, 0.0371, 0.0447, 0.0645, 0.0840, 0.0767, 0.0649]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0061, -0.0030, -0.0350,  ...,  0.0327,  0.0022, -0.0339],
        [-0.0512,  0.0186,  0.0314,  ..., -0.0478, -0.0017,  0.0073],
        [ 0.0051,  0.0231,  0.0128,  ..., -0.0187,  0.0055,  0.0172],
        ...,
        [ 0.0009, -0.0016,  0.0130,  ..., -0.0038,  0.0168,  0.0034],
        [ 0.0150,  0.0232, -0.0038,  ...,  0.0146, -0.0229, -0.0478],
        [ 0.0035, -0.0242,  0.0543,  ...,  0.0019,  0.0310,  0.0384]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4746, -0.1055, -0.2578, -1.0391, -0.6094,  0.8164, -0.2578, -0.1709,  0.2305, -0.1729, -1.1250,  1.0547,  0.6484, -1.2969,  0.5469, -0.7539,  0.1553, -0.3066, -0.3887,  0.3809,  0.0325, -0.2061, -0.2373,  0.6094, -0.5156, -0.0048, -0.9219,  0.4531,  0.9766,  0.6602, -0.0449, -0.2949,
         0.1641,  0.3926,  0.1416,  0.0835,  0.9297, -0.3105,  0.6133,  1.3594, -0.8828, -0.8242,  0.1187, -0.7656, -1.6094,  0.5430,  1.1484, -1.3672, -0.6758,  0.4512,  0.8984,  0.0195, -0.0081, -0.5352,  0.5742,  0.4590,  0.0898,  0.6719, -0.3516, -0.1758,  1.9141,  0.7188,  0.3203,  1.3516],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0401, -0.0004,  0.0140,  ..., -0.0006,  0.0212, -0.0097],
        [ 0.0205, -0.0112, -0.0215,  ...,  0.0064, -0.0279, -0.0452],
        [ 0.0315, -0.0030, -0.0294,  ...,  0.0363, -0.0065, -0.0168],
        ...,
        [ 0.0314,  0.0300, -0.0201,  ...,  0.0381, -0.0097, -0.0271],
        [ 0.0260, -0.0152, -0.0149,  ..., -0.0203,  0.0168,  0.0197],
        [ 0.0216,  0.0171, -0.0378,  ..., -0.0169, -0.0495, -0.0350]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1553, -0.4590, -0.1235, -1.4844, -0.1846,  1.2500, -1.0078,  0.8516,  1.0469,  0.0942,  0.1089, -0.5195, -0.7227,  0.0854, -0.7188,  0.6211,  0.3203, -0.6250,  1.5312,  0.2637,  0.0449,  1.1406,  0.2715,  0.2578,  0.2598, -0.6484,  0.5742, -0.1484, -0.9766,  0.4766, -0.4219,  0.3457,
        -0.1787, -0.0571,  1.5469, -0.4941,  0.2910, -1.4688, -0.8906, -0.7852,  0.3887, -0.1484,  0.0146,  1.0938, -0.4492,  0.3691, -0.3105,  0.5586, -0.6992, -1.6797,  0.9375,  0.4453,  0.6172, -0.6875,  0.3984,  0.9062,  0.4863, -0.4551,  0.5469,  0.2031,  0.6523, -0.4219,  0.9453, -0.3555],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.6250,      1.3203,      1.0000,      0.4453,      0.1592,     -0.9609,      0.6719,      1.4844,     -0.1216,      1.8984,      1.0703,      0.4531,      1.3203,      1.2031],
        [     0.0000,     -0.4844,     -1.6562,     -2.1562,     -1.0625,     -0.5234,     -0.2949,     -0.4102,     -1.7656,      0.1260,     -1.9453,     -1.6172,     -1.4844,     -1.9219,     -1.2734],
        [     0.0000,      0.0117,     -0.7109,     -0.3574,     -0.9453,     -0.9180,      0.2793,     -0.4258,     -0.2598,     -0.4004,     -0.4336,     -0.8047,     -0.6992,     -0.9414,     -0.1426],
        [     0.0000,      1.5000,      0.6562,      2.2500,      0.9180,      1.6328,      0.9336,      0.0620,      2.6875,     -0.5234,      1.6875,      1.3125,      1.3125,      2.7812,      1.1328],
        [     0.0000,      0.4453,     -0.2969,     -0.2852,     -0.2275,     -0.3457,      0.0430,      0.1309,      0.0221,     -0.4316,      0.1572,      0.3340,      0.6172,      0.4570,     -0.4512],
        [     0.0000,      0.7695,      2.2500,      1.5703,      0.8906,      1.0234,      0.5742,      0.7266,      2.3750,     -0.2061,      2.2812,      1.8750,      2.1094,      2.6562,      1.8516],
        [     0.0000,     -3.1562,     -1.2344,     -2.4062,     -0.8516,     -1.8359,     -0.4062,     -0.1172,     -2.5312,      0.0205,     -1.9453,     -1.4062,     -2.5625,     -2.4531,     -1.9922],
        [     0.0000,      1.5547,     -0.8203,      0.6211,     -0.5352,      0.0767,      1.0781,      0.0576,      0.8555,     -0.0723,     -0.1128,      0.2402,      0.9453,      1.0781,      0.2480],
        [     0.0000,     -0.8594,      0.3984,     -0.7734,     -0.3594,     -0.8086,     -0.8828,      0.1416,     -0.4980,     -0.1748,      0.4551,     -0.0035,      0.2070,     -0.4043,      0.4512],
        [     0.0000,      3.6562,      0.2617,      2.4531,      1.2578,      2.2656,      1.8984,     -1.2656,      2.5469,      0.2812,      2.1719,      0.9219,      2.3594,      2.9531,      2.4219],
        [     0.0000,     -1.6484,     -2.9062,     -2.7031,     -1.6406,     -1.3125,     -0.4102,     -1.3281,     -2.7031,      0.0332,     -2.3750,     -2.5000,     -2.7969,     -2.6719,     -1.6328],
        [     0.0000,     -2.5625,     -1.2578,     -2.4531,     -1.4297,     -1.4844,     -0.6602,     -0.3574,     -2.5625,      0.4355,     -2.5625,     -1.0625,     -2.4375,     -2.3438,     -2.0781],
        [     0.0000,      1.6953,     -1.4609,      0.6289,     -0.3008,      0.2002,      1.1484,     -0.6367,      1.0312,     -0.4648,     -0.1699,      0.3027,      1.1406,      1.0703,      0.3926],
        [     0.0000,      0.9023,     -1.6875,     -0.7305,     -0.4316,      0.0016,      0.3262,     -0.9609,     -0.1128,     -0.6953,     -0.5117,     -0.1416,      0.1216,      0.0317,     -0.1367]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6333],
        [0.5427],
        [0.3836],
        [0.1832],
        [0.2395],
        [0.0416],
        [0.2384],
        [0.0677],
        [0.1287],
        [0.0173],
        [0.1878],
        [0.1508],
        [0.0547],
        [0.0578]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0092,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0654,     0.1904,     0.6836,     0.0413,     0.0178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4355,     0.0713,     0.3730,     0.0869,     0.0057,     0.0288,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0070,     0.0459,     0.0056,     0.0006,     0.0012,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9258,     0.0054,     0.0474,     0.0106,     0.0016,     0.0022,     0.0020,     0.0069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2295,     0.0669,     0.2295,     0.0217,     0.0100,     0.0383,     0.1602,     0.1069,     0.1367,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0010,     0.0002,     0.0001,     0.0000,     0.0000,     0.0005,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.0674,     0.3477,     0.0032,     0.0023,     0.0349,     0.3398,     0.0708,     0.1172,     0.0038,     0.0075,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0003,     0.0016,     0.0016,     0.0003,     0.0002,     0.0000,     0.0005,     0.0001,     0.0009,     0.0000,     0.0007,     0.0012,     0.0000,     0.0000],
        [    0.1426,     0.0435,     0.1777,     0.0112,     0.0043,     0.0261,     0.1094,     0.0613,     0.0903,     0.0151,     0.0075,     0.0889,     0.1279,     0.0947,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0376, -0.0286,  0.0209,  ...,  0.0275, -0.0244, -0.0185],
        [ 0.0214, -0.0052,  0.0283,  ..., -0.0245,  0.0148, -0.0074],
        [ 0.0067,  0.0567,  0.0183,  ..., -0.0436, -0.0088,  0.0162],
        ...,
        [ 0.0087, -0.0289, -0.0229,  ...,  0.0352,  0.0111,  0.0476],
        [ 0.0355,  0.0155,  0.0278,  ..., -0.0202,  0.0251,  0.0028],
        [ 0.0002, -0.0301, -0.0339,  ...,  0.0431, -0.0083,  0.0275]], device='cuda:0', requires_grad=True)
K: tensor([ 3.3438, -2.6406,  1.1953, -1.3516, -0.1602, -2.5469, -0.9375,  3.3125,  1.0156, -0.1729, -1.3906, -3.1094, -2.8281, -1.1250, -1.3984, -2.0625,  0.5898,  2.0625,  0.8164, -1.6250, -1.6094, -1.2422,  3.3594,  1.8984,  2.0156, -3.3594, -3.7031,  1.1172,  2.4375, -1.2188,  1.8750, -1.9375,
        -2.6094, -3.6250,  1.9453,  1.6875, -1.7422, -1.3438,  2.2656, -1.0391, -2.8438,  0.3633,  2.6406,  0.9531, -1.9219,  0.4648,  2.9375,  1.6484, -3.0312,  1.3594, -1.3828,  1.5469, -2.5938, -2.0469,  1.1172, -1.7812,  2.8281, -2.6406, -1.7109, -2.1719,  1.3906, -1.6094,  2.0625, -4.7188],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0127,  0.0142,  0.0274,  ..., -0.0330,  0.0202,  0.0096],
        [ 0.0145, -0.0033, -0.0239,  ...,  0.0149, -0.0309, -0.0293],
        [ 0.0174,  0.0194, -0.0270,  ...,  0.0610,  0.0130, -0.0182],
        ...,
        [-0.0202,  0.0049,  0.0101,  ..., -0.0454, -0.0005, -0.0608],
        [-0.0250, -0.0139,  0.0009,  ...,  0.0510, -0.0484,  0.0244],
        [ 0.0032,  0.0255,  0.0053,  ..., -0.0790,  0.0178, -0.0077]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1875,  2.7656, -0.0549,  1.9844,  1.7969,  1.1250, -1.5703, -1.5234,  1.1953,  0.1846,  1.0938,  1.8438,  1.8047, -0.5781, -0.0649,  0.4023, -1.3672, -0.7617,  0.0237,  2.6250,  2.2188,  0.9570, -1.8125, -0.3340, -1.7266,  1.5156,  0.8477, -0.8203, -1.2031,  1.3672, -1.7109, -0.1011,
         0.8242,  1.2891, -2.1406, -1.8281,  1.9531,  0.1328, -0.5000,  0.9805, -0.8086,  0.1172, -0.4863, -0.0505, -1.7422, -0.9375, -0.1211, -2.4062,  0.9531,  0.8320,  2.0312,  0.1748,  1.0000,  0.7344, -1.6797, -1.1406, -1.0469,  1.5469,  1.2812,  0.2832,  0.5078,  1.0000, -2.2344,  0.9023],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -4.6875,     -3.2969,     -5.5312,     -6.3438,     -5.2500,     -5.0000,     -4.6562,     -5.1562,     -6.2500,     -7.6875,     -3.8125,     -3.7188,     -5.2500,     -4.9688],
        [     0.0000,    -14.1875,    -11.1250,    -10.6250,    -14.2500,    -15.8750,    -17.7500,    -12.8750,    -17.7500,    -13.0625,    -20.7500,    -13.4375,    -11.2500,    -18.1250,    -19.5000],
        [     0.0000,    -10.1875,    -10.0625,     -8.7500,     -8.3750,    -11.7500,    -12.6875,    -10.0625,    -10.0625,    -10.0000,    -12.8125,     -8.8750,     -9.7500,    -10.0000,    -12.1250],
        [     0.0000,      1.0625,      2.3438,     -0.4648,     -1.3047,      0.8398,      2.5156,      1.5156,      1.4531,      0.1729,      0.6445,      2.0625,      1.3203,      1.4375,      3.0625],
        [     0.0000,     -1.8047,     -0.1562,     -1.6094,     -4.3438,     -2.7188,     -1.9531,     -1.0859,     -3.1875,     -1.7578,     -3.6719,     -0.9961,     -0.9336,     -3.3125,     -1.8594],
        [     0.0000,     -4.9062,     -3.0156,     -5.1250,     -7.3125,     -6.6562,     -6.1250,     -4.3438,     -5.7812,     -5.6875,     -8.9375,     -4.1875,     -3.8438,     -5.9688,     -6.0000],
        [     0.0000,     -5.1562,     -2.9688,     -4.4688,     -6.3438,     -6.0312,     -6.1250,     -4.9062,     -6.0000,     -5.3438,     -8.1250,     -3.9531,     -3.9688,     -6.0625,     -6.1875],
        [     0.0000,     -1.2344,      0.0003,     -2.3594,     -3.1406,     -1.7891,     -0.3594,     -0.7656,     -0.5195,     -2.0000,     -2.5938,     -0.5938,     -0.1992,     -0.4883,      0.0664],
        [     0.0000,     -9.5000,     -6.8438,     -8.7500,     -8.9375,    -10.9375,    -10.2500,     -7.5625,     -9.3750,    -10.1875,    -12.3750,     -7.6562,     -7.5312,     -9.3750,    -11.0000],
        [     0.0000,      2.6875,      4.3438,     -0.3672,     -0.6680,      2.0312,      4.3125,      2.7344,      3.2500,     -0.1953,      0.5000,      3.2656,      2.8906,      3.1875,      4.3438],
        [     0.0000,    -11.4375,    -10.2500,     -8.8125,    -10.7500,    -13.0000,    -14.8125,    -10.6250,    -12.0625,    -11.0000,    -15.5625,    -10.7500,     -9.4375,    -12.0625,    -14.0625],
        [     0.0000,     -7.9688,     -6.4375,     -6.4375,     -8.1875,     -8.6250,    -10.0000,     -7.6562,     -9.5000,     -6.9688,    -10.9375,     -7.1875,     -6.7188,     -9.6250,    -10.5625],
        [     0.0000,     -1.1875,      0.2246,     -2.5312,     -3.5000,     -1.6953,     -0.2637,     -0.8438,     -0.4531,     -2.2500,     -2.9531,     -0.4688,     -0.1079,     -0.4082,      0.3320],
        [     0.0000,    -11.3750,     -9.1875,    -11.8750,    -13.1875,    -13.2500,    -13.1250,    -10.2500,    -11.6250,    -13.4375,    -17.7500,    -10.3750,     -9.2500,    -11.8125,    -13.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9987],
        [1.0000],
        [0.9990],
        [0.8788],
        [0.9487],
        [0.9945],
        [0.9893],
        [0.8253],
        [0.9932],
        [0.8464],
        [0.9840],
        [0.9749],
        [0.7909],
        [0.9941]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0123, -0.0501, -0.0379,  ...,  0.0218, -0.0154,  0.0278],
        [ 0.0261,  0.0025,  0.0222,  ..., -0.0110,  0.0013, -0.0472],
        [ 0.0118,  0.0327, -0.0245,  ..., -0.0063,  0.0225,  0.0579],
        ...,
        [ 0.0289, -0.0185, -0.0522,  ...,  0.0076, -0.0162,  0.0357],
        [ 0.0125,  0.0688,  0.0223,  ...,  0.0083,  0.0172, -0.0478],
        [-0.0527, -0.0296, -0.0279,  ...,  0.0278, -0.0003,  0.0380]], device='cuda:0', requires_grad=True)
K: tensor([ 2.0469, -1.9453, -2.5469,  1.6016, -2.2656,  3.0781,  1.9453,  1.9688,  2.1875,  1.1016, -1.9297,  2.2031,  2.3438, -2.4688,  1.4688, -2.9531, -3.2188, -1.6016, -1.5234,  2.1562, -3.5469,  2.3281, -2.3125,  2.5000, -3.0625, -3.2969, -2.4219,  2.9531, -2.1875, -2.3906,  2.8750, -2.0156,
        -3.9375, -0.3262, -2.4844,  0.7461,  3.1562,  1.9141,  1.8125, -1.9922, -2.6719,  2.7188, -3.3281, -2.6406,  2.5781, -2.0156, -1.3906,  2.8594,  2.1719, -1.0703,  1.3516,  2.9219, -2.5781, -2.5625, -1.5000,  1.8359, -3.1406,  1.6641, -1.4766, -2.5312,  2.2969, -2.6094,  0.9492, -1.7500],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0451,  0.0255,  0.0223,  ..., -0.0124,  0.0210, -0.0173],
        [ 0.0035, -0.0496, -0.0179,  ..., -0.0132, -0.0267,  0.0135],
        [ 0.0511,  0.0254,  0.0244,  ...,  0.0307,  0.0190, -0.0742],
        ...,
        [-0.0031,  0.0274,  0.0129,  ...,  0.0007,  0.0040, -0.0281],
        [ 0.0072, -0.0538,  0.0039,  ...,  0.0379, -0.0199, -0.0247],
        [ 0.0191,  0.0003,  0.0561,  ..., -0.0097,  0.0203, -0.0609]], device='cuda:0', requires_grad=True)
Q: tensor([-1.2734,  1.7500,  1.7734, -1.2344,  1.2031, -2.7344, -1.6562, -1.4609, -2.0312,  0.0564,  0.3359, -2.5938, -2.1562,  3.2188, -0.9766,  2.3750,  2.4844,  1.8906,  0.9727, -1.2656,  2.8125, -1.8281,  1.2266, -1.8750,  2.2500,  2.3750,  2.5781, -2.4844,  1.8516,  1.7188, -2.8906,  1.0547,
         2.2656,  1.2969,  1.8906, -1.2656, -2.4531, -0.9570, -2.7188,  1.5312,  2.2812, -1.3125,  2.7500,  1.6953, -2.0781,  1.5000,  1.2266, -1.9375, -1.4219,  0.4844, -1.6250, -2.8906,  1.4844,  2.7656,  2.2969, -1.3906,  1.7031, -1.9219,  2.0625,  1.7578, -1.2188,  1.9375, -2.0000,  2.4062],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -25.8750, -25.7500, -20.5000, -25.0000, -28.8750, -26.7500, -21.5000, -24.0000, -24.8750, -26.0000, -21.6250, -29.2500, -25.0000, -28.0000],
        [  0.0000, -29.6250, -30.3750, -21.8750, -28.2500, -33.0000, -31.2500, -23.2500, -27.3750, -28.3750, -28.8750, -25.3750, -33.2500, -28.6250, -34.0000],
        [  0.0000, -25.0000, -24.8750, -20.0000, -23.8750, -27.2500, -25.3750, -20.5000, -22.8750, -23.0000, -24.1250, -20.5000, -28.3750, -23.7500, -26.8750],
        [  0.0000, -22.1250, -21.3750, -17.6250, -22.1250, -24.5000, -23.1250, -19.8750, -21.6250, -20.5000, -22.6250, -18.2500, -25.3750, -22.2500, -22.6250],
        [  0.0000, -23.8750, -22.7500, -18.3750, -23.5000, -26.3750, -24.1250, -21.1250, -23.3750, -21.1250, -24.3750, -19.1250, -27.0000, -23.8750, -24.1250],
        [  0.0000, -20.2500, -19.7500, -15.6875, -20.5000, -22.7500, -21.6250, -18.6250, -20.1250, -18.8750, -21.5000, -17.0000, -23.5000, -20.7500, -21.2500],
        [  0.0000, -13.6875, -13.4375, -10.3750, -12.7500, -15.5000, -14.7500, -12.9375, -13.0000, -12.6250, -13.6875, -11.3125, -16.6250, -13.4375, -14.6875],
        [  0.0000, -24.1250, -22.7500, -19.3750, -24.3750, -25.8750, -24.6250, -21.5000, -23.8750, -21.7500, -25.2500, -19.7500, -26.8750, -24.3750, -24.1250],
        [  0.0000, -32.7500, -33.2500, -24.1250, -31.2500, -35.7500, -34.0000, -25.3750, -30.6250, -31.8750, -31.8750, -27.2500, -36.0000, -32.0000, -37.5000],
        [  0.0000, -28.5000, -27.2500, -22.2500, -28.3750, -31.0000, -29.3750, -26.2500, -28.6250, -25.8750, -30.0000, -23.7500, -32.5000, -29.3750, -29.2500],
        [  0.0000, -20.2500, -20.7500, -15.5625, -19.6250, -23.2500, -21.2500, -16.7500, -19.1250, -19.5000, -20.6250, -17.7500, -23.6250, -20.0000, -22.8750],
        [  0.0000, -24.0000, -24.1250, -17.5000, -22.6250, -25.7500, -24.2500, -19.7500, -21.8750, -22.1250, -22.5000, -20.0000, -27.1250, -22.7500, -26.1250],
        [  0.0000, -24.3750, -23.0000, -19.5000, -24.6250, -26.0000, -24.6250, -21.6250, -24.0000, -21.8750, -25.3750, -20.0000, -27.1250, -24.6250, -24.3750],
        [  0.0000, -31.5000, -31.5000, -23.1250, -30.8750, -34.0000, -32.0000, -25.0000, -29.7500, -29.5000, -31.2500, -26.3750, -34.5000, -30.8750, -34.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8017],
        [0.9250],
        [0.9245],
        [0.6281],
        [0.6156],
        [0.5894],
        [0.8852],
        [0.5961],
        [0.9137],
        [0.5023],
        [0.8177],
        [0.8608],
        [0.5954],
        [0.8047]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0938,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7812,     0.2021,     0.0178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3750,     0.2100,     0.0172,     0.3965,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8320,     0.0284,     0.0420,     0.0216,     0.0762,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7930,     0.0742,     0.0173,     0.0244,     0.0674,     0.0238,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7266,     0.1128,     0.0036,     0.0205,     0.0669,     0.0140,     0.0544,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0330,     0.0014,     0.0002,     0.0005,     0.0053,     0.0044,     0.0347,     0.9219,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3301,     0.0036,     0.0008,     0.0007,     0.0081,     0.0068,     0.0157,     0.5977,     0.0349,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4492,     0.0087,     0.0039,     0.0089,     0.0356,     0.0125,     0.0398,     0.3184,     0.1069,     0.0165,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7461,     0.0047,     0.0012,     0.0006,     0.0036,     0.0020,     0.0051,     0.1006,     0.1147,     0.0190,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2715,     0.0874,     0.0250,     0.1260,     0.0840,     0.0254,     0.0552,     0.2168,     0.0469,     0.0128,     0.0371,     0.0134,     0.0000,     0.0000,     0.0000],
        [    0.0461,     0.0033,     0.0004,     0.0003,     0.0071,     0.0034,     0.0564,     0.2871,     0.3027,     0.0111,     0.0045,     0.0080,     0.2695,     0.0000,     0.0000],
        [    0.2207,     0.0037,     0.0006,     0.0005,     0.0087,     0.0042,     0.0138,     0.3613,     0.0306,     0.0270,     0.0007,     0.0076,     0.3047,     0.0154,     0.0000],
        [    0.1680,     0.2520,     0.0093,     0.0179,     0.0723,     0.0039,     0.0894,     0.0212,     0.1074,     0.0115,     0.0150,     0.0408,     0.0192,     0.1216,     0.0513]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0039, -0.0123,  0.0203,  ...,  0.0177,  0.0040,  0.0680],
        [-0.0199, -0.0353, -0.0003,  ..., -0.0031,  0.0101, -0.0113],
        [ 0.0055, -0.0089,  0.0050,  ..., -0.0072,  0.0102,  0.0075],
        ...,
        [-0.0319,  0.0119,  0.0130,  ...,  0.0149,  0.0340,  0.0508],
        [ 0.0043, -0.0226,  0.0465,  ...,  0.0064, -0.0090, -0.0607],
        [-0.0244,  0.0047, -0.0378,  ..., -0.0211, -0.0072, -0.0584]], device='cuda:0', requires_grad=True)
K: tensor([-1.0625, -1.8516,  0.6836,  0.1104,  0.7891, -0.1514, -1.1172,  0.0938, -0.0830, -0.3262,  0.9062,  1.1172,  1.9297,  0.1602,  0.3418, -1.2969, -0.4531,  0.5742,  1.2031,  1.2344, -0.5156, -0.2617,  0.7500, -1.6094, -1.6641,  1.5781,  3.3281, -0.7695, -1.9688, -2.2656, -0.1050, -2.3125,
        -0.9492,  1.7344,  1.3281,  0.1338, -0.6484,  0.7344, -0.5312, -1.8047, -0.6953, -0.0579,  0.9727, -1.2500, -1.2891,  0.2734,  1.4297, -1.7500,  0.9023,  0.2520, -1.2734, -0.2832,  1.9609,  1.9766,  0.2656,  1.3594,  0.7969,  1.7344,  0.4512, -0.4395, -0.1338,  1.7891,  2.3438,  1.3359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0019,  0.0253, -0.0070,  ...,  0.0421, -0.0132,  0.0175],
        [-0.0112, -0.0012, -0.0172,  ..., -0.0089, -0.0041,  0.0054],
        [-0.0111, -0.0071, -0.0122,  ..., -0.0158, -0.0259, -0.0307],
        ...,
        [-0.0129, -0.0061, -0.0129,  ...,  0.0198, -0.0078,  0.0009],
        [ 0.0002,  0.0087, -0.0093,  ...,  0.0062,  0.0254,  0.0461],
        [-0.0200,  0.0099,  0.0002,  ...,  0.0239, -0.0229,  0.0459]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5234, -0.7031,  1.4922, -2.0938, -1.1328,  0.1138, -1.3438,  1.0234,  0.4961, -1.4297,  1.6484, -1.1406,  0.5430, -0.2354, -0.4473,  1.1094, -1.0859, -0.0732, -1.1172, -0.6172,  2.1250, -2.0000,  0.8633, -1.3594, -0.9844,  0.6641, -0.8281, -2.8906, -0.9805, -2.1562,  1.2500,  1.0625,
        -0.4902, -0.7656, -0.1172,  0.1475, -0.6953,  0.3945,  0.9531, -0.6016,  0.9062,  0.5352, -0.1758,  1.8203, -0.5039,  1.2109, -3.2500,  0.4648, -1.7031,  0.1279, -1.2969,  0.0544, -0.7578, -0.1270,  1.1406,  0.9453, -0.8164,  1.7734, -2.2188,  1.6719, -0.7031, -0.9922, -4.6562, -0.5195],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.2656, -3.3906, -3.4219, -2.9375, -4.2500, -2.9062, -0.4238, -2.5781, -3.2188, -6.1250, -4.3125, -2.8281, -3.9219, -4.5625],
        [ 0.0000, -1.3516, -3.7812, -0.3066, -0.3262, -2.8750, -1.4844, -0.3027, -2.7031, -4.6250, -4.3750, -4.8125, -2.8125, -3.8906, -3.9844],
        [ 0.0000, -0.5781, -3.0781,  0.0554,  1.1719, -0.2520,  0.7461,  2.5312, -1.4297, -2.5781, -2.3125, -3.3281,  0.0737, -1.7969, -2.0156],
        [ 0.0000, -3.3750, -2.9844, -3.6562, -2.3906, -0.7539, -1.7031,  2.3438, -1.1406, -1.6953, -5.1875, -2.8594,  0.1270, -2.7969, -2.8125],
        [ 0.0000, -2.3750, -3.8281, -3.4844, -2.4688, -3.5000, -1.4453,  2.0312,  0.1582, -1.9297, -4.8125, -3.3594, -0.4980, -1.6016, -1.5547],
        [ 0.0000, -1.8594, -5.3125, -3.5625, -2.3906, -3.9531, -2.5938, -0.8242, -0.8008, -4.6875, -7.4688, -4.0938, -2.8438, -2.1562, -2.7031],
        [ 0.0000, -3.1562, -5.1562, -4.2812, -1.8203, -2.0156,  0.0537,  3.3281,  2.3750, -0.9258, -4.9375, -3.4844,  1.5469,  0.7070,  0.2715],
        [ 0.0000, -4.5312, -5.9688, -6.1875, -3.7188, -3.8906, -3.0469,  0.5938, -2.2500, -2.4531, -6.9688, -4.0625, -0.1689, -3.5156, -4.1250],
        [ 0.0000, -3.9375, -4.7500, -3.9219, -2.5312, -3.5781, -2.4219, -0.3418, -1.4297, -3.2969, -1.8750, -1.8750,  1.1094, -0.7305, -2.1875],
        [ 0.0000, -5.0625, -6.4688, -7.0938, -5.3438, -5.9062, -4.9688, -2.0000, -1.8750, -3.6719, -7.1875, -2.0625, -0.1807, -1.4844, -3.1562],
        [ 0.0000, -1.1328, -2.3906, -0.7695, -1.1719, -2.3750, -1.5938, -0.2256, -1.7578, -3.0469, -1.9922, -3.0156,  1.3906, -1.5547, -2.7188],
        [ 0.0000, -2.6406, -4.6875, -5.1562, -1.8672, -2.6250,  0.2002,  1.8281,  1.8828, -1.4219, -2.3281, -1.7500,  1.7656,  1.8594,  1.2734],
        [ 0.0000, -4.0625, -5.9062, -6.0312, -3.2344, -3.9531, -2.7656,  0.4961, -1.9766, -2.1094, -5.8125, -3.3750,  0.3242, -2.6562, -3.5312],
        [ 0.0000,  0.4023, -2.8906, -2.2344, -0.8477, -3.7656, -0.6328, -2.0625, -0.4473, -2.6875, -2.4219, -1.4141, -2.1719, -0.3223, -1.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4389],
        [0.2150],
        [0.1320],
        [0.2264],
        [0.1951],
        [0.3293],
        [0.1793],
        [0.1253],
        [0.0782],
        [0.1277],
        [0.0616],
        [0.0775],
        [0.0595],
        [0.0437]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1953, 0.8047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.6875, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7383, 0.1069, 0.0771, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8047, 0.0845, 0.0322, 0.0099, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2178, 0.2910, 0.1133, 0.0610, 0.1060, 0.2100, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6680, 0.0427, 0.0141, 0.0120, 0.0605, 0.1011, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7500, 0.0415, 0.0050, 0.0037, 0.0410, 0.1094, 0.0386, 0.0117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.0718, 0.0178, 0.0060, 0.0554, 0.2451, 0.0703, 0.0182, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0242, 0.0344, 0.0405, 0.0171, 0.0520, 0.2324, 0.0698, 0.2520, 0.0884, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1162, 0.0344, 0.0298, 0.0195, 0.0269, 0.1367, 0.0435, 0.1016, 0.1621, 0.1484, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.1104, 0.0269, 0.0251, 0.0962, 0.3555, 0.0349, 0.0684, 0.1089, 0.0466, 0.0315, 0.0233, 0.0000, 0.0000, 0.0000],
        [0.2344, 0.0359, 0.0052, 0.0020, 0.0089, 0.0293, 0.0090, 0.0069, 0.6133, 0.0129, 0.0115, 0.0063, 0.0231, 0.0000, 0.0000],
        [0.0796, 0.0344, 0.0092, 0.0036, 0.0194, 0.0796, 0.0212, 0.0130, 0.1738, 0.0554, 0.0383, 0.0114, 0.0476, 0.4141, 0.0000],
        [0.0566, 0.0278, 0.0198, 0.0151, 0.0442, 0.1729, 0.0457, 0.0674, 0.0757, 0.0957, 0.0410, 0.0309, 0.1621, 0.1235, 0.0211]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0046,      0.0015,     -0.0111,  ...,     -0.0502,     -0.0255,      0.0029],
        [    -0.0312,      0.0475,     -0.0181,  ...,      0.0108,     -0.0159,      0.0332],
        [     0.0199,      0.0495,     -0.0103,  ...,      0.0264,      0.0217,      0.0072],
        ...,
        [     0.0332,      0.0140,      0.0078,  ...,     -0.0262,      0.0204,     -0.0287],
        [    -0.0032,      0.0308,      0.0046,  ...,     -0.0176,      0.0211,     -0.0245],
        [    -0.0500,     -0.0001,     -0.0242,  ...,     -0.0135,      0.0138,     -0.0059]], device='cuda:0', requires_grad=True)
K: tensor([-1.4375, -1.4453,  1.4062, -1.2031,  1.6953,  0.8320,  0.0708, -0.9062, -0.1836, -1.1250, -0.9531,  1.0547, -0.8086, -0.7383, -1.1094, -1.0312, -0.9961, -1.3828,  0.0698,  0.5156,  1.2734, -0.5078,  1.0078, -1.7188, -0.3242, -0.7344, -0.0270,  0.7461, -0.7109, -1.2109, -1.8359, -0.9336,
         0.5586, -1.0156,  0.2090, -0.0058, -0.0718, -1.3984,  0.0889, -1.2812,  0.7656,  0.5625,  0.5938,  0.9453,  0.9336,  1.0625,  0.1738,  2.8594, -1.1484, -1.0781,  0.4688,  0.7734,  0.0479, -0.7070,  0.4199, -1.3594,  1.5156,  0.6289, -1.0391,  0.9180, -0.6133,  0.0420,  2.4531, -1.3984],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0057, -0.0021, -0.0029,  ...,  0.0142,  0.0059,  0.0227],
        [ 0.0570,  0.0236,  0.0407,  ..., -0.0446, -0.0110,  0.0272],
        [-0.0236, -0.0575,  0.0223,  ..., -0.0155,  0.0073,  0.0491],
        ...,
        [-0.0295,  0.0061,  0.0227,  ...,  0.0306,  0.0137, -0.0086],
        [ 0.0071, -0.0263, -0.0214,  ...,  0.0014,  0.0133, -0.0130],
        [-0.0092,  0.0275,  0.0117,  ...,  0.0261, -0.0249, -0.0023]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0469, -0.0449, -0.5625,  0.8906,  0.6602,  0.4395, -0.0752, -2.0312, -0.0544,  0.4961, -0.2041, -0.4434,  0.3457, -0.4570,  0.5781,  0.2393,  1.1094,  0.4922,  0.0659,  0.9219, -0.3750,  0.5273,  0.3359, -0.9766,  1.3750,  1.5391,  0.5312, -0.1953,  0.1143,  0.6523,  0.0933, -0.3418,
        -0.6758, -0.2500,  0.1436, -1.1953, -1.8672, -0.2129,  1.1875,  0.7227, -1.5625, -0.6641, -0.0520,  1.5156,  0.2852,  0.3750,  0.4492,  0.2236,  0.6445,  0.4316, -0.5742, -0.7734,  0.0165, -0.5391, -1.9766,  0.2637, -1.6719,  0.5547,  0.5586, -0.0141,  0.2148,  0.3105, -0.4473,  0.4609],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.4219,      0.4980,     -0.0525,      1.5391,      1.3672,      0.8750,      0.5039,      2.4375,     -0.5234,     -0.9258,      0.4824,      0.8203,      1.9766,      0.5352],
        [     0.0000,      1.5469,      0.1216,     -0.1025,      1.0078,      2.0781,      0.5938,     -0.2266,      0.2500,     -1.4531,     -1.7578,     -1.0156,     -0.4258,     -0.3906,     -1.4531],
        [     0.0000,     -1.9297,     -2.2500,     -2.2500,     -0.6758,      0.1504,     -0.6641,     -2.4688,      1.3438,     -2.4219,     -2.6250,     -2.5469,     -2.3125,      0.8906,     -2.0156],
        [     0.0000,     -2.2500,     -3.2188,     -4.4062,     -2.4688,     -1.1016,     -1.7266,     -3.6875,      0.9062,     -2.8750,     -3.6094,     -3.5938,     -3.4062,      0.2002,     -2.9062],
        [     0.0000,      0.2930,     -0.6523,     -1.2734,     -0.7188,     -0.0356,     -0.5352,     -1.7344,      0.8633,     -2.4219,     -1.4688,     -1.2031,     -1.3203,      0.6719,     -0.7422],
        [     0.0000,     -2.7500,     -3.8594,     -4.0312,     -2.3906,     -1.8906,     -1.8750,     -4.5000,      0.7734,     -3.9844,     -3.7344,     -4.0625,     -3.9219,      0.2773,     -3.2812],
        [     0.0000,     -2.8906,     -5.0000,     -5.3125,     -2.9062,     -1.9219,     -2.9688,     -4.1562,      2.2344,     -4.2188,     -4.8438,     -4.5000,     -3.7031,      2.3750,     -4.0000],
        [     0.0000,     -0.4551,     -1.8438,     -2.9531,     -0.7148,      0.7695,     -0.4785,     -1.8281,      1.2656,     -0.3223,     -0.9922,     -1.8984,     -0.9453,      0.9609,     -1.6406],
        [     0.0000,      0.3574,      0.5234,     -0.3438,      0.7695,      2.2656,      1.0625,      2.3438,      1.2969,      2.0625,      2.0469,      0.7617,      2.6250,      2.1250,      0.5859],
        [     0.0000,     -1.2109,     -1.3594,     -1.7812,     -1.4609,      0.1631,     -0.9844,     -0.1309,      0.3359,      0.2490,      0.4414,     -0.9414,      0.2393,      1.0938,     -1.3516],
        [     0.0000,      0.4355,     -0.9805,     -1.0469,      0.2969,      1.6094,     -0.7148,     -0.0447,      0.4238,     -0.4277,     -0.8203,     -1.1250,      0.5977,      0.9023,     -1.5078],
        [     0.0000,     -1.8750,     -3.7969,     -4.7812,     -3.2656,     -2.0781,     -3.2656,     -3.5156,      0.9648,     -2.9062,     -3.0156,     -3.6094,     -2.3125,      2.1562,     -2.9688],
        [     0.0000,     -0.8320,     -2.1562,     -3.1094,     -1.4062,      0.0011,     -1.3203,     -1.8125,      0.7852,     -0.3613,     -0.7305,     -1.9375,     -0.5078,      1.6484,     -1.7812],
        [     0.0000,     -0.7070,     -1.0469,     -1.3203,     -0.2471,      1.1172,     -0.2129,      0.1787,      0.2949,      0.5234,     -0.3223,     -0.6055,      1.0547,      0.7812,     -0.9883]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1977],
        [0.2059],
        [0.3790],
        [0.3665],
        [0.1130],
        [0.2226],
        [0.2822],
        [0.2333],
        [0.0821],
        [0.1430],
        [0.0819],
        [0.2200],
        [0.1291],
        [0.0791]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0957 a:0.0796 and:0.2812 and:0.1279om:0.1250,:0.3359 a:0.0596ips:0.0349)
ips
------
		( a:0.0796 and:0.2812 and:0.1279om:0.1250,:0.3359 a:0.0596ips:0.0349,:0.3184)
, and other vegetables.
- The most common form of the world is
@ 1550 train 5.0151 , allloss: 5.0162, dt: 1259.32ms, fracRes: 0.2483, norm(attn): 0.2715, norm(output): 0.6992, norm(x): 0.5707, norm(y): 1.0119, norm:1.0249, tok/sec: 104081.41, flops:81.06, batch-reuse:1
@ 1551 train 4.9332 , allloss: 4.9345, dt: 923.19ms, fracRes: 0.2491, norm(attn): 0.2695, norm(output): 0.7031, norm(x): 0.5713, norm(y): 1.0120, norm:0.9039, tok/sec: 141976.67, flops:110.57, batch-reuse:1
@ 1552 train 4.8358 , allloss: 4.8366, dt: 895.84ms, fracRes: 0.2484, norm(attn): 0.2695, norm(output): 0.6953, norm(x): 0.5656, norm(y): 1.0120, norm:1.0385, tok/sec: 146311.35, flops:113.95, batch-reuse:1
@ 1553 train 4.9293 , allloss: 4.9300, dt: 896.19ms, fracRes: 0.2474, norm(attn): 0.2676, norm(output): 0.6914, norm(x): 0.5649, norm(y): 1.0120, norm:0.9032, tok/sec: 146254.56, flops:113.90, batch-reuse:1
@ 1554 train 4.9040 , allloss: 4.9051, dt: 905.72ms, fracRes: 0.2458, norm(attn): 0.2715, norm(output): 0.6875, norm(x): 0.5639, norm(y): 1.0119, norm:0.8722, tok/sec: 144715.39, flops:112.70, batch-reuse:1
@ 1555 train 4.9734 , allloss: 4.9745, dt: 902.91ms, fracRes: 0.2435, norm(attn): 0.2734, norm(output): 0.6914, norm(x): 0.5696, norm(y): 1.0119, norm:0.8166, tok/sec: 145166.22, flops:113.06, batch-reuse:1
@ 1556 train 5.0638 , allloss: 5.0661, dt: 893.58ms, fracRes: 0.2415, norm(attn): 0.2734, norm(output): 0.7070, norm(x): 0.5732, norm(y): 1.0119, norm:0.7880, tok/sec: 146681.78, flops:114.24, batch-reuse:1
@ 1557 train 4.9634 , allloss: 4.9643, dt: 898.45ms, fracRes: 0.2445, norm(attn): 0.2793, norm(output): 0.6992, norm(x): 0.5704, norm(y): 1.0120, norm:0.8899, tok/sec: 145886.63, flops:113.62, batch-reuse:1
@ 1558 train 4.8744 , allloss: 4.8751, dt: 903.36ms, fracRes: 0.2476, norm(attn): 0.2773, norm(output): 0.7031, norm(x): 0.5699, norm(y): 1.0122, norm:0.8937, tok/sec: 145094.00, flops:113.00, batch-reuse:1
@ 1559 train 4.9349 , allloss: 4.9353, dt: 896.56ms, fracRes: 0.2465, norm(attn): 0.2793, norm(output): 0.7109, norm(x): 0.5800, norm(y): 1.0121, norm:1.0046, tok/sec: 146194.04, flops:113.86, batch-reuse:1
@ 1560 train 4.9826 , allloss: 4.9831, dt: 898.90ms, fracRes: 0.2479, norm(attn): 0.2793, norm(output): 0.7031, norm(x): 0.5811, norm(y): 1.0119, norm:1.0127, tok/sec: 145814.00, flops:113.56, batch-reuse:1
@ 1561 train 4.9557 , allloss: 4.9565, dt: 898.27ms, fracRes: 0.2492, norm(attn): 0.2754, norm(output): 0.6953, norm(x): 0.5752, norm(y): 1.0120, norm:0.9842, tok/sec: 145916.29, flops:113.64, batch-reuse:1
@ 1562 train 4.8819 , allloss: 4.8826, dt: 895.53ms, fracRes: 0.2505, norm(attn): 0.2793, norm(output): 0.6992, norm(x): 0.5769, norm(y): 1.0120, norm:0.9797, tok/sec: 146362.84, flops:113.99, batch-reuse:1
@ 1563 train 4.9037 , allloss: 4.9044, dt: 928.36ms, fracRes: 0.2516, norm(attn): 0.2793, norm(output): 0.6914, norm(x): 0.5715, norm(y): 1.0121, norm:0.9381, tok/sec: 141186.36, flops:109.96, batch-reuse:1
@ 1564 train 4.9089 , allloss: 4.9096, dt: 929.18ms, fracRes: 0.2509, norm(attn): 0.2773, norm(output): 0.6953, norm(x): 0.5708, norm(y): 1.0121, norm:0.9042, tok/sec: 141061.37, flops:109.86, batch-reuse:1
@ 1565 train 4.9520 , allloss: 4.9530, dt: 932.46ms, fracRes: 0.2507, norm(attn): 0.2734, norm(output): 0.6992, norm(x): 0.5746, norm(y): 1.0120, norm:0.8601, tok/sec: 140565.66, flops:109.47, batch-reuse:1
@ 1566 train 4.9274 , allloss: 4.9291, dt: 931.01ms, fracRes: 0.2506, norm(attn): 0.2773, norm(output): 0.7070, norm(x): 0.5810, norm(y): 1.0120, norm:0.8076, tok/sec: 140785.10, flops:109.64, batch-reuse:1
@ 1567 train 4.8972 , allloss: 4.8981, dt: 923.89ms, fracRes: 0.2489, norm(attn): 0.2773, norm(output): 0.7070, norm(x): 0.5817, norm(y): 1.0120, norm:0.9081, tok/sec: 141869.36, flops:110.49, batch-reuse:1
@ 1568 train 4.8802 , allloss: 4.8812, dt: 908.65ms, fracRes: 0.2461, norm(attn): 0.2793, norm(output): 0.7031, norm(x): 0.5810, norm(y): 1.0119, norm:0.8533, tok/sec: 144249.21, flops:112.34, batch-reuse:1
@ 1569 train 4.7755 , allloss: 4.7773, dt: 913.01ms, fracRes: 0.2474, norm(attn): 0.2793, norm(output): 0.7031, norm(x): 0.5818, norm(y): 1.0120, norm:0.7143, tok/sec: 143559.73, flops:111.80, batch-reuse:1
@ 1570 train 4.8867 , allloss: 4.8876, dt: 910.05ms, fracRes: 0.2483, norm(attn): 0.2734, norm(output): 0.7148, norm(x): 0.5860, norm(y): 1.0122, norm:0.7015, tok/sec: 144027.76, flops:112.17, batch-reuse:1
@ 1571 train 4.9036 , allloss: 4.9044, dt: 904.85ms, fracRes: 0.2484, norm(attn): 0.2754, norm(output): 0.7188, norm(x): 0.5872, norm(y): 1.0120, norm:0.7178, tok/sec: 144854.18, flops:112.81, batch-reuse:1
@ 1572 train 4.8758 , allloss: 4.8764, dt: 895.08ms, fracRes: 0.2497, norm(attn): 0.2773, norm(output): 0.7188, norm(x): 0.5893, norm(y): 1.0121, norm:0.7835, tok/sec: 146435.63, flops:114.04, batch-reuse:1
@ 1573 train 4.9294 , allloss: 4.9300, dt: 896.43ms, fracRes: 0.2485, norm(attn): 0.2754, norm(output): 0.7266, norm(x): 0.5925, norm(y): 1.0121, norm:0.9871, tok/sec: 146215.27, flops:113.87, batch-reuse:1
@ 1574 train 4.8891 , allloss: 4.8900, dt: 902.88ms, fracRes: 0.2491, norm(attn): 0.2793, norm(output): 0.7188, norm(x): 0.5862, norm(y): 1.0120, norm:1.0558, tok/sec: 145171.17, flops:113.06, batch-reuse:1
@ 1575 train 4.8870 , allloss: 4.8885, dt: 891.97ms, fracRes: 0.2501, norm(attn): 0.2773, norm(output): 0.7070, norm(x): 0.5829, norm(y): 1.0120, norm:0.9701, tok/sec: 146947.33, flops:114.44, batch-reuse:1
@ 1576 train 4.9120 , allloss: 4.9144, dt: 906.08ms, fracRes: 0.2496, norm(attn): 0.2773, norm(output): 0.7148, norm(x): 0.5921, norm(y): 1.0120, norm:1.0441, tok/sec: 144657.96, flops:112.66, batch-reuse:1
@ 1577 train 4.8253 , allloss: 4.8261, dt: 909.85ms, fracRes: 0.2480, norm(attn): 0.2754, norm(output): 0.7148, norm(x): 0.5905, norm(y): 1.0121, norm:0.9120, tok/sec: 144058.21, flops:112.19, batch-reuse:1
@ 1578 train 4.8621 , allloss: 4.8635, dt: 903.86ms, fracRes: 0.2523, norm(attn): 0.2754, norm(output): 0.7344, norm(x): 0.5912, norm(y): 1.0122, norm:1.0537, tok/sec: 145013.40, flops:112.94, batch-reuse:1
@ 1579 train 4.7816 , allloss: 4.7824, dt: 893.08ms, fracRes: 0.2490, norm(attn): 0.2773, norm(output): 0.7266, norm(x): 0.5909, norm(y): 1.0120, norm:0.9756, tok/sec: 146764.52, flops:114.30, batch-reuse:1
@ 1580 train 4.8147 , allloss: 4.8178, dt: 904.46ms, fracRes: 0.2477, norm(attn): 0.2793, norm(output): 0.7070, norm(x): 0.5886, norm(y): 1.0118, norm:0.9153, tok/sec: 144917.53, flops:112.86, batch-reuse:1
@ 1581 train 4.7165 , allloss: 4.7183, dt: 895.43ms, fracRes: 0.2509, norm(attn): 0.2773, norm(output): 0.7148, norm(x): 0.5883, norm(y): 1.0120, norm:0.9101, tok/sec: 146378.08, flops:114.00, batch-reuse:1
@ 1582 train 4.8209 , allloss: 4.8224, dt: 933.81ms, fracRes: 0.2494, norm(attn): 0.2773, norm(output): 0.7383, norm(x): 0.5920, norm(y): 1.0122, norm:0.8759, tok/sec: 140362.06, flops:109.31, batch-reuse:1
@ 1583 train 4.7729 , allloss: 4.7737, dt: 903.99ms, fracRes: 0.2506, norm(attn): 0.2793, norm(output): 0.7422, norm(x): 0.5988, norm(y): 1.0122, norm:0.8519, tok/sec: 144993.25, flops:112.92, batch-reuse:1
@ 1584 train 4.8296 , allloss: 4.8321, dt: 905.87ms, fracRes: 0.2512, norm(attn): 0.2773, norm(output): 0.7461, norm(x): 0.5977, norm(y): 1.0121, norm:0.8086, tok/sec: 144692.15, flops:112.69, batch-reuse:1
@ 1585 train 4.8293 , allloss: 4.8315, dt: 909.69ms, fracRes: 0.2518, norm(attn): 0.2793, norm(output): 0.7461, norm(x): 0.5964, norm(y): 1.0121, norm:0.8589, tok/sec: 144084.30, flops:112.21, batch-reuse:1
@ 1586 train 4.8242 , allloss: 4.8258, dt: 899.59ms, fracRes: 0.2530, norm(attn): 0.2754, norm(output): 0.7422, norm(x): 0.5942, norm(y): 1.0122, norm:0.8038, tok/sec: 145702.16, flops:113.47, batch-reuse:1
@ 1587 train 4.8385 , allloss: 4.8392, dt: 910.01ms, fracRes: 0.2514, norm(attn): 0.2734, norm(output): 0.7383, norm(x): 0.5999, norm(y): 1.0122, norm:0.7629, tok/sec: 144032.89, flops:112.17, batch-reuse:1
@ 1588 train 4.8595 , allloss: 4.8601, dt: 926.20ms, fracRes: 0.2523, norm(attn): 0.2754, norm(output): 0.7461, norm(x): 0.6004, norm(y): 1.0122, norm:0.7920, tok/sec: 141516.21, flops:110.21, batch-reuse:1
@ 1589 train 4.7673 , allloss: 4.7679, dt: 922.24ms, fracRes: 0.2519, norm(attn): 0.2754, norm(output): 0.7422, norm(x): 0.6011, norm(y): 1.0122, norm:0.8475, tok/sec: 142123.41, flops:110.69, batch-reuse:1
@ 1590 train 4.8821 , allloss: 4.8832, dt: 925.37ms, fracRes: 0.2540, norm(attn): 0.2715, norm(output): 0.7422, norm(x): 0.6011, norm(y): 1.0121, norm:0.8690, tok/sec: 141642.15, flops:110.31, batch-reuse:1
@ 1591 train 4.7318 , allloss: 4.7363, dt: 924.14ms, fracRes: 0.2543, norm(attn): 0.2734, norm(output): 0.7500, norm(x): 0.6109, norm(y): 1.0121, norm:0.8149, tok/sec: 141831.69, flops:110.46, batch-reuse:1
@ 1592 train 4.8455 , allloss: 4.8460, dt: 896.89ms, fracRes: 0.2506, norm(attn): 0.2793, norm(output): 0.7461, norm(x): 0.6118, norm(y): 1.0121, norm:0.9763, tok/sec: 146140.10, flops:113.81, batch-reuse:1
@ 1593 train 4.8419 , allloss: 4.8437, dt: 881.60ms, fracRes: 0.2499, norm(attn): 0.2793, norm(output): 0.7461, norm(x): 0.6087, norm(y): 1.0121, norm:1.1651, tok/sec: 148674.39, flops:115.79, batch-reuse:1
@ 1594 train 4.7099 , allloss: 4.7109, dt: 900.53ms, fracRes: 0.2515, norm(attn): 0.2754, norm(output): 0.7461, norm(x): 0.6044, norm(y): 1.0122, norm:0.9561, tok/sec: 145550.56, flops:113.36, batch-reuse:1
@ 1595 train 4.8730 , allloss: 4.8738, dt: 896.22ms, fracRes: 0.2516, norm(attn): 0.2754, norm(output): 0.7461, norm(x): 0.6032, norm(y): 1.0124, norm:0.9300, tok/sec: 146249.27, flops:113.90, batch-reuse:1
@ 1596 train 4.7699 , allloss: 4.7705, dt: 888.69ms, fracRes: 0.2497, norm(attn): 0.2773, norm(output): 0.7383, norm(x): 0.5999, norm(y): 1.0123, norm:0.8057, tok/sec: 147488.45, flops:114.86, batch-reuse:1
@ 1597 train 4.8316 , allloss: 4.8329, dt: 914.55ms, fracRes: 0.2514, norm(attn): 0.2793, norm(output): 0.7500, norm(x): 0.6066, norm(y): 1.0123, norm:0.9247, tok/sec: 143318.97, flops:111.62, batch-reuse:1
@ 1598 train 4.7765 , allloss: 4.7783, dt: 889.11ms, fracRes: 0.2522, norm(attn): 0.2832, norm(output): 0.7461, norm(x): 0.6089, norm(y): 1.0122, norm:0.9875, tok/sec: 147419.51, flops:114.81, batch-reuse:1
@ 1599 train 4.8929 , allloss: 4.8945, dt: 888.77ms, fracRes: 0.2519, norm(attn): 0.2812, norm(output): 0.7500, norm(x): 0.6137, norm(y): 1.0122, norm:0.9514, tok/sec: 147476.10, flops:114.85, batch-reuse:1
@ 1600 train 4.7760 , allloss: 4.7771, dt: 904.35ms, fracRes: 0.2489, norm(attn): 0.2832, norm(output): 0.7500, norm(x): 0.6190, norm(y): 1.0120, norm:0.9001, tok/sec: 144934.30, flops:112.88, batch-reuse:1
@ 1601 train 4.9144 , allloss: 4.9161, dt: 908.41ms, fracRes: 0.2530, norm(attn): 0.2773, norm(output): 0.7461, norm(x): 0.6097, norm(y): 1.0123, norm:0.8843, tok/sec: 144287.68, flops:112.37, batch-reuse:1
@ 1602 train 4.7830 , allloss: 4.7857, dt: 903.20ms, fracRes: 0.2542, norm(attn): 0.2793, norm(output): 0.7461, norm(x): 0.6070, norm(y): 1.0122, norm:0.9379, tok/sec: 145118.82, flops:113.02, batch-reuse:1
@ 1603 train 4.7508 , allloss: 4.7519, dt: 892.58ms, fracRes: 0.2522, norm(attn): 0.2793, norm(output): 0.7500, norm(x): 0.6092, norm(y): 1.0123, norm:0.9990, tok/sec: 146846.80, flops:114.36, batch-reuse:1
@ 1604 train 4.7775 , allloss: 4.7793, dt: 899.51ms, fracRes: 0.2530, norm(attn): 0.2754, norm(output): 0.7500, norm(x): 0.6115, norm(y): 1.0122, norm:1.0837, tok/sec: 145714.25, flops:113.48, batch-reuse:1
@ 1605 train 4.8446 , allloss: 4.8466, dt: 915.56ms, fracRes: 0.2535, norm(attn): 0.2812, norm(output): 0.7500, norm(x): 0.6130, norm(y): 1.0120, norm:1.0773, tok/sec: 143160.06, flops:111.49, batch-reuse:1
@ 1606 train 4.8218 , allloss: 4.8245, dt: 914.01ms, fracRes: 0.2519, norm(attn): 0.2812, norm(output): 0.7539, norm(x): 0.6210, norm(y): 1.0120, norm:0.8361, tok/sec: 143402.71, flops:111.68, batch-reuse:1
@ 1607 train 4.7975 , allloss: 4.7998, dt: 906.84ms, fracRes: 0.2529, norm(attn): 0.2793, norm(output): 0.7539, norm(x): 0.6185, norm(y): 1.0122, norm:0.8270, tok/sec: 144536.41, flops:112.57, batch-reuse:1
@ 1608 train 4.8511 , allloss: 4.8528, dt: 908.07ms, fracRes: 0.2523, norm(attn): 0.2754, norm(output): 0.7578, norm(x): 0.6196, norm(y): 1.0123, norm:0.9619, tok/sec: 144341.28, flops:112.41, batch-reuse:1
@ 1609 train 4.8027 , allloss: 4.8038, dt: 893.50ms, fracRes: 0.2526, norm(attn): 0.2812, norm(output): 0.7539, norm(x): 0.6169, norm(y): 1.0121, norm:1.0356, tok/sec: 146694.42, flops:114.25, batch-reuse:1
@ 1610 train 4.7487 , allloss: 4.7497, dt: 893.09ms, fracRes: 0.2535, norm(attn): 0.2832, norm(output): 0.7500, norm(x): 0.6127, norm(y): 1.0120, norm:0.8618, tok/sec: 146761.70, flops:114.30, batch-reuse:1
@ 1611 train 4.7297 , allloss: 4.7321, dt: 913.41ms, fracRes: 0.2546, norm(attn): 0.2812, norm(output): 0.7539, norm(x): 0.6109, norm(y): 1.0122, norm:0.8004, tok/sec: 143498.20, flops:111.76, batch-reuse:1
@ 1612 train 4.7849 , allloss: 4.7861, dt: 893.15ms, fracRes: 0.2528, norm(attn): 0.2754, norm(output): 0.7539, norm(x): 0.6169, norm(y): 1.0122, norm:0.8727, tok/sec: 146751.71, flops:114.29, batch-reuse:1
@ 1613 train 4.7924 , allloss: 4.7934, dt: 898.29ms, fracRes: 0.2513, norm(attn): 0.2754, norm(output): 0.7578, norm(x): 0.6214, norm(y): 1.0122, norm:0.8439, tok/sec: 145913.07, flops:113.64, batch-reuse:1
@ 1614 train 4.8687 , allloss: 4.8706, dt: 885.45ms, fracRes: 0.2531, norm(attn): 0.2793, norm(output): 0.7539, norm(x): 0.6224, norm(y): 1.0122, norm:0.8029, tok/sec: 148028.39, flops:115.29, batch-reuse:1
@ 1615 train 4.7536 , allloss: 4.7545, dt: 889.70ms, fracRes: 0.2544, norm(attn): 0.2812, norm(output): 0.7539, norm(x): 0.6213, norm(y): 1.0121, norm:0.8155, tok/sec: 147321.74, flops:114.73, batch-reuse:1
@ 1616 train 4.8463 , allloss: 4.8473, dt: 910.34ms, fracRes: 0.2551, norm(attn): 0.2812, norm(output): 0.7578, norm(x): 0.6250, norm(y): 1.0122, norm:0.8654, tok/sec: 143981.85, flops:112.13, batch-reuse:1
@ 1617 train 4.7765 , allloss: 4.7779, dt: 911.74ms, fracRes: 0.2541, norm(attn): 0.2812, norm(output): 0.7656, norm(x): 0.6303, norm(y): 1.0122, norm:1.0445, tok/sec: 143760.95, flops:111.96, batch-reuse:1
@ 1618 train 4.8147 , allloss: 4.8162, dt: 884.64ms, fracRes: 0.2545, norm(attn): 0.2832, norm(output): 0.7539, norm(x): 0.6267, norm(y): 1.0121, norm:0.9549, tok/sec: 148163.91, flops:115.39, batch-reuse:1
@ 1619 train 4.7038 , allloss: 4.7049, dt: 916.06ms, fracRes: 0.2582, norm(attn): 0.2812, norm(output): 0.7539, norm(x): 0.6231, norm(y): 1.0122, norm:0.8611, tok/sec: 143082.63, flops:111.43, batch-reuse:1
@ 1620 train 4.6965 , allloss: 4.6991, dt: 902.86ms, fracRes: 0.2580, norm(attn): 0.2793, norm(output): 0.7734, norm(x): 0.6302, norm(y): 1.0123, norm:0.8420, tok/sec: 145173.81, flops:113.06, batch-reuse:1
@ 1621 train 4.8089 , allloss: 4.8104, dt: 917.74ms, fracRes: 0.2583, norm(attn): 0.2793, norm(output): 0.7969, norm(x): 0.6333, norm(y): 1.0124, norm:0.9636, tok/sec: 142819.76, flops:111.23, batch-reuse:1
@ 1622 train 4.8053 , allloss: 4.8117, dt: 914.13ms, fracRes: 0.2608, norm(attn): 0.2793, norm(output): 0.7812, norm(x): 0.6264, norm(y): 1.0125, norm:0.9503, tok/sec: 143384.01, flops:111.67, batch-reuse:1
@ 1623 train 4.7020 , allloss: 4.7038, dt: 909.09ms, fracRes: 0.2586, norm(attn): 0.2812, norm(output): 0.7617, norm(x): 0.6278, norm(y): 1.0123, norm:0.9172, tok/sec: 144179.45, flops:112.29, batch-reuse:1
@ 1624 train 4.6615 , allloss: 4.6622, dt: 889.43ms, fracRes: 0.2543, norm(attn): 0.2832, norm(output): 0.7734, norm(x): 0.6341, norm(y): 1.0121, norm:1.1345, tok/sec: 147365.69, flops:114.77, batch-reuse:1
@ 1625 train 4.7213 , allloss: 4.7235, dt: 891.52ms, fracRes: 0.2544, norm(attn): 0.2812, norm(output): 0.7773, norm(x): 0.6374, norm(y): 1.0123, norm:0.9912, tok/sec: 147020.30, flops:114.50, batch-reuse:1
@ 1626 train 4.7410 , allloss: 4.7421, dt: 889.84ms, fracRes: 0.2549, norm(attn): 0.2812, norm(output): 0.7695, norm(x): 0.6368, norm(y): 1.0123, norm:0.9673, tok/sec: 147298.37, flops:114.72, batch-reuse:1
@ 1627 train 4.6728 , allloss: 4.6739, dt: 901.07ms, fracRes: 0.2536, norm(attn): 0.2812, norm(output): 0.7695, norm(x): 0.6335, norm(y): 1.0121, norm:1.0966, tok/sec: 145463.06, flops:113.29, batch-reuse:1
@ 1628 train 4.6671 , allloss: 4.6683, dt: 885.04ms, fracRes: 0.2516, norm(attn): 0.2832, norm(output): 0.7695, norm(x): 0.6395, norm(y): 1.0121, norm:0.9354, tok/sec: 148097.25, flops:115.34, batch-reuse:1
@ 1629 train 4.6628 , allloss: 4.6642, dt: 901.28ms, fracRes: 0.2527, norm(attn): 0.2812, norm(output): 0.7656, norm(x): 0.6388, norm(y): 1.0122, norm:0.9487, tok/sec: 145428.85, flops:113.26, batch-reuse:1
@ 1630 train 4.7157 , allloss: 4.7174, dt: 896.77ms, fracRes: 0.2540, norm(attn): 0.2812, norm(output): 0.7734, norm(x): 0.6405, norm(y): 1.0123, norm:0.9414, tok/sec: 146160.34, flops:113.83, batch-reuse:1
@ 1631 train 4.6115 , allloss: 4.6137, dt: 898.89ms, fracRes: 0.2571, norm(attn): 0.2832, norm(output): 0.7734, norm(x): 0.6421, norm(y): 1.0122, norm:0.8691, tok/sec: 145815.08, flops:113.56, batch-reuse:1
@ 1632 train 4.7355 , allloss: 4.7387, dt: 917.66ms, fracRes: 0.2601, norm(attn): 0.2812, norm(output): 0.7734, norm(x): 0.6362, norm(y): 1.0124, norm:0.8390, tok/sec: 142833.38, flops:111.24, batch-reuse:1
@ 1633 train 4.7145 , allloss: 4.7155, dt: 903.33ms, fracRes: 0.2588, norm(attn): 0.2812, norm(output): 0.7773, norm(x): 0.6330, norm(y): 1.0124, norm:0.8902, tok/sec: 145098.14, flops:113.00, batch-reuse:1
@ 1634 train 4.7239 , allloss: 4.7267, dt: 910.31ms, fracRes: 0.2581, norm(attn): 0.2812, norm(output): 0.7812, norm(x): 0.6381, norm(y): 1.0123, norm:1.0647, tok/sec: 143985.73, flops:112.14, batch-reuse:1
@ 1635 train 4.6534 , allloss: 4.6563, dt: 922.00ms, fracRes: 0.2565, norm(attn): 0.2871, norm(output): 0.8047, norm(x): 0.6487, norm(y): 1.0124, norm:1.2238, tok/sec: 142160.97, flops:110.72, batch-reuse:1
@ 1636 train 4.6438 , allloss: 4.6450, dt: 921.50ms, fracRes: 0.2552, norm(attn): 0.2852, norm(output): 0.8086, norm(x): 0.6568, norm(y): 1.0123, norm:1.0337, tok/sec: 142237.73, flops:110.78, batch-reuse:1
@ 1637 train 4.7410 , allloss: 4.7440, dt: 903.88ms, fracRes: 0.2557, norm(attn): 0.2832, norm(output): 0.8125, norm(x): 0.6580, norm(y): 1.0124, norm:1.1818, tok/sec: 145009.88, flops:112.93, batch-reuse:1
@ 1638 train 4.7452 , allloss: 4.7467, dt: 897.20ms, fracRes: 0.2566, norm(attn): 0.2832, norm(output): 0.8086, norm(x): 0.6587, norm(y): 1.0123, norm:1.0411, tok/sec: 146089.57, flops:113.78, batch-reuse:1
@ 1639 train 4.6590 , allloss: 4.6597, dt: 900.88ms, fracRes: 0.2567, norm(attn): 0.2832, norm(output): 0.8086, norm(x): 0.6513, norm(y): 1.0124, norm:0.8701, tok/sec: 145494.09, flops:113.31, batch-reuse:1
@ 1640 train 4.6947 , allloss: 4.6957, dt: 901.70ms, fracRes: 0.2587, norm(attn): 0.2793, norm(output): 0.8047, norm(x): 0.6488, norm(y): 1.0126, norm:0.8650, tok/sec: 145361.75, flops:113.21, batch-reuse:1
@ 1641 train 4.6980 , allloss: 4.6996, dt: 898.37ms, fracRes: 0.2566, norm(attn): 0.2793, norm(output): 0.8008, norm(x): 0.6518, norm(y): 1.0124, norm:1.0231, tok/sec: 145899.52, flops:113.63, batch-reuse:1
@ 1642 train 4.6860 , allloss: 4.6885, dt: 902.95ms, fracRes: 0.2609, norm(attn): 0.2793, norm(output): 0.8125, norm(x): 0.6557, norm(y): 1.0125, norm:1.0645, tok/sec: 145159.63, flops:113.05, batch-reuse:1
@ 1643 train 4.7155 , allloss: 4.7168, dt: 907.87ms, fracRes: 0.2599, norm(attn): 0.2812, norm(output): 0.8008, norm(x): 0.6491, norm(y): 1.0123, norm:1.1141, tok/sec: 144372.89, flops:112.44, batch-reuse:1
@ 1644 train 4.7712 , allloss: 4.7725, dt: 914.56ms, fracRes: 0.2611, norm(attn): 0.2832, norm(output): 0.7891, norm(x): 0.6460, norm(y): 1.0123, norm:0.9103, tok/sec: 143317.59, flops:111.62, batch-reuse:1
@ 1645 train 4.6530 , allloss: 4.6537, dt: 915.22ms, fracRes: 0.2610, norm(attn): 0.2832, norm(output): 0.8125, norm(x): 0.6581, norm(y): 1.0125, norm:1.1389, tok/sec: 143213.91, flops:111.54, batch-reuse:1
@ 1646 train 4.7144 , allloss: 4.7152, dt: 898.08ms, fracRes: 0.2597, norm(attn): 0.2832, norm(output): 0.8125, norm(x): 0.6642, norm(y): 1.0125, norm:1.0775, tok/sec: 145947.55, flops:113.66, batch-reuse:1
@ 1647 train 4.7655 , allloss: 4.7668, dt: 917.38ms, fracRes: 0.2598, norm(attn): 0.2812, norm(output): 0.8125, norm(x): 0.6614, norm(y): 1.0126, norm:1.0887, tok/sec: 142876.59, flops:111.27, batch-reuse:1
@ 1648 train 4.7048 , allloss: 4.7131, dt: 897.34ms, fracRes: 0.2590, norm(attn): 0.2832, norm(output): 0.8125, norm(x): 0.6643, norm(y): 1.0124, norm:1.0074, tok/sec: 146067.95, flops:113.76, batch-reuse:1
@ 1649 train 4.6960 , allloss: 4.6980, dt: 921.40ms, fracRes: 0.2559, norm(attn): 0.2871, norm(output): 0.8086, norm(x): 0.6644, norm(y): 1.0123, norm:1.0809, tok/sec: 142252.49, flops:110.79, batch-reuse:1
@ 1650 train 4.7107 , allloss: 4.7120, dt: 907.79ms, fracRes: 0.2541, norm(attn): 0.2871, norm(output): 0.8164, norm(x): 0.6727, norm(y): 1.0122, norm:1.0539, tok/sec: 144385.33, flops:112.45, batch-reuse:1
@ 1651 train 4.8116 , allloss: 4.8127, dt: 916.92ms, fracRes: 0.2545, norm(attn): 0.2871, norm(output): 0.8242, norm(x): 0.6781, norm(y): 1.0121, norm:1.0584, tok/sec: 142948.77, flops:111.33, batch-reuse:1
@ 1652 train 4.7922 , allloss: 4.7938, dt: 913.10ms, fracRes: 0.2582, norm(attn): 0.2832, norm(output): 0.8164, norm(x): 0.6792, norm(y): 1.0124, norm:0.9868, tok/sec: 143546.54, flops:111.79, batch-reuse:1
@ 1653 train 4.7435 , allloss: 4.7462, dt: 900.56ms, fracRes: 0.2595, norm(attn): 0.2871, norm(output): 0.8242, norm(x): 0.6810, norm(y): 1.0125, norm:1.3375, tok/sec: 145545.36, flops:113.35, batch-reuse:1
@ 1654 train 4.6998 , allloss: 4.7032, dt: 886.81ms, fracRes: 0.2590, norm(attn): 0.2832, norm(output): 0.8203, norm(x): 0.6739, norm(y): 1.0124, norm:1.0435, tok/sec: 147801.54, flops:115.11, batch-reuse:1
@ 1655 train 4.6189 , allloss: 4.6199, dt: 892.41ms, fracRes: 0.2601, norm(attn): 0.2852, norm(output): 0.8125, norm(x): 0.6647, norm(y): 1.0123, norm:1.0668, tok/sec: 146874.54, flops:114.39, batch-reuse:1
@ 1656 train 4.6593 , allloss: 4.6612, dt: 881.49ms, fracRes: 0.2575, norm(attn): 0.2852, norm(output): 0.8125, norm(x): 0.6636, norm(y): 1.0124, norm:1.0007, tok/sec: 148694.49, flops:115.80, batch-reuse:1
@ 1657 train 4.7494 , allloss: 4.7506, dt: 902.05ms, fracRes: 0.2591, norm(attn): 0.2832, norm(output): 0.8125, norm(x): 0.6614, norm(y): 1.0125, norm:0.9214, tok/sec: 145305.08, flops:113.16, batch-reuse:1
@ 1658 train 4.7554 , allloss: 4.7567, dt: 891.16ms, fracRes: 0.2595, norm(attn): 0.2812, norm(output): 0.8164, norm(x): 0.6678, norm(y): 1.0124, norm:1.0020, tok/sec: 147080.01, flops:114.55, batch-reuse:1
@ 1659 train 4.6830 , allloss: 4.6852, dt: 900.15ms, fracRes: 0.2619, norm(attn): 0.2832, norm(output): 0.8125, norm(x): 0.6667, norm(y): 1.0123, norm:1.1337, tok/sec: 145611.16, flops:113.40, batch-reuse:1
@ 1660 train 4.6457 , allloss: 4.6476, dt: 900.88ms, fracRes: 0.2610, norm(attn): 0.2891, norm(output): 0.8203, norm(x): 0.6771, norm(y): 1.0123, norm:0.9511, tok/sec: 145493.78, flops:113.31, batch-reuse:1
@ 1661 train 4.7488 , allloss: 4.7526, dt: 907.00ms, fracRes: 0.2624, norm(attn): 0.2871, norm(output): 0.8281, norm(x): 0.6739, norm(y): 1.0124, norm:1.1349, tok/sec: 144511.38, flops:112.55, batch-reuse:1
@ 1662 train 4.7358 , allloss: 4.7375, dt: 906.84ms, fracRes: 0.2608, norm(attn): 0.2852, norm(output): 0.8203, norm(x): 0.6738, norm(y): 1.0124, norm:0.8412, tok/sec: 144536.45, flops:112.57, batch-reuse:1
@ 1663 train 4.7349 , allloss: 4.7358, dt: 908.41ms, fracRes: 0.2616, norm(attn): 0.2871, norm(output): 0.8242, norm(x): 0.6764, norm(y): 1.0125, norm:0.9499, tok/sec: 144287.75, flops:112.37, batch-reuse:1
@ 1664 train 4.6757 , allloss: 4.6763, dt: 908.10ms, fracRes: 0.2597, norm(attn): 0.2930, norm(output): 0.8242, norm(x): 0.6835, norm(y): 1.0124, norm:0.9956, tok/sec: 144336.24, flops:112.41, batch-reuse:1
@ 1665 train 4.6973 , allloss: 4.6987, dt: 896.85ms, fracRes: 0.2598, norm(attn): 0.2930, norm(output): 0.8359, norm(x): 0.6881, norm(y): 1.0124, norm:0.8329, tok/sec: 146146.86, flops:113.82, batch-reuse:1
@ 1666 train 4.7600 , allloss: 4.7608, dt: 896.62ms, fracRes: 0.2616, norm(attn): 0.2910, norm(output): 0.8438, norm(x): 0.6889, norm(y): 1.0124, norm:0.8824, tok/sec: 146184.36, flops:113.85, batch-reuse:1
@ 1667 train 4.9037 , allloss: 4.9045, dt: 886.91ms, fracRes: 0.2610, norm(attn): 0.2910, norm(output): 0.8281, norm(x): 0.6849, norm(y): 1.0123, norm:0.8475, tok/sec: 147784.54, flops:115.10, batch-reuse:1
@ 1668 train 4.8813 , allloss: 4.8825, dt: 900.59ms, fracRes: 0.2631, norm(attn): 0.2930, norm(output): 0.8359, norm(x): 0.6814, norm(y): 1.0125, norm:1.0171, tok/sec: 145539.73, flops:113.35, batch-reuse:1
@ 1669 train 4.9259 , allloss: 4.9345, dt: 917.79ms, fracRes: 0.2619, norm(attn): 0.2910, norm(output): 0.8438, norm(x): 0.6909, norm(y): 1.0124, norm:1.2523, tok/sec: 142811.97, flops:111.22, batch-reuse:1
@ 1670 train 5.0033 , allloss: 5.0051, dt: 913.67ms, fracRes: 0.2619, norm(attn): 0.2910, norm(output): 0.8359, norm(x): 0.6875, norm(y): 1.0124, norm:1.1927, tok/sec: 143456.71, flops:111.72, batch-reuse:1
@ 1671 train 4.9234 , allloss: 4.9264, dt: 914.06ms, fracRes: 0.2606, norm(attn): 0.2910, norm(output): 0.8438, norm(x): 0.6858, norm(y): 1.0124, norm:1.0745, tok/sec: 143394.75, flops:111.68, batch-reuse:1
@ 1672 train 4.9538 , allloss: 4.9563, dt: 914.98ms, fracRes: 0.2591, norm(attn): 0.2949, norm(output): 0.8320, norm(x): 0.6850, norm(y): 1.0123, norm:1.4738, tok/sec: 143251.04, flops:111.56, batch-reuse:1
@ 1673 train 4.8418 , allloss: 4.8431, dt: 892.97ms, fracRes: 0.2606, norm(attn): 0.2930, norm(output): 0.8438, norm(x): 0.6897, norm(y): 1.0123, norm:1.1000, tok/sec: 146781.52, flops:114.31, batch-reuse:1
@ 1674 train 4.8671 , allloss: 4.8689, dt: 890.04ms, fracRes: 0.2603, norm(attn): 0.2949, norm(output): 0.8672, norm(x): 0.6988, norm(y): 1.0124, norm:0.9935, tok/sec: 147265.54, flops:114.69, batch-reuse:1
@ 1675 train 5.0003 , allloss: 5.0015, dt: 888.06ms, fracRes: 0.2610, norm(attn): 0.2988, norm(output): 0.8672, norm(x): 0.6978, norm(y): 1.0124, norm:1.3489, tok/sec: 147593.58, flops:114.95, batch-reuse:1
@ 1676 train 4.9903 , allloss: 4.9966, dt: 901.76ms, fracRes: 0.2633, norm(attn): 0.2930, norm(output): 0.8516, norm(x): 0.6970, norm(y): 1.0123, norm:1.0101, tok/sec: 145350.76, flops:113.20, batch-reuse:1
@ 1677 train 4.8602 , allloss: 4.8626, dt: 880.93ms, fracRes: 0.2617, norm(attn): 0.2949, norm(output): 0.8359, norm(x): 0.6971, norm(y): 1.0121, norm:1.0499, tok/sec: 148787.74, flops:115.88, batch-reuse:1
@ 1678 train 4.8415 , allloss: 4.8466, dt: 889.33ms, fracRes: 0.2617, norm(attn): 0.2910, norm(output): 0.8320, norm(x): 0.6899, norm(y): 1.0123, norm:1.0151, tok/sec: 147382.52, flops:114.78, batch-reuse:1
@ 1679 train 4.9608 , allloss: 4.9626, dt: 901.63ms, fracRes: 0.2617, norm(attn): 0.2852, norm(output): 0.8555, norm(x): 0.6897, norm(y): 1.0125, norm:1.0252, tok/sec: 145372.36, flops:113.22, batch-reuse:1
@ 1680 train 4.8748 , allloss: 4.8758, dt: 912.53ms, fracRes: 0.2626, norm(attn): 0.2871, norm(output): 0.8711, norm(x): 0.6916, norm(y): 1.0127, norm:1.0240, tok/sec: 143635.38, flops:111.86, batch-reuse:1
@ 1681 train 4.8796 , allloss: 4.8808, dt: 910.35ms, fracRes: 0.2624, norm(attn): 0.2832, norm(output): 0.8672, norm(x): 0.6997, norm(y): 1.0124, norm:0.9791, tok/sec: 143979.28, flops:112.13, batch-reuse:1
@ 1682 train 4.8896 , allloss: 4.8940, dt: 905.70ms, fracRes: 0.2622, norm(attn): 0.2852, norm(output): 0.8672, norm(x): 0.7003, norm(y): 1.0124, norm:0.9054, tok/sec: 144719.69, flops:112.71, batch-reuse:1
@ 1683 train 4.7864 , allloss: 4.7896, dt: 911.50ms, fracRes: 0.2663, norm(attn): 0.2852, norm(output): 0.8711, norm(x): 0.6987, norm(y): 1.0125, norm:0.9747, tok/sec: 143798.25, flops:111.99, batch-reuse:1
@ 1684 train 4.8201 , allloss: 4.8211, dt: 906.24ms, fracRes: 0.2650, norm(attn): 0.2871, norm(output): 0.8672, norm(x): 0.7008, norm(y): 1.0124, norm:0.9463, tok/sec: 144632.35, flops:112.64, batch-reuse:1
@ 1685 train 4.8876 , allloss: 4.8886, dt: 909.71ms, fracRes: 0.2641, norm(attn): 0.2852, norm(output): 0.8672, norm(x): 0.7003, norm(y): 1.0125, norm:0.8748, tok/sec: 144081.05, flops:112.21, batch-reuse:1
@ 1686 train 4.8610 , allloss: 4.8650, dt: 913.07ms, fracRes: 0.2657, norm(attn): 0.2852, norm(output): 0.8672, norm(x): 0.7035, norm(y): 1.0126, norm:0.9027, tok/sec: 143550.51, flops:111.80, batch-reuse:1
@ 1687 train 4.8741 , allloss: 4.8751, dt: 909.61ms, fracRes: 0.2683, norm(attn): 0.2832, norm(output): 0.8711, norm(x): 0.7022, norm(y): 1.0126, norm:0.8411, tok/sec: 144096.20, flops:112.22, batch-reuse:1
@ 1688 train 4.9470 , allloss: 4.9482, dt: 914.07ms, fracRes: 0.2666, norm(attn): 0.2871, norm(output): 0.8711, norm(x): 0.7051, norm(y): 1.0123, norm:0.8244, tok/sec: 143394.19, flops:111.68, batch-reuse:1
@ 1689 train 4.8296 , allloss: 4.8375, dt: 904.50ms, fracRes: 0.2659, norm(attn): 0.2852, norm(output): 0.8672, norm(x): 0.7098, norm(y): 1.0123, norm:0.8593, tok/sec: 144911.23, flops:112.86, batch-reuse:1
@ 1690 train 4.8284 , allloss: 4.8303, dt: 888.50ms, fracRes: 0.2661, norm(attn): 0.2871, norm(output): 0.8750, norm(x): 0.7113, norm(y): 1.0124, norm:0.8797, tok/sec: 147520.47, flops:114.89, batch-reuse:1
@ 1691 train 4.7719 , allloss: 4.7746, dt: 922.98ms, fracRes: 0.2628, norm(attn): 0.2871, norm(output): 0.8750, norm(x): 0.7132, norm(y): 1.0123, norm:0.8798, tok/sec: 142009.71, flops:110.60, batch-reuse:1
@ 1692 train 4.7513 , allloss: 4.7532, dt: 906.43ms, fracRes: 0.2595, norm(attn): 0.2930, norm(output): 0.8750, norm(x): 0.7134, norm(y): 1.0123, norm:0.8737, tok/sec: 144602.60, flops:112.62, batch-reuse:1
@ 1693 train 5.0277 , allloss: 5.0337, dt: 887.33ms, fracRes: 0.2609, norm(attn): 0.2891, norm(output): 0.8750, norm(x): 0.7117, norm(y): 1.0122, norm:0.9562, tok/sec: 147715.20, flops:115.04, batch-reuse:1
@ 1694 train 4.9784 , allloss: 4.9794, dt: 905.07ms, fracRes: 0.2660, norm(attn): 0.2891, norm(output): 0.8672, norm(x): 0.7137, norm(y): 1.0123, norm:1.0394, tok/sec: 144819.96, flops:112.79, batch-reuse:1
@ 1695 train 4.8582 , allloss: 4.8593, dt: 906.44ms, fracRes: 0.2652, norm(attn): 0.2832, norm(output): 0.8789, norm(x): 0.7213, norm(y): 1.0124, norm:1.0199, tok/sec: 144601.31, flops:112.62, batch-reuse:1
@ 1696 train 4.8740 , allloss: 4.8747, dt: 904.41ms, fracRes: 0.2637, norm(attn): 0.2891, norm(output): 0.8828, norm(x): 0.7271, norm(y): 1.0123, norm:1.2810, tok/sec: 144926.09, flops:112.87, batch-reuse:1
@ 1697 train 4.8531 , allloss: 4.8541, dt: 901.52ms, fracRes: 0.2661, norm(attn): 0.2930, norm(output): 0.8828, norm(x): 0.7250, norm(y): 1.0123, norm:0.9898, tok/sec: 145389.66, flops:113.23, batch-reuse:1
@ 1698 train 4.8194 , allloss: 4.8218, dt: 914.48ms, fracRes: 0.2672, norm(attn): 0.2871, norm(output): 0.8750, norm(x): 0.7113, norm(y): 1.0124, norm:0.9392, tok/sec: 143329.06, flops:111.63, batch-reuse:1
@ 1699 train 4.8340 , allloss: 4.8358, dt: 911.15ms, fracRes: 0.2661, norm(attn): 0.2910, norm(output): 0.8789, norm(x): 0.7195, norm(y): 1.0123, norm:1.0666, tok/sec: 143853.07, flops:112.03, batch-reuse:1
@ 1700 train 4.8635 , allloss: 4.8647, dt: 915.63ms, fracRes: 0.2636, norm(attn): 0.2930, norm(output): 0.8828, norm(x): 0.7190, norm(y): 1.0124, norm:1.0424, tok/sec: 143148.91, flops:111.48, batch-reuse:1
@ 1701 train 4.8331 , allloss: 4.8357, dt: 916.93ms, fracRes: 0.2633, norm(attn): 0.2930, norm(output): 0.8789, norm(x): 0.7107, norm(y): 1.0125, norm:0.8927, tok/sec: 142946.28, flops:111.33, batch-reuse:1
@ 1702 train 4.8144 , allloss: 4.8184, dt: 924.83ms, fracRes: 0.2646, norm(attn): 0.2930, norm(output): 0.8789, norm(x): 0.7158, norm(y): 1.0125, norm:1.0244, tok/sec: 141725.26, flops:110.38, batch-reuse:1
@ 1703 train 4.7933 , allloss: 4.8015, dt: 903.11ms, fracRes: 0.2640, norm(attn): 0.3008, norm(output): 0.8750, norm(x): 0.7196, norm(y): 1.0123, norm:0.9982, tok/sec: 145133.96, flops:113.03, batch-reuse:1
@ 1704 train 4.8162 , allloss: 4.8181, dt: 915.71ms, fracRes: 0.2636, norm(attn): 0.2930, norm(output): 0.8711, norm(x): 0.7170, norm(y): 1.0122, norm:0.8803, tok/sec: 143136.32, flops:111.48, batch-reuse:1
@ 1705 train 4.7858 , allloss: 4.7882, dt: 901.03ms, fracRes: 0.2668, norm(attn): 0.2969, norm(output): 0.8906, norm(x): 0.7264, norm(y): 1.0124, norm:1.1828, tok/sec: 145469.68, flops:113.29, batch-reuse:1
@ 1706 train 4.7825 , allloss: 4.7889, dt: 898.21ms, fracRes: 0.2674, norm(attn): 0.2969, norm(output): 0.8906, norm(x): 0.7212, norm(y): 1.0124, norm:1.3059, tok/sec: 145925.04, flops:113.65, batch-reuse:1
@ 1707 train 4.7554 , allloss: 4.7612, dt: 908.21ms, fracRes: 0.2684, norm(attn): 0.2949, norm(output): 0.8906, norm(x): 0.7252, norm(y): 1.0124, norm:1.1535, tok/sec: 144319.57, flops:112.40, batch-reuse:1
@ 1708 train 4.7401 , allloss: 4.7419, dt: 916.39ms, fracRes: 0.2651, norm(attn): 0.2910, norm(output): 0.8828, norm(x): 0.7210, norm(y): 1.0123, norm:0.9808, tok/sec: 143030.74, flops:111.39, batch-reuse:1
@ 1709 train 4.8307 , allloss: 4.8317, dt: 899.81ms, fracRes: 0.2641, norm(attn): 0.2949, norm(output): 0.8750, norm(x): 0.7222, norm(y): 1.0123, norm:1.0313, tok/sec: 145666.18, flops:113.45, batch-reuse:1
@ 1710 train 4.7568 , allloss: 4.7580, dt: 892.54ms, fracRes: 0.2653, norm(attn): 0.2949, norm(output): 0.8828, norm(x): 0.7324, norm(y): 1.0122, norm:0.8187, tok/sec: 146853.51, flops:114.37, batch-reuse:1
@ 1711 train 4.7837 , allloss: 4.7848, dt: 894.48ms, fracRes: 0.2666, norm(attn): 0.2969, norm(output): 0.9102, norm(x): 0.7403, norm(y): 1.0124, norm:0.9658, tok/sec: 146534.26, flops:114.12, batch-reuse:1
@ 1712 train 4.9320 , allloss: 4.9331, dt: 880.88ms, fracRes: 0.2642, norm(attn): 0.2969, norm(output): 0.8906, norm(x): 0.7370, norm(y): 1.0121, norm:0.9111, tok/sec: 148796.56, flops:115.88, batch-reuse:1
@ 1713 train 4.6596 , allloss: 4.6604, dt: 898.09ms, fracRes: 0.2632, norm(attn): 0.2969, norm(output): 0.8867, norm(x): 0.7333, norm(y): 1.0122, norm:0.9351, tok/sec: 145945.11, flops:113.66, batch-reuse:1
@ 1714 train 4.7873 , allloss: 4.7885, dt: 883.22ms, fracRes: 0.2661, norm(attn): 0.2930, norm(output): 0.9102, norm(x): 0.7365, norm(y): 1.0124, norm:0.8666, tok/sec: 148402.28, flops:115.58, batch-reuse:1
@ 1715 train 4.7674 , allloss: 4.7692, dt: 896.02ms, fracRes: 0.2677, norm(attn): 0.2969, norm(output): 0.9258, norm(x): 0.7420, norm(y): 1.0125, norm:0.8747, tok/sec: 146283.00, flops:113.93, batch-reuse:1
@ 1716 train 4.8412 , allloss: 4.8422, dt: 911.28ms, fracRes: 0.2709, norm(attn): 0.2891, norm(output): 0.9141, norm(x): 0.7348, norm(y): 1.0126, norm:0.9713, tok/sec: 143833.05, flops:112.02, batch-reuse:1
@ 1717 train 4.9902 , allloss: 4.9911, dt: 923.49ms, fracRes: 0.2715, norm(attn): 0.2969, norm(output): 0.9219, norm(x): 0.7463, norm(y): 1.0125, norm:1.1868, tok/sec: 141931.88, flops:110.54, batch-reuse:1
@ 1718 train 4.8801 , allloss: 4.8812, dt: 922.41ms, fracRes: 0.2699, norm(attn): 0.3027, norm(output): 0.9375, norm(x): 0.7440, norm(y): 1.0124, norm:1.4137, tok/sec: 142097.59, flops:110.67, batch-reuse:1
@ 1719 train 4.9289 , allloss: 4.9307, dt: 918.73ms, fracRes: 0.2680, norm(attn): 0.3008, norm(output): 0.9414, norm(x): 0.7563, norm(y): 1.0124, norm:1.2274, tok/sec: 142665.95, flops:111.11, batch-reuse:1
@ 1720 train 4.8220 , allloss: 4.8234, dt: 915.97ms, fracRes: 0.2658, norm(attn): 0.3027, norm(output): 0.9336, norm(x): 0.7532, norm(y): 1.0125, norm:1.2279, tok/sec: 143095.78, flops:111.44, batch-reuse:1
@ 1721 train 4.8814 , allloss: 4.8827, dt: 901.44ms, fracRes: 0.2659, norm(attn): 0.3027, norm(output): 0.9219, norm(x): 0.7394, norm(y): 1.0126, norm:1.0272, tok/sec: 145403.39, flops:113.24, batch-reuse:1
@ 1722 train 4.8993 , allloss: 4.9006, dt: 912.56ms, fracRes: 0.2653, norm(attn): 0.3027, norm(output): 0.9141, norm(x): 0.7453, norm(y): 1.0124, norm:0.9038, tok/sec: 143631.22, flops:111.86, batch-reuse:1
@ 1723 train 4.8168 , allloss: 4.8181, dt: 897.51ms, fracRes: 0.2624, norm(attn): 0.3086, norm(output): 0.9297, norm(x): 0.7449, norm(y): 1.0122, norm:0.8851, tok/sec: 146039.94, flops:113.74, batch-reuse:1
@ 1724 train 4.7203 , allloss: 4.7270, dt: 917.93ms, fracRes: 0.2643, norm(attn): 0.3027, norm(output): 0.9297, norm(x): 0.7444, norm(y): 1.0123, norm:0.8846, tok/sec: 142790.08, flops:111.21, batch-reuse:1
@ 1725 train 4.8163 , allloss: 4.8192, dt: 905.29ms, fracRes: 0.2647, norm(attn): 0.2949, norm(output): 0.9062, norm(x): 0.7411, norm(y): 1.0124, norm:1.0896, tok/sec: 144785.29, flops:112.76, batch-reuse:1
@ 1726 train 4.7883 , allloss: 4.7903, dt: 919.07ms, fracRes: 0.2648, norm(attn): 0.2969, norm(output): 0.9023, norm(x): 0.7391, norm(y): 1.0123, norm:0.9253, tok/sec: 142613.58, flops:111.07, batch-reuse:1
@ 1727 train 4.7250 , allloss: 4.7273, dt: 920.89ms, fracRes: 0.2647, norm(attn): 0.3027, norm(output): 0.9219, norm(x): 0.7453, norm(y): 1.0123, norm:1.0642, tok/sec: 142331.75, flops:110.85, batch-reuse:1
@ 1728 train 4.8898 , allloss: 4.8969, dt: 911.80ms, fracRes: 0.2658, norm(attn): 0.2949, norm(output): 0.9141, norm(x): 0.7446, norm(y): 1.0123, norm:0.9172, tok/sec: 143750.46, flops:111.95, batch-reuse:1
@ 1729 train 4.9911 , allloss: 4.9922, dt: 892.72ms, fracRes: 0.2684, norm(attn): 0.2930, norm(output): 0.9297, norm(x): 0.7467, norm(y): 1.0124, norm:1.0599, tok/sec: 146823.70, flops:114.35, batch-reuse:1
@ 1730 train 4.8389 , allloss: 4.8416, dt: 893.02ms, fracRes: 0.2667, norm(attn): 0.3008, norm(output): 0.9297, norm(x): 0.7535, norm(y): 1.0123, norm:1.1787, tok/sec: 146773.92, flops:114.31, batch-reuse:1
@ 1731 train 4.7881 , allloss: 4.7909, dt: 893.87ms, fracRes: 0.2637, norm(attn): 0.3086, norm(output): 0.9297, norm(x): 0.7604, norm(y): 1.0120, norm:1.1018, tok/sec: 146634.94, flops:114.20, batch-reuse:1
@ 1732 train 4.7445 , allloss: 4.7475, dt: 893.94ms, fracRes: 0.2650, norm(attn): 0.3008, norm(output): 0.9375, norm(x): 0.7571, norm(y): 1.0123, norm:0.8189, tok/sec: 146623.60, flops:114.19, batch-reuse:1
@ 1733 train 4.7810 , allloss: 4.7819, dt: 894.01ms, fracRes: 0.2665, norm(attn): 0.2988, norm(output): 0.9258, norm(x): 0.7484, norm(y): 1.0124, norm:1.0674, tok/sec: 146611.79, flops:114.18, batch-reuse:1
@ 1734 train 5.1715 , allloss: 5.1724, dt: 888.90ms, fracRes: 0.2693, norm(attn): 0.2910, norm(output): 0.9219, norm(x): 0.7526, norm(y): 1.0124, norm:1.3625, tok/sec: 147454.27, flops:114.84, batch-reuse:1
@ 1735 train 4.8138 , allloss: 4.8146, dt: 903.07ms, fracRes: 0.2663, norm(attn): 0.3008, norm(output): 0.9609, norm(x): 0.7793, norm(y): 1.0126, norm:1.3260, tok/sec: 145140.16, flops:113.04, batch-reuse:1
@ 1736 train 4.7899 , allloss: 4.7933, dt: 900.72ms, fracRes: 0.2653, norm(attn): 0.3027, norm(output): 0.9844, norm(x): 0.7862, norm(y): 1.0126, norm:1.3273, tok/sec: 145518.77, flops:113.33, batch-reuse:1
@ 1737 train 4.7435 , allloss: 4.7444, dt: 904.73ms, fracRes: 0.2644, norm(attn): 0.3047, norm(output): 0.9883, norm(x): 0.7861, norm(y): 1.0125, norm:1.4422, tok/sec: 144874.07, flops:112.83, batch-reuse:1
@ 1738 train 4.7299 , allloss: 4.7312, dt: 901.82ms, fracRes: 0.2640, norm(attn): 0.3066, norm(output): 0.9727, norm(x): 0.7845, norm(y): 1.0125, norm:0.8568, tok/sec: 145340.88, flops:113.19, batch-reuse:1
@ 1739 train 4.7734 , allloss: 4.7745, dt: 889.98ms, fracRes: 0.2670, norm(attn): 0.3047, norm(output): 0.9766, norm(x): 0.7874, norm(y): 1.0127, norm:1.1829, tok/sec: 147275.09, flops:114.70, batch-reuse:1
@ 1740 train 4.7171 , allloss: 4.7192, dt: 925.58ms, fracRes: 0.2696, norm(attn): 0.2969, norm(output): 0.9844, norm(x): 0.7860, norm(y): 1.0129, norm:1.0396, tok/sec: 141611.06, flops:110.29, batch-reuse:1
@ 1741 train 4.8096 , allloss: 4.8107, dt: 928.04ms, fracRes: 0.2711, norm(attn): 0.2969, norm(output): 0.9844, norm(x): 0.7850, norm(y): 1.0128, norm:0.9669, tok/sec: 141235.65, flops:109.99, batch-reuse:1
@ 1742 train 4.7785 , allloss: 4.7799, dt: 907.38ms, fracRes: 0.2732, norm(attn): 0.2930, norm(output): 0.9844, norm(x): 0.7855, norm(y): 1.0129, norm:1.1143, tok/sec: 144451.53, flops:112.50, batch-reuse:1
@ 1743 train 4.8320 , allloss: 4.8335, dt: 897.10ms, fracRes: 0.2714, norm(attn): 0.2969, norm(output): 0.9844, norm(x): 0.7870, norm(y): 1.0127, norm:1.0224, tok/sec: 146106.46, flops:113.79, batch-reuse:1
@ 1744 train 4.7120 , allloss: 4.7152, dt: 898.73ms, fracRes: 0.2677, norm(attn): 0.2969, norm(output): 0.9570, norm(x): 0.7815, norm(y): 1.0126, norm:1.0774, tok/sec: 145841.50, flops:113.58, batch-reuse:1
@ 1745 train 4.7147 , allloss: 4.7172, dt: 911.99ms, fracRes: 0.2689, norm(attn): 0.2969, norm(output): 0.9766, norm(x): 0.7774, norm(y): 1.0128, norm:1.2187, tok/sec: 143720.59, flops:111.93, batch-reuse:1
@ 1746 train 4.8080 , allloss: 4.8140, dt: 906.76ms, fracRes: 0.2666, norm(attn): 0.3027, norm(output): 0.9844, norm(x): 0.7901, norm(y): 1.0126, norm:0.9910, tok/sec: 144549.83, flops:112.58, batch-reuse:1
@ 1747 train 4.6694 , allloss: 4.6704, dt: 885.28ms, fracRes: 0.2675, norm(attn): 0.3008, norm(output): 0.9766, norm(x): 0.7843, norm(y): 1.0126, norm:1.0997, tok/sec: 148056.89, flops:115.31, batch-reuse:1
@ 1748 train 4.7148 , allloss: 4.7159, dt: 912.66ms, fracRes: 0.2653, norm(attn): 0.3008, norm(output): 0.9844, norm(x): 0.7886, norm(y): 1.0126, norm:0.9098, tok/sec: 143615.05, flops:111.85, batch-reuse:1
@ 1749 train 4.8305 , allloss: 4.8325, dt: 895.77ms, fracRes: 0.2651, norm(attn): 0.3047, norm(output): 0.9844, norm(x): 0.7938, norm(y): 1.0124, norm:1.0389, tok/sec: 146322.99, flops:113.96, batch-reuse:1
@ 1750 train 4.8133 , allloss: 4.8141, dt: 917.52ms, fracRes: 0.2655, norm(attn): 0.3008, norm(output): 0.9570, norm(x): 0.7852, norm(y): 1.0125, norm:1.1039, tok/sec: 142853.90, flops:111.26, batch-reuse:1
@ 1751 train 4.9550 , allloss: 4.9560, dt: 907.33ms, fracRes: 0.2657, norm(attn): 0.3008, norm(output): 0.9883, norm(x): 0.7968, norm(y): 1.0125, norm:1.1703, tok/sec: 144459.43, flops:112.51, batch-reuse:1
@ 1752 train 4.9890 , allloss: 4.9945, dt: 913.06ms, fracRes: 0.2651, norm(attn): 0.3047, norm(output): 0.9922, norm(x): 0.8066, norm(y): 1.0124, norm:1.1698, tok/sec: 143551.97, flops:111.80, batch-reuse:1
@ 1753 train 4.8135 , allloss: 4.8159, dt: 913.84ms, fracRes: 0.2651, norm(attn): 0.3027, norm(output): 0.9883, norm(x): 0.7951, norm(y): 1.0123, norm:1.1132, tok/sec: 143429.35, flops:111.70, batch-reuse:1
@ 1754 train 4.7749 , allloss: 4.7762, dt: 906.80ms, fracRes: 0.2684, norm(attn): 0.3008, norm(output): 0.9844, norm(x): 0.7951, norm(y): 1.0123, norm:0.9004, tok/sec: 144542.99, flops:112.57, batch-reuse:1
@ 1755 train 4.7730 , allloss: 4.7737, dt: 910.47ms, fracRes: 0.2687, norm(attn): 0.3008, norm(output): 0.9922, norm(x): 0.8007, norm(y): 1.0125, norm:0.9722, tok/sec: 143960.24, flops:112.12, batch-reuse:1
@ 1756 train 4.7513 , allloss: 4.7521, dt: 909.45ms, fracRes: 0.2682, norm(attn): 0.3008, norm(output): 0.9883, norm(x): 0.8040, norm(y): 1.0125, norm:1.0239, tok/sec: 144122.45, flops:112.24, batch-reuse:1
@ 1757 train 4.8163 , allloss: 4.8169, dt: 908.08ms, fracRes: 0.2686, norm(attn): 0.3008, norm(output): 0.9883, norm(x): 0.8000, norm(y): 1.0124, norm:0.9792, tok/sec: 144338.97, flops:112.41, batch-reuse:1
@ 1758 train 4.8607 , allloss: 4.8681, dt: 910.57ms, fracRes: 0.2702, norm(attn): 0.3008, norm(output): 1.0000, norm(x): 0.7944, norm(y): 1.0126, norm:1.1563, tok/sec: 143945.17, flops:112.11, batch-reuse:1
@ 1759 train 4.8397 , allloss: 4.8423, dt: 907.62ms, fracRes: 0.2701, norm(attn): 0.2969, norm(output): 1.0000, norm(x): 0.8030, norm(y): 1.0125, norm:1.4245, tok/sec: 144413.17, flops:112.47, batch-reuse:1
@ 1760 train 4.6979 , allloss: 4.7032, dt: 907.45ms, fracRes: 0.2699, norm(attn): 0.2988, norm(output): 1.0000, norm(x): 0.8074, norm(y): 1.0123, norm:1.0816, tok/sec: 144440.30, flops:112.49, batch-reuse:1
@ 1761 train 4.6713 , allloss: 4.6726, dt: 907.61ms, fracRes: 0.2694, norm(attn): 0.3027, norm(output): 0.9961, norm(x): 0.8108, norm(y): 1.0121, norm:1.1847, tok/sec: 144414.88, flops:112.47, batch-reuse:1
@ 1762 train 4.5374 , allloss: 4.5381, dt: 890.51ms, fracRes: 0.2708, norm(attn): 0.3066, norm(output): 0.9961, norm(x): 0.8031, norm(y): 1.0122, norm:1.0623, tok/sec: 147187.36, flops:114.63, batch-reuse:1
@ 1763 train 4.7068 , allloss: 4.7085, dt: 900.88ms, fracRes: 0.2702, norm(attn): 0.3027, norm(output): 1.0000, norm(x): 0.8029, norm(y): 1.0124, norm:0.9556, tok/sec: 145493.63, flops:113.31, batch-reuse:1
@ 1764 train 4.7260 , allloss: 4.7271, dt: 912.10ms, fracRes: 0.2667, norm(attn): 0.3008, norm(output): 1.0000, norm(x): 0.8033, norm(y): 1.0124, norm:1.0057, tok/sec: 143702.89, flops:111.92, batch-reuse:1
@ 1765 train 4.7100 , allloss: 4.7113, dt: 892.45ms, fracRes: 0.2659, norm(attn): 0.3008, norm(output): 0.9922, norm(x): 0.7920, norm(y): 1.0124, norm:0.9140, tok/sec: 146867.91, flops:114.38, batch-reuse:1
@ 1766 train 4.6174 , allloss: 4.6205, dt: 887.72ms, fracRes: 0.2659, norm(attn): 0.3027, norm(output): 0.9805, norm(x): 0.7804, norm(y): 1.0124, norm:0.8730, tok/sec: 147649.35, flops:114.99, batch-reuse:1
@ 1767 train 4.7098 , allloss: 4.7117, dt: 880.99ms, fracRes: 0.2651, norm(attn): 0.3047, norm(output): 0.9922, norm(x): 0.7916, norm(y): 1.0123, norm:0.8375, tok/sec: 148778.68, flops:115.87, batch-reuse:1
@ 1768 train 4.7688 , allloss: 4.7705, dt: 893.85ms, fracRes: 0.2663, norm(attn): 0.3066, norm(output): 1.0000, norm(x): 0.8073, norm(y): 1.0124, norm:0.9805, tok/sec: 146638.27, flops:114.20, batch-reuse:1
@ 1769 train 4.6488 , allloss: 4.6509, dt: 901.41ms, fracRes: 0.2694, norm(attn): 0.3086, norm(output): 0.9961, norm(x): 0.8048, norm(y): 1.0124, norm:1.0700, tok/sec: 145407.39, flops:113.24, batch-reuse:1
@ 1770 train 4.6564 , allloss: 4.6582, dt: 904.66ms, fracRes: 0.2722, norm(attn): 0.3086, norm(output): 0.9844, norm(x): 0.8010, norm(y): 1.0123, norm:0.8787, tok/sec: 144885.11, flops:112.84, batch-reuse:1
@ 1771 train 4.6486 , allloss: 4.6500, dt: 902.62ms, fracRes: 0.2707, norm(attn): 0.3105, norm(output): 0.9844, norm(x): 0.8078, norm(y): 1.0121, norm:0.8517, tok/sec: 145212.05, flops:113.09, batch-reuse:1
@ 1772 train 4.6536 , allloss: 4.6544, dt: 904.46ms, fracRes: 0.2690, norm(attn): 0.3086, norm(output): 0.9961, norm(x): 0.8162, norm(y): 1.0121, norm:0.8513, tok/sec: 144916.69, flops:112.86, batch-reuse:1
@ 1773 train 4.5513 , allloss: 4.5521, dt: 903.78ms, fracRes: 0.2684, norm(attn): 0.3066, norm(output): 1.0000, norm(x): 0.8205, norm(y): 1.0123, norm:0.8152, tok/sec: 145025.95, flops:112.95, batch-reuse:1
@ 1774 train 4.7390 , allloss: 4.7415, dt: 880.20ms, fracRes: 0.2705, norm(attn): 0.3047, norm(output): 1.0000, norm(x): 0.8149, norm(y): 1.0124, norm:0.8214, tok/sec: 148911.38, flops:115.97, batch-reuse:1
@ 1775 train 4.6410 , allloss: 4.6425, dt: 878.03ms, fracRes: 0.2709, norm(attn): 0.3086, norm(output): 1.0078, norm(x): 0.8188, norm(y): 1.0124, norm:0.8999, tok/sec: 149280.48, flops:116.26, batch-reuse:1
@ 1776 train 4.6181 , allloss: 4.6203, dt: 903.27ms, fracRes: 0.2695, norm(attn): 0.3086, norm(output): 1.0078, norm(x): 0.8174, norm(y): 1.0124, norm:0.8480, tok/sec: 145107.79, flops:113.01, batch-reuse:1
@ 1777 train 4.5513 , allloss: 4.5531, dt: 899.68ms, fracRes: 0.2698, norm(attn): 0.3047, norm(output): 1.0078, norm(x): 0.8154, norm(y): 1.0124, norm:0.7298, tok/sec: 145687.33, flops:113.46, batch-reuse:1
@ 1778 train 4.7947 , allloss: 4.7957, dt: 911.24ms, fracRes: 0.2716, norm(attn): 0.3027, norm(output): 1.0234, norm(x): 0.8272, norm(y): 1.0125, norm:1.0306, tok/sec: 143838.96, flops:112.02, batch-reuse:1
@ 1779 train 4.6088 , allloss: 4.6107, dt: 911.96ms, fracRes: 0.2690, norm(attn): 0.3047, norm(output): 1.0000, norm(x): 0.8095, norm(y): 1.0125, norm:0.8856, tok/sec: 143725.24, flops:111.93, batch-reuse:1
@ 1780 train 4.6785 , allloss: 4.6805, dt: 899.61ms, fracRes: 0.2675, norm(attn): 0.3066, norm(output): 1.0000, norm(x): 0.8194, norm(y): 1.0123, norm:1.0111, tok/sec: 145697.99, flops:113.47, batch-reuse:1
@ 1781 train 4.6873 , allloss: 4.6885, dt: 902.27ms, fracRes: 0.2664, norm(attn): 0.3125, norm(output): 1.0078, norm(x): 0.8239, norm(y): 1.0122, norm:1.0445, tok/sec: 145269.72, flops:113.14, batch-reuse:1
@ 1782 train 4.7013 , allloss: 4.7031, dt: 884.11ms, fracRes: 0.2691, norm(attn): 0.3125, norm(output): 1.0078, norm(x): 0.8309, norm(y): 1.0122, norm:0.8361, tok/sec: 148253.17, flops:115.46, batch-reuse:1
@ 1783 train 4.6781 , allloss: 4.6798, dt: 902.69ms, fracRes: 0.2715, norm(attn): 0.3105, norm(output): 1.0000, norm(x): 0.8241, norm(y): 1.0121, norm:0.8582, tok/sec: 145201.92, flops:113.08, batch-reuse:1
@ 1784 train 4.5932 , allloss: 4.5942, dt: 895.42ms, fracRes: 0.2722, norm(attn): 0.3125, norm(output): 1.0078, norm(x): 0.8318, norm(y): 1.0122, norm:0.7971, tok/sec: 146380.46, flops:114.00, batch-reuse:1
@ 1785 train 4.6379 , allloss: 4.6391, dt: 896.60ms, fracRes: 0.2718, norm(attn): 0.3105, norm(output): 1.0156, norm(x): 0.8314, norm(y): 1.0124, norm:0.8777, tok/sec: 146188.44, flops:113.85, batch-reuse:1
@ 1786 train 4.6929 , allloss: 4.6936, dt: 888.05ms, fracRes: 0.2697, norm(attn): 0.3105, norm(output): 1.0078, norm(x): 0.8255, norm(y): 1.0123, norm:1.0006, tok/sec: 147595.76, flops:114.95, batch-reuse:1
@ 1787 train 4.6501 , allloss: 4.6523, dt: 893.74ms, fracRes: 0.2695, norm(attn): 0.3105, norm(output): 1.0000, norm(x): 0.8201, norm(y): 1.0121, norm:0.8406, tok/sec: 146654.97, flops:114.22, batch-reuse:1
@ 1788 train 4.6944 , allloss: 4.6968, dt: 897.74ms, fracRes: 0.2686, norm(attn): 0.3125, norm(output): 1.0078, norm(x): 0.8268, norm(y): 1.0122, norm:1.0094, tok/sec: 146001.66, flops:113.71, batch-reuse:1
@ 1789 train 4.7063 , allloss: 4.7090, dt: 897.04ms, fracRes: 0.2685, norm(attn): 0.3125, norm(output): 1.0312, norm(x): 0.8341, norm(y): 1.0123, norm:1.0874, tok/sec: 146115.71, flops:113.80, batch-reuse:1
@ 1790 train 4.7515 , allloss: 4.7533, dt: 890.89ms, fracRes: 0.2701, norm(attn): 0.3125, norm(output): 1.0156, norm(x): 0.8336, norm(y): 1.0120, norm:1.2813, tok/sec: 147124.29, flops:114.58, batch-reuse:1
@ 1791 train 4.6675 , allloss: 4.6688, dt: 896.14ms, fracRes: 0.2712, norm(attn): 0.3105, norm(output): 1.0078, norm(x): 0.8339, norm(y): 1.0122, norm:0.8341, tok/sec: 146263.00, flops:113.91, batch-reuse:1
@ 1792 train 4.7479 , allloss: 4.7491, dt: 910.89ms, fracRes: 0.2720, norm(attn): 0.3105, norm(output): 1.0469, norm(x): 0.8425, norm(y): 1.0124, norm:0.9159, tok/sec: 143894.98, flops:112.07, batch-reuse:1
@ 1793 train 4.7418 , allloss: 4.7428, dt: 913.38ms, fracRes: 0.2701, norm(attn): 0.3105, norm(output): 1.0547, norm(x): 0.8461, norm(y): 1.0123, norm:1.0962, tok/sec: 143501.65, flops:111.76, batch-reuse:1
@ 1794 train 4.6754 , allloss: 4.6766, dt: 905.77ms, fracRes: 0.2724, norm(attn): 0.3066, norm(output): 1.0391, norm(x): 0.8438, norm(y): 1.0122, norm:0.9799, tok/sec: 144707.66, flops:112.70, batch-reuse:1
@ 1795 train 4.7229 , allloss: 4.7267, dt: 912.57ms, fracRes: 0.2708, norm(attn): 0.3047, norm(output): 1.0078, norm(x): 0.8350, norm(y): 1.0123, norm:1.0760, tok/sec: 143629.79, flops:111.86, batch-reuse:1
@ 1796 train 4.6033 , allloss: 4.6064, dt: 908.99ms, fracRes: 0.2721, norm(attn): 0.3066, norm(output): 1.0391, norm(x): 0.8452, norm(y): 1.0123, norm:1.0453, tok/sec: 144195.49, flops:112.30, batch-reuse:1
@ 1797 train 4.6558 , allloss: 4.6569, dt: 888.95ms, fracRes: 0.2720, norm(attn): 0.3066, norm(output): 1.0391, norm(x): 0.8505, norm(y): 1.0122, norm:1.0399, tok/sec: 147446.60, flops:114.83, batch-reuse:1
@ 1798 train 4.6334 , allloss: 4.6350, dt: 896.24ms, fracRes: 0.2730, norm(attn): 0.3008, norm(output): 1.0312, norm(x): 0.8449, norm(y): 1.0122, norm:0.8318, tok/sec: 146246.23, flops:113.90, batch-reuse:1
@ 1799 train 4.6869 , allloss: 4.6882, dt: 892.28ms, fracRes: 0.2747, norm(attn): 0.3027, norm(output): 1.0312, norm(x): 0.8443, norm(y): 1.0122, norm:0.8089, tok/sec: 146895.38, flops:114.40, batch-reuse:1
@ 1800 train 4.6108 , allloss: 4.6132, dt: 903.43ms, fracRes: 0.2736, norm(attn): 0.3027, norm(output): 1.0469, norm(x): 0.8450, norm(y): 1.0122, norm:0.8611, tok/sec: 145082.98, flops:112.99, batch-reuse:1
@ 1801 train 4.5747 , allloss: 4.5764, dt: 901.99ms, fracRes: 0.2731, norm(attn): 0.3066, norm(output): 1.0469, norm(x): 0.8457, norm(y): 1.0123, norm:1.0032, tok/sec: 145314.64, flops:113.17, batch-reuse:1
@ 1802 train 4.7512 , allloss: 4.7530, dt: 891.06ms, fracRes: 0.2687, norm(attn): 0.3066, norm(output): 1.0391, norm(x): 0.8433, norm(y): 1.0121, norm:0.9087, tok/sec: 147096.85, flops:114.56, batch-reuse:1
@ 1803 train 4.6691 , allloss: 4.6704, dt: 894.07ms, fracRes: 0.2693, norm(attn): 0.3066, norm(output): 1.0312, norm(x): 0.8428, norm(y): 1.0122, norm:0.8751, tok/sec: 146601.71, flops:114.17, batch-reuse:1
@ 1804 train 4.6670 , allloss: 4.6697, dt: 895.34ms, fracRes: 0.2639, norm(attn): 0.3125, norm(output): 1.0547, norm(x): 0.8468, norm(y): 1.0121, norm:1.0429, tok/sec: 146393.71, flops:114.01, batch-reuse:1
@ 1805 train 4.6925 , allloss: 4.7089, dt: 916.50ms, fracRes: 0.2677, norm(attn): 0.3125, norm(output): 1.0625, norm(x): 0.8665, norm(y): 1.0119, norm:1.2129, tok/sec: 143013.44, flops:111.38, batch-reuse:1
@ 1806 train 4.7163 , allloss: 4.7188, dt: 897.14ms, fracRes: 0.2663, norm(attn): 0.3125, norm(output): 1.0625, norm(x): 0.8634, norm(y): 1.0119, norm:1.1577, tok/sec: 146100.13, flops:113.78, batch-reuse:1
@ 1807 train 4.7441 , allloss: 4.7483, dt: 924.54ms, fracRes: 0.2706, norm(attn): 0.3086, norm(output): 1.0469, norm(x): 0.8503, norm(y): 1.0120, norm:1.0508, tok/sec: 141769.66, flops:110.41, batch-reuse:1
@ 1808 train 4.5874 , allloss: 4.5990, dt: 909.01ms, fracRes: 0.2754, norm(attn): 0.3086, norm(output): 1.0625, norm(x): 0.8568, norm(y): 1.0122, norm:0.8571, tok/sec: 144192.08, flops:112.30, batch-reuse:1
@ 1809 train 4.6079 , allloss: 4.6092, dt: 898.27ms, fracRes: 0.2734, norm(attn): 0.3105, norm(output): 1.0781, norm(x): 0.8669, norm(y): 1.0122, norm:1.0873, tok/sec: 145915.36, flops:113.64, batch-reuse:1
@ 1810 train 4.5174 , allloss: 4.5187, dt: 910.26ms, fracRes: 0.2775, norm(attn): 0.3066, norm(output): 1.0547, norm(x): 0.8560, norm(y): 1.0122, norm:1.1351, tok/sec: 143993.77, flops:112.14, batch-reuse:1
@ 1811 train 4.5825 , allloss: 4.5843, dt: 920.02ms, fracRes: 0.2798, norm(attn): 0.3047, norm(output): 1.0547, norm(x): 0.8499, norm(y): 1.0122, norm:1.1271, tok/sec: 142466.05, flops:110.95, batch-reuse:1
@ 1812 train 4.6340 , allloss: 4.6354, dt: 904.49ms, fracRes: 0.2772, norm(attn): 0.3086, norm(output): 1.0469, norm(x): 0.8512, norm(y): 1.0121, norm:1.0483, tok/sec: 144913.25, flops:112.86, batch-reuse:1
@ 1813 train 4.5599 , allloss: 4.5612, dt: 923.71ms, fracRes: 0.2742, norm(attn): 0.3047, norm(output): 1.0625, norm(x): 0.8528, norm(y): 1.0122, norm:1.1572, tok/sec: 141897.15, flops:110.51, batch-reuse:1
@ 1814 train 4.6744 , allloss: 4.6754, dt: 919.08ms, fracRes: 0.2718, norm(attn): 0.3027, norm(output): 1.0547, norm(x): 0.8540, norm(y): 1.0121, norm:1.0640, tok/sec: 142611.66, flops:111.07, batch-reuse:1
@ 1815 train 4.5653 , allloss: 4.5680, dt: 899.00ms, fracRes: 0.2724, norm(attn): 0.3125, norm(output): 1.0703, norm(x): 0.8585, norm(y): 1.0121, norm:0.9487, tok/sec: 145797.49, flops:113.55, batch-reuse:1
@ 1816 train 4.5770 , allloss: 4.5791, dt: 918.97ms, fracRes: 0.2716, norm(attn): 0.3105, norm(output): 1.0625, norm(x): 0.8549, norm(y): 1.0121, norm:1.1178, tok/sec: 142629.79, flops:111.08, batch-reuse:1
@ 1817 train 4.5659 , allloss: 4.5677, dt: 909.18ms, fracRes: 0.2715, norm(attn): 0.3125, norm(output): 1.0625, norm(x): 0.8570, norm(y): 1.0121, norm:0.9034, tok/sec: 144165.12, flops:112.28, batch-reuse:1
@ 1818 train 4.5495 , allloss: 4.5512, dt: 892.60ms, fracRes: 0.2713, norm(attn): 0.3125, norm(output): 1.0234, norm(x): 0.8478, norm(y): 1.0120, norm:0.9578, tok/sec: 146842.25, flops:114.36, batch-reuse:1
@ 1819 train 4.6824 , allloss: 4.6854, dt: 901.68ms, fracRes: 0.2714, norm(attn): 0.3105, norm(output): 1.0391, norm(x): 0.8532, norm(y): 1.0121, norm:0.8270, tok/sec: 145364.44, flops:113.21, batch-reuse:1
@ 1820 train 4.5927 , allloss: 4.5944, dt: 913.95ms, fracRes: 0.2703, norm(attn): 0.3125, norm(output): 1.0547, norm(x): 0.8594, norm(y): 1.0120, norm:0.9135, tok/sec: 143412.14, flops:111.69, batch-reuse:1
@ 1821 train 4.4828 , allloss: 4.4853, dt: 913.31ms, fracRes: 0.2708, norm(attn): 0.3145, norm(output): 1.0625, norm(x): 0.8605, norm(y): 1.0121, norm:0.8534, tok/sec: 143513.78, flops:111.77, batch-reuse:1
@ 1822 train 4.4538 , allloss: 4.4570, dt: 907.41ms, fracRes: 0.2716, norm(attn): 0.3125, norm(output): 1.0547, norm(x): 0.8563, norm(y): 1.0121, norm:0.9454, tok/sec: 144446.94, flops:112.50, batch-reuse:1
@ 1823 train 4.4810 , allloss: 4.4835, dt: 911.82ms, fracRes: 0.2716, norm(attn): 0.3125, norm(output): 1.0547, norm(x): 0.8553, norm(y): 1.0120, norm:0.8016, tok/sec: 143748.24, flops:111.95, batch-reuse:1
@ 1824 train 4.5251 , allloss: 4.5269, dt: 901.26ms, fracRes: 0.2723, norm(attn): 0.3145, norm(output): 1.0625, norm(x): 0.8607, norm(y): 1.0122, norm:0.8568, tok/sec: 145432.51, flops:113.26, batch-reuse:1
@ 1825 train 4.5775 , allloss: 4.5794, dt: 893.25ms, fracRes: 0.2728, norm(attn): 0.3105, norm(output): 1.0703, norm(x): 0.8634, norm(y): 1.0123, norm:0.8172, tok/sec: 146736.08, flops:114.28, batch-reuse:1
@ 1826 train 4.5618 , allloss: 4.5680, dt: 887.04ms, fracRes: 0.2725, norm(attn): 0.3125, norm(output): 1.0547, norm(x): 0.8636, norm(y): 1.0122, norm:0.8545, tok/sec: 147763.01, flops:115.08, batch-reuse:1
@ 1827 train 4.6095 , allloss: 4.6135, dt: 898.15ms, fracRes: 0.2726, norm(attn): 0.3125, norm(output): 1.0625, norm(x): 0.8695, norm(y): 1.0121, norm:0.8783, tok/sec: 145935.35, flops:113.65, batch-reuse:1
@ 1828 train 4.5625 , allloss: 4.5641, dt: 883.72ms, fracRes: 0.2713, norm(attn): 0.3125, norm(output): 1.0703, norm(x): 0.8763, norm(y): 1.0120, norm:0.8825, tok/sec: 148318.09, flops:115.51, batch-reuse:1
@ 1829 train 4.6077 , allloss: 4.6109, dt: 892.53ms, fracRes: 0.2712, norm(attn): 0.3145, norm(output): 1.0703, norm(x): 0.8838, norm(y): 1.0120, norm:1.0045, tok/sec: 146853.79, flops:114.37, batch-reuse:1
@ 1830 train 4.4945 , allloss: 4.4969, dt: 896.70ms, fracRes: 0.2692, norm(attn): 0.3164, norm(output): 1.0703, norm(x): 0.8818, norm(y): 1.0118, norm:1.0347, tok/sec: 146172.16, flops:113.84, batch-reuse:1
@ 1831 train 4.5525 , allloss: 4.5539, dt: 914.38ms, fracRes: 0.2713, norm(attn): 0.3125, norm(output): 1.0703, norm(x): 0.8814, norm(y): 1.0120, norm:1.0628, tok/sec: 143345.69, flops:111.64, batch-reuse:1
@ 1832 train 4.5748 , allloss: 4.5762, dt: 896.02ms, fracRes: 0.2709, norm(attn): 0.3125, norm(output): 1.1016, norm(x): 0.8860, norm(y): 1.0121, norm:1.2142, tok/sec: 146282.23, flops:113.93, batch-reuse:1
@ 1833 train 4.7029 , allloss: 4.7042, dt: 904.86ms, fracRes: 0.2711, norm(attn): 0.3125, norm(output): 1.0781, norm(x): 0.8872, norm(y): 1.0119, norm:0.9642, tok/sec: 144852.85, flops:112.81, batch-reuse:1
@ 1834 train 4.5826 , allloss: 4.5840, dt: 885.81ms, fracRes: 0.2715, norm(attn): 0.3145, norm(output): 1.0859, norm(x): 0.8905, norm(y): 1.0118, norm:1.1718, tok/sec: 147968.70, flops:115.24, batch-reuse:1
@ 1835 train 4.4940 , allloss: 4.4953, dt: 902.70ms, fracRes: 0.2711, norm(attn): 0.3145, norm(output): 1.0625, norm(x): 0.8913, norm(y): 1.0117, norm:1.0753, tok/sec: 145200.50, flops:113.08, batch-reuse:1
@ 1836 train 4.6012 , allloss: 4.6023, dt: 914.38ms, fracRes: 0.2720, norm(attn): 0.3145, norm(output): 1.0938, norm(x): 0.8977, norm(y): 1.0119, norm:1.2405, tok/sec: 143344.57, flops:111.64, batch-reuse:1
@ 1837 train 4.6672 , allloss: 4.6700, dt: 893.53ms, fracRes: 0.2728, norm(attn): 0.3125, norm(output): 1.0781, norm(x): 0.8893, norm(y): 1.0119, norm:0.9085, tok/sec: 146689.33, flops:114.24, batch-reuse:1
@ 1838 train 4.5862 , allloss: 4.5878, dt: 888.52ms, fracRes: 0.2724, norm(attn): 0.3145, norm(output): 1.1016, norm(x): 0.9003, norm(y): 1.0119, norm:0.7920, tok/sec: 147517.30, flops:114.89, batch-reuse:1
@ 1839 train 4.5282 , allloss: 4.5298, dt: 904.28ms, fracRes: 0.2718, norm(attn): 0.3145, norm(output): 1.1172, norm(x): 0.8993, norm(y): 1.0119, norm:0.9872, tok/sec: 144945.81, flops:112.88, batch-reuse:1
@ 1840 train 4.5208 , allloss: 4.5217, dt: 889.54ms, fracRes: 0.2711, norm(attn): 0.3125, norm(output): 1.0859, norm(x): 0.8884, norm(y): 1.0119, norm:0.9218, tok/sec: 147348.23, flops:114.76, batch-reuse:1
@ 1841 train 4.6344 , allloss: 4.6353, dt: 916.19ms, fracRes: 0.2708, norm(attn): 0.3125, norm(output): 1.0938, norm(x): 0.8873, norm(y): 1.0119, norm:0.9821, tok/sec: 143062.34, flops:111.42, batch-reuse:1
@ 1842 train 4.5310 , allloss: 4.5322, dt: 894.77ms, fracRes: 0.2722, norm(attn): 0.3125, norm(output): 1.0938, norm(x): 0.8937, norm(y): 1.0120, norm:0.9150, tok/sec: 146486.24, flops:114.08, batch-reuse:1
@ 1843 train 4.5398 , allloss: 4.5414, dt: 907.94ms, fracRes: 0.2737, norm(attn): 0.3125, norm(output): 1.1094, norm(x): 0.8923, norm(y): 1.0120, norm:1.0147, tok/sec: 144361.79, flops:112.43, batch-reuse:1
@ 1844 train 4.5567 , allloss: 4.5585, dt: 911.06ms, fracRes: 0.2715, norm(attn): 0.3164, norm(output): 1.1172, norm(x): 0.9001, norm(y): 1.0119, norm:1.0428, tok/sec: 143868.36, flops:112.05, batch-reuse:1
@ 1845 train 4.5136 , allloss: 4.5149, dt: 911.58ms, fracRes: 0.2704, norm(attn): 0.3164, norm(output): 1.1094, norm(x): 0.9058, norm(y): 1.0118, norm:0.9822, tok/sec: 143784.86, flops:111.98, batch-reuse:1
@ 1846 train 4.5480 , allloss: 4.5494, dt: 903.92ms, fracRes: 0.2705, norm(attn): 0.3145, norm(output): 1.0859, norm(x): 0.9018, norm(y): 1.0117, norm:0.8521, tok/sec: 145004.41, flops:112.93, batch-reuse:1
@ 1847 train 4.5017 , allloss: 4.5024, dt: 898.18ms, fracRes: 0.2713, norm(attn): 0.3145, norm(output): 1.1094, norm(x): 0.8971, norm(y): 1.0118, norm:0.8582, tok/sec: 145930.43, flops:113.65, batch-reuse:1
@ 1848 train 4.3612 , allloss: 4.3623, dt: 891.77ms, fracRes: 0.2707, norm(attn): 0.3203, norm(output): 1.1094, norm(x): 0.9017, norm(y): 1.0118, norm:1.0027, tok/sec: 146978.95, flops:114.47, batch-reuse:1
@ 1849 train 4.5883 , allloss: 4.5893, dt: 892.50ms, fracRes: 0.2710, norm(attn): 0.3164, norm(output): 1.1094, norm(x): 0.9078, norm(y): 1.0117, norm:0.9772, tok/sec: 146860.10, flops:114.38, batch-reuse:1
@ 1850 train 4.4344 , allloss: 4.4356, dt: 901.21ms, fracRes: 0.2722, norm(attn): 0.3125, norm(output): 1.1094, norm(x): 0.8983, norm(y): 1.0120, norm:0.8305, tok/sec: 145440.82, flops:113.27, batch-reuse:1
@ 1851 train 4.4020 , allloss: 4.4033, dt: 915.85ms, fracRes: 0.2733, norm(attn): 0.3145, norm(output): 1.1172, norm(x): 0.9052, norm(y): 1.0119, norm:0.8411, tok/sec: 143115.82, flops:111.46, batch-reuse:1
@ 1852 train 4.5038 , allloss: 4.5049, dt: 915.37ms, fracRes: 0.2736, norm(attn): 0.3145, norm(output): 1.1172, norm(x): 0.9060, norm(y): 1.0118, norm:0.8208, tok/sec: 143190.67, flops:111.52, batch-reuse:1
@ 1853 train 4.5021 , allloss: 4.5036, dt: 896.54ms, fracRes: 0.2755, norm(attn): 0.3125, norm(output): 1.1172, norm(x): 0.9031, norm(y): 1.0119, norm:0.7711, tok/sec: 146197.73, flops:113.86, batch-reuse:1
@ 1854 train 4.5753 , allloss: 4.5762, dt: 903.34ms, fracRes: 0.2759, norm(attn): 0.3125, norm(output): 1.1172, norm(x): 0.9035, norm(y): 1.0119, norm:0.8366, tok/sec: 145097.80, flops:113.00, batch-reuse:1
@ 1855 train 4.6376 , allloss: 4.6384, dt: 894.52ms, fracRes: 0.2767, norm(attn): 0.3164, norm(output): 1.1250, norm(x): 0.9122, norm(y): 1.0119, norm:1.0282, tok/sec: 146527.58, flops:114.12, batch-reuse:1
@ 1856 train 4.6362 , allloss: 4.6370, dt: 901.77ms, fracRes: 0.2750, norm(attn): 0.3145, norm(output): 1.1172, norm(x): 0.9132, norm(y): 1.0118, norm:0.9739, tok/sec: 145349.30, flops:113.20, batch-reuse:1
@ 1857 train 4.5915 , allloss: 4.5951, dt: 902.36ms, fracRes: 0.2753, norm(attn): 0.3164, norm(output): 1.1406, norm(x): 0.9295, norm(y): 1.0118, norm:1.0024, tok/sec: 145255.06, flops:113.13, batch-reuse:1
@ 1858 train 4.7840 , allloss: 4.7850, dt: 918.09ms, fracRes: 0.2708, norm(attn): 0.3164, norm(output): 1.1250, norm(x): 0.9268, norm(y): 1.0117, norm:1.1989, tok/sec: 142766.02, flops:111.19, batch-reuse:1
@ 1859 train 4.7312 , allloss: 4.7329, dt: 915.66ms, fracRes: 0.2716, norm(attn): 0.3184, norm(output): 1.1328, norm(x): 0.9329, norm(y): 1.0118, norm:1.0815, tok/sec: 143144.48, flops:111.48, batch-reuse:1
@ 1860 train 4.7046 , allloss: 4.7061, dt: 918.20ms, fracRes: 0.2714, norm(attn): 0.3223, norm(output): 1.1250, norm(x): 0.9318, norm(y): 1.0116, norm:0.9597, tok/sec: 142749.00, flops:111.17, batch-reuse:1
@ 1861 train 4.6398 , allloss: 4.6407, dt: 916.22ms, fracRes: 0.2702, norm(attn): 0.3242, norm(output): 1.1328, norm(x): 0.9329, norm(y): 1.0116, norm:1.0597, tok/sec: 143057.99, flops:111.41, batch-reuse:1
@ 1862 train 4.7005 , allloss: 4.7013, dt: 921.12ms, fracRes: 0.2699, norm(attn): 0.3203, norm(output): 1.1328, norm(x): 0.9281, norm(y): 1.0118, norm:1.1433, tok/sec: 142296.46, flops:110.82, batch-reuse:1
@ 1863 train 4.7321 , allloss: 4.7329, dt: 923.98ms, fracRes: 0.2700, norm(attn): 0.3223, norm(output): 1.1250, norm(x): 0.9282, norm(y): 1.0117, norm:0.9517, tok/sec: 141855.30, flops:110.48, batch-reuse:1
@ 1864 train 4.6691 , allloss: 4.6697, dt: 920.15ms, fracRes: 0.2722, norm(attn): 0.3203, norm(output): 1.1172, norm(x): 0.9136, norm(y): 1.0118, norm:0.9757, tok/sec: 142446.00, flops:110.94, batch-reuse:1
@ 1865 train 4.6918 , allloss: 4.6925, dt: 915.56ms, fracRes: 0.2722, norm(attn): 0.3203, norm(output): 1.1250, norm(x): 0.9323, norm(y): 1.0118, norm:1.0960, tok/sec: 143160.17, flops:111.49, batch-reuse:1
@ 1866 train 5.0327 , allloss: 5.0337, dt: 893.71ms, fracRes: 0.2781, norm(attn): 0.3164, norm(output): 1.1406, norm(x): 0.9563, norm(y): 1.0118, norm:1.4535, tok/sec: 146659.86, flops:114.22, batch-reuse:1
@ 1867 train 4.7138 , allloss: 4.7152, dt: 897.67ms, fracRes: 0.2736, norm(attn): 0.3203, norm(output): 1.1328, norm(x): 0.9353, norm(y): 1.0118, norm:1.0119, tok/sec: 146013.06, flops:113.72, batch-reuse:1
@ 1868 train 4.7895 , allloss: 4.7906, dt: 898.44ms, fracRes: 0.2744, norm(attn): 0.3184, norm(output): 1.1406, norm(x): 0.9469, norm(y): 1.0118, norm:1.2582, tok/sec: 145888.41, flops:113.62, batch-reuse:1
@ 1869 train 4.6953 , allloss: 4.6968, dt: 921.87ms, fracRes: 0.2741, norm(attn): 0.3164, norm(output): 1.1328, norm(x): 0.9391, norm(y): 1.0118, norm:1.0179, tok/sec: 142180.35, flops:110.73, batch-reuse:1
@ 1870 train 4.6322 , allloss: 4.6333, dt: 923.54ms, fracRes: 0.2738, norm(attn): 0.3203, norm(output): 1.1406, norm(x): 0.9495, norm(y): 1.0117, norm:0.9226, tok/sec: 141923.49, flops:110.53, batch-reuse:1
@ 1871 train 4.6611 , allloss: 4.6620, dt: 913.21ms, fracRes: 0.2734, norm(attn): 0.3164, norm(output): 1.1328, norm(x): 0.9391, norm(y): 1.0118, norm:1.0539, tok/sec: 143529.63, flops:111.78, batch-reuse:1
@ 1872 train 4.7407 , allloss: 4.7415, dt: 891.10ms, fracRes: 0.2738, norm(attn): 0.3164, norm(output): 1.1328, norm(x): 0.9363, norm(y): 1.0116, norm:0.9551, tok/sec: 147090.83, flops:114.55, batch-reuse:1
@ 1873 train 4.7520 , allloss: 4.7545, dt: 905.11ms, fracRes: 0.2731, norm(attn): 0.3164, norm(output): 1.1328, norm(x): 0.9329, norm(y): 1.0116, norm:0.9552, tok/sec: 144813.97, flops:112.78, batch-reuse:1
@ 1874 train 4.6012 , allloss: 4.6021, dt: 906.95ms, fracRes: 0.2755, norm(attn): 0.3164, norm(output): 1.1484, norm(x): 0.9390, norm(y): 1.0118, norm:0.9563, tok/sec: 144519.24, flops:112.55, batch-reuse:1
@ 1875 train 4.6835 , allloss: 4.6842, dt: 899.52ms, fracRes: 0.2751, norm(attn): 0.3164, norm(output): 1.1406, norm(x): 0.9286, norm(y): 1.0118, norm:0.9485, tok/sec: 145713.78, flops:113.48, batch-reuse:1
@ 1876 train 4.7554 , allloss: 4.7570, dt: 907.45ms, fracRes: 0.2779, norm(attn): 0.3145, norm(output): 1.1406, norm(x): 0.9298, norm(y): 1.0119, norm:0.9025, tok/sec: 144439.58, flops:112.49, batch-reuse:1
@ 1877 train 4.7069 , allloss: 4.7079, dt: 901.05ms, fracRes: 0.2768, norm(attn): 0.3184, norm(output): 1.1484, norm(x): 0.9383, norm(y): 1.0118, norm:0.9323, tok/sec: 145466.22, flops:113.29, batch-reuse:1
@ 1878 train 4.6793 , allloss: 4.6807, dt: 885.85ms, fracRes: 0.2746, norm(attn): 0.3203, norm(output): 1.1484, norm(x): 0.9430, norm(y): 1.0117, norm:0.8353, tok/sec: 147961.97, flops:115.23, batch-reuse:1
@ 1879 train 4.7108 , allloss: 4.7119, dt: 917.81ms, fracRes: 0.2730, norm(attn): 0.3242, norm(output): 1.1562, norm(x): 0.9456, norm(y): 1.0116, norm:0.8109, tok/sec: 142809.37, flops:111.22, batch-reuse:1
@ 1880 train 4.6565 , allloss: 4.6574, dt: 904.28ms, fracRes: 0.2715, norm(attn): 0.3184, norm(output): 1.1562, norm(x): 0.9449, norm(y): 1.0116, norm:0.9853, tok/sec: 144946.42, flops:112.88, batch-reuse:1
@ 1881 train 4.6134 , allloss: 4.6148, dt: 903.24ms, fracRes: 0.2690, norm(attn): 0.3320, norm(output): 1.1641, norm(x): 0.9568, norm(y): 1.0115, norm:0.9043, tok/sec: 145113.19, flops:113.01, batch-reuse:1
@ 1882 train 4.7420 , allloss: 4.7432, dt: 906.39ms, fracRes: 0.2718, norm(attn): 0.3242, norm(output): 1.1406, norm(x): 0.9470, norm(y): 1.0116, norm:0.8321, tok/sec: 144609.60, flops:112.62, batch-reuse:1
@ 1883 train 4.6182 , allloss: 4.6187, dt: 879.65ms, fracRes: 0.2728, norm(attn): 0.3242, norm(output): 1.1406, norm(x): 0.9532, norm(y): 1.0117, norm:0.9186, tok/sec: 149005.30, flops:116.05, batch-reuse:1
@ 1884 train 4.5691 , allloss: 4.5698, dt: 893.68ms, fracRes: 0.2725, norm(attn): 0.3301, norm(output): 1.1875, norm(x): 0.9660, norm(y): 1.0117, norm:0.8530, tok/sec: 146665.30, flops:114.22, batch-reuse:1
@ 1885 train 4.6678 , allloss: 4.6686, dt: 893.15ms, fracRes: 0.2729, norm(attn): 0.3242, norm(output): 1.1719, norm(x): 0.9659, norm(y): 1.0116, norm:0.7722, tok/sec: 146752.26, flops:114.29, batch-reuse:1
@ 1886 train 4.5906 , allloss: 4.5916, dt: 896.30ms, fracRes: 0.2737, norm(attn): 0.3223, norm(output): 1.1484, norm(x): 0.9576, norm(y): 1.0116, norm:0.7075, tok/sec: 146235.96, flops:113.89, batch-reuse:1
@ 1887 train 4.5483 , allloss: 4.5493, dt: 902.63ms, fracRes: 0.2733, norm(attn): 0.3242, norm(output): 1.1562, norm(x): 0.9553, norm(y): 1.0117, norm:0.7805, tok/sec: 145211.55, flops:113.09, batch-reuse:1
@ 1888 train 4.7172 , allloss: 4.7194, dt: 888.41ms, fracRes: 0.2740, norm(attn): 0.3242, norm(output): 1.1719, norm(x): 0.9632, norm(y): 1.0117, norm:0.8364, tok/sec: 147535.98, flops:114.90, batch-reuse:1
@ 1889 train 4.5739 , allloss: 4.5830, dt: 909.04ms, fracRes: 0.2738, norm(attn): 0.3281, norm(output): 1.1797, norm(x): 0.9633, norm(y): 1.0117, norm:0.8883, tok/sec: 144187.66, flops:112.29, batch-reuse:1
@ 1890 train 4.7296 , allloss: 4.7337, dt: 908.59ms, fracRes: 0.2744, norm(attn): 0.3281, norm(output): 1.1875, norm(x): 0.9753, norm(y): 1.0117, norm:0.9223, tok/sec: 144259.24, flops:112.35, batch-reuse:1
@ 1891 train 4.6733 , allloss: 4.6748, dt: 901.85ms, fracRes: 0.2721, norm(attn): 0.3242, norm(output): 1.1875, norm(x): 0.9734, norm(y): 1.0117, norm:0.9258, tok/sec: 145337.39, flops:113.19, batch-reuse:1
@ 1892 train 4.5934 , allloss: 4.5940, dt: 906.94ms, fracRes: 0.2736, norm(attn): 0.3242, norm(output): 1.1719, norm(x): 0.9710, norm(y): 1.0116, norm:0.8719, tok/sec: 144520.57, flops:112.55, batch-reuse:1
@ 1893 train 4.7036 , allloss: 4.7053, dt: 902.36ms, fracRes: 0.2750, norm(attn): 0.3203, norm(output): 1.1719, norm(x): 0.9651, norm(y): 1.0116, norm:0.9647, tok/sec: 145254.52, flops:113.12, batch-reuse:1
@ 1894 train 4.5438 , allloss: 4.5456, dt: 903.29ms, fracRes: 0.2763, norm(attn): 0.3242, norm(output): 1.1797, norm(x): 0.9676, norm(y): 1.0117, norm:0.9924, tok/sec: 145105.76, flops:113.01, batch-reuse:1
@ 1895 train 4.7064 , allloss: 4.7114, dt: 905.25ms, fracRes: 0.2751, norm(attn): 0.3262, norm(output): 1.2031, norm(x): 0.9734, norm(y): 1.0116, norm:0.9667, tok/sec: 144790.40, flops:112.76, batch-reuse:1
@ 1896 train 4.7880 , allloss: 4.7886, dt: 907.53ms, fracRes: 0.2729, norm(attn): 0.3203, norm(output): 1.1875, norm(x): 0.9768, norm(y): 1.0115, norm:0.9597, tok/sec: 144427.85, flops:112.48, batch-reuse:1
@ 1897 train 4.7073 , allloss: 4.7085, dt: 903.81ms, fracRes: 0.2730, norm(attn): 0.3223, norm(output): 1.2031, norm(x): 0.9743, norm(y): 1.0115, norm:0.9374, tok/sec: 145022.16, flops:112.94, batch-reuse:1
@ 1898 train 4.6877 , allloss: 4.6890, dt: 899.41ms, fracRes: 0.2728, norm(attn): 0.3242, norm(output): 1.1875, norm(x): 0.9769, norm(y): 1.0114, norm:0.9819, tok/sec: 145730.90, flops:113.50, batch-reuse:1
@ 1899 train 4.6708 , allloss: 4.6718, dt: 899.90ms, fracRes: 0.2726, norm(attn): 0.3262, norm(output): 1.1719, norm(x): 0.9657, norm(y): 1.0115, norm:1.0278, tok/sec: 145652.36, flops:113.43, batch-reuse:1
@ 1900 train 4.6342 , allloss: 4.6348, dt: 901.24ms, fracRes: 0.2710, norm(attn): 0.3320, norm(output): 1.2031, norm(x): 0.9834, norm(y): 1.0115, norm:0.8111, tok/sec: 145435.43, flops:113.27, batch-reuse:1
@ 1901 train 4.6965 , allloss: 4.6982, dt: 900.33ms, fracRes: 0.2734, norm(attn): 0.3320, norm(output): 1.2109, norm(x): 0.9867, norm(y): 1.0116, norm:0.9278, tok/sec: 145581.55, flops:113.38, batch-reuse:1
@ 1902 train 4.6555 , allloss: 4.6564, dt: 893.76ms, fracRes: 0.2739, norm(attn): 0.3242, norm(output): 1.1797, norm(x): 0.9750, norm(y): 1.0115, norm:0.9269, tok/sec: 146652.98, flops:114.21, batch-reuse:1
@ 1903 train 4.6718 , allloss: 4.6727, dt: 900.55ms, fracRes: 0.2744, norm(attn): 0.3242, norm(output): 1.1953, norm(x): 0.9754, norm(y): 1.0114, norm:0.8777, tok/sec: 145547.13, flops:113.35, batch-reuse:1
@ 1904 train 4.6425 , allloss: 4.6447, dt: 899.06ms, fracRes: 0.2756, norm(attn): 0.3242, norm(output): 1.2031, norm(x): 0.9792, norm(y): 1.0115, norm:0.7809, tok/sec: 145787.82, flops:113.54, batch-reuse:1
@ 1905 train 4.5890 , allloss: 4.5896, dt: 915.44ms, fracRes: 0.2754, norm(attn): 0.3281, norm(output): 1.2188, norm(x): 0.9815, norm(y): 1.0116, norm:0.8529, tok/sec: 143179.48, flops:111.51, batch-reuse:1
@ 1906 train 4.6142 , allloss: 4.6149, dt: 910.65ms, fracRes: 0.2743, norm(attn): 0.3281, norm(output): 1.2109, norm(x): 0.9869, norm(y): 1.0116, norm:0.9506, tok/sec: 143932.81, flops:112.10, batch-reuse:1
@ 1907 train 4.6507 , allloss: 4.6514, dt: 914.54ms, fracRes: 0.2733, norm(attn): 0.3242, norm(output): 1.2031, norm(x): 0.9781, norm(y): 1.0114, norm:1.0074, tok/sec: 143320.24, flops:111.62, batch-reuse:1
@ 1908 train 4.6449 , allloss: 4.6460, dt: 905.41ms, fracRes: 0.2771, norm(attn): 0.3301, norm(output): 1.2109, norm(x): 0.9888, norm(y): 1.0115, norm:0.9019, tok/sec: 144765.08, flops:112.74, batch-reuse:1
@ 1909 train 4.8462 , allloss: 4.8474, dt: 887.98ms, fracRes: 0.2758, norm(attn): 0.3262, norm(output): 1.2188, norm(x): 0.9936, norm(y): 1.0113, norm:1.0541, tok/sec: 147607.53, flops:114.96, batch-reuse:1
@ 1910 train 4.7189 , allloss: 4.7203, dt: 903.73ms, fracRes: 0.2756, norm(attn): 0.3301, norm(output): 1.2422, norm(x): 1.0068, norm(y): 1.0113, norm:1.1639, tok/sec: 145034.98, flops:112.95, batch-reuse:1
@ 1911 train 4.7029 , allloss: 4.7036, dt: 895.63ms, fracRes: 0.2751, norm(attn): 0.3320, norm(output): 1.2500, norm(x): 1.0065, norm(y): 1.0114, norm:1.0047, tok/sec: 146345.47, flops:113.97, batch-reuse:1
@ 1912 train 4.6439 , allloss: 4.6451, dt: 904.42ms, fracRes: 0.2744, norm(attn): 0.3379, norm(output): 1.2500, norm(x): 1.0057, norm(y): 1.0114, norm:0.9466, tok/sec: 144923.95, flops:112.87, batch-reuse:1
@ 1913 train 4.6701 , allloss: 4.6712, dt: 903.81ms, fracRes: 0.2755, norm(attn): 0.3340, norm(output): 1.2188, norm(x): 0.9954, norm(y): 1.0113, norm:1.0002, tok/sec: 145022.05, flops:112.94, batch-reuse:1
@ 1914 train 4.6091 , allloss: 4.6107, dt: 903.80ms, fracRes: 0.2736, norm(attn): 0.3320, norm(output): 1.2109, norm(x): 0.9851, norm(y): 1.0113, norm:0.9451, tok/sec: 145023.42, flops:112.94, batch-reuse:1
@ 1915 train 4.6297 , allloss: 4.6313, dt: 905.24ms, fracRes: 0.2763, norm(attn): 0.3242, norm(output): 1.2266, norm(x): 0.9803, norm(y): 1.0115, norm:0.9697, tok/sec: 144792.72, flops:112.77, batch-reuse:1
@ 1916 train 4.7895 , allloss: 4.7905, dt: 901.86ms, fracRes: 0.2780, norm(attn): 0.3223, norm(output): 1.2422, norm(x): 0.9901, norm(y): 1.0115, norm:1.1631, tok/sec: 145335.66, flops:113.19, batch-reuse:1
@ 1917 train 4.6868 , allloss: 4.6879, dt: 910.58ms, fracRes: 0.2774, norm(attn): 0.3223, norm(output): 1.2266, norm(x): 0.9830, norm(y): 1.0114, norm:0.9634, tok/sec: 143943.73, flops:112.10, batch-reuse:1
@ 1918 train 4.7471 , allloss: 4.7481, dt: 912.02ms, fracRes: 0.2784, norm(attn): 0.3203, norm(output): 1.2422, norm(x): 0.9825, norm(y): 1.0115, norm:0.9602, tok/sec: 143716.72, flops:111.93, batch-reuse:1
@ 1919 train 4.5840 , allloss: 4.5852, dt: 909.47ms, fracRes: 0.2807, norm(attn): 0.3223, norm(output): 1.2422, norm(x): 0.9974, norm(y): 1.0116, norm:1.1303, tok/sec: 144119.62, flops:112.24, batch-reuse:1
@ 1920 train 4.6533 , allloss: 4.6542, dt: 904.86ms, fracRes: 0.2776, norm(attn): 0.3242, norm(output): 1.2422, norm(x): 0.9966, norm(y): 1.0114, norm:0.8782, tok/sec: 144852.89, flops:112.81, batch-reuse:1
@ 1921 train 4.6662 , allloss: 4.6669, dt: 913.39ms, fracRes: 0.2772, norm(attn): 0.3340, norm(output): 1.2422, norm(x): 1.0005, norm(y): 1.0114, norm:0.9668, tok/sec: 143500.86, flops:111.76, batch-reuse:1
@ 1922 train 4.5836 , allloss: 4.5842, dt: 901.50ms, fracRes: 0.2765, norm(attn): 0.3320, norm(output): 1.2422, norm(x): 0.9983, norm(y): 1.0113, norm:0.9158, tok/sec: 145393.54, flops:113.23, batch-reuse:1
@ 1923 train 4.6463 , allloss: 4.6474, dt: 898.85ms, fracRes: 0.2761, norm(attn): 0.3359, norm(output): 1.2188, norm(x): 0.9914, norm(y): 1.0113, norm:0.9715, tok/sec: 145822.47, flops:113.57, batch-reuse:1
@ 1924 train 4.6517 , allloss: 4.6539, dt: 909.89ms, fracRes: 0.2749, norm(attn): 0.3320, norm(output): 1.2266, norm(x): 0.9942, norm(y): 1.0112, norm:0.8584, tok/sec: 144052.66, flops:112.19, batch-reuse:1
@ 1925 train 4.6391 , allloss: 4.6402, dt: 895.95ms, fracRes: 0.2748, norm(attn): 0.3320, norm(output): 1.2422, norm(x): 0.9987, norm(y): 1.0114, norm:0.8671, tok/sec: 146294.25, flops:113.93, batch-reuse:1
@ 1926 train 4.6750 , allloss: 4.6762, dt: 904.25ms, fracRes: 0.2738, norm(attn): 0.3340, norm(output): 1.2500, norm(x): 1.0048, norm(y): 1.0114, norm:0.9932, tok/sec: 144950.28, flops:112.89, batch-reuse:1
@ 1927 train 4.6508 , allloss: 4.6522, dt: 904.58ms, fracRes: 0.2734, norm(attn): 0.3379, norm(output): 1.2422, norm(x): 1.0114, norm(y): 1.0111, norm:0.9867, tok/sec: 144898.55, flops:112.85, batch-reuse:1
@ 1928 train 4.6435 , allloss: 4.6441, dt: 904.77ms, fracRes: 0.2764, norm(attn): 0.3281, norm(output): 1.2422, norm(x): 1.0078, norm(y): 1.0113, norm:0.7757, tok/sec: 144868.31, flops:112.82, batch-reuse:1
@ 1929 train 4.6407 , allloss: 4.6412, dt: 895.92ms, fracRes: 0.2781, norm(attn): 0.3242, norm(output): 1.2500, norm(x): 1.0125, norm(y): 1.0113, norm:0.8269, tok/sec: 146298.11, flops:113.94, batch-reuse:1
@ 1930 train 4.5764 , allloss: 4.5769, dt: 910.33ms, fracRes: 0.2788, norm(attn): 0.3301, norm(output): 1.2734, norm(x): 1.0289, norm(y): 1.0113, norm:0.9656, tok/sec: 143982.72, flops:112.13, batch-reuse:1
@ 1931 train 4.6966 , allloss: 4.6978, dt: 908.81ms, fracRes: 0.2781, norm(attn): 0.3281, norm(output): 1.2578, norm(x): 1.0235, norm(y): 1.0113, norm:0.9853, tok/sec: 144223.59, flops:112.32, batch-reuse:1
@ 1932 train 4.7353 , allloss: 4.7360, dt: 905.56ms, fracRes: 0.2771, norm(attn): 0.3359, norm(output): 1.2578, norm(x): 1.0199, norm(y): 1.0113, norm:0.8463, tok/sec: 144742.14, flops:112.73, batch-reuse:1
@ 1933 train 4.7132 , allloss: 4.7139, dt: 901.17ms, fracRes: 0.2796, norm(attn): 0.3301, norm(output): 1.2656, norm(x): 1.0225, norm(y): 1.0114, norm:1.0549, tok/sec: 145445.86, flops:113.27, batch-reuse:1
@ 1934 train 4.6746 , allloss: 4.6760, dt: 916.21ms, fracRes: 0.2773, norm(attn): 0.3340, norm(output): 1.2734, norm(x): 1.0282, norm(y): 1.0112, norm:0.9204, tok/sec: 143058.21, flops:111.41, batch-reuse:1
@ 1935 train 4.6083 , allloss: 4.6090, dt: 921.89ms, fracRes: 0.2747, norm(attn): 0.3340, norm(output): 1.2578, norm(x): 1.0231, norm(y): 1.0113, norm:0.9607, tok/sec: 142177.63, flops:110.73, batch-reuse:1
@ 1936 train 4.6221 , allloss: 4.6236, dt: 918.28ms, fracRes: 0.2744, norm(attn): 0.3340, norm(output): 1.2422, norm(x): 1.0137, norm(y): 1.0112, norm:0.7916, tok/sec: 142736.07, flops:111.16, batch-reuse:1
@ 1937 train 4.5920 , allloss: 4.5932, dt: 917.36ms, fracRes: 0.2744, norm(attn): 0.3418, norm(output): 1.2422, norm(x): 1.0198, norm(y): 1.0111, norm:0.8331, tok/sec: 142880.11, flops:111.28, batch-reuse:1
@ 1938 train 4.6193 , allloss: 4.6205, dt: 907.11ms, fracRes: 0.2742, norm(attn): 0.3418, norm(output): 1.2500, norm(x): 1.0291, norm(y): 1.0110, norm:0.7960, tok/sec: 144493.71, flops:112.53, batch-reuse:1
@ 1939 train 4.6042 , allloss: 4.6048, dt: 912.70ms, fracRes: 0.2748, norm(attn): 0.3398, norm(output): 1.2578, norm(x): 1.0321, norm(y): 1.0112, norm:0.8950, tok/sec: 143609.38, flops:111.84, batch-reuse:1
@ 1940 train 4.7307 , allloss: 4.7319, dt: 911.17ms, fracRes: 0.2770, norm(attn): 0.3398, norm(output): 1.2891, norm(x): 1.0450, norm(y): 1.0112, norm:0.9463, tok/sec: 143849.99, flops:112.03, batch-reuse:1
@ 1941 train 4.6885 , allloss: 4.6893, dt: 909.01ms, fracRes: 0.2776, norm(attn): 0.3398, norm(output): 1.2578, norm(x): 1.0292, norm(y): 1.0112, norm:0.8535, tok/sec: 144192.19, flops:112.30, batch-reuse:1
@ 1942 train 4.6030 , allloss: 4.6039, dt: 894.20ms, fracRes: 0.2773, norm(attn): 0.3379, norm(output): 1.2734, norm(x): 1.0318, norm(y): 1.0111, norm:0.7862, tok/sec: 146580.29, flops:114.16, batch-reuse:1
@ 1943 train 4.6748 , allloss: 4.6758, dt: 901.55ms, fracRes: 0.2756, norm(attn): 0.3379, norm(output): 1.2656, norm(x): 1.0355, norm(y): 1.0111, norm:0.8167, tok/sec: 145385.12, flops:113.23, batch-reuse:1
@ 1944 train 4.6221 , allloss: 4.6234, dt: 902.76ms, fracRes: 0.2757, norm(attn): 0.3340, norm(output): 1.2656, norm(x): 1.0380, norm(y): 1.0112, norm:0.7442, tok/sec: 145190.65, flops:113.07, batch-reuse:1
@ 1945 train 4.5602 , allloss: 4.5607, dt: 922.56ms, fracRes: 0.2775, norm(attn): 0.3340, norm(output): 1.2734, norm(x): 1.0399, norm(y): 1.0113, norm:0.7575, tok/sec: 142073.53, flops:110.65, batch-reuse:1
@ 1946 train 4.5397 , allloss: 4.5415, dt: 885.08ms, fracRes: 0.2804, norm(attn): 0.3320, norm(output): 1.2656, norm(x): 1.0368, norm(y): 1.0112, norm:0.7445, tok/sec: 148091.11, flops:115.33, batch-reuse:1
@ 1947 train 4.7177 , allloss: 4.7186, dt: 889.87ms, fracRes: 0.2807, norm(attn): 0.3301, norm(output): 1.2812, norm(x): 1.0463, norm(y): 1.0111, norm:0.7950, tok/sec: 147293.48, flops:114.71, batch-reuse:1
@ 1948 train 4.5075 , allloss: 4.5083, dt: 898.38ms, fracRes: 0.2809, norm(attn): 0.3301, norm(output): 1.2969, norm(x): 1.0470, norm(y): 1.0112, norm:0.7952, tok/sec: 145898.94, flops:113.63, batch-reuse:1
@ 1949 train 4.6249 , allloss: 4.6256, dt: 894.78ms, fracRes: 0.2793, norm(attn): 0.3242, norm(output): 1.2969, norm(x): 1.0472, norm(y): 1.0112, norm:0.8926, tok/sec: 146484.36, flops:114.08, batch-reuse:1
@ 1950 train 4.6893 , allloss: 4.6900, dt: 905.10ms, fracRes: 0.2786, norm(attn): 0.3340, norm(output): 1.2891, norm(x): 1.0418, norm(y): 1.0110, norm:1.0898, tok/sec: 144815.00, flops:112.78, batch-reuse:1
@ 1951 train 4.5746 , allloss: 4.5754, dt: 892.38ms, fracRes: 0.2770, norm(attn): 0.3379, norm(output): 1.2969, norm(x): 1.0490, norm(y): 1.0111, norm:1.0484, tok/sec: 146879.56, flops:114.39, batch-reuse:1
@ 1952 train 4.5679 , allloss: 4.5693, dt: 905.37ms, fracRes: 0.2785, norm(attn): 0.3320, norm(output): 1.2969, norm(x): 1.0531, norm(y): 1.0113, norm:0.9383, tok/sec: 144772.40, flops:112.75, batch-reuse:1
@ 1953 train 4.5787 , allloss: 4.5797, dt: 885.20ms, fracRes: 0.2791, norm(attn): 0.3340, norm(output): 1.2812, norm(x): 1.0459, norm(y): 1.0111, norm:0.9332, tok/sec: 148070.45, flops:115.32, batch-reuse:1
@ 1954 train 4.5820 , allloss: 4.5838, dt: 899.34ms, fracRes: 0.2784, norm(attn): 0.3418, norm(output): 1.2656, norm(x): 1.0421, norm(y): 1.0107, norm:1.2213, tok/sec: 145742.41, flops:113.50, batch-reuse:1
@ 1955 train 4.5783 , allloss: 4.5796, dt: 893.92ms, fracRes: 0.2791, norm(attn): 0.3438, norm(output): 1.3281, norm(x): 1.0735, norm(y): 1.0110, norm:1.7976, tok/sec: 146625.56, flops:114.19, batch-reuse:1
@ 1956 train 4.4694 , allloss: 4.4700, dt: 896.15ms, fracRes: 0.2787, norm(attn): 0.3438, norm(output): 1.3672, norm(x): 1.0848, norm(y): 1.0111, norm:0.8841, tok/sec: 146261.72, flops:113.91, batch-reuse:1
@ 1957 train 4.5828 , allloss: 4.5840, dt: 899.47ms, fracRes: 0.2774, norm(attn): 0.3457, norm(output): 1.3750, norm(x): 1.1027, norm(y): 1.0111, norm:1.3106, tok/sec: 145721.55, flops:113.49, batch-reuse:1
@ 1958 train 4.5858 , allloss: 4.5868, dt: 882.67ms, fracRes: 0.2773, norm(attn): 0.3457, norm(output): 1.3750, norm(x): 1.1002, norm(y): 1.0111, norm:1.1515, tok/sec: 148495.32, flops:115.65, batch-reuse:1
@ 1959 train 4.5238 , allloss: 4.5251, dt: 898.05ms, fracRes: 0.2776, norm(attn): 0.3477, norm(output): 1.3750, norm(x): 1.0911, norm(y): 1.0112, norm:1.0849, tok/sec: 145951.42, flops:113.67, batch-reuse:1
@ 1960 train 4.4711 , allloss: 4.4754, dt: 901.49ms, fracRes: 0.2785, norm(attn): 0.3418, norm(output): 1.3594, norm(x): 1.0739, norm(y): 1.0113, norm:1.0753, tok/sec: 145395.20, flops:113.23, batch-reuse:1
@ 1961 train 4.6213 , allloss: 4.6269, dt: 914.44ms, fracRes: 0.2785, norm(attn): 0.3418, norm(output): 1.3672, norm(x): 1.0852, norm(y): 1.0113, norm:1.0774, tok/sec: 143335.97, flops:111.63, batch-reuse:1
@ 1962 train 4.5460 , allloss: 4.5478, dt: 914.61ms, fracRes: 0.2754, norm(attn): 0.3438, norm(output): 1.3750, norm(x): 1.0969, norm(y): 1.0112, norm:1.1816, tok/sec: 143309.45, flops:111.61, batch-reuse:1
@ 1963 train 4.6545 , allloss: 4.6558, dt: 925.51ms, fracRes: 0.2777, norm(attn): 0.3418, norm(output): 1.3672, norm(x): 1.0942, norm(y): 1.0113, norm:1.1053, tok/sec: 141621.75, flops:110.30, batch-reuse:1
@ 1964 train 4.5707 , allloss: 4.5722, dt: 919.92ms, fracRes: 0.2777, norm(attn): 0.3418, norm(output): 1.3672, norm(x): 1.0896, norm(y): 1.0113, norm:1.0658, tok/sec: 142482.11, flops:110.97, batch-reuse:1
@ 1965 train 4.5966 , allloss: 4.5978, dt: 913.13ms, fracRes: 0.2738, norm(attn): 0.3438, norm(output): 1.3516, norm(x): 1.0725, norm(y): 1.0112, norm:0.8826, tok/sec: 143541.51, flops:111.79, batch-reuse:1
@ 1966 train 4.5187 , allloss: 4.5199, dt: 893.24ms, fracRes: 0.2718, norm(attn): 0.3477, norm(output): 1.3594, norm(x): 1.0888, norm(y): 1.0111, norm:1.2083, tok/sec: 146737.49, flops:114.28, batch-reuse:1
@ 1967 train 4.5441 , allloss: 4.5450, dt: 910.26ms, fracRes: 0.2733, norm(attn): 0.3457, norm(output): 1.3672, norm(x): 1.0855, norm(y): 1.0113, norm:1.3020, tok/sec: 143993.77, flops:112.14, batch-reuse:1
@ 1968 train 4.5535 , allloss: 4.5544, dt: 905.03ms, fracRes: 0.2738, norm(attn): 0.3477, norm(output): 1.3672, norm(x): 1.0881, norm(y): 1.0112, norm:0.9017, tok/sec: 144825.72, flops:112.79, batch-reuse:1
@ 1969 train 4.6464 , allloss: 4.6483, dt: 902.66ms, fracRes: 0.2762, norm(attn): 0.3477, norm(output): 1.3594, norm(x): 1.0905, norm(y): 1.0112, norm:1.1065, tok/sec: 145207.06, flops:113.09, batch-reuse:1
@ 1970 train 4.5365 , allloss: 4.5423, dt: 900.70ms, fracRes: 0.2760, norm(attn): 0.3496, norm(output): 1.3672, norm(x): 1.1016, norm(y): 1.0111, norm:1.0227, tok/sec: 145522.13, flops:113.33, batch-reuse:1
@ 1971 train 4.5824 , allloss: 4.5858, dt: 911.03ms, fracRes: 0.2740, norm(attn): 0.3496, norm(output): 1.3672, norm(x): 1.1044, norm(y): 1.0110, norm:1.0469, tok/sec: 143871.56, flops:112.05, batch-reuse:1
@ 1972 train 4.5519 , allloss: 4.5529, dt: 903.29ms, fracRes: 0.2742, norm(attn): 0.3516, norm(output): 1.3594, norm(x): 1.1094, norm(y): 1.0110, norm:0.9362, tok/sec: 145105.38, flops:113.01, batch-reuse:1
@ 1973 train 4.5563 , allloss: 4.5608, dt: 916.04ms, fracRes: 0.2752, norm(attn): 0.3477, norm(output): 1.3750, norm(x): 1.1100, norm(y): 1.0110, norm:1.0847, tok/sec: 143085.84, flops:111.44, batch-reuse:1
@ 1974 train 4.6009 , allloss: 4.6023, dt: 905.49ms, fracRes: 0.2757, norm(attn): 0.3477, norm(output): 1.3672, norm(x): 1.1099, norm(y): 1.0110, norm:1.0723, tok/sec: 144752.08, flops:112.73, batch-reuse:1
@ 1975 train 4.4086 , allloss: 4.4091, dt: 918.13ms, fracRes: 0.2763, norm(attn): 0.3496, norm(output): 1.3516, norm(x): 1.1018, norm(y): 1.0110, norm:1.0426, tok/sec: 142759.49, flops:111.18, batch-reuse:1
@ 1976 train 4.6097 , allloss: 4.6115, dt: 916.14ms, fracRes: 0.2756, norm(attn): 0.3477, norm(output): 1.3750, norm(x): 1.1156, norm(y): 1.0110, norm:1.1221, tok/sec: 143069.08, flops:111.42, batch-reuse:1
@ 1977 train 4.4741 , allloss: 4.4752, dt: 923.81ms, fracRes: 0.2776, norm(attn): 0.3418, norm(output): 1.3672, norm(x): 1.1020, norm(y): 1.0110, norm:0.9243, tok/sec: 141881.33, flops:110.50, batch-reuse:1
@ 1978 train 4.5827 , allloss: 4.5834, dt: 917.83ms, fracRes: 0.2768, norm(attn): 0.3438, norm(output): 1.3672, norm(x): 1.1062, norm(y): 1.0109, norm:1.0008, tok/sec: 142805.62, flops:111.22, batch-reuse:1
@ 1979 train 4.5921 , allloss: 4.5929, dt: 914.09ms, fracRes: 0.2776, norm(attn): 0.3477, norm(output): 1.3750, norm(x): 1.1193, norm(y): 1.0110, norm:1.1984, tok/sec: 143390.00, flops:111.67, batch-reuse:1
@ 1980 train 4.5573 , allloss: 4.5578, dt: 904.47ms, fracRes: 0.2787, norm(attn): 0.3457, norm(output): 1.3672, norm(x): 1.1165, norm(y): 1.0111, norm:0.9021, tok/sec: 144915.28, flops:112.86, batch-reuse:1
@ 1981 train 4.5552 , allloss: 4.5558, dt: 896.13ms, fracRes: 0.2779, norm(attn): 0.3438, norm(output): 1.3594, norm(x): 1.1073, norm(y): 1.0109, norm:0.9348, tok/sec: 146265.18, flops:113.91, batch-reuse:1
@ 1982 train 4.5120 , allloss: 4.5138, dt: 907.68ms, fracRes: 0.2759, norm(attn): 0.3457, norm(output): 1.3672, norm(x): 1.1064, norm(y): 1.0108, norm:0.8247, tok/sec: 144403.73, flops:112.46, batch-reuse:1
@ 1983 train 4.5958 , allloss: 4.5976, dt: 894.37ms, fracRes: 0.2752, norm(attn): 0.3457, norm(output): 1.3750, norm(x): 1.1193, norm(y): 1.0109, norm:0.8674, tok/sec: 146552.04, flops:114.14, batch-reuse:1
@ 1984 train 4.5410 , allloss: 4.5423, dt: 895.90ms, fracRes: 0.2752, norm(attn): 0.3457, norm(output): 1.3750, norm(x): 1.1120, norm(y): 1.0109, norm:0.8748, tok/sec: 146301.53, flops:113.94, batch-reuse:1
@ 1985 train 4.5521 , allloss: 4.5531, dt: 913.15ms, fracRes: 0.2730, norm(attn): 0.3457, norm(output): 1.3750, norm(x): 1.1135, norm(y): 1.0108, norm:0.9839, tok/sec: 143537.65, flops:111.79, batch-reuse:1
@ 1986 train 4.6055 , allloss: 4.6067, dt: 892.55ms, fracRes: 0.2732, norm(attn): 0.3477, norm(output): 1.3594, norm(x): 1.1093, norm(y): 1.0107, norm:0.8174, tok/sec: 146851.47, flops:114.37, batch-reuse:1
@ 1987 train 4.6050 , allloss: 4.6057, dt: 908.20ms, fracRes: 0.2761, norm(attn): 0.3438, norm(output): 1.3672, norm(x): 1.1096, norm(y): 1.0110, norm:0.8792, tok/sec: 144320.52, flops:112.40, batch-reuse:1
@ 1988 train 4.5440 , allloss: 4.5447, dt: 882.87ms, fracRes: 0.2764, norm(attn): 0.3457, norm(output): 1.3750, norm(x): 1.1208, norm(y): 1.0109, norm:0.9325, tok/sec: 148461.64, flops:115.62, batch-reuse:1
@ 1989 train 4.5662 , allloss: 4.5668, dt: 898.25ms, fracRes: 0.2773, norm(attn): 0.3477, norm(output): 1.3750, norm(x): 1.1228, norm(y): 1.0107, norm:0.8592, tok/sec: 145918.69, flops:113.64, batch-reuse:1
@ 1990 train 4.6098 , allloss: 4.6107, dt: 892.54ms, fracRes: 0.2782, norm(attn): 0.3457, norm(output): 1.3672, norm(x): 1.1142, norm(y): 1.0107, norm:0.9377, tok/sec: 146853.00, flops:114.37, batch-reuse:1
@ 1991 train 4.4879 , allloss: 4.4887, dt: 898.67ms, fracRes: 0.2783, norm(attn): 0.3457, norm(output): 1.3672, norm(x): 1.1226, norm(y): 1.0106, norm:0.9100, tok/sec: 145850.63, flops:113.59, batch-reuse:1
@ 1992 train 4.5705 , allloss: 4.5714, dt: 898.25ms, fracRes: 0.2775, norm(attn): 0.3496, norm(output): 1.3672, norm(x): 1.1178, norm(y): 1.0108, norm:0.8393, tok/sec: 145919.93, flops:113.64, batch-reuse:1
@ 1993 train 4.4348 , allloss: 4.4361, dt: 915.89ms, fracRes: 0.2768, norm(attn): 0.3477, norm(output): 1.3672, norm(x): 1.1113, norm(y): 1.0108, norm:0.8644, tok/sec: 143108.56, flops:111.45, batch-reuse:1
@ 1994 train 4.4709 , allloss: 4.4723, dt: 906.35ms, fracRes: 0.2764, norm(attn): 0.3496, norm(output): 1.3672, norm(x): 1.1117, norm(y): 1.0107, norm:1.0215, tok/sec: 144614.74, flops:112.63, batch-reuse:1
@ 1995 train 4.4747 , allloss: 4.4767, dt: 917.76ms, fracRes: 0.2739, norm(attn): 0.3496, norm(output): 1.3672, norm(x): 1.1140, norm(y): 1.0106, norm:0.9962, tok/sec: 142817.42, flops:111.23, batch-reuse:1
@ 1996 train 4.5304 , allloss: 4.5316, dt: 878.68ms, fracRes: 0.2752, norm(attn): 0.3516, norm(output): 1.3672, norm(x): 1.1167, norm(y): 1.0105, norm:1.0588, tok/sec: 149169.49, flops:116.17, batch-reuse:1
@ 1997 train 4.4556 , allloss: 4.4565, dt: 891.51ms, fracRes: 0.2749, norm(attn): 0.3477, norm(output): 1.3594, norm(x): 1.1080, norm(y): 1.0106, norm:0.8190, tok/sec: 147021.95, flops:114.50, batch-reuse:1
@ 1998 train 4.4470 , allloss: 4.4479, dt: 899.47ms, fracRes: 0.2763, norm(attn): 0.3496, norm(output): 1.3594, norm(x): 1.1124, norm(y): 1.0106, norm:0.8045, tok/sec: 145721.78, flops:113.49, batch-reuse:1
@ 1999 train 4.3671 , allloss: 4.3679, dt: 889.99ms, fracRes: 0.2771, norm(attn): 0.3457, norm(output): 1.3828, norm(x): 1.1246, norm(y): 1.0107, norm:0.8408, tok/sec: 147273.51, flops:114.70, batch-reuse:1
@ 2000 val 4.5434
@ 2000 train 4.4428 , allloss: 4.4440, dt: 1470.42ms, fracRes: 0.2768, norm(attn): 0.3457, norm(output): 1.3750, norm(x): 1.1186, norm(y): 1.0107, norm:0.8883, tok/sec: 89139.40, flops:69.42, batch-reuse:1
@ 2001 train 4.5229 , allloss: 4.5251, dt: 881.29ms, fracRes: 0.2771, norm(attn): 0.3457, norm(output): 1.3672, norm(x): 1.1214, norm(y): 1.0104, norm:0.9401, tok/sec: 148727.80, flops:115.83, batch-reuse:1
@ 2002 train 4.4978 , allloss: 4.4987, dt: 890.42ms, fracRes: 0.2774, norm(attn): 0.3477, norm(output): 1.3906, norm(x): 1.1315, norm(y): 1.0105, norm:0.9910, tok/sec: 147202.21, flops:114.64, batch-reuse:1
@ 2003 train 4.4932 , allloss: 4.4942, dt: 898.24ms, fracRes: 0.2773, norm(attn): 0.3457, norm(output): 1.3828, norm(x): 1.1343, norm(y): 1.0106, norm:0.8322, tok/sec: 145921.59, flops:113.64, batch-reuse:1
@ 2004 train 4.4963 , allloss: 4.4969, dt: 889.04ms, fracRes: 0.2763, norm(attn): 0.3438, norm(output): 1.3906, norm(x): 1.1322, norm(y): 1.0105, norm:0.8412, tok/sec: 147430.34, flops:114.82, batch-reuse:1
@ 2005 train 4.3686 , allloss: 4.3693, dt: 895.60ms, fracRes: 0.2772, norm(attn): 0.3477, norm(output): 1.3828, norm(x): 1.1323, norm(y): 1.0104, norm:0.9286, tok/sec: 146350.72, flops:113.98, batch-reuse:1
@ 2006 train 4.5331 , allloss: 4.5338, dt: 909.06ms, fracRes: 0.2777, norm(attn): 0.3516, norm(output): 1.3828, norm(x): 1.1342, norm(y): 1.0105, norm:0.8814, tok/sec: 144184.67, flops:112.29, batch-reuse:1
@ 2007 train 4.4174 , allloss: 4.4184, dt: 923.69ms, fracRes: 0.2766, norm(attn): 0.3477, norm(output): 1.3750, norm(x): 1.1178, norm(y): 1.0104, norm:0.8965, tok/sec: 141900.34, flops:110.51, batch-reuse:1
@ 2008 train 4.4647 , allloss: 4.4653, dt: 905.97ms, fracRes: 0.2773, norm(attn): 0.3496, norm(output): 1.3828, norm(x): 1.1219, norm(y): 1.0105, norm:0.9141, tok/sec: 144675.82, flops:112.67, batch-reuse:1
@ 2009 train 4.4291 , allloss: 4.4298, dt: 876.87ms, fracRes: 0.2762, norm(attn): 0.3516, norm(output): 1.3906, norm(x): 1.1313, norm(y): 1.0105, norm:0.9488, tok/sec: 149477.33, flops:116.41, batch-reuse:1
@ 2010 train 4.5329 , allloss: 4.5337, dt: 894.88ms, fracRes: 0.2742, norm(attn): 0.3496, norm(output): 1.3828, norm(x): 1.1254, norm(y): 1.0104, norm:0.9826, tok/sec: 146469.03, flops:114.07, batch-reuse:1
@ 2011 train 4.3644 , allloss: 4.3659, dt: 902.04ms, fracRes: 0.2759, norm(attn): 0.3555, norm(output): 1.3984, norm(x): 1.1450, norm(y): 1.0105, norm:1.0089, tok/sec: 145305.81, flops:113.16, batch-reuse:1
@ 2012 train 4.3676 , allloss: 4.3681, dt: 900.24ms, fracRes: 0.2754, norm(attn): 0.3516, norm(output): 1.3906, norm(x): 1.1316, norm(y): 1.0104, norm:0.8606, tok/sec: 145597.24, flops:113.39, batch-reuse:1
@ 2013 train 4.4388 , allloss: 4.4392, dt: 902.64ms, fracRes: 0.2757, norm(attn): 0.3574, norm(output): 1.3828, norm(x): 1.1428, norm(y): 1.0103, norm:0.9510, tok/sec: 145209.21, flops:113.09, batch-reuse:1
@ 2014 train 4.4249 , allloss: 4.4263, dt: 910.29ms, fracRes: 0.2753, norm(attn): 0.3594, norm(output): 1.3750, norm(x): 1.1415, norm(y): 1.0102, norm:0.8945, tok/sec: 143989.69, flops:112.14, batch-reuse:1
@ 2015 train 4.3839 , allloss: 4.3849, dt: 909.23ms, fracRes: 0.2768, norm(attn): 0.3535, norm(output): 1.3828, norm(x): 1.1381, norm(y): 1.0103, norm:0.7736, tok/sec: 144157.33, flops:112.27, batch-reuse:1
@ 2016 train 4.4632 , allloss: 4.4640, dt: 908.56ms, fracRes: 0.2773, norm(attn): 0.3535, norm(output): 1.3828, norm(x): 1.1378, norm(y): 1.0102, norm:0.8792, tok/sec: 144263.48, flops:112.35, batch-reuse:1
@ 2017 train 4.4217 , allloss: 4.4223, dt: 918.22ms, fracRes: 0.2772, norm(attn): 0.3555, norm(output): 1.4062, norm(x): 1.1551, norm(y): 1.0103, norm:0.9250, tok/sec: 142745.41, flops:111.17, batch-reuse:1
@ 2018 train 4.4751 , allloss: 4.4775, dt: 914.65ms, fracRes: 0.2769, norm(attn): 0.3594, norm(output): 1.4062, norm(x): 1.1545, norm(y): 1.0103, norm:0.8383, tok/sec: 143303.39, flops:111.61, batch-reuse:1
@ 2019 train 4.4912 , allloss: 4.4930, dt: 921.55ms, fracRes: 0.2758, norm(attn): 0.3633, norm(output): 1.4141, norm(x): 1.1598, norm(y): 1.0103, norm:0.8722, tok/sec: 142229.90, flops:110.77, batch-reuse:1
@ 2020 train 4.3952 , allloss: 4.3961, dt: 900.30ms, fracRes: 0.2741, norm(attn): 0.3574, norm(output): 1.3828, norm(x): 1.1389, norm(y): 1.0103, norm:0.9078, tok/sec: 145587.75, flops:113.38, batch-reuse:1
@ 2021 train 4.4157 , allloss: 4.4165, dt: 895.56ms, fracRes: 0.2738, norm(attn): 0.3535, norm(output): 1.3984, norm(x): 1.1421, norm(y): 1.0102, norm:0.9039, tok/sec: 146357.04, flops:113.98, batch-reuse:1
@ 2022 train 4.4805 , allloss: 4.4817, dt: 906.31ms, fracRes: 0.2744, norm(attn): 0.3516, norm(output): 1.3906, norm(x): 1.1362, norm(y): 1.0102, norm:0.9015, tok/sec: 144621.05, flops:112.63, batch-reuse:1
@ 2023 train 4.4490 , allloss: 4.4565, dt: 921.14ms, fracRes: 0.2758, norm(attn): 0.3477, norm(output): 1.3828, norm(x): 1.1377, norm(y): 1.0102, norm:0.7302, tok/sec: 142292.85, flops:110.82, batch-reuse:1
@ 2024 train 4.4061 , allloss: 4.4070, dt: 900.26ms, fracRes: 0.2756, norm(attn): 0.3496, norm(output): 1.3984, norm(x): 1.1374, norm(y): 1.0102, norm:0.8322, tok/sec: 145592.92, flops:113.39, batch-reuse:1
@ 2025 train 4.5014 , allloss: 4.5026, dt: 908.98ms, fracRes: 0.2777, norm(attn): 0.3516, norm(output): 1.4062, norm(x): 1.1442, norm(y): 1.0102, norm:0.8442, tok/sec: 144196.73, flops:112.30, batch-reuse:1
@ 2026 train 4.4073 , allloss: 4.4121, dt: 910.79ms, fracRes: 0.2791, norm(attn): 0.3535, norm(output): 1.4219, norm(x): 1.1591, norm(y): 1.0101, norm:0.7360, tok/sec: 143909.52, flops:112.08, batch-reuse:1
@ 2027 train 4.4610 , allloss: 4.4623, dt: 897.78ms, fracRes: 0.2793, norm(attn): 0.3477, norm(output): 1.4141, norm(x): 1.1550, norm(y): 1.0101, norm:0.7673, tok/sec: 145995.34, flops:113.70, batch-reuse:1
@ 2028 train 4.7651 , allloss: 4.7660, dt: 880.12ms, fracRes: 0.2813, norm(attn): 0.3516, norm(output): 1.4297, norm(x): 1.1742, norm(y): 1.0101, norm:0.9640, tok/sec: 148925.42, flops:115.98, batch-reuse:1
@ 2029 train 4.4739 , allloss: 4.4744, dt: 897.04ms, fracRes: 0.2793, norm(attn): 0.3594, norm(output): 1.4688, norm(x): 1.1846, norm(y): 1.0100, norm:1.5174, tok/sec: 146115.43, flops:113.80, batch-reuse:1
@ 2030 train 4.2849 , allloss: 4.2859, dt: 915.15ms, fracRes: 0.2779, norm(attn): 0.3555, norm(output): 1.4531, norm(x): 1.1715, norm(y): 1.0101, norm:1.1092, tok/sec: 143223.87, flops:111.54, batch-reuse:1
@ 2031 train 4.3705 , allloss: 4.3838, dt: 897.24ms, fracRes: 0.2786, norm(attn): 0.3496, norm(output): 1.4141, norm(x): 1.1696, norm(y): 1.0101, norm:1.2301, tok/sec: 146083.40, flops:113.77, batch-reuse:1
@ 2032 train 4.3750 , allloss: 4.3757, dt: 910.57ms, fracRes: 0.2764, norm(attn): 0.3594, norm(output): 1.3906, norm(x): 1.1571, norm(y): 1.0099, norm:0.9604, tok/sec: 143945.62, flops:112.11, batch-reuse:1
@ 2033 train 4.3411 , allloss: 4.3417, dt: 903.43ms, fracRes: 0.2775, norm(attn): 0.3613, norm(output): 1.4688, norm(x): 1.1844, norm(y): 1.0103, norm:1.1127, tok/sec: 145082.36, flops:112.99, batch-reuse:1
@ 2034 train 4.4164 , allloss: 4.4171, dt: 902.70ms, fracRes: 0.2744, norm(attn): 0.3652, norm(output): 1.5000, norm(x): 1.2010, norm(y): 1.0102, norm:1.1179, tok/sec: 145200.73, flops:113.08, batch-reuse:1
@ 2035 train 4.3678 , allloss: 4.3685, dt: 916.44ms, fracRes: 0.2770, norm(attn): 0.3633, norm(output): 1.5078, norm(x): 1.2036, norm(y): 1.0101, norm:1.1586, tok/sec: 143022.55, flops:111.39, batch-reuse:1
@ 2036 train 4.4106 , allloss: 4.4114, dt: 919.52ms, fracRes: 0.2798, norm(attn): 0.3535, norm(output): 1.5000, norm(x): 1.1898, norm(y): 1.0104, norm:1.0071, tok/sec: 142543.69, flops:111.01, batch-reuse:1
@ 2037 train 4.3820 , allloss: 4.3832, dt: 920.59ms, fracRes: 0.2814, norm(attn): 0.3535, norm(output): 1.5000, norm(x): 1.1918, norm(y): 1.0105, norm:0.9623, tok/sec: 142377.53, flops:110.88, batch-reuse:1
@ 2038 train 4.4227 , allloss: 4.4236, dt: 901.15ms, fracRes: 0.2810, norm(attn): 0.3535, norm(output): 1.5000, norm(x): 1.1930, norm(y): 1.0105, norm:1.0404, tok/sec: 145449.32, flops:113.28, batch-reuse:1
@ 2039 train 4.4900 , allloss: 4.4914, dt: 912.92ms, fracRes: 0.2809, norm(attn): 0.3555, norm(output): 1.4922, norm(x): 1.1918, norm(y): 1.0105, norm:0.9254, tok/sec: 143575.18, flops:111.82, batch-reuse:1
@ 2040 train 4.5717 , allloss: 4.5728, dt: 907.32ms, fracRes: 0.2817, norm(attn): 0.3496, norm(output): 1.4609, norm(x): 1.1733, norm(y): 1.0104, norm:0.9888, tok/sec: 144459.96, flops:112.51, batch-reuse:1
@ 2041 train 4.5075 , allloss: 4.5098, dt: 908.67ms, fracRes: 0.2804, norm(attn): 0.3574, norm(output): 1.5000, norm(x): 1.1917, norm(y): 1.0103, norm:1.0155, tok/sec: 144246.30, flops:112.34, batch-reuse:1
@ 2042 train 4.6397 , allloss: 4.6415, dt: 888.32ms, fracRes: 0.2791, norm(attn): 0.3633, norm(output): 1.4922, norm(x): 1.1940, norm(y): 1.0101, norm:0.9464, tok/sec: 147549.61, flops:114.91, batch-reuse:1
@ 2043 train 4.6182 , allloss: 4.6195, dt: 904.83ms, fracRes: 0.2761, norm(attn): 0.3633, norm(output): 1.4688, norm(x): 1.1721, norm(y): 1.0102, norm:0.9367, tok/sec: 144858.84, flops:112.82, batch-reuse:1
@ 2044 train 4.7121 , allloss: 4.7132, dt: 902.00ms, fracRes: 0.2747, norm(attn): 0.3574, norm(output): 1.4766, norm(x): 1.1721, norm(y): 1.0103, norm:1.1536, tok/sec: 145312.76, flops:113.17, batch-reuse:1
@ 2045 train 4.5853 , allloss: 4.5872, dt: 907.00ms, fracRes: 0.2738, norm(attn): 0.3594, norm(output): 1.4531, norm(x): 1.1641, norm(y): 1.0102, norm:0.9160, tok/sec: 144511.45, flops:112.55, batch-reuse:1
@ 2046 train 4.6763 , allloss: 4.6783, dt: 901.50ms, fracRes: 0.2757, norm(attn): 0.3574, norm(output): 1.4531, norm(x): 1.1677, norm(y): 1.0100, norm:0.9802, tok/sec: 145393.85, flops:113.23, batch-reuse:1
@ 2047 train 4.5712 , allloss: 4.5724, dt: 924.87ms, fracRes: 0.2770, norm(attn): 0.3594, norm(output): 1.4375, norm(x): 1.1776, norm(y): 1.0100, norm:0.9689, tok/sec: 141719.96, flops:110.37, batch-reuse:1
@ 2048 train 4.5365 , allloss: 4.5413, dt: 920.17ms, fracRes: 0.2771, norm(attn): 0.3594, norm(output): 1.4375, norm(x): 1.1784, norm(y): 1.0099, norm:0.8948, tok/sec: 142442.61, flops:110.93, batch-reuse:1
@ 2049 train 4.6344 , allloss: 4.6355, dt: 898.28ms, fracRes: 0.2773, norm(attn): 0.3574, norm(output): 1.4766, norm(x): 1.1905, norm(y): 1.0100, norm:0.9330, tok/sec: 145913.69, flops:113.64, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0139,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1582,     0.8242,     0.0193,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2373,     0.2598,     0.0339,     0.4688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0552,     0.7109,     0.0161,     0.1982,     0.0187,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2539,     0.2285,     0.2178,     0.0515,     0.0442,     0.2051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1152,     0.0791,     0.3555,     0.0664,     0.0801,     0.0708,     0.2334,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0023,     0.0092,     0.0742,     0.0084,     0.0527,     0.0238,     0.0090,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0415,     0.2119,     0.0220,     0.0640,     0.0110,     0.0679,     0.5195,     0.0203,     0.0439,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3027,     0.0522,     0.0723,     0.0554,     0.0598,     0.1055,     0.0908,     0.0469,     0.0684,     0.1465,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.1494,     0.0006,     0.0108,     0.0038,     0.0151,     0.8086,     0.0003,     0.0045,     0.0009,     0.0036,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5742,     0.0222,     0.0092,     0.0864,     0.0067,     0.0747,     0.0222,     0.0060,     0.0103,     0.1216,     0.0352,     0.0325,     0.0000,     0.0000,     0.0000],
        [    0.4082,     0.0120,     0.0261,     0.0603,     0.0065,     0.0962,     0.0157,     0.0258,     0.0177,     0.2578,     0.0125,     0.0525,     0.0086,     0.0000,     0.0000],
        [    0.0283,     0.2207,     0.0039,     0.0366,     0.0053,     0.0505,     0.4512,     0.0053,     0.0236,     0.0090,     0.0069,     0.0879,     0.0532,     0.0175,     0.0000],
        [    0.1099,     0.1182,     0.0245,     0.0630,     0.0250,     0.0464,     0.1611,     0.0221,     0.0640,     0.0311,     0.0728,     0.0757,     0.0605,     0.0461,     0.0791]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0099, -0.0024, -0.0539,  ...,  0.0494, -0.0122, -0.0303],
        [-0.0489,  0.0250,  0.0548,  ..., -0.0499, -0.0028,  0.0072],
        [ 0.0197,  0.0133,  0.0296,  ..., -0.0277,  0.0115,  0.0212],
        ...,
        [ 0.0079,  0.0023,  0.0331,  ..., -0.0170,  0.0288,  0.0067],
        [ 0.0170,  0.0212, -0.0311,  ...,  0.0205, -0.0384, -0.0464],
        [ 0.0174, -0.0028,  0.0781,  ..., -0.0138,  0.0387,  0.0312]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2559, -0.2031,  0.0569, -1.1719, -0.4043,  0.7773,  0.0332, -0.2773, -0.2500,  0.0500, -1.1016,  1.2734,  0.0850, -1.0312, -0.0977, -0.7539, -0.1689, -0.4375, -0.4258,  0.2949, -0.1553, -0.1216, -0.2793,  0.7422, -0.7578,  0.0226, -1.3203,  0.4082,  1.3047,  0.9883, -0.6719, -0.2949,
         0.3867,  0.3281,  0.8320,  0.4336,  1.0625, -0.6016,  0.7930,  1.3828, -0.7109, -0.5977,  0.0043, -0.2402, -1.2188,  0.2930,  1.8594, -1.4844, -0.7695,  1.2266,  1.2109, -0.0947, -0.1406, -0.5000,  0.5586,  0.8438,  0.4883,  0.2812, -0.0869,  0.2490,  1.5625,  0.5195,  0.5156,  1.2656],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0270,  0.0127,  0.0392,  ..., -0.0116,  0.0395, -0.0112],
        [ 0.0154, -0.0200, -0.0392,  ...,  0.0160, -0.0351, -0.0447],
        [ 0.0454, -0.0065, -0.0390,  ...,  0.0365, -0.0289, -0.0232],
        ...,
        [ 0.0330,  0.0239, -0.0361,  ...,  0.0430, -0.0286, -0.0357],
        [ 0.0193, -0.0077,  0.0051,  ..., -0.0214,  0.0355,  0.0289],
        [ 0.0203,  0.0225, -0.0711,  ..., -0.0139, -0.0711, -0.0393]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0201,  0.0430, -0.2578, -1.4141, -0.7578,  1.1094, -0.7734,  0.6523,  1.2734, -0.2617,  0.3027, -0.6992, -0.8750, -0.1641, -0.4941,  0.2891,  0.2266, -0.8828,  1.3672,  0.3066,  0.1157,  1.3906, -0.0461, -0.0996,  0.2432, -0.7695,  0.3652, -0.6406, -0.8594, -0.2334, -0.6680,  0.6094,
        -0.2988, -0.0354,  1.6250, -0.5156, -0.3672, -1.3203, -1.0547, -0.2197,  0.0466, -0.5195,  0.0061,  1.5859,  0.1338,  0.0742, -0.0192,  1.1328, -1.1172, -1.3906,  0.1133,  0.6797,  0.8438, -0.4121,  0.6211,  1.0781,  0.2656, -0.1621, -0.1328,  0.9141,  0.0752, -0.0869,  0.7930, -0.6914],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -4.2500,      0.6992,      0.1367,      0.2178,     -1.2969,     -0.7812,     -0.3320,      1.2344,     -0.1924,      1.9219,     -0.1299,     -0.6680,      0.3066,      0.6875],
        [     0.0000,      1.6484,     -2.1094,      0.5312,     -1.2266,      1.2031,      1.5938,     -2.3594,     -1.0859,     -0.8906,     -0.5234,      0.5391,     -1.0703,     -0.7539,      0.4922],
        [     0.0000,      0.0903,     -1.9453,      0.6797,     -1.7891,     -0.2070,      2.0000,     -3.7812,     -1.1328,     -0.1934,     -0.6914,     -0.6367,     -1.9922,     -2.2812,      0.6445],
        [     0.0000,      2.5625,     -1.2344,      1.2812,     -1.0781,      2.0625,      4.7500,     -2.4219,      0.4707,     -0.6914,     -0.7422,      0.9062,      0.0356,     -0.2832,      1.2656],
        [     0.0000,     -0.1045,     -0.1504,     -1.5938,     -1.7500,     -0.2100,     -0.1592,      0.0002,     -0.6328,     -0.8594,     -1.1953,     -0.3301,      0.2207,     -0.6602,     -1.0469],
        [     0.0000,     -0.3750,      1.1250,     -0.5547,     -0.3672,     -0.4902,      0.7031,      1.0781,      0.8867,     -0.8555,      0.2197,      0.7578,      1.2969,      1.1250,      0.5117],
        [     0.0000,     -5.8750,     -4.5000,     -2.4062,     -4.5938,     -2.7500,     -3.5312,     -4.5000,     -4.8750,     -1.2344,     -3.1250,     -3.7969,     -5.3125,     -5.1250,     -3.3906],
        [     0.0000,      1.6328,     -0.6367,      0.4316,     -1.3281,      0.4922,      2.5312,     -0.7109,      0.0571,     -0.5508,     -0.8359,      1.1250,      0.8789,      0.0106,      0.5391],
        [     0.0000,     -1.7578,     -1.4297,     -1.6953,     -1.6172,     -1.0547,     -1.2031,     -1.8672,     -1.4844,     -0.7227,     -0.1475,     -2.0781,     -1.0547,     -2.0000,     -0.5430],
        [     0.0000,      4.4688,     -1.0312,      1.8438,      0.7969,      2.1719,      6.1562,     -1.8281,      0.9688,     -0.5898,      0.7305,      2.0781,      1.9297,      0.8594,      3.0156],
        [     0.0000,     -3.2500,     -4.1250,     -1.8906,     -4.4375,     -2.0469,     -3.2500,     -4.5625,     -4.0312,     -1.5469,     -2.7969,     -2.8750,     -3.8750,     -4.2188,     -2.3750],
        [     0.0000,     -3.5312,     -2.7500,     -1.9141,     -4.1562,     -1.4453,     -3.2500,     -2.7656,     -3.1406,     -0.4551,     -3.4844,     -2.0469,     -3.8594,     -3.2031,     -2.7656],
        [     0.0000,      2.0469,     -1.9844,      0.2559,     -1.6719,      0.5781,      2.7656,     -1.6797,     -0.1855,     -1.1406,     -1.4062,      1.1328,      0.6328,     -0.4805,      0.8438],
        [     0.0000,      0.0723,     -1.5000,     -0.5586,     -1.4844,     -0.8633,      0.3809,     -1.6094,     -0.5391,     -1.2656,     -0.4141,     -0.3730,     -0.5977,     -0.8711,     -0.3320]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5540],
        [0.5372],
        [0.3975],
        [0.4236],
        [0.2958],
        [0.1427],
        [0.3820],
        [0.1280],
        [0.2740],
        [0.0793],
        [0.2892],
        [0.2320],
        [0.1041],
        [0.0642]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0424,     -0.0310,      0.0077,  ...,      0.0354,     -0.0372,     -0.0284],
        [     0.0161,     -0.0142,      0.0338,  ...,     -0.0281,      0.0129,     -0.0001],
        [     0.0087,      0.0556,      0.0363,  ...,     -0.0477,     -0.0016,      0.0195],
        ...,
        [    -0.0158,     -0.0095,     -0.0268,  ...,      0.0499,     -0.0039,      0.0416],
        [     0.0352,      0.0130,      0.0231,  ...,     -0.0324,      0.0413,      0.0085],
        [    -0.0201,     -0.0201,     -0.0413,  ...,      0.0659,     -0.0267,      0.0215]], device='cuda:0', requires_grad=True)
K: tensor([ 2.5000, -2.6094,  1.8594, -2.0312, -0.6914, -2.9844, -0.8125,  2.6562,  0.6953, -0.6172, -1.7969, -2.5625, -2.7969, -1.0156, -0.4336, -3.1875,  1.1484,  1.4531,  0.4590, -1.3203, -0.8320, -1.4531,  3.3281,  2.2188,  2.3750, -2.3750, -3.7344,  1.8672,  2.3281, -2.0469,  1.4531, -1.5859,
        -2.7500, -3.0469,  2.1562,  1.4688, -1.9219, -0.7539,  2.4062, -1.4453, -1.2891,  0.1904,  2.1250,  0.6641, -1.2344,  0.2559,  3.5469,  2.5000, -2.9844,  1.8906, -0.9609,  1.1719, -2.7812, -0.6914,  1.5859, -1.3281,  2.5469, -2.5938, -2.4844, -1.7188,  1.2891, -0.7539,  1.1250, -2.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0002,  0.0121,  0.0369,  ..., -0.0376,  0.0311,  0.0174],
        [ 0.0243, -0.0025, -0.0272,  ...,  0.0111, -0.0385, -0.0355],
        [ 0.0172,  0.0248, -0.0259,  ...,  0.0655,  0.0087, -0.0234],
        ...,
        [-0.0130, -0.0054,  0.0044,  ..., -0.0494, -0.0038, -0.0639],
        [-0.0231, -0.0165, -0.0108,  ...,  0.0490, -0.0651,  0.0134],
        [ 0.0059,  0.0201,  0.0014,  ..., -0.0899,  0.0321, -0.0004]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6133,  1.9375, -1.4531,  1.8984,  1.3359,  1.1250, -0.6328, -1.9766,  0.6836,  0.9805,  0.8086,  2.0312,  1.6562, -0.1143,  0.0256, -0.2598, -1.8750,  0.1855, -0.1885,  2.0000,  2.0156,  0.3867, -2.0938, -0.9570, -2.0000,  1.7266,  0.5508, -0.0299, -1.2266,  0.8398, -1.7344, -0.7578,
         0.7070,  2.1875, -0.3008, -1.9688,  1.2109,  0.2324, -0.9609, -0.0222,  0.4492, -1.2188, -1.0781, -0.2070, -1.6250, -0.3867,  0.0364, -2.1719,  1.0859,  0.1396,  1.1484, -0.0228,  1.6562,  1.7734, -1.5078, -0.3555, -1.7812,  2.0469,  0.6992,  0.8594, -0.7891,  0.0679, -1.9375,  1.5391],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -22.2500, -20.0000, -18.8750, -21.3750, -19.5000, -26.0000, -21.7500, -16.6250, -19.6250, -20.5000, -20.8750, -17.1250, -17.7500, -19.7500],
        [  0.0000, -21.6250, -19.0000, -18.1250, -19.8750, -20.0000, -25.6250, -19.1250, -14.9375, -18.5000, -19.7500, -19.6250, -13.8125, -16.3750, -20.1250],
        [  0.0000, -26.8750, -26.5000, -22.5000, -23.2500, -27.5000, -32.7500, -28.5000, -17.3750, -24.0000, -23.6250, -25.3750, -23.6250, -18.3750, -25.2500],
        [  0.0000, -13.4375, -11.4375, -11.9375, -12.6250, -11.2500, -16.2500, -14.8750, -10.4375, -12.7500, -14.5625, -14.5625, -10.0625, -11.6250, -12.8125],
        [  0.0000, -22.1250, -17.8750, -17.0000, -22.0000, -19.6250, -26.1250, -18.3750, -16.7500, -18.1250, -21.3750, -20.0000, -14.1250, -18.2500, -19.7500],
        [  0.0000, -26.5000, -23.2500, -23.3750, -24.3750, -23.0000, -32.0000, -25.6250, -19.2500, -23.8750, -25.3750, -25.0000, -17.3750, -21.1250, -24.1250],
        [  0.0000, -21.2500, -20.0000, -18.2500, -19.1250, -20.0000, -25.7500, -20.8750, -12.6250, -18.6250, -18.1250, -18.3750, -15.5000, -13.7500, -19.8750],
        [  0.0000, -15.8125, -16.0000, -14.5000, -11.7500, -16.2500, -19.6250, -17.1250,  -9.2500, -14.1250, -13.6875, -15.2500, -11.6875, -10.0625, -15.2500],
        [  0.0000, -14.5625, -14.9375, -15.0625, -12.0625, -15.4375, -18.0000, -17.2500,  -8.5000, -14.5000, -11.7500, -13.2500, -14.5000,  -9.0625, -13.3750],
        [  0.0000, -13.1250, -12.7500, -13.2500, -13.6250, -10.3750, -15.6875, -14.9375,  -9.8750, -14.4375, -14.1250, -13.1875, -10.4375, -10.7500, -11.2500],
        [  0.0000, -23.3750, -22.5000, -20.7500, -19.3750, -22.2500, -27.6250, -23.5000, -14.5625, -20.5000, -18.6250, -20.2500, -17.7500, -15.4375, -21.0000],
        [  0.0000, -22.7500, -19.7500, -19.1250, -20.2500, -21.2500, -28.3750, -21.8750, -16.0000, -18.6250, -20.7500, -21.3750, -15.8125, -17.6250, -23.0000],
        [  0.0000, -16.5000, -16.5000, -15.4375, -12.4375, -16.7500, -20.3750, -18.0000,  -9.9375, -15.1250, -14.8125, -16.0000, -12.0625, -10.8750, -15.6250],
        [  0.0000, -17.3750, -14.5625, -16.3750, -16.8750, -14.6875, -20.0000, -15.8125, -14.1250, -17.6250, -18.5000, -16.8750, -10.6250, -15.6250, -14.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9616],
        [1.0000],
        [0.9084],
        [1.0000],
        [1.0000],
        [0.9580],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0151, -0.0510, -0.0477,  ...,  0.0333, -0.0247,  0.0283],
        [ 0.0284,  0.0029,  0.0298,  ..., -0.0208,  0.0102, -0.0399],
        [ 0.0081,  0.0282, -0.0268,  ...,  0.0031,  0.0125,  0.0516],
        ...,
        [ 0.0184, -0.0162, -0.0636,  ...,  0.0211, -0.0305,  0.0298],
        [ 0.0213,  0.0698,  0.0295,  ..., -0.0004,  0.0327, -0.0442],
        [-0.0603, -0.0295, -0.0399,  ...,  0.0404, -0.0152,  0.0318]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3906, -1.4062, -2.0000,  2.2656, -1.9453,  2.8750,  1.0625,  1.5938,  1.4844,  0.7266, -1.2188,  1.7500,  2.4531, -2.3125,  1.0391, -1.3203, -2.0938, -2.6406, -2.0625,  1.1406, -2.7500,  0.7227, -2.1406,  3.0781, -2.7969, -2.4531, -2.6406,  3.3750, -1.9766, -1.1719,  2.2812, -1.4297,
        -2.7344,  0.2305, -1.3906,  0.5781,  2.3438,  1.9453,  1.4766, -2.6719, -2.7500,  1.9453, -1.9453, -1.7422,  2.9531, -1.8203, -0.9648,  2.0312,  1.2656, -0.8789,  1.5781,  2.1562, -0.7383, -2.7031, -1.5938,  2.1250, -2.6719,  1.2969, -1.2969, -1.5312,  1.1562, -2.4375,  0.3418, -1.6406],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0488,  0.0296,  0.0364,  ..., -0.0176,  0.0280, -0.0117],
        [ 0.0010, -0.0454, -0.0221,  ..., -0.0033, -0.0336,  0.0041],
        [ 0.0460,  0.0206,  0.0264,  ...,  0.0231,  0.0267, -0.0519],
        ...,
        [ 0.0090,  0.0354,  0.0327,  ..., -0.0030,  0.0181, -0.0232],
        [ 0.0032, -0.0514, -0.0218,  ...,  0.0475, -0.0398, -0.0380],
        [ 0.0294,  0.0092,  0.0816,  ..., -0.0230,  0.0421, -0.0564]], device='cuda:0', requires_grad=True)
Q: tensor([-1.3828,  1.9375,  2.3438, -1.3125,  1.6328, -2.3750, -2.0156, -0.8984, -1.7891, -0.4473, -0.9570, -3.0000, -2.5000,  2.9375, -1.0156,  2.7344,  2.3438,  2.7969,  1.8594, -1.5312,  2.6094, -2.2969,  1.2500, -2.6406,  2.3906,  2.6250,  2.0625, -2.3125,  2.4062,  1.8984, -2.5781,  1.5703,
         2.0000,  1.2266,  1.8984, -0.9727, -2.8594, -1.6406, -2.3906,  1.4609,  1.6875, -1.0156,  2.4219,  1.5625, -1.6562,  1.9141,  1.2656, -1.7422, -0.9961,  1.6172, -2.1719, -2.8750,  0.8867,  2.8906,  2.8281, -1.1484,  2.6719, -2.9062,  2.1875,  1.6016, -1.3203,  2.5312, -1.2891,  2.9531],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -28.0000, -31.5000, -25.2500, -31.0000, -26.5000, -34.2500, -40.5000, -30.2500, -32.5000, -30.0000, -34.5000, -32.7500, -31.3750, -26.5000],
        [  0.0000, -28.5000, -31.7500, -24.8750, -31.5000, -26.6250, -35.7500, -41.2500, -31.3750, -34.0000, -30.7500, -35.7500, -32.5000, -32.5000, -27.5000],
        [  0.0000, -25.6250, -29.8750, -23.1250, -28.0000, -23.0000, -31.7500, -37.2500, -27.8750, -31.0000, -26.3750, -32.2500, -30.3750, -28.8750, -25.3750],
        [  0.0000, -33.0000, -39.2500, -31.0000, -38.5000, -31.8750, -41.7500, -50.7500, -37.5000, -39.0000, -38.0000, -42.2500, -41.7500, -39.2500, -33.0000],
        [  0.0000, -16.5000, -17.3750, -13.3750, -17.3750, -15.8125, -18.5000, -22.1250, -17.0000, -18.5000, -18.2500, -18.3750, -18.3750, -17.3750, -15.5625],
        [  0.0000, -18.8750, -21.3750, -15.8750, -21.2500, -18.3750, -24.1250, -28.2500, -20.5000, -22.1250, -22.3750, -22.8750, -22.1250, -21.3750, -18.3750],
        [  0.0000, -19.8750, -24.6250, -18.7500, -22.5000, -18.7500, -26.7500, -31.7500, -22.7500, -25.5000, -23.5000, -26.3750, -25.1250, -23.7500, -20.5000],
        [  0.0000, -21.5000, -25.2500, -19.8750, -25.1250, -20.5000, -27.0000, -32.5000, -24.5000, -26.0000, -24.8750, -27.2500, -26.5000, -25.3750, -21.3750],
        [  0.0000, -28.8750, -34.0000, -26.6250, -32.7500, -26.6250, -36.5000, -43.0000, -32.7500, -37.0000, -31.5000, -37.2500, -34.0000, -34.2500, -29.1250],
        [  0.0000, -23.2500, -27.0000, -20.5000, -26.1250, -22.1250, -28.7500, -34.7500, -25.5000, -27.5000, -26.8750, -28.7500, -28.3750, -26.5000, -23.2500],
        [  0.0000, -20.0000, -23.8750, -18.3750, -22.1250, -18.8750, -24.8750, -30.0000, -22.2500, -24.2500, -22.5000, -25.6250, -24.0000, -23.1250, -19.7500],
        [  0.0000, -14.6875, -18.8750, -14.4375, -17.0000, -14.0000, -18.8750, -23.6250, -17.1250, -18.7500, -16.8750, -20.1250, -19.6250, -17.8750, -15.3750],
        [  0.0000, -22.1250, -26.3750, -20.6250, -26.0000, -21.2500, -27.8750, -34.0000, -25.5000, -27.0000, -26.0000, -28.3750, -27.7500, -26.3750, -22.2500],
        [  0.0000, -29.2500, -35.0000, -28.0000, -34.7500, -28.3750, -36.5000, -45.0000, -34.5000, -35.5000, -33.2500, -38.2500, -37.7500, -35.7500, -29.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8603],
        [1.0000],
        [0.9980],
        [0.7230],
        [0.7251],
        [0.8239],
        [0.9993],
        [0.6835],
        [1.0000],
        [0.6662],
        [0.9987],
        [0.9984],
        [0.6833],
        [0.9554]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0112,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0554,     0.9180,     0.0286,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.9375,     0.0156,     0.0444,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7070,     0.1641,     0.0840,     0.0004,     0.0459,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7109,     0.1904,     0.0280,     0.0025,     0.0491,     0.0194,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6406,     0.2559,     0.0054,     0.0022,     0.0106,     0.0071,     0.0791,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0481,     0.4355,     0.0038,     0.0008,     0.0327,     0.0029,     0.0243,     0.4512,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.0640,     0.0032,     0.0016,     0.0113,     0.0049,     0.0099,     0.0825,     0.0075,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0432,     0.6797,     0.0143,     0.0076,     0.0884,     0.0005,     0.0090,     0.1006,     0.0309,     0.0259,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8945,     0.0354,     0.0016,     0.0006,     0.0067,     0.0014,     0.0031,     0.0254,     0.0031,     0.0206,     0.0061,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0432,     0.1475,     0.0211,     0.0579,     0.0767,     0.0039,     0.0057,     0.3828,     0.0129,     0.1543,     0.0123,     0.0811,     0.0000,     0.0000,     0.0000],
        [    0.0354,     0.2363,     0.0043,     0.0002,     0.0093,     0.0024,     0.0208,     0.1963,     0.0913,     0.0996,     0.0060,     0.0044,     0.2930,     0.0000,     0.0000],
        [    0.6211,     0.0491,     0.0034,     0.0011,     0.0084,     0.0031,     0.0055,     0.0498,     0.0045,     0.1924,     0.0075,     0.0024,     0.0439,     0.0087,     0.0000],
        [    0.0762,     0.3809,     0.0168,     0.0366,     0.0708,     0.0015,     0.0918,     0.0422,     0.0146,     0.0417,     0.1040,     0.0208,     0.0427,     0.0303,     0.0277]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0064,  0.0037,  0.0115,  ...,  0.0166, -0.0051,  0.0712],
        [-0.0224, -0.0288, -0.0053,  ...,  0.0002,  0.0026, -0.0241],
        [ 0.0107, -0.0035,  0.0159,  ..., -0.0025,  0.0131,  0.0198],
        ...,
        [-0.0294,  0.0093,  0.0085,  ...,  0.0172,  0.0454,  0.0559],
        [ 0.0106, -0.0380,  0.0370,  ...,  0.0039, -0.0120, -0.0574],
        [-0.0233,  0.0091, -0.0281,  ..., -0.0060, -0.0186, -0.0542]], device='cuda:0', requires_grad=True)
K: tensor([    -2.1562,     -2.4688,      0.6328,     -0.3086,      1.4141,      0.7227,     -2.9688,     -0.2422,      0.1641,      0.4414,     -0.7539,      1.1094,      1.7578,     -1.4844,      1.3359,     -1.7188,     -0.3633,      1.0469,      0.8906,      1.3203,     -0.4277,     -0.9102,
             0.9062,     -1.4766,     -0.5938,      1.0625,      2.7656,     -0.5117,     -2.2031,     -2.2812,      0.6602,     -1.2734,     -0.7070,      2.2969,      1.1250,     -0.5273,     -1.4062,      1.9297,     -0.1641,     -1.3984,     -0.1582,      0.3594,      1.1172,     -1.1406,
            -0.8672,      1.5078,      2.2500,     -1.0469,      0.3262,      0.2471,     -0.9961,     -0.0006,      2.0469,      2.6250,      0.2715,     -0.0256,      1.5391,      0.7148,      0.5859,      1.0234,      0.7695,      1.4297,      1.5156,      1.3906], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0001,  0.0269, -0.0001,  ...,  0.0448, -0.0169,  0.0096],
        [-0.0025, -0.0007, -0.0156,  ..., -0.0162, -0.0120,  0.0189],
        [-0.0214, -0.0055, -0.0155,  ..., -0.0167, -0.0301, -0.0284],
        ...,
        [-0.0108, -0.0005, -0.0062,  ...,  0.0274, -0.0153,  0.0062],
        [ 0.0051,  0.0186, -0.0057,  ...,  0.0175,  0.0164,  0.0450],
        [-0.0201,  0.0096,  0.0169,  ...,  0.0096, -0.0253,  0.0681]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4277, -0.8906,  1.2734, -2.4375, -3.2188,  1.5000, -2.4531,  1.1797,  0.8164, -1.9688,  0.9883, -2.0625,  0.4824,  0.4531, -0.9023, -1.8672, -0.9375,  1.0078, -0.4102, -1.2656,  3.2500, -1.1328,  1.7422, -0.0801, -0.9102, -0.0530, -1.7656, -1.7891, -1.9688, -2.0938,  2.0625,  1.1406,
         0.2451,  0.0283, -0.4062, -0.4824, -1.5625, -0.0618,  1.2344,  0.0845,  0.9648, -0.6680, -0.3379,  2.4844,  0.3809,  1.0156, -3.7812,  0.6328, -0.5273,  0.4375, -0.4688, -0.1167, -1.1797, -0.0854,  1.2734,  0.3516,  0.5586,  1.3516, -2.2969,  1.2578,  0.4707, -1.7344, -5.2812,  0.9062],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.4688, -5.5000, -6.4688, -6.0625, -6.2812, -6.0000, -4.5000, -7.0625, -5.5312, -7.5000, -6.0625, -5.5938, -6.9062, -5.4062],
        [ 0.0000,  2.8125, -0.6602,  4.6562,  2.7500, -3.3438,  1.5781,  3.2188,  0.3711, -1.0469, -1.0078, -1.1562,  2.0312, -0.9922, -1.4922],
        [ 0.0000,  6.5938,  2.5156,  3.5625,  7.4688,  2.7812,  1.9766,  3.2500,  0.8555,  0.6680, -0.6367,  0.8047,  2.9375, -0.4297, -0.1064],
        [ 0.0000, -1.4609, -2.1250, -7.3750, -2.7344,  0.7383, -3.3438, -0.6094, -5.0312, -1.5859, -7.9062, -4.0625, -3.3438, -6.1250, -1.7969],
        [ 0.0000, -1.3203, -3.2344, -5.6562, -2.6719, -3.5938, -2.5625,  0.1074, -3.7031, -3.3281, -6.9062, -4.7188, -3.2656, -4.8125, -2.8906],
        [ 0.0000, -0.9141, -4.7812, -5.6562, -4.0938, -4.5000, -2.0938, -0.6797, -3.7812, -3.8438, -6.8750, -4.0000, -3.9531, -4.9375, -3.8125],
        [ 0.0000,  2.2031, -2.5312, -4.1250, -0.3906, -2.8125, -0.6836,  2.2344,  1.4531,  0.9414, -2.0469, -1.9531,  0.7344,  0.9297,  2.6719],
        [ 0.0000, -2.5469, -5.5312, -6.2500, -4.2812, -5.1250, -4.4062, -2.2812, -4.6875, -1.6953, -4.3438, -5.7812, -2.7812, -4.9062, -2.3281],
        [ 0.0000,  2.7500, -1.1016, -1.7344,  0.7188, -4.5000, -1.5625,  0.8438, -0.3340, -0.5078,  3.3281,  1.0312,  3.5781, -0.0903, -0.4551],
        [ 0.0000, -3.2344, -6.3125, -7.2500, -4.8750, -6.4688, -5.6562, -3.5625, -5.6562, -3.7656, -5.0000, -2.7969, -1.2578, -4.2188, -2.9375],
        [ 0.0000,  1.2266, -0.7188,  0.2910,  0.5664, -2.4062, -2.0312,  2.1875, -1.2109,  1.2656, -1.2578,  0.6289,  7.1562, -0.1270,  0.9844],
        [ 0.0000,  1.8984, -2.1094, -4.9688, -1.3438, -2.7031, -0.5352,  1.7109,  0.9414,  1.0312, -1.7734, -2.0938,  2.1094,  3.4531,  4.8125],
        [ 0.0000, -2.5312, -5.1875, -6.3438, -4.3125, -5.3125, -4.7188, -2.5156, -4.9375, -1.1719, -4.4062, -5.5312, -2.6406, -4.2812, -1.5547],
        [ 0.0000,  1.6094, -1.5156, -0.7344, -0.0752, -3.9531,  0.1855, -0.5898, -1.6562, -0.6016,  0.3086, -1.3047, -0.5781, -0.9258, -1.0156]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2629],
        [0.0646],
        [0.0763],
        [0.1804],
        [0.1892],
        [0.1474],
        [0.0935],
        [0.1511],
        [0.0959],
        [0.1513],
        [0.0382],
        [0.0796],
        [0.1047],
        [0.0380]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1406,     0.8594,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1299,     0.7070,     0.1631,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0211,     0.8320,     0.0801,     0.0669,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8438,     0.0515,     0.0079,     0.0074,     0.0903,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1299,     0.3965,     0.0293,     0.0222,     0.2500,     0.1709,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3223,     0.1807,     0.0096,     0.0131,     0.1416,     0.1572,     0.1758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3750,     0.1167,     0.0029,     0.0021,     0.3262,     0.0496,     0.0432,     0.0850,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0286,     0.0503,     0.0012,     0.0006,     0.0435,     0.0649,     0.0260,     0.0126,     0.7734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0097,     0.1562,     0.0315,     0.0190,     0.0265,     0.1289,     0.0576,     0.2539,     0.0933,     0.2246,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0170,     0.0288,     0.0033,     0.0017,     0.0067,     0.0123,     0.0280,     0.0371,     0.3828,     0.3086,     0.1729,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0386,     0.0757,     0.0146,     0.0206,     0.0413,     0.0854,     0.0104,     0.2002,     0.3457,     0.0894,     0.0479,     0.0302,     0.0000,     0.0000,     0.0000],
        [    0.1089,     0.0332,     0.0017,     0.0013,     0.0109,     0.0087,     0.0024,     0.0096,     0.7305,     0.0383,     0.0113,     0.0159,     0.0281,     0.0000,     0.0000],
        [    0.0210,     0.0192,     0.0005,     0.0003,     0.0050,     0.0146,     0.0028,     0.0059,     0.2334,     0.1104,     0.0197,     0.0093,     0.0396,     0.5195,     0.0000],
        [    0.0243,     0.0269,     0.0071,     0.0066,     0.0374,     0.0569,     0.0135,     0.1064,     0.0903,     0.1406,     0.0266,     0.0400,     0.2373,     0.1582,     0.0283]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0173,  0.0023, -0.0280,  ..., -0.0472, -0.0386, -0.0012],
        [-0.0237,  0.0512, -0.0243,  ...,  0.0170, -0.0056,  0.0300],
        [ 0.0157,  0.0425, -0.0273,  ...,  0.0255,  0.0278,  0.0080],
        ...,
        [ 0.0313,  0.0071,  0.0217,  ..., -0.0394,  0.0101, -0.0399],
        [ 0.0094,  0.0334,  0.0127,  ..., -0.0194,  0.0149, -0.0252],
        [-0.0321, -0.0075, -0.0332,  ..., -0.0120,  0.0218, -0.0009]], device='cuda:0', requires_grad=True)
K: tensor([-1.6953, -1.7500,  1.9688, -1.8125,  0.3457,  0.0869, -0.8086, -0.5312, -1.2188, -1.3438, -0.9531,  1.1875, -1.5703, -1.0156, -0.5781, -1.5391, -0.8594, -1.0000, -0.0474, -0.1387,  0.6016, -1.3984,  1.0547, -1.6797, -0.4746, -0.7461, -0.5156,  0.6719, -0.5508, -1.0547, -2.5000, -1.5156,
         0.1611, -1.7969,  0.3711, -1.1875, -0.2461, -0.9688,  0.1226, -1.1641, -0.3555,  0.0216,  0.7383,  0.7734, -0.4395,  1.6094, -0.6250,  2.6875, -1.3750, -1.8984, -0.5430,  1.3359,  0.1260, -1.3438, -0.1846, -1.8828,  1.1094,  0.1445, -1.0859,  1.0703,  0.3516,  1.1484,  1.1328, -1.3594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0133, -0.0106, -0.0049,  ...,  0.0144,  0.0036,  0.0215],
        [ 0.0556,  0.0240,  0.0379,  ..., -0.0418,  0.0073,  0.0201],
        [-0.0259, -0.0686,  0.0069,  ..., -0.0245,  0.0224,  0.0334],
        ...,
        [-0.0257,  0.0073,  0.0289,  ...,  0.0239,  0.0072, -0.0020],
        [ 0.0150, -0.0221, -0.0246,  ..., -0.0202,  0.0151, -0.0158],
        [-0.0080,  0.0432,  0.0078,  ...,  0.0257, -0.0267,  0.0072]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4941,  1.0469,  0.4766,  0.6562,  1.2188,  0.6367,  1.2578, -1.4297, -1.1406,  0.2734, -1.1094, -0.8125,  0.4492, -0.2256,  0.4473, -0.3711,  1.3125,  0.6523,  0.2178,  0.9375, -0.7773,  1.0078,  0.1245, -0.4531,  1.1016,  1.3828,  0.7812,  0.2490,  0.6836,  0.8086, -0.4297, -1.3906,
        -0.1699, -0.2969,  0.3379, -1.0625, -2.2812, -0.6875,  1.3125,  0.0242, -1.7422, -0.9141, -0.4453,  1.8047,  0.0496,  0.5273,  0.9414,  0.8398,  0.8789, -0.2100, -0.2559, -1.3438, -0.2070, -0.6992, -2.3906,  0.1709, -1.2734,  0.0913,  0.0559, -0.1084, -1.0781,  0.1777, -0.1670, -0.0211],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.8047, -1.4375, -1.4453,  0.2168,  0.3516, -0.1367, -0.1396,  1.9531, -0.4785, -1.4844,  0.0437,  0.1250,  1.6328, -0.4531],
        [ 0.0000,  1.6953,  0.2275,  0.8984,  1.8047,  1.9766,  0.5352,  1.7734,  1.0781,  0.6992, -0.2734,  1.0391,  1.3047,  0.1416, -0.5273],
        [ 0.0000,  3.6719,  1.3281,  1.1562,  4.2812,  3.4375,  2.6719,  3.2500,  3.2969,  2.2812,  0.8945,  1.9844,  2.6562,  2.5312,  1.0781],
        [ 0.0000, -2.7969, -4.6562, -4.7188, -2.2344, -2.0781, -4.0312, -3.2344, -0.1494, -2.3594, -4.5312, -3.2969, -2.9375, -0.6953, -3.0312],
        [ 0.0000,  1.1172, -1.4922, -1.7656,  0.6602,  0.2734,  0.5234, -1.3281,  2.0938, -0.7812, -1.4297,  0.3262, -1.2188,  1.0469, -0.5352],
        [ 0.0000, -0.5820, -3.5000, -3.2031, -0.8203, -0.7188, -0.6055, -1.8203,  2.3906, -1.3438, -2.0156, -0.8320, -1.0234,  1.4453, -1.7578],
        [ 0.0000, -1.1719, -4.8750, -5.2188, -0.1426, -2.0312, -2.1562, -1.4844,  4.8750,  0.1904, -1.7344, -0.9727, -0.0393,  4.8750, -2.1094],
        [ 0.0000,  0.5625, -3.1562, -3.9062,  0.4199,  0.8164, -0.0967, -0.8203,  3.2969,  2.8750,  0.6797, -0.2695,  1.2188,  3.5000,  1.1250],
        [ 0.0000,  2.7812,  1.1797,  0.6758,  1.0078,  2.5781,  1.7812,  3.2656,  2.2656,  3.1406,  3.2656,  1.5000,  3.0625,  2.6250,  1.5938],
        [ 0.0000,  0.5352, -1.6250, -2.2812, -0.9180, -0.3164,  0.5000,  0.7812,  3.1250,  2.9062,  2.3281,  1.2656,  2.2188,  3.5625,  0.5312],
        [ 0.0000,  0.6719, -0.9727, -0.6289,  0.0669,  0.7969, -1.3125,  1.6484,  2.1875,  0.8359,  0.2109, -0.2490,  2.0156,  2.2031, -0.8672],
        [ 0.0000, -1.1875, -4.1562, -4.4688, -2.2969, -2.5312, -3.7969, -2.4375,  1.9062, -1.0469, -2.2656, -1.9297, -1.3516,  2.2969, -2.6406],
        [ 0.0000, -0.0938, -3.7656, -4.1562, -1.4297, -0.3652, -2.0156, -1.2656,  2.4062,  1.6562, -0.0645, -0.8125,  0.6367,  3.2031, -0.1455],
        [ 0.0000,  0.1011, -1.2266, -1.2969,  0.4336,  0.8516, -0.5859,  1.4766,  1.3125,  1.7578,  0.0918,  0.5039,  2.2812,  1.8750,  0.1562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1969],
        [0.1323],
        [0.0401],
        [0.1532],
        [0.0359],
        [0.0577],
        [0.0575],
        [0.0387],
        [0.0335],
        [0.0541],
        [0.0736],
        [0.0803],
        [0.0238],
        [0.0322]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1406 a:0.1670,:0.1641 white:0.0786atoes:0.0483,:0.2129 a:0.0703iced:0.2061)
iced
------
		( a:0.1670,:0.1641 white:0.0786atoes:0.0483,:0.2129 a:0.0703iced:0.2061 with:0.1133)
 with a white, white, white, white, white, white, white
@ 2050 train 4.5528 , allloss: 4.5544, dt: 1254.91ms, fracRes: 0.2777, norm(attn): 0.3672, norm(output): 1.4531, norm(x): 1.1896, norm(y): 1.0099, norm:1.0583, tok/sec: 104447.41, flops:81.34, batch-reuse:1
@ 2051 train 4.6315 , allloss: 4.6324, dt: 916.51ms, fracRes: 0.2792, norm(attn): 0.3633, norm(output): 1.4844, norm(x): 1.1996, norm(y): 1.0100, norm:0.9966, tok/sec: 143012.43, flops:111.38, batch-reuse:1
@ 2052 train 4.5918 , allloss: 4.5929, dt: 914.99ms, fracRes: 0.2777, norm(attn): 0.3691, norm(output): 1.4688, norm(x): 1.2007, norm(y): 1.0098, norm:1.0437, tok/sec: 143249.25, flops:111.56, batch-reuse:1
@ 2053 train 4.6019 , allloss: 4.6037, dt: 890.96ms, fracRes: 0.2785, norm(attn): 0.3652, norm(output): 1.4922, norm(x): 1.2032, norm(y): 1.0099, norm:0.8687, tok/sec: 147112.95, flops:114.57, batch-reuse:1
@ 2054 train 4.5605 , allloss: 4.5625, dt: 887.91ms, fracRes: 0.2780, norm(attn): 0.3652, norm(output): 1.4922, norm(x): 1.1964, norm(y): 1.0100, norm:0.7571, tok/sec: 147619.30, flops:114.97, batch-reuse:1
@ 2055 train 4.5891 , allloss: 4.5908, dt: 912.49ms, fracRes: 0.2784, norm(attn): 0.3633, norm(output): 1.4844, norm(x): 1.1953, norm(y): 1.0100, norm:0.8141, tok/sec: 143642.36, flops:111.87, batch-reuse:1
@ 2056 train 4.5849 , allloss: 4.5866, dt: 909.83ms, fracRes: 0.2789, norm(attn): 0.3672, norm(output): 1.4844, norm(x): 1.2052, norm(y): 1.0100, norm:0.8264, tok/sec: 144062.86, flops:112.20, batch-reuse:1
@ 2057 train 4.6850 , allloss: 4.6859, dt: 918.36ms, fracRes: 0.2792, norm(attn): 0.3633, norm(output): 1.4922, norm(x): 1.1955, norm(y): 1.0099, norm:0.9176, tok/sec: 142723.91, flops:111.15, batch-reuse:1
@ 2058 train 4.5277 , allloss: 4.5288, dt: 902.11ms, fracRes: 0.2806, norm(attn): 0.3613, norm(output): 1.5000, norm(x): 1.2142, norm(y): 1.0100, norm:1.1376, tok/sec: 145294.37, flops:113.16, batch-reuse:1
@ 2059 train 4.5430 , allloss: 4.5449, dt: 911.78ms, fracRes: 0.2788, norm(attn): 0.3633, norm(output): 1.4922, norm(x): 1.2012, norm(y): 1.0100, norm:1.0761, tok/sec: 143754.14, flops:111.96, batch-reuse:1
@ 2060 train 4.5797 , allloss: 4.5804, dt: 895.20ms, fracRes: 0.2750, norm(attn): 0.3652, norm(output): 1.4609, norm(x): 1.1872, norm(y): 1.0096, norm:0.9163, tok/sec: 146416.56, flops:114.03, batch-reuse:1
@ 2061 train 4.5836 , allloss: 4.5919, dt: 909.36ms, fracRes: 0.2784, norm(attn): 0.3594, norm(output): 1.4766, norm(x): 1.1915, norm(y): 1.0097, norm:0.9054, tok/sec: 144136.77, flops:112.25, batch-reuse:1
@ 2062 train 4.5249 , allloss: 4.5309, dt: 888.71ms, fracRes: 0.2787, norm(attn): 0.3652, norm(output): 1.4922, norm(x): 1.1953, norm(y): 1.0097, norm:0.8183, tok/sec: 147485.84, flops:114.86, batch-reuse:1
@ 2063 train 4.6591 , allloss: 4.6594, dt: 896.51ms, fracRes: 0.2784, norm(attn): 0.3633, norm(output): 1.4766, norm(x): 1.2019, norm(y): 1.0097, norm:0.7671, tok/sec: 146202.75, flops:113.86, batch-reuse:1
@ 2064 train 4.5605 , allloss: 4.5613, dt: 889.38ms, fracRes: 0.2780, norm(attn): 0.3633, norm(output): 1.4609, norm(x): 1.1890, norm(y): 1.0097, norm:0.7229, tok/sec: 147373.95, flops:114.78, batch-reuse:1
@ 2065 train 5.3627 , allloss: 5.3633, dt: 900.46ms, fracRes: 0.2796, norm(attn): 0.3594, norm(output): 1.5000, norm(x): 1.2023, norm(y): 1.0097, norm:1.2975, tok/sec: 145561.12, flops:113.36, batch-reuse:1
@ 2066 train 4.7374 , allloss: 4.7411, dt: 899.95ms, fracRes: 0.2796, norm(attn): 0.3691, norm(output): 1.5000, norm(x): 1.2172, norm(y): 1.0097, norm:2.1790, tok/sec: 145643.95, flops:113.43, batch-reuse:1
@ 2067 train 4.6117 , allloss: 4.6123, dt: 896.16ms, fracRes: 0.2792, norm(attn): 0.3691, norm(output): 1.5078, norm(x): 1.2296, norm(y): 1.0096, norm:1.1472, tok/sec: 146259.93, flops:113.91, batch-reuse:1
@ 2068 train 4.6597 , allloss: 4.6606, dt: 901.81ms, fracRes: 0.2792, norm(attn): 0.3672, norm(output): 1.5078, norm(x): 1.2280, norm(y): 1.0095, norm:0.9284, tok/sec: 145343.84, flops:113.19, batch-reuse:1
@ 2069 train 4.6236 , allloss: 4.6255, dt: 894.57ms, fracRes: 0.2804, norm(attn): 0.3691, norm(output): 1.5000, norm(x): 1.2335, norm(y): 1.0097, norm:1.0863, tok/sec: 146519.58, flops:114.11, batch-reuse:1
@ 2070 train 4.6933 , allloss: 4.6947, dt: 912.51ms, fracRes: 0.2804, norm(attn): 0.3711, norm(output): 1.5078, norm(x): 1.2239, norm(y): 1.0097, norm:1.0195, tok/sec: 143638.69, flops:111.87, batch-reuse:1
@ 2071 train 4.6479 , allloss: 4.6488, dt: 903.42ms, fracRes: 0.2793, norm(attn): 0.3652, norm(output): 1.5000, norm(x): 1.2128, norm(y): 1.0097, norm:0.8434, tok/sec: 145084.20, flops:112.99, batch-reuse:1
@ 2072 train 4.6196 , allloss: 4.6207, dt: 906.33ms, fracRes: 0.2780, norm(attn): 0.3691, norm(output): 1.4844, norm(x): 1.2013, norm(y): 1.0097, norm:0.9654, tok/sec: 144618.62, flops:112.63, batch-reuse:1
@ 2073 train 4.5812 , allloss: 4.5819, dt: 898.03ms, fracRes: 0.2776, norm(attn): 0.3633, norm(output): 1.4922, norm(x): 1.2040, norm(y): 1.0097, norm:0.8766, tok/sec: 145955.80, flops:113.67, batch-reuse:1
@ 2074 train 4.6153 , allloss: 4.6162, dt: 888.77ms, fracRes: 0.2779, norm(attn): 0.3633, norm(output): 1.4844, norm(x): 1.2023, norm(y): 1.0095, norm:0.7816, tok/sec: 147475.83, flops:114.85, batch-reuse:1
@ 2075 train 4.5500 , allloss: 4.5506, dt: 901.26ms, fracRes: 0.2764, norm(attn): 0.3672, norm(output): 1.5000, norm(x): 1.2037, norm(y): 1.0095, norm:0.8613, tok/sec: 145431.47, flops:113.26, batch-reuse:1
@ 2076 train 4.5174 , allloss: 4.5184, dt: 885.48ms, fracRes: 0.2772, norm(attn): 0.3633, norm(output): 1.4922, norm(x): 1.2076, norm(y): 1.0096, norm:0.8359, tok/sec: 148023.01, flops:115.28, batch-reuse:1
@ 2077 train 4.6099 , allloss: 4.6105, dt: 900.72ms, fracRes: 0.2754, norm(attn): 0.3652, norm(output): 1.4922, norm(x): 1.2044, norm(y): 1.0094, norm:0.8911, tok/sec: 145519.62, flops:113.33, batch-reuse:1
@ 2078 train 4.8325 , allloss: 4.8332, dt: 897.67ms, fracRes: 0.2764, norm(attn): 0.3691, norm(output): 1.4922, norm(x): 1.2071, norm(y): 1.0094, norm:1.1462, tok/sec: 146014.11, flops:113.72, batch-reuse:1
@ 2079 train 4.7052 , allloss: 4.7057, dt: 888.03ms, fracRes: 0.2762, norm(attn): 0.3652, norm(output): 1.5000, norm(x): 1.2186, norm(y): 1.0094, norm:1.6137, tok/sec: 147598.93, flops:114.95, batch-reuse:1
@ 2080 train 4.6415 , allloss: 4.6419, dt: 893.10ms, fracRes: 0.2765, norm(attn): 0.3750, norm(output): 1.5000, norm(x): 1.2281, norm(y): 1.0093, norm:1.4150, tok/sec: 146761.54, flops:114.30, batch-reuse:1
@ 2081 train 4.6554 , allloss: 4.6560, dt: 905.03ms, fracRes: 0.2759, norm(attn): 0.3730, norm(output): 1.5000, norm(x): 1.2285, norm(y): 1.0093, norm:0.8829, tok/sec: 144826.33, flops:112.79, batch-reuse:1
@ 2082 train 4.6228 , allloss: 4.6232, dt: 895.28ms, fracRes: 0.2770, norm(attn): 0.3691, norm(output): 1.5078, norm(x): 1.2265, norm(y): 1.0095, norm:0.9674, tok/sec: 146403.69, flops:114.02, batch-reuse:1
@ 2083 train 4.4989 , allloss: 4.4999, dt: 902.45ms, fracRes: 0.2778, norm(attn): 0.3711, norm(output): 1.5156, norm(x): 1.2415, norm(y): 1.0095, norm:0.8538, tok/sec: 145239.59, flops:113.11, batch-reuse:1
@ 2084 train 4.7691 , allloss: 4.7696, dt: 886.33ms, fracRes: 0.2763, norm(attn): 0.3672, norm(output): 1.5156, norm(x): 1.2272, norm(y): 1.0095, norm:1.1660, tok/sec: 147881.57, flops:115.17, batch-reuse:1
@ 2085 train 4.6308 , allloss: 4.6313, dt: 890.46ms, fracRes: 0.2763, norm(attn): 0.3711, norm(output): 1.5078, norm(x): 1.2264, norm(y): 1.0093, norm:1.3886, tok/sec: 147195.32, flops:114.64, batch-reuse:1
@ 2086 train 4.5324 , allloss: 4.5331, dt: 886.23ms, fracRes: 0.2779, norm(attn): 0.3711, norm(output): 1.5078, norm(x): 1.2326, norm(y): 1.0093, norm:1.0228, tok/sec: 147898.92, flops:115.18, batch-reuse:1
@ 2087 train 4.5319 , allloss: 4.5328, dt: 898.28ms, fracRes: 0.2787, norm(attn): 0.3652, norm(output): 1.5000, norm(x): 1.2178, norm(y): 1.0093, norm:0.7900, tok/sec: 145913.81, flops:113.64, batch-reuse:1
@ 2088 train 4.6764 , allloss: 4.6775, dt: 893.21ms, fracRes: 0.2801, norm(attn): 0.3633, norm(output): 1.4922, norm(x): 1.2154, norm(y): 1.0093, norm:1.0041, tok/sec: 146742.11, flops:114.28, batch-reuse:1
@ 2089 train 4.5892 , allloss: 4.5903, dt: 900.88ms, fracRes: 0.2801, norm(attn): 0.3691, norm(output): 1.5078, norm(x): 1.2257, norm(y): 1.0093, norm:0.9569, tok/sec: 145493.20, flops:113.31, batch-reuse:1
@ 2090 train 4.5727 , allloss: 4.5732, dt: 917.66ms, fracRes: 0.2808, norm(attn): 0.3691, norm(output): 1.5234, norm(x): 1.2348, norm(y): 1.0094, norm:0.8178, tok/sec: 142832.23, flops:111.24, batch-reuse:1
@ 2091 train 4.5871 , allloss: 4.5876, dt: 915.85ms, fracRes: 0.2803, norm(attn): 0.3672, norm(output): 1.5078, norm(x): 1.2238, norm(y): 1.0093, norm:0.8480, tok/sec: 143114.78, flops:111.46, batch-reuse:1
@ 2092 train 4.5568 , allloss: 4.5572, dt: 907.59ms, fracRes: 0.2799, norm(attn): 0.3672, norm(output): 1.5156, norm(x): 1.2299, norm(y): 1.0093, norm:0.8055, tok/sec: 144417.50, flops:112.47, batch-reuse:1
@ 2093 train 4.5675 , allloss: 4.5680, dt: 899.01ms, fracRes: 0.2775, norm(attn): 0.3672, norm(output): 1.5156, norm(x): 1.2294, norm(y): 1.0093, norm:0.7803, tok/sec: 145795.17, flops:113.55, batch-reuse:1
@ 2094 train 4.5716 , allloss: 4.5799, dt: 894.72ms, fracRes: 0.2764, norm(attn): 0.3672, norm(output): 1.5156, norm(x): 1.2301, norm(y): 1.0092, norm:13.0373, tok/sec: 146495.21, flops:114.09, batch-reuse:1
@ 2095 train 4.5806 , allloss: 4.6771, dt: 906.53ms, fracRes: 0.2641, norm(attn): 0.3828, norm(output): 1.5000, norm(x): 1.2086, norm(y): 1.0091, norm:2.9618, tok/sec: 144587.12, flops:112.60, batch-reuse:1
@ 2096 train 4.7466 , allloss: 4.8040, dt: 892.78ms, fracRes: 0.2715, norm(attn): 0.3730, norm(output): 1.4922, norm(x): 1.2057, norm(y): 1.0092, norm:2.9377, tok/sec: 146812.92, flops:114.34, batch-reuse:1
@ 2097 train 4.6527 , allloss: 4.6543, dt: 903.46ms, fracRes: 0.2835, norm(attn): 0.3555, norm(output): 1.5000, norm(x): 1.2133, norm(y): 1.0094, norm:1.0496, tok/sec: 145077.96, flops:112.99, batch-reuse:1
@ 2098 train 4.5256 , allloss: 4.5272, dt: 905.77ms, fracRes: 0.2859, norm(attn): 0.3555, norm(output): 1.5234, norm(x): 1.2345, norm(y): 1.0097, norm:1.2464, tok/sec: 144707.08, flops:112.70, batch-reuse:1
@ 2099 train 4.6072 , allloss: 4.6093, dt: 911.94ms, fracRes: 0.2874, norm(attn): 0.3594, norm(output): 1.5156, norm(x): 1.2359, norm(y): 1.0099, norm:0.8866, tok/sec: 143728.85, flops:111.94, batch-reuse:1
@ 2100 train 4.5803 , allloss: 4.5819, dt: 908.73ms, fracRes: 0.2894, norm(attn): 0.3516, norm(output): 1.5078, norm(x): 1.2282, norm(y): 1.0100, norm:0.9854, tok/sec: 144236.38, flops:112.33, batch-reuse:1
@ 2101 train 4.5704 , allloss: 4.5729, dt: 909.52ms, fracRes: 0.2909, norm(attn): 0.3516, norm(output): 1.5391, norm(x): 1.2316, norm(y): 1.0102, norm:0.9901, tok/sec: 144111.38, flops:112.23, batch-reuse:1
@ 2102 train 4.5306 , allloss: 4.5326, dt: 905.33ms, fracRes: 0.2912, norm(attn): 0.3535, norm(output): 1.5469, norm(x): 1.2550, norm(y): 1.0101, norm:1.0881, tok/sec: 144778.08, flops:112.75, batch-reuse:1
@ 2103 train 4.5566 , allloss: 4.5578, dt: 902.44ms, fracRes: 0.2915, norm(attn): 0.3535, norm(output): 1.5469, norm(x): 1.2585, norm(y): 1.0101, norm:0.8170, tok/sec: 145241.59, flops:113.11, batch-reuse:1
@ 2104 train 4.5657 , allloss: 4.5665, dt: 907.75ms, fracRes: 0.2951, norm(attn): 0.3477, norm(output): 1.5625, norm(x): 1.2686, norm(y): 1.0104, norm:1.0031, tok/sec: 144392.50, flops:112.45, batch-reuse:1
@ 2105 train 4.5448 , allloss: 4.5479, dt: 907.57ms, fracRes: 0.2906, norm(attn): 0.3594, norm(output): 1.5547, norm(x): 1.2841, norm(y): 1.0105, norm:1.7073, tok/sec: 144420.68, flops:112.48, batch-reuse:1
@ 2106 train 4.5644 , allloss: 4.5649, dt: 904.52ms, fracRes: 0.2873, norm(attn): 0.3633, norm(output): 1.5938, norm(x): 1.3048, norm(y): 1.0107, norm:1.0836, tok/sec: 144907.26, flops:112.85, batch-reuse:1
@ 2107 train 4.5895 , allloss: 4.5902, dt: 912.02ms, fracRes: 0.2858, norm(attn): 0.3652, norm(output): 1.5469, norm(x): 1.2962, norm(y): 1.0107, norm:0.9627, tok/sec: 143716.38, flops:111.93, batch-reuse:1
@ 2108 train 4.6984 , allloss: 4.6990, dt: 897.29ms, fracRes: 0.2872, norm(attn): 0.3633, norm(output): 1.5625, norm(x): 1.3103, norm(y): 1.0107, norm:1.1346, tok/sec: 146074.82, flops:113.76, batch-reuse:1
@ 2109 train 4.5448 , allloss: 4.5453, dt: 893.54ms, fracRes: 0.2889, norm(attn): 0.3574, norm(output): 1.5312, norm(x): 1.2976, norm(y): 1.0108, norm:1.1345, tok/sec: 146687.80, flops:114.24, batch-reuse:1
@ 2110 train 4.5325 , allloss: 4.5331, dt: 911.12ms, fracRes: 0.2866, norm(attn): 0.3652, norm(output): 1.5781, norm(x): 1.3080, norm(y): 1.0107, norm:0.9584, tok/sec: 143857.52, flops:112.04, batch-reuse:1
@ 2111 train 4.5128 , allloss: 4.5135, dt: 909.34ms, fracRes: 0.2875, norm(attn): 0.3652, norm(output): 1.5625, norm(x): 1.2956, norm(y): 1.0108, norm:0.9839, tok/sec: 144139.15, flops:112.26, batch-reuse:1
@ 2112 train 4.5404 , allloss: 4.5413, dt: 909.68ms, fracRes: 0.2900, norm(attn): 0.3516, norm(output): 1.5078, norm(x): 1.2686, norm(y): 1.0109, norm:0.8338, tok/sec: 144086.38, flops:112.21, batch-reuse:1
@ 2113 train 4.5363 , allloss: 4.5369, dt: 898.79ms, fracRes: 0.2912, norm(attn): 0.3574, norm(output): 1.5000, norm(x): 1.2764, norm(y): 1.0109, norm:0.8417, tok/sec: 145830.94, flops:113.57, batch-reuse:1
@ 2114 train 4.5623 , allloss: 4.5627, dt: 905.67ms, fracRes: 0.2931, norm(attn): 0.3496, norm(output): 1.5234, norm(x): 1.2832, norm(y): 1.0111, norm:0.8645, tok/sec: 144723.54, flops:112.71, batch-reuse:1
@ 2115 train 4.5736 , allloss: 4.5747, dt: 903.86ms, fracRes: 0.2925, norm(attn): 0.3555, norm(output): 1.5391, norm(x): 1.2875, norm(y): 1.0110, norm:0.8861, tok/sec: 145013.94, flops:112.94, batch-reuse:1
@ 2116 train 4.5913 , allloss: 4.5918, dt: 900.69ms, fracRes: 0.2929, norm(attn): 0.3477, norm(output): 1.5234, norm(x): 1.2785, norm(y): 1.0109, norm:0.8624, tok/sec: 145524.67, flops:113.34, batch-reuse:1
@ 2117 train 4.5227 , allloss: 4.5231, dt: 895.58ms, fracRes: 0.2920, norm(attn): 0.3496, norm(output): 1.5234, norm(x): 1.2738, norm(y): 1.0109, norm:0.8585, tok/sec: 146353.88, flops:113.98, batch-reuse:1
@ 2118 train 4.4560 , allloss: 4.4564, dt: 881.84ms, fracRes: 0.2908, norm(attn): 0.3535, norm(output): 1.5469, norm(x): 1.2837, norm(y): 1.0109, norm:0.8204, tok/sec: 148635.44, flops:115.76, batch-reuse:1
@ 2119 train 4.6014 , allloss: 4.6069, dt: 898.17ms, fracRes: 0.2890, norm(attn): 0.3535, norm(output): 1.5469, norm(x): 1.2885, norm(y): 1.0108, norm:0.7365, tok/sec: 145932.17, flops:113.65, batch-reuse:1
@ 2120 train 4.5282 , allloss: 4.5290, dt: 903.29ms, fracRes: 0.2899, norm(attn): 0.3496, norm(output): 1.5469, norm(x): 1.2903, norm(y): 1.0108, norm:0.7724, tok/sec: 145105.03, flops:113.01, batch-reuse:1
@ 2121 train 4.5191 , allloss: 4.5199, dt: 905.94ms, fracRes: 0.2892, norm(attn): 0.3613, norm(output): 1.5469, norm(x): 1.2986, norm(y): 1.0108, norm:1.0067, tok/sec: 144680.69, flops:112.68, batch-reuse:1
@ 2122 train 4.5058 , allloss: 4.5062, dt: 896.92ms, fracRes: 0.2901, norm(attn): 0.3633, norm(output): 1.5547, norm(x): 1.3092, norm(y): 1.0108, norm:0.8804, tok/sec: 146135.86, flops:113.81, batch-reuse:1
@ 2123 train 4.5661 , allloss: 4.5668, dt: 913.36ms, fracRes: 0.2909, norm(attn): 0.3555, norm(output): 1.5703, norm(x): 1.3056, norm(y): 1.0110, norm:0.7648, tok/sec: 143504.53, flops:111.76, batch-reuse:1
@ 2124 train 4.4601 , allloss: 4.4619, dt: 924.52ms, fracRes: 0.2891, norm(attn): 0.3594, norm(output): 1.5469, norm(x): 1.3017, norm(y): 1.0108, norm:0.7717, tok/sec: 141772.37, flops:110.41, batch-reuse:1
@ 2125 train 4.5593 , allloss: 4.5599, dt: 919.49ms, fracRes: 0.2877, norm(attn): 0.3633, norm(output): 1.5312, norm(x): 1.2869, norm(y): 1.0106, norm:0.7815, tok/sec: 142548.68, flops:111.02, batch-reuse:1
@ 2126 train 4.5340 , allloss: 4.5350, dt: 901.38ms, fracRes: 0.2870, norm(attn): 0.3594, norm(output): 1.5156, norm(x): 1.2834, norm(y): 1.0106, norm:0.8232, tok/sec: 145413.39, flops:113.25, batch-reuse:1
@ 2127 train 4.5857 , allloss: 4.5862, dt: 894.12ms, fracRes: 0.2882, norm(attn): 0.3555, norm(output): 1.5469, norm(x): 1.2941, norm(y): 1.0108, norm:1.1074, tok/sec: 146593.03, flops:114.17, batch-reuse:1
@ 2128 train 4.4559 , allloss: 4.4562, dt: 903.22ms, fracRes: 0.2890, norm(attn): 0.3516, norm(output): 1.5859, norm(x): 1.2941, norm(y): 1.0108, norm:0.9920, tok/sec: 145115.61, flops:113.02, batch-reuse:1
@ 2129 train 4.5532 , allloss: 4.5542, dt: 881.37ms, fracRes: 0.2887, norm(attn): 0.3574, norm(output): 1.5469, norm(x): 1.2891, norm(y): 1.0106, norm:0.7930, tok/sec: 148714.41, flops:115.82, batch-reuse:1
@ 2130 train 4.4411 , allloss: 4.4413, dt: 903.94ms, fracRes: 0.2903, norm(attn): 0.3496, norm(output): 1.5312, norm(x): 1.2879, norm(y): 1.0107, norm:0.8675, tok/sec: 145001.47, flops:112.93, batch-reuse:1
@ 2131 train 4.5239 , allloss: 4.5242, dt: 907.16ms, fracRes: 0.2902, norm(attn): 0.3496, norm(output): 1.5625, norm(x): 1.2899, norm(y): 1.0105, norm:0.8370, tok/sec: 144486.23, flops:112.53, batch-reuse:1
@ 2132 train 4.5262 , allloss: 4.5265, dt: 889.91ms, fracRes: 0.2906, norm(attn): 0.3555, norm(output): 1.6016, norm(x): 1.3159, norm(y): 1.0107, norm:0.9251, tok/sec: 147287.28, flops:114.71, batch-reuse:1
@ 2133 train 4.5162 , allloss: 4.5164, dt: 900.93ms, fracRes: 0.2908, norm(attn): 0.3516, norm(output): 1.6172, norm(x): 1.3151, norm(y): 1.0106, norm:0.9468, tok/sec: 145485.54, flops:113.30, batch-reuse:1
@ 2134 train 4.4784 , allloss: 4.4787, dt: 892.52ms, fracRes: 0.2909, norm(attn): 0.3516, norm(output): 1.6016, norm(x): 1.3177, norm(y): 1.0106, norm:0.9089, tok/sec: 146856.18, flops:114.37, batch-reuse:1
@ 2135 train 4.5691 , allloss: 4.5700, dt: 900.80ms, fracRes: 0.2905, norm(attn): 0.3516, norm(output): 1.5938, norm(x): 1.3154, norm(y): 1.0105, norm:0.8046, tok/sec: 145506.30, flops:113.32, batch-reuse:1
@ 2136 train 4.4781 , allloss: 4.4803, dt: 917.11ms, fracRes: 0.2915, norm(attn): 0.3516, norm(output): 1.5859, norm(x): 1.3126, norm(y): 1.0105, norm:0.8360, tok/sec: 142918.00, flops:111.31, batch-reuse:1
@ 2137 train 4.4393 , allloss: 4.4395, dt: 921.30ms, fracRes: 0.2904, norm(attn): 0.3535, norm(output): 1.6016, norm(x): 1.3168, norm(y): 1.0104, norm:0.8942, tok/sec: 142268.69, flops:110.80, batch-reuse:1
@ 2138 train 4.4824 , allloss: 4.4826, dt: 916.84ms, fracRes: 0.2908, norm(attn): 0.3496, norm(output): 1.6094, norm(x): 1.3170, norm(y): 1.0104, norm:0.8938, tok/sec: 142959.92, flops:111.34, batch-reuse:1
@ 2139 train 4.4996 , allloss: 4.4998, dt: 896.87ms, fracRes: 0.2908, norm(attn): 0.3477, norm(output): 1.5938, norm(x): 1.3132, norm(y): 1.0104, norm:0.8514, tok/sec: 146143.67, flops:113.82, batch-reuse:1
@ 2140 train 4.4928 , allloss: 4.4933, dt: 898.66ms, fracRes: 0.2901, norm(attn): 0.3535, norm(output): 1.6094, norm(x): 1.3224, norm(y): 1.0103, norm:0.7902, tok/sec: 145852.65, flops:113.59, batch-reuse:1
@ 2141 train 4.4138 , allloss: 4.4150, dt: 900.69ms, fracRes: 0.2898, norm(attn): 0.3535, norm(output): 1.6172, norm(x): 1.3240, norm(y): 1.0103, norm:3.2607, tok/sec: 145523.94, flops:113.33, batch-reuse:1
@ 2142 train 4.4584 , allloss: 4.4592, dt: 897.94ms, fracRes: 0.2916, norm(attn): 0.3516, norm(output): 1.6172, norm(x): 1.3304, norm(y): 1.0104, norm:1.0451, tok/sec: 145970.30, flops:113.68, batch-reuse:1
@ 2143 train 4.5026 , allloss: 4.5034, dt: 919.85ms, fracRes: 0.2908, norm(attn): 0.3535, norm(output): 1.6172, norm(x): 1.3334, norm(y): 1.0103, norm:0.8314, tok/sec: 142492.34, flops:110.97, batch-reuse:1
@ 2144 train 4.4829 , allloss: 4.4831, dt: 911.13ms, fracRes: 0.2899, norm(attn): 0.3516, norm(output): 1.6016, norm(x): 1.3260, norm(y): 1.0104, norm:0.8258, tok/sec: 143857.29, flops:112.04, batch-reuse:1
@ 2145 train 4.4356 , allloss: 4.4366, dt: 900.19ms, fracRes: 0.2907, norm(attn): 0.3535, norm(output): 1.6172, norm(x): 1.3354, norm(y): 1.0106, norm:0.8794, tok/sec: 145604.68, flops:113.40, batch-reuse:1
@ 2146 train 4.7405 , allloss: 4.7429, dt: 895.51ms, fracRes: 0.2901, norm(attn): 0.3535, norm(output): 1.6250, norm(x): 1.3493, norm(y): 1.0107, norm:1.4542, tok/sec: 146365.14, flops:113.99, batch-reuse:1
@ 2147 train 4.4603 , allloss: 4.4606, dt: 889.64ms, fracRes: 0.2897, norm(attn): 0.3516, norm(output): 1.6094, norm(x): 1.3268, norm(y): 1.0105, norm:0.9654, tok/sec: 147331.88, flops:114.74, batch-reuse:1
@ 2148 train 4.4997 , allloss: 4.5016, dt: 886.73ms, fracRes: 0.2892, norm(attn): 0.3535, norm(output): 1.5938, norm(x): 1.3290, norm(y): 1.0105, norm:1.0154, tok/sec: 147815.05, flops:115.12, batch-reuse:1
@ 2149 train 4.4994 , allloss: 4.5011, dt: 893.11ms, fracRes: 0.2884, norm(attn): 0.3633, norm(output): 1.6172, norm(x): 1.3463, norm(y): 1.0105, norm:0.9907, tok/sec: 146759.74, flops:114.30, batch-reuse:1
@ 2150 train 4.5150 , allloss: 4.5157, dt: 893.85ms, fracRes: 0.2892, norm(attn): 0.3633, norm(output): 1.6172, norm(x): 1.3564, norm(y): 1.0105, norm:1.0596, tok/sec: 146637.29, flops:114.20, batch-reuse:1
@ 2151 train 4.4620 , allloss: 4.4631, dt: 898.84ms, fracRes: 0.2887, norm(attn): 0.3633, norm(output): 1.5859, norm(x): 1.3436, norm(y): 1.0102, norm:0.8448, tok/sec: 145824.09, flops:113.57, batch-reuse:1
@ 2152 train 4.5486 , allloss: 4.5529, dt: 923.61ms, fracRes: 0.2876, norm(attn): 0.3691, norm(output): 1.6250, norm(x): 1.3664, norm(y): 1.0102, norm:0.9930, tok/sec: 141912.28, flops:110.52, batch-reuse:1
@ 2153 train 4.4752 , allloss: 4.4758, dt: 913.87ms, fracRes: 0.2899, norm(attn): 0.3711, norm(output): 1.6250, norm(x): 1.3715, norm(y): 1.0103, norm:0.9159, tok/sec: 143425.91, flops:111.70, batch-reuse:1
@ 2154 train 4.5356 , allloss: 4.5362, dt: 898.45ms, fracRes: 0.2907, norm(attn): 0.3691, norm(output): 1.6328, norm(x): 1.3720, norm(y): 1.0106, norm:0.9159, tok/sec: 145886.20, flops:113.62, batch-reuse:1
@ 2155 train 4.4786 , allloss: 4.4799, dt: 890.02ms, fracRes: 0.2907, norm(attn): 0.3652, norm(output): 1.6172, norm(x): 1.3550, norm(y): 1.0107, norm:0.7408, tok/sec: 147269.41, flops:114.69, batch-reuse:1
@ 2156 train 4.4874 , allloss: 4.4878, dt: 905.16ms, fracRes: 0.2899, norm(attn): 0.3633, norm(output): 1.5625, norm(x): 1.3322, norm(y): 1.0107, norm:0.8080, tok/sec: 144805.96, flops:112.78, batch-reuse:1
@ 2157 train 4.5119 , allloss: 4.5129, dt: 904.19ms, fracRes: 0.2908, norm(attn): 0.3633, norm(output): 1.6094, norm(x): 1.3360, norm(y): 1.0109, norm:0.8519, tok/sec: 144961.17, flops:112.90, batch-reuse:1
@ 2158 train 4.4996 , allloss: 4.5000, dt: 902.79ms, fracRes: 0.2901, norm(attn): 0.3574, norm(output): 1.6172, norm(x): 1.3391, norm(y): 1.0109, norm:0.8337, tok/sec: 145185.09, flops:113.07, batch-reuse:1
@ 2159 train 4.4454 , allloss: 4.4469, dt: 900.08ms, fracRes: 0.2899, norm(attn): 0.3555, norm(output): 1.6094, norm(x): 1.3436, norm(y): 1.0109, norm:0.8782, tok/sec: 145622.15, flops:113.41, batch-reuse:1
@ 2160 train 4.4099 , allloss: 4.4109, dt: 899.56ms, fracRes: 0.2904, norm(attn): 0.3574, norm(output): 1.6016, norm(x): 1.3531, norm(y): 1.0110, norm:1.0469, tok/sec: 145706.79, flops:113.48, batch-reuse:1
@ 2161 train 4.4274 , allloss: 4.4289, dt: 896.62ms, fracRes: 0.2897, norm(attn): 0.3711, norm(output): 1.6250, norm(x): 1.3619, norm(y): 1.0112, norm:1.1378, tok/sec: 146184.94, flops:113.85, batch-reuse:1
@ 2162 train 4.4221 , allloss: 4.4244, dt: 894.91ms, fracRes: 0.2902, norm(attn): 0.3633, norm(output): 1.6250, norm(x): 1.3634, norm(y): 1.0110, norm:0.9002, tok/sec: 146464.23, flops:114.07, batch-reuse:1
@ 2163 train 4.5173 , allloss: 4.5178, dt: 905.31ms, fracRes: 0.2906, norm(attn): 0.3594, norm(output): 1.6094, norm(x): 1.3563, norm(y): 1.0109, norm:1.0264, tok/sec: 144781.21, flops:112.76, batch-reuse:1
@ 2164 train 4.4068 , allloss: 4.4079, dt: 887.72ms, fracRes: 0.2904, norm(attn): 0.3672, norm(output): 1.6094, norm(x): 1.3609, norm(y): 1.0109, norm:0.9816, tok/sec: 147650.90, flops:114.99, batch-reuse:1
@ 2165 train 4.3911 , allloss: 4.3971, dt: 898.19ms, fracRes: 0.2907, norm(attn): 0.3594, norm(output): 1.6250, norm(x): 1.3675, norm(y): 1.0109, norm:0.6979, tok/sec: 145929.69, flops:113.65, batch-reuse:1
@ 2166 train 4.4422 , allloss: 4.4438, dt: 890.75ms, fracRes: 0.2911, norm(attn): 0.3555, norm(output): 1.6328, norm(x): 1.3832, norm(y): 1.0108, norm:0.9017, tok/sec: 147147.13, flops:114.60, batch-reuse:1
@ 2167 train 4.4824 , allloss: 4.4830, dt: 900.39ms, fracRes: 0.2904, norm(attn): 0.3555, norm(output): 1.6406, norm(x): 1.3852, norm(y): 1.0107, norm:0.9046, tok/sec: 145572.26, flops:113.37, batch-reuse:1
@ 2168 train 4.4957 , allloss: 4.4961, dt: 907.64ms, fracRes: 0.2901, norm(attn): 0.3496, norm(output): 1.6250, norm(x): 1.3650, norm(y): 1.0108, norm:0.8089, tok/sec: 144409.76, flops:112.47, batch-reuse:1
@ 2169 train 4.4934 , allloss: 4.4939, dt: 914.78ms, fracRes: 0.2898, norm(attn): 0.3516, norm(output): 1.6250, norm(x): 1.3695, norm(y): 1.0106, norm:0.7237, tok/sec: 143282.14, flops:111.59, batch-reuse:1
@ 2170 train 4.5107 , allloss: 4.5111, dt: 912.04ms, fracRes: 0.2905, norm(attn): 0.3535, norm(output): 1.6250, norm(x): 1.3712, norm(y): 1.0106, norm:0.7913, tok/sec: 143713.07, flops:111.92, batch-reuse:1
@ 2171 train 4.5147 , allloss: 4.5155, dt: 904.57ms, fracRes: 0.2923, norm(attn): 0.3555, norm(output): 1.6641, norm(x): 1.3939, norm(y): 1.0108, norm:0.7904, tok/sec: 144899.62, flops:112.85, batch-reuse:1
@ 2172 train 4.5413 , allloss: 4.5416, dt: 914.17ms, fracRes: 0.2914, norm(attn): 0.3613, norm(output): 1.6562, norm(x): 1.3927, norm(y): 1.0105, norm:0.7363, tok/sec: 143377.99, flops:111.66, batch-reuse:1
@ 2173 train 4.4421 , allloss: 4.4428, dt: 918.30ms, fracRes: 0.2905, norm(attn): 0.3633, norm(output): 1.6719, norm(x): 1.4001, norm(y): 1.0105, norm:0.9148, tok/sec: 142733.36, flops:111.16, batch-reuse:1
@ 2174 train 4.4804 , allloss: 4.4812, dt: 918.61ms, fracRes: 0.2918, norm(attn): 0.3594, norm(output): 1.7188, norm(x): 1.4066, norm(y): 1.0107, norm:0.9637, tok/sec: 142684.50, flops:111.12, batch-reuse:1
@ 2175 train 4.4383 , allloss: 4.4389, dt: 918.57ms, fracRes: 0.2912, norm(attn): 0.3633, norm(output): 1.7188, norm(x): 1.4033, norm(y): 1.0107, norm:0.9289, tok/sec: 142691.50, flops:111.13, batch-reuse:1
@ 2176 train 4.4523 , allloss: 4.4529, dt: 916.00ms, fracRes: 0.2908, norm(attn): 0.3613, norm(output): 1.6641, norm(x): 1.3914, norm(y): 1.0106, norm:0.7759, tok/sec: 143091.65, flops:111.44, batch-reuse:1
@ 2177 train 4.4596 , allloss: 4.4603, dt: 891.59ms, fracRes: 0.2901, norm(attn): 0.3633, norm(output): 1.6719, norm(x): 1.3948, norm(y): 1.0105, norm:0.6836, tok/sec: 147008.51, flops:114.49, batch-reuse:1
@ 2178 train 4.4918 , allloss: 4.4923, dt: 898.36ms, fracRes: 0.2912, norm(attn): 0.3613, norm(output): 1.6797, norm(x): 1.4037, norm(y): 1.0106, norm:0.9011, tok/sec: 145901.03, flops:113.63, batch-reuse:1
@ 2179 train 4.4669 , allloss: 4.4678, dt: 897.43ms, fracRes: 0.2894, norm(attn): 0.3691, norm(output): 1.6719, norm(x): 1.4021, norm(y): 1.0104, norm:0.8974, tok/sec: 146052.47, flops:113.75, batch-reuse:1
@ 2180 train 4.4000 , allloss: 4.4005, dt: 897.52ms, fracRes: 0.2881, norm(attn): 0.3672, norm(output): 1.7031, norm(x): 1.4075, norm(y): 1.0103, norm:0.8393, tok/sec: 146037.84, flops:113.73, batch-reuse:1
@ 2181 train 4.3910 , allloss: 4.3921, dt: 919.47ms, fracRes: 0.2890, norm(attn): 0.3672, norm(output): 1.7109, norm(x): 1.4127, norm(y): 1.0103, norm:0.9462, tok/sec: 142551.23, flops:111.02, batch-reuse:1
@ 2182 train 4.4614 , allloss: 4.4621, dt: 915.49ms, fracRes: 0.2898, norm(attn): 0.3652, norm(output): 1.7188, norm(x): 1.4090, norm(y): 1.0103, norm:0.9008, tok/sec: 143172.10, flops:111.50, batch-reuse:1
@ 2183 train 4.2965 , allloss: 4.2969, dt: 884.43ms, fracRes: 0.2895, norm(attn): 0.3652, norm(output): 1.6875, norm(x): 1.4016, norm(y): 1.0102, norm:0.7863, tok/sec: 148199.14, flops:115.42, batch-reuse:1
@ 2184 train 4.2178 , allloss: 4.2186, dt: 892.37ms, fracRes: 0.2905, norm(attn): 0.3555, norm(output): 1.6797, norm(x): 1.3995, norm(y): 1.0103, norm:0.8705, tok/sec: 146881.02, flops:114.39, batch-reuse:1
@ 2185 train 4.4175 , allloss: 4.4179, dt: 912.07ms, fracRes: 0.2913, norm(attn): 0.3555, norm(output): 1.7109, norm(x): 1.4045, norm(y): 1.0103, norm:0.9173, tok/sec: 143708.49, flops:111.92, batch-reuse:1
@ 2186 train 4.3501 , allloss: 4.3504, dt: 915.24ms, fracRes: 0.2913, norm(attn): 0.3535, norm(output): 1.6562, norm(x): 1.3932, norm(y): 1.0102, norm:0.8352, tok/sec: 143209.81, flops:111.53, batch-reuse:1
@ 2187 train 4.3233 , allloss: 4.3237, dt: 910.23ms, fracRes: 0.2911, norm(attn): 0.3555, norm(output): 1.7188, norm(x): 1.4143, norm(y): 1.0102, norm:0.7493, tok/sec: 143998.74, flops:112.15, batch-reuse:1
@ 2188 train 4.3329 , allloss: 4.3334, dt: 890.10ms, fracRes: 0.2904, norm(attn): 0.3535, norm(output): 1.7344, norm(x): 1.4204, norm(y): 1.0103, norm:0.8610, tok/sec: 147255.80, flops:114.68, batch-reuse:1
@ 2189 train 4.3612 , allloss: 4.3620, dt: 907.30ms, fracRes: 0.2907, norm(attn): 0.3535, norm(output): 1.7266, norm(x): 1.4173, norm(y): 1.0102, norm:0.7764, tok/sec: 144463.41, flops:112.51, batch-reuse:1
@ 2190 train 4.2083 , allloss: 4.2084, dt: 910.27ms, fracRes: 0.2916, norm(attn): 0.3555, norm(output): 1.7188, norm(x): 1.4235, norm(y): 1.0103, norm:0.7871, tok/sec: 143992.26, flops:112.14, batch-reuse:1
@ 2191 train 4.3742 , allloss: 4.3745, dt: 908.11ms, fracRes: 0.2907, norm(attn): 0.3555, norm(output): 1.7422, norm(x): 1.4262, norm(y): 1.0102, norm:0.8739, tok/sec: 144335.63, flops:112.41, batch-reuse:1
@ 2192 train 4.3335 , allloss: 4.3337, dt: 921.89ms, fracRes: 0.2906, norm(attn): 0.3535, norm(output): 1.7422, norm(x): 1.4226, norm(y): 1.0102, norm:0.9955, tok/sec: 142177.19, flops:110.73, batch-reuse:1
@ 2193 train 4.2953 , allloss: 4.2959, dt: 919.43ms, fracRes: 0.2901, norm(attn): 0.3516, norm(output): 1.7344, norm(x): 1.4219, norm(y): 1.0101, norm:0.9543, tok/sec: 142557.92, flops:111.02, batch-reuse:1
@ 2194 train 4.4535 , allloss: 4.4557, dt: 925.29ms, fracRes: 0.2908, norm(attn): 0.3496, norm(output): 1.6875, norm(x): 1.4007, norm(y): 1.0099, norm:0.7933, tok/sec: 141655.36, flops:110.32, batch-reuse:1
@ 2195 train 4.3736 , allloss: 4.3738, dt: 920.15ms, fracRes: 0.2923, norm(attn): 0.3516, norm(output): 1.7266, norm(x): 1.4132, norm(y): 1.0101, norm:1.0314, tok/sec: 142446.19, flops:110.94, batch-reuse:1
@ 2196 train 4.4442 , allloss: 4.4443, dt: 920.50ms, fracRes: 0.2902, norm(attn): 0.3535, norm(output): 1.7422, norm(x): 1.4188, norm(y): 1.0100, norm:0.9691, tok/sec: 142392.02, flops:110.90, batch-reuse:1
@ 2197 train 4.2962 , allloss: 4.2966, dt: 924.10ms, fracRes: 0.2896, norm(attn): 0.3535, norm(output): 1.7188, norm(x): 1.4118, norm(y): 1.0100, norm:0.9441, tok/sec: 141836.93, flops:110.46, batch-reuse:1
@ 2198 train 4.3460 , allloss: 4.3465, dt: 892.13ms, fracRes: 0.2905, norm(attn): 0.3535, norm(output): 1.7266, norm(x): 1.4049, norm(y): 1.0099, norm:0.7982, tok/sec: 146919.56, flops:114.42, batch-reuse:1
@ 2199 train 4.4229 , allloss: 4.4233, dt: 896.20ms, fracRes: 0.2890, norm(attn): 0.3613, norm(output): 1.7266, norm(x): 1.4107, norm(y): 1.0099, norm:0.8092, tok/sec: 146253.66, flops:113.90, batch-reuse:1
@ 2200 train 4.3202 , allloss: 4.3205, dt: 906.55ms, fracRes: 0.2891, norm(attn): 0.3555, norm(output): 1.7188, norm(x): 1.4018, norm(y): 1.0099, norm:0.8313, tok/sec: 144583.93, flops:112.60, batch-reuse:1
@ 2201 train 4.3734 , allloss: 4.3737, dt: 904.89ms, fracRes: 0.2881, norm(attn): 0.3535, norm(output): 1.6641, norm(x): 1.3915, norm(y): 1.0098, norm:0.9341, tok/sec: 144848.99, flops:112.81, batch-reuse:1
@ 2202 train 4.4108 , allloss: 4.4110, dt: 929.90ms, fracRes: 0.2898, norm(attn): 0.3555, norm(output): 1.7188, norm(x): 1.4010, norm(y): 1.0098, norm:0.7500, tok/sec: 140952.40, flops:109.77, batch-reuse:1
@ 2203 train 4.3648 , allloss: 4.3650, dt: 915.90ms, fracRes: 0.2899, norm(attn): 0.3594, norm(output): 1.7344, norm(x): 1.4128, norm(y): 1.0099, norm:0.8781, tok/sec: 143107.74, flops:111.45, batch-reuse:1
@ 2204 train 4.4145 , allloss: 4.4148, dt: 892.23ms, fracRes: 0.2903, norm(attn): 0.3594, norm(output): 1.7422, norm(x): 1.4197, norm(y): 1.0099, norm:0.8966, tok/sec: 146904.09, flops:114.41, batch-reuse:1
@ 2205 train 4.3679 , allloss: 4.3683, dt: 883.68ms, fracRes: 0.2908, norm(attn): 0.3574, norm(output): 1.7188, norm(x): 1.4182, norm(y): 1.0099, norm:0.9015, tok/sec: 148325.25, flops:115.52, batch-reuse:1
@ 2206 train 4.3000 , allloss: 4.3003, dt: 885.05ms, fracRes: 0.2903, norm(attn): 0.3535, norm(output): 1.6719, norm(x): 1.4040, norm(y): 1.0098, norm:0.8590, tok/sec: 148095.90, flops:115.34, batch-reuse:1
@ 2207 train 4.3268 , allloss: 4.3272, dt: 887.41ms, fracRes: 0.2907, norm(attn): 0.3613, norm(output): 1.7188, norm(x): 1.4152, norm(y): 1.0098, norm:0.8842, tok/sec: 147702.47, flops:115.03, batch-reuse:1
@ 2208 train 4.4020 , allloss: 4.4028, dt: 905.55ms, fracRes: 0.2910, norm(attn): 0.3633, norm(output): 1.7344, norm(x): 1.4227, norm(y): 1.0098, norm:0.9990, tok/sec: 144742.25, flops:112.73, batch-reuse:1
@ 2209 train 4.2995 , allloss: 4.3003, dt: 895.83ms, fracRes: 0.2887, norm(attn): 0.3613, norm(output): 1.7188, norm(x): 1.4179, norm(y): 1.0097, norm:1.1278, tok/sec: 146314.27, flops:113.95, batch-reuse:1
@ 2210 train 4.2330 , allloss: 4.2334, dt: 894.85ms, fracRes: 0.2894, norm(attn): 0.3594, norm(output): 1.7188, norm(x): 1.4228, norm(y): 1.0097, norm:0.7646, tok/sec: 146473.47, flops:114.07, batch-reuse:1
@ 2211 train 4.3453 , allloss: 4.3459, dt: 909.45ms, fracRes: 0.2898, norm(attn): 0.3613, norm(output): 1.7188, norm(x): 1.4198, norm(y): 1.0097, norm:0.8373, tok/sec: 144122.91, flops:112.24, batch-reuse:1
@ 2212 train 4.2470 , allloss: 4.2476, dt: 912.44ms, fracRes: 0.2889, norm(attn): 0.3672, norm(output): 1.7031, norm(x): 1.4146, norm(y): 1.0096, norm:0.7229, tok/sec: 143649.98, flops:111.88, batch-reuse:1
@ 2213 train 4.6203 , allloss: 4.6213, dt: 901.88ms, fracRes: 0.2903, norm(attn): 0.3730, norm(output): 1.7188, norm(x): 1.4374, norm(y): 1.0098, norm:1.0868, tok/sec: 145331.32, flops:113.18, batch-reuse:1
@ 2214 train 4.4766 , allloss: 4.4778, dt: 895.17ms, fracRes: 0.2889, norm(attn): 0.3633, norm(output): 1.6562, norm(x): 1.4014, norm(y): 1.0098, norm:0.9869, tok/sec: 146420.65, flops:114.03, batch-reuse:1
@ 2215 train 4.3384 , allloss: 4.3391, dt: 905.31ms, fracRes: 0.2871, norm(attn): 0.3691, norm(output): 1.6562, norm(x): 1.4048, norm(y): 1.0097, norm:0.8099, tok/sec: 144781.63, flops:112.76, batch-reuse:1
@ 2216 train 4.4031 , allloss: 4.4035, dt: 907.18ms, fracRes: 0.2871, norm(attn): 0.3730, norm(output): 1.7344, norm(x): 1.4219, norm(y): 1.0098, norm:0.9530, tok/sec: 144483.35, flops:112.52, batch-reuse:1
@ 2217 train 4.3795 , allloss: 4.3815, dt: 902.75ms, fracRes: 0.2880, norm(attn): 0.3750, norm(output): 1.7266, norm(x): 1.4248, norm(y): 1.0098, norm:0.8909, tok/sec: 145191.64, flops:113.08, batch-reuse:1
@ 2218 train 4.2965 , allloss: 4.2970, dt: 900.80ms, fracRes: 0.2900, norm(attn): 0.3711, norm(output): 1.7422, norm(x): 1.4294, norm(y): 1.0098, norm:0.8579, tok/sec: 145505.60, flops:113.32, batch-reuse:1
@ 2219 train 4.3874 , allloss: 4.3881, dt: 901.61ms, fracRes: 0.2900, norm(attn): 0.3691, norm(output): 1.7266, norm(x): 1.4280, norm(y): 1.0098, norm:0.7937, tok/sec: 145375.17, flops:113.22, batch-reuse:1
@ 2220 train 4.4196 , allloss: 4.4201, dt: 895.16ms, fracRes: 0.2901, norm(attn): 0.3672, norm(output): 1.7188, norm(x): 1.4288, norm(y): 1.0099, norm:0.7493, tok/sec: 146423.54, flops:114.04, batch-reuse:1
@ 2221 train 4.2350 , allloss: 4.2355, dt: 890.06ms, fracRes: 0.2908, norm(attn): 0.3672, norm(output): 1.7188, norm(x): 1.4378, norm(y): 1.0100, norm:0.7783, tok/sec: 147262.35, flops:114.69, batch-reuse:1
@ 2222 train 4.3584 , allloss: 4.3604, dt: 900.63ms, fracRes: 0.2907, norm(attn): 0.3574, norm(output): 1.7422, norm(x): 1.4383, norm(y): 1.0100, norm:0.7248, tok/sec: 145533.61, flops:113.34, batch-reuse:1
@ 2223 train 4.3219 , allloss: 4.3233, dt: 901.00ms, fracRes: 0.2888, norm(attn): 0.3633, norm(output): 1.7422, norm(x): 1.4408, norm(y): 1.0099, norm:0.8535, tok/sec: 145473.84, flops:113.30, batch-reuse:1
@ 2224 train 4.3397 , allloss: 4.3403, dt: 903.09ms, fracRes: 0.2902, norm(attn): 0.3633, norm(output): 1.7266, norm(x): 1.4472, norm(y): 1.0099, norm:0.7576, tok/sec: 145136.56, flops:113.03, batch-reuse:1
@ 2225 train 4.4440 , allloss: 4.4445, dt: 895.89ms, fracRes: 0.2886, norm(attn): 0.3574, norm(output): 1.7266, norm(x): 1.4307, norm(y): 1.0098, norm:0.8533, tok/sec: 146303.87, flops:113.94, batch-reuse:1
@ 2226 train 4.4075 , allloss: 4.4082, dt: 889.82ms, fracRes: 0.2888, norm(attn): 0.3633, norm(output): 1.7422, norm(x): 1.4352, norm(y): 1.0096, norm:0.9181, tok/sec: 147301.29, flops:114.72, batch-reuse:1
@ 2227 train 4.3409 , allloss: 4.3424, dt: 900.07ms, fracRes: 0.2893, norm(attn): 0.3672, norm(output): 1.7422, norm(x): 1.4367, norm(y): 1.0095, norm:1.0155, tok/sec: 145624.85, flops:113.41, batch-reuse:1
@ 2228 train 4.3397 , allloss: 4.3404, dt: 914.29ms, fracRes: 0.2892, norm(attn): 0.3652, norm(output): 1.7422, norm(x): 1.4395, norm(y): 1.0096, norm:0.9658, tok/sec: 143358.74, flops:111.65, batch-reuse:1
@ 2229 train 4.5333 , allloss: 4.5339, dt: 898.75ms, fracRes: 0.2884, norm(attn): 0.3672, norm(output): 1.7422, norm(x): 1.4431, norm(y): 1.0096, norm:1.0845, tok/sec: 145838.18, flops:113.58, batch-reuse:1
@ 2230 train 4.4968 , allloss: 4.4970, dt: 903.34ms, fracRes: 0.2919, norm(attn): 0.3613, norm(output): 1.7422, norm(x): 1.4488, norm(y): 1.0099, norm:0.8053, tok/sec: 145096.30, flops:113.00, batch-reuse:1
@ 2231 train 4.5991 , allloss: 4.5993, dt: 888.35ms, fracRes: 0.2927, norm(attn): 0.3594, norm(output): 1.7422, norm(x): 1.4545, norm(y): 1.0100, norm:0.8062, tok/sec: 147545.76, flops:114.91, batch-reuse:1
@ 2232 train 4.5490 , allloss: 4.5497, dt: 894.39ms, fracRes: 0.2931, norm(attn): 0.3555, norm(output): 1.7422, norm(x): 1.4554, norm(y): 1.0102, norm:0.8045, tok/sec: 146549.54, flops:114.13, batch-reuse:1
@ 2233 train 4.4879 , allloss: 4.4883, dt: 899.69ms, fracRes: 0.2923, norm(attn): 0.3594, norm(output): 1.7344, norm(x): 1.4535, norm(y): 1.0103, norm:0.8319, tok/sec: 145686.21, flops:113.46, batch-reuse:1
@ 2234 train 4.5514 , allloss: 4.5525, dt: 899.23ms, fracRes: 0.2917, norm(attn): 0.3633, norm(output): 1.7422, norm(x): 1.4711, norm(y): 1.0103, norm:0.9285, tok/sec: 145760.69, flops:113.52, batch-reuse:1
@ 2235 train 4.4753 , allloss: 4.4759, dt: 890.96ms, fracRes: 0.2902, norm(attn): 0.3691, norm(output): 1.7109, norm(x): 1.4532, norm(y): 1.0102, norm:0.8196, tok/sec: 147112.88, flops:114.57, batch-reuse:1
@ 2236 train 4.4615 , allloss: 4.4624, dt: 902.31ms, fracRes: 0.2889, norm(attn): 0.3730, norm(output): 1.6875, norm(x): 1.4442, norm(y): 1.0102, norm:1.3058, tok/sec: 145262.77, flops:113.13, batch-reuse:1
@ 2237 train 4.5124 , allloss: 4.5132, dt: 918.98ms, fracRes: 0.2886, norm(attn): 0.3711, norm(output): 1.6641, norm(x): 1.4420, norm(y): 1.0101, norm:0.7909, tok/sec: 142628.42, flops:111.08, batch-reuse:1
@ 2238 train 4.4405 , allloss: 4.4412, dt: 909.62ms, fracRes: 0.2884, norm(attn): 0.3672, norm(output): 1.6719, norm(x): 1.4328, norm(y): 1.0101, norm:0.7141, tok/sec: 144095.93, flops:112.22, batch-reuse:1
@ 2239 train 4.4371 , allloss: 4.4377, dt: 903.06ms, fracRes: 0.2890, norm(attn): 0.3594, norm(output): 1.6875, norm(x): 1.4307, norm(y): 1.0102, norm:0.8137, tok/sec: 145142.62, flops:113.04, batch-reuse:1
@ 2240 train 4.5155 , allloss: 4.5175, dt: 901.86ms, fracRes: 0.2889, norm(attn): 0.3613, norm(output): 1.7188, norm(x): 1.4428, norm(y): 1.0102, norm:0.7577, tok/sec: 145335.62, flops:113.19, batch-reuse:1
@ 2241 train 4.5477 , allloss: 4.5482, dt: 908.55ms, fracRes: 0.2910, norm(attn): 0.3594, norm(output): 1.7188, norm(x): 1.4490, norm(y): 1.0103, norm:0.6913, tok/sec: 144265.22, flops:112.35, batch-reuse:1
@ 2242 train 4.4882 , allloss: 4.4888, dt: 905.91ms, fracRes: 0.2900, norm(attn): 0.3633, norm(output): 1.7422, norm(x): 1.4577, norm(y): 1.0102, norm:0.7740, tok/sec: 144685.26, flops:112.68, batch-reuse:1
@ 2243 train 4.4912 , allloss: 4.4918, dt: 894.60ms, fracRes: 0.2923, norm(attn): 0.3594, norm(output): 1.7500, norm(x): 1.4770, norm(y): 1.0103, norm:0.9618, tok/sec: 146514.66, flops:114.11, batch-reuse:1
@ 2244 train 4.5508 , allloss: 4.5513, dt: 890.72ms, fracRes: 0.2925, norm(attn): 0.3613, norm(output): 1.7500, norm(x): 1.4815, norm(y): 1.0103, norm:1.0197, tok/sec: 147153.51, flops:114.60, batch-reuse:1
@ 2245 train 4.4730 , allloss: 4.4736, dt: 907.17ms, fracRes: 0.2927, norm(attn): 0.3633, norm(output): 1.7500, norm(x): 1.4691, norm(y): 1.0101, norm:1.0926, tok/sec: 144484.75, flops:112.53, batch-reuse:1
@ 2246 train 4.4533 , allloss: 4.4540, dt: 901.24ms, fracRes: 0.2928, norm(attn): 0.3594, norm(output): 1.7266, norm(x): 1.4610, norm(y): 1.0102, norm:0.8796, tok/sec: 145435.74, flops:113.27, batch-reuse:1
@ 2247 train 4.4978 , allloss: 4.4981, dt: 904.51ms, fracRes: 0.2923, norm(attn): 0.3633, norm(output): 1.7422, norm(x): 1.4743, norm(y): 1.0101, norm:0.7855, tok/sec: 144908.67, flops:112.86, batch-reuse:1
@ 2248 train 4.5548 , allloss: 4.5571, dt: 873.60ms, fracRes: 0.2902, norm(attn): 0.3711, norm(output): 1.7578, norm(x): 1.4952, norm(y): 1.0101, norm:0.8886, tok/sec: 150037.37, flops:116.85, batch-reuse:1
@ 2249 train 4.3958 , allloss: 4.4012, dt: 893.04ms, fracRes: 0.2909, norm(attn): 0.3691, norm(output): 1.7578, norm(x): 1.4919, norm(y): 1.0101, norm:0.7823, tok/sec: 146770.90, flops:114.31, batch-reuse:1
@ 2250 train 4.5253 , allloss: 4.5257, dt: 894.34ms, fracRes: 0.2949, norm(attn): 0.3555, norm(output): 1.7422, norm(x): 1.4808, norm(y): 1.0103, norm:0.7380, tok/sec: 146556.92, flops:114.14, batch-reuse:1
@ 2251 train 4.4347 , allloss: 4.4356, dt: 886.02ms, fracRes: 0.2937, norm(attn): 0.3535, norm(output): 1.7422, norm(x): 1.4738, norm(y): 1.0103, norm:0.9052, tok/sec: 147933.31, flops:115.21, batch-reuse:1
@ 2252 train 4.4558 , allloss: 4.4560, dt: 899.71ms, fracRes: 0.2950, norm(attn): 0.3535, norm(output): 1.7500, norm(x): 1.4760, norm(y): 1.0103, norm:1.1509, tok/sec: 145681.85, flops:113.46, batch-reuse:1
@ 2253 train 4.4571 , allloss: 4.4574, dt: 900.63ms, fracRes: 0.2954, norm(attn): 0.3496, norm(output): 1.7344, norm(x): 1.4606, norm(y): 1.0103, norm:0.9165, tok/sec: 145534.41, flops:113.34, batch-reuse:1
@ 2254 train 4.5464 , allloss: 4.5470, dt: 915.25ms, fracRes: 0.2954, norm(attn): 0.3535, norm(output): 1.7188, norm(x): 1.4470, norm(y): 1.0105, norm:0.8693, tok/sec: 143208.95, flops:111.53, batch-reuse:1
@ 2255 train 4.4680 , allloss: 4.4685, dt: 912.12ms, fracRes: 0.2954, norm(attn): 0.3535, norm(output): 1.7422, norm(x): 1.4634, norm(y): 1.0105, norm:0.8099, tok/sec: 143700.67, flops:111.91, batch-reuse:1
@ 2256 train 4.5431 , allloss: 4.5435, dt: 898.49ms, fracRes: 0.2948, norm(attn): 0.3594, norm(output): 1.7422, norm(x): 1.4756, norm(y): 1.0103, norm:1.0559, tok/sec: 145880.67, flops:113.61, batch-reuse:1
@ 2257 train 4.5090 , allloss: 4.5094, dt: 878.09ms, fracRes: 0.2937, norm(attn): 0.3555, norm(output): 1.7578, norm(x): 1.4828, norm(y): 1.0104, norm:0.9898, tok/sec: 149269.90, flops:116.25, batch-reuse:1
@ 2258 train 4.4558 , allloss: 4.4565, dt: 898.59ms, fracRes: 0.2931, norm(attn): 0.3555, norm(output): 1.7422, norm(x): 1.4754, norm(y): 1.0102, norm:0.9284, tok/sec: 145864.45, flops:113.60, batch-reuse:1
@ 2259 train 4.5748 , allloss: 4.5759, dt: 889.07ms, fracRes: 0.2921, norm(attn): 0.3535, norm(output): 1.7188, norm(x): 1.4608, norm(y): 1.0100, norm:0.8516, tok/sec: 147425.88, flops:114.82, batch-reuse:1
@ 2260 train 4.4662 , allloss: 4.4666, dt: 906.24ms, fracRes: 0.2913, norm(attn): 0.3652, norm(output): 1.7422, norm(x): 1.4662, norm(y): 1.0100, norm:0.9968, tok/sec: 144632.58, flops:112.64, batch-reuse:1
@ 2261 train 4.5207 , allloss: 4.5239, dt: 900.21ms, fracRes: 0.2914, norm(attn): 0.3711, norm(output): 1.7578, norm(x): 1.4896, norm(y): 1.0102, norm:1.0642, tok/sec: 145602.02, flops:113.40, batch-reuse:1
@ 2262 train 4.4479 , allloss: 4.4483, dt: 890.40ms, fracRes: 0.2915, norm(attn): 0.3652, norm(output): 1.7422, norm(x): 1.4852, norm(y): 1.0101, norm:0.9188, tok/sec: 147204.97, flops:114.64, batch-reuse:1
@ 2263 train 4.5499 , allloss: 4.5503, dt: 901.64ms, fracRes: 0.2913, norm(attn): 0.3633, norm(output): 1.7500, norm(x): 1.5016, norm(y): 1.0099, norm:0.6610, tok/sec: 145370.98, flops:113.22, batch-reuse:1
@ 2264 train 4.4815 , allloss: 4.4818, dt: 904.35ms, fracRes: 0.2920, norm(attn): 0.3691, norm(output): 1.7656, norm(x): 1.5178, norm(y): 1.0098, norm:0.8241, tok/sec: 144935.14, flops:112.88, batch-reuse:1
@ 2265 train 4.4699 , allloss: 4.4702, dt: 901.63ms, fracRes: 0.2938, norm(attn): 0.3594, norm(output): 1.7734, norm(x): 1.5150, norm(y): 1.0099, norm:0.8345, tok/sec: 145372.78, flops:113.22, batch-reuse:1
@ 2266 train 4.3540 , allloss: 4.3543, dt: 922.19ms, fracRes: 0.2937, norm(attn): 0.3594, norm(output): 1.7578, norm(x): 1.5042, norm(y): 1.0099, norm:0.9267, tok/sec: 142131.64, flops:110.69, batch-reuse:1
@ 2267 train 4.4860 , allloss: 4.4864, dt: 899.06ms, fracRes: 0.2960, norm(attn): 0.3633, norm(output): 1.8438, norm(x): 1.5370, norm(y): 1.0101, norm:0.8910, tok/sec: 145788.36, flops:113.54, batch-reuse:1
@ 2268 train 4.5192 , allloss: 4.5196, dt: 898.69ms, fracRes: 0.2951, norm(attn): 0.3711, norm(output): 1.8672, norm(x): 1.5468, norm(y): 1.0101, norm:1.0068, tok/sec: 145848.23, flops:113.59, batch-reuse:1
@ 2269 train 4.5464 , allloss: 4.5469, dt: 897.45ms, fracRes: 0.2946, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5523, norm(y): 1.0101, norm:1.0543, tok/sec: 146049.06, flops:113.74, batch-reuse:1
@ 2270 train 4.5842 , allloss: 4.5845, dt: 897.92ms, fracRes: 0.2940, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5447, norm(y): 1.0100, norm:0.9381, tok/sec: 145972.93, flops:113.68, batch-reuse:1
@ 2271 train 4.4637 , allloss: 4.4643, dt: 905.26ms, fracRes: 0.2935, norm(attn): 0.3750, norm(output): 1.8359, norm(x): 1.5293, norm(y): 1.0099, norm:0.8978, tok/sec: 144789.63, flops:112.76, batch-reuse:1
@ 2272 train 4.4077 , allloss: 4.4080, dt: 889.74ms, fracRes: 0.2927, norm(attn): 0.3711, norm(output): 1.8359, norm(x): 1.5172, norm(y): 1.0099, norm:0.8508, tok/sec: 147314.87, flops:114.73, batch-reuse:1
@ 2273 train 4.5417 , allloss: 4.5419, dt: 889.69ms, fracRes: 0.2928, norm(attn): 0.3750, norm(output): 1.8438, norm(x): 1.5180, norm(y): 1.0098, norm:0.8691, tok/sec: 147322.92, flops:114.74, batch-reuse:1
@ 2274 train 4.4537 , allloss: 4.4540, dt: 892.26ms, fracRes: 0.2915, norm(attn): 0.3730, norm(output): 1.8125, norm(x): 1.5128, norm(y): 1.0098, norm:0.9876, tok/sec: 146898.95, flops:114.41, batch-reuse:1
@ 2275 train 4.4832 , allloss: 4.4835, dt: 902.02ms, fracRes: 0.2914, norm(attn): 0.3750, norm(output): 1.8438, norm(x): 1.5122, norm(y): 1.0098, norm:0.9032, tok/sec: 145308.65, flops:113.17, batch-reuse:1
@ 2276 train 4.5486 , allloss: 4.5489, dt: 912.34ms, fracRes: 0.2903, norm(attn): 0.3750, norm(output): 1.8359, norm(x): 1.5117, norm(y): 1.0097, norm:0.9294, tok/sec: 143665.86, flops:111.89, batch-reuse:1
@ 2277 train 4.4807 , allloss: 4.4810, dt: 913.89ms, fracRes: 0.2904, norm(attn): 0.3750, norm(output): 1.7812, norm(x): 1.5097, norm(y): 1.0096, norm:0.8670, tok/sec: 143421.91, flops:111.70, batch-reuse:1
@ 2278 train 4.5553 , allloss: 4.5667, dt: 909.05ms, fracRes: 0.2898, norm(attn): 0.3770, norm(output): 1.8125, norm(x): 1.5392, norm(y): 1.0096, norm:1.6435, tok/sec: 144184.90, flops:112.29, batch-reuse:1
@ 2279 train 4.4609 , allloss: 4.4613, dt: 899.11ms, fracRes: 0.2893, norm(attn): 0.3750, norm(output): 1.7969, norm(x): 1.5106, norm(y): 1.0095, norm:0.8242, tok/sec: 145779.32, flops:113.53, batch-reuse:1
@ 2280 train 4.4445 , allloss: 4.4447, dt: 905.21ms, fracRes: 0.2890, norm(attn): 0.3750, norm(output): 1.7812, norm(x): 1.5070, norm(y): 1.0095, norm:0.7214, tok/sec: 144797.60, flops:112.77, batch-reuse:1
@ 2281 train 4.3800 , allloss: 4.3801, dt: 900.26ms, fracRes: 0.2908, norm(attn): 0.3711, norm(output): 1.8125, norm(x): 1.5245, norm(y): 1.0097, norm:0.8696, tok/sec: 145593.00, flops:113.39, batch-reuse:1
@ 2282 train 4.6112 , allloss: 4.6114, dt: 898.31ms, fracRes: 0.2893, norm(attn): 0.3730, norm(output): 1.8047, norm(x): 1.5304, norm(y): 1.0094, norm:1.0141, tok/sec: 145909.63, flops:113.63, batch-reuse:1
@ 2283 train 4.4291 , allloss: 4.4294, dt: 901.75ms, fracRes: 0.2914, norm(attn): 0.3730, norm(output): 1.8516, norm(x): 1.5301, norm(y): 1.0097, norm:1.1111, tok/sec: 145353.03, flops:113.20, batch-reuse:1
@ 2284 train 4.3864 , allloss: 4.3870, dt: 906.44ms, fracRes: 0.2909, norm(attn): 0.3730, norm(output): 1.8359, norm(x): 1.5355, norm(y): 1.0096, norm:0.8502, tok/sec: 144601.27, flops:112.62, batch-reuse:1
@ 2285 train 4.4219 , allloss: 4.4225, dt: 905.64ms, fracRes: 0.2914, norm(attn): 0.3711, norm(output): 1.7969, norm(x): 1.5249, norm(y): 1.0095, norm:0.7577, tok/sec: 144728.61, flops:112.72, batch-reuse:1
@ 2286 train 4.4895 , allloss: 4.4898, dt: 903.70ms, fracRes: 0.2911, norm(attn): 0.3672, norm(output): 1.7812, norm(x): 1.5228, norm(y): 1.0095, norm:0.7319, tok/sec: 145039.95, flops:112.96, batch-reuse:1
@ 2287 train 4.5095 , allloss: 4.5099, dt: 886.48ms, fracRes: 0.2908, norm(attn): 0.3711, norm(output): 1.8359, norm(x): 1.5221, norm(y): 1.0094, norm:0.6657, tok/sec: 147856.08, flops:115.15, batch-reuse:1
@ 2288 train 4.5440 , allloss: 4.5445, dt: 936.29ms, fracRes: 0.2902, norm(attn): 0.3672, norm(output): 1.8672, norm(x): 1.5376, norm(y): 1.0094, norm:0.7258, tok/sec: 139990.60, flops:109.03, batch-reuse:1
@ 2289 train 4.4207 , allloss: 4.4242, dt: 905.92ms, fracRes: 0.2912, norm(attn): 0.3691, norm(output): 1.8750, norm(x): 1.5495, norm(y): 1.0095, norm:0.7422, tok/sec: 144683.78, flops:112.68, batch-reuse:1
@ 2290 train 4.3575 , allloss: 4.3586, dt: 921.97ms, fracRes: 0.2917, norm(attn): 0.3672, norm(output): 1.8672, norm(x): 1.5440, norm(y): 1.0095, norm:0.8130, tok/sec: 142164.46, flops:110.72, batch-reuse:1
@ 2291 train 4.5638 , allloss: 4.5646, dt: 908.25ms, fracRes: 0.2911, norm(attn): 0.3691, norm(output): 1.8672, norm(x): 1.5531, norm(y): 1.0095, norm:0.8766, tok/sec: 144313.13, flops:112.39, batch-reuse:1
@ 2292 train 4.4176 , allloss: 4.4180, dt: 904.91ms, fracRes: 0.2922, norm(attn): 0.3672, norm(output): 1.8672, norm(x): 1.5539, norm(y): 1.0096, norm:0.8797, tok/sec: 144845.10, flops:112.81, batch-reuse:1
@ 2293 train 4.5063 , allloss: 4.5067, dt: 893.13ms, fracRes: 0.2908, norm(attn): 0.3691, norm(output): 1.8438, norm(x): 1.5463, norm(y): 1.0094, norm:0.7106, tok/sec: 146755.55, flops:114.29, batch-reuse:1
@ 2294 train 4.4657 , allloss: 4.4661, dt: 908.39ms, fracRes: 0.2909, norm(attn): 0.3711, norm(output): 1.8672, norm(x): 1.5519, norm(y): 1.0095, norm:0.7951, tok/sec: 144290.97, flops:112.37, batch-reuse:1
@ 2295 train 4.4284 , allloss: 4.4287, dt: 913.23ms, fracRes: 0.2907, norm(attn): 0.3711, norm(output): 1.8594, norm(x): 1.5464, norm(y): 1.0095, norm:0.6195, tok/sec: 143526.15, flops:111.78, batch-reuse:1
@ 2296 train 4.4260 , allloss: 4.4262, dt: 915.34ms, fracRes: 0.2916, norm(attn): 0.3730, norm(output): 1.8594, norm(x): 1.5458, norm(y): 1.0096, norm:0.7666, tok/sec: 143195.48, flops:111.52, batch-reuse:1
@ 2297 train 4.4087 , allloss: 4.4091, dt: 902.96ms, fracRes: 0.2901, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5471, norm(y): 1.0095, norm:0.6758, tok/sec: 145157.87, flops:113.05, batch-reuse:1
@ 2298 train 4.4342 , allloss: 4.4351, dt: 899.99ms, fracRes: 0.2907, norm(attn): 0.3711, norm(output): 1.8672, norm(x): 1.5560, norm(y): 1.0096, norm:0.7722, tok/sec: 145637.70, flops:113.42, batch-reuse:1
@ 2299 train 4.4393 , allloss: 4.4398, dt: 896.26ms, fracRes: 0.2907, norm(attn): 0.3730, norm(output): 1.8594, norm(x): 1.5477, norm(y): 1.0094, norm:0.8276, tok/sec: 146244.01, flops:113.90, batch-reuse:1
@ 2300 train 4.3150 , allloss: 4.3153, dt: 885.71ms, fracRes: 0.2910, norm(attn): 0.3730, norm(output): 1.8438, norm(x): 1.5417, norm(y): 1.0095, norm:0.8930, tok/sec: 147985.63, flops:115.25, batch-reuse:1
@ 2301 train 4.4209 , allloss: 4.4214, dt: 901.59ms, fracRes: 0.2896, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5541, norm(y): 1.0095, norm:0.7984, tok/sec: 145379.24, flops:113.22, batch-reuse:1
@ 2302 train 4.4323 , allloss: 4.4327, dt: 891.75ms, fracRes: 0.2896, norm(attn): 0.3750, norm(output): 1.8750, norm(x): 1.5613, norm(y): 1.0095, norm:0.7598, tok/sec: 146982.45, flops:114.47, batch-reuse:1
@ 2303 train 4.4999 , allloss: 4.5002, dt: 897.95ms, fracRes: 0.2893, norm(attn): 0.3750, norm(output): 1.8672, norm(x): 1.5448, norm(y): 1.0093, norm:0.7199, tok/sec: 145967.31, flops:113.68, batch-reuse:1
@ 2304 train 4.4374 , allloss: 4.4383, dt: 907.31ms, fracRes: 0.2896, norm(attn): 0.3750, norm(output): 1.8672, norm(x): 1.5616, norm(y): 1.0093, norm:0.8235, tok/sec: 144462.66, flops:112.51, batch-reuse:1
@ 2305 train 4.4068 , allloss: 4.4074, dt: 900.20ms, fracRes: 0.2898, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5635, norm(y): 1.0093, norm:0.6908, tok/sec: 145603.91, flops:113.40, batch-reuse:1
@ 2306 train 4.4201 , allloss: 4.4204, dt: 890.57ms, fracRes: 0.2904, norm(attn): 0.3730, norm(output): 1.8750, norm(x): 1.5691, norm(y): 1.0093, norm:0.7257, tok/sec: 147176.84, flops:114.62, batch-reuse:1
@ 2307 train 4.4845 , allloss: 4.4852, dt: 896.93ms, fracRes: 0.2897, norm(attn): 0.3730, norm(output): 1.8750, norm(x): 1.5641, norm(y): 1.0091, norm:8.0088, tok/sec: 146134.66, flops:113.81, batch-reuse:1
@ 2308 train 4.5061 , allloss: 4.5062, dt: 905.92ms, fracRes: 0.2921, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5646, norm(y): 1.0094, norm:1.3288, tok/sec: 144683.09, flops:112.68, batch-reuse:1
@ 2309 train 4.4290 , allloss: 4.4292, dt: 905.54ms, fracRes: 0.2908, norm(attn): 0.3730, norm(output): 1.8750, norm(x): 1.5638, norm(y): 1.0096, norm:0.9913, tok/sec: 144743.96, flops:112.73, batch-reuse:1
@ 2310 train 4.5783 , allloss: 4.5784, dt: 904.40ms, fracRes: 0.2918, norm(attn): 0.3711, norm(output): 1.8750, norm(x): 1.5624, norm(y): 1.0097, norm:1.3066, tok/sec: 144927.73, flops:112.87, batch-reuse:1
@ 2311 train 4.4875 , allloss: 4.4880, dt: 902.61ms, fracRes: 0.2911, norm(attn): 0.3730, norm(output): 1.8594, norm(x): 1.5506, norm(y): 1.0096, norm:0.9097, tok/sec: 145214.08, flops:113.09, batch-reuse:1
@ 2312 train 4.4964 , allloss: 4.4968, dt: 892.58ms, fracRes: 0.2902, norm(attn): 0.3730, norm(output): 1.8594, norm(x): 1.5549, norm(y): 1.0096, norm:0.9944, tok/sec: 146845.78, flops:114.36, batch-reuse:1
@ 2313 train 4.5035 , allloss: 4.5041, dt: 896.64ms, fracRes: 0.2905, norm(attn): 0.3691, norm(output): 1.8672, norm(x): 1.5515, norm(y): 1.0096, norm:0.7811, tok/sec: 146180.59, flops:113.85, batch-reuse:1
@ 2314 train 4.4910 , allloss: 4.4913, dt: 896.38ms, fracRes: 0.2908, norm(attn): 0.3691, norm(output): 1.8594, norm(x): 1.5465, norm(y): 1.0096, norm:0.7765, tok/sec: 146223.32, flops:113.88, batch-reuse:1
@ 2315 train 4.4299 , allloss: 4.4304, dt: 896.70ms, fracRes: 0.2897, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5555, norm(y): 1.0096, norm:0.7666, tok/sec: 146170.99, flops:113.84, batch-reuse:1
@ 2316 train 4.5070 , allloss: 4.5074, dt: 903.97ms, fracRes: 0.2881, norm(attn): 0.3711, norm(output): 1.8672, norm(x): 1.5504, norm(y): 1.0095, norm:0.6652, tok/sec: 144996.65, flops:112.92, batch-reuse:1
@ 2317 train 4.4106 , allloss: 4.4119, dt: 889.42ms, fracRes: 0.2902, norm(attn): 0.3691, norm(output): 1.8672, norm(x): 1.5580, norm(y): 1.0096, norm:0.7243, tok/sec: 147367.63, flops:114.77, batch-reuse:1
@ 2318 train 4.4375 , allloss: 4.4379, dt: 889.24ms, fracRes: 0.2908, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5607, norm(y): 1.0095, norm:0.7351, tok/sec: 147397.93, flops:114.79, batch-reuse:1
@ 2319 train 4.4243 , allloss: 4.4247, dt: 904.86ms, fracRes: 0.2900, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5715, norm(y): 1.0095, norm:0.7208, tok/sec: 144853.99, flops:112.81, batch-reuse:1
@ 2320 train 4.3874 , allloss: 4.3880, dt: 876.13ms, fracRes: 0.2898, norm(attn): 0.3730, norm(output): 1.8750, norm(x): 1.5787, norm(y): 1.0095, norm:0.6671, tok/sec: 149603.07, flops:116.51, batch-reuse:1
@ 2321 train 4.2797 , allloss: 4.2803, dt: 882.73ms, fracRes: 0.2906, norm(attn): 0.3750, norm(output): 1.8828, norm(x): 1.5945, norm(y): 1.0098, norm:0.8825, tok/sec: 148485.66, flops:115.64, batch-reuse:1
@ 2322 train 4.4288 , allloss: 4.4295, dt: 902.94ms, fracRes: 0.2896, norm(attn): 0.3691, norm(output): 1.8594, norm(x): 1.5674, norm(y): 1.0095, norm:0.8924, tok/sec: 145160.90, flops:113.05, batch-reuse:1
@ 2323 train 4.3031 , allloss: 4.3035, dt: 926.60ms, fracRes: 0.2897, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5687, norm(y): 1.0096, norm:0.8464, tok/sec: 141454.60, flops:110.17, batch-reuse:1
@ 2324 train 4.4691 , allloss: 4.4694, dt: 881.57ms, fracRes: 0.2889, norm(attn): 0.3730, norm(output): 1.8750, norm(x): 1.5782, norm(y): 1.0095, norm:0.7775, tok/sec: 148680.26, flops:115.79, batch-reuse:1
@ 2325 train 4.4558 , allloss: 4.4561, dt: 903.68ms, fracRes: 0.2897, norm(attn): 0.3711, norm(output): 1.8750, norm(x): 1.5855, norm(y): 1.0096, norm:0.8103, tok/sec: 145042.29, flops:112.96, batch-reuse:1
@ 2326 train 4.3814 , allloss: 4.3819, dt: 899.81ms, fracRes: 0.2885, norm(attn): 0.3750, norm(output): 1.8828, norm(x): 1.5851, norm(y): 1.0096, norm:0.9302, tok/sec: 145666.26, flops:113.45, batch-reuse:1
@ 2327 train 4.4105 , allloss: 4.4108, dt: 896.05ms, fracRes: 0.2862, norm(attn): 0.3750, norm(output): 1.8672, norm(x): 1.5645, norm(y): 1.0094, norm:0.6952, tok/sec: 146277.56, flops:113.92, batch-reuse:1
@ 2328 train 4.3426 , allloss: 4.3428, dt: 910.79ms, fracRes: 0.2875, norm(attn): 0.3750, norm(output): 1.8672, norm(x): 1.5714, norm(y): 1.0095, norm:0.6909, tok/sec: 143909.63, flops:112.08, batch-reuse:1
@ 2329 train 4.0548 , allloss: 4.0552, dt: 908.05ms, fracRes: 0.2914, norm(attn): 0.3750, norm(output): 1.8594, norm(x): 1.5640, norm(y): 1.0100, norm:1.8566, tok/sec: 144343.86, flops:112.42, batch-reuse:1
@ 2330 train 4.4342 , allloss: 4.4345, dt: 906.54ms, fracRes: 0.2872, norm(attn): 0.3750, norm(output): 1.8672, norm(x): 1.5760, norm(y): 1.0095, norm:0.8739, tok/sec: 144584.46, flops:112.60, batch-reuse:1
@ 2331 train 4.2933 , allloss: 4.2935, dt: 899.90ms, fracRes: 0.2893, norm(attn): 0.3730, norm(output): 1.8594, norm(x): 1.5718, norm(y): 1.0097, norm:0.9141, tok/sec: 145652.29, flops:113.43, batch-reuse:1
@ 2332 train 4.4263 , allloss: 4.4266, dt: 897.02ms, fracRes: 0.2900, norm(attn): 0.3730, norm(output): 1.8672, norm(x): 1.5757, norm(y): 1.0096, norm:0.8953, tok/sec: 146119.20, flops:113.80, batch-reuse:1
@ 2333 train 4.2869 , allloss: 4.2872, dt: 890.93ms, fracRes: 0.2904, norm(attn): 0.3750, norm(output): 1.8828, norm(x): 1.5832, norm(y): 1.0095, norm:1.0212, tok/sec: 147117.99, flops:114.58, batch-reuse:1
@ 2334 train 4.3080 , allloss: 4.3083, dt: 915.31ms, fracRes: 0.2895, norm(attn): 0.3750, norm(output): 1.8828, norm(x): 1.5764, norm(y): 1.0095, norm:0.9708, tok/sec: 143200.15, flops:111.52, batch-reuse:1
@ 2335 train 4.4174 , allloss: 4.4177, dt: 913.86ms, fracRes: 0.2905, norm(attn): 0.3711, norm(output): 1.8672, norm(x): 1.5758, norm(y): 1.0096, norm:0.9072, tok/sec: 143427.48, flops:111.70, batch-reuse:1
@ 2336 train 4.5037 , allloss: 4.5040, dt: 908.11ms, fracRes: 0.2913, norm(attn): 0.3711, norm(output): 1.8594, norm(x): 1.5791, norm(y): 1.0097, norm:0.9392, tok/sec: 144335.18, flops:112.41, batch-reuse:1
@ 2337 train 4.3760 , allloss: 4.3765, dt: 911.33ms, fracRes: 0.2891, norm(attn): 0.3770, norm(output): 1.8672, norm(x): 1.5853, norm(y): 1.0094, norm:0.8360, tok/sec: 143825.26, flops:112.01, batch-reuse:1
@ 2338 train 4.4198 , allloss: 4.4200, dt: 920.28ms, fracRes: 0.2897, norm(attn): 0.3750, norm(output): 1.9141, norm(x): 1.6248, norm(y): 1.0096, norm:0.8785, tok/sec: 142426.85, flops:110.92, batch-reuse:1
@ 2339 train 4.3706 , allloss: 4.3710, dt: 904.62ms, fracRes: 0.2908, norm(attn): 0.3691, norm(output): 1.9062, norm(x): 1.6211, norm(y): 1.0095, norm:0.8350, tok/sec: 144892.55, flops:112.84, batch-reuse:1
@ 2340 train 4.4046 , allloss: 4.4048, dt: 899.31ms, fracRes: 0.2912, norm(attn): 0.3691, norm(output): 1.9688, norm(x): 1.6258, norm(y): 1.0094, norm:0.8074, tok/sec: 145748.09, flops:113.51, batch-reuse:1
@ 2341 train 4.3945 , allloss: 4.3948, dt: 891.67ms, fracRes: 0.2924, norm(attn): 0.3691, norm(output): 1.9688, norm(x): 1.6212, norm(y): 1.0095, norm:0.7497, tok/sec: 146996.44, flops:114.48, batch-reuse:1
@ 2342 train 4.3096 , allloss: 4.3100, dt: 900.01ms, fracRes: 0.2918, norm(attn): 0.3672, norm(output): 1.9062, norm(x): 1.6131, norm(y): 1.0094, norm:0.7773, tok/sec: 145634.46, flops:113.42, batch-reuse:1
@ 2343 train 4.3950 , allloss: 4.3953, dt: 898.12ms, fracRes: 0.2906, norm(attn): 0.3672, norm(output): 1.9453, norm(x): 1.6229, norm(y): 1.0094, norm:0.7093, tok/sec: 145940.30, flops:113.66, batch-reuse:1
@ 2344 train 4.4506 , allloss: 4.4509, dt: 892.03ms, fracRes: 0.2903, norm(attn): 0.3711, norm(output): 1.9609, norm(x): 1.6412, norm(y): 1.0096, norm:0.7438, tok/sec: 146936.41, flops:114.43, batch-reuse:1
@ 2345 train 4.3119 , allloss: 4.3122, dt: 893.38ms, fracRes: 0.2880, norm(attn): 0.3730, norm(output): 1.9766, norm(x): 1.6389, norm(y): 1.0093, norm:0.8194, tok/sec: 146714.58, flops:114.26, batch-reuse:1
@ 2346 train 4.4157 , allloss: 4.4159, dt: 916.76ms, fracRes: 0.2881, norm(attn): 0.3730, norm(output): 1.9688, norm(x): 1.6441, norm(y): 1.0094, norm:0.8544, tok/sec: 142973.16, flops:111.35, batch-reuse:1
@ 2347 train 4.3256 , allloss: 4.3258, dt: 898.23ms, fracRes: 0.2873, norm(attn): 0.3730, norm(output): 1.9141, norm(x): 1.6191, norm(y): 1.0091, norm:0.6739, tok/sec: 145923.18, flops:113.65, batch-reuse:1
@ 2348 train 4.4163 , allloss: 4.4165, dt: 904.13ms, fracRes: 0.2883, norm(attn): 0.3711, norm(output): 1.9453, norm(x): 1.6258, norm(y): 1.0092, norm:0.6964, tok/sec: 144969.96, flops:112.90, batch-reuse:1
@ 2349 train 4.4483 , allloss: 4.4484, dt: 904.14ms, fracRes: 0.2878, norm(attn): 0.3730, norm(output): 1.9531, norm(x): 1.6418, norm(y): 1.0091, norm:0.7058, tok/sec: 144968.20, flops:112.90, batch-reuse:1
@ 2350 train 4.3244 , allloss: 4.3246, dt: 915.65ms, fracRes: 0.2875, norm(attn): 0.3750, norm(output): 1.9531, norm(x): 1.6512, norm(y): 1.0090, norm:0.6963, tok/sec: 143146.83, flops:111.48, batch-reuse:1
@ 2351 train 4.4541 , allloss: 4.4544, dt: 929.36ms, fracRes: 0.2883, norm(attn): 0.3750, norm(output): 1.9688, norm(x): 1.6570, norm(y): 1.0091, norm:0.7497, tok/sec: 141034.41, flops:109.84, batch-reuse:1
@ 2352 train 4.3901 , allloss: 4.3903, dt: 917.24ms, fracRes: 0.2883, norm(attn): 0.3750, norm(output): 1.9844, norm(x): 1.6574, norm(y): 1.0091, norm:0.8582, tok/sec: 142898.05, flops:111.29, batch-reuse:1
@ 2353 train 4.3710 , allloss: 4.3713, dt: 904.82ms, fracRes: 0.2886, norm(attn): 0.3750, norm(output): 1.9531, norm(x): 1.6514, norm(y): 1.0092, norm:0.7541, tok/sec: 144859.57, flops:112.82, batch-reuse:1
@ 2354 train 4.4257 , allloss: 4.4260, dt: 904.34ms, fracRes: 0.2887, norm(attn): 0.3750, norm(output): 1.9531, norm(x): 1.6445, norm(y): 1.0093, norm:0.6969, tok/sec: 144936.75, flops:112.88, batch-reuse:1
@ 2355 train 4.3448 , allloss: 4.3452, dt: 919.37ms, fracRes: 0.2885, norm(attn): 0.3730, norm(output): 1.8984, norm(x): 1.6250, norm(y): 1.0092, norm:0.6913, tok/sec: 142567.79, flops:111.03, batch-reuse:1
@ 2356 train 4.5051 , allloss: 4.5073, dt: 887.76ms, fracRes: 0.2871, norm(attn): 0.3711, norm(output): 1.8906, norm(x): 1.6203, norm(y): 1.0091, norm:0.6750, tok/sec: 147643.44, flops:114.99, batch-reuse:1
@ 2357 train 4.4349 , allloss: 4.4351, dt: 882.59ms, fracRes: 0.2875, norm(attn): 0.3730, norm(output): 1.9219, norm(x): 1.6270, norm(y): 1.0090, norm:0.8538, tok/sec: 148507.72, flops:115.66, batch-reuse:1
@ 2358 train 4.4284 , allloss: 4.4285, dt: 911.63ms, fracRes: 0.2883, norm(attn): 0.3730, norm(output): 1.9297, norm(x): 1.6306, norm(y): 1.0092, norm:0.8773, tok/sec: 143776.97, flops:111.97, batch-reuse:1
@ 2359 train 4.3761 , allloss: 4.3763, dt: 913.62ms, fracRes: 0.2888, norm(attn): 0.3672, norm(output): 1.8828, norm(x): 1.6147, norm(y): 1.0090, norm:0.8095, tok/sec: 143464.61, flops:111.73, batch-reuse:1
@ 2360 train 4.4268 , allloss: 4.4270, dt: 904.67ms, fracRes: 0.2880, norm(attn): 0.3711, norm(output): 1.9375, norm(x): 1.6267, norm(y): 1.0091, norm:0.6405, tok/sec: 144883.31, flops:112.84, batch-reuse:1
@ 2361 train 4.3922 , allloss: 4.3924, dt: 904.88ms, fracRes: 0.2883, norm(attn): 0.3750, norm(output): 2.0000, norm(x): 1.6572, norm(y): 1.0092, norm:0.7728, tok/sec: 144850.41, flops:112.81, batch-reuse:1
@ 2362 train 4.3897 , allloss: 4.3898, dt: 899.49ms, fracRes: 0.2888, norm(attn): 0.3730, norm(output): 1.9766, norm(x): 1.6531, norm(y): 1.0091, norm:0.7511, tok/sec: 145717.57, flops:113.49, batch-reuse:1
@ 2363 train 4.4305 , allloss: 4.4307, dt: 893.86ms, fracRes: 0.2892, norm(attn): 0.3672, norm(output): 1.9531, norm(x): 1.6453, norm(y): 1.0091, norm:0.7467, tok/sec: 146635.65, flops:114.20, batch-reuse:1
@ 2364 train 4.3691 , allloss: 4.3695, dt: 921.96ms, fracRes: 0.2894, norm(attn): 0.3711, norm(output): 1.9844, norm(x): 1.6673, norm(y): 1.0093, norm:0.8572, tok/sec: 142166.96, flops:110.72, batch-reuse:1
@ 2365 train 4.3824 , allloss: 4.3831, dt: 894.10ms, fracRes: 0.2899, norm(attn): 0.3711, norm(output): 1.9844, norm(x): 1.6567, norm(y): 1.0092, norm:0.7588, tok/sec: 146596.39, flops:114.17, batch-reuse:1
@ 2366 train 4.3957 , allloss: 4.3961, dt: 916.17ms, fracRes: 0.2891, norm(attn): 0.3691, norm(output): 1.9375, norm(x): 1.6399, norm(y): 1.0090, norm:0.7296, tok/sec: 143064.43, flops:111.42, batch-reuse:1
@ 2367 train 4.3176 , allloss: 4.3179, dt: 920.10ms, fracRes: 0.2884, norm(attn): 0.3711, norm(output): 1.9688, norm(x): 1.6377, norm(y): 1.0090, norm:0.6625, tok/sec: 142454.09, flops:110.94, batch-reuse:1
@ 2368 train 4.2199 , allloss: 4.2203, dt: 920.98ms, fracRes: 0.2885, norm(attn): 0.3711, norm(output): 1.9766, norm(x): 1.6375, norm(y): 1.0089, norm:0.7662, tok/sec: 142317.34, flops:110.84, batch-reuse:1
@ 2369 train 4.2720 , allloss: 4.2723, dt: 913.73ms, fracRes: 0.2874, norm(attn): 0.3730, norm(output): 1.9844, norm(x): 1.6428, norm(y): 1.0089, norm:0.8902, tok/sec: 143446.42, flops:111.72, batch-reuse:1
@ 2370 train 4.3147 , allloss: 4.3173, dt: 894.19ms, fracRes: 0.2876, norm(attn): 0.3711, norm(output): 1.9844, norm(x): 1.6398, norm(y): 1.0088, norm:0.8500, tok/sec: 146582.36, flops:114.16, batch-reuse:1
@ 2371 train 4.1653 , allloss: 4.1655, dt: 903.04ms, fracRes: 0.2868, norm(attn): 0.3730, norm(output): 1.9219, norm(x): 1.6261, norm(y): 1.0086, norm:0.8354, tok/sec: 145144.57, flops:113.04, batch-reuse:1
@ 2372 train 4.2172 , allloss: 4.2176, dt: 906.08ms, fracRes: 0.2872, norm(attn): 0.3750, norm(output): 2.0000, norm(x): 1.6603, norm(y): 1.0088, norm:0.9340, tok/sec: 144658.15, flops:112.66, batch-reuse:1
@ 2373 train 4.2980 , allloss: 4.2985, dt: 884.05ms, fracRes: 0.2883, norm(attn): 0.3730, norm(output): 1.9844, norm(x): 1.6522, norm(y): 1.0087, norm:0.8023, tok/sec: 148262.29, flops:115.47, batch-reuse:1
@ 2374 train 4.2490 , allloss: 4.2492, dt: 898.69ms, fracRes: 0.2880, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6612, norm(y): 1.0088, norm:0.8465, tok/sec: 145848.35, flops:113.59, batch-reuse:1
@ 2375 train 4.2876 , allloss: 4.2878, dt: 901.64ms, fracRes: 0.2878, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6575, norm(y): 1.0087, norm:0.7222, tok/sec: 145370.32, flops:113.21, batch-reuse:1
@ 2376 train 4.3002 , allloss: 4.3006, dt: 898.25ms, fracRes: 0.2884, norm(attn): 0.3730, norm(output): 1.9844, norm(x): 1.6597, norm(y): 1.0088, norm:0.6311, tok/sec: 145919.35, flops:113.64, batch-reuse:1
@ 2377 train 4.2483 , allloss: 4.2485, dt: 896.02ms, fracRes: 0.2896, norm(attn): 0.3750, norm(output): 2.0000, norm(x): 1.6733, norm(y): 1.0088, norm:0.7497, tok/sec: 146281.80, flops:113.92, batch-reuse:1
@ 2378 train 4.2425 , allloss: 4.2429, dt: 893.84ms, fracRes: 0.2889, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6709, norm(y): 1.0087, norm:0.8089, tok/sec: 146639.75, flops:114.20, batch-reuse:1
@ 2379 train 4.2278 , allloss: 4.2281, dt: 905.89ms, fracRes: 0.2889, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6670, norm(y): 1.0086, norm:0.9552, tok/sec: 144688.42, flops:112.68, batch-reuse:1
@ 2380 train 4.3188 , allloss: 4.3204, dt: 905.16ms, fracRes: 0.2906, norm(attn): 0.3730, norm(output): 1.9922, norm(x): 1.6785, norm(y): 1.0090, norm:1.1203, tok/sec: 144805.80, flops:112.78, batch-reuse:1
@ 2381 train 4.3543 , allloss: 4.3552, dt: 906.22ms, fracRes: 0.2898, norm(attn): 0.3672, norm(output): 1.9922, norm(x): 1.6605, norm(y): 1.0088, norm:0.8951, tok/sec: 144635.70, flops:112.64, batch-reuse:1
@ 2382 train 4.3220 , allloss: 4.3272, dt: 909.15ms, fracRes: 0.2897, norm(attn): 0.3691, norm(output): 1.9844, norm(x): 1.6500, norm(y): 1.0086, norm:0.9384, tok/sec: 144170.07, flops:112.28, batch-reuse:1
@ 2383 train 4.2619 , allloss: 4.2720, dt: 884.69ms, fracRes: 0.2896, norm(attn): 0.3750, norm(output): 2.0000, norm(x): 1.6650, norm(y): 1.0087, norm:0.8520, tok/sec: 148155.80, flops:115.38, batch-reuse:1
@ 2384 train 4.2786 , allloss: 4.2890, dt: 900.54ms, fracRes: 0.2896, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6662, norm(y): 1.0088, norm:0.8796, tok/sec: 145548.79, flops:113.35, batch-reuse:1
@ 2385 train 4.2588 , allloss: 4.2606, dt: 899.41ms, fracRes: 0.2894, norm(attn): 0.3711, norm(output): 1.9844, norm(x): 1.6579, norm(y): 1.0087, norm:0.9801, tok/sec: 145730.90, flops:113.50, batch-reuse:1
@ 2386 train 4.2209 , allloss: 4.2217, dt: 916.88ms, fracRes: 0.2895, norm(attn): 0.3730, norm(output): 1.9688, norm(x): 1.6508, norm(y): 1.0087, norm:0.8722, tok/sec: 142953.60, flops:111.33, batch-reuse:1
@ 2387 train 4.2780 , allloss: 4.2829, dt: 902.71ms, fracRes: 0.2887, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6646, norm(y): 1.0087, norm:0.7626, tok/sec: 145198.12, flops:113.08, batch-reuse:1
@ 2388 train 4.2946 , allloss: 4.3022, dt: 919.30ms, fracRes: 0.2894, norm(attn): 0.3711, norm(output): 2.0000, norm(x): 1.6741, norm(y): 1.0087, norm:0.7260, tok/sec: 142578.81, flops:111.04, batch-reuse:1
@ 2389 train 4.2384 , allloss: 4.2391, dt: 915.58ms, fracRes: 0.2898, norm(attn): 0.3730, norm(output): 2.0000, norm(x): 1.6644, norm(y): 1.0086, norm:0.6139, tok/sec: 143157.49, flops:111.49, batch-reuse:1
@ 2390 train 4.2826 , allloss: 4.2833, dt: 920.89ms, fracRes: 0.2893, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6777, norm(y): 1.0086, norm:0.6828, tok/sec: 142331.31, flops:110.85, batch-reuse:1
@ 2391 train 4.3414 , allloss: 4.3436, dt: 923.10ms, fracRes: 0.2887, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6695, norm(y): 1.0085, norm:0.6721, tok/sec: 141991.81, flops:110.58, batch-reuse:1
@ 2392 train 4.3351 , allloss: 4.3357, dt: 913.32ms, fracRes: 0.2871, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6624, norm(y): 1.0085, norm:0.6328, tok/sec: 143512.32, flops:111.77, batch-reuse:1
@ 2393 train 4.3623 , allloss: 4.3628, dt: 917.95ms, fracRes: 0.2884, norm(attn): 0.3750, norm(output): 1.9844, norm(x): 1.6741, norm(y): 1.0085, norm:0.6517, tok/sec: 142787.30, flops:111.20, batch-reuse:1
@ 2394 train 4.3030 , allloss: 4.3032, dt: 898.50ms, fracRes: 0.2868, norm(attn): 0.3750, norm(output): 1.9922, norm(x): 1.6556, norm(y): 1.0083, norm:0.7873, tok/sec: 145877.96, flops:113.61, batch-reuse:1
@ 2395 train 4.2399 , allloss: 4.2408, dt: 894.92ms, fracRes: 0.2876, norm(attn): 0.3770, norm(output): 2.0000, norm(x): 1.6760, norm(y): 1.0083, norm:0.8919, tok/sec: 146462.04, flops:114.07, batch-reuse:1
@ 2396 train 4.2649 , allloss: 4.2656, dt: 908.75ms, fracRes: 0.2872, norm(attn): 0.3750, norm(output): 2.0156, norm(x): 1.6800, norm(y): 1.0083, norm:0.6982, tok/sec: 144233.39, flops:112.33, batch-reuse:1
@ 2397 train 4.2369 , allloss: 4.2372, dt: 902.89ms, fracRes: 0.2876, norm(attn): 0.3730, norm(output): 2.0000, norm(x): 1.6728, norm(y): 1.0083, norm:0.6751, tok/sec: 145170.02, flops:113.06, batch-reuse:1
@ 2398 train 4.2939 , allloss: 4.2944, dt: 901.50ms, fracRes: 0.2884, norm(attn): 0.3730, norm(output): 2.0000, norm(x): 1.6829, norm(y): 1.0083, norm:0.6977, tok/sec: 145393.24, flops:113.23, batch-reuse:1
@ 2399 train 4.2517 , allloss: 4.2520, dt: 893.11ms, fracRes: 0.2867, norm(attn): 0.3770, norm(output): 2.0000, norm(x): 1.6760, norm(y): 1.0082, norm:0.7620, tok/sec: 146759.70, flops:114.30, batch-reuse:1
@ 2400 train 4.2296 , allloss: 4.2297, dt: 894.08ms, fracRes: 0.2875, norm(attn): 0.3770, norm(output): 2.0312, norm(x): 1.7019, norm(y): 1.0084, norm:0.7201, tok/sec: 146599.36, flops:114.17, batch-reuse:1
@ 2401 train 4.3310 , allloss: 4.3313, dt: 923.42ms, fracRes: 0.2876, norm(attn): 0.3770, norm(output): 2.0156, norm(x): 1.6979, norm(y): 1.0083, norm:0.7025, tok/sec: 141942.18, flops:110.55, batch-reuse:1
@ 2402 train 4.2770 , allloss: 4.2773, dt: 917.12ms, fracRes: 0.2887, norm(attn): 0.3770, norm(output): 2.0156, norm(x): 1.6956, norm(y): 1.0083, norm:0.7103, tok/sec: 142917.33, flops:111.30, batch-reuse:1
@ 2403 train 4.1711 , allloss: 4.1743, dt: 913.60ms, fracRes: 0.2893, norm(attn): 0.3789, norm(output): 2.0625, norm(x): 1.7160, norm(y): 1.0084, norm:0.7580, tok/sec: 143467.49, flops:111.73, batch-reuse:1
@ 2404 train 4.1899 , allloss: 4.1902, dt: 890.01ms, fracRes: 0.2887, norm(attn): 0.3770, norm(output): 2.0938, norm(x): 1.7241, norm(y): 1.0083, norm:0.8259, tok/sec: 147270.31, flops:114.69, batch-reuse:1
@ 2405 train 4.2717 , allloss: 4.2720, dt: 912.11ms, fracRes: 0.2895, norm(attn): 0.3789, norm(output): 2.0938, norm(x): 1.7276, norm(y): 1.0084, norm:0.9121, tok/sec: 143701.35, flops:111.92, batch-reuse:1
@ 2406 train 4.2388 , allloss: 4.2390, dt: 922.70ms, fracRes: 0.2900, norm(attn): 0.3730, norm(output): 2.0312, norm(x): 1.6994, norm(y): 1.0083, norm:0.9236, tok/sec: 142051.95, flops:110.63, batch-reuse:1
@ 2407 train 4.2129 , allloss: 4.2131, dt: 902.45ms, fracRes: 0.2895, norm(attn): 0.3750, norm(output): 2.0156, norm(x): 1.6984, norm(y): 1.0083, norm:0.8637, tok/sec: 145239.82, flops:113.11, batch-reuse:1
@ 2408 train 4.2545 , allloss: 4.2553, dt: 914.16ms, fracRes: 0.2880, norm(attn): 0.3750, norm(output): 2.0156, norm(x): 1.6927, norm(y): 1.0082, norm:0.7911, tok/sec: 143379.97, flops:111.66, batch-reuse:1
@ 2409 train 4.2329 , allloss: 4.2333, dt: 898.41ms, fracRes: 0.2876, norm(attn): 0.3730, norm(output): 2.0156, norm(x): 1.6832, norm(y): 1.0082, norm:0.7315, tok/sec: 145892.59, flops:113.62, batch-reuse:1
@ 2410 train 4.1987 , allloss: 4.1989, dt: 888.71ms, fracRes: 0.2893, norm(attn): 0.3691, norm(output): 2.0312, norm(x): 1.6907, norm(y): 1.0084, norm:0.7081, tok/sec: 147486.47, flops:114.86, batch-reuse:1
@ 2411 train 4.2940 , allloss: 4.2942, dt: 903.08ms, fracRes: 0.2879, norm(attn): 0.3691, norm(output): 2.0625, norm(x): 1.6928, norm(y): 1.0083, norm:0.7544, tok/sec: 145138.82, flops:113.03, batch-reuse:1
@ 2412 train 4.2726 , allloss: 4.2735, dt: 901.62ms, fracRes: 0.2884, norm(attn): 0.3730, norm(output): 2.0625, norm(x): 1.7099, norm(y): 1.0082, norm:0.8409, tok/sec: 145374.59, flops:113.22, batch-reuse:1
@ 2413 train 4.3250 , allloss: 4.3254, dt: 899.17ms, fracRes: 0.2891, norm(attn): 0.3711, norm(output): 2.1094, norm(x): 1.7182, norm(y): 1.0083, norm:0.8376, tok/sec: 145769.69, flops:113.53, batch-reuse:1
@ 2414 train 4.2817 , allloss: 4.2819, dt: 894.73ms, fracRes: 0.2899, norm(attn): 0.3691, norm(output): 2.0625, norm(x): 1.7083, norm(y): 1.0083, norm:0.7781, tok/sec: 146493.34, flops:114.09, batch-reuse:1
@ 2415 train 4.4120 , allloss: 4.4122, dt: 900.08ms, fracRes: 0.2892, norm(attn): 0.3711, norm(output): 2.0156, norm(x): 1.6971, norm(y): 1.0083, norm:0.6951, tok/sec: 145622.96, flops:113.41, batch-reuse:1
@ 2416 train 4.3627 , allloss: 4.3629, dt: 919.16ms, fracRes: 0.2886, norm(attn): 0.3711, norm(output): 2.0156, norm(x): 1.6859, norm(y): 1.0081, norm:0.7080, tok/sec: 142600.48, flops:111.06, batch-reuse:1
@ 2417 train 4.3993 , allloss: 4.3995, dt: 902.95ms, fracRes: 0.2875, norm(attn): 0.3711, norm(output): 2.0000, norm(x): 1.6867, norm(y): 1.0080, norm:0.8055, tok/sec: 145159.32, flops:113.05, batch-reuse:1
@ 2418 train 4.4387 , allloss: 4.4390, dt: 899.75ms, fracRes: 0.2882, norm(attn): 0.3730, norm(output): 2.0938, norm(x): 1.7199, norm(y): 1.0081, norm:0.8996, tok/sec: 145675.87, flops:113.45, batch-reuse:1
@ 2419 train 4.4175 , allloss: 4.4178, dt: 893.25ms, fracRes: 0.2885, norm(attn): 0.3750, norm(output): 2.0781, norm(x): 1.7254, norm(y): 1.0083, norm:1.0123, tok/sec: 146735.57, flops:114.28, batch-reuse:1
@ 2420 train 4.4106 , allloss: 4.4108, dt: 911.60ms, fracRes: 0.2881, norm(attn): 0.3750, norm(output): 2.0781, norm(x): 1.7247, norm(y): 1.0081, norm:0.8941, tok/sec: 143782.04, flops:111.98, batch-reuse:1
@ 2421 train 4.4268 , allloss: 4.4273, dt: 915.03ms, fracRes: 0.2881, norm(attn): 0.3750, norm(output): 2.0312, norm(x): 1.7136, norm(y): 1.0080, norm:0.7638, tok/sec: 143242.79, flops:111.56, batch-reuse:1
@ 2422 train 4.4225 , allloss: 4.4228, dt: 897.54ms, fracRes: 0.2888, norm(attn): 0.3750, norm(output): 2.0938, norm(x): 1.7293, norm(y): 1.0081, norm:0.8989, tok/sec: 146033.97, flops:113.73, batch-reuse:1
@ 2423 train 4.5346 , allloss: 4.5352, dt: 909.61ms, fracRes: 0.2879, norm(attn): 0.3750, norm(output): 2.0781, norm(x): 1.7257, norm(y): 1.0080, norm:0.7967, tok/sec: 144097.41, flops:112.22, batch-reuse:1
@ 2424 train 4.4070 , allloss: 4.4072, dt: 910.97ms, fracRes: 0.2884, norm(attn): 0.3770, norm(output): 2.0469, norm(x): 1.7240, norm(y): 1.0079, norm:0.7661, tok/sec: 143881.76, flops:112.06, batch-reuse:1
@ 2425 train 4.3489 , allloss: 4.3490, dt: 908.62ms, fracRes: 0.2885, norm(attn): 0.3770, norm(output): 2.0312, norm(x): 1.7178, norm(y): 1.0080, norm:0.7218, tok/sec: 144253.87, flops:112.35, batch-reuse:1
@ 2426 train 4.3550 , allloss: 4.3553, dt: 899.55ms, fracRes: 0.2874, norm(attn): 0.3789, norm(output): 2.0312, norm(x): 1.7064, norm(y): 1.0080, norm:0.7802, tok/sec: 145708.38, flops:113.48, batch-reuse:1
@ 2427 train 4.5474 , allloss: 4.5477, dt: 911.85ms, fracRes: 0.2868, norm(attn): 0.3730, norm(output): 2.0156, norm(x): 1.7040, norm(y): 1.0079, norm:0.8791, tok/sec: 143742.34, flops:111.95, batch-reuse:1
@ 2428 train 4.4448 , allloss: 4.4451, dt: 913.59ms, fracRes: 0.2874, norm(attn): 0.3750, norm(output): 2.0312, norm(x): 1.7108, norm(y): 1.0079, norm:0.8291, tok/sec: 143468.99, flops:111.73, batch-reuse:1
@ 2429 train 4.3932 , allloss: 4.3935, dt: 917.83ms, fracRes: 0.2868, norm(attn): 0.3730, norm(output): 2.0312, norm(x): 1.7088, norm(y): 1.0078, norm:0.7154, tok/sec: 142806.85, flops:111.22, batch-reuse:1
@ 2430 train 4.4195 , allloss: 4.4198, dt: 915.63ms, fracRes: 0.2859, norm(attn): 0.3730, norm(output): 2.0312, norm(x): 1.7048, norm(y): 1.0077, norm:0.6669, tok/sec: 143149.51, flops:111.49, batch-reuse:1
@ 2431 train 4.4248 , allloss: 4.4251, dt: 914.03ms, fracRes: 0.2859, norm(attn): 0.3770, norm(output): 2.0781, norm(x): 1.7211, norm(y): 1.0078, norm:0.7383, tok/sec: 143400.25, flops:111.68, batch-reuse:1
@ 2432 train 4.3172 , allloss: 4.3176, dt: 893.06ms, fracRes: 0.2875, norm(attn): 0.3750, norm(output): 2.0156, norm(x): 1.7062, norm(y): 1.0078, norm:0.7462, tok/sec: 146767.85, flops:114.30, batch-reuse:1
@ 2433 train 4.4023 , allloss: 4.4025, dt: 921.09ms, fracRes: 0.2882, norm(attn): 0.3750, norm(output): 2.0156, norm(x): 1.7062, norm(y): 1.0079, norm:0.7761, tok/sec: 142301.36, flops:110.82, batch-reuse:1
@ 2434 train 4.4427 , allloss: 4.4430, dt: 913.14ms, fracRes: 0.2885, norm(attn): 0.3750, norm(output): 2.0938, norm(x): 1.7391, norm(y): 1.0081, norm:0.7040, tok/sec: 143539.71, flops:111.79, batch-reuse:1
@ 2435 train 4.4741 , allloss: 4.4744, dt: 914.62ms, fracRes: 0.2872, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7430, norm(y): 1.0079, norm:0.8898, tok/sec: 143307.43, flops:111.61, batch-reuse:1
@ 2436 train 4.4186 , allloss: 4.4188, dt: 933.33ms, fracRes: 0.2890, norm(attn): 0.3750, norm(output): 2.0781, norm(x): 1.7396, norm(y): 1.0080, norm:1.0803, tok/sec: 140434.31, flops:109.37, batch-reuse:1
@ 2437 train 4.3529 , allloss: 4.3531, dt: 931.31ms, fracRes: 0.2895, norm(attn): 0.3730, norm(output): 2.0938, norm(x): 1.7429, norm(y): 1.0081, norm:1.1368, tok/sec: 140739.72, flops:109.61, batch-reuse:1
@ 2438 train 4.3719 , allloss: 4.3723, dt: 930.84ms, fracRes: 0.2877, norm(attn): 0.3789, norm(output): 2.1094, norm(x): 1.7461, norm(y): 1.0081, norm:1.0763, tok/sec: 140810.81, flops:109.66, batch-reuse:1
@ 2439 train 4.4558 , allloss: 4.4564, dt: 892.61ms, fracRes: 0.2875, norm(attn): 0.3750, norm(output): 2.0469, norm(x): 1.7236, norm(y): 1.0080, norm:0.9275, tok/sec: 146841.55, flops:114.36, batch-reuse:1
@ 2440 train 4.3752 , allloss: 4.3835, dt: 884.00ms, fracRes: 0.2872, norm(attn): 0.3770, norm(output): 2.0938, norm(x): 1.7642, norm(y): 1.0080, norm:1.0406, tok/sec: 148271.88, flops:115.47, batch-reuse:1
@ 2441 train 4.3324 , allloss: 4.3332, dt: 898.64ms, fracRes: 0.2870, norm(attn): 0.3789, norm(output): 2.1250, norm(x): 1.7612, norm(y): 1.0080, norm:0.9028, tok/sec: 145856.01, flops:113.59, batch-reuse:1
@ 2442 train 4.3754 , allloss: 4.3759, dt: 900.44ms, fracRes: 0.2870, norm(attn): 0.3770, norm(output): 2.1250, norm(x): 1.7515, norm(y): 1.0079, norm:0.8482, tok/sec: 145564.70, flops:113.37, batch-reuse:1
@ 2443 train 4.4923 , allloss: 4.4926, dt: 881.14ms, fracRes: 0.2869, norm(attn): 0.3750, norm(output): 2.0781, norm(x): 1.7390, norm(y): 1.0078, norm:0.7572, tok/sec: 148752.79, flops:115.85, batch-reuse:1
@ 2444 train 4.3627 , allloss: 4.3630, dt: 909.57ms, fracRes: 0.2860, norm(attn): 0.3750, norm(output): 2.0312, norm(x): 1.7191, norm(y): 1.0076, norm:0.7240, tok/sec: 144102.96, flops:112.23, batch-reuse:1
@ 2445 train 4.3368 , allloss: 4.3369, dt: 916.47ms, fracRes: 0.2858, norm(attn): 0.3809, norm(output): 2.0781, norm(x): 1.7338, norm(y): 1.0078, norm:0.7691, tok/sec: 143018.57, flops:111.38, batch-reuse:1
@ 2446 train 4.5734 , allloss: 4.5737, dt: 913.44ms, fracRes: 0.2863, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7357, norm(y): 1.0079, norm:0.8133, tok/sec: 143492.17, flops:111.75, batch-reuse:1
@ 2447 train 4.4630 , allloss: 4.4632, dt: 904.22ms, fracRes: 0.2870, norm(attn): 0.3730, norm(output): 2.1094, norm(x): 1.7351, norm(y): 1.0078, norm:0.8725, tok/sec: 144955.28, flops:112.89, batch-reuse:1
@ 2448 train 4.4181 , allloss: 4.4185, dt: 915.74ms, fracRes: 0.2876, norm(attn): 0.3730, norm(output): 2.0938, norm(x): 1.7340, norm(y): 1.0078, norm:0.7599, tok/sec: 143131.88, flops:111.47, batch-reuse:1
@ 2449 train 4.4013 , allloss: 4.4016, dt: 915.70ms, fracRes: 0.2877, norm(attn): 0.3730, norm(output): 2.0625, norm(x): 1.7305, norm(y): 1.0078, norm:0.7477, tok/sec: 143138.66, flops:111.48, batch-reuse:1
@ 2450 train 4.3576 , allloss: 4.3581, dt: 909.52ms, fracRes: 0.2877, norm(attn): 0.3750, norm(output): 2.0625, norm(x): 1.7236, norm(y): 1.0077, norm:0.7113, tok/sec: 144111.91, flops:112.23, batch-reuse:1
@ 2451 train 4.4917 , allloss: 4.4920, dt: 914.76ms, fracRes: 0.2881, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7544, norm(y): 1.0079, norm:0.7272, tok/sec: 143285.13, flops:111.59, batch-reuse:1
@ 2452 train 4.3203 , allloss: 4.3208, dt: 918.35ms, fracRes: 0.2891, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7634, norm(y): 1.0079, norm:0.8739, tok/sec: 142725.10, flops:111.15, batch-reuse:1
@ 2453 train 4.3452 , allloss: 4.3454, dt: 912.47ms, fracRes: 0.2878, norm(attn): 0.3750, norm(output): 2.1250, norm(x): 1.7585, norm(y): 1.0078, norm:0.8397, tok/sec: 143645.59, flops:111.87, batch-reuse:1
@ 2454 train 4.3041 , allloss: 4.3043, dt: 908.46ms, fracRes: 0.2880, norm(attn): 0.3730, norm(output): 2.1094, norm(x): 1.7443, norm(y): 1.0077, norm:0.7818, tok/sec: 144279.69, flops:112.37, batch-reuse:1
@ 2455 train 4.4028 , allloss: 4.4031, dt: 898.12ms, fracRes: 0.2884, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7502, norm(y): 1.0077, norm:0.8217, tok/sec: 145940.19, flops:113.66, batch-reuse:1
@ 2456 train 4.4195 , allloss: 4.4201, dt: 887.46ms, fracRes: 0.2878, norm(attn): 0.3770, norm(output): 2.1250, norm(x): 1.7650, norm(y): 1.0077, norm:0.7014, tok/sec: 147693.38, flops:115.02, batch-reuse:1
@ 2457 train 4.5516 , allloss: 4.5523, dt: 909.60ms, fracRes: 0.2881, norm(attn): 0.3750, norm(output): 2.1250, norm(x): 1.7654, norm(y): 1.0076, norm:0.7300, tok/sec: 144098.24, flops:112.22, batch-reuse:1
@ 2458 train 4.2691 , allloss: 4.2694, dt: 904.10ms, fracRes: 0.2873, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7517, norm(y): 1.0075, norm:0.7700, tok/sec: 144975.20, flops:112.91, batch-reuse:1
@ 2459 train 4.3897 , allloss: 4.3899, dt: 911.48ms, fracRes: 0.2875, norm(attn): 0.3750, norm(output): 2.1250, norm(x): 1.7572, norm(y): 1.0076, norm:0.7318, tok/sec: 143801.45, flops:111.99, batch-reuse:1
@ 2460 train 4.4689 , allloss: 4.4690, dt: 908.58ms, fracRes: 0.2877, norm(attn): 0.3770, norm(output): 2.1094, norm(x): 1.7597, norm(y): 1.0077, norm:0.7833, tok/sec: 144260.64, flops:112.35, batch-reuse:1
@ 2461 train 4.3747 , allloss: 4.3751, dt: 905.66ms, fracRes: 0.2874, norm(attn): 0.3770, norm(output): 2.1094, norm(x): 1.7447, norm(y): 1.0076, norm:0.6570, tok/sec: 144724.61, flops:112.71, batch-reuse:1
@ 2462 train 4.4487 , allloss: 4.4490, dt: 907.00ms, fracRes: 0.2869, norm(attn): 0.3789, norm(output): 2.1094, norm(x): 1.7505, norm(y): 1.0075, norm:0.7039, tok/sec: 144511.34, flops:112.55, batch-reuse:1
@ 2463 train 4.4634 , allloss: 4.4636, dt: 897.08ms, fracRes: 0.2870, norm(attn): 0.3770, norm(output): 2.1094, norm(x): 1.7556, norm(y): 1.0076, norm:0.8714, tok/sec: 146109.45, flops:113.79, batch-reuse:1
@ 2464 train 4.3891 , allloss: 4.3892, dt: 883.25ms, fracRes: 0.2877, norm(attn): 0.3789, norm(output): 2.1250, norm(x): 1.7652, norm(y): 1.0076, norm:0.9885, tok/sec: 148397.08, flops:115.57, batch-reuse:1
@ 2465 train 4.3308 , allloss: 4.3310, dt: 891.11ms, fracRes: 0.2870, norm(attn): 0.3789, norm(output): 2.1094, norm(x): 1.7621, norm(y): 1.0074, norm:0.7962, tok/sec: 147087.72, flops:114.55, batch-reuse:1
@ 2466 train 4.4716 , allloss: 4.4719, dt: 914.09ms, fracRes: 0.2871, norm(attn): 0.3770, norm(output): 2.1406, norm(x): 1.7929, norm(y): 1.0075, norm:0.7679, tok/sec: 143390.03, flops:111.67, batch-reuse:1
@ 2467 train 4.3439 , allloss: 4.3440, dt: 895.64ms, fracRes: 0.2861, norm(attn): 0.3809, norm(output): 2.1562, norm(x): 1.7971, norm(y): 1.0076, norm:0.7959, tok/sec: 146345.08, flops:113.97, batch-reuse:1
@ 2468 train 4.4267 , allloss: 4.4268, dt: 902.34ms, fracRes: 0.2863, norm(attn): 0.3789, norm(output): 2.1250, norm(x): 1.7888, norm(y): 1.0076, norm:0.7912, tok/sec: 145258.55, flops:113.13, batch-reuse:1
@ 2469 train 4.5240 , allloss: 4.5242, dt: 900.52ms, fracRes: 0.2861, norm(attn): 0.3809, norm(output): 2.1250, norm(x): 1.7694, norm(y): 1.0075, norm:0.8416, tok/sec: 145551.98, flops:113.36, batch-reuse:1
@ 2470 train 4.3259 , allloss: 4.3263, dt: 900.71ms, fracRes: 0.2869, norm(attn): 0.3770, norm(output): 2.1094, norm(x): 1.7610, norm(y): 1.0074, norm:0.8674, tok/sec: 145521.47, flops:113.33, batch-reuse:1
@ 2471 train 4.3530 , allloss: 4.3533, dt: 920.32ms, fracRes: 0.2861, norm(attn): 0.3770, norm(output): 2.1094, norm(x): 1.7529, norm(y): 1.0073, norm:0.8020, tok/sec: 142419.73, flops:110.92, batch-reuse:1
@ 2472 train 4.4152 , allloss: 4.4153, dt: 903.45ms, fracRes: 0.2863, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7428, norm(y): 1.0073, norm:0.7953, tok/sec: 145079.19, flops:112.99, batch-reuse:1
@ 2473 train 4.3173 , allloss: 4.3176, dt: 902.65ms, fracRes: 0.2868, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7407, norm(y): 1.0073, norm:0.6404, tok/sec: 145207.44, flops:113.09, batch-reuse:1
@ 2474 train 4.3205 , allloss: 4.3207, dt: 896.17ms, fracRes: 0.2878, norm(attn): 0.3730, norm(output): 2.1094, norm(x): 1.7500, norm(y): 1.0074, norm:0.6227, tok/sec: 146257.79, flops:113.91, batch-reuse:1
@ 2475 train 4.3965 , allloss: 4.3966, dt: 892.44ms, fracRes: 0.2876, norm(attn): 0.3730, norm(output): 2.1250, norm(x): 1.7594, norm(y): 1.0074, norm:0.5883, tok/sec: 146869.71, flops:114.38, batch-reuse:1
@ 2476 train 4.3403 , allloss: 4.3407, dt: 888.68ms, fracRes: 0.2878, norm(attn): 0.3750, norm(output): 2.1250, norm(x): 1.7717, norm(y): 1.0074, norm:0.6631, tok/sec: 147490.70, flops:114.87, batch-reuse:1
@ 2477 train 4.3380 , allloss: 4.3382, dt: 895.50ms, fracRes: 0.2881, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7765, norm(y): 1.0074, norm:0.6182, tok/sec: 146367.17, flops:113.99, batch-reuse:1
@ 2478 train 4.3158 , allloss: 4.3161, dt: 895.97ms, fracRes: 0.2882, norm(attn): 0.3730, norm(output): 2.1094, norm(x): 1.7657, norm(y): 1.0074, norm:0.6513, tok/sec: 146290.36, flops:113.93, batch-reuse:1
@ 2479 train 4.3250 , allloss: 4.3253, dt: 885.91ms, fracRes: 0.2877, norm(attn): 0.3730, norm(output): 2.1250, norm(x): 1.7813, norm(y): 1.0075, norm:0.6603, tok/sec: 147951.70, flops:115.23, batch-reuse:1
@ 2480 train 4.4088 , allloss: 4.4091, dt: 901.42ms, fracRes: 0.2887, norm(attn): 0.3750, norm(output): 2.1406, norm(x): 1.7970, norm(y): 1.0076, norm:0.7452, tok/sec: 145405.46, flops:113.24, batch-reuse:1
@ 2481 train 4.3269 , allloss: 4.3274, dt: 892.36ms, fracRes: 0.2890, norm(attn): 0.3750, norm(output): 2.1562, norm(x): 1.7970, norm(y): 1.0075, norm:0.7901, tok/sec: 146882.51, flops:114.39, batch-reuse:1
@ 2482 train 4.4610 , allloss: 4.4612, dt: 895.13ms, fracRes: 0.2889, norm(attn): 0.3730, norm(output): 2.1406, norm(x): 1.8012, norm(y): 1.0074, norm:0.6677, tok/sec: 146427.36, flops:114.04, batch-reuse:1
@ 2483 train 4.3809 , allloss: 4.3811, dt: 909.25ms, fracRes: 0.2887, norm(attn): 0.3730, norm(output): 2.1562, norm(x): 1.8027, norm(y): 1.0073, norm:0.8011, tok/sec: 144154.46, flops:112.27, batch-reuse:1
@ 2484 train 4.3837 , allloss: 4.3838, dt: 904.39ms, fracRes: 0.2869, norm(attn): 0.3750, norm(output): 2.1406, norm(x): 1.7892, norm(y): 1.0071, norm:0.7845, tok/sec: 144927.85, flops:112.87, batch-reuse:1
@ 2485 train 4.3077 , allloss: 4.3079, dt: 914.14ms, fracRes: 0.2862, norm(attn): 0.3750, norm(output): 2.1406, norm(x): 1.7830, norm(y): 1.0071, norm:0.8601, tok/sec: 143382.85, flops:111.67, batch-reuse:1
@ 2486 train 4.3253 , allloss: 4.3255, dt: 917.37ms, fracRes: 0.2875, norm(attn): 0.3750, norm(output): 2.1406, norm(x): 1.7833, norm(y): 1.0073, norm:0.7259, tok/sec: 142878.48, flops:111.27, batch-reuse:1
@ 2487 train 4.4097 , allloss: 4.4100, dt: 892.30ms, fracRes: 0.2877, norm(attn): 0.3750, norm(output): 2.1094, norm(x): 1.7666, norm(y): 1.0071, norm:0.6614, tok/sec: 146892.79, flops:114.40, batch-reuse:1
@ 2488 train 4.3985 , allloss: 4.3987, dt: 890.92ms, fracRes: 0.2875, norm(attn): 0.3750, norm(output): 2.1250, norm(x): 1.7808, norm(y): 1.0071, norm:0.8159, tok/sec: 147120.20, flops:114.58, batch-reuse:1
@ 2489 train 4.3541 , allloss: 4.3543, dt: 921.72ms, fracRes: 0.2864, norm(attn): 0.3750, norm(output): 2.1562, norm(x): 1.7877, norm(y): 1.0071, norm:0.8127, tok/sec: 142203.48, flops:110.75, batch-reuse:1
@ 2490 train 4.3239 , allloss: 4.3243, dt: 920.21ms, fracRes: 0.2861, norm(attn): 0.3770, norm(output): 2.1562, norm(x): 1.7863, norm(y): 1.0071, norm:0.8510, tok/sec: 142436.70, flops:110.93, batch-reuse:1
@ 2491 train 4.4866 , allloss: 4.4868, dt: 921.66ms, fracRes: 0.2871, norm(attn): 0.3789, norm(output): 2.1250, norm(x): 1.7828, norm(y): 1.0072, norm:0.7620, tok/sec: 142213.23, flops:110.76, batch-reuse:1
@ 2492 train 4.4241 , allloss: 4.4243, dt: 895.68ms, fracRes: 0.2872, norm(attn): 0.3750, norm(output): 2.1250, norm(x): 1.7782, norm(y): 1.0071, norm:0.6930, tok/sec: 146337.91, flops:113.97, batch-reuse:1
@ 2493 train 4.3812 , allloss: 4.3814, dt: 915.31ms, fracRes: 0.2860, norm(attn): 0.3770, norm(output): 2.1250, norm(x): 1.7828, norm(y): 1.0070, norm:0.7055, tok/sec: 143198.99, flops:111.52, batch-reuse:1
@ 2494 train 4.3655 , allloss: 4.3657, dt: 881.85ms, fracRes: 0.2859, norm(attn): 0.3789, norm(output): 2.1719, norm(x): 1.8057, norm(y): 1.0072, norm:0.8594, tok/sec: 148633.23, flops:115.76, batch-reuse:1
@ 2495 train 4.3679 , allloss: 4.3681, dt: 896.46ms, fracRes: 0.2878, norm(attn): 0.3750, norm(output): 2.1562, norm(x): 1.8004, norm(y): 1.0072, norm:0.8927, tok/sec: 146210.17, flops:113.87, batch-reuse:1
@ 2496 train 4.3187 , allloss: 4.3189, dt: 885.24ms, fracRes: 0.2879, norm(attn): 0.3770, norm(output): 2.1250, norm(x): 1.7878, norm(y): 1.0070, norm:0.9073, tok/sec: 148064.03, flops:115.31, batch-reuse:1
@ 2497 train 4.3733 , allloss: 4.3734, dt: 915.70ms, fracRes: 0.2873, norm(attn): 0.3770, norm(output): 2.1250, norm(x): 1.7976, norm(y): 1.0070, norm:0.6952, tok/sec: 143137.88, flops:111.48, batch-reuse:1
@ 2498 train 4.3864 , allloss: 4.3866, dt: 907.64ms, fracRes: 0.2877, norm(attn): 0.3770, norm(output): 2.2031, norm(x): 1.8183, norm(y): 1.0072, norm:0.7168, tok/sec: 144409.53, flops:112.47, batch-reuse:1
@ 2499 train 4.3464 , allloss: 4.3466, dt: 905.26ms, fracRes: 0.2873, norm(attn): 0.3750, norm(output): 2.1406, norm(x): 1.8080, norm(y): 1.0071, norm:0.6982, tok/sec: 144789.25, flops:112.76, batch-reuse:1
@ 2500 train 4.3329 , allloss: 4.3331, dt: 894.34ms, fracRes: 0.2881, norm(attn): 0.3750, norm(output): 2.1250, norm(x): 1.8031, norm(y): 1.0071, norm:0.6864, tok/sec: 146557.47, flops:114.14, batch-reuse:1
@ 2501 train 4.2667 , allloss: 4.2671, dt: 888.00ms, fracRes: 0.2878, norm(attn): 0.3770, norm(output): 2.1406, norm(x): 1.7975, norm(y): 1.0070, norm:0.6883, tok/sec: 147603.21, flops:114.95, batch-reuse:1
@ 2502 train 4.4149 , allloss: 4.4151, dt: 890.02ms, fracRes: 0.2879, norm(attn): 0.3770, norm(output): 2.1562, norm(x): 1.8131, norm(y): 1.0071, norm:0.7349, tok/sec: 147269.33, flops:114.69, batch-reuse:1
@ 2503 train 4.3360 , allloss: 4.3364, dt: 896.25ms, fracRes: 0.2873, norm(attn): 0.3750, norm(output): 2.1562, norm(x): 1.8103, norm(y): 1.0070, norm:0.7053, tok/sec: 146244.75, flops:113.90, batch-reuse:1
@ 2504 train 4.3716 , allloss: 4.3720, dt: 903.53ms, fracRes: 0.2877, norm(attn): 0.3750, norm(output): 2.1875, norm(x): 1.8115, norm(y): 1.0071, norm:0.8520, tok/sec: 145066.02, flops:112.98, batch-reuse:1
@ 2505 train 4.3781 , allloss: 4.3783, dt: 895.32ms, fracRes: 0.2883, norm(attn): 0.3770, norm(output): 2.1875, norm(x): 1.8142, norm(y): 1.0070, norm:0.8367, tok/sec: 146397.10, flops:114.01, batch-reuse:1
@ 2506 train 4.4367 , allloss: 4.4370, dt: 905.44ms, fracRes: 0.2875, norm(attn): 0.3770, norm(output): 2.1406, norm(x): 1.8014, norm(y): 1.0068, norm:0.6740, tok/sec: 144760.66, flops:112.74, batch-reuse:1
@ 2507 train 4.3679 , allloss: 4.3685, dt: 905.13ms, fracRes: 0.2883, norm(attn): 0.3789, norm(output): 2.1875, norm(x): 1.8150, norm(y): 1.0069, norm:0.8712, tok/sec: 144810.42, flops:112.78, batch-reuse:1
@ 2508 train 4.3190 , allloss: 4.3193, dt: 893.17ms, fracRes: 0.2871, norm(attn): 0.3770, norm(output): 2.1719, norm(x): 1.7961, norm(y): 1.0068, norm:0.9343, tok/sec: 146748.81, flops:114.29, batch-reuse:1
@ 2509 train 4.2738 , allloss: 4.2740, dt: 900.66ms, fracRes: 0.2869, norm(attn): 0.3789, norm(output): 2.1250, norm(x): 1.7835, norm(y): 1.0067, norm:0.9136, tok/sec: 145528.52, flops:113.34, batch-reuse:1
@ 2510 train 4.3613 , allloss: 4.3616, dt: 896.53ms, fracRes: 0.2867, norm(attn): 0.3750, norm(output): 2.1250, norm(x): 1.7781, norm(y): 1.0067, norm:0.8035, tok/sec: 146198.67, flops:113.86, batch-reuse:1
@ 2511 train 4.3239 , allloss: 4.3242, dt: 898.36ms, fracRes: 0.2866, norm(attn): 0.3809, norm(output): 2.1406, norm(x): 1.7855, norm(y): 1.0066, norm:0.7702, tok/sec: 145900.76, flops:113.63, batch-reuse:1
@ 2512 train 4.3155 , allloss: 4.3161, dt: 891.42ms, fracRes: 0.2861, norm(attn): 0.3809, norm(output): 2.1250, norm(x): 1.7841, norm(y): 1.0066, norm:0.7188, tok/sec: 147038.04, flops:114.51, batch-reuse:1
@ 2513 train 4.3617 , allloss: 4.3620, dt: 916.32ms, fracRes: 0.2869, norm(attn): 0.3750, norm(output): 2.1562, norm(x): 1.7915, norm(y): 1.0066, norm:0.6673, tok/sec: 143041.27, flops:111.40, batch-reuse:1
@ 2514 train 4.4083 , allloss: 4.4086, dt: 905.99ms, fracRes: 0.2878, norm(attn): 0.3750, norm(output): 2.1562, norm(x): 1.8032, norm(y): 1.0067, norm:0.8219, tok/sec: 144671.90, flops:112.67, batch-reuse:1
@ 2515 train 4.3122 , allloss: 4.3142, dt: 886.65ms, fracRes: 0.2863, norm(attn): 0.3770, norm(output): 2.1562, norm(x): 1.7909, norm(y): 1.0065, norm:0.7892, tok/sec: 147828.77, flops:115.13, batch-reuse:1
@ 2516 train 4.2064 , allloss: 4.2066, dt: 900.99ms, fracRes: 0.2858, norm(attn): 0.3809, norm(output): 2.1562, norm(x): 1.7907, norm(y): 1.0065, norm:0.8312, tok/sec: 145476.34, flops:113.30, batch-reuse:1
@ 2517 train 4.2668 , allloss: 4.2671, dt: 898.93ms, fracRes: 0.2868, norm(attn): 0.3770, norm(output): 2.1250, norm(x): 1.7784, norm(y): 1.0065, norm:0.7304, tok/sec: 145808.55, flops:113.56, batch-reuse:1
@ 2518 train 4.2645 , allloss: 4.2656, dt: 898.87ms, fracRes: 0.2877, norm(attn): 0.3789, norm(output): 2.1562, norm(x): 1.7949, norm(y): 1.0066, norm:0.7427, tok/sec: 145818.29, flops:113.56, batch-reuse:1
@ 2519 train 4.3804 , allloss: 4.3807, dt: 896.31ms, fracRes: 0.2866, norm(attn): 0.3770, norm(output): 2.1406, norm(x): 1.7855, norm(y): 1.0065, norm:1.0784, tok/sec: 146235.07, flops:113.89, batch-reuse:1
@ 2520 train 4.3683 , allloss: 4.3688, dt: 893.11ms, fracRes: 0.2870, norm(attn): 0.3809, norm(output): 2.2188, norm(x): 1.8361, norm(y): 1.0068, norm:0.8310, tok/sec: 146758.41, flops:114.30, batch-reuse:1
@ 2521 train 4.2765 , allloss: 4.2768, dt: 906.60ms, fracRes: 0.2876, norm(attn): 0.3906, norm(output): 2.2500, norm(x): 1.8629, norm(y): 1.0067, norm:0.8516, tok/sec: 144575.53, flops:112.60, batch-reuse:1
@ 2522 train 4.3948 , allloss: 4.3950, dt: 900.30ms, fracRes: 0.2877, norm(attn): 0.3867, norm(output): 2.2656, norm(x): 1.8754, norm(y): 1.0066, norm:0.7899, tok/sec: 145587.52, flops:113.38, batch-reuse:1
@ 2523 train 4.3308 , allloss: 4.3313, dt: 925.00ms, fracRes: 0.2879, norm(attn): 0.3848, norm(output): 2.2656, norm(x): 1.8957, norm(y): 1.0066, norm:0.8745, tok/sec: 141698.77, flops:110.36, batch-reuse:1
@ 2524 train 4.3010 , allloss: 4.3013, dt: 920.83ms, fracRes: 0.2876, norm(attn): 0.3867, norm(output): 2.2656, norm(x): 1.8966, norm(y): 1.0066, norm:0.8426, tok/sec: 142340.56, flops:110.86, batch-reuse:1
@ 2525 train 4.2882 , allloss: 4.2884, dt: 900.21ms, fracRes: 0.2883, norm(attn): 0.3926, norm(output): 2.2812, norm(x): 1.9116, norm(y): 1.0068, norm:0.7704, tok/sec: 145600.90, flops:113.39, batch-reuse:1
@ 2526 train 4.4126 , allloss: 4.4129, dt: 901.05ms, fracRes: 0.2873, norm(attn): 0.3867, norm(output): 2.2812, norm(x): 1.8957, norm(y): 1.0067, norm:0.9466, tok/sec: 145466.25, flops:113.29, batch-reuse:1
@ 2527 train 4.3104 , allloss: 4.3107, dt: 905.21ms, fracRes: 0.2864, norm(attn): 0.3789, norm(output): 2.2656, norm(x): 1.8742, norm(y): 1.0066, norm:0.8457, tok/sec: 144797.99, flops:112.77, batch-reuse:1
@ 2528 train 4.3444 , allloss: 4.3449, dt: 892.91ms, fracRes: 0.2866, norm(attn): 0.3789, norm(output): 2.2500, norm(x): 1.8584, norm(y): 1.0065, norm:0.8438, tok/sec: 146791.95, flops:114.32, batch-reuse:1
@ 2529 train 4.3555 , allloss: 4.3559, dt: 904.43ms, fracRes: 0.2869, norm(attn): 0.3809, norm(output): 2.2344, norm(x): 1.8416, norm(y): 1.0065, norm:0.8524, tok/sec: 144922.00, flops:112.87, batch-reuse:1
@ 2530 train 4.3045 , allloss: 4.3049, dt: 902.82ms, fracRes: 0.2869, norm(attn): 0.3770, norm(output): 2.2500, norm(x): 1.8374, norm(y): 1.0065, norm:0.7755, tok/sec: 145180.33, flops:113.07, batch-reuse:1
@ 2531 train 4.2655 , allloss: 4.2657, dt: 895.15ms, fracRes: 0.2861, norm(attn): 0.3770, norm(output): 2.2500, norm(x): 1.8301, norm(y): 1.0064, norm:0.8878, tok/sec: 146425.18, flops:114.04, batch-reuse:1
@ 2532 train 4.3128 , allloss: 4.3130, dt: 892.53ms, fracRes: 0.2872, norm(attn): 0.3770, norm(output): 2.2344, norm(x): 1.8297, norm(y): 1.0065, norm:0.8950, tok/sec: 146854.30, flops:114.37, batch-reuse:1
@ 2533 train 4.2681 , allloss: 4.2775, dt: 895.97ms, fracRes: 0.2877, norm(attn): 0.3789, norm(output): 2.2344, norm(x): 1.8532, norm(y): 1.0066, norm:0.8549, tok/sec: 146290.13, flops:113.93, batch-reuse:1
@ 2534 train 4.4202 , allloss: 4.4204, dt: 903.59ms, fracRes: 0.2873, norm(attn): 0.3789, norm(output): 2.2500, norm(x): 1.8443, norm(y): 1.0066, norm:0.8345, tok/sec: 145056.49, flops:112.97, batch-reuse:1
@ 2535 train 4.2541 , allloss: 4.2544, dt: 899.82ms, fracRes: 0.2873, norm(attn): 0.3770, norm(output): 2.2500, norm(x): 1.8375, norm(y): 1.0066, norm:0.6119, tok/sec: 145664.37, flops:113.44, batch-reuse:1
@ 2536 train 4.3143 , allloss: 4.3145, dt: 886.74ms, fracRes: 0.2873, norm(attn): 0.3750, norm(output): 2.2344, norm(x): 1.8435, norm(y): 1.0065, norm:0.7286, tok/sec: 147813.18, flops:115.12, batch-reuse:1
@ 2537 train 4.3073 , allloss: 4.3075, dt: 902.90ms, fracRes: 0.2869, norm(attn): 0.3750, norm(output): 2.2344, norm(x): 1.8412, norm(y): 1.0064, norm:0.6838, tok/sec: 145167.64, flops:113.06, batch-reuse:1
@ 2538 train 4.4162 , allloss: 4.4163, dt: 893.25ms, fracRes: 0.2867, norm(attn): 0.3750, norm(output): 2.2344, norm(x): 1.8425, norm(y): 1.0063, norm:0.6588, tok/sec: 146735.73, flops:114.28, batch-reuse:1
@ 2539 train 4.3057 , allloss: 4.3059, dt: 893.60ms, fracRes: 0.2879, norm(attn): 0.3750, norm(output): 2.2344, norm(x): 1.8553, norm(y): 1.0063, norm:0.6358, tok/sec: 146678.80, flops:114.23, batch-reuse:1
@ 2540 train 4.3720 , allloss: 4.3722, dt: 885.36ms, fracRes: 0.2874, norm(attn): 0.3770, norm(output): 2.2344, norm(x): 1.8608, norm(y): 1.0063, norm:0.7001, tok/sec: 148043.57, flops:115.30, batch-reuse:1
@ 2541 train 4.3546 , allloss: 4.3549, dt: 916.06ms, fracRes: 0.2862, norm(attn): 0.3770, norm(output): 2.2500, norm(x): 1.8688, norm(y): 1.0063, norm:0.7163, tok/sec: 143083.08, flops:111.43, batch-reuse:1
@ 2542 train 4.3932 , allloss: 4.3934, dt: 905.02ms, fracRes: 0.2873, norm(attn): 0.3789, norm(output): 2.2656, norm(x): 1.8851, norm(y): 1.0065, norm:1.0427, tok/sec: 144827.13, flops:112.79, batch-reuse:1
@ 2543 train 4.3159 , allloss: 4.3161, dt: 916.53ms, fracRes: 0.2866, norm(attn): 0.3750, norm(output): 2.2344, norm(x): 1.8449, norm(y): 1.0063, norm:0.9442, tok/sec: 143008.64, flops:111.38, batch-reuse:1
@ 2544 train 4.3967 , allloss: 4.3970, dt: 899.76ms, fracRes: 0.2878, norm(attn): 0.3750, norm(output): 2.2344, norm(x): 1.8482, norm(y): 1.0063, norm:0.9335, tok/sec: 145675.02, flops:113.45, batch-reuse:1
@ 2545 train 4.3643 , allloss: 4.3647, dt: 890.03ms, fracRes: 0.2873, norm(attn): 0.3789, norm(output): 2.2344, norm(x): 1.8632, norm(y): 1.0063, norm:0.7841, tok/sec: 147266.92, flops:114.69, batch-reuse:1
@ 2546 train 4.3568 , allloss: 4.3570, dt: 899.35ms, fracRes: 0.2869, norm(attn): 0.3789, norm(output): 2.2344, norm(x): 1.8448, norm(y): 1.0062, norm:0.8869, tok/sec: 145740.67, flops:113.50, batch-reuse:1
@ 2547 train 4.3591 , allloss: 4.3596, dt: 887.32ms, fracRes: 0.2863, norm(attn): 0.3750, norm(output): 2.2344, norm(x): 1.8388, norm(y): 1.0061, norm:0.7231, tok/sec: 147716.75, flops:115.04, batch-reuse:1
@ 2548 train 4.4566 , allloss: 4.4568, dt: 901.95ms, fracRes: 0.2885, norm(attn): 0.3730, norm(output): 2.2500, norm(x): 1.8568, norm(y): 1.0063, norm:0.9181, tok/sec: 145320.14, flops:113.18, batch-reuse:1
@ 2549 train 4.4774 , allloss: 4.4779, dt: 923.15ms, fracRes: 0.2870, norm(attn): 0.3770, norm(output): 2.2500, norm(x): 1.8685, norm(y): 1.0061, norm:0.9667, tok/sec: 141983.71, flops:110.58, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0040,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0361,     0.8477,     0.1167,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0583,     0.2520,     0.1328,     0.5586,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0060,     0.3867,     0.0022,     0.5938,     0.0125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5312,     0.2119,     0.1152,     0.0466,     0.0182,     0.0762,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2393,     0.1250,     0.2227,     0.0364,     0.0491,     0.0737,     0.2539,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3633,     0.0225,     0.2461,     0.2656,     0.0114,     0.0245,     0.0601,     0.0085,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1157,     0.2041,     0.0295,     0.0947,     0.0098,     0.0298,     0.3477,     0.1328,     0.0356,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3027,     0.0630,     0.1084,     0.0654,     0.0645,     0.0461,     0.1079,     0.0581,     0.0510,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0623,     0.0003,     0.0752,     0.0036,     0.0077,     0.8398,     0.0044,     0.0025,     0.0009,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3516,     0.0684,     0.1289,     0.0518,     0.0197,     0.0302,     0.0096,     0.0156,     0.0170,     0.1279,     0.1050,     0.0752,     0.0000,     0.0000,     0.0000],
        [    0.1436,     0.0747,     0.1387,     0.0894,     0.0181,     0.0454,     0.0312,     0.0156,     0.0273,     0.2021,     0.0262,     0.1602,     0.0275,     0.0000,     0.0000],
        [    0.0105,     0.0796,     0.0019,     0.0212,     0.0049,     0.0156,     0.1426,     0.0938,     0.0216,     0.0020,     0.0027,     0.3633,     0.2285,     0.0124,     0.0000],
        [    0.0757,     0.1426,     0.0471,     0.0221,     0.0391,     0.0339,     0.0613,     0.0530,     0.0693,     0.0229,     0.1445,     0.1021,     0.0879,     0.0432,     0.0552]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0194, -0.0073, -0.0443,  ...,  0.0371,  0.0031, -0.0144],
        [-0.0489,  0.0270,  0.0479,  ..., -0.0441, -0.0138,  0.0032],
        [ 0.0061,  0.0276,  0.0154,  ..., -0.0143,  0.0031,  0.0229],
        ...,
        [ 0.0191,  0.0111,  0.0268,  ..., -0.0347,  0.0268,  0.0108],
        [ 0.0100,  0.0214, -0.0322,  ...,  0.0185, -0.0494, -0.0443],
        [ 0.0359, -0.0108,  0.0609,  ..., -0.0173,  0.0373,  0.0197]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2852, -1.0547,  0.3457, -1.4531, -0.6562,  0.4531, -0.0034,  0.3223, -0.4746, -0.3027, -1.2578,  0.6953,  0.2197, -1.0859, -0.0894, -0.4297, -0.0332, -0.6094,  0.2041,  0.8906,  0.4629,  0.1748, -0.7969,  0.1436, -0.9844,  0.2266, -2.0938, -0.1611,  1.5078,  0.9062, -0.3691, -0.5352,
         0.3242,  0.5156,  0.7734,  0.5195,  0.5625, -0.2480,  0.3066,  1.5391, -0.0170, -0.3262, -0.1328, -0.1885, -0.5664,  0.0562,  1.9766, -1.1797, -0.5156,  1.0234,  0.8672, -0.6641, -0.0635, -0.5664,  0.0096,  0.9023,  0.3086,  0.5781, -0.0206,  0.0574,  1.5234,  0.4141,  0.1904,  0.8672],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0258,  0.0101,  0.0433,  ..., -0.0159,  0.0296, -0.0203],
        [ 0.0122, -0.0217, -0.0371,  ...,  0.0274, -0.0270, -0.0386],
        [ 0.0426, -0.0076, -0.0356,  ...,  0.0397, -0.0341, -0.0109],
        ...,
        [ 0.0330,  0.0246, -0.0372,  ...,  0.0456, -0.0346, -0.0337],
        [ 0.0119, -0.0052,  0.0024,  ..., -0.0144,  0.0238,  0.0227],
        [ 0.0194,  0.0351, -0.0760,  ..., -0.0104, -0.0564, -0.0280]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5000,  0.2295, -0.7969, -1.6875, -1.3438,  1.7344, -1.3906,  0.8203,  2.5938, -0.3301,  0.1533, -0.8438, -0.2158, -1.0156, -0.9023,  0.0991,  0.9102, -0.2656,  1.1094, -0.5469, -0.2617,  1.4609,  0.3770, -0.2559,  0.0723,  0.2012,  0.6211, -0.9688, -1.1641, -0.3848, -0.3926,  1.4531,
        -1.1875,  0.5000,  1.3828,  0.2891, -0.1216, -0.8047, -0.9766, -0.3984,  0.4004, -0.7383,  0.4902,  1.3594,  0.2559,  0.7109,  0.0386,  1.1797, -0.9336, -0.8711, -0.6172,  1.0938,  1.1016,  0.3672,  1.0000,  0.9609, -0.3457,  0.9023, -0.5078,  0.3867,  0.3340,  0.2324,  0.0664, -0.0216],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -5.5000,  0.0133, -1.8906, -2.7812, -2.6875, -3.2344, -1.8281, -1.3359, -0.6719, -1.6875, -1.6875, -1.8594, -2.2344, -0.1875],
        [ 0.0000,  3.1562,  1.1719,  2.6250, -0.6133,  1.0000,  2.4219,  0.3027, -0.7734,  0.2031, -0.4434,  3.7188,  0.8008,  0.9688,  1.1484],
        [ 0.0000,  1.4609,  0.8242,  2.2500,  0.0684, -0.5430,  1.9453, -0.2695,  0.1094,  0.4785,  0.1299,  2.3438,  0.6914,  0.5156,  1.0312],
        [ 0.0000,  4.1562, -1.0078,  4.5938,  0.7305,  2.4844,  6.1562,  1.6172,  1.8750, -0.0359, -0.4707,  6.1250,  2.1562,  1.8438,  1.5156],
        [ 0.0000, -0.9219, -1.5312, -2.4375, -3.3750, -1.9453, -1.6562, -1.3438, -1.9844, -1.5859, -2.5781, -0.4980, -1.0547, -2.6406, -2.0469],
        [ 0.0000, -0.6484, -0.0737, -1.8828, -1.5859, -1.1797,  0.0542, -0.5273, -0.8086, -0.8672, -0.9414, -0.5859, -0.3359, -1.3516, -0.4062],
        [ 0.0000, -2.7812, -0.3887, -0.3145, -3.4688, -2.6875, -1.7969, -3.7500, -3.7188,  0.6602, -1.7812, -0.6250, -3.7812, -2.8906, -1.1484],
        [ 0.0000,  0.5664, -1.3672, -0.1992, -2.4688, -1.3594,  1.1016,  0.1406, -1.1797, -1.7266, -2.7500,  1.8203,  1.1328, -1.2422, -0.8711],
        [ 0.0000, -1.5703, -1.0312, -1.5391, -1.5469, -1.8828, -1.0312, -1.6562, -1.7812, -0.8242, -0.5781, -0.9023, -0.1992, -2.3281, -0.7500],
        [ 0.0000,  3.7188, -1.5625,  3.9062,  0.8750,  1.6250,  6.3125,  1.0781,  0.5195, -0.4844, -0.2061,  6.2188,  1.7891,  0.8555,  2.6406],
        [ 0.0000, -1.6406, -1.0078, -1.9141, -2.8906, -2.4531, -3.5938, -3.1094, -3.0312, -1.0078, -1.2109, -1.5469, -1.5312, -2.7812, -1.4844],
        [ 0.0000, -0.6562, -0.0344, -0.4727, -2.0781, -1.1484, -1.5234, -2.2188, -1.6562,  0.3438, -1.6953,  0.1079, -1.6562, -1.1719, -1.3203],
        [ 0.0000,  2.0312, -1.7188,  0.7031, -0.7695,  0.3965,  2.6094,  2.1875,  0.7227, -1.6484, -1.3438,  3.5469,  3.0781,  0.1660,  0.1777],
        [ 0.0000,  0.6289, -0.4746, -1.2344, -0.6641, -0.8008, -0.2139, -0.3574, -0.0869, -1.1953,  0.6445,  0.2969,  0.1465, -0.5625, -0.3184]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6560],
        [0.4821],
        [0.2988],
        [0.2490],
        [0.3969],
        [0.1654],
        [0.2821],
        [0.0968],
        [0.2440],
        [0.0202],
        [0.1578],
        [0.1666],
        [0.0600],
        [0.0523]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0353, -0.0289, -0.0031,  ...,  0.0414, -0.0352, -0.0260],
        [ 0.0078, -0.0234,  0.0338,  ..., -0.0226,  0.0159, -0.0023],
        [-0.0046,  0.0471,  0.0250,  ..., -0.0594,  0.0072,  0.0196],
        ...,
        [-0.0215, -0.0079, -0.0167,  ...,  0.0390, -0.0060,  0.0429],
        [ 0.0310,  0.0209,  0.0180,  ..., -0.0293,  0.0508,  0.0143],
        [-0.0211, -0.0272, -0.0256,  ...,  0.0626, -0.0347,  0.0215]], device='cuda:0', requires_grad=True)
K: tensor([ 4.0312, -2.6406,  3.8281, -2.3906, -1.0859, -3.4844, -0.9453,  3.6094,  1.7266, -1.0781, -2.5938, -3.6406, -3.4844, -1.3047, -0.9961, -2.8750,  2.4219,  2.0156,  1.4297, -1.7266, -1.4609, -1.3516,  4.3438,  3.7500,  3.3594, -3.8906, -3.8438,  1.9453,  3.3125, -3.0625,  3.0000, -1.6250,
        -3.3281, -4.4062,  2.6875,  2.3438, -2.2812, -1.7500,  3.1406, -1.7578, -2.1719,  0.0437,  2.8125,  1.8438, -2.0781, -0.3711,  3.7656,  3.6719, -4.0312,  2.9062, -1.9688,  1.4141, -3.4531, -1.8750,  2.6094, -2.0312,  3.0781, -3.1562, -3.3594, -2.0938,  2.0781, -1.9922,  1.8672, -3.7500],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0061,  0.0184,  0.0375,  ..., -0.0310,  0.0253,  0.0078],
        [ 0.0231, -0.0122, -0.0219,  ...,  0.0082, -0.0422, -0.0282],
        [ 0.0292,  0.0141, -0.0253,  ...,  0.0551,  0.0148, -0.0117],
        ...,
        [-0.0111, -0.0015,  0.0068,  ..., -0.0508, -0.0104, -0.0650],
        [-0.0175, -0.0172, -0.0157,  ...,  0.0543, -0.0551,  0.0110],
        [ 0.0046,  0.0275,  0.0026,  ..., -0.0912,  0.0256, -0.0015]], device='cuda:0', requires_grad=True)
Q: tensor([-1.8750,  2.9219, -4.0000,  3.5781,  0.5664,  3.5156,  1.5469, -3.7188, -1.4688,  2.0469,  2.2969,  4.0938,  2.9531,  1.9844,  1.7109,  1.4375, -3.7656, -1.1172, -1.4531,  2.8281,  4.2812,  1.9609, -4.0938, -2.4062, -4.1250,  3.4844,  2.1719, -1.0703, -2.5312,  3.1250, -3.8906,  0.7188,
         2.8750,  4.1250, -1.0469, -4.0625,  2.1562,  2.3906, -3.4062,  1.0703,  2.3281, -3.7188, -3.4531, -1.1562, -0.4824,  1.1875, -2.5625, -4.2500,  2.9688, -2.2344,  2.9688, -1.0156,  3.3750,  3.7656, -3.5469,  2.4688, -3.5000,  3.5781,  3.1562,  2.3594, -2.7812,  1.5156, -4.0312,  3.6406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -94.0000,  -91.0000,  -98.5000,  -74.5000,  -78.5000,  -92.5000,  -98.0000,  -72.0000, -118.5000,  -88.5000,  -69.5000,  -70.0000,  -67.0000,  -61.0000],
        [   0.0000,  -92.5000,  -90.0000,  -98.5000,  -72.5000,  -81.5000,  -93.5000,  -96.0000,  -72.0000, -118.0000,  -89.0000,  -69.0000,  -64.0000,  -67.5000,  -63.0000],
        [   0.0000, -122.5000, -124.5000, -131.0000,  -94.5000, -107.0000, -124.5000, -132.0000,  -92.5000, -159.0000, -114.0000,  -89.5000,  -91.0000,  -85.5000,  -80.5000],
        [   0.0000,  -77.5000,  -78.0000,  -83.0000,  -59.5000,  -67.5000,  -78.5000,  -86.0000,  -59.0000, -100.0000,  -72.0000,  -58.0000,  -58.5000,  -55.0000,  -51.2500],
        [   0.0000,  -74.0000,  -70.0000,  -76.5000,  -60.0000,  -62.7500,  -72.5000,  -72.0000,  -56.7500,  -92.0000,  -71.5000,  -54.2500,  -51.0000,  -53.5000,  -48.7500],
        [   0.0000, -105.0000, -101.0000, -110.0000,  -84.5000,  -90.5000, -105.5000, -109.0000,  -81.0000, -132.0000, -101.0000,  -80.0000,  -73.5000,  -76.0000,  -70.0000],
        [   0.0000,  -75.5000,  -71.0000,  -77.5000,  -61.0000,  -65.5000,  -75.5000,  -76.5000,  -57.5000,  -94.5000,  -73.5000,  -57.0000,  -51.2500,  -54.0000,  -51.0000],
        [   0.0000,  -88.5000,  -87.0000,  -94.0000,  -69.5000,  -79.5000,  -90.0000,  -92.5000,  -68.5000, -113.0000,  -86.0000,  -67.5000,  -61.5000,  -64.0000,  -59.0000],
        [   0.0000, -111.5000, -112.0000, -120.5000,  -87.0000,  -98.5000, -113.5000, -121.0000,  -84.5000, -145.0000, -105.0000,  -83.0000,  -83.5000,  -78.5000,  -72.5000],
        [   0.0000, -103.0000, -104.0000, -110.5000,  -81.0000,  -89.0000, -104.5000, -112.0000,  -78.0000, -133.0000,  -96.5000,  -77.5000,  -77.5000,  -72.5000,  -67.5000],
        [   0.0000,  -86.5000,  -84.0000,  -91.0000,  -68.5000,  -74.5000,  -86.5000,  -90.0000,  -66.0000, -109.0000,  -82.0000,  -64.5000,  -61.7500,  -61.7500,  -56.5000],
        [   0.0000,  -63.7500,  -58.7500,  -65.5000,  -52.7500,  -56.0000,  -64.0000,  -62.7500,  -50.2500,  -78.5000,  -64.5000,  -49.5000,  -41.0000,  -47.7500,  -44.5000],
        [   0.0000,  -87.5000,  -86.0000,  -92.5000,  -68.5000,  -78.5000,  -89.0000,  -91.5000,  -67.5000, -111.5000,  -85.0000,  -66.5000,  -60.5000,  -63.2500,  -58.2500],
        [   0.0000,  -87.5000,  -84.5000,  -92.5000,  -69.0000,  -75.5000,  -87.0000,  -89.0000,  -67.5000, -111.0000,  -84.0000,  -65.5000,  -61.2500,  -63.2500,  -58.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0233, -0.0467, -0.0514,  ...,  0.0392, -0.0197,  0.0294],
        [ 0.0126,  0.0057,  0.0252,  ..., -0.0241,  0.0112, -0.0418],
        [ 0.0241,  0.0278, -0.0220,  ...,  0.0035,  0.0110,  0.0485],
        ...,
        [-0.0004, -0.0243, -0.0637,  ...,  0.0251, -0.0270,  0.0468],
        [ 0.0158,  0.0669,  0.0183,  ..., -0.0043,  0.0344, -0.0466],
        [-0.0592, -0.0395, -0.0269,  ...,  0.0503, -0.0225,  0.0419]], device='cuda:0', requires_grad=True)
K: tensor([ 2.3281, -2.1406, -2.5625,  3.1875, -2.5938,  5.0625,  2.8281,  1.6406,  2.7188,  1.5859, -2.2344,  2.0156,  2.7969, -2.9531,  2.8906, -3.6406, -2.8906, -3.1406, -2.1250,  3.0938, -3.5938,  2.0625, -2.1562,  2.5312, -2.6719, -3.0781, -3.8281,  3.4844, -1.6797, -2.3281,  3.4219, -2.5938,
        -4.1250, -1.0781, -1.4062,  1.5469,  2.4219,  1.4922,  1.3281, -2.7656, -4.4062,  2.1562, -3.1406, -1.8438,  3.8906, -2.6406, -2.7500,  3.0469,  1.3438, -0.7656,  2.0000,  3.1719, -1.6016, -3.2656, -2.3594,  2.8281, -2.8594,  1.8750, -1.0703, -2.8594,  2.9844, -3.0312,  1.1250, -1.8672],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0367,  0.0218,  0.0311,  ..., -0.0198,  0.0259, -0.0185],
        [ 0.0116, -0.0381, -0.0222,  ...,  0.0033, -0.0355,  0.0069],
        [ 0.0319,  0.0152,  0.0249,  ...,  0.0165,  0.0274, -0.0538],
        ...,
        [-0.0020,  0.0253,  0.0179,  ..., -0.0219,  0.0187, -0.0227],
        [ 0.0071, -0.0462, -0.0114,  ...,  0.0640, -0.0349, -0.0378],
        [ 0.0205,  0.0043,  0.0679,  ..., -0.0432,  0.0417, -0.0515]], device='cuda:0', requires_grad=True)
Q: tensor([-1.6094,  2.7500,  2.5469, -2.2031,  2.1562, -2.4688, -2.9531, -1.3359, -3.1250, -0.6172, -0.7891, -2.6719, -3.0156,  3.0625, -1.7266,  4.0312,  2.5469,  3.5469,  2.6719, -1.2891,  2.8750, -2.7812,  2.7031, -2.5781,  2.6250,  2.5469,  2.7188, -2.8438,  2.7344,  2.6562, -2.8750,  2.8906,
         2.3125,  1.8906,  2.8750, -0.5039, -2.6875, -1.5625, -2.4375,  2.8594,  2.3594, -1.5625,  3.8281,  1.9766, -2.6719,  1.6953,  1.5859, -1.9688, -2.2188,  1.5391, -2.2344, -3.5156,  2.6250,  3.2656,  2.9219, -2.5469,  2.3438, -3.8594,  2.4219,  3.3906, -1.9922,  2.1719, -3.5312,  3.3125],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -71.0000,  -62.5000,  -76.0000,  -74.5000,  -62.2500,  -74.5000,  -79.5000,  -57.5000,  -81.0000,  -76.5000,  -64.5000,  -61.2500,  -53.2500,  -51.5000],
        [   0.0000,  -94.0000,  -87.0000, -109.5000, -103.0000,  -86.0000, -104.0000, -112.5000,  -80.0000, -111.0000, -107.0000,  -89.5000,  -89.0000,  -74.0000,  -70.5000],
        [   0.0000,  -92.0000,  -84.5000, -103.5000,  -97.5000,  -81.5000,  -99.0000, -105.0000,  -75.0000, -108.0000, -101.0000,  -85.0000,  -83.0000,  -69.5000,  -67.5000],
        [   0.0000,  -86.5000,  -77.0000,  -95.0000,  -92.5000,  -77.5000,  -92.0000,  -99.0000,  -71.5000,  -99.0000,  -96.0000,  -80.0000,  -77.5000,  -66.5000,  -63.5000],
        [   0.0000,  -63.2500,  -55.2500,  -66.5000,  -67.0000,  -55.7500,  -65.0000,  -69.5000,  -52.2500,  -71.5000,  -68.5000,  -57.5000,  -54.5000,  -48.2500,  -46.5000],
        [   0.0000,  -65.0000,  -58.2500,  -69.0000,  -69.5000,  -57.5000,  -69.5000,  -74.0000,  -53.7500,  -75.5000,  -72.0000,  -60.5000,  -56.2500,  -49.7500,  -49.0000],
        [   0.0000,  -67.5000,  -64.0000,  -79.5000,  -75.0000,  -61.7500,  -76.0000,  -83.5000,  -58.2500,  -82.0000,  -78.5000,  -65.0000,  -64.5000,  -54.0000,  -52.0000],
        [   0.0000,  -60.5000,  -53.2500,  -66.5000,  -66.0000,  -54.0000,  -64.5000,  -69.0000,  -52.0000,  -69.0000,  -68.0000,  -57.0000,  -54.5000,  -48.2500,  -44.7500],
        [   0.0000,  -87.5000,  -81.5000, -104.0000,  -96.5000,  -81.5000,  -97.0000, -106.0000,  -75.0000, -103.5000, -101.5000,  -83.5000,  -85.0000,  -70.0000,  -65.0000],
        [   0.0000,  -74.5000,  -67.0000,  -80.5000,  -79.0000,  -66.5000,  -78.5000,  -84.0000,  -60.7500,  -86.0000,  -82.0000,  -68.5000,  -65.5000,  -56.2500,  -55.2500],
        [   0.0000,  -37.0000,  -34.5000,  -44.0000,  -40.0000,  -35.5000,  -40.2500,  -44.5000,  -31.3750,  -42.7500,  -43.2500,  -34.5000,  -36.5000,  -29.3750,  -26.2500],
        [   0.0000,  -52.2500,  -48.7500,  -61.5000,  -57.7500,  -49.0000,  -57.2500,  -65.0000,  -45.2500,  -61.2500,  -61.2500,  -50.5000,  -51.7500,  -42.2500,  -38.7500],
        [   0.0000,  -57.2500,  -50.2500,  -62.5000,  -62.7500,  -51.0000,  -60.5000,  -65.5000,  -49.2500,  -65.5000,  -64.0000,  -54.0000,  -51.5000,  -45.7500,  -42.5000],
        [   0.0000,  -68.5000,  -62.7500,  -77.5000,  -74.5000,  -62.5000,  -74.5000,  -80.5000,  -57.5000,  -81.0000,  -78.0000,  -64.0000,  -62.5000,  -53.2500,  -51.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8636],
        [1.0000],
        [0.9818],
        [0.6668],
        [0.6819],
        [0.7995],
        [1.0000],
        [0.6669],
        [1.0000],
        [0.5833],
        [0.9990],
        [1.0000],
        [0.6657],
        [0.9974]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0033,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0090,     0.9609,     0.0309,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.9414,     0.0070,     0.0527,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1846,     0.5312,     0.1631,     0.0044,     0.1172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0352,     0.6953,     0.0532,     0.0126,     0.0474,     0.1582,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0125,     0.7461,     0.0718,     0.0092,     0.0216,     0.0396,     0.0986,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0239,     0.8555,     0.0170,     0.0219,     0.0525,     0.0033,     0.0106,     0.0170,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3398,     0.4473,     0.0942,     0.0135,     0.0311,     0.0157,     0.0120,     0.0425,     0.0043,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0054,     0.8945,     0.0128,     0.0049,     0.0129,     0.0004,     0.0023,     0.0030,     0.0059,     0.0571,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4941,     0.1553,     0.0356,     0.0055,     0.0376,     0.0145,     0.0109,     0.0303,     0.0057,     0.0933,     0.1172,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0134,     0.2539,     0.1689,     0.0292,     0.0275,     0.0081,     0.0083,     0.1240,     0.0150,     0.1631,     0.1221,     0.0669,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.7969,     0.0099,     0.0006,     0.0013,     0.0009,     0.0089,     0.0059,     0.0461,     0.0688,     0.0048,     0.0010,     0.0535,     0.0000,     0.0000],
        [    0.0542,     0.6172,     0.0476,     0.0070,     0.0156,     0.0052,     0.0069,     0.0110,     0.0038,     0.1992,     0.0093,     0.0033,     0.0104,     0.0114,     0.0000],
        [    0.0840,     0.2871,     0.0947,     0.1855,     0.1719,     0.0056,     0.0124,     0.0129,     0.0049,     0.0381,     0.0342,     0.0108,     0.0181,     0.0085,     0.0322]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0022,      0.0005,      0.0104,  ...,      0.0093,     -0.0015,      0.0710],
        [    -0.0242,     -0.0422,     -0.0048,  ...,     -0.0070,      0.0012,     -0.0229],
        [     0.0141,     -0.0025,      0.0226,  ...,      0.0074,     -0.0000,      0.0298],
        ...,
        [    -0.0231,      0.0037,      0.0199,  ...,      0.0199,      0.0571,      0.0571],
        [     0.0159,     -0.0492,      0.0365,  ...,      0.0167,     -0.0019,     -0.0494],
        [    -0.0175,      0.0106,     -0.0187,  ...,     -0.0159,     -0.0228,     -0.0591]], device='cuda:0', requires_grad=True)
K: tensor([-1.2969, -2.3594, -0.7383, -0.6289,  0.5000,  0.2598, -3.9375, -1.1172, -0.6836, -0.1318, -1.0078,  1.0391,  2.4219, -2.0469,  2.0469, -3.0312,  0.2812,  1.1016,  1.1875,  1.3516, -0.5625, -1.0938,  0.8438, -0.9219, -1.3984,  0.0172,  1.9375, -1.1953, -1.9688, -2.3125,  0.7500, -1.5234,
        -0.1289,  1.9219,  1.1172, -1.1953, -1.1406,  1.5469, -0.9727, -1.0703, -0.4688, -0.1504,  1.3672, -1.8750, -0.7383,  0.2070,  2.0938, -1.3047, -0.5391, -0.2148, -0.7695, -0.3301,  1.3359,  1.3047, -0.4180,  0.3613,  1.2969,  0.3789,  0.7852,  0.4004,  1.3516,  0.4141,  0.7266,  1.3047],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0148,  0.0284,  0.0058,  ...,  0.0369, -0.0306,  0.0130],
        [-0.0016,  0.0045, -0.0039,  ..., -0.0195, -0.0111,  0.0209],
        [-0.0300, -0.0053, -0.0166,  ..., -0.0162, -0.0278, -0.0223],
        ...,
        [-0.0117,  0.0019,  0.0042,  ...,  0.0276, -0.0187,  0.0102],
        [-0.0015,  0.0125, -0.0001,  ...,  0.0161,  0.0084,  0.0475],
        [-0.0200, -0.0017,  0.0134,  ...,  0.0051, -0.0319,  0.0736]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6172, -0.4434,  0.9297, -2.4062, -1.8516,  1.3281, -1.5000,  0.7500,  1.2031, -1.5859,  0.1348, -2.1562, -0.0383, -0.4043, -1.1172, -0.7812,  0.2812,  0.7344, -0.6562, -1.3672,  2.5000, -0.2891,  2.0000, -0.1719, -0.8164,  0.2910, -2.6406, -1.1406, -1.6641, -2.1406,  0.9531,  0.6328,
         0.1924, -0.3438, -0.8242, -0.2812, -2.0938, -0.4004,  0.9727, -0.3398,  0.9727, -0.6172, -0.2676,  1.4062,  0.1099,  1.2656, -3.3438,  0.9414,  0.4902, -0.1270, -0.9297,  0.9062, -1.0156, -0.1816,  1.1719,  0.4395,  0.2266,  2.3594, -2.3438,  0.8711,  0.5000, -1.5703, -4.0000,  0.7656],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -5.7188,     -5.3438,     -7.1875,     -6.8438,     -6.1875,     -7.2188,     -5.5312,     -8.6250,     -6.6875,     -8.0000,     -5.6250,     -6.5625,     -7.5312,     -5.4375],
        [     0.0000,      4.6562,      1.2344,      6.1562,      5.6875,     -0.8281,      1.8672,      2.8438,      2.5156,     -0.6406,      1.0625,     -2.2812,      0.9141,      1.2969,      0.3379],
        [     0.0000,      9.3750,      4.5000,      6.5000,     10.9375,      5.3125,      5.8750,      5.6562,      5.3750,      2.3906,      1.9219,      0.5547,      3.4688,      3.8125,      3.7656],
        [     0.0000,      1.0547,     -0.1196,     -3.7344,     -0.4512,      2.4062,      0.4531,      1.0625,     -1.9844,     -0.5781,     -5.4688,     -2.0156,     -1.9766,     -2.8594,      0.0038],
        [     0.0000,      2.9844,      0.4160,     -1.0234,      0.3008,      1.5078,      2.3594,      3.1406,      1.5312,      0.8984,     -2.7656,     -1.7422,     -1.4609,     -0.4648,      0.8203],
        [     0.0000,      4.0938,      1.7500,     -0.3027,      0.5430,      1.1562,      2.0625,      3.7656,      0.9961,      0.3242,     -4.4688,     -0.5195,     -1.8672,     -1.2031,      0.3574],
        [     0.0000,      3.5781,     -0.3477,     -0.0913,      0.7852,     -1.9844,     -0.8164,     -0.3438,      1.6562,      2.3594,     -1.0391,     -1.1484,      0.3359,      1.5078,      2.1250],
        [     0.0000,      0.2754,     -1.2812,     -3.2188,     -2.3906,     -3.0781,     -3.3438,     -2.0781,     -4.3750,     -0.1484,     -3.3125,     -3.5156,     -2.5938,     -3.8594,      0.5391],
        [     0.0000,      5.1250,      0.8633,     -0.0977,      0.8711,     -2.6719,     -0.8633,     -0.6016,      0.0859,      2.3594,      7.0938,      2.5938,      4.3438,      0.7227,      2.1719],
        [     0.0000,     -1.1562,     -2.6250,     -4.5000,     -2.5781,     -3.5312,     -3.8125,     -2.7969,     -4.4688,     -1.6719,     -1.4375,     -0.8555,     -0.6758,     -2.9688,     -0.3477],
        [     0.0000,      2.9375,      2.5312,      0.7812,      0.7227,     -0.4980,     -0.4746,      2.2188,      0.1104,      2.5000,      2.2031,      1.6094,      9.8750,      2.3906,      2.6250],
        [     0.0000,      6.9688,      2.5625,     -0.1650,      0.5625,      0.1543,      2.4531,      2.0469,      4.0938,      4.5000,      1.8438,      0.2578,      4.2500,      7.1250,      7.2812],
        [     0.0000,      2.4375,     -0.1299,     -2.0469,     -1.2500,     -2.3438,     -2.0625,     -1.5938,     -2.6562,      1.3047,     -1.7656,     -2.7969,     -1.6562,     -1.5547,      2.5625],
        [     0.0000,      1.2344,      0.1235,      0.7930,      0.7188,     -2.7031,     -1.9062,     -1.8750,     -2.8438,     -0.7891,     -0.8984,     -2.0469,     -1.5312,     -2.2812,     -0.9570]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2642],
        [0.0375],
        [0.0368],
        [0.1025],
        [0.0628],
        [0.0892],
        [0.0665],
        [0.0871],
        [0.0504],
        [0.0889],
        [0.0296],
        [0.0567],
        [0.0524],
        [0.0287]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0396,     0.7773,     0.1826,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.7070,     0.1719,     0.1162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0427,     0.4629,     0.0698,     0.0469,     0.3770,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0035,     0.4258,     0.0283,     0.0339,     0.2129,     0.2969,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0184,     0.1699,     0.0107,     0.0215,     0.3145,     0.1177,     0.3477,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0459,     0.1641,     0.0118,     0.0070,     0.5039,     0.0520,     0.1777,     0.0383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0688,     0.0045,     0.0017,     0.1445,     0.0972,     0.0273,     0.0050,     0.6484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0106,     0.1338,     0.0376,     0.0219,     0.0786,     0.0571,     0.0459,     0.1328,     0.3516,     0.1299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.0330,     0.0029,     0.0026,     0.0210,     0.0113,     0.0269,     0.0383,     0.8047,     0.0452,     0.0119,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0398,     0.0840,     0.0415,     0.0200,     0.1040,     0.0308,     0.0256,     0.2910,     0.2002,     0.0928,     0.0161,     0.0542,     0.0000,     0.0000,     0.0000],
        [    0.0179,     0.0374,     0.0042,     0.0009,     0.0576,     0.0061,     0.0128,     0.0060,     0.8359,     0.0130,     0.0013,     0.0031,     0.0045,     0.0000,     0.0000],
        [    0.0008,     0.0459,     0.0030,     0.0010,     0.0630,     0.0378,     0.0124,     0.0051,     0.3105,     0.0303,     0.0059,     0.0028,     0.0060,     0.4746,     0.0000],
        [    0.0064,     0.1660,     0.0605,     0.0476,     0.0410,     0.0728,     0.0977,     0.0557,     0.0649,     0.1235,     0.0251,     0.0281,     0.1030,     0.0752,     0.0327]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0273,  0.0019, -0.0251,  ..., -0.0448, -0.0391, -0.0062],
        [-0.0309,  0.0578, -0.0157,  ...,  0.0149, -0.0053,  0.0290],
        [ 0.0125,  0.0325, -0.0376,  ...,  0.0336,  0.0342,  0.0112],
        ...,
        [ 0.0166,  0.0099,  0.0174,  ..., -0.0252,  0.0014, -0.0356],
        [-0.0014,  0.0315,  0.0088,  ..., -0.0179,  0.0171, -0.0252],
        [-0.0354, -0.0113, -0.0574,  ..., -0.0188,  0.0201, -0.0013]], device='cuda:0', requires_grad=True)
K: tensor([-1.7969, -1.7500,  2.1719, -1.8828,  0.4180,  0.0315, -0.9531, -0.5898, -1.4922, -1.2969, -1.3828,  1.9141, -1.7969, -2.0000,  0.0309, -2.6562, -1.1641, -1.2188,  0.6523,  0.3438,  0.5312, -2.2500,  0.6797, -1.6953, -0.7539, -0.8242, -0.1768,  0.6719, -1.0312, -1.3125, -2.9219, -1.5625,
        -0.1445, -1.8047,  0.1182, -1.2812, -0.9922, -0.2812,  0.1021, -0.1309, -0.7422,  0.6328,  1.8906,  1.5000, -0.9844,  1.9453, -1.1641,  2.7656, -1.4375, -1.6172, -0.3320,  1.8594,  1.3125, -1.4062, -0.6289, -1.7734,  0.7734,  0.4414, -1.4375,  1.7109,  0.4980,  2.3594,  1.6797, -1.0312],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0273,  0.0009, -0.0033,  ...,  0.0237,  0.0018,  0.0285],
        [ 0.0535,  0.0223,  0.0384,  ..., -0.0464,  0.0151,  0.0213],
        [-0.0384, -0.0634, -0.0005,  ..., -0.0276,  0.0308,  0.0393],
        ...,
        [-0.0147,  0.0101,  0.0367,  ...,  0.0250,  0.0030, -0.0059],
        [ 0.0259, -0.0067, -0.0288,  ..., -0.0350,  0.0113, -0.0194],
        [ 0.0015,  0.0384,  0.0058,  ...,  0.0230, -0.0209,  0.0066]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4434,  1.9219,  1.0859,  0.1904,  1.1172,  1.0547,  0.9062, -1.3516, -1.3594, -0.5273, -0.5352, -0.1572,  0.0063, -0.7812, -0.4824, -1.1250,  0.7227,  0.7773,  1.3516,  0.7695, -0.6562,  0.8633, -0.1768, -0.6758,  0.3828,  1.3672,  0.6016, -0.4551,  0.2754, -0.2412, -0.2100, -1.8203,
        -0.2363, -0.0776, -0.6133, -0.9609, -2.2969, -0.6797,  1.0078, -0.6406, -1.5156, -0.1631, -0.0059,  0.5312,  1.0078,  0.7930,  0.8164,  0.6914,  0.7969, -0.6992, -0.6680, -0.5430, -0.2695, -0.1592, -2.6562, -0.6758, -0.5195,  0.5312, -0.3242, -0.3145, -1.3750, -0.1074, -0.6172, -0.2217],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  6.5000,  4.2812,  4.9375,  5.0000,  5.8750,  5.4375,  4.2812,  5.2812,  3.3438,  3.2500,  2.8438,  4.0625,  5.7188,  3.1406],
        [ 0.0000,  2.9844,  1.5312,  1.4141,  2.7188,  2.3750,  2.4375,  2.2656,  2.4531,  1.3125,  0.1953,  0.7188,  2.1406,  2.4219,  0.4043],
        [ 0.0000,  4.9688,  3.5625,  3.1719,  5.6562,  5.0938,  4.1250,  3.9375,  4.7812,  3.2812,  1.6641,  1.8906,  3.0000,  4.3750,  2.2188],
        [ 0.0000,  2.3750,  0.4922,  0.0913,  2.1719,  2.0312,  1.5547,  1.0391,  4.0625,  1.4062, -0.2617, -0.3008,  0.1787,  3.8906,  0.2197],
        [ 0.0000,  4.7812,  2.0938,  2.2656,  4.0938,  4.4375,  5.0938,  1.6875,  6.1562,  2.5469,  1.4688,  1.1953,  0.2949,  5.9062,  1.6641],
        [ 0.0000,  2.2188, -0.5469,  0.1514,  2.8281,  1.8516,  2.9375,  0.8164,  5.3438,  0.3770, -0.5430, -0.0461, -0.2256,  5.6250, -0.4141],
        [ 0.0000,  1.2734, -1.3516, -1.8828,  2.3906,  0.1260,  1.3516, -0.1768,  6.2188,  1.0156, -1.0938, -0.8867, -1.2578,  6.2500, -0.3516],
        [ 0.0000,  4.4375,  1.7188,  0.7383,  5.1875,  4.7812,  3.5156,  1.8125,  6.6875,  4.1875,  2.5625,  1.0312,  1.4297,  6.7500,  2.8438],
        [ 0.0000,  2.5312,  1.2656,  0.7266,  2.0000,  1.6875,  1.4688,  2.5312,  3.5000,  2.5000,  1.5547,  0.7383,  2.1094,  3.6406,  1.3281],
        [ 0.0000,  2.6875,  0.2520,  0.1309,  2.2344,  1.6172,  2.4844,  2.8281,  5.8750,  3.0000,  1.6641,  2.5781,  2.4375,  6.4688,  0.7461],
        [ 0.0000,  0.7461,  0.0383, -0.6875,  0.9570, -0.2617, -0.4414,  1.9844,  1.6172,  0.8438, -0.9102,  0.3047,  2.5469,  1.9062, -0.5938],
        [ 0.0000,  0.7344, -1.4609, -3.0469,  1.1641, -1.0703, -0.3359, -1.1016,  3.8438, -0.3242, -2.6406, -1.7578, -1.3828,  4.1250, -1.5391],
        [ 0.0000,  4.0000,  1.2500,  0.1709,  4.3125,  3.7969,  2.6875,  1.7969,  5.9062,  3.5781,  1.9453,  1.1953,  1.9531,  6.3438,  2.1719],
        [ 0.0000,  3.2500,  2.2344,  2.0000,  1.8516,  2.4219,  2.7188,  2.1562,  2.3125,  2.9531,  1.3594,  1.4688,  2.7656,  2.4531,  1.6172]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2392],
        [0.1329],
        [0.0471],
        [0.0641],
        [0.0313],
        [0.0518],
        [0.0600],
        [0.0436],
        [0.0268],
        [0.0461],
        [0.1308],
        [0.0580],
        [0.0208],
        [0.0181]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(!:0.0962 a:0.1348-:0.1035 green:0.0737assium:0.0850,:0.1523 a:0.1416iced:0.6523)
iced
------
		( a:0.1348-:0.1035 green:0.0737assium:0.0850,:0.1523 a:0.1416iced:0.6523 in:0.0693)
 in the soil.
The seeds are a good source of nutrients, and
@ 2550 train 4.4268 , allloss: 4.4274, dt: 1258.74ms, fracRes: 0.2869, norm(attn): 0.3789, norm(output): 2.2500, norm(x): 1.8706, norm(y): 1.0061, norm:0.9088, tok/sec: 104129.14, flops:81.10, batch-reuse:1
@ 2551 train 4.9615 , allloss: 4.9621, dt: 897.29ms, fracRes: 0.2904, norm(attn): 0.3750, norm(output): 2.2812, norm(x): 1.9091, norm(y): 1.0063, norm:2.3316, tok/sec: 146075.41, flops:113.76, batch-reuse:1
@ 2552 train 4.4127 , allloss: 4.4163, dt: 922.43ms, fracRes: 0.2879, norm(attn): 0.3789, norm(output): 2.2500, norm(x): 1.8911, norm(y): 1.0060, norm:1.3127, tok/sec: 142094.36, flops:110.66, batch-reuse:1
@ 2553 train 4.3969 , allloss: 4.3971, dt: 923.61ms, fracRes: 0.2882, norm(attn): 0.3750, norm(output): 2.2344, norm(x): 1.8757, norm(y): 1.0060, norm:0.7586, tok/sec: 141912.06, flops:110.52, batch-reuse:1
@ 2554 train 4.3718 , allloss: 4.3720, dt: 910.73ms, fracRes: 0.2870, norm(attn): 0.3750, norm(output): 2.2188, norm(x): 1.8570, norm(y): 1.0059, norm:0.8315, tok/sec: 143919.02, flops:112.08, batch-reuse:1
@ 2555 train 4.1741 , allloss: 4.1742, dt: 908.57ms, fracRes: 0.2865, norm(attn): 0.3789, norm(output): 2.2344, norm(x): 1.8588, norm(y): 1.0059, norm:0.7604, tok/sec: 144262.35, flops:112.35, batch-reuse:1
@ 2556 train 4.2585 , allloss: 4.2587, dt: 914.00ms, fracRes: 0.2874, norm(attn): 0.3828, norm(output): 2.2344, norm(x): 1.8740, norm(y): 1.0060, norm:0.9283, tok/sec: 143404.96, flops:111.68, batch-reuse:1
@ 2557 train 4.2859 , allloss: 4.2862, dt: 902.73ms, fracRes: 0.2869, norm(attn): 0.3750, norm(output): 2.2344, norm(x): 1.8467, norm(y): 1.0060, norm:0.7801, tok/sec: 145195.32, flops:113.08, batch-reuse:1
@ 2558 train 4.3109 , allloss: 4.3111, dt: 903.22ms, fracRes: 0.2865, norm(attn): 0.3770, norm(output): 2.2188, norm(x): 1.8341, norm(y): 1.0059, norm:0.7189, tok/sec: 145116.03, flops:113.02, batch-reuse:1
@ 2559 train 4.2856 , allloss: 4.2858, dt: 902.43ms, fracRes: 0.2870, norm(attn): 0.3770, norm(output): 2.2500, norm(x): 1.8490, norm(y): 1.0059, norm:0.7707, tok/sec: 145243.89, flops:113.12, batch-reuse:1
@ 2560 train 4.1795 , allloss: 4.1800, dt: 901.75ms, fracRes: 0.2862, norm(attn): 0.3789, norm(output): 2.2344, norm(x): 1.8549, norm(y): 1.0058, norm:0.7959, tok/sec: 145352.26, flops:113.20, batch-reuse:1
@ 2561 train 4.2406 , allloss: 4.2410, dt: 904.06ms, fracRes: 0.2849, norm(attn): 0.3809, norm(output): 2.2344, norm(x): 1.8676, norm(y): 1.0058, norm:0.8565, tok/sec: 144981.24, flops:112.91, batch-reuse:1
@ 2562 train 4.2580 , allloss: 4.2582, dt: 908.95ms, fracRes: 0.2852, norm(attn): 0.3789, norm(output): 2.2188, norm(x): 1.8444, norm(y): 1.0057, norm:1.2484, tok/sec: 144201.80, flops:112.30, batch-reuse:1
@ 2563 train 4.2336 , allloss: 4.2338, dt: 911.10ms, fracRes: 0.2843, norm(attn): 0.3867, norm(output): 2.2188, norm(x): 1.8495, norm(y): 1.0055, norm:1.2729, tok/sec: 143861.54, flops:112.04, batch-reuse:1
@ 2564 train 4.1479 , allloss: 4.1481, dt: 911.66ms, fracRes: 0.2854, norm(attn): 0.3809, norm(output): 2.2500, norm(x): 1.8668, norm(y): 1.0056, norm:0.7079, tok/sec: 143773.28, flops:111.97, batch-reuse:1
@ 2565 train 4.3581 , allloss: 4.3584, dt: 911.15ms, fracRes: 0.2851, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.8780, norm(y): 1.0055, norm:1.0573, tok/sec: 143854.02, flops:112.03, batch-reuse:1
@ 2566 train 4.2790 , allloss: 4.2797, dt: 907.77ms, fracRes: 0.2856, norm(attn): 0.3809, norm(output): 2.2500, norm(x): 1.8790, norm(y): 1.0056, norm:0.8786, tok/sec: 144389.05, flops:112.45, batch-reuse:1
@ 2567 train 4.2621 , allloss: 4.2641, dt: 900.37ms, fracRes: 0.2863, norm(attn): 0.3770, norm(output): 2.2500, norm(x): 1.8824, norm(y): 1.0055, norm:0.8308, tok/sec: 145575.50, flops:113.37, batch-reuse:1
@ 2568 train 4.2565 , allloss: 4.2568, dt: 908.90ms, fracRes: 0.2864, norm(attn): 0.3828, norm(output): 2.2500, norm(x): 1.8826, norm(y): 1.0055, norm:0.7006, tok/sec: 144208.72, flops:112.31, batch-reuse:1
@ 2569 train 4.3100 , allloss: 4.3104, dt: 905.53ms, fracRes: 0.2856, norm(attn): 0.3848, norm(output): 2.2500, norm(x): 1.8678, norm(y): 1.0054, norm:0.7356, tok/sec: 144745.64, flops:112.73, batch-reuse:1
@ 2570 train 4.2358 , allloss: 4.2360, dt: 901.63ms, fracRes: 0.2862, norm(attn): 0.3848, norm(output): 2.2656, norm(x): 1.8855, norm(y): 1.0055, norm:0.7541, tok/sec: 145371.82, flops:113.22, batch-reuse:1
@ 2571 train 4.2040 , allloss: 4.2043, dt: 903.79ms, fracRes: 0.2861, norm(attn): 0.3770, norm(output): 2.2656, norm(x): 1.8850, norm(y): 1.0054, norm:0.7055, tok/sec: 145024.76, flops:112.95, batch-reuse:1
@ 2572 train 4.3443 , allloss: 4.3445, dt: 886.24ms, fracRes: 0.2860, norm(attn): 0.3770, norm(output): 2.2500, norm(x): 1.8726, norm(y): 1.0054, norm:0.7295, tok/sec: 147897.21, flops:115.18, batch-reuse:1
@ 2573 train 4.2653 , allloss: 4.2656, dt: 897.19ms, fracRes: 0.2853, norm(attn): 0.3789, norm(output): 2.2656, norm(x): 1.8787, norm(y): 1.0054, norm:0.8571, tok/sec: 146091.71, flops:113.78, batch-reuse:1
@ 2574 train 4.2068 , allloss: 4.2073, dt: 900.31ms, fracRes: 0.2860, norm(attn): 0.3828, norm(output): 2.2500, norm(x): 1.8746, norm(y): 1.0054, norm:0.7582, tok/sec: 145585.48, flops:113.38, batch-reuse:1
@ 2575 train 4.2536 , allloss: 4.2541, dt: 905.94ms, fracRes: 0.2862, norm(attn): 0.3828, norm(output): 2.2500, norm(x): 1.8798, norm(y): 1.0054, norm:0.6897, tok/sec: 144680.81, flops:112.68, batch-reuse:1
@ 2576 train 4.2058 , allloss: 4.2082, dt: 891.17ms, fracRes: 0.2852, norm(attn): 0.3906, norm(output): 2.2344, norm(x): 1.8656, norm(y): 1.0053, norm:0.6150, tok/sec: 147077.85, flops:114.54, batch-reuse:1
@ 2577 train 4.2957 , allloss: 4.2967, dt: 895.01ms, fracRes: 0.2863, norm(attn): 0.3789, norm(output): 2.2344, norm(x): 1.8611, norm(y): 1.0054, norm:0.6130, tok/sec: 146446.94, flops:114.05, batch-reuse:1
@ 2578 train 4.0918 , allloss: 4.0944, dt: 895.74ms, fracRes: 0.2865, norm(attn): 0.3828, norm(output): 2.2344, norm(x): 1.8547, norm(y): 1.0054, norm:0.6484, tok/sec: 146327.86, flops:113.96, batch-reuse:1
@ 2579 train 4.2772 , allloss: 4.2776, dt: 906.15ms, fracRes: 0.2861, norm(attn): 0.3809, norm(output): 2.2500, norm(x): 1.8613, norm(y): 1.0054, norm:0.7279, tok/sec: 144647.84, flops:112.65, batch-reuse:1
@ 2580 train 4.2197 , allloss: 4.2200, dt: 874.13ms, fracRes: 0.2857, norm(attn): 0.3789, norm(output): 2.2500, norm(x): 1.8564, norm(y): 1.0053, norm:0.6178, tok/sec: 149945.37, flops:116.78, batch-reuse:1
@ 2581 train 4.1853 , allloss: 4.1857, dt: 894.71ms, fracRes: 0.2869, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.8705, norm(y): 1.0055, norm:0.6505, tok/sec: 146497.44, flops:114.09, batch-reuse:1
@ 2582 train 4.1778 , allloss: 4.1808, dt: 899.52ms, fracRes: 0.2868, norm(attn): 0.3867, norm(output): 2.2656, norm(x): 1.8838, norm(y): 1.0055, norm:0.6832, tok/sec: 145712.70, flops:113.48, batch-reuse:1
@ 2583 train 4.1654 , allloss: 4.1657, dt: 896.06ms, fracRes: 0.2861, norm(attn): 0.3867, norm(output): 2.2500, norm(x): 1.8818, norm(y): 1.0054, norm:0.6865, tok/sec: 146276.35, flops:113.92, batch-reuse:1
@ 2584 train 4.2077 , allloss: 4.2079, dt: 902.94ms, fracRes: 0.2864, norm(attn): 0.3828, norm(output): 2.2656, norm(x): 1.8925, norm(y): 1.0053, norm:0.6280, tok/sec: 145161.47, flops:113.05, batch-reuse:1
@ 2585 train 4.2195 , allloss: 4.2199, dt: 893.75ms, fracRes: 0.2868, norm(attn): 0.3848, norm(output): 2.2656, norm(x): 1.8970, norm(y): 1.0053, norm:0.6305, tok/sec: 146653.68, flops:114.21, batch-reuse:1
@ 2586 train 4.1207 , allloss: 4.1208, dt: 904.30ms, fracRes: 0.2875, norm(attn): 0.3848, norm(output): 2.2656, norm(x): 1.9069, norm(y): 1.0053, norm:0.7175, tok/sec: 144943.59, flops:112.88, batch-reuse:1
@ 2587 train 4.2874 , allloss: 4.2876, dt: 901.24ms, fracRes: 0.2857, norm(attn): 0.3848, norm(output): 2.2656, norm(x): 1.8926, norm(y): 1.0051, norm:0.8005, tok/sec: 145435.04, flops:113.27, batch-reuse:1
@ 2588 train 4.1614 , allloss: 4.1619, dt: 900.05ms, fracRes: 0.2864, norm(attn): 0.3887, norm(output): 2.2656, norm(x): 1.9096, norm(y): 1.0051, norm:0.7971, tok/sec: 145627.36, flops:113.42, batch-reuse:1
@ 2589 train 4.2584 , allloss: 4.2589, dt: 891.19ms, fracRes: 0.2864, norm(attn): 0.3828, norm(output): 2.2656, norm(x): 1.9014, norm(y): 1.0051, norm:0.7226, tok/sec: 147074.82, flops:114.54, batch-reuse:1
@ 2590 train 4.1915 , allloss: 4.1917, dt: 908.23ms, fracRes: 0.2872, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.8928, norm(y): 1.0051, norm:0.7217, tok/sec: 144315.59, flops:112.39, batch-reuse:1
@ 2591 train 4.2528 , allloss: 4.2530, dt: 908.12ms, fracRes: 0.2873, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.9018, norm(y): 1.0051, norm:0.7068, tok/sec: 144333.59, flops:112.41, batch-reuse:1
@ 2592 train 4.2950 , allloss: 4.2952, dt: 904.54ms, fracRes: 0.2866, norm(attn): 0.3789, norm(output): 2.2656, norm(x): 1.9012, norm(y): 1.0050, norm:0.7694, tok/sec: 144905.27, flops:112.85, batch-reuse:1
@ 2593 train 4.1693 , allloss: 4.1697, dt: 894.73ms, fracRes: 0.2870, norm(attn): 0.3789, norm(output): 2.2656, norm(x): 1.9010, norm(y): 1.0050, norm:0.6488, tok/sec: 146493.42, flops:114.09, batch-reuse:1
@ 2594 train 4.2084 , allloss: 4.2089, dt: 911.50ms, fracRes: 0.2872, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.8982, norm(y): 1.0050, norm:0.6974, tok/sec: 143798.63, flops:111.99, batch-reuse:1
@ 2595 train 4.2124 , allloss: 4.2126, dt: 913.54ms, fracRes: 0.2870, norm(attn): 0.3770, norm(output): 2.2500, norm(x): 1.8862, norm(y): 1.0049, norm:0.6143, tok/sec: 143477.60, flops:111.74, batch-reuse:1
@ 2596 train 4.3174 , allloss: 4.3176, dt: 899.36ms, fracRes: 0.2868, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.9016, norm(y): 1.0049, norm:0.6937, tok/sec: 145739.97, flops:113.50, batch-reuse:1
@ 2597 train 4.1700 , allloss: 4.1701, dt: 902.05ms, fracRes: 0.2866, norm(attn): 0.3828, norm(output): 2.2812, norm(x): 1.9117, norm(y): 1.0051, norm:0.7681, tok/sec: 145304.00, flops:113.16, batch-reuse:1
@ 2598 train 4.1693 , allloss: 4.1695, dt: 898.43ms, fracRes: 0.2862, norm(attn): 0.3828, norm(output): 2.2656, norm(x): 1.8938, norm(y): 1.0050, norm:0.7351, tok/sec: 145889.84, flops:113.62, batch-reuse:1
@ 2599 train 4.1192 , allloss: 4.1194, dt: 902.80ms, fracRes: 0.2869, norm(attn): 0.3789, norm(output): 2.2656, norm(x): 1.8986, norm(y): 1.0051, norm:0.6726, tok/sec: 145183.97, flops:113.07, batch-reuse:1
@ 2600 train 4.1209 , allloss: 4.1211, dt: 900.32ms, fracRes: 0.2865, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.8948, norm(y): 1.0050, norm:0.7610, tok/sec: 145583.51, flops:113.38, batch-reuse:1
@ 2601 train 4.3009 , allloss: 4.3015, dt: 899.53ms, fracRes: 0.2865, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.8993, norm(y): 1.0050, norm:0.6247, tok/sec: 145711.70, flops:113.48, batch-reuse:1
@ 2602 train 4.3068 , allloss: 4.3069, dt: 896.12ms, fracRes: 0.2867, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.9033, norm(y): 1.0050, norm:0.6041, tok/sec: 146266.07, flops:113.91, batch-reuse:1
@ 2603 train 4.4298 , allloss: 4.4299, dt: 901.38ms, fracRes: 0.2865, norm(attn): 0.3809, norm(output): 2.2656, norm(x): 1.9028, norm(y): 1.0050, norm:0.6922, tok/sec: 145413.39, flops:113.25, batch-reuse:1
@ 2604 train 4.3860 , allloss: 4.3863, dt: 907.62ms, fracRes: 0.2869, norm(attn): 0.3789, norm(output): 2.2500, norm(x): 1.8975, norm(y): 1.0050, norm:0.6331, tok/sec: 144412.41, flops:112.47, batch-reuse:1
@ 2605 train 4.3246 , allloss: 4.3248, dt: 896.92ms, fracRes: 0.2869, norm(attn): 0.3828, norm(output): 2.2656, norm(x): 1.9035, norm(y): 1.0051, norm:0.6257, tok/sec: 146135.90, flops:113.81, batch-reuse:1
@ 2606 train 4.3972 , allloss: 4.3974, dt: 898.86ms, fracRes: 0.2862, norm(attn): 0.3828, norm(output): 2.2656, norm(x): 1.9059, norm(y): 1.0049, norm:0.6061, tok/sec: 145819.49, flops:113.56, batch-reuse:1
@ 2607 train 4.3078 , allloss: 4.3080, dt: 917.95ms, fracRes: 0.2874, norm(attn): 0.3867, norm(output): 2.3125, norm(x): 1.9351, norm(y): 1.0051, norm:0.6711, tok/sec: 142787.04, flops:111.20, batch-reuse:1
@ 2608 train 4.3684 , allloss: 4.3685, dt: 900.35ms, fracRes: 0.2862, norm(attn): 0.3848, norm(output): 2.2969, norm(x): 1.9235, norm(y): 1.0048, norm:0.5685, tok/sec: 145578.31, flops:113.38, batch-reuse:1
@ 2609 train 4.5566 , allloss: 4.5568, dt: 899.86ms, fracRes: 0.2867, norm(attn): 0.3867, norm(output): 2.2812, norm(x): 1.9269, norm(y): 1.0048, norm:0.6778, tok/sec: 145658.50, flops:113.44, batch-reuse:1
@ 2610 train 4.5155 , allloss: 4.5156, dt: 903.16ms, fracRes: 0.2878, norm(attn): 0.3887, norm(output): 2.3125, norm(x): 1.9440, norm(y): 1.0049, norm:0.8489, tok/sec: 145125.91, flops:113.02, batch-reuse:1
@ 2611 train 4.4147 , allloss: 4.4149, dt: 915.99ms, fracRes: 0.2862, norm(attn): 0.3828, norm(output): 2.3125, norm(x): 1.9444, norm(y): 1.0048, norm:0.8753, tok/sec: 143093.81, flops:111.44, batch-reuse:1
@ 2612 train 4.3982 , allloss: 4.3984, dt: 898.25ms, fracRes: 0.2857, norm(attn): 0.3848, norm(output): 2.3125, norm(x): 1.9412, norm(y): 1.0048, norm:0.7454, tok/sec: 145919.70, flops:113.64, batch-reuse:1
@ 2613 train 4.2583 , allloss: 4.2587, dt: 899.68ms, fracRes: 0.2863, norm(attn): 0.3809, norm(output): 2.2812, norm(x): 1.9306, norm(y): 1.0048, norm:0.7317, tok/sec: 145687.56, flops:113.46, batch-reuse:1
@ 2614 train 4.4010 , allloss: 4.4012, dt: 889.44ms, fracRes: 0.2861, norm(attn): 0.3789, norm(output): 2.2656, norm(x): 1.9244, norm(y): 1.0047, norm:0.6682, tok/sec: 147365.37, flops:114.77, batch-reuse:1
@ 2615 train 4.4012 , allloss: 4.4013, dt: 895.97ms, fracRes: 0.2864, norm(attn): 0.3789, norm(output): 2.2812, norm(x): 1.9346, norm(y): 1.0048, norm:0.7202, tok/sec: 146291.37, flops:113.93, batch-reuse:1
@ 2616 train 4.3864 , allloss: 4.3865, dt: 902.56ms, fracRes: 0.2867, norm(attn): 0.3809, norm(output): 2.3438, norm(x): 1.9457, norm(y): 1.0048, norm:0.6732, tok/sec: 145222.67, flops:113.10, batch-reuse:1
@ 2617 train 4.2989 , allloss: 4.2998, dt: 900.88ms, fracRes: 0.2869, norm(attn): 0.3828, norm(output): 2.3281, norm(x): 1.9391, norm(y): 1.0048, norm:0.6530, tok/sec: 145493.20, flops:113.31, batch-reuse:1
@ 2618 train 4.2461 , allloss: 4.2464, dt: 899.53ms, fracRes: 0.2871, norm(attn): 0.3828, norm(output): 2.3281, norm(x): 1.9371, norm(y): 1.0047, norm:0.6383, tok/sec: 145710.89, flops:113.48, batch-reuse:1
@ 2619 train 4.3114 , allloss: 4.3116, dt: 896.94ms, fracRes: 0.2869, norm(attn): 0.3828, norm(output): 2.3125, norm(x): 1.9326, norm(y): 1.0047, norm:0.7046, tok/sec: 146131.90, flops:113.81, batch-reuse:1
@ 2620 train 4.3950 , allloss: 4.3952, dt: 897.20ms, fracRes: 0.2874, norm(attn): 0.3789, norm(output): 2.3281, norm(x): 1.9362, norm(y): 1.0048, norm:0.7503, tok/sec: 146090.39, flops:113.78, batch-reuse:1
@ 2621 train 4.3407 , allloss: 4.3409, dt: 898.37ms, fracRes: 0.2868, norm(attn): 0.3828, norm(output): 2.3281, norm(x): 1.9412, norm(y): 1.0047, norm:0.7611, tok/sec: 145900.49, flops:113.63, batch-reuse:1
@ 2622 train 4.3488 , allloss: 4.3491, dt: 901.55ms, fracRes: 0.2868, norm(attn): 0.3770, norm(output): 2.2812, norm(x): 1.9231, norm(y): 1.0046, norm:0.6844, tok/sec: 145385.78, flops:113.23, batch-reuse:1
@ 2623 train 4.4087 , allloss: 4.4090, dt: 894.65ms, fracRes: 0.2865, norm(attn): 0.3789, norm(output): 2.2812, norm(x): 1.9241, norm(y): 1.0047, norm:0.6475, tok/sec: 146505.83, flops:114.10, batch-reuse:1
@ 2624 train 4.4241 , allloss: 4.4243, dt: 914.02ms, fracRes: 0.2869, norm(attn): 0.3867, norm(output): 2.3281, norm(x): 1.9419, norm(y): 1.0048, norm:0.7891, tok/sec: 143402.30, flops:111.68, batch-reuse:1
@ 2625 train 4.3699 , allloss: 4.3702, dt: 934.43ms, fracRes: 0.2864, norm(attn): 0.3867, norm(output): 2.2969, norm(x): 1.9347, norm(y): 1.0046, norm:0.7664, tok/sec: 140268.99, flops:109.24, batch-reuse:1
@ 2626 train 4.3279 , allloss: 4.3284, dt: 910.55ms, fracRes: 0.2862, norm(attn): 0.3828, norm(output): 2.2812, norm(x): 1.9307, norm(y): 1.0046, norm:0.7498, tok/sec: 143948.75, flops:112.11, batch-reuse:1
@ 2627 train 4.3739 , allloss: 4.3742, dt: 902.81ms, fracRes: 0.2861, norm(attn): 0.3828, norm(output): 2.2969, norm(x): 1.9374, norm(y): 1.0046, norm:0.6411, tok/sec: 145181.90, flops:113.07, batch-reuse:1
@ 2628 train 4.2538 , allloss: 4.2541, dt: 901.17ms, fracRes: 0.2868, norm(attn): 0.3867, norm(output): 2.3438, norm(x): 1.9511, norm(y): 1.0046, norm:0.6668, tok/sec: 145446.40, flops:113.27, batch-reuse:1
@ 2629 train 4.3025 , allloss: 4.3034, dt: 892.53ms, fracRes: 0.2858, norm(attn): 0.3848, norm(output): 2.3125, norm(x): 1.9304, norm(y): 1.0045, norm:0.6071, tok/sec: 146855.24, flops:114.37, batch-reuse:1
@ 2630 train 4.4025 , allloss: 4.4027, dt: 896.83ms, fracRes: 0.2859, norm(attn): 0.3867, norm(output): 2.3438, norm(x): 1.9449, norm(y): 1.0045, norm:0.6449, tok/sec: 146150.12, flops:113.82, batch-reuse:1
@ 2631 train 4.2851 , allloss: 4.2853, dt: 898.11ms, fracRes: 0.2861, norm(attn): 0.3867, norm(output): 2.3438, norm(x): 1.9474, norm(y): 1.0044, norm:0.6195, tok/sec: 145941.51, flops:113.66, batch-reuse:1
@ 2632 train 4.3318 , allloss: 4.3320, dt: 907.17ms, fracRes: 0.2867, norm(attn): 0.3848, norm(output): 2.3594, norm(x): 1.9628, norm(y): 1.0043, norm:0.6152, tok/sec: 144484.49, flops:112.53, batch-reuse:1
@ 2633 train 4.3397 , allloss: 4.3398, dt: 910.73ms, fracRes: 0.2867, norm(attn): 0.3867, norm(output): 2.3438, norm(x): 1.9594, norm(y): 1.0042, norm:0.7342, tok/sec: 143919.43, flops:112.08, batch-reuse:1
@ 2634 train 4.2993 , allloss: 4.2995, dt: 908.74ms, fracRes: 0.2867, norm(attn): 0.3867, norm(output): 2.3281, norm(x): 1.9513, norm(y): 1.0042, norm:0.7084, tok/sec: 144234.22, flops:112.33, batch-reuse:1
@ 2635 train 4.2876 , allloss: 4.2878, dt: 904.71ms, fracRes: 0.2864, norm(attn): 0.3867, norm(output): 2.3438, norm(x): 1.9536, norm(y): 1.0042, norm:0.6877, tok/sec: 144877.43, flops:112.83, batch-reuse:1
@ 2636 train 4.3665 , allloss: 4.3668, dt: 906.12ms, fracRes: 0.2863, norm(attn): 0.3828, norm(output): 2.3438, norm(x): 1.9595, norm(y): 1.0043, norm:0.6929, tok/sec: 144652.10, flops:112.66, batch-reuse:1
@ 2637 train 4.3523 , allloss: 4.3525, dt: 907.82ms, fracRes: 0.2865, norm(attn): 0.3809, norm(output): 2.3438, norm(x): 1.9537, norm(y): 1.0043, norm:0.5891, tok/sec: 144381.43, flops:112.44, batch-reuse:1
@ 2638 train 4.3840 , allloss: 4.3841, dt: 904.56ms, fracRes: 0.2867, norm(attn): 0.3809, norm(output): 2.3438, norm(x): 1.9503, norm(y): 1.0042, norm:0.6098, tok/sec: 144900.84, flops:112.85, batch-reuse:1
@ 2639 train 4.4333 , allloss: 4.4339, dt: 895.28ms, fracRes: 0.2877, norm(attn): 0.3789, norm(output): 2.3438, norm(x): 1.9742, norm(y): 1.0043, norm:0.6829, tok/sec: 146403.53, flops:114.02, batch-reuse:1
@ 2640 train 4.2658 , allloss: 4.2661, dt: 897.55ms, fracRes: 0.2864, norm(attn): 0.3867, norm(output): 2.3750, norm(x): 1.9748, norm(y): 1.0044, norm:0.7024, tok/sec: 146032.57, flops:113.73, batch-reuse:1
@ 2641 train 4.3710 , allloss: 4.3711, dt: 916.05ms, fracRes: 0.2883, norm(attn): 0.3867, norm(output): 2.3594, norm(x): 1.9839, norm(y): 1.0046, norm:0.7874, tok/sec: 143083.30, flops:111.43, batch-reuse:1
@ 2642 train 4.3521 , allloss: 4.3524, dt: 894.54ms, fracRes: 0.2878, norm(attn): 0.3906, norm(output): 2.3750, norm(x): 1.9790, norm(y): 1.0045, norm:0.7002, tok/sec: 146524.62, flops:114.11, batch-reuse:1
@ 2643 train 4.2333 , allloss: 4.2335, dt: 910.92ms, fracRes: 0.2873, norm(attn): 0.3828, norm(output): 2.3438, norm(x): 1.9742, norm(y): 1.0044, norm:0.6126, tok/sec: 143890.16, flops:112.06, batch-reuse:1
@ 2644 train 4.3355 , allloss: 4.3357, dt: 897.51ms, fracRes: 0.2866, norm(attn): 0.3867, norm(output): 2.3438, norm(x): 1.9759, norm(y): 1.0042, norm:0.6706, tok/sec: 146039.51, flops:113.74, batch-reuse:1
@ 2645 train 4.3693 , allloss: 4.3695, dt: 898.87ms, fracRes: 0.2876, norm(attn): 0.3945, norm(output): 2.3594, norm(x): 1.9919, norm(y): 1.0043, norm:0.6692, tok/sec: 145819.10, flops:113.56, batch-reuse:1
@ 2646 train 4.4135 , allloss: 4.4138, dt: 885.70ms, fracRes: 0.2867, norm(attn): 0.3906, norm(output): 2.3438, norm(x): 1.9682, norm(y): 1.0040, norm:0.9039, tok/sec: 147987.06, flops:115.25, batch-reuse:1
@ 2647 train 4.3592 , allloss: 4.3594, dt: 896.17ms, fracRes: 0.2858, norm(attn): 0.3926, norm(output): 2.3750, norm(x): 1.9655, norm(y): 1.0041, norm:1.1584, tok/sec: 146257.98, flops:113.91, batch-reuse:1
@ 2648 train 4.3012 , allloss: 4.3015, dt: 902.98ms, fracRes: 0.2856, norm(attn): 0.3945, norm(output): 2.3438, norm(x): 1.9680, norm(y): 1.0041, norm:1.0120, tok/sec: 145154.76, flops:113.05, batch-reuse:1
@ 2649 train 4.3210 , allloss: 4.3212, dt: 902.12ms, fracRes: 0.2859, norm(attn): 0.3926, norm(output): 2.3125, norm(x): 1.9500, norm(y): 1.0039, norm:0.9104, tok/sec: 145293.52, flops:113.16, batch-reuse:1
@ 2650 train 4.3259 , allloss: 4.3260, dt: 881.32ms, fracRes: 0.2855, norm(attn): 0.3926, norm(output): 2.2812, norm(x): 1.9423, norm(y): 1.0040, norm:0.8114, tok/sec: 148722.77, flops:115.83, batch-reuse:1
@ 2651 train 4.3171 , allloss: 4.3173, dt: 884.74ms, fracRes: 0.2860, norm(attn): 0.3867, norm(output): 2.3281, norm(x): 1.9550, norm(y): 1.0040, norm:0.7381, tok/sec: 148148.02, flops:115.38, batch-reuse:1
@ 2652 train 4.3159 , allloss: 4.3160, dt: 888.87ms, fracRes: 0.2854, norm(attn): 0.3867, norm(output): 2.3438, norm(x): 1.9642, norm(y): 1.0039, norm:0.8337, tok/sec: 147459.09, flops:114.84, batch-reuse:1
@ 2653 train 4.3446 , allloss: 4.3448, dt: 898.82ms, fracRes: 0.2852, norm(attn): 0.3867, norm(output): 2.3594, norm(x): 1.9642, norm(y): 1.0038, norm:0.6450, tok/sec: 145826.88, flops:113.57, batch-reuse:1
@ 2654 train 4.2917 , allloss: 4.2918, dt: 893.88ms, fracRes: 0.2856, norm(attn): 0.3906, norm(output): 2.3750, norm(x): 1.9741, norm(y): 1.0039, norm:0.6670, tok/sec: 146632.21, flops:114.20, batch-reuse:1
@ 2655 train 4.2914 , allloss: 4.2916, dt: 887.98ms, fracRes: 0.2856, norm(attn): 0.3867, norm(output): 2.3594, norm(x): 1.9685, norm(y): 1.0038, norm:0.6859, tok/sec: 147606.57, flops:114.96, batch-reuse:1
@ 2656 train 4.3989 , allloss: 4.3991, dt: 902.62ms, fracRes: 0.2852, norm(attn): 0.3828, norm(output): 2.3438, norm(x): 1.9634, norm(y): 1.0037, norm:0.6838, tok/sec: 145213.31, flops:113.09, batch-reuse:1
@ 2657 train 4.2783 , allloss: 4.2785, dt: 899.88ms, fracRes: 0.2844, norm(attn): 0.3867, norm(output): 2.3594, norm(x): 1.9628, norm(y): 1.0037, norm:0.6902, tok/sec: 145655.30, flops:113.44, batch-reuse:1
@ 2658 train 4.3158 , allloss: 4.3160, dt: 899.33ms, fracRes: 0.2853, norm(attn): 0.3945, norm(output): 2.3438, norm(x): 1.9680, norm(y): 1.0036, norm:0.6650, tok/sec: 145744.38, flops:113.51, batch-reuse:1
@ 2659 train 4.2712 , allloss: 4.2714, dt: 890.42ms, fracRes: 0.2847, norm(attn): 0.3945, norm(output): 2.3438, norm(x): 1.9737, norm(y): 1.0037, norm:0.8014, tok/sec: 147202.06, flops:114.64, batch-reuse:1
@ 2660 train 4.2809 , allloss: 4.2811, dt: 894.57ms, fracRes: 0.2866, norm(attn): 0.3887, norm(output): 2.3594, norm(x): 1.9806, norm(y): 1.0039, norm:0.7535, tok/sec: 146520.12, flops:114.11, batch-reuse:1
@ 2661 train 4.2949 , allloss: 4.2952, dt: 894.02ms, fracRes: 0.2859, norm(attn): 0.3906, norm(output): 2.4062, norm(x): 1.9784, norm(y): 1.0039, norm:0.7102, tok/sec: 146610.31, flops:114.18, batch-reuse:1
@ 2662 train 4.1914 , allloss: 4.1917, dt: 907.32ms, fracRes: 0.2858, norm(attn): 0.3887, norm(output): 2.3594, norm(x): 1.9705, norm(y): 1.0038, norm:0.8800, tok/sec: 144461.14, flops:112.51, batch-reuse:1
@ 2663 train 4.3208 , allloss: 4.3212, dt: 909.62ms, fracRes: 0.2859, norm(attn): 0.3867, norm(output): 2.3281, norm(x): 1.9491, norm(y): 1.0037, norm:0.7304, tok/sec: 144095.37, flops:112.22, batch-reuse:1
@ 2664 train 4.3569 , allloss: 4.3572, dt: 908.64ms, fracRes: 0.2858, norm(attn): 0.3945, norm(output): 2.3594, norm(x): 1.9677, norm(y): 1.0037, norm:0.8190, tok/sec: 144251.52, flops:112.34, batch-reuse:1
@ 2665 train 4.2713 , allloss: 4.2715, dt: 904.50ms, fracRes: 0.2857, norm(attn): 0.3984, norm(output): 2.3750, norm(x): 1.9698, norm(y): 1.0037, norm:0.6980, tok/sec: 144910.96, flops:112.86, batch-reuse:1
@ 2666 train 4.3829 , allloss: 4.3830, dt: 888.58ms, fracRes: 0.2859, norm(attn): 0.4004, norm(output): 2.4219, norm(x): 1.9953, norm(y): 1.0037, norm:0.7807, tok/sec: 147507.92, flops:114.88, batch-reuse:1
@ 2667 train 4.3692 , allloss: 4.3695, dt: 903.56ms, fracRes: 0.2862, norm(attn): 0.3965, norm(output): 2.3594, norm(x): 1.9747, norm(y): 1.0035, norm:0.7928, tok/sec: 145061.42, flops:112.97, batch-reuse:1
@ 2668 train 4.3486 , allloss: 4.3488, dt: 910.85ms, fracRes: 0.2866, norm(attn): 0.3887, norm(output): 2.3438, norm(x): 1.9717, norm(y): 1.0035, norm:0.6441, tok/sec: 143900.37, flops:112.07, batch-reuse:1
@ 2669 train 4.2940 , allloss: 4.2950, dt: 909.52ms, fracRes: 0.2858, norm(attn): 0.3926, norm(output): 2.4062, norm(x): 1.9837, norm(y): 1.0036, norm:0.6931, tok/sec: 144111.16, flops:112.23, batch-reuse:1
@ 2670 train 4.2992 , allloss: 4.2994, dt: 910.38ms, fracRes: 0.2852, norm(attn): 0.3965, norm(output): 2.4219, norm(x): 1.9997, norm(y): 1.0037, norm:0.6404, tok/sec: 143974.31, flops:112.13, batch-reuse:1
@ 2671 train 4.3413 , allloss: 4.3414, dt: 906.96ms, fracRes: 0.2855, norm(attn): 0.3945, norm(output): 2.4062, norm(x): 1.9993, norm(y): 1.0036, norm:0.7283, tok/sec: 144518.48, flops:112.55, batch-reuse:1
@ 2672 train 4.2709 , allloss: 4.2713, dt: 890.92ms, fracRes: 0.2855, norm(attn): 0.3945, norm(output): 2.4062, norm(x): 1.9976, norm(y): 1.0035, norm:0.6475, tok/sec: 147119.88, flops:114.58, batch-reuse:1
@ 2673 train 4.2323 , allloss: 4.2325, dt: 898.65ms, fracRes: 0.2856, norm(attn): 0.3926, norm(output): 2.4062, norm(x): 1.9908, norm(y): 1.0034, norm:0.6498, tok/sec: 145855.01, flops:113.59, batch-reuse:1
@ 2674 train 4.3247 , allloss: 4.3248, dt: 893.80ms, fracRes: 0.2852, norm(attn): 0.3926, norm(output): 2.3594, norm(x): 1.9750, norm(y): 1.0034, norm:0.7350, tok/sec: 146645.35, flops:114.21, batch-reuse:1
@ 2675 train 4.3461 , allloss: 4.3462, dt: 895.15ms, fracRes: 0.2852, norm(attn): 0.3848, norm(output): 2.3750, norm(x): 1.9762, norm(y): 1.0034, norm:0.8496, tok/sec: 146424.86, flops:114.04, batch-reuse:1
@ 2676 train 4.2719 , allloss: 4.2720, dt: 905.00ms, fracRes: 0.2845, norm(attn): 0.3867, norm(output): 2.3750, norm(x): 1.9791, norm(y): 1.0033, norm:0.8293, tok/sec: 144831.06, flops:112.79, batch-reuse:1
@ 2677 train 4.2908 , allloss: 4.2911, dt: 902.02ms, fracRes: 0.2851, norm(attn): 0.3887, norm(output): 2.3750, norm(x): 1.9819, norm(y): 1.0035, norm:0.8601, tok/sec: 145308.69, flops:113.17, batch-reuse:1
@ 2678 train 4.3814 , allloss: 4.3817, dt: 900.33ms, fracRes: 0.2854, norm(attn): 0.3887, norm(output): 2.3438, norm(x): 1.9705, norm(y): 1.0035, norm:0.7238, tok/sec: 145581.93, flops:113.38, batch-reuse:1
@ 2679 train 4.3391 , allloss: 4.3393, dt: 911.32ms, fracRes: 0.2858, norm(attn): 0.3828, norm(output): 2.3438, norm(x): 1.9666, norm(y): 1.0034, norm:0.6322, tok/sec: 143827.18, flops:112.01, batch-reuse:1
@ 2680 train 4.2119 , allloss: 4.2121, dt: 896.15ms, fracRes: 0.2854, norm(attn): 0.3926, norm(output): 2.3750, norm(x): 1.9775, norm(y): 1.0033, norm:0.6415, tok/sec: 146261.83, flops:113.91, batch-reuse:1
@ 2681 train 4.3250 , allloss: 4.3252, dt: 895.16ms, fracRes: 0.2862, norm(attn): 0.3887, norm(output): 2.4062, norm(x): 1.9828, norm(y): 1.0034, norm:0.6258, tok/sec: 146423.27, flops:114.03, batch-reuse:1
@ 2682 train 4.2149 , allloss: 4.2151, dt: 914.24ms, fracRes: 0.2850, norm(attn): 0.3926, norm(output): 2.3750, norm(x): 1.9806, norm(y): 1.0032, norm:0.7263, tok/sec: 143367.41, flops:111.66, batch-reuse:1
@ 2683 train 4.2685 , allloss: 4.2688, dt: 899.18ms, fracRes: 0.2864, norm(attn): 0.3906, norm(output): 2.3594, norm(x): 1.9813, norm(y): 1.0033, norm:0.6500, tok/sec: 145767.68, flops:113.52, batch-reuse:1
@ 2684 train 4.3065 , allloss: 4.3069, dt: 891.64ms, fracRes: 0.2860, norm(attn): 0.3945, norm(output): 2.3750, norm(x): 1.9868, norm(y): 1.0032, norm:0.6447, tok/sec: 147000.88, flops:114.48, batch-reuse:1
@ 2685 train 4.3216 , allloss: 4.3218, dt: 903.48ms, fracRes: 0.2856, norm(attn): 0.3984, norm(output): 2.4062, norm(x): 1.9965, norm(y): 1.0033, norm:0.7000, tok/sec: 145074.55, flops:112.98, batch-reuse:1
@ 2686 train 4.3937 , allloss: 4.3939, dt: 895.24ms, fracRes: 0.2859, norm(attn): 0.3926, norm(output): 2.4219, norm(x): 1.9999, norm(y): 1.0033, norm:0.6231, tok/sec: 146409.89, flops:114.02, batch-reuse:1
@ 2687 train 4.2801 , allloss: 4.2804, dt: 893.02ms, fracRes: 0.2868, norm(attn): 0.3926, norm(output): 2.4062, norm(x): 2.0113, norm(y): 1.0033, norm:0.6893, tok/sec: 146774.31, flops:114.31, batch-reuse:1
@ 2688 train 4.2740 , allloss: 4.2744, dt: 902.92ms, fracRes: 0.2862, norm(attn): 0.3887, norm(output): 2.3750, norm(x): 1.9801, norm(y): 1.0031, norm:0.6445, tok/sec: 145164.81, flops:113.05, batch-reuse:1
@ 2689 train 4.3279 , allloss: 4.3283, dt: 898.42ms, fracRes: 0.2861, norm(attn): 0.3906, norm(output): 2.3750, norm(x): 1.9875, norm(y): 1.0030, norm:0.7636, tok/sec: 145891.74, flops:113.62, batch-reuse:1
@ 2690 train 4.2924 , allloss: 4.2927, dt: 926.15ms, fracRes: 0.2861, norm(attn): 0.3887, norm(output): 2.3594, norm(x): 1.9784, norm(y): 1.0030, norm:0.6921, tok/sec: 141523.86, flops:110.22, batch-reuse:1
@ 2691 train 4.3259 , allloss: 4.3261, dt: 929.96ms, fracRes: 0.2859, norm(attn): 0.3965, norm(output): 2.3750, norm(x): 1.9878, norm(y): 1.0031, norm:0.7083, tok/sec: 140944.38, flops:109.77, batch-reuse:1
@ 2692 train 4.1490 , allloss: 4.1493, dt: 924.01ms, fracRes: 0.2861, norm(attn): 0.3906, norm(output): 2.3750, norm(x): 1.9926, norm(y): 1.0030, norm:0.6907, tok/sec: 141851.35, flops:110.47, batch-reuse:1
@ 2693 train 4.3330 , allloss: 4.3332, dt: 906.23ms, fracRes: 0.2862, norm(attn): 0.3867, norm(output): 2.3750, norm(x): 1.9990, norm(y): 1.0029, norm:0.7169, tok/sec: 144634.56, flops:112.64, batch-reuse:1
@ 2694 train 4.3283 , allloss: 4.3292, dt: 917.17ms, fracRes: 0.2860, norm(attn): 0.3887, norm(output): 2.4062, norm(x): 2.0042, norm(y): 1.0029, norm:0.6719, tok/sec: 142908.42, flops:111.30, batch-reuse:1
@ 2695 train 4.2663 , allloss: 4.2675, dt: 916.88ms, fracRes: 0.2872, norm(attn): 0.3867, norm(output): 2.4375, norm(x): 2.0207, norm(y): 1.0031, norm:0.8134, tok/sec: 142954.64, flops:111.33, batch-reuse:1
@ 2696 train 4.2685 , allloss: 4.2705, dt: 909.42ms, fracRes: 0.2867, norm(attn): 0.3965, norm(output): 2.4062, norm(x): 2.0207, norm(y): 1.0029, norm:0.6764, tok/sec: 144126.38, flops:112.25, batch-reuse:1
@ 2697 train 4.2124 , allloss: 4.2139, dt: 909.66ms, fracRes: 0.2870, norm(attn): 0.3945, norm(output): 2.4062, norm(x): 2.0195, norm(y): 1.0028, norm:0.7143, tok/sec: 144089.44, flops:112.22, batch-reuse:1
@ 2698 train 4.2451 , allloss: 4.2452, dt: 912.50ms, fracRes: 0.2864, norm(attn): 0.3945, norm(output): 2.4062, norm(x): 2.0023, norm(y): 1.0028, norm:0.6995, tok/sec: 143640.04, flops:111.87, batch-reuse:1
@ 2699 train 4.3255 , allloss: 4.3257, dt: 909.02ms, fracRes: 0.2852, norm(attn): 0.3945, norm(output): 2.4062, norm(x): 1.9990, norm(y): 1.0029, norm:0.5972, tok/sec: 144190.19, flops:112.30, batch-reuse:1
@ 2700 train 4.2040 , allloss: 4.2042, dt: 905.14ms, fracRes: 0.2858, norm(attn): 0.3945, norm(output): 2.4062, norm(x): 2.0079, norm(y): 1.0030, norm:0.6415, tok/sec: 144808.51, flops:112.78, batch-reuse:1
@ 2701 train 4.1975 , allloss: 4.1977, dt: 897.92ms, fracRes: 0.2852, norm(attn): 0.3867, norm(output): 2.3750, norm(x): 1.9861, norm(y): 1.0028, norm:0.5682, tok/sec: 145973.05, flops:113.68, batch-reuse:1
@ 2702 train 4.2982 , allloss: 4.2984, dt: 891.79ms, fracRes: 0.2858, norm(attn): 0.3906, norm(output): 2.4219, norm(x): 2.0074, norm(y): 1.0028, norm:0.6461, tok/sec: 146975.89, flops:114.47, batch-reuse:1
@ 2703 train 4.3043 , allloss: 4.3046, dt: 897.80ms, fracRes: 0.2857, norm(attn): 0.3906, norm(output): 2.4219, norm(x): 2.0084, norm(y): 1.0027, norm:0.6181, tok/sec: 145991.77, flops:113.70, batch-reuse:1
@ 2704 train 4.3966 , allloss: 4.3971, dt: 889.63ms, fracRes: 0.2863, norm(attn): 0.3984, norm(output): 2.4531, norm(x): 2.0339, norm(y): 1.0027, norm:0.7427, tok/sec: 147332.91, flops:114.74, batch-reuse:1
@ 2705 train 4.2438 , allloss: 4.2439, dt: 902.79ms, fracRes: 0.2851, norm(attn): 0.3965, norm(output): 2.4219, norm(x): 2.0145, norm(y): 1.0026, norm:0.7514, tok/sec: 145185.01, flops:113.07, batch-reuse:1
@ 2706 train 4.2089 , allloss: 4.2091, dt: 904.34ms, fracRes: 0.2855, norm(attn): 0.3906, norm(output): 2.4062, norm(x): 2.0132, norm(y): 1.0027, norm:0.6709, tok/sec: 144937.28, flops:112.88, batch-reuse:1
@ 2707 train 4.2836 , allloss: 4.2837, dt: 903.80ms, fracRes: 0.2850, norm(attn): 0.3906, norm(output): 2.4219, norm(x): 2.0231, norm(y): 1.0027, norm:0.6294, tok/sec: 145023.69, flops:112.94, batch-reuse:1
@ 2708 train 4.2142 , allloss: 4.2144, dt: 907.32ms, fracRes: 0.2855, norm(attn): 0.3945, norm(output): 2.4062, norm(x): 2.0289, norm(y): 1.0028, norm:0.6141, tok/sec: 144460.80, flops:112.51, batch-reuse:1
@ 2709 train 4.1967 , allloss: 4.1970, dt: 912.41ms, fracRes: 0.2860, norm(attn): 0.3965, norm(output): 2.4375, norm(x): 2.0246, norm(y): 1.0028, norm:0.6965, tok/sec: 143654.56, flops:111.88, batch-reuse:1
@ 2710 train 4.3538 , allloss: 4.3540, dt: 913.24ms, fracRes: 0.2855, norm(attn): 0.3945, norm(output): 2.4844, norm(x): 2.0398, norm(y): 1.0026, norm:0.8026, tok/sec: 143523.90, flops:111.78, batch-reuse:1
@ 2711 train 4.4216 , allloss: 4.4219, dt: 883.55ms, fracRes: 0.2842, norm(attn): 0.3965, norm(output): 2.4688, norm(x): 2.0229, norm(y): 1.0025, norm:0.8125, tok/sec: 148346.62, flops:115.53, batch-reuse:1
@ 2712 train 4.3250 , allloss: 4.3252, dt: 921.51ms, fracRes: 0.2856, norm(attn): 0.3906, norm(output): 2.4062, norm(x): 2.0124, norm(y): 1.0025, norm:0.9545, tok/sec: 142236.41, flops:110.77, batch-reuse:1
@ 2713 train 4.2610 , allloss: 4.2612, dt: 896.88ms, fracRes: 0.2853, norm(attn): 0.3906, norm(output): 2.4062, norm(x): 2.0196, norm(y): 1.0024, norm:0.9371, tok/sec: 146142.08, flops:113.82, batch-reuse:1
@ 2714 train 4.2889 , allloss: 4.2891, dt: 909.01ms, fracRes: 0.2854, norm(attn): 0.3906, norm(output): 2.4844, norm(x): 2.0522, norm(y): 1.0027, norm:0.8252, tok/sec: 144192.46, flops:112.30, batch-reuse:1
@ 2715 train 4.2476 , allloss: 4.2478, dt: 910.99ms, fracRes: 0.2851, norm(attn): 0.3945, norm(output): 2.4688, norm(x): 2.0405, norm(y): 1.0027, norm:0.7289, tok/sec: 143878.71, flops:112.05, batch-reuse:1
@ 2716 train 4.2113 , allloss: 4.2114, dt: 907.62ms, fracRes: 0.2850, norm(attn): 0.3965, norm(output): 2.4375, norm(x): 2.0247, norm(y): 1.0026, norm:0.6255, tok/sec: 144412.56, flops:112.47, batch-reuse:1
@ 2717 train 4.2771 , allloss: 4.2786, dt: 896.27ms, fracRes: 0.2853, norm(attn): 0.3984, norm(output): 2.4688, norm(x): 2.0321, norm(y): 1.0027, norm:0.6880, tok/sec: 146242.42, flops:113.89, batch-reuse:1
@ 2718 train 4.2171 , allloss: 4.2173, dt: 896.76ms, fracRes: 0.2857, norm(attn): 0.3926, norm(output): 2.4688, norm(x): 2.0330, norm(y): 1.0027, norm:0.6549, tok/sec: 146161.23, flops:113.83, batch-reuse:1
@ 2719 train 4.3094 , allloss: 4.3097, dt: 906.07ms, fracRes: 0.2860, norm(attn): 0.3926, norm(output): 2.4688, norm(x): 2.0399, norm(y): 1.0026, norm:0.7086, tok/sec: 144660.55, flops:112.66, batch-reuse:1
@ 2720 train 4.3110 , allloss: 4.3112, dt: 904.83ms, fracRes: 0.2859, norm(attn): 0.3887, norm(output): 2.4844, norm(x): 2.0485, norm(y): 1.0026, norm:0.7723, tok/sec: 144858.38, flops:112.82, batch-reuse:1
@ 2721 train 4.1964 , allloss: 4.1966, dt: 896.15ms, fracRes: 0.2859, norm(attn): 0.3965, norm(output): 2.4688, norm(x): 2.0441, norm(y): 1.0027, norm:0.7221, tok/sec: 146261.68, flops:113.91, batch-reuse:1
@ 2722 train 4.2682 , allloss: 4.2701, dt: 909.72ms, fracRes: 0.2860, norm(attn): 0.3984, norm(output): 2.4688, norm(x): 2.0485, norm(y): 1.0027, norm:0.6259, tok/sec: 144079.13, flops:112.21, batch-reuse:1
@ 2723 train 4.3209 , allloss: 4.3211, dt: 903.90ms, fracRes: 0.2868, norm(attn): 0.3906, norm(output): 2.4844, norm(x): 2.0530, norm(y): 1.0026, norm:0.6199, tok/sec: 145007.40, flops:112.93, batch-reuse:1
@ 2724 train 4.2376 , allloss: 4.2424, dt: 909.26ms, fracRes: 0.2869, norm(attn): 0.3887, norm(output): 2.4844, norm(x): 2.0369, norm(y): 1.0026, norm:0.7077, tok/sec: 144151.93, flops:112.27, batch-reuse:1
@ 2725 train 4.2395 , allloss: 4.2396, dt: 909.85ms, fracRes: 0.2858, norm(attn): 0.3945, norm(output): 2.4844, norm(x): 2.0293, norm(y): 1.0026, norm:0.5417, tok/sec: 144058.25, flops:112.19, batch-reuse:1
@ 2726 train 4.2196 , allloss: 4.2197, dt: 908.52ms, fracRes: 0.2862, norm(attn): 0.3906, norm(output): 2.4844, norm(x): 2.0393, norm(y): 1.0026, norm:0.6426, tok/sec: 144269.05, flops:112.36, batch-reuse:1
@ 2727 train 4.2979 , allloss: 4.2980, dt: 909.98ms, fracRes: 0.2869, norm(attn): 0.3887, norm(output): 2.4844, norm(x): 2.0421, norm(y): 1.0026, norm:0.6615, tok/sec: 144037.98, flops:112.18, batch-reuse:1
@ 2728 train 4.3085 , allloss: 4.3086, dt: 906.09ms, fracRes: 0.2861, norm(attn): 0.3828, norm(output): 2.4531, norm(x): 2.0246, norm(y): 1.0023, norm:0.6227, tok/sec: 144656.86, flops:112.66, batch-reuse:1
@ 2729 train 4.2744 , allloss: 4.2745, dt: 905.15ms, fracRes: 0.2865, norm(attn): 0.3867, norm(output): 2.4688, norm(x): 2.0374, norm(y): 1.0025, norm:0.5932, tok/sec: 144806.53, flops:112.78, batch-reuse:1
@ 2730 train 4.2820 , allloss: 4.2822, dt: 898.98ms, fracRes: 0.2855, norm(attn): 0.3945, norm(output): 2.4688, norm(x): 2.0355, norm(y): 1.0024, norm:0.7358, tok/sec: 145800.81, flops:113.55, batch-reuse:1
@ 2731 train 4.2132 , allloss: 4.2133, dt: 894.79ms, fracRes: 0.2855, norm(attn): 0.3906, norm(output): 2.4531, norm(x): 2.0371, norm(y): 1.0022, norm:0.6672, tok/sec: 146484.32, flops:114.08, batch-reuse:1
@ 2732 train 4.2311 , allloss: 4.2312, dt: 912.08ms, fracRes: 0.2861, norm(attn): 0.3926, norm(output): 2.4688, norm(x): 2.0594, norm(y): 1.0023, norm:0.6725, tok/sec: 143707.47, flops:111.92, batch-reuse:1
@ 2733 train 4.2923 , allloss: 4.2924, dt: 895.01ms, fracRes: 0.2854, norm(attn): 0.3984, norm(output): 2.4688, norm(x): 2.0560, norm(y): 1.0023, norm:0.6045, tok/sec: 146447.41, flops:114.05, batch-reuse:1
@ 2734 train 4.1772 , allloss: 4.1774, dt: 898.25ms, fracRes: 0.2858, norm(attn): 0.3984, norm(output): 2.4844, norm(x): 2.0640, norm(y): 1.0024, norm:0.5625, tok/sec: 145918.65, flops:113.64, batch-reuse:1
@ 2735 train 4.2971 , allloss: 4.2972, dt: 889.26ms, fracRes: 0.2859, norm(attn): 0.3906, norm(output): 2.4688, norm(x): 2.0545, norm(y): 1.0023, norm:0.5394, tok/sec: 147393.78, flops:114.79, batch-reuse:1
@ 2736 train 4.2972 , allloss: 4.2973, dt: 896.65ms, fracRes: 0.2863, norm(attn): 0.3848, norm(output): 2.4375, norm(x): 2.0474, norm(y): 1.0022, norm:0.6000, tok/sec: 146180.32, flops:113.85, batch-reuse:1
@ 2737 train 4.3065 , allloss: 4.3066, dt: 904.46ms, fracRes: 0.2857, norm(attn): 0.3926, norm(output): 2.4531, norm(x): 2.0443, norm(y): 1.0022, norm:0.6638, tok/sec: 144917.30, flops:112.86, batch-reuse:1
@ 2738 train 4.1307 , allloss: 4.1309, dt: 885.76ms, fracRes: 0.2869, norm(attn): 0.3906, norm(output): 2.4688, norm(x): 2.0589, norm(y): 1.0024, norm:0.8866, tok/sec: 147976.83, flops:115.24, batch-reuse:1
@ 2739 train 4.2376 , allloss: 4.2378, dt: 911.23ms, fracRes: 0.2856, norm(attn): 0.3828, norm(output): 2.4844, norm(x): 2.0412, norm(y): 1.0021, norm:0.6495, tok/sec: 143840.39, flops:112.02, batch-reuse:1
@ 2740 train 4.1007 , allloss: 4.1008, dt: 912.34ms, fracRes: 0.2850, norm(attn): 0.3906, norm(output): 2.4844, norm(x): 2.0496, norm(y): 1.0021, norm:0.7380, tok/sec: 143665.49, flops:111.89, batch-reuse:1
@ 2741 train 4.1953 , allloss: 4.1955, dt: 898.06ms, fracRes: 0.2855, norm(attn): 0.3906, norm(output): 2.4375, norm(x): 2.0358, norm(y): 1.0021, norm:0.6290, tok/sec: 145949.72, flops:113.67, batch-reuse:1
@ 2742 train 4.1738 , allloss: 4.1740, dt: 905.22ms, fracRes: 0.2859, norm(attn): 0.3887, norm(output): 2.4844, norm(x): 2.0523, norm(y): 1.0021, norm:0.7454, tok/sec: 144795.01, flops:112.77, batch-reuse:1
@ 2743 train 4.1590 , allloss: 4.1591, dt: 891.37ms, fracRes: 0.2854, norm(attn): 0.3906, norm(output): 2.5000, norm(x): 2.0707, norm(y): 1.0021, norm:0.7364, tok/sec: 147046.38, flops:114.52, batch-reuse:1
@ 2744 train 4.1571 , allloss: 4.1573, dt: 903.57ms, fracRes: 0.2860, norm(attn): 0.3945, norm(output): 2.5000, norm(x): 2.0712, norm(y): 1.0020, norm:0.7289, tok/sec: 145060.50, flops:112.97, batch-reuse:1
@ 2745 train 4.1145 , allloss: 4.1147, dt: 888.42ms, fracRes: 0.2868, norm(attn): 0.3965, norm(output): 2.5000, norm(x): 2.0868, norm(y): 1.0021, norm:0.7589, tok/sec: 147533.53, flops:114.90, batch-reuse:1
@ 2746 train 4.1106 , allloss: 4.1107, dt: 916.95ms, fracRes: 0.2868, norm(attn): 0.3867, norm(output): 2.4688, norm(x): 2.0638, norm(y): 1.0020, norm:0.6867, tok/sec: 142943.46, flops:111.32, batch-reuse:1
@ 2747 train 4.1552 , allloss: 4.1554, dt: 917.70ms, fracRes: 0.2869, norm(attn): 0.3867, norm(output): 2.4844, norm(x): 2.0722, norm(y): 1.0021, norm:0.6632, tok/sec: 142826.59, flops:111.23, batch-reuse:1
@ 2748 train 4.2418 , allloss: 4.2420, dt: 908.74ms, fracRes: 0.2849, norm(attn): 0.3984, norm(output): 2.5000, norm(x): 2.0867, norm(y): 1.0019, norm:1.0375, tok/sec: 144235.17, flops:112.33, batch-reuse:1
@ 2749 train 4.1840 , allloss: 4.1970, dt: 895.25ms, fracRes: 0.2857, norm(attn): 0.3965, norm(output): 2.5469, norm(x): 2.1218, norm(y): 1.0019, norm:1.0249, tok/sec: 146408.80, flops:114.02, batch-reuse:1
@ 2750 train 4.1377 , allloss: 4.1392, dt: 891.12ms, fracRes: 0.2872, norm(attn): 0.3965, norm(output): 2.5625, norm(x): 2.1554, norm(y): 1.0021, norm:0.8818, tok/sec: 147086.98, flops:114.55, batch-reuse:1
@ 2751 train 4.2286 , allloss: 4.2308, dt: 884.34ms, fracRes: 0.2862, norm(attn): 0.3984, norm(output): 2.5625, norm(x): 2.1302, norm(y): 1.0019, norm:0.8871, tok/sec: 148214.44, flops:115.43, batch-reuse:1
@ 2752 train 4.1897 , allloss: 4.1898, dt: 908.75ms, fracRes: 0.2858, norm(attn): 0.4043, norm(output): 2.5781, norm(x): 2.1405, norm(y): 1.0020, norm:0.8811, tok/sec: 144233.92, flops:112.33, batch-reuse:1
@ 2753 train 4.1890 , allloss: 4.1891, dt: 906.61ms, fracRes: 0.2870, norm(attn): 0.3965, norm(output): 2.5781, norm(x): 2.1500, norm(y): 1.0021, norm:0.7532, tok/sec: 144574.20, flops:112.59, batch-reuse:1
@ 2754 train 4.1513 , allloss: 4.1516, dt: 909.62ms, fracRes: 0.2872, norm(attn): 0.4004, norm(output): 2.5469, norm(x): 2.1276, norm(y): 1.0020, norm:0.7498, tok/sec: 144094.84, flops:112.22, batch-reuse:1
@ 2755 train 4.1774 , allloss: 4.1776, dt: 882.69ms, fracRes: 0.2871, norm(attn): 0.4004, norm(output): 2.5312, norm(x): 2.1119, norm(y): 1.0020, norm:0.7992, tok/sec: 148490.87, flops:115.65, batch-reuse:1
@ 2756 train 4.1225 , allloss: 4.1226, dt: 899.14ms, fracRes: 0.2870, norm(attn): 0.3984, norm(output): 2.5469, norm(x): 2.1257, norm(y): 1.0022, norm:0.7131, tok/sec: 145774.33, flops:113.53, batch-reuse:1
@ 2757 train 4.1849 , allloss: 4.1852, dt: 895.82ms, fracRes: 0.2858, norm(attn): 0.3984, norm(output): 2.5625, norm(x): 2.1136, norm(y): 1.0021, norm:0.6461, tok/sec: 146315.86, flops:113.95, batch-reuse:1
@ 2758 train 4.1826 , allloss: 4.1827, dt: 913.89ms, fracRes: 0.2859, norm(attn): 0.4004, norm(output): 2.5156, norm(x): 2.1026, norm(y): 1.0020, norm:0.6678, tok/sec: 143422.43, flops:111.70, batch-reuse:1
@ 2759 train 4.1699 , allloss: 4.1700, dt: 899.84ms, fracRes: 0.2858, norm(attn): 0.3984, norm(output): 2.5000, norm(x): 2.0957, norm(y): 1.0020, norm:0.7182, tok/sec: 145662.17, flops:113.44, batch-reuse:1
@ 2760 train 4.1027 , allloss: 4.1028, dt: 914.63ms, fracRes: 0.2858, norm(attn): 0.3984, norm(output): 2.5000, norm(x): 2.0847, norm(y): 1.0020, norm:0.7077, tok/sec: 143306.08, flops:111.61, batch-reuse:1
@ 2761 train 4.2481 , allloss: 4.2483, dt: 902.96ms, fracRes: 0.2851, norm(attn): 0.3906, norm(output): 2.4844, norm(x): 2.0666, norm(y): 1.0019, norm:0.6451, tok/sec: 145158.75, flops:113.05, batch-reuse:1
@ 2762 train 4.2064 , allloss: 4.2066, dt: 893.79ms, fracRes: 0.2855, norm(attn): 0.3926, norm(output): 2.4844, norm(x): 2.0756, norm(y): 1.0019, norm:0.6008, tok/sec: 146646.83, flops:114.21, batch-reuse:1
@ 2763 train 4.1474 , allloss: 4.1476, dt: 893.16ms, fracRes: 0.2859, norm(attn): 0.3984, norm(output): 2.5000, norm(x): 2.0892, norm(y): 1.0019, norm:0.6850, tok/sec: 146751.08, flops:114.29, batch-reuse:1
@ 2764 train 4.1441 , allloss: 4.1442, dt: 912.85ms, fracRes: 0.2849, norm(attn): 0.4004, norm(output): 2.5156, norm(x): 2.0864, norm(y): 1.0019, norm:0.6458, tok/sec: 143585.08, flops:111.82, batch-reuse:1
@ 2765 train 4.2025 , allloss: 4.2027, dt: 914.31ms, fracRes: 0.2863, norm(attn): 0.3906, norm(output): 2.5156, norm(x): 2.0939, norm(y): 1.0019, norm:0.7647, tok/sec: 143356.46, flops:111.65, batch-reuse:1
@ 2766 train 4.1833 , allloss: 4.1834, dt: 913.41ms, fracRes: 0.2848, norm(attn): 0.3945, norm(output): 2.5000, norm(x): 2.0949, norm(y): 1.0017, norm:0.5801, tok/sec: 143497.86, flops:111.76, batch-reuse:1
@ 2767 train 4.1719 , allloss: 4.1721, dt: 907.61ms, fracRes: 0.2848, norm(attn): 0.3926, norm(output): 2.5156, norm(x): 2.1003, norm(y): 1.0016, norm:0.6396, tok/sec: 144414.95, flops:112.47, batch-reuse:1
@ 2768 train 4.1588 , allloss: 4.1589, dt: 903.55ms, fracRes: 0.2851, norm(attn): 0.3926, norm(output): 2.5000, norm(x): 2.1036, norm(y): 1.0017, norm:0.7559, tok/sec: 145062.69, flops:112.98, batch-reuse:1
@ 2769 train 4.1785 , allloss: 4.1788, dt: 906.48ms, fracRes: 0.2859, norm(attn): 0.3965, norm(output): 2.5156, norm(x): 2.1270, norm(y): 1.0018, norm:0.6859, tok/sec: 144595.07, flops:112.61, batch-reuse:1
@ 2770 train 4.1644 , allloss: 4.1647, dt: 902.42ms, fracRes: 0.2845, norm(attn): 0.4004, norm(output): 2.5156, norm(x): 2.1155, norm(y): 1.0017, norm:0.7287, tok/sec: 145245.77, flops:113.12, batch-reuse:1
@ 2771 train 4.2763 , allloss: 4.2764, dt: 885.87ms, fracRes: 0.2852, norm(attn): 0.3887, norm(output): 2.5000, norm(x): 2.1151, norm(y): 1.0016, norm:0.7015, tok/sec: 147958.91, flops:115.23, batch-reuse:1
@ 2772 train 4.1157 , allloss: 4.1158, dt: 899.60ms, fracRes: 0.2854, norm(attn): 0.3945, norm(output): 2.5156, norm(x): 2.1092, norm(y): 1.0016, norm:0.7188, tok/sec: 145700.07, flops:113.47, batch-reuse:1
@ 2773 train 4.1252 , allloss: 4.1254, dt: 900.55ms, fracRes: 0.2860, norm(attn): 0.3945, norm(output): 2.5156, norm(x): 2.1180, norm(y): 1.0018, norm:0.8351, tok/sec: 145547.32, flops:113.35, batch-reuse:1
@ 2774 train 4.0881 , allloss: 4.0884, dt: 917.19ms, fracRes: 0.2860, norm(attn): 0.3926, norm(output): 2.5625, norm(x): 2.1279, norm(y): 1.0018, norm:0.7546, tok/sec: 142906.48, flops:111.30, batch-reuse:1
@ 2775 train 4.1855 , allloss: 4.1857, dt: 902.65ms, fracRes: 0.2861, norm(attn): 0.3867, norm(output): 2.5156, norm(x): 2.1022, norm(y): 1.0017, norm:0.6519, tok/sec: 145207.25, flops:113.09, batch-reuse:1
@ 2776 train 4.2981 , allloss: 4.2985, dt: 911.98ms, fracRes: 0.2862, norm(attn): 0.3926, norm(output): 2.5156, norm(x): 2.1163, norm(y): 1.0018, norm:0.8235, tok/sec: 143723.14, flops:111.93, batch-reuse:1
@ 2777 train 4.1401 , allloss: 4.1402, dt: 912.41ms, fracRes: 0.2853, norm(attn): 0.4004, norm(output): 2.5469, norm(x): 2.1293, norm(y): 1.0019, norm:0.9887, tok/sec: 143655.24, flops:111.88, batch-reuse:1
@ 2778 train 4.2990 , allloss: 4.2992, dt: 910.70ms, fracRes: 0.2855, norm(attn): 0.3965, norm(output): 2.5000, norm(x): 2.1015, norm(y): 1.0018, norm:0.9067, tok/sec: 143924.21, flops:112.09, batch-reuse:1
@ 2779 train 4.1458 , allloss: 4.1461, dt: 902.93ms, fracRes: 0.2854, norm(attn): 0.3984, norm(output): 2.5000, norm(x): 2.0966, norm(y): 1.0017, norm:0.8774, tok/sec: 145162.93, flops:113.05, batch-reuse:1
@ 2780 train 4.0396 , allloss: 4.0397, dt: 899.20ms, fracRes: 0.2853, norm(attn): 0.4004, norm(output): 2.5000, norm(x): 2.1029, norm(y): 1.0016, norm:0.8199, tok/sec: 145765.36, flops:113.52, batch-reuse:1
@ 2781 train 4.0192 , allloss: 4.0193, dt: 912.57ms, fracRes: 0.2844, norm(attn): 0.4004, norm(output): 2.5156, norm(x): 2.1164, norm(y): 1.0016, norm:0.6692, tok/sec: 143630.24, flops:111.86, batch-reuse:1
@ 2782 train 4.1448 , allloss: 4.1451, dt: 900.81ms, fracRes: 0.2854, norm(attn): 0.3965, norm(output): 2.5156, norm(x): 2.1266, norm(y): 1.0016, norm:0.6830, tok/sec: 145504.52, flops:113.32, batch-reuse:1
@ 2783 train 4.1820 , allloss: 4.1821, dt: 903.79ms, fracRes: 0.2844, norm(attn): 0.3906, norm(output): 2.4844, norm(x): 2.0931, norm(y): 1.0013, norm:0.6451, tok/sec: 145024.30, flops:112.95, batch-reuse:1
@ 2784 train 4.2057 , allloss: 4.2058, dt: 907.13ms, fracRes: 0.2861, norm(attn): 0.3906, norm(output): 2.5156, norm(x): 2.1256, norm(y): 1.0014, norm:0.7054, tok/sec: 144490.60, flops:112.53, batch-reuse:1
@ 2785 train 4.3102 , allloss: 4.3105, dt: 905.29ms, fracRes: 0.2854, norm(attn): 0.3984, norm(output): 2.5781, norm(x): 2.1446, norm(y): 1.0015, norm:0.7267, tok/sec: 144784.83, flops:112.76, batch-reuse:1
@ 2786 train 4.2277 , allloss: 4.2279, dt: 905.92ms, fracRes: 0.2855, norm(attn): 0.4023, norm(output): 2.6250, norm(x): 2.1664, norm(y): 1.0016, norm:0.7835, tok/sec: 144684.12, flops:112.68, batch-reuse:1
@ 2787 train 4.3117 , allloss: 4.3119, dt: 923.94ms, fracRes: 0.2860, norm(attn): 0.3984, norm(output): 2.5312, norm(x): 2.1394, norm(y): 1.0014, norm:0.7575, tok/sec: 141862.25, flops:110.48, batch-reuse:1
@ 2788 train 4.3249 , allloss: 4.3250, dt: 906.14ms, fracRes: 0.2847, norm(attn): 0.3984, norm(output): 2.5000, norm(x): 2.1050, norm(y): 1.0012, norm:0.7347, tok/sec: 144648.94, flops:112.65, batch-reuse:1
@ 2789 train 4.3266 , allloss: 4.3267, dt: 917.20ms, fracRes: 0.2852, norm(attn): 0.4004, norm(output): 2.5156, norm(x): 2.1125, norm(y): 1.0013, norm:0.6152, tok/sec: 142904.52, flops:111.29, batch-reuse:1
@ 2790 train 4.3743 , allloss: 4.3745, dt: 917.48ms, fracRes: 0.2865, norm(attn): 0.4043, norm(output): 2.5312, norm(x): 2.1474, norm(y): 1.0015, norm:0.7024, tok/sec: 142860.81, flops:111.26, batch-reuse:1
@ 2791 train 4.2924 , allloss: 4.2925, dt: 916.39ms, fracRes: 0.2856, norm(attn): 0.4043, norm(output): 2.5156, norm(x): 2.1329, norm(y): 1.0014, norm:0.6511, tok/sec: 143031.19, flops:111.39, batch-reuse:1
@ 2792 train 4.9571 , allloss: 4.9572, dt: 903.46ms, fracRes: 0.2879, norm(attn): 0.3945, norm(output): 2.5312, norm(x): 2.1589, norm(y): 1.0015, norm:0.9561, tok/sec: 145078.50, flops:112.99, batch-reuse:1
@ 2793 train 4.3758 , allloss: 4.3759, dt: 890.96ms, fracRes: 0.2852, norm(attn): 0.4043, norm(output): 2.5625, norm(x): 2.1589, norm(y): 1.0012, norm:1.1114, tok/sec: 147112.52, flops:114.57, batch-reuse:1
@ 2794 train 4.2991 , allloss: 4.2993, dt: 911.78ms, fracRes: 0.2856, norm(attn): 0.4043, norm(output): 2.5312, norm(x): 2.1421, norm(y): 1.0012, norm:0.9334, tok/sec: 143754.71, flops:111.96, batch-reuse:1
@ 2795 train 4.3008 , allloss: 4.3011, dt: 907.00ms, fracRes: 0.2853, norm(attn): 0.4023, norm(output): 2.5156, norm(x): 2.1297, norm(y): 1.0012, norm:0.8263, tok/sec: 144512.21, flops:112.55, batch-reuse:1
@ 2796 train 4.4125 , allloss: 4.4127, dt: 899.55ms, fracRes: 0.2851, norm(attn): 0.4043, norm(output): 2.5312, norm(x): 2.1376, norm(y): 1.0013, norm:0.8065, tok/sec: 145708.34, flops:113.48, batch-reuse:1
@ 2797 train 4.2830 , allloss: 4.2832, dt: 903.34ms, fracRes: 0.2851, norm(attn): 0.4062, norm(output): 2.5156, norm(x): 2.1356, norm(y): 1.0013, norm:0.7880, tok/sec: 145097.11, flops:113.00, batch-reuse:1
@ 2798 train 4.3174 , allloss: 4.3176, dt: 900.87ms, fracRes: 0.2855, norm(attn): 0.4023, norm(output): 2.5156, norm(x): 2.1339, norm(y): 1.0012, norm:0.8103, tok/sec: 145494.97, flops:113.31, batch-reuse:1
@ 2799 train 4.2889 , allloss: 4.2892, dt: 904.65ms, fracRes: 0.2853, norm(attn): 0.4004, norm(output): 2.5156, norm(x): 2.1312, norm(y): 1.0011, norm:0.7629, tok/sec: 144886.48, flops:112.84, batch-reuse:1
@ 2800 train 4.4900 , allloss: 4.4901, dt: 898.15ms, fracRes: 0.2876, norm(attn): 0.3867, norm(output): 2.5469, norm(x): 2.1647, norm(y): 1.0014, norm:0.8573, tok/sec: 145935.23, flops:113.65, batch-reuse:1
@ 2801 train 4.3869 , allloss: 4.3872, dt: 906.47ms, fracRes: 0.2861, norm(attn): 0.3965, norm(output): 2.5625, norm(x): 2.1543, norm(y): 1.0012, norm:1.5020, tok/sec: 144595.64, flops:112.61, batch-reuse:1
@ 2802 train 4.3600 , allloss: 4.3602, dt: 893.08ms, fracRes: 0.2854, norm(attn): 0.3984, norm(output): 2.5625, norm(x): 2.1481, norm(y): 1.0011, norm:0.9521, tok/sec: 146764.32, flops:114.30, batch-reuse:1
@ 2803 train 4.3165 , allloss: 4.3184, dt: 930.13ms, fracRes: 0.2858, norm(attn): 0.3984, norm(output): 2.5312, norm(x): 2.1467, norm(y): 1.0012, norm:0.9644, tok/sec: 140918.30, flops:109.75, batch-reuse:1
@ 2804 train 4.3833 , allloss: 4.3854, dt: 916.52ms, fracRes: 0.2864, norm(attn): 0.4023, norm(output): 2.5156, norm(x): 2.1540, norm(y): 1.0012, norm:0.9395, tok/sec: 143010.02, flops:111.38, batch-reuse:1
@ 2805 train 4.1940 , allloss: 4.2002, dt: 908.37ms, fracRes: 0.2848, norm(attn): 0.4023, norm(output): 2.5156, norm(x): 2.1579, norm(y): 1.0012, norm:0.8908, tok/sec: 144292.90, flops:112.38, batch-reuse:1
@ 2806 train 4.2278 , allloss: 4.2282, dt: 906.35ms, fracRes: 0.2851, norm(attn): 0.4062, norm(output): 2.5312, norm(x): 2.1639, norm(y): 1.0013, norm:0.8575, tok/sec: 144615.84, flops:112.63, batch-reuse:1
@ 2807 train 4.5368 , allloss: 4.5374, dt: 899.75ms, fracRes: 0.2856, norm(attn): 0.4004, norm(output): 2.5312, norm(x): 2.1646, norm(y): 1.0011, norm:0.7724, tok/sec: 145676.22, flops:113.45, batch-reuse:1
@ 2808 train 4.3055 , allloss: 4.3057, dt: 906.60ms, fracRes: 0.2863, norm(attn): 0.4004, norm(output): 2.5938, norm(x): 2.1625, norm(y): 1.0011, norm:0.7652, tok/sec: 144574.58, flops:112.60, batch-reuse:1
@ 2809 train 4.2641 , allloss: 4.2643, dt: 905.56ms, fracRes: 0.2860, norm(attn): 0.4043, norm(output): 2.5781, norm(x): 2.1521, norm(y): 1.0010, norm:0.8025, tok/sec: 144742.02, flops:112.73, batch-reuse:1
@ 2810 train 4.2735 , allloss: 4.2737, dt: 906.85ms, fracRes: 0.2853, norm(attn): 0.4062, norm(output): 2.5938, norm(x): 2.1556, norm(y): 1.0011, norm:0.7752, tok/sec: 144535.62, flops:112.56, batch-reuse:1
@ 2811 train 4.3364 , allloss: 4.3367, dt: 899.61ms, fracRes: 0.2861, norm(attn): 0.4004, norm(output): 2.5625, norm(x): 2.1324, norm(y): 1.0011, norm:0.7174, tok/sec: 145698.61, flops:113.47, batch-reuse:1
@ 2812 train 4.3386 , allloss: 4.3387, dt: 896.02ms, fracRes: 0.2855, norm(attn): 0.4023, norm(output): 2.5469, norm(x): 2.1305, norm(y): 1.0011, norm:0.8422, tok/sec: 146281.64, flops:113.92, batch-reuse:1
@ 2813 train 4.3511 , allloss: 4.3558, dt: 911.24ms, fracRes: 0.2860, norm(attn): 0.4004, norm(output): 2.5469, norm(x): 2.1409, norm(y): 1.0012, norm:0.7317, tok/sec: 143839.30, flops:112.02, batch-reuse:1
@ 2814 train 4.3190 , allloss: 4.3192, dt: 898.87ms, fracRes: 0.2855, norm(attn): 0.4004, norm(output): 2.5469, norm(x): 2.1310, norm(y): 1.0011, norm:0.6758, tok/sec: 145819.30, flops:113.56, batch-reuse:1
@ 2815 train 4.3490 , allloss: 4.3493, dt: 902.76ms, fracRes: 0.2848, norm(attn): 0.3965, norm(output): 2.5156, norm(x): 2.1249, norm(y): 1.0010, norm:0.7737, tok/sec: 145190.38, flops:113.07, batch-reuse:1
@ 2816 train 4.2750 , allloss: 4.2753, dt: 899.22ms, fracRes: 0.2860, norm(attn): 0.3984, norm(output): 2.5781, norm(x): 2.1536, norm(y): 1.0011, norm:0.8312, tok/sec: 145761.19, flops:113.52, batch-reuse:1
@ 2817 train 4.3743 , allloss: 4.3744, dt: 886.91ms, fracRes: 0.2850, norm(attn): 0.3965, norm(output): 2.5156, norm(x): 2.1347, norm(y): 1.0008, norm:0.7040, tok/sec: 147785.01, flops:115.10, batch-reuse:1
@ 2818 train 4.3226 , allloss: 4.3229, dt: 900.57ms, fracRes: 0.2851, norm(attn): 0.3984, norm(output): 2.5938, norm(x): 2.1572, norm(y): 1.0008, norm:0.7656, tok/sec: 145543.58, flops:113.35, batch-reuse:1
@ 2819 train 4.3193 , allloss: 4.3195, dt: 903.90ms, fracRes: 0.2852, norm(attn): 0.3965, norm(output): 2.5938, norm(x): 2.1700, norm(y): 1.0008, norm:0.6857, tok/sec: 145007.66, flops:112.93, batch-reuse:1
@ 2820 train 4.3002 , allloss: 4.3004, dt: 904.62ms, fracRes: 0.2861, norm(attn): 0.3965, norm(output): 2.6094, norm(x): 2.1723, norm(y): 1.0010, norm:0.7267, tok/sec: 144891.22, flops:112.84, batch-reuse:1
@ 2821 train 4.2563 , allloss: 4.2565, dt: 875.59ms, fracRes: 0.2857, norm(attn): 0.3965, norm(output): 2.5781, norm(x): 2.1762, norm(y): 1.0010, norm:0.7174, tok/sec: 149695.50, flops:116.58, batch-reuse:1
@ 2822 train 4.2564 , allloss: 4.2566, dt: 899.66ms, fracRes: 0.2855, norm(attn): 0.4004, norm(output): 2.5781, norm(x): 2.1753, norm(y): 1.0009, norm:0.6614, tok/sec: 145690.58, flops:113.46, batch-reuse:1
@ 2823 train 4.3083 , allloss: 4.3086, dt: 915.94ms, fracRes: 0.2845, norm(attn): 0.4023, norm(output): 2.5938, norm(x): 2.1700, norm(y): 1.0008, norm:0.6803, tok/sec: 143101.44, flops:111.45, batch-reuse:1
@ 2824 train 4.2487 , allloss: 4.2491, dt: 920.64ms, fracRes: 0.2855, norm(attn): 0.4004, norm(output): 2.5781, norm(x): 2.1768, norm(y): 1.0008, norm:0.6325, tok/sec: 142371.19, flops:110.88, batch-reuse:1
@ 2825 train 4.2864 , allloss: 4.2867, dt: 895.51ms, fracRes: 0.2849, norm(attn): 0.4004, norm(output): 2.5781, norm(x): 2.1801, norm(y): 1.0009, norm:0.6543, tok/sec: 146366.23, flops:113.99, batch-reuse:1
@ 2826 train 4.3271 , allloss: 4.3273, dt: 891.09ms, fracRes: 0.2853, norm(attn): 0.3945, norm(output): 2.5781, norm(x): 2.1666, norm(y): 1.0008, norm:0.5976, tok/sec: 147091.27, flops:114.56, batch-reuse:1
@ 2827 train 4.3509 , allloss: 4.3510, dt: 890.75ms, fracRes: 0.2850, norm(attn): 0.3965, norm(output): 2.5938, norm(x): 2.1780, norm(y): 1.0007, norm:0.6914, tok/sec: 147147.13, flops:114.60, batch-reuse:1
@ 2828 train 4.3131 , allloss: 4.3133, dt: 903.79ms, fracRes: 0.2856, norm(attn): 0.4023, norm(output): 2.6406, norm(x): 2.1899, norm(y): 1.0008, norm:0.6880, tok/sec: 145024.38, flops:112.95, batch-reuse:1
@ 2829 train 4.2904 , allloss: 4.2905, dt: 910.48ms, fracRes: 0.2839, norm(attn): 0.4004, norm(output): 2.5938, norm(x): 2.1693, norm(y): 1.0006, norm:0.5996, tok/sec: 143958.51, flops:112.12, batch-reuse:1
@ 2830 train 4.3255 , allloss: 4.3270, dt: 902.57ms, fracRes: 0.2861, norm(attn): 0.3984, norm(output): 2.5938, norm(x): 2.1905, norm(y): 1.0009, norm:0.7530, tok/sec: 145220.10, flops:113.10, batch-reuse:1
@ 2831 train 4.3492 , allloss: 4.3494, dt: 905.70ms, fracRes: 0.2853, norm(attn): 0.4023, norm(output): 2.6562, norm(x): 2.1894, norm(y): 1.0009, norm:0.7401, tok/sec: 144718.97, flops:112.71, batch-reuse:1
@ 2832 train 4.2520 , allloss: 4.2523, dt: 906.37ms, fracRes: 0.2857, norm(attn): 0.3984, norm(output): 2.5938, norm(x): 2.1658, norm(y): 1.0007, norm:0.5998, tok/sec: 144612.07, flops:112.62, batch-reuse:1
@ 2833 train 4.3345 , allloss: 4.3347, dt: 908.88ms, fracRes: 0.2854, norm(attn): 0.3984, norm(output): 2.5625, norm(x): 2.1632, norm(y): 1.0007, norm:0.6359, tok/sec: 144212.70, flops:112.31, batch-reuse:1
@ 2834 train 4.3357 , allloss: 4.3358, dt: 885.36ms, fracRes: 0.2846, norm(attn): 0.4043, norm(output): 2.5938, norm(x): 2.1730, norm(y): 1.0008, norm:0.6514, tok/sec: 148044.53, flops:115.30, batch-reuse:1
@ 2835 train 4.3197 , allloss: 4.3198, dt: 904.67ms, fracRes: 0.2861, norm(attn): 0.4004, norm(output): 2.5938, norm(x): 2.1923, norm(y): 1.0010, norm:0.8256, tok/sec: 144883.01, flops:112.84, batch-reuse:1
@ 2836 train 4.3063 , allloss: 4.3066, dt: 881.11ms, fracRes: 0.2852, norm(attn): 0.4043, norm(output): 2.5312, norm(x): 2.1494, norm(y): 1.0008, norm:0.7650, tok/sec: 148757.87, flops:115.85, batch-reuse:1
@ 2837 train 4.4020 , allloss: 4.4021, dt: 905.70ms, fracRes: 0.2854, norm(attn): 0.4043, norm(output): 2.5938, norm(x): 2.1920, norm(y): 1.0009, norm:0.7011, tok/sec: 144719.39, flops:112.71, batch-reuse:1
@ 2838 train 4.4880 , allloss: 4.4881, dt: 898.35ms, fracRes: 0.2846, norm(attn): 0.4023, norm(output): 2.6406, norm(x): 2.1979, norm(y): 1.0009, norm:0.7102, tok/sec: 145903.20, flops:113.63, batch-reuse:1
@ 2839 train 4.2535 , allloss: 4.2536, dt: 904.66ms, fracRes: 0.2855, norm(attn): 0.3984, norm(output): 2.5938, norm(x): 2.1977, norm(y): 1.0008, norm:0.6256, tok/sec: 144884.99, flops:112.84, batch-reuse:1
@ 2840 train 4.3027 , allloss: 4.3029, dt: 900.99ms, fracRes: 0.2856, norm(attn): 0.4062, norm(output): 2.5938, norm(x): 2.2065, norm(y): 1.0008, norm:0.6373, tok/sec: 145475.68, flops:113.30, batch-reuse:1
@ 2841 train 4.2940 , allloss: 4.2942, dt: 896.70ms, fracRes: 0.2854, norm(attn): 0.4062, norm(output): 2.5938, norm(x): 2.2110, norm(y): 1.0007, norm:0.7005, tok/sec: 146171.46, flops:113.84, batch-reuse:1
@ 2842 train 4.3118 , allloss: 4.3120, dt: 902.62ms, fracRes: 0.2850, norm(attn): 0.4043, norm(output): 2.5938, norm(x): 2.2106, norm(y): 1.0007, norm:0.6030, tok/sec: 145212.66, flops:113.09, batch-reuse:1
@ 2843 train 4.2490 , allloss: 4.2492, dt: 902.31ms, fracRes: 0.2847, norm(attn): 0.4023, norm(output): 2.5938, norm(x): 2.2097, norm(y): 1.0007, norm:0.6728, tok/sec: 145263.31, flops:113.13, batch-reuse:1
@ 2844 train 4.2274 , allloss: 4.2275, dt: 896.61ms, fracRes: 0.2845, norm(attn): 0.4043, norm(output): 2.6406, norm(x): 2.2118, norm(y): 1.0007, norm:0.5787, tok/sec: 146185.84, flops:113.85, batch-reuse:1
@ 2845 train 4.2629 , allloss: 4.2630, dt: 911.31ms, fracRes: 0.2853, norm(attn): 0.4043, norm(output): 2.6562, norm(x): 2.2156, norm(y): 1.0008, norm:0.5702, tok/sec: 143828.61, flops:112.01, batch-reuse:1
@ 2846 train 4.2903 , allloss: 4.2906, dt: 898.95ms, fracRes: 0.2845, norm(attn): 0.4043, norm(output): 2.6250, norm(x): 2.2038, norm(y): 1.0006, norm:0.5551, tok/sec: 145806.03, flops:113.55, batch-reuse:1
@ 2847 train 4.2930 , allloss: 4.2933, dt: 906.40ms, fracRes: 0.2848, norm(attn): 0.4004, norm(output): 2.6250, norm(x): 2.2108, norm(y): 1.0007, norm:0.7047, tok/sec: 144607.51, flops:112.62, batch-reuse:1
@ 2848 train 4.3259 , allloss: 4.3260, dt: 901.95ms, fracRes: 0.2837, norm(attn): 0.4043, norm(output): 2.6719, norm(x): 2.2101, norm(y): 1.0007, norm:0.7291, tok/sec: 145320.37, flops:113.18, batch-reuse:1
@ 2849 train 4.2886 , allloss: 4.2888, dt: 893.88ms, fracRes: 0.2842, norm(attn): 0.4043, norm(output): 2.6719, norm(x): 2.2173, norm(y): 1.0007, norm:0.6149, tok/sec: 146632.64, flops:114.20, batch-reuse:1
@ 2850 train 4.2270 , allloss: 4.2272, dt: 884.52ms, fracRes: 0.2850, norm(attn): 0.4023, norm(output): 2.5781, norm(x): 2.1985, norm(y): 1.0006, norm:0.7239, tok/sec: 148184.76, flops:115.41, batch-reuse:1
@ 2851 train 4.2074 , allloss: 4.2076, dt: 912.43ms, fracRes: 0.2844, norm(attn): 0.4043, norm(output): 2.6094, norm(x): 2.2063, norm(y): 1.0006, norm:0.6402, tok/sec: 143650.92, flops:111.88, batch-reuse:1
@ 2852 train 4.2218 , allloss: 4.2219, dt: 893.14ms, fracRes: 0.2845, norm(attn): 0.4062, norm(output): 2.6250, norm(x): 2.2192, norm(y): 1.0007, norm:0.6231, tok/sec: 146753.39, flops:114.29, batch-reuse:1
@ 2853 train 4.2966 , allloss: 4.2969, dt: 898.86ms, fracRes: 0.2852, norm(attn): 0.4062, norm(output): 2.6562, norm(x): 2.2284, norm(y): 1.0007, norm:0.7373, tok/sec: 145820.11, flops:113.57, batch-reuse:1
@ 2854 train 4.2576 , allloss: 4.2580, dt: 896.84ms, fracRes: 0.2851, norm(attn): 0.4023, norm(output): 2.6562, norm(x): 2.2252, norm(y): 1.0009, norm:0.7835, tok/sec: 146147.95, flops:113.82, batch-reuse:1
@ 2855 train 4.2452 , allloss: 4.2453, dt: 917.79ms, fracRes: 0.2844, norm(attn): 0.4004, norm(output): 2.6250, norm(x): 2.2028, norm(y): 1.0007, norm:0.5792, tok/sec: 142812.04, flops:111.22, batch-reuse:1
@ 2856 train 4.2646 , allloss: 4.2647, dt: 915.98ms, fracRes: 0.2839, norm(attn): 0.4023, norm(output): 2.5938, norm(x): 2.2040, norm(y): 1.0007, norm:0.6240, tok/sec: 143094.92, flops:111.44, batch-reuse:1
@ 2857 train 4.2242 , allloss: 4.2247, dt: 922.75ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 2.6406, norm(x): 2.2183, norm(y): 1.0007, norm:0.6741, tok/sec: 142044.83, flops:110.63, batch-reuse:1
@ 2858 train 4.1984 , allloss: 4.1986, dt: 911.79ms, fracRes: 0.2849, norm(attn): 0.4043, norm(output): 2.6875, norm(x): 2.2394, norm(y): 1.0008, norm:0.6158, tok/sec: 143752.94, flops:111.96, batch-reuse:1
@ 2859 train 4.1951 , allloss: 4.1952, dt: 913.24ms, fracRes: 0.2839, norm(attn): 0.4043, norm(output): 2.7188, norm(x): 2.2689, norm(y): 1.0007, norm:1.1742, tok/sec: 143524.61, flops:111.78, batch-reuse:1
@ 2860 train 4.3279 , allloss: 4.3282, dt: 907.82ms, fracRes: 0.2840, norm(attn): 0.4043, norm(output): 2.6719, norm(x): 2.2487, norm(y): 1.0008, norm:0.9839, tok/sec: 144380.63, flops:112.44, batch-reuse:1
@ 2861 train 4.4714 , allloss: 4.4715, dt: 899.51ms, fracRes: 0.2824, norm(attn): 0.4023, norm(output): 2.6562, norm(x): 2.2202, norm(y): 1.0007, norm:1.1764, tok/sec: 145715.45, flops:113.48, batch-reuse:1
@ 2862 train 4.3717 , allloss: 4.3718, dt: 892.85ms, fracRes: 0.2849, norm(attn): 0.3984, norm(output): 2.5938, norm(x): 2.2146, norm(y): 1.0008, norm:0.9330, tok/sec: 146801.20, flops:114.33, batch-reuse:1
@ 2863 train 4.3761 , allloss: 4.3762, dt: 888.03ms, fracRes: 0.2839, norm(attn): 0.4043, norm(output): 2.6562, norm(x): 2.2175, norm(y): 1.0009, norm:1.0688, tok/sec: 147598.85, flops:114.95, batch-reuse:1
@ 2864 train 4.2011 , allloss: 4.2012, dt: 907.02ms, fracRes: 0.2841, norm(attn): 0.4004, norm(output): 2.6562, norm(x): 2.2228, norm(y): 1.0007, norm:0.9289, tok/sec: 144508.07, flops:112.54, batch-reuse:1
@ 2865 train 4.2834 , allloss: 4.2835, dt: 896.14ms, fracRes: 0.2842, norm(attn): 0.3984, norm(output): 2.6875, norm(x): 2.2312, norm(y): 1.0007, norm:0.7415, tok/sec: 146263.31, flops:113.91, batch-reuse:1
@ 2866 train 4.3676 , allloss: 4.3678, dt: 910.39ms, fracRes: 0.2849, norm(attn): 0.3984, norm(output): 2.6719, norm(x): 2.2199, norm(y): 1.0007, norm:0.8233, tok/sec: 143973.85, flops:112.13, batch-reuse:1
@ 2867 train 4.3136 , allloss: 4.3137, dt: 918.33ms, fracRes: 0.2841, norm(attn): 0.3965, norm(output): 2.6562, norm(x): 2.1953, norm(y): 1.0006, norm:0.7074, tok/sec: 142728.43, flops:111.16, batch-reuse:1
@ 2868 train 4.3863 , allloss: 4.3865, dt: 903.51ms, fracRes: 0.2847, norm(attn): 0.3945, norm(output): 2.6875, norm(x): 2.2043, norm(y): 1.0007, norm:0.7792, tok/sec: 145069.35, flops:112.98, batch-reuse:1
@ 2869 train 4.2312 , allloss: 4.2314, dt: 904.87ms, fracRes: 0.2849, norm(attn): 0.3906, norm(output): 2.6562, norm(x): 2.2123, norm(y): 1.0007, norm:0.7761, tok/sec: 144852.35, flops:112.81, batch-reuse:1
@ 2870 train 4.3528 , allloss: 4.3529, dt: 899.87ms, fracRes: 0.2847, norm(attn): 0.3984, norm(output): 2.6719, norm(x): 2.2252, norm(y): 1.0007, norm:0.6917, tok/sec: 145657.03, flops:113.44, batch-reuse:1
@ 2871 train 4.2276 , allloss: 4.2278, dt: 886.33ms, fracRes: 0.2852, norm(attn): 0.3945, norm(output): 2.6406, norm(x): 2.2216, norm(y): 1.0007, norm:0.6934, tok/sec: 147881.02, flops:115.17, batch-reuse:1
@ 2872 train 4.3112 , allloss: 4.3113, dt: 896.92ms, fracRes: 0.2850, norm(attn): 0.4023, norm(output): 2.6719, norm(x): 2.2242, norm(y): 1.0006, norm:0.6132, tok/sec: 146135.63, flops:113.81, batch-reuse:1
@ 2873 train 4.3407 , allloss: 4.3408, dt: 896.85ms, fracRes: 0.2853, norm(attn): 0.4023, norm(output): 2.6719, norm(x): 2.2527, norm(y): 1.0007, norm:0.7223, tok/sec: 146147.44, flops:113.82, batch-reuse:1
@ 2874 train 4.2537 , allloss: 4.2539, dt: 896.84ms, fracRes: 0.2848, norm(attn): 0.4023, norm(output): 2.6562, norm(x): 2.2447, norm(y): 1.0006, norm:0.5891, tok/sec: 146148.72, flops:113.82, batch-reuse:1
@ 2875 train 4.4247 , allloss: 4.4249, dt: 900.98ms, fracRes: 0.2844, norm(attn): 0.4023, norm(output): 2.6719, norm(x): 2.2441, norm(y): 1.0005, norm:0.6466, tok/sec: 145476.76, flops:113.30, batch-reuse:1
@ 2876 train 4.2819 , allloss: 4.2821, dt: 901.37ms, fracRes: 0.2853, norm(attn): 0.4043, norm(output): 2.7031, norm(x): 2.2527, norm(y): 1.0005, norm:0.6415, tok/sec: 145413.69, flops:113.25, batch-reuse:1
@ 2877 train 4.3376 , allloss: 4.3377, dt: 903.74ms, fracRes: 0.2849, norm(attn): 0.4023, norm(output): 2.7031, norm(x): 2.2527, norm(y): 1.0004, norm:0.6754, tok/sec: 145032.49, flops:112.95, batch-reuse:1
@ 2878 train 4.2840 , allloss: 4.2843, dt: 917.29ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 2.6719, norm(x): 2.2382, norm(y): 1.0003, norm:0.6308, tok/sec: 142890.62, flops:111.28, batch-reuse:1
@ 2879 train 4.2460 , allloss: 4.2461, dt: 891.47ms, fracRes: 0.2846, norm(attn): 0.4043, norm(output): 2.6719, norm(x): 2.2357, norm(y): 1.0004, norm:0.6150, tok/sec: 147029.66, flops:114.51, batch-reuse:1
@ 2880 train 4.2767 , allloss: 4.2769, dt: 919.80ms, fracRes: 0.2843, norm(attn): 0.4043, norm(output): 2.6562, norm(x): 2.2325, norm(y): 1.0003, norm:0.6422, tok/sec: 142499.87, flops:110.98, batch-reuse:1
@ 2881 train 4.2623 , allloss: 4.2627, dt: 902.19ms, fracRes: 0.2844, norm(attn): 0.4023, norm(output): 2.6562, norm(x): 2.2251, norm(y): 1.0003, norm:0.5846, tok/sec: 145282.23, flops:113.15, batch-reuse:1
@ 2882 train 4.2468 , allloss: 4.2469, dt: 903.05ms, fracRes: 0.2844, norm(attn): 0.4043, norm(output): 2.6875, norm(x): 2.2373, norm(y): 1.0005, norm:0.5506, tok/sec: 145144.34, flops:113.04, batch-reuse:1
@ 2883 train 4.2988 , allloss: 4.2989, dt: 904.20ms, fracRes: 0.2849, norm(attn): 0.4004, norm(output): 2.7031, norm(x): 2.2442, norm(y): 1.0005, norm:0.5802, tok/sec: 144959.56, flops:112.90, batch-reuse:1
@ 2884 train 4.1472 , allloss: 4.1473, dt: 908.45ms, fracRes: 0.2850, norm(attn): 0.4023, norm(output): 2.6562, norm(x): 2.2279, norm(y): 1.0004, norm:0.5763, tok/sec: 144280.44, flops:112.37, batch-reuse:1
@ 2885 train 4.1659 , allloss: 4.1660, dt: 907.18ms, fracRes: 0.2844, norm(attn): 0.4004, norm(output): 2.6250, norm(x): 2.2227, norm(y): 1.0003, norm:0.5992, tok/sec: 144482.13, flops:112.52, batch-reuse:1
@ 2886 train 4.1933 , allloss: 4.1936, dt: 887.22ms, fracRes: 0.2851, norm(attn): 0.3965, norm(output): 2.6875, norm(x): 2.2412, norm(y): 1.0004, norm:0.5731, tok/sec: 147733.42, flops:115.06, batch-reuse:1
@ 2887 train 4.1616 , allloss: 4.1620, dt: 907.64ms, fracRes: 0.2848, norm(attn): 0.4023, norm(output): 2.7500, norm(x): 2.2754, norm(y): 1.0004, norm:0.6276, tok/sec: 144410.25, flops:112.47, batch-reuse:1
@ 2888 train 4.1964 , allloss: 4.1965, dt: 887.93ms, fracRes: 0.2838, norm(attn): 0.4023, norm(output): 2.7344, norm(x): 2.2525, norm(y): 1.0002, norm:0.7015, tok/sec: 147615.97, flops:114.96, batch-reuse:1
@ 2889 train 4.2169 , allloss: 4.2170, dt: 906.00ms, fracRes: 0.2844, norm(attn): 0.4023, norm(output): 2.7344, norm(x): 2.2739, norm(y): 1.0004, norm:0.6375, tok/sec: 144670.83, flops:112.67, batch-reuse:1
@ 2890 train 4.2460 , allloss: 4.2461, dt: 891.14ms, fracRes: 0.2848, norm(attn): 0.4043, norm(output): 2.7344, norm(x): 2.2803, norm(y): 1.0004, norm:0.6067, tok/sec: 147083.47, flops:114.55, batch-reuse:1
@ 2891 train 4.2435 , allloss: 4.2437, dt: 905.84ms, fracRes: 0.2846, norm(attn): 0.4043, norm(output): 2.7344, norm(x): 2.2702, norm(y): 1.0003, norm:0.7271, tok/sec: 144697.22, flops:112.69, batch-reuse:1
@ 2892 train 4.1937 , allloss: 4.1942, dt: 902.17ms, fracRes: 0.2846, norm(attn): 0.4043, norm(output): 2.7500, norm(x): 2.2818, norm(y): 1.0003, norm:0.6974, tok/sec: 145284.73, flops:113.15, batch-reuse:1
@ 2893 train 4.1475 , allloss: 4.1476, dt: 917.91ms, fracRes: 0.2850, norm(attn): 0.4043, norm(output): 2.7344, norm(x): 2.2770, norm(y): 1.0004, norm:0.5918, tok/sec: 142793.24, flops:111.21, batch-reuse:1
@ 2894 train 4.1777 , allloss: 4.1778, dt: 921.65ms, fracRes: 0.2845, norm(attn): 0.4004, norm(output): 2.7344, norm(x): 2.2674, norm(y): 1.0003, norm:0.6735, tok/sec: 142214.30, flops:110.76, batch-reuse:1
@ 2895 train 4.3069 , allloss: 4.3071, dt: 887.40ms, fracRes: 0.2852, norm(attn): 0.4023, norm(output): 2.7344, norm(x): 2.2915, norm(y): 1.0003, norm:0.6603, tok/sec: 147704.13, flops:115.03, batch-reuse:1
@ 2896 train 4.2898 , allloss: 4.2900, dt: 898.58ms, fracRes: 0.2848, norm(attn): 0.4043, norm(output): 2.7500, norm(x): 2.2949, norm(y): 1.0002, norm:0.7982, tok/sec: 145865.45, flops:113.60, batch-reuse:1
@ 2897 train 4.2089 , allloss: 4.2090, dt: 901.88ms, fracRes: 0.2847, norm(attn): 0.3984, norm(output): 2.7500, norm(x): 2.2920, norm(y): 1.0002, norm:0.7055, tok/sec: 145332.05, flops:113.19, batch-reuse:1
@ 2898 train 4.2187 , allloss: 4.2189, dt: 901.55ms, fracRes: 0.2847, norm(attn): 0.4004, norm(output): 2.7344, norm(x): 2.2896, norm(y): 1.0002, norm:0.5876, tok/sec: 145384.74, flops:113.23, batch-reuse:1
@ 2899 train 4.2256 , allloss: 4.2257, dt: 893.99ms, fracRes: 0.2846, norm(attn): 0.4043, norm(output): 2.7344, norm(x): 2.2826, norm(y): 1.0002, norm:0.6931, tok/sec: 146615.27, flops:114.18, batch-reuse:1
@ 2900 train 4.2463 , allloss: 4.2464, dt: 903.73ms, fracRes: 0.2845, norm(attn): 0.4082, norm(output): 2.7344, norm(x): 2.3002, norm(y): 1.0004, norm:0.6700, tok/sec: 145034.29, flops:112.95, batch-reuse:1
@ 2901 train 4.2055 , allloss: 4.2056, dt: 902.30ms, fracRes: 0.2844, norm(attn): 0.4062, norm(output): 2.7344, norm(x): 2.2905, norm(y): 1.0003, norm:0.6648, tok/sec: 145264.50, flops:113.13, batch-reuse:1
@ 2902 train 4.2530 , allloss: 4.2533, dt: 905.17ms, fracRes: 0.2855, norm(attn): 0.4004, norm(output): 2.7500, norm(x): 2.2954, norm(y): 1.0004, norm:0.6724, tok/sec: 144803.40, flops:112.77, batch-reuse:1
@ 2903 train 4.3430 , allloss: 4.3431, dt: 890.06ms, fracRes: 0.2852, norm(attn): 0.4023, norm(output): 2.7344, norm(x): 2.2984, norm(y): 1.0004, norm:0.7725, tok/sec: 147261.60, flops:114.69, batch-reuse:1
@ 2904 train 4.2352 , allloss: 4.2353, dt: 900.43ms, fracRes: 0.2838, norm(attn): 0.4023, norm(output): 2.7344, norm(x): 2.2807, norm(y): 1.0002, norm:0.8099, tok/sec: 145566.17, flops:113.37, batch-reuse:1
@ 2905 train 4.4074 , allloss: 4.4076, dt: 917.36ms, fracRes: 0.2856, norm(attn): 0.4043, norm(output): 2.7188, norm(x): 2.2879, norm(y): 1.0003, norm:0.9132, tok/sec: 142879.67, flops:111.28, batch-reuse:1
@ 2906 train 4.1891 , allloss: 4.1893, dt: 911.08ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 2.7031, norm(x): 2.2539, norm(y): 1.0002, norm:0.6487, tok/sec: 143865.05, flops:112.04, batch-reuse:1
@ 2907 train 4.2827 , allloss: 4.2828, dt: 904.26ms, fracRes: 0.2845, norm(attn): 0.4023, norm(output): 2.7188, norm(x): 2.2604, norm(y): 1.0002, norm:0.8547, tok/sec: 144949.21, flops:112.89, batch-reuse:1
@ 2908 train 4.2192 , allloss: 4.2193, dt: 909.98ms, fracRes: 0.2842, norm(attn): 0.4043, norm(output): 2.7188, norm(x): 2.2601, norm(y): 1.0003, norm:0.8090, tok/sec: 144038.51, flops:112.18, batch-reuse:1
@ 2909 train 4.1981 , allloss: 4.1983, dt: 920.19ms, fracRes: 0.2850, norm(attn): 0.4043, norm(output): 2.6875, norm(x): 2.2663, norm(y): 1.0003, norm:0.7696, tok/sec: 142439.51, flops:110.93, batch-reuse:1
@ 2910 train 4.2060 , allloss: 4.2062, dt: 919.86ms, fracRes: 0.2845, norm(attn): 0.4062, norm(output): 2.7344, norm(x): 2.2666, norm(y): 1.0002, norm:0.8114, tok/sec: 142491.64, flops:110.97, batch-reuse:1
@ 2911 train 4.2634 , allloss: 4.2637, dt: 895.50ms, fracRes: 0.2834, norm(attn): 0.4062, norm(output): 2.7031, norm(x): 2.2569, norm(y): 1.0000, norm:0.7255, tok/sec: 146366.78, flops:113.99, batch-reuse:1
@ 2912 train 4.2700 , allloss: 4.2728, dt: 900.53ms, fracRes: 0.2841, norm(attn): 0.4062, norm(output): 2.7031, norm(x): 2.2583, norm(y): 1.0000, norm:0.7773, tok/sec: 145549.67, flops:113.35, batch-reuse:1
@ 2913 train 4.2295 , allloss: 4.2299, dt: 891.39ms, fracRes: 0.2837, norm(attn): 0.4043, norm(output): 2.6875, norm(x): 2.2569, norm(y): 1.0000, norm:0.6858, tok/sec: 147041.54, flops:114.52, batch-reuse:1
@ 2914 train 4.1363 , allloss: 4.1373, dt: 892.38ms, fracRes: 0.2835, norm(attn): 0.4023, norm(output): 2.6719, norm(x): 2.2651, norm(y): 1.0001, norm:0.6438, tok/sec: 146878.43, flops:114.39, batch-reuse:1
@ 2915 train 4.1703 , allloss: 4.1914, dt: 892.47ms, fracRes: 0.2834, norm(attn): 0.4082, norm(output): 2.6719, norm(x): 2.2739, norm(y): 1.0001, norm:0.6236, tok/sec: 146864.06, flops:114.38, batch-reuse:1
@ 2916 train 4.1347 , allloss: 4.1444, dt: 900.26ms, fracRes: 0.2846, norm(attn): 0.4082, norm(output): 2.7031, norm(x): 2.2881, norm(y): 1.0002, norm:0.6568, tok/sec: 145593.15, flops:113.39, batch-reuse:1
@ 2917 train 4.1876 , allloss: 4.1981, dt: 905.77ms, fracRes: 0.2842, norm(attn): 0.4082, norm(output): 2.6875, norm(x): 2.2838, norm(y): 1.0001, norm:0.6332, tok/sec: 144707.24, flops:112.70, batch-reuse:1
@ 2918 train 4.2770 , allloss: 4.2858, dt: 894.96ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 2.7188, norm(x): 2.2779, norm(y): 1.0000, norm:0.6484, tok/sec: 146455.72, flops:114.06, batch-reuse:1
@ 2919 train 4.1688 , allloss: 4.1759, dt: 899.85ms, fracRes: 0.2840, norm(attn): 0.4062, norm(output): 2.7188, norm(x): 2.2745, norm(y): 1.0001, norm:0.6169, tok/sec: 145659.46, flops:113.44, batch-reuse:1
@ 2920 train 4.2860 , allloss: 4.2867, dt: 898.62ms, fracRes: 0.2832, norm(attn): 0.4023, norm(output): 2.7344, norm(x): 2.2696, norm(y): 1.0000, norm:0.6100, tok/sec: 145858.80, flops:113.60, batch-reuse:1
@ 2921 train 4.2311 , allloss: 4.2331, dt: 906.87ms, fracRes: 0.2834, norm(attn): 0.4023, norm(output): 2.7188, norm(x): 2.2585, norm(y): 0.9999, norm:0.6198, tok/sec: 144531.63, flops:112.56, batch-reuse:1
@ 2922 train 4.1880 , allloss: 4.1900, dt: 896.50ms, fracRes: 0.2837, norm(attn): 0.4043, norm(output): 2.7344, norm(x): 2.2694, norm(y): 0.9999, norm:0.5904, tok/sec: 146204.54, flops:113.86, batch-reuse:1
@ 2923 train 4.1481 , allloss: 4.1483, dt: 890.17ms, fracRes: 0.2843, norm(attn): 0.4004, norm(output): 2.7500, norm(x): 2.2864, norm(y): 0.9999, norm:0.6526, tok/sec: 147243.10, flops:114.67, batch-reuse:1
@ 2924 train 4.2558 , allloss: 4.2601, dt: 917.77ms, fracRes: 0.2845, norm(attn): 0.4023, norm(output): 2.7344, norm(x): 2.2718, norm(y): 0.9999, norm:0.7687, tok/sec: 142815.49, flops:111.23, batch-reuse:1
@ 2925 train 4.3626 , allloss: 4.3668, dt: 884.56ms, fracRes: 0.2855, norm(attn): 0.4023, norm(output): 2.7500, norm(x): 2.3002, norm(y): 0.9999, norm:0.7996, tok/sec: 148177.93, flops:115.40, batch-reuse:1
@ 2926 train 4.2055 , allloss: 4.2061, dt: 903.80ms, fracRes: 0.2850, norm(attn): 0.4043, norm(output): 2.7500, norm(x): 2.3096, norm(y): 1.0000, norm:0.7816, tok/sec: 145022.62, flops:112.94, batch-reuse:1
@ 2927 train 4.1182 , allloss: 4.1183, dt: 915.31ms, fracRes: 0.2851, norm(attn): 0.4062, norm(output): 2.7656, norm(x): 2.3215, norm(y): 1.0000, norm:0.7761, tok/sec: 143199.06, flops:111.52, batch-reuse:1
@ 2928 train 4.1971 , allloss: 4.1975, dt: 883.74ms, fracRes: 0.2842, norm(attn): 0.4062, norm(output): 2.7344, norm(x): 2.2995, norm(y): 0.9997, norm:0.6502, tok/sec: 148315.00, flops:115.51, batch-reuse:1
@ 2929 train 4.1762 , allloss: 4.1763, dt: 897.28ms, fracRes: 0.2839, norm(attn): 0.4043, norm(output): 2.7500, norm(x): 2.2987, norm(y): 0.9998, norm:0.7194, tok/sec: 146077.46, flops:113.77, batch-reuse:1
@ 2930 train 4.1201 , allloss: 4.1203, dt: 906.14ms, fracRes: 0.2845, norm(attn): 0.4043, norm(output): 2.7656, norm(x): 2.3109, norm(y): 1.0000, norm:0.6994, tok/sec: 144648.64, flops:112.65, batch-reuse:1
@ 2931 train 4.0924 , allloss: 4.0928, dt: 899.57ms, fracRes: 0.2845, norm(attn): 0.4023, norm(output): 2.7500, norm(x): 2.3116, norm(y): 0.9999, norm:0.6423, tok/sec: 145705.40, flops:113.48, batch-reuse:1
@ 2932 train 4.0158 , allloss: 4.0160, dt: 895.37ms, fracRes: 0.2843, norm(attn): 0.4004, norm(output): 2.7500, norm(x): 2.3097, norm(y): 0.9996, norm:0.6787, tok/sec: 146388.68, flops:114.01, batch-reuse:1
@ 2933 train 4.1662 , allloss: 4.1662, dt: 910.59ms, fracRes: 0.2844, norm(attn): 0.4062, norm(output): 2.7656, norm(x): 2.3557, norm(y): 0.9996, norm:0.7650, tok/sec: 143942.19, flops:112.10, batch-reuse:1
@ 2934 train 4.1901 , allloss: 4.1901, dt: 898.37ms, fracRes: 0.2847, norm(attn): 0.4043, norm(output): 2.7812, norm(x): 2.3464, norm(y): 0.9997, norm:0.7001, tok/sec: 145899.48, flops:113.63, batch-reuse:1
@ 2935 train 4.1241 , allloss: 4.1242, dt: 892.99ms, fracRes: 0.2841, norm(attn): 0.4004, norm(output): 2.7656, norm(x): 2.3445, norm(y): 0.9997, norm:0.7064, tok/sec: 146779.37, flops:114.31, batch-reuse:1
@ 2936 train 4.0282 , allloss: 4.0282, dt: 909.76ms, fracRes: 0.2840, norm(attn): 0.4004, norm(output): 2.7500, norm(x): 2.3206, norm(y): 0.9997, norm:0.6914, tok/sec: 144073.54, flops:112.20, batch-reuse:1
@ 2937 train 4.0880 , allloss: 4.0882, dt: 928.20ms, fracRes: 0.2837, norm(attn): 0.4062, norm(output): 2.7500, norm(x): 2.3098, norm(y): 0.9997, norm:0.6356, tok/sec: 141211.27, flops:109.98, batch-reuse:1
@ 2938 train 4.1104 , allloss: 4.1105, dt: 914.60ms, fracRes: 0.2843, norm(attn): 0.4043, norm(output): 2.7344, norm(x): 2.3196, norm(y): 0.9997, norm:0.6154, tok/sec: 143310.79, flops:111.61, batch-reuse:1
@ 2939 train 4.1590 , allloss: 4.1592, dt: 923.49ms, fracRes: 0.2836, norm(attn): 0.4043, norm(output): 2.7188, norm(x): 2.2971, norm(y): 0.9995, norm:0.6283, tok/sec: 141931.55, flops:110.54, batch-reuse:1
@ 2940 train 4.1263 , allloss: 4.1264, dt: 903.24ms, fracRes: 0.2842, norm(attn): 0.4004, norm(output): 2.7344, norm(x): 2.3107, norm(y): 0.9995, norm:0.6264, tok/sec: 145112.66, flops:113.01, batch-reuse:1
@ 2941 train 3.9952 , allloss: 3.9953, dt: 905.21ms, fracRes: 0.2839, norm(attn): 0.4023, norm(output): 2.7344, norm(x): 2.3096, norm(y): 0.9994, norm:0.6468, tok/sec: 144797.72, flops:112.77, batch-reuse:1
@ 2942 train 4.1380 , allloss: 4.1381, dt: 899.93ms, fracRes: 0.2833, norm(attn): 0.4062, norm(output): 2.7500, norm(x): 2.3205, norm(y): 0.9994, norm:0.6329, tok/sec: 145646.19, flops:113.43, batch-reuse:1
@ 2943 train 4.1001 , allloss: 4.1002, dt: 894.13ms, fracRes: 0.2843, norm(attn): 0.4023, norm(output): 2.7500, norm(x): 2.3205, norm(y): 0.9994, norm:0.7323, tok/sec: 146591.54, flops:114.17, batch-reuse:1
@ 2944 train 4.1784 , allloss: 4.1786, dt: 909.95ms, fracRes: 0.2836, norm(attn): 0.4023, norm(output): 2.7500, norm(x): 2.3138, norm(y): 0.9994, norm:0.7682, tok/sec: 144043.68, flops:112.18, batch-reuse:1
@ 2945 train 4.1740 , allloss: 4.1742, dt: 908.69ms, fracRes: 0.2842, norm(attn): 0.4023, norm(output): 2.7500, norm(x): 2.3162, norm(y): 0.9994, norm:0.6630, tok/sec: 144242.59, flops:112.34, batch-reuse:1
@ 2946 train 4.0913 , allloss: 4.0916, dt: 912.04ms, fracRes: 0.2838, norm(attn): 0.4043, norm(output): 2.7344, norm(x): 2.3117, norm(y): 0.9993, norm:0.5814, tok/sec: 143712.28, flops:111.92, batch-reuse:1
@ 2947 train 4.1080 , allloss: 4.1081, dt: 908.58ms, fracRes: 0.2841, norm(attn): 0.4043, norm(output): 2.7500, norm(x): 2.3250, norm(y): 0.9995, norm:0.6377, tok/sec: 144260.91, flops:112.35, batch-reuse:1
@ 2948 train 4.0148 , allloss: 4.0150, dt: 906.91ms, fracRes: 0.2835, norm(attn): 0.4062, norm(output): 2.7500, norm(x): 2.3162, norm(y): 0.9995, norm:0.6648, tok/sec: 144526.57, flops:112.56, batch-reuse:1
@ 2949 train 4.0865 , allloss: 4.0870, dt: 928.14ms, fracRes: 0.2836, norm(attn): 0.4062, norm(output): 2.7344, norm(x): 2.3062, norm(y): 0.9995, norm:0.6656, tok/sec: 141220.05, flops:109.98, batch-reuse:1
@ 2950 train 4.1584 , allloss: 4.1586, dt: 924.64ms, fracRes: 0.2848, norm(attn): 0.4043, norm(output): 2.7500, norm(x): 2.3194, norm(y): 0.9995, norm:0.6874, tok/sec: 141754.24, flops:110.40, batch-reuse:1
@ 2951 train 4.0724 , allloss: 4.0726, dt: 928.38ms, fracRes: 0.2835, norm(attn): 0.4082, norm(output): 2.7500, norm(x): 2.3107, norm(y): 0.9994, norm:0.6849, tok/sec: 141183.09, flops:109.95, batch-reuse:1
@ 2952 train 4.1688 , allloss: 4.1689, dt: 902.72ms, fracRes: 0.2830, norm(attn): 0.4082, norm(output): 2.7656, norm(x): 2.3078, norm(y): 0.9993, norm:0.6785, tok/sec: 145196.55, flops:113.08, batch-reuse:1
@ 2953 train 4.1532 , allloss: 4.1534, dt: 916.26ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 2.7500, norm(x): 2.3203, norm(y): 0.9995, norm:0.7362, tok/sec: 143051.62, flops:111.41, batch-reuse:1
@ 2954 train 4.0949 , allloss: 4.0951, dt: 906.62ms, fracRes: 0.2844, norm(attn): 0.4062, norm(output): 2.7500, norm(x): 2.3114, norm(y): 0.9993, norm:0.7297, tok/sec: 144571.84, flops:112.59, batch-reuse:1
@ 2955 train 4.1297 , allloss: 4.1299, dt: 890.19ms, fracRes: 0.2842, norm(attn): 0.4062, norm(output): 2.7344, norm(x): 2.3062, norm(y): 0.9992, norm:0.6271, tok/sec: 147240.73, flops:114.67, batch-reuse:1
@ 2956 train 4.0752 , allloss: 4.0754, dt: 893.54ms, fracRes: 0.2835, norm(attn): 0.4062, norm(output): 2.7344, norm(x): 2.3063, norm(y): 0.9992, norm:0.5926, tok/sec: 146688.27, flops:114.24, batch-reuse:1
@ 2957 train 4.1698 , allloss: 4.1700, dt: 901.40ms, fracRes: 0.2836, norm(attn): 0.4043, norm(output): 2.7500, norm(x): 2.3033, norm(y): 0.9992, norm:0.6502, tok/sec: 145409.73, flops:113.25, batch-reuse:1
@ 2958 train 4.1311 , allloss: 4.1314, dt: 899.46ms, fracRes: 0.2842, norm(attn): 0.4062, norm(output): 2.7500, norm(x): 2.3279, norm(y): 0.9994, norm:0.7123, tok/sec: 145722.36, flops:113.49, batch-reuse:1
@ 2959 train 4.1461 , allloss: 4.1464, dt: 900.42ms, fracRes: 0.2835, norm(attn): 0.4062, norm(output): 2.7656, norm(x): 2.3263, norm(y): 0.9993, norm:0.6869, tok/sec: 145567.86, flops:113.37, batch-reuse:1
@ 2960 train 4.1177 , allloss: 4.1179, dt: 894.82ms, fracRes: 0.2836, norm(attn): 0.4062, norm(output): 2.7656, norm(x): 2.3213, norm(y): 0.9992, norm:0.5460, tok/sec: 146478.82, flops:114.08, batch-reuse:1
@ 2961 train 4.0291 , allloss: 4.0292, dt: 884.19ms, fracRes: 0.2843, norm(attn): 0.4062, norm(output): 2.7656, norm(x): 2.3318, norm(y): 0.9993, norm:0.6686, tok/sec: 148239.38, flops:115.45, batch-reuse:1
@ 2962 train 4.0791 , allloss: 4.0792, dt: 896.82ms, fracRes: 0.2832, norm(attn): 0.4062, norm(output): 2.7812, norm(x): 2.3415, norm(y): 0.9992, norm:0.6197, tok/sec: 146152.76, flops:113.82, batch-reuse:1
@ 2963 train 4.1166 , allloss: 4.1167, dt: 896.78ms, fracRes: 0.2838, norm(attn): 0.4062, norm(output): 2.7656, norm(x): 2.3409, norm(y): 0.9991, norm:0.6766, tok/sec: 146157.89, flops:113.83, batch-reuse:1
@ 2964 train 4.1445 , allloss: 4.1446, dt: 878.95ms, fracRes: 0.2836, norm(attn): 0.4023, norm(output): 2.7812, norm(x): 2.3597, norm(y): 0.9990, norm:0.6594, tok/sec: 149124.13, flops:116.14, batch-reuse:1
@ 2965 train 4.0925 , allloss: 4.0927, dt: 882.37ms, fracRes: 0.2839, norm(attn): 0.4043, norm(output): 2.8125, norm(x): 2.3823, norm(y): 0.9991, norm:0.6211, tok/sec: 148545.40, flops:115.69, batch-reuse:1
@ 2966 train 4.0124 , allloss: 4.0126, dt: 903.52ms, fracRes: 0.2835, norm(attn): 0.4062, norm(output): 2.7969, norm(x): 2.3723, norm(y): 0.9990, norm:0.7278, tok/sec: 145067.47, flops:112.98, batch-reuse:1
@ 2967 train 4.1224 , allloss: 4.1226, dt: 900.05ms, fracRes: 0.2832, norm(attn): 0.4062, norm(output): 2.7500, norm(x): 2.3562, norm(y): 0.9988, norm:0.8080, tok/sec: 145627.25, flops:113.42, batch-reuse:1
@ 2968 train 4.1304 , allloss: 4.1307, dt: 883.65ms, fracRes: 0.2849, norm(attn): 0.4023, norm(output): 2.8438, norm(x): 2.3961, norm(y): 0.9990, norm:0.6846, tok/sec: 148330.77, flops:115.52, batch-reuse:1
@ 2969 train 4.0358 , allloss: 4.0363, dt: 882.80ms, fracRes: 0.2853, norm(attn): 0.4043, norm(output): 2.9531, norm(x): 2.4236, norm(y): 0.9992, norm:0.7013, tok/sec: 148473.58, flops:115.63, batch-reuse:1
@ 2970 train 4.0622 , allloss: 4.0627, dt: 904.12ms, fracRes: 0.2851, norm(attn): 0.4062, norm(output): 2.9219, norm(x): 2.4270, norm(y): 0.9993, norm:0.7022, tok/sec: 144972.26, flops:112.90, batch-reuse:1
@ 2971 train 4.1046 , allloss: 4.1049, dt: 900.28ms, fracRes: 0.2856, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.4024, norm(y): 0.9993, norm:0.7612, tok/sec: 145590.22, flops:113.39, batch-reuse:1
@ 2972 train 3.9904 , allloss: 3.9905, dt: 919.24ms, fracRes: 0.2851, norm(attn): 0.4082, norm(output): 2.8906, norm(x): 2.3964, norm(y): 0.9993, norm:0.8060, tok/sec: 142586.69, flops:111.05, batch-reuse:1
@ 2973 train 4.1045 , allloss: 4.1048, dt: 903.56ms, fracRes: 0.2855, norm(attn): 0.4121, norm(output): 2.9375, norm(x): 2.4067, norm(y): 0.9993, norm:0.7356, tok/sec: 145061.46, flops:112.97, batch-reuse:1
@ 2974 train 4.0262 , allloss: 4.0263, dt: 898.57ms, fracRes: 0.2851, norm(attn): 0.4082, norm(output): 2.9375, norm(x): 2.3820, norm(y): 0.9992, norm:0.7880, tok/sec: 145867.74, flops:113.60, batch-reuse:1
@ 2975 train 4.2022 , allloss: 4.2024, dt: 919.43ms, fracRes: 0.2848, norm(attn): 0.4062, norm(output): 2.8750, norm(x): 2.3673, norm(y): 0.9991, norm:0.6186, tok/sec: 142558.55, flops:111.03, batch-reuse:1
@ 2976 train 4.2601 , allloss: 4.2603, dt: 917.24ms, fracRes: 0.2848, norm(attn): 0.4062, norm(output): 2.8438, norm(x): 2.3677, norm(y): 0.9992, norm:0.7307, tok/sec: 142897.68, flops:111.29, batch-reuse:1
@ 2977 train 4.2746 , allloss: 4.2748, dt: 890.29ms, fracRes: 0.2843, norm(attn): 0.4062, norm(output): 2.8281, norm(x): 2.3416, norm(y): 0.9992, norm:0.6109, tok/sec: 147223.70, flops:114.66, batch-reuse:1
@ 2978 train 4.2773 , allloss: 4.2775, dt: 913.19ms, fracRes: 0.2858, norm(attn): 0.4023, norm(output): 2.8438, norm(x): 2.3632, norm(y): 0.9993, norm:0.7025, tok/sec: 143532.78, flops:111.78, batch-reuse:1
@ 2979 train 4.3087 , allloss: 4.3089, dt: 890.81ms, fracRes: 0.2847, norm(attn): 0.4043, norm(output): 2.8125, norm(x): 2.3466, norm(y): 0.9993, norm:0.6950, tok/sec: 147137.52, flops:114.59, batch-reuse:1
@ 2980 train 4.1511 , allloss: 4.1513, dt: 891.82ms, fracRes: 0.2854, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.3759, norm(y): 0.9993, norm:0.7755, tok/sec: 146971.45, flops:114.46, batch-reuse:1
@ 2981 train 4.2432 , allloss: 4.2433, dt: 906.81ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 2.8438, norm(x): 2.3614, norm(y): 0.9991, norm:1.0779, tok/sec: 144542.08, flops:112.57, batch-reuse:1
@ 2982 train 4.3469 , allloss: 4.3472, dt: 912.38ms, fracRes: 0.2847, norm(attn): 0.4043, norm(output): 2.8125, norm(x): 2.3648, norm(y): 0.9990, norm:0.9547, tok/sec: 143659.03, flops:111.88, batch-reuse:1
@ 2983 train 4.2362 , allloss: 4.2364, dt: 908.74ms, fracRes: 0.2850, norm(attn): 0.4102, norm(output): 2.8281, norm(x): 2.3888, norm(y): 0.9992, norm:0.9349, tok/sec: 144234.19, flops:112.33, batch-reuse:1
@ 2984 train 4.2824 , allloss: 4.2825, dt: 907.20ms, fracRes: 0.2838, norm(attn): 0.4082, norm(output): 2.8438, norm(x): 2.3743, norm(y): 0.9991, norm:0.7772, tok/sec: 144479.63, flops:112.52, batch-reuse:1
@ 2985 train 4.3284 , allloss: 4.3286, dt: 902.19ms, fracRes: 0.2841, norm(attn): 0.4102, norm(output): 2.8438, norm(x): 2.3884, norm(y): 0.9990, norm:0.8877, tok/sec: 145281.58, flops:113.15, batch-reuse:1
@ 2986 train 4.2306 , allloss: 4.2308, dt: 903.95ms, fracRes: 0.2841, norm(attn): 0.4062, norm(output): 2.8125, norm(x): 2.3764, norm(y): 0.9989, norm:0.6785, tok/sec: 144998.83, flops:112.93, batch-reuse:1
@ 2987 train 4.3028 , allloss: 4.3029, dt: 894.80ms, fracRes: 0.2839, norm(attn): 0.4082, norm(output): 2.8281, norm(x): 2.3851, norm(y): 0.9988, norm:0.6807, tok/sec: 146481.12, flops:114.08, batch-reuse:1
@ 2988 train 4.3706 , allloss: 4.3710, dt: 898.68ms, fracRes: 0.2842, norm(attn): 0.4121, norm(output): 2.8750, norm(x): 2.4144, norm(y): 0.9989, norm:0.6875, tok/sec: 145848.78, flops:113.59, batch-reuse:1
@ 2989 train 4.3084 , allloss: 4.3086, dt: 903.22ms, fracRes: 0.2846, norm(attn): 0.4062, norm(output): 2.8438, norm(x): 2.4054, norm(y): 0.9988, norm:0.7526, tok/sec: 145116.49, flops:113.02, batch-reuse:1
@ 2990 train 4.3446 , allloss: 4.3447, dt: 901.80ms, fracRes: 0.2848, norm(attn): 0.4043, norm(output): 2.8125, norm(x): 2.3924, norm(y): 0.9987, norm:0.7041, tok/sec: 145345.19, flops:113.20, batch-reuse:1
@ 2991 train 4.2409 , allloss: 4.2411, dt: 896.52ms, fracRes: 0.2846, norm(attn): 0.4062, norm(output): 2.8438, norm(x): 2.4041, norm(y): 0.9988, norm:0.6778, tok/sec: 146200.22, flops:113.86, batch-reuse:1
@ 2992 train 4.2872 , allloss: 4.2873, dt: 910.11ms, fracRes: 0.2843, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4127, norm(y): 0.9988, norm:0.7129, tok/sec: 144018.06, flops:112.16, batch-reuse:1
@ 2993 train 4.2668 , allloss: 4.2669, dt: 921.26ms, fracRes: 0.2850, norm(attn): 0.4082, norm(output): 2.8750, norm(x): 2.4130, norm(y): 0.9990, norm:0.5931, tok/sec: 142274.36, flops:110.80, batch-reuse:1
@ 2994 train 4.2976 , allloss: 4.2978, dt: 886.83ms, fracRes: 0.2844, norm(attn): 0.4082, norm(output): 2.8438, norm(x): 2.4030, norm(y): 0.9989, norm:0.6429, tok/sec: 147798.44, flops:115.11, batch-reuse:1
@ 2995 train 4.1717 , allloss: 4.1719, dt: 880.54ms, fracRes: 0.2845, norm(attn): 0.4082, norm(output): 2.8281, norm(x): 2.3965, norm(y): 0.9988, norm:0.5935, tok/sec: 148853.65, flops:115.93, batch-reuse:1
@ 2996 train 4.2094 , allloss: 4.2096, dt: 889.18ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 2.8281, norm(x): 2.4037, norm(y): 0.9987, norm:0.7024, tok/sec: 147407.46, flops:114.80, batch-reuse:1
@ 2997 train 4.2666 , allloss: 4.2667, dt: 901.02ms, fracRes: 0.2839, norm(attn): 0.4102, norm(output): 2.8594, norm(x): 2.4067, norm(y): 0.9987, norm:0.8250, tok/sec: 145470.95, flops:113.29, batch-reuse:1
@ 2998 train 4.2983 , allloss: 4.2984, dt: 895.92ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 2.8906, norm(x): 2.4062, norm(y): 0.9987, norm:0.6404, tok/sec: 146298.65, flops:113.94, batch-reuse:1
@ 2999 train 4.1736 , allloss: 4.1737, dt: 884.96ms, fracRes: 0.2840, norm(attn): 0.4082, norm(output): 2.8281, norm(x): 2.3823, norm(y): 0.9986, norm:0.6363, tok/sec: 148110.38, flops:115.35, batch-reuse:1
@ 3000 train 4.2927 , allloss: 4.2928, dt: 901.77ms, fracRes: 0.2849, norm(attn): 0.4082, norm(output): 2.8281, norm(x): 2.3796, norm(y): 0.9986, norm:0.6581, tok/sec: 145350.41, flops:113.20, batch-reuse:1
@ 3001 train 4.3397 , allloss: 4.3399, dt: 896.84ms, fracRes: 0.2840, norm(attn): 0.4062, norm(output): 2.8750, norm(x): 2.3813, norm(y): 0.9985, norm:0.6877, tok/sec: 146148.22, flops:113.82, batch-reuse:1
@ 3002 train 4.2042 , allloss: 4.2043, dt: 889.90ms, fracRes: 0.2843, norm(attn): 0.4062, norm(output): 2.8281, norm(x): 2.3892, norm(y): 0.9986, norm:0.6354, tok/sec: 147289.25, flops:114.71, batch-reuse:1
@ 3003 train 4.2608 , allloss: 4.2610, dt: 900.61ms, fracRes: 0.2846, norm(attn): 0.4082, norm(output): 2.8750, norm(x): 2.3939, norm(y): 0.9987, norm:0.7534, tok/sec: 145536.61, flops:113.34, batch-reuse:1
@ 3004 train 4.3246 , allloss: 4.3249, dt: 916.30ms, fracRes: 0.2848, norm(attn): 0.4062, norm(output): 2.8438, norm(x): 2.3880, norm(y): 0.9986, norm:0.6797, tok/sec: 143044.44, flops:111.40, batch-reuse:1
@ 3005 train 4.5229 , allloss: 4.5230, dt: 914.00ms, fracRes: 0.2851, norm(attn): 0.4062, norm(output): 2.8906, norm(x): 2.4037, norm(y): 0.9987, norm:0.7779, tok/sec: 143405.59, flops:111.68, batch-reuse:1
@ 3006 train 4.2424 , allloss: 4.2425, dt: 913.52ms, fracRes: 0.2847, norm(attn): 0.4062, norm(output): 2.8906, norm(x): 2.4011, norm(y): 0.9985, norm:0.7598, tok/sec: 143480.79, flops:111.74, batch-reuse:1
@ 3007 train 4.3343 , allloss: 4.3345, dt: 893.66ms, fracRes: 0.2846, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4021, norm(y): 0.9985, norm:0.7040, tok/sec: 146669.45, flops:114.23, batch-reuse:1
@ 3008 train 4.2795 , allloss: 4.2797, dt: 906.75ms, fracRes: 0.2841, norm(attn): 0.4102, norm(output): 2.8750, norm(x): 2.4074, norm(y): 0.9985, norm:0.6587, tok/sec: 144552.15, flops:112.58, batch-reuse:1
@ 3009 train 4.1914 , allloss: 4.1915, dt: 889.05ms, fracRes: 0.2850, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4038, norm(y): 0.9986, norm:0.6775, tok/sec: 147429.95, flops:114.82, batch-reuse:1
@ 3010 train 4.2440 , allloss: 4.2442, dt: 887.97ms, fracRes: 0.2853, norm(attn): 0.4062, norm(output): 2.8438, norm(x): 2.4054, norm(y): 0.9986, norm:0.6952, tok/sec: 147609.03, flops:114.96, batch-reuse:1
@ 3011 train 4.2852 , allloss: 4.2859, dt: 899.34ms, fracRes: 0.2845, norm(attn): 0.4082, norm(output): 2.8594, norm(x): 2.4081, norm(y): 0.9985, norm:0.6338, tok/sec: 145742.72, flops:113.50, batch-reuse:1
@ 3012 train 4.3763 , allloss: 4.3764, dt: 901.94ms, fracRes: 0.2845, norm(attn): 0.4082, norm(output): 2.8750, norm(x): 2.4224, norm(y): 0.9985, norm:0.7629, tok/sec: 145322.60, flops:113.18, batch-reuse:1
@ 3013 train 4.4232 , allloss: 4.4233, dt: 903.17ms, fracRes: 0.2837, norm(attn): 0.4082, norm(output): 2.8594, norm(x): 2.4039, norm(y): 0.9983, norm:0.7136, tok/sec: 145125.18, flops:113.02, batch-reuse:1
@ 3014 train 4.2547 , allloss: 4.2549, dt: 905.17ms, fracRes: 0.2847, norm(attn): 0.4062, norm(output): 2.8281, norm(x): 2.4061, norm(y): 0.9984, norm:0.6481, tok/sec: 144804.51, flops:112.77, batch-reuse:1
@ 3015 train 4.2390 , allloss: 4.2391, dt: 904.84ms, fracRes: 0.2846, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4129, norm(y): 0.9985, norm:0.6853, tok/sec: 144857.28, flops:112.82, batch-reuse:1
@ 3016 train 4.2005 , allloss: 4.2006, dt: 890.35ms, fracRes: 0.2843, norm(attn): 0.4102, norm(output): 2.9219, norm(x): 2.4193, norm(y): 0.9985, norm:0.7469, tok/sec: 147214.51, flops:114.65, batch-reuse:1
@ 3017 train 4.1848 , allloss: 4.1851, dt: 916.24ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4211, norm(y): 0.9985, norm:0.6872, tok/sec: 143054.34, flops:111.41, batch-reuse:1
@ 3018 train 4.2614 , allloss: 4.2616, dt: 923.29ms, fracRes: 0.2837, norm(attn): 0.4062, norm(output): 2.8438, norm(x): 2.4133, norm(y): 0.9983, norm:0.6623, tok/sec: 141961.38, flops:110.56, batch-reuse:1
@ 3019 train 4.4292 , allloss: 4.4293, dt: 919.58ms, fracRes: 0.2838, norm(attn): 0.4102, norm(output): 2.8750, norm(x): 2.4249, norm(y): 0.9984, norm:0.7165, tok/sec: 142535.27, flops:111.01, batch-reuse:1
@ 3020 train 4.1875 , allloss: 4.1876, dt: 917.75ms, fracRes: 0.2840, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4249, norm(y): 0.9982, norm:0.8145, tok/sec: 142818.46, flops:111.23, batch-reuse:1
@ 3021 train 4.2277 , allloss: 4.2278, dt: 918.77ms, fracRes: 0.2836, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4248, norm(y): 0.9982, norm:0.8566, tok/sec: 142660.99, flops:111.10, batch-reuse:1
@ 3022 train 4.2913 , allloss: 4.2915, dt: 919.35ms, fracRes: 0.2848, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.4379, norm(y): 0.9983, norm:0.8264, tok/sec: 142569.53, flops:111.03, batch-reuse:1
@ 3023 train 4.3406 , allloss: 4.3408, dt: 901.46ms, fracRes: 0.2844, norm(attn): 0.4043, norm(output): 2.8906, norm(x): 2.4234, norm(y): 0.9982, norm:0.8446, tok/sec: 145399.31, flops:113.24, batch-reuse:1
@ 3024 train 4.2500 , allloss: 4.2502, dt: 917.70ms, fracRes: 0.2847, norm(attn): 0.4062, norm(output): 2.9375, norm(x): 2.4311, norm(y): 0.9983, norm:0.7784, tok/sec: 142826.48, flops:111.23, batch-reuse:1
@ 3025 train 4.2515 , allloss: 4.2517, dt: 901.17ms, fracRes: 0.2839, norm(attn): 0.4082, norm(output): 2.8906, norm(x): 2.4271, norm(y): 0.9983, norm:0.7259, tok/sec: 145447.09, flops:113.27, batch-reuse:1
@ 3026 train 4.2865 , allloss: 4.2867, dt: 921.62ms, fracRes: 0.2844, norm(attn): 0.4062, norm(output): 2.9219, norm(x): 2.4398, norm(y): 0.9985, norm:0.7076, tok/sec: 142219.89, flops:110.76, batch-reuse:1
@ 3027 train 4.3081 , allloss: 4.3082, dt: 920.70ms, fracRes: 0.2838, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4295, norm(y): 0.9984, norm:0.6386, tok/sec: 142361.68, flops:110.87, batch-reuse:1
@ 3028 train 4.2726 , allloss: 4.2727, dt: 919.28ms, fracRes: 0.2836, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4122, norm(y): 0.9983, norm:0.6383, tok/sec: 142581.62, flops:111.04, batch-reuse:1
@ 3029 train 4.1565 , allloss: 4.1584, dt: 919.27ms, fracRes: 0.2838, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.3999, norm(y): 0.9984, norm:0.6713, tok/sec: 142582.51, flops:111.04, batch-reuse:1
@ 3030 train 4.2247 , allloss: 4.2248, dt: 924.55ms, fracRes: 0.2842, norm(attn): 0.4062, norm(output): 2.8906, norm(x): 2.3989, norm(y): 0.9983, norm:0.6100, tok/sec: 141768.60, flops:110.41, batch-reuse:1
@ 3031 train 4.2327 , allloss: 4.2327, dt: 918.22ms, fracRes: 0.2846, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.4087, norm(y): 0.9983, norm:0.7153, tok/sec: 142746.37, flops:111.17, batch-reuse:1
@ 3032 train 4.2477 , allloss: 4.2478, dt: 917.75ms, fracRes: 0.2842, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.4124, norm(y): 0.9982, norm:0.6703, tok/sec: 142818.39, flops:111.23, batch-reuse:1
@ 3033 train 4.1757 , allloss: 4.1758, dt: 920.54ms, fracRes: 0.2842, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4287, norm(y): 0.9982, norm:0.6213, tok/sec: 142386.20, flops:110.89, batch-reuse:1
@ 3034 train 4.2696 , allloss: 4.2697, dt: 902.10ms, fracRes: 0.2841, norm(attn): 0.4102, norm(output): 2.9375, norm(x): 2.4427, norm(y): 0.9982, norm:0.6406, tok/sec: 145296.25, flops:113.16, batch-reuse:1
@ 3035 train 4.2980 , allloss: 4.2982, dt: 927.58ms, fracRes: 0.2849, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.4329, norm(y): 0.9981, norm:0.6758, tok/sec: 141305.53, flops:110.05, batch-reuse:1
@ 3036 train 4.2231 , allloss: 4.2232, dt: 909.28ms, fracRes: 0.2842, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.4166, norm(y): 0.9980, norm:0.6167, tok/sec: 144149.13, flops:112.26, batch-reuse:1
@ 3037 train 4.2751 , allloss: 4.2752, dt: 915.75ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 2.9062, norm(x): 2.4219, norm(y): 0.9981, norm:0.5449, tok/sec: 143130.39, flops:111.47, batch-reuse:1
@ 3038 train 4.2511 , allloss: 4.2514, dt: 884.08ms, fracRes: 0.2838, norm(attn): 0.4102, norm(output): 2.9531, norm(x): 2.4446, norm(y): 0.9980, norm:0.7621, tok/sec: 148257.69, flops:115.46, batch-reuse:1
@ 3039 train 4.4998 , allloss: 4.4999, dt: 899.58ms, fracRes: 0.2825, norm(attn): 0.4180, norm(output): 2.8438, norm(x): 2.4045, norm(y): 0.9980, norm:0.9679, tok/sec: 145702.82, flops:113.47, batch-reuse:1
@ 3040 train 4.2376 , allloss: 4.2378, dt: 900.39ms, fracRes: 0.2846, norm(attn): 0.4004, norm(output): 2.8281, norm(x): 2.4008, norm(y): 0.9979, norm:1.1423, tok/sec: 145572.80, flops:113.37, batch-reuse:1
@ 3041 train 4.2940 , allloss: 4.2942, dt: 900.68ms, fracRes: 0.2844, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.4029, norm(y): 0.9982, norm:0.9258, tok/sec: 145526.29, flops:113.34, batch-reuse:1
@ 3042 train 4.1815 , allloss: 4.1840, dt: 900.40ms, fracRes: 0.2839, norm(attn): 0.4199, norm(output): 2.9688, norm(x): 2.4494, norm(y): 0.9984, norm:0.8082, tok/sec: 145571.26, flops:113.37, batch-reuse:1
@ 3043 train 4.2330 , allloss: 4.2331, dt: 903.86ms, fracRes: 0.2832, norm(attn): 0.4121, norm(output): 2.9062, norm(x): 2.4272, norm(y): 0.9981, norm:0.6794, tok/sec: 145012.90, flops:112.94, batch-reuse:1
@ 3044 train 4.2630 , allloss: 4.2630, dt: 891.91ms, fracRes: 0.2838, norm(attn): 0.4043, norm(output): 2.8750, norm(x): 2.4226, norm(y): 0.9980, norm:0.7306, tok/sec: 146956.79, flops:114.45, batch-reuse:1
@ 3045 train 4.4700 , allloss: 4.4701, dt: 906.35ms, fracRes: 0.2844, norm(attn): 0.4043, norm(output): 2.8750, norm(x): 2.4262, norm(y): 0.9981, norm:0.7785, tok/sec: 144614.77, flops:112.63, batch-reuse:1
@ 3046 train 4.2734 , allloss: 4.2736, dt: 891.55ms, fracRes: 0.2845, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.4385, norm(y): 0.9980, norm:1.0515, tok/sec: 147016.61, flops:114.50, batch-reuse:1
@ 3047 train 4.2793 , allloss: 4.2794, dt: 916.72ms, fracRes: 0.2859, norm(attn): 0.4062, norm(output): 2.9844, norm(x): 2.4982, norm(y): 0.9981, norm:1.0171, tok/sec: 142980.07, flops:111.35, batch-reuse:1
@ 3048 train 4.2034 , allloss: 4.2035, dt: 920.71ms, fracRes: 0.2841, norm(attn): 0.4141, norm(output): 3.0156, norm(x): 2.5231, norm(y): 0.9981, norm:0.8548, tok/sec: 142360.06, flops:110.87, batch-reuse:1
@ 3049 train 4.4172 , allloss: 4.4173, dt: 911.50ms, fracRes: 0.2833, norm(attn): 0.4121, norm(output): 3.0156, norm(x): 2.5208, norm(y): 0.9981, norm:0.7917, tok/sec: 143798.44, flops:111.99, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9805, 0.0186, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0520, 0.9336, 0.0159, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2422, 0.3633, 0.1738, 0.2217, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0013, 0.9805, 0.0017, 0.0096, 0.0063, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.5586, 0.0801, 0.0110, 0.0161, 0.0547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.2402, 0.1318, 0.0173, 0.0898, 0.0635, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5586, 0.0063, 0.1670, 0.1113, 0.0552, 0.0342, 0.0271, 0.0408, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0596, 0.5352, 0.0203, 0.0072, 0.0121, 0.0304, 0.1475, 0.0952, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.0339, 0.1533, 0.0203, 0.1475, 0.0771, 0.0850, 0.1426, 0.1025, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0015, 0.1260, 0.0023, 0.0055, 0.0209, 0.0233, 0.7422, 0.0054, 0.0562, 0.0043, 0.0121, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.0732, 0.0347, 0.0212, 0.0417, 0.0271, 0.0068, 0.0188, 0.0184, 0.1484, 0.1826, 0.1128, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0574, 0.0192, 0.0317, 0.0122, 0.0276, 0.0152, 0.0177, 0.0057, 0.4023, 0.0192, 0.2715, 0.0398, 0.0000, 0.0000],
        [0.0182, 0.2500, 0.0036, 0.0100, 0.0125, 0.0234, 0.2988, 0.0299, 0.0427, 0.0107, 0.0239, 0.2354, 0.0295, 0.0113, 0.0000],
        [0.0498, 0.2695, 0.0068, 0.0087, 0.0234, 0.0223, 0.0376, 0.0092, 0.0398, 0.0427, 0.1079, 0.3027, 0.0359, 0.0150, 0.0294]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0255, -0.0184, -0.0361,  ...,  0.0276,  0.0110, -0.0184],
        [-0.0514,  0.0335,  0.0202,  ..., -0.0414, -0.0228, -0.0012],
        [-0.0176,  0.0324,  0.0189,  ..., -0.0120,  0.0093,  0.0033],
        ...,
        [-0.0008,  0.0160,  0.0311,  ..., -0.0385,  0.0163,  0.0080],
        [ 0.0136,  0.0197, -0.0096,  ...,  0.0206, -0.0363, -0.0418],
        [ 0.0418, -0.0143,  0.0636,  ..., -0.0135,  0.0365,  0.0114]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9258, -1.1641,  0.0245, -1.9531, -1.2734,  1.1406, -0.7656, -0.1465, -0.9258, -0.1025, -2.0000,  1.5312,  0.6328, -1.9062,  0.1270, -1.1094,  0.1196, -0.3926, -0.6836,  0.6797,  0.4551, -0.3105, -1.2031,  0.4043, -0.2559,  0.7930, -1.8672,  0.8203,  2.4688,  0.7773, -0.7031,  0.3887,
        -0.3379,  1.3438,  1.1406,  1.2344,  1.4219, -0.3789,  1.0156,  2.0938, -0.6445, -1.1641, -0.7383, -0.2041, -0.5820, -0.6250,  1.8281, -1.9453, -1.0391,  1.0391,  1.0859, -0.5664, -0.1885, -0.4297,  0.5469,  1.0000,  0.1367,  0.8906,  0.0135,  0.8086,  2.1562,  1.1328,  0.0566,  1.5625],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0061,  0.0233,  0.0219,  ..., -0.0146,  0.0160, -0.0078],
        [ 0.0051, -0.0312, -0.0265,  ...,  0.0229, -0.0292, -0.0416],
        [ 0.0293, -0.0105, -0.0223,  ...,  0.0248, -0.0393, -0.0111],
        ...,
        [ 0.0334,  0.0341, -0.0318,  ...,  0.0501, -0.0372, -0.0378],
        [ 0.0101, -0.0054, -0.0013,  ..., -0.0149,  0.0376,  0.0432],
        [ 0.0198,  0.0381, -0.0839,  ..., -0.0140, -0.0554, -0.0233]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7539, -0.0369, -0.3496, -2.4688, -1.1719,  1.2500, -0.5430,  1.2656,  1.0234, -0.6445,  0.9688, -0.5586, -1.6250, -0.6016, -1.0391, -0.2168, -0.4863, -0.3672,  0.6836,  0.3105, -0.0386,  1.4688,  0.0623, -0.5391, -0.8672, -0.4395,  1.0781, -1.6250, -1.0000,  0.4180, -1.5625,  0.9180,
        -0.4785,  0.2930,  2.3750, -1.0781, -0.6523, -0.7070, -1.1172,  0.1348,  0.1621,  0.5664,  0.1836,  2.1250,  0.6914,  0.6914,  0.9531,  1.0312, -0.8281, -1.1250, -1.0547,  0.7969,  1.2266, -0.7656,  0.5742,  1.1016,  0.3828,  0.1719, -0.4258,  0.5898, -0.4180, -0.6055,  0.8086,  0.1826],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.9688,  0.2197, -2.0938, -0.9180, -1.9297, -2.8750, -2.1406, -0.1157, -0.8320, -0.2305, -2.1250, -2.1406, -1.0781, -0.4375],
        [ 0.0000,  2.8906, -1.1875,  1.1172,  0.0947,  1.2656,  1.3516, -1.1016,  0.2871,  1.3516,  1.1875,  2.5312, -0.1011,  0.6992, -0.1533],
        [ 0.0000,  0.4062, -0.3281, -0.0874, -0.2178, -1.1797,  0.1367, -1.0781, -0.3633,  0.8984,  0.6992,  0.7500,  0.1367, -0.8164,  0.2227],
        [ 0.0000,  6.6562,  0.2734,  2.0156,  1.5859,  3.1250,  6.4062,  0.6133,  3.5312,  1.4922,  1.5781,  3.0469,  0.8555,  2.7188,  1.8672],
        [ 0.0000,  0.6914, -1.2500, -3.2344, -2.8594, -1.6328, -1.3125, -0.8008, -0.8164, -0.9805, -1.2656, -0.1416, -0.9844, -2.3594, -2.5312],
        [ 0.0000, -0.2363, -0.8359, -2.8594, -1.2188, -1.5703, -0.6953, -0.5547, -0.6562, -0.9961, -0.5781, -0.3672,  0.2676, -1.5859, -0.3164],
        [ 0.0000, -4.4688, -1.2109, -1.6094, -2.3125, -2.7969, -3.0156, -2.6094, -3.5625,  0.5391, -0.3926, -1.1250, -2.7344, -4.2500, -3.2969],
        [ 0.0000,  2.1875, -1.0781, -2.1250, -1.5938, -0.6719,  0.9062,  0.4668,  0.4492, -1.5234, -1.0625,  0.5977,  0.5625, -0.7188, -0.8359],
        [ 0.0000, -1.1641,  0.3438, -1.6797,  0.3047, -0.3438, -0.2480,  0.2734, -0.0588,  0.1689,  0.6289, -0.7969,  1.5000, -0.1924,  0.4746],
        [ 0.0000,  4.4375,  0.4395,  1.2969,  2.6406,  2.7500,  6.2188,  1.2812,  3.6250,  1.0625,  2.0938,  3.2188,  1.7344,  3.3125,  3.6094],
        [ 0.0000, -1.4531, -2.2031, -2.6875, -2.0156, -2.4531, -3.8281, -2.8125, -2.8281, -0.7461, -0.5391, -1.0234, -0.8711, -3.4688, -2.2812],
        [ 0.0000, -0.3145, -1.4062, -0.9062, -1.8594, -1.0469, -1.6406, -1.4844, -2.6250,  1.6328, -1.4141,  1.2422, -0.6836, -3.0781, -2.3906],
        [ 0.0000,  2.6250, -1.6328, -0.5977, -0.3770,  0.2500,  2.7969,  0.4961,  0.8555, -0.5312,  0.2715,  2.5625,  0.4844, -0.4785,  0.3379],
        [ 0.0000,  1.6875, -1.9922, -1.7500, -0.7539, -0.8047, -0.2852, -1.6875, -0.2246, -0.1572,  0.7695,  1.8047, -0.3320, -1.2031, -0.5273]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6547],
        [0.4931],
        [0.3645],
        [0.2772],
        [0.3377],
        [0.1966],
        [0.3574],
        [0.1016],
        [0.1814],
        [0.0134],
        [0.1636],
        [0.1741],
        [0.0796],
        [0.0444]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0400, -0.0355, -0.0007,  ...,  0.0465, -0.0381, -0.0258],
        [ 0.0055, -0.0220,  0.0296,  ..., -0.0234,  0.0099, -0.0019],
        [-0.0043,  0.0496,  0.0219,  ..., -0.0622,  0.0025,  0.0166],
        ...,
        [-0.0146, -0.0081, -0.0181,  ...,  0.0361, -0.0071,  0.0395],
        [ 0.0252,  0.0167,  0.0170,  ..., -0.0303,  0.0532,  0.0179],
        [-0.0130, -0.0232, -0.0221,  ...,  0.0622, -0.0376,  0.0157]], device='cuda:0', requires_grad=True)
K: tensor([ 3.9219, -2.1250,  3.4531, -2.2812, -0.5469, -3.2656, -1.2266,  3.0625,  1.4922, -0.8906, -1.9375, -3.6406, -2.5312, -1.5000, -1.1328, -2.3750,  1.8281,  1.7656,  1.8047, -1.0547, -1.2344, -1.5312,  4.0625,  3.1094,  2.9531, -3.6094, -3.2344,  1.5078,  2.9844, -3.0625,  2.4062, -1.5078,
        -2.9844, -3.9375,  1.9609,  2.1406, -1.7812, -1.5078,  3.5781, -1.4922, -2.2812,  0.3320,  2.9062,  1.5547, -2.2969, -0.2168,  3.9531,  2.7500, -3.3594,  2.8281, -1.6172,  1.3125, -2.9531, -1.9219,  2.6250, -2.4531,  2.3906, -2.5000, -3.3125, -1.7812,  1.9531, -1.5547,  2.4844, -3.9375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0048,  0.0160,  0.0445,  ..., -0.0314,  0.0243,  0.0024],
        [ 0.0255, -0.0141, -0.0237,  ...,  0.0056, -0.0453, -0.0226],
        [ 0.0324,  0.0128, -0.0261,  ...,  0.0506,  0.0105, -0.0099],
        ...,
        [-0.0124,  0.0016,  0.0046,  ..., -0.0476, -0.0015, -0.0573],
        [-0.0147, -0.0199, -0.0141,  ...,  0.0527, -0.0594,  0.0062],
        [ 0.0019,  0.0319,  0.0022,  ..., -0.0889,  0.0320,  0.0038]], device='cuda:0', requires_grad=True)
Q: tensor([-1.1719,  2.7656, -3.4062,  3.1094, -0.0201,  2.9375,  1.2969, -3.3750, -0.8438,  1.5078,  1.6484,  3.3594,  2.7969,  1.8750,  1.1875,  1.5000, -3.6406, -0.9375, -1.3125,  2.5156,  3.7031,  2.0625, -3.8281, -1.8984, -3.5781,  2.5312,  1.9062, -1.0312, -2.5625,  2.9531, -3.1094,  0.7344,
         2.5000,  3.7031, -0.6797, -3.8125,  2.3438,  2.1406, -2.9531,  0.9023,  1.5000, -3.6406, -2.9062, -1.0078, -0.5977,  0.6562, -2.1719, -3.6719,  2.3750, -2.2188,  2.6875, -1.3828,  3.0156,  3.1250, -3.0625,  2.2188, -3.3594,  3.2969,  2.3750,  2.2500, -2.4688,  1.4844, -3.5000,  3.1250],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -76.0000,  -66.5000,  -66.5000,  -63.0000,  -64.0000,  -70.0000,  -61.0000,  -51.7500,  -76.5000,  -69.0000,  -53.2500,  -57.5000,  -51.2500,  -45.2500],
        [   0.0000,  -73.5000,  -67.0000,  -66.0000,  -60.2500,  -66.0000,  -70.5000,  -60.5000,  -51.7500,  -76.0000,  -68.0000,  -50.5000,  -55.0000,  -51.0000,  -44.5000],
        [   0.0000,  -90.0000,  -81.0000,  -80.0000,  -73.0000,  -78.5000,  -84.0000,  -72.5000,  -59.5000,  -92.0000,  -82.0000,  -63.2500,  -68.0000,  -58.2500,  -53.0000],
        [   0.0000,  -65.0000,  -59.2500,  -58.7500,  -50.7500,  -56.7500,  -60.7500,  -54.2500,  -42.5000,  -66.5000,  -58.2500,  -46.5000,  -48.5000,  -41.7500,  -38.0000],
        [   0.0000,  -69.5000,  -62.2500,  -60.7500,  -62.0000,  -61.0000,  -67.0000,  -58.0000,  -50.7500,  -71.5000,  -66.5000,  -47.5000,  -53.5000,  -50.7500,  -41.7500],
        [   0.0000,  -97.5000,  -88.0000,  -87.0000,  -83.0000,  -87.0000,  -94.5000,  -84.0000,  -68.0000, -100.0000,  -91.5000,  -69.0000,  -75.5000,  -68.0000,  -56.7500],
        [   0.0000,  -67.0000,  -60.0000,  -59.0000,  -58.5000,  -61.0000,  -66.5000,  -60.2500,  -48.7500,  -69.5000,  -64.5000,  -47.0000,  -53.5000,  -49.0000,  -39.7500],
        [   0.0000,  -83.5000,  -75.5000,  -74.0000,  -69.0000,  -75.0000,  -80.0000,  -70.0000,  -57.7500,  -86.0000,  -78.5000,  -58.2500,  -62.7500,  -57.5000,  -48.5000],
        [   0.0000,  -96.0000,  -85.0000,  -86.0000,  -77.5000,  -84.0000,  -89.5000,  -77.5000,  -62.5000,  -97.5000,  -87.0000,  -68.5000,  -73.5000,  -61.5000,  -54.7500],
        [   0.0000,  -88.0000,  -79.5000,  -78.5000,  -73.0000,  -76.5000,  -82.5000,  -73.5000,  -58.7500,  -90.0000,  -80.5000,  -62.2500,  -67.5000,  -58.0000,  -50.7500],
        [   0.0000,  -64.5000,  -57.5000,  -56.7500,  -52.2500,  -55.5000,  -59.7500,  -51.7500,  -42.5000,  -65.0000,  -58.0000,  -44.7500,  -48.0000,  -42.0000,  -37.5000],
        [   0.0000,  -71.5000,  -65.5000,  -63.0000,  -62.5000,  -65.5000,  -72.0000,  -63.2500,  -52.7500,  -74.5000,  -69.0000,  -48.7500,  -55.5000,  -53.0000,  -43.5000],
        [   0.0000,  -82.5000,  -75.0000,  -73.5000,  -68.5000,  -74.5000,  -80.0000,  -70.0000,  -57.5000,  -85.5000,  -78.0000,  -57.7500,  -62.5000,  -57.0000,  -47.7500],
        [   0.0000,  -77.0000,  -69.5000,  -69.0000,  -65.0000,  -68.0000,  -73.5000,  -63.0000,  -54.2500,  -80.0000,  -72.5000,  -54.0000,  -58.0000,  -54.0000,  -45.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9990],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0262, -0.0557, -0.0550,  ...,  0.0358, -0.0246,  0.0345],
        [ 0.0146,  0.0166,  0.0196,  ..., -0.0197,  0.0216, -0.0403],
        [ 0.0167,  0.0209, -0.0265,  ..., -0.0018,  0.0030,  0.0525],
        ...,
        [ 0.0053, -0.0255, -0.0637,  ...,  0.0267, -0.0279,  0.0415],
        [ 0.0119,  0.0668,  0.0169,  ..., -0.0075,  0.0361, -0.0423],
        [-0.0580, -0.0402, -0.0274,  ...,  0.0571, -0.0227,  0.0363]], device='cuda:0', requires_grad=True)
K: tensor([ 1.9609, -1.2969, -1.6875,  2.8438, -2.0625,  3.8281,  2.0312,  1.2734,  2.5312,  1.2891, -1.9297,  1.5703,  2.0156, -2.5000,  2.1406, -2.8125, -2.6094, -3.0156, -2.0625,  2.0312, -2.4688,  1.8906, -2.3750,  1.8594, -2.2969, -1.9297, -2.7500,  2.9688, -1.0703, -2.2812,  2.9062, -2.2500,
        -3.1094, -0.9766, -1.3828,  1.1953,  1.9609,  1.3125,  0.6094, -3.0938, -3.6719,  1.9453, -2.5000, -1.6797,  3.1094, -2.0781, -1.9453,  2.5312,  1.3438, -0.3945,  1.7734,  2.5469, -1.2500, -2.5312, -1.5703,  3.1406, -1.6953,  1.7031, -1.3984, -2.7344,  1.9141, -2.2500,  1.1172, -1.5469],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0440,  0.0201,  0.0387,  ..., -0.0305,  0.0326, -0.0207],
        [-0.0010, -0.0394, -0.0283,  ...,  0.0178, -0.0416,  0.0101],
        [ 0.0362,  0.0169,  0.0266,  ...,  0.0138,  0.0283, -0.0486],
        ...,
        [-0.0015,  0.0240,  0.0147,  ..., -0.0196,  0.0222, -0.0166],
        [ 0.0053, -0.0408, -0.0083,  ...,  0.0648, -0.0362, -0.0374],
        [ 0.0165,  0.0091,  0.0656,  ..., -0.0418,  0.0449, -0.0461]], device='cuda:0', requires_grad=True)
Q: tensor([-1.4922,  2.7500,  2.3438, -1.8203,  1.3750, -2.2031, -2.2500, -1.2109, -2.0938, -0.2578, -0.1426, -2.0781, -2.8438,  2.6719, -0.6953,  3.2812,  1.9453,  3.2812,  2.2031, -0.4043,  2.5625, -2.1719,  2.0938, -2.2500,  2.5781,  2.3281,  2.4062, -2.5938,  1.9844,  2.2812, -2.2344,  1.9844,
         1.5703,  0.9453,  1.5625, -0.2930, -2.6406, -1.3906, -2.1406,  2.4375,  1.4453, -1.3828,  3.3438,  1.8516, -2.1875,  1.4453,  0.8086, -1.4219, -1.8750,  1.4297, -2.0625, -3.1406,  2.0625,  3.2344,  2.6719, -1.9844,  2.5469, -4.0938,  1.4375,  2.8906, -0.7930,  1.9297, -2.3750,  3.1719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -50.5000, -36.7500, -46.2500, -48.2500, -45.5000, -42.2500, -44.5000, -37.0000, -49.2500, -45.5000, -42.5000, -49.7500, -36.0000, -34.7500],
        [  0.0000, -59.5000, -47.5000, -60.7500, -58.7500, -55.7500, -52.2500, -58.5000, -46.5000, -60.0000, -56.5000, -52.5000, -66.5000, -45.2500, -42.7500],
        [  0.0000, -70.5000, -54.0000, -68.5000, -65.5000, -63.7500, -58.7500, -63.5000, -51.5000, -70.5000, -63.7500, -59.5000, -71.5000, -50.0000, -49.0000],
        [  0.0000, -52.7500, -39.5000, -49.2500, -51.2500, -48.2500, -44.7500, -47.7500, -39.5000, -51.0000, -48.7500, -45.0000, -53.2500, -38.5000, -37.0000],
        [  0.0000, -39.5000, -29.2500, -36.0000, -38.5000, -36.0000, -32.0000, -34.7500, -29.7500, -38.2500, -35.7500, -33.0000, -39.0000, -29.0000, -27.0000],
        [  0.0000, -36.0000, -27.3750, -32.2500, -37.0000, -32.2500, -32.2500, -34.2500, -28.6250, -36.2500, -34.2500, -32.0000, -36.7500, -28.0000, -27.0000],
        [  0.0000, -45.7500, -38.5000, -48.0000, -48.7500, -43.7500, -43.0000, -49.0000, -39.2500, -48.2500, -46.7500, -42.5000, -55.0000, -38.2500, -35.2500],
        [  0.0000, -48.5000, -36.5000, -45.7500, -48.2500, -44.0000, -41.2500, -44.2500, -37.7500, -48.0000, -44.7500, -42.0000, -49.5000, -36.7500, -34.0000],
        [  0.0000, -61.5000, -49.2500, -63.5000, -61.7500, -58.7500, -53.7500, -60.5000, -49.2500, -62.0000, -59.5000, -53.7500, -70.0000, -48.0000, -43.7500],
        [  0.0000, -47.2500, -35.5000, -43.0000, -45.5000, -42.7500, -39.7500, -41.7500, -34.7500, -47.0000, -43.2500, -40.0000, -46.2500, -34.0000, -33.5000],
        [  0.0000, -30.1250, -23.2500, -30.0000, -30.1250, -29.0000, -25.5000, -28.2500, -24.3750, -29.1250, -30.1250, -25.2500, -32.5000, -23.7500, -20.6250],
        [  0.0000, -51.0000, -41.2500, -52.0000, -52.0000, -49.2500, -45.0000, -51.7500, -42.0000, -50.7500, -51.2500, -45.0000, -58.7500, -41.0000, -36.2500],
        [  0.0000, -47.2500, -35.5000, -44.2500, -47.0000, -42.7500, -40.0000, -43.0000, -36.7500, -46.5000, -43.5000, -41.0000, -48.2500, -35.7500, -33.2500],
        [  0.0000, -47.2500, -37.2500, -47.0000, -47.7500, -45.2500, -42.5000, -46.7500, -37.7500, -48.0000, -46.7500, -42.0000, -53.2500, -36.5000, -34.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8336],
        [1.0000],
        [1.0000],
        [0.6081],
        [0.7297],
        [0.6135],
        [1.0000],
        [0.6592],
        [1.0000],
        [0.5063],
        [0.9941],
        [1.0000],
        [0.6328],
        [0.9954]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0110,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0113,     0.9531,     0.0337,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9648,     0.0015,     0.0342,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0062,     0.7930,     0.0889,     0.0187,     0.0942,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.6914,     0.0391,     0.0284,     0.0461,     0.1885,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0106,     0.7734,     0.0214,     0.0121,     0.0113,     0.0403,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.8203,     0.0081,     0.0166,     0.0194,     0.0024,     0.0325,     0.1011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2871,     0.3594,     0.0479,     0.0762,     0.0850,     0.0197,     0.0405,     0.0723,     0.0126,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0106,     0.7109,     0.0569,     0.0659,     0.0713,     0.0027,     0.0060,     0.0245,     0.0272,     0.0225,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2129,     0.2734,     0.0175,     0.0068,     0.0240,     0.0284,     0.0437,     0.0133,     0.0198,     0.2520,     0.1079,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0072,     0.2197,     0.0703,     0.0045,     0.0074,     0.0052,     0.0057,     0.5352,     0.0040,     0.0325,     0.0640,     0.0439,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6523,     0.0023,     0.0003,     0.0012,     0.0011,     0.0157,     0.0107,     0.0825,     0.0654,     0.1240,     0.0009,     0.0430,     0.0000,     0.0000],
        [    0.0070,     0.5273,     0.0223,     0.0089,     0.0189,     0.0086,     0.0267,     0.0114,     0.0039,     0.2949,     0.0525,     0.0046,     0.0037,     0.0097,     0.0000],
        [    0.0119,     0.7148,     0.0184,     0.1328,     0.0500,     0.0023,     0.0078,     0.0045,     0.0015,     0.0105,     0.0352,     0.0006,     0.0044,     0.0023,     0.0033]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0040, -0.0179,  0.0088,  ...,  0.0146,  0.0054,  0.0732],
        [-0.0284, -0.0451,  0.0007,  ..., -0.0191,  0.0024, -0.0245],
        [ 0.0168,  0.0055,  0.0181,  ...,  0.0122,  0.0013,  0.0434],
        ...,
        [-0.0236,  0.0053,  0.0171,  ...,  0.0159,  0.0635,  0.0560],
        [ 0.0086, -0.0454,  0.0349,  ...,  0.0171, -0.0089, -0.0438],
        [-0.0138,  0.0067, -0.0024,  ..., -0.0278, -0.0219, -0.0590]], device='cuda:0', requires_grad=True)
K: tensor([-1.5703, -2.4375, -1.6406, -0.3281,  0.2354, -0.1660, -4.1250, -1.4531, -1.1406, -1.0469, -0.9727,  1.9453,  2.7500, -2.6562,  1.9609, -2.5469, -0.0391,  0.2832,  0.8281,  0.9258, -1.1953, -1.6953,  1.6172, -0.8555, -0.5977,  1.6250,  1.2969, -2.5156, -2.0781, -1.7188,  0.4395, -2.2344,
        -0.3359,  1.9375,  1.3047, -0.6094, -0.9414,  1.1719, -1.9688, -0.5273, -0.6094, -0.6992,  2.1719, -2.6719, -0.6758, -0.0479,  2.2656, -1.0156, -1.1250, -0.3418, -1.1250, -0.3105,  0.3633,  1.7031, -1.7812,  0.2090,  2.1875,  0.3691,  0.8594,  0.1270,  1.0625,  0.9766,  1.2812,  0.2354],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0201,  0.0300,  0.0041,  ...,  0.0348, -0.0271,  0.0103],
        [ 0.0013,  0.0037, -0.0043,  ..., -0.0182, -0.0104,  0.0281],
        [-0.0266, -0.0119, -0.0134,  ..., -0.0183, -0.0311, -0.0213],
        ...,
        [-0.0062, -0.0005,  0.0108,  ...,  0.0224, -0.0167,  0.0047],
        [-0.0011,  0.0133,  0.0035,  ...,  0.0185,  0.0061,  0.0445],
        [-0.0218, -0.0117,  0.0135,  ...,  0.0063, -0.0389,  0.0684]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1035,  0.2129,  0.9688, -2.9375, -1.5859,  1.6094, -1.7109,  0.4277,  2.3281, -2.0156,  1.1953, -1.5703,  0.3555, -0.5469, -1.0938, -1.6875,  0.2217, -0.0645, -1.3984, -2.9062,  2.3125, -0.4453,  1.1484,  0.5469, -1.3359,  0.0728, -2.5781, -2.2656, -1.5469, -2.4688,  1.1953,  0.5234,
         0.8320,  0.3086, -1.5938, -0.3809, -2.0469,  0.8906,  0.4375,  0.1270, -0.1777, -0.7773,  0.5586,  1.3438,  0.4336,  1.2344, -3.7344,  1.1094, -0.7500,  0.5312, -1.2109,  0.2090, -1.0234, -0.2441,  0.5703,  0.5195, -0.0544,  2.3906, -3.1250, -0.4199,  0.5391, -2.1719, -4.5938,  0.6094],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -4.5000,     -4.5000,     -5.3438,     -6.2188,     -5.5312,     -5.2188,     -5.0312,     -6.3438,     -4.5625,     -7.3438,     -5.1875,     -6.0312,     -5.6875,     -5.6250],
        [     0.0000,      4.4375,      1.0938,      6.8750,      6.1562,      0.2773,      1.8906,      2.4219,      1.9766,      0.0107,      2.7500,     -2.5156,     -0.0525,     -0.1030,     -1.8203],
        [     0.0000,     12.1250,      5.6562,      8.8125,     13.3125,      9.1875,      8.1875,      6.2500,      7.4688,      4.9375,      9.2500,      1.8125,      4.6562,      6.1250,      5.0625],
        [     0.0000,      4.8438,      2.6562,      1.0938,      2.7188,      5.3438,      4.3438,      2.8125,      2.4844,      3.0312,      1.5000,      0.6602,      0.0066,      1.7578,      1.7969],
        [     0.0000,      4.9688,      2.0781,      1.7656,      2.2500,      3.6562,      5.6250,      4.4375,      4.0938,      3.2031,      0.6289,     -0.1494,     -1.3281,      1.7188,      0.2061],
        [     0.0000,      4.2812,      0.7070,      0.1416,      0.0693,      1.3438,      2.5312,      2.6875,      2.4531,      1.5469,     -2.1250,     -0.6172,     -3.3281,     -0.5391,     -1.7109],
        [     0.0000,      6.6562,      2.0469,      2.7500,      2.9219,      0.8164,      3.4375,      4.5625,      6.8438,      5.3750,      6.4062,      2.3594,      1.0859,      5.0938,      4.8125],
        [     0.0000,      0.2285,     -1.7891,     -1.3203,     -1.2109,     -2.6875,     -1.9531,     -1.3750,     -3.1250,      0.4883,     -1.7266,     -2.9531,     -4.0938,     -3.4844,     -1.0156],
        [     0.0000,      4.2188,      1.6875,      1.8281,      1.9141,     -1.3672,     -0.5703,      0.8477,      0.9492,      0.7578,      8.2500,      2.7812,      4.3750,      1.4531,      0.9805],
        [     0.0000,      0.2520,     -2.5000,     -3.4375,     -2.1719,     -2.0156,     -1.5781,     -2.7656,     -2.3750,      0.1729,     -0.6758,      0.8984,     -0.8711,     -1.0703,      0.3066],
        [     0.0000,      3.4219,      2.2812,     -0.4629,      0.0410,     -0.3242,     -0.2275,      4.3125,     -0.5859,      1.5078,      2.1875,      1.8125,     11.1250,      3.0156,      1.9531],
        [     0.0000,     10.2500,      4.6250,      2.7188,      3.9375,      3.8906,      6.5312,      6.1562,      8.1875,      7.9688,      8.6250,      3.6562,      7.5312,     11.2500,      9.8125],
        [     0.0000,      4.3125,      1.1641,      0.2334,      0.9922,      0.2070,      1.3438,      0.4902,     -0.5742,      3.7344,      2.0156,     -0.4160,     -0.6484,      0.3301,      3.0938],
        [     0.0000,      4.0938,      0.4434,      2.4062,      1.4375,     -1.6250,     -0.4277,     -0.9648,     -2.0625,     -0.1221,      1.0859,     -2.9062,     -1.0000,     -1.6484,     -1.2812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2743],
        [0.0665],
        [0.0594],
        [0.0952],
        [0.0756],
        [0.1274],
        [0.0853],
        [0.0951],
        [0.0363],
        [0.0833],
        [0.0302],
        [0.0602],
        [0.0603],
        [0.0373]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0025, 0.9961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0113, 0.7734, 0.2158, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0021, 0.7500, 0.2178, 0.0312, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.2305, 0.0571, 0.0259, 0.4395, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0150, 0.2617, 0.0293, 0.0160, 0.3906, 0.2871, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0442, 0.1157, 0.0060, 0.0036, 0.5977, 0.0723, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0302, 0.1201, 0.0054, 0.0017, 0.6680, 0.0630, 0.0889, 0.0216, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0069, 0.1338, 0.0106, 0.0020, 0.1904, 0.0986, 0.0162, 0.0100, 0.5312, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0217, 0.2373, 0.0583, 0.0184, 0.0693, 0.1260, 0.0156, 0.0850, 0.2236, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0089, 0.0806, 0.0283, 0.0064, 0.0260, 0.0327, 0.0033, 0.0422, 0.4961, 0.1504, 0.1260, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0092, 0.1865, 0.1006, 0.0325, 0.1040, 0.1807, 0.0082, 0.2061, 0.0723, 0.0447, 0.0298, 0.0261, 0.0000, 0.0000, 0.0000],
        [0.0376, 0.1128, 0.0144, 0.0025, 0.0894, 0.0332, 0.0109, 0.0164, 0.5742, 0.0474, 0.0286, 0.0125, 0.0182, 0.0000, 0.0000],
        [0.0089, 0.1079, 0.0091, 0.0018, 0.0923, 0.0703, 0.0120, 0.0148, 0.2734, 0.0581, 0.0327, 0.0037, 0.0074, 0.3086, 0.0000],
        [0.0068, 0.2559, 0.0649, 0.0292, 0.0349, 0.1099, 0.0198, 0.0498, 0.0520, 0.0918, 0.0598, 0.0275, 0.0723, 0.0574, 0.0679]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0415, -0.0108, -0.0249,  ..., -0.0543, -0.0328, -0.0072],
        [-0.0273,  0.0535, -0.0053,  ...,  0.0081, -0.0049,  0.0261],
        [ 0.0122,  0.0181, -0.0361,  ...,  0.0275,  0.0475,  0.0136],
        ...,
        [ 0.0108,  0.0196,  0.0302,  ..., -0.0315, -0.0023, -0.0345],
        [ 0.0100,  0.0371,  0.0147,  ..., -0.0102,  0.0141, -0.0322],
        [-0.0323,  0.0006, -0.0515,  ..., -0.0337,  0.0231,  0.0016]], device='cuda:0', requires_grad=True)
K: tensor([-1.4766, -1.9766,  1.8516, -1.9844,  1.3125,  0.1367, -0.4766, -0.4609, -2.5156, -0.8789, -0.9688,  2.2188, -2.5469, -1.3672, -0.1514, -2.4688, -1.0156, -1.3047,  0.6367,  0.3594, -0.4648, -2.0781,  0.5469, -2.2812, -0.0095, -0.7578,  0.3125,  0.8320, -0.9180, -0.8320, -2.7656, -1.7109,
         0.9844, -1.9531,  0.5820, -1.1094, -1.6406, -0.4668,  0.2012, -0.2422, -0.8594,  0.9453,  1.6797,  1.5547, -0.4648,  2.0469, -0.7578,  2.5625, -1.5859, -1.4219, -0.5938,  2.0469,  0.9375, -1.6094, -0.4492, -1.5391,  0.8516,  0.1807, -1.3750,  1.7031,  0.2715,  2.7656,  0.9258, -0.7852],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0361,  0.0022, -0.0042,  ...,  0.0244,  0.0074,  0.0214],
        [ 0.0469,  0.0193,  0.0464,  ..., -0.0386,  0.0120,  0.0158],
        [-0.0429, -0.0582, -0.0035,  ..., -0.0234,  0.0330,  0.0395],
        ...,
        [-0.0123,  0.0122,  0.0426,  ...,  0.0141,  0.0086, -0.0077],
        [ 0.0297, -0.0095, -0.0203,  ..., -0.0337,  0.0149, -0.0280],
        [ 0.0075,  0.0276,  0.0020,  ...,  0.0217, -0.0181,  0.0115]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1748,  2.0156,  0.0525, -0.9961,  0.9141,  1.0938, -0.5508, -0.8633, -1.4297,  0.2100, -0.8711, -0.2812, -0.3867,  0.4121,  0.3789, -1.1797,  0.1245,  1.0625,  0.4609,  0.7031, -1.2891,  0.5117,  0.2119, -0.7969, -0.1758,  0.5664,  0.3730,  0.6328, -1.0625, -0.0189, -1.1250, -1.4297,
        -0.5820, -0.5352,  0.6758, -1.3984, -2.7812, -0.8867,  1.4297, -0.1699, -1.8828, -0.0159,  0.0286,  0.3047,  0.6094,  0.3906,  1.1562,  0.1807,  0.5234, -0.2207,  0.2930, -1.3906, -1.1016, -0.6953, -1.6250, -0.7109, -1.0781,  0.3203, -0.0986, -1.2344, -1.1797, -0.3887, -0.2441, -0.0250],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  6.0000,  4.3750,  4.2500,  3.6875,  5.0000,  3.1875,  3.8906,  4.5625,  3.0938,  3.3125,  1.9688,  3.5469,  4.3750,  3.3594],
        [ 0.0000,  4.2188,  2.9531,  2.0625,  3.3906,  3.9688,  1.6250,  3.3125,  2.6250,  1.4922,  1.1797,  1.4141,  2.3594,  1.9688,  1.6562],
        [ 0.0000,  5.8750,  4.6250,  2.7031,  5.7500,  5.6250,  1.8359,  3.3125,  4.5625,  2.1094,  1.7891,  1.6641,  1.6719,  3.3438,  2.4844],
        [ 0.0000, -0.0645, -1.4609, -2.2500,  0.5820,  0.3457, -1.1172, -1.4062,  2.8125, -1.0312, -1.7500, -3.0312, -3.3125,  1.6797, -0.9922],
        [ 0.0000,  2.8594,  0.6680,  0.0664,  3.2656,  2.9531,  2.1406,  0.2695,  4.4688,  0.5234,  0.2275, -0.6641, -2.3281,  3.0938,  0.6953],
        [ 0.0000,  0.9609, -2.0000, -2.5156,  2.5938,  0.4902,  1.2969, -0.6211,  5.1250, -0.2070, -0.6523, -2.5156, -3.3125,  3.5469, -0.8789],
        [ 0.0000,  1.3828, -1.7109, -2.9062,  3.1094,  0.7344,  1.0859, -0.3320,  5.5000,  0.3750, -0.3633, -2.9375, -3.0781,  4.4375, -0.2891],
        [ 0.0000,  2.9688,  0.4277, -1.2500,  3.3125,  2.6562,  0.8594,  0.3730,  4.3438,  2.2500,  1.4922, -1.4141, -1.3203,  3.6875,  2.3438],
        [ 0.0000,  2.3906,  0.9883, -0.1602,  1.1641,  1.7578, -0.3242,  1.3672,  2.3281,  1.8984,  1.7109,  0.8203,  2.0000,  2.7656,  2.1406],
        [ 0.0000,  2.2031,  1.1562, -0.3281,  1.0703,  1.2969, -0.9922,  1.5547,  4.0312,  2.8281,  2.6562,  1.5312,  2.1875,  4.2188,  2.0156],
        [ 0.0000,  3.0000,  2.3906,  1.2656,  2.4219,  2.9844, -0.1182,  3.1094,  2.0625,  1.5781,  1.1719,  1.0469,  3.2031,  1.7734,  0.9336],
        [ 0.0000,  1.0938, -0.9609, -2.7188,  0.8633, -0.1230, -1.2422, -0.8320,  2.7344,  0.2275, -0.2773, -1.1094, -0.7266,  2.7812, -0.2354],
        [ 0.0000,  2.5000,  0.0219, -1.6172,  2.3438,  2.0625,  0.3008,  0.5078,  3.4219,  1.8750,  1.2969, -0.8750, -0.1797,  3.5469,  2.2500],
        [ 0.0000,  3.6250,  2.2500,  1.4531,  1.6328,  2.7812,  1.0703,  1.9922,  2.0312,  2.6094,  2.1719,  1.3984,  2.3594,  2.1250,  2.2969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1669],
        [0.0774],
        [0.0387],
        [0.0820],
        [0.0345],
        [0.0493],
        [0.0449],
        [0.0339],
        [0.0547],
        [0.0253],
        [0.0438],
        [0.0266],
        [0.0234],
        [0.0163]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( and:0.1157 a:0.1543,:0.1895 yellow:0.1387om:0.0811,:0.4473 a:0.0850iced:0.3691)
iced
------
		( a:0.1543,:0.1895 yellow:0.1387om:0.0811,:0.4473 a:0.0850iced:0.3691,:0.1904)
, and are used for the purposes of the same purpose.
The first
@ 3050 train 4.3566 , allloss: 4.3568, dt: 1241.42ms, fracRes: 0.2839, norm(attn): 0.4121, norm(output): 3.0000, norm(x): 2.5025, norm(y): 0.9982, norm:0.8206, tok/sec: 105582.11, flops:82.23, batch-reuse:1
@ 3051 train 4.3151 , allloss: 4.3154, dt: 956.56ms, fracRes: 0.2833, norm(attn): 0.4121, norm(output): 2.9844, norm(x): 2.4660, norm(y): 0.9981, norm:0.8986, tok/sec: 137024.63, flops:106.72, batch-reuse:1
@ 3052 train 4.2547 , allloss: 4.2548, dt: 901.11ms, fracRes: 0.2830, norm(attn): 0.4102, norm(output): 2.9531, norm(x): 2.4555, norm(y): 0.9979, norm:0.7508, tok/sec: 145455.94, flops:113.28, batch-reuse:1
@ 3053 train 4.2483 , allloss: 4.2485, dt: 898.27ms, fracRes: 0.2843, norm(attn): 0.4062, norm(output): 2.9688, norm(x): 2.4659, norm(y): 0.9979, norm:0.7387, tok/sec: 145915.32, flops:113.64, batch-reuse:1
@ 3054 train 4.2906 , allloss: 4.2908, dt: 894.39ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 2.9531, norm(x): 2.4565, norm(y): 0.9979, norm:0.7582, tok/sec: 146548.68, flops:114.13, batch-reuse:1
@ 3055 train 4.2165 , allloss: 4.2167, dt: 895.40ms, fracRes: 0.2842, norm(attn): 0.4062, norm(output): 2.9844, norm(x): 2.4583, norm(y): 0.9980, norm:0.6690, tok/sec: 146384.28, flops:114.00, batch-reuse:1
@ 3056 train 4.2859 , allloss: 4.2860, dt: 902.88ms, fracRes: 0.2844, norm(attn): 0.4062, norm(output): 2.9844, norm(x): 2.4684, norm(y): 0.9981, norm:0.6750, tok/sec: 145170.44, flops:113.06, batch-reuse:1
@ 3057 train 4.2300 , allloss: 4.2301, dt: 890.67ms, fracRes: 0.2847, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4729, norm(y): 0.9981, norm:0.5987, tok/sec: 147161.75, flops:114.61, batch-reuse:1
@ 3058 train 4.2712 , allloss: 4.2713, dt: 900.47ms, fracRes: 0.2843, norm(attn): 0.4062, norm(output): 2.9688, norm(x): 2.4628, norm(y): 0.9979, norm:0.6402, tok/sec: 145559.19, flops:113.36, batch-reuse:1
@ 3059 train 4.2296 , allloss: 4.2297, dt: 894.00ms, fracRes: 0.2838, norm(attn): 0.4043, norm(output): 2.9531, norm(x): 2.4563, norm(y): 0.9977, norm:0.6055, tok/sec: 146612.46, flops:114.18, batch-reuse:1
@ 3060 train 4.4140 , allloss: 4.4142, dt: 904.52ms, fracRes: 0.2846, norm(attn): 0.4023, norm(output): 2.9531, norm(x): 2.4568, norm(y): 0.9977, norm:0.6193, tok/sec: 144907.03, flops:112.85, batch-reuse:1
@ 3061 train 4.1225 , allloss: 4.1228, dt: 905.75ms, fracRes: 0.2864, norm(attn): 0.4023, norm(output): 2.9688, norm(x): 2.4828, norm(y): 0.9979, norm:0.8842, tok/sec: 144710.51, flops:112.70, batch-reuse:1
@ 3062 train 4.1696 , allloss: 4.1699, dt: 885.73ms, fracRes: 0.2837, norm(attn): 0.4062, norm(output): 2.9375, norm(x): 2.4654, norm(y): 0.9977, norm:0.7087, tok/sec: 147982.48, flops:115.25, batch-reuse:1
@ 3063 train 4.2221 , allloss: 4.2223, dt: 900.52ms, fracRes: 0.2837, norm(attn): 0.4043, norm(output): 2.9844, norm(x): 2.4662, norm(y): 0.9977, norm:0.6512, tok/sec: 145550.91, flops:113.36, batch-reuse:1
@ 3064 train 4.1529 , allloss: 4.1530, dt: 903.97ms, fracRes: 0.2837, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4741, norm(y): 0.9978, norm:0.6249, tok/sec: 144996.50, flops:112.92, batch-reuse:1
@ 3065 train 4.2840 , allloss: 4.2842, dt: 893.49ms, fracRes: 0.2836, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4811, norm(y): 0.9978, norm:0.5991, tok/sec: 146696.96, flops:114.25, batch-reuse:1
@ 3066 train 4.2917 , allloss: 4.2918, dt: 898.05ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 2.9531, norm(x): 2.4763, norm(y): 0.9978, norm:0.6384, tok/sec: 145952.32, flops:113.67, batch-reuse:1
@ 3067 train 4.3319 , allloss: 4.3321, dt: 900.70ms, fracRes: 0.2831, norm(attn): 0.4082, norm(output): 2.9531, norm(x): 2.4633, norm(y): 0.9975, norm:0.6405, tok/sec: 145521.97, flops:113.33, batch-reuse:1
@ 3068 train 4.2020 , allloss: 4.2021, dt: 896.60ms, fracRes: 0.2843, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4738, norm(y): 0.9977, norm:0.6106, tok/sec: 146188.40, flops:113.85, batch-reuse:1
@ 3069 train 4.2420 , allloss: 4.2421, dt: 888.74ms, fracRes: 0.2836, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4737, norm(y): 0.9976, norm:0.6915, tok/sec: 147480.34, flops:114.86, batch-reuse:1
@ 3070 train 4.2114 , allloss: 4.2117, dt: 895.22ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4762, norm(y): 0.9977, norm:0.6967, tok/sec: 146412.81, flops:114.03, batch-reuse:1
@ 3071 train 4.2251 , allloss: 4.2253, dt: 898.82ms, fracRes: 0.2843, norm(attn): 0.4102, norm(output): 3.0000, norm(x): 2.4886, norm(y): 0.9978, norm:0.6869, tok/sec: 145826.61, flops:113.57, batch-reuse:1
@ 3072 train 4.2149 , allloss: 4.2151, dt: 915.90ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.4913, norm(y): 0.9978, norm:0.7669, tok/sec: 143108.04, flops:111.45, batch-reuse:1
@ 3073 train 4.1756 , allloss: 4.1757, dt: 912.04ms, fracRes: 0.2837, norm(attn): 0.4062, norm(output): 2.9688, norm(x): 2.4630, norm(y): 0.9976, norm:0.8111, tok/sec: 143713.67, flops:111.92, batch-reuse:1
@ 3074 train 4.1387 , allloss: 4.1389, dt: 910.49ms, fracRes: 0.2838, norm(attn): 0.4062, norm(output): 2.9844, norm(x): 2.4780, norm(y): 0.9976, norm:0.6335, tok/sec: 143957.91, flops:112.11, batch-reuse:1
@ 3075 train 4.2391 , allloss: 4.2392, dt: 905.27ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 3.0000, norm(x): 2.4940, norm(y): 0.9976, norm:0.7037, tok/sec: 144788.38, flops:112.76, batch-reuse:1
@ 3076 train 4.1635 , allloss: 4.1637, dt: 907.17ms, fracRes: 0.2831, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4744, norm(y): 0.9974, norm:0.8283, tok/sec: 144483.92, flops:112.52, batch-reuse:1
@ 3077 train 4.2095 , allloss: 4.2097, dt: 912.29ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4904, norm(y): 0.9975, norm:0.8928, tok/sec: 143674.31, flops:111.89, batch-reuse:1
@ 3078 train 4.1828 , allloss: 4.1829, dt: 903.33ms, fracRes: 0.2848, norm(attn): 0.4062, norm(output): 2.9375, norm(x): 2.4815, norm(y): 0.9976, norm:0.6645, tok/sec: 145098.10, flops:113.00, batch-reuse:1
@ 3079 train 4.1629 , allloss: 4.1630, dt: 901.63ms, fracRes: 0.2843, norm(attn): 0.4082, norm(output): 2.9688, norm(x): 2.4905, norm(y): 0.9976, norm:0.6926, tok/sec: 145372.67, flops:113.22, batch-reuse:1
@ 3080 train 4.2918 , allloss: 4.2920, dt: 915.06ms, fracRes: 0.2843, norm(attn): 0.4121, norm(output): 3.0000, norm(x): 2.5211, norm(y): 0.9978, norm:0.7784, tok/sec: 143238.95, flops:111.56, batch-reuse:1
@ 3081 train 4.2588 , allloss: 4.2590, dt: 913.68ms, fracRes: 0.2844, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.5091, norm(y): 0.9977, norm:0.6512, tok/sec: 143455.51, flops:111.72, batch-reuse:1
@ 3082 train 4.2607 , allloss: 4.2609, dt: 904.31ms, fracRes: 0.2845, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.5011, norm(y): 0.9975, norm:0.7104, tok/sec: 144941.83, flops:112.88, batch-reuse:1
@ 3083 train 4.1651 , allloss: 4.1653, dt: 902.87ms, fracRes: 0.2844, norm(attn): 0.4062, norm(output): 3.0000, norm(x): 2.4968, norm(y): 0.9975, norm:0.5714, tok/sec: 145173.24, flops:113.06, batch-reuse:1
@ 3084 train 4.1785 , allloss: 4.1788, dt: 890.49ms, fracRes: 0.2840, norm(attn): 0.4121, norm(output): 3.0000, norm(x): 2.5055, norm(y): 0.9976, norm:0.7000, tok/sec: 147190.82, flops:114.63, batch-reuse:1
@ 3085 train 4.2756 , allloss: 4.2757, dt: 902.41ms, fracRes: 0.2850, norm(attn): 0.4062, norm(output): 2.9844, norm(x): 2.5043, norm(y): 0.9977, norm:0.7849, tok/sec: 145246.46, flops:113.12, batch-reuse:1
@ 3086 train 4.1122 , allloss: 4.1133, dt: 917.98ms, fracRes: 0.2846, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.5058, norm(y): 0.9976, norm:0.6723, tok/sec: 142783.30, flops:111.20, batch-reuse:1
@ 3087 train 4.2005 , allloss: 4.2009, dt: 901.38ms, fracRes: 0.2842, norm(attn): 0.4062, norm(output): 2.9844, norm(x): 2.4793, norm(y): 0.9975, norm:0.6013, tok/sec: 145412.39, flops:113.25, batch-reuse:1
@ 3088 train 4.2057 , allloss: 4.2059, dt: 915.12ms, fracRes: 0.2838, norm(attn): 0.4062, norm(output): 2.9688, norm(x): 2.4721, norm(y): 0.9974, norm:0.6777, tok/sec: 143229.88, flops:111.55, batch-reuse:1
@ 3089 train 4.2245 , allloss: 4.2246, dt: 879.67ms, fracRes: 0.2834, norm(attn): 0.4102, norm(output): 2.9844, norm(x): 2.4856, norm(y): 0.9975, norm:0.5887, tok/sec: 149001.95, flops:116.04, batch-reuse:1
@ 3090 train 4.1248 , allloss: 4.1250, dt: 895.27ms, fracRes: 0.2832, norm(attn): 0.4102, norm(output): 2.9844, norm(x): 2.4692, norm(y): 0.9974, norm:0.6267, tok/sec: 146405.37, flops:114.02, batch-reuse:1
@ 3091 train 4.3418 , allloss: 4.3420, dt: 897.66ms, fracRes: 0.2838, norm(attn): 0.4102, norm(output): 2.9844, norm(x): 2.4754, norm(y): 0.9973, norm:0.6736, tok/sec: 146015.23, flops:113.72, batch-reuse:1
@ 3092 train 4.1919 , allloss: 4.1922, dt: 898.52ms, fracRes: 0.2838, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4831, norm(y): 0.9973, norm:0.6702, tok/sec: 145874.74, flops:113.61, batch-reuse:1
@ 3093 train 4.2096 , allloss: 4.2098, dt: 897.72ms, fracRes: 0.2843, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.5057, norm(y): 0.9973, norm:0.6802, tok/sec: 146005.07, flops:113.71, batch-reuse:1
@ 3094 train 4.1857 , allloss: 4.1859, dt: 897.00ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 2.9375, norm(x): 2.4800, norm(y): 0.9972, norm:0.6246, tok/sec: 146122.04, flops:113.80, batch-reuse:1
@ 3095 train 4.2048 , allloss: 4.2049, dt: 896.53ms, fracRes: 0.2838, norm(attn): 0.4062, norm(output): 2.9062, norm(x): 2.4580, norm(y): 0.9971, norm:0.5742, tok/sec: 146199.02, flops:113.86, batch-reuse:1
@ 3096 train 4.2592 , allloss: 4.2593, dt: 890.93ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 2.9688, norm(x): 2.4862, norm(y): 0.9972, norm:0.6008, tok/sec: 147117.99, flops:114.58, batch-reuse:1
@ 3097 train 4.2147 , allloss: 4.2148, dt: 909.91ms, fracRes: 0.2843, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.5083, norm(y): 0.9974, norm:0.5856, tok/sec: 144049.00, flops:112.19, batch-reuse:1
@ 3098 train 4.2162 , allloss: 4.2162, dt: 896.41ms, fracRes: 0.2836, norm(attn): 0.4102, norm(output): 3.0000, norm(x): 2.4990, norm(y): 0.9973, norm:0.6251, tok/sec: 146219.12, flops:113.88, batch-reuse:1
@ 3099 train 4.2483 , allloss: 4.2485, dt: 891.93ms, fracRes: 0.2841, norm(attn): 0.4102, norm(output): 3.0000, norm(x): 2.4999, norm(y): 0.9973, norm:0.6627, tok/sec: 146953.65, flops:114.45, batch-reuse:1
@ 3100 train 4.1043 , allloss: 4.1044, dt: 924.67ms, fracRes: 0.2842, norm(attn): 0.4121, norm(output): 2.9531, norm(x): 2.4795, norm(y): 0.9972, norm:0.6243, tok/sec: 141750.22, flops:110.40, batch-reuse:1
@ 3101 train 4.1451 , allloss: 4.1453, dt: 923.27ms, fracRes: 0.2838, norm(attn): 0.4121, norm(output): 2.9688, norm(x): 2.4918, norm(y): 0.9972, norm:0.5703, tok/sec: 141964.39, flops:110.56, batch-reuse:1
@ 3102 train 4.2187 , allloss: 4.2188, dt: 909.59ms, fracRes: 0.2837, norm(attn): 0.4141, norm(output): 3.0000, norm(x): 2.5177, norm(y): 0.9972, norm:0.6145, tok/sec: 144099.79, flops:112.23, batch-reuse:1
@ 3103 train 4.1866 , allloss: 4.1869, dt: 900.28ms, fracRes: 0.2835, norm(attn): 0.4180, norm(output): 3.0000, norm(x): 2.5183, norm(y): 0.9973, norm:0.6225, tok/sec: 145590.69, flops:113.39, batch-reuse:1
@ 3104 train 4.0926 , allloss: 4.0927, dt: 904.14ms, fracRes: 0.2835, norm(attn): 0.4102, norm(output): 3.0000, norm(x): 2.5047, norm(y): 0.9971, norm:0.5983, tok/sec: 144968.93, flops:112.90, batch-reuse:1
@ 3105 train 4.2511 , allloss: 4.2515, dt: 904.36ms, fracRes: 0.2841, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.5059, norm(y): 0.9970, norm:0.6451, tok/sec: 144933.62, flops:112.87, batch-reuse:1
@ 3106 train 4.1420 , allloss: 4.1422, dt: 907.58ms, fracRes: 0.2835, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.5051, norm(y): 0.9969, norm:0.6379, tok/sec: 144418.75, flops:112.47, batch-reuse:1
@ 3107 train 4.1179 , allloss: 4.1181, dt: 896.99ms, fracRes: 0.2828, norm(attn): 0.4121, norm(output): 3.0000, norm(x): 2.5050, norm(y): 0.9969, norm:0.7160, tok/sec: 146124.95, flops:113.80, batch-reuse:1
@ 3108 train 4.2221 , allloss: 4.2230, dt: 895.89ms, fracRes: 0.2837, norm(attn): 0.4062, norm(output): 2.9844, norm(x): 2.4939, norm(y): 0.9970, norm:0.8038, tok/sec: 146302.98, flops:113.94, batch-reuse:1
@ 3109 train 4.1147 , allloss: 4.1148, dt: 904.09ms, fracRes: 0.2838, norm(attn): 0.4062, norm(output): 3.0000, norm(x): 2.5025, norm(y): 0.9969, norm:0.8232, tok/sec: 144976.00, flops:112.91, batch-reuse:1
@ 3110 train 4.1368 , allloss: 4.1369, dt: 901.27ms, fracRes: 0.2836, norm(attn): 0.4102, norm(output): 3.0000, norm(x): 2.5067, norm(y): 0.9969, norm:0.7484, tok/sec: 145430.47, flops:113.26, batch-reuse:1
@ 3111 train 4.2518 , allloss: 4.2519, dt: 903.55ms, fracRes: 0.2836, norm(attn): 0.4102, norm(output): 2.9844, norm(x): 2.5024, norm(y): 0.9970, norm:0.6545, tok/sec: 145063.99, flops:112.98, batch-reuse:1
@ 3112 train 4.0958 , allloss: 4.0962, dt: 906.01ms, fracRes: 0.2831, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.4938, norm(y): 0.9969, norm:0.6019, tok/sec: 144670.15, flops:112.67, batch-reuse:1
@ 3113 train 4.1429 , allloss: 4.1431, dt: 893.18ms, fracRes: 0.2833, norm(attn): 0.4062, norm(output): 2.9844, norm(x): 2.4895, norm(y): 0.9968, norm:0.5989, tok/sec: 146748.02, flops:114.29, batch-reuse:1
@ 3114 train 4.1419 , allloss: 4.1421, dt: 892.26ms, fracRes: 0.2837, norm(attn): 0.4062, norm(output): 3.0000, norm(x): 2.5051, norm(y): 0.9969, norm:0.6741, tok/sec: 146898.91, flops:114.41, batch-reuse:1
@ 3115 train 4.1180 , allloss: 4.1196, dt: 900.49ms, fracRes: 0.2835, norm(attn): 0.4121, norm(output): 3.0000, norm(x): 2.5204, norm(y): 0.9968, norm:0.6928, tok/sec: 145556.46, flops:113.36, batch-reuse:1
@ 3116 train 4.0956 , allloss: 4.0957, dt: 904.81ms, fracRes: 0.2838, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.5229, norm(y): 0.9968, norm:0.7118, tok/sec: 144860.67, flops:112.82, batch-reuse:1
@ 3117 train 4.1041 , allloss: 4.1042, dt: 895.08ms, fracRes: 0.2836, norm(attn): 0.4062, norm(output): 3.0000, norm(x): 2.5210, norm(y): 0.9968, norm:0.5466, tok/sec: 146436.14, flops:114.04, batch-reuse:1
@ 3118 train 4.0712 , allloss: 4.0715, dt: 908.12ms, fracRes: 0.2834, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.5155, norm(y): 0.9967, norm:0.6137, tok/sec: 144334.04, flops:112.41, batch-reuse:1
@ 3119 train 4.3950 , allloss: 4.3953, dt: 889.67ms, fracRes: 0.2826, norm(attn): 0.4082, norm(output): 3.0156, norm(x): 2.5305, norm(y): 0.9968, norm:0.7276, tok/sec: 147326.12, flops:114.74, batch-reuse:1
@ 3120 train 4.1744 , allloss: 4.1745, dt: 899.81ms, fracRes: 0.2829, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.5130, norm(y): 0.9967, norm:0.6305, tok/sec: 145666.68, flops:113.45, batch-reuse:1
@ 3121 train 3.9174 , allloss: 3.9176, dt: 905.10ms, fracRes: 0.2831, norm(attn): 0.4141, norm(output): 3.0000, norm(x): 2.5436, norm(y): 0.9968, norm:0.7752, tok/sec: 144814.54, flops:112.78, batch-reuse:1
@ 3122 train 4.0793 , allloss: 4.0797, dt: 904.18ms, fracRes: 0.2833, norm(attn): 0.4141, norm(output): 3.0156, norm(x): 2.5501, norm(y): 0.9967, norm:0.8252, tok/sec: 144962.47, flops:112.90, batch-reuse:1
@ 3123 train 4.2585 , allloss: 4.2603, dt: 901.54ms, fracRes: 0.2835, norm(attn): 0.4102, norm(output): 3.0000, norm(x): 2.5395, norm(y): 0.9968, norm:0.7789, tok/sec: 145386.97, flops:113.23, batch-reuse:1
@ 3124 train 4.2621 , allloss: 4.2624, dt: 902.00ms, fracRes: 0.2824, norm(attn): 0.4121, norm(output): 3.0000, norm(x): 2.5392, norm(y): 0.9966, norm:0.6780, tok/sec: 145312.11, flops:113.17, batch-reuse:1
@ 3125 train 4.1667 , allloss: 4.1670, dt: 894.05ms, fracRes: 0.2846, norm(attn): 0.4082, norm(output): 3.0156, norm(x): 2.5611, norm(y): 0.9966, norm:0.6883, tok/sec: 146604.68, flops:114.18, batch-reuse:1
@ 3126 train 3.9854 , allloss: 3.9885, dt: 907.43ms, fracRes: 0.2842, norm(attn): 0.4082, norm(output): 3.0156, norm(x): 2.5522, norm(y): 0.9965, norm:0.6818, tok/sec: 144443.79, flops:112.49, batch-reuse:1
@ 3127 train 4.1184 , allloss: 4.1210, dt: 901.62ms, fracRes: 0.2840, norm(attn): 0.4082, norm(output): 3.0000, norm(x): 2.5339, norm(y): 0.9966, norm:0.7084, tok/sec: 145373.74, flops:113.22, batch-reuse:1
@ 3128 train 4.1221 , allloss: 4.1225, dt: 901.52ms, fracRes: 0.2830, norm(attn): 0.4102, norm(output): 3.0156, norm(x): 2.5382, norm(y): 0.9964, norm:0.6596, tok/sec: 145389.78, flops:113.23, batch-reuse:1
@ 3129 train 3.9782 , allloss: 3.9839, dt: 898.02ms, fracRes: 0.2830, norm(attn): 0.4082, norm(output): 2.9844, norm(x): 2.5063, norm(y): 0.9963, norm:0.6920, tok/sec: 145956.31, flops:113.67, batch-reuse:1
@ 3130 train 4.1147 , allloss: 4.1149, dt: 884.29ms, fracRes: 0.2836, norm(attn): 0.4062, norm(output): 3.0000, norm(x): 2.5132, norm(y): 0.9964, norm:0.7483, tok/sec: 148223.03, flops:115.44, batch-reuse:1
@ 3131 train 3.9996 , allloss: 3.9998, dt: 900.26ms, fracRes: 0.2832, norm(attn): 0.4102, norm(output): 3.0000, norm(x): 2.5191, norm(y): 0.9963, norm:0.6417, tok/sec: 145593.92, flops:113.39, batch-reuse:1
@ 3132 train 4.0407 , allloss: 4.0408, dt: 890.50ms, fracRes: 0.2828, norm(attn): 0.4121, norm(output): 3.0156, norm(x): 2.5228, norm(y): 0.9962, norm:0.6774, tok/sec: 147189.76, flops:114.63, batch-reuse:1
@ 3133 train 4.0506 , allloss: 4.0507, dt: 905.86ms, fracRes: 0.2836, norm(attn): 0.4121, norm(output): 3.0000, norm(x): 2.5222, norm(y): 0.9963, norm:0.6468, tok/sec: 144693.79, flops:112.69, batch-reuse:1
@ 3134 train 4.0284 , allloss: 4.0287, dt: 907.45ms, fracRes: 0.2831, norm(attn): 0.4102, norm(output): 3.0000, norm(x): 2.5402, norm(y): 0.9962, norm:0.5804, tok/sec: 144440.30, flops:112.49, batch-reuse:1
@ 3135 train 4.0566 , allloss: 4.0568, dt: 909.01ms, fracRes: 0.2835, norm(attn): 0.4082, norm(output): 3.0312, norm(x): 2.5680, norm(y): 0.9963, norm:0.6487, tok/sec: 144191.40, flops:112.30, batch-reuse:1
@ 3136 train 4.0230 , allloss: 4.0274, dt: 888.81ms, fracRes: 0.2831, norm(attn): 0.4121, norm(output): 3.0469, norm(x): 2.5776, norm(y): 0.9962, norm:0.7225, tok/sec: 147469.54, flops:114.85, batch-reuse:1
@ 3137 train 4.1043 , allloss: 4.1044, dt: 901.86ms, fracRes: 0.2837, norm(attn): 0.4102, norm(output): 3.0625, norm(x): 2.5812, norm(y): 0.9962, norm:0.6744, tok/sec: 145335.43, flops:113.19, batch-reuse:1
@ 3138 train 4.1570 , allloss: 4.1571, dt: 893.10ms, fracRes: 0.2838, norm(attn): 0.4082, norm(output): 3.0312, norm(x): 2.5700, norm(y): 0.9962, norm:0.7210, tok/sec: 146760.01, flops:114.30, batch-reuse:1
@ 3139 train 4.0777 , allloss: 4.0779, dt: 887.53ms, fracRes: 0.2836, norm(attn): 0.4082, norm(output): 3.0156, norm(x): 2.5645, norm(y): 0.9961, norm:0.6592, tok/sec: 147681.24, flops:115.01, batch-reuse:1
@ 3140 train 4.0960 , allloss: 4.0962, dt: 887.95ms, fracRes: 0.2840, norm(attn): 0.4062, norm(output): 3.0156, norm(x): 2.5595, norm(y): 0.9961, norm:0.6028, tok/sec: 147612.32, flops:114.96, batch-reuse:1
@ 3141 train 4.1330 , allloss: 4.1332, dt: 902.04ms, fracRes: 0.2834, norm(attn): 0.4121, norm(output): 3.0156, norm(x): 2.5582, norm(y): 0.9963, norm:0.6178, tok/sec: 145306.12, flops:113.16, batch-reuse:1
@ 3142 train 4.0312 , allloss: 4.0313, dt: 905.33ms, fracRes: 0.2837, norm(attn): 0.4121, norm(output): 3.0312, norm(x): 2.5660, norm(y): 0.9963, norm:0.7396, tok/sec: 144778.23, flops:112.75, batch-reuse:1
@ 3143 train 4.3844 , allloss: 4.3845, dt: 909.52ms, fracRes: 0.2842, norm(attn): 0.4062, norm(output): 3.0781, norm(x): 2.6044, norm(y): 0.9963, norm:0.9207, tok/sec: 144111.34, flops:112.23, batch-reuse:1
@ 3144 train 4.1311 , allloss: 4.1315, dt: 915.27ms, fracRes: 0.2829, norm(attn): 0.4082, norm(output): 3.0312, norm(x): 2.5547, norm(y): 0.9960, norm:1.0397, tok/sec: 143205.33, flops:111.53, batch-reuse:1
@ 3145 train 4.1091 , allloss: 4.1093, dt: 924.83ms, fracRes: 0.2835, norm(attn): 0.4141, norm(output): 3.0156, norm(x): 2.5484, norm(y): 0.9962, norm:0.8790, tok/sec: 141725.22, flops:110.38, batch-reuse:1
@ 3146 train 4.0739 , allloss: 4.0740, dt: 925.18ms, fracRes: 0.2828, norm(attn): 0.4160, norm(output): 3.0156, norm(x): 2.5478, norm(y): 0.9964, norm:0.8579, tok/sec: 141671.57, flops:110.33, batch-reuse:1
@ 3147 train 4.0442 , allloss: 4.0443, dt: 920.12ms, fracRes: 0.2835, norm(attn): 0.4102, norm(output): 3.0156, norm(x): 2.5601, norm(y): 0.9963, norm:0.7774, tok/sec: 142450.62, flops:110.94, batch-reuse:1
@ 3148 train 4.1246 , allloss: 4.1252, dt: 925.04ms, fracRes: 0.2833, norm(attn): 0.4043, norm(output): 3.0156, norm(x): 2.5470, norm(y): 0.9961, norm:0.6171, tok/sec: 141693.29, flops:110.35, batch-reuse:1
@ 3149 train 4.1509 , allloss: 4.1510, dt: 913.87ms, fracRes: 0.2832, norm(attn): 0.4062, norm(output): 3.0156, norm(x): 2.5405, norm(y): 0.9960, norm:0.6699, tok/sec: 143424.67, flops:111.70, batch-reuse:1
@ 3150 train 4.1361 , allloss: 4.1363, dt: 921.54ms, fracRes: 0.2832, norm(attn): 0.4102, norm(output): 3.0156, norm(x): 2.5468, norm(y): 0.9961, norm:0.6117, tok/sec: 142231.33, flops:110.77, batch-reuse:1
@ 3151 train 4.1137 , allloss: 4.1138, dt: 882.42ms, fracRes: 0.2833, norm(attn): 0.4141, norm(output): 3.0312, norm(x): 2.5491, norm(y): 0.9960, norm:0.6970, tok/sec: 148537.17, flops:115.68, batch-reuse:1
@ 3152 train 4.0930 , allloss: 4.0932, dt: 901.41ms, fracRes: 0.2834, norm(attn): 0.4082, norm(output): 3.0156, norm(x): 2.5371, norm(y): 0.9959, norm:0.6653, tok/sec: 145407.35, flops:113.24, batch-reuse:1
@ 3153 train 4.1174 , allloss: 4.1176, dt: 916.18ms, fracRes: 0.2826, norm(attn): 0.4102, norm(output): 3.0156, norm(x): 2.5250, norm(y): 0.9959, norm:0.6353, tok/sec: 143063.05, flops:111.42, batch-reuse:1
@ 3154 train 4.1308 , allloss: 4.1310, dt: 912.18ms, fracRes: 0.2834, norm(attn): 0.4160, norm(output): 3.0156, norm(x): 2.5447, norm(y): 0.9960, norm:0.6293, tok/sec: 143690.61, flops:111.91, batch-reuse:1
@ 3155 train 3.9915 , allloss: 3.9916, dt: 911.10ms, fracRes: 0.2834, norm(attn): 0.4121, norm(output): 3.0156, norm(x): 2.5417, norm(y): 0.9961, norm:0.6104, tok/sec: 143860.94, flops:112.04, batch-reuse:1
@ 3156 train 4.0748 , allloss: 4.0749, dt: 905.00ms, fracRes: 0.2836, norm(attn): 0.4082, norm(output): 3.0156, norm(x): 2.5454, norm(y): 0.9960, norm:0.5854, tok/sec: 144830.41, flops:112.79, batch-reuse:1
@ 3157 train 4.1386 , allloss: 4.1388, dt: 908.97ms, fracRes: 0.2837, norm(attn): 0.4082, norm(output): 3.0312, norm(x): 2.5467, norm(y): 0.9960, norm:0.5341, tok/sec: 144198.40, flops:112.30, batch-reuse:1
@ 3158 train 4.0740 , allloss: 4.0742, dt: 907.93ms, fracRes: 0.2837, norm(attn): 0.4082, norm(output): 3.0312, norm(x): 2.5488, norm(y): 0.9960, norm:0.5712, tok/sec: 144362.96, flops:112.43, batch-reuse:1
@ 3159 train 4.0111 , allloss: 4.0112, dt: 917.85ms, fracRes: 0.2840, norm(attn): 0.4082, norm(output): 3.0625, norm(x): 2.5650, norm(y): 0.9961, norm:0.5846, tok/sec: 142804.03, flops:111.22, batch-reuse:1
@ 3160 train 4.2803 , allloss: 4.2805, dt: 896.79ms, fracRes: 0.2847, norm(attn): 0.4082, norm(output): 3.0469, norm(x): 2.5749, norm(y): 0.9961, norm:0.5552, tok/sec: 146157.47, flops:113.83, batch-reuse:1
@ 3161 train 4.2148 , allloss: 4.2150, dt: 890.75ms, fracRes: 0.2849, norm(attn): 0.4082, norm(output): 3.0625, norm(x): 2.5790, norm(y): 0.9961, norm:0.6408, tok/sec: 147147.96, flops:114.60, batch-reuse:1
@ 3162 train 4.1362 , allloss: 4.1364, dt: 891.98ms, fracRes: 0.2829, norm(attn): 0.4160, norm(output): 3.0312, norm(x): 2.5721, norm(y): 0.9959, norm:0.6176, tok/sec: 146945.60, flops:114.44, batch-reuse:1
@ 3163 train 4.2837 , allloss: 4.2838, dt: 899.94ms, fracRes: 0.2837, norm(attn): 0.4160, norm(output): 3.0469, norm(x): 2.5735, norm(y): 0.9960, norm:0.6225, tok/sec: 145645.11, flops:113.43, batch-reuse:1
@ 3164 train 4.2021 , allloss: 4.2026, dt: 889.40ms, fracRes: 0.2843, norm(attn): 0.4082, norm(output): 3.0312, norm(x): 2.5687, norm(y): 0.9960, norm:0.6764, tok/sec: 147371.73, flops:114.77, batch-reuse:1
@ 3165 train 4.1687 , allloss: 4.1690, dt: 889.78ms, fracRes: 0.2836, norm(attn): 0.4141, norm(output): 3.0156, norm(x): 2.5640, norm(y): 0.9959, norm:0.6546, tok/sec: 147308.87, flops:114.72, batch-reuse:1
@ 3166 train 4.3231 , allloss: 4.3233, dt: 903.10ms, fracRes: 0.2834, norm(attn): 0.4160, norm(output): 3.0625, norm(x): 2.5764, norm(y): 0.9959, norm:0.6589, tok/sec: 145134.88, flops:113.03, batch-reuse:1
@ 3167 train 4.1460 , allloss: 4.1461, dt: 901.96ms, fracRes: 0.2845, norm(attn): 0.4102, norm(output): 3.0781, norm(x): 2.6007, norm(y): 0.9960, norm:0.6658, tok/sec: 145319.48, flops:113.18, batch-reuse:1
@ 3168 train 4.2165 , allloss: 4.2166, dt: 902.10ms, fracRes: 0.2838, norm(attn): 0.4141, norm(output): 3.0938, norm(x): 2.5981, norm(y): 0.9959, norm:0.6166, tok/sec: 145296.21, flops:113.16, batch-reuse:1
@ 3169 train 4.2490 , allloss: 4.2491, dt: 898.89ms, fracRes: 0.2850, norm(attn): 0.4102, norm(output): 3.0781, norm(x): 2.6001, norm(y): 0.9960, norm:0.6426, tok/sec: 145815.78, flops:113.56, batch-reuse:1
@ 3170 train 4.2183 , allloss: 4.2185, dt: 909.03ms, fracRes: 0.2842, norm(attn): 0.4141, norm(output): 3.0469, norm(x): 2.5796, norm(y): 0.9959, norm:0.5994, tok/sec: 144188.98, flops:112.29, batch-reuse:1
@ 3171 train 4.2345 , allloss: 4.2347, dt: 909.72ms, fracRes: 0.2836, norm(attn): 0.4102, norm(output): 3.0312, norm(x): 2.5749, norm(y): 0.9958, norm:0.6387, tok/sec: 144079.77, flops:112.21, batch-reuse:1
@ 3172 train 4.2081 , allloss: 4.2082, dt: 907.01ms, fracRes: 0.2840, norm(attn): 0.4121, norm(output): 3.0781, norm(x): 2.6040, norm(y): 0.9959, norm:0.6045, tok/sec: 144509.55, flops:112.54, batch-reuse:1
@ 3173 train 4.2348 , allloss: 4.2349, dt: 905.40ms, fracRes: 0.2837, norm(attn): 0.4102, norm(output): 3.0312, norm(x): 2.5858, norm(y): 0.9959, norm:0.5891, tok/sec: 144767.10, flops:112.75, batch-reuse:1
@ 3174 train 4.2638 , allloss: 4.2639, dt: 896.27ms, fracRes: 0.2841, norm(attn): 0.4102, norm(output): 3.0781, norm(x): 2.6005, norm(y): 0.9959, norm:0.5958, tok/sec: 146241.68, flops:113.89, batch-reuse:1
@ 3175 train 4.2503 , allloss: 4.2504, dt: 892.90ms, fracRes: 0.2845, norm(attn): 0.4141, norm(output): 3.0625, norm(x): 2.6032, norm(y): 0.9959, norm:0.5722, tok/sec: 146793.63, flops:114.32, batch-reuse:1
@ 3176 train 4.2144 , allloss: 4.2145, dt: 901.76ms, fracRes: 0.2850, norm(attn): 0.4121, norm(output): 3.0469, norm(x): 2.6098, norm(y): 0.9958, norm:0.6104, tok/sec: 145351.22, flops:113.20, batch-reuse:1
@ 3177 train 4.1412 , allloss: 4.1413, dt: 905.45ms, fracRes: 0.2840, norm(attn): 0.4180, norm(output): 3.0625, norm(x): 2.6129, norm(y): 0.9958, norm:0.5643, tok/sec: 144758.79, flops:112.74, batch-reuse:1
@ 3178 train 4.3339 , allloss: 4.3341, dt: 906.38ms, fracRes: 0.2839, norm(attn): 0.4141, norm(output): 3.0938, norm(x): 2.6214, norm(y): 0.9958, norm:0.6337, tok/sec: 144610.32, flops:112.62, batch-reuse:1
@ 3179 train 4.1638 , allloss: 4.1640, dt: 909.15ms, fracRes: 0.2841, norm(attn): 0.4121, norm(output): 3.0938, norm(x): 2.6159, norm(y): 0.9957, norm:0.5921, tok/sec: 144169.47, flops:112.28, batch-reuse:1
@ 3180 train 4.2262 , allloss: 4.2263, dt: 904.27ms, fracRes: 0.2843, norm(attn): 0.4102, norm(output): 3.0625, norm(x): 2.6102, norm(y): 0.9957, norm:0.5445, tok/sec: 144947.79, flops:112.89, batch-reuse:1
@ 3181 train 4.2509 , allloss: 4.2511, dt: 900.78ms, fracRes: 0.2839, norm(attn): 0.4141, norm(output): 3.0625, norm(x): 2.6012, norm(y): 0.9957, norm:0.6105, tok/sec: 145509.11, flops:113.32, batch-reuse:1
@ 3182 train 4.1422 , allloss: 4.1424, dt: 899.18ms, fracRes: 0.2861, norm(attn): 0.4160, norm(output): 3.0938, norm(x): 2.6462, norm(y): 0.9959, norm:1.0586, tok/sec: 145767.72, flops:113.52, batch-reuse:1
@ 3183 train 4.2768 , allloss: 4.2769, dt: 899.08ms, fracRes: 0.2836, norm(attn): 0.4082, norm(output): 3.0781, norm(x): 2.6115, norm(y): 0.9956, norm:0.6958, tok/sec: 145784.96, flops:113.54, batch-reuse:1
@ 3184 train 4.2957 , allloss: 4.2958, dt: 926.45ms, fracRes: 0.2841, norm(attn): 0.4102, norm(output): 3.0625, norm(x): 2.5878, norm(y): 0.9956, norm:0.6723, tok/sec: 141478.05, flops:110.18, batch-reuse:1
@ 3185 train 4.3644 , allloss: 4.3645, dt: 926.95ms, fracRes: 0.2835, norm(attn): 0.4141, norm(output): 3.0469, norm(x): 2.5766, norm(y): 0.9956, norm:0.7811, tok/sec: 141400.76, flops:110.12, batch-reuse:1
@ 3186 train 4.2860 , allloss: 4.2861, dt: 907.52ms, fracRes: 0.2836, norm(attn): 0.4141, norm(output): 3.0781, norm(x): 2.5886, norm(y): 0.9958, norm:0.6572, tok/sec: 144428.69, flops:112.48, batch-reuse:1
@ 3187 train 4.2216 , allloss: 4.2219, dt: 904.41ms, fracRes: 0.2838, norm(attn): 0.4082, norm(output): 3.0938, norm(x): 2.5846, norm(y): 0.9957, norm:0.6547, tok/sec: 144924.83, flops:112.87, batch-reuse:1
@ 3188 train 4.1616 , allloss: 4.1617, dt: 891.01ms, fracRes: 0.2840, norm(attn): 0.4102, norm(output): 3.0469, norm(x): 2.5721, norm(y): 0.9956, norm:0.7282, tok/sec: 147104.81, flops:114.57, batch-reuse:1
@ 3189 train 4.1960 , allloss: 4.1961, dt: 892.80ms, fracRes: 0.2845, norm(attn): 0.4121, norm(output): 3.0469, norm(x): 2.5894, norm(y): 0.9957, norm:0.6324, tok/sec: 146810.53, flops:114.34, batch-reuse:1
@ 3190 train 4.2696 , allloss: 4.2697, dt: 890.57ms, fracRes: 0.2840, norm(attn): 0.4141, norm(output): 3.0938, norm(x): 2.6040, norm(y): 0.9958, norm:0.6378, tok/sec: 147178.25, flops:114.62, batch-reuse:1
@ 3191 train 4.1830 , allloss: 4.1831, dt: 895.60ms, fracRes: 0.2834, norm(attn): 0.4180, norm(output): 3.0938, norm(x): 2.6016, norm(y): 0.9957, norm:0.5545, tok/sec: 146351.43, flops:113.98, batch-reuse:1
@ 3192 train 4.2179 , allloss: 4.2180, dt: 883.71ms, fracRes: 0.2836, norm(attn): 0.4141, norm(output): 3.0938, norm(x): 2.6091, norm(y): 0.9957, norm:0.6338, tok/sec: 148320.13, flops:115.51, batch-reuse:1
@ 3193 train 4.2183 , allloss: 4.2185, dt: 900.71ms, fracRes: 0.2836, norm(attn): 0.4141, norm(output): 3.0625, norm(x): 2.6038, norm(y): 0.9956, norm:0.5463, tok/sec: 145520.74, flops:113.33, batch-reuse:1
@ 3194 train 4.2306 , allloss: 4.2307, dt: 902.37ms, fracRes: 0.2837, norm(attn): 0.4141, norm(output): 3.0312, norm(x): 2.5871, norm(y): 0.9956, norm:0.6383, tok/sec: 145252.64, flops:113.12, batch-reuse:1
@ 3195 train 4.2071 , allloss: 4.2073, dt: 904.23ms, fracRes: 0.2840, norm(attn): 0.4180, norm(output): 3.0938, norm(x): 2.6190, norm(y): 0.9957, norm:0.6160, tok/sec: 144954.37, flops:112.89, batch-reuse:1
@ 3196 train 4.2494 , allloss: 4.2495, dt: 892.17ms, fracRes: 0.2843, norm(attn): 0.4160, norm(output): 3.0938, norm(x): 2.6186, norm(y): 0.9958, norm:0.6865, tok/sec: 146913.79, flops:114.42, batch-reuse:1
@ 3197 train 4.2195 , allloss: 4.2195, dt: 910.41ms, fracRes: 0.2842, norm(attn): 0.4180, norm(output): 3.0781, norm(x): 2.6037, norm(y): 0.9956, norm:0.7014, tok/sec: 143970.80, flops:112.12, batch-reuse:1
@ 3198 train 4.1709 , allloss: 4.1711, dt: 903.13ms, fracRes: 0.2837, norm(attn): 0.4102, norm(output): 3.0312, norm(x): 2.5949, norm(y): 0.9955, norm:0.5656, tok/sec: 145131.12, flops:113.03, batch-reuse:1
@ 3199 train 4.1942 , allloss: 4.1943, dt: 901.41ms, fracRes: 0.2837, norm(attn): 0.4121, norm(output): 3.0938, norm(x): 2.6154, norm(y): 0.9954, norm:0.5910, tok/sec: 145407.31, flops:113.24, batch-reuse:1
@ 3200 train 4.2015 , allloss: 4.2017, dt: 896.46ms, fracRes: 0.2847, norm(attn): 0.4160, norm(output): 3.1250, norm(x): 2.6370, norm(y): 0.9956, norm:0.8093, tok/sec: 146211.19, flops:113.87, batch-reuse:1
@ 3201 train 4.2131 , allloss: 4.2131, dt: 884.54ms, fracRes: 0.2843, norm(attn): 0.4121, norm(output): 3.0938, norm(x): 2.6245, norm(y): 0.9955, norm:0.6444, tok/sec: 148180.92, flops:115.40, batch-reuse:1
@ 3202 train 4.2023 , allloss: 4.2024, dt: 903.81ms, fracRes: 0.2836, norm(attn): 0.4180, norm(output): 3.0781, norm(x): 2.6211, norm(y): 0.9955, norm:0.6308, tok/sec: 145022.39, flops:112.94, batch-reuse:1
@ 3203 train 4.2975 , allloss: 4.2976, dt: 897.71ms, fracRes: 0.2830, norm(attn): 0.4102, norm(output): 3.1094, norm(x): 2.6117, norm(y): 0.9954, norm:0.5870, tok/sec: 146006.93, flops:113.71, batch-reuse:1
@ 3204 train 4.1851 , allloss: 4.1853, dt: 915.48ms, fracRes: 0.2828, norm(attn): 0.4121, norm(output): 3.0781, norm(x): 2.5904, norm(y): 0.9955, norm:0.6994, tok/sec: 143173.74, flops:111.50, batch-reuse:1
@ 3205 train 4.2012 , allloss: 4.2014, dt: 904.95ms, fracRes: 0.2830, norm(attn): 0.4160, norm(output): 3.0938, norm(x): 2.6036, norm(y): 0.9953, norm:0.8826, tok/sec: 144838.54, flops:112.80, batch-reuse:1
@ 3206 train 4.1256 , allloss: 4.1257, dt: 890.57ms, fracRes: 0.2825, norm(attn): 0.4180, norm(output): 3.0625, norm(x): 2.5970, norm(y): 0.9952, norm:1.0099, tok/sec: 147176.91, flops:114.62, batch-reuse:1
@ 3207 train 4.2812 , allloss: 4.2814, dt: 893.76ms, fracRes: 0.2829, norm(attn): 0.4082, norm(output): 3.0625, norm(x): 2.6022, norm(y): 0.9950, norm:0.7708, tok/sec: 146652.51, flops:114.21, batch-reuse:1
@ 3208 train 4.2660 , allloss: 4.2661, dt: 895.32ms, fracRes: 0.2839, norm(attn): 0.4062, norm(output): 3.1250, norm(x): 2.6328, norm(y): 0.9951, norm:0.8166, tok/sec: 146396.01, flops:114.01, batch-reuse:1
@ 3209 train 4.2080 , allloss: 4.2081, dt: 890.04ms, fracRes: 0.2834, norm(attn): 0.4102, norm(output): 3.1562, norm(x): 2.6455, norm(y): 0.9950, norm:0.8149, tok/sec: 147265.78, flops:114.69, batch-reuse:1
@ 3210 train 4.1900 , allloss: 4.1901, dt: 895.14ms, fracRes: 0.2835, norm(attn): 0.4082, norm(output): 3.1250, norm(x): 2.6306, norm(y): 0.9951, norm:0.7430, tok/sec: 146426.70, flops:114.04, batch-reuse:1
@ 3211 train 4.2588 , allloss: 4.2588, dt: 898.81ms, fracRes: 0.2832, norm(attn): 0.4082, norm(output): 3.0781, norm(x): 2.6055, norm(y): 0.9950, norm:0.6998, tok/sec: 145827.92, flops:113.57, batch-reuse:1
@ 3212 train 4.4007 , allloss: 4.4008, dt: 903.06ms, fracRes: 0.2823, norm(attn): 0.4160, norm(output): 3.0781, norm(x): 2.6038, norm(y): 0.9950, norm:0.8326, tok/sec: 145141.54, flops:113.04, batch-reuse:1
@ 3213 train 4.2460 , allloss: 4.2461, dt: 891.57ms, fracRes: 0.2835, norm(attn): 0.4121, norm(output): 3.0938, norm(x): 2.6156, norm(y): 0.9951, norm:1.0103, tok/sec: 147012.64, flops:114.49, batch-reuse:1
@ 3214 train 4.3206 , allloss: 4.3208, dt: 896.26ms, fracRes: 0.2838, norm(attn): 0.4121, norm(output): 3.0625, norm(x): 2.6026, norm(y): 0.9951, norm:1.0158, tok/sec: 146243.23, flops:113.89, batch-reuse:1
@ 3215 train 4.2069 , allloss: 4.2070, dt: 912.90ms, fracRes: 0.2837, norm(attn): 0.4219, norm(output): 3.0469, norm(x): 2.6046, norm(y): 0.9953, norm:0.8773, tok/sec: 143577.20, flops:111.82, batch-reuse:1
@ 3216 train 4.2455 , allloss: 4.2456, dt: 911.14ms, fracRes: 0.2831, norm(attn): 0.4199, norm(output): 3.0781, norm(x): 2.6009, norm(y): 0.9953, norm:0.7258, tok/sec: 143855.18, flops:112.03, batch-reuse:1
@ 3217 train 4.2048 , allloss: 4.2049, dt: 903.49ms, fracRes: 0.2837, norm(attn): 0.4180, norm(output): 3.1719, norm(x): 2.6252, norm(y): 0.9954, norm:0.6823, tok/sec: 145072.52, flops:112.98, batch-reuse:1
@ 3218 train 4.2860 , allloss: 4.2861, dt: 906.45ms, fracRes: 0.2834, norm(attn): 0.4082, norm(output): 3.0938, norm(x): 2.6027, norm(y): 0.9952, norm:0.6917, tok/sec: 144599.60, flops:112.61, batch-reuse:1
@ 3219 train 4.3032 , allloss: 4.3033, dt: 900.82ms, fracRes: 0.2836, norm(attn): 0.4121, norm(output): 3.0938, norm(x): 2.6191, norm(y): 0.9952, norm:0.6911, tok/sec: 145503.02, flops:113.32, batch-reuse:1
@ 3220 train 4.2480 , allloss: 4.2481, dt: 905.55ms, fracRes: 0.2838, norm(attn): 0.4141, norm(output): 3.1719, norm(x): 2.6209, norm(y): 0.9952, norm:0.7215, tok/sec: 144742.40, flops:112.73, batch-reuse:1
@ 3221 train 4.1949 , allloss: 4.1951, dt: 892.14ms, fracRes: 0.2833, norm(attn): 0.4141, norm(output): 3.0938, norm(x): 2.6089, norm(y): 0.9951, norm:0.6164, tok/sec: 146918.27, flops:114.42, batch-reuse:1
@ 3222 train 4.2351 , allloss: 4.2352, dt: 897.42ms, fracRes: 0.2844, norm(attn): 0.4102, norm(output): 3.0938, norm(x): 2.6290, norm(y): 0.9952, norm:0.6824, tok/sec: 146054.37, flops:113.75, batch-reuse:1
@ 3223 train 4.2135 , allloss: 4.2136, dt: 898.90ms, fracRes: 0.2847, norm(attn): 0.4082, norm(output): 3.0938, norm(x): 2.6099, norm(y): 0.9951, norm:0.6180, tok/sec: 145814.35, flops:113.56, batch-reuse:1
@ 3224 train 4.2430 , allloss: 4.2431, dt: 895.18ms, fracRes: 0.2841, norm(attn): 0.4160, norm(output): 3.1562, norm(x): 2.6214, norm(y): 0.9952, norm:0.6427, tok/sec: 146419.52, flops:114.03, batch-reuse:1
@ 3225 train 4.2541 , allloss: 4.2543, dt: 901.48ms, fracRes: 0.2838, norm(attn): 0.4219, norm(output): 3.1406, norm(x): 2.6229, norm(y): 0.9950, norm:0.6262, tok/sec: 145395.85, flops:113.23, batch-reuse:1
@ 3226 train 4.1891 , allloss: 4.1892, dt: 906.00ms, fracRes: 0.2831, norm(attn): 0.4141, norm(output): 3.0781, norm(x): 2.6073, norm(y): 0.9949, norm:0.6157, tok/sec: 144670.98, flops:112.67, batch-reuse:1
@ 3227 train 4.1583 , allloss: 4.1584, dt: 891.38ms, fracRes: 0.2824, norm(attn): 0.4238, norm(output): 3.0781, norm(x): 2.6115, norm(y): 0.9948, norm:0.6982, tok/sec: 147044.41, flops:114.52, batch-reuse:1
@ 3228 train 4.0962 , allloss: 4.0965, dt: 920.92ms, fracRes: 0.2839, norm(attn): 0.4219, norm(output): 3.1094, norm(x): 2.6131, norm(y): 0.9950, norm:1.1836, tok/sec: 142327.51, flops:110.85, batch-reuse:1
@ 3229 train 4.2699 , allloss: 4.2700, dt: 926.65ms, fracRes: 0.2838, norm(attn): 0.4277, norm(output): 3.2500, norm(x): 2.6831, norm(y): 0.9949, norm:0.7852, tok/sec: 141447.10, flops:110.16, batch-reuse:1
@ 3230 train 4.3700 , allloss: 4.3701, dt: 927.69ms, fracRes: 0.2838, norm(attn): 0.4219, norm(output): 3.2656, norm(x): 2.7251, norm(y): 0.9950, norm:0.8608, tok/sec: 141288.65, flops:110.04, batch-reuse:1
@ 3231 train 4.1569 , allloss: 4.1570, dt: 935.76ms, fracRes: 0.2825, norm(attn): 0.4297, norm(output): 3.2656, norm(x): 2.7283, norm(y): 0.9949, norm:0.8913, tok/sec: 140070.49, flops:109.09, batch-reuse:1
@ 3232 train 4.1919 , allloss: 4.1920, dt: 933.61ms, fracRes: 0.2823, norm(attn): 0.4316, norm(output): 3.2500, norm(x): 2.7226, norm(y): 0.9949, norm:0.7558, tok/sec: 140392.35, flops:109.34, batch-reuse:1
@ 3233 train 4.2282 , allloss: 4.2283, dt: 936.13ms, fracRes: 0.2821, norm(attn): 0.4238, norm(output): 3.2500, norm(x): 2.7281, norm(y): 0.9950, norm:0.7141, tok/sec: 140014.88, flops:109.04, batch-reuse:1
@ 3234 train 4.3521 , allloss: 4.3523, dt: 924.12ms, fracRes: 0.2829, norm(attn): 0.4160, norm(output): 3.2500, norm(x): 2.7334, norm(y): 0.9949, norm:0.7443, tok/sec: 141834.58, flops:110.46, batch-reuse:1
@ 3235 train 4.2067 , allloss: 4.2070, dt: 897.93ms, fracRes: 0.2827, norm(attn): 0.4258, norm(output): 3.2500, norm(x): 2.7369, norm(y): 0.9949, norm:0.6788, tok/sec: 145971.58, flops:113.68, batch-reuse:1
@ 3236 train 4.3120 , allloss: 4.3121, dt: 908.24ms, fracRes: 0.2820, norm(attn): 0.4258, norm(output): 3.2500, norm(x): 2.7198, norm(y): 0.9949, norm:0.6746, tok/sec: 144314.15, flops:112.39, batch-reuse:1
@ 3237 train 4.1935 , allloss: 4.1937, dt: 905.84ms, fracRes: 0.2828, norm(attn): 0.4199, norm(output): 3.2500, norm(x): 2.7007, norm(y): 0.9949, norm:0.7366, tok/sec: 144696.46, flops:112.69, batch-reuse:1
@ 3238 train 4.2195 , allloss: 4.2196, dt: 903.87ms, fracRes: 0.2825, norm(attn): 0.4121, norm(output): 3.2344, norm(x): 2.6810, norm(y): 0.9946, norm:0.6612, tok/sec: 145012.52, flops:112.94, batch-reuse:1
@ 3239 train 4.2071 , allloss: 4.2072, dt: 906.39ms, fracRes: 0.2827, norm(attn): 0.4102, norm(output): 3.2344, norm(x): 2.6894, norm(y): 0.9947, norm:0.6893, tok/sec: 144608.46, flops:112.62, batch-reuse:1
@ 3240 train 4.2674 , allloss: 4.2675, dt: 914.03ms, fracRes: 0.2834, norm(attn): 0.4121, norm(output): 3.2500, norm(x): 2.7185, norm(y): 0.9949, norm:0.7809, tok/sec: 143400.69, flops:111.68, batch-reuse:1
@ 3241 train 4.2318 , allloss: 4.2323, dt: 899.43ms, fracRes: 0.2835, norm(attn): 0.4180, norm(output): 3.2344, norm(x): 2.7073, norm(y): 0.9950, norm:0.7128, tok/sec: 145728.66, flops:113.49, batch-reuse:1
@ 3242 train 4.2100 , allloss: 4.2102, dt: 897.26ms, fracRes: 0.2836, norm(attn): 0.4121, norm(output): 3.2344, norm(x): 2.7041, norm(y): 0.9949, norm:0.6142, tok/sec: 146080.41, flops:113.77, batch-reuse:1
@ 3243 train 4.1525 , allloss: 4.1531, dt: 922.57ms, fracRes: 0.2840, norm(attn): 0.4199, norm(output): 3.2500, norm(x): 2.7142, norm(y): 0.9949, norm:0.7255, tok/sec: 142073.24, flops:110.65, batch-reuse:1
@ 3244 train 4.1784 , allloss: 4.1785, dt: 912.07ms, fracRes: 0.2837, norm(attn): 0.4199, norm(output): 3.2344, norm(x): 2.7060, norm(y): 0.9948, norm:0.6655, tok/sec: 143707.66, flops:111.92, batch-reuse:1
@ 3245 train 4.1949 , allloss: 4.1950, dt: 896.94ms, fracRes: 0.2836, norm(attn): 0.4141, norm(output): 3.2344, norm(x): 2.6939, norm(y): 0.9948, norm:0.6798, tok/sec: 146132.72, flops:113.81, batch-reuse:1
@ 3246 train 4.1297 , allloss: 4.1298, dt: 898.77ms, fracRes: 0.2841, norm(attn): 0.4141, norm(output): 3.2344, norm(x): 2.7013, norm(y): 0.9949, norm:0.7511, tok/sec: 145834.62, flops:113.58, batch-reuse:1
@ 3247 train 4.1629 , allloss: 4.1630, dt: 896.36ms, fracRes: 0.2831, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7126, norm(y): 0.9948, norm:0.6406, tok/sec: 146226.31, flops:113.88, batch-reuse:1
@ 3248 train 4.2701 , allloss: 4.2702, dt: 884.99ms, fracRes: 0.2830, norm(attn): 0.4258, norm(output): 3.2500, norm(x): 2.7150, norm(y): 0.9947, norm:0.6135, tok/sec: 148105.03, flops:115.34, batch-reuse:1
@ 3249 train 4.1846 , allloss: 4.1846, dt: 886.41ms, fracRes: 0.2830, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7070, norm(y): 0.9947, norm:0.6396, tok/sec: 147867.93, flops:115.16, batch-reuse:1
@ 3250 train 4.1413 , allloss: 4.1414, dt: 903.91ms, fracRes: 0.2839, norm(attn): 0.4121, norm(output): 3.2344, norm(x): 2.7064, norm(y): 0.9947, norm:0.6085, tok/sec: 145004.91, flops:112.93, batch-reuse:1
@ 3251 train 4.1323 , allloss: 4.1325, dt: 909.41ms, fracRes: 0.2839, norm(attn): 0.4160, norm(output): 3.2344, norm(x): 2.6986, norm(y): 0.9948, norm:0.5552, tok/sec: 144129.10, flops:112.25, batch-reuse:1
@ 3252 train 4.1455 , allloss: 4.1456, dt: 887.04ms, fracRes: 0.2836, norm(attn): 0.4238, norm(output): 3.2344, norm(x): 2.6979, norm(y): 0.9948, norm:0.6269, tok/sec: 147763.09, flops:115.08, batch-reuse:1
@ 3253 train 4.2685 , allloss: 4.2686, dt: 894.70ms, fracRes: 0.2840, norm(attn): 0.4180, norm(output): 3.2344, norm(x): 2.7106, norm(y): 0.9948, norm:0.6633, tok/sec: 146497.56, flops:114.09, batch-reuse:1
@ 3254 train 4.0796 , allloss: 4.0797, dt: 879.88ms, fracRes: 0.2833, norm(attn): 0.4199, norm(output): 3.2344, norm(x): 2.7046, norm(y): 0.9947, norm:0.6037, tok/sec: 148965.09, flops:116.01, batch-reuse:1
@ 3255 train 4.1958 , allloss: 4.1958, dt: 906.29ms, fracRes: 0.2827, norm(attn): 0.4219, norm(output): 3.2500, norm(x): 2.7071, norm(y): 0.9946, norm:0.6417, tok/sec: 144624.29, flops:112.63, batch-reuse:1
@ 3256 train 4.2293 , allloss: 4.2294, dt: 909.75ms, fracRes: 0.2838, norm(attn): 0.4199, norm(output): 3.2344, norm(x): 2.7054, norm(y): 0.9946, norm:0.7024, tok/sec: 144075.20, flops:112.21, batch-reuse:1
@ 3257 train 4.1438 , allloss: 4.1438, dt: 898.49ms, fracRes: 0.2833, norm(attn): 0.4121, norm(output): 3.2344, norm(x): 2.7064, norm(y): 0.9945, norm:0.6600, tok/sec: 145879.51, flops:113.61, batch-reuse:1
@ 3258 train 4.1570 , allloss: 4.1571, dt: 915.98ms, fracRes: 0.2829, norm(attn): 0.4082, norm(output): 3.2500, norm(x): 2.7087, norm(y): 0.9944, norm:0.7106, tok/sec: 143094.92, flops:111.44, batch-reuse:1
@ 3259 train 4.1671 , allloss: 4.1672, dt: 920.03ms, fracRes: 0.2836, norm(attn): 0.4121, norm(output): 3.2500, norm(x): 2.7280, norm(y): 0.9946, norm:0.6387, tok/sec: 142464.31, flops:110.95, batch-reuse:1
@ 3260 train 4.1732 , allloss: 4.1733, dt: 916.87ms, fracRes: 0.2833, norm(attn): 0.4102, norm(output): 3.2344, norm(x): 2.7056, norm(y): 0.9944, norm:0.6117, tok/sec: 142955.98, flops:111.33, batch-reuse:1
@ 3261 train 4.1508 , allloss: 4.1509, dt: 897.62ms, fracRes: 0.2844, norm(attn): 0.4102, norm(output): 3.2344, norm(x): 2.7114, norm(y): 0.9945, norm:0.6267, tok/sec: 146021.79, flops:113.72, batch-reuse:1
@ 3262 train 4.1339 , allloss: 4.1340, dt: 883.24ms, fracRes: 0.2828, norm(attn): 0.4141, norm(output): 3.2500, norm(x): 2.7122, norm(y): 0.9946, norm:0.6591, tok/sec: 148398.80, flops:115.57, batch-reuse:1
@ 3263 train 4.1044 , allloss: 4.1045, dt: 908.57ms, fracRes: 0.2837, norm(attn): 0.4141, norm(output): 3.2500, norm(x): 2.7346, norm(y): 0.9947, norm:0.7664, tok/sec: 144262.38, flops:112.35, batch-reuse:1
@ 3264 train 4.2022 , allloss: 4.2023, dt: 906.83ms, fracRes: 0.2837, norm(attn): 0.4082, norm(output): 3.2500, norm(x): 2.7168, norm(y): 0.9945, norm:0.7046, tok/sec: 144538.47, flops:112.57, batch-reuse:1
@ 3265 train 4.1452 , allloss: 4.1452, dt: 899.20ms, fracRes: 0.2829, norm(attn): 0.4082, norm(output): 3.2344, norm(x): 2.6885, norm(y): 0.9942, norm:0.5627, tok/sec: 145765.63, flops:113.52, batch-reuse:1
@ 3266 train 4.0726 , allloss: 4.0727, dt: 894.98ms, fracRes: 0.2835, norm(attn): 0.4141, norm(output): 3.2344, norm(x): 2.7054, norm(y): 0.9943, norm:0.6511, tok/sec: 146452.91, flops:114.06, batch-reuse:1
@ 3267 train 4.1020 , allloss: 4.1021, dt: 907.55ms, fracRes: 0.2829, norm(attn): 0.4121, norm(output): 3.2344, norm(x): 2.6919, norm(y): 0.9943, norm:0.6711, tok/sec: 144423.68, flops:112.48, batch-reuse:1
@ 3268 train 4.1135 , allloss: 4.1136, dt: 902.13ms, fracRes: 0.2834, norm(attn): 0.4199, norm(output): 3.2500, norm(x): 2.7269, norm(y): 0.9944, norm:0.6179, tok/sec: 145292.18, flops:113.15, batch-reuse:1
@ 3269 train 4.1372 , allloss: 4.1375, dt: 884.77ms, fracRes: 0.2832, norm(attn): 0.4219, norm(output): 3.2500, norm(x): 2.7354, norm(y): 0.9944, norm:0.6143, tok/sec: 148142.51, flops:115.37, batch-reuse:1
@ 3270 train 4.1143 , allloss: 4.1144, dt: 891.67ms, fracRes: 0.2840, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7372, norm(y): 0.9944, norm:0.5938, tok/sec: 146995.77, flops:114.48, batch-reuse:1
@ 3271 train 4.1297 , allloss: 4.1298, dt: 901.80ms, fracRes: 0.2834, norm(attn): 0.4199, norm(output): 3.2344, norm(x): 2.7116, norm(y): 0.9942, norm:0.5984, tok/sec: 145345.34, flops:113.20, batch-reuse:1
@ 3272 train 4.1484 , allloss: 4.1486, dt: 884.92ms, fracRes: 0.2840, norm(attn): 0.4180, norm(output): 3.2344, norm(x): 2.7258, norm(y): 0.9943, norm:0.6082, tok/sec: 148117.04, flops:115.35, batch-reuse:1
@ 3273 train 4.1822 , allloss: 4.1824, dt: 918.60ms, fracRes: 0.2836, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7186, norm(y): 0.9943, norm:0.6568, tok/sec: 142685.94, flops:111.12, batch-reuse:1
@ 3274 train 4.1214 , allloss: 4.1214, dt: 913.47ms, fracRes: 0.2833, norm(attn): 0.4160, norm(output): 3.2500, norm(x): 2.7155, norm(y): 0.9942, norm:0.5705, tok/sec: 143488.61, flops:111.75, batch-reuse:1
@ 3275 train 4.1313 , allloss: 4.1314, dt: 904.08ms, fracRes: 0.2830, norm(attn): 0.4121, norm(output): 3.2344, norm(x): 2.7038, norm(y): 0.9940, norm:0.5142, tok/sec: 144978.83, flops:112.91, batch-reuse:1
@ 3276 train 4.1415 , allloss: 4.1416, dt: 888.06ms, fracRes: 0.2830, norm(attn): 0.4102, norm(output): 3.2500, norm(x): 2.7028, norm(y): 0.9940, norm:0.6008, tok/sec: 147593.22, flops:114.95, batch-reuse:1
@ 3277 train 4.1629 , allloss: 4.1631, dt: 905.04ms, fracRes: 0.2830, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7158, norm(y): 0.9940, norm:0.6612, tok/sec: 144824.50, flops:112.79, batch-reuse:1
@ 3278 train 4.1616 , allloss: 4.1617, dt: 907.17ms, fracRes: 0.2833, norm(attn): 0.4141, norm(output): 3.2500, norm(x): 2.7101, norm(y): 0.9941, norm:0.6359, tok/sec: 144484.90, flops:112.53, batch-reuse:1
@ 3279 train 4.1565 , allloss: 4.1566, dt: 902.70ms, fracRes: 0.2837, norm(attn): 0.4141, norm(output): 3.2344, norm(x): 2.6958, norm(y): 0.9942, norm:0.6668, tok/sec: 145200.00, flops:113.08, batch-reuse:1
@ 3280 train 4.1308 , allloss: 4.1309, dt: 904.01ms, fracRes: 0.2834, norm(attn): 0.4199, norm(output): 3.2344, norm(x): 2.7080, norm(y): 0.9942, norm:0.6710, tok/sec: 144988.89, flops:112.92, batch-reuse:1
@ 3281 train 4.1320 , allloss: 4.1322, dt: 906.56ms, fracRes: 0.2831, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7259, norm(y): 0.9941, norm:0.6319, tok/sec: 144581.53, flops:112.60, batch-reuse:1
@ 3282 train 4.1230 , allloss: 4.1231, dt: 904.11ms, fracRes: 0.2834, norm(attn): 0.4141, norm(output): 3.2656, norm(x): 2.7413, norm(y): 0.9940, norm:0.6163, tok/sec: 144973.40, flops:112.91, batch-reuse:1
@ 3283 train 4.1717 , allloss: 4.1717, dt: 905.51ms, fracRes: 0.2825, norm(attn): 0.4121, norm(output): 3.2344, norm(x): 2.7123, norm(y): 0.9937, norm:0.6538, tok/sec: 144749.87, flops:112.73, batch-reuse:1
@ 3284 train 4.1565 , allloss: 4.1566, dt: 896.07ms, fracRes: 0.2830, norm(attn): 0.4160, norm(output): 3.2500, norm(x): 2.7248, norm(y): 0.9938, norm:0.8115, tok/sec: 146274.52, flops:113.92, batch-reuse:1
@ 3285 train 4.1286 , allloss: 4.1287, dt: 906.00ms, fracRes: 0.2833, norm(attn): 0.4219, norm(output): 3.2656, norm(x): 2.7511, norm(y): 0.9940, norm:0.8587, tok/sec: 144670.49, flops:112.67, batch-reuse:1
@ 3286 train 4.1536 , allloss: 4.1536, dt: 903.74ms, fracRes: 0.2835, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7468, norm(y): 0.9940, norm:0.6418, tok/sec: 145032.57, flops:112.95, batch-reuse:1
@ 3287 train 4.0906 , allloss: 4.0907, dt: 881.76ms, fracRes: 0.2826, norm(attn): 0.4219, norm(output): 3.2500, norm(x): 2.7286, norm(y): 0.9940, norm:0.6206, tok/sec: 148647.49, flops:115.77, batch-reuse:1
@ 3288 train 4.2886 , allloss: 4.2887, dt: 904.66ms, fracRes: 0.2839, norm(attn): 0.4199, norm(output): 3.2344, norm(x): 2.7317, norm(y): 0.9940, norm:0.8540, tok/sec: 144885.41, flops:112.84, batch-reuse:1
@ 3289 train 4.2361 , allloss: 4.2365, dt: 903.76ms, fracRes: 0.2837, norm(attn): 0.4219, norm(output): 3.2500, norm(x): 2.7468, norm(y): 0.9939, norm:1.0722, tok/sec: 145029.81, flops:112.95, batch-reuse:1
@ 3290 train 4.2613 , allloss: 4.2614, dt: 887.42ms, fracRes: 0.2823, norm(attn): 0.4199, norm(output): 3.2344, norm(x): 2.7184, norm(y): 0.9938, norm:0.9583, tok/sec: 147699.53, flops:115.03, batch-reuse:1
@ 3291 train 4.0824 , allloss: 4.0825, dt: 880.94ms, fracRes: 0.2835, norm(attn): 0.4219, norm(output): 3.2344, norm(x): 2.7155, norm(y): 0.9939, norm:0.7871, tok/sec: 148787.17, flops:115.88, batch-reuse:1
@ 3292 train 4.2937 , allloss: 4.2938, dt: 901.62ms, fracRes: 0.2831, norm(attn): 0.4219, norm(output): 3.2344, norm(x): 2.7119, norm(y): 0.9939, norm:0.8138, tok/sec: 145374.05, flops:113.22, batch-reuse:1
@ 3293 train 4.2459 , allloss: 4.2460, dt: 895.85ms, fracRes: 0.2830, norm(attn): 0.4258, norm(output): 3.2344, norm(x): 2.7100, norm(y): 0.9940, norm:0.8130, tok/sec: 146310.53, flops:113.95, batch-reuse:1
@ 3294 train 4.1844 , allloss: 4.1847, dt: 899.69ms, fracRes: 0.2833, norm(attn): 0.4180, norm(output): 3.2344, norm(x): 2.7111, norm(y): 0.9940, norm:0.6859, tok/sec: 145685.25, flops:113.46, batch-reuse:1
@ 3295 train 4.0420 , allloss: 4.0422, dt: 890.21ms, fracRes: 0.2825, norm(attn): 0.4180, norm(output): 3.2344, norm(x): 2.6916, norm(y): 0.9938, norm:0.6815, tok/sec: 147237.58, flops:114.67, batch-reuse:1
@ 3296 train 4.0655 , allloss: 4.0659, dt: 905.57ms, fracRes: 0.2833, norm(attn): 0.4160, norm(output): 3.2344, norm(x): 2.7139, norm(y): 0.9938, norm:0.6600, tok/sec: 144739.01, flops:112.72, batch-reuse:1
@ 3297 train 3.9854 , allloss: 3.9856, dt: 908.14ms, fracRes: 0.2830, norm(attn): 0.4160, norm(output): 3.2344, norm(x): 2.7130, norm(y): 0.9937, norm:0.6887, tok/sec: 144330.29, flops:112.40, batch-reuse:1
@ 3298 train 4.0684 , allloss: 4.0685, dt: 909.36ms, fracRes: 0.2833, norm(attn): 0.4180, norm(output): 3.2188, norm(x): 2.6986, norm(y): 0.9937, norm:0.5848, tok/sec: 144136.66, flops:112.25, batch-reuse:1
@ 3299 train 3.9856 , allloss: 3.9858, dt: 911.06ms, fracRes: 0.2828, norm(attn): 0.4180, norm(output): 3.2344, norm(x): 2.6920, norm(y): 0.9936, norm:0.6747, tok/sec: 143867.64, flops:112.04, batch-reuse:1
@ 3300 train 4.0472 , allloss: 4.0474, dt: 910.01ms, fracRes: 0.2829, norm(attn): 0.4219, norm(output): 3.2188, norm(x): 2.6824, norm(y): 0.9937, norm:0.5676, tok/sec: 144034.17, flops:112.17, batch-reuse:1
@ 3301 train 4.0738 , allloss: 4.0740, dt: 890.93ms, fracRes: 0.2825, norm(attn): 0.4219, norm(output): 3.2344, norm(x): 2.6893, norm(y): 0.9938, norm:0.6674, tok/sec: 147117.95, flops:114.58, batch-reuse:1
@ 3302 train 4.0289 , allloss: 4.0290, dt: 895.38ms, fracRes: 0.2832, norm(attn): 0.4219, norm(output): 3.2344, norm(x): 2.7093, norm(y): 0.9938, norm:0.6403, tok/sec: 146387.04, flops:114.01, batch-reuse:1
@ 3303 train 3.9610 , allloss: 3.9612, dt: 909.48ms, fracRes: 0.2827, norm(attn): 0.4160, norm(output): 3.2031, norm(x): 2.6881, norm(y): 0.9935, norm:0.5953, tok/sec: 144118.14, flops:112.24, batch-reuse:1
@ 3304 train 4.0804 , allloss: 4.0806, dt: 892.20ms, fracRes: 0.2829, norm(attn): 0.4219, norm(output): 3.2031, norm(x): 2.6850, norm(y): 0.9936, norm:0.6643, tok/sec: 146909.08, flops:114.41, batch-reuse:1
@ 3305 train 4.1350 , allloss: 4.1351, dt: 913.51ms, fracRes: 0.2826, norm(attn): 0.4258, norm(output): 3.2344, norm(x): 2.6933, norm(y): 0.9936, norm:0.6338, tok/sec: 143482.21, flops:111.74, batch-reuse:1
@ 3306 train 4.0124 , allloss: 4.0126, dt: 920.29ms, fracRes: 0.2831, norm(attn): 0.4297, norm(output): 3.2500, norm(x): 2.7203, norm(y): 0.9937, norm:0.7056, tok/sec: 142424.89, flops:110.92, batch-reuse:1
@ 3307 train 3.9979 , allloss: 3.9984, dt: 903.34ms, fracRes: 0.2829, norm(attn): 0.4141, norm(output): 3.2344, norm(x): 2.7155, norm(y): 0.9936, norm:0.6318, tok/sec: 145097.83, flops:113.00, batch-reuse:1
@ 3308 train 4.0874 , allloss: 4.0875, dt: 922.66ms, fracRes: 0.2829, norm(attn): 0.4121, norm(output): 3.2500, norm(x): 2.7215, norm(y): 0.9935, norm:0.7594, tok/sec: 142059.51, flops:110.64, batch-reuse:1
@ 3309 train 4.0302 , allloss: 4.0302, dt: 912.36ms, fracRes: 0.2823, norm(attn): 0.4258, norm(output): 3.2500, norm(x): 2.7247, norm(y): 0.9935, norm:0.7120, tok/sec: 143662.97, flops:111.89, batch-reuse:1
@ 3310 train 4.0828 , allloss: 4.0830, dt: 905.02ms, fracRes: 0.2831, norm(attn): 0.4258, norm(output): 3.2500, norm(x): 2.7275, norm(y): 0.9935, norm:0.7418, tok/sec: 144827.97, flops:112.79, batch-reuse:1
@ 3311 train 4.0936 , allloss: 4.0936, dt: 899.46ms, fracRes: 0.2841, norm(attn): 0.4199, norm(output): 3.2500, norm(x): 2.7352, norm(y): 0.9935, norm:0.9032, tok/sec: 145723.29, flops:113.49, batch-reuse:1
@ 3312 train 4.0138 , allloss: 4.0138, dt: 910.58ms, fracRes: 0.2842, norm(attn): 0.4219, norm(output): 3.2500, norm(x): 2.7590, norm(y): 0.9936, norm:0.7095, tok/sec: 143944.04, flops:112.10, batch-reuse:1
@ 3313 train 4.0838 , allloss: 4.0840, dt: 912.46ms, fracRes: 0.2826, norm(attn): 0.4258, norm(output): 3.2500, norm(x): 2.7409, norm(y): 0.9935, norm:0.6650, tok/sec: 143647.06, flops:111.87, batch-reuse:1
@ 3314 train 4.0263 , allloss: 4.0264, dt: 894.32ms, fracRes: 0.2832, norm(attn): 0.4258, norm(output): 3.2500, norm(x): 2.7278, norm(y): 0.9935, norm:0.6772, tok/sec: 146560.20, flops:114.14, batch-reuse:1
@ 3315 train 4.1713 , allloss: 4.1717, dt: 900.46ms, fracRes: 0.2830, norm(attn): 0.4180, norm(output): 3.2344, norm(x): 2.7255, norm(y): 0.9934, norm:0.6171, tok/sec: 145561.35, flops:113.36, batch-reuse:1
@ 3316 train 4.0752 , allloss: 4.0753, dt: 898.97ms, fracRes: 0.2831, norm(attn): 0.4297, norm(output): 3.2500, norm(x): 2.7507, norm(y): 0.9934, norm:0.6176, tok/sec: 145802.36, flops:113.55, batch-reuse:1
@ 3317 train 4.0767 , allloss: 4.0768, dt: 909.94ms, fracRes: 0.2827, norm(attn): 0.4219, norm(output): 3.2500, norm(x): 2.7437, norm(y): 0.9933, norm:0.5901, tok/sec: 144045.30, flops:112.18, batch-reuse:1
@ 3318 train 3.8619 , allloss: 3.8620, dt: 886.24ms, fracRes: 0.2830, norm(attn): 0.4219, norm(output): 3.2656, norm(x): 2.7749, norm(y): 0.9934, norm:0.6502, tok/sec: 147897.01, flops:115.18, batch-reuse:1
@ 3319 train 4.1347 , allloss: 4.1348, dt: 891.92ms, fracRes: 0.2824, norm(attn): 0.4277, norm(output): 3.2656, norm(x): 2.7550, norm(y): 0.9933, norm:0.6071, tok/sec: 146954.71, flops:114.45, batch-reuse:1
@ 3320 train 4.1523 , allloss: 4.1524, dt: 907.67ms, fracRes: 0.2831, norm(attn): 0.4238, norm(output): 3.2656, norm(x): 2.7587, norm(y): 0.9932, norm:0.6010, tok/sec: 144404.86, flops:112.46, batch-reuse:1
@ 3321 train 4.0902 , allloss: 4.0903, dt: 898.41ms, fracRes: 0.2822, norm(attn): 0.4199, norm(output): 3.2500, norm(x): 2.7316, norm(y): 0.9929, norm:0.6438, tok/sec: 145893.36, flops:113.62, batch-reuse:1
@ 3322 train 3.9384 , allloss: 3.9386, dt: 893.34ms, fracRes: 0.2826, norm(attn): 0.4160, norm(output): 3.2500, norm(x): 2.7291, norm(y): 0.9929, norm:0.6521, tok/sec: 146721.74, flops:114.27, batch-reuse:1
@ 3323 train 3.9132 , allloss: 3.9133, dt: 908.30ms, fracRes: 0.2824, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7219, norm(y): 0.9930, norm:0.6183, tok/sec: 144304.57, flops:112.38, batch-reuse:1
@ 3324 train 4.0342 , allloss: 4.0343, dt: 911.53ms, fracRes: 0.2824, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7251, norm(y): 0.9930, norm:0.6205, tok/sec: 143792.99, flops:111.99, batch-reuse:1
@ 3325 train 4.0953 , allloss: 4.0955, dt: 891.94ms, fracRes: 0.2825, norm(attn): 0.4199, norm(output): 3.2500, norm(x): 2.7242, norm(y): 0.9930, norm:0.5557, tok/sec: 146952.16, flops:114.45, batch-reuse:1
@ 3326 train 4.0283 , allloss: 4.0284, dt: 906.30ms, fracRes: 0.2832, norm(attn): 0.4219, norm(output): 3.2500, norm(x): 2.7334, norm(y): 0.9931, norm:0.7272, tok/sec: 144622.76, flops:112.63, batch-reuse:1
@ 3327 train 4.0116 , allloss: 4.0118, dt: 903.17ms, fracRes: 0.2832, norm(attn): 0.4199, norm(output): 3.2500, norm(x): 2.7419, norm(y): 0.9933, norm:0.6516, tok/sec: 145123.69, flops:113.02, batch-reuse:1
@ 3328 train 3.9925 , allloss: 3.9927, dt: 908.74ms, fracRes: 0.2829, norm(attn): 0.4238, norm(output): 3.2500, norm(x): 2.7461, norm(y): 0.9934, norm:0.6085, tok/sec: 144234.41, flops:112.33, batch-reuse:1
@ 3329 train 3.9782 , allloss: 3.9784, dt: 889.40ms, fracRes: 0.2829, norm(attn): 0.4336, norm(output): 3.2656, norm(x): 2.7579, norm(y): 0.9934, norm:0.5811, tok/sec: 147371.70, flops:114.77, batch-reuse:1
@ 3330 train 3.9642 , allloss: 3.9643, dt: 879.91ms, fracRes: 0.2830, norm(attn): 0.4297, norm(output): 3.2500, norm(x): 2.7471, norm(y): 0.9933, norm:0.5957, tok/sec: 148961.42, flops:116.01, batch-reuse:1
@ 3331 train 3.7638 , allloss: 3.7639, dt: 900.64ms, fracRes: 0.2836, norm(attn): 0.4238, norm(output): 3.2344, norm(x): 2.7471, norm(y): 0.9933, norm:0.5242, tok/sec: 145531.87, flops:113.34, batch-reuse:1
@ 3332 train 4.0602 , allloss: 4.0603, dt: 901.06ms, fracRes: 0.2829, norm(attn): 0.4316, norm(output): 3.2656, norm(x): 2.7509, norm(y): 0.9934, norm:0.6024, tok/sec: 145464.71, flops:113.29, batch-reuse:1
@ 3333 train 3.9776 , allloss: 3.9777, dt: 890.07ms, fracRes: 0.2825, norm(attn): 0.4375, norm(output): 3.2656, norm(x): 2.7674, norm(y): 0.9935, norm:0.6391, tok/sec: 147260.77, flops:114.69, batch-reuse:1
@ 3334 train 3.9848 , allloss: 3.9849, dt: 903.93ms, fracRes: 0.2839, norm(attn): 0.4297, norm(output): 3.2656, norm(x): 2.7724, norm(y): 0.9935, norm:0.6252, tok/sec: 145002.23, flops:112.93, batch-reuse:1
@ 3335 train 3.9579 , allloss: 3.9580, dt: 903.92ms, fracRes: 0.2837, norm(attn): 0.4219, norm(output): 3.2656, norm(x): 2.7709, norm(y): 0.9932, norm:0.6273, tok/sec: 145003.23, flops:112.93, batch-reuse:1
@ 3336 train 4.0862 , allloss: 4.0863, dt: 908.00ms, fracRes: 0.2835, norm(attn): 0.4180, norm(output): 3.2500, norm(x): 2.7736, norm(y): 0.9931, norm:0.6030, tok/sec: 144353.07, flops:112.42, batch-reuse:1
@ 3337 train 3.9842 , allloss: 3.9844, dt: 899.40ms, fracRes: 0.2835, norm(attn): 0.4219, norm(output): 3.3125, norm(x): 2.7905, norm(y): 0.9931, norm:0.6256, tok/sec: 145733.33, flops:113.50, batch-reuse:1
@ 3338 train 3.9535 , allloss: 3.9535, dt: 903.92ms, fracRes: 0.2837, norm(attn): 0.4258, norm(output): 3.3125, norm(x): 2.7838, norm(y): 0.9932, norm:0.5510, tok/sec: 145003.19, flops:112.93, batch-reuse:1
@ 3339 train 4.0234 , allloss: 4.0235, dt: 913.35ms, fracRes: 0.2828, norm(attn): 0.4219, norm(output): 3.2500, norm(x): 2.7539, norm(y): 0.9931, norm:0.5275, tok/sec: 143506.74, flops:111.76, batch-reuse:1
@ 3340 train 3.9448 , allloss: 3.9449, dt: 907.21ms, fracRes: 0.2828, norm(attn): 0.4160, norm(output): 3.2656, norm(x): 2.7629, norm(y): 0.9930, norm:0.5563, tok/sec: 144478.30, flops:112.52, batch-reuse:1
@ 3341 train 4.3012 , allloss: 4.3012, dt: 902.98ms, fracRes: 0.2821, norm(attn): 0.4160, norm(output): 3.2656, norm(x): 2.7640, norm(y): 0.9930, norm:0.6701, tok/sec: 145155.49, flops:113.05, batch-reuse:1
@ 3342 train 4.2034 , allloss: 4.2035, dt: 898.50ms, fracRes: 0.2824, norm(attn): 0.4238, norm(output): 3.2500, norm(x): 2.7728, norm(y): 0.9930, norm:1.3237, tok/sec: 145878.73, flops:113.61, batch-reuse:1
@ 3343 train 4.1883 , allloss: 4.1885, dt: 890.73ms, fracRes: 0.2832, norm(attn): 0.4316, norm(output): 3.2656, norm(x): 2.7864, norm(y): 0.9931, norm:1.0176, tok/sec: 147150.40, flops:114.60, batch-reuse:1
@ 3344 train 4.2716 , allloss: 4.2717, dt: 903.82ms, fracRes: 0.2832, norm(attn): 0.4258, norm(output): 3.2500, norm(x): 2.7622, norm(y): 0.9931, norm:0.9691, tok/sec: 145020.13, flops:112.94, batch-reuse:1
@ 3345 train 4.1915 , allloss: 4.1917, dt: 910.15ms, fracRes: 0.2827, norm(attn): 0.4160, norm(output): 3.2344, norm(x): 2.7441, norm(y): 0.9928, norm:0.8600, tok/sec: 144011.76, flops:112.16, batch-reuse:1
@ 3346 train 4.1608 , allloss: 4.1609, dt: 902.23ms, fracRes: 0.2830, norm(attn): 0.4180, norm(output): 3.2656, norm(x): 2.7744, norm(y): 0.9931, norm:0.7310, tok/sec: 145275.71, flops:113.14, batch-reuse:1
@ 3347 train 4.1857 , allloss: 4.1858, dt: 907.58ms, fracRes: 0.2836, norm(attn): 0.4180, norm(output): 3.2656, norm(x): 2.7885, norm(y): 0.9931, norm:0.7877, tok/sec: 144418.71, flops:112.47, batch-reuse:1
@ 3348 train 4.1440 , allloss: 4.1441, dt: 921.01ms, fracRes: 0.2833, norm(attn): 0.4238, norm(output): 3.2656, norm(x): 2.7742, norm(y): 0.9930, norm:0.7491, tok/sec: 142313.18, flops:110.83, batch-reuse:1
@ 3349 train 4.1185 , allloss: 4.1186, dt: 911.75ms, fracRes: 0.2839, norm(attn): 0.4141, norm(output): 3.2656, norm(x): 2.7723, norm(y): 0.9928, norm:0.8446, tok/sec: 143759.26, flops:111.96, batch-reuse:1
@ 3350 train 4.1543 , allloss: 4.1544, dt: 909.10ms, fracRes: 0.2836, norm(attn): 0.4219, norm(output): 3.2656, norm(x): 2.7661, norm(y): 0.9930, norm:0.8273, tok/sec: 144178.28, flops:112.29, batch-reuse:1
@ 3351 train 4.2808 , allloss: 4.2809, dt: 912.40ms, fracRes: 0.2831, norm(attn): 0.4219, norm(output): 3.2656, norm(x): 2.7764, norm(y): 0.9929, norm:0.8625, tok/sec: 143656.78, flops:111.88, batch-reuse:1
@ 3352 train 4.2199 , allloss: 4.2200, dt: 905.82ms, fracRes: 0.2821, norm(attn): 0.4375, norm(output): 3.2656, norm(x): 2.7702, norm(y): 0.9931, norm:0.6827, tok/sec: 144699.62, flops:112.69, batch-reuse:1
@ 3353 train 4.2591 , allloss: 4.2593, dt: 907.22ms, fracRes: 0.2828, norm(attn): 0.4355, norm(output): 3.2656, norm(x): 2.7681, norm(y): 0.9930, norm:0.8260, tok/sec: 144476.13, flops:112.52, batch-reuse:1
@ 3354 train 4.2060 , allloss: 4.2063, dt: 905.96ms, fracRes: 0.2834, norm(attn): 0.4297, norm(output): 3.2500, norm(x): 2.7739, norm(y): 0.9927, norm:0.7302, tok/sec: 144677.87, flops:112.68, batch-reuse:1
@ 3355 train 4.2755 , allloss: 4.2757, dt: 909.57ms, fracRes: 0.2831, norm(attn): 0.4297, norm(output): 3.2656, norm(x): 2.7834, norm(y): 0.9929, norm:0.6321, tok/sec: 144103.22, flops:112.23, batch-reuse:1
@ 3356 train 4.1890 , allloss: 4.1891, dt: 908.21ms, fracRes: 0.2832, norm(attn): 0.4297, norm(output): 3.2656, norm(x): 2.7936, norm(y): 0.9931, norm:0.5720, tok/sec: 144318.43, flops:112.40, batch-reuse:1
@ 3357 train 4.1906 , allloss: 4.1908, dt: 888.62ms, fracRes: 0.2832, norm(attn): 0.4297, norm(output): 3.2656, norm(x): 2.7776, norm(y): 0.9930, norm:0.6084, tok/sec: 147500.68, flops:114.87, batch-reuse:1
@ 3358 train 4.2434 , allloss: 4.2435, dt: 885.57ms, fracRes: 0.2834, norm(attn): 0.4336, norm(output): 3.2969, norm(x): 2.7903, norm(y): 0.9930, norm:0.6910, tok/sec: 148008.58, flops:115.27, batch-reuse:1
@ 3359 train 4.1645 , allloss: 4.1646, dt: 901.33ms, fracRes: 0.2831, norm(attn): 0.4316, norm(output): 3.2812, norm(x): 2.7915, norm(y): 0.9929, norm:0.5938, tok/sec: 145420.04, flops:113.25, batch-reuse:1
@ 3360 train 4.1944 , allloss: 4.1945, dt: 905.34ms, fracRes: 0.2826, norm(attn): 0.4316, norm(output): 3.2656, norm(x): 2.7787, norm(y): 0.9928, norm:0.5890, tok/sec: 144777.17, flops:112.75, batch-reuse:1
@ 3361 train 4.2382 , allloss: 4.2382, dt: 901.65ms, fracRes: 0.2831, norm(attn): 0.4258, norm(output): 3.2656, norm(x): 2.7827, norm(y): 0.9929, norm:0.5223, tok/sec: 145369.25, flops:113.21, batch-reuse:1
@ 3362 train 4.1048 , allloss: 4.1049, dt: 904.36ms, fracRes: 0.2829, norm(attn): 0.4297, norm(output): 3.2812, norm(x): 2.7976, norm(y): 0.9929, norm:0.5341, tok/sec: 144933.39, flops:112.87, batch-reuse:1
@ 3363 train 4.1922 , allloss: 4.1922, dt: 902.03ms, fracRes: 0.2833, norm(attn): 0.4277, norm(output): 3.2656, norm(x): 2.7919, norm(y): 0.9928, norm:0.5420, tok/sec: 145308.46, flops:113.17, batch-reuse:1
@ 3364 train 4.1959 , allloss: 4.1960, dt: 894.26ms, fracRes: 0.2838, norm(attn): 0.4238, norm(output): 3.2656, norm(x): 2.8082, norm(y): 0.9929, norm:0.6273, tok/sec: 146569.77, flops:114.15, batch-reuse:1
@ 3365 train 4.1515 , allloss: 4.1516, dt: 890.08ms, fracRes: 0.2835, norm(attn): 0.4219, norm(output): 3.2969, norm(x): 2.8099, norm(y): 0.9928, norm:0.6161, tok/sec: 147258.76, flops:114.69, batch-reuse:1
@ 3366 train 4.3157 , allloss: 4.3160, dt: 893.62ms, fracRes: 0.2840, norm(attn): 0.4219, norm(output): 3.3281, norm(x): 2.8191, norm(y): 0.9928, norm:0.6513, tok/sec: 146675.04, flops:114.23, batch-reuse:1
@ 3367 train 4.2004 , allloss: 4.2006, dt: 907.97ms, fracRes: 0.2833, norm(attn): 0.4180, norm(output): 3.2969, norm(x): 2.8002, norm(y): 0.9926, norm:0.6395, tok/sec: 144356.86, flops:112.43, batch-reuse:1
@ 3368 train 4.2761 , allloss: 4.2764, dt: 907.54ms, fracRes: 0.2829, norm(attn): 0.4180, norm(output): 3.2656, norm(x): 2.7807, norm(y): 0.9926, norm:0.6209, tok/sec: 144424.93, flops:112.48, batch-reuse:1
@ 3369 train 4.2033 , allloss: 4.2034, dt: 908.55ms, fracRes: 0.2829, norm(attn): 0.4297, norm(output): 3.2969, norm(x): 2.7859, norm(y): 0.9927, norm:0.6907, tok/sec: 144265.41, flops:112.35, batch-reuse:1
@ 3370 train 4.1668 , allloss: 4.1673, dt: 892.95ms, fracRes: 0.2835, norm(attn): 0.4258, norm(output): 3.2812, norm(x): 2.7936, norm(y): 0.9927, norm:0.6286, tok/sec: 146785.60, flops:114.32, batch-reuse:1
@ 3371 train 4.1546 , allloss: 4.1547, dt: 901.46ms, fracRes: 0.2828, norm(attn): 0.4199, norm(output): 3.2656, norm(x): 2.7766, norm(y): 0.9925, norm:0.5216, tok/sec: 145399.12, flops:113.24, batch-reuse:1
@ 3372 train 4.1752 , allloss: 4.1753, dt: 903.15ms, fracRes: 0.2832, norm(attn): 0.4219, norm(output): 3.2812, norm(x): 2.8020, norm(y): 0.9927, norm:0.6797, tok/sec: 145128.13, flops:113.03, batch-reuse:1
@ 3373 train 4.2153 , allloss: 4.2154, dt: 895.18ms, fracRes: 0.2828, norm(attn): 0.4277, norm(output): 3.2969, norm(x): 2.8079, norm(y): 0.9925, norm:0.6219, tok/sec: 146419.29, flops:114.03, batch-reuse:1
@ 3374 train 4.1363 , allloss: 4.1365, dt: 892.05ms, fracRes: 0.2830, norm(attn): 0.4297, norm(output): 3.2812, norm(x): 2.7977, norm(y): 0.9926, norm:0.5444, tok/sec: 146932.68, flops:114.43, batch-reuse:1
@ 3375 train 4.0938 , allloss: 4.0939, dt: 891.36ms, fracRes: 0.2830, norm(attn): 0.4297, norm(output): 3.2656, norm(x): 2.7931, norm(y): 0.9926, norm:0.5587, tok/sec: 147046.89, flops:114.52, batch-reuse:1
@ 3376 train 4.3404 , allloss: 4.3405, dt: 901.84ms, fracRes: 0.2834, norm(attn): 0.4277, norm(output): 3.3125, norm(x): 2.8234, norm(y): 0.9926, norm:0.5783, tok/sec: 145337.73, flops:113.19, batch-reuse:1
@ 3377 train 4.2410 , allloss: 4.2413, dt: 905.00ms, fracRes: 0.2865, norm(attn): 0.4297, norm(output): 3.3594, norm(x): 2.9118, norm(y): 0.9930, norm:1.3072, tok/sec: 144830.49, flops:112.79, batch-reuse:1
@ 3378 train 4.3019 , allloss: 4.3020, dt: 912.68ms, fracRes: 0.2834, norm(attn): 0.4336, norm(output): 3.3750, norm(x): 2.8425, norm(y): 0.9927, norm:1.0210, tok/sec: 143612.83, flops:111.85, batch-reuse:1
@ 3379 train 4.1536 , allloss: 4.1537, dt: 894.12ms, fracRes: 0.2831, norm(attn): 0.4355, norm(output): 3.3438, norm(x): 2.8242, norm(y): 0.9927, norm:0.9539, tok/sec: 146594.04, flops:114.17, batch-reuse:1
@ 3380 train 4.2040 , allloss: 4.2049, dt: 906.45ms, fracRes: 0.2832, norm(attn): 0.4355, norm(output): 3.2812, norm(x): 2.8046, norm(y): 0.9926, norm:0.6997, tok/sec: 144598.53, flops:112.61, batch-reuse:1
@ 3381 train 4.1900 , allloss: 4.1901, dt: 899.98ms, fracRes: 0.2831, norm(attn): 0.4336, norm(output): 3.2500, norm(x): 2.7833, norm(y): 0.9926, norm:0.7525, tok/sec: 145638.78, flops:113.42, batch-reuse:1
@ 3382 train 4.2341 , allloss: 4.2342, dt: 894.26ms, fracRes: 0.2826, norm(attn): 0.4316, norm(output): 3.2500, norm(x): 2.7904, norm(y): 0.9925, norm:0.6806, tok/sec: 146570.09, flops:114.15, batch-reuse:1
@ 3383 train 4.2346 , allloss: 4.2347, dt: 905.02ms, fracRes: 0.2828, norm(attn): 0.4316, norm(output): 3.2656, norm(x): 2.8134, norm(y): 0.9925, norm:0.6299, tok/sec: 144827.74, flops:112.79, batch-reuse:1
@ 3384 train 4.1821 , allloss: 4.1821, dt: 917.18ms, fracRes: 0.2828, norm(attn): 0.4316, norm(output): 3.3750, norm(x): 2.8508, norm(y): 0.9924, norm:0.6664, tok/sec: 142907.04, flops:111.30, batch-reuse:1
@ 3385 train 4.1362 , allloss: 4.1364, dt: 912.20ms, fracRes: 0.2834, norm(attn): 0.4297, norm(output): 3.3438, norm(x): 2.8444, norm(y): 0.9924, norm:0.6456, tok/sec: 143688.54, flops:111.91, batch-reuse:1
@ 3386 train 4.3913 , allloss: 4.3914, dt: 916.23ms, fracRes: 0.2833, norm(attn): 0.4277, norm(output): 3.3906, norm(x): 2.8642, norm(y): 0.9925, norm:0.7552, tok/sec: 143055.53, flops:111.41, batch-reuse:1
@ 3387 train 4.2199 , allloss: 4.2201, dt: 912.87ms, fracRes: 0.2833, norm(attn): 0.4316, norm(output): 3.4688, norm(x): 2.8698, norm(y): 0.9924, norm:0.8233, tok/sec: 143582.94, flops:111.82, batch-reuse:1
@ 3388 train 4.0961 , allloss: 4.0963, dt: 910.29ms, fracRes: 0.2831, norm(attn): 0.4297, norm(output): 3.4375, norm(x): 2.8440, norm(y): 0.9923, norm:0.7173, tok/sec: 143989.39, flops:112.14, batch-reuse:1
@ 3389 train 4.1392 , allloss: 4.1393, dt: 910.50ms, fracRes: 0.2834, norm(attn): 0.4141, norm(output): 3.3125, norm(x): 2.8043, norm(y): 0.9922, norm:0.6002, tok/sec: 143955.76, flops:112.11, batch-reuse:1
@ 3390 train 4.3024 , allloss: 4.3025, dt: 898.88ms, fracRes: 0.2830, norm(attn): 0.4160, norm(output): 3.2656, norm(x): 2.7778, norm(y): 0.9923, norm:0.7245, tok/sec: 145816.71, flops:113.56, batch-reuse:1
@ 3391 train 4.2613 , allloss: 4.2614, dt: 901.74ms, fracRes: 0.2835, norm(attn): 0.4258, norm(output): 3.3438, norm(x): 2.8080, norm(y): 0.9926, norm:0.6671, tok/sec: 145354.72, flops:113.20, batch-reuse:1
@ 3392 train 4.1579 , allloss: 4.1579, dt: 891.51ms, fracRes: 0.2827, norm(attn): 0.4297, norm(output): 3.3438, norm(x): 2.8052, norm(y): 0.9926, norm:0.6120, tok/sec: 147021.99, flops:114.50, batch-reuse:1
@ 3393 train 4.3104 , allloss: 4.3104, dt: 905.68ms, fracRes: 0.2823, norm(attn): 0.4219, norm(output): 3.3125, norm(x): 2.8062, norm(y): 0.9925, norm:0.6447, tok/sec: 144721.67, flops:112.71, batch-reuse:1
@ 3394 train 4.2484 , allloss: 4.2485, dt: 908.33ms, fracRes: 0.2825, norm(attn): 0.4121, norm(output): 3.2812, norm(x): 2.7934, norm(y): 0.9923, norm:0.6158, tok/sec: 144299.72, flops:112.38, batch-reuse:1
@ 3395 train 4.1889 , allloss: 4.1891, dt: 896.00ms, fracRes: 0.2823, norm(attn): 0.4180, norm(output): 3.3125, norm(x): 2.8135, norm(y): 0.9923, norm:0.6101, tok/sec: 146285.07, flops:113.93, batch-reuse:1
@ 3396 train 4.2053 , allloss: 4.2053, dt: 904.99ms, fracRes: 0.2824, norm(attn): 0.4258, norm(output): 3.3438, norm(x): 2.8295, norm(y): 0.9922, norm:0.6171, tok/sec: 144833.08, flops:112.80, batch-reuse:1
@ 3397 train 4.1764 , allloss: 4.1765, dt: 893.72ms, fracRes: 0.2826, norm(attn): 0.4316, norm(output): 3.4375, norm(x): 2.8547, norm(y): 0.9924, norm:0.5965, tok/sec: 146658.53, flops:114.22, batch-reuse:1
@ 3398 train 4.2502 , allloss: 4.2504, dt: 887.13ms, fracRes: 0.2827, norm(attn): 0.4238, norm(output): 3.4062, norm(x): 2.8469, norm(y): 0.9924, norm:0.6128, tok/sec: 147748.83, flops:115.07, batch-reuse:1
@ 3399 train 4.1804 , allloss: 4.1805, dt: 888.19ms, fracRes: 0.2818, norm(attn): 0.4316, norm(output): 3.4375, norm(x): 2.8439, norm(y): 0.9923, norm:0.5910, tok/sec: 147571.31, flops:114.93, batch-reuse:1
@ 3400 train 4.2101 , allloss: 4.2102, dt: 901.37ms, fracRes: 0.2819, norm(attn): 0.4355, norm(output): 3.4375, norm(x): 2.8549, norm(y): 0.9924, norm:0.6098, tok/sec: 145414.73, flops:113.25, batch-reuse:1
@ 3401 train 4.1991 , allloss: 4.1993, dt: 902.85ms, fracRes: 0.2822, norm(attn): 0.4297, norm(output): 3.4375, norm(x): 2.8493, norm(y): 0.9923, norm:0.5978, tok/sec: 145175.92, flops:113.06, batch-reuse:1
@ 3402 train 4.2104 , allloss: 4.2105, dt: 903.63ms, fracRes: 0.2830, norm(attn): 0.4316, norm(output): 3.4531, norm(x): 2.8720, norm(y): 0.9925, norm:0.6752, tok/sec: 145051.32, flops:112.97, batch-reuse:1
@ 3403 train 4.1709 , allloss: 4.1710, dt: 891.37ms, fracRes: 0.2826, norm(attn): 0.4355, norm(output): 3.4375, norm(x): 2.8578, norm(y): 0.9925, norm:0.5841, tok/sec: 147045.43, flops:114.52, batch-reuse:1
@ 3404 train 4.1310 , allloss: 4.1311, dt: 902.14ms, fracRes: 0.2824, norm(attn): 0.4336, norm(output): 3.4375, norm(x): 2.8584, norm(y): 0.9923, norm:0.5694, tok/sec: 145290.56, flops:113.15, batch-reuse:1
@ 3405 train 4.1495 , allloss: 4.1496, dt: 901.28ms, fracRes: 0.2829, norm(attn): 0.4297, norm(output): 3.4375, norm(x): 2.8607, norm(y): 0.9923, norm:0.5789, tok/sec: 145429.47, flops:113.26, batch-reuse:1
@ 3406 train 4.1383 , allloss: 4.1384, dt: 885.82ms, fracRes: 0.2825, norm(attn): 0.4297, norm(output): 3.4062, norm(x): 2.8509, norm(y): 0.9922, norm:0.6161, tok/sec: 147966.83, flops:115.24, batch-reuse:1
@ 3407 train 4.1722 , allloss: 4.1723, dt: 896.03ms, fracRes: 0.2822, norm(attn): 0.4258, norm(output): 3.3594, norm(x): 2.8387, norm(y): 0.9923, norm:0.8622, tok/sec: 146280.16, flops:113.92, batch-reuse:1
@ 3408 train 4.1632 , allloss: 4.1633, dt: 897.90ms, fracRes: 0.2825, norm(attn): 0.4297, norm(output): 3.3438, norm(x): 2.8439, norm(y): 0.9924, norm:0.6822, tok/sec: 145976.85, flops:113.69, batch-reuse:1
@ 3409 train 4.2696 , allloss: 4.2696, dt: 905.78ms, fracRes: 0.2834, norm(attn): 0.4277, norm(output): 3.4375, norm(x): 2.8890, norm(y): 0.9923, norm:0.6620, tok/sec: 144706.82, flops:112.70, batch-reuse:1
@ 3410 train 4.2467 , allloss: 4.2469, dt: 903.40ms, fracRes: 0.2838, norm(attn): 0.4297, norm(output): 3.4688, norm(x): 2.9161, norm(y): 0.9924, norm:0.5954, tok/sec: 145087.30, flops:112.99, batch-reuse:1
@ 3411 train 4.2248 , allloss: 4.2249, dt: 887.95ms, fracRes: 0.2834, norm(attn): 0.4297, norm(output): 3.4688, norm(x): 2.9073, norm(y): 0.9923, norm:0.7010, tok/sec: 147611.13, flops:114.96, batch-reuse:1
@ 3412 train 4.2144 , allloss: 4.2146, dt: 895.87ms, fracRes: 0.2835, norm(attn): 0.4297, norm(output): 3.4375, norm(x): 2.9115, norm(y): 0.9923, norm:0.6828, tok/sec: 146307.10, flops:113.94, batch-reuse:1
@ 3413 train 4.2799 , allloss: 4.2800, dt: 902.63ms, fracRes: 0.2832, norm(attn): 0.4336, norm(output): 3.4844, norm(x): 2.9107, norm(y): 0.9923, norm:0.7015, tok/sec: 145211.89, flops:113.09, batch-reuse:1
@ 3414 train 4.1950 , allloss: 4.1950, dt: 894.01ms, fracRes: 0.2818, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9012, norm(y): 0.9923, norm:0.6928, tok/sec: 146612.11, flops:114.18, batch-reuse:1
@ 3415 train 4.1571 , allloss: 4.1572, dt: 892.51ms, fracRes: 0.2825, norm(attn): 0.4336, norm(output): 3.4844, norm(x): 2.8954, norm(y): 0.9924, norm:0.7544, tok/sec: 146857.83, flops:114.37, batch-reuse:1
@ 3416 train 4.2119 , allloss: 4.2164, dt: 889.90ms, fracRes: 0.2832, norm(attn): 0.4277, norm(output): 3.4688, norm(x): 2.8964, norm(y): 0.9922, norm:0.7071, tok/sec: 147287.95, flops:114.71, batch-reuse:1
@ 3417 train 4.1522 , allloss: 4.1542, dt: 896.03ms, fracRes: 0.2832, norm(attn): 0.4258, norm(output): 3.4531, norm(x): 2.8912, norm(y): 0.9921, norm:0.6306, tok/sec: 146280.01, flops:113.92, batch-reuse:1
@ 3418 train 4.1045 , allloss: 4.1046, dt: 903.12ms, fracRes: 0.2827, norm(attn): 0.4297, norm(output): 3.4531, norm(x): 2.8976, norm(y): 0.9921, norm:0.6500, tok/sec: 145132.23, flops:113.03, batch-reuse:1
@ 3419 train 4.1634 , allloss: 4.1636, dt: 898.20ms, fracRes: 0.2829, norm(attn): 0.4297, norm(output): 3.4844, norm(x): 2.9100, norm(y): 0.9921, norm:0.6440, tok/sec: 145928.18, flops:113.65, batch-reuse:1
@ 3420 train 4.1822 , allloss: 4.1823, dt: 894.81ms, fracRes: 0.2820, norm(attn): 0.4336, norm(output): 3.4375, norm(x): 2.8859, norm(y): 0.9920, norm:0.6520, tok/sec: 146480.97, flops:114.08, batch-reuse:1
@ 3421 train 4.2166 , allloss: 4.2167, dt: 903.41ms, fracRes: 0.2821, norm(attn): 0.4297, norm(output): 3.4375, norm(x): 2.8831, norm(y): 0.9919, norm:0.6061, tok/sec: 145085.27, flops:112.99, batch-reuse:1
@ 3422 train 4.1863 , allloss: 4.1865, dt: 919.99ms, fracRes: 0.2830, norm(attn): 0.4297, norm(output): 3.4375, norm(x): 2.8808, norm(y): 0.9918, norm:0.6021, tok/sec: 142471.44, flops:110.96, batch-reuse:1
@ 3423 train 4.1562 , allloss: 4.1564, dt: 905.10ms, fracRes: 0.2824, norm(attn): 0.4316, norm(output): 3.4844, norm(x): 2.8963, norm(y): 0.9919, norm:0.6584, tok/sec: 144815.45, flops:112.78, batch-reuse:1
@ 3424 train 4.1997 , allloss: 4.2007, dt: 918.14ms, fracRes: 0.2826, norm(attn): 0.4336, norm(output): 3.4688, norm(x): 2.8814, norm(y): 0.9919, norm:0.6843, tok/sec: 142758.20, flops:111.18, batch-reuse:1
@ 3425 train 4.2053 , allloss: 4.2055, dt: 896.34ms, fracRes: 0.2829, norm(attn): 0.4238, norm(output): 3.4375, norm(x): 2.8682, norm(y): 0.9918, norm:0.6144, tok/sec: 146229.50, flops:113.88, batch-reuse:1
@ 3426 train 4.1537 , allloss: 4.1538, dt: 894.84ms, fracRes: 0.2822, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.8875, norm(y): 0.9919, norm:0.6285, tok/sec: 146474.88, flops:114.08, batch-reuse:1
@ 3427 train 4.1996 , allloss: 4.1998, dt: 925.40ms, fracRes: 0.2824, norm(attn): 0.4375, norm(output): 3.4844, norm(x): 2.8888, norm(y): 0.9921, norm:0.6983, tok/sec: 141637.48, flops:110.31, batch-reuse:1
@ 3428 train 4.1098 , allloss: 4.1100, dt: 909.74ms, fracRes: 0.2824, norm(attn): 0.4297, norm(output): 3.4375, norm(x): 2.8717, norm(y): 0.9920, norm:0.6659, tok/sec: 144076.15, flops:112.21, batch-reuse:1
@ 3429 train 4.1148 , allloss: 4.1151, dt: 924.59ms, fracRes: 0.2820, norm(attn): 0.4297, norm(output): 3.4375, norm(x): 2.8731, norm(y): 0.9919, norm:0.8076, tok/sec: 141762.57, flops:110.41, batch-reuse:1
@ 3430 train 4.3906 , allloss: 4.3907, dt: 920.03ms, fracRes: 0.2810, norm(attn): 0.4336, norm(output): 3.4844, norm(x): 2.8941, norm(y): 0.9917, norm:0.7028, tok/sec: 142464.72, flops:110.95, batch-reuse:1
@ 3431 train 4.2789 , allloss: 4.2791, dt: 925.58ms, fracRes: 0.2845, norm(attn): 0.4316, norm(output): 3.5000, norm(x): 2.9316, norm(y): 0.9921, norm:1.2003, tok/sec: 141610.08, flops:110.29, batch-reuse:1
@ 3432 train 4.0836 , allloss: 4.0839, dt: 907.85ms, fracRes: 0.2820, norm(attn): 0.4375, norm(output): 3.4844, norm(x): 2.9258, norm(y): 0.9920, norm:1.2303, tok/sec: 144376.12, flops:112.44, batch-reuse:1
@ 3433 train 4.2258 , allloss: 4.2259, dt: 923.23ms, fracRes: 0.2824, norm(attn): 0.4316, norm(output): 3.4844, norm(x): 2.9317, norm(y): 0.9919, norm:1.2037, tok/sec: 141971.87, flops:110.57, batch-reuse:1
@ 3434 train 4.1765 , allloss: 4.1768, dt: 915.83ms, fracRes: 0.2832, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9412, norm(y): 0.9919, norm:0.8078, tok/sec: 143118.65, flops:111.46, batch-reuse:1
@ 3435 train 4.1429 , allloss: 4.1431, dt: 913.79ms, fracRes: 0.2830, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9175, norm(y): 0.9919, norm:0.9851, tok/sec: 143437.47, flops:111.71, batch-reuse:1
@ 3436 train 4.1792 , allloss: 4.1795, dt: 917.36ms, fracRes: 0.2829, norm(attn): 0.4316, norm(output): 3.4375, norm(x): 2.8762, norm(y): 0.9917, norm:0.6864, tok/sec: 142879.37, flops:111.27, batch-reuse:1
@ 3437 train 4.1444 , allloss: 4.1446, dt: 914.04ms, fracRes: 0.2827, norm(attn): 0.4355, norm(output): 3.4375, norm(x): 2.8735, norm(y): 0.9919, norm:0.6280, tok/sec: 143398.08, flops:111.68, batch-reuse:1
@ 3438 train 4.2243 , allloss: 4.2244, dt: 901.84ms, fracRes: 0.2824, norm(attn): 0.4355, norm(output): 3.4688, norm(x): 2.8829, norm(y): 0.9920, norm:0.6541, tok/sec: 145338.73, flops:113.19, batch-reuse:1
@ 3439 train 4.0924 , allloss: 4.0926, dt: 904.56ms, fracRes: 0.2828, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.8912, norm(y): 0.9920, norm:0.6581, tok/sec: 144901.15, flops:112.85, batch-reuse:1
@ 3440 train 4.0542 , allloss: 4.0544, dt: 911.94ms, fracRes: 0.2828, norm(attn): 0.4297, norm(output): 3.4688, norm(x): 2.8789, norm(y): 0.9919, norm:0.5635, tok/sec: 143728.66, flops:111.94, batch-reuse:1
@ 3441 train 4.1987 , allloss: 4.1989, dt: 923.43ms, fracRes: 0.2829, norm(attn): 0.4297, norm(output): 3.4688, norm(x): 2.8827, norm(y): 0.9917, norm:0.6446, tok/sec: 141939.98, flops:110.54, batch-reuse:1
@ 3442 train 4.1570 , allloss: 4.1572, dt: 893.87ms, fracRes: 0.2829, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9191, norm(y): 0.9918, norm:0.6036, tok/sec: 146635.02, flops:114.20, batch-reuse:1
@ 3443 train 4.1240 , allloss: 4.1242, dt: 889.97ms, fracRes: 0.2828, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9391, norm(y): 0.9918, norm:0.6454, tok/sec: 147277.42, flops:114.70, batch-reuse:1
@ 3444 train 4.0978 , allloss: 4.0980, dt: 896.02ms, fracRes: 0.2825, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9193, norm(y): 0.9917, norm:0.5892, tok/sec: 146282.93, flops:113.93, batch-reuse:1
@ 3445 train 4.1202 , allloss: 4.1207, dt: 906.76ms, fracRes: 0.2824, norm(attn): 0.4336, norm(output): 3.4688, norm(x): 2.9115, norm(y): 0.9917, norm:0.5859, tok/sec: 144549.68, flops:112.58, batch-reuse:1
@ 3446 train 4.1200 , allloss: 4.1202, dt: 899.81ms, fracRes: 0.2835, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9262, norm(y): 0.9919, norm:0.5948, tok/sec: 145666.14, flops:113.45, batch-reuse:1
@ 3447 train 4.1679 , allloss: 4.1680, dt: 902.23ms, fracRes: 0.2826, norm(attn): 0.4316, norm(output): 3.5000, norm(x): 2.9334, norm(y): 0.9917, norm:0.6788, tok/sec: 145274.94, flops:113.14, batch-reuse:1
@ 3448 train 4.1060 , allloss: 4.1062, dt: 896.75ms, fracRes: 0.2830, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9365, norm(y): 0.9918, norm:0.6817, tok/sec: 146162.94, flops:113.83, batch-reuse:1
@ 3449 train 4.1521 , allloss: 4.1523, dt: 898.12ms, fracRes: 0.2826, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9263, norm(y): 0.9918, norm:0.6092, tok/sec: 145939.80, flops:113.66, batch-reuse:1
@ 3450 train 4.0917 , allloss: 4.0918, dt: 885.07ms, fracRes: 0.2823, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9116, norm(y): 0.9918, norm:0.5995, tok/sec: 148091.99, flops:115.33, batch-reuse:1
@ 3451 train 4.1876 , allloss: 4.1878, dt: 900.50ms, fracRes: 0.2824, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9178, norm(y): 0.9919, norm:0.6799, tok/sec: 145555.38, flops:113.36, batch-reuse:1
@ 3452 train 4.1505 , allloss: 4.1506, dt: 897.31ms, fracRes: 0.2825, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9171, norm(y): 0.9919, norm:0.6662, tok/sec: 146071.91, flops:113.76, batch-reuse:1
@ 3453 train 4.1483 , allloss: 4.1488, dt: 891.46ms, fracRes: 0.2835, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9368, norm(y): 0.9921, norm:0.7617, tok/sec: 147031.47, flops:114.51, batch-reuse:1
@ 3454 train 4.1883 , allloss: 4.1884, dt: 885.90ms, fracRes: 0.2813, norm(attn): 0.4336, norm(output): 3.3750, norm(x): 2.8660, norm(y): 0.9915, norm:0.7644, tok/sec: 147953.73, flops:115.23, batch-reuse:1
@ 3455 train 4.1512 , allloss: 4.1513, dt: 877.13ms, fracRes: 0.2832, norm(attn): 0.4336, norm(output): 3.4375, norm(x): 2.8929, norm(y): 0.9919, norm:0.9832, tok/sec: 149432.24, flops:116.38, batch-reuse:1
@ 3456 train 4.0927 , allloss: 4.0929, dt: 900.25ms, fracRes: 0.2824, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9206, norm(y): 0.9920, norm:0.8480, tok/sec: 145595.74, flops:113.39, batch-reuse:1
@ 3457 train 4.1069 , allloss: 4.1070, dt: 900.60ms, fracRes: 0.2834, norm(attn): 0.4375, norm(output): 3.5156, norm(x): 2.9592, norm(y): 0.9924, norm:0.9392, tok/sec: 145539.00, flops:113.35, batch-reuse:1
@ 3458 train 4.0573 , allloss: 4.0574, dt: 890.35ms, fracRes: 0.2837, norm(attn): 0.4375, norm(output): 3.5000, norm(x): 2.9281, norm(y): 0.9923, norm:0.7490, tok/sec: 147214.47, flops:114.65, batch-reuse:1
@ 3459 train 4.1210 , allloss: 4.1211, dt: 897.37ms, fracRes: 0.2836, norm(attn): 0.4336, norm(output): 3.4375, norm(x): 2.8843, norm(y): 0.9920, norm:0.6632, tok/sec: 146062.95, flops:113.75, batch-reuse:1
@ 3460 train 4.2150 , allloss: 4.2152, dt: 914.16ms, fracRes: 0.2832, norm(attn): 0.4336, norm(output): 3.4375, norm(x): 2.8910, norm(y): 0.9919, norm:0.6478, tok/sec: 143379.97, flops:111.66, batch-reuse:1
@ 3461 train 4.1079 , allloss: 4.1084, dt: 890.06ms, fracRes: 0.2825, norm(attn): 0.4375, norm(output): 3.4688, norm(x): 2.8858, norm(y): 0.9919, norm:0.6177, tok/sec: 147261.87, flops:114.69, batch-reuse:1
@ 3462 train 4.1240 , allloss: 4.1241, dt: 909.68ms, fracRes: 0.2832, norm(attn): 0.4375, norm(output): 3.5000, norm(x): 2.9096, norm(y): 0.9922, norm:0.6247, tok/sec: 144085.13, flops:112.21, batch-reuse:1
@ 3463 train 4.1437 , allloss: 4.1439, dt: 884.95ms, fracRes: 0.2831, norm(attn): 0.4336, norm(output): 3.4844, norm(x): 2.9088, norm(y): 0.9920, norm:0.5918, tok/sec: 148111.90, flops:115.35, batch-reuse:1
@ 3464 train 3.9759 , allloss: 3.9760, dt: 894.12ms, fracRes: 0.2828, norm(attn): 0.4336, norm(output): 3.4844, norm(x): 2.8963, norm(y): 0.9919, norm:0.6057, tok/sec: 146593.77, flops:114.17, batch-reuse:1
@ 3465 train 4.0864 , allloss: 4.0865, dt: 889.58ms, fracRes: 0.2832, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9154, norm(y): 0.9919, norm:0.6502, tok/sec: 147341.40, flops:114.75, batch-reuse:1
@ 3466 train 4.1152 , allloss: 4.1154, dt: 910.43ms, fracRes: 0.2826, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9041, norm(y): 0.9919, norm:0.5996, tok/sec: 143966.43, flops:112.12, batch-reuse:1
@ 3467 train 4.1391 , allloss: 4.1508, dt: 906.24ms, fracRes: 0.2832, norm(attn): 0.4336, norm(output): 3.4844, norm(x): 2.9138, norm(y): 0.9920, norm:0.6248, tok/sec: 144633.38, flops:112.64, batch-reuse:1
@ 3468 train 4.0877 , allloss: 4.0879, dt: 908.19ms, fracRes: 0.2819, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9239, norm(y): 0.9918, norm:0.5544, tok/sec: 144322.26, flops:112.40, batch-reuse:1
@ 3469 train 4.1259 , allloss: 4.1260, dt: 912.03ms, fracRes: 0.2828, norm(attn): 0.4336, norm(output): 3.5000, norm(x): 2.9414, norm(y): 0.9917, norm:0.6018, tok/sec: 143713.82, flops:111.92, batch-reuse:1
@ 3470 train 4.2082 , allloss: 4.2084, dt: 902.58ms, fracRes: 0.2827, norm(attn): 0.4336, norm(output): 3.5156, norm(x): 2.9589, norm(y): 0.9916, norm:0.6776, tok/sec: 145219.06, flops:113.10, batch-reuse:1
@ 3471 train 4.1246 , allloss: 4.1248, dt: 899.12ms, fracRes: 0.2837, norm(attn): 0.4375, norm(output): 3.5156, norm(x): 2.9738, norm(y): 0.9919, norm:0.6175, tok/sec: 145777.42, flops:113.53, batch-reuse:1
@ 3472 train 4.1379 , allloss: 4.1380, dt: 901.80ms, fracRes: 0.2826, norm(attn): 0.4375, norm(output): 3.4844, norm(x): 2.9405, norm(y): 0.9919, norm:0.6459, tok/sec: 145344.65, flops:113.19, batch-reuse:1
@ 3473 train 4.0477 , allloss: 4.0478, dt: 916.98ms, fracRes: 0.2827, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9391, norm(y): 0.9918, norm:0.6047, tok/sec: 142939.40, flops:111.32, batch-reuse:1
@ 3474 train 4.0937 , allloss: 4.0938, dt: 910.54ms, fracRes: 0.2831, norm(attn): 0.4336, norm(output): 3.5000, norm(x): 2.9660, norm(y): 0.9918, norm:0.6195, tok/sec: 143949.77, flops:112.11, batch-reuse:1
@ 3475 train 3.9612 , allloss: 3.9614, dt: 908.15ms, fracRes: 0.2825, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9436, norm(y): 0.9916, norm:0.6258, tok/sec: 144328.74, flops:112.40, batch-reuse:1
@ 3476 train 4.0468 , allloss: 4.0469, dt: 894.84ms, fracRes: 0.2829, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9572, norm(y): 0.9917, norm:0.6239, tok/sec: 146475.11, flops:114.08, batch-reuse:1
@ 3477 train 3.9780 , allloss: 3.9781, dt: 909.24ms, fracRes: 0.2826, norm(attn): 0.4375, norm(output): 3.5312, norm(x): 2.9807, norm(y): 0.9920, norm:0.5940, tok/sec: 144155.18, flops:112.27, batch-reuse:1
@ 3478 train 4.0503 , allloss: 4.0504, dt: 903.73ms, fracRes: 0.2829, norm(attn): 0.4375, norm(output): 3.5312, norm(x): 2.9747, norm(y): 0.9920, norm:0.6260, tok/sec: 145034.71, flops:112.95, batch-reuse:1
@ 3479 train 3.9344 , allloss: 3.9345, dt: 925.14ms, fracRes: 0.2829, norm(attn): 0.4336, norm(output): 3.5000, norm(x): 2.9415, norm(y): 0.9921, norm:0.5696, tok/sec: 141678.69, flops:110.34, batch-reuse:1
@ 3480 train 4.0734 , allloss: 4.0735, dt: 905.90ms, fracRes: 0.2823, norm(attn): 0.4297, norm(output): 3.5000, norm(x): 2.9311, norm(y): 0.9919, norm:0.6090, tok/sec: 144686.48, flops:112.68, batch-reuse:1
@ 3481 train 4.0734 , allloss: 4.0735, dt: 899.18ms, fracRes: 0.2835, norm(attn): 0.4316, norm(output): 3.5156, norm(x): 2.9609, norm(y): 0.9920, norm:0.6270, tok/sec: 145767.99, flops:113.52, batch-reuse:1
@ 3482 train 3.9112 , allloss: 3.9115, dt: 909.24ms, fracRes: 0.2834, norm(attn): 0.4375, norm(output): 3.5469, norm(x): 2.9937, norm(y): 0.9923, norm:0.6598, tok/sec: 144156.20, flops:112.27, batch-reuse:1
@ 3483 train 4.0380 , allloss: 4.0382, dt: 910.17ms, fracRes: 0.2825, norm(attn): 0.4316, norm(output): 3.5000, norm(x): 2.9486, norm(y): 0.9920, norm:0.6075, tok/sec: 144007.50, flops:112.15, batch-reuse:1
@ 3484 train 4.0196 , allloss: 4.0198, dt: 895.13ms, fracRes: 0.2827, norm(attn): 0.4316, norm(output): 3.5000, norm(x): 2.9500, norm(y): 0.9920, norm:0.6269, tok/sec: 146427.71, flops:114.04, batch-reuse:1
@ 3485 train 3.9935 , allloss: 3.9936, dt: 887.42ms, fracRes: 0.2833, norm(attn): 0.4355, norm(output): 3.5312, norm(x): 2.9596, norm(y): 0.9921, norm:0.6715, tok/sec: 147699.69, flops:115.03, batch-reuse:1
@ 3486 train 4.0200 , allloss: 4.0201, dt: 912.31ms, fracRes: 0.2828, norm(attn): 0.4375, norm(output): 3.5156, norm(x): 2.9683, norm(y): 0.9921, norm:0.6687, tok/sec: 143670.14, flops:111.89, batch-reuse:1
@ 3487 train 3.9383 , allloss: 3.9384, dt: 909.85ms, fracRes: 0.2825, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9418, norm(y): 0.9920, norm:0.7263, tok/sec: 144058.21, flops:112.19, batch-reuse:1
@ 3488 train 4.0572 , allloss: 4.0573, dt: 909.79ms, fracRes: 0.2825, norm(attn): 0.4336, norm(output): 3.5156, norm(x): 2.9459, norm(y): 0.9920, norm:0.7139, tok/sec: 144069.08, flops:112.20, batch-reuse:1
@ 3489 train 4.0269 , allloss: 4.0270, dt: 907.72ms, fracRes: 0.2829, norm(attn): 0.4355, norm(output): 3.5312, norm(x): 2.9790, norm(y): 0.9921, norm:0.5686, tok/sec: 144396.25, flops:112.46, batch-reuse:1
@ 3490 train 3.9593 , allloss: 3.9594, dt: 911.97ms, fracRes: 0.2824, norm(attn): 0.4355, norm(output): 3.5156, norm(x): 2.9770, norm(y): 0.9921, norm:0.6879, tok/sec: 143723.89, flops:111.93, batch-reuse:1
@ 3491 train 3.9654 , allloss: 3.9656, dt: 911.00ms, fracRes: 0.2823, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9538, norm(y): 0.9920, norm:0.5580, tok/sec: 143877.24, flops:112.05, batch-reuse:1
@ 3492 train 4.0552 , allloss: 4.0553, dt: 908.04ms, fracRes: 0.2821, norm(attn): 0.4355, norm(output): 3.5156, norm(x): 2.9497, norm(y): 0.9919, norm:0.5832, tok/sec: 144346.44, flops:112.42, batch-reuse:1
@ 3493 train 4.0080 , allloss: 4.0081, dt: 911.84ms, fracRes: 0.2828, norm(attn): 0.4355, norm(output): 3.5156, norm(x): 2.9607, norm(y): 0.9919, norm:0.5661, tok/sec: 143744.60, flops:111.95, batch-reuse:1
@ 3494 train 3.9995 , allloss: 3.9996, dt: 897.24ms, fracRes: 0.2822, norm(attn): 0.4375, norm(output): 3.5156, norm(x): 2.9573, norm(y): 0.9919, norm:0.6335, tok/sec: 146083.64, flops:113.77, batch-reuse:1
@ 3495 train 4.0189 , allloss: 4.0190, dt: 903.08ms, fracRes: 0.2827, norm(attn): 0.4355, norm(output): 3.5000, norm(x): 2.9373, norm(y): 0.9919, norm:0.5739, tok/sec: 145138.40, flops:113.03, batch-reuse:1
@ 3496 train 4.0377 , allloss: 4.0377, dt: 896.23ms, fracRes: 0.2819, norm(attn): 0.4375, norm(output): 3.5000, norm(x): 2.9246, norm(y): 0.9918, norm:0.6331, tok/sec: 146248.72, flops:113.90, batch-reuse:1
@ 3497 train 3.9783 , allloss: 3.9784, dt: 901.14ms, fracRes: 0.2821, norm(attn): 0.4375, norm(output): 3.4844, norm(x): 2.9218, norm(y): 0.9920, norm:0.5700, tok/sec: 145451.71, flops:113.28, batch-reuse:1
@ 3498 train 3.9785 , allloss: 3.9786, dt: 900.80ms, fracRes: 0.2827, norm(attn): 0.4336, norm(output): 3.5000, norm(x): 2.9380, norm(y): 0.9919, norm:0.5926, tok/sec: 145506.83, flops:113.32, batch-reuse:1
@ 3499 train 4.0253 , allloss: 4.0253, dt: 909.18ms, fracRes: 0.2826, norm(attn): 0.4355, norm(output): 3.4844, norm(x): 2.9306, norm(y): 0.9917, norm:0.6760, tok/sec: 144164.40, flops:112.28, batch-reuse:1
@ 3500 train 3.9146 , allloss: 3.9147, dt: 895.48ms, fracRes: 0.2835, norm(attn): 0.4375, norm(output): 3.5312, norm(x): 2.9675, norm(y): 0.9920, norm:0.7118, tok/sec: 146370.87, flops:113.99, batch-reuse:1
@ 3501 train 3.8792 , allloss: 3.8794, dt: 923.60ms, fracRes: 0.2827, norm(attn): 0.4375, norm(output): 3.5156, norm(x): 2.9532, norm(y): 0.9917, norm:0.7605, tok/sec: 141913.96, flops:110.52, batch-reuse:1
@ 3502 train 3.9465 , allloss: 3.9466, dt: 920.40ms, fracRes: 0.2830, norm(attn): 0.4316, norm(output): 3.5312, norm(x): 2.9714, norm(y): 0.9917, norm:0.7044, tok/sec: 142407.66, flops:110.91, batch-reuse:1
@ 3503 train 4.0000 , allloss: 4.0002, dt: 905.38ms, fracRes: 0.2817, norm(attn): 0.4355, norm(output): 3.5156, norm(x): 2.9391, norm(y): 0.9916, norm:0.6299, tok/sec: 144770.65, flops:112.75, batch-reuse:1
@ 3504 train 3.9439 , allloss: 3.9442, dt: 894.43ms, fracRes: 0.2825, norm(attn): 0.4395, norm(output): 3.5156, norm(x): 2.9740, norm(y): 0.9919, norm:0.6309, tok/sec: 146542.97, flops:114.13, batch-reuse:1
@ 3505 train 3.9224 , allloss: 3.9226, dt: 911.03ms, fracRes: 0.2827, norm(attn): 0.4414, norm(output): 3.5625, norm(x): 2.9933, norm(y): 0.9920, norm:0.5786, tok/sec: 143872.65, flops:112.05, batch-reuse:1
@ 3506 train 3.8813 , allloss: 3.8814, dt: 909.28ms, fracRes: 0.2833, norm(attn): 0.4414, norm(output): 3.5156, norm(x): 3.0075, norm(y): 0.9920, norm:0.6707, tok/sec: 144149.66, flops:112.26, batch-reuse:1
@ 3507 train 3.9667 , allloss: 3.9669, dt: 909.27ms, fracRes: 0.2824, norm(attn): 0.4375, norm(output): 3.5156, norm(x): 2.9833, norm(y): 0.9917, norm:0.6716, tok/sec: 144151.48, flops:112.27, batch-reuse:1
@ 3508 train 4.0873 , allloss: 4.0874, dt: 904.36ms, fracRes: 0.2817, norm(attn): 0.4375, norm(output): 3.5156, norm(x): 2.9782, norm(y): 0.9918, norm:0.6530, tok/sec: 144933.96, flops:112.88, batch-reuse:1
@ 3509 train 4.0126 , allloss: 4.0127, dt: 895.11ms, fracRes: 0.2831, norm(attn): 0.4395, norm(output): 3.5312, norm(x): 2.9978, norm(y): 0.9922, norm:0.7080, tok/sec: 146430.87, flops:114.04, batch-reuse:1
@ 3510 train 3.9897 , allloss: 3.9898, dt: 906.32ms, fracRes: 0.2817, norm(attn): 0.4434, norm(output): 3.5781, norm(x): 2.9916, norm(y): 0.9920, norm:0.6644, tok/sec: 144619.34, flops:112.63, batch-reuse:1
@ 3511 train 4.0489 , allloss: 4.0489, dt: 905.74ms, fracRes: 0.2829, norm(attn): 0.4375, norm(output): 3.5312, norm(x): 2.9703, norm(y): 0.9919, norm:0.7462, tok/sec: 144712.45, flops:112.70, batch-reuse:1
@ 3512 train 4.0516 , allloss: 4.0518, dt: 904.55ms, fracRes: 0.2829, norm(attn): 0.4375, norm(output): 3.5312, norm(x): 2.9628, norm(y): 0.9921, norm:0.7037, tok/sec: 144903.67, flops:112.85, batch-reuse:1
@ 3513 train 4.0010 , allloss: 4.0014, dt: 891.22ms, fracRes: 0.2819, norm(attn): 0.4375, norm(output): 3.5469, norm(x): 2.9694, norm(y): 0.9918, norm:0.6344, tok/sec: 147069.70, flops:114.54, batch-reuse:1
@ 3514 train 4.1033 , allloss: 4.1034, dt: 903.69ms, fracRes: 0.2829, norm(attn): 0.4355, norm(output): 3.5469, norm(x): 2.9952, norm(y): 0.9918, norm:0.6750, tok/sec: 145041.14, flops:112.96, batch-reuse:1
@ 3515 train 3.9919 , allloss: 3.9920, dt: 896.60ms, fracRes: 0.2824, norm(attn): 0.4355, norm(output): 3.5625, norm(x): 3.0135, norm(y): 0.9918, norm:0.6487, tok/sec: 146187.86, flops:113.85, batch-reuse:1
@ 3516 train 4.0991 , allloss: 4.0991, dt: 883.48ms, fracRes: 0.2827, norm(attn): 0.4375, norm(output): 3.5625, norm(x): 3.0153, norm(y): 0.9919, norm:0.6709, tok/sec: 148359.55, flops:115.54, batch-reuse:1
@ 3517 train 4.0463 , allloss: 4.0463, dt: 891.78ms, fracRes: 0.2819, norm(attn): 0.4375, norm(output): 3.5156, norm(x): 2.9770, norm(y): 0.9916, norm:0.6946, tok/sec: 146977.46, flops:114.47, batch-reuse:1
@ 3518 train 4.0617 , allloss: 4.0618, dt: 887.11ms, fracRes: 0.2829, norm(attn): 0.4395, norm(output): 3.5312, norm(x): 2.9892, norm(y): 0.9920, norm:0.7732, tok/sec: 147751.45, flops:115.07, batch-reuse:1
@ 3519 train 3.9437 , allloss: 3.9439, dt: 899.58ms, fracRes: 0.2822, norm(attn): 0.4395, norm(output): 3.5156, norm(x): 2.9722, norm(y): 0.9919, norm:0.7864, tok/sec: 145703.28, flops:113.47, batch-reuse:1
@ 3520 train 3.9668 , allloss: 3.9669, dt: 889.05ms, fracRes: 0.2829, norm(attn): 0.4395, norm(output): 3.5469, norm(x): 3.0171, norm(y): 0.9921, norm:0.7845, tok/sec: 147429.12, flops:114.82, batch-reuse:1
@ 3521 train 3.9793 , allloss: 3.9794, dt: 898.34ms, fracRes: 0.2819, norm(attn): 0.4375, norm(output): 3.5312, norm(x): 2.9796, norm(y): 0.9916, norm:0.6362, tok/sec: 145905.02, flops:113.63, batch-reuse:1
@ 3522 train 4.1682 , allloss: 4.1683, dt: 907.47ms, fracRes: 0.2787, norm(attn): 0.4395, norm(output): 3.5156, norm(x): 2.9640, norm(y): 0.9913, norm:0.8890, tok/sec: 144436.01, flops:112.49, batch-reuse:1
@ 3523 train 4.0638 , allloss: 4.0639, dt: 897.86ms, fracRes: 0.2811, norm(attn): 0.4414, norm(output): 3.5625, norm(x): 2.9930, norm(y): 0.9916, norm:1.1450, tok/sec: 145982.20, flops:113.69, batch-reuse:1
@ 3524 train 4.0491 , allloss: 4.0499, dt: 876.68ms, fracRes: 0.2824, norm(attn): 0.4375, norm(output): 3.5469, norm(x): 2.9922, norm(y): 0.9915, norm:0.7887, tok/sec: 149509.16, flops:116.44, batch-reuse:1
@ 3525 train 4.0346 , allloss: 4.0347, dt: 905.02ms, fracRes: 0.2818, norm(attn): 0.4355, norm(output): 3.5156, norm(x): 2.9939, norm(y): 0.9914, norm:0.6652, tok/sec: 144826.98, flops:112.79, batch-reuse:1
@ 3526 train 4.1820 , allloss: 4.1821, dt: 907.01ms, fracRes: 0.2823, norm(attn): 0.4375, norm(output): 3.6094, norm(x): 3.0387, norm(y): 0.9917, norm:0.7960, tok/sec: 144509.52, flops:112.54, batch-reuse:1
@ 3527 train 4.1809 , allloss: 4.1812, dt: 913.18ms, fracRes: 0.2819, norm(attn): 0.4395, norm(output): 3.6250, norm(x): 3.0308, norm(y): 0.9918, norm:0.7306, tok/sec: 143533.34, flops:111.78, batch-reuse:1
@ 3528 train 4.2307 , allloss: 4.2308, dt: 900.33ms, fracRes: 0.2824, norm(attn): 0.4395, norm(output): 3.5625, norm(x): 3.0065, norm(y): 0.9919, norm:0.7166, tok/sec: 145582.20, flops:113.38, batch-reuse:1
@ 3529 train 4.2598 , allloss: 4.2598, dt: 898.94ms, fracRes: 0.2823, norm(attn): 0.4395, norm(output): 3.5625, norm(x): 3.0020, norm(y): 0.9917, norm:0.5560, tok/sec: 145807.97, flops:113.56, batch-reuse:1
@ 3530 train 4.2340 , allloss: 4.2342, dt: 906.01ms, fracRes: 0.2828, norm(attn): 0.4375, norm(output): 3.5625, norm(x): 3.0210, norm(y): 0.9918, norm:0.5906, tok/sec: 144669.92, flops:112.67, batch-reuse:1
@ 3531 train 4.3884 , allloss: 4.3885, dt: 893.81ms, fracRes: 0.2819, norm(attn): 0.4375, norm(output): 3.5625, norm(x): 3.0175, norm(y): 0.9918, norm:0.6371, tok/sec: 146644.80, flops:114.21, batch-reuse:1
@ 3532 train 4.2359 , allloss: 4.2360, dt: 902.13ms, fracRes: 0.2822, norm(attn): 0.4375, norm(output): 3.5625, norm(x): 3.0331, norm(y): 0.9916, norm:0.6661, tok/sec: 145291.91, flops:113.15, batch-reuse:1
@ 3533 train 4.3315 , allloss: 4.3316, dt: 901.80ms, fracRes: 0.2826, norm(attn): 0.4395, norm(output): 3.6094, norm(x): 3.0419, norm(y): 0.9916, norm:0.7044, tok/sec: 145344.92, flops:113.20, batch-reuse:1
@ 3534 train 4.1224 , allloss: 4.1226, dt: 901.34ms, fracRes: 0.2828, norm(attn): 0.4395, norm(output): 3.5625, norm(x): 3.0322, norm(y): 0.9918, norm:0.6183, tok/sec: 145419.31, flops:113.25, batch-reuse:1
@ 3535 train 4.3570 , allloss: 4.3571, dt: 902.53ms, fracRes: 0.2840, norm(attn): 0.4414, norm(output): 3.6094, norm(x): 3.0552, norm(y): 0.9920, norm:0.9779, tok/sec: 145227.93, flops:113.10, batch-reuse:1
@ 3536 train 4.1612 , allloss: 4.1613, dt: 907.48ms, fracRes: 0.2820, norm(attn): 0.4395, norm(output): 3.5625, norm(x): 3.0195, norm(y): 0.9917, norm:1.0396, tok/sec: 144435.56, flops:112.49, batch-reuse:1
@ 3537 train 4.2460 , allloss: 4.2461, dt: 893.08ms, fracRes: 0.2826, norm(attn): 0.4375, norm(output): 3.5469, norm(x): 3.0106, norm(y): 0.9917, norm:0.8036, tok/sec: 146763.85, flops:114.30, batch-reuse:1
@ 3538 train 4.1698 , allloss: 4.1699, dt: 903.11ms, fracRes: 0.2822, norm(attn): 0.4395, norm(output): 3.5625, norm(x): 3.0221, norm(y): 0.9917, norm:0.7401, tok/sec: 145134.30, flops:113.03, batch-reuse:1
@ 3539 train 4.1470 , allloss: 4.1471, dt: 903.58ms, fracRes: 0.2826, norm(attn): 0.4414, norm(output): 3.7031, norm(x): 3.0510, norm(y): 0.9919, norm:0.7123, tok/sec: 145058.97, flops:112.97, batch-reuse:1
@ 3540 train 4.2062 , allloss: 4.2065, dt: 901.26ms, fracRes: 0.2823, norm(attn): 0.4395, norm(output): 3.6250, norm(x): 3.0330, norm(y): 0.9919, norm:0.6344, tok/sec: 145431.70, flops:113.26, batch-reuse:1
@ 3541 train 4.1819 , allloss: 4.1820, dt: 900.20ms, fracRes: 0.2828, norm(attn): 0.4355, norm(output): 3.6406, norm(x): 3.0414, norm(y): 0.9919, norm:0.6527, tok/sec: 145603.56, flops:113.40, batch-reuse:1
@ 3542 train 4.1817 , allloss: 4.1824, dt: 891.13ms, fracRes: 0.2828, norm(attn): 0.4395, norm(output): 3.6875, norm(x): 3.0503, norm(y): 0.9919, norm:0.6619, tok/sec: 147084.89, flops:114.55, batch-reuse:1
@ 3543 train 4.3021 , allloss: 4.3021, dt: 894.56ms, fracRes: 0.2829, norm(attn): 0.4375, norm(output): 3.6719, norm(x): 3.0434, norm(y): 0.9919, norm:0.7214, tok/sec: 146521.06, flops:114.11, batch-reuse:1
@ 3544 train 4.1402 , allloss: 4.1402, dt: 890.61ms, fracRes: 0.2831, norm(attn): 0.4375, norm(output): 3.6250, norm(x): 3.0414, norm(y): 0.9920, norm:0.7584, tok/sec: 147170.49, flops:114.62, batch-reuse:1
@ 3545 train 4.1548 , allloss: 4.1550, dt: 909.11ms, fracRes: 0.2825, norm(attn): 0.4375, norm(output): 3.6094, norm(x): 3.0350, norm(y): 0.9918, norm:0.6202, tok/sec: 144175.59, flops:112.28, batch-reuse:1
@ 3546 train 4.1555 , allloss: 4.1556, dt: 899.14ms, fracRes: 0.2828, norm(attn): 0.4375, norm(output): 3.6250, norm(x): 3.0416, norm(y): 0.9919, norm:0.6212, tok/sec: 145775.18, flops:113.53, batch-reuse:1
@ 3547 train 4.1233 , allloss: 4.1235, dt: 917.57ms, fracRes: 0.2827, norm(attn): 0.4375, norm(output): 3.6562, norm(x): 3.0593, norm(y): 0.9920, norm:0.6412, tok/sec: 142846.11, flops:111.25, batch-reuse:1
@ 3548 train 4.1014 , allloss: 4.1016, dt: 914.43ms, fracRes: 0.2823, norm(attn): 0.4395, norm(output): 3.6719, norm(x): 3.0535, norm(y): 0.9920, norm:0.5813, tok/sec: 143337.36, flops:111.63, batch-reuse:1
@ 3549 train 4.0959 , allloss: 4.0961, dt: 909.82ms, fracRes: 0.2826, norm(attn): 0.4414, norm(output): 3.6719, norm(x): 3.0577, norm(y): 0.9921, norm:0.6004, tok/sec: 144063.27, flops:112.20, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0115,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0121,     0.9492,     0.0405,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1807,     0.2314,     0.3613,     0.2256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0591,     0.3047,     0.0835,     0.4395,     0.1138,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0090,     0.0271,     0.0140,     0.0025,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8906,     0.0038,     0.0623,     0.0110,     0.0109,     0.0044,     0.0178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.0005,     0.1836,     0.0177,     0.0065,     0.0007,     0.0109,     0.0903,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5703,     0.0267,     0.0703,     0.0376,     0.0300,     0.0140,     0.0645,     0.1582,     0.0280,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5664,     0.0093,     0.0588,     0.0261,     0.0420,     0.0086,     0.0237,     0.1650,     0.0156,     0.0864,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0034,     0.0083,     0.0031,     0.0259,     0.0398,     0.0669,     0.7656,     0.0079,     0.0488,     0.0046,     0.0259,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3652,     0.0082,     0.0825,     0.0173,     0.0354,     0.0134,     0.0104,     0.1436,     0.0148,     0.0535,     0.0413,     0.2139,     0.0000,     0.0000,     0.0000],
        [    0.1289,     0.0015,     0.0491,     0.0063,     0.0014,     0.0006,     0.0182,     0.0491,     0.0007,     0.0144,     0.0029,     0.6914,     0.0354,     0.0000,     0.0000],
        [    0.2080,     0.0354,     0.0293,     0.0630,     0.0366,     0.0242,     0.2197,     0.0967,     0.0474,     0.0085,     0.0413,     0.0723,     0.0923,     0.0260,     0.0000],
        [    0.1680,     0.0623,     0.0344,     0.0206,     0.0248,     0.0283,     0.0679,     0.0464,     0.1738,     0.0226,     0.0237,     0.1094,     0.0986,     0.0776,     0.0420]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0224, -0.0190, -0.0294,  ...,  0.0288,  0.0220, -0.0145],
        [-0.0363,  0.0247,  0.0137,  ..., -0.0396, -0.0104, -0.0049],
        [-0.0167,  0.0322,  0.0179,  ..., -0.0002, -0.0015, -0.0029],
        ...,
        [-0.0010, -0.0044,  0.0271,  ..., -0.0290,  0.0166,  0.0080],
        [-0.0092,  0.0155, -0.0069,  ..., -0.0052, -0.0570, -0.0418],
        [ 0.0418, -0.0023,  0.0560,  ..., -0.0194,  0.0323, -0.0015]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4863, -1.9062,  0.2695, -2.6875, -1.6875, -0.2295, -0.1270,  0.2793, -1.5234,  0.3457, -2.0000,  1.5625,  0.7734, -1.5391, -0.5547, -1.1875, -1.0312, -0.5508, -0.7656,  0.6992,  1.4141,  0.6445, -2.0938, -0.1982, -0.0109, -0.3340, -3.3906,  0.9062,  2.5938,  1.4141, -0.6562,  0.0327,
        -0.2852,  1.6016,  1.4453,  1.3984,  1.1328, -1.1797,  1.0234,  1.9375,  0.5469, -1.1172, -1.8516,  0.2314, -0.8438, -1.3125,  2.5156, -1.7734, -0.8047,  1.1016,  0.9297, -0.8594, -0.0245, -0.3828,  1.1719,  1.6484, -0.2471,  0.7695,  0.4004,  0.8672,  2.1562,  0.5117, -0.5508,  0.7461],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0057,  0.0361,  0.0327,  ..., -0.0098,  0.0218, -0.0129],
        [-0.0088, -0.0238, -0.0346,  ...,  0.0190, -0.0069, -0.0497],
        [ 0.0155,  0.0049, -0.0390,  ...,  0.0364, -0.0412, -0.0271],
        ...,
        [ 0.0170,  0.0183, -0.0253,  ...,  0.0450, -0.0378, -0.0338],
        [ 0.0053, -0.0062, -0.0067,  ..., -0.0182,  0.0379,  0.0406],
        [ 0.0193,  0.0364, -0.0709,  ..., -0.0170, -0.0712, -0.0131]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0391,  0.9727, -0.9258, -2.5312, -0.4746,  1.9297, -1.0625,  1.4062,  1.3359, -0.0306,  1.2891, -0.6719, -1.9453, -0.6719, -0.7500,  0.4355, -1.2031,  0.4023,  0.6914, -0.0640, -0.5898,  0.6055,  0.6523, -0.1621, -0.0718, -0.4199,  1.6797, -1.3672, -1.1094,  0.1060, -0.2695,  0.7227,
        -0.1172,  1.7188,  1.6172, -1.1328, -0.2002, -0.9570, -1.1328,  0.7227, -0.0085,  0.7930,  0.8906,  0.9023,  0.8633,  1.6797,  0.7578,  0.7344, -1.3125,  0.1611, -0.0908,  1.1641,  1.2344, -0.1689,  1.0547,  1.0469, -0.3848,  1.1484, -0.3477,  0.3008, -1.4375, -0.6445,  0.6445,  0.3750],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -4.4688,     -0.4395,     -1.6250,     -0.5859,     -2.9688,     -3.2500,     -3.6562,     -1.2891,     -2.7031,     -0.1416,     -3.5938,     -3.2656,     -2.2188,     -0.2578],
        [     0.0000,      4.3750,      1.2031,      2.6875,      1.7500,      2.5938,      4.0000,      1.2422,      2.9062,      1.2188,      1.2656,      3.0156,      2.1250,      3.0781,      1.0469],
        [     0.0000,      0.2500,      0.6953,      0.2227,     -0.3262,     -1.6094,      0.5820,     -0.1885,      0.0077,     -0.3652,     -0.5352,      0.8828,      0.3027,     -0.8945,     -0.0007],
        [     0.0000,      1.6406,      0.3496,      2.0156,      0.6562,      1.9844,      4.3125,     -0.0352,      1.7969,     -0.6953,      1.1250,     -0.4238,      0.0962,      1.5312,      3.0625],
        [     0.0000,     -4.6562,     -3.5625,     -4.2188,     -5.9375,     -7.0000,     -4.5625,     -2.3906,     -6.2500,     -4.8438,     -4.0938,     -3.2188,     -1.9375,     -7.5312,     -5.1250],
        [     0.0000,     -5.4375,     -2.6562,     -4.3750,     -4.4062,     -5.3125,     -3.9062,     -1.9688,     -4.6875,     -3.8594,     -3.6719,     -2.9375,     -1.1094,     -5.5938,     -2.8594],
        [     0.0000,     -7.2500,     -1.3281,     -3.6719,     -4.6562,     -6.8750,     -4.1562,     -2.0312,     -6.5938,     -2.8594,     -3.5000,     -0.3066,     -2.0938,     -7.6562,     -4.6875],
        [     0.0000,     -3.0625,     -2.0938,     -2.7188,     -2.9375,     -3.7031,     -2.1875,     -1.2812,     -3.0156,     -4.0312,     -2.7812,     -2.9531,     -0.8945,     -3.2656,     -1.8047],
        [     0.0000,     -4.0938,     -2.2656,     -3.0781,     -2.5938,     -4.1875,     -3.1719,     -1.2344,     -3.5781,     -1.8750,     -2.3125,     -2.1719,     -0.5859,     -4.2812,     -3.6719],
        [     0.0000,      0.8945,     -0.0918,      2.0312,      2.4531,      2.9844,      5.4062,      0.8359,      2.6562,      0.2949,      2.0312,      1.3828,      0.4102,      3.0312,      5.3750],
        [     0.0000,     -3.7969,     -1.4922,     -3.0469,     -2.3438,     -3.3125,     -3.5625,     -0.9375,     -3.2031,     -1.9297,     -2.1875,     -0.5391,     -0.4590,     -3.4219,     -2.9531],
        [     0.0000,     -4.4688,     -0.9688,     -3.0312,     -4.5000,     -5.4062,     -1.9609,     -0.9688,     -5.1562,     -2.1875,     -3.7812,      1.6797,     -1.2969,     -6.2188,     -3.9844],
        [     0.0000,     -1.7734,     -1.9609,     -1.1953,     -1.7344,     -2.1562,      0.0562,     -0.7656,     -1.4766,     -3.2031,     -1.6172,     -1.0547,     -0.8086,     -2.0781,      0.0425],
        [     0.0000,     -0.9922,     -1.5859,     -2.0938,     -1.9141,     -1.7812,     -0.9062,     -1.2812,      0.0342,     -2.0000,     -1.9531,     -0.4277,     -0.5312,     -0.7695,     -1.3828]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6585],
        [0.3631],
        [0.3377],
        [0.2516],
        [0.4651],
        [0.3268],
        [0.3966],
        [0.2159],
        [0.2660],
        [0.0197],
        [0.2761],
        [0.1598],
        [0.1073],
        [0.0556]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0425, -0.0331, -0.0030,  ...,  0.0409, -0.0396, -0.0216],
        [ 0.0084, -0.0222,  0.0304,  ..., -0.0193,  0.0115, -0.0049],
        [-0.0007,  0.0469,  0.0233,  ..., -0.0562,  0.0048,  0.0127],
        ...,
        [-0.0145, -0.0076, -0.0176,  ...,  0.0348, -0.0069,  0.0384],
        [ 0.0252,  0.0159,  0.0166,  ..., -0.0287,  0.0518,  0.0169],
        [-0.0136, -0.0220, -0.0214,  ...,  0.0596, -0.0367,  0.0157]], device='cuda:0', requires_grad=True)
K: tensor([ 4.5312, -2.2969,  3.7500, -2.5469,  0.0400, -3.4219, -1.9141,  3.1094,  2.0625, -1.1953, -2.1250, -3.5938, -2.3438, -2.2344, -1.7266, -2.6406,  2.3125,  2.1562,  2.1094, -1.0156, -1.6328, -1.9219,  4.1562,  3.2500,  2.9219, -4.0625, -3.6875,  1.8047,  2.8906, -3.3750,  2.5781, -1.9062,
        -3.3281, -4.0938,  2.2656,  2.6250, -1.9922, -2.2969,  3.6719, -1.8594, -2.8281,  0.8711,  3.1875,  2.1094, -2.6250, -0.5977,  4.2188,  2.4844, -3.7656,  3.4688, -1.9453,  1.8672, -3.2031, -2.4688,  2.9844, -3.0156,  2.3594, -2.6250, -3.7344, -2.3906,  2.5000, -2.3438,  2.6875, -4.6562],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0077,  0.0167,  0.0418,  ..., -0.0337,  0.0220,  0.0052],
        [ 0.0229, -0.0129, -0.0239,  ...,  0.0031, -0.0450, -0.0202],
        [ 0.0341,  0.0115, -0.0243,  ...,  0.0517,  0.0115, -0.0121],
        ...,
        [-0.0103,  0.0003,  0.0041,  ..., -0.0447, -0.0008, -0.0565],
        [-0.0147, -0.0186, -0.0133,  ...,  0.0509, -0.0578,  0.0061],
        [ 0.0032,  0.0299,  0.0018,  ..., -0.0850,  0.0315,  0.0030]], device='cuda:0', requires_grad=True)
Q: tensor([-1.8828,  3.2656, -4.0938,  3.4219,  0.1846,  3.4688,  1.7422, -3.8906, -1.1953,  1.5234,  1.8359,  3.5781,  3.3125,  2.0156,  1.4609,  1.7422, -4.1562, -1.0234, -1.6641,  2.8125,  4.0938,  2.3281, -4.3438, -2.2500, -3.7812,  3.0625,  2.4219, -1.1875, -2.7188,  3.6719, -3.6250,  0.4609,
         2.8281,  4.4062, -1.3672, -4.1562,  2.5938,  2.6094, -3.2344,  1.1094,  1.8125, -3.6875, -3.2969, -1.2188, -0.4707,  0.9414, -2.5625, -3.8906,  2.7969, -2.7031,  3.2031, -1.8281,  3.6250,  3.2656, -3.6406,  2.6719, -4.0938,  3.8594,  3.0625,  2.4844, -3.0312,  1.8750, -3.6562,  3.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -75.0000,  -64.5000,  -66.0000,  -65.5000,  -66.0000,  -67.5000,  -64.0000,  -56.0000,  -76.5000,  -70.5000,  -58.0000,  -61.2500,  -54.7500,  -50.7500],
        [   0.0000,  -75.5000,  -67.5000,  -68.0000,  -64.5000,  -70.5000,  -70.0000,  -65.5000,  -57.7500,  -79.0000,  -71.0000,  -57.7500,  -61.0000,  -56.2500,  -52.2500],
        [   0.0000,  -97.0000,  -86.0000,  -87.0000,  -82.0000,  -88.0000,  -88.0000,  -84.5000,  -70.0000, -100.0000,  -90.0000,  -75.5000,  -79.0000,  -68.0000,  -65.5000],
        [   0.0000,  -78.0000,  -69.0000,  -70.0000,  -65.0000,  -71.0000,  -71.0000,  -69.5000,  -56.7500,  -80.5000,  -72.0000,  -61.2500,  -63.7500,  -55.2500,  -52.2500],
        [   0.0000,  -75.5000,  -65.0000,  -65.0000,  -68.5000,  -68.5000,  -70.5000,  -64.5000,  -59.0000,  -78.5000,  -73.5000,  -56.7500,  -61.5000,  -58.2500,  -50.7500],
        [   0.0000,  -94.0000,  -82.0000,  -84.0000,  -81.5000,  -87.0000,  -88.5000,  -84.5000,  -71.5000,  -98.0000,  -90.0000,  -73.5000,  -77.5000,  -70.0000,  -62.0000],
        [   0.0000,  -80.5000,  -69.5000,  -71.0000,  -71.5000,  -75.0000,  -76.5000,  -73.0000,  -61.5000,  -84.5000,  -78.0000,  -62.2500,  -67.5000,  -60.5000,  -54.5000],
        [   0.0000,  -84.0000,  -73.5000,  -75.0000,  -71.5000,  -78.5000,  -78.0000,  -74.5000,  -63.2500,  -87.5000,  -80.0000,  -65.5000,  -69.0000,  -62.0000,  -55.7500],
        [   0.0000,  -98.5000,  -85.5000,  -89.0000,  -82.5000,  -91.5000,  -90.0000,  -87.0000,  -72.5000, -101.5000,  -92.0000,  -77.5000,  -81.0000,  -70.5000,  -65.5000],
        [   0.0000,  -87.0000,  -77.0000,  -78.5000,  -75.0000,  -79.5000,  -80.0000,  -78.0000,  -63.7500,  -90.5000,  -82.0000,  -68.5000,  -73.0000,  -62.2500,  -57.5000],
        [   0.0000,  -77.0000,  -67.5000,  -68.5000,  -65.0000,  -70.0000,  -70.0000,  -67.0000,  -56.2500,  -78.5000,  -71.0000,  -59.5000,  -62.2500,  -54.7500,  -51.7500],
        [   0.0000,  -76.5000,  -67.0000,  -67.5000,  -68.0000,  -73.0000,  -74.5000,  -69.5000,  -60.7500,  -81.5000,  -75.0000,  -58.0000,  -63.7500,  -60.0000,  -52.5000],
        [   0.0000,  -82.5000,  -72.5000,  -74.0000,  -70.5000,  -77.5000,  -77.0000,  -73.5000,  -62.5000,  -86.5000,  -79.0000,  -64.5000,  -68.0000,  -61.2500,  -54.7500],
        [   0.0000,  -89.0000,  -77.5000,  -79.0000,  -76.5000,  -81.5000,  -82.0000,  -76.5000,  -67.5000,  -92.5000,  -84.5000,  -68.5000,  -71.5000,  -66.0000,  -59.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0302, -0.0596, -0.0493,  ...,  0.0397, -0.0238,  0.0288],
        [ 0.0119,  0.0256,  0.0200,  ..., -0.0218,  0.0221, -0.0374],
        [ 0.0144,  0.0146, -0.0274,  ..., -0.0002, -0.0010,  0.0518],
        ...,
        [ 0.0028, -0.0217, -0.0627,  ...,  0.0238, -0.0271,  0.0423],
        [ 0.0143,  0.0644,  0.0191,  ..., -0.0031,  0.0393, -0.0430],
        [-0.0570, -0.0385, -0.0290,  ...,  0.0514, -0.0278,  0.0366]], device='cuda:0', requires_grad=True)
K: tensor([ 1.7656, -1.3672, -1.7734,  2.2656, -1.7578,  3.3438,  2.0781,  1.1875,  2.2031,  0.5508, -1.9688,  1.7734,  2.1250, -2.4688,  1.7734, -2.5000, -2.9219, -2.7500, -1.9453,  1.8906, -2.5156,  1.3672, -1.8438,  1.7812, -2.5469, -2.1406, -2.7656,  2.7188, -1.3984, -1.9062,  2.7812, -2.3438,
        -2.9062, -0.2324, -1.2891,  1.1172,  2.0469,  1.0625,  0.8398, -2.7188, -3.5625,  1.3281, -2.4219, -1.7500,  3.1094, -1.6094, -1.2656,  2.0469,  1.0000, -0.0457,  1.1641,  2.6406, -1.0312, -2.9688, -1.3828,  2.5156, -2.1562,  1.3516, -0.8672, -2.5781,  1.3672, -2.3750,  0.9297, -1.8203],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0445,  0.0152,  0.0358,  ..., -0.0340,  0.0274, -0.0202],
        [-0.0044, -0.0392, -0.0301,  ...,  0.0183, -0.0398,  0.0057],
        [ 0.0373,  0.0146,  0.0277,  ...,  0.0119,  0.0278, -0.0446],
        ...,
        [-0.0029,  0.0250,  0.0161,  ..., -0.0180,  0.0218, -0.0152],
        [ 0.0029, -0.0389, -0.0055,  ...,  0.0639, -0.0333, -0.0372],
        [ 0.0160,  0.0098,  0.0644,  ..., -0.0412,  0.0430, -0.0440]], device='cuda:0', requires_grad=True)
Q: tensor([-1.8516,  2.8438,  2.2812, -1.5781,  1.6016, -2.1875, -2.6094, -1.3359, -2.5000, -0.4570, -0.2285, -1.9219, -2.8906,  2.7969, -1.1719,  3.2812,  1.6953,  3.3125,  2.1719, -0.6484,  2.5938, -2.2656,  2.0156, -1.8047,  2.6719,  2.2500,  2.5000, -2.7031,  1.9375,  2.3438, -2.6094,  2.0469,
         1.8906,  1.0156,  1.9688, -0.1396, -2.5000, -1.2266, -1.6953,  2.7656,  1.4141, -1.8828,  3.5000,  1.9844, -2.4531,  1.4375,  1.0781, -1.3750, -2.0156,  1.3516, -2.1719, -3.1719,  2.5781,  3.1094,  2.3906, -2.1875,  2.0312, -4.0312,  1.3672,  2.8281, -1.0938,  1.9297, -2.7031,  3.0000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -37.7500, -30.6250, -32.2500, -39.7500, -37.2500, -29.2500, -40.0000, -30.1250, -40.5000, -38.5000, -36.0000, -42.2500, -29.1250, -27.0000],
        [  0.0000, -50.2500, -44.0000, -48.2500, -54.5000, -51.2500, -39.7500, -59.0000, -41.7500, -56.5000, -53.0000, -51.0000, -62.5000, -40.7500, -36.7500],
        [  0.0000, -55.0000, -46.2500, -50.2500, -57.5000, -55.0000, -42.5000, -61.7500, -44.5000, -60.2500, -57.0000, -54.7500, -64.5000, -43.0000, -39.2500],
        [  0.0000, -51.0000, -42.5000, -44.7500, -54.2500, -50.7500, -40.0000, -55.0000, -41.5000, -55.0000, -53.2500, -49.2500, -58.5000, -40.2500, -37.0000],
        [  0.0000, -39.0000, -32.5000, -33.0000, -41.2500, -38.5000, -29.0000, -40.2500, -32.2500, -42.2500, -40.0000, -36.7500, -43.2500, -31.1250, -28.5000],
        [  0.0000, -28.8750, -24.3750, -23.6250, -32.0000, -28.2500, -24.3750, -30.7500, -24.7500, -32.7500, -31.3750, -28.2500, -32.2500, -24.2500, -22.8750],
        [  0.0000, -54.0000, -49.2500, -52.0000, -60.0000, -55.2500, -44.5000, -64.0000, -46.5000, -63.0000, -59.0000, -54.7500, -68.5000, -45.5000, -41.5000],
        [  0.0000, -42.0000, -34.5000, -36.2500, -45.0000, -41.2500, -32.5000, -44.0000, -35.0000, -45.7500, -43.5000, -40.7500, -46.7500, -33.7500, -30.5000],
        [  0.0000, -60.5000, -53.0000, -58.0000, -66.0000, -61.7500, -47.0000, -69.5000, -50.7500, -68.5000, -64.5000, -59.7500, -74.5000, -49.5000, -44.2500],
        [  0.0000, -45.2500, -37.7500, -38.7500, -47.5000, -44.7500, -35.2500, -48.0000, -36.5000, -49.5000, -47.0000, -43.5000, -51.0000, -35.5000, -33.2500],
        [  0.0000, -42.5000, -36.2500, -39.2500, -45.7500, -42.7500, -32.7500, -46.2500, -35.7500, -46.7500, -46.0000, -40.5000, -50.0000, -35.2500, -30.8750],
        [  0.0000, -52.5000, -46.0000, -48.5000, -57.0000, -53.0000, -41.5000, -59.0000, -44.2500, -58.2500, -56.7500, -51.0000, -64.0000, -43.2500, -38.7500],
        [  0.0000, -39.5000, -32.7500, -34.0000, -42.5000, -38.7500, -30.5000, -41.0000, -33.0000, -43.2500, -40.7500, -38.2500, -44.0000, -32.0000, -28.7500],
        [  0.0000, -43.7500, -38.2500, -40.5000, -48.2500, -45.5000, -36.0000, -50.7500, -36.5000, -49.7500, -48.2500, -44.2500, -53.5000, -35.7500, -33.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8324],
        [1.0000],
        [0.9535],
        [0.6669],
        [0.6724],
        [0.6093],
        [0.9997],
        [0.6025],
        [1.0000],
        [0.6631],
        [1.0000],
        [0.9997],
        [0.5874],
        [0.9756]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.9961,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9570,     0.0003,     0.0422,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.9180,     0.0206,     0.0064,     0.0535,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.9219,     0.0027,     0.0304,     0.0168,     0.0281,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.8164,     0.0016,     0.0052,     0.0072,     0.0791,     0.0898,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.9062,     0.0021,     0.0055,     0.0095,     0.0061,     0.0413,     0.0249,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0237,     0.7344,     0.0090,     0.0261,     0.0498,     0.0608,     0.0664,     0.0220,     0.0096,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.7266,     0.0019,     0.0063,     0.0391,     0.0038,     0.0123,     0.0039,     0.0957,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0082,     0.5742,     0.0037,     0.0037,     0.0369,     0.0630,     0.0386,     0.0100,     0.0199,     0.0557,     0.1875,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.1699,     0.0073,     0.0121,     0.0168,     0.0425,     0.0352,     0.3301,     0.0811,     0.1924,     0.0464,     0.0645,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7305,     0.0004,     0.0004,     0.0005,     0.0006,     0.0115,     0.0047,     0.1553,     0.0457,     0.0359,     0.0024,     0.0115,     0.0000,     0.0000],
        [    0.0051,     0.5586,     0.0042,     0.0115,     0.0299,     0.0219,     0.0391,     0.0069,     0.0055,     0.2207,     0.0610,     0.0148,     0.0042,     0.0182,     0.0000],
        [    0.0024,     0.2910,     0.0525,     0.3223,     0.0771,     0.0586,     0.0654,     0.0081,     0.0063,     0.0518,     0.0195,     0.0062,     0.0021,     0.0055,     0.0297]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0045, -0.0248,  0.0126,  ...,  0.0137,  0.0167,  0.0885],
        [-0.0286, -0.0381, -0.0001,  ..., -0.0160,  0.0031, -0.0160],
        [ 0.0035,  0.0024,  0.0077,  ...,  0.0211,  0.0051,  0.0628],
        ...,
        [-0.0240,  0.0066,  0.0273,  ...,  0.0181,  0.0614,  0.0484],
        [ 0.0155, -0.0455,  0.0372,  ...,  0.0014, -0.0112, -0.0409],
        [-0.0167,  0.0102, -0.0104,  ..., -0.0219, -0.0264, -0.0510]], device='cuda:0', requires_grad=True)
K: tensor([-0.9883, -2.6875, -1.8594, -0.6250, -0.2314,  0.6875, -4.1875, -1.9609, -1.1719, -0.8086, -1.1953,  1.6016,  2.7656, -2.4375,  1.6953, -3.0156,  0.9727,  0.3652,  0.4707,  0.5703, -0.3574, -1.7031,  2.0156, -0.6562, -1.3359,  0.9805,  1.1172, -1.9453, -2.2188, -1.3047,  1.2734, -1.2812,
         0.6328,  1.9219,  1.1328, -0.8438, -1.1250,  1.0938, -1.8750,  0.0192, -0.2559, -0.3711,  2.0781, -3.1719,  0.1177, -0.1240,  1.4531, -0.7070, -1.2344, -0.4355, -0.8320, -0.4141,  0.3203,  2.0156, -1.4219,  0.0071,  2.1094, -0.3926,  1.0625, -0.6289,  1.1016,  0.5781,  0.8125,  1.3438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0166,  0.0294,  0.0107,  ...,  0.0439, -0.0432,  0.0044],
        [ 0.0054,  0.0003, -0.0105,  ..., -0.0095, -0.0110,  0.0226],
        [-0.0280, -0.0157, -0.0049,  ..., -0.0207, -0.0325, -0.0166],
        ...,
        [ 0.0006,  0.0044,  0.0278,  ...,  0.0250, -0.0201,  0.0049],
        [ 0.0060,  0.0110, -0.0004,  ...,  0.0180,  0.0080,  0.0374],
        [-0.0238, -0.0134,  0.0085,  ...,  0.0179, -0.0438,  0.0700]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4004,  0.0310,  1.1953, -2.2500, -2.0000,  2.2969, -2.6094,  0.9141,  1.6562, -2.2500,  0.5938, -1.0547,  0.0437, -1.1484, -0.8711, -2.1562,  1.0469,  0.4727, -0.6797, -2.8281,  2.7656, -1.2891,  1.6953,  0.1768, -1.0547, -0.5781, -2.1875, -1.9688, -1.9922, -2.2031,  0.7695,  0.5898,
         0.5977,  0.2266, -0.9219,  0.6680, -2.1875,  0.7773, -0.1768, -0.0155,  0.4688, -0.5469, -0.5039,  1.3906, -0.1016,  1.1875, -2.8281,  1.0781, -1.1875,  0.4746, -2.1719, -0.6641, -0.7578,  0.0183,  1.2344, -0.1885,  1.2266,  2.4219, -2.2812, -0.1953,  0.9453, -1.5469, -4.0312,  0.9414],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -6.8750, -7.7188, -8.8125, -8.8125, -6.8125, -7.3750, -7.4688, -8.3750, -6.6250, -8.6875, -6.1250, -8.5000, -7.7500, -6.6250],
        [ 0.0000,  7.5312,  1.3125, 10.1250,  6.8438,  3.6875,  5.9688,  5.5625,  4.2500,  3.1406,  4.0625,  1.4922,  3.9688,  3.6719,  2.8125],
        [ 0.0000, 12.3750,  4.3438,  9.2500, 14.2500, 12.1875, 10.5625,  7.7188,  7.1250,  5.6250,  7.2812,  4.2812,  6.1250,  6.0312,  7.1875],
        [ 0.0000,  6.9688,  3.1875,  2.0156,  4.1250,  8.0000,  6.4062,  4.7188,  3.3906,  3.5781,  1.0625,  3.3750,  3.6094,  2.8750,  4.2188],
        [ 0.0000,  7.1875,  1.3594,  3.7656,  3.1719,  3.6875,  6.7188,  4.8438,  4.8125,  3.5156,  2.2031,  2.2656,  2.2188,  4.1875,  3.5000],
        [ 0.0000,  8.3125,  2.0469,  3.2344,  3.5625,  5.9375,  6.0938,  5.5000,  3.7031,  2.2500,  0.2178,  2.9531,  0.7695,  2.1094,  1.6875],
        [ 0.0000,  5.4062, -0.6680,  0.2812,  0.8359,  0.3945,  2.2969,  1.7969,  6.4062,  4.9375,  5.1562,  2.9531,  2.4531,  5.3438,  4.4688],
        [ 0.0000,  3.4375, -0.9609,  0.0991,  0.7422,  0.9453,  1.0312, -0.0747, -0.8984,  2.6562,  0.6836,  0.2236, -1.2656, -0.3379,  4.1250],
        [ 0.0000,  7.5938,  1.6562,  2.8281,  4.6562,  2.3438,  3.5000,  2.3594,  5.5625,  5.7188, 11.5000,  5.0625,  3.9375,  5.0312,  5.9062],
        [ 0.0000,  4.2500, -0.7969, -0.7969,  1.5078,  2.0312,  1.5469,  0.2002,  0.8867,  1.9141,  3.1250,  2.6719,  0.2812,  0.8320,  2.8906],
        [ 0.0000,  5.4062,  2.2500,  2.7500,  3.0781,  4.0000,  3.8281,  6.0625,  4.6562,  5.5312,  4.0938,  4.4375, 12.5000,  6.2188,  4.8750],
        [ 0.0000,  8.6875,  1.2656,  1.0781,  1.4609,  1.5781,  4.5312,  3.6406,  7.1562,  5.9375,  5.6875,  3.0000,  4.5312,  8.6250,  8.0625],
        [ 0.0000,  4.6875, -0.1895,  0.8047,  1.7656,  1.4453,  2.0312,  0.2949,  0.0737,  3.7656,  2.4844,  1.0625, -0.1943,  1.2656,  5.8125],
        [ 0.0000,  4.8125,  3.0781,  4.9062,  3.4688,  3.2031,  3.3125,  1.2109,  0.9648,  3.0781,  2.0938,  0.9453, -0.1226,  0.8203,  2.5156]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2587],
        [0.0329],
        [0.0366],
        [0.0845],
        [0.0667],
        [0.1352],
        [0.0441],
        [0.0544],
        [0.0409],
        [0.0521],
        [0.0311],
        [0.0462],
        [0.0444],
        [0.0404]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0059,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.8906,     0.1094,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0121,     0.8008,     0.1514,     0.0371,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1084,     0.3477,     0.0488,     0.0206,     0.4746,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.2139,     0.0439,     0.0107,     0.5273,     0.2031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0110,     0.1934,     0.0121,     0.0085,     0.5352,     0.1367,     0.1030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0177,     0.2598,     0.0120,     0.0042,     0.5430,     0.0640,     0.0474,     0.0530,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.2793,     0.0270,     0.0062,     0.3633,     0.0747,     0.0123,     0.0447,     0.1885,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.3965,     0.0317,     0.0183,     0.1211,     0.0684,     0.0259,     0.1455,     0.1533,     0.0364,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.1445,     0.0115,     0.0071,     0.0947,     0.0381,     0.0106,     0.0674,     0.5391,     0.0481,     0.0398,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0071,     0.2363,     0.0256,     0.0278,     0.1108,     0.0510,     0.0217,     0.2676,     0.1309,     0.0240,     0.0221,     0.0767,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.2500,     0.0157,     0.0076,     0.1436,     0.0403,     0.0150,     0.0322,     0.3926,     0.0284,     0.0198,     0.0214,     0.0304,     0.0000,     0.0000],
        [    0.0008,     0.3574,     0.0232,     0.0084,     0.2656,     0.0610,     0.0162,     0.0469,     0.0684,     0.0270,     0.0167,     0.0088,     0.0167,     0.0840,     0.0000],
        [    0.0007,     0.3711,     0.0483,     0.0342,     0.0879,     0.0581,     0.0181,     0.1069,     0.0208,     0.0220,     0.0190,     0.0280,     0.1475,     0.0245,     0.0125]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0483,     -0.0000,     -0.0314,  ...,     -0.0589,     -0.0401,     -0.0079],
        [    -0.0248,      0.0424,     -0.0156,  ...,      0.0112,     -0.0026,      0.0259],
        [    -0.0025,      0.0045,     -0.0258,  ...,      0.0234,      0.0523,      0.0156],
        ...,
        [     0.0189,      0.0232,      0.0378,  ...,     -0.0261,     -0.0010,     -0.0331],
        [     0.0059,      0.0288,      0.0226,  ...,      0.0088,      0.0135,     -0.0367],
        [    -0.0291,     -0.0036,     -0.0704,  ...,     -0.0378,      0.0220,      0.0081]], device='cuda:0', requires_grad=True)
K: tensor([-1.5547, -1.7422,  2.8906, -2.7031,  1.1953,  1.0078, -0.6406, -1.4688, -2.2500, -1.7109, -1.8750,  2.1875, -2.2344, -2.4375, -0.0649, -3.4531, -1.5000, -1.6797,  1.2031,  0.2715, -0.7344, -2.7031,  1.5625, -3.0312, -0.5898, -0.5078,  1.2188,  0.3008, -0.3242, -1.0000, -3.2656, -1.9141,
         1.1094, -2.3281,  0.7031, -0.9062, -2.4688, -1.5078, -0.4570,  0.0364, -0.3223,  1.7578,  2.2812,  2.4688, -0.2988,  2.7031, -0.5469,  3.0938, -2.3438, -1.8438, -0.3711,  3.1094,  1.3672, -1.6406, -0.8867, -1.4688,  1.1406,  0.1973, -1.8672,  2.5938,  0.6719,  2.8906,  2.1094, -0.3594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0257, -0.0016, -0.0070,  ...,  0.0260,  0.0089,  0.0248],
        [ 0.0457,  0.0110,  0.0433,  ..., -0.0444,  0.0207,  0.0169],
        [-0.0556, -0.0561, -0.0003,  ..., -0.0318,  0.0401,  0.0447],
        ...,
        [-0.0192,  0.0050,  0.0505,  ...,  0.0183,  0.0127, -0.0122],
        [ 0.0333,  0.0002, -0.0134,  ..., -0.0276,  0.0023, -0.0265],
        [ 0.0031,  0.0275, -0.0010,  ...,  0.0152, -0.0159,  0.0146]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8906,  1.9609, -0.1689, -1.0078,  0.8789,  1.3516, -0.3301, -1.3359, -1.0781,  0.3066, -0.8242, -0.2812,  0.1357, -0.2598,  1.0312, -1.2422,  0.6719,  0.9805,  0.2598,  0.2490, -1.2188,  0.5352,  0.7539, -1.4375, -0.5977,  0.8008,  0.4492,  0.2539, -0.2168, -0.1543,  0.0801, -1.1719,
        -1.0156, -1.1406,  0.4629, -2.0469, -3.4375, -0.3809,  1.0078,  0.3848, -2.9375, -0.2617,  0.3184,  1.0703,  0.2637,  0.8164,  0.2988, -0.9727,  0.4258, -0.0771,  1.0547, -0.6562, -0.2520, -0.7656, -2.6094, -0.3105, -1.2266,  1.0078, -0.2559, -1.5000, -0.6211,  0.1523, -1.2734,  0.5117],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      5.1250,      3.8438,      3.5781,      4.3125,      4.4688,      3.4219,      2.9531,      4.0625,      2.9688,      2.4219,      2.2656,      3.1094,      4.5312,      2.8125],
        [     0.0000,      6.6250,      4.5312,      4.1562,      5.9375,      5.3750,      4.5938,      5.7500,      4.3750,      3.3125,      3.2812,      4.1875,      5.4062,      4.5938,      3.9375],
        [     0.0000,      4.1875,      2.5312,      1.1250,      4.8125,      3.2188,      1.6484,      3.2500,      4.2500,      2.1719,      1.4062,      1.3828,      2.4844,      4.0000,      2.5625],
        [     0.0000,      1.1719,     -0.7930,     -1.6562,      1.4766,      1.1953,     -0.8633,     -0.3359,      3.2500,      0.6250,     -0.5938,     -1.6875,     -1.9922,      2.7031,      0.0009],
        [     0.0000,      5.0625,      3.4688,      2.0625,      5.9375,      5.0000,      3.5469,      2.5781,      5.3438,      2.7344,      1.5469,      1.9141,      0.4629,      5.1562,      2.5156],
        [     0.0000,      2.8594,      0.0967,     -0.2637,      3.8750,      2.5156,      2.2344,      1.0469,      4.6875,      1.2266,      0.1592,      0.3984,     -0.9648,      4.6875,      0.8867],
        [     0.0000,      2.6875,     -0.3887,     -1.4375,      3.4219,      1.2891,      0.9844,      1.1016,      5.1562,      1.1562,     -0.4023,     -1.2031,     -0.9688,      4.7500,      0.7344],
        [     0.0000,      4.7188,      2.3906,      0.9180,      5.0000,      3.4062,      1.6016,      2.8906,      4.3438,      3.0938,      2.0781,      0.7227,      1.0938,      3.9219,      3.2500],
        [     0.0000,      5.0625,      2.5312,      1.9766,      3.8750,      3.2969,      2.3281,      4.0625,      4.0938,      2.6719,      2.4688,      2.8594,      3.7344,      4.5000,      3.2188],
        [     0.0000,      5.3125,      2.7656,      2.2969,      4.8750,      3.9688,      2.7031,      4.5312,      6.6250,      4.2188,      4.0000,      4.1250,      4.7812,      7.0938,      4.0938],
        [     0.0000,      3.5000,      1.2812,      1.3672,      2.7500,      1.9766,      1.1172,      3.6250,      2.9219,      1.2266,      1.1406,      2.3750,      3.7188,      2.8906,      1.0078],
        [     0.0000,      4.4062,      1.6406,      0.9180,      3.8438,      2.5781,      1.5938,      2.3594,      4.8438,      2.2344,      1.8672,      1.9453,      2.2969,      5.2188,      2.3438],
        [     0.0000,      6.1250,      3.4062,      2.3750,      5.8438,      4.3750,      3.0469,      4.0938,      4.4688,      3.5469,      3.0781,      2.4375,      3.0781,      4.6875,      4.0625],
        [     0.0000,      6.2812,      4.2188,      3.8750,      4.8125,      4.4062,      3.2344,      5.0312,      3.3906,      3.4375,      3.2969,      3.6719,      5.3438,      3.5469,      2.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1954],
        [0.0490],
        [0.0484],
        [0.0656],
        [0.0462],
        [0.0547],
        [0.0734],
        [0.0341],
        [0.0190],
        [0.0198],
        [0.0283],
        [0.0156],
        [0.0174],
        [0.0180]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.2520 a:0.1104,:0.3203 red:0.1001atoes:0.2695,:0.3223 a:0.0923ery:0.1504)
ery
------
		( a:0.1104,:0.3203 red:0.1001atoes:0.2695,:0.3223 a:0.0923ery:0.1504thro:0.1426)
throcytes, and are the most common.
The flowers are usually
@ 3550 train 4.1826 , allloss: 4.1827, dt: 1259.38ms, fracRes: 0.2824, norm(attn): 0.4414, norm(output): 3.7031, norm(x): 3.0617, norm(y): 0.9921, norm:0.5855, tok/sec: 104076.34, flops:81.06, batch-reuse:1
@ 3551 train 4.2997 , allloss: 4.2998, dt: 900.36ms, fracRes: 0.2827, norm(attn): 0.4375, norm(output): 3.6562, norm(x): 3.0383, norm(y): 0.9920, norm:0.6289, tok/sec: 145576.73, flops:113.38, batch-reuse:1
@ 3552 train 4.1950 , allloss: 4.1952, dt: 901.34ms, fracRes: 0.2826, norm(attn): 0.4395, norm(output): 3.6719, norm(x): 3.0537, norm(y): 0.9921, norm:0.6213, tok/sec: 145418.66, flops:113.25, batch-reuse:1
@ 3553 train 4.1504 , allloss: 4.1507, dt: 903.81ms, fracRes: 0.2829, norm(attn): 0.4395, norm(output): 3.6562, norm(x): 3.0668, norm(y): 0.9923, norm:0.5887, tok/sec: 145021.89, flops:112.94, batch-reuse:1
@ 3554 train 4.1313 , allloss: 4.1314, dt: 891.26ms, fracRes: 0.2825, norm(attn): 0.4395, norm(output): 3.6875, norm(x): 3.0506, norm(y): 0.9922, norm:0.5897, tok/sec: 147064.31, flops:114.53, batch-reuse:1
@ 3555 train 4.1938 , allloss: 4.1939, dt: 906.31ms, fracRes: 0.2826, norm(attn): 0.4375, norm(output): 3.7344, norm(x): 3.0728, norm(y): 0.9922, norm:0.5968, tok/sec: 144620.98, flops:112.63, batch-reuse:1
@ 3556 train 4.1470 , allloss: 4.1472, dt: 908.91ms, fracRes: 0.2824, norm(attn): 0.4375, norm(output): 3.7188, norm(x): 3.0725, norm(y): 0.9920, norm:0.6106, tok/sec: 144207.85, flops:112.31, batch-reuse:1
@ 3557 train 4.2991 , allloss: 4.2992, dt: 901.76ms, fracRes: 0.2834, norm(attn): 0.4395, norm(output): 3.7500, norm(x): 3.1111, norm(y): 0.9924, norm:0.7392, tok/sec: 145351.76, flops:113.20, batch-reuse:1
@ 3558 train 4.0829 , allloss: 4.0829, dt: 896.09ms, fracRes: 0.2821, norm(attn): 0.4395, norm(output): 3.7188, norm(x): 3.0899, norm(y): 0.9922, norm:0.6144, tok/sec: 146270.86, flops:113.92, batch-reuse:1
@ 3559 train 4.1743 , allloss: 4.1743, dt: 911.97ms, fracRes: 0.2831, norm(attn): 0.4395, norm(output): 3.7344, norm(x): 3.0992, norm(y): 0.9923, norm:0.6057, tok/sec: 143723.44, flops:111.93, batch-reuse:1
@ 3560 train 4.1264 , allloss: 4.1266, dt: 906.59ms, fracRes: 0.2833, norm(attn): 0.4395, norm(output): 3.7500, norm(x): 3.1158, norm(y): 0.9923, norm:0.7297, tok/sec: 144577.28, flops:112.60, batch-reuse:1
@ 3561 train 4.1715 , allloss: 4.1715, dt: 909.67ms, fracRes: 0.2829, norm(attn): 0.4395, norm(output): 3.7188, norm(x): 3.0947, norm(y): 0.9922, norm:0.6612, tok/sec: 144087.81, flops:112.22, batch-reuse:1
@ 3562 train 4.1547 , allloss: 4.1548, dt: 895.11ms, fracRes: 0.2827, norm(attn): 0.4355, norm(output): 3.6562, norm(x): 3.0730, norm(y): 0.9921, norm:0.6608, tok/sec: 146430.52, flops:114.04, batch-reuse:1
@ 3563 train 4.1887 , allloss: 4.1888, dt: 884.68ms, fracRes: 0.2820, norm(attn): 0.4395, norm(output): 3.7188, norm(x): 3.0973, norm(y): 0.9920, norm:0.7142, tok/sec: 148158.32, flops:115.39, batch-reuse:1
@ 3564 train 4.1528 , allloss: 4.1529, dt: 900.16ms, fracRes: 0.2820, norm(attn): 0.4395, norm(output): 3.7500, norm(x): 3.1170, norm(y): 0.9921, norm:0.6463, tok/sec: 145609.31, flops:113.40, batch-reuse:1
@ 3565 train 4.1495 , allloss: 4.1496, dt: 900.43ms, fracRes: 0.2821, norm(attn): 0.4395, norm(output): 3.7188, norm(x): 3.0984, norm(y): 0.9922, norm:0.5645, tok/sec: 145566.28, flops:113.37, batch-reuse:1
@ 3566 train 4.1110 , allloss: 4.1113, dt: 883.41ms, fracRes: 0.2829, norm(attn): 0.4395, norm(output): 3.7344, norm(x): 3.1061, norm(y): 0.9924, norm:0.6395, tok/sec: 148370.40, flops:115.55, batch-reuse:1
@ 3567 train 4.2108 , allloss: 4.2109, dt: 874.66ms, fracRes: 0.2824, norm(attn): 0.4375, norm(output): 3.7344, norm(x): 3.0988, norm(y): 0.9923, norm:0.5675, tok/sec: 149854.19, flops:116.71, batch-reuse:1
@ 3568 train 4.0841 , allloss: 4.0848, dt: 900.92ms, fracRes: 0.2824, norm(attn): 0.4375, norm(output): 3.7188, norm(x): 3.1118, norm(y): 0.9924, norm:0.6660, tok/sec: 145486.39, flops:113.31, batch-reuse:1
@ 3569 train 4.2181 , allloss: 4.2181, dt: 893.07ms, fracRes: 0.2822, norm(attn): 0.4395, norm(output): 3.7344, norm(x): 3.1184, norm(y): 0.9923, norm:0.6442, tok/sec: 146764.83, flops:114.30, batch-reuse:1
@ 3570 train 4.1936 , allloss: 4.1937, dt: 889.81ms, fracRes: 0.2825, norm(attn): 0.4375, norm(output): 3.7344, norm(x): 3.1179, norm(y): 0.9924, norm:0.6546, tok/sec: 147302.83, flops:114.72, batch-reuse:1
@ 3571 train 4.1954 , allloss: 4.1955, dt: 900.54ms, fracRes: 0.2810, norm(attn): 0.4375, norm(output): 3.7344, norm(x): 3.1103, norm(y): 0.9922, norm:0.6579, tok/sec: 145548.67, flops:113.35, batch-reuse:1
@ 3572 train 4.1437 , allloss: 4.1437, dt: 915.58ms, fracRes: 0.2817, norm(attn): 0.4395, norm(output): 3.7656, norm(x): 3.1479, norm(y): 0.9922, norm:0.6780, tok/sec: 143157.64, flops:111.49, batch-reuse:1
@ 3573 train 4.2062 , allloss: 4.2063, dt: 894.75ms, fracRes: 0.2820, norm(attn): 0.4395, norm(output): 3.7500, norm(x): 3.1373, norm(y): 0.9924, norm:0.6740, tok/sec: 146490.76, flops:114.09, batch-reuse:1
@ 3574 train 4.0995 , allloss: 4.0997, dt: 912.97ms, fracRes: 0.2820, norm(attn): 0.4414, norm(output): 3.7812, norm(x): 3.1679, norm(y): 0.9926, norm:0.7222, tok/sec: 143566.78, flops:111.81, batch-reuse:1
@ 3575 train 4.0912 , allloss: 4.0913, dt: 904.11ms, fracRes: 0.2813, norm(attn): 0.4414, norm(output): 3.7969, norm(x): 3.2012, norm(y): 0.9923, norm:0.7262, tok/sec: 144973.86, flops:112.91, batch-reuse:1
@ 3576 train 4.0649 , allloss: 4.0653, dt: 913.24ms, fracRes: 0.2817, norm(attn): 0.4375, norm(output): 3.7812, norm(x): 3.1792, norm(y): 0.9924, norm:0.5855, tok/sec: 143523.98, flops:111.78, batch-reuse:1
@ 3577 train 4.2319 , allloss: 4.2320, dt: 913.71ms, fracRes: 0.2818, norm(attn): 0.4414, norm(output): 3.8125, norm(x): 3.2018, norm(y): 0.9926, norm:0.6738, tok/sec: 143450.09, flops:111.72, batch-reuse:1
@ 3578 train 4.1582 , allloss: 4.1586, dt: 910.93ms, fracRes: 0.2822, norm(attn): 0.4414, norm(output): 3.8125, norm(x): 3.2036, norm(y): 0.9926, norm:0.7135, tok/sec: 143888.05, flops:112.06, batch-reuse:1
@ 3579 train 4.1070 , allloss: 4.1071, dt: 894.07ms, fracRes: 0.2824, norm(attn): 0.4395, norm(output): 3.7969, norm(x): 3.1988, norm(y): 0.9927, norm:0.6235, tok/sec: 146602.29, flops:114.17, batch-reuse:1
@ 3580 train 4.1543 , allloss: 4.1546, dt: 899.53ms, fracRes: 0.2827, norm(attn): 0.4395, norm(output): 3.8438, norm(x): 3.2170, norm(y): 0.9928, norm:0.7066, tok/sec: 145711.39, flops:113.48, batch-reuse:1
@ 3581 train 4.1173 , allloss: 4.1175, dt: 900.81ms, fracRes: 0.2821, norm(attn): 0.4375, norm(output): 3.8281, norm(x): 3.2128, norm(y): 0.9928, norm:0.6680, tok/sec: 145503.83, flops:113.32, batch-reuse:1
@ 3582 train 4.1451 , allloss: 4.1458, dt: 903.98ms, fracRes: 0.2823, norm(attn): 0.4375, norm(output): 3.8125, norm(x): 3.2076, norm(y): 0.9928, norm:1.3059, tok/sec: 144993.97, flops:112.92, batch-reuse:1
@ 3583 train 4.2534 , allloss: 4.2535, dt: 902.86ms, fracRes: 0.2822, norm(attn): 0.4355, norm(output): 3.7969, norm(x): 3.2110, norm(y): 0.9927, norm:0.6287, tok/sec: 145174.70, flops:113.06, batch-reuse:1
@ 3584 train 4.1610 , allloss: 4.1611, dt: 896.19ms, fracRes: 0.2818, norm(attn): 0.4375, norm(output): 3.8281, norm(x): 3.2350, norm(y): 0.9928, norm:0.7263, tok/sec: 146253.97, flops:113.90, batch-reuse:1
@ 3585 train 4.1450 , allloss: 4.1452, dt: 899.40ms, fracRes: 0.2821, norm(attn): 0.4395, norm(output): 3.9531, norm(x): 3.2710, norm(y): 0.9928, norm:0.6367, tok/sec: 145732.09, flops:113.50, batch-reuse:1
@ 3586 train 4.0633 , allloss: 4.0634, dt: 898.92ms, fracRes: 0.2821, norm(attn): 0.4395, norm(output): 4.0000, norm(x): 3.3011, norm(y): 0.9928, norm:0.6597, tok/sec: 145810.05, flops:113.56, batch-reuse:1
@ 3587 train 4.1701 , allloss: 4.1707, dt: 903.04ms, fracRes: 0.2830, norm(attn): 0.4375, norm(output): 3.9531, norm(x): 3.2907, norm(y): 0.9929, norm:0.6653, tok/sec: 145145.07, flops:113.04, batch-reuse:1
@ 3588 train 4.1349 , allloss: 4.1351, dt: 909.98ms, fracRes: 0.2820, norm(attn): 0.4375, norm(output): 3.9844, norm(x): 3.3176, norm(y): 0.9928, norm:0.6823, tok/sec: 144039.08, flops:112.18, batch-reuse:1
@ 3589 train 4.2318 , allloss: 4.2320, dt: 907.53ms, fracRes: 0.2818, norm(attn): 0.4395, norm(output): 3.9531, norm(x): 3.3048, norm(y): 0.9930, norm:0.6561, tok/sec: 144427.28, flops:112.48, batch-reuse:1
@ 3590 train 4.0385 , allloss: 4.0387, dt: 897.15ms, fracRes: 0.2821, norm(attn): 0.4512, norm(output): 3.9844, norm(x): 3.3019, norm(y): 0.9934, norm:0.6739, tok/sec: 146097.88, flops:113.78, batch-reuse:1
@ 3591 train 4.1396 , allloss: 4.1401, dt: 903.01ms, fracRes: 0.2825, norm(attn): 0.4453, norm(output): 3.9844, norm(x): 3.3168, norm(y): 0.9933, norm:0.7759, tok/sec: 145150.59, flops:113.04, batch-reuse:1
@ 3592 train 4.0378 , allloss: 4.0383, dt: 900.12ms, fracRes: 0.2816, norm(attn): 0.4453, norm(output): 4.0000, norm(x): 3.3240, norm(y): 0.9932, norm:0.8309, tok/sec: 145615.64, flops:113.41, batch-reuse:1
@ 3593 train 4.2126 , allloss: 4.2130, dt: 904.99ms, fracRes: 0.2825, norm(attn): 0.4414, norm(output): 3.9844, norm(x): 3.3231, norm(y): 0.9935, norm:0.7731, tok/sec: 144832.16, flops:112.80, batch-reuse:1
@ 3594 train 4.1158 , allloss: 4.1161, dt: 896.65ms, fracRes: 0.2831, norm(attn): 0.4570, norm(output): 4.0312, norm(x): 3.3780, norm(y): 0.9937, norm:0.8387, tok/sec: 146180.43, flops:113.85, batch-reuse:1
@ 3595 train 4.1913 , allloss: 4.1917, dt: 893.14ms, fracRes: 0.2824, norm(attn): 0.4434, norm(output): 3.9844, norm(x): 3.3275, norm(y): 0.9935, norm:1.0553, tok/sec: 146753.78, flops:114.29, batch-reuse:1
@ 3596 train 4.1649 , allloss: 4.1651, dt: 892.39ms, fracRes: 0.2817, norm(attn): 0.4609, norm(output): 4.0625, norm(x): 3.3744, norm(y): 0.9935, norm:0.9130, tok/sec: 146878.27, flops:114.39, batch-reuse:1
@ 3597 train 4.1463 , allloss: 4.1466, dt: 914.50ms, fracRes: 0.2819, norm(attn): 0.4609, norm(output): 4.0312, norm(x): 3.3541, norm(y): 0.9935, norm:0.7981, tok/sec: 143326.48, flops:111.62, batch-reuse:1
@ 3598 train 4.1577 , allloss: 4.1582, dt: 910.73ms, fracRes: 0.2822, norm(attn): 0.4609, norm(output): 4.0000, norm(x): 3.3597, norm(y): 0.9936, norm:0.8532, tok/sec: 143919.20, flops:112.08, batch-reuse:1
@ 3599 train 4.1369 , allloss: 4.1372, dt: 916.94ms, fracRes: 0.2823, norm(attn): 0.4668, norm(output): 4.0312, norm(x): 3.3803, norm(y): 0.9938, norm:0.9143, tok/sec: 142944.79, flops:111.33, batch-reuse:1
@ 3600 train 4.0734 , allloss: 4.0737, dt: 886.94ms, fracRes: 0.2810, norm(attn): 0.4648, norm(output): 4.0625, norm(x): 3.4009, norm(y): 0.9935, norm:0.8415, tok/sec: 147780.64, flops:115.09, batch-reuse:1
@ 3601 train 4.1653 , allloss: 4.1655, dt: 896.66ms, fracRes: 0.2811, norm(attn): 0.4629, norm(output): 4.1250, norm(x): 3.4365, norm(y): 0.9936, norm:0.7620, tok/sec: 146178.53, flops:113.84, batch-reuse:1
@ 3602 train 4.1941 , allloss: 4.1943, dt: 895.25ms, fracRes: 0.2816, norm(attn): 0.4668, norm(output): 4.1875, norm(x): 3.4720, norm(y): 0.9937, norm:0.8674, tok/sec: 146408.84, flops:114.02, batch-reuse:1
@ 3603 train 4.1915 , allloss: 4.1918, dt: 903.99ms, fracRes: 0.2816, norm(attn): 0.4688, norm(output): 4.1875, norm(x): 3.4588, norm(y): 0.9938, norm:0.6407, tok/sec: 144992.56, flops:112.92, batch-reuse:1
@ 3604 train 4.1590 , allloss: 4.1596, dt: 906.24ms, fracRes: 0.2811, norm(attn): 0.4707, norm(output): 4.1875, norm(x): 3.4482, norm(y): 0.9938, norm:0.7966, tok/sec: 144633.07, flops:112.64, batch-reuse:1
@ 3605 train 4.1396 , allloss: 4.1399, dt: 910.99ms, fracRes: 0.2815, norm(attn): 0.4688, norm(output): 4.2500, norm(x): 3.5003, norm(y): 0.9938, norm:0.8715, tok/sec: 143878.86, flops:112.05, batch-reuse:1
@ 3606 train 4.1189 , allloss: 4.1192, dt: 886.73ms, fracRes: 0.2809, norm(attn): 0.4688, norm(output): 4.2188, norm(x): 3.4825, norm(y): 0.9939, norm:0.8022, tok/sec: 147814.62, flops:115.12, batch-reuse:1
@ 3607 train 4.1542 , allloss: 4.1545, dt: 898.99ms, fracRes: 0.2816, norm(attn): 0.4668, norm(output): 4.2500, norm(x): 3.5289, norm(y): 0.9939, norm:0.7475, tok/sec: 145799.69, flops:113.55, batch-reuse:1
@ 3608 train 4.1902 , allloss: 4.1904, dt: 908.01ms, fracRes: 0.2814, norm(attn): 0.4688, norm(output): 4.2500, norm(x): 3.5526, norm(y): 0.9940, norm:0.8392, tok/sec: 144351.40, flops:112.42, batch-reuse:1
@ 3609 train 4.2027 , allloss: 4.2029, dt: 886.09ms, fracRes: 0.2813, norm(attn): 0.4688, norm(output): 4.2500, norm(x): 3.5526, norm(y): 0.9940, norm:0.7809, tok/sec: 147920.97, flops:115.20, batch-reuse:1
@ 3610 train 4.0504 , allloss: 4.0506, dt: 902.13ms, fracRes: 0.2824, norm(attn): 0.4746, norm(output): 4.3438, norm(x): 3.5934, norm(y): 0.9943, norm:0.8234, tok/sec: 145290.91, flops:113.15, batch-reuse:1
@ 3611 train 4.1632 , allloss: 4.1634, dt: 890.47ms, fracRes: 0.2811, norm(attn): 0.4688, norm(output): 4.3750, norm(x): 3.6008, norm(y): 0.9939, norm:0.8346, tok/sec: 147193.70, flops:114.63, batch-reuse:1
@ 3612 train 4.1981 , allloss: 4.1983, dt: 899.08ms, fracRes: 0.2813, norm(attn): 0.4688, norm(output): 4.4375, norm(x): 3.5888, norm(y): 0.9939, norm:0.8854, tok/sec: 145785.39, flops:113.54, batch-reuse:1
@ 3613 train 4.1299 , allloss: 4.1301, dt: 889.52ms, fracRes: 0.2815, norm(attn): 0.4688, norm(output): 4.2812, norm(x): 3.5620, norm(y): 0.9939, norm:0.8584, tok/sec: 147351.08, flops:114.76, batch-reuse:1
@ 3614 train 4.1506 , allloss: 4.1508, dt: 895.84ms, fracRes: 0.2813, norm(attn): 0.4707, norm(output): 4.3438, norm(x): 3.5536, norm(y): 0.9941, norm:0.6880, tok/sec: 146312.16, flops:113.95, batch-reuse:1
@ 3615 train 4.1493 , allloss: 4.1495, dt: 894.10ms, fracRes: 0.2807, norm(attn): 0.4805, norm(output): 4.4375, norm(x): 3.5721, norm(y): 0.9943, norm:0.7807, tok/sec: 146596.55, flops:114.17, batch-reuse:1
@ 3616 train 4.0545 , allloss: 4.0547, dt: 899.05ms, fracRes: 0.2816, norm(attn): 0.4844, norm(output): 4.4375, norm(x): 3.5913, norm(y): 0.9945, norm:0.6338, tok/sec: 145789.87, flops:113.54, batch-reuse:1
@ 3617 train 4.0905 , allloss: 4.0907, dt: 896.81ms, fracRes: 0.2813, norm(attn): 0.4805, norm(output): 4.4375, norm(x): 3.5885, norm(y): 0.9945, norm:0.6916, tok/sec: 146153.54, flops:113.82, batch-reuse:1
@ 3618 train 4.0350 , allloss: 4.0352, dt: 882.02ms, fracRes: 0.2812, norm(attn): 0.4707, norm(output): 4.4375, norm(x): 3.6325, norm(y): 0.9944, norm:0.7329, tok/sec: 148604.94, flops:115.73, batch-reuse:1
@ 3619 train 4.1058 , allloss: 4.1060, dt: 903.13ms, fracRes: 0.2816, norm(attn): 0.4824, norm(output): 4.4688, norm(x): 3.5959, norm(y): 0.9947, norm:0.7503, tok/sec: 145131.43, flops:113.03, batch-reuse:1
@ 3620 train 4.1806 , allloss: 4.1808, dt: 889.48ms, fracRes: 0.2824, norm(attn): 0.4805, norm(output): 4.5000, norm(x): 3.6305, norm(y): 0.9949, norm:0.9685, tok/sec: 147357.63, flops:114.76, batch-reuse:1
@ 3621 train 4.1000 , allloss: 4.1002, dt: 901.82ms, fracRes: 0.2815, norm(attn): 0.4785, norm(output): 4.4688, norm(x): 3.6148, norm(y): 0.9948, norm:1.0186, tok/sec: 145340.96, flops:113.19, batch-reuse:1
@ 3622 train 4.1635 , allloss: 4.1636, dt: 897.99ms, fracRes: 0.2823, norm(attn): 0.4824, norm(output): 4.5000, norm(x): 3.6477, norm(y): 0.9949, norm:1.0292, tok/sec: 145961.65, flops:113.68, batch-reuse:1
@ 3623 train 4.1637 , allloss: 4.1638, dt: 903.07ms, fracRes: 0.2815, norm(attn): 0.4922, norm(output): 4.5000, norm(x): 3.6499, norm(y): 0.9950, norm:1.2242, tok/sec: 145140.66, flops:113.04, batch-reuse:1
@ 3624 train 4.0194 , allloss: 4.0195, dt: 915.56ms, fracRes: 0.2818, norm(attn): 0.4883, norm(output): 4.4688, norm(x): 3.6116, norm(y): 0.9952, norm:0.7693, tok/sec: 143159.80, flops:111.49, batch-reuse:1
@ 3625 train 4.1568 , allloss: 4.1570, dt: 915.45ms, fracRes: 0.2814, norm(attn): 0.4941, norm(output): 4.5312, norm(x): 3.6844, norm(y): 0.9950, norm:0.9996, tok/sec: 143177.40, flops:111.51, batch-reuse:1
@ 3626 train 4.0764 , allloss: 4.0769, dt: 896.49ms, fracRes: 0.2812, norm(attn): 0.4824, norm(output): 4.5000, norm(x): 3.6903, norm(y): 0.9951, norm:0.8245, tok/sec: 146206.40, flops:113.87, batch-reuse:1
@ 3627 train 4.1511 , allloss: 4.1513, dt: 894.96ms, fracRes: 0.2814, norm(attn): 0.4766, norm(output): 4.5000, norm(x): 3.6843, norm(y): 0.9953, norm:0.9048, tok/sec: 146454.90, flops:114.06, batch-reuse:1
@ 3628 train 4.1956 , allloss: 4.1958, dt: 904.97ms, fracRes: 0.2817, norm(attn): 0.4766, norm(output): 4.5312, norm(x): 3.6962, norm(y): 0.9953, norm:0.8674, tok/sec: 144835.41, flops:112.80, batch-reuse:1
@ 3629 train 4.0914 , allloss: 4.0916, dt: 901.34ms, fracRes: 0.2821, norm(attn): 0.4941, norm(output): 4.5938, norm(x): 3.7286, norm(y): 0.9955, norm:1.0412, tok/sec: 145418.43, flops:113.25, batch-reuse:1
@ 3630 train 4.0264 , allloss: 4.0265, dt: 903.46ms, fracRes: 0.2825, norm(attn): 0.4766, norm(output): 4.5312, norm(x): 3.7155, norm(y): 0.9956, norm:0.9300, tok/sec: 145078.04, flops:112.99, batch-reuse:1
@ 3631 train 4.0894 , allloss: 4.0896, dt: 909.11ms, fracRes: 0.2817, norm(attn): 0.4961, norm(output): 4.6875, norm(x): 3.7349, norm(y): 0.9956, norm:0.9286, tok/sec: 144176.39, flops:112.29, batch-reuse:1
@ 3632 train 4.0828 , allloss: 4.0829, dt: 897.98ms, fracRes: 0.2829, norm(attn): 0.4961, norm(output): 4.7188, norm(x): 3.7665, norm(y): 0.9959, norm:0.8859, tok/sec: 145962.58, flops:113.68, batch-reuse:1
@ 3633 train 4.1969 , allloss: 4.1971, dt: 898.70ms, fracRes: 0.2822, norm(attn): 0.4941, norm(output): 4.6250, norm(x): 3.7411, norm(y): 0.9961, norm:0.8480, tok/sec: 145845.53, flops:113.59, batch-reuse:1
@ 3634 train 4.0032 , allloss: 4.0033, dt: 903.99ms, fracRes: 0.2819, norm(attn): 0.5039, norm(output): 4.6875, norm(x): 3.7672, norm(y): 0.9962, norm:0.8148, tok/sec: 144992.71, flops:112.92, batch-reuse:1
@ 3635 train 4.0690 , allloss: 4.0693, dt: 903.87ms, fracRes: 0.2819, norm(attn): 0.5000, norm(output): 4.7500, norm(x): 3.8291, norm(y): 0.9959, norm:0.8086, tok/sec: 145012.68, flops:112.94, batch-reuse:1
@ 3636 train 4.0454 , allloss: 4.0455, dt: 902.62ms, fracRes: 0.2811, norm(attn): 0.5039, norm(output): 4.7812, norm(x): 3.8187, norm(y): 0.9959, norm:0.8696, tok/sec: 145212.43, flops:113.09, batch-reuse:1
@ 3637 train 4.1404 , allloss: 4.1406, dt: 910.88ms, fracRes: 0.2808, norm(attn): 0.5000, norm(output): 4.7188, norm(x): 3.8118, norm(y): 0.9961, norm:0.7987, tok/sec: 143896.11, flops:112.07, batch-reuse:1
@ 3638 train 4.1198 , allloss: 4.1201, dt: 915.74ms, fracRes: 0.2807, norm(attn): 0.5039, norm(output): 4.8125, norm(x): 3.8534, norm(y): 0.9960, norm:1.0356, tok/sec: 143132.37, flops:111.47, batch-reuse:1
@ 3639 train 4.1461 , allloss: 4.1462, dt: 878.79ms, fracRes: 0.2809, norm(attn): 0.5156, norm(output): 4.9062, norm(x): 3.8485, norm(y): 0.9963, norm:1.1360, tok/sec: 149150.27, flops:116.16, batch-reuse:1
@ 3640 train 4.0774 , allloss: 4.0776, dt: 907.38ms, fracRes: 0.2804, norm(attn): 0.5156, norm(output): 4.8750, norm(x): 3.8326, norm(y): 0.9964, norm:0.9165, tok/sec: 144450.66, flops:112.50, batch-reuse:1
@ 3641 train 4.1207 , allloss: 4.1210, dt: 915.12ms, fracRes: 0.2814, norm(attn): 0.5234, norm(output): 4.9688, norm(x): 3.9670, norm(y): 0.9964, norm:1.1658, tok/sec: 143229.73, flops:111.55, batch-reuse:1
@ 3642 train 4.3136 , allloss: 4.3137, dt: 908.65ms, fracRes: 0.2814, norm(attn): 0.5117, norm(output): 4.9688, norm(x): 3.9645, norm(y): 0.9963, norm:1.1803, tok/sec: 144249.48, flops:112.34, batch-reuse:1
@ 3643 train 4.1327 , allloss: 4.1328, dt: 893.90ms, fracRes: 0.2807, norm(attn): 0.5312, norm(output): 5.0000, norm(x): 3.9539, norm(y): 0.9964, norm:1.4786, tok/sec: 146628.61, flops:114.19, batch-reuse:1
@ 3644 train 4.1901 , allloss: 4.1902, dt: 882.50ms, fracRes: 0.2811, norm(attn): 0.5117, norm(output): 5.0000, norm(x): 3.9359, norm(y): 0.9965, norm:0.9114, tok/sec: 148523.00, flops:115.67, batch-reuse:1
@ 3645 train 4.1106 , allloss: 4.1108, dt: 925.22ms, fracRes: 0.2807, norm(attn): 0.5312, norm(output): 5.0312, norm(x): 3.9890, norm(y): 0.9967, norm:1.2240, tok/sec: 141665.80, flops:110.33, batch-reuse:1
@ 3646 train 4.0967 , allloss: 4.0968, dt: 924.74ms, fracRes: 0.2809, norm(attn): 0.5234, norm(output): 5.0312, norm(x): 4.0401, norm(y): 0.9969, norm:1.1443, tok/sec: 141738.74, flops:110.39, batch-reuse:1
@ 3647 train 4.1312 , allloss: 4.1314, dt: 911.01ms, fracRes: 0.2805, norm(attn): 0.5312, norm(output): 5.0625, norm(x): 4.0158, norm(y): 0.9970, norm:1.2069, tok/sec: 143874.72, flops:112.05, batch-reuse:1
@ 3648 train 4.1709 , allloss: 4.1710, dt: 896.40ms, fracRes: 0.2812, norm(attn): 0.5156, norm(output): 5.0625, norm(x): 4.0335, norm(y): 0.9968, norm:1.0739, tok/sec: 146220.48, flops:113.88, batch-reuse:1
@ 3649 train 4.1794 , allloss: 4.1797, dt: 913.60ms, fracRes: 0.2811, norm(attn): 0.5312, norm(output): 5.1250, norm(x): 4.0385, norm(y): 0.9971, norm:1.3617, tok/sec: 143468.32, flops:111.73, batch-reuse:1
@ 3650 train 4.1895 , allloss: 4.1897, dt: 908.57ms, fracRes: 0.2812, norm(attn): 0.5312, norm(output): 5.0938, norm(x): 4.0347, norm(y): 0.9974, norm:0.9201, tok/sec: 144261.48, flops:112.35, batch-reuse:1
@ 3651 train 4.1444 , allloss: 4.1445, dt: 887.19ms, fracRes: 0.2816, norm(attn): 0.5312, norm(output): 5.1562, norm(x): 4.0652, norm(y): 0.9975, norm:0.9980, tok/sec: 147738.31, flops:115.06, batch-reuse:1
@ 3652 train 4.0580 , allloss: 4.0581, dt: 904.66ms, fracRes: 0.2814, norm(attn): 0.5312, norm(output): 5.1875, norm(x): 4.0860, norm(y): 0.9974, norm:0.9271, tok/sec: 144885.53, flops:112.84, batch-reuse:1
@ 3653 train 4.0590 , allloss: 4.0592, dt: 903.59ms, fracRes: 0.2818, norm(attn): 0.5352, norm(output): 5.1875, norm(x): 4.0281, norm(y): 0.9977, norm:1.0763, tok/sec: 145057.56, flops:112.97, batch-reuse:1
@ 3654 train 4.2119 , allloss: 4.2120, dt: 901.11ms, fracRes: 0.2814, norm(attn): 0.5312, norm(output): 5.1250, norm(x): 4.0672, norm(y): 0.9977, norm:1.1218, tok/sec: 145456.67, flops:113.28, batch-reuse:1
@ 3655 train 4.2227 , allloss: 4.2228, dt: 911.43ms, fracRes: 0.2814, norm(attn): 0.5469, norm(output): 5.3750, norm(x): 4.1345, norm(y): 0.9974, norm:1.7829, tok/sec: 143809.57, flops:112.00, batch-reuse:1
@ 3656 train 4.1838 , allloss: 4.1839, dt: 907.53ms, fracRes: 0.2809, norm(attn): 0.5352, norm(output): 5.2812, norm(x): 4.1453, norm(y): 0.9975, norm:1.2458, tok/sec: 144427.82, flops:112.48, batch-reuse:1
@ 3657 train 4.1993 , allloss: 4.1998, dt: 910.15ms, fracRes: 0.2806, norm(attn): 0.5391, norm(output): 5.2500, norm(x): 4.1063, norm(y): 0.9978, norm:1.2364, tok/sec: 144012.06, flops:112.16, batch-reuse:1
@ 3658 train 4.0861 , allloss: 4.0863, dt: 907.12ms, fracRes: 0.2805, norm(attn): 0.5391, norm(output): 5.3125, norm(x): 4.1031, norm(y): 0.9978, norm:0.9136, tok/sec: 144492.31, flops:112.53, batch-reuse:1
@ 3659 train 4.1459 , allloss: 4.1461, dt: 897.09ms, fracRes: 0.2812, norm(attn): 0.5391, norm(output): 5.3438, norm(x): 4.1531, norm(y): 0.9979, norm:1.0779, tok/sec: 146108.25, flops:113.79, batch-reuse:1
@ 3660 train 3.9757 , allloss: 3.9759, dt: 912.69ms, fracRes: 0.2809, norm(attn): 0.5352, norm(output): 5.2812, norm(x): 4.1384, norm(y): 0.9979, norm:1.0474, tok/sec: 143610.69, flops:111.84, batch-reuse:1
@ 3661 train 4.0257 , allloss: 4.0259, dt: 896.02ms, fracRes: 0.2805, norm(attn): 0.5391, norm(output): 5.3125, norm(x): 4.1073, norm(y): 0.9979, norm:1.0069, tok/sec: 146282.65, flops:113.93, batch-reuse:1
@ 3662 train 3.8786 , allloss: 3.8787, dt: 910.46ms, fracRes: 0.2804, norm(attn): 0.5430, norm(output): 5.3125, norm(x): 4.1205, norm(y): 0.9982, norm:1.0698, tok/sec: 143962.28, flops:112.12, batch-reuse:1
@ 3663 train 3.9669 , allloss: 3.9671, dt: 899.51ms, fracRes: 0.2807, norm(attn): 0.5391, norm(output): 5.3125, norm(x): 4.1005, norm(y): 0.9982, norm:1.0755, tok/sec: 145714.25, flops:113.48, batch-reuse:1
@ 3664 train 4.0485 , allloss: 4.0486, dt: 905.06ms, fracRes: 0.2802, norm(attn): 0.5391, norm(output): 5.3125, norm(x): 4.1124, norm(y): 0.9981, norm:1.1964, tok/sec: 144821.02, flops:112.79, batch-reuse:1
@ 3665 train 4.0451 , allloss: 4.0453, dt: 908.54ms, fracRes: 0.2807, norm(attn): 0.5469, norm(output): 5.3125, norm(x): 4.0994, norm(y): 0.9982, norm:1.1813, tok/sec: 144266.66, flops:112.36, batch-reuse:1
@ 3666 train 3.9237 , allloss: 3.9239, dt: 891.19ms, fracRes: 0.2813, norm(attn): 0.5312, norm(output): 5.3125, norm(x): 4.1502, norm(y): 0.9981, norm:1.5829, tok/sec: 147074.90, flops:114.54, batch-reuse:1
@ 3667 train 4.0478 , allloss: 4.0479, dt: 898.71ms, fracRes: 0.2817, norm(attn): 0.5430, norm(output): 5.4688, norm(x): 4.1641, norm(y): 0.9983, norm:1.3329, tok/sec: 145844.40, flops:113.58, batch-reuse:1
@ 3668 train 4.0322 , allloss: 4.0323, dt: 900.89ms, fracRes: 0.2815, norm(attn): 0.5391, norm(output): 5.3438, norm(x): 4.0969, norm(y): 0.9985, norm:1.1731, tok/sec: 145491.51, flops:113.31, batch-reuse:1
@ 3669 train 4.0729 , allloss: 4.0731, dt: 902.12ms, fracRes: 0.2815, norm(attn): 0.5391, norm(output): 5.3438, norm(x): 4.1066, norm(y): 0.9985, norm:1.4523, tok/sec: 145293.75, flops:113.16, batch-reuse:1
@ 3670 train 4.0917 , allloss: 4.0919, dt: 908.87ms, fracRes: 0.2808, norm(attn): 0.5508, norm(output): 5.3438, norm(x): 4.1245, norm(y): 0.9988, norm:1.2079, tok/sec: 144215.00, flops:112.32, batch-reuse:1
@ 3671 train 3.9494 , allloss: 3.9495, dt: 898.85ms, fracRes: 0.2805, norm(attn): 0.5469, norm(output): 5.4062, norm(x): 4.1246, norm(y): 0.9988, norm:1.1409, tok/sec: 145821.23, flops:113.57, batch-reuse:1
@ 3672 train 4.0104 , allloss: 4.0105, dt: 897.77ms, fracRes: 0.2811, norm(attn): 0.5547, norm(output): 5.3438, norm(x): 4.1194, norm(y): 0.9989, norm:1.0444, tok/sec: 145997.67, flops:113.70, batch-reuse:1
@ 3673 train 4.0059 , allloss: 4.0061, dt: 897.00ms, fracRes: 0.2806, norm(attn): 0.5625, norm(output): 5.3750, norm(x): 4.0693, norm(y): 0.9992, norm:1.4239, tok/sec: 146123.16, flops:113.80, batch-reuse:1
@ 3674 train 3.9680 , allloss: 3.9681, dt: 907.44ms, fracRes: 0.2813, norm(attn): 0.5508, norm(output): 5.4375, norm(x): 4.1438, norm(y): 0.9988, norm:1.2724, tok/sec: 144441.21, flops:112.49, batch-reuse:1
@ 3675 train 4.0497 , allloss: 4.0499, dt: 913.56ms, fracRes: 0.2809, norm(attn): 0.5547, norm(output): 5.4375, norm(x): 4.0745, norm(y): 0.9990, norm:1.4317, tok/sec: 143474.12, flops:111.74, batch-reuse:1
@ 3676 train 4.0955 , allloss: 4.0965, dt: 882.46ms, fracRes: 0.2819, norm(attn): 0.5430, norm(output): 5.2500, norm(x): 4.0792, norm(y): 0.9990, norm:6.5668, tok/sec: 148530.63, flops:115.68, batch-reuse:1
@ 3677 train 4.0908 , allloss: 4.0909, dt: 895.14ms, fracRes: 0.2810, norm(attn): 0.5547, norm(output): 5.4688, norm(x): 4.1308, norm(y): 0.9988, norm:1.9860, tok/sec: 146426.46, flops:114.04, batch-reuse:1
@ 3678 train 4.0623 , allloss: 4.0625, dt: 903.64ms, fracRes: 0.2810, norm(attn): 0.5391, norm(output): 5.3750, norm(x): 4.0563, norm(y): 0.9991, norm:1.1462, tok/sec: 145049.37, flops:112.96, batch-reuse:1
@ 3679 train 3.9806 , allloss: 3.9816, dt: 899.08ms, fracRes: 0.2815, norm(attn): 0.5352, norm(output): 5.0938, norm(x): 3.9994, norm(y): 0.9997, norm:1.0395, tok/sec: 145784.96, flops:113.54, batch-reuse:1
@ 3680 train 3.9557 , allloss: 3.9563, dt: 916.80ms, fracRes: 0.2800, norm(attn): 0.5352, norm(output): 5.3125, norm(x): 4.0954, norm(y): 0.9993, norm:1.3160, tok/sec: 142967.51, flops:111.34, batch-reuse:1
@ 3681 train 3.9597 , allloss: 3.9598, dt: 904.00ms, fracRes: 0.2805, norm(attn): 0.5312, norm(output): 5.3750, norm(x): 4.0928, norm(y): 0.9992, norm:1.1680, tok/sec: 144990.42, flops:112.92, batch-reuse:1
@ 3682 train 3.9218 , allloss: 3.9221, dt: 882.81ms, fracRes: 0.2807, norm(attn): 0.5273, norm(output): 5.1875, norm(x): 4.0380, norm(y): 0.9995, norm:1.0199, tok/sec: 148471.06, flops:115.63, batch-reuse:1
@ 3683 train 4.0569 , allloss: 4.0571, dt: 889.29ms, fracRes: 0.2811, norm(attn): 0.5391, norm(output): 5.3438, norm(x): 4.0902, norm(y): 0.9997, norm:1.3402, tok/sec: 147390.30, flops:114.79, batch-reuse:1
@ 3684 train 4.0975 , allloss: 4.0977, dt: 913.84ms, fracRes: 0.2810, norm(attn): 0.5391, norm(output): 5.3438, norm(x): 4.0695, norm(y): 0.9998, norm:0.8497, tok/sec: 143430.51, flops:111.70, batch-reuse:1
@ 3685 train 3.9440 , allloss: 3.9442, dt: 904.95ms, fracRes: 0.2806, norm(attn): 0.5391, norm(output): 5.3750, norm(x): 4.0978, norm(y): 0.9998, norm:1.0456, tok/sec: 144838.19, flops:112.80, batch-reuse:1
@ 3686 train 3.9567 , allloss: 3.9567, dt: 916.67ms, fracRes: 0.2811, norm(attn): 0.5352, norm(output): 5.4688, norm(x): 4.1127, norm(y): 0.9998, norm:1.1676, tok/sec: 142987.36, flops:111.36, batch-reuse:1
@ 3687 train 4.0177 , allloss: 4.0178, dt: 912.00ms, fracRes: 0.2810, norm(attn): 0.5508, norm(output): 5.5000, norm(x): 4.1364, norm(y): 1.0000, norm:1.2656, tok/sec: 143719.31, flops:111.93, batch-reuse:1
@ 3688 train 4.0827 , allloss: 4.0827, dt: 916.02ms, fracRes: 0.2810, norm(attn): 0.5586, norm(output): 5.4688, norm(x): 4.0990, norm(y): 1.0002, norm:1.3741, tok/sec: 143089.34, flops:111.44, batch-reuse:1
@ 3689 train 4.0759 , allloss: 4.0759, dt: 917.90ms, fracRes: 0.2812, norm(attn): 0.5430, norm(output): 5.4375, norm(x): 4.1248, norm(y): 1.0003, norm:1.1334, tok/sec: 142795.65, flops:111.21, batch-reuse:1
@ 3690 train 3.9484 , allloss: 3.9485, dt: 916.08ms, fracRes: 0.2809, norm(attn): 0.5547, norm(output): 5.5000, norm(x): 4.1124, norm(y): 1.0002, norm:1.5665, tok/sec: 143079.95, flops:111.43, batch-reuse:1
@ 3691 train 4.0535 , allloss: 4.0536, dt: 919.67ms, fracRes: 0.2817, norm(attn): 0.5469, norm(output): 5.5000, norm(x): 4.1560, norm(y): 1.0003, norm:1.1135, tok/sec: 142520.45, flops:111.00, batch-reuse:1
@ 3692 train 3.9836 , allloss: 3.9837, dt: 914.06ms, fracRes: 0.2828, norm(attn): 0.5625, norm(output): 5.5000, norm(x): 4.1758, norm(y): 1.0007, norm:1.0730, tok/sec: 143395.16, flops:111.68, batch-reuse:1
@ 3693 train 4.0609 , allloss: 4.0610, dt: 904.39ms, fracRes: 0.2813, norm(attn): 0.5586, norm(output): 5.5000, norm(x): 4.2078, norm(y): 1.0005, norm:1.3229, tok/sec: 144929.30, flops:112.87, batch-reuse:1
@ 3694 train 4.0344 , allloss: 4.0348, dt: 916.47ms, fracRes: 0.2808, norm(attn): 0.5586, norm(output): 5.5312, norm(x): 4.2059, norm(y): 1.0003, norm:1.3418, tok/sec: 143018.13, flops:111.38, batch-reuse:1
@ 3695 train 4.0178 , allloss: 4.0179, dt: 913.68ms, fracRes: 0.2812, norm(attn): 0.5664, norm(output): 5.5625, norm(x): 4.2445, norm(y): 1.0007, norm:1.1097, tok/sec: 143455.06, flops:111.72, batch-reuse:1
@ 3696 train 4.0369 , allloss: 4.0372, dt: 909.99ms, fracRes: 0.2819, norm(attn): 0.5664, norm(output): 5.6250, norm(x): 4.2734, norm(y): 1.0008, norm:1.1923, tok/sec: 144036.89, flops:112.18, batch-reuse:1
@ 3697 train 4.0309 , allloss: 4.0311, dt: 915.45ms, fracRes: 0.2806, norm(attn): 0.5664, norm(output): 5.6875, norm(x): 4.3178, norm(y): 1.0004, norm:1.5116, tok/sec: 143178.29, flops:111.51, batch-reuse:1
@ 3698 train 4.1262 , allloss: 4.1267, dt: 914.65ms, fracRes: 0.2819, norm(attn): 0.5664, norm(output): 5.6562, norm(x): 4.3136, norm(y): 1.0009, norm:1.3368, tok/sec: 143302.16, flops:111.60, batch-reuse:1
@ 3699 train 3.9106 , allloss: 3.9106, dt: 915.71ms, fracRes: 0.2812, norm(attn): 0.5703, norm(output): 5.7500, norm(x): 4.2793, norm(y): 1.0009, norm:1.2851, tok/sec: 143137.55, flops:111.48, batch-reuse:1
@ 3700 train 4.0243 , allloss: 4.0245, dt: 884.72ms, fracRes: 0.2813, norm(attn): 0.5664, norm(output): 5.6562, norm(x): 4.2909, norm(y): 1.0010, norm:1.4722, tok/sec: 148150.81, flops:115.38, batch-reuse:1
@ 3701 train 4.1112 , allloss: 4.1114, dt: 911.72ms, fracRes: 0.2811, norm(attn): 0.5664, norm(output): 5.8125, norm(x): 4.2873, norm(y): 1.0008, norm:1.6822, tok/sec: 143763.96, flops:111.96, batch-reuse:1
@ 3702 train 4.0401 , allloss: 4.0401, dt: 890.11ms, fracRes: 0.2806, norm(attn): 0.5625, norm(output): 5.6250, norm(x): 4.2844, norm(y): 1.0010, norm:1.2256, tok/sec: 147254.50, flops:114.68, batch-reuse:1
@ 3703 train 3.9633 , allloss: 3.9634, dt: 891.14ms, fracRes: 0.2810, norm(attn): 0.5664, norm(output): 5.6875, norm(x): 4.2956, norm(y): 1.0015, norm:1.2719, tok/sec: 147084.10, flops:114.55, batch-reuse:1
@ 3704 train 3.9742 , allloss: 3.9743, dt: 920.64ms, fracRes: 0.2805, norm(attn): 0.5703, norm(output): 5.8125, norm(x): 4.3224, norm(y): 1.0015, norm:1.2797, tok/sec: 142370.12, flops:110.88, batch-reuse:1
@ 3705 train 4.0730 , allloss: 4.0732, dt: 913.04ms, fracRes: 0.2797, norm(attn): 0.5703, norm(output): 5.8438, norm(x): 4.3785, norm(y): 1.0013, norm:1.2211, tok/sec: 143555.94, flops:111.80, batch-reuse:1
@ 3706 train 4.0092 , allloss: 4.0097, dt: 912.53ms, fracRes: 0.2806, norm(attn): 0.5859, norm(output): 5.8750, norm(x): 4.3504, norm(y): 1.0014, norm:1.4186, tok/sec: 143636.32, flops:111.86, batch-reuse:1
@ 3707 train 4.1436 , allloss: 4.1445, dt: 921.55ms, fracRes: 0.2815, norm(attn): 0.5703, norm(output): 5.8438, norm(x): 4.3761, norm(y): 1.0018, norm:1.2769, tok/sec: 142229.90, flops:110.77, batch-reuse:1
@ 3708 train 4.1979 , allloss: 4.1987, dt: 923.77ms, fracRes: 0.2813, norm(attn): 0.5703, norm(output): 5.9062, norm(x): 4.4825, norm(y): 1.0019, norm:1.7833, tok/sec: 141887.44, flops:110.50, batch-reuse:1
@ 3709 train 4.1975 , allloss: 4.1980, dt: 920.95ms, fracRes: 0.2812, norm(attn): 0.5859, norm(output): 6.0000, norm(x): 4.4964, norm(y): 1.0017, norm:1.5933, tok/sec: 142323.35, flops:110.84, batch-reuse:1
@ 3710 train 4.2314 , allloss: 4.2318, dt: 920.42ms, fracRes: 0.2815, norm(attn): 0.5859, norm(output): 6.0000, norm(x): 4.4565, norm(y): 1.0020, norm:1.5442, tok/sec: 142405.16, flops:110.91, batch-reuse:1
@ 3711 train 4.2551 , allloss: 4.2554, dt: 933.84ms, fracRes: 0.2812, norm(attn): 0.5859, norm(output): 6.0000, norm(x): 4.4825, norm(y): 1.0018, norm:1.5001, tok/sec: 140358.30, flops:109.31, batch-reuse:1
@ 3712 train 4.2348 , allloss: 4.2350, dt: 919.76ms, fracRes: 0.2811, norm(attn): 0.6016, norm(output): 6.0000, norm(x): 4.4796, norm(y): 1.0020, norm:1.5790, tok/sec: 142507.08, flops:110.99, batch-reuse:1
@ 3713 train 4.3212 , allloss: 4.3224, dt: 930.47ms, fracRes: 0.2824, norm(attn): 0.6016, norm(output): 6.0000, norm(x): 4.5612, norm(y): 1.0021, norm:1.8203, tok/sec: 140866.63, flops:109.71, batch-reuse:1
@ 3714 train 4.2383 , allloss: 4.2385, dt: 921.03ms, fracRes: 0.2813, norm(attn): 0.6016, norm(output): 6.0938, norm(x): 4.5724, norm(y): 1.0019, norm:1.9249, tok/sec: 142310.42, flops:110.83, batch-reuse:1
@ 3715 train 4.2274 , allloss: 4.2275, dt: 924.44ms, fracRes: 0.2812, norm(attn): 0.6016, norm(output): 6.0312, norm(x): 4.5630, norm(y): 1.0023, norm:1.4943, tok/sec: 141785.86, flops:110.42, batch-reuse:1
@ 3716 train 4.1451 , allloss: 4.1452, dt: 918.21ms, fracRes: 0.2817, norm(attn): 0.6055, norm(output): 6.0312, norm(x): 4.5277, norm(y): 1.0026, norm:1.5105, tok/sec: 142747.67, flops:111.17, batch-reuse:1
@ 3717 train 4.1835 , allloss: 4.1837, dt: 926.28ms, fracRes: 0.2813, norm(attn): 0.6055, norm(output): 6.1250, norm(x): 4.5689, norm(y): 1.0025, norm:1.5993, tok/sec: 141503.25, flops:110.20, batch-reuse:1
@ 3718 train 4.1545 , allloss: 4.1546, dt: 915.77ms, fracRes: 0.2816, norm(attn): 0.6211, norm(output): 6.1875, norm(x): 4.5619, norm(y): 1.0028, norm:1.8562, tok/sec: 143127.78, flops:111.47, batch-reuse:1
@ 3719 train 4.2409 , allloss: 4.2411, dt: 925.63ms, fracRes: 0.2813, norm(attn): 0.6211, norm(output): 6.3438, norm(x): 4.6770, norm(y): 1.0028, norm:1.9168, tok/sec: 141602.27, flops:110.28, batch-reuse:1
@ 3720 train 4.1506 , allloss: 4.1510, dt: 892.23ms, fracRes: 0.2814, norm(attn): 0.6289, norm(output): 6.4688, norm(x): 4.6870, norm(y): 1.0032, norm:2.0952, tok/sec: 146903.94, flops:114.41, batch-reuse:1
@ 3721 train 4.1649 , allloss: 4.1652, dt: 910.60ms, fracRes: 0.2816, norm(attn): 0.6289, norm(output): 6.4688, norm(x): 4.7238, norm(y): 1.0035, norm:1.3695, tok/sec: 143939.89, flops:112.10, batch-reuse:1
@ 3722 train 4.1012 , allloss: 4.1015, dt: 893.73ms, fracRes: 0.2818, norm(attn): 0.6289, norm(output): 6.5000, norm(x): 4.7542, norm(y): 1.0032, norm:1.7681, tok/sec: 146657.28, flops:114.22, batch-reuse:1
@ 3723 train 4.1988 , allloss: 4.1995, dt: 904.74ms, fracRes: 0.2818, norm(attn): 0.6250, norm(output): 6.5000, norm(x): 4.8123, norm(y): 1.0033, norm:2.0476, tok/sec: 144873.16, flops:112.83, batch-reuse:1
@ 3724 train 4.2467 , allloss: 4.2478, dt: 892.46ms, fracRes: 0.2821, norm(attn): 0.6289, norm(output): 6.5312, norm(x): 4.8642, norm(y): 1.0035, norm:2.0768, tok/sec: 146866.46, flops:114.38, batch-reuse:1
@ 3725 train 4.2251 , allloss: 4.2258, dt: 916.57ms, fracRes: 0.2819, norm(attn): 0.6406, norm(output): 6.5938, norm(x): 4.8840, norm(y): 1.0035, norm:2.0969, tok/sec: 143001.98, flops:111.37, batch-reuse:1
@ 3726 train 4.2733 , allloss: 4.2999, dt: 917.88ms, fracRes: 0.2821, norm(attn): 0.6367, norm(output): 6.5625, norm(x): 4.9475, norm(y): 1.0040, norm:2.9804, tok/sec: 142798.35, flops:111.21, batch-reuse:1
@ 3727 train 4.2123 , allloss: 4.2125, dt: 912.52ms, fracRes: 0.2817, norm(attn): 0.6406, norm(output): 6.7500, norm(x): 4.9064, norm(y): 1.0036, norm:1.9881, tok/sec: 143637.67, flops:111.87, batch-reuse:1
@ 3728 train 4.1995 , allloss: 4.1997, dt: 922.70ms, fracRes: 0.2814, norm(attn): 0.6484, norm(output): 6.6875, norm(x): 4.8645, norm(y): 1.0041, norm:2.3160, tok/sec: 142052.43, flops:110.63, batch-reuse:1
@ 3729 train 4.2240 , allloss: 4.2243, dt: 918.55ms, fracRes: 0.2810, norm(attn): 0.6641, norm(output): 6.8125, norm(x): 4.8870, norm(y): 1.0042, norm:2.1129, tok/sec: 142694.83, flops:111.13, batch-reuse:1
@ 3730 train 4.2490 , allloss: 4.2528, dt: 895.89ms, fracRes: 0.2811, norm(attn): 0.6367, norm(output): 6.7500, norm(x): 4.9879, norm(y): 1.0042, norm:2.0438, tok/sec: 146303.05, flops:113.94, batch-reuse:1
@ 3731 train 4.1667 , allloss: 4.1669, dt: 909.71ms, fracRes: 0.2809, norm(attn): 0.6484, norm(output): 6.8750, norm(x): 4.9785, norm(y): 1.0042, norm:2.4323, tok/sec: 144081.02, flops:112.21, batch-reuse:1
@ 3732 train 4.2652 , allloss: 4.2655, dt: 892.29ms, fracRes: 0.2811, norm(attn): 0.6680, norm(output): 6.9375, norm(x): 4.9788, norm(y): 1.0050, norm:1.9891, tok/sec: 146893.77, flops:114.40, batch-reuse:1
@ 3733 train 4.2798 , allloss: 4.2807, dt: 906.76ms, fracRes: 0.2811, norm(attn): 0.6680, norm(output): 6.9688, norm(x): 5.0637, norm(y): 1.0052, norm:2.3763, tok/sec: 144549.83, flops:112.58, batch-reuse:1
@ 3734 train 4.2559 , allloss: 4.2561, dt: 907.41ms, fracRes: 0.2804, norm(attn): 0.6836, norm(output): 7.0000, norm(x): 4.9932, norm(y): 1.0049, norm:3.1142, tok/sec: 144446.26, flops:112.50, batch-reuse:1
@ 3735 train 4.3259 , allloss: 4.3261, dt: 913.70ms, fracRes: 0.2812, norm(attn): 0.6758, norm(output): 7.0312, norm(x): 5.1399, norm(y): 1.0052, norm:3.1475, tok/sec: 143451.92, flops:111.72, batch-reuse:1
@ 3736 train 4.3306 , allloss: 4.3308, dt: 917.28ms, fracRes: 0.2810, norm(attn): 0.6797, norm(output): 7.0312, norm(x): 5.1020, norm(y): 1.0052, norm:2.6244, tok/sec: 142892.48, flops:111.29, batch-reuse:1
@ 3737 train 4.2174 , allloss: 4.2175, dt: 902.69ms, fracRes: 0.2809, norm(attn): 0.6875, norm(output): 7.1250, norm(x): 5.2195, norm(y): 1.0053, norm:3.2686, tok/sec: 145201.84, flops:113.08, batch-reuse:1
@ 3738 train 4.2079 , allloss: 4.2081, dt: 910.86ms, fracRes: 0.2810, norm(attn): 0.6914, norm(output): 7.2188, norm(x): 5.2234, norm(y): 1.0055, norm:3.1127, tok/sec: 143898.41, flops:112.07, batch-reuse:1
@ 3739 train 4.2152 , allloss: 4.2155, dt: 904.47ms, fracRes: 0.2808, norm(attn): 0.6953, norm(output): 7.3750, norm(x): 5.2923, norm(y): 1.0058, norm:2.2151, tok/sec: 144916.16, flops:112.86, batch-reuse:1
@ 3740 train 4.3054 , allloss: 4.3056, dt: 909.84ms, fracRes: 0.2801, norm(attn): 0.7031, norm(output): 7.4688, norm(x): 5.3078, norm(y): 1.0051, norm:3.2782, tok/sec: 144060.10, flops:112.19, batch-reuse:1
@ 3741 train 4.4300 , allloss: 4.4301, dt: 902.34ms, fracRes: 0.2810, norm(attn): 0.7031, norm(output): 7.5000, norm(x): 5.3796, norm(y): 1.0055, norm:2.8247, tok/sec: 145257.20, flops:113.13, batch-reuse:1
@ 3742 train 4.1961 , allloss: 4.1964, dt: 905.04ms, fracRes: 0.2808, norm(attn): 0.7148, norm(output): 7.5000, norm(x): 5.3736, norm(y): 1.0060, norm:2.9438, tok/sec: 144824.34, flops:112.79, batch-reuse:1
@ 3743 train 4.2658 , allloss: 4.2662, dt: 890.41ms, fracRes: 0.2812, norm(attn): 0.7109, norm(output): 7.5000, norm(x): 5.4148, norm(y): 1.0063, norm:2.9590, tok/sec: 147203.28, flops:114.64, batch-reuse:1
@ 3744 train 4.4678 , allloss: 4.4679, dt: 896.27ms, fracRes: 0.2808, norm(attn): 0.7266, norm(output): 7.5938, norm(x): 5.4676, norm(y): 1.0061, norm:3.1104, tok/sec: 146241.52, flops:113.89, batch-reuse:1
@ 3745 train 4.2558 , allloss: 4.2559, dt: 907.96ms, fracRes: 0.2811, norm(attn): 0.7383, norm(output): 7.7188, norm(x): 5.5010, norm(y): 1.0065, norm:2.5456, tok/sec: 144358.53, flops:112.43, batch-reuse:1
@ 3746 train 4.2429 , allloss: 4.2430, dt: 911.01ms, fracRes: 0.2814, norm(attn): 0.7461, norm(output): 7.8750, norm(x): 5.5749, norm(y): 1.0067, norm:3.7651, tok/sec: 143876.27, flops:112.05, batch-reuse:1
@ 3747 train 4.2265 , allloss: 4.2266, dt: 907.26ms, fracRes: 0.2812, norm(attn): 0.7500, norm(output): 7.9688, norm(x): 5.5171, norm(y): 1.0065, norm:3.4868, tok/sec: 144470.55, flops:112.51, batch-reuse:1
@ 3748 train 4.2451 , allloss: 4.2452, dt: 891.54ms, fracRes: 0.2810, norm(attn): 0.7461, norm(output): 7.9688, norm(x): 5.6493, norm(y): 1.0069, norm:3.2808, tok/sec: 147016.76, flops:114.50, batch-reuse:1
@ 3749 train 4.2671 , allloss: 4.2671, dt: 904.51ms, fracRes: 0.2809, norm(attn): 0.7539, norm(output): 8.0000, norm(x): 5.5749, norm(y): 1.0071, norm:3.1597, tok/sec: 144908.78, flops:112.86, batch-reuse:1
@ 3750 train 4.3012 , allloss: 4.3012, dt: 895.46ms, fracRes: 0.2810, norm(attn): 0.7539, norm(output): 8.1250, norm(x): 5.7116, norm(y): 1.0075, norm:3.8268, tok/sec: 146373.83, flops:114.00, batch-reuse:1
@ 3751 train 4.2841 , allloss: 4.2842, dt: 912.28ms, fracRes: 0.2809, norm(attn): 0.7656, norm(output): 8.2500, norm(x): 5.7465, norm(y): 1.0075, norm:3.2533, tok/sec: 143674.50, flops:111.89, batch-reuse:1
@ 3752 train 4.2300 , allloss: 4.2301, dt: 894.68ms, fracRes: 0.2810, norm(attn): 0.7812, norm(output): 8.4375, norm(x): 5.8836, norm(y): 1.0082, norm:4.4119, tok/sec: 146501.77, flops:114.10, batch-reuse:1
@ 3753 train 4.2943 , allloss: 4.2944, dt: 882.43ms, fracRes: 0.2794, norm(attn): 0.7930, norm(output): 8.5000, norm(x): 5.8437, norm(y): 1.0076, norm:3.3403, tok/sec: 148535.16, flops:115.68, batch-reuse:1
@ 3754 train 4.2583 , allloss: 4.2584, dt: 902.26ms, fracRes: 0.2803, norm(attn): 0.7969, norm(output): 8.5000, norm(x): 5.9463, norm(y): 1.0080, norm:4.9478, tok/sec: 145270.06, flops:113.14, batch-reuse:1
@ 3755 train 4.2871 , allloss: 4.2880, dt: 893.84ms, fracRes: 0.2820, norm(attn): 0.8086, norm(output): 8.5625, norm(x): 5.9476, norm(y): 1.0085, norm:7.4702, tok/sec: 146639.13, flops:114.20, batch-reuse:1
@ 3756 train 4.4178 , allloss: 4.4183, dt: 894.37ms, fracRes: 0.2811, norm(attn): 0.7891, norm(output): 8.5000, norm(x): 5.9703, norm(y): 1.0071, norm:5.1018, tok/sec: 146551.72, flops:114.14, batch-reuse:1
@ 3757 train 4.3137 , allloss: 4.3252, dt: 906.89ms, fracRes: 0.2808, norm(attn): 0.7695, norm(output): 8.5000, norm(x): 5.9120, norm(y): 1.0075, norm:3.9815, tok/sec: 144528.81, flops:112.56, batch-reuse:1
@ 3758 train 4.2812 , allloss: 4.3010, dt: 891.79ms, fracRes: 0.2815, norm(attn): 0.7812, norm(output): 8.4375, norm(x): 5.8460, norm(y): 1.0082, norm:3.6011, tok/sec: 146976.40, flops:114.47, batch-reuse:1
@ 3759 train 4.3147 , allloss: 4.3212, dt: 905.59ms, fracRes: 0.2811, norm(attn): 0.7734, norm(output): 8.3750, norm(x): 5.8945, norm(y): 1.0083, norm:4.2576, tok/sec: 144736.30, flops:112.72, batch-reuse:1
@ 3760 train 4.4059 , allloss: 4.4108, dt: 902.11ms, fracRes: 0.2810, norm(attn): 0.7734, norm(output): 8.3750, norm(x): 5.7289, norm(y): 1.0084, norm:6.7031, tok/sec: 145295.33, flops:113.16, batch-reuse:1
@ 3761 train 4.4268 , allloss: 4.4289, dt: 901.62ms, fracRes: 0.2813, norm(attn): 0.7617, norm(output): 8.1875, norm(x): 5.7967, norm(y): 1.0087, norm:4.3464, tok/sec: 145373.40, flops:113.22, batch-reuse:1
@ 3762 train 4.1931 , allloss: 4.1939, dt: 904.70ms, fracRes: 0.2815, norm(attn): 0.7578, norm(output): 8.2500, norm(x): 5.8905, norm(y): 1.0089, norm:3.6784, tok/sec: 144879.00, flops:112.83, batch-reuse:1
@ 3763 train 4.3745 , allloss: 4.3747, dt: 904.37ms, fracRes: 0.2813, norm(attn): 0.7734, norm(output): 8.4375, norm(x): 5.9319, norm(y): 1.0089, norm:3.9832, tok/sec: 144932.05, flops:112.87, batch-reuse:1
@ 3764 train 4.3304 , allloss: 4.3308, dt: 895.05ms, fracRes: 0.2801, norm(attn): 0.7930, norm(output): 8.5000, norm(x): 5.9854, norm(y): 1.0094, norm:4.7037, tok/sec: 146440.23, flops:114.05, batch-reuse:1
@ 3765 train 4.3143 , allloss: 4.3151, dt: 909.57ms, fracRes: 0.2799, norm(attn): 0.8086, norm(output): 8.5625, norm(x): 6.0511, norm(y): 1.0095, norm:4.8888, tok/sec: 144102.81, flops:112.23, batch-reuse:1
@ 3766 train 4.3294 , allloss: 4.3311, dt: 909.92ms, fracRes: 0.2802, norm(attn): 0.8125, norm(output): 8.6875, norm(x): 6.0498, norm(y): 1.0096, norm:5.7548, tok/sec: 144047.42, flops:112.18, batch-reuse:1
@ 3767 train 5.5310 , allloss: 5.8063, dt: 910.05ms, fracRes: 0.2763, norm(attn): 0.8750, norm(output): 7.5312, norm(x): 6.2631, norm(y): 1.0086, norm:99.0589, tok/sec: 144026.77, flops:112.17, batch-reuse:1
@ 3768 train 4.6050 , allloss: 4.6385, dt: 905.94ms, fracRes: 0.2794, norm(attn): 0.8477, norm(output): 8.9375, norm(x): 5.9448, norm(y): 1.0094, norm:13.9187, tok/sec: 144680.01, flops:112.68, batch-reuse:1
@ 3769 train 4.5946 , allloss: 4.5954, dt: 907.44ms, fracRes: 0.2804, norm(attn): 0.8164, norm(output): 8.8750, norm(x): 5.9387, norm(y): 1.0096, norm:4.4007, tok/sec: 144441.06, flops:112.49, batch-reuse:1
@ 3770 train 4.4242 , allloss: 4.4243, dt: 904.83ms, fracRes: 0.2807, norm(attn): 0.8125, norm(output): 8.8750, norm(x): 6.0546, norm(y): 1.0096, norm:5.4497, tok/sec: 144858.65, flops:112.82, batch-reuse:1
@ 3771 train 4.4244 , allloss: 4.4247, dt: 897.07ms, fracRes: 0.2816, norm(attn): 0.8164, norm(output): 8.9375, norm(x): 6.2719, norm(y): 1.0101, norm:5.8343, tok/sec: 146110.81, flops:113.79, batch-reuse:1
@ 3772 train 4.4748 , allloss: 4.4750, dt: 892.95ms, fracRes: 0.2811, norm(attn): 0.8281, norm(output): 9.0625, norm(x): 6.2795, norm(y): 1.0103, norm:7.2627, tok/sec: 146786.03, flops:114.32, batch-reuse:1
@ 3773 train 4.5305 , allloss: 4.5332, dt: 900.95ms, fracRes: 0.2814, norm(attn): 0.8125, norm(output): 9.0625, norm(x): 6.6039, norm(y): 1.0102, norm:8.4287, tok/sec: 145481.88, flops:113.30, batch-reuse:1
@ 3774 train 4.4460 , allloss: 4.4460, dt: 910.66ms, fracRes: 0.2804, norm(attn): 0.8164, norm(output): 9.0625, norm(x): 6.3835, norm(y): 1.0107, norm:6.5087, tok/sec: 143931.37, flops:112.09, batch-reuse:1
@ 3775 train 4.4361 , allloss: 4.4362, dt: 905.17ms, fracRes: 0.2815, norm(attn): 0.8164, norm(output): 9.0000, norm(x): 6.1876, norm(y): 1.0103, norm:6.1994, tok/sec: 144803.10, flops:112.77, batch-reuse:1
@ 3776 train 4.4465 , allloss: 4.4483, dt: 916.83ms, fracRes: 0.2814, norm(attn): 0.8281, norm(output): 9.0625, norm(x): 6.2559, norm(y): 1.0109, norm:5.0400, tok/sec: 142961.60, flops:111.34, batch-reuse:1
@ 3777 train 4.4208 , allloss: 4.4209, dt: 917.35ms, fracRes: 0.2804, norm(attn): 0.8438, norm(output): 9.1875, norm(x): 6.3616, norm(y): 1.0108, norm:6.1559, tok/sec: 142880.67, flops:111.28, batch-reuse:1
@ 3778 train 4.3874 , allloss: 4.3875, dt: 916.87ms, fracRes: 0.2797, norm(attn): 0.8516, norm(output): 9.3750, norm(x): 6.5621, norm(y): 1.0111, norm:5.4413, tok/sec: 142956.50, flops:111.34, batch-reuse:1
@ 3779 train 4.3621 , allloss: 4.3622, dt: 912.70ms, fracRes: 0.2808, norm(attn): 0.8672, norm(output): 9.3750, norm(x): 6.3737, norm(y): 1.0109, norm:8.8644, tok/sec: 143608.29, flops:111.84, batch-reuse:1
@ 3780 train 4.3900 , allloss: 4.3901, dt: 897.21ms, fracRes: 0.2800, norm(attn): 0.8594, norm(output): 9.3750, norm(x): 6.5032, norm(y): 1.0113, norm:5.1045, tok/sec: 146087.79, flops:113.77, batch-reuse:1
@ 3781 train 4.2853 , allloss: 4.2855, dt: 883.82ms, fracRes: 0.2804, norm(attn): 0.8711, norm(output): 9.3750, norm(x): 6.5393, norm(y): 1.0119, norm:5.3578, tok/sec: 148301.36, flops:115.50, batch-reuse:1
@ 3782 train 4.5191 , allloss: 4.5223, dt: 885.97ms, fracRes: 0.2806, norm(attn): 0.8750, norm(output): 9.5000, norm(x): 6.5511, norm(y): 1.0119, norm:5.1389, tok/sec: 147942.10, flops:115.22, batch-reuse:1
@ 3783 train 4.2942 , allloss: 4.2945, dt: 900.33ms, fracRes: 0.2793, norm(attn): 0.8750, norm(output): 9.6250, norm(x): 6.6688, norm(y): 1.0117, norm:5.2654, tok/sec: 145581.43, flops:113.38, batch-reuse:1
@ 3784 train 4.3656 , allloss: 4.3676, dt: 917.83ms, fracRes: 0.2801, norm(attn): 0.8750, norm(output): 9.6875, norm(x): 6.7576, norm(y): 1.0118, norm:6.5043, tok/sec: 142805.88, flops:111.22, batch-reuse:1
@ 3785 train 4.3549 , allloss: 4.3551, dt: 922.93ms, fracRes: 0.2804, norm(attn): 0.8828, norm(output): 9.9375, norm(x): 6.7315, norm(y): 1.0123, norm:7.2069, tok/sec: 142017.75, flops:110.60, batch-reuse:1
@ 3786 train 4.4475 , allloss: 4.4494, dt: 912.70ms, fracRes: 0.2804, norm(attn): 0.8750, norm(output): 9.9375, norm(x): 6.9666, norm(y): 1.0121, norm:9.2211, tok/sec: 143609.64, flops:111.84, batch-reuse:1
@ 3787 train 4.3898 , allloss: 4.3900, dt: 911.38ms, fracRes: 0.2815, norm(attn): 0.8828, norm(output): 9.9375, norm(x): 6.7820, norm(y): 1.0127, norm:7.1974, tok/sec: 143817.66, flops:112.01, batch-reuse:1
@ 3788 train 4.3344 , allloss: 4.3346, dt: 910.84ms, fracRes: 0.2806, norm(attn): 0.8828, norm(output): 9.9375, norm(x): 6.7648, norm(y): 1.0129, norm:6.0227, tok/sec: 143903.12, flops:112.07, batch-reuse:1
@ 3789 train 4.3483 , allloss: 4.3485, dt: 910.89ms, fracRes: 0.2807, norm(attn): 0.8906, norm(output): 10.0000, norm(x): 6.7853, norm(y): 1.0127, norm:6.2059, tok/sec: 143894.57, flops:112.07, batch-reuse:1
@ 3790 train 4.4401 , allloss: 4.4403, dt: 898.56ms, fracRes: 0.2810, norm(attn): 0.8906, norm(output): 10.0000, norm(x): 6.8976, norm(y): 1.0128, norm:6.4537, tok/sec: 145868.82, flops:113.60, batch-reuse:1
@ 3791 train 4.3226 , allloss: 4.3227, dt: 903.74ms, fracRes: 0.2809, norm(attn): 0.9219, norm(output): 10.1250, norm(x): 6.9717, norm(y): 1.0133, norm:6.0953, tok/sec: 145032.26, flops:112.95, batch-reuse:1
@ 3792 train 4.4260 , allloss: 4.4266, dt: 880.17ms, fracRes: 0.2814, norm(attn): 0.9258, norm(output): 10.2500, norm(x): 7.0461, norm(y): 1.0133, norm:7.5506, tok/sec: 148917.31, flops:115.98, batch-reuse:1
@ 3793 train 4.3885 , allloss: 4.3887, dt: 902.51ms, fracRes: 0.2809, norm(attn): 0.9297, norm(output): 10.2500, norm(x): 6.9997, norm(y): 1.0138, norm:6.4583, tok/sec: 145230.11, flops:113.11, batch-reuse:1
@ 3794 train 4.3117 , allloss: 4.3126, dt: 905.63ms, fracRes: 0.2801, norm(attn): 0.9336, norm(output): 10.3125, norm(x): 7.0149, norm(y): 1.0143, norm:5.9586, tok/sec: 144729.64, flops:112.72, batch-reuse:1
@ 3795 train 4.2495 , allloss: 4.2496, dt: 906.29ms, fracRes: 0.2811, norm(attn): 0.9336, norm(output): 10.3125, norm(x): 7.0471, norm(y): 1.0142, norm:6.3628, tok/sec: 144624.86, flops:112.63, batch-reuse:1
@ 3796 train 4.3794 , allloss: 4.3795, dt: 896.62ms, fracRes: 0.2805, norm(attn): 0.9336, norm(output): 10.3750, norm(x): 7.0181, norm(y): 1.0141, norm:7.9243, tok/sec: 146184.75, flops:113.85, batch-reuse:1
@ 3797 train 4.3974 , allloss: 4.3974, dt: 890.82ms, fracRes: 0.2818, norm(attn): 0.9375, norm(output): 10.4375, norm(x): 7.1532, norm(y): 1.0150, norm:7.1427, tok/sec: 147136.89, flops:114.59, batch-reuse:1
@ 3798 train 4.3265 , allloss: 4.3266, dt: 883.21ms, fracRes: 0.2805, norm(attn): 0.9414, norm(output): 10.6250, norm(x): 7.0920, norm(y): 1.0150, norm:8.0730, tok/sec: 148403.33, flops:115.58, batch-reuse:1
@ 3799 train 4.3710 , allloss: 4.3711, dt: 913.89ms, fracRes: 0.2801, norm(attn): 0.9414, norm(output): 10.6875, norm(x): 7.2995, norm(y): 1.0152, norm:10.2366, tok/sec: 143422.06, flops:111.70, batch-reuse:1
@ 3800 train 4.3698 , allloss: 4.3699, dt: 918.51ms, fracRes: 0.2802, norm(attn): 0.9570, norm(output): 10.8750, norm(x): 7.1624, norm(y): 1.0149, norm:9.9697, tok/sec: 142700.87, flops:111.14, batch-reuse:1
@ 3801 train 4.3095 , allloss: 4.3096, dt: 912.46ms, fracRes: 0.2800, norm(attn): 0.9766, norm(output): 10.9375, norm(x): 7.1722, norm(y): 1.0150, norm:8.0131, tok/sec: 143647.02, flops:111.87, batch-reuse:1
@ 3802 train 4.3792 , allloss: 4.3792, dt: 902.02ms, fracRes: 0.2799, norm(attn): 0.9492, norm(output): 10.9375, norm(x): 7.3155, norm(y): 1.0150, norm:8.6733, tok/sec: 145309.31, flops:113.17, batch-reuse:1
@ 3803 train 4.3744 , allloss: 4.3746, dt: 912.06ms, fracRes: 0.2804, norm(attn): 0.9844, norm(output): 10.9375, norm(x): 7.3326, norm(y): 1.0159, norm:9.2039, tok/sec: 143709.35, flops:111.92, batch-reuse:1
@ 3804 train 4.3268 , allloss: 4.3269, dt: 880.64ms, fracRes: 0.2812, norm(attn): 0.9609, norm(output): 10.9375, norm(x): 7.4761, norm(y): 1.0161, norm:8.2355, tok/sec: 148837.20, flops:115.91, batch-reuse:1
@ 3805 train 4.4286 , allloss: 4.4288, dt: 906.54ms, fracRes: 0.2810, norm(attn): 0.9844, norm(output): 10.9375, norm(x): 7.2053, norm(y): 1.0155, norm:8.7534, tok/sec: 144585.03, flops:112.60, batch-reuse:1
@ 3806 train 4.3674 , allloss: 4.3674, dt: 914.00ms, fracRes: 0.2810, norm(attn): 0.9453, norm(output): 10.8750, norm(x): 7.2115, norm(y): 1.0149, norm:8.9051, tok/sec: 143405.41, flops:111.68, batch-reuse:1
@ 3807 train 4.3189 , allloss: 4.3189, dt: 912.73ms, fracRes: 0.2803, norm(attn): 0.9531, norm(output): 10.7500, norm(x): 7.1069, norm(y): 1.0149, norm:10.5667, tok/sec: 143604.77, flops:111.84, batch-reuse:1
@ 3808 train 4.4164 , allloss: 4.4165, dt: 917.77ms, fracRes: 0.2809, norm(attn): 0.9414, norm(output): 10.6875, norm(x): 7.3350, norm(y): 1.0165, norm:10.1324, tok/sec: 142816.12, flops:111.23, batch-reuse:1
@ 3809 train 4.3204 , allloss: 4.3209, dt: 895.81ms, fracRes: 0.2808, norm(attn): 0.9492, norm(output): 10.6250, norm(x): 7.1719, norm(y): 1.0167, norm:7.8170, tok/sec: 146316.72, flops:113.95, batch-reuse:1
@ 3810 train 4.2671 , allloss: 4.2672, dt: 911.32ms, fracRes: 0.2811, norm(attn): 0.9414, norm(output): 10.5625, norm(x): 7.1455, norm(y): 1.0161, norm:5.8928, tok/sec: 143826.09, flops:112.01, batch-reuse:1
@ 3811 train 4.2327 , allloss: 4.2338, dt: 895.35ms, fracRes: 0.2802, norm(attn): 0.9414, norm(output): 10.5000, norm(x): 7.0888, norm(y): 1.0156, norm:7.3120, tok/sec: 146392.19, flops:114.01, batch-reuse:1
@ 3812 train 4.2903 , allloss: 4.2904, dt: 925.28ms, fracRes: 0.2801, norm(attn): 0.9336, norm(output): 10.3750, norm(x): 7.1677, norm(y): 1.0158, norm:7.6481, tok/sec: 141657.15, flops:110.32, batch-reuse:1
@ 3813 train 4.1812 , allloss: 4.1815, dt: 917.97ms, fracRes: 0.2805, norm(attn): 0.9453, norm(output): 10.5000, norm(x): 7.1261, norm(y): 1.0170, norm:8.9912, tok/sec: 142784.26, flops:111.20, batch-reuse:1
@ 3814 train 4.3372 , allloss: 4.3373, dt: 945.93ms, fracRes: 0.2800, norm(attn): 0.9492, norm(output): 10.7500, norm(x): 7.2349, norm(y): 1.0171, norm:6.2692, tok/sec: 138564.30, flops:107.91, batch-reuse:1
@ 3815 train 4.3145 , allloss: 4.3145, dt: 919.68ms, fracRes: 0.2811, norm(attn): 0.9531, norm(output): 10.8750, norm(x): 7.3703, norm(y): 1.0173, norm:8.2742, tok/sec: 142518.90, flops:110.99, batch-reuse:1
@ 3816 train 4.3156 , allloss: 4.3156, dt: 905.60ms, fracRes: 0.2801, norm(attn): 0.9648, norm(output): 10.9375, norm(x): 7.3213, norm(y): 1.0174, norm:5.4753, tok/sec: 144734.89, flops:112.72, batch-reuse:1
@ 3817 train 4.3004 , allloss: 4.3005, dt: 916.12ms, fracRes: 0.2796, norm(attn): 0.9570, norm(output): 10.9375, norm(x): 7.3541, norm(y): 1.0175, norm:6.7059, tok/sec: 143073.06, flops:111.43, batch-reuse:1
@ 3818 train 4.4227 , allloss: 4.4253, dt: 913.71ms, fracRes: 0.2814, norm(attn): 0.9922, norm(output): 10.9375, norm(x): 7.1738, norm(y): 1.0174, norm:10.9509, tok/sec: 143449.97, flops:111.72, batch-reuse:1
@ 3819 train 4.3353 , allloss: 4.3354, dt: 902.60ms, fracRes: 0.2809, norm(attn): 0.9453, norm(output): 10.9375, norm(x): 7.3501, norm(y): 1.0173, norm:6.9475, tok/sec: 145216.49, flops:113.10, batch-reuse:1
@ 3820 train 4.3623 , allloss: 4.3624, dt: 903.49ms, fracRes: 0.2805, norm(attn): 0.9453, norm(output): 10.8750, norm(x): 7.2241, norm(y): 1.0172, norm:6.4206, tok/sec: 145072.72, flops:112.98, batch-reuse:1
@ 3821 train 4.4182 , allloss: 4.4183, dt: 892.21ms, fracRes: 0.2808, norm(attn): 0.9414, norm(output): 10.6250, norm(x): 7.2723, norm(y): 1.0179, norm:7.3461, tok/sec: 146906.49, flops:114.41, batch-reuse:1
@ 3822 train 4.2330 , allloss: 4.2332, dt: 886.15ms, fracRes: 0.2805, norm(attn): 0.9375, norm(output): 10.6250, norm(x): 7.2843, norm(y): 1.0182, norm:5.0081, tok/sec: 147912.57, flops:115.19, batch-reuse:1
@ 3823 train 4.3138 , allloss: 4.3140, dt: 898.23ms, fracRes: 0.2809, norm(attn): 0.9414, norm(output): 10.6875, norm(x): 7.2167, norm(y): 1.0179, norm:5.5481, tok/sec: 145922.91, flops:113.65, batch-reuse:1
@ 3824 train 4.2510 , allloss: 4.2513, dt: 899.72ms, fracRes: 0.2806, norm(attn): 0.9414, norm(output): 10.8125, norm(x): 7.2178, norm(y): 1.0179, norm:6.3715, tok/sec: 145681.23, flops:113.46, batch-reuse:1
@ 3825 train 4.2985 , allloss: 4.2987, dt: 897.22ms, fracRes: 0.2805, norm(attn): 0.9492, norm(output): 10.8750, norm(x): 7.2567, norm(y): 1.0184, norm:7.5323, tok/sec: 146086.35, flops:113.77, batch-reuse:1
@ 3826 train 4.3042 , allloss: 4.3044, dt: 895.14ms, fracRes: 0.2803, norm(attn): 0.9414, norm(output): 10.6250, norm(x): 7.1782, norm(y): 1.0185, norm:5.3402, tok/sec: 146425.84, flops:114.04, batch-reuse:1
@ 3827 train 4.2895 , allloss: 4.2899, dt: 906.21ms, fracRes: 0.2808, norm(attn): 0.9492, norm(output): 10.8125, norm(x): 7.1697, norm(y): 1.0187, norm:7.4566, tok/sec: 144638.02, flops:112.64, batch-reuse:1
@ 3828 train 4.2812 , allloss: 4.2815, dt: 906.22ms, fracRes: 0.2800, norm(attn): 0.9375, norm(output): 10.6875, norm(x): 7.2902, norm(y): 1.0185, norm:8.5690, tok/sec: 144636.16, flops:112.64, batch-reuse:1
@ 3829 train 4.3413 , allloss: 4.3416, dt: 907.73ms, fracRes: 0.2804, norm(attn): 0.9609, norm(output): 10.8125, norm(x): 7.1066, norm(y): 1.0189, norm:9.4904, tok/sec: 144394.59, flops:112.46, batch-reuse:1
@ 3830 train 4.3923 , allloss: 4.3925, dt: 913.27ms, fracRes: 0.2816, norm(attn): 0.9453, norm(output): 10.8750, norm(x): 7.2018, norm(y): 1.0191, norm:8.0852, tok/sec: 143519.33, flops:111.77, batch-reuse:1
@ 3831 train 4.2033 , allloss: 4.2034, dt: 909.47ms, fracRes: 0.2806, norm(attn): 0.9453, norm(output): 10.8125, norm(x): 7.1794, norm(y): 1.0190, norm:6.6346, tok/sec: 144119.32, flops:112.24, batch-reuse:1
@ 3832 train 4.2669 , allloss: 4.2670, dt: 899.05ms, fracRes: 0.2817, norm(attn): 0.9453, norm(output): 10.8750, norm(x): 7.2994, norm(y): 1.0196, norm:7.7449, tok/sec: 145789.44, flops:113.54, batch-reuse:1
@ 3833 train 4.2827 , allloss: 4.2828, dt: 896.86ms, fracRes: 0.2810, norm(attn): 0.9492, norm(output): 10.9375, norm(x): 7.3229, norm(y): 1.0195, norm:6.4820, tok/sec: 146145.07, flops:113.82, batch-reuse:1
@ 3834 train 4.3684 , allloss: 4.3686, dt: 910.60ms, fracRes: 0.2807, norm(attn): 0.9688, norm(output): 10.9375, norm(x): 7.1067, norm(y): 1.0191, norm:7.5619, tok/sec: 143939.55, flops:112.10, batch-reuse:1
@ 3835 train 4.3080 , allloss: 4.3081, dt: 906.76ms, fracRes: 0.2816, norm(attn): 0.9336, norm(output): 10.6250, norm(x): 7.2439, norm(y): 1.0194, norm:8.9752, tok/sec: 144550.36, flops:112.58, batch-reuse:1
@ 3836 train 4.3056 , allloss: 4.3058, dt: 910.82ms, fracRes: 0.2813, norm(attn): 0.9336, norm(output): 10.3750, norm(x): 7.1501, norm(y): 1.0197, norm:4.0950, tok/sec: 143905.53, flops:112.07, batch-reuse:1
@ 3837 train 4.4192 , allloss: 4.4194, dt: 903.26ms, fracRes: 0.2818, norm(attn): 0.9219, norm(output): 10.2500, norm(x): 7.0591, norm(y): 1.0195, norm:5.8878, tok/sec: 145109.94, flops:113.01, batch-reuse:1
@ 3838 train 4.2621 , allloss: 4.2624, dt: 897.92ms, fracRes: 0.2819, norm(attn): 0.9219, norm(output): 10.1875, norm(x): 7.0014, norm(y): 1.0197, norm:3.4359, tok/sec: 145972.66, flops:113.68, batch-reuse:1
@ 3839 train 4.2633 , allloss: 4.2642, dt: 913.12ms, fracRes: 0.2817, norm(attn): 0.9258, norm(output): 10.3125, norm(x): 6.9244, norm(y): 1.0195, norm:5.8452, tok/sec: 143542.64, flops:111.79, batch-reuse:1
@ 3840 train 4.4575 , allloss: 4.4583, dt: 912.33ms, fracRes: 0.2817, norm(attn): 0.9219, norm(output): 10.3750, norm(x): 7.1837, norm(y): 1.0198, norm:6.8652, tok/sec: 143667.51, flops:111.89, batch-reuse:1
@ 3841 train 4.3336 , allloss: 4.3344, dt: 910.07ms, fracRes: 0.2797, norm(attn): 0.9336, norm(output): 10.3750, norm(x): 7.0503, norm(y): 1.0199, norm:5.2848, tok/sec: 144024.85, flops:112.17, batch-reuse:1
@ 3842 train 4.2768 , allloss: 4.2775, dt: 911.40ms, fracRes: 0.2771, norm(attn): 0.9336, norm(output): 10.1875, norm(x): 7.0828, norm(y): 1.0203, norm:5.4911, tok/sec: 143814.58, flops:112.00, batch-reuse:1
@ 3843 train 4.3693 , allloss: 4.3699, dt: 902.74ms, fracRes: 0.2813, norm(attn): 0.9336, norm(output): 10.3750, norm(x): 7.0159, norm(y): 1.0205, norm:5.6758, tok/sec: 145193.33, flops:113.08, batch-reuse:1
@ 3844 train 4.2844 , allloss: 4.2847, dt: 917.88ms, fracRes: 0.2815, norm(attn): 0.9258, norm(output): 10.3125, norm(x): 7.0058, norm(y): 1.0203, norm:4.4416, tok/sec: 142797.91, flops:111.21, batch-reuse:1
@ 3845 train 4.2643 , allloss: 4.2645, dt: 916.26ms, fracRes: 0.2816, norm(attn): 0.9336, norm(output): 10.3125, norm(x): 6.9751, norm(y): 1.0203, norm:4.0058, tok/sec: 143051.77, flops:111.41, batch-reuse:1
@ 3846 train 4.0809 , allloss: 4.0812, dt: 914.35ms, fracRes: 0.2816, norm(attn): 0.9297, norm(output): 10.1875, norm(x): 6.9624, norm(y): 1.0207, norm:4.3568, tok/sec: 143350.33, flops:111.64, batch-reuse:1
@ 3847 train 4.3460 , allloss: 4.3462, dt: 913.72ms, fracRes: 0.2820, norm(attn): 0.8906, norm(output): 10.0000, norm(x): 6.8636, norm(y): 1.0209, norm:3.8863, tok/sec: 143448.55, flops:111.72, batch-reuse:1
@ 3848 train 4.2506 , allloss: 4.2510, dt: 897.56ms, fracRes: 0.2815, norm(attn): 0.8945, norm(output): 10.0625, norm(x): 6.8231, norm(y): 1.0207, norm:4.6354, tok/sec: 146031.37, flops:113.73, batch-reuse:1
@ 3849 train 4.1776 , allloss: 4.1780, dt: 915.32ms, fracRes: 0.2814, norm(attn): 0.8867, norm(output): 10.0000, norm(x): 6.9766, norm(y): 1.0206, norm:5.4642, tok/sec: 143198.09, flops:111.52, batch-reuse:1
@ 3850 train 4.2163 , allloss: 4.2167, dt: 914.63ms, fracRes: 0.2812, norm(attn): 0.8906, norm(output): 10.0625, norm(x): 6.8873, norm(y): 1.0206, norm:3.4964, tok/sec: 143306.49, flops:111.61, batch-reuse:1
@ 3851 train 4.2456 , allloss: 4.2460, dt: 909.92ms, fracRes: 0.2810, norm(attn): 0.8828, norm(output): 10.0625, norm(x): 7.0096, norm(y): 1.0206, norm:5.3937, tok/sec: 144047.11, flops:112.18, batch-reuse:1
@ 3852 train 4.1351 , allloss: 4.1356, dt: 903.71ms, fracRes: 0.2814, norm(attn): 0.8867, norm(output): 10.0000, norm(x): 6.7154, norm(y): 1.0209, norm:3.3551, tok/sec: 145037.31, flops:112.96, batch-reuse:1
@ 3853 train 4.1976 , allloss: 4.1980, dt: 906.41ms, fracRes: 0.2817, norm(attn): 0.8750, norm(output): 9.8125, norm(x): 6.6444, norm(y): 1.0208, norm:3.5845, tok/sec: 144604.92, flops:112.62, batch-reuse:1
@ 3854 train 4.1641 , allloss: 4.1647, dt: 898.59ms, fracRes: 0.2810, norm(attn): 0.8750, norm(output): 9.8750, norm(x): 6.7037, norm(y): 1.0208, norm:2.9752, tok/sec: 145863.48, flops:113.60, batch-reuse:1
@ 3855 train 4.0840 , allloss: 4.0846, dt: 915.60ms, fracRes: 0.2807, norm(attn): 0.8906, norm(output): 10.1250, norm(x): 6.9448, norm(y): 1.0213, norm:3.4204, tok/sec: 143153.57, flops:111.49, batch-reuse:1
@ 3856 train 4.1399 , allloss: 4.1406, dt: 920.28ms, fracRes: 0.2803, norm(attn): 0.9180, norm(output): 10.3750, norm(x): 7.1964, norm(y): 1.0212, norm:3.2930, tok/sec: 142426.15, flops:110.92, batch-reuse:1
@ 3857 train 4.0326 , allloss: 4.0335, dt: 908.04ms, fracRes: 0.2803, norm(attn): 0.9258, norm(output): 10.3750, norm(x): 7.2253, norm(y): 1.0215, norm:3.0618, tok/sec: 144346.81, flops:112.42, batch-reuse:1
@ 3858 train 4.1258 , allloss: 4.1264, dt: 910.28ms, fracRes: 0.2813, norm(attn): 0.9219, norm(output): 10.3750, norm(x): 7.0816, norm(y): 1.0215, norm:3.2194, tok/sec: 143990.30, flops:112.14, batch-reuse:1
@ 3859 train 4.0997 , allloss: 4.1017, dt: 914.53ms, fracRes: 0.2807, norm(attn): 0.9219, norm(output): 10.3125, norm(x): 6.9832, norm(y): 1.0215, norm:3.4402, tok/sec: 143321.89, flops:111.62, batch-reuse:1
@ 3860 train 4.2070 , allloss: 4.2080, dt: 910.40ms, fracRes: 0.2836, norm(attn): 0.8906, norm(output): 10.0625, norm(x): 7.0195, norm(y): 1.0218, norm:3.8805, tok/sec: 143972.16, flops:112.13, batch-reuse:1
@ 3861 train 4.1740 , allloss: 4.1754, dt: 906.58ms, fracRes: 0.2825, norm(attn): 0.8906, norm(output): 10.1875, norm(x): 7.0224, norm(y): 1.0221, norm:2.7494, tok/sec: 144579.21, flops:112.60, batch-reuse:1
@ 3862 train 4.2086 , allloss: 4.2104, dt: 905.69ms, fracRes: 0.2821, norm(attn): 0.8906, norm(output): 10.3750, norm(x): 7.3072, norm(y): 1.0223, norm:4.7161, tok/sec: 144720.65, flops:112.71, batch-reuse:1
@ 3863 train 4.2003 , allloss: 4.2015, dt: 922.74ms, fracRes: 0.2823, norm(attn): 0.9297, norm(output): 10.6250, norm(x): 7.2171, norm(y): 1.0218, norm:3.5733, tok/sec: 142047.21, flops:110.63, batch-reuse:1
@ 3864 train 4.2015 , allloss: 4.2024, dt: 928.99ms, fracRes: 0.2819, norm(attn): 0.8984, norm(output): 10.5000, norm(x): 7.3061, norm(y): 1.0220, norm:4.5913, tok/sec: 141091.39, flops:109.88, batch-reuse:1
@ 3865 train 4.2373 , allloss: 4.2380, dt: 926.41ms, fracRes: 0.2820, norm(attn): 0.9219, norm(output): 10.3750, norm(x): 7.0753, norm(y): 1.0224, norm:4.3681, tok/sec: 141483.47, flops:110.19, batch-reuse:1
@ 3866 train 4.1069 , allloss: 4.1073, dt: 905.68ms, fracRes: 0.2823, norm(attn): 0.8867, norm(output): 10.1250, norm(x): 7.0413, norm(y): 1.0222, norm:3.5386, tok/sec: 144721.52, flops:112.71, batch-reuse:1
@ 3867 train 4.1092 , allloss: 4.1097, dt: 905.86ms, fracRes: 0.2821, norm(attn): 0.8867, norm(output): 10.0625, norm(x): 6.9355, norm(y): 1.0225, norm:3.1369, tok/sec: 144692.76, flops:112.69, batch-reuse:1
@ 3868 train 4.0228 , allloss: 4.0230, dt: 906.80ms, fracRes: 0.2818, norm(attn): 0.8828, norm(output): 10.0625, norm(x): 6.8774, norm(y): 1.0223, norm:2.2311, tok/sec: 144543.94, flops:112.57, batch-reuse:1
@ 3869 train 4.0575 , allloss: 4.0577, dt: 904.19ms, fracRes: 0.2823, norm(attn): 0.9180, norm(output): 10.3750, norm(x): 7.0595, norm(y): 1.0223, norm:3.6661, tok/sec: 144960.33, flops:112.90, batch-reuse:1
@ 3870 train 4.0974 , allloss: 4.0975, dt: 898.76ms, fracRes: 0.2813, norm(attn): 0.8906, norm(output): 10.1875, norm(x): 7.1478, norm(y): 1.0224, norm:3.0238, tok/sec: 145836.32, flops:113.58, batch-reuse:1
@ 3871 train 4.1784 , allloss: 4.1785, dt: 901.27ms, fracRes: 0.2817, norm(attn): 0.9219, norm(output): 10.3750, norm(x): 7.1629, norm(y): 1.0229, norm:3.4368, tok/sec: 145429.58, flops:113.26, batch-reuse:1
@ 3872 train 4.1695 , allloss: 4.1697, dt: 915.21ms, fracRes: 0.2819, norm(attn): 0.9219, norm(output): 10.3125, norm(x): 7.0243, norm(y): 1.0231, norm:2.1636, tok/sec: 143216.00, flops:111.54, batch-reuse:1
@ 3873 train 4.1155 , allloss: 4.1156, dt: 915.50ms, fracRes: 0.2817, norm(attn): 0.8867, norm(output): 10.0625, norm(x): 6.9806, norm(y): 1.0231, norm:2.4585, tok/sec: 143169.34, flops:111.50, batch-reuse:1
@ 3874 train 4.1198 , allloss: 4.1199, dt: 899.19ms, fracRes: 0.2809, norm(attn): 0.8789, norm(output): 10.0000, norm(x): 6.9465, norm(y): 1.0232, norm:2.7235, tok/sec: 145766.52, flops:113.52, batch-reuse:1
@ 3875 train 4.0703 , allloss: 4.0704, dt: 890.74ms, fracRes: 0.2809, norm(attn): 0.8789, norm(output): 10.0000, norm(x): 6.9338, norm(y): 1.0232, norm:3.1956, tok/sec: 147149.65, flops:114.60, batch-reuse:1
@ 3876 train 4.0987 , allloss: 4.0990, dt: 917.41ms, fracRes: 0.2810, norm(attn): 0.8828, norm(output): 10.0000, norm(x): 6.8602, norm(y): 1.0230, norm:2.6594, tok/sec: 142871.80, flops:111.27, batch-reuse:1
@ 3877 train 4.1735 , allloss: 4.1736, dt: 880.24ms, fracRes: 0.2811, norm(attn): 0.8633, norm(output): 9.6875, norm(x): 6.8283, norm(y): 1.0232, norm:2.9984, tok/sec: 148905.29, flops:115.97, batch-reuse:1
@ 3878 train 4.0727 , allloss: 4.0728, dt: 901.81ms, fracRes: 0.2806, norm(attn): 0.8750, norm(output): 9.9375, norm(x): 6.7683, norm(y): 1.0230, norm:2.2991, tok/sec: 145343.11, flops:113.19, batch-reuse:1
@ 3879 train 4.1084 , allloss: 4.1086, dt: 901.83ms, fracRes: 0.2806, norm(attn): 0.8867, norm(output): 10.1250, norm(x): 6.9495, norm(y): 1.0236, norm:2.7319, tok/sec: 145339.61, flops:113.19, batch-reuse:1
@ 3880 train 4.2436 , allloss: 4.2438, dt: 910.03ms, fracRes: 0.2802, norm(attn): 0.8867, norm(output): 10.2500, norm(x): 7.1301, norm(y): 1.0237, norm:2.5673, tok/sec: 144030.66, flops:112.17, batch-reuse:1
@ 3881 train 4.1428 , allloss: 4.1431, dt: 891.96ms, fracRes: 0.2798, norm(attn): 0.8828, norm(output): 10.2500, norm(x): 7.0702, norm(y): 1.0234, norm:2.2891, tok/sec: 146947.84, flops:114.44, batch-reuse:1
@ 3882 train 4.1397 , allloss: 4.1400, dt: 901.02ms, fracRes: 0.2796, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 7.0879, norm(y): 1.0235, norm:3.6784, tok/sec: 145470.95, flops:113.29, batch-reuse:1
@ 3883 train 4.0719 , allloss: 4.0722, dt: 908.55ms, fracRes: 0.2800, norm(attn): 0.8789, norm(output): 10.0000, norm(x): 6.8231, norm(y): 1.0237, norm:4.1367, tok/sec: 144264.47, flops:112.35, batch-reuse:1
@ 3884 train 4.1223 , allloss: 4.1226, dt: 897.80ms, fracRes: 0.2800, norm(attn): 0.8711, norm(output): 9.8750, norm(x): 6.7587, norm(y): 1.0236, norm:1.9868, tok/sec: 145992.59, flops:113.70, batch-reuse:1
@ 3885 train 4.2066 , allloss: 4.2071, dt: 892.01ms, fracRes: 0.2802, norm(attn): 0.8594, norm(output): 9.6250, norm(x): 6.6864, norm(y): 1.0234, norm:2.4918, tok/sec: 146940.02, flops:114.44, batch-reuse:1
@ 3886 train 4.0995 , allloss: 4.0998, dt: 898.58ms, fracRes: 0.2806, norm(attn): 0.8594, norm(output): 9.6250, norm(x): 6.7866, norm(y): 1.0237, norm:2.4532, tok/sec: 145866.46, flops:113.60, batch-reuse:1
@ 3887 train 4.1037 , allloss: 4.1039, dt: 916.50ms, fracRes: 0.2801, norm(attn): 0.8711, norm(output): 9.9375, norm(x): 6.8070, norm(y): 1.0239, norm:2.8791, tok/sec: 143013.07, flops:111.38, batch-reuse:1
@ 3888 train 4.2106 , allloss: 4.2108, dt: 913.19ms, fracRes: 0.2795, norm(attn): 0.8633, norm(output): 9.9375, norm(x): 7.0003, norm(y): 1.0240, norm:2.1376, tok/sec: 143531.32, flops:111.78, batch-reuse:1
@ 3889 train 4.1467 , allloss: 4.1469, dt: 918.90ms, fracRes: 0.2799, norm(attn): 0.8750, norm(output): 10.1250, norm(x): 7.1815, norm(y): 1.0242, norm:2.5498, tok/sec: 142640.52, flops:111.09, batch-reuse:1
@ 3890 train 4.1486 , allloss: 4.1487, dt: 888.69ms, fracRes: 0.2815, norm(attn): 0.8750, norm(output): 10.2500, norm(x): 7.0460, norm(y): 1.0243, norm:3.1457, tok/sec: 147488.57, flops:114.86, batch-reuse:1
@ 3891 train 4.0200 , allloss: 4.0203, dt: 902.63ms, fracRes: 0.2801, norm(attn): 0.8711, norm(output): 10.0000, norm(x): 7.0095, norm(y): 1.0241, norm:2.2944, tok/sec: 145211.85, flops:113.09, batch-reuse:1
@ 3892 train 4.1192 , allloss: 4.1194, dt: 907.32ms, fracRes: 0.2812, norm(attn): 0.8594, norm(output): 9.7500, norm(x): 6.7477, norm(y): 1.0242, norm:1.7970, tok/sec: 144461.40, flops:112.51, batch-reuse:1
@ 3893 train 4.1505 , allloss: 4.1506, dt: 906.63ms, fracRes: 0.2809, norm(attn): 0.8516, norm(output): 9.6250, norm(x): 6.7086, norm(y): 1.0243, norm:2.4054, tok/sec: 144571.04, flops:112.59, batch-reuse:1
@ 3894 train 4.3069 , allloss: 4.3070, dt: 922.97ms, fracRes: 0.2817, norm(attn): 0.8594, norm(output): 9.6875, norm(x): 6.8122, norm(y): 1.0246, norm:2.0150, tok/sec: 142011.36, flops:110.60, batch-reuse:1
@ 3895 train 4.2559 , allloss: 4.2560, dt: 906.85ms, fracRes: 0.2808, norm(attn): 0.8633, norm(output): 9.8125, norm(x): 6.9295, norm(y): 1.0247, norm:2.2158, tok/sec: 144534.70, flops:112.56, batch-reuse:1
@ 3896 train 4.2192 , allloss: 4.2194, dt: 902.04ms, fracRes: 0.2817, norm(attn): 0.8750, norm(output): 10.0000, norm(x): 7.0687, norm(y): 1.0249, norm:2.3897, tok/sec: 145306.12, flops:113.16, batch-reuse:1
@ 3897 train 4.1774 , allloss: 4.1776, dt: 899.27ms, fracRes: 0.2817, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 7.0582, norm(y): 1.0249, norm:1.8316, tok/sec: 145753.46, flops:113.51, batch-reuse:1
@ 3898 train 4.3548 , allloss: 4.3549, dt: 901.21ms, fracRes: 0.2816, norm(attn): 0.8789, norm(output): 10.0625, norm(x): 7.0134, norm(y): 1.0250, norm:2.7238, tok/sec: 145439.47, flops:113.27, batch-reuse:1
@ 3899 train 4.2714 , allloss: 4.2716, dt: 898.82ms, fracRes: 0.2813, norm(attn): 0.8633, norm(output): 9.9375, norm(x): 6.9731, norm(y): 1.0249, norm:2.2665, tok/sec: 145826.07, flops:113.57, batch-reuse:1
@ 3900 train 4.2004 , allloss: 4.2005, dt: 920.59ms, fracRes: 0.2823, norm(attn): 0.8711, norm(output): 9.8125, norm(x): 6.7446, norm(y): 1.0252, norm:3.0335, tok/sec: 142377.97, flops:110.88, batch-reuse:1
@ 3901 train 4.2876 , allloss: 4.2877, dt: 892.11ms, fracRes: 0.2819, norm(attn): 0.8359, norm(output): 9.6250, norm(x): 6.9118, norm(y): 1.0252, norm:2.8831, tok/sec: 146923.88, flops:114.42, batch-reuse:1
@ 3902 train 4.1577 , allloss: 4.1578, dt: 914.41ms, fracRes: 0.2814, norm(attn): 0.8594, norm(output): 9.6250, norm(x): 6.7871, norm(y): 1.0252, norm:1.7739, tok/sec: 143341.02, flops:111.63, batch-reuse:1
@ 3903 train 4.1442 , allloss: 4.1443, dt: 911.33ms, fracRes: 0.2815, norm(attn): 0.8594, norm(output): 9.8750, norm(x): 6.8536, norm(y): 1.0253, norm:2.0215, tok/sec: 143824.77, flops:112.01, batch-reuse:1
@ 3904 train 4.3403 , allloss: 4.3405, dt: 910.94ms, fracRes: 0.2814, norm(attn): 0.8750, norm(output): 10.0000, norm(x): 6.9375, norm(y): 1.0254, norm:2.4346, tok/sec: 143886.73, flops:112.06, batch-reuse:1
@ 3905 train 4.2891 , allloss: 4.2892, dt: 891.59ms, fracRes: 0.2811, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 6.9360, norm(y): 1.0256, norm:2.4168, tok/sec: 147009.49, flops:114.49, batch-reuse:1
@ 3906 train 4.3247 , allloss: 4.3249, dt: 905.49ms, fracRes: 0.2808, norm(attn): 0.8594, norm(output): 9.8125, norm(x): 6.9368, norm(y): 1.0255, norm:2.1316, tok/sec: 144752.01, flops:112.73, batch-reuse:1
@ 3907 train 4.2706 , allloss: 4.2710, dt: 904.09ms, fracRes: 0.2807, norm(attn): 0.8672, norm(output): 9.8750, norm(x): 6.8411, norm(y): 1.0257, norm:2.5589, tok/sec: 144976.35, flops:112.91, batch-reuse:1
@ 3908 train 4.2678 , allloss: 4.2682, dt: 901.34ms, fracRes: 0.2805, norm(attn): 0.8398, norm(output): 9.5000, norm(x): 6.8345, norm(y): 1.0256, norm:1.9128, tok/sec: 145419.58, flops:113.25, batch-reuse:1
@ 3909 train 4.2484 , allloss: 4.2489, dt: 905.00ms, fracRes: 0.2797, norm(attn): 0.8594, norm(output): 9.5625, norm(x): 6.6928, norm(y): 1.0252, norm:2.6518, tok/sec: 144831.48, flops:112.80, batch-reuse:1
@ 3910 train 4.3187 , allloss: 4.3194, dt: 908.70ms, fracRes: 0.2809, norm(attn): 0.8320, norm(output): 9.4375, norm(x): 6.6727, norm(y): 1.0256, norm:2.4631, tok/sec: 144241.00, flops:112.34, batch-reuse:1
@ 3911 train 4.3003 , allloss: 4.3011, dt: 904.95ms, fracRes: 0.2810, norm(attn): 0.8242, norm(output): 9.2500, norm(x): 6.5376, norm(y): 1.0257, norm:1.9154, tok/sec: 144838.69, flops:112.80, batch-reuse:1
@ 3912 train 4.1940 , allloss: 4.1946, dt: 889.31ms, fracRes: 0.2813, norm(attn): 0.8164, norm(output): 9.1250, norm(x): 6.6307, norm(y): 1.0258, norm:2.0814, tok/sec: 147386.47, flops:114.79, batch-reuse:1
@ 3913 train 4.2944 , allloss: 4.2947, dt: 903.67ms, fracRes: 0.2817, norm(attn): 0.8398, norm(output): 9.5000, norm(x): 6.6162, norm(y): 1.0258, norm:2.2240, tok/sec: 145044.81, flops:112.96, batch-reuse:1
@ 3914 train 4.3146 , allloss: 4.3148, dt: 900.69ms, fracRes: 0.2821, norm(attn): 0.8203, norm(output): 9.3750, norm(x): 6.7543, norm(y): 1.0261, norm:2.1411, tok/sec: 145523.28, flops:113.33, batch-reuse:1
@ 3915 train 4.2830 , allloss: 4.2831, dt: 891.91ms, fracRes: 0.2814, norm(attn): 0.8359, norm(output): 9.4375, norm(x): 6.6328, norm(y): 1.0261, norm:2.5344, tok/sec: 146956.79, flops:114.45, batch-reuse:1
@ 3916 train 4.3104 , allloss: 4.3106, dt: 900.58ms, fracRes: 0.2816, norm(attn): 0.8203, norm(output): 9.3750, norm(x): 6.6402, norm(y): 1.0264, norm:1.4118, tok/sec: 145541.58, flops:113.35, batch-reuse:1
@ 3917 train 4.3859 , allloss: 4.3860, dt: 903.71ms, fracRes: 0.2816, norm(attn): 0.8477, norm(output): 9.6250, norm(x): 6.8066, norm(y): 1.0268, norm:1.7484, tok/sec: 145038.12, flops:112.96, batch-reuse:1
@ 3918 train 4.2281 , allloss: 4.2282, dt: 911.82ms, fracRes: 0.2817, norm(attn): 0.8594, norm(output): 9.9375, norm(x): 6.9392, norm(y): 1.0269, norm:1.9397, tok/sec: 143747.91, flops:111.95, batch-reuse:1
@ 3919 train 4.2557 , allloss: 4.2558, dt: 907.93ms, fracRes: 0.2811, norm(attn): 0.8516, norm(output): 9.8125, norm(x): 6.8370, norm(y): 1.0267, norm:1.5292, tok/sec: 144363.95, flops:112.43, batch-reuse:1
@ 3920 train 4.2139 , allloss: 4.2142, dt: 902.22ms, fracRes: 0.2803, norm(attn): 0.8281, norm(output): 9.5000, norm(x): 6.7659, norm(y): 1.0265, norm:2.0942, tok/sec: 145277.36, flops:113.14, batch-reuse:1
@ 3921 train 4.2871 , allloss: 4.2873, dt: 907.23ms, fracRes: 0.2817, norm(attn): 0.8320, norm(output): 9.6250, norm(x): 6.8169, norm(y): 1.0266, norm:1.6185, tok/sec: 144474.77, flops:112.52, batch-reuse:1
@ 3922 train 4.2438 , allloss: 4.2439, dt: 908.16ms, fracRes: 0.2821, norm(attn): 0.8281, norm(output): 9.6250, norm(x): 6.8277, norm(y): 1.0265, norm:1.5237, tok/sec: 144326.62, flops:112.40, batch-reuse:1
@ 3923 train 4.1978 , allloss: 4.1979, dt: 899.33ms, fracRes: 0.2811, norm(attn): 0.8594, norm(output): 9.8125, norm(x): 6.9172, norm(y): 1.0268, norm:1.9208, tok/sec: 145744.19, flops:113.51, batch-reuse:1
@ 3924 train 4.2593 , allloss: 4.2594, dt: 906.37ms, fracRes: 0.2817, norm(attn): 0.8711, norm(output): 10.0625, norm(x): 7.0728, norm(y): 1.0272, norm:1.6676, tok/sec: 144612.49, flops:112.62, batch-reuse:1
@ 3925 train 4.3226 , allloss: 4.3227, dt: 902.34ms, fracRes: 0.2820, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 7.0820, norm(y): 1.0274, norm:2.2986, tok/sec: 145257.43, flops:113.13, batch-reuse:1
@ 3926 train 4.2374 , allloss: 4.2375, dt: 888.51ms, fracRes: 0.2820, norm(attn): 0.8711, norm(output): 10.0000, norm(x): 7.0804, norm(y): 1.0275, norm:2.0564, tok/sec: 147518.05, flops:114.89, batch-reuse:1
@ 3927 train 4.1678 , allloss: 4.1679, dt: 892.99ms, fracRes: 0.2826, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 7.0649, norm(y): 1.0277, norm:1.9479, tok/sec: 146778.15, flops:114.31, batch-reuse:1
@ 3928 train 4.2124 , allloss: 4.2125, dt: 897.64ms, fracRes: 0.2824, norm(attn): 0.8789, norm(output): 10.1875, norm(x): 7.1222, norm(y): 1.0274, norm:2.4675, tok/sec: 146018.10, flops:113.72, batch-reuse:1
@ 3929 train 4.1848 , allloss: 4.1850, dt: 899.55ms, fracRes: 0.2834, norm(attn): 0.8789, norm(output): 10.3125, norm(x): 7.2373, norm(y): 1.0279, norm:1.7537, tok/sec: 145708.03, flops:113.48, batch-reuse:1
@ 3930 train 4.2630 , allloss: 4.2631, dt: 895.99ms, fracRes: 0.2830, norm(attn): 0.8984, norm(output): 10.6875, norm(x): 7.3043, norm(y): 1.0279, norm:2.8887, tok/sec: 146288.14, flops:113.93, batch-reuse:1
@ 3931 train 4.1648 , allloss: 4.1649, dt: 908.00ms, fracRes: 0.2820, norm(attn): 0.8789, norm(output): 10.4375, norm(x): 7.4349, norm(y): 1.0279, norm:2.0118, tok/sec: 144352.23, flops:112.42, batch-reuse:1
@ 3932 train 4.1646 , allloss: 4.1647, dt: 923.59ms, fracRes: 0.2825, norm(attn): 0.8828, norm(output): 10.4375, norm(x): 7.2350, norm(y): 1.0282, norm:2.7433, tok/sec: 141915.61, flops:110.52, batch-reuse:1
@ 3933 train 4.2386 , allloss: 4.2387, dt: 916.01ms, fracRes: 0.2829, norm(attn): 0.8750, norm(output): 10.0000, norm(x): 6.9984, norm(y): 1.0282, norm:1.4801, tok/sec: 143089.67, flops:111.44, batch-reuse:1
@ 3934 train 4.2700 , allloss: 4.2701, dt: 911.99ms, fracRes: 0.2819, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 7.0514, norm(y): 1.0280, norm:1.6397, tok/sec: 143720.13, flops:111.93, batch-reuse:1
@ 3935 train 4.2718 , allloss: 4.2719, dt: 901.13ms, fracRes: 0.2826, norm(attn): 0.8711, norm(output): 10.0000, norm(x): 7.1271, norm(y): 1.0283, norm:2.2406, tok/sec: 145453.40, flops:113.28, batch-reuse:1
@ 3936 train 4.2185 , allloss: 4.2186, dt: 913.50ms, fracRes: 0.2826, norm(attn): 0.8789, norm(output): 10.0625, norm(x): 7.0774, norm(y): 1.0285, norm:1.9863, tok/sec: 143484.04, flops:111.75, batch-reuse:1
@ 3937 train 4.2140 , allloss: 4.2141, dt: 911.24ms, fracRes: 0.2821, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 7.1844, norm(y): 1.0289, norm:1.5274, tok/sec: 143839.75, flops:112.02, batch-reuse:1
@ 3938 train 4.2298 , allloss: 4.2299, dt: 903.94ms, fracRes: 0.2813, norm(attn): 0.8750, norm(output): 10.0000, norm(x): 6.9511, norm(y): 1.0286, norm:7.9652, tok/sec: 145000.74, flops:112.93, batch-reuse:1
@ 3939 train 4.3294 , allloss: 4.3299, dt: 882.98ms, fracRes: 0.2824, norm(attn): 0.8633, norm(output): 9.6875, norm(x): 6.7759, norm(y): 1.0286, norm:3.0545, tok/sec: 148443.48, flops:115.61, batch-reuse:1
@ 3940 train 4.2399 , allloss: 4.2401, dt: 906.85ms, fracRes: 0.2808, norm(attn): 0.8242, norm(output): 9.1250, norm(x): 6.5146, norm(y): 1.0284, norm:1.5118, tok/sec: 144535.54, flops:112.56, batch-reuse:1
@ 3941 train 4.2313 , allloss: 4.2319, dt: 894.33ms, fracRes: 0.2819, norm(attn): 0.8164, norm(output): 9.0625, norm(x): 6.3652, norm(y): 1.0286, norm:2.3868, tok/sec: 146558.40, flops:114.14, batch-reuse:1
@ 3942 train 4.1908 , allloss: 4.1911, dt: 908.44ms, fracRes: 0.2819, norm(attn): 0.8047, norm(output): 8.6875, norm(x): 6.3639, norm(y): 1.0285, norm:1.9497, tok/sec: 144283.28, flops:112.37, batch-reuse:1
@ 3943 train 4.2460 , allloss: 4.2461, dt: 911.76ms, fracRes: 0.2813, norm(attn): 0.8164, norm(output): 9.1250, norm(x): 6.4838, norm(y): 1.0287, norm:1.6857, tok/sec: 143757.38, flops:111.96, batch-reuse:1
@ 3944 train 4.1073 , allloss: 4.1081, dt: 906.45ms, fracRes: 0.2816, norm(attn): 0.8203, norm(output): 9.3125, norm(x): 6.7741, norm(y): 1.0291, norm:2.1182, tok/sec: 144599.18, flops:112.61, batch-reuse:1
@ 3945 train 4.3707 , allloss: 4.3710, dt: 905.34ms, fracRes: 0.2806, norm(attn): 0.8281, norm(output): 9.3750, norm(x): 6.6803, norm(y): 1.0292, norm:2.1390, tok/sec: 144776.21, flops:112.75, batch-reuse:1
@ 3946 train 4.1758 , allloss: 4.1761, dt: 901.69ms, fracRes: 0.2810, norm(attn): 0.8438, norm(output): 9.6250, norm(x): 6.8270, norm(y): 1.0296, norm:1.8272, tok/sec: 145362.79, flops:113.21, batch-reuse:1
@ 3947 train 4.2001 , allloss: 4.2003, dt: 900.94ms, fracRes: 0.2808, norm(attn): 0.8359, norm(output): 9.6250, norm(x): 6.9293, norm(y): 1.0295, norm:2.0638, tok/sec: 145483.42, flops:113.30, batch-reuse:1
@ 3948 train 4.1988 , allloss: 4.1991, dt: 913.49ms, fracRes: 0.2799, norm(attn): 0.8438, norm(output): 9.6875, norm(x): 6.8356, norm(y): 1.0295, norm:1.7188, tok/sec: 143484.34, flops:111.75, batch-reuse:1
@ 3949 train 4.1957 , allloss: 4.1959, dt: 904.20ms, fracRes: 0.2793, norm(attn): 0.8477, norm(output): 9.9375, norm(x): 7.0164, norm(y): 1.0294, norm:1.8258, tok/sec: 144959.79, flops:112.90, batch-reuse:1
@ 3950 train 4.2424 , allloss: 4.2426, dt: 909.48ms, fracRes: 0.2795, norm(attn): 0.8672, norm(output): 10.1250, norm(x): 7.0964, norm(y): 1.0293, norm:2.0750, tok/sec: 144117.35, flops:112.24, batch-reuse:1
@ 3951 train 4.2008 , allloss: 4.2010, dt: 903.09ms, fracRes: 0.2797, norm(attn): 0.8711, norm(output): 10.1250, norm(x): 7.2288, norm(y): 1.0296, norm:2.1209, tok/sec: 145137.94, flops:113.03, batch-reuse:1
@ 3952 train 4.2468 , allloss: 4.2472, dt: 909.41ms, fracRes: 0.2794, norm(attn): 0.8789, norm(output): 10.3750, norm(x): 7.3192, norm(y): 1.0300, norm:1.8788, tok/sec: 144127.97, flops:112.25, batch-reuse:1
@ 3953 train 4.2891 , allloss: 4.2892, dt: 905.72ms, fracRes: 0.2800, norm(attn): 0.8789, norm(output): 10.3125, norm(x): 7.2025, norm(y): 1.0300, norm:2.0617, tok/sec: 144715.58, flops:112.71, batch-reuse:1
@ 3954 train 4.2625 , allloss: 4.2627, dt: 904.26ms, fracRes: 0.2790, norm(attn): 0.8789, norm(output): 10.3125, norm(x): 7.2796, norm(y): 1.0299, norm:2.3565, tok/sec: 144949.59, flops:112.89, batch-reuse:1
@ 3955 train 4.1770 , allloss: 4.1771, dt: 899.99ms, fracRes: 0.2789, norm(attn): 0.8828, norm(output): 10.5625, norm(x): 7.3447, norm(y): 1.0301, norm:1.8477, tok/sec: 145636.97, flops:113.42, batch-reuse:1
@ 3956 train 4.1200 , allloss: 4.1202, dt: 913.77ms, fracRes: 0.2789, norm(attn): 0.8906, norm(output): 10.6250, norm(x): 7.4240, norm(y): 1.0304, norm:2.0723, tok/sec: 143440.17, flops:111.71, batch-reuse:1
@ 3957 train 4.2458 , allloss: 4.2460, dt: 911.22ms, fracRes: 0.2790, norm(attn): 0.9219, norm(output): 10.8125, norm(x): 7.4098, norm(y): 1.0305, norm:2.4118, tok/sec: 143842.20, flops:112.02, batch-reuse:1
@ 3958 train 4.2087 , allloss: 4.2089, dt: 915.23ms, fracRes: 0.2790, norm(attn): 0.8906, norm(output): 10.6875, norm(x): 7.5649, norm(y): 1.0305, norm:2.0977, tok/sec: 143212.87, flops:111.53, batch-reuse:1
@ 3959 train 4.2640 , allloss: 4.2643, dt: 917.72ms, fracRes: 0.2802, norm(attn): 0.9258, norm(output): 10.8750, norm(x): 7.4572, norm(y): 1.0308, norm:2.0462, tok/sec: 142823.66, flops:111.23, batch-reuse:1
@ 3960 train 4.1761 , allloss: 4.1763, dt: 905.62ms, fracRes: 0.2798, norm(attn): 0.8906, norm(output): 10.6250, norm(x): 7.4236, norm(y): 1.0306, norm:1.9426, tok/sec: 144731.96, flops:112.72, batch-reuse:1
@ 3961 train 4.1707 , allloss: 4.1708, dt: 912.73ms, fracRes: 0.2799, norm(attn): 0.8828, norm(output): 10.3750, norm(x): 7.3173, norm(y): 1.0306, norm:2.3135, tok/sec: 143604.39, flops:111.84, batch-reuse:1
@ 3962 train 4.2271 , allloss: 4.2272, dt: 918.17ms, fracRes: 0.2806, norm(attn): 0.8789, norm(output): 10.1875, norm(x): 7.2673, norm(y): 1.0308, norm:1.5002, tok/sec: 142753.30, flops:111.18, batch-reuse:1
@ 3963 train 4.1652 , allloss: 4.1654, dt: 922.52ms, fracRes: 0.2801, norm(attn): 0.8867, norm(output): 10.4375, norm(x): 7.2549, norm(y): 1.0309, norm:1.5638, tok/sec: 142080.66, flops:110.65, batch-reuse:1
@ 3964 train 4.1431 , allloss: 4.1432, dt: 903.35ms, fracRes: 0.2806, norm(attn): 0.8906, norm(output): 10.8125, norm(x): 7.5833, norm(y): 1.0312, norm:1.7505, tok/sec: 145094.69, flops:113.00, batch-reuse:1
@ 3965 train 4.2027 , allloss: 4.2028, dt: 905.33ms, fracRes: 0.2814, norm(attn): 0.8984, norm(output): 10.8125, norm(x): 7.3726, norm(y): 1.0310, norm:3.3372, tok/sec: 144778.50, flops:112.75, batch-reuse:1
@ 3966 train 4.2538 , allloss: 4.2539, dt: 906.58ms, fracRes: 0.2808, norm(attn): 0.8828, norm(output): 10.5625, norm(x): 7.3300, norm(y): 1.0310, norm:1.6235, tok/sec: 144577.85, flops:112.60, batch-reuse:1
@ 3967 train 4.2638 , allloss: 4.2639, dt: 901.89ms, fracRes: 0.2805, norm(attn): 0.8867, norm(output): 10.5000, norm(x): 7.3692, norm(y): 1.0313, norm:1.8704, tok/sec: 145330.01, flops:113.18, batch-reuse:1
@ 3968 train 4.2307 , allloss: 4.2308, dt: 903.11ms, fracRes: 0.2807, norm(attn): 0.8750, norm(output): 10.3750, norm(x): 7.4471, norm(y): 1.0315, norm:1.5516, tok/sec: 145133.99, flops:113.03, batch-reuse:1
@ 3969 train 4.2505 , allloss: 4.2507, dt: 899.60ms, fracRes: 0.2815, norm(attn): 0.8828, norm(output): 10.5625, norm(x): 7.3735, norm(y): 1.0315, norm:1.7690, tok/sec: 145700.58, flops:113.47, batch-reuse:1
@ 3970 train 4.1871 , allloss: 4.1872, dt: 919.99ms, fracRes: 0.2816, norm(attn): 0.8789, norm(output): 10.3125, norm(x): 7.3236, norm(y): 1.0314, norm:1.8005, tok/sec: 142471.55, flops:110.96, batch-reuse:1
@ 3971 train 4.2000 , allloss: 4.2001, dt: 908.93ms, fracRes: 0.2809, norm(attn): 0.8750, norm(output): 10.3125, norm(x): 7.2867, norm(y): 1.0315, norm:1.6099, tok/sec: 144204.94, flops:112.31, batch-reuse:1
@ 3972 train 4.2122 , allloss: 4.2124, dt: 907.09ms, fracRes: 0.2818, norm(attn): 0.8828, norm(output): 10.5000, norm(x): 7.2969, norm(y): 1.0318, norm:2.8090, tok/sec: 144496.90, flops:112.53, batch-reuse:1
@ 3973 train 4.1458 , allloss: 4.1460, dt: 900.29ms, fracRes: 0.2810, norm(attn): 0.8867, norm(output): 10.8125, norm(x): 7.5425, norm(y): 1.0320, norm:1.7613, tok/sec: 145589.30, flops:113.39, batch-reuse:1
@ 3974 train 4.2653 , allloss: 4.2655, dt: 898.68ms, fracRes: 0.2812, norm(attn): 0.8867, norm(output): 10.6250, norm(x): 7.3515, norm(y): 1.0319, norm:2.4641, tok/sec: 145849.86, flops:113.59, batch-reuse:1
@ 3975 train 4.1535 , allloss: 4.1537, dt: 904.09ms, fracRes: 0.2804, norm(attn): 0.8750, norm(output): 10.1875, norm(x): 7.3458, norm(y): 1.0317, norm:1.7790, tok/sec: 144976.65, flops:112.91, batch-reuse:1
@ 3976 train 4.2473 , allloss: 4.2474, dt: 899.70ms, fracRes: 0.2810, norm(attn): 0.8750, norm(output): 10.1875, norm(x): 7.3353, norm(y): 1.0317, norm:2.4099, tok/sec: 145684.79, flops:113.46, batch-reuse:1
@ 3977 train 3.9312 , allloss: 3.9315, dt: 888.90ms, fracRes: 0.2826, norm(attn): 0.8750, norm(output): 10.1250, norm(x): 7.3136, norm(y): 1.0320, norm:1.3609, tok/sec: 147454.15, flops:114.84, batch-reuse:1
@ 3978 train 4.1713 , allloss: 4.1714, dt: 892.79ms, fracRes: 0.2811, norm(attn): 0.8750, norm(output): 10.2500, norm(x): 7.2376, norm(y): 1.0319, norm:1.8245, tok/sec: 146812.02, flops:114.34, batch-reuse:1
@ 3979 train 4.1920 , allloss: 4.1921, dt: 893.54ms, fracRes: 0.2818, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 7.1114, norm(y): 1.0321, norm:1.4201, tok/sec: 146688.74, flops:114.24, batch-reuse:1
@ 3980 train 4.1346 , allloss: 4.1347, dt: 900.99ms, fracRes: 0.2815, norm(attn): 0.8672, norm(output): 10.0000, norm(x): 7.0873, norm(y): 1.0321, norm:1.4744, tok/sec: 145475.57, flops:113.30, batch-reuse:1
@ 3981 train 4.2020 , allloss: 4.2021, dt: 901.88ms, fracRes: 0.2816, norm(attn): 0.8828, norm(output): 10.3750, norm(x): 7.1944, norm(y): 1.0322, norm:2.4844, tok/sec: 145331.66, flops:113.18, batch-reuse:1
@ 3982 train 4.2003 , allloss: 4.2005, dt: 899.18ms, fracRes: 0.2817, norm(attn): 0.8750, norm(output): 10.3750, norm(x): 7.3927, norm(y): 1.0323, norm:1.7286, tok/sec: 145768.76, flops:113.53, batch-reuse:1
@ 3983 train 4.2101 , allloss: 4.2103, dt: 878.60ms, fracRes: 0.2817, norm(attn): 0.8750, norm(output): 10.1875, norm(x): 7.2299, norm(y): 1.0324, norm:1.9940, tok/sec: 149182.85, flops:116.18, batch-reuse:1
@ 3984 train 4.1919 , allloss: 4.1921, dt: 890.87ms, fracRes: 0.2817, norm(attn): 0.8633, norm(output): 10.0000, norm(x): 7.0875, norm(y): 1.0324, norm:1.5306, tok/sec: 147127.68, flops:114.58, batch-reuse:1
@ 3985 train 4.2236 , allloss: 4.2237, dt: 886.34ms, fracRes: 0.2814, norm(attn): 0.8594, norm(output): 9.9375, norm(x): 6.9666, norm(y): 1.0324, norm:1.2289, tok/sec: 147880.46, flops:115.17, batch-reuse:1
@ 3986 train 4.0889 , allloss: 4.0890, dt: 911.36ms, fracRes: 0.2824, norm(attn): 0.8398, norm(output): 9.5625, norm(x): 6.8383, norm(y): 1.0328, norm:1.2786, tok/sec: 143819.88, flops:112.01, batch-reuse:1
@ 3987 train 4.0326 , allloss: 4.0329, dt: 913.12ms, fracRes: 0.2810, norm(attn): 0.8320, norm(output): 9.6250, norm(x): 6.7569, norm(y): 1.0327, norm:1.3405, tok/sec: 143542.56, flops:111.79, batch-reuse:1
@ 3988 train 4.0991 , allloss: 4.0992, dt: 916.41ms, fracRes: 0.2820, norm(attn): 0.8242, norm(output): 9.5625, norm(x): 6.7523, norm(y): 1.0328, norm:1.5678, tok/sec: 143028.21, flops:111.39, batch-reuse:1
@ 3989 train 4.1605 , allloss: 4.1607, dt: 894.46ms, fracRes: 0.2823, norm(attn): 0.8281, norm(output): 9.7500, norm(x): 6.9838, norm(y): 1.0328, norm:1.4329, tok/sec: 146537.27, flops:114.12, batch-reuse:1
@ 3990 train 4.1088 , allloss: 4.1089, dt: 884.56ms, fracRes: 0.2830, norm(attn): 0.8594, norm(output): 10.1250, norm(x): 7.2560, norm(y): 1.0330, norm:1.3320, tok/sec: 148177.69, flops:115.40, batch-reuse:1
@ 3991 train 4.1502 , allloss: 4.1504, dt: 885.29ms, fracRes: 0.2820, norm(attn): 0.8594, norm(output): 10.1875, norm(x): 7.3210, norm(y): 1.0329, norm:1.4475, tok/sec: 148055.85, flops:115.31, batch-reuse:1
@ 3992 train 4.1782 , allloss: 4.1782, dt: 889.31ms, fracRes: 0.2821, norm(attn): 0.8711, norm(output): 10.3750, norm(x): 7.2531, norm(y): 1.0332, norm:1.7437, tok/sec: 147386.35, flops:114.79, batch-reuse:1
@ 3993 train 4.1611 , allloss: 4.1612, dt: 899.00ms, fracRes: 0.2820, norm(attn): 0.8789, norm(output): 10.5625, norm(x): 7.3894, norm(y): 1.0335, norm:1.8152, tok/sec: 145796.91, flops:113.55, batch-reuse:1
@ 3994 train 4.1553 , allloss: 4.1555, dt: 902.97ms, fracRes: 0.2825, norm(attn): 0.8906, norm(output): 10.9375, norm(x): 7.4715, norm(y): 1.0340, norm:1.9487, tok/sec: 145155.88, flops:113.05, batch-reuse:1
@ 3995 train 4.1521 , allloss: 4.1522, dt: 902.01ms, fracRes: 0.2818, norm(attn): 0.8906, norm(output): 10.9375, norm(x): 7.7064, norm(y): 1.0339, norm:1.6163, tok/sec: 145311.26, flops:113.17, batch-reuse:1
@ 3996 train 4.1896 , allloss: 4.1899, dt: 897.72ms, fracRes: 0.2822, norm(attn): 0.8828, norm(output): 10.6250, norm(x): 7.5273, norm(y): 1.0336, norm:1.9745, tok/sec: 146004.95, flops:113.71, batch-reuse:1
@ 3997 train 4.1279 , allloss: 4.1280, dt: 902.04ms, fracRes: 0.2819, norm(attn): 0.8750, norm(output): 10.1875, norm(x): 7.2732, norm(y): 1.0333, norm:1.7173, tok/sec: 145305.58, flops:113.16, batch-reuse:1
@ 3998 train 4.1068 , allloss: 4.1069, dt: 898.24ms, fracRes: 0.2826, norm(attn): 0.8789, norm(output): 10.3125, norm(x): 7.2661, norm(y): 1.0336, norm:1.9783, tok/sec: 145921.09, flops:113.64, batch-reuse:1
@ 3999 train 4.1563 , allloss: 4.1565, dt: 904.12ms, fracRes: 0.2826, norm(attn): 0.8750, norm(output): 10.2500, norm(x): 7.2761, norm(y): 1.0340, norm:2.0734, tok/sec: 144971.80, flops:112.90, batch-reuse:1
@ 4000 val 4.1604
@ 4000 train 4.1645 , allloss: 4.1646, dt: 1337.88ms, fracRes: 0.2814, norm(attn): 0.8867, norm(output): 10.4375, norm(x): 7.2208, norm(y): 1.0340, norm:2.7061, tok/sec: 97970.03, flops:76.30, batch-reuse:1
@ 4001 train 4.0856 , allloss: 4.0857, dt: 896.17ms, fracRes: 0.2818, norm(attn): 0.8828, norm(output): 10.3750, norm(x): 7.5549, norm(y): 1.0345, norm:2.5165, tok/sec: 146258.18, flops:113.91, batch-reuse:1
@ 4002 train 4.1115 , allloss: 4.1116, dt: 907.78ms, fracRes: 0.2818, norm(attn): 0.8750, norm(output): 10.2500, norm(x): 7.3737, norm(y): 1.0343, norm:1.5349, tok/sec: 144387.34, flops:112.45, batch-reuse:1
@ 4003 train 4.1818 , allloss: 4.1820, dt: 907.21ms, fracRes: 0.2812, norm(attn): 0.8867, norm(output): 10.6250, norm(x): 7.3442, norm(y): 1.0343, norm:2.0007, tok/sec: 144478.30, flops:112.52, batch-reuse:1
@ 4004 train 4.0487 , allloss: 4.0488, dt: 888.97ms, fracRes: 0.2815, norm(attn): 0.8828, norm(output): 10.3125, norm(x): 7.2394, norm(y): 1.0344, norm:1.7188, tok/sec: 147442.05, flops:114.83, batch-reuse:1
@ 4005 train 4.3489 , allloss: 4.3490, dt: 910.57ms, fracRes: 0.2833, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 7.1796, norm(y): 1.0347, norm:2.0393, tok/sec: 143944.56, flops:112.10, batch-reuse:1
@ 4006 train 4.1948 , allloss: 4.1949, dt: 909.57ms, fracRes: 0.2813, norm(attn): 0.8750, norm(output): 10.1250, norm(x): 7.1400, norm(y): 1.0344, norm:2.1258, tok/sec: 144103.94, flops:112.23, batch-reuse:1
@ 4007 train 4.2105 , allloss: 4.2105, dt: 908.76ms, fracRes: 0.2821, norm(attn): 0.8750, norm(output): 10.2500, norm(x): 7.4498, norm(y): 1.0346, norm:3.0668, tok/sec: 144232.26, flops:112.33, batch-reuse:1
@ 4008 train 4.2473 , allloss: 4.2474, dt: 907.59ms, fracRes: 0.2814, norm(attn): 0.8984, norm(output): 10.8125, norm(x): 7.4297, norm(y): 1.0345, norm:3.5691, tok/sec: 144417.08, flops:112.47, batch-reuse:1
@ 4009 train 4.1595 , allloss: 4.1595, dt: 900.94ms, fracRes: 0.2813, norm(attn): 0.8906, norm(output): 10.8125, norm(x): 7.5692, norm(y): 1.0349, norm:2.0431, tok/sec: 145484.04, flops:113.30, batch-reuse:1
@ 4010 train 4.1710 , allloss: 4.1712, dt: 901.33ms, fracRes: 0.2809, norm(attn): 0.8984, norm(output): 11.0000, norm(x): 7.7838, norm(y): 1.0352, norm:2.2181, tok/sec: 145420.23, flops:113.25, batch-reuse:1
@ 4011 train 4.1886 , allloss: 4.1889, dt: 904.40ms, fracRes: 0.2816, norm(attn): 0.8867, norm(output): 10.6875, norm(x): 7.5524, norm(y): 1.0351, norm:1.5836, tok/sec: 144927.01, flops:112.87, batch-reuse:1
@ 4012 train 4.1907 , allloss: 4.1907, dt: 907.76ms, fracRes: 0.2819, norm(attn): 0.8789, norm(output): 10.4375, norm(x): 7.3572, norm(y): 1.0352, norm:1.8036, tok/sec: 144390.68, flops:112.45, batch-reuse:1
@ 4013 train 4.2414 , allloss: 4.2416, dt: 896.29ms, fracRes: 0.2822, norm(attn): 0.8828, norm(output): 10.0625, norm(x): 7.0408, norm(y): 1.0351, norm:2.4802, tok/sec: 146238.61, flops:113.89, batch-reuse:1
@ 4014 train 4.3192 , allloss: 4.3194, dt: 904.63ms, fracRes: 0.2830, norm(attn): 0.8750, norm(output): 9.9375, norm(x): 7.1166, norm(y): 1.0352, norm:2.8522, tok/sec: 144889.46, flops:112.84, batch-reuse:1
@ 4015 train 4.1804 , allloss: 4.1805, dt: 897.45ms, fracRes: 0.2825, norm(attn): 0.8672, norm(output): 9.8125, norm(x): 6.9837, norm(y): 1.0352, norm:1.8009, tok/sec: 146049.48, flops:113.74, batch-reuse:1
@ 4016 train 4.2048 , allloss: 4.2049, dt: 916.61ms, fracRes: 0.2823, norm(attn): 0.8672, norm(output): 9.8125, norm(x): 6.9561, norm(y): 1.0354, norm:1.5701, tok/sec: 142997.15, flops:111.37, batch-reuse:1
@ 4017 train 4.1340 , allloss: 4.1341, dt: 915.48ms, fracRes: 0.2819, norm(attn): 0.8594, norm(output): 9.6250, norm(x): 6.8617, norm(y): 1.0354, norm:1.2912, tok/sec: 143172.81, flops:111.50, batch-reuse:1
@ 4018 train 4.1666 , allloss: 4.1667, dt: 917.12ms, fracRes: 0.2814, norm(attn): 0.8555, norm(output): 9.6875, norm(x): 6.8781, norm(y): 1.0355, norm:1.4384, tok/sec: 142916.22, flops:111.30, batch-reuse:1
@ 4019 train 4.2912 , allloss: 4.2913, dt: 913.90ms, fracRes: 0.2822, norm(attn): 0.8438, norm(output): 9.6250, norm(x): 7.0635, norm(y): 1.0358, norm:2.3292, tok/sec: 143420.26, flops:111.70, batch-reuse:1
@ 4020 train 4.1689 , allloss: 4.1690, dt: 913.86ms, fracRes: 0.2818, norm(attn): 0.8594, norm(output): 9.8750, norm(x): 6.9362, norm(y): 1.0358, norm:2.8819, tok/sec: 143427.44, flops:111.70, batch-reuse:1
@ 4021 train 4.1526 , allloss: 4.1527, dt: 917.57ms, fracRes: 0.2821, norm(attn): 0.8594, norm(output): 9.9375, norm(x): 7.0740, norm(y): 1.0359, norm:1.5724, tok/sec: 142847.00, flops:111.25, batch-reuse:1
@ 4022 train 4.0252 , allloss: 4.0253, dt: 928.54ms, fracRes: 0.2817, norm(attn): 0.8789, norm(output): 10.5000, norm(x): 7.5645, norm(y): 1.0363, norm:1.4702, tok/sec: 141159.60, flops:109.94, batch-reuse:1
@ 4023 train 4.2472 , allloss: 4.2473, dt: 907.06ms, fracRes: 0.2820, norm(attn): 0.8750, norm(output): 10.5625, norm(x): 7.6486, norm(y): 1.0363, norm:1.6089, tok/sec: 144501.80, flops:112.54, batch-reuse:1
@ 4024 train 4.2200 , allloss: 4.2201, dt: 892.23ms, fracRes: 0.2818, norm(attn): 0.8711, norm(output): 10.3750, norm(x): 7.4669, norm(y): 1.0360, norm:1.5806, tok/sec: 146903.51, flops:114.41, batch-reuse:1
@ 4025 train 4.1344 , allloss: 4.1345, dt: 903.19ms, fracRes: 0.2811, norm(attn): 0.8711, norm(output): 10.3125, norm(x): 7.3247, norm(y): 1.0360, norm:1.7694, tok/sec: 145121.04, flops:113.02, batch-reuse:1
@ 4026 train 4.0664 , allloss: 4.0665, dt: 899.83ms, fracRes: 0.2813, norm(attn): 0.8594, norm(output): 10.0625, norm(x): 7.3472, norm(y): 1.0358, norm:2.1586, tok/sec: 145663.59, flops:113.44, batch-reuse:1
@ 4027 train 4.1626 , allloss: 4.1627, dt: 909.87ms, fracRes: 0.2813, norm(attn): 0.8750, norm(output): 10.0625, norm(x): 7.0761, norm(y): 1.0361, norm:2.9377, tok/sec: 144056.44, flops:112.19, batch-reuse:1
@ 4028 train 4.1434 , allloss: 4.1435, dt: 902.50ms, fracRes: 0.2814, norm(attn): 0.8711, norm(output): 10.0625, norm(x): 7.1284, norm(y): 1.0361, norm:1.3973, tok/sec: 145231.69, flops:113.11, batch-reuse:1
@ 4029 train 4.1359 , allloss: 4.1361, dt: 900.20ms, fracRes: 0.2816, norm(attn): 0.8398, norm(output): 9.7500, norm(x): 6.9655, norm(y): 1.0362, norm:1.4430, tok/sec: 145602.60, flops:113.40, batch-reuse:1
@ 4030 train 3.9928 , allloss: 3.9930, dt: 919.66ms, fracRes: 0.2824, norm(attn): 0.8438, norm(output): 9.6875, norm(x): 6.9551, norm(y): 1.0364, norm:1.6332, tok/sec: 142522.74, flops:111.00, batch-reuse:1
@ 4031 train 4.0198 , allloss: 4.0200, dt: 919.45ms, fracRes: 0.2822, norm(attn): 0.8594, norm(output): 9.8125, norm(x): 6.9488, norm(y): 1.0365, norm:1.4912, tok/sec: 142554.45, flops:111.02, batch-reuse:1
@ 4032 train 4.0061 , allloss: 4.0063, dt: 909.27ms, fracRes: 0.2813, norm(attn): 0.8594, norm(output): 9.9375, norm(x): 7.0850, norm(y): 1.0365, norm:1.2877, tok/sec: 144150.08, flops:112.26, batch-reuse:1
@ 4033 train 4.0688 , allloss: 4.0691, dt: 894.21ms, fracRes: 0.2821, norm(attn): 0.8672, norm(output): 9.9375, norm(x): 6.9549, norm(y): 1.0364, norm:2.1507, tok/sec: 146578.53, flops:114.16, batch-reuse:1
@ 4034 train 4.0668 , allloss: 4.0669, dt: 889.99ms, fracRes: 0.2825, norm(attn): 0.8438, norm(output): 9.9375, norm(x): 7.1289, norm(y): 1.0366, norm:2.2048, tok/sec: 147274.38, flops:114.70, batch-reuse:1
@ 4035 train 4.0495 , allloss: 4.0496, dt: 901.57ms, fracRes: 0.2822, norm(attn): 0.8320, norm(output): 9.7500, norm(x): 6.9591, norm(y): 1.0364, norm:1.4407, tok/sec: 145382.39, flops:113.22, batch-reuse:1
@ 4036 train 3.9705 , allloss: 3.9706, dt: 900.32ms, fracRes: 0.2826, norm(attn): 0.8398, norm(output): 9.7500, norm(x): 6.9248, norm(y): 1.0365, norm:1.4096, tok/sec: 145583.21, flops:113.38, batch-reuse:1
@ 4037 train 4.0280 , allloss: 4.0282, dt: 897.16ms, fracRes: 0.2821, norm(attn): 0.8281, norm(output): 9.6250, norm(x): 6.9098, norm(y): 1.0364, norm:1.4261, tok/sec: 146097.34, flops:113.78, batch-reuse:1
@ 4038 train 4.0092 , allloss: 4.0095, dt: 916.24ms, fracRes: 0.2824, norm(attn): 0.8281, norm(output): 9.7500, norm(x): 7.0033, norm(y): 1.0366, norm:1.4377, tok/sec: 143054.90, flops:111.41, batch-reuse:1
@ 4039 train 3.9772 , allloss: 3.9773, dt: 912.74ms, fracRes: 0.2820, norm(attn): 0.8164, norm(output): 9.3750, norm(x): 6.8062, norm(y): 1.0364, norm:1.2250, tok/sec: 143603.45, flops:111.84, batch-reuse:1
@ 4040 train 4.0255 , allloss: 4.0258, dt: 919.46ms, fracRes: 0.2827, norm(attn): 0.8164, norm(output): 9.3750, norm(x): 6.7992, norm(y): 1.0365, norm:1.3318, tok/sec: 142553.93, flops:111.02, batch-reuse:1
@ 4041 train 3.9223 , allloss: 3.9224, dt: 916.47ms, fracRes: 0.2828, norm(attn): 0.8125, norm(output): 9.1875, norm(x): 6.6992, norm(y): 1.0366, norm:1.1212, tok/sec: 143018.09, flops:111.38, batch-reuse:1
@ 4042 train 4.0425 , allloss: 4.0426, dt: 892.31ms, fracRes: 0.2825, norm(attn): 0.8203, norm(output): 9.6875, norm(x): 7.0206, norm(y): 1.0369, norm:1.2971, tok/sec: 146891.22, flops:114.40, batch-reuse:1
@ 4043 train 4.0413 , allloss: 4.0414, dt: 902.09ms, fracRes: 0.2825, norm(attn): 0.8320, norm(output): 9.8750, norm(x): 7.0242, norm(y): 1.0370, norm:1.3451, tok/sec: 145298.86, flops:113.16, batch-reuse:1
@ 4044 train 4.0506 , allloss: 4.0508, dt: 912.20ms, fracRes: 0.2828, norm(attn): 0.8359, norm(output): 10.0000, norm(x): 7.1978, norm(y): 1.0371, norm:1.3061, tok/sec: 143687.72, flops:111.90, batch-reuse:1
@ 4045 train 4.0105 , allloss: 4.0106, dt: 906.11ms, fracRes: 0.2833, norm(attn): 0.8594, norm(output): 9.9375, norm(x): 7.0753, norm(y): 1.0372, norm:1.6515, tok/sec: 144653.59, flops:112.66, batch-reuse:1
@ 4046 train 4.0544 , allloss: 4.0545, dt: 901.00ms, fracRes: 0.2827, norm(attn): 0.8281, norm(output): 9.7500, norm(x): 7.0878, norm(y): 1.0372, norm:1.4128, tok/sec: 145474.15, flops:113.30, batch-reuse:1
@ 4047 train 4.1365 , allloss: 4.1366, dt: 912.50ms, fracRes: 0.2830, norm(attn): 0.8594, norm(output): 9.9375, norm(x): 7.0450, norm(y): 1.0372, norm:2.1205, tok/sec: 143639.81, flops:111.87, batch-reuse:1
@ 4048 train 4.0212 , allloss: 4.0213, dt: 905.83ms, fracRes: 0.2834, norm(attn): 0.8594, norm(output): 9.9375, norm(x): 7.1068, norm(y): 1.0374, norm:1.1187, tok/sec: 144697.75, flops:112.69, batch-reuse:1
@ 4049 train 3.9810 , allloss: 3.9811, dt: 891.09ms, fracRes: 0.2838, norm(attn): 0.8594, norm(output): 9.9375, norm(x): 7.0816, norm(y): 1.0377, norm:1.5429, tok/sec: 147091.42, flops:114.56, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0109,     0.1348,     0.8555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2773,     0.0239,     0.5156,     0.1836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.0420,     0.6797,     0.1836,     0.0913,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8984,     0.0008,     0.0718,     0.0288,     0.0019,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4082,     0.0143,     0.3555,     0.0840,     0.0605,     0.0060,     0.0723,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8125,     0.0001,     0.1465,     0.0249,     0.0021,     0.0002,     0.0011,     0.0120,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6680,     0.0107,     0.1709,     0.0806,     0.0104,     0.0008,     0.0070,     0.0496,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.0077,     0.0141,     0.0211,     0.0092,     0.0068,     0.0035,     0.0767,     0.0096,     0.0251,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0245,     0.1318,     0.0742,     0.0938,     0.0496,     0.0391,     0.4316,     0.0214,     0.0457,     0.0293,     0.0581,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6406,     0.0011,     0.0249,     0.0062,     0.0199,     0.0109,     0.0022,     0.0571,     0.0081,     0.0186,     0.1719,     0.0393,     0.0000,     0.0000,     0.0000],
        [    0.4805,     0.0007,     0.0525,     0.0228,     0.0038,     0.0007,     0.0027,     0.0378,     0.0005,     0.0359,     0.0109,     0.3086,     0.0427,     0.0000,     0.0000],
        [    0.4980,     0.0292,     0.1089,     0.1172,     0.0146,     0.0012,     0.0131,     0.0383,     0.0035,     0.0145,     0.0562,     0.0277,     0.0723,     0.0047,     0.0000],
        [    0.6602,     0.0518,     0.0069,     0.0129,     0.0137,     0.0063,     0.0042,     0.0129,     0.0311,     0.0106,     0.0728,     0.0109,     0.0640,     0.0381,     0.0023]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0259,     -0.0086,     -0.0218,  ...,      0.0314,      0.0091,     -0.0188],
        [    -0.0339,      0.0285,      0.0094,  ...,     -0.0258,     -0.0121,      0.0000],
        [    -0.0322,      0.0413,      0.0322,  ...,      0.0060,     -0.0044,     -0.0093],
        ...,
        [     0.0142,     -0.0074,      0.0278,  ...,     -0.0220,      0.0126,      0.0079],
        [    -0.0035,      0.0227,      0.0022,  ...,     -0.0266,     -0.0414,     -0.0416],
        [     0.0391,     -0.0119,      0.0461,  ...,     -0.0121,      0.0222,     -0.0025]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9766, -2.4375,  1.3750, -2.6562, -2.0938, -0.9922,  0.3652, -0.1836, -1.7812, -0.3828, -2.2812,  2.2031,  1.1406, -1.0078, -0.3516, -1.4844,  0.1963, -0.5859, -0.6680,  0.9688,  2.1406,  0.8633, -2.2031,  0.1553,  0.5234,  0.1025, -4.0625,  0.3301,  2.6875,  0.8086,  0.0708,  0.5898,
        -0.5078,  1.2891,  1.3594,  1.1719,  1.4922, -0.9414,  2.1719,  1.9688,  0.3281, -1.2500, -2.1250,  0.3672, -0.2871, -2.2812,  2.5312, -1.4531, -0.7656,  1.0625,  1.1719, -0.5938, -1.0938,  0.1060,  1.1484,  1.2891, -0.1416, -0.6172,  0.6680,  1.1172,  1.8281,  1.4375, -0.4492,  0.6914],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0048,  0.0465,  0.0121,  ..., -0.0018,  0.0405, -0.0262],
        [-0.0024, -0.0219, -0.0119,  ...,  0.0224, -0.0164, -0.0595],
        [ 0.0197,  0.0293, -0.0567,  ...,  0.0400, -0.0399, -0.0438],
        ...,
        [ 0.0049,  0.0143, -0.0309,  ...,  0.0455, -0.0341, -0.0314],
        [-0.0018, -0.0149, -0.0114,  ..., -0.0221,  0.0436,  0.0483],
        [ 0.0233,  0.0404, -0.0726,  ..., -0.0098, -0.0713, -0.0012]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.7578,      1.3438,     -1.3438,     -1.5703,     -0.1924,      1.6328,     -0.9297,      0.3516,      1.4297,     -0.2539,      1.1484,     -0.4062,     -1.5859,     -0.9102,     -0.2344,      0.3828,     -1.9297,      0.5703,      2.2188,     -0.6172,     -1.4453,     -0.4746,
             0.4707,     -0.0630,     -0.0281,     -0.0004,      1.4922,     -1.2031,     -1.2578,     -1.0859,      0.3164,      0.1738,     -0.1113,      0.4102,      0.9609,     -0.7422,     -0.1030,     -0.5156,     -1.6250,     -0.5508,     -0.9766,      0.6992,      0.3203,      0.5938,
             0.1875,      1.1719,      0.0815,      0.9219,     -1.1641,     -1.0703,     -0.8047,      1.0469,      1.8125,     -0.0188,      0.8555,      0.2334,     -0.6133,      1.0391,     -0.0048,      0.4863,     -1.5000,     -1.3125,      0.6445,     -0.5508], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -7.8438, -3.7031, -5.1562, -3.6875, -7.1875, -7.1250, -5.3750, -4.1562, -5.0938, -0.9219, -5.7812, -3.1719, -3.7812, -2.5312],
        [ 0.0000,  2.5156,  4.3750,  4.5000,  3.8750,  5.5625,  5.1875,  2.7188,  4.3750,  2.7500,  2.2500,  1.9219,  3.4062,  4.3125,  1.9141],
        [ 0.0000, -2.4531,  0.6211, -0.4121, -1.3125, -3.6406, -1.9688, -1.5625, -2.3594, -1.2031, -1.8984, -0.7969, -1.2344, -2.2812, -0.7500],
        [ 0.0000,  2.7969,  5.5625,  4.2500,  3.5625,  2.5000,  5.9688,  1.1250,  2.7812,  3.6719,  4.1875,  1.2109,  0.9141,  3.4844,  4.1250],
        [ 0.0000, -7.0938, -2.5156, -3.4375, -6.1562, -9.6250, -6.3438, -4.3125, -8.6875, -4.3750, -3.4688, -3.5312, -3.2188, -8.2500, -4.5938],
        [ 0.0000, -3.3438, -0.1367, -1.5781, -1.9062, -4.2188, -1.7266, -2.2969, -4.0312, -1.1797, -0.2559, -1.9922, -1.9297, -3.2969, -0.6758],
        [ 0.0000, -9.4375, -1.7109, -3.4844, -5.9375, -8.3125, -6.6250, -4.2188, -7.9062, -3.0625, -3.7812, -1.8828, -3.7031, -7.1250, -4.4688],
        [ 0.0000, -4.1250, -1.3672, -2.1250, -4.1562, -6.6875, -4.5625, -2.6094, -6.1250, -3.7344, -3.2500, -3.0938, -2.0156, -5.5625, -3.5312],
        [ 0.0000, -4.6875, -4.0625, -3.6719, -4.5000, -4.8125, -5.4688, -2.3750, -4.4688, -3.4844, -3.0000, -4.0312, -1.1953, -4.9688, -6.0625],
        [ 0.0000,  1.6875,  1.1094,  1.3438,  0.7031,  0.4648,  2.8750, -0.1367,  0.6211,  0.1787,  0.8594, -0.2285,  0.1836,  1.0469,  1.7578],
        [ 0.0000, -6.3438, -3.2500, -4.6250, -3.4688, -4.0625, -5.6875, -2.4219, -4.3750, -3.5469, -1.3125, -2.7812, -0.8633, -3.9531, -3.9375],
        [ 0.0000, -6.5938, -2.2188, -3.0469, -4.8438, -6.5938, -5.1562, -2.5469, -6.8750, -2.5938, -3.7812, -0.4434, -2.4219, -6.1562, -4.3438],
        [ 0.0000, -2.8438, -1.5234, -1.4453, -3.5312, -6.0000, -3.6406, -2.5625, -4.9688, -3.5312, -2.1875, -2.8906, -1.9375, -4.6562, -2.5469],
        [ 0.0000, -2.5469, -4.5625, -3.9375, -3.8750, -4.6562, -5.0625, -3.9375, -3.0625, -4.1250, -2.2031, -4.0938, -2.3281, -2.8594, -5.6562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5866],
        [0.5258],
        [0.3734],
        [0.3399],
        [0.6024],
        [0.3086],
        [0.5203],
        [0.4090],
        [0.4934],
        [0.1050],
        [0.3556],
        [0.2628],
        [0.3518],
        [0.3447]], device='cuda:0')
tensor([[1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0413, -0.0322, -0.0029,  ...,  0.0396, -0.0384, -0.0209],
        [ 0.0082, -0.0216,  0.0295,  ..., -0.0187,  0.0112, -0.0047],
        [-0.0007,  0.0455,  0.0226,  ..., -0.0546,  0.0047,  0.0124],
        ...,
        [-0.0141, -0.0074, -0.0171,  ...,  0.0338, -0.0067,  0.0373],
        [ 0.0244,  0.0154,  0.0161,  ..., -0.0279,  0.0502,  0.0164],
        [-0.0132, -0.0213, -0.0208,  ...,  0.0578, -0.0356,  0.0152]], device='cuda:0', requires_grad=True)
K: tensor([ 6.1875, -3.7031,  5.4062, -3.7500,  0.6719, -4.6562, -2.9375,  4.3125,  3.6094, -1.7031, -2.4219, -5.1562, -3.1719, -3.1250, -2.8281, -3.1719,  3.3125,  2.5000,  3.8594, -1.6641, -3.7031, -3.2031,  5.2500,  4.5625,  4.2188, -5.9062, -5.0312,  2.2188,  4.0000, -4.9688,  4.2500, -1.7891,
        -4.6250, -5.5000,  3.3281,  4.4375, -3.0938, -4.0625,  5.0000, -2.6094, -3.7500,  1.4375,  5.1250,  2.6719, -3.2188, -1.1719,  5.5000,  3.0625, -4.9062,  4.9062, -3.5000,  3.0469, -4.6250, -3.4531,  4.0625, -4.5000,  3.6875, -3.7656, -4.7812, -4.2812,  4.1875, -3.0938,  4.6562, -6.9688],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0075,  0.0162,  0.0405,  ..., -0.0327,  0.0214,  0.0050],
        [ 0.0222, -0.0126, -0.0232,  ...,  0.0030, -0.0436, -0.0196],
        [ 0.0331,  0.0111, -0.0236,  ...,  0.0502,  0.0111, -0.0117],
        ...,
        [-0.0100,  0.0003,  0.0039,  ..., -0.0434, -0.0008, -0.0548],
        [-0.0143, -0.0181, -0.0129,  ...,  0.0494, -0.0561,  0.0059],
        [ 0.0031,  0.0290,  0.0017,  ..., -0.0825,  0.0306,  0.0029]], device='cuda:0', requires_grad=True)
Q: tensor([-3.5781,  5.6875, -5.8125,  4.6562, -0.6016,  5.8750,  3.3438, -5.6562, -2.8750,  1.9453,  3.1875,  5.7188,  4.4375,  3.4531,  2.4375,  3.8281, -5.5938, -2.2969, -3.1719,  3.8281,  5.9688,  4.6875, -6.9688, -4.1875, -5.8438,  5.0938,  4.5938, -2.3750, -4.3438,  5.9375, -5.4062,  1.8047,
         5.1250,  6.0312, -2.7969, -6.2812,  4.5938,  4.4375, -5.1250,  2.0312,  3.2344, -5.2188, -5.5000, -2.0938,  0.5469,  1.9766, -4.7812, -5.4688,  4.9062, -4.0312,  5.1562, -2.6406,  5.6562,  4.2188, -5.3750,  4.9688, -6.1562,  5.3438,  4.5625,  4.1250, -4.5938,  2.9062, -5.6250,  5.5625],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -97.0000,  -86.5000, -100.5000, -103.5000,  -99.5000, -107.0000,  -98.0000,  -88.0000, -111.5000,  -84.0000, -102.0000,  -92.5000,  -83.5000,  -92.5000],
        [   0.0000, -113.5000, -103.0000, -119.5000, -120.5000, -121.0000, -127.5000, -116.5000, -104.5000, -133.0000,  -99.0000, -120.5000, -108.5000,  -99.5000, -109.5000],
        [   0.0000, -140.0000, -126.5000, -146.0000, -148.0000, -147.0000, -155.0000, -142.0000, -125.5000, -162.0000, -121.5000, -148.0000, -133.0000, -120.0000, -134.0000],
        [   0.0000, -136.0000, -122.5000, -142.0000, -142.0000, -143.0000, -150.0000, -139.0000, -121.5000, -157.0000, -117.0000, -144.0000, -129.0000, -116.0000, -130.0000],
        [   0.0000, -132.0000, -119.0000, -136.0000, -143.0000, -136.0000, -149.0000, -133.0000, -121.5000, -153.0000, -116.0000, -137.0000, -125.5000, -115.5000, -126.0000],
        [   0.0000, -135.0000, -121.0000, -141.0000, -145.0000, -142.0000, -154.0000, -140.0000, -124.0000, -157.0000, -118.0000, -143.0000, -130.0000, -118.0000, -127.5000],
        [   0.0000, -131.0000, -117.0000, -136.0000, -142.0000, -138.0000, -150.0000, -136.0000, -120.5000, -152.0000, -116.0000, -138.0000, -127.0000, -115.0000, -124.5000],
        [   0.0000, -135.0000, -121.0000, -140.0000, -143.0000, -142.0000, -151.0000, -138.0000, -122.0000, -156.0000, -118.0000, -142.0000, -129.0000, -116.5000, -127.5000],
        [   0.0000, -146.0000, -130.0000, -153.0000, -154.0000, -154.0000, -162.0000, -150.0000, -131.0000, -169.0000, -126.5000, -154.0000, -140.0000, -124.5000, -138.0000],
        [   0.0000, -116.5000, -105.5000, -122.5000, -124.0000, -121.5000, -129.0000, -119.5000, -104.5000, -135.0000, -101.0000, -123.5000, -112.0000,  -99.5000, -111.0000],
        [   0.0000, -135.0000, -121.0000, -140.0000, -142.0000, -141.0000, -149.0000, -136.0000, -121.0000, -155.0000, -116.5000, -141.0000, -127.0000, -115.5000, -128.0000],
        [   0.0000, -126.0000, -113.5000, -131.0000, -136.0000, -133.0000, -144.0000, -131.0000, -117.0000, -147.0000, -111.5000, -132.0000, -122.0000, -111.5000, -121.0000],
        [   0.0000, -134.0000, -120.5000, -140.0000, -142.0000, -141.0000, -151.0000, -138.0000, -121.5000, -156.0000, -117.5000, -141.0000, -128.0000, -116.0000, -127.0000],
        [   0.0000, -147.0000, -133.0000, -154.0000, -157.0000, -154.0000, -164.0000, -150.0000, -134.0000, -171.0000, -129.0000, -155.0000, -140.0000, -128.0000, -141.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0294, -0.0578, -0.0478,  ...,  0.0386, -0.0231,  0.0280],
        [ 0.0116,  0.0249,  0.0194,  ..., -0.0212,  0.0214, -0.0364],
        [ 0.0139,  0.0142, -0.0265,  ..., -0.0002, -0.0010,  0.0503],
        ...,
        [ 0.0027, -0.0210, -0.0609,  ...,  0.0230, -0.0262,  0.0411],
        [ 0.0138,  0.0625,  0.0186,  ..., -0.0028,  0.0382, -0.0418],
        [-0.0555, -0.0374, -0.0281,  ...,  0.0500, -0.0270,  0.0356]], device='cuda:0', requires_grad=True)
K: tensor([ 3.5625, -2.9219, -3.1562,  3.9062, -3.3594,  4.1875,  3.3906,  2.6250,  3.2500,  1.7734, -0.5781,  3.3594,  3.3906, -3.9062,  2.5781, -3.5000, -4.3438, -4.2812, -3.4375,  2.2031, -4.0938,  2.5938, -3.9062,  3.2812, -3.9688, -3.1250, -4.4062,  4.3438, -3.2969, -4.1250,  4.1562, -3.8438,
        -3.5156, -1.3125, -2.7188,  2.5625,  3.3125,  3.0156,  2.2188, -4.0625, -4.6250,  2.4062, -3.7188, -3.2812,  4.7500, -2.9688, -2.2188,  3.5156,  2.7500, -1.3359,  3.4219,  4.5000, -3.0781, -4.6562, -3.1875,  4.1875, -3.6562,  3.2344, -2.2344, -5.0000,  2.1875, -4.3125,  2.5781, -3.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0432,  0.0148,  0.0349,  ..., -0.0329,  0.0266, -0.0197],
        [-0.0042, -0.0380, -0.0292,  ...,  0.0178, -0.0387,  0.0055],
        [ 0.0362,  0.0141,  0.0269,  ...,  0.0115,  0.0270, -0.0433],
        ...,
        [-0.0028,  0.0242,  0.0156,  ..., -0.0175,  0.0212, -0.0148],
        [ 0.0030, -0.0377, -0.0056,  ...,  0.0618, -0.0322, -0.0361],
        [ 0.0155,  0.0096,  0.0626,  ..., -0.0400,  0.0417, -0.0428]], device='cuda:0', requires_grad=True)
Q: tensor([-3.7812,  3.9375,  4.1875, -3.4531,  3.5625, -3.9844, -4.0938, -2.8438, -4.1875, -1.7734, -0.8867, -3.7188, -4.4688,  4.2188, -3.0469,  4.7812,  3.3438,  4.1562,  3.5469, -2.2344,  4.6250, -3.5938,  4.1562, -3.9375,  4.3438,  3.9688,  4.4375, -4.2188,  3.7812,  4.0312, -4.6562,  4.1562,
         3.2969,  2.7188,  3.6094, -2.2969, -3.8906, -2.6875, -3.3906,  3.9062,  2.6094, -3.0625,  4.7500,  3.3594, -3.8906,  3.0000,  2.3906, -3.3594, -3.7031,  2.6719, -4.0000, -5.2188,  4.2812,  5.0625,  4.0312, -3.9844,  3.6875, -5.4062,  2.8125,  5.4062, -2.6719,  3.8125, -4.4062,  5.2500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -58.7500,  -66.5000,  -77.0000,  -84.5000,  -75.5000,  -66.5000,  -72.5000,  -61.7500,  -68.5000,  -52.0000,  -74.0000,  -68.0000,  -59.2500,  -63.7500],
        [   0.0000, -106.0000, -127.5000, -148.0000, -157.0000, -140.0000, -124.0000, -139.0000, -116.0000, -129.0000,  -96.0000, -139.0000, -129.0000, -111.5000, -119.5000],
        [   0.0000, -105.0000, -124.5000, -144.0000, -154.0000, -138.0000, -121.0000, -136.0000, -114.0000, -126.5000,  -95.0000, -137.0000, -125.5000, -110.0000, -117.0000],
        [   0.0000, -104.5000, -121.5000, -140.0000, -153.0000, -135.0000, -120.0000, -132.0000, -112.0000, -124.0000,  -94.0000, -134.0000, -122.5000, -107.5000, -115.5000],
        [   0.0000,  -85.5000, -100.0000, -114.0000, -125.0000, -110.5000,  -97.5000, -107.0000,  -92.0000, -101.5000,  -77.0000, -109.5000, -100.0000,  -88.5000,  -94.5000],
        [   0.0000,  -77.0000,  -90.0000, -102.0000, -113.5000,  -99.5000,  -90.0000,  -97.5000,  -84.0000,  -93.0000,  -70.5000,  -99.5000,  -91.0000,  -80.5000,  -86.5000],
        [   0.0000,  -89.0000, -108.5000, -123.5000, -134.0000, -117.5000, -106.0000, -117.5000,  -98.5000, -110.0000,  -82.5000, -117.5000, -109.0000,  -95.0000, -102.0000],
        [   0.0000,  -80.5000,  -94.0000, -108.0000, -119.0000, -104.5000,  -93.0000, -101.0000,  -87.5000,  -96.5000,  -73.0000, -104.5000,  -94.5000,  -84.0000,  -89.5000],
        [   0.0000,  -96.0000, -114.5000, -132.0000, -142.0000, -126.0000, -111.5000, -124.5000, -105.0000, -117.0000,  -87.5000, -124.5000, -116.0000, -101.0000, -108.0000],
        [   0.0000,  -66.5000,  -77.5000,  -88.0000,  -98.0000,  -86.5000,  -77.0000,  -83.5000,  -71.5000,  -80.0000,  -60.7500,  -86.0000,  -78.0000,  -69.0000,  -74.5000],
        [   0.0000,  -86.5000, -102.5000, -117.5000, -127.0000, -112.5000,  -99.5000, -109.5000,  -94.5000, -104.0000,  -79.0000, -111.5000, -102.5000,  -91.0000,  -96.5000],
        [   0.0000,  -77.5000,  -92.0000, -104.5000, -114.5000, -100.5000,  -90.5000,  -99.0000,  -84.5000,  -93.5000,  -71.5000, -100.0000,  -93.0000,  -81.5000,  -87.0000],
        [   0.0000,  -78.5000,  -91.5000, -104.5000, -115.5000, -101.5000,  -90.5000,  -98.0000,  -85.0000,  -94.0000,  -71.0000, -101.5000,  -92.0000,  -82.0000,  -87.5000],
        [   0.0000,  -91.0000, -108.0000, -124.5000, -135.0000, -120.0000, -106.5000, -118.5000,  -99.5000, -110.5000,  -84.0000, -119.0000, -110.0000,  -95.5000, -103.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8387],
        [1.0000],
        [0.9997],
        [0.8703],
        [0.9476],
        [0.7858],
        [1.0000],
        [0.9154],
        [1.0000],
        [0.5733],
        [1.0000],
        [0.9993],
        [0.8981],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0098,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.9922,     0.0038,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9609,     0.0010,     0.0391,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0034,     0.8867,     0.0216,     0.0317,     0.0559,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.7422,     0.0047,     0.0175,     0.0229,     0.2129,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5430,     0.0003,     0.0046,     0.0070,     0.0339,     0.4102,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8125,     0.0004,     0.0025,     0.0109,     0.0092,     0.0669,     0.0986,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0491,     0.6055,     0.0046,     0.0239,     0.0610,     0.0557,     0.0918,     0.0356,     0.0732,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.6172,     0.0004,     0.0136,     0.0923,     0.0165,     0.0146,     0.0249,     0.1348,     0.0830,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1182,     0.7031,     0.0028,     0.0044,     0.0117,     0.0209,     0.0299,     0.0074,     0.0330,     0.0233,     0.0439,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.2500,     0.0193,     0.0505,     0.2344,     0.0938,     0.0476,     0.1465,     0.0659,     0.0064,     0.0317,     0.0525,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.6758,     0.0005,     0.0007,     0.0047,     0.0104,     0.0242,     0.0309,     0.1562,     0.0295,     0.0449,     0.0076,     0.0146,     0.0000,     0.0000],
        [    0.0217,     0.4238,     0.0039,     0.0188,     0.0447,     0.0332,     0.0518,     0.0156,     0.0327,     0.1660,     0.1045,     0.0305,     0.0129,     0.0398,     0.0000],
        [    0.0038,     0.5508,     0.0032,     0.1001,     0.1621,     0.0155,     0.0942,     0.0198,     0.0152,     0.0054,     0.0090,     0.0060,     0.0053,     0.0048,     0.0034]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0081, -0.0304,  0.0154,  ...,  0.0122,  0.0288,  0.0856],
        [-0.0255, -0.0383,  0.0037,  ..., -0.0161,  0.0046, -0.0134],
        [ 0.0154,  0.0084,  0.0051,  ...,  0.0329,  0.0108,  0.0781],
        ...,
        [-0.0265,  0.0159,  0.0304,  ...,  0.0173,  0.0541,  0.0365],
        [ 0.0143, -0.0481,  0.0243,  ..., -0.0003, -0.0081, -0.0309],
        [-0.0133,  0.0080, -0.0146,  ..., -0.0254, -0.0301, -0.0406]], device='cuda:0', requires_grad=True)
K: tensor([-1.0312, -2.9062, -1.7500, -0.6094, -0.5352,  0.7344, -4.0938, -0.8164, -0.9336, -1.2266, -2.2656,  2.1406,  3.4688, -3.3750,  1.3672, -3.2969,  0.4961, -0.4883,  1.2500,  0.5938, -0.7930, -2.9531,  1.8594,  0.0378, -0.4297,  0.2734,  2.7344, -2.3125, -3.3125, -1.5078,  0.1123, -1.7500,
         0.3379,  2.2500,  1.5781, -1.5703, -0.4746,  1.2344, -2.6875,  0.2695,  0.2559, -0.0322,  2.2031, -3.5625,  0.5234, -0.2236,  1.4141, -1.3516, -1.7891, -0.8320, -0.5000, -0.5586, -0.1553,  2.6875, -2.0781, -0.1060,  2.5781,  0.1396,  0.4629, -0.6016,  0.1309,  0.6992,  2.1406,  2.8906],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0158,  0.0355,  0.0109,  ...,  0.0512, -0.0574, -0.0015],
        [ 0.0065,  0.0016, -0.0031,  ..., -0.0041, -0.0135,  0.0188],
        [-0.0271, -0.0153,  0.0008,  ..., -0.0269, -0.0468, -0.0230],
        ...,
        [ 0.0037,  0.0023,  0.0223,  ...,  0.0319, -0.0157, -0.0061],
        [ 0.0031,  0.0099, -0.0024,  ...,  0.0210,  0.0200,  0.0472],
        [-0.0146, -0.0273,  0.0083,  ...,  0.0289, -0.0357,  0.0719]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1680, -1.3672,  1.3047, -1.7656, -1.8359,  2.2344, -1.6562,  1.0000,  1.8125, -2.1719,  1.7578, -3.0000, -0.1992, -0.0825, -0.5117, -0.5195,  1.4609,  0.0184, -0.9492, -1.9297,  2.3750, -1.2500,  0.8516,  0.4727, -1.4531, -0.1934, -1.0938, -2.4531, -1.5312, -2.5781,  1.0859,  0.4570,
         0.0369, -0.7734, -1.3125, -0.4746, -1.7031,  0.8906, -0.8477, -0.1406,  0.3262, -0.8516, -0.4707,  1.1016,  0.5625,  1.1484, -3.5312,  1.2422, -0.4922,  0.5625, -1.8906,  0.6758, -0.5117, -0.0608,  0.8633,  0.3574,  0.8281,  2.7188, -2.0312,  0.2793, -0.3828, -1.7109, -3.4531,  0.5508],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.6250, -7.0000, -6.6875, -6.4688, -6.9688, -6.6250, -6.5625, -6.4062, -6.0938, -7.3438, -5.6562, -6.5625, -5.8125, -5.7812],
        [ 0.0000,  5.6250,  0.0576,  7.0000,  7.0625,  3.8906,  4.5000,  4.0938,  3.4375,  0.5547,  2.8906,  1.2344,  4.0312,  2.7031,  0.2158],
        [ 0.0000, 11.0625,  4.2188,  7.8438, 11.6875,  9.6250,  8.8125,  7.5312,  7.8125,  3.9531,  6.2500,  4.4062,  5.5000,  5.7812,  4.9375],
        [ 0.0000,  5.5625,  1.8516,  2.2344,  2.7969,  5.3750,  4.7812,  4.4375,  3.0312,  1.7266,  0.8984,  2.6250,  2.1562,  1.9453,  3.4844],
        [ 0.0000,  7.6250,  2.5469,  3.8750,  4.1562,  6.3750,  9.1250,  7.0000,  7.5938,  4.0312,  3.4375,  4.0938,  2.7031,  5.4062,  4.7500],
        [ 0.0000, 10.1875,  2.5312,  5.3750,  5.8125,  7.3750,  9.8750,  8.7500,  8.6250,  3.5469,  2.9375,  4.9375,  2.5156,  5.0625,  3.4844],
        [ 0.0000,  9.8750,  2.1719,  4.0938,  5.5625,  5.3750,  7.3750,  7.7500,  9.9375,  6.7188,  7.5312,  5.5312,  4.1875,  7.7812,  7.4062],
        [ 0.0000,  2.5156, -2.3594, -0.7188,  0.2178,  0.1260,  0.6289, -0.3184,  0.4043,  1.7969,  0.6484, -0.0276, -1.5156, -0.3789,  2.9688],
        [ 0.0000,  5.9375, -1.3984,  2.1250,  4.0312,  2.3281,  2.2031,  2.7344,  4.4375,  3.9375,  8.6875,  4.4062,  3.2344,  3.4688,  2.8438],
        [ 0.0000,  1.7891, -3.7344, -3.2812, -2.3125, -1.7344, -1.3750, -2.7656, -1.2734, -1.6250, -0.9922,  1.4141, -1.4609, -0.2598,  0.7031],
        [ 0.0000,  6.4375,  3.8750,  4.8438,  6.3750,  5.4688,  4.7812,  5.9062,  5.0938,  2.7656,  4.3750,  4.8750, 11.4375,  7.3438,  6.1562],
        [ 0.0000,  6.0000, -1.1641, -0.9062,  1.0312,  1.8281,  2.6719,  2.9219,  4.5312,  2.8750,  3.2969,  1.5078,  2.1562,  6.3750,  6.6562],
        [ 0.0000,  2.9688, -1.7266, -0.1445,  0.7188,  0.4219,  0.8672, -0.3320,  0.4121,  2.0312,  1.5703,  0.3398, -0.5195,  0.6055,  4.0938],
        [ 0.0000,  4.9688, -0.1982,  3.2656,  3.7344,  1.3984,  3.2031,  1.6406,  1.3750,  0.3359,  0.8516,  0.4492,  0.3184,  0.2266, -0.1177]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2510],
        [0.0538],
        [0.0620],
        [0.0875],
        [0.0886],
        [0.1055],
        [0.0885],
        [0.0882],
        [0.0571],
        [0.0764],
        [0.0471],
        [0.0638],
        [0.0613],
        [0.0512]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.8477,     0.1514,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0040,     0.7109,     0.2676,     0.0190,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2441,     0.3887,     0.0571,     0.0457,     0.2656,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1787,     0.2754,     0.0513,     0.0137,     0.2754,     0.2051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0415,     0.3145,     0.0234,     0.0154,     0.2656,     0.2012,     0.1387,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0757,     0.2930,     0.0154,     0.0102,     0.3711,     0.1143,     0.0386,     0.0815,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0103,     0.1992,     0.0098,     0.0152,     0.2441,     0.0483,     0.0073,     0.0311,     0.4336,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.4277,     0.0623,     0.0315,     0.1260,     0.1216,     0.0116,     0.0771,     0.1055,     0.0352,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.1138,     0.0062,     0.0077,     0.0466,     0.0284,     0.0076,     0.0442,     0.6289,     0.0608,     0.0544,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.2812,     0.0291,     0.0183,     0.1069,     0.0684,     0.0082,     0.2168,     0.0854,     0.0266,     0.0109,     0.1465,     0.0000,     0.0000,     0.0000],
        [    0.0059,     0.0684,     0.0055,     0.0020,     0.0603,     0.0189,     0.0037,     0.0134,     0.6992,     0.0718,     0.0165,     0.0164,     0.0168,     0.0000,     0.0000],
        [    0.0055,     0.0933,     0.0039,     0.0052,     0.1523,     0.0183,     0.0031,     0.0193,     0.2773,     0.1104,     0.0325,     0.0078,     0.0088,     0.2617,     0.0000],
        [    0.0006,     0.5664,     0.0444,     0.0311,     0.0659,     0.0540,     0.0050,     0.0342,     0.0260,     0.0176,     0.0189,     0.0361,     0.0564,     0.0248,     0.0182]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0665,      0.0053,     -0.0413,  ...,     -0.0653,     -0.0421,     -0.0120],
        [    -0.0266,      0.0380,     -0.0115,  ...,      0.0137,     -0.0032,      0.0260],
        [     0.0021,     -0.0001,     -0.0147,  ...,      0.0250,      0.0666,      0.0268],
        ...,
        [     0.0186,      0.0348,      0.0338,  ...,     -0.0168,     -0.0068,     -0.0341],
        [    -0.0043,      0.0328,      0.0429,  ...,      0.0205,      0.0190,     -0.0360],
        [    -0.0357,      0.0051,     -0.0570,  ...,     -0.0417,      0.0189,      0.0120]], device='cuda:0', requires_grad=True)
K: tensor([-1.2812, -1.7500,  2.4219, -2.2188,  1.6094,  1.0703, -0.6406, -1.1250, -1.6562, -1.0781, -2.0938,  2.2188, -2.4375, -1.9141, -0.2305, -3.7031, -0.7891, -1.3828,  1.1719,  0.3965, -0.4590, -2.5781,  0.7734, -3.0156, -0.8867, -0.2490,  1.1094,  0.5312, -0.1309, -1.0938, -3.3125, -2.0000,
         0.4004, -2.2344,  0.3262, -1.0312, -2.9688, -1.5078, -0.7461,  0.3496, -0.7266,  1.3438,  2.0312,  2.0000, -0.5820,  2.5469, -0.0430,  2.3281, -2.0625, -2.1562, -0.5156,  2.9844,  0.6523, -1.3516, -1.2422, -1.6875,  0.8242,  0.3301, -1.5938,  2.7656,  0.9102,  2.9375,  1.6250,  0.1436],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0254, -0.0014, -0.0115,  ...,  0.0206,  0.0198,  0.0307],
        [ 0.0488,  0.0055,  0.0395,  ..., -0.0480,  0.0225,  0.0164],
        [-0.0696, -0.0594, -0.0002,  ..., -0.0242,  0.0416,  0.0511],
        ...,
        [-0.0121,  0.0145,  0.0548,  ...,  0.0119,  0.0082, -0.0078],
        [ 0.0319, -0.0063, -0.0049,  ..., -0.0326,  0.0071, -0.0276],
        [ 0.0022,  0.0351, -0.0134,  ...,  0.0090, -0.0182,  0.0163]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2393,  2.5781, -0.4805, -0.8711,  0.6680,  1.1641, -0.1318, -0.6719, -0.9805,  0.1777, -1.5625, -0.7734, -0.3008,  0.6445,  0.3867, -1.1484,  0.9062,  0.8750,  0.1484, -0.5039, -0.8203, -0.0938,  0.9258, -1.0938, -0.4121,  1.1484,  0.2471,  0.3672, -0.8008, -0.8242, -0.5039, -1.0000,
         0.0077, -2.0938, -0.1572, -2.4062, -2.2812, -1.0547,  0.1914, -0.4160, -3.4375, -0.5195,  0.5117,  0.9648,  0.1484,  0.6133,  0.6680, -0.8242,  1.2344,  0.4434,  0.9961, -0.5664, -0.3809, -1.0469, -1.7969, -0.3789, -1.0469,  0.6328,  0.2695, -0.6914, -0.7930,  0.4824, -1.5391,  0.3555],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      6.8750,      4.7188,      4.6562,      4.4062,      5.1875,      3.8281,      4.5938,      6.1875,      4.4062,      3.5625,      4.2188,      3.6250,      6.2188,      3.8750],
        [     0.0000,      5.8750,      4.1562,      2.5625,      3.5781,      4.4375,      2.2969,      4.0625,      3.9062,      2.9062,      2.2656,      3.7344,      3.5469,      3.7500,      3.0000],
        [     0.0000,      5.1875,      4.1875,      1.5625,      4.6250,      4.0625,      1.0234,      2.4219,      4.0312,      2.5000,      1.9766,      2.0625,      1.5469,      3.8750,      2.7656],
        [     0.0000,      0.4668,     -1.4453,     -1.6719,      0.0830,      0.5508,     -1.0391,     -0.5156,      3.0156,      0.5352,     -0.0874,     -1.2734,     -1.7578,      2.6094,      0.0918],
        [     0.0000,      0.4316,     -1.2500,     -2.5625,      0.4277,      0.1367,      0.0022,     -1.2109,      3.3906,      0.4746,     -0.5703,     -1.8438,     -4.1562,      2.5312,     -0.9805],
        [     0.0000,      2.0312,     -0.5742,     -0.9883,      1.8594,      1.5781,      1.2031,      0.9375,      4.9375,      1.6562,      0.7617,      0.1846,     -1.8047,      4.0625,     -0.2910],
        [     0.0000,      1.3594,     -1.5859,     -2.0000,      1.5938,      0.4141,     -0.6719,      0.0767,      5.0312,      2.4219,      0.2812,     -0.7148,     -1.6953,      4.9375,      0.2988],
        [     0.0000,      2.9688,     -0.0508,      0.3906,      3.1719,      1.5469,     -0.3438,      1.1094,      3.7500,      2.8125,      1.4219,     -0.3047,     -0.6172,      3.1250,      1.8984],
        [     0.0000,      6.0938,      4.1562,      3.4844,      4.8750,      4.8438,      2.4844,      4.3750,      4.6875,      3.5938,      3.6719,      4.5312,      4.7812,      5.0625,      4.4688],
        [     0.0000,      5.0312,      2.1406,      2.3438,      4.1562,      3.6562,      2.3281,      4.0938,      6.7500,      4.4062,      4.3125,      4.7812,      4.1250,      7.0000,      3.9375],
        [     0.0000,      5.4062,      3.1406,      2.6719,      4.4375,      4.0000,      1.8750,      5.1562,      4.2188,      3.0469,      2.1562,      4.7500,      5.8125,      4.7812,      2.8906],
        [     0.0000,      2.4531,     -0.0703,     -1.0938,      2.3281,      1.1641,     -0.4531,      0.8164,      4.7812,      2.5000,      1.0312,      1.0234,      1.0547,      5.2500,      1.6719],
        [     0.0000,      2.8281,     -0.3398,     -0.0596,      3.3281,      1.2031,     -0.5859,      1.2578,      3.9219,      3.0000,      1.7812,      0.3457,      0.4746,      3.8750,      2.4219],
        [     0.0000,      6.7812,      4.2500,      3.8750,      4.6250,      4.4375,      2.0469,      3.9844,      3.7031,      3.3125,      3.3906,      4.0312,      4.4688,      3.6562,      3.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1784],
        [0.0566],
        [0.0580],
        [0.0873],
        [0.0860],
        [0.0407],
        [0.0885],
        [0.0645],
        [0.0474],
        [0.0446],
        [0.0253],
        [0.0360],
        [0.0341],
        [0.0251]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1631 a:0.1191,:0.1982 white:0.0723atoes:0.1108 are:0.2393 a:0.1040iced:0.5742)
iced
------
		( a:0.1191,:0.1982 white:0.0723atoes:0.1108 are:0.2393 a:0.1040iced:0.5742,:0.2344)
, and the best way to get your name.
- The best way
@ 4050 train 4.0068 , allloss: 4.0070, dt: 1241.67ms, fracRes: 0.2828, norm(attn): 0.8594, norm(output): 10.0000, norm(x): 7.0833, norm(y): 1.0375, norm:1.3917, tok/sec: 105561.05, flops:82.21, batch-reuse:1
@ 4051 train 3.9912 , allloss: 3.9913, dt: 902.71ms, fracRes: 0.2832, norm(attn): 0.8633, norm(output): 10.0000, norm(x): 7.0660, norm(y): 1.0378, norm:1.4978, tok/sec: 145198.93, flops:113.08, batch-reuse:1
@ 4052 train 3.9445 , allloss: 3.9446, dt: 918.62ms, fracRes: 0.2827, norm(attn): 0.8594, norm(output): 9.9375, norm(x): 7.2193, norm(y): 1.0380, norm:1.7077, tok/sec: 142683.35, flops:111.12, batch-reuse:1
@ 4053 train 3.9686 , allloss: 3.9688, dt: 913.09ms, fracRes: 0.2828, norm(attn): 0.8594, norm(output): 9.8125, norm(x): 6.9118, norm(y): 1.0378, norm:1.7698, tok/sec: 143546.99, flops:111.79, batch-reuse:1
@ 4054 train 4.0871 , allloss: 4.0872, dt: 910.76ms, fracRes: 0.2831, norm(attn): 0.8398, norm(output): 9.7500, norm(x): 7.0088, norm(y): 1.0377, norm:1.3552, tok/sec: 143915.70, flops:112.08, batch-reuse:1
@ 4055 train 4.1207 , allloss: 4.1210, dt: 882.18ms, fracRes: 0.2833, norm(attn): 0.8281, norm(output): 9.6875, norm(x): 6.9346, norm(y): 1.0376, norm:1.2198, tok/sec: 148577.99, flops:115.71, batch-reuse:1
@ 4056 train 4.1564 , allloss: 4.1565, dt: 912.21ms, fracRes: 0.2831, norm(attn): 0.8125, norm(output): 9.1875, norm(x): 6.7012, norm(y): 1.0375, norm:1.2322, tok/sec: 143686.51, flops:111.90, batch-reuse:1
@ 4057 train 3.9510 , allloss: 3.9511, dt: 874.71ms, fracRes: 0.2833, norm(attn): 0.8125, norm(output): 9.1875, norm(x): 6.6811, norm(y): 1.0376, norm:1.3289, tok/sec: 149846.51, flops:116.70, batch-reuse:1
@ 4058 train 4.1315 , allloss: 4.1317, dt: 904.39ms, fracRes: 0.2830, norm(attn): 0.8125, norm(output): 9.3750, norm(x): 6.9406, norm(y): 1.0376, norm:1.7447, tok/sec: 144928.42, flops:112.87, batch-reuse:1
@ 4059 train 3.9788 , allloss: 3.9788, dt: 884.51ms, fracRes: 0.2829, norm(attn): 0.8281, norm(output): 9.8750, norm(x): 7.1335, norm(y): 1.0380, norm:1.3227, tok/sec: 148185.99, flops:115.41, batch-reuse:1
@ 4060 train 3.9493 , allloss: 3.9495, dt: 899.17ms, fracRes: 0.2826, norm(attn): 0.8438, norm(output): 10.0625, norm(x): 7.2274, norm(y): 1.0382, norm:1.4495, tok/sec: 145769.96, flops:113.53, batch-reuse:1
@ 4061 train 4.0610 , allloss: 4.0612, dt: 910.59ms, fracRes: 0.2827, norm(attn): 0.8359, norm(output): 10.0000, norm(x): 7.1173, norm(y): 1.0385, norm:1.3690, tok/sec: 143941.17, flops:112.10, batch-reuse:1
@ 4062 train 4.0112 , allloss: 4.0114, dt: 894.76ms, fracRes: 0.2827, norm(attn): 0.8359, norm(output): 9.8750, norm(x): 6.9918, norm(y): 1.0387, norm:1.4662, tok/sec: 146488.73, flops:114.09, batch-reuse:1
@ 4063 train 3.9671 , allloss: 3.9672, dt: 894.04ms, fracRes: 0.2831, norm(attn): 0.8203, norm(output): 9.5000, norm(x): 6.8836, norm(y): 1.0387, norm:1.2515, tok/sec: 146607.14, flops:114.18, batch-reuse:1
@ 4064 train 4.0461 , allloss: 4.0463, dt: 880.25ms, fracRes: 0.2830, norm(attn): 0.8320, norm(output): 9.7500, norm(x): 6.8967, norm(y): 1.0388, norm:1.6608, tok/sec: 148903.80, flops:115.97, batch-reuse:1
@ 4065 train 4.0346 , allloss: 4.0347, dt: 902.28ms, fracRes: 0.2827, norm(attn): 0.8242, norm(output): 9.5625, norm(x): 6.9229, norm(y): 1.0387, norm:1.1454, tok/sec: 145267.84, flops:113.14, batch-reuse:1
@ 4066 train 3.9138 , allloss: 3.9139, dt: 902.39ms, fracRes: 0.2831, norm(attn): 0.8320, norm(output): 9.6875, norm(x): 6.8892, norm(y): 1.0387, norm:1.4042, tok/sec: 145250.18, flops:113.12, batch-reuse:1
@ 4067 train 4.0403 , allloss: 4.0405, dt: 903.95ms, fracRes: 0.2838, norm(attn): 0.8281, norm(output): 9.7500, norm(x): 7.0414, norm(y): 1.0388, norm:1.4562, tok/sec: 144999.56, flops:112.93, batch-reuse:1
@ 4068 train 3.9352 , allloss: 3.9353, dt: 915.04ms, fracRes: 0.2822, norm(attn): 0.8438, norm(output): 10.0000, norm(x): 7.2031, norm(y): 1.0389, norm:1.2170, tok/sec: 143241.86, flops:111.56, batch-reuse:1
@ 4069 train 4.0872 , allloss: 4.0880, dt: 903.59ms, fracRes: 0.2821, norm(attn): 0.8594, norm(output): 10.1250, norm(x): 7.3451, norm(y): 1.0390, norm:1.5105, tok/sec: 145056.14, flops:112.97, batch-reuse:1
@ 4070 train 4.0901 , allloss: 4.0903, dt: 896.51ms, fracRes: 0.2822, norm(attn): 0.8750, norm(output): 10.6875, norm(x): 7.4804, norm(y): 1.0395, norm:1.7141, tok/sec: 146202.13, flops:113.86, batch-reuse:1
@ 4071 train 3.9998 , allloss: 4.0000, dt: 921.64ms, fracRes: 0.2818, norm(attn): 0.8750, norm(output): 10.6875, norm(x): 7.5173, norm(y): 1.0392, norm:1.2924, tok/sec: 142216.80, flops:110.76, batch-reuse:1
@ 4072 train 3.9967 , allloss: 3.9980, dt: 928.19ms, fracRes: 0.2824, norm(attn): 0.8789, norm(output): 10.8125, norm(x): 7.6037, norm(y): 1.0394, norm:1.5423, tok/sec: 141213.05, flops:109.98, batch-reuse:1
@ 4073 train 4.0090 , allloss: 4.0091, dt: 931.70ms, fracRes: 0.2826, norm(attn): 0.8711, norm(output): 10.4375, norm(x): 7.4537, norm(y): 1.0394, norm:1.4276, tok/sec: 140680.48, flops:109.56, batch-reuse:1
@ 4074 train 4.0963 , allloss: 4.0964, dt: 899.22ms, fracRes: 0.2822, norm(attn): 0.8594, norm(output): 10.0625, norm(x): 7.2840, norm(y): 1.0392, norm:1.3789, tok/sec: 145762.62, flops:113.52, batch-reuse:1
@ 4075 train 3.9890 , allloss: 3.9892, dt: 892.50ms, fracRes: 0.2825, norm(attn): 0.8633, norm(output): 10.1250, norm(x): 7.1635, norm(y): 1.0393, norm:1.4313, tok/sec: 146859.75, flops:114.37, batch-reuse:1
@ 4076 train 4.1586 , allloss: 4.1588, dt: 897.52ms, fracRes: 0.2834, norm(attn): 0.8555, norm(output): 10.1250, norm(x): 7.2419, norm(y): 1.0395, norm:1.4375, tok/sec: 146037.92, flops:113.73, batch-reuse:1
@ 4077 train 4.1738 , allloss: 4.1739, dt: 920.71ms, fracRes: 0.2833, norm(attn): 0.8594, norm(output): 10.1250, norm(x): 7.2065, norm(y): 1.0395, norm:1.9241, tok/sec: 142360.28, flops:110.87, batch-reuse:1
@ 4078 train 4.1451 , allloss: 4.1452, dt: 919.39ms, fracRes: 0.2831, norm(attn): 0.8594, norm(output): 10.1250, norm(x): 7.3330, norm(y): 1.0394, norm:1.6272, tok/sec: 142564.28, flops:111.03, batch-reuse:1
@ 4079 train 4.1921 , allloss: 4.1922, dt: 919.07ms, fracRes: 0.2826, norm(attn): 0.8438, norm(output): 10.0000, norm(x): 7.0995, norm(y): 1.0395, norm:1.5898, tok/sec: 142613.65, flops:111.07, batch-reuse:1
@ 4080 train 4.3892 , allloss: 4.3893, dt: 925.80ms, fracRes: 0.2828, norm(attn): 0.8438, norm(output): 10.0625, norm(x): 7.2071, norm(y): 1.0395, norm:1.6202, tok/sec: 141576.86, flops:110.26, batch-reuse:1
@ 4081 train 4.1823 , allloss: 4.1824, dt: 920.34ms, fracRes: 0.2830, norm(attn): 0.8398, norm(output): 10.0000, norm(x): 7.1706, norm(y): 1.0399, norm:1.1559, tok/sec: 142416.22, flops:110.91, batch-reuse:1
@ 4082 train 4.1768 , allloss: 4.1769, dt: 899.49ms, fracRes: 0.2831, norm(attn): 0.8594, norm(output): 10.1250, norm(x): 7.3192, norm(y): 1.0402, norm:1.3983, tok/sec: 145717.34, flops:113.49, batch-reuse:1
@ 4083 train 4.2641 , allloss: 4.2646, dt: 891.22ms, fracRes: 0.2838, norm(attn): 0.8711, norm(output): 10.3125, norm(x): 7.3646, norm(y): 1.0404, norm:1.4140, tok/sec: 147070.21, flops:114.54, batch-reuse:1
@ 4084 train 4.2702 , allloss: 4.2707, dt: 905.60ms, fracRes: 0.2827, norm(attn): 0.8633, norm(output): 10.2500, norm(x): 7.4062, norm(y): 1.0404, norm:1.4757, tok/sec: 144735.54, flops:112.72, batch-reuse:1
@ 4085 train 4.1020 , allloss: 4.1022, dt: 904.56ms, fracRes: 0.2824, norm(attn): 0.8711, norm(output): 10.3750, norm(x): 7.4206, norm(y): 1.0404, norm:1.3206, tok/sec: 144900.69, flops:112.85, batch-reuse:1
@ 4086 train 4.1393 , allloss: 4.1395, dt: 905.74ms, fracRes: 0.2833, norm(attn): 0.8594, norm(output): 10.0625, norm(x): 7.2505, norm(y): 1.0402, norm:1.2531, tok/sec: 144712.72, flops:112.70, batch-reuse:1
@ 4087 train 4.1857 , allloss: 4.1859, dt: 901.47ms, fracRes: 0.2837, norm(attn): 0.8242, norm(output): 9.5625, norm(x): 6.9097, norm(y): 1.0400, norm:1.2512, tok/sec: 145398.23, flops:113.24, batch-reuse:1
@ 4088 train 4.1612 , allloss: 4.1615, dt: 897.63ms, fracRes: 0.2833, norm(attn): 0.8203, norm(output): 9.3750, norm(x): 6.8236, norm(y): 1.0398, norm:1.1729, tok/sec: 146019.57, flops:113.72, batch-reuse:1
@ 4089 train 4.1317 , allloss: 4.1319, dt: 888.71ms, fracRes: 0.2829, norm(attn): 0.8516, norm(output): 9.9375, norm(x): 7.0273, norm(y): 1.0400, norm:1.2166, tok/sec: 147486.23, flops:114.86, batch-reuse:1
@ 4090 train 4.2743 , allloss: 4.2744, dt: 901.34ms, fracRes: 0.2821, norm(attn): 0.8672, norm(output): 10.1875, norm(x): 7.4445, norm(y): 1.0400, norm:1.7185, tok/sec: 145419.73, flops:113.25, batch-reuse:1
@ 4091 train 4.2456 , allloss: 4.2458, dt: 903.80ms, fracRes: 0.2817, norm(attn): 0.8750, norm(output): 10.5000, norm(x): 7.4132, norm(y): 1.0399, norm:1.7713, tok/sec: 145022.85, flops:112.94, batch-reuse:1
@ 4092 train 4.1997 , allloss: 4.1998, dt: 886.33ms, fracRes: 0.2819, norm(attn): 0.8750, norm(output): 10.7500, norm(x): 7.6332, norm(y): 1.0403, norm:1.2591, tok/sec: 147882.05, flops:115.17, batch-reuse:1
@ 4093 train 4.3201 , allloss: 4.3202, dt: 905.43ms, fracRes: 0.2831, norm(attn): 0.8633, norm(output): 10.3750, norm(x): 7.4952, norm(y): 1.0405, norm:1.3963, tok/sec: 144761.50, flops:112.74, batch-reuse:1
@ 4094 train 4.1356 , allloss: 4.1357, dt: 896.63ms, fracRes: 0.2830, norm(attn): 0.8359, norm(output): 10.0625, norm(x): 7.2653, norm(y): 1.0402, norm:1.3346, tok/sec: 146183.15, flops:113.85, batch-reuse:1
@ 4095 train 4.1504 , allloss: 4.1505, dt: 899.48ms, fracRes: 0.2825, norm(attn): 0.8320, norm(output): 9.8750, norm(x): 7.1611, norm(y): 1.0399, norm:1.1549, tok/sec: 145720.27, flops:113.49, batch-reuse:1
@ 4096 train 4.2305 , allloss: 4.2306, dt: 906.34ms, fracRes: 0.2833, norm(attn): 0.8438, norm(output): 9.9375, norm(x): 7.2125, norm(y): 1.0399, norm:1.4049, tok/sec: 144616.56, flops:112.63, batch-reuse:1
@ 4097 train 4.2028 , allloss: 4.2029, dt: 897.09ms, fracRes: 0.2827, norm(attn): 0.8711, norm(output): 10.5000, norm(x): 7.4087, norm(y): 1.0400, norm:1.3560, tok/sec: 146108.68, flops:113.79, batch-reuse:1
@ 4098 train 4.0654 , allloss: 4.0654, dt: 887.05ms, fracRes: 0.2826, norm(attn): 0.8789, norm(output): 10.7500, norm(x): 7.6699, norm(y): 1.0403, norm:1.5635, tok/sec: 147762.49, flops:115.08, batch-reuse:1
@ 4099 train 4.2124 , allloss: 4.2125, dt: 883.04ms, fracRes: 0.2824, norm(attn): 0.8789, norm(output): 10.8750, norm(x): 7.7520, norm(y): 1.0407, norm:1.2115, tok/sec: 148431.93, flops:115.60, batch-reuse:1
@ 4100 train 4.2632 , allloss: 4.2633, dt: 896.47ms, fracRes: 0.2829, norm(attn): 0.8789, norm(output): 10.6875, norm(x): 7.6271, norm(y): 1.0409, norm:1.5885, tok/sec: 146209.48, flops:113.87, batch-reuse:1
@ 4101 train 4.2747 , allloss: 4.2748, dt: 901.15ms, fracRes: 0.2831, norm(attn): 0.8750, norm(output): 10.6250, norm(x): 7.5334, norm(y): 1.0409, norm:1.4544, tok/sec: 145450.28, flops:113.28, batch-reuse:1
@ 4102 train 4.1998 , allloss: 4.1999, dt: 891.48ms, fracRes: 0.2820, norm(attn): 0.8750, norm(output): 10.5000, norm(x): 7.4304, norm(y): 1.0408, norm:1.5523, tok/sec: 147027.46, flops:114.51, batch-reuse:1
@ 4103 train 4.2355 , allloss: 4.2356, dt: 910.60ms, fracRes: 0.2819, norm(attn): 0.8750, norm(output): 10.8750, norm(x): 7.7115, norm(y): 1.0411, norm:1.4656, tok/sec: 143940.12, flops:112.10, batch-reuse:1
@ 4104 train 4.1914 , allloss: 4.1915, dt: 905.27ms, fracRes: 0.2814, norm(attn): 0.8906, norm(output): 11.0625, norm(x): 7.7410, norm(y): 1.0412, norm:1.8802, tok/sec: 144788.38, flops:112.76, batch-reuse:1
@ 4105 train 4.2129 , allloss: 4.2130, dt: 905.28ms, fracRes: 0.2819, norm(attn): 0.8828, norm(output): 11.0000, norm(x): 7.8748, norm(y): 1.0414, norm:1.6558, tok/sec: 144786.13, flops:112.76, batch-reuse:1
@ 4106 train 4.3067 , allloss: 4.3069, dt: 900.78ms, fracRes: 0.2827, norm(attn): 0.8789, norm(output): 10.6875, norm(x): 7.6217, norm(y): 1.0411, norm:1.7116, tok/sec: 145510.15, flops:113.32, batch-reuse:1
@ 4107 train 4.1014 , allloss: 4.1015, dt: 893.54ms, fracRes: 0.2839, norm(attn): 0.8672, norm(output): 10.1250, norm(x): 7.4352, norm(y): 1.0410, norm:1.4078, tok/sec: 146688.74, flops:114.24, batch-reuse:1
@ 4108 train 4.2097 , allloss: 4.2097, dt: 901.97ms, fracRes: 0.2834, norm(attn): 0.8711, norm(output): 10.0625, norm(x): 7.3152, norm(y): 1.0409, norm:1.8677, tok/sec: 145317.72, flops:113.17, batch-reuse:1
@ 4109 train 4.3044 , allloss: 4.3045, dt: 882.75ms, fracRes: 0.2839, norm(attn): 0.8516, norm(output): 10.0625, norm(x): 7.2931, norm(y): 1.0411, norm:1.7217, tok/sec: 148480.76, flops:115.64, batch-reuse:1
@ 4110 train 4.1701 , allloss: 4.1701, dt: 903.65ms, fracRes: 0.2841, norm(attn): 0.8672, norm(output): 10.1875, norm(x): 7.3448, norm(y): 1.0413, norm:1.7937, tok/sec: 145047.99, flops:112.96, batch-reuse:1
@ 4111 train 4.1777 , allloss: 4.1777, dt: 902.84ms, fracRes: 0.2839, norm(attn): 0.8750, norm(output): 10.6250, norm(x): 7.5683, norm(y): 1.0417, norm:1.2592, tok/sec: 145177.84, flops:113.07, batch-reuse:1
@ 4112 train 4.1806 , allloss: 4.1808, dt: 901.23ms, fracRes: 0.2839, norm(attn): 0.8867, norm(output): 11.0625, norm(x): 7.8868, norm(y): 1.0421, norm:1.4974, tok/sec: 145437.47, flops:113.27, batch-reuse:1
@ 4113 train 4.1405 , allloss: 4.1407, dt: 890.56ms, fracRes: 0.2831, norm(attn): 0.9062, norm(output): 11.3750, norm(x): 8.0447, norm(y): 1.0422, norm:1.5638, tok/sec: 147179.99, flops:114.62, batch-reuse:1
@ 4114 train 4.2742 , allloss: 4.2744, dt: 891.95ms, fracRes: 0.2840, norm(attn): 0.9062, norm(output): 11.4375, norm(x): 8.1814, norm(y): 1.0422, norm:1.4612, tok/sec: 146949.13, flops:114.44, batch-reuse:1
@ 4115 train 4.1089 , allloss: 4.1090, dt: 896.82ms, fracRes: 0.2833, norm(attn): 0.9297, norm(output): 11.6250, norm(x): 8.1867, norm(y): 1.0423, norm:1.5684, tok/sec: 146151.52, flops:113.82, batch-reuse:1
@ 4116 train 4.2535 , allloss: 4.2536, dt: 892.02ms, fracRes: 0.2813, norm(attn): 0.9336, norm(output): 11.8750, norm(x): 8.4365, norm(y): 1.0421, norm:1.9299, tok/sec: 146938.57, flops:114.44, batch-reuse:1
@ 4117 train 4.1302 , allloss: 4.1305, dt: 886.92ms, fracRes: 0.2819, norm(attn): 0.9414, norm(output): 11.9375, norm(x): 8.2276, norm(y): 1.0424, norm:2.0953, tok/sec: 147783.07, flops:115.09, batch-reuse:1
@ 4118 train 4.2997 , allloss: 4.2999, dt: 897.97ms, fracRes: 0.2809, norm(attn): 0.9414, norm(output): 11.9375, norm(x): 8.2845, norm(y): 1.0423, norm:1.6789, tok/sec: 145964.02, flops:113.68, batch-reuse:1
@ 4119 train 4.2541 , allloss: 4.2542, dt: 916.09ms, fracRes: 0.2820, norm(attn): 0.9336, norm(output): 11.6875, norm(x): 8.1622, norm(y): 1.0426, norm:1.7632, tok/sec: 143077.94, flops:111.43, batch-reuse:1
@ 4120 train 4.1842 , allloss: 4.1844, dt: 896.59ms, fracRes: 0.2810, norm(attn): 0.9258, norm(output): 11.3750, norm(x): 8.0939, norm(y): 1.0427, norm:1.9665, tok/sec: 146189.26, flops:113.85, batch-reuse:1
@ 4121 train 4.1395 , allloss: 4.1397, dt: 902.62ms, fracRes: 0.2806, norm(attn): 0.9297, norm(output): 11.3125, norm(x): 8.1229, norm(y): 1.0428, norm:1.2686, tok/sec: 145212.70, flops:113.09, batch-reuse:1
@ 4122 train 4.2590 , allloss: 4.2591, dt: 892.91ms, fracRes: 0.2814, norm(attn): 0.8984, norm(output): 11.0000, norm(x): 7.9037, norm(y): 1.0428, norm:1.6283, tok/sec: 146791.52, flops:114.32, batch-reuse:1
@ 4123 train 4.2099 , allloss: 4.2100, dt: 892.32ms, fracRes: 0.2822, norm(attn): 0.8867, norm(output): 10.8125, norm(x): 7.6877, norm(y): 1.0428, norm:1.7177, tok/sec: 146888.55, flops:114.40, batch-reuse:1
@ 4124 train 4.1569 , allloss: 4.1569, dt: 892.82ms, fracRes: 0.2822, norm(attn): 0.8789, norm(output): 10.6250, norm(x): 7.5628, norm(y): 1.0427, norm:1.5717, tok/sec: 146807.39, flops:114.33, batch-reuse:1
@ 4125 train 4.1786 , allloss: 4.1787, dt: 897.08ms, fracRes: 0.2821, norm(attn): 0.8750, norm(output): 10.6250, norm(x): 7.5209, norm(y): 1.0427, norm:1.8777, tok/sec: 146109.96, flops:113.79, batch-reuse:1
@ 4126 train 4.0596 , allloss: 4.0597, dt: 889.37ms, fracRes: 0.2820, norm(attn): 0.8711, norm(output): 10.6875, norm(x): 7.7336, norm(y): 1.0430, norm:1.6504, tok/sec: 147376.95, flops:114.78, batch-reuse:1
@ 4127 train 4.2501 , allloss: 4.2502, dt: 881.90ms, fracRes: 0.2825, norm(attn): 0.8750, norm(output): 10.6250, norm(x): 7.4231, norm(y): 1.0433, norm:2.6133, tok/sec: 148624.79, flops:115.75, batch-reuse:1
@ 4128 train 4.1304 , allloss: 4.1305, dt: 897.31ms, fracRes: 0.2823, norm(attn): 0.8516, norm(output): 10.1250, norm(x): 7.3031, norm(y): 1.0429, norm:1.5036, tok/sec: 146071.41, flops:113.76, batch-reuse:1
@ 4129 train 4.1680 , allloss: 4.1681, dt: 902.06ms, fracRes: 0.2826, norm(attn): 0.8242, norm(output): 9.9375, norm(x): 7.0942, norm(y): 1.0430, norm:1.0006, tok/sec: 145303.16, flops:113.16, batch-reuse:1
@ 4130 train 4.2929 , allloss: 4.2930, dt: 888.77ms, fracRes: 0.2828, norm(attn): 0.8398, norm(output): 10.0000, norm(x): 7.2108, norm(y): 1.0431, norm:1.2064, tok/sec: 147474.92, flops:114.85, batch-reuse:1
@ 4131 train 4.1007 , allloss: 4.1008, dt: 898.96ms, fracRes: 0.2825, norm(attn): 0.8594, norm(output): 10.5000, norm(x): 7.5870, norm(y): 1.0435, norm:1.3812, tok/sec: 145804.45, flops:113.55, batch-reuse:1
@ 4132 train 4.1414 , allloss: 4.1415, dt: 896.39ms, fracRes: 0.2824, norm(attn): 0.8789, norm(output): 11.0000, norm(x): 7.6839, norm(y): 1.0438, norm:1.7581, tok/sec: 146222.50, flops:113.88, batch-reuse:1
@ 4133 train 4.1582 , allloss: 4.1583, dt: 904.49ms, fracRes: 0.2828, norm(attn): 0.8750, norm(output): 11.0000, norm(x): 7.8274, norm(y): 1.0441, norm:1.5768, tok/sec: 144912.99, flops:112.86, batch-reuse:1
@ 4134 train 4.2873 , allloss: 4.2874, dt: 906.37ms, fracRes: 0.2828, norm(attn): 0.8789, norm(output): 10.9375, norm(x): 7.6761, norm(y): 1.0441, norm:1.6621, tok/sec: 144611.54, flops:112.62, batch-reuse:1
@ 4135 train 4.1872 , allloss: 4.1873, dt: 900.55ms, fracRes: 0.2826, norm(attn): 0.8711, norm(output): 10.6250, norm(x): 7.5841, norm(y): 1.0439, norm:1.3449, tok/sec: 145546.28, flops:113.35, batch-reuse:1
@ 4136 train 4.2092 , allloss: 4.2093, dt: 901.77ms, fracRes: 0.2837, norm(attn): 0.8711, norm(output): 10.4375, norm(x): 7.4190, norm(y): 1.0440, norm:1.8360, tok/sec: 145349.99, flops:113.20, batch-reuse:1
@ 4137 train 4.2026 , allloss: 4.2028, dt: 900.60ms, fracRes: 0.2831, norm(attn): 0.8555, norm(output): 10.0625, norm(x): 7.3071, norm(y): 1.0439, norm:1.8226, tok/sec: 145538.34, flops:113.35, batch-reuse:1
@ 4138 train 4.2498 , allloss: 4.2499, dt: 899.31ms, fracRes: 0.2832, norm(attn): 0.8594, norm(output): 10.0000, norm(x): 7.1288, norm(y): 1.0438, norm:1.5481, tok/sec: 145747.12, flops:113.51, batch-reuse:1
@ 4139 train 4.1894 , allloss: 4.1896, dt: 902.50ms, fracRes: 0.2839, norm(attn): 0.8594, norm(output): 10.0000, norm(x): 7.2243, norm(y): 1.0439, norm:1.5707, tok/sec: 145232.68, flops:113.11, batch-reuse:1
@ 4140 train 4.3735 , allloss: 4.3736, dt: 912.61ms, fracRes: 0.2835, norm(attn): 0.8672, norm(output): 10.1250, norm(x): 7.2647, norm(y): 1.0440, norm:1.5349, tok/sec: 143623.00, flops:111.85, batch-reuse:1
@ 4141 train 4.1700 , allloss: 4.1702, dt: 908.88ms, fracRes: 0.2830, norm(attn): 0.8594, norm(output): 10.0000, norm(x): 7.2404, norm(y): 1.0440, norm:1.4200, tok/sec: 144212.01, flops:112.31, batch-reuse:1
@ 4142 train 4.1423 , allloss: 4.1424, dt: 897.87ms, fracRes: 0.2830, norm(attn): 0.8516, norm(output): 10.2500, norm(x): 7.3809, norm(y): 1.0441, norm:1.4872, tok/sec: 145980.68, flops:113.69, batch-reuse:1
@ 4143 train 4.1810 , allloss: 4.1811, dt: 912.61ms, fracRes: 0.2832, norm(attn): 0.8633, norm(output): 10.3750, norm(x): 7.5281, norm(y): 1.0444, norm:1.2468, tok/sec: 143623.23, flops:111.85, batch-reuse:1
@ 4144 train 4.1929 , allloss: 4.1931, dt: 892.49ms, fracRes: 0.2829, norm(attn): 0.8672, norm(output): 10.3750, norm(x): 7.4503, norm(y): 1.0444, norm:1.5426, tok/sec: 146861.48, flops:114.38, batch-reuse:1
@ 4145 train 4.1208 , allloss: 4.1209, dt: 890.02ms, fracRes: 0.2831, norm(attn): 0.8398, norm(output): 10.1250, norm(x): 7.2685, norm(y): 1.0442, norm:1.3238, tok/sec: 147267.91, flops:114.69, batch-reuse:1
@ 4146 train 4.1449 , allloss: 4.1450, dt: 890.45ms, fracRes: 0.2830, norm(attn): 0.8203, norm(output): 10.0000, norm(x): 7.1271, norm(y): 1.0441, norm:1.1413, tok/sec: 147197.48, flops:114.64, batch-reuse:1
@ 4147 train 4.3201 , allloss: 4.3203, dt: 896.04ms, fracRes: 0.2819, norm(attn): 0.8125, norm(output): 9.8750, norm(x): 7.1134, norm(y): 1.0440, norm:1.5301, tok/sec: 146279.15, flops:113.92, batch-reuse:1
@ 4148 train 4.1821 , allloss: 4.1824, dt: 895.05ms, fracRes: 0.2829, norm(attn): 0.8203, norm(output): 10.0625, norm(x): 7.2532, norm(y): 1.0444, norm:1.5444, tok/sec: 146440.19, flops:114.05, batch-reuse:1
@ 4149 train 4.2408 , allloss: 4.2410, dt: 881.54ms, fracRes: 0.2827, norm(attn): 0.8281, norm(output): 10.1875, norm(x): 7.3638, norm(y): 1.0445, norm:1.2523, tok/sec: 148684.92, flops:115.80, batch-reuse:1
@ 4150 train 4.1353 , allloss: 4.1354, dt: 902.49ms, fracRes: 0.2815, norm(attn): 0.8164, norm(output): 10.0625, norm(x): 7.3543, norm(y): 1.0443, norm:1.3260, tok/sec: 145233.80, flops:113.11, batch-reuse:1
@ 4151 train 4.1623 , allloss: 4.1624, dt: 893.13ms, fracRes: 0.2826, norm(attn): 0.8320, norm(output): 10.2500, norm(x): 7.3180, norm(y): 1.0445, norm:1.8376, tok/sec: 146756.29, flops:114.29, batch-reuse:1
@ 4152 train 4.1237 , allloss: 4.1238, dt: 896.39ms, fracRes: 0.2829, norm(attn): 0.8516, norm(output): 10.7500, norm(x): 7.6492, norm(y): 1.0448, norm:1.3846, tok/sec: 146221.92, flops:113.88, batch-reuse:1
@ 4153 train 4.1577 , allloss: 4.1603, dt: 911.54ms, fracRes: 0.2830, norm(attn): 0.8711, norm(output): 11.1250, norm(x): 7.8308, norm(y): 1.0449, norm:1.7149, tok/sec: 143791.63, flops:111.99, batch-reuse:1
@ 4154 train 4.1799 , allloss: 4.1800, dt: 901.05ms, fracRes: 0.2834, norm(attn): 0.8594, norm(output): 10.6875, norm(x): 7.7385, norm(y): 1.0451, norm:1.1280, tok/sec: 145466.06, flops:113.29, batch-reuse:1
@ 4155 train 4.1926 , allloss: 4.1928, dt: 902.34ms, fracRes: 0.2834, norm(attn): 0.8516, norm(output): 10.1250, norm(x): 7.3307, norm(y): 1.0451, norm:1.7601, tok/sec: 145258.39, flops:113.13, batch-reuse:1
@ 4156 train 4.1852 , allloss: 4.1853, dt: 901.50ms, fracRes: 0.2832, norm(attn): 0.8164, norm(output): 9.8125, norm(x): 7.2066, norm(y): 1.0450, norm:1.9216, tok/sec: 145393.00, flops:113.23, batch-reuse:1
@ 4157 train 4.1920 , allloss: 4.1922, dt: 904.00ms, fracRes: 0.2834, norm(attn): 0.8164, norm(output): 9.3750, norm(x): 6.8190, norm(y): 1.0451, norm:1.5997, tok/sec: 144990.65, flops:112.92, batch-reuse:1
@ 4158 train 4.1019 , allloss: 4.1020, dt: 898.51ms, fracRes: 0.2839, norm(attn): 0.8125, norm(output): 9.3750, norm(x): 6.8206, norm(y): 1.0453, norm:1.2673, tok/sec: 145876.29, flops:113.61, batch-reuse:1
@ 4159 train 4.2283 , allloss: 4.2285, dt: 913.33ms, fracRes: 0.2842, norm(attn): 0.8164, norm(output): 9.5000, norm(x): 6.8657, norm(y): 1.0453, norm:1.2080, tok/sec: 143510.53, flops:111.77, batch-reuse:1
@ 4160 train 4.2025 , allloss: 4.2027, dt: 904.72ms, fracRes: 0.2837, norm(attn): 0.8203, norm(output): 9.8125, norm(x): 7.0710, norm(y): 1.0453, norm:1.7140, tok/sec: 144875.18, flops:112.83, batch-reuse:1
@ 4161 train 4.1385 , allloss: 4.1387, dt: 921.56ms, fracRes: 0.2822, norm(attn): 0.8281, norm(output): 10.0000, norm(x): 7.1983, norm(y): 1.0454, norm:1.1228, tok/sec: 142228.68, flops:110.77, batch-reuse:1
@ 4162 train 4.1450 , allloss: 4.1451, dt: 913.66ms, fracRes: 0.2828, norm(attn): 0.8281, norm(output): 10.0625, norm(x): 7.2586, norm(y): 1.0454, norm:1.4716, tok/sec: 143458.40, flops:111.73, batch-reuse:1
@ 4163 train 4.0894 , allloss: 4.0895, dt: 902.72ms, fracRes: 0.2828, norm(attn): 0.8125, norm(output): 9.7500, norm(x): 6.9785, norm(y): 1.0455, norm:1.1042, tok/sec: 145196.74, flops:113.08, batch-reuse:1
@ 4164 train 4.1943 , allloss: 4.1964, dt: 902.19ms, fracRes: 0.2826, norm(attn): 0.8164, norm(output): 9.8125, norm(x): 7.1559, norm(y): 1.0457, norm:1.1713, tok/sec: 145281.73, flops:113.15, batch-reuse:1
@ 4165 train 4.1997 , allloss: 4.1998, dt: 913.79ms, fracRes: 0.2828, norm(attn): 0.8281, norm(output): 10.0625, norm(x): 7.2042, norm(y): 1.0458, norm:1.4314, tok/sec: 143438.11, flops:111.71, batch-reuse:1
@ 4166 train 4.1769 , allloss: 4.1771, dt: 925.49ms, fracRes: 0.2837, norm(attn): 0.8281, norm(output): 10.3750, norm(x): 7.4879, norm(y): 1.0461, norm:1.2943, tok/sec: 141625.04, flops:110.30, batch-reuse:1
@ 4167 train 4.1198 , allloss: 4.1199, dt: 897.11ms, fracRes: 0.2829, norm(attn): 0.8594, norm(output): 10.5000, norm(x): 7.4760, norm(y): 1.0462, norm:1.6001, tok/sec: 146104.17, flops:113.79, batch-reuse:1
@ 4168 train 4.1071 , allloss: 4.1073, dt: 900.16ms, fracRes: 0.2842, norm(attn): 0.8594, norm(output): 10.3750, norm(x): 7.5015, norm(y): 1.0461, norm:1.3668, tok/sec: 145609.00, flops:113.40, batch-reuse:1
@ 4169 train 4.1754 , allloss: 4.1755, dt: 897.45ms, fracRes: 0.2850, norm(attn): 0.8633, norm(output): 10.6875, norm(x): 7.7168, norm(y): 1.0459, norm:1.5150, tok/sec: 146048.71, flops:113.74, batch-reuse:1
@ 4170 train 4.1289 , allloss: 4.1290, dt: 896.10ms, fracRes: 0.2846, norm(attn): 0.8711, norm(output): 11.0000, norm(x): 7.8855, norm(y): 1.0458, norm:1.4583, tok/sec: 146269.19, flops:113.91, batch-reuse:1
@ 4171 train 4.1021 , allloss: 4.1023, dt: 906.71ms, fracRes: 0.2844, norm(attn): 0.8750, norm(output): 11.2500, norm(x): 8.1373, norm(y): 1.0459, norm:1.5223, tok/sec: 144557.47, flops:112.58, batch-reuse:1
@ 4172 train 4.1192 , allloss: 4.1194, dt: 904.86ms, fracRes: 0.2847, norm(attn): 0.8750, norm(output): 11.1875, norm(x): 8.0716, norm(y): 1.0457, norm:1.4645, tok/sec: 144853.19, flops:112.81, batch-reuse:1
@ 4173 train 4.0713 , allloss: 4.0714, dt: 910.26ms, fracRes: 0.2842, norm(attn): 0.8750, norm(output): 11.1250, norm(x): 8.0774, norm(y): 1.0456, norm:1.4429, tok/sec: 143994.44, flops:112.14, batch-reuse:1
@ 4174 train 4.1156 , allloss: 4.1157, dt: 904.03ms, fracRes: 0.2842, norm(attn): 0.8750, norm(output): 11.0625, norm(x): 7.8973, norm(y): 1.0458, norm:1.4530, tok/sec: 144985.75, flops:112.92, batch-reuse:1
@ 4175 train 4.0716 , allloss: 4.0718, dt: 901.23ms, fracRes: 0.2846, norm(attn): 0.8711, norm(output): 10.8750, norm(x): 7.8370, norm(y): 1.0460, norm:1.4864, tok/sec: 145436.24, flops:113.27, batch-reuse:1
@ 4176 train 4.0603 , allloss: 4.0604, dt: 898.73ms, fracRes: 0.2839, norm(attn): 0.8750, norm(output): 11.0000, norm(x): 7.7542, norm(y): 1.0463, norm:1.8294, tok/sec: 145841.70, flops:113.58, batch-reuse:1
@ 4177 train 4.0177 , allloss: 4.0178, dt: 904.03ms, fracRes: 0.2829, norm(attn): 0.8789, norm(output): 11.0625, norm(x): 7.9133, norm(y): 1.0465, norm:1.4267, tok/sec: 144985.94, flops:112.92, batch-reuse:1
@ 4178 train 4.1635 , allloss: 4.1637, dt: 913.48ms, fracRes: 0.2828, norm(attn): 0.8828, norm(output): 11.1875, norm(x): 7.8832, norm(y): 1.0465, norm:1.7447, tok/sec: 143487.23, flops:111.75, batch-reuse:1
@ 4179 train 4.1422 , allloss: 4.1424, dt: 914.65ms, fracRes: 0.2817, norm(attn): 0.8828, norm(output): 11.1250, norm(x): 7.9548, norm(y): 1.0464, norm:1.3970, tok/sec: 143302.20, flops:111.60, batch-reuse:1
@ 4180 train 4.0758 , allloss: 4.0759, dt: 904.17ms, fracRes: 0.2818, norm(attn): 0.8789, norm(output): 11.0625, norm(x): 7.8304, norm(y): 1.0463, norm:1.5085, tok/sec: 144963.50, flops:112.90, batch-reuse:1
@ 4181 train 4.1147 , allloss: 4.1149, dt: 909.35ms, fracRes: 0.2816, norm(attn): 0.8750, norm(output): 11.0000, norm(x): 7.8994, norm(y): 1.0462, norm:1.3969, tok/sec: 144138.06, flops:112.26, batch-reuse:1
@ 4182 train 4.0562 , allloss: 4.0563, dt: 909.53ms, fracRes: 0.2819, norm(attn): 0.8750, norm(output): 10.8750, norm(x): 7.6792, norm(y): 1.0459, norm:1.2657, tok/sec: 144109.30, flops:112.23, batch-reuse:1
@ 4183 train 4.0617 , allloss: 4.0619, dt: 905.85ms, fracRes: 0.2824, norm(attn): 0.8711, norm(output): 10.3750, norm(x): 7.4106, norm(y): 1.0459, norm:1.3238, tok/sec: 144695.73, flops:112.69, batch-reuse:1
@ 4184 train 4.1108 , allloss: 4.1110, dt: 894.68ms, fracRes: 0.2822, norm(attn): 0.8594, norm(output): 10.1875, norm(x): 7.4129, norm(y): 1.0459, norm:1.1587, tok/sec: 146501.66, flops:114.10, batch-reuse:1
@ 4185 train 4.1304 , allloss: 4.1305, dt: 888.31ms, fracRes: 0.2825, norm(attn): 0.8438, norm(output): 10.1250, norm(x): 7.4467, norm(y): 1.0460, norm:1.3912, tok/sec: 147551.82, flops:114.91, batch-reuse:1
@ 4186 train 4.2208 , allloss: 4.2209, dt: 915.07ms, fracRes: 0.2833, norm(attn): 0.8516, norm(output): 10.0625, norm(x): 7.2955, norm(y): 1.0463, norm:1.5531, tok/sec: 143237.46, flops:111.55, batch-reuse:1
@ 4187 train 4.1233 , allloss: 4.1235, dt: 893.00ms, fracRes: 0.2831, norm(attn): 0.8242, norm(output): 10.0000, norm(x): 7.2577, norm(y): 1.0464, norm:1.1239, tok/sec: 146776.55, flops:114.31, batch-reuse:1
@ 4188 train 4.1098 , allloss: 4.1112, dt: 892.19ms, fracRes: 0.2824, norm(attn): 0.8125, norm(output): 9.5625, norm(x): 6.9570, norm(y): 1.0461, norm:1.2220, tok/sec: 146909.71, flops:114.41, batch-reuse:1
@ 4189 train 4.0590 , allloss: 4.0592, dt: 912.56ms, fracRes: 0.2827, norm(attn): 0.8125, norm(output): 9.1250, norm(x): 6.8082, norm(y): 1.0458, norm:1.4240, tok/sec: 143631.14, flops:111.86, batch-reuse:1
@ 4190 train 4.0323 , allloss: 4.0325, dt: 888.60ms, fracRes: 0.2834, norm(attn): 0.8047, norm(output): 8.9375, norm(x): 6.6759, norm(y): 1.0457, norm:1.3175, tok/sec: 147503.56, flops:114.88, batch-reuse:1
@ 4191 train 4.0687 , allloss: 4.0689, dt: 907.32ms, fracRes: 0.2833, norm(attn): 0.8086, norm(output): 8.9375, norm(x): 6.6061, norm(y): 1.0456, norm:1.3093, tok/sec: 144460.64, flops:112.51, batch-reuse:1
@ 4192 train 4.0795 , allloss: 4.0801, dt: 895.68ms, fracRes: 0.2830, norm(attn): 0.8008, norm(output): 8.9375, norm(x): 6.5840, norm(y): 1.0452, norm:1.1575, tok/sec: 146337.83, flops:113.97, batch-reuse:1
@ 4193 train 4.0582 , allloss: 4.0584, dt: 882.78ms, fracRes: 0.2833, norm(attn): 0.8008, norm(output): 8.8750, norm(x): 6.5171, norm(y): 1.0453, norm:1.1723, tok/sec: 148477.07, flops:115.63, batch-reuse:1
@ 4194 train 3.9719 , allloss: 3.9721, dt: 905.46ms, fracRes: 0.2839, norm(attn): 0.8086, norm(output): 9.1875, norm(x): 6.8150, norm(y): 1.0459, norm:1.1536, tok/sec: 144756.77, flops:112.74, batch-reuse:1
@ 4195 train 4.0312 , allloss: 4.0313, dt: 900.02ms, fracRes: 0.2828, norm(attn): 0.8203, norm(output): 9.8750, norm(x): 6.9905, norm(y): 1.0462, norm:1.5446, tok/sec: 145631.68, flops:113.42, batch-reuse:1
@ 4196 train 4.1842 , allloss: 4.1845, dt: 905.90ms, fracRes: 0.2828, norm(attn): 0.8242, norm(output): 10.0000, norm(x): 7.2647, norm(y): 1.0464, norm:1.2959, tok/sec: 144687.81, flops:112.68, batch-reuse:1
@ 4197 train 4.0711 , allloss: 4.0712, dt: 908.45ms, fracRes: 0.2828, norm(attn): 0.8359, norm(output): 10.1250, norm(x): 7.2806, norm(y): 1.0469, norm:1.3835, tok/sec: 144281.62, flops:112.37, batch-reuse:1
@ 4198 train 4.1275 , allloss: 4.1277, dt: 909.03ms, fracRes: 0.2826, norm(attn): 0.8633, norm(output): 10.6250, norm(x): 7.6661, norm(y): 1.0470, norm:1.1576, tok/sec: 144189.09, flops:112.29, batch-reuse:1
@ 4199 train 4.1882 , allloss: 4.1883, dt: 915.57ms, fracRes: 0.2831, norm(attn): 0.8711, norm(output): 10.9375, norm(x): 7.7627, norm(y): 1.0467, norm:1.6147, tok/sec: 143158.46, flops:111.49, batch-reuse:1
@ 4200 train 4.2254 , allloss: 4.2255, dt: 905.65ms, fracRes: 0.2831, norm(attn): 0.8711, norm(output): 10.8750, norm(x): 7.8132, norm(y): 1.0463, norm:1.3478, tok/sec: 144727.43, flops:112.71, batch-reuse:1
@ 4201 train 4.0916 , allloss: 4.0918, dt: 921.59ms, fracRes: 0.2819, norm(attn): 0.8594, norm(output): 10.3750, norm(x): 7.5608, norm(y): 1.0458, norm:1.2466, tok/sec: 142223.42, flops:110.76, batch-reuse:1
@ 4202 train 4.0859 , allloss: 4.0862, dt: 890.52ms, fracRes: 0.2818, norm(attn): 0.8398, norm(output): 10.0625, norm(x): 7.4317, norm(y): 1.0459, norm:1.4456, tok/sec: 147185.11, flops:114.63, batch-reuse:1
@ 4203 train 3.9651 , allloss: 3.9652, dt: 910.40ms, fracRes: 0.2828, norm(attn): 0.8242, norm(output): 9.9375, norm(x): 7.3121, norm(y): 1.0461, norm:1.5276, tok/sec: 143971.82, flops:112.13, batch-reuse:1
@ 4204 train 4.1467 , allloss: 4.1468, dt: 895.14ms, fracRes: 0.2819, norm(attn): 0.8281, norm(output): 10.1250, norm(x): 7.4731, norm(y): 1.0461, norm:1.4022, tok/sec: 146425.72, flops:114.04, batch-reuse:1
@ 4205 train 4.0450 , allloss: 4.0452, dt: 888.22ms, fracRes: 0.2802, norm(attn): 0.8633, norm(output): 10.6875, norm(x): 7.7270, norm(y): 1.0463, norm:1.2579, tok/sec: 147567.23, flops:114.93, batch-reuse:1
@ 4206 train 4.1340 , allloss: 4.1342, dt: 885.01ms, fracRes: 0.2797, norm(attn): 0.8789, norm(output): 11.2500, norm(x): 8.0603, norm(y): 1.0468, norm:1.3245, tok/sec: 148102.00, flops:115.34, batch-reuse:1
@ 4207 train 4.1933 , allloss: 4.1934, dt: 899.55ms, fracRes: 0.2802, norm(attn): 0.9258, norm(output): 12.0625, norm(x): 8.5555, norm(y): 1.0473, norm:1.4479, tok/sec: 145708.45, flops:113.48, batch-reuse:1
@ 4208 train 4.0801 , allloss: 4.0803, dt: 892.05ms, fracRes: 0.2826, norm(attn): 0.9219, norm(output): 11.9375, norm(x): 8.3667, norm(y): 1.0473, norm:1.6195, tok/sec: 146932.87, flops:114.43, batch-reuse:1
@ 4209 train 4.1818 , allloss: 4.1819, dt: 898.67ms, fracRes: 0.2835, norm(attn): 0.8945, norm(output): 11.6250, norm(x): 8.3169, norm(y): 1.0473, norm:1.3880, tok/sec: 145850.40, flops:113.59, batch-reuse:1
@ 4210 train 4.2642 , allloss: 4.2643, dt: 910.32ms, fracRes: 0.2840, norm(attn): 0.8984, norm(output): 11.2500, norm(x): 8.0249, norm(y): 1.0471, norm:1.9464, tok/sec: 143984.34, flops:112.14, batch-reuse:1
@ 4211 train 4.0185 , allloss: 4.0186, dt: 877.03ms, fracRes: 0.2849, norm(attn): 0.8750, norm(output): 11.0000, norm(x): 7.8846, norm(y): 1.0472, norm:1.2897, tok/sec: 149449.70, flops:116.39, batch-reuse:1
@ 4212 train 4.0645 , allloss: 4.0646, dt: 904.38ms, fracRes: 0.2852, norm(attn): 0.8672, norm(output): 10.4375, norm(x): 7.5426, norm(y): 1.0472, norm:1.4941, tok/sec: 144929.45, flops:112.87, batch-reuse:1
@ 4213 train 3.9469 , allloss: 3.9470, dt: 903.08ms, fracRes: 0.2853, norm(attn): 0.8281, norm(output): 9.8750, norm(x): 7.3077, norm(y): 1.0469, norm:1.1298, tok/sec: 145138.17, flops:113.03, batch-reuse:1
@ 4214 train 4.0138 , allloss: 4.0139, dt: 900.65ms, fracRes: 0.2851, norm(attn): 0.8281, norm(output): 9.5000, norm(x): 7.0417, norm(y): 1.0468, norm:1.4453, tok/sec: 145531.22, flops:113.34, batch-reuse:1
@ 4215 train 3.9974 , allloss: 3.9975, dt: 903.88ms, fracRes: 0.2853, norm(attn): 0.8242, norm(output): 9.5000, norm(x): 7.0645, norm(y): 1.0467, norm:1.1617, tok/sec: 145010.42, flops:112.93, batch-reuse:1
@ 4216 train 3.9728 , allloss: 3.9731, dt: 902.20ms, fracRes: 0.2852, norm(attn): 0.8242, norm(output): 9.6250, norm(x): 7.0594, norm(y): 1.0468, norm:0.9885, tok/sec: 145280.58, flops:113.15, batch-reuse:1
@ 4217 train 4.0123 , allloss: 4.0125, dt: 898.83ms, fracRes: 0.2847, norm(attn): 0.8203, norm(output): 9.5000, norm(x): 7.0409, norm(y): 1.0468, norm:1.1335, tok/sec: 145825.33, flops:113.57, batch-reuse:1
@ 4218 train 3.9557 , allloss: 3.9559, dt: 890.23ms, fracRes: 0.2853, norm(attn): 0.8281, norm(output): 9.8125, norm(x): 7.1895, norm(y): 1.0470, norm:1.1862, tok/sec: 147234.66, flops:114.67, batch-reuse:1
@ 4219 train 4.0232 , allloss: 4.0234, dt: 907.03ms, fracRes: 0.2851, norm(attn): 0.8594, norm(output): 10.1250, norm(x): 7.3952, norm(y): 1.0472, norm:1.0438, tok/sec: 144506.89, flops:112.54, batch-reuse:1
@ 4220 train 3.9547 , allloss: 3.9550, dt: 907.60ms, fracRes: 0.2857, norm(attn): 0.8594, norm(output): 10.2500, norm(x): 7.5824, norm(y): 1.0474, norm:1.6381, tok/sec: 144416.17, flops:112.47, batch-reuse:1
@ 4221 train 4.1181 , allloss: 4.1184, dt: 894.09ms, fracRes: 0.2854, norm(attn): 0.8672, norm(output): 10.6250, norm(x): 7.6175, norm(y): 1.0475, norm:1.3198, tok/sec: 146598.85, flops:114.17, batch-reuse:1
@ 4222 train 3.9344 , allloss: 3.9346, dt: 906.81ms, fracRes: 0.2856, norm(attn): 0.8711, norm(output): 10.6875, norm(x): 7.7025, norm(y): 1.0478, norm:1.1509, tok/sec: 144542.19, flops:112.57, batch-reuse:1
@ 4223 train 4.1245 , allloss: 4.1248, dt: 898.64ms, fracRes: 0.2867, norm(attn): 0.8477, norm(output): 10.4375, norm(x): 7.6664, norm(y): 1.0477, norm:1.7951, tok/sec: 145856.52, flops:113.59, batch-reuse:1
@ 4224 train 3.9293 , allloss: 3.9295, dt: 910.61ms, fracRes: 0.2857, norm(attn): 0.8438, norm(output): 10.1875, norm(x): 7.4447, norm(y): 1.0475, norm:1.5801, tok/sec: 143937.89, flops:112.10, batch-reuse:1
@ 4225 train 4.0528 , allloss: 4.0530, dt: 907.46ms, fracRes: 0.2860, norm(attn): 0.8242, norm(output): 10.1250, norm(x): 7.3069, norm(y): 1.0475, norm:1.0182, tok/sec: 144437.80, flops:112.49, batch-reuse:1
@ 4226 train 4.0745 , allloss: 4.0747, dt: 899.24ms, fracRes: 0.2868, norm(attn): 0.8242, norm(output): 10.0625, norm(x): 7.2698, norm(y): 1.0474, norm:1.0723, tok/sec: 145759.33, flops:113.52, batch-reuse:1
@ 4227 train 4.0282 , allloss: 4.0286, dt: 897.99ms, fracRes: 0.2862, norm(attn): 0.8164, norm(output): 9.6875, norm(x): 7.0126, norm(y): 1.0471, norm:1.4326, tok/sec: 145962.20, flops:113.68, batch-reuse:1
@ 4228 train 4.2588 , allloss: 4.2590, dt: 889.15ms, fracRes: 0.2862, norm(attn): 0.8125, norm(output): 9.5000, norm(x): 7.0905, norm(y): 1.0471, norm:1.7636, tok/sec: 147412.08, flops:114.81, batch-reuse:1
@ 4229 train 4.1011 , allloss: 4.1013, dt: 919.97ms, fracRes: 0.2863, norm(attn): 0.8125, norm(output): 9.6250, norm(x): 7.0198, norm(y): 1.0475, norm:1.3084, tok/sec: 142474.21, flops:110.96, batch-reuse:1
@ 4230 train 4.0041 , allloss: 4.0043, dt: 911.47ms, fracRes: 0.2856, norm(attn): 0.8086, norm(output): 9.5000, norm(x): 6.9640, norm(y): 1.0472, norm:1.1138, tok/sec: 143803.29, flops:111.99, batch-reuse:1
@ 4231 train 3.9892 , allloss: 3.9893, dt: 900.27ms, fracRes: 0.2858, norm(attn): 0.8086, norm(output): 9.6250, norm(x): 7.1067, norm(y): 1.0471, norm:1.3119, tok/sec: 145592.23, flops:113.39, batch-reuse:1
@ 4232 train 4.0385 , allloss: 4.0387, dt: 902.08ms, fracRes: 0.2863, norm(attn): 0.8125, norm(output): 9.6875, norm(x): 7.1776, norm(y): 1.0472, norm:0.9546, tok/sec: 145300.47, flops:113.16, batch-reuse:1
@ 4233 train 4.0072 , allloss: 4.0079, dt: 916.57ms, fracRes: 0.2864, norm(attn): 0.8203, norm(output): 10.0000, norm(x): 7.3091, norm(y): 1.0476, norm:1.1522, tok/sec: 143002.43, flops:111.37, batch-reuse:1
@ 4234 train 4.0221 , allloss: 4.0223, dt: 916.74ms, fracRes: 0.2862, norm(attn): 0.8203, norm(output): 10.1875, norm(x): 7.5169, norm(y): 1.0476, norm:1.5292, tok/sec: 142976.73, flops:111.35, batch-reuse:1
@ 4235 train 4.0684 , allloss: 4.0686, dt: 914.78ms, fracRes: 0.2855, norm(attn): 0.8555, norm(output): 10.6250, norm(x): 7.4810, norm(y): 1.0477, norm:2.3747, tok/sec: 143283.15, flops:111.59, batch-reuse:1
@ 4236 train 4.1714 , allloss: 4.1716, dt: 912.97ms, fracRes: 0.2869, norm(attn): 0.8320, norm(output): 10.5625, norm(x): 7.7555, norm(y): 1.0479, norm:1.5156, tok/sec: 143566.48, flops:111.81, batch-reuse:1
@ 4237 train 4.0231 , allloss: 4.0233, dt: 897.91ms, fracRes: 0.2864, norm(attn): 0.8438, norm(output): 10.6875, norm(x): 7.8873, norm(y): 1.0482, norm:1.4326, tok/sec: 145973.94, flops:113.69, batch-reuse:1
@ 4238 train 4.0464 , allloss: 4.0465, dt: 896.65ms, fracRes: 0.2858, norm(attn): 0.8555, norm(output): 10.7500, norm(x): 7.8178, norm(y): 1.0481, norm:1.3178, tok/sec: 146180.47, flops:113.85, batch-reuse:1
@ 4239 train 3.9873 , allloss: 3.9875, dt: 914.76ms, fracRes: 0.2856, norm(attn): 0.8320, norm(output): 10.3750, norm(x): 7.6336, norm(y): 1.0478, norm:1.3702, tok/sec: 143285.06, flops:111.59, batch-reuse:1
@ 4240 train 4.0405 , allloss: 4.0407, dt: 921.17ms, fracRes: 0.2860, norm(attn): 0.8242, norm(output): 10.0625, norm(x): 7.3426, norm(y): 1.0477, norm:1.2577, tok/sec: 142289.16, flops:110.82, batch-reuse:1
@ 4241 train 4.0449 , allloss: 4.0453, dt: 915.23ms, fracRes: 0.2865, norm(attn): 0.8203, norm(output): 9.8750, norm(x): 7.2013, norm(y): 1.0479, norm:1.1936, tok/sec: 143211.71, flops:111.53, batch-reuse:1
@ 4242 train 4.1565 , allloss: 4.1567, dt: 898.50ms, fracRes: 0.2850, norm(attn): 0.8125, norm(output): 9.6250, norm(x): 6.9704, norm(y): 1.0474, norm:1.2484, tok/sec: 145879.35, flops:113.61, batch-reuse:1
@ 4243 train 3.9832 , allloss: 3.9834, dt: 901.61ms, fracRes: 0.2858, norm(attn): 0.8125, norm(output): 9.5000, norm(x): 6.9974, norm(y): 1.0474, norm:1.1296, tok/sec: 145376.09, flops:113.22, batch-reuse:1
@ 4244 train 3.8414 , allloss: 3.8416, dt: 889.25ms, fracRes: 0.2854, norm(attn): 0.8125, norm(output): 9.6250, norm(x): 7.0276, norm(y): 1.0474, norm:1.3627, tok/sec: 147395.56, flops:114.79, batch-reuse:1
@ 4245 train 3.9659 , allloss: 3.9660, dt: 897.78ms, fracRes: 0.2847, norm(attn): 0.8164, norm(output): 9.7500, norm(x): 7.1829, norm(y): 1.0475, norm:0.9511, tok/sec: 145996.42, flops:113.70, batch-reuse:1
@ 4246 train 4.2981 , allloss: 4.2982, dt: 899.83ms, fracRes: 0.2857, norm(attn): 0.8281, norm(output): 10.2500, norm(x): 7.4315, norm(y): 1.0480, norm:1.5450, tok/sec: 145662.40, flops:113.44, batch-reuse:1
@ 4247 train 4.0728 , allloss: 4.0730, dt: 915.36ms, fracRes: 0.2853, norm(attn): 0.8555, norm(output): 10.6875, norm(x): 7.7604, norm(y): 1.0485, norm:1.6628, tok/sec: 143191.83, flops:111.52, batch-reuse:1
@ 4248 train 4.0784 , allloss: 4.0785, dt: 906.17ms, fracRes: 0.2858, norm(attn): 0.8594, norm(output): 10.6875, norm(x): 7.6847, norm(y): 1.0487, norm:1.1718, tok/sec: 144644.15, flops:112.65, batch-reuse:1
@ 4249 train 4.0651 , allloss: 4.0654, dt: 914.45ms, fracRes: 0.2852, norm(attn): 0.8594, norm(output): 10.8125, norm(x): 7.8338, norm(y): 1.0488, norm:1.6021, tok/sec: 143333.70, flops:111.63, batch-reuse:1
@ 4250 train 3.9584 , allloss: 3.9586, dt: 919.09ms, fracRes: 0.2858, norm(attn): 0.8711, norm(output): 11.0625, norm(x): 7.8561, norm(y): 1.0493, norm:1.4256, tok/sec: 142610.14, flops:111.07, batch-reuse:1
@ 4251 train 4.0469 , allloss: 4.0470, dt: 898.25ms, fracRes: 0.2861, norm(attn): 0.8750, norm(output): 11.1250, norm(x): 7.9524, norm(y): 1.0491, norm:1.0072, tok/sec: 145919.70, flops:113.64, batch-reuse:1
@ 4252 train 3.8941 , allloss: 3.8941, dt: 885.37ms, fracRes: 0.2861, norm(attn): 0.8711, norm(output): 11.1250, norm(x): 8.1361, norm(y): 1.0492, norm:1.5577, tok/sec: 148041.58, flops:115.30, batch-reuse:1
@ 4253 train 3.9687 , allloss: 3.9689, dt: 893.06ms, fracRes: 0.2860, norm(attn): 0.8711, norm(output): 11.0625, norm(x): 8.2136, norm(y): 1.0488, norm:1.1772, tok/sec: 146767.89, flops:114.30, batch-reuse:1
@ 4254 train 4.0147 , allloss: 4.0148, dt: 885.94ms, fracRes: 0.2864, norm(attn): 0.8750, norm(output): 11.1875, norm(x): 8.1561, norm(y): 1.0487, norm:1.5686, tok/sec: 147946.56, flops:115.22, batch-reuse:1
@ 4255 train 3.9838 , allloss: 3.9839, dt: 882.29ms, fracRes: 0.2860, norm(attn): 0.8672, norm(output): 11.0000, norm(x): 8.0701, norm(y): 1.0487, norm:1.1232, tok/sec: 148558.88, flops:115.70, batch-reuse:1
@ 4256 train 3.8967 , allloss: 3.8968, dt: 903.90ms, fracRes: 0.2863, norm(attn): 0.8711, norm(output): 11.0625, norm(x): 7.9220, norm(y): 1.0487, norm:1.2941, tok/sec: 145006.40, flops:112.93, batch-reuse:1
@ 4257 train 3.9116 , allloss: 3.9117, dt: 894.31ms, fracRes: 0.2858, norm(attn): 0.8516, norm(output): 10.9375, norm(x): 7.9308, norm(y): 1.0484, norm:1.5438, tok/sec: 146562.47, flops:114.14, batch-reuse:1
@ 4258 train 4.0941 , allloss: 4.0942, dt: 906.50ms, fracRes: 0.2861, norm(attn): 0.8477, norm(output): 10.8125, norm(x): 7.7471, norm(y): 1.0482, norm:1.3753, tok/sec: 144591.00, flops:112.61, batch-reuse:1
@ 4259 train 4.0555 , allloss: 4.0556, dt: 892.81ms, fracRes: 0.2857, norm(attn): 0.8398, norm(output): 10.5625, norm(x): 7.6480, norm(y): 1.0483, norm:1.5129, tok/sec: 146808.30, flops:114.33, batch-reuse:1
@ 4260 train 4.1438 , allloss: 4.1439, dt: 912.66ms, fracRes: 0.2861, norm(attn): 0.8359, norm(output): 10.5625, norm(x): 7.6432, norm(y): 1.0486, norm:1.3492, tok/sec: 143615.50, flops:111.85, batch-reuse:1
@ 4261 train 4.2835 , allloss: 4.2837, dt: 903.80ms, fracRes: 0.2863, norm(attn): 0.8203, norm(output): 10.5000, norm(x): 7.5897, norm(y): 1.0486, norm:1.3943, tok/sec: 145024.04, flops:112.95, batch-reuse:1
@ 4262 train 4.1464 , allloss: 4.1465, dt: 886.79ms, fracRes: 0.2858, norm(attn): 0.8164, norm(output): 10.1875, norm(x): 7.3655, norm(y): 1.0486, norm:1.3361, tok/sec: 147805.51, flops:115.11, batch-reuse:1
@ 4263 train 4.2107 , allloss: 4.2108, dt: 907.46ms, fracRes: 0.2864, norm(attn): 0.8125, norm(output): 10.0625, norm(x): 7.4318, norm(y): 1.0487, norm:1.4985, tok/sec: 144437.87, flops:112.49, batch-reuse:1
@ 4264 train 4.3576 , allloss: 4.3576, dt: 904.61ms, fracRes: 0.2856, norm(attn): 0.8086, norm(output): 10.1875, norm(x): 7.4003, norm(y): 1.0485, norm:1.6060, tok/sec: 144893.39, flops:112.84, batch-reuse:1
@ 4265 train 4.3028 , allloss: 4.3028, dt: 904.19ms, fracRes: 0.2871, norm(attn): 0.8164, norm(output): 10.3750, norm(x): 7.5460, norm(y): 1.0491, norm:1.6183, tok/sec: 144960.52, flops:112.90, batch-reuse:1
@ 4266 train 4.1634 , allloss: 4.1636, dt: 897.10ms, fracRes: 0.2858, norm(attn): 0.8125, norm(output): 10.2500, norm(x): 7.5279, norm(y): 1.0490, norm:1.4728, tok/sec: 146107.09, flops:113.79, batch-reuse:1
@ 4267 train 4.2451 , allloss: 4.2452, dt: 911.10ms, fracRes: 0.2868, norm(attn): 0.8125, norm(output): 10.1875, norm(x): 7.4135, norm(y): 1.0492, norm:1.3758, tok/sec: 143861.73, flops:112.04, batch-reuse:1
@ 4268 train 4.2379 , allloss: 4.2379, dt: 910.83ms, fracRes: 0.2866, norm(attn): 0.8125, norm(output): 10.1250, norm(x): 7.4129, norm(y): 1.0491, norm:1.2231, tok/sec: 143904.06, flops:112.07, batch-reuse:1
@ 4269 train 4.2553 , allloss: 4.2555, dt: 897.35ms, fracRes: 0.2860, norm(attn): 0.8203, norm(output): 10.5000, norm(x): 7.6567, norm(y): 1.0493, norm:1.2171, tok/sec: 146065.00, flops:113.76, batch-reuse:1
@ 4270 train 4.4140 , allloss: 4.4141, dt: 897.55ms, fracRes: 0.2830, norm(attn): 0.8125, norm(output): 10.2500, norm(x): 7.5267, norm(y): 1.0490, norm:1.6436, tok/sec: 146032.45, flops:113.73, batch-reuse:1
@ 4271 train 4.1280 , allloss: 4.1281, dt: 903.88ms, fracRes: 0.2863, norm(attn): 0.8047, norm(output): 9.8750, norm(x): 7.2907, norm(y): 1.0493, norm:1.7995, tok/sec: 145010.00, flops:112.93, batch-reuse:1
@ 4272 train 4.2479 , allloss: 4.2480, dt: 909.10ms, fracRes: 0.2868, norm(attn): 0.7930, norm(output): 9.6250, norm(x): 7.0749, norm(y): 1.0492, norm:1.1340, tok/sec: 144176.99, flops:112.29, batch-reuse:1
@ 4273 train 4.2339 , allloss: 4.2341, dt: 907.49ms, fracRes: 0.2864, norm(attn): 0.7930, norm(output): 9.5000, norm(x): 7.0089, norm(y): 1.0490, norm:1.2639, tok/sec: 144434.19, flops:112.49, batch-reuse:1
@ 4274 train 4.1958 , allloss: 4.1959, dt: 896.17ms, fracRes: 0.2860, norm(attn): 0.8008, norm(output): 9.5000, norm(x): 7.0395, norm(y): 1.0490, norm:1.2114, tok/sec: 146257.59, flops:113.91, batch-reuse:1
@ 4275 train 4.1129 , allloss: 4.1130, dt: 897.41ms, fracRes: 0.2862, norm(attn): 0.8125, norm(output): 10.0000, norm(x): 7.2738, norm(y): 1.0494, norm:1.1788, tok/sec: 146056.66, flops:113.75, batch-reuse:1
@ 4276 train 4.1316 , allloss: 4.1317, dt: 894.32ms, fracRes: 0.2870, norm(attn): 0.8164, norm(output): 10.0625, norm(x): 7.3770, norm(y): 1.0499, norm:1.3172, tok/sec: 146560.20, flops:114.14, batch-reuse:1
@ 4277 train 4.1991 , allloss: 4.1993, dt: 911.62ms, fracRes: 0.2859, norm(attn): 0.8086, norm(output): 9.9375, norm(x): 7.1957, norm(y): 1.0495, norm:0.9236, tok/sec: 143778.70, flops:111.98, batch-reuse:1
@ 4278 train 4.1729 , allloss: 4.1730, dt: 899.77ms, fracRes: 0.2856, norm(attn): 0.8086, norm(output): 9.8750, norm(x): 7.2078, norm(y): 1.0495, norm:1.1219, tok/sec: 145673.51, flops:113.45, batch-reuse:1
@ 4279 train 4.1852 , allloss: 4.1853, dt: 888.08ms, fracRes: 0.2862, norm(attn): 0.8047, norm(output): 9.6250, norm(x): 7.0970, norm(y): 1.0493, norm:1.0867, tok/sec: 147590.52, flops:114.94, batch-reuse:1
@ 4280 train 4.0606 , allloss: 4.0608, dt: 910.01ms, fracRes: 0.2866, norm(attn): 0.7969, norm(output): 9.5000, norm(x): 7.0220, norm(y): 1.0493, norm:1.0928, tok/sec: 144034.02, flops:112.17, batch-reuse:1
@ 4281 train 4.1542 , allloss: 4.1543, dt: 905.11ms, fracRes: 0.2861, norm(attn): 0.8008, norm(output): 9.4375, norm(x): 7.0407, norm(y): 1.0493, norm:1.0156, tok/sec: 144813.62, flops:112.78, batch-reuse:1
@ 4282 train 4.1848 , allloss: 4.1849, dt: 900.79ms, fracRes: 0.2865, norm(attn): 0.8047, norm(output): 9.6250, norm(x): 7.0874, norm(y): 1.0492, norm:1.1920, tok/sec: 145508.07, flops:113.32, batch-reuse:1
@ 4283 train 4.2762 , allloss: 4.2764, dt: 905.78ms, fracRes: 0.2861, norm(attn): 0.8086, norm(output): 9.9375, norm(x): 7.2055, norm(y): 1.0494, norm:0.9832, tok/sec: 144705.56, flops:112.70, batch-reuse:1
@ 4284 train 4.1979 , allloss: 4.1981, dt: 909.20ms, fracRes: 0.2856, norm(attn): 0.8086, norm(output): 9.8750, norm(x): 7.3393, norm(y): 1.0495, norm:1.3683, tok/sec: 144162.32, flops:112.27, batch-reuse:1
@ 4285 train 4.1096 , allloss: 4.1097, dt: 908.19ms, fracRes: 0.2860, norm(attn): 0.8125, norm(output): 10.0625, norm(x): 7.3628, norm(y): 1.0500, norm:1.2920, tok/sec: 144321.62, flops:112.40, batch-reuse:1
@ 4286 train 4.2125 , allloss: 4.2127, dt: 906.61ms, fracRes: 0.2855, norm(attn): 0.8125, norm(output): 10.3125, norm(x): 7.5755, norm(y): 1.0502, norm:1.3353, tok/sec: 144574.35, flops:112.60, batch-reuse:1
@ 4287 train 4.1443 , allloss: 4.1444, dt: 899.28ms, fracRes: 0.2858, norm(attn): 0.8203, norm(output): 10.6250, norm(x): 7.5377, norm(y): 1.0501, norm:1.4779, tok/sec: 145751.64, flops:113.51, batch-reuse:1
@ 4288 train 4.1365 , allloss: 4.1366, dt: 903.07ms, fracRes: 0.2859, norm(attn): 0.8125, norm(output): 10.1250, norm(x): 7.5542, norm(y): 1.0500, norm:1.3081, tok/sec: 145140.39, flops:113.04, batch-reuse:1
@ 4289 train 4.2400 , allloss: 4.2401, dt: 902.62ms, fracRes: 0.2848, norm(attn): 0.8164, norm(output): 10.0625, norm(x): 7.3912, norm(y): 1.0495, norm:1.4676, tok/sec: 145212.81, flops:113.09, batch-reuse:1
@ 4290 train 4.1234 , allloss: 4.1235, dt: 913.57ms, fracRes: 0.2857, norm(attn): 0.8125, norm(output): 9.8125, norm(x): 7.1694, norm(y): 1.0492, norm:1.0994, tok/sec: 143472.92, flops:111.74, batch-reuse:1
@ 4291 train 4.1590 , allloss: 4.1592, dt: 902.69ms, fracRes: 0.2859, norm(attn): 0.8047, norm(output): 9.6875, norm(x): 7.1594, norm(y): 1.0492, norm:1.1288, tok/sec: 145201.61, flops:113.08, batch-reuse:1
@ 4292 train 4.2628 , allloss: 4.2629, dt: 901.00ms, fracRes: 0.2857, norm(attn): 0.7969, norm(output): 9.5625, norm(x): 7.0590, norm(y): 1.0492, norm:1.2380, tok/sec: 145473.72, flops:113.30, batch-reuse:1
@ 4293 train 4.1844 , allloss: 4.1845, dt: 889.76ms, fracRes: 0.2841, norm(attn): 0.8125, norm(output): 9.4375, norm(x): 6.9968, norm(y): 1.0491, norm:1.0873, tok/sec: 147311.63, flops:114.73, batch-reuse:1
@ 4294 train 4.0361 , allloss: 4.0362, dt: 897.07ms, fracRes: 0.2850, norm(attn): 0.8008, norm(output): 9.0625, norm(x): 6.8308, norm(y): 1.0491, norm:1.0616, tok/sec: 146110.85, flops:113.79, batch-reuse:1
@ 4295 train 4.2720 , allloss: 4.2721, dt: 893.69ms, fracRes: 0.2852, norm(attn): 0.7969, norm(output): 9.0625, norm(x): 6.7539, norm(y): 1.0490, norm:1.3886, tok/sec: 146663.62, flops:114.22, batch-reuse:1
@ 4296 train 4.1562 , allloss: 4.1563, dt: 887.78ms, fracRes: 0.2849, norm(attn): 0.7969, norm(output): 9.0000, norm(x): 6.7128, norm(y): 1.0489, norm:1.4201, tok/sec: 147640.59, flops:114.98, batch-reuse:1
@ 4297 train 4.2063 , allloss: 4.2064, dt: 898.14ms, fracRes: 0.2852, norm(attn): 0.7930, norm(output): 9.0625, norm(x): 6.9042, norm(y): 1.0487, norm:1.2732, tok/sec: 145936.35, flops:113.66, batch-reuse:1
