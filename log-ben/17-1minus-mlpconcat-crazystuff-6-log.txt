Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.00015
Experiment name: 17-1minus-mlpconcat-crazystuff-6
MLPSCALE: 2
Experiment description: 
```
Transformer, max LR 0.00015
Setting:
========
        self.compiler = BenCompilerNoOp(config)
        self.execute = BenExecute(config)
========
        y = self.ln_1(x)
        attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
        program = self.compiler(y)
        machineOutput = self.execute(program, attn)
        newx = xWeights * x + (1 - xWeights) * machineOutput
========
                x, metadata = block(x,print_weights=print_weights,step=i)
                _x_total = x
                _in = x.detach()
                _x, _ = block(_in,print_weights=False) # Do again... lol
                _xtraloss = _xtraloss + torch.linalg.norm(_x - _in, dim=-1, ord=float('inf')).mean()
========
VALUEMATRIX=True
REUSE_WEIGHTS=True
MLP_SCALE=2
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True
```
![caption](img/17-1minus-mlpconcat-crazystuff-6.jpg)

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 6, with 45,318,144 parameters
num non-decayed parameter tensors: 6, with 5,376 parameters
@ 0 train 10.9998 , allloss: 13.3421, dt: 2638.86ms, fracRes: 0.0064, norm(attn): 0.0315, norm(output): 0.0518, norm(x): 0.0499, norm(y): 0.9984, norm:23.7105, tok/sec: 49670.00, flops:19.35, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5703, 0.4297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3730, 0.3008, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.2432, 0.2246, 0.2256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.1680, 0.1709, 0.1729, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.1270, 0.2393, 0.1465, 0.2021, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.1299, 0.1299, 0.1904, 0.1396, 0.1436, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.0947, 0.1157, 0.0796, 0.1504, 0.1133, 0.1177, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.0771, 0.0879, 0.1138, 0.1084, 0.0942, 0.1406, 0.1436, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.0767, 0.1055, 0.0928, 0.0801, 0.1167, 0.1016, 0.1011, 0.1021, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.0640, 0.0452, 0.1680, 0.1582, 0.0845, 0.0581, 0.0952, 0.0603, 0.0869, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0747, 0.0684, 0.0791, 0.0552, 0.0923, 0.0850, 0.1191, 0.1045, 0.0708, 0.1191, 0.0583, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.0635, 0.0610, 0.0674, 0.0752, 0.0801, 0.1406, 0.0762, 0.1045, 0.0664, 0.0518, 0.0781, 0.0530, 0.0000, 0.0000],
        [0.0723, 0.0435, 0.0586, 0.0723, 0.0623, 0.0537, 0.0820, 0.0874, 0.0938, 0.0659, 0.0903, 0.0854, 0.0630, 0.0698, 0.0000],
        [0.0623, 0.0620, 0.0898, 0.0615, 0.0820, 0.0522, 0.0752, 0.0723, 0.0869, 0.0613, 0.0840, 0.0317, 0.0757, 0.0557, 0.0471]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0021, -0.0174,  0.0154,  ...,  0.0021,  0.0037, -0.0072],
        [-0.0340,  0.0272,  0.0092,  ...,  0.0072, -0.0196, -0.0027],
        [ 0.0109,  0.0097,  0.0152,  ..., -0.0068, -0.0156,  0.0031],
        ...,
        [-0.0217, -0.0194,  0.0088,  ..., -0.0052,  0.0005, -0.0116],
        [ 0.0083, -0.0273, -0.0183,  ...,  0.0110,  0.0120, -0.0098],
        [-0.0020, -0.0101,  0.0143,  ..., -0.0108, -0.0044,  0.0013]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0188,  0.4297, -0.5625,  0.3926,  0.2324, -0.5430, -0.5898,  0.4043,  0.2188, -0.2197,  0.1826, -1.0312,  0.0957,  0.0854,  0.8281, -0.1582,  0.0035,  1.0312, -0.1494, -1.1250,  0.2080,  0.5234, -0.2129,  0.4551,  0.9062, -0.6992,  0.3105,  0.3965, -0.8828,  0.0874, -0.4668,  0.3301,
         0.0879, -0.2852, -0.4629,  0.5508, -0.8594,  0.0250,  1.1328, -0.7930, -0.0405, -0.0625, -0.9570, -0.6328, -0.0786,  1.3359, -0.0732,  0.6250, -0.2100, -0.5234, -0.3242,  0.4785, -0.8594,  0.6523, -0.6680,  0.0593,  0.1865,  0.1167,  0.4102,  0.9336, -0.0767,  0.4258, -0.5469,  0.3535],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0030, -0.0198,  ...,  0.0272, -0.0121,  0.0361],
        [ 0.0046, -0.0376,  0.0063,  ...,  0.0378, -0.0272,  0.0257],
        [-0.0089, -0.0121,  0.0136,  ..., -0.0108, -0.0131,  0.0097],
        ...,
        [ 0.0038,  0.0200, -0.0205,  ...,  0.0277,  0.0132,  0.0228],
        [ 0.0209,  0.0092,  0.0090,  ...,  0.0478, -0.0132, -0.0005],
        [ 0.0309, -0.0271, -0.0038,  ...,  0.0037, -0.0018,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8906,  0.2520, -0.2188,  0.3770, -0.3145,  0.1787,  0.0991, -1.0000, -0.0630,  0.3906, -0.6406,  0.2139, -0.1089, -0.2578,  0.4355, -0.5898, -0.4121,  0.4668,  0.0430,  1.2188,  0.5938,  0.7344,  0.2051, -0.1377,  0.0432,  0.2490,  0.2168,  0.2656, -0.0972, -0.0505,  0.2109, -0.2852,
         0.7812, -0.0032,  0.4922,  0.2734,  0.2637,  0.0752,  0.4316,  0.1611,  0.3652, -0.0173,  0.2988,  1.0312, -0.2812, -0.4727, -0.2480,  0.9297,  1.0703, -0.0605,  0.2256,  0.0204,  0.0088, -0.6562, -0.2559,  0.1406,  0.0825, -1.4375,  0.6992, -0.4863,  0.4219,  0.9102, -0.1553, -0.5078],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.2793, -0.1465,  0.0065,  0.2949, -0.3828,  0.1777,  0.1011, -0.0811,  0.1816, -0.0889, -0.1982, -0.1592, -0.1270,  0.2793],
        [ 0.0000, -0.2148, -0.1406,  0.1113,  0.0461, -0.2578,  0.2471,  0.2324,  0.0957, -0.0116,  0.0728,  0.1162, -0.1445,  0.0396, -0.2402],
        [ 0.0000, -0.2354, -0.3125, -0.3086, -0.3086,  0.0454,  0.0537,  0.1943, -0.3340, -0.1050, -0.3438,  0.2441,  0.1562,  0.1709,  0.4199],
        [ 0.0000, -0.1934, -0.1807, -0.1680,  0.3281, -0.0508,  0.1553, -0.0679, -0.1147, -0.1201, -0.5547, -0.0820, -0.6602,  0.1367,  0.5938],
        [ 0.0000, -0.2236,  0.4121, -0.0762,  0.2412, -0.2256, -0.2812,  0.0427, -0.2754,  0.3281, -0.2324, -0.0427,  0.3301, -0.0234,  0.0209],
        [ 0.0000,  0.0610,  0.0601,  0.4414,  0.1279,  0.1572,  0.1553, -0.0330, -0.2773,  0.2793,  0.5742, -0.1104,  0.0281,  0.0195, -0.2539],
        [ 0.0000, -0.0918,  0.1074, -0.2637,  0.3711,  0.0894,  0.1260,  0.7734, -0.1289, -0.9102,  0.3223, -0.2266, -0.0020, -0.2461,  0.2295],
        [ 0.0000, -0.2031, -0.0737,  0.1846,  0.1357, -0.0031,  0.3926,  0.4180,  0.3848, -0.0442,  0.3809, -0.2812, -0.3887,  0.0659,  0.0586],
        [ 0.0000, -0.2812,  0.0413, -0.0864, -0.2324,  0.1416,  0.0025, -0.0011,  0.0063,  0.1865,  0.0476,  0.0054, -0.0383,  0.1245, -0.1030],
        [ 0.0000, -0.3047, -0.6523,  0.6602,  0.5977, -0.0265, -0.4023,  0.0918, -0.3633,  0.0039,  0.0723, -0.3105,  0.0747, -0.2812,  0.5156],
        [ 0.0000,  0.0210, -0.0635,  0.0835, -0.2773,  0.2363,  0.1523,  0.4902,  0.3594, -0.0292,  0.4902, -0.2217,  0.6523, -0.3770, -0.9180],
        [ 0.0000, -0.2539, -0.2949, -0.1963, -0.0884, -0.0262,  0.5391, -0.0737,  0.2432, -0.2080, -0.4629, -0.0520, -0.4355,  0.1514, -0.1836],
        [ 0.0000, -0.5078, -0.2119, -0.0011, -0.1504, -0.2988,  0.1289,  0.1924,  0.2598, -0.0908,  0.2207,  0.1660, -0.1387, -0.0378, -0.1367],
        [ 0.0000, -0.0075,  0.3652, -0.0129,  0.2734, -0.1777,  0.1885,  0.1494,  0.3301, -0.0162,  0.2988, -0.6797,  0.1924, -0.1118, -0.2793]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5059],
        [0.3236],
        [0.2595],
        [0.1907],
        [0.1534],
        [0.1325],
        [0.1216],
        [0.1042],
        [0.0959],
        [0.0861],
        [0.0765],
        [0.0732],
        [0.0714],
        [0.0642]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5977, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.2812, 0.3203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2500, 0.2314, 0.2021, 0.3164, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.2266, 0.1934, 0.1992, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.1396, 0.2168, 0.1572, 0.1455, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1426, 0.0884, 0.0981, 0.2305, 0.1021, 0.1436, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.1445, 0.1338, 0.1201, 0.1562, 0.1094, 0.0825, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.0972, 0.1147, 0.1279, 0.1914, 0.1270, 0.0869, 0.0728, 0.0593, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.0649, 0.0718, 0.0928, 0.0801, 0.1357, 0.1064, 0.1572, 0.0549, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.1216, 0.0850, 0.0811, 0.1226, 0.0703, 0.0593, 0.1055, 0.0684, 0.1069, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0679, 0.0603, 0.1260, 0.0669, 0.0747, 0.0698, 0.1250, 0.1021, 0.0830, 0.0693, 0.0762, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0840, 0.0972, 0.0742, 0.0713, 0.0593, 0.1133, 0.0864, 0.0530, 0.0525, 0.0718, 0.0806, 0.0806, 0.0000, 0.0000],
        [0.0674, 0.0403, 0.0564, 0.1069, 0.1157, 0.0830, 0.0913, 0.0479, 0.0540, 0.0825, 0.0579, 0.0540, 0.0854, 0.0571, 0.0000],
        [0.0583, 0.0732, 0.0571, 0.0791, 0.0894, 0.0664, 0.0811, 0.0422, 0.0500, 0.0747, 0.0645, 0.0618, 0.0942, 0.0625, 0.0454]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0021, -0.0174,  0.0154,  ...,  0.0021,  0.0037, -0.0072],
        [-0.0340,  0.0272,  0.0092,  ...,  0.0072, -0.0196, -0.0027],
        [ 0.0109,  0.0097,  0.0152,  ..., -0.0068, -0.0156,  0.0031],
        ...,
        [-0.0217, -0.0194,  0.0088,  ..., -0.0052,  0.0005, -0.0116],
        [ 0.0083, -0.0273, -0.0183,  ...,  0.0110,  0.0120, -0.0098],
        [-0.0020, -0.0101,  0.0143,  ..., -0.0108, -0.0044,  0.0013]], device='cuda:0', requires_grad=True)
K: tensor([-0.6094,  0.0757, -0.0452, -0.0996, -0.0732, -0.6250, -1.5312,  0.2295,  0.1416, -0.6328,  0.1396, -0.1523,  0.1445,  0.8008, -0.3203, -1.1094,  0.1064,  0.6602,  0.2412, -0.1729, -0.3652, -0.1719, -0.4551, -0.1143, -0.5352, -0.7734, -0.2275, -0.2969,  0.0635,  0.1855,  1.1328, -0.1660,
        -1.2109,  0.4023,  0.4609,  0.8672,  1.3359, -0.0498, -0.6797,  0.1484,  0.4121,  0.6641, -0.7734,  0.0247,  0.1133,  0.7461, -0.3613, -0.0493, -0.1533, -0.3242,  0.3633, -0.5938, -0.2695,  0.0236, -0.1689,  0.5469, -0.0708,  0.4531, -0.3652, -1.3984, -0.9023,  0.1885, -0.8242, -0.8125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0030, -0.0198,  ...,  0.0272, -0.0121,  0.0361],
        [ 0.0046, -0.0376,  0.0063,  ...,  0.0378, -0.0272,  0.0257],
        [-0.0089, -0.0121,  0.0136,  ..., -0.0108, -0.0131,  0.0097],
        ...,
        [ 0.0038,  0.0200, -0.0205,  ...,  0.0277,  0.0132,  0.0228],
        [ 0.0209,  0.0092,  0.0090,  ...,  0.0478, -0.0132, -0.0005],
        [ 0.0309, -0.0271, -0.0038,  ...,  0.0037, -0.0018,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5312,  0.6992, -0.1162,  0.1953, -0.2500,  0.5859,  0.3164,  0.2891, -0.7344,  0.1230, -0.8164, -0.7852,  0.0189,  0.3516,  0.8320, -0.1562,  1.5547, -0.7734,  0.8242,  0.5469,  0.2031, -1.0234,  0.1113,  0.3457,  0.5039, -0.8164,  0.8438, -1.0469, -0.4961,  0.4805, -0.2910, -0.1016,
         0.4883, -0.9023,  0.6562,  0.5508, -0.4551,  0.3848,  0.5078,  0.4688, -0.1787,  0.2451,  0.3809,  0.2754,  0.9727, -0.0510,  0.0762,  0.7305, -0.3535, -0.0400, -0.3262, -0.2178, -0.2080,  0.1133,  0.0557, -1.0703,  0.6016,  0.0625, -0.1123,  0.2617, -0.1270,  0.1689, -1.0938, -0.0452],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3984, -0.1885,  0.0801,  0.5898, -0.1934, -0.5508,  0.1484,  0.0067,  0.2090,  0.0544, -0.5312,  0.6836,  0.1514,  0.0097],
        [ 0.0000, -0.3555, -0.2246,  0.5312,  0.1309, -0.6992,  0.2539,  0.4473, -0.2812, -0.2617,  0.1543, -0.0815,  0.1206, -0.1445,  0.2275],
        [ 0.0000, -0.0771, -0.2168,  0.2314, -0.2402, -0.6094, -0.0952,  0.1011, -0.0732, -0.3164, -0.2090, -0.5508,  0.2129, -0.3281, -0.1475],
        [ 0.0000,  0.1924,  0.0339,  0.0623,  0.0378,  0.0591,  0.0515, -0.1357,  0.0747,  0.0850,  0.1133, -0.0757,  0.0264,  0.0913,  0.2949],
        [ 0.0000, -0.0254,  0.4141,  0.0938,  0.0167,  0.3262,  0.7773,  0.2539, -0.0601, -0.0874,  0.2441,  0.4316, -0.1357, -0.1279,  0.6250],
        [ 0.0000, -0.4766, -0.3730,  0.4805, -0.3359,  0.0092,  0.3086,  0.0688, -0.2275, -0.2715,  0.1787,  0.0461,  0.3516, -0.1113,  0.4277],
        [ 0.0000,  0.2236,  0.1416,  0.0339,  0.3008, -0.0583, -0.3418,  0.1719, -0.0605, -0.3379,  0.0168, -0.1035,  0.0801,  0.1689, -0.0515],
        [ 0.0000, -0.2285, -0.0640,  0.0476,  0.4492,  0.0374, -0.3418, -0.5195, -0.7227,  0.2773, -0.1572, -0.4531, -0.1299, -0.1602, -0.2617],
        [ 0.0000, -0.4258, -0.3184, -0.0635, -0.2109,  0.3145,  0.0732,  0.4629, -0.5898,  0.3242, -0.4902, -0.0215, -0.3594, -0.1367, -0.2383],
        [ 0.0000,  0.4395,  0.0835,  0.0339,  0.4473, -0.1113, -0.2793,  0.2988, -0.1348,  0.3125,  0.2539, -0.3809,  0.9961,  0.1455,  0.7422],
        [ 0.0000, -0.1523, -0.2676,  0.4688, -0.1641, -0.0552, -0.1245,  0.4609,  0.2598,  0.0481, -0.1309, -0.0356,  0.4258,  0.0238,  0.1079],
        [ 0.0000,  0.0996,  0.2441, -0.0273, -0.0635, -0.2480,  0.3965,  0.1299, -0.3633, -0.3711, -0.0596,  0.0552,  0.0591, -0.1855, -0.1196],
        [ 0.0000, -0.5117, -0.1787,  0.4648,  0.5430,  0.2109,  0.3027, -0.3398, -0.2207,  0.2041, -0.1523, -0.2236,  0.2412, -0.1621, -0.0791],
        [ 0.0000,  0.2266, -0.0229,  0.3008,  0.4258,  0.1309,  0.3242, -0.3223, -0.1553,  0.2471,  0.0938,  0.0544,  0.4766,  0.0659, -0.2520]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4969],
        [0.3415],
        [0.2505],
        [0.2069],
        [0.1568],
        [0.1392],
        [0.1200],
        [0.1155],
        [0.0993],
        [0.0843],
        [0.0781],
        [0.0741],
        [0.0718],
        [0.0669]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5664, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.1816, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2393, 0.2451, 0.2910, 0.2236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.2129, 0.2490, 0.1777, 0.1699, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1426, 0.0889, 0.3184, 0.1631, 0.1260, 0.1611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.1025, 0.1094, 0.1719, 0.1108, 0.1875, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.0884, 0.1543, 0.1455, 0.1855, 0.0732, 0.1206, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1104, 0.0791, 0.1709, 0.1064, 0.1309, 0.1118, 0.0771, 0.1406, 0.0728, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.0688, 0.1436, 0.0986, 0.1289, 0.1206, 0.0732, 0.1006, 0.1182, 0.0762, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.1055, 0.1338, 0.0723, 0.0688, 0.0806, 0.0771, 0.1250, 0.0439, 0.0894, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.0903, 0.1328, 0.0669, 0.0547, 0.0728, 0.0596, 0.0879, 0.0933, 0.0654, 0.0674, 0.1260, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.0605, 0.1543, 0.0464, 0.0737, 0.0481, 0.0894, 0.0767, 0.0693, 0.0854, 0.0586, 0.1128, 0.0613, 0.0000, 0.0000],
        [0.0598, 0.0461, 0.0703, 0.0986, 0.0703, 0.0598, 0.0762, 0.0698, 0.0771, 0.0850, 0.0425, 0.0562, 0.0996, 0.0884, 0.0000],
        [0.0645, 0.0442, 0.0737, 0.0591, 0.0947, 0.0591, 0.0481, 0.0649, 0.0459, 0.0708, 0.0889, 0.0479, 0.1157, 0.0654, 0.0576]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0021, -0.0174,  0.0154,  ...,  0.0021,  0.0037, -0.0072],
        [-0.0340,  0.0272,  0.0092,  ...,  0.0072, -0.0196, -0.0027],
        [ 0.0109,  0.0097,  0.0152,  ..., -0.0068, -0.0156,  0.0031],
        ...,
        [-0.0217, -0.0194,  0.0088,  ..., -0.0052,  0.0005, -0.0116],
        [ 0.0083, -0.0273, -0.0183,  ...,  0.0110,  0.0120, -0.0098],
        [-0.0020, -0.0101,  0.0143,  ..., -0.0108, -0.0044,  0.0013]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3145, -0.4922,  0.2578, -0.3242, -1.0312,  0.1982, -0.8633, -0.2119, -0.8555,  0.3242, -0.6367,  1.0078, -0.2871,  0.3945, -0.5781,  0.5781,  0.2559,  0.8945, -0.0781,  0.6250,  1.2969,  0.1099, -0.2207, -0.4727, -0.5430,  0.1226,  0.3867,  0.2539, -0.2695, -0.2393,  0.2227,  0.3105,
        -0.8203, -0.0615, -0.1777,  0.3496,  0.5938,  0.6328, -0.2451,  0.2383,  0.1533, -0.2002, -0.3281, -0.1084, -0.0203,  1.0938,  1.0938, -0.2988,  0.1729,  0.1934, -0.7539, -0.2891,  0.5625, -0.5156, -0.2383, -0.2754,  0.2305,  0.1328, -0.5859, -0.1895, -0.3613,  0.4570,  0.1836, -0.2715],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0030, -0.0198,  ...,  0.0272, -0.0121,  0.0361],
        [ 0.0046, -0.0376,  0.0063,  ...,  0.0378, -0.0272,  0.0257],
        [-0.0089, -0.0121,  0.0136,  ..., -0.0108, -0.0131,  0.0097],
        ...,
        [ 0.0038,  0.0200, -0.0205,  ...,  0.0277,  0.0132,  0.0228],
        [ 0.0209,  0.0092,  0.0090,  ...,  0.0478, -0.0132, -0.0005],
        [ 0.0309, -0.0271, -0.0038,  ...,  0.0037, -0.0018,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1289,  0.3379,  0.0294, -0.6250,  0.0430,  0.5508,  0.1982, -0.0757, -0.4785,  0.0598,  0.7461, -0.8398, -0.2793,  0.2617, -0.6719, -0.4844,  1.0312,  0.6719, -0.2324,  0.4375,  0.2139, -0.0830,  0.0422,  0.4961, -0.2041, -0.0172,  0.3535, -0.3145, -0.4531,  0.1914,  0.0845, -0.3770,
         0.5039, -0.0806,  0.4766, -0.4121, -0.8242,  0.9062, -0.1299,  0.0933, -0.6484,  0.3555, -0.9102, -0.7188,  0.4941, -0.3203,  0.1982, -0.6484, -0.8320, -0.2930,  0.2637,  0.4785,  0.8125,  0.6484, -0.3457, -0.5508,  0.8945, -0.3320,  1.5781,  0.1748,  0.5938,  0.3340, -0.7188,  0.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.2715,      0.6133,     -0.3301,      0.3047,      0.2695,     -0.3359,      0.6406,     -0.3145,      0.3887,     -0.1113,      0.2051,      0.4688,     -0.2656,      0.0151],
        [     0.0000,     -0.4824,      0.5781,     -0.3691,     -0.3438,     -0.7266,     -0.1035,      0.1030,     -0.0510,     -0.2949,     -0.1992,      0.2188,     -0.0569,      0.0452,     -0.1895],
        [     0.0000,      0.0253,      0.1982,     -0.0684,     -0.1934,     -0.3145,      0.2129,      0.1426,     -0.3789,     -0.1650,     -0.6367,      0.0302,      0.1953,     -0.6133,     -0.3398],
        [     0.0000,      0.1157,      0.2715,     -0.0659,     -0.1108,      0.0786,      0.1484,     -0.1895,      0.2871,      0.0928,     -0.2070,      0.1279,      0.7539,     -0.0579,      0.1602],
        [     0.0000,     -0.4746,      0.8008,      0.1357,     -0.1270,      0.1235,      0.2266,      0.4688,      0.3535,      0.6055,     -0.4844,      0.4180,      0.3477,      0.5273,      0.6328],
        [     0.0000,     -0.2949,     -0.2314,      0.2217,     -0.2168,      0.3086,      0.2637,     -0.0977,      0.2656,     -0.2637,     -0.2344,     -0.0981,      0.5469,     -0.0894,     -0.1953],
        [     0.0000,     -0.0452,      0.5078,      0.4531,      0.6953,     -0.2373,      0.2617,      0.4102,      0.1216,     -0.3125,      0.2598,      0.1172,      0.2578,     -0.1514,     -0.0291],
        [     0.0000,     -0.3301,      0.4375,     -0.0344,      0.1729,      0.0165,     -0.3574,      0.2471,     -0.4121,     -0.1982,     -0.8945,     -0.5938,      0.1074,     -0.7539,     -0.2871],
        [     0.0000,     -0.0342,      0.6953,      0.3223,      0.5898,      0.5234,      0.0272,      0.3457,      0.5039,      0.0649,     -0.4121,      0.4961,      0.5312,      0.1406,     -0.0972],
        [     0.0000,      0.3086,      0.5430,     -0.0698,     -0.1196,      0.0381,     -0.0040,      0.4785,     -0.5664,      0.1416,      0.4922,      0.1787,      0.5938,     -1.1406,     -0.1021],
        [     0.0000,      0.0776,      0.4688,     -0.2197,     -0.4219,     -0.1367,     -0.3379,      0.0508,      0.1123,     -0.2412,     -0.2168,      0.4082,      0.4746,     -0.3867,     -0.2363],
        [     0.0000,     -0.0374,      0.8984,     -0.3047,      0.1553,     -0.2695,      0.3516,      0.1973,      0.0962,      0.3047,     -0.0713,      0.5859,     -0.0270,      0.4609,      0.0234],
        [     0.0000,     -0.2598,      0.1621,      0.5000,      0.1602,     -0.0005,      0.2402,      0.1543,      0.2520,      0.3535,     -0.3438,     -0.0620,      0.5078,      0.3887,     -0.1338],
        [     0.0000,     -0.3789,      0.1299,     -0.0884,      0.3828,     -0.0869,     -0.2969,      0.0031,     -0.3438,      0.0923,      0.3223,     -0.3008,      0.5820,      0.0120,     -0.1157]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5146],
        [0.3200],
        [0.2472],
        [0.2012],
        [0.1584],
        [0.1422],
        [0.1195],
        [0.1149],
        [0.0949],
        [0.0909],
        [0.0787],
        [0.0699],
        [0.0717],
        [0.0642]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5547, 0.4453, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.3125, 0.3164, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2383, 0.1826, 0.1953, 0.3848, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2158, 0.1973, 0.1602, 0.2383, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.1631, 0.1602, 0.1787, 0.1738, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.1504, 0.1250, 0.1592, 0.1699, 0.1338, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1104, 0.1206, 0.1641, 0.1211, 0.1475, 0.0962, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.1143, 0.0977, 0.1406, 0.1245, 0.1367, 0.0981, 0.0869, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.1250, 0.0884, 0.0991, 0.1128, 0.1436, 0.0791, 0.0835, 0.0918, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.1074, 0.0767, 0.1021, 0.1064, 0.0859, 0.0830, 0.0791, 0.0977, 0.0894, 0.0576, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.1138, 0.0947, 0.0889, 0.0977, 0.1035, 0.0708, 0.0747, 0.0693, 0.0854, 0.0491, 0.0796, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.0518, 0.0718, 0.1084, 0.0801, 0.0786, 0.0771, 0.0645, 0.0718, 0.0693, 0.0659, 0.0640, 0.1167, 0.0000, 0.0000],
        [0.0654, 0.0718, 0.0640, 0.0933, 0.0869, 0.0625, 0.0540, 0.0571, 0.0542, 0.0664, 0.0535, 0.0559, 0.1211, 0.0938, 0.0000],
        [0.0635, 0.0579, 0.0527, 0.0781, 0.0728, 0.0664, 0.0513, 0.0618, 0.0598, 0.0591, 0.0437, 0.0518, 0.1348, 0.0845, 0.0618]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0021, -0.0174,  0.0154,  ...,  0.0021,  0.0037, -0.0072],
        [-0.0340,  0.0272,  0.0092,  ...,  0.0072, -0.0196, -0.0027],
        [ 0.0109,  0.0097,  0.0152,  ..., -0.0068, -0.0156,  0.0031],
        ...,
        [-0.0217, -0.0194,  0.0088,  ..., -0.0052,  0.0005, -0.0116],
        [ 0.0083, -0.0273, -0.0183,  ...,  0.0110,  0.0120, -0.0098],
        [-0.0020, -0.0101,  0.0143,  ..., -0.0108, -0.0044,  0.0013]], device='cuda:0', requires_grad=True)
K: tensor([-0.7070, -0.0036,  0.7969,  0.6016, -0.4512, -1.1406, -0.8438,  0.6641, -0.9062, -0.6602, -1.2109,  0.6602,  0.2061, -0.6133, -0.9609, -0.7188,  0.0459,  0.2227, -0.1270, -0.1377, -0.5312,  0.4551,  0.9961,  0.6641, -0.1279,  0.5312, -0.7695,  0.3613, -0.6172,  1.1250,  0.0747,  0.0067,
         0.3105, -0.1133, -0.6992, -0.4629, -0.0732,  0.1807, -0.0557,  0.6172, -0.0405,  1.0547, -0.2383, -0.0554, -0.1089, -0.3613,  0.3457,  0.4414, -0.7344, -0.1245,  0.4512,  0.2451,  0.8203, -0.0879,  0.7500,  0.2236, -0.0371, -0.9102,  0.1953,  0.0486, -0.1943, -0.4512,  0.5000,  0.6797],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0030, -0.0198,  ...,  0.0272, -0.0121,  0.0361],
        [ 0.0046, -0.0376,  0.0063,  ...,  0.0378, -0.0272,  0.0257],
        [-0.0089, -0.0121,  0.0136,  ..., -0.0108, -0.0131,  0.0097],
        ...,
        [ 0.0038,  0.0200, -0.0205,  ...,  0.0277,  0.0132,  0.0228],
        [ 0.0209,  0.0092,  0.0090,  ...,  0.0478, -0.0132, -0.0005],
        [ 0.0309, -0.0271, -0.0038,  ...,  0.0037, -0.0018,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1699,  0.0991, -0.3242, -0.0330,  1.2266,  0.5977,  1.1016,  1.2344, -0.4121,  0.4297, -0.1846,  0.4043,  0.4473,  0.3242,  0.1934, -1.0312,  1.0469, -0.5820, -0.5508,  0.4961,  0.4121,  0.8086, -0.2930, -1.1641, -0.2139, -0.0396, -0.4590, -0.4062,  0.0354, -0.2793, -0.3164, -0.1406,
         0.6602,  0.5234,  0.4375, -1.2188, -0.4414,  1.4062,  0.4355,  0.0469, -0.2090,  0.2695,  0.3906, -0.1396,  0.4980,  0.1826,  0.5547,  1.2734, -0.0332, -0.1338, -0.1494,  0.5273, -0.3672, -0.0608,  0.1758, -0.2197,  0.3418,  0.7852, -0.0311,  0.5703,  0.2197, -0.2773,  1.2109,  0.3535],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.2188, -0.0801,  0.1641, -0.0500,  0.0996,  0.0030, -0.2246, -0.1030, -0.1118, -0.3418, -0.2832,  0.4395,  0.2773,  0.0234],
        [ 0.0000, -0.1689, -0.1553,  0.1787,  0.2344, -0.1709, -0.2637, -0.4238, -0.0474,  0.1011, -0.2520, -0.2441,  0.3516,  0.0439,  0.3223],
        [ 0.0000, -0.2676, -0.1992,  0.4766, -0.0603, -0.1426,  0.0674, -0.3809, -0.1475,  0.0332, -0.4141, -0.1855,  0.2324, -0.0481,  0.0762],
        [ 0.0000, -0.0903, -0.2988,  0.0986, -0.1406, -0.1592, -0.2891, -0.3535, -0.3281, -0.3105, -0.4473, -0.4336,  0.2676,  0.1807, -0.1328],
        [ 0.0000, -0.0344, -0.0474,  0.0601,  0.0327, -0.0786, -0.2441, -0.3086, -0.0452, -0.1484, -0.7305, -0.1064,  0.3652,  0.0500, -0.0859],
        [ 0.0000, -0.0850, -0.2715, -0.0287,  0.0361, -0.2021, -0.5117, -0.3398, -0.2695, -0.2793, -0.5742, -0.4648,  0.2637,  0.0012, -0.2637],
        [ 0.0000, -0.2295, -0.1406,  0.1670, -0.1367,  0.0625, -0.3652, -0.3223, -0.3145, -0.2373, -0.4883, -0.3359,  0.4180,  0.1670, -0.1865],
        [ 0.0000,  0.1226, -0.0339,  0.3340,  0.2100,  0.2988, -0.0312, -0.1504, -0.0079,  0.0212, -0.5703, -0.2373,  0.8516,  0.5859,  0.0532],
        [ 0.0000,  0.3398, -0.0055,  0.1074,  0.2363,  0.4824, -0.1167, -0.0640,  0.0312, -0.0056, -0.5273,  0.0659,  0.8594,  0.4883,  0.1040],
        [ 0.0000, -0.0684, -0.4062, -0.1221, -0.0767, -0.2930, -0.3281, -0.3750, -0.1650, -0.2559, -0.6914, -0.4551,  0.0093,  0.1230, -0.0160],
        [ 0.0000,  0.4551,  0.2715,  0.2109,  0.3027,  0.3613, -0.0182,  0.0339, -0.0374,  0.1670, -0.3828,  0.1006,  0.7852,  0.5977,  0.2578],
        [ 0.0000, -0.4258, -0.0981,  0.3125,  0.0102, -0.0109, -0.0287, -0.2051, -0.0977, -0.1338, -0.1855, -0.2158,  0.3848,  0.1494,  0.1152],
        [ 0.0000,  0.0928, -0.0217,  0.3535,  0.2812, -0.0459, -0.1934, -0.1367, -0.1885,  0.0122, -0.2012, -0.1562,  0.6133,  0.3613,  0.4023],
        [ 0.0000, -0.0898, -0.1846,  0.2119,  0.1387,  0.0442, -0.2139, -0.0266, -0.0576, -0.0708, -0.3711, -0.2021,  0.7539,  0.2871, -0.0262]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4884],
        [0.3345],
        [0.2692],
        [0.2086],
        [0.1754],
        [0.1569],
        [0.1322],
        [0.1197],
        [0.1033],
        [0.0914],
        [0.0871],
        [0.0828],
        [0.0744],
        [0.0705]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.4844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3516, 0.3398, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2305, 0.2021, 0.1816, 0.3867, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1992, 0.1963, 0.1670, 0.2285, 0.2090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1797, 0.1582, 0.1621, 0.1826, 0.1689, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.1602, 0.1318, 0.1592, 0.1777, 0.1172, 0.0889, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.1011, 0.1123, 0.1719, 0.1406, 0.0972, 0.1162, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.1230, 0.1123, 0.1553, 0.1235, 0.1060, 0.0879, 0.0962, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.1177, 0.1201, 0.0962, 0.1309, 0.0864, 0.0796, 0.0879, 0.1108, 0.0708, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.0952, 0.0845, 0.1021, 0.1162, 0.0635, 0.0771, 0.0923, 0.1021, 0.0806, 0.0708, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.0830, 0.0972, 0.0991, 0.1084, 0.0713, 0.0737, 0.0786, 0.0830, 0.0625, 0.0771, 0.0806, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0820, 0.0613, 0.1104, 0.0811, 0.0640, 0.0732, 0.0718, 0.0806, 0.0608, 0.0576, 0.0903, 0.0923, 0.0000, 0.0000],
        [0.0796, 0.0615, 0.0762, 0.0894, 0.0879, 0.0615, 0.0562, 0.0610, 0.0610, 0.0713, 0.0801, 0.0659, 0.0825, 0.0659, 0.0000],
        [0.0603, 0.0679, 0.0562, 0.0923, 0.0840, 0.0737, 0.0596, 0.0596, 0.0674, 0.0471, 0.0488, 0.0583, 0.0928, 0.0693, 0.0630]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0021, -0.0174,  0.0154,  ...,  0.0021,  0.0037, -0.0072],
        [-0.0340,  0.0272,  0.0092,  ...,  0.0072, -0.0196, -0.0027],
        [ 0.0109,  0.0097,  0.0152,  ..., -0.0068, -0.0156,  0.0031],
        ...,
        [-0.0217, -0.0194,  0.0088,  ..., -0.0052,  0.0005, -0.0116],
        [ 0.0083, -0.0273, -0.0183,  ...,  0.0110,  0.0120, -0.0098],
        [-0.0020, -0.0101,  0.0143,  ..., -0.0108, -0.0044,  0.0013]], device='cuda:0', requires_grad=True)
K: tensor([-0.6133,  0.2344,  0.2793,  0.2852, -0.3828, -1.3594, -0.6797,  0.9922, -0.3281, -0.5117, -1.0938, -0.0074,  0.6445, -0.8750, -1.2500, -1.2188, -0.4238,  0.9023, -0.4082, -0.1123, -0.2539,  0.2275,  0.9336,  0.2559, -0.2910,  0.0942, -0.1465,  0.0962, -0.3418,  0.8047,  0.2021,  0.2754,
        -0.0742, -0.4727, -0.6094, -0.1025, -0.1021, -0.2539, -0.4297,  0.4922,  0.4746,  0.5391, -0.0991, -0.2520,  0.0437,  0.1748,  0.2617,  0.1475,  0.0579,  0.2402,  0.1738, -0.1895,  0.5117, -0.3340,  0.5742,  0.2578, -0.0168, -0.7070,  0.0461, -0.6836, -0.2471, -0.3496,  0.5742,  0.4668],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0030, -0.0198,  ...,  0.0272, -0.0121,  0.0361],
        [ 0.0046, -0.0376,  0.0063,  ...,  0.0378, -0.0272,  0.0257],
        [-0.0089, -0.0121,  0.0136,  ..., -0.0108, -0.0131,  0.0097],
        ...,
        [ 0.0038,  0.0200, -0.0205,  ...,  0.0277,  0.0132,  0.0228],
        [ 0.0209,  0.0092,  0.0090,  ...,  0.0478, -0.0132, -0.0005],
        [ 0.0309, -0.0271, -0.0038,  ...,  0.0037, -0.0018,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1992,  0.5820, -0.2695,  0.0942,  1.3281,  0.4570,  1.0156,  1.2109, -0.6328,  0.2393, -0.6094,  0.0825,  0.5938,  0.3809,  0.1416, -1.0312,  0.9844, -0.5039, -0.4785,  0.3730,  0.1953,  0.5977, -0.2432, -0.4824, -0.5352, -0.0391,  0.2021, -0.8125, -0.3730, -0.1455,  0.2852,  0.2852,
         0.5703, -0.2402,  0.3730, -1.1953, -0.3926,  1.1406,  0.0791,  0.2119,  0.1221,  0.3555,  0.4512, -0.0459, -0.1279,  0.4082,  0.4180,  0.7773,  0.1660, -0.0320, -0.4512,  0.0767, -0.3301,  0.1924,  0.5469, -0.0048,  0.3711,  0.6445, -0.5586,  0.6680,  0.2559, -0.0315,  0.7773,  0.4707],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0625, -0.0874,  0.1128, -0.0276, -0.1221, -0.0050, -0.1660, -0.3164, -0.1177, -0.0327, -0.0476,  0.3555, -0.1172, -0.1465],
        [ 0.0000, -0.0349, -0.1377,  0.3418,  0.2910, -0.2090, -0.1436, -0.2148, -0.1328, -0.1680, -0.1738, -0.0061,  0.0165, -0.1934,  0.0913],
        [ 0.0000, -0.1279, -0.2383,  0.5156, -0.0219, -0.1748,  0.0146, -0.1777, -0.1631, -0.1680, -0.3359, -0.1191,  0.1221, -0.1494, -0.1689],
        [ 0.0000, -0.0176, -0.1797,  0.1367,  0.0483, -0.2393, -0.3066, -0.2578, -0.1777, -0.3438, -0.1128, -0.0801,  0.1040, -0.1060, -0.0645],
        [ 0.0000, -0.1270, -0.1079,  0.0143, -0.0659, -0.1963, -0.5234, -0.3613, -0.1650, -0.5156, -0.5234, -0.2012, -0.0176, -0.0903, -0.1855],
        [ 0.0000, -0.0303, -0.2207, -0.0347,  0.0786, -0.3379, -0.6211, -0.2793, -0.1270, -0.3848, -0.4746, -0.1660, -0.0781, -0.4492, -0.1094],
        [ 0.0000, -0.3887, -0.2852,  0.1426, -0.0608, -0.4277, -0.2500, -0.2910, -0.2617, -0.2344, -0.2041, -0.0569,  0.0559, -0.2148, -0.2471],
        [ 0.0000,  0.1836,  0.0908,  0.4160,  0.1865,  0.0322, -0.1553, -0.0640, -0.0957, -0.1973, -0.2051, -0.0830,  0.2422,  0.1807, -0.1011],
        [ 0.0000,  0.1582,  0.1787, -0.0452,  0.2617, -0.1484, -0.2354, -0.1328,  0.0986, -0.3516, -0.4180, -0.0762,  0.1826,  0.2793,  0.2148],
        [ 0.0000, -0.1914, -0.3105, -0.1206,  0.0064, -0.6016, -0.4023, -0.2217, -0.1235, -0.3574, -0.4863, -0.1123, -0.0840,  0.1318,  0.0559],
        [ 0.0000, -0.0143,  0.1416,  0.1631,  0.2520, -0.1650, -0.1318, -0.0684, -0.0182, -0.2969, -0.0879, -0.0474,  0.3125,  0.3145, -0.0032],
        [ 0.0000,  0.0913, -0.2012,  0.3848,  0.0757, -0.1562, -0.0260, -0.0444,  0.0684, -0.2090, -0.2656,  0.1836,  0.2051,  0.1099, -0.0869],
        [ 0.0000, -0.2578, -0.0452,  0.1167,  0.1001, -0.2559, -0.3496, -0.2656, -0.2637, -0.1074,  0.0035, -0.1875,  0.0349, -0.1865, -0.1128],
        [ 0.0000,  0.1172, -0.0684,  0.4277,  0.3359,  0.2002, -0.0087, -0.0107,  0.1099, -0.2432, -0.2080, -0.0322,  0.4316,  0.1416,  0.0483]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4788],
        [0.3374],
        [0.2633],
        [0.2067],
        [0.1784],
        [0.1487],
        [0.1333],
        [0.1174],
        [0.1064],
        [0.0901],
        [0.0862],
        [0.0845],
        [0.0748],
        [0.0675]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( sadness:0.0001 MEN:0.0002 see:0.0002 civilization:0.0002 debugger:0.0002oters:0.0002 their:0.0002 fodder:0.0002)
 fodder
------
		( MEN:0.0002 see:0.0002 civilization:0.0002 debugger:0.0002oters:0.0002 their:0.0002 fodder:0.0002ahar:0.0002)
aharugarifications RUgu bullshit music embarrassingervingthirst beginner avalanche \" 413inders
@ 1 train 10.9969 , allloss: 13.3383, dt: 1722.56ms, fracRes: 0.0064, norm(attn): 0.0315, norm(output): 0.0518, norm(x): 0.0499, norm(y): 0.9984, norm:24.6675, tok/sec: 76091.51, flops:29.65, batch-reuse:1
@ 2 train 10.9898 , allloss: 13.3308, dt: 1105.96ms, fracRes: 0.0064, norm(attn): 0.0315, norm(output): 0.0518, norm(x): 0.0499, norm(y): 0.9984, norm:24.1826, tok/sec: 118514.40, flops:46.17, batch-reuse:1
@ 3 train 10.9839 , allloss: 13.3242, dt: 1113.78ms, fracRes: 0.0064, norm(attn): 0.0315, norm(output): 0.0518, norm(x): 0.0500, norm(y): 0.9984, norm:23.7340, tok/sec: 117682.45, flops:45.85, batch-reuse:1
@ 4 train 10.9677 , allloss: 13.3072, dt: 1120.40ms, fracRes: 0.0064, norm(attn): 0.0315, norm(output): 0.0518, norm(x): 0.0500, norm(y): 0.9984, norm:23.2203, tok/sec: 116987.22, flops:45.58, batch-reuse:1
@ 5 train 10.9559 , allloss: 13.2930, dt: 1122.25ms, fracRes: 0.0064, norm(attn): 0.0315, norm(output): 0.0518, norm(x): 0.0500, norm(y): 0.9984, norm:22.0730, tok/sec: 116793.49, flops:45.50, batch-reuse:1
@ 6 train 10.9491 , allloss: 13.2829, dt: 1124.52ms, fracRes: 0.0064, norm(attn): 0.0315, norm(output): 0.0518, norm(x): 0.0500, norm(y): 0.9984, norm:23.7760, tok/sec: 116558.02, flops:45.41, batch-reuse:1
@ 7 train 10.9226 , allloss: 13.2521, dt: 1123.20ms, fracRes: 0.0064, norm(attn): 0.0315, norm(output): 0.0518, norm(x): 0.0501, norm(y): 0.9984, norm:22.9919, tok/sec: 116695.29, flops:45.46, batch-reuse:1
@ 8 train 10.9014 , allloss: 13.2232, dt: 1134.09ms, fracRes: 0.0064, norm(attn): 0.0315, norm(output): 0.0518, norm(x): 0.0501, norm(y): 0.9984, norm:22.0682, tok/sec: 115574.44, flops:45.03, batch-reuse:1
@ 9 train 10.8742 , allloss: 13.1859, dt: 1134.97ms, fracRes: 0.0064, norm(attn): 0.0317, norm(output): 0.0518, norm(x): 0.0502, norm(y): 0.9984, norm:22.2540, tok/sec: 115485.36, flops:44.99, batch-reuse:1
@ 10 train 10.8472 , allloss: 13.1456, dt: 1120.47ms, fracRes: 0.0064, norm(attn): 0.0327, norm(output): 0.0520, norm(x): 0.0504, norm(y): 0.9985, norm:21.7155, tok/sec: 116979.90, flops:45.58, batch-reuse:1
@ 11 train 10.8255 , allloss: 13.1075, dt: 1131.15ms, fracRes: 0.0064, norm(attn): 0.0330, norm(output): 0.0522, norm(x): 0.0505, norm(y): 0.9985, norm:20.2908, tok/sec: 115874.63, flops:45.14, batch-reuse:1
@ 12 train 10.7839 , allloss: 13.0473, dt: 1132.55ms, fracRes: 0.0065, norm(attn): 0.0332, norm(output): 0.0527, norm(x): 0.0507, norm(y): 0.9985, norm:20.5932, tok/sec: 115731.80, flops:45.09, batch-reuse:1
@ 13 train 10.7674 , allloss: 13.0072, dt: 1131.09ms, fracRes: 0.0065, norm(attn): 0.0334, norm(output): 0.0537, norm(x): 0.0509, norm(y): 0.9985, norm:20.0307, tok/sec: 115880.88, flops:45.15, batch-reuse:1
@ 14 train 10.7291 , allloss: 12.9430, dt: 1135.40ms, fracRes: 0.0065, norm(attn): 0.0347, norm(output): 0.0542, norm(x): 0.0511, norm(y): 0.9985, norm:19.7032, tok/sec: 115441.66, flops:44.98, batch-reuse:1
@ 15 train 10.6951 , allloss: 12.8799, dt: 1134.11ms, fracRes: 0.0065, norm(attn): 0.0349, norm(output): 0.0544, norm(x): 0.0514, norm(y): 0.9985, norm:18.5307, tok/sec: 115572.10, flops:45.03, batch-reuse:1
@ 16 train 10.6700 , allloss: 12.8250, dt: 1136.79ms, fracRes: 0.0065, norm(attn): 0.0354, norm(output): 0.0544, norm(x): 0.0517, norm(y): 0.9985, norm:17.9805, tok/sec: 115299.81, flops:44.92, batch-reuse:1
@ 17 train 10.6344 , allloss: 12.7575, dt: 1139.73ms, fracRes: 0.0065, norm(attn): 0.0366, norm(output): 0.0544, norm(x): 0.0520, norm(y): 0.9986, norm:16.9826, tok/sec: 115002.92, flops:44.81, batch-reuse:1
@ 18 train 10.6136 , allloss: 12.7023, dt: 1142.80ms, fracRes: 0.0066, norm(attn): 0.0369, norm(output): 0.0547, norm(x): 0.0523, norm(y): 0.9986, norm:16.2162, tok/sec: 114694.04, flops:44.68, batch-reuse:1
@ 19 train 10.5680 , allloss: 12.6209, dt: 1130.30ms, fracRes: 0.0066, norm(attn): 0.0376, norm(output): 0.0547, norm(x): 0.0526, norm(y): 0.9986, norm:16.0256, tok/sec: 115962.37, flops:45.18, batch-reuse:1
@ 20 train 10.5467 , allloss: 12.5644, dt: 1144.71ms, fracRes: 0.0066, norm(attn): 0.0386, norm(output): 0.0552, norm(x): 0.0530, norm(y): 0.9986, norm:15.2400, tok/sec: 114502.81, flops:44.61, batch-reuse:1
@ 21 train 10.4978 , allloss: 12.4795, dt: 1129.92ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.0554, norm(x): 0.0534, norm(y): 0.9986, norm:15.1948, tok/sec: 116001.03, flops:45.19, batch-reuse:1
@ 22 train 10.4766 , allloss: 12.4231, dt: 1142.37ms, fracRes: 0.0066, norm(attn): 0.0393, norm(output): 0.0557, norm(x): 0.0538, norm(y): 0.9986, norm:14.6135, tok/sec: 114736.62, flops:44.70, batch-reuse:1
@ 23 train 10.4626 , allloss: 12.3766, dt: 1124.30ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.0557, norm(x): 0.0541, norm(y): 0.9987, norm:13.7898, tok/sec: 116580.64, flops:45.42, batch-reuse:1
@ 24 train 10.4456 , allloss: 12.3277, dt: 1141.71ms, fracRes: 0.0067, norm(attn): 0.0405, norm(output): 0.0579, norm(x): 0.0545, norm(y): 0.9987, norm:13.9686, tok/sec: 114803.23, flops:44.73, batch-reuse:1
@ 25 train 10.3708 , allloss: 12.2234, dt: 1134.67ms, fracRes: 0.0067, norm(attn): 0.0415, norm(output): 0.0583, norm(x): 0.0549, norm(y): 0.9987, norm:13.9151, tok/sec: 115515.21, flops:45.00, batch-reuse:1
@ 26 train 10.3633 , allloss: 12.1888, dt: 1134.41ms, fracRes: 0.0067, norm(attn): 0.0417, norm(output): 0.0583, norm(x): 0.0553, norm(y): 0.9987, norm:12.9042, tok/sec: 115541.96, flops:45.02, batch-reuse:1
@ 27 train 10.3382 , allloss: 12.1390, dt: 1141.04ms, fracRes: 0.0068, norm(attn): 0.0427, norm(output): 0.0583, norm(x): 0.0556, norm(y): 0.9987, norm:12.3761, tok/sec: 114871.09, flops:44.75, batch-reuse:1
@ 28 train 10.3057 , allloss: 12.0831, dt: 1143.89ms, fracRes: 0.0068, norm(attn): 0.0430, norm(output): 0.0586, norm(x): 0.0560, norm(y): 0.9988, norm:12.0808, tok/sec: 114584.22, flops:44.64, batch-reuse:1
@ 29 train 10.2861 , allloss: 12.0416, dt: 1156.22ms, fracRes: 0.0068, norm(attn): 0.0430, norm(output): 0.0588, norm(x): 0.0563, norm(y): 0.9988, norm:11.6862, tok/sec: 113362.05, flops:44.17, batch-reuse:1
@ 30 train 10.2427 , allloss: 11.9788, dt: 1127.50ms, fracRes: 0.0069, norm(attn): 0.0432, norm(output): 0.0593, norm(x): 0.0567, norm(y): 0.9988, norm:11.5492, tok/sec: 116250.42, flops:45.29, batch-reuse:1
@ 31 train 10.2349 , allloss: 11.9534, dt: 1132.06ms, fracRes: 0.0069, norm(attn): 0.0442, norm(output): 0.0593, norm(x): 0.0570, norm(y): 0.9988, norm:11.3151, tok/sec: 115781.53, flops:45.11, batch-reuse:1
@ 32 train 10.2008 , allloss: 11.9039, dt: 1146.00ms, fracRes: 0.0070, norm(attn): 0.0442, norm(output): 0.0593, norm(x): 0.0572, norm(y): 0.9988, norm:11.5099, tok/sec: 114373.96, flops:44.56, batch-reuse:1
@ 33 train 10.1493 , allloss: 11.8387, dt: 1161.04ms, fracRes: 0.0070, norm(attn): 0.0454, norm(output): 0.0596, norm(x): 0.0575, norm(y): 0.9988, norm:11.5160, tok/sec: 112891.65, flops:43.98, batch-reuse:1
@ 34 train 10.1345 , allloss: 11.8125, dt: 1155.24ms, fracRes: 0.0071, norm(attn): 0.0457, norm(output): 0.0596, norm(x): 0.0577, norm(y): 0.9988, norm:11.4291, tok/sec: 113458.48, flops:44.20, batch-reuse:1
@ 35 train 10.1189 , allloss: 11.7850, dt: 1137.96ms, fracRes: 0.0071, norm(attn): 0.0464, norm(output): 0.0608, norm(x): 0.0580, norm(y): 0.9988, norm:11.8038, tok/sec: 115181.68, flops:44.87, batch-reuse:1
@ 36 train 10.0914 , allloss: 11.7494, dt: 1160.61ms, fracRes: 0.0072, norm(attn): 0.0466, norm(output): 0.0615, norm(x): 0.0581, norm(y): 0.9988, norm:12.1882, tok/sec: 112934.18, flops:44.00, batch-reuse:1
@ 37 train 10.0696 , allloss: 11.7173, dt: 1173.19ms, fracRes: 0.0073, norm(attn): 0.0466, norm(output): 0.0618, norm(x): 0.0584, norm(y): 0.9988, norm:12.9550, tok/sec: 111722.50, flops:43.53, batch-reuse:1
@ 38 train 10.0376 , allloss: 11.6768, dt: 1170.17ms, fracRes: 0.0073, norm(attn): 0.0469, norm(output): 0.0618, norm(x): 0.0586, norm(y): 0.9988, norm:14.1502, tok/sec: 112011.46, flops:43.64, batch-reuse:1
@ 39 train 10.0347 , allloss: 11.6636, dt: 1146.00ms, fracRes: 0.0074, norm(attn): 0.0471, norm(output): 0.0618, norm(x): 0.0587, norm(y): 0.9988, norm:14.9995, tok/sec: 114373.51, flops:44.56, batch-reuse:1
@ 40 train 9.9861 , allloss: 11.6060, dt: 1164.14ms, fracRes: 0.0075, norm(attn): 0.0471, norm(output): 0.0623, norm(x): 0.0589, norm(y): 0.9988, norm:16.2273, tok/sec: 112591.66, flops:43.87, batch-reuse:1
@ 41 train 9.9746 , allloss: 11.5850, dt: 1177.07ms, fracRes: 0.0076, norm(attn): 0.0474, norm(output): 0.0623, norm(x): 0.0591, norm(y): 0.9989, norm:16.8590, tok/sec: 111354.45, flops:43.38, batch-reuse:1
@ 42 train 9.9548 , allloss: 11.5567, dt: 1154.52ms, fracRes: 0.0077, norm(attn): 0.0481, norm(output): 0.0623, norm(x): 0.0593, norm(y): 0.9989, norm:17.4060, tok/sec: 113529.78, flops:44.23, batch-reuse:1
@ 43 train 9.9519 , allloss: 11.5444, dt: 1145.21ms, fracRes: 0.0078, norm(attn): 0.0483, norm(output): 0.0623, norm(x): 0.0595, norm(y): 0.9989, norm:17.5010, tok/sec: 114452.51, flops:44.59, batch-reuse:1
@ 44 train 9.9483 , allloss: 11.5315, dt: 1150.42ms, fracRes: 0.0079, norm(attn): 0.0493, norm(output): 0.0623, norm(x): 0.0597, norm(y): 0.9989, norm:17.1872, tok/sec: 113933.57, flops:44.39, batch-reuse:1
@ 45 train 9.9158 , allloss: 11.4921, dt: 1146.05ms, fracRes: 0.0080, norm(attn): 0.0498, norm(output): 0.0623, norm(x): 0.0598, norm(y): 0.9989, norm:16.9020, tok/sec: 114368.56, flops:44.56, batch-reuse:1
@ 46 train 9.8828 , allloss: 11.4523, dt: 1141.44ms, fracRes: 0.0081, norm(attn): 0.0503, norm(output): 0.0623, norm(x): 0.0599, norm(y): 0.9989, norm:16.3607, tok/sec: 114830.04, flops:44.74, batch-reuse:1
@ 47 train 9.8514 , allloss: 11.4165, dt: 1159.26ms, fracRes: 0.0082, norm(attn): 0.0505, norm(output): 0.0625, norm(x): 0.0600, norm(y): 0.9989, norm:15.8403, tok/sec: 113065.58, flops:44.05, batch-reuse:1
@ 48 train 9.8539 , allloss: 11.4156, dt: 1157.17ms, fracRes: 0.0083, norm(attn): 0.0508, norm(output): 0.0625, norm(x): 0.0601, norm(y): 0.9989, norm:15.3969, tok/sec: 113269.32, flops:44.13, batch-reuse:1
@ 49 train 9.8411 , allloss: 11.4005, dt: 1144.84ms, fracRes: 0.0083, norm(attn): 0.0510, norm(output): 0.0625, norm(x): 0.0601, norm(y): 0.9989, norm:15.1542, tok/sec: 114489.81, flops:44.61, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5703, 0.4297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3750, 0.3027, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3086, 0.2412, 0.2256, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.1680, 0.1709, 0.1729, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.1270, 0.2383, 0.1465, 0.2031, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.1299, 0.1299, 0.1904, 0.1396, 0.1436, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.0947, 0.1157, 0.0801, 0.1504, 0.1138, 0.1172, 0.2256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.0771, 0.0884, 0.1147, 0.1094, 0.0942, 0.1396, 0.1436, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.0762, 0.1055, 0.0928, 0.0806, 0.1162, 0.1021, 0.1011, 0.1021, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.0635, 0.0457, 0.1680, 0.1582, 0.0840, 0.0581, 0.0952, 0.0601, 0.0874, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0742, 0.0684, 0.0791, 0.0554, 0.0923, 0.0850, 0.1201, 0.1050, 0.0703, 0.1187, 0.0586, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.0640, 0.0610, 0.0674, 0.0752, 0.0801, 0.1406, 0.0767, 0.1045, 0.0659, 0.0518, 0.0776, 0.0530, 0.0000, 0.0000],
        [0.0723, 0.0435, 0.0586, 0.0723, 0.0625, 0.0537, 0.0825, 0.0874, 0.0938, 0.0659, 0.0903, 0.0850, 0.0625, 0.0693, 0.0000],
        [0.0623, 0.0615, 0.0898, 0.0618, 0.0820, 0.0525, 0.0757, 0.0723, 0.0869, 0.0610, 0.0835, 0.0317, 0.0757, 0.0557, 0.0474]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0022, -0.0175,  0.0153,  ...,  0.0023,  0.0035, -0.0073],
        [-0.0340,  0.0271,  0.0091,  ...,  0.0072, -0.0196, -0.0028],
        [ 0.0109,  0.0095,  0.0151,  ..., -0.0066, -0.0158,  0.0029],
        ...,
        [-0.0217, -0.0196,  0.0087,  ..., -0.0050,  0.0006, -0.0118],
        [ 0.0083, -0.0272, -0.0181,  ...,  0.0110,  0.0118, -0.0098],
        [-0.0019, -0.0100,  0.0144,  ..., -0.0108, -0.0046,  0.0012]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0286,  0.4297, -0.5586,  0.3926,  0.2354, -0.5469, -0.5898,  0.4043,  0.2119, -0.2227,  0.1777, -1.0312,  0.0996,  0.0864,  0.8281, -0.1602,  0.0037,  1.0312, -0.1504, -1.1250,  0.2109,  0.5312, -0.2168,  0.4609,  0.8984, -0.7031,  0.3125,  0.3926, -0.8906,  0.0869, -0.4629,  0.3320,
         0.0835, -0.2832, -0.4629,  0.5469, -0.8594,  0.0259,  1.1406, -0.7969, -0.0366, -0.0591, -0.9609, -0.6328, -0.0771,  1.3359, -0.0737,  0.6289, -0.2158, -0.5273, -0.3281,  0.4785, -0.8555,  0.6523, -0.6719,  0.0596,  0.1924,  0.1128,  0.4102,  0.9297, -0.0771,  0.4277, -0.5430,  0.3535],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0031, -0.0197,  ...,  0.0270, -0.0120,  0.0363],
        [ 0.0044, -0.0376,  0.0063,  ...,  0.0379, -0.0273,  0.0255],
        [-0.0089, -0.0120,  0.0135,  ..., -0.0110, -0.0129,  0.0098],
        ...,
        [ 0.0039,  0.0201, -0.0205,  ...,  0.0275,  0.0133,  0.0229],
        [ 0.0210,  0.0093,  0.0092,  ...,  0.0476, -0.0132, -0.0003],
        [ 0.0307, -0.0270, -0.0040,  ...,  0.0035, -0.0016,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8906,  0.2539, -0.2256,  0.3809, -0.3125,  0.1738,  0.0991, -1.0000, -0.0713,  0.3887, -0.6328,  0.2109, -0.0996, -0.2598,  0.4316, -0.5938, -0.4082,  0.4648,  0.0479,  1.2188,  0.5938,  0.7383,  0.2012, -0.1367,  0.0361,  0.2490,  0.2197,  0.2656, -0.0957, -0.0508,  0.2041, -0.2812,
         0.7773, -0.0032,  0.4961,  0.2715,  0.2637,  0.0747,  0.4355,  0.1543,  0.3750, -0.0157,  0.2969,  1.0234, -0.2773, -0.4746, -0.2480,  0.9258,  1.0625, -0.0630,  0.2295,  0.0178,  0.0027, -0.6562, -0.2539,  0.1436,  0.0850, -1.4453,  0.6992, -0.4863,  0.4199,  0.9180, -0.1543, -0.5156],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.2812,     -0.1514,      0.0055,      0.2969,     -0.3848,      0.1797,      0.1011,     -0.0723,      0.1826,     -0.0933,     -0.1973,     -0.1602,     -0.1226,      0.2812],
        [     0.0000,     -0.2158,     -0.1465,      0.1167,      0.0471,     -0.2578,      0.2480,      0.2256,      0.0972,     -0.0140,      0.0645,      0.1191,     -0.1494,      0.0422,     -0.2383],
        [     0.0000,     -0.2441,     -0.3105,     -0.3145,     -0.3086,      0.0391,      0.0518,      0.1963,     -0.3398,     -0.1113,     -0.3457,      0.2402,      0.1475,      0.1670,      0.4160],
        [     0.0000,     -0.1982,     -0.1797,     -0.1680,      0.3242,     -0.0559,      0.1504,     -0.0752,     -0.1177,     -0.1216,     -0.5547,     -0.0820,     -0.6562,      0.1367,      0.6016],
        [     0.0000,     -0.2246,      0.4082,     -0.0825,      0.2461,     -0.2266,     -0.2773,      0.0400,     -0.2715,      0.3281,     -0.2324,     -0.0452,      0.3223,     -0.0200,      0.0211],
        [     0.0000,      0.0586,      0.0598,      0.4414,      0.1299,      0.1592,      0.1582,     -0.0339,     -0.2734,      0.2773,      0.5820,     -0.1138,      0.0234,      0.0201,     -0.2480],
        [     0.0000,     -0.0879,      0.1099,     -0.2559,      0.3711,      0.0947,      0.1260,      0.7773,     -0.1270,     -0.9102,      0.3203,     -0.2178,     -0.0008,     -0.2383,      0.2314],
        [     0.0000,     -0.2021,     -0.0693,      0.1924,      0.1455,     -0.0045,      0.3926,      0.4141,      0.3848,     -0.0439,      0.3945,     -0.2793,     -0.3906,      0.0603,      0.0608],
        [     0.0000,     -0.2832,      0.0386,     -0.0869,     -0.2275,      0.1377,      0.0051,     -0.0024,      0.0040,      0.1836,      0.0491,     -0.0023,     -0.0452,      0.1230,     -0.1006],
        [     0.0000,     -0.3164,     -0.6484,      0.6562,      0.5977,     -0.0332,     -0.4043,      0.0874,     -0.3691,      0.0023,      0.0659,     -0.3145,      0.0732,     -0.2793,      0.5195],
        [     0.0000,      0.0170,     -0.0664,      0.0815,     -0.2754,      0.2363,      0.1553,      0.4980,      0.3633,     -0.0366,      0.4863,     -0.2207,      0.6445,     -0.3770,     -0.9219],
        [     0.0000,     -0.2500,     -0.2949,     -0.1963,     -0.0825,     -0.0210,      0.5391,     -0.0679,      0.2441,     -0.2139,     -0.4570,     -0.0532,     -0.4375,      0.1514,     -0.1855],
        [     0.0000,     -0.5078,     -0.2100,      0.0031,     -0.1436,     -0.2969,      0.1367,      0.1895,      0.2637,     -0.0928,      0.2246,      0.1660,     -0.1445,     -0.0364,     -0.1338],
        [     0.0000,     -0.0110,      0.3691,     -0.0090,      0.2773,     -0.1729,      0.1934,      0.1465,      0.3320,     -0.0189,      0.2969,     -0.6719,      0.1924,     -0.1104,     -0.2734]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5065],
        [0.3232],
        [0.2594],
        [0.1912],
        [0.1533],
        [0.1324],
        [0.1216],
        [0.1042],
        [0.0960],
        [0.0863],
        [0.0765],
        [0.0732],
        [0.0712],
        [0.0642]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6055, 0.3945, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4102, 0.2852, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.2295, 0.1982, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.2305, 0.1816, 0.2012, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.1396, 0.2090, 0.1592, 0.1455, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.0889, 0.0942, 0.2344, 0.1001, 0.1504, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.1445, 0.1270, 0.1230, 0.1592, 0.1104, 0.0811, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.1011, 0.1113, 0.1270, 0.1934, 0.1299, 0.0845, 0.0732, 0.0581, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.0654, 0.0708, 0.0898, 0.0840, 0.1357, 0.1001, 0.1562, 0.0562, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.1250, 0.0806, 0.0830, 0.1147, 0.0747, 0.0576, 0.1064, 0.0762, 0.1060, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.0664, 0.0591, 0.1279, 0.0684, 0.0757, 0.0645, 0.1270, 0.1025, 0.0845, 0.0698, 0.0732, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.0820, 0.0952, 0.0747, 0.0723, 0.0608, 0.1089, 0.0879, 0.0527, 0.0542, 0.0737, 0.0796, 0.0811, 0.0000, 0.0000],
        [0.0713, 0.0410, 0.0542, 0.1055, 0.1157, 0.0845, 0.0850, 0.0491, 0.0525, 0.0825, 0.0547, 0.0571, 0.0918, 0.0549, 0.0000],
        [0.0596, 0.0737, 0.0559, 0.0781, 0.0908, 0.0674, 0.0771, 0.0435, 0.0503, 0.0762, 0.0605, 0.0645, 0.0977, 0.0605, 0.0447]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0022, -0.0175,  0.0153,  ...,  0.0023,  0.0035, -0.0073],
        [-0.0340,  0.0271,  0.0091,  ...,  0.0072, -0.0196, -0.0028],
        [ 0.0109,  0.0095,  0.0151,  ..., -0.0066, -0.0158,  0.0029],
        ...,
        [-0.0217, -0.0196,  0.0087,  ..., -0.0050,  0.0006, -0.0118],
        [ 0.0083, -0.0272, -0.0181,  ...,  0.0110,  0.0118, -0.0098],
        [-0.0019, -0.0100,  0.0144,  ..., -0.0108, -0.0046,  0.0012]], device='cuda:0', requires_grad=True)
K: tensor([-0.4219, -0.0898, -0.0205, -0.1299, -0.1162, -0.6367, -1.4688,  0.1289,  0.1729, -0.5977,  0.0928, -0.2539,  0.1226,  0.8047, -0.3398, -1.0781,  0.0894,  0.6602,  0.3398, -0.2871, -0.3398, -0.1016, -0.4863, -0.1338, -0.3691, -0.8086, -0.2314, -0.2832,  0.1167,  0.1260,  1.0391, -0.1494,
        -1.2500,  0.3301,  0.4258,  0.8359,  1.3359, -0.0221, -0.7188,  0.1455,  0.4941,  0.7383, -0.8359,  0.0088,  0.1631,  0.8008, -0.3340, -0.0962, -0.2139, -0.2852,  0.3945, -0.5859, -0.1963, -0.0415, -0.1162,  0.5625, -0.1543,  0.4922, -0.3848, -1.4609, -0.8633,  0.1797, -0.8398, -0.9219],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0031, -0.0197,  ...,  0.0270, -0.0120,  0.0363],
        [ 0.0044, -0.0376,  0.0063,  ...,  0.0379, -0.0273,  0.0255],
        [-0.0089, -0.0120,  0.0135,  ..., -0.0110, -0.0129,  0.0098],
        ...,
        [ 0.0039,  0.0201, -0.0205,  ...,  0.0275,  0.0133,  0.0229],
        [ 0.0210,  0.0093,  0.0092,  ...,  0.0476, -0.0132, -0.0003],
        [ 0.0307, -0.0270, -0.0040,  ...,  0.0035, -0.0016,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5898,  0.6758, -0.0674,  0.1699, -0.2617,  0.5938,  0.2832,  0.2969, -0.6875,  0.0055, -0.7266, -0.7070, -0.0840,  0.3555,  0.8867, -0.1758,  1.5312, -0.7695,  0.8125,  0.5625,  0.2197, -1.0625,  0.0835,  0.3867,  0.5195, -0.7617,  0.8633, -1.0703, -0.5859,  0.6016, -0.3496, -0.1338,
         0.4863, -0.7734,  0.7852,  0.4727, -0.5078,  0.5117,  0.6289,  0.4844, -0.1318,  0.2119,  0.3379,  0.3984,  0.9375, -0.1719, -0.0030,  0.7578, -0.3848, -0.0859, -0.3691, -0.1709, -0.2559,  0.0933,  0.0327, -1.0234,  0.4629,  0.1055, -0.0182,  0.2812, -0.1436,  0.2969, -0.9961, -0.0510],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.4258, -0.2539,  0.0596,  0.5547, -0.2168, -0.5977,  0.1289, -0.0283,  0.1895,  0.0156, -0.5391,  0.6602,  0.1025, -0.0108],
        [ 0.0000, -0.3652, -0.2910,  0.4883,  0.1221, -0.7305,  0.1816,  0.4082, -0.3340, -0.2832,  0.0742, -0.0598,  0.1123, -0.2100,  0.1660],
        [ 0.0000, -0.1187, -0.2656,  0.2012, -0.2656, -0.6172, -0.1768,  0.0703, -0.0864, -0.3340, -0.2578, -0.5820,  0.1895, -0.3652, -0.2041],
        [ 0.0000,  0.1836, -0.0544,  0.0471,  0.0171,  0.0439,  0.0013, -0.1611,  0.0228,  0.0559,  0.0708, -0.0674,  0.0359,  0.0259,  0.2480],
        [ 0.0000, -0.0466,  0.3535,  0.0796, -0.0089,  0.3066,  0.7031,  0.2354, -0.0815, -0.1016,  0.2598,  0.3965, -0.1279, -0.1768,  0.5859],
        [ 0.0000, -0.5352, -0.4727,  0.4375, -0.4160, -0.0045,  0.1768,  0.0300, -0.2637, -0.3086,  0.0918,  0.0019,  0.3105, -0.1904,  0.3262],
        [ 0.0000,  0.2061,  0.0801,  0.0474,  0.3008, -0.0640, -0.3711,  0.1582, -0.0767, -0.3457, -0.0115, -0.0962,  0.0859,  0.1211, -0.0703],
        [ 0.0000, -0.1953, -0.0957,  0.0334,  0.4512,  0.0527, -0.3750, -0.5195, -0.7461,  0.2676, -0.2520, -0.3672, -0.0583, -0.1885, -0.2949],
        [ 0.0000, -0.4512, -0.3750, -0.1348, -0.2041,  0.2734, -0.0272,  0.4141, -0.6055,  0.2988, -0.5195, -0.0391, -0.3750, -0.2100, -0.2812],
        [ 0.0000,  0.4414,  0.0044,  0.0305,  0.3555, -0.0771, -0.3320,  0.2812, -0.0557,  0.2754,  0.1689, -0.3672,  0.9492,  0.1025,  0.6328],
        [ 0.0000, -0.2061, -0.3242,  0.4473, -0.1729, -0.0762, -0.2354,  0.4395,  0.2305,  0.0366, -0.1543, -0.1064,  0.4102, -0.0234,  0.0894],
        [ 0.0000,  0.0669,  0.2129, -0.0283, -0.0591, -0.2344,  0.3477,  0.1328, -0.3770, -0.3496, -0.0417,  0.0347,  0.0520, -0.2285, -0.1060],
        [ 0.0000, -0.5469, -0.2715,  0.3965,  0.4883,  0.1729,  0.1777, -0.3711, -0.3027,  0.1484, -0.2617, -0.2178,  0.2578, -0.2598, -0.1641],
        [ 0.0000,  0.2129, -0.0603,  0.2695,  0.4219,  0.1279,  0.2578, -0.3145, -0.1680,  0.2441,  0.0168,  0.0840,  0.4961,  0.0194, -0.2891]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5049],
        [0.3534],
        [0.2558],
        [0.2164],
        [0.1601],
        [0.1431],
        [0.1223],
        [0.1203],
        [0.1035],
        [0.0867],
        [0.0798],
        [0.0758],
        [0.0751],
        [0.0695]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5664, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.2070, 0.4785, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.2598, 0.2617, 0.2256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2256, 0.2256, 0.2178, 0.1689, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.1030, 0.2812, 0.1582, 0.1367, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1108, 0.0957, 0.1699, 0.1196, 0.1865, 0.1699, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.0908, 0.1504, 0.1377, 0.1807, 0.0757, 0.1157, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.0918, 0.1562, 0.0996, 0.1216, 0.1099, 0.0825, 0.1406, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0771, 0.1240, 0.0967, 0.1250, 0.1289, 0.0786, 0.1045, 0.1172, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.1094, 0.1196, 0.0698, 0.0742, 0.0859, 0.0815, 0.1279, 0.0488, 0.0737, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.0898, 0.1235, 0.0703, 0.0574, 0.0762, 0.0564, 0.0845, 0.0977, 0.0559, 0.0669, 0.1377, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.0640, 0.1387, 0.0461, 0.0786, 0.0503, 0.0845, 0.0747, 0.0708, 0.0752, 0.0635, 0.1206, 0.0708, 0.0000, 0.0000],
        [0.0640, 0.0493, 0.0669, 0.0913, 0.0718, 0.0649, 0.0723, 0.0703, 0.0747, 0.0776, 0.0471, 0.0605, 0.1167, 0.0728, 0.0000],
        [0.0718, 0.0496, 0.0698, 0.0571, 0.0933, 0.0593, 0.0491, 0.0679, 0.0486, 0.0620, 0.0879, 0.0510, 0.1226, 0.0574, 0.0525]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0022, -0.0175,  0.0153,  ...,  0.0023,  0.0035, -0.0073],
        [-0.0340,  0.0271,  0.0091,  ...,  0.0072, -0.0196, -0.0028],
        [ 0.0109,  0.0095,  0.0151,  ..., -0.0066, -0.0158,  0.0029],
        ...,
        [-0.0217, -0.0196,  0.0087,  ..., -0.0050,  0.0006, -0.0118],
        [ 0.0083, -0.0272, -0.0181,  ...,  0.0110,  0.0118, -0.0098],
        [-0.0019, -0.0100,  0.0144,  ..., -0.0108, -0.0046,  0.0012]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6875, -0.6484,  0.2812, -0.3457, -0.9492, -0.0447, -0.8086, -0.5156, -0.7383,  0.3535, -0.8633,  0.8906, -0.4199,  0.4629, -0.5977,  0.3574,  0.0238,  0.8008,  0.2676,  0.7148,  1.1953,  0.1973, -0.1953, -0.5781, -0.1953,  0.0505,  0.3926,  0.1748, -0.2949, -0.2637,  0.1147,  0.3730,
        -1.0000, -0.0325, -0.2246,  0.4180,  0.5664,  0.6562, -0.3066,  0.2500,  0.2754, -0.0737, -0.5039, -0.1562,  0.1748,  1.2266,  0.9922, -0.4082, -0.0410,  0.1348, -0.6406, -0.4648,  0.6914, -0.5117, -0.0442, -0.3867,  0.2217,  0.1836, -0.7695, -0.3984, -0.4473,  0.3945,  0.2227, -0.5352],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0031, -0.0197,  ...,  0.0270, -0.0120,  0.0363],
        [ 0.0044, -0.0376,  0.0063,  ...,  0.0379, -0.0273,  0.0255],
        [-0.0089, -0.0120,  0.0135,  ..., -0.0110, -0.0129,  0.0098],
        ...,
        [ 0.0039,  0.0201, -0.0205,  ...,  0.0275,  0.0133,  0.0229],
        [ 0.0210,  0.0093,  0.0092,  ...,  0.0476, -0.0132, -0.0003],
        [ 0.0307, -0.0270, -0.0040,  ...,  0.0035, -0.0016,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0996,  0.3574,  0.1641, -0.6250,  0.1475,  0.5703, -0.0056,  0.1167, -0.5117, -0.0405,  0.9375, -0.6562, -0.3340,  0.3066, -0.4004, -0.6641,  1.1641,  0.6641, -0.4102,  0.4238,  0.1650, -0.1865, -0.0381,  0.6289, -0.3496, -0.0361,  0.3555, -0.5117, -0.6055,  0.2734,  0.0447, -0.3652,
         0.5703,  0.2539,  0.7188, -0.5547, -0.7812,  1.0391,  0.1230, -0.0757, -0.4844,  0.3633, -1.1094, -0.5234,  0.3438, -0.4727, -0.0050, -0.6328, -0.8906, -0.4238,  0.4004,  0.3320,  0.8281,  0.7070, -0.2500, -0.4551,  0.7148, -0.1445,  1.6328,  0.2109,  0.4922,  0.6719, -0.4961,  0.4922],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.2676,  0.4590, -0.3594,  0.2285,  0.2158, -0.4180,  0.5273, -0.3594,  0.2021, -0.1826,  0.2695,  0.4590, -0.4590, -0.0645],
        [ 0.0000, -0.4160,  0.4199, -0.4395, -0.3223, -0.6914, -0.1338,  0.0459, -0.1069, -0.4180, -0.2852,  0.1641, -0.0840, -0.1426, -0.2598],
        [ 0.0000,  0.0283,  0.0400, -0.1123, -0.2012, -0.3125,  0.0898,  0.0498, -0.4473, -0.3594, -0.7266,  0.0664,  0.2061, -0.7422, -0.4531],
        [ 0.0000, -0.0020, -0.0369, -0.2891, -0.3340, -0.0947, -0.0796, -0.3770,  0.0198, -0.1943, -0.3711, -0.0474,  0.5938, -0.4199, -0.0840],
        [ 0.0000, -0.4160,  0.5898,  0.0107, -0.1338,  0.0588,  0.1270,  0.2852,  0.1807,  0.3379, -0.4570,  0.4199,  0.3359,  0.2344,  0.4375],
        [ 0.0000, -0.2832, -0.4297,  0.1426, -0.2080,  0.2354,  0.1445, -0.1836,  0.1836, -0.4863, -0.3281, -0.0811,  0.5742, -0.3340, -0.3828],
        [ 0.0000, -0.1133,  0.3887,  0.2988,  0.5742, -0.2988,  0.1289,  0.3730,  0.0366, -0.4863,  0.2295,  0.0928,  0.2812, -0.3555, -0.0845],
        [ 0.0000, -0.3164,  0.2178, -0.2363, -0.0344, -0.1357, -0.4258,  0.1108, -0.5625, -0.4238, -0.9023, -0.6523,  0.0791, -1.0391, -0.3535],
        [ 0.0000,  0.0142,  0.4844,  0.2383,  0.4941,  0.5273,  0.0300,  0.3125,  0.4316, -0.0588, -0.4043,  0.4531,  0.5469,  0.0047, -0.1211],
        [ 0.0000,  0.2559,  0.3438, -0.1973, -0.1357,  0.0114, -0.0366,  0.4121, -0.5508, -0.1387,  0.3809,  0.0781,  0.5078, -1.2891, -0.1455],
        [ 0.0000,  0.0708,  0.3906, -0.1768, -0.3770, -0.0928, -0.3945,  0.0096,  0.1543, -0.4043, -0.2227,  0.4980,  0.5742, -0.4824, -0.2168],
        [ 0.0000,  0.0150,  0.7891, -0.3105,  0.2236, -0.2256,  0.2969,  0.1699,  0.1157,  0.1816,  0.0097,  0.6523,  0.1201,  0.3086,  0.0398],
        [ 0.0000, -0.2617,  0.0420,  0.3574,  0.1123,  0.0127,  0.1216,  0.0918,  0.1572,  0.1924, -0.3027, -0.0544,  0.6016,  0.1279, -0.1777],
        [ 0.0000, -0.3711, -0.0300, -0.2305,  0.2637, -0.1904, -0.3828, -0.0564, -0.3887, -0.1455,  0.2041, -0.3418,  0.5352, -0.2256, -0.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5285],
        [0.3460],
        [0.2705],
        [0.2261],
        [0.1782],
        [0.1556],
        [0.1342],
        [0.1317],
        [0.1060],
        [0.1010],
        [0.0839],
        [0.0757],
        [0.0817],
        [0.0712]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6875, 0.3105, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.2617, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.2002, 0.2051, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.1670, 0.1719, 0.1885, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2363, 0.1406, 0.1416, 0.1553, 0.1660, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.1211, 0.1216, 0.1357, 0.1416, 0.1387, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.1079, 0.1099, 0.1187, 0.1270, 0.1221, 0.1211, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.0991, 0.1001, 0.1074, 0.1108, 0.1089, 0.1084, 0.1069, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0889, 0.0889, 0.0957, 0.0981, 0.0977, 0.0967, 0.0962, 0.1021, 0.1030, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.0825, 0.0820, 0.0869, 0.0889, 0.0879, 0.0864, 0.0864, 0.0923, 0.0923, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.0742, 0.0737, 0.0796, 0.0820, 0.0806, 0.0796, 0.0781, 0.0840, 0.0850, 0.0859, 0.0820, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.0645, 0.0664, 0.0728, 0.0776, 0.0752, 0.0742, 0.0728, 0.0801, 0.0796, 0.0801, 0.0776, 0.0771, 0.0000, 0.0000],
        [0.0894, 0.0645, 0.0645, 0.0693, 0.0703, 0.0703, 0.0693, 0.0688, 0.0728, 0.0737, 0.0752, 0.0718, 0.0688, 0.0713, 0.0000],
        [0.0879, 0.0588, 0.0596, 0.0640, 0.0654, 0.0645, 0.0640, 0.0630, 0.0679, 0.0684, 0.0688, 0.0659, 0.0645, 0.0669, 0.0693]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0022, -0.0175,  0.0153,  ...,  0.0023,  0.0035, -0.0073],
        [-0.0340,  0.0271,  0.0091,  ...,  0.0072, -0.0196, -0.0028],
        [ 0.0109,  0.0095,  0.0151,  ..., -0.0066, -0.0158,  0.0029],
        ...,
        [-0.0217, -0.0196,  0.0087,  ..., -0.0050,  0.0006, -0.0118],
        [ 0.0083, -0.0272, -0.0181,  ...,  0.0110,  0.0118, -0.0098],
        [-0.0019, -0.0100,  0.0144,  ..., -0.0108, -0.0046,  0.0012]], device='cuda:0', requires_grad=True)
K: tensor([ 1.0703,  0.3223,  0.4473, -0.0586,  0.0728, -0.9102, -0.9648, -0.3770, -1.1797, -0.3223, -1.0312, -0.9609,  0.8047, -0.1875, -0.9883, -0.1562, -0.0417,  0.4316,  0.9375, -0.1816, -0.1357, -0.2061,  0.6055,  0.3828, -0.4102,  0.0669, -0.7031, -0.0625,  0.3418,  0.0124,  0.3086, -0.2246,
        -0.8867, -0.2910, -0.3848,  0.1523, -0.2344, -0.3535, -0.2910,  0.0488,  0.5781,  0.9609, -1.5234, -0.3535,  0.4434,  0.2617, -0.3418,  0.1494, -0.7227,  1.0391,  0.0195,  0.9883,  0.2949, -1.1328,  0.4297,  0.5156, -0.0728,  0.1289,  0.2793, -1.5156, -0.0947, -1.1406,  0.3066,  0.3203],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0031, -0.0197,  ...,  0.0270, -0.0120,  0.0363],
        [ 0.0044, -0.0376,  0.0063,  ...,  0.0379, -0.0273,  0.0255],
        [-0.0089, -0.0120,  0.0135,  ..., -0.0110, -0.0129,  0.0098],
        ...,
        [ 0.0039,  0.0201, -0.0205,  ...,  0.0275,  0.0133,  0.0229],
        [ 0.0210,  0.0093,  0.0092,  ...,  0.0476, -0.0132, -0.0003],
        [ 0.0307, -0.0270, -0.0040,  ...,  0.0035, -0.0016,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9062,  0.2832,  0.6133, -0.2520, -0.4355, -0.4629,  0.2051,  1.3594, -0.6797, -0.7969,  0.6875, -0.2314,  0.7617, -0.6523, -0.0430,  0.2471,  0.0840,  0.1758,  0.1367, -0.0151, -0.3555,  0.1367, -0.2695,  0.7422, -0.9727,  0.1758,  0.2656, -0.4199,  0.1973, -0.2559, -0.2148,  0.6094,
        -0.8164, -0.1045,  0.6172,  0.0305, -0.8750,  0.3730,  0.7305, -0.1260,  0.9453, -0.3926, -0.2178,  0.2695,  0.0957, -0.8750,  0.3184,  0.7500, -0.4473, -0.4336, -0.6719, -0.5312, -0.3223,  1.4062, -0.0554,  0.2188, -0.8906,  0.0757, -1.3828,  0.9844, -0.1094,  1.0938,  0.4355, -0.4180],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.7969, -0.7461, -0.6133, -0.5430, -0.5898, -0.6250, -0.6289, -0.5156, -0.5312, -0.5547, -0.5898, -0.5586, -0.5078, -0.5273],
        [ 0.0000, -0.5977, -0.5898, -0.4609, -0.4355, -0.4512, -0.4941, -0.5000, -0.4160, -0.4336, -0.4141, -0.4473, -0.4395, -0.4082, -0.4102],
        [ 0.0000, -0.5977, -0.5742, -0.4590, -0.3711, -0.4277, -0.4453, -0.4609, -0.3398, -0.3652, -0.3555, -0.3848, -0.3711, -0.3340, -0.3242],
        [ 0.0000, -0.4922, -0.4629, -0.3730, -0.3223, -0.3457, -0.3594, -0.3691, -0.2832, -0.2891, -0.2715, -0.3164, -0.3320, -0.2891, -0.2637],
        [ 0.0000, -0.5195, -0.5078, -0.4180, -0.3516, -0.3926, -0.4043, -0.4199, -0.3125, -0.3301, -0.3242, -0.3477, -0.3535, -0.3125, -0.2969],
        [ 0.0000, -0.5352, -0.5312, -0.4219, -0.3770, -0.4023, -0.4258, -0.4336, -0.3418, -0.3516, -0.3496, -0.3848, -0.3867, -0.3457, -0.3301],
        [ 0.0000, -0.4746, -0.4551, -0.3828, -0.3105, -0.3516, -0.3613, -0.3730, -0.2695, -0.2793, -0.2578, -0.3086, -0.3340, -0.2773, -0.2559],
        [ 0.0000, -0.3730, -0.3613, -0.2910, -0.2598, -0.2773, -0.2812, -0.2930, -0.2236, -0.2188, -0.1924, -0.2500, -0.2852, -0.2344, -0.1992],
        [ 0.0000, -0.4023, -0.4004, -0.3281, -0.3027, -0.3066, -0.3203, -0.3242, -0.2617, -0.2539, -0.2334, -0.2852, -0.3203, -0.2695, -0.2393],
        [ 0.0000, -0.3867, -0.3945, -0.3340, -0.3125, -0.3203, -0.3379, -0.3398, -0.2754, -0.2715, -0.2656, -0.3086, -0.3359, -0.2910, -0.2559],
        [ 0.0000, -0.4395, -0.4453, -0.3672, -0.3418, -0.3574, -0.3711, -0.3867, -0.3145, -0.3086, -0.2969, -0.3418, -0.3652, -0.3184, -0.2930],
        [ 0.0000, -0.4590, -0.4238, -0.3340, -0.2715, -0.3008, -0.3184, -0.3320, -0.2383, -0.2432, -0.2422, -0.2715, -0.2773, -0.2461, -0.2285],
        [ 0.0000, -0.3242, -0.3242, -0.2500, -0.2373, -0.2383, -0.2520, -0.2598, -0.2041, -0.1934, -0.1719, -0.2207, -0.2617, -0.2227, -0.1777],
        [ 0.0000, -0.4043, -0.3887, -0.3203, -0.2949, -0.3086, -0.3164, -0.3320, -0.2637, -0.2559, -0.2432, -0.2910, -0.3105, -0.2734, -0.2393]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6239],
        [0.4279],
        [0.3304],
        [0.2676],
        [0.2212],
        [0.1934],
        [0.1712],
        [0.1530],
        [0.1399],
        [0.1270],
        [0.1158],
        [0.1050],
        [0.0984],
        [0.0934]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.2695, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.2070, 0.2148, 0.2314, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.1709, 0.1797, 0.1895, 0.2061, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.1436, 0.1475, 0.1543, 0.1689, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.1230, 0.1260, 0.1328, 0.1445, 0.1426, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.1084, 0.1118, 0.1167, 0.1279, 0.1260, 0.1250, 0.1260, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.0977, 0.1011, 0.1045, 0.1128, 0.1123, 0.1123, 0.1128, 0.1162, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.0879, 0.0898, 0.0928, 0.1001, 0.0996, 0.0996, 0.1001, 0.1035, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1099, 0.0791, 0.0815, 0.0835, 0.0903, 0.0894, 0.0894, 0.0898, 0.0933, 0.0947, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.0728, 0.0737, 0.0771, 0.0825, 0.0815, 0.0815, 0.0815, 0.0845, 0.0859, 0.0894, 0.0859, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0659, 0.0674, 0.0708, 0.0762, 0.0757, 0.0747, 0.0747, 0.0781, 0.0786, 0.0815, 0.0796, 0.0786, 0.0000, 0.0000],
        [0.0786, 0.0635, 0.0645, 0.0664, 0.0708, 0.0708, 0.0713, 0.0713, 0.0728, 0.0742, 0.0776, 0.0742, 0.0723, 0.0728, 0.0000],
        [0.0781, 0.0571, 0.0588, 0.0610, 0.0654, 0.0649, 0.0654, 0.0654, 0.0674, 0.0688, 0.0718, 0.0688, 0.0674, 0.0679, 0.0708]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0022, -0.0175,  0.0153,  ...,  0.0023,  0.0035, -0.0073],
        [-0.0340,  0.0271,  0.0091,  ...,  0.0072, -0.0196, -0.0028],
        [ 0.0109,  0.0095,  0.0151,  ..., -0.0066, -0.0158,  0.0029],
        ...,
        [-0.0217, -0.0196,  0.0087,  ..., -0.0050,  0.0006, -0.0118],
        [ 0.0083, -0.0272, -0.0181,  ...,  0.0110,  0.0118, -0.0098],
        [-0.0019, -0.0100,  0.0144,  ..., -0.0108, -0.0046,  0.0012]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2500,  0.1396,  0.6172, -0.2285,  0.1011, -0.6914, -0.9180, -0.5742, -1.1016, -0.1523, -0.7734, -0.9531,  1.0625,  0.0039, -0.9180, -0.1226,  0.0752,  0.2988,  0.9531, -0.3633,  0.0991, -0.2129,  0.4629,  0.2676, -0.5273,  0.0598, -0.7422, -0.0845,  0.3203, -0.2012,  0.2266, -0.1108,
        -0.9453, -0.0135, -0.2334,  0.2100, -0.0791, -0.4121, -0.2734, -0.0811,  0.4551,  0.8086, -1.6953, -0.3379,  0.3477,  0.2578, -0.4570,  0.2363, -0.7617,  0.9453, -0.1338,  0.9023,  0.1865, -1.0938,  0.2559,  0.3750, -0.1943,  0.1797,  0.3848, -1.6484, -0.1426, -1.0156,  0.2100,  0.1729],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0031, -0.0197,  ...,  0.0270, -0.0120,  0.0363],
        [ 0.0044, -0.0376,  0.0063,  ...,  0.0379, -0.0273,  0.0255],
        [-0.0089, -0.0120,  0.0135,  ..., -0.0110, -0.0129,  0.0098],
        ...,
        [ 0.0039,  0.0201, -0.0205,  ...,  0.0275,  0.0133,  0.0229],
        [ 0.0210,  0.0093,  0.0092,  ...,  0.0476, -0.0132, -0.0003],
        [ 0.0307, -0.0270, -0.0040,  ...,  0.0035, -0.0016,  0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([     0.9805,      0.1582,      0.6953,     -0.1738,     -0.3086,     -0.4531,      0.1719,      1.2500,     -0.5820,     -0.8047,      0.6016,     -0.5234,      0.5000,     -0.5742,     -0.1572,      0.3867,      0.0547,      0.2930,      0.3945,     -0.0105,     -0.1699,      0.0649,
            -0.1602,      0.8242,     -1.0000,     -0.0170,      0.3828,     -0.2217,      0.1934,     -0.0405,     -0.3281,      0.5938,     -0.9805,     -0.2852,      0.6641,      0.2090,     -1.1328,      0.1738,      0.8750,     -0.0008,      0.9492,     -0.3867,     -0.2988,      0.2559,
             0.1855,     -0.8320,      0.3281,      0.6406,     -0.5117,     -0.5352,     -0.7461,     -0.5078,     -0.4570,      1.3438,     -0.2119,      0.2051,     -0.8828,     -0.1416,     -1.1797,      0.9688,     -0.2305,      1.1953,      0.3887,     -0.6055], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.7227, -0.6680, -0.5742, -0.4746, -0.5273, -0.5586, -0.5391, -0.4434, -0.4629, -0.4590, -0.4844, -0.4785, -0.4238, -0.4199],
        [ 0.0000, -0.5117, -0.4766, -0.3945, -0.3281, -0.3359, -0.3750, -0.3652, -0.3203, -0.3281, -0.2910, -0.3066, -0.3047, -0.3086, -0.2891],
        [ 0.0000, -0.5195, -0.4824, -0.4043, -0.2988, -0.3262, -0.3535, -0.3477, -0.2754, -0.2832, -0.2559, -0.2676, -0.2695, -0.2656, -0.2363],
        [ 0.0000, -0.3906, -0.3418, -0.2910, -0.2051, -0.2129, -0.2275, -0.2188, -0.1768, -0.1729, -0.1309, -0.1611, -0.1777, -0.1729, -0.1318],
        [ 0.0000, -0.4238, -0.4004, -0.3555, -0.2656, -0.2793, -0.3008, -0.2949, -0.2393, -0.2383, -0.2051, -0.2197, -0.2324, -0.2305, -0.1953],
        [ 0.0000, -0.4395, -0.4141, -0.3633, -0.2793, -0.2949, -0.3125, -0.3027, -0.2500, -0.2500, -0.2168, -0.2422, -0.2617, -0.2432, -0.2119],
        [ 0.0000, -0.3770, -0.3477, -0.3008, -0.2070, -0.2236, -0.2334, -0.2295, -0.1816, -0.1738, -0.1309, -0.1689, -0.1904, -0.1748, -0.1396],
        [ 0.0000, -0.2871, -0.2559, -0.2188, -0.1436, -0.1465, -0.1484, -0.1445, -0.1143, -0.0972, -0.0518, -0.0957, -0.1235, -0.1138, -0.0693],
        [ 0.0000, -0.3262, -0.3008, -0.2734, -0.1963, -0.1992, -0.2021, -0.1953, -0.1631, -0.1455, -0.1021, -0.1445, -0.1738, -0.1592, -0.1172],
        [ 0.0000, -0.3281, -0.2988, -0.2773, -0.1963, -0.2090, -0.2061, -0.1992, -0.1621, -0.1475, -0.1074, -0.1465, -0.1797, -0.1562, -0.1143],
        [ 0.0000, -0.3555, -0.3398, -0.2988, -0.2295, -0.2383, -0.2422, -0.2402, -0.2051, -0.1904, -0.1494, -0.1885, -0.2148, -0.1992, -0.1621],
        [ 0.0000, -0.3926, -0.3691, -0.3242, -0.2471, -0.2578, -0.2715, -0.2695, -0.2236, -0.2188, -0.1836, -0.2061, -0.2217, -0.2207, -0.1816],
        [ 0.0000, -0.2158, -0.1992, -0.1689, -0.1060, -0.1030, -0.1006, -0.1011, -0.0771, -0.0586, -0.0121, -0.0552, -0.0869, -0.0791, -0.0310],
        [ 0.0000, -0.3164, -0.2852, -0.2500, -0.1768, -0.1836, -0.1777, -0.1777, -0.1484, -0.1318, -0.0859, -0.1270, -0.1514, -0.1436, -0.1001]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6185],
        [0.4217],
        [0.3238],
        [0.2639],
        [0.2196],
        [0.1909],
        [0.1689],
        [0.1513],
        [0.1382],
        [0.1250],
        [0.1152],
        [0.1063],
        [0.0974],
        [0.0926]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0022.:0.0034.:0.0031.:0.0034.:0.0030.:0.0026,:0.0040.:0.0039)
.
------
		(.:0.0034.:0.0031.:0.0034.:0.0030.:0.0026,:0.0040.:0.0039.:0.0029)
.,.,,,.,.,,,,,,
@ 50 train 9.8091 , allloss: 11.3657, dt: 1550.98ms, fracRes: 0.0084, norm(attn): 0.0510, norm(output): 0.0625, norm(x): 0.0602, norm(y): 0.9989, norm:15.2209, tok/sec: 84509.29, flops:32.92, batch-reuse:1
@ 51 train 9.8319 , allloss: 11.3887, dt: 1189.30ms, fracRes: 0.0085, norm(attn): 0.0518, norm(output): 0.0625, norm(x): 0.0602, norm(y): 0.9989, norm:15.2610, tok/sec: 110209.74, flops:42.94, batch-reuse:1
@ 52 train 9.7617 , allloss: 11.3193, dt: 1193.23ms, fracRes: 0.0086, norm(attn): 0.0522, norm(output): 0.0625, norm(x): 0.0602, norm(y): 0.9989, norm:15.2487, tok/sec: 109846.37, flops:42.80, batch-reuse:1
@ 53 train 9.7892 , allloss: 11.3488, dt: 1143.93ms, fracRes: 0.0087, norm(attn): 0.0537, norm(output): 0.0625, norm(x): 0.0601, norm(y): 0.9988, norm:15.2307, tok/sec: 114580.56, flops:44.64, batch-reuse:1
@ 54 train 9.7639 , allloss: 11.3249, dt: 1152.75ms, fracRes: 0.0088, norm(attn): 0.0544, norm(output): 0.0623, norm(x): 0.0601, norm(y): 0.9988, norm:15.3283, tok/sec: 113703.84, flops:44.30, batch-reuse:1
@ 55 train 9.7979 , allloss: 11.3607, dt: 1165.08ms, fracRes: 0.0089, norm(attn): 0.0544, norm(output): 0.0623, norm(x): 0.0601, norm(y): 0.9988, norm:15.3553, tok/sec: 112500.03, flops:43.83, batch-reuse:1
@ 56 train 9.7230 , allloss: 11.2880, dt: 1165.00ms, fracRes: 0.0090, norm(attn): 0.0547, norm(output): 0.0623, norm(x): 0.0601, norm(y): 0.9988, norm:15.2629, tok/sec: 112507.72, flops:43.83, batch-reuse:1
@ 57 train 9.6836 , allloss: 11.2531, dt: 1156.02ms, fracRes: 0.0091, norm(attn): 0.0549, norm(output): 0.0623, norm(x): 0.0601, norm(y): 0.9988, norm:15.4962, tok/sec: 113381.66, flops:44.17, batch-reuse:1
@ 58 train 9.7229 , allloss: 11.2991, dt: 1177.55ms, fracRes: 0.0091, norm(attn): 0.0552, norm(output): 0.0623, norm(x): 0.0600, norm(y): 0.9988, norm:15.7485, tok/sec: 111308.68, flops:43.37, batch-reuse:1
@ 59 train 9.6400 , allloss: 11.2204, dt: 1201.45ms, fracRes: 0.0092, norm(attn): 0.0557, norm(output): 0.0623, norm(x): 0.0600, norm(y): 0.9988, norm:15.4773, tok/sec: 109094.92, flops:42.50, batch-reuse:1
@ 60 train 9.6600 , allloss: 11.2432, dt: 1157.00ms, fracRes: 0.0093, norm(attn): 0.0576, norm(output): 0.0623, norm(x): 0.0599, norm(y): 0.9988, norm:14.7296, tok/sec: 113286.31, flops:44.14, batch-reuse:1
@ 61 train 9.6598 , allloss: 11.2452, dt: 1168.24ms, fracRes: 0.0094, norm(attn): 0.0583, norm(output): 0.0623, norm(x): 0.0598, norm(y): 0.9988, norm:13.8754, tok/sec: 112196.09, flops:43.71, batch-reuse:1
@ 62 train 9.6479 , allloss: 11.2345, dt: 1197.61ms, fracRes: 0.0094, norm(attn): 0.0583, norm(output): 0.0623, norm(x): 0.0598, norm(y): 0.9988, norm:14.4601, tok/sec: 109444.83, flops:42.64, batch-reuse:1
@ 63 train 9.6543 , allloss: 11.2415, dt: 1179.13ms, fracRes: 0.0095, norm(attn): 0.0588, norm(output): 0.0623, norm(x): 0.0597, norm(y): 0.9988, norm:12.1233, tok/sec: 111160.32, flops:43.31, batch-reuse:1
@ 64 train 9.6431 , allloss: 11.2330, dt: 1173.53ms, fracRes: 0.0096, norm(attn): 0.0588, norm(output): 0.0623, norm(x): 0.0596, norm(y): 0.9988, norm:11.5723, tok/sec: 111690.09, flops:43.51, batch-reuse:1
@ 65 train 9.6463 , allloss: 11.2395, dt: 1151.81ms, fracRes: 0.0097, norm(attn): 0.0593, norm(output): 0.0623, norm(x): 0.0596, norm(y): 0.9988, norm:11.3294, tok/sec: 113796.22, flops:44.34, batch-reuse:1
@ 66 train 9.6290 , allloss: 11.2256, dt: 1158.02ms, fracRes: 0.0098, norm(attn): 0.0615, norm(output): 0.0623, norm(x): 0.0595, norm(y): 0.9988, norm:11.0620, tok/sec: 113186.70, flops:44.10, batch-reuse:1
@ 67 train 9.5655 , allloss: 11.1651, dt: 1197.21ms, fracRes: 0.0099, norm(attn): 0.0623, norm(output): 0.0623, norm(x): 0.0594, norm(y): 0.9988, norm:10.6663, tok/sec: 109480.99, flops:42.65, batch-reuse:1
@ 68 train 9.6093 , allloss: 11.2087, dt: 1195.46ms, fracRes: 0.0100, norm(attn): 0.0623, norm(output): 0.0623, norm(x): 0.0594, norm(y): 0.9988, norm:10.1640, tok/sec: 109641.21, flops:42.72, batch-reuse:1
@ 69 train 9.5808 , allloss: 11.1790, dt: 1186.69ms, fracRes: 0.0100, norm(attn): 0.0630, norm(output): 0.0623, norm(x): 0.0593, norm(y): 0.9988, norm:9.8749, tok/sec: 110451.82, flops:43.03, batch-reuse:1
@ 70 train 9.5702 , allloss: 11.1729, dt: 1151.49ms, fracRes: 0.0101, norm(attn): 0.0630, norm(output): 0.0618, norm(x): 0.0592, norm(y): 0.9987, norm:9.4639, tok/sec: 113828.31, flops:44.35, batch-reuse:1
@ 71 train 9.5460 , allloss: 11.1551, dt: 1164.79ms, fracRes: 0.0102, norm(attn): 0.0635, norm(output): 0.0615, norm(x): 0.0591, norm(y): 0.9987, norm:9.7827, tok/sec: 112528.91, flops:43.84, batch-reuse:1
@ 72 train 9.5381 , allloss: 11.1521, dt: 1160.94ms, fracRes: 0.0103, norm(attn): 0.0654, norm(output): 0.0615, norm(x): 0.0590, norm(y): 0.9987, norm:9.6193, tok/sec: 112901.50, flops:43.99, batch-reuse:1
@ 73 train 9.5412 , allloss: 11.1634, dt: 1166.93ms, fracRes: 0.0103, norm(attn): 0.0659, norm(output): 0.0615, norm(x): 0.0589, norm(y): 0.9987, norm:10.4140, tok/sec: 112321.99, flops:43.76, batch-reuse:1
@ 74 train 9.5400 , allloss: 11.1703, dt: 1153.63ms, fracRes: 0.0104, norm(attn): 0.0659, norm(output): 0.0615, norm(x): 0.0588, norm(y): 0.9987, norm:10.9482, tok/sec: 113617.30, flops:44.27, batch-reuse:1
@ 75 train 9.7238 , allloss: 11.3640, dt: 1153.10ms, fracRes: 0.0104, norm(attn): 0.0664, norm(output): 0.0615, norm(x): 0.0587, norm(y): 0.9987, norm:12.8804, tok/sec: 113669.47, flops:44.29, batch-reuse:1
@ 76 train 9.5248 , allloss: 11.1699, dt: 1196.67ms, fracRes: 0.0105, norm(attn): 0.0669, norm(output): 0.0615, norm(x): 0.0586, norm(y): 0.9987, norm:11.3346, tok/sec: 109530.89, flops:42.67, batch-reuse:1
@ 77 train 9.7192 , allloss: 11.3720, dt: 1194.34ms, fracRes: 0.0105, norm(attn): 0.0669, norm(output): 0.0615, norm(x): 0.0585, norm(y): 0.9987, norm:13.6983, tok/sec: 109744.56, flops:42.76, batch-reuse:1
@ 78 train 9.5795 , allloss: 11.2374, dt: 1192.33ms, fracRes: 0.0106, norm(attn): 0.0679, norm(output): 0.0615, norm(x): 0.0584, norm(y): 0.9987, norm:11.4226, tok/sec: 109929.46, flops:42.83, batch-reuse:1
@ 79 train 9.4726 , allloss: 11.1379, dt: 1159.50ms, fracRes: 0.0106, norm(attn): 0.0693, norm(output): 0.0615, norm(x): 0.0583, norm(y): 0.9987, norm:11.8250, tok/sec: 113042.03, flops:44.04, batch-reuse:1
@ 80 train 9.4831 , allloss: 11.1588, dt: 1178.64ms, fracRes: 0.0107, norm(attn): 0.0693, norm(output): 0.0615, norm(x): 0.0582, norm(y): 0.9986, norm:11.2118, tok/sec: 111206.37, flops:43.33, batch-reuse:1
@ 81 train 9.4720 , allloss: 11.1545, dt: 1168.70ms, fracRes: 0.0107, norm(attn): 0.0698, norm(output): 0.0615, norm(x): 0.0581, norm(y): 0.9986, norm:11.0767, tok/sec: 112151.78, flops:43.69, batch-reuse:1
@ 82 train 9.4132 , allloss: 11.0978, dt: 1150.20ms, fracRes: 0.0108, norm(attn): 0.0698, norm(output): 0.0615, norm(x): 0.0581, norm(y): 0.9986, norm:11.4295, tok/sec: 113955.70, flops:44.40, batch-reuse:1
@ 83 train 9.4278 , allloss: 11.1166, dt: 1166.36ms, fracRes: 0.0109, norm(attn): 0.0703, norm(output): 0.0596, norm(x): 0.0581, norm(y): 0.9986, norm:12.3791, tok/sec: 112377.16, flops:43.78, batch-reuse:1
@ 84 train 9.4278 , allloss: 11.1278, dt: 1162.67ms, fracRes: 0.0109, norm(attn): 0.0703, norm(output): 0.0596, norm(x): 0.0580, norm(y): 0.9986, norm:13.4334, tok/sec: 112733.47, flops:43.92, batch-reuse:1
@ 85 train 9.3908 , allloss: 11.1042, dt: 1175.08ms, fracRes: 0.0110, norm(attn): 0.0703, norm(output): 0.0596, norm(x): 0.0578, norm(y): 0.9986, norm:13.5951, tok/sec: 111543.47, flops:43.46, batch-reuse:1
@ 86 train 9.3600 , allloss: 11.0843, dt: 1169.67ms, fracRes: 0.0110, norm(attn): 0.0703, norm(output): 0.0596, norm(x): 0.0577, norm(y): 0.9986, norm:13.8020, tok/sec: 112058.65, flops:43.66, batch-reuse:1
@ 87 train 9.3710 , allloss: 11.1014, dt: 1171.38ms, fracRes: 0.0110, norm(attn): 0.0708, norm(output): 0.0596, norm(x): 0.0576, norm(y): 0.9986, norm:13.5343, tok/sec: 111895.41, flops:43.59, batch-reuse:1
@ 88 train 9.3763 , allloss: 11.1031, dt: 1166.33ms, fracRes: 0.0111, norm(attn): 0.0708, norm(output): 0.0596, norm(x): 0.0576, norm(y): 0.9986, norm:13.3636, tok/sec: 112380.22, flops:43.78, batch-reuse:1
@ 89 train 9.3319 , allloss: 11.0583, dt: 1164.99ms, fracRes: 0.0111, norm(attn): 0.0708, norm(output): 0.0596, norm(x): 0.0576, norm(y): 0.9985, norm:13.4404, tok/sec: 112509.13, flops:43.83, batch-reuse:1
@ 90 train 9.3136 , allloss: 11.0450, dt: 1175.29ms, fracRes: 0.0112, norm(attn): 0.0708, norm(output): 0.0596, norm(x): 0.0575, norm(y): 0.9985, norm:13.3555, tok/sec: 111523.10, flops:43.45, batch-reuse:1
@ 91 train 9.3520 , allloss: 11.0907, dt: 1146.38ms, fracRes: 0.0112, norm(attn): 0.0708, norm(output): 0.0596, norm(x): 0.0574, norm(y): 0.9985, norm:12.9042, tok/sec: 114335.26, flops:44.55, batch-reuse:1
@ 92 train 9.2785 , allloss: 11.0160, dt: 1175.03ms, fracRes: 0.0112, norm(attn): 0.0708, norm(output): 0.0596, norm(x): 0.0574, norm(y): 0.9985, norm:12.0736, tok/sec: 111547.66, flops:43.46, batch-reuse:1
@ 93 train 9.3020 , allloss: 11.0360, dt: 1174.08ms, fracRes: 0.0113, norm(attn): 0.0708, norm(output): 0.0596, norm(x): 0.0574, norm(y): 0.9985, norm:11.1349, tok/sec: 111637.81, flops:43.49, batch-reuse:1
@ 94 train 9.3427 , allloss: 11.0800, dt: 1158.66ms, fracRes: 0.0114, norm(attn): 0.0708, norm(output): 0.0596, norm(x): 0.0574, norm(y): 0.9985, norm:12.1676, tok/sec: 113124.02, flops:44.07, batch-reuse:1
@ 95 train 9.2757 , allloss: 10.9976, dt: 1178.44ms, fracRes: 0.0116, norm(attn): 0.0713, norm(output): 0.0596, norm(x): 0.0576, norm(y): 0.9985, norm:12.0111, tok/sec: 111225.47, flops:43.33, batch-reuse:1
@ 96 train 9.2159 , allloss: 10.9413, dt: 1180.86ms, fracRes: 0.0116, norm(attn): 0.0713, norm(output): 0.0596, norm(x): 0.0575, norm(y): 0.9985, norm:12.6695, tok/sec: 110997.29, flops:43.24, batch-reuse:1
@ 97 train 9.2333 , allloss: 10.9693, dt: 1169.03ms, fracRes: 0.0117, norm(attn): 0.0728, norm(output): 0.0596, norm(x): 0.0574, norm(y): 0.9985, norm:14.8504, tok/sec: 112120.61, flops:43.68, batch-reuse:1
@ 98 train 9.1870 , allloss: 10.9243, dt: 1152.17ms, fracRes: 0.0117, norm(attn): 0.0732, norm(output): 0.0596, norm(x): 0.0575, norm(y): 0.9985, norm:15.4111, tok/sec: 113760.97, flops:44.32, batch-reuse:1
@ 99 train 9.2140 , allloss: 10.9407, dt: 1156.65ms, fracRes: 0.0118, norm(attn): 0.0732, norm(output): 0.0608, norm(x): 0.0576, norm(y): 0.9985, norm:14.9472, tok/sec: 113320.05, flops:44.15, batch-reuse:1
@ 100 train 9.1743 , allloss: 10.9043, dt: 1164.71ms, fracRes: 0.0119, norm(attn): 0.0737, norm(output): 0.0610, norm(x): 0.0576, norm(y): 0.9985, norm:15.2067, tok/sec: 112536.30, flops:43.84, batch-reuse:1
@ 101 train 9.1288 , allloss: 10.8688, dt: 1180.64ms, fracRes: 0.0120, norm(attn): 0.0742, norm(output): 0.0610, norm(x): 0.0574, norm(y): 0.9984, norm:15.4510, tok/sec: 111018.11, flops:43.25, batch-reuse:1
@ 102 train 9.1546 , allloss: 10.8947, dt: 1170.51ms, fracRes: 0.0121, norm(attn): 0.0742, norm(output): 0.0596, norm(x): 0.0573, norm(y): 0.9984, norm:16.0137, tok/sec: 111978.49, flops:43.63, batch-reuse:1
@ 103 train 9.1678 , allloss: 10.9046, dt: 1188.76ms, fracRes: 0.0121, norm(attn): 0.0752, norm(output): 0.0596, norm(x): 0.0573, norm(y): 0.9984, norm:14.1924, tok/sec: 110259.82, flops:42.96, batch-reuse:1
@ 104 train 9.1573 , allloss: 10.9002, dt: 1152.01ms, fracRes: 0.0121, norm(attn): 0.0752, norm(output): 0.0596, norm(x): 0.0572, norm(y): 0.9984, norm:13.9796, tok/sec: 113776.77, flops:44.33, batch-reuse:1
@ 105 train 9.1162 , allloss: 10.8615, dt: 1150.25ms, fracRes: 0.0122, norm(attn): 0.0752, norm(output): 0.0593, norm(x): 0.0572, norm(y): 0.9984, norm:13.8208, tok/sec: 113951.33, flops:44.40, batch-reuse:1
@ 106 train 9.1287 , allloss: 10.8643, dt: 1149.74ms, fracRes: 0.0124, norm(attn): 0.0771, norm(output): 0.0596, norm(x): 0.0573, norm(y): 0.9984, norm:15.1100, tok/sec: 114000.98, flops:44.41, batch-reuse:1
@ 107 train 9.0843 , allloss: 10.8009, dt: 1152.17ms, fracRes: 0.0126, norm(attn): 0.0781, norm(output): 0.0596, norm(x): 0.0575, norm(y): 0.9984, norm:15.3086, tok/sec: 113761.47, flops:44.32, batch-reuse:1
@ 108 train 9.0696 , allloss: 10.7935, dt: 1161.05ms, fracRes: 0.0125, norm(attn): 0.0781, norm(output): 0.0596, norm(x): 0.0574, norm(y): 0.9984, norm:14.2242, tok/sec: 112890.61, flops:43.98, batch-reuse:1
@ 109 train 9.0113 , allloss: 10.7562, dt: 1160.06ms, fracRes: 0.0124, norm(attn): 0.0781, norm(output): 0.0596, norm(x): 0.0571, norm(y): 0.9984, norm:14.0565, tok/sec: 112987.68, flops:44.02, batch-reuse:1
@ 110 train 9.0700 , allloss: 10.8127, dt: 1157.28ms, fracRes: 0.0124, norm(attn): 0.0786, norm(output): 0.0593, norm(x): 0.0571, norm(y): 0.9983, norm:13.3503, tok/sec: 113258.87, flops:44.13, batch-reuse:1
@ 111 train 9.0409 , allloss: 10.7756, dt: 1152.06ms, fracRes: 0.0126, norm(attn): 0.0791, norm(output): 0.0593, norm(x): 0.0570, norm(y): 0.9983, norm:14.3759, tok/sec: 113771.38, flops:44.33, batch-reuse:1
@ 112 train 9.0193 , allloss: 10.7686, dt: 1159.96ms, fracRes: 0.0125, norm(attn): 0.0801, norm(output): 0.0588, norm(x): 0.0569, norm(y): 0.9983, norm:16.2897, tok/sec: 112996.74, flops:44.02, batch-reuse:1
@ 113 train 8.9905 , allloss: 10.7393, dt: 1171.25ms, fracRes: 0.0126, norm(attn): 0.0811, norm(output): 0.0588, norm(x): 0.0569, norm(y): 0.9983, norm:16.2144, tok/sec: 111907.89, flops:43.60, batch-reuse:1
@ 114 train 8.9980 , allloss: 10.7414, dt: 1152.21ms, fracRes: 0.0126, norm(attn): 0.0830, norm(output): 0.0588, norm(x): 0.0569, norm(y): 0.9983, norm:16.1591, tok/sec: 113757.04, flops:44.32, batch-reuse:1
@ 115 train 8.9787 , allloss: 10.7332, dt: 1168.88ms, fracRes: 0.0126, norm(attn): 0.0830, norm(output): 0.0588, norm(x): 0.0567, norm(y): 0.9983, norm:15.1238, tok/sec: 112134.74, flops:43.69, batch-reuse:1
@ 116 train 8.9585 , allloss: 10.7088, dt: 1161.55ms, fracRes: 0.0126, norm(attn): 0.0830, norm(output): 0.0588, norm(x): 0.0567, norm(y): 0.9983, norm:14.5960, tok/sec: 112842.06, flops:43.96, batch-reuse:1
@ 117 train 8.9235 , allloss: 10.6648, dt: 1155.76ms, fracRes: 0.0127, norm(attn): 0.0850, norm(output): 0.0588, norm(x): 0.0567, norm(y): 0.9983, norm:15.0757, tok/sec: 113407.27, flops:44.18, batch-reuse:1
@ 118 train 8.9025 , allloss: 10.6603, dt: 1148.01ms, fracRes: 0.0125, norm(attn): 0.0854, norm(output): 0.0588, norm(x): 0.0566, norm(y): 0.9983, norm:16.6979, tok/sec: 114173.31, flops:44.48, batch-reuse:1
@ 119 train 8.9023 , allloss: 10.6479, dt: 1144.56ms, fracRes: 0.0126, norm(attn): 0.0854, norm(output): 0.0588, norm(x): 0.0567, norm(y): 0.9983, norm:15.7816, tok/sec: 114517.10, flops:44.62, batch-reuse:1
@ 120 train 8.9780 , allloss: 10.7236, dt: 1157.23ms, fracRes: 0.0127, norm(attn): 0.0864, norm(output): 0.0588, norm(x): 0.0567, norm(y): 0.9982, norm:14.9463, tok/sec: 113263.09, flops:44.13, batch-reuse:1
@ 121 train 8.9875 , allloss: 10.7423, dt: 1162.73ms, fracRes: 0.0127, norm(attn): 0.0864, norm(output): 0.0588, norm(x): 0.0566, norm(y): 0.9982, norm:15.0646, tok/sec: 112727.78, flops:43.92, batch-reuse:1
@ 122 train 8.9589 , allloss: 10.6935, dt: 1158.76ms, fracRes: 0.0130, norm(attn): 0.0884, norm(output): 0.0588, norm(x): 0.0567, norm(y): 0.9982, norm:16.2303, tok/sec: 113114.08, flops:44.07, batch-reuse:1
@ 123 train 8.8699 , allloss: 10.6266, dt: 1175.56ms, fracRes: 0.0128, norm(attn): 0.0884, norm(output): 0.0588, norm(x): 0.0564, norm(y): 0.9982, norm:16.7712, tok/sec: 111497.59, flops:43.44, batch-reuse:1
@ 124 train 8.8775 , allloss: 10.6296, dt: 1147.19ms, fracRes: 0.0127, norm(attn): 0.0913, norm(output): 0.0588, norm(x): 0.0565, norm(y): 0.9982, norm:17.7820, tok/sec: 114254.92, flops:44.51, batch-reuse:1
@ 125 train 8.8815 , allloss: 10.6267, dt: 1169.25ms, fracRes: 0.0126, norm(attn): 0.0913, norm(output): 0.0588, norm(x): 0.0566, norm(y): 0.9982, norm:18.8921, tok/sec: 112098.75, flops:43.67, batch-reuse:1
@ 126 train 8.8446 , allloss: 10.6071, dt: 1181.02ms, fracRes: 0.0128, norm(attn): 0.0913, norm(output): 0.0588, norm(x): 0.0564, norm(y): 0.9982, norm:17.6741, tok/sec: 110981.76, flops:43.24, batch-reuse:1
@ 127 train 8.8091 , allloss: 10.5443, dt: 1164.70ms, fracRes: 0.0134, norm(attn): 0.0933, norm(output): 0.0588, norm(x): 0.0566, norm(y): 0.9982, norm:13.5837, tok/sec: 112537.06, flops:43.84, batch-reuse:1
@ 128 train 8.7891 , allloss: 10.5294, dt: 1146.19ms, fracRes: 0.0129, norm(attn): 0.0938, norm(output): 0.0588, norm(x): 0.0566, norm(y): 0.9982, norm:14.3519, tok/sec: 114354.64, flops:44.55, batch-reuse:1
@ 129 train 8.8647 , allloss: 10.6317, dt: 1166.56ms, fracRes: 0.0124, norm(attn): 0.0933, norm(output): 0.0588, norm(x): 0.0563, norm(y): 0.9982, norm:16.9681, tok/sec: 112357.23, flops:43.77, batch-reuse:1
@ 130 train 8.7953 , allloss: 10.5320, dt: 1158.27ms, fracRes: 0.0129, norm(attn): 0.0947, norm(output): 0.0588, norm(x): 0.0566, norm(y): 0.9982, norm:13.0639, tok/sec: 113162.00, flops:44.09, batch-reuse:1
@ 131 train 8.7934 , allloss: 10.5346, dt: 1159.65ms, fracRes: 0.0132, norm(attn): 0.0952, norm(output): 0.0588, norm(x): 0.0566, norm(y): 0.9982, norm:11.3900, tok/sec: 113027.41, flops:44.04, batch-reuse:1
@ 132 train 8.7668 , allloss: 10.5195, dt: 1143.28ms, fracRes: 0.0127, norm(attn): 0.0947, norm(output): 0.0588, norm(x): 0.0564, norm(y): 0.9981, norm:15.7163, tok/sec: 114645.63, flops:44.67, batch-reuse:1
@ 133 train 8.7488 , allloss: 10.4704, dt: 1152.55ms, fracRes: 0.0134, norm(attn): 0.0962, norm(output): 0.0588, norm(x): 0.0567, norm(y): 0.9981, norm:14.9528, tok/sec: 113723.95, flops:44.31, batch-reuse:1
@ 134 train 8.7305 , allloss: 10.4872, dt: 1169.83ms, fracRes: 0.0129, norm(attn): 0.0947, norm(output): 0.0586, norm(x): 0.0563, norm(y): 0.9981, norm:14.8774, tok/sec: 112043.30, flops:43.65, batch-reuse:1
@ 135 train 8.7019 , allloss: 10.4566, dt: 1188.86ms, fracRes: 0.0126, norm(attn): 0.0957, norm(output): 0.0586, norm(x): 0.0562, norm(y): 0.9981, norm:12.7350, tok/sec: 110250.14, flops:42.95, batch-reuse:1
@ 136 train 8.7001 , allloss: 10.4457, dt: 1182.88ms, fracRes: 0.0129, norm(attn): 0.0957, norm(output): 0.0588, norm(x): 0.0563, norm(y): 0.9981, norm:11.0901, tok/sec: 110807.71, flops:43.17, batch-reuse:1
@ 137 train 8.6355 , allloss: 10.3678, dt: 1167.57ms, fracRes: 0.0140, norm(attn): 0.0957, norm(output): 0.0586, norm(x): 0.0563, norm(y): 0.9981, norm:13.8133, tok/sec: 112260.82, flops:43.74, batch-reuse:1
@ 138 train 8.6064 , allloss: 10.3207, dt: 1156.14ms, fracRes: 0.0141, norm(attn): 0.0977, norm(output): 0.0588, norm(x): 0.0564, norm(y): 0.9981, norm:15.7708, tok/sec: 113370.77, flops:44.17, batch-reuse:1
@ 139 train 8.5229 , allloss: 10.2698, dt: 1148.45ms, fracRes: 0.0127, norm(attn): 0.0947, norm(output): 0.0583, norm(x): 0.0559, norm(y): 0.9981, norm:15.1729, tok/sec: 114129.32, flops:44.46, batch-reuse:1
@ 140 train 8.6094 , allloss: 10.3398, dt: 1156.59ms, fracRes: 0.0128, norm(attn): 0.0967, norm(output): 0.0586, norm(x): 0.0561, norm(y): 0.9981, norm:17.0013, tok/sec: 113325.87, flops:44.15, batch-reuse:1
@ 141 train 8.5876 , allloss: 10.3191, dt: 1160.10ms, fracRes: 0.0135, norm(attn): 0.0962, norm(output): 0.0586, norm(x): 0.0561, norm(y): 0.9980, norm:12.3780, tok/sec: 112983.11, flops:44.02, batch-reuse:1
@ 142 train 8.6174 , allloss: 10.3581, dt: 1143.00ms, fracRes: 0.0140, norm(attn): 0.0947, norm(output): 0.0586, norm(x): 0.0560, norm(y): 0.9980, norm:16.0451, tok/sec: 114673.89, flops:44.68, batch-reuse:1
@ 143 train 8.6009 , allloss: 10.2899, dt: 1144.90ms, fracRes: 0.0151, norm(attn): 0.0996, norm(output): 0.0588, norm(x): 0.0565, norm(y): 0.9981, norm:17.6427, tok/sec: 114483.21, flops:44.60, batch-reuse:1
@ 144 train 8.5372 , allloss: 10.2538, dt: 1162.78ms, fracRes: 0.0141, norm(attn): 0.0962, norm(output): 0.0588, norm(x): 0.0562, norm(y): 0.9980, norm:13.7816, tok/sec: 112722.56, flops:43.92, batch-reuse:1
@ 145 train 8.5645 , allloss: 10.3124, dt: 1144.49ms, fracRes: 0.0130, norm(attn): 0.0947, norm(output): 0.0583, norm(x): 0.0559, norm(y): 0.9980, norm:17.6789, tok/sec: 114524.28, flops:44.62, batch-reuse:1
@ 146 train 8.6132 , allloss: 10.3202, dt: 1143.82ms, fracRes: 0.0139, norm(attn): 0.0991, norm(output): 0.0588, norm(x): 0.0563, norm(y): 0.9980, norm:16.5495, tok/sec: 114591.95, flops:44.65, batch-reuse:1
@ 147 train 8.5359 , allloss: 10.2500, dt: 1149.65ms, fracRes: 0.0142, norm(attn): 0.0981, norm(output): 0.0586, norm(x): 0.0561, norm(y): 0.9980, norm:13.2349, tok/sec: 114010.18, flops:44.42, batch-reuse:1
@ 148 train 8.5065 , allloss: 10.2271, dt: 1161.07ms, fracRes: 0.0137, norm(attn): 0.0952, norm(output): 0.0586, norm(x): 0.0560, norm(y): 0.9980, norm:12.7709, tok/sec: 112889.24, flops:43.98, batch-reuse:1
@ 149 train 8.4274 , allloss: 10.1218, dt: 1174.99ms, fracRes: 0.0145, norm(attn): 0.0991, norm(output): 0.0586, norm(x): 0.0562, norm(y): 0.9980, norm:16.5459, tok/sec: 111551.68, flops:43.46, batch-reuse:1
@ 150 train 8.5298 , allloss: 10.2538, dt: 1157.03ms, fracRes: 0.0136, norm(attn): 0.0952, norm(output): 0.0583, norm(x): 0.0558, norm(y): 0.9980, norm:14.5902, tok/sec: 113282.86, flops:44.13, batch-reuse:1
@ 151 train 8.4142 , allloss: 10.1162, dt: 1157.21ms, fracRes: 0.0148, norm(attn): 0.0962, norm(output): 0.0586, norm(x): 0.0559, norm(y): 0.9980, norm:12.1513, tok/sec: 113265.28, flops:44.13, batch-reuse:1
@ 152 train 8.3986 , allloss: 10.1042, dt: 1148.68ms, fracRes: 0.0139, norm(attn): 0.0977, norm(output): 0.0583, norm(x): 0.0558, norm(y): 0.9979, norm:12.2219, tok/sec: 114106.18, flops:44.46, batch-reuse:1
@ 153 train 8.3766 , allloss: 10.0837, dt: 1161.30ms, fracRes: 0.0132, norm(attn): 0.0967, norm(output): 0.0583, norm(x): 0.0559, norm(y): 0.9979, norm:13.9178, tok/sec: 112866.27, flops:43.97, batch-reuse:1
@ 154 train 8.4391 , allloss: 10.1231, dt: 1170.83ms, fracRes: 0.0146, norm(attn): 0.0986, norm(output): 0.0583, norm(x): 0.0560, norm(y): 0.9979, norm:12.4533, tok/sec: 111947.61, flops:43.61, batch-reuse:1
@ 155 train 8.4659 , allloss: 10.1856, dt: 1162.98ms, fracRes: 0.0140, norm(attn): 0.0942, norm(output): 0.0583, norm(x): 0.0556, norm(y): 0.9979, norm:19.3648, tok/sec: 112703.26, flops:43.91, batch-reuse:1
@ 156 train 8.3786 , allloss: 10.0572, dt: 1159.54ms, fracRes: 0.0161, norm(attn): 0.0967, norm(output): 0.0583, norm(x): 0.0558, norm(y): 0.9979, norm:14.4350, tok/sec: 113038.03, flops:44.04, batch-reuse:1
@ 157 train 8.4158 , allloss: 10.1198, dt: 1135.17ms, fracRes: 0.0139, norm(attn): 0.0942, norm(output): 0.0583, norm(x): 0.0556, norm(y): 0.9979, norm:12.0544, tok/sec: 115464.50, flops:44.98, batch-reuse:1
@ 158 train 8.3798 , allloss: 10.0595, dt: 1138.19ms, fracRes: 0.0148, norm(attn): 0.0962, norm(output): 0.0583, norm(x): 0.0557, norm(y): 0.9979, norm:9.3996, tok/sec: 115158.56, flops:44.87, batch-reuse:1
@ 159 train 8.4102 , allloss: 10.1039, dt: 1149.88ms, fracRes: 0.0140, norm(attn): 0.0942, norm(output): 0.0583, norm(x): 0.0553, norm(y): 0.9979, norm:20.9571, tok/sec: 113987.27, flops:44.41, batch-reuse:1
@ 160 train 8.3443 , allloss: 9.9845, dt: 1162.22ms, fracRes: 0.0161, norm(attn): 0.0986, norm(output): 0.0583, norm(x): 0.0557, norm(y): 0.9979, norm:17.3914, tok/sec: 112777.64, flops:43.94, batch-reuse:1
@ 161 train 8.3283 , allloss: 9.9953, dt: 1164.12ms, fracRes: 0.0146, norm(attn): 0.0947, norm(output): 0.0583, norm(x): 0.0554, norm(y): 0.9978, norm:9.7565, tok/sec: 112593.05, flops:43.87, batch-reuse:1
@ 162 train 8.3532 , allloss: 10.0112, dt: 1185.52ms, fracRes: 0.0158, norm(attn): 0.0947, norm(output): 0.0583, norm(x): 0.0553, norm(y): 0.9978, norm:9.3303, tok/sec: 110561.02, flops:43.07, batch-reuse:1
@ 163 train 8.3128 , allloss: 9.9753, dt: 1177.43ms, fracRes: 0.0152, norm(attn): 0.0942, norm(output): 0.0583, norm(x): 0.0551, norm(y): 0.9978, norm:16.3763, tok/sec: 111320.27, flops:43.37, batch-reuse:1
@ 164 train 8.2448 , allloss: 9.8711, dt: 1172.84ms, fracRes: 0.0170, norm(attn): 0.0972, norm(output): 0.0583, norm(x): 0.0554, norm(y): 0.9978, norm:21.4567, tok/sec: 111755.93, flops:43.54, batch-reuse:1
@ 165 train 8.2911 , allloss: 9.9497, dt: 1171.83ms, fracRes: 0.0141, norm(attn): 0.0942, norm(output): 0.0583, norm(x): 0.0549, norm(y): 0.9978, norm:12.4591, tok/sec: 111852.68, flops:43.58, batch-reuse:1
@ 166 train 8.2073 , allloss: 9.8419, dt: 1178.90ms, fracRes: 0.0154, norm(attn): 0.0947, norm(output): 0.0579, norm(x): 0.0550, norm(y): 0.9978, norm:13.0357, tok/sec: 111181.25, flops:43.32, batch-reuse:1
@ 167 train 8.2215 , allloss: 9.8223, dt: 1140.24ms, fracRes: 0.0196, norm(attn): 0.0957, norm(output): 0.0583, norm(x): 0.0551, norm(y): 0.9978, norm:20.7123, tok/sec: 114951.29, flops:44.79, batch-reuse:1
@ 168 train 8.1808 , allloss: 9.7996, dt: 1149.66ms, fracRes: 0.0164, norm(attn): 0.0952, norm(output): 0.0576, norm(x): 0.0550, norm(y): 0.9978, norm:14.7653, tok/sec: 114009.23, flops:44.42, batch-reuse:1
@ 169 train 8.1999 , allloss: 9.8496, dt: 1145.46ms, fracRes: 0.0131, norm(attn): 0.0938, norm(output): 0.0576, norm(x): 0.0546, norm(y): 0.9977, norm:21.6409, tok/sec: 114426.90, flops:44.58, batch-reuse:1
@ 170 train 8.1750 , allloss: 9.8052, dt: 1182.24ms, fracRes: 0.0147, norm(attn): 0.0952, norm(output): 0.0579, norm(x): 0.0548, norm(y): 0.9977, norm:16.2494, tok/sec: 110867.86, flops:43.19, batch-reuse:1
@ 171 train 8.1621 , allloss: 9.8078, dt: 1164.88ms, fracRes: 0.0149, norm(attn): 0.0938, norm(output): 0.0576, norm(x): 0.0546, norm(y): 0.9977, norm:13.2802, tok/sec: 112519.88, flops:43.84, batch-reuse:1
@ 172 train 8.1544 , allloss: 9.7729, dt: 1145.00ms, fracRes: 0.0170, norm(attn): 0.0942, norm(output): 0.0581, norm(x): 0.0548, norm(y): 0.9977, norm:14.6963, tok/sec: 114472.96, flops:44.60, batch-reuse:1
@ 173 train 8.1339 , allloss: 9.7791, dt: 1149.38ms, fracRes: 0.0138, norm(attn): 0.0933, norm(output): 0.0557, norm(x): 0.0545, norm(y): 0.9977, norm:25.8818, tok/sec: 114037.14, flops:44.43, batch-reuse:1
@ 174 train 8.2304 , allloss: 9.8412, dt: 1141.10ms, fracRes: 0.0163, norm(attn): 0.0952, norm(output): 0.0583, norm(x): 0.0549, norm(y): 0.9977, norm:15.6091, tok/sec: 114864.37, flops:44.75, batch-reuse:1
@ 175 train 8.2150 , allloss: 9.8501, dt: 1174.81ms, fracRes: 0.0148, norm(attn): 0.0938, norm(output): 0.0579, norm(x): 0.0545, norm(y): 0.9977, norm:16.8840, tok/sec: 111568.23, flops:43.47, batch-reuse:1
@ 176 train 8.1822 , allloss: 9.8275, dt: 1159.18ms, fracRes: 0.0140, norm(attn): 0.0928, norm(output): 0.0557, norm(x): 0.0543, norm(y): 0.9976, norm:47.4661, tok/sec: 113073.37, flops:44.05, batch-reuse:1
@ 177 train 8.1267 , allloss: 9.7281, dt: 1165.27ms, fracRes: 0.0192, norm(attn): 0.0933, norm(output): 0.0579, norm(x): 0.0546, norm(y): 0.9977, norm:22.6508, tok/sec: 112481.66, flops:43.82, batch-reuse:1
@ 178 train 8.1611 , allloss: 9.7690, dt: 1159.53ms, fracRes: 0.0193, norm(attn): 0.0938, norm(output): 0.0579, norm(x): 0.0548, norm(y): 0.9977, norm:25.0709, tok/sec: 113039.00, flops:44.04, batch-reuse:1
@ 179 train 8.0734 , allloss: 9.7576, dt: 1171.18ms, fracRes: 0.0128, norm(attn): 0.0908, norm(output): 0.0574, norm(x): 0.0543, norm(y): 0.9976, norm:21.9531, tok/sec: 111914.71, flops:43.60, batch-reuse:1
@ 180 train 8.1479 , allloss: 9.8333, dt: 1164.83ms, fracRes: 0.0130, norm(attn): 0.0894, norm(output): 0.0576, norm(x): 0.0544, norm(y): 0.9976, norm:18.2738, tok/sec: 112524.35, flops:43.84, batch-reuse:1
@ 181 train 8.1067 , allloss: 9.7381, dt: 1181.50ms, fracRes: 0.0194, norm(attn): 0.0933, norm(output): 0.0583, norm(x): 0.0549, norm(y): 0.9976, norm:21.2465, tok/sec: 110937.37, flops:43.22, batch-reuse:1
@ 182 train 8.1046 , allloss: 9.7533, dt: 1169.83ms, fracRes: 0.0164, norm(attn): 0.0913, norm(output): 0.0583, norm(x): 0.0547, norm(y): 0.9976, norm:13.1012, tok/sec: 112043.67, flops:43.65, batch-reuse:1
@ 183 train 8.0505 , allloss: 9.7508, dt: 1161.31ms, fracRes: 0.0126, norm(attn): 0.0879, norm(output): 0.0562, norm(x): 0.0543, norm(y): 0.9976, norm:22.5974, tok/sec: 112865.53, flops:43.97, batch-reuse:1
@ 184 train 7.9395 , allloss: 9.6241, dt: 1152.75ms, fracRes: 0.0144, norm(attn): 0.0889, norm(output): 0.0579, norm(x): 0.0544, norm(y): 0.9976, norm:15.2887, tok/sec: 113703.84, flops:44.30, batch-reuse:1
@ 185 train 7.9751 , allloss: 9.6448, dt: 1141.85ms, fracRes: 0.0184, norm(attn): 0.0884, norm(output): 0.0581, norm(x): 0.0543, norm(y): 0.9976, norm:14.6371, tok/sec: 114789.13, flops:44.72, batch-reuse:1
@ 186 train 8.0935 , allloss: 9.7729, dt: 1161.63ms, fracRes: 0.0159, norm(attn): 0.0884, norm(output): 0.0576, norm(x): 0.0541, norm(y): 0.9976, norm:11.9543, tok/sec: 112834.30, flops:43.96, batch-reuse:1
@ 187 train 8.1416 , allloss: 9.8135, dt: 1147.39ms, fracRes: 0.0147, norm(attn): 0.0913, norm(output): 0.0579, norm(x): 0.0543, norm(y): 0.9976, norm:15.8628, tok/sec: 114234.43, flops:44.51, batch-reuse:1
@ 188 train 7.9989 , allloss: 9.6666, dt: 1138.97ms, fracRes: 0.0148, norm(attn): 0.0913, norm(output): 0.0562, norm(x): 0.0540, norm(y): 0.9975, norm:10.3016, tok/sec: 115079.23, flops:44.83, batch-reuse:1
@ 189 train 8.0839 , allloss: 9.7521, dt: 1163.55ms, fracRes: 0.0163, norm(attn): 0.0884, norm(output): 0.0576, norm(x): 0.0538, norm(y): 0.9975, norm:19.2260, tok/sec: 112648.72, flops:43.89, batch-reuse:1
@ 190 train 8.0314 , allloss: 9.6846, dt: 1168.59ms, fracRes: 0.0196, norm(attn): 0.0884, norm(output): 0.0576, norm(x): 0.0539, norm(y): 0.9975, norm:14.1968, tok/sec: 112162.95, flops:43.70, batch-reuse:1
@ 191 train 8.0007 , allloss: 9.6972, dt: 1155.57ms, fracRes: 0.0130, norm(attn): 0.0874, norm(output): 0.0557, norm(x): 0.0537, norm(y): 0.9975, norm:16.0847, tok/sec: 113426.32, flops:44.19, batch-reuse:1
@ 192 train 8.0286 , allloss: 9.7203, dt: 1160.42ms, fracRes: 0.0127, norm(attn): 0.0903, norm(output): 0.0576, norm(x): 0.0538, norm(y): 0.9975, norm:12.0219, tok/sec: 112952.68, flops:44.01, batch-reuse:1
@ 193 train 7.9705 , allloss: 9.6456, dt: 1149.63ms, fracRes: 0.0146, norm(attn): 0.0898, norm(output): 0.0566, norm(x): 0.0536, norm(y): 0.9975, norm:15.6266, tok/sec: 114012.30, flops:44.42, batch-reuse:1
@ 194 train 8.0173 , allloss: 9.6734, dt: 1155.15ms, fracRes: 0.0198, norm(attn): 0.0889, norm(output): 0.0574, norm(x): 0.0536, norm(y): 0.9974, norm:14.0996, tok/sec: 113467.61, flops:44.21, batch-reuse:1
@ 195 train 8.0040 , allloss: 9.6760, dt: 1153.94ms, fracRes: 0.0166, norm(attn): 0.0874, norm(output): 0.0557, norm(x): 0.0534, norm(y): 0.9974, norm:12.1822, tok/sec: 113586.71, flops:44.25, batch-reuse:1
@ 196 train 7.9322 , allloss: 9.6104, dt: 1155.37ms, fracRes: 0.0145, norm(attn): 0.0898, norm(output): 0.0571, norm(x): 0.0534, norm(y): 0.9974, norm:12.3912, tok/sec: 113445.98, flops:44.20, batch-reuse:1
@ 197 train 7.9012 , allloss: 9.5799, dt: 1166.04ms, fracRes: 0.0133, norm(attn): 0.0908, norm(output): 0.0557, norm(x): 0.0535, norm(y): 0.9974, norm:9.4166, tok/sec: 112408.07, flops:43.79, batch-reuse:1
@ 198 train 7.8726 , allloss: 9.5640, dt: 1153.00ms, fracRes: 0.0130, norm(attn): 0.0864, norm(output): 0.0554, norm(x): 0.0531, norm(y): 0.9974, norm:18.3885, tok/sec: 113679.37, flops:44.29, batch-reuse:1
@ 199 train 7.9352 , allloss: 9.5863, dt: 1149.45ms, fracRes: 0.0196, norm(attn): 0.0884, norm(output): 0.0557, norm(x): 0.0532, norm(y): 0.9974, norm:14.5646, tok/sec: 114030.30, flops:44.43, batch-reuse:1
@ 200 train 7.9308 , allloss: 9.6119, dt: 1155.58ms, fracRes: 0.0148, norm(attn): 0.0884, norm(output): 0.0554, norm(x): 0.0529, norm(y): 0.9973, norm:8.1398, tok/sec: 113425.78, flops:44.19, batch-reuse:1
@ 201 train 7.9062 , allloss: 9.5801, dt: 1167.07ms, fracRes: 0.0132, norm(attn): 0.0908, norm(output): 0.0557, norm(x): 0.0530, norm(y): 0.9973, norm:11.2981, tok/sec: 112308.54, flops:43.76, batch-reuse:1
@ 202 train 7.9216 , allloss: 9.5890, dt: 1176.73ms, fracRes: 0.0125, norm(attn): 0.0913, norm(output): 0.0549, norm(x): 0.0528, norm(y): 0.9973, norm:9.2338, tok/sec: 111386.83, flops:43.40, batch-reuse:1
@ 203 train 7.9297 , allloss: 9.5647, dt: 1155.97ms, fracRes: 0.0180, norm(attn): 0.0908, norm(output): 0.0554, norm(x): 0.0527, norm(y): 0.9973, norm:14.5295, tok/sec: 113387.37, flops:44.18, batch-reuse:1
@ 204 train 7.8879 , allloss: 9.5488, dt: 1180.82ms, fracRes: 0.0152, norm(attn): 0.0869, norm(output): 0.0549, norm(x): 0.0524, norm(y): 0.9972, norm:13.0110, tok/sec: 111000.76, flops:43.25, batch-reuse:1
@ 205 train 7.8637 , allloss: 9.5008, dt: 1146.52ms, fracRes: 0.0157, norm(attn): 0.0908, norm(output): 0.0549, norm(x): 0.0526, norm(y): 0.9972, norm:12.0450, tok/sec: 114321.40, flops:44.54, batch-reuse:1
@ 206 train 7.8836 , allloss: 9.5337, dt: 1177.28ms, fracRes: 0.0119, norm(attn): 0.0928, norm(output): 0.0549, norm(x): 0.0524, norm(y): 0.9972, norm:13.9441, tok/sec: 111334.27, flops:43.38, batch-reuse:1
@ 207 train 7.7762 , allloss: 9.4089, dt: 1174.42ms, fracRes: 0.0129, norm(attn): 0.0933, norm(output): 0.0549, norm(x): 0.0524, norm(y): 0.9972, norm:10.6890, tok/sec: 111605.72, flops:43.48, batch-reuse:1
@ 208 train 7.8325 , allloss: 9.4826, dt: 1192.78ms, fracRes: 0.0129, norm(attn): 0.0908, norm(output): 0.0549, norm(x): 0.0521, norm(y): 0.9972, norm:11.1090, tok/sec: 109887.60, flops:42.81, batch-reuse:1
@ 209 train 7.8496 , allloss: 9.4641, dt: 1163.38ms, fracRes: 0.0180, norm(attn): 0.0913, norm(output): 0.0549, norm(x): 0.0521, norm(y): 0.9972, norm:11.6743, tok/sec: 112665.06, flops:43.89, batch-reuse:1
@ 210 train 7.8364 , allloss: 9.4734, dt: 1147.70ms, fracRes: 0.0123, norm(attn): 0.0913, norm(output): 0.0547, norm(x): 0.0517, norm(y): 0.9971, norm:18.1438, tok/sec: 114204.10, flops:44.49, batch-reuse:1
@ 211 train 7.7575 , allloss: 9.3693, dt: 1145.42ms, fracRes: 0.0141, norm(attn): 0.0933, norm(output): 0.0544, norm(x): 0.0519, norm(y): 0.9971, norm:10.3839, tok/sec: 114431.19, flops:44.58, batch-reuse:1
@ 212 train 7.8125 , allloss: 9.4239, dt: 1171.20ms, fracRes: 0.0138, norm(attn): 0.0933, norm(output): 0.0544, norm(x): 0.0518, norm(y): 0.9971, norm:8.4234, tok/sec: 111912.18, flops:43.60, batch-reuse:1
@ 213 train 7.7330 , allloss: 9.3531, dt: 1153.03ms, fracRes: 0.0126, norm(attn): 0.0928, norm(output): 0.0544, norm(x): 0.0516, norm(y): 0.9971, norm:13.6220, tok/sec: 113676.52, flops:44.29, batch-reuse:1
@ 214 train 7.7633 , allloss: 9.3523, dt: 1144.42ms, fracRes: 0.0142, norm(attn): 0.0938, norm(output): 0.0544, norm(x): 0.0516, norm(y): 0.9970, norm:7.9876, tok/sec: 114531.20, flops:44.62, batch-reuse:1
@ 215 train 7.6788 , allloss: 9.2679, dt: 1145.73ms, fracRes: 0.0126, norm(attn): 0.0938, norm(output): 0.0544, norm(x): 0.0514, norm(y): 0.9970, norm:9.5610, tok/sec: 114400.40, flops:44.57, batch-reuse:1
@ 216 train 7.7033 , allloss: 9.2758, dt: 1174.12ms, fracRes: 0.0158, norm(attn): 0.0942, norm(output): 0.0544, norm(x): 0.0515, norm(y): 0.9970, norm:15.2334, tok/sec: 111634.18, flops:43.49, batch-reuse:1
@ 217 train 7.7453 , allloss: 9.3358, dt: 1184.67ms, fracRes: 0.0123, norm(attn): 0.0942, norm(output): 0.0544, norm(x): 0.0512, norm(y): 0.9970, norm:9.2287, tok/sec: 110640.50, flops:43.11, batch-reuse:1
@ 218 train 7.7401 , allloss: 9.3057, dt: 1168.38ms, fracRes: 0.0129, norm(attn): 0.0967, norm(output): 0.0544, norm(x): 0.0513, norm(y): 0.9970, norm:10.7167, tok/sec: 112182.33, flops:43.71, batch-reuse:1
@ 219 train 7.8181 , allloss: 9.3811, dt: 1185.15ms, fracRes: 0.0145, norm(attn): 0.0967, norm(output): 0.0544, norm(x): 0.0514, norm(y): 0.9970, norm:14.5173, tok/sec: 110594.98, flops:43.09, batch-reuse:1
@ 220 train 7.7548 , allloss: 9.3356, dt: 1163.41ms, fracRes: 0.0116, norm(attn): 0.0962, norm(output): 0.0542, norm(x): 0.0510, norm(y): 0.9969, norm:12.2841, tok/sec: 112661.67, flops:43.89, batch-reuse:1
@ 221 train 7.7452 , allloss: 9.2950, dt: 1170.91ms, fracRes: 0.0139, norm(attn): 0.1001, norm(output): 0.0544, norm(x): 0.0511, norm(y): 0.9969, norm:15.7234, tok/sec: 111940.39, flops:43.61, batch-reuse:1
@ 222 train 7.6934 , allloss: 9.2539, dt: 1158.50ms, fracRes: 0.0133, norm(attn): 0.0996, norm(output): 0.0537, norm(x): 0.0510, norm(y): 0.9969, norm:13.0298, tok/sec: 113139.59, flops:44.08, batch-reuse:1
@ 223 train 7.7209 , allloss: 9.2992, dt: 1150.06ms, fracRes: 0.0113, norm(attn): 0.0986, norm(output): 0.0532, norm(x): 0.0506, norm(y): 0.9968, norm:17.1756, tok/sec: 113969.29, flops:44.40, batch-reuse:1
@ 224 train 7.6454 , allloss: 9.2039, dt: 1148.03ms, fracRes: 0.0137, norm(attn): 0.1001, norm(output): 0.0537, norm(x): 0.0506, norm(y): 0.9968, norm:9.9693, tok/sec: 114171.42, flops:44.48, batch-reuse:1
@ 225 train 7.6690 , allloss: 9.2345, dt: 1153.89ms, fracRes: 0.0134, norm(attn): 0.1006, norm(output): 0.0537, norm(x): 0.0507, norm(y): 0.9968, norm:13.2106, tok/sec: 113591.26, flops:44.26, batch-reuse:1
@ 226 train 7.6932 , allloss: 9.2571, dt: 1177.41ms, fracRes: 0.0124, norm(attn): 0.1011, norm(output): 0.0537, norm(x): 0.0505, norm(y): 0.9968, norm:9.4510, tok/sec: 111322.41, flops:43.37, batch-reuse:1
@ 227 train 7.6977 , allloss: 9.2411, dt: 1188.77ms, fracRes: 0.0147, norm(attn): 0.1016, norm(output): 0.0537, norm(x): 0.0505, norm(y): 0.9968, norm:13.1037, tok/sec: 110258.56, flops:42.96, batch-reuse:1
@ 228 train 7.6611 , allloss: 9.2151, dt: 1177.55ms, fracRes: 0.0130, norm(attn): 0.1016, norm(output): 0.0537, norm(x): 0.0504, norm(y): 0.9967, norm:10.4250, tok/sec: 111308.73, flops:43.37, batch-reuse:1
@ 229 train 7.6925 , allloss: 9.2469, dt: 1172.98ms, fracRes: 0.0119, norm(attn): 0.1021, norm(output): 0.0527, norm(x): 0.0503, norm(y): 0.9967, norm:8.6260, tok/sec: 111742.51, flops:43.53, batch-reuse:1
@ 230 train 7.6833 , allloss: 9.2108, dt: 1176.98ms, fracRes: 0.0151, norm(attn): 0.1055, norm(output): 0.0537, norm(x): 0.0505, norm(y): 0.9967, norm:13.5422, tok/sec: 111362.84, flops:43.39, batch-reuse:1
@ 231 train 7.5980 , allloss: 9.1444, dt: 1177.54ms, fracRes: 0.0125, norm(attn): 0.1035, norm(output): 0.0532, norm(x): 0.0502, norm(y): 0.9967, norm:7.5709, tok/sec: 111310.26, flops:43.37, batch-reuse:1
@ 232 train 7.5915 , allloss: 9.1469, dt: 1179.69ms, fracRes: 0.0123, norm(attn): 0.1035, norm(output): 0.0520, norm(x): 0.0500, norm(y): 0.9966, norm:10.0864, tok/sec: 111106.69, flops:43.29, batch-reuse:1
@ 233 train 7.6389 , allloss: 9.1730, dt: 1160.33ms, fracRes: 0.0151, norm(attn): 0.1074, norm(output): 0.0537, norm(x): 0.0502, norm(y): 0.9966, norm:14.0575, tok/sec: 112960.87, flops:44.01, batch-reuse:1
@ 234 train 7.4896 , allloss: 9.0298, dt: 1181.49ms, fracRes: 0.0127, norm(attn): 0.1089, norm(output): 0.0518, norm(x): 0.0500, norm(y): 0.9966, norm:8.7469, tok/sec: 110937.46, flops:43.22, batch-reuse:1
@ 235 train 7.6153 , allloss: 9.1637, dt: 1161.19ms, fracRes: 0.0116, norm(attn): 0.1074, norm(output): 0.0518, norm(x): 0.0498, norm(y): 0.9966, norm:15.3473, tok/sec: 112877.77, flops:43.98, batch-reuse:1
@ 236 train 7.5060 , allloss: 9.0510, dt: 1187.19ms, fracRes: 0.0131, norm(attn): 0.1074, norm(output): 0.0518, norm(x): 0.0498, norm(y): 0.9966, norm:11.0002, tok/sec: 110405.19, flops:43.01, batch-reuse:1
@ 237 train 7.6004 , allloss: 9.1257, dt: 1188.37ms, fracRes: 0.0156, norm(attn): 0.1089, norm(output): 0.0527, norm(x): 0.0497, norm(y): 0.9965, norm:12.4640, tok/sec: 110295.73, flops:42.97, batch-reuse:1
@ 238 train 7.5576 , allloss: 9.1096, dt: 1160.40ms, fracRes: 0.0127, norm(attn): 0.1084, norm(output): 0.0510, norm(x): 0.0495, norm(y): 0.9965, norm:10.1267, tok/sec: 112954.09, flops:44.01, batch-reuse:1
@ 239 train 7.5627 , allloss: 9.1177, dt: 1170.96ms, fracRes: 0.0133, norm(attn): 0.1089, norm(output): 0.0518, norm(x): 0.0495, norm(y): 0.9965, norm:10.4495, tok/sec: 111935.51, flops:43.61, batch-reuse:1
@ 240 train 7.6137 , allloss: 9.1567, dt: 1177.86ms, fracRes: 0.0130, norm(attn): 0.1094, norm(output): 0.0518, norm(x): 0.0495, norm(y): 0.9965, norm:8.9874, tok/sec: 111279.66, flops:43.35, batch-reuse:1
@ 241 train 7.5653 , allloss: 9.0955, dt: 1191.24ms, fracRes: 0.0131, norm(attn): 0.1113, norm(output): 0.0513, norm(x): 0.0495, norm(y): 0.9964, norm:14.7453, tok/sec: 110029.70, flops:42.87, batch-reuse:1
@ 242 train 7.5972 , allloss: 9.1110, dt: 1190.50ms, fracRes: 0.0148, norm(attn): 0.1152, norm(output): 0.0515, norm(x): 0.0495, norm(y): 0.9964, norm:10.8838, tok/sec: 110098.61, flops:42.89, batch-reuse:1
@ 243 train 7.4359 , allloss: 8.9718, dt: 1183.34ms, fracRes: 0.0141, norm(attn): 0.1113, norm(output): 0.0510, norm(x): 0.0492, norm(y): 0.9964, norm:9.9773, tok/sec: 110764.57, flops:43.15, batch-reuse:1
@ 244 train 7.6106 , allloss: 9.1655, dt: 1180.60ms, fracRes: 0.0128, norm(attn): 0.1099, norm(output): 0.0510, norm(x): 0.0491, norm(y): 0.9964, norm:14.7718, tok/sec: 111021.66, flops:43.25, batch-reuse:1
@ 245 train 7.4649 , allloss: 9.0059, dt: 1177.84ms, fracRes: 0.0143, norm(attn): 0.1113, norm(output): 0.0510, norm(x): 0.0490, norm(y): 0.9963, norm:10.4916, tok/sec: 111281.96, flops:43.36, batch-reuse:1
@ 246 train 7.6564 , allloss: 9.1845, dt: 1194.87ms, fracRes: 0.0146, norm(attn): 0.1157, norm(output): 0.0510, norm(x): 0.0490, norm(y): 0.9963, norm:12.2484, tok/sec: 109695.64, flops:42.74, batch-reuse:1
@ 247 train 7.5563 , allloss: 9.0864, dt: 1180.84ms, fracRes: 0.0144, norm(attn): 0.1167, norm(output): 0.0510, norm(x): 0.0490, norm(y): 0.9963, norm:11.8473, tok/sec: 110998.52, flops:43.25, batch-reuse:1
@ 248 train 7.4894 , allloss: 9.0098, dt: 1193.43ms, fracRes: 0.0146, norm(attn): 0.1167, norm(output): 0.0510, norm(x): 0.0489, norm(y): 0.9963, norm:8.0040, tok/sec: 109827.80, flops:42.79, batch-reuse:1
@ 249 train 7.4585 , allloss: 8.9724, dt: 1168.47ms, fracRes: 0.0154, norm(attn): 0.1172, norm(output): 0.0510, norm(x): 0.0487, norm(y): 0.9962, norm:11.1196, tok/sec: 112174.51, flops:43.70, batch-reuse:1
@ 250 train 7.5008 , allloss: 9.0291, dt: 1164.28ms, fracRes: 0.0152, norm(attn): 0.1167, norm(output): 0.0510, norm(x): 0.0486, norm(y): 0.9962, norm:11.5004, tok/sec: 112578.01, flops:43.86, batch-reuse:1
@ 251 train 7.4144 , allloss: 8.9352, dt: 1166.06ms, fracRes: 0.0161, norm(attn): 0.1177, norm(output): 0.0508, norm(x): 0.0483, norm(y): 0.9962, norm:8.9349, tok/sec: 112406.16, flops:43.79, batch-reuse:1
@ 252 train 7.5683 , allloss: 9.0799, dt: 1181.73ms, fracRes: 0.0169, norm(attn): 0.1177, norm(output): 0.0508, norm(x): 0.0483, norm(y): 0.9961, norm:7.8313, tok/sec: 110915.33, flops:43.21, batch-reuse:1
@ 253 train 7.4189 , allloss: 8.9171, dt: 1199.56ms, fracRes: 0.0162, norm(attn): 0.1187, norm(output): 0.0510, norm(x): 0.0483, norm(y): 0.9961, norm:13.0539, tok/sec: 109266.39, flops:42.57, batch-reuse:1
@ 254 train 7.3779 , allloss: 8.8636, dt: 1160.77ms, fracRes: 0.0159, norm(attn): 0.1230, norm(output): 0.0508, norm(x): 0.0481, norm(y): 0.9961, norm:9.7957, tok/sec: 112918.04, flops:43.99, batch-reuse:1
@ 255 train 7.4174 , allloss: 8.9049, dt: 1175.89ms, fracRes: 0.0183, norm(attn): 0.1230, norm(output): 0.0508, norm(x): 0.0482, norm(y): 0.9961, norm:13.1668, tok/sec: 111466.35, flops:43.43, batch-reuse:1
@ 256 train 7.4268 , allloss: 8.9365, dt: 1163.93ms, fracRes: 0.0168, norm(attn): 0.1221, norm(output): 0.0508, norm(x): 0.0480, norm(y): 0.9960, norm:10.1388, tok/sec: 112611.96, flops:43.87, batch-reuse:1
@ 257 train 7.4687 , allloss: 8.9732, dt: 1156.57ms, fracRes: 0.0167, norm(attn): 0.1235, norm(output): 0.0505, norm(x): 0.0477, norm(y): 0.9960, norm:14.9294, tok/sec: 113327.79, flops:44.15, batch-reuse:1
@ 258 train 7.4053 , allloss: 8.8989, dt: 1169.13ms, fracRes: 0.0194, norm(attn): 0.1245, norm(output): 0.0505, norm(x): 0.0476, norm(y): 0.9960, norm:8.6449, tok/sec: 112110.98, flops:43.68, batch-reuse:1
@ 259 train 7.4118 , allloss: 8.9229, dt: 1161.63ms, fracRes: 0.0171, norm(attn): 0.1245, norm(output): 0.0505, norm(x): 0.0476, norm(y): 0.9960, norm:14.0696, tok/sec: 112834.47, flops:43.96, batch-reuse:1
@ 260 train 7.4938 , allloss: 8.9837, dt: 1162.57ms, fracRes: 0.0194, norm(attn): 0.1250, norm(output): 0.0505, norm(x): 0.0477, norm(y): 0.9959, norm:8.2619, tok/sec: 112743.34, flops:43.92, batch-reuse:1
@ 261 train 7.4284 , allloss: 8.8921, dt: 1159.62ms, fracRes: 0.0216, norm(attn): 0.1270, norm(output): 0.0505, norm(x): 0.0476, norm(y): 0.9959, norm:11.2528, tok/sec: 113029.73, flops:44.04, batch-reuse:1
@ 262 train 7.4522 , allloss: 8.9247, dt: 1172.68ms, fracRes: 0.0187, norm(attn): 0.1299, norm(output): 0.0503, norm(x): 0.0474, norm(y): 0.9959, norm:8.8565, tok/sec: 111770.97, flops:43.55, batch-reuse:1
@ 263 train 7.4108 , allloss: 8.8927, dt: 1161.39ms, fracRes: 0.0203, norm(attn): 0.1270, norm(output): 0.0503, norm(x): 0.0473, norm(y): 0.9959, norm:8.4739, tok/sec: 112857.51, flops:43.97, batch-reuse:1
@ 264 train 7.4021 , allloss: 8.8919, dt: 1181.34ms, fracRes: 0.0202, norm(attn): 0.1270, norm(output): 0.0503, norm(x): 0.0471, norm(y): 0.9958, norm:10.4988, tok/sec: 110951.57, flops:43.23, batch-reuse:1
@ 265 train 7.4009 , allloss: 8.8824, dt: 1180.60ms, fracRes: 0.0204, norm(attn): 0.1309, norm(output): 0.0498, norm(x): 0.0470, norm(y): 0.9958, norm:11.0670, tok/sec: 111021.68, flops:43.25, batch-reuse:1
@ 266 train 7.3720 , allloss: 8.8314, dt: 1194.11ms, fracRes: 0.0209, norm(attn): 0.1328, norm(output): 0.0498, norm(x): 0.0469, norm(y): 0.9957, norm:7.5850, tok/sec: 109765.72, flops:42.76, batch-reuse:1
@ 267 train 7.3656 , allloss: 8.8090, dt: 1175.27ms, fracRes: 0.0221, norm(attn): 0.1338, norm(output): 0.0498, norm(x): 0.0469, norm(y): 0.9957, norm:10.7872, tok/sec: 111525.09, flops:43.45, batch-reuse:1
@ 268 train 7.4486 , allloss: 8.8949, dt: 1198.99ms, fracRes: 0.0220, norm(attn): 0.1348, norm(output): 0.0503, norm(x): 0.0469, norm(y): 0.9957, norm:9.9088, tok/sec: 109318.60, flops:42.59, batch-reuse:1
@ 269 train 7.3825 , allloss: 8.8309, dt: 1194.00ms, fracRes: 0.0221, norm(attn): 0.1338, norm(output): 0.0498, norm(x): 0.0467, norm(y): 0.9957, norm:8.4541, tok/sec: 109775.32, flops:42.77, batch-reuse:1
@ 270 train 7.4617 , allloss: 8.8875, dt: 1191.90ms, fracRes: 0.0272, norm(attn): 0.1387, norm(output): 0.0498, norm(x): 0.0467, norm(y): 0.9956, norm:13.5408, tok/sec: 109969.02, flops:42.84, batch-reuse:1
@ 271 train 7.3395 , allloss: 8.7806, dt: 1194.45ms, fracRes: 0.0239, norm(attn): 0.1387, norm(output): 0.0488, norm(x): 0.0464, norm(y): 0.9956, norm:7.9707, tok/sec: 109734.09, flops:42.75, batch-reuse:1
@ 272 train 7.3668 , allloss: 8.8178, dt: 1186.94ms, fracRes: 0.0216, norm(attn): 0.1387, norm(output): 0.0481, norm(x): 0.0463, norm(y): 0.9956, norm:16.6320, tok/sec: 110428.43, flops:43.02, batch-reuse:1
@ 273 train 7.4963 , allloss: 8.9300, dt: 1168.43ms, fracRes: 0.0235, norm(attn): 0.1406, norm(output): 0.0481, norm(x): 0.0462, norm(y): 0.9955, norm:8.1996, tok/sec: 112177.60, flops:43.70, batch-reuse:1
@ 274 train 7.3738 , allloss: 8.7782, dt: 1169.61ms, fracRes: 0.0294, norm(attn): 0.1416, norm(output): 0.0493, norm(x): 0.0462, norm(y): 0.9955, norm:14.9226, tok/sec: 112064.50, flops:43.66, batch-reuse:1
@ 275 train 7.3578 , allloss: 8.7688, dt: 1186.69ms, fracRes: 0.0282, norm(attn): 0.1426, norm(output): 0.0483, norm(x): 0.0460, norm(y): 0.9955, norm:10.0444, tok/sec: 110452.22, flops:43.03, batch-reuse:1
@ 276 train 7.3455 , allloss: 8.7826, dt: 1183.84ms, fracRes: 0.0238, norm(attn): 0.1416, norm(output): 0.0479, norm(x): 0.0457, norm(y): 0.9954, norm:12.9069, tok/sec: 110717.77, flops:43.14, batch-reuse:1
@ 277 train 7.2465 , allloss: 8.6812, dt: 1169.40ms, fracRes: 0.0256, norm(attn): 0.1416, norm(output): 0.0479, norm(x): 0.0456, norm(y): 0.9954, norm:9.9114, tok/sec: 112084.83, flops:43.67, batch-reuse:1
@ 278 train 7.3314 , allloss: 8.7514, dt: 1161.69ms, fracRes: 0.0295, norm(attn): 0.1455, norm(output): 0.0483, norm(x): 0.0456, norm(y): 0.9954, norm:9.2716, tok/sec: 112828.45, flops:43.96, batch-reuse:1
@ 279 train 7.2752 , allloss: 8.6996, dt: 1195.26ms, fracRes: 0.0287, norm(attn): 0.1465, norm(output): 0.0481, norm(x): 0.0455, norm(y): 0.9953, norm:8.2453, tok/sec: 109659.91, flops:42.72, batch-reuse:1
@ 280 train 7.3948 , allloss: 8.8251, dt: 1198.36ms, fracRes: 0.0265, norm(attn): 0.1465, norm(output): 0.0476, norm(x): 0.0454, norm(y): 0.9953, norm:10.9434, tok/sec: 109375.89, flops:42.61, batch-reuse:1
@ 281 train 7.2814 , allloss: 8.6970, dt: 1183.84ms, fracRes: 0.0302, norm(attn): 0.1465, norm(output): 0.0474, norm(x): 0.0454, norm(y): 0.9953, norm:10.8113, tok/sec: 110717.93, flops:43.14, batch-reuse:1
@ 282 train 7.2446 , allloss: 8.6564, dt: 1179.30ms, fracRes: 0.0298, norm(attn): 0.1484, norm(output): 0.0474, norm(x): 0.0453, norm(y): 0.9953, norm:8.2526, tok/sec: 111143.67, flops:43.30, batch-reuse:1
@ 283 train 7.2041 , allloss: 8.6172, dt: 1163.42ms, fracRes: 0.0313, norm(attn): 0.1475, norm(output): 0.0474, norm(x): 0.0451, norm(y): 0.9952, norm:6.3793, tok/sec: 112661.04, flops:43.89, batch-reuse:1
@ 284 train 7.3115 , allloss: 8.7191, dt: 1183.52ms, fracRes: 0.0290, norm(attn): 0.1514, norm(output): 0.0476, norm(x): 0.0449, norm(y): 0.9952, norm:7.0688, tok/sec: 110747.44, flops:43.15, batch-reuse:1
@ 285 train 7.3184 , allloss: 8.7128, dt: 1185.39ms, fracRes: 0.0302, norm(attn): 0.1543, norm(output): 0.0471, norm(x): 0.0449, norm(y): 0.9951, norm:8.4799, tok/sec: 110572.69, flops:43.08, batch-reuse:1
@ 286 train 7.3192 , allloss: 8.6940, dt: 1159.45ms, fracRes: 0.0322, norm(attn): 0.1562, norm(output): 0.0474, norm(x): 0.0448, norm(y): 0.9951, norm:7.7465, tok/sec: 113046.42, flops:44.04, batch-reuse:1
@ 287 train 7.3110 , allloss: 8.6947, dt: 1164.78ms, fracRes: 0.0300, norm(attn): 0.1572, norm(output): 0.0469, norm(x): 0.0445, norm(y): 0.9951, norm:9.8495, tok/sec: 112529.23, flops:43.84, batch-reuse:1
@ 288 train 7.3270 , allloss: 8.7135, dt: 1166.48ms, fracRes: 0.0335, norm(attn): 0.1562, norm(output): 0.0471, norm(x): 0.0444, norm(y): 0.9950, norm:7.8664, tok/sec: 112365.24, flops:43.78, batch-reuse:1
@ 289 train 7.2930 , allloss: 8.6724, dt: 1158.59ms, fracRes: 0.0333, norm(attn): 0.1572, norm(output): 0.0469, norm(x): 0.0443, norm(y): 0.9950, norm:6.8671, tok/sec: 113131.07, flops:44.08, batch-reuse:1
@ 290 train 7.2631 , allloss: 8.6159, dt: 1176.98ms, fracRes: 0.0341, norm(attn): 0.1621, norm(output): 0.0466, norm(x): 0.0441, norm(y): 0.9950, norm:7.9370, tok/sec: 111362.59, flops:43.39, batch-reuse:1
@ 291 train 7.1863 , allloss: 8.5435, dt: 1192.37ms, fracRes: 0.0337, norm(attn): 0.1611, norm(output): 0.0469, norm(x): 0.0442, norm(y): 0.9949, norm:10.5079, tok/sec: 109925.95, flops:42.83, batch-reuse:1
@ 292 train 7.2204 , allloss: 8.5725, dt: 1179.73ms, fracRes: 0.0331, norm(attn): 0.1621, norm(output): 0.0469, norm(x): 0.0440, norm(y): 0.9949, norm:11.2241, tok/sec: 111103.26, flops:43.29, batch-reuse:1
@ 293 train 7.2897 , allloss: 8.6227, dt: 1197.59ms, fracRes: 0.0370, norm(attn): 0.1670, norm(output): 0.0469, norm(x): 0.0438, norm(y): 0.9949, norm:10.5821, tok/sec: 109446.81, flops:42.64, batch-reuse:1
@ 294 train 7.2381 , allloss: 8.5779, dt: 1169.95ms, fracRes: 0.0344, norm(attn): 0.1689, norm(output): 0.0466, norm(x): 0.0437, norm(y): 0.9948, norm:6.5758, tok/sec: 112032.11, flops:43.65, batch-reuse:1
@ 295 train 7.2859 , allloss: 8.6274, dt: 1177.84ms, fracRes: 0.0345, norm(attn): 0.1709, norm(output): 0.0466, norm(x): 0.0437, norm(y): 0.9948, norm:15.4442, tok/sec: 111281.22, flops:43.36, batch-reuse:1
@ 296 train 7.1621 , allloss: 8.4984, dt: 1178.97ms, fracRes: 0.0379, norm(attn): 0.1709, norm(output): 0.0466, norm(x): 0.0436, norm(y): 0.9948, norm:8.8395, tok/sec: 111174.73, flops:43.31, batch-reuse:1
@ 297 train 7.1270 , allloss: 8.4489, dt: 1163.19ms, fracRes: 0.0404, norm(attn): 0.1719, norm(output): 0.0466, norm(x): 0.0434, norm(y): 0.9947, norm:10.9217, tok/sec: 112683.30, flops:43.90, batch-reuse:1
@ 298 train 7.2547 , allloss: 8.5860, dt: 1178.63ms, fracRes: 0.0364, norm(attn): 0.1719, norm(output): 0.0461, norm(x): 0.0432, norm(y): 0.9947, norm:11.2224, tok/sec: 111207.54, flops:43.33, batch-reuse:1
@ 299 train 7.2355 , allloss: 8.5660, dt: 1156.36ms, fracRes: 0.0381, norm(attn): 0.1729, norm(output): 0.0466, norm(x): 0.0433, norm(y): 0.9947, norm:7.2587, tok/sec: 113349.21, flops:44.16, batch-reuse:1
@ 300 train 7.2032 , allloss: 8.5294, dt: 1198.18ms, fracRes: 0.0373, norm(attn): 0.1729, norm(output): 0.0459, norm(x): 0.0432, norm(y): 0.9946, norm:7.0402, tok/sec: 109392.60, flops:42.62, batch-reuse:1
@ 301 train 7.3747 , allloss: 8.7020, dt: 1215.02ms, fracRes: 0.0383, norm(attn): 0.1729, norm(output): 0.0457, norm(x): 0.0430, norm(y): 0.9946, norm:5.1781, tok/sec: 107876.65, flops:42.03, batch-reuse:1
@ 302 train 7.1962 , allloss: 8.5178, dt: 1221.31ms, fracRes: 0.0406, norm(attn): 0.1758, norm(output): 0.0457, norm(x): 0.0428, norm(y): 0.9945, norm:8.5298, tok/sec: 107321.00, flops:41.81, batch-reuse:1
@ 303 train 7.2172 , allloss: 8.5316, dt: 1210.83ms, fracRes: 0.0403, norm(attn): 0.1816, norm(output): 0.0464, norm(x): 0.0427, norm(y): 0.9945, norm:7.4003, tok/sec: 108249.80, flops:42.17, batch-reuse:1
@ 304 train 7.1875 , allloss: 8.4952, dt: 1207.98ms, fracRes: 0.0403, norm(attn): 0.1787, norm(output): 0.0461, norm(x): 0.0426, norm(y): 0.9945, norm:6.9002, tok/sec: 108505.18, flops:42.27, batch-reuse:1
@ 305 train 7.1100 , allloss: 8.4134, dt: 1173.92ms, fracRes: 0.0390, norm(attn): 0.1846, norm(output): 0.0457, norm(x): 0.0425, norm(y): 0.9944, norm:10.1567, tok/sec: 111653.14, flops:43.50, batch-reuse:1
@ 306 train 7.1108 , allloss: 8.4100, dt: 1157.48ms, fracRes: 0.0412, norm(attn): 0.1865, norm(output): 0.0454, norm(x): 0.0424, norm(y): 0.9944, norm:7.6885, tok/sec: 113238.76, flops:44.12, batch-reuse:1
@ 307 train 7.3247 , allloss: 8.6325, dt: 1176.87ms, fracRes: 0.0402, norm(attn): 0.1816, norm(output): 0.0457, norm(x): 0.0425, norm(y): 0.9944, norm:8.4152, tok/sec: 111373.38, flops:43.39, batch-reuse:1
@ 308 train 7.1636 , allloss: 8.4668, dt: 1198.00ms, fracRes: 0.0411, norm(attn): 0.1826, norm(output): 0.0454, norm(x): 0.0423, norm(y): 0.9943, norm:8.4181, tok/sec: 109409.30, flops:42.63, batch-reuse:1
@ 309 train 7.2027 , allloss: 8.4857, dt: 1191.82ms, fracRes: 0.0442, norm(attn): 0.1885, norm(output): 0.0454, norm(x): 0.0422, norm(y): 0.9943, norm:11.8234, tok/sec: 109976.59, flops:42.85, batch-reuse:1
@ 310 train 7.2616 , allloss: 8.5448, dt: 1190.59ms, fracRes: 0.0441, norm(attn): 0.1895, norm(output): 0.0454, norm(x): 0.0421, norm(y): 0.9943, norm:8.1499, tok/sec: 110090.07, flops:42.89, batch-reuse:1
@ 311 train 7.2625 , allloss: 8.5642, dt: 1177.97ms, fracRes: 0.0407, norm(attn): 0.1875, norm(output): 0.0454, norm(x): 0.0420, norm(y): 0.9942, norm:13.7037, tok/sec: 111269.35, flops:43.35, batch-reuse:1
@ 312 train 7.3477 , allloss: 8.6510, dt: 1200.97ms, fracRes: 0.0413, norm(attn): 0.1875, norm(output): 0.0454, norm(x): 0.0421, norm(y): 0.9942, norm:8.6165, tok/sec: 109138.56, flops:42.52, batch-reuse:1
@ 313 train 7.1256 , allloss: 8.4122, dt: 1203.24ms, fracRes: 0.0464, norm(attn): 0.1904, norm(output): 0.0454, norm(x): 0.0420, norm(y): 0.9942, norm:8.4042, tok/sec: 108932.73, flops:42.44, batch-reuse:1
@ 314 train 7.1462 , allloss: 8.4173, dt: 1190.34ms, fracRes: 0.0470, norm(attn): 0.1934, norm(output): 0.0454, norm(x): 0.0418, norm(y): 0.9941, norm:13.9421, tok/sec: 110112.81, flops:42.90, batch-reuse:1
@ 315 train 7.1741 , allloss: 8.4455, dt: 1178.22ms, fracRes: 0.0460, norm(attn): 0.1934, norm(output): 0.0444, norm(x): 0.0417, norm(y): 0.9941, norm:6.2200, tok/sec: 111246.02, flops:43.34, batch-reuse:1
@ 316 train 7.2010 , allloss: 8.4990, dt: 1205.44ms, fracRes: 0.0412, norm(attn): 0.1953, norm(output): 0.0442, norm(x): 0.0416, norm(y): 0.9941, norm:12.5968, tok/sec: 108733.48, flops:42.36, batch-reuse:1
@ 317 train 7.2203 , allloss: 8.5232, dt: 1188.69ms, fracRes: 0.0421, norm(attn): 0.1934, norm(output): 0.0442, norm(x): 0.0415, norm(y): 0.9940, norm:9.8758, tok/sec: 110266.33, flops:42.96, batch-reuse:1
@ 318 train 7.1071 , allloss: 8.3924, dt: 1169.65ms, fracRes: 0.0487, norm(attn): 0.1914, norm(output): 0.0442, norm(x): 0.0415, norm(y): 0.9940, norm:11.3231, tok/sec: 112061.19, flops:43.66, batch-reuse:1
@ 319 train 7.0572 , allloss: 8.3480, dt: 1160.03ms, fracRes: 0.0465, norm(attn): 0.1934, norm(output): 0.0442, norm(x): 0.0414, norm(y): 0.9940, norm:8.9828, tok/sec: 112989.77, flops:44.02, batch-reuse:1
@ 320 train 7.1294 , allloss: 8.4068, dt: 1151.79ms, fracRes: 0.0440, norm(attn): 0.2031, norm(output): 0.0442, norm(x): 0.0413, norm(y): 0.9939, norm:8.0854, tok/sec: 113798.08, flops:44.34, batch-reuse:1
@ 321 train 7.1765 , allloss: 8.4460, dt: 1165.70ms, fracRes: 0.0436, norm(attn): 0.2051, norm(output): 0.0432, norm(x): 0.0411, norm(y): 0.9939, norm:8.5089, tok/sec: 112440.57, flops:43.81, batch-reuse:1
@ 322 train 7.0752 , allloss: 8.3526, dt: 1158.32ms, fracRes: 0.0440, norm(attn): 0.2031, norm(output): 0.0439, norm(x): 0.0411, norm(y): 0.9939, norm:9.7673, tok/sec: 113156.69, flops:44.09, batch-reuse:1
@ 323 train 7.1646 , allloss: 8.4372, dt: 1170.74ms, fracRes: 0.0500, norm(attn): 0.2021, norm(output): 0.0442, norm(x): 0.0411, norm(y): 0.9939, norm:7.2712, tok/sec: 111956.23, flops:43.62, batch-reuse:1
@ 324 train 7.0823 , allloss: 8.3653, dt: 1170.12ms, fracRes: 0.0463, norm(attn): 0.2031, norm(output): 0.0435, norm(x): 0.0409, norm(y): 0.9938, norm:7.1787, tok/sec: 112015.43, flops:43.64, batch-reuse:1
@ 325 train 7.1315 , allloss: 8.4000, dt: 1185.56ms, fracRes: 0.0452, norm(attn): 0.2070, norm(output): 0.0432, norm(x): 0.0408, norm(y): 0.9938, norm:9.9711, tok/sec: 110556.75, flops:43.07, batch-reuse:1
@ 326 train 7.1804 , allloss: 8.4364, dt: 1152.81ms, fracRes: 0.0441, norm(attn): 0.2129, norm(output): 0.0432, norm(x): 0.0406, norm(y): 0.9937, norm:9.9493, tok/sec: 113698.13, flops:44.30, batch-reuse:1
@ 327 train 7.2319 , allloss: 8.4683, dt: 1184.38ms, fracRes: 0.0477, norm(attn): 0.2178, norm(output): 0.0432, norm(x): 0.0405, norm(y): 0.9937, norm:7.0005, tok/sec: 110666.98, flops:43.12, batch-reuse:1
@ 328 train 7.0985 , allloss: 8.3616, dt: 1159.11ms, fracRes: 0.0416, norm(attn): 0.2178, norm(output): 0.0430, norm(x): 0.0403, norm(y): 0.9936, norm:9.9612, tok/sec: 113079.53, flops:44.06, batch-reuse:1
@ 329 train 7.1260 , allloss: 8.3932, dt: 1180.56ms, fracRes: 0.0457, norm(attn): 0.2129, norm(output): 0.0430, norm(x): 0.0403, norm(y): 0.9936, norm:7.6495, tok/sec: 111025.18, flops:43.26, batch-reuse:1
@ 330 train 7.0860 , allloss: 8.3472, dt: 1166.67ms, fracRes: 0.0494, norm(attn): 0.2090, norm(output): 0.0432, norm(x): 0.0403, norm(y): 0.9936, norm:7.0833, tok/sec: 112347.08, flops:43.77, batch-reuse:1
@ 331 train 7.0330 , allloss: 8.2942, dt: 1176.21ms, fracRes: 0.0442, norm(attn): 0.2148, norm(output): 0.0432, norm(x): 0.0402, norm(y): 0.9935, norm:7.8910, tok/sec: 111435.44, flops:43.42, batch-reuse:1
@ 332 train 7.0414 , allloss: 8.2849, dt: 1189.12ms, fracRes: 0.0459, norm(attn): 0.2197, norm(output): 0.0430, norm(x): 0.0401, norm(y): 0.9935, norm:8.0745, tok/sec: 110225.89, flops:42.94, batch-reuse:1
@ 333 train 7.0920 , allloss: 8.3336, dt: 1207.04ms, fracRes: 0.0456, norm(attn): 0.2197, norm(output): 0.0427, norm(x): 0.0400, norm(y): 0.9934, norm:7.5431, tok/sec: 108589.97, flops:42.31, batch-reuse:1
@ 334 train 7.0315 , allloss: 8.2772, dt: 1168.07ms, fracRes: 0.0451, norm(attn): 0.2188, norm(output): 0.0430, norm(x): 0.0400, norm(y): 0.9934, norm:7.8638, tok/sec: 112212.63, flops:43.72, batch-reuse:1
@ 335 train 7.0120 , allloss: 8.2434, dt: 1183.00ms, fracRes: 0.0506, norm(attn): 0.2197, norm(output): 0.0430, norm(x): 0.0399, norm(y): 0.9934, norm:9.1610, tok/sec: 110796.23, flops:43.17, batch-reuse:1
@ 336 train 7.0524 , allloss: 8.3005, dt: 1191.57ms, fracRes: 0.0471, norm(attn): 0.2197, norm(output): 0.0430, norm(x): 0.0398, norm(y): 0.9933, norm:6.0303, tok/sec: 109999.58, flops:42.86, batch-reuse:1
@ 337 train 7.0456 , allloss: 8.3079, dt: 1197.29ms, fracRes: 0.0418, norm(attn): 0.2197, norm(output): 0.0427, norm(x): 0.0396, norm(y): 0.9933, norm:11.0403, tok/sec: 109473.90, flops:42.65, batch-reuse:1
@ 338 train 7.0173 , allloss: 8.2516, dt: 1184.06ms, fracRes: 0.0467, norm(attn): 0.2295, norm(output): 0.0427, norm(x): 0.0395, norm(y): 0.9932, norm:8.8341, tok/sec: 110696.82, flops:43.13, batch-reuse:1
@ 339 train 7.0964 , allloss: 8.3262, dt: 1164.93ms, fracRes: 0.0481, norm(attn): 0.2227, norm(output): 0.0427, norm(x): 0.0396, norm(y): 0.9932, norm:7.3199, tok/sec: 112514.86, flops:43.84, batch-reuse:1
@ 340 train 7.1107 , allloss: 8.3508, dt: 1183.83ms, fracRes: 0.0444, norm(attn): 0.2246, norm(output): 0.0427, norm(x): 0.0394, norm(y): 0.9932, norm:9.7302, tok/sec: 110718.87, flops:43.14, batch-reuse:1
@ 341 train 7.0258 , allloss: 8.2532, dt: 1193.36ms, fracRes: 0.0457, norm(attn): 0.2324, norm(output): 0.0425, norm(x): 0.0392, norm(y): 0.9932, norm:9.3147, tok/sec: 109834.08, flops:42.79, batch-reuse:1
@ 342 train 6.9350 , allloss: 8.1737, dt: 1156.92ms, fracRes: 0.0447, norm(attn): 0.2285, norm(output): 0.0427, norm(x): 0.0393, norm(y): 0.9931, norm:7.8125, tok/sec: 113294.27, flops:44.14, batch-reuse:1
@ 343 train 7.0025 , allloss: 8.2385, dt: 1175.94ms, fracRes: 0.0441, norm(attn): 0.2314, norm(output): 0.0425, norm(x): 0.0392, norm(y): 0.9931, norm:7.5773, tok/sec: 111461.87, flops:43.43, batch-reuse:1
@ 344 train 6.9639 , allloss: 8.2001, dt: 1180.24ms, fracRes: 0.0440, norm(attn): 0.2334, norm(output): 0.0425, norm(x): 0.0393, norm(y): 0.9931, norm:9.2740, tok/sec: 111055.66, flops:43.27, batch-reuse:1
@ 345 train 6.9838 , allloss: 8.2370, dt: 1163.46ms, fracRes: 0.0413, norm(attn): 0.2295, norm(output): 0.0425, norm(x): 0.0393, norm(y): 0.9930, norm:13.2411, tok/sec: 112657.35, flops:43.89, batch-reuse:1
@ 346 train 7.0555 , allloss: 8.2956, dt: 1180.26ms, fracRes: 0.0438, norm(attn): 0.2314, norm(output): 0.0427, norm(x): 0.0392, norm(y): 0.9930, norm:6.7845, tok/sec: 111053.86, flops:43.27, batch-reuse:1
@ 347 train 7.0515 , allloss: 8.2787, dt: 1174.09ms, fracRes: 0.0446, norm(attn): 0.2344, norm(output): 0.0417, norm(x): 0.0390, norm(y): 0.9930, norm:7.7061, tok/sec: 111637.15, flops:43.49, batch-reuse:1
@ 348 train 6.9990 , allloss: 8.2382, dt: 1155.85ms, fracRes: 0.0407, norm(attn): 0.2344, norm(output): 0.0415, norm(x): 0.0389, norm(y): 0.9929, norm:7.9825, tok/sec: 113398.41, flops:44.18, batch-reuse:1
@ 349 train 7.0192 , allloss: 8.2829, dt: 1159.86ms, fracRes: 0.0377, norm(attn): 0.2324, norm(output): 0.0415, norm(x): 0.0389, norm(y): 0.9929, norm:9.4667, tok/sec: 113006.57, flops:44.03, batch-reuse:1
@ 350 train 7.0571 , allloss: 8.2816, dt: 1177.04ms, fracRes: 0.0464, norm(attn): 0.2344, norm(output): 0.0415, norm(x): 0.0387, norm(y): 0.9928, norm:6.8848, tok/sec: 111357.36, flops:43.38, batch-reuse:1
@ 351 train 7.0528 , allloss: 8.2712, dt: 1201.76ms, fracRes: 0.0448, norm(attn): 0.2354, norm(output): 0.0417, norm(x): 0.0387, norm(y): 0.9928, norm:5.9909, tok/sec: 109067.09, flops:42.49, batch-reuse:1
@ 352 train 7.0920 , allloss: 8.3346, dt: 1192.38ms, fracRes: 0.0384, norm(attn): 0.2334, norm(output): 0.0415, norm(x): 0.0388, norm(y): 0.9928, norm:9.4083, tok/sec: 109924.58, flops:42.83, batch-reuse:1
@ 353 train 7.0256 , allloss: 8.2563, dt: 1192.38ms, fracRes: 0.0405, norm(attn): 0.2412, norm(output): 0.0415, norm(x): 0.0386, norm(y): 0.9927, norm:9.0830, tok/sec: 109924.50, flops:42.83, batch-reuse:1
@ 354 train 6.9655 , allloss: 8.1899, dt: 1195.96ms, fracRes: 0.0427, norm(attn): 0.2412, norm(output): 0.0413, norm(x): 0.0386, norm(y): 0.9927, norm:8.0607, tok/sec: 109595.72, flops:42.70, batch-reuse:1
@ 355 train 6.9523 , allloss: 8.1883, dt: 1172.60ms, fracRes: 0.0418, norm(attn): 0.2363, norm(output): 0.0417, norm(x): 0.0386, norm(y): 0.9927, norm:8.4601, tok/sec: 111779.11, flops:43.55, batch-reuse:1
@ 356 train 7.0686 , allloss: 8.3196, dt: 1164.42ms, fracRes: 0.0379, norm(attn): 0.2344, norm(output): 0.0415, norm(x): 0.0386, norm(y): 0.9927, norm:7.3357, tok/sec: 112564.27, flops:43.86, batch-reuse:1
@ 357 train 7.0352 , allloss: 8.2599, dt: 1179.16ms, fracRes: 0.0398, norm(attn): 0.2451, norm(output): 0.0408, norm(x): 0.0383, norm(y): 0.9926, norm:11.2890, tok/sec: 111156.72, flops:43.31, batch-reuse:1
@ 358 train 6.9337 , allloss: 8.1591, dt: 1190.56ms, fracRes: 0.0394, norm(attn): 0.2461, norm(output): 0.0415, norm(x): 0.0384, norm(y): 0.9926, norm:8.7553, tok/sec: 110092.81, flops:42.89, batch-reuse:1
@ 359 train 7.2174 , allloss: 8.4355, dt: 1173.56ms, fracRes: 0.0411, norm(attn): 0.2373, norm(output): 0.0415, norm(x): 0.0387, norm(y): 0.9926, norm:8.7997, tok/sec: 111687.41, flops:43.51, batch-reuse:1
@ 360 train 7.0230 , allloss: 8.2483, dt: 1171.74ms, fracRes: 0.0383, norm(attn): 0.2402, norm(output): 0.0413, norm(x): 0.0384, norm(y): 0.9925, norm:9.9800, tok/sec: 111860.56, flops:43.58, batch-reuse:1
@ 361 train 7.0377 , allloss: 8.2545, dt: 1162.59ms, fracRes: 0.0419, norm(attn): 0.2490, norm(output): 0.0405, norm(x): 0.0382, norm(y): 0.9924, norm:12.5033, tok/sec: 112741.38, flops:43.92, batch-reuse:1
@ 362 train 6.9076 , allloss: 8.1274, dt: 1175.98ms, fracRes: 0.0420, norm(attn): 0.2520, norm(output): 0.0405, norm(x): 0.0380, norm(y): 0.9924, norm:12.3958, tok/sec: 111457.35, flops:43.42, batch-reuse:1
@ 363 train 6.9499 , allloss: 8.2024, dt: 1150.97ms, fracRes: 0.0379, norm(attn): 0.2373, norm(output): 0.0415, norm(x): 0.0384, norm(y): 0.9924, norm:6.8028, tok/sec: 113879.22, flops:44.37, batch-reuse:1
@ 364 train 6.9881 , allloss: 8.2592, dt: 1213.86ms, fracRes: 0.0351, norm(attn): 0.2373, norm(output): 0.0405, norm(x): 0.0384, norm(y): 0.9924, norm:10.7770, tok/sec: 107979.75, flops:42.07, batch-reuse:1
@ 365 train 6.9681 , allloss: 8.2265, dt: 1201.22ms, fracRes: 0.0338, norm(attn): 0.2490, norm(output): 0.0405, norm(x): 0.0380, norm(y): 0.9923, norm:7.5410, tok/sec: 109116.12, flops:42.51, batch-reuse:1
@ 366 train 7.0125 , allloss: 8.2458, dt: 1201.08ms, fracRes: 0.0374, norm(attn): 0.2539, norm(output): 0.0405, norm(x): 0.0379, norm(y): 0.9923, norm:8.6635, tok/sec: 109128.51, flops:42.52, batch-reuse:1
@ 367 train 6.9027 , allloss: 8.1316, dt: 1202.82ms, fracRes: 0.0363, norm(attn): 0.2520, norm(output): 0.0405, norm(x): 0.0379, norm(y): 0.9923, norm:9.8000, tok/sec: 108970.49, flops:42.45, batch-reuse:1
@ 368 train 7.0285 , allloss: 8.2639, dt: 1166.55ms, fracRes: 0.0364, norm(attn): 0.2500, norm(output): 0.0405, norm(x): 0.0379, norm(y): 0.9922, norm:9.9467, tok/sec: 112359.11, flops:43.78, batch-reuse:1
@ 369 train 6.9618 , allloss: 8.2006, dt: 1175.04ms, fracRes: 0.0350, norm(attn): 0.2500, norm(output): 0.0405, norm(x): 0.0379, norm(y): 0.9922, norm:12.9477, tok/sec: 111546.48, flops:43.46, batch-reuse:1
@ 370 train 7.0546 , allloss: 8.3071, dt: 1160.69ms, fracRes: 0.0355, norm(attn): 0.2461, norm(output): 0.0405, norm(x): 0.0381, norm(y): 0.9922, norm:7.3327, tok/sec: 112926.41, flops:44.00, batch-reuse:1
@ 371 train 6.9813 , allloss: 8.2172, dt: 1173.41ms, fracRes: 0.0360, norm(attn): 0.2520, norm(output): 0.0403, norm(x): 0.0378, norm(y): 0.9921, norm:9.3954, tok/sec: 111701.62, flops:43.52, batch-reuse:1
@ 372 train 7.0639 , allloss: 8.2836, dt: 1165.00ms, fracRes: 0.0374, norm(attn): 0.2578, norm(output): 0.0405, norm(x): 0.0376, norm(y): 0.9921, norm:7.2559, tok/sec: 112508.34, flops:43.83, batch-reuse:1
@ 373 train 7.0734 , allloss: 8.2921, dt: 1159.67ms, fracRes: 0.0350, norm(attn): 0.2598, norm(output): 0.0396, norm(x): 0.0374, norm(y): 0.9920, norm:9.7436, tok/sec: 113024.90, flops:44.03, batch-reuse:1
@ 374 train 7.0473 , allloss: 8.2627, dt: 1182.65ms, fracRes: 0.0374, norm(attn): 0.2598, norm(output): 0.0398, norm(x): 0.0376, norm(y): 0.9920, norm:6.2617, tok/sec: 110828.88, flops:43.18, batch-reuse:1
@ 375 train 7.1321 , allloss: 8.3517, dt: 1197.24ms, fracRes: 0.0367, norm(attn): 0.2539, norm(output): 0.0403, norm(x): 0.0377, norm(y): 0.9920, norm:6.5125, tok/sec: 109478.26, flops:42.65, batch-reuse:1
@ 376 train 7.1886 , allloss: 8.4277, dt: 1180.80ms, fracRes: 0.0335, norm(attn): 0.2500, norm(output): 0.0405, norm(x): 0.0378, norm(y): 0.9920, norm:8.9007, tok/sec: 111002.83, flops:43.25, batch-reuse:1
@ 377 train 7.0766 , allloss: 8.2939, dt: 1166.80ms, fracRes: 0.0348, norm(attn): 0.2578, norm(output): 0.0398, norm(x): 0.0376, norm(y): 0.9919, norm:15.8262, tok/sec: 112334.20, flops:43.77, batch-reuse:1
@ 378 train 7.0011 , allloss: 8.2150, dt: 1175.84ms, fracRes: 0.0362, norm(attn): 0.2520, norm(output): 0.0405, norm(x): 0.0377, norm(y): 0.9919, norm:9.4149, tok/sec: 111470.71, flops:43.43, batch-reuse:1
@ 379 train 7.0972 , allloss: 8.3292, dt: 1171.99ms, fracRes: 0.0356, norm(attn): 0.2490, norm(output): 0.0403, norm(x): 0.0379, norm(y): 0.9919, norm:8.7564, tok/sec: 111836.71, flops:43.57, batch-reuse:1
@ 380 train 7.1551 , allloss: 8.3665, dt: 1167.61ms, fracRes: 0.0350, norm(attn): 0.2598, norm(output): 0.0396, norm(x): 0.0374, norm(y): 0.9918, norm:8.0761, tok/sec: 112256.21, flops:43.74, batch-reuse:1
@ 381 train 7.0946 , allloss: 8.3089, dt: 1171.23ms, fracRes: 0.0343, norm(attn): 0.2637, norm(output): 0.0393, norm(x): 0.0372, norm(y): 0.9917, norm:13.3009, tok/sec: 111910.06, flops:43.60, batch-reuse:1
@ 382 train 7.0286 , allloss: 8.2381, dt: 1163.64ms, fracRes: 0.0337, norm(attn): 0.2637, norm(output): 0.0393, norm(x): 0.0370, norm(y): 0.9917, norm:7.0056, tok/sec: 112639.60, flops:43.88, batch-reuse:1
@ 383 train 7.0258 , allloss: 8.2437, dt: 1179.20ms, fracRes: 0.0325, norm(attn): 0.2617, norm(output): 0.0393, norm(x): 0.0371, norm(y): 0.9917, norm:9.6629, tok/sec: 111153.51, flops:43.31, batch-reuse:1
@ 384 train 7.0431 , allloss: 8.2714, dt: 1156.80ms, fracRes: 0.0330, norm(attn): 0.2598, norm(output): 0.0396, norm(x): 0.0373, norm(y): 0.9917, norm:10.8593, tok/sec: 113305.83, flops:44.14, batch-reuse:1
@ 385 train 6.9740 , allloss: 8.1902, dt: 1163.75ms, fracRes: 0.0336, norm(attn): 0.2578, norm(output): 0.0396, norm(x): 0.0373, norm(y): 0.9916, norm:5.6341, tok/sec: 112628.52, flops:43.88, batch-reuse:1
@ 386 train 7.0831 , allloss: 8.2899, dt: 1181.67ms, fracRes: 0.0329, norm(attn): 0.2637, norm(output): 0.0393, norm(x): 0.0370, norm(y): 0.9916, norm:9.4014, tok/sec: 110921.08, flops:43.21, batch-reuse:1
@ 387 train 7.0189 , allloss: 8.2165, dt: 1201.03ms, fracRes: 0.0338, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0368, norm(y): 0.9915, norm:8.4034, tok/sec: 109133.01, flops:42.52, batch-reuse:1
@ 388 train 6.9367 , allloss: 8.1520, dt: 1171.96ms, fracRes: 0.0340, norm(attn): 0.2598, norm(output): 0.0396, norm(x): 0.0371, norm(y): 0.9915, norm:10.2539, tok/sec: 111839.55, flops:43.57, batch-reuse:1
@ 389 train 6.9985 , allloss: 8.2442, dt: 1204.94ms, fracRes: 0.0319, norm(attn): 0.2500, norm(output): 0.0398, norm(x): 0.0375, norm(y): 0.9916, norm:10.2446, tok/sec: 108779.11, flops:42.38, batch-reuse:1
@ 390 train 7.0485 , allloss: 8.2769, dt: 1207.48ms, fracRes: 0.0323, norm(attn): 0.2578, norm(output): 0.0393, norm(x): 0.0372, norm(y): 0.9915, norm:6.2339, tok/sec: 108549.96, flops:42.29, batch-reuse:1
@ 391 train 6.9722 , allloss: 8.1937, dt: 1183.16ms, fracRes: 0.0292, norm(attn): 0.2617, norm(output): 0.0393, norm(x): 0.0371, norm(y): 0.9915, norm:7.6846, tok/sec: 110781.69, flops:43.16, batch-reuse:1
@ 392 train 7.0693 , allloss: 8.2859, dt: 1174.46ms, fracRes: 0.0282, norm(attn): 0.2637, norm(output): 0.0393, norm(x): 0.0370, norm(y): 0.9914, norm:6.5880, tok/sec: 111601.93, flops:43.48, batch-reuse:1
@ 393 train 6.9954 , allloss: 8.2040, dt: 1182.54ms, fracRes: 0.0295, norm(attn): 0.2676, norm(output): 0.0393, norm(x): 0.0369, norm(y): 0.9914, norm:11.1274, tok/sec: 110839.65, flops:43.18, batch-reuse:1
@ 394 train 6.9774 , allloss: 8.1891, dt: 1189.87ms, fracRes: 0.0305, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0369, norm(y): 0.9913, norm:10.6113, tok/sec: 110156.49, flops:42.92, batch-reuse:1
@ 395 train 7.1328 , allloss: 8.3452, dt: 1167.13ms, fracRes: 0.0323, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0370, norm(y): 0.9913, norm:11.8263, tok/sec: 112302.53, flops:43.75, batch-reuse:1
@ 396 train 6.8881 , allloss: 8.1068, dt: 1204.65ms, fracRes: 0.0323, norm(attn): 0.2637, norm(output): 0.0393, norm(x): 0.0371, norm(y): 0.9913, norm:11.7240, tok/sec: 108805.20, flops:42.39, batch-reuse:1
@ 397 train 7.0123 , allloss: 8.2465, dt: 1194.19ms, fracRes: 0.0309, norm(attn): 0.2559, norm(output): 0.0393, norm(x): 0.0372, norm(y): 0.9913, norm:8.8394, tok/sec: 109757.90, flops:42.76, batch-reuse:1
@ 398 train 7.0123 , allloss: 8.2397, dt: 1192.15ms, fracRes: 0.0313, norm(attn): 0.2637, norm(output): 0.0393, norm(x): 0.0368, norm(y): 0.9912, norm:6.7303, tok/sec: 109946.28, flops:42.84, batch-reuse:1
@ 399 train 6.9834 , allloss: 8.2094, dt: 1177.85ms, fracRes: 0.0296, norm(attn): 0.2637, norm(output): 0.0391, norm(x): 0.0367, norm(y): 0.9911, norm:10.1654, tok/sec: 111280.59, flops:43.35, batch-reuse:1
@ 400 train 7.0187 , allloss: 8.2365, dt: 1195.69ms, fracRes: 0.0284, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0365, norm(y): 0.9911, norm:9.4622, tok/sec: 109620.70, flops:42.71, batch-reuse:1
@ 401 train 7.0750 , allloss: 8.2942, dt: 1167.78ms, fracRes: 0.0264, norm(attn): 0.2617, norm(output): 0.0391, norm(x): 0.0366, norm(y): 0.9911, norm:13.5325, tok/sec: 112240.35, flops:43.73, batch-reuse:1
@ 402 train 7.0086 , allloss: 8.2188, dt: 1173.81ms, fracRes: 0.0274, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0367, norm(y): 0.9911, norm:8.1115, tok/sec: 111664.09, flops:43.50, batch-reuse:1
@ 403 train 7.0219 , allloss: 8.2419, dt: 1171.51ms, fracRes: 0.0247, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0368, norm(y): 0.9911, norm:7.5028, tok/sec: 111882.84, flops:43.59, batch-reuse:1
@ 404 train 6.9438 , allloss: 8.1728, dt: 1169.84ms, fracRes: 0.0263, norm(attn): 0.2617, norm(output): 0.0393, norm(x): 0.0368, norm(y): 0.9910, norm:10.3763, tok/sec: 112042.87, flops:43.65, batch-reuse:1
@ 405 train 6.9518 , allloss: 8.1791, dt: 1159.61ms, fracRes: 0.0285, norm(attn): 0.2559, norm(output): 0.0393, norm(x): 0.0370, norm(y): 0.9910, norm:6.1424, tok/sec: 113031.52, flops:44.04, batch-reuse:1
@ 406 train 6.9534 , allloss: 8.1836, dt: 1171.35ms, fracRes: 0.0270, norm(attn): 0.2598, norm(output): 0.0391, norm(x): 0.0368, norm(y): 0.9910, norm:9.5190, tok/sec: 111898.03, flops:43.60, batch-reuse:1
@ 407 train 6.9350 , allloss: 8.1566, dt: 1180.61ms, fracRes: 0.0254, norm(attn): 0.2637, norm(output): 0.0393, norm(x): 0.0365, norm(y): 0.9909, norm:6.9316, tok/sec: 111020.11, flops:43.25, batch-reuse:1
@ 408 train 6.9560 , allloss: 8.1728, dt: 1179.09ms, fracRes: 0.0259, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0365, norm(y): 0.9909, norm:6.8141, tok/sec: 111163.35, flops:43.31, batch-reuse:1
@ 409 train 6.8820 , allloss: 8.0928, dt: 1203.20ms, fracRes: 0.0254, norm(attn): 0.2695, norm(output): 0.0388, norm(x): 0.0362, norm(y): 0.9907, norm:8.2450, tok/sec: 108936.61, flops:42.44, batch-reuse:1
@ 410 train 6.9237 , allloss: 8.1210, dt: 1204.52ms, fracRes: 0.0264, norm(attn): 0.2715, norm(output): 0.0388, norm(x): 0.0363, norm(y): 0.9907, norm:9.2169, tok/sec: 108816.38, flops:42.39, batch-reuse:1
@ 411 train 6.9289 , allloss: 8.1344, dt: 1203.38ms, fracRes: 0.0266, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0365, norm(y): 0.9907, norm:5.9190, tok/sec: 108919.56, flops:42.44, batch-reuse:1
@ 412 train 6.9341 , allloss: 8.1445, dt: 1204.06ms, fracRes: 0.0243, norm(attn): 0.2695, norm(output): 0.0388, norm(x): 0.0363, norm(y): 0.9907, norm:9.0278, tok/sec: 108858.77, flops:42.41, batch-reuse:1
@ 413 train 6.6429 , allloss: 7.8670, dt: 1179.28ms, fracRes: 0.0252, norm(attn): 0.2695, norm(output): 0.0388, norm(x): 0.0364, norm(y): 0.9907, norm:12.5436, tok/sec: 111145.82, flops:43.30, batch-reuse:1
@ 414 train 6.9099 , allloss: 8.1239, dt: 1182.45ms, fracRes: 0.0303, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0367, norm(y): 0.9907, norm:11.3223, tok/sec: 110847.54, flops:43.19, batch-reuse:1
@ 415 train 6.8445 , allloss: 8.0781, dt: 1200.49ms, fracRes: 0.0282, norm(attn): 0.2539, norm(output): 0.0393, norm(x): 0.0369, norm(y): 0.9907, norm:11.0465, tok/sec: 109182.45, flops:42.54, batch-reuse:1
@ 416 train 6.9809 , allloss: 8.1959, dt: 1178.78ms, fracRes: 0.0255, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0363, norm(y): 0.9906, norm:8.5848, tok/sec: 111193.37, flops:43.32, batch-reuse:1
@ 417 train 6.8646 , allloss: 8.0697, dt: 1159.63ms, fracRes: 0.0242, norm(attn): 0.2676, norm(output): 0.0388, norm(x): 0.0361, norm(y): 0.9905, norm:10.8068, tok/sec: 113028.85, flops:44.04, batch-reuse:1
@ 418 train 6.9469 , allloss: 8.1423, dt: 1170.30ms, fracRes: 0.0227, norm(attn): 0.2715, norm(output): 0.0386, norm(x): 0.0359, norm(y): 0.9904, norm:6.8713, tok/sec: 111998.31, flops:43.63, batch-reuse:1
@ 419 train 6.8829 , allloss: 8.0820, dt: 1182.30ms, fracRes: 0.0236, norm(attn): 0.2734, norm(output): 0.0381, norm(x): 0.0357, norm(y): 0.9903, norm:10.8722, tok/sec: 110862.14, flops:43.19, batch-reuse:1
@ 420 train 6.8471 , allloss: 8.0674, dt: 1182.72ms, fracRes: 0.0238, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0361, norm(y): 0.9904, norm:12.9205, tok/sec: 110822.38, flops:43.18, batch-reuse:1
@ 421 train 7.0047 , allloss: 8.2107, dt: 1176.06ms, fracRes: 0.0264, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0361, norm(y): 0.9904, norm:7.1906, tok/sec: 111449.92, flops:43.42, batch-reuse:1
@ 422 train 6.9062 , allloss: 8.1139, dt: 1171.79ms, fracRes: 0.0250, norm(attn): 0.2676, norm(output): 0.0386, norm(x): 0.0359, norm(y): 0.9903, norm:10.6759, tok/sec: 111856.19, flops:43.58, batch-reuse:1
@ 423 train 6.9450 , allloss: 8.1342, dt: 1166.42ms, fracRes: 0.0234, norm(attn): 0.2773, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9902, norm:9.2929, tok/sec: 112371.51, flops:43.78, batch-reuse:1
@ 424 train 6.8817 , allloss: 8.0771, dt: 1157.33ms, fracRes: 0.0235, norm(attn): 0.2715, norm(output): 0.0376, norm(x): 0.0356, norm(y): 0.9902, norm:10.3031, tok/sec: 113253.62, flops:44.12, batch-reuse:1
@ 425 train 6.9564 , allloss: 8.1491, dt: 1165.44ms, fracRes: 0.0248, norm(attn): 0.2676, norm(output): 0.0386, norm(x): 0.0360, norm(y): 0.9902, norm:10.2427, tok/sec: 112465.81, flops:43.82, batch-reuse:1
@ 426 train 6.8056 , allloss: 8.0025, dt: 1161.20ms, fracRes: 0.0246, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0361, norm(y): 0.9902, norm:11.2604, tok/sec: 112876.21, flops:43.98, batch-reuse:1
@ 427 train 6.8798 , allloss: 8.0794, dt: 1176.24ms, fracRes: 0.0229, norm(attn): 0.2656, norm(output): 0.0386, norm(x): 0.0360, norm(y): 0.9902, norm:6.3557, tok/sec: 111432.59, flops:43.41, batch-reuse:1
@ 428 train 6.8255 , allloss: 8.0465, dt: 1169.19ms, fracRes: 0.0219, norm(attn): 0.2637, norm(output): 0.0386, norm(x): 0.0362, norm(y): 0.9902, norm:9.1612, tok/sec: 112105.33, flops:43.68, batch-reuse:1
@ 429 train 6.7713 , allloss: 7.9809, dt: 1177.97ms, fracRes: 0.0223, norm(attn): 0.2637, norm(output): 0.0386, norm(x): 0.0361, norm(y): 0.9901, norm:11.9823, tok/sec: 111268.92, flops:43.35, batch-reuse:1
@ 430 train 6.8390 , allloss: 8.0367, dt: 1194.62ms, fracRes: 0.0219, norm(attn): 0.2656, norm(output): 0.0386, norm(x): 0.0359, norm(y): 0.9900, norm:6.7590, tok/sec: 109718.63, flops:42.75, batch-reuse:1
@ 431 train 6.8364 , allloss: 8.0493, dt: 1191.08ms, fracRes: 0.0213, norm(attn): 0.2617, norm(output): 0.0386, norm(x): 0.0358, norm(y): 0.9900, norm:11.0639, tok/sec: 110044.99, flops:42.87, batch-reuse:1
@ 432 train 6.8848 , allloss: 8.0815, dt: 1176.75ms, fracRes: 0.0224, norm(attn): 0.2676, norm(output): 0.0381, norm(x): 0.0357, norm(y): 0.9900, norm:7.4384, tok/sec: 111384.57, flops:43.40, batch-reuse:1
@ 433 train 6.8896 , allloss: 8.0770, dt: 1174.87ms, fracRes: 0.0233, norm(attn): 0.2695, norm(output): 0.0381, norm(x): 0.0356, norm(y): 0.9899, norm:7.0277, tok/sec: 111563.18, flops:43.47, batch-reuse:1
@ 434 train 6.9085 , allloss: 8.1167, dt: 1193.77ms, fracRes: 0.0211, norm(attn): 0.2637, norm(output): 0.0381, norm(x): 0.0357, norm(y): 0.9899, norm:5.7466, tok/sec: 109796.96, flops:42.78, batch-reuse:1
@ 435 train 6.8334 , allloss: 8.0461, dt: 1202.98ms, fracRes: 0.0204, norm(attn): 0.2656, norm(output): 0.0378, norm(x): 0.0357, norm(y): 0.9899, norm:7.9996, tok/sec: 108956.52, flops:42.45, batch-reuse:1
@ 436 train 6.9723 , allloss: 8.1627, dt: 1212.65ms, fracRes: 0.0210, norm(attn): 0.2734, norm(output): 0.0376, norm(x): 0.0354, norm(y): 0.9897, norm:7.6932, tok/sec: 108087.48, flops:42.11, batch-reuse:1
@ 437 train 6.8871 , allloss: 8.0878, dt: 1195.42ms, fracRes: 0.0214, norm(attn): 0.2656, norm(output): 0.0386, norm(x): 0.0358, norm(y): 0.9898, norm:14.2968, tok/sec: 109644.90, flops:42.72, batch-reuse:1
@ 438 train 6.9715 , allloss: 8.1584, dt: 1164.90ms, fracRes: 0.0224, norm(attn): 0.2637, norm(output): 0.0381, norm(x): 0.0360, norm(y): 0.9898, norm:7.2149, tok/sec: 112517.92, flops:43.84, batch-reuse:1
@ 439 train 6.7707 , allloss: 7.9659, dt: 1183.78ms, fracRes: 0.0205, norm(attn): 0.2656, norm(output): 0.0381, norm(x): 0.0357, norm(y): 0.9897, norm:10.9711, tok/sec: 110722.95, flops:43.14, batch-reuse:1
@ 440 train 6.7386 , allloss: 7.9317, dt: 1181.53ms, fracRes: 0.0205, norm(attn): 0.2656, norm(output): 0.0378, norm(x): 0.0355, norm(y): 0.9897, norm:6.6261, tok/sec: 110934.11, flops:43.22, batch-reuse:1
@ 441 train 6.7976 , allloss: 7.9745, dt: 1160.00ms, fracRes: 0.0201, norm(attn): 0.2715, norm(output): 0.0376, norm(x): 0.0351, norm(y): 0.9895, norm:6.5674, tok/sec: 112992.75, flops:44.02, batch-reuse:1
@ 442 train 6.8788 , allloss: 8.0676, dt: 1212.17ms, fracRes: 0.0199, norm(attn): 0.2617, norm(output): 0.0376, norm(x): 0.0354, norm(y): 0.9896, norm:12.2467, tok/sec: 108130.36, flops:42.13, batch-reuse:1
@ 443 train 6.9098 , allloss: 8.1271, dt: 1167.40ms, fracRes: 0.0196, norm(attn): 0.2598, norm(output): 0.0378, norm(x): 0.0357, norm(y): 0.9896, norm:11.9080, tok/sec: 112277.21, flops:43.74, batch-reuse:1
@ 444 train 6.8801 , allloss: 8.1018, dt: 1182.18ms, fracRes: 0.0195, norm(attn): 0.2500, norm(output): 0.0378, norm(x): 0.0359, norm(y): 0.9897, norm:9.9217, tok/sec: 110872.98, flops:43.20, batch-reuse:1
@ 445 train 6.7602 , allloss: 7.9337, dt: 1187.61ms, fracRes: 0.0195, norm(attn): 0.2676, norm(output): 0.0374, norm(x): 0.0350, norm(y): 0.9894, norm:8.8290, tok/sec: 110365.83, flops:43.00, batch-reuse:1
@ 446 train 6.7996 , allloss: 7.9908, dt: 1178.73ms, fracRes: 0.0186, norm(attn): 0.2598, norm(output): 0.0376, norm(x): 0.0353, norm(y): 0.9894, norm:6.7505, tok/sec: 111197.33, flops:43.32, batch-reuse:1
@ 447 train 6.8057 , allloss: 8.0081, dt: 1178.42ms, fracRes: 0.0187, norm(attn): 0.2598, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9894, norm:7.7183, tok/sec: 111226.85, flops:43.33, batch-reuse:1
@ 448 train 6.7938 , allloss: 8.0045, dt: 1170.86ms, fracRes: 0.0187, norm(attn): 0.2520, norm(output): 0.0381, norm(x): 0.0357, norm(y): 0.9895, norm:14.1660, tok/sec: 111945.22, flops:43.61, batch-reuse:1
@ 449 train 6.7320 , allloss: 7.9281, dt: 1199.52ms, fracRes: 0.0186, norm(attn): 0.2637, norm(output): 0.0371, norm(x): 0.0354, norm(y): 0.9894, norm:9.7850, tok/sec: 109270.41, flops:42.57, batch-reuse:1
@ 450 train 6.8108 , allloss: 8.0075, dt: 1172.69ms, fracRes: 0.0184, norm(attn): 0.2598, norm(output): 0.0376, norm(x): 0.0354, norm(y): 0.9894, norm:9.6894, tok/sec: 111770.61, flops:43.55, batch-reuse:1
@ 451 train 6.7935 , allloss: 7.9859, dt: 1164.10ms, fracRes: 0.0175, norm(attn): 0.2617, norm(output): 0.0371, norm(x): 0.0351, norm(y): 0.9893, norm:11.3510, tok/sec: 112594.96, flops:43.87, batch-reuse:1
@ 452 train 6.8284 , allloss: 8.0167, dt: 1183.68ms, fracRes: 0.0183, norm(attn): 0.2559, norm(output): 0.0376, norm(x): 0.0353, norm(y): 0.9893, norm:11.4841, tok/sec: 110732.78, flops:43.14, batch-reuse:1
@ 453 train 6.8182 , allloss: 8.0083, dt: 1202.99ms, fracRes: 0.0189, norm(attn): 0.2500, norm(output): 0.0381, norm(x): 0.0357, norm(y): 0.9893, norm:6.2294, tok/sec: 108954.90, flops:42.45, batch-reuse:1
@ 454 train 6.8068 , allloss: 8.0011, dt: 1177.58ms, fracRes: 0.0174, norm(attn): 0.2559, norm(output): 0.0374, norm(x): 0.0353, norm(y): 0.9892, norm:9.6773, tok/sec: 111306.66, flops:43.37, batch-reuse:1
@ 455 train 6.8744 , allloss: 8.0755, dt: 1175.23ms, fracRes: 0.0180, norm(attn): 0.2539, norm(output): 0.0371, norm(x): 0.0354, norm(y): 0.9892, norm:8.3891, tok/sec: 111528.99, flops:43.45, batch-reuse:1
@ 456 train 6.8037 , allloss: 8.0026, dt: 1162.11ms, fracRes: 0.0176, norm(attn): 0.2500, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9892, norm:11.5781, tok/sec: 112788.24, flops:43.94, batch-reuse:1
@ 457 train 6.9024 , allloss: 8.0958, dt: 1159.90ms, fracRes: 0.0173, norm(attn): 0.2559, norm(output): 0.0374, norm(x): 0.0354, norm(y): 0.9892, norm:8.5335, tok/sec: 113002.85, flops:44.03, batch-reuse:1
@ 458 train 6.8810 , allloss: 8.0930, dt: 1180.82ms, fracRes: 0.0172, norm(attn): 0.2480, norm(output): 0.0376, norm(x): 0.0356, norm(y): 0.9892, norm:9.1836, tok/sec: 111000.67, flops:43.25, batch-reuse:1
@ 459 train 6.7814 , allloss: 7.9624, dt: 1165.71ms, fracRes: 0.0177, norm(attn): 0.2578, norm(output): 0.0371, norm(x): 0.0348, norm(y): 0.9890, norm:12.2350, tok/sec: 112439.47, flops:43.81, batch-reuse:1
@ 460 train 6.7511 , allloss: 7.9174, dt: 1175.35ms, fracRes: 0.0180, norm(attn): 0.2617, norm(output): 0.0366, norm(x): 0.0350, norm(y): 0.9890, norm:9.8082, tok/sec: 111517.04, flops:43.45, batch-reuse:1
@ 461 train 6.7794 , allloss: 7.9964, dt: 1175.10ms, fracRes: 0.0173, norm(attn): 0.2422, norm(output): 0.0383, norm(x): 0.0359, norm(y): 0.9892, norm:13.1416, tok/sec: 111541.57, flops:43.46, batch-reuse:1
@ 462 train 6.8401 , allloss: 8.0875, dt: 1176.35ms, fracRes: 0.0168, norm(attn): 0.2402, norm(output): 0.0376, norm(x): 0.0359, norm(y): 0.9892, norm:10.3587, tok/sec: 111422.70, flops:43.41, batch-reuse:1
@ 463 train 6.8149 , allloss: 8.0234, dt: 1198.48ms, fracRes: 0.0181, norm(attn): 0.2480, norm(output): 0.0376, norm(x): 0.0354, norm(y): 0.9890, norm:5.3973, tok/sec: 109365.23, flops:42.61, batch-reuse:1
@ 464 train 6.7256 , allloss: 7.9146, dt: 1184.55ms, fracRes: 0.0177, norm(attn): 0.2520, norm(output): 0.0376, norm(x): 0.0351, norm(y): 0.9889, norm:9.9346, tok/sec: 110651.70, flops:43.11, batch-reuse:1
@ 465 train 6.7033 , allloss: 7.8761, dt: 1158.90ms, fracRes: 0.0176, norm(attn): 0.2617, norm(output): 0.0369, norm(x): 0.0348, norm(y): 0.9888, norm:9.1234, tok/sec: 113100.28, flops:44.06, batch-reuse:1
@ 466 train 6.7941 , allloss: 7.9792, dt: 1146.81ms, fracRes: 0.0168, norm(attn): 0.2520, norm(output): 0.0371, norm(x): 0.0350, norm(y): 0.9889, norm:11.4914, tok/sec: 114292.66, flops:44.53, batch-reuse:1
@ 467 train 6.6972 , allloss: 7.8885, dt: 1162.76ms, fracRes: 0.0168, norm(attn): 0.2490, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9889, norm:9.4652, tok/sec: 112724.69, flops:43.92, batch-reuse:1
@ 468 train 6.6418 , allloss: 7.8222, dt: 1163.21ms, fracRes: 0.0167, norm(attn): 0.2500, norm(output): 0.0376, norm(x): 0.0352, norm(y): 0.9888, norm:6.2450, tok/sec: 112680.95, flops:43.90, batch-reuse:1
@ 469 train 6.6368 , allloss: 7.8391, dt: 1173.70ms, fracRes: 0.0157, norm(attn): 0.2500, norm(output): 0.0376, norm(x): 0.0352, norm(y): 0.9888, norm:7.3354, tok/sec: 111674.32, flops:43.51, batch-reuse:1
@ 470 train 6.7546 , allloss: 7.9848, dt: 1199.26ms, fracRes: 0.0153, norm(attn): 0.2441, norm(output): 0.0376, norm(x): 0.0356, norm(y): 0.9889, norm:14.1467, tok/sec: 109293.87, flops:42.58, batch-reuse:1
@ 471 train 6.5942 , allloss: 7.7951, dt: 1194.46ms, fracRes: 0.0162, norm(attn): 0.2490, norm(output): 0.0371, norm(x): 0.0351, norm(y): 0.9887, norm:6.9652, tok/sec: 109732.82, flops:42.75, batch-reuse:1
@ 472 train 6.7530 , allloss: 7.9639, dt: 1172.57ms, fracRes: 0.0164, norm(attn): 0.2412, norm(output): 0.0378, norm(x): 0.0353, norm(y): 0.9887, norm:12.2226, tok/sec: 111781.86, flops:43.55, batch-reuse:1
@ 473 train 6.7204 , allloss: 7.9538, dt: 1178.92ms, fracRes: 0.0169, norm(attn): 0.2285, norm(output): 0.0381, norm(x): 0.0360, norm(y): 0.9889, norm:12.7303, tok/sec: 111179.83, flops:43.32, batch-reuse:1
@ 474 train 6.6311 , allloss: 7.8540, dt: 1189.08ms, fracRes: 0.0160, norm(attn): 0.2334, norm(output): 0.0378, norm(x): 0.0359, norm(y): 0.9889, norm:8.9285, tok/sec: 110229.74, flops:42.95, batch-reuse:1
@ 475 train 6.6362 , allloss: 7.8345, dt: 1184.54ms, fracRes: 0.0160, norm(attn): 0.2373, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9887, norm:6.1826, tok/sec: 110652.70, flops:43.11, batch-reuse:1
@ 476 train 6.6475 , allloss: 7.8284, dt: 1195.46ms, fracRes: 0.0158, norm(attn): 0.2490, norm(output): 0.0366, norm(x): 0.0350, norm(y): 0.9886, norm:8.4172, tok/sec: 109641.29, flops:42.72, batch-reuse:1
@ 477 train 6.7472 , allloss: 7.9828, dt: 1176.82ms, fracRes: 0.0137, norm(attn): 0.2412, norm(output): 0.0376, norm(x): 0.0350, norm(y): 0.9886, norm:13.0856, tok/sec: 111377.73, flops:43.39, batch-reuse:1
@ 478 train 6.6892 , allloss: 7.9336, dt: 1158.83ms, fracRes: 0.0140, norm(attn): 0.2471, norm(output): 0.0369, norm(x): 0.0351, norm(y): 0.9886, norm:8.9967, tok/sec: 113107.59, flops:44.07, batch-reuse:1
@ 479 train 6.8262 , allloss: 8.0543, dt: 1165.80ms, fracRes: 0.0139, norm(attn): 0.2344, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9886, norm:7.7877, tok/sec: 112430.59, flops:43.80, batch-reuse:1
@ 480 train 6.6070 , allloss: 7.8133, dt: 1185.98ms, fracRes: 0.0145, norm(attn): 0.2383, norm(output): 0.0371, norm(x): 0.0350, norm(y): 0.9885, norm:7.7245, tok/sec: 110517.45, flops:43.06, batch-reuse:1
@ 481 train 6.7217 , allloss: 7.9243, dt: 1188.00ms, fracRes: 0.0157, norm(attn): 0.2441, norm(output): 0.0374, norm(x): 0.0350, norm(y): 0.9884, norm:11.7951, tok/sec: 110330.04, flops:42.98, batch-reuse:1
@ 482 train 6.6706 , allloss: 7.8757, dt: 1153.60ms, fracRes: 0.0157, norm(attn): 0.2354, norm(output): 0.0371, norm(x): 0.0353, norm(y): 0.9885, norm:8.4809, tok/sec: 113619.93, flops:44.27, batch-reuse:1
@ 483 train 6.7462 , allloss: 7.9518, dt: 1176.69ms, fracRes: 0.0153, norm(attn): 0.2344, norm(output): 0.0376, norm(x): 0.0352, norm(y): 0.9884, norm:8.2440, tok/sec: 111390.75, flops:43.40, batch-reuse:1
@ 484 train 6.6305 , allloss: 7.8126, dt: 1186.81ms, fracRes: 0.0155, norm(attn): 0.2402, norm(output): 0.0371, norm(x): 0.0350, norm(y): 0.9883, norm:8.1167, tok/sec: 110440.33, flops:43.03, batch-reuse:1
@ 485 train 6.5603 , allloss: 7.7760, dt: 1184.11ms, fracRes: 0.0141, norm(attn): 0.2334, norm(output): 0.0376, norm(x): 0.0353, norm(y): 0.9884, norm:8.9165, tok/sec: 110692.00, flops:43.13, batch-reuse:1
@ 486 train 6.7605 , allloss: 7.9946, dt: 1167.97ms, fracRes: 0.0132, norm(attn): 0.2324, norm(output): 0.0376, norm(x): 0.0354, norm(y): 0.9884, norm:10.7386, tok/sec: 112221.61, flops:43.72, batch-reuse:1
@ 487 train 6.7367 , allloss: 7.9928, dt: 1183.36ms, fracRes: 0.0124, norm(attn): 0.2217, norm(output): 0.0381, norm(x): 0.0359, norm(y): 0.9885, norm:13.6691, tok/sec: 110763.03, flops:43.15, batch-reuse:1
@ 488 train 6.5868 , allloss: 7.8135, dt: 1195.90ms, fracRes: 0.0142, norm(attn): 0.2334, norm(output): 0.0371, norm(x): 0.0354, norm(y): 0.9883, norm:9.8972, tok/sec: 109601.53, flops:42.70, batch-reuse:1
@ 489 train 6.6610 , allloss: 7.8944, dt: 1199.52ms, fracRes: 0.0146, norm(attn): 0.2373, norm(output): 0.0376, norm(x): 0.0349, norm(y): 0.9881, norm:12.4276, tok/sec: 109270.69, flops:42.57, batch-reuse:1
@ 490 train 6.6886 , allloss: 7.9261, dt: 1213.43ms, fracRes: 0.0137, norm(attn): 0.2334, norm(output): 0.0378, norm(x): 0.0350, norm(y): 0.9881, norm:14.8851, tok/sec: 108017.56, flops:42.08, batch-reuse:1
@ 491 train 6.7681 , allloss: 8.0058, dt: 1177.50ms, fracRes: 0.0134, norm(attn): 0.2246, norm(output): 0.0374, norm(x): 0.0355, norm(y): 0.9883, norm:10.0184, tok/sec: 111313.66, flops:43.37, batch-reuse:1
@ 492 train 6.7552 , allloss: 7.9780, dt: 1191.05ms, fracRes: 0.0131, norm(attn): 0.2188, norm(output): 0.0371, norm(x): 0.0357, norm(y): 0.9884, norm:11.1071, tok/sec: 110047.34, flops:42.87, batch-reuse:1
@ 493 train 6.6888 , allloss: 7.8862, dt: 1150.70ms, fracRes: 0.0132, norm(attn): 0.2324, norm(output): 0.0376, norm(x): 0.0351, norm(y): 0.9881, norm:9.1476, tok/sec: 113906.47, flops:44.38, batch-reuse:1
@ 494 train 6.6418 , allloss: 7.8374, dt: 1157.47ms, fracRes: 0.0145, norm(attn): 0.2344, norm(output): 0.0371, norm(x): 0.0350, norm(y): 0.9880, norm:8.2037, tok/sec: 113239.76, flops:44.12, batch-reuse:1
@ 495 train 6.5563 , allloss: 7.7642, dt: 1154.74ms, fracRes: 0.0150, norm(attn): 0.2344, norm(output): 0.0369, norm(x): 0.0350, norm(y): 0.9880, norm:9.2741, tok/sec: 113507.65, flops:44.22, batch-reuse:1
@ 496 train 6.6714 , allloss: 7.8883, dt: 1185.77ms, fracRes: 0.0139, norm(attn): 0.2334, norm(output): 0.0371, norm(x): 0.0349, norm(y): 0.9880, norm:7.8677, tok/sec: 110537.05, flops:43.07, batch-reuse:1
@ 497 train 6.5666 , allloss: 7.8028, dt: 1204.44ms, fracRes: 0.0126, norm(attn): 0.2197, norm(output): 0.0378, norm(x): 0.0356, norm(y): 0.9882, norm:15.2125, tok/sec: 108824.39, flops:42.40, batch-reuse:1
@ 498 train 6.7280 , allloss: 7.9722, dt: 1154.01ms, fracRes: 0.0128, norm(attn): 0.2207, norm(output): 0.0376, norm(x): 0.0358, norm(y): 0.9882, norm:9.6652, tok/sec: 113580.02, flops:44.25, batch-reuse:1
@ 499 train 6.7481 , allloss: 8.0037, dt: 1180.12ms, fracRes: 0.0130, norm(attn): 0.2158, norm(output): 0.0378, norm(x): 0.0358, norm(y): 0.9882, norm:6.7992, tok/sec: 111066.45, flops:43.27, batch-reuse:1
@ 500 train 6.6564 , allloss: 7.8697, dt: 1205.57ms, fracRes: 0.0130, norm(attn): 0.2217, norm(output): 0.0378, norm(x): 0.0354, norm(y): 0.9880, norm:13.4458, tok/sec: 108721.65, flops:42.36, batch-reuse:1
@ 501 train 6.6621 , allloss: 7.8927, dt: 1181.78ms, fracRes: 0.0133, norm(attn): 0.2168, norm(output): 0.0378, norm(x): 0.0358, norm(y): 0.9881, norm:8.2800, tok/sec: 110911.08, flops:43.21, batch-reuse:1
@ 502 train 6.6874 , allloss: 7.9064, dt: 1204.87ms, fracRes: 0.0133, norm(attn): 0.2217, norm(output): 0.0374, norm(x): 0.0354, norm(y): 0.9879, norm:5.4623, tok/sec: 108785.27, flops:42.38, batch-reuse:1
@ 503 train 6.6702 , allloss: 7.8736, dt: 1201.46ms, fracRes: 0.0133, norm(attn): 0.2305, norm(output): 0.0371, norm(x): 0.0347, norm(y): 0.9877, norm:10.9502, tok/sec: 109093.66, flops:42.50, batch-reuse:1
@ 504 train 6.7151 , allloss: 7.9630, dt: 1207.33ms, fracRes: 0.0131, norm(attn): 0.2207, norm(output): 0.0378, norm(x): 0.0354, norm(y): 0.9879, norm:8.6052, tok/sec: 108563.18, flops:42.30, batch-reuse:1
@ 505 train 6.6284 , allloss: 7.9162, dt: 1206.67ms, fracRes: 0.0121, norm(attn): 0.2148, norm(output): 0.0376, norm(x): 0.0356, norm(y): 0.9880, norm:10.5938, tok/sec: 108622.92, flops:42.32, batch-reuse:1
@ 506 train 6.6341 , allloss: 7.8695, dt: 1203.83ms, fracRes: 0.0130, norm(attn): 0.2227, norm(output): 0.0371, norm(x): 0.0352, norm(y): 0.9878, norm:8.2042, tok/sec: 108879.40, flops:42.42, batch-reuse:1
@ 507 train 6.6690 , allloss: 7.9270, dt: 1174.08ms, fracRes: 0.0127, norm(attn): 0.2129, norm(output): 0.0383, norm(x): 0.0356, norm(y): 0.9879, norm:8.9805, tok/sec: 111638.26, flops:43.49, batch-reuse:1
@ 508 train 6.5934 , allloss: 7.8230, dt: 1175.98ms, fracRes: 0.0137, norm(attn): 0.2188, norm(output): 0.0371, norm(x): 0.0352, norm(y): 0.9877, norm:9.5602, tok/sec: 111457.69, flops:43.42, batch-reuse:1
@ 509 train 6.6305 , allloss: 7.8416, dt: 1165.15ms, fracRes: 0.0129, norm(attn): 0.2217, norm(output): 0.0376, norm(x): 0.0350, norm(y): 0.9876, norm:7.2913, tok/sec: 112493.65, flops:43.83, batch-reuse:1
@ 510 train 6.5890 , allloss: 7.8000, dt: 1195.19ms, fracRes: 0.0123, norm(attn): 0.2305, norm(output): 0.0364, norm(x): 0.0344, norm(y): 0.9875, norm:9.9571, tok/sec: 109666.38, flops:42.73, batch-reuse:1
@ 511 train 6.6898 , allloss: 7.9201, dt: 1170.15ms, fracRes: 0.0119, norm(attn): 0.2178, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9876, norm:13.5693, tok/sec: 112012.62, flops:43.64, batch-reuse:1
@ 512 train 6.6139 , allloss: 7.8293, dt: 1168.92ms, fracRes: 0.0129, norm(attn): 0.2266, norm(output): 0.0369, norm(x): 0.0349, norm(y): 0.9875, norm:11.5017, tok/sec: 112130.69, flops:43.69, batch-reuse:1
@ 513 train 6.6080 , allloss: 7.8583, dt: 1181.61ms, fracRes: 0.0119, norm(attn): 0.2109, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9877, norm:8.9742, tok/sec: 110926.56, flops:43.22, batch-reuse:1
@ 514 train 6.5723 , allloss: 7.7894, dt: 1188.85ms, fracRes: 0.0120, norm(attn): 0.2158, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9876, norm:8.8388, tok/sec: 110250.98, flops:42.95, batch-reuse:1
@ 515 train 6.5536 , allloss: 7.7514, dt: 1180.67ms, fracRes: 0.0126, norm(attn): 0.2197, norm(output): 0.0369, norm(x): 0.0349, norm(y): 0.9875, norm:7.9000, tok/sec: 111015.31, flops:43.25, batch-reuse:1
@ 516 train 6.5513 , allloss: 7.7792, dt: 1166.62ms, fracRes: 0.0125, norm(attn): 0.2129, norm(output): 0.0381, norm(x): 0.0355, norm(y): 0.9876, norm:10.3238, tok/sec: 112351.69, flops:43.77, batch-reuse:1
@ 517 train 6.5301 , allloss: 7.7433, dt: 1182.60ms, fracRes: 0.0117, norm(attn): 0.2168, norm(output): 0.0376, norm(x): 0.0352, norm(y): 0.9875, norm:9.9944, tok/sec: 110833.44, flops:43.18, batch-reuse:1
@ 518 train 6.6446 , allloss: 7.8508, dt: 1154.39ms, fracRes: 0.0121, norm(attn): 0.2197, norm(output): 0.0364, norm(x): 0.0351, norm(y): 0.9874, norm:11.2515, tok/sec: 113542.09, flops:44.24, batch-reuse:1
@ 519 train 6.5666 , allloss: 7.8373, dt: 1174.80ms, fracRes: 0.0113, norm(attn): 0.2061, norm(output): 0.0376, norm(x): 0.0357, norm(y): 0.9875, norm:13.2133, tok/sec: 111569.18, flops:43.47, batch-reuse:1
@ 520 train 6.6495 , allloss: 7.9219, dt: 1201.45ms, fracRes: 0.0115, norm(attn): 0.2158, norm(output): 0.0371, norm(x): 0.0352, norm(y): 0.9874, norm:12.4610, tok/sec: 109095.29, flops:42.50, batch-reuse:1
@ 521 train 6.7093 , allloss: 7.9852, dt: 1181.16ms, fracRes: 0.0112, norm(attn): 0.2100, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9874, norm:11.5331, tok/sec: 110968.48, flops:43.23, batch-reuse:1
@ 522 train 6.5441 , allloss: 7.8329, dt: 1180.55ms, fracRes: 0.0104, norm(attn): 0.2031, norm(output): 0.0376, norm(x): 0.0356, norm(y): 0.9875, norm:10.1634, tok/sec: 111026.03, flops:43.26, batch-reuse:1
@ 523 train 6.6527 , allloss: 7.9043, dt: 1163.70ms, fracRes: 0.0109, norm(attn): 0.2129, norm(output): 0.0369, norm(x): 0.0350, norm(y): 0.9872, norm:9.0502, tok/sec: 112634.11, flops:43.88, batch-reuse:1
@ 524 train 6.5880 , allloss: 7.8140, dt: 1168.41ms, fracRes: 0.0116, norm(attn): 0.2158, norm(output): 0.0369, norm(x): 0.0350, norm(y): 0.9872, norm:16.8962, tok/sec: 112180.00, flops:43.71, batch-reuse:1
@ 525 train 6.5874 , allloss: 7.7902, dt: 1179.81ms, fracRes: 0.0119, norm(attn): 0.2178, norm(output): 0.0366, norm(x): 0.0346, norm(y): 0.9872, norm:7.2434, tok/sec: 111096.21, flops:43.28, batch-reuse:1
@ 526 train 6.6164 , allloss: 7.8547, dt: 1216.50ms, fracRes: 0.0110, norm(attn): 0.2129, norm(output): 0.0369, norm(x): 0.0347, norm(y): 0.9872, norm:11.9981, tok/sec: 107745.53, flops:41.98, batch-reuse:1
@ 527 train 6.6245 , allloss: 7.8651, dt: 1177.02ms, fracRes: 0.0104, norm(attn): 0.2012, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9874, norm:10.6114, tok/sec: 111358.76, flops:43.39, batch-reuse:1
@ 528 train 6.5809 , allloss: 7.8095, dt: 1153.82ms, fracRes: 0.0119, norm(attn): 0.2051, norm(output): 0.0369, norm(x): 0.0355, norm(y): 0.9873, norm:9.2703, tok/sec: 113598.68, flops:44.26, batch-reuse:1
@ 529 train 6.5172 , allloss: 7.7382, dt: 1178.92ms, fracRes: 0.0116, norm(attn): 0.2158, norm(output): 0.0371, norm(x): 0.0348, norm(y): 0.9870, norm:6.3437, tok/sec: 111180.17, flops:43.32, batch-reuse:1
@ 530 train 6.6364 , allloss: 7.8549, dt: 1203.69ms, fracRes: 0.0108, norm(attn): 0.2109, norm(output): 0.0376, norm(x): 0.0350, norm(y): 0.9871, norm:8.8946, tok/sec: 108892.14, flops:42.42, batch-reuse:1
@ 531 train 6.6718 , allloss: 7.8977, dt: 1179.07ms, fracRes: 0.0098, norm(attn): 0.2100, norm(output): 0.0364, norm(x): 0.0346, norm(y): 0.9870, norm:8.5423, tok/sec: 111165.96, flops:43.31, batch-reuse:1
@ 532 train 6.4914 , allloss: 7.7342, dt: 1179.66ms, fracRes: 0.0110, norm(attn): 0.2061, norm(output): 0.0371, norm(x): 0.0351, norm(y): 0.9871, norm:11.7638, tok/sec: 111110.02, flops:43.29, batch-reuse:1
@ 533 train 6.5525 , allloss: 7.7690, dt: 1166.79ms, fracRes: 0.0120, norm(attn): 0.2188, norm(output): 0.0359, norm(x): 0.0343, norm(y): 0.9868, norm:9.5515, tok/sec: 112335.16, flops:43.77, batch-reuse:1
@ 534 train 6.4774 , allloss: 7.7555, dt: 1161.65ms, fracRes: 0.0114, norm(attn): 0.2012, norm(output): 0.0386, norm(x): 0.0356, norm(y): 0.9871, norm:16.2889, tok/sec: 112832.29, flops:43.96, batch-reuse:1
@ 535 train 6.6063 , allloss: 7.8316, dt: 1162.76ms, fracRes: 0.0114, norm(attn): 0.2061, norm(output): 0.0366, norm(x): 0.0349, norm(y): 0.9870, norm:15.6130, tok/sec: 112725.22, flops:43.92, batch-reuse:1
@ 536 train 6.5669 , allloss: 7.7685, dt: 1171.88ms, fracRes: 0.0118, norm(attn): 0.2041, norm(output): 0.0366, norm(x): 0.0351, norm(y): 0.9870, norm:13.1229, tok/sec: 111847.31, flops:43.58, batch-reuse:1
@ 537 train 6.5397 , allloss: 7.7536, dt: 1161.19ms, fracRes: 0.0115, norm(attn): 0.2051, norm(output): 0.0366, norm(x): 0.0350, norm(y): 0.9870, norm:9.3170, tok/sec: 112877.33, flops:43.98, batch-reuse:1
@ 538 train 6.4879 , allloss: 7.7317, dt: 1149.61ms, fracRes: 0.0123, norm(attn): 0.2119, norm(output): 0.0366, norm(x): 0.0347, norm(y): 0.9868, norm:13.2548, tok/sec: 114014.48, flops:44.42, batch-reuse:1
@ 539 train 6.5732 , allloss: 7.8578, dt: 1158.09ms, fracRes: 0.0122, norm(attn): 0.2168, norm(output): 0.0369, norm(x): 0.0344, norm(y): 0.9865, norm:20.9336, tok/sec: 113179.61, flops:44.09, batch-reuse:1
@ 540 train 6.6030 , allloss: 7.8823, dt: 1182.98ms, fracRes: 0.0104, norm(attn): 0.2021, norm(output): 0.0376, norm(x): 0.0354, norm(y): 0.9869, norm:8.4478, tok/sec: 110797.75, flops:43.17, batch-reuse:1
@ 541 train 6.5780 , allloss: 7.8615, dt: 1176.51ms, fracRes: 0.0091, norm(attn): 0.1914, norm(output): 0.0366, norm(x): 0.0355, norm(y): 0.9870, norm:30.3986, tok/sec: 111407.26, flops:43.40, batch-reuse:1
@ 542 train 6.6662 , allloss: 8.0419, dt: 1202.61ms, fracRes: 0.0097, norm(attn): 0.1885, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9868, norm:42.9930, tok/sec: 108989.68, flops:42.46, batch-reuse:1
@ 543 train 6.7249 , allloss: 7.9711, dt: 1206.17ms, fracRes: 0.0101, norm(attn): 0.2021, norm(output): 0.0376, norm(x): 0.0352, norm(y): 0.9869, norm:15.8150, tok/sec: 108668.12, flops:42.34, batch-reuse:1
@ 544 train 6.6049 , allloss: 7.8577, dt: 1202.75ms, fracRes: 0.0109, norm(attn): 0.1934, norm(output): 0.0386, norm(x): 0.0359, norm(y): 0.9871, norm:17.9012, tok/sec: 108976.76, flops:42.46, batch-reuse:1
@ 545 train 6.5951 , allloss: 7.8269, dt: 1144.01ms, fracRes: 0.0106, norm(attn): 0.1953, norm(output): 0.0378, norm(x): 0.0356, norm(y): 0.9870, norm:13.2962, tok/sec: 114572.87, flops:44.64, batch-reuse:1
@ 546 train 6.5244 , allloss: 7.7300, dt: 1184.71ms, fracRes: 0.0110, norm(attn): 0.2051, norm(output): 0.0366, norm(x): 0.0351, norm(y): 0.9868, norm:11.9291, tok/sec: 110636.36, flops:43.10, batch-reuse:1
@ 547 train 6.6722 , allloss: 7.9237, dt: 1198.88ms, fracRes: 0.0101, norm(attn): 0.1963, norm(output): 0.0378, norm(x): 0.0359, norm(y): 0.9870, norm:13.1439, tok/sec: 109328.41, flops:42.59, batch-reuse:1
@ 548 train 6.6838 , allloss: 7.9774, dt: 1204.44ms, fracRes: 0.0108, norm(attn): 0.1855, norm(output): 0.0391, norm(x): 0.0369, norm(y): 0.9871, norm:13.3560, tok/sec: 108823.58, flops:42.40, batch-reuse:1
@ 549 train 6.6086 , allloss: 7.9153, dt: 1182.88ms, fracRes: 0.0104, norm(attn): 0.1875, norm(output): 0.0383, norm(x): 0.0365, norm(y): 0.9870, norm:13.7100, tok/sec: 110807.21, flops:43.17, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.1855,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.9922,     0.0039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2275,     0.4785,     0.1855,     0.1089,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3379,     0.0011,     0.2070,     0.4434,     0.0101,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3223,     0.0001,     0.2432,     0.4238,     0.0072,     0.0044,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2930,     0.0001,     0.1465,     0.5391,     0.0079,     0.0096,     0.0061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0327,     0.1162,     0.0383,     0.0102,     0.4414,     0.2285,     0.1299,     0.0033,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0737,     0.0000,     0.0376,     0.1699,     0.0009,     0.0010,     0.0012,     0.7148,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1787,     0.0069,     0.1416,     0.1650,     0.0349,     0.0459,     0.0359,     0.2490,     0.0249,     0.1162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0237,     0.0000,     0.0084,     0.1348,     0.0000,     0.0000,     0.0000,     0.8242,     0.0000,     0.0101,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0161,     0.1299,     0.0177,     0.0117,     0.0559,     0.0811,     0.0762,     0.0112,     0.1758,     0.0167,     0.4004,     0.0081,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.1113,     0.0015,     0.0006,     0.0359,     0.0240,     0.0410,     0.0003,     0.1367,     0.0019,     0.6445,     0.0005,     0.0002,     0.0000,     0.0000],
        [    0.0618,     0.0005,     0.0391,     0.0967,     0.0033,     0.0034,     0.0048,     0.4141,     0.0024,     0.0332,     0.0002,     0.1641,     0.1719,     0.0052,     0.0000],
        [    0.0588,     0.0002,     0.0718,     0.0884,     0.0026,     0.0024,     0.0029,     0.3203,     0.0010,     0.0261,     0.0001,     0.1025,     0.3164,     0.0032,     0.0041]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0075, -0.0142,  0.0224,  ...,  0.0005,  0.0022, -0.0159],
        [-0.0278,  0.0284,  0.0126,  ...,  0.0107, -0.0203, -0.0043],
        [ 0.0078,  0.0119,  0.0173,  ..., -0.0081, -0.0210, -0.0015],
        ...,
        [-0.0186, -0.0079,  0.0165,  ...,  0.0019, -0.0022, -0.0205],
        [ 0.0037, -0.0210, -0.0050,  ...,  0.0178,  0.0072, -0.0191],
        [ 0.0133, -0.0135,  0.0107,  ..., -0.0066,  0.0070,  0.0014]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0654, -0.0947, -0.2578,  0.5742, -0.2168, -0.8906, -1.2188, -0.3066,  0.1963,  0.2969, -0.4785, -1.1484,  0.5273,  0.0060,  0.4043, -0.5117,  0.4453,  0.7344,  0.0332, -1.7812,  0.6367,  0.6875,  0.2539,  0.0064,  1.4531, -1.0078, -0.4766, -0.1455, -0.4395, -0.5039, -0.7656, -0.0388,
        -0.4746, -0.9062, -0.8828,  0.3672, -0.1855, -0.1318,  0.5273, -0.5430,  0.0386,  0.4180, -1.7266, -1.2266,  0.4805,  1.6016, -0.5625,  0.1318, -0.7930,  0.0869, -0.8477,  0.3184, -0.3066,  0.1670, -0.0376,  0.4727,  0.5977,  0.5547,  0.9102,  0.2539,  0.2578, -0.3848, -1.2422,  0.5938],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0207, -0.0027, -0.0233,  ...,  0.0297, -0.0022,  0.0394],
        [ 0.0023, -0.0361,  0.0145,  ...,  0.0411, -0.0302,  0.0208],
        [-0.0125, -0.0177,  0.0085,  ..., -0.0126, -0.0046,  0.0134],
        ...,
        [ 0.0001,  0.0128, -0.0235,  ...,  0.0191,  0.0135,  0.0301],
        [ 0.0202,  0.0052, -0.0005,  ...,  0.0379, -0.0074,  0.0096],
        [ 0.0241, -0.0323,  0.0011,  ...,  0.0078, -0.0140,  0.0068]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5039,  0.9766, -0.7695,  0.1055,  0.3125,  0.6055,  0.7773, -0.0134,  0.1553, -0.3047, -0.0311,  0.3906, -0.8281, -0.1631,  0.8086,  0.0114, -0.6172,  1.0703, -0.1387,  1.9375, -0.2539,  0.2314, -0.0294,  0.7266, -0.6016,  0.6172,  0.7109,  0.8086, -0.5703,  0.9141,  0.7344,  0.2354,
         1.2500,  0.7344,  1.0938,  0.2891, -0.5039,  0.3281,  1.2109,  0.0811,  0.1758, -0.8594,  1.2109,  1.9297, -0.8320, -1.0234,  0.3223,  1.5625,  1.4609, -1.0859,  1.0625, -0.0747, -0.6875, -0.1641, -0.5742, -0.4648, -0.7148, -2.2500,  0.1128, -0.0476,  0.0581,  1.7422,  0.5469, -0.5078],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -1.4844,  -0.1514,   0.4043,  -1.1016,  -1.4141,  -0.8789,   1.1719,  -1.9219,   0.1748,  -2.9844,   0.1943,   0.4980,  -1.4062,  -0.6797],
        [  0.0000,   6.0938,   0.5430,   0.0374,   2.8281,   2.4531,   3.2656,  -0.0204,   4.0938,   0.7930,   6.0625,  -0.9297,  -0.9727,   2.2812,   1.9531],
        [  0.0000,   0.7383,  -0.2080,  -0.7383,   0.8984,   1.1094,   0.8203,  -0.6133,   1.3281,   0.0148,   1.8438,  -0.3750,  -0.6523,   1.2188,   0.8516],
        [  0.0000,  -5.7812,  -0.4922,   0.2715,  -3.5156,  -3.4219,  -3.4375,   2.0781,  -4.8438,  -0.5820,  -7.7812,   1.0469,   0.9688,  -3.0625,  -2.1094],
        [  0.0000,  -7.8438,  -0.2812,   0.2715,  -3.7969,  -4.2812,  -4.5312,   1.0938,  -5.7812,  -0.5547,  -9.0625,   1.2734,   1.6562,  -3.4062,  -2.9375],
        [  0.0000,  -7.7812,  -0.6914,   0.6094,  -3.6094,  -3.4219,  -3.8750,   0.7266,  -5.5000,  -0.8906,  -7.5000,   1.0938,   1.3125,  -3.1094,  -3.2656],
        [  0.0000,   1.2656,   0.1602,  -1.1641,   2.6094,   1.9453,   1.3750,  -2.2969,   2.6562,  -1.2656,   4.7812,  -1.0469,  -1.6094,   2.1406,   1.6641],
        [  0.0000,  -8.1250,  -0.6758,   0.8320,  -4.4375,  -4.3125,  -4.1562,   2.2656,  -5.6875,  -0.9336,  -9.2500,   1.2969,   1.5469,  -3.8125,  -3.3438],
        [  0.0000,  -3.2656,  -0.2295,  -0.0781,  -1.6328,  -1.3594,  -1.6016,   0.3320,  -1.9688,  -0.4277,  -3.0469,   0.5000,   0.4180,  -0.9844,  -1.1172],
        [  0.0000, -10.2500,  -1.0391,   1.7344,  -6.1875,  -6.1875,  -6.6250,   3.5469,  -8.9375,  -0.8594, -13.5625,   1.9297,   3.1719,  -5.9062,  -4.3125],
        [  0.0000,   2.0781,   0.0933,  -0.3184,   1.2422,   1.6094,   1.5547,  -0.3691,   2.3906,   0.0325,   3.2031,  -0.6953,  -0.0339,   1.0156,   0.1084],
        [  0.0000,   4.3438,   0.0275,  -0.8594,   3.2031,   2.7969,   3.3281,  -1.6172,   4.5312,   0.2773,   6.0938,  -1.0859,  -1.8984,   3.0625,   1.9766],
        [  0.0000,  -4.7500,  -0.4570,   0.4473,  -2.9219,  -2.8906,  -2.5625,   1.9062,  -3.2344,  -0.6172,  -5.8125,   0.9766,   1.0234,  -2.4688,  -2.1875],
        [  0.0000,  -5.4688,   0.1992,   0.4062,  -3.0938,  -3.1875,  -3.0000,   1.6953,  -4.0312,  -0.8125,  -6.3438,   0.5547,   1.6797,  -2.9219,  -2.6719]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5270],
        [0.2328],
        [0.2260],
        [0.1523],
        [0.1696],
        [0.1803],
        [0.0143],
        [0.0240],
        [0.1124],
        [0.0043],
        [0.0254],
        [0.0024],
        [0.0257],
        [0.0510]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.9922,     0.0032,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0850,     0.7148,     0.1060,     0.0153,     0.0781,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0244,     0.0001,     0.9766,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1631,     0.0206,     0.8047,     0.0036,     0.0033,     0.0020,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1025,     0.0071,     0.8867,     0.0008,     0.0032,     0.0002,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1865,     0.0303,     0.7422,     0.0093,     0.0142,     0.0053,     0.0048,     0.0018,     0.0053,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1221,     0.2383,     0.3184,     0.0034,     0.0405,     0.0615,     0.0864,     0.0302,     0.0615,     0.0383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1138,     0.0967,     0.1064,     0.1162,     0.0815,     0.0898,     0.0869,     0.1436,     0.0664,     0.0588,     0.0391,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1030,     0.2559,     0.2295,     0.0014,     0.0356,     0.0304,     0.0569,     0.0053,     0.0581,     0.0148,     0.2051,     0.0038,     0.0000,     0.0000,     0.0000],
        [    0.1021,     0.0269,     0.8359,     0.0009,     0.0046,     0.0006,     0.0013,     0.0001,     0.0018,     0.0015,     0.0233,     0.0011,     0.0004,     0.0000,     0.0000],
        [    0.0011,     0.0762,     0.0004,     0.0001,     0.0087,     0.2158,     0.2676,     0.2402,     0.0947,     0.0051,     0.0217,     0.0026,     0.0618,     0.0035,     0.0000],
        [    0.1592,     0.0238,     0.1226,     0.1924,     0.0569,     0.0332,     0.0291,     0.0269,     0.0325,     0.0579,     0.0294,     0.0898,     0.0525,     0.0530,     0.0410]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0075, -0.0142,  0.0224,  ...,  0.0005,  0.0022, -0.0159],
        [-0.0278,  0.0284,  0.0126,  ...,  0.0107, -0.0203, -0.0043],
        [ 0.0078,  0.0119,  0.0173,  ..., -0.0081, -0.0210, -0.0015],
        ...,
        [-0.0186, -0.0079,  0.0165,  ...,  0.0019, -0.0022, -0.0205],
        [ 0.0037, -0.0210, -0.0050,  ...,  0.0178,  0.0072, -0.0191],
        [ 0.0133, -0.0135,  0.0107,  ..., -0.0066,  0.0070,  0.0014]], device='cuda:0', requires_grad=True)
K: tensor([-0.4219,  0.0452,  0.3906,  0.5156, -1.0234, -1.4375, -1.1641,  0.0184,  0.5039, -0.3164,  0.2480,  0.0275,  0.6445,  0.5234, -0.1069, -1.3047,  0.8672,  0.0430, -0.1338, -1.0156, -0.0309,  0.1216,  0.2656, -0.2295,  0.0197, -1.3516, -0.2793, -1.1953,  0.8242, -0.4180,  0.8008, -0.6953,
        -1.4531,  0.0557, -0.1396,  0.4180,  2.0312, -0.9453, -1.0703, -0.0098,  0.7070,  0.7930, -0.9258, -0.0272,  0.6445,  1.4922, -0.9102, -0.1162, -0.2559,  0.4336, -0.1050, -0.8047,  0.8242, -0.6055,  0.6328,  0.7383,  0.1865,  0.1338, -0.1807, -0.9648,  0.0065, -0.4238, -0.7266, -0.2266],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0207, -0.0027, -0.0233,  ...,  0.0297, -0.0022,  0.0394],
        [ 0.0023, -0.0361,  0.0145,  ...,  0.0411, -0.0302,  0.0208],
        [-0.0125, -0.0177,  0.0085,  ..., -0.0126, -0.0046,  0.0134],
        ...,
        [ 0.0001,  0.0128, -0.0235,  ...,  0.0191,  0.0135,  0.0301],
        [ 0.0202,  0.0052, -0.0005,  ...,  0.0379, -0.0074,  0.0096],
        [ 0.0241, -0.0323,  0.0011,  ...,  0.0078, -0.0140,  0.0068]], device='cuda:0', requires_grad=True)
Q: tensor([     0.3457,      1.0469,     -0.5586,      0.3086,      0.0635,      1.6250,      0.3613,      0.9062,     -0.7773,     -0.7070,     -0.9375,     -1.1094,     -0.2412,      0.5078,      0.6484,      0.6641,      0.7461,     -0.5625,      1.0859,      0.6914,     -0.3711,     -1.4609,
             1.1250,      0.1060,      0.3594,     -0.4902,      0.4141,     -0.3359,     -0.3730,      0.8555,      0.1475,     -0.0179,      0.4121,     -0.3418,      0.6953,     -0.0090,     -0.6914,     -0.0117,      0.5664,      1.1172,     -0.3848,     -1.1172,      0.9570,      0.6172,
             0.4004,     -0.8516,      0.7969,      0.6914,     -0.3535,     -0.5273,      0.7734,     -0.2031,      0.0002,      0.3047,      0.4844,     -1.1953,      0.0045,     -0.4941,     -0.7656,      0.0576,      0.0571,      0.6367,     -0.9883,     -0.1104], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,   5.9375,  -2.4375,   1.9375,   5.2188,   9.1250,   9.5625,  11.0000,   8.0625,   4.5000,   4.5938,   3.8594,   8.2500,   3.4219,   3.4531],
        [  0.0000,   8.6250,  -4.4688,   5.4375,   9.0000,  14.3125,  14.8750,  17.1250,  12.6875,   8.2500,   7.9375,   7.4062,  12.6250,   6.5938,   6.5938],
        [  0.0000,   5.4062,  -0.3184,  -4.3438,   1.0781,   4.0938,   5.2188,   4.3438,   4.2812,   0.4160,   3.4062,  -0.6641,   2.4062,   0.6836,   3.2031],
        [  0.0000,   2.1406,   0.2227,  -1.7109,  -0.0825,   1.1875,   1.7422,   1.9219,   1.6406,   0.0688,   1.1016,  -0.1357,   1.2422,   0.4043,   1.2500],
        [  0.0000,  -5.4688,   3.6875,  -4.5312,  -6.4688, -10.3750,  -9.8125, -11.8750,  -8.7500,  -6.4688,  -5.0625,  -5.1562,  -8.6875,  -4.9375,  -4.1250],
        [  0.0000,  -2.0625,   1.5938,  -3.8125,  -3.8906,  -4.4062,  -4.0000,  -5.3750,  -3.5781,  -3.5938,  -1.6719,  -2.9844,  -4.1562,  -2.5781,  -1.2266],
        [  0.0000,  -2.6719,   2.1562,  -4.8438,  -3.4688,  -6.2188,  -6.0000,  -7.6250,  -4.7500,  -4.2812,  -1.9531,  -4.4688,  -6.2500,  -2.8281,  -1.9219],
        [  0.0000,  -1.8203,   1.3828,  -2.9844,  -2.5781,  -3.5469,  -3.6562,  -4.6562,  -3.5625,  -2.9062,  -1.8984,  -2.4844,  -3.4062,  -2.0938,  -1.4922],
        [  0.0000,   0.6680,   0.9570,  -3.5781,  -1.1016,  -0.6836,  -0.3457,  -1.3984,  -0.6836,  -1.1562,   0.2500,  -2.1875,  -1.7500,  -1.0547,   0.2314],
        [  0.0000,  -0.1621,  -0.0645,   0.0221,  -0.3340,  -0.2324,  -0.2656,   0.2334,  -0.5352,  -0.6562,  -1.0625,  -0.2100,   0.6484,  -0.7344,  -0.3828],
        [  0.0000,   0.9102,   0.7969,  -4.2812,  -1.0625,  -1.2188,  -0.5977,  -2.9688,  -0.5742,  -1.9453,   0.6836,  -3.2969,  -3.0156,  -1.1875,   0.5117],
        [  0.0000,  -1.3359,   2.1094,  -4.7188,  -3.0938,  -5.1250,  -4.3438,  -6.7188,  -4.0625,  -4.2188,  -1.4766,  -4.5312,  -5.4375,  -2.6094,  -1.7188],
        [  0.0000,   4.2188,  -1.0156,  -2.1875,   2.0469,   5.2500,   5.4688,   5.3750,   4.4375,   1.5078,   2.9688,   0.8477,   4.0000,   1.1250,   2.7812],
        [  0.0000,  -1.8984,  -0.2578,   0.1924,  -1.0234,  -1.5703,  -1.6953,  -1.7812,  -1.5859,  -1.0078,  -1.6875,  -0.5703,  -1.1094,  -1.0938,  -1.3594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2699],
        [0.2407],
        [0.2841],
        [0.2340],
        [0.1623],
        [0.2053],
        [0.1449],
        [0.1807],
        [0.1535],
        [0.0979],
        [0.0987],
        [0.0980],
        [0.0626],
        [0.1016]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0864,     0.9141,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0898,     0.9102,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2119,     0.5273,     0.2334,     0.0269,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2002,     0.3320,     0.3066,     0.0713,     0.0903,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0393,     0.0295,     0.9258,     0.0022,     0.0013,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2031,     0.1846,     0.4277,     0.0269,     0.0630,     0.0479,     0.0461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1396,     0.1069,     0.6055,     0.0330,     0.0518,     0.0120,     0.0248,     0.0258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1357,     0.2773,     0.4609,     0.0349,     0.0197,     0.0145,     0.0188,     0.0258,     0.0127,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0703,     0.0981,     0.0588,     0.0152,     0.0693,     0.0776,     0.0432,     0.1807,     0.3457,     0.0422,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0869,     0.2256,     0.0688,     0.0439,     0.0620,     0.1050,     0.0703,     0.1357,     0.1064,     0.0378,     0.0574,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1050,     0.1260,     0.1396,     0.0549,     0.0815,     0.0334,     0.0554,     0.0908,     0.1191,     0.0630,     0.0781,     0.0537,     0.0000,     0.0000,     0.0000],
        [    0.0889,     0.0776,     0.6797,     0.0249,     0.0214,     0.0029,     0.0095,     0.0099,     0.0089,     0.0237,     0.0226,     0.0219,     0.0099,     0.0000,     0.0000],
        [    0.0035,     0.0193,     0.0002,     0.0061,     0.0234,     0.1777,     0.0620,     0.2969,     0.1934,     0.0093,     0.0082,     0.0175,     0.1826,     0.0005,     0.0000],
        [    0.1069,     0.0850,     0.1475,     0.0605,     0.0664,     0.0522,     0.0547,     0.0620,     0.0535,     0.0312,     0.0437,     0.0713,     0.0654,     0.0391,     0.0605]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0075, -0.0142,  0.0224,  ...,  0.0005,  0.0022, -0.0159],
        [-0.0278,  0.0284,  0.0126,  ...,  0.0107, -0.0203, -0.0043],
        [ 0.0078,  0.0119,  0.0173,  ..., -0.0081, -0.0210, -0.0015],
        ...,
        [-0.0186, -0.0079,  0.0165,  ...,  0.0019, -0.0022, -0.0205],
        [ 0.0037, -0.0210, -0.0050,  ...,  0.0178,  0.0072, -0.0191],
        [ 0.0133, -0.0135,  0.0107,  ..., -0.0066,  0.0070,  0.0014]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0410, -0.0048,  0.8281,  1.3281, -1.2188, -0.3867, -0.0300,  0.2695, -0.3086, -0.3770,  0.7109,  1.1094,  0.1040, -0.0693, -0.2734, -0.2656,  0.5117, -0.3750,  0.7500, -0.3242,  0.3828,  0.9883,  0.7656, -0.0542, -0.8242, -0.5664,  0.0164, -0.7969,  1.2500, -0.6680, -0.0122, -0.7656,
        -0.9922,  0.7383, -0.2197,  1.3750,  1.0234, -0.9570, -0.2148,  0.2100,  0.8867, -0.1357, -0.0278, -0.4551, -0.4238,  1.6094, -0.4336, -1.1953,  0.1230,  0.0488, -0.6484, -1.0312,  0.5078, -0.3770,  0.2168, -0.2832,  0.0786, -0.7539, -0.8945,  0.3770,  0.0603, -0.2852,  0.4023, -0.3926],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0207, -0.0027, -0.0233,  ...,  0.0297, -0.0022,  0.0394],
        [ 0.0023, -0.0361,  0.0145,  ...,  0.0411, -0.0302,  0.0208],
        [-0.0125, -0.0177,  0.0085,  ..., -0.0126, -0.0046,  0.0134],
        ...,
        [ 0.0001,  0.0128, -0.0235,  ...,  0.0191,  0.0135,  0.0301],
        [ 0.0202,  0.0052, -0.0005,  ...,  0.0379, -0.0074,  0.0096],
        [ 0.0241, -0.0323,  0.0011,  ...,  0.0078, -0.0140,  0.0068]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1533,  0.4590, -0.3418, -0.0260, -0.6875,  1.2031, -0.7383, -0.2969, -0.6680, -0.1240,  0.0559, -1.1094, -0.0947, -0.3926, -1.2812,  0.6992,  0.9531,  0.7305,  0.5430,  0.2061, -0.1494, -1.4531,  0.1982,  0.3516,  0.2871, -0.7773, -1.0625,  0.3066,  0.3066, -0.4258, -0.1445, -0.4707,
        -0.4082, -0.2637, -0.4688, -0.0859, -0.6445, -0.6172, -0.2734,  0.7305, -0.6875, -0.0732, -0.3164, -0.3887,  0.7266, -1.0156,  0.3203,  0.0781, -1.0781, -0.4082,  0.8906,  0.3457,  0.7109,  0.0074,  0.6211,  0.1367,  0.3535, -0.1367,  0.7070, -0.4902,  0.7070,  0.6406, -0.3242,  0.2617],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.3594, -3.8438,  1.1016,  3.6250,  6.4062,  4.7812,  7.1562,  6.4375,  1.6406,  2.5000,  2.6719,  6.3125, -1.0938,  2.8594],
        [ 0.0000,  2.3125, -6.9688,  3.9219,  5.8125, 10.5625,  8.6250,  9.8125,  9.3750,  3.9219,  4.2812,  4.2500,  8.6250, -0.7773,  5.4062],
        [ 0.0000,  0.9141,  0.0962, -2.0625, -0.4707, -0.6289, -0.1963,  0.8828,  1.1953, -1.5312, -0.2168, -0.4277,  0.5820, -1.5234, -0.0781],
        [ 0.0000,  0.5078,  0.4297, -1.0312, -0.7930, -0.7070, -0.6328,  0.1191, -0.3379, -0.6094, -0.7148, -0.0466,  0.1230, -1.1328, -0.1079],
        [ 0.0000, -0.2832,  3.1562, -2.8750, -3.4375, -5.0938, -3.8906, -3.7344, -3.9219, -2.3750, -2.7188, -1.6875, -3.3750, -1.2578, -2.1250],
        [ 0.0000, -0.0986,  0.7461, -2.0312, -1.1797, -1.4453, -1.4844, -0.3105,  0.2295, -1.5469, -0.7656, -0.6133, -0.3477, -1.1875, -0.6445],
        [ 0.0000, -0.2656,  1.4688, -1.4375, -0.9883, -2.4531, -1.7266, -1.6875, -1.1406, -1.3984, -0.6992, -1.2812, -1.6641, -0.2314, -0.8594],
        [ 0.0000,  0.7109,  1.2188, -1.3594, -1.9375, -2.2344, -1.9766, -1.6641, -2.3750, -1.6797, -1.9062, -0.6914, -1.5156, -1.4062, -0.9844],
        [ 0.0000,  0.3359, -0.1797, -1.5312, -0.0133,  0.0986, -0.4883,  0.9414,  1.5938, -0.5078, -0.3672, -0.3828,  0.3672, -1.0547, -0.1138],
        [ 0.0000,  0.9570, -0.2285, -0.6797, -0.3379,  0.1914, -0.2139,  0.4453,  0.2061, -0.8320, -0.4160,  0.3086,  0.8984, -1.5625,  0.4043],
        [ 0.0000,  0.1836,  0.2832, -0.6445, -0.2520, -1.1406, -0.6406, -0.1465,  0.1279, -0.5117, -0.2930, -0.6680, -0.5039, -0.5469,  0.2021],
        [ 0.0000, -0.1377,  2.0312, -1.2734, -1.4219, -3.4219, -2.2344, -2.1875, -2.3125, -1.3203, -1.3750, -1.3984, -2.2031, -0.2207, -0.8867],
        [ 0.0000,  1.7109, -3.1250,  0.5703,  1.9062,  3.9375,  2.8750,  4.4375,  4.0312,  0.9844,  0.8672,  1.6172,  3.9688, -2.0156,  2.0156],
        [ 0.0000, -0.2305,  0.3223, -0.5703, -0.4785, -0.7148, -0.6719, -0.5430, -0.6914, -1.2344, -0.8945, -0.4023, -0.4941, -1.0078, -0.5664]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4458],
        [0.2541],
        [0.2388],
        [0.1475],
        [0.0860],
        [0.1173],
        [0.1028],
        [0.0818],
        [0.0773],
        [0.0635],
        [0.0763],
        [0.0651],
        [0.0379],
        [0.0578]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9648, 0.0339, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3633, 0.1807, 0.4570, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.3691, 0.3027, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.3145, 0.2559, 0.1562, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.1260, 0.6055, 0.0898, 0.0640, 0.0258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.2109, 0.1201, 0.1309, 0.1289, 0.1553, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.0864, 0.0327, 0.0737, 0.0977, 0.4922, 0.0879, 0.0077, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.0410, 0.0374, 0.0908, 0.1235, 0.4512, 0.0752, 0.0190, 0.0312, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1758, 0.1025, 0.1235, 0.0967, 0.0781, 0.2412, 0.0732, 0.0374, 0.0396, 0.0325, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.0623, 0.0124, 0.0933, 0.1279, 0.4395, 0.0986, 0.0182, 0.0188, 0.0400, 0.0075, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.2207, 0.0679, 0.0635, 0.0645, 0.3008, 0.0508, 0.0104, 0.0289, 0.0342, 0.0090, 0.0118, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.0503, 0.0559, 0.0854, 0.1143, 0.2793, 0.1094, 0.0251, 0.0479, 0.0352, 0.0204, 0.0282, 0.0295, 0.0000, 0.0000],
        [0.1079, 0.0234, 0.0371, 0.0879, 0.1299, 0.3281, 0.0630, 0.0259, 0.0315, 0.0493, 0.0087, 0.0549, 0.0266, 0.0259, 0.0000],
        [0.0967, 0.0679, 0.0496, 0.0977, 0.0986, 0.2109, 0.0762, 0.0234, 0.0311, 0.0422, 0.0249, 0.0437, 0.0251, 0.0322, 0.0801]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0075, -0.0142,  0.0224,  ...,  0.0005,  0.0022, -0.0159],
        [-0.0278,  0.0284,  0.0126,  ...,  0.0107, -0.0203, -0.0043],
        [ 0.0078,  0.0119,  0.0173,  ..., -0.0081, -0.0210, -0.0015],
        ...,
        [-0.0186, -0.0079,  0.0165,  ...,  0.0019, -0.0022, -0.0205],
        [ 0.0037, -0.0210, -0.0050,  ...,  0.0178,  0.0072, -0.0191],
        [ 0.0133, -0.0135,  0.0107,  ..., -0.0066,  0.0070,  0.0014]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5898,  0.2256, -0.7734, -0.1318,  1.0000,  0.2520,  0.5703, -0.4551, -0.3496, -0.3086, -0.3848, -0.4629, -0.2031, -0.0087,  0.3516,  0.0845,  0.7461,  1.2500,  0.3984,  0.6016,  0.3105,  0.4414,  0.2773,  0.7227, -0.0171,  0.1128, -0.5664,  0.8398, -0.3789, -0.3672,  0.1055,  0.2988,
        -0.7109, -0.0197, -0.1885,  0.4453, -0.2139,  1.2656, -0.8242,  0.3926,  0.2773, -0.2715,  0.5703, -0.1162,  0.3359, -0.6406,  0.6367,  0.9414, -0.6445,  0.5508,  0.9492, -0.0085,  0.2412,  0.0153, -0.0938,  0.7461, -0.3184, -0.1748,  0.1055,  1.0938, -0.5859,  0.0608, -0.6680,  0.7031],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0207, -0.0027, -0.0233,  ...,  0.0297, -0.0022,  0.0394],
        [ 0.0023, -0.0361,  0.0145,  ...,  0.0411, -0.0302,  0.0208],
        [-0.0125, -0.0177,  0.0085,  ..., -0.0126, -0.0046,  0.0134],
        ...,
        [ 0.0001,  0.0128, -0.0235,  ...,  0.0191,  0.0135,  0.0301],
        [ 0.0202,  0.0052, -0.0005,  ...,  0.0379, -0.0074,  0.0096],
        [ 0.0241, -0.0323,  0.0011,  ...,  0.0078, -0.0140,  0.0068]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6523, -0.6172,  0.2715,  0.0898,  0.0444,  0.8945,  0.9102,  0.2715,  0.5820,  0.3594,  0.1221, -0.1406,  0.0320,  0.4375,  0.6016,  0.0090,  0.2988, -0.6641, -0.2090,  0.4160, -0.2539, -1.3984, -0.4648,  0.3945,  0.1826, -0.0737,  0.3066,  0.4277, -0.9023, -0.2598, -0.0020, -0.1406,
         0.5547,  0.8242,  0.9805, -0.0413, -1.0391,  0.0542,  1.1016, -0.5820, -0.4590, -0.2070,  0.6289,  0.3730, -1.9531,  0.1650, -0.0972,  1.0859,  0.8750,  0.2295, -0.1963,  0.2051, -1.6172, -0.0884,  0.3438, -0.4902,  0.4922, -0.7812, -0.7383,  0.8359, -0.7852, -0.0055,  0.4648, -0.3613],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.3438, -0.7266, -0.0688,  0.8203,  0.9375, -0.1133,  0.4258, -1.0938, -1.1797,  1.0938,  1.2969, -0.4219, -1.9688, -1.1797],
        [ 0.0000, -0.6992,  0.2295,  0.0457, -0.1729, -0.1279, -0.0306,  0.8789, -0.6758, -0.1226,  0.4609,  0.6680,  0.7422, -0.8555, -0.2354],
        [ 0.0000,  0.6758,  0.4727, -0.2910, -0.6328, -0.1611, -0.5781, -1.2891, -0.7656, -0.7852, -1.9062, -1.3594, -0.4297, -0.2695, -0.1514],
        [ 0.0000,  0.5352,  0.3262, -0.1689, -0.7422,  0.1777, -0.6719, -0.6367, -0.6719, -0.2715, -0.9766, -1.2344,  0.1670, -0.2168, -0.3574],
        [ 0.0000,  0.3535,  1.9219,  0.0136, -0.3262, -1.2344, -0.6016,  0.2002,  0.5273, -0.0267, -0.1699,  0.0303,  0.4121,  0.7461, -0.3965],
        [ 0.0000,  0.4785, -0.0815,  0.0043, -0.0118,  0.1729, -0.0479, -1.0469, -0.4219, -0.3262, -0.9961, -1.1094, -0.8359, -0.2891,  0.2344],
        [ 0.0000, -0.3379, -1.3125, -0.5000, -0.2178,  1.3984, -0.3223, -2.7500, -1.3672, -1.7344, -2.6719, -2.4688, -2.0781, -1.0625, -0.1846],
        [ 0.0000, -1.1562, -1.2500, -0.3633, -0.0583,  1.2422, -0.5547, -1.9219, -1.4297, -1.0312, -2.7656, -1.4219, -1.5625, -1.3594, -0.1748],
        [ 0.0000, -0.5352, -0.3496, -0.5938, -0.8086,  0.3184, -0.8711, -1.5469, -1.4922, -1.6875, -1.2188, -1.4062, -1.1484, -1.2812, -0.9570],
        [ 0.0000, -0.2734, -1.8906,  0.1299,  0.4492,  1.6797,  0.1895, -1.5000, -1.4688, -0.7148, -2.3906, -1.4844, -1.1953, -1.3672,  0.7031],
        [ 0.0000,  0.4707, -0.7109, -0.7734, -0.7617,  0.7773, -1.0000, -2.5781, -1.5625, -1.3984, -2.7188, -2.4531, -1.6172, -1.0078, -0.3867],
        [ 0.0000, -0.8555, -0.7539, -0.3262, -0.0383,  0.8594, -0.0820, -1.5547, -0.9062, -1.2109, -1.7578, -1.4375, -1.3906, -0.9453, -0.2354],
        [ 0.0000, -1.5234, -1.0703, -0.2031,  0.1836,  1.1094, -0.5352, -1.4297, -1.2344, -0.7852, -2.5156, -0.6758, -1.4062, -1.4297, -0.1895],
        [ 0.0000, -0.3535, -0.6680,  0.0085,  0.0181,  0.7773, -0.2373, -1.4141, -1.1328, -0.8320, -1.3516, -0.7969, -1.3516, -1.1016, -0.1924]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8241],
        [0.3213],
        [0.0956],
        [0.0707],
        [0.0470],
        [0.0536],
        [0.0669],
        [0.0514],
        [0.0407],
        [0.0756],
        [0.0465],
        [0.0484],
        [0.0360],
        [0.0370]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0186,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.0903,     0.1143,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7109,     0.0591,     0.1514,     0.0767,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5703,     0.0520,     0.3418,     0.0276,     0.0083,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2852,     0.0703,     0.3105,     0.0664,     0.1426,     0.1260,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2598,     0.0535,     0.3184,     0.0310,     0.0186,     0.2695,     0.0503,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5156,     0.0177,     0.1060,     0.0108,     0.0081,     0.2676,     0.0747,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1660,     0.0732,     0.3320,     0.0471,     0.0275,     0.2461,     0.0547,     0.0142,     0.0383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3613,     0.0400,     0.1045,     0.0291,     0.0242,     0.2812,     0.0859,     0.0076,     0.0608,     0.0052,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3633,     0.0215,     0.0947,     0.0164,     0.0165,     0.3828,     0.0693,     0.0017,     0.0276,     0.0028,     0.0035,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1660,     0.0894,     0.2295,     0.0669,     0.0305,     0.1641,     0.0938,     0.0248,     0.0378,     0.0212,     0.0153,     0.0613,     0.0000,     0.0000,     0.0000],
        [    0.5820,     0.0119,     0.0571,     0.0079,     0.0091,     0.2285,     0.0645,     0.0005,     0.0234,     0.0008,     0.0020,     0.0132,     0.0002,     0.0000,     0.0000],
        [    0.1494,     0.0596,     0.2432,     0.0427,     0.0381,     0.1865,     0.0493,     0.0236,     0.0527,     0.0209,     0.0210,     0.0410,     0.0200,     0.0515,     0.0000],
        [    0.3086,     0.0469,     0.1592,     0.0294,     0.0173,     0.2383,     0.0505,     0.0041,     0.0315,     0.0044,     0.0092,     0.0315,     0.0035,     0.0272,     0.0374]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0075, -0.0142,  0.0224,  ...,  0.0005,  0.0022, -0.0159],
        [-0.0278,  0.0284,  0.0126,  ...,  0.0107, -0.0203, -0.0043],
        [ 0.0078,  0.0119,  0.0173,  ..., -0.0081, -0.0210, -0.0015],
        ...,
        [-0.0186, -0.0079,  0.0165,  ...,  0.0019, -0.0022, -0.0205],
        [ 0.0037, -0.0210, -0.0050,  ...,  0.0178,  0.0072, -0.0191],
        [ 0.0133, -0.0135,  0.0107,  ..., -0.0066,  0.0070,  0.0014]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1748, -0.2734,  0.2793, -0.5273,  1.0547,  0.2930, -0.4238, -1.2188, -0.9922,  1.1641, -1.0781, -0.8398, -0.3320,  0.1348,  0.6641,  0.0117,  0.9219,  1.1094,  0.6094,  0.8906,  0.6875, -0.1445,  0.8672, -0.2539,  0.6250,  0.3594, -0.8984,  0.1895,  0.0471, -0.6562, -0.5039, -0.4336,
        -0.8164, -0.0981, -0.5156, -0.3320,  0.1367,  1.3359, -0.9844, -0.2539, -0.3594, -0.6992,  0.2432, -0.3730,  1.3203, -0.1572, -0.1299,  0.3594, -0.3105,  1.1484, -0.2773,  0.6953,  0.6562,  0.3379, -0.5938,  1.1172,  0.4043,  0.5234, -0.3867, -0.0850,  0.3223, -1.1953, -1.1094,  1.2266],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0207, -0.0027, -0.0233,  ...,  0.0297, -0.0022,  0.0394],
        [ 0.0023, -0.0361,  0.0145,  ...,  0.0411, -0.0302,  0.0208],
        [-0.0125, -0.0177,  0.0085,  ..., -0.0126, -0.0046,  0.0134],
        ...,
        [ 0.0001,  0.0128, -0.0235,  ...,  0.0191,  0.0135,  0.0301],
        [ 0.0202,  0.0052, -0.0005,  ...,  0.0379, -0.0074,  0.0096],
        [ 0.0241, -0.0323,  0.0011,  ...,  0.0078, -0.0140,  0.0068]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0090,  0.2793,  0.1982,  0.1680,  0.4688, -0.1787,  1.1797,  1.5469,  1.6797,  0.1963,  0.6367, -0.2871, -0.8398, -0.1377,  0.6250, -0.3398,  0.7461, -0.3262, -0.4219,  0.3477, -0.3770, -0.6484, -0.2324,  0.5078, -1.1016,  0.2773,  0.4961,  0.2373, -0.6641, -0.1924,  1.3750, -0.5430,
         0.1797,  0.8867,  1.7031,  0.7734, -0.8281, -0.5352,  1.0391, -1.2188, -1.0156, -0.1826, -0.0039,  0.9219, -1.8906,  0.8711, -0.9648,  0.8945,  1.0391, -0.6523,  0.3672,  0.1689, -2.4531,  0.7383, -0.5195, -0.8711, -0.4648, -2.1406, -1.6172,  1.3203, -1.0547,  0.7344,  0.4609, -1.3438],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.9688, -3.7344, -3.3750, -0.7812, -1.8672, -2.1719, -3.7188, -0.8398, -4.0000, -1.1094, -1.3125, -3.9688, -1.1875, -3.3438],
        [ 0.0000, -2.1719, -1.9375, -1.1875,  0.5391, -1.0469, -0.9766, -0.3809,  0.3770, -0.5195,  0.6875,  0.2949, -0.3340,  0.1807, -1.6172],
        [ 0.0000, -2.4844, -1.5469, -2.2344, -2.0625, -1.1328, -1.4766, -4.0000, -1.8125, -3.9375, -2.7031, -2.0312, -4.1250, -1.8828, -2.1250],
        [ 0.0000, -2.3906, -0.5117, -3.0312, -4.2188,  0.5039, -1.8438, -6.3750, -3.1875, -5.5000, -5.9688, -3.6406, -6.9375, -3.3438, -2.5312],
        [ 0.0000, -1.3984,  0.0854, -1.4531, -0.6914, -0.8125, -1.2891, -1.4766, -0.9609, -1.7734, -1.1484, -0.7656, -1.6328, -1.0156, -1.5078],
        [ 0.0000, -1.5781,  0.2021, -2.1250, -2.6406,  0.0386, -1.6406, -3.7969, -2.0625, -3.6719, -3.4844, -2.3125, -4.0938, -2.2969, -1.6875],
        [ 0.0000, -3.3750, -1.5781, -3.8594, -4.1562, -0.6562, -1.9297, -6.6562, -3.2344, -6.3750, -5.5312, -3.5938, -7.5000, -3.4062, -3.0156],
        [ 0.0000, -0.8164,  0.6953, -1.2578, -1.7969,  0.3965, -1.1094, -2.4531, -1.4688, -2.3750, -2.4219, -1.6953, -2.5469, -1.5078, -1.2344],
        [ 0.0000, -2.2031, -1.2422, -2.5156, -2.7031, -0.2559, -1.4375, -3.8594, -1.7812, -4.2500, -3.0938, -2.2969, -4.0938, -1.8047, -2.2969],
        [ 0.0000, -2.8281, -1.3438, -3.1094, -3.0938,  0.0525, -1.6562, -5.4062, -2.5781, -4.8750, -4.6250, -2.6875, -6.1875, -2.8594, -2.1875],
        [ 0.0000, -0.6211,  0.3223, -0.9102, -1.6953, -0.0128, -0.5703, -1.8984, -1.4844, -2.0625, -2.3906, -0.9961, -1.9688, -1.4531, -0.8242],
        [ 0.0000, -3.8906, -2.3125, -4.2812, -4.1562, -0.9297, -2.1875, -7.0000, -3.2188, -6.6250, -5.6562, -3.7812, -7.8438, -3.4219, -3.4062],
        [ 0.0000, -0.9219,  0.4844, -1.2500, -1.3672,  0.2217, -1.1094, -1.8516, -1.0469, -1.9688, -1.9688, -1.2969, -2.0156, -1.0625, -1.1562],
        [ 0.0000, -1.8828, -0.6641, -2.3594, -2.8750, -0.2598, -1.8125, -4.3438, -2.2812, -4.2500, -3.5156, -2.2812, -4.4688, -2.4375, -2.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8665],
        [0.4693],
        [0.4301],
        [0.3400],
        [0.2597],
        [0.1614],
        [0.2341],
        [0.0938],
        [0.1479],
        [0.2698],
        [0.0995],
        [0.2514],
        [0.0869],
        [0.1427]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0723 a:0.0221,:0.0549 and:0.0732,:0.0168.:0.1206 a:0.0262
:0.2236)


------
		( a:0.0221,:0.0549 and:0.0732,:0.0168.:0.1206 a:0.0262
:0.2236The:0.0859)
The first to be a few.
-based and the most of the
@ 550 train 6.6007 , allloss: 7.9224, dt: 1595.31ms, fracRes: 0.0098, norm(attn): 0.2002, norm(output): 0.0366, norm(x): 0.0351, norm(y): 0.9866, norm:27.7648, tok/sec: 82160.77, flops:32.01, batch-reuse:1
@ 551 train 6.6280 , allloss: 7.9209, dt: 1204.19ms, fracRes: 0.0090, norm(attn): 0.1914, norm(output): 0.0369, norm(x): 0.0353, norm(y): 0.9868, norm:12.7408, tok/sec: 108847.04, flops:42.41, batch-reuse:1
@ 552 train 6.4701 , allloss: 7.7979, dt: 1171.29ms, fracRes: 0.0090, norm(attn): 0.1904, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9868, norm:13.7806, tok/sec: 111903.52, flops:43.60, batch-reuse:1
@ 553 train 6.6204 , allloss: 7.9587, dt: 1174.25ms, fracRes: 0.0091, norm(attn): 0.1904, norm(output): 0.0378, norm(x): 0.0361, norm(y): 0.9869, norm:14.9604, tok/sec: 111621.69, flops:43.49, batch-reuse:1
@ 554 train 6.5809 , allloss: 7.9836, dt: 1193.91ms, fracRes: 0.0083, norm(attn): 0.1777, norm(output): 0.0391, norm(x): 0.0368, norm(y): 0.9871, norm:14.6627, tok/sec: 109783.44, flops:42.77, batch-reuse:1
@ 555 train 6.5443 , allloss: 7.8609, dt: 1174.09ms, fracRes: 0.0084, norm(attn): 0.1875, norm(output): 0.0376, norm(x): 0.0358, norm(y): 0.9869, norm:12.2555, tok/sec: 111637.31, flops:43.49, batch-reuse:1
@ 556 train 6.4828 , allloss: 7.7416, dt: 1159.48ms, fracRes: 0.0091, norm(attn): 0.2051, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9866, norm:16.4080, tok/sec: 113043.75, flops:44.04, batch-reuse:1
@ 557 train 6.5557 , allloss: 7.8343, dt: 1178.92ms, fracRes: 0.0092, norm(attn): 0.1885, norm(output): 0.0386, norm(x): 0.0359, norm(y): 0.9868, norm:8.2101, tok/sec: 111179.29, flops:43.32, batch-reuse:1
@ 558 train 6.6867 , allloss: 7.9115, dt: 1175.23ms, fracRes: 0.0093, norm(attn): 0.1953, norm(output): 0.0381, norm(x): 0.0354, norm(y): 0.9867, norm:8.6722, tok/sec: 111529.21, flops:43.45, batch-reuse:1
@ 559 train 6.8401 , allloss: 8.0226, dt: 1179.90ms, fracRes: 0.0114, norm(attn): 0.2061, norm(output): 0.0366, norm(x): 0.0349, norm(y): 0.9865, norm:10.5514, tok/sec: 111087.36, flops:43.28, batch-reuse:1
@ 560 train 6.7306 , allloss: 7.9842, dt: 1180.80ms, fracRes: 0.0089, norm(attn): 0.1875, norm(output): 0.0381, norm(x): 0.0362, norm(y): 0.9868, norm:11.3021, tok/sec: 111002.96, flops:43.25, batch-reuse:1
@ 561 train 6.8140 , allloss: 8.1379, dt: 1161.72ms, fracRes: 0.0083, norm(attn): 0.1855, norm(output): 0.0388, norm(x): 0.0365, norm(y): 0.9867, norm:10.9828, tok/sec: 112825.78, flops:43.96, batch-reuse:1
@ 562 train 6.6758 , allloss: 7.9786, dt: 1190.64ms, fracRes: 0.0088, norm(attn): 0.1992, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9865, norm:6.5557, tok/sec: 110085.05, flops:42.89, batch-reuse:1
@ 563 train 6.7967 , allloss: 8.0683, dt: 1210.13ms, fracRes: 0.0088, norm(attn): 0.2021, norm(output): 0.0371, norm(x): 0.0354, norm(y): 0.9864, norm:10.4950, tok/sec: 108312.03, flops:42.20, batch-reuse:1
@ 564 train 6.6242 , allloss: 7.9156, dt: 1214.54ms, fracRes: 0.0087, norm(attn): 0.1885, norm(output): 0.0386, norm(x): 0.0359, norm(y): 0.9866, norm:7.5512, tok/sec: 107919.30, flops:42.05, batch-reuse:1
@ 565 train 6.5116 , allloss: 7.7925, dt: 1213.19ms, fracRes: 0.0085, norm(attn): 0.1855, norm(output): 0.0381, norm(x): 0.0358, norm(y): 0.9866, norm:11.8628, tok/sec: 108038.79, flops:42.09, batch-reuse:1
@ 566 train 6.7077 , allloss: 7.9593, dt: 1212.84ms, fracRes: 0.0092, norm(attn): 0.1914, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9865, norm:8.4209, tok/sec: 108069.99, flops:42.10, batch-reuse:1
@ 567 train 6.7121 , allloss: 7.9383, dt: 1205.17ms, fracRes: 0.0098, norm(attn): 0.1992, norm(output): 0.0371, norm(x): 0.0352, norm(y): 0.9864, norm:8.5042, tok/sec: 108758.11, flops:42.37, batch-reuse:1
@ 568 train 6.7515 , allloss: 7.9919, dt: 1206.60ms, fracRes: 0.0102, norm(attn): 0.1865, norm(output): 0.0378, norm(x): 0.0360, norm(y): 0.9866, norm:7.3563, tok/sec: 108628.91, flops:42.32, batch-reuse:1
@ 569 train 6.6924 , allloss: 7.9648, dt: 1188.49ms, fracRes: 0.0094, norm(attn): 0.1895, norm(output): 0.0378, norm(x): 0.0353, norm(y): 0.9864, norm:11.1604, tok/sec: 110284.64, flops:42.97, batch-reuse:1
@ 570 train 6.6687 , allloss: 7.9618, dt: 1182.18ms, fracRes: 0.0089, norm(attn): 0.1836, norm(output): 0.0381, norm(x): 0.0359, norm(y): 0.9865, norm:7.1980, tok/sec: 110873.39, flops:43.20, batch-reuse:1
@ 571 train 6.6405 , allloss: 7.9121, dt: 1200.81ms, fracRes: 0.0091, norm(attn): 0.1895, norm(output): 0.0366, norm(x): 0.0357, norm(y): 0.9865, norm:9.6856, tok/sec: 109152.56, flops:42.53, batch-reuse:1
@ 572 train 6.6004 , allloss: 7.8559, dt: 1196.18ms, fracRes: 0.0090, norm(attn): 0.1934, norm(output): 0.0371, norm(x): 0.0350, norm(y): 0.9862, norm:9.3889, tok/sec: 109575.78, flops:42.69, batch-reuse:1
@ 573 train 6.6459 , allloss: 7.9150, dt: 1166.04ms, fracRes: 0.0092, norm(attn): 0.1904, norm(output): 0.0366, norm(x): 0.0351, norm(y): 0.9862, norm:12.0661, tok/sec: 112407.79, flops:43.79, batch-reuse:1
@ 574 train 6.6500 , allloss: 7.9017, dt: 1149.97ms, fracRes: 0.0087, norm(attn): 0.1895, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9863, norm:8.9506, tok/sec: 113978.19, flops:44.41, batch-reuse:1
@ 575 train 6.6114 , allloss: 7.8493, dt: 1170.95ms, fracRes: 0.0090, norm(attn): 0.1943, norm(output): 0.0366, norm(x): 0.0348, norm(y): 0.9861, norm:9.3149, tok/sec: 111936.19, flops:43.61, batch-reuse:1
@ 576 train 6.5704 , allloss: 7.8164, dt: 1176.80ms, fracRes: 0.0098, norm(attn): 0.1934, norm(output): 0.0369, norm(x): 0.0353, norm(y): 0.9861, norm:9.4888, tok/sec: 111379.65, flops:43.39, batch-reuse:1
@ 577 train 6.6985 , allloss: 7.9421, dt: 1173.78ms, fracRes: 0.0102, norm(attn): 0.1885, norm(output): 0.0371, norm(x): 0.0355, norm(y): 0.9861, norm:12.0442, tok/sec: 111666.34, flops:43.51, batch-reuse:1
@ 578 train 6.6288 , allloss: 7.8791, dt: 1175.67ms, fracRes: 0.0102, norm(attn): 0.1807, norm(output): 0.0376, norm(x): 0.0357, norm(y): 0.9863, norm:9.3097, tok/sec: 111487.01, flops:43.44, batch-reuse:1
@ 579 train 6.6321 , allloss: 7.8812, dt: 1175.49ms, fracRes: 0.0100, norm(attn): 0.1875, norm(output): 0.0376, norm(x): 0.0350, norm(y): 0.9861, norm:9.4125, tok/sec: 111504.13, flops:43.44, batch-reuse:1
@ 580 train 6.7096 , allloss: 7.9174, dt: 1176.64ms, fracRes: 0.0096, norm(attn): 0.1914, norm(output): 0.0356, norm(x): 0.0347, norm(y): 0.9860, norm:10.8162, tok/sec: 111395.61, flops:43.40, batch-reuse:1
@ 581 train 6.6092 , allloss: 7.8394, dt: 1166.34ms, fracRes: 0.0094, norm(attn): 0.1885, norm(output): 0.0366, norm(x): 0.0351, norm(y): 0.9860, norm:10.4460, tok/sec: 112379.37, flops:43.78, batch-reuse:1
@ 582 train 6.6531 , allloss: 7.9056, dt: 1184.70ms, fracRes: 0.0087, norm(attn): 0.1875, norm(output): 0.0364, norm(x): 0.0345, norm(y): 0.9859, norm:15.8885, tok/sec: 110637.20, flops:43.10, batch-reuse:1
@ 583 train 6.5970 , allloss: 7.8545, dt: 1163.37ms, fracRes: 0.0093, norm(attn): 0.2002, norm(output): 0.0354, norm(x): 0.0343, norm(y): 0.9857, norm:12.7104, tok/sec: 112665.38, flops:43.89, batch-reuse:1
@ 584 train 6.6874 , allloss: 7.9545, dt: 1182.46ms, fracRes: 0.0103, norm(attn): 0.1934, norm(output): 0.0366, norm(x): 0.0348, norm(y): 0.9857, norm:16.2919, tok/sec: 110846.51, flops:43.19, batch-reuse:1
@ 585 train 6.6096 , allloss: 7.8778, dt: 1156.06ms, fracRes: 0.0092, norm(attn): 0.1865, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9859, norm:10.7349, tok/sec: 113378.18, flops:44.17, batch-reuse:1
@ 586 train 6.6535 , allloss: 7.9259, dt: 1164.80ms, fracRes: 0.0090, norm(attn): 0.1768, norm(output): 0.0371, norm(x): 0.0355, norm(y): 0.9861, norm:11.6187, tok/sec: 112527.13, flops:43.84, batch-reuse:1
@ 587 train 6.6508 , allloss: 7.9317, dt: 1156.02ms, fracRes: 0.0084, norm(attn): 0.1680, norm(output): 0.0378, norm(x): 0.0359, norm(y): 0.9862, norm:9.1681, tok/sec: 113381.87, flops:44.17, batch-reuse:1
@ 588 train 6.6674 , allloss: 7.9026, dt: 1162.55ms, fracRes: 0.0094, norm(attn): 0.1885, norm(output): 0.0366, norm(x): 0.0345, norm(y): 0.9857, norm:14.7348, tok/sec: 112745.72, flops:43.93, batch-reuse:1
@ 589 train 6.6840 , allloss: 7.9379, dt: 1180.91ms, fracRes: 0.0109, norm(attn): 0.1904, norm(output): 0.0374, norm(x): 0.0349, norm(y): 0.9856, norm:19.5676, tok/sec: 110991.91, flops:43.24, batch-reuse:1
@ 590 train 6.6728 , allloss: 7.9581, dt: 1174.73ms, fracRes: 0.0093, norm(attn): 0.1768, norm(output): 0.0366, norm(x): 0.0356, norm(y): 0.9859, norm:13.6528, tok/sec: 111576.16, flops:43.47, batch-reuse:1
@ 591 train 6.6060 , allloss: 7.8941, dt: 1176.65ms, fracRes: 0.0086, norm(attn): 0.1768, norm(output): 0.0364, norm(x): 0.0354, norm(y): 0.9858, norm:11.8890, tok/sec: 111394.14, flops:43.40, batch-reuse:1
@ 592 train 6.6301 , allloss: 8.0810, dt: 1162.97ms, fracRes: 0.0087, norm(attn): 0.1865, norm(output): 0.0388, norm(x): 0.0353, norm(y): 0.9857, norm:16.2717, tok/sec: 112704.44, flops:43.91, batch-reuse:1
@ 593 train 6.6118 , allloss: 7.9496, dt: 1156.54ms, fracRes: 0.0087, norm(attn): 0.1885, norm(output): 0.0369, norm(x): 0.0343, norm(y): 0.9856, norm:11.0103, tok/sec: 113331.34, flops:44.15, batch-reuse:1
@ 594 train 6.8026 , allloss: 8.1104, dt: 1179.99ms, fracRes: 0.0081, norm(attn): 0.1689, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9860, norm:14.0084, tok/sec: 111079.24, flops:43.28, batch-reuse:1
@ 595 train 6.5770 , allloss: 7.8342, dt: 1170.15ms, fracRes: 0.0087, norm(attn): 0.1777, norm(output): 0.0366, norm(x): 0.0353, norm(y): 0.9859, norm:9.5608, tok/sec: 112013.35, flops:43.64, batch-reuse:1
@ 596 train 6.6000 , allloss: 7.9149, dt: 1177.50ms, fracRes: 0.0086, norm(attn): 0.1572, norm(output): 0.0391, norm(x): 0.0369, norm(y): 0.9862, norm:10.0786, tok/sec: 111313.71, flops:43.37, batch-reuse:1
@ 597 train 6.5731 , allloss: 7.8305, dt: 1174.05ms, fracRes: 0.0091, norm(attn): 0.1768, norm(output): 0.0369, norm(x): 0.0356, norm(y): 0.9857, norm:10.2268, tok/sec: 111641.30, flops:43.50, batch-reuse:1
@ 598 train 6.6815 , allloss: 7.8868, dt: 1180.48ms, fracRes: 0.0090, norm(attn): 0.2012, norm(output): 0.0356, norm(x): 0.0338, norm(y): 0.9852, norm:10.2644, tok/sec: 111033.00, flops:43.26, batch-reuse:1
@ 599 train 6.7163 , allloss: 7.9582, dt: 1172.05ms, fracRes: 0.0097, norm(attn): 0.1836, norm(output): 0.0369, norm(x): 0.0348, norm(y): 0.9855, norm:18.9756, tok/sec: 111831.75, flops:43.57, batch-reuse:1
@ 600 train 6.5987 , allloss: 7.8108, dt: 1177.45ms, fracRes: 0.0102, norm(attn): 0.1885, norm(output): 0.0366, norm(x): 0.0347, norm(y): 0.9855, norm:8.2743, tok/sec: 111318.35, flops:43.37, batch-reuse:1
@ 601 train 6.6805 , allloss: 7.9272, dt: 1192.74ms, fracRes: 0.0090, norm(attn): 0.1865, norm(output): 0.0376, norm(x): 0.0349, norm(y): 0.9854, norm:13.2710, tok/sec: 109891.93, flops:42.81, batch-reuse:1
@ 602 train 6.6525 , allloss: 7.8995, dt: 1177.77ms, fracRes: 0.0094, norm(attn): 0.1768, norm(output): 0.0371, norm(x): 0.0356, norm(y): 0.9857, norm:8.1716, tok/sec: 111288.43, flops:43.36, batch-reuse:1
@ 603 train 6.6222 , allloss: 7.8660, dt: 1182.02ms, fracRes: 0.0097, norm(attn): 0.1836, norm(output): 0.0366, norm(x): 0.0353, norm(y): 0.9856, norm:17.0498, tok/sec: 110888.41, flops:43.20, batch-reuse:1
@ 604 train 6.5140 , allloss: 7.8456, dt: 1160.08ms, fracRes: 0.0091, norm(attn): 0.1660, norm(output): 0.0386, norm(x): 0.0362, norm(y): 0.9858, norm:11.4222, tok/sec: 112985.57, flops:44.02, batch-reuse:1
@ 605 train 6.5615 , allloss: 7.8141, dt: 1171.84ms, fracRes: 0.0086, norm(attn): 0.1699, norm(output): 0.0378, norm(x): 0.0357, norm(y): 0.9858, norm:10.3731, tok/sec: 111851.91, flops:43.58, batch-reuse:1
@ 606 train 6.5978 , allloss: 7.8154, dt: 1178.63ms, fracRes: 0.0080, norm(attn): 0.1787, norm(output): 0.0361, norm(x): 0.0348, norm(y): 0.9855, norm:16.5294, tok/sec: 111207.50, flops:43.33, batch-reuse:1
@ 607 train 6.5610 , allloss: 7.7834, dt: 1196.45ms, fracRes: 0.0081, norm(attn): 0.1816, norm(output): 0.0359, norm(x): 0.0346, norm(y): 0.9854, norm:9.8648, tok/sec: 109550.45, flops:42.68, batch-reuse:1
@ 608 train 6.4868 , allloss: 7.7326, dt: 1195.46ms, fracRes: 0.0088, norm(attn): 0.1816, norm(output): 0.0366, norm(x): 0.0349, norm(y): 0.9854, norm:13.0628, tok/sec: 109641.80, flops:42.72, batch-reuse:1
@ 609 train 6.5566 , allloss: 7.8323, dt: 1198.96ms, fracRes: 0.0091, norm(attn): 0.1748, norm(output): 0.0371, norm(x): 0.0354, norm(y): 0.9855, norm:14.6391, tok/sec: 109321.54, flops:42.59, batch-reuse:1
@ 610 train 6.6896 , allloss: 7.9491, dt: 1151.33ms, fracRes: 0.0092, norm(attn): 0.1816, norm(output): 0.0371, norm(x): 0.0350, norm(y): 0.9854, norm:7.9695, tok/sec: 113843.61, flops:44.35, batch-reuse:1
@ 611 train 6.5894 , allloss: 7.8476, dt: 1171.40ms, fracRes: 0.0086, norm(attn): 0.1699, norm(output): 0.0371, norm(x): 0.0355, norm(y): 0.9855, norm:8.3546, tok/sec: 111893.73, flops:43.59, batch-reuse:1
@ 612 train 6.6463 , allloss: 7.8418, dt: 1166.23ms, fracRes: 0.0088, norm(attn): 0.1875, norm(output): 0.0354, norm(x): 0.0344, norm(y): 0.9852, norm:13.2799, tok/sec: 112389.43, flops:43.79, batch-reuse:1
@ 613 train 6.7094 , allloss: 7.9805, dt: 1175.43ms, fracRes: 0.0081, norm(attn): 0.1650, norm(output): 0.0383, norm(x): 0.0360, norm(y): 0.9856, norm:16.8129, tok/sec: 111509.53, flops:43.44, batch-reuse:1
@ 614 train 6.6227 , allloss: 7.8550, dt: 1185.15ms, fracRes: 0.0078, norm(attn): 0.1689, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9855, norm:6.5444, tok/sec: 110595.71, flops:43.09, batch-reuse:1
@ 615 train 6.6160 , allloss: 7.8177, dt: 1180.75ms, fracRes: 0.0084, norm(attn): 0.1865, norm(output): 0.0356, norm(x): 0.0342, norm(y): 0.9851, norm:12.6647, tok/sec: 111007.35, flops:43.25, batch-reuse:1
@ 616 train 6.6458 , allloss: 7.8734, dt: 1169.26ms, fracRes: 0.0084, norm(attn): 0.1738, norm(output): 0.0376, norm(x): 0.0355, norm(y): 0.9854, norm:9.4866, tok/sec: 112097.97, flops:43.67, batch-reuse:1
@ 617 train 6.4323 , allloss: 7.6622, dt: 1192.68ms, fracRes: 0.0083, norm(attn): 0.1719, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9853, norm:10.4980, tok/sec: 109896.68, flops:42.82, batch-reuse:1
@ 618 train 6.6137 , allloss: 7.8738, dt: 1182.82ms, fracRes: 0.0085, norm(attn): 0.1797, norm(output): 0.0366, norm(x): 0.0351, norm(y): 0.9851, norm:17.9647, tok/sec: 110812.84, flops:43.17, batch-reuse:1
@ 619 train 6.5337 , allloss: 7.7275, dt: 1173.83ms, fracRes: 0.0088, norm(attn): 0.1875, norm(output): 0.0354, norm(x): 0.0345, norm(y): 0.9850, norm:8.0347, tok/sec: 111661.60, flops:43.50, batch-reuse:1
@ 620 train 6.5906 , allloss: 7.8029, dt: 1154.96ms, fracRes: 0.0080, norm(attn): 0.1816, norm(output): 0.0364, norm(x): 0.0342, norm(y): 0.9850, norm:21.8739, tok/sec: 113486.31, flops:44.21, batch-reuse:1
@ 621 train 6.5686 , allloss: 7.7768, dt: 1166.51ms, fracRes: 0.0080, norm(attn): 0.1729, norm(output): 0.0366, norm(x): 0.0347, norm(y): 0.9851, norm:11.2766, tok/sec: 112362.81, flops:43.78, batch-reuse:1
@ 622 train 6.5064 , allloss: 7.6845, dt: 1181.19ms, fracRes: 0.0089, norm(attn): 0.1865, norm(output): 0.0354, norm(x): 0.0341, norm(y): 0.9849, norm:13.1323, tok/sec: 110966.53, flops:43.23, batch-reuse:1
@ 623 train 6.5308 , allloss: 7.7060, dt: 1192.24ms, fracRes: 0.0084, norm(attn): 0.1992, norm(output): 0.0339, norm(x): 0.0330, norm(y): 0.9845, norm:13.1733, tok/sec: 109937.71, flops:42.83, batch-reuse:1
@ 624 train 6.6476 , allloss: 7.9371, dt: 1187.06ms, fracRes: 0.0081, norm(attn): 0.1787, norm(output): 0.0374, norm(x): 0.0348, norm(y): 0.9849, norm:22.8659, tok/sec: 110417.28, flops:43.02, batch-reuse:1
@ 625 train 6.6788 , allloss: 7.9750, dt: 1194.23ms, fracRes: 0.0079, norm(attn): 0.1543, norm(output): 0.0376, norm(x): 0.0359, norm(y): 0.9853, norm:11.6589, tok/sec: 109754.44, flops:42.76, batch-reuse:1
@ 626 train 6.5532 , allloss: 7.8132, dt: 1176.25ms, fracRes: 0.0084, norm(attn): 0.1699, norm(output): 0.0361, norm(x): 0.0351, norm(y): 0.9850, norm:8.7577, tok/sec: 111432.55, flops:43.41, batch-reuse:1
@ 627 train 6.5616 , allloss: 7.7719, dt: 1186.94ms, fracRes: 0.0085, norm(attn): 0.1826, norm(output): 0.0359, norm(x): 0.0340, norm(y): 0.9847, norm:9.6557, tok/sec: 110428.32, flops:43.02, batch-reuse:1
@ 628 train 6.6026 , allloss: 7.7724, dt: 1189.29ms, fracRes: 0.0082, norm(attn): 0.1934, norm(output): 0.0349, norm(x): 0.0330, norm(y): 0.9844, norm:12.2423, tok/sec: 110210.13, flops:42.94, batch-reuse:1
@ 629 train 6.6431 , allloss: 7.8475, dt: 1156.30ms, fracRes: 0.0084, norm(attn): 0.1777, norm(output): 0.0359, norm(x): 0.0344, norm(y): 0.9847, norm:11.1518, tok/sec: 113355.01, flops:44.16, batch-reuse:1
@ 630 train 6.7277 , allloss: 7.9267, dt: 1171.69ms, fracRes: 0.0082, norm(attn): 0.1875, norm(output): 0.0356, norm(x): 0.0335, norm(y): 0.9845, norm:9.8130, tok/sec: 111865.68, flops:43.58, batch-reuse:1
@ 631 train 6.6172 , allloss: 7.8255, dt: 1170.28ms, fracRes: 0.0079, norm(attn): 0.1709, norm(output): 0.0356, norm(x): 0.0348, norm(y): 0.9849, norm:9.3290, tok/sec: 112000.25, flops:43.64, batch-reuse:1
@ 632 train 6.7563 , allloss: 8.0072, dt: 1171.49ms, fracRes: 0.0083, norm(attn): 0.1709, norm(output): 0.0376, norm(x): 0.0349, norm(y): 0.9849, norm:13.3896, tok/sec: 111885.28, flops:43.59, batch-reuse:1
@ 633 train 6.6954 , allloss: 7.9436, dt: 1176.71ms, fracRes: 0.0084, norm(attn): 0.1709, norm(output): 0.0378, norm(x): 0.0356, norm(y): 0.9849, norm:11.3312, tok/sec: 111388.90, flops:43.40, batch-reuse:1
@ 634 train 6.4754 , allloss: 7.7358, dt: 1196.86ms, fracRes: 0.0083, norm(attn): 0.1699, norm(output): 0.0376, norm(x): 0.0356, norm(y): 0.9849, norm:7.2773, tok/sec: 109513.15, flops:42.67, batch-reuse:1
@ 635 train 6.6423 , allloss: 7.8452, dt: 1202.95ms, fracRes: 0.0082, norm(attn): 0.1875, norm(output): 0.0352, norm(x): 0.0335, norm(y): 0.9843, norm:13.6733, tok/sec: 108958.42, flops:42.45, batch-reuse:1
@ 636 train 6.6653 , allloss: 7.8721, dt: 1211.90ms, fracRes: 0.0079, norm(attn): 0.1836, norm(output): 0.0352, norm(x): 0.0337, norm(y): 0.9844, norm:8.2283, tok/sec: 108153.99, flops:42.14, batch-reuse:1
@ 637 train 6.4867 , allloss: 7.6760, dt: 1202.62ms, fracRes: 0.0081, norm(attn): 0.1719, norm(output): 0.0359, norm(x): 0.0347, norm(y): 0.9847, norm:8.1347, tok/sec: 108989.05, flops:42.46, batch-reuse:1
@ 638 train 6.4860 , allloss: 7.6970, dt: 1205.27ms, fracRes: 0.0081, norm(attn): 0.1689, norm(output): 0.0361, norm(x): 0.0346, norm(y): 0.9847, norm:10.9845, tok/sec: 108748.86, flops:42.37, batch-reuse:1
@ 639 train 6.5864 , allloss: 7.7946, dt: 1195.74ms, fracRes: 0.0086, norm(attn): 0.1777, norm(output): 0.0361, norm(x): 0.0341, norm(y): 0.9845, norm:9.5696, tok/sec: 109615.65, flops:42.71, batch-reuse:1
@ 640 train 6.5035 , allloss: 7.7161, dt: 1190.65ms, fracRes: 0.0086, norm(attn): 0.1729, norm(output): 0.0359, norm(x): 0.0344, norm(y): 0.9845, norm:9.0605, tok/sec: 110084.85, flops:42.89, batch-reuse:1
@ 641 train 6.5901 , allloss: 7.8250, dt: 1195.99ms, fracRes: 0.0084, norm(attn): 0.1680, norm(output): 0.0361, norm(x): 0.0352, norm(y): 0.9846, norm:15.1401, tok/sec: 109593.19, flops:42.70, batch-reuse:1
@ 642 train 6.4443 , allloss: 7.6714, dt: 1221.71ms, fracRes: 0.0088, norm(attn): 0.1748, norm(output): 0.0364, norm(x): 0.0342, norm(y): 0.9843, norm:9.1485, tok/sec: 107285.73, flops:41.80, batch-reuse:1
@ 643 train 6.4959 , allloss: 7.7125, dt: 1205.78ms, fracRes: 0.0093, norm(attn): 0.1729, norm(output): 0.0361, norm(x): 0.0348, norm(y): 0.9845, norm:11.9466, tok/sec: 108702.99, flops:42.35, batch-reuse:1
@ 644 train 6.6912 , allloss: 7.8918, dt: 1224.05ms, fracRes: 0.0087, norm(attn): 0.1797, norm(output): 0.0354, norm(x): 0.0344, norm(y): 0.9843, norm:10.8317, tok/sec: 107080.84, flops:41.72, batch-reuse:1
@ 645 train 6.6143 , allloss: 7.8306, dt: 1174.92ms, fracRes: 0.0089, norm(attn): 0.1758, norm(output): 0.0366, norm(x): 0.0343, norm(y): 0.9841, norm:11.4228, tok/sec: 111558.20, flops:43.46, batch-reuse:1
@ 646 train 6.4918 , allloss: 7.6981, dt: 1179.88ms, fracRes: 0.0083, norm(attn): 0.1689, norm(output): 0.0364, norm(x): 0.0343, norm(y): 0.9844, norm:7.6636, tok/sec: 111089.47, flops:43.28, batch-reuse:1
@ 647 train 6.5306 , allloss: 7.7240, dt: 1188.36ms, fracRes: 0.0089, norm(attn): 0.1719, norm(output): 0.0354, norm(x): 0.0342, norm(y): 0.9843, norm:6.6926, tok/sec: 110296.83, flops:42.97, batch-reuse:1
@ 648 train 6.4345 , allloss: 7.6548, dt: 1186.33ms, fracRes: 0.0088, norm(attn): 0.1738, norm(output): 0.0354, norm(x): 0.0341, norm(y): 0.9841, norm:9.1409, tok/sec: 110485.14, flops:43.05, batch-reuse:1
@ 649 train 6.5793 , allloss: 7.7559, dt: 1168.74ms, fracRes: 0.0095, norm(attn): 0.1875, norm(output): 0.0352, norm(x): 0.0334, norm(y): 0.9837, norm:13.0989, tok/sec: 112148.58, flops:43.69, batch-reuse:1
@ 650 train 6.4541 , allloss: 7.6419, dt: 1177.37ms, fracRes: 0.0097, norm(attn): 0.1807, norm(output): 0.0352, norm(x): 0.0339, norm(y): 0.9838, norm:18.0368, tok/sec: 111326.40, flops:43.37, batch-reuse:1
@ 651 train 6.5402 , allloss: 7.7685, dt: 1191.44ms, fracRes: 0.0093, norm(attn): 0.1719, norm(output): 0.0359, norm(x): 0.0346, norm(y): 0.9841, norm:10.7446, tok/sec: 110011.03, flops:42.86, batch-reuse:1
@ 652 train 6.4187 , allloss: 7.6261, dt: 1180.25ms, fracRes: 0.0097, norm(attn): 0.1748, norm(output): 0.0366, norm(x): 0.0343, norm(y): 0.9841, norm:11.4017, tok/sec: 111054.47, flops:43.27, batch-reuse:1
@ 653 train 6.4373 , allloss: 7.6395, dt: 1183.05ms, fracRes: 0.0093, norm(attn): 0.1719, norm(output): 0.0359, norm(x): 0.0343, norm(y): 0.9841, norm:9.9996, tok/sec: 110791.61, flops:43.16, batch-reuse:1
@ 654 train 6.4695 , allloss: 7.6540, dt: 1207.25ms, fracRes: 0.0088, norm(attn): 0.1787, norm(output): 0.0352, norm(x): 0.0338, norm(y): 0.9839, norm:7.2378, tok/sec: 108570.82, flops:42.30, batch-reuse:1
@ 655 train 6.5020 , allloss: 7.6968, dt: 1203.89ms, fracRes: 0.0088, norm(attn): 0.1826, norm(output): 0.0354, norm(x): 0.0336, norm(y): 0.9838, norm:12.6154, tok/sec: 108873.64, flops:42.42, batch-reuse:1
@ 656 train 6.4469 , allloss: 7.6813, dt: 1190.94ms, fracRes: 0.0086, norm(attn): 0.1621, norm(output): 0.0356, norm(x): 0.0348, norm(y): 0.9841, norm:17.2629, tok/sec: 110057.57, flops:42.88, batch-reuse:1
@ 657 train 6.4786 , allloss: 7.6977, dt: 1185.73ms, fracRes: 0.0087, norm(attn): 0.1602, norm(output): 0.0361, norm(x): 0.0349, norm(y): 0.9841, norm:12.3872, tok/sec: 110541.28, flops:43.07, batch-reuse:1
@ 658 train 6.5746 , allloss: 7.7313, dt: 1158.22ms, fracRes: 0.0080, norm(attn): 0.1846, norm(output): 0.0339, norm(x): 0.0331, norm(y): 0.9835, norm:16.3743, tok/sec: 113166.68, flops:44.09, batch-reuse:1
@ 659 train 6.5212 , allloss: 7.7198, dt: 1162.87ms, fracRes: 0.0087, norm(attn): 0.1797, norm(output): 0.0354, norm(x): 0.0334, norm(y): 0.9835, norm:12.8873, tok/sec: 112713.99, flops:43.91, batch-reuse:1
@ 660 train 6.5382 , allloss: 7.7262, dt: 1172.47ms, fracRes: 0.0090, norm(attn): 0.1865, norm(output): 0.0352, norm(x): 0.0332, norm(y): 0.9833, norm:8.0826, tok/sec: 111791.22, flops:43.55, batch-reuse:1
@ 661 train 6.5179 , allloss: 7.6873, dt: 1162.03ms, fracRes: 0.0081, norm(attn): 0.1953, norm(output): 0.0334, norm(x): 0.0325, norm(y): 0.9830, norm:22.1271, tok/sec: 112795.41, flops:43.95, batch-reuse:1
@ 662 train 6.5972 , allloss: 7.9816, dt: 1179.41ms, fracRes: 0.0075, norm(attn): 0.1572, norm(output): 0.0369, norm(x): 0.0360, norm(y): 0.9837, norm:52.8733, tok/sec: 111133.92, flops:43.30, batch-reuse:1
@ 663 train 6.5655 , allloss: 7.9004, dt: 1166.97ms, fracRes: 0.0078, norm(attn): 0.1494, norm(output): 0.0383, norm(x): 0.0369, norm(y): 0.9841, norm:21.7163, tok/sec: 112318.41, flops:43.76, batch-reuse:1
@ 664 train 6.4927 , allloss: 7.7516, dt: 1186.68ms, fracRes: 0.0090, norm(attn): 0.1621, norm(output): 0.0356, norm(x): 0.0347, norm(y): 0.9838, norm:18.6254, tok/sec: 110452.42, flops:43.03, batch-reuse:1
@ 665 train 6.5021 , allloss: 7.7519, dt: 1170.56ms, fracRes: 0.0083, norm(attn): 0.1572, norm(output): 0.0364, norm(x): 0.0350, norm(y): 0.9839, norm:9.7427, tok/sec: 111974.11, flops:43.63, batch-reuse:1
@ 666 train 6.3415 , allloss: 7.5424, dt: 1169.40ms, fracRes: 0.0079, norm(attn): 0.1680, norm(output): 0.0352, norm(x): 0.0345, norm(y): 0.9837, norm:12.2402, tok/sec: 112084.35, flops:43.67, batch-reuse:1
@ 667 train 6.2915 , allloss: 7.5125, dt: 1178.90ms, fracRes: 0.0076, norm(attn): 0.1641, norm(output): 0.0359, norm(x): 0.0347, norm(y): 0.9837, norm:7.6739, tok/sec: 111181.36, flops:43.32, batch-reuse:1
@ 668 train 6.5171 , allloss: 7.7125, dt: 1215.39ms, fracRes: 0.0078, norm(attn): 0.1709, norm(output): 0.0354, norm(x): 0.0340, norm(y): 0.9836, norm:10.8122, tok/sec: 107843.62, flops:42.02, batch-reuse:1
@ 669 train 6.4718 , allloss: 7.6574, dt: 1203.63ms, fracRes: 0.0076, norm(attn): 0.1748, norm(output): 0.0352, norm(x): 0.0334, norm(y): 0.9833, norm:16.0497, tok/sec: 108897.13, flops:42.43, batch-reuse:1
@ 670 train 6.5936 , allloss: 7.8206, dt: 1198.63ms, fracRes: 0.0078, norm(attn): 0.1846, norm(output): 0.0347, norm(x): 0.0340, norm(y): 0.9832, norm:17.6047, tok/sec: 109351.91, flops:42.60, batch-reuse:1
@ 671 train 6.4549 , allloss: 7.7222, dt: 1176.87ms, fracRes: 0.0080, norm(attn): 0.1719, norm(output): 0.0364, norm(x): 0.0344, norm(y): 0.9832, norm:14.5700, tok/sec: 111373.56, flops:43.39, batch-reuse:1
@ 672 train 6.4793 , allloss: 7.7059, dt: 1177.57ms, fracRes: 0.0081, norm(attn): 0.1709, norm(output): 0.0354, norm(x): 0.0343, norm(y): 0.9832, norm:10.2432, tok/sec: 111307.51, flops:43.37, batch-reuse:1
@ 673 train 6.4904 , allloss: 7.7400, dt: 1173.87ms, fracRes: 0.0081, norm(attn): 0.1582, norm(output): 0.0364, norm(x): 0.0351, norm(y): 0.9836, norm:8.0912, tok/sec: 111657.94, flops:43.50, batch-reuse:1
@ 674 train 6.4823 , allloss: 7.7004, dt: 1179.05ms, fracRes: 0.0083, norm(attn): 0.1699, norm(output): 0.0354, norm(x): 0.0341, norm(y): 0.9833, norm:7.2635, tok/sec: 111167.09, flops:43.31, batch-reuse:1
@ 675 train 6.4113 , allloss: 7.6685, dt: 1162.77ms, fracRes: 0.0082, norm(attn): 0.1631, norm(output): 0.0366, norm(x): 0.0345, norm(y): 0.9834, norm:19.7847, tok/sec: 112723.74, flops:43.92, batch-reuse:1
@ 676 train 6.4615 , allloss: 7.6860, dt: 1161.44ms, fracRes: 0.0083, norm(attn): 0.1670, norm(output): 0.0356, norm(x): 0.0342, norm(y): 0.9833, norm:8.1304, tok/sec: 112852.56, flops:43.97, batch-reuse:1
@ 677 train 6.6150 , allloss: 7.8220, dt: 1159.75ms, fracRes: 0.0083, norm(attn): 0.1709, norm(output): 0.0354, norm(x): 0.0336, norm(y): 0.9831, norm:15.1028, tok/sec: 113017.18, flops:44.03, batch-reuse:1
@ 678 train 6.4524 , allloss: 7.6732, dt: 1147.94ms, fracRes: 0.0081, norm(attn): 0.1699, norm(output): 0.0352, norm(x): 0.0332, norm(y): 0.9829, norm:30.3552, tok/sec: 114180.26, flops:44.48, batch-reuse:1
@ 679 train 6.5043 , allloss: 7.7229, dt: 1168.32ms, fracRes: 0.0085, norm(attn): 0.1816, norm(output): 0.0347, norm(x): 0.0330, norm(y): 0.9827, norm:13.2775, tok/sec: 112188.88, flops:43.71, batch-reuse:1
@ 680 train 6.4701 , allloss: 7.7093, dt: 1182.79ms, fracRes: 0.0088, norm(attn): 0.1719, norm(output): 0.0354, norm(x): 0.0342, norm(y): 0.9831, norm:12.8444, tok/sec: 110816.37, flops:43.17, batch-reuse:1
@ 681 train 6.4690 , allloss: 7.7142, dt: 1168.28ms, fracRes: 0.0093, norm(attn): 0.1572, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9834, norm:9.4833, tok/sec: 112192.13, flops:43.71, batch-reuse:1
@ 682 train 6.5083 , allloss: 7.7498, dt: 1158.12ms, fracRes: 0.0093, norm(attn): 0.1592, norm(output): 0.0359, norm(x): 0.0353, norm(y): 0.9834, norm:16.6721, tok/sec: 113176.82, flops:44.09, batch-reuse:1
@ 683 train 6.4523 , allloss: 7.7264, dt: 1176.80ms, fracRes: 0.0091, norm(attn): 0.1641, norm(output): 0.0381, norm(x): 0.0351, norm(y): 0.9833, norm:10.8864, tok/sec: 111379.81, flops:43.39, batch-reuse:1
@ 684 train 6.4088 , allloss: 7.6642, dt: 1177.42ms, fracRes: 0.0090, norm(attn): 0.1631, norm(output): 0.0356, norm(x): 0.0343, norm(y): 0.9830, norm:10.3186, tok/sec: 111321.08, flops:43.37, batch-reuse:1
@ 685 train 6.4998 , allloss: 7.6824, dt: 1195.53ms, fracRes: 0.0093, norm(attn): 0.1709, norm(output): 0.0352, norm(x): 0.0339, norm(y): 0.9830, norm:8.7592, tok/sec: 109634.63, flops:42.71, batch-reuse:1
@ 686 train 6.5705 , allloss: 7.7298, dt: 1190.19ms, fracRes: 0.0094, norm(attn): 0.1777, norm(output): 0.0349, norm(x): 0.0333, norm(y): 0.9827, norm:8.8335, tok/sec: 110126.90, flops:42.91, batch-reuse:1
@ 687 train 6.5150 , allloss: 7.7629, dt: 1185.68ms, fracRes: 0.0089, norm(attn): 0.1592, norm(output): 0.0354, norm(x): 0.0346, norm(y): 0.9829, norm:21.8862, tok/sec: 110546.23, flops:43.07, batch-reuse:1
@ 688 train 6.5200 , allloss: 7.7464, dt: 1201.53ms, fracRes: 0.0087, norm(attn): 0.1582, norm(output): 0.0366, norm(x): 0.0348, norm(y): 0.9830, norm:9.6956, tok/sec: 109087.34, flops:42.50, batch-reuse:1
@ 689 train 6.4815 , allloss: 7.6881, dt: 1206.18ms, fracRes: 0.0091, norm(attn): 0.1758, norm(output): 0.0352, norm(x): 0.0331, norm(y): 0.9825, norm:11.4346, tok/sec: 108667.37, flops:42.34, batch-reuse:1
@ 690 train 6.4540 , allloss: 7.6321, dt: 1197.77ms, fracRes: 0.0091, norm(attn): 0.1787, norm(output): 0.0339, norm(x): 0.0328, norm(y): 0.9824, norm:9.8382, tok/sec: 109430.23, flops:42.63, batch-reuse:1
@ 691 train 6.4787 , allloss: 7.7468, dt: 1195.36ms, fracRes: 0.0086, norm(attn): 0.1426, norm(output): 0.0378, norm(x): 0.0357, norm(y): 0.9833, norm:12.7370, tok/sec: 109651.03, flops:42.72, batch-reuse:1
@ 692 train 6.4178 , allloss: 7.6749, dt: 1208.56ms, fracRes: 0.0084, norm(attn): 0.1484, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9831, norm:10.5854, tok/sec: 108453.19, flops:42.25, batch-reuse:1
@ 693 train 6.4471 , allloss: 7.6971, dt: 1184.31ms, fracRes: 0.0086, norm(attn): 0.1553, norm(output): 0.0366, norm(x): 0.0349, norm(y): 0.9830, norm:5.5981, tok/sec: 110673.35, flops:43.12, batch-reuse:1
@ 694 train 6.3738 , allloss: 7.6112, dt: 1213.70ms, fracRes: 0.0088, norm(attn): 0.1572, norm(output): 0.0359, norm(x): 0.0347, norm(y): 0.9828, norm:9.1486, tok/sec: 107993.65, flops:42.07, batch-reuse:1
@ 695 train 6.4613 , allloss: 7.6592, dt: 1183.71ms, fracRes: 0.0088, norm(attn): 0.1689, norm(output): 0.0352, norm(x): 0.0337, norm(y): 0.9826, norm:9.1917, tok/sec: 110729.61, flops:43.14, batch-reuse:1
@ 696 train 6.3197 , allloss: 7.5591, dt: 1193.98ms, fracRes: 0.0091, norm(attn): 0.1533, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9829, norm:7.8391, tok/sec: 109777.08, flops:42.77, batch-reuse:1
@ 697 train 6.3552 , allloss: 7.5553, dt: 1163.03ms, fracRes: 0.0084, norm(attn): 0.1641, norm(output): 0.0356, norm(x): 0.0340, norm(y): 0.9826, norm:10.7522, tok/sec: 112698.25, flops:43.91, batch-reuse:1
@ 698 train 6.4569 , allloss: 7.6679, dt: 1169.46ms, fracRes: 0.0085, norm(attn): 0.1631, norm(output): 0.0352, norm(x): 0.0342, norm(y): 0.9826, norm:8.4098, tok/sec: 112079.37, flops:43.67, batch-reuse:1
@ 699 train 6.4580 , allloss: 7.7033, dt: 1181.39ms, fracRes: 0.0080, norm(attn): 0.1602, norm(output): 0.0354, norm(x): 0.0343, norm(y): 0.9825, norm:17.2366, tok/sec: 110947.49, flops:43.23, batch-reuse:1
@ 700 train 6.4374 , allloss: 7.6675, dt: 1162.84ms, fracRes: 0.0087, norm(attn): 0.1719, norm(output): 0.0354, norm(x): 0.0331, norm(y): 0.9821, norm:12.6456, tok/sec: 112716.92, flops:43.91, batch-reuse:1
@ 701 train 6.5442 , allloss: 7.8326, dt: 1188.14ms, fracRes: 0.0090, norm(attn): 0.1611, norm(output): 0.0356, norm(x): 0.0343, norm(y): 0.9820, norm:18.3493, tok/sec: 110317.33, flops:42.98, batch-reuse:1
@ 702 train 6.5385 , allloss: 7.8583, dt: 1184.67ms, fracRes: 0.0085, norm(attn): 0.1465, norm(output): 0.0366, norm(x): 0.0353, norm(y): 0.9825, norm:15.0093, tok/sec: 110640.14, flops:43.11, batch-reuse:1
@ 703 train 6.4565 , allloss: 7.6930, dt: 1184.47ms, fracRes: 0.0083, norm(attn): 0.1553, norm(output): 0.0354, norm(x): 0.0343, norm(y): 0.9824, norm:12.4249, tok/sec: 110658.78, flops:43.11, batch-reuse:1
@ 704 train 6.3810 , allloss: 7.6031, dt: 1169.95ms, fracRes: 0.0084, norm(attn): 0.1553, norm(output): 0.0356, norm(x): 0.0340, norm(y): 0.9825, norm:15.8423, tok/sec: 112032.30, flops:43.65, batch-reuse:1
@ 705 train 6.4362 , allloss: 7.6805, dt: 1176.26ms, fracRes: 0.0096, norm(attn): 0.1562, norm(output): 0.0356, norm(x): 0.0346, norm(y): 0.9823, norm:12.1579, tok/sec: 111431.53, flops:43.41, batch-reuse:1
@ 706 train 6.4709 , allloss: 7.7536, dt: 1199.24ms, fracRes: 0.0081, norm(attn): 0.1328, norm(output): 0.0369, norm(x): 0.0362, norm(y): 0.9828, norm:21.8951, tok/sec: 109295.93, flops:42.58, batch-reuse:1
@ 707 train 6.4444 , allloss: 7.6841, dt: 1186.01ms, fracRes: 0.0079, norm(attn): 0.1504, norm(output): 0.0356, norm(x): 0.0344, norm(y): 0.9824, norm:8.1365, tok/sec: 110515.21, flops:43.06, batch-reuse:1
@ 708 train 6.4518 , allloss: 7.7161, dt: 1188.55ms, fracRes: 0.0077, norm(attn): 0.1689, norm(output): 0.0347, norm(x): 0.0329, norm(y): 0.9819, norm:12.9842, tok/sec: 110278.69, flops:42.96, batch-reuse:1
@ 709 train 6.4411 , allloss: 7.7053, dt: 1164.09ms, fracRes: 0.0078, norm(attn): 0.1787, norm(output): 0.0334, norm(x): 0.0325, norm(y): 0.9815, norm:11.9372, tok/sec: 112596.21, flops:43.87, batch-reuse:1
@ 710 train 6.5028 , allloss: 7.7204, dt: 1151.39ms, fracRes: 0.0070, norm(attn): 0.1699, norm(output): 0.0344, norm(x): 0.0329, norm(y): 0.9817, norm:7.3664, tok/sec: 113838.05, flops:44.35, batch-reuse:1
@ 711 train 6.4949 , allloss: 7.7284, dt: 1184.72ms, fracRes: 0.0071, norm(attn): 0.1543, norm(output): 0.0356, norm(x): 0.0342, norm(y): 0.9821, norm:9.5890, tok/sec: 110635.15, flops:43.10, batch-reuse:1
@ 712 train 6.3893 , allloss: 7.5979, dt: 1208.51ms, fracRes: 0.0076, norm(attn): 0.1650, norm(output): 0.0349, norm(x): 0.0331, norm(y): 0.9818, norm:10.7434, tok/sec: 108457.21, flops:42.25, batch-reuse:1
@ 713 train 6.4612 , allloss: 7.6701, dt: 1216.98ms, fracRes: 0.0075, norm(attn): 0.1533, norm(output): 0.0354, norm(x): 0.0341, norm(y): 0.9821, norm:7.3614, tok/sec: 107703.01, flops:41.96, batch-reuse:1
@ 714 train 6.3326 , allloss: 7.5458, dt: 1163.49ms, fracRes: 0.0083, norm(attn): 0.1455, norm(output): 0.0361, norm(x): 0.0349, norm(y): 0.9823, norm:8.0959, tok/sec: 112653.91, flops:43.89, batch-reuse:1
@ 715 train 6.3703 , allloss: 7.5521, dt: 1168.33ms, fracRes: 0.0081, norm(attn): 0.1641, norm(output): 0.0349, norm(x): 0.0335, norm(y): 0.9818, norm:7.6000, tok/sec: 112187.51, flops:43.71, batch-reuse:1
@ 716 train 6.4218 , allloss: 7.6306, dt: 1176.43ms, fracRes: 0.0081, norm(attn): 0.1582, norm(output): 0.0354, norm(x): 0.0337, norm(y): 0.9819, norm:9.6312, tok/sec: 111415.20, flops:43.41, batch-reuse:1
@ 717 train 6.2535 , allloss: 7.4754, dt: 1149.73ms, fracRes: 0.0086, norm(attn): 0.1553, norm(output): 0.0356, norm(x): 0.0344, norm(y): 0.9820, norm:8.4188, tok/sec: 114002.37, flops:44.42, batch-reuse:1
@ 718 train 6.4312 , allloss: 7.6242, dt: 1150.08ms, fracRes: 0.0088, norm(attn): 0.1582, norm(output): 0.0352, norm(x): 0.0339, norm(y): 0.9819, norm:7.6978, tok/sec: 113967.25, flops:44.40, batch-reuse:1
@ 719 train 6.3713 , allloss: 7.5690, dt: 1193.35ms, fracRes: 0.0088, norm(attn): 0.1543, norm(output): 0.0356, norm(x): 0.0339, norm(y): 0.9819, norm:8.4100, tok/sec: 109835.68, flops:42.79, batch-reuse:1
@ 720 train 6.3567 , allloss: 7.5438, dt: 1198.55ms, fracRes: 0.0105, norm(attn): 0.1689, norm(output): 0.0349, norm(x): 0.0333, norm(y): 0.9815, norm:9.3262, tok/sec: 109358.51, flops:42.61, batch-reuse:1
@ 721 train 6.2963 , allloss: 7.4508, dt: 1158.00ms, fracRes: 0.0097, norm(attn): 0.1768, norm(output): 0.0330, norm(x): 0.0321, norm(y): 0.9811, norm:8.5430, tok/sec: 113188.09, flops:44.10, batch-reuse:1
@ 722 train 6.3978 , allloss: 7.6256, dt: 1157.24ms, fracRes: 0.0091, norm(attn): 0.1592, norm(output): 0.0356, norm(x): 0.0335, norm(y): 0.9813, norm:14.3893, tok/sec: 113262.18, flops:44.13, batch-reuse:1
@ 723 train 6.4168 , allloss: 7.6387, dt: 1181.87ms, fracRes: 0.0085, norm(attn): 0.1562, norm(output): 0.0349, norm(x): 0.0331, norm(y): 0.9813, norm:6.0881, tok/sec: 110902.01, flops:43.21, batch-reuse:1
@ 724 train 6.4022 , allloss: 7.6400, dt: 1173.66ms, fracRes: 0.0083, norm(attn): 0.1602, norm(output): 0.0339, norm(x): 0.0332, norm(y): 0.9813, norm:13.2812, tok/sec: 111677.72, flops:43.51, batch-reuse:1
@ 725 train 6.4126 , allloss: 7.6282, dt: 1180.42ms, fracRes: 0.0086, norm(attn): 0.1670, norm(output): 0.0347, norm(x): 0.0322, norm(y): 0.9809, norm:13.2831, tok/sec: 111038.83, flops:43.26, batch-reuse:1
@ 726 train 6.4297 , allloss: 7.6269, dt: 1201.54ms, fracRes: 0.0084, norm(attn): 0.1670, norm(output): 0.0339, norm(x): 0.0321, norm(y): 0.9808, norm:12.3864, tok/sec: 109087.04, flops:42.50, batch-reuse:1
@ 727 train 6.4236 , allloss: 7.6013, dt: 1182.69ms, fracRes: 0.0079, norm(attn): 0.1562, norm(output): 0.0344, norm(x): 0.0330, norm(y): 0.9812, norm:11.1267, tok/sec: 110825.24, flops:43.18, batch-reuse:1
@ 728 train 6.4210 , allloss: 7.6476, dt: 1184.10ms, fracRes: 0.0084, norm(attn): 0.1445, norm(output): 0.0361, norm(x): 0.0343, norm(y): 0.9814, norm:11.5659, tok/sec: 110693.63, flops:43.13, batch-reuse:1
@ 729 train 6.3675 , allloss: 7.5605, dt: 1171.16ms, fracRes: 0.0081, norm(attn): 0.1533, norm(output): 0.0347, norm(x): 0.0331, norm(y): 0.9811, norm:9.0708, tok/sec: 111916.76, flops:43.60, batch-reuse:1
@ 730 train 6.3614 , allloss: 7.5721, dt: 1174.45ms, fracRes: 0.0081, norm(attn): 0.1504, norm(output): 0.0349, norm(x): 0.0335, norm(y): 0.9812, norm:7.1981, tok/sec: 111602.55, flops:43.48, batch-reuse:1
@ 731 train 6.4496 , allloss: 7.6605, dt: 1157.84ms, fracRes: 0.0083, norm(attn): 0.1572, norm(output): 0.0342, norm(x): 0.0330, norm(y): 0.9810, norm:13.8095, tok/sec: 113203.90, flops:44.10, batch-reuse:1
@ 732 train 6.3520 , allloss: 7.5310, dt: 1177.38ms, fracRes: 0.0084, norm(attn): 0.1602, norm(output): 0.0337, norm(x): 0.0326, norm(y): 0.9808, norm:10.9760, tok/sec: 111324.82, flops:43.37, batch-reuse:1
@ 733 train 6.4184 , allloss: 7.6553, dt: 1191.76ms, fracRes: 0.0078, norm(attn): 0.1484, norm(output): 0.0354, norm(x): 0.0337, norm(y): 0.9811, norm:18.3091, tok/sec: 109981.43, flops:42.85, batch-reuse:1
@ 734 train 6.4724 , allloss: 7.7805, dt: 1194.69ms, fracRes: 0.0077, norm(attn): 0.1553, norm(output): 0.0344, norm(x): 0.0338, norm(y): 0.9809, norm:71.9029, tok/sec: 109712.43, flops:42.74, batch-reuse:1
@ 735 train 6.4430 , allloss: 7.7486, dt: 1159.04ms, fracRes: 0.0084, norm(attn): 0.1543, norm(output): 0.0342, norm(x): 0.0329, norm(y): 0.9805, norm:35.2839, tok/sec: 113086.21, flops:44.06, batch-reuse:1
@ 736 train 6.5412 , allloss: 7.7782, dt: 1188.09ms, fracRes: 0.0083, norm(attn): 0.1689, norm(output): 0.0332, norm(x): 0.0326, norm(y): 0.9804, norm:33.2271, tok/sec: 110321.91, flops:42.98, batch-reuse:1
@ 737 train 6.9197 , allloss: 8.3633, dt: 1191.76ms, fracRes: 0.0097, norm(attn): 0.1836, norm(output): 0.0369, norm(x): 0.0335, norm(y): 0.9795, norm:377.3636, tok/sec: 109981.76, flops:42.85, batch-reuse:1
@ 738 train 7.0058 , allloss: 8.2016, dt: 1190.19ms, fracRes: 0.0105, norm(attn): 0.2227, norm(output): 0.0330, norm(x): 0.0288, norm(y): 0.9777, norm:351.6097, tok/sec: 110127.06, flops:42.91, batch-reuse:1
@ 739 train 6.7517 , allloss: 8.3150, dt: 1191.18ms, fracRes: 0.0139, norm(attn): 0.1631, norm(output): 0.0405, norm(x): 0.0371, norm(y): 0.9809, norm:49.1126, tok/sec: 110035.16, flops:42.87, batch-reuse:1
@ 740 train 6.6126 , allloss: 8.1287, dt: 1186.71ms, fracRes: 0.0096, norm(attn): 0.1475, norm(output): 0.0405, norm(x): 0.0374, norm(y): 0.9813, norm:32.7460, tok/sec: 110449.80, flops:43.03, batch-reuse:1
@ 741 train 6.5933 , allloss: 8.0355, dt: 1169.57ms, fracRes: 0.0087, norm(attn): 0.1338, norm(output): 0.0393, norm(x): 0.0370, norm(y): 0.9815, norm:15.4047, tok/sec: 112068.24, flops:43.66, batch-reuse:1
@ 742 train 6.6028 , allloss: 7.9438, dt: 1166.02ms, fracRes: 0.0080, norm(attn): 0.1143, norm(output): 0.0383, norm(x): 0.0370, norm(y): 0.9819, norm:11.0636, tok/sec: 112410.09, flops:43.79, batch-reuse:1
@ 743 train 6.5636 , allloss: 7.8380, dt: 1204.91ms, fracRes: 0.0079, norm(attn): 0.1318, norm(output): 0.0364, norm(x): 0.0348, norm(y): 0.9813, norm:11.1415, tok/sec: 108781.74, flops:42.38, batch-reuse:1
@ 744 train 6.5606 , allloss: 7.8336, dt: 1205.15ms, fracRes: 0.0078, norm(attn): 0.1406, norm(output): 0.0349, norm(x): 0.0341, norm(y): 0.9810, norm:30.5816, tok/sec: 108759.46, flops:42.37, batch-reuse:1
@ 745 train 6.6132 , allloss: 7.9325, dt: 1203.81ms, fracRes: 0.0078, norm(attn): 0.1494, norm(output): 0.0356, norm(x): 0.0337, norm(y): 0.9807, norm:54.1304, tok/sec: 108880.67, flops:42.42, batch-reuse:1
@ 746 train 6.6373 , allloss: 7.9059, dt: 1195.64ms, fracRes: 0.0079, norm(attn): 0.1445, norm(output): 0.0352, norm(x): 0.0343, norm(y): 0.9807, norm:33.6276, tok/sec: 109625.33, flops:42.71, batch-reuse:1
@ 747 train 6.6012 , allloss: 7.8593, dt: 1192.75ms, fracRes: 0.0098, norm(attn): 0.1641, norm(output): 0.0339, norm(x): 0.0332, norm(y): 0.9804, norm:23.3314, tok/sec: 109890.74, flops:42.81, batch-reuse:1
@ 748 train 6.5965 , allloss: 7.9107, dt: 1152.34ms, fracRes: 0.0083, norm(attn): 0.1592, norm(output): 0.0354, norm(x): 0.0347, norm(y): 0.9807, norm:18.6297, tok/sec: 113744.00, flops:44.31, batch-reuse:1
@ 749 train 6.7043 , allloss: 7.9733, dt: 1183.66ms, fracRes: 0.0103, norm(attn): 0.1641, norm(output): 0.0344, norm(x): 0.0340, norm(y): 0.9807, norm:14.1984, tok/sec: 110734.50, flops:43.14, batch-reuse:1
@ 750 train 6.8005 , allloss: 8.3034, dt: 1174.61ms, fracRes: 0.0079, norm(attn): 0.1582, norm(output): 0.0366, norm(x): 0.0358, norm(y): 0.9805, norm:113.5136, tok/sec: 111587.55, flops:43.47, batch-reuse:1
@ 751 train 6.6248 , allloss: 8.0526, dt: 1157.88ms, fracRes: 0.0079, norm(attn): 0.1367, norm(output): 0.0388, norm(x): 0.0366, norm(y): 0.9811, norm:24.7117, tok/sec: 113199.72, flops:44.10, batch-reuse:1
@ 752 train 6.5926 , allloss: 8.0873, dt: 1167.72ms, fracRes: 0.0077, norm(attn): 0.1504, norm(output): 0.0374, norm(x): 0.0366, norm(y): 0.9809, norm:18.1313, tok/sec: 112246.22, flops:43.73, batch-reuse:1
@ 753 train 6.5638 , allloss: 7.9433, dt: 1169.25ms, fracRes: 0.0077, norm(attn): 0.1357, norm(output): 0.0376, norm(x): 0.0366, norm(y): 0.9812, norm:9.7285, tok/sec: 112099.32, flops:43.67, batch-reuse:1
@ 754 train 6.5659 , allloss: 7.8469, dt: 1169.55ms, fracRes: 0.0078, norm(attn): 0.1602, norm(output): 0.0352, norm(x): 0.0336, norm(y): 0.9804, norm:25.2736, tok/sec: 112070.55, flops:43.66, batch-reuse:1
@ 755 train 6.6269 , allloss: 7.9968, dt: 1177.45ms, fracRes: 0.0080, norm(attn): 0.1309, norm(output): 0.0388, norm(x): 0.0373, norm(y): 0.9813, norm:12.5490, tok/sec: 111318.33, flops:43.37, batch-reuse:1
@ 756 train 6.5366 , allloss: 7.7684, dt: 1182.39ms, fracRes: 0.0083, norm(attn): 0.1641, norm(output): 0.0356, norm(x): 0.0336, norm(y): 0.9805, norm:20.4367, tok/sec: 110853.02, flops:43.19, batch-reuse:1
@ 757 train 6.5493 , allloss: 7.8909, dt: 1185.57ms, fracRes: 0.0079, norm(attn): 0.1299, norm(output): 0.0388, norm(x): 0.0366, norm(y): 0.9813, norm:8.2788, tok/sec: 110556.04, flops:43.07, batch-reuse:1
@ 758 train 6.4795 , allloss: 7.7882, dt: 1175.86ms, fracRes: 0.0076, norm(attn): 0.1328, norm(output): 0.0376, norm(x): 0.0363, norm(y): 0.9813, norm:12.3312, tok/sec: 111469.38, flops:43.43, batch-reuse:1
@ 759 train 6.5340 , allloss: 7.8058, dt: 1190.43ms, fracRes: 0.0080, norm(attn): 0.1436, norm(output): 0.0366, norm(x): 0.0351, norm(y): 0.9810, norm:6.3412, tok/sec: 110104.58, flops:42.90, batch-reuse:1
@ 760 train 6.5263 , allloss: 7.8014, dt: 1190.05ms, fracRes: 0.0081, norm(attn): 0.1426, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9809, norm:6.5023, tok/sec: 110140.05, flops:42.91, batch-reuse:1
@ 761 train 6.5226 , allloss: 7.8096, dt: 1168.53ms, fracRes: 0.0081, norm(attn): 0.1445, norm(output): 0.0366, norm(x): 0.0352, norm(y): 0.9808, norm:5.3722, tok/sec: 112168.44, flops:43.70, batch-reuse:1
@ 762 train 6.5088 , allloss: 7.7582, dt: 1231.81ms, fracRes: 0.0085, norm(attn): 0.1484, norm(output): 0.0366, norm(x): 0.0348, norm(y): 0.9807, norm:5.5805, tok/sec: 106405.81, flops:41.46, batch-reuse:1
@ 763 train 6.5599 , allloss: 7.7856, dt: 1185.14ms, fracRes: 0.0089, norm(attn): 0.1494, norm(output): 0.0361, norm(x): 0.0350, norm(y): 0.9807, norm:6.8285, tok/sec: 110595.89, flops:43.09, batch-reuse:1
@ 764 train 6.5040 , allloss: 7.7205, dt: 1162.70ms, fracRes: 0.0088, norm(attn): 0.1553, norm(output): 0.0354, norm(x): 0.0342, norm(y): 0.9804, norm:4.7499, tok/sec: 112730.37, flops:43.92, batch-reuse:1
@ 765 train 6.4921 , allloss: 7.6976, dt: 1160.20ms, fracRes: 0.0086, norm(attn): 0.1553, norm(output): 0.0354, norm(x): 0.0339, norm(y): 0.9803, norm:9.1205, tok/sec: 112974.01, flops:44.01, batch-reuse:1
@ 766 train 6.4235 , allloss: 7.6306, dt: 1192.18ms, fracRes: 0.0087, norm(attn): 0.1553, norm(output): 0.0354, norm(x): 0.0338, norm(y): 0.9803, norm:6.5540, tok/sec: 109942.81, flops:42.83, batch-reuse:1
@ 767 train 6.5177 , allloss: 7.7109, dt: 1212.83ms, fracRes: 0.0090, norm(attn): 0.1562, norm(output): 0.0349, norm(x): 0.0338, norm(y): 0.9802, norm:6.0213, tok/sec: 108071.05, flops:42.10, batch-reuse:1
@ 768 train 6.5956 , allloss: 7.7950, dt: 1152.27ms, fracRes: 0.0092, norm(attn): 0.1484, norm(output): 0.0354, norm(x): 0.0344, norm(y): 0.9802, norm:4.3183, tok/sec: 113751.09, flops:44.32, batch-reuse:1
@ 769 train 6.4506 , allloss: 7.6449, dt: 1200.38ms, fracRes: 0.0091, norm(attn): 0.1465, norm(output): 0.0359, norm(x): 0.0344, norm(y): 0.9803, norm:5.8702, tok/sec: 109192.32, flops:42.54, batch-reuse:1
@ 770 train 6.4681 , allloss: 7.6558, dt: 1179.18ms, fracRes: 0.0090, norm(attn): 0.1562, norm(output): 0.0349, norm(x): 0.0331, norm(y): 0.9799, norm:10.3718, tok/sec: 111155.65, flops:43.31, batch-reuse:1
@ 771 train 6.4110 , allloss: 7.5925, dt: 1196.01ms, fracRes: 0.0093, norm(attn): 0.1494, norm(output): 0.0352, norm(x): 0.0336, norm(y): 0.9800, norm:7.5845, tok/sec: 109590.78, flops:42.70, batch-reuse:1
@ 772 train 6.4789 , allloss: 7.6566, dt: 1194.20ms, fracRes: 0.0094, norm(attn): 0.1514, norm(output): 0.0349, norm(x): 0.0336, norm(y): 0.9799, norm:9.2800, tok/sec: 109757.31, flops:42.76, batch-reuse:1
@ 773 train 6.5635 , allloss: 7.7508, dt: 1178.76ms, fracRes: 0.0093, norm(attn): 0.1484, norm(output): 0.0352, norm(x): 0.0340, norm(y): 0.9799, norm:9.3831, tok/sec: 111194.88, flops:43.32, batch-reuse:1
@ 774 train 6.4512 , allloss: 7.6371, dt: 1190.75ms, fracRes: 0.0093, norm(attn): 0.1475, norm(output): 0.0354, norm(x): 0.0334, norm(y): 0.9797, norm:9.9155, tok/sec: 110075.28, flops:42.89, batch-reuse:1
@ 775 train 6.5581 , allloss: 7.7412, dt: 1194.05ms, fracRes: 0.0094, norm(attn): 0.1455, norm(output): 0.0349, norm(x): 0.0331, norm(y): 0.9796, norm:6.6540, tok/sec: 109770.88, flops:42.77, batch-reuse:1
@ 776 train 6.3708 , allloss: 7.5165, dt: 1196.93ms, fracRes: 0.0097, norm(attn): 0.1592, norm(output): 0.0334, norm(x): 0.0322, norm(y): 0.9792, norm:9.7570, tok/sec: 109507.09, flops:42.66, batch-reuse:1
@ 777 train 6.4269 , allloss: 7.5446, dt: 1161.93ms, fracRes: 0.0094, norm(attn): 0.1660, norm(output): 0.0332, norm(x): 0.0315, norm(y): 0.9789, norm:6.9032, tok/sec: 112805.39, flops:43.95, batch-reuse:1
@ 778 train 6.4165 , allloss: 7.5811, dt: 1180.98ms, fracRes: 0.0095, norm(attn): 0.1504, norm(output): 0.0342, norm(x): 0.0329, norm(y): 0.9793, norm:4.5384, tok/sec: 110985.57, flops:43.24, batch-reuse:1
@ 779 train 6.4800 , allloss: 7.6752, dt: 1172.93ms, fracRes: 0.0090, norm(attn): 0.1426, norm(output): 0.0352, norm(x): 0.0334, norm(y): 0.9794, norm:8.8118, tok/sec: 111747.91, flops:43.54, batch-reuse:1
@ 780 train 6.4724 , allloss: 7.7465, dt: 1181.13ms, fracRes: 0.0091, norm(attn): 0.1504, norm(output): 0.0347, norm(x): 0.0341, norm(y): 0.9794, norm:21.6302, tok/sec: 110971.59, flops:43.23, batch-reuse:1
@ 781 train 6.4355 , allloss: 7.6455, dt: 1183.95ms, fracRes: 0.0090, norm(attn): 0.1426, norm(output): 0.0352, norm(x): 0.0335, norm(y): 0.9793, norm:8.3581, tok/sec: 110707.23, flops:43.13, batch-reuse:1
@ 782 train 6.4853 , allloss: 7.7360, dt: 1209.09ms, fracRes: 0.0090, norm(attn): 0.1387, norm(output): 0.0356, norm(x): 0.0340, norm(y): 0.9792, norm:20.2948, tok/sec: 108405.22, flops:42.23, batch-reuse:1
@ 783 train 6.4624 , allloss: 7.6493, dt: 1176.57ms, fracRes: 0.0088, norm(attn): 0.1572, norm(output): 0.0330, norm(x): 0.0324, norm(y): 0.9787, norm:25.0666, tok/sec: 111401.79, flops:43.40, batch-reuse:1
@ 784 train 6.4533 , allloss: 7.7121, dt: 1182.51ms, fracRes: 0.0094, norm(attn): 0.1396, norm(output): 0.0354, norm(x): 0.0340, norm(y): 0.9791, norm:9.0899, tok/sec: 110842.31, flops:43.18, batch-reuse:1
@ 785 train 6.4483 , allloss: 7.6963, dt: 1197.46ms, fracRes: 0.0097, norm(attn): 0.1436, norm(output): 0.0352, norm(x): 0.0330, norm(y): 0.9788, norm:10.6420, tok/sec: 109458.29, flops:42.64, batch-reuse:1
@ 786 train 6.4108 , allloss: 7.5732, dt: 1191.56ms, fracRes: 0.0097, norm(attn): 0.1445, norm(output): 0.0349, norm(x): 0.0329, norm(y): 0.9790, norm:7.6957, tok/sec: 110000.05, flops:42.86, batch-reuse:1
@ 787 train 6.4380 , allloss: 7.6193, dt: 1203.36ms, fracRes: 0.0095, norm(attn): 0.1436, norm(output): 0.0347, norm(x): 0.0327, norm(y): 0.9787, norm:10.4610, tok/sec: 108921.51, flops:42.44, batch-reuse:1
@ 788 train 6.4906 , allloss: 7.6320, dt: 1189.94ms, fracRes: 0.0094, norm(attn): 0.1553, norm(output): 0.0330, norm(x): 0.0320, norm(y): 0.9786, norm:5.4975, tok/sec: 110150.29, flops:42.91, batch-reuse:1
@ 789 train 6.3779 , allloss: 7.5444, dt: 1160.36ms, fracRes: 0.0089, norm(attn): 0.1504, norm(output): 0.0332, norm(x): 0.0324, norm(y): 0.9786, norm:8.1450, tok/sec: 112957.78, flops:44.01, batch-reuse:1
@ 790 train 6.4084 , allloss: 7.6737, dt: 1175.73ms, fracRes: 0.0088, norm(attn): 0.1465, norm(output): 0.0347, norm(x): 0.0327, norm(y): 0.9784, norm:19.5852, tok/sec: 111481.45, flops:43.43, batch-reuse:1
@ 791 train 6.5620 , allloss: 7.8017, dt: 1216.71ms, fracRes: 0.0085, norm(attn): 0.1396, norm(output): 0.0352, norm(x): 0.0338, norm(y): 0.9787, norm:9.3386, tok/sec: 107726.25, flops:41.97, batch-reuse:1
@ 792 train 6.5817 , allloss: 7.9002, dt: 1210.85ms, fracRes: 0.0087, norm(attn): 0.1260, norm(output): 0.0376, norm(x): 0.0356, norm(y): 0.9789, norm:44.5565, tok/sec: 108248.03, flops:42.17, batch-reuse:1
@ 793 train 6.5397 , allloss: 7.7603, dt: 1169.90ms, fracRes: 0.0083, norm(attn): 0.1484, norm(output): 0.0347, norm(x): 0.0327, norm(y): 0.9784, norm:21.5297, tok/sec: 112036.70, flops:43.65, batch-reuse:1
@ 794 train 6.7049 , allloss: 8.0214, dt: 1173.13ms, fracRes: 0.0084, norm(attn): 0.1396, norm(output): 0.0349, norm(x): 0.0346, norm(y): 0.9789, norm:65.6101, tok/sec: 111728.43, flops:43.53, batch-reuse:1
@ 795 train 6.4893 , allloss: 7.9066, dt: 1161.66ms, fracRes: 0.0086, norm(attn): 0.1328, norm(output): 0.0366, norm(x): 0.0354, norm(y): 0.9790, norm:25.6312, tok/sec: 112831.55, flops:43.96, batch-reuse:1
@ 796 train 6.4523 , allloss: 7.7693, dt: 1170.56ms, fracRes: 0.0086, norm(attn): 0.1377, norm(output): 0.0369, norm(x): 0.0339, norm(y): 0.9788, norm:20.0613, tok/sec: 111973.84, flops:43.63, batch-reuse:1
@ 797 train 6.4967 , allloss: 7.7184, dt: 1172.26ms, fracRes: 0.0086, norm(attn): 0.1318, norm(output): 0.0352, norm(x): 0.0339, norm(y): 0.9788, norm:8.2805, tok/sec: 111811.35, flops:43.56, batch-reuse:1
@ 798 train 6.5136 , allloss: 7.6998, dt: 1180.25ms, fracRes: 0.0078, norm(attn): 0.1455, norm(output): 0.0337, norm(x): 0.0326, norm(y): 0.9783, norm:14.1797, tok/sec: 111054.49, flops:43.27, batch-reuse:1
@ 799 train 6.4935 , allloss: 7.6499, dt: 1181.04ms, fracRes: 0.0080, norm(attn): 0.1602, norm(output): 0.0330, norm(x): 0.0312, norm(y): 0.9777, norm:10.2017, tok/sec: 110979.95, flops:43.24, batch-reuse:1
@ 800 train 6.4088 , allloss: 7.6321, dt: 1198.04ms, fracRes: 0.0079, norm(attn): 0.1445, norm(output): 0.0347, norm(x): 0.0332, norm(y): 0.9783, norm:9.9611, tok/sec: 109405.38, flops:42.62, batch-reuse:1
@ 801 train 6.4093 , allloss: 7.6231, dt: 1191.77ms, fracRes: 0.0078, norm(attn): 0.1465, norm(output): 0.0344, norm(x): 0.0333, norm(y): 0.9783, norm:5.6675, tok/sec: 109981.12, flops:42.85, batch-reuse:1
@ 802 train 6.4748 , allloss: 7.6585, dt: 1173.42ms, fracRes: 0.0077, norm(attn): 0.1465, norm(output): 0.0349, norm(x): 0.0334, norm(y): 0.9784, norm:9.8282, tok/sec: 111700.69, flops:43.52, batch-reuse:1
@ 803 train 6.4897 , allloss: 7.6571, dt: 1188.81ms, fracRes: 0.0076, norm(attn): 0.1484, norm(output): 0.0347, norm(x): 0.0331, norm(y): 0.9783, norm:5.1534, tok/sec: 110255.25, flops:42.96, batch-reuse:1
@ 804 train 6.3902 , allloss: 7.5794, dt: 1157.52ms, fracRes: 0.0076, norm(attn): 0.1416, norm(output): 0.0349, norm(x): 0.0333, norm(y): 0.9784, norm:7.8296, tok/sec: 113234.72, flops:44.12, batch-reuse:1
@ 805 train 6.4803 , allloss: 7.6772, dt: 1167.00ms, fracRes: 0.0082, norm(attn): 0.1426, norm(output): 0.0349, norm(x): 0.0339, norm(y): 0.9785, norm:6.9173, tok/sec: 112315.10, flops:43.76, batch-reuse:1
@ 806 train 6.3600 , allloss: 7.5479, dt: 1175.35ms, fracRes: 0.0082, norm(attn): 0.1416, norm(output): 0.0349, norm(x): 0.0335, norm(y): 0.9784, norm:6.4623, tok/sec: 111517.56, flops:43.45, batch-reuse:1
@ 807 train 6.4123 , allloss: 7.5773, dt: 1164.52ms, fracRes: 0.0083, norm(attn): 0.1465, norm(output): 0.0347, norm(x): 0.0328, norm(y): 0.9782, norm:6.9742, tok/sec: 112554.76, flops:43.85, batch-reuse:1
@ 808 train 6.3934 , allloss: 7.5641, dt: 1174.27ms, fracRes: 0.0083, norm(attn): 0.1416, norm(output): 0.0347, norm(x): 0.0330, norm(y): 0.9781, norm:8.3630, tok/sec: 111620.04, flops:43.49, batch-reuse:1
@ 809 train 6.3991 , allloss: 7.5951, dt: 1185.56ms, fracRes: 0.0083, norm(attn): 0.1396, norm(output): 0.0352, norm(x): 0.0335, norm(y): 0.9782, norm:7.2845, tok/sec: 110556.64, flops:43.07, batch-reuse:1
@ 810 train 6.4517 , allloss: 7.6380, dt: 1163.27ms, fracRes: 0.0084, norm(attn): 0.1377, norm(output): 0.0349, norm(x): 0.0338, norm(y): 0.9782, norm:8.1992, tok/sec: 112675.31, flops:43.90, batch-reuse:1
@ 811 train 6.4564 , allloss: 7.5954, dt: 1175.39ms, fracRes: 0.0084, norm(attn): 0.1533, norm(output): 0.0334, norm(x): 0.0323, norm(y): 0.9777, norm:5.4112, tok/sec: 111513.60, flops:43.45, batch-reuse:1
@ 812 train 6.2987 , allloss: 7.4528, dt: 1198.87ms, fracRes: 0.0084, norm(attn): 0.1445, norm(output): 0.0342, norm(x): 0.0329, norm(y): 0.9778, norm:6.8167, tok/sec: 109330.06, flops:42.59, batch-reuse:1
@ 813 train 6.5613 , allloss: 7.7819, dt: 1177.38ms, fracRes: 0.0081, norm(attn): 0.1387, norm(output): 0.0364, norm(x): 0.0336, norm(y): 0.9779, norm:11.1295, tok/sec: 111325.02, flops:43.37, batch-reuse:1
@ 814 train 6.5013 , allloss: 7.7037, dt: 1162.61ms, fracRes: 0.0082, norm(attn): 0.1396, norm(output): 0.0349, norm(x): 0.0326, norm(y): 0.9776, norm:12.0537, tok/sec: 112739.25, flops:43.92, batch-reuse:1
@ 815 train 6.3715 , allloss: 7.5304, dt: 1155.70ms, fracRes: 0.0086, norm(attn): 0.1426, norm(output): 0.0332, norm(x): 0.0328, norm(y): 0.9776, norm:11.7929, tok/sec: 113413.96, flops:44.19, batch-reuse:1
@ 816 train 6.4163 , allloss: 7.5850, dt: 1174.05ms, fracRes: 0.0090, norm(attn): 0.1445, norm(output): 0.0347, norm(x): 0.0324, norm(y): 0.9773, norm:8.2566, tok/sec: 111641.35, flops:43.50, batch-reuse:1
@ 817 train 6.3435 , allloss: 7.5205, dt: 1194.70ms, fracRes: 0.0085, norm(attn): 0.1436, norm(output): 0.0342, norm(x): 0.0322, norm(y): 0.9773, norm:7.3580, tok/sec: 109710.85, flops:42.74, batch-reuse:1
@ 818 train 6.3786 , allloss: 7.5519, dt: 1200.14ms, fracRes: 0.0080, norm(attn): 0.1396, norm(output): 0.0339, norm(x): 0.0328, norm(y): 0.9775, norm:8.3350, tok/sec: 109214.27, flops:42.55, batch-reuse:1
@ 819 train 6.4714 , allloss: 7.6205, dt: 1187.54ms, fracRes: 0.0079, norm(attn): 0.1396, norm(output): 0.0337, norm(x): 0.0330, norm(y): 0.9776, norm:7.1343, tok/sec: 110372.85, flops:43.00, batch-reuse:1
@ 820 train 6.5588 , allloss: 7.7406, dt: 1179.91ms, fracRes: 0.0078, norm(attn): 0.1357, norm(output): 0.0349, norm(x): 0.0331, norm(y): 0.9773, norm:17.4363, tok/sec: 111086.00, flops:43.28, batch-reuse:1
@ 821 train 6.4452 , allloss: 7.5909, dt: 1194.27ms, fracRes: 0.0083, norm(attn): 0.1406, norm(output): 0.0332, norm(x): 0.0325, norm(y): 0.9772, norm:8.4681, tok/sec: 109750.82, flops:42.76, batch-reuse:1
@ 822 train 6.5730 , allloss: 7.7308, dt: 1203.20ms, fracRes: 0.0080, norm(attn): 0.1494, norm(output): 0.0330, norm(x): 0.0314, norm(y): 0.9767, norm:18.0633, tok/sec: 108935.84, flops:42.44, batch-reuse:1
@ 823 train 6.4026 , allloss: 7.5993, dt: 1192.22ms, fracRes: 0.0082, norm(attn): 0.1338, norm(output): 0.0342, norm(x): 0.0332, norm(y): 0.9770, norm:11.1073, tok/sec: 109939.40, flops:42.83, batch-reuse:1
@ 824 train 6.5558 , allloss: 7.7404, dt: 1170.74ms, fracRes: 0.0086, norm(attn): 0.1318, norm(output): 0.0344, norm(x): 0.0336, norm(y): 0.9772, norm:7.2817, tok/sec: 111956.87, flops:43.62, batch-reuse:1
@ 825 train 6.4064 , allloss: 7.5295, dt: 1158.78ms, fracRes: 0.0085, norm(attn): 0.1475, norm(output): 0.0330, norm(x): 0.0317, norm(y): 0.9767, norm:5.9941, tok/sec: 113111.59, flops:44.07, batch-reuse:1
@ 826 train 6.4068 , allloss: 7.5316, dt: 1160.43ms, fracRes: 0.0082, norm(attn): 0.1445, norm(output): 0.0330, norm(x): 0.0319, norm(y): 0.9767, norm:11.6646, tok/sec: 112951.31, flops:44.01, batch-reuse:1
@ 827 train 6.4894 , allloss: 7.6588, dt: 1161.12ms, fracRes: 0.0080, norm(attn): 0.1348, norm(output): 0.0352, norm(x): 0.0328, norm(y): 0.9770, norm:9.3455, tok/sec: 112884.51, flops:43.98, batch-reuse:1
@ 828 train 6.3982 , allloss: 7.5647, dt: 1176.24ms, fracRes: 0.0081, norm(attn): 0.1357, norm(output): 0.0349, norm(x): 0.0329, norm(y): 0.9769, norm:8.0655, tok/sec: 111432.73, flops:43.41, batch-reuse:1
@ 829 train 6.4370 , allloss: 7.5349, dt: 1191.24ms, fracRes: 0.0087, norm(attn): 0.1582, norm(output): 0.0315, norm(x): 0.0310, norm(y): 0.9762, norm:17.4663, tok/sec: 110030.08, flops:42.87, batch-reuse:1
@ 830 train 6.4468 , allloss: 7.6476, dt: 1200.43ms, fracRes: 0.0086, norm(attn): 0.1357, norm(output): 0.0352, norm(x): 0.0332, norm(y): 0.9768, norm:10.3250, tok/sec: 109187.27, flops:42.54, batch-reuse:1
@ 831 train 6.5135 , allloss: 7.7336, dt: 1194.34ms, fracRes: 0.0086, norm(attn): 0.1328, norm(output): 0.0347, norm(x): 0.0330, norm(y): 0.9766, norm:44.3515, tok/sec: 109744.65, flops:42.76, batch-reuse:1
@ 832 train 10.1438 , allloss: 12.3332, dt: 1202.10ms, fracRes: 0.0096, norm(attn): 0.2344, norm(output): 0.0400, norm(x): 0.0369, norm(y): 0.9713, norm:570.6739, tok/sec: 109035.85, flops:42.48, batch-reuse:1
@ 833 train 10.9023 , allloss: 13.0141, dt: 1186.25ms, fracRes: 0.0171, norm(attn): 0.2656, norm(output): 0.0381, norm(x): 0.0379, norm(y): 0.9688, norm:577.6487, tok/sec: 110492.51, flops:43.05, batch-reuse:1
@ 834 train 12.2004 , allloss: 13.8910, dt: 1191.42ms, fracRes: 0.0147, norm(attn): 0.3926, norm(output): 0.0369, norm(x): 0.0373, norm(y): 0.9599, norm:199006.9844, tok/sec: 110013.56, flops:42.86, batch-reuse:1
@ 835 train 12.4771 , allloss: 13.8275, dt: 1200.98ms, fracRes: 0.0237, norm(attn): 0.6250, norm(output): 0.0403, norm(x): 0.0410, norm(y): 0.9133, norm:61104.8555, tok/sec: 109137.69, flops:42.52, batch-reuse:1
@ 836 train 11.9097 , allloss: 13.4167, dt: 1161.79ms, fracRes: 0.0110, norm(attn): 0.6914, norm(output): 0.0703, norm(x): 0.0700, norm(y): 0.9017, norm:79373.7266, tok/sec: 112818.77, flops:43.95, batch-reuse:1
@ 837 train 11.0857 , allloss: 12.6309, dt: 1173.61ms, fracRes: 0.0062, norm(attn): 0.7578, norm(output): 0.0913, norm(x): 0.0887, norm(y): 0.8814, norm:9179.4980, tok/sec: 111682.92, flops:43.51, batch-reuse:1
@ 838 train 9.8742 , allloss: 11.5227, dt: 1183.17ms, fracRes: 0.0049, norm(attn): 0.7578, norm(output): 0.1289, norm(x): 0.1199, norm(y): 0.8982, norm:1515.0887, tok/sec: 110780.02, flops:43.16, batch-reuse:1
@ 839 train 9.8424 , allloss: 11.2005, dt: 1170.26ms, fracRes: 0.0049, norm(attn): 0.7891, norm(output): 0.1543, norm(x): 0.1434, norm(y): 0.9077, norm:1094.1071, tok/sec: 112002.63, flops:43.64, batch-reuse:1
@ 840 train 9.7187 , allloss: 11.0583, dt: 1172.93ms, fracRes: 0.0061, norm(attn): 0.7930, norm(output): 0.1914, norm(x): 0.1764, norm(y): 0.9208, norm:172.7789, tok/sec: 111747.62, flops:43.54, batch-reuse:1
@ 841 train 9.5071 , allloss: 10.7003, dt: 1166.12ms, fracRes: 0.0079, norm(attn): 0.8320, norm(output): 0.2402, norm(x): 0.2217, norm(y): 0.9308, norm:115.1608, tok/sec: 112400.16, flops:43.79, batch-reuse:1
@ 842 train 9.0743 , allloss: 10.3806, dt: 1180.62ms, fracRes: 0.0079, norm(attn): 0.9258, norm(output): 0.2871, norm(x): 0.2617, norm(y): 0.9124, norm:56.4417, tok/sec: 111019.44, flops:43.25, batch-reuse:1
@ 843 train 8.8500 , allloss: 11.5005, dt: 1162.24ms, fracRes: 0.0081, norm(attn): 0.9141, norm(output): 0.3633, norm(x): 0.3312, norm(y): 0.9410, norm:32094.3750, tok/sec: 112774.86, flops:43.94, batch-reuse:1
@ 844 train 8.0612 , allloss: 13.6484, dt: 1161.57ms, fracRes: 0.0099, norm(attn): 0.8672, norm(output): 0.4805, norm(x): 0.4355, norm(y): 0.9636, norm:1833765.3750, tok/sec: 112840.00, flops:43.96, batch-reuse:1
@ 845 train 8.1160 , allloss: 15.3513, dt: 1175.54ms, fracRes: 0.0183, norm(attn): 0.9102, norm(output): 0.5820, norm(x): 0.5306, norm(y): 0.9712, norm:2692436.2500, tok/sec: 111499.65, flops:43.44, batch-reuse:1
@ 846 train 8.0386 , allloss: 16.4877, dt: 1184.46ms, fracRes: 0.0523, norm(attn): 0.9336, norm(output): 0.6328, norm(x): 0.6016, norm(y): 0.9741, norm:5486591.5000, tok/sec: 110659.34, flops:43.11, batch-reuse:1
@ 847 train 8.1385 , allloss: 17.0456, dt: 1190.69ms, fracRes: 0.1597, norm(attn): 0.8672, norm(output): 0.6133, norm(x): 0.6522, norm(y): 0.9748, norm:693988.7500, tok/sec: 110081.08, flops:42.89, batch-reuse:1
@ 848 train 8.0648 , allloss: 17.8439, dt: 1176.98ms, fracRes: 0.1829, norm(attn): 0.8398, norm(output): 0.5938, norm(x): 0.6559, norm(y): 0.9746, norm:3069680.2500, tok/sec: 111362.98, flops:43.39, batch-reuse:1
@ 849 train 7.9778 , allloss: 17.6226, dt: 1195.04ms, fracRes: 0.1644, norm(attn): 0.8594, norm(output): 0.6328, norm(x): 0.6854, norm(y): 0.9771, norm:167712256.0000, tok/sec: 109679.77, flops:42.73, batch-reuse:1
@ 850 train 8.2294 , allloss: 16.7973, dt: 1162.02ms, fracRes: 0.1415, norm(attn): 0.8594, norm(output): 0.6406, norm(x): 0.6742, norm(y): 0.9784, norm:50259180.0000, tok/sec: 112797.10, flops:43.95, batch-reuse:1
@ 851 train 8.3939 , allloss: 18.4262, dt: 1162.93ms, fracRes: 0.2347, norm(attn): 0.7930, norm(output): 0.6016, norm(x): 0.7206, norm(y): 0.9776, norm:15102676992.0000, tok/sec: 112708.79, flops:43.91, batch-reuse:1
@ 852 train 8.3659 , allloss: 20.0387, dt: 1178.49ms, fracRes: 0.2864, norm(attn): 0.7578, norm(output): 0.5781, norm(x): 0.7666, norm(y): 0.9772, norm:26970518.0000, tok/sec: 111219.85, flops:43.33, batch-reuse:1
@ 853 train 8.4171 , allloss: 21.5010, dt: 1196.47ms, fracRes: 0.2497, norm(attn): 0.8164, norm(output): 0.6367, norm(x): 0.8012, norm(y): 0.9755, norm:18897932.0000, tok/sec: 109549.01, flops:42.68, batch-reuse:1
@ 854 train 8.4174 , allloss: 23.9066, dt: 1194.03ms, fracRes: 0.2340, norm(attn): 0.8711, norm(output): 0.6758, norm(x): 0.8355, norm(y): 0.9747, norm:182824880.0000, tok/sec: 109772.61, flops:42.77, batch-reuse:1
@ 855 train 8.5017 , allloss: 25.2401, dt: 1189.45ms, fracRes: 0.2291, norm(attn): 0.8672, norm(output): 0.6680, norm(x): 0.7980, norm(y): 0.9737, norm:31966268.0000, tok/sec: 110195.58, flops:42.93, batch-reuse:1
@ 856 train 8.3811 , allloss: 21.7664, dt: 1175.57ms, fracRes: 0.3201, norm(attn): 0.7852, norm(output): 0.6641, norm(x): 0.8913, norm(y): 0.9773, norm:30854218.0000, tok/sec: 111496.53, flops:43.44, batch-reuse:1
@ 857 train 8.4131 , allloss: 20.5286, dt: 1191.33ms, fracRes: 0.3348, norm(attn): 0.7383, norm(output): 0.6484, norm(x): 0.8740, norm(y): 0.9792, norm:11839554.0000, tok/sec: 110021.66, flops:42.86, batch-reuse:1
@ 858 train 8.3546 , allloss: 21.2191, dt: 1189.70ms, fracRes: 0.3644, norm(attn): 0.6875, norm(output): 0.6055, norm(x): 0.8297, norm(y): 0.9796, norm:538200704.0000, tok/sec: 110172.19, flops:42.92, batch-reuse:1
@ 859 train 8.4251 , allloss: 22.1182, dt: 1181.24ms, fracRes: 0.2326, norm(attn): 0.8203, norm(output): 0.7383, norm(x): 0.8435, norm(y): 0.9803, norm:77718008.0000, tok/sec: 110960.91, flops:43.23, batch-reuse:1
@ 860 train 8.4099 , allloss: 23.1022, dt: 1176.80ms, fracRes: 0.0692, norm(attn): 1.0312, norm(output): 0.9688, norm(x): 0.9316, norm(y): 0.9800, norm:104398616.0000, tok/sec: 111379.97, flops:43.39, batch-reuse:1
@ 861 train 8.4718 , allloss: 20.8855, dt: 1192.95ms, fracRes: 0.0414, norm(attn): 1.1016, norm(output): 1.0000, norm(x): 0.9342, norm(y): 0.9792, norm:45650008.0000, tok/sec: 109872.08, flops:42.81, batch-reuse:1
@ 862 train 8.5693 , allloss: 21.6347, dt: 1197.65ms, fracRes: 0.0356, norm(attn): 1.1328, norm(output): 1.0391, norm(x): 0.9659, norm(y): 0.9783, norm:38462816.0000, tok/sec: 109440.54, flops:42.64, batch-reuse:1
@ 863 train 8.4936 , allloss: 24.3179, dt: 1177.57ms, fracRes: 0.1093, norm(attn): 0.9688, norm(output): 0.9609, norm(x): 0.9701, norm(y): 0.9813, norm:6579314.5000, tok/sec: 111307.49, flops:43.37, batch-reuse:1
@ 864 train 8.4847 , allloss: 21.9706, dt: 1181.81ms, fracRes: 0.2563, norm(attn): 0.7578, norm(output): 0.7461, norm(x): 0.9215, norm(y): 0.9819, norm:4833575.5000, tok/sec: 110907.88, flops:43.21, batch-reuse:1
@ 865 train 8.5260 , allloss: 21.3797, dt: 1195.26ms, fracRes: 0.3023, norm(attn): 0.6719, norm(output): 0.6641, norm(x): 0.8819, norm(y): 0.9819, norm:23136422.0000, tok/sec: 109659.56, flops:42.72, batch-reuse:1
@ 866 train 8.5287 , allloss: 21.6513, dt: 1161.81ms, fracRes: 0.3365, norm(attn): 0.6406, norm(output): 0.6094, norm(x): 0.8640, norm(y): 0.9819, norm:100761104.0000, tok/sec: 112817.33, flops:43.95, batch-reuse:1
@ 867 train 8.5147 , allloss: 20.4828, dt: 1175.63ms, fracRes: 0.4045, norm(attn): 0.5742, norm(output): 0.5664, norm(x): 0.9142, norm(y): 0.9823, norm:24367494.0000, tok/sec: 111490.63, flops:43.44, batch-reuse:1
@ 868 train 8.4133 , allloss: 19.5669, dt: 1168.33ms, fracRes: 0.4389, norm(attn): 0.5430, norm(output): 0.5430, norm(x): 0.9266, norm(y): 0.9825, norm:3318639616.0000, tok/sec: 112187.71, flops:43.71, batch-reuse:1
@ 869 train 8.3014 , allloss: 18.7644, dt: 1186.22ms, fracRes: 0.4390, norm(attn): 0.5312, norm(output): 0.5625, norm(x): 0.9544, norm(y): 0.9828, norm:2662493.2500, tok/sec: 110495.13, flops:43.05, batch-reuse:1
@ 870 train 8.2159 , allloss: 18.0179, dt: 1171.45ms, fracRes: 0.4671, norm(attn): 0.4961, norm(output): 0.5195, norm(x): 0.9708, norm(y): 0.9828, norm:11096060.0000, tok/sec: 111889.08, flops:43.59, batch-reuse:1
@ 871 train 8.2300 , allloss: 17.9352, dt: 1173.48ms, fracRes: 0.3979, norm(attn): 0.5703, norm(output): 0.6133, norm(x): 0.9888, norm(y): 0.9827, norm:5696987136.0000, tok/sec: 111694.72, flops:43.52, batch-reuse:1
@ 872 train 8.1983 , allloss: 17.7612, dt: 1181.16ms, fracRes: 0.3797, norm(attn): 0.5742, norm(output): 0.6133, norm(x): 0.9560, norm(y): 0.9826, norm:51383460.0000, tok/sec: 110968.97, flops:43.23, batch-reuse:1
@ 873 train 8.1951 , allloss: 17.6611, dt: 1206.72ms, fracRes: 0.3884, norm(attn): 0.5508, norm(output): 0.6055, norm(x): 0.9679, norm(y): 0.9827, norm:1748435.7500, tok/sec: 108618.67, flops:42.32, batch-reuse:1
@ 874 train 8.0875 , allloss: 17.3622, dt: 1201.44ms, fracRes: 0.4272, norm(attn): 0.5312, norm(output): 0.5820, norm(x): 0.9973, norm(y): 0.9827, norm:1704081.5000, tok/sec: 109095.57, flops:42.50, batch-reuse:1
@ 875 train 8.1001 , allloss: 18.1848, dt: 1178.54ms, fracRes: 0.4320, norm(attn): 0.5273, norm(output): 0.5977, norm(x): 1.0316, norm(y): 0.9826, norm:80297416.0000, tok/sec: 111215.60, flops:43.33, batch-reuse:1
@ 876 train 8.0785 , allloss: 20.4981, dt: 1204.59ms, fracRes: 0.2875, norm(attn): 0.6523, norm(output): 0.7383, norm(x): 0.9859, norm(y): 0.9821, norm:44675392.0000, tok/sec: 108810.27, flops:42.39, batch-reuse:1
@ 877 train 8.0327 , allloss: 21.3479, dt: 1198.96ms, fracRes: 0.2858, norm(attn): 0.6250, norm(output): 0.7188, norm(x): 0.9766, norm(y): 0.9820, norm:9977272.0000, tok/sec: 109321.19, flops:42.59, batch-reuse:1
@ 878 train 8.0320 , allloss: 23.4588, dt: 1203.72ms, fracRes: 0.2002, norm(attn): 0.6484, norm(output): 0.7305, norm(x): 0.9099, norm(y): 0.9816, norm:116521808.0000, tok/sec: 108889.17, flops:42.42, batch-reuse:1
@ 879 train 8.0594 , allloss: 25.9731, dt: 1196.00ms, fracRes: 0.1718, norm(attn): 0.6680, norm(output): 0.7578, norm(x): 0.9213, norm(y): 0.9814, norm:9887781.0000, tok/sec: 109592.42, flops:42.70, batch-reuse:1
@ 880 train 8.2659 , allloss: 26.1916, dt: 1202.90ms, fracRes: 0.1518, norm(attn): 0.7578, norm(output): 0.8242, norm(x): 0.9406, norm(y): 0.9804, norm:23900236.0000, tok/sec: 108963.76, flops:42.45, batch-reuse:1
@ 881 train 8.6611 , allloss: 25.5065, dt: 1198.34ms, fracRes: 0.1167, norm(attn): 0.8438, norm(output): 0.8164, norm(x): 0.8844, norm(y): 0.9786, norm:14371360.0000, tok/sec: 109378.35, flops:42.61, batch-reuse:1
@ 882 train 9.3251 , allloss: 22.2696, dt: 1179.02ms, fracRes: 0.1267, norm(attn): 0.8438, norm(output): 0.6367, norm(x): 0.7182, norm(y): 0.9761, norm:1150270.6250, tok/sec: 111169.92, flops:43.31, batch-reuse:1
@ 883 train 8.9025 , allloss: 24.3614, dt: 1202.68ms, fracRes: 0.1778, norm(attn): 0.7695, norm(output): 0.6641, norm(x): 0.8280, norm(y): 0.9777, norm:6085074.5000, tok/sec: 108983.13, flops:42.46, batch-reuse:1
@ 884 train 8.5654 , allloss: 26.8107, dt: 1206.67ms, fracRes: 0.1718, norm(attn): 0.7539, norm(output): 0.7422, norm(x): 0.8792, norm(y): 0.9789, norm:13845039.0000, tok/sec: 108623.05, flops:42.32, batch-reuse:1
@ 885 train 8.0421 , allloss: 27.3131, dt: 1205.70ms, fracRes: 0.2059, norm(attn): 0.6328, norm(output): 0.7305, norm(x): 0.9415, norm(y): 0.9814, norm:9309025.0000, tok/sec: 108710.51, flops:42.35, batch-reuse:1
@ 886 train 7.9598 , allloss: 23.5234, dt: 1184.06ms, fracRes: 0.3410, norm(attn): 0.5391, norm(output): 0.6328, norm(x): 1.0083, norm(y): 0.9820, norm:41307196.0000, tok/sec: 110697.37, flops:43.13, batch-reuse:1
@ 887 train 7.9682 , allloss: 20.7437, dt: 1168.96ms, fracRes: 0.4448, norm(attn): 0.4590, norm(output): 0.5430, norm(x): 1.0232, norm(y): 0.9824, norm:59376180.0000, tok/sec: 112126.83, flops:43.68, batch-reuse:1
@ 888 train 7.9235 , allloss: 17.3186, dt: 1180.37ms, fracRes: 0.5290, norm(attn): 0.3848, norm(output): 0.4492, norm(x): 1.0156, norm(y): 0.9825, norm:1603308800.0000, tok/sec: 111043.48, flops:43.26, batch-reuse:1
@ 889 train 7.9497 , allloss: 16.3444, dt: 1182.92ms, fracRes: 0.5518, norm(attn): 0.3555, norm(output): 0.4141, norm(x): 0.9945, norm(y): 0.9827, norm:17358756.0000, tok/sec: 110803.73, flops:43.17, batch-reuse:1
@ 890 train 7.9433 , allloss: 16.4946, dt: 1171.39ms, fracRes: 0.5481, norm(attn): 0.3613, norm(output): 0.4355, norm(x): 1.0135, norm(y): 0.9830, norm:192399104.0000, tok/sec: 111894.00, flops:43.59, batch-reuse:1
@ 891 train 7.8890 , allloss: 15.0772, dt: 1182.97ms, fracRes: 0.6001, norm(attn): 0.3086, norm(output): 0.3691, norm(x): 1.0094, norm(y): 0.9831, norm:62092532.0000, tok/sec: 110799.26, flops:43.17, batch-reuse:1
@ 892 train 7.8119 , allloss: 14.9578, dt: 1205.22ms, fracRes: 0.5728, norm(attn): 0.3281, norm(output): 0.4082, norm(x): 0.9752, norm(y): 0.9831, norm:2782283.2500, tok/sec: 108753.53, flops:42.37, batch-reuse:1
@ 893 train 7.7950 , allloss: 14.8289, dt: 1173.36ms, fracRes: 0.5475, norm(attn): 0.3359, norm(output): 0.4062, norm(x): 0.9349, norm(y): 0.9830, norm:2490107.2500, tok/sec: 111706.47, flops:43.52, batch-reuse:1
@ 894 train 7.9168 , allloss: 14.6144, dt: 1156.26ms, fracRes: 0.5387, norm(attn): 0.3301, norm(output): 0.4062, norm(x): 0.9218, norm(y): 0.9831, norm:197878.0469, tok/sec: 113358.28, flops:44.16, batch-reuse:1
@ 895 train 7.9493 , allloss: 14.7177, dt: 1159.79ms, fracRes: 0.5236, norm(attn): 0.3457, norm(output): 0.4258, norm(x): 0.8886, norm(y): 0.9830, norm:22958070.0000, tok/sec: 113013.42, flops:44.03, batch-reuse:1
@ 896 train 7.8797 , allloss: 15.0692, dt: 1166.24ms, fracRes: 0.4867, norm(attn): 0.3672, norm(output): 0.4551, norm(x): 0.9053, norm(y): 0.9829, norm:37211024.0000, tok/sec: 112388.05, flops:43.79, batch-reuse:1
@ 897 train 7.9078 , allloss: 15.4171, dt: 1163.98ms, fracRes: 0.4730, norm(attn): 0.3828, norm(output): 0.4863, norm(x): 0.9293, norm(y): 0.9829, norm:477536.4688, tok/sec: 112606.75, flops:43.87, batch-reuse:1
@ 898 train 8.0039 , allloss: 15.4860, dt: 1160.67ms, fracRes: 0.4570, norm(attn): 0.3867, norm(output): 0.4824, norm(x): 0.9291, norm(y): 0.9827, norm:3453147.2500, tok/sec: 112927.57, flops:44.00, batch-reuse:1
@ 899 train 7.9542 , allloss: 15.1602, dt: 1177.46ms, fracRes: 0.4873, norm(attn): 0.3574, norm(output): 0.4395, norm(x): 0.8773, norm(y): 0.9826, norm:515207.2812, tok/sec: 111317.86, flops:43.37, batch-reuse:1
@ 900 train 8.0494 , allloss: 15.3674, dt: 1163.11ms, fracRes: 0.4709, norm(attn): 0.3984, norm(output): 0.5039, norm(x): 0.9304, norm(y): 0.9826, norm:181725296.0000, tok/sec: 112691.04, flops:43.90, batch-reuse:1
@ 901 train 7.8933 , allloss: 15.6587, dt: 1168.44ms, fracRes: 0.4857, norm(attn): 0.3789, norm(output): 0.4746, norm(x): 0.9421, norm(y): 0.9825, norm:5809175.0000, tok/sec: 112176.57, flops:43.70, batch-reuse:1
@ 902 train 7.9774 , allloss: 15.9519, dt: 1153.58ms, fracRes: 0.5248, norm(attn): 0.3398, norm(output): 0.4023, norm(x): 0.8770, norm(y): 0.9824, norm:92914600.0000, tok/sec: 113621.59, flops:44.27, batch-reuse:1
@ 903 train 8.1066 , allloss: 16.5739, dt: 1192.49ms, fracRes: 0.5417, norm(attn): 0.3242, norm(output): 0.3848, norm(x): 0.8865, norm(y): 0.9824, norm:26441621504.0000, tok/sec: 109914.25, flops:42.82, batch-reuse:1
@ 904 train 8.0225 , allloss: 16.8190, dt: 1176.25ms, fracRes: 0.5890, norm(attn): 0.2891, norm(output): 0.3438, norm(x): 0.9580, norm(y): 0.9824, norm:457376992.0000, tok/sec: 111432.07, flops:43.41, batch-reuse:1
@ 905 train 8.1155 , allloss: 16.9965, dt: 1166.39ms, fracRes: 0.5870, norm(attn): 0.2832, norm(output): 0.3477, norm(x): 0.9586, norm(y): 0.9824, norm:4085784320.0000, tok/sec: 112373.67, flops:43.78, batch-reuse:1
@ 906 train 8.0521 , allloss: 17.0665, dt: 1179.13ms, fracRes: 0.6112, norm(attn): 0.2695, norm(output): 0.3184, norm(x): 0.9912, norm(y): 0.9824, norm:10149271.0000, tok/sec: 111159.49, flops:43.31, batch-reuse:1
@ 907 train 8.0075 , allloss: 16.2641, dt: 1162.71ms, fracRes: 0.6456, norm(attn): 0.2422, norm(output): 0.2949, norm(x): 1.0668, norm(y): 0.9824, norm:3719102.2500, tok/sec: 112730.19, flops:43.92, batch-reuse:1
@ 908 train 8.1468 , allloss: 17.2313, dt: 1171.03ms, fracRes: 0.6447, norm(attn): 0.2559, norm(output): 0.3125, norm(x): 1.1016, norm(y): 0.9824, norm:716127.4375, tok/sec: 111928.63, flops:43.61, batch-reuse:1
@ 909 train 8.3356 , allloss: 17.5035, dt: 1172.46ms, fracRes: 0.6460, norm(attn): 0.2559, norm(output): 0.3008, norm(x): 1.1386, norm(y): 0.9823, norm:2718452.2500, tok/sec: 111792.43, flops:43.55, batch-reuse:1
@ 910 train 8.1395 , allloss: 18.2733, dt: 1183.54ms, fracRes: 0.6433, norm(attn): 0.2695, norm(output): 0.3242, norm(x): 1.1639, norm(y): 0.9823, norm:1791239.6250, tok/sec: 110745.59, flops:43.15, batch-reuse:1
@ 911 train 8.2313 , allloss: 18.4701, dt: 1175.63ms, fracRes: 0.6486, norm(attn): 0.2695, norm(output): 0.3301, norm(x): 1.2108, norm(y): 0.9823, norm:428088832.0000, tok/sec: 111490.60, flops:43.44, batch-reuse:1
@ 912 train 8.1745 , allloss: 17.9374, dt: 1154.47ms, fracRes: 0.6663, norm(attn): 0.2578, norm(output): 0.3281, norm(x): 1.3116, norm(y): 0.9823, norm:4391525.0000, tok/sec: 113534.49, flops:44.23, batch-reuse:1
@ 913 train 8.2402 , allloss: 20.5517, dt: 1175.06ms, fracRes: 0.6339, norm(attn): 0.3105, norm(output): 0.3691, norm(x): 1.3336, norm(y): 0.9823, norm:2025638.1250, tok/sec: 111544.80, flops:43.46, batch-reuse:1
@ 914 train 8.3285 , allloss: 22.4584, dt: 1194.47ms, fracRes: 0.5972, norm(attn): 0.3574, norm(output): 0.3906, norm(x): 1.2153, norm(y): 0.9821, norm:458893248.0000, tok/sec: 109732.75, flops:42.75, batch-reuse:1
@ 915 train 8.3954 , allloss: 24.9158, dt: 1199.03ms, fracRes: 0.5690, norm(attn): 0.4102, norm(output): 0.4375, norm(x): 1.2045, norm(y): 0.9821, norm:120620920.0000, tok/sec: 109315.41, flops:42.59, batch-reuse:1
@ 916 train 8.5568 , allloss: 30.7679, dt: 1202.71ms, fracRes: 0.4662, norm(attn): 0.5547, norm(output): 0.5078, norm(x): 1.0239, norm(y): 0.9818, norm:16923774.0000, tok/sec: 108980.41, flops:42.46, batch-reuse:1
@ 917 train 8.6754 , allloss: 32.0135, dt: 1196.96ms, fracRes: 0.4074, norm(attn): 0.6367, norm(output): 0.5234, norm(x): 0.8826, norm(y): 0.9814, norm:183656544.0000, tok/sec: 109504.12, flops:42.66, batch-reuse:1
@ 918 train 9.0764 , allloss: 36.7520, dt: 1194.40ms, fracRes: 0.3197, norm(attn): 0.7539, norm(output): 0.5781, norm(x): 0.8199, norm(y): 0.9809, norm:71445808.0000, tok/sec: 109738.36, flops:42.75, batch-reuse:1
@ 919 train 8.9873 , allloss: 38.4783, dt: 1195.24ms, fracRes: 0.2686, norm(attn): 0.7812, norm(output): 0.6289, norm(x): 0.8011, norm(y): 0.9807, norm:19881752.0000, tok/sec: 109661.59, flops:42.72, batch-reuse:1
@ 920 train 9.2232 , allloss: 42.0287, dt: 1177.11ms, fracRes: 0.2030, norm(attn): 0.8477, norm(output): 0.6875, norm(x): 0.8049, norm(y): 0.9802, norm:794922944.0000, tok/sec: 111350.78, flops:43.38, batch-reuse:1
@ 921 train 9.3815 , allloss: 41.9931, dt: 1163.24ms, fracRes: 0.1990, norm(attn): 0.8438, norm(output): 0.6797, norm(x): 0.7786, norm(y): 0.9801, norm:14212246.0000, tok/sec: 112678.29, flops:43.90, batch-reuse:1
@ 922 train 9.2567 , allloss: 44.0544, dt: 1179.56ms, fracRes: 0.1933, norm(attn): 0.8633, norm(output): 0.7031, norm(x): 0.8054, norm(y): 0.9799, norm:199187952.0000, tok/sec: 111119.23, flops:43.29, batch-reuse:1
@ 923 train 9.5705 , allloss: 44.8846, dt: 1170.60ms, fracRes: 0.1740, norm(attn): 0.8594, norm(output): 0.6914, norm(x): 0.7810, norm(y): 0.9797, norm:255762464.0000, tok/sec: 111970.21, flops:43.62, batch-reuse:1
@ 924 train 9.6667 , allloss: 54.8758, dt: 1161.37ms, fracRes: 0.0749, norm(attn): 0.9141, norm(output): 0.7891, norm(x): 0.7720, norm(y): 0.9786, norm:3374867968.0000, tok/sec: 112859.99, flops:43.97, batch-reuse:1
@ 925 train 10.5751 , allloss: 60.7325, dt: 1170.83ms, fracRes: 0.0340, norm(attn): 0.8633, norm(output): 0.8164, norm(x): 0.7792, norm(y): 0.9783, norm:513411200.0000, tok/sec: 111948.39, flops:43.62, batch-reuse:1
@ 926 train 10.3294 , allloss: 59.3462, dt: 1192.20ms, fracRes: 0.0347, norm(attn): 0.8672, norm(output): 0.7812, norm(x): 0.7521, norm(y): 0.9784, norm:18967682.0000, tok/sec: 109941.60, flops:42.83, batch-reuse:1
@ 927 train 9.5936 , allloss: 52.8318, dt: 1184.80ms, fracRes: 0.0793, norm(attn): 0.8516, norm(output): 0.8125, norm(x): 0.8137, norm(y): 0.9791, norm:1006824832.0000, tok/sec: 110628.05, flops:43.10, batch-reuse:1
@ 928 train 8.9887 , allloss: 48.7065, dt: 1195.67ms, fracRes: 0.1663, norm(attn): 0.8672, norm(output): 0.9102, norm(x): 1.0281, norm(y): 0.9803, norm:1827186432.0000, tok/sec: 109622.01, flops:42.71, batch-reuse:1
@ 929 train 8.5930 , allloss: 45.5763, dt: 1154.29ms, fracRes: 0.2494, norm(attn): 0.7852, norm(output): 1.0234, norm(x): 1.3055, norm(y): 0.9809, norm:350379584.0000, tok/sec: 113552.53, flops:44.24, batch-reuse:1
@ 930 train 8.3030 , allloss: 40.9992, dt: 1164.95ms, fracRes: 0.3371, norm(attn): 0.7227, norm(output): 1.0000, norm(x): 1.4899, norm(y): 0.9811, norm:69019983872.0000, tok/sec: 112512.63, flops:43.83, batch-reuse:1
@ 931 train 8.2954 , allloss: 38.7797, dt: 1167.08ms, fracRes: 0.3617, norm(attn): 0.6836, norm(output): 1.0234, norm(x): 1.6118, norm(y): 0.9813, norm:70946864.0000, tok/sec: 112307.58, flops:43.76, batch-reuse:1
@ 932 train 8.1327 , allloss: 38.7225, dt: 1154.16ms, fracRes: 0.3657, norm(attn): 0.6523, norm(output): 1.0234, norm(x): 1.6614, norm(y): 0.9814, norm:1000625664.0000, tok/sec: 113565.29, flops:44.25, batch-reuse:1
@ 933 train 8.1671 , allloss: 36.1835, dt: 1166.29ms, fracRes: 0.3543, norm(attn): 0.6562, norm(output): 1.0781, norm(x): 1.7376, norm(y): 0.9814, norm:852699264.0000, tok/sec: 112383.48, flops:43.78, batch-reuse:1
@ 934 train 8.0829 , allloss: 34.8047, dt: 1157.10ms, fracRes: 0.3887, norm(attn): 0.6094, norm(output): 0.9688, norm(x): 1.7059, norm(y): 0.9813, norm:35851677696.0000, tok/sec: 113276.60, flops:44.13, batch-reuse:1
@ 935 train 8.1541 , allloss: 35.4977, dt: 1153.28ms, fracRes: 0.3491, norm(attn): 0.6211, norm(output): 1.0234, norm(x): 1.5910, norm(y): 0.9814, norm:744072384.0000, tok/sec: 113651.14, flops:44.28, batch-reuse:1
@ 936 train 8.2225 , allloss: 34.2553, dt: 1214.38ms, fracRes: 0.3463, norm(attn): 0.6289, norm(output): 1.0234, norm(x): 1.5264, norm(y): 0.9813, norm:12926922752.0000, tok/sec: 107933.48, flops:42.05, batch-reuse:1
@ 937 train 8.3234 , allloss: 33.7970, dt: 1191.06ms, fracRes: 0.3765, norm(attn): 0.5898, norm(output): 0.9414, norm(x): 1.5657, norm(y): 0.9813, norm:22266824704.0000, tok/sec: 110046.88, flops:42.87, batch-reuse:1
@ 938 train 8.3037 , allloss: 30.6977, dt: 1184.13ms, fracRes: 0.3835, norm(attn): 0.5391, norm(output): 0.8633, norm(x): 1.5489, norm(y): 0.9814, norm:91735703552.0000, tok/sec: 110690.98, flops:43.13, batch-reuse:1
@ 939 train 8.4180 , allloss: 31.8877, dt: 1173.84ms, fracRes: 0.3777, norm(attn): 0.5469, norm(output): 0.8633, norm(x): 1.5075, norm(y): 0.9814, norm:315730176.0000, tok/sec: 111660.91, flops:43.50, batch-reuse:1
@ 940 train 8.6994 , allloss: 29.4597, dt: 1175.38ms, fracRes: 0.3966, norm(attn): 0.5195, norm(output): 0.7773, norm(x): 1.4236, norm(y): 0.9814, norm:59957448704.0000, tok/sec: 111514.48, flops:43.45, batch-reuse:1
@ 941 train 8.5584 , allloss: 27.4260, dt: 1175.33ms, fracRes: 0.4149, norm(attn): 0.4941, norm(output): 0.7656, norm(x): 1.4484, norm(y): 0.9815, norm:5294331392.0000, tok/sec: 111518.90, flops:43.45, batch-reuse:1
@ 942 train 8.4080 , allloss: 27.7481, dt: 1174.54ms, fracRes: 0.4098, norm(attn): 0.4688, norm(output): 0.6953, norm(x): 1.4342, norm(y): 0.9815, norm:33962366976.0000, tok/sec: 111594.41, flops:43.48, batch-reuse:1
@ 943 train 8.6212 , allloss: 27.3815, dt: 1202.79ms, fracRes: 0.4318, norm(attn): 0.4688, norm(output): 0.7305, norm(x): 1.4823, norm(y): 0.9816, norm:659916521472.0000, tok/sec: 108973.41, flops:42.46, batch-reuse:1
@ 944 train 8.9146 , allloss: 25.0728, dt: 1199.77ms, fracRes: 0.4504, norm(attn): 0.4199, norm(output): 0.6094, norm(x): 1.4189, norm(y): 0.9815, norm:10406506496.0000, tok/sec: 109247.35, flops:42.56, batch-reuse:1
@ 945 train 8.6312 , allloss: 25.1518, dt: 1196.19ms, fracRes: 0.4927, norm(attn): 0.4082, norm(output): 0.6055, norm(x): 1.4955, norm(y): 0.9817, norm:8942000128.0000, tok/sec: 109574.12, flops:42.69, batch-reuse:1
@ 946 train 8.3465 , allloss: 24.7571, dt: 1177.44ms, fracRes: 0.5321, norm(attn): 0.3789, norm(output): 0.5977, norm(x): 1.6280, norm(y): 0.9820, norm:3070349824.0000, tok/sec: 111319.82, flops:43.37, batch-reuse:1
@ 947 train 8.7306 , allloss: 25.2256, dt: 1151.87ms, fracRes: 0.5013, norm(attn): 0.3945, norm(output): 0.6094, norm(x): 1.5624, norm(y): 0.9817, norm:6343558144.0000, tok/sec: 113790.97, flops:44.33, batch-reuse:1
@ 948 train 8.5291 , allloss: 25.0345, dt: 1162.62ms, fracRes: 0.5204, norm(attn): 0.3945, norm(output): 0.6328, norm(x): 1.6287, norm(y): 0.9819, norm:83991519232.0000, tok/sec: 112738.88, flops:43.92, batch-reuse:1
@ 949 train 8.6314 , allloss: 25.6700, dt: 1158.43ms, fracRes: 0.5065, norm(attn): 0.4023, norm(output): 0.6328, norm(x): 1.6252, norm(y): 0.9819, norm:7751581184.0000, tok/sec: 113146.51, flops:44.08, batch-reuse:1
@ 950 train 8.4295 , allloss: 24.9632, dt: 1167.81ms, fracRes: 0.5378, norm(attn): 0.3770, norm(output): 0.5898, norm(x): 1.5084, norm(y): 0.9819, norm:68396400.0000, tok/sec: 112237.74, flops:43.73, batch-reuse:1
@ 951 train 8.4058 , allloss: 24.1451, dt: 1174.88ms, fracRes: 0.5845, norm(attn): 0.3379, norm(output): 0.5547, norm(x): 1.7325, norm(y): 0.9821, norm:1717405568.0000, tok/sec: 111561.98, flops:43.46, batch-reuse:1
@ 952 train 8.4878 , allloss: 25.4497, dt: 1175.86ms, fracRes: 0.5534, norm(attn): 0.3594, norm(output): 0.6094, norm(x): 1.7060, norm(y): 0.9821, norm:4153388544.0000, tok/sec: 111469.49, flops:43.43, batch-reuse:1
@ 953 train 8.7279 , allloss: 24.8605, dt: 1158.76ms, fracRes: 0.5245, norm(attn): 0.3652, norm(output): 0.6016, norm(x): 1.6552, norm(y): 0.9819, norm:165992848.0000, tok/sec: 113113.96, flops:44.07, batch-reuse:1
@ 954 train 8.3337 , allloss: 24.9446, dt: 1187.06ms, fracRes: 0.5492, norm(attn): 0.3613, norm(output): 0.6055, norm(x): 1.7116, norm(y): 0.9820, norm:452673632.0000, tok/sec: 110417.77, flops:43.02, batch-reuse:1
@ 955 train 8.3805 , allloss: 26.3470, dt: 1188.54ms, fracRes: 0.5338, norm(attn): 0.3828, norm(output): 0.6602, norm(x): 1.6349, norm(y): 0.9820, norm:58743398400.0000, tok/sec: 110280.04, flops:42.97, batch-reuse:1
@ 956 train 8.3557 , allloss: 26.3859, dt: 1183.73ms, fracRes: 0.5446, norm(attn): 0.3848, norm(output): 0.6562, norm(x): 1.6533, norm(y): 0.9820, norm:2559079680.0000, tok/sec: 110727.50, flops:43.14, batch-reuse:1
@ 957 train 8.6000 , allloss: 26.3965, dt: 1203.52ms, fracRes: 0.5414, norm(attn): 0.3711, norm(output): 0.6211, norm(x): 1.6622, norm(y): 0.9819, norm:50599768064.0000, tok/sec: 108907.65, flops:42.43, batch-reuse:1
@ 958 train 8.5031 , allloss: 26.6111, dt: 1200.20ms, fracRes: 0.5389, norm(attn): 0.3867, norm(output): 0.6641, norm(x): 1.6430, norm(y): 0.9821, norm:129342616.0000, tok/sec: 109208.31, flops:42.55, batch-reuse:1
@ 959 train 8.4008 , allloss: 24.8418, dt: 1172.23ms, fracRes: 0.5707, norm(attn): 0.3613, norm(output): 0.6211, norm(x): 1.6245, norm(y): 0.9821, norm:114531528.0000, tok/sec: 111814.05, flops:43.56, batch-reuse:1
@ 960 train 8.3844 , allloss: 24.1621, dt: 1185.15ms, fracRes: 0.6002, norm(attn): 0.3418, norm(output): 0.5703, norm(x): 1.5467, norm(y): 0.9821, norm:17447350272.0000, tok/sec: 110594.87, flops:43.09, batch-reuse:1
@ 961 train 8.5978 , allloss: 24.7367, dt: 1176.80ms, fracRes: 0.5811, norm(attn): 0.3809, norm(output): 0.6367, norm(x): 1.5171, norm(y): 0.9821, norm:18680482.0000, tok/sec: 111379.74, flops:43.39, batch-reuse:1
@ 962 train 8.3190 , allloss: 25.1323, dt: 1182.49ms, fracRes: 0.6276, norm(attn): 0.3555, norm(output): 0.6172, norm(x): 1.5857, norm(y): 0.9823, norm:200607408.0000, tok/sec: 110844.12, flops:43.18, batch-reuse:1
@ 963 train 8.5366 , allloss: 26.5865, dt: 1179.25ms, fracRes: 0.5913, norm(attn): 0.4102, norm(output): 0.6758, norm(x): 1.3978, norm(y): 0.9820, norm:41273328.0000, tok/sec: 111148.93, flops:43.30, batch-reuse:1
@ 964 train 8.7363 , allloss: 34.3562, dt: 1202.70ms, fracRes: 0.4839, norm(attn): 0.5781, norm(output): 0.9805, norm(x): 1.5501, norm(y): 0.9821, norm:5604083200.0000, tok/sec: 108981.86, flops:42.46, batch-reuse:1
@ 965 train 9.3085 , allloss: 35.1375, dt: 1185.74ms, fracRes: 0.4207, norm(attn): 0.6328, norm(output): 1.0703, norm(x): 1.4742, norm(y): 0.9818, norm:954614592.0000, tok/sec: 110540.45, flops:43.07, batch-reuse:1
@ 966 train 8.9770 , allloss: 34.8232, dt: 1181.56ms, fracRes: 0.4304, norm(attn): 0.6445, norm(output): 1.0469, norm(x): 1.5886, norm(y): 0.9816, norm:15880378.0000, tok/sec: 110931.69, flops:43.22, batch-reuse:1
@ 967 train 8.7791 , allloss: 37.0586, dt: 1175.53ms, fracRes: 0.4171, norm(attn): 0.6797, norm(output): 1.1641, norm(x): 1.7364, norm(y): 0.9816, norm:800936064.0000, tok/sec: 111499.94, flops:43.44, batch-reuse:1
@ 968 train 8.6047 , allloss: 39.6161, dt: 1193.02ms, fracRes: 0.3523, norm(attn): 0.7109, norm(output): 1.2891, norm(x): 1.8677, norm(y): 0.9818, norm:1379340800.0000, tok/sec: 109865.40, flops:42.80, batch-reuse:1
@ 969 train 8.5088 , allloss: 37.7816, dt: 1153.30ms, fracRes: 0.4010, norm(attn): 0.7031, norm(output): 1.4922, norm(x): 2.4624, norm(y): 0.9825, norm:708747136.0000, tok/sec: 113649.50, flops:44.28, batch-reuse:1
@ 970 train 8.4576 , allloss: 32.3178, dt: 1171.74ms, fracRes: 0.5235, norm(attn): 0.5977, norm(output): 1.3203, norm(x): 2.8564, norm(y): 0.9826, norm:1933693.6250, tok/sec: 111861.22, flops:43.58, batch-reuse:1
@ 971 train 8.2140 , allloss: 28.3415, dt: 1189.75ms, fracRes: 0.6025, norm(attn): 0.4785, norm(output): 1.0312, norm(x): 2.8149, norm(y): 0.9827, norm:8758463.0000, tok/sec: 110167.27, flops:42.92, batch-reuse:1
@ 972 train 8.1618 , allloss: 24.2065, dt: 1164.45ms, fracRes: 0.6608, norm(attn): 0.4102, norm(output): 0.8672, norm(x): 2.4281, norm(y): 0.9828, norm:363914688.0000, tok/sec: 112561.46, flops:43.85, batch-reuse:1
@ 973 train 8.0844 , allloss: 20.3529, dt: 1189.10ms, fracRes: 0.7136, norm(attn): 0.3750, norm(output): 0.8047, norm(x): 2.6640, norm(y): 0.9829, norm:8977.2090, tok/sec: 110227.53, flops:42.94, batch-reuse:1
@ 974 train 8.1118 , allloss: 19.2201, dt: 1182.49ms, fracRes: 0.7592, norm(attn): 0.3242, norm(output): 0.6719, norm(x): 2.7678, norm(y): 0.9830, norm:80988.7344, tok/sec: 110844.06, flops:43.18, batch-reuse:1
@ 975 train 8.0781 , allloss: 18.9749, dt: 1166.39ms, fracRes: 0.7742, norm(attn): 0.3242, norm(output): 0.6367, norm(x): 2.9116, norm(y): 0.9831, norm:41469.4922, tok/sec: 112373.83, flops:43.78, batch-reuse:1
@ 976 train 7.9616 , allloss: 20.2775, dt: 1182.03ms, fracRes: 0.7611, norm(attn): 0.3613, norm(output): 0.7422, norm(x): 3.3145, norm(y): 0.9831, norm:11470230.0000, tok/sec: 110886.78, flops:43.20, batch-reuse:1
@ 977 train 7.9404 , allloss: 22.1443, dt: 1197.13ms, fracRes: 0.7541, norm(attn): 0.4062, norm(output): 0.8633, norm(x): 4.0598, norm(y): 0.9831, norm:42147.5352, tok/sec: 109488.57, flops:42.66, batch-reuse:1
@ 978 train 7.9131 , allloss: 22.4725, dt: 1154.16ms, fracRes: 0.7487, norm(attn): 0.4297, norm(output): 0.9414, norm(x): 4.2578, norm(y): 0.9831, norm:8166.5127, tok/sec: 113564.89, flops:44.24, batch-reuse:1
@ 979 train 7.9155 , allloss: 22.9092, dt: 1156.82ms, fracRes: 0.7318, norm(attn): 0.4688, norm(output): 1.0469, norm(x): 4.3363, norm(y): 0.9832, norm:11129.7422, tok/sec: 113303.82, flops:44.14, batch-reuse:1
