Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.00015
Experiment name: 17-1minus-mlpconcat-crazystuff-8
MLPSCALE: 4
Experiment description: 
```
Transformer, max LR 0.00015 n_layer 12
Setting:
==machine code======
        self.compiler = BenCompilerNoOp(config)
        self.execute = BenExecute(config)
==machine modules======
        self.compiler = BenCompilerNoOp(config)
        self.execute = BenExecute(config)
==block logic======
        y = self.ln_1(x)
        attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
        program = self.compiler(y)
        machineOutput = self.execute(program, attn)
        newx = xWeights * x + (1 - xWeights) * machineOutput
==loss computation======
                x, metadata = block(x,print_weights=print_weights,step=i)
                _x_total = x
                _in = x.detach()
                _x, _ = block(_in,print_weights=False) # Do again... lol
                _xtraloss = _xtraloss + (1 - F.cosine_similarity(_x, _in, dim=-1).mean())
========
VALUEMATRIX=True
REUSE_WEIGHTS=True
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True
```
![caption](img/17-1minus-mlpconcat-crazystuff-8.jpg)

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 6, with 48,857,088 parameters
num non-decayed parameter tensors: 6, with 6,912 parameters
@ 0 train 10.9941 , allloss: 18.4287, dt: 2798.18ms, fracRes: 0.0063, norm(attn): 0.0330, norm(output): 0.0737, norm(x): 0.0699, norm(y): 0.9993, norm:30.8862, tok/sec: 46841.93, flops:19.27, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5273, 0.4746, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3398, 0.2539, 0.4062, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2178, 0.3047, 0.2480, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.1699, 0.1289, 0.1885, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.1709, 0.1855, 0.1357, 0.2090, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1211, 0.1143, 0.1426, 0.2812, 0.0967, 0.1543, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.1475, 0.1211, 0.0918, 0.1621, 0.0913, 0.1729, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.1328, 0.1177, 0.0991, 0.0435, 0.0864, 0.2051, 0.1123, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0630, 0.0540, 0.1206, 0.1377, 0.1445, 0.0752, 0.0889, 0.1377, 0.0869, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.0903, 0.0820, 0.0737, 0.1094, 0.1079, 0.1094, 0.0981, 0.1104, 0.0747, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0903, 0.0508, 0.0884, 0.1050, 0.0535, 0.0981, 0.1069, 0.1118, 0.0854, 0.0728, 0.0588, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0515, 0.1221, 0.0830, 0.1084, 0.1299, 0.0728, 0.0537, 0.0669, 0.0457, 0.0625, 0.0737, 0.0564, 0.0000, 0.0000],
        [0.0659, 0.1172, 0.0869, 0.0625, 0.0408, 0.0466, 0.0947, 0.0605, 0.0608, 0.1357, 0.0635, 0.0552, 0.0442, 0.0654, 0.0000],
        [0.0669, 0.0408, 0.0747, 0.0708, 0.0894, 0.0977, 0.0461, 0.0557, 0.0457, 0.0505, 0.0737, 0.0889, 0.0635, 0.0464, 0.0889]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0056, -0.0140,  0.0082,  ...,  0.0019, -0.0126,  0.0129],
        [ 0.0031, -0.0157,  0.0132,  ..., -0.0063, -0.0182,  0.0439],
        [-0.0079,  0.0013, -0.0266,  ...,  0.0134, -0.0191, -0.0119],
        ...,
        [ 0.0188,  0.0162, -0.0132,  ..., -0.0101, -0.0268, -0.0089],
        [ 0.0027,  0.0122,  0.0038,  ...,  0.0007, -0.0321, -0.0090],
        [-0.0097,  0.0106, -0.0284,  ...,  0.0011, -0.0199,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3281, -0.2988,  0.5391, -0.1025,  0.5469,  0.8711, -0.1108,  0.6211, -0.0262, -0.7227,  0.6367,  0.2363, -0.1504,  0.2910,  0.0344, -0.7383,  0.6680, -0.1699,  0.2949, -0.9062, -0.1533,  0.7852,  1.0938, -0.3438,  0.3496, -0.4102,  0.3848,  0.4277,  0.1611, -0.5352, -0.6172, -0.1582,
         0.6914, -0.5352,  0.0130,  0.2031,  1.0234,  0.8867, -0.3574,  0.3516, -0.1826, -0.2061, -0.5781, -0.0640,  0.1914, -0.1406,  0.8984, -0.7305,  0.2812,  0.5859,  0.1260, -0.5273,  0.2236,  0.6211, -1.1719, -0.4629, -0.5703,  0.8477,  0.0342,  0.1147, -0.3750, -0.1602,  0.1104,  0.7031],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0588,      0.0150,      0.0098,  ...,      0.0075,      0.0010,     -0.0024],
        [    -0.0128,     -0.0071,     -0.0235,  ...,     -0.0218,     -0.0018,      0.0032],
        [     0.0509,      0.0059,     -0.0286,  ...,      0.0100,      0.0102,     -0.0155],
        ...,
        [    -0.0120,     -0.0258,      0.0100,  ...,     -0.0283,     -0.0011,      0.0171],
        [     0.0112,     -0.0021,     -0.0250,  ...,      0.0000,     -0.0164,      0.0246],
        [    -0.0089,     -0.0228,     -0.0032,  ...,     -0.0074,      0.0328,     -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0103, -0.0288,  0.1494, -0.9531,  0.6367, -0.6953, -0.4961, -0.2754,  0.1523, -0.1196,  0.8359, -0.5508, -0.5508, -0.0874,  0.6133, -0.3867,  0.3281, -0.3184, -0.5664, -0.5273, -0.3047, -0.4570, -0.2988, -0.4180,  0.3770,  0.3066,  0.5625,  0.3066,  0.7695,  0.2080,  0.2188, -0.2520,
        -0.7773,  0.2871,  1.4688,  0.1328,  0.8398,  0.2754,  0.8672,  1.0547,  0.3887, -0.3027, -0.2461, -0.6523, -0.2793,  0.0767, -0.2676,  0.3184, -0.2949,  0.2168,  1.1328,  0.2061, -0.1006,  0.6914, -0.5664,  0.6016, -0.6797, -0.1270, -0.7070,  0.1235, -0.0259,  0.3457, -0.5117,  0.0176],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1030,  0.0767,  0.2637, -0.1338, -0.2227, -0.0684,  0.1953,  0.2441, -0.1187,  0.0718, -0.1982, -0.1196,  0.5039,  0.2656],
        [ 0.0000, -0.2949,  0.1807,  0.4062, -0.3984,  0.1768, -0.3887, -0.2598, -0.3184,  0.1406,  0.6250, -0.1099, -0.2656, -0.4043,  0.2051],
        [ 0.0000,  0.3340,  0.1318,  0.0598,  0.1592,  0.3242, -0.3262, -0.5234, -0.0342, -0.0752,  0.3633,  0.6680, -0.1396, -0.3789,  0.0400],
        [ 0.0000, -0.1885, -0.4629, -0.0840,  0.4023, -0.2412, -0.1963, -0.0703, -0.1973,  0.1143, -0.1758, -0.0791,  0.0197, -0.0339, -0.3027],
        [ 0.0000,  0.1807,  0.2578, -0.0547,  0.3809,  0.0845, -0.2871, -0.1670,  0.1260, -0.0366, -0.1904, -0.1738, -0.2090,  0.2217, -0.0330],
        [ 0.0000, -0.0576,  0.1680,  0.8477, -0.2227,  0.2432, -0.3027, -0.1602, -0.3105, -0.1934, -0.2520,  0.5820, -0.4766, -0.1680, -0.1953],
        [ 0.0000,  0.2217,  0.0289, -0.2480,  0.3164, -0.2559,  0.3848, -0.2031, -0.0182,  0.4141, -0.1914, -0.4297,  0.5391,  0.5977, -0.3105],
        [ 0.0000,  0.2373,  0.1182, -0.0530, -0.8750, -0.1875,  0.6758,  0.0742, -0.0549,  0.2871,  0.1553, -0.0240, -0.3203,  0.0669,  0.5859],
        [ 0.0000, -0.3711, -0.5273,  0.2793,  0.4082,  0.4609, -0.1973, -0.0283,  0.4141, -0.0479, -0.2539,  0.0571,  0.3379,  0.9609, -0.4277],
        [ 0.0000, -0.0708, -0.1641, -0.2734,  0.1221,  0.1089,  0.1216,  0.0110,  0.1309, -0.2617, -0.7188, -0.2422, -0.3145,  0.1079,  0.0977],
        [ 0.0000,  0.1387, -0.4355,  0.1182,  0.2891, -0.3848,  0.2236,  0.3066,  0.3535,  0.0850, -0.0781, -0.2871,  0.2949,  0.0237, -0.0471],
        [ 0.0000, -0.3418,  0.5195,  0.1318,  0.4023,  0.5859,  0.0037, -0.3008, -0.0825, -0.4629, -0.1494,  0.0167, -0.2500, -0.1216,  0.1221],
        [ 0.0000,  0.5781,  0.2793, -0.0500, -0.4785, -0.3438,  0.3652, -0.0859, -0.0806,  0.7227, -0.0364, -0.1787, -0.4004, -0.0094,  0.1494],
        [ 0.0000, -0.4961,  0.1084,  0.0554,  0.2852,  0.3770, -0.3730, -0.1865, -0.3867, -0.2852,  0.0977,  0.2832, -0.0557, -0.3691,  0.2793]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5400],
        [0.3397],
        [0.2392],
        [0.1842],
        [0.1647],
        [0.1352],
        [0.1226],
        [0.1066],
        [0.0956],
        [0.0893],
        [0.0804],
        [0.0724],
        [0.0675],
        [0.0639]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5469, 0.4531, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4688, 0.3340, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3926, 0.1592, 0.1953, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2061, 0.1523, 0.1973, 0.1680, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.1611, 0.1572, 0.2422, 0.1270, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.1108, 0.1602, 0.1523, 0.1826, 0.1494, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.0806, 0.0811, 0.1631, 0.1602, 0.1504, 0.1162, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.1060, 0.0737, 0.1445, 0.1216, 0.0967, 0.1406, 0.0835, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.0571, 0.1514, 0.0986, 0.1069, 0.0986, 0.0894, 0.1006, 0.1172, 0.0669, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.0762, 0.0596, 0.0820, 0.1348, 0.0679, 0.0835, 0.0786, 0.0737, 0.1396, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0569, 0.1289, 0.0654, 0.0728, 0.0549, 0.0928, 0.0762, 0.1060, 0.0728, 0.0713, 0.1064, 0.0957, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0479, 0.1030, 0.0928, 0.0825, 0.1187, 0.1050, 0.0654, 0.0674, 0.0757, 0.0432, 0.0508, 0.0679, 0.0000, 0.0000],
        [0.0752, 0.0938, 0.0669, 0.0601, 0.1147, 0.0613, 0.0486, 0.0554, 0.0791, 0.0547, 0.0591, 0.0718, 0.0781, 0.0811, 0.0000],
        [0.0591, 0.0654, 0.0342, 0.0515, 0.0732, 0.0615, 0.0603, 0.0554, 0.0498, 0.0796, 0.0840, 0.1514, 0.0510, 0.0552, 0.0679]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0056, -0.0140,  0.0082,  ...,  0.0019, -0.0126,  0.0129],
        [ 0.0031, -0.0157,  0.0132,  ..., -0.0063, -0.0182,  0.0439],
        [-0.0079,  0.0013, -0.0266,  ...,  0.0134, -0.0191, -0.0119],
        ...,
        [ 0.0188,  0.0162, -0.0132,  ..., -0.0101, -0.0268, -0.0089],
        [ 0.0027,  0.0122,  0.0038,  ...,  0.0007, -0.0321, -0.0090],
        [-0.0097,  0.0106, -0.0284,  ...,  0.0011, -0.0199,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([-0.4824, -0.7070, -0.4141,  0.2188, -0.6094, -0.2637, -0.3281,  0.5547, -0.6758, -0.4844, -1.4922, -0.2637, -0.0260,  0.1338, -0.4473, -0.2266,  1.1875, -0.4629, -0.2578, -0.5195,  0.9141,  0.8555, -0.0757,  0.9219,  0.5898,  0.3359, -0.8516, -0.6211, -0.7852,  0.0757, -0.6875,  0.5312,
         0.0080,  0.1201,  0.5625, -0.1504, -0.1611, -0.6211,  0.3301, -0.1836,  0.0559, -0.0052,  0.6875, -0.1050, -1.0391, -0.6523, -0.6523,  0.3359, -0.4434,  0.4121, -0.3789, -0.2715,  0.0525,  0.0684,  0.1279,  0.2334, -0.0535, -0.7734, -0.2021,  0.1934,  0.0991, -0.0537,  0.0620, -0.8750],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0588,      0.0150,      0.0098,  ...,      0.0075,      0.0010,     -0.0024],
        [    -0.0128,     -0.0071,     -0.0235,  ...,     -0.0218,     -0.0018,      0.0032],
        [     0.0509,      0.0059,     -0.0286,  ...,      0.0100,      0.0102,     -0.0155],
        ...,
        [    -0.0120,     -0.0258,      0.0100,  ...,     -0.0283,     -0.0011,      0.0171],
        [     0.0112,     -0.0021,     -0.0250,  ...,      0.0000,     -0.0164,      0.0246],
        [    -0.0089,     -0.0228,     -0.0032,  ...,     -0.0074,      0.0328,     -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6016, -0.7148, -0.1523, -0.8359, -0.1826,  0.2910,  0.8633, -0.5117, -0.1187, -0.2539, -0.3535,  1.4688,  1.0469,  0.3184, -0.1953,  0.3203,  0.2197,  0.1699,  0.5273, -0.0977,  0.3770,  0.5352,  1.4062, -0.4297, -0.2852, -0.3672, -0.1826, -0.0303, -0.0237,  1.2734, -0.9336, -0.6914,
        -1.1016, -0.4316, -0.3281,  0.4414,  0.3750, -0.2871, -0.0449,  0.0544,  0.3555,  0.6562, -0.5156,  0.8984, -0.0854,  0.5469, -0.5273,  0.9805,  0.4902,  0.5742, -0.8164,  0.7539,  0.0991,  0.0869, -0.7539, -0.6914, -0.3379, -0.1934, -0.2598, -0.5117,  0.1406,  0.4922, -0.2656, -0.2715],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.1865,      0.1089,     -0.1875,     -0.3496,      0.0008,     -0.0522,      0.2695,     -0.2539,      0.2324,      0.1089,      0.2305,     -0.1099,     -0.4453,     -0.0060],
        [     0.0000,     -0.3398,     -0.8555,     -0.2988,     -0.0894,     -0.2275,     -0.5586,     -0.1196,     -0.4062,      0.2148,      0.2754,      0.5234,     -0.3750,     -0.5312,      0.1260],
        [     0.0000,     -0.9062,     -0.7031,     -0.4434,     -0.0601,      0.2891,     -0.3496,     -0.1426,     -0.2988,      0.1099,     -0.3516,      0.3125,      0.2100,     -0.0786,     -0.0444],
        [     0.0000,     -0.2988,     -0.0432,     -0.2002,      0.2930,      0.1650,     -0.3828,      0.1377,      0.5234,      0.0664,     -0.1104,      0.1406,     -0.0972,      0.0801,     -0.0874],
        [     0.0000,      0.0101,     -0.0129,      0.4180,     -0.2295,     -0.0352,     -0.4746,      0.1875,     -0.4883,     -0.2715,     -0.3477,      0.1914,     -0.0645,     -0.1680,      0.1875],
        [     0.0000,     -0.2656,      0.1050,      0.0513,      0.2324,      0.0315,     -0.3613,     -0.1357,     -0.3281,      0.3672,     -0.5625,     -0.0304,     -0.2910,     -0.3438,      0.2168],
        [     0.0000,     -0.3398,     -0.3301,      0.3633,      0.3438,      0.2812,      0.0281,      0.1855,     -0.1875,      0.1582,      0.1074,     -0.1040,     -0.1069,     -0.0498,      0.3477],
        [     0.0000,      0.0605,     -0.2988,      0.3711,      0.1992,     -0.0286,      0.3438,     -0.1758,      0.2930,      0.1001,     -0.2178,      0.5156,     -0.3340,      0.1475,     -0.4336],
        [     0.0000,     -0.6875,      0.2891,     -0.1387,     -0.0571,     -0.1416,     -0.2373,     -0.1211,      0.0311,     -0.5312,     -0.0586,     -0.3203,      0.3418,      0.1846,     -0.1216],
        [     0.0000,     -0.3164,     -0.5625,     -0.2422,      0.2539,     -0.4297,     -0.2227,     -0.2832,     -0.3516,      0.2891,     -0.0378,      0.4062,     -0.2715,     -0.0957,     -0.2891],
        [     0.0000,      0.8164,      0.1387,      0.2441,     -0.0364,      0.4902,      0.2891,      0.6211,      0.2432,      0.2266,      0.6250,      0.5195,      0.0815,      0.4727,      0.2656],
        [     0.0000,     -0.5156,      0.2520,      0.1494,      0.0317,      0.3926,      0.2695,     -0.2051,     -0.1709,     -0.0557,     -0.6133,     -0.4531,     -0.1631,     -0.2139,      0.2891],
        [     0.0000,      0.2217,     -0.1162,     -0.2246,      0.4199,     -0.2051,     -0.4355,     -0.3066,      0.0515,     -0.3184,     -0.2402,     -0.0488,      0.0398,      0.0752,     -0.3320],
        [     0.0000,      0.1006,     -0.5469,     -0.1348,      0.2148,      0.0425,      0.0223,     -0.0613,     -0.1689,      0.3008,      0.3516,      0.9414,     -0.1445,     -0.0664,      0.1436]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5194],
        [0.3429],
        [0.2655],
        [0.2027],
        [0.1639],
        [0.1277],
        [0.1176],
        [0.1056],
        [0.1071],
        [0.0928],
        [0.0859],
        [0.0772],
        [0.0689],
        [0.0647]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4570, 0.5430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4062, 0.3047, 0.2871, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.3262, 0.1836, 0.2344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2119, 0.1992, 0.1992, 0.1846, 0.2051, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1484, 0.1748, 0.2236, 0.1494, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1768, 0.2061, 0.1074, 0.0840, 0.1455, 0.1436, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.1602, 0.1055, 0.0859, 0.1260, 0.1069, 0.1406, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1055, 0.1611, 0.0835, 0.1738, 0.1099, 0.0723, 0.1108, 0.0874, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.0664, 0.0869, 0.1089, 0.1030, 0.0830, 0.1152, 0.0713, 0.1162, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.1216, 0.0684, 0.0718, 0.0952, 0.0908, 0.1235, 0.0635, 0.0845, 0.0811, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0610, 0.0659, 0.0723, 0.0884, 0.0593, 0.1934, 0.1211, 0.0469, 0.1060, 0.0635, 0.0442, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0806, 0.0840, 0.0752, 0.0952, 0.0698, 0.0908, 0.0820, 0.0718, 0.0957, 0.0679, 0.0522, 0.0581, 0.0000, 0.0000],
        [0.0732, 0.0898, 0.0762, 0.0884, 0.0889, 0.0718, 0.0889, 0.0684, 0.0586, 0.0791, 0.0669, 0.0311, 0.0703, 0.0486, 0.0000],
        [0.0688, 0.0723, 0.0537, 0.0522, 0.0869, 0.0623, 0.0718, 0.0747, 0.0598, 0.0728, 0.0776, 0.0527, 0.0684, 0.0554, 0.0708]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0056, -0.0140,  0.0082,  ...,  0.0019, -0.0126,  0.0129],
        [ 0.0031, -0.0157,  0.0132,  ..., -0.0063, -0.0182,  0.0439],
        [-0.0079,  0.0013, -0.0266,  ...,  0.0134, -0.0191, -0.0119],
        ...,
        [ 0.0188,  0.0162, -0.0132,  ..., -0.0101, -0.0268, -0.0089],
        [ 0.0027,  0.0122,  0.0038,  ...,  0.0007, -0.0321, -0.0090],
        [-0.0097,  0.0106, -0.0284,  ...,  0.0011, -0.0199,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4492,  0.2051, -0.6523,  0.0430, -0.1089, -0.8555,  1.2422,  0.2773, -0.5039, -0.6719, -0.2402,  0.2695,  0.0225, -1.0156, -0.4707, -0.4609, -0.4629, -0.5430,  0.7773, -0.5195,  0.3457, -0.3418, -0.2061,  1.0391,  0.2617,  0.0317, -0.4160, -0.5039, -0.1377, -0.5195, -0.1040,  0.1426,
         0.2715, -0.0703,  0.4375, -0.2754,  0.6328,  0.6758,  0.4707,  0.4785,  0.0306,  0.1475,  0.0732,  0.0688, -0.8516, -0.0791,  0.4121,  0.0327, -0.2188, -0.1338, -0.1689,  0.8008, -0.1328, -0.7656,  0.2871, -0.7773, -0.1045, -0.0121,  0.4219, -0.8906, -0.4238,  1.3438,  0.9414, -0.2598],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0588,      0.0150,      0.0098,  ...,      0.0075,      0.0010,     -0.0024],
        [    -0.0128,     -0.0071,     -0.0235,  ...,     -0.0218,     -0.0018,      0.0032],
        [     0.0509,      0.0059,     -0.0286,  ...,      0.0100,      0.0102,     -0.0155],
        ...,
        [    -0.0120,     -0.0258,      0.0100,  ...,     -0.0283,     -0.0011,      0.0171],
        [     0.0112,     -0.0021,     -0.0250,  ...,      0.0000,     -0.0164,      0.0246],
        [    -0.0089,     -0.0228,     -0.0032,  ...,     -0.0074,      0.0328,     -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([-0.9531, -0.4707,  0.8477,  0.1089, -0.2754,  0.1089, -0.4062, -0.1367, -0.6289, -0.1719,  0.0630, -0.1060, -0.4648,  0.2578, -0.2871, -0.2656,  0.7969, -0.0381, -0.1245, -0.1719,  0.3574, -0.9570, -0.3848, -0.6055, -0.5117,  0.0403,  0.2061,  0.8477, -0.0566, -0.4570, -0.1123, -0.0111,
        -0.1387, -0.9375, -0.4785,  0.1943,  0.0364, -0.1309,  0.4297, -0.3613,  0.3750,  0.1934, -0.7344, -0.7422, -0.5273, -0.0962,  0.0359,  0.2910, -0.1299, -0.0693,  0.1328,  0.4727, -0.0977, -0.1885, -0.2988, -0.9414, -0.1484, -0.3047,  0.1001, -0.4648,  0.0139,  0.0884,  0.5742,  0.4707],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1729, -0.1680,  0.0569, -0.2773,  0.1099,  0.2412, -0.4512, -0.1768,  0.3633, -0.4395, -0.2734, -0.0830, -0.5430, -0.2930],
        [ 0.0000, -0.2871, -0.3457, -0.0703, -0.2969,  0.1934, -0.2285,  0.0236, -0.4688, -0.1299, -0.4551, -0.1885, -0.1543, -0.0586, -0.4336],
        [ 0.0000,  0.2354, -0.3379, -0.0928, -0.0908,  0.1001,  0.3828,  0.0154, -0.0703,  0.2559, -0.1426, -0.3516,  0.0334, -0.0544,  0.0586],
        [ 0.0000, -0.0610, -0.0630, -0.1387, -0.0337,  0.0732, -0.2275, -0.0796, -0.0435, -0.1631, -0.3184, -0.2598,  0.0593,  0.0630, -0.1196],
        [ 0.0000,  0.1699,  0.3340,  0.5820,  0.1816,  0.3633,  0.3223, -0.2578, -0.2773,  0.1973, -0.2793,  0.4277,  0.3047, -0.0552,  0.2031],
        [ 0.0000,  0.1533, -0.5000, -0.7461, -0.1934, -0.2129, -0.2676, -0.0791, -0.4199, -0.3047, -0.4395, -0.6680, -0.1592, -0.7578, -0.5664],
        [ 0.0000,  0.3672, -0.0547, -0.2578,  0.1270, -0.0393,  0.2354,  0.3828,  0.3086,  0.0918,  0.2734, -0.7070, -0.5352,  0.1953, -0.0510],
        [ 0.0000,  0.4199, -0.2334,  0.4961,  0.0413, -0.3770,  0.0466, -0.1875, -0.1006, -0.2197,  0.0486, -0.1006, -0.3965, -0.4648, -0.2344],
        [ 0.0000, -0.6367, -0.3672, -0.1377, -0.1943, -0.4121, -0.0825, -0.5664, -0.0723, -0.0074, -1.1797, -0.5586, -0.4238,  0.3027,  0.1318],
        [ 0.0000,  0.2949, -0.2812, -0.2314,  0.0503,  0.0033,  0.3105, -0.3535, -0.0664, -0.1079,  0.1875, -0.1201, -0.1191,  0.2031, -0.0083],
        [ 0.0000, -0.2412, -0.1611, -0.0742,  0.1318, -0.2715,  0.9141,  0.4434, -0.5039,  0.3125, -0.1982, -0.5664,  0.2832, -0.4648,  0.0447],
        [ 0.0000,  0.0466,  0.0859, -0.0221,  0.2119, -0.1006,  0.1621,  0.0601, -0.0742,  0.2148, -0.1240, -0.3887, -0.2832, -0.0608, -0.0300],
        [ 0.0000,  0.2031,  0.0366,  0.1865,  0.1904, -0.0251,  0.1934, -0.0674, -0.2266,  0.0723, -0.0923, -0.8594, -0.0413, -0.4141, -0.1992],
        [ 0.0000,  0.0457, -0.2500, -0.2754,  0.2314, -0.0996,  0.0405,  0.0806, -0.1426,  0.0537,  0.1177, -0.2656, -0.0063, -0.2158,  0.0249]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4761],
        [0.3554],
        [0.2740],
        [0.1939],
        [0.1613],
        [0.1338],
        [0.1180],
        [0.1021],
        [0.0979],
        [0.0857],
        [0.0767],
        [0.0744],
        [0.0703],
        [0.0631]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4805, 0.5195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3633, 0.3047, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2217, 0.2656, 0.3398, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.1846, 0.2354, 0.1729, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1797, 0.1777, 0.1846, 0.1611, 0.1621, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1602, 0.1416, 0.1504, 0.1465, 0.1367, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.1128, 0.1416, 0.1045, 0.1328, 0.1318, 0.1045, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.0967, 0.1147, 0.1348, 0.1289, 0.1108, 0.0903, 0.1030, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1104, 0.0933, 0.1328, 0.0894, 0.0952, 0.0854, 0.1030, 0.0981, 0.0884, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.0771, 0.1328, 0.0830, 0.0908, 0.0747, 0.0869, 0.0757, 0.0786, 0.1006, 0.1030, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.1299, 0.1084, 0.0688, 0.0615, 0.0659, 0.0869, 0.0781, 0.0972, 0.0884, 0.0586, 0.0669, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.0752, 0.1152, 0.0698, 0.0771, 0.0581, 0.0820, 0.0559, 0.0688, 0.0908, 0.0806, 0.0708, 0.0757, 0.0000, 0.0000],
        [0.0977, 0.0840, 0.0801, 0.0623, 0.0688, 0.0713, 0.0845, 0.0718, 0.0840, 0.0562, 0.0571, 0.0630, 0.0500, 0.0688, 0.0000],
        [0.0723, 0.0500, 0.0767, 0.0615, 0.0820, 0.0947, 0.0542, 0.0645, 0.0737, 0.0659, 0.0571, 0.0781, 0.0591, 0.0640, 0.0464]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0056, -0.0140,  0.0082,  ...,  0.0019, -0.0126,  0.0129],
        [ 0.0031, -0.0157,  0.0132,  ..., -0.0063, -0.0182,  0.0439],
        [-0.0079,  0.0013, -0.0266,  ...,  0.0134, -0.0191, -0.0119],
        ...,
        [ 0.0188,  0.0162, -0.0132,  ..., -0.0101, -0.0268, -0.0089],
        [ 0.0027,  0.0122,  0.0038,  ...,  0.0007, -0.0321, -0.0090],
        [-0.0097,  0.0106, -0.0284,  ...,  0.0011, -0.0199,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([-0.0260, -0.5000, -0.8086, -0.5508, -0.1094, -0.1680,  0.5469,  0.2930,  0.5312, -0.6719, -0.0781,  0.0199, -0.7148,  0.5273,  0.1855,  0.7383,  0.2471, -0.1133,  0.5508,  0.5195,  1.2578, -0.0189, -0.8672,  0.1504, -0.3984,  0.1934,  0.1680, -0.7695, -0.2773, -0.2324, -0.1338,  1.3984,
         0.1416, -0.0247,  0.4395, -0.6992,  0.7578, -0.2344,  0.1279,  1.1562, -0.5859,  1.0781,  0.7070,  0.6289, -0.9258, -0.3691,  0.6680, -0.0879,  0.1689, -0.6484, -0.1787, -0.2188, -0.0305, -0.2402,  0.6602,  0.3945, -0.4062, -0.1475,  0.1641, -0.9570, -0.2520,  0.3164,  0.4727,  0.8594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0588,      0.0150,      0.0098,  ...,      0.0075,      0.0010,     -0.0024],
        [    -0.0128,     -0.0071,     -0.0235,  ...,     -0.0218,     -0.0018,      0.0032],
        [     0.0509,      0.0059,     -0.0286,  ...,      0.0100,      0.0102,     -0.0155],
        ...,
        [    -0.0120,     -0.0258,      0.0100,  ...,     -0.0283,     -0.0011,      0.0171],
        [     0.0112,     -0.0021,     -0.0250,  ...,      0.0000,     -0.0164,      0.0246],
        [    -0.0089,     -0.0228,     -0.0032,  ...,     -0.0074,      0.0328,     -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5234,  0.6797,  1.1016, -0.0884,  0.3105,  0.5312, -0.6211, -0.5977, -1.0391,  0.1914, -0.9648, -0.7109,  0.5039, -0.1543,  0.9258,  0.4746,  0.7539,  0.4062,  0.6992,  0.2236, -0.2158,  0.2949,  0.5859, -0.1309,  0.3320, -0.9102,  0.7500, -0.2480, -0.5000,  0.8672, -0.1572, -0.5234,
        -0.7148, -0.4551,  0.3867,  0.0413,  0.7773, -0.8594, -0.0645,  0.1123, -0.1729, -0.6914, -0.1602, -0.3906, -0.3887,  0.0243,  0.8594,  0.2734, -0.3066, -0.0542, -0.3789,  0.1748,  0.9219,  0.1245,  0.0645,  0.3965,  0.5625, -0.1572, -0.6094,  0.3613, -0.5742, -0.5312, -0.4121, -0.4805],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0811,  0.1816,  0.0320,  0.2949,  0.0884,  0.0217,  0.0850,  0.1650,  0.0972,  0.0894,  0.1167,  0.0063,  0.3457,  0.1631],
        [ 0.0000, -0.1768, -0.0889,  0.0500, -0.0332, -0.1914, -0.3203, -0.1436, -0.0791, -0.1406, -0.2021, -0.3008, -0.3008, -0.1992, -0.4082],
        [ 0.0000,  0.1836,  0.4297, -0.2520, -0.3047, -0.2754, -0.1533, -0.2314, -0.1123, -0.0361, -0.1846, -0.2734, -0.2910, -0.0811, -0.3340],
        [ 0.0000, -0.2871, -0.0452, -0.3535, -0.4180, -0.1963, -0.1089, -0.1914, -0.2432, -0.3066, -0.4355, -0.4316, -0.4766, -0.5391, -0.3164],
        [ 0.0000, -0.0140,  0.0247, -0.1089, -0.1069, -0.2832, -0.1416, -0.4863, -0.3281,  0.2305,  0.1270, -0.4883, -0.1367, -0.1895, -0.0160],
        [ 0.0000,  0.1680,  0.0427,  0.1030,  0.0762,  0.0095, -0.0442, -0.0613, -0.0933,  0.0752, -0.0300,  0.1201,  0.0986,  0.0306, -0.1089],
        [ 0.0000, -0.2969, -0.0708, -0.3750, -0.1357, -0.1377, -0.3730, -0.2266, -0.2344, -0.3301, -0.3203, -0.3066, -0.2754, -0.1279, -0.1494],
        [ 0.0000, -0.2109, -0.0396,  0.1172,  0.0732, -0.0728, -0.2773, -0.1475, -0.1641, -0.1260,  0.0713, -0.0679, -0.0322, -0.3086, -0.2637],
        [ 0.0000, -0.1680,  0.1826, -0.2119, -0.1504, -0.2559, -0.0708, -0.1191, -0.2207, -0.0645, -0.1245, -0.2656, -0.0898, -0.2578, -0.0327],
        [ 0.0000, -0.2285,  0.3164, -0.1533, -0.0659, -0.2617, -0.1104, -0.2500, -0.2090,  0.0381,  0.0601, -0.1611, -0.0967, -0.2031, -0.1260],
        [ 0.0000,  0.3770,  0.1963, -0.2598, -0.3711, -0.2988, -0.0259, -0.1299,  0.0864, -0.0081, -0.4180, -0.2871, -0.3359, -0.0503, -0.2910],
        [ 0.0000, -0.0693,  0.3594, -0.1416, -0.0422, -0.3223,  0.0222, -0.3652, -0.1562,  0.1196,  0.0010, -0.1235, -0.0569, -0.1562, -0.0206],
        [ 0.0000, -0.1514, -0.2021, -0.4492, -0.3496, -0.3125, -0.1484, -0.3066, -0.1523, -0.5547, -0.5391, -0.4375, -0.6719, -0.3535, -0.3105],
        [ 0.0000, -0.3633,  0.0610, -0.1602,  0.1270,  0.2715, -0.2852, -0.1089,  0.0222, -0.0869, -0.2314,  0.0806, -0.2002, -0.1182, -0.4434]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5480],
        [0.3324],
        [0.2350],
        [0.1921],
        [0.1538],
        [0.1429],
        [0.1243],
        [0.1091],
        [0.0988],
        [0.0898],
        [0.0819],
        [0.0728],
        [0.0727],
        [0.0647]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4805, 0.5195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3379, 0.3184, 0.3457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2393, 0.2471, 0.3281, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.1758, 0.2383, 0.1514, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.1865, 0.2090, 0.1582, 0.1455, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.1553, 0.1514, 0.1357, 0.1504, 0.1318, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1748, 0.1245, 0.1426, 0.1055, 0.1299, 0.1260, 0.1084, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.0986, 0.1396, 0.0991, 0.1240, 0.0854, 0.1040, 0.0938, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1191, 0.0923, 0.1216, 0.0776, 0.0889, 0.0835, 0.1318, 0.0737, 0.1011, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.1025, 0.1235, 0.0786, 0.0786, 0.0708, 0.1104, 0.0576, 0.1060, 0.0913, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.1001, 0.1055, 0.0693, 0.0728, 0.0664, 0.0879, 0.0645, 0.1104, 0.0845, 0.0737, 0.0693, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0747, 0.1118, 0.0618, 0.0649, 0.0530, 0.1089, 0.0586, 0.1016, 0.0840, 0.0684, 0.0625, 0.0737, 0.0000, 0.0000],
        [0.0815, 0.0903, 0.0752, 0.0535, 0.0618, 0.0664, 0.0840, 0.0742, 0.0859, 0.0623, 0.0537, 0.0593, 0.0525, 0.0996, 0.0000],
        [0.0801, 0.0583, 0.0825, 0.0510, 0.0742, 0.0703, 0.0593, 0.0557, 0.0684, 0.0679, 0.0552, 0.0618, 0.0469, 0.1030, 0.0649]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0056, -0.0140,  0.0082,  ...,  0.0019, -0.0126,  0.0129],
        [ 0.0031, -0.0157,  0.0132,  ..., -0.0063, -0.0182,  0.0439],
        [-0.0079,  0.0013, -0.0266,  ...,  0.0134, -0.0191, -0.0119],
        ...,
        [ 0.0188,  0.0162, -0.0132,  ..., -0.0101, -0.0268, -0.0089],
        [ 0.0027,  0.0122,  0.0038,  ...,  0.0007, -0.0321, -0.0090],
        [-0.0097,  0.0106, -0.0284,  ...,  0.0011, -0.0199,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0183, -0.3145, -0.4688, -0.6172, -0.8789, -0.2041,  0.2207, -0.1523,  0.6523, -0.7148, -0.2480, -0.1089, -0.4609, -0.1455, -0.1572,  0.4688,  0.2051, -0.2734,  0.7109, -0.1328,  1.2109,  0.1953, -1.2422, -0.0325,  0.0165,  1.1172,  0.5273, -0.5430, -0.0109,  0.3008,  0.1299,  1.0625,
         0.4805,  0.1543,  0.3848, -0.4141,  0.5664, -0.5234,  0.3086,  1.0391, -0.9766,  0.9102,  0.9688,  0.5547, -0.4707, -0.3613,  0.7305,  0.0903, -1.1406, -0.2695, -0.3594, -0.6133, -0.1924, -0.3438, -0.2363, -0.3047, -0.5625, -0.4160, -0.2256, -1.0234, -0.5781,  0.3340,  0.7617,  0.4023],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0588,      0.0150,      0.0098,  ...,      0.0075,      0.0010,     -0.0024],
        [    -0.0128,     -0.0071,     -0.0235,  ...,     -0.0218,     -0.0018,      0.0032],
        [     0.0509,      0.0059,     -0.0286,  ...,      0.0100,      0.0102,     -0.0155],
        ...,
        [    -0.0120,     -0.0258,      0.0100,  ...,     -0.0283,     -0.0011,      0.0171],
        [     0.0112,     -0.0021,     -0.0250,  ...,      0.0000,     -0.0164,      0.0246],
        [    -0.0089,     -0.0228,     -0.0032,  ...,     -0.0074,      0.0328,     -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5508,  0.3359,  0.9492, -0.3066,  0.0811,  0.1494, -0.5664, -0.7578, -0.2051,  0.3848, -0.8438, -1.2578,  0.5703, -0.4668,  0.0029,  0.7891,  0.2891,  0.6758,  0.9570,  0.5234,  0.3613,  0.0708,  0.4902, -0.3203,  0.3535, -0.8125,  0.7734, -0.4609, -0.8789,  0.7969, -0.2598, -0.5586,
        -0.6055, -0.6875, -0.0542, -0.2930,  0.4570, -1.0859,  0.3496, -0.3047, -0.8242, -0.9258,  0.0515, -0.5859, -0.5898,  0.2715,  0.3691,  0.2500,  0.3516,  0.0708, -0.1001,  0.6328,  0.0488,  0.1699, -0.1396,  0.5625,  0.2715, -0.2188, -0.4395,  0.3555, -0.3398, -0.4141, -0.2656, -0.1807],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0796,      0.2812,     -0.0625,      0.3008,      0.1260,      0.0098,      0.0625,      0.1621,      0.2988,      0.0640,      0.0806,     -0.0198,      0.3926,     -0.0383],
        [     0.0000,     -0.0569,      0.0229,     -0.1157,     -0.0248,     -0.0659,     -0.1172,     -0.0391,      0.2930,      0.0204,     -0.4395,     -0.1475,     -0.2949,      0.2090,     -0.4863],
        [     0.0000,      0.0309,      0.3145,     -0.2520,     -0.3008,     -0.3105,     -0.0117,     -0.3457,      0.2715,     -0.0186,     -0.3281,     -0.2715,     -0.1895,      0.0184,     -0.4121],
        [     0.0000,     -0.4043,     -0.0972,     -0.5547,     -0.4219,     -0.2305,     -0.0447,     -0.3945,     -0.2012,     -0.3867,     -0.3887,     -0.5039,     -0.5156,     -0.0947,     -0.6016],
        [     0.0000,      0.1143,      0.2266,     -0.0510,     -0.1367,     -0.2148,      0.0237,     -0.5625,      0.0525,      0.1797,     -0.0096,     -0.0178,     -0.1338,      0.1719,     -0.2432],
        [     0.0000,      0.0571,      0.0315,     -0.0781,      0.0231,     -0.1074,     -0.1230,     -0.3516,     -0.0938,      0.2197,     -0.0898,      0.1074,     -0.1875,      0.3105,      0.0126],
        [     0.0000,     -0.3379,     -0.2041,     -0.5078,     -0.3008,     -0.3262,     -0.4766,     -0.6797,     -0.6250,     -0.3398,     -0.4512,     -0.3184,     -0.6602,     -0.0698,     -0.3320],
        [     0.0000,     -0.3496,     -0.0001,     -0.3438,     -0.1196,     -0.4902,     -0.2949,     -0.4023,     -0.1992,     -0.0562,     -0.5195,     -0.4512,     -0.4941,     -0.1514,     -0.5391],
        [     0.0000,     -0.2598,      0.0201,     -0.4316,     -0.2949,     -0.3574,      0.0962,     -0.4824,     -0.1670,     -0.0723,     -0.2471,     -0.3164,     -0.2432,     -0.1143,     -0.4551],
        [     0.0000,     -0.0869,      0.0996,     -0.3574,     -0.3516,     -0.4570,     -0.0137,     -0.6641,     -0.0559,     -0.2031,     -0.4961,     -0.2451,     -0.2363,     -0.1182,     -0.4648],
        [     0.0000,      0.0476,      0.1006,     -0.3184,     -0.2695,     -0.3594,     -0.0815,     -0.3906,      0.1484,     -0.1182,     -0.2539,     -0.3164,     -0.3613,      0.1377,     -0.2656],
        [     0.0000,     -0.0179,      0.3828,     -0.2080,     -0.1553,     -0.3613,      0.3594,     -0.2617,      0.2891,      0.1006,     -0.1069,     -0.1953,     -0.0320,     -0.0049,     -0.1533],
        [     0.0000,      0.1045,     -0.0762,     -0.4199,     -0.2773,     -0.2012,      0.0295,     -0.0898,      0.0522,     -0.2695,     -0.4160,     -0.3164,     -0.4395,      0.2031,     -0.4082],
        [     0.0000,     -0.3145,      0.0315,     -0.4512,     -0.0723,     -0.1279,     -0.2969,     -0.3633,     -0.1572,     -0.1611,     -0.3730,     -0.2578,     -0.5352,      0.2559,     -0.2119]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5526],
        [0.3277],
        [0.2360],
        [0.1956],
        [0.1532],
        [0.1461],
        [0.1263],
        [0.1169],
        [0.0974],
        [0.0898],
        [0.0847],
        [0.0740],
        [0.0723],
        [0.0641]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( aspirin:0.0002est:0.0002 space:0.0002 winding:0.0002 winding:0.0002Getting:0.0002 Wrong:0.0001 settings:0.0002)
 settings
------
		(est:0.0002 space:0.0002 winding:0.0002 winding:0.0002Getting:0.0002 Wrong:0.0001 settings:0.0002and:0.0002)
and chap� array winding windingAm windingOffic noticeable Say publicationebra War publication
@ 1 train 10.9894 , allloss: 18.4041, dt: 1868.78ms, fracRes: 0.0063, norm(attn): 0.0330, norm(output): 0.0742, norm(x): 0.0699, norm(y): 0.9993, norm:31.1517, tok/sec: 70137.66, flops:28.85, batch-reuse:1
@ 2 train 10.9848 , allloss: 18.3599, dt: 1228.55ms, fracRes: 0.0063, norm(attn): 0.0330, norm(output): 0.0742, norm(x): 0.0700, norm(y): 0.9993, norm:31.2877, tok/sec: 106688.69, flops:43.89, batch-reuse:1
@ 3 train 10.9756 , allloss: 18.2872, dt: 1216.16ms, fracRes: 0.0063, norm(attn): 0.0330, norm(output): 0.0742, norm(x): 0.0701, norm(y): 0.9993, norm:31.3306, tok/sec: 107774.93, flops:44.33, batch-reuse:1
@ 4 train 10.9659 , allloss: 18.1940, dt: 1232.70ms, fracRes: 0.0063, norm(attn): 0.0332, norm(output): 0.0742, norm(x): 0.0702, norm(y): 0.9993, norm:30.9675, tok/sec: 106328.84, flops:43.74, batch-reuse:1
@ 5 train 10.9492 , allloss: 18.0667, dt: 1239.50ms, fracRes: 0.0063, norm(attn): 0.0334, norm(output): 0.0742, norm(x): 0.0703, norm(y): 0.9993, norm:30.4603, tok/sec: 105745.90, flops:43.50, batch-reuse:1
@ 6 train 10.9368 , allloss: 17.9125, dt: 1232.77ms, fracRes: 0.0063, norm(attn): 0.0337, norm(output): 0.0752, norm(x): 0.0705, norm(y): 0.9993, norm:30.9401, tok/sec: 106323.18, flops:43.74, batch-reuse:1
@ 7 train 10.9217 , allloss: 17.7265, dt: 1235.72ms, fracRes: 0.0063, norm(attn): 0.0347, norm(output): 0.0752, norm(x): 0.0707, norm(y): 0.9993, norm:30.1156, tok/sec: 106069.55, flops:43.63, batch-reuse:1
@ 8 train 10.8989 , allloss: 17.4994, dt: 1229.33ms, fracRes: 0.0063, norm(attn): 0.0349, norm(output): 0.0752, norm(x): 0.0710, norm(y): 0.9993, norm:29.5533, tok/sec: 106620.43, flops:43.86, batch-reuse:1
@ 9 train 10.8674 , allloss: 17.2379, dt: 1227.84ms, fracRes: 0.0063, norm(attn): 0.0354, norm(output): 0.0757, norm(x): 0.0714, norm(y): 0.9993, norm:29.3619, tok/sec: 106749.90, flops:43.91, batch-reuse:1
@ 10 train 10.8450 , allloss: 16.9635, dt: 1242.72ms, fracRes: 0.0064, norm(attn): 0.0356, norm(output): 0.0757, norm(x): 0.0718, norm(y): 0.9993, norm:28.3982, tok/sec: 105472.24, flops:43.39, batch-reuse:1
@ 11 train 10.8232 , allloss: 16.6709, dt: 1248.37ms, fracRes: 0.0064, norm(attn): 0.0369, norm(output): 0.0771, norm(x): 0.0723, norm(y): 0.9993, norm:27.1033, tok/sec: 104994.64, flops:43.19, batch-reuse:1
@ 12 train 10.7852 , allloss: 16.3649, dt: 1231.16ms, fracRes: 0.0064, norm(attn): 0.0376, norm(output): 0.0781, norm(x): 0.0729, norm(y): 0.9994, norm:26.1024, tok/sec: 106462.53, flops:43.79, batch-reuse:1
@ 13 train 10.7842 , allloss: 16.0887, dt: 1238.42ms, fracRes: 0.0065, norm(attn): 0.0386, norm(output): 0.0781, norm(x): 0.0735, norm(y): 0.9994, norm:24.4703, tok/sec: 105837.86, flops:43.54, batch-reuse:1
@ 14 train 10.7474 , allloss: 15.7742, dt: 1240.13ms, fracRes: 0.0065, norm(attn): 0.0391, norm(output): 0.0786, norm(x): 0.0742, norm(y): 0.9994, norm:23.3828, tok/sec: 105692.01, flops:43.48, batch-reuse:1
@ 15 train 10.7217 , allloss: 15.4807, dt: 1233.78ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.0786, norm(x): 0.0750, norm(y): 0.9994, norm:22.1666, tok/sec: 106235.98, flops:43.70, batch-reuse:1
@ 16 train 10.6935 , allloss: 15.2032, dt: 1226.18ms, fracRes: 0.0067, norm(attn): 0.0403, norm(output): 0.0806, norm(x): 0.0757, norm(y): 0.9994, norm:20.9931, tok/sec: 106894.85, flops:43.97, batch-reuse:1
@ 17 train 10.6744 , allloss: 14.9417, dt: 1246.08ms, fracRes: 0.0067, norm(attn): 0.0415, norm(output): 0.0811, norm(x): 0.0766, norm(y): 0.9994, norm:19.4568, tok/sec: 105187.58, flops:43.27, batch-reuse:1
@ 18 train 10.6411 , allloss: 14.6921, dt: 1256.41ms, fracRes: 0.0068, norm(attn): 0.0415, norm(output): 0.0830, norm(x): 0.0774, norm(y): 0.9994, norm:18.4467, tok/sec: 104322.23, flops:42.91, batch-reuse:1
@ 19 train 10.6092 , allloss: 14.4555, dt: 1245.14ms, fracRes: 0.0069, norm(attn): 0.0427, norm(output): 0.0835, norm(x): 0.0783, norm(y): 0.9995, norm:17.5913, tok/sec: 105267.27, flops:43.30, batch-reuse:1
@ 20 train 10.5824 , allloss: 14.2334, dt: 1243.92ms, fracRes: 0.0069, norm(attn): 0.0430, norm(output): 0.0850, norm(x): 0.0791, norm(y): 0.9995, norm:16.4098, tok/sec: 105370.38, flops:43.34, batch-reuse:1
@ 21 train 10.5474 , allloss: 14.0231, dt: 1228.20ms, fracRes: 0.0070, norm(attn): 0.0432, norm(output): 0.0854, norm(x): 0.0800, norm(y): 0.9995, norm:15.6827, tok/sec: 106718.86, flops:43.90, batch-reuse:1
@ 22 train 10.5367 , allloss: 13.8507, dt: 1272.15ms, fracRes: 0.0071, norm(attn): 0.0435, norm(output): 0.0859, norm(x): 0.0809, norm(y): 0.9995, norm:14.7829, tok/sec: 103031.62, flops:42.38, batch-reuse:1
@ 23 train 10.5343 , allloss: 13.6974, dt: 1228.08ms, fracRes: 0.0072, norm(attn): 0.0442, norm(output): 0.0864, norm(x): 0.0817, norm(y): 0.9995, norm:13.9339, tok/sec: 106729.55, flops:43.90, batch-reuse:1
@ 24 train 10.5055 , allloss: 13.5388, dt: 1260.54ms, fracRes: 0.0073, norm(attn): 0.0454, norm(output): 0.0869, norm(x): 0.0826, norm(y): 0.9995, norm:13.5861, tok/sec: 103980.89, flops:42.77, batch-reuse:1
@ 25 train 10.4472 , allloss: 13.3491, dt: 1254.12ms, fracRes: 0.0073, norm(attn): 0.0457, norm(output): 0.0884, norm(x): 0.0834, norm(y): 0.9995, norm:13.6097, tok/sec: 104513.18, flops:42.99, batch-reuse:1
@ 26 train 10.4468 , allloss: 13.2340, dt: 1238.04ms, fracRes: 0.0074, norm(attn): 0.0461, norm(output): 0.0908, norm(x): 0.0842, norm(y): 0.9996, norm:12.7063, tok/sec: 105870.55, flops:43.55, batch-reuse:1
@ 27 train 10.4183 , allloss: 13.0990, dt: 1243.12ms, fracRes: 0.0075, norm(attn): 0.0466, norm(output): 0.0913, norm(x): 0.0849, norm(y): 0.9996, norm:12.2388, tok/sec: 105437.77, flops:43.37, batch-reuse:1
@ 28 train 10.3881 , allloss: 12.9704, dt: 1247.26ms, fracRes: 0.0076, norm(attn): 0.0466, norm(output): 0.0913, norm(x): 0.0856, norm(y): 0.9996, norm:11.8032, tok/sec: 105088.35, flops:43.23, batch-reuse:1
@ 29 train 10.3723 , allloss: 12.8632, dt: 1234.28ms, fracRes: 0.0077, norm(attn): 0.0469, norm(output): 0.0933, norm(x): 0.0863, norm(y): 0.9996, norm:11.4304, tok/sec: 106193.32, flops:43.68, batch-reuse:1
@ 30 train 10.3293 , allloss: 12.7392, dt: 1236.36ms, fracRes: 0.0077, norm(attn): 0.0471, norm(output): 0.0933, norm(x): 0.0869, norm(y): 0.9996, norm:11.3213, tok/sec: 106014.16, flops:43.61, batch-reuse:1
@ 31 train 10.3110 , allloss: 12.6420, dt: 1239.75ms, fracRes: 0.0078, norm(attn): 0.0471, norm(output): 0.0933, norm(x): 0.0875, norm(y): 0.9996, norm:10.7737, tok/sec: 105724.94, flops:43.49, batch-reuse:1
@ 32 train 10.2806 , allloss: 12.5415, dt: 1258.68ms, fracRes: 0.0079, norm(attn): 0.0479, norm(output): 0.0933, norm(x): 0.0880, norm(y): 0.9996, norm:10.7842, tok/sec: 104134.72, flops:42.84, batch-reuse:1
@ 33 train 10.2238 , allloss: 12.4155, dt: 1282.51ms, fracRes: 0.0079, norm(attn): 0.0481, norm(output): 0.0942, norm(x): 0.0885, norm(y): 0.9996, norm:10.7165, tok/sec: 102199.63, flops:42.04, batch-reuse:1
@ 34 train 10.2065 , allloss: 12.3389, dt: 1274.46ms, fracRes: 0.0080, norm(attn): 0.0481, norm(output): 0.0942, norm(x): 0.0890, norm(y): 0.9996, norm:10.3322, tok/sec: 102845.02, flops:42.31, batch-reuse:1
@ 35 train 10.1838 , allloss: 12.2511, dt: 1284.16ms, fracRes: 0.0080, norm(attn): 0.0496, norm(output): 0.0942, norm(x): 0.0895, norm(y): 0.9996, norm:10.5148, tok/sec: 102068.12, flops:41.99, batch-reuse:1
@ 36 train 10.1468 , allloss: 12.1603, dt: 1268.16ms, fracRes: 0.0081, norm(attn): 0.0503, norm(output): 0.0942, norm(x): 0.0901, norm(y): 0.9996, norm:10.1138, tok/sec: 103355.65, flops:42.52, batch-reuse:1
@ 37 train 10.1371 , allloss: 12.0935, dt: 1268.03ms, fracRes: 0.0082, norm(attn): 0.0508, norm(output): 0.0947, norm(x): 0.0907, norm(y): 0.9996, norm:9.5993, tok/sec: 103366.78, flops:42.52, batch-reuse:1
@ 38 train 10.0911 , allloss: 11.9913, dt: 1287.82ms, fracRes: 0.0083, norm(attn): 0.0510, norm(output): 0.0957, norm(x): 0.0915, norm(y): 0.9997, norm:9.5768, tok/sec: 101778.36, flops:41.87, batch-reuse:1
@ 39 train 10.0922 , allloss: 11.9324, dt: 1280.85ms, fracRes: 0.0083, norm(attn): 0.0510, norm(output): 0.0962, norm(x): 0.0922, norm(y): 0.9997, norm:8.9420, tok/sec: 102332.41, flops:42.09, batch-reuse:1
@ 40 train 10.0498 , allloss: 11.8375, dt: 1275.03ms, fracRes: 0.0084, norm(attn): 0.0510, norm(output): 0.0967, norm(x): 0.0930, norm(y): 0.9997, norm:8.9795, tok/sec: 102799.02, flops:42.29, batch-reuse:1
@ 41 train 10.0200 , allloss: 11.7586, dt: 1261.23ms, fracRes: 0.0085, norm(attn): 0.0518, norm(output): 0.0991, norm(x): 0.0937, norm(y): 0.9997, norm:8.8512, tok/sec: 103924.07, flops:42.75, batch-reuse:1
@ 42 train 10.0090 , allloss: 11.7028, dt: 1265.40ms, fracRes: 0.0086, norm(attn): 0.0532, norm(output): 0.0991, norm(x): 0.0943, norm(y): 0.9997, norm:8.7825, tok/sec: 103581.54, flops:42.61, batch-reuse:1
@ 43 train 10.0007 , allloss: 11.6541, dt: 1287.31ms, fracRes: 0.0086, norm(attn): 0.0544, norm(output): 0.0996, norm(x): 0.0949, norm(y): 0.9997, norm:8.7355, tok/sec: 101818.64, flops:41.88, batch-reuse:1
@ 44 train 9.9868 , allloss: 11.6018, dt: 1260.92ms, fracRes: 0.0087, norm(attn): 0.0544, norm(output): 0.1006, norm(x): 0.0954, norm(y): 0.9997, norm:8.5223, tok/sec: 103949.32, flops:42.76, batch-reuse:1
@ 45 train 9.9571 , allloss: 11.5310, dt: 1263.89ms, fracRes: 0.0088, norm(attn): 0.0547, norm(output): 0.1011, norm(x): 0.0961, norm(y): 0.9997, norm:8.3315, tok/sec: 103705.07, flops:42.66, batch-reuse:1
@ 46 train 9.9241 , allloss: 11.4571, dt: 1245.93ms, fracRes: 0.0088, norm(attn): 0.0549, norm(output): 0.1011, norm(x): 0.0967, norm(y): 0.9997, norm:8.3030, tok/sec: 105199.85, flops:43.27, batch-reuse:1
@ 47 train 9.8936 , allloss: 11.3893, dt: 1268.88ms, fracRes: 0.0089, norm(attn): 0.0554, norm(output): 0.1021, norm(x): 0.0974, norm(y): 0.9997, norm:8.1557, tok/sec: 103297.72, flops:42.49, batch-reuse:1
@ 48 train 9.8753 , allloss: 11.3389, dt: 1302.18ms, fracRes: 0.0089, norm(attn): 0.0557, norm(output): 0.1021, norm(x): 0.0978, norm(y): 0.9997, norm:7.9541, tok/sec: 100655.86, flops:41.41, batch-reuse:1
@ 49 train 9.8723 , allloss: 11.3060, dt: 1290.15ms, fracRes: 0.0090, norm(attn): 0.0583, norm(output): 0.1021, norm(x): 0.0983, norm(y): 0.9997, norm:7.6851, tok/sec: 101594.58, flops:41.79, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5273, 0.4707, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3398, 0.2520, 0.4082, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2178, 0.3027, 0.2490, 0.2314, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.1689, 0.1299, 0.1895, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.1699, 0.1855, 0.1357, 0.2109, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1206, 0.1143, 0.1426, 0.2832, 0.0972, 0.1553, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1172, 0.1475, 0.1211, 0.0923, 0.1621, 0.0933, 0.1719, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.1318, 0.1182, 0.0991, 0.0437, 0.0864, 0.2051, 0.1123, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0625, 0.0542, 0.1206, 0.1377, 0.1436, 0.0747, 0.0894, 0.1387, 0.0874, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.0894, 0.0825, 0.0737, 0.1094, 0.1069, 0.1099, 0.0981, 0.1108, 0.0747, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0908, 0.0510, 0.0884, 0.1055, 0.0544, 0.0977, 0.1064, 0.1108, 0.0854, 0.0732, 0.0583, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0515, 0.1226, 0.0825, 0.1084, 0.1289, 0.0732, 0.0542, 0.0674, 0.0459, 0.0620, 0.0747, 0.0566, 0.0000, 0.0000],
        [0.0664, 0.1157, 0.0879, 0.0625, 0.0408, 0.0459, 0.0952, 0.0610, 0.0610, 0.1357, 0.0630, 0.0559, 0.0442, 0.0654, 0.0000],
        [0.0674, 0.0405, 0.0752, 0.0708, 0.0894, 0.0967, 0.0464, 0.0559, 0.0457, 0.0505, 0.0732, 0.0903, 0.0630, 0.0461, 0.0884]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0055, -0.0138,  0.0081,  ...,  0.0021, -0.0128,  0.0131],
        [ 0.0030, -0.0156,  0.0131,  ..., -0.0063, -0.0182,  0.0438],
        [-0.0077,  0.0015, -0.0268,  ...,  0.0136, -0.0191, -0.0117],
        ...,
        [ 0.0186,  0.0163, -0.0134,  ..., -0.0102, -0.0266, -0.0089],
        [ 0.0025,  0.0122,  0.0036,  ...,  0.0006, -0.0319, -0.0092],
        [-0.0098,  0.0107, -0.0285,  ...,  0.0012, -0.0201,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3359, -0.3047,  0.5391, -0.1025,  0.5469,  0.8711, -0.1113,  0.6289, -0.0305, -0.7266,  0.6367,  0.2354, -0.1543,  0.2969,  0.0299, -0.7305,  0.6680, -0.1748,  0.2910, -0.9180, -0.1562,  0.7930,  1.0938, -0.3398,  0.3496, -0.4082,  0.3789,  0.4238,  0.1572, -0.5352, -0.6133, -0.1484,
         0.6953, -0.5352,  0.0099,  0.2070,  1.0234,  0.8945, -0.3594,  0.3613, -0.1816, -0.1982, -0.5703, -0.0603,  0.1914, -0.1455,  0.9062, -0.7344,  0.2773,  0.5859,  0.1177, -0.5312,  0.2334,  0.6211, -1.1719, -0.4668, -0.5742,  0.8438,  0.0388,  0.1074, -0.3672, -0.1582,  0.1079,  0.7109],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0590,  0.0150,  0.0097,  ...,  0.0073,  0.0011, -0.0026],
        [-0.0130, -0.0072, -0.0235,  ..., -0.0219, -0.0019,  0.0030],
        [ 0.0508,  0.0058, -0.0286,  ...,  0.0098,  0.0102, -0.0157],
        ...,
        [-0.0118, -0.0260,  0.0102,  ..., -0.0282, -0.0012,  0.0173],
        [ 0.0110, -0.0021, -0.0252,  ..., -0.0002, -0.0162,  0.0244],
        [-0.0088, -0.0226, -0.0031,  ..., -0.0073,  0.0326, -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0056, -0.0251,  0.1553, -0.9492,  0.6367, -0.6953, -0.4980, -0.2754,  0.1514, -0.1187,  0.8320, -0.5508, -0.5547, -0.0884,  0.6172, -0.3906,  0.3301, -0.3223, -0.5586, -0.5234, -0.3047, -0.4668, -0.2930, -0.4199,  0.3730,  0.3047,  0.5664,  0.3066,  0.7773,  0.2188,  0.2158, -0.2559,
        -0.7773,  0.2832,  1.4766,  0.1357,  0.8359,  0.2734,  0.8711,  1.0547,  0.3867, -0.3047, -0.2539, -0.6602, -0.2773,  0.0791, -0.2773,  0.3145, -0.2910,  0.2168,  1.1406,  0.2129, -0.1011,  0.6953, -0.5703,  0.6055, -0.6758, -0.1270, -0.7148,  0.1279, -0.0366,  0.3457, -0.5156,  0.0197],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1138,  0.0762,  0.2676, -0.1348, -0.2334, -0.0693,  0.1934,  0.2441, -0.1152,  0.0684, -0.2002, -0.1152,  0.5078,  0.2617],
        [ 0.0000, -0.3008,  0.1797,  0.4121, -0.3926,  0.1826, -0.3965, -0.2578, -0.3203,  0.1396,  0.6250, -0.1196, -0.2617, -0.4062,  0.2100],
        [ 0.0000,  0.3281,  0.1348,  0.0610,  0.1631,  0.3242, -0.3164, -0.5234, -0.0247, -0.0742,  0.3652,  0.6719, -0.1357, -0.3730,  0.0437],
        [ 0.0000, -0.1973, -0.4629, -0.0840,  0.4023, -0.2539, -0.1963, -0.0659, -0.1953,  0.1172, -0.1797, -0.0811,  0.0205, -0.0317, -0.3008],
        [ 0.0000,  0.1641,  0.2539, -0.0583,  0.3848,  0.0708, -0.2812, -0.1631,  0.1357, -0.0330, -0.1953, -0.1738, -0.2061,  0.2344, -0.0356],
        [ 0.0000, -0.0557,  0.1670,  0.8516, -0.2158,  0.2500, -0.3125, -0.1621, -0.3086, -0.1885, -0.2441,  0.5742, -0.4688, -0.1582, -0.1934],
        [ 0.0000,  0.2266,  0.0317, -0.2432,  0.3223, -0.2314,  0.3809, -0.2080, -0.0215,  0.4121, -0.1816, -0.4355,  0.5430,  0.5938, -0.3008],
        [ 0.0000,  0.2334,  0.1216, -0.0522, -0.8711, -0.1924,  0.6719,  0.0732, -0.0562,  0.2852,  0.1562, -0.0275, -0.3203,  0.0728,  0.5820],
        [ 0.0000, -0.3809, -0.5234,  0.2793,  0.4082,  0.4512, -0.2002, -0.0222,  0.4141, -0.0457, -0.2617,  0.0669,  0.3340,  0.9531, -0.4316],
        [ 0.0000, -0.0815, -0.1650, -0.2734,  0.1206,  0.0967,  0.1226,  0.0092,  0.1318, -0.2598, -0.7148, -0.2422, -0.3086,  0.1128,  0.0962],
        [ 0.0000,  0.1455, -0.4297,  0.1221,  0.2949, -0.3672,  0.2168,  0.3066,  0.3438,  0.0840, -0.0674, -0.2969,  0.2969,  0.0184, -0.0403],
        [ 0.0000, -0.3477,  0.5195,  0.1270,  0.3965,  0.5703,  0.0060, -0.2949, -0.0757, -0.4629, -0.1582,  0.0260, -0.2520, -0.1191,  0.1162],
        [ 0.0000,  0.5547,  0.2832, -0.0596, -0.4824, -0.3672,  0.3652, -0.0796, -0.0815,  0.7148, -0.0508, -0.1699, -0.4043, -0.0131,  0.1465],
        [ 0.0000, -0.5039,  0.1099,  0.0522,  0.2852,  0.3652, -0.3691, -0.1816, -0.3848, -0.2832,  0.0884,  0.2949, -0.0613, -0.3750,  0.2754]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5412],
        [0.3398],
        [0.2397],
        [0.1842],
        [0.1652],
        [0.1352],
        [0.1225],
        [0.1066],
        [0.0955],
        [0.0894],
        [0.0802],
        [0.0726],
        [0.0675],
        [0.0639]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5820, 0.4180, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.3008, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.1572, 0.1982, 0.2441, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.1455, 0.2002, 0.1621, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1875, 0.1523, 0.1592, 0.2119, 0.1377, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.1079, 0.1553, 0.1445, 0.1865, 0.1494, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.0825, 0.0815, 0.1543, 0.1611, 0.1445, 0.1060, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.1025, 0.0771, 0.1367, 0.1250, 0.0977, 0.1309, 0.0933, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.0581, 0.1387, 0.0942, 0.1138, 0.0991, 0.0835, 0.1011, 0.1138, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1172, 0.0737, 0.0623, 0.0776, 0.1406, 0.0732, 0.0776, 0.0791, 0.0703, 0.1279, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0554, 0.1206, 0.0664, 0.0752, 0.0613, 0.0952, 0.0713, 0.1113, 0.0688, 0.0698, 0.1055, 0.0991, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0483, 0.1016, 0.0879, 0.0889, 0.1147, 0.0967, 0.0684, 0.0659, 0.0742, 0.0452, 0.0527, 0.0674, 0.0000, 0.0000],
        [0.0874, 0.0879, 0.0703, 0.0583, 0.1147, 0.0610, 0.0476, 0.0615, 0.0776, 0.0569, 0.0579, 0.0757, 0.0723, 0.0718, 0.0000],
        [0.0649, 0.0625, 0.0376, 0.0515, 0.0776, 0.0630, 0.0564, 0.0613, 0.0498, 0.0762, 0.0791, 0.1465, 0.0510, 0.0537, 0.0688]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0055, -0.0138,  0.0081,  ...,  0.0021, -0.0128,  0.0131],
        [ 0.0030, -0.0156,  0.0131,  ..., -0.0063, -0.0182,  0.0438],
        [-0.0077,  0.0015, -0.0268,  ...,  0.0136, -0.0191, -0.0117],
        ...,
        [ 0.0186,  0.0163, -0.0134,  ..., -0.0102, -0.0266, -0.0089],
        [ 0.0025,  0.0122,  0.0036,  ...,  0.0006, -0.0319, -0.0092],
        [-0.0098,  0.0107, -0.0285,  ...,  0.0012, -0.0201,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([    -0.3418,     -0.8750,     -0.5312,      0.2617,     -0.5938,     -0.0864,     -0.2080,      0.7383,     -0.6016,     -0.5352,     -1.4609,     -0.2988,     -0.0723,      0.2500,     -0.5547,     -0.0183,      0.9609,     -0.6133,     -0.3340,     -0.6836,      1.0625,      0.9453,
            -0.1260,      1.0703,      0.5820,      0.3984,     -0.8555,     -0.6992,     -0.8945,     -0.0640,     -0.6250,      0.6602,      0.1709,      0.1250,      0.4434,     -0.2090,     -0.1309,     -0.4707,      0.3301,      0.0369,      0.1191,      0.1680,      0.7031,      0.1553,
            -1.1406,     -0.8359,     -0.4375,      0.4297,     -0.5195,      0.4336,     -0.3203,     -0.2949,      0.0063,      0.0012,      0.2139,     -0.0129,     -0.2793,     -0.7227,     -0.1719,     -0.0277,      0.0430,      0.0271,      0.2344,     -0.7734], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0590,  0.0150,  0.0097,  ...,  0.0073,  0.0011, -0.0026],
        [-0.0130, -0.0072, -0.0235,  ..., -0.0219, -0.0019,  0.0030],
        [ 0.0508,  0.0058, -0.0286,  ...,  0.0098,  0.0102, -0.0157],
        ...,
        [-0.0118, -0.0260,  0.0102,  ..., -0.0282, -0.0012,  0.0173],
        [ 0.0110, -0.0021, -0.0252,  ..., -0.0002, -0.0162,  0.0244],
        [-0.0088, -0.0226, -0.0031,  ..., -0.0073,  0.0326, -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7344, -0.5195,  0.0095, -0.8711, -0.0825,  0.3262,  0.6836, -0.5625, -0.0391, -0.1182, -0.3711,  1.3359,  1.0000,  0.2812, -0.0400,  0.2217,  0.4277,  0.1777,  0.5547, -0.1069,  0.3750,  0.4805,  1.4453, -0.4395, -0.4902, -0.3848, -0.0801,  0.0518, -0.0371,  1.2734, -0.8516, -0.7539,
        -1.0938, -0.6133, -0.2109,  0.2734,  0.4004, -0.3691,  0.0747, -0.0048,  0.2119,  0.6211, -0.5195,  0.7266, -0.2441,  0.5039, -0.6289,  0.8125,  0.6055,  0.5742, -0.6797,  0.8125,  0.0090,  0.2236, -0.7852, -0.6758, -0.3027, -0.1670, -0.3984, -0.4551, -0.0571,  0.5234, -0.1523, -0.2129],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.3281,     -0.0017,     -0.3281,     -0.3750,     -0.1138,     -0.2324,      0.1387,     -0.3789,      0.0713,     -0.0183,      0.1074,     -0.2217,     -0.5352,     -0.1270],
        [     0.0000,     -0.5117,     -0.9297,     -0.4492,     -0.1816,     -0.3750,     -0.7578,     -0.2139,     -0.5508,      0.0093,      0.0187,      0.3633,     -0.5039,     -0.6641,     -0.0591],
        [     0.0000,     -0.9297,     -0.6992,     -0.4961,     -0.0452,      0.2207,     -0.4590,     -0.1484,     -0.3867,     -0.0237,     -0.3848,      0.2451,      0.1045,     -0.1611,     -0.0669],
        [     0.0000,     -0.4102,     -0.0938,     -0.3066,      0.2168,      0.0344,     -0.5039,      0.1328,      0.3594,     -0.0361,     -0.2217,      0.1147,     -0.2383,     -0.1270,     -0.1699],
        [     0.0000,     -0.2080,     -0.1650,      0.1196,     -0.3125,     -0.2148,     -0.6523,      0.0187,     -0.6328,     -0.4453,     -0.4766,      0.0408,     -0.3008,     -0.4297,     -0.0247],
        [     0.0000,     -0.3867,     -0.0234,     -0.0947,      0.1621,     -0.0583,     -0.4902,     -0.2324,     -0.4453,      0.1582,     -0.5820,     -0.1113,     -0.4102,     -0.4434,      0.0845],
        [     0.0000,     -0.4453,     -0.4570,      0.1797,      0.2236,      0.1138,     -0.1953,      0.1064,     -0.3242,     -0.0195,     -0.0942,     -0.1328,     -0.2139,     -0.1816,      0.1836],
        [     0.0000,     -0.0623,     -0.3457,      0.2256,      0.1328,     -0.1143,      0.1807,     -0.1602,      0.1523,      0.0011,     -0.3027,      0.4648,     -0.4023,     -0.0140,     -0.4648],
        [     0.0000,     -0.8086,      0.0664,     -0.3242,     -0.1318,     -0.2715,     -0.4434,     -0.2539,     -0.1357,     -0.6523,     -0.1885,     -0.4102,      0.1475,     -0.0069,     -0.2773],
        [     0.0000,     -0.4609,     -0.6328,     -0.4102,      0.1826,     -0.4668,     -0.4102,     -0.3887,     -0.5078,      0.0898,     -0.1621,      0.2393,     -0.4648,     -0.2773,     -0.3965],
        [     0.0000,      0.7773,      0.1836,      0.3066,      0.1011,      0.5391,      0.2490,      0.6953,      0.2197,      0.2324,      0.6445,      0.5820,      0.1475,      0.5234,      0.3691],
        [     0.0000,     -0.6016,      0.1445,     -0.0001,      0.0078,      0.2656,      0.0923,     -0.2500,     -0.2891,     -0.1699,     -0.6680,     -0.5117,     -0.2656,     -0.3145,      0.1641],
        [     0.0000,      0.0044,     -0.2178,     -0.4043,      0.2734,     -0.3594,     -0.6055,     -0.3496,     -0.1191,     -0.4258,     -0.4102,     -0.1455,     -0.1904,     -0.1982,     -0.4570],
        [     0.0000,     -0.0405,     -0.5508,     -0.2344,      0.1768,     -0.0300,     -0.1455,     -0.0625,     -0.2695,      0.1582,      0.1963,      0.8086,     -0.2441,     -0.1943,      0.0527]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5487],
        [0.3713],
        [0.2896],
        [0.2197],
        [0.1864],
        [0.1409],
        [0.1324],
        [0.1157],
        [0.1213],
        [0.1039],
        [0.0944],
        [0.0862],
        [0.0787],
        [0.0722]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5625, 0.4395, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4805, 0.2734, 0.2441, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.2656, 0.1934, 0.2109, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.1875, 0.1709, 0.1631, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.1602, 0.1738, 0.1709, 0.1436, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2285, 0.1680, 0.1147, 0.0918, 0.1299, 0.1270, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.1426, 0.1050, 0.0981, 0.1235, 0.1084, 0.1445, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.1436, 0.0850, 0.1309, 0.1011, 0.0801, 0.1177, 0.0874, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1777, 0.0742, 0.0845, 0.0889, 0.0957, 0.0825, 0.1152, 0.0757, 0.1050, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.1084, 0.0767, 0.0732, 0.0854, 0.0879, 0.1177, 0.0728, 0.0933, 0.0781, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.0708, 0.0708, 0.0767, 0.0889, 0.0669, 0.1523, 0.1064, 0.0630, 0.0898, 0.0574, 0.0503, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.0820, 0.0806, 0.0688, 0.0840, 0.0693, 0.0947, 0.0776, 0.0786, 0.0806, 0.0535, 0.0522, 0.0713, 0.0000, 0.0000],
        [0.1099, 0.0830, 0.0781, 0.0771, 0.0776, 0.0693, 0.0928, 0.0684, 0.0649, 0.0684, 0.0498, 0.0442, 0.0713, 0.0454, 0.0000],
        [0.0977, 0.0708, 0.0583, 0.0566, 0.0762, 0.0615, 0.0815, 0.0679, 0.0693, 0.0674, 0.0520, 0.0520, 0.0688, 0.0557, 0.0640]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0055, -0.0138,  0.0081,  ...,  0.0021, -0.0128,  0.0131],
        [ 0.0030, -0.0156,  0.0131,  ..., -0.0063, -0.0182,  0.0438],
        [-0.0077,  0.0015, -0.0268,  ...,  0.0136, -0.0191, -0.0117],
        ...,
        [ 0.0186,  0.0163, -0.0134,  ..., -0.0102, -0.0266, -0.0089],
        [ 0.0025,  0.0122,  0.0036,  ...,  0.0006, -0.0319, -0.0092],
        [-0.0098,  0.0107, -0.0285,  ...,  0.0012, -0.0201,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6133, -0.5977, -1.0000,  0.0439, -0.1963, -0.0566,  1.0078,  0.8047, -0.1865, -1.0781, -0.4238, -0.0210,  0.0620, -0.5938, -0.6875,  0.2793, -0.6641, -0.6719,  0.3574, -1.1016,  0.6719, -0.0287, -0.3281,  1.1484,  0.2451,  0.0879, -0.6211, -0.6680, -0.4961, -0.5625, -0.3125,  0.7070,
         0.6875, -0.0583,  0.3867, -0.4219,  0.5352,  0.9492,  0.5898,  0.9648,  0.1611,  0.6250,  0.0908,  0.8242, -0.9531, -0.5625,  0.7070,  0.3711, -0.2910, -0.1318, -0.1504,  0.1982, -0.3340, -0.7188,  0.7188, -1.1484, -0.5391, -0.2471,  0.2852, -1.2500, -0.4785,  1.1328,  1.2188, -0.1553],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0590,  0.0150,  0.0097,  ...,  0.0073,  0.0011, -0.0026],
        [-0.0130, -0.0072, -0.0235,  ..., -0.0219, -0.0019,  0.0030],
        [ 0.0508,  0.0058, -0.0286,  ...,  0.0098,  0.0102, -0.0157],
        ...,
        [-0.0118, -0.0260,  0.0102,  ..., -0.0282, -0.0012,  0.0173],
        [ 0.0110, -0.0021, -0.0252,  ..., -0.0002, -0.0162,  0.0244],
        [-0.0088, -0.0226, -0.0031,  ..., -0.0073,  0.0326, -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([    -1.0312,      0.1050,      1.1250,     -0.0645,     -0.0981,      0.2402,     -0.5938,     -0.1143,     -0.3359,      0.2490,     -0.1289,     -0.1826,     -0.2910,      0.1680,      0.0310,     -0.3242,      0.9609,     -0.0041,      0.2578,     -0.0007,      0.3066,     -0.6875,
             0.1045,     -0.4922,     -0.7344,     -0.0325,      0.2949,      0.8008,      0.1025,     -0.1543,      0.0261,     -0.2930,     -0.1064,     -1.2969,     -0.0820,     -0.4219,      0.1797,     -0.4785,      0.7148,     -0.3926,     -0.0165,      0.0747,     -0.6367,     -0.8906,
            -0.8711,     -0.2832,     -0.2676,     -0.1484,      0.4414,     -0.0417,      0.5352,      0.7578,     -0.2393,      0.1895,     -0.2695,     -0.6484,      0.1240,     -0.3379,     -0.3164,     -0.1187,     -0.2930,      0.0253,      0.8477,      0.2754], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.2461,     -0.4531,     -0.4121,     -0.5508,     -0.3281,     -0.1758,     -0.6641,     -0.4727,     -0.2021,     -0.8789,     -0.6836,     -0.4180,     -0.8086,     -0.6406],
        [     0.0000,     -0.5625,     -0.6758,     -0.6172,     -0.6172,     -0.4102,     -0.5000,     -0.4805,     -0.6797,     -0.5664,     -0.9414,     -0.7344,     -0.4844,     -0.5547,     -0.7148],
        [     0.0000,     -0.2158,     -0.5352,     -0.4453,     -0.3691,     -0.3281,      0.0294,     -0.3574,     -0.3066,     -0.2520,     -0.6953,     -0.7305,     -0.2910,     -0.3418,     -0.3691],
        [     0.0000,     -0.4844,     -0.5781,     -0.6250,     -0.5430,     -0.5039,     -0.4785,     -0.5508,     -0.4766,     -0.5820,     -0.9219,     -0.7656,     -0.4023,     -0.6094,     -0.5664],
        [     0.0000,     -0.2451,     -0.1592,     -0.1777,     -0.3516,     -0.3203,     -0.0938,     -0.5391,     -0.5000,     -0.3652,     -0.8555,     -0.2539,     -0.2178,     -0.6211,     -0.3047],
        [     0.0000,     -0.3086,     -0.6914,     -0.9141,     -0.5625,     -0.5898,     -0.4902,     -0.5273,     -0.6406,     -0.6445,     -1.0000,     -0.9531,     -0.4961,     -0.9023,     -0.7930],
        [     0.0000,     -0.0175,     -0.3223,     -0.3887,     -0.1592,     -0.2910,     -0.0050,     -0.0864,      0.0469,     -0.2100,     -0.4062,     -0.7773,     -0.4570,     -0.0889,     -0.2598],
        [     0.0000,     -0.0618,     -0.5898,     -0.1553,     -0.4180,     -0.6445,     -0.2637,     -0.5586,     -0.4258,     -0.6055,     -0.6172,     -0.5703,     -0.6562,     -0.7617,     -0.6016],
        [     0.0000,     -0.8711,     -0.7461,     -0.6953,     -0.6211,     -0.7656,     -0.4336,     -0.8516,     -0.5273,     -0.5820,     -1.4531,     -1.0078,     -0.7461,     -0.5391,     -0.5195],
        [     0.0000,     -0.1904,     -0.5312,     -0.5820,     -0.4277,     -0.3984,     -0.1069,     -0.5859,     -0.3379,     -0.5156,     -0.5508,     -0.5508,     -0.3926,     -0.3848,     -0.4297],
        [     0.0000,     -0.4121,     -0.4102,     -0.3281,     -0.1807,     -0.4629,      0.3574,      0.0008,     -0.5273,     -0.1709,     -0.6172,     -0.7539,     -0.0850,     -0.5586,     -0.2656],
        [     0.0000,     -0.2637,     -0.2812,     -0.4375,     -0.2422,     -0.4297,     -0.1167,     -0.3184,     -0.3047,     -0.2812,     -0.6914,     -0.7148,     -0.4043,     -0.5000,     -0.3848],
        [     0.0000,     -0.2812,     -0.3398,     -0.3574,     -0.3496,     -0.4648,     -0.1680,     -0.4727,     -0.5273,     -0.4766,     -0.7930,     -0.9102,     -0.4297,     -0.8828,     -0.5703],
        [     0.0000,     -0.3242,     -0.5156,     -0.5430,     -0.2500,     -0.4648,     -0.1787,     -0.3613,     -0.3457,     -0.3672,     -0.6328,     -0.6289,     -0.3477,     -0.5625,     -0.4219]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5671],
        [0.4377],
        [0.3503],
        [0.2616],
        [0.2287],
        [0.1843],
        [0.1698],
        [0.1345],
        [0.1431],
        [0.1258],
        [0.1085],
        [0.1065],
        [0.1014],
        [0.0919]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6758, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4961, 0.2461, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3770, 0.1973, 0.2070, 0.2188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.1611, 0.1699, 0.1787, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.1357, 0.1436, 0.1504, 0.1572, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2148, 0.1177, 0.1245, 0.1309, 0.1357, 0.1377, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.1035, 0.1094, 0.1143, 0.1191, 0.1206, 0.1216, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.0918, 0.0972, 0.1016, 0.1060, 0.1069, 0.1079, 0.1094, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.0825, 0.0874, 0.0908, 0.0947, 0.0967, 0.0972, 0.0986, 0.0991, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.0762, 0.0801, 0.0830, 0.0864, 0.0879, 0.0884, 0.0894, 0.0898, 0.0928, 0.0908, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.0693, 0.0728, 0.0762, 0.0791, 0.0801, 0.0811, 0.0820, 0.0820, 0.0854, 0.0835, 0.0835, 0.0000, 0.0000, 0.0000],
        [0.1143, 0.0640, 0.0674, 0.0703, 0.0728, 0.0742, 0.0747, 0.0757, 0.0762, 0.0786, 0.0771, 0.0771, 0.0786, 0.0000, 0.0000],
        [0.1060, 0.0586, 0.0623, 0.0645, 0.0674, 0.0688, 0.0688, 0.0698, 0.0703, 0.0732, 0.0713, 0.0713, 0.0728, 0.0747, 0.0000],
        [0.0977, 0.0549, 0.0581, 0.0603, 0.0630, 0.0640, 0.0645, 0.0654, 0.0654, 0.0679, 0.0664, 0.0664, 0.0679, 0.0698, 0.0688]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0055, -0.0138,  0.0081,  ...,  0.0021, -0.0128,  0.0131],
        [ 0.0030, -0.0156,  0.0131,  ..., -0.0063, -0.0182,  0.0438],
        [-0.0077,  0.0015, -0.0268,  ...,  0.0136, -0.0191, -0.0117],
        ...,
        [ 0.0186,  0.0163, -0.0134,  ..., -0.0102, -0.0266, -0.0089],
        [ 0.0025,  0.0122,  0.0036,  ...,  0.0006, -0.0319, -0.0092],
        [-0.0098,  0.0107, -0.0285,  ...,  0.0012, -0.0201,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([     0.0159,     -0.9883,     -0.4199,     -0.4551,      0.1387,      0.8789,     -0.5273,      1.1016,     -0.0610,     -1.2578,     -0.7539,     -0.9922,     -0.5664,     -0.1973,     -1.4062,      0.6562,      0.7227,     -0.7188,      0.0172,     -1.0781,     -0.1768,      0.3457,
            -0.0004,     -0.0479,     -0.0479,     -0.2695,     -0.8750,      0.2637,     -0.0889,      0.4492,     -0.1738,      1.0703,      0.0146,     -0.2852,     -0.0884,     -0.1748,      0.4121,      1.2031,      0.7109,      0.2344,      0.0327,      0.4121,      0.2617,      1.4688,
            -0.6445,      0.0535,      0.4160,      1.2812,     -0.0294,     -0.0598,     -0.4590,     -0.1914,      0.4316,      0.1768,      0.6797,      0.1289,     -0.7344,     -0.4648,     -0.2070,     -0.0332,     -0.2520,      0.2324,     -0.1270,      0.9336], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0590,  0.0150,  0.0097,  ...,  0.0073,  0.0011, -0.0026],
        [-0.0130, -0.0072, -0.0235,  ..., -0.0219, -0.0019,  0.0030],
        [ 0.0508,  0.0058, -0.0286,  ...,  0.0098,  0.0102, -0.0157],
        ...,
        [-0.0118, -0.0260,  0.0102,  ..., -0.0282, -0.0012,  0.0173],
        [ 0.0110, -0.0021, -0.0252,  ..., -0.0002, -0.0162,  0.0244],
        [-0.0088, -0.0226, -0.0031,  ..., -0.0073,  0.0326, -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1172,  1.1094,  0.4238,  0.8984,  0.9570,  0.0708,  0.1553,  0.2852, -0.3242, -0.0140, -0.2266,  0.7617, -0.1895,  0.0776,  0.0542, -1.0156, -0.3711, -0.5625,  0.7188,  0.0093, -0.3242,  0.1895,  0.4453, -0.2188, -0.8359,  0.6836, -0.2471,  0.0332,  0.2207,  0.3730, -0.2178, -0.5742,
        -0.2734,  0.1396, -0.0014, -1.1250, -0.2734, -0.2871,  0.3613,  0.4531, -0.5781, -0.3984,  0.2910, -0.7109, -0.2695, -0.3711, -0.2520, -0.1240,  0.0566, -0.1069,  0.2852,  0.6328,  0.1089,  0.8047,  1.0703,  0.0195, -0.0439, -0.0410,  0.5391,  0.6328, -0.4492, -0.8008, -0.4629,  0.3613],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.7305, -0.6719, -0.6094, -0.5664, -0.5664, -0.5508, -0.5312, -0.5391, -0.4902, -0.5078, -0.5117, -0.4863, -0.4707, -0.4648],
        [ 0.0000, -0.7031, -0.6523, -0.5898, -0.5430, -0.5430, -0.5312, -0.5078, -0.5156, -0.4707, -0.4902, -0.4922, -0.4707, -0.4531, -0.4492],
        [ 0.0000, -0.6445, -0.5977, -0.5430, -0.5000, -0.5000, -0.4863, -0.4688, -0.4746, -0.4336, -0.4531, -0.4531, -0.4355, -0.4180, -0.4160],
        [ 0.0000, -0.6367, -0.5781, -0.5312, -0.4883, -0.4805, -0.4727, -0.4570, -0.4570, -0.4199, -0.4414, -0.4395, -0.4219, -0.4023, -0.4062],
        [ 0.0000, -0.6211, -0.5664, -0.5195, -0.4746, -0.4629, -0.4551, -0.4395, -0.4375, -0.3984, -0.4219, -0.4219, -0.4023, -0.3789, -0.3867],
        [ 0.0000, -0.6016, -0.5430, -0.4980, -0.4551, -0.4434, -0.4355, -0.4219, -0.4199, -0.3828, -0.4043, -0.4043, -0.3867, -0.3633, -0.3711],
        [ 0.0000, -0.5977, -0.5430, -0.5000, -0.4590, -0.4473, -0.4395, -0.4258, -0.4238, -0.3887, -0.4102, -0.4082, -0.3926, -0.3691, -0.3770],
        [ 0.0000, -0.6094, -0.5547, -0.5117, -0.4707, -0.4590, -0.4531, -0.4375, -0.4355, -0.4004, -0.4219, -0.4199, -0.4043, -0.3828, -0.3906],
        [ 0.0000, -0.5977, -0.5430, -0.5000, -0.4570, -0.4414, -0.4355, -0.4219, -0.4160, -0.3789, -0.4023, -0.4023, -0.3828, -0.3555, -0.3711],
        [ 0.0000, -0.5781, -0.5234, -0.4863, -0.4453, -0.4336, -0.4258, -0.4121, -0.4082, -0.3750, -0.3965, -0.3965, -0.3789, -0.3535, -0.3652],
        [ 0.0000, -0.5977, -0.5469, -0.5039, -0.4609, -0.4492, -0.4414, -0.4258, -0.4258, -0.3887, -0.4102, -0.4102, -0.3906, -0.3672, -0.3770],
        [ 0.0000, -0.5781, -0.5273, -0.4883, -0.4473, -0.4297, -0.4258, -0.4121, -0.4062, -0.3711, -0.3945, -0.3945, -0.3750, -0.3496, -0.3633],
        [ 0.0000, -0.5938, -0.5352, -0.4961, -0.4551, -0.4336, -0.4297, -0.4180, -0.4082, -0.3730, -0.3984, -0.3984, -0.3770, -0.3496, -0.3672],
        [ 0.0000, -0.5742, -0.5195, -0.4805, -0.4395, -0.4219, -0.4160, -0.4023, -0.3965, -0.3594, -0.3828, -0.3848, -0.3633, -0.3340, -0.3496]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6229],
        [0.4378],
        [0.3358],
        [0.2695],
        [0.2244],
        [0.1934],
        [0.1691],
        [0.1513],
        [0.1339],
        [0.1227],
        [0.1135],
        [0.1030],
        [0.0946],
        [0.0884]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6680, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4805, 0.2500, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3613, 0.1992, 0.2139, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.1611, 0.1738, 0.1826, 0.1904, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.1357, 0.1465, 0.1533, 0.1602, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2061, 0.1167, 0.1260, 0.1318, 0.1377, 0.1406, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.1025, 0.1104, 0.1152, 0.1201, 0.1230, 0.1235, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1611, 0.0908, 0.0977, 0.1025, 0.1064, 0.1089, 0.1094, 0.1113, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.0806, 0.0874, 0.0918, 0.0952, 0.0986, 0.0986, 0.1001, 0.1011, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.0742, 0.0796, 0.0835, 0.0864, 0.0889, 0.0894, 0.0908, 0.0913, 0.0947, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.0679, 0.0728, 0.0762, 0.0791, 0.0815, 0.0815, 0.0830, 0.0830, 0.0869, 0.0850, 0.0840, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.0620, 0.0669, 0.0703, 0.0728, 0.0752, 0.0752, 0.0767, 0.0771, 0.0801, 0.0786, 0.0776, 0.0806, 0.0000, 0.0000],
        [0.0986, 0.0566, 0.0615, 0.0645, 0.0674, 0.0693, 0.0698, 0.0708, 0.0713, 0.0742, 0.0728, 0.0718, 0.0747, 0.0762, 0.0000],
        [0.0903, 0.0527, 0.0571, 0.0601, 0.0625, 0.0645, 0.0649, 0.0659, 0.0664, 0.0693, 0.0679, 0.0669, 0.0698, 0.0713, 0.0703]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0055, -0.0138,  0.0081,  ...,  0.0021, -0.0128,  0.0131],
        [ 0.0030, -0.0156,  0.0131,  ..., -0.0063, -0.0182,  0.0438],
        [-0.0077,  0.0015, -0.0268,  ...,  0.0136, -0.0191, -0.0117],
        ...,
        [ 0.0186,  0.0163, -0.0134,  ..., -0.0102, -0.0266, -0.0089],
        [ 0.0025,  0.0122,  0.0036,  ...,  0.0006, -0.0319, -0.0092],
        [-0.0098,  0.0107, -0.0285,  ...,  0.0012, -0.0201,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([-0.0317, -0.9609, -0.4648, -0.4961,  0.3027,  0.7891, -0.6680,  1.0078, -0.2305, -1.2656, -0.7461, -0.9727, -0.4805, -0.3027, -1.3750,  0.5781,  0.8633, -0.6406, -0.0317, -1.1172, -0.4004,  0.4160,  0.0156, -0.0869, -0.2080, -0.0845, -0.8125,  0.3867, -0.1592,  0.3711, -0.1777,  0.9844,
        -0.1846, -0.2969, -0.1846, -0.1982,  0.4355,  1.1953,  0.6406,  0.0708,  0.0767,  0.5938,  0.3125,  1.3438, -0.6914,  0.0312,  0.3438,  1.1953,  0.0160,  0.0610, -0.4688, -0.0332,  0.3945,  0.0972,  0.5312,  0.1865, -0.7461, -0.4609, -0.1445,  0.1338, -0.1797,  0.1904, -0.2871,  0.9766],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0590,  0.0150,  0.0097,  ...,  0.0073,  0.0011, -0.0026],
        [-0.0130, -0.0072, -0.0235,  ..., -0.0219, -0.0019,  0.0030],
        [ 0.0508,  0.0058, -0.0286,  ...,  0.0098,  0.0102, -0.0157],
        ...,
        [-0.0118, -0.0260,  0.0102,  ..., -0.0282, -0.0012,  0.0173],
        [ 0.0110, -0.0021, -0.0252,  ..., -0.0002, -0.0162,  0.0244],
        [-0.0088, -0.0226, -0.0031,  ..., -0.0073,  0.0326, -0.0266]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.2109,  1.0234,  0.2871,  0.9062,  1.0156,  0.1396,  0.2891,  0.2266, -0.2773,  0.0972, -0.1504,  0.7578, -0.2490,  0.1177,  0.0776, -1.0625, -0.1602, -0.6055,  0.5898,  0.0747, -0.3594,  0.2656,  0.4727, -0.2441, -0.9141,  0.6836, -0.2441, -0.0408,  0.1973,  0.3457, -0.2988, -0.5781,
        -0.3320,  0.2949,  0.1543, -1.1797, -0.3359, -0.1279,  0.2734,  0.3750, -0.5234, -0.2559,  0.2412, -0.6836, -0.1216, -0.2734, -0.3359, -0.0471, -0.0625, -0.1299,  0.0649,  0.4922,  0.2139,  0.7578,  1.0781,  0.0537, -0.0613,  0.0669,  0.5820,  0.5312, -0.4434, -0.7305, -0.5508,  0.4355],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.6914, -0.6133, -0.5469, -0.5000, -0.4941, -0.4785, -0.4609, -0.4629, -0.4180, -0.4316, -0.4434, -0.4082, -0.4043, -0.3906],
        [ 0.0000, -0.6523, -0.5820, -0.5195, -0.4746, -0.4629, -0.4512, -0.4316, -0.4355, -0.3926, -0.4062, -0.4180, -0.3828, -0.3750, -0.3672],
        [ 0.0000, -0.5977, -0.5273, -0.4766, -0.4355, -0.4219, -0.4141, -0.3965, -0.3984, -0.3594, -0.3750, -0.3848, -0.3496, -0.3438, -0.3359],
        [ 0.0000, -0.5898, -0.5156, -0.4668, -0.4277, -0.4082, -0.4023, -0.3867, -0.3867, -0.3457, -0.3633, -0.3730, -0.3379, -0.3281, -0.3262],
        [ 0.0000, -0.5742, -0.5000, -0.4512, -0.4102, -0.3867, -0.3809, -0.3652, -0.3633, -0.3223, -0.3418, -0.3516, -0.3145, -0.3027, -0.3027],
        [ 0.0000, -0.5664, -0.4902, -0.4434, -0.4043, -0.3789, -0.3750, -0.3594, -0.3574, -0.3145, -0.3340, -0.3457, -0.3086, -0.2969, -0.2969],
        [ 0.0000, -0.5664, -0.4941, -0.4473, -0.4082, -0.3848, -0.3809, -0.3652, -0.3613, -0.3203, -0.3398, -0.3516, -0.3145, -0.3008, -0.3027],
        [ 0.0000, -0.5742, -0.5000, -0.4551, -0.4160, -0.3906, -0.3867, -0.3730, -0.3691, -0.3281, -0.3477, -0.3574, -0.3223, -0.3105, -0.3105],
        [ 0.0000, -0.5586, -0.4824, -0.4336, -0.3926, -0.3613, -0.3594, -0.3438, -0.3379, -0.2949, -0.3164, -0.3281, -0.2891, -0.2715, -0.2793],
        [ 0.0000, -0.5469, -0.4746, -0.4297, -0.3926, -0.3652, -0.3613, -0.3477, -0.3418, -0.3027, -0.3223, -0.3340, -0.2969, -0.2812, -0.2852],
        [ 0.0000, -0.5625, -0.4902, -0.4434, -0.4043, -0.3789, -0.3750, -0.3594, -0.3555, -0.3145, -0.3340, -0.3457, -0.3086, -0.2949, -0.2969],
        [ 0.0000, -0.5430, -0.4707, -0.4238, -0.3848, -0.3535, -0.3516, -0.3359, -0.3301, -0.2891, -0.3086, -0.3223, -0.2812, -0.2637, -0.2715],
        [ 0.0000, -0.5547, -0.4746, -0.4258, -0.3867, -0.3516, -0.3496, -0.3359, -0.3262, -0.2852, -0.3066, -0.3203, -0.2793, -0.2598, -0.2715],
        [ 0.0000, -0.5391, -0.4590, -0.4082, -0.3672, -0.3340, -0.3301, -0.3145, -0.3086, -0.2656, -0.2871, -0.3008, -0.2578, -0.2393, -0.2480]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6160],
        [0.4282],
        [0.3269],
        [0.2621],
        [0.2173],
        [0.1867],
        [0.1632],
        [0.1452],
        [0.1285],
        [0.1177],
        [0.1087],
        [0.0985],
        [0.0904],
        [0.0844]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( the:0.0027 the:0.0027 the:0.0038 the:0.0032 the:0.0029 the:0.0040 the:0.0047 the:0.0044)
 the
------
		( the:0.0027 the:0.0038 the:0.0032 the:0.0029 the:0.0040 the:0.0047 the:0.0044 the:0.0044)
 the the the the the the the the the the the the the the the
@ 50 train 9.8500 , allloss: 11.2475, dt: 1688.58ms, fracRes: 0.0090, norm(attn): 0.0583, norm(output): 0.1035, norm(x): 0.0990, norm(y): 0.9997, norm:7.6229, tok/sec: 77622.82, flops:31.93, batch-reuse:1
@ 51 train 9.8669 , allloss: 11.2324, dt: 1291.27ms, fracRes: 0.0091, norm(attn): 0.0586, norm(output): 0.1035, norm(x): 0.0996, norm(y): 0.9997, norm:7.6438, tok/sec: 101506.47, flops:41.75, batch-reuse:1
@ 52 train 9.7968 , allloss: 11.1409, dt: 1279.91ms, fracRes: 0.0091, norm(attn): 0.0591, norm(output): 0.1035, norm(x): 0.1000, norm(y): 0.9997, norm:7.5709, tok/sec: 102407.38, flops:42.13, batch-reuse:1
@ 53 train 9.8045 , allloss: 11.1318, dt: 1272.82ms, fracRes: 0.0091, norm(attn): 0.0596, norm(output): 0.1035, norm(x): 0.1004, norm(y): 0.9997, norm:7.7493, tok/sec: 102977.33, flops:42.36, batch-reuse:1
@ 54 train 9.7846 , allloss: 11.0840, dt: 1251.63ms, fracRes: 0.0092, norm(attn): 0.0615, norm(output): 0.1035, norm(x): 0.1010, norm(y): 0.9997, norm:7.5216, tok/sec: 104720.96, flops:43.08, batch-reuse:1
@ 55 train 9.8166 , allloss: 11.0881, dt: 1269.92ms, fracRes: 0.0092, norm(attn): 0.0623, norm(output): 0.1064, norm(x): 0.1017, norm(y): 0.9997, norm:7.6112, tok/sec: 103212.54, flops:42.46, batch-reuse:1
@ 56 train 9.7419 , allloss: 10.9996, dt: 1262.73ms, fracRes: 0.0093, norm(attn): 0.0623, norm(output): 0.1074, norm(x): 0.1021, norm(y): 0.9997, norm:7.8660, tok/sec: 103800.13, flops:42.70, batch-reuse:1
@ 57 train 9.6956 , allloss: 10.9616, dt: 1271.04ms, fracRes: 0.0093, norm(attn): 0.0625, norm(output): 0.1074, norm(x): 0.1021, norm(y): 0.9997, norm:8.2046, tok/sec: 103122.22, flops:42.42, batch-reuse:1
@ 58 train 9.7296 , allloss: 10.9880, dt: 1257.08ms, fracRes: 0.0093, norm(attn): 0.0630, norm(output): 0.1069, norm(x): 0.1025, norm(y): 0.9997, norm:8.0430, tok/sec: 104266.93, flops:42.89, batch-reuse:1
@ 59 train 9.6549 , allloss: 10.8797, dt: 1273.57ms, fracRes: 0.0094, norm(attn): 0.0635, norm(output): 0.1074, norm(x): 0.1033, norm(y): 0.9997, norm:9.6437, tok/sec: 102917.38, flops:42.34, batch-reuse:1
@ 60 train 9.6697 , allloss: 10.9012, dt: 1272.91ms, fracRes: 0.0094, norm(attn): 0.0654, norm(output): 0.1074, norm(x): 0.1034, norm(y): 0.9997, norm:8.3265, tok/sec: 102969.98, flops:42.36, batch-reuse:1
@ 61 train 9.6704 , allloss: 10.9381, dt: 1261.82ms, fracRes: 0.0094, norm(attn): 0.0659, norm(output): 0.1074, norm(x): 0.1034, norm(y): 0.9997, norm:11.2397, tok/sec: 103875.25, flops:42.73, batch-reuse:1
@ 62 train 9.6440 , allloss: 10.8849, dt: 1259.43ms, fracRes: 0.0094, norm(attn): 0.0664, norm(output): 0.1089, norm(x): 0.1040, norm(y): 0.9997, norm:10.5715, tok/sec: 104072.11, flops:42.81, batch-reuse:1
@ 63 train 9.6683 , allloss: 10.8971, dt: 1284.67ms, fracRes: 0.0094, norm(attn): 0.0664, norm(output): 0.1089, norm(x): 0.1045, norm(y): 0.9997, norm:12.4588, tok/sec: 102028.03, flops:41.97, batch-reuse:1
@ 64 train 9.6450 , allloss: 10.9096, dt: 1280.19ms, fracRes: 0.0094, norm(attn): 0.0669, norm(output): 0.1089, norm(x): 0.1046, norm(y): 0.9997, norm:8.5642, tok/sec: 102384.80, flops:42.12, batch-reuse:1
@ 65 train 9.6617 , allloss: 10.9640, dt: 1263.07ms, fracRes: 0.0095, norm(attn): 0.0669, norm(output): 0.1089, norm(x): 0.1048, norm(y): 0.9997, norm:15.1040, tok/sec: 103772.96, flops:42.69, batch-reuse:1
@ 66 train 9.6487 , allloss: 10.8961, dt: 1282.13ms, fracRes: 0.0095, norm(attn): 0.0693, norm(output): 0.1094, norm(x): 0.1058, norm(y): 0.9997, norm:10.6873, tok/sec: 102229.79, flops:42.05, batch-reuse:1
@ 67 train 9.5783 , allloss: 10.8405, dt: 1259.47ms, fracRes: 0.0096, norm(attn): 0.0693, norm(output): 0.1099, norm(x): 0.1061, norm(y): 0.9997, norm:9.7795, tok/sec: 104068.78, flops:42.81, batch-reuse:1
@ 68 train 9.6189 , allloss: 10.9470, dt: 1289.63ms, fracRes: 0.0096, norm(attn): 0.0698, norm(output): 0.1094, norm(x): 0.1062, norm(y): 0.9997, norm:12.9762, tok/sec: 101635.02, flops:41.81, batch-reuse:1
@ 69 train 9.5890 , allloss: 10.8832, dt: 1282.57ms, fracRes: 0.0096, norm(attn): 0.0703, norm(output): 0.1099, norm(x): 0.1069, norm(y): 0.9997, norm:9.6886, tok/sec: 102194.57, flops:42.04, batch-reuse:1
@ 70 train 9.5846 , allloss: 10.8452, dt: 1268.79ms, fracRes: 0.0096, norm(attn): 0.0708, norm(output): 0.1099, norm(x): 0.1076, norm(y): 0.9997, norm:9.9499, tok/sec: 103304.98, flops:42.49, batch-reuse:1
@ 71 train 9.5811 , allloss: 10.8718, dt: 1281.95ms, fracRes: 0.0096, norm(attn): 0.0708, norm(output): 0.1099, norm(x): 0.1076, norm(y): 0.9997, norm:10.3652, tok/sec: 102243.91, flops:42.06, batch-reuse:1
@ 72 train 9.5604 , allloss: 10.8877, dt: 1284.36ms, fracRes: 0.0096, norm(attn): 0.0713, norm(output): 0.1099, norm(x): 0.1076, norm(y): 0.9997, norm:8.7997, tok/sec: 102052.64, flops:41.98, batch-reuse:1
@ 73 train 9.5850 , allloss: 10.9374, dt: 1287.07ms, fracRes: 0.0096, norm(attn): 0.0713, norm(output): 0.1099, norm(x): 0.1077, norm(y): 0.9997, norm:11.1964, tok/sec: 101837.13, flops:41.89, batch-reuse:1
@ 74 train 9.5599 , allloss: 10.8918, dt: 1267.65ms, fracRes: 0.0096, norm(attn): 0.0728, norm(output): 0.1099, norm(x): 0.1080, norm(y): 0.9997, norm:11.2561, tok/sec: 103397.62, flops:42.53, batch-reuse:1
@ 75 train 9.8026 , allloss: 11.1323, dt: 1268.79ms, fracRes: 0.0096, norm(attn): 0.0732, norm(output): 0.1113, norm(x): 0.1086, norm(y): 0.9997, norm:12.7939, tok/sec: 103305.01, flops:42.49, batch-reuse:1
@ 76 train 9.5584 , allloss: 10.9591, dt: 1264.34ms, fracRes: 0.0095, norm(attn): 0.0732, norm(output): 0.1113, norm(x): 0.1081, norm(y): 0.9997, norm:12.0133, tok/sec: 103668.46, flops:42.64, batch-reuse:1
@ 77 train 9.7402 , allloss: 11.1290, dt: 1283.39ms, fracRes: 0.0095, norm(attn): 0.0747, norm(output): 0.1133, norm(x): 0.1088, norm(y): 0.9997, norm:14.5051, tok/sec: 102129.27, flops:42.01, batch-reuse:1
@ 78 train 9.6068 , allloss: 11.0005, dt: 1313.46ms, fracRes: 0.0095, norm(attn): 0.0752, norm(output): 0.1113, norm(x): 0.1089, norm(y): 0.9997, norm:10.1544, tok/sec: 99791.53, flops:41.05, batch-reuse:1
@ 79 train 9.5145 , allloss: 10.9279, dt: 1316.67ms, fracRes: 0.0095, norm(attn): 0.0752, norm(output): 0.1113, norm(x): 0.1090, norm(y): 0.9997, norm:11.5031, tok/sec: 99548.22, flops:40.95, batch-reuse:1
@ 80 train 9.5399 , allloss: 10.9494, dt: 1317.16ms, fracRes: 0.0095, norm(attn): 0.0757, norm(output): 0.1128, norm(x): 0.1093, norm(y): 0.9997, norm:12.0707, tok/sec: 99511.17, flops:40.93, batch-reuse:1
@ 81 train 9.5318 , allloss: 10.9863, dt: 1313.05ms, fracRes: 0.0095, norm(attn): 0.0757, norm(output): 0.1152, norm(x): 0.1093, norm(y): 0.9997, norm:10.3508, tok/sec: 99822.20, flops:41.06, batch-reuse:1
@ 82 train 9.4743 , allloss: 10.9365, dt: 1278.82ms, fracRes: 0.0095, norm(attn): 0.0771, norm(output): 0.1157, norm(x): 0.1094, norm(y): 0.9997, norm:9.4908, tok/sec: 102494.81, flops:42.16, batch-reuse:1
@ 83 train 9.4990 , allloss: 10.9704, dt: 1291.47ms, fracRes: 0.0095, norm(attn): 0.0776, norm(output): 0.1157, norm(x): 0.1095, norm(y): 0.9997, norm:11.7221, tok/sec: 101490.66, flops:41.75, batch-reuse:1
@ 84 train 9.4898 , allloss: 11.0302, dt: 1286.40ms, fracRes: 0.0095, norm(attn): 0.0776, norm(output): 0.1157, norm(x): 0.1093, norm(y): 0.9997, norm:15.0986, tok/sec: 101890.75, flops:41.91, batch-reuse:1
@ 85 train 9.4714 , allloss: 10.9652, dt: 1272.39ms, fracRes: 0.0095, norm(attn): 0.0781, norm(output): 0.1157, norm(x): 0.1095, norm(y): 0.9997, norm:12.6969, tok/sec: 103012.47, flops:42.37, batch-reuse:1
@ 86 train 9.4441 , allloss: 11.0091, dt: 1260.08ms, fracRes: 0.0095, norm(attn): 0.0781, norm(output): 0.1152, norm(x): 0.1092, norm(y): 0.9997, norm:10.3318, tok/sec: 104018.43, flops:42.79, batch-reuse:1
@ 87 train 9.4696 , allloss: 11.0504, dt: 1260.90ms, fracRes: 0.0095, norm(attn): 0.0786, norm(output): 0.1157, norm(x): 0.1092, norm(y): 0.9997, norm:10.5056, tok/sec: 103951.48, flops:42.76, batch-reuse:1
@ 88 train 9.4711 , allloss: 11.0216, dt: 1284.55ms, fracRes: 0.0096, norm(attn): 0.0791, norm(output): 0.1157, norm(x): 0.1093, norm(y): 0.9997, norm:16.9079, tok/sec: 102037.27, flops:41.97, batch-reuse:1
@ 89 train 9.4313 , allloss: 11.0930, dt: 1260.55ms, fracRes: 0.0096, norm(attn): 0.0791, norm(output): 0.1152, norm(x): 0.1089, norm(y): 0.9997, norm:26.5407, tok/sec: 103979.63, flops:42.77, batch-reuse:1
@ 90 train 9.4443 , allloss: 11.0384, dt: 1267.11ms, fracRes: 0.0096, norm(attn): 0.0791, norm(output): 0.1162, norm(x): 0.1092, norm(y): 0.9997, norm:11.4792, tok/sec: 103441.72, flops:42.55, batch-reuse:1
@ 91 train 9.4466 , allloss: 11.0618, dt: 1299.42ms, fracRes: 0.0097, norm(attn): 0.0791, norm(output): 0.1152, norm(x): 0.1090, norm(y): 0.9997, norm:11.2972, tok/sec: 100869.28, flops:41.49, batch-reuse:1
@ 92 train 9.4179 , allloss: 11.1092, dt: 1279.79ms, fracRes: 0.0097, norm(attn): 0.0806, norm(output): 0.1167, norm(x): 0.1089, norm(y): 0.9997, norm:30.5320, tok/sec: 102416.66, flops:42.13, batch-reuse:1
@ 93 train 9.4354 , allloss: 11.0261, dt: 1267.16ms, fracRes: 0.0097, norm(attn): 0.0811, norm(output): 0.1167, norm(x): 0.1091, norm(y): 0.9997, norm:22.3773, tok/sec: 103437.52, flops:42.55, batch-reuse:1
@ 94 train 9.4983 , allloss: 11.1487, dt: 1280.27ms, fracRes: 0.0098, norm(attn): 0.0811, norm(output): 0.1162, norm(x): 0.1090, norm(y): 0.9997, norm:10.0090, tok/sec: 102378.17, flops:42.11, batch-reuse:1
@ 95 train 9.4183 , allloss: 11.1115, dt: 1267.93ms, fracRes: 0.0099, norm(attn): 0.0811, norm(output): 0.1167, norm(x): 0.1088, norm(y): 0.9997, norm:19.4284, tok/sec: 103375.12, flops:42.52, batch-reuse:1
@ 96 train 9.3814 , allloss: 10.9702, dt: 1275.02ms, fracRes: 0.0100, norm(attn): 0.0830, norm(output): 0.1167, norm(x): 0.1090, norm(y): 0.9997, norm:36.7874, tok/sec: 102799.68, flops:42.29, batch-reuse:1
@ 97 train 9.3859 , allloss: 11.0281, dt: 1291.64ms, fracRes: 0.0100, norm(attn): 0.0830, norm(output): 0.1167, norm(x): 0.1091, norm(y): 0.9997, norm:15.2163, tok/sec: 101477.54, flops:41.74, batch-reuse:1
@ 98 train 9.4135 , allloss: 11.2121, dt: 1312.82ms, fracRes: 0.0102, norm(attn): 0.0811, norm(output): 0.1172, norm(x): 0.1096, norm(y): 0.9997, norm:60.1883, tok/sec: 99840.13, flops:41.07, batch-reuse:1
@ 99 train 9.4043 , allloss: 11.1681, dt: 1272.68ms, fracRes: 0.0103, norm(attn): 0.0811, norm(output): 0.1172, norm(x): 0.1098, norm(y): 0.9997, norm:45.1869, tok/sec: 102989.10, flops:42.36, batch-reuse:1
@ 100 train 9.3661 , allloss: 10.9485, dt: 1280.73ms, fracRes: 0.0104, norm(attn): 0.0830, norm(output): 0.1167, norm(x): 0.1099, norm(y): 0.9997, norm:27.8105, tok/sec: 102341.48, flops:42.10, batch-reuse:1
@ 101 train 9.3421 , allloss: 10.8949, dt: 1281.67ms, fracRes: 0.0106, norm(attn): 0.0850, norm(output): 0.1172, norm(x): 0.1103, norm(y): 0.9997, norm:31.8223, tok/sec: 102266.53, flops:42.07, batch-reuse:1
@ 102 train 9.3522 , allloss: 10.9943, dt: 1276.39ms, fracRes: 0.0108, norm(attn): 0.0835, norm(output): 0.1177, norm(x): 0.1109, norm(y): 0.9997, norm:14.1877, tok/sec: 102689.32, flops:42.24, batch-reuse:1
@ 103 train 9.3726 , allloss: 10.9859, dt: 1306.52ms, fracRes: 0.0110, norm(attn): 0.0854, norm(output): 0.1177, norm(x): 0.1114, norm(y): 0.9997, norm:12.0756, tok/sec: 100321.48, flops:41.27, batch-reuse:1
@ 104 train 9.3782 , allloss: 10.8772, dt: 1318.24ms, fracRes: 0.0112, norm(attn): 0.0854, norm(output): 0.1177, norm(x): 0.1117, norm(y): 0.9997, norm:21.7257, tok/sec: 99429.26, flops:40.90, batch-reuse:1
@ 105 train 9.3365 , allloss: 10.8317, dt: 1256.43ms, fracRes: 0.0114, norm(attn): 0.0854, norm(output): 0.1187, norm(x): 0.1122, norm(y): 0.9997, norm:12.0853, tok/sec: 104321.02, flops:42.91, batch-reuse:1
@ 106 train 9.3561 , allloss: 10.9094, dt: 1286.91ms, fracRes: 0.0117, norm(attn): 0.0854, norm(output): 0.1191, norm(x): 0.1131, norm(y): 0.9997, norm:21.1697, tok/sec: 101850.41, flops:41.90, batch-reuse:1
@ 107 train 9.3253 , allloss: 10.8156, dt: 1310.90ms, fracRes: 0.0120, norm(attn): 0.0854, norm(output): 0.1230, norm(x): 0.1136, norm(y): 0.9997, norm:15.9902, tok/sec: 99986.62, flops:41.13, batch-reuse:1
@ 108 train 9.3207 , allloss: 10.6681, dt: 1296.48ms, fracRes: 0.0124, norm(attn): 0.0864, norm(output): 0.1230, norm(x): 0.1139, norm(y): 0.9997, norm:15.4877, tok/sec: 101098.60, flops:41.59, batch-reuse:1
@ 109 train 9.2707 , allloss: 10.5619, dt: 1284.37ms, fracRes: 0.0129, norm(attn): 0.0869, norm(output): 0.1235, norm(x): 0.1147, norm(y): 0.9997, norm:14.7917, tok/sec: 102051.67, flops:41.98, batch-reuse:1
@ 110 train 9.3098 , allloss: 10.6107, dt: 1301.91ms, fracRes: 0.0133, norm(attn): 0.0874, norm(output): 0.1245, norm(x): 0.1158, norm(y): 0.9997, norm:9.2427, tok/sec: 100676.59, flops:41.41, batch-reuse:1
@ 111 train 9.2911 , allloss: 10.5321, dt: 1314.14ms, fracRes: 0.0140, norm(attn): 0.0884, norm(output): 0.1250, norm(x): 0.1167, norm(y): 0.9998, norm:10.3243, tok/sec: 99739.44, flops:41.03, batch-reuse:1
@ 112 train 9.2647 , allloss: 10.3922, dt: 1317.22ms, fracRes: 0.0147, norm(attn): 0.0908, norm(output): 0.1260, norm(x): 0.1173, norm(y): 0.9998, norm:6.6155, tok/sec: 99506.45, flops:40.93, batch-reuse:1
@ 113 train 9.2398 , allloss: 10.2740, dt: 1306.54ms, fracRes: 0.0154, norm(attn): 0.0913, norm(output): 0.1260, norm(x): 0.1182, norm(y): 0.9998, norm:7.4572, tok/sec: 100320.20, flops:41.27, batch-reuse:1
@ 114 train 9.2382 , allloss: 10.2062, dt: 1310.93ms, fracRes: 0.0161, norm(attn): 0.0933, norm(output): 0.1270, norm(x): 0.1194, norm(y): 0.9998, norm:6.0096, tok/sec: 99984.11, flops:41.13, batch-reuse:1
@ 115 train 9.2111 , allloss: 10.1058, dt: 1314.81ms, fracRes: 0.0170, norm(attn): 0.0942, norm(output): 0.1279, norm(x): 0.1205, norm(y): 0.9998, norm:6.7638, tok/sec: 99688.65, flops:41.01, batch-reuse:1
@ 116 train 9.1836 , allloss: 10.0062, dt: 1290.87ms, fracRes: 0.0180, norm(attn): 0.0947, norm(output): 0.1318, norm(x): 0.1218, norm(y): 0.9998, norm:5.2947, tok/sec: 101537.46, flops:41.77, batch-reuse:1
@ 117 train 9.1550 , allloss: 9.9131, dt: 1270.75ms, fracRes: 0.0189, norm(attn): 0.0962, norm(output): 0.1318, norm(x): 0.1234, norm(y): 0.9998, norm:4.6739, tok/sec: 103145.32, flops:42.43, batch-reuse:1
@ 118 train 9.1349 , allloss: 9.8363, dt: 1292.11ms, fracRes: 0.0195, norm(attn): 0.1011, norm(output): 0.1338, norm(x): 0.1255, norm(y): 0.9998, norm:5.3369, tok/sec: 101439.93, flops:41.73, batch-reuse:1
@ 119 train 9.1371 , allloss: 9.8041, dt: 1304.14ms, fracRes: 0.0205, norm(attn): 0.1016, norm(output): 0.1387, norm(x): 0.1276, norm(y): 0.9998, norm:4.7516, tok/sec: 100504.36, flops:41.34, batch-reuse:1
@ 120 train 9.1724 , allloss: 9.8149, dt: 1307.90ms, fracRes: 0.0216, norm(attn): 0.1021, norm(output): 0.1396, norm(x): 0.1296, norm(y): 0.9999, norm:4.2193, tok/sec: 100215.91, flops:41.22, batch-reuse:1
@ 121 train 9.1790 , allloss: 9.7955, dt: 1280.19ms, fracRes: 0.0227, norm(attn): 0.1021, norm(output): 0.1406, norm(x): 0.1319, norm(y): 0.9999, norm:4.1897, tok/sec: 102384.90, flops:42.12, batch-reuse:1
@ 122 train 9.1542 , allloss: 9.7441, dt: 1300.43ms, fracRes: 0.0242, norm(attn): 0.1050, norm(output): 0.1426, norm(x): 0.1349, norm(y): 0.9999, norm:4.3562, tok/sec: 100791.29, flops:41.46, batch-reuse:1
@ 123 train 9.0730 , allloss: 9.6430, dt: 1309.14ms, fracRes: 0.0259, norm(attn): 0.1074, norm(output): 0.1465, norm(x): 0.1374, norm(y): 0.9999, norm:4.2637, tok/sec: 100120.33, flops:41.18, batch-reuse:1
@ 124 train 9.0740 , allloss: 9.6313, dt: 1296.29ms, fracRes: 0.0282, norm(attn): 0.1089, norm(output): 0.1484, norm(x): 0.1398, norm(y): 0.9999, norm:3.8398, tok/sec: 101113.42, flops:41.59, batch-reuse:1
@ 125 train 9.0650 , allloss: 9.6025, dt: 1270.36ms, fracRes: 0.0312, norm(attn): 0.1089, norm(output): 0.1533, norm(x): 0.1432, norm(y): 0.9999, norm:4.0264, tok/sec: 103177.30, flops:42.44, batch-reuse:1
@ 126 train 9.0538 , allloss: 9.5807, dt: 1293.57ms, fracRes: 0.0340, norm(attn): 0.1099, norm(output): 0.1553, norm(x): 0.1454, norm(y): 1.0000, norm:3.6731, tok/sec: 101326.18, flops:41.68, batch-reuse:1
@ 127 train 9.0265 , allloss: 9.5447, dt: 1300.63ms, fracRes: 0.0369, norm(attn): 0.1099, norm(output): 0.1562, norm(x): 0.1472, norm(y): 1.0000, norm:3.8530, tok/sec: 100776.16, flops:41.45, batch-reuse:1
@ 128 train 9.0057 , allloss: 9.5098, dt: 1270.62ms, fracRes: 0.0406, norm(attn): 0.1108, norm(output): 0.1572, norm(x): 0.1498, norm(y): 1.0000, norm:4.7143, tok/sec: 103155.72, flops:42.43, batch-reuse:1
@ 129 train 9.0657 , allloss: 9.5785, dt: 1283.58ms, fracRes: 0.0426, norm(attn): 0.1099, norm(output): 0.1572, norm(x): 0.1497, norm(y): 1.0000, norm:4.2445, tok/sec: 102114.62, flops:42.01, batch-reuse:1
@ 130 train 9.0065 , allloss: 9.5100, dt: 1257.28ms, fracRes: 0.0454, norm(attn): 0.1104, norm(output): 0.1621, norm(x): 0.1512, norm(y): 1.0000, norm:4.3826, tok/sec: 104250.57, flops:42.88, batch-reuse:1
@ 131 train 8.9916 , allloss: 9.5101, dt: 1268.85ms, fracRes: 0.0459, norm(attn): 0.1108, norm(output): 0.1572, norm(x): 0.1503, norm(y): 1.0000, norm:3.8314, tok/sec: 103299.99, flops:42.49, batch-reuse:1
@ 132 train 8.9736 , allloss: 9.5155, dt: 1261.46ms, fracRes: 0.0455, norm(attn): 0.1108, norm(output): 0.1572, norm(x): 0.1491, norm(y): 0.9999, norm:4.1177, tok/sec: 103905.41, flops:42.74, batch-reuse:1
@ 133 train 8.9424 , allloss: 9.5062, dt: 1263.51ms, fracRes: 0.0449, norm(attn): 0.1113, norm(output): 0.1572, norm(x): 0.1485, norm(y): 0.9999, norm:4.5994, tok/sec: 103736.34, flops:42.67, batch-reuse:1
@ 134 train 8.9123 , allloss: 9.5304, dt: 1263.47ms, fracRes: 0.0433, norm(attn): 0.1104, norm(output): 0.1572, norm(x): 0.1472, norm(y): 0.9999, norm:4.7930, tok/sec: 103739.69, flops:42.67, batch-reuse:1
@ 135 train 8.8982 , allloss: 9.5606, dt: 1267.83ms, fracRes: 0.0423, norm(attn): 0.1113, norm(output): 0.1562, norm(x): 0.1471, norm(y): 0.9999, norm:6.2008, tok/sec: 103382.64, flops:42.53, batch-reuse:1
@ 136 train 8.8803 , allloss: 9.5719, dt: 1265.09ms, fracRes: 0.0410, norm(attn): 0.1108, norm(output): 0.1572, norm(x): 0.1475, norm(y): 0.9999, norm:5.0755, tok/sec: 103606.61, flops:42.62, batch-reuse:1
@ 137 train 8.8360 , allloss: 9.5434, dt: 1270.88ms, fracRes: 0.0392, norm(attn): 0.1113, norm(output): 0.1572, norm(x): 0.1480, norm(y): 0.9999, norm:7.2229, tok/sec: 103135.09, flops:42.42, batch-reuse:1
@ 138 train 8.8135 , allloss: 9.4990, dt: 1285.83ms, fracRes: 0.0379, norm(attn): 0.1147, norm(output): 0.1582, norm(x): 0.1495, norm(y): 0.9999, norm:9.3765, tok/sec: 101936.02, flops:41.93, batch-reuse:1
@ 139 train 8.7370 , allloss: 9.5178, dt: 1267.03ms, fracRes: 0.0346, norm(attn): 0.1104, norm(output): 0.1572, norm(x): 0.1482, norm(y): 0.9999, norm:6.5757, tok/sec: 103448.36, flops:42.55, batch-reuse:1
@ 140 train 8.7969 , allloss: 9.6888, dt: 1288.93ms, fracRes: 0.0310, norm(attn): 0.1099, norm(output): 0.1572, norm(x): 0.1468, norm(y): 0.9999, norm:10.0285, tok/sec: 101690.78, flops:41.83, batch-reuse:1
@ 141 train 8.7825 , allloss: 9.6065, dt: 1315.84ms, fracRes: 0.0291, norm(attn): 0.1113, norm(output): 0.1572, norm(x): 0.1479, norm(y): 0.9999, norm:9.1287, tok/sec: 99610.57, flops:40.98, batch-reuse:1
@ 142 train 8.8109 , allloss: 9.6556, dt: 1319.31ms, fracRes: 0.0267, norm(attn): 0.1113, norm(output): 0.1572, norm(x): 0.1479, norm(y): 0.9999, norm:7.5268, tok/sec: 99349.19, flops:40.87, batch-reuse:1
@ 143 train 8.7813 , allloss: 9.7324, dt: 1296.63ms, fracRes: 0.0242, norm(attn): 0.1099, norm(output): 0.1572, norm(x): 0.1469, norm(y): 0.9998, norm:9.7541, tok/sec: 101086.61, flops:41.58, batch-reuse:1
@ 144 train 8.7548 , allloss: 9.7075, dt: 1288.02ms, fracRes: 0.0224, norm(attn): 0.1099, norm(output): 0.1572, norm(x): 0.1472, norm(y): 0.9998, norm:8.0060, tok/sec: 101762.21, flops:41.86, batch-reuse:1
@ 145 train 8.7756 , allloss: 9.7310, dt: 1251.65ms, fracRes: 0.0207, norm(attn): 0.1108, norm(output): 0.1572, norm(x): 0.1471, norm(y): 0.9998, norm:9.3639, tok/sec: 104719.46, flops:43.08, batch-reuse:1
@ 146 train 8.8001 , allloss: 9.8436, dt: 1277.96ms, fracRes: 0.0191, norm(attn): 0.1099, norm(output): 0.1562, norm(x): 0.1461, norm(y): 0.9998, norm:8.2569, tok/sec: 102563.61, flops:42.19, batch-reuse:1
@ 147 train 8.7243 , allloss: 9.8027, dt: 1267.12ms, fracRes: 0.0178, norm(attn): 0.1099, norm(output): 0.1553, norm(x): 0.1457, norm(y): 0.9998, norm:7.3290, tok/sec: 103441.12, flops:42.55, batch-reuse:1
@ 148 train 8.7288 , allloss: 9.8215, dt: 1271.72ms, fracRes: 0.0167, norm(attn): 0.1099, norm(output): 0.1553, norm(x): 0.1457, norm(y): 0.9998, norm:11.3450, tok/sec: 103066.56, flops:42.40, batch-reuse:1
@ 149 train 8.6513 , allloss: 9.8103, dt: 1295.86ms, fracRes: 0.0157, norm(attn): 0.1099, norm(output): 0.1562, norm(x): 0.1450, norm(y): 0.9998, norm:8.5430, tok/sec: 101146.56, flops:41.61, batch-reuse:1
@ 150 train 8.7293 , allloss: 9.9080, dt: 1328.66ms, fracRes: 0.0151, norm(attn): 0.1099, norm(output): 0.1562, norm(x): 0.1446, norm(y): 0.9998, norm:8.8896, tok/sec: 98650.07, flops:40.58, batch-reuse:1
@ 151 train 8.6310 , allloss: 9.8086, dt: 1295.87ms, fracRes: 0.0145, norm(attn): 0.1099, norm(output): 0.1553, norm(x): 0.1440, norm(y): 0.9998, norm:9.3859, tok/sec: 101145.83, flops:41.61, batch-reuse:1
@ 152 train 8.5949 , allloss: 9.8980, dt: 1326.33ms, fracRes: 0.0138, norm(attn): 0.1108, norm(output): 0.1543, norm(x): 0.1430, norm(y): 0.9998, norm:11.3697, tok/sec: 98823.30, flops:40.65, batch-reuse:1
@ 153 train 8.6475 , allloss: 9.8786, dt: 1280.88ms, fracRes: 0.0133, norm(attn): 0.1108, norm(output): 0.1543, norm(x): 0.1428, norm(y): 0.9998, norm:16.6872, tok/sec: 102329.65, flops:42.09, batch-reuse:1
@ 154 train 8.6697 , allloss: 10.0437, dt: 1291.12ms, fracRes: 0.0131, norm(attn): 0.1099, norm(output): 0.1543, norm(x): 0.1418, norm(y): 0.9998, norm:10.5763, tok/sec: 101517.81, flops:41.76, batch-reuse:1
@ 155 train 8.6963 , allloss: 10.0053, dt: 1273.39ms, fracRes: 0.0129, norm(attn): 0.1099, norm(output): 0.1543, norm(x): 0.1421, norm(y): 0.9998, norm:11.8265, tok/sec: 102931.79, flops:42.34, batch-reuse:1
@ 156 train 8.6389 , allloss: 10.0533, dt: 1274.56ms, fracRes: 0.0131, norm(attn): 0.1094, norm(output): 0.1553, norm(x): 0.1419, norm(y): 0.9998, norm:17.7278, tok/sec: 102837.35, flops:42.30, batch-reuse:1
@ 157 train 8.7053 , allloss: 9.9528, dt: 1263.95ms, fracRes: 0.0125, norm(attn): 0.1099, norm(output): 0.1553, norm(x): 0.1427, norm(y): 0.9998, norm:24.7875, tok/sec: 103700.32, flops:42.66, batch-reuse:1
@ 158 train 8.6605 , allloss: 10.0016, dt: 1270.71ms, fracRes: 0.0128, norm(attn): 0.1094, norm(output): 0.1553, norm(x): 0.1424, norm(y): 0.9998, norm:10.9598, tok/sec: 103148.96, flops:42.43, batch-reuse:1
@ 159 train 8.7294 , allloss: 10.3399, dt: 1254.56ms, fracRes: 0.0142, norm(attn): 0.1079, norm(output): 0.1553, norm(x): 0.1423, norm(y): 0.9998, norm:58.9585, tok/sec: 104476.21, flops:42.98, batch-reuse:1
@ 160 train 8.6423 , allloss: 10.1742, dt: 1260.76ms, fracRes: 0.0140, norm(attn): 0.1074, norm(output): 0.1543, norm(x): 0.1421, norm(y): 0.9998, norm:32.4525, tok/sec: 103962.41, flops:42.77, batch-reuse:1
@ 161 train 8.7023 , allloss: 9.9227, dt: 1276.04ms, fracRes: 0.0124, norm(attn): 0.1094, norm(output): 0.1553, norm(x): 0.1429, norm(y): 0.9998, norm:48.5864, tok/sec: 102717.78, flops:42.25, batch-reuse:1
@ 162 train 8.7778 , allloss: 9.9758, dt: 1304.90ms, fracRes: 0.0124, norm(attn): 0.1094, norm(output): 0.1553, norm(x): 0.1434, norm(y): 0.9998, norm:52.8398, tok/sec: 100445.67, flops:41.32, batch-reuse:1
@ 163 train 8.6384 , allloss: 10.0035, dt: 1287.47ms, fracRes: 0.0136, norm(attn): 0.1089, norm(output): 0.1553, norm(x): 0.1431, norm(y): 0.9998, norm:22.0588, tok/sec: 101805.84, flops:41.88, batch-reuse:1
@ 164 train 8.7129 , allloss: 10.4598, dt: 1298.31ms, fracRes: 0.0163, norm(attn): 0.1021, norm(output): 0.1572, norm(x): 0.1448, norm(y): 0.9998, norm:69.8682, tok/sec: 100955.85, flops:41.53, batch-reuse:1
@ 165 train 8.8146 , allloss: 10.6124, dt: 1319.22ms, fracRes: 0.0174, norm(attn): 0.1021, norm(output): 0.1611, norm(x): 0.1467, norm(y): 0.9998, norm:64.8736, tok/sec: 99355.62, flops:40.87, batch-reuse:1
@ 166 train 8.5810 , allloss: 10.2073, dt: 1292.01ms, fracRes: 0.0179, norm(attn): 0.1021, norm(output): 0.1582, norm(x): 0.1466, norm(y): 0.9998, norm:40.7952, tok/sec: 101448.18, flops:41.73, batch-reuse:1
@ 167 train 8.5930 , allloss: 9.9001, dt: 1287.46ms, fracRes: 0.0162, norm(attn): 0.1074, norm(output): 0.1602, norm(x): 0.1471, norm(y): 0.9998, norm:22.8219, tok/sec: 101806.95, flops:41.88, batch-reuse:1
@ 168 train 8.6225 , allloss: 9.8474, dt: 1301.08ms, fracRes: 0.0163, norm(attn): 0.1074, norm(output): 0.1611, norm(x): 0.1482, norm(y): 0.9998, norm:34.1772, tok/sec: 100740.76, flops:41.44, batch-reuse:1
@ 169 train 8.5975 , allloss: 9.8776, dt: 1298.51ms, fracRes: 0.0183, norm(attn): 0.1055, norm(output): 0.1621, norm(x): 0.1490, norm(y): 0.9998, norm:23.2366, tok/sec: 100940.41, flops:41.52, batch-reuse:1
@ 170 train 8.5514 , allloss: 10.0046, dt: 1308.46ms, fracRes: 0.0222, norm(attn): 0.1016, norm(output): 0.1641, norm(x): 0.1500, norm(y): 0.9999, norm:10.1459, tok/sec: 100172.78, flops:41.21, batch-reuse:1
@ 171 train 8.5578 , allloss: 10.0567, dt: 1283.40ms, fracRes: 0.0232, norm(attn): 0.1016, norm(output): 0.1660, norm(x): 0.1506, norm(y): 0.9999, norm:15.7514, tok/sec: 102129.00, flops:42.01, batch-reuse:1
@ 172 train 8.5458 , allloss: 9.9496, dt: 1291.99ms, fracRes: 0.0229, norm(attn): 0.1016, norm(output): 0.1621, norm(x): 0.1505, norm(y): 0.9999, norm:7.7646, tok/sec: 101449.77, flops:41.73, batch-reuse:1
@ 173 train 8.5407 , allloss: 9.8127, dt: 1261.77ms, fracRes: 0.0224, norm(attn): 0.1016, norm(output): 0.1650, norm(x): 0.1503, norm(y): 0.9998, norm:15.2233, tok/sec: 103879.43, flops:42.73, batch-reuse:1
@ 174 train 8.6248 , allloss: 9.8900, dt: 1269.36ms, fracRes: 0.0236, norm(attn): 0.1016, norm(output): 0.1660, norm(x): 0.1506, norm(y): 0.9999, norm:14.2168, tok/sec: 103258.72, flops:42.48, batch-reuse:1
@ 175 train 8.5277 , allloss: 9.8728, dt: 1264.66ms, fracRes: 0.0272, norm(attn): 0.1006, norm(output): 0.1660, norm(x): 0.1509, norm(y): 0.9999, norm:7.3470, tok/sec: 103641.86, flops:42.63, batch-reuse:1
@ 176 train 8.5284 , allloss: 9.9477, dt: 1280.03ms, fracRes: 0.0306, norm(attn): 0.0967, norm(output): 0.1670, norm(x): 0.1519, norm(y): 0.9999, norm:11.3181, tok/sec: 102397.83, flops:42.12, batch-reuse:1
@ 177 train 8.5092 , allloss: 9.8861, dt: 1268.56ms, fracRes: 0.0340, norm(attn): 0.0967, norm(output): 0.1689, norm(x): 0.1524, norm(y): 0.9999, norm:9.3288, tok/sec: 103323.26, flops:42.50, batch-reuse:1
@ 178 train 8.5432 , allloss: 9.7967, dt: 1292.24ms, fracRes: 0.0370, norm(attn): 0.0967, norm(output): 0.1670, norm(x): 0.1526, norm(y): 0.9999, norm:7.2703, tok/sec: 101430.01, flops:41.72, batch-reuse:1
@ 179 train 8.4823 , allloss: 9.6777, dt: 1265.94ms, fracRes: 0.0392, norm(attn): 0.0962, norm(output): 0.1670, norm(x): 0.1524, norm(y): 0.9999, norm:10.0718, tok/sec: 103537.69, flops:42.59, batch-reuse:1
@ 180 train 8.5202 , allloss: 9.7582, dt: 1267.73ms, fracRes: 0.0406, norm(attn): 0.0947, norm(output): 0.1670, norm(x): 0.1519, norm(y): 0.9999, norm:6.9583, tok/sec: 103390.71, flops:42.53, batch-reuse:1
@ 181 train 8.4954 , allloss: 9.8180, dt: 1271.55ms, fracRes: 0.0406, norm(attn): 0.0942, norm(output): 0.1660, norm(x): 0.1513, norm(y): 0.9999, norm:8.7728, tok/sec: 103080.34, flops:42.40, batch-reuse:1
@ 182 train 8.4906 , allloss: 9.7982, dt: 1266.71ms, fracRes: 0.0402, norm(attn): 0.0942, norm(output): 0.1660, norm(x): 0.1505, norm(y): 0.9999, norm:9.6650, tok/sec: 103474.37, flops:42.56, batch-reuse:1
@ 183 train 8.4464 , allloss: 9.6399, dt: 1283.91ms, fracRes: 0.0411, norm(attn): 0.0942, norm(output): 0.1621, norm(x): 0.1496, norm(y): 0.9999, norm:7.0151, tok/sec: 102088.24, flops:41.99, batch-reuse:1
@ 184 train 8.3658 , allloss: 9.4858, dt: 1319.38ms, fracRes: 0.0438, norm(attn): 0.0942, norm(output): 0.1621, norm(x): 0.1491, norm(y): 0.9999, norm:9.1353, tok/sec: 99344.00, flops:40.87, batch-reuse:1
@ 185 train 8.3875 , allloss: 9.5205, dt: 1285.13ms, fracRes: 0.0468, norm(attn): 0.0957, norm(output): 0.1621, norm(x): 0.1489, norm(y): 0.9999, norm:6.7027, tok/sec: 101991.44, flops:41.95, batch-reuse:1
@ 186 train 8.4679 , allloss: 9.5658, dt: 1273.47ms, fracRes: 0.0484, norm(attn): 0.0972, norm(output): 0.1621, norm(x): 0.1487, norm(y): 0.9999, norm:9.3178, tok/sec: 102924.72, flops:42.34, batch-reuse:1
@ 187 train 8.4688 , allloss: 9.4428, dt: 1287.20ms, fracRes: 0.0502, norm(attn): 0.0991, norm(output): 0.1621, norm(x): 0.1484, norm(y): 0.9999, norm:7.3229, tok/sec: 101826.98, flops:41.89, batch-reuse:1
@ 188 train 8.3441 , allloss: 9.2614, dt: 1284.91ms, fracRes: 0.0502, norm(attn): 0.1011, norm(output): 0.1621, norm(x): 0.1482, norm(y): 0.9999, norm:5.4282, tok/sec: 102008.84, flops:41.96, batch-reuse:1
@ 189 train 8.4225 , allloss: 9.3145, dt: 1300.30ms, fracRes: 0.0487, norm(attn): 0.1040, norm(output): 0.1621, norm(x): 0.1485, norm(y): 0.9999, norm:10.5332, tok/sec: 100801.36, flops:41.46, batch-reuse:1
@ 190 train 8.3783 , allloss: 9.1929, dt: 1303.40ms, fracRes: 0.0517, norm(attn): 0.1035, norm(output): 0.1621, norm(x): 0.1499, norm(y): 0.9999, norm:9.1929, tok/sec: 100561.38, flops:41.37, batch-reuse:1
@ 191 train 8.3513 , allloss: 9.1561, dt: 1283.83ms, fracRes: 0.0541, norm(attn): 0.1089, norm(output): 0.1660, norm(x): 0.1510, norm(y): 0.9999, norm:4.9726, tok/sec: 102094.16, flops:42.00, batch-reuse:1
@ 192 train 8.3607 , allloss: 9.1491, dt: 1304.45ms, fracRes: 0.0553, norm(attn): 0.1104, norm(output): 0.1670, norm(x): 0.1523, norm(y): 1.0000, norm:10.4706, tok/sec: 100480.68, flops:41.33, batch-reuse:1
@ 193 train 8.2870 , allloss: 9.0099, dt: 1308.34ms, fracRes: 0.0602, norm(attn): 0.1099, norm(output): 0.1709, norm(x): 0.1546, norm(y): 1.0000, norm:7.9951, tok/sec: 100181.79, flops:41.21, batch-reuse:1
@ 194 train 8.3204 , allloss: 9.0399, dt: 1304.32ms, fracRes: 0.0636, norm(attn): 0.1113, norm(output): 0.1709, norm(x): 0.1561, norm(y): 1.0000, norm:4.6216, tok/sec: 100490.63, flops:41.34, batch-reuse:1
@ 195 train 8.3122 , allloss: 9.0477, dt: 1307.60ms, fracRes: 0.0658, norm(attn): 0.1167, norm(output): 0.1719, norm(x): 0.1572, norm(y): 1.0000, norm:8.0869, tok/sec: 100238.27, flops:41.23, batch-reuse:1
@ 196 train 8.2406 , allloss: 8.9310, dt: 1309.65ms, fracRes: 0.0693, norm(attn): 0.1172, norm(output): 0.1729, norm(x): 0.1593, norm(y): 1.0000, norm:5.1536, tok/sec: 100081.43, flops:41.17, batch-reuse:1
@ 197 train 8.2329 , allloss: 8.9011, dt: 1257.73ms, fracRes: 0.0701, norm(attn): 0.1191, norm(output): 0.1738, norm(x): 0.1608, norm(y): 1.0000, norm:4.3879, tok/sec: 104213.42, flops:42.87, batch-reuse:1
@ 198 train 8.2068 , allloss: 8.8770, dt: 1272.28ms, fracRes: 0.0719, norm(attn): 0.1245, norm(output): 0.1768, norm(x): 0.1618, norm(y): 1.0000, norm:7.1395, tok/sec: 103020.98, flops:42.38, batch-reuse:1
@ 199 train 8.2344 , allloss: 8.8872, dt: 1273.84ms, fracRes: 0.0780, norm(attn): 0.1245, norm(output): 0.1768, norm(x): 0.1633, norm(y): 1.0000, norm:4.3337, tok/sec: 102895.34, flops:42.33, batch-reuse:1
@ 200 train 8.2340 , allloss: 8.8973, dt: 1288.47ms, fracRes: 0.0805, norm(attn): 0.1245, norm(output): 0.1768, norm(x): 0.1640, norm(y): 1.0000, norm:4.2062, tok/sec: 101726.83, flops:41.85, batch-reuse:1
@ 201 train 8.2320 , allloss: 8.9187, dt: 1313.73ms, fracRes: 0.0774, norm(attn): 0.1260, norm(output): 0.1777, norm(x): 0.1640, norm(y): 1.0001, norm:6.4312, tok/sec: 99770.86, flops:41.04, batch-reuse:1
@ 202 train 8.2419 , allloss: 8.9110, dt: 1267.56ms, fracRes: 0.0731, norm(attn): 0.1270, norm(output): 0.1816, norm(x): 0.1650, norm(y): 1.0001, norm:4.8722, tok/sec: 103405.06, flops:42.54, batch-reuse:1
@ 203 train 8.2109 , allloss: 8.9175, dt: 1285.15ms, fracRes: 0.0691, norm(attn): 0.1270, norm(output): 0.1816, norm(x): 0.1646, norm(y): 1.0001, norm:4.0616, tok/sec: 101989.59, flops:41.95, batch-reuse:1
@ 204 train 8.1876 , allloss: 8.9417, dt: 1305.50ms, fracRes: 0.0646, norm(attn): 0.1279, norm(output): 0.1816, norm(x): 0.1641, norm(y): 1.0001, norm:6.4437, tok/sec: 100399.88, flops:41.30, batch-reuse:1
@ 205 train 8.1596 , allloss: 8.8787, dt: 1266.15ms, fracRes: 0.0596, norm(attn): 0.1279, norm(output): 0.1787, norm(x): 0.1648, norm(y): 1.0000, norm:11.0630, tok/sec: 103519.93, flops:42.58, batch-reuse:1
@ 206 train 8.1730 , allloss: 8.9705, dt: 1291.01ms, fracRes: 0.0576, norm(attn): 0.1270, norm(output): 0.1768, norm(x): 0.1639, norm(y): 1.0000, norm:4.6086, tok/sec: 101526.83, flops:41.76, batch-reuse:1
@ 207 train 8.0725 , allloss: 8.9547, dt: 1277.15ms, fracRes: 0.0546, norm(attn): 0.1260, norm(output): 0.1768, norm(x): 0.1631, norm(y): 1.0000, norm:12.1194, tok/sec: 102628.67, flops:42.22, batch-reuse:1
@ 208 train 8.1715 , allloss: 8.9690, dt: 1286.61ms, fracRes: 0.0485, norm(attn): 0.1260, norm(output): 0.1768, norm(x): 0.1645, norm(y): 1.0000, norm:23.1670, tok/sec: 101873.72, flops:41.91, batch-reuse:1
@ 209 train 8.1606 , allloss: 9.0330, dt: 1306.66ms, fracRes: 0.0458, norm(attn): 0.1260, norm(output): 0.1768, norm(x): 0.1639, norm(y): 1.0000, norm:16.4166, tok/sec: 100310.43, flops:41.26, batch-reuse:1
@ 210 train 8.2557 , allloss: 9.4364, dt: 1283.94ms, fracRes: 0.0435, norm(attn): 0.1260, norm(output): 0.1768, norm(x): 0.1633, norm(y): 1.0001, norm:75.0140, tok/sec: 102086.03, flops:41.99, batch-reuse:1
@ 211 train 8.2026 , allloss: 9.3973, dt: 1295.62ms, fracRes: 0.0430, norm(attn): 0.1260, norm(output): 0.1816, norm(x): 0.1638, norm(y): 1.0001, norm:75.5627, tok/sec: 101165.80, flops:41.61, batch-reuse:1
@ 212 train 8.1345 , allloss: 9.0697, dt: 1306.19ms, fracRes: 0.0424, norm(attn): 0.1260, norm(output): 0.1816, norm(x): 0.1653, norm(y): 1.0000, norm:16.9882, tok/sec: 100346.79, flops:41.28, batch-reuse:1
@ 213 train 8.0793 , allloss: 9.0250, dt: 1275.27ms, fracRes: 0.0422, norm(attn): 0.1250, norm(output): 0.1816, norm(x): 0.1659, norm(y): 1.0000, norm:22.5754, tok/sec: 102780.09, flops:42.28, batch-reuse:1
@ 214 train 8.1294 , allloss: 9.3441, dt: 1291.53ms, fracRes: 0.0420, norm(attn): 0.1245, norm(output): 0.1826, norm(x): 0.1659, norm(y): 1.0000, norm:42.1368, tok/sec: 101485.96, flops:41.75, batch-reuse:1
@ 215 train 8.0381 , allloss: 9.1975, dt: 1296.56ms, fracRes: 0.0427, norm(attn): 0.1245, norm(output): 0.1826, norm(x): 0.1665, norm(y): 1.0000, norm:20.7716, tok/sec: 101091.97, flops:41.58, batch-reuse:1
@ 216 train 8.1422 , allloss: 9.0247, dt: 1290.37ms, fracRes: 0.0418, norm(attn): 0.1250, norm(output): 0.1855, norm(x): 0.1685, norm(y): 1.0000, norm:49.8718, tok/sec: 101577.09, flops:41.78, batch-reuse:1
@ 217 train 8.2111 , allloss: 9.0877, dt: 1307.57ms, fracRes: 0.0433, norm(attn): 0.1245, norm(output): 0.1855, norm(x): 0.1694, norm(y): 1.0000, norm:50.3421, tok/sec: 100241.05, flops:41.23, batch-reuse:1
@ 218 train 8.0771 , allloss: 9.1340, dt: 1291.49ms, fracRes: 0.0487, norm(attn): 0.1235, norm(output): 0.1865, norm(x): 0.1687, norm(y): 1.0000, norm:13.0190, tok/sec: 101489.23, flops:41.75, batch-reuse:1
@ 219 train 8.3547 , allloss: 9.8308, dt: 1274.67ms, fracRes: 0.0447, norm(attn): 0.1245, norm(output): 0.1885, norm(x): 0.1710, norm(y): 1.0001, norm:78.6018, tok/sec: 102827.79, flops:42.30, batch-reuse:1
@ 220 train 8.3920 , allloss: 9.9413, dt: 1268.53ms, fracRes: 0.0449, norm(attn): 0.1240, norm(output): 0.1914, norm(x): 0.1728, norm(y): 1.0001, norm:82.7372, tok/sec: 103326.12, flops:42.50, batch-reuse:1
@ 221 train 8.1600 , allloss: 9.5518, dt: 1251.62ms, fracRes: 0.0481, norm(attn): 0.1240, norm(output): 0.1885, norm(x): 0.1722, norm(y): 1.0001, norm:46.4773, tok/sec: 104721.76, flops:43.08, batch-reuse:1
@ 222 train 8.0796 , allloss: 9.1197, dt: 1316.47ms, fracRes: 0.0522, norm(attn): 0.1245, norm(output): 0.1885, norm(x): 0.1725, norm(y): 1.0000, norm:20.8201, tok/sec: 99563.52, flops:40.96, batch-reuse:1
@ 223 train 8.1792 , allloss: 9.1471, dt: 1294.13ms, fracRes: 0.0528, norm(attn): 0.1240, norm(output): 0.1885, norm(x): 0.1737, norm(y): 1.0000, norm:32.6291, tok/sec: 101281.67, flops:41.66, batch-reuse:1
@ 224 train 8.0738 , allloss: 9.1198, dt: 1262.88ms, fracRes: 0.0577, norm(attn): 0.1235, norm(output): 0.1885, norm(x): 0.1737, norm(y): 1.0001, norm:22.3049, tok/sec: 103788.49, flops:42.69, batch-reuse:1
@ 225 train 8.0235 , allloss: 9.3124, dt: 1282.04ms, fracRes: 0.0597, norm(attn): 0.1230, norm(output): 0.1895, norm(x): 0.1743, norm(y): 1.0001, norm:9.8433, tok/sec: 102237.01, flops:42.06, batch-reuse:1
@ 226 train 8.0673 , allloss: 9.4517, dt: 1290.10ms, fracRes: 0.0569, norm(attn): 0.1230, norm(output): 0.1924, norm(x): 0.1749, norm(y): 1.0001, norm:15.4832, tok/sec: 101597.96, flops:41.79, batch-reuse:1
@ 227 train 8.0636 , allloss: 9.3601, dt: 1288.29ms, fracRes: 0.0546, norm(attn): 0.1245, norm(output): 0.1914, norm(x): 0.1743, norm(y): 1.0001, norm:6.7194, tok/sec: 101740.90, flops:41.85, batch-reuse:1
@ 228 train 8.0717 , allloss: 9.2828, dt: 1275.11ms, fracRes: 0.0504, norm(attn): 0.1250, norm(output): 0.1914, norm(x): 0.1735, norm(y): 1.0001, norm:15.8487, tok/sec: 102792.55, flops:42.28, batch-reuse:1
@ 229 train 8.0924 , allloss: 9.3887, dt: 1282.07ms, fracRes: 0.0474, norm(attn): 0.1260, norm(output): 0.1895, norm(x): 0.1728, norm(y): 1.0001, norm:12.4691, tok/sec: 102234.67, flops:42.05, batch-reuse:1
@ 230 train 8.0853 , allloss: 9.6287, dt: 1297.02ms, fracRes: 0.0455, norm(attn): 0.1260, norm(output): 0.1895, norm(x): 0.1728, norm(y): 1.0001, norm:14.6083, tok/sec: 101056.05, flops:41.57, batch-reuse:1
@ 231 train 8.0199 , allloss: 9.5803, dt: 1278.31ms, fracRes: 0.0461, norm(attn): 0.1260, norm(output): 0.1885, norm(x): 0.1723, norm(y): 1.0001, norm:13.0023, tok/sec: 102535.39, flops:42.18, batch-reuse:1
@ 232 train 8.0136 , allloss: 9.3857, dt: 1270.01ms, fracRes: 0.0489, norm(attn): 0.1270, norm(output): 0.1885, norm(x): 0.1713, norm(y): 1.0001, norm:16.4845, tok/sec: 103205.31, flops:42.45, batch-reuse:1
@ 233 train 8.0619 , allloss: 9.4342, dt: 1285.00ms, fracRes: 0.0485, norm(attn): 0.1279, norm(output): 0.1885, norm(x): 0.1715, norm(y): 1.0001, norm:14.7033, tok/sec: 102001.70, flops:41.96, batch-reuse:1
@ 234 train 7.9728 , allloss: 9.5143, dt: 1305.14ms, fracRes: 0.0473, norm(attn): 0.1279, norm(output): 0.1895, norm(x): 0.1723, norm(y): 1.0001, norm:10.7621, tok/sec: 100427.50, flops:41.31, batch-reuse:1
@ 235 train 8.0296 , allloss: 9.5758, dt: 1294.65ms, fracRes: 0.0470, norm(attn): 0.1309, norm(output): 0.1895, norm(x): 0.1727, norm(y): 1.0001, norm:9.0995, tok/sec: 101241.65, flops:41.65, batch-reuse:1
@ 236 train 7.9712 , allloss: 9.3896, dt: 1280.62ms, fracRes: 0.0495, norm(attn): 0.1318, norm(output): 0.1885, norm(x): 0.1719, norm(y): 1.0001, norm:15.9539, tok/sec: 102350.24, flops:42.10, batch-reuse:1
@ 237 train 8.0332 , allloss: 9.5081, dt: 1251.24ms, fracRes: 0.0480, norm(attn): 0.1318, norm(output): 0.1885, norm(x): 0.1722, norm(y): 1.0001, norm:11.6809, tok/sec: 104753.84, flops:43.09, batch-reuse:1
@ 238 train 8.0132 , allloss: 9.6766, dt: 1280.21ms, fracRes: 0.0432, norm(attn): 0.1328, norm(output): 0.1895, norm(x): 0.1734, norm(y): 1.0001, norm:17.4753, tok/sec: 102383.13, flops:42.12, batch-reuse:1
@ 239 train 8.0162 , allloss: 9.6314, dt: 1291.11ms, fracRes: 0.0427, norm(attn): 0.1338, norm(output): 0.1895, norm(x): 0.1734, norm(y): 1.0001, norm:11.8128, tok/sec: 101519.01, flops:41.76, batch-reuse:1
@ 240 train 8.1021 , allloss: 9.5174, dt: 1280.56ms, fracRes: 0.0448, norm(attn): 0.1348, norm(output): 0.1885, norm(x): 0.1728, norm(y): 1.0001, norm:23.8768, tok/sec: 102355.41, flops:42.10, batch-reuse:1
@ 241 train 8.0791 , allloss: 9.5051, dt: 1286.40ms, fracRes: 0.0431, norm(attn): 0.1367, norm(output): 0.1885, norm(x): 0.1728, norm(y): 1.0001, norm:25.8221, tok/sec: 101890.65, flops:41.91, batch-reuse:1
@ 242 train 8.0436 , allloss: 9.6637, dt: 1316.96ms, fracRes: 0.0396, norm(attn): 0.1377, norm(output): 0.1885, norm(x): 0.1737, norm(y): 1.0001, norm:7.7674, tok/sec: 99526.50, flops:40.94, batch-reuse:1
@ 243 train 7.9506 , allloss: 9.6498, dt: 1306.70ms, fracRes: 0.0381, norm(attn): 0.1377, norm(output): 0.1895, norm(x): 0.1740, norm(y): 1.0001, norm:20.6127, tok/sec: 100307.68, flops:41.26, batch-reuse:1
@ 244 train 8.0491 , allloss: 9.6130, dt: 1266.08ms, fracRes: 0.0393, norm(attn): 0.1387, norm(output): 0.1885, norm(x): 0.1737, norm(y): 1.0001, norm:11.4564, tok/sec: 103526.01, flops:42.59, batch-reuse:1
@ 245 train 7.9400 , allloss: 9.5194, dt: 1285.49ms, fracRes: 0.0381, norm(attn): 0.1396, norm(output): 0.1885, norm(x): 0.1733, norm(y): 1.0001, norm:11.2527, tok/sec: 101962.39, flops:41.94, batch-reuse:1
@ 246 train 8.1507 , allloss: 9.9140, dt: 1281.20ms, fracRes: 0.0332, norm(attn): 0.1377, norm(output): 0.1885, norm(x): 0.1733, norm(y): 1.0001, norm:44.0598, tok/sec: 102304.08, flops:42.08, batch-reuse:1
@ 247 train 8.0472 , allloss: 9.7241, dt: 1287.88ms, fracRes: 0.0332, norm(attn): 0.1396, norm(output): 0.1885, norm(x): 0.1729, norm(y): 1.0001, norm:21.1324, tok/sec: 101773.56, flops:41.86, batch-reuse:1
@ 248 train 8.0718 , allloss: 9.5273, dt: 1278.09ms, fracRes: 0.0351, norm(attn): 0.1406, norm(output): 0.1885, norm(x): 0.1734, norm(y): 1.0001, norm:33.4037, tok/sec: 102553.03, flops:42.19, batch-reuse:1
@ 249 train 8.0441 , allloss: 9.4847, dt: 1290.09ms, fracRes: 0.0351, norm(attn): 0.1406, norm(output): 0.1895, norm(x): 0.1739, norm(y): 1.0001, norm:33.6205, tok/sec: 101599.09, flops:41.79, batch-reuse:1
@ 250 train 7.9793 , allloss: 9.5449, dt: 1323.75ms, fracRes: 0.0333, norm(attn): 0.1367, norm(output): 0.1885, norm(x): 0.1741, norm(y): 1.0001, norm:12.4600, tok/sec: 99015.89, flops:40.73, batch-reuse:1
@ 251 train 8.1457 , allloss: 10.0015, dt: 1313.60ms, fracRes: 0.0285, norm(attn): 0.1328, norm(output): 0.1885, norm(x): 0.1750, norm(y): 1.0001, norm:109.5526, tok/sec: 99780.71, flops:41.05, batch-reuse:1
@ 252 train 8.3414 , allloss: 10.2306, dt: 1303.26ms, fracRes: 0.0266, norm(attn): 0.1328, norm(output): 0.1914, norm(x): 0.1763, norm(y): 1.0001, norm:119.2253, tok/sec: 100572.13, flops:41.37, batch-reuse:1
@ 253 train 7.9500 , allloss: 9.6228, dt: 1278.93ms, fracRes: 0.0291, norm(attn): 0.1338, norm(output): 0.1924, norm(x): 0.1768, norm(y): 1.0001, norm:22.8384, tok/sec: 102485.48, flops:42.16, batch-reuse:1
@ 254 train 7.9409 , allloss: 9.4025, dt: 1289.95ms, fracRes: 0.0322, norm(attn): 0.1396, norm(output): 0.1973, norm(x): 0.1780, norm(y): 1.0001, norm:15.5975, tok/sec: 101610.34, flops:41.80, batch-reuse:1
@ 255 train 8.0032 , allloss: 9.4006, dt: 1298.42ms, fracRes: 0.0320, norm(attn): 0.1406, norm(output): 0.1982, norm(x): 0.1787, norm(y): 1.0001, norm:18.5857, tok/sec: 100947.57, flops:41.53, batch-reuse:1
@ 256 train 7.9549 , allloss: 9.3739, dt: 1286.96ms, fracRes: 0.0310, norm(attn): 0.1396, norm(output): 0.1982, norm(x): 0.1789, norm(y): 1.0001, norm:13.6350, tok/sec: 101846.26, flops:41.89, batch-reuse:1
@ 257 train 7.9375 , allloss: 9.4351, dt: 1310.20ms, fracRes: 0.0291, norm(attn): 0.1367, norm(output): 0.1982, norm(x): 0.1786, norm(y): 1.0001, norm:8.1842, tok/sec: 100039.51, flops:41.15, batch-reuse:1
@ 258 train 7.9050 , allloss: 9.5054, dt: 1310.59ms, fracRes: 0.0264, norm(attn): 0.1348, norm(output): 0.1924, norm(x): 0.1781, norm(y): 1.0001, norm:16.5432, tok/sec: 100009.83, flops:41.14, batch-reuse:1
@ 259 train 7.9202 , allloss: 9.5211, dt: 1312.84ms, fracRes: 0.0247, norm(attn): 0.1348, norm(output): 0.1924, norm(x): 0.1774, norm(y): 1.0002, norm:21.5434, tok/sec: 99838.16, flops:41.07, batch-reuse:1
@ 260 train 7.9529 , allloss: 9.4630, dt: 1312.91ms, fracRes: 0.0237, norm(attn): 0.1387, norm(output): 0.1924, norm(x): 0.1767, norm(y): 1.0001, norm:7.6414, tok/sec: 99833.01, flops:41.07, batch-reuse:1
@ 261 train 7.9255 , allloss: 9.3421, dt: 1302.80ms, fracRes: 0.0233, norm(attn): 0.1396, norm(output): 0.1914, norm(x): 0.1759, norm(y): 1.0001, norm:10.8536, tok/sec: 100608.11, flops:41.39, batch-reuse:1
@ 262 train 7.9367 , allloss: 9.3327, dt: 1315.67ms, fracRes: 0.0221, norm(attn): 0.1396, norm(output): 0.1914, norm(x): 0.1749, norm(y): 1.0001, norm:10.7611, tok/sec: 99623.82, flops:40.98, batch-reuse:1
@ 263 train 7.8944 , allloss: 9.3105, dt: 1300.59ms, fracRes: 0.0213, norm(attn): 0.1387, norm(output): 0.1895, norm(x): 0.1735, norm(y): 1.0002, norm:8.6059, tok/sec: 100779.21, flops:41.46, batch-reuse:1
@ 264 train 7.8709 , allloss: 9.2798, dt: 1268.77ms, fracRes: 0.0219, norm(attn): 0.1387, norm(output): 0.1875, norm(x): 0.1715, norm(y): 1.0002, norm:12.0883, tok/sec: 103306.00, flops:42.50, batch-reuse:1
@ 265 train 7.8528 , allloss: 9.1401, dt: 1262.59ms, fracRes: 0.0227, norm(attn): 0.1396, norm(output): 0.1875, norm(x): 0.1710, norm(y): 1.0002, norm:8.6105, tok/sec: 103812.13, flops:42.70, batch-reuse:1
@ 266 train 7.8654 , allloss: 8.9915, dt: 1292.51ms, fracRes: 0.0233, norm(attn): 0.1406, norm(output): 0.1875, norm(x): 0.1727, norm(y): 1.0002, norm:9.7770, tok/sec: 101408.55, flops:41.71, batch-reuse:1
@ 267 train 7.8166 , allloss: 8.8536, dt: 1291.95ms, fracRes: 0.0261, norm(attn): 0.1445, norm(output): 0.1885, norm(x): 0.1742, norm(y): 1.0002, norm:9.7949, tok/sec: 101452.86, flops:41.73, batch-reuse:1
@ 268 train 7.8699 , allloss: 8.8533, dt: 1284.90ms, fracRes: 0.0322, norm(attn): 0.1514, norm(output): 0.1914, norm(x): 0.1763, norm(y): 1.0002, norm:5.6290, tok/sec: 102009.82, flops:41.96, batch-reuse:1
@ 269 train 7.8023 , allloss: 8.7072, dt: 1299.93ms, fracRes: 0.0383, norm(attn): 0.1592, norm(output): 0.1924, norm(x): 0.1782, norm(y): 1.0003, norm:6.5813, tok/sec: 100830.07, flops:41.48, batch-reuse:1
@ 270 train 7.8716 , allloss: 8.6875, dt: 1284.50ms, fracRes: 0.0417, norm(attn): 0.1641, norm(output): 0.2012, norm(x): 0.1814, norm(y): 1.0003, norm:5.3747, tok/sec: 102041.54, flops:41.98, batch-reuse:1
@ 271 train 7.7803 , allloss: 8.5168, dt: 1282.40ms, fracRes: 0.0457, norm(attn): 0.1680, norm(output): 0.2021, norm(x): 0.1845, norm(y): 1.0003, norm:4.5451, tok/sec: 102208.61, flops:42.04, batch-reuse:1
@ 272 train 7.7857 , allloss: 8.4760, dt: 1315.55ms, fracRes: 0.0439, norm(attn): 0.1699, norm(output): 0.2041, norm(x): 0.1866, norm(y): 1.0003, norm:4.7005, tok/sec: 99632.52, flops:40.98, batch-reuse:1
@ 273 train 7.9192 , allloss: 8.5959, dt: 1288.37ms, fracRes: 0.0401, norm(attn): 0.1719, norm(output): 0.2041, norm(x): 0.1880, norm(y): 1.0003, norm:4.1949, tok/sec: 101734.48, flops:41.85, batch-reuse:1
@ 274 train 7.7896 , allloss: 8.4358, dt: 1270.75ms, fracRes: 0.0429, norm(attn): 0.1738, norm(output): 0.2041, norm(x): 0.1894, norm(y): 1.0003, norm:4.2915, tok/sec: 103145.21, flops:42.43, batch-reuse:1
@ 275 train 7.7761 , allloss: 8.3719, dt: 1273.48ms, fracRes: 0.0532, norm(attn): 0.1777, norm(output): 0.2070, norm(x): 0.1919, norm(y): 1.0003, norm:4.3263, tok/sec: 102924.64, flops:42.34, batch-reuse:1
@ 276 train 7.7401 , allloss: 8.3226, dt: 1275.92ms, fracRes: 0.0610, norm(attn): 0.1748, norm(output): 0.2129, norm(x): 0.1937, norm(y): 1.0003, norm:3.7550, tok/sec: 102727.37, flops:42.26, batch-reuse:1
@ 277 train 7.6664 , allloss: 8.2661, dt: 1287.79ms, fracRes: 0.0557, norm(attn): 0.1729, norm(output): 0.2129, norm(x): 0.1941, norm(y): 1.0003, norm:3.6777, tok/sec: 101780.85, flops:41.87, batch-reuse:1
@ 278 train 7.7485 , allloss: 8.3881, dt: 1313.17ms, fracRes: 0.0459, norm(attn): 0.1709, norm(output): 0.2129, norm(x): 0.1944, norm(y): 1.0003, norm:5.0431, tok/sec: 99813.29, flops:41.06, batch-reuse:1
@ 279 train 7.7189 , allloss: 8.2911, dt: 1260.29ms, fracRes: 0.0493, norm(attn): 0.1680, norm(output): 0.2148, norm(x): 0.1975, norm(y): 1.0003, norm:8.3323, tok/sec: 104001.11, flops:42.78, batch-reuse:1
@ 280 train 7.7807 , allloss: 8.4617, dt: 1284.32ms, fracRes: 0.0404, norm(attn): 0.1582, norm(output): 0.2148, norm(x): 0.1953, norm(y): 1.0003, norm:4.2238, tok/sec: 102055.55, flops:41.98, batch-reuse:1
@ 281 train 7.7184 , allloss: 8.4991, dt: 1285.72ms, fracRes: 0.0391, norm(attn): 0.1543, norm(output): 0.2070, norm(x): 0.1936, norm(y): 1.0003, norm:11.8491, tok/sec: 101944.39, flops:41.94, batch-reuse:1
@ 282 train 7.7257 , allloss: 8.3172, dt: 1289.21ms, fracRes: 0.0510, norm(attn): 0.1514, norm(output): 0.2178, norm(x): 0.1980, norm(y): 1.0003, norm:18.4882, tok/sec: 101668.59, flops:41.82, batch-reuse:1
@ 283 train 7.6659 , allloss: 8.3242, dt: 1312.71ms, fracRes: 0.0463, norm(attn): 0.1484, norm(output): 0.2178, norm(x): 0.1966, norm(y): 1.0003, norm:17.6512, tok/sec: 99848.56, flops:41.07, batch-reuse:1
@ 284 train 8.3169 , allloss: 9.7501, dt: 1305.98ms, fracRes: 0.0286, norm(attn): 0.1426, norm(output): 0.2129, norm(x): 0.1924, norm(y): 1.0002, norm:280.7072, tok/sec: 100362.67, flops:41.28, batch-reuse:1
@ 285 train 8.3610 , allloss: 9.8862, dt: 1299.90ms, fracRes: 0.0277, norm(attn): 0.1426, norm(output): 0.2148, norm(x): 0.1937, norm(y): 1.0002, norm:269.7274, tok/sec: 100832.03, flops:41.48, batch-reuse:1
@ 286 train 7.7933 , allloss: 8.6849, dt: 1262.79ms, fracRes: 0.0330, norm(attn): 0.1416, norm(output): 0.2178, norm(x): 0.1987, norm(y): 1.0002, norm:11.9568, tok/sec: 103795.25, flops:42.70, batch-reuse:1
@ 287 train 7.8611 , allloss: 8.4780, dt: 1265.68ms, fracRes: 0.0486, norm(attn): 0.1416, norm(output): 0.2197, norm(x): 0.2039, norm(y): 1.0002, norm:29.7707, tok/sec: 103558.32, flops:42.60, batch-reuse:1
@ 288 train 7.8538 , allloss: 8.4950, dt: 1257.15ms, fracRes: 0.0598, norm(attn): 0.1396, norm(output): 0.2217, norm(x): 0.2045, norm(y): 1.0002, norm:25.5005, tok/sec: 104261.33, flops:42.89, batch-reuse:1
@ 289 train 7.7275 , allloss: 8.6028, dt: 1283.33ms, fracRes: 0.0608, norm(attn): 0.1387, norm(output): 0.2197, norm(x): 0.2021, norm(y): 1.0002, norm:10.4549, tok/sec: 102134.41, flops:42.01, batch-reuse:1
@ 290 train 8.0010 , allloss: 9.4795, dt: 1313.99ms, fracRes: 0.0419, norm(attn): 0.1396, norm(output): 0.2217, norm(x): 0.2035, norm(y): 1.0003, norm:156.5232, tok/sec: 99750.99, flops:41.03, batch-reuse:1
@ 291 train 7.8758 , allloss: 9.2976, dt: 1302.64ms, fracRes: 0.0397, norm(attn): 0.1406, norm(output): 0.2227, norm(x): 0.2072, norm(y): 1.0002, norm:102.7892, tok/sec: 100620.61, flops:41.39, batch-reuse:1
@ 292 train 7.7650 , allloss: 8.6546, dt: 1291.91ms, fracRes: 0.0420, norm(attn): 0.1426, norm(output): 0.2334, norm(x): 0.2133, norm(y): 1.0002, norm:15.2904, tok/sec: 101456.29, flops:41.73, batch-reuse:1
@ 293 train 7.8294 , allloss: 8.5159, dt: 1321.98ms, fracRes: 0.0509, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.2171, norm(y): 1.0002, norm:17.6349, tok/sec: 99148.37, flops:40.78, batch-reuse:1
@ 294 train 7.7599 , allloss: 8.4614, dt: 1328.96ms, fracRes: 0.0671, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.2166, norm(y): 1.0002, norm:14.0556, tok/sec: 98627.20, flops:40.57, batch-reuse:1
@ 295 train 7.7088 , allloss: 8.5643, dt: 1318.95ms, fracRes: 0.0768, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.2145, norm(y): 1.0002, norm:7.4739, tok/sec: 99375.66, flops:40.88, batch-reuse:1
@ 296 train 7.6230 , allloss: 8.7947, dt: 1296.70ms, fracRes: 0.0702, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.2129, norm(y): 1.0003, norm:9.1838, tok/sec: 101081.24, flops:41.58, batch-reuse:1
@ 297 train 7.6099 , allloss: 8.8957, dt: 1277.27ms, fracRes: 0.0620, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.2142, norm(y): 1.0003, norm:14.5304, tok/sec: 102618.61, flops:42.21, batch-reuse:1
@ 298 train 7.7060 , allloss: 8.7815, dt: 1278.79ms, fracRes: 0.0578, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.2169, norm(y): 1.0002, norm:5.7922, tok/sec: 102496.95, flops:42.16, batch-reuse:1
@ 299 train 7.7627 , allloss: 8.6363, dt: 1288.48ms, fracRes: 0.0512, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.2199, norm(y): 1.0002, norm:11.5625, tok/sec: 101726.27, flops:41.85, batch-reuse:1
@ 300 train 7.7888 , allloss: 8.6511, dt: 1307.89ms, fracRes: 0.0462, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.2202, norm(y): 1.0002, norm:19.7330, tok/sec: 100216.62, flops:41.22, batch-reuse:1
@ 301 train 7.8602 , allloss: 8.8929, dt: 1272.36ms, fracRes: 0.0443, norm(attn): 0.1465, norm(output): 0.2354, norm(x): 0.2179, norm(y): 1.0002, norm:9.0705, tok/sec: 103014.98, flops:42.38, batch-reuse:1
@ 302 train 7.7503 , allloss: 9.2745, dt: 1283.43ms, fracRes: 0.0442, norm(attn): 0.1484, norm(output): 0.2334, norm(x): 0.2145, norm(y): 1.0002, norm:42.4701, tok/sec: 102126.70, flops:42.01, batch-reuse:1
@ 303 train 7.7905 , allloss: 9.3596, dt: 1282.54ms, fracRes: 0.0455, norm(attn): 0.1465, norm(output): 0.2344, norm(x): 0.2147, norm(y): 1.0002, norm:52.3732, tok/sec: 102197.27, flops:42.04, batch-reuse:1
@ 304 train 7.6752 , allloss: 8.8640, dt: 1301.93ms, fracRes: 0.0540, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.2167, norm(y): 1.0002, norm:10.5146, tok/sec: 100675.47, flops:41.41, batch-reuse:1
@ 305 train 7.6542 , allloss: 8.6933, dt: 1277.23ms, fracRes: 0.0525, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.2191, norm(y): 1.0002, norm:17.8627, tok/sec: 102621.89, flops:42.21, batch-reuse:1
@ 306 train 7.6584 , allloss: 8.7971, dt: 1287.78ms, fracRes: 0.0458, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.2190, norm(y): 1.0002, norm:9.7272, tok/sec: 101781.34, flops:41.87, batch-reuse:1
@ 307 train 7.8502 , allloss: 9.2815, dt: 1289.32ms, fracRes: 0.0393, norm(attn): 0.1475, norm(output): 0.2344, norm(x): 0.2171, norm(y): 1.0002, norm:25.4226, tok/sec: 101659.79, flops:41.82, batch-reuse:1
@ 308 train 7.6611 , allloss: 9.0975, dt: 1284.60ms, fracRes: 0.0415, norm(attn): 0.1475, norm(output): 0.2344, norm(x): 0.2156, norm(y): 1.0001, norm:6.9213, tok/sec: 102033.56, flops:41.97, batch-reuse:1
@ 309 train 7.7598 , allloss: 9.0255, dt: 1267.19ms, fracRes: 0.0425, norm(attn): 0.1484, norm(output): 0.2354, norm(x): 0.2169, norm(y): 1.0001, norm:27.0154, tok/sec: 103434.77, flops:42.55, batch-reuse:1
@ 310 train 7.7991 , allloss: 9.2451, dt: 1284.19ms, fracRes: 0.0387, norm(attn): 0.1484, norm(output): 0.2344, norm(x): 0.2161, norm(y): 1.0001, norm:21.9213, tok/sec: 102065.92, flops:41.99, batch-reuse:1
@ 311 train 7.8203 , allloss: 9.5433, dt: 1286.73ms, fracRes: 0.0353, norm(attn): 0.1504, norm(output): 0.2334, norm(x): 0.2160, norm(y): 1.0001, norm:55.4378, tok/sec: 101864.43, flops:41.90, batch-reuse:1
@ 312 train 7.8444 , allloss: 9.2201, dt: 1281.46ms, fracRes: 0.0346, norm(attn): 0.1514, norm(output): 0.2354, norm(x): 0.2190, norm(y): 1.0001, norm:7.1937, tok/sec: 102283.46, flops:42.07, batch-reuse:1
@ 313 train 7.6839 , allloss: 9.0276, dt: 1277.40ms, fracRes: 0.0364, norm(attn): 0.1504, norm(output): 0.2363, norm(x): 0.2195, norm(y): 1.0001, norm:8.0083, tok/sec: 102608.06, flops:42.21, batch-reuse:1
@ 314 train 7.6841 , allloss: 9.1973, dt: 1297.41ms, fracRes: 0.0376, norm(attn): 0.1465, norm(output): 0.2344, norm(x): 0.2180, norm(y): 1.0001, norm:26.6743, tok/sec: 101026.13, flops:41.56, batch-reuse:1
@ 315 train 7.7082 , allloss: 9.0313, dt: 1295.60ms, fracRes: 0.0407, norm(attn): 0.1465, norm(output): 0.2354, norm(x): 0.2191, norm(y): 1.0001, norm:12.4927, tok/sec: 101167.24, flops:41.62, batch-reuse:1
@ 316 train 7.7040 , allloss: 9.1280, dt: 1261.36ms, fracRes: 0.0386, norm(attn): 0.1455, norm(output): 0.2334, norm(x): 0.2171, norm(y): 1.0001, norm:6.3559, tok/sec: 103913.24, flops:42.74, batch-reuse:1
@ 317 train 7.8680 , allloss: 9.6069, dt: 1265.49ms, fracRes: 0.0263, norm(attn): 0.1455, norm(output): 0.2324, norm(x): 0.2153, norm(y): 1.0001, norm:100.2706, tok/sec: 103573.83, flops:42.61, batch-reuse:1
@ 318 train 7.7181 , allloss: 9.1514, dt: 1278.53ms, fracRes: 0.0248, norm(attn): 0.1465, norm(output): 0.2344, norm(x): 0.2167, norm(y): 1.0001, norm:16.8702, tok/sec: 102517.67, flops:42.17, batch-reuse:1
@ 319 train 7.6712 , allloss: 9.0000, dt: 1317.57ms, fracRes: 0.0263, norm(attn): 0.1445, norm(output): 0.2354, norm(x): 0.2174, norm(y): 1.0001, norm:27.4601, tok/sec: 99480.09, flops:40.92, batch-reuse:1
@ 320 train 7.7865 , allloss: 9.4235, dt: 1295.36ms, fracRes: 0.0226, norm(attn): 0.1445, norm(output): 0.2334, norm(x): 0.2156, norm(y): 1.0001, norm:98.6447, tok/sec: 101185.84, flops:41.62, batch-reuse:1
@ 321 train 7.7301 , allloss: 9.1366, dt: 1277.67ms, fracRes: 0.0257, norm(attn): 0.1426, norm(output): 0.2334, norm(x): 0.2172, norm(y): 1.0001, norm:11.8044, tok/sec: 102586.80, flops:42.20, batch-reuse:1
@ 322 train 7.7423 , allloss: 8.9081, dt: 1321.33ms, fracRes: 0.0249, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.2214, norm(y): 1.0001, norm:33.2377, tok/sec: 99196.84, flops:40.80, batch-reuse:1
@ 323 train 7.7440 , allloss: 8.9354, dt: 1296.14ms, fracRes: 0.0217, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.2212, norm(y): 1.0001, norm:19.0173, tok/sec: 101124.62, flops:41.60, batch-reuse:1
@ 324 train 7.7057 , allloss: 9.1731, dt: 1255.61ms, fracRes: 0.0203, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.2179, norm(y): 1.0002, norm:42.9750, tok/sec: 104389.26, flops:42.94, batch-reuse:1
@ 325 train 7.7236 , allloss: 9.1670, dt: 1290.32ms, fracRes: 0.0173, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.2191, norm(y): 1.0002, norm:31.2190, tok/sec: 101581.38, flops:41.79, batch-reuse:1
@ 326 train 7.7148 , allloss: 8.9022, dt: 1321.55ms, fracRes: 0.0175, norm(attn): 0.1426, norm(output): 0.2461, norm(x): 0.2233, norm(y): 1.0002, norm:7.8357, tok/sec: 99180.57, flops:40.80, batch-reuse:1
@ 327 train 7.7779 , allloss: 8.9100, dt: 1295.09ms, fracRes: 0.0132, norm(attn): 0.1406, norm(output): 0.2461, norm(x): 0.2242, norm(y): 1.0002, norm:8.7595, tok/sec: 101207.13, flops:41.63, batch-reuse:1
@ 328 train 7.6550 , allloss: 8.8172, dt: 1296.36ms, fracRes: 0.0124, norm(attn): 0.1396, norm(output): 0.2383, norm(x): 0.2216, norm(y): 1.0002, norm:4.8977, tok/sec: 101107.96, flops:41.59, batch-reuse:1
@ 329 train 7.7643 , allloss: 9.0180, dt: 1300.37ms, fracRes: 0.0118, norm(attn): 0.1406, norm(output): 0.2344, norm(x): 0.2190, norm(y): 1.0002, norm:44.3983, tok/sec: 100795.56, flops:41.46, batch-reuse:1
@ 330 train 7.7224 , allloss: 8.8448, dt: 1269.24ms, fracRes: 0.0117, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.2195, norm(y): 1.0002, norm:24.1417, tok/sec: 103268.28, flops:42.48, batch-reuse:1
@ 331 train 7.6862 , allloss: 8.6397, dt: 1285.29ms, fracRes: 0.0107, norm(attn): 0.1328, norm(output): 0.2383, norm(x): 0.2227, norm(y): 1.0002, norm:13.2833, tok/sec: 101978.26, flops:41.95, batch-reuse:1
@ 332 train 7.6701 , allloss: 8.5953, dt: 1303.55ms, fracRes: 0.0103, norm(attn): 0.1299, norm(output): 0.2461, norm(x): 0.2233, norm(y): 1.0002, norm:11.1557, tok/sec: 100550.22, flops:41.36, batch-reuse:1
@ 333 train 7.6603 , allloss: 8.6473, dt: 1313.78ms, fracRes: 0.0103, norm(attn): 0.1309, norm(output): 0.2393, norm(x): 0.2213, norm(y): 1.0002, norm:4.9756, tok/sec: 99767.42, flops:41.04, batch-reuse:1
@ 334 train 7.6318 , allloss: 8.7507, dt: 1262.62ms, fracRes: 0.0097, norm(attn): 0.1318, norm(output): 0.2354, norm(x): 0.2189, norm(y): 1.0003, norm:15.2633, tok/sec: 103809.19, flops:42.70, batch-reuse:1
@ 335 train 7.6427 , allloss: 8.7256, dt: 1279.28ms, fracRes: 0.0101, norm(attn): 0.1328, norm(output): 0.2354, norm(x): 0.2199, norm(y): 1.0003, norm:14.0722, tok/sec: 102457.67, flops:42.15, batch-reuse:1
@ 336 train 7.6317 , allloss: 8.5282, dt: 1274.41ms, fracRes: 0.0097, norm(attn): 0.1289, norm(output): 0.2461, norm(x): 0.2231, norm(y): 1.0002, norm:4.4570, tok/sec: 102849.24, flops:42.31, batch-reuse:1
@ 337 train 7.6690 , allloss: 8.4556, dt: 1287.55ms, fracRes: 0.0095, norm(attn): 0.1250, norm(output): 0.2461, norm(x): 0.2248, norm(y): 1.0002, norm:8.1988, tok/sec: 101799.88, flops:41.88, batch-reuse:1
@ 338 train 7.6124 , allloss: 8.3639, dt: 1264.58ms, fracRes: 0.0097, norm(attn): 0.1245, norm(output): 0.2461, norm(x): 0.2239, norm(y): 1.0003, norm:5.8856, tok/sec: 103649.01, flops:42.64, batch-reuse:1
@ 339 train 7.6501 , allloss: 8.4306, dt: 1290.66ms, fracRes: 0.0100, norm(attn): 0.1230, norm(output): 0.2402, norm(x): 0.2213, norm(y): 1.0003, norm:4.0339, tok/sec: 101554.16, flops:41.77, batch-reuse:1
@ 340 train 7.6823 , allloss: 8.4840, dt: 1285.30ms, fracRes: 0.0099, norm(attn): 0.1230, norm(output): 0.2363, norm(x): 0.2197, norm(y): 1.0003, norm:7.6409, tok/sec: 101977.71, flops:41.95, batch-reuse:1
@ 341 train 7.6107 , allloss: 8.3139, dt: 1318.13ms, fracRes: 0.0108, norm(attn): 0.1201, norm(output): 0.2393, norm(x): 0.2225, norm(y): 1.0003, norm:4.1617, tok/sec: 99438.11, flops:40.90, batch-reuse:1
@ 342 train 7.5602 , allloss: 8.1801, dt: 1255.04ms, fracRes: 0.0107, norm(attn): 0.1172, norm(output): 0.2480, norm(x): 0.2259, norm(y): 1.0003, norm:6.4820, tok/sec: 104436.66, flops:42.96, batch-reuse:1
@ 343 train 7.5859 , allloss: 8.2365, dt: 1283.89ms, fracRes: 0.0109, norm(attn): 0.1172, norm(output): 0.2461, norm(x): 0.2258, norm(y): 1.0004, norm:4.0068, tok/sec: 102089.70, flops:41.99, batch-reuse:1
@ 344 train 7.5753 , allloss: 8.4016, dt: 1289.21ms, fracRes: 0.0113, norm(attn): 0.1182, norm(output): 0.2412, norm(x): 0.2228, norm(y): 1.0004, norm:12.5231, tok/sec: 101668.81, flops:41.82, batch-reuse:1
@ 345 train 7.5850 , allloss: 8.3482, dt: 1282.58ms, fracRes: 0.0116, norm(attn): 0.1172, norm(output): 0.2461, norm(x): 0.2251, norm(y): 1.0004, norm:5.3321, tok/sec: 102193.89, flops:42.04, batch-reuse:1
@ 346 train 7.6492 , allloss: 8.2331, dt: 1294.81ms, fracRes: 0.0120, norm(attn): 0.1147, norm(output): 0.2500, norm(x): 0.2315, norm(y): 1.0004, norm:7.2388, tok/sec: 101228.77, flops:41.64, batch-reuse:1
@ 347 train 7.6679 , allloss: 8.2394, dt: 1268.82ms, fracRes: 0.0134, norm(attn): 0.1147, norm(output): 0.2500, norm(x): 0.2327, norm(y): 1.0004, norm:7.0156, tok/sec: 103302.10, flops:42.49, batch-reuse:1
@ 348 train 7.5823 , allloss: 8.2566, dt: 1292.89ms, fracRes: 0.0137, norm(attn): 0.1172, norm(output): 0.2500, norm(x): 0.2299, norm(y): 1.0004, norm:3.1351, tok/sec: 101378.93, flops:41.70, batch-reuse:1
@ 349 train 7.6403 , allloss: 8.4920, dt: 1314.95ms, fracRes: 0.0152, norm(attn): 0.1216, norm(output): 0.2490, norm(x): 0.2279, norm(y): 1.0004, norm:14.5910, tok/sec: 99678.10, flops:41.00, batch-reuse:1
@ 350 train 7.6384 , allloss: 8.3437, dt: 1304.91ms, fracRes: 0.0150, norm(attn): 0.1196, norm(output): 0.2500, norm(x): 0.2308, norm(y): 1.0004, norm:3.5715, tok/sec: 100444.88, flops:41.32, batch-reuse:1
@ 351 train 7.6524 , allloss: 8.2350, dt: 1309.67ms, fracRes: 0.0172, norm(attn): 0.1201, norm(output): 0.2520, norm(x): 0.2349, norm(y): 1.0004, norm:6.2274, tok/sec: 100080.34, flops:41.17, batch-reuse:1
@ 352 train 7.6845 , allloss: 8.2976, dt: 1320.29ms, fracRes: 0.0170, norm(attn): 0.1250, norm(output): 0.2520, norm(x): 0.2346, norm(y): 1.0004, norm:4.9982, tok/sec: 99275.40, flops:40.84, batch-reuse:1
@ 353 train 7.6485 , allloss: 8.4486, dt: 1319.48ms, fracRes: 0.0179, norm(attn): 0.1309, norm(output): 0.2520, norm(x): 0.2322, norm(y): 1.0004, norm:20.7461, tok/sec: 99336.07, flops:40.86, batch-reuse:1
@ 354 train 7.6091 , allloss: 8.3594, dt: 1274.56ms, fracRes: 0.0197, norm(attn): 0.1318, norm(output): 0.2520, norm(x): 0.2339, norm(y): 1.0004, norm:9.4951, tok/sec: 102836.96, flops:42.30, batch-reuse:1
@ 355 train 7.5928 , allloss: 8.1827, dt: 1278.78ms, fracRes: 0.0192, norm(attn): 0.1260, norm(output): 0.2637, norm(x): 0.2384, norm(y): 1.0004, norm:8.3400, tok/sec: 102497.47, flops:42.16, batch-reuse:1
@ 356 train 7.6830 , allloss: 8.3053, dt: 1286.62ms, fracRes: 0.0187, norm(attn): 0.1260, norm(output): 0.2637, norm(x): 0.2395, norm(y): 1.0004, norm:5.1758, tok/sec: 101873.11, flops:41.91, batch-reuse:1
@ 357 train 7.6293 , allloss: 8.3736, dt: 1257.75ms, fracRes: 0.0189, norm(attn): 0.1279, norm(output): 0.2617, norm(x): 0.2380, norm(y): 1.0005, norm:4.1560, tok/sec: 104211.53, flops:42.87, batch-reuse:1
@ 358 train 7.5570 , allloss: 8.4321, dt: 1277.53ms, fracRes: 0.0199, norm(attn): 0.1318, norm(output): 0.2617, norm(x): 0.2374, norm(y): 1.0004, norm:4.4780, tok/sec: 102597.76, flops:42.20, batch-reuse:1
@ 359 train 7.7917 , allloss: 8.6405, dt: 1267.12ms, fracRes: 0.0192, norm(attn): 0.1328, norm(output): 0.2598, norm(x): 0.2400, norm(y): 1.0004, norm:5.2033, tok/sec: 103440.90, flops:42.55, batch-reuse:1
@ 360 train 7.6602 , allloss: 8.5186, dt: 1306.56ms, fracRes: 0.0180, norm(attn): 0.1348, norm(output): 0.2637, norm(x): 0.2399, norm(y): 1.0004, norm:4.1981, tok/sec: 100318.48, flops:41.27, batch-reuse:1
@ 361 train 7.6281 , allloss: 8.4830, dt: 1302.50ms, fracRes: 0.0158, norm(attn): 0.1357, norm(output): 0.2637, norm(x): 0.2396, norm(y): 1.0005, norm:3.8493, tok/sec: 100631.33, flops:41.39, batch-reuse:1
@ 362 train 7.5149 , allloss: 8.4429, dt: 1272.06ms, fracRes: 0.0150, norm(attn): 0.1396, norm(output): 0.2617, norm(x): 0.2390, norm(y): 1.0005, norm:5.4744, tok/sec: 103039.33, flops:42.39, batch-reuse:1
@ 363 train 7.5887 , allloss: 8.4235, dt: 1277.48ms, fracRes: 0.0140, norm(attn): 0.1396, norm(output): 0.2617, norm(x): 0.2394, norm(y): 1.0005, norm:6.3610, tok/sec: 102601.74, flops:42.21, batch-reuse:1
@ 364 train 7.6192 , allloss: 8.5378, dt: 1315.18ms, fracRes: 0.0132, norm(attn): 0.1416, norm(output): 0.2637, norm(x): 0.2401, norm(y): 1.0005, norm:6.1708, tok/sec: 99661.15, flops:41.00, batch-reuse:1
@ 365 train 7.6187 , allloss: 8.5318, dt: 1299.44ms, fracRes: 0.0124, norm(attn): 0.1416, norm(output): 0.2617, norm(x): 0.2393, norm(y): 1.0005, norm:3.7924, tok/sec: 100867.89, flops:41.49, batch-reuse:1
@ 366 train 7.6241 , allloss: 8.5549, dt: 1287.38ms, fracRes: 0.0112, norm(attn): 0.1416, norm(output): 0.2617, norm(x): 0.2385, norm(y): 1.0005, norm:4.4720, tok/sec: 101812.74, flops:41.88, batch-reuse:1
@ 367 train 7.5728 , allloss: 8.5988, dt: 1294.45ms, fracRes: 0.0099, norm(attn): 0.1465, norm(output): 0.2617, norm(x): 0.2376, norm(y): 1.0005, norm:6.6985, tok/sec: 101256.85, flops:41.65, batch-reuse:1
@ 368 train 7.6558 , allloss: 8.6106, dt: 1285.85ms, fracRes: 0.0086, norm(attn): 0.1484, norm(output): 0.2578, norm(x): 0.2367, norm(y): 1.0004, norm:5.0951, tok/sec: 101934.22, flops:41.93, batch-reuse:1
@ 369 train 7.6237 , allloss: 8.6697, dt: 1283.77ms, fracRes: 0.0078, norm(attn): 0.1523, norm(output): 0.2559, norm(x): 0.2363, norm(y): 1.0004, norm:10.8949, tok/sec: 102098.92, flops:42.00, batch-reuse:1
@ 370 train 7.6666 , allloss: 8.6939, dt: 1328.94ms, fracRes: 0.0071, norm(attn): 0.1553, norm(output): 0.2598, norm(x): 0.2361, norm(y): 1.0004, norm:4.1698, tok/sec: 98628.81, flops:40.57, batch-reuse:1
@ 371 train 7.6151 , allloss: 8.7049, dt: 1288.66ms, fracRes: 0.0068, norm(attn): 0.1572, norm(output): 0.2559, norm(x): 0.2362, norm(y): 1.0005, norm:4.4727, tok/sec: 101711.95, flops:41.84, batch-reuse:1
@ 372 train 7.6890 , allloss: 8.7380, dt: 1296.54ms, fracRes: 0.0063, norm(attn): 0.1602, norm(output): 0.2617, norm(x): 0.2368, norm(y): 1.0005, norm:4.6439, tok/sec: 101093.38, flops:41.59, batch-reuse:1
@ 373 train 7.7041 , allloss: 8.8755, dt: 1299.50ms, fracRes: 0.0059, norm(attn): 0.1631, norm(output): 0.2559, norm(x): 0.2377, norm(y): 1.0004, norm:9.3152, tok/sec: 100863.22, flops:41.49, batch-reuse:1
@ 374 train 7.7084 , allloss: 8.7227, dt: 1278.60ms, fracRes: 0.0056, norm(attn): 0.1660, norm(output): 0.2617, norm(x): 0.2376, norm(y): 1.0005, norm:11.5823, tok/sec: 102512.12, flops:42.17, batch-reuse:1
@ 375 train 7.7424 , allloss: 8.8753, dt: 1297.92ms, fracRes: 0.0053, norm(attn): 0.1660, norm(output): 0.2637, norm(x): 0.2389, norm(y): 1.0005, norm:3.9564, tok/sec: 100986.12, flops:41.54, batch-reuse:1
@ 376 train 7.8118 , allloss: 9.0573, dt: 1291.18ms, fracRes: 0.0048, norm(attn): 0.1650, norm(output): 0.2656, norm(x): 0.2412, norm(y): 1.0005, norm:16.2011, tok/sec: 101513.41, flops:41.76, batch-reuse:1
@ 377 train 7.6963 , allloss: 8.7341, dt: 1268.28ms, fracRes: 0.0047, norm(attn): 0.1660, norm(output): 0.2656, norm(x): 0.2417, norm(y): 1.0005, norm:7.1581, tok/sec: 103346.34, flops:42.51, batch-reuse:1
@ 378 train 7.6496 , allloss: 8.6998, dt: 1258.67ms, fracRes: 0.0043, norm(attn): 0.1660, norm(output): 0.2656, norm(x): 0.2438, norm(y): 1.0005, norm:3.9204, tok/sec: 104134.92, flops:42.84, batch-reuse:1
@ 379 train 7.7330 , allloss: 8.8359, dt: 1289.63ms, fracRes: 0.0042, norm(attn): 0.1611, norm(output): 0.2695, norm(x): 0.2469, norm(y): 1.0005, norm:8.4899, tok/sec: 101635.45, flops:41.81, batch-reuse:1
@ 380 train 7.7766 , allloss: 8.7463, dt: 1262.95ms, fracRes: 0.0044, norm(attn): 0.1602, norm(output): 0.2773, norm(x): 0.2493, norm(y): 1.0005, norm:5.7924, tok/sec: 103782.67, flops:42.69, batch-reuse:1
@ 381 train 7.7241 , allloss: 8.7151, dt: 1290.41ms, fracRes: 0.0042, norm(attn): 0.1592, norm(output): 0.2773, norm(x): 0.2515, norm(y): 1.0005, norm:4.5596, tok/sec: 101573.73, flops:41.78, batch-reuse:1
@ 382 train 7.6668 , allloss: 8.7277, dt: 1315.18ms, fracRes: 0.0040, norm(attn): 0.1553, norm(output): 0.2793, norm(x): 0.2535, norm(y): 1.0005, norm:6.5348, tok/sec: 99661.11, flops:41.00, batch-reuse:1
@ 383 train 7.6632 , allloss: 8.6030, dt: 1319.41ms, fracRes: 0.0038, norm(attn): 0.1553, norm(output): 0.2812, norm(x): 0.2553, norm(y): 1.0006, norm:4.1736, tok/sec: 99341.20, flops:40.86, batch-reuse:1
@ 384 train 7.6539 , allloss: 8.5510, dt: 1281.98ms, fracRes: 0.0037, norm(attn): 0.1553, norm(output): 0.2812, norm(x): 0.2563, norm(y): 1.0006, norm:4.2249, tok/sec: 102241.61, flops:42.06, batch-reuse:1
@ 385 train 7.6145 , allloss: 8.5298, dt: 1325.64ms, fracRes: 0.0037, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2559, norm(y): 1.0006, norm:5.0580, tok/sec: 98874.33, flops:40.67, batch-reuse:1
@ 386 train 7.6725 , allloss: 8.4557, dt: 1304.34ms, fracRes: 0.0037, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2594, norm(y): 1.0006, norm:5.6325, tok/sec: 100489.40, flops:41.34, batch-reuse:1
@ 387 train 7.6489 , allloss: 8.3568, dt: 1278.89ms, fracRes: 0.0036, norm(attn): 0.1582, norm(output): 0.2832, norm(x): 0.2613, norm(y): 1.0006, norm:5.1010, tok/sec: 102488.52, flops:42.16, batch-reuse:1
@ 388 train 7.5819 , allloss: 8.2589, dt: 1303.21ms, fracRes: 0.0038, norm(attn): 0.1562, norm(output): 0.2832, norm(x): 0.2610, norm(y): 1.0006, norm:9.1581, tok/sec: 100576.56, flops:41.37, batch-reuse:1
@ 389 train 7.6595 , allloss: 8.1957, dt: 1299.16ms, fracRes: 0.0069, norm(attn): 0.1602, norm(output): 0.2930, norm(x): 0.2703, norm(y): 1.0007, norm:7.8940, tok/sec: 100889.45, flops:41.50, batch-reuse:1
@ 390 train 7.6929 , allloss: 8.1650, dt: 1298.60ms, fracRes: 0.0177, norm(attn): 0.1602, norm(output): 0.3027, norm(x): 0.2773, norm(y): 1.0007, norm:5.2733, tok/sec: 100933.69, flops:41.52, batch-reuse:1
@ 391 train 7.6421 , allloss: 8.0719, dt: 1288.04ms, fracRes: 0.0224, norm(attn): 0.1533, norm(output): 0.3047, norm(x): 0.2805, norm(y): 1.0007, norm:9.4119, tok/sec: 101761.20, flops:41.86, batch-reuse:1
@ 392 train 7.6743 , allloss: 8.0968, dt: 1288.47ms, fracRes: 0.0160, norm(attn): 0.1582, norm(output): 0.3066, norm(x): 0.2804, norm(y): 1.0007, norm:8.9423, tok/sec: 101727.06, flops:41.85, batch-reuse:1
@ 393 train 7.6173 , allloss: 8.0444, dt: 1293.02ms, fracRes: 0.0175, norm(attn): 0.1709, norm(output): 0.3086, norm(x): 0.2804, norm(y): 1.0007, norm:2.8962, tok/sec: 101368.81, flops:41.70, batch-reuse:1
@ 394 train 7.5971 , allloss: 8.0004, dt: 1269.34ms, fracRes: 0.0071, norm(attn): 0.1807, norm(output): 0.3125, norm(x): 0.2862, norm(y): 1.0007, norm:5.2979, tok/sec: 103260.33, flops:42.48, batch-reuse:1
@ 395 train 7.7301 , allloss: 8.1353, dt: 1278.51ms, fracRes: 0.0036, norm(attn): 0.1855, norm(output): 0.3125, norm(x): 0.2870, norm(y): 1.0008, norm:8.6804, tok/sec: 102519.54, flops:42.17, batch-reuse:1
@ 396 train 7.5062 , allloss: 7.8823, dt: 1283.34ms, fracRes: 0.0034, norm(attn): 0.1855, norm(output): 0.3125, norm(x): 0.2879, norm(y): 1.0007, norm:6.9963, tok/sec: 102133.72, flops:42.01, batch-reuse:1
@ 397 train 7.6279 , allloss: 7.9844, dt: 1274.89ms, fracRes: 0.0034, norm(attn): 0.1836, norm(output): 0.3164, norm(x): 0.2922, norm(y): 1.0007, norm:6.9118, tok/sec: 102810.19, flops:42.29, batch-reuse:1
@ 398 train 7.6566 , allloss: 7.9754, dt: 1277.57ms, fracRes: 0.0036, norm(attn): 0.1816, norm(output): 0.3242, norm(x): 0.3011, norm(y): 1.0008, norm:7.9827, tok/sec: 102595.09, flops:42.20, batch-reuse:1
@ 399 train 7.6337 , allloss: 7.9326, dt: 1281.88ms, fracRes: 0.0038, norm(attn): 0.1787, norm(output): 0.3340, norm(x): 0.3062, norm(y): 1.0008, norm:3.8512, tok/sec: 102250.13, flops:42.06, batch-reuse:1
@ 400 train 7.6389 , allloss: 7.9329, dt: 1274.37ms, fracRes: 0.0036, norm(attn): 0.1836, norm(output): 0.3320, norm(x): 0.3068, norm(y): 1.0008, norm:2.3890, tok/sec: 102852.68, flops:42.31, batch-reuse:1
@ 401 train 7.6855 , allloss: 7.9969, dt: 1295.07ms, fracRes: 0.0035, norm(attn): 0.1865, norm(output): 0.3242, norm(x): 0.3002, norm(y): 1.0008, norm:7.8282, tok/sec: 101208.75, flops:41.63, batch-reuse:1
@ 402 train 7.6867 , allloss: 7.9962, dt: 1271.96ms, fracRes: 0.0035, norm(attn): 0.1885, norm(output): 0.3242, norm(x): 0.2987, norm(y): 1.0007, norm:17.9817, tok/sec: 103046.94, flops:42.39, batch-reuse:1
@ 403 train 7.6739 , allloss: 7.9828, dt: 1284.58ms, fracRes: 0.0035, norm(attn): 0.1904, norm(output): 0.3262, norm(x): 0.2996, norm(y): 1.0007, norm:8.6165, tok/sec: 102035.19, flops:41.97, batch-reuse:1
@ 404 train 7.6265 , allloss: 7.9176, dt: 1274.80ms, fracRes: 0.0038, norm(attn): 0.1875, norm(output): 0.3320, norm(x): 0.3043, norm(y): 1.0008, norm:21.2949, tok/sec: 102818.02, flops:42.29, batch-reuse:1
@ 405 train 7.6057 , allloss: 7.8761, dt: 1273.73ms, fracRes: 0.0037, norm(attn): 0.1855, norm(output): 0.3398, norm(x): 0.3118, norm(y): 1.0008, norm:12.5377, tok/sec: 102904.45, flops:42.33, batch-reuse:1
@ 406 train 7.6085 , allloss: 7.8567, dt: 1295.72ms, fracRes: 0.0038, norm(attn): 0.1836, norm(output): 0.3457, norm(x): 0.3232, norm(y): 1.0009, norm:6.0127, tok/sec: 101157.31, flops:41.61, batch-reuse:1
@ 407 train 7.6284 , allloss: 7.8638, dt: 1293.90ms, fracRes: 0.0040, norm(attn): 0.1777, norm(output): 0.3594, norm(x): 0.3310, norm(y): 1.0009, norm:6.1555, tok/sec: 101300.26, flops:41.67, batch-reuse:1
@ 408 train 7.6268 , allloss: 7.8698, dt: 1304.14ms, fracRes: 0.0039, norm(attn): 0.1758, norm(output): 0.3574, norm(x): 0.3311, norm(y): 1.0009, norm:3.4136, tok/sec: 100504.91, flops:41.34, batch-reuse:1
@ 409 train 7.5468 , allloss: 7.8013, dt: 1300.78ms, fracRes: 0.0039, norm(attn): 0.1777, norm(output): 0.3535, norm(x): 0.3277, norm(y): 1.0008, norm:4.9796, tok/sec: 100763.93, flops:41.45, batch-reuse:1
@ 410 train 7.5625 , allloss: 7.8224, dt: 1299.02ms, fracRes: 0.0038, norm(attn): 0.1777, norm(output): 0.3535, norm(x): 0.3290, norm(y): 1.0008, norm:4.8093, tok/sec: 100900.49, flops:41.51, batch-reuse:1
@ 411 train 7.5703 , allloss: 7.8370, dt: 1331.12ms, fracRes: 0.0038, norm(attn): 0.1748, norm(output): 0.3594, norm(x): 0.3298, norm(y): 1.0008, norm:3.2294, tok/sec: 98467.56, flops:40.50, batch-reuse:1
@ 412 train 7.5684 , allloss: 7.8308, dt: 1312.26ms, fracRes: 0.0038, norm(attn): 0.1729, norm(output): 0.3652, norm(x): 0.3338, norm(y): 1.0008, norm:2.5255, tok/sec: 99882.42, flops:41.09, batch-reuse:1
@ 413 train 7.3824 , allloss: 7.6188, dt: 1270.29ms, fracRes: 0.0039, norm(attn): 0.1719, norm(output): 0.3691, norm(x): 0.3405, norm(y): 1.0008, norm:6.0508, tok/sec: 103182.40, flops:42.44, batch-reuse:1
@ 414 train 7.5637 , allloss: 7.8006, dt: 1264.77ms, fracRes: 0.0039, norm(attn): 0.1709, norm(output): 0.3770, norm(x): 0.3463, norm(y): 1.0008, norm:2.4297, tok/sec: 103632.72, flops:42.63, batch-reuse:1
@ 415 train 7.4886 , allloss: 7.7157, dt: 1290.75ms, fracRes: 0.0040, norm(attn): 0.1660, norm(output): 0.3770, norm(x): 0.3477, norm(y): 1.0008, norm:3.3418, tok/sec: 101547.18, flops:41.77, batch-reuse:1
@ 416 train 7.5852 , allloss: 7.8164, dt: 1289.40ms, fracRes: 0.0039, norm(attn): 0.1689, norm(output): 0.3770, norm(x): 0.3468, norm(y): 1.0008, norm:3.8430, tok/sec: 101653.68, flops:41.82, batch-reuse:1
@ 417 train 7.5209 , allloss: 7.7567, dt: 1281.60ms, fracRes: 0.0038, norm(attn): 0.1709, norm(output): 0.3711, norm(x): 0.3408, norm(y): 1.0008, norm:2.3320, tok/sec: 102272.16, flops:42.07, batch-reuse:1
@ 418 train 7.5893 , allloss: 7.8265, dt: 1261.34ms, fracRes: 0.0037, norm(attn): 0.1729, norm(output): 0.3711, norm(x): 0.3406, norm(y): 1.0008, norm:3.7929, tok/sec: 103914.85, flops:42.75, batch-reuse:1
@ 419 train 7.5440 , allloss: 7.7766, dt: 1288.49ms, fracRes: 0.0037, norm(attn): 0.1719, norm(output): 0.3730, norm(x): 0.3414, norm(y): 1.0008, norm:5.4113, tok/sec: 101725.48, flops:41.85, batch-reuse:1
@ 420 train 7.4864 , allloss: 7.7049, dt: 1294.75ms, fracRes: 0.0037, norm(attn): 0.1689, norm(output): 0.3750, norm(x): 0.3461, norm(y): 1.0008, norm:2.2088, tok/sec: 101233.71, flops:41.64, batch-reuse:1
@ 421 train 7.6543 , allloss: 7.8666, dt: 1278.48ms, fracRes: 0.0039, norm(attn): 0.1582, norm(output): 0.3789, norm(x): 0.3533, norm(y): 1.0008, norm:4.5458, tok/sec: 102521.49, flops:42.17, batch-reuse:1
@ 422 train 7.5858 , allloss: 7.7875, dt: 1290.41ms, fracRes: 0.0040, norm(attn): 0.1562, norm(output): 0.3848, norm(x): 0.3582, norm(y): 1.0008, norm:3.3747, tok/sec: 101574.10, flops:41.78, batch-reuse:1
@ 423 train 7.6083 , allloss: 7.8228, dt: 1317.64ms, fracRes: 0.0036, norm(attn): 0.1621, norm(output): 0.3809, norm(x): 0.3546, norm(y): 1.0008, norm:2.7745, tok/sec: 99474.71, flops:40.92, batch-reuse:1
@ 424 train 7.5053 , allloss: 7.7217, dt: 1314.65ms, fracRes: 0.0036, norm(attn): 0.1641, norm(output): 0.3770, norm(x): 0.3512, norm(y): 1.0008, norm:1.9747, tok/sec: 99700.98, flops:41.01, batch-reuse:1
@ 425 train 7.6080 , allloss: 7.8187, dt: 1325.62ms, fracRes: 0.0036, norm(attn): 0.1572, norm(output): 0.3828, norm(x): 0.3559, norm(y): 1.0007, norm:10.4683, tok/sec: 98875.82, flops:40.67, batch-reuse:1
@ 426 train 7.4856 , allloss: 7.6914, dt: 1314.93ms, fracRes: 0.0036, norm(attn): 0.1553, norm(output): 0.3809, norm(x): 0.3557, norm(y): 1.0008, norm:6.9788, tok/sec: 99679.98, flops:41.00, batch-reuse:1
@ 427 train 7.5667 , allloss: 7.7802, dt: 1325.17ms, fracRes: 0.0035, norm(attn): 0.1553, norm(output): 0.3828, norm(x): 0.3550, norm(y): 1.0008, norm:10.7561, tok/sec: 98909.91, flops:40.69, batch-reuse:1
@ 428 train 7.5067 , allloss: 7.7158, dt: 1308.50ms, fracRes: 0.0036, norm(attn): 0.1553, norm(output): 0.3848, norm(x): 0.3583, norm(y): 1.0008, norm:8.2605, tok/sec: 100169.53, flops:41.21, batch-reuse:1
@ 429 train 7.4475 , allloss: 7.6422, dt: 1274.23ms, fracRes: 0.0035, norm(attn): 0.1553, norm(output): 0.4004, norm(x): 0.3665, norm(y): 1.0008, norm:5.7789, tok/sec: 102863.88, flops:42.31, batch-reuse:1
@ 430 train 7.5279 , allloss: 7.7216, dt: 1301.24ms, fracRes: 0.0034, norm(attn): 0.1514, norm(output): 0.4043, norm(x): 0.3703, norm(y): 1.0008, norm:5.9120, tok/sec: 100728.22, flops:41.43, batch-reuse:1
@ 431 train 7.5154 , allloss: 7.7135, dt: 1299.57ms, fracRes: 0.0035, norm(attn): 0.1484, norm(output): 0.4043, norm(x): 0.3688, norm(y): 1.0008, norm:4.8608, tok/sec: 100857.67, flops:41.49, batch-reuse:1
@ 432 train 7.5352 , allloss: 7.7301, dt: 1273.21ms, fracRes: 0.0035, norm(attn): 0.1436, norm(output): 0.4043, norm(x): 0.3717, norm(y): 1.0008, norm:3.2394, tok/sec: 102946.13, flops:42.35, batch-reuse:1
@ 433 train 7.5544 , allloss: 7.7522, dt: 1297.15ms, fracRes: 0.0034, norm(attn): 0.1475, norm(output): 0.4043, norm(x): 0.3727, norm(y): 1.0008, norm:6.8054, tok/sec: 101045.83, flops:41.57, batch-reuse:1
@ 434 train 7.5558 , allloss: 7.7671, dt: 1274.81ms, fracRes: 0.0034, norm(attn): 0.1523, norm(output): 0.4023, norm(x): 0.3684, norm(y): 1.0007, norm:3.0591, tok/sec: 102817.11, flops:42.29, batch-reuse:1
@ 435 train 7.5382 , allloss: 7.7650, dt: 1273.73ms, fracRes: 0.0034, norm(attn): 0.1553, norm(output): 0.3965, norm(x): 0.3634, norm(y): 1.0007, norm:9.2766, tok/sec: 102904.39, flops:42.33, batch-reuse:1
@ 436 train 7.6324 , allloss: 7.8620, dt: 1286.30ms, fracRes: 0.0033, norm(attn): 0.1523, norm(output): 0.3984, norm(x): 0.3653, norm(y): 1.0007, norm:8.6821, tok/sec: 101898.51, flops:41.92, batch-reuse:1
@ 437 train 7.5264 , allloss: 7.7407, dt: 1276.06ms, fracRes: 0.0034, norm(attn): 0.1475, norm(output): 0.4043, norm(x): 0.3710, norm(y): 1.0007, norm:2.9443, tok/sec: 102716.38, flops:42.25, batch-reuse:1
@ 438 train 7.6556 , allloss: 7.8677, dt: 1296.91ms, fracRes: 0.0034, norm(attn): 0.1455, norm(output): 0.4082, norm(x): 0.3764, norm(y): 1.0007, norm:3.8094, tok/sec: 101065.13, flops:41.57, batch-reuse:1
@ 439 train 7.4398 , allloss: 7.6463, dt: 1310.72ms, fracRes: 0.0034, norm(attn): 0.1426, norm(output): 0.4062, norm(x): 0.3743, norm(y): 1.0007, norm:4.3469, tok/sec: 100000.11, flops:41.14, batch-reuse:1
@ 440 train 7.4209 , allloss: 7.6224, dt: 1289.97ms, fracRes: 0.0034, norm(attn): 0.1426, norm(output): 0.4082, norm(x): 0.3769, norm(y): 1.0007, norm:2.4367, tok/sec: 101608.93, flops:41.80, batch-reuse:1
@ 441 train 7.4835 , allloss: 7.6826, dt: 1296.04ms, fracRes: 0.0034, norm(attn): 0.1475, norm(output): 0.4082, norm(x): 0.3795, norm(y): 1.0007, norm:8.0733, tok/sec: 101132.94, flops:41.60, batch-reuse:1
@ 442 train 7.5538 , allloss: 7.7595, dt: 1317.67ms, fracRes: 0.0034, norm(attn): 0.1514, norm(output): 0.4082, norm(x): 0.3786, norm(y): 1.0007, norm:7.0566, tok/sec: 99472.89, flops:40.92, batch-reuse:1
@ 443 train 7.5524 , allloss: 7.7708, dt: 1289.06ms, fracRes: 0.0035, norm(attn): 0.1504, norm(output): 0.4062, norm(x): 0.3741, norm(y): 1.0007, norm:4.3967, tok/sec: 101680.38, flops:41.83, batch-reuse:1
@ 444 train 7.5231 , allloss: 7.7412, dt: 1272.53ms, fracRes: 0.0035, norm(attn): 0.1465, norm(output): 0.4062, norm(x): 0.3747, norm(y): 1.0007, norm:5.8339, tok/sec: 103000.85, flops:42.37, batch-reuse:1
@ 445 train 7.4410 , allloss: 7.6535, dt: 1279.68ms, fracRes: 0.0034, norm(attn): 0.1465, norm(output): 0.4062, norm(x): 0.3758, norm(y): 1.0007, norm:6.1737, tok/sec: 102425.70, flops:42.13, batch-reuse:1
@ 446 train 7.4880 , allloss: 7.7095, dt: 1295.71ms, fracRes: 0.0034, norm(attn): 0.1484, norm(output): 0.4062, norm(x): 0.3754, norm(y): 1.0006, norm:2.5739, tok/sec: 101158.52, flops:41.61, batch-reuse:1
@ 447 train 7.4752 , allloss: 7.7009, dt: 1287.99ms, fracRes: 0.0035, norm(attn): 0.1455, norm(output): 0.4062, norm(x): 0.3737, norm(y): 1.0006, norm:5.6050, tok/sec: 101765.08, flops:41.86, batch-reuse:1
@ 448 train 7.4657 , allloss: 7.6835, dt: 1278.96ms, fracRes: 0.0036, norm(attn): 0.1416, norm(output): 0.4082, norm(x): 0.3776, norm(y): 1.0006, norm:4.6916, tok/sec: 102483.63, flops:42.16, batch-reuse:1
@ 449 train 7.4089 , allloss: 7.6203, dt: 1275.29ms, fracRes: 0.0035, norm(attn): 0.1484, norm(output): 0.4082, norm(x): 0.3786, norm(y): 1.0006, norm:4.1636, tok/sec: 102777.83, flops:42.28, batch-reuse:1
@ 450 train 7.4850 , allloss: 7.7047, dt: 1295.15ms, fracRes: 0.0035, norm(attn): 0.1553, norm(output): 0.4062, norm(x): 0.3765, norm(y): 1.0006, norm:3.3023, tok/sec: 101202.17, flops:41.63, batch-reuse:1
@ 451 train 7.4455 , allloss: 7.6641, dt: 1327.85ms, fracRes: 0.0037, norm(attn): 0.1543, norm(output): 0.4062, norm(x): 0.3759, norm(y): 1.0006, norm:1.7620, tok/sec: 98709.90, flops:40.60, batch-reuse:1
@ 452 train 7.5277 , allloss: 7.7384, dt: 1304.45ms, fracRes: 0.0038, norm(attn): 0.1504, norm(output): 0.4082, norm(x): 0.3812, norm(y): 1.0006, norm:9.5344, tok/sec: 100480.29, flops:41.33, batch-reuse:1
@ 453 train 7.5005 , allloss: 7.7148, dt: 1291.74ms, fracRes: 0.0038, norm(attn): 0.1484, norm(output): 0.4082, norm(x): 0.3793, norm(y): 1.0006, norm:7.6208, tok/sec: 101468.98, flops:41.74, batch-reuse:1
@ 454 train 7.4817 , allloss: 7.7110, dt: 1301.26ms, fracRes: 0.0037, norm(attn): 0.1514, norm(output): 0.4043, norm(x): 0.3720, norm(y): 1.0006, norm:7.8448, tok/sec: 100726.69, flops:41.43, batch-reuse:1
@ 455 train 7.5455 , allloss: 7.7772, dt: 1316.78ms, fracRes: 0.0037, norm(attn): 0.1553, norm(output): 0.4043, norm(x): 0.3725, norm(y): 1.0006, norm:5.2444, tok/sec: 99540.00, flops:40.95, batch-reuse:1
@ 456 train 7.5093 , allloss: 7.7271, dt: 1313.47ms, fracRes: 0.0036, norm(attn): 0.1562, norm(output): 0.4082, norm(x): 0.3759, norm(y): 1.0005, norm:11.5559, tok/sec: 99790.73, flops:41.05, batch-reuse:1
@ 457 train 7.5990 , allloss: 7.8178, dt: 1293.03ms, fracRes: 0.0038, norm(attn): 0.1553, norm(output): 0.4062, norm(x): 0.3792, norm(y): 1.0005, norm:9.9076, tok/sec: 101367.99, flops:41.70, batch-reuse:1
@ 458 train 7.5644 , allloss: 7.7885, dt: 1316.41ms, fracRes: 0.0039, norm(attn): 0.1494, norm(output): 0.4102, norm(x): 0.3789, norm(y): 1.0005, norm:3.6857, tok/sec: 99567.76, flops:40.96, batch-reuse:1
@ 459 train 7.4605 , allloss: 7.6780, dt: 1294.91ms, fracRes: 0.0040, norm(attn): 0.1484, norm(output): 0.4102, norm(x): 0.3814, norm(y): 1.0005, norm:5.6075, tok/sec: 101220.81, flops:41.64, batch-reuse:1
@ 460 train 7.4155 , allloss: 7.6362, dt: 1288.62ms, fracRes: 0.0040, norm(attn): 0.1562, norm(output): 0.4082, norm(x): 0.3786, norm(y): 1.0005, norm:1.3468, tok/sec: 101714.77, flops:41.84, batch-reuse:1
@ 461 train 7.4634 , allloss: 7.6924, dt: 1286.70ms, fracRes: 0.0039, norm(attn): 0.1572, norm(output): 0.4062, norm(x): 0.3748, norm(y): 1.0005, norm:3.6870, tok/sec: 101866.51, flops:41.90, batch-reuse:1
@ 462 train 7.5172 , allloss: 7.7592, dt: 1294.66ms, fracRes: 0.0040, norm(attn): 0.1562, norm(output): 0.4043, norm(x): 0.3711, norm(y): 1.0005, norm:9.7022, tok/sec: 101240.58, flops:41.65, batch-reuse:1
@ 463 train 7.4878 , allloss: 7.7255, dt: 1301.47ms, fracRes: 0.0040, norm(attn): 0.1553, norm(output): 0.4043, norm(x): 0.3714, norm(y): 1.0005, norm:5.1129, tok/sec: 100710.90, flops:41.43, batch-reuse:1
@ 464 train 7.4740 , allloss: 7.6927, dt: 1310.92ms, fracRes: 0.0040, norm(attn): 0.1562, norm(output): 0.4062, norm(x): 0.3754, norm(y): 1.0004, norm:14.8362, tok/sec: 99984.63, flops:41.13, batch-reuse:1
@ 465 train 7.4714 , allloss: 7.6843, dt: 1289.46ms, fracRes: 0.0041, norm(attn): 0.1572, norm(output): 0.4082, norm(x): 0.3772, norm(y): 1.0005, norm:10.7436, tok/sec: 101648.66, flops:41.81, batch-reuse:1
@ 466 train 7.4965 , allloss: 7.7131, dt: 1328.14ms, fracRes: 0.0041, norm(attn): 0.1572, norm(output): 0.4102, norm(x): 0.3792, norm(y): 1.0005, norm:6.5341, tok/sec: 98688.76, flops:40.60, batch-reuse:1
@ 467 train 7.4613 , allloss: 7.6719, dt: 1329.46ms, fracRes: 0.0043, norm(attn): 0.1553, norm(output): 0.4141, norm(x): 0.3829, norm(y): 1.0005, norm:10.0750, tok/sec: 98590.68, flops:40.56, batch-reuse:1
@ 468 train 7.3581 , allloss: 7.5720, dt: 1320.60ms, fracRes: 0.0043, norm(attn): 0.1543, norm(output): 0.4082, norm(x): 0.3810, norm(y): 1.0005, norm:5.7523, tok/sec: 99251.92, flops:40.83, batch-reuse:1
@ 469 train 7.3460 , allloss: 7.5759, dt: 1317.66ms, fracRes: 0.0041, norm(attn): 0.1592, norm(output): 0.4043, norm(x): 0.3727, norm(y): 1.0004, norm:7.1288, tok/sec: 99473.07, flops:40.92, batch-reuse:1
@ 470 train 7.4218 , allloss: 7.6753, dt: 1296.19ms, fracRes: 0.0040, norm(attn): 0.1621, norm(output): 0.4023, norm(x): 0.3666, norm(y): 1.0004, norm:3.0455, tok/sec: 101121.14, flops:41.60, batch-reuse:1
@ 471 train 7.3335 , allloss: 7.6003, dt: 1275.18ms, fracRes: 0.0042, norm(attn): 0.1592, norm(output): 0.4023, norm(x): 0.3642, norm(y): 1.0004, norm:9.8608, tok/sec: 102786.99, flops:42.28, batch-reuse:1
@ 472 train 7.4507 , allloss: 7.7103, dt: 1280.55ms, fracRes: 0.0043, norm(attn): 0.1572, norm(output): 0.4043, norm(x): 0.3703, norm(y): 1.0004, norm:7.3239, tok/sec: 102356.38, flops:42.10, batch-reuse:1
@ 473 train 7.4179 , allloss: 7.6623, dt: 1283.07ms, fracRes: 0.0042, norm(attn): 0.1602, norm(output): 0.4062, norm(x): 0.3739, norm(y): 1.0004, norm:3.3446, tok/sec: 102154.92, flops:42.02, batch-reuse:1
@ 474 train 7.3726 , allloss: 7.6088, dt: 1307.99ms, fracRes: 0.0042, norm(attn): 0.1602, norm(output): 0.4062, norm(x): 0.3754, norm(y): 1.0004, norm:7.8624, tok/sec: 100208.86, flops:41.22, batch-reuse:1
@ 475 train 7.3884 , allloss: 7.6078, dt: 1283.68ms, fracRes: 0.0043, norm(attn): 0.1611, norm(output): 0.4102, norm(x): 0.3806, norm(y): 1.0005, norm:4.8535, tok/sec: 102106.79, flops:42.00, batch-reuse:1
@ 476 train 7.4225 , allloss: 7.6256, dt: 1278.85ms, fracRes: 0.0044, norm(attn): 0.1572, norm(output): 0.4160, norm(x): 0.3869, norm(y): 1.0004, norm:9.8658, tok/sec: 102492.34, flops:42.16, batch-reuse:1
@ 477 train 7.4740 , allloss: 7.6808, dt: 1264.75ms, fracRes: 0.0046, norm(attn): 0.1562, norm(output): 0.4160, norm(x): 0.3864, norm(y): 1.0004, norm:8.9474, tok/sec: 103634.87, flops:42.63, batch-reuse:1
@ 478 train 7.4344 , allloss: 7.6577, dt: 1287.11ms, fracRes: 0.0043, norm(attn): 0.1562, norm(output): 0.4082, norm(x): 0.3768, norm(y): 1.0005, norm:8.7324, tok/sec: 101834.15, flops:41.89, batch-reuse:1
@ 479 train 7.5243 , allloss: 7.7557, dt: 1295.82ms, fracRes: 0.0041, norm(attn): 0.1562, norm(output): 0.4043, norm(x): 0.3745, norm(y): 1.0004, norm:6.7061, tok/sec: 101149.65, flops:41.61, batch-reuse:1
@ 480 train 7.3974 , allloss: 7.6103, dt: 1277.34ms, fracRes: 0.0042, norm(attn): 0.1611, norm(output): 0.4062, norm(x): 0.3737, norm(y): 1.0004, norm:16.6541, tok/sec: 102612.94, flops:42.21, batch-reuse:1
@ 481 train 7.4550 , allloss: 7.6719, dt: 1288.30ms, fracRes: 0.0041, norm(attn): 0.1572, norm(output): 0.4062, norm(x): 0.3747, norm(y): 1.0004, norm:16.5126, tok/sec: 101740.39, flops:41.85, batch-reuse:1
@ 482 train 7.3870 , allloss: 7.6166, dt: 1316.32ms, fracRes: 0.0043, norm(attn): 0.1553, norm(output): 0.4043, norm(x): 0.3724, norm(y): 1.0004, norm:5.8960, tok/sec: 99574.52, flops:40.96, batch-reuse:1
@ 483 train 7.4420 , allloss: 7.6685, dt: 1314.38ms, fracRes: 0.0042, norm(attn): 0.1553, norm(output): 0.4062, norm(x): 0.3745, norm(y): 1.0004, norm:4.8927, tok/sec: 99721.49, flops:41.02, batch-reuse:1
@ 484 train 7.3535 , allloss: 7.5596, dt: 1308.27ms, fracRes: 0.0043, norm(attn): 0.1562, norm(output): 0.4102, norm(x): 0.3799, norm(y): 1.0004, norm:8.5498, tok/sec: 100187.60, flops:41.21, batch-reuse:1
@ 485 train 7.3253 , allloss: 7.5224, dt: 1256.13ms, fracRes: 0.0045, norm(attn): 0.1553, norm(output): 0.4180, norm(x): 0.3844, norm(y): 1.0005, norm:6.3074, tok/sec: 104345.77, flops:42.92, batch-reuse:1
@ 486 train 7.4938 , allloss: 7.7030, dt: 1293.70ms, fracRes: 0.0045, norm(attn): 0.1543, norm(output): 0.4258, norm(x): 0.3852, norm(y): 1.0005, norm:7.7952, tok/sec: 101315.53, flops:41.68, batch-reuse:1
@ 487 train 7.4954 , allloss: 7.7082, dt: 1324.43ms, fracRes: 0.0044, norm(attn): 0.1543, norm(output): 0.4160, norm(x): 0.3841, norm(y): 1.0005, norm:7.3141, tok/sec: 98964.98, flops:40.71, batch-reuse:1
@ 488 train 7.3249 , allloss: 7.5280, dt: 1299.94ms, fracRes: 0.0045, norm(attn): 0.1543, norm(output): 0.4199, norm(x): 0.3844, norm(y): 1.0005, norm:3.6777, tok/sec: 100829.04, flops:41.48, batch-reuse:1
@ 489 train 7.3576 , allloss: 7.5687, dt: 1273.56ms, fracRes: 0.0045, norm(attn): 0.1553, norm(output): 0.4160, norm(x): 0.3820, norm(y): 1.0005, norm:2.7547, tok/sec: 102917.86, flops:42.34, batch-reuse:1
@ 490 train 7.3867 , allloss: 7.6116, dt: 1292.50ms, fracRes: 0.0045, norm(attn): 0.1533, norm(output): 0.4102, norm(x): 0.3780, norm(y): 1.0005, norm:8.4756, tok/sec: 101409.93, flops:41.72, batch-reuse:1
@ 491 train 7.4576 , allloss: 7.6834, dt: 1321.02ms, fracRes: 0.0043, norm(attn): 0.1543, norm(output): 0.4082, norm(x): 0.3779, norm(y): 1.0004, norm:5.1335, tok/sec: 99220.61, flops:40.81, batch-reuse:1
@ 492 train 7.4797 , allloss: 7.6828, dt: 1325.63ms, fracRes: 0.0046, norm(attn): 0.1553, norm(output): 0.4141, norm(x): 0.3835, norm(y): 1.0004, norm:14.0889, tok/sec: 98874.92, flops:40.67, batch-reuse:1
@ 493 train 7.4400 , allloss: 7.6375, dt: 1311.73ms, fracRes: 0.0047, norm(attn): 0.1543, norm(output): 0.4141, norm(x): 0.3862, norm(y): 1.0004, norm:13.7406, tok/sec: 99922.70, flops:41.10, batch-reuse:1
@ 494 train 7.3349 , allloss: 7.5359, dt: 1269.38ms, fracRes: 0.0048, norm(attn): 0.1533, norm(output): 0.4180, norm(x): 0.3846, norm(y): 1.0005, norm:3.0553, tok/sec: 103256.51, flops:42.47, batch-reuse:1
@ 495 train 7.2947 , allloss: 7.5002, dt: 1283.29ms, fracRes: 0.0046, norm(attn): 0.1543, norm(output): 0.4082, norm(x): 0.3790, norm(y): 1.0005, norm:6.2628, tok/sec: 102137.39, flops:42.01, batch-reuse:1
@ 496 train 7.3814 , allloss: 7.5862, dt: 1279.65ms, fracRes: 0.0049, norm(attn): 0.1504, norm(output): 0.4160, norm(x): 0.3845, norm(y): 1.0005, norm:2.3616, tok/sec: 102428.37, flops:42.13, batch-reuse:1
@ 497 train 7.4067 , allloss: 7.6093, dt: 1290.70ms, fracRes: 0.0058, norm(attn): 0.1465, norm(output): 0.4238, norm(x): 0.3907, norm(y): 1.0005, norm:24.5185, tok/sec: 101551.31, flops:41.77, batch-reuse:1
@ 498 train 7.5334 , allloss: 7.7490, dt: 1281.36ms, fracRes: 0.0056, norm(attn): 0.1465, norm(output): 0.4199, norm(x): 0.3879, norm(y): 1.0004, norm:18.7533, tok/sec: 102291.61, flops:42.08, batch-reuse:1
@ 499 train 7.4426 , allloss: 7.6711, dt: 1277.95ms, fracRes: 0.0047, norm(attn): 0.1504, norm(output): 0.4062, norm(x): 0.3769, norm(y): 1.0004, norm:2.9562, tok/sec: 102564.24, flops:42.19, batch-reuse:1
@ 500 train 7.3837 , allloss: 7.6021, dt: 1288.94ms, fracRes: 0.0043, norm(attn): 0.1562, norm(output): 0.4043, norm(x): 0.3731, norm(y): 1.0004, norm:6.5631, tok/sec: 101689.54, flops:41.83, batch-reuse:1
@ 501 train 7.3744 , allloss: 7.5872, dt: 1298.84ms, fracRes: 0.0043, norm(attn): 0.1562, norm(output): 0.4062, norm(x): 0.3750, norm(y): 1.0005, norm:5.3031, tok/sec: 100914.53, flops:41.51, batch-reuse:1
@ 502 train 7.4443 , allloss: 7.6526, dt: 1321.18ms, fracRes: 0.0045, norm(attn): 0.1553, norm(output): 0.4121, norm(x): 0.3827, norm(y): 1.0005, norm:6.3772, tok/sec: 99208.19, flops:40.81, batch-reuse:1
@ 503 train 7.3899 , allloss: 7.5895, dt: 1299.35ms, fracRes: 0.0045, norm(attn): 0.1553, norm(output): 0.4160, norm(x): 0.3859, norm(y): 1.0005, norm:7.2304, tok/sec: 100874.90, flops:41.50, batch-reuse:1
@ 504 train 7.4325 , allloss: 7.6420, dt: 1277.02ms, fracRes: 0.0046, norm(attn): 0.1504, norm(output): 0.4121, norm(x): 0.3814, norm(y): 1.0004, norm:3.2295, tok/sec: 102639.13, flops:42.22, batch-reuse:1
@ 505 train 7.3562 , allloss: 7.5597, dt: 1279.65ms, fracRes: 0.0046, norm(attn): 0.1475, norm(output): 0.4102, norm(x): 0.3802, norm(y): 1.0004, norm:4.5851, tok/sec: 102428.05, flops:42.13, batch-reuse:1
@ 506 train 7.3329 , allloss: 7.5316, dt: 1309.89ms, fracRes: 0.0047, norm(attn): 0.1465, norm(output): 0.4141, norm(x): 0.3841, norm(y): 1.0005, norm:2.3196, tok/sec: 100063.07, flops:41.16, batch-reuse:1
@ 507 train 7.4010 , allloss: 7.6149, dt: 1319.15ms, fracRes: 0.0048, norm(attn): 0.1484, norm(output): 0.4121, norm(x): 0.3803, norm(y): 1.0005, norm:7.4674, tok/sec: 99361.31, flops:40.87, batch-reuse:1
@ 508 train 7.3023 , allloss: 7.5144, dt: 1329.38ms, fracRes: 0.0046, norm(attn): 0.1514, norm(output): 0.4102, norm(x): 0.3779, norm(y): 1.0005, norm:4.0959, tok/sec: 98596.42, flops:40.56, batch-reuse:1
@ 509 train 7.3150 , allloss: 7.5378, dt: 1323.33ms, fracRes: 0.0048, norm(attn): 0.1484, norm(output): 0.4102, norm(x): 0.3785, norm(y): 1.0004, norm:3.3341, tok/sec: 99047.21, flops:40.74, batch-reuse:1
@ 510 train 7.3266 , allloss: 7.5373, dt: 1313.98ms, fracRes: 0.0050, norm(attn): 0.1455, norm(output): 0.4160, norm(x): 0.3849, norm(y): 1.0004, norm:9.7614, tok/sec: 99751.69, flops:41.03, batch-reuse:1
@ 511 train 7.3933 , allloss: 7.6063, dt: 1306.80ms, fracRes: 0.0055, norm(attn): 0.1426, norm(output): 0.4180, norm(x): 0.3873, norm(y): 1.0004, norm:6.9265, tok/sec: 100300.22, flops:41.26, batch-reuse:1
@ 512 train 7.3187 , allloss: 7.5409, dt: 1313.92ms, fracRes: 0.0053, norm(attn): 0.1465, norm(output): 0.4121, norm(x): 0.3807, norm(y): 1.0005, norm:7.2458, tok/sec: 99756.34, flops:41.04, batch-reuse:1
@ 513 train 7.3149 , allloss: 7.5313, dt: 1298.13ms, fracRes: 0.0051, norm(attn): 0.1504, norm(output): 0.4102, norm(x): 0.3782, norm(y): 1.0005, norm:4.3007, tok/sec: 100969.67, flops:41.53, batch-reuse:1
@ 514 train 7.2826 , allloss: 7.4920, dt: 1269.19ms, fracRes: 0.0054, norm(attn): 0.1504, norm(output): 0.4141, norm(x): 0.3835, norm(y): 1.0005, norm:3.7216, tok/sec: 103272.24, flops:42.48, batch-reuse:1
@ 515 train 7.2750 , allloss: 7.4894, dt: 1262.14ms, fracRes: 0.0060, norm(attn): 0.1475, norm(output): 0.4141, norm(x): 0.3822, norm(y): 1.0005, norm:7.9959, tok/sec: 103849.07, flops:42.72, batch-reuse:1
@ 516 train 7.2567 , allloss: 7.4662, dt: 1261.52ms, fracRes: 0.0059, norm(attn): 0.1465, norm(output): 0.4141, norm(x): 0.3804, norm(y): 1.0004, norm:3.0857, tok/sec: 103899.89, flops:42.74, batch-reuse:1
@ 517 train 7.2432 , allloss: 7.4441, dt: 1290.90ms, fracRes: 0.0067, norm(attn): 0.1455, norm(output): 0.4180, norm(x): 0.3864, norm(y): 1.0004, norm:3.7651, tok/sec: 101535.33, flops:41.77, batch-reuse:1
@ 518 train 7.3628 , allloss: 7.5752, dt: 1312.41ms, fracRes: 0.0069, norm(attn): 0.1436, norm(output): 0.4141, norm(x): 0.3850, norm(y): 1.0005, norm:10.6986, tok/sec: 99871.44, flops:41.08, batch-reuse:1
@ 519 train 7.2798 , allloss: 7.4897, dt: 1277.53ms, fracRes: 0.0065, norm(attn): 0.1465, norm(output): 0.4102, norm(x): 0.3802, norm(y): 1.0004, norm:4.0717, tok/sec: 102598.10, flops:42.20, batch-reuse:1
@ 520 train 7.4033 , allloss: 7.6161, dt: 1285.96ms, fracRes: 0.0062, norm(attn): 0.1484, norm(output): 0.4102, norm(x): 0.3821, norm(y): 1.0004, norm:13.8210, tok/sec: 101925.70, flops:41.93, batch-reuse:1
@ 521 train 7.4297 , allloss: 7.6522, dt: 1315.04ms, fracRes: 0.0061, norm(attn): 0.1484, norm(output): 0.4082, norm(x): 0.3813, norm(y): 1.0004, norm:12.5512, tok/sec: 99671.27, flops:41.00, batch-reuse:1
@ 522 train 7.2901 , allloss: 7.5308, dt: 1304.33ms, fracRes: 0.0066, norm(attn): 0.1475, norm(output): 0.4062, norm(x): 0.3747, norm(y): 1.0004, norm:13.8813, tok/sec: 100489.57, flops:41.34, batch-reuse:1
@ 523 train 7.3630 , allloss: 7.6027, dt: 1296.20ms, fracRes: 0.0064, norm(attn): 0.1475, norm(output): 0.4062, norm(x): 0.3744, norm(y): 1.0004, norm:9.6816, tok/sec: 101119.86, flops:41.60, batch-reuse:1
@ 524 train 7.3005 , allloss: 7.5169, dt: 1304.99ms, fracRes: 0.0064, norm(attn): 0.1475, norm(output): 0.4082, norm(x): 0.3757, norm(y): 1.0004, norm:7.7589, tok/sec: 100438.75, flops:41.32, batch-reuse:1
@ 525 train 7.3061 , allloss: 7.5152, dt: 1286.63ms, fracRes: 0.0068, norm(attn): 0.1484, norm(output): 0.4102, norm(x): 0.3803, norm(y): 1.0004, norm:7.1137, tok/sec: 101872.36, flops:41.91, batch-reuse:1
@ 526 train 7.3190 , allloss: 7.5361, dt: 1278.55ms, fracRes: 0.0078, norm(attn): 0.1484, norm(output): 0.4102, norm(x): 0.3824, norm(y): 1.0004, norm:8.4543, tok/sec: 102515.74, flops:42.17, batch-reuse:1
@ 527 train 7.3147 , allloss: 7.5409, dt: 1291.90ms, fracRes: 0.0077, norm(attn): 0.1465, norm(output): 0.4082, norm(x): 0.3777, norm(y): 1.0004, norm:7.4558, tok/sec: 101456.66, flops:41.73, batch-reuse:1
@ 528 train 7.2945 , allloss: 7.5228, dt: 1311.66ms, fracRes: 0.0078, norm(attn): 0.1465, norm(output): 0.4082, norm(x): 0.3744, norm(y): 1.0003, norm:4.9324, tok/sec: 99928.57, flops:41.11, batch-reuse:1
@ 529 train 7.2317 , allloss: 7.4585, dt: 1296.36ms, fracRes: 0.0084, norm(attn): 0.1455, norm(output): 0.4082, norm(x): 0.3776, norm(y): 1.0003, norm:8.3866, tok/sec: 101107.85, flops:41.59, batch-reuse:1
@ 530 train 7.3252 , allloss: 7.5669, dt: 1291.16ms, fracRes: 0.0088, norm(attn): 0.1455, norm(output): 0.4082, norm(x): 0.3764, norm(y): 1.0003, norm:4.9377, tok/sec: 101515.02, flops:41.76, batch-reuse:1
@ 531 train 7.3309 , allloss: 7.5622, dt: 1296.03ms, fracRes: 0.0088, norm(attn): 0.1465, norm(output): 0.4062, norm(x): 0.3772, norm(y): 1.0003, norm:2.0163, tok/sec: 101133.83, flops:41.60, batch-reuse:1
@ 532 train 7.2234 , allloss: 7.4357, dt: 1317.35ms, fracRes: 0.0107, norm(attn): 0.1406, norm(output): 0.4082, norm(x): 0.3762, norm(y): 1.0003, norm:10.9326, tok/sec: 99496.85, flops:40.93, batch-reuse:1
@ 533 train 7.2717 , allloss: 7.4831, dt: 1257.92ms, fracRes: 0.0125, norm(attn): 0.1396, norm(output): 0.4062, norm(x): 0.3738, norm(y): 1.0003, norm:7.7151, tok/sec: 104197.07, flops:42.86, batch-reuse:1
@ 534 train 7.1884 , allloss: 7.3994, dt: 1287.31ms, fracRes: 0.0131, norm(attn): 0.1426, norm(output): 0.4062, norm(x): 0.3705, norm(y): 1.0003, norm:6.4356, tok/sec: 101818.64, flops:41.88, batch-reuse:1
@ 535 train 7.2492 , allloss: 7.4614, dt: 1324.23ms, fracRes: 0.0120, norm(attn): 0.1494, norm(output): 0.4082, norm(x): 0.3764, norm(y): 1.0004, norm:6.3590, tok/sec: 98979.65, flops:40.72, batch-reuse:1
@ 536 train 7.2270 , allloss: 7.4503, dt: 1298.14ms, fracRes: 0.0121, norm(attn): 0.1543, norm(output): 0.4062, norm(x): 0.3716, norm(y): 1.0003, norm:4.4989, tok/sec: 100968.83, flops:41.53, batch-reuse:1
@ 537 train 7.2546 , allloss: 7.5019, dt: 1309.52ms, fracRes: 0.0123, norm(attn): 0.1504, norm(output): 0.3984, norm(x): 0.3621, norm(y): 1.0003, norm:10.1001, tok/sec: 100091.53, flops:41.17, batch-reuse:1
@ 538 train 7.1437 , allloss: 7.3895, dt: 1296.63ms, fracRes: 0.0137, norm(attn): 0.1514, norm(output): 0.3945, norm(x): 0.3597, norm(y): 1.0003, norm:8.9538, tok/sec: 101086.54, flops:41.58, batch-reuse:1
@ 539 train 7.2356 , allloss: 7.4721, dt: 1316.55ms, fracRes: 0.0149, norm(attn): 0.1494, norm(output): 0.4062, norm(x): 0.3708, norm(y): 1.0003, norm:6.6166, tok/sec: 99557.52, flops:40.95, batch-reuse:1
@ 540 train 7.2982 , allloss: 7.5238, dt: 1317.36ms, fracRes: 0.0182, norm(attn): 0.1445, norm(output): 0.4062, norm(x): 0.3761, norm(y): 1.0003, norm:5.7809, tok/sec: 99495.63, flops:40.93, batch-reuse:1
@ 541 train 7.1695 , allloss: 7.3863, dt: 1318.84ms, fracRes: 0.0182, norm(attn): 0.1455, norm(output): 0.4062, norm(x): 0.3709, norm(y): 1.0003, norm:4.0456, tok/sec: 99384.65, flops:40.88, batch-reuse:1
@ 542 train 7.2912 , allloss: 7.5179, dt: 1274.44ms, fracRes: 0.0171, norm(attn): 0.1406, norm(output): 0.4062, norm(x): 0.3681, norm(y): 1.0003, norm:5.5658, tok/sec: 102846.35, flops:42.31, batch-reuse:1
@ 543 train 7.3757 , allloss: 7.6163, dt: 1273.50ms, fracRes: 0.0186, norm(attn): 0.1396, norm(output): 0.4043, norm(x): 0.3689, norm(y): 1.0003, norm:7.4506, tok/sec: 102922.48, flops:42.34, batch-reuse:1
@ 544 train 7.2356 , allloss: 7.4613, dt: 1271.37ms, fracRes: 0.0203, norm(attn): 0.1426, norm(output): 0.4043, norm(x): 0.3686, norm(y): 1.0003, norm:3.9663, tok/sec: 103095.25, flops:42.41, batch-reuse:1
@ 545 train 7.2322 , allloss: 7.4659, dt: 1271.11ms, fracRes: 0.0246, norm(attn): 0.1406, norm(output): 0.4062, norm(x): 0.3693, norm(y): 1.0003, norm:7.0641, tok/sec: 103115.88, flops:42.42, batch-reuse:1
@ 546 train 7.1930 , allloss: 7.4321, dt: 1296.91ms, fracRes: 0.0269, norm(attn): 0.1396, norm(output): 0.4023, norm(x): 0.3684, norm(y): 1.0002, norm:8.6506, tok/sec: 101064.78, flops:41.57, batch-reuse:1
@ 547 train 7.3532 , allloss: 7.6032, dt: 1280.61ms, fracRes: 0.0260, norm(attn): 0.1406, norm(output): 0.3984, norm(x): 0.3643, norm(y): 1.0002, norm:7.8106, tok/sec: 102351.43, flops:42.10, batch-reuse:1
@ 548 train 7.3053 , allloss: 7.5645, dt: 1267.51ms, fracRes: 0.0267, norm(attn): 0.1396, norm(output): 0.4004, norm(x): 0.3660, norm(y): 1.0002, norm:5.5109, tok/sec: 103409.38, flops:42.54, batch-reuse:1
@ 549 train 7.2746 , allloss: 7.5024, dt: 1283.74ms, fracRes: 0.0296, norm(attn): 0.1377, norm(output): 0.4043, norm(x): 0.3699, norm(y): 1.0003, norm:4.1399, tok/sec: 102101.88, flops:42.00, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7891, 0.2119, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3730, 0.1865, 0.4414, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.2100, 0.3418, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2178, 0.0654, 0.2812, 0.2344, 0.2021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.0571, 0.3652, 0.1777, 0.1807, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.0540, 0.1865, 0.3574, 0.0952, 0.1045, 0.0840, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.2480, 0.0574, 0.0593, 0.1699, 0.1426, 0.1641, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.0461, 0.2393, 0.1650, 0.0515, 0.0549, 0.1650, 0.1182, 0.0452, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.0479, 0.0723, 0.1377, 0.1602, 0.1270, 0.0728, 0.0840, 0.1060, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1182, 0.0192, 0.2354, 0.1201, 0.0815, 0.0364, 0.0825, 0.1787, 0.0280, 0.0796, 0.0209, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0693, 0.0986, 0.0393, 0.0771, 0.1147, 0.0623, 0.0952, 0.0757, 0.1367, 0.0850, 0.0977, 0.0479, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0488, 0.1050, 0.0757, 0.1055, 0.1226, 0.0767, 0.0640, 0.0684, 0.0493, 0.0625, 0.0825, 0.0640, 0.0000, 0.0000],
        [0.0801, 0.0310, 0.2373, 0.1074, 0.0364, 0.0197, 0.0703, 0.0933, 0.0173, 0.1357, 0.0253, 0.0557, 0.0728, 0.0187, 0.0000],
        [0.0723, 0.0270, 0.1006, 0.0854, 0.0820, 0.0654, 0.0481, 0.0752, 0.0334, 0.0569, 0.0532, 0.0933, 0.0811, 0.0327, 0.0938]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0042, -0.0167,  0.0052,  ...,  0.0054, -0.0118,  0.0118],
        [ 0.0035, -0.0184,  0.0151,  ..., -0.0085, -0.0210,  0.0430],
        [-0.0064,  0.0056, -0.0258,  ...,  0.0145, -0.0175, -0.0096],
        ...,
        [ 0.0219,  0.0167, -0.0142,  ..., -0.0079, -0.0230, -0.0073],
        [-0.0003,  0.0143,  0.0045,  ...,  0.0020, -0.0348, -0.0087],
        [-0.0152,  0.0090, -0.0239,  ...,  0.0012, -0.0261,  0.0248]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3711, -0.4785,  0.5664, -0.0581,  0.3555,  0.7617, -0.3027,  0.7539, -0.0136, -0.9336,  0.4805,  0.1943, -0.2031,  0.1406, -0.1187, -0.5859,  0.6562, -0.0981,  0.2256, -1.0859, -0.1260,  0.8164,  1.0078, -0.4414,  0.3965, -0.2461,  0.2471,  0.5195,  0.0933, -0.5820, -0.5039, -0.0476,
         0.8906, -0.6641, -0.0569,  0.4023,  1.1875,  1.0938, -0.3555,  0.3828, -0.1279, -0.0332, -0.3574,  0.0510,  0.1729, -0.2119,  0.9414, -0.6172,  0.2021,  0.6094,  0.1216, -0.6758,  0.2715,  0.6133, -0.9883, -0.3398, -0.7969,  0.5586, -0.0552,  0.0488, -0.2734, -0.2090,  0.0309,  0.9531],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0603,  0.0166,  0.0129,  ...,  0.0067,  0.0027, -0.0044],
        [-0.0140, -0.0015, -0.0239,  ..., -0.0221, -0.0012,  0.0008],
        [ 0.0496, -0.0001, -0.0251,  ...,  0.0076,  0.0073, -0.0157],
        ...,
        [-0.0087, -0.0277,  0.0080,  ..., -0.0278,  0.0007,  0.0168],
        [ 0.0135, -0.0030, -0.0198,  ..., -0.0032, -0.0157,  0.0270],
        [-0.0099, -0.0229, -0.0001,  ..., -0.0071,  0.0339, -0.0252]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2539, -0.0269,  0.1621, -1.0781,  0.6445, -0.7969, -0.2891, -0.4746,  0.2812, -0.0437,  1.0781, -0.4023, -0.5664,  0.0049,  0.6953, -0.5977,  0.0432, -0.5430, -0.4844, -0.3848, -0.3105, -0.4043, -0.4277, -0.5195,  0.3340,  0.3184,  0.6602,  0.2256,  0.9297,  0.0586,  0.0574, -0.4219,
        -0.6133,  0.3730,  1.5859,  0.0476,  0.8711,  0.1602,  0.9453,  0.9805,  0.2324, -0.5625, -0.4121, -0.7344, -0.0669,  0.0903, -0.3184,  0.0535, -0.1641,  0.1279,  1.2422,  0.2773, -0.2754,  0.9531, -0.6094,  0.4121, -0.5273, -0.0664, -0.5859,  0.0396, -0.2295,  0.3027, -0.6367, -0.1621],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.3125,      0.3867,      0.3613,     -0.2754,     -0.7305,     -0.3906,      0.3848,     -0.3652,     -0.1855,     -0.4590,     -0.2969,     -0.0168,     -0.0459,      0.1592],
        [     0.0000,     -0.6914,      0.1689,      0.3867,     -0.4355,      0.0376,     -0.4219,     -0.2480,     -0.4121,      0.0649,      0.4590,     -0.0574,     -0.2578,     -0.4551,      0.2129],
        [     0.0000,     -0.0312,      0.4531,      0.0684,     -0.0029,      0.0356,     -0.5430,     -0.4199,     -0.4688,     -0.0234,     -0.0603,      0.6016,     -0.1113,     -0.7695,      0.0532],
        [     0.0000,     -1.2031,      0.2539,      0.0752,     -0.0737,     -1.1953,     -0.5547,      0.1338,     -1.4688,     -0.0413,     -1.0156,     -0.3320,      0.2715,     -1.1719,     -0.3730],
        [     0.0000,     -0.9219,      0.9297,      0.2119,      0.2305,     -0.6406,     -0.4727,     -0.2363,     -0.8242,     -0.1196,     -0.6680,     -0.4531,     -0.0471,     -0.6914,     -0.0383],
        [     0.0000,     -0.7773,      0.4629,      1.1172,     -0.2119,     -0.1157,     -0.3359,     -0.2793,     -0.6172,     -0.1699,     -0.1689,      0.2539,     -0.2031,     -0.3340,     -0.2129],
        [     0.0000,      0.9766,     -0.4863,     -0.4531,      0.5977,      0.4277,      0.5664,     -0.3594,      0.8398,      0.4590,      0.5000,     -0.2812,      0.3184,      1.4297,     -0.2324],
        [     0.0000,     -0.9102,      0.7344,      0.3652,     -0.7969,     -0.7344,      0.3652,      0.0288,     -0.9297,      0.2188,     -0.2275,     -0.2852,     -0.0869,     -0.7227,      0.5156],
        [     0.0000,     -0.6914,     -0.2812,      0.3633,      0.5156,      0.2793,     -0.2715,     -0.1299,      0.1035,      0.0113,     -0.3027,     -0.1167,      0.3242,      0.6758,     -0.3809],
        [     0.0000,     -1.8125,      0.6914,      0.0166,     -0.3730,     -1.1797,     -0.3613,      0.4160,     -1.4375,     -0.3906,     -1.7266,     -0.4199,      0.1729,     -1.4531,     -0.0486],
        [     0.0000,      0.3516,     -0.5703,      0.1025,      0.5000,     -0.1118,      0.3145,      0.0869,      0.6758,      0.2002,      0.3418,     -0.3711,      0.2080,      0.4512,     -0.0014],
        [     0.0000,     -0.4199,      0.3457,      0.0152,      0.3477,      0.4980,      0.0312,     -0.1523,     -0.0825,     -0.4121,     -0.1719,      0.1045,     -0.1514,     -0.0918,      0.0645],
        [     0.0000,     -0.9453,      1.0859,      0.2969,     -0.7891,     -1.3984,     -0.1289,      0.1562,     -1.5312,      0.5273,     -1.1484,     -0.3594,     -0.0947,     -1.4531,     -0.0183],
        [     0.0000,     -0.9844,      0.3320,      0.1680,      0.1289,     -0.1011,     -0.4082,      0.0432,     -0.7695,     -0.2354,     -0.3047,      0.2578,      0.1172,     -0.7930,      0.2617]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6823],
        [0.3576],
        [0.2559],
        [0.2113],
        [0.2019],
        [0.1653],
        [0.0928],
        [0.1151],
        [0.1054],
        [0.0952],
        [0.0771],
        [0.0688],
        [0.0806],
        [0.0686]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8516,     0.1484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2910,     0.2275,     0.4824,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1328,     0.2334,     0.3086,     0.3242,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0103,     0.0178,     0.4648,     0.5039,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0104,     0.0280,     0.4355,     0.5156,     0.0038,     0.0060,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0188,     0.0065,     0.3574,     0.3945,     0.0737,     0.0718,     0.0762,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0542,     0.0090,     0.0036,     0.0041,     0.5195,     0.3184,     0.0898,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.0035,     0.2002,     0.2334,     0.0034,     0.0040,     0.0091,     0.5391,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0542,     0.0469,     0.1670,     0.1709,     0.0928,     0.1030,     0.0840,     0.0903,     0.0923,     0.0986,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.0044,     0.1162,     0.1030,     0.0007,     0.0010,     0.0028,     0.7422,     0.0006,     0.0229,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0208,     0.0058,     0.0601,     0.0737,     0.1875,     0.1719,     0.0835,     0.0073,     0.1641,     0.0359,     0.1484,     0.0408,     0.0000,     0.0000,     0.0000],
        [    0.0286,     0.0026,     0.0102,     0.0083,     0.3164,     0.1953,     0.0884,     0.0006,     0.2559,     0.0115,     0.0703,     0.0073,     0.0037,     0.0000,     0.0000],
        [    0.0009,     0.0022,     0.0669,     0.0684,     0.0002,     0.0003,     0.0011,     0.6758,     0.0002,     0.0109,     0.0015,     0.0688,     0.1025,     0.0002,     0.0000],
        [    0.0243,     0.0093,     0.0806,     0.0981,     0.0806,     0.0771,     0.0540,     0.0344,     0.0640,     0.0718,     0.0776,     0.1260,     0.0547,     0.0679,     0.0791]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0042, -0.0167,  0.0052,  ...,  0.0054, -0.0118,  0.0118],
        [ 0.0035, -0.0184,  0.0151,  ..., -0.0085, -0.0210,  0.0430],
        [-0.0064,  0.0056, -0.0258,  ...,  0.0145, -0.0175, -0.0096],
        ...,
        [ 0.0219,  0.0167, -0.0142,  ..., -0.0079, -0.0230, -0.0073],
        [-0.0003,  0.0143,  0.0045,  ...,  0.0020, -0.0348, -0.0087],
        [-0.0152,  0.0090, -0.0239,  ...,  0.0012, -0.0261,  0.0248]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2969, -1.5078,  0.0284, -0.4688, -0.3301, -1.4922, -0.1797,  0.1108,  0.4277, -0.7539, -0.4707, -0.2354, -0.3516, -0.6094,  0.0415, -1.0234, -0.5352, -0.7305, -0.7188, -0.3672,  0.3516,  0.2930, -0.7812, -0.4883, -0.2695,  0.4395,  0.0299, -0.7188,  0.1670, -0.7422, -1.1953,  0.5195,
         1.4297,  0.1406,  0.5703,  0.5703,  0.7383,  0.2598,  0.8164, -0.6602, -0.0265, -0.3555,  0.0776,  0.0391, -0.5664, -0.2168,  0.4863, -0.2617,  0.4766, -0.1465, -0.1167, -0.4102,  0.2441,  0.4883, -1.0078,  0.2891, -0.0359, -0.1807,  0.5156, -0.0850, -0.6289,  0.0081, -1.0625, -0.1387],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0603,  0.0166,  0.0129,  ...,  0.0067,  0.0027, -0.0044],
        [-0.0140, -0.0015, -0.0239,  ..., -0.0221, -0.0012,  0.0008],
        [ 0.0496, -0.0001, -0.0251,  ...,  0.0076,  0.0073, -0.0157],
        ...,
        [-0.0087, -0.0277,  0.0080,  ..., -0.0278,  0.0007,  0.0168],
        [ 0.0135, -0.0030, -0.0198,  ..., -0.0032, -0.0157,  0.0270],
        [-0.0099, -0.0229, -0.0001,  ..., -0.0071,  0.0339, -0.0252]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4102, -1.6641, -0.2197, -1.3359, -1.1562, -0.6055,  0.3477, -0.3438,  0.5000, -0.0391, -0.3984,  0.7031,  1.0781, -0.8984,  0.3379,  0.2383, -0.8594, -0.4590, -0.3125, -0.1777,  0.4551,  0.3848,  0.1494, -0.7812,  0.7930, -0.0280, -0.6172,  0.7070,  0.3438,  0.2275, -0.5000, -0.5586,
         0.1318,  0.0190,  0.5820,  0.8203, -0.0845,  0.2578, -0.5469, -0.4297, -0.1279, -1.1953,  0.4883,  0.8516, -0.5820, -0.0464,  1.0312, -0.2451,  0.4531, -0.3867, -1.6562,  0.4062, -0.7891, -0.3828, -0.8281, -1.2188, -0.6406, -0.9688,  0.1396, -0.7500, -0.2100, -0.9531, -0.0283, -1.2578],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.7422, -1.0469, -0.8984,  2.8125,  2.5625,  1.4375, -4.5938,  2.9688, -0.5859,  1.6172, -1.4375, -2.7031,  3.1406, -0.2949],
        [ 0.0000, -0.2480,  0.5039,  0.5820,  0.1445, -0.0830,  0.1533,  1.0859, -0.0413,  0.7148, -0.0159,  1.2500,  1.0859, -0.0723,  0.8789],
        [ 0.0000,  0.5625,  0.8398,  0.8906, -0.5117, -0.2236, -0.1128,  1.7188, -0.4961,  0.8867, -0.2598,  1.6328,  1.2109, -0.5508,  0.8633],
        [ 0.0000,  0.5469,  3.8125,  3.8906, -0.9023, -0.7266,  0.3301,  5.9375, -1.1797,  2.2812,  0.5938,  3.7656,  4.2812, -1.4062,  2.1250],
        [ 0.0000,  0.9922,  3.7344,  3.9062, -0.9961, -0.5469,  0.3145,  5.4062, -1.1406,  1.9688,  0.6602,  3.6406,  3.8906, -1.2656,  2.1719],
        [ 0.0000, -1.0625,  2.9531,  3.0469,  1.3750,  1.3438,  1.3984,  2.0938,  1.1172,  1.8828,  1.8594,  2.5938,  2.1875,  1.1250,  1.9844],
        [ 0.0000, -1.7969, -2.7031, -2.5781,  2.2656,  1.7734,  0.5078, -5.5000,  2.2344, -1.3281,  0.4258, -2.3125, -3.4531,  2.5156, -0.8672],
        [ 0.0000, -0.0298,  4.0312,  4.1875, -0.0503,  0.0991,  0.9297,  5.0000, -0.2090,  2.3750,  1.3672,  3.9219,  3.8906, -0.2734,  2.2500],
        [ 0.0000, -0.1436,  1.1250,  1.1484,  0.5352,  0.6406,  0.4395,  0.5117,  0.5312,  0.5977,  0.9180,  1.0625,  0.6133,  0.7656,  0.7812],
        [ 0.0000,  0.7500,  4.0312,  3.9062, -1.1172, -0.6914,  0.2930,  5.8750, -1.2656,  2.4062,  0.3418,  4.0625,  4.3125, -1.5234,  2.2969],
        [ 0.0000, -1.2812,  1.0625,  1.2656,  2.2031,  2.1094,  1.3906, -1.0469,  2.0625,  0.5430,  1.9609,  0.6719,  0.0737,  2.4219,  1.1719],
        [ 0.0000, -2.3750, -1.0312, -1.2344,  2.4062,  1.9219,  1.1250, -3.8906,  2.1875, -0.9141,  0.8984, -1.3672, -2.0469,  2.3906, -0.0449],
        [ 0.0000,  0.9336,  4.3750,  4.3750, -1.2656, -0.8984,  0.2197,  6.6875, -1.4375,  2.5469,  0.5547,  4.4062,  4.7812, -1.6328,  2.2812],
        [ 0.0000, -0.9648,  1.2031,  1.3984,  1.2031,  1.1562,  0.7969,  0.3477,  0.9648,  1.0859,  1.1641,  1.6406,  0.8086,  1.0312,  1.1797]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8411],
        [0.3110],
        [0.2284],
        [0.1155],
        [0.1149],
        [0.1293],
        [0.0724],
        [0.1041],
        [0.1457],
        [0.0970],
        [0.1113],
        [0.0390],
        [0.0942],
        [0.1157]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0077,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1592,     0.1602,     0.6797,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0771,     0.1924,     0.3398,     0.3906,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.0197,     0.2949,     0.6836,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0037,     0.0292,     0.2930,     0.6680,     0.0018,     0.0054,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0081,     0.0056,     0.3711,     0.5039,     0.0267,     0.0442,     0.0410,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0640,     0.0020,     0.0088,     0.0037,     0.5391,     0.2578,     0.1235,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0074,     0.1484,     0.3145,     0.0012,     0.0033,     0.0038,     0.5195,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0359,     0.0225,     0.1826,     0.2090,     0.0603,     0.0903,     0.0549,     0.1196,     0.0635,     0.1611,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0146,     0.0938,     0.1895,     0.0005,     0.0016,     0.0021,     0.6523,     0.0008,     0.0413,     0.0033,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0208,     0.0013,     0.0654,     0.0461,     0.1992,     0.1885,     0.0869,     0.0068,     0.1787,     0.0615,     0.1152,     0.0298,     0.0000,     0.0000,     0.0000],
        [    0.0289,     0.0010,     0.0168,     0.0081,     0.3105,     0.1709,     0.1001,     0.0013,     0.2490,     0.0203,     0.0830,     0.0074,     0.0034,     0.0000,     0.0000],
        [    0.0005,     0.0079,     0.0549,     0.1416,     0.0002,     0.0005,     0.0007,     0.5273,     0.0002,     0.0193,     0.0015,     0.0806,     0.1641,     0.0002,     0.0000],
        [    0.0137,     0.0023,     0.1138,     0.1016,     0.0811,     0.0972,     0.0566,     0.0270,     0.0801,     0.0850,     0.0820,     0.0625,     0.0369,     0.0854,     0.0742]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0042, -0.0167,  0.0052,  ...,  0.0054, -0.0118,  0.0118],
        [ 0.0035, -0.0184,  0.0151,  ..., -0.0085, -0.0210,  0.0430],
        [-0.0064,  0.0056, -0.0258,  ...,  0.0145, -0.0175, -0.0096],
        ...,
        [ 0.0219,  0.0167, -0.0142,  ..., -0.0079, -0.0230, -0.0073],
        [-0.0003,  0.0143,  0.0045,  ...,  0.0020, -0.0348, -0.0087],
        [-0.0152,  0.0090, -0.0239,  ...,  0.0012, -0.0261,  0.0248]], device='cuda:0', requires_grad=True)
K: tensor([ 1.7812, -1.1172,  0.0294, -0.4160,  0.1455, -1.4609,  0.4824, -0.0762,  0.7656, -0.5234,  0.1338, -0.1660, -0.4531, -0.6328,  0.2354, -1.2266, -1.3594, -0.6133, -0.2520,  0.0972,  0.1855,  0.0986, -0.8906, -1.0234, -0.7422,  0.5586,  0.7891, -0.6758,  0.5391, -0.9414, -0.8359,  0.2051,
         1.6562,  0.0771,  0.0830,  0.6758,  0.8086,  0.5586,  0.6367, -0.7148, -0.1396, -0.1406, -0.2910,  0.0210, -0.6094, -0.0234,  1.4297, -0.2451,  0.8203, -0.6758,  0.0150, -0.2070, -0.0894,  0.4082, -1.1406, -0.2314,  0.0874, -0.2334,  0.7383, -0.6094, -0.6133,  0.0192, -0.6523,  0.1040],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0603,  0.0166,  0.0129,  ...,  0.0067,  0.0027, -0.0044],
        [-0.0140, -0.0015, -0.0239,  ..., -0.0221, -0.0012,  0.0008],
        [ 0.0496, -0.0001, -0.0251,  ...,  0.0076,  0.0073, -0.0157],
        ...,
        [-0.0087, -0.0277,  0.0080,  ..., -0.0278,  0.0007,  0.0168],
        [ 0.0135, -0.0030, -0.0198,  ..., -0.0032, -0.0157,  0.0270],
        [-0.0099, -0.0229, -0.0001,  ..., -0.0071,  0.0339, -0.0252]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6523, -1.5000, -0.0703, -0.9141, -1.3203, -0.4395,  0.3379, -0.2656,  0.3418, -0.4434, -0.6211, -0.1992,  0.5898, -1.4688,  0.3086,  0.0537, -0.6719, -0.4180, -0.7266, -0.1240,  0.5039, -0.1514, -0.4102, -0.8242,  0.7227,  0.1079, -0.4551,  0.8438,  0.1299, -0.5781, -0.0718, -0.0991,
         0.8828, -0.1099,  0.9453,  0.6523, -0.2422,  0.4668, -0.6914, -0.5664, -0.2793, -1.2812,  0.8516,  0.5938, -0.9727, -0.6641,  1.2266, -0.5664,  0.4434, -1.1484, -1.6484,  0.1211, -1.0938, -0.4160, -0.3242, -1.2031, -0.5352, -1.1562,  0.2158, -0.5820, -0.3203, -1.2734,  0.4629, -0.9492],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -4.8750,     -2.4062,     -3.5156,      3.5156,      2.5156,      1.4844,     -6.8750,      3.1094,     -1.6719,      1.1875,     -3.6562,     -5.2188,      3.4062,     -2.2188],
        [     0.0000,      0.0030,      1.4531,      1.5078,      0.0830,      0.3809,      0.2520,      1.7109,      0.1631,      1.3125,      0.3633,      1.4688,      1.3906,      0.0981,      1.2422],
        [     0.0000,      0.9141,      1.4844,      1.6250,     -0.5234,     -0.0327,     -0.1045,      2.3281,     -0.3789,      1.4531,     -0.0981,      1.8125,      1.7031,     -0.5273,      1.3203],
        [     0.0000,      2.0156,      4.7188,      5.5625,     -0.4863,      0.5508,      0.8086,      6.3750,     -0.1426,      3.6406,      1.5625,      4.8750,      5.4688,     -0.2793,      3.9219],
        [     0.0000,      2.0625,      4.3750,      5.1875,     -0.7148,      0.3770,      0.5078,      6.0625,     -0.3848,      3.4531,      1.2266,      4.6250,      5.0625,     -0.5352,      3.6406],
        [     0.0000,     -0.3555,      3.8281,      4.1250,      1.1953,      1.7031,      1.6250,      3.5000,      1.3594,      2.9219,      2.2344,      3.3594,      3.4531,      1.3516,      3.1094],
        [     0.0000,     -3.4844,     -1.9844,     -2.8594,      2.1250,      1.3906,      0.6562,     -4.7500,      1.8359,     -1.3203,      0.3223,     -2.6719,     -3.7500,      1.9922,     -1.7031],
        [     0.0000,      1.6094,      4.6250,      5.3750,     -0.1768,      0.7969,      0.9453,      5.8750,      0.1357,      3.5781,      1.7031,      4.6562,      5.0938,      0.0260,      3.8125],
        [     0.0000,     -0.4727,      1.6250,      1.7578,      0.5156,      0.9180,      0.4219,      1.2031,      0.5664,      1.5000,      0.8359,      1.4375,      1.0156,      0.5938,      1.3203],
        [     0.0000,      2.3750,      4.2500,      4.9375,     -0.9062,      0.1719,      0.4238,      6.1875,     -0.5547,      3.4219,      0.8945,      4.6250,      5.1250,     -0.7734,      3.5469],
        [     0.0000,     -2.7500,      1.1484,      0.7969,      2.2656,      2.2031,      1.4297,     -1.1094,      2.1562,      1.0859,      1.7109,      0.3613,     -0.4980,      2.2812,      0.8633],
        [     0.0000,     -3.3438,     -0.5391,     -1.2812,      2.3750,      1.7812,      1.2422,     -3.0938,      2.1562,     -0.3516,      1.0625,     -1.3594,     -2.1406,      2.2969,     -0.5156],
        [     0.0000,      2.8281,      4.7500,      5.7188,     -1.1016,      0.0806,      0.4258,      7.0312,     -0.7070,      3.7188,      1.1484,      5.1562,      5.8438,     -0.8984,      3.9688],
        [     0.0000,     -1.7969,      2.1250,      2.0000,      1.7734,      1.9609,      1.4219,      0.6797,      1.7656,      1.8281,      1.7891,      1.5156,      0.9922,      1.8281,      1.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8951],
        [0.2471],
        [0.2074],
        [0.1043],
        [0.1140],
        [0.1173],
        [0.0734],
        [0.0973],
        [0.1368],
        [0.0956],
        [0.1147],
        [0.0527],
        [0.0825],
        [0.1123]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.9961,     0.0004,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0070,     0.4492,     0.1895,     0.3535,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.9492,     0.0123,     0.0359,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.8555,     0.0422,     0.0981,     0.0001,     0.0005,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0143,     0.9609,     0.0033,     0.0068,     0.0008,     0.0007,     0.0006,     0.0140,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.4785,     0.1108,     0.2236,     0.0003,     0.0018,     0.0003,     0.1797,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.9922,     0.0004,     0.0011,     0.0000,     0.0000,     0.0000,     0.0026,     0.0000,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.8008,     0.0197,     0.0518,     0.0000,     0.0002,     0.0000,     0.0603,     0.0000,     0.0659,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.9766,     0.0014,     0.0033,     0.0001,     0.0001,     0.0001,     0.0071,     0.0001,     0.0041,     0.0002,     0.0035,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.9844,     0.0007,     0.0018,     0.0001,     0.0001,     0.0000,     0.0042,     0.0000,     0.0021,     0.0001,     0.0019,     0.0014,     0.0000,     0.0000],
        [    0.0033,     0.2500,     0.0898,     0.1729,     0.0003,     0.0017,     0.0003,     0.1338,     0.0003,     0.2197,     0.0013,     0.0732,     0.0522,     0.0003,     0.0000],
        [    0.0012,     0.9883,     0.0006,     0.0019,     0.0000,     0.0000,     0.0000,     0.0041,     0.0000,     0.0023,     0.0000,     0.0017,     0.0011,     0.0000,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0042, -0.0167,  0.0052,  ...,  0.0054, -0.0118,  0.0118],
        [ 0.0035, -0.0184,  0.0151,  ..., -0.0085, -0.0210,  0.0430],
        [-0.0064,  0.0056, -0.0258,  ...,  0.0145, -0.0175, -0.0096],
        ...,
        [ 0.0219,  0.0167, -0.0142,  ..., -0.0079, -0.0230, -0.0073],
        [-0.0003,  0.0143,  0.0045,  ...,  0.0020, -0.0348, -0.0087],
        [-0.0152,  0.0090, -0.0239,  ...,  0.0012, -0.0261,  0.0248]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4570, -1.4219, -0.4727, -0.3379, -0.7148, -1.0859,  0.1338,  0.2930, -0.3496, -1.8125,  0.0557, -0.5781, -1.2188,  0.3535, -0.4688,  0.2891, -1.0078,  0.0091, -0.3984, -0.6641,  0.5430,  0.6484, -1.2891, -0.9141, -0.6836,  0.8320,  0.1196,  1.2734,  0.2578, -0.8359,  0.3379,  0.5312,
         1.9219, -0.3027, -0.4883,  0.6133,  0.9570,  0.9648, -0.6797, -0.3301,  0.0344,  1.2344,  0.9922,  0.6406, -0.3496, -0.7852,  1.8438,  0.7500,  0.1553, -0.4023, -0.2520, -0.8945, -0.8398,  0.1484,  1.1641, -0.8438, -1.2891, -0.7500, -0.1846, -0.9922, -0.3184,  0.1484,  0.2197,  0.7930],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0603,  0.0166,  0.0129,  ...,  0.0067,  0.0027, -0.0044],
        [-0.0140, -0.0015, -0.0239,  ..., -0.0221, -0.0012,  0.0008],
        [ 0.0496, -0.0001, -0.0251,  ...,  0.0076,  0.0073, -0.0157],
        ...,
        [-0.0087, -0.0277,  0.0080,  ..., -0.0278,  0.0007,  0.0168],
        [ 0.0135, -0.0030, -0.0198,  ..., -0.0032, -0.0157,  0.0270],
        [-0.0099, -0.0229, -0.0001,  ..., -0.0071,  0.0339, -0.0252]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8906,  0.2373,  1.6797, -1.1328,  0.1992,  0.2871,  1.4062, -1.6250,  0.5977,  0.5586, -0.1504,  1.6719,  0.4062,  0.1660,  0.9766, -0.9023, -0.5586, -0.7539, -0.0161,  1.8594, -0.4199, -0.4863, -0.4238, -0.8945, -1.2188, -0.7734,  1.2812, -0.0193,  1.1094, -0.8867, -0.3496, -0.7617,
         0.0254,  0.3105,  1.2578, -0.5547,  0.0220, -0.6250,  0.6289, -0.6914, -1.9688, -0.7617, -0.3242,  0.2178,  0.2578, -0.0845, -0.3984, -1.4141,  1.4297, -1.0703, -0.5195,  0.5703, -1.5000,  1.3750, -0.2246, -1.1719,  0.7930,  0.9648,  0.3359, -0.6016, -2.1094, -0.2266, -0.4277, -1.6328],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -6.4062,     -1.5938,     -2.5781,      4.3438,      2.9375,      4.2188,     -2.8125,      4.3125,     -2.6719,      2.8281,     -1.9453,     -1.5781,      4.1875,     -0.7422],
        [     0.0000,      8.1250,     -0.7617,      0.5547,     -5.4688,     -4.7188,     -5.9062,      1.4766,     -5.5000,      1.0078,     -4.8438,      0.3672,     -0.1885,     -5.3125,     -1.2578],
        [     0.0000,      6.7500,     -1.1172,     -0.0059,     -4.5312,     -4.0938,     -4.9688,      0.8867,     -4.5938,      0.3984,     -4.2188,     -0.0334,     -0.4980,     -4.4375,     -1.3984],
        [     0.0000,      4.1562,      3.2969,      3.9219,     -2.3906,     -0.6055,     -2.2344,      3.6406,     -2.2656,      4.0938,     -0.7852,      3.0781,      2.7656,     -2.1719,      2.2812],
        [     0.0000,      6.8125,      2.4688,      3.5312,     -4.3125,     -2.4531,     -4.4375,      3.6719,     -4.2188,      3.9531,     -2.7969,      2.7188,      2.2188,     -4.0625,      1.3359],
        [     0.0000,      5.6250,      2.6250,      3.4688,     -3.4062,     -1.7812,     -3.1562,      3.4844,     -3.3281,      3.5156,     -1.6406,      2.7500,      2.4062,     -3.2188,      1.7344],
        [     0.0000,      4.2188,     -1.4531,     -0.7422,     -2.9062,     -2.9688,     -3.1875,     -0.0166,     -2.9844,     -0.5430,     -2.8906,     -0.5742,     -0.8438,     -2.8750,     -1.4062],
        [     0.0000,      4.6562,      3.2031,      3.9062,     -2.7656,     -0.9414,     -2.6562,      3.6875,     -2.6406,      4.1250,     -1.1641,      3.0469,      2.6875,     -2.5469,      2.1250],
        [     0.0000,      6.6250,     -1.2812,     -0.1631,     -4.6875,     -4.2188,     -5.2500,      0.7031,     -4.7188,      0.3750,     -4.5000,     -0.2383,     -0.7305,     -4.5625,     -1.6484],
        [     0.0000,      6.2812,      2.5781,      3.5469,     -3.6875,     -1.9922,     -3.6250,      3.7031,     -3.6094,      3.7969,     -2.0938,      2.8594,      2.4219,     -3.4844,      1.6484],
        [     0.0000,      5.3125,     -1.2734,     -0.4004,     -3.6406,     -3.5000,     -3.9062,      0.3770,     -3.7031,     -0.1826,     -3.3906,     -0.3242,     -0.6523,     -3.5781,     -1.3516],
        [     0.0000,      5.8438,     -1.4062,     -0.4551,     -4.0312,     -3.8750,     -4.2500,      0.3867,     -4.0938,     -0.2812,     -3.6719,     -0.3730,     -0.7188,     -3.9688,     -1.4766],
        [     0.0000,      4.3438,      3.3125,      3.9688,     -2.5000,     -0.6758,     -2.4062,      3.7031,     -2.3594,      4.2188,     -0.9453,      3.1094,      2.7656,     -2.2812,      2.2500],
        [     0.0000,      6.6875,     -0.6680,      0.4062,     -4.4688,     -3.9375,     -4.6875,      1.1875,     -4.5312,      0.6367,     -3.8125,      0.3086,     -0.1050,     -4.3750,     -0.9688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9066],
        [0.0766],
        [0.1002],
        [0.0712],
        [0.0829],
        [0.0203],
        [0.0925],
        [0.0616],
        [0.1046],
        [0.0286],
        [0.0544],
        [0.0331],
        [0.0606],
        [0.0269]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     1.0000,     0.0002,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0074,     0.5430,     0.1602,     0.2891,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.9648,     0.0096,     0.0256,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.8711,     0.0393,     0.0859,     0.0001,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0043,     0.9883,     0.0007,     0.0015,     0.0001,     0.0001,     0.0001,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.5586,     0.0952,     0.1836,     0.0002,     0.0013,     0.0002,     0.1562,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.9961,     0.0002,     0.0005,     0.0000,     0.0000,     0.0000,     0.0011,     0.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.8203,     0.0188,     0.0457,     0.0000,     0.0002,     0.0000,     0.0508,     0.0000,     0.0620,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.9961,     0.0003,     0.0007,     0.0000,     0.0000,     0.0000,     0.0014,     0.0000,     0.0009,     0.0000,     0.0006,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.9961,     0.0001,     0.0004,     0.0000,     0.0000,     0.0000,     0.0009,     0.0000,     0.0006,     0.0000,     0.0004,     0.0003,     0.0000,     0.0000],
        [    0.0036,     0.3184,     0.0796,     0.1484,     0.0002,     0.0012,     0.0002,     0.1235,     0.0003,     0.1963,     0.0008,     0.0718,     0.0569,     0.0003,     0.0000],
        [    0.0004,     0.9961,     0.0002,     0.0005,     0.0000,     0.0000,     0.0000,     0.0010,     0.0000,     0.0007,     0.0000,     0.0004,     0.0002,     0.0000,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0042, -0.0167,  0.0052,  ...,  0.0054, -0.0118,  0.0118],
        [ 0.0035, -0.0184,  0.0151,  ..., -0.0085, -0.0210,  0.0430],
        [-0.0064,  0.0056, -0.0258,  ...,  0.0145, -0.0175, -0.0096],
        ...,
        [ 0.0219,  0.0167, -0.0142,  ..., -0.0079, -0.0230, -0.0073],
        [-0.0003,  0.0143,  0.0045,  ...,  0.0020, -0.0348, -0.0087],
        [-0.0152,  0.0090, -0.0239,  ...,  0.0012, -0.0261,  0.0248]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3301, -1.6562, -0.4043, -0.2041, -0.9492, -1.2422,  0.0233,  0.2412, -0.3848, -1.8906,  0.0430, -0.6758, -1.3438,  0.4062, -0.5430,  0.5312, -1.0312,  0.0544, -0.3906, -0.7812,  0.6016,  0.8359, -1.3203, -0.9219, -0.5703,  0.9297,  0.0067,  1.3594,  0.0525, -0.9805,  0.5234,  0.5430,
         1.9375, -0.3945, -0.5703,  0.5703,  0.9805,  1.0312, -0.6328, -0.2041,  0.1025,  1.2656,  1.0781,  0.5820, -0.3633, -0.8086,  1.8672,  0.7383,  0.1152, -0.2754, -0.2363, -0.9297, -0.8398,  0.1660,  1.3125, -0.8477, -1.4922, -1.0391, -0.2070, -0.9453, -0.3984,  0.1631,  0.0267,  0.9297],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0603,  0.0166,  0.0129,  ...,  0.0067,  0.0027, -0.0044],
        [-0.0140, -0.0015, -0.0239,  ..., -0.0221, -0.0012,  0.0008],
        [ 0.0496, -0.0001, -0.0251,  ...,  0.0076,  0.0073, -0.0157],
        ...,
        [-0.0087, -0.0277,  0.0080,  ..., -0.0278,  0.0007,  0.0168],
        [ 0.0135, -0.0030, -0.0198,  ..., -0.0032, -0.0157,  0.0270],
        [-0.0099, -0.0229, -0.0001,  ..., -0.0071,  0.0339, -0.0252]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.0000,  0.3164,  1.6094, -1.2188,  0.4902,  0.2012,  1.4844, -1.7422,  0.7539,  0.8008, -0.0547,  1.9219,  0.3438,  0.4023,  1.1797, -1.2422, -0.8906, -1.0156,  0.0366,  1.8828, -0.4180, -0.3145, -0.5859, -0.9531, -1.2578, -0.7852,  1.5078, -0.1240,  1.3203, -0.9766, -0.5430, -0.8867,
         0.1406,  0.3555,  1.2812, -0.5977,  0.0239, -0.6602,  0.7422, -0.7383, -1.9531, -0.9609, -0.4375,  0.1104,  0.5664,  0.1689, -0.5859, -1.5703,  1.3984, -0.9414, -0.3203,  0.6016, -1.5469,  1.5547, -0.2852, -1.4141,  0.8516,  1.0625,  0.6016, -0.7031, -2.2969, -0.1582, -0.5469, -1.8828],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -6.2188, -1.5000, -2.3594,  4.2812,  3.0469,  4.3750, -2.5312,  4.2812, -2.5312,  3.1250, -1.7734, -1.5156,  4.1875, -0.6758],
        [ 0.0000,  8.4375, -0.8594,  0.3574, -5.7500, -5.0625, -6.4062,  1.1250, -5.7812,  0.9336, -5.4375,  0.0282, -0.4551, -5.6250, -1.5859],
        [ 0.0000,  7.2812, -1.2812, -0.2139, -5.0000, -4.5938, -5.5938,  0.5547, -5.0312,  0.2930, -4.8750, -0.4004, -0.8242, -4.9062, -1.7969],
        [ 0.0000,  4.2812,  3.0781,  3.6719, -2.6250, -0.9922, -2.6562,  3.4531, -2.5156,  3.8906, -1.3281,  2.9531,  2.7344, -2.4375,  2.1562],
        [ 0.0000,  6.9688,  2.3438,  3.3281, -4.5000, -2.7969, -4.8750,  3.4531, -4.4062,  3.8125, -3.3750,  2.5781,  2.2031, -4.2812,  1.2344],
        [ 0.0000,  5.7188,  2.6250,  3.4062, -3.6250, -2.0469, -3.5781,  3.3906, -3.5469,  3.5312, -2.1094,  2.7188,  2.4688, -3.4375,  1.7422],
        [ 0.0000,  5.4375, -1.8438, -1.0312, -3.8750, -3.9219, -4.3125, -0.3184, -3.9531, -0.7148, -3.9375, -1.0312, -1.3359, -3.8438, -2.0469],
        [ 0.0000,  4.7812,  3.0000,  3.6562, -2.9844, -1.3047, -3.0625,  3.5000, -2.8750,  3.9219, -1.6953,  2.9219,  2.6875, -2.7812,  2.0312],
        [ 0.0000,  7.1562, -1.5391, -0.4746, -5.0938, -4.7500, -5.8438,  0.2988, -5.1562,  0.1406, -5.1562, -0.6641, -1.1094, -5.0000, -2.0938],
        [ 0.0000,  6.3750,  2.5781,  3.4688, -3.8438, -2.2344, -3.9844,  3.5781, -3.7656,  3.7812, -2.5469,  2.8125,  2.4844, -3.6562,  1.6406],
        [ 0.0000,  6.5938, -1.6875, -0.7266, -4.6562, -4.5312, -5.1562,  0.0287, -4.7500, -0.3711, -4.5625, -0.8203, -1.1797, -4.6250, -2.0469],
        [ 0.0000,  7.0938, -1.7188, -0.6992, -5.0000, -4.8438, -5.4688,  0.0879, -5.0938, -0.3574, -4.8125, -0.8164, -1.1875, -4.9688, -2.1094],
        [ 0.0000,  4.5000,  3.1094,  3.7344, -2.7500, -1.0703, -2.8125,  3.5469, -2.6250,  4.0000, -1.4922,  3.0000,  2.7656, -2.5469,  2.1562],
        [ 0.0000,  7.7812, -1.0000,  0.1187, -5.3750, -4.8750, -5.8438,  0.8477, -5.4375,  0.5078, -4.9375, -0.1396, -0.5469, -5.2812, -1.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9056],
        [0.0822],
        [0.0930],
        [0.0691],
        [0.0801],
        [0.0195],
        [0.0735],
        [0.0608],
        [0.1027],
        [0.0261],
        [0.0432],
        [0.0288],
        [0.0598],
        [0.0230]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0143 the:0.0957.:0.0258 to:0.0527.:0.0332.:0.0483 the:0.0850.:0.0815)
.
------
		( the:0.0957.:0.0258 to:0.0527.:0.0332.:0.0483 the:0.0850.:0.0815
:0.1396)

�-�-�-�-�-�-�-
@ 550 train 7.2412 , allloss: 7.4505, dt: 1694.19ms, fracRes: 0.0307, norm(attn): 0.1387, norm(output): 0.4062, norm(x): 0.3731, norm(y): 1.0003, norm:9.5823, tok/sec: 77365.61, flops:31.82, batch-reuse:1
@ 551 train 7.2365 , allloss: 7.4447, dt: 1306.04ms, fracRes: 0.0331, norm(attn): 0.1357, norm(output): 0.4062, norm(x): 0.3714, norm(y): 1.0003, norm:4.7665, tok/sec: 100358.22, flops:41.28, batch-reuse:1
@ 552 train 7.1049 , allloss: 7.3229, dt: 1294.92ms, fracRes: 0.0320, norm(attn): 0.1338, norm(output): 0.4062, norm(x): 0.3694, norm(y): 1.0003, norm:3.7131, tok/sec: 101219.93, flops:41.64, batch-reuse:1
@ 553 train 7.2418 , allloss: 7.4667, dt: 1299.39ms, fracRes: 0.0294, norm(attn): 0.1387, norm(output): 0.4004, norm(x): 0.3658, norm(y): 1.0003, norm:3.8629, tok/sec: 100872.33, flops:41.49, batch-reuse:1
@ 554 train 7.2123 , allloss: 7.4389, dt: 1318.20ms, fracRes: 0.0302, norm(attn): 0.1396, norm(output): 0.4062, norm(x): 0.3693, norm(y): 1.0003, norm:6.1224, tok/sec: 99432.59, flops:40.90, batch-reuse:1
@ 555 train 7.1790 , allloss: 7.4040, dt: 1285.02ms, fracRes: 0.0313, norm(attn): 0.1387, norm(output): 0.4004, norm(x): 0.3648, norm(y): 1.0003, norm:10.1662, tok/sec: 101999.64, flops:41.96, batch-reuse:1
@ 556 train 7.1109 , allloss: 7.3271, dt: 1284.28ms, fracRes: 0.0324, norm(attn): 0.1387, norm(output): 0.3984, norm(x): 0.3640, norm(y): 1.0003, norm:3.8010, tok/sec: 102058.81, flops:41.98, batch-reuse:1
@ 557 train 7.2901 , allloss: 7.5130, dt: 1290.73ms, fracRes: 0.0315, norm(attn): 0.1377, norm(output): 0.4004, norm(x): 0.3660, norm(y): 1.0002, norm:23.5571, tok/sec: 101548.44, flops:41.77, batch-reuse:1
@ 558 train 7.3698 , allloss: 7.6036, dt: 1297.44ms, fracRes: 0.0317, norm(attn): 0.1348, norm(output): 0.4023, norm(x): 0.3665, norm(y): 1.0002, norm:20.2156, tok/sec: 101023.25, flops:41.56, batch-reuse:1
@ 559 train 7.4179 , allloss: 7.6538, dt: 1280.49ms, fracRes: 0.0336, norm(attn): 0.1348, norm(output): 0.3945, norm(x): 0.3625, norm(y): 1.0003, norm:6.4135, tok/sec: 102360.97, flops:42.11, batch-reuse:1
@ 560 train 7.3340 , allloss: 7.5473, dt: 1267.99ms, fracRes: 0.0381, norm(attn): 0.1348, norm(output): 0.4004, norm(x): 0.3661, norm(y): 1.0003, norm:6.8366, tok/sec: 103370.22, flops:42.52, batch-reuse:1
@ 561 train 7.4299 , allloss: 7.6393, dt: 1268.23ms, fracRes: 0.0379, norm(attn): 0.1348, norm(output): 0.4082, norm(x): 0.3730, norm(y): 1.0003, norm:6.4683, tok/sec: 103350.34, flops:42.51, batch-reuse:1
@ 562 train 7.2677 , allloss: 7.4849, dt: 1294.13ms, fracRes: 0.0334, norm(attn): 0.1338, norm(output): 0.4043, norm(x): 0.3669, norm(y): 1.0003, norm:4.6361, tok/sec: 101282.05, flops:41.66, batch-reuse:1
@ 563 train 7.3736 , allloss: 7.5990, dt: 1296.71ms, fracRes: 0.0323, norm(attn): 0.1348, norm(output): 0.3984, norm(x): 0.3638, norm(y): 1.0003, norm:6.3646, tok/sec: 101080.56, flops:41.58, batch-reuse:1
@ 564 train 7.2385 , allloss: 7.4622, dt: 1270.27ms, fracRes: 0.0313, norm(attn): 0.1348, norm(output): 0.4023, norm(x): 0.3646, norm(y): 1.0003, norm:5.7872, tok/sec: 103184.39, flops:42.45, batch-reuse:1
@ 565 train 7.1139 , allloss: 7.3416, dt: 1281.95ms, fracRes: 0.0303, norm(attn): 0.1348, norm(output): 0.3984, norm(x): 0.3626, norm(y): 1.0003, norm:7.5650, tok/sec: 102244.52, flops:42.06, batch-reuse:1
@ 566 train 7.2838 , allloss: 7.4984, dt: 1287.55ms, fracRes: 0.0319, norm(attn): 0.1367, norm(output): 0.4023, norm(x): 0.3657, norm(y): 1.0003, norm:2.6915, tok/sec: 101799.51, flops:41.88, batch-reuse:1
@ 567 train 7.2857 , allloss: 7.5031, dt: 1300.25ms, fracRes: 0.0309, norm(attn): 0.1367, norm(output): 0.4004, norm(x): 0.3644, norm(y): 1.0003, norm:3.2978, tok/sec: 100805.19, flops:41.47, batch-reuse:1
@ 568 train 7.3351 , allloss: 7.5597, dt: 1270.29ms, fracRes: 0.0329, norm(attn): 0.1377, norm(output): 0.4043, norm(x): 0.3656, norm(y): 1.0003, norm:5.1032, tok/sec: 103182.92, flops:42.44, batch-reuse:1
@ 569 train 7.2955 , allloss: 7.5130, dt: 1272.06ms, fracRes: 0.0311, norm(attn): 0.1377, norm(output): 0.4023, norm(x): 0.3642, norm(y): 1.0003, norm:9.9298, tok/sec: 103038.82, flops:42.39, batch-reuse:1
@ 570 train 7.2688 , allloss: 7.4972, dt: 1282.49ms, fracRes: 0.0292, norm(attn): 0.1387, norm(output): 0.3906, norm(x): 0.3585, norm(y): 1.0003, norm:5.1630, tok/sec: 102201.13, flops:42.04, batch-reuse:1
@ 571 train 7.3610 , allloss: 7.6373, dt: 1295.14ms, fracRes: 0.0278, norm(attn): 0.1387, norm(output): 0.3828, norm(x): 0.3520, norm(y): 1.0002, norm:27.4311, tok/sec: 101203.35, flops:41.63, batch-reuse:1
@ 572 train 7.3098 , allloss: 7.5721, dt: 1275.20ms, fracRes: 0.0292, norm(attn): 0.1396, norm(output): 0.3828, norm(x): 0.3522, norm(y): 1.0002, norm:19.4546, tok/sec: 102785.55, flops:42.28, batch-reuse:1
@ 573 train 7.2526 , allloss: 7.4800, dt: 1278.68ms, fracRes: 0.0327, norm(attn): 0.1387, norm(output): 0.3926, norm(x): 0.3568, norm(y): 1.0003, norm:7.5569, tok/sec: 102505.42, flops:42.17, batch-reuse:1
@ 574 train 7.2637 , allloss: 7.4848, dt: 1275.31ms, fracRes: 0.0368, norm(attn): 0.1377, norm(output): 0.3945, norm(x): 0.3616, norm(y): 1.0003, norm:5.5925, tok/sec: 102776.19, flops:42.28, batch-reuse:1
@ 575 train 7.2264 , allloss: 7.4515, dt: 1267.27ms, fracRes: 0.0381, norm(attn): 0.1348, norm(output): 0.4023, norm(x): 0.3644, norm(y): 1.0003, norm:6.6175, tok/sec: 103428.37, flops:42.55, batch-reuse:1
@ 576 train 7.1463 , allloss: 7.3772, dt: 1290.07ms, fracRes: 0.0372, norm(attn): 0.1338, norm(output): 0.3984, norm(x): 0.3615, norm(y): 1.0003, norm:6.3251, tok/sec: 101600.78, flops:41.79, batch-reuse:1
@ 577 train 7.2824 , allloss: 7.5150, dt: 1286.97ms, fracRes: 0.0355, norm(attn): 0.1328, norm(output): 0.4023, norm(x): 0.3646, norm(y): 1.0002, norm:8.3429, tok/sec: 101845.14, flops:41.89, batch-reuse:1
@ 578 train 7.2118 , allloss: 7.4386, dt: 1286.53ms, fracRes: 0.0362, norm(attn): 0.1328, norm(output): 0.3965, norm(x): 0.3611, norm(y): 1.0003, norm:5.4178, tok/sec: 101880.02, flops:41.91, batch-reuse:1
@ 579 train 7.2012 , allloss: 7.4175, dt: 1279.81ms, fracRes: 0.0405, norm(attn): 0.1357, norm(output): 0.4062, norm(x): 0.3686, norm(y): 1.0003, norm:3.2401, tok/sec: 102414.88, flops:42.13, batch-reuse:1
@ 580 train 7.2910 , allloss: 7.5081, dt: 1286.36ms, fracRes: 0.0444, norm(attn): 0.1396, norm(output): 0.4062, norm(x): 0.3708, norm(y): 1.0003, norm:7.2679, tok/sec: 101893.49, flops:41.91, batch-reuse:1
@ 581 train 7.2081 , allloss: 7.4222, dt: 1294.21ms, fracRes: 0.0436, norm(attn): 0.1416, norm(output): 0.4062, norm(x): 0.3725, norm(y): 1.0003, norm:9.5765, tok/sec: 101275.55, flops:41.66, batch-reuse:1
@ 582 train 7.2360 , allloss: 7.4550, dt: 1309.26ms, fracRes: 0.0397, norm(attn): 0.1396, norm(output): 0.4004, norm(x): 0.3655, norm(y): 1.0003, norm:4.4064, tok/sec: 100111.61, flops:41.18, batch-reuse:1
@ 583 train 7.1965 , allloss: 7.4194, dt: 1316.40ms, fracRes: 0.0348, norm(attn): 0.1387, norm(output): 0.3965, norm(x): 0.3611, norm(y): 1.0003, norm:11.1621, tok/sec: 99568.71, flops:40.96, batch-reuse:1
@ 584 train 7.2170 , allloss: 7.4421, dt: 1268.13ms, fracRes: 0.0326, norm(attn): 0.1348, norm(output): 0.3848, norm(x): 0.3572, norm(y): 1.0003, norm:4.7027, tok/sec: 103358.21, flops:42.52, batch-reuse:1
@ 585 train 7.1856 , allloss: 7.4128, dt: 1292.31ms, fracRes: 0.0338, norm(attn): 0.1357, norm(output): 0.3926, norm(x): 0.3592, norm(y): 1.0003, norm:8.3337, tok/sec: 101424.24, flops:41.72, batch-reuse:1
@ 586 train 7.2299 , allloss: 7.4526, dt: 1275.07ms, fracRes: 0.0358, norm(attn): 0.1338, norm(output): 0.4043, norm(x): 0.3673, norm(y): 1.0003, norm:8.2167, tok/sec: 102795.56, flops:42.29, batch-reuse:1
@ 587 train 7.2206 , allloss: 7.4318, dt: 1257.47ms, fracRes: 0.0386, norm(attn): 0.1328, norm(output): 0.4043, norm(x): 0.3662, norm(y): 1.0003, norm:4.0597, tok/sec: 104234.98, flops:42.88, batch-reuse:1
@ 588 train 7.2153 , allloss: 7.4266, dt: 1304.25ms, fracRes: 0.0384, norm(attn): 0.1328, norm(output): 0.3906, norm(x): 0.3600, norm(y): 1.0003, norm:7.1197, tok/sec: 100496.11, flops:41.34, batch-reuse:1
@ 589 train 7.2537 , allloss: 7.4761, dt: 1294.44ms, fracRes: 0.0361, norm(attn): 0.1348, norm(output): 0.3867, norm(x): 0.3575, norm(y): 1.0002, norm:10.7214, tok/sec: 101257.91, flops:41.65, batch-reuse:1
@ 590 train 7.2178 , allloss: 7.4463, dt: 1292.84ms, fracRes: 0.0349, norm(attn): 0.1396, norm(output): 0.3867, norm(x): 0.3538, norm(y): 1.0003, norm:5.6968, tok/sec: 101382.83, flops:41.70, batch-reuse:1
@ 591 train 7.1493 , allloss: 7.3716, dt: 1288.32ms, fracRes: 0.0367, norm(attn): 0.1416, norm(output): 0.3965, norm(x): 0.3589, norm(y): 1.0003, norm:5.0029, tok/sec: 101738.37, flops:41.85, batch-reuse:1
@ 592 train 7.1669 , allloss: 7.3899, dt: 1309.54ms, fracRes: 0.0378, norm(attn): 0.1406, norm(output): 0.4043, norm(x): 0.3666, norm(y): 1.0003, norm:6.2117, tok/sec: 100089.92, flops:41.17, batch-reuse:1
@ 593 train 7.1391 , allloss: 7.3581, dt: 1301.65ms, fracRes: 0.0380, norm(attn): 0.1406, norm(output): 0.4023, norm(x): 0.3631, norm(y): 1.0003, norm:3.3188, tok/sec: 100696.90, flops:41.42, batch-reuse:1
@ 594 train 7.2991 , allloss: 7.5203, dt: 1291.16ms, fracRes: 0.0368, norm(attn): 0.1396, norm(output): 0.3887, norm(x): 0.3567, norm(y): 1.0003, norm:4.2920, tok/sec: 101515.08, flops:41.76, batch-reuse:1
@ 595 train 7.2015 , allloss: 7.4285, dt: 1274.91ms, fracRes: 0.0365, norm(attn): 0.1387, norm(output): 0.3828, norm(x): 0.3518, norm(y): 1.0003, norm:13.8057, tok/sec: 102808.50, flops:42.29, batch-reuse:1
@ 596 train 7.1867 , allloss: 7.4153, dt: 1263.82ms, fracRes: 0.0371, norm(attn): 0.1406, norm(output): 0.3770, norm(x): 0.3478, norm(y): 1.0003, norm:6.3499, tok/sec: 103711.07, flops:42.66, batch-reuse:1
@ 597 train 7.1544 , allloss: 7.3697, dt: 1297.28ms, fracRes: 0.0380, norm(attn): 0.1396, norm(output): 0.3789, norm(x): 0.3495, norm(y): 1.0003, norm:10.7574, tok/sec: 101035.93, flops:41.56, batch-reuse:1
@ 598 train 7.2211 , allloss: 7.4344, dt: 1314.19ms, fracRes: 0.0369, norm(attn): 0.1367, norm(output): 0.3945, norm(x): 0.3585, norm(y): 1.0003, norm:3.9316, tok/sec: 99735.77, flops:41.03, batch-reuse:1
@ 599 train 7.3628 , allloss: 7.5895, dt: 1323.13ms, fracRes: 0.0339, norm(attn): 0.1387, norm(output): 0.4043, norm(x): 0.3669, norm(y): 1.0003, norm:22.2657, tok/sec: 99061.85, flops:40.75, batch-reuse:1
@ 600 train 7.2471 , allloss: 7.4839, dt: 1291.20ms, fracRes: 0.0317, norm(attn): 0.1387, norm(output): 0.4023, norm(x): 0.3658, norm(y): 1.0003, norm:16.1264, tok/sec: 101512.12, flops:41.76, batch-reuse:1
@ 601 train 7.2798 , allloss: 7.5188, dt: 1290.21ms, fracRes: 0.0308, norm(attn): 0.1367, norm(output): 0.4004, norm(x): 0.3625, norm(y): 1.0004, norm:10.8529, tok/sec: 101589.64, flops:41.79, batch-reuse:1
@ 602 train 7.2413 , allloss: 7.4582, dt: 1292.24ms, fracRes: 0.0318, norm(attn): 0.1338, norm(output): 0.4004, norm(x): 0.3613, norm(y): 1.0004, norm:8.0731, tok/sec: 101430.23, flops:41.72, batch-reuse:1
@ 603 train 7.1906 , allloss: 7.3974, dt: 1271.90ms, fracRes: 0.0320, norm(attn): 0.1357, norm(output): 0.3984, norm(x): 0.3623, norm(y): 1.0004, norm:9.6090, tok/sec: 103052.52, flops:42.39, batch-reuse:1
@ 604 train 7.0980 , allloss: 7.3044, dt: 1283.11ms, fracRes: 0.0315, norm(attn): 0.1377, norm(output): 0.3965, norm(x): 0.3577, norm(y): 1.0004, norm:6.6278, tok/sec: 102151.87, flops:42.02, batch-reuse:1
@ 605 train 7.1797 , allloss: 7.4023, dt: 1256.57ms, fracRes: 0.0311, norm(attn): 0.1387, norm(output): 0.3828, norm(x): 0.3528, norm(y): 1.0004, norm:11.7293, tok/sec: 104309.64, flops:42.91, batch-reuse:1
@ 606 train 7.1902 , allloss: 7.4188, dt: 1287.55ms, fracRes: 0.0321, norm(attn): 0.1357, norm(output): 0.3867, norm(x): 0.3534, norm(y): 1.0003, norm:9.5216, tok/sec: 101799.90, flops:41.88, batch-reuse:1
@ 607 train 7.1680 , allloss: 7.3841, dt: 1292.72ms, fracRes: 0.0347, norm(attn): 0.1377, norm(output): 0.3984, norm(x): 0.3612, norm(y): 1.0003, norm:9.1293, tok/sec: 101392.14, flops:41.71, batch-reuse:1
@ 608 train 7.0751 , allloss: 7.2805, dt: 1296.22ms, fracRes: 0.0357, norm(attn): 0.1348, norm(output): 0.4004, norm(x): 0.3621, norm(y): 1.0004, norm:8.7122, tok/sec: 101118.99, flops:41.60, batch-reuse:1
@ 609 train 7.0904 , allloss: 7.2999, dt: 1302.44ms, fracRes: 0.0350, norm(attn): 0.1387, norm(output): 0.4004, norm(x): 0.3595, norm(y): 1.0004, norm:6.2845, tok/sec: 100636.01, flops:41.40, batch-reuse:1
@ 610 train 7.2419 , allloss: 7.4683, dt: 1268.73ms, fracRes: 0.0326, norm(attn): 0.1406, norm(output): 0.4004, norm(x): 0.3622, norm(y): 1.0004, norm:6.4459, tok/sec: 103309.44, flops:42.50, batch-reuse:1
@ 611 train 7.1955 , allloss: 7.4239, dt: 1305.60ms, fracRes: 0.0320, norm(attn): 0.1406, norm(output): 0.4043, norm(x): 0.3662, norm(y): 1.0004, norm:11.7961, tok/sec: 100392.03, flops:41.30, batch-reuse:1
@ 612 train 7.2250 , allloss: 7.4548, dt: 1283.83ms, fracRes: 0.0328, norm(attn): 0.1396, norm(output): 0.4023, norm(x): 0.3653, norm(y): 1.0004, norm:9.5380, tok/sec: 102094.35, flops:42.00, batch-reuse:1
@ 613 train 7.2550 , allloss: 7.4854, dt: 1289.35ms, fracRes: 0.0338, norm(attn): 0.1396, norm(output): 0.3926, norm(x): 0.3564, norm(y): 1.0004, norm:6.5986, tok/sec: 101657.31, flops:41.82, batch-reuse:1
@ 614 train 7.1569 , allloss: 7.3776, dt: 1328.95ms, fracRes: 0.0354, norm(attn): 0.1367, norm(output): 0.3848, norm(x): 0.3536, norm(y): 1.0004, norm:4.7162, tok/sec: 98627.96, flops:40.57, batch-reuse:1
@ 615 train 7.1763 , allloss: 7.3965, dt: 1305.06ms, fracRes: 0.0359, norm(attn): 0.1348, norm(output): 0.3945, norm(x): 0.3571, norm(y): 1.0003, norm:12.4155, tok/sec: 100433.94, flops:41.31, batch-reuse:1
@ 616 train 7.1737 , allloss: 7.3961, dt: 1312.47ms, fracRes: 0.0367, norm(attn): 0.1377, norm(output): 0.3906, norm(x): 0.3562, norm(y): 1.0003, norm:7.1443, tok/sec: 99866.34, flops:41.08, batch-reuse:1
@ 617 train 7.0013 , allloss: 7.2188, dt: 1300.83ms, fracRes: 0.0367, norm(attn): 0.1387, norm(output): 0.3789, norm(x): 0.3480, norm(y): 1.0004, norm:5.6372, tok/sec: 100760.27, flops:41.45, batch-reuse:1
@ 618 train 7.1168 , allloss: 7.3349, dt: 1293.72ms, fracRes: 0.0367, norm(attn): 0.1396, norm(output): 0.3828, norm(x): 0.3508, norm(y): 1.0004, norm:5.2960, tok/sec: 101314.17, flops:41.68, batch-reuse:1
@ 619 train 7.0998 , allloss: 7.3235, dt: 1301.77ms, fracRes: 0.0343, norm(attn): 0.1367, norm(output): 0.3906, norm(x): 0.3550, norm(y): 1.0003, norm:6.0701, tok/sec: 100687.42, flops:41.42, batch-reuse:1
@ 620 train 7.0845 , allloss: 7.2971, dt: 1310.21ms, fracRes: 0.0357, norm(attn): 0.1338, norm(output): 0.3906, norm(x): 0.3561, norm(y): 1.0004, norm:4.9469, tok/sec: 100038.65, flops:41.15, batch-reuse:1
@ 621 train 7.1019 , allloss: 7.3151, dt: 1291.58ms, fracRes: 0.0370, norm(attn): 0.1357, norm(output): 0.3828, norm(x): 0.3511, norm(y): 1.0004, norm:6.7832, tok/sec: 101482.06, flops:41.74, batch-reuse:1
@ 622 train 7.0194 , allloss: 7.2369, dt: 1291.26ms, fracRes: 0.0382, norm(attn): 0.1416, norm(output): 0.3789, norm(x): 0.3465, norm(y): 1.0004, norm:5.2732, tok/sec: 101506.96, flops:41.76, batch-reuse:1
@ 623 train 7.0467 , allloss: 7.2656, dt: 1310.23ms, fracRes: 0.0385, norm(attn): 0.1426, norm(output): 0.3789, norm(x): 0.3467, norm(y): 1.0004, norm:4.0491, tok/sec: 100037.41, flops:41.15, batch-reuse:1
@ 624 train 7.1609 , allloss: 7.4028, dt: 1300.55ms, fracRes: 0.0378, norm(attn): 0.1396, norm(output): 0.3809, norm(x): 0.3482, norm(y): 1.0004, norm:10.7338, tok/sec: 100782.11, flops:41.46, batch-reuse:1
@ 625 train 7.2019 , allloss: 7.4258, dt: 1286.65ms, fracRes: 0.0420, norm(attn): 0.1357, norm(output): 0.3867, norm(x): 0.3534, norm(y): 1.0004, norm:4.5197, tok/sec: 101870.64, flops:41.90, batch-reuse:1
@ 626 train 7.1068 , allloss: 7.3085, dt: 1295.96ms, fracRes: 0.0485, norm(attn): 0.1318, norm(output): 0.3848, norm(x): 0.3528, norm(y): 1.0004, norm:6.5418, tok/sec: 101138.72, flops:41.60, batch-reuse:1
@ 627 train 7.1059 , allloss: 7.3104, dt: 1304.84ms, fracRes: 0.0518, norm(attn): 0.1318, norm(output): 0.3809, norm(x): 0.3500, norm(y): 1.0004, norm:5.6174, tok/sec: 100450.86, flops:41.32, batch-reuse:1
@ 628 train 7.1008 , allloss: 7.3265, dt: 1265.91ms, fracRes: 0.0485, norm(attn): 0.1348, norm(output): 0.3789, norm(x): 0.3492, norm(y): 1.0003, norm:6.2805, tok/sec: 103539.69, flops:42.59, batch-reuse:1
@ 629 train 7.1421 , allloss: 7.3591, dt: 1284.10ms, fracRes: 0.0484, norm(attn): 0.1396, norm(output): 0.3945, norm(x): 0.3560, norm(y): 1.0004, norm:4.6421, tok/sec: 102072.82, flops:41.99, batch-reuse:1
@ 630 train 7.2389 , allloss: 7.4514, dt: 1309.11ms, fracRes: 0.0484, norm(attn): 0.1406, norm(output): 0.3926, norm(x): 0.3577, norm(y): 1.0004, norm:3.4993, tok/sec: 100123.10, flops:41.19, batch-reuse:1
@ 631 train 7.1169 , allloss: 7.3326, dt: 1290.90ms, fracRes: 0.0449, norm(attn): 0.1396, norm(output): 0.3906, norm(x): 0.3545, norm(y): 1.0004, norm:3.5406, tok/sec: 101535.53, flops:41.77, batch-reuse:1
@ 632 train 7.2322 , allloss: 7.4550, dt: 1287.22ms, fracRes: 0.0416, norm(attn): 0.1367, norm(output): 0.3828, norm(x): 0.3514, norm(y): 1.0004, norm:5.9759, tok/sec: 101825.49, flops:41.89, batch-reuse:1
@ 633 train 7.1640 , allloss: 7.3753, dt: 1316.94ms, fracRes: 0.0448, norm(attn): 0.1318, norm(output): 0.3867, norm(x): 0.3554, norm(y): 1.0004, norm:5.1692, tok/sec: 99527.90, flops:40.94, batch-reuse:1
@ 634 train 6.9643 , allloss: 7.1662, dt: 1323.22ms, fracRes: 0.0476, norm(attn): 0.1270, norm(output): 0.3789, norm(x): 0.3492, norm(y): 1.0004, norm:3.7826, tok/sec: 99055.05, flops:40.75, batch-reuse:1
@ 635 train 7.1392 , allloss: 7.3522, dt: 1305.09ms, fracRes: 0.0464, norm(attn): 0.1328, norm(output): 0.3789, norm(x): 0.3495, norm(y): 1.0004, norm:5.7051, tok/sec: 100431.10, flops:41.31, batch-reuse:1
@ 636 train 7.1319 , allloss: 7.3466, dt: 1301.38ms, fracRes: 0.0437, norm(attn): 0.1367, norm(output): 0.3789, norm(x): 0.3472, norm(y): 1.0004, norm:2.6409, tok/sec: 100717.34, flops:41.43, batch-reuse:1
@ 637 train 6.9944 , allloss: 7.2113, dt: 1315.02ms, fracRes: 0.0436, norm(attn): 0.1377, norm(output): 0.3750, norm(x): 0.3442, norm(y): 1.0004, norm:6.3014, tok/sec: 99673.15, flops:41.00, batch-reuse:1
@ 638 train 6.9919 , allloss: 7.2097, dt: 1320.74ms, fracRes: 0.0440, norm(attn): 0.1348, norm(output): 0.3770, norm(x): 0.3487, norm(y): 1.0004, norm:7.4944, tok/sec: 99241.03, flops:40.82, batch-reuse:1
@ 639 train 7.0655 , allloss: 7.2856, dt: 1318.45ms, fracRes: 0.0436, norm(attn): 0.1396, norm(output): 0.3770, norm(x): 0.3470, norm(y): 1.0004, norm:4.8366, tok/sec: 99413.56, flops:40.89, batch-reuse:1
@ 640 train 7.0927 , allloss: 7.3295, dt: 1318.48ms, fracRes: 0.0410, norm(attn): 0.1396, norm(output): 0.3750, norm(x): 0.3406, norm(y): 1.0004, norm:21.0750, tok/sec: 99411.44, flops:40.89, batch-reuse:1
@ 641 train 7.1392 , allloss: 7.3585, dt: 1317.61ms, fracRes: 0.0452, norm(attn): 0.1377, norm(output): 0.3770, norm(x): 0.3441, norm(y): 1.0004, norm:8.0453, tok/sec: 99476.76, flops:40.92, batch-reuse:1
@ 642 train 6.9766 , allloss: 7.1689, dt: 1303.54ms, fracRes: 0.0582, norm(attn): 0.1328, norm(output): 0.3770, norm(x): 0.3468, norm(y): 1.0005, norm:8.0933, tok/sec: 100550.68, flops:41.36, batch-reuse:1
@ 643 train 6.9910 , allloss: 7.1824, dt: 1273.50ms, fracRes: 0.0655, norm(attn): 0.1270, norm(output): 0.3828, norm(x): 0.3522, norm(y): 1.0005, norm:6.3458, tok/sec: 102922.33, flops:42.34, batch-reuse:1
@ 644 train 7.1756 , allloss: 7.3960, dt: 1270.39ms, fracRes: 0.0571, norm(attn): 0.1289, norm(output): 0.3828, norm(x): 0.3518, norm(y): 1.0004, norm:7.3678, tok/sec: 103174.32, flops:42.44, batch-reuse:1
@ 645 train 7.0744 , allloss: 7.2987, dt: 1265.08ms, fracRes: 0.0484, norm(attn): 0.1328, norm(output): 0.3750, norm(x): 0.3444, norm(y): 1.0004, norm:4.5109, tok/sec: 103607.43, flops:42.62, batch-reuse:1
@ 646 train 6.9966 , allloss: 7.1958, dt: 1288.09ms, fracRes: 0.0465, norm(attn): 0.1328, norm(output): 0.3750, norm(x): 0.3431, norm(y): 1.0005, norm:8.8492, tok/sec: 101757.15, flops:41.86, batch-reuse:1
@ 647 train 7.0487 , allloss: 7.2527, dt: 1279.95ms, fracRes: 0.0452, norm(attn): 0.1357, norm(output): 0.3730, norm(x): 0.3389, norm(y): 1.0005, norm:7.6053, tok/sec: 102404.03, flops:42.12, batch-reuse:1
@ 648 train 6.9174 , allloss: 7.1357, dt: 1292.56ms, fracRes: 0.0403, norm(attn): 0.1377, norm(output): 0.3652, norm(x): 0.3330, norm(y): 1.0005, norm:6.3914, tok/sec: 101405.14, flops:41.71, batch-reuse:1
@ 649 train 7.0179 , allloss: 7.2434, dt: 1323.60ms, fracRes: 0.0387, norm(attn): 0.1338, norm(output): 0.3750, norm(x): 0.3406, norm(y): 1.0005, norm:3.8408, tok/sec: 99027.23, flops:40.74, batch-reuse:1
@ 650 train 6.9363 , allloss: 7.1565, dt: 1315.79ms, fracRes: 0.0411, norm(attn): 0.1328, norm(output): 0.3750, norm(x): 0.3427, norm(y): 1.0005, norm:8.1317, tok/sec: 99614.99, flops:40.98, batch-reuse:1
@ 651 train 6.9973 , allloss: 7.2124, dt: 1317.90ms, fracRes: 0.0425, norm(attn): 0.1318, norm(output): 0.3770, norm(x): 0.3468, norm(y): 1.0005, norm:3.7360, tok/sec: 99455.29, flops:40.91, batch-reuse:1
@ 652 train 6.9428 , allloss: 7.1560, dt: 1311.98ms, fracRes: 0.0415, norm(attn): 0.1328, norm(output): 0.3750, norm(x): 0.3448, norm(y): 1.0005, norm:13.4265, tok/sec: 99904.23, flops:41.10, batch-reuse:1
@ 653 train 6.9419 , allloss: 7.1550, dt: 1313.89ms, fracRes: 0.0433, norm(attn): 0.1357, norm(output): 0.3730, norm(x): 0.3397, norm(y): 1.0005, norm:7.5776, tok/sec: 99758.91, flops:41.04, batch-reuse:1
@ 654 train 7.0021 , allloss: 7.2149, dt: 1292.82ms, fracRes: 0.0481, norm(attn): 0.1367, norm(output): 0.3711, norm(x): 0.3387, norm(y): 1.0005, norm:10.3329, tok/sec: 101384.57, flops:41.70, batch-reuse:1
@ 655 train 6.9973 , allloss: 7.2057, dt: 1307.48ms, fracRes: 0.0476, norm(attn): 0.1328, norm(output): 0.3750, norm(x): 0.3418, norm(y): 1.0005, norm:7.6830, tok/sec: 100247.91, flops:41.24, batch-reuse:1
@ 656 train 6.9447 , allloss: 7.1640, dt: 1288.33ms, fracRes: 0.0438, norm(attn): 0.1328, norm(output): 0.3770, norm(x): 0.3432, norm(y): 1.0005, norm:7.4982, tok/sec: 101737.73, flops:41.85, batch-reuse:1
@ 657 train 6.9731 , allloss: 7.2051, dt: 1309.61ms, fracRes: 0.0424, norm(attn): 0.1357, norm(output): 0.3750, norm(x): 0.3383, norm(y): 1.0005, norm:10.7087, tok/sec: 100085.06, flops:41.17, batch-reuse:1
@ 658 train 7.0324 , allloss: 7.2607, dt: 1291.40ms, fracRes: 0.0445, norm(attn): 0.1406, norm(output): 0.3711, norm(x): 0.3380, norm(y): 1.0005, norm:6.6270, tok/sec: 101496.37, flops:41.75, batch-reuse:1
@ 659 train 6.9634 , allloss: 7.1789, dt: 1270.09ms, fracRes: 0.0492, norm(attn): 0.1377, norm(output): 0.3730, norm(x): 0.3395, norm(y): 1.0005, norm:6.4315, tok/sec: 103198.84, flops:42.45, batch-reuse:1
@ 660 train 7.0147 , allloss: 7.2495, dt: 1271.08ms, fracRes: 0.0466, norm(attn): 0.1367, norm(output): 0.3711, norm(x): 0.3378, norm(y): 1.0004, norm:6.0357, tok/sec: 103118.65, flops:42.42, batch-reuse:1
@ 661 train 6.9540 , allloss: 7.1825, dt: 1287.16ms, fracRes: 0.0461, norm(attn): 0.1328, norm(output): 0.3730, norm(x): 0.3377, norm(y): 1.0004, norm:3.2273, tok/sec: 101830.60, flops:41.89, batch-reuse:1
@ 662 train 6.9926 , allloss: 7.2087, dt: 1316.95ms, fracRes: 0.0453, norm(attn): 0.1309, norm(output): 0.3750, norm(x): 0.3423, norm(y): 1.0005, norm:6.1984, tok/sec: 99527.18, flops:40.94, batch-reuse:1
@ 663 train 6.9565 , allloss: 7.1860, dt: 1299.10ms, fracRes: 0.0419, norm(attn): 0.1318, norm(output): 0.3711, norm(x): 0.3371, norm(y): 1.0005, norm:4.1864, tok/sec: 100894.19, flops:41.50, batch-reuse:1
@ 664 train 6.9099 , allloss: 7.1469, dt: 1284.47ms, fracRes: 0.0407, norm(attn): 0.1328, norm(output): 0.3691, norm(x): 0.3337, norm(y): 1.0005, norm:7.9417, tok/sec: 102043.66, flops:41.98, batch-reuse:1
@ 665 train 6.9303 , allloss: 7.1501, dt: 1283.85ms, fracRes: 0.0451, norm(attn): 0.1318, norm(output): 0.3711, norm(x): 0.3365, norm(y): 1.0005, norm:3.8779, tok/sec: 102093.27, flops:42.00, batch-reuse:1
@ 666 train 6.8044 , allloss: 7.0228, dt: 1261.15ms, fracRes: 0.0494, norm(attn): 0.1299, norm(output): 0.3691, norm(x): 0.3340, norm(y): 1.0005, norm:7.8968, tok/sec: 103930.31, flops:42.75, batch-reuse:1
@ 667 train 6.7957 , allloss: 7.0183, dt: 1276.37ms, fracRes: 0.0488, norm(attn): 0.1279, norm(output): 0.3711, norm(x): 0.3355, norm(y): 1.0005, norm:4.6839, tok/sec: 102691.62, flops:42.24, batch-reuse:1
@ 668 train 6.9663 , allloss: 7.1961, dt: 1270.81ms, fracRes: 0.0447, norm(attn): 0.1260, norm(output): 0.3730, norm(x): 0.3384, norm(y): 1.0005, norm:11.1970, tok/sec: 103140.74, flops:42.43, batch-reuse:1
@ 669 train 6.9141 , allloss: 7.1422, dt: 1323.12ms, fracRes: 0.0410, norm(attn): 0.1270, norm(output): 0.3711, norm(x): 0.3368, norm(y): 1.0005, norm:8.3815, tok/sec: 99062.58, flops:40.75, batch-reuse:1
@ 670 train 7.0004 , allloss: 7.2338, dt: 1284.88ms, fracRes: 0.0398, norm(attn): 0.1328, norm(output): 0.3633, norm(x): 0.3324, norm(y): 1.0005, norm:6.7601, tok/sec: 102011.13, flops:41.96, batch-reuse:1
@ 671 train 6.8537 , allloss: 7.0840, dt: 1274.40ms, fracRes: 0.0408, norm(attn): 0.1328, norm(output): 0.3633, norm(x): 0.3313, norm(y): 1.0005, norm:5.1223, tok/sec: 102849.72, flops:42.31, batch-reuse:1
@ 672 train 6.9112 , allloss: 7.1496, dt: 1271.46ms, fracRes: 0.0402, norm(attn): 0.1279, norm(output): 0.3711, norm(x): 0.3353, norm(y): 1.0005, norm:8.2345, tok/sec: 103087.65, flops:42.41, batch-reuse:1
@ 673 train 6.9087 , allloss: 7.1471, dt: 1287.97ms, fracRes: 0.0400, norm(attn): 0.1270, norm(output): 0.3672, norm(x): 0.3318, norm(y): 1.0005, norm:7.1650, tok/sec: 101766.60, flops:41.86, batch-reuse:1
@ 674 train 6.9395 , allloss: 7.1595, dt: 1317.84ms, fracRes: 0.0444, norm(attn): 0.1318, norm(output): 0.3672, norm(x): 0.3315, norm(y): 1.0005, norm:5.5015, tok/sec: 99459.59, flops:40.91, batch-reuse:1
@ 675 train 6.8043 , allloss: 7.0197, dt: 1314.33ms, fracRes: 0.0460, norm(attn): 0.1289, norm(output): 0.3613, norm(x): 0.3311, norm(y): 1.0006, norm:4.0802, tok/sec: 99725.40, flops:41.02, batch-reuse:1
@ 676 train 6.9041 , allloss: 7.1355, dt: 1321.01ms, fracRes: 0.0445, norm(attn): 0.1245, norm(output): 0.3711, norm(x): 0.3367, norm(y): 1.0005, norm:5.5519, tok/sec: 99220.97, flops:40.81, batch-reuse:1
@ 677 train 7.0194 , allloss: 7.2612, dt: 1324.09ms, fracRes: 0.0452, norm(attn): 0.1270, norm(output): 0.3730, norm(x): 0.3375, norm(y): 1.0005, norm:3.7299, tok/sec: 98990.30, flops:40.72, batch-reuse:1
@ 678 train 6.8064 , allloss: 7.0352, dt: 1286.54ms, fracRes: 0.0462, norm(attn): 0.1318, norm(output): 0.3633, norm(x): 0.3288, norm(y): 1.0005, norm:3.0017, tok/sec: 101879.27, flops:41.91, batch-reuse:1
@ 679 train 6.9123 , allloss: 7.1419, dt: 1301.84ms, fracRes: 0.0438, norm(attn): 0.1299, norm(output): 0.3652, norm(x): 0.3312, norm(y): 1.0005, norm:5.6288, tok/sec: 100682.14, flops:41.42, batch-reuse:1
@ 680 train 6.8656 , allloss: 7.1138, dt: 1314.81ms, fracRes: 0.0406, norm(attn): 0.1318, norm(output): 0.3594, norm(x): 0.3268, norm(y): 1.0005, norm:4.5534, tok/sec: 99688.87, flops:41.01, batch-reuse:1
@ 681 train 6.8815 , allloss: 7.1196, dt: 1295.52ms, fracRes: 0.0435, norm(attn): 0.1318, norm(output): 0.3574, norm(x): 0.3270, norm(y): 1.0005, norm:4.4788, tok/sec: 101173.06, flops:41.62, batch-reuse:1
@ 682 train 6.8960 , allloss: 7.1213, dt: 1324.56ms, fracRes: 0.0480, norm(attn): 0.1279, norm(output): 0.3633, norm(x): 0.3310, norm(y): 1.0005, norm:3.4722, tok/sec: 98954.81, flops:40.71, batch-reuse:1
@ 683 train 6.8850 , allloss: 7.1145, dt: 1326.77ms, fracRes: 0.0467, norm(attn): 0.1250, norm(output): 0.3672, norm(x): 0.3327, norm(y): 1.0005, norm:8.8868, tok/sec: 98790.41, flops:40.64, batch-reuse:1
@ 684 train 6.8431 , allloss: 7.0599, dt: 1316.21ms, fracRes: 0.0479, norm(attn): 0.1250, norm(output): 0.3730, norm(x): 0.3339, norm(y): 1.0005, norm:6.3832, tok/sec: 99582.95, flops:40.96, batch-reuse:1
@ 685 train 6.9053 , allloss: 7.1258, dt: 1316.38ms, fracRes: 0.0477, norm(attn): 0.1289, norm(output): 0.3594, norm(x): 0.3307, norm(y): 1.0005, norm:5.7703, tok/sec: 99570.03, flops:40.96, batch-reuse:1
@ 686 train 6.9717 , allloss: 7.2151, dt: 1325.12ms, fracRes: 0.0432, norm(attn): 0.1318, norm(output): 0.3555, norm(x): 0.3263, norm(y): 1.0005, norm:4.7828, tok/sec: 98913.27, flops:40.69, batch-reuse:1
@ 687 train 6.9101 , allloss: 7.1514, dt: 1312.99ms, fracRes: 0.0413, norm(attn): 0.1328, norm(output): 0.3555, norm(x): 0.3268, norm(y): 1.0005, norm:8.8498, tok/sec: 99827.39, flops:41.06, batch-reuse:1
@ 688 train 6.8855 , allloss: 7.1169, dt: 1291.16ms, fracRes: 0.0436, norm(attn): 0.1328, norm(output): 0.3613, norm(x): 0.3277, norm(y): 1.0005, norm:3.6471, tok/sec: 101515.30, flops:41.76, batch-reuse:1
@ 689 train 6.9219 , allloss: 7.1641, dt: 1261.52ms, fracRes: 0.0450, norm(attn): 0.1318, norm(output): 0.3516, norm(x): 0.3215, norm(y): 1.0005, norm:11.0803, tok/sec: 103899.95, flops:42.74, batch-reuse:1
@ 690 train 6.9419 , allloss: 7.1728, dt: 1269.55ms, fracRes: 0.0507, norm(attn): 0.1289, norm(output): 0.3555, norm(x): 0.3236, norm(y): 1.0006, norm:8.6033, tok/sec: 103242.86, flops:42.47, batch-reuse:1
@ 691 train 6.9094 , allloss: 7.1255, dt: 1269.49ms, fracRes: 0.0539, norm(attn): 0.1260, norm(output): 0.3594, norm(x): 0.3296, norm(y): 1.0005, norm:8.3608, tok/sec: 103247.74, flops:42.47, batch-reuse:1
@ 692 train 6.8340 , allloss: 7.0585, dt: 1270.40ms, fracRes: 0.0466, norm(attn): 0.1299, norm(output): 0.3535, norm(x): 0.3240, norm(y): 1.0005, norm:7.0041, tok/sec: 103174.09, flops:42.44, batch-reuse:1
@ 693 train 6.8755 , allloss: 7.1198, dt: 1273.96ms, fracRes: 0.0391, norm(attn): 0.1348, norm(output): 0.3457, norm(x): 0.3186, norm(y): 1.0005, norm:6.2128, tok/sec: 102885.87, flops:42.32, batch-reuse:1
@ 694 train 6.8099 , allloss: 7.0605, dt: 1279.24ms, fracRes: 0.0376, norm(attn): 0.1318, norm(output): 0.3477, norm(x): 0.3189, norm(y): 1.0006, norm:6.4652, tok/sec: 102461.04, flops:42.15, batch-reuse:1
@ 695 train 6.8761 , allloss: 7.1222, dt: 1277.50ms, fracRes: 0.0407, norm(attn): 0.1270, norm(output): 0.3535, norm(x): 0.3242, norm(y): 1.0006, norm:6.5065, tok/sec: 102600.69, flops:42.21, batch-reuse:1
@ 696 train 6.7663 , allloss: 6.9914, dt: 1270.65ms, fracRes: 0.0443, norm(attn): 0.1279, norm(output): 0.3535, norm(x): 0.3246, norm(y): 1.0006, norm:6.2463, tok/sec: 103153.40, flops:42.43, batch-reuse:1
@ 697 train 6.7775 , allloss: 7.0074, dt: 1275.68ms, fracRes: 0.0452, norm(attn): 0.1309, norm(output): 0.3496, norm(x): 0.3216, norm(y): 1.0006, norm:4.6530, tok/sec: 102746.46, flops:42.27, batch-reuse:1
@ 698 train 6.8499 , allloss: 7.0849, dt: 1268.22ms, fracRes: 0.0421, norm(attn): 0.1328, norm(output): 0.3496, norm(x): 0.3225, norm(y): 1.0006, norm:4.4449, tok/sec: 103350.98, flops:42.51, batch-reuse:1
@ 699 train 6.8998 , allloss: 7.1334, dt: 1290.54ms, fracRes: 0.0424, norm(attn): 0.1318, norm(output): 0.3535, norm(x): 0.3224, norm(y): 1.0006, norm:5.7669, tok/sec: 101563.56, flops:41.78, batch-reuse:1
@ 700 train 6.8490 , allloss: 7.1008, dt: 1273.42ms, fracRes: 0.0380, norm(attn): 0.1367, norm(output): 0.3438, norm(x): 0.3151, norm(y): 1.0006, norm:5.6380, tok/sec: 102929.50, flops:42.34, batch-reuse:1
@ 701 train 6.9049 , allloss: 7.1563, dt: 1268.82ms, fracRes: 0.0400, norm(attn): 0.1357, norm(output): 0.3477, norm(x): 0.3150, norm(y): 1.0006, norm:3.2760, tok/sec: 103302.18, flops:42.49, batch-reuse:1
@ 702 train 6.9062 , allloss: 7.1380, dt: 1285.20ms, fracRes: 0.0471, norm(attn): 0.1289, norm(output): 0.3535, norm(x): 0.3207, norm(y): 1.0005, norm:5.8681, tok/sec: 101985.39, flops:41.95, batch-reuse:1
@ 703 train 6.8333 , allloss: 7.0637, dt: 1283.64ms, fracRes: 0.0487, norm(attn): 0.1299, norm(output): 0.3477, norm(x): 0.3179, norm(y): 1.0006, norm:3.9318, tok/sec: 102109.44, flops:42.00, batch-reuse:1
@ 704 train 6.7687 , allloss: 7.0052, dt: 1284.22ms, fracRes: 0.0461, norm(attn): 0.1357, norm(output): 0.3438, norm(x): 0.3123, norm(y): 1.0006, norm:4.7421, tok/sec: 102063.34, flops:41.98, batch-reuse:1
@ 705 train 6.8094 , allloss: 7.0380, dt: 1276.29ms, fracRes: 0.0433, norm(attn): 0.1328, norm(output): 0.3457, norm(x): 0.3153, norm(y): 1.0006, norm:4.3779, tok/sec: 102697.48, flops:42.24, batch-reuse:1
@ 706 train 6.8313 , allloss: 7.0738, dt: 1289.48ms, fracRes: 0.0397, norm(attn): 0.1318, norm(output): 0.3457, norm(x): 0.3134, norm(y): 1.0006, norm:5.2592, tok/sec: 101647.08, flops:41.81, batch-reuse:1
@ 707 train 6.8443 , allloss: 7.0844, dt: 1274.88ms, fracRes: 0.0425, norm(attn): 0.1377, norm(output): 0.3418, norm(x): 0.3094, norm(y): 1.0006, norm:5.7004, tok/sec: 102811.62, flops:42.29, batch-reuse:1
@ 708 train 6.8142 , allloss: 7.0519, dt: 1289.09ms, fracRes: 0.0455, norm(attn): 0.1338, norm(output): 0.3418, norm(x): 0.3097, norm(y): 1.0006, norm:5.0977, tok/sec: 101677.88, flops:41.83, batch-reuse:1
@ 709 train 6.8011 , allloss: 7.0214, dt: 1310.65ms, fracRes: 0.0499, norm(attn): 0.1328, norm(output): 0.3418, norm(x): 0.3122, norm(y): 1.0006, norm:5.0507, tok/sec: 100005.68, flops:41.14, batch-reuse:1
@ 710 train 6.8559 , allloss: 7.0948, dt: 1290.75ms, fracRes: 0.0451, norm(attn): 0.1338, norm(output): 0.3418, norm(x): 0.3093, norm(y): 1.0006, norm:3.5364, tok/sec: 101547.14, flops:41.77, batch-reuse:1
@ 711 train 6.8700 , allloss: 7.1106, dt: 1277.45ms, fracRes: 0.0432, norm(attn): 0.1387, norm(output): 0.3340, norm(x): 0.3049, norm(y): 1.0006, norm:5.1899, tok/sec: 102604.40, flops:42.21, batch-reuse:1
@ 712 train 6.7805 , allloss: 7.0148, dt: 1262.71ms, fracRes: 0.0428, norm(attn): 0.1367, norm(output): 0.3418, norm(x): 0.3077, norm(y): 1.0006, norm:9.1846, tok/sec: 103802.41, flops:42.70, batch-reuse:1
@ 713 train 6.8467 , allloss: 7.0825, dt: 1280.14ms, fracRes: 0.0438, norm(attn): 0.1377, norm(output): 0.3398, norm(x): 0.3080, norm(y): 1.0006, norm:4.0118, tok/sec: 102389.19, flops:42.12, batch-reuse:1
@ 714 train 6.7377 , allloss: 6.9800, dt: 1282.53ms, fracRes: 0.0449, norm(attn): 0.1406, norm(output): 0.3301, norm(x): 0.3019, norm(y): 1.0006, norm:9.3246, tok/sec: 102198.07, flops:42.04, batch-reuse:1
@ 715 train 6.7734 , allloss: 6.9994, dt: 1322.64ms, fracRes: 0.0514, norm(attn): 0.1387, norm(output): 0.3340, norm(x): 0.3032, norm(y): 1.0006, norm:6.4809, tok/sec: 99098.63, flops:40.76, batch-reuse:1
@ 716 train 6.8011 , allloss: 7.0247, dt: 1297.60ms, fracRes: 0.0497, norm(attn): 0.1367, norm(output): 0.3379, norm(x): 0.3055, norm(y): 1.0006, norm:4.6546, tok/sec: 101010.95, flops:41.55, batch-reuse:1
@ 717 train 6.6658 , allloss: 6.9033, dt: 1290.42ms, fracRes: 0.0447, norm(attn): 0.1406, norm(output): 0.3242, norm(x): 0.2982, norm(y): 1.0007, norm:6.1672, tok/sec: 101572.77, flops:41.78, batch-reuse:1
@ 718 train 6.8525 , allloss: 7.0875, dt: 1322.93ms, fracRes: 0.0440, norm(attn): 0.1406, norm(output): 0.3281, norm(x): 0.2990, norm(y): 1.0007, norm:7.6853, tok/sec: 99076.92, flops:40.76, batch-reuse:1
@ 719 train 6.7675 , allloss: 7.0011, dt: 1286.96ms, fracRes: 0.0447, norm(attn): 0.1357, norm(output): 0.3320, norm(x): 0.3022, norm(y): 1.0006, norm:5.0265, tok/sec: 101845.99, flops:41.89, batch-reuse:1
@ 720 train 6.7383 , allloss: 6.9647, dt: 1258.14ms, fracRes: 0.0473, norm(attn): 0.1387, norm(output): 0.3301, norm(x): 0.3016, norm(y): 1.0007, norm:3.8446, tok/sec: 104178.88, flops:42.85, batch-reuse:1
@ 721 train 6.6932 , allloss: 6.9130, dt: 1270.27ms, fracRes: 0.0509, norm(attn): 0.1406, norm(output): 0.3281, norm(x): 0.3006, norm(y): 1.0007, norm:3.9426, tok/sec: 103184.45, flops:42.45, batch-reuse:1
@ 722 train 6.7936 , allloss: 7.0288, dt: 1284.76ms, fracRes: 0.0466, norm(attn): 0.1387, norm(output): 0.3281, norm(x): 0.2999, norm(y): 1.0006, norm:8.6046, tok/sec: 102020.61, flops:41.97, batch-reuse:1
@ 723 train 6.8085 , allloss: 7.0456, dt: 1269.80ms, fracRes: 0.0463, norm(attn): 0.1406, norm(output): 0.3242, norm(x): 0.2981, norm(y): 1.0007, norm:8.2185, tok/sec: 103222.60, flops:42.46, batch-reuse:1
@ 724 train 6.7746 , allloss: 7.0187, dt: 1273.13ms, fracRes: 0.0429, norm(attn): 0.1445, norm(output): 0.3203, norm(x): 0.2939, norm(y): 1.0007, norm:3.7269, tok/sec: 102952.36, flops:42.35, batch-reuse:1
@ 725 train 6.7530 , allloss: 6.9905, dt: 1305.08ms, fracRes: 0.0474, norm(attn): 0.1426, norm(output): 0.3223, norm(x): 0.2959, norm(y): 1.0007, norm:4.7190, tok/sec: 100431.80, flops:41.31, batch-reuse:1
@ 726 train 6.7998 , allloss: 7.0416, dt: 1293.36ms, fracRes: 0.0472, norm(attn): 0.1445, norm(output): 0.3223, norm(x): 0.2942, norm(y): 1.0006, norm:4.5913, tok/sec: 101342.26, flops:41.69, batch-reuse:1
@ 727 train 6.7981 , allloss: 7.0268, dt: 1295.40ms, fracRes: 0.0497, norm(attn): 0.1416, norm(output): 0.3242, norm(x): 0.2969, norm(y): 1.0007, norm:5.4079, tok/sec: 101182.90, flops:41.62, batch-reuse:1
@ 728 train 6.8037 , allloss: 7.0376, dt: 1306.15ms, fracRes: 0.0517, norm(attn): 0.1416, norm(output): 0.3242, norm(x): 0.2953, norm(y): 1.0007, norm:8.2105, tok/sec: 100350.01, flops:41.28, batch-reuse:1
@ 729 train 6.7430 , allloss: 6.9779, dt: 1270.22ms, fracRes: 0.0509, norm(attn): 0.1504, norm(output): 0.3164, norm(x): 0.2898, norm(y): 1.0007, norm:7.4248, tok/sec: 103188.23, flops:42.45, batch-reuse:1
@ 730 train 6.7431 , allloss: 6.9845, dt: 1296.48ms, fracRes: 0.0461, norm(attn): 0.1514, norm(output): 0.3164, norm(x): 0.2891, norm(y): 1.0007, norm:5.8328, tok/sec: 101098.72, flops:41.59, batch-reuse:1
@ 731 train 6.7898 , allloss: 7.0384, dt: 1295.68ms, fracRes: 0.0464, norm(attn): 0.1504, norm(output): 0.3145, norm(x): 0.2881, norm(y): 1.0007, norm:5.9119, tok/sec: 101160.89, flops:41.61, batch-reuse:1
@ 732 train 6.7457 , allloss: 6.9945, dt: 1300.89ms, fracRes: 0.0474, norm(attn): 0.1455, norm(output): 0.3145, norm(x): 0.2881, norm(y): 1.0007, norm:9.6428, tok/sec: 100755.71, flops:41.45, batch-reuse:1
@ 733 train 6.7611 , allloss: 6.9993, dt: 1271.13ms, fracRes: 0.0513, norm(attn): 0.1504, norm(output): 0.3164, norm(x): 0.2886, norm(y): 1.0007, norm:6.4802, tok/sec: 103114.58, flops:42.42, batch-reuse:1
@ 734 train 6.7457 , allloss: 6.9885, dt: 1302.16ms, fracRes: 0.0480, norm(attn): 0.1475, norm(output): 0.3145, norm(x): 0.2881, norm(y): 1.0007, norm:5.1020, tok/sec: 100657.33, flops:41.41, batch-reuse:1
@ 735 train 6.7764 , allloss: 7.0131, dt: 1306.15ms, fracRes: 0.0505, norm(attn): 0.1475, norm(output): 0.3125, norm(x): 0.2862, norm(y): 1.0007, norm:7.4067, tok/sec: 100350.09, flops:41.28, batch-reuse:1
@ 736 train 6.8204 , allloss: 7.0663, dt: 1285.13ms, fracRes: 0.0507, norm(attn): 0.1406, norm(output): 0.3164, norm(x): 0.2891, norm(y): 1.0006, norm:6.9567, tok/sec: 101991.41, flops:41.95, batch-reuse:1
@ 737 train 6.7089 , allloss: 6.9488, dt: 1285.37ms, fracRes: 0.0512, norm(attn): 0.1455, norm(output): 0.3145, norm(x): 0.2881, norm(y): 1.0007, norm:3.2830, tok/sec: 101972.32, flops:41.95, batch-reuse:1
@ 738 train 6.7713 , allloss: 7.0191, dt: 1279.17ms, fracRes: 0.0564, norm(attn): 0.1543, norm(output): 0.3125, norm(x): 0.2823, norm(y): 1.0007, norm:6.0993, tok/sec: 102466.54, flops:42.15, batch-reuse:1
@ 739 train 6.7707 , allloss: 7.0098, dt: 1288.12ms, fracRes: 0.0593, norm(attn): 0.1533, norm(output): 0.3125, norm(x): 0.2843, norm(y): 1.0007, norm:4.4321, tok/sec: 101754.55, flops:41.86, batch-reuse:1
@ 740 train 6.7158 , allloss: 6.9649, dt: 1317.77ms, fracRes: 0.0583, norm(attn): 0.1484, norm(output): 0.3105, norm(x): 0.2842, norm(y): 1.0007, norm:6.7723, tok/sec: 99465.35, flops:40.92, batch-reuse:1
@ 741 train 6.8184 , allloss: 7.0772, dt: 1315.22ms, fracRes: 0.0606, norm(attn): 0.1484, norm(output): 0.3105, norm(x): 0.2821, norm(y): 1.0007, norm:4.6676, tok/sec: 99658.17, flops:40.99, batch-reuse:1
@ 742 train 6.8978 , allloss: 7.1386, dt: 1321.57ms, fracRes: 0.0640, norm(attn): 0.1426, norm(output): 0.3125, norm(x): 0.2858, norm(y): 1.0007, norm:7.4852, tok/sec: 99179.19, flops:40.80, batch-reuse:1
@ 743 train 6.8921 , allloss: 7.1234, dt: 1307.66ms, fracRes: 0.0683, norm(attn): 0.1455, norm(output): 0.3125, norm(x): 0.2840, norm(y): 1.0007, norm:8.6321, tok/sec: 100234.09, flops:41.23, batch-reuse:1
@ 744 train 6.8589 , allloss: 7.1043, dt: 1287.17ms, fracRes: 0.0640, norm(attn): 0.1416, norm(output): 0.3125, norm(x): 0.2825, norm(y): 1.0007, norm:5.6031, tok/sec: 101829.88, flops:41.89, batch-reuse:1
@ 745 train 6.8164 , allloss: 7.0526, dt: 1318.05ms, fracRes: 0.0698, norm(attn): 0.1426, norm(output): 0.3125, norm(x): 0.2837, norm(y): 1.0007, norm:4.9808, tok/sec: 99444.12, flops:40.91, batch-reuse:1
@ 746 train 6.8580 , allloss: 7.0916, dt: 1280.12ms, fracRes: 0.0697, norm(attn): 0.1504, norm(output): 0.3125, norm(x): 0.2835, norm(y): 1.0007, norm:6.4251, tok/sec: 102390.24, flops:42.12, batch-reuse:1
@ 747 train 6.8619 , allloss: 7.1142, dt: 1265.06ms, fracRes: 0.0666, norm(attn): 0.1504, norm(output): 0.3105, norm(x): 0.2812, norm(y): 1.0007, norm:9.6855, tok/sec: 103609.48, flops:42.62, batch-reuse:1
@ 748 train 6.8712 , allloss: 7.1158, dt: 1278.00ms, fracRes: 0.0731, norm(attn): 0.1514, norm(output): 0.3105, norm(x): 0.2808, norm(y): 1.0007, norm:4.2030, tok/sec: 102559.95, flops:42.19, batch-reuse:1
@ 749 train 6.9928 , allloss: 7.2330, dt: 1273.41ms, fracRes: 0.0791, norm(attn): 0.1396, norm(output): 0.3145, norm(x): 0.2865, norm(y): 1.0006, norm:7.7704, tok/sec: 102930.04, flops:42.34, batch-reuse:1
@ 750 train 6.8998 , allloss: 7.1349, dt: 1279.89ms, fracRes: 0.0828, norm(attn): 0.1484, norm(output): 0.3105, norm(x): 0.2790, norm(y): 1.0007, norm:6.1544, tok/sec: 102408.55, flops:42.13, batch-reuse:1
@ 751 train 6.8465 , allloss: 7.0914, dt: 1302.31ms, fracRes: 0.0750, norm(attn): 0.1543, norm(output): 0.3027, norm(x): 0.2763, norm(y): 1.0007, norm:7.6150, tok/sec: 100645.81, flops:41.40, batch-reuse:1
@ 752 train 6.8444 , allloss: 7.0781, dt: 1321.47ms, fracRes: 0.0754, norm(attn): 0.1553, norm(output): 0.3105, norm(x): 0.2787, norm(y): 1.0007, norm:5.8575, tok/sec: 99186.85, flops:40.80, batch-reuse:1
@ 753 train 6.8392 , allloss: 7.0800, dt: 1320.37ms, fracRes: 0.0767, norm(attn): 0.1543, norm(output): 0.3105, norm(x): 0.2790, norm(y): 1.0007, norm:4.1567, tok/sec: 99268.95, flops:40.83, batch-reuse:1
@ 754 train 6.8199 , allloss: 7.0594, dt: 1320.20ms, fracRes: 0.0839, norm(attn): 0.1455, norm(output): 0.3105, norm(x): 0.2798, norm(y): 1.0007, norm:6.0136, tok/sec: 99282.04, flops:40.84, batch-reuse:1
@ 755 train 6.9287 , allloss: 7.1653, dt: 1320.43ms, fracRes: 0.0847, norm(attn): 0.1377, norm(output): 0.3125, norm(x): 0.2831, norm(y): 1.0007, norm:7.7892, tok/sec: 99264.95, flops:40.83, batch-reuse:1
@ 756 train 6.7921 , allloss: 7.0228, dt: 1311.54ms, fracRes: 0.0838, norm(attn): 0.1475, norm(output): 0.3086, norm(x): 0.2785, norm(y): 1.0007, norm:4.8781, tok/sec: 99937.23, flops:41.11, batch-reuse:1
@ 757 train 6.8553 , allloss: 7.1155, dt: 1281.74ms, fracRes: 0.0796, norm(attn): 0.1553, norm(output): 0.3027, norm(x): 0.2739, norm(y): 1.0007, norm:7.3072, tok/sec: 102260.73, flops:42.07, batch-reuse:1
@ 758 train 6.7661 , allloss: 7.0203, dt: 1324.92ms, fracRes: 0.0846, norm(attn): 0.1553, norm(output): 0.3008, norm(x): 0.2734, norm(y): 1.0007, norm:6.6468, tok/sec: 98927.96, flops:40.69, batch-reuse:1
@ 759 train 6.8385 , allloss: 7.0883, dt: 1324.87ms, fracRes: 0.0866, norm(attn): 0.1504, norm(output): 0.3008, norm(x): 0.2743, norm(y): 1.0007, norm:3.8979, tok/sec: 98931.68, flops:40.70, batch-reuse:1
@ 760 train 6.8418 , allloss: 7.0831, dt: 1284.95ms, fracRes: 0.0902, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2716, norm(y): 1.0007, norm:6.7199, tok/sec: 102005.37, flops:41.96, batch-reuse:1
@ 761 train 6.8429 , allloss: 7.0807, dt: 1286.28ms, fracRes: 0.0976, norm(attn): 0.1455, norm(output): 0.3047, norm(x): 0.2752, norm(y): 1.0007, norm:6.3893, tok/sec: 101900.17, flops:41.92, batch-reuse:1
@ 762 train 6.8414 , allloss: 7.0862, dt: 1340.49ms, fracRes: 0.0982, norm(attn): 0.1445, norm(output): 0.3027, norm(x): 0.2743, norm(y): 1.0007, norm:6.8175, tok/sec: 97778.99, flops:40.22, batch-reuse:1
@ 763 train 6.8777 , allloss: 7.1376, dt: 1312.31ms, fracRes: 0.0924, norm(attn): 0.1455, norm(output): 0.3027, norm(x): 0.2732, norm(y): 1.0007, norm:5.9811, tok/sec: 99879.06, flops:41.09, batch-reuse:1
@ 764 train 6.8338 , allloss: 7.0791, dt: 1312.84ms, fracRes: 0.0964, norm(attn): 0.1504, norm(output): 0.3008, norm(x): 0.2735, norm(y): 1.0007, norm:5.5391, tok/sec: 99838.75, flops:41.07, batch-reuse:1
@ 765 train 6.7896 , allloss: 7.0337, dt: 1301.67ms, fracRes: 0.0962, norm(attn): 0.1494, norm(output): 0.3008, norm(x): 0.2720, norm(y): 1.0007, norm:4.9862, tok/sec: 100695.55, flops:41.42, batch-reuse:1
@ 766 train 6.7638 , allloss: 7.0073, dt: 1263.71ms, fracRes: 0.1024, norm(attn): 0.1514, norm(output): 0.2988, norm(x): 0.2703, norm(y): 1.0007, norm:7.6252, tok/sec: 103720.37, flops:42.67, batch-reuse:1
@ 767 train 6.8225 , allloss: 7.0791, dt: 1276.47ms, fracRes: 0.0993, norm(attn): 0.1514, norm(output): 0.2988, norm(x): 0.2701, norm(y): 1.0007, norm:5.5767, tok/sec: 102683.47, flops:42.24, batch-reuse:1
@ 768 train 6.9178 , allloss: 7.1809, dt: 1288.78ms, fracRes: 0.0961, norm(attn): 0.1592, norm(output): 0.2988, norm(x): 0.2689, norm(y): 1.0007, norm:7.8218, tok/sec: 101702.67, flops:41.84, batch-reuse:1
@ 769 train 6.7633 , allloss: 7.0199, dt: 1286.67ms, fracRes: 0.0986, norm(attn): 0.1572, norm(output): 0.2969, norm(x): 0.2694, norm(y): 1.0007, norm:3.9044, tok/sec: 101868.90, flops:41.90, batch-reuse:1
@ 770 train 6.7995 , allloss: 7.0800, dt: 1288.78ms, fracRes: 0.0886, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2669, norm(y): 1.0006, norm:9.5359, tok/sec: 101702.35, flops:41.84, batch-reuse:1
@ 771 train 6.7581 , allloss: 7.0146, dt: 1305.49ms, fracRes: 0.0930, norm(attn): 0.1504, norm(output): 0.2969, norm(x): 0.2672, norm(y): 1.0007, norm:6.4537, tok/sec: 100401.00, flops:41.30, batch-reuse:1
@ 772 train 6.8058 , allloss: 7.0509, dt: 1303.03ms, fracRes: 0.0964, norm(attn): 0.1445, norm(output): 0.3008, norm(x): 0.2721, norm(y): 1.0007, norm:7.4623, tok/sec: 100589.92, flops:41.38, batch-reuse:1
@ 773 train 6.8856 , allloss: 7.1413, dt: 1273.39ms, fracRes: 0.0991, norm(attn): 0.1523, norm(output): 0.2969, norm(x): 0.2693, norm(y): 1.0007, norm:5.0239, tok/sec: 102931.37, flops:42.34, batch-reuse:1
@ 774 train 6.8255 , allloss: 7.1115, dt: 1274.87ms, fracRes: 0.0964, norm(attn): 0.1523, norm(output): 0.2930, norm(x): 0.2663, norm(y): 1.0007, norm:9.1327, tok/sec: 102812.02, flops:42.29, batch-reuse:1
@ 775 train 6.9037 , allloss: 7.1842, dt: 1296.00ms, fracRes: 0.1015, norm(attn): 0.1475, norm(output): 0.2949, norm(x): 0.2663, norm(y): 1.0007, norm:7.7098, tok/sec: 101135.49, flops:41.60, batch-reuse:1
@ 776 train 6.7094 , allloss: 6.9843, dt: 1323.36ms, fracRes: 0.0986, norm(attn): 0.1465, norm(output): 0.2949, norm(x): 0.2666, norm(y): 1.0007, norm:8.1180, tok/sec: 99044.82, flops:40.74, batch-reuse:1
@ 777 train 6.7640 , allloss: 7.0312, dt: 1318.87ms, fracRes: 0.1000, norm(attn): 0.1562, norm(output): 0.2910, norm(x): 0.2642, norm(y): 1.0007, norm:6.0342, tok/sec: 99382.38, flops:40.88, batch-reuse:1
@ 778 train 6.7613 , allloss: 7.0268, dt: 1309.64ms, fracRes: 0.0987, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2649, norm(y): 1.0007, norm:5.2536, tok/sec: 100082.65, flops:41.17, batch-reuse:1
@ 779 train 6.8011 , allloss: 7.0729, dt: 1313.84ms, fracRes: 0.1002, norm(attn): 0.1602, norm(output): 0.2871, norm(x): 0.2615, norm(y): 1.0007, norm:5.5723, tok/sec: 99762.79, flops:41.04, batch-reuse:1
@ 780 train 6.7566 , allloss: 7.0076, dt: 1317.61ms, fracRes: 0.1139, norm(attn): 0.1494, norm(output): 0.2930, norm(x): 0.2647, norm(y): 1.0007, norm:4.5033, tok/sec: 99476.78, flops:40.92, batch-reuse:1
@ 781 train 6.7633 , allloss: 7.0291, dt: 1283.75ms, fracRes: 0.1118, norm(attn): 0.1436, norm(output): 0.2949, norm(x): 0.2659, norm(y): 1.0007, norm:9.9395, tok/sec: 102101.16, flops:42.00, batch-reuse:1
@ 782 train 6.7417 , allloss: 7.0101, dt: 1294.72ms, fracRes: 0.1109, norm(attn): 0.1514, norm(output): 0.2910, norm(x): 0.2638, norm(y): 1.0007, norm:5.2818, tok/sec: 101236.07, flops:41.64, batch-reuse:1
@ 783 train 6.7404 , allloss: 7.0185, dt: 1285.93ms, fracRes: 0.1057, norm(attn): 0.1523, norm(output): 0.2910, norm(x): 0.2625, norm(y): 1.0007, norm:7.1810, tok/sec: 101927.70, flops:41.93, batch-reuse:1
@ 784 train 6.7503 , allloss: 7.0166, dt: 1303.46ms, fracRes: 0.1093, norm(attn): 0.1523, norm(output): 0.2891, norm(x): 0.2635, norm(y): 1.0007, norm:7.7080, tok/sec: 100556.90, flops:41.36, batch-reuse:1
@ 785 train 6.7566 , allloss: 7.0215, dt: 1298.63ms, fracRes: 0.1108, norm(attn): 0.1514, norm(output): 0.2891, norm(x): 0.2618, norm(y): 1.0007, norm:6.3542, tok/sec: 100931.04, flops:41.52, batch-reuse:1
@ 786 train 6.7367 , allloss: 7.0012, dt: 1302.06ms, fracRes: 0.1118, norm(attn): 0.1621, norm(output): 0.2832, norm(x): 0.2584, norm(y): 1.0007, norm:8.2344, tok/sec: 100665.02, flops:41.41, batch-reuse:1
@ 787 train 6.7444 , allloss: 7.0277, dt: 1292.81ms, fracRes: 0.1042, norm(attn): 0.1611, norm(output): 0.2832, norm(x): 0.2579, norm(y): 1.0006, norm:6.3992, tok/sec: 101385.43, flops:41.71, batch-reuse:1
@ 788 train 6.8027 , allloss: 7.0787, dt: 1308.61ms, fracRes: 0.1024, norm(attn): 0.1572, norm(output): 0.2852, norm(x): 0.2598, norm(y): 1.0007, norm:7.0911, tok/sec: 100161.21, flops:41.20, batch-reuse:1
@ 789 train 6.6914 , allloss: 6.9768, dt: 1314.50ms, fracRes: 0.0967, norm(attn): 0.1572, norm(output): 0.2832, norm(x): 0.2588, norm(y): 1.0007, norm:5.3872, tok/sec: 99712.49, flops:41.02, batch-reuse:1
@ 790 train 6.7196 , allloss: 6.9995, dt: 1303.49ms, fracRes: 0.1054, norm(attn): 0.1592, norm(output): 0.2812, norm(x): 0.2566, norm(y): 1.0007, norm:7.8254, tok/sec: 100554.28, flops:41.36, batch-reuse:1
@ 791 train 6.8411 , allloss: 7.1127, dt: 1327.51ms, fracRes: 0.1165, norm(attn): 0.1484, norm(output): 0.2852, norm(x): 0.2602, norm(y): 1.0007, norm:6.1566, tok/sec: 98735.52, flops:40.62, batch-reuse:1
@ 792 train 6.7934 , allloss: 7.0595, dt: 1304.89ms, fracRes: 0.1164, norm(attn): 0.1543, norm(output): 0.2852, norm(x): 0.2585, norm(y): 1.0007, norm:9.0114, tok/sec: 100446.44, flops:41.32, batch-reuse:1
@ 793 train 6.7784 , allloss: 7.0605, dt: 1281.90ms, fracRes: 0.1054, norm(attn): 0.1562, norm(output): 0.2832, norm(x): 0.2586, norm(y): 1.0006, norm:6.1867, tok/sec: 102248.04, flops:42.06, batch-reuse:1
@ 794 train 6.8571 , allloss: 7.1393, dt: 1270.34ms, fracRes: 0.1069, norm(attn): 0.1523, norm(output): 0.2852, norm(x): 0.2608, norm(y): 1.0006, norm:4.3146, tok/sec: 103178.39, flops:42.44, batch-reuse:1
@ 795 train 6.7185 , allloss: 7.0190, dt: 1275.92ms, fracRes: 0.0969, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2576, norm(y): 1.0006, norm:10.6965, tok/sec: 102727.11, flops:42.26, batch-reuse:1
@ 796 train 6.6775 , allloss: 6.9634, dt: 1261.86ms, fracRes: 0.0983, norm(attn): 0.1543, norm(output): 0.2812, norm(x): 0.2570, norm(y): 1.0007, norm:7.3722, tok/sec: 103871.97, flops:42.73, batch-reuse:1
@ 797 train 6.7727 , allloss: 7.0588, dt: 1281.61ms, fracRes: 0.0974, norm(attn): 0.1484, norm(output): 0.2832, norm(x): 0.2581, norm(y): 1.0007, norm:7.1205, tok/sec: 102271.38, flops:42.07, batch-reuse:1
@ 798 train 6.7699 , allloss: 7.0627, dt: 1293.20ms, fracRes: 0.0987, norm(attn): 0.1523, norm(output): 0.2871, norm(x): 0.2599, norm(y): 1.0006, norm:6.4373, tok/sec: 101355.17, flops:41.69, batch-reuse:1
@ 799 train 6.7664 , allloss: 7.0582, dt: 1297.94ms, fracRes: 0.0990, norm(attn): 0.1631, norm(output): 0.2812, norm(x): 0.2561, norm(y): 1.0006, norm:5.2771, tok/sec: 100984.73, flops:41.54, batch-reuse:1
@ 800 train 6.6682 , allloss: 6.9563, dt: 1266.55ms, fracRes: 0.0968, norm(attn): 0.1582, norm(output): 0.2793, norm(x): 0.2549, norm(y): 1.0006, norm:4.1251, tok/sec: 103487.21, flops:42.57, batch-reuse:1
@ 801 train 6.7499 , allloss: 7.0174, dt: 1259.53ms, fracRes: 0.0975, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2588, norm(y): 1.0007, norm:9.7312, tok/sec: 104064.62, flops:42.81, batch-reuse:1
@ 802 train 6.7806 , allloss: 7.0584, dt: 1301.79ms, fracRes: 0.1019, norm(attn): 0.1484, norm(output): 0.2852, norm(x): 0.2586, norm(y): 1.0007, norm:6.1949, tok/sec: 100685.89, flops:41.42, batch-reuse:1
@ 803 train 6.8269 , allloss: 7.1278, dt: 1287.98ms, fracRes: 0.1127, norm(attn): 0.1562, norm(output): 0.2793, norm(x): 0.2533, norm(y): 1.0006, norm:9.6119, tok/sec: 101765.27, flops:41.86, batch-reuse:1
@ 804 train 6.7275 , allloss: 7.0206, dt: 1274.88ms, fracRes: 0.1193, norm(attn): 0.1670, norm(output): 0.2793, norm(x): 0.2521, norm(y): 1.0007, norm:8.6620, tok/sec: 102811.04, flops:42.29, batch-reuse:1
@ 805 train 6.7818 , allloss: 7.0838, dt: 1277.88ms, fracRes: 0.1126, norm(attn): 0.1602, norm(output): 0.2812, norm(x): 0.2564, norm(y): 1.0006, norm:5.4745, tok/sec: 102570.00, flops:42.19, batch-reuse:1
@ 806 train 6.6631 , allloss: 6.9564, dt: 1279.87ms, fracRes: 0.1069, norm(attn): 0.1582, norm(output): 0.2812, norm(x): 0.2555, norm(y): 1.0006, norm:5.5070, tok/sec: 102410.78, flops:42.13, batch-reuse:1
@ 807 train 6.7468 , allloss: 7.0361, dt: 1316.24ms, fracRes: 0.1038, norm(attn): 0.1445, norm(output): 0.2852, norm(x): 0.2593, norm(y): 1.0006, norm:10.8500, tok/sec: 99580.71, flops:40.96, batch-reuse:1
@ 808 train 6.7120 , allloss: 6.9885, dt: 1289.83ms, fracRes: 0.0960, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2572, norm(y): 1.0006, norm:6.4307, tok/sec: 101619.52, flops:41.80, batch-reuse:1
@ 809 train 6.7178 , allloss: 7.0028, dt: 1302.63ms, fracRes: 0.0910, norm(attn): 0.1572, norm(output): 0.2832, norm(x): 0.2562, norm(y): 1.0006, norm:5.9766, tok/sec: 100621.37, flops:41.39, batch-reuse:1
@ 810 train 6.7418 , allloss: 7.0369, dt: 1279.45ms, fracRes: 0.0929, norm(attn): 0.1514, norm(output): 0.2832, norm(x): 0.2577, norm(y): 1.0006, norm:5.3077, tok/sec: 102444.08, flops:42.14, batch-reuse:1
@ 811 train 6.7655 , allloss: 7.0520, dt: 1314.01ms, fracRes: 0.1006, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2565, norm(y): 1.0006, norm:5.5202, tok/sec: 99749.39, flops:41.03, batch-reuse:1
@ 812 train 6.6183 , allloss: 6.9125, dt: 1299.12ms, fracRes: 0.0982, norm(attn): 0.1582, norm(output): 0.2812, norm(x): 0.2535, norm(y): 1.0006, norm:6.6044, tok/sec: 100892.62, flops:41.50, batch-reuse:1
@ 813 train 6.8654 , allloss: 7.1646, dt: 1308.85ms, fracRes: 0.0985, norm(attn): 0.1572, norm(output): 0.2812, norm(x): 0.2524, norm(y): 1.0006, norm:9.6464, tok/sec: 100142.56, flops:41.19, batch-reuse:1
@ 814 train 6.7890 , allloss: 7.0912, dt: 1282.71ms, fracRes: 0.0977, norm(attn): 0.1553, norm(output): 0.2793, norm(x): 0.2537, norm(y): 1.0006, norm:4.5723, tok/sec: 102183.61, flops:42.03, batch-reuse:1
@ 815 train 6.6787 , allloss: 6.9749, dt: 1289.22ms, fracRes: 0.1000, norm(attn): 0.1582, norm(output): 0.2812, norm(x): 0.2548, norm(y): 1.0005, norm:8.8701, tok/sec: 101667.37, flops:41.82, batch-reuse:1
@ 816 train 6.7217 , allloss: 6.9992, dt: 1286.45ms, fracRes: 0.1081, norm(attn): 0.1670, norm(output): 0.2793, norm(x): 0.2522, norm(y): 1.0006, norm:7.8740, tok/sec: 101886.50, flops:41.91, batch-reuse:1
@ 817 train 6.6502 , allloss: 6.9203, dt: 1285.58ms, fracRes: 0.1066, norm(attn): 0.1602, norm(output): 0.2793, norm(x): 0.2521, norm(y): 1.0006, norm:5.1108, tok/sec: 101955.17, flops:41.94, batch-reuse:1
@ 818 train 6.6910 , allloss: 6.9680, dt: 1278.15ms, fracRes: 0.1022, norm(attn): 0.1553, norm(output): 0.2812, norm(x): 0.2555, norm(y): 1.0005, norm:7.9103, tok/sec: 102547.84, flops:42.18, batch-reuse:1
@ 819 train 6.7769 , allloss: 7.0625, dt: 1286.97ms, fracRes: 0.0959, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2556, norm(y): 1.0005, norm:8.2194, tok/sec: 101845.33, flops:41.89, batch-reuse:1
@ 820 train 6.8240 , allloss: 7.1156, dt: 1275.56ms, fracRes: 0.0954, norm(attn): 0.1562, norm(output): 0.2812, norm(x): 0.2550, norm(y): 1.0005, norm:6.7821, tok/sec: 102756.14, flops:42.27, batch-reuse:1
@ 821 train 6.7773 , allloss: 7.0315, dt: 1316.31ms, fracRes: 0.1111, norm(attn): 0.1602, norm(output): 0.2832, norm(x): 0.2542, norm(y): 1.0006, norm:6.7506, tok/sec: 99574.99, flops:40.96, batch-reuse:1
@ 822 train 6.8436 , allloss: 7.1195, dt: 1306.21ms, fracRes: 0.1018, norm(attn): 0.1621, norm(output): 0.2832, norm(x): 0.2563, norm(y): 1.0005, norm:4.0625, tok/sec: 100345.60, flops:41.28, batch-reuse:1
@ 823 train 6.7400 , allloss: 7.0655, dt: 1280.76ms, fracRes: 0.0847, norm(attn): 0.1582, norm(output): 0.2812, norm(x): 0.2552, norm(y): 1.0004, norm:17.1145, tok/sec: 102339.02, flops:42.10, batch-reuse:1
@ 824 train 6.9008 , allloss: 7.2135, dt: 1289.82ms, fracRes: 0.0860, norm(attn): 0.1611, norm(output): 0.2852, norm(x): 0.2567, norm(y): 1.0005, norm:9.6679, tok/sec: 101620.53, flops:41.80, batch-reuse:1
@ 825 train 6.7152 , allloss: 6.9914, dt: 1294.39ms, fracRes: 0.0931, norm(attn): 0.1562, norm(output): 0.2832, norm(x): 0.2563, norm(y): 1.0006, norm:5.1218, tok/sec: 101261.88, flops:41.65, batch-reuse:1
@ 826 train 6.7240 , allloss: 6.9770, dt: 1280.93ms, fracRes: 0.1081, norm(attn): 0.1504, norm(output): 0.2852, norm(x): 0.2604, norm(y): 1.0006, norm:10.5275, tok/sec: 102325.84, flops:42.09, batch-reuse:1
@ 827 train 6.8414 , allloss: 7.1061, dt: 1288.73ms, fracRes: 0.1036, norm(attn): 0.1592, norm(output): 0.2852, norm(x): 0.2596, norm(y): 1.0005, norm:8.0836, tok/sec: 101705.98, flops:41.84, batch-reuse:1
@ 828 train 6.7021 , allloss: 6.9754, dt: 1291.64ms, fracRes: 0.0943, norm(attn): 0.1709, norm(output): 0.2832, norm(x): 0.2558, norm(y): 1.0005, norm:5.9973, tok/sec: 101477.38, flops:41.74, batch-reuse:1
@ 829 train 6.7040 , allloss: 6.9772, dt: 1275.26ms, fracRes: 0.0916, norm(attn): 0.1650, norm(output): 0.2852, norm(x): 0.2583, norm(y): 1.0005, norm:4.4164, tok/sec: 102780.94, flops:42.28, batch-reuse:1
@ 830 train 6.7402 , allloss: 7.0042, dt: 1297.86ms, fracRes: 0.0984, norm(attn): 0.1592, norm(output): 0.2871, norm(x): 0.2610, norm(y): 1.0005, norm:8.0552, tok/sec: 100991.17, flops:41.54, batch-reuse:1
@ 831 train 6.7909 , allloss: 7.0671, dt: 1317.60ms, fracRes: 0.0997, norm(attn): 0.1602, norm(output): 0.2871, norm(x): 0.2597, norm(y): 1.0004, norm:7.3739, tok/sec: 99477.53, flops:40.92, batch-reuse:1
@ 832 train 6.7511 , allloss: 7.0198, dt: 1320.37ms, fracRes: 0.1021, norm(attn): 0.1631, norm(output): 0.2852, norm(x): 0.2589, norm(y): 1.0005, norm:4.7471, tok/sec: 99268.79, flops:40.83, batch-reuse:1
@ 833 train 6.6448 , allloss: 6.9126, dt: 1286.59ms, fracRes: 0.1061, norm(attn): 0.1592, norm(output): 0.2852, norm(x): 0.2595, norm(y): 1.0004, norm:7.4203, tok/sec: 101875.87, flops:41.91, batch-reuse:1
@ 834 train 6.6888 , allloss: 6.9481, dt: 1321.10ms, fracRes: 0.1098, norm(attn): 0.1660, norm(output): 0.2832, norm(x): 0.2578, norm(y): 1.0005, norm:9.7652, tok/sec: 99214.60, flops:40.81, batch-reuse:1
@ 835 train 6.6139 , allloss: 6.8776, dt: 1301.24ms, fracRes: 0.1101, norm(attn): 0.1650, norm(output): 0.2832, norm(x): 0.2574, norm(y): 1.0005, norm:6.1157, tok/sec: 100728.24, flops:41.43, batch-reuse:1
@ 836 train 6.6454 , allloss: 6.9131, dt: 1276.07ms, fracRes: 0.1062, norm(attn): 0.1670, norm(output): 0.2832, norm(x): 0.2571, norm(y): 1.0005, norm:4.7595, tok/sec: 102715.19, flops:42.25, batch-reuse:1
@ 837 train 6.7064 , allloss: 6.9920, dt: 1290.40ms, fracRes: 0.0999, norm(attn): 0.1572, norm(output): 0.2871, norm(x): 0.2600, norm(y): 1.0004, norm:13.8116, tok/sec: 101574.50, flops:41.78, batch-reuse:1
@ 838 train 6.6443 , allloss: 6.9165, dt: 1319.12ms, fracRes: 0.0963, norm(attn): 0.1602, norm(output): 0.2852, norm(x): 0.2587, norm(y): 1.0005, norm:6.1914, tok/sec: 99362.84, flops:40.87, batch-reuse:1
@ 839 train 6.5142 , allloss: 6.7943, dt: 1304.82ms, fracRes: 0.0919, norm(attn): 0.1631, norm(output): 0.2852, norm(x): 0.2593, norm(y): 1.0004, norm:6.5966, tok/sec: 100452.33, flops:41.32, batch-reuse:1
@ 840 train 6.6059 , allloss: 6.8861, dt: 1304.35ms, fracRes: 0.0895, norm(attn): 0.1631, norm(output): 0.2852, norm(x): 0.2588, norm(y): 1.0004, norm:3.7178, tok/sec: 100488.12, flops:41.34, batch-reuse:1
@ 841 train 6.5558 , allloss: 6.8139, dt: 1262.25ms, fracRes: 0.0939, norm(attn): 0.1572, norm(output): 0.2891, norm(x): 0.2610, norm(y): 1.0005, norm:6.3479, tok/sec: 103839.72, flops:42.71, batch-reuse:1
@ 842 train 6.6769 , allloss: 6.9420, dt: 1264.55ms, fracRes: 0.0910, norm(attn): 0.1621, norm(output): 0.2871, norm(x): 0.2603, norm(y): 1.0004, norm:6.2222, tok/sec: 103650.75, flops:42.64, batch-reuse:1
@ 843 train 6.6830 , allloss: 6.9643, dt: 1263.30ms, fracRes: 0.0915, norm(attn): 0.1572, norm(output): 0.2852, norm(x): 0.2610, norm(y): 1.0004, norm:7.1002, tok/sec: 103753.78, flops:42.68, batch-reuse:1
@ 844 train 6.7172 , allloss: 6.9882, dt: 1258.60ms, fracRes: 0.0935, norm(attn): 0.1621, norm(output): 0.2852, norm(x): 0.2588, norm(y): 1.0004, norm:8.8086, tok/sec: 104141.37, flops:42.84, batch-reuse:1
@ 845 train 6.6779 , allloss: 6.9559, dt: 1283.27ms, fracRes: 0.0953, norm(attn): 0.1592, norm(output): 0.2852, norm(x): 0.2594, norm(y): 1.0004, norm:4.9708, tok/sec: 102139.42, flops:42.02, batch-reuse:1
@ 846 train 6.6480 , allloss: 6.9326, dt: 1301.72ms, fracRes: 0.0885, norm(attn): 0.1592, norm(output): 0.2832, norm(x): 0.2578, norm(y): 1.0004, norm:5.3521, tok/sec: 100691.73, flops:41.42, batch-reuse:1
@ 847 train 6.6974 , allloss: 6.9913, dt: 1296.50ms, fracRes: 0.0886, norm(attn): 0.1572, norm(output): 0.2871, norm(x): 0.2602, norm(y): 1.0003, norm:4.4858, tok/sec: 101096.73, flops:41.59, batch-reuse:1
@ 848 train 6.7224 , allloss: 6.9823, dt: 1335.96ms, fracRes: 0.0914, norm(attn): 0.1582, norm(output): 0.2871, norm(x): 0.2589, norm(y): 1.0004, norm:9.8694, tok/sec: 98110.36, flops:40.36, batch-reuse:1
@ 849 train 6.6450 , allloss: 6.9013, dt: 1333.74ms, fracRes: 0.0912, norm(attn): 0.1523, norm(output): 0.2871, norm(x): 0.2594, norm(y): 1.0004, norm:7.5217, tok/sec: 98274.24, flops:40.43, batch-reuse:1
@ 850 train 6.6397 , allloss: 6.9109, dt: 1276.69ms, fracRes: 0.0866, norm(attn): 0.1621, norm(output): 0.2852, norm(x): 0.2578, norm(y): 1.0004, norm:6.1871, tok/sec: 102665.74, flops:42.23, batch-reuse:1
@ 851 train 6.8428 , allloss: 7.1091, dt: 1284.94ms, fracRes: 0.0859, norm(attn): 0.1572, norm(output): 0.2852, norm(x): 0.2594, norm(y): 1.0004, norm:6.4106, tok/sec: 102006.13, flops:41.96, batch-reuse:1
@ 852 train 6.7172 , allloss: 6.9948, dt: 1271.68ms, fracRes: 0.0836, norm(attn): 0.1553, norm(output): 0.2871, norm(x): 0.2596, norm(y): 1.0003, norm:11.1951, tok/sec: 103070.18, flops:42.40, batch-reuse:1
@ 853 train 6.6477 , allloss: 6.9210, dt: 1280.27ms, fracRes: 0.0817, norm(attn): 0.1572, norm(output): 0.2832, norm(x): 0.2565, norm(y): 1.0004, norm:7.5448, tok/sec: 102378.11, flops:42.11, batch-reuse:1
@ 854 train 6.6796 , allloss: 6.9713, dt: 1315.89ms, fracRes: 0.0813, norm(attn): 0.1543, norm(output): 0.2852, norm(x): 0.2580, norm(y): 1.0003, norm:5.4706, tok/sec: 99607.48, flops:40.97, batch-reuse:1
@ 855 train 6.8222 , allloss: 7.1176, dt: 1287.04ms, fracRes: 0.0863, norm(attn): 0.1426, norm(output): 0.2910, norm(x): 0.2620, norm(y): 1.0003, norm:23.7563, tok/sec: 101840.20, flops:41.89, batch-reuse:1
@ 856 train 6.7381 , allloss: 7.0127, dt: 1315.20ms, fracRes: 0.0878, norm(attn): 0.1436, norm(output): 0.2910, norm(x): 0.2602, norm(y): 1.0003, norm:13.4015, tok/sec: 99659.70, flops:41.00, batch-reuse:1
@ 857 train 6.7439 , allloss: 7.0059, dt: 1317.84ms, fracRes: 0.0832, norm(attn): 0.1572, norm(output): 0.2871, norm(x): 0.2582, norm(y): 1.0004, norm:14.4874, tok/sec: 99459.73, flops:40.91, batch-reuse:1
@ 858 train 6.7635 , allloss: 7.0358, dt: 1278.78ms, fracRes: 0.0784, norm(attn): 0.1650, norm(output): 0.2852, norm(x): 0.2590, norm(y): 1.0003, norm:8.4318, tok/sec: 102497.60, flops:42.16, batch-reuse:1
@ 859 train 6.6846 , allloss: 6.9693, dt: 1271.63ms, fracRes: 0.0788, norm(attn): 0.1602, norm(output): 0.2910, norm(x): 0.2612, norm(y): 1.0003, norm:9.8326, tok/sec: 103073.96, flops:42.40, batch-reuse:1
@ 860 train 6.6943 , allloss: 6.9735, dt: 1284.46ms, fracRes: 0.0810, norm(attn): 0.1543, norm(output): 0.2871, norm(x): 0.2606, norm(y): 1.0003, norm:7.5992, tok/sec: 102044.72, flops:41.98, batch-reuse:1
@ 861 train 6.6911 , allloss: 6.9549, dt: 1271.57ms, fracRes: 0.0842, norm(attn): 0.1514, norm(output): 0.2891, norm(x): 0.2607, norm(y): 1.0003, norm:6.7835, tok/sec: 103078.72, flops:42.40, batch-reuse:1
@ 862 train 6.7596 , allloss: 7.0358, dt: 1257.03ms, fracRes: 0.0841, norm(attn): 0.1504, norm(output): 0.2930, norm(x): 0.2634, norm(y): 1.0003, norm:5.1813, tok/sec: 104271.47, flops:42.89, batch-reuse:1
@ 863 train 6.6910 , allloss: 6.9811, dt: 1300.51ms, fracRes: 0.0900, norm(attn): 0.1465, norm(output): 0.2969, norm(x): 0.2651, norm(y): 1.0003, norm:5.2771, tok/sec: 100784.71, flops:41.46, batch-reuse:1
@ 864 train 6.7081 , allloss: 6.9916, dt: 1269.75ms, fracRes: 0.0949, norm(attn): 0.1475, norm(output): 0.2910, norm(x): 0.2610, norm(y): 1.0003, norm:5.5865, tok/sec: 103226.96, flops:42.46, batch-reuse:1
@ 865 train 6.6116 , allloss: 6.8739, dt: 1290.90ms, fracRes: 0.1014, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2561, norm(y): 1.0003, norm:6.2957, tok/sec: 101534.97, flops:41.77, batch-reuse:1
@ 866 train 6.5842 , allloss: 6.8247, dt: 1285.07ms, fracRes: 0.1048, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2539, norm(y): 1.0003, norm:5.9168, tok/sec: 101996.16, flops:41.96, batch-reuse:1
@ 867 train 6.6424 , allloss: 6.8878, dt: 1274.40ms, fracRes: 0.1047, norm(attn): 0.1494, norm(output): 0.2852, norm(x): 0.2572, norm(y): 1.0003, norm:3.1304, tok/sec: 102850.10, flops:42.31, batch-reuse:1
@ 868 train 6.6242 , allloss: 6.8719, dt: 1290.88ms, fracRes: 0.1037, norm(attn): 0.1465, norm(output): 0.2852, norm(x): 0.2570, norm(y): 1.0003, norm:8.3570, tok/sec: 101536.75, flops:41.77, batch-reuse:1
@ 869 train 6.6510 , allloss: 6.9038, dt: 1324.57ms, fracRes: 0.1029, norm(attn): 0.1484, norm(output): 0.2832, norm(x): 0.2566, norm(y): 1.0004, norm:6.0595, tok/sec: 98954.36, flops:40.71, batch-reuse:1
@ 870 train 6.6106 , allloss: 6.8734, dt: 1321.42ms, fracRes: 0.1019, norm(attn): 0.1484, norm(output): 0.2852, norm(x): 0.2569, norm(y): 1.0003, norm:4.9970, tok/sec: 99189.98, flops:40.80, batch-reuse:1
@ 871 train 6.6360 , allloss: 6.8800, dt: 1329.33ms, fracRes: 0.1052, norm(attn): 0.1494, norm(output): 0.2852, norm(x): 0.2568, norm(y): 1.0003, norm:4.3661, tok/sec: 98600.39, flops:40.56, batch-reuse:1
@ 872 train 6.6150 , allloss: 6.8524, dt: 1323.83ms, fracRes: 0.1076, norm(attn): 0.1455, norm(output): 0.2832, norm(x): 0.2561, norm(y): 1.0003, norm:7.8505, tok/sec: 99009.47, flops:40.73, batch-reuse:1
@ 873 train 6.6929 , allloss: 6.9382, dt: 1315.30ms, fracRes: 0.1036, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2525, norm(y): 1.0003, norm:6.9970, tok/sec: 99651.63, flops:40.99, batch-reuse:1
@ 874 train 6.6123 , allloss: 6.8695, dt: 1269.06ms, fracRes: 0.1015, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2513, norm(y): 1.0003, norm:10.0660, tok/sec: 103283.12, flops:42.49, batch-reuse:1
@ 875 train 6.5999 , allloss: 6.8554, dt: 1290.54ms, fracRes: 0.1013, norm(attn): 0.1533, norm(output): 0.2812, norm(x): 0.2520, norm(y): 1.0002, norm:4.7057, tok/sec: 101563.93, flops:41.78, batch-reuse:1
@ 876 train 6.6077 , allloss: 6.8603, dt: 1325.38ms, fracRes: 0.0996, norm(attn): 0.1465, norm(output): 0.2812, norm(x): 0.2508, norm(y): 1.0003, norm:6.5036, tok/sec: 98893.90, flops:40.68, batch-reuse:1
@ 877 train 6.6270 , allloss: 6.8838, dt: 1315.93ms, fracRes: 0.1005, norm(attn): 0.1426, norm(output): 0.2812, norm(x): 0.2524, norm(y): 1.0003, norm:5.9204, tok/sec: 99604.07, flops:40.97, batch-reuse:1
@ 878 train 6.6068 , allloss: 6.8632, dt: 1315.80ms, fracRes: 0.1020, norm(attn): 0.1543, norm(output): 0.2793, norm(x): 0.2491, norm(y): 1.0003, norm:8.5121, tok/sec: 99613.73, flops:40.98, batch-reuse:1
@ 879 train 6.5792 , allloss: 6.8375, dt: 1280.55ms, fracRes: 0.1034, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2499, norm(y): 1.0002, norm:5.0237, tok/sec: 102356.15, flops:42.10, batch-reuse:1
@ 880 train 6.6481 , allloss: 6.9029, dt: 1268.52ms, fracRes: 0.1076, norm(attn): 0.1475, norm(output): 0.2812, norm(x): 0.2506, norm(y): 1.0003, norm:5.8661, tok/sec: 103327.03, flops:42.50, batch-reuse:1
@ 881 train 6.5594 , allloss: 6.8147, dt: 1285.32ms, fracRes: 0.1120, norm(attn): 0.1436, norm(output): 0.2773, norm(x): 0.2476, norm(y): 1.0003, norm:5.1815, tok/sec: 101975.89, flops:41.95, batch-reuse:1
@ 882 train 6.5575 , allloss: 6.8089, dt: 1294.80ms, fracRes: 0.1123, norm(attn): 0.1504, norm(output): 0.2773, norm(x): 0.2461, norm(y): 1.0002, norm:5.0622, tok/sec: 101229.60, flops:41.64, batch-reuse:1
@ 883 train 6.5177 , allloss: 6.7741, dt: 1307.15ms, fracRes: 0.1056, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2487, norm(y): 1.0002, norm:5.2591, tok/sec: 100272.76, flops:41.25, batch-reuse:1
@ 884 train 6.5065 , allloss: 6.7539, dt: 1291.37ms, fracRes: 0.1085, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2479, norm(y): 1.0002, norm:4.3850, tok/sec: 101498.02, flops:41.75, batch-reuse:1
@ 885 train 6.5825 , allloss: 6.8524, dt: 1276.63ms, fracRes: 0.1044, norm(attn): 0.1445, norm(output): 0.2793, norm(x): 0.2470, norm(y): 1.0002, norm:7.4296, tok/sec: 102669.92, flops:42.23, batch-reuse:1
@ 886 train 6.6429 , allloss: 6.9163, dt: 1292.59ms, fracRes: 0.1003, norm(attn): 0.1514, norm(output): 0.2754, norm(x): 0.2450, norm(y): 1.0003, norm:8.9283, tok/sec: 101402.34, flops:41.71, batch-reuse:1
@ 887 train 6.5436 , allloss: 6.8144, dt: 1307.41ms, fracRes: 0.0967, norm(attn): 0.1504, norm(output): 0.2773, norm(x): 0.2468, norm(y): 1.0002, norm:4.4904, tok/sec: 100253.54, flops:41.24, batch-reuse:1
@ 888 train 6.5604 , allloss: 6.8246, dt: 1282.43ms, fracRes: 0.0951, norm(attn): 0.1543, norm(output): 0.2773, norm(x): 0.2460, norm(y): 1.0003, norm:4.5151, tok/sec: 102206.05, flops:42.04, batch-reuse:1
@ 889 train 6.6080 , allloss: 6.8702, dt: 1309.93ms, fracRes: 0.0960, norm(attn): 0.1543, norm(output): 0.2773, norm(x): 0.2462, norm(y): 1.0002, norm:7.8516, tok/sec: 100060.05, flops:41.16, batch-reuse:1
@ 890 train 6.6939 , allloss: 6.9488, dt: 1313.91ms, fracRes: 0.0968, norm(attn): 0.1553, norm(output): 0.2754, norm(x): 0.2461, norm(y): 1.0002, norm:7.1711, tok/sec: 99756.90, flops:41.04, batch-reuse:1
@ 891 train 6.5746 , allloss: 6.8385, dt: 1306.75ms, fracRes: 0.0962, norm(attn): 0.1514, norm(output): 0.2773, norm(x): 0.2469, norm(y): 1.0002, norm:3.2653, tok/sec: 100303.93, flops:41.26, batch-reuse:1
@ 892 train 6.5057 , allloss: 6.7846, dt: 1285.44ms, fracRes: 0.0976, norm(attn): 0.1553, norm(output): 0.2734, norm(x): 0.2440, norm(y): 1.0002, norm:3.9265, tok/sec: 101966.32, flops:41.94, batch-reuse:1
@ 893 train 6.4400 , allloss: 6.7178, dt: 1309.11ms, fracRes: 0.1009, norm(attn): 0.1582, norm(output): 0.2676, norm(x): 0.2404, norm(y): 1.0002, norm:5.8663, tok/sec: 100123.01, flops:41.19, batch-reuse:1
@ 894 train 6.5896 , allloss: 6.8811, dt: 1296.48ms, fracRes: 0.1003, norm(attn): 0.1553, norm(output): 0.2695, norm(x): 0.2409, norm(y): 1.0002, norm:7.9785, tok/sec: 101098.74, flops:41.59, batch-reuse:1
@ 895 train 6.5902 , allloss: 6.8685, dt: 1281.90ms, fracRes: 0.0988, norm(attn): 0.1562, norm(output): 0.2695, norm(x): 0.2413, norm(y): 1.0002, norm:5.2528, tok/sec: 102248.25, flops:42.06, batch-reuse:1
@ 896 train 6.4681 , allloss: 6.7461, dt: 1275.91ms, fracRes: 0.1006, norm(attn): 0.1553, norm(output): 0.2715, norm(x): 0.2420, norm(y): 1.0002, norm:8.3433, tok/sec: 102727.93, flops:42.26, batch-reuse:1
@ 897 train 6.5600 , allloss: 6.8305, dt: 1272.40ms, fracRes: 0.1018, norm(attn): 0.1572, norm(output): 0.2656, norm(x): 0.2394, norm(y): 1.0002, norm:5.4572, tok/sec: 103011.45, flops:42.37, batch-reuse:1
@ 898 train 6.6101 , allloss: 6.8891, dt: 1281.60ms, fracRes: 0.0990, norm(attn): 0.1543, norm(output): 0.2695, norm(x): 0.2413, norm(y): 1.0002, norm:8.4229, tok/sec: 102272.48, flops:42.07, batch-reuse:1
@ 899 train 6.5454 , allloss: 6.8125, dt: 1294.02ms, fracRes: 0.1018, norm(attn): 0.1602, norm(output): 0.2656, norm(x): 0.2396, norm(y): 1.0002, norm:6.5273, tok/sec: 101290.80, flops:41.67, batch-reuse:1
@ 900 train 6.5910 , allloss: 6.8806, dt: 1293.33ms, fracRes: 0.0947, norm(attn): 0.1582, norm(output): 0.2676, norm(x): 0.2407, norm(y): 1.0002, norm:5.0164, tok/sec: 101344.61, flops:41.69, batch-reuse:1
@ 901 train 6.4966 , allloss: 6.7853, dt: 1312.07ms, fracRes: 0.0967, norm(attn): 0.1631, norm(output): 0.2656, norm(x): 0.2378, norm(y): 1.0001, norm:3.7576, tok/sec: 99897.23, flops:41.09, batch-reuse:1
@ 902 train 6.5021 , allloss: 6.7819, dt: 1299.52ms, fracRes: 0.0937, norm(attn): 0.1602, norm(output): 0.2656, norm(x): 0.2382, norm(y): 1.0002, norm:6.1342, tok/sec: 100861.69, flops:41.49, batch-reuse:1
@ 903 train 6.5053 , allloss: 6.8006, dt: 1265.54ms, fracRes: 0.0864, norm(attn): 0.1562, norm(output): 0.2676, norm(x): 0.2399, norm(y): 1.0002, norm:5.6717, tok/sec: 103569.89, flops:42.60, batch-reuse:1
@ 904 train 6.5165 , allloss: 6.8138, dt: 1279.96ms, fracRes: 0.0847, norm(attn): 0.1631, norm(output): 0.2656, norm(x): 0.2382, norm(y): 1.0002, norm:8.5990, tok/sec: 102403.45, flops:42.12, batch-reuse:1
@ 905 train 6.5811 , allloss: 6.8969, dt: 1278.82ms, fracRes: 0.0831, norm(attn): 0.1602, norm(output): 0.2656, norm(x): 0.2385, norm(y): 1.0001, norm:4.8450, tok/sec: 102494.14, flops:42.16, batch-reuse:1
@ 906 train 6.5563 , allloss: 6.8612, dt: 1286.67ms, fracRes: 0.0842, norm(attn): 0.1543, norm(output): 0.2676, norm(x): 0.2393, norm(y): 1.0001, norm:11.4991, tok/sec: 101869.32, flops:41.90, batch-reuse:1
@ 907 train 6.4521 , allloss: 6.7361, dt: 1283.03ms, fracRes: 0.0846, norm(attn): 0.1562, norm(output): 0.2637, norm(x): 0.2367, norm(y): 1.0002, norm:6.8550, tok/sec: 102158.45, flops:42.02, batch-reuse:1
@ 908 train 6.5263 , allloss: 6.8070, dt: 1283.28ms, fracRes: 0.0867, norm(attn): 0.1592, norm(output): 0.2656, norm(x): 0.2368, norm(y): 1.0002, norm:6.7057, tok/sec: 102138.11, flops:42.01, batch-reuse:1
@ 909 train 6.7785 , allloss: 7.0835, dt: 1280.17ms, fracRes: 0.0825, norm(attn): 0.1523, norm(output): 0.2695, norm(x): 0.2425, norm(y): 1.0001, norm:12.2801, tok/sec: 102386.02, flops:42.12, batch-reuse:1
@ 910 train 6.5576 , allloss: 6.8622, dt: 1288.18ms, fracRes: 0.0815, norm(attn): 0.1572, norm(output): 0.2656, norm(x): 0.2386, norm(y): 1.0001, norm:6.3199, tok/sec: 101749.86, flops:41.86, batch-reuse:1
@ 911 train 6.6741 , allloss: 6.9769, dt: 1283.33ms, fracRes: 0.0803, norm(attn): 0.1641, norm(output): 0.2637, norm(x): 0.2374, norm(y): 1.0002, norm:9.2298, tok/sec: 102134.67, flops:42.01, batch-reuse:1
@ 912 train 6.5604 , allloss: 6.8561, dt: 1259.20ms, fracRes: 0.0823, norm(attn): 0.1592, norm(output): 0.2637, norm(x): 0.2383, norm(y): 1.0002, norm:7.6137, tok/sec: 104091.66, flops:42.82, batch-reuse:1
@ 913 train 6.5677 , allloss: 6.8671, dt: 1271.59ms, fracRes: 0.0776, norm(attn): 0.1543, norm(output): 0.2695, norm(x): 0.2412, norm(y): 1.0002, norm:11.3505, tok/sec: 103077.13, flops:42.40, batch-reuse:1
@ 914 train 6.5608 , allloss: 6.8560, dt: 1296.93ms, fracRes: 0.0790, norm(attn): 0.1543, norm(output): 0.2676, norm(x): 0.2402, norm(y): 1.0002, norm:6.5777, tok/sec: 101063.13, flops:41.57, batch-reuse:1
@ 915 train 6.6028 , allloss: 6.8966, dt: 1277.55ms, fracRes: 0.0810, norm(attn): 0.1562, norm(output): 0.2656, norm(x): 0.2402, norm(y): 1.0002, norm:8.8237, tok/sec: 102596.70, flops:42.20, batch-reuse:1
@ 916 train 6.5076 , allloss: 6.8140, dt: 1297.26ms, fracRes: 0.0742, norm(attn): 0.1572, norm(output): 0.2656, norm(x): 0.2408, norm(y): 1.0003, norm:6.4635, tok/sec: 101037.81, flops:41.56, batch-reuse:1
@ 917 train 6.5326 , allloss: 6.8571, dt: 1317.76ms, fracRes: 0.0726, norm(attn): 0.1562, norm(output): 0.2676, norm(x): 0.2402, norm(y): 1.0002, norm:4.9368, tok/sec: 99466.01, flops:40.92, batch-reuse:1
@ 918 train 6.5845 , allloss: 6.8965, dt: 1295.36ms, fracRes: 0.0790, norm(attn): 0.1553, norm(output): 0.2656, norm(x): 0.2397, norm(y): 1.0002, norm:6.5918, tok/sec: 101185.82, flops:41.62, batch-reuse:1
@ 919 train 6.5301 , allloss: 6.8354, dt: 1262.44ms, fracRes: 0.0796, norm(attn): 0.1533, norm(output): 0.2676, norm(x): 0.2407, norm(y): 1.0002, norm:4.7403, tok/sec: 103823.95, flops:42.71, batch-reuse:1
@ 920 train 6.5576 , allloss: 6.8604, dt: 1295.69ms, fracRes: 0.0775, norm(attn): 0.1553, norm(output): 0.2656, norm(x): 0.2410, norm(y): 1.0002, norm:4.7520, tok/sec: 101159.77, flops:41.61, batch-reuse:1
@ 921 train 6.5179 , allloss: 6.8156, dt: 1269.88ms, fracRes: 0.0805, norm(attn): 0.1543, norm(output): 0.2676, norm(x): 0.2402, norm(y): 1.0002, norm:3.9653, tok/sec: 103215.70, flops:42.46, batch-reuse:1
@ 922 train 6.5487 , allloss: 6.8475, dt: 1296.25ms, fracRes: 0.0786, norm(attn): 0.1514, norm(output): 0.2695, norm(x): 0.2413, norm(y): 1.0002, norm:3.8996, tok/sec: 101116.42, flops:41.59, batch-reuse:1
@ 923 train 6.5021 , allloss: 6.8088, dt: 1293.02ms, fracRes: 0.0739, norm(attn): 0.1572, norm(output): 0.2656, norm(x): 0.2379, norm(y): 1.0002, norm:3.6560, tok/sec: 101368.81, flops:41.70, batch-reuse:1
@ 924 train 6.4913 , allloss: 6.8014, dt: 1289.58ms, fracRes: 0.0771, norm(attn): 0.1572, norm(output): 0.2656, norm(x): 0.2395, norm(y): 1.0002, norm:6.0967, tok/sec: 101639.15, flops:41.81, batch-reuse:1
@ 925 train 6.5332 , allloss: 6.8476, dt: 1310.09ms, fracRes: 0.0777, norm(attn): 0.1582, norm(output): 0.2656, norm(x): 0.2375, norm(y): 1.0002, norm:5.7939, tok/sec: 100047.83, flops:41.15, batch-reuse:1
@ 926 train 6.5303 , allloss: 6.8372, dt: 1320.39ms, fracRes: 0.0907, norm(attn): 0.1455, norm(output): 0.2676, norm(x): 0.2397, norm(y): 1.0002, norm:11.1268, tok/sec: 99267.30, flops:40.83, batch-reuse:1
@ 927 train 6.4689 , allloss: 6.7737, dt: 1299.70ms, fracRes: 0.0884, norm(attn): 0.1543, norm(output): 0.2637, norm(x): 0.2367, norm(y): 1.0002, norm:4.8895, tok/sec: 100847.83, flops:41.48, batch-reuse:1
@ 928 train 6.6496 , allloss: 6.9630, dt: 1271.53ms, fracRes: 0.0841, norm(attn): 0.1602, norm(output): 0.2656, norm(x): 0.2360, norm(y): 1.0002, norm:6.6824, tok/sec: 103082.20, flops:42.40, batch-reuse:1
@ 929 train 6.7317 , allloss: 7.0488, dt: 1286.44ms, fracRes: 0.0800, norm(attn): 0.1562, norm(output): 0.2676, norm(x): 0.2413, norm(y): 1.0001, norm:8.2045, tok/sec: 101887.60, flops:41.91, batch-reuse:1
@ 930 train 6.6093 , allloss: 6.8993, dt: 1294.71ms, fracRes: 0.0834, norm(attn): 0.1562, norm(output): 0.2676, norm(x): 0.2403, norm(y): 1.0002, norm:3.9245, tok/sec: 101236.48, flops:41.64, batch-reuse:1
@ 931 train 6.7686 , allloss: 7.0767, dt: 1296.29ms, fracRes: 0.0662, norm(attn): 0.1553, norm(output): 0.2676, norm(x): 0.2424, norm(y): 1.0002, norm:5.2967, tok/sec: 101113.13, flops:41.59, batch-reuse:1
@ 932 train 6.7194 , allloss: 7.0274, dt: 1276.79ms, fracRes: 0.0689, norm(attn): 0.1494, norm(output): 0.2715, norm(x): 0.2452, norm(y): 1.0002, norm:11.3546, tok/sec: 102657.55, flops:42.23, batch-reuse:1
@ 933 train 6.7487 , allloss: 7.0495, dt: 1287.72ms, fracRes: 0.0752, norm(attn): 0.1553, norm(output): 0.2676, norm(x): 0.2417, norm(y): 1.0002, norm:9.4664, tok/sec: 101786.14, flops:41.87, batch-reuse:1
@ 934 train 6.6744 , allloss: 6.9780, dt: 1272.35ms, fracRes: 0.0710, norm(attn): 0.1562, norm(output): 0.2676, norm(x): 0.2437, norm(y): 1.0002, norm:4.4455, tok/sec: 103015.89, flops:42.38, batch-reuse:1
@ 935 train 6.7276 , allloss: 7.0383, dt: 1259.91ms, fracRes: 0.0630, norm(attn): 0.1455, norm(output): 0.2793, norm(x): 0.2504, norm(y): 1.0002, norm:15.5358, tok/sec: 104032.84, flops:42.79, batch-reuse:1
@ 936 train 6.7028 , allloss: 7.0097, dt: 1283.88ms, fracRes: 0.0632, norm(attn): 0.1484, norm(output): 0.2754, norm(x): 0.2479, norm(y): 1.0002, norm:6.9601, tok/sec: 102090.27, flops:42.00, batch-reuse:1
@ 937 train 6.7449 , allloss: 7.0393, dt: 1263.29ms, fracRes: 0.0748, norm(attn): 0.1572, norm(output): 0.2656, norm(x): 0.2417, norm(y): 1.0003, norm:10.2300, tok/sec: 103754.78, flops:42.68, batch-reuse:1
@ 938 train 6.6594 , allloss: 6.9485, dt: 1285.18ms, fracRes: 0.0812, norm(attn): 0.1562, norm(output): 0.2676, norm(x): 0.2426, norm(y): 1.0002, norm:6.7521, tok/sec: 101987.32, flops:41.95, batch-reuse:1
@ 939 train 6.6998 , allloss: 6.9909, dt: 1271.49ms, fracRes: 0.0731, norm(attn): 0.1494, norm(output): 0.2734, norm(x): 0.2459, norm(y): 1.0002, norm:5.3727, tok/sec: 103085.08, flops:42.40, batch-reuse:1
@ 940 train 6.6855 , allloss: 6.9722, dt: 1286.56ms, fracRes: 0.0691, norm(attn): 0.1514, norm(output): 0.2715, norm(x): 0.2452, norm(y): 1.0002, norm:4.0450, tok/sec: 101878.21, flops:41.91, batch-reuse:1
@ 941 train 6.6832 , allloss: 6.9693, dt: 1295.29ms, fracRes: 0.0738, norm(attn): 0.1562, norm(output): 0.2695, norm(x): 0.2426, norm(y): 1.0003, norm:5.7303, tok/sec: 101191.07, flops:41.63, batch-reuse:1
@ 942 train 6.6547 , allloss: 6.9502, dt: 1302.17ms, fracRes: 0.0766, norm(attn): 0.1543, norm(output): 0.2715, norm(x): 0.2444, norm(y): 1.0002, norm:4.2401, tok/sec: 100656.41, flops:41.41, batch-reuse:1
@ 943 train 6.6645 , allloss: 6.9638, dt: 1273.92ms, fracRes: 0.0768, norm(attn): 0.1475, norm(output): 0.2773, norm(x): 0.2479, norm(y): 1.0002, norm:5.1068, tok/sec: 102888.47, flops:42.32, batch-reuse:1
@ 944 train 6.6486 , allloss: 6.9470, dt: 1273.39ms, fracRes: 0.0762, norm(attn): 0.1494, norm(output): 0.2773, norm(x): 0.2478, norm(y): 1.0002, norm:3.6627, tok/sec: 102931.77, flops:42.34, batch-reuse:1
@ 945 train 6.7655 , allloss: 7.0790, dt: 1278.52ms, fracRes: 0.0743, norm(attn): 0.1465, norm(output): 0.2793, norm(x): 0.2507, norm(y): 1.0002, norm:4.6435, tok/sec: 102518.28, flops:42.17, batch-reuse:1
@ 946 train 6.6840 , allloss: 6.9847, dt: 1299.09ms, fracRes: 0.0721, norm(attn): 0.1436, norm(output): 0.2793, norm(x): 0.2509, norm(y): 1.0002, norm:6.2599, tok/sec: 100895.62, flops:41.50, batch-reuse:1
@ 947 train 6.6457 , allloss: 6.9283, dt: 1313.35ms, fracRes: 0.0759, norm(attn): 0.1475, norm(output): 0.2793, norm(x): 0.2505, norm(y): 1.0002, norm:6.8269, tok/sec: 99799.48, flops:41.05, batch-reuse:1
@ 948 train 6.6472 , allloss: 6.9275, dt: 1321.51ms, fracRes: 0.0821, norm(attn): 0.1406, norm(output): 0.2793, norm(x): 0.2511, norm(y): 1.0002, norm:4.7333, tok/sec: 99183.38, flops:40.80, batch-reuse:1
@ 949 train 6.6955 , allloss: 6.9937, dt: 1316.20ms, fracRes: 0.0737, norm(attn): 0.1465, norm(output): 0.2773, norm(x): 0.2478, norm(y): 1.0002, norm:5.6776, tok/sec: 99583.70, flops:40.96, batch-reuse:1
@ 950 train 6.6552 , allloss: 6.9663, dt: 1314.77ms, fracRes: 0.0752, norm(attn): 0.1553, norm(output): 0.2695, norm(x): 0.2451, norm(y): 1.0002, norm:6.1625, tok/sec: 99691.84, flops:41.01, batch-reuse:1
@ 951 train 6.7056 , allloss: 7.0254, dt: 1316.70ms, fracRes: 0.0682, norm(attn): 0.1514, norm(output): 0.2773, norm(x): 0.2492, norm(y): 1.0001, norm:4.1419, tok/sec: 99545.93, flops:40.95, batch-reuse:1
@ 952 train 6.6756 , allloss: 6.9863, dt: 1321.83ms, fracRes: 0.0616, norm(attn): 0.1514, norm(output): 0.2773, norm(x): 0.2486, norm(y): 1.0001, norm:8.7138, tok/sec: 99159.44, flops:40.79, batch-reuse:1
@ 953 train 6.6416 , allloss: 6.9281, dt: 1320.56ms, fracRes: 0.0656, norm(attn): 0.1543, norm(output): 0.2754, norm(x): 0.2470, norm(y): 1.0002, norm:5.5970, tok/sec: 99255.06, flops:40.83, batch-reuse:1
@ 954 train 6.5960 , allloss: 6.8697, dt: 1305.87ms, fracRes: 0.0745, norm(attn): 0.1494, norm(output): 0.2793, norm(x): 0.2501, norm(y): 1.0002, norm:6.9829, tok/sec: 100371.56, flops:41.29, batch-reuse:1
@ 955 train 6.6541 , allloss: 6.9328, dt: 1267.25ms, fracRes: 0.0684, norm(attn): 0.1533, norm(output): 0.2773, norm(x): 0.2484, norm(y): 1.0002, norm:4.9952, tok/sec: 103430.45, flops:42.55, batch-reuse:1
@ 956 train 6.5999 , allloss: 6.8779, dt: 1277.52ms, fracRes: 0.0687, norm(attn): 0.1562, norm(output): 0.2715, norm(x): 0.2453, norm(y): 1.0002, norm:5.6864, tok/sec: 102598.50, flops:42.20, batch-reuse:1
@ 957 train 6.6554 , allloss: 6.9565, dt: 1268.24ms, fracRes: 0.0610, norm(attn): 0.1514, norm(output): 0.2773, norm(x): 0.2481, norm(y): 1.0002, norm:7.4941, tok/sec: 103349.86, flops:42.51, batch-reuse:1
@ 958 train 6.6609 , allloss: 6.9558, dt: 1273.24ms, fracRes: 0.0646, norm(attn): 0.1562, norm(output): 0.2754, norm(x): 0.2481, norm(y): 1.0002, norm:5.7127, tok/sec: 102943.45, flops:42.35, batch-reuse:1
@ 959 train 6.5727 , allloss: 6.8690, dt: 1297.77ms, fracRes: 0.0681, norm(attn): 0.1455, norm(output): 0.2793, norm(x): 0.2485, norm(y): 1.0001, norm:5.4448, tok/sec: 100997.66, flops:41.55, batch-reuse:1
@ 960 train 6.6753 , allloss: 6.9706, dt: 1328.53ms, fracRes: 0.0680, norm(attn): 0.1523, norm(output): 0.2734, norm(x): 0.2471, norm(y): 1.0001, norm:4.6926, tok/sec: 98659.42, flops:40.58, batch-reuse:1
@ 961 train 6.6265 , allloss: 6.9130, dt: 1310.31ms, fracRes: 0.0722, norm(attn): 0.1426, norm(output): 0.2754, norm(x): 0.2484, norm(y): 1.0000, norm:7.8868, tok/sec: 100031.63, flops:41.15, batch-reuse:1
@ 962 train 6.6343 , allloss: 6.9128, dt: 1310.65ms, fracRes: 0.0721, norm(attn): 0.1504, norm(output): 0.2695, norm(x): 0.2460, norm(y): 1.0001, norm:5.9069, tok/sec: 100005.28, flops:41.14, batch-reuse:1
@ 963 train 6.6791 , allloss: 6.9615, dt: 1259.46ms, fracRes: 0.0716, norm(attn): 0.1475, norm(output): 0.2734, norm(x): 0.2476, norm(y): 1.0000, norm:6.0220, tok/sec: 104069.86, flops:42.81, batch-reuse:1
@ 964 train 6.6373 , allloss: 6.9086, dt: 1296.19ms, fracRes: 0.0761, norm(attn): 0.1426, norm(output): 0.2773, norm(x): 0.2500, norm(y): 1.0000, norm:5.0029, tok/sec: 101121.27, flops:41.60, batch-reuse:1
@ 965 train 6.6200 , allloss: 6.9074, dt: 1303.85ms, fracRes: 0.0692, norm(attn): 0.1484, norm(output): 0.2734, norm(x): 0.2471, norm(y): 1.0000, norm:5.7343, tok/sec: 100526.70, flops:41.35, batch-reuse:1
@ 966 train 6.6231 , allloss: 6.9418, dt: 1304.73ms, fracRes: 0.0640, norm(attn): 0.1406, norm(output): 0.2773, norm(x): 0.2482, norm(y): 1.0000, norm:8.1487, tok/sec: 100458.77, flops:41.32, batch-reuse:1
@ 967 train 6.7192 , allloss: 7.0303, dt: 1282.35ms, fracRes: 0.0631, norm(attn): 0.1406, norm(output): 0.2773, norm(x): 0.2488, norm(y): 0.9999, norm:6.6055, tok/sec: 102212.47, flops:42.05, batch-reuse:1
@ 968 train 6.6778 , allloss: 6.9802, dt: 1310.46ms, fracRes: 0.0656, norm(attn): 0.1445, norm(output): 0.2715, norm(x): 0.2449, norm(y): 1.0000, norm:7.1653, tok/sec: 100019.72, flops:41.14, batch-reuse:1
@ 969 train 6.6001 , allloss: 6.8810, dt: 1313.49ms, fracRes: 0.0685, norm(attn): 0.1484, norm(output): 0.2715, norm(x): 0.2461, norm(y): 1.0000, norm:6.6786, tok/sec: 99789.10, flops:41.05, batch-reuse:1
@ 970 train 6.6289 , allloss: 6.9235, dt: 1305.69ms, fracRes: 0.0679, norm(attn): 0.1357, norm(output): 0.2754, norm(x): 0.2477, norm(y): 0.9999, norm:9.0670, tok/sec: 100385.56, flops:41.29, batch-reuse:1
@ 971 train 6.6561 , allloss: 6.9353, dt: 1328.43ms, fracRes: 0.0723, norm(attn): 0.1426, norm(output): 0.2715, norm(x): 0.2464, norm(y): 1.0000, norm:7.6582, tok/sec: 98667.12, flops:40.59, batch-reuse:1
@ 972 train 6.6201 , allloss: 6.9244, dt: 1326.44ms, fracRes: 0.0671, norm(attn): 0.1426, norm(output): 0.2715, norm(x): 0.2448, norm(y): 1.0000, norm:5.2853, tok/sec: 98815.06, flops:40.65, batch-reuse:1
@ 973 train 6.6220 , allloss: 6.9315, dt: 1294.16ms, fracRes: 0.0697, norm(attn): 0.1426, norm(output): 0.2715, norm(x): 0.2452, norm(y): 1.0000, norm:5.7276, tok/sec: 101279.64, flops:41.66, batch-reuse:1
@ 974 train 6.6327 , allloss: 6.9484, dt: 1278.91ms, fracRes: 0.0696, norm(attn): 0.1426, norm(output): 0.2715, norm(x): 0.2449, norm(y): 0.9999, norm:4.2800, tok/sec: 102487.41, flops:42.16, batch-reuse:1
@ 975 train 6.6331 , allloss: 6.9398, dt: 1281.23ms, fracRes: 0.0676, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2426, norm(y): 0.9999, norm:5.3431, tok/sec: 102301.81, flops:42.08, batch-reuse:1
@ 976 train 6.6126 , allloss: 6.9460, dt: 1291.46ms, fracRes: 0.0673, norm(attn): 0.1328, norm(output): 0.2715, norm(x): 0.2437, norm(y): 0.9999, norm:14.1837, tok/sec: 101491.29, flops:41.75, batch-reuse:1
@ 977 train 6.5986 , allloss: 6.9459, dt: 1284.10ms, fracRes: 0.0630, norm(attn): 0.1406, norm(output): 0.2676, norm(x): 0.2418, norm(y): 1.0000, norm:8.0452, tok/sec: 102073.04, flops:41.99, batch-reuse:1
@ 978 train 6.5865 , allloss: 6.9526, dt: 1296.74ms, fracRes: 0.0593, norm(attn): 0.1426, norm(output): 0.2676, norm(x): 0.2419, norm(y): 1.0000, norm:3.9458, tok/sec: 101078.46, flops:41.58, batch-reuse:1
@ 979 train 6.6365 , allloss: 6.9932, dt: 1263.31ms, fracRes: 0.0604, norm(attn): 0.1377, norm(output): 0.2695, norm(x): 0.2438, norm(y): 0.9999, norm:16.8879, tok/sec: 103753.12, flops:42.68, batch-reuse:1
@ 980 train 6.5624 , allloss: 6.8824, dt: 1296.24ms, fracRes: 0.0606, norm(attn): 0.1406, norm(output): 0.2656, norm(x): 0.2420, norm(y): 1.0000, norm:14.2371, tok/sec: 101116.77, flops:41.59, batch-reuse:1
@ 981 train 6.5620 , allloss: 6.9031, dt: 1325.55ms, fracRes: 0.0571, norm(attn): 0.1396, norm(output): 0.2715, norm(x): 0.2446, norm(y): 1.0000, norm:5.4508, tok/sec: 98881.59, flops:40.68, batch-reuse:1
@ 982 train 6.5373 , allloss: 6.8732, dt: 1312.62ms, fracRes: 0.0552, norm(attn): 0.1396, norm(output): 0.2715, norm(x): 0.2454, norm(y): 1.0000, norm:6.1526, tok/sec: 99854.93, flops:41.08, batch-reuse:1
@ 983 train 6.7177 , allloss: 7.0542, dt: 1281.48ms, fracRes: 0.0516, norm(attn): 0.1387, norm(output): 0.2656, norm(x): 0.2435, norm(y): 1.0000, norm:15.1854, tok/sec: 102282.11, flops:42.07, batch-reuse:1
@ 984 train 6.6031 , allloss: 6.9424, dt: 1278.64ms, fracRes: 0.0557, norm(attn): 0.1318, norm(output): 0.2695, norm(x): 0.2452, norm(y): 1.0000, norm:7.7319, tok/sec: 102509.24, flops:42.17, batch-reuse:1
@ 985 train 6.5594 , allloss: 6.9046, dt: 1286.44ms, fracRes: 0.0548, norm(attn): 0.1387, norm(output): 0.2715, norm(x): 0.2449, norm(y): 1.0000, norm:5.4357, tok/sec: 101887.20, flops:41.91, batch-reuse:1
@ 986 train 6.6476 , allloss: 7.0189, dt: 1293.60ms, fracRes: 0.0489, norm(attn): 0.1553, norm(output): 0.2637, norm(x): 0.2393, norm(y): 1.0001, norm:8.5665, tok/sec: 101323.67, flops:41.68, batch-reuse:1
@ 987 train 6.5528 , allloss: 6.9257, dt: 1285.74ms, fracRes: 0.0480, norm(attn): 0.1543, norm(output): 0.2656, norm(x): 0.2400, norm(y): 1.0000, norm:6.8250, tok/sec: 101943.08, flops:41.93, batch-reuse:1
@ 988 train 6.6750 , allloss: 7.0235, dt: 1287.72ms, fracRes: 0.0497, norm(attn): 0.1465, norm(output): 0.2637, norm(x): 0.2385, norm(y): 1.0000, norm:7.9990, tok/sec: 101786.11, flops:41.87, batch-reuse:1
@ 989 train 6.7199 , allloss: 7.0647, dt: 1259.03ms, fracRes: 0.0524, norm(attn): 0.1484, norm(output): 0.2637, norm(x): 0.2387, norm(y): 1.0001, norm:4.2385, tok/sec: 104105.34, flops:42.82, batch-reuse:1
@ 990 train 6.6167 , allloss: 6.9356, dt: 1258.81ms, fracRes: 0.0586, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2400, norm(y): 1.0001, norm:10.3292, tok/sec: 104124.11, flops:42.83, batch-reuse:1
@ 991 train 6.6166 , allloss: 6.9413, dt: 1282.82ms, fracRes: 0.0555, norm(attn): 0.1494, norm(output): 0.2656, norm(x): 0.2398, norm(y): 1.0002, norm:5.1959, tok/sec: 102174.59, flops:42.03, batch-reuse:1
@ 992 train 6.6990 , allloss: 7.0280, dt: 1311.17ms, fracRes: 0.0548, norm(attn): 0.1436, norm(output): 0.2695, norm(x): 0.2425, norm(y): 1.0001, norm:9.1181, tok/sec: 99965.96, flops:41.12, batch-reuse:1
@ 993 train 6.5509 , allloss: 6.8702, dt: 1300.43ms, fracRes: 0.0561, norm(attn): 0.1396, norm(output): 0.2656, norm(x): 0.2417, norm(y): 1.0002, norm:5.2070, tok/sec: 100791.03, flops:41.46, batch-reuse:1
@ 994 train 6.6740 , allloss: 6.9850, dt: 1295.39ms, fracRes: 0.0618, norm(attn): 0.1377, norm(output): 0.2656, norm(x): 0.2389, norm(y): 1.0003, norm:6.7768, tok/sec: 101183.32, flops:41.62, batch-reuse:1
@ 995 train 6.5924 , allloss: 6.9023, dt: 1282.31ms, fracRes: 0.0601, norm(attn): 0.1396, norm(output): 0.2656, norm(x): 0.2385, norm(y): 1.0002, norm:3.8833, tok/sec: 102215.68, flops:42.05, batch-reuse:1
@ 996 train 6.5408 , allloss: 6.8585, dt: 1271.10ms, fracRes: 0.0579, norm(attn): 0.1328, norm(output): 0.2695, norm(x): 0.2426, norm(y): 1.0001, norm:7.6107, tok/sec: 103116.79, flops:42.42, batch-reuse:1
@ 997 train 6.5374 , allloss: 6.8665, dt: 1292.64ms, fracRes: 0.0560, norm(attn): 0.1338, norm(output): 0.2656, norm(x): 0.2408, norm(y): 1.0001, norm:7.7326, tok/sec: 101398.52, flops:41.71, batch-reuse:1
@ 998 train 6.6767 , allloss: 7.0045, dt: 1279.27ms, fracRes: 0.0578, norm(attn): 0.1348, norm(output): 0.2656, norm(x): 0.2422, norm(y): 1.0001, norm:5.2151, tok/sec: 102458.76, flops:42.15, batch-reuse:1
@ 999 train 6.5671 , allloss: 6.8934, dt: 1286.93ms, fracRes: 0.0599, norm(attn): 0.1396, norm(output): 0.2637, norm(x): 0.2365, norm(y): 1.0002, norm:7.6315, tok/sec: 101848.56, flops:41.90, batch-reuse:1
@ 1000 train 6.6511 , allloss: 6.9743, dt: 1270.09ms, fracRes: 0.0603, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2382, norm(y): 1.0002, norm:5.4109, tok/sec: 103198.69, flops:42.45, batch-reuse:1
@ 1001 train 6.6089 , allloss: 6.9213, dt: 1274.00ms, fracRes: 0.0651, norm(attn): 0.1387, norm(output): 0.2656, norm(x): 0.2387, norm(y): 1.0002, norm:5.0539, tok/sec: 102882.23, flops:42.32, batch-reuse:1
@ 1002 train 6.5165 , allloss: 6.8263, dt: 1272.30ms, fracRes: 0.0667, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2376, norm(y): 1.0002, norm:7.1365, tok/sec: 103019.36, flops:42.38, batch-reuse:1
@ 1003 train 6.6547 , allloss: 6.9734, dt: 1319.22ms, fracRes: 0.0682, norm(attn): 0.1348, norm(output): 0.2637, norm(x): 0.2379, norm(y): 1.0002, norm:7.0209, tok/sec: 99355.80, flops:40.87, batch-reuse:1
@ 1004 train 6.5093 , allloss: 6.8134, dt: 1299.31ms, fracRes: 0.0707, norm(attn): 0.1357, norm(output): 0.2637, norm(x): 0.2375, norm(y): 1.0003, norm:5.1937, tok/sec: 100877.81, flops:41.50, batch-reuse:1
@ 1005 train 6.5632 , allloss: 6.8743, dt: 1258.06ms, fracRes: 0.0662, norm(attn): 0.1465, norm(output): 0.2617, norm(x): 0.2357, norm(y): 1.0004, norm:7.4452, tok/sec: 104185.69, flops:42.86, batch-reuse:1
@ 1006 train 6.6294 , allloss: 6.9476, dt: 1257.36ms, fracRes: 0.0604, norm(attn): 0.1494, norm(output): 0.2656, norm(x): 0.2397, norm(y): 1.0003, norm:13.6771, tok/sec: 104243.81, flops:42.88, batch-reuse:1
@ 1007 train 6.5441 , allloss: 6.8635, dt: 1288.51ms, fracRes: 0.0579, norm(attn): 0.1523, norm(output): 0.2637, norm(x): 0.2382, norm(y): 1.0003, norm:6.0696, tok/sec: 101723.35, flops:41.84, batch-reuse:1
@ 1008 train 6.5907 , allloss: 6.9032, dt: 1307.61ms, fracRes: 0.0571, norm(attn): 0.1416, norm(output): 0.2656, norm(x): 0.2416, norm(y): 1.0002, norm:6.6305, tok/sec: 100237.56, flops:41.23, batch-reuse:1
@ 1009 train 6.6751 , allloss: 7.0002, dt: 1311.43ms, fracRes: 0.0515, norm(attn): 0.1475, norm(output): 0.2695, norm(x): 0.2450, norm(y): 1.0002, norm:3.4902, tok/sec: 99946.01, flops:41.11, batch-reuse:1
@ 1010 train 6.6629 , allloss: 6.9910, dt: 1270.16ms, fracRes: 0.0520, norm(attn): 0.1484, norm(output): 0.2676, norm(x): 0.2438, norm(y): 1.0002, norm:5.8882, tok/sec: 103193.53, flops:42.45, batch-reuse:1
@ 1011 train 6.5573 , allloss: 6.8729, dt: 1283.40ms, fracRes: 0.0536, norm(attn): 0.1475, norm(output): 0.2734, norm(x): 0.2463, norm(y): 1.0002, norm:5.7615, tok/sec: 102128.98, flops:42.01, batch-reuse:1
@ 1012 train 6.6566 , allloss: 6.9569, dt: 1287.61ms, fracRes: 0.0589, norm(attn): 0.1436, norm(output): 0.2695, norm(x): 0.2447, norm(y): 1.0002, norm:7.6132, tok/sec: 101794.79, flops:41.87, batch-reuse:1
@ 1013 train 6.6249 , allloss: 6.9191, dt: 1273.55ms, fracRes: 0.0604, norm(attn): 0.1406, norm(output): 0.2715, norm(x): 0.2462, norm(y): 1.0002, norm:10.9358, tok/sec: 102918.28, flops:42.34, batch-reuse:1
@ 1014 train 6.4942 , allloss: 6.7797, dt: 1271.82ms, fracRes: 0.0566, norm(attn): 0.1426, norm(output): 0.2695, norm(x): 0.2448, norm(y): 1.0002, norm:4.3117, tok/sec: 103058.70, flops:42.39, batch-reuse:1
@ 1015 train 6.5944 , allloss: 6.8859, dt: 1293.45ms, fracRes: 0.0570, norm(attn): 0.1416, norm(output): 0.2676, norm(x): 0.2442, norm(y): 1.0003, norm:7.5704, tok/sec: 101335.52, flops:41.68, batch-reuse:1
@ 1016 train 6.6394 , allloss: 6.9509, dt: 1309.47ms, fracRes: 0.0523, norm(attn): 0.1504, norm(output): 0.2676, norm(x): 0.2454, norm(y): 1.0002, norm:9.0911, tok/sec: 100095.75, flops:41.17, batch-reuse:1
@ 1017 train 6.4974 , allloss: 6.8011, dt: 1313.77ms, fracRes: 0.0503, norm(attn): 0.1592, norm(output): 0.2695, norm(x): 0.2458, norm(y): 1.0003, norm:5.7669, tok/sec: 99767.68, flops:41.04, batch-reuse:1
@ 1018 train 6.6121 , allloss: 6.9030, dt: 1268.33ms, fracRes: 0.0525, norm(attn): 0.1514, norm(output): 0.2773, norm(x): 0.2487, norm(y): 1.0003, norm:6.4044, tok/sec: 103342.05, flops:42.51, batch-reuse:1
@ 1019 train 6.6019 , allloss: 6.9045, dt: 1290.23ms, fracRes: 0.0464, norm(attn): 0.1543, norm(output): 0.2734, norm(x): 0.2468, norm(y): 1.0003, norm:4.3267, tok/sec: 101588.35, flops:41.79, batch-reuse:1
@ 1020 train 6.5062 , allloss: 6.8098, dt: 1303.16ms, fracRes: 0.0464, norm(attn): 0.1562, norm(output): 0.2734, norm(x): 0.2475, norm(y): 1.0003, norm:4.2274, tok/sec: 100579.82, flops:41.37, batch-reuse:1
@ 1021 train 6.5693 , allloss: 6.8651, dt: 1279.24ms, fracRes: 0.0497, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2512, norm(y): 1.0003, norm:11.9874, tok/sec: 102460.98, flops:42.15, batch-reuse:1
@ 1022 train 6.5028 , allloss: 6.8066, dt: 1274.33ms, fracRes: 0.0401, norm(attn): 0.1572, norm(output): 0.2734, norm(x): 0.2483, norm(y): 1.0003, norm:6.8619, tok/sec: 102855.93, flops:42.31, batch-reuse:1
@ 1023 train 6.5069 , allloss: 6.8183, dt: 1265.60ms, fracRes: 0.0371, norm(attn): 0.1641, norm(output): 0.2695, norm(x): 0.2468, norm(y): 1.0003, norm:6.1566, tok/sec: 103565.32, flops:42.60, batch-reuse:1
@ 1024 train 6.4880 , allloss: 6.8031, dt: 1298.42ms, fracRes: 0.0361, norm(attn): 0.1582, norm(output): 0.2773, norm(x): 0.2502, norm(y): 1.0003, norm:8.5424, tok/sec: 100947.55, flops:41.53, batch-reuse:1
@ 1025 train 6.5350 , allloss: 6.8439, dt: 1325.89ms, fracRes: 0.0342, norm(attn): 0.1562, norm(output): 0.2773, norm(x): 0.2512, norm(y): 1.0003, norm:4.2871, tok/sec: 98855.73, flops:40.66, batch-reuse:1
@ 1026 train 6.5808 , allloss: 6.8825, dt: 1325.42ms, fracRes: 0.0342, norm(attn): 0.1592, norm(output): 0.2773, norm(x): 0.2528, norm(y): 1.0003, norm:4.3936, tok/sec: 98891.25, flops:40.68, batch-reuse:1
@ 1027 train 6.6020 , allloss: 6.9045, dt: 1310.81ms, fracRes: 0.0358, norm(attn): 0.1641, norm(output): 0.2812, norm(x): 0.2562, norm(y): 1.0003, norm:7.7967, tok/sec: 99993.09, flops:41.13, batch-reuse:1
@ 1028 train 6.4891 , allloss: 6.7905, dt: 1297.11ms, fracRes: 0.0410, norm(attn): 0.1641, norm(output): 0.2793, norm(x): 0.2532, norm(y): 1.0003, norm:4.3456, tok/sec: 101049.32, flops:41.57, batch-reuse:1
@ 1029 train 6.4911 , allloss: 6.7905, dt: 1290.23ms, fracRes: 0.0476, norm(attn): 0.1562, norm(output): 0.2793, norm(x): 0.2535, norm(y): 1.0003, norm:5.5006, tok/sec: 101587.92, flops:41.79, batch-reuse:1
@ 1030 train 6.5700 , allloss: 6.8754, dt: 1286.35ms, fracRes: 0.0393, norm(attn): 0.1650, norm(output): 0.2793, norm(x): 0.2545, norm(y): 1.0002, norm:5.6218, tok/sec: 101894.28, flops:41.91, batch-reuse:1
@ 1031 train 6.5593 , allloss: 6.8702, dt: 1274.29ms, fracRes: 0.0304, norm(attn): 0.1719, norm(output): 0.2793, norm(x): 0.2550, norm(y): 1.0002, norm:3.8961, tok/sec: 102858.55, flops:42.31, batch-reuse:1
@ 1032 train 6.4835 , allloss: 6.7940, dt: 1269.72ms, fracRes: 0.0292, norm(attn): 0.1670, norm(output): 0.2793, norm(x): 0.2548, norm(y): 1.0002, norm:3.9949, tok/sec: 103228.72, flops:42.46, batch-reuse:1
@ 1033 train 6.4765 , allloss: 6.7922, dt: 1281.45ms, fracRes: 0.0276, norm(attn): 0.1680, norm(output): 0.2754, norm(x): 0.2515, norm(y): 1.0002, norm:4.3502, tok/sec: 102283.82, flops:42.07, batch-reuse:1
@ 1034 train 6.5059 , allloss: 6.8210, dt: 1296.03ms, fracRes: 0.0298, norm(attn): 0.1631, norm(output): 0.2812, norm(x): 0.2556, norm(y): 1.0002, norm:5.7826, tok/sec: 101133.64, flops:41.60, batch-reuse:1
@ 1035 train 6.5307 , allloss: 6.8540, dt: 1290.31ms, fracRes: 0.0294, norm(attn): 0.1699, norm(output): 0.2754, norm(x): 0.2521, norm(y): 1.0003, norm:5.7935, tok/sec: 101582.08, flops:41.79, batch-reuse:1
@ 1036 train 6.5544 , allloss: 6.8751, dt: 1285.01ms, fracRes: 0.0268, norm(attn): 0.1709, norm(output): 0.2793, norm(x): 0.2551, norm(y): 1.0002, norm:4.4510, tok/sec: 102001.06, flops:41.96, batch-reuse:1
@ 1037 train 6.5629 , allloss: 6.8961, dt: 1296.64ms, fracRes: 0.0250, norm(attn): 0.1738, norm(output): 0.2793, norm(x): 0.2538, norm(y): 1.0002, norm:5.6715, tok/sec: 101085.59, flops:41.58, batch-reuse:1
@ 1038 train 6.4800 , allloss: 6.8180, dt: 1292.38ms, fracRes: 0.0273, norm(attn): 0.1689, norm(output): 0.2812, norm(x): 0.2566, norm(y): 1.0001, norm:4.9589, tok/sec: 101418.87, flops:41.72, batch-reuse:1
@ 1039 train 6.4669 , allloss: 6.8091, dt: 1307.37ms, fracRes: 0.0227, norm(attn): 0.1768, norm(output): 0.2793, norm(x): 0.2541, norm(y): 1.0002, norm:5.7087, tok/sec: 100256.52, flops:41.24, batch-reuse:1
@ 1040 train 6.3320 , allloss: 6.6735, dt: 1271.32ms, fracRes: 0.0241, norm(attn): 0.1719, norm(output): 0.2734, norm(x): 0.2522, norm(y): 1.0002, norm:6.8120, tok/sec: 103099.02, flops:42.41, batch-reuse:1
@ 1041 train 6.4457 , allloss: 6.7866, dt: 1307.44ms, fracRes: 0.0204, norm(attn): 0.1729, norm(output): 0.2793, norm(x): 0.2538, norm(y): 1.0002, norm:4.4133, tok/sec: 100250.63, flops:41.24, batch-reuse:1
@ 1042 train 6.4406 , allloss: 6.7933, dt: 1337.57ms, fracRes: 0.0199, norm(attn): 0.1729, norm(output): 0.2793, norm(x): 0.2561, norm(y): 1.0001, norm:4.8723, tok/sec: 97992.47, flops:40.31, batch-reuse:1
@ 1043 train 6.5140 , allloss: 6.8709, dt: 1337.78ms, fracRes: 0.0204, norm(attn): 0.1680, norm(output): 0.2793, norm(x): 0.2552, norm(y): 1.0001, norm:4.0190, tok/sec: 97977.60, flops:40.30, batch-reuse:1
@ 1044 train 6.5761 , allloss: 6.9215, dt: 1324.85ms, fracRes: 0.0208, norm(attn): 0.1670, norm(output): 0.2812, norm(x): 0.2587, norm(y): 1.0000, norm:8.0810, tok/sec: 98933.83, flops:40.70, batch-reuse:1
@ 1045 train 6.5402 , allloss: 6.8970, dt: 1287.72ms, fracRes: 0.0196, norm(attn): 0.1738, norm(output): 0.2793, norm(x): 0.2547, norm(y): 1.0001, norm:5.4702, tok/sec: 101786.12, flops:41.87, batch-reuse:1
@ 1046 train 6.4807 , allloss: 6.8481, dt: 1294.60ms, fracRes: 0.0183, norm(attn): 0.1719, norm(output): 0.2773, norm(x): 0.2552, norm(y): 1.0001, norm:6.8252, tok/sec: 101244.87, flops:41.65, batch-reuse:1
@ 1047 train 6.4442 , allloss: 6.8107, dt: 1291.15ms, fracRes: 0.0173, norm(attn): 0.1729, norm(output): 0.2793, norm(x): 0.2555, norm(y): 1.0001, norm:3.7440, tok/sec: 101515.96, flops:41.76, batch-reuse:1
@ 1048 train 6.4874 , allloss: 6.8643, dt: 1296.57ms, fracRes: 0.0170, norm(attn): 0.1758, norm(output): 0.2793, norm(x): 0.2557, norm(y): 1.0001, norm:5.8502, tok/sec: 101091.45, flops:41.58, batch-reuse:1
@ 1049 train 6.4319 , allloss: 6.8007, dt: 1285.49ms, fracRes: 0.0187, norm(attn): 0.1709, norm(output): 0.2793, norm(x): 0.2557, norm(y): 1.0001, norm:3.7190, tok/sec: 101962.86, flops:41.94, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2422, 0.7578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2559, 0.3457, 0.3965, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.2656, 0.3652, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.0776, 0.1235, 0.5508, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0908, 0.1260, 0.1006, 0.3184, 0.3223, 0.0415, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0547, 0.0659, 0.0825, 0.6367, 0.0732, 0.0177, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.1260, 0.1592, 0.0167, 0.0835, 0.1060, 0.1143, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.0654, 0.0757, 0.4727, 0.0615, 0.0166, 0.1445, 0.0403, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.0469, 0.0554, 0.2285, 0.1709, 0.0908, 0.0718, 0.0530, 0.1211, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0513, 0.0410, 0.0540, 0.5664, 0.0996, 0.0107, 0.0684, 0.0233, 0.0272, 0.0317, 0.0256, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0967, 0.0623, 0.0510, 0.1250, 0.0583, 0.0981, 0.1167, 0.0962, 0.0928, 0.0674, 0.0588, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0422, 0.1934, 0.0352, 0.0518, 0.0854, 0.0535, 0.1514, 0.0513, 0.0425, 0.0320, 0.1055, 0.0864, 0.0000, 0.0000],
        [0.0540, 0.0535, 0.0674, 0.3438, 0.0635, 0.0113, 0.0825, 0.0216, 0.0287, 0.0850, 0.0391, 0.0278, 0.0815, 0.0417, 0.0000],
        [0.0515, 0.0383, 0.1045, 0.1787, 0.0942, 0.0339, 0.0530, 0.0544, 0.0250, 0.0405, 0.0347, 0.0645, 0.1357, 0.0269, 0.0645]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0065, -0.0164,  0.0092,  ...,  0.0047, -0.0138,  0.0152],
        [ 0.0033, -0.0165,  0.0149,  ..., -0.0082, -0.0195,  0.0451],
        [-0.0036,  0.0006, -0.0228,  ...,  0.0159, -0.0171, -0.0117],
        ...,
        [ 0.0271,  0.0135, -0.0141,  ..., -0.0045, -0.0308, -0.0134],
        [ 0.0006,  0.0133,  0.0079,  ...,  0.0014, -0.0350, -0.0049],
        [-0.0117,  0.0114, -0.0255,  ...,  0.0043, -0.0221,  0.0282]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0811, -0.0381,  0.6484,  0.3242,  0.2773,  0.9062, -0.2871,  0.4043, -0.2617, -0.9062,  0.5469,  0.0272, -0.3633,  0.3496, -0.2188, -0.2148,  0.6992, -0.0684,  0.4746, -0.9141, -0.4160,  0.6562,  1.1016, -0.3730,  0.2812, -0.2012,  0.2910,  0.7578, -0.1602, -0.5195, -0.2275,  0.0427,
         0.7109, -0.7461, -0.5195,  0.3730,  1.0234,  1.0391, -0.4707,  0.5547,  0.0557,  0.2354, -0.0415,  0.0664,  0.1523, -0.0369,  0.7852, -0.5117,  0.0131,  0.5234,  0.4023, -0.9609,  0.2949,  0.5820, -0.7461, -0.1670, -0.9453,  0.5195, -0.3906,  0.0344, -0.0605, -0.0374, -0.0967,  1.1016],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0618,  0.0171,  0.0141,  ...,  0.0079,  0.0029, -0.0048],
        [-0.0159, -0.0003, -0.0264,  ..., -0.0241,  0.0002, -0.0005],
        [ 0.0522, -0.0008, -0.0232,  ...,  0.0125,  0.0104, -0.0127],
        ...,
        [-0.0018, -0.0297,  0.0073,  ..., -0.0253, -0.0005,  0.0071],
        [ 0.0168, -0.0079, -0.0249,  ..., -0.0015, -0.0193,  0.0205],
        [-0.0085, -0.0253,  0.0023,  ..., -0.0108,  0.0326, -0.0262]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0405,  0.2910, -0.1758, -0.7891,  1.0938, -0.3984, -0.3906, -0.6445,  0.3438, -0.2852,  1.1328, -0.1250, -0.9531,  0.3164,  0.5000, -0.5625, -0.0464, -0.5469, -0.0508, -0.2148, -0.5234, -0.0608, -0.8086, -0.4512, -0.2246,  0.2656,  0.8789,  0.2432,  1.0859,  0.0085, -0.1963, -0.7539,
        -0.2266,  0.5664,  1.3359, -0.1855,  1.3516, -0.4102,  1.3203,  1.3047, -0.0481, -0.5195, -0.5352, -0.8125,  0.5391,  0.4824, -0.6641, -0.0649,  0.1060, -0.3477,  1.6797, -0.0352, -0.3770,  1.4766, -0.4023,  0.5195, -0.5664, -0.1357, -0.6797, -0.5273, -0.0947,  0.5898, -0.7812, -0.0635],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.1406,  1.5781,  0.6641,  0.5000, -0.3516,  0.5273,  0.5586, -0.1484, -0.1206, -0.5859,  0.1089,  0.7031,  0.1177,  0.2217],
        [ 0.0000,  0.3027,  0.4375, -0.0747,  0.2793,  0.2988,  0.1670, -0.0903, -0.1436,  0.2207,  0.3496, -0.1846,  0.1152, -0.1387,  0.5391],
        [ 0.0000,  0.4238,  0.7422,  0.1187,  0.0981, -0.2090, -0.6719, -0.0938, -0.9727, -0.1885, -0.6094,  0.4727,  0.3320, -1.0703, -0.1309],
        [ 0.0000,  0.1807,  0.6484,  2.1406,  1.0312, -1.5859,  0.2656, -0.5195, -0.8828, -0.1152, -0.6094, -0.3672,  1.2344, -0.4648, -0.3262],
        [ 0.0000,  0.3301,  0.0996,  1.2578,  1.2656, -0.7812,  0.2715, -1.3047,  0.1484, -0.1167,  0.3945, -0.7695,  0.1592,  0.3418, -0.2617],
        [ 0.0000,  0.1865,  0.4121,  2.4531,  0.2930, -1.1328,  0.2451, -0.5781, -0.2734, -0.2246,  0.0339, -0.0322,  0.6641,  0.1641, -0.4062],
        [ 0.0000,  0.1060,  0.3418, -1.9062, -0.3008, -0.0625,  0.0099,  0.9141,  0.0058,  0.3691, -0.5430, -0.0075,  0.2891,  0.3770,  0.1885],
        [ 0.0000, -0.1582, -0.0109,  1.8203, -0.2158, -1.5312,  0.6328, -0.6367, -0.4824,  0.0996, -0.0031, -0.7266,  0.6211,  0.0297, -0.0579],
        [ 0.0000, -0.6367, -0.4668,  0.9453,  0.6602,  0.0261, -0.2080, -0.5156,  0.3125, -0.1885,  0.0232, -0.3633,  0.3711,  0.7852, -0.6016],
        [ 0.0000, -0.2207,  0.0535,  2.4062,  0.6641, -1.5625,  0.2930, -0.7852, -0.6289, -0.4727, -0.6914, -0.7109,  1.0156, -0.3320, -0.4746],
        [ 0.0000,  0.2422, -0.2002, -0.4004,  0.5000, -0.2656,  0.2559,  0.4316,  0.2363,  0.2002, -0.1177, -0.2559,  0.3516, -0.0096,  0.2207],
        [ 0.0000, -0.4902,  1.0312, -0.6719, -0.2871,  0.2109, -0.2559,  0.7891, -0.2988, -0.4863, -0.7695,  0.4238,  0.2227, -0.3926,  0.2754],
        [ 0.0000, -0.0118,  0.2197,  1.8516,  0.1631, -1.5625,  0.4219, -0.9180, -0.6289,  0.4512, -0.3203, -0.6641,  0.4102, -0.2559, -0.4199],
        [ 0.0000, -0.2949,  0.7070,  1.2422,  0.6016, -0.4180,  0.0299,  0.0540, -0.7227, -0.2422, -0.3984,  0.2275,  0.9688, -0.6523,  0.2227]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4403],
        [0.4470],
        [0.3893],
        [0.3875],
        [0.3640],
        [0.3502],
        [0.0642],
        [0.0748],
        [0.1174],
        [0.0398],
        [0.0880],
        [0.0767],
        [0.0635],
        [0.0920]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.8555, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2217, 0.2969, 0.4824, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.0996, 0.2871, 0.4941, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0267, 0.0020, 0.0571, 0.8906, 0.0247, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.0167, 0.0588, 0.6953, 0.0781, 0.0330, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0557, 0.0106, 0.0698, 0.6602, 0.0723, 0.0154, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.0588, 0.0586, 0.0374, 0.1885, 0.2090, 0.1572, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0640, 0.0068, 0.0491, 0.5781, 0.0264, 0.0100, 0.0762, 0.0957, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0146, 0.0289, 0.0942, 0.1484, 0.1040, 0.1260, 0.0820, 0.2090, 0.1177, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0393, 0.0045, 0.0356, 0.6523, 0.0249, 0.0082, 0.0339, 0.0903, 0.0439, 0.0236, 0.0449, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0557, 0.0388, 0.0552, 0.0376, 0.2100, 0.1133, 0.0747, 0.0718, 0.0898, 0.1187, 0.0806, 0.0542, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.0093, 0.0219, 0.0618, 0.0649, 0.0698, 0.0806, 0.0547, 0.1758, 0.0386, 0.1216, 0.0337, 0.1953, 0.0000, 0.0000],
        [0.0410, 0.0041, 0.0332, 0.4062, 0.0231, 0.0096, 0.0417, 0.0542, 0.0615, 0.0177, 0.0454, 0.0286, 0.1865, 0.0471, 0.0000],
        [0.0474, 0.0106, 0.0623, 0.1309, 0.1108, 0.0393, 0.0479, 0.0928, 0.1079, 0.0437, 0.0369, 0.0347, 0.1455, 0.0713, 0.0182]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0065, -0.0164,  0.0092,  ...,  0.0047, -0.0138,  0.0152],
        [ 0.0033, -0.0165,  0.0149,  ..., -0.0082, -0.0195,  0.0451],
        [-0.0036,  0.0006, -0.0228,  ...,  0.0159, -0.0171, -0.0117],
        ...,
        [ 0.0271,  0.0135, -0.0141,  ..., -0.0045, -0.0308, -0.0134],
        [ 0.0006,  0.0133,  0.0079,  ...,  0.0014, -0.0350, -0.0049],
        [-0.0117,  0.0114, -0.0255,  ...,  0.0043, -0.0221,  0.0282]], device='cuda:0', requires_grad=True)
K: tensor([-0.1118,  0.8594, -0.1406,  0.0664, -1.0078, -0.2910, -0.2910, -0.1924, -0.4902, -0.2715, -0.1748,  0.2354, -0.9453,  0.3320,  0.1660,  0.2520,  0.8555,  0.2080, -1.4297, -0.1357, -0.3730, -0.4199,  0.3770,  1.1484,  0.8398,  1.0781, -0.4141, -0.2715, -0.8047,  0.6797, -0.1602,  2.1875,
        -0.1128, -0.3086,  0.1279,  0.9531,  0.4414,  0.7773,  0.0889,  0.9805,  0.1875,  0.0703,  0.3223, -0.0204, -0.4434,  0.0320,  0.3770,  0.3457,  0.1396, -0.7148,  0.5469, -1.7891,  0.7969,  0.4414,  0.5312, -0.0981, -0.0737,  0.3086, -0.0723,  0.2969, -0.0376,  0.5547, -0.2021, -0.6445],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0618,  0.0171,  0.0141,  ...,  0.0079,  0.0029, -0.0048],
        [-0.0159, -0.0003, -0.0264,  ..., -0.0241,  0.0002, -0.0005],
        [ 0.0522, -0.0008, -0.0232,  ...,  0.0125,  0.0104, -0.0127],
        ...,
        [-0.0018, -0.0297,  0.0073,  ..., -0.0253, -0.0005,  0.0071],
        [ 0.0168, -0.0079, -0.0249,  ..., -0.0015, -0.0193,  0.0205],
        [-0.0085, -0.0253,  0.0023,  ..., -0.0108,  0.0326, -0.0262]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1855,  0.5664,  0.7461, -0.8945,  0.2451,  0.7656,  0.3164, -0.3457,  0.3047, -0.0854, -0.5898,  1.6016,  0.4121,  0.5938, -0.2441, -0.7305, -0.2314,  0.3828,  0.1523,  0.2871,  0.0197,  0.1943, -0.0967, -1.6953, -0.1348, -0.3789,  0.5352, -0.3750,  1.0859,  0.8281, -0.6562, -1.8047,
         0.2090, -0.0850, -0.1641, -0.3555,  1.3984, -0.1494,  0.2598,  0.3359, -0.7148,  0.2832,  0.0566,  0.1260,  0.8984,  0.5195, -1.3984, -0.2812,  0.3867,  0.4160,  0.9609, -0.5664, -1.1250,  1.2578, -0.1553, -0.3340, -0.8438, -0.1797, -0.9922, -1.7344,  0.2832,  0.9570, -0.2305,  0.9805],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.7891,  2.1094, -0.1865,  2.2969,  1.2969,  0.9805,  0.6758,  1.0391,  0.9062, -0.4512,  0.4746, -0.1099,  0.4785,  0.6719],
        [ 0.0000,  0.2930,  0.7773, -0.5000,  1.7422,  0.9883,  0.5859,  0.2295,  1.0469,  0.7891,  0.0381, -0.3594, -0.0405,  0.6758, -0.0081],
        [ 0.0000, -0.1650,  0.8945,  1.4375,  0.8203, -0.0066,  0.2344,  0.6445,  0.6797,  0.2168,  0.1074,  0.0825,  0.5352,  0.3672, -0.2891],
        [ 0.0000, -2.5625,  0.7617,  3.5000, -0.0820, -2.3750,  0.1357,  1.0000,  0.5234, -0.8438, -0.2910, -0.5547,  2.2188,  0.0510, -1.6562],
        [ 0.0000, -1.9453, -0.6953,  1.7812, -0.4121, -1.2734,  0.2891,  0.2773,  0.1934, -0.7266,  0.3164, -0.4785,  1.3984,  0.2451, -1.0000],
        [ 0.0000, -1.6641,  0.2314,  2.4844,  0.2656, -1.2812,  0.7188,  0.4023,  0.8398, -0.5742,  0.5273, -0.1836,  1.5859,  0.5703, -0.8164],
        [ 0.0000, -0.8789, -0.8789, -1.3281,  0.2891,  0.3926,  0.1055,  0.0564,  0.7969, -0.0128,  0.2578, -0.5312,  0.4961,  0.6875, -0.3691],
        [ 0.0000, -2.2344, -0.2637,  2.2031, -0.8867, -1.8594,  0.1748,  0.4004,  0.3633, -1.0000,  0.0801, -0.3848,  1.6562,  0.1177, -1.1875],
        [ 0.0000, -1.6328, -0.9453,  0.2373,  0.6914,  0.3359,  0.5273,  0.0977,  1.0312,  0.4609,  0.8203, -0.6367,  0.9609,  0.9375, -0.4668],
        [ 0.0000, -2.1719, -0.0991,  2.8125, -0.4551, -1.5625, -0.1494,  0.8320,  0.1113, -0.5078,  0.1348, -0.1494,  1.5312, -0.1069, -1.1016],
        [ 0.0000, -0.3613, -0.0096, -0.3965,  1.3281,  0.7070,  0.2910,  0.2539,  0.4805,  0.7539,  0.3672, -0.0289,  0.0596,  0.4844,  0.1147],
        [ 0.0000, -2.0469, -1.1953, -0.1611, -0.1089, -0.0398,  0.1030, -0.2812,  0.8867, -0.6289,  0.5156, -0.7656,  0.9883,  0.7734, -0.6758],
        [ 0.0000, -2.3125, -0.2109,  2.2969, -0.5781, -1.4531,  0.0182,  0.2754,  0.4023, -0.8438,  0.0986, -0.3633,  1.5156,  0.1377, -1.1641],
        [ 0.0000, -1.5078,  0.2695,  1.0156,  0.8477, -0.1865,  0.0060,  0.6680,  0.8203, -0.0854, -0.2520, -0.3125,  1.1172,  0.4082, -0.9570]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1103],
        [0.3843],
        [0.4222],
        [0.3872],
        [0.4241],
        [0.2123],
        [0.3924],
        [0.3380],
        [0.3729],
        [0.2939],
        [0.0856],
        [0.3461],
        [0.3191],
        [0.3416]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.9102, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.4258, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.1167, 0.1738, 0.4922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1235, 0.0172, 0.0752, 0.6367, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.0471, 0.0737, 0.3789, 0.1211, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.0398, 0.0693, 0.3340, 0.2422, 0.0713, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.0659, 0.0444, 0.0542, 0.2305, 0.2207, 0.1689, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.0223, 0.0537, 0.3730, 0.0620, 0.0486, 0.0913, 0.1270, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0593, 0.0361, 0.0222, 0.0535, 0.1797, 0.1494, 0.1030, 0.0771, 0.1475, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0610, 0.0195, 0.0420, 0.3594, 0.0786, 0.0371, 0.0552, 0.0918, 0.0830, 0.0623, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0374, 0.0466, 0.0315, 0.0364, 0.2002, 0.1455, 0.0732, 0.0344, 0.0986, 0.1182, 0.1309, 0.0466, 0.0000, 0.0000, 0.0000],
        [0.0505, 0.0154, 0.0129, 0.0474, 0.0864, 0.0869, 0.0796, 0.0457, 0.1514, 0.0571, 0.2188, 0.0342, 0.1133, 0.0000, 0.0000],
        [0.0557, 0.0132, 0.0327, 0.2031, 0.0425, 0.0354, 0.0469, 0.0703, 0.0796, 0.0400, 0.0908, 0.0542, 0.1533, 0.0835, 0.0000],
        [0.0393, 0.0159, 0.0292, 0.0708, 0.1709, 0.0815, 0.0493, 0.0430, 0.1221, 0.0593, 0.0796, 0.0270, 0.0762, 0.1089, 0.0269]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0065, -0.0164,  0.0092,  ...,  0.0047, -0.0138,  0.0152],
        [ 0.0033, -0.0165,  0.0149,  ..., -0.0082, -0.0195,  0.0451],
        [-0.0036,  0.0006, -0.0228,  ...,  0.0159, -0.0171, -0.0117],
        ...,
        [ 0.0271,  0.0135, -0.0141,  ..., -0.0045, -0.0308, -0.0134],
        [ 0.0006,  0.0133,  0.0079,  ...,  0.0014, -0.0350, -0.0049],
        [-0.0117,  0.0114, -0.0255,  ...,  0.0043, -0.0221,  0.0282]], device='cuda:0', requires_grad=True)
K: tensor([-0.0898,  1.1250, -0.3203, -0.0928, -0.8672, -0.4258,  0.1260, -0.7383, -0.4883, -0.0510,  0.4355,  0.4062, -1.1484,  0.2363,  0.6172,  0.2275,  0.5117,  0.2393, -1.4844,  0.3145, -0.4492, -1.0156,  0.4668,  1.3594,  0.7773,  1.3828, -0.3516, -0.2559, -0.7461,  0.9336, -0.1650,  2.0469,
        -0.2031, -0.1377,  0.0933,  1.1094,  0.4043,  1.0078, -0.6016,  0.8750, -0.0508,  0.0143, -0.0427, -0.4355, -0.5547, -0.1387,  0.7969,  0.3242,  0.1455, -0.9492,  0.6094, -1.4141,  0.8711,  0.0654,  0.8945, -0.1143,  0.0147,  0.8008,  0.0608,  0.2334,  0.0571,  0.2324, -0.0156, -0.5430],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0618,  0.0171,  0.0141,  ...,  0.0079,  0.0029, -0.0048],
        [-0.0159, -0.0003, -0.0264,  ..., -0.0241,  0.0002, -0.0005],
        [ 0.0522, -0.0008, -0.0232,  ...,  0.0125,  0.0104, -0.0127],
        ...,
        [-0.0018, -0.0297,  0.0073,  ..., -0.0253, -0.0005,  0.0071],
        [ 0.0168, -0.0079, -0.0249,  ..., -0.0015, -0.0193,  0.0205],
        [-0.0085, -0.0253,  0.0023,  ..., -0.0108,  0.0326, -0.0262]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1064,  0.7930,  1.5234, -0.5547, -0.3945,  0.6797,  0.5703, -0.3418,  0.3066,  0.0205, -0.8047,  0.8750,  0.0771,  0.2793, -0.2539, -0.6523,  0.0061,  0.9023, -0.6055,  0.5273,  0.0220, -0.5547, -0.2412, -1.5781, -0.1846, -0.5117,  0.8047, -0.6016,  0.7461,  0.8594, -0.1953, -0.9531,
         0.4082, -0.4844, -0.2832,  0.0459,  0.7422,  0.3301, -0.0483,  0.0383, -0.3418,  0.5312,  0.3457, -0.1050,  0.4043, -0.0075, -0.8906, -0.5352,  0.2412,  0.3516,  1.3438, -0.6328, -1.0703,  1.2422,  0.1226, -0.2812, -0.7188,  0.0776, -1.1797, -1.3594,  0.3262,  0.7930, -0.1348,  1.0938],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.3281,  1.4922, -0.1709,  2.7344,  1.7734,  1.1250,  0.2715,  0.8750,  1.7969,  0.5391,  0.9414, -0.6016,  0.6641,  1.0703],
        [ 0.0000,  0.4395,  0.0913, -0.7695,  1.8984,  1.4297,  0.5195, -0.2539,  0.9414,  0.9180,  0.5820, -0.1748, -0.4961,  0.8008, -0.0250],
        [ 0.0000, -0.6172, -0.2188,  0.8242,  1.1016,  0.5117,  0.2070, -0.2988,  0.9219,  0.0698,  0.5977, -0.3027,  0.1406,  0.8594, -0.3516],
        [ 0.0000, -1.9688, -0.4980,  1.6406,  0.1768, -0.9375, -0.1729,  0.3633,  0.4688, -0.3379,  0.0781, -0.5898,  1.5156,  0.3164, -0.8477],
        [ 0.0000, -1.6328, -1.1875,  0.4531, -0.6914, -0.5586, -0.3359,  0.2227,  0.0120, -0.5000,  0.2139, -0.5000,  1.0234,  0.1123, -0.6133],
        [ 0.0000, -0.5195,  0.0347,  1.6094,  1.2891,  0.0593,  0.9688,  0.3281,  1.0547,  0.5703,  1.1016,  0.3047,  1.0625,  0.9336,  0.3262],
        [ 0.0000, -0.4375, -0.8359, -0.6367,  0.8086,  0.7695,  0.4980,  0.0986,  0.9648,  0.4531,  1.1484, -0.1807,  0.4453,  0.9570,  0.1025],
        [ 0.0000, -1.4219, -0.5508,  1.3906, -0.4062, -0.6523, -0.0190,  0.3105,  0.3184, -0.3125,  0.5625,  0.0742,  1.1016,  0.3711, -0.1055],
        [ 0.0000, -0.4961, -0.9805, -0.1055,  1.1016,  0.9219,  0.5508,  0.2617,  0.9102,  1.0625,  1.3594, -0.2168,  0.7578,  0.8828, -0.0103],
        [ 0.0000, -1.1406, -0.3770,  1.7734,  0.2490, -0.4980, -0.1001,  0.4043,  0.3047,  0.0175,  0.5898, -0.1914,  1.1406,  0.3359, -0.3203],
        [ 0.0000,  0.2227, -0.1699, -0.0286,  1.6797,  1.3594,  0.6719, -0.0840,  0.9727,  1.1484,  1.2578,  0.2217, -0.1328,  0.9453,  0.3555],
        [ 0.0000, -1.1875, -1.3672, -0.0645,  0.5352,  0.5430,  0.4531, -0.1025,  1.1016,  0.1216,  1.4609, -0.3887,  0.8086,  1.1719, -0.0571],
        [ 0.0000, -1.4453, -0.5312,  1.2969, -0.2695, -0.4531, -0.1689,  0.2324,  0.3594, -0.3320,  0.4883, -0.0278,  1.0078,  0.4043, -0.2080],
        [ 0.0000, -0.9102, -0.2988,  0.5859,  1.4688,  0.7305,  0.2256,  0.0889,  1.1328,  0.4102,  0.7031, -0.3789,  0.6602,  1.0156, -0.3848]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1067],
        [0.3062],
        [0.3226],
        [0.3551],
        [0.3643],
        [0.0656],
        [0.3334],
        [0.1017],
        [0.2250],
        [0.1090],
        [0.0722],
        [0.2685],
        [0.1382],
        [0.2351]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4688, 0.5312, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1279, 0.6875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0444, 0.0334, 0.1670, 0.7539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.1196, 0.1709, 0.5781, 0.0522, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2158, 0.2168, 0.2617, 0.2490, 0.0240, 0.0332, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.0659, 0.1201, 0.6094, 0.0532, 0.0120, 0.0070, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0801, 0.1748, 0.5547, 0.0162, 0.0076, 0.0039, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0981, 0.1299, 0.2139, 0.3887, 0.0142, 0.0077, 0.0065, 0.1123, 0.0273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.0923, 0.1543, 0.4551, 0.0236, 0.0123, 0.0061, 0.0356, 0.0469, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0762, 0.0903, 0.3789, 0.0354, 0.0086, 0.0073, 0.1211, 0.0962, 0.0942, 0.0189, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0259, 0.0186, 0.0801, 0.1914, 0.0042, 0.0030, 0.0015, 0.0123, 0.0114, 0.0066, 0.0028, 0.6406, 0.0000, 0.0000, 0.0000],
        [0.0216, 0.0228, 0.0439, 0.1396, 0.0044, 0.0019, 0.0012, 0.0237, 0.0098, 0.0198, 0.0029, 0.6953, 0.0132, 0.0000, 0.0000],
        [0.0278, 0.0400, 0.0688, 0.1187, 0.0040, 0.0023, 0.0020, 0.0298, 0.0071, 0.0282, 0.0023, 0.6445, 0.0176, 0.0079, 0.0000],
        [0.0297, 0.0148, 0.0510, 0.2578, 0.0128, 0.0036, 0.0022, 0.0138, 0.0388, 0.0074, 0.0080, 0.4902, 0.0132, 0.0417, 0.0164]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0065, -0.0164,  0.0092,  ...,  0.0047, -0.0138,  0.0152],
        [ 0.0033, -0.0165,  0.0149,  ..., -0.0082, -0.0195,  0.0451],
        [-0.0036,  0.0006, -0.0228,  ...,  0.0159, -0.0171, -0.0117],
        ...,
        [ 0.0271,  0.0135, -0.0141,  ..., -0.0045, -0.0308, -0.0134],
        [ 0.0006,  0.0133,  0.0079,  ...,  0.0014, -0.0350, -0.0049],
        [-0.0117,  0.0114, -0.0255,  ...,  0.0043, -0.0221,  0.0282]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5156,  0.0129,  0.4863, -0.2637, -1.4453, -0.6172,  0.8945, -0.4805, -0.4102, -0.3027,  0.7617,  0.1299, -0.1670,  0.8867,  0.2637,  0.1611, -0.1021,  1.0000, -1.3828,  0.3125,  0.1226, -0.7891, -0.3281,  1.0312, -0.6914,  0.6914,  0.1445,  0.4590, -0.7305,  0.3555, -0.2422,  0.6484,
        -0.2871,  0.7383, -0.1455,  0.2539, -0.3906,  1.5547, -0.4648,  0.8164,  0.2246, -0.2910,  0.5469,  0.3633,  0.1885,  0.2559,  1.7266,  0.5742,  0.0030,  0.2109,  0.2891,  0.3242, -0.7422, -0.6484,  0.5391, -1.3906,  0.0344,  0.0942, -0.0781,  0.1758,  0.3770, -0.1328,  0.4668, -0.8320],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0618,  0.0171,  0.0141,  ...,  0.0079,  0.0029, -0.0048],
        [-0.0159, -0.0003, -0.0264,  ..., -0.0241,  0.0002, -0.0005],
        [ 0.0522, -0.0008, -0.0232,  ...,  0.0125,  0.0104, -0.0127],
        ...,
        [-0.0018, -0.0297,  0.0073,  ..., -0.0253, -0.0005,  0.0071],
        [ 0.0168, -0.0079, -0.0249,  ..., -0.0015, -0.0193,  0.0205],
        [-0.0085, -0.0253,  0.0023,  ..., -0.0108,  0.0326, -0.0262]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0369,  0.8477,  0.9023, -0.1064,  0.3359, -0.3262,  0.7930, -0.8711,  1.5156,  1.2266,  0.3848,  0.8047,  0.9258,  1.1328,  0.3203, -1.0156,  0.2715,  0.6953,  0.5703,  0.7227, -0.1729,  0.2539, -1.2656, -0.6953, -1.8594,  0.1592,  1.9609, -0.2715,  0.1523, -1.1484, -0.2383, -1.7656,
         0.7461, -0.3320,  0.2334, -0.9180,  0.4922, -0.4785,  1.2266,  0.1709,  0.1748, -0.6445, -0.3555, -0.7383,  1.4922,  0.3828, -1.0625, -0.7656,  0.5078, -0.0635,  0.1826, -0.3008, -0.8789,  1.2109, -0.2715,  0.1221,  0.1069, -0.4668, -1.0156, -2.4844,  0.2773,  0.6875,  0.1475,  0.8984],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1216,      1.3438,      2.5156,     -0.6367,     -2.5469,     -2.6562,     -0.4707,     -0.4199,     -0.6992,     -1.8906,      3.1719,     -0.6719,     -0.3281,     -0.3027],
        [     0.0000,     -0.3652,      1.3203,      2.4219,     -1.3359,     -2.3594,     -3.1875,     -1.1172,     -0.6328,     -1.6094,     -2.2344,      3.2344,     -1.3281,     -0.4453,     -0.4551],
        [     0.0000,     -0.2871,      1.3203,      2.8281,     -1.5312,     -2.5312,     -3.1562,     -1.3594,     -0.4375,     -1.4453,     -2.1094,      3.6406,     -1.6172,     -0.2871,     -0.3828],
        [     0.0000,      0.4238,      0.7812,      2.0000,     -0.4023,     -1.6016,     -1.9766,     -0.0630,      0.2432,      0.4805,     -1.2812,      2.8750,     -0.3770,      0.2676,     -0.6445],
        [     0.0000,      0.0016,      0.1885,      0.1416,     -2.2031,     -1.8750,     -2.8125,      0.4668,     -1.7188,     -0.1025,     -2.7812,      2.5312,      0.0427,     -1.5938,     -1.2188],
        [     0.0000,     -0.6953,     -0.0942,      1.5312,     -0.9062,     -2.4062,     -2.9375,     -0.0461,      0.1514,     -0.5195,     -1.6719,      3.0000,     -0.2559,      0.1377,     -1.1484],
        [     0.0000,      0.0107,      0.7891,      1.9453,     -1.5859,     -2.3438,     -3.0000,      0.0515,     -0.7422,     -0.0825,     -2.0938,      3.6094,     -0.5664,     -0.6445,     -0.7617],
        [     0.0000,      0.2832,      0.7812,      1.3750,     -1.9375,     -2.5469,     -2.7188,      0.1338,     -1.2734,     -0.0038,     -2.5156,      3.1406,     -0.3887,     -1.1875,     -0.6953],
        [     0.0000,      0.2412,      0.7539,      1.8359,     -1.1250,     -1.7656,     -2.4688,     -0.7070,     -0.4355,      0.3496,     -1.8594,      3.0156,     -1.2188,     -0.3535,     -0.7461],
        [     0.0000,      0.0454,      0.2158,      1.6562,     -0.7188,     -2.1250,     -2.2969,      0.5117,      0.2812,      0.2617,     -1.3438,      2.9844,      0.3008,      0.2441,     -0.9258],
        [     0.0000,     -0.3281,      1.1328,      2.0000,     -1.8203,     -2.1406,     -2.8281,     -0.7383,     -0.8164,     -1.3594,     -2.2188,      3.2188,     -1.0625,     -0.6406,     -0.3945],
        [     0.0000,      0.0557,      0.7148,      1.8672,     -1.5781,     -2.4375,     -2.9062,      0.0923,     -0.7891,     -0.0874,     -2.0156,      3.4688,     -0.4844,     -0.7070,     -0.8125],
        [     0.0000,      0.3613,      0.9062,      1.4531,     -1.9531,     -2.4844,     -2.6250,      0.0679,     -1.3594,      0.0121,     -2.4844,      3.1406,     -0.4570,     -1.2578,     -0.5898],
        [     0.0000,     -0.6953,      0.5469,      2.1562,     -0.8398,     -2.0938,     -2.6094,     -0.7656,      0.2734,     -1.3906,     -1.3125,      2.8125,     -0.8125,      0.3457,     -0.5938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5515],
        [0.2525],
        [0.0494],
        [0.0834],
        [0.0818],
        [0.0540],
        [0.1920],
        [0.0446],
        [0.2601],
        [0.0345],
        [0.0927],
        [0.0545],
        [0.0267],
        [0.0247]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5312,     0.4688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1348,     0.0659,     0.8008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0276,     0.0140,     0.2119,     0.7461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0593,     0.0708,     0.1992,     0.6406,     0.0299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1592,     0.1240,     0.3164,     0.3750,     0.0101,     0.0137,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1030,     0.0332,     0.1592,     0.6719,     0.0226,     0.0071,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0513,     0.0294,     0.2031,     0.6719,     0.0052,     0.0027,     0.0013,     0.0354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0615,     0.0583,     0.2617,     0.5391,     0.0046,     0.0026,     0.0019,     0.0522,     0.0159,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0664,     0.0530,     0.1865,     0.5195,     0.0129,     0.0085,     0.0037,     0.0254,     0.0466,     0.0781,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0549,     0.0405,     0.1211,     0.4980,     0.0157,     0.0052,     0.0034,     0.0962,     0.0767,     0.0806,     0.0077,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0144,     0.0072,     0.0713,     0.1367,     0.0012,     0.0012,     0.0006,     0.0058,     0.0056,     0.0027,     0.0008,     0.7539,     0.0000,     0.0000,     0.0000],
        [    0.0066,     0.0039,     0.0293,     0.1094,     0.0006,     0.0002,     0.0001,     0.0047,     0.0027,     0.0039,     0.0003,     0.8359,     0.0024,     0.0000,     0.0000],
        [    0.0137,     0.0142,     0.0618,     0.1172,     0.0011,     0.0007,     0.0005,     0.0115,     0.0034,     0.0129,     0.0005,     0.7539,     0.0058,     0.0038,     0.0000],
        [    0.0161,     0.0053,     0.0508,     0.2139,     0.0037,     0.0013,     0.0008,     0.0065,     0.0183,     0.0031,     0.0022,     0.6445,     0.0055,     0.0203,     0.0092]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0065, -0.0164,  0.0092,  ...,  0.0047, -0.0138,  0.0152],
        [ 0.0033, -0.0165,  0.0149,  ..., -0.0082, -0.0195,  0.0451],
        [-0.0036,  0.0006, -0.0228,  ...,  0.0159, -0.0171, -0.0117],
        ...,
        [ 0.0271,  0.0135, -0.0141,  ..., -0.0045, -0.0308, -0.0134],
        [ 0.0006,  0.0133,  0.0079,  ...,  0.0014, -0.0350, -0.0049],
        [-0.0117,  0.0114, -0.0255,  ...,  0.0043, -0.0221,  0.0282]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4590,  0.0496,  0.6055, -0.1050, -1.3359, -0.4707,  0.8516, -0.4062, -0.3477, -0.2754,  0.8086,  0.0376, -0.2246,  1.1172,  0.1787,  0.1348, -0.2715,  0.9336, -1.4844,  0.5273,  0.0767, -0.6094, -0.4629,  0.9141, -0.7461,  0.7500,  0.2988,  0.4766, -0.8281,  0.2471, -0.1216,  0.6250,
        -0.4062,  0.6367, -0.1108,  0.1641, -0.5273,  1.3672, -0.2656,  0.8203,  0.2168, -0.3555,  0.5078,  0.2695,  0.1406,  0.3320,  1.7422,  0.5547,  0.0654,  0.1709,  0.5156,  0.2012, -0.6836, -0.5078,  0.6445, -1.4219,  0.1123,  0.0913, -0.0251,  0.0371,  0.2578, -0.1875,  0.1523, -0.7891],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0618,  0.0171,  0.0141,  ...,  0.0079,  0.0029, -0.0048],
        [-0.0159, -0.0003, -0.0264,  ..., -0.0241,  0.0002, -0.0005],
        [ 0.0522, -0.0008, -0.0232,  ...,  0.0125,  0.0104, -0.0127],
        ...,
        [-0.0018, -0.0297,  0.0073,  ..., -0.0253, -0.0005,  0.0071],
        [ 0.0168, -0.0079, -0.0249,  ..., -0.0015, -0.0193,  0.0205],
        [-0.0085, -0.0253,  0.0023,  ..., -0.0108,  0.0326, -0.0262]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1328,  0.7266,  0.8750,  0.0388,  0.6445, -0.1934,  0.7070, -0.7500,  1.4844,  1.1406,  0.3242,  0.9961,  0.7891,  1.2031,  0.2695, -1.1328,  0.0520,  0.5352,  0.7109,  0.8398, -0.1147,  0.4414, -1.3984, -0.8750, -1.9219,  0.1533,  1.8672, -0.4082,  0.2598, -1.1406, -0.2930, -2.0312,
         0.9219, -0.1445,  0.0991, -1.0469,  0.5039, -0.5977,  1.3438,  0.1699,  0.2314, -0.8359, -0.4238, -0.7617,  1.6250,  0.6094, -1.3672, -0.7266,  0.5273,  0.0172,  0.2793, -0.3574, -0.8672,  1.3828, -0.2695, -0.1060,  0.1235, -0.6484, -0.9258, -2.5938,  0.1768,  0.6133, -0.1348,  0.8359],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1279,  1.6016,  2.4844, -0.7500, -2.3906, -2.5781, -0.3125, -0.1377, -0.7031, -1.9375,  3.4688, -0.4570, -0.0649, -0.2832],
        [ 0.0000, -0.7109,  1.7812,  2.5469, -1.8750, -2.6094, -3.2969, -1.1328, -0.6562, -1.8750, -2.6875,  3.8594, -1.4375, -0.4551, -0.4355],
        [ 0.0000, -0.6758,  2.0312,  3.2969, -2.2344, -3.0469, -3.5312, -1.4141, -0.5547, -1.6172, -2.9219,  4.5938, -1.8203, -0.3906, -0.3398],
        [ 0.0000,  0.1777,  1.2109,  2.3750, -0.6836, -1.5781, -2.2969,  0.0581,  0.6094,  0.7148, -1.6875,  3.4688, -0.2539,  0.6211, -0.6484],
        [ 0.0000, -0.2490,  0.6875,  0.8594, -2.7656, -2.4531, -3.3594,  0.1533, -1.8125, -0.2383, -3.3906,  3.4375, -0.4492, -1.6641, -1.1641],
        [ 0.0000, -1.1328,  0.4316,  1.8750, -1.5156, -2.6719, -3.2188, -0.2021,  0.0476, -0.7188, -2.2344,  3.6562, -0.5312,  0.0771, -1.0625],
        [ 0.0000, -0.5547,  1.3750,  2.5781, -2.2969, -2.9375, -3.6406, -0.3730, -0.7109, -0.5430, -2.8594,  4.5312, -1.0312, -0.5938, -0.8008],
        [ 0.0000, -0.0532,  1.4531,  2.1719, -2.5938, -3.1406, -3.4531, -0.1611, -1.3516, -0.1089, -3.3594,  4.1250, -0.8672, -1.2344, -0.6719],
        [ 0.0000, -0.2256,  1.0312,  2.0625, -1.6406, -2.0625, -2.8750, -0.9609, -0.3516,  0.1621, -2.4062,  3.3906, -1.4375, -0.2812, -0.8672],
        [ 0.0000, -0.3027,  0.7891,  2.2031, -1.2500, -2.3594, -2.7812,  0.5586,  0.3301,  0.3789, -1.9609,  3.8125,  0.2754,  0.3125, -0.8281],
        [ 0.0000, -0.6875,  1.6016,  2.2500, -2.4688, -2.5000, -3.2344, -0.9102, -0.9336, -1.6875, -2.8750,  3.9531, -1.3594, -0.7305, -0.5781],
        [ 0.0000, -0.5117,  1.4922,  2.8125, -2.4688, -3.3594, -3.8906, -0.3457, -0.9023, -0.5273, -3.1094,  4.8438, -1.0078, -0.7969, -0.8242],
        [ 0.0000,  0.0396,  1.5078,  2.1406, -2.5625, -3.0000, -3.2812, -0.1709, -1.3984, -0.0586, -3.2500,  4.0000, -0.8594, -1.2734, -0.5859],
        [ 0.0000, -1.1016,  1.1484,  2.5938, -1.4766, -2.5469, -2.9688, -0.9102,  0.1309, -1.6328, -1.9844,  3.6875, -1.0703,  0.2314, -0.5586]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5434],
        [0.2410],
        [0.0412],
        [0.0757],
        [0.0731],
        [0.0476],
        [0.1679],
        [0.0449],
        [0.2921],
        [0.0388],
        [0.0947],
        [0.0607],
        [0.0320],
        [0.0245]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0923 a:0.1094,:0.0432 the:0.0369.:0.0337,:0.0771 a:0.0952
:0.0439)


------
		( a:0.1094,:0.0432 the:0.0369.:0.0337,:0.0771 a:0.0952
:0.0439-:0.1152)
- The first of the first of the same of the other the other the
@ 1050 train 6.4841 , allloss: 6.8385, dt: 1702.09ms, fracRes: 0.0198, norm(attn): 0.1660, norm(output): 0.2793, norm(x): 0.2585, norm(y): 1.0001, norm:6.9407, tok/sec: 77006.34, flops:31.68, batch-reuse:1
@ 1051 train 6.4413 , allloss: 6.8189, dt: 1269.49ms, fracRes: 0.0174, norm(attn): 0.1768, norm(output): 0.2773, norm(x): 0.2564, norm(y): 1.0001, norm:4.8919, tok/sec: 103247.59, flops:42.47, batch-reuse:1
@ 1052 train 6.4438 , allloss: 6.8197, dt: 1288.56ms, fracRes: 0.0179, norm(attn): 0.1709, norm(output): 0.2812, norm(x): 0.2592, norm(y): 1.0000, norm:8.0201, tok/sec: 101719.61, flops:41.84, batch-reuse:1
@ 1053 train 6.4831 , allloss: 6.8849, dt: 1315.75ms, fracRes: 0.0188, norm(attn): 0.1660, norm(output): 0.2793, norm(x): 0.2568, norm(y): 1.0000, norm:4.7196, tok/sec: 99617.81, flops:40.98, batch-reuse:1
@ 1054 train 6.4458 , allloss: 6.8287, dt: 1320.79ms, fracRes: 0.0193, norm(attn): 0.1689, norm(output): 0.2812, norm(x): 0.2587, norm(y): 1.0000, norm:4.1447, tok/sec: 99237.90, flops:40.82, batch-reuse:1
@ 1055 train 6.4571 , allloss: 6.7945, dt: 1310.83ms, fracRes: 0.0209, norm(attn): 0.1709, norm(output): 0.2812, norm(x): 0.2595, norm(y): 1.0000, norm:7.8429, tok/sec: 99991.71, flops:41.13, batch-reuse:1
@ 1056 train 6.4725 , allloss: 6.8167, dt: 1312.11ms, fracRes: 0.0197, norm(attn): 0.1680, norm(output): 0.2793, norm(x): 0.2562, norm(y): 1.0001, norm:7.4219, tok/sec: 99894.21, flops:41.09, batch-reuse:1
@ 1057 train 6.5057 , allloss: 6.8503, dt: 1309.91ms, fracRes: 0.0214, norm(attn): 0.1709, norm(output): 0.2793, norm(x): 0.2561, norm(y): 1.0001, norm:5.8905, tok/sec: 100061.96, flops:41.16, batch-reuse:1
@ 1058 train 6.5652 , allloss: 6.8944, dt: 1282.67ms, fracRes: 0.0240, norm(attn): 0.1592, norm(output): 0.2852, norm(x): 0.2620, norm(y): 0.9999, norm:13.4318, tok/sec: 102186.60, flops:42.03, batch-reuse:1
@ 1059 train 6.4611 , allloss: 6.7956, dt: 1292.23ms, fracRes: 0.0207, norm(attn): 0.1689, norm(output): 0.2793, norm(x): 0.2586, norm(y): 1.0000, norm:4.4702, tok/sec: 101430.83, flops:41.72, batch-reuse:1
@ 1060 train 6.5022 , allloss: 6.8661, dt: 1296.97ms, fracRes: 0.0259, norm(attn): 0.1797, norm(output): 0.2734, norm(x): 0.2529, norm(y): 1.0002, norm:6.3869, tok/sec: 101060.30, flops:41.57, batch-reuse:1
@ 1061 train 6.5942 , allloss: 6.9626, dt: 1281.79ms, fracRes: 0.0719, norm(attn): 0.1650, norm(output): 0.2793, norm(x): 0.2560, norm(y): 1.0003, norm:11.9498, tok/sec: 102256.79, flops:42.06, batch-reuse:1
@ 1062 train 6.4976 , allloss: 6.8861, dt: 1273.97ms, fracRes: 0.0214, norm(attn): 0.1846, norm(output): 0.2773, norm(x): 0.2526, norm(y): 1.0002, norm:5.8563, tok/sec: 102884.38, flops:42.32, batch-reuse:1
@ 1063 train 6.5854 , allloss: 6.9575, dt: 1279.58ms, fracRes: 0.0173, norm(attn): 0.1885, norm(output): 0.2773, norm(x): 0.2536, norm(y): 1.0001, norm:13.2972, tok/sec: 102433.81, flops:42.14, batch-reuse:1
@ 1064 train 6.5874 , allloss: 6.9485, dt: 1288.61ms, fracRes: 0.0184, norm(attn): 0.1758, norm(output): 0.2793, norm(x): 0.2571, norm(y): 1.0000, norm:9.5304, tok/sec: 101715.86, flops:41.84, batch-reuse:1
@ 1065 train 6.6471 , allloss: 7.0178, dt: 1308.58ms, fracRes: 0.0170, norm(attn): 0.1719, norm(output): 0.2832, norm(x): 0.2629, norm(y): 1.0000, norm:17.9841, tok/sec: 100163.51, flops:41.20, batch-reuse:1
@ 1066 train 6.5946 , allloss: 6.9440, dt: 1289.48ms, fracRes: 0.0161, norm(attn): 0.1768, norm(output): 0.2852, norm(x): 0.2654, norm(y): 1.0000, norm:8.6390, tok/sec: 101647.25, flops:41.81, batch-reuse:1
@ 1067 train 6.6031 , allloss: 6.9343, dt: 1272.08ms, fracRes: 0.0171, norm(attn): 0.1777, norm(output): 0.2832, norm(x): 0.2611, norm(y): 1.0001, norm:8.2652, tok/sec: 103037.67, flops:42.38, batch-reuse:1
@ 1068 train 6.5260 , allloss: 6.8487, dt: 1294.47ms, fracRes: 0.0184, norm(attn): 0.1748, norm(output): 0.2832, norm(x): 0.2600, norm(y): 1.0002, norm:6.0462, tok/sec: 101255.56, flops:41.65, batch-reuse:1
@ 1069 train 6.4697 , allloss: 6.7814, dt: 1268.35ms, fracRes: 0.0192, norm(attn): 0.1709, norm(output): 0.2832, norm(x): 0.2631, norm(y): 1.0002, norm:7.2919, tok/sec: 103340.88, flops:42.51, batch-reuse:1
@ 1070 train 6.5027 , allloss: 6.8117, dt: 1272.92ms, fracRes: 0.0173, norm(attn): 0.1709, norm(output): 0.2852, norm(x): 0.2642, norm(y): 1.0002, norm:5.4323, tok/sec: 102969.42, flops:42.36, batch-reuse:1
@ 1071 train 6.3670 , allloss: 6.6865, dt: 1283.37ms, fracRes: 0.0172, norm(attn): 0.1699, norm(output): 0.2832, norm(x): 0.2599, norm(y): 1.0003, norm:3.2874, tok/sec: 102131.45, flops:42.01, batch-reuse:1
@ 1072 train 6.4835 , allloss: 6.8012, dt: 1286.17ms, fracRes: 0.0172, norm(attn): 0.1641, norm(output): 0.2832, norm(x): 0.2623, norm(y): 1.0003, norm:4.2923, tok/sec: 101908.50, flops:41.92, batch-reuse:1
@ 1073 train 6.4498 , allloss: 6.7524, dt: 1293.47ms, fracRes: 0.0185, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2695, norm(y): 1.0002, norm:6.8774, tok/sec: 101333.50, flops:41.68, batch-reuse:1
@ 1074 train 6.4379 , allloss: 6.7604, dt: 1298.34ms, fracRes: 0.0158, norm(attn): 0.1709, norm(output): 0.2852, norm(x): 0.2651, norm(y): 1.0002, norm:5.5611, tok/sec: 100953.89, flops:41.53, batch-reuse:1
@ 1075 train 6.4466 , allloss: 6.7709, dt: 1301.11ms, fracRes: 0.0176, norm(attn): 0.1641, norm(output): 0.2852, norm(x): 0.2648, norm(y): 1.0002, norm:4.3928, tok/sec: 100738.28, flops:41.44, batch-reuse:1
@ 1076 train 6.5063 , allloss: 6.8223, dt: 1268.84ms, fracRes: 0.0200, norm(attn): 0.1592, norm(output): 0.2910, norm(x): 0.2682, norm(y): 1.0002, norm:8.8952, tok/sec: 103300.59, flops:42.49, batch-reuse:1
@ 1077 train 6.4442 , allloss: 6.7671, dt: 1289.83ms, fracRes: 0.0276, norm(attn): 0.1709, norm(output): 0.2832, norm(x): 0.2630, norm(y): 1.0003, norm:9.1575, tok/sec: 101619.41, flops:41.80, batch-reuse:1
@ 1078 train 6.7137 , allloss: 7.0359, dt: 1284.92ms, fracRes: 0.0286, norm(attn): 0.1719, norm(output): 0.2852, norm(x): 0.2632, norm(y): 1.0003, norm:4.8417, tok/sec: 102007.74, flops:41.96, batch-reuse:1
@ 1079 train 6.4846 , allloss: 6.7717, dt: 1280.92ms, fracRes: 0.0294, norm(attn): 0.1611, norm(output): 0.2910, norm(x): 0.2691, norm(y): 1.0004, norm:12.9691, tok/sec: 102326.83, flops:42.09, batch-reuse:1
@ 1080 train 6.4891 , allloss: 6.7776, dt: 1292.02ms, fracRes: 0.0250, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2695, norm(y): 1.0003, norm:5.6367, tok/sec: 101447.40, flops:41.73, batch-reuse:1
@ 1081 train 6.5083 , allloss: 6.8084, dt: 1318.16ms, fracRes: 0.0216, norm(attn): 0.1572, norm(output): 0.2910, norm(x): 0.2678, norm(y): 1.0003, norm:7.5102, tok/sec: 99435.63, flops:40.90, batch-reuse:1
@ 1082 train 6.6154 , allloss: 6.9172, dt: 1313.11ms, fracRes: 0.0200, norm(attn): 0.1582, norm(output): 0.2852, norm(x): 0.2667, norm(y): 1.0003, norm:4.6770, tok/sec: 99817.71, flops:41.06, batch-reuse:1
@ 1083 train 6.4530 , allloss: 6.7550, dt: 1298.19ms, fracRes: 0.0229, norm(attn): 0.1582, norm(output): 0.2832, norm(x): 0.2637, norm(y): 1.0004, norm:5.2009, tok/sec: 100965.33, flops:41.53, batch-reuse:1
@ 1084 train 6.3735 , allloss: 6.6926, dt: 1303.85ms, fracRes: 0.0237, norm(attn): 0.1660, norm(output): 0.2812, norm(x): 0.2605, norm(y): 1.0005, norm:4.3097, tok/sec: 100526.56, flops:41.35, batch-reuse:1
@ 1085 train 6.5921 , allloss: 6.9170, dt: 1275.75ms, fracRes: 0.0211, norm(attn): 0.1719, norm(output): 0.2852, norm(x): 0.2641, norm(y): 1.0004, norm:4.8942, tok/sec: 102741.52, flops:42.26, batch-reuse:1
@ 1086 train 6.5078 , allloss: 6.8501, dt: 1271.33ms, fracRes: 0.0242, norm(attn): 0.1670, norm(output): 0.2852, norm(x): 0.2662, norm(y): 1.0003, norm:14.6890, tok/sec: 103097.95, flops:42.41, batch-reuse:1
@ 1087 train 6.4073 , allloss: 6.7570, dt: 1261.56ms, fracRes: 0.0265, norm(attn): 0.1631, norm(output): 0.2910, norm(x): 0.2681, norm(y): 1.0003, norm:6.6196, tok/sec: 103896.37, flops:42.74, batch-reuse:1
@ 1088 train 6.5341 , allloss: 6.8604, dt: 1288.36ms, fracRes: 0.0285, norm(attn): 0.1592, norm(output): 0.2930, norm(x): 0.2693, norm(y): 1.0003, norm:8.0715, tok/sec: 101735.89, flops:41.85, batch-reuse:1
@ 1089 train 6.4279 , allloss: 6.7312, dt: 1303.62ms, fracRes: 0.0334, norm(attn): 0.1592, norm(output): 0.2930, norm(x): 0.2698, norm(y): 1.0004, norm:5.5730, tok/sec: 100545.02, flops:41.36, batch-reuse:1
@ 1090 train 6.4349 , allloss: 6.7375, dt: 1291.42ms, fracRes: 0.0415, norm(attn): 0.1631, norm(output): 0.2891, norm(x): 0.2665, norm(y): 1.0004, norm:6.1720, tok/sec: 101494.42, flops:41.75, batch-reuse:1
@ 1091 train 6.4414 , allloss: 6.7591, dt: 1307.82ms, fracRes: 0.0385, norm(attn): 0.1602, norm(output): 0.2930, norm(x): 0.2695, norm(y): 1.0004, norm:5.2203, tok/sec: 100221.55, flops:41.23, batch-reuse:1
@ 1092 train 6.5658 , allloss: 6.8652, dt: 1290.75ms, fracRes: 0.0337, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2710, norm(y): 1.0004, norm:8.1618, tok/sec: 101547.25, flops:41.77, batch-reuse:1
@ 1093 train 6.3901 , allloss: 6.7027, dt: 1287.44ms, fracRes: 0.0341, norm(attn): 0.1660, norm(output): 0.2871, norm(x): 0.2655, norm(y): 1.0005, norm:6.5561, tok/sec: 101808.29, flops:41.88, batch-reuse:1
@ 1094 train 6.3847 , allloss: 6.7040, dt: 1296.07ms, fracRes: 0.0318, norm(attn): 0.1680, norm(output): 0.2852, norm(x): 0.2648, norm(y): 1.0005, norm:4.7017, tok/sec: 101130.26, flops:41.60, batch-reuse:1
@ 1095 train 6.3724 , allloss: 6.6945, dt: 1316.98ms, fracRes: 0.0317, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2697, norm(y): 1.0005, norm:3.6353, tok/sec: 99524.35, flops:40.94, batch-reuse:1
@ 1096 train 6.4264 , allloss: 6.7369, dt: 1288.52ms, fracRes: 0.0329, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2734, norm(y): 1.0004, norm:5.4577, tok/sec: 101722.81, flops:41.84, batch-reuse:1
@ 1097 train 6.3588 , allloss: 6.6796, dt: 1254.05ms, fracRes: 0.0360, norm(attn): 0.1631, norm(output): 0.3008, norm(x): 0.2736, norm(y): 1.0004, norm:4.9534, tok/sec: 104518.94, flops:42.99, batch-reuse:1
@ 1098 train 6.3657 , allloss: 6.6855, dt: 1283.92ms, fracRes: 0.0379, norm(attn): 0.1680, norm(output): 0.2910, norm(x): 0.2680, norm(y): 1.0005, norm:5.4939, tok/sec: 102087.43, flops:41.99, batch-reuse:1
@ 1099 train 6.4218 , allloss: 6.7437, dt: 1273.57ms, fracRes: 0.0408, norm(attn): 0.1660, norm(output): 0.2891, norm(x): 0.2674, norm(y): 1.0005, norm:4.1690, tok/sec: 102917.30, flops:42.34, batch-reuse:1
@ 1100 train 6.4121 , allloss: 6.7346, dt: 1316.22ms, fracRes: 0.0452, norm(attn): 0.1611, norm(output): 0.2930, norm(x): 0.2689, norm(y): 1.0005, norm:4.2135, tok/sec: 99581.97, flops:40.96, batch-reuse:1
@ 1101 train 6.4757 , allloss: 6.7883, dt: 1300.28ms, fracRes: 0.0447, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2700, norm(y): 1.0005, norm:5.2360, tok/sec: 100802.58, flops:41.47, batch-reuse:1
@ 1102 train 6.4149 , allloss: 6.7511, dt: 1256.19ms, fracRes: 0.0426, norm(attn): 0.1611, norm(output): 0.2910, norm(x): 0.2675, norm(y): 1.0005, norm:5.2193, tok/sec: 104340.62, flops:42.92, batch-reuse:1
@ 1103 train 6.4918 , allloss: 6.8126, dt: 1275.39ms, fracRes: 0.0438, norm(attn): 0.1582, norm(output): 0.2930, norm(x): 0.2700, norm(y): 1.0005, norm:6.1211, tok/sec: 102770.20, flops:42.27, batch-reuse:1
@ 1104 train 6.6579 , allloss: 6.9673, dt: 1280.62ms, fracRes: 0.0409, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2728, norm(y): 1.0005, norm:6.3746, tok/sec: 102350.51, flops:42.10, batch-reuse:1
@ 1105 train 6.4332 , allloss: 6.7722, dt: 1282.29ms, fracRes: 0.0397, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2699, norm(y): 1.0005, norm:4.1508, tok/sec: 102217.19, flops:42.05, batch-reuse:1
@ 1106 train 6.3805 , allloss: 6.7206, dt: 1289.22ms, fracRes: 0.0406, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2682, norm(y): 1.0005, norm:4.9324, tok/sec: 101667.40, flops:41.82, batch-reuse:1
@ 1107 train 6.5454 , allloss: 6.8982, dt: 1267.62ms, fracRes: 0.0371, norm(attn): 0.1543, norm(output): 0.2930, norm(x): 0.2720, norm(y): 1.0004, norm:6.3450, tok/sec: 103400.42, flops:42.53, batch-reuse:1
@ 1108 train 6.4079 , allloss: 6.7381, dt: 1287.05ms, fracRes: 0.0402, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2680, norm(y): 1.0004, norm:5.3472, tok/sec: 101838.73, flops:41.89, batch-reuse:1
@ 1109 train 6.4032 , allloss: 6.7183, dt: 1291.85ms, fracRes: 0.0424, norm(attn): 0.1670, norm(output): 0.2832, norm(x): 0.2625, norm(y): 1.0005, norm:5.8245, tok/sec: 101460.48, flops:41.74, batch-reuse:1
@ 1110 train 6.4230 , allloss: 6.7582, dt: 1296.21ms, fracRes: 0.0469, norm(attn): 0.1641, norm(output): 0.2832, norm(x): 0.2622, norm(y): 1.0005, norm:5.6226, tok/sec: 101119.30, flops:41.60, batch-reuse:1
@ 1111 train 6.3792 , allloss: 6.7127, dt: 1270.98ms, fracRes: 0.0423, norm(attn): 0.1572, norm(output): 0.2891, norm(x): 0.2665, norm(y): 1.0005, norm:4.3559, tok/sec: 103126.98, flops:42.42, batch-reuse:1
@ 1112 train 6.5319 , allloss: 6.8737, dt: 1287.96ms, fracRes: 0.0418, norm(attn): 0.1650, norm(output): 0.2832, norm(x): 0.2627, norm(y): 1.0005, norm:3.9924, tok/sec: 101766.98, flops:41.86, batch-reuse:1
@ 1113 train 6.5478 , allloss: 6.8665, dt: 1286.37ms, fracRes: 0.0417, norm(attn): 0.1602, norm(output): 0.2852, norm(x): 0.2643, norm(y): 1.0005, norm:5.6781, tok/sec: 101893.01, flops:41.91, batch-reuse:1
@ 1114 train 6.6041 , allloss: 6.9324, dt: 1267.22ms, fracRes: 0.0431, norm(attn): 0.1592, norm(output): 0.2832, norm(x): 0.2634, norm(y): 1.0005, norm:4.6817, tok/sec: 103433.04, flops:42.55, batch-reuse:1
@ 1115 train 6.5793 , allloss: 6.9065, dt: 1289.09ms, fracRes: 0.0584, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2672, norm(y): 1.0005, norm:8.3419, tok/sec: 101677.77, flops:41.83, batch-reuse:1
@ 1116 train 6.5138 , allloss: 6.8368, dt: 1320.03ms, fracRes: 0.0510, norm(attn): 0.1533, norm(output): 0.2930, norm(x): 0.2674, norm(y): 1.0004, norm:6.7152, tok/sec: 99295.02, flops:40.85, batch-reuse:1
@ 1117 train 6.4997 , allloss: 6.8004, dt: 1291.22ms, fracRes: 0.0545, norm(attn): 0.1514, norm(output): 0.2871, norm(x): 0.2642, norm(y): 1.0004, norm:5.4813, tok/sec: 101510.58, flops:41.76, batch-reuse:1
@ 1118 train 6.5790 , allloss: 6.8765, dt: 1313.81ms, fracRes: 0.0428, norm(attn): 0.1689, norm(output): 0.2832, norm(x): 0.2602, norm(y): 1.0005, norm:5.4522, tok/sec: 99764.45, flops:41.04, batch-reuse:1
@ 1119 train 6.5236 , allloss: 6.8132, dt: 1309.08ms, fracRes: 0.0373, norm(attn): 0.1650, norm(output): 0.2832, norm(x): 0.2627, norm(y): 1.0005, norm:4.1699, tok/sec: 100124.90, flops:41.19, batch-reuse:1
@ 1120 train 6.5448 , allloss: 6.8405, dt: 1272.48ms, fracRes: 0.0353, norm(attn): 0.1660, norm(output): 0.2891, norm(x): 0.2647, norm(y): 1.0006, norm:6.1381, tok/sec: 103005.10, flops:42.37, batch-reuse:1
@ 1121 train 6.5964 , allloss: 6.8994, dt: 1296.11ms, fracRes: 0.0353, norm(attn): 0.1660, norm(output): 0.2871, norm(x): 0.2663, norm(y): 1.0005, norm:4.0248, tok/sec: 101127.04, flops:41.60, batch-reuse:1
@ 1122 train 6.5389 , allloss: 6.8470, dt: 1316.90ms, fracRes: 0.0380, norm(attn): 0.1680, norm(output): 0.2832, norm(x): 0.2622, norm(y): 1.0005, norm:4.0527, tok/sec: 99531.08, flops:40.94, batch-reuse:1
@ 1123 train 6.4795 , allloss: 6.7785, dt: 1299.51ms, fracRes: 0.0432, norm(attn): 0.1621, norm(output): 0.2852, norm(x): 0.2628, norm(y): 1.0004, norm:4.5907, tok/sec: 100862.78, flops:41.49, batch-reuse:1
@ 1124 train 6.5001 , allloss: 6.7907, dt: 1296.84ms, fracRes: 0.0486, norm(attn): 0.1592, norm(output): 0.2930, norm(x): 0.2674, norm(y): 1.0004, norm:4.1924, tok/sec: 101070.30, flops:41.58, batch-reuse:1
@ 1125 train 6.5819 , allloss: 6.8764, dt: 1313.95ms, fracRes: 0.0487, norm(attn): 0.1592, norm(output): 0.2930, norm(x): 0.2680, norm(y): 1.0004, norm:6.1677, tok/sec: 99754.53, flops:41.03, batch-reuse:1
@ 1126 train 6.5120 , allloss: 6.8042, dt: 1293.06ms, fracRes: 0.0494, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2703, norm(y): 1.0003, norm:4.6640, tok/sec: 101365.69, flops:41.70, batch-reuse:1
@ 1127 train 6.4988 , allloss: 6.7965, dt: 1294.86ms, fracRes: 0.0462, norm(attn): 0.1562, norm(output): 0.2949, norm(x): 0.2696, norm(y): 1.0003, norm:3.7365, tok/sec: 101224.87, flops:41.64, batch-reuse:1
@ 1128 train 6.5128 , allloss: 6.8054, dt: 1278.66ms, fracRes: 0.0483, norm(attn): 0.1572, norm(output): 0.2969, norm(x): 0.2723, norm(y): 1.0002, norm:5.3500, tok/sec: 102507.36, flops:42.17, batch-reuse:1
@ 1129 train 6.5222 , allloss: 6.8404, dt: 1278.42ms, fracRes: 0.0463, norm(attn): 0.1611, norm(output): 0.2891, norm(x): 0.2667, norm(y): 1.0004, norm:4.5561, tok/sec: 102526.62, flops:42.17, batch-reuse:1
@ 1130 train 6.4799 , allloss: 6.7942, dt: 1269.62ms, fracRes: 0.0459, norm(attn): 0.1660, norm(output): 0.2910, norm(x): 0.2667, norm(y): 1.0003, norm:5.2794, tok/sec: 103237.56, flops:42.47, batch-reuse:1
@ 1131 train 6.5337 , allloss: 6.8452, dt: 1278.45ms, fracRes: 0.0467, norm(attn): 0.1611, norm(output): 0.2930, norm(x): 0.2693, norm(y): 1.0003, norm:4.2773, tok/sec: 102524.03, flops:42.17, batch-reuse:1
@ 1132 train 6.5316 , allloss: 6.8464, dt: 1317.06ms, fracRes: 0.0476, norm(attn): 0.1602, norm(output): 0.2930, norm(x): 0.2693, norm(y): 1.0003, norm:2.9829, tok/sec: 99518.72, flops:40.94, batch-reuse:1
@ 1133 train 6.5535 , allloss: 6.8579, dt: 1318.15ms, fracRes: 0.0458, norm(attn): 0.1631, norm(output): 0.2949, norm(x): 0.2694, norm(y): 1.0003, norm:4.0696, tok/sec: 99436.40, flops:40.90, batch-reuse:1
@ 1134 train 6.4940 , allloss: 6.8075, dt: 1284.61ms, fracRes: 0.0456, norm(attn): 0.1602, norm(output): 0.3008, norm(x): 0.2731, norm(y): 1.0003, norm:4.6572, tok/sec: 102032.82, flops:41.97, batch-reuse:1
@ 1135 train 6.4779 , allloss: 6.8000, dt: 1289.05ms, fracRes: 0.0446, norm(attn): 0.1621, norm(output): 0.2930, norm(x): 0.2702, norm(y): 1.0003, norm:4.0883, tok/sec: 101681.41, flops:41.83, batch-reuse:1
@ 1136 train 6.5513 , allloss: 6.8564, dt: 1314.09ms, fracRes: 0.0466, norm(attn): 0.1582, norm(output): 0.2949, norm(x): 0.2719, norm(y): 1.0002, norm:5.8918, tok/sec: 99743.40, flops:41.03, batch-reuse:1
@ 1137 train 6.5084 , allloss: 6.8297, dt: 1283.83ms, fracRes: 0.0426, norm(attn): 0.1689, norm(output): 0.2871, norm(x): 0.2659, norm(y): 1.0003, norm:4.4652, tok/sec: 102094.71, flops:42.00, batch-reuse:1
@ 1138 train 6.6229 , allloss: 6.9451, dt: 1314.97ms, fracRes: 0.0395, norm(attn): 0.1650, norm(output): 0.2930, norm(x): 0.2693, norm(y): 1.0003, norm:2.5883, tok/sec: 99676.60, flops:41.00, batch-reuse:1
@ 1139 train 6.5705 , allloss: 6.8730, dt: 1303.20ms, fracRes: 0.0391, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2764, norm(y): 1.0002, norm:11.0350, tok/sec: 100576.95, flops:41.37, batch-reuse:1
@ 1140 train 6.5692 , allloss: 6.8802, dt: 1314.36ms, fracRes: 0.0349, norm(attn): 0.1680, norm(output): 0.2969, norm(x): 0.2702, norm(y): 1.0003, norm:5.6315, tok/sec: 99722.72, flops:41.02, batch-reuse:1
@ 1141 train 6.4590 , allloss: 6.7857, dt: 1283.23ms, fracRes: 0.0517, norm(attn): 0.1797, norm(output): 0.2832, norm(x): 0.2610, norm(y): 1.0005, norm:4.2228, tok/sec: 102142.30, flops:42.02, batch-reuse:1
@ 1142 train 6.4754 , allloss: 6.8147, dt: 1317.72ms, fracRes: 0.0401, norm(attn): 0.1875, norm(output): 0.2812, norm(x): 0.2598, norm(y): 1.0005, norm:4.2839, tok/sec: 99469.11, flops:40.92, batch-reuse:1
@ 1143 train 6.5376 , allloss: 6.8672, dt: 1309.78ms, fracRes: 0.0553, norm(attn): 0.1807, norm(output): 0.2852, norm(x): 0.2644, norm(y): 1.0004, norm:7.2015, tok/sec: 100071.52, flops:41.16, batch-reuse:1
@ 1144 train 6.5184 , allloss: 6.8360, dt: 1247.00ms, fracRes: 0.0352, norm(attn): 0.1826, norm(output): 0.2852, norm(x): 0.2625, norm(y): 1.0004, norm:5.8032, tok/sec: 105109.58, flops:43.24, batch-reuse:1
@ 1145 train 6.5850 , allloss: 6.9082, dt: 1291.63ms, fracRes: 0.0365, norm(attn): 0.1807, norm(output): 0.2871, norm(x): 0.2646, norm(y): 1.0004, norm:5.5254, tok/sec: 101477.81, flops:41.74, batch-reuse:1
@ 1146 train 6.5607 , allloss: 6.8860, dt: 1319.79ms, fracRes: 0.0391, norm(attn): 0.1787, norm(output): 0.2930, norm(x): 0.2682, norm(y): 1.0004, norm:5.1102, tok/sec: 99312.72, flops:40.85, batch-reuse:1
@ 1147 train 6.5179 , allloss: 6.8405, dt: 1309.59ms, fracRes: 0.0398, norm(attn): 0.1777, norm(output): 0.2891, norm(x): 0.2653, norm(y): 1.0004, norm:4.4028, tok/sec: 100086.64, flops:41.17, batch-reuse:1
@ 1148 train 6.4583 , allloss: 6.7686, dt: 1289.95ms, fracRes: 0.0421, norm(attn): 0.1826, norm(output): 0.2910, norm(x): 0.2658, norm(y): 1.0003, norm:4.6857, tok/sec: 101610.45, flops:41.80, batch-reuse:1
@ 1149 train 6.5051 , allloss: 6.8153, dt: 1270.32ms, fracRes: 0.0404, norm(attn): 0.1797, norm(output): 0.2930, norm(x): 0.2685, norm(y): 1.0004, norm:7.5830, tok/sec: 103180.48, flops:42.44, batch-reuse:1
@ 1150 train 6.4854 , allloss: 6.7932, dt: 1270.69ms, fracRes: 0.0374, norm(attn): 0.1748, norm(output): 0.2930, norm(x): 0.2691, norm(y): 1.0004, norm:3.8937, tok/sec: 103150.45, flops:42.43, batch-reuse:1
@ 1151 train 6.5612 , allloss: 6.8731, dt: 1281.28ms, fracRes: 0.0358, norm(attn): 0.1768, norm(output): 0.2949, norm(x): 0.2712, norm(y): 1.0003, norm:4.0871, tok/sec: 102297.79, flops:42.08, batch-reuse:1
@ 1152 train 6.4686 , allloss: 6.7800, dt: 1266.10ms, fracRes: 0.0372, norm(attn): 0.1729, norm(output): 0.3008, norm(x): 0.2734, norm(y): 1.0002, norm:3.2382, tok/sec: 103523.98, flops:42.58, batch-reuse:1
@ 1153 train 6.5162 , allloss: 6.8273, dt: 1264.58ms, fracRes: 0.0381, norm(attn): 0.1670, norm(output): 0.3047, norm(x): 0.2778, norm(y): 1.0002, norm:6.2711, tok/sec: 103648.90, flops:42.64, batch-reuse:1
@ 1154 train 6.4972 , allloss: 6.8139, dt: 1280.48ms, fracRes: 0.0355, norm(attn): 0.1680, norm(output): 0.3008, norm(x): 0.2751, norm(y): 1.0002, norm:6.0710, tok/sec: 102361.68, flops:42.11, batch-reuse:1
@ 1155 train 6.3979 , allloss: 6.7171, dt: 1285.56ms, fracRes: 0.0368, norm(attn): 0.1709, norm(output): 0.3008, norm(x): 0.2753, norm(y): 1.0002, norm:4.6820, tok/sec: 101957.28, flops:41.94, batch-reuse:1
@ 1156 train 6.5288 , allloss: 6.8410, dt: 1261.32ms, fracRes: 0.0418, norm(attn): 0.1641, norm(output): 0.3047, norm(x): 0.2787, norm(y): 1.0001, norm:3.6145, tok/sec: 103916.70, flops:42.75, batch-reuse:1
@ 1157 train 6.4607 , allloss: 6.7728, dt: 1277.67ms, fracRes: 0.0397, norm(attn): 0.1641, norm(output): 0.3027, norm(x): 0.2786, norm(y): 1.0001, norm:3.8702, tok/sec: 102586.65, flops:42.20, batch-reuse:1
@ 1158 train 6.4591 , allloss: 6.7910, dt: 1300.37ms, fracRes: 0.0332, norm(attn): 0.1699, norm(output): 0.3008, norm(x): 0.2762, norm(y): 1.0001, norm:3.7439, tok/sec: 100796.06, flops:41.46, batch-reuse:1
@ 1159 train 6.5194 , allloss: 6.8459, dt: 1286.90ms, fracRes: 0.0319, norm(attn): 0.1709, norm(output): 0.3027, norm(x): 0.2766, norm(y): 1.0001, norm:4.7263, tok/sec: 101851.05, flops:41.90, batch-reuse:1
@ 1160 train 6.5022 , allloss: 6.8433, dt: 1290.49ms, fracRes: 0.0297, norm(attn): 0.1680, norm(output): 0.3027, norm(x): 0.2799, norm(y): 1.0000, norm:8.6776, tok/sec: 101567.55, flops:41.78, batch-reuse:1
@ 1161 train 6.3743 , allloss: 6.7108, dt: 1308.91ms, fracRes: 0.0256, norm(attn): 0.1816, norm(output): 0.2949, norm(x): 0.2741, norm(y): 1.0001, norm:6.9500, tok/sec: 100138.40, flops:41.19, batch-reuse:1
@ 1162 train 6.3341 , allloss: 6.6746, dt: 1295.45ms, fracRes: 0.0225, norm(attn): 0.1777, norm(output): 0.2930, norm(x): 0.2724, norm(y): 1.0001, norm:4.4144, tok/sec: 101178.58, flops:41.62, batch-reuse:1
@ 1163 train 6.5017 , allloss: 6.8418, dt: 1312.49ms, fracRes: 0.0224, norm(attn): 0.1719, norm(output): 0.3008, norm(x): 0.2778, norm(y): 1.0000, norm:5.0875, tok/sec: 99865.14, flops:41.08, batch-reuse:1
@ 1164 train 6.4570 , allloss: 6.7856, dt: 1287.10ms, fracRes: 0.0212, norm(attn): 0.1650, norm(output): 0.3066, norm(x): 0.2811, norm(y): 1.0000, norm:10.9478, tok/sec: 101835.18, flops:41.89, batch-reuse:1
@ 1165 train 6.5177 , allloss: 6.8530, dt: 1303.62ms, fracRes: 0.0191, norm(attn): 0.1719, norm(output): 0.3008, norm(x): 0.2796, norm(y): 1.0001, norm:3.8161, tok/sec: 100544.39, flops:41.36, batch-reuse:1
@ 1166 train 6.4702 , allloss: 6.8125, dt: 1304.54ms, fracRes: 0.0205, norm(attn): 0.1729, norm(output): 0.3008, norm(x): 0.2798, norm(y): 1.0000, norm:6.6102, tok/sec: 100474.03, flops:41.33, batch-reuse:1
@ 1167 train 6.4111 , allloss: 6.7497, dt: 1287.71ms, fracRes: 0.0193, norm(attn): 0.1768, norm(output): 0.3008, norm(x): 0.2782, norm(y): 1.0001, norm:6.0960, tok/sec: 101787.01, flops:41.87, batch-reuse:1
@ 1168 train 6.3630 , allloss: 6.6955, dt: 1270.05ms, fracRes: 0.0207, norm(attn): 0.1719, norm(output): 0.3066, norm(x): 0.2825, norm(y): 1.0000, norm:6.2910, tok/sec: 103202.02, flops:42.45, batch-reuse:1
@ 1169 train 6.4759 , allloss: 6.8232, dt: 1270.64ms, fracRes: 0.0234, norm(attn): 0.1855, norm(output): 0.3008, norm(x): 0.2778, norm(y): 1.0001, norm:5.1833, tok/sec: 103154.34, flops:42.43, batch-reuse:1
@ 1170 train 6.3954 , allloss: 6.7454, dt: 1258.51ms, fracRes: 0.0168, norm(attn): 0.1846, norm(output): 0.2969, norm(x): 0.2761, norm(y): 1.0002, norm:4.9787, tok/sec: 104148.71, flops:42.84, batch-reuse:1
@ 1171 train 6.3706 , allloss: 6.7135, dt: 1278.01ms, fracRes: 0.0227, norm(attn): 0.1699, norm(output): 0.3047, norm(x): 0.2837, norm(y): 1.0001, norm:6.5801, tok/sec: 102559.55, flops:42.19, batch-reuse:1
@ 1172 train 6.4941 , allloss: 6.8419, dt: 1286.73ms, fracRes: 0.0173, norm(attn): 0.1719, norm(output): 0.3027, norm(x): 0.2825, norm(y): 1.0001, norm:4.0706, tok/sec: 101864.03, flops:41.90, batch-reuse:1
@ 1173 train 6.4490 , allloss: 6.7971, dt: 1308.03ms, fracRes: 0.0122, norm(attn): 0.1748, norm(output): 0.3008, norm(x): 0.2788, norm(y): 1.0001, norm:8.4982, tok/sec: 100205.55, flops:41.22, batch-reuse:1
@ 1174 train 6.3629 , allloss: 6.7236, dt: 1315.44ms, fracRes: 0.0138, norm(attn): 0.1738, norm(output): 0.2988, norm(x): 0.2780, norm(y): 1.0002, norm:4.5774, tok/sec: 99641.32, flops:40.99, batch-reuse:1
@ 1175 train 6.4923 , allloss: 6.8477, dt: 1310.72ms, fracRes: 0.0186, norm(attn): 0.1699, norm(output): 0.3086, norm(x): 0.2834, norm(y): 1.0002, norm:6.6369, tok/sec: 100000.20, flops:41.14, batch-reuse:1
@ 1176 train 6.5351 , allloss: 6.8795, dt: 1318.12ms, fracRes: 0.0144, norm(attn): 0.1709, norm(output): 0.3047, norm(x): 0.2812, norm(y): 1.0003, norm:6.5317, tok/sec: 99438.79, flops:40.90, batch-reuse:1
@ 1177 train 6.5292 , allloss: 6.8851, dt: 1314.24ms, fracRes: 0.0115, norm(attn): 0.1709, norm(output): 0.3066, norm(x): 0.2806, norm(y): 1.0003, norm:7.8954, tok/sec: 99731.99, flops:41.03, batch-reuse:1
@ 1178 train 6.5675 , allloss: 6.9176, dt: 1295.95ms, fracRes: 0.0108, norm(attn): 0.1797, norm(output): 0.3008, norm(x): 0.2751, norm(y): 1.0004, norm:3.5933, tok/sec: 101139.41, flops:41.60, batch-reuse:1
@ 1179 train 6.5135 , allloss: 6.8500, dt: 1271.60ms, fracRes: 0.0117, norm(attn): 0.1729, norm(output): 0.3008, norm(x): 0.2767, norm(y): 1.0004, norm:5.2256, tok/sec: 103076.63, flops:42.40, batch-reuse:1
@ 1180 train 6.4913 , allloss: 6.8371, dt: 1279.68ms, fracRes: 0.0125, norm(attn): 0.1738, norm(output): 0.3027, norm(x): 0.2802, norm(y): 1.0004, norm:7.7566, tok/sec: 102425.38, flops:42.13, batch-reuse:1
@ 1181 train 6.4335 , allloss: 6.7705, dt: 1261.45ms, fracRes: 0.0113, norm(attn): 0.1816, norm(output): 0.2949, norm(x): 0.2736, norm(y): 1.0005, norm:5.5142, tok/sec: 103905.43, flops:42.74, batch-reuse:1
@ 1182 train 6.5609 , allloss: 6.8793, dt: 1273.48ms, fracRes: 0.0108, norm(attn): 0.1865, norm(output): 0.2969, norm(x): 0.2732, norm(y): 1.0005, norm:9.6904, tok/sec: 102923.93, flops:42.34, batch-reuse:1
@ 1183 train 6.4548 , allloss: 6.7858, dt: 1260.08ms, fracRes: 0.0109, norm(attn): 0.1904, norm(output): 0.2910, norm(x): 0.2696, norm(y): 1.0006, norm:3.9150, tok/sec: 104018.84, flops:42.79, batch-reuse:1
@ 1184 train 6.4005 , allloss: 6.7242, dt: 1288.19ms, fracRes: 0.0123, norm(attn): 0.1895, norm(output): 0.2910, norm(x): 0.2694, norm(y): 1.0007, norm:5.0809, tok/sec: 101748.71, flops:41.85, batch-reuse:1
@ 1185 train 6.4892 , allloss: 6.8051, dt: 1310.00ms, fracRes: 0.0139, norm(attn): 0.1904, norm(output): 0.2949, norm(x): 0.2737, norm(y): 1.0007, norm:5.6422, tok/sec: 100054.66, flops:41.16, batch-reuse:1
@ 1186 train 6.4745 , allloss: 6.7964, dt: 1299.09ms, fracRes: 0.0118, norm(attn): 0.1934, norm(output): 0.2930, norm(x): 0.2719, norm(y): 1.0006, norm:6.0377, tok/sec: 100895.12, flops:41.50, batch-reuse:1
@ 1187 train 6.4667 , allloss: 6.8035, dt: 1273.30ms, fracRes: 0.0115, norm(attn): 0.1875, norm(output): 0.2930, norm(x): 0.2731, norm(y): 1.0007, norm:3.9707, tok/sec: 102939.00, flops:42.34, batch-reuse:1
@ 1188 train 6.3769 , allloss: 6.6976, dt: 1269.78ms, fracRes: 0.0118, norm(attn): 0.1797, norm(output): 0.2969, norm(x): 0.2757, norm(y): 1.0007, norm:6.6556, tok/sec: 103224.25, flops:42.46, batch-reuse:1
@ 1189 train 6.4200 , allloss: 6.7567, dt: 1285.87ms, fracRes: 0.0120, norm(attn): 0.1904, norm(output): 0.2930, norm(x): 0.2714, norm(y): 1.0007, norm:4.4085, tok/sec: 101932.52, flops:41.93, batch-reuse:1
@ 1190 train 6.5471 , allloss: 6.8943, dt: 1279.74ms, fracRes: 0.0118, norm(attn): 0.1953, norm(output): 0.2930, norm(x): 0.2726, norm(y): 1.0007, norm:5.0185, tok/sec: 102420.45, flops:42.13, batch-reuse:1
@ 1191 train 6.5846 , allloss: 6.9124, dt: 1284.98ms, fracRes: 0.0112, norm(attn): 0.1895, norm(output): 0.2930, norm(x): 0.2727, norm(y): 1.0007, norm:8.0736, tok/sec: 102002.93, flops:41.96, batch-reuse:1
@ 1192 train 6.4351 , allloss: 6.7464, dt: 1286.37ms, fracRes: 0.0103, norm(attn): 0.1895, norm(output): 0.2910, norm(x): 0.2713, norm(y): 1.0007, norm:9.2148, tok/sec: 101893.26, flops:41.91, batch-reuse:1
@ 1193 train 6.4426 , allloss: 6.7636, dt: 1292.43ms, fracRes: 0.0094, norm(attn): 0.1914, norm(output): 0.2930, norm(x): 0.2719, norm(y): 1.0007, norm:4.3392, tok/sec: 101415.15, flops:41.72, batch-reuse:1
@ 1194 train 6.4839 , allloss: 6.8227, dt: 1284.37ms, fracRes: 0.0100, norm(attn): 0.1953, norm(output): 0.2930, norm(x): 0.2747, norm(y): 1.0007, norm:7.7648, tok/sec: 102051.29, flops:41.98, batch-reuse:1
@ 1195 train 6.3987 , allloss: 6.7470, dt: 1316.05ms, fracRes: 0.0110, norm(attn): 0.1953, norm(output): 0.2969, norm(x): 0.2754, norm(y): 1.0008, norm:5.6270, tok/sec: 99594.85, flops:40.97, batch-reuse:1
@ 1196 train 6.4767 , allloss: 6.8259, dt: 1296.40ms, fracRes: 0.0101, norm(attn): 0.1982, norm(output): 0.2949, norm(x): 0.2743, norm(y): 1.0008, norm:4.0313, tok/sec: 101104.65, flops:41.59, batch-reuse:1
@ 1197 train 6.5108 , allloss: 6.8410, dt: 1277.82ms, fracRes: 0.0109, norm(attn): 0.1914, norm(output): 0.3008, norm(x): 0.2779, norm(y): 1.0006, norm:10.8341, tok/sec: 102574.99, flops:42.19, batch-reuse:1
@ 1198 train 6.4489 , allloss: 6.7754, dt: 1278.12ms, fracRes: 0.0101, norm(attn): 0.1885, norm(output): 0.3008, norm(x): 0.2760, norm(y): 1.0007, norm:5.7747, tok/sec: 102550.71, flops:42.18, batch-reuse:1
@ 1199 train 6.4957 , allloss: 6.8374, dt: 1287.43ms, fracRes: 0.0100, norm(attn): 0.1885, norm(output): 0.2930, norm(x): 0.2747, norm(y): 1.0007, norm:7.6374, tok/sec: 101808.97, flops:41.88, batch-reuse:1
@ 1200 train 6.4817 , allloss: 6.8310, dt: 1298.17ms, fracRes: 0.0117, norm(attn): 0.1855, norm(output): 0.3008, norm(x): 0.2788, norm(y): 1.0007, norm:4.8934, tok/sec: 100967.09, flops:41.53, batch-reuse:1
@ 1201 train 6.4783 , allloss: 6.8155, dt: 1294.73ms, fracRes: 0.0105, norm(attn): 0.1816, norm(output): 0.3066, norm(x): 0.2836, norm(y): 1.0006, norm:6.7961, tok/sec: 101234.97, flops:41.64, batch-reuse:1
@ 1202 train 6.5066 , allloss: 6.8268, dt: 1279.18ms, fracRes: 0.0097, norm(attn): 0.1875, norm(output): 0.3008, norm(x): 0.2789, norm(y): 1.0006, norm:4.7836, tok/sec: 102465.71, flops:42.15, batch-reuse:1
@ 1203 train 6.7320 , allloss: 7.0358, dt: 1281.68ms, fracRes: 0.0104, norm(attn): 0.1914, norm(output): 0.3008, norm(x): 0.2754, norm(y): 1.0006, norm:6.8458, tok/sec: 102265.63, flops:42.07, batch-reuse:1
@ 1204 train 6.4569 , allloss: 6.7525, dt: 1297.56ms, fracRes: 0.0106, norm(attn): 0.1885, norm(output): 0.3008, norm(x): 0.2775, norm(y): 1.0007, norm:6.8139, tok/sec: 101014.18, flops:41.55, batch-reuse:1
@ 1205 train 6.3815 , allloss: 6.6775, dt: 1289.50ms, fracRes: 0.0111, norm(attn): 0.1943, norm(output): 0.2988, norm(x): 0.2750, norm(y): 1.0007, norm:4.1704, tok/sec: 101645.92, flops:41.81, batch-reuse:1
@ 1206 train 6.3880 , allloss: 6.6877, dt: 1303.06ms, fracRes: 0.0123, norm(attn): 0.1982, norm(output): 0.2949, norm(x): 0.2728, norm(y): 1.0007, norm:5.2012, tok/sec: 100587.60, flops:41.38, batch-reuse:1
@ 1207 train 6.4309 , allloss: 6.7275, dt: 1268.58ms, fracRes: 0.0145, norm(attn): 0.1973, norm(output): 0.2969, norm(x): 0.2744, norm(y): 1.0007, norm:4.8477, tok/sec: 103322.02, flops:42.50, batch-reuse:1
@ 1208 train 6.3448 , allloss: 6.6395, dt: 1278.81ms, fracRes: 0.0175, norm(attn): 0.1914, norm(output): 0.3008, norm(x): 0.2762, norm(y): 1.0007, norm:4.1456, tok/sec: 102495.61, flops:42.16, batch-reuse:1
@ 1209 train 6.3737 , allloss: 6.6631, dt: 1294.75ms, fracRes: 0.0196, norm(attn): 0.1914, norm(output): 0.3008, norm(x): 0.2770, norm(y): 1.0007, norm:3.5109, tok/sec: 101233.48, flops:41.64, batch-reuse:1
@ 1210 train 6.3830 , allloss: 6.6756, dt: 1299.60ms, fracRes: 0.0212, norm(attn): 0.2002, norm(output): 0.2988, norm(x): 0.2747, norm(y): 1.0007, norm:3.9970, tok/sec: 100855.71, flops:41.49, batch-reuse:1
@ 1211 train 6.4389 , allloss: 6.7299, dt: 1293.36ms, fracRes: 0.0215, norm(attn): 0.2031, norm(output): 0.2949, norm(x): 0.2731, norm(y): 1.0007, norm:3.8522, tok/sec: 101342.35, flops:41.69, batch-reuse:1
@ 1212 train 6.4683 , allloss: 6.7591, dt: 1317.84ms, fracRes: 0.0224, norm(attn): 0.1982, norm(output): 0.3008, norm(x): 0.2744, norm(y): 1.0007, norm:5.5668, tok/sec: 99459.93, flops:40.91, batch-reuse:1
@ 1213 train 6.3752 , allloss: 6.6654, dt: 1300.58ms, fracRes: 0.0234, norm(attn): 0.1924, norm(output): 0.3008, norm(x): 0.2749, norm(y): 1.0007, norm:4.3376, tok/sec: 100779.41, flops:41.46, batch-reuse:1
@ 1214 train 6.3875 , allloss: 6.6824, dt: 1291.00ms, fracRes: 0.0237, norm(attn): 0.1992, norm(output): 0.3008, norm(x): 0.2758, norm(y): 1.0007, norm:4.3161, tok/sec: 101527.71, flops:41.76, batch-reuse:1
@ 1215 train 6.3940 , allloss: 6.6840, dt: 1323.65ms, fracRes: 0.0246, norm(attn): 0.1934, norm(output): 0.2969, norm(x): 0.2744, norm(y): 1.0007, norm:3.6323, tok/sec: 99023.36, flops:40.73, batch-reuse:1
@ 1216 train 6.3922 , allloss: 6.6857, dt: 1309.92ms, fracRes: 0.0254, norm(attn): 0.1924, norm(output): 0.3008, norm(x): 0.2779, norm(y): 1.0007, norm:3.3428, tok/sec: 100061.01, flops:41.16, batch-reuse:1
@ 1217 train 6.4005 , allloss: 6.6879, dt: 1298.84ms, fracRes: 0.0268, norm(attn): 0.1973, norm(output): 0.2949, norm(x): 0.2737, norm(y): 1.0007, norm:6.0545, tok/sec: 100915.03, flops:41.51, batch-reuse:1
@ 1218 train 6.4762 , allloss: 6.7652, dt: 1272.14ms, fracRes: 0.0282, norm(attn): 0.2041, norm(output): 0.2930, norm(x): 0.2702, norm(y): 1.0006, norm:4.9238, tok/sec: 103032.63, flops:42.38, batch-reuse:1
@ 1219 train 6.3356 , allloss: 6.6301, dt: 1278.03ms, fracRes: 0.0297, norm(attn): 0.1963, norm(output): 0.2930, norm(x): 0.2717, norm(y): 1.0006, norm:3.3099, tok/sec: 102557.95, flops:42.19, batch-reuse:1
@ 1220 train 6.4038 , allloss: 6.7069, dt: 1267.95ms, fracRes: 0.0314, norm(attn): 0.1875, norm(output): 0.3008, norm(x): 0.2771, norm(y): 1.0005, norm:6.3279, tok/sec: 103373.31, flops:42.52, batch-reuse:1
@ 1221 train 6.3207 , allloss: 6.6354, dt: 1268.48ms, fracRes: 0.0328, norm(attn): 0.1934, norm(output): 0.2930, norm(x): 0.2703, norm(y): 1.0006, norm:3.6112, tok/sec: 103329.75, flops:42.50, batch-reuse:1
@ 1222 train 6.3630 , allloss: 6.6639, dt: 1275.26ms, fracRes: 0.0381, norm(attn): 0.1934, norm(output): 0.2910, norm(x): 0.2683, norm(y): 1.0006, norm:3.5136, tok/sec: 102780.52, flops:42.28, batch-reuse:1
@ 1223 train 6.3591 , allloss: 6.6522, dt: 1281.87ms, fracRes: 0.0300, norm(attn): 0.1992, norm(output): 0.2930, norm(x): 0.2705, norm(y): 1.0006, norm:2.8649, tok/sec: 102250.28, flops:42.06, batch-reuse:1
@ 1224 train 6.3081 , allloss: 6.6014, dt: 1274.29ms, fracRes: 0.0327, norm(attn): 0.1875, norm(output): 0.2949, norm(x): 0.2723, norm(y): 1.0005, norm:4.0790, tok/sec: 102858.47, flops:42.31, batch-reuse:1
@ 1225 train 6.3694 , allloss: 6.6737, dt: 1263.63ms, fracRes: 0.0324, norm(attn): 0.1787, norm(output): 0.2969, norm(x): 0.2750, norm(y): 1.0005, norm:5.6204, tok/sec: 103726.69, flops:42.67, batch-reuse:1
@ 1226 train 6.4166 , allloss: 6.7038, dt: 1267.57ms, fracRes: 0.0366, norm(attn): 0.1758, norm(output): 0.3008, norm(x): 0.2775, norm(y): 1.0005, norm:4.2373, tok/sec: 103404.44, flops:42.54, batch-reuse:1
@ 1227 train 6.3999 , allloss: 6.6794, dt: 1278.56ms, fracRes: 0.0392, norm(attn): 0.1807, norm(output): 0.3008, norm(x): 0.2764, norm(y): 1.0005, norm:7.3713, tok/sec: 102515.49, flops:42.17, batch-reuse:1
@ 1228 train 6.3508 , allloss: 6.6443, dt: 1289.84ms, fracRes: 0.0365, norm(attn): 0.1797, norm(output): 0.2949, norm(x): 0.2734, norm(y): 1.0005, norm:5.8366, tok/sec: 101619.18, flops:41.80, batch-reuse:1
@ 1229 train 6.3867 , allloss: 6.6581, dt: 1288.35ms, fracRes: 0.0362, norm(attn): 0.1865, norm(output): 0.2891, norm(x): 0.2675, norm(y): 1.0006, norm:5.6817, tok/sec: 101736.15, flops:41.85, batch-reuse:1
@ 1230 train 6.3244 , allloss: 6.6147, dt: 1307.08ms, fracRes: 0.0383, norm(attn): 0.1846, norm(output): 0.2930, norm(x): 0.2695, norm(y): 1.0006, norm:2.8676, tok/sec: 100278.66, flops:41.25, batch-reuse:1
@ 1231 train 6.3647 , allloss: 6.6557, dt: 1314.05ms, fracRes: 0.0367, norm(attn): 0.1807, norm(output): 0.2969, norm(x): 0.2729, norm(y): 1.0005, norm:4.2622, tok/sec: 99746.95, flops:41.03, batch-reuse:1
@ 1232 train 6.3324 , allloss: 6.6212, dt: 1305.49ms, fracRes: 0.0375, norm(attn): 0.1738, norm(output): 0.3027, norm(x): 0.2773, norm(y): 1.0004, norm:5.9812, tok/sec: 100400.56, flops:41.30, batch-reuse:1
@ 1233 train 6.3247 , allloss: 6.6211, dt: 1316.04ms, fracRes: 0.0354, norm(attn): 0.1885, norm(output): 0.2949, norm(x): 0.2716, norm(y): 1.0005, norm:3.1597, tok/sec: 99595.66, flops:40.97, batch-reuse:1
@ 1234 train 6.3496 , allloss: 6.6447, dt: 1317.51ms, fracRes: 0.0363, norm(attn): 0.1875, norm(output): 0.2969, norm(x): 0.2734, norm(y): 1.0005, norm:2.6273, tok/sec: 99484.80, flops:40.92, batch-reuse:1
@ 1235 train 6.3676 , allloss: 6.6530, dt: 1297.46ms, fracRes: 0.0398, norm(attn): 0.1855, norm(output): 0.3008, norm(x): 0.2769, norm(y): 1.0005, norm:3.6982, tok/sec: 101022.06, flops:41.56, batch-reuse:1
@ 1236 train 6.4063 , allloss: 6.7082, dt: 1293.11ms, fracRes: 0.0403, norm(attn): 0.1865, norm(output): 0.3008, norm(x): 0.2746, norm(y): 1.0005, norm:5.5980, tok/sec: 101362.22, flops:41.70, batch-reuse:1
@ 1237 train 6.4161 , allloss: 6.7430, dt: 1303.47ms, fracRes: 0.0445, norm(attn): 0.1846, norm(output): 0.3027, norm(x): 0.2777, norm(y): 1.0004, norm:10.5713, tok/sec: 100556.33, flops:41.36, batch-reuse:1
@ 1238 train 6.3581 , allloss: 6.6645, dt: 1284.33ms, fracRes: 0.0479, norm(attn): 0.1855, norm(output): 0.2969, norm(x): 0.2737, norm(y): 1.0003, norm:5.3781, tok/sec: 102054.64, flops:41.98, batch-reuse:1
@ 1239 train 6.3320 , allloss: 6.6319, dt: 1295.07ms, fracRes: 0.0488, norm(attn): 0.1885, norm(output): 0.3008, norm(x): 0.2733, norm(y): 1.0004, norm:3.8669, tok/sec: 101208.73, flops:41.63, batch-reuse:1
@ 1240 train 6.3506 , allloss: 6.6743, dt: 1267.51ms, fracRes: 0.0497, norm(attn): 0.1797, norm(output): 0.3008, norm(x): 0.2778, norm(y): 1.0004, norm:8.2563, tok/sec: 103409.36, flops:42.54, batch-reuse:1
@ 1241 train 6.3043 , allloss: 6.6124, dt: 1280.44ms, fracRes: 0.0466, norm(attn): 0.1875, norm(output): 0.2969, norm(x): 0.2730, norm(y): 1.0004, norm:5.5289, tok/sec: 102364.98, flops:42.11, batch-reuse:1
@ 1242 train 6.3396 , allloss: 6.6606, dt: 1276.11ms, fracRes: 0.0435, norm(attn): 0.1953, norm(output): 0.2930, norm(x): 0.2699, norm(y): 1.0004, norm:4.0029, tok/sec: 102712.06, flops:42.25, batch-reuse:1
@ 1243 train 6.3945 , allloss: 6.6972, dt: 1276.48ms, fracRes: 0.0458, norm(attn): 0.1914, norm(output): 0.3008, norm(x): 0.2749, norm(y): 1.0005, norm:6.5063, tok/sec: 102682.23, flops:42.24, batch-reuse:1
@ 1244 train 6.3545 , allloss: 6.6589, dt: 1273.73ms, fracRes: 0.0439, norm(attn): 0.1943, norm(output): 0.2949, norm(x): 0.2708, norm(y): 1.0005, norm:3.0002, tok/sec: 102903.99, flops:42.33, batch-reuse:1
@ 1245 train 6.3499 , allloss: 6.6704, dt: 1280.75ms, fracRes: 0.0448, norm(attn): 0.1934, norm(output): 0.2949, norm(x): 0.2716, norm(y): 1.0004, norm:8.3339, tok/sec: 102340.01, flops:42.10, batch-reuse:1
@ 1246 train 6.3566 , allloss: 6.7028, dt: 1269.94ms, fracRes: 0.0453, norm(attn): 0.1875, norm(output): 0.3008, norm(x): 0.2743, norm(y): 1.0005, norm:5.2537, tok/sec: 103211.51, flops:42.46, batch-reuse:1
@ 1247 train 6.2962 , allloss: 6.6180, dt: 1292.41ms, fracRes: 0.0474, norm(attn): 0.1895, norm(output): 0.2969, norm(x): 0.2721, norm(y): 1.0005, norm:4.8103, tok/sec: 101416.91, flops:41.72, batch-reuse:1
@ 1248 train 6.3995 , allloss: 6.7003, dt: 1277.48ms, fracRes: 0.0468, norm(attn): 0.2021, norm(output): 0.2930, norm(x): 0.2685, norm(y): 1.0005, norm:6.0714, tok/sec: 102602.27, flops:42.21, batch-reuse:1
@ 1249 train 6.2623 , allloss: 6.5536, dt: 1285.62ms, fracRes: 0.0444, norm(attn): 0.2021, norm(output): 0.2930, norm(x): 0.2692, norm(y): 1.0005, norm:4.3381, tok/sec: 101951.99, flops:41.94, batch-reuse:1
@ 1250 train 6.3916 , allloss: 6.6977, dt: 1284.55ms, fracRes: 0.0438, norm(attn): 0.2021, norm(output): 0.2969, norm(x): 0.2719, norm(y): 1.0005, norm:3.8753, tok/sec: 102037.33, flops:41.97, batch-reuse:1
@ 1251 train 6.3568 , allloss: 6.6516, dt: 1285.44ms, fracRes: 0.0456, norm(attn): 0.1963, norm(output): 0.3008, norm(x): 0.2759, norm(y): 1.0004, norm:7.9234, tok/sec: 101966.25, flops:41.94, batch-reuse:1
@ 1252 train 6.4315 , allloss: 6.7417, dt: 1273.81ms, fracRes: 0.0433, norm(attn): 0.1914, norm(output): 0.3008, norm(x): 0.2770, norm(y): 1.0005, norm:6.0778, tok/sec: 102897.52, flops:42.33, batch-reuse:1
@ 1253 train 6.3261 , allloss: 6.6555, dt: 1293.97ms, fracRes: 0.0472, norm(attn): 0.1934, norm(output): 0.2969, norm(x): 0.2741, norm(y): 1.0005, norm:7.6681, tok/sec: 101294.79, flops:41.67, batch-reuse:1
@ 1254 train 6.3368 , allloss: 6.6784, dt: 1310.96ms, fracRes: 0.0418, norm(attn): 0.1914, norm(output): 0.3008, norm(x): 0.2763, norm(y): 1.0004, norm:3.7227, tok/sec: 99981.34, flops:41.13, batch-reuse:1
@ 1255 train 6.3691 , allloss: 6.6903, dt: 1283.83ms, fracRes: 0.0415, norm(attn): 0.1914, norm(output): 0.3008, norm(x): 0.2760, norm(y): 1.0004, norm:6.0129, tok/sec: 102094.14, flops:42.00, batch-reuse:1
@ 1256 train 6.3178 , allloss: 6.6576, dt: 1338.25ms, fracRes: 0.0415, norm(attn): 0.1934, norm(output): 0.2949, norm(x): 0.2717, norm(y): 1.0005, norm:4.3511, tok/sec: 97943.16, flops:40.29, batch-reuse:1
@ 1257 train 6.3446 , allloss: 6.6968, dt: 1332.96ms, fracRes: 0.0433, norm(attn): 0.1934, norm(output): 0.3008, norm(x): 0.2742, norm(y): 1.0005, norm:4.0270, tok/sec: 98331.86, flops:40.45, batch-reuse:1
@ 1258 train 6.2995 , allloss: 6.6212, dt: 1302.00ms, fracRes: 0.0487, norm(attn): 0.1953, norm(output): 0.3008, norm(x): 0.2751, norm(y): 1.0005, norm:5.1748, tok/sec: 100670.07, flops:41.41, batch-reuse:1
@ 1259 train 6.3367 , allloss: 6.6431, dt: 1272.78ms, fracRes: 0.0424, norm(attn): 0.2002, norm(output): 0.2930, norm(x): 0.2696, norm(y): 1.0005, norm:4.4405, tok/sec: 102980.53, flops:42.36, batch-reuse:1
@ 1260 train 6.2909 , allloss: 6.6055, dt: 1284.76ms, fracRes: 0.0405, norm(attn): 0.1992, norm(output): 0.2930, norm(x): 0.2710, norm(y): 1.0005, norm:4.7523, tok/sec: 102020.71, flops:41.97, batch-reuse:1
@ 1261 train 6.3179 , allloss: 6.6278, dt: 1298.31ms, fracRes: 0.0429, norm(attn): 0.1924, norm(output): 0.2949, norm(x): 0.2715, norm(y): 1.0005, norm:6.7312, tok/sec: 100955.52, flops:41.53, batch-reuse:1
@ 1262 train 6.3351 , allloss: 6.6489, dt: 1285.46ms, fracRes: 0.0416, norm(attn): 0.2070, norm(output): 0.2871, norm(x): 0.2656, norm(y): 1.0007, norm:4.9079, tok/sec: 101965.19, flops:41.94, batch-reuse:1
@ 1263 train 6.2667 , allloss: 6.5703, dt: 1319.98ms, fracRes: 0.0399, norm(attn): 0.2168, norm(output): 0.2852, norm(x): 0.2647, norm(y): 1.0007, norm:3.1387, tok/sec: 99298.79, flops:40.85, batch-reuse:1
@ 1264 train 6.3909 , allloss: 6.6739, dt: 1311.66ms, fracRes: 0.0421, norm(attn): 0.2217, norm(output): 0.2891, norm(x): 0.2652, norm(y): 1.0007, norm:3.1509, tok/sec: 99928.53, flops:41.11, batch-reuse:1
@ 1265 train 6.2808 , allloss: 6.5746, dt: 1319.01ms, fracRes: 0.0410, norm(attn): 0.2197, norm(output): 0.2832, norm(x): 0.2618, norm(y): 1.0007, norm:3.9046, tok/sec: 99371.25, flops:40.88, batch-reuse:1
@ 1266 train 6.3221 , allloss: 6.6242, dt: 1321.20ms, fracRes: 0.0411, norm(attn): 0.2158, norm(output): 0.2871, norm(x): 0.2649, norm(y): 1.0006, norm:5.7227, tok/sec: 99206.79, flops:40.81, batch-reuse:1
@ 1267 train 6.3375 , allloss: 6.6520, dt: 1305.82ms, fracRes: 0.0438, norm(attn): 0.2129, norm(output): 0.2930, norm(x): 0.2683, norm(y): 1.0005, norm:3.8540, tok/sec: 100374.95, flops:41.29, batch-reuse:1
@ 1268 train 6.3818 , allloss: 6.6769, dt: 1295.16ms, fracRes: 0.0485, norm(attn): 0.2188, norm(output): 0.2832, norm(x): 0.2607, norm(y): 1.0007, norm:4.7717, tok/sec: 101201.09, flops:41.63, batch-reuse:1
@ 1269 train 6.3207 , allloss: 6.6125, dt: 1295.33ms, fracRes: 0.0467, norm(attn): 0.2197, norm(output): 0.2832, norm(x): 0.2612, norm(y): 1.0007, norm:3.1577, tok/sec: 101187.74, flops:41.62, batch-reuse:1
@ 1270 train 6.2758 , allloss: 6.5676, dt: 1294.35ms, fracRes: 0.0402, norm(attn): 0.2256, norm(output): 0.2832, norm(x): 0.2613, norm(y): 1.0007, norm:3.8823, tok/sec: 101264.44, flops:41.66, batch-reuse:1
@ 1271 train 6.2746 , allloss: 6.5647, dt: 1294.06ms, fracRes: 0.0378, norm(attn): 0.2217, norm(output): 0.2832, norm(x): 0.2616, norm(y): 1.0006, norm:4.1370, tok/sec: 101287.76, flops:41.66, batch-reuse:1
@ 1272 train 6.3120 , allloss: 6.6308, dt: 1268.20ms, fracRes: 0.0385, norm(attn): 0.2207, norm(output): 0.2832, norm(x): 0.2616, norm(y): 1.0007, norm:5.0763, tok/sec: 103352.71, flops:42.51, batch-reuse:1
@ 1273 train 6.3497 , allloss: 6.6785, dt: 1279.77ms, fracRes: 0.0403, norm(attn): 0.2285, norm(output): 0.2832, norm(x): 0.2618, norm(y): 1.0008, norm:6.5866, tok/sec: 102418.22, flops:42.13, batch-reuse:1
@ 1274 train 6.3342 , allloss: 6.6413, dt: 1283.48ms, fracRes: 0.0391, norm(attn): 0.2354, norm(output): 0.2812, norm(x): 0.2591, norm(y): 1.0008, norm:5.8494, tok/sec: 102122.59, flops:42.01, batch-reuse:1
@ 1275 train 6.4134 , allloss: 6.7270, dt: 1330.80ms, fracRes: 0.0366, norm(attn): 0.2344, norm(output): 0.2812, norm(x): 0.2565, norm(y): 1.0008, norm:3.2585, tok/sec: 98491.15, flops:40.51, batch-reuse:1
@ 1276 train 6.2396 , allloss: 6.5302, dt: 1287.86ms, fracRes: 0.0381, norm(attn): 0.2314, norm(output): 0.2832, norm(x): 0.2604, norm(y): 1.0007, norm:4.2615, tok/sec: 101774.91, flops:41.87, batch-reuse:1
@ 1277 train 6.2453 , allloss: 6.5165, dt: 1276.85ms, fracRes: 0.0459, norm(attn): 0.2432, norm(output): 0.2793, norm(x): 0.2580, norm(y): 1.0007, norm:6.6382, tok/sec: 102652.60, flops:42.23, batch-reuse:1
@ 1278 train 6.3378 , allloss: 6.6349, dt: 1284.87ms, fracRes: 0.0446, norm(attn): 0.2441, norm(output): 0.2793, norm(x): 0.2561, norm(y): 1.0008, norm:4.3401, tok/sec: 102011.66, flops:41.96, batch-reuse:1
@ 1279 train 6.4154 , allloss: 6.6974, dt: 1291.89ms, fracRes: 0.0489, norm(attn): 0.2412, norm(output): 0.2832, norm(x): 0.2587, norm(y): 1.0009, norm:5.1561, tok/sec: 101457.34, flops:41.73, batch-reuse:1
@ 1280 train 6.2559 , allloss: 6.5196, dt: 1273.74ms, fracRes: 0.0489, norm(attn): 0.2520, norm(output): 0.2734, norm(x): 0.2506, norm(y): 1.0010, norm:4.7187, tok/sec: 102902.93, flops:42.33, batch-reuse:1
@ 1281 train 6.2401 , allloss: 6.5076, dt: 1296.59ms, fracRes: 0.0455, norm(attn): 0.2520, norm(output): 0.2715, norm(x): 0.2502, norm(y): 1.0009, norm:4.2235, tok/sec: 101089.55, flops:41.58, batch-reuse:1
@ 1282 train 6.2727 , allloss: 6.5415, dt: 1268.51ms, fracRes: 0.0412, norm(attn): 0.2539, norm(output): 0.2715, norm(x): 0.2490, norm(y): 1.0009, norm:7.9897, tok/sec: 103327.60, flops:42.50, batch-reuse:1
@ 1283 train 6.2948 , allloss: 6.5755, dt: 1292.58ms, fracRes: 0.0377, norm(attn): 0.2539, norm(output): 0.2734, norm(x): 0.2501, norm(y): 1.0010, norm:4.2756, tok/sec: 101403.44, flops:41.71, batch-reuse:1
@ 1284 train 6.2554 , allloss: 6.5247, dt: 1282.20ms, fracRes: 0.0391, norm(attn): 0.2500, norm(output): 0.2793, norm(x): 0.2551, norm(y): 1.0009, norm:5.1175, tok/sec: 102224.45, flops:42.05, batch-reuse:1
@ 1285 train 6.2004 , allloss: 6.4706, dt: 1287.57ms, fracRes: 0.0378, norm(attn): 0.2500, norm(output): 0.2754, norm(x): 0.2532, norm(y): 1.0010, norm:4.6008, tok/sec: 101797.70, flops:41.87, batch-reuse:1
@ 1286 train 6.3869 , allloss: 6.6781, dt: 1288.55ms, fracRes: 0.0373, norm(attn): 0.2422, norm(output): 0.2832, norm(x): 0.2592, norm(y): 1.0008, norm:4.7563, tok/sec: 101720.41, flops:41.84, batch-reuse:1
@ 1287 train 6.3398 , allloss: 6.6113, dt: 1290.52ms, fracRes: 0.0393, norm(attn): 0.2480, norm(output): 0.2793, norm(x): 0.2549, norm(y): 1.0008, norm:5.3971, tok/sec: 101565.28, flops:41.78, batch-reuse:1
@ 1288 train 6.3105 , allloss: 6.5834, dt: 1287.30ms, fracRes: 0.0404, norm(attn): 0.2520, norm(output): 0.2812, norm(x): 0.2570, norm(y): 1.0009, norm:3.8627, tok/sec: 101819.28, flops:41.88, batch-reuse:1
@ 1289 train 6.2863 , allloss: 6.5683, dt: 1287.62ms, fracRes: 0.0410, norm(attn): 0.2422, norm(output): 0.2832, norm(x): 0.2617, norm(y): 1.0008, norm:11.1304, tok/sec: 101794.30, flops:41.87, batch-reuse:1
@ 1290 train 6.2455 , allloss: 6.5399, dt: 1273.02ms, fracRes: 0.0398, norm(attn): 0.2441, norm(output): 0.2793, norm(x): 0.2570, norm(y): 1.0008, norm:5.1316, tok/sec: 102961.48, flops:42.35, batch-reuse:1
@ 1291 train 6.3092 , allloss: 6.5960, dt: 1316.63ms, fracRes: 0.0376, norm(attn): 0.2480, norm(output): 0.2793, norm(x): 0.2548, norm(y): 1.0008, norm:7.0403, tok/sec: 99551.32, flops:40.95, batch-reuse:1
@ 1292 train 6.3137 , allloss: 6.5876, dt: 1289.81ms, fracRes: 0.0376, norm(attn): 0.2461, norm(output): 0.2793, norm(x): 0.2569, norm(y): 1.0008, norm:5.7216, tok/sec: 101621.25, flops:41.80, batch-reuse:1
@ 1293 train 6.3284 , allloss: 6.6121, dt: 1292.44ms, fracRes: 0.0374, norm(attn): 0.2344, norm(output): 0.2852, norm(x): 0.2638, norm(y): 1.0007, norm:6.9333, tok/sec: 101414.53, flops:41.72, batch-reuse:1
@ 1294 train 6.2247 , allloss: 6.5473, dt: 1281.84ms, fracRes: 0.0373, norm(attn): 0.2363, norm(output): 0.2812, norm(x): 0.2608, norm(y): 1.0007, norm:4.2226, tok/sec: 102253.18, flops:42.06, batch-reuse:1
@ 1295 train 6.3473 , allloss: 6.6779, dt: 1266.26ms, fracRes: 0.0364, norm(attn): 0.2334, norm(output): 0.2832, norm(x): 0.2622, norm(y): 1.0007, norm:3.7228, tok/sec: 103511.19, flops:42.58, batch-reuse:1
@ 1296 train 6.3617 , allloss: 6.6661, dt: 1294.34ms, fracRes: 0.0365, norm(attn): 0.2324, norm(output): 0.2910, norm(x): 0.2673, norm(y): 1.0006, norm:8.6058, tok/sec: 101265.70, flops:41.66, batch-reuse:1
@ 1297 train 6.3885 , allloss: 6.6747, dt: 1274.06ms, fracRes: 0.0380, norm(attn): 0.2324, norm(output): 0.2852, norm(x): 0.2645, norm(y): 1.0006, norm:5.3090, tok/sec: 102877.45, flops:42.32, batch-reuse:1
@ 1298 train 6.4733 , allloss: 6.7663, dt: 1293.11ms, fracRes: 0.0383, norm(attn): 0.2383, norm(output): 0.2812, norm(x): 0.2620, norm(y): 1.0006, norm:3.4832, tok/sec: 101361.84, flops:41.70, batch-reuse:1
@ 1299 train 6.5285 , allloss: 6.8065, dt: 1253.12ms, fracRes: 0.0429, norm(attn): 0.2490, norm(output): 0.2852, norm(x): 0.2631, norm(y): 1.0006, norm:14.2716, tok/sec: 104596.19, flops:43.03, batch-reuse:1
@ 1300 train 6.4364 , allloss: 6.7077, dt: 1300.01ms, fracRes: 0.0411, norm(attn): 0.2500, norm(output): 0.2812, norm(x): 0.2588, norm(y): 1.0007, norm:5.4672, tok/sec: 100824.12, flops:41.47, batch-reuse:1
@ 1301 train 6.5433 , allloss: 6.8246, dt: 1294.05ms, fracRes: 0.0395, norm(attn): 0.2451, norm(output): 0.2812, norm(x): 0.2580, norm(y): 1.0007, norm:8.7648, tok/sec: 101287.85, flops:41.67, batch-reuse:1
@ 1302 train 6.4985 , allloss: 6.7865, dt: 1285.56ms, fracRes: 0.0376, norm(attn): 0.2383, norm(output): 0.2832, norm(x): 0.2591, norm(y): 1.0006, norm:5.9874, tok/sec: 101957.42, flops:41.94, batch-reuse:1
@ 1303 train 6.5347 , allloss: 6.8134, dt: 1272.92ms, fracRes: 0.0374, norm(attn): 0.2344, norm(output): 0.2852, norm(x): 0.2639, norm(y): 1.0006, norm:4.6960, tok/sec: 102969.48, flops:42.36, batch-reuse:1
@ 1304 train 6.5041 , allloss: 6.7733, dt: 1260.28ms, fracRes: 0.0381, norm(attn): 0.2236, norm(output): 0.2910, norm(x): 0.2677, norm(y): 1.0006, norm:6.7717, tok/sec: 104002.45, flops:42.78, batch-reuse:1
@ 1305 train 6.4565 , allloss: 6.7315, dt: 1270.90ms, fracRes: 0.0372, norm(attn): 0.2363, norm(output): 0.2832, norm(x): 0.2620, norm(y): 1.0006, norm:4.4347, tok/sec: 103132.86, flops:42.42, batch-reuse:1
@ 1306 train 6.4143 , allloss: 6.6875, dt: 1301.84ms, fracRes: 0.0386, norm(attn): 0.2422, norm(output): 0.2852, norm(x): 0.2636, norm(y): 1.0006, norm:4.8199, tok/sec: 100682.36, flops:41.42, batch-reuse:1
@ 1307 train 6.4948 , allloss: 6.7637, dt: 1296.40ms, fracRes: 0.0412, norm(attn): 0.2432, norm(output): 0.2832, norm(x): 0.2605, norm(y): 1.0007, norm:3.2119, tok/sec: 101104.83, flops:41.59, batch-reuse:1
@ 1308 train 6.4773 , allloss: 6.7449, dt: 1290.02ms, fracRes: 0.0453, norm(attn): 0.2354, norm(output): 0.2852, norm(x): 0.2629, norm(y): 1.0007, norm:3.6027, tok/sec: 101604.66, flops:41.80, batch-reuse:1
@ 1309 train 6.4347 , allloss: 6.7054, dt: 1277.14ms, fracRes: 0.0451, norm(attn): 0.2324, norm(output): 0.2832, norm(x): 0.2615, norm(y): 1.0006, norm:4.6930, tok/sec: 102629.70, flops:42.22, batch-reuse:1
@ 1310 train 6.4220 , allloss: 6.6970, dt: 1286.52ms, fracRes: 0.0457, norm(attn): 0.2246, norm(output): 0.2910, norm(x): 0.2648, norm(y): 1.0005, norm:3.5340, tok/sec: 101881.01, flops:41.91, batch-reuse:1
@ 1311 train 6.4953 , allloss: 6.7546, dt: 1277.61ms, fracRes: 0.0477, norm(attn): 0.2236, norm(output): 0.2930, norm(x): 0.2661, norm(y): 1.0005, norm:3.5790, tok/sec: 102591.65, flops:42.20, batch-reuse:1
@ 1312 train 6.4137 , allloss: 6.6731, dt: 1277.85ms, fracRes: 0.0442, norm(attn): 0.2324, norm(output): 0.2832, norm(x): 0.2624, norm(y): 1.0005, norm:2.6504, tok/sec: 102571.91, flops:42.19, batch-reuse:1
@ 1313 train 6.4563 , allloss: 6.7085, dt: 1264.94ms, fracRes: 0.0439, norm(attn): 0.2344, norm(output): 0.2832, norm(x): 0.2589, norm(y): 1.0005, norm:3.8205, tok/sec: 103619.14, flops:42.62, batch-reuse:1
@ 1314 train 6.4391 , allloss: 6.6952, dt: 1264.47ms, fracRes: 0.0441, norm(attn): 0.2344, norm(output): 0.2852, norm(x): 0.2603, norm(y): 1.0005, norm:5.2340, tok/sec: 103657.49, flops:42.64, batch-reuse:1
@ 1315 train 6.3967 , allloss: 6.6467, dt: 1272.41ms, fracRes: 0.0448, norm(attn): 0.2354, norm(output): 0.2832, norm(x): 0.2598, norm(y): 1.0005, norm:4.3904, tok/sec: 103010.87, flops:42.37, batch-reuse:1
@ 1316 train 6.3730 , allloss: 6.6267, dt: 1282.82ms, fracRes: 0.0443, norm(attn): 0.2305, norm(output): 0.2832, norm(x): 0.2611, norm(y): 1.0005, norm:3.4554, tok/sec: 102174.67, flops:42.03, batch-reuse:1
@ 1317 train 6.4828 , allloss: 6.7465, dt: 1259.49ms, fracRes: 0.0432, norm(attn): 0.2256, norm(output): 0.2891, norm(x): 0.2665, norm(y): 1.0004, norm:3.6723, tok/sec: 104067.89, flops:42.81, batch-reuse:1
@ 1318 train 6.3553 , allloss: 6.6149, dt: 1283.80ms, fracRes: 0.0458, norm(attn): 0.2256, norm(output): 0.2871, norm(x): 0.2650, norm(y): 1.0003, norm:5.1327, tok/sec: 102096.55, flops:42.00, batch-reuse:1
@ 1319 train 6.4671 , allloss: 6.7273, dt: 1300.86ms, fracRes: 0.0410, norm(attn): 0.2334, norm(output): 0.2812, norm(x): 0.2597, norm(y): 1.0004, norm:5.6863, tok/sec: 100758.00, flops:41.45, batch-reuse:1
@ 1320 train 6.4463 , allloss: 6.7147, dt: 1283.64ms, fracRes: 0.0396, norm(attn): 0.2275, norm(output): 0.2852, norm(x): 0.2632, norm(y): 1.0003, norm:3.2887, tok/sec: 102109.31, flops:42.00, batch-reuse:1
@ 1321 train 6.4455 , allloss: 6.7190, dt: 1317.74ms, fracRes: 0.0400, norm(attn): 0.2188, norm(output): 0.2930, norm(x): 0.2693, norm(y): 1.0002, norm:5.0599, tok/sec: 99467.51, flops:40.92, batch-reuse:1
@ 1322 train 6.4057 , allloss: 6.6918, dt: 1292.55ms, fracRes: 0.0393, norm(attn): 0.2109, norm(output): 0.2988, norm(x): 0.2728, norm(y): 1.0001, norm:2.7707, tok/sec: 101405.44, flops:41.71, batch-reuse:1
@ 1323 train 6.4522 , allloss: 6.7525, dt: 1274.02ms, fracRes: 0.0386, norm(attn): 0.2148, norm(output): 0.2930, norm(x): 0.2710, norm(y): 1.0000, norm:5.9482, tok/sec: 102880.76, flops:42.32, batch-reuse:1
@ 1324 train 6.4951 , allloss: 6.7996, dt: 1280.45ms, fracRes: 0.0402, norm(attn): 0.2090, norm(output): 0.2988, norm(x): 0.2730, norm(y): 1.0000, norm:5.0181, tok/sec: 102364.39, flops:42.11, batch-reuse:1
@ 1325 train 6.4079 , allloss: 6.7086, dt: 1287.78ms, fracRes: 0.0435, norm(attn): 0.2021, norm(output): 0.3008, norm(x): 0.2751, norm(y): 0.9999, norm:5.6687, tok/sec: 101781.71, flops:41.87, batch-reuse:1
@ 1326 train 6.3453 , allloss: 6.6641, dt: 1311.28ms, fracRes: 0.0416, norm(attn): 0.2051, norm(output): 0.2930, norm(x): 0.2690, norm(y): 1.0000, norm:4.4009, tok/sec: 99957.20, flops:41.12, batch-reuse:1
@ 1327 train 6.4879 , allloss: 6.7916, dt: 1289.51ms, fracRes: 0.0409, norm(attn): 0.2012, norm(output): 0.2969, norm(x): 0.2728, norm(y): 0.9999, norm:6.8233, tok/sec: 101644.57, flops:41.81, batch-reuse:1
@ 1328 train 6.4033 , allloss: 6.7238, dt: 1312.09ms, fracRes: 0.0412, norm(attn): 0.2031, norm(output): 0.2949, norm(x): 0.2717, norm(y): 1.0000, norm:4.3929, tok/sec: 99895.96, flops:41.09, batch-reuse:1
@ 1329 train 6.3959 , allloss: 6.7395, dt: 1315.79ms, fracRes: 0.0409, norm(attn): 0.2021, norm(output): 0.2910, norm(x): 0.2694, norm(y): 1.0000, norm:3.6662, tok/sec: 99614.97, flops:40.98, batch-reuse:1
@ 1330 train 6.4770 , allloss: 6.8365, dt: 1320.06ms, fracRes: 0.0431, norm(attn): 0.1973, norm(output): 0.3008, norm(x): 0.2765, norm(y): 0.9998, norm:3.8834, tok/sec: 99292.13, flops:40.84, batch-reuse:1
@ 1331 train 6.4868 , allloss: 6.8756, dt: 1316.94ms, fracRes: 0.0465, norm(attn): 0.1914, norm(output): 0.3125, norm(x): 0.2869, norm(y): 0.9997, norm:9.0472, tok/sec: 99527.45, flops:40.94, batch-reuse:1
@ 1332 train 6.4241 , allloss: 6.7946, dt: 1291.50ms, fracRes: 0.0427, norm(attn): 0.2002, norm(output): 0.3105, norm(x): 0.2817, norm(y): 0.9996, norm:4.2343, tok/sec: 101487.96, flops:41.75, batch-reuse:1
@ 1333 train 6.3781 , allloss: 6.7350, dt: 1292.09ms, fracRes: 0.0361, norm(attn): 0.2012, norm(output): 0.3008, norm(x): 0.2761, norm(y): 0.9997, norm:4.1984, tok/sec: 101441.56, flops:41.73, batch-reuse:1
@ 1334 train 6.4163 , allloss: 6.8115, dt: 1321.45ms, fracRes: 0.0362, norm(attn): 0.1992, norm(output): 0.3027, norm(x): 0.2794, norm(y): 0.9998, norm:4.8521, tok/sec: 99188.05, flops:40.80, batch-reuse:1
@ 1335 train 6.4227 , allloss: 6.7771, dt: 1309.38ms, fracRes: 0.0339, norm(attn): 0.1924, norm(output): 0.3027, norm(x): 0.2790, norm(y): 0.9997, norm:3.8714, tok/sec: 100102.66, flops:41.18, batch-reuse:1
@ 1336 train 6.4854 , allloss: 6.8521, dt: 1280.14ms, fracRes: 0.0293, norm(attn): 0.2061, norm(output): 0.2910, norm(x): 0.2696, norm(y): 0.9998, norm:4.8033, tok/sec: 102388.81, flops:42.12, batch-reuse:1
@ 1337 train 6.4645 , allloss: 6.8158, dt: 1281.85ms, fracRes: 0.0261, norm(attn): 0.2041, norm(output): 0.2930, norm(x): 0.2704, norm(y): 0.9997, norm:4.3694, tok/sec: 102251.96, flops:42.06, batch-reuse:1
@ 1338 train 6.4379 , allloss: 6.8044, dt: 1291.06ms, fracRes: 0.0256, norm(attn): 0.2021, norm(output): 0.2969, norm(x): 0.2743, norm(y): 0.9997, norm:4.2180, tok/sec: 101523.08, flops:41.76, batch-reuse:1
@ 1339 train 6.4850 , allloss: 6.8462, dt: 1288.44ms, fracRes: 0.0240, norm(attn): 0.2031, norm(output): 0.2949, norm(x): 0.2720, norm(y): 0.9997, norm:4.5124, tok/sec: 101728.85, flops:41.85, batch-reuse:1
@ 1340 train 6.3855 , allloss: 6.7559, dt: 1270.82ms, fracRes: 0.0244, norm(attn): 0.2012, norm(output): 0.2930, norm(x): 0.2715, norm(y): 0.9997, norm:3.7687, tok/sec: 103139.98, flops:42.43, batch-reuse:1
@ 1341 train 6.4315 , allloss: 6.7814, dt: 1301.75ms, fracRes: 0.0226, norm(attn): 0.1943, norm(output): 0.2988, norm(x): 0.2734, norm(y): 0.9997, norm:5.6940, tok/sec: 100689.39, flops:41.42, batch-reuse:1
@ 1342 train 6.5207 , allloss: 6.8899, dt: 1313.01ms, fracRes: 0.0200, norm(attn): 0.2080, norm(output): 0.2891, norm(x): 0.2683, norm(y): 0.9998, norm:3.7317, tok/sec: 99825.29, flops:41.06, batch-reuse:1
@ 1343 train 6.3604 , allloss: 6.7139, dt: 1295.96ms, fracRes: 0.0186, norm(attn): 0.2041, norm(output): 0.2910, norm(x): 0.2683, norm(y): 0.9997, norm:3.2723, tok/sec: 101138.87, flops:41.60, batch-reuse:1
@ 1344 train 6.3744 , allloss: 6.7452, dt: 1277.26ms, fracRes: 0.0199, norm(attn): 0.2021, norm(output): 0.2949, norm(x): 0.2729, norm(y): 0.9996, norm:3.4178, tok/sec: 102619.36, flops:42.21, batch-reuse:1
@ 1345 train 6.2766 , allloss: 6.6556, dt: 1295.13ms, fracRes: 0.0204, norm(attn): 0.2002, norm(output): 0.2988, norm(x): 0.2750, norm(y): 0.9996, norm:4.1868, tok/sec: 101203.53, flops:41.63, batch-reuse:1
@ 1346 train 6.3959 , allloss: 6.7475, dt: 1316.94ms, fracRes: 0.0195, norm(attn): 0.2051, norm(output): 0.2910, norm(x): 0.2670, norm(y): 0.9997, norm:4.6728, tok/sec: 99527.89, flops:40.94, batch-reuse:1
@ 1347 train 6.3334 , allloss: 6.7100, dt: 1288.84ms, fracRes: 0.0191, norm(attn): 0.2031, norm(output): 0.2930, norm(x): 0.2699, norm(y): 0.9997, norm:2.7989, tok/sec: 101697.31, flops:41.83, batch-reuse:1
@ 1348 train 6.3851 , allloss: 6.7473, dt: 1277.78ms, fracRes: 0.0186, norm(attn): 0.1963, norm(output): 0.3008, norm(x): 0.2771, norm(y): 0.9997, norm:4.2044, tok/sec: 102578.21, flops:42.20, batch-reuse:1
@ 1349 train 6.3895 , allloss: 6.7547, dt: 1273.83ms, fracRes: 0.0175, norm(attn): 0.2021, norm(output): 0.3008, norm(x): 0.2751, norm(y): 0.9998, norm:3.6383, tok/sec: 102896.05, flops:42.33, batch-reuse:1
@ 1350 train 6.3610 , allloss: 6.7072, dt: 1271.25ms, fracRes: 0.0154, norm(attn): 0.2012, norm(output): 0.3008, norm(x): 0.2778, norm(y): 0.9998, norm:3.3374, tok/sec: 103104.93, flops:42.41, batch-reuse:1
@ 1351 train 6.4394 , allloss: 6.7859, dt: 1294.54ms, fracRes: 0.0158, norm(attn): 0.1934, norm(output): 0.3086, norm(x): 0.2859, norm(y): 0.9998, norm:3.0752, tok/sec: 101249.78, flops:41.65, batch-reuse:1
@ 1352 train 6.4444 , allloss: 6.7986, dt: 1271.54ms, fracRes: 0.0185, norm(attn): 0.1895, norm(output): 0.3125, norm(x): 0.2876, norm(y): 0.9998, norm:4.0835, tok/sec: 103080.98, flops:42.40, batch-reuse:1
@ 1353 train 6.4392 , allloss: 6.7861, dt: 1274.82ms, fracRes: 0.0181, norm(attn): 0.1992, norm(output): 0.3086, norm(x): 0.2852, norm(y): 0.9999, norm:4.9442, tok/sec: 102816.02, flops:42.29, batch-reuse:1
@ 1354 train 6.4365 , allloss: 6.7565, dt: 1327.26ms, fracRes: 0.0157, norm(attn): 0.1914, norm(output): 0.3105, norm(x): 0.2853, norm(y): 0.9999, norm:4.3536, tok/sec: 98753.77, flops:40.62, batch-reuse:1
@ 1355 train 6.3445 , allloss: 6.6852, dt: 1321.90ms, fracRes: 0.0165, norm(attn): 0.1982, norm(output): 0.3105, norm(x): 0.2868, norm(y): 1.0000, norm:5.5527, tok/sec: 99153.92, flops:40.79, batch-reuse:1
@ 1356 train 6.4531 , allloss: 6.7831, dt: 1300.55ms, fracRes: 0.0143, norm(attn): 0.1904, norm(output): 0.3145, norm(x): 0.2905, norm(y): 0.9999, norm:2.6662, tok/sec: 100782.20, flops:41.46, batch-reuse:1
@ 1357 train 6.3668 , allloss: 6.7026, dt: 1287.82ms, fracRes: 0.0120, norm(attn): 0.1895, norm(output): 0.3125, norm(x): 0.2895, norm(y): 1.0000, norm:3.9727, tok/sec: 101778.30, flops:41.87, batch-reuse:1
@ 1358 train 6.3703 , allloss: 6.7330, dt: 1303.36ms, fracRes: 0.0139, norm(attn): 0.1992, norm(output): 0.3125, norm(x): 0.2904, norm(y): 1.0000, norm:3.8240, tok/sec: 100564.62, flops:41.37, batch-reuse:1
@ 1359 train 6.3608 , allloss: 6.7041, dt: 1305.94ms, fracRes: 0.0123, norm(attn): 0.1895, norm(output): 0.3145, norm(x): 0.2945, norm(y): 0.9999, norm:5.7098, tok/sec: 100365.70, flops:41.29, batch-reuse:1
@ 1360 train 6.3014 , allloss: 6.6453, dt: 1295.75ms, fracRes: 0.0129, norm(attn): 0.1982, norm(output): 0.3125, norm(x): 0.2887, norm(y): 1.0000, norm:2.8260, tok/sec: 101155.47, flops:41.61, batch-reuse:1
@ 1361 train 6.4054 , allloss: 6.7659, dt: 1255.00ms, fracRes: 0.0149, norm(attn): 0.1934, norm(output): 0.3145, norm(x): 0.2946, norm(y): 1.0000, norm:4.6365, tok/sec: 104439.99, flops:42.96, batch-reuse:1
@ 1362 train 6.4868 , allloss: 6.8243, dt: 1274.75ms, fracRes: 0.0135, norm(attn): 0.1895, norm(output): 0.3203, norm(x): 0.2986, norm(y): 0.9999, norm:4.4289, tok/sec: 102821.44, flops:42.30, batch-reuse:1
@ 1363 train 6.3548 , allloss: 6.6841, dt: 1310.99ms, fracRes: 0.0087, norm(attn): 0.1982, norm(output): 0.3125, norm(x): 0.2886, norm(y): 1.0000, norm:5.2812, tok/sec: 99979.05, flops:41.13, batch-reuse:1
@ 1364 train 6.3176 , allloss: 6.6578, dt: 1280.45ms, fracRes: 0.0082, norm(attn): 0.2031, norm(output): 0.3125, norm(x): 0.2899, norm(y): 1.0000, norm:3.0876, tok/sec: 102364.37, flops:42.11, batch-reuse:1
@ 1365 train 6.4556 , allloss: 6.8011, dt: 1254.99ms, fracRes: 0.0106, norm(attn): 0.2021, norm(output): 0.3164, norm(x): 0.2955, norm(y): 0.9999, norm:4.3646, tok/sec: 104440.57, flops:42.96, batch-reuse:1
@ 1366 train 6.4057 , allloss: 6.7550, dt: 1286.43ms, fracRes: 0.0102, norm(attn): 0.2041, norm(output): 0.3145, norm(x): 0.2929, norm(y): 0.9999, norm:5.0596, tok/sec: 101888.03, flops:41.91, batch-reuse:1
@ 1367 train 6.3852 , allloss: 6.7343, dt: 1296.42ms, fracRes: 0.0081, norm(attn): 0.2031, norm(output): 0.3125, norm(x): 0.2899, norm(y): 0.9999, norm:5.5106, tok/sec: 101103.33, flops:41.59, batch-reuse:1
@ 1368 train 6.4584 , allloss: 6.8143, dt: 1282.25ms, fracRes: 0.0078, norm(attn): 0.2051, norm(output): 0.3125, norm(x): 0.2936, norm(y): 0.9999, norm:3.4502, tok/sec: 102220.30, flops:42.05, batch-reuse:1
@ 1369 train 6.4498 , allloss: 6.7856, dt: 1283.48ms, fracRes: 0.0066, norm(attn): 0.2021, norm(output): 0.3184, norm(x): 0.2981, norm(y): 0.9998, norm:7.4890, tok/sec: 102122.68, flops:42.01, batch-reuse:1
@ 1370 train 6.3519 , allloss: 6.6797, dt: 1291.49ms, fracRes: 0.0089, norm(attn): 0.2070, norm(output): 0.3125, norm(x): 0.2920, norm(y): 0.9999, norm:4.0755, tok/sec: 101489.20, flops:41.75, batch-reuse:1
@ 1371 train 6.3951 , allloss: 6.7256, dt: 1274.70ms, fracRes: 0.0086, norm(attn): 0.2178, norm(output): 0.3066, norm(x): 0.2825, norm(y): 1.0000, norm:6.0519, tok/sec: 102826.02, flops:42.30, batch-reuse:1
@ 1372 train 6.3395 , allloss: 6.6686, dt: 1266.08ms, fracRes: 0.0088, norm(attn): 0.2188, norm(output): 0.3008, norm(x): 0.2804, norm(y): 1.0001, norm:4.2490, tok/sec: 103525.72, flops:42.59, batch-reuse:1
@ 1373 train 6.3237 , allloss: 6.6498, dt: 1279.65ms, fracRes: 0.0087, norm(attn): 0.2188, norm(output): 0.3027, norm(x): 0.2819, norm(y): 1.0000, norm:5.2141, tok/sec: 102428.11, flops:42.13, batch-reuse:1
@ 1374 train 6.3529 , allloss: 6.6802, dt: 1292.09ms, fracRes: 0.0079, norm(attn): 0.2197, norm(output): 0.3066, norm(x): 0.2834, norm(y): 1.0000, norm:4.6378, tok/sec: 101442.10, flops:41.73, batch-reuse:1
@ 1375 train 6.3116 , allloss: 6.6395, dt: 1300.06ms, fracRes: 0.0092, norm(attn): 0.2285, norm(output): 0.2969, norm(x): 0.2781, norm(y): 1.0001, norm:4.2453, tok/sec: 100819.98, flops:41.47, batch-reuse:1
@ 1376 train 6.3378 , allloss: 6.6488, dt: 1282.54ms, fracRes: 0.0085, norm(attn): 0.2236, norm(output): 0.2969, norm(x): 0.2763, norm(y): 1.0000, norm:4.5487, tok/sec: 102197.06, flops:42.04, batch-reuse:1
@ 1377 train 6.3287 , allloss: 6.6359, dt: 1293.16ms, fracRes: 0.0118, norm(attn): 0.2295, norm(output): 0.2969, norm(x): 0.2764, norm(y): 1.0000, norm:4.8084, tok/sec: 101358.23, flops:41.69, batch-reuse:1
@ 1378 train 6.4882 , allloss: 6.7973, dt: 1314.52ms, fracRes: 0.0121, norm(attn): 0.2266, norm(output): 0.3008, norm(x): 0.2781, norm(y): 1.0001, norm:5.9849, tok/sec: 99710.75, flops:41.02, batch-reuse:1
@ 1379 train 6.4210 , allloss: 6.7309, dt: 1310.54ms, fracRes: 0.0130, norm(attn): 0.2334, norm(output): 0.2930, norm(x): 0.2727, norm(y): 1.0001, norm:3.5757, tok/sec: 100013.56, flops:41.14, batch-reuse:1
@ 1380 train 6.2246 , allloss: 6.5423, dt: 1268.60ms, fracRes: 0.0109, norm(attn): 0.2314, norm(output): 0.2949, norm(x): 0.2756, norm(y): 1.0000, norm:3.1948, tok/sec: 103320.25, flops:42.50, batch-reuse:1
@ 1381 train 6.3179 , allloss: 6.6323, dt: 1277.81ms, fracRes: 0.0129, norm(attn): 0.2383, norm(output): 0.2910, norm(x): 0.2701, norm(y): 1.0001, norm:3.8065, tok/sec: 102575.57, flops:42.19, batch-reuse:1
@ 1382 train 6.3386 , allloss: 6.6431, dt: 1285.33ms, fracRes: 0.0125, norm(attn): 0.2480, norm(output): 0.2852, norm(x): 0.2669, norm(y): 1.0000, norm:4.4324, tok/sec: 101975.19, flops:41.95, batch-reuse:1
@ 1383 train 6.4013 , allloss: 6.6937, dt: 1279.94ms, fracRes: 0.0110, norm(attn): 0.2402, norm(output): 0.2930, norm(x): 0.2724, norm(y): 1.0000, norm:4.3586, tok/sec: 102404.81, flops:42.12, batch-reuse:1
@ 1384 train 6.3156 , allloss: 6.6093, dt: 1294.07ms, fracRes: 0.0110, norm(attn): 0.2402, norm(output): 0.2871, norm(x): 0.2673, norm(y): 1.0001, norm:4.9866, tok/sec: 101286.47, flops:41.66, batch-reuse:1
@ 1385 train 6.3841 , allloss: 6.6752, dt: 1292.12ms, fracRes: 0.0092, norm(attn): 0.2354, norm(output): 0.2871, norm(x): 0.2673, norm(y): 1.0000, norm:3.5740, tok/sec: 101439.61, flops:41.73, batch-reuse:1
@ 1386 train 6.3423 , allloss: 6.6330, dt: 1283.79ms, fracRes: 0.0094, norm(attn): 0.2305, norm(output): 0.3008, norm(x): 0.2769, norm(y): 0.9998, norm:5.3684, tok/sec: 102097.31, flops:42.00, batch-reuse:1
@ 1387 train 6.3072 , allloss: 6.6072, dt: 1294.71ms, fracRes: 0.0117, norm(attn): 0.2432, norm(output): 0.2852, norm(x): 0.2695, norm(y): 1.0000, norm:4.4776, tok/sec: 101236.19, flops:41.64, batch-reuse:1
@ 1388 train 6.3714 , allloss: 6.6669, dt: 1302.36ms, fracRes: 0.0119, norm(attn): 0.2471, norm(output): 0.2832, norm(x): 0.2644, norm(y): 1.0001, norm:4.7745, tok/sec: 100641.94, flops:41.40, batch-reuse:1
@ 1389 train 6.2535 , allloss: 6.5394, dt: 1281.14ms, fracRes: 0.0116, norm(attn): 0.2373, norm(output): 0.2871, norm(x): 0.2667, norm(y): 1.0000, norm:4.5869, tok/sec: 102308.95, flops:42.09, batch-reuse:1
@ 1390 train 6.4714 , allloss: 6.7573, dt: 1260.52ms, fracRes: 0.0132, norm(attn): 0.2344, norm(output): 0.2930, norm(x): 0.2715, norm(y): 1.0000, norm:3.5914, tok/sec: 103982.50, flops:42.77, batch-reuse:1
@ 1391 train 6.3690 , allloss: 6.6578, dt: 1290.75ms, fracRes: 0.0117, norm(attn): 0.2334, norm(output): 0.2949, norm(x): 0.2741, norm(y): 1.0000, norm:4.5299, tok/sec: 101547.40, flops:41.77, batch-reuse:1
@ 1392 train 6.3238 , allloss: 6.6114, dt: 1274.84ms, fracRes: 0.0097, norm(attn): 0.2344, norm(output): 0.2930, norm(x): 0.2738, norm(y): 0.9998, norm:6.4287, tok/sec: 102814.44, flops:42.29, batch-reuse:1
@ 1393 train 6.2771 , allloss: 6.5606, dt: 1289.88ms, fracRes: 0.0094, norm(attn): 0.2363, norm(output): 0.2930, norm(x): 0.2731, norm(y): 0.9999, norm:5.4460, tok/sec: 101615.65, flops:41.80, batch-reuse:1
@ 1394 train 6.2726 , allloss: 6.5634, dt: 1282.45ms, fracRes: 0.0125, norm(attn): 0.2324, norm(output): 0.2969, norm(x): 0.2762, norm(y): 0.9998, norm:4.0648, tok/sec: 102204.38, flops:42.04, batch-reuse:1
@ 1395 train 6.2679 , allloss: 6.5604, dt: 1267.31ms, fracRes: 0.0116, norm(attn): 0.2334, norm(output): 0.2949, norm(x): 0.2746, norm(y): 0.9998, norm:4.1167, tok/sec: 103425.76, flops:42.54, batch-reuse:1
@ 1396 train 6.2876 , allloss: 6.5945, dt: 1288.89ms, fracRes: 0.0129, norm(attn): 0.2363, norm(output): 0.2852, norm(x): 0.2683, norm(y): 0.9999, norm:5.1020, tok/sec: 101693.81, flops:41.83, batch-reuse:1
@ 1397 train 6.3311 , allloss: 6.6404, dt: 1277.35ms, fracRes: 0.0131, norm(attn): 0.2363, norm(output): 0.2871, norm(x): 0.2696, norm(y): 0.9999, norm:4.2584, tok/sec: 102612.64, flops:42.21, batch-reuse:1
@ 1398 train 6.3457 , allloss: 6.6475, dt: 1293.26ms, fracRes: 0.0118, norm(attn): 0.2344, norm(output): 0.2969, norm(x): 0.2754, norm(y): 0.9999, norm:7.0466, tok/sec: 101350.16, flops:41.69, batch-reuse:1
@ 1399 train 6.2312 , allloss: 6.5290, dt: 1290.84ms, fracRes: 0.0109, norm(attn): 0.2334, norm(output): 0.3008, norm(x): 0.2769, norm(y): 0.9998, norm:3.4734, tok/sec: 101539.85, flops:41.77, batch-reuse:1
@ 1400 train 6.3894 , allloss: 6.6818, dt: 1276.43ms, fracRes: 0.0096, norm(attn): 0.2402, norm(output): 0.2930, norm(x): 0.2742, norm(y): 0.9997, norm:5.2786, tok/sec: 102686.20, flops:42.24, batch-reuse:1
@ 1401 train 6.2918 , allloss: 6.5818, dt: 1315.05ms, fracRes: 0.0107, norm(attn): 0.2490, norm(output): 0.2930, norm(x): 0.2737, norm(y): 0.9996, norm:8.0378, tok/sec: 99670.92, flops:41.00, batch-reuse:1
@ 1402 train 6.2343 , allloss: 6.5322, dt: 1307.34ms, fracRes: 0.0134, norm(attn): 0.2363, norm(output): 0.2988, norm(x): 0.2787, norm(y): 0.9997, norm:3.5612, tok/sec: 100258.20, flops:41.24, batch-reuse:1
@ 1403 train 6.3067 , allloss: 6.6111, dt: 1306.88ms, fracRes: 0.0125, norm(attn): 0.2305, norm(output): 0.3027, norm(x): 0.2816, norm(y): 0.9997, norm:4.3026, tok/sec: 100294.09, flops:41.26, batch-reuse:1
@ 1404 train 6.2861 , allloss: 6.6083, dt: 1320.48ms, fracRes: 0.0152, norm(attn): 0.2354, norm(output): 0.3047, norm(x): 0.2829, norm(y): 0.9997, norm:4.7306, tok/sec: 99261.05, flops:40.83, batch-reuse:1
@ 1405 train 6.3410 , allloss: 6.6571, dt: 1289.96ms, fracRes: 0.0117, norm(attn): 0.2344, norm(output): 0.3047, norm(x): 0.2826, norm(y): 0.9996, norm:5.0540, tok/sec: 101609.62, flops:41.80, batch-reuse:1
@ 1406 train 6.3753 , allloss: 6.6886, dt: 1309.68ms, fracRes: 0.0119, norm(attn): 0.2334, norm(output): 0.3086, norm(x): 0.2848, norm(y): 0.9996, norm:3.8625, tok/sec: 100079.57, flops:41.17, batch-reuse:1
@ 1407 train 6.2951 , allloss: 6.5961, dt: 1321.21ms, fracRes: 0.0101, norm(attn): 0.2275, norm(output): 0.3086, norm(x): 0.2861, norm(y): 0.9995, norm:6.0965, tok/sec: 99205.77, flops:40.81, batch-reuse:1
@ 1408 train 6.2923 , allloss: 6.6218, dt: 1319.25ms, fracRes: 0.0144, norm(attn): 0.2295, norm(output): 0.3008, norm(x): 0.2806, norm(y): 0.9996, norm:4.2847, tok/sec: 99353.63, flops:40.87, batch-reuse:1
@ 1409 train 6.3242 , allloss: 6.6447, dt: 1316.61ms, fracRes: 0.0118, norm(attn): 0.2344, norm(output): 0.3086, norm(x): 0.2862, norm(y): 0.9995, norm:8.7357, tok/sec: 99552.42, flops:40.95, batch-reuse:1
@ 1410 train 6.2252 , allloss: 6.5480, dt: 1318.56ms, fracRes: 0.0141, norm(attn): 0.2344, norm(output): 0.3047, norm(x): 0.2840, norm(y): 0.9997, norm:3.6304, tok/sec: 99405.69, flops:40.89, batch-reuse:1
@ 1411 train 6.3411 , allloss: 6.6701, dt: 1259.07ms, fracRes: 0.0120, norm(attn): 0.2285, norm(output): 0.3008, norm(x): 0.2806, norm(y): 0.9997, norm:10.1008, tok/sec: 104101.87, flops:42.82, batch-reuse:1
@ 1412 train 6.2819 , allloss: 6.6153, dt: 1291.82ms, fracRes: 0.0108, norm(attn): 0.2207, norm(output): 0.3047, norm(x): 0.2831, norm(y): 0.9997, norm:4.8738, tok/sec: 101463.39, flops:41.74, batch-reuse:1
@ 1413 train 6.3114 , allloss: 6.6446, dt: 1293.82ms, fracRes: 0.0115, norm(attn): 0.2207, norm(output): 0.3105, norm(x): 0.2886, norm(y): 0.9997, norm:9.5967, tok/sec: 101305.99, flops:41.67, batch-reuse:1
@ 1414 train 6.3130 , allloss: 6.6347, dt: 1285.54ms, fracRes: 0.0117, norm(attn): 0.2266, norm(output): 0.3105, norm(x): 0.2873, norm(y): 0.9997, norm:5.9586, tok/sec: 101958.38, flops:41.94, batch-reuse:1
@ 1415 train 6.3093 , allloss: 6.6314, dt: 1314.38ms, fracRes: 0.0115, norm(attn): 0.2314, norm(output): 0.3047, norm(x): 0.2816, norm(y): 0.9997, norm:5.8966, tok/sec: 99721.37, flops:41.02, batch-reuse:1
@ 1416 train 6.4078 , allloss: 6.7427, dt: 1272.28ms, fracRes: 0.0161, norm(attn): 0.2314, norm(output): 0.3027, norm(x): 0.2811, norm(y): 0.9998, norm:6.9737, tok/sec: 103021.37, flops:42.38, batch-reuse:1
@ 1417 train 6.2915 , allloss: 6.6314, dt: 1286.57ms, fracRes: 0.0149, norm(attn): 0.2227, norm(output): 0.3027, norm(x): 0.2819, norm(y): 0.9998, norm:4.7900, tok/sec: 101876.81, flops:41.91, batch-reuse:1
@ 1418 train 6.3232 , allloss: 6.6501, dt: 1311.02ms, fracRes: 0.0144, norm(attn): 0.2178, norm(output): 0.3125, norm(x): 0.2888, norm(y): 0.9997, norm:6.4096, tok/sec: 99977.20, flops:41.13, batch-reuse:1
@ 1419 train 6.3641 , allloss: 6.6828, dt: 1292.61ms, fracRes: 0.0201, norm(attn): 0.2354, norm(output): 0.3008, norm(x): 0.2788, norm(y): 0.9999, norm:5.6492, tok/sec: 101401.05, flops:41.71, batch-reuse:1
@ 1420 train 6.3876 , allloss: 6.6842, dt: 1267.69ms, fracRes: 0.0190, norm(attn): 0.2363, norm(output): 0.3008, norm(x): 0.2786, norm(y): 0.9999, norm:5.1881, tok/sec: 103394.43, flops:42.53, batch-reuse:1
@ 1421 train 6.3347 , allloss: 6.6284, dt: 1287.00ms, fracRes: 0.0216, norm(attn): 0.2246, norm(output): 0.3066, norm(x): 0.2846, norm(y): 0.9999, norm:3.7373, tok/sec: 101842.67, flops:41.89, batch-reuse:1
@ 1422 train 6.2475 , allloss: 6.5438, dt: 1289.68ms, fracRes: 0.0215, norm(attn): 0.2285, norm(output): 0.3008, norm(x): 0.2789, norm(y): 1.0000, norm:3.3298, tok/sec: 101631.22, flops:41.81, batch-reuse:1
@ 1423 train 6.3135 , allloss: 6.6026, dt: 1262.24ms, fracRes: 0.0182, norm(attn): 0.2197, norm(output): 0.3066, norm(x): 0.2823, norm(y): 0.9999, norm:4.0328, tok/sec: 103840.82, flops:42.72, batch-reuse:1
@ 1424 train 6.2822 , allloss: 6.5727, dt: 1290.75ms, fracRes: 0.0211, norm(attn): 0.2207, norm(output): 0.3027, norm(x): 0.2823, norm(y): 0.9999, norm:3.3830, tok/sec: 101546.84, flops:41.77, batch-reuse:1
@ 1425 train 6.2461 , allloss: 6.5325, dt: 1312.76ms, fracRes: 0.0204, norm(attn): 0.2197, norm(output): 0.3047, norm(x): 0.2818, norm(y): 0.9999, norm:3.4054, tok/sec: 99844.85, flops:41.07, batch-reuse:1
@ 1426 train 6.1912 , allloss: 6.4758, dt: 1293.71ms, fracRes: 0.0206, norm(attn): 0.2188, norm(output): 0.3066, norm(x): 0.2826, norm(y): 0.9999, norm:3.4235, tok/sec: 101314.49, flops:41.68, batch-reuse:1
@ 1427 train 6.3322 , allloss: 6.6208, dt: 1265.03ms, fracRes: 0.0217, norm(attn): 0.2178, norm(output): 0.3066, norm(x): 0.2845, norm(y): 0.9998, norm:10.0585, tok/sec: 103611.60, flops:42.62, batch-reuse:1
@ 1428 train 6.2387 , allloss: 6.5254, dt: 1277.01ms, fracRes: 0.0221, norm(attn): 0.2256, norm(output): 0.3008, norm(x): 0.2793, norm(y): 0.9999, norm:4.0222, tok/sec: 102639.38, flops:42.22, batch-reuse:1
@ 1429 train 6.3071 , allloss: 6.6036, dt: 1287.07ms, fracRes: 0.0226, norm(attn): 0.2275, norm(output): 0.2969, norm(x): 0.2780, norm(y): 1.0000, norm:5.9663, tok/sec: 101837.64, flops:41.89, batch-reuse:1
@ 1430 train 6.3182 , allloss: 6.6120, dt: 1311.38ms, fracRes: 0.0231, norm(attn): 0.2207, norm(output): 0.3027, norm(x): 0.2822, norm(y): 1.0000, norm:8.1159, tok/sec: 99949.35, flops:41.11, batch-reuse:1
@ 1431 train 6.2755 , allloss: 6.5542, dt: 1308.15ms, fracRes: 0.0225, norm(attn): 0.2178, norm(output): 0.3066, norm(x): 0.2837, norm(y): 0.9999, norm:4.9076, tok/sec: 100196.84, flops:41.22, batch-reuse:1
@ 1432 train 6.2013 , allloss: 6.4797, dt: 1294.05ms, fracRes: 0.0245, norm(attn): 0.2246, norm(output): 0.2969, norm(x): 0.2778, norm(y): 1.0000, norm:4.2808, tok/sec: 101287.93, flops:41.67, batch-reuse:1
@ 1433 train 6.3167 , allloss: 6.5971, dt: 1271.00ms, fracRes: 0.0258, norm(attn): 0.2314, norm(output): 0.2949, norm(x): 0.2749, norm(y): 1.0001, norm:5.0000, tok/sec: 103125.01, flops:42.42, batch-reuse:1
@ 1434 train 6.3408 , allloss: 6.6257, dt: 1305.80ms, fracRes: 0.0268, norm(attn): 0.2227, norm(output): 0.3008, norm(x): 0.2804, norm(y): 1.0000, norm:5.2347, tok/sec: 100376.45, flops:41.29, batch-reuse:1
@ 1435 train 6.2591 , allloss: 6.5346, dt: 1267.49ms, fracRes: 0.0266, norm(attn): 0.2178, norm(output): 0.3086, norm(x): 0.2848, norm(y): 1.0000, norm:4.2388, tok/sec: 103410.33, flops:42.54, batch-reuse:1
@ 1436 train 6.2309 , allloss: 6.5102, dt: 1283.90ms, fracRes: 0.0263, norm(attn): 0.2227, norm(output): 0.3008, norm(x): 0.2800, norm(y): 1.0000, norm:4.0572, tok/sec: 102089.04, flops:41.99, batch-reuse:1
@ 1437 train 6.2588 , allloss: 6.5502, dt: 1277.95ms, fracRes: 0.0256, norm(attn): 0.2197, norm(output): 0.3047, norm(x): 0.2828, norm(y): 1.0000, norm:4.1700, tok/sec: 102564.55, flops:42.19, batch-reuse:1
@ 1438 train 6.2271 , allloss: 6.5046, dt: 1295.77ms, fracRes: 0.0244, norm(attn): 0.2129, norm(output): 0.3125, norm(x): 0.2902, norm(y): 0.9999, norm:4.9017, tok/sec: 101153.44, flops:41.61, batch-reuse:1
@ 1439 train 6.2086 , allloss: 6.4924, dt: 1290.07ms, fracRes: 0.0250, norm(attn): 0.2129, norm(output): 0.3105, norm(x): 0.2883, norm(y): 0.9999, norm:3.3787, tok/sec: 101600.65, flops:41.79, batch-reuse:1
@ 1440 train 6.2712 , allloss: 6.5550, dt: 1306.34ms, fracRes: 0.0236, norm(attn): 0.2168, norm(output): 0.3047, norm(x): 0.2835, norm(y): 1.0000, norm:5.4622, tok/sec: 100335.58, flops:41.27, batch-reuse:1
@ 1441 train 6.2384 , allloss: 6.5229, dt: 1275.31ms, fracRes: 0.0232, norm(attn): 0.2139, norm(output): 0.3086, norm(x): 0.2838, norm(y): 1.0000, norm:2.9531, tok/sec: 102776.73, flops:42.28, batch-reuse:1
@ 1442 train 6.2632 , allloss: 6.5496, dt: 1273.83ms, fracRes: 0.0255, norm(attn): 0.2061, norm(output): 0.3125, norm(x): 0.2911, norm(y): 1.0000, norm:5.1505, tok/sec: 102896.03, flops:42.33, batch-reuse:1
@ 1443 train 6.1770 , allloss: 6.4604, dt: 1285.64ms, fracRes: 0.0255, norm(attn): 0.2041, norm(output): 0.3145, norm(x): 0.2934, norm(y): 0.9999, norm:3.1107, tok/sec: 101950.87, flops:41.94, batch-reuse:1
@ 1444 train 6.2329 , allloss: 6.5166, dt: 1294.57ms, fracRes: 0.0254, norm(attn): 0.2178, norm(output): 0.3086, norm(x): 0.2857, norm(y): 1.0001, norm:5.5741, tok/sec: 101247.89, flops:41.65, batch-reuse:1
@ 1445 train 6.2973 , allloss: 6.5893, dt: 1325.08ms, fracRes: 0.0235, norm(attn): 0.2178, norm(output): 0.3027, norm(x): 0.2822, norm(y): 1.0001, norm:3.4650, tok/sec: 98916.53, flops:40.69, batch-reuse:1
@ 1446 train 6.2993 , allloss: 6.5892, dt: 1317.60ms, fracRes: 0.0223, norm(attn): 0.2070, norm(output): 0.3105, norm(x): 0.2884, norm(y): 1.0000, norm:4.3997, tok/sec: 99477.91, flops:40.92, batch-reuse:1
@ 1447 train 6.2832 , allloss: 6.5677, dt: 1307.88ms, fracRes: 0.0230, norm(attn): 0.2041, norm(output): 0.3164, norm(x): 0.2966, norm(y): 0.9999, norm:4.6259, tok/sec: 100217.35, flops:41.22, batch-reuse:1
@ 1448 train 6.2252 , allloss: 6.5081, dt: 1300.97ms, fracRes: 0.0242, norm(attn): 0.2031, norm(output): 0.3164, norm(x): 0.2960, norm(y): 1.0000, norm:3.1043, tok/sec: 100749.45, flops:41.44, batch-reuse:1
@ 1449 train 6.3268 , allloss: 6.6173, dt: 1265.14ms, fracRes: 0.0244, norm(attn): 0.2100, norm(output): 0.3125, norm(x): 0.2902, norm(y): 1.0000, norm:3.5488, tok/sec: 103602.45, flops:42.62, batch-reuse:1
@ 1450 train 6.2897 , allloss: 6.5633, dt: 1261.06ms, fracRes: 0.0239, norm(attn): 0.2051, norm(output): 0.3125, norm(x): 0.2923, norm(y): 1.0000, norm:4.7236, tok/sec: 103938.25, flops:42.76, batch-reuse:1
@ 1451 train 6.3348 , allloss: 6.6119, dt: 1277.10ms, fracRes: 0.0263, norm(attn): 0.2031, norm(output): 0.3145, norm(x): 0.2937, norm(y): 1.0001, norm:3.5283, tok/sec: 102632.40, flops:42.22, batch-reuse:1
@ 1452 train 6.2015 , allloss: 6.4732, dt: 1278.98ms, fracRes: 0.0261, norm(attn): 0.1982, norm(output): 0.3164, norm(x): 0.2961, norm(y): 1.0001, norm:3.2720, tok/sec: 102482.06, flops:42.16, batch-reuse:1
@ 1453 train 6.1995 , allloss: 6.4789, dt: 1295.36ms, fracRes: 0.0258, norm(attn): 0.2051, norm(output): 0.3145, norm(x): 0.2947, norm(y): 1.0000, norm:2.4067, tok/sec: 101186.08, flops:41.62, batch-reuse:1
@ 1454 train 6.2482 , allloss: 6.5375, dt: 1286.98ms, fracRes: 0.0215, norm(attn): 0.2041, norm(output): 0.3145, norm(x): 0.2963, norm(y): 1.0000, norm:3.3406, tok/sec: 101844.50, flops:41.89, batch-reuse:1
@ 1455 train 6.1935 , allloss: 6.4720, dt: 1288.15ms, fracRes: 0.0202, norm(attn): 0.1982, norm(output): 0.3203, norm(x): 0.2989, norm(y): 0.9999, norm:4.6359, tok/sec: 101752.23, flops:41.86, batch-reuse:1
@ 1456 train 6.2628 , allloss: 6.5462, dt: 1315.01ms, fracRes: 0.0257, norm(attn): 0.2061, norm(output): 0.3184, norm(x): 0.2986, norm(y): 1.0000, norm:3.4255, tok/sec: 99673.62, flops:41.00, batch-reuse:1
@ 1457 train 6.2268 , allloss: 6.4951, dt: 1309.31ms, fracRes: 0.0304, norm(attn): 0.2061, norm(output): 0.3203, norm(x): 0.2985, norm(y): 1.0001, norm:3.9463, tok/sec: 100108.06, flops:41.18, batch-reuse:1
@ 1458 train 6.2543 , allloss: 6.5217, dt: 1274.18ms, fracRes: 0.0274, norm(attn): 0.2051, norm(output): 0.3145, norm(x): 0.2956, norm(y): 1.0001, norm:3.4860, tok/sec: 102867.77, flops:42.31, batch-reuse:1
@ 1459 train 6.2932 , allloss: 6.5732, dt: 1266.42ms, fracRes: 0.0222, norm(attn): 0.2021, norm(output): 0.3164, norm(x): 0.2980, norm(y): 1.0001, norm:4.5216, tok/sec: 103498.23, flops:42.57, batch-reuse:1
@ 1460 train 6.1634 , allloss: 6.4383, dt: 1287.29ms, fracRes: 0.0193, norm(attn): 0.2021, norm(output): 0.3184, norm(x): 0.2980, norm(y): 1.0000, norm:3.6429, tok/sec: 101820.49, flops:41.88, batch-reuse:1
@ 1461 train 6.1541 , allloss: 6.4233, dt: 1285.19ms, fracRes: 0.0201, norm(attn): 0.2012, norm(output): 0.3164, norm(x): 0.2977, norm(y): 1.0001, norm:4.8814, tok/sec: 101986.09, flops:41.95, batch-reuse:1
@ 1462 train 6.2208 , allloss: 6.4912, dt: 1310.94ms, fracRes: 0.0210, norm(attn): 0.2021, norm(output): 0.3184, norm(x): 0.2988, norm(y): 1.0001, norm:3.6271, tok/sec: 99982.98, flops:41.13, batch-reuse:1
@ 1463 train 6.2066 , allloss: 6.4703, dt: 1323.42ms, fracRes: 0.0229, norm(attn): 0.2061, norm(output): 0.3164, norm(x): 0.2985, norm(y): 1.0001, norm:3.5773, tok/sec: 99040.49, flops:40.74, batch-reuse:1
@ 1464 train 6.2268 , allloss: 6.4978, dt: 1273.68ms, fracRes: 0.0249, norm(attn): 0.2041, norm(output): 0.3164, norm(x): 0.2968, norm(y): 1.0002, norm:2.7211, tok/sec: 102908.34, flops:42.33, batch-reuse:1
@ 1465 train 6.1705 , allloss: 6.4454, dt: 1266.41ms, fracRes: 0.0248, norm(attn): 0.1943, norm(output): 0.3203, norm(x): 0.2990, norm(y): 1.0002, norm:5.1840, tok/sec: 103499.03, flops:42.57, batch-reuse:1
@ 1466 train 6.1507 , allloss: 6.4174, dt: 1283.04ms, fracRes: 0.0251, norm(attn): 0.2021, norm(output): 0.3145, norm(x): 0.2940, norm(y): 1.0002, norm:3.2926, tok/sec: 102157.68, flops:42.02, batch-reuse:1
@ 1467 train 6.2098 , allloss: 6.4767, dt: 1253.34ms, fracRes: 0.0232, norm(attn): 0.2109, norm(output): 0.3125, norm(x): 0.2922, norm(y): 1.0002, norm:3.3132, tok/sec: 104577.79, flops:43.02, batch-reuse:1
@ 1468 train 6.2308 , allloss: 6.4944, dt: 1274.76ms, fracRes: 0.0225, norm(attn): 0.2051, norm(output): 0.3125, norm(x): 0.2938, norm(y): 1.0002, norm:2.6988, tok/sec: 102821.02, flops:42.30, batch-reuse:1
@ 1469 train 6.3206 , allloss: 6.5846, dt: 1292.60ms, fracRes: 0.0228, norm(attn): 0.1914, norm(output): 0.3223, norm(x): 0.3001, norm(y): 1.0002, norm:3.0792, tok/sec: 101402.13, flops:41.71, batch-reuse:1
@ 1470 train 6.2067 , allloss: 6.4697, dt: 1317.10ms, fracRes: 0.0224, norm(attn): 0.1904, norm(output): 0.3203, norm(x): 0.2987, norm(y): 1.0003, norm:3.1935, tok/sec: 99515.45, flops:40.94, batch-reuse:1
@ 1471 train 6.1266 , allloss: 6.3846, dt: 1274.52ms, fracRes: 0.0226, norm(attn): 0.1924, norm(output): 0.3203, norm(x): 0.2984, norm(y): 1.0003, norm:3.2582, tok/sec: 102839.95, flops:42.30, batch-reuse:1
@ 1472 train 6.1874 , allloss: 6.4484, dt: 1293.80ms, fracRes: 0.0221, norm(attn): 0.2012, norm(output): 0.3145, norm(x): 0.2949, norm(y): 1.0003, norm:2.4283, tok/sec: 101307.64, flops:41.67, batch-reuse:1
@ 1473 train 6.1860 , allloss: 6.4425, dt: 1295.79ms, fracRes: 0.0228, norm(attn): 0.2031, norm(output): 0.3125, norm(x): 0.2912, norm(y): 1.0003, norm:2.1715, tok/sec: 101152.29, flops:41.61, batch-reuse:1
@ 1474 train 6.4198 , allloss: 6.6776, dt: 1332.88ms, fracRes: 0.0224, norm(attn): 0.2031, norm(output): 0.3164, norm(x): 0.2959, norm(y): 1.0002, norm:3.2734, tok/sec: 98337.45, flops:40.45, batch-reuse:1
@ 1475 train 6.2539 , allloss: 6.5088, dt: 1292.04ms, fracRes: 0.0243, norm(attn): 0.2002, norm(output): 0.3145, norm(x): 0.2949, norm(y): 1.0002, norm:3.3855, tok/sec: 101445.94, flops:41.73, batch-reuse:1
@ 1476 train 6.1888 , allloss: 6.4439, dt: 1280.15ms, fracRes: 0.0250, norm(attn): 0.2031, norm(output): 0.3125, norm(x): 0.2908, norm(y): 1.0003, norm:3.7669, tok/sec: 102387.72, flops:42.12, batch-reuse:1
@ 1477 train 6.2335 , allloss: 6.4823, dt: 1289.30ms, fracRes: 0.0260, norm(attn): 0.2051, norm(output): 0.3125, norm(x): 0.2877, norm(y): 1.0004, norm:4.5407, tok/sec: 101661.22, flops:41.82, batch-reuse:1
@ 1478 train 6.1567 , allloss: 6.4126, dt: 1277.76ms, fracRes: 0.0261, norm(attn): 0.2080, norm(output): 0.3105, norm(x): 0.2885, norm(y): 1.0004, norm:2.5564, tok/sec: 102579.45, flops:42.20, batch-reuse:1
@ 1479 train 6.1944 , allloss: 6.4494, dt: 1276.99ms, fracRes: 0.0242, norm(attn): 0.2090, norm(output): 0.3125, norm(x): 0.2922, norm(y): 1.0003, norm:4.1954, tok/sec: 102641.20, flops:42.22, batch-reuse:1
@ 1480 train 6.2086 , allloss: 6.4655, dt: 1280.51ms, fracRes: 0.0267, norm(attn): 0.2148, norm(output): 0.3125, norm(x): 0.2886, norm(y): 1.0003, norm:3.2511, tok/sec: 102359.49, flops:42.11, batch-reuse:1
@ 1481 train 6.2067 , allloss: 6.4657, dt: 1286.44ms, fracRes: 0.0278, norm(attn): 0.2090, norm(output): 0.3105, norm(x): 0.2887, norm(y): 1.0003, norm:2.8164, tok/sec: 101887.10, flops:41.91, batch-reuse:1
@ 1482 train 6.2525 , allloss: 6.5085, dt: 1274.30ms, fracRes: 0.0262, norm(attn): 0.2129, norm(output): 0.3125, norm(x): 0.2887, norm(y): 1.0003, norm:4.2345, tok/sec: 102857.78, flops:42.31, batch-reuse:1
@ 1483 train 6.2430 , allloss: 6.5061, dt: 1262.44ms, fracRes: 0.0253, norm(attn): 0.2061, norm(output): 0.3105, norm(x): 0.2870, norm(y): 1.0002, norm:2.7405, tok/sec: 103824.13, flops:42.71, batch-reuse:1
@ 1484 train 6.2996 , allloss: 6.5603, dt: 1298.80ms, fracRes: 0.0243, norm(attn): 0.2119, norm(output): 0.3086, norm(x): 0.2843, norm(y): 1.0002, norm:2.4337, tok/sec: 100917.96, flops:41.51, batch-reuse:1
@ 1485 train 6.3857 , allloss: 6.6480, dt: 1324.38ms, fracRes: 0.0233, norm(attn): 0.2041, norm(output): 0.3164, norm(x): 0.2920, norm(y): 1.0001, norm:5.9603, tok/sec: 98968.83, flops:40.71, batch-reuse:1
@ 1486 train 6.3308 , allloss: 6.5883, dt: 1325.29ms, fracRes: 0.0252, norm(attn): 0.2051, norm(output): 0.3125, norm(x): 0.2912, norm(y): 1.0002, norm:3.4713, tok/sec: 98900.53, flops:40.68, batch-reuse:1
@ 1487 train 6.2755 , allloss: 6.5360, dt: 1301.37ms, fracRes: 0.0265, norm(attn): 0.2051, norm(output): 0.3125, norm(x): 0.2891, norm(y): 1.0002, norm:2.3741, tok/sec: 100718.81, flops:41.43, batch-reuse:1
@ 1488 train 6.2777 , allloss: 6.5410, dt: 1294.01ms, fracRes: 0.0238, norm(attn): 0.2012, norm(output): 0.3145, norm(x): 0.2931, norm(y): 1.0000, norm:4.1994, tok/sec: 101291.38, flops:41.67, batch-reuse:1
@ 1489 train 6.4224 , allloss: 6.6954, dt: 1289.38ms, fracRes: 0.0251, norm(attn): 0.1973, norm(output): 0.3125, norm(x): 0.2918, norm(y): 1.0001, norm:3.3607, tok/sec: 101654.87, flops:41.82, batch-reuse:1
@ 1490 train 6.4074 , allloss: 6.6808, dt: 1300.74ms, fracRes: 0.0259, norm(attn): 0.1982, norm(output): 0.3125, norm(x): 0.2917, norm(y): 1.0001, norm:3.1261, tok/sec: 100767.18, flops:41.45, batch-reuse:1
@ 1491 train 6.4427 , allloss: 6.7187, dt: 1284.65ms, fracRes: 0.0265, norm(attn): 0.1973, norm(output): 0.3125, norm(x): 0.2917, norm(y): 1.0001, norm:3.0117, tok/sec: 102029.02, flops:41.97, batch-reuse:1
@ 1492 train 6.3196 , allloss: 6.5859, dt: 1305.31ms, fracRes: 0.0254, norm(attn): 0.1963, norm(output): 0.3125, norm(x): 0.2916, norm(y): 1.0001, norm:3.2721, tok/sec: 100414.52, flops:41.31, batch-reuse:1
@ 1493 train 6.3082 , allloss: 6.5868, dt: 1311.69ms, fracRes: 0.0270, norm(attn): 0.1885, norm(output): 0.3145, norm(x): 0.2941, norm(y): 1.0001, norm:3.0204, tok/sec: 99925.92, flops:41.10, batch-reuse:1
@ 1494 train 6.3244 , allloss: 6.5913, dt: 1276.21ms, fracRes: 0.0265, norm(attn): 0.1934, norm(output): 0.3145, norm(x): 0.2951, norm(y): 1.0001, norm:2.2711, tok/sec: 102704.19, flops:42.25, batch-reuse:1
@ 1495 train 6.2869 , allloss: 6.5439, dt: 1264.14ms, fracRes: 0.0256, norm(attn): 0.2051, norm(output): 0.3105, norm(x): 0.2852, norm(y): 1.0002, norm:3.0759, tok/sec: 103684.65, flops:42.65, batch-reuse:1
@ 1496 train 6.3561 , allloss: 6.6078, dt: 1265.37ms, fracRes: 0.0243, norm(attn): 0.2119, norm(output): 0.3047, norm(x): 0.2835, norm(y): 1.0002, norm:4.9685, tok/sec: 103584.21, flops:42.61, batch-reuse:1
@ 1497 train 6.2336 , allloss: 6.4990, dt: 1268.54ms, fracRes: 0.0264, norm(attn): 0.2051, norm(output): 0.3066, norm(x): 0.2851, norm(y): 1.0002, norm:2.8256, tok/sec: 103324.76, flops:42.50, batch-reuse:1
@ 1498 train 6.3881 , allloss: 6.6585, dt: 1285.80ms, fracRes: 0.0255, norm(attn): 0.2061, norm(output): 0.3066, norm(x): 0.2857, norm(y): 1.0001, norm:4.5374, tok/sec: 101938.17, flops:41.93, batch-reuse:1
@ 1499 train 6.4598 , allloss: 6.7247, dt: 1275.78ms, fracRes: 0.0226, norm(attn): 0.2070, norm(output): 0.3125, norm(x): 0.2901, norm(y): 1.0001, norm:6.1180, tok/sec: 102738.39, flops:42.26, batch-reuse:1
@ 1500 train 6.4367 , allloss: 6.6947, dt: 1272.36ms, fracRes: 0.0232, norm(attn): 0.2197, norm(output): 0.3105, norm(x): 0.2865, norm(y): 1.0001, norm:5.5453, tok/sec: 103014.52, flops:42.38, batch-reuse:1
@ 1501 train 6.2595 , allloss: 6.5212, dt: 1291.55ms, fracRes: 0.0218, norm(attn): 0.2178, norm(output): 0.3066, norm(x): 0.2834, norm(y): 1.0001, norm:2.7917, tok/sec: 101484.33, flops:41.75, batch-reuse:1
@ 1502 train 6.3261 , allloss: 6.5938, dt: 1296.35ms, fracRes: 0.0197, norm(attn): 0.2041, norm(output): 0.3105, norm(x): 0.2888, norm(y): 1.0001, norm:5.3423, tok/sec: 101108.22, flops:41.59, batch-reuse:1
@ 1503 train 6.3476 , allloss: 6.6247, dt: 1319.97ms, fracRes: 0.0173, norm(attn): 0.1895, norm(output): 0.3145, norm(x): 0.2965, norm(y): 1.0000, norm:3.6958, tok/sec: 99299.06, flops:40.85, batch-reuse:1
@ 1504 train 6.3758 , allloss: 6.6575, dt: 1314.79ms, fracRes: 0.0210, norm(attn): 0.2021, norm(output): 0.3105, norm(x): 0.2899, norm(y): 1.0000, norm:3.7482, tok/sec: 99690.12, flops:41.01, batch-reuse:1
@ 1505 train 6.3221 , allloss: 6.5976, dt: 1296.84ms, fracRes: 0.0173, norm(attn): 0.2002, norm(output): 0.3105, norm(x): 0.2895, norm(y): 1.0000, norm:4.3170, tok/sec: 101070.58, flops:41.58, batch-reuse:1
@ 1506 train 6.3571 , allloss: 6.6205, dt: 1316.35ms, fracRes: 0.0181, norm(attn): 0.2041, norm(output): 0.3086, norm(x): 0.2870, norm(y): 1.0001, norm:2.9470, tok/sec: 99572.11, flops:40.96, batch-reuse:1
@ 1507 train 6.3953 , allloss: 6.6563, dt: 1305.17ms, fracRes: 0.0170, norm(attn): 0.1973, norm(output): 0.3164, norm(x): 0.2961, norm(y): 1.0000, norm:4.0374, tok/sec: 100425.58, flops:41.31, batch-reuse:1
@ 1508 train 6.3547 , allloss: 6.6223, dt: 1300.07ms, fracRes: 0.0165, norm(attn): 0.1904, norm(output): 0.3145, norm(x): 0.2970, norm(y): 1.0001, norm:4.0178, tok/sec: 100819.31, flops:41.47, batch-reuse:1
@ 1509 train 6.3046 , allloss: 6.5695, dt: 1286.74ms, fracRes: 0.0193, norm(attn): 0.1982, norm(output): 0.3105, norm(x): 0.2898, norm(y): 1.0002, norm:3.6077, tok/sec: 101863.83, flops:41.90, batch-reuse:1
@ 1510 train 6.3628 , allloss: 6.6214, dt: 1288.55ms, fracRes: 0.0178, norm(attn): 0.1895, norm(output): 0.3145, norm(x): 0.2934, norm(y): 1.0001, norm:2.9264, tok/sec: 101720.51, flops:41.84, batch-reuse:1
@ 1511 train 6.3642 , allloss: 6.6241, dt: 1267.70ms, fracRes: 0.0205, norm(attn): 0.1973, norm(output): 0.3125, norm(x): 0.2901, norm(y): 1.0001, norm:2.7508, tok/sec: 103393.51, flops:42.53, batch-reuse:1
@ 1512 train 6.3833 , allloss: 6.6417, dt: 1292.77ms, fracRes: 0.0169, norm(attn): 0.1914, norm(output): 0.3125, norm(x): 0.2928, norm(y): 1.0001, norm:5.1439, tok/sec: 101388.26, flops:41.71, batch-reuse:1
@ 1513 train 6.3571 , allloss: 6.6156, dt: 1268.19ms, fracRes: 0.0173, norm(attn): 0.1943, norm(output): 0.3105, norm(x): 0.2882, norm(y): 1.0001, norm:3.3546, tok/sec: 103353.99, flops:42.51, batch-reuse:1
@ 1514 train 6.4647 , allloss: 6.7285, dt: 1293.21ms, fracRes: 0.0198, norm(attn): 0.2031, norm(output): 0.3086, norm(x): 0.2854, norm(y): 1.0001, norm:2.7018, tok/sec: 101354.09, flops:41.69, batch-reuse:1
@ 1515 train 6.3400 , allloss: 6.6014, dt: 1303.88ms, fracRes: 0.0182, norm(attn): 0.1992, norm(output): 0.3105, norm(x): 0.2877, norm(y): 1.0000, norm:3.1472, tok/sec: 100524.59, flops:41.35, batch-reuse:1
@ 1516 train 6.2192 , allloss: 6.4819, dt: 1288.70ms, fracRes: 0.0201, norm(attn): 0.2031, norm(output): 0.3027, norm(x): 0.2826, norm(y): 1.0001, norm:3.0981, tok/sec: 101708.43, flops:41.84, batch-reuse:1
@ 1517 train 6.2829 , allloss: 6.5505, dt: 1296.72ms, fracRes: 0.0203, norm(attn): 0.2002, norm(output): 0.3105, norm(x): 0.2868, norm(y): 1.0001, norm:2.9537, tok/sec: 101079.50, flops:41.58, batch-reuse:1
@ 1518 train 6.2843 , allloss: 6.5445, dt: 1279.83ms, fracRes: 0.0191, norm(attn): 0.2021, norm(output): 0.3105, norm(x): 0.2897, norm(y): 1.0000, norm:3.9675, tok/sec: 102413.57, flops:42.13, batch-reuse:1
@ 1519 train 6.2734 , allloss: 6.5335, dt: 1263.66ms, fracRes: 0.0203, norm(attn): 0.2100, norm(output): 0.3066, norm(x): 0.2849, norm(y): 1.0000, norm:3.0759, tok/sec: 103723.72, flops:42.67, batch-reuse:1
@ 1520 train 6.3084 , allloss: 6.5717, dt: 1289.79ms, fracRes: 0.0203, norm(attn): 0.2041, norm(output): 0.3008, norm(x): 0.2821, norm(y): 1.0001, norm:4.3049, tok/sec: 101622.81, flops:41.80, batch-reuse:1
@ 1521 train 6.2922 , allloss: 6.5619, dt: 1294.95ms, fracRes: 0.0192, norm(attn): 0.2021, norm(output): 0.3105, norm(x): 0.2873, norm(y): 1.0001, norm:2.1572, tok/sec: 101218.11, flops:41.64, batch-reuse:1
@ 1522 train 6.3315 , allloss: 6.6044, dt: 1278.80ms, fracRes: 0.0191, norm(attn): 0.2021, norm(output): 0.3105, norm(x): 0.2901, norm(y): 1.0000, norm:3.1287, tok/sec: 102496.28, flops:42.16, batch-reuse:1
@ 1523 train 6.3062 , allloss: 6.5740, dt: 1292.04ms, fracRes: 0.0160, norm(attn): 0.2021, norm(output): 0.3125, norm(x): 0.2911, norm(y): 1.0000, norm:4.2231, tok/sec: 101445.45, flops:41.73, batch-reuse:1
@ 1524 train 6.2536 , allloss: 6.5198, dt: 1267.59ms, fracRes: 0.0184, norm(attn): 0.2051, norm(output): 0.3027, norm(x): 0.2830, norm(y): 1.0000, norm:3.6029, tok/sec: 103402.28, flops:42.53, batch-reuse:1
@ 1525 train 6.2604 , allloss: 6.5326, dt: 1325.06ms, fracRes: 0.0174, norm(attn): 0.1982, norm(output): 0.3086, norm(x): 0.2869, norm(y): 1.0000, norm:3.5914, tok/sec: 98918.08, flops:40.69, batch-reuse:1
@ 1526 train 6.3700 , allloss: 6.6459, dt: 1312.49ms, fracRes: 0.0164, norm(attn): 0.1885, norm(output): 0.3125, norm(x): 0.2932, norm(y): 1.0000, norm:4.1226, tok/sec: 99865.00, flops:41.08, batch-reuse:1
@ 1527 train 6.2899 , allloss: 6.5629, dt: 1299.97ms, fracRes: 0.0167, norm(attn): 0.1914, norm(output): 0.3125, norm(x): 0.2922, norm(y): 0.9999, norm:3.8602, tok/sec: 100827.17, flops:41.48, batch-reuse:1
@ 1528 train 6.3465 , allloss: 6.6194, dt: 1291.04ms, fracRes: 0.0178, norm(attn): 0.2002, norm(output): 0.3066, norm(x): 0.2865, norm(y): 1.0000, norm:3.3165, tok/sec: 101524.69, flops:41.76, batch-reuse:1
@ 1529 train 6.2538 , allloss: 6.5294, dt: 1278.57ms, fracRes: 0.0184, norm(attn): 0.2012, norm(output): 0.3066, norm(x): 0.2858, norm(y): 1.0000, norm:3.0471, tok/sec: 102514.27, flops:42.17, batch-reuse:1
@ 1530 train 6.3038 , allloss: 6.5790, dt: 1287.24ms, fracRes: 0.0177, norm(attn): 0.1963, norm(output): 0.3105, norm(x): 0.2888, norm(y): 1.0000, norm:2.7488, tok/sec: 101824.32, flops:41.89, batch-reuse:1
@ 1531 train 6.2046 , allloss: 6.4827, dt: 1329.26ms, fracRes: 0.0178, norm(attn): 0.2002, norm(output): 0.3125, norm(x): 0.2893, norm(y): 0.9999, norm:2.6681, tok/sec: 98605.27, flops:40.56, batch-reuse:1
@ 1532 train 6.2471 , allloss: 6.5173, dt: 1319.35ms, fracRes: 0.0165, norm(attn): 0.1904, norm(output): 0.3125, norm(x): 0.2900, norm(y): 0.9999, norm:2.7264, tok/sec: 99346.12, flops:40.87, batch-reuse:1
@ 1533 train 6.2251 , allloss: 6.4906, dt: 1281.26ms, fracRes: 0.0169, norm(attn): 0.1914, norm(output): 0.3125, norm(x): 0.2912, norm(y): 0.9999, norm:2.5261, tok/sec: 102299.05, flops:42.08, batch-reuse:1
@ 1534 train 6.2691 , allloss: 6.5315, dt: 1286.83ms, fracRes: 0.0172, norm(attn): 0.2012, norm(output): 0.3105, norm(x): 0.2898, norm(y): 0.9999, norm:3.2190, tok/sec: 101856.88, flops:41.90, batch-reuse:1
@ 1535 train 6.2798 , allloss: 6.5428, dt: 1311.73ms, fracRes: 0.0195, norm(attn): 0.2051, norm(output): 0.3008, norm(x): 0.2825, norm(y): 1.0000, norm:2.9267, tok/sec: 99923.15, flops:41.10, batch-reuse:1
@ 1536 train 6.2520 , allloss: 6.5135, dt: 1236.87ms, fracRes: 0.0166, norm(attn): 0.1973, norm(output): 0.3105, norm(x): 0.2882, norm(y): 0.9998, norm:4.4522, tok/sec: 105971.08, flops:43.59, batch-reuse:1
@ 1537 train 6.2105 , allloss: 6.4849, dt: 1259.80ms, fracRes: 0.0207, norm(attn): 0.2021, norm(output): 0.3047, norm(x): 0.2843, norm(y): 0.9999, norm:2.9126, tok/sec: 104042.23, flops:42.80, batch-reuse:1
@ 1538 train 6.2188 , allloss: 6.4957, dt: 1272.56ms, fracRes: 0.0198, norm(attn): 0.2041, norm(output): 0.3027, norm(x): 0.2838, norm(y): 0.9998, norm:3.2028, tok/sec: 102998.48, flops:42.37, batch-reuse:1
@ 1539 train 6.3254 , allloss: 6.5913, dt: 1297.92ms, fracRes: 0.0151, norm(attn): 0.1953, norm(output): 0.3105, norm(x): 0.2905, norm(y): 0.9997, norm:5.6625, tok/sec: 100986.34, flops:41.54, batch-reuse:1
@ 1540 train 6.2466 , allloss: 6.5172, dt: 1289.52ms, fracRes: 0.0176, norm(attn): 0.1914, norm(output): 0.3125, norm(x): 0.2924, norm(y): 0.9998, norm:2.7605, tok/sec: 101643.91, flops:41.81, batch-reuse:1
@ 1541 train 6.2385 , allloss: 6.5110, dt: 1255.22ms, fracRes: 0.0208, norm(attn): 0.1992, norm(output): 0.3066, norm(x): 0.2875, norm(y): 0.9998, norm:3.4971, tok/sec: 104421.36, flops:42.95, batch-reuse:1
@ 1542 train 6.2647 , allloss: 6.5318, dt: 1261.77ms, fracRes: 0.0197, norm(attn): 0.1904, norm(output): 0.3105, norm(x): 0.2901, norm(y): 0.9998, norm:2.6224, tok/sec: 103879.63, flops:42.73, batch-reuse:1
@ 1543 train 6.5469 , allloss: 6.8166, dt: 1285.39ms, fracRes: 0.0166, norm(attn): 0.1924, norm(output): 0.3125, norm(x): 0.2945, norm(y): 0.9997, norm:4.4140, tok/sec: 101970.77, flops:41.95, batch-reuse:1
@ 1544 train 6.2314 , allloss: 6.5058, dt: 1279.87ms, fracRes: 0.0179, norm(attn): 0.1895, norm(output): 0.3164, norm(x): 0.2979, norm(y): 0.9997, norm:5.8663, tok/sec: 102410.07, flops:42.13, batch-reuse:1
@ 1545 train 6.2660 , allloss: 6.5572, dt: 1300.02ms, fracRes: 0.0193, norm(attn): 0.1963, norm(output): 0.3125, norm(x): 0.2950, norm(y): 0.9998, norm:4.2725, tok/sec: 100823.32, flops:41.47, batch-reuse:1
@ 1546 train 6.6359 , allloss: 6.9320, dt: 1300.09ms, fracRes: 0.0166, norm(attn): 0.1885, norm(output): 0.3125, norm(x): 0.2928, norm(y): 0.9997, norm:4.4104, tok/sec: 100817.80, flops:41.47, batch-reuse:1
@ 1547 train 6.2803 , allloss: 6.5634, dt: 1296.67ms, fracRes: 0.0150, norm(attn): 0.1826, norm(output): 0.3145, norm(x): 0.2972, norm(y): 0.9997, norm:4.6494, tok/sec: 101083.57, flops:41.58, batch-reuse:1
@ 1548 train 6.3759 , allloss: 6.6567, dt: 1281.37ms, fracRes: 0.0202, norm(attn): 0.1885, norm(output): 0.3164, norm(x): 0.2996, norm(y): 0.9997, norm:4.5990, tok/sec: 102290.75, flops:42.08, batch-reuse:1
@ 1549 train 6.3415 , allloss: 6.6166, dt: 1297.27ms, fracRes: 0.0202, norm(attn): 0.1875, norm(output): 0.3184, norm(x): 0.2988, norm(y): 0.9998, norm:2.9866, tok/sec: 101036.90, flops:41.56, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0062,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0591,     0.7617,     0.1777,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0693,     0.3945,     0.2812,     0.2539,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0104,     0.3574,     0.1553,     0.3926,     0.0854,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0344,     0.2754,     0.0928,     0.4766,     0.1162,     0.0048,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0125,     0.3457,     0.0918,     0.4941,     0.0276,     0.0010,     0.0289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0884,     0.0444,     0.0425,     0.0052,     0.0442,     0.6367,     0.0811,     0.0564,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0242,     0.1562,     0.1016,     0.5312,     0.0483,     0.0018,     0.0928,     0.0371,     0.0080,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0737,     0.0854,     0.0454,     0.3105,     0.1621,     0.0747,     0.0708,     0.0304,     0.1113,     0.0356,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0083,     0.1436,     0.0674,     0.6133,     0.0942,     0.0002,     0.0464,     0.0244,     0.0014,     0.0004,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0481,     0.1729,     0.0459,     0.0413,     0.0688,     0.0859,     0.0713,     0.0339,     0.1245,     0.0933,     0.1592,     0.0547,     0.0000,     0.0000,     0.0000],
        [    0.0574,     0.0211,     0.0471,     0.0118,     0.0140,     0.2295,     0.0264,     0.0278,     0.1172,     0.1318,     0.1973,     0.0859,     0.0322,     0.0000,     0.0000],
        [    0.0194,     0.1670,     0.0991,     0.4414,     0.0618,     0.0015,     0.0698,     0.0256,     0.0050,     0.0045,     0.0030,     0.0222,     0.0718,     0.0084,     0.0000],
        [    0.0205,     0.1602,     0.1240,     0.2578,     0.0820,     0.0066,     0.0557,     0.0393,     0.0089,     0.0062,     0.0073,     0.0425,     0.1191,     0.0101,     0.0601]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0093, -0.0126,  0.0090,  ...,  0.0072, -0.0187,  0.0178],
        [-0.0004, -0.0155,  0.0136,  ..., -0.0086, -0.0209,  0.0496],
        [ 0.0011, -0.0008, -0.0222,  ...,  0.0120, -0.0140, -0.0228],
        ...,
        [ 0.0271,  0.0070, -0.0146,  ..., -0.0104, -0.0303, -0.0174],
        [-0.0044,  0.0186,  0.0088,  ...,  0.0039, -0.0331, -0.0056],
        [-0.0188,  0.0186, -0.0265,  ...,  0.0064, -0.0202,  0.0340]], device='cuda:0', requires_grad=True)
K: tensor([-0.1475, -0.0874,  0.2305,  0.6562,  0.5078,  1.1406, -1.0781, -0.0457, -0.3906, -1.1875,  0.5234, -0.1465, -0.4668,  0.5273, -0.2891,  0.1436,  0.4043, -0.4648,  0.8555, -1.3047, -0.7734,  0.5469,  1.0312, -0.3418,  0.0562, -0.0698,  0.1377,  1.1016, -0.3516, -0.5469, -0.0579,  0.0505,
         0.6367, -0.1128, -1.1641,  0.4258,  1.0078,  0.6406, -0.1602,  0.5391, -0.3066,  0.2520, -0.0019, -0.0623,  0.0311,  0.2832,  0.4609, -0.3535,  0.0278,  0.5078,  0.1914, -1.2422,  0.2832,  0.4824, -0.9648,  0.2500, -0.7305,  0.3184, -0.0383, -0.0859, -0.0474,  0.4043, -0.0320,  0.7266],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0582,  0.0138,  0.0095,  ...,  0.0053,  0.0016, -0.0139],
        [-0.0172,  0.0081, -0.0263,  ..., -0.0200, -0.0021,  0.0003],
        [ 0.0538, -0.0044, -0.0182,  ...,  0.0073,  0.0155, -0.0046],
        ...,
        [ 0.0016, -0.0321,  0.0068,  ..., -0.0216, -0.0010, -0.0013],
        [ 0.0214, -0.0131, -0.0208,  ..., -0.0077, -0.0156,  0.0159],
        [-0.0054, -0.0288,  0.0028,  ..., -0.0140,  0.0292, -0.0254]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2754,  0.2080, -0.7266,  0.0986,  1.7422, -0.2910, -0.4551, -1.1797,  0.6133, -0.3086,  1.0859,  0.2236, -1.2500,  0.7227,  0.8477, -0.4219, -0.5078, -0.9062,  0.7266, -0.6367, -1.2969,  0.7070, -1.2500, -1.1719, -0.6289,  0.0559,  1.0859,  0.7539,  1.2656, -0.6406, -0.0576, -1.0234,
         0.0786,  0.8125,  0.5430, -0.2402,  1.8281, -0.6094,  1.1875,  1.3438, -0.4727, -0.3516, -0.6602, -1.3984,  0.9219,  0.8672, -0.8789, -0.4043,  0.6484, -0.8750,  1.6406, -0.2891, -1.0938,  1.6172, -0.2969,  0.7617, -0.6172, -0.4688, -0.2451, -1.2734, -0.2461,  0.7109, -0.9492, -0.0148],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  5.0625,  3.2344,  1.6875,  1.9453, -0.2051,  1.8594,  1.6953,  0.5547, -0.4258, -0.0104,  1.2031,  2.0469,  0.6055,  1.8594],
        [ 0.0000,  2.5625,  1.1016,  0.2334,  0.4824,  1.1094,  0.8672,  0.1089,  0.9883,  0.8281,  1.5000,  0.6797,  0.5586,  0.8477,  1.3750],
        [ 0.0000,  1.7422,  1.3984,  1.2969,  0.1523, -0.5781, -0.0117,  0.1113, -0.6602, -0.4707, -0.5547,  0.9648,  0.8828, -0.6094,  0.3691],
        [ 0.0000,  3.5469,  2.7031,  3.6406,  2.1094, -3.0000,  1.6562,  1.2656, -1.4375, -2.0156, -2.3281,  0.7383,  2.7031, -1.0703,  1.0391],
        [ 0.0000,  2.0781,  0.9961,  2.6250,  1.2188, -1.9609,  0.4102, -0.5195, -0.8477, -1.5391, -0.9766, -0.1167,  0.7500, -0.6367,  0.2598],
        [ 0.0000,  3.3125,  1.9922,  3.6719,  0.7930, -2.5156,  0.8398,  0.6953, -1.1016, -1.6328, -1.5938,  0.7305,  1.6875, -0.6406,  0.5586],
        [ 0.0000, -0.6875, -0.7344, -2.8438, -0.6953,  1.9766, -0.0874, -0.4492,  1.6406,  2.2656,  2.2500, -0.1465, -0.4551,  1.8984,  0.0674],
        [ 0.0000,  1.8672,  1.4375,  3.0938,  0.6914, -2.6094,  1.3438,  0.4277, -1.1016, -1.8359, -1.6562, -0.0781,  1.4922, -0.4902,  0.8281],
        [ 0.0000,  0.1465, -0.4844,  1.4375,  0.7930,  0.0134, -0.0378, -0.8867,  0.4160, -0.7266,  0.1108, -0.3398,  0.3398,  0.8359, -0.3906],
        [ 0.0000,  2.8594,  2.0938,  4.3125,  2.4375, -3.5781,  1.7188,  1.0781, -1.7812, -3.0000, -3.1250, -0.0498,  2.6250, -1.3672,  0.7969],
        [ 0.0000,  1.2734, -0.0500, -0.1582,  0.3574,  0.5820,  0.3887, -0.3535,  0.9492,  0.6641,  1.1953,  0.1279,  0.0986,  0.7852,  0.5156],
        [ 0.0000, -0.9961, -0.1943, -1.5781, -1.4141,  1.3906, -0.7773, -0.7227,  0.7188,  0.8320,  1.2344,  0.4023, -0.5742,  0.6562, -0.1279],
        [ 0.0000,  2.1562,  1.6328,  3.1250,  1.1562, -2.5781,  1.2812,  0.2773, -1.3438, -1.4688, -1.8672,  0.1338,  1.3125, -0.8359,  0.5156],
        [ 0.0000,  2.0625,  1.8047,  2.5312,  1.3828, -1.1328,  1.0000,  0.6484, -0.8398, -1.1953, -1.0312,  0.7305,  1.7578, -0.7109,  1.0781]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2715],
        [0.2496],
        [0.3280],
        [0.2410],
        [0.2644],
        [0.2381],
        [0.0603],
        [0.0172],
        [0.0533],
        [0.0026],
        [0.0997],
        [0.0535],
        [0.0102],
        [0.0163]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1953, 0.8047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0520, 0.7695, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.2949, 0.2490, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.0535, 0.1660, 0.6836, 0.0332, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.1309, 0.1357, 0.5859, 0.0309, 0.0410, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0415, 0.0786, 0.2422, 0.0776, 0.0203, 0.4648, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0356, 0.0227, 0.0081, 0.0073, 0.2002, 0.6172, 0.0806, 0.0300, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0371, 0.0182, 0.0601, 0.2910, 0.0204, 0.0102, 0.3496, 0.1436, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0388, 0.0894, 0.0618, 0.0967, 0.0265, 0.1680, 0.1992, 0.1357, 0.1157, 0.0688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0317, 0.1187, 0.1797, 0.2480, 0.0112, 0.0215, 0.1157, 0.1299, 0.0542, 0.0496, 0.0403, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0244, 0.1729, 0.0806, 0.0330, 0.0349, 0.1436, 0.1279, 0.0615, 0.1328, 0.0723, 0.0530, 0.0630, 0.0000, 0.0000, 0.0000],
        [0.0172, 0.0154, 0.0219, 0.0120, 0.0527, 0.4199, 0.0248, 0.0200, 0.2021, 0.0703, 0.0747, 0.0128, 0.0562, 0.0000, 0.0000],
        [0.0221, 0.0164, 0.0540, 0.1445, 0.0160, 0.0090, 0.2393, 0.0928, 0.0410, 0.0156, 0.0168, 0.0767, 0.2207, 0.0352, 0.0000],
        [0.0114, 0.0145, 0.0337, 0.0232, 0.0194, 0.0182, 0.2158, 0.0623, 0.0850, 0.0160, 0.0173, 0.0420, 0.3047, 0.0552, 0.0815]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0093, -0.0126,  0.0090,  ...,  0.0072, -0.0187,  0.0178],
        [-0.0004, -0.0155,  0.0136,  ..., -0.0086, -0.0209,  0.0496],
        [ 0.0011, -0.0008, -0.0222,  ...,  0.0120, -0.0140, -0.0228],
        ...,
        [ 0.0271,  0.0070, -0.0146,  ..., -0.0104, -0.0303, -0.0174],
        [-0.0044,  0.0186,  0.0088,  ...,  0.0039, -0.0331, -0.0056],
        [-0.0188,  0.0186, -0.0265,  ...,  0.0064, -0.0202,  0.0340]], device='cuda:0', requires_grad=True)
K: tensor([-0.1602,  0.4883, -1.2109,  0.7969, -0.1147,  1.6484, -0.8750, -0.2285, -0.6602, -0.2852,  0.9492, -0.9141, -0.4883,  0.9922, -0.4160, -0.3945,  0.7305, -0.9102,  0.2676, -1.3750, -0.6680,  0.3105,  0.8555,  0.6523,  0.4336,  0.3242, -1.1406,  1.5312, -0.4863,  0.6562, -0.6289,  0.5508,
         0.1963,  2.0469,  0.1523,  0.7656, -0.0928, -1.3750,  1.0625,  1.0859, -0.8203,  0.2227,  0.0986, -0.4941, -0.3691,  1.5234, -0.8906,  0.2051, -0.4121,  0.6680,  0.4688, -0.8125,  0.3770,  0.4160, -0.8281,  0.3457,  0.7500, -0.1230,  0.2422,  1.2969, -0.1992,  1.6797,  0.0220, -1.4219],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0582,  0.0138,  0.0095,  ...,  0.0053,  0.0016, -0.0139],
        [-0.0172,  0.0081, -0.0263,  ..., -0.0200, -0.0021,  0.0003],
        [ 0.0538, -0.0044, -0.0182,  ...,  0.0073,  0.0155, -0.0046],
        ...,
        [ 0.0016, -0.0321,  0.0068,  ..., -0.0216, -0.0010, -0.0013],
        [ 0.0214, -0.0131, -0.0208,  ..., -0.0077, -0.0156,  0.0159],
        [-0.0054, -0.0288,  0.0028,  ..., -0.0140,  0.0292, -0.0254]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5938,  1.0781, -1.0859,  0.7852,  0.0461,  0.9805, -1.3594, -0.4707, -0.0276, -0.8867, -0.3770, -0.2637,  0.7227,  0.9258, -0.4531, -0.2539,  0.2402,  0.7305,  1.1094, -1.1797, -0.0112,  0.6406,  0.5625, -0.2617, -0.4258,  0.3203, -0.3711,  0.2051,  0.7070,  0.5391, -0.2793, -0.5703,
        -0.4883, -0.8984, -0.5000, -0.5547,  1.8672, -0.1670, -0.3145,  0.3027, -0.9453,  0.3379, -0.2637, -0.1787,  0.3945,  1.2344, -2.0781, -0.2969,  0.0295,  0.9844,  0.4883, -0.4258, -0.1084,  0.8984,  0.1328,  1.2109, -0.4453, -0.5430,  0.4023,  0.6211,  0.7422,  2.5156, -0.5664,  1.3125],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.4141, -0.1699, -1.1406,  1.1172,  1.5469,  1.8047,  0.9219,  1.3828,  0.9180,  0.2812, -0.4062,  1.8438,  1.0000,  0.2852],
        [ 0.0000,  2.6875,  1.2422, -0.4004,  0.7031,  2.7031,  1.6641,  0.6523,  2.3438,  1.9219,  1.2188,  1.0781,  1.0234,  2.0000,  1.3359],
        [ 0.0000,  0.6875,  0.5156,  0.7305,  0.3691,  1.2422,  1.0234,  1.1016,  0.8672,  0.2188,  0.2119,  0.2520,  1.3750,  0.6875,  0.3418],
        [ 0.0000, -0.1865,  0.9453,  2.3594, -0.6680, -1.9609,  2.0156,  2.0000, -0.0277, -0.6719, -0.6406,  1.0781,  2.6719, -0.0435,  1.9766],
        [ 0.0000,  0.5586,  0.5977,  2.0625, -0.8867, -0.6016,  0.9297,  0.8477, -0.8008, -0.1953, -0.2383,  0.8633,  0.7227, -0.6211,  1.3438],
        [ 0.0000, -0.5977,  0.0400,  1.1719,  0.0272, -1.3125,  1.8203,  0.7031,  0.6680, -0.4141,  0.1758,  0.2373,  2.0469,  0.5781,  1.1797],
        [ 0.0000, -0.4570, -1.4844, -1.5859,  1.7188,  2.8438,  0.8125, -0.1729,  1.9062,  1.3047,  0.9102, -1.5312,  1.2578,  1.4844, -0.9453],
        [ 0.0000, -0.7070,  0.4824,  2.0625, -0.5977, -1.2891,  2.2500,  1.3594,  0.6094, -0.5352, -0.1680,  0.9141,  2.6094,  0.4902,  2.0469],
        [ 0.0000,  0.8320,  0.4629,  0.9102, -0.3828,  1.4688,  1.6328,  1.2500,  1.0938,  0.5703, -0.0698,  0.3340,  1.4766,  0.7031,  0.8086],
        [ 0.0000,  1.3203,  1.7344,  2.0625, -1.0391, -0.3887,  1.2969,  1.4062,  0.5352,  0.4473,  0.2402,  2.2188,  1.0391,  0.3984,  2.0625],
        [ 0.0000,  1.9609,  1.1953,  0.3008,  0.3613,  1.7734,  1.6562,  0.9219,  1.6953,  1.0859,  0.7734,  0.9492,  1.3828,  1.4922,  1.0391],
        [ 0.0000, -0.1108,  0.2383, -0.3613,  1.1172,  3.1875,  0.3594,  0.1484,  2.4688,  1.4062,  1.4609, -0.3008,  1.1797,  2.1094, -0.0698],
        [ 0.0000, -0.2969,  0.8945,  1.8828, -0.3184, -0.8984,  2.3906,  1.4375,  0.6211, -0.3496, -0.2676,  1.2422,  2.2969,  0.4668,  2.1562],
        [ 0.0000,  0.2324,  1.0781,  0.7070,  0.5312,  0.4648,  2.9375,  1.6953,  2.0000,  0.3379,  0.4141,  1.2969,  3.2812,  1.5703,  1.9609]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0512],
        [0.1298],
        [0.2723],
        [0.1614],
        [0.1683],
        [0.1501],
        [0.0950],
        [0.0975],
        [0.1184],
        [0.0971],
        [0.0691],
        [0.0620],
        [0.0455],
        [0.0441]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.8203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0303, 0.7422, 0.2266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.4688, 0.2695, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0476, 0.2539, 0.3027, 0.3652, 0.0306, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.4355, 0.2480, 0.1758, 0.0248, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0693, 0.0908, 0.1230, 0.1357, 0.1309, 0.3750, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0408, 0.0566, 0.0184, 0.0111, 0.2168, 0.5625, 0.0469, 0.0457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0391, 0.1191, 0.1426, 0.1641, 0.0281, 0.0588, 0.1895, 0.1943, 0.0640, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0267, 0.2109, 0.1001, 0.0398, 0.0283, 0.2207, 0.0718, 0.1387, 0.0747, 0.0889, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0238, 0.2314, 0.2295, 0.1216, 0.0165, 0.0527, 0.0583, 0.0991, 0.0364, 0.0811, 0.0493, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0201, 0.1826, 0.0903, 0.0231, 0.0332, 0.2402, 0.0918, 0.0591, 0.1064, 0.0513, 0.0464, 0.0559, 0.0000, 0.0000, 0.0000],
        [0.0204, 0.0581, 0.0469, 0.0225, 0.0938, 0.2773, 0.0272, 0.0403, 0.1768, 0.0776, 0.0923, 0.0219, 0.0459, 0.0000, 0.0000],
        [0.0253, 0.0483, 0.0771, 0.0996, 0.0178, 0.0297, 0.1484, 0.1167, 0.0359, 0.0304, 0.0258, 0.1167, 0.1875, 0.0405, 0.0000],
        [0.0136, 0.0248, 0.0381, 0.0330, 0.0243, 0.0601, 0.1797, 0.0615, 0.0762, 0.0203, 0.0249, 0.0422, 0.2676, 0.0713, 0.0625]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0093, -0.0126,  0.0090,  ...,  0.0072, -0.0187,  0.0178],
        [-0.0004, -0.0155,  0.0136,  ..., -0.0086, -0.0209,  0.0496],
        [ 0.0011, -0.0008, -0.0222,  ...,  0.0120, -0.0140, -0.0228],
        ...,
        [ 0.0271,  0.0070, -0.0146,  ..., -0.0104, -0.0303, -0.0174],
        [-0.0044,  0.0186,  0.0088,  ...,  0.0039, -0.0331, -0.0056],
        [-0.0188,  0.0186, -0.0265,  ...,  0.0064, -0.0202,  0.0340]], device='cuda:0', requires_grad=True)
K: tensor([     0.0947,      0.6016,     -0.9414,      0.5352,     -0.4316,      1.8906,     -0.9961,     -0.1484,     -0.9102,     -0.2578,      1.3281,     -1.0000,     -0.6328,      0.8594,     -0.9570,     -0.3848,      0.2295,     -0.6758,      0.4902,     -1.2500,     -0.1963,     -0.1270,
             0.9141,      0.6914,      0.0537,     -0.0332,     -0.5547,      1.5781,     -0.3125,      0.5391,     -0.6250,      0.3594,      0.5742,      2.2188,      0.0747,      0.4980,      0.1387,     -1.5000,      0.6641,      1.2500,     -0.9961,     -0.4355,      0.0449,      0.0007,
             0.1562,      1.2578,     -0.5312,      0.0145,     -0.5156,      0.9102,      0.4941,     -0.3867,      0.2344,     -0.0559,     -0.5977,      0.4590,      1.0391,      0.0018,      0.0708,      1.4141,     -0.3047,      1.1953,      0.2354,     -1.2266], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0582,  0.0138,  0.0095,  ...,  0.0053,  0.0016, -0.0139],
        [-0.0172,  0.0081, -0.0263,  ..., -0.0200, -0.0021,  0.0003],
        [ 0.0538, -0.0044, -0.0182,  ...,  0.0073,  0.0155, -0.0046],
        ...,
        [ 0.0016, -0.0321,  0.0068,  ..., -0.0216, -0.0010, -0.0013],
        [ 0.0214, -0.0131, -0.0208,  ..., -0.0077, -0.0156,  0.0159],
        [-0.0054, -0.0288,  0.0028,  ..., -0.0140,  0.0292, -0.0254]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7422,  0.6992, -0.4746,  0.6406,  0.0422,  0.9297, -1.2969, -0.3398, -0.2402, -1.0391, -0.4121, -0.6719,  0.8125,  0.6953, -0.8203, -0.6836,  0.4883,  0.8477,  0.8125, -1.1562,  0.7031,  0.5156,  0.5430,  0.1963, -0.4863, -0.0659, -0.3652,  0.3613,  0.7969,  0.3535,  0.1934, -0.4512,
        -0.0806, -1.1172, -0.3164, -0.4902,  1.4531,  0.0408, -0.0067,  0.1689, -0.8984,  0.1484, -0.0192, -0.4844,  0.2656,  0.6797, -1.9062, -0.3848, -0.1455,  0.9688,  0.3047, -0.7031,  0.1641,  0.6641,  0.3008,  1.1875, -0.4395, -0.4609, -0.2002,  1.2500,  0.4805,  2.1250, -0.2949,  1.3281],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.5078, -0.0437, -0.6680,  0.5508,  1.5625,  0.5703,  0.7109,  0.9375,  0.3906,  0.3086, -0.6211,  1.0469,  0.8359,  0.0161],
        [ 0.0000,  3.2031,  2.0156,  0.1504,  0.2871,  2.3438,  0.9922,  1.0781,  1.5469,  1.3125,  1.1172,  1.5000,  0.0107,  1.5000,  1.3594],
        [ 0.0000,  1.6172,  1.0703,  0.6016,  0.4551,  1.8750,  0.7539,  0.9648,  0.9688,  0.6680,  0.5273,  0.7305,  0.5664,  0.8867,  0.4062],
        [ 0.0000,  1.6719,  1.8516,  2.0469, -0.4395,  0.1396,  1.5000,  2.0469,  0.0106,  0.2969, -0.0669,  1.8438,  1.8047,  0.0845,  2.0312],
        [ 0.0000,  2.3906,  1.8359,  1.4922, -0.4688,  0.6484,  0.7617,  1.4609, -0.4746,  0.6094,  0.1699,  1.6641,  0.2490, -0.3184,  1.7812],
        [ 0.0000, -0.0791,  0.1904,  0.4941,  0.5898,  0.5547,  1.6094,  0.5312,  1.1406,  0.1328,  0.5586,  0.4121,  1.8203,  1.1406,  1.0078],
        [ 0.0000,  0.3262, -0.7969, -1.3047,  1.6719,  2.6250,  0.1387,  0.1128,  1.8672,  0.9141,  1.0938, -1.4297,  0.9688,  1.6328, -1.0234],
        [ 0.0000,  1.1172,  1.2969,  1.4375, -0.3301,  0.4082,  1.5781,  1.6094,  0.4980,  0.3691,  0.2334,  1.5234,  1.7734,  0.5859,  2.1406],
        [ 0.0000,  2.0625,  1.3203,  0.3945,  0.0569,  2.1094,  0.9883,  1.6406,  1.0234,  1.2031,  0.5859,  0.9727,  1.0703,  0.8438,  0.8008],
        [ 0.0000,  2.2812,  2.2656,  1.6328, -0.3691,  0.7930,  0.8984,  1.4219,  0.4219,  1.2266,  0.7266,  2.5781,  0.1572,  0.3965,  2.0000],
        [ 0.0000,  2.2031,  1.5000,  0.1348,  0.4980,  2.4844,  1.5156,  1.0781,  1.6641,  0.9336,  0.8320,  1.0234,  0.9883,  1.5312,  0.7422],
        [ 0.0000,  1.0469,  0.8281,  0.0933,  1.5234,  2.6094,  0.2891,  0.6797,  2.1562,  1.3359,  1.5078,  0.0674,  0.8086,  1.9922, -0.0757],
        [ 0.0000,  0.6484,  1.1172,  1.3672, -0.3535,  0.1582,  1.7734,  1.5312,  0.3535,  0.1836,  0.0166,  1.5312,  2.0000,  0.4746,  2.1719],
        [ 0.0000,  0.5977,  1.0312,  0.8828,  0.5781,  1.4844,  2.5781,  1.5078,  1.7188,  0.3984,  0.6055,  1.1328,  2.9844,  1.6562,  1.5234]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1183],
        [0.1460],
        [0.1788],
        [0.1343],
        [0.1344],
        [0.1399],
        [0.0820],
        [0.0826],
        [0.0566],
        [0.0571],
        [0.0545],
        [0.0611],
        [0.0377],
        [0.0359]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4453,     0.5547,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0928,     0.0669,     0.8398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0679,     0.0322,     0.2217,     0.6797,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0496,     0.0309,     0.1924,     0.7148,     0.0109,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0344,     0.0457,     0.3281,     0.5625,     0.0108,     0.0164,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0742,     0.0121,     0.1709,     0.6641,     0.0026,     0.0464,     0.0287,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0165,     0.0140,     0.1494,     0.6133,     0.0030,     0.0085,     0.0081,     0.1875,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0591,     0.0801,     0.2676,     0.2451,     0.0157,     0.0452,     0.0342,     0.2500,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0474,     0.0060,     0.0776,     0.5547,     0.0011,     0.0295,     0.0173,     0.0742,     0.0009,     0.1924,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0371,     0.0232,     0.1279,     0.2656,     0.0049,     0.0260,     0.0168,     0.3066,     0.0006,     0.1748,     0.0156,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.0078,     0.0391,     0.0771,     0.0027,     0.0038,     0.0065,     0.0381,     0.0004,     0.0136,     0.0030,     0.8047,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.0007,     0.0046,     0.0146,     0.0001,     0.0010,     0.0006,     0.0047,     0.0001,     0.0087,     0.0008,     0.9609,     0.0027,     0.0000,     0.0000],
        [    0.0133,     0.0170,     0.0515,     0.0427,     0.0033,     0.0115,     0.0074,     0.0469,     0.0008,     0.0525,     0.0060,     0.7266,     0.0201,     0.0008,     0.0000],
        [    0.0003,     0.0002,     0.0032,     0.0059,     0.0000,     0.0003,     0.0001,     0.0024,     0.0000,     0.0017,     0.0002,     0.9805,     0.0006,     0.0000,     0.0025]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0093, -0.0126,  0.0090,  ...,  0.0072, -0.0187,  0.0178],
        [-0.0004, -0.0155,  0.0136,  ..., -0.0086, -0.0209,  0.0496],
        [ 0.0011, -0.0008, -0.0222,  ...,  0.0120, -0.0140, -0.0228],
        ...,
        [ 0.0271,  0.0070, -0.0146,  ..., -0.0104, -0.0303, -0.0174],
        [-0.0044,  0.0186,  0.0088,  ...,  0.0039, -0.0331, -0.0056],
        [-0.0188,  0.0186, -0.0265,  ...,  0.0064, -0.0202,  0.0340]], device='cuda:0', requires_grad=True)
K: tensor([     0.9297,     -0.2637,      0.4238,      0.6914,     -0.4824,      1.1875,     -0.7383,     -1.2188,     -0.7148,      0.0474,      2.1719,     -0.1494,     -0.2441,      0.5703,     -0.7539,      0.3242,     -0.7188,     -0.5898,     -0.0972,      0.5938,      0.7695,      0.4512,
            -0.0723,      0.8867,     -0.0986,     -0.4180,     -0.3125,      1.7188,     -0.8867,      0.7852,     -0.2676,     -0.2539,      0.2910,      1.8984,     -0.0347,      0.2207,     -1.0781,      0.1582,      1.5078,      0.3301,     -0.3887,     -0.8320,     -0.0513,     -0.0957,
             0.4785,      0.6094,     -0.0014,     -0.3516,      0.5820,      1.4688,      1.1641,      0.4336,     -0.6719,      0.2520,     -0.1963,     -0.7695,      2.1562,     -0.0938,      0.3574,      0.3574,     -1.6328,      1.4141,     -0.6758,     -1.3750], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0582,  0.0138,  0.0095,  ...,  0.0053,  0.0016, -0.0139],
        [-0.0172,  0.0081, -0.0263,  ..., -0.0200, -0.0021,  0.0003],
        [ 0.0538, -0.0044, -0.0182,  ...,  0.0073,  0.0155, -0.0046],
        ...,
        [ 0.0016, -0.0321,  0.0068,  ..., -0.0216, -0.0010, -0.0013],
        [ 0.0214, -0.0131, -0.0208,  ..., -0.0077, -0.0156,  0.0159],
        [-0.0054, -0.0288,  0.0028,  ..., -0.0140,  0.0292, -0.0254]], device='cuda:0', requires_grad=True)
Q: tensor([-1.6250,  0.1973, -0.3320,  1.9297,  1.1250,  2.2500, -0.1816, -1.2266,  1.3984,  0.5586,  0.7773,  0.8281, -0.7305,  1.3750,  0.3262, -0.2051,  0.6094,  0.1377,  0.5547, -0.6016, -0.1206,  2.5156, -1.4297, -0.1226, -1.3125, -0.0113,  0.5391,  0.9297, -0.3672, -0.7852, -0.1865, -1.8906,
        -0.0129,  0.1406, -0.6406, -2.4844,  0.2090, -0.6836,  1.4062, -0.3398, -0.4414, -1.1953, -2.0156, -1.6016,  1.2656,  1.0625, -1.4531, -1.0156,  1.0312, -0.2715,  0.5430, -0.9219, -0.8867,  0.9453,  0.7812,  0.0776,  0.8516, -0.7461, -0.9219, -1.8438, -0.9570,  1.0625, -0.6992,  0.4512],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2207,      2.7344,      3.8125,     -1.8984,     -0.5820,     -0.7500,      3.3438,     -4.9062,      2.3594,     -0.5703,      9.3125,      0.8750,     -4.9062,      2.7656],
        [     0.0000,     -0.3301,      2.2031,      3.2188,     -2.3750,     -0.4023,     -0.8281,      2.1250,     -4.0000,      1.8516,     -0.8750,      7.9688,      0.3418,     -4.0312,      1.7500],
        [     0.0000,     -0.7422,      1.1797,      2.2969,     -2.0625,     -0.3164,     -0.3691,      0.6094,     -2.8281,      1.2656,     -1.1328,      5.1562,     -0.3789,     -2.8594,      0.5781],
        [     0.0000,     -0.4727,      1.3594,      2.6719,     -1.5156,     -0.1396,     -0.4434,      2.1875,     -4.0938,      1.9766,     -0.7227,      7.3750,      0.4609,     -4.0938,      1.5078],
        [     0.0000,      0.2773,      2.2500,      2.7969,     -1.1641,     -0.7461,     -0.3027,      2.7188,     -4.5000,      1.7969,     -0.4629,      7.3750,      0.6094,     -4.5312,      2.6719],
        [     0.0000,     -1.8125,      0.8359,      2.2031,     -3.3438,     -0.4648,     -0.9453,      0.2637,     -3.1562,      1.1094,     -1.0703,      7.4688,     -0.0771,     -3.0469,      0.5000],
        [     0.0000,     -0.1602,      2.2031,      3.6094,     -1.7031,     -0.6602,     -0.7148,      2.4375,     -4.0312,      2.1406,     -0.3906,      8.3125,      0.6328,     -4.0000,      2.2656],
        [     0.0000,      0.3066,      1.5156,      1.4219,     -1.3203,     -0.2656,     -0.5469,      1.4453,     -3.0156,      1.4688,     -0.7773,      4.3438,      0.4824,     -3.0469,      1.3750],
        [     0.0000,     -2.0625,      0.4961,      2.4531,     -3.7656,     -0.4707,     -1.0078,      0.4473,     -3.9844,      1.4062,     -1.3672,      7.3750,     -0.3652,     -3.9219,     -0.0537],
        [     0.0000,     -0.4707,      1.2422,      1.9688,     -2.0156,     -0.3555,     -0.7891,      2.1094,     -4.1562,      1.5469,     -0.8672,      6.4062,      1.1641,     -4.0938,      1.5156],
        [     0.0000,      0.5039,      2.1250,      2.7969,     -0.5508,     -0.2119,      0.3262,      2.0938,     -2.5312,      1.0625,     -0.4375,      5.1250,      0.2129,     -2.6250,      2.0312],
        [     0.0000,     -0.8594,      1.0781,      2.2188,     -2.4375,     -0.4473,     -1.0312,      1.0859,     -3.3594,      1.6953,     -0.7109,      6.4062,      0.5352,     -3.2500,      0.9609],
        [     0.0000,      0.2422,      1.3516,      1.1641,     -1.4062,     -0.1445,     -0.5859,      1.2656,     -2.8281,      1.3750,     -0.7930,      4.0000,      0.4180,     -2.8438,      1.1562],
        [     0.0000,     -0.3652,      2.2344,      2.8438,     -2.7031,      0.0043,     -0.8320,      1.9453,     -3.6875,      1.6172,     -0.8008,      7.9688,      0.5898,     -3.6250,      1.9844]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2128],
        [0.1265],
        [0.1151],
        [0.1421],
        [0.1187],
        [0.1199],
        [0.0977],
        [0.1209],
        [0.1118],
        [0.0550],
        [0.0776],
        [0.0864],
        [0.1078],
        [0.0893]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6523,     0.3457,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0371,     0.0115,     0.9531,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0322,     0.0089,     0.2354,     0.7227,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0259,     0.0091,     0.2451,     0.7188,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0131,     0.0101,     0.3613,     0.6094,     0.0018,     0.0046,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0248,     0.0025,     0.2256,     0.7227,     0.0003,     0.0120,     0.0104,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.0019,     0.1699,     0.7500,     0.0002,     0.0016,     0.0022,     0.0698,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0298,     0.0195,     0.3457,     0.4355,     0.0030,     0.0144,     0.0145,     0.1367,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0203,     0.0011,     0.1021,     0.7656,     0.0001,     0.0122,     0.0080,     0.0369,     0.0003,     0.0552,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0192,     0.0074,     0.2393,     0.4277,     0.0013,     0.0118,     0.0084,     0.2109,     0.0002,     0.0703,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0016,     0.0244,     0.0466,     0.0003,     0.0009,     0.0017,     0.0127,     0.0001,     0.0034,     0.0004,     0.9062,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0005,     0.0023,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0002,     0.0000,     0.9961,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.0011,     0.0183,     0.0212,     0.0002,     0.0009,     0.0008,     0.0073,     0.0000,     0.0068,     0.0004,     0.9414,     0.0015,     0.0000,     0.0000],
        [    0.0001,     0.0000,     0.0020,     0.0033,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0002,     0.0000,     0.9922,     0.0000,     0.0000,     0.0006]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0093, -0.0126,  0.0090,  ...,  0.0072, -0.0187,  0.0178],
        [-0.0004, -0.0155,  0.0136,  ..., -0.0086, -0.0209,  0.0496],
        [ 0.0011, -0.0008, -0.0222,  ...,  0.0120, -0.0140, -0.0228],
        ...,
        [ 0.0271,  0.0070, -0.0146,  ..., -0.0104, -0.0303, -0.0174],
        [-0.0044,  0.0186,  0.0088,  ...,  0.0039, -0.0331, -0.0056],
        [-0.0188,  0.0186, -0.0265,  ...,  0.0064, -0.0202,  0.0340]], device='cuda:0', requires_grad=True)
K: tensor([     0.7734,     -0.2012,      0.2295,      0.8672,     -0.4766,      1.0781,     -0.6328,     -1.2188,     -0.6758,      0.1748,      2.1875,     -0.3203,     -0.1069,      0.9805,     -0.7227,      0.3301,     -0.7422,     -0.5156,     -0.1973,      0.4688,      0.4434,      0.4336,
            -0.2520,      0.8047,     -0.3145,     -0.3359,     -0.2559,      1.8672,     -1.0625,      0.7344,     -0.1426,     -0.3066,      0.2412,      1.6641,     -0.1377,      0.2637,     -1.2812,      0.0005,      1.4062,      0.4395,     -0.3047,     -0.7070,      0.0193,     -0.2969,
             0.5156,      0.5625,      0.1299,     -0.2871,      0.4902,      1.4688,      1.2422,      0.2988,     -0.7383,      0.4023,     -0.1426,     -0.7773,      1.8828,     -0.0786,      0.1904,      0.1719,     -1.7031,      1.5781,     -0.6445,     -1.5312], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0582,  0.0138,  0.0095,  ...,  0.0053,  0.0016, -0.0139],
        [-0.0172,  0.0081, -0.0263,  ..., -0.0200, -0.0021,  0.0003],
        [ 0.0538, -0.0044, -0.0182,  ...,  0.0073,  0.0155, -0.0046],
        ...,
        [ 0.0016, -0.0321,  0.0068,  ..., -0.0216, -0.0010, -0.0013],
        [ 0.0214, -0.0131, -0.0208,  ..., -0.0077, -0.0156,  0.0159],
        [-0.0054, -0.0288,  0.0028,  ..., -0.0140,  0.0292, -0.0254]], device='cuda:0', requires_grad=True)
Q: tensor([-1.6797,  0.2559, -0.6562,  2.0156,  1.2969,  2.1562, -0.1982, -1.3047,  1.5859,  0.6797,  0.8164,  0.8984, -0.7266,  1.5078,  0.3496, -0.2119,  0.4395, -0.1523,  0.8281, -0.6094, -0.2314,  2.6562, -1.4922, -0.4395, -1.5156,  0.1260,  0.5781,  1.0312, -0.2578, -0.8789, -0.0549, -1.9688,
        -0.0087,  0.1416, -0.5469, -2.4688,  0.4316, -0.8672,  1.3750, -0.3945, -0.3887, -1.1328, -2.0469, -1.7031,  1.3828,  1.2500, -1.6094, -1.1562,  1.0938, -0.3438,  0.5781, -0.8594, -0.9336,  1.0781,  0.7188, -0.0182,  0.7461, -0.9922, -0.7109, -2.0938, -0.9883,  0.9531, -0.7812,  0.2500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.6367,  3.9688,  5.0625, -3.1719, -1.0078, -0.8125,  3.3281, -5.6875,  1.9297, -1.7344, 11.3750, -0.1377, -5.5312,  2.7500],
        [ 0.0000, -1.1719,  3.2344,  4.2812, -3.6562, -0.7734, -0.9570,  2.1094, -4.7812,  1.3047, -1.9688,  9.8125, -0.5859, -4.6562,  1.8672],
        [ 0.0000, -1.2812,  1.9922,  3.1094, -3.1562, -0.5703, -0.5547,  0.7422, -3.5000,  0.9648, -1.8594,  6.7500, -0.9883, -3.4531,  0.8164],
        [ 0.0000, -1.0391,  2.2500,  3.3281, -2.3438, -0.0874, -0.3848,  2.3281, -4.2188,  1.5312, -1.2578,  8.6250, -0.0830, -4.0938,  1.4297],
        [ 0.0000, -0.2598,  3.3281,  3.8438, -1.9609, -1.0391, -0.3438,  2.8281, -5.0312,  1.4922, -1.3281,  8.9375, -0.0618, -4.9688,  2.7656],
        [ 0.0000, -2.2969,  2.2188,  3.3750, -4.3750, -0.7305, -0.8633,  0.6719, -3.8906,  0.6367, -1.8203,  9.4375, -0.9688, -3.6719,  1.0469],
        [ 0.0000, -0.8672,  3.6562,  5.1250, -3.0469, -0.9883, -0.6875,  2.7500, -4.9375,  1.8984, -1.3359, 11.0625, -0.2500, -4.7500,  2.5625],
        [ 0.0000, -0.4238,  2.4531,  2.6875, -2.2812, -0.7266, -0.7188,  1.5234, -3.8281,  1.3984, -1.4766,  6.5312, -0.1494, -3.7656,  1.6797],
        [ 0.0000, -2.8906,  1.6172,  3.6250, -5.0938, -0.5039, -0.9258,  0.5977, -4.3438,  1.0000, -1.9844,  9.5625, -1.2188, -4.1875,  0.0664],
        [ 0.0000, -0.9453,  2.5156,  3.1094, -2.7031, -0.4844, -0.8281,  2.3906, -4.6562,  1.2969, -1.5234,  8.1875,  0.5430, -4.4375,  1.9531],
        [ 0.0000,  0.0625,  2.7656,  3.4062, -1.5781, -0.5078,  0.0771,  2.1094, -3.2656,  0.7734, -1.3047,  6.3750, -0.3457, -3.2500,  2.1719],
        [ 0.0000, -1.8125,  2.6250,  4.0625, -4.0938, -0.7031, -1.0078,  1.5391, -4.4688,  1.6406, -1.4922, 10.1250, -0.3789, -4.2500,  1.4219],
        [ 0.0000, -0.4316,  2.3594,  2.5000, -2.3281, -0.6016, -0.7500,  1.4375, -3.7188,  1.3750, -1.4453,  6.2812, -0.1729, -3.6562,  1.5391],
        [ 0.0000, -1.0312,  3.4062,  3.8906, -3.7500, -0.3613, -0.8516,  1.9766, -4.3125,  1.0469, -1.7422,  9.5625, -0.3496, -4.1250,  2.2344]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2365],
        [0.1314],
        [0.1121],
        [0.1586],
        [0.1156],
        [0.1162],
        [0.0985],
        [0.1136],
        [0.1082],
        [0.1089],
        [0.0919],
        [0.1048],
        [0.1033],
        [0.0929]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1377 not:0.0850,:0.0605 and:0.0393al:0.0160,:0.1816 not:0.05541:0.0199)
1
------
		( not:0.0850,:0.0605 and:0.0393al:0.0160,:0.1816 not:0.05541:0.0199.:0.1143)
.
-1.
-1.
-1.
-
@ 1550 train 6.2757 , allloss: 6.5472, dt: 1685.80ms, fracRes: 0.0170, norm(attn): 0.1855, norm(output): 0.3145, norm(x): 0.2963, norm(y): 0.9998, norm:4.7536, tok/sec: 77750.70, flops:31.98, batch-reuse:1
@ 1551 train 6.2722 , allloss: 6.5519, dt: 1294.01ms, fracRes: 0.0175, norm(attn): 0.1855, norm(output): 0.3184, norm(x): 0.3004, norm(y): 0.9997, norm:3.6220, tok/sec: 101291.45, flops:41.67, batch-reuse:1
@ 1552 train 6.1922 , allloss: 6.4740, dt: 1316.46ms, fracRes: 0.0207, norm(attn): 0.1875, norm(output): 0.3164, norm(x): 0.2980, norm(y): 0.9997, norm:4.0970, tok/sec: 99563.79, flops:40.96, batch-reuse:1
@ 1553 train 6.2352 , allloss: 6.5214, dt: 1272.51ms, fracRes: 0.0201, norm(attn): 0.1875, norm(output): 0.3203, norm(x): 0.2999, norm(y): 0.9997, norm:3.3909, tok/sec: 103002.57, flops:42.37, batch-reuse:1
@ 1554 train 6.2419 , allloss: 6.5269, dt: 1284.49ms, fracRes: 0.0193, norm(attn): 0.1885, norm(output): 0.3145, norm(x): 0.2940, norm(y): 0.9997, norm:3.3277, tok/sec: 102041.67, flops:41.98, batch-reuse:1
@ 1555 train 6.2467 , allloss: 6.5254, dt: 1315.89ms, fracRes: 0.0164, norm(attn): 0.1846, norm(output): 0.3164, norm(x): 0.2976, norm(y): 0.9996, norm:3.2030, tok/sec: 99607.34, flops:40.97, batch-reuse:1
@ 1556 train 6.2828 , allloss: 6.5737, dt: 1302.24ms, fracRes: 0.0183, norm(attn): 0.1865, norm(output): 0.3184, norm(x): 0.3014, norm(y): 0.9996, norm:3.8641, tok/sec: 100650.88, flops:41.40, batch-reuse:1
@ 1557 train 6.2536 , allloss: 6.5411, dt: 1331.35ms, fracRes: 0.0202, norm(attn): 0.1895, norm(output): 0.3145, norm(x): 0.2947, norm(y): 0.9997, norm:3.3475, tok/sec: 98450.21, flops:40.50, batch-reuse:1
@ 1558 train 6.1947 , allloss: 6.4678, dt: 1327.36ms, fracRes: 0.0176, norm(attn): 0.1836, norm(output): 0.3145, norm(x): 0.2968, norm(y): 0.9997, norm:2.9078, tok/sec: 98746.51, flops:40.62, batch-reuse:1
@ 1559 train 6.2731 , allloss: 6.5513, dt: 1294.73ms, fracRes: 0.0180, norm(attn): 0.1865, norm(output): 0.3164, norm(x): 0.2974, norm(y): 0.9997, norm:3.5729, tok/sec: 101235.31, flops:41.64, batch-reuse:1
@ 1560 train 6.2884 , allloss: 6.5639, dt: 1283.58ms, fracRes: 0.0190, norm(attn): 0.1846, norm(output): 0.3164, norm(x): 0.2986, norm(y): 0.9998, norm:3.8880, tok/sec: 102114.51, flops:42.01, batch-reuse:1
@ 1561 train 6.3036 , allloss: 6.5731, dt: 1276.18ms, fracRes: 0.0216, norm(attn): 0.1875, norm(output): 0.3145, norm(x): 0.2985, norm(y): 0.9998, norm:4.6281, tok/sec: 102706.92, flops:42.25, batch-reuse:1
@ 1562 train 6.2611 , allloss: 6.5275, dt: 1298.57ms, fracRes: 0.0237, norm(attn): 0.1885, norm(output): 0.3145, norm(x): 0.2967, norm(y): 0.9998, norm:2.9633, tok/sec: 100935.78, flops:41.52, batch-reuse:1
@ 1563 train 6.2835 , allloss: 6.5545, dt: 1300.08ms, fracRes: 0.0223, norm(attn): 0.1846, norm(output): 0.3203, norm(x): 0.3012, norm(y): 0.9997, norm:3.5045, tok/sec: 100818.59, flops:41.47, batch-reuse:1
@ 1564 train 6.2935 , allloss: 6.5620, dt: 1281.59ms, fracRes: 0.0192, norm(attn): 0.1777, norm(output): 0.3281, norm(x): 0.3065, norm(y): 0.9997, norm:4.2796, tok/sec: 102272.77, flops:42.07, batch-reuse:1
@ 1565 train 6.2623 , allloss: 6.5390, dt: 1271.14ms, fracRes: 0.0243, norm(attn): 0.1885, norm(output): 0.3145, norm(x): 0.2976, norm(y): 0.9998, norm:2.5663, tok/sec: 103114.00, flops:42.42, batch-reuse:1
@ 1566 train 6.3114 , allloss: 6.5870, dt: 1304.96ms, fracRes: 0.0267, norm(attn): 0.1895, norm(output): 0.3164, norm(x): 0.2994, norm(y): 0.9999, norm:2.5506, tok/sec: 100441.45, flops:41.32, batch-reuse:1
@ 1567 train 6.2570 , allloss: 6.5351, dt: 1257.58ms, fracRes: 0.0284, norm(attn): 0.1885, norm(output): 0.3164, norm(x): 0.3012, norm(y): 0.9998, norm:5.2496, tok/sec: 104225.95, flops:42.87, batch-reuse:1
@ 1568 train 6.2469 , allloss: 6.5234, dt: 1311.13ms, fracRes: 0.0280, norm(attn): 0.1865, norm(output): 0.3164, norm(x): 0.2998, norm(y): 0.9999, norm:2.8765, tok/sec: 99969.11, flops:41.12, batch-reuse:1
@ 1569 train 6.1581 , allloss: 6.4356, dt: 1311.34ms, fracRes: 0.0275, norm(attn): 0.1875, norm(output): 0.3125, norm(x): 0.2942, norm(y): 0.9999, norm:4.3101, tok/sec: 99952.57, flops:41.12, batch-reuse:1
@ 1570 train 6.1944 , allloss: 6.4685, dt: 1302.37ms, fracRes: 0.0297, norm(attn): 0.1885, norm(output): 0.3125, norm(x): 0.2937, norm(y): 1.0000, norm:3.2760, tok/sec: 100640.78, flops:41.40, batch-reuse:1
@ 1571 train 6.2725 , allloss: 6.5334, dt: 1301.69ms, fracRes: 0.0302, norm(attn): 0.1885, norm(output): 0.3145, norm(x): 0.2969, norm(y): 1.0000, norm:3.7844, tok/sec: 100693.98, flops:41.42, batch-reuse:1
@ 1572 train 6.2705 , allloss: 6.5315, dt: 1291.55ms, fracRes: 0.0286, norm(attn): 0.1895, norm(output): 0.3145, norm(x): 0.2951, norm(y): 1.0000, norm:2.7644, tok/sec: 101483.95, flops:41.75, batch-reuse:1
@ 1573 train 6.3024 , allloss: 6.5662, dt: 1293.29ms, fracRes: 0.0272, norm(attn): 0.1885, norm(output): 0.3125, norm(x): 0.2944, norm(y): 1.0000, norm:2.8855, tok/sec: 101348.09, flops:41.69, batch-reuse:1
@ 1574 train 6.2793 , allloss: 6.5447, dt: 1270.79ms, fracRes: 0.0275, norm(attn): 0.1895, norm(output): 0.3145, norm(x): 0.2955, norm(y): 0.9999, norm:3.5679, tok/sec: 103142.11, flops:42.43, batch-reuse:1
@ 1575 train 6.2129 , allloss: 6.4777, dt: 1285.29ms, fracRes: 0.0275, norm(attn): 0.1895, norm(output): 0.3125, norm(x): 0.2950, norm(y): 1.0000, norm:2.6139, tok/sec: 101978.79, flops:41.95, batch-reuse:1
@ 1576 train 6.2602 , allloss: 6.5229, dt: 1297.59ms, fracRes: 0.0277, norm(attn): 0.1914, norm(output): 0.3105, norm(x): 0.2894, norm(y): 1.0000, norm:3.3306, tok/sec: 101011.67, flops:41.55, batch-reuse:1
@ 1577 train 6.1223 , allloss: 6.3842, dt: 1281.16ms, fracRes: 0.0255, norm(attn): 0.1885, norm(output): 0.3125, norm(x): 0.2935, norm(y): 0.9999, norm:4.9953, tok/sec: 102307.48, flops:42.08, batch-reuse:1
@ 1578 train 6.2483 , allloss: 6.5156, dt: 1265.83ms, fracRes: 0.0270, norm(attn): 0.1904, norm(output): 0.3125, norm(x): 0.2938, norm(y): 1.0000, norm:3.2464, tok/sec: 103546.36, flops:42.59, batch-reuse:1
@ 1579 train 6.1024 , allloss: 6.3673, dt: 1295.15ms, fracRes: 0.0254, norm(attn): 0.1865, norm(output): 0.3145, norm(x): 0.2965, norm(y): 0.9999, norm:3.5718, tok/sec: 101201.95, flops:41.63, batch-reuse:1
@ 1580 train 6.1607 , allloss: 6.4294, dt: 1277.39ms, fracRes: 0.0288, norm(attn): 0.1953, norm(output): 0.3105, norm(x): 0.2890, norm(y): 1.0000, norm:2.3611, tok/sec: 102609.30, flops:42.21, batch-reuse:1
@ 1581 train 6.1368 , allloss: 6.4016, dt: 1275.89ms, fracRes: 0.0297, norm(attn): 0.1982, norm(output): 0.3125, norm(x): 0.2910, norm(y): 1.0001, norm:4.3910, tok/sec: 102729.54, flops:42.26, batch-reuse:1
@ 1582 train 6.1606 , allloss: 6.4269, dt: 1268.49ms, fracRes: 0.0283, norm(attn): 0.1982, norm(output): 0.3105, norm(x): 0.2864, norm(y): 1.0000, norm:2.4931, tok/sec: 103329.54, flops:42.50, batch-reuse:1
@ 1583 train 6.1311 , allloss: 6.4049, dt: 1267.12ms, fracRes: 0.0252, norm(attn): 0.2012, norm(output): 0.3027, norm(x): 0.2838, norm(y): 1.0000, norm:3.5897, tok/sec: 103440.67, flops:42.55, batch-reuse:1
@ 1584 train 6.1265 , allloss: 6.4050, dt: 1284.32ms, fracRes: 0.0241, norm(attn): 0.2002, norm(output): 0.3086, norm(x): 0.2875, norm(y): 1.0000, norm:2.2677, tok/sec: 102055.38, flops:41.98, batch-reuse:1
@ 1585 train 6.1662 , allloss: 6.4369, dt: 1270.34ms, fracRes: 0.0216, norm(attn): 0.1973, norm(output): 0.3125, norm(x): 0.2918, norm(y): 0.9999, norm:2.8346, tok/sec: 103178.91, flops:42.44, batch-reuse:1
@ 1586 train 6.1845 , allloss: 6.4511, dt: 1293.77ms, fracRes: 0.0234, norm(attn): 0.2012, norm(output): 0.3066, norm(x): 0.2869, norm(y): 1.0000, norm:4.3096, tok/sec: 101310.34, flops:41.67, batch-reuse:1
@ 1587 train 6.1891 , allloss: 6.4502, dt: 1294.37ms, fracRes: 0.0273, norm(attn): 0.2002, norm(output): 0.3105, norm(x): 0.2892, norm(y): 1.0001, norm:3.3080, tok/sec: 101263.19, flops:41.65, batch-reuse:1
@ 1588 train 6.2305 , allloss: 6.4961, dt: 1261.63ms, fracRes: 0.0238, norm(attn): 0.1924, norm(output): 0.3184, norm(x): 0.2997, norm(y): 1.0000, norm:3.6213, tok/sec: 103891.13, flops:42.74, batch-reuse:1
@ 1589 train 6.1581 , allloss: 6.4309, dt: 1312.64ms, fracRes: 0.0218, norm(attn): 0.1934, norm(output): 0.3164, norm(x): 0.2983, norm(y): 1.0000, norm:2.8076, tok/sec: 99853.90, flops:41.08, batch-reuse:1
@ 1590 train 6.1987 , allloss: 6.4755, dt: 1284.13ms, fracRes: 0.0222, norm(attn): 0.2002, norm(output): 0.3125, norm(x): 0.2918, norm(y): 1.0000, norm:3.3660, tok/sec: 102070.47, flops:41.99, batch-reuse:1
@ 1591 train 6.1280 , allloss: 6.4070, dt: 1307.06ms, fracRes: 0.0222, norm(attn): 0.2012, norm(output): 0.3145, norm(x): 0.2947, norm(y): 1.0000, norm:3.3950, tok/sec: 100279.89, flops:41.25, batch-reuse:1
@ 1592 train 6.1566 , allloss: 6.4380, dt: 1296.40ms, fracRes: 0.0243, norm(attn): 0.2090, norm(output): 0.3066, norm(x): 0.2864, norm(y): 1.0000, norm:3.2869, tok/sec: 101104.37, flops:41.59, batch-reuse:1
@ 1593 train 6.1812 , allloss: 6.4502, dt: 1306.75ms, fracRes: 0.0206, norm(attn): 0.2002, norm(output): 0.3105, norm(x): 0.2908, norm(y): 1.0000, norm:3.1243, tok/sec: 100303.66, flops:41.26, batch-reuse:1
@ 1594 train 6.0796 , allloss: 6.3530, dt: 1312.73ms, fracRes: 0.0190, norm(attn): 0.2002, norm(output): 0.3125, norm(x): 0.2948, norm(y): 0.9999, norm:3.3613, tok/sec: 99846.99, flops:41.07, batch-reuse:1
@ 1595 train 6.2334 , allloss: 6.5085, dt: 1291.12ms, fracRes: 0.0202, norm(attn): 0.2021, norm(output): 0.3125, norm(x): 0.2927, norm(y): 0.9999, norm:3.0914, tok/sec: 101518.10, flops:41.76, batch-reuse:1
@ 1596 train 6.1238 , allloss: 6.3942, dt: 1276.71ms, fracRes: 0.0155, norm(attn): 0.1992, norm(output): 0.3105, norm(x): 0.2913, norm(y): 0.9999, norm:3.4755, tok/sec: 102663.88, flops:42.23, batch-reuse:1
@ 1597 train 6.1871 , allloss: 6.4666, dt: 1325.65ms, fracRes: 0.0164, norm(attn): 0.2031, norm(output): 0.3105, norm(x): 0.2917, norm(y): 0.9999, norm:2.5897, tok/sec: 98874.06, flops:40.67, batch-reuse:1
@ 1598 train 6.2098 , allloss: 6.4915, dt: 1274.77ms, fracRes: 0.0163, norm(attn): 0.2021, norm(output): 0.3145, norm(x): 0.2962, norm(y): 0.9998, norm:2.6688, tok/sec: 102820.00, flops:42.30, batch-reuse:1
@ 1599 train 6.2426 , allloss: 6.5183, dt: 1256.29ms, fracRes: 0.0124, norm(attn): 0.2061, norm(output): 0.3125, norm(x): 0.2908, norm(y): 0.9997, norm:2.8156, tok/sec: 104332.23, flops:42.92, batch-reuse:1
@ 1600 train 6.1463 , allloss: 6.4241, dt: 1281.34ms, fracRes: 0.0161, norm(attn): 0.2070, norm(output): 0.3105, norm(x): 0.2899, norm(y): 0.9998, norm:2.9163, tok/sec: 102293.24, flops:42.08, batch-reuse:1
@ 1601 train 6.2228 , allloss: 6.5029, dt: 1301.00ms, fracRes: 0.0157, norm(attn): 0.2051, norm(output): 0.3184, norm(x): 0.3001, norm(y): 0.9997, norm:3.5081, tok/sec: 100747.37, flops:41.44, batch-reuse:1
@ 1602 train 6.1721 , allloss: 6.4580, dt: 1263.11ms, fracRes: 0.0137, norm(attn): 0.2051, norm(output): 0.3184, norm(x): 0.2991, norm(y): 0.9997, norm:4.8676, tok/sec: 103769.14, flops:42.69, batch-reuse:1
@ 1603 train 6.1367 , allloss: 6.4191, dt: 1287.09ms, fracRes: 0.0112, norm(attn): 0.1934, norm(output): 0.3164, norm(x): 0.3011, norm(y): 0.9997, norm:5.6265, tok/sec: 101835.64, flops:41.89, batch-reuse:1
@ 1604 train 6.1553 , allloss: 6.4420, dt: 1271.14ms, fracRes: 0.0125, norm(attn): 0.2090, norm(output): 0.3125, norm(x): 0.2941, norm(y): 0.9997, norm:2.9266, tok/sec: 103114.08, flops:42.42, batch-reuse:1
@ 1605 train 6.1996 , allloss: 6.4847, dt: 1307.80ms, fracRes: 0.0130, norm(attn): 0.2178, norm(output): 0.3125, norm(x): 0.2943, norm(y): 0.9996, norm:4.6035, tok/sec: 100222.96, flops:41.23, batch-reuse:1
@ 1606 train 6.1562 , allloss: 6.4457, dt: 1288.72ms, fracRes: 0.0125, norm(attn): 0.2178, norm(output): 0.3125, norm(x): 0.2923, norm(y): 0.9996, norm:2.9386, tok/sec: 101706.77, flops:41.84, batch-reuse:1
@ 1607 train 6.1952 , allloss: 6.4849, dt: 1263.62ms, fracRes: 0.0119, norm(attn): 0.2217, norm(output): 0.3066, norm(x): 0.2867, norm(y): 0.9996, norm:4.6523, tok/sec: 103727.39, flops:42.67, batch-reuse:1
@ 1608 train 6.2437 , allloss: 6.5191, dt: 1287.23ms, fracRes: 0.0095, norm(attn): 0.2109, norm(output): 0.3125, norm(x): 0.2934, norm(y): 0.9996, norm:4.2999, tok/sec: 101825.22, flops:41.89, batch-reuse:1
@ 1609 train 6.2077 , allloss: 6.4837, dt: 1304.75ms, fracRes: 0.0121, norm(attn): 0.2158, norm(output): 0.3125, norm(x): 0.2932, norm(y): 0.9996, norm:4.0643, tok/sec: 100457.34, flops:41.32, batch-reuse:1
@ 1610 train 6.1580 , allloss: 6.4371, dt: 1305.79ms, fracRes: 0.0123, norm(attn): 0.2217, norm(output): 0.3125, norm(x): 0.2926, norm(y): 0.9996, norm:3.2289, tok/sec: 100377.53, flops:41.29, batch-reuse:1
@ 1611 train 6.1142 , allloss: 6.3964, dt: 1279.94ms, fracRes: 0.0123, norm(attn): 0.2207, norm(output): 0.3105, norm(x): 0.2882, norm(y): 0.9996, norm:2.9091, tok/sec: 102405.11, flops:42.12, batch-reuse:1
@ 1612 train 6.1828 , allloss: 6.4705, dt: 1304.52ms, fracRes: 0.0113, norm(attn): 0.2256, norm(output): 0.3066, norm(x): 0.2866, norm(y): 0.9996, norm:4.5298, tok/sec: 100475.10, flops:41.33, batch-reuse:1
@ 1613 train 6.1459 , allloss: 6.4353, dt: 1294.89ms, fracRes: 0.0092, norm(attn): 0.2139, norm(output): 0.3145, norm(x): 0.2961, norm(y): 0.9996, norm:3.7009, tok/sec: 101222.50, flops:41.64, batch-reuse:1
@ 1614 train 6.1848 , allloss: 6.4780, dt: 1269.37ms, fracRes: 0.0155, norm(attn): 0.2246, norm(output): 0.3105, norm(x): 0.2891, norm(y): 0.9997, norm:3.0905, tok/sec: 103257.26, flops:42.48, batch-reuse:1
@ 1615 train 6.1919 , allloss: 6.4725, dt: 1286.02ms, fracRes: 0.0124, norm(attn): 0.2168, norm(output): 0.3125, norm(x): 0.2923, norm(y): 0.9997, norm:3.5878, tok/sec: 101920.75, flops:41.93, batch-reuse:1
@ 1616 train 6.2234 , allloss: 6.5081, dt: 1271.89ms, fracRes: 0.0142, norm(attn): 0.2217, norm(output): 0.3066, norm(x): 0.2865, norm(y): 0.9997, norm:3.3525, tok/sec: 103052.60, flops:42.39, batch-reuse:1
@ 1617 train 6.1984 , allloss: 6.4900, dt: 1267.23ms, fracRes: 0.0141, norm(attn): 0.2217, norm(output): 0.3086, norm(x): 0.2857, norm(y): 0.9997, norm:4.4195, tok/sec: 103431.54, flops:42.55, batch-reuse:1
@ 1618 train 6.1431 , allloss: 6.4266, dt: 1290.76ms, fracRes: 0.0109, norm(attn): 0.2090, norm(output): 0.3125, norm(x): 0.2925, norm(y): 0.9997, norm:3.6838, tok/sec: 101546.09, flops:41.77, batch-reuse:1
@ 1619 train 6.1333 , allloss: 6.4114, dt: 1330.27ms, fracRes: 0.0130, norm(attn): 0.2207, norm(output): 0.3086, norm(x): 0.2863, norm(y): 0.9997, norm:5.7540, tok/sec: 98530.32, flops:40.53, batch-reuse:1
@ 1620 train 6.1194 , allloss: 6.3950, dt: 1316.91ms, fracRes: 0.0158, norm(attn): 0.2266, norm(output): 0.3047, norm(x): 0.2834, norm(y): 0.9998, norm:3.2958, tok/sec: 99530.14, flops:40.94, batch-reuse:1
@ 1621 train 6.2189 , allloss: 6.4971, dt: 1298.91ms, fracRes: 0.0155, norm(attn): 0.2207, norm(output): 0.3066, norm(x): 0.2864, norm(y): 0.9999, norm:5.6252, tok/sec: 100908.94, flops:41.51, batch-reuse:1
@ 1622 train 6.1812 , allloss: 6.4652, dt: 1299.54ms, fracRes: 0.0151, norm(attn): 0.2227, norm(output): 0.3086, norm(x): 0.2868, norm(y): 0.9998, norm:2.7492, tok/sec: 100860.10, flops:41.49, batch-reuse:1
@ 1623 train 6.1283 , allloss: 6.3997, dt: 1286.08ms, fracRes: 0.0139, norm(attn): 0.2197, norm(output): 0.3105, norm(x): 0.2894, norm(y): 0.9998, norm:5.8314, tok/sec: 101916.25, flops:41.92, batch-reuse:1
@ 1624 train 6.0690 , allloss: 6.3284, dt: 1290.96ms, fracRes: 0.0128, norm(attn): 0.2041, norm(output): 0.3125, norm(x): 0.2925, norm(y): 0.9999, norm:4.3276, tok/sec: 101530.79, flops:41.76, batch-reuse:1
@ 1625 train 6.2025 , allloss: 6.4613, dt: 1308.27ms, fracRes: 0.0135, norm(attn): 0.2109, norm(output): 0.3066, norm(x): 0.2851, norm(y): 0.9999, norm:3.7709, tok/sec: 100187.11, flops:41.21, batch-reuse:1
@ 1626 train 6.1238 , allloss: 6.3872, dt: 1290.67ms, fracRes: 0.0138, norm(attn): 0.2227, norm(output): 0.2988, norm(x): 0.2809, norm(y): 1.0000, norm:3.8301, tok/sec: 101553.24, flops:41.77, batch-reuse:1
@ 1627 train 6.0807 , allloss: 6.3469, dt: 1313.59ms, fracRes: 0.0156, norm(attn): 0.2197, norm(output): 0.3027, norm(x): 0.2812, norm(y): 1.0000, norm:3.0451, tok/sec: 99781.38, flops:41.05, batch-reuse:1
@ 1628 train 6.0519 , allloss: 6.3165, dt: 1290.12ms, fracRes: 0.0156, norm(attn): 0.2207, norm(output): 0.2930, norm(x): 0.2770, norm(y): 1.0000, norm:3.5134, tok/sec: 101596.52, flops:41.79, batch-reuse:1
@ 1629 train 6.0575 , allloss: 6.3193, dt: 1271.82ms, fracRes: 0.0147, norm(attn): 0.2207, norm(output): 0.3008, norm(x): 0.2801, norm(y): 1.0000, norm:2.7280, tok/sec: 103058.97, flops:42.39, batch-reuse:1
@ 1630 train 6.1116 , allloss: 6.3757, dt: 1266.89ms, fracRes: 0.0154, norm(attn): 0.2256, norm(output): 0.2988, norm(x): 0.2790, norm(y): 1.0000, norm:2.8213, tok/sec: 103459.36, flops:42.56, batch-reuse:1
@ 1631 train 6.0562 , allloss: 6.3150, dt: 1276.16ms, fracRes: 0.0129, norm(attn): 0.2246, norm(output): 0.3008, norm(x): 0.2794, norm(y): 1.0000, norm:2.5653, tok/sec: 102708.51, flops:42.25, batch-reuse:1
@ 1632 train 6.1313 , allloss: 6.3780, dt: 1290.08ms, fracRes: 0.0151, norm(attn): 0.2197, norm(output): 0.3027, norm(x): 0.2825, norm(y): 1.0001, norm:3.4202, tok/sec: 101599.93, flops:41.79, batch-reuse:1
@ 1633 train 6.0900 , allloss: 6.3305, dt: 1317.15ms, fracRes: 0.0135, norm(attn): 0.2227, norm(output): 0.2930, norm(x): 0.2751, norm(y): 1.0002, norm:3.4897, tok/sec: 99512.18, flops:40.93, batch-reuse:1
@ 1634 train 6.1374 , allloss: 6.3763, dt: 1311.12ms, fracRes: 0.0162, norm(attn): 0.2236, norm(output): 0.2988, norm(x): 0.2771, norm(y): 1.0002, norm:3.0390, tok/sec: 99969.18, flops:41.12, batch-reuse:1
@ 1635 train 6.0961 , allloss: 6.3413, dt: 1318.56ms, fracRes: 0.0182, norm(attn): 0.2373, norm(output): 0.2871, norm(x): 0.2704, norm(y): 1.0002, norm:3.3214, tok/sec: 99405.78, flops:40.89, batch-reuse:1
@ 1636 train 6.0528 , allloss: 6.3020, dt: 1301.69ms, fracRes: 0.0179, norm(attn): 0.2305, norm(output): 0.2891, norm(x): 0.2720, norm(y): 1.0002, norm:2.2820, tok/sec: 100693.43, flops:41.42, batch-reuse:1
@ 1637 train 6.1648 , allloss: 6.4078, dt: 1291.91ms, fracRes: 0.0188, norm(attn): 0.2188, norm(output): 0.3008, norm(x): 0.2809, norm(y): 1.0002, norm:4.5672, tok/sec: 101455.67, flops:41.73, batch-reuse:1
@ 1638 train 6.1690 , allloss: 6.4097, dt: 1274.80ms, fracRes: 0.0197, norm(attn): 0.2207, norm(output): 0.2988, norm(x): 0.2789, norm(y): 1.0003, norm:2.6827, tok/sec: 102817.86, flops:42.29, batch-reuse:1
@ 1639 train 6.0846 , allloss: 6.3208, dt: 1313.42ms, fracRes: 0.0190, norm(attn): 0.2217, norm(output): 0.3008, norm(x): 0.2779, norm(y): 1.0003, norm:3.7886, tok/sec: 99794.37, flops:41.05, batch-reuse:1
@ 1640 train 6.1044 , allloss: 6.3378, dt: 1321.22ms, fracRes: 0.0193, norm(attn): 0.2324, norm(output): 0.2910, norm(x): 0.2723, norm(y): 1.0003, norm:4.2116, tok/sec: 99205.27, flops:40.81, batch-reuse:1
@ 1641 train 6.0381 , allloss: 6.2729, dt: 1305.63ms, fracRes: 0.0205, norm(attn): 0.2354, norm(output): 0.2832, norm(x): 0.2646, norm(y): 1.0003, norm:2.3582, tok/sec: 100389.47, flops:41.30, batch-reuse:1
@ 1642 train 6.1283 , allloss: 6.3656, dt: 1264.47ms, fracRes: 0.0225, norm(attn): 0.2344, norm(output): 0.2852, norm(x): 0.2680, norm(y): 1.0003, norm:3.6449, tok/sec: 103657.67, flops:42.64, batch-reuse:1
@ 1643 train 6.1292 , allloss: 6.3658, dt: 1261.70ms, fracRes: 0.0234, norm(attn): 0.2344, norm(output): 0.2852, norm(x): 0.2698, norm(y): 1.0003, norm:3.2385, tok/sec: 103885.04, flops:42.73, batch-reuse:1
@ 1644 train 6.1472 , allloss: 6.3836, dt: 1274.65ms, fracRes: 0.0214, norm(attn): 0.2354, norm(output): 0.2852, norm(x): 0.2671, norm(y): 1.0003, norm:3.0202, tok/sec: 102829.85, flops:42.30, batch-reuse:1
@ 1645 train 6.1654 , allloss: 6.4018, dt: 1285.27ms, fracRes: 0.0207, norm(attn): 0.2314, norm(output): 0.2910, norm(x): 0.2741, norm(y): 1.0002, norm:3.5060, tok/sec: 101979.73, flops:41.95, batch-reuse:1
@ 1646 train 6.1358 , allloss: 6.3735, dt: 1311.89ms, fracRes: 0.0207, norm(attn): 0.2246, norm(output): 0.2930, norm(x): 0.2739, norm(y): 1.0002, norm:2.7777, tok/sec: 99911.02, flops:41.10, batch-reuse:1
@ 1647 train 6.1561 , allloss: 6.3893, dt: 1273.14ms, fracRes: 0.0202, norm(attn): 0.2324, norm(output): 0.2871, norm(x): 0.2687, norm(y): 1.0002, norm:2.0566, tok/sec: 102951.93, flops:42.35, batch-reuse:1
@ 1648 train 6.1418 , allloss: 6.3708, dt: 1267.04ms, fracRes: 0.0212, norm(attn): 0.2324, norm(output): 0.2871, norm(x): 0.2691, norm(y): 1.0003, norm:3.0920, tok/sec: 103447.35, flops:42.55, batch-reuse:1
@ 1649 train 6.0781 , allloss: 6.3045, dt: 1294.64ms, fracRes: 0.0256, norm(attn): 0.2334, norm(output): 0.2910, norm(x): 0.2723, norm(y): 1.0003, norm:4.0459, tok/sec: 101241.89, flops:41.65, batch-reuse:1
@ 1650 train 6.0611 , allloss: 6.2887, dt: 1294.15ms, fracRes: 0.0261, norm(attn): 0.2393, norm(output): 0.2812, norm(x): 0.2625, norm(y): 1.0004, norm:2.7707, tok/sec: 101280.03, flops:41.66, batch-reuse:1
@ 1651 train 6.1956 , allloss: 6.4284, dt: 1307.59ms, fracRes: 0.0277, norm(attn): 0.2334, norm(output): 0.2832, norm(x): 0.2648, norm(y): 1.0004, norm:3.7261, tok/sec: 100239.75, flops:41.23, batch-reuse:1
@ 1652 train 6.1959 , allloss: 6.4317, dt: 1317.37ms, fracRes: 0.0264, norm(attn): 0.2188, norm(output): 0.2930, norm(x): 0.2736, norm(y): 1.0003, norm:2.9498, tok/sec: 99495.57, flops:40.93, batch-reuse:1
@ 1653 train 6.2211 , allloss: 6.4558, dt: 1317.44ms, fracRes: 0.0253, norm(attn): 0.2168, norm(output): 0.2969, norm(x): 0.2777, norm(y): 1.0002, norm:5.4283, tok/sec: 99489.86, flops:40.93, batch-reuse:1
@ 1654 train 6.1003 , allloss: 6.3324, dt: 1314.35ms, fracRes: 0.0301, norm(attn): 0.2334, norm(output): 0.2852, norm(x): 0.2682, norm(y): 1.0002, norm:2.6432, tok/sec: 99724.08, flops:41.02, batch-reuse:1
@ 1655 train 6.1000 , allloss: 6.3325, dt: 1289.34ms, fracRes: 0.0323, norm(attn): 0.2334, norm(output): 0.2852, norm(x): 0.2671, norm(y): 1.0003, norm:3.5537, tok/sec: 101658.00, flops:41.82, batch-reuse:1
@ 1656 train 6.0623 , allloss: 6.2998, dt: 1287.17ms, fracRes: 0.0311, norm(attn): 0.2227, norm(output): 0.2910, norm(x): 0.2720, norm(y): 1.0003, norm:3.0745, tok/sec: 101829.49, flops:41.89, batch-reuse:1
@ 1657 train 6.1494 , allloss: 6.3859, dt: 1273.59ms, fracRes: 0.0300, norm(attn): 0.2178, norm(output): 0.2949, norm(x): 0.2770, norm(y): 1.0003, norm:4.7360, tok/sec: 102914.99, flops:42.33, batch-reuse:1
@ 1658 train 6.1160 , allloss: 6.3475, dt: 1290.10ms, fracRes: 0.0290, norm(attn): 0.2178, norm(output): 0.2930, norm(x): 0.2737, norm(y): 1.0003, norm:2.1793, tok/sec: 101597.94, flops:41.79, batch-reuse:1
@ 1659 train 6.1215 , allloss: 6.3484, dt: 1317.90ms, fracRes: 0.0304, norm(attn): 0.2314, norm(output): 0.2832, norm(x): 0.2668, norm(y): 1.0002, norm:3.4051, tok/sec: 99454.98, flops:40.91, batch-reuse:1
@ 1660 train 6.0724 , allloss: 6.2990, dt: 1274.88ms, fracRes: 0.0319, norm(attn): 0.2344, norm(output): 0.2832, norm(x): 0.2657, norm(y): 1.0003, norm:2.5386, tok/sec: 102811.29, flops:42.29, batch-reuse:1
@ 1661 train 6.1537 , allloss: 6.3842, dt: 1257.57ms, fracRes: 0.0300, norm(attn): 0.2227, norm(output): 0.2891, norm(x): 0.2717, norm(y): 1.0002, norm:3.5302, tok/sec: 104226.76, flops:42.87, batch-reuse:1
@ 1662 train 6.0873 , allloss: 6.3198, dt: 1286.58ms, fracRes: 0.0284, norm(attn): 0.2178, norm(output): 0.2969, norm(x): 0.2758, norm(y): 1.0002, norm:3.8245, tok/sec: 101876.66, flops:41.91, batch-reuse:1
@ 1663 train 6.1477 , allloss: 6.3812, dt: 1293.46ms, fracRes: 0.0276, norm(attn): 0.2168, norm(output): 0.2910, norm(x): 0.2731, norm(y): 1.0002, norm:3.7655, tok/sec: 101334.47, flops:41.68, batch-reuse:1
@ 1664 train 6.0814 , allloss: 6.3110, dt: 1268.63ms, fracRes: 0.0282, norm(attn): 0.2275, norm(output): 0.2832, norm(x): 0.2662, norm(y): 1.0002, norm:3.4462, tok/sec: 103317.40, flops:42.50, batch-reuse:1
@ 1665 train 6.1156 , allloss: 6.3471, dt: 1268.10ms, fracRes: 0.0323, norm(attn): 0.2227, norm(output): 0.2910, norm(x): 0.2718, norm(y): 1.0002, norm:2.5660, tok/sec: 103360.76, flops:42.52, batch-reuse:1
@ 1666 train 6.1785 , allloss: 6.4127, dt: 1273.72ms, fracRes: 0.0316, norm(attn): 0.2236, norm(output): 0.2871, norm(x): 0.2697, norm(y): 1.0002, norm:2.3043, tok/sec: 102904.82, flops:42.33, batch-reuse:1
@ 1667 train 6.2521 , allloss: 6.4879, dt: 1263.26ms, fracRes: 0.0310, norm(attn): 0.2314, norm(output): 0.2832, norm(x): 0.2632, norm(y): 1.0002, norm:3.0638, tok/sec: 103757.21, flops:42.68, batch-reuse:1
@ 1668 train 6.2057 , allloss: 6.4376, dt: 1278.44ms, fracRes: 0.0324, norm(attn): 0.2285, norm(output): 0.2832, norm(x): 0.2676, norm(y): 1.0001, norm:3.0934, tok/sec: 102524.68, flops:42.17, batch-reuse:1
@ 1669 train 6.2873 , allloss: 6.5232, dt: 1283.18ms, fracRes: 0.0317, norm(attn): 0.2148, norm(output): 0.2988, norm(x): 0.2774, norm(y): 1.0002, norm:3.8115, tok/sec: 102146.34, flops:42.02, batch-reuse:1
@ 1670 train 6.3087 , allloss: 6.5477, dt: 1292.60ms, fracRes: 0.0302, norm(attn): 0.2070, norm(output): 0.3008, norm(x): 0.2778, norm(y): 1.0001, norm:2.7730, tok/sec: 101401.65, flops:41.71, batch-reuse:1
@ 1671 train 6.3013 , allloss: 6.5394, dt: 1287.21ms, fracRes: 0.0313, norm(attn): 0.2129, norm(output): 0.2930, norm(x): 0.2733, norm(y): 1.0001, norm:4.9020, tok/sec: 101826.73, flops:41.89, batch-reuse:1
@ 1672 train 6.2522 , allloss: 6.4866, dt: 1278.11ms, fracRes: 0.0328, norm(attn): 0.2100, norm(output): 0.2910, norm(x): 0.2723, norm(y): 1.0002, norm:2.9100, tok/sec: 102551.75, flops:42.18, batch-reuse:1
@ 1673 train 6.2216 , allloss: 6.4571, dt: 1281.02ms, fracRes: 0.0349, norm(attn): 0.2109, norm(output): 0.2930, norm(x): 0.2736, norm(y): 1.0002, norm:2.8651, tok/sec: 102318.15, flops:42.09, batch-reuse:1
@ 1674 train 6.2272 , allloss: 6.4621, dt: 1269.74ms, fracRes: 0.0336, norm(attn): 0.2070, norm(output): 0.2969, norm(x): 0.2749, norm(y): 1.0002, norm:3.8079, tok/sec: 103227.62, flops:42.46, batch-reuse:1
@ 1675 train 6.2930 , allloss: 6.5302, dt: 1267.50ms, fracRes: 0.0334, norm(attn): 0.2139, norm(output): 0.2852, norm(x): 0.2703, norm(y): 1.0002, norm:3.0635, tok/sec: 103410.16, flops:42.54, batch-reuse:1
@ 1676 train 6.3050 , allloss: 6.5454, dt: 1274.46ms, fracRes: 0.0336, norm(attn): 0.2148, norm(output): 0.2852, norm(x): 0.2688, norm(y): 1.0002, norm:3.5853, tok/sec: 102845.41, flops:42.31, batch-reuse:1
@ 1677 train 6.2760 , allloss: 6.5150, dt: 1286.23ms, fracRes: 0.0339, norm(attn): 0.2148, norm(output): 0.2871, norm(x): 0.2690, norm(y): 1.0001, norm:3.4492, tok/sec: 101904.06, flops:41.92, batch-reuse:1
@ 1678 train 6.2368 , allloss: 6.4793, dt: 1276.45ms, fracRes: 0.0341, norm(attn): 0.2178, norm(output): 0.2871, norm(x): 0.2692, norm(y): 1.0001, norm:3.0485, tok/sec: 102684.39, flops:42.24, batch-reuse:1
@ 1679 train 6.2692 , allloss: 6.5135, dt: 1270.72ms, fracRes: 0.0342, norm(attn): 0.2266, norm(output): 0.2812, norm(x): 0.2612, norm(y): 1.0001, norm:2.4135, tok/sec: 103148.13, flops:42.43, batch-reuse:1
@ 1680 train 6.1605 , allloss: 6.4031, dt: 1277.53ms, fracRes: 0.0344, norm(attn): 0.2217, norm(output): 0.2832, norm(x): 0.2635, norm(y): 1.0001, norm:2.8043, tok/sec: 102597.87, flops:42.20, batch-reuse:1
@ 1681 train 6.2280 , allloss: 6.4675, dt: 1284.21ms, fracRes: 0.0335, norm(attn): 0.2178, norm(output): 0.2910, norm(x): 0.2713, norm(y): 1.0000, norm:3.2917, tok/sec: 102064.46, flops:41.98, batch-reuse:1
@ 1682 train 6.2163 , allloss: 6.4587, dt: 1285.99ms, fracRes: 0.0314, norm(attn): 0.2070, norm(output): 0.2930, norm(x): 0.2747, norm(y): 1.0000, norm:1.9195, tok/sec: 101923.32, flops:41.93, batch-reuse:1
@ 1683 train 6.1836 , allloss: 6.4231, dt: 1294.30ms, fracRes: 0.0323, norm(attn): 0.2109, norm(output): 0.2930, norm(x): 0.2741, norm(y): 1.0001, norm:2.0501, tok/sec: 101268.43, flops:41.66, batch-reuse:1
@ 1684 train 6.1981 , allloss: 6.4336, dt: 1272.65ms, fracRes: 0.0322, norm(attn): 0.2178, norm(output): 0.2910, norm(x): 0.2714, norm(y): 1.0000, norm:4.5615, tok/sec: 102991.78, flops:42.37, batch-reuse:1
@ 1685 train 6.2392 , allloss: 6.4761, dt: 1279.50ms, fracRes: 0.0309, norm(attn): 0.2188, norm(output): 0.2832, norm(x): 0.2658, norm(y): 1.0000, norm:2.7375, tok/sec: 102439.94, flops:42.14, batch-reuse:1
@ 1686 train 6.2601 , allloss: 6.5032, dt: 1281.39ms, fracRes: 0.0316, norm(attn): 0.2100, norm(output): 0.2891, norm(x): 0.2709, norm(y): 1.0000, norm:3.1277, tok/sec: 102288.98, flops:42.08, batch-reuse:1
@ 1687 train 6.2622 , allloss: 6.5082, dt: 1288.52ms, fracRes: 0.0305, norm(attn): 0.2031, norm(output): 0.2988, norm(x): 0.2773, norm(y): 0.9999, norm:2.9402, tok/sec: 101722.69, flops:41.84, batch-reuse:1
@ 1688 train 6.2374 , allloss: 6.4839, dt: 1277.83ms, fracRes: 0.0315, norm(attn): 0.2148, norm(output): 0.2930, norm(x): 0.2733, norm(y): 0.9999, norm:4.8889, tok/sec: 102574.08, flops:42.19, batch-reuse:1
@ 1689 train 6.2626 , allloss: 6.5058, dt: 1278.48ms, fracRes: 0.0324, norm(attn): 0.2246, norm(output): 0.2812, norm(x): 0.2636, norm(y): 0.9998, norm:3.7350, tok/sec: 102521.51, flops:42.17, batch-reuse:1
@ 1690 train 6.2528 , allloss: 6.5019, dt: 1297.01ms, fracRes: 0.0336, norm(attn): 0.2188, norm(output): 0.2832, norm(x): 0.2672, norm(y): 0.9999, norm:2.7750, tok/sec: 101056.85, flops:41.57, batch-reuse:1
@ 1691 train 6.2063 , allloss: 6.4594, dt: 1284.17ms, fracRes: 0.0319, norm(attn): 0.2080, norm(output): 0.2910, norm(x): 0.2722, norm(y): 0.9999, norm:4.2195, tok/sec: 102067.32, flops:41.99, batch-reuse:1
@ 1692 train 6.1163 , allloss: 6.3635, dt: 1261.73ms, fracRes: 0.0309, norm(attn): 0.2119, norm(output): 0.2871, norm(x): 0.2686, norm(y): 0.9999, norm:2.5425, tok/sec: 103882.69, flops:42.73, batch-reuse:1
@ 1693 train 6.3557 , allloss: 6.6037, dt: 1282.91ms, fracRes: 0.0338, norm(attn): 0.2148, norm(output): 0.2832, norm(x): 0.2666, norm(y): 0.9999, norm:3.0215, tok/sec: 102167.72, flops:42.03, batch-reuse:1
@ 1694 train 6.3935 , allloss: 6.6368, dt: 1291.43ms, fracRes: 0.0361, norm(attn): 0.2158, norm(output): 0.2871, norm(x): 0.2688, norm(y): 0.9999, norm:4.6424, tok/sec: 101493.97, flops:41.75, batch-reuse:1
@ 1695 train 6.2320 , allloss: 6.4720, dt: 1292.62ms, fracRes: 0.0364, norm(attn): 0.2119, norm(output): 0.2930, norm(x): 0.2718, norm(y): 0.9999, norm:3.6453, tok/sec: 101400.60, flops:41.71, batch-reuse:1
@ 1696 train 6.2154 , allloss: 6.4586, dt: 1318.68ms, fracRes: 0.0349, norm(attn): 0.2168, norm(output): 0.2910, norm(x): 0.2703, norm(y): 0.9998, norm:3.9463, tok/sec: 99396.34, flops:40.89, batch-reuse:1
@ 1697 train 6.2676 , allloss: 6.5161, dt: 1316.42ms, fracRes: 0.0331, norm(attn): 0.2129, norm(output): 0.2910, norm(x): 0.2726, norm(y): 0.9997, norm:2.8096, tok/sec: 99566.89, flops:40.96, batch-reuse:1
@ 1698 train 6.1712 , allloss: 6.4301, dt: 1303.21ms, fracRes: 0.0335, norm(attn): 0.2119, norm(output): 0.2930, norm(x): 0.2737, norm(y): 0.9997, norm:3.3366, tok/sec: 100576.62, flops:41.37, batch-reuse:1
@ 1699 train 6.2242 , allloss: 6.4913, dt: 1300.86ms, fracRes: 0.0337, norm(attn): 0.2139, norm(output): 0.2930, norm(x): 0.2724, norm(y): 0.9997, norm:2.6032, tok/sec: 100757.98, flops:41.45, batch-reuse:1
@ 1700 train 6.2224 , allloss: 6.4809, dt: 1288.94ms, fracRes: 0.0300, norm(attn): 0.2148, norm(output): 0.2852, norm(x): 0.2686, norm(y): 0.9997, norm:3.0103, tok/sec: 101689.41, flops:41.83, batch-reuse:1
@ 1701 train 6.1899 , allloss: 6.4397, dt: 1291.83ms, fracRes: 0.0296, norm(attn): 0.2188, norm(output): 0.2832, norm(x): 0.2658, norm(y): 0.9996, norm:4.2684, tok/sec: 101462.30, flops:41.74, batch-reuse:1
@ 1702 train 6.2311 , allloss: 6.4844, dt: 1319.46ms, fracRes: 0.0306, norm(attn): 0.2256, norm(output): 0.2832, norm(x): 0.2629, norm(y): 0.9996, norm:3.2542, tok/sec: 99337.97, flops:40.86, batch-reuse:1
@ 1703 train 6.2712 , allloss: 6.5244, dt: 1299.92ms, fracRes: 0.0316, norm(attn): 0.2295, norm(output): 0.2832, norm(x): 0.2637, norm(y): 0.9997, norm:5.5142, tok/sec: 100830.76, flops:41.48, batch-reuse:1
@ 1704 train 6.1714 , allloss: 6.4226, dt: 1291.74ms, fracRes: 0.0289, norm(attn): 0.2305, norm(output): 0.2793, norm(x): 0.2590, norm(y): 0.9996, norm:3.1803, tok/sec: 101469.53, flops:41.74, batch-reuse:1
@ 1705 train 6.2721 , allloss: 6.5272, dt: 1312.03ms, fracRes: 0.0231, norm(attn): 0.2227, norm(output): 0.2812, norm(x): 0.2611, norm(y): 0.9995, norm:4.8470, tok/sec: 99900.28, flops:41.09, batch-reuse:1
@ 1706 train 6.1268 , allloss: 6.3821, dt: 1299.31ms, fracRes: 0.0271, norm(attn): 0.2246, norm(output): 0.2793, norm(x): 0.2613, norm(y): 0.9996, norm:3.3688, tok/sec: 100877.77, flops:41.50, batch-reuse:1
@ 1707 train 6.1683 , allloss: 6.4288, dt: 1274.81ms, fracRes: 0.0274, norm(attn): 0.2227, norm(output): 0.2812, norm(x): 0.2628, norm(y): 0.9995, norm:2.3039, tok/sec: 102816.83, flops:42.29, batch-reuse:1
@ 1708 train 6.1700 , allloss: 6.4296, dt: 1296.50ms, fracRes: 0.0270, norm(attn): 0.2188, norm(output): 0.2852, norm(x): 0.2677, norm(y): 0.9995, norm:4.8590, tok/sec: 101096.95, flops:41.59, batch-reuse:1
@ 1709 train 6.2370 , allloss: 6.5031, dt: 1308.83ms, fracRes: 0.0261, norm(attn): 0.2178, norm(output): 0.2832, norm(x): 0.2669, norm(y): 0.9995, norm:3.1744, tok/sec: 100144.37, flops:41.19, batch-reuse:1
@ 1710 train 6.1877 , allloss: 6.4438, dt: 1326.12ms, fracRes: 0.0263, norm(attn): 0.2197, norm(output): 0.2832, norm(x): 0.2661, norm(y): 0.9995, norm:4.1940, tok/sec: 98838.48, flops:40.66, batch-reuse:1
@ 1711 train 6.1862 , allloss: 6.4414, dt: 1281.11ms, fracRes: 0.0281, norm(attn): 0.2207, norm(output): 0.2832, norm(x): 0.2642, norm(y): 0.9995, norm:2.9152, tok/sec: 102311.37, flops:42.09, batch-reuse:1
@ 1712 train 6.2283 , allloss: 6.4898, dt: 1289.90ms, fracRes: 0.0268, norm(attn): 0.2266, norm(output): 0.2773, norm(x): 0.2581, norm(y): 0.9994, norm:2.9512, tok/sec: 101614.36, flops:41.80, batch-reuse:1
@ 1713 train 6.0462 , allloss: 6.3078, dt: 1321.68ms, fracRes: 0.0240, norm(attn): 0.2227, norm(output): 0.2793, norm(x): 0.2607, norm(y): 0.9994, norm:3.8585, tok/sec: 99170.85, flops:40.79, batch-reuse:1
@ 1714 train 6.1493 , allloss: 6.4166, dt: 1297.23ms, fracRes: 0.0259, norm(attn): 0.2314, norm(output): 0.2812, norm(x): 0.2625, norm(y): 0.9994, norm:2.2543, tok/sec: 101040.13, flops:41.56, batch-reuse:1
@ 1715 train 6.1836 , allloss: 6.4454, dt: 1326.79ms, fracRes: 0.0270, norm(attn): 0.2314, norm(output): 0.2812, norm(x): 0.2610, norm(y): 0.9994, norm:2.9758, tok/sec: 98789.07, flops:40.64, batch-reuse:1
@ 1716 train 6.1874 , allloss: 6.4499, dt: 1321.99ms, fracRes: 0.0236, norm(attn): 0.2305, norm(output): 0.2812, norm(x): 0.2606, norm(y): 0.9994, norm:2.4580, tok/sec: 99147.44, flops:40.78, batch-reuse:1
@ 1717 train 6.3543 , allloss: 6.6302, dt: 1323.12ms, fracRes: 0.0193, norm(attn): 0.2354, norm(output): 0.2793, norm(x): 0.2592, norm(y): 0.9992, norm:3.9739, tok/sec: 99062.85, flops:40.75, batch-reuse:1
@ 1718 train 6.1311 , allloss: 6.4004, dt: 1284.50ms, fracRes: 0.0200, norm(attn): 0.2354, norm(output): 0.2812, norm(x): 0.2620, norm(y): 0.9992, norm:4.4644, tok/sec: 102041.02, flops:41.97, batch-reuse:1
@ 1719 train 6.2763 , allloss: 6.5458, dt: 1266.33ms, fracRes: 0.0208, norm(attn): 0.2344, norm(output): 0.2754, norm(x): 0.2550, norm(y): 0.9994, norm:4.7654, tok/sec: 103505.52, flops:42.58, batch-reuse:1
@ 1720 train 6.2027 , allloss: 6.4615, dt: 1293.77ms, fracRes: 0.0239, norm(attn): 0.2324, norm(output): 0.2773, norm(x): 0.2574, norm(y): 0.9995, norm:3.9883, tok/sec: 101310.12, flops:41.67, batch-reuse:1
@ 1721 train 6.1932 , allloss: 6.4443, dt: 1302.72ms, fracRes: 0.0242, norm(attn): 0.2344, norm(output): 0.2793, norm(x): 0.2587, norm(y): 0.9995, norm:3.0894, tok/sec: 100614.22, flops:41.39, batch-reuse:1
@ 1722 train 6.3023 , allloss: 6.5621, dt: 1286.08ms, fracRes: 0.0221, norm(attn): 0.2305, norm(output): 0.2793, norm(x): 0.2599, norm(y): 0.9995, norm:4.0964, tok/sec: 101915.81, flops:41.92, batch-reuse:1
@ 1723 train 6.1963 , allloss: 6.4592, dt: 1269.58ms, fracRes: 0.0196, norm(attn): 0.2266, norm(output): 0.2812, norm(x): 0.2608, norm(y): 0.9995, norm:3.0242, tok/sec: 103240.33, flops:42.47, batch-reuse:1
@ 1724 train 6.1718 , allloss: 6.4249, dt: 1259.61ms, fracRes: 0.0193, norm(attn): 0.2305, norm(output): 0.2832, norm(x): 0.2629, norm(y): 0.9995, norm:4.2144, tok/sec: 104057.79, flops:42.80, batch-reuse:1
@ 1725 train 6.1928 , allloss: 6.4489, dt: 1270.77ms, fracRes: 0.0173, norm(attn): 0.2246, norm(output): 0.2812, norm(x): 0.2624, norm(y): 0.9995, norm:3.4282, tok/sec: 103143.97, flops:42.43, batch-reuse:1
@ 1726 train 6.1607 , allloss: 6.4159, dt: 1258.24ms, fracRes: 0.0192, norm(attn): 0.2256, norm(output): 0.2793, norm(x): 0.2593, norm(y): 0.9996, norm:2.6655, tok/sec: 104170.83, flops:42.85, batch-reuse:1
@ 1727 train 6.1095 , allloss: 6.3587, dt: 1280.38ms, fracRes: 0.0209, norm(attn): 0.2305, norm(output): 0.2793, norm(x): 0.2585, norm(y): 0.9996, norm:2.5605, tok/sec: 102369.95, flops:42.11, batch-reuse:1
@ 1728 train 6.2075 , allloss: 6.4597, dt: 1282.58ms, fracRes: 0.0167, norm(attn): 0.2344, norm(output): 0.2793, norm(x): 0.2585, norm(y): 0.9995, norm:3.3902, tok/sec: 102193.74, flops:42.04, batch-reuse:1
@ 1729 train 6.3173 , allloss: 6.5744, dt: 1266.86ms, fracRes: 0.0164, norm(attn): 0.2305, norm(output): 0.2793, norm(x): 0.2592, norm(y): 0.9995, norm:4.2840, tok/sec: 103461.87, flops:42.56, batch-reuse:1
@ 1730 train 6.2645 , allloss: 6.5176, dt: 1270.49ms, fracRes: 0.0204, norm(attn): 0.2363, norm(output): 0.2695, norm(x): 0.2515, norm(y): 0.9996, norm:3.7574, tok/sec: 103166.23, flops:42.44, batch-reuse:1
@ 1731 train 6.2249 , allloss: 6.4726, dt: 1295.71ms, fracRes: 0.0224, norm(attn): 0.2363, norm(output): 0.2754, norm(x): 0.2537, norm(y): 0.9996, norm:3.8681, tok/sec: 101158.39, flops:41.61, batch-reuse:1
@ 1732 train 6.1832 , allloss: 6.4346, dt: 1292.71ms, fracRes: 0.0210, norm(attn): 0.2344, norm(output): 0.2695, norm(x): 0.2526, norm(y): 0.9996, norm:4.2219, tok/sec: 101393.08, flops:41.71, batch-reuse:1
@ 1733 train 6.1381 , allloss: 6.3860, dt: 1290.00ms, fracRes: 0.0175, norm(attn): 0.2324, norm(output): 0.2715, norm(x): 0.2530, norm(y): 0.9997, norm:3.3203, tok/sec: 101605.96, flops:41.80, batch-reuse:1
@ 1734 train 6.4131 , allloss: 6.6579, dt: 1297.08ms, fracRes: 0.0159, norm(attn): 0.2266, norm(output): 0.2793, norm(x): 0.2582, norm(y): 0.9997, norm:3.2908, tok/sec: 101051.33, flops:41.57, batch-reuse:1
@ 1735 train 6.1585 , allloss: 6.3976, dt: 1299.03ms, fracRes: 0.0135, norm(attn): 0.2275, norm(output): 0.2793, norm(x): 0.2586, norm(y): 0.9996, norm:2.8539, tok/sec: 100899.60, flops:41.51, batch-reuse:1
@ 1736 train 6.1640 , allloss: 6.4033, dt: 1278.99ms, fracRes: 0.0140, norm(attn): 0.2344, norm(output): 0.2754, norm(x): 0.2559, norm(y): 0.9997, norm:4.2261, tok/sec: 102481.22, flops:42.16, batch-reuse:1
@ 1737 train 6.1327 , allloss: 6.3747, dt: 1285.81ms, fracRes: 0.0117, norm(attn): 0.2305, norm(output): 0.2773, norm(x): 0.2563, norm(y): 0.9997, norm:3.7072, tok/sec: 101937.43, flops:41.93, batch-reuse:1
@ 1738 train 6.0986 , allloss: 6.3386, dt: 1285.79ms, fracRes: 0.0145, norm(attn): 0.2344, norm(output): 0.2715, norm(x): 0.2510, norm(y): 0.9998, norm:3.3106, tok/sec: 101939.21, flops:41.93, batch-reuse:1
@ 1739 train 6.1904 , allloss: 6.4344, dt: 1293.84ms, fracRes: 0.0156, norm(attn): 0.2285, norm(output): 0.2773, norm(x): 0.2568, norm(y): 0.9997, norm:2.7594, tok/sec: 101304.84, flops:41.67, batch-reuse:1
@ 1740 train 6.1195 , allloss: 6.3634, dt: 1297.00ms, fracRes: 0.0116, norm(attn): 0.2256, norm(output): 0.2793, norm(x): 0.2580, norm(y): 0.9997, norm:4.8568, tok/sec: 101058.09, flops:41.57, batch-reuse:1
@ 1741 train 6.1346 , allloss: 6.3789, dt: 1276.93ms, fracRes: 0.0120, norm(attn): 0.2344, norm(output): 0.2734, norm(x): 0.2539, norm(y): 0.9997, norm:3.9020, tok/sec: 102646.11, flops:42.22, batch-reuse:1
@ 1742 train 6.1638 , allloss: 6.4058, dt: 1312.59ms, fracRes: 0.0122, norm(attn): 0.2354, norm(output): 0.2695, norm(x): 0.2521, norm(y): 0.9997, norm:3.2597, tok/sec: 99857.78, flops:41.08, batch-reuse:1
@ 1743 train 6.2273 , allloss: 6.4698, dt: 1284.31ms, fracRes: 0.0186, norm(attn): 0.2344, norm(output): 0.2695, norm(x): 0.2498, norm(y): 0.9997, norm:4.0619, tok/sec: 102056.50, flops:41.98, batch-reuse:1
@ 1744 train 6.1136 , allloss: 6.3649, dt: 1278.01ms, fracRes: 0.0182, norm(attn): 0.2344, norm(output): 0.2676, norm(x): 0.2484, norm(y): 0.9997, norm:4.4444, tok/sec: 102559.36, flops:42.19, batch-reuse:1
@ 1745 train 6.1165 , allloss: 6.3659, dt: 1275.47ms, fracRes: 0.0136, norm(attn): 0.2334, norm(output): 0.2695, norm(x): 0.2504, norm(y): 0.9997, norm:5.1663, tok/sec: 102764.03, flops:42.27, batch-reuse:1
@ 1746 train 6.2069 , allloss: 6.4635, dt: 1269.77ms, fracRes: 0.0134, norm(attn): 0.2246, norm(output): 0.2715, norm(x): 0.2528, norm(y): 0.9997, norm:2.9106, tok/sec: 103225.27, flops:42.46, batch-reuse:1
@ 1747 train 6.1076 , allloss: 6.3568, dt: 1270.85ms, fracRes: 0.0150, norm(attn): 0.2295, norm(output): 0.2695, norm(x): 0.2513, norm(y): 0.9998, norm:4.4523, tok/sec: 103136.97, flops:42.43, batch-reuse:1
@ 1748 train 6.0908 , allloss: 6.3346, dt: 1276.51ms, fracRes: 0.0169, norm(attn): 0.2344, norm(output): 0.2715, norm(x): 0.2514, norm(y): 0.9998, norm:4.5458, tok/sec: 102680.27, flops:42.24, batch-reuse:1
@ 1749 train 6.1964 , allloss: 6.4405, dt: 1293.16ms, fracRes: 0.0136, norm(attn): 0.2402, norm(output): 0.2656, norm(x): 0.2462, norm(y): 0.9998, norm:3.4407, tok/sec: 101358.12, flops:41.69, batch-reuse:1
@ 1750 train 6.1989 , allloss: 6.4409, dt: 1306.08ms, fracRes: 0.0144, norm(attn): 0.2471, norm(output): 0.2617, norm(x): 0.2416, norm(y): 0.9999, norm:4.0561, tok/sec: 100355.46, flops:41.28, batch-reuse:1
@ 1751 train 6.3327 , allloss: 6.5870, dt: 1270.65ms, fracRes: 0.0170, norm(attn): 0.2354, norm(output): 0.2656, norm(x): 0.2495, norm(y): 0.9998, norm:4.5427, tok/sec: 103153.22, flops:42.43, batch-reuse:1
@ 1752 train 6.3763 , allloss: 6.6341, dt: 1312.20ms, fracRes: 0.0185, norm(attn): 0.2314, norm(output): 0.2754, norm(x): 0.2540, norm(y): 0.9998, norm:6.2500, tok/sec: 99887.24, flops:41.09, batch-reuse:1
@ 1753 train 6.2177 , allloss: 6.4738, dt: 1286.55ms, fracRes: 0.0161, norm(attn): 0.2168, norm(output): 0.2793, norm(x): 0.2590, norm(y): 0.9999, norm:3.7101, tok/sec: 101878.97, flops:41.91, batch-reuse:1
@ 1754 train 6.1942 , allloss: 6.4413, dt: 1297.98ms, fracRes: 0.0176, norm(attn): 0.2236, norm(output): 0.2754, norm(x): 0.2560, norm(y): 0.9999, norm:3.5229, tok/sec: 100981.91, flops:41.54, batch-reuse:1
@ 1755 train 6.2067 , allloss: 6.4499, dt: 1289.22ms, fracRes: 0.0185, norm(attn): 0.2324, norm(output): 0.2754, norm(x): 0.2538, norm(y): 0.9999, norm:4.2913, tok/sec: 101667.65, flops:41.82, batch-reuse:1
@ 1756 train 6.1707 , allloss: 6.4048, dt: 1278.33ms, fracRes: 0.0188, norm(attn): 0.2363, norm(output): 0.2773, norm(x): 0.2543, norm(y): 0.9998, norm:4.3378, tok/sec: 102533.61, flops:42.18, batch-reuse:1
@ 1757 train 6.2383 , allloss: 6.4852, dt: 1295.58ms, fracRes: 0.0143, norm(attn): 0.2285, norm(output): 0.2773, norm(x): 0.2554, norm(y): 0.9998, norm:3.7190, tok/sec: 101168.76, flops:41.62, batch-reuse:1
@ 1758 train 6.1845 , allloss: 6.4365, dt: 1296.28ms, fracRes: 0.0194, norm(attn): 0.2344, norm(output): 0.2715, norm(x): 0.2521, norm(y): 0.9998, norm:4.0992, tok/sec: 101114.08, flops:41.59, batch-reuse:1
@ 1759 train 6.1958 , allloss: 6.4438, dt: 1296.73ms, fracRes: 0.0175, norm(attn): 0.2305, norm(output): 0.2715, norm(x): 0.2524, norm(y): 0.9998, norm:4.9357, tok/sec: 101078.98, flops:41.58, batch-reuse:1
@ 1760 train 6.1009 , allloss: 6.3506, dt: 1303.17ms, fracRes: 0.0127, norm(attn): 0.2314, norm(output): 0.2715, norm(x): 0.2542, norm(y): 0.9998, norm:4.1784, tok/sec: 100579.52, flops:41.37, batch-reuse:1
@ 1761 train 6.1106 , allloss: 6.3597, dt: 1268.21ms, fracRes: 0.0133, norm(attn): 0.2334, norm(output): 0.2793, norm(x): 0.2582, norm(y): 0.9999, norm:5.6356, tok/sec: 103351.92, flops:42.51, batch-reuse:1
@ 1762 train 5.9806 , allloss: 6.2331, dt: 1269.83ms, fracRes: 0.0118, norm(attn): 0.2334, norm(output): 0.2773, norm(x): 0.2591, norm(y): 0.9998, norm:3.9805, tok/sec: 103220.37, flops:42.46, batch-reuse:1
@ 1763 train 6.0821 , allloss: 6.3363, dt: 1289.99ms, fracRes: 0.0117, norm(attn): 0.2295, norm(output): 0.2773, norm(x): 0.2567, norm(y): 0.9998, norm:2.7185, tok/sec: 101606.67, flops:41.80, batch-reuse:1
@ 1764 train 6.1079 , allloss: 6.3542, dt: 1295.93ms, fracRes: 0.0121, norm(attn): 0.2305, norm(output): 0.2734, norm(x): 0.2542, norm(y): 0.9998, norm:3.3484, tok/sec: 101141.61, flops:41.60, batch-reuse:1
@ 1765 train 6.1140 , allloss: 6.3673, dt: 1285.34ms, fracRes: 0.0140, norm(attn): 0.2412, norm(output): 0.2656, norm(x): 0.2474, norm(y): 0.9999, norm:3.3726, tok/sec: 101974.68, flops:41.95, batch-reuse:1
@ 1766 train 6.0892 , allloss: 6.3418, dt: 1267.75ms, fracRes: 0.0105, norm(attn): 0.2334, norm(output): 0.2734, norm(x): 0.2523, norm(y): 0.9998, norm:4.6166, tok/sec: 103389.20, flops:42.53, batch-reuse:1
@ 1767 train 6.1123 , allloss: 6.3582, dt: 1270.09ms, fracRes: 0.0107, norm(attn): 0.2305, norm(output): 0.2754, norm(x): 0.2550, norm(y): 0.9998, norm:4.4637, tok/sec: 103198.82, flops:42.45, batch-reuse:1
@ 1768 train 6.1734 , allloss: 6.4216, dt: 1270.15ms, fracRes: 0.0099, norm(attn): 0.2207, norm(output): 0.2793, norm(x): 0.2581, norm(y): 0.9998, norm:2.6736, tok/sec: 103194.17, flops:42.45, batch-reuse:1
@ 1769 train 6.0627 , allloss: 6.3144, dt: 1277.54ms, fracRes: 0.0109, norm(attn): 0.2344, norm(output): 0.2734, norm(x): 0.2520, norm(y): 0.9999, norm:3.8886, tok/sec: 102597.37, flops:42.20, batch-reuse:1
@ 1770 train 6.0897 , allloss: 6.3355, dt: 1281.64ms, fracRes: 0.0128, norm(attn): 0.2480, norm(output): 0.2695, norm(x): 0.2497, norm(y): 0.9999, norm:4.0958, tok/sec: 102269.25, flops:42.07, batch-reuse:1
@ 1771 train 6.0467 , allloss: 6.2882, dt: 1282.49ms, fracRes: 0.0109, norm(attn): 0.2354, norm(output): 0.2695, norm(x): 0.2524, norm(y): 0.9999, norm:2.4051, tok/sec: 102201.47, flops:42.04, batch-reuse:1
@ 1772 train 6.1165 , allloss: 6.3673, dt: 1267.80ms, fracRes: 0.0092, norm(attn): 0.2207, norm(output): 0.2793, norm(x): 0.2585, norm(y): 0.9999, norm:4.0199, tok/sec: 103385.27, flops:42.53, batch-reuse:1
@ 1773 train 5.9963 , allloss: 6.2465, dt: 1288.27ms, fracRes: 0.0092, norm(attn): 0.2178, norm(output): 0.2832, norm(x): 0.2621, norm(y): 0.9999, norm:2.5963, tok/sec: 101742.61, flops:41.85, batch-reuse:1
@ 1774 train 6.1065 , allloss: 6.3572, dt: 1310.53ms, fracRes: 0.0093, norm(attn): 0.2266, norm(output): 0.2793, norm(x): 0.2567, norm(y): 0.9999, norm:3.7603, tok/sec: 100014.21, flops:41.14, batch-reuse:1
@ 1775 train 6.0938 , allloss: 6.3414, dt: 1281.12ms, fracRes: 0.0104, norm(attn): 0.2334, norm(output): 0.2695, norm(x): 0.2502, norm(y): 0.9999, norm:3.9863, tok/sec: 102310.61, flops:42.09, batch-reuse:1
@ 1776 train 6.0473 , allloss: 6.2877, dt: 1287.26ms, fracRes: 0.0103, norm(attn): 0.2334, norm(output): 0.2734, norm(x): 0.2523, norm(y): 0.9998, norm:4.4622, tok/sec: 101822.43, flops:41.88, batch-reuse:1
@ 1777 train 6.0531 , allloss: 6.2868, dt: 1296.08ms, fracRes: 0.0122, norm(attn): 0.2324, norm(output): 0.2754, norm(x): 0.2552, norm(y): 0.9999, norm:3.1953, tok/sec: 101129.37, flops:41.60, batch-reuse:1
@ 1778 train 6.3086 , allloss: 6.5402, dt: 1271.42ms, fracRes: 0.0120, norm(attn): 0.2227, norm(output): 0.2812, norm(x): 0.2620, norm(y): 1.0000, norm:3.8898, tok/sec: 103091.09, flops:42.41, batch-reuse:1
@ 1779 train 6.0347 , allloss: 6.2705, dt: 1285.33ms, fracRes: 0.0077, norm(attn): 0.2188, norm(output): 0.2832, norm(x): 0.2646, norm(y): 1.0000, norm:4.2694, tok/sec: 101975.59, flops:41.95, batch-reuse:1
@ 1780 train 6.1376 , allloss: 6.3741, dt: 1290.04ms, fracRes: 0.0082, norm(attn): 0.2168, norm(output): 0.2910, norm(x): 0.2702, norm(y): 0.9999, norm:5.2439, tok/sec: 101603.05, flops:41.79, batch-reuse:1
@ 1781 train 6.1191 , allloss: 6.3565, dt: 1283.01ms, fracRes: 0.0083, norm(attn): 0.2168, norm(output): 0.2852, norm(x): 0.2669, norm(y): 0.9998, norm:3.0598, tok/sec: 102159.57, flops:42.02, batch-reuse:1
@ 1782 train 6.1099 , allloss: 6.3530, dt: 1325.06ms, fracRes: 0.0093, norm(attn): 0.2246, norm(output): 0.2754, norm(x): 0.2563, norm(y): 0.9998, norm:4.1890, tok/sec: 98918.10, flops:40.69, batch-reuse:1
@ 1783 train 6.0515 , allloss: 6.2950, dt: 1315.81ms, fracRes: 0.0101, norm(attn): 0.2334, norm(output): 0.2695, norm(x): 0.2505, norm(y): 0.9999, norm:3.2707, tok/sec: 99613.17, flops:40.98, batch-reuse:1
@ 1784 train 6.0599 , allloss: 6.2953, dt: 1287.01ms, fracRes: 0.0118, norm(attn): 0.2314, norm(output): 0.2754, norm(x): 0.2552, norm(y): 0.9999, norm:2.8362, tok/sec: 101842.11, flops:41.89, batch-reuse:1
@ 1785 train 6.1126 , allloss: 6.3458, dt: 1292.92ms, fracRes: 0.0123, norm(attn): 0.2305, norm(output): 0.2773, norm(x): 0.2551, norm(y): 0.9999, norm:4.1731, tok/sec: 101376.89, flops:41.70, batch-reuse:1
