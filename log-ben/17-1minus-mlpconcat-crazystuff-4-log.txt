Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.00015
Experiment name: 17-1minus-mlpconcat-crazystuff-4
MLPSCALE: 2
Experiment description: Transformer, max LR 0.00015
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config) 
========
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights * y + (1-xWeights)*machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=True
MLP_SCALE=2
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 6, with 45,318,144 parameters
num non-decayed parameter tensors: 6, with 5,376 parameters
@ 0 train 10.9710 , allloss: 12.9500, dt: 2727.96ms, fracRes: 0.0062, norm(attn): 0.0349, norm(output): 0.0518, norm(x): 0.0542, norm(y): 0.9986, norm:22.2496, tok/sec: 48047.69, flops:18.72, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3809, 0.6211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3262, 0.2324, 0.4414, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.3633, 0.1953, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1953, 0.1270, 0.2080, 0.2256, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.1602, 0.1602, 0.0977, 0.2500, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1235, 0.1504, 0.1650, 0.1914, 0.1816, 0.1270, 0.0610, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.1182, 0.1504, 0.1650, 0.0923, 0.0879, 0.1138, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.0723, 0.0981, 0.1040, 0.0771, 0.1553, 0.1328, 0.1240, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.1377, 0.1011, 0.1035, 0.0559, 0.1226, 0.0664, 0.1001, 0.0723, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.0977, 0.0684, 0.1396, 0.0771, 0.0610, 0.0791, 0.1128, 0.0889, 0.0830, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.0928, 0.0869, 0.0698, 0.0752, 0.0942, 0.0771, 0.1143, 0.0928, 0.0981, 0.0564, 0.0605, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0684, 0.0840, 0.1089, 0.0854, 0.0732, 0.0874, 0.0703, 0.0566, 0.0669, 0.0713, 0.0908, 0.0586, 0.0000, 0.0000],
        [0.0688, 0.0449, 0.0620, 0.0645, 0.0581, 0.1089, 0.0569, 0.0684, 0.0615, 0.0613, 0.0679, 0.0579, 0.1226, 0.0967, 0.0000],
        [0.0552, 0.0605, 0.1064, 0.0437, 0.0525, 0.0801, 0.0398, 0.0967, 0.0928, 0.0479, 0.0459, 0.0791, 0.0635, 0.0684, 0.0679]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0015, -0.0264,  0.0124,  ..., -0.0122,  0.0011,  0.0109],
        [ 0.0229,  0.0005,  0.0274,  ...,  0.0124, -0.0283, -0.0063],
        [-0.0090, -0.0043, -0.0104,  ..., -0.0307, -0.0191, -0.0222],
        ...,
        [ 0.0094,  0.0035,  0.0012,  ..., -0.0007,  0.0323, -0.0351],
        [ 0.0045,  0.0129, -0.0241,  ...,  0.0190, -0.0184, -0.0037],
        [-0.0277, -0.0090, -0.0094,  ...,  0.0153, -0.0287, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([-0.0278,  0.1973, -0.5898,  0.0432, -0.3652,  1.3359, -0.0679, -0.0518, -0.1836,  0.2910,  0.2295,  0.3164,  0.1738,  0.6016,  0.2451, -1.0703,  0.4102,  0.2871,  0.5664,  0.4062, -0.7852,  0.2852,  0.7188, -0.2793, -0.3633, -0.9180, -0.6367, -0.3906,  0.3457, -0.0425,  0.3457, -0.6094,
        -0.1299,  0.5039,  0.4570, -0.6250, -0.0291,  0.4492,  0.4375, -0.5781, -0.4316, -0.1992, -0.1025, -0.9570, -0.2500, -0.8438, -0.2812, -0.0649,  0.1904, -0.0806,  0.3770,  0.1328,  0.1680,  0.0221,  0.8906,  0.2334, -0.9609, -0.0408,  0.1455, -0.7539,  0.2021,  0.4688, -0.4355, -1.0469],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0182, -0.0209, -0.0106,  ..., -0.0062,  0.0413,  0.0021],
        [-0.0089, -0.0153,  0.0058,  ...,  0.0017, -0.0074, -0.0024],
        [-0.0339, -0.0526, -0.0046,  ..., -0.0023,  0.0184,  0.0175],
        ...,
        [ 0.0047, -0.0013, -0.0090,  ..., -0.0423, -0.0129, -0.0136],
        [-0.0276, -0.0051,  0.0033,  ..., -0.0222,  0.0135,  0.0127],
        [ 0.0213,  0.0044, -0.0175,  ..., -0.0037,  0.0028, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5039, -0.0403, -0.2520, -1.0312,  0.2734,  0.1709, -1.0625, -0.0613,  0.6602,  0.1846, -1.0547, -0.8359, -0.5859,  0.6406, -0.3320,  0.4961, -0.2617,  0.9219,  0.2109, -0.2295, -0.3828, -0.1631,  0.3066, -0.5742, -0.2021, -0.4512, -0.0737, -0.9531, -0.6016,  0.0649, -0.2734,  0.0049,
         0.1621, -0.9805, -0.6094, -0.9062,  0.1099,  0.4766, -0.4805,  0.3633, -0.8242, -0.0552,  0.4785, -0.9648,  1.0469, -0.5664,  0.1943, -0.1543,  0.8125, -1.0469, -0.5352, -0.6445,  0.0219, -0.6797, -0.0952,  0.6719,  0.7109, -0.0771, -0.1836, -0.0977, -0.3691,  0.1211,  0.0322, -0.4844],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.4883,     -0.0513,     -0.0002,      0.2041,     -0.1611,     -0.0972,      0.3926,      0.0496,     -0.0132,      0.1245,     -0.5938,     -0.1768,      0.2793,     -0.3066],
        [     0.0000,     -0.3340,      0.3047,     -0.3594,     -0.1357,      0.0267,      0.3496,     -0.4609,     -0.0498,     -0.1738,     -0.3398,      0.1270,     -0.0183,     -0.0781,     -0.0854],
        [     0.0000,      0.2656,     -0.3535,     -0.5352,      0.0874,      0.4980,     -0.6016,     -0.1318,     -0.0156,     -0.1543,      0.1494,      0.0342,      0.5859,      0.3594,     -0.1514],
        [     0.0000,     -0.4316,      0.0649,      0.1455,      0.2197,     -0.2949,      0.1396,      0.0072,     -0.1465,     -0.1455,     -0.2676,      0.0620,     -0.2891,      0.2969,      0.5781],
        [     0.0000,      0.0050,     -0.0006,     -0.4922,      0.4512,      0.0679,      0.0596,      0.0063,      0.2334,      0.3027,     -0.2852,     -0.2598,      0.1865,      0.0420,      0.3809],
        [     0.0000,      0.1973,      0.2871,      0.4375,      0.3867,      0.0244,     -0.7070,     -0.7773,     -0.2363,      0.2432,     -0.5117,     -0.4785,      0.4023,      0.0928,     -0.0967],
        [     0.0000,     -0.0304,      0.2119,      0.3047,     -0.2734,     -0.3262,     -0.0664,      0.2139,     -0.2988,      0.2324,      0.0030,     -0.0320,     -0.2256,     -0.4336,     -0.1738],
        [     0.0000,     -0.4316,     -0.1250,     -0.0674,     -0.3672,      0.3340,      0.1758,      0.1099,      0.1152,      0.3984,      0.0574,     -0.1650,     -0.1553,      0.3574,     -0.0947],
        [     0.0000,      0.2969,     -0.0080,      0.0159,     -0.6016,      0.1816,     -0.4316,     -0.0211,     -0.3418,      0.3086,      0.2295,     -0.2715,      0.0266,      0.2500,     -0.3926],
        [     0.0000,      0.0645,     -0.2930,      0.4219,     -0.1738,     -0.4082,     -0.1455,      0.2090,     -0.0309,     -0.1001,      0.0869,      0.0574,     -0.3086,      0.2676,     -0.3730],
        [     0.0000,      0.1328,      0.0679,     -0.1504,     -0.0767,      0.1455,     -0.0532,      0.3398,      0.1318,      0.1895,     -0.3672,     -0.2969,     -0.2676,      0.1226,      0.0029],
        [     0.0000,     -0.1416,      0.0645,      0.3242,      0.0801,     -0.0742,      0.1069,     -0.1147,     -0.3281,     -0.1650,     -0.0991,      0.1406,     -0.2930,      0.1021,      0.4160],
        [     0.0000,     -0.4258,     -0.1021,     -0.0664,     -0.1689,      0.4609,     -0.1875,     -0.0072,     -0.1123,     -0.1133,     -0.0127,     -0.1719,      0.5820,      0.3438,     -0.1738],
        [     0.0000,      0.0913,      0.6562,     -0.2363,     -0.0498,      0.3672,     -0.3320,      0.5547,      0.5195,     -0.1445,     -0.1836,      0.3555,      0.1416,      0.2090,      0.2070]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4642],
        [0.3286],
        [0.2371],
        [0.2037],
        [0.1619],
        [0.1401],
        [0.1212],
        [0.1082],
        [0.0969],
        [0.0879],
        [0.0810],
        [0.0755],
        [0.0689],
        [0.0609]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3828, 0.6172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3203, 0.2305, 0.4492, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.3203, 0.2207, 0.1846, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.1226, 0.2012, 0.2285, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.1582, 0.1631, 0.1050, 0.2393, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1807, 0.1631, 0.1807, 0.1533, 0.1235, 0.0688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1206, 0.1113, 0.1748, 0.1514, 0.0923, 0.0835, 0.1235, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.0703, 0.0972, 0.1230, 0.0742, 0.1113, 0.1514, 0.1504, 0.1162, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.1187, 0.1318, 0.1211, 0.0503, 0.0928, 0.0820, 0.1021, 0.0728, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.1133, 0.0825, 0.1777, 0.0952, 0.0610, 0.0664, 0.0791, 0.0613, 0.0752, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0854, 0.0903, 0.0986, 0.0703, 0.0732, 0.0938, 0.0986, 0.1118, 0.0762, 0.0918, 0.0601, 0.0500, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0623, 0.0879, 0.0972, 0.0952, 0.0737, 0.1050, 0.0786, 0.0603, 0.0654, 0.0786, 0.0591, 0.0593, 0.0000, 0.0000],
        [0.0649, 0.0376, 0.0630, 0.0820, 0.0444, 0.1094, 0.0554, 0.0791, 0.0723, 0.0713, 0.0713, 0.0562, 0.0713, 0.1226, 0.0000],
        [0.0630, 0.0481, 0.0781, 0.0503, 0.0645, 0.1309, 0.0481, 0.0894, 0.0713, 0.0579, 0.0479, 0.0684, 0.0732, 0.0496, 0.0598]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0015, -0.0264,  0.0124,  ..., -0.0122,  0.0011,  0.0109],
        [ 0.0229,  0.0005,  0.0274,  ...,  0.0124, -0.0283, -0.0063],
        [-0.0090, -0.0043, -0.0104,  ..., -0.0307, -0.0191, -0.0222],
        ...,
        [ 0.0094,  0.0035,  0.0012,  ..., -0.0007,  0.0323, -0.0351],
        [ 0.0045,  0.0129, -0.0241,  ...,  0.0190, -0.0184, -0.0037],
        [-0.0277, -0.0090, -0.0094,  ...,  0.0153, -0.0287, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2246,  0.1680,  0.1377,  0.6016, -0.0903,  1.2500,  0.0747, -0.4102, -0.4453,  0.1904, -0.5234,  0.4961,  0.5000,  1.1328,  0.4668, -1.1250,  0.8477,  0.4980,  1.0547,  0.8711, -0.1318, -0.0588,  0.0579, -0.4082, -0.3320, -0.3301, -0.6484,  0.0623,  0.4746,  0.1147,  0.2949, -1.0547,
         0.2422,  0.5742,  0.4824, -1.3281, -0.0059,  0.3906,  0.1934, -0.5391, -0.1147, -0.4453, -0.7500, -0.6758, -0.1055, -1.0703, -0.6484, -0.3809,  0.0796, -0.2734,  0.3008,  0.3867,  0.2324,  0.2207,  0.4121,  0.3203, -0.8516, -0.4277,  0.4160, -0.5859, -0.2061, -0.1299, -0.9922, -0.8633],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0182, -0.0209, -0.0106,  ..., -0.0062,  0.0413,  0.0021],
        [-0.0089, -0.0153,  0.0058,  ...,  0.0017, -0.0074, -0.0024],
        [-0.0339, -0.0526, -0.0046,  ..., -0.0023,  0.0184,  0.0175],
        ...,
        [ 0.0047, -0.0013, -0.0090,  ..., -0.0423, -0.0129, -0.0136],
        [-0.0276, -0.0051,  0.0033,  ..., -0.0222,  0.0135,  0.0127],
        [ 0.0213,  0.0044, -0.0175,  ..., -0.0037,  0.0028, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1035,  0.7539, -0.3027, -0.3398,  0.3027,  0.0586, -0.4688,  0.6602,  0.2812, -0.0498, -0.4199, -0.5742, -0.6484,  0.2832, -0.2520, -0.4180, -0.6016,  1.0078, -0.1943, -0.7539,  0.2598, -0.0505,  0.5625, -0.5938, -0.5156, -0.2119,  0.3320, -0.6016, -0.3672, -0.0708, -0.8047,  0.2949,
        -0.3184, -0.8828, -0.6680, -0.8516,  0.8789,  0.5117, -0.2441,  0.4062, -0.6836, -0.1689,  0.8867, -0.9961,  1.1484, -1.0312,  0.3594, -0.1650,  0.6484, -0.7109, -0.6992, -1.7578, -0.3984, -0.0669,  0.1719,  1.0781, -0.0282, -0.1680, -0.0625,  0.1621, -0.0378,  0.2393, -0.2871, -0.2305],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.4766,     -0.0518,      0.0009,      0.1147,     -0.1797,     -0.1050,      0.3398,     -0.1055,     -0.1641,      0.0004,     -0.4434,     -0.2314,      0.2617,     -0.2412],
        [     0.0000,     -0.3281,      0.3418,     -0.3379,     -0.0864,      0.0723,      0.3574,     -0.3887,     -0.0564,     -0.0493,     -0.3242,      0.1108,     -0.2305,     -0.2148,     -0.2520],
        [     0.0000,      0.1484,     -0.2227,     -0.4043,     -0.0144,      0.4902,     -0.5391,     -0.0972,     -0.1196,      0.0403,     -0.0248,     -0.0383,      0.5000,      0.0491,     -0.3535],
        [     0.0000,     -0.4316,      0.0596,      0.1885,      0.3145,     -0.3145,      0.1484,      0.1084,     -0.0659,     -0.1455,      0.0266,      0.1943,     -0.0496,      0.2383,      0.1367],
        [     0.0000,     -0.0459,     -0.0134,     -0.4590,      0.3691,      0.0156,      0.0131,      0.0659,      0.2334,      0.3086,     -0.3984,     -0.1108,      0.1836,     -0.1836,      0.7539],
        [     0.0000,      0.3301,      0.2246,      0.3262,      0.1621,     -0.0510,     -0.6328,     -0.5430,     -0.3359,      0.0515,     -0.4102,     -0.4766,      0.2207,     -0.0294,      0.2695],
        [     0.0000,     -0.0801,      0.3691,      0.2266,     -0.2676,     -0.3711,      0.0239,      0.1660,     -0.0540,      0.0703,      0.1118,      0.0430,     -0.0189,     -0.0520,     -0.1689],
        [     0.0000,     -0.4102,     -0.0908,      0.1475,     -0.3594,      0.0469,      0.3535,      0.3438,      0.0894,      0.3633,      0.2480,     -0.1167,     -0.2676,      0.3105,      0.2236],
        [     0.0000,      0.1514,      0.2539,      0.1699,     -0.7109,     -0.0938,     -0.2158,      0.0013,     -0.3379,      0.2158,      0.0308,     -0.3633,     -0.2910,      0.0354,      0.1387],
        [     0.0000,      0.1973,     -0.1196,      0.6484,      0.0239,     -0.4199,     -0.3320,     -0.1602,     -0.4180,     -0.2129,      0.0309,      0.1660,     -0.3086,     -0.2061,     -0.2949],
        [     0.0000,      0.0527,      0.1426,     -0.1953,     -0.1562,      0.0908,      0.1445,      0.2695,     -0.1162,      0.0708,     -0.3555,     -0.5352,     -0.0199,     -0.1104,     -0.0493],
        [     0.0000,     -0.2148,      0.1309,      0.2314,      0.2080,     -0.0447,      0.3047,      0.0186,     -0.2490,     -0.1631,      0.0164,     -0.2676,     -0.2637,      0.2656,     -0.1338],
        [     0.0000,     -0.5469,     -0.0344,      0.2305,     -0.3809,      0.5195,     -0.1582,      0.1934,      0.1035,      0.0898,      0.0947,     -0.1465,      0.0903,      0.6328,      0.0977],
        [     0.0000,     -0.2637,      0.2188,     -0.2227,      0.0282,      0.7344,     -0.2656,      0.3516,      0.1260,     -0.0796,     -0.2695,      0.0845,      0.1523,     -0.2344,     -0.0493]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4622],
        [0.3309],
        [0.2387],
        [0.2022],
        [0.1621],
        [0.1419],
        [0.1224],
        [0.1092],
        [0.0968],
        [0.0887],
        [0.0801],
        [0.0782],
        [0.0707],
        [0.0632]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3867, 0.6133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.2305, 0.4570, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.2773, 0.2422, 0.2109, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1216, 0.1904, 0.2285, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.1523, 0.1699, 0.1143, 0.2285, 0.1611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1953, 0.1602, 0.1680, 0.1270, 0.1279, 0.0830, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1191, 0.1099, 0.1836, 0.1250, 0.1040, 0.0806, 0.1338, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.0786, 0.1001, 0.1270, 0.0796, 0.0791, 0.1660, 0.1631, 0.1084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.0962, 0.1514, 0.1187, 0.0579, 0.0771, 0.0942, 0.1133, 0.0801, 0.1128, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.1123, 0.0967, 0.1875, 0.1030, 0.0640, 0.0679, 0.0688, 0.0474, 0.0718, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.0820, 0.1133, 0.0732, 0.0737, 0.0894, 0.1040, 0.1182, 0.0649, 0.0776, 0.0645, 0.0525, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0518, 0.0811, 0.0879, 0.1021, 0.0737, 0.0928, 0.0811, 0.0703, 0.0732, 0.0840, 0.0566, 0.0698, 0.0000, 0.0000],
        [0.0640, 0.0420, 0.0825, 0.0864, 0.0464, 0.0806, 0.0552, 0.0923, 0.0737, 0.0771, 0.0630, 0.0703, 0.0557, 0.1108, 0.0000],
        [0.0684, 0.0510, 0.0835, 0.0461, 0.0669, 0.1138, 0.0413, 0.0811, 0.0703, 0.0684, 0.0503, 0.0630, 0.0825, 0.0500, 0.0635]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0015, -0.0264,  0.0124,  ..., -0.0122,  0.0011,  0.0109],
        [ 0.0229,  0.0005,  0.0274,  ...,  0.0124, -0.0283, -0.0063],
        [-0.0090, -0.0043, -0.0104,  ..., -0.0307, -0.0191, -0.0222],
        ...,
        [ 0.0094,  0.0035,  0.0012,  ..., -0.0007,  0.0323, -0.0351],
        [ 0.0045,  0.0129, -0.0241,  ...,  0.0190, -0.0184, -0.0037],
        [-0.0277, -0.0090, -0.0094,  ...,  0.0153, -0.0287, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4395, -0.1064,  0.3496,  0.8984, -0.0613,  1.0703,  0.1758, -0.7539, -0.5234,  0.3027, -1.3516,  0.4258,  0.2119,  1.3047,  0.5781, -0.7734,  0.5312,  0.7109,  1.0469,  0.6133,  0.5273, -0.1719, -0.1738, -0.2734,  0.0157,  0.2969, -0.4785,  0.2363,  0.4277,  0.2559,  0.3301, -1.0859,
         0.2695,  0.3789,  0.3711, -1.1797, -0.1030,  0.3457, -0.1191, -0.1895, -0.2734, -0.6055, -1.1094, -0.3789,  0.4531, -0.7578, -0.6445, -0.6562,  0.0142, -0.2695, -0.1572,  0.2793,  0.2754,  0.3477,  0.1523,  0.3398, -1.0859, -0.5234,  0.6953, -0.3633, -0.5352, -0.4590, -0.5039, -0.5703],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0182, -0.0209, -0.0106,  ..., -0.0062,  0.0413,  0.0021],
        [-0.0089, -0.0153,  0.0058,  ...,  0.0017, -0.0074, -0.0024],
        [-0.0339, -0.0526, -0.0046,  ..., -0.0023,  0.0184,  0.0175],
        ...,
        [ 0.0047, -0.0013, -0.0090,  ..., -0.0423, -0.0129, -0.0136],
        [-0.0276, -0.0051,  0.0033,  ..., -0.0222,  0.0135,  0.0127],
        [ 0.0213,  0.0044, -0.0175,  ..., -0.0037,  0.0028, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0513,  0.9023, -0.2236, -0.3242,  0.3027, -0.1250, -0.2891,  1.1797,  0.0173, -0.4395, -0.3945, -0.6602, -1.1016, -0.0181, -0.2188, -0.5508, -0.4336,  1.0391, -0.1021, -0.3320,  0.4199,  0.2930,  0.5625, -0.2490, -0.9883,  0.2393,  0.4531, -0.4336, -0.1113, -0.0258, -0.9453,  0.3262,
        -0.5352, -0.9844, -0.3789, -0.8867,  0.9453,  0.2480, -0.3418, -0.0688, -0.2363,  0.1035,  0.8750, -0.7461,  0.8477, -1.1406,  0.0903,  0.0972,  0.5820, -0.2812, -0.4355, -1.6953, -0.4590,  0.2031,  0.2061,  0.8594, -0.4648, -0.5391,  0.0038,  0.3184,  0.2539,  0.0032, -0.2930,  0.0148],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.4570,     -0.0596,      0.0023,      0.0422,     -0.1689,     -0.1260,      0.2754,     -0.2520,     -0.3379,     -0.2041,     -0.2559,     -0.2559,      0.1885,     -0.1289],
        [     0.0000,     -0.3105,      0.3750,     -0.2949,     -0.0315,      0.1123,      0.3848,     -0.2041,      0.0219,      0.1299,     -0.2715,      0.0879,     -0.2773,     -0.2041,     -0.2539],
        [     0.0000,      0.0334,     -0.1050,     -0.2432,     -0.0776,      0.4219,     -0.4980,      0.0444,     -0.0474,      0.1562,     -0.1904,     -0.0238,      0.2598,     -0.1426,     -0.2363],
        [     0.0000,     -0.4102,      0.0349,      0.2207,      0.4082,     -0.3066,      0.2236,      0.1719,      0.1455,     -0.0918,      0.3535,      0.2715,      0.1729,      0.3438,     -0.2715],
        [     0.0000,     -0.1279,     -0.0183,     -0.4199,      0.2734,     -0.0728,      0.0330,      0.0640,      0.1035,      0.2246,     -0.3359,      0.0195,      0.0981,     -0.1719,      0.7188],
        [     0.0000,      0.3457,      0.1436,      0.1943,     -0.0894,     -0.0752,     -0.5117,     -0.2988,     -0.3223,      0.0569,     -0.3691,     -0.2871,      0.1416,     -0.0635,      0.1758],
        [     0.0000,     -0.0791,      0.4355,      0.0503,     -0.1357,     -0.3926,      0.1201,      0.1885,      0.0752,      0.0234,      0.1504,      0.1973,      0.1787,      0.2559,      0.0918],
        [     0.0000,     -0.2324,      0.0130,      0.2451,     -0.2158,     -0.2246,      0.5156,      0.4980,      0.0889,      0.4004,      0.2275,     -0.0001,     -0.1738,      0.2441,      0.1689],
        [     0.0000,     -0.0342,      0.4180,      0.1777,     -0.5430,     -0.2559,     -0.0549,      0.1309,     -0.2197,      0.1250,     -0.0815,     -0.3750,     -0.1001,      0.1768,      0.2305],
        [     0.0000,      0.1875,      0.0388,      0.6992,      0.1045,     -0.3730,     -0.3145,     -0.2988,     -0.6758,     -0.2598,     -0.0557,      0.0776,     -0.2275,     -0.4531,     -0.2578],
        [     0.0000,     -0.0610,      0.2637,     -0.1758,     -0.1699,      0.0238,      0.1758,      0.3047,     -0.2930,     -0.1167,     -0.3027,     -0.5078,      0.0845,     -0.2324,      0.0078],
        [     0.0000,     -0.3809,      0.0669,      0.1494,      0.2969,     -0.0286,      0.2012,      0.0703,     -0.0732,     -0.0374,      0.1040,     -0.2910,     -0.0845,      0.4297,     -0.7070],
        [     0.0000,     -0.4219,      0.2520,      0.2988,     -0.3223,      0.2275,     -0.1504,      0.3672,      0.1396,      0.1836,     -0.0142,      0.0898,     -0.1406,      0.5469,      0.5078],
        [     0.0000,     -0.2930,      0.1992,     -0.3945,     -0.0188,      0.5117,     -0.5078,      0.1699,      0.0292,      0.0029,     -0.3066,     -0.0815,      0.1875,     -0.3145,     -0.0723]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4613],
        [0.3330],
        [0.2405],
        [0.2017],
        [0.1624],
        [0.1432],
        [0.1228],
        [0.1104],
        [0.0966],
        [0.0894],
        [0.0804],
        [0.0803],
        [0.0717],
        [0.0646]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4082, 0.5938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.2461, 0.4785, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2305, 0.1953, 0.2471, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1572, 0.1465, 0.1289, 0.2285, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.1250, 0.1738, 0.1572, 0.2041, 0.1699, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.1406, 0.1592, 0.1123, 0.1367, 0.1504, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1396, 0.1387, 0.1235, 0.2100, 0.0640, 0.0820, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.1289, 0.1484, 0.1104, 0.1099, 0.1162, 0.0840, 0.0850, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.0879, 0.1006, 0.0923, 0.1514, 0.0752, 0.0791, 0.1167, 0.1138, 0.0815, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.1084, 0.1084, 0.0874, 0.1270, 0.0713, 0.1123, 0.0505, 0.0684, 0.0796, 0.0820, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0713, 0.1011, 0.0771, 0.1118, 0.0825, 0.1328, 0.0776, 0.0688, 0.0400, 0.0698, 0.0928, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.0728, 0.0762, 0.0596, 0.0908, 0.0576, 0.0938, 0.1006, 0.0679, 0.0825, 0.0723, 0.0938, 0.0605, 0.0000, 0.0000],
        [0.0879, 0.0991, 0.0801, 0.0698, 0.0732, 0.0664, 0.0569, 0.0420, 0.0569, 0.0757, 0.0762, 0.0713, 0.0806, 0.0645, 0.0000],
        [0.0623, 0.0698, 0.0820, 0.0674, 0.0688, 0.0376, 0.0608, 0.0540, 0.0444, 0.0442, 0.0889, 0.0737, 0.0498, 0.0791, 0.1167]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0015, -0.0264,  0.0124,  ..., -0.0122,  0.0011,  0.0109],
        [ 0.0229,  0.0005,  0.0274,  ...,  0.0124, -0.0283, -0.0063],
        [-0.0090, -0.0043, -0.0104,  ..., -0.0307, -0.0191, -0.0222],
        ...,
        [ 0.0094,  0.0035,  0.0012,  ..., -0.0007,  0.0323, -0.0351],
        [ 0.0045,  0.0129, -0.0241,  ...,  0.0190, -0.0184, -0.0037],
        [-0.0277, -0.0090, -0.0094,  ...,  0.0153, -0.0287, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([-0.2002,  0.0286,  0.8633, -0.9531, -1.0391, -0.7773, -0.0192, -0.6523, -0.1836,  0.4570, -0.3223,  0.3184, -0.0864,  0.2178, -0.7891,  0.4805,  0.1357,  0.1836, -0.6172,  1.4531,  0.4102, -0.2930, -0.3418, -0.3809, -0.8203, -0.6680,  0.9453, -0.5703, -0.2197, -0.3809,  0.0918,  0.6641,
        -0.2393,  1.2188,  0.0430, -0.6406,  0.3652,  0.4902,  0.0977,  0.3184, -0.4082,  0.2637, -0.1641, -0.6172,  1.1484, -0.1973, -0.3203,  0.2715, -0.1289,  0.6797, -0.0972, -0.0659,  0.1680,  0.8203,  0.1514,  0.5938, -0.2236,  0.7188,  0.4043, -0.0508,  0.5508, -0.2832,  0.5117,  0.1138],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0182, -0.0209, -0.0106,  ..., -0.0062,  0.0413,  0.0021],
        [-0.0089, -0.0153,  0.0058,  ...,  0.0017, -0.0074, -0.0024],
        [-0.0339, -0.0526, -0.0046,  ..., -0.0023,  0.0184,  0.0175],
        ...,
        [ 0.0047, -0.0013, -0.0090,  ..., -0.0423, -0.0129, -0.0136],
        [-0.0276, -0.0051,  0.0033,  ..., -0.0222,  0.0135,  0.0127],
        [ 0.0213,  0.0044, -0.0175,  ..., -0.0037,  0.0028, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.2656,  0.5352, -0.2451, -0.0146,  0.2871, -0.3809, -0.4629, -0.5039, -0.6562,  0.5195,  0.2910,  0.4668,  0.2324, -0.0952,  0.4258,  0.7539,  0.9023,  1.2031, -0.5117,  1.4766,  0.4180, -0.0898,  0.3926,  0.4121, -0.7266,  0.6172,  0.6172,  0.1455, -0.1143,  0.2090, -0.1846, -0.7812,
         0.7305, -0.1523,  0.2285, -0.4199,  1.2422, -0.4395,  0.7344,  0.4863, -0.1621,  0.0452,  0.4980, -0.1514,  0.6758,  0.3652, -0.1484, -0.3320,  0.8789,  0.6797, -0.0113, -0.2051,  1.1406,  0.1738,  0.4121, -0.5742, -0.1504, -0.7383,  0.2393,  0.3164,  0.9883, -0.2812,  0.4004, -0.1777],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3711, -0.1768,  0.0942,  0.1357, -0.3828, -0.3730,  0.2598, -0.0830, -0.1196, -0.3477,  0.1270, -0.5273, -0.1108,  0.2207],
        [ 0.0000, -0.1064,  0.5586,  0.2246,  0.6055,  0.4336,  0.7969,  0.9180,  0.3027,  0.3555,  0.2637,  0.3340, -0.1377,  0.4258,  0.7383],
        [ 0.0000, -0.1660,  0.0698,  0.3496,  0.0225, -0.2246, -0.4082,  0.4766,  0.2246,  0.4863,  0.1963,  0.3281, -0.1914,  0.2393,  0.4551],
        [ 0.0000, -0.0703, -0.1953,  0.3770,  0.7656, -0.0150,  0.0320, -0.0576,  0.3340, -0.1133,  0.0327,  0.4355,  0.1240, -0.0139,  0.4355],
        [ 0.0000, -0.3047,  0.0254, -0.0776,  0.1826, -0.0011,  0.1807,  0.2910,  0.0245, -0.0144,  0.3281,  0.0050, -0.1572,  0.2676,  0.1357],
        [ 0.0000, -0.0806,  0.0430, -0.3047, -0.1050, -0.0153, -0.0277,  0.2637,  0.2500,  0.2793,  0.3594,  0.1221,  0.1299,  0.4082,  0.4121],
        [ 0.0000,  0.0259,  0.0226, -0.0942,  0.4336, -0.7539, -0.5078, -0.2402, -0.3457, -0.5625,  0.1377,  0.4648, -0.4902, -0.0938, -0.0364],
        [ 0.0000,  0.1465,  0.2910, -0.0072, -0.0116,  0.0432, -0.2793, -0.2676, -0.0483,  0.2168,  0.2520,  0.2246,  0.2285,  0.2334,  0.5156],
        [ 0.0000, -0.1357, -0.0012, -0.0889,  0.4082, -0.2930, -0.2461,  0.1465,  0.1187, -0.2109,  0.1582,  0.4570,  0.0025, -0.1289,  0.2461],
        [ 0.0000,  0.0325,  0.0302, -0.1855,  0.1885, -0.3848,  0.0664, -0.7305, -0.4316, -0.2773, -0.2451,  0.2236, -0.3301, -0.3477, -0.0132],
        [ 0.0000, -0.0457,  0.3047,  0.0349,  0.4043,  0.1006,  0.5742,  0.0427, -0.0786, -0.6211, -0.0679,  0.2207, -0.6406, -0.0183,  0.0967],
        [ 0.0000,  0.0177,  0.0654, -0.1816,  0.2412, -0.2168,  0.2734,  0.3398, -0.0488,  0.1455,  0.0148,  0.2695, -0.1631,  0.2715,  0.4863],
        [ 0.0000,  0.1172, -0.0913, -0.2314, -0.1855, -0.2852, -0.4336, -0.7383, -0.4355, -0.1523, -0.1475, -0.2090, -0.0894, -0.3145, -0.2148],
        [ 0.0000,  0.1177,  0.2754,  0.0820,  0.1025, -0.5039, -0.0247, -0.1416, -0.3379, -0.3438,  0.3594,  0.1709, -0.2227,  0.2412,  0.6328]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4621],
        [0.3317],
        [0.2427],
        [0.1965],
        [0.1622],
        [0.1448],
        [0.1215],
        [0.1147],
        [0.1008],
        [0.0951],
        [0.0780],
        [0.0775],
        [0.0760],
        [0.0661]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4082, 0.5938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.2480, 0.4766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.2061, 0.2412, 0.3203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.1494, 0.1318, 0.2246, 0.3359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.1299, 0.1709, 0.1650, 0.1982, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.1406, 0.1621, 0.1069, 0.1416, 0.1445, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.1416, 0.1348, 0.1216, 0.2061, 0.0679, 0.0815, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.1235, 0.1455, 0.1060, 0.1079, 0.1206, 0.0879, 0.0869, 0.1084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.0894, 0.1011, 0.0864, 0.1602, 0.0732, 0.0840, 0.1113, 0.1099, 0.0801, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.1138, 0.1113, 0.0776, 0.1230, 0.0708, 0.1143, 0.0513, 0.0703, 0.0767, 0.0820, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0747, 0.0942, 0.0806, 0.1089, 0.0874, 0.1289, 0.0757, 0.0718, 0.0371, 0.0693, 0.0938, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.0723, 0.0752, 0.0535, 0.0913, 0.0574, 0.0972, 0.0996, 0.0718, 0.0771, 0.0752, 0.0981, 0.0603, 0.0000, 0.0000],
        [0.0874, 0.0923, 0.0825, 0.0620, 0.0732, 0.0635, 0.0549, 0.0427, 0.0576, 0.0771, 0.0815, 0.0747, 0.0864, 0.0635, 0.0000],
        [0.0625, 0.0649, 0.0811, 0.0649, 0.0684, 0.0361, 0.0610, 0.0540, 0.0452, 0.0442, 0.0952, 0.0786, 0.0474, 0.0762, 0.1211]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0015, -0.0264,  0.0124,  ..., -0.0122,  0.0011,  0.0109],
        [ 0.0229,  0.0005,  0.0274,  ...,  0.0124, -0.0283, -0.0063],
        [-0.0090, -0.0043, -0.0104,  ..., -0.0307, -0.0191, -0.0222],
        ...,
        [ 0.0094,  0.0035,  0.0012,  ..., -0.0007,  0.0323, -0.0351],
        [ 0.0045,  0.0129, -0.0241,  ...,  0.0190, -0.0184, -0.0037],
        [-0.0277, -0.0090, -0.0094,  ...,  0.0153, -0.0287, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([-0.1689,  0.2129,  0.9258, -1.1719, -1.1406, -0.7461, -0.0588, -0.6016, -0.1396,  0.5938, -0.2734,  0.1768, -0.1709,  0.2256, -0.8164,  0.5508,  0.2793,  0.0537, -0.7188,  1.4844,  0.3965, -0.2188, -0.3594, -0.2871, -0.8711, -0.6602,  0.9961, -0.5000, -0.1826, -0.5273,  0.0728,  0.5742,
        -0.3535,  1.2656,  0.1455, -0.6211,  0.1973,  0.4688,  0.1357,  0.2080, -0.3691,  0.2773, -0.0081, -0.5234,  1.1172, -0.0325, -0.3164,  0.1885, -0.1826,  0.6797,  0.0474, -0.0835,  0.2246,  0.8945,  0.3066,  0.4902, -0.2383,  0.7891,  0.2051, -0.2148,  0.6523, -0.2471,  0.3770,  0.1650],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0182, -0.0209, -0.0106,  ..., -0.0062,  0.0413,  0.0021],
        [-0.0089, -0.0153,  0.0058,  ...,  0.0017, -0.0074, -0.0024],
        [-0.0339, -0.0526, -0.0046,  ..., -0.0023,  0.0184,  0.0175],
        ...,
        [ 0.0047, -0.0013, -0.0090,  ..., -0.0423, -0.0129, -0.0136],
        [-0.0276, -0.0051,  0.0033,  ..., -0.0222,  0.0135,  0.0127],
        [ 0.0213,  0.0044, -0.0175,  ..., -0.0037,  0.0028, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.4297,  0.4746, -0.1235, -0.0403,  0.2441, -0.5547, -0.2891, -0.4355, -0.5234,  0.6836,  0.4883,  0.5859,  0.3340, -0.1436,  0.4180,  0.7617,  0.9727,  1.1406, -0.5312,  1.3594,  0.3594, -0.0056,  0.4922,  0.4785, -0.6758,  0.5547,  0.6914,  0.1143, -0.0289,  0.2285, -0.1025, -0.8281,
         0.7500, -0.2393,  0.1270, -0.5898,  1.2500, -0.4258,  0.7578,  0.3711, -0.1138,  0.0072,  0.2988, -0.1040,  0.7773,  0.2754, -0.0879, -0.3809,  0.9922,  0.6602, -0.0300, -0.2871,  1.0234,  0.1475,  0.5703, -0.6719, -0.1973, -0.6836,  0.3281,  0.4199,  1.0078, -0.2656,  0.4355, -0.1621],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.3750,     -0.1855,      0.0913,      0.1553,     -0.4043,     -0.3789,      0.2793,     -0.0276,     -0.0830,     -0.3398,      0.1172,     -0.5625,     -0.0889,      0.2314],
        [     0.0000,     -0.0986,      0.5547,      0.2490,      0.6602,      0.3711,      0.7891,      0.9141,      0.3281,      0.2812,      0.2451,      0.4316,     -0.1582,      0.4355,      0.7617],
        [     0.0000,     -0.1270,      0.0317,      0.3145,      0.0309,     -0.2354,     -0.3262,      0.3809,      0.1924,      0.5078,      0.1865,      0.3203,     -0.2031,      0.2061,      0.4941],
        [     0.0000,     -0.0552,     -0.1777,      0.3535,      0.7578,     -0.0337,      0.0201,     -0.0786,      0.3145,     -0.1562,      0.0159,      0.4531,      0.0884,     -0.0422,      0.3750],
        [     0.0000,     -0.2520,      0.0172,     -0.0187,      0.1650,      0.0048,      0.1904,      0.3281,      0.0464,      0.0176,      0.2910,      0.0003,     -0.1553,      0.2949,      0.1787],
        [     0.0000,     -0.0684,      0.0718,     -0.3477,     -0.0625,     -0.0422,      0.0056,      0.2109,      0.2891,      0.2578,      0.3730,      0.1455,      0.0723,      0.3867,      0.3535],
        [     0.0000,      0.0400,     -0.0119,     -0.1147,      0.4160,     -0.6953,     -0.5156,     -0.2148,     -0.3672,     -0.5781,      0.1611,      0.4258,     -0.6211,     -0.1562,      0.0287],
        [     0.0000,      0.0835,      0.2500,     -0.0703,     -0.0498,      0.0623,     -0.2539,     -0.2695,     -0.0444,      0.2422,      0.2969,      0.2344,      0.2158,      0.2617,      0.5195],
        [     0.0000,     -0.1465,     -0.0233,     -0.1836,      0.4375,     -0.3477,     -0.2080,      0.0713,      0.0601,     -0.2617,      0.0898,      0.4883,     -0.0947,     -0.2480,      0.2129],
        [     0.0000,      0.0413,      0.0222,     -0.3398,      0.1196,     -0.4297,      0.0464,     -0.7539,     -0.4434,     -0.3516,     -0.2871,      0.2129,     -0.4102,     -0.3398,     -0.0854],
        [     0.0000,     -0.0374,      0.1953,      0.0396,      0.3438,      0.1240,      0.5117,     -0.0203,     -0.0762,     -0.7383,     -0.1064,      0.1904,     -0.6914,     -0.0605,      0.1016],
        [     0.0000,      0.0166,      0.0588,     -0.2832,      0.2500,     -0.2148,      0.3105,      0.3379,      0.0121,      0.0796,      0.0557,      0.3242,     -0.1650,      0.2715,      0.4199],
        [     0.0000,      0.0552,     -0.0562,     -0.3418,     -0.1748,     -0.3164,     -0.4648,     -0.7148,     -0.4160,     -0.1226,     -0.0664,     -0.1582,     -0.0108,     -0.3184,     -0.3496],
        [     0.0000,      0.0342,      0.2598,      0.0364,      0.0830,     -0.5508,     -0.0277,     -0.1523,     -0.3301,     -0.3516,      0.4180,      0.2246,     -0.2832,      0.1943,      0.6562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4635],
        [0.3299],
        [0.2430],
        [0.1953],
        [0.1619],
        [0.1449],
        [0.1209],
        [0.1150],
        [0.1015],
        [0.0938],
        [0.0781],
        [0.0769],
        [0.0757],
        [0.0665]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( ign:0.0002 Salem:0.0002 tribunal:0.0002 exports:0.0002 copper:0.0002 So:0.0002�:0.0001 proceeded:0.0002)
 proceeded
------
		( Salem:0.0002 tribunal:0.0002 exports:0.0002 copper:0.0002 So:0.0002�:0.0001 proceeded:0.0002 imped:0.0001)
 imped milit turnaround Fuel turnaround Construct Brooks absurdãoANC Yamato factories embraces Brooks754
@ 1 train 10.9762 , allloss: 12.9548, dt: 1765.29ms, fracRes: 0.0062, norm(attn): 0.0349, norm(output): 0.0520, norm(x): 0.0542, norm(y): 0.9986, norm:22.5907, tok/sec: 74249.49, flops:28.93, batch-reuse:1
@ 2 train 10.9691 , allloss: 12.9477, dt: 1140.02ms, fracRes: 0.0062, norm(attn): 0.0349, norm(output): 0.0518, norm(x): 0.0542, norm(y): 0.9986, norm:22.0820, tok/sec: 114973.22, flops:44.79, batch-reuse:1
@ 3 train 10.9690 , allloss: 12.9468, dt: 1135.66ms, fracRes: 0.0062, norm(attn): 0.0349, norm(output): 0.0518, norm(x): 0.0542, norm(y): 0.9986, norm:21.9676, tok/sec: 115414.88, flops:44.97, batch-reuse:1
@ 4 train 10.9530 , allloss: 12.9287, dt: 1148.77ms, fracRes: 0.0063, norm(attn): 0.0349, norm(output): 0.0518, norm(x): 0.0542, norm(y): 0.9986, norm:21.7869, tok/sec: 114097.65, flops:44.45, batch-reuse:1
@ 5 train 10.9409 , allloss: 12.9139, dt: 1154.58ms, fracRes: 0.0063, norm(attn): 0.0349, norm(output): 0.0518, norm(x): 0.0542, norm(y): 0.9986, norm:21.0678, tok/sec: 113523.45, flops:44.23, batch-reuse:1
@ 6 train 10.9158 , allloss: 12.8832, dt: 1160.58ms, fracRes: 0.0063, norm(attn): 0.0352, norm(output): 0.0518, norm(x): 0.0543, norm(y): 0.9986, norm:22.1588, tok/sec: 112937.06, flops:44.00, batch-reuse:1
@ 7 train 10.9029 , allloss: 12.8638, dt: 1162.51ms, fracRes: 0.0063, norm(attn): 0.0352, norm(output): 0.0527, norm(x): 0.0543, norm(y): 0.9986, norm:21.3016, tok/sec: 112748.87, flops:43.93, batch-reuse:1
@ 8 train 10.8824 , allloss: 12.8331, dt: 1149.81ms, fracRes: 0.0063, norm(attn): 0.0352, norm(output): 0.0532, norm(x): 0.0544, norm(y): 0.9986, norm:20.6883, tok/sec: 113994.15, flops:44.41, batch-reuse:1
@ 9 train 10.8583 , allloss: 12.7966, dt: 1153.51ms, fracRes: 0.0063, norm(attn): 0.0354, norm(output): 0.0532, norm(x): 0.0546, norm(y): 0.9986, norm:20.4881, tok/sec: 113628.99, flops:44.27, batch-reuse:1
@ 10 train 10.8347 , allloss: 12.7583, dt: 1159.89ms, fracRes: 0.0063, norm(attn): 0.0354, norm(output): 0.0532, norm(x): 0.0547, norm(y): 0.9986, norm:19.1583, tok/sec: 113003.52, flops:44.03, batch-reuse:1
@ 11 train 10.8134 , allloss: 12.7197, dt: 1137.89ms, fracRes: 0.0063, norm(attn): 0.0356, norm(output): 0.0532, norm(x): 0.0549, norm(y): 0.9986, norm:17.6633, tok/sec: 115188.15, flops:44.88, batch-reuse:1
@ 12 train 10.7893 , allloss: 12.6745, dt: 1153.07ms, fracRes: 0.0063, norm(attn): 0.0364, norm(output): 0.0532, norm(x): 0.0551, norm(y): 0.9986, norm:17.9333, tok/sec: 113672.67, flops:44.29, batch-reuse:1
@ 13 train 10.7590 , allloss: 12.6222, dt: 1152.92ms, fracRes: 0.0064, norm(attn): 0.0366, norm(output): 0.0537, norm(x): 0.0554, norm(y): 0.9987, norm:17.1710, tok/sec: 113686.59, flops:44.29, batch-reuse:1
@ 14 train 10.7454 , allloss: 12.5876, dt: 1171.02ms, fracRes: 0.0064, norm(attn): 0.0369, norm(output): 0.0544, norm(x): 0.0557, norm(y): 0.9987, norm:16.6658, tok/sec: 111929.72, flops:43.61, batch-reuse:1
@ 15 train 10.7236 , allloss: 12.5441, dt: 1158.02ms, fracRes: 0.0064, norm(attn): 0.0376, norm(output): 0.0544, norm(x): 0.0560, norm(y): 0.9987, norm:16.1037, tok/sec: 113186.04, flops:44.10, batch-reuse:1
@ 16 train 10.6933 , allloss: 12.4935, dt: 1179.29ms, fracRes: 0.0064, norm(attn): 0.0378, norm(output): 0.0544, norm(x): 0.0562, norm(y): 0.9987, norm:16.0235, tok/sec: 111144.97, flops:43.30, batch-reuse:1
@ 17 train 10.6631 , allloss: 12.4415, dt: 1158.54ms, fracRes: 0.0064, norm(attn): 0.0388, norm(output): 0.0547, norm(x): 0.0565, norm(y): 0.9987, norm:15.5166, tok/sec: 113135.12, flops:44.08, batch-reuse:1
@ 18 train 10.6437 , allloss: 12.4040, dt: 1171.04ms, fracRes: 0.0065, norm(attn): 0.0388, norm(output): 0.0547, norm(x): 0.0568, norm(y): 0.9987, norm:15.2449, tok/sec: 111928.15, flops:43.61, batch-reuse:1
@ 19 train 10.6092 , allloss: 12.3509, dt: 1154.86ms, fracRes: 0.0065, norm(attn): 0.0391, norm(output): 0.0549, norm(x): 0.0570, norm(y): 0.9987, norm:15.4320, tok/sec: 113495.89, flops:44.22, batch-reuse:1
@ 20 train 10.5814 , allloss: 12.3064, dt: 1180.06ms, fracRes: 0.0065, norm(attn): 0.0391, norm(output): 0.0549, norm(x): 0.0573, norm(y): 0.9987, norm:15.2179, tok/sec: 111072.44, flops:43.27, batch-reuse:1
@ 21 train 10.5493 , allloss: 12.2577, dt: 1183.99ms, fracRes: 0.0065, norm(attn): 0.0393, norm(output): 0.0549, norm(x): 0.0576, norm(y): 0.9988, norm:14.9062, tok/sec: 110703.41, flops:43.13, batch-reuse:1
@ 22 train 10.5292 , allloss: 12.2207, dt: 1167.84ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.0554, norm(x): 0.0578, norm(y): 0.9988, norm:14.0334, tok/sec: 112234.39, flops:43.73, batch-reuse:1
@ 23 train 10.5076 , allloss: 12.1847, dt: 1171.61ms, fracRes: 0.0066, norm(attn): 0.0403, norm(output): 0.0554, norm(x): 0.0581, norm(y): 0.9988, norm:13.1958, tok/sec: 111873.28, flops:43.59, batch-reuse:1
@ 24 train 10.4856 , allloss: 12.1475, dt: 1172.89ms, fracRes: 0.0066, norm(attn): 0.0403, norm(output): 0.0557, norm(x): 0.0583, norm(y): 0.9988, norm:13.3253, tok/sec: 111750.87, flops:43.54, batch-reuse:1
@ 25 train 10.4231 , allloss: 12.0715, dt: 1163.12ms, fracRes: 0.0067, norm(attn): 0.0405, norm(output): 0.0557, norm(x): 0.0586, norm(y): 0.9988, norm:13.9562, tok/sec: 112690.33, flops:43.90, batch-reuse:1
@ 26 train 10.4184 , allloss: 12.0536, dt: 1182.57ms, fracRes: 0.0067, norm(attn): 0.0410, norm(output): 0.0557, norm(x): 0.0589, norm(y): 0.9988, norm:12.8213, tok/sec: 110836.44, flops:43.18, batch-reuse:1
@ 27 train 10.3894 , allloss: 12.0130, dt: 1194.16ms, fracRes: 0.0067, norm(attn): 0.0415, norm(output): 0.0557, norm(x): 0.0591, norm(y): 0.9988, norm:13.0067, tok/sec: 109761.21, flops:42.76, batch-reuse:1
@ 28 train 10.3641 , allloss: 11.9760, dt: 1159.83ms, fracRes: 0.0068, norm(attn): 0.0415, norm(output): 0.0576, norm(x): 0.0594, norm(y): 0.9988, norm:12.8454, tok/sec: 113009.93, flops:44.03, batch-reuse:1
@ 29 train 10.3369 , allloss: 11.9386, dt: 1173.76ms, fracRes: 0.0068, norm(attn): 0.0417, norm(output): 0.0576, norm(x): 0.0596, norm(y): 0.9988, norm:12.3702, tok/sec: 111668.69, flops:43.51, batch-reuse:1
@ 30 train 10.2914 , allloss: 11.8834, dt: 1167.83ms, fracRes: 0.0068, norm(attn): 0.0427, norm(output): 0.0576, norm(x): 0.0598, norm(y): 0.9988, norm:12.1926, tok/sec: 112235.81, flops:43.73, batch-reuse:1
@ 31 train 10.2881 , allloss: 11.8706, dt: 1157.34ms, fracRes: 0.0069, norm(attn): 0.0427, norm(output): 0.0579, norm(x): 0.0601, norm(y): 0.9989, norm:11.4725, tok/sec: 113252.92, flops:44.12, batch-reuse:1
@ 32 train 10.2454 , allloss: 11.8191, dt: 1188.79ms, fracRes: 0.0069, norm(attn): 0.0430, norm(output): 0.0583, norm(x): 0.0603, norm(y): 0.9989, norm:12.0612, tok/sec: 110256.88, flops:42.96, batch-reuse:1
@ 33 train 10.2051 , allloss: 11.7700, dt: 1175.47ms, fracRes: 0.0069, norm(attn): 0.0432, norm(output): 0.0583, norm(x): 0.0606, norm(y): 0.9989, norm:11.8420, tok/sec: 111506.21, flops:43.44, batch-reuse:1
@ 34 train 10.1915 , allloss: 11.7472, dt: 1183.16ms, fracRes: 0.0070, norm(attn): 0.0432, norm(output): 0.0583, norm(x): 0.0609, norm(y): 0.9989, norm:11.9866, tok/sec: 110780.89, flops:43.16, batch-reuse:1
@ 35 train 10.1831 , allloss: 11.7301, dt: 1199.83ms, fracRes: 0.0070, norm(attn): 0.0442, norm(output): 0.0583, norm(x): 0.0611, norm(y): 0.9989, norm:12.0777, tok/sec: 109241.77, flops:42.56, batch-reuse:1
@ 36 train 10.1383 , allloss: 11.6764, dt: 1191.11ms, fracRes: 0.0071, norm(attn): 0.0442, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9989, norm:12.5226, tok/sec: 110042.34, flops:42.87, batch-reuse:1
@ 37 train 10.1209 , allloss: 11.6490, dt: 1173.89ms, fracRes: 0.0071, norm(attn): 0.0442, norm(output): 0.0586, norm(x): 0.0617, norm(y): 0.9989, norm:12.6012, tok/sec: 111655.99, flops:43.50, batch-reuse:1
@ 38 train 10.0780 , allloss: 11.5958, dt: 1172.01ms, fracRes: 0.0072, norm(attn): 0.0454, norm(output): 0.0588, norm(x): 0.0619, norm(y): 0.9989, norm:13.1431, tok/sec: 111835.41, flops:43.57, batch-reuse:1
@ 39 train 10.0781 , allloss: 11.5852, dt: 1179.72ms, fracRes: 0.0072, norm(attn): 0.0457, norm(output): 0.0588, norm(x): 0.0622, norm(y): 0.9989, norm:13.0450, tok/sec: 111104.70, flops:43.29, batch-reuse:1
@ 40 train 10.0370 , allloss: 11.5335, dt: 1181.28ms, fracRes: 0.0073, norm(attn): 0.0464, norm(output): 0.0588, norm(x): 0.0625, norm(y): 0.9989, norm:13.3217, tok/sec: 110957.93, flops:43.23, batch-reuse:1
@ 41 train 10.0115 , allloss: 11.4975, dt: 1180.18ms, fracRes: 0.0074, norm(attn): 0.0466, norm(output): 0.0588, norm(x): 0.0627, norm(y): 0.9989, norm:13.4033, tok/sec: 111061.17, flops:43.27, batch-reuse:1
@ 42 train 9.9940 , allloss: 11.4714, dt: 1171.92ms, fracRes: 0.0074, norm(attn): 0.0466, norm(output): 0.0596, norm(x): 0.0630, norm(y): 0.9989, norm:13.7283, tok/sec: 111843.74, flops:43.57, batch-reuse:1
@ 43 train 9.9939 , allloss: 11.4650, dt: 1191.27ms, fracRes: 0.0075, norm(attn): 0.0469, norm(output): 0.0596, norm(x): 0.0632, norm(y): 0.9989, norm:13.8641, tok/sec: 110026.80, flops:42.87, batch-reuse:1
@ 44 train 9.9857 , allloss: 11.4526, dt: 1193.96ms, fracRes: 0.0075, norm(attn): 0.0471, norm(output): 0.0596, norm(x): 0.0633, norm(y): 0.9989, norm:14.1580, tok/sec: 109778.83, flops:42.77, batch-reuse:1
@ 45 train 9.9477 , allloss: 11.4117, dt: 1176.52ms, fracRes: 0.0076, norm(attn): 0.0474, norm(output): 0.0596, norm(x): 0.0635, norm(y): 0.9989, norm:14.9913, tok/sec: 111406.15, flops:43.40, batch-reuse:1
@ 46 train 9.9156 , allloss: 11.3754, dt: 1192.79ms, fracRes: 0.0076, norm(attn): 0.0479, norm(output): 0.0596, norm(x): 0.0637, norm(y): 0.9989, norm:15.2393, tok/sec: 109886.92, flops:42.81, batch-reuse:1
@ 47 train 9.8950 , allloss: 11.3521, dt: 1191.22ms, fracRes: 0.0077, norm(attn): 0.0483, norm(output): 0.0598, norm(x): 0.0638, norm(y): 0.9989, norm:15.6529, tok/sec: 110032.17, flops:42.87, batch-reuse:1
@ 48 train 9.8802 , allloss: 11.3357, dt: 1184.30ms, fracRes: 0.0077, norm(attn): 0.0483, norm(output): 0.0615, norm(x): 0.0639, norm(y): 0.9989, norm:15.8227, tok/sec: 110674.84, flops:43.12, batch-reuse:1
@ 49 train 9.8737 , allloss: 11.3274, dt: 1187.88ms, fracRes: 0.0078, norm(attn): 0.0483, norm(output): 0.0615, norm(x): 0.0640, norm(y): 0.9989, norm:15.7525, tok/sec: 110340.78, flops:42.99, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.6289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.2314, 0.4434, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.3633, 0.1953, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1953, 0.1260, 0.2090, 0.2266, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.1611, 0.1602, 0.0981, 0.2520, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1235, 0.1504, 0.1650, 0.1924, 0.1816, 0.1260, 0.0608, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.1182, 0.1504, 0.1650, 0.0928, 0.0879, 0.1152, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.0728, 0.0981, 0.1050, 0.0767, 0.1553, 0.1318, 0.1250, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.1387, 0.1006, 0.1030, 0.0559, 0.1221, 0.0664, 0.0996, 0.0728, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.0986, 0.0698, 0.1416, 0.0762, 0.0605, 0.0786, 0.1143, 0.0879, 0.0830, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.0938, 0.0869, 0.0698, 0.0752, 0.0942, 0.0771, 0.1138, 0.0928, 0.0981, 0.0564, 0.0605, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0684, 0.0840, 0.1094, 0.0854, 0.0728, 0.0874, 0.0708, 0.0564, 0.0674, 0.0703, 0.0903, 0.0583, 0.0000, 0.0000],
        [0.0688, 0.0447, 0.0625, 0.0649, 0.0579, 0.1084, 0.0569, 0.0688, 0.0610, 0.0620, 0.0669, 0.0579, 0.1221, 0.0967, 0.0000],
        [0.0552, 0.0603, 0.1064, 0.0437, 0.0527, 0.0801, 0.0398, 0.0957, 0.0933, 0.0476, 0.0464, 0.0786, 0.0640, 0.0684, 0.0679]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0013, -0.0262,  0.0124,  ..., -0.0120,  0.0009,  0.0107],
        [ 0.0227,  0.0004,  0.0272,  ...,  0.0122, -0.0282, -0.0063],
        [-0.0092, -0.0045, -0.0105,  ..., -0.0308, -0.0189, -0.0221],
        ...,
        [ 0.0092,  0.0034,  0.0010,  ..., -0.0008,  0.0324, -0.0353],
        [ 0.0047,  0.0131, -0.0239,  ...,  0.0192, -0.0185, -0.0037],
        [-0.0275, -0.0088, -0.0092,  ...,  0.0155, -0.0289, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([-0.0266,  0.1953, -0.5898,  0.0352, -0.3711,  1.3281, -0.0635, -0.0430, -0.1875,  0.2930,  0.2295,  0.3145,  0.1758,  0.6094,  0.2471, -1.0781,  0.4180,  0.2793,  0.5547,  0.4082, -0.7812,  0.2852,  0.7266, -0.2793, -0.3555, -0.9258, -0.6445, -0.3906,  0.3516, -0.0476,  0.3340, -0.6055,
        -0.1299,  0.5039,  0.4473, -0.6133, -0.0288,  0.4473,  0.4395, -0.5859, -0.4277, -0.1992, -0.0933, -0.9570, -0.2539, -0.8516, -0.2793, -0.0669,  0.1943, -0.0776,  0.3730,  0.1309,  0.1689,  0.0275,  0.8906,  0.2334, -0.9648, -0.0422,  0.1455, -0.7539,  0.2012,  0.4668, -0.4434, -1.0469],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0184, -0.0210, -0.0107,  ..., -0.0064,  0.0415,  0.0022],
        [-0.0087, -0.0151,  0.0060,  ...,  0.0018, -0.0075, -0.0025],
        [-0.0337, -0.0524, -0.0045,  ..., -0.0022,  0.0183,  0.0175],
        ...,
        [ 0.0045, -0.0015, -0.0092,  ..., -0.0425, -0.0127, -0.0135],
        [-0.0277, -0.0052,  0.0034,  ..., -0.0224,  0.0137,  0.0128],
        [ 0.0215,  0.0046, -0.0173,  ..., -0.0036,  0.0026, -0.0182]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4980, -0.0403, -0.2471, -1.0312,  0.2676,  0.1660, -1.0547, -0.0630,  0.6602,  0.1807, -1.0547, -0.8320, -0.5859,  0.6406, -0.3379,  0.4941, -0.2656,  0.9219,  0.2070, -0.2324, -0.3809, -0.1621,  0.3125, -0.5781, -0.1982, -0.4473, -0.0693, -0.9414, -0.6016,  0.0708, -0.2754,  0.0079,
         0.1621, -0.9883, -0.6055, -0.9062,  0.1089,  0.4746, -0.4863,  0.3594, -0.8281, -0.0615,  0.4785, -0.9648,  1.0391, -0.5781,  0.1934, -0.1582,  0.8242, -1.0547, -0.5430, -0.6484,  0.0211, -0.6719, -0.0933,  0.6758,  0.7031, -0.0781, -0.1855, -0.0991, -0.3750,  0.1147,  0.0317, -0.4766],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.5312,     -0.0579,      0.0057,      0.2080,     -0.1660,     -0.0869,      0.3926,      0.0554,     -0.0096,      0.1426,     -0.6016,     -0.1885,      0.2695,     -0.3008],
        [     0.0000,     -0.3418,      0.3105,     -0.3535,     -0.1377,      0.0242,      0.3438,     -0.4492,     -0.0605,     -0.1748,     -0.3496,      0.1221,     -0.0312,     -0.0923,     -0.0840],
        [     0.0000,      0.2637,     -0.3555,     -0.5391,      0.0840,      0.4941,     -0.5977,     -0.1377,     -0.0139,     -0.1621,      0.1533,      0.0304,      0.5898,      0.3594,     -0.1543],
        [     0.0000,     -0.4414,      0.0674,      0.1465,      0.2168,     -0.2969,      0.1406,      0.0143,     -0.1494,     -0.1436,     -0.2715,      0.0596,     -0.3008,      0.2910,      0.5781],
        [     0.0000,      0.0096,      0.0016,     -0.4863,      0.4551,      0.0693,      0.0574,      0.0063,      0.2305,      0.3066,     -0.2852,     -0.2637,      0.1797,      0.0364,      0.3809],
        [     0.0000,      0.2002,      0.2891,      0.4414,      0.3867,      0.0233,     -0.7070,     -0.7773,     -0.2393,      0.2412,     -0.5195,     -0.4785,      0.4062,      0.0933,     -0.0942],
        [     0.0000,     -0.0302,      0.2080,      0.3027,     -0.2754,     -0.3262,     -0.0559,      0.2021,     -0.2891,      0.2295,      0.0053,     -0.0339,     -0.2178,     -0.4277,     -0.1797],
        [     0.0000,     -0.4258,     -0.1235,     -0.0576,     -0.3711,      0.3340,      0.1719,      0.1182,      0.1064,      0.4062,      0.0439,     -0.1660,     -0.1709,      0.3496,     -0.0879],
        [     0.0000,      0.3066,     -0.0144,      0.0102,     -0.6016,      0.1816,     -0.4258,     -0.0221,     -0.3379,      0.3105,      0.2363,     -0.2715,      0.0242,      0.2471,     -0.3926],
        [     0.0000,      0.0723,     -0.2773,      0.4316,     -0.1865,     -0.4160,     -0.1582,      0.2188,     -0.0420,     -0.0991,      0.0664,      0.0588,     -0.3086,      0.2539,     -0.3691],
        [     0.0000,      0.1445,      0.0684,     -0.1533,     -0.0776,      0.1475,     -0.0522,      0.3340,      0.1338,      0.1904,     -0.3633,     -0.2949,     -0.2656,      0.1221,      0.0024],
        [     0.0000,     -0.1406,      0.0635,      0.3301,      0.0801,     -0.0767,      0.1050,     -0.1025,     -0.3320,     -0.1553,     -0.1099,      0.1387,     -0.3008,      0.1021,      0.4219],
        [     0.0000,     -0.4336,     -0.0972,     -0.0610,     -0.1729,      0.4551,     -0.1924,      0.0000,     -0.1216,     -0.1074,     -0.0288,     -0.1738,      0.5703,      0.3398,     -0.1738],
        [     0.0000,      0.0869,      0.6562,     -0.2344,     -0.0486,      0.3730,     -0.3301,      0.5508,      0.5234,     -0.1504,     -0.1758,      0.3535,      0.1445,      0.2129,      0.2031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4559],
        [0.3285],
        [0.2367],
        [0.2033],
        [0.1617],
        [0.1402],
        [0.1211],
        [0.1080],
        [0.0968],
        [0.0881],
        [0.0809],
        [0.0755],
        [0.0690],
        [0.0609]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3730, 0.6289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3203, 0.2285, 0.4512, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.3203, 0.2207, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.1226, 0.2031, 0.2285, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.1592, 0.1650, 0.1055, 0.2373, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.1836, 0.1650, 0.1816, 0.1494, 0.1211, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.1118, 0.1758, 0.1514, 0.0918, 0.0830, 0.1245, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.0723, 0.0986, 0.1260, 0.0728, 0.1094, 0.1475, 0.1543, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.1206, 0.1318, 0.1201, 0.0491, 0.0913, 0.0811, 0.1035, 0.0723, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.1177, 0.0850, 0.1768, 0.0913, 0.0598, 0.0645, 0.0840, 0.0610, 0.0767, 0.0898, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.0928, 0.0991, 0.0708, 0.0718, 0.0913, 0.0977, 0.1143, 0.0762, 0.0913, 0.0593, 0.0496, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0649, 0.0894, 0.0991, 0.0938, 0.0723, 0.1035, 0.0830, 0.0598, 0.0664, 0.0742, 0.0583, 0.0571, 0.0000, 0.0000],
        [0.0684, 0.0400, 0.0659, 0.0850, 0.0442, 0.1074, 0.0547, 0.0835, 0.0708, 0.0728, 0.0659, 0.0544, 0.0669, 0.1196, 0.0000],
        [0.0630, 0.0488, 0.0796, 0.0505, 0.0630, 0.1299, 0.0476, 0.0898, 0.0708, 0.0586, 0.0471, 0.0679, 0.0732, 0.0508, 0.0596]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0013, -0.0262,  0.0124,  ..., -0.0120,  0.0009,  0.0107],
        [ 0.0227,  0.0004,  0.0272,  ...,  0.0122, -0.0282, -0.0063],
        [-0.0092, -0.0045, -0.0105,  ..., -0.0308, -0.0189, -0.0221],
        ...,
        [ 0.0092,  0.0034,  0.0010,  ..., -0.0008,  0.0324, -0.0353],
        [ 0.0047,  0.0131, -0.0239,  ...,  0.0192, -0.0185, -0.0037],
        [-0.0275, -0.0088, -0.0092,  ...,  0.0155, -0.0289, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2217,  0.1514,  0.1592,  0.6094, -0.1235,  1.2578,  0.0457, -0.4121, -0.4434,  0.1992, -0.4844,  0.4727,  0.5078,  1.1406,  0.4785, -1.1172,  0.8711,  0.5078,  1.0234,  0.8711, -0.0986, -0.0703,  0.0398, -0.4453, -0.2988, -0.3457, -0.6953,  0.0530,  0.5000,  0.0728,  0.2227, -1.0000,
         0.2471,  0.5820,  0.4746, -1.2812, -0.0396,  0.3984,  0.2012, -0.5430, -0.1328, -0.4629, -0.7109, -0.7031, -0.1206, -1.0859, -0.6758, -0.3906,  0.0640, -0.2480,  0.3184,  0.3809,  0.2578,  0.2295,  0.4355,  0.3145, -0.8203, -0.3867,  0.4121, -0.6211, -0.2451, -0.1113, -0.9727, -0.8438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0184, -0.0210, -0.0107,  ..., -0.0064,  0.0415,  0.0022],
        [-0.0087, -0.0151,  0.0060,  ...,  0.0018, -0.0075, -0.0025],
        [-0.0337, -0.0524, -0.0045,  ..., -0.0022,  0.0183,  0.0175],
        ...,
        [ 0.0045, -0.0015, -0.0092,  ..., -0.0425, -0.0127, -0.0135],
        [-0.0277, -0.0052,  0.0034,  ..., -0.0224,  0.0137,  0.0128],
        [ 0.0215,  0.0046, -0.0173,  ..., -0.0036,  0.0026, -0.0182]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1406,  0.7656, -0.3184, -0.3477,  0.3086,  0.0532, -0.4492,  0.6484,  0.3008, -0.0457, -0.3750, -0.5352, -0.6328,  0.2930, -0.2695, -0.4043, -0.6367,  1.0156, -0.1963, -0.7461,  0.2451, -0.0306,  0.5469, -0.6289, -0.5391, -0.2090,  0.3555, -0.5547, -0.4102, -0.0239, -0.7695,  0.2891,
        -0.2871, -0.8594, -0.6367, -0.8867,  0.8984,  0.5273, -0.2676,  0.4082, -0.6641, -0.1299,  0.8711, -0.9648,  1.1484, -1.0312,  0.3672, -0.1758,  0.6406, -0.6836, -0.7031, -1.7891, -0.4180, -0.0141,  0.1836,  1.1094, -0.0042, -0.1934, -0.0623,  0.1543, -0.0537,  0.2246, -0.2910, -0.2002],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.5234, -0.0547,  0.0087,  0.1191, -0.1836, -0.0801,  0.3516, -0.0884, -0.1670,  0.0496, -0.4297, -0.2207,  0.2754, -0.2227],
        [ 0.0000, -0.3340,  0.3457, -0.3320, -0.0962,  0.0608,  0.3457, -0.3789, -0.0747, -0.0479, -0.3516,  0.1016, -0.2578, -0.2324, -0.2520],
        [ 0.0000,  0.1465, -0.2246, -0.4102, -0.0366,  0.4746, -0.5625, -0.1040, -0.1406,  0.0175, -0.0508, -0.0728,  0.4746,  0.0200, -0.3809],
        [ 0.0000, -0.4336,  0.0728,  0.1904,  0.3105, -0.3184,  0.1465,  0.1221, -0.0635, -0.1289,  0.0132,  0.1953, -0.0498,  0.2617,  0.1543],
        [ 0.0000, -0.0435, -0.0070, -0.4570,  0.3555,  0.0010, -0.0022,  0.0630,  0.2119,  0.2988, -0.4297, -0.1357,  0.1475, -0.2061,  0.7422],
        [ 0.0000,  0.3438,  0.2354,  0.3301,  0.1377, -0.0728, -0.6523, -0.5391, -0.3496,  0.0488, -0.4688, -0.4941,  0.2051, -0.0579,  0.2695],
        [ 0.0000, -0.0703,  0.3789,  0.2324, -0.2695, -0.3691,  0.0337,  0.1621, -0.0325,  0.0864,  0.1260,  0.0515,  0.0121, -0.0118, -0.1621],
        [ 0.0000, -0.3945, -0.0835,  0.1582, -0.3887,  0.0186,  0.3145,  0.3594,  0.0469,  0.3496,  0.1641, -0.1543, -0.3438,  0.2656,  0.2197],
        [ 0.0000,  0.1621,  0.2520,  0.1592, -0.7383, -0.1191, -0.2393,  0.0104, -0.3516,  0.2148, -0.0138, -0.3945, -0.3457,  0.0143,  0.1318],
        [ 0.0000,  0.2305, -0.0957,  0.6406, -0.0223, -0.4453, -0.3691, -0.1050, -0.4238, -0.1992, -0.0366,  0.1602, -0.3301, -0.2041, -0.2500],
        [ 0.0000,  0.0776,  0.1445, -0.1924, -0.1777,  0.0618,  0.1260,  0.2832, -0.1221,  0.0596, -0.3691, -0.5469, -0.0457, -0.1138, -0.0520],
        [ 0.0000, -0.1934,  0.1279,  0.2334,  0.1748, -0.0840,  0.2773,  0.0552, -0.2715, -0.1709, -0.0598, -0.2969, -0.3184,  0.2383, -0.1108],
        [ 0.0000, -0.5312, -0.0347,  0.2197, -0.4316,  0.4570, -0.2188,  0.2041,  0.0388,  0.0664, -0.0309, -0.2236, -0.0156,  0.5664,  0.0767],
        [ 0.0000, -0.2520,  0.2363, -0.2207,  0.0045,  0.7227, -0.2754,  0.3574,  0.1211, -0.0713, -0.2891,  0.0747,  0.1533, -0.2148, -0.0554]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4536],
        [0.3309],
        [0.2380],
        [0.2021],
        [0.1623],
        [0.1419],
        [0.1219],
        [0.1095],
        [0.0968],
        [0.0895],
        [0.0803],
        [0.0790],
        [0.0717],
        [0.0634]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3750, 0.6250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.2285, 0.4590, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.2793, 0.2432, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.1226, 0.1934, 0.2295, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1758, 0.1553, 0.1738, 0.1147, 0.2227, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.2031, 0.1621, 0.1709, 0.1216, 0.1235, 0.0801, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.1108, 0.1855, 0.1250, 0.1016, 0.0791, 0.1357, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.0820, 0.1021, 0.1309, 0.0771, 0.0767, 0.1592, 0.1680, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.0986, 0.1523, 0.1201, 0.0562, 0.0742, 0.0913, 0.1152, 0.0786, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.1216, 0.1001, 0.1865, 0.0972, 0.0615, 0.0645, 0.0752, 0.0476, 0.0728, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.0869, 0.1152, 0.0757, 0.0718, 0.0859, 0.1006, 0.1221, 0.0645, 0.0767, 0.0598, 0.0510, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0557, 0.0825, 0.0928, 0.1011, 0.0708, 0.0913, 0.0884, 0.0698, 0.0728, 0.0762, 0.0552, 0.0645, 0.0000, 0.0000],
        [0.0703, 0.0481, 0.0874, 0.0928, 0.0459, 0.0781, 0.0542, 0.0981, 0.0723, 0.0771, 0.0554, 0.0635, 0.0503, 0.1064, 0.0000],
        [0.0703, 0.0532, 0.0864, 0.0471, 0.0664, 0.1118, 0.0413, 0.0806, 0.0698, 0.0684, 0.0483, 0.0608, 0.0830, 0.0508, 0.0625]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0013, -0.0262,  0.0124,  ..., -0.0120,  0.0009,  0.0107],
        [ 0.0227,  0.0004,  0.0272,  ...,  0.0122, -0.0282, -0.0063],
        [-0.0092, -0.0045, -0.0105,  ..., -0.0308, -0.0189, -0.0221],
        ...,
        [ 0.0092,  0.0034,  0.0010,  ..., -0.0008,  0.0324, -0.0353],
        [ 0.0047,  0.0131, -0.0239,  ...,  0.0192, -0.0185, -0.0037],
        [-0.0275, -0.0088, -0.0092,  ...,  0.0155, -0.0289, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4375, -0.1348,  0.4121,  0.8750, -0.1338,  1.0859,  0.0586, -0.7070, -0.5352,  0.4199, -1.3047,  0.4121,  0.2109,  1.3281,  0.5547, -0.7266,  0.5391,  0.7266,  1.0078,  0.6367,  0.6016, -0.1865, -0.2080, -0.3496,  0.0728,  0.2305, -0.5703,  0.2012,  0.4746,  0.1846,  0.1621, -0.9688,
         0.2637,  0.3965,  0.3516, -1.0703, -0.2373,  0.3613, -0.1162, -0.1855, -0.3301, -0.5938, -1.0078, -0.4688,  0.4395, -0.7891, -0.7070, -0.6758, -0.0058, -0.1992, -0.0991,  0.2871,  0.2949,  0.3184,  0.2285,  0.3145, -1.0000, -0.4414,  0.7109, -0.4160, -0.6367, -0.3906, -0.4082, -0.5469],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0184, -0.0210, -0.0107,  ..., -0.0064,  0.0415,  0.0022],
        [-0.0087, -0.0151,  0.0060,  ...,  0.0018, -0.0075, -0.0025],
        [-0.0337, -0.0524, -0.0045,  ..., -0.0022,  0.0183,  0.0175],
        ...,
        [ 0.0045, -0.0015, -0.0092,  ..., -0.0425, -0.0127, -0.0135],
        [-0.0277, -0.0052,  0.0034,  ..., -0.0224,  0.0137,  0.0128],
        [ 0.0215,  0.0046, -0.0173,  ..., -0.0036,  0.0026, -0.0182]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.1211,      0.9102,     -0.2422,     -0.3164,      0.3535,     -0.1504,     -0.2637,      1.1641,      0.0476,     -0.4160,     -0.2832,     -0.6094,     -1.0625,      0.0244,     -0.2109,     -0.5117,     -0.5078,      1.0859,     -0.0767,     -0.2832,      0.3594,      0.3730,
             0.5469,     -0.3301,     -1.0312,      0.2656,      0.5195,     -0.3691,     -0.1484,      0.0742,     -0.8828,      0.3105,     -0.4844,     -0.9453,     -0.3105,     -0.9180,      0.9570,      0.2773,     -0.3809,     -0.0742,     -0.1816,      0.2490,      0.8398,     -0.6758,
             0.8438,     -1.1016,      0.1035,      0.0747,      0.5625,     -0.1982,     -0.4805,     -1.7812,     -0.4980,      0.2988,      0.2188,      0.8789,     -0.4277,     -0.6172,      0.0016,      0.3535,      0.2246,     -0.0747,     -0.2891,      0.0654], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.5078, -0.0596,  0.0187,  0.0486, -0.1748, -0.0859,  0.2988, -0.2178, -0.3359, -0.1279, -0.2148, -0.2129,  0.2344, -0.1230],
        [ 0.0000, -0.3145,  0.3809, -0.2930, -0.0532,  0.0859,  0.3594, -0.2051, -0.0145,  0.1157, -0.3281,  0.0547, -0.3301, -0.2422, -0.2656],
        [ 0.0000,  0.0327, -0.1064, -0.2578, -0.1187,  0.3828, -0.5430,  0.0276, -0.1006,  0.1064, -0.2617, -0.1118,  0.2080, -0.1943, -0.2852],
        [ 0.0000, -0.4004,  0.0557,  0.2266,  0.4023, -0.3125,  0.2207,  0.2002,  0.1562, -0.0435,  0.3184,  0.2832,  0.1699,  0.3711, -0.2090],
        [ 0.0000, -0.1240, -0.0089, -0.4258,  0.2383, -0.1084, -0.0067,  0.0559,  0.0593,  0.1885, -0.4219, -0.0437,  0.0172, -0.2246,  0.6836],
        [ 0.0000,  0.3730,  0.1504,  0.2002, -0.1367, -0.1230, -0.5586, -0.3047, -0.3555,  0.0225, -0.5000, -0.3535,  0.0947, -0.1279,  0.1465],
        [ 0.0000, -0.0562,  0.4551,  0.0664, -0.1455, -0.3945,  0.1465,  0.2041,  0.1206,  0.0669,  0.1963,  0.2402,  0.2461,  0.3301,  0.1201],
        [ 0.0000, -0.2119,  0.0048,  0.2520, -0.2793, -0.2852,  0.4492,  0.5039,  0.0067,  0.3398,  0.0674, -0.0977, -0.3145,  0.1436,  0.1104],
        [ 0.0000, -0.0298,  0.4062,  0.1680, -0.5938, -0.3164, -0.1079,  0.1250, -0.2578,  0.0977, -0.1836, -0.4688, -0.2148,  0.1187,  0.1709],
        [ 0.0000,  0.2471,  0.0535,  0.6719,  0.0219, -0.4316, -0.3867, -0.2334, -0.6875, -0.2637, -0.1895,  0.0349, -0.3164, -0.4590, -0.2021],
        [ 0.0000, -0.0330,  0.2471, -0.1738, -0.2227, -0.0415,  0.1113,  0.3086, -0.3359, -0.1562, -0.4062, -0.5664,  0.0044, -0.2812, -0.0092],
        [ 0.0000, -0.3496,  0.0442,  0.1592,  0.2441, -0.1069,  0.1445,  0.1118, -0.1216, -0.0840, -0.0383, -0.3613, -0.2041,  0.3516, -0.6680],
        [ 0.0000, -0.3828,  0.2139,  0.2754, -0.4316,  0.1050, -0.2617,  0.3281,  0.0231,  0.0864, -0.2402, -0.1016, -0.3379,  0.4102,  0.3809],
        [ 0.0000, -0.2754,  0.2109, -0.3984, -0.0569,  0.4648, -0.5312,  0.1396, -0.0060, -0.0277, -0.3730, -0.1416,  0.1699, -0.3203, -0.1162]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4525],
        [0.3333],
        [0.2399],
        [0.2015],
        [0.1633],
        [0.1436],
        [0.1222],
        [0.1111],
        [0.0970],
        [0.0920],
        [0.0819],
        [0.0826],
        [0.0739],
        [0.0653]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3926, 0.6055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.2490, 0.4512, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.2021, 0.2393, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1523, 0.1250, 0.2305, 0.3301, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2129, 0.1318, 0.1768, 0.1553, 0.1924, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.1562, 0.1455, 0.1240, 0.1328, 0.1484, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.1562, 0.1289, 0.1270, 0.1963, 0.0566, 0.0801, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1426, 0.1211, 0.1177, 0.1465, 0.0889, 0.0898, 0.0723, 0.0742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.0991, 0.0947, 0.1040, 0.1611, 0.0762, 0.0806, 0.0938, 0.0757, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.1406, 0.1035, 0.0938, 0.1187, 0.0732, 0.0854, 0.0515, 0.0476, 0.0786, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.1226, 0.1016, 0.0815, 0.1064, 0.0781, 0.0977, 0.0598, 0.0488, 0.0613, 0.0571, 0.0723, 0.0000, 0.0000, 0.0000],
        [0.1084, 0.1055, 0.0801, 0.0781, 0.1040, 0.0693, 0.0889, 0.0649, 0.0479, 0.0752, 0.0596, 0.0649, 0.0530, 0.0000, 0.0000],
        [0.1167, 0.1216, 0.0728, 0.0688, 0.0884, 0.0603, 0.0708, 0.0457, 0.0466, 0.0693, 0.0618, 0.0549, 0.0593, 0.0630, 0.0000],
        [0.0986, 0.0845, 0.0854, 0.0708, 0.0952, 0.0415, 0.0559, 0.0586, 0.0466, 0.0486, 0.0645, 0.0615, 0.0469, 0.0654, 0.0757]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0013, -0.0262,  0.0124,  ..., -0.0120,  0.0009,  0.0107],
        [ 0.0227,  0.0004,  0.0272,  ...,  0.0122, -0.0282, -0.0063],
        [-0.0092, -0.0045, -0.0105,  ..., -0.0308, -0.0189, -0.0221],
        ...,
        [ 0.0092,  0.0034,  0.0010,  ..., -0.0008,  0.0324, -0.0353],
        [ 0.0047,  0.0131, -0.0239,  ...,  0.0192, -0.0185, -0.0037],
        [-0.0275, -0.0088, -0.0092,  ...,  0.0155, -0.0289, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([-0.2656, -0.0271,  0.3359, -1.3203, -1.1094, -0.5859, -0.2520, -0.0698, -0.3945,  0.2578, -0.5195,  0.2227, -0.6680,  0.2598, -0.9219,  0.8008,  0.5977,  0.4238, -0.6562,  0.8203,  0.5273, -0.4102, -0.9219,  0.3242, -0.0864, -0.5898,  0.2334, -0.3379, -0.0703, -0.3418, -0.8828,  1.0625,
        -0.3633,  1.2031, -0.7734,  0.3262,  0.0942, -0.7227,  0.2285, -0.0172, -0.1182,  0.8281, -0.3281, -0.8359,  0.2158, -0.6406, -0.4844,  0.0674,  0.5508, -0.2178,  0.2812, -0.1240, -0.3574,  0.7891,  0.8906, -0.0981,  0.2910,  0.4258,  0.0256,  0.3848,  0.0537, -0.2559,  0.6797,  0.3418],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0184, -0.0210, -0.0107,  ..., -0.0064,  0.0415,  0.0022],
        [-0.0087, -0.0151,  0.0060,  ...,  0.0018, -0.0075, -0.0025],
        [-0.0337, -0.0524, -0.0045,  ..., -0.0022,  0.0183,  0.0175],
        ...,
        [ 0.0045, -0.0015, -0.0092,  ..., -0.0425, -0.0127, -0.0135],
        [-0.0277, -0.0052,  0.0034,  ..., -0.0224,  0.0137,  0.0128],
        [ 0.0215,  0.0046, -0.0173,  ..., -0.0036,  0.0026, -0.0182]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2080,  0.3984,  0.2715, -0.6094, -0.0036, -0.5859,  0.2910, -0.3867, -0.1680,  0.1973,  1.4062,  1.2109,  0.8203,  0.2100,  0.8828,  0.2139,  0.1758,  0.3516, -0.5430,  1.2422,  0.1050,  0.5859,  1.0391, -0.4590, -0.2412,  1.0859,  1.0000,  0.1895,  0.2363,  0.4180,  0.5664, -0.0327,
         0.6758, -0.8867,  0.1426, -0.6328,  0.4883, -0.2695,  0.4590, -0.2500,  0.0383, -0.0679,  0.3984,  0.1162,  0.3711,  0.2617, -0.1533, -0.5195,  0.9492,  0.5156, -0.5195, -0.2256,  1.1719,  0.4688,  0.1885,  0.0977, -0.6641, -0.5391, -0.0181,  0.3867,  0.8203, -0.8711,  0.3340,  0.1338],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4316, -0.1592,  0.1299,  0.1973, -0.3691, -0.2207,  0.3047, -0.0742, -0.2021, -0.3203, -0.1396, -0.3418, -0.1157, -0.0427],
        [ 0.0000, -0.1836,  0.4121,  0.0435,  0.3691,  0.0154,  0.2100,  0.4570, -0.3105, -0.2373, -0.3965, -0.4277, -0.7344, -0.3496, -0.2793],
        [ 0.0000, -0.2441, -0.0767,  0.1514, -0.1338, -0.5742, -0.8047,  0.1230, -0.3477, -0.1406, -0.4395, -0.4062, -0.8359, -0.5156, -0.2471],
        [ 0.0000, -0.0649, -0.2637,  0.3477,  0.7109, -0.1133, -0.0054, -0.0593, -0.0481, -0.0649, -0.0918,  0.1924, -0.0435, -0.1855,  0.1895],
        [ 0.0000, -0.4805, -0.1885, -0.3145, -0.1016, -0.4961, -0.4609, -0.2422, -0.6680, -0.6523, -0.4395, -0.6133, -0.9023, -0.4941, -0.6562],
        [ 0.0000, -0.1729, -0.2412, -0.4023, -0.3320, -0.2227, -0.5508, -0.1533, -0.4043, -0.1641, -0.4062, -0.5625, -0.6172, -0.2559, -0.3203],
        [ 0.0000, -0.0118, -0.2080, -0.2207,  0.2158, -1.0234, -0.6797, -0.4922, -0.7930, -0.7461, -0.2695, -0.1216, -0.6055, -0.3438, -0.4160],
        [ 0.0000, -0.0312, -0.1963, -0.2217, -0.0046, -0.5039, -0.4941, -0.7070, -0.6836, -0.4316, -0.4336, -0.4609, -0.5664, -0.4609, -0.3516],
        [ 0.0000, -0.3691, -0.4102, -0.3203,  0.1191, -0.6289, -0.5742, -0.4238, -0.6406, -0.6953, -0.5117, -0.5586, -0.8555, -0.7305, -0.6719],
        [ 0.0000, -0.0214, -0.3301, -0.4316, -0.1943, -0.6758, -0.5195, -1.0312, -1.1016, -0.6055, -0.8203, -0.6289, -0.8555, -0.7109, -0.6953],
        [ 0.0000,  0.0786, -0.1089, -0.3262, -0.0596, -0.3711, -0.1455, -0.6367, -0.8359, -0.6133, -0.6836, -0.4492, -0.7617, -0.5547, -0.6094],
        [ 0.0000, -0.0277, -0.3008, -0.3281, -0.0422, -0.4453, -0.1992, -0.5117, -0.8164, -0.3633, -0.5977, -0.5156, -0.7148, -0.5391, -0.4316],
        [ 0.0000,  0.0432, -0.4707, -0.5234, -0.2734, -0.6602, -0.5000, -0.9375, -0.9180, -0.5195, -0.6367, -0.7500, -0.6719, -0.6172, -0.5352],
        [ 0.0000, -0.1553, -0.1426, -0.3340, -0.0342, -0.8672, -0.5664, -0.5234, -0.7500, -0.7109, -0.4297, -0.4746, -0.7422, -0.4102, -0.2637]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4582],
        [0.3410],
        [0.2512],
        [0.2065],
        [0.1783],
        [0.1556],
        [0.1342],
        [0.1355],
        [0.1188],
        [0.1147],
        [0.0978],
        [0.1017],
        [0.0944],
        [0.0856]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.6055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.2520, 0.4434, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.2119, 0.2305, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.1592, 0.1260, 0.2236, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2207, 0.1367, 0.1719, 0.1572, 0.1885, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.1562, 0.1436, 0.1196, 0.1377, 0.1416, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.1602, 0.1235, 0.1216, 0.1953, 0.0588, 0.0791, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1572, 0.1406, 0.1191, 0.1089, 0.1455, 0.0913, 0.0928, 0.0693, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.1069, 0.0957, 0.0952, 0.1611, 0.0747, 0.0854, 0.0845, 0.0703, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.1475, 0.1040, 0.0830, 0.1138, 0.0723, 0.0879, 0.0503, 0.0486, 0.0806, 0.0645, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1162, 0.1318, 0.0952, 0.0767, 0.1021, 0.0786, 0.0952, 0.0569, 0.0498, 0.0649, 0.0586, 0.0732, 0.0000, 0.0000, 0.0000],
        [0.1104, 0.1099, 0.0815, 0.0703, 0.0986, 0.0698, 0.0908, 0.0601, 0.0476, 0.0747, 0.0608, 0.0679, 0.0571, 0.0000, 0.0000],
        [0.1162, 0.1157, 0.0742, 0.0601, 0.0869, 0.0618, 0.0703, 0.0437, 0.0464, 0.0698, 0.0645, 0.0608, 0.0649, 0.0649, 0.0000],
        [0.1055, 0.0854, 0.0850, 0.0620, 0.0952, 0.0420, 0.0576, 0.0544, 0.0464, 0.0500, 0.0659, 0.0635, 0.0491, 0.0664, 0.0718]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0013, -0.0262,  0.0124,  ..., -0.0120,  0.0009,  0.0107],
        [ 0.0227,  0.0004,  0.0272,  ...,  0.0122, -0.0282, -0.0063],
        [-0.0092, -0.0045, -0.0105,  ..., -0.0308, -0.0189, -0.0221],
        ...,
        [ 0.0092,  0.0034,  0.0010,  ..., -0.0008,  0.0324, -0.0353],
        [ 0.0047,  0.0131, -0.0239,  ...,  0.0192, -0.0185, -0.0037],
        [-0.0275, -0.0088, -0.0092,  ...,  0.0155, -0.0289, -0.0141]], device='cuda:0', requires_grad=True)
K: tensor([-0.3008, -0.0879,  0.3281, -1.3359, -1.1016, -0.4980, -0.1230,  0.0874, -0.3477,  0.1270, -0.4980,  0.1455, -0.7344,  0.2773, -0.9062,  0.8164,  0.7461,  0.3887, -0.7656,  0.6562,  0.5117, -0.3848, -0.7969,  0.4688,  0.0452, -0.5234,  0.1992, -0.3027, -0.1201, -0.4004, -1.0391,  0.9961,
        -0.3945,  1.1172, -0.8320,  0.4277, -0.0396, -0.9141,  0.2871, -0.1348,  0.0554,  0.9766, -0.2158, -0.7031,  0.0425, -0.5781, -0.4277,  0.1621,  0.6133, -0.3203,  0.4277, -0.1895, -0.2676,  0.9492,  1.0000, -0.2471,  0.3750,  0.3418, -0.1533,  0.2256, -0.0515, -0.2422,  0.5977,  0.4336],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0184, -0.0210, -0.0107,  ..., -0.0064,  0.0415,  0.0022],
        [-0.0087, -0.0151,  0.0060,  ...,  0.0018, -0.0075, -0.0025],
        [-0.0337, -0.0524, -0.0045,  ..., -0.0022,  0.0183,  0.0175],
        ...,
        [ 0.0045, -0.0015, -0.0092,  ..., -0.0425, -0.0127, -0.0135],
        [-0.0277, -0.0052,  0.0034,  ..., -0.0224,  0.0137,  0.0128],
        [ 0.0215,  0.0046, -0.0173,  ..., -0.0036,  0.0026, -0.0182]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2051,  0.3555,  0.2734, -0.6758, -0.0972, -0.5898,  0.4141, -0.3418, -0.1299,  0.2109,  1.5469,  1.3438,  0.9805,  0.1006,  0.8555,  0.2412,  0.1592,  0.0444, -0.5938,  0.9453,  0.1592,  0.5859,  1.1016, -0.4727, -0.1064,  0.9883,  1.0156,  0.1885,  0.3398,  0.4297,  0.6484,  0.0142,
         0.5469, -0.9727,  0.0118, -0.7266,  0.5195, -0.2158,  0.4395, -0.3418,  0.0654, -0.2451,  0.3867,  0.1133,  0.3281,  0.1309, -0.0972, -0.5625,  0.9766,  0.4082, -0.4922, -0.1187,  1.1797,  0.4004,  0.1924,  0.1553, -0.8242, -0.4355, -0.0086,  0.4512,  0.6992, -0.9336,  0.2852,  0.1104],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4297, -0.1719,  0.1182,  0.2188, -0.4102, -0.2266,  0.2910, -0.0544, -0.2002, -0.3164, -0.1895, -0.3496, -0.1250, -0.0410],
        [ 0.0000, -0.1914,  0.3750,  0.0322,  0.3809, -0.1089,  0.0986,  0.3535, -0.3906, -0.3633, -0.4688, -0.4512, -0.7773, -0.4375, -0.3887],
        [ 0.0000, -0.2295, -0.1455,  0.0864, -0.1367, -0.6211, -0.7539, -0.0088, -0.4355, -0.2168, -0.4941, -0.5117, -0.8750, -0.6289, -0.3867],
        [ 0.0000, -0.0564, -0.2891,  0.2852,  0.6523, -0.1729, -0.0400, -0.1416, -0.1475, -0.1270, -0.1787,  0.1357, -0.0996, -0.2188,  0.0486],
        [ 0.0000, -0.4785, -0.2500, -0.3418, -0.1592, -0.5703, -0.5352, -0.3301, -0.6992, -0.6836, -0.5156, -0.6641, -0.9258, -0.5391, -0.7266],
        [ 0.0000, -0.2021, -0.2852, -0.4688, -0.3262, -0.3027, -0.5625, -0.2734, -0.4277, -0.2275, -0.4375, -0.6250, -0.6562, -0.3164, -0.4453],
        [ 0.0000, -0.0256, -0.2891, -0.3027,  0.1709, -1.0312, -0.7344, -0.5391, -0.8555, -0.7656, -0.3359, -0.2373, -0.6758, -0.4082, -0.5117],
        [ 0.0000, -0.1099, -0.2773, -0.3672, -0.0728, -0.5430, -0.5273, -0.8164, -0.7344, -0.4746, -0.4648, -0.4746, -0.5703, -0.4941, -0.4355],
        [ 0.0000, -0.3633, -0.4746, -0.4824,  0.0435, -0.7266, -0.5859, -0.6016, -0.7852, -0.7578, -0.6211, -0.6367, -0.8789, -0.8203, -0.8086],
        [ 0.0000, -0.0058, -0.3516, -0.5781, -0.2637, -0.7188, -0.5234, -1.0781, -1.1172, -0.6055, -0.8281, -0.6250, -0.7969, -0.6680, -0.6992],
        [ 0.0000,  0.1245, -0.2021, -0.4180, -0.1299, -0.3906, -0.2021, -0.7188, -0.8516, -0.5820, -0.6836, -0.4629, -0.6836, -0.5000, -0.5938],
        [ 0.0000, -0.0038, -0.3027, -0.4551, -0.1152, -0.4570, -0.1963, -0.6094, -0.8398, -0.3887, -0.5977, -0.4883, -0.6602, -0.5547, -0.4805],
        [ 0.0000, -0.0060, -0.4492, -0.6602, -0.2891, -0.6328, -0.5000, -0.9766, -0.9180, -0.5078, -0.5898, -0.6484, -0.5859, -0.5859, -0.5508],
        [ 0.0000, -0.2139, -0.2148, -0.5312, -0.1060, -0.9219, -0.6055, -0.6602, -0.8242, -0.7461, -0.4727, -0.5117, -0.7656, -0.4668, -0.3828]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4603],
        [0.3411],
        [0.2533],
        [0.2077],
        [0.1812],
        [0.1584],
        [0.1360],
        [0.1388],
        [0.1226],
        [0.1160],
        [0.1005],
        [0.1033],
        [0.0962],
        [0.0898]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( ign:0.0002.:0.0002.:0.0003.:0.0005.:0.0008.:0.0007.:0.0005.:0.0006)
.
------
		(.:0.0002.:0.0003.:0.0005.:0.0008.:0.0007.:0.0005.:0.0006,:0.0012)
,.,...,.,.....,
@ 50 train 9.8585 , allloss: 11.3103, dt: 1609.02ms, fracRes: 0.0079, norm(attn): 0.0498, norm(output): 0.0615, norm(x): 0.0642, norm(y): 0.9990, norm:16.0852, tok/sec: 81460.62, flops:31.74, batch-reuse:1
@ 51 train 9.8748 , allloss: 11.3235, dt: 1200.02ms, fracRes: 0.0079, norm(attn): 0.0505, norm(output): 0.0615, norm(x): 0.0643, norm(y): 0.9990, norm:15.5813, tok/sec: 109224.43, flops:42.55, batch-reuse:1
@ 52 train 9.8160 , allloss: 11.2586, dt: 1231.15ms, fracRes: 0.0080, norm(attn): 0.0505, norm(output): 0.0615, norm(x): 0.0644, norm(y): 0.9990, norm:15.0972, tok/sec: 106462.74, flops:41.48, batch-reuse:1
@ 53 train 9.8149 , allloss: 11.2521, dt: 1201.55ms, fracRes: 0.0081, norm(attn): 0.0510, norm(output): 0.0615, norm(x): 0.0646, norm(y): 0.9990, norm:14.3314, tok/sec: 109085.68, flops:42.50, batch-reuse:1
@ 54 train 9.7992 , allloss: 11.2311, dt: 1179.64ms, fracRes: 0.0081, norm(attn): 0.0510, norm(output): 0.0615, norm(x): 0.0647, norm(y): 0.9990, norm:13.5172, tok/sec: 111111.43, flops:43.29, batch-reuse:1
@ 55 train 9.8239 , allloss: 11.2548, dt: 1195.22ms, fracRes: 0.0082, norm(attn): 0.0518, norm(output): 0.0615, norm(x): 0.0648, norm(y): 0.9990, norm:13.1099, tok/sec: 109663.12, flops:42.72, batch-reuse:1
@ 56 train 9.7564 , allloss: 11.1846, dt: 1178.05ms, fracRes: 0.0083, norm(attn): 0.0522, norm(output): 0.0615, norm(x): 0.0648, norm(y): 0.9990, norm:12.3576, tok/sec: 111261.38, flops:43.35, batch-reuse:1
@ 57 train 9.7188 , allloss: 11.1466, dt: 1196.04ms, fracRes: 0.0083, norm(attn): 0.0537, norm(output): 0.0615, norm(x): 0.0648, norm(y): 0.9990, norm:11.4476, tok/sec: 109588.32, flops:42.70, batch-reuse:1
@ 58 train 9.7427 , allloss: 11.1724, dt: 1181.47ms, fracRes: 0.0084, norm(attn): 0.0544, norm(output): 0.0615, norm(x): 0.0648, norm(y): 0.9989, norm:11.5293, tok/sec: 110939.61, flops:43.22, batch-reuse:1
@ 59 train 9.6750 , allloss: 11.1061, dt: 1189.72ms, fracRes: 0.0084, norm(attn): 0.0547, norm(output): 0.0615, norm(x): 0.0648, norm(y): 0.9989, norm:11.3928, tok/sec: 110170.69, flops:42.92, batch-reuse:1
@ 60 train 9.6916 , allloss: 11.1249, dt: 1182.67ms, fracRes: 0.0085, norm(attn): 0.0549, norm(output): 0.0615, norm(x): 0.0647, norm(y): 0.9989, norm:11.3749, tok/sec: 110826.96, flops:43.18, batch-reuse:1
@ 61 train 9.6925 , allloss: 11.1251, dt: 1204.36ms, fracRes: 0.0085, norm(attn): 0.0554, norm(output): 0.0615, norm(x): 0.0647, norm(y): 0.9989, norm:11.2244, tok/sec: 108831.22, flops:42.40, batch-reuse:1
@ 62 train 9.6468 , allloss: 11.0787, dt: 1174.29ms, fracRes: 0.0085, norm(attn): 0.0557, norm(output): 0.0615, norm(x): 0.0647, norm(y): 0.9989, norm:15.5428, tok/sec: 111618.34, flops:43.49, batch-reuse:1
@ 63 train 9.6763 , allloss: 11.1097, dt: 1179.76ms, fracRes: 0.0086, norm(attn): 0.0576, norm(output): 0.0613, norm(x): 0.0646, norm(y): 0.9989, norm:12.3172, tok/sec: 111100.79, flops:43.28, batch-reuse:1
@ 64 train 9.6590 , allloss: 11.0926, dt: 1200.24ms, fracRes: 0.0086, norm(attn): 0.0583, norm(output): 0.0596, norm(x): 0.0646, norm(y): 0.9989, norm:11.9386, tok/sec: 109204.86, flops:42.55, batch-reuse:1
@ 65 train 9.6685 , allloss: 11.1019, dt: 1231.48ms, fracRes: 0.0087, norm(attn): 0.0586, norm(output): 0.0596, norm(x): 0.0646, norm(y): 0.9989, norm:11.0984, tok/sec: 106434.77, flops:41.47, batch-reuse:1
@ 66 train 9.6678 , allloss: 11.1033, dt: 1232.16ms, fracRes: 0.0087, norm(attn): 0.0588, norm(output): 0.0596, norm(x): 0.0645, norm(y): 0.9989, norm:12.0516, tok/sec: 106375.50, flops:41.44, batch-reuse:1
@ 67 train 9.5787 , allloss: 11.0180, dt: 1227.64ms, fracRes: 0.0087, norm(attn): 0.0598, norm(output): 0.0596, norm(x): 0.0644, norm(y): 0.9989, norm:11.8644, tok/sec: 106767.36, flops:41.60, batch-reuse:1
@ 68 train 9.6262 , allloss: 11.0700, dt: 1231.41ms, fracRes: 0.0087, norm(attn): 0.0615, norm(output): 0.0596, norm(x): 0.0642, norm(y): 0.9989, norm:11.6917, tok/sec: 106440.17, flops:41.47, batch-reuse:1
@ 69 train 9.5839 , allloss: 11.0234, dt: 1226.78ms, fracRes: 0.0088, norm(attn): 0.0618, norm(output): 0.0596, norm(x): 0.0643, norm(y): 0.9989, norm:10.3125, tok/sec: 106842.27, flops:41.63, batch-reuse:1
@ 70 train 9.5779 , allloss: 11.0126, dt: 1193.55ms, fracRes: 0.0088, norm(attn): 0.0625, norm(output): 0.0596, norm(x): 0.0644, norm(y): 0.9989, norm:10.4040, tok/sec: 109817.21, flops:42.78, batch-reuse:1
@ 71 train 9.5739 , allloss: 11.0095, dt: 1201.60ms, fracRes: 0.0088, norm(attn): 0.0625, norm(output): 0.0596, norm(x): 0.0644, norm(y): 0.9989, norm:10.5201, tok/sec: 109080.79, flops:42.50, batch-reuse:1
@ 72 train 9.5593 , allloss: 11.0014, dt: 1183.83ms, fracRes: 0.0088, norm(attn): 0.0630, norm(output): 0.0596, norm(x): 0.0643, norm(y): 0.9989, norm:9.9740, tok/sec: 110719.04, flops:43.14, batch-reuse:1
@ 73 train 9.5628 , allloss: 11.0112, dt: 1211.54ms, fracRes: 0.0088, norm(attn): 0.0635, norm(output): 0.0596, norm(x): 0.0641, norm(y): 0.9989, norm:11.2654, tok/sec: 108186.60, flops:42.15, batch-reuse:1
@ 74 train 9.5536 , allloss: 11.0024, dt: 1219.25ms, fracRes: 0.0089, norm(attn): 0.0635, norm(output): 0.0596, norm(x): 0.0642, norm(y): 0.9989, norm:10.2689, tok/sec: 107502.14, flops:41.88, batch-reuse:1
@ 75 train 9.7796 , allloss: 11.2259, dt: 1201.43ms, fracRes: 0.0089, norm(attn): 0.0654, norm(output): 0.0596, norm(x): 0.0643, norm(y): 0.9989, norm:11.5266, tok/sec: 109096.26, flops:42.50, batch-reuse:1
@ 76 train 9.5484 , allloss: 10.9895, dt: 1198.63ms, fracRes: 0.0089, norm(attn): 0.0659, norm(output): 0.0615, norm(x): 0.0645, norm(y): 0.9989, norm:13.8647, tok/sec: 109351.65, flops:42.60, batch-reuse:1
@ 77 train 9.7202 , allloss: 11.1668, dt: 1210.82ms, fracRes: 0.0090, norm(attn): 0.0659, norm(output): 0.0615, norm(x): 0.0645, norm(y): 0.9989, norm:15.2802, tok/sec: 108250.65, flops:42.17, batch-reuse:1
@ 78 train 9.5857 , allloss: 11.0408, dt: 1193.32ms, fracRes: 0.0090, norm(attn): 0.0664, norm(output): 0.0610, norm(x): 0.0643, norm(y): 0.9988, norm:14.0071, tok/sec: 109838.29, flops:42.79, batch-reuse:1
@ 79 train 9.4871 , allloss: 10.9471, dt: 1195.76ms, fracRes: 0.0090, norm(attn): 0.0664, norm(output): 0.0596, norm(x): 0.0641, norm(y): 0.9988, norm:15.7434, tok/sec: 109614.16, flops:42.71, batch-reuse:1
@ 80 train 9.4968 , allloss: 10.9553, dt: 1211.22ms, fracRes: 0.0090, norm(attn): 0.0669, norm(output): 0.0615, norm(x): 0.0642, norm(y): 0.9988, norm:12.9842, tok/sec: 108214.86, flops:42.16, batch-reuse:1
@ 81 train 9.4989 , allloss: 10.9517, dt: 1212.98ms, fracRes: 0.0091, norm(attn): 0.0669, norm(output): 0.0615, norm(x): 0.0644, norm(y): 0.9988, norm:12.6260, tok/sec: 108057.75, flops:42.10, batch-reuse:1
@ 82 train 9.4422 , allloss: 10.8944, dt: 1219.74ms, fracRes: 0.0091, norm(attn): 0.0674, norm(output): 0.0610, norm(x): 0.0644, norm(y): 0.9988, norm:11.7269, tok/sec: 107458.68, flops:41.87, batch-reuse:1
@ 83 train 9.4590 , allloss: 10.9157, dt: 1219.21ms, fracRes: 0.0091, norm(attn): 0.0679, norm(output): 0.0596, norm(x): 0.0643, norm(y): 0.9988, norm:10.6866, tok/sec: 107506.07, flops:41.88, batch-reuse:1
@ 84 train 9.4612 , allloss: 10.9205, dt: 1173.98ms, fracRes: 0.0091, norm(attn): 0.0693, norm(output): 0.0596, norm(x): 0.0642, norm(y): 0.9988, norm:11.8101, tok/sec: 111647.72, flops:43.50, batch-reuse:1
@ 85 train 9.4233 , allloss: 10.8826, dt: 1193.91ms, fracRes: 0.0092, norm(attn): 0.0693, norm(output): 0.0593, norm(x): 0.0642, norm(y): 0.9988, norm:10.7303, tok/sec: 109783.57, flops:42.77, batch-reuse:1
@ 86 train 9.3820 , allloss: 10.8403, dt: 1197.94ms, fracRes: 0.0092, norm(attn): 0.0698, norm(output): 0.0593, norm(x): 0.0642, norm(y): 0.9988, norm:11.9639, tok/sec: 109414.22, flops:42.63, batch-reuse:1
@ 87 train 9.4059 , allloss: 10.8684, dt: 1195.35ms, fracRes: 0.0092, norm(attn): 0.0698, norm(output): 0.0593, norm(x): 0.0641, norm(y): 0.9988, norm:11.3101, tok/sec: 109651.24, flops:42.72, batch-reuse:1
@ 88 train 9.4003 , allloss: 10.8735, dt: 1209.30ms, fracRes: 0.0093, norm(attn): 0.0698, norm(output): 0.0593, norm(x): 0.0639, norm(y): 0.9988, norm:11.8364, tok/sec: 108386.54, flops:42.23, batch-reuse:1
@ 89 train 9.3580 , allloss: 10.8396, dt: 1231.53ms, fracRes: 0.0092, norm(attn): 0.0698, norm(output): 0.0593, norm(x): 0.0638, norm(y): 0.9988, norm:11.9862, tok/sec: 106430.40, flops:41.47, batch-reuse:1
@ 90 train 9.3628 , allloss: 10.8488, dt: 1231.46ms, fracRes: 0.0092, norm(attn): 0.0698, norm(output): 0.0593, norm(x): 0.0637, norm(y): 0.9988, norm:11.4583, tok/sec: 106436.13, flops:41.47, batch-reuse:1
@ 91 train 9.3859 , allloss: 10.8730, dt: 1183.33ms, fracRes: 0.0092, norm(attn): 0.0698, norm(output): 0.0593, norm(x): 0.0637, norm(y): 0.9987, norm:12.8722, tok/sec: 110765.06, flops:43.15, batch-reuse:1
@ 92 train 9.3187 , allloss: 10.8012, dt: 1194.78ms, fracRes: 0.0093, norm(attn): 0.0698, norm(output): 0.0593, norm(x): 0.0637, norm(y): 0.9987, norm:11.0160, tok/sec: 109703.58, flops:42.74, batch-reuse:1
@ 93 train 9.3383 , allloss: 10.8212, dt: 1208.20ms, fracRes: 0.0093, norm(attn): 0.0703, norm(output): 0.0591, norm(x): 0.0635, norm(y): 0.9987, norm:10.7282, tok/sec: 108485.69, flops:42.27, batch-reuse:1
@ 94 train 9.4245 , allloss: 10.9144, dt: 1201.60ms, fracRes: 0.0092, norm(attn): 0.0703, norm(output): 0.0591, norm(x): 0.0633, norm(y): 0.9987, norm:11.2199, tok/sec: 109081.52, flops:42.50, batch-reuse:1
@ 95 train 9.3176 , allloss: 10.8172, dt: 1235.50ms, fracRes: 0.0093, norm(attn): 0.0708, norm(output): 0.0588, norm(x): 0.0632, norm(y): 0.9987, norm:12.8892, tok/sec: 106088.40, flops:41.33, batch-reuse:1
@ 96 train 9.2647 , allloss: 10.7695, dt: 1189.47ms, fracRes: 0.0093, norm(attn): 0.0708, norm(output): 0.0588, norm(x): 0.0631, norm(y): 0.9987, norm:12.0052, tok/sec: 110193.88, flops:42.93, batch-reuse:1
@ 97 train 9.2760 , allloss: 10.7779, dt: 1200.86ms, fracRes: 0.0093, norm(attn): 0.0703, norm(output): 0.0588, norm(x): 0.0630, norm(y): 0.9987, norm:10.1888, tok/sec: 109148.44, flops:42.52, batch-reuse:1
@ 98 train 9.2589 , allloss: 10.7512, dt: 1232.96ms, fracRes: 0.0094, norm(attn): 0.0708, norm(output): 0.0588, norm(x): 0.0631, norm(y): 0.9987, norm:12.0439, tok/sec: 106306.51, flops:41.42, batch-reuse:1
@ 99 train 9.2569 , allloss: 10.7498, dt: 1231.93ms, fracRes: 0.0095, norm(attn): 0.0708, norm(output): 0.0588, norm(x): 0.0632, norm(y): 0.9987, norm:12.0192, tok/sec: 106395.28, flops:41.45, batch-reuse:1
@ 100 train 9.2202 , allloss: 10.7278, dt: 1194.76ms, fracRes: 0.0093, norm(attn): 0.0703, norm(output): 0.0588, norm(x): 0.0630, norm(y): 0.9986, norm:12.8671, tok/sec: 109705.88, flops:42.74, batch-reuse:1
@ 101 train 9.1750 , allloss: 10.6960, dt: 1192.96ms, fracRes: 0.0091, norm(attn): 0.0703, norm(output): 0.0588, norm(x): 0.0626, norm(y): 0.9986, norm:12.5489, tok/sec: 109871.46, flops:42.81, batch-reuse:1
@ 102 train 9.1963 , allloss: 10.7180, dt: 1179.28ms, fracRes: 0.0091, norm(attn): 0.0703, norm(output): 0.0588, norm(x): 0.0624, norm(y): 0.9986, norm:12.1055, tok/sec: 111146.25, flops:43.30, batch-reuse:1
@ 103 train 9.2120 , allloss: 10.7190, dt: 1181.86ms, fracRes: 0.0092, norm(attn): 0.0703, norm(output): 0.0588, norm(x): 0.0626, norm(y): 0.9986, norm:11.3701, tok/sec: 110903.31, flops:43.21, batch-reuse:1
@ 104 train 9.1985 , allloss: 10.6954, dt: 1209.96ms, fracRes: 0.0092, norm(attn): 0.0703, norm(output): 0.0588, norm(x): 0.0628, norm(y): 0.9986, norm:10.5834, tok/sec: 108327.23, flops:42.20, batch-reuse:1
@ 105 train 9.1611 , allloss: 10.6632, dt: 1233.73ms, fracRes: 0.0091, norm(attn): 0.0703, norm(output): 0.0588, norm(x): 0.0626, norm(y): 0.9986, norm:9.4868, tok/sec: 106240.64, flops:41.39, batch-reuse:1
@ 106 train 9.1698 , allloss: 10.6786, dt: 1229.08ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0588, norm(x): 0.0624, norm(y): 0.9986, norm:9.7738, tok/sec: 106642.76, flops:41.55, batch-reuse:1
@ 107 train 9.1261 , allloss: 10.6271, dt: 1225.61ms, fracRes: 0.0091, norm(attn): 0.0703, norm(output): 0.0588, norm(x): 0.0625, norm(y): 0.9986, norm:9.4780, tok/sec: 106944.13, flops:41.67, batch-reuse:1
@ 108 train 9.1109 , allloss: 10.6047, dt: 1212.41ms, fracRes: 0.0091, norm(attn): 0.0698, norm(output): 0.0588, norm(x): 0.0625, norm(y): 0.9986, norm:9.7499, tok/sec: 108108.35, flops:42.12, batch-reuse:1
@ 109 train 9.0504 , allloss: 10.5455, dt: 1198.49ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0588, norm(x): 0.0622, norm(y): 0.9985, norm:9.9984, tok/sec: 109364.05, flops:42.61, batch-reuse:1
@ 110 train 9.0989 , allloss: 10.5944, dt: 1233.69ms, fracRes: 0.0089, norm(attn): 0.0698, norm(output): 0.0588, norm(x): 0.0621, norm(y): 0.9985, norm:10.4204, tok/sec: 106243.97, flops:41.39, batch-reuse:1
@ 111 train 9.0712 , allloss: 10.5612, dt: 1234.45ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0588, norm(x): 0.0622, norm(y): 0.9985, norm:10.7875, tok/sec: 106178.33, flops:41.37, batch-reuse:1
@ 112 train 9.0565 , allloss: 10.5491, dt: 1234.69ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0620, norm(y): 0.9985, norm:10.4279, tok/sec: 106158.03, flops:41.36, batch-reuse:1
@ 113 train 9.0252 , allloss: 10.5252, dt: 1224.65ms, fracRes: 0.0089, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0617, norm(y): 0.9985, norm:9.4455, tok/sec: 107028.53, flops:41.70, batch-reuse:1
@ 114 train 9.0255 , allloss: 10.5233, dt: 1207.87ms, fracRes: 0.0088, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0617, norm(y): 0.9985, norm:10.2555, tok/sec: 108515.07, flops:42.28, batch-reuse:1
@ 115 train 9.0024 , allloss: 10.4855, dt: 1186.58ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0619, norm(y): 0.9985, norm:10.8669, tok/sec: 110461.94, flops:43.04, batch-reuse:1
@ 116 train 8.9809 , allloss: 10.4676, dt: 1173.21ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0619, norm(y): 0.9985, norm:10.0040, tok/sec: 111720.64, flops:43.53, batch-reuse:1
@ 117 train 8.9502 , allloss: 10.4418, dt: 1215.49ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0618, norm(y): 0.9985, norm:11.2134, tok/sec: 107834.37, flops:42.01, batch-reuse:1
@ 118 train 8.9344 , allloss: 10.4192, dt: 1211.02ms, fracRes: 0.0089, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0617, norm(y): 0.9984, norm:10.8817, tok/sec: 108233.03, flops:42.17, batch-reuse:1
@ 119 train 8.9347 , allloss: 10.4106, dt: 1191.82ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0618, norm(y): 0.9984, norm:11.4394, tok/sec: 109976.24, flops:42.85, batch-reuse:1
@ 120 train 8.9914 , allloss: 10.4751, dt: 1210.90ms, fracRes: 0.0088, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9984, norm:12.0021, tok/sec: 108243.45, flops:42.17, batch-reuse:1
@ 121 train 9.0080 , allloss: 10.4997, dt: 1180.99ms, fracRes: 0.0088, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9984, norm:11.2374, tok/sec: 110985.19, flops:43.24, batch-reuse:1
@ 122 train 8.9753 , allloss: 10.4613, dt: 1197.08ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0615, norm(y): 0.9984, norm:11.7185, tok/sec: 109493.09, flops:42.66, batch-reuse:1
@ 123 train 8.8852 , allloss: 10.3556, dt: 1211.36ms, fracRes: 0.0092, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0617, norm(y): 0.9984, norm:12.1084, tok/sec: 108202.69, flops:42.16, batch-reuse:1
@ 124 train 8.8926 , allloss: 10.3738, dt: 1238.01ms, fracRes: 0.0089, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9984, norm:11.6259, tok/sec: 105873.51, flops:41.25, batch-reuse:1
@ 125 train 8.8842 , allloss: 10.3620, dt: 1205.49ms, fracRes: 0.0088, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9983, norm:14.7686, tok/sec: 108729.44, flops:42.36, batch-reuse:1
@ 126 train 8.8591 , allloss: 10.3130, dt: 1201.02ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9983, norm:13.8476, tok/sec: 109134.23, flops:42.52, batch-reuse:1
@ 127 train 8.8212 , allloss: 10.2679, dt: 1206.16ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0615, norm(y): 0.9983, norm:12.9987, tok/sec: 108668.74, flops:42.34, batch-reuse:1
@ 128 train 8.8008 , allloss: 10.2625, dt: 1197.87ms, fracRes: 0.0088, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9983, norm:12.6871, tok/sec: 109420.63, flops:42.63, batch-reuse:1
@ 129 train 8.8704 , allloss: 10.3306, dt: 1201.75ms, fracRes: 0.0088, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9983, norm:14.9303, tok/sec: 109067.19, flops:42.49, batch-reuse:1
@ 130 train 8.8171 , allloss: 10.2612, dt: 1197.46ms, fracRes: 0.0090, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9983, norm:13.2073, tok/sec: 109458.53, flops:42.65, batch-reuse:1
@ 131 train 8.8033 , allloss: 10.2393, dt: 1206.68ms, fracRes: 0.0091, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9983, norm:11.9192, tok/sec: 108621.66, flops:42.32, batch-reuse:1
@ 132 train 8.7897 , allloss: 10.2324, dt: 1201.26ms, fracRes: 0.0089, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0613, norm(y): 0.9983, norm:12.7154, tok/sec: 109111.81, flops:42.51, batch-reuse:1
@ 133 train 8.7665 , allloss: 10.2058, dt: 1202.51ms, fracRes: 0.0089, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0613, norm(y): 0.9983, norm:14.2633, tok/sec: 108998.88, flops:42.47, batch-reuse:1
@ 134 train 8.7502 , allloss: 10.1830, dt: 1207.89ms, fracRes: 0.0090, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0613, norm(y): 0.9983, norm:11.2707, tok/sec: 108513.38, flops:42.28, batch-reuse:1
@ 135 train 8.7242 , allloss: 10.1531, dt: 1187.34ms, fracRes: 0.0091, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9982, norm:11.9932, tok/sec: 110391.34, flops:43.01, batch-reuse:1
@ 136 train 8.7274 , allloss: 10.1591, dt: 1224.23ms, fracRes: 0.0091, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9982, norm:15.8811, tok/sec: 107064.43, flops:41.71, batch-reuse:1
@ 137 train 8.6684 , allloss: 10.1061, dt: 1216.89ms, fracRes: 0.0090, norm(attn): 0.0688, norm(output): 0.0583, norm(x): 0.0610, norm(y): 0.9982, norm:16.5912, tok/sec: 107710.27, flops:41.96, batch-reuse:1
@ 138 train 8.6333 , allloss: 10.0658, dt: 1183.76ms, fracRes: 0.0091, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0611, norm(y): 0.9982, norm:12.7099, tok/sec: 110725.38, flops:43.14, batch-reuse:1
@ 139 train 8.5552 , allloss: 9.9762, dt: 1192.34ms, fracRes: 0.0092, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9982, norm:11.9892, tok/sec: 109928.58, flops:42.83, batch-reuse:1
@ 140 train 8.6324 , allloss: 10.0599, dt: 1193.23ms, fracRes: 0.0091, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0611, norm(y): 0.9982, norm:11.2599, tok/sec: 109846.52, flops:42.80, batch-reuse:1
@ 141 train 8.6196 , allloss: 10.0418, dt: 1209.65ms, fracRes: 0.0091, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9982, norm:13.6889, tok/sec: 108355.58, flops:42.22, batch-reuse:1
@ 142 train 8.6576 , allloss: 10.0777, dt: 1227.10ms, fracRes: 0.0094, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9982, norm:15.9987, tok/sec: 106814.03, flops:41.61, batch-reuse:1
@ 143 train 8.6252 , allloss: 10.0480, dt: 1201.14ms, fracRes: 0.0093, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0613, norm(y): 0.9982, norm:10.7205, tok/sec: 109122.68, flops:42.51, batch-reuse:1
@ 144 train 8.5805 , allloss: 10.0022, dt: 1206.01ms, fracRes: 0.0092, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9982, norm:11.2800, tok/sec: 108682.23, flops:42.34, batch-reuse:1
@ 145 train 8.6064 , allloss: 10.0156, dt: 1205.36ms, fracRes: 0.0093, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9981, norm:15.3781, tok/sec: 108740.92, flops:42.37, batch-reuse:1
@ 146 train 8.6442 , allloss: 10.0511, dt: 1223.12ms, fracRes: 0.0093, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0613, norm(y): 0.9981, norm:10.9164, tok/sec: 107162.31, flops:41.75, batch-reuse:1
@ 147 train 8.5780 , allloss: 9.9925, dt: 1198.52ms, fracRes: 0.0093, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0611, norm(y): 0.9981, norm:14.0223, tok/sec: 109361.53, flops:42.61, batch-reuse:1
@ 148 train 8.5470 , allloss: 9.9655, dt: 1208.06ms, fracRes: 0.0094, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0609, norm(y): 0.9981, norm:13.7053, tok/sec: 108498.24, flops:42.27, batch-reuse:1
@ 149 train 8.4634 , allloss: 9.8625, dt: 1175.45ms, fracRes: 0.0096, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9981, norm:10.0830, tok/sec: 111508.20, flops:43.44, batch-reuse:1
@ 150 train 8.5759 , allloss: 9.9836, dt: 1205.53ms, fracRes: 0.0094, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9981, norm:13.1862, tok/sec: 108725.56, flops:42.36, batch-reuse:1
@ 151 train 8.4544 , allloss: 9.8564, dt: 1219.60ms, fracRes: 0.0094, norm(attn): 0.0693, norm(output): 0.0581, norm(x): 0.0610, norm(y): 0.9981, norm:11.3880, tok/sec: 107471.10, flops:41.87, batch-reuse:1
@ 152 train 8.4572 , allloss: 9.8540, dt: 1184.24ms, fracRes: 0.0095, norm(attn): 0.0698, norm(output): 0.0579, norm(x): 0.0612, norm(y): 0.9981, norm:13.2301, tok/sec: 110680.39, flops:43.12, batch-reuse:1
@ 153 train 8.4301 , allloss: 9.8286, dt: 1194.26ms, fracRes: 0.0094, norm(attn): 0.0693, norm(output): 0.0579, norm(x): 0.0613, norm(y): 0.9981, norm:10.0761, tok/sec: 109751.52, flops:42.76, batch-reuse:1
@ 154 train 8.4930 , allloss: 9.9018, dt: 1208.94ms, fracRes: 0.0094, norm(attn): 0.0698, norm(output): 0.0581, norm(x): 0.0611, norm(y): 0.9980, norm:15.6474, tok/sec: 108419.11, flops:42.24, batch-reuse:1
@ 155 train 8.5027 , allloss: 9.8981, dt: 1204.61ms, fracRes: 0.0097, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9981, norm:11.5679, tok/sec: 108808.33, flops:42.39, batch-reuse:1
@ 156 train 8.4246 , allloss: 9.8179, dt: 1214.12ms, fracRes: 0.0098, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0615, norm(y): 0.9980, norm:17.8973, tok/sec: 107956.52, flops:42.06, batch-reuse:1
@ 157 train 8.4623 , allloss: 9.8620, dt: 1188.98ms, fracRes: 0.0096, norm(attn): 0.0693, norm(output): 0.0583, norm(x): 0.0615, norm(y): 0.9980, norm:12.3036, tok/sec: 110238.69, flops:42.95, batch-reuse:1
@ 158 train 8.4430 , allloss: 9.8439, dt: 1178.53ms, fracRes: 0.0094, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0617, norm(y): 0.9980, norm:17.9123, tok/sec: 111216.50, flops:43.33, batch-reuse:1
@ 159 train 8.4597 , allloss: 9.8485, dt: 1211.73ms, fracRes: 0.0097, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0620, norm(y): 0.9980, norm:14.5821, tok/sec: 108169.29, flops:42.14, batch-reuse:1
@ 160 train 8.3905 , allloss: 9.7730, dt: 1199.95ms, fracRes: 0.0098, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0620, norm(y): 0.9980, norm:13.5282, tok/sec: 109231.52, flops:42.56, batch-reuse:1
@ 161 train 8.3846 , allloss: 9.7701, dt: 1183.18ms, fracRes: 0.0098, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0620, norm(y): 0.9980, norm:14.2660, tok/sec: 110779.86, flops:43.16, batch-reuse:1
@ 162 train 8.4052 , allloss: 9.8044, dt: 1194.86ms, fracRes: 0.0095, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0618, norm(y): 0.9980, norm:12.6250, tok/sec: 109696.78, flops:42.74, batch-reuse:1
@ 163 train 8.3679 , allloss: 9.7691, dt: 1195.94ms, fracRes: 0.0096, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9980, norm:15.0443, tok/sec: 109597.75, flops:42.70, batch-reuse:1
@ 164 train 8.2909 , allloss: 9.6689, dt: 1205.74ms, fracRes: 0.0100, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0624, norm(y): 0.9980, norm:11.8144, tok/sec: 108706.86, flops:42.35, batch-reuse:1
@ 165 train 8.3418 , allloss: 9.7136, dt: 1200.43ms, fracRes: 0.0101, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0626, norm(y): 0.9980, norm:11.6155, tok/sec: 109187.29, flops:42.54, batch-reuse:1
@ 166 train 8.2641 , allloss: 9.6589, dt: 1190.76ms, fracRes: 0.0095, norm(attn): 0.0684, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9979, norm:14.3652, tok/sec: 110074.49, flops:42.89, batch-reuse:1
@ 167 train 8.2683 , allloss: 9.6622, dt: 1181.89ms, fracRes: 0.0097, norm(attn): 0.0693, norm(output): 0.0586, norm(x): 0.0618, norm(y): 0.9979, norm:15.6272, tok/sec: 110900.45, flops:43.21, batch-reuse:1
@ 168 train 8.2450 , allloss: 9.6277, dt: 1193.65ms, fracRes: 0.0100, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0625, norm(y): 0.9979, norm:14.2306, tok/sec: 109807.86, flops:42.78, batch-reuse:1
@ 169 train 8.2432 , allloss: 9.6244, dt: 1200.51ms, fracRes: 0.0101, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0626, norm(y): 0.9979, norm:12.5489, tok/sec: 109180.07, flops:42.54, batch-reuse:1
@ 170 train 8.2284 , allloss: 9.6232, dt: 1204.44ms, fracRes: 0.0099, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0618, norm(y): 0.9979, norm:16.5220, tok/sec: 108823.62, flops:42.40, batch-reuse:1
@ 171 train 8.2131 , allloss: 9.6144, dt: 1206.68ms, fracRes: 0.0098, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9979, norm:14.4964, tok/sec: 108622.41, flops:42.32, batch-reuse:1
@ 172 train 8.2137 , allloss: 9.6030, dt: 1211.32ms, fracRes: 0.0098, norm(attn): 0.0703, norm(output): 0.0586, norm(x): 0.0622, norm(y): 0.9979, norm:14.5410, tok/sec: 108205.82, flops:42.16, batch-reuse:1
@ 173 train 8.1787 , allloss: 9.5615, dt: 1209.67ms, fracRes: 0.0097, norm(attn): 0.0698, norm(output): 0.0588, norm(x): 0.0623, norm(y): 0.9979, norm:12.0014, tok/sec: 108353.23, flops:42.21, batch-reuse:1
@ 174 train 8.2862 , allloss: 9.6737, dt: 1214.52ms, fracRes: 0.0095, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0619, norm(y): 0.9978, norm:17.2904, tok/sec: 107921.00, flops:42.05, batch-reuse:1
@ 175 train 8.2359 , allloss: 9.6158, dt: 1195.87ms, fracRes: 0.0098, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0620, norm(y): 0.9978, norm:13.2985, tok/sec: 109604.00, flops:42.70, batch-reuse:1
@ 176 train 8.1885 , allloss: 9.5607, dt: 1225.84ms, fracRes: 0.0100, norm(attn): 0.0703, norm(output): 0.0588, norm(x): 0.0626, norm(y): 0.9978, norm:8.8645, tok/sec: 106923.83, flops:41.66, batch-reuse:1
@ 177 train 8.1580 , allloss: 9.5438, dt: 1202.73ms, fracRes: 0.0097, norm(attn): 0.0703, norm(output): 0.0586, norm(x): 0.0622, norm(y): 0.9978, norm:10.9020, tok/sec: 108978.38, flops:42.46, batch-reuse:1
@ 178 train 8.2031 , allloss: 9.5967, dt: 1201.37ms, fracRes: 0.0097, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9978, norm:8.8069, tok/sec: 109102.13, flops:42.51, batch-reuse:1
@ 179 train 8.1101 , allloss: 9.4885, dt: 1208.57ms, fracRes: 0.0098, norm(attn): 0.0698, norm(output): 0.0583, norm(x): 0.0617, norm(y): 0.9978, norm:9.0124, tok/sec: 108452.52, flops:42.25, batch-reuse:1
@ 180 train 8.1956 , allloss: 9.5672, dt: 1179.11ms, fracRes: 0.0097, norm(attn): 0.0698, norm(output): 0.0586, norm(x): 0.0621, norm(y): 0.9978, norm:10.5116, tok/sec: 111161.71, flops:43.31, batch-reuse:1
@ 181 train 8.1526 , allloss: 9.5277, dt: 1206.65ms, fracRes: 0.0097, norm(attn): 0.0703, norm(output): 0.0583, norm(x): 0.0620, norm(y): 0.9978, norm:8.7623, tok/sec: 108624.36, flops:42.32, batch-reuse:1
@ 182 train 8.1447 , allloss: 9.5373, dt: 1179.83ms, fracRes: 0.0094, norm(attn): 0.0703, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9977, norm:14.7679, tok/sec: 111093.78, flops:43.28, batch-reuse:1
@ 183 train 8.0818 , allloss: 9.4767, dt: 1197.88ms, fracRes: 0.0094, norm(attn): 0.0708, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9977, norm:9.2855, tok/sec: 109420.04, flops:42.63, batch-reuse:1
@ 184 train 7.9890 , allloss: 9.3614, dt: 1210.40ms, fracRes: 0.0096, norm(attn): 0.0708, norm(output): 0.0583, norm(x): 0.0618, norm(y): 0.9977, norm:14.6952, tok/sec: 108287.80, flops:42.19, batch-reuse:1
@ 185 train 8.0161 , allloss: 9.3728, dt: 1217.26ms, fracRes: 0.0097, norm(attn): 0.0708, norm(output): 0.0583, norm(x): 0.0619, norm(y): 0.9977, norm:11.0097, tok/sec: 107677.68, flops:41.95, batch-reuse:1
@ 186 train 8.1360 , allloss: 9.5081, dt: 1191.25ms, fracRes: 0.0094, norm(attn): 0.0708, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9977, norm:10.5529, tok/sec: 110028.60, flops:42.87, batch-reuse:1
@ 187 train 8.1867 , allloss: 9.5742, dt: 1217.13ms, fracRes: 0.0091, norm(attn): 0.0718, norm(output): 0.0583, norm(x): 0.0610, norm(y): 0.9976, norm:15.4972, tok/sec: 107689.22, flops:41.96, batch-reuse:1
@ 188 train 8.0371 , allloss: 9.4111, dt: 1248.03ms, fracRes: 0.0091, norm(attn): 0.0723, norm(output): 0.0583, norm(x): 0.0611, norm(y): 0.9976, norm:9.3537, tok/sec: 105022.82, flops:40.92, batch-reuse:1
@ 189 train 8.1345 , allloss: 9.4826, dt: 1217.06ms, fracRes: 0.0094, norm(attn): 0.0713, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9976, norm:22.2176, tok/sec: 107695.84, flops:41.96, batch-reuse:1
@ 190 train 8.0813 , allloss: 9.4138, dt: 1183.12ms, fracRes: 0.0096, norm(attn): 0.0718, norm(output): 0.0583, norm(x): 0.0618, norm(y): 0.9976, norm:15.2482, tok/sec: 110785.27, flops:43.16, batch-reuse:1
@ 191 train 8.0535 , allloss: 9.3897, dt: 1210.70ms, fracRes: 0.0098, norm(attn): 0.0723, norm(output): 0.0586, norm(x): 0.0621, norm(y): 0.9976, norm:16.4278, tok/sec: 108261.10, flops:42.18, batch-reuse:1
@ 192 train 8.0868 , allloss: 9.4364, dt: 1241.18ms, fracRes: 0.0095, norm(attn): 0.0723, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9976, norm:17.6478, tok/sec: 105602.62, flops:41.14, batch-reuse:1
@ 193 train 8.0146 , allloss: 9.3740, dt: 1192.94ms, fracRes: 0.0093, norm(attn): 0.0723, norm(output): 0.0583, norm(x): 0.0608, norm(y): 0.9975, norm:11.8417, tok/sec: 109872.65, flops:42.81, batch-reuse:1
@ 194 train 8.0652 , allloss: 9.4160, dt: 1198.46ms, fracRes: 0.0092, norm(attn): 0.0713, norm(output): 0.0583, norm(x): 0.0609, norm(y): 0.9975, norm:15.1873, tok/sec: 109366.60, flops:42.61, batch-reuse:1
@ 195 train 8.0564 , allloss: 9.3972, dt: 1174.79ms, fracRes: 0.0095, norm(attn): 0.0728, norm(output): 0.0583, norm(x): 0.0616, norm(y): 0.9975, norm:12.6702, tok/sec: 111570.41, flops:43.47, batch-reuse:1
@ 196 train 7.9832 , allloss: 9.3210, dt: 1179.02ms, fracRes: 0.0094, norm(attn): 0.0728, norm(output): 0.0583, norm(x): 0.0615, norm(y): 0.9975, norm:11.0473, tok/sec: 111169.99, flops:43.31, batch-reuse:1
@ 197 train 7.9640 , allloss: 9.3017, dt: 1177.58ms, fracRes: 0.0093, norm(attn): 0.0723, norm(output): 0.0583, norm(x): 0.0611, norm(y): 0.9975, norm:14.9299, tok/sec: 111306.43, flops:43.36, batch-reuse:1
@ 198 train 7.9219 , allloss: 9.2489, dt: 1204.42ms, fracRes: 0.0094, norm(attn): 0.0718, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9975, norm:9.7035, tok/sec: 108826.27, flops:42.40, batch-reuse:1
@ 199 train 7.9946 , allloss: 9.3222, dt: 1200.13ms, fracRes: 0.0094, norm(attn): 0.0732, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9975, norm:12.4516, tok/sec: 109215.08, flops:42.55, batch-reuse:1
@ 200 train 7.9982 , allloss: 9.3290, dt: 1209.76ms, fracRes: 0.0093, norm(attn): 0.0732, norm(output): 0.0583, norm(x): 0.0611, norm(y): 0.9975, norm:10.9247, tok/sec: 108345.06, flops:42.21, batch-reuse:1
@ 201 train 7.9708 , allloss: 9.2975, dt: 1198.47ms, fracRes: 0.0093, norm(attn): 0.0732, norm(output): 0.0571, norm(x): 0.0606, norm(y): 0.9974, norm:14.5651, tok/sec: 109366.36, flops:42.61, batch-reuse:1
@ 202 train 7.9882 , allloss: 9.3067, dt: 1192.26ms, fracRes: 0.0093, norm(attn): 0.0747, norm(output): 0.0583, norm(x): 0.0609, norm(y): 0.9974, norm:11.2184, tok/sec: 109935.42, flops:42.83, batch-reuse:1
@ 203 train 7.9858 , allloss: 9.2937, dt: 1215.02ms, fracRes: 0.0096, norm(attn): 0.0752, norm(output): 0.0583, norm(x): 0.0614, norm(y): 0.9974, norm:11.7429, tok/sec: 107876.84, flops:42.03, batch-reuse:1
@ 204 train 7.9511 , allloss: 9.2602, dt: 1206.24ms, fracRes: 0.0095, norm(attn): 0.0752, norm(output): 0.0583, norm(x): 0.0612, norm(y): 0.9974, norm:10.0346, tok/sec: 108662.06, flops:42.33, batch-reuse:1
@ 205 train 7.9257 , allloss: 9.2500, dt: 1183.31ms, fracRes: 0.0094, norm(attn): 0.0752, norm(output): 0.0579, norm(x): 0.0604, norm(y): 0.9974, norm:10.8384, tok/sec: 110766.83, flops:43.15, batch-reuse:1
@ 206 train 7.9447 , allloss: 9.2787, dt: 1204.81ms, fracRes: 0.0092, norm(attn): 0.0762, norm(output): 0.0576, norm(x): 0.0603, norm(y): 0.9974, norm:10.3835, tok/sec: 108791.04, flops:42.38, batch-reuse:1
@ 207 train 7.8390 , allloss: 9.1497, dt: 1205.49ms, fracRes: 0.0094, norm(attn): 0.0762, norm(output): 0.0579, norm(x): 0.0607, norm(y): 0.9974, norm:10.7846, tok/sec: 108729.65, flops:42.36, batch-reuse:1
@ 208 train 7.9048 , allloss: 9.1967, dt: 1195.04ms, fracRes: 0.0095, norm(attn): 0.0767, norm(output): 0.0581, norm(x): 0.0609, norm(y): 0.9974, norm:13.0799, tok/sec: 109679.60, flops:42.73, batch-reuse:1
@ 209 train 7.9215 , allloss: 9.2125, dt: 1186.37ms, fracRes: 0.0094, norm(attn): 0.0767, norm(output): 0.0581, norm(x): 0.0608, norm(y): 0.9973, norm:11.8394, tok/sec: 110481.52, flops:43.04, batch-reuse:1
@ 210 train 7.8921 , allloss: 9.1939, dt: 1184.45ms, fracRes: 0.0093, norm(attn): 0.0771, norm(output): 0.0579, norm(x): 0.0605, norm(y): 0.9973, norm:9.7066, tok/sec: 110660.23, flops:43.11, batch-reuse:1
@ 211 train 7.8295 , allloss: 9.1373, dt: 1171.60ms, fracRes: 0.0091, norm(attn): 0.0771, norm(output): 0.0574, norm(x): 0.0601, norm(y): 0.9973, norm:12.7602, tok/sec: 111874.69, flops:43.59, batch-reuse:1
@ 212 train 7.8879 , allloss: 9.1990, dt: 1212.96ms, fracRes: 0.0092, norm(attn): 0.0786, norm(output): 0.0571, norm(x): 0.0601, norm(y): 0.9973, norm:8.4289, tok/sec: 108059.20, flops:42.10, batch-reuse:1
@ 213 train 7.8198 , allloss: 9.1325, dt: 1190.53ms, fracRes: 0.0093, norm(attn): 0.0796, norm(output): 0.0562, norm(x): 0.0601, norm(y): 0.9973, norm:16.8819, tok/sec: 110095.94, flops:42.89, batch-reuse:1
@ 214 train 7.8463 , allloss: 9.1492, dt: 1192.23ms, fracRes: 0.0093, norm(attn): 0.0801, norm(output): 0.0557, norm(x): 0.0600, norm(y): 0.9973, norm:11.5939, tok/sec: 109938.26, flops:42.83, batch-reuse:1
@ 215 train 7.7653 , allloss: 9.0568, dt: 1220.69ms, fracRes: 0.0094, norm(attn): 0.0786, norm(output): 0.0557, norm(x): 0.0598, norm(y): 0.9972, norm:15.9628, tok/sec: 107375.08, flops:41.83, batch-reuse:1
@ 216 train 7.7755 , allloss: 9.0724, dt: 1223.08ms, fracRes: 0.0093, norm(attn): 0.0796, norm(output): 0.0557, norm(x): 0.0598, norm(y): 0.9972, norm:9.7292, tok/sec: 107165.54, flops:41.75, batch-reuse:1
@ 217 train 7.8316 , allloss: 9.1383, dt: 1194.62ms, fracRes: 0.0091, norm(attn): 0.0796, norm(output): 0.0557, norm(x): 0.0600, norm(y): 0.9972, norm:13.7472, tok/sec: 109718.76, flops:42.75, batch-reuse:1
@ 218 train 7.8151 , allloss: 9.1256, dt: 1235.28ms, fracRes: 0.0092, norm(attn): 0.0796, norm(output): 0.0562, norm(x): 0.0598, norm(y): 0.9972, norm:10.5841, tok/sec: 106106.73, flops:41.34, batch-reuse:1
@ 219 train 7.8894 , allloss: 9.2079, dt: 1228.22ms, fracRes: 0.0091, norm(attn): 0.0806, norm(output): 0.0557, norm(x): 0.0595, norm(y): 0.9972, norm:12.7274, tok/sec: 106716.81, flops:41.58, batch-reuse:1
@ 220 train 7.8222 , allloss: 9.1274, dt: 1195.93ms, fracRes: 0.0093, norm(attn): 0.0811, norm(output): 0.0557, norm(x): 0.0598, norm(y): 0.9972, norm:9.7888, tok/sec: 109598.13, flops:42.70, batch-reuse:1
@ 221 train 7.8105 , allloss: 9.0937, dt: 1185.19ms, fracRes: 0.0095, norm(attn): 0.0806, norm(output): 0.0566, norm(x): 0.0602, norm(y): 0.9972, norm:10.3077, tok/sec: 110591.24, flops:43.09, batch-reuse:1
@ 222 train 7.7702 , allloss: 9.0541, dt: 1193.16ms, fracRes: 0.0093, norm(attn): 0.0806, norm(output): 0.0557, norm(x): 0.0600, norm(y): 0.9972, norm:14.0996, tok/sec: 109852.47, flops:42.80, batch-reuse:1
@ 223 train 7.7944 , allloss: 9.0830, dt: 1189.60ms, fracRes: 0.0093, norm(attn): 0.0796, norm(output): 0.0557, norm(x): 0.0596, norm(y): 0.9971, norm:10.3370, tok/sec: 110181.33, flops:42.93, batch-reuse:1
@ 224 train 7.7322 , allloss: 9.0297, dt: 1189.34ms, fracRes: 0.0092, norm(attn): 0.0791, norm(output): 0.0557, norm(x): 0.0595, norm(y): 0.9971, norm:8.4583, tok/sec: 110205.65, flops:42.94, batch-reuse:1
@ 225 train 7.7437 , allloss: 9.0420, dt: 1163.50ms, fracRes: 0.0092, norm(attn): 0.0796, norm(output): 0.0557, norm(x): 0.0598, norm(y): 0.9971, norm:11.2040, tok/sec: 112653.38, flops:43.89, batch-reuse:1
@ 226 train 7.7765 , allloss: 9.0678, dt: 1196.95ms, fracRes: 0.0094, norm(attn): 0.0815, norm(output): 0.0559, norm(x): 0.0598, norm(y): 0.9971, norm:12.5096, tok/sec: 109504.60, flops:42.66, batch-reuse:1
@ 227 train 7.7706 , allloss: 9.0679, dt: 1158.39ms, fracRes: 0.0094, norm(attn): 0.0825, norm(output): 0.0557, norm(x): 0.0597, norm(y): 0.9971, norm:8.8897, tok/sec: 113149.96, flops:44.08, batch-reuse:1
@ 228 train 7.7342 , allloss: 9.0312, dt: 1206.39ms, fracRes: 0.0093, norm(attn): 0.0811, norm(output): 0.0557, norm(x): 0.0595, norm(y): 0.9971, norm:9.7529, tok/sec: 108648.40, flops:42.33, batch-reuse:1
@ 229 train 7.7719 , allloss: 9.0719, dt: 1228.24ms, fracRes: 0.0092, norm(attn): 0.0811, norm(output): 0.0557, norm(x): 0.0595, norm(y): 0.9970, norm:9.1074, tok/sec: 106715.17, flops:41.58, batch-reuse:1
@ 230 train 7.7583 , allloss: 9.0568, dt: 1235.84ms, fracRes: 0.0092, norm(attn): 0.0820, norm(output): 0.0562, norm(x): 0.0598, norm(y): 0.9970, norm:11.8500, tok/sec: 106059.11, flops:41.32, batch-reuse:1
@ 231 train 7.6705 , allloss: 8.9613, dt: 1199.84ms, fracRes: 0.0092, norm(attn): 0.0815, norm(output): 0.0562, norm(x): 0.0598, norm(y): 0.9970, norm:6.9635, tok/sec: 109241.16, flops:42.56, batch-reuse:1
@ 232 train 7.6603 , allloss: 8.9497, dt: 1223.41ms, fracRes: 0.0094, norm(attn): 0.0830, norm(output): 0.0557, norm(x): 0.0595, norm(y): 0.9970, norm:9.2083, tok/sec: 107136.24, flops:41.74, batch-reuse:1
@ 233 train 7.7085 , allloss: 8.9988, dt: 1204.41ms, fracRes: 0.0093, norm(attn): 0.0835, norm(output): 0.0559, norm(x): 0.0598, norm(y): 0.9970, norm:11.1311, tok/sec: 108826.96, flops:42.40, batch-reuse:1
@ 234 train 7.5670 , allloss: 8.8522, dt: 1187.09ms, fracRes: 0.0093, norm(attn): 0.0825, norm(output): 0.0557, norm(x): 0.0596, norm(y): 0.9970, norm:8.7198, tok/sec: 110414.97, flops:43.02, batch-reuse:1
@ 235 train 7.6766 , allloss: 8.9667, dt: 1197.56ms, fracRes: 0.0091, norm(attn): 0.0811, norm(output): 0.0557, norm(x): 0.0593, norm(y): 0.9969, norm:6.4302, tok/sec: 109449.34, flops:42.64, batch-reuse:1
@ 236 train 7.5784 , allloss: 8.8628, dt: 1184.99ms, fracRes: 0.0090, norm(attn): 0.0791, norm(output): 0.0557, norm(x): 0.0594, norm(y): 0.9969, norm:9.9717, tok/sec: 110610.45, flops:43.09, batch-reuse:1
@ 237 train 7.6732 , allloss: 8.9388, dt: 1187.63ms, fracRes: 0.0092, norm(attn): 0.0801, norm(output): 0.0562, norm(x): 0.0596, norm(y): 0.9969, norm:13.0152, tok/sec: 110364.68, flops:43.00, batch-reuse:1
@ 238 train 7.6318 , allloss: 8.8916, dt: 1184.30ms, fracRes: 0.0092, norm(attn): 0.0811, norm(output): 0.0574, norm(x): 0.0600, norm(y): 0.9969, norm:9.2034, tok/sec: 110674.87, flops:43.12, batch-reuse:1
@ 239 train 7.6273 , allloss: 8.8968, dt: 1207.07ms, fracRes: 0.0090, norm(attn): 0.0815, norm(output): 0.0562, norm(x): 0.0596, norm(y): 0.9969, norm:5.8621, tok/sec: 108587.28, flops:42.31, batch-reuse:1
@ 240 train 7.6871 , allloss: 8.9661, dt: 1198.00ms, fracRes: 0.0088, norm(attn): 0.0811, norm(output): 0.0554, norm(x): 0.0591, norm(y): 0.9968, norm:8.4882, tok/sec: 109409.32, flops:42.63, batch-reuse:1
@ 241 train 7.6351 , allloss: 8.9106, dt: 1200.27ms, fracRes: 0.0086, norm(attn): 0.0830, norm(output): 0.0562, norm(x): 0.0593, norm(y): 0.9968, norm:14.4924, tok/sec: 109202.23, flops:42.55, batch-reuse:1
@ 242 train 7.6611 , allloss: 8.9322, dt: 1192.03ms, fracRes: 0.0085, norm(attn): 0.0815, norm(output): 0.0562, norm(x): 0.0592, norm(y): 0.9968, norm:9.8197, tok/sec: 109956.64, flops:42.84, batch-reuse:1
@ 243 train 7.5125 , allloss: 8.7787, dt: 1219.90ms, fracRes: 0.0085, norm(attn): 0.0820, norm(output): 0.0557, norm(x): 0.0589, norm(y): 0.9968, norm:6.9859, tok/sec: 107445.09, flops:41.86, batch-reuse:1
@ 244 train 7.6787 , allloss: 8.9472, dt: 1187.97ms, fracRes: 0.0084, norm(attn): 0.0840, norm(output): 0.0557, norm(x): 0.0589, norm(y): 0.9967, norm:13.3950, tok/sec: 110332.49, flops:42.99, batch-reuse:1
@ 245 train 7.5323 , allloss: 8.8037, dt: 1200.24ms, fracRes: 0.0083, norm(attn): 0.0845, norm(output): 0.0554, norm(x): 0.0587, norm(y): 0.9967, norm:9.9939, tok/sec: 109204.42, flops:42.55, batch-reuse:1
@ 246 train 7.7140 , allloss: 8.9823, dt: 1219.25ms, fracRes: 0.0083, norm(attn): 0.0854, norm(output): 0.0557, norm(x): 0.0590, norm(y): 0.9967, norm:8.5772, tok/sec: 107502.01, flops:41.88, batch-reuse:1
@ 247 train 7.6191 , allloss: 8.8783, dt: 1191.46ms, fracRes: 0.0083, norm(attn): 0.0854, norm(output): 0.0562, norm(x): 0.0591, norm(y): 0.9967, norm:11.3295, tok/sec: 110009.89, flops:42.86, batch-reuse:1
@ 248 train 7.5586 , allloss: 8.8121, dt: 1189.68ms, fracRes: 0.0083, norm(attn): 0.0854, norm(output): 0.0557, norm(x): 0.0588, norm(y): 0.9967, norm:11.0551, tok/sec: 110173.74, flops:42.92, batch-reuse:1
@ 249 train 7.5221 , allloss: 8.7764, dt: 1218.10ms, fracRes: 0.0081, norm(attn): 0.0854, norm(output): 0.0557, norm(x): 0.0586, norm(y): 0.9966, norm:9.1579, tok/sec: 107603.79, flops:41.92, batch-reuse:1
@ 250 train 7.5624 , allloss: 8.8153, dt: 1214.19ms, fracRes: 0.0079, norm(attn): 0.0864, norm(output): 0.0557, norm(x): 0.0587, norm(y): 0.9966, norm:6.7899, tok/sec: 107949.99, flops:42.06, batch-reuse:1
@ 251 train 7.4835 , allloss: 8.7322, dt: 1183.85ms, fracRes: 0.0080, norm(attn): 0.0869, norm(output): 0.0554, norm(x): 0.0583, norm(y): 0.9966, norm:9.9397, tok/sec: 110716.35, flops:43.14, batch-reuse:1
@ 252 train 7.6366 , allloss: 8.8828, dt: 1193.90ms, fracRes: 0.0080, norm(attn): 0.0879, norm(output): 0.0554, norm(x): 0.0585, norm(y): 0.9966, norm:12.0415, tok/sec: 109784.66, flops:42.77, batch-reuse:1
@ 253 train 7.4871 , allloss: 8.7229, dt: 1198.73ms, fracRes: 0.0078, norm(attn): 0.0879, norm(output): 0.0554, norm(x): 0.0584, norm(y): 0.9966, norm:7.7013, tok/sec: 109342.61, flops:42.60, batch-reuse:1
@ 254 train 7.4433 , allloss: 8.6758, dt: 1204.80ms, fracRes: 0.0078, norm(attn): 0.0889, norm(output): 0.0552, norm(x): 0.0584, norm(y): 0.9966, norm:9.3759, tok/sec: 108791.47, flops:42.39, batch-reuse:1
@ 255 train 7.4876 , allloss: 8.7254, dt: 1219.52ms, fracRes: 0.0077, norm(attn): 0.0889, norm(output): 0.0557, norm(x): 0.0586, norm(y): 0.9965, norm:17.3070, tok/sec: 107478.53, flops:41.87, batch-reuse:1
@ 256 train 7.4901 , allloss: 8.7181, dt: 1178.08ms, fracRes: 0.0078, norm(attn): 0.0908, norm(output): 0.0557, norm(x): 0.0586, norm(y): 0.9965, norm:8.3810, tok/sec: 111259.33, flops:43.35, batch-reuse:1
@ 257 train 7.5752 , allloss: 8.7937, dt: 1208.94ms, fracRes: 0.0079, norm(attn): 0.0918, norm(output): 0.0557, norm(x): 0.0583, norm(y): 0.9965, norm:33.6934, tok/sec: 108418.71, flops:42.24, batch-reuse:1
@ 258 train 7.5084 , allloss: 8.7246, dt: 1230.85ms, fracRes: 0.0077, norm(attn): 0.0928, norm(output): 0.0554, norm(x): 0.0584, norm(y): 0.9965, norm:25.0247, tok/sec: 106488.97, flops:41.49, batch-reuse:1
@ 259 train 7.4885 , allloss: 8.7129, dt: 1196.75ms, fracRes: 0.0072, norm(attn): 0.0933, norm(output): 0.0576, norm(x): 0.0590, norm(y): 0.9965, norm:13.8274, tok/sec: 109523.15, flops:42.67, batch-reuse:1
@ 260 train 7.5712 , allloss: 8.8031, dt: 1222.63ms, fracRes: 0.0070, norm(attn): 0.0928, norm(output): 0.0576, norm(x): 0.0590, norm(y): 0.9965, norm:12.7712, tok/sec: 107204.81, flops:41.77, batch-reuse:1
@ 261 train 7.4979 , allloss: 8.7334, dt: 1235.43ms, fracRes: 0.0072, norm(attn): 0.0928, norm(output): 0.0562, norm(x): 0.0584, norm(y): 0.9965, norm:8.3371, tok/sec: 106093.89, flops:41.33, batch-reuse:1
@ 262 train 7.5280 , allloss: 8.7555, dt: 1233.78ms, fracRes: 0.0075, norm(attn): 0.0928, norm(output): 0.0554, norm(x): 0.0579, norm(y): 0.9964, norm:11.4577, tok/sec: 106236.25, flops:41.39, batch-reuse:1
@ 263 train 7.4844 , allloss: 8.7046, dt: 1187.65ms, fracRes: 0.0074, norm(attn): 0.0942, norm(output): 0.0554, norm(x): 0.0578, norm(y): 0.9964, norm:8.5734, tok/sec: 110362.04, flops:43.00, batch-reuse:1
@ 264 train 7.4765 , allloss: 8.6877, dt: 1194.46ms, fracRes: 0.0074, norm(attn): 0.0942, norm(output): 0.0566, norm(x): 0.0586, norm(y): 0.9964, norm:9.8423, tok/sec: 109733.30, flops:42.75, batch-reuse:1
@ 265 train 7.4627 , allloss: 8.6828, dt: 1191.94ms, fracRes: 0.0070, norm(attn): 0.0952, norm(output): 0.0554, norm(x): 0.0578, norm(y): 0.9964, norm:6.4662, tok/sec: 109965.35, flops:42.84, batch-reuse:1
@ 266 train 7.4557 , allloss: 8.6876, dt: 1207.93ms, fracRes: 0.0069, norm(attn): 0.0977, norm(output): 0.0544, norm(x): 0.0565, norm(y): 0.9963, norm:15.3860, tok/sec: 108509.63, flops:42.28, batch-reuse:1
@ 267 train 7.4293 , allloss: 8.6379, dt: 1179.02ms, fracRes: 0.0068, norm(attn): 0.0986, norm(output): 0.0549, norm(x): 0.0570, norm(y): 0.9963, norm:7.8988, tok/sec: 111170.12, flops:43.31, batch-reuse:1
@ 268 train 7.5061 , allloss: 8.6953, dt: 1197.16ms, fracRes: 0.0065, norm(attn): 0.1001, norm(output): 0.0549, norm(x): 0.0570, norm(y): 0.9963, norm:9.2587, tok/sec: 109485.98, flops:42.66, batch-reuse:1
@ 269 train 7.4436 , allloss: 8.6237, dt: 1177.15ms, fracRes: 0.0059, norm(attn): 0.1016, norm(output): 0.0549, norm(x): 0.0567, norm(y): 0.9963, norm:8.9663, tok/sec: 111346.74, flops:43.38, batch-reuse:1
@ 270 train 7.5130 , allloss: 8.6906, dt: 1194.96ms, fracRes: 0.0056, norm(attn): 0.1030, norm(output): 0.0547, norm(x): 0.0562, norm(y): 0.9962, norm:9.6381, tok/sec: 109687.19, flops:42.73, batch-reuse:1
@ 271 train 7.3980 , allloss: 8.5691, dt: 1190.48ms, fracRes: 0.0054, norm(attn): 0.1045, norm(output): 0.0547, norm(x): 0.0562, norm(y): 0.9962, norm:9.8253, tok/sec: 110099.75, flops:42.89, batch-reuse:1
@ 272 train 7.4187 , allloss: 8.5878, dt: 1230.73ms, fracRes: 0.0052, norm(attn): 0.1074, norm(output): 0.0549, norm(x): 0.0561, norm(y): 0.9962, norm:12.4071, tok/sec: 106499.45, flops:41.49, batch-reuse:1
@ 273 train 7.5520 , allloss: 8.7226, dt: 1215.48ms, fracRes: 0.0052, norm(attn): 0.1094, norm(output): 0.0547, norm(x): 0.0555, norm(y): 0.9962, norm:7.0926, tok/sec: 107835.43, flops:42.01, batch-reuse:1
@ 274 train 7.4305 , allloss: 8.5796, dt: 1223.82ms, fracRes: 0.0053, norm(attn): 0.1094, norm(output): 0.0544, norm(x): 0.0555, norm(y): 0.9962, norm:13.3333, tok/sec: 107100.85, flops:41.73, batch-reuse:1
@ 275 train 7.4109 , allloss: 8.5546, dt: 1190.60ms, fracRes: 0.0053, norm(attn): 0.1133, norm(output): 0.0542, norm(x): 0.0550, norm(y): 0.9961, norm:9.7388, tok/sec: 110088.64, flops:42.89, batch-reuse:1
@ 276 train 7.4035 , allloss: 8.5404, dt: 1209.59ms, fracRes: 0.0051, norm(attn): 0.1177, norm(output): 0.0540, norm(x): 0.0547, norm(y): 0.9961, norm:9.4514, tok/sec: 108360.56, flops:42.22, batch-reuse:1
@ 277 train 7.3102 , allloss: 8.4339, dt: 1185.58ms, fracRes: 0.0048, norm(attn): 0.1172, norm(output): 0.0544, norm(x): 0.0552, norm(y): 0.9961, norm:8.7580, tok/sec: 110554.95, flops:43.07, batch-reuse:1
@ 278 train 7.3876 , allloss: 8.5138, dt: 1204.32ms, fracRes: 0.0045, norm(attn): 0.1167, norm(output): 0.0547, norm(x): 0.0552, norm(y): 0.9961, norm:8.0090, tok/sec: 108834.97, flops:42.40, batch-reuse:1
@ 279 train 7.3555 , allloss: 8.5047, dt: 1212.29ms, fracRes: 0.0045, norm(attn): 0.1182, norm(output): 0.0537, norm(x): 0.0540, norm(y): 0.9960, norm:21.0115, tok/sec: 108119.04, flops:42.12, batch-reuse:1
@ 280 train 7.4519 , allloss: 8.5923, dt: 1209.57ms, fracRes: 0.0046, norm(attn): 0.1211, norm(output): 0.0537, norm(x): 0.0541, norm(y): 0.9960, norm:8.8692, tok/sec: 108362.14, flops:42.22, batch-reuse:1
@ 281 train 7.3520 , allloss: 8.4616, dt: 1184.84ms, fracRes: 0.0047, norm(attn): 0.1201, norm(output): 0.0547, norm(x): 0.0552, norm(y): 0.9961, norm:11.7249, tok/sec: 110624.51, flops:43.10, batch-reuse:1
@ 282 train 7.3219 , allloss: 8.4288, dt: 1209.27ms, fracRes: 0.0048, norm(attn): 0.1240, norm(output): 0.0544, norm(x): 0.0549, norm(y): 0.9960, norm:12.5200, tok/sec: 108389.32, flops:42.23, batch-reuse:1
@ 283 train 7.2741 , allloss: 8.3803, dt: 1198.04ms, fracRes: 0.0048, norm(attn): 0.1270, norm(output): 0.0542, norm(x): 0.0543, norm(y): 0.9960, norm:8.0051, tok/sec: 109405.75, flops:42.62, batch-reuse:1
@ 284 train 7.3757 , allloss: 8.4758, dt: 1174.54ms, fracRes: 0.0046, norm(attn): 0.1270, norm(output): 0.0537, norm(x): 0.0539, norm(y): 0.9959, norm:5.9623, tok/sec: 111594.32, flops:43.48, batch-reuse:1
@ 285 train 7.3881 , allloss: 8.4826, dt: 1198.13ms, fracRes: 0.0044, norm(attn): 0.1270, norm(output): 0.0537, norm(x): 0.0540, norm(y): 0.9959, norm:12.6701, tok/sec: 109396.91, flops:42.62, batch-reuse:1
@ 286 train 7.3957 , allloss: 8.4901, dt: 1193.89ms, fracRes: 0.0041, norm(attn): 0.1270, norm(output): 0.0544, norm(x): 0.0544, norm(y): 0.9959, norm:12.3752, tok/sec: 109785.58, flops:42.77, batch-reuse:1
@ 287 train 7.3779 , allloss: 8.4888, dt: 1183.98ms, fracRes: 0.0041, norm(attn): 0.1309, norm(output): 0.0537, norm(x): 0.0538, norm(y): 0.9959, norm:6.7398, tok/sec: 110704.69, flops:43.13, batch-reuse:1
@ 288 train 7.3910 , allloss: 8.5078, dt: 1192.56ms, fracRes: 0.0042, norm(attn): 0.1318, norm(output): 0.0532, norm(x): 0.0534, norm(y): 0.9959, norm:7.1655, tok/sec: 109908.28, flops:42.82, batch-reuse:1
@ 289 train 7.3562 , allloss: 8.4508, dt: 1199.51ms, fracRes: 0.0042, norm(attn): 0.1318, norm(output): 0.0537, norm(x): 0.0537, norm(y): 0.9959, norm:6.7011, tok/sec: 109271.21, flops:42.57, batch-reuse:1
@ 290 train 7.3420 , allloss: 8.4264, dt: 1207.29ms, fracRes: 0.0042, norm(attn): 0.1348, norm(output): 0.0522, norm(x): 0.0533, norm(y): 0.9958, norm:17.6199, tok/sec: 108566.85, flops:42.30, batch-reuse:1
@ 291 train 7.2603 , allloss: 8.3319, dt: 1185.81ms, fracRes: 0.0042, norm(attn): 0.1367, norm(output): 0.0532, norm(x): 0.0535, norm(y): 0.9958, norm:10.2484, tok/sec: 110534.12, flops:43.06, batch-reuse:1
@ 292 train 7.2921 , allloss: 8.3581, dt: 1184.53ms, fracRes: 0.0040, norm(attn): 0.1387, norm(output): 0.0532, norm(x): 0.0534, norm(y): 0.9958, norm:7.2033, tok/sec: 110652.72, flops:43.11, batch-reuse:1
@ 293 train 7.3606 , allloss: 8.4434, dt: 1176.81ms, fracRes: 0.0040, norm(attn): 0.1416, norm(output): 0.0515, norm(x): 0.0526, norm(y): 0.9957, norm:14.7092, tok/sec: 111379.02, flops:43.39, batch-reuse:1
@ 294 train 7.3197 , allloss: 8.4042, dt: 1184.46ms, fracRes: 0.0041, norm(attn): 0.1416, norm(output): 0.0518, norm(x): 0.0528, norm(y): 0.9957, norm:13.6305, tok/sec: 110659.72, flops:43.11, batch-reuse:1
@ 295 train 7.3331 , allloss: 8.4032, dt: 1190.68ms, fracRes: 0.0041, norm(attn): 0.1416, norm(output): 0.0532, norm(x): 0.0533, norm(y): 0.9957, norm:7.0638, tok/sec: 110081.48, flops:42.89, batch-reuse:1
@ 296 train 7.2417 , allloss: 8.3086, dt: 1206.04ms, fracRes: 0.0041, norm(attn): 0.1416, norm(output): 0.0527, norm(x): 0.0531, norm(y): 0.9957, norm:17.2995, tok/sec: 108679.53, flops:42.34, batch-reuse:1
@ 297 train 7.1990 , allloss: 8.2580, dt: 1184.57ms, fracRes: 0.0042, norm(attn): 0.1426, norm(output): 0.0532, norm(x): 0.0534, norm(y): 0.9957, norm:8.9079, tok/sec: 110649.45, flops:43.11, batch-reuse:1
@ 298 train 7.3223 , allloss: 8.3652, dt: 1201.75ms, fracRes: 0.0043, norm(attn): 0.1455, norm(output): 0.0537, norm(x): 0.0537, norm(y): 0.9957, norm:8.9103, tok/sec: 109067.78, flops:42.49, batch-reuse:1
@ 299 train 7.3094 , allloss: 8.3526, dt: 1198.41ms, fracRes: 0.0044, norm(attn): 0.1504, norm(output): 0.0515, norm(x): 0.0529, norm(y): 0.9957, norm:13.2143, tok/sec: 109371.99, flops:42.61, batch-reuse:1
@ 300 train 7.2814 , allloss: 8.3116, dt: 1207.89ms, fracRes: 0.0043, norm(attn): 0.1504, norm(output): 0.0518, norm(x): 0.0531, norm(y): 0.9956, norm:7.8099, tok/sec: 108512.93, flops:42.28, batch-reuse:1
@ 301 train 7.4476 , allloss: 8.4771, dt: 1206.78ms, fracRes: 0.0045, norm(attn): 0.1504, norm(output): 0.0522, norm(x): 0.0533, norm(y): 0.9956, norm:7.0567, tok/sec: 108613.44, flops:42.32, batch-reuse:1
@ 302 train 7.2809 , allloss: 8.3147, dt: 1229.88ms, fracRes: 0.0047, norm(attn): 0.1543, norm(output): 0.0513, norm(x): 0.0528, norm(y): 0.9956, norm:14.0210, tok/sec: 106573.36, flops:41.52, batch-reuse:1
@ 303 train 7.2969 , allloss: 8.3135, dt: 1184.93ms, fracRes: 0.0046, norm(attn): 0.1543, norm(output): 0.0527, norm(x): 0.0536, norm(y): 0.9956, norm:7.7562, tok/sec: 110615.94, flops:43.10, batch-reuse:1
@ 304 train 7.2685 , allloss: 8.2848, dt: 1190.47ms, fracRes: 0.0046, norm(attn): 0.1553, norm(output): 0.0532, norm(x): 0.0535, norm(y): 0.9956, norm:9.5158, tok/sec: 110101.23, flops:42.90, batch-reuse:1
@ 305 train 7.1890 , allloss: 8.2204, dt: 1204.49ms, fracRes: 0.0049, norm(attn): 0.1572, norm(output): 0.0510, norm(x): 0.0528, norm(y): 0.9955, norm:12.1055, tok/sec: 108819.81, flops:42.40, batch-reuse:1
@ 306 train 7.1982 , allloss: 8.2094, dt: 1203.70ms, fracRes: 0.0047, norm(attn): 0.1562, norm(output): 0.0527, norm(x): 0.0536, norm(y): 0.9956, norm:9.2645, tok/sec: 108890.94, flops:42.42, batch-reuse:1
@ 307 train 7.3989 , allloss: 8.4231, dt: 1184.41ms, fracRes: 0.0046, norm(attn): 0.1562, norm(output): 0.0525, norm(x): 0.0536, norm(y): 0.9956, norm:7.0840, tok/sec: 110664.42, flops:43.11, batch-reuse:1
@ 308 train 7.2587 , allloss: 8.2842, dt: 1209.63ms, fracRes: 0.0048, norm(attn): 0.1582, norm(output): 0.0510, norm(x): 0.0532, norm(y): 0.9955, norm:13.6998, tok/sec: 108357.23, flops:42.22, batch-reuse:1
@ 309 train 7.2783 , allloss: 8.2722, dt: 1239.70ms, fracRes: 0.0053, norm(attn): 0.1602, norm(output): 0.0520, norm(x): 0.0538, norm(y): 0.9955, norm:7.6831, tok/sec: 105729.08, flops:41.19, batch-reuse:1
@ 310 train 7.3527 , allloss: 8.3274, dt: 1217.57ms, fracRes: 0.0055, norm(attn): 0.1621, norm(output): 0.0537, norm(x): 0.0545, norm(y): 0.9956, norm:10.4980, tok/sec: 107650.75, flops:41.94, batch-reuse:1
@ 311 train 7.3395 , allloss: 8.3232, dt: 1219.71ms, fracRes: 0.0056, norm(attn): 0.1621, norm(output): 0.0525, norm(x): 0.0541, norm(y): 0.9955, norm:9.0740, tok/sec: 107461.66, flops:41.87, batch-reuse:1
@ 312 train 7.4195 , allloss: 8.4161, dt: 1203.64ms, fracRes: 0.0057, norm(attn): 0.1641, norm(output): 0.0518, norm(x): 0.0540, norm(y): 0.9955, norm:6.4209, tok/sec: 108895.90, flops:42.43, batch-reuse:1
@ 313 train 7.2237 , allloss: 8.2231, dt: 1183.77ms, fracRes: 0.0058, norm(attn): 0.1660, norm(output): 0.0518, norm(x): 0.0539, norm(y): 0.9955, norm:10.7407, tok/sec: 110723.77, flops:43.14, batch-reuse:1
@ 314 train 7.2239 , allloss: 8.2025, dt: 1182.53ms, fracRes: 0.0060, norm(attn): 0.1611, norm(output): 0.0532, norm(x): 0.0545, norm(y): 0.9955, norm:10.5432, tok/sec: 110840.55, flops:43.18, batch-reuse:1
@ 315 train 7.2672 , allloss: 8.2454, dt: 1191.17ms, fracRes: 0.0062, norm(attn): 0.1611, norm(output): 0.0537, norm(x): 0.0550, norm(y): 0.9955, norm:9.6496, tok/sec: 110036.44, flops:42.87, batch-reuse:1
@ 316 train 7.2801 , allloss: 8.2757, dt: 1199.63ms, fracRes: 0.0064, norm(attn): 0.1641, norm(output): 0.0518, norm(x): 0.0542, norm(y): 0.9954, norm:9.0607, tok/sec: 109260.18, flops:42.57, batch-reuse:1
@ 317 train 7.2935 , allloss: 8.2787, dt: 1199.96ms, fracRes: 0.0064, norm(attn): 0.1660, norm(output): 0.0527, norm(x): 0.0547, norm(y): 0.9954, norm:6.8823, tok/sec: 109230.50, flops:42.56, batch-reuse:1
@ 318 train 7.1908 , allloss: 8.1639, dt: 1177.81ms, fracRes: 0.0066, norm(attn): 0.1660, norm(output): 0.0522, norm(x): 0.0547, norm(y): 0.9954, norm:6.8892, tok/sec: 111284.89, flops:43.36, batch-reuse:1
@ 319 train 7.1551 , allloss: 8.1333, dt: 1203.39ms, fracRes: 0.0068, norm(attn): 0.1670, norm(output): 0.0527, norm(x): 0.0548, norm(y): 0.9954, norm:10.3940, tok/sec: 108919.26, flops:42.43, batch-reuse:1
@ 320 train 7.2159 , allloss: 8.1941, dt: 1233.06ms, fracRes: 0.0068, norm(attn): 0.1699, norm(output): 0.0515, norm(x): 0.0545, norm(y): 0.9954, norm:10.5543, tok/sec: 106297.94, flops:41.41, batch-reuse:1
@ 321 train 7.2656 , allloss: 8.2471, dt: 1213.75ms, fracRes: 0.0068, norm(attn): 0.1709, norm(output): 0.0518, norm(x): 0.0547, norm(y): 0.9954, norm:7.5021, tok/sec: 107988.88, flops:42.07, batch-reuse:1
@ 322 train 7.1724 , allloss: 8.1539, dt: 1203.66ms, fracRes: 0.0068, norm(attn): 0.1709, norm(output): 0.0513, norm(x): 0.0544, norm(y): 0.9954, norm:9.0857, tok/sec: 108894.86, flops:42.43, batch-reuse:1
@ 323 train 7.2576 , allloss: 8.2369, dt: 1186.75ms, fracRes: 0.0066, norm(attn): 0.1719, norm(output): 0.0522, norm(x): 0.0548, norm(y): 0.9954, norm:9.2178, tok/sec: 110445.81, flops:43.03, batch-reuse:1
@ 324 train 7.1855 , allloss: 8.1608, dt: 1216.36ms, fracRes: 0.0066, norm(attn): 0.1729, norm(output): 0.0518, norm(x): 0.0543, norm(y): 0.9953, norm:10.0563, tok/sec: 107757.25, flops:41.98, batch-reuse:1
@ 325 train 7.2256 , allloss: 8.1938, dt: 1232.58ms, fracRes: 0.0069, norm(attn): 0.1738, norm(output): 0.0518, norm(x): 0.0546, norm(y): 0.9953, norm:6.4449, tok/sec: 106339.47, flops:41.43, batch-reuse:1
@ 326 train 7.2683 , allloss: 8.2380, dt: 1239.84ms, fracRes: 0.0068, norm(attn): 0.1768, norm(output): 0.0510, norm(x): 0.0541, norm(y): 0.9953, norm:7.3753, tok/sec: 105717.09, flops:41.19, batch-reuse:1
@ 327 train 7.3269 , allloss: 8.2891, dt: 1199.37ms, fracRes: 0.0065, norm(attn): 0.1758, norm(output): 0.0518, norm(x): 0.0545, norm(y): 0.9953, norm:9.5330, tok/sec: 109284.35, flops:42.58, batch-reuse:1
@ 328 train 7.2032 , allloss: 8.1596, dt: 1214.31ms, fracRes: 0.0066, norm(attn): 0.1738, norm(output): 0.0510, norm(x): 0.0540, norm(y): 0.9952, norm:11.3351, tok/sec: 107939.35, flops:42.05, batch-reuse:1
@ 329 train 7.2289 , allloss: 8.1849, dt: 1196.85ms, fracRes: 0.0069, norm(attn): 0.1748, norm(output): 0.0515, norm(x): 0.0542, norm(y): 0.9952, norm:8.9935, tok/sec: 109514.11, flops:42.67, batch-reuse:1
@ 330 train 7.1936 , allloss: 8.1409, dt: 1191.39ms, fracRes: 0.0071, norm(attn): 0.1748, norm(output): 0.0510, norm(x): 0.0543, norm(y): 0.9952, norm:8.4363, tok/sec: 110016.01, flops:42.86, batch-reuse:1
@ 331 train 7.1502 , allloss: 8.1113, dt: 1181.53ms, fracRes: 0.0071, norm(attn): 0.1768, norm(output): 0.0510, norm(x): 0.0538, norm(y): 0.9952, norm:11.4875, tok/sec: 110933.93, flops:43.22, batch-reuse:1
@ 332 train 7.1536 , allloss: 8.0960, dt: 1202.80ms, fracRes: 0.0071, norm(attn): 0.1768, norm(output): 0.0510, norm(x): 0.0543, norm(y): 0.9952, norm:12.0128, tok/sec: 108972.44, flops:42.46, batch-reuse:1
@ 333 train 7.1981 , allloss: 8.1487, dt: 1209.87ms, fracRes: 0.0070, norm(attn): 0.1826, norm(output): 0.0510, norm(x): 0.0541, norm(y): 0.9952, norm:9.0365, tok/sec: 108335.49, flops:42.21, batch-reuse:1
@ 334 train 7.1468 , allloss: 8.1162, dt: 1204.17ms, fracRes: 0.0070, norm(attn): 0.1816, norm(output): 0.0508, norm(x): 0.0536, norm(y): 0.9951, norm:11.0238, tok/sec: 108848.38, flops:42.41, batch-reuse:1
@ 335 train 7.1224 , allloss: 8.0758, dt: 1196.88ms, fracRes: 0.0073, norm(attn): 0.1826, norm(output): 0.0510, norm(x): 0.0542, norm(y): 0.9951, norm:6.7634, tok/sec: 109510.99, flops:42.67, batch-reuse:1
@ 336 train 7.1627 , allloss: 8.1248, dt: 1170.46ms, fracRes: 0.0075, norm(attn): 0.1826, norm(output): 0.0508, norm(x): 0.0537, norm(y): 0.9951, norm:8.6053, tok/sec: 111983.60, flops:43.63, batch-reuse:1
@ 337 train 7.1646 , allloss: 8.1202, dt: 1208.06ms, fracRes: 0.0072, norm(attn): 0.1836, norm(output): 0.0510, norm(x): 0.0543, norm(y): 0.9951, norm:11.8505, tok/sec: 108497.77, flops:42.27, batch-reuse:1
@ 338 train 7.1299 , allloss: 8.0736, dt: 1186.80ms, fracRes: 0.0072, norm(attn): 0.1826, norm(output): 0.0510, norm(x): 0.0541, norm(y): 0.9951, norm:9.5252, tok/sec: 110441.77, flops:43.03, batch-reuse:1
@ 339 train 7.2124 , allloss: 8.1646, dt: 1196.33ms, fracRes: 0.0072, norm(attn): 0.1865, norm(output): 0.0510, norm(x): 0.0541, norm(y): 0.9951, norm:9.4119, tok/sec: 109561.80, flops:42.69, batch-reuse:1
@ 340 train 7.2176 , allloss: 8.1689, dt: 1202.60ms, fracRes: 0.0076, norm(attn): 0.1865, norm(output): 0.0508, norm(x): 0.0540, norm(y): 0.9950, norm:7.1097, tok/sec: 108990.69, flops:42.46, batch-reuse:1
@ 341 train 7.1353 , allloss: 8.1001, dt: 1198.68ms, fracRes: 0.0074, norm(attn): 0.1885, norm(output): 0.0508, norm(x): 0.0536, norm(y): 0.9950, norm:8.0191, tok/sec: 109346.65, flops:42.60, batch-reuse:1
@ 342 train 7.0574 , allloss: 8.0113, dt: 1215.17ms, fracRes: 0.0070, norm(attn): 0.1865, norm(output): 0.0508, norm(x): 0.0534, norm(y): 0.9950, norm:11.4835, tok/sec: 107862.85, flops:42.02, batch-reuse:1
@ 343 train 7.1165 , allloss: 8.0778, dt: 1198.74ms, fracRes: 0.0070, norm(attn): 0.1846, norm(output): 0.0508, norm(x): 0.0536, norm(y): 0.9950, norm:9.4404, tok/sec: 109341.24, flops:42.60, batch-reuse:1
@ 344 train 7.0719 , allloss: 8.0273, dt: 1193.42ms, fracRes: 0.0073, norm(attn): 0.1865, norm(output): 0.0505, norm(x): 0.0534, norm(y): 0.9950, norm:5.8468, tok/sec: 109828.51, flops:42.79, batch-reuse:1
@ 345 train 7.0929 , allloss: 8.0338, dt: 1197.69ms, fracRes: 0.0071, norm(attn): 0.1875, norm(output): 0.0510, norm(x): 0.0539, norm(y): 0.9950, norm:7.5643, tok/sec: 109436.96, flops:42.64, batch-reuse:1
@ 346 train 7.1683 , allloss: 8.1269, dt: 1179.00ms, fracRes: 0.0071, norm(attn): 0.1885, norm(output): 0.0508, norm(x): 0.0531, norm(y): 0.9949, norm:8.9298, tok/sec: 111172.64, flops:43.31, batch-reuse:1
@ 347 train 7.1654 , allloss: 8.1227, dt: 1179.39ms, fracRes: 0.0068, norm(attn): 0.1885, norm(output): 0.0508, norm(x): 0.0530, norm(y): 0.9949, norm:7.0998, tok/sec: 111135.02, flops:43.30, batch-reuse:1
@ 348 train 7.1112 , allloss: 8.0425, dt: 1213.34ms, fracRes: 0.0075, norm(attn): 0.1904, norm(output): 0.0508, norm(x): 0.0535, norm(y): 0.9949, norm:9.9541, tok/sec: 108026.03, flops:42.09, batch-reuse:1
@ 349 train 7.1387 , allloss: 8.0870, dt: 1179.40ms, fracRes: 0.0066, norm(attn): 0.1914, norm(output): 0.0508, norm(x): 0.0529, norm(y): 0.9948, norm:12.1761, tok/sec: 111134.68, flops:43.30, batch-reuse:1
@ 350 train 7.1764 , allloss: 8.1207, dt: 1210.08ms, fracRes: 0.0065, norm(attn): 0.1895, norm(output): 0.0508, norm(x): 0.0528, norm(y): 0.9948, norm:9.9271, tok/sec: 108316.37, flops:42.20, batch-reuse:1
@ 351 train 7.1673 , allloss: 8.1218, dt: 1218.24ms, fracRes: 0.0069, norm(attn): 0.1934, norm(output): 0.0505, norm(x): 0.0529, norm(y): 0.9948, norm:7.8735, tok/sec: 107591.21, flops:41.92, batch-reuse:1
@ 352 train 7.2050 , allloss: 8.1592, dt: 1192.21ms, fracRes: 0.0073, norm(attn): 0.1973, norm(output): 0.0505, norm(x): 0.0527, norm(y): 0.9948, norm:8.2643, tok/sec: 109940.76, flops:42.83, batch-reuse:1
@ 353 train 7.1436 , allloss: 8.0932, dt: 1213.29ms, fracRes: 0.0066, norm(attn): 0.1914, norm(output): 0.0508, norm(x): 0.0530, norm(y): 0.9948, norm:7.0371, tok/sec: 108030.19, flops:42.09, batch-reuse:1
@ 354 train 7.0864 , allloss: 8.0348, dt: 1220.92ms, fracRes: 0.0067, norm(attn): 0.1924, norm(output): 0.0508, norm(x): 0.0531, norm(y): 0.9948, norm:7.5111, tok/sec: 107355.16, flops:41.83, batch-reuse:1
@ 355 train 7.0945 , allloss: 8.0353, dt: 1197.43ms, fracRes: 0.0081, norm(attn): 0.2002, norm(output): 0.0503, norm(x): 0.0529, norm(y): 0.9947, norm:17.8378, tok/sec: 109461.08, flops:42.65, batch-reuse:1
@ 356 train 7.2025 , allloss: 8.1710, dt: 1172.32ms, fracRes: 0.0073, norm(attn): 0.1953, norm(output): 0.0503, norm(x): 0.0526, norm(y): 0.9947, norm:13.3392, tok/sec: 111805.41, flops:43.56, batch-reuse:1
@ 357 train 7.1544 , allloss: 8.0994, dt: 1195.62ms, fracRes: 0.0067, norm(attn): 0.1924, norm(output): 0.0510, norm(x): 0.0534, norm(y): 0.9947, norm:9.4776, tok/sec: 109626.73, flops:42.71, batch-reuse:1
@ 358 train 7.0667 , allloss: 7.9828, dt: 1210.07ms, fracRes: 0.0072, norm(attn): 0.2021, norm(output): 0.0508, norm(x): 0.0536, norm(y): 0.9947, norm:12.2052, tok/sec: 108317.62, flops:42.20, batch-reuse:1
@ 359 train 7.3368 , allloss: 8.2718, dt: 1238.50ms, fracRes: 0.0075, norm(attn): 0.2041, norm(output): 0.0508, norm(x): 0.0534, norm(y): 0.9947, norm:8.1606, tok/sec: 105831.28, flops:41.23, batch-reuse:1
@ 360 train 7.1496 , allloss: 8.0931, dt: 1238.82ms, fracRes: 0.0080, norm(attn): 0.2002, norm(output): 0.0508, norm(x): 0.0536, norm(y): 0.9947, norm:7.7962, tok/sec: 105803.84, flops:41.22, batch-reuse:1
@ 361 train 7.1735 , allloss: 8.1187, dt: 1188.82ms, fracRes: 0.0080, norm(attn): 0.1934, norm(output): 0.0508, norm(x): 0.0539, norm(y): 0.9947, norm:15.7655, tok/sec: 110254.21, flops:42.96, batch-reuse:1
@ 362 train 7.0272 , allloss: 7.9979, dt: 1213.91ms, fracRes: 0.0077, norm(attn): 0.1895, norm(output): 0.0510, norm(x): 0.0538, norm(y): 0.9946, norm:10.3079, tok/sec: 107974.98, flops:42.07, batch-reuse:1
@ 363 train 7.0778 , allloss: 8.0379, dt: 1209.83ms, fracRes: 0.0078, norm(attn): 0.1934, norm(output): 0.0510, norm(x): 0.0540, norm(y): 0.9946, norm:8.0401, tok/sec: 108339.08, flops:42.21, batch-reuse:1
@ 364 train 7.1264 , allloss: 8.0964, dt: 1200.56ms, fracRes: 0.0071, norm(attn): 0.1992, norm(output): 0.0510, norm(x): 0.0535, norm(y): 0.9946, norm:16.8939, tok/sec: 109175.88, flops:42.53, batch-reuse:1
@ 365 train 7.1042 , allloss: 8.0572, dt: 1191.03ms, fracRes: 0.0075, norm(attn): 0.2021, norm(output): 0.0510, norm(x): 0.0539, norm(y): 0.9946, norm:7.6896, tok/sec: 110049.55, flops:42.88, batch-reuse:1
@ 366 train 7.1416 , allloss: 8.0788, dt: 1224.48ms, fracRes: 0.0087, norm(attn): 0.2021, norm(output): 0.0508, norm(x): 0.0543, norm(y): 0.9946, norm:12.4982, tok/sec: 107042.73, flops:41.70, batch-reuse:1
@ 367 train 7.0426 , allloss: 7.9974, dt: 1234.44ms, fracRes: 0.0084, norm(attn): 0.2021, norm(output): 0.0508, norm(x): 0.0540, norm(y): 0.9945, norm:9.2758, tok/sec: 106179.29, flops:41.37, batch-reuse:1
@ 368 train 7.1614 , allloss: 8.1196, dt: 1214.85ms, fracRes: 0.0081, norm(attn): 0.2021, norm(output): 0.0508, norm(x): 0.0537, norm(y): 0.9945, norm:8.3213, tok/sec: 107891.53, flops:42.03, batch-reuse:1
@ 369 train 7.0959 , allloss: 8.0312, dt: 1190.78ms, fracRes: 0.0095, norm(attn): 0.2012, norm(output): 0.0508, norm(x): 0.0544, norm(y): 0.9945, norm:13.4064, tok/sec: 110071.98, flops:42.88, batch-reuse:1
@ 370 train 7.1826 , allloss: 8.1372, dt: 1177.68ms, fracRes: 0.0072, norm(attn): 0.1982, norm(output): 0.0508, norm(x): 0.0536, norm(y): 0.9945, norm:6.7793, tok/sec: 111296.47, flops:43.36, batch-reuse:1
@ 371 train 7.1103 , allloss: 8.0740, dt: 1195.54ms, fracRes: 0.0067, norm(attn): 0.2021, norm(output): 0.0510, norm(x): 0.0534, norm(y): 0.9944, norm:8.4093, tok/sec: 109634.08, flops:42.71, batch-reuse:1
@ 372 train 7.1915 , allloss: 8.1446, dt: 1191.43ms, fracRes: 0.0082, norm(attn): 0.2031, norm(output): 0.0508, norm(x): 0.0538, norm(y): 0.9944, norm:8.8133, tok/sec: 110012.44, flops:42.86, batch-reuse:1
@ 373 train 7.2045 , allloss: 8.1863, dt: 1221.48ms, fracRes: 0.0072, norm(attn): 0.2012, norm(output): 0.0508, norm(x): 0.0533, norm(y): 0.9944, norm:7.4851, tok/sec: 107305.90, flops:41.81, batch-reuse:1
@ 374 train 7.1741 , allloss: 8.1499, dt: 1196.41ms, fracRes: 0.0070, norm(attn): 0.2041, norm(output): 0.0508, norm(x): 0.0531, norm(y): 0.9944, norm:6.2660, tok/sec: 109554.58, flops:42.68, batch-reuse:1
@ 375 train 7.2666 , allloss: 8.2148, dt: 1219.51ms, fracRes: 0.0082, norm(attn): 0.2139, norm(output): 0.0503, norm(x): 0.0531, norm(y): 0.9943, norm:8.2506, tok/sec: 107479.21, flops:41.87, batch-reuse:1
@ 376 train 7.3174 , allloss: 8.2855, dt: 1218.69ms, fracRes: 0.0071, norm(attn): 0.2070, norm(output): 0.0503, norm(x): 0.0524, norm(y): 0.9943, norm:11.0338, tok/sec: 107551.75, flops:41.90, batch-reuse:1
@ 377 train 7.1998 , allloss: 8.1784, dt: 1206.62ms, fracRes: 0.0062, norm(attn): 0.2031, norm(output): 0.0508, norm(x): 0.0527, norm(y): 0.9943, norm:8.4289, tok/sec: 108627.67, flops:42.32, batch-reuse:1
@ 378 train 7.1283 , allloss: 8.0667, dt: 1211.65ms, fracRes: 0.0077, norm(attn): 0.2148, norm(output): 0.0503, norm(x): 0.0528, norm(y): 0.9943, norm:8.7176, tok/sec: 108176.19, flops:42.15, batch-reuse:1
@ 379 train 7.2173 , allloss: 8.1683, dt: 1237.17ms, fracRes: 0.0076, norm(attn): 0.2158, norm(output): 0.0503, norm(x): 0.0526, norm(y): 0.9942, norm:8.2763, tok/sec: 105945.00, flops:41.28, batch-reuse:1
@ 380 train 7.2934 , allloss: 8.2700, dt: 1233.01ms, fracRes: 0.0064, norm(attn): 0.2061, norm(output): 0.0505, norm(x): 0.0523, norm(y): 0.9942, norm:10.9924, tok/sec: 106302.48, flops:41.42, batch-reuse:1
@ 381 train 7.2170 , allloss: 8.1876, dt: 1195.11ms, fracRes: 0.0067, norm(attn): 0.2148, norm(output): 0.0503, norm(x): 0.0521, norm(y): 0.9942, norm:9.1384, tok/sec: 109673.84, flops:42.73, batch-reuse:1
@ 382 train 7.1586 , allloss: 8.1032, dt: 1183.39ms, fracRes: 0.0082, norm(attn): 0.2197, norm(output): 0.0498, norm(x): 0.0526, norm(y): 0.9942, norm:8.4154, tok/sec: 110759.49, flops:43.15, batch-reuse:1
@ 383 train 7.1560 , allloss: 8.1170, dt: 1165.67ms, fracRes: 0.0078, norm(attn): 0.2178, norm(output): 0.0500, norm(x): 0.0523, norm(y): 0.9941, norm:6.4403, tok/sec: 112443.47, flops:43.81, batch-reuse:1
@ 384 train 7.1705 , allloss: 8.1788, dt: 1188.47ms, fracRes: 0.0061, norm(attn): 0.2061, norm(output): 0.0505, norm(x): 0.0520, norm(y): 0.9941, norm:12.7464, tok/sec: 110286.28, flops:42.97, batch-reuse:1
@ 385 train 7.1125 , allloss: 8.1130, dt: 1178.45ms, fracRes: 0.0058, norm(attn): 0.2070, norm(output): 0.0508, norm(x): 0.0523, norm(y): 0.9941, norm:8.6837, tok/sec: 111223.63, flops:43.33, batch-reuse:1
@ 386 train 7.1992 , allloss: 8.1502, dt: 1205.99ms, fracRes: 0.0068, norm(attn): 0.2197, norm(output): 0.0505, norm(x): 0.0522, norm(y): 0.9941, norm:6.9838, tok/sec: 108684.12, flops:42.34, batch-reuse:1
@ 387 train 7.1595 , allloss: 8.1016, dt: 1199.39ms, fracRes: 0.0084, norm(attn): 0.2324, norm(output): 0.0496, norm(x): 0.0521, norm(y): 0.9940, norm:10.4507, tok/sec: 109281.77, flops:42.58, batch-reuse:1
@ 388 train 7.0734 , allloss: 8.0260, dt: 1205.36ms, fracRes: 0.0084, norm(attn): 0.2227, norm(output): 0.0500, norm(x): 0.0525, norm(y): 0.9940, norm:8.8912, tok/sec: 108740.77, flops:42.37, batch-reuse:1
@ 389 train 7.1209 , allloss: 8.1030, dt: 1213.83ms, fracRes: 0.0067, norm(attn): 0.2178, norm(output): 0.0508, norm(x): 0.0523, norm(y): 0.9940, norm:8.1863, tok/sec: 107982.05, flops:42.07, batch-reuse:1
@ 390 train 7.1803 , allloss: 8.1639, dt: 1181.13ms, fracRes: 0.0062, norm(attn): 0.2178, norm(output): 0.0505, norm(x): 0.0519, norm(y): 0.9940, norm:7.8982, tok/sec: 110971.50, flops:43.23, batch-reuse:1
@ 391 train 7.0947 , allloss: 8.0591, dt: 1205.51ms, fracRes: 0.0063, norm(attn): 0.2227, norm(output): 0.0503, norm(x): 0.0516, norm(y): 0.9939, norm:6.8047, tok/sec: 108727.37, flops:42.36, batch-reuse:1
@ 392 train 7.1973 , allloss: 8.1434, dt: 1185.25ms, fracRes: 0.0068, norm(attn): 0.2305, norm(output): 0.0498, norm(x): 0.0516, norm(y): 0.9939, norm:9.5095, tok/sec: 110586.17, flops:43.08, batch-reuse:1
@ 393 train 7.1110 , allloss: 8.0600, dt: 1192.46ms, fracRes: 0.0075, norm(attn): 0.2236, norm(output): 0.0500, norm(x): 0.0520, norm(y): 0.9939, norm:7.1488, tok/sec: 109917.42, flops:42.82, batch-reuse:1
@ 394 train 7.1052 , allloss: 8.0645, dt: 1187.92ms, fracRes: 0.0070, norm(attn): 0.2227, norm(output): 0.0500, norm(x): 0.0517, norm(y): 0.9939, norm:11.8348, tok/sec: 110337.12, flops:42.99, batch-reuse:1
@ 395 train 7.2355 , allloss: 8.2037, dt: 1190.03ms, fracRes: 0.0066, norm(attn): 0.2256, norm(output): 0.0498, norm(x): 0.0514, norm(y): 0.9938, norm:6.1241, tok/sec: 110141.64, flops:42.91, batch-reuse:1
@ 396 train 7.0087 , allloss: 7.9645, dt: 1194.58ms, fracRes: 0.0065, norm(attn): 0.2275, norm(output): 0.0498, norm(x): 0.0512, norm(y): 0.9938, norm:10.8033, tok/sec: 109721.93, flops:42.75, batch-reuse:1
@ 397 train 7.1349 , allloss: 8.1034, dt: 1198.16ms, fracRes: 0.0060, norm(attn): 0.2285, norm(output): 0.0498, norm(x): 0.0511, norm(y): 0.9938, norm:7.8150, tok/sec: 109394.04, flops:42.62, batch-reuse:1
@ 398 train 7.1551 , allloss: 8.1210, dt: 1199.22ms, fracRes: 0.0063, norm(attn): 0.2314, norm(output): 0.0498, norm(x): 0.0511, norm(y): 0.9938, norm:12.3115, tok/sec: 109298.11, flops:42.58, batch-reuse:1
@ 399 train 7.1135 , allloss: 8.0807, dt: 1198.22ms, fracRes: 0.0066, norm(attn): 0.2295, norm(output): 0.0500, norm(x): 0.0511, norm(y): 0.9937, norm:10.9145, tok/sec: 109389.19, flops:42.62, batch-reuse:1
@ 400 train 7.1751 , allloss: 8.1344, dt: 1203.30ms, fracRes: 0.0077, norm(attn): 0.2285, norm(output): 0.0498, norm(x): 0.0518, norm(y): 0.9937, norm:13.5651, tok/sec: 108926.94, flops:42.44, batch-reuse:1
@ 401 train 7.2021 , allloss: 8.1798, dt: 1175.42ms, fracRes: 0.0072, norm(attn): 0.2217, norm(output): 0.0503, norm(x): 0.0519, norm(y): 0.9937, norm:9.9334, tok/sec: 111510.71, flops:43.44, batch-reuse:1
@ 402 train 7.1570 , allloss: 8.1281, dt: 1192.64ms, fracRes: 0.0071, norm(attn): 0.2236, norm(output): 0.0493, norm(x): 0.0515, norm(y): 0.9937, norm:15.1500, tok/sec: 109900.85, flops:42.82, batch-reuse:1
@ 403 train 7.1776 , allloss: 8.1419, dt: 1208.15ms, fracRes: 0.0065, norm(attn): 0.2207, norm(output): 0.0505, norm(x): 0.0519, norm(y): 0.9937, norm:16.6550, tok/sec: 108489.66, flops:42.27, batch-reuse:1
@ 404 train 7.0757 , allloss: 8.0449, dt: 1191.12ms, fracRes: 0.0060, norm(attn): 0.2197, norm(output): 0.0505, norm(x): 0.0519, norm(y): 0.9937, norm:8.3713, tok/sec: 110041.13, flops:42.87, batch-reuse:1
@ 405 train 7.1073 , allloss: 8.0618, dt: 1177.22ms, fracRes: 0.0066, norm(attn): 0.2305, norm(output): 0.0493, norm(x): 0.0511, norm(y): 0.9936, norm:11.3257, tok/sec: 111340.58, flops:43.38, batch-reuse:1
@ 406 train 7.1055 , allloss: 8.0561, dt: 1203.80ms, fracRes: 0.0067, norm(attn): 0.2344, norm(output): 0.0483, norm(x): 0.0508, norm(y): 0.9936, norm:12.1968, tok/sec: 108881.90, flops:42.42, batch-reuse:1
@ 407 train 7.0662 , allloss: 8.0375, dt: 1206.65ms, fracRes: 0.0058, norm(attn): 0.2334, norm(output): 0.0493, norm(x): 0.0505, norm(y): 0.9935, norm:6.3025, tok/sec: 108624.66, flops:42.32, batch-reuse:1
@ 408 train 7.1035 , allloss: 8.0694, dt: 1226.78ms, fracRes: 0.0062, norm(attn): 0.2344, norm(output): 0.0488, norm(x): 0.0506, norm(y): 0.9935, norm:10.8984, tok/sec: 106842.10, flops:41.63, batch-reuse:1
@ 409 train 7.0384 , allloss: 8.0145, dt: 1214.75ms, fracRes: 0.0063, norm(attn): 0.2344, norm(output): 0.0493, norm(x): 0.0509, norm(y): 0.9935, norm:9.8206, tok/sec: 107900.34, flops:42.04, batch-reuse:1
@ 410 train 7.0616 , allloss: 8.0392, dt: 1198.36ms, fracRes: 0.0069, norm(attn): 0.2344, norm(output): 0.0498, norm(x): 0.0512, norm(y): 0.9935, norm:10.4025, tok/sec: 109375.80, flops:42.61, batch-reuse:1
@ 411 train 7.0817 , allloss: 8.0623, dt: 1210.69ms, fracRes: 0.0069, norm(attn): 0.2373, norm(output): 0.0479, norm(x): 0.0505, norm(y): 0.9934, norm:11.1589, tok/sec: 108262.27, flops:42.18, batch-reuse:1
@ 412 train 7.0690 , allloss: 8.0550, dt: 1198.74ms, fracRes: 0.0062, norm(attn): 0.2334, norm(output): 0.0488, norm(x): 0.0506, norm(y): 0.9934, norm:7.4174, tok/sec: 109341.21, flops:42.60, batch-reuse:1
@ 413 train 6.7794 , allloss: 7.7564, dt: 1214.67ms, fracRes: 0.0057, norm(attn): 0.2314, norm(output): 0.0496, norm(x): 0.0505, norm(y): 0.9934, norm:11.2455, tok/sec: 107907.35, flops:42.04, batch-reuse:1
@ 414 train 7.0437 , allloss: 8.0080, dt: 1240.06ms, fracRes: 0.0061, norm(attn): 0.2373, norm(output): 0.0488, norm(x): 0.0504, norm(y): 0.9934, norm:10.6379, tok/sec: 105697.78, flops:41.18, batch-reuse:1
@ 415 train 6.9767 , allloss: 7.9400, dt: 1210.87ms, fracRes: 0.0060, norm(attn): 0.2363, norm(output): 0.0479, norm(x): 0.0500, norm(y): 0.9933, norm:10.5189, tok/sec: 108245.96, flops:42.17, batch-reuse:1
@ 416 train 7.1117 , allloss: 8.0850, dt: 1189.33ms, fracRes: 0.0061, norm(attn): 0.2354, norm(output): 0.0481, norm(x): 0.0500, norm(y): 0.9933, norm:11.2591, tok/sec: 110207.04, flops:42.94, batch-reuse:1
@ 417 train 6.9933 , allloss: 7.9828, dt: 1197.52ms, fracRes: 0.0055, norm(attn): 0.2354, norm(output): 0.0481, norm(x): 0.0499, norm(y): 0.9933, norm:9.3283, tok/sec: 109453.09, flops:42.64, batch-reuse:1
@ 418 train 7.0958 , allloss: 8.0479, dt: 1201.72ms, fracRes: 0.0070, norm(attn): 0.2520, norm(output): 0.0471, norm(x): 0.0497, norm(y): 0.9932, norm:14.3289, tok/sec: 109070.27, flops:42.49, batch-reuse:1
@ 419 train 7.0105 , allloss: 7.9741, dt: 1200.78ms, fracRes: 0.0063, norm(attn): 0.2471, norm(output): 0.0476, norm(x): 0.0499, norm(y): 0.9932, norm:8.9640, tok/sec: 109155.68, flops:42.53, batch-reuse:1
@ 420 train 6.9583 , allloss: 7.9393, dt: 1194.97ms, fracRes: 0.0057, norm(attn): 0.2354, norm(output): 0.0491, norm(x): 0.0503, norm(y): 0.9932, norm:6.2950, tok/sec: 109686.10, flops:42.73, batch-reuse:1
@ 421 train 7.1312 , allloss: 8.1131, dt: 1185.40ms, fracRes: 0.0058, norm(attn): 0.2451, norm(output): 0.0474, norm(x): 0.0493, norm(y): 0.9931, norm:6.9691, tok/sec: 110571.98, flops:43.08, batch-reuse:1
@ 422 train 7.0268 , allloss: 7.9897, dt: 1187.89ms, fracRes: 0.0063, norm(attn): 0.2520, norm(output): 0.0469, norm(x): 0.0490, norm(y): 0.9931, norm:6.6934, tok/sec: 110340.42, flops:42.99, batch-reuse:1
@ 423 train 7.0853 , allloss: 8.0741, dt: 1201.87ms, fracRes: 0.0056, norm(attn): 0.2480, norm(output): 0.0479, norm(x): 0.0495, norm(y): 0.9931, norm:14.8216, tok/sec: 109056.46, flops:42.49, batch-reuse:1
@ 424 train 7.0061 , allloss: 7.9725, dt: 1219.12ms, fracRes: 0.0061, norm(attn): 0.2520, norm(output): 0.0474, norm(x): 0.0492, norm(y): 0.9930, norm:9.5880, tok/sec: 107513.72, flops:41.89, batch-reuse:1
@ 425 train 7.0794 , allloss: 8.0300, dt: 1189.32ms, fracRes: 0.0061, norm(attn): 0.2656, norm(output): 0.0466, norm(x): 0.0478, norm(y): 0.9929, norm:7.8034, tok/sec: 110207.51, flops:42.94, batch-reuse:1
@ 426 train 6.9615 , allloss: 7.9281, dt: 1190.64ms, fracRes: 0.0054, norm(attn): 0.2539, norm(output): 0.0466, norm(x): 0.0479, norm(y): 0.9929, norm:20.5838, tok/sec: 110085.05, flops:42.89, batch-reuse:1
@ 427 train 7.0129 , allloss: 7.9657, dt: 1176.48ms, fracRes: 0.0058, norm(attn): 0.2539, norm(output): 0.0466, norm(x): 0.0481, norm(y): 0.9929, norm:8.0154, tok/sec: 111410.51, flops:43.41, batch-reuse:1
@ 428 train 6.9524 , allloss: 7.8919, dt: 1195.41ms, fracRes: 0.0058, norm(attn): 0.2617, norm(output): 0.0466, norm(x): 0.0481, norm(y): 0.9929, norm:8.1915, tok/sec: 109646.17, flops:42.72, batch-reuse:1
@ 429 train 6.9325 , allloss: 7.8843, dt: 1185.64ms, fracRes: 0.0054, norm(attn): 0.2656, norm(output): 0.0464, norm(x): 0.0476, norm(y): 0.9928, norm:20.3376, tok/sec: 110549.19, flops:43.07, batch-reuse:1
@ 430 train 6.9710 , allloss: 7.9358, dt: 1194.14ms, fracRes: 0.0053, norm(attn): 0.2578, norm(output): 0.0466, norm(x): 0.0480, norm(y): 0.9928, norm:8.3495, tok/sec: 109762.50, flops:42.76, batch-reuse:1
@ 431 train 7.0053 , allloss: 7.9577, dt: 1192.29ms, fracRes: 0.0053, norm(attn): 0.2578, norm(output): 0.0469, norm(x): 0.0480, norm(y): 0.9928, norm:20.3605, tok/sec: 109932.76, flops:42.83, batch-reuse:1
@ 432 train 7.0406 , allloss: 8.0177, dt: 1198.50ms, fracRes: 0.0051, norm(attn): 0.2520, norm(output): 0.0471, norm(x): 0.0485, norm(y): 0.9928, norm:13.1333, tok/sec: 109363.01, flops:42.61, batch-reuse:1
@ 433 train 7.0656 , allloss: 8.0702, dt: 1202.62ms, fracRes: 0.0049, norm(attn): 0.2471, norm(output): 0.0479, norm(x): 0.0489, norm(y): 0.9928, norm:17.6468, tok/sec: 108988.34, flops:42.46, batch-reuse:1
@ 434 train 7.0818 , allloss: 8.0606, dt: 1198.30ms, fracRes: 0.0055, norm(attn): 0.2500, norm(output): 0.0476, norm(x): 0.0490, norm(y): 0.9928, norm:13.7510, tok/sec: 109381.81, flops:42.62, batch-reuse:1
@ 435 train 6.9976 , allloss: 7.9363, dt: 1187.83ms, fracRes: 0.0066, norm(attn): 0.2598, norm(output): 0.0469, norm(x): 0.0490, norm(y): 0.9928, norm:14.2410, tok/sec: 110346.18, flops:42.99, batch-reuse:1
@ 436 train 7.1181 , allloss: 8.0675, dt: 1186.14ms, fracRes: 0.0061, norm(attn): 0.2539, norm(output): 0.0474, norm(x): 0.0492, norm(y): 0.9928, norm:10.7906, tok/sec: 110502.88, flops:43.05, batch-reuse:1
@ 437 train 7.0083 , allloss: 7.9808, dt: 1177.52ms, fracRes: 0.0053, norm(attn): 0.2500, norm(output): 0.0488, norm(x): 0.0496, norm(y): 0.9928, norm:8.0240, tok/sec: 111311.82, flops:43.37, batch-reuse:1
@ 438 train 7.1173 , allloss: 8.0819, dt: 1197.17ms, fracRes: 0.0054, norm(attn): 0.2500, norm(output): 0.0481, norm(x): 0.0494, norm(y): 0.9927, norm:8.4365, tok/sec: 109484.78, flops:42.66, batch-reuse:1
@ 439 train 6.9062 , allloss: 7.8374, dt: 1182.22ms, fracRes: 0.0064, norm(attn): 0.2656, norm(output): 0.0469, norm(x): 0.0485, norm(y): 0.9926, norm:9.4641, tok/sec: 110868.98, flops:43.19, batch-reuse:1
@ 440 train 6.8645 , allloss: 7.8035, dt: 1206.71ms, fracRes: 0.0059, norm(attn): 0.2637, norm(output): 0.0471, norm(x): 0.0487, norm(y): 0.9926, norm:6.6962, tok/sec: 108619.40, flops:42.32, batch-reuse:1
@ 441 train 6.9290 , allloss: 7.8900, dt: 1220.46ms, fracRes: 0.0050, norm(attn): 0.2539, norm(output): 0.0479, norm(x): 0.0489, norm(y): 0.9926, norm:10.4637, tok/sec: 107395.87, flops:41.84, batch-reuse:1
@ 442 train 6.9959 , allloss: 7.9551, dt: 1229.47ms, fracRes: 0.0047, norm(attn): 0.2559, norm(output): 0.0474, norm(x): 0.0485, norm(y): 0.9926, norm:5.9216, tok/sec: 106608.60, flops:41.53, batch-reuse:1
@ 443 train 7.0329 , allloss: 7.9832, dt: 1220.21ms, fracRes: 0.0049, norm(attn): 0.2656, norm(output): 0.0471, norm(x): 0.0481, norm(y): 0.9926, norm:8.8065, tok/sec: 107417.21, flops:41.85, batch-reuse:1
@ 444 train 7.0050 , allloss: 7.9444, dt: 1197.77ms, fracRes: 0.0051, norm(attn): 0.2773, norm(output): 0.0464, norm(x): 0.0474, norm(y): 0.9925, norm:10.2563, tok/sec: 109429.77, flops:42.63, batch-reuse:1
@ 445 train 6.8894 , allloss: 7.8530, dt: 1182.27ms, fracRes: 0.0048, norm(attn): 0.2539, norm(output): 0.0476, norm(x): 0.0483, norm(y): 0.9925, norm:8.6980, tok/sec: 110864.91, flops:43.19, batch-reuse:1
@ 446 train 6.9204 , allloss: 7.8955, dt: 1195.76ms, fracRes: 0.0047, norm(attn): 0.2500, norm(output): 0.0479, norm(x): 0.0488, norm(y): 0.9925, norm:4.6695, tok/sec: 109613.64, flops:42.71, batch-reuse:1
@ 447 train 6.9278 , allloss: 7.8752, dt: 1192.66ms, fracRes: 0.0051, norm(attn): 0.2695, norm(output): 0.0466, norm(x): 0.0474, norm(y): 0.9924, norm:7.3972, tok/sec: 109899.09, flops:42.82, batch-reuse:1
@ 448 train 6.9096 , allloss: 7.8305, dt: 1193.07ms, fracRes: 0.0058, norm(attn): 0.2832, norm(output): 0.0454, norm(x): 0.0468, norm(y): 0.9923, norm:8.3689, tok/sec: 109861.23, flops:42.80, batch-reuse:1
@ 449 train 6.8505 , allloss: 7.8080, dt: 1194.86ms, fracRes: 0.0050, norm(attn): 0.2617, norm(output): 0.0471, norm(x): 0.0482, norm(y): 0.9924, norm:8.0155, tok/sec: 109696.40, flops:42.74, batch-reuse:1
@ 450 train 6.9337 , allloss: 7.8889, dt: 1183.28ms, fracRes: 0.0047, norm(attn): 0.2656, norm(output): 0.0471, norm(x): 0.0479, norm(y): 0.9923, norm:8.5745, tok/sec: 110770.38, flops:43.16, batch-reuse:1
@ 451 train 6.9119 , allloss: 7.8639, dt: 1194.31ms, fracRes: 0.0045, norm(attn): 0.2656, norm(output): 0.0471, norm(x): 0.0476, norm(y): 0.9923, norm:7.1831, tok/sec: 109746.99, flops:42.76, batch-reuse:1
@ 452 train 6.9532 , allloss: 7.8805, dt: 1220.48ms, fracRes: 0.0047, norm(attn): 0.2773, norm(output): 0.0464, norm(x): 0.0467, norm(y): 0.9922, norm:9.0733, tok/sec: 107393.56, flops:41.84, batch-reuse:1
@ 453 train 6.9463 , allloss: 7.8711, dt: 1197.76ms, fracRes: 0.0048, norm(attn): 0.2715, norm(output): 0.0466, norm(x): 0.0468, norm(y): 0.9922, norm:8.6080, tok/sec: 109430.97, flops:42.63, batch-reuse:1
@ 454 train 6.9267 , allloss: 7.8461, dt: 1247.85ms, fracRes: 0.0049, norm(attn): 0.2773, norm(output): 0.0466, norm(x): 0.0467, norm(y): 0.9922, norm:7.5051, tok/sec: 105038.53, flops:40.92, batch-reuse:1
@ 455 train 6.9913 , allloss: 7.9259, dt: 1186.47ms, fracRes: 0.0049, norm(attn): 0.2715, norm(output): 0.0466, norm(x): 0.0469, norm(y): 0.9921, norm:5.9353, tok/sec: 110472.33, flops:43.04, batch-reuse:1
@ 456 train 6.9204 , allloss: 7.8475, dt: 1189.66ms, fracRes: 0.0051, norm(attn): 0.2773, norm(output): 0.0459, norm(x): 0.0465, norm(y): 0.9921, norm:10.4335, tok/sec: 110175.61, flops:42.92, batch-reuse:1
@ 457 train 7.0135 , allloss: 7.9345, dt: 1181.66ms, fracRes: 0.0052, norm(attn): 0.2793, norm(output): 0.0454, norm(x): 0.0464, norm(y): 0.9920, norm:6.0552, tok/sec: 110921.48, flops:43.22, batch-reuse:1
@ 458 train 7.0061 , allloss: 7.9367, dt: 1184.47ms, fracRes: 0.0047, norm(attn): 0.2754, norm(output): 0.0469, norm(x): 0.0468, norm(y): 0.9921, norm:8.0920, tok/sec: 110658.76, flops:43.11, batch-reuse:1
@ 459 train 6.8896 , allloss: 7.8208, dt: 1191.02ms, fracRes: 0.0045, norm(attn): 0.2793, norm(output): 0.0461, norm(x): 0.0463, norm(y): 0.9920, norm:8.5603, tok/sec: 110050.49, flops:42.88, batch-reuse:1
@ 460 train 6.8680 , allloss: 7.7621, dt: 1196.42ms, fracRes: 0.0048, norm(attn): 0.2949, norm(output): 0.0439, norm(x): 0.0452, norm(y): 0.9919, norm:11.6720, tok/sec: 109553.18, flops:42.68, batch-reuse:1
@ 461 train 6.9034 , allloss: 7.8042, dt: 1189.20ms, fracRes: 0.0049, norm(attn): 0.2832, norm(output): 0.0454, norm(x): 0.0459, norm(y): 0.9919, norm:11.7449, tok/sec: 110218.46, flops:42.94, batch-reuse:1
@ 462 train 6.9649 , allloss: 7.8669, dt: 1209.16ms, fracRes: 0.0049, norm(attn): 0.2812, norm(output): 0.0457, norm(x): 0.0460, norm(y): 0.9918, norm:12.3309, tok/sec: 108398.87, flops:42.23, batch-reuse:1
@ 463 train 6.9402 , allloss: 7.8580, dt: 1244.73ms, fracRes: 0.0048, norm(attn): 0.2734, norm(output): 0.0466, norm(x): 0.0468, norm(y): 0.9919, norm:7.9731, tok/sec: 105301.65, flops:41.03, batch-reuse:1
@ 464 train 6.8502 , allloss: 7.7428, dt: 1252.44ms, fracRes: 0.0049, norm(attn): 0.2832, norm(output): 0.0449, norm(x): 0.0458, norm(y): 0.9918, norm:10.3821, tok/sec: 104653.44, flops:40.77, batch-reuse:1
@ 465 train 6.8316 , allloss: 7.7434, dt: 1240.98ms, fracRes: 0.0050, norm(attn): 0.2773, norm(output): 0.0461, norm(x): 0.0466, norm(y): 0.9919, norm:10.6047, tok/sec: 105619.80, flops:41.15, batch-reuse:1
@ 466 train 6.9130 , allloss: 7.8327, dt: 1191.87ms, fracRes: 0.0049, norm(attn): 0.2734, norm(output): 0.0461, norm(x): 0.0466, norm(y): 0.9919, norm:8.4000, tok/sec: 109971.60, flops:42.84, batch-reuse:1
@ 467 train 6.8219 , allloss: 7.7324, dt: 1186.68ms, fracRes: 0.0047, norm(attn): 0.2812, norm(output): 0.0461, norm(x): 0.0464, norm(y): 0.9918, norm:11.8462, tok/sec: 110452.66, flops:43.03, batch-reuse:1
@ 468 train 6.7789 , allloss: 7.6894, dt: 1195.79ms, fracRes: 0.0048, norm(attn): 0.2695, norm(output): 0.0466, norm(x): 0.0469, norm(y): 0.9918, norm:10.6829, tok/sec: 109610.95, flops:42.70, batch-reuse:1
@ 469 train 6.7741 , allloss: 7.6784, dt: 1195.78ms, fracRes: 0.0048, norm(attn): 0.2812, norm(output): 0.0457, norm(x): 0.0460, norm(y): 0.9917, norm:10.2705, tok/sec: 109612.31, flops:42.70, batch-reuse:1
@ 470 train 6.8590 , allloss: 7.7795, dt: 1170.28ms, fracRes: 0.0048, norm(attn): 0.2812, norm(output): 0.0459, norm(x): 0.0461, norm(y): 0.9917, norm:8.4333, tok/sec: 112000.94, flops:43.64, batch-reuse:1
@ 471 train 6.7217 , allloss: 7.6449, dt: 1190.17ms, fracRes: 0.0049, norm(attn): 0.2793, norm(output): 0.0454, norm(x): 0.0462, norm(y): 0.9916, norm:10.4930, tok/sec: 110128.38, flops:42.91, batch-reuse:1
@ 472 train 6.8520 , allloss: 7.7719, dt: 1189.74ms, fracRes: 0.0047, norm(attn): 0.2695, norm(output): 0.0466, norm(x): 0.0465, norm(y): 0.9917, norm:5.2526, tok/sec: 110168.30, flops:42.92, batch-reuse:1
@ 473 train 6.8400 , allloss: 7.7323, dt: 1205.31ms, fracRes: 0.0046, norm(attn): 0.2891, norm(output): 0.0449, norm(x): 0.0454, norm(y): 0.9915, norm:9.9039, tok/sec: 108745.54, flops:42.37, batch-reuse:1
@ 474 train 6.7496 , allloss: 7.6318, dt: 1196.10ms, fracRes: 0.0045, norm(attn): 0.2891, norm(output): 0.0449, norm(x): 0.0452, norm(y): 0.9915, norm:7.7029, tok/sec: 109583.18, flops:42.69, batch-reuse:1
@ 475 train 6.7727 , allloss: 7.6885, dt: 1201.63ms, fracRes: 0.0044, norm(attn): 0.2715, norm(output): 0.0466, norm(x): 0.0466, norm(y): 0.9916, norm:11.2977, tok/sec: 109078.43, flops:42.50, batch-reuse:1
@ 476 train 6.7821 , allloss: 7.7105, dt: 1171.89ms, fracRes: 0.0046, norm(attn): 0.2695, norm(output): 0.0461, norm(x): 0.0464, norm(y): 0.9915, norm:9.8244, tok/sec: 111846.90, flops:43.58, batch-reuse:1
@ 477 train 6.8600 , allloss: 7.8084, dt: 1178.69ms, fracRes: 0.0046, norm(attn): 0.2676, norm(output): 0.0464, norm(x): 0.0470, norm(y): 0.9915, norm:9.8693, tok/sec: 111201.56, flops:43.32, batch-reuse:1
@ 478 train 6.8107 , allloss: 7.7049, dt: 1210.68ms, fracRes: 0.0046, norm(attn): 0.2832, norm(output): 0.0449, norm(x): 0.0456, norm(y): 0.9914, norm:10.8256, tok/sec: 108263.21, flops:42.18, batch-reuse:1
@ 479 train 6.9670 , allloss: 7.8645, dt: 1219.13ms, fracRes: 0.0046, norm(attn): 0.2793, norm(output): 0.0459, norm(x): 0.0462, norm(y): 0.9915, norm:13.4925, tok/sec: 107512.37, flops:41.89, batch-reuse:1
@ 480 train 6.7334 , allloss: 7.6084, dt: 1179.46ms, fracRes: 0.0046, norm(attn): 0.2852, norm(output): 0.0444, norm(x): 0.0452, norm(y): 0.9914, norm:7.1061, tok/sec: 111128.61, flops:43.30, batch-reuse:1
@ 481 train 6.8309 , allloss: 7.7056, dt: 1181.56ms, fracRes: 0.0045, norm(attn): 0.2910, norm(output): 0.0444, norm(x): 0.0451, norm(y): 0.9913, norm:9.8308, tok/sec: 110931.49, flops:43.22, batch-reuse:1
@ 482 train 6.8021 , allloss: 7.7145, dt: 1209.48ms, fracRes: 0.0044, norm(attn): 0.2715, norm(output): 0.0464, norm(x): 0.0462, norm(y): 0.9914, norm:11.5585, tok/sec: 108370.45, flops:42.22, batch-reuse:1
@ 483 train 6.8687 , allloss: 7.8084, dt: 1232.22ms, fracRes: 0.0044, norm(attn): 0.2637, norm(output): 0.0464, norm(x): 0.0467, norm(y): 0.9913, norm:6.7515, tok/sec: 106370.56, flops:41.44, batch-reuse:1
@ 484 train 6.7593 , allloss: 7.6971, dt: 1208.79ms, fracRes: 0.0044, norm(attn): 0.2715, norm(output): 0.0461, norm(x): 0.0464, norm(y): 0.9913, norm:10.5897, tok/sec: 108432.37, flops:42.25, batch-reuse:1
@ 485 train 6.6839 , allloss: 7.5861, dt: 1178.04ms, fracRes: 0.0044, norm(attn): 0.2852, norm(output): 0.0439, norm(x): 0.0451, norm(y): 0.9912, norm:7.1767, tok/sec: 111262.41, flops:43.35, batch-reuse:1
@ 486 train 6.8843 , allloss: 7.7733, dt: 1203.67ms, fracRes: 0.0043, norm(attn): 0.2930, norm(output): 0.0432, norm(x): 0.0442, norm(y): 0.9911, norm:11.7812, tok/sec: 108893.61, flops:42.42, batch-reuse:1
@ 487 train 6.8552 , allloss: 7.7643, dt: 1207.34ms, fracRes: 0.0044, norm(attn): 0.2754, norm(output): 0.0452, norm(x): 0.0457, norm(y): 0.9912, norm:9.5899, tok/sec: 108562.78, flops:42.30, batch-reuse:1
@ 488 train 6.7095 , allloss: 7.6125, dt: 1212.29ms, fracRes: 0.0043, norm(attn): 0.2812, norm(output): 0.0452, norm(x): 0.0454, norm(y): 0.9911, norm:10.2863, tok/sec: 108119.06, flops:42.12, batch-reuse:1
@ 489 train 6.7633 , allloss: 7.6630, dt: 1213.52ms, fracRes: 0.0042, norm(attn): 0.2949, norm(output): 0.0442, norm(x): 0.0447, norm(y): 0.9910, norm:9.8167, tok/sec: 108009.86, flops:42.08, batch-reuse:1
@ 490 train 6.8247 , allloss: 7.7585, dt: 1239.68ms, fracRes: 0.0044, norm(attn): 0.2754, norm(output): 0.0459, norm(x): 0.0463, norm(y): 0.9911, norm:19.7474, tok/sec: 105730.47, flops:41.19, batch-reuse:1
@ 491 train 6.8844 , allloss: 7.8031, dt: 1222.65ms, fracRes: 0.0044, norm(attn): 0.2793, norm(output): 0.0452, norm(x): 0.0458, norm(y): 0.9911, norm:9.8888, tok/sec: 107203.16, flops:41.77, batch-reuse:1
@ 492 train 6.8792 , allloss: 7.7691, dt: 1205.10ms, fracRes: 0.0042, norm(attn): 0.2969, norm(output): 0.0437, norm(x): 0.0443, norm(y): 0.9909, norm:11.5133, tok/sec: 108764.13, flops:42.37, batch-reuse:1
@ 493 train 6.8199 , allloss: 7.6983, dt: 1182.11ms, fracRes: 0.0043, norm(attn): 0.2949, norm(output): 0.0435, norm(x): 0.0444, norm(y): 0.9909, norm:10.5013, tok/sec: 110879.56, flops:43.20, batch-reuse:1
@ 494 train 6.7671 , allloss: 7.6525, dt: 1212.36ms, fracRes: 0.0043, norm(attn): 0.2832, norm(output): 0.0447, norm(x): 0.0449, norm(y): 0.9909, norm:10.1581, tok/sec: 108113.07, flops:42.12, batch-reuse:1
@ 495 train 6.6838 , allloss: 7.6106, dt: 1231.45ms, fracRes: 0.0042, norm(attn): 0.2695, norm(output): 0.0464, norm(x): 0.0461, norm(y): 0.9910, norm:10.2050, tok/sec: 106436.71, flops:41.47, batch-reuse:1
@ 496 train 6.7941 , allloss: 7.7442, dt: 1213.15ms, fracRes: 0.0042, norm(attn): 0.2656, norm(output): 0.0461, norm(x): 0.0462, norm(y): 0.9910, norm:7.8231, tok/sec: 108042.51, flops:42.09, batch-reuse:1
@ 497 train 6.6682 , allloss: 7.6328, dt: 1206.10ms, fracRes: 0.0044, norm(attn): 0.2695, norm(output): 0.0457, norm(x): 0.0459, norm(y): 0.9909, norm:9.2012, tok/sec: 108674.30, flops:42.34, batch-reuse:1
@ 498 train 6.8357 , allloss: 7.7748, dt: 1205.65ms, fracRes: 0.0044, norm(attn): 0.2793, norm(output): 0.0454, norm(x): 0.0454, norm(y): 0.9909, norm:8.4545, tok/sec: 108714.86, flops:42.36, batch-reuse:1
@ 499 train 6.8661 , allloss: 7.7995, dt: 1203.35ms, fracRes: 0.0044, norm(attn): 0.2637, norm(output): 0.0464, norm(x): 0.0466, norm(y): 0.9910, norm:9.9710, tok/sec: 108922.78, flops:42.44, batch-reuse:1
@ 500 train 6.7576 , allloss: 7.6926, dt: 1176.29ms, fracRes: 0.0043, norm(attn): 0.2617, norm(output): 0.0469, norm(x): 0.0471, norm(y): 0.9910, norm:4.9307, tok/sec: 111428.68, flops:43.41, batch-reuse:1
@ 501 train 6.7861 , allloss: 7.6996, dt: 1177.23ms, fracRes: 0.0042, norm(attn): 0.2793, norm(output): 0.0459, norm(x): 0.0458, norm(y): 0.9908, norm:13.3128, tok/sec: 111339.79, flops:43.38, batch-reuse:1
@ 502 train 6.8108 , allloss: 7.7126, dt: 1198.01ms, fracRes: 0.0042, norm(attn): 0.2832, norm(output): 0.0449, norm(x): 0.0453, norm(y): 0.9908, norm:7.9961, tok/sec: 109407.82, flops:42.63, batch-reuse:1
@ 503 train 6.8070 , allloss: 7.7055, dt: 1229.13ms, fracRes: 0.0042, norm(attn): 0.2832, norm(output): 0.0447, norm(x): 0.0452, norm(y): 0.9908, norm:14.5279, tok/sec: 106638.11, flops:41.55, batch-reuse:1
@ 504 train 6.8542 , allloss: 7.7559, dt: 1231.16ms, fracRes: 0.0043, norm(attn): 0.2812, norm(output): 0.0444, norm(x): 0.0452, norm(y): 0.9907, norm:11.5122, tok/sec: 106462.29, flops:41.48, batch-reuse:1
@ 505 train 6.7512 , allloss: 7.6592, dt: 1209.47ms, fracRes: 0.0043, norm(attn): 0.2832, norm(output): 0.0442, norm(x): 0.0449, norm(y): 0.9907, norm:12.3738, tok/sec: 108371.20, flops:42.22, batch-reuse:1
@ 506 train 6.7652 , allloss: 7.7218, dt: 1219.94ms, fracRes: 0.0044, norm(attn): 0.2715, norm(output): 0.0461, norm(x): 0.0463, norm(y): 0.9907, norm:12.7654, tok/sec: 107441.27, flops:41.86, batch-reuse:1
@ 507 train 6.8072 , allloss: 7.7510, dt: 1201.49ms, fracRes: 0.0043, norm(attn): 0.2773, norm(output): 0.0461, norm(x): 0.0458, norm(y): 0.9906, norm:10.5622, tok/sec: 109090.81, flops:42.50, batch-reuse:1
@ 508 train 6.7056 , allloss: 7.6499, dt: 1233.11ms, fracRes: 0.0043, norm(attn): 0.2715, norm(output): 0.0464, norm(x): 0.0461, norm(y): 0.9907, norm:6.4676, tok/sec: 106293.54, flops:41.41, batch-reuse:1
@ 509 train 6.7517 , allloss: 7.6758, dt: 1232.04ms, fracRes: 0.0041, norm(attn): 0.2812, norm(output): 0.0444, norm(x): 0.0449, norm(y): 0.9906, norm:8.5752, tok/sec: 106385.92, flops:41.45, batch-reuse:1
@ 510 train 6.6881 , allloss: 7.6174, dt: 1180.66ms, fracRes: 0.0040, norm(attn): 0.2793, norm(output): 0.0449, norm(x): 0.0450, norm(y): 0.9906, norm:5.9055, tok/sec: 111015.80, flops:43.25, batch-reuse:1
@ 511 train 6.7797 , allloss: 7.7308, dt: 1184.63ms, fracRes: 0.0042, norm(attn): 0.2676, norm(output): 0.0459, norm(x): 0.0461, norm(y): 0.9906, norm:7.9326, tok/sec: 110644.17, flops:43.11, batch-reuse:1
@ 512 train 6.7137 , allloss: 7.6464, dt: 1167.90ms, fracRes: 0.0040, norm(attn): 0.2812, norm(output): 0.0444, norm(x): 0.0450, norm(y): 0.9905, norm:8.8271, tok/sec: 112228.48, flops:43.72, batch-reuse:1
@ 513 train 6.7223 , allloss: 7.7051, dt: 1193.57ms, fracRes: 0.0041, norm(attn): 0.2637, norm(output): 0.0469, norm(x): 0.0469, norm(y): 0.9906, norm:10.6775, tok/sec: 109814.75, flops:42.78, batch-reuse:1
@ 514 train 6.6772 , allloss: 7.5971, dt: 1208.33ms, fracRes: 0.0040, norm(attn): 0.2832, norm(output): 0.0442, norm(x): 0.0449, norm(y): 0.9904, norm:7.4602, tok/sec: 108474.05, flops:42.26, batch-reuse:1
@ 515 train 6.6761 , allloss: 7.5985, dt: 1234.95ms, fracRes: 0.0040, norm(attn): 0.2832, norm(output): 0.0439, norm(x): 0.0444, norm(y): 0.9904, norm:8.9984, tok/sec: 106135.40, flops:41.35, batch-reuse:1
@ 516 train 6.6572 , allloss: 7.5890, dt: 1215.11ms, fracRes: 0.0041, norm(attn): 0.2832, norm(output): 0.0437, norm(x): 0.0443, norm(y): 0.9904, norm:6.2923, tok/sec: 107868.82, flops:42.03, batch-reuse:1
@ 517 train 6.6344 , allloss: 7.5859, dt: 1200.49ms, fracRes: 0.0041, norm(attn): 0.2793, norm(output): 0.0449, norm(x): 0.0451, norm(y): 0.9904, norm:6.9010, tok/sec: 109182.19, flops:42.54, batch-reuse:1
@ 518 train 6.7274 , allloss: 7.7087, dt: 1203.43ms, fracRes: 0.0042, norm(attn): 0.2656, norm(output): 0.0466, norm(x): 0.0466, norm(y): 0.9905, norm:5.4606, tok/sec: 108915.10, flops:42.43, batch-reuse:1
@ 519 train 6.6748 , allloss: 7.6512, dt: 1193.72ms, fracRes: 0.0044, norm(attn): 0.2617, norm(output): 0.0466, norm(x): 0.0466, norm(y): 0.9905, norm:10.4752, tok/sec: 109800.93, flops:42.78, batch-reuse:1
@ 520 train 6.7414 , allloss: 7.7084, dt: 1184.23ms, fracRes: 0.0044, norm(attn): 0.2715, norm(output): 0.0452, norm(x): 0.0456, norm(y): 0.9904, norm:9.0900, tok/sec: 110681.42, flops:43.12, batch-reuse:1
@ 521 train 6.8027 , allloss: 7.7622, dt: 1205.55ms, fracRes: 0.0042, norm(attn): 0.2695, norm(output): 0.0459, norm(x): 0.0459, norm(y): 0.9904, norm:8.5758, tok/sec: 108723.39, flops:42.36, batch-reuse:1
@ 522 train 6.6484 , allloss: 7.5812, dt: 1169.60ms, fracRes: 0.0040, norm(attn): 0.2773, norm(output): 0.0449, norm(x): 0.0447, norm(y): 0.9903, norm:8.3256, tok/sec: 112065.32, flops:43.66, batch-reuse:1
@ 523 train 6.7446 , allloss: 7.6639, dt: 1189.02ms, fracRes: 0.0041, norm(attn): 0.2793, norm(output): 0.0439, norm(x): 0.0443, norm(y): 0.9902, norm:5.7952, tok/sec: 110235.57, flops:42.95, batch-reuse:1
@ 524 train 6.6847 , allloss: 7.6356, dt: 1212.87ms, fracRes: 0.0042, norm(attn): 0.2637, norm(output): 0.0461, norm(x): 0.0459, norm(y): 0.9903, norm:11.9877, tok/sec: 108067.59, flops:42.10, batch-reuse:1
@ 525 train 6.6903 , allloss: 7.6223, dt: 1207.42ms, fracRes: 0.0042, norm(attn): 0.2695, norm(output): 0.0444, norm(x): 0.0449, norm(y): 0.9902, norm:5.9106, tok/sec: 108555.81, flops:42.29, batch-reuse:1
@ 526 train 6.6974 , allloss: 7.6529, dt: 1233.56ms, fracRes: 0.0042, norm(attn): 0.2695, norm(output): 0.0449, norm(x): 0.0454, norm(y): 0.9902, norm:6.8577, tok/sec: 106255.26, flops:41.40, batch-reuse:1
@ 527 train 6.7186 , allloss: 7.7063, dt: 1198.72ms, fracRes: 0.0043, norm(attn): 0.2637, norm(output): 0.0459, norm(x): 0.0459, norm(y): 0.9901, norm:8.3128, tok/sec: 109343.37, flops:42.60, batch-reuse:1
@ 528 train 6.6832 , allloss: 7.6232, dt: 1190.91ms, fracRes: 0.0045, norm(attn): 0.2773, norm(output): 0.0435, norm(x): 0.0441, norm(y): 0.9900, norm:7.9477, tok/sec: 110059.92, flops:42.88, batch-reuse:1
@ 529 train 6.6232 , allloss: 7.5554, dt: 1230.79ms, fracRes: 0.0044, norm(attn): 0.2793, norm(output): 0.0432, norm(x): 0.0438, norm(y): 0.9900, norm:9.6194, tok/sec: 106493.92, flops:41.49, batch-reuse:1
@ 530 train 6.7351 , allloss: 7.7046, dt: 1216.83ms, fracRes: 0.0043, norm(attn): 0.2578, norm(output): 0.0466, norm(x): 0.0460, norm(y): 0.9901, norm:7.4381, tok/sec: 107715.70, flops:41.97, batch-reuse:1
@ 531 train 6.7616 , allloss: 7.7295, dt: 1207.45ms, fracRes: 0.0042, norm(attn): 0.2578, norm(output): 0.0459, norm(x): 0.0460, norm(y): 0.9901, norm:6.8737, tok/sec: 108552.51, flops:42.29, batch-reuse:1
@ 532 train 6.5818 , allloss: 7.5340, dt: 1233.97ms, fracRes: 0.0041, norm(attn): 0.2656, norm(output): 0.0442, norm(x): 0.0447, norm(y): 0.9900, norm:8.5760, tok/sec: 106219.65, flops:41.38, batch-reuse:1
@ 533 train 6.6506 , allloss: 7.5988, dt: 1211.69ms, fracRes: 0.0042, norm(attn): 0.2617, norm(output): 0.0439, norm(x): 0.0449, norm(y): 0.9900, norm:8.9798, tok/sec: 108172.65, flops:42.14, batch-reuse:1
@ 534 train 6.5618 , allloss: 7.5164, dt: 1196.46ms, fracRes: 0.0042, norm(attn): 0.2637, norm(output): 0.0444, norm(x): 0.0449, norm(y): 0.9899, norm:5.9121, tok/sec: 109550.21, flops:42.68, batch-reuse:1
@ 535 train 6.6805 , allloss: 7.6838, dt: 1185.41ms, fracRes: 0.0040, norm(attn): 0.2656, norm(output): 0.0466, norm(x): 0.0458, norm(y): 0.9898, norm:8.9274, tok/sec: 110571.18, flops:43.08, batch-reuse:1
@ 536 train 6.6771 , allloss: 7.6936, dt: 1207.94ms, fracRes: 0.0042, norm(attn): 0.2520, norm(output): 0.0469, norm(x): 0.0464, norm(y): 0.9899, norm:15.0395, tok/sec: 108508.82, flops:42.28, batch-reuse:1
@ 537 train 6.6305 , allloss: 7.6297, dt: 1214.45ms, fracRes: 0.0043, norm(attn): 0.2559, norm(output): 0.0457, norm(x): 0.0455, norm(y): 0.9898, norm:7.3862, tok/sec: 107926.84, flops:42.05, batch-reuse:1
@ 538 train 6.5936 , allloss: 7.5846, dt: 1176.61ms, fracRes: 0.0043, norm(attn): 0.2715, norm(output): 0.0435, norm(x): 0.0443, norm(y): 0.9898, norm:12.9992, tok/sec: 111398.14, flops:43.40, batch-reuse:1
@ 539 train 6.6537 , allloss: 7.6363, dt: 1182.82ms, fracRes: 0.0045, norm(attn): 0.2598, norm(output): 0.0447, norm(x): 0.0451, norm(y): 0.9899, norm:9.6832, tok/sec: 110813.22, flops:43.17, batch-reuse:1
@ 540 train 6.7166 , allloss: 7.7117, dt: 1174.91ms, fracRes: 0.0047, norm(attn): 0.2422, norm(output): 0.0466, norm(x): 0.0467, norm(y): 0.9900, norm:13.9339, tok/sec: 111558.75, flops:43.46, batch-reuse:1
@ 541 train 6.6259 , allloss: 7.6391, dt: 1197.31ms, fracRes: 0.0046, norm(attn): 0.2471, norm(output): 0.0471, norm(x): 0.0471, norm(y): 0.9900, norm:8.9344, tok/sec: 109472.31, flops:42.65, batch-reuse:1
@ 542 train 6.7239 , allloss: 7.7461, dt: 1213.60ms, fracRes: 0.0046, norm(attn): 0.2500, norm(output): 0.0479, norm(x): 0.0476, norm(y): 0.9899, norm:12.4870, tok/sec: 108003.03, flops:42.08, batch-reuse:1
@ 543 train 6.7803 , allloss: 7.8129, dt: 1218.17ms, fracRes: 0.0045, norm(attn): 0.2451, norm(output): 0.0483, norm(x): 0.0483, norm(y): 0.9899, norm:7.8255, tok/sec: 107597.53, flops:41.92, batch-reuse:1
@ 544 train 6.7048 , allloss: 7.7209, dt: 1189.62ms, fracRes: 0.0045, norm(attn): 0.2422, norm(output): 0.0471, norm(x): 0.0475, norm(y): 0.9899, norm:17.4805, tok/sec: 110179.43, flops:42.93, batch-reuse:1
@ 545 train 6.6880 , allloss: 7.6887, dt: 1204.80ms, fracRes: 0.0046, norm(attn): 0.2451, norm(output): 0.0464, norm(x): 0.0468, norm(y): 0.9899, norm:12.5292, tok/sec: 108791.73, flops:42.39, batch-reuse:1
@ 546 train 6.6255 , allloss: 7.5975, dt: 1212.85ms, fracRes: 0.0048, norm(attn): 0.2617, norm(output): 0.0444, norm(x): 0.0450, norm(y): 0.9898, norm:10.2047, tok/sec: 108069.07, flops:42.10, batch-reuse:1
@ 547 train 6.7871 , allloss: 7.7558, dt: 1181.56ms, fracRes: 0.0049, norm(attn): 0.2598, norm(output): 0.0457, norm(x): 0.0457, norm(y): 0.9898, norm:10.2657, tok/sec: 110931.17, flops:43.22, batch-reuse:1
@ 548 train 6.7540 , allloss: 7.7202, dt: 1209.84ms, fracRes: 0.0050, norm(attn): 0.2480, norm(output): 0.0471, norm(x): 0.0469, norm(y): 0.9898, norm:7.7879, tok/sec: 108338.16, flops:42.21, batch-reuse:1
@ 549 train 6.7117 , allloss: 7.6668, dt: 1243.36ms, fracRes: 0.0047, norm(attn): 0.2471, norm(output): 0.0471, norm(x): 0.0467, norm(y): 0.9898, norm:9.9965, tok/sec: 105417.55, flops:41.07, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4355, 0.5625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1992, 0.3770, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.3496, 0.2090, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1982, 0.3047, 0.2139, 0.1768, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.2832, 0.1455, 0.0967, 0.2227, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.1572, 0.1973, 0.1719, 0.1699, 0.1006, 0.0493, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0408, 0.0933, 0.0933, 0.1157, 0.3828, 0.1348, 0.1338, 0.0061, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.0767, 0.0815, 0.0869, 0.0718, 0.1074, 0.1138, 0.2090, 0.1182, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1230, 0.1318, 0.0947, 0.1055, 0.0762, 0.0879, 0.0583, 0.1152, 0.0645, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0679, 0.0369, 0.0620, 0.0130, 0.0147, 0.0259, 0.5430, 0.0262, 0.1152, 0.0183, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0476, 0.0830, 0.1162, 0.0762, 0.1494, 0.1182, 0.0938, 0.0286, 0.1172, 0.0400, 0.0996, 0.0309, 0.0000, 0.0000, 0.0000],
        [0.0278, 0.0588, 0.0747, 0.0762, 0.2891, 0.1030, 0.1001, 0.0038, 0.0659, 0.0159, 0.1631, 0.0156, 0.0054, 0.0000, 0.0000],
        [0.0771, 0.0369, 0.0388, 0.0435, 0.0325, 0.0557, 0.0410, 0.1289, 0.0459, 0.1084, 0.0410, 0.0884, 0.1904, 0.0713, 0.0000],
        [0.0515, 0.0801, 0.1206, 0.0542, 0.0581, 0.0742, 0.0374, 0.0903, 0.0703, 0.0481, 0.0430, 0.0811, 0.0688, 0.0591, 0.0630]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0037, -0.0309,  0.0163,  ..., -0.0128,  0.0012,  0.0154],
        [ 0.0175,  0.0082,  0.0332,  ...,  0.0061, -0.0279, -0.0045],
        [-0.0030,  0.0007, -0.0160,  ..., -0.0290, -0.0227, -0.0298],
        ...,
        [ 0.0124, -0.0012, -0.0004,  ...,  0.0037,  0.0319, -0.0398],
        [ 0.0102,  0.0149, -0.0297,  ...,  0.0244, -0.0173, -0.0060],
        [-0.0250, -0.0103, -0.0137,  ...,  0.0185, -0.0299, -0.0128]], device='cuda:0', requires_grad=True)
K: tensor([     0.1729,      0.3320,     -0.8711,     -0.1289,     -0.4375,      1.2891,     -0.1953,     -0.0840,     -0.4590,      0.4082,      0.3242,     -0.0645,      0.0066,      0.8086,      0.0474,     -0.9883,      0.2598,      0.3730,      0.4492,      0.4512,     -0.9062,      0.4824,
             0.5898,      0.0209,     -0.5312,     -0.9102,     -0.5234,     -0.3945,      0.2539,      0.1689,      0.4395,     -0.6367,     -0.0537,      0.2246,      0.3906,     -0.7500,     -0.0011,      0.7070,      0.3750,     -0.5859,     -0.0869,     -0.1406,     -0.3125,     -1.0625,
            -0.2852,     -0.7695,     -0.2949,      0.1406,      0.4023,     -0.0129,      0.2324,     -0.1709,      0.0117,      0.1943,      1.0312,      0.0967,     -1.2656,     -0.1216,      0.1084,     -0.8047,      0.3691,      0.3398,     -0.3203,     -0.9062], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0208, -0.0155, -0.0106,  ..., -0.0129,  0.0433,  0.0019],
        [-0.0079, -0.0157,  0.0060,  ...,  0.0010, -0.0055,  0.0036],
        [-0.0289, -0.0535, -0.0080,  ...,  0.0025,  0.0129,  0.0108],
        ...,
        [ 0.0021,  0.0047, -0.0039,  ..., -0.0485, -0.0113, -0.0070],
        [-0.0296, -0.0036,  0.0044,  ..., -0.0276,  0.0175,  0.0170],
        [ 0.0186,  0.0095, -0.0202,  ..., -0.0048,  0.0049, -0.0220]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4922, -0.1670, -0.4531, -0.9727,  0.4414,  0.1758, -0.8359, -0.2617,  0.9414,  0.0065, -0.9492, -0.7305, -0.7305,  0.5859, -0.1367,  0.5625, -0.1187,  0.8594, -0.0090, -0.2539, -0.6211, -0.3320,  0.3320, -0.6680, -0.1777,  0.0349, -0.1338, -0.5977, -0.4121,  0.0349, -0.2012, -0.0405,
         0.4258, -0.9258, -0.5781, -0.8164,  0.1914,  0.2734, -0.6094,  0.2988, -0.8789, -0.3047,  0.5195, -1.0781,  0.8125, -0.2793,  0.3203, -0.1143,  0.7266, -0.9570, -0.3203, -0.5391,  0.0588, -0.6719, -0.0552,  0.3965,  0.5625,  0.0320, -0.2002, -0.1099, -0.0562,  0.2734, -0.0033, -0.3633],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2559, -0.5781, -0.0493, -0.7617, -0.7539, -0.4902,  1.5078, -0.3008,  0.4141, -0.5820, -0.3438,  0.6172, -0.2559,  0.0237],
        [ 0.0000,  0.6406,  0.7539, -0.0825,  0.7109,  0.3457,  0.7500, -1.0000,  0.2832, -0.1865,  0.2305, -0.4082, -0.4355,  0.4473,  0.1348],
        [ 0.0000,  0.3555, -0.1621, -0.2344,  0.4473,  0.2930, -0.6250, -0.4922, -0.2598, -0.4043,  0.1465, -0.0569,  0.4941,  0.3105, -0.0752],
        [ 0.0000,  0.4316,  0.0728, -0.1133, -0.6289, -0.9453, -0.2041,  1.4453, -0.5898,  0.7109, -1.0000,  0.0962,  0.2119, -0.4707,  0.6094],
        [ 0.0000,  0.8398,  0.1670, -0.2373,  0.5938,  0.0459,  0.0776,  0.3691,  0.2061,  0.7656, -0.0413, -0.2236,  0.2178,  0.0603,  0.5430],
        [ 0.0000,  0.0166,  0.2432,  0.1099,  0.0952, -0.4258, -1.1406, -0.2559, -0.7656,  0.1226, -1.0156, -0.6328,  0.4277, -0.2910, -0.3945],
        [ 0.0000,  0.8242,  0.8281,  1.0391,  2.2344,  1.1953,  1.1875, -1.9062,  1.0859, -0.0967,  2.0312, -0.7930, -1.7422,  1.3828, -0.2275],
        [ 0.0000, -0.5703, -0.5078, -0.4434, -0.6328, -0.2295, -0.1709,  0.4355, -0.1348,  0.7148, -0.1973, -0.0122,  0.0732,  0.2471, -0.2012],
        [ 0.0000,  0.0664, -0.2617, -0.1572, -0.4805, -0.3359, -0.7461, -0.0679, -0.6484,  0.1475,  0.0615, -0.2344,  0.0437,  0.0281, -0.6133],
        [ 0.0000, -0.1484, -0.7539, -0.2383, -1.8047, -1.6797, -1.1094,  1.9297, -1.1016,  0.3828, -1.4531,  0.6719,  0.8125, -0.9922, -0.4434],
        [ 0.0000,  0.5586,  0.8906,  0.4727,  1.1406,  0.9102,  0.6758, -0.5078,  0.8984, -0.1729,  0.7344, -0.4316, -0.7227,  1.0156,  0.1582],
        [ 0.0000,  0.7500,  0.9844,  1.0078,  2.3438,  1.3047,  1.2812, -2.0000,  0.8633, -0.5625,  1.7656, -0.5781, -1.6484,  1.4766,  0.3555],
        [ 0.0000, -0.7422, -0.6875, -0.5742, -0.8633, -0.3242, -0.6328,  0.5156, -0.5195,  0.3379, -0.6289,  0.1348,  0.9023, -0.0762, -0.3574],
        [ 0.0000,  0.4434,  0.8516,  0.0530,  0.1221,  0.3652, -0.3164,  0.5586,  0.3105, -0.0664, -0.1826,  0.4570,  0.2949,  0.1387,  0.2031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7432],
        [0.2395],
        [0.2172],
        [0.1004],
        [0.0550],
        [0.0804],
        [0.0946],
        [0.0716],
        [0.0991],
        [0.0499],
        [0.0578],
        [0.0570],
        [0.0482],
        [0.0552]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4355,     0.5625,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1768,     0.3887,     0.4336,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2295,     0.3516,     0.2207,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1904,     0.3379,     0.1953,     0.1846,     0.0918,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0723,     0.1973,     0.1211,     0.0850,     0.3809,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1299,     0.1738,     0.1816,     0.1504,     0.2021,     0.1069,     0.0559,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0125,     0.0374,     0.0554,     0.0491,     0.7266,     0.0508,     0.0664,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1387,     0.0767,     0.0928,     0.0986,     0.1240,     0.0933,     0.1309,     0.1357,     0.1089,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1021,     0.1377,     0.1191,     0.1172,     0.1943,     0.0835,     0.0771,     0.0300,     0.0679,     0.0713,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1138,     0.1226,     0.0559,     0.0972,     0.0544,     0.0405,     0.0520,     0.2188,     0.0442,     0.1396,     0.0605,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0249,     0.0610,     0.1191,     0.0535,     0.3398,     0.1001,     0.0908,     0.0040,     0.0830,     0.0157,     0.0991,     0.0082,     0.0000,     0.0000,     0.0000],
        [    0.0090,     0.0322,     0.0474,     0.0405,     0.5977,     0.0496,     0.0703,     0.0004,     0.0430,     0.0031,     0.1060,     0.0015,     0.0010,     0.0000,     0.0000],
        [    0.0796,     0.0444,     0.0471,     0.0654,     0.0977,     0.0708,     0.0723,     0.0396,     0.0718,     0.0801,     0.0977,     0.0493,     0.0693,     0.1152,     0.0000],
        [    0.0537,     0.0698,     0.0962,     0.0728,     0.0908,     0.0977,     0.0513,     0.0564,     0.0625,     0.0439,     0.0576,     0.0698,     0.0703,     0.0620,     0.0449]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0037, -0.0309,  0.0163,  ..., -0.0128,  0.0012,  0.0154],
        [ 0.0175,  0.0082,  0.0332,  ...,  0.0061, -0.0279, -0.0045],
        [-0.0030,  0.0007, -0.0160,  ..., -0.0290, -0.0227, -0.0298],
        ...,
        [ 0.0124, -0.0012, -0.0004,  ...,  0.0037,  0.0319, -0.0398],
        [ 0.0102,  0.0149, -0.0297,  ...,  0.0244, -0.0173, -0.0060],
        [-0.0250, -0.0103, -0.0137,  ...,  0.0185, -0.0299, -0.0128]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3418,  0.6680, -0.3789,  0.0894, -0.3086,  1.0312, -0.1011, -0.2754, -0.8984,  0.6523,  0.0598, -0.2852,  0.0016,  1.0781,  0.1157, -1.2031,  0.1846,  0.4609,  0.8594,  0.8477, -0.1758,  0.4922,  0.0388,  0.3242, -0.3301, -0.5703, -0.1807, -0.1055,  0.0554,  0.2871,  0.1138, -0.8086,
        -0.0060,  0.1318,  0.4258, -1.1406,  0.5703,  1.0469,  0.3340, -0.4434,  0.5391, -0.4297, -0.6172, -0.5781, -0.1719, -1.0938, -0.5156,  0.1016,  0.4082,  0.1885, -0.0269, -0.1074, -0.0776,  0.6562,  0.6641, -0.1206, -0.9336, -0.8281,  0.0227, -0.5273, -0.1206, -0.1475, -0.8008, -0.6641],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0208, -0.0155, -0.0106,  ..., -0.0129,  0.0433,  0.0019],
        [-0.0079, -0.0157,  0.0060,  ...,  0.0010, -0.0055,  0.0036],
        [-0.0289, -0.0535, -0.0080,  ...,  0.0025,  0.0129,  0.0108],
        ...,
        [ 0.0021,  0.0047, -0.0039,  ..., -0.0485, -0.0113, -0.0070],
        [-0.0296, -0.0036,  0.0044,  ..., -0.0276,  0.0175,  0.0170],
        [ 0.0186,  0.0095, -0.0202,  ..., -0.0048,  0.0049, -0.0220]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1089,  0.4297, -0.7969, -0.6875,  0.5156,  0.0146, -0.4512,  0.2578,  0.6719, -0.1992, -0.4453, -0.7812, -0.6289,  0.3848,  0.0070,  0.0234,  0.0248,  0.9805, -0.2559, -0.3301, -0.6992, -0.2344,  0.5352, -0.9062,  0.3418,  0.3086,  0.0698, -0.3926,  0.0065, -0.4316, -0.7422,  0.5742,
         0.0835, -0.7930, -0.5508, -0.3906,  0.4277,  0.4004, -0.3789, -0.0079, -0.4785, -0.5156,  0.7617, -1.2266,  0.5312, -0.3867,  0.6875, -0.0347,  0.7070, -0.7539, -0.2793, -0.8594, -0.1436, -0.7344,  0.0708,  0.3672,  0.3535,  0.1758, -0.2148,  0.3770,  0.4004,  0.5430, -0.0815,  0.3613],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2559,     -0.6406,     -0.1318,     -0.9375,     -0.5469,     -0.5195,      1.4297,     -0.4512,      0.3594,     -0.3203,     -0.1406,      0.5586,     -0.1807,     -0.1592],
        [     0.0000,      0.7891,      0.8984,      0.0752,      1.1406,      0.4648,      0.8945,     -1.1094,      0.4141,     -0.2812,      0.3262,     -0.5820,     -0.4082,      0.4043,     -0.0640],
        [     0.0000,      0.4238,     -0.0420,     -0.1455,      0.4727,      0.0859,     -0.5430,     -0.7891,     -0.4492,     -0.4746,     -0.0688,     -0.5234,      0.1011,      0.0374,     -0.5547],
        [     0.0000,      0.5703,      0.0259,     -0.0305,     -0.7305,     -0.5234,     -0.1348,      1.9141,     -0.3359,      0.8320,     -0.5000,      0.4668,      0.7266,     -0.0574,      0.1250],
        [     0.0000,      1.0000,      0.5156,      0.1621,      1.6641,      0.6836,      0.5781,     -0.3281,      0.5703,      0.6836,      0.5391,     -0.3809,      0.0153,      0.4297,      0.6133],
        [     0.0000,      0.2930,      0.3379,      0.1514,      0.4473,     -0.1934,     -0.8398,     -0.5508,     -0.6055,     -0.0835,     -0.6602,     -0.7891,      0.1270,     -0.1523,     -0.3125],
        [     0.0000,      1.0938,      1.4922,      1.3750,      4.0625,      1.4062,      1.6719,     -3.4219,      1.6172,     -0.7500,      2.3438,     -1.9453,     -2.2500,      1.5234,     -0.5742],
        [     0.0000,     -0.5938,     -0.4023,     -0.3418,     -0.1143,     -0.3984,     -0.0591,     -0.0237,     -0.2441,      0.3555,      0.1040,     -0.3926,     -0.3086,      0.1914,     -0.2871],
        [     0.0000,      0.2988,      0.1553,      0.1396,      0.6445,     -0.1973,     -0.2793,     -1.2266,     -0.4082,     -0.3613,      0.2910,     -1.1953,     -1.0391,      0.0859,     -0.6016],
        [     0.0000,      0.0737,     -0.7109,     -0.1611,     -0.7344,     -1.0312,     -0.7852,      0.6562,     -0.9492,      0.2031,     -0.6328,      0.5195,      0.1426,     -0.6289,     -0.7930],
        [     0.0000,      0.8945,      1.5625,      0.7617,      2.6094,      1.3906,      1.2969,     -1.8359,      1.2031,     -0.4609,      1.3828,     -1.1172,     -0.9922,      1.1328,     -0.0349],
        [     0.0000,      1.2734,      1.6562,      1.5000,      4.1875,      1.7031,      2.0469,     -3.1875,      1.5547,     -1.0625,      2.4531,     -1.7812,     -2.2500,      1.8125,     -0.1211],
        [     0.0000,     -0.5859,     -0.5273,     -0.2012,      0.2031,     -0.1177,     -0.0977,     -0.6992,     -0.1035,      0.0033,      0.2051,     -0.4805,     -0.1406,      0.3672,     -0.5508],
        [     0.0000,      0.2637,      0.5820,      0.3008,      0.5234,      0.5977,     -0.0476,      0.0464,      0.1494,     -0.1992,      0.0679,      0.2617,      0.2676,      0.1445,     -0.1816]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7410],
        [0.2041],
        [0.1874],
        [0.0745],
        [0.0294],
        [0.0679],
        [0.0818],
        [0.0478],
        [0.0674],
        [0.0349],
        [0.0310],
        [0.0410],
        [0.0302],
        [0.0392]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4375,     0.5625,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1523,     0.3945,     0.4531,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2090,     0.3438,     0.2393,     0.2080,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1709,     0.3477,     0.1836,     0.1943,     0.1040,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0280,     0.0791,     0.1030,     0.0615,     0.6328,     0.0957,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0962,     0.1602,     0.1631,     0.1309,     0.2617,     0.1201,     0.0679,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.0156,     0.0366,     0.0237,     0.8828,     0.0101,     0.0277,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1133,     0.0762,     0.1113,     0.1040,     0.2168,     0.0830,     0.1270,     0.0728,     0.0957,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0466,     0.0845,     0.1157,     0.0928,     0.4668,     0.0518,     0.0713,     0.0051,     0.0493,     0.0161,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0913,     0.1099,     0.0791,     0.1035,     0.1523,     0.0757,     0.0752,     0.0654,     0.0581,     0.0801,     0.1094,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0134,     0.0403,     0.1279,     0.0427,     0.5586,     0.0542,     0.0562,     0.0013,     0.0342,     0.0058,     0.0601,     0.0045,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.0187,     0.0398,     0.0264,     0.7695,     0.0161,     0.0364,     0.0002,     0.0248,     0.0010,     0.0618,     0.0005,     0.0007,     0.0000,     0.0000],
        [    0.0500,     0.0481,     0.0630,     0.0723,     0.2334,     0.0579,     0.0771,     0.0151,     0.0767,     0.0334,     0.1226,     0.0222,     0.0374,     0.0903,     0.0000],
        [    0.0483,     0.0615,     0.1050,     0.0840,     0.1436,     0.0791,     0.0588,     0.0374,     0.0557,     0.0322,     0.0718,     0.0447,     0.0698,     0.0659,     0.0430]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0037, -0.0309,  0.0163,  ..., -0.0128,  0.0012,  0.0154],
        [ 0.0175,  0.0082,  0.0332,  ...,  0.0061, -0.0279, -0.0045],
        [-0.0030,  0.0007, -0.0160,  ..., -0.0290, -0.0227, -0.0298],
        ...,
        [ 0.0124, -0.0012, -0.0004,  ...,  0.0037,  0.0319, -0.0398],
        [ 0.0102,  0.0149, -0.0297,  ...,  0.0244, -0.0173, -0.0060],
        [-0.0250, -0.0103, -0.0137,  ...,  0.0185, -0.0299, -0.0128]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6602,  0.6211,  0.1475, -0.0791, -0.2676,  0.9414, -0.0549, -0.1187, -1.2109,  1.0391,  0.0322, -0.5039, -0.2676,  1.0703,  0.2676, -1.0234, -0.1260,  0.4844,  0.9375,  1.1719,  0.1309,  0.5859, -0.3438,  0.4570, -0.0654, -0.2695,  0.1025,  0.0371,  0.0092,  0.3613, -0.0776, -0.8477,
        -0.1641, -0.0977,  0.2969, -1.1172,  0.7305,  1.1250,  0.2852, -0.1406,  0.8438, -0.5273, -0.2852, -0.0110,  0.1250, -1.0703, -0.4199, -0.2061,  0.2070,  0.3809,  0.0157, -0.2734, -0.1426,  1.0078,  0.2266, -0.2383, -0.3320, -1.4844, -0.0776, -0.2148, -0.3945, -0.5820, -0.6836,  0.0251],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0208, -0.0155, -0.0106,  ..., -0.0129,  0.0433,  0.0019],
        [-0.0079, -0.0157,  0.0060,  ...,  0.0010, -0.0055,  0.0036],
        [-0.0289, -0.0535, -0.0080,  ...,  0.0025,  0.0129,  0.0108],
        ...,
        [ 0.0021,  0.0047, -0.0039,  ..., -0.0485, -0.0113, -0.0070],
        [-0.0296, -0.0036,  0.0044,  ..., -0.0276,  0.0175,  0.0170],
        [ 0.0186,  0.0095, -0.0202,  ..., -0.0048,  0.0049, -0.0220]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0435,  0.7266, -0.9258, -0.6562,  0.3867, -0.2344,  0.0422,  0.7305,  0.2969, -0.2490, -0.2422, -0.9727, -0.5352,  0.3203,  0.1445, -0.0732,  0.2275,  1.0781, -0.1572,  0.0170, -0.6953,  0.3691,  0.9141, -0.8711,  0.7539,  0.5234,  0.2441, -0.1094,  0.2578, -1.0000, -0.8633,  0.8477,
        -0.3516, -0.3203, -0.4355, -0.0513,  0.2617,  0.4473,  0.1030, -0.5039,  0.0884, -0.0928,  0.8594, -1.1016,  0.2500, -0.5781,  0.8828,  0.2578,  0.4688, -0.3125, -0.2285, -0.8867, -0.4062, -0.6641,  0.1729,  0.2305,  0.3555, -0.2354, -0.2158,  0.7617,  0.6484,  0.5352, -0.0245,  0.8828],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2539,     -0.6992,     -0.2324,     -1.0547,     -0.2832,     -0.5703,      1.0938,     -0.5195,      0.3555,     -0.3301,     -0.0172,      0.3535,     -0.2598,     -0.2910],
        [     0.0000,      0.9531,      1.0859,      0.3066,      1.6641,      0.4746,      1.0312,     -1.0703,      0.7539,     -0.2715,      0.5664,     -0.5195,     -0.0547,      0.7227,      0.0386],
        [     0.0000,      0.4980,      0.1338,     -0.0071,      0.4805,     -0.1279,     -0.4258,     -0.9688,     -0.5469,     -0.5234,     -0.1777,     -0.6953,     -0.2500,     -0.1895,     -0.8008],
        [     0.0000,      0.7109,      0.0703,      0.1289,     -0.4980,      0.0889,      0.0008,      1.9766,      0.4727,      1.2109,      0.0260,      0.7305,      1.3516,      0.6719,      0.0233],
        [     0.0000,      1.0391,      1.3047,      0.7852,      3.1250,      1.2266,      1.2109,     -1.2969,      0.9453,      0.1104,      1.1562,     -0.6523,     -0.0952,      0.8164,      0.5586],
        [     0.0000,      0.5078,      0.5273,      0.3105,      1.0000,      0.2207,     -0.3516,     -0.9805,     -0.2324,     -0.2910,     -0.1875,     -0.6953,     -0.1650,      0.0535,     -0.3535],
        [     0.0000,      1.2734,      2.1250,      1.6875,      5.3125,      0.8398,      1.8438,     -3.7812,      1.5391,     -1.5781,      2.1719,     -2.4219,     -1.8750,      1.3438,     -0.7227],
        [     0.0000,     -0.3965,     -0.0176,     -0.0845,      0.6484,     -0.3105,      0.1099,     -0.4453,     -0.1719,     -0.0874,      0.3574,     -0.6250,     -0.1885,      0.1030,     -0.2539],
        [     0.0000,      0.5898,      0.9062,      0.6875,      2.2969,      0.1016,      0.4180,     -2.2188,      0.0532,     -1.0625,      0.6953,     -1.6562,     -1.3516,      0.3027,     -0.4746],
        [     0.0000,      0.1865,     -0.1396,      0.1260,      0.5156,     -0.1885,     -0.1934,     -0.3301,     -0.4492,     -0.1289,      0.1836,     -0.0045,     -0.0913,     -0.3262,     -0.5312],
        [     0.0000,      1.1094,      2.2656,      1.1641,      3.7344,      1.4062,      1.4375,     -2.3125,      0.9414,     -0.8281,      1.5000,     -1.0781,     -0.6680,      1.0000,     -0.0737],
        [     0.0000,      1.5234,      2.2812,      1.8672,      5.2500,      1.3750,      2.1875,     -3.2969,      1.8125,     -1.3594,      2.7188,     -2.0312,     -1.6953,      2.0781,     -0.2334],
        [     0.0000,     -0.0408,      0.2314,      0.3672,      1.5391,      0.1445,      0.4277,     -1.2031,      0.4258,     -0.4043,      0.8945,     -0.8125,     -0.2930,      0.5859,     -0.3438],
        [     0.0000,      0.2451,      0.7812,      0.5508,      1.0859,      0.4941,      0.1982,     -0.2559,      0.1416,     -0.4062,      0.3945,     -0.0767,      0.3691,      0.3145,     -0.1172]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7393],
        [0.1607],
        [0.1479],
        [0.0508],
        [0.0147],
        [0.0466],
        [0.0427],
        [0.0246],
        [0.0253],
        [0.0195],
        [0.0115],
        [0.0198],
        [0.0127],
        [0.0187]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4316, 0.5703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.3477, 0.5586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.4375, 0.2422, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.3418, 0.2910, 0.1338, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.1064, 0.2656, 0.1875, 0.2910, 0.0549, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.1973, 0.1235, 0.0669, 0.0503, 0.4395, 0.0571, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.1318, 0.0693, 0.0330, 0.0356, 0.5508, 0.0549, 0.0610, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0281, 0.0703, 0.0361, 0.0282, 0.0168, 0.7188, 0.0317, 0.0247, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0679, 0.0928, 0.0703, 0.0344, 0.0444, 0.3047, 0.0664, 0.0596, 0.1924, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0437, 0.0957, 0.0588, 0.0337, 0.0254, 0.4297, 0.0476, 0.0471, 0.0962, 0.0386, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.0986, 0.0493, 0.0312, 0.0299, 0.2871, 0.0586, 0.0464, 0.1543, 0.0562, 0.0962, 0.0245, 0.0000, 0.0000, 0.0000],
        [0.0464, 0.0781, 0.0371, 0.0193, 0.0190, 0.4805, 0.0386, 0.0342, 0.1050, 0.0342, 0.0767, 0.0121, 0.0195, 0.0000, 0.0000],
        [0.0275, 0.0640, 0.0300, 0.0337, 0.0210, 0.5859, 0.0417, 0.0199, 0.0552, 0.0154, 0.0576, 0.0108, 0.0162, 0.0190, 0.0000],
        [0.0708, 0.1592, 0.0366, 0.0275, 0.0211, 0.2910, 0.0449, 0.0405, 0.0962, 0.0515, 0.0593, 0.0244, 0.0240, 0.0361, 0.0175]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0037, -0.0309,  0.0163,  ..., -0.0128,  0.0012,  0.0154],
        [ 0.0175,  0.0082,  0.0332,  ...,  0.0061, -0.0279, -0.0045],
        [-0.0030,  0.0007, -0.0160,  ..., -0.0290, -0.0227, -0.0298],
        ...,
        [ 0.0124, -0.0012, -0.0004,  ...,  0.0037,  0.0319, -0.0398],
        [ 0.0102,  0.0149, -0.0297,  ...,  0.0244, -0.0173, -0.0060],
        [-0.0250, -0.0103, -0.0137,  ...,  0.0185, -0.0299, -0.0128]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6406, -1.1406, -0.0018,  0.3359, -0.4062, -0.0535,  0.9766, -0.3457, -0.3125, -0.2578, -0.0398, -0.4863, -0.7188,  1.7344, -0.8398,  0.6602,  1.6250,  0.5703, -0.2354, -0.3652, -0.6328, -0.3027, -0.4707,  0.0806,  1.1250, -0.5078, -0.9961,  0.4609, -0.4844, -0.8125, -0.2090,  0.4883,
         0.6914,  0.9297, -0.9062,  0.5039, -0.1128,  0.5820, -0.5938,  0.1099,  1.4141,  1.2969, -0.3750, -0.6992, -0.6055,  0.3926, -0.3320,  0.1040,  0.6289,  0.0454,  0.5273, -1.0078,  1.2422, -0.7109,  0.3633, -1.0547, -1.2891, -0.2480, -0.1094,  0.7969, -0.0811,  1.5781,  0.4902,  0.4180],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0208, -0.0155, -0.0106,  ..., -0.0129,  0.0433,  0.0019],
        [-0.0079, -0.0157,  0.0060,  ...,  0.0010, -0.0055,  0.0036],
        [-0.0289, -0.0535, -0.0080,  ...,  0.0025,  0.0129,  0.0108],
        ...,
        [ 0.0021,  0.0047, -0.0039,  ..., -0.0485, -0.0113, -0.0070],
        [-0.0296, -0.0036,  0.0044,  ..., -0.0276,  0.0175,  0.0170],
        [ 0.0186,  0.0095, -0.0202,  ..., -0.0048,  0.0049, -0.0220]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0302, -0.0557, -0.3086, -0.2373,  0.6914,  0.9297, -0.4258, -1.2188, -0.6016,  0.1689,  0.1982,  1.1875,  0.8984,  0.2090, -0.4199, -1.2500, -0.4121, -0.6953, -1.3359, -0.8242, -0.3125, -0.8984,  0.4766, -0.4766, -1.4219, -0.4648, -0.2129,  0.1377,  0.7500,  1.6797,  0.7812, -0.7891,
         0.4805,  0.1289,  0.2324, -0.5703, -0.2412, -0.6719, -1.5469,  0.8867, -0.1943, -1.6016, -0.4121,  0.8906,  0.3809,  0.5430, -0.0708, -0.7969, -2.0312,  0.9766,  0.3965,  0.8906, -1.4609,  0.4922,  1.0234, -0.0520, -0.1914, -0.6016,  1.1094, -0.5430,  0.1768,  0.3848, -0.7734, -0.3164],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2773,     -0.3672,     -0.9336,     -0.9648,      1.0312,     -1.1719,     -0.1562,     -0.5391,     -0.1094,     -0.5156,     -0.5273,     -0.2041,     -1.0000,     -0.9102],
        [     0.0000,      1.3438,      1.8125,      0.7852,      0.7969,      1.4219,      0.0161,      1.1406,      0.1582,      0.6016,      0.6523,     -0.4238,      1.1172,     -0.7070,     -1.2031],
        [     0.0000,      0.9922,      0.4023,     -0.0205,     -0.3848,      1.5547,     -0.5078,     -0.0334,     -0.3672,     -0.1387,     -0.2314,     -1.0391,     -0.0874,     -1.0156,     -1.5859],
        [     0.0000,      0.9570,      0.8047,      0.0240,     -0.2402,      2.2812,     -0.4238,      0.0942,     -0.1094,     -0.2676,      0.2676,     -1.3828,     -0.0557,     -1.1250,     -2.0000],
        [     0.0000,      0.1167,      1.0234,      0.6836,      1.1172,     -0.5469,      0.8359,      1.0547,      0.8320,      0.9180,      0.8672,      0.9180,      0.9062,      0.7305,      0.8164],
        [     0.0000,      1.1172,      0.6484,      0.0361,     -0.2500,      1.9141,     -0.1230,      0.1089,      0.0369,     -0.1162,      0.1089,     -1.0078,     -0.0354,     -0.6758,     -1.5625],
        [     0.0000,      0.7148,      0.0703,     -0.6719,     -0.5938,      2.1406,     -0.1611,     -0.0562,      0.9453,     -0.0728,      0.7305,     -1.1406,     -0.6641,     -0.3555,     -1.8359],
        [     0.0000,      0.9180,      0.2490,      0.0022,     -0.5117,      3.2344,      0.1245,     -0.1299,      0.5039,     -0.2930,      0.6250,     -1.1016,     -0.4336,     -0.8164,     -1.4297],
        [     0.0000,      0.3125,      0.0344,     -0.6797,     -0.4258,      1.5000,     -0.0248,     -0.1289,      1.0391,     -0.0003,      0.8281,     -0.8477,     -0.5508,      0.1016,     -1.3438],
        [     0.0000,      0.7852,      0.3008,     -0.2578,     -0.5430,      2.2969,      0.0879,      0.0776,      0.7891,     -0.1226,      0.6484,     -1.2734,     -0.3242,     -0.4336,     -1.7734],
        [     0.0000,      0.3789,     -0.3164,     -0.7695,     -0.8125,      1.4453,     -0.1416,     -0.3789,      0.8242,     -0.1846,      0.3535,     -1.0156,     -0.9414,     -0.1816,     -1.4453],
        [     0.0000,      0.5195,     -0.2227,     -0.8750,     -0.8906,      2.3438,     -0.1807,     -0.3047,      0.8203,     -0.3047,      0.5039,     -1.3438,     -0.8633,     -0.4512,     -1.9688],
        [     0.0000,      0.8477,      0.0908,      0.2012,     -0.2715,      3.0625,      0.4180,     -0.3223,      0.6992,     -0.5742,      0.7383,     -0.9297,     -0.5273,     -0.3691,     -0.8906],
        [     0.0000,      0.8125,     -0.6562,     -0.9414,     -1.2031,      1.4141,     -0.4551,     -0.5586,      0.3105,     -0.3164,     -0.1748,     -1.0625,     -1.0781,     -0.6719,     -1.3906]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7013],
        [0.0520],
        [0.1137],
        [0.0952],
        [0.0751],
        [0.0519],
        [0.0417],
        [0.0316],
        [0.0471],
        [0.0289],
        [0.0523],
        [0.0250],
        [0.0205],
        [0.0529]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4297, 0.5703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.4512, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.4961, 0.1895, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.3984, 0.2441, 0.1113, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.1006, 0.2314, 0.1875, 0.2354, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.2061, 0.0566, 0.0381, 0.0250, 0.5820, 0.0239, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.1226, 0.0461, 0.0227, 0.0217, 0.6523, 0.0266, 0.0261, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0371, 0.0688, 0.0254, 0.0219, 0.0131, 0.7812, 0.0205, 0.0123, 0.0211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.0957, 0.0588, 0.0283, 0.0305, 0.4707, 0.0410, 0.0327, 0.0952, 0.0500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0591, 0.0981, 0.0430, 0.0266, 0.0189, 0.5977, 0.0264, 0.0233, 0.0408, 0.0264, 0.0393, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.1167, 0.0466, 0.0295, 0.0232, 0.4297, 0.0386, 0.0271, 0.0728, 0.0442, 0.0540, 0.0201, 0.0000, 0.0000, 0.0000],
        [0.0654, 0.0811, 0.0299, 0.0152, 0.0126, 0.6523, 0.0177, 0.0157, 0.0347, 0.0238, 0.0302, 0.0092, 0.0100, 0.0000, 0.0000],
        [0.0413, 0.0664, 0.0359, 0.0366, 0.0250, 0.6211, 0.0342, 0.0173, 0.0310, 0.0166, 0.0342, 0.0140, 0.0152, 0.0132, 0.0000],
        [0.0967, 0.2002, 0.0403, 0.0304, 0.0205, 0.3516, 0.0306, 0.0276, 0.0452, 0.0432, 0.0339, 0.0233, 0.0173, 0.0188, 0.0216]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0037, -0.0309,  0.0163,  ..., -0.0128,  0.0012,  0.0154],
        [ 0.0175,  0.0082,  0.0332,  ...,  0.0061, -0.0279, -0.0045],
        [-0.0030,  0.0007, -0.0160,  ..., -0.0290, -0.0227, -0.0298],
        ...,
        [ 0.0124, -0.0012, -0.0004,  ...,  0.0037,  0.0319, -0.0398],
        [ 0.0102,  0.0149, -0.0297,  ...,  0.0244, -0.0173, -0.0060],
        [-0.0250, -0.0103, -0.0137,  ...,  0.0185, -0.0299, -0.0128]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9062, -1.1406, -0.0427,  0.3965, -0.3340, -0.1245,  0.7578, -0.3887, -0.5859, -0.0762, -0.0608, -0.7891, -0.8594,  1.7188, -0.9453,  0.5664,  1.5078,  0.6758,  0.0223, -0.1992, -0.7656, -0.2930, -0.1445,  0.2148,  1.0156, -0.6328, -0.7695,  0.2871, -0.3633, -0.7891, -0.4512,  0.4902,
         0.7305,  0.9609, -0.8242,  0.5234, -0.4492,  0.7266, -0.7852,  0.0219,  1.5938,  1.3906, -0.1533, -0.7227, -0.6289,  0.4160, -0.4023,  0.2451,  0.5039,  0.1514,  0.4043, -1.0234,  0.9531, -0.4902,  0.3984, -1.1641, -1.2266, -0.2715, -0.0248,  0.7070,  0.1777,  1.2656,  0.3398,  0.5156],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0208, -0.0155, -0.0106,  ..., -0.0129,  0.0433,  0.0019],
        [-0.0079, -0.0157,  0.0060,  ...,  0.0010, -0.0055,  0.0036],
        [-0.0289, -0.0535, -0.0080,  ...,  0.0025,  0.0129,  0.0108],
        ...,
        [ 0.0021,  0.0047, -0.0039,  ..., -0.0485, -0.0113, -0.0070],
        [-0.0296, -0.0036,  0.0044,  ..., -0.0276,  0.0175,  0.0170],
        [ 0.0186,  0.0095, -0.0202,  ..., -0.0048,  0.0049, -0.0220]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0117,  0.1348, -0.4102, -0.5391,  0.6484,  0.9414, -0.4238, -1.1719, -0.3242,  0.2852,  0.2656,  1.2500,  0.8594,  0.1260, -0.0693, -1.4062, -0.3457, -0.6562, -1.3906, -0.6445, -0.1807, -0.8867,  0.8828, -0.5547, -1.5234, -0.4395, -0.1079,  0.3262,  0.8594,  1.5156,  0.6992, -0.8867,
         0.3691,  0.2139,  0.4473, -0.3828, -0.2432, -0.8203, -1.5234,  0.8750, -0.2812, -1.6641, -0.2188,  0.7734,  0.5898,  0.7070, -0.0618, -0.8281, -1.9844,  1.1406,  0.5352,  0.8086, -1.4922,  0.2793,  0.9375, -0.0427, -0.1387, -0.6211,  1.1562, -0.5039,  0.2754,  0.4863, -0.8203, -0.3027],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2852, -0.4219, -1.0078, -0.9922,  0.8945, -1.4219, -0.2490, -0.8828, -0.1250, -0.7891, -0.4492, -0.3066, -1.2344, -0.7461],
        [ 0.0000,  1.3672,  1.3203,  0.3301,  0.4160,  1.4844, -0.7656,  0.6797, -0.3047,  0.4219,  0.2012, -0.5547,  0.5312, -1.2188, -1.1406],
        [ 0.0000,  1.0000,  0.0396, -0.3340, -0.6680,  1.5078, -1.1328, -0.4766, -0.8828, -0.3848, -0.7266, -1.1484, -0.6406, -1.5312, -1.4531],
        [ 0.0000,  0.9805,  0.4941, -0.2910, -0.4258,  2.0625, -1.2578, -0.3457, -0.7852, -0.4727, -0.3848, -1.4062, -0.5352, -1.6484, -1.8203],
        [ 0.0000, -0.1611,  0.6719,  0.4609,  0.6875,  0.0562,  0.7539,  0.7188,  0.5820,  0.6836,  0.5664,  0.7383,  0.5547,  0.2578,  0.6836],
        [ 0.0000,  1.1328, -0.1572, -0.5547, -0.9766,  2.1719, -1.0234, -0.9414, -0.8086, -0.8281, -0.7969, -1.5938, -1.2656, -1.6094, -1.8516],
        [ 0.0000,  0.3984, -0.5742, -1.2891, -1.3359,  2.0625, -1.1328, -1.1484, -0.3379, -0.7695, -0.4199, -1.7188, -1.6406, -1.6016, -2.1094],
        [ 0.0000,  0.6172, -0.3828, -0.5312, -1.0391,  3.0469, -0.5977, -1.1094, -0.5664, -0.9961, -0.4648, -1.5312, -1.4062, -1.7578, -1.6094],
        [ 0.0000, -0.0125, -0.5000, -1.2344, -1.1562,  1.5781, -0.8633, -1.0938, -0.0175, -0.6641, -0.2002, -1.5312, -1.4844, -1.0000, -1.8594],
        [ 0.0000,  0.5078, -0.3145, -0.7969, -1.1406,  2.3125, -0.8047, -0.9258, -0.3711, -0.8047, -0.4062, -1.6797, -1.2734, -1.4688, -1.8984],
        [ 0.0000,  0.1865, -0.7266, -1.1875, -1.4297,  1.4922, -0.9180, -1.2734, -0.2852, -0.7852, -0.5820, -1.5703, -1.7656, -1.3047, -1.7656],
        [ 0.0000,  0.2148, -0.7852, -1.4609, -1.6406,  2.2969, -1.3125, -1.4219, -0.6406, -1.0156, -0.7734, -1.9688, -1.8750, -1.8047, -2.3438],
        [ 0.0000,  0.4805, -0.1377, -0.1157, -0.4961,  2.7188, -0.1865, -0.8672, -0.2832, -0.9102, -0.1865, -1.0781, -0.9961, -1.1406, -0.9766],
        [ 0.0000,  0.7266, -0.8789, -1.1562, -1.5547,  1.2891, -1.1484, -1.2578, -0.7656, -0.8047, -1.0469, -1.4219, -1.7188, -1.6406, -1.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6953],
        [0.1028],
        [0.1509],
        [0.1172],
        [0.1135],
        [0.0468],
        [0.0417],
        [0.0338],
        [0.0495],
        [0.0344],
        [0.0577],
        [0.0277],
        [0.0282],
        [0.0632]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0806 the:0.0630.:0.0615 the:0.0791.:0.0322,:0.1133 the:0.0718.:0.0121)
.
------
		( the:0.0630.:0.0615 the:0.0791.:0.0322,:0.1133 the:0.0718.:0.0121
:0.2061)

-
-The first.
-based.
-based other
@ 550 train 6.6518 , allloss: 7.6352, dt: 1640.19ms, fracRes: 0.0044, norm(attn): 0.2490, norm(output): 0.0461, norm(x): 0.0465, norm(y): 0.9897, norm:7.4622, tok/sec: 79912.58, flops:31.13, batch-reuse:1
@ 551 train 6.6851 , allloss: 7.7010, dt: 1193.82ms, fracRes: 0.0043, norm(attn): 0.2539, norm(output): 0.0461, norm(x): 0.0462, norm(y): 0.9896, norm:7.6754, tok/sec: 109792.18, flops:42.78, batch-reuse:1
@ 552 train 6.5346 , allloss: 7.5747, dt: 1203.24ms, fracRes: 0.0043, norm(attn): 0.2520, norm(output): 0.0466, norm(x): 0.0463, norm(y): 0.9895, norm:6.1915, tok/sec: 108932.73, flops:42.44, batch-reuse:1
@ 553 train 6.6917 , allloss: 7.6885, dt: 1188.47ms, fracRes: 0.0043, norm(attn): 0.2461, norm(output): 0.0457, norm(x): 0.0459, norm(y): 0.9896, norm:9.0385, tok/sec: 110285.97, flops:42.97, batch-reuse:1
@ 554 train 6.6582 , allloss: 7.6845, dt: 1173.52ms, fracRes: 0.0044, norm(attn): 0.2441, norm(output): 0.0471, norm(x): 0.0470, norm(y): 0.9896, norm:7.8231, tok/sec: 111691.47, flops:43.51, batch-reuse:1
@ 555 train 6.6092 , allloss: 7.6414, dt: 1203.23ms, fracRes: 0.0045, norm(attn): 0.2490, norm(output): 0.0469, norm(x): 0.0473, norm(y): 0.9895, norm:6.1867, tok/sec: 108933.18, flops:42.44, batch-reuse:1
@ 556 train 6.5615 , allloss: 7.5489, dt: 1173.82ms, fracRes: 0.0045, norm(attn): 0.2617, norm(output): 0.0454, norm(x): 0.0453, norm(y): 0.9894, norm:9.2295, tok/sec: 111662.37, flops:43.50, batch-reuse:1
@ 557 train 6.6380 , allloss: 7.6393, dt: 1201.54ms, fracRes: 0.0045, norm(attn): 0.2500, norm(output): 0.0461, norm(x): 0.0462, norm(y): 0.9895, norm:5.4953, tok/sec: 109086.87, flops:42.50, batch-reuse:1
@ 558 train 6.7623 , allloss: 7.7744, dt: 1233.57ms, fracRes: 0.0045, norm(attn): 0.2432, norm(output): 0.0466, norm(x): 0.0468, norm(y): 0.9895, norm:7.2852, tok/sec: 106254.32, flops:41.40, batch-reuse:1
@ 559 train 6.9117 , allloss: 7.9533, dt: 1197.07ms, fracRes: 0.0045, norm(attn): 0.2422, norm(output): 0.0474, norm(x): 0.0474, norm(y): 0.9895, norm:7.2418, tok/sec: 109494.42, flops:42.66, batch-reuse:1
@ 560 train 6.8002 , allloss: 7.8225, dt: 1207.04ms, fracRes: 0.0047, norm(attn): 0.2363, norm(output): 0.0476, norm(x): 0.0479, norm(y): 0.9895, norm:6.9495, tok/sec: 108589.90, flops:42.31, batch-reuse:1
@ 561 train 6.8919 , allloss: 7.9563, dt: 1190.21ms, fracRes: 0.0048, norm(attn): 0.2422, norm(output): 0.0493, norm(x): 0.0493, norm(y): 0.9894, norm:8.0188, tok/sec: 110125.20, flops:42.90, batch-reuse:1
@ 562 train 6.7589 , allloss: 7.7606, dt: 1219.57ms, fracRes: 0.0048, norm(attn): 0.2402, norm(output): 0.0471, norm(x): 0.0474, norm(y): 0.9894, norm:7.0837, tok/sec: 107473.89, flops:41.87, batch-reuse:1
@ 563 train 6.8613 , allloss: 7.8308, dt: 1202.39ms, fracRes: 0.0045, norm(attn): 0.2539, norm(output): 0.0454, norm(x): 0.0453, norm(y): 0.9893, norm:6.2347, tok/sec: 109009.13, flops:42.47, batch-reuse:1
@ 564 train 6.7156 , allloss: 7.6862, dt: 1191.54ms, fracRes: 0.0045, norm(attn): 0.2500, norm(output): 0.0457, norm(x): 0.0455, norm(y): 0.9892, norm:7.5954, tok/sec: 110001.92, flops:42.86, batch-reuse:1
@ 565 train 6.5870 , allloss: 7.6012, dt: 1181.74ms, fracRes: 0.0046, norm(attn): 0.2422, norm(output): 0.0479, norm(x): 0.0480, norm(y): 0.9893, norm:9.9613, tok/sec: 110914.37, flops:43.21, batch-reuse:1
@ 566 train 6.7885 , allloss: 7.7955, dt: 1208.68ms, fracRes: 0.0047, norm(attn): 0.2471, norm(output): 0.0464, norm(x): 0.0469, norm(y): 0.9893, norm:7.4678, tok/sec: 108442.68, flops:42.25, batch-reuse:1
@ 567 train 6.7953 , allloss: 7.7723, dt: 1237.21ms, fracRes: 0.0047, norm(attn): 0.2539, norm(output): 0.0447, norm(x): 0.0455, norm(y): 0.9892, norm:8.4234, tok/sec: 105941.39, flops:41.27, batch-reuse:1
@ 568 train 6.8391 , allloss: 7.8201, dt: 1179.95ms, fracRes: 0.0049, norm(attn): 0.2402, norm(output): 0.0469, norm(x): 0.0470, norm(y): 0.9893, norm:7.3575, tok/sec: 111082.65, flops:43.28, batch-reuse:1
@ 569 train 6.7655 , allloss: 7.7601, dt: 1199.22ms, fracRes: 0.0051, norm(attn): 0.2402, norm(output): 0.0471, norm(x): 0.0478, norm(y): 0.9892, norm:5.2576, tok/sec: 109298.04, flops:42.58, batch-reuse:1
@ 570 train 6.7638 , allloss: 7.7445, dt: 1185.65ms, fracRes: 0.0048, norm(attn): 0.2461, norm(output): 0.0466, norm(x): 0.0469, norm(y): 0.9891, norm:6.7441, tok/sec: 110548.52, flops:43.07, batch-reuse:1
@ 571 train 6.7174 , allloss: 7.6805, dt: 1200.91ms, fracRes: 0.0047, norm(attn): 0.2480, norm(output): 0.0461, norm(x): 0.0463, norm(y): 0.9891, norm:5.0834, tok/sec: 109144.04, flops:42.52, batch-reuse:1
@ 572 train 6.7019 , allloss: 7.6561, dt: 1173.73ms, fracRes: 0.0048, norm(attn): 0.2480, norm(output): 0.0457, norm(x): 0.0461, norm(y): 0.9890, norm:8.9480, tok/sec: 111671.62, flops:43.51, batch-reuse:1
@ 573 train 6.7325 , allloss: 7.6872, dt: 1181.18ms, fracRes: 0.0047, norm(attn): 0.2480, norm(output): 0.0457, norm(x): 0.0461, norm(y): 0.9890, norm:7.4170, tok/sec: 110966.57, flops:43.23, batch-reuse:1
@ 574 train 6.7384 , allloss: 7.7277, dt: 1201.66ms, fracRes: 0.0047, norm(attn): 0.2520, norm(output): 0.0459, norm(x): 0.0464, norm(y): 0.9888, norm:7.6265, tok/sec: 109075.35, flops:42.50, batch-reuse:1
@ 575 train 6.6981 , allloss: 7.6472, dt: 1197.74ms, fracRes: 0.0049, norm(attn): 0.2559, norm(output): 0.0444, norm(x): 0.0455, norm(y): 0.9888, norm:7.2822, tok/sec: 109432.87, flops:42.64, batch-reuse:1
@ 576 train 6.6578 , allloss: 7.6347, dt: 1180.14ms, fracRes: 0.0053, norm(attn): 0.2598, norm(output): 0.0464, norm(x): 0.0464, norm(y): 0.9887, norm:8.2456, tok/sec: 111064.50, flops:43.27, batch-reuse:1
@ 577 train 6.7902 , allloss: 7.7251, dt: 1215.25ms, fracRes: 0.0053, norm(attn): 0.2656, norm(output): 0.0437, norm(x): 0.0447, norm(y): 0.9887, norm:9.0574, tok/sec: 107855.70, flops:42.02, batch-reuse:1
@ 578 train 6.7119 , allloss: 7.6374, dt: 1217.88ms, fracRes: 0.0049, norm(attn): 0.2637, norm(output): 0.0439, norm(x): 0.0446, norm(y): 0.9887, norm:6.5054, tok/sec: 107622.81, flops:41.93, batch-reuse:1
@ 579 train 6.7117 , allloss: 7.6724, dt: 1181.82ms, fracRes: 0.0046, norm(attn): 0.2656, norm(output): 0.0454, norm(x): 0.0455, norm(y): 0.9887, norm:6.8189, tok/sec: 110906.44, flops:43.21, batch-reuse:1
@ 580 train 6.7837 , allloss: 7.7820, dt: 1183.24ms, fracRes: 0.0045, norm(attn): 0.2637, norm(output): 0.0449, norm(x): 0.0459, norm(y): 0.9886, norm:6.4533, tok/sec: 110774.19, flops:43.16, batch-reuse:1
@ 581 train 6.6863 , allloss: 7.6693, dt: 1191.25ms, fracRes: 0.0044, norm(attn): 0.2490, norm(output): 0.0464, norm(x): 0.0465, norm(y): 0.9887, norm:7.0289, tok/sec: 110028.84, flops:42.87, batch-reuse:1
@ 582 train 6.7329 , allloss: 7.6855, dt: 1215.20ms, fracRes: 0.0047, norm(attn): 0.2539, norm(output): 0.0454, norm(x): 0.0459, norm(y): 0.9887, norm:7.6145, tok/sec: 107860.80, flops:42.02, batch-reuse:1
@ 583 train 6.6771 , allloss: 7.6253, dt: 1211.35ms, fracRes: 0.0049, norm(attn): 0.2539, norm(output): 0.0449, norm(x): 0.0456, norm(y): 0.9886, norm:9.0972, tok/sec: 108203.40, flops:42.16, batch-reuse:1
@ 584 train 6.7413 , allloss: 7.7052, dt: 1229.09ms, fracRes: 0.0050, norm(attn): 0.2617, norm(output): 0.0444, norm(x): 0.0455, norm(y): 0.9886, norm:7.5269, tok/sec: 106641.27, flops:41.55, batch-reuse:1
@ 585 train 6.6933 , allloss: 7.6518, dt: 1209.73ms, fracRes: 0.0052, norm(attn): 0.2578, norm(output): 0.0444, norm(x): 0.0459, norm(y): 0.9886, norm:8.0647, tok/sec: 108347.70, flops:42.21, batch-reuse:1
@ 586 train 6.7250 , allloss: 7.6806, dt: 1240.84ms, fracRes: 0.0050, norm(attn): 0.2637, norm(output): 0.0447, norm(x): 0.0457, norm(y): 0.9884, norm:7.0403, tok/sec: 105631.71, flops:41.15, batch-reuse:1
@ 587 train 6.7244 , allloss: 7.6725, dt: 1234.36ms, fracRes: 0.0050, norm(attn): 0.2656, norm(output): 0.0449, norm(x): 0.0457, norm(y): 0.9884, norm:5.4310, tok/sec: 106185.85, flops:41.37, batch-reuse:1
@ 588 train 6.7281 , allloss: 7.6407, dt: 1238.37ms, fracRes: 0.0050, norm(attn): 0.2656, norm(output): 0.0439, norm(x): 0.0448, norm(y): 0.9884, norm:7.9814, tok/sec: 105842.08, flops:41.24, batch-reuse:1
@ 589 train 6.7414 , allloss: 7.6640, dt: 1224.24ms, fracRes: 0.0048, norm(attn): 0.2676, norm(output): 0.0439, norm(x): 0.0450, norm(y): 0.9884, norm:5.7805, tok/sec: 107063.55, flops:41.71, batch-reuse:1
@ 590 train 6.7208 , allloss: 7.6754, dt: 1202.41ms, fracRes: 0.0048, norm(attn): 0.2656, norm(output): 0.0454, norm(x): 0.0459, norm(y): 0.9883, norm:7.4820, tok/sec: 109007.33, flops:42.47, batch-reuse:1
@ 591 train 6.6880 , allloss: 7.6302, dt: 1222.24ms, fracRes: 0.0046, norm(attn): 0.2812, norm(output): 0.0432, norm(x): 0.0444, norm(y): 0.9882, norm:11.2732, tok/sec: 107238.84, flops:41.78, batch-reuse:1
@ 592 train 6.6754 , allloss: 7.6512, dt: 1211.68ms, fracRes: 0.0046, norm(attn): 0.2637, norm(output): 0.0457, norm(x): 0.0461, norm(y): 0.9882, norm:6.1512, tok/sec: 108174.12, flops:42.14, batch-reuse:1
@ 593 train 6.6716 , allloss: 7.6186, dt: 1201.80ms, fracRes: 0.0047, norm(attn): 0.2617, norm(output): 0.0447, norm(x): 0.0454, norm(y): 0.9883, norm:9.1861, tok/sec: 109062.87, flops:42.49, batch-reuse:1
@ 594 train 6.8684 , allloss: 7.8101, dt: 1219.19ms, fracRes: 0.0047, norm(attn): 0.2617, norm(output): 0.0442, norm(x): 0.0451, norm(y): 0.9883, norm:8.0639, tok/sec: 107507.18, flops:41.88, batch-reuse:1
@ 595 train 6.6557 , allloss: 7.5938, dt: 1187.39ms, fracRes: 0.0047, norm(attn): 0.2637, norm(output): 0.0439, norm(x): 0.0450, norm(y): 0.9882, norm:7.4778, tok/sec: 110386.68, flops:43.01, batch-reuse:1
@ 596 train 6.6705 , allloss: 7.6536, dt: 1201.18ms, fracRes: 0.0049, norm(attn): 0.2617, norm(output): 0.0466, norm(x): 0.0467, norm(y): 0.9881, norm:6.8901, tok/sec: 109119.22, flops:42.51, batch-reuse:1
@ 597 train 6.6448 , allloss: 7.6087, dt: 1185.28ms, fracRes: 0.0050, norm(attn): 0.2695, norm(output): 0.0449, norm(x): 0.0458, norm(y): 0.9881, norm:5.7359, tok/sec: 110583.26, flops:43.08, batch-reuse:1
@ 598 train 6.7577 , allloss: 7.7056, dt: 1199.45ms, fracRes: 0.0050, norm(attn): 0.2637, norm(output): 0.0444, norm(x): 0.0456, norm(y): 0.9881, norm:7.6870, tok/sec: 109276.73, flops:42.57, batch-reuse:1
@ 599 train 6.7760 , allloss: 7.6822, dt: 1205.23ms, fracRes: 0.0051, norm(attn): 0.2734, norm(output): 0.0432, norm(x): 0.0442, norm(y): 0.9881, norm:7.8183, tok/sec: 108752.62, flops:42.37, batch-reuse:1
@ 600 train 6.6774 , allloss: 7.5982, dt: 1221.63ms, fracRes: 0.0047, norm(attn): 0.2637, norm(output): 0.0437, norm(x): 0.0448, norm(y): 0.9881, norm:7.0964, tok/sec: 107292.83, flops:41.80, batch-reuse:1
@ 601 train 6.7400 , allloss: 7.6787, dt: 1197.69ms, fracRes: 0.0046, norm(attn): 0.2637, norm(output): 0.0444, norm(x): 0.0451, norm(y): 0.9880, norm:6.4665, tok/sec: 109437.66, flops:42.64, batch-reuse:1
@ 602 train 6.7388 , allloss: 7.6419, dt: 1207.32ms, fracRes: 0.0049, norm(attn): 0.2734, norm(output): 0.0432, norm(x): 0.0442, norm(y): 0.9880, norm:9.1768, tok/sec: 108564.49, flops:42.30, batch-reuse:1
@ 603 train 6.6618 , allloss: 7.5902, dt: 1223.67ms, fracRes: 0.0050, norm(attn): 0.2773, norm(output): 0.0432, norm(x): 0.0445, norm(y): 0.9879, norm:5.2063, tok/sec: 107113.95, flops:41.73, batch-reuse:1
@ 604 train 6.5956 , allloss: 7.6022, dt: 1198.08ms, fracRes: 0.0050, norm(attn): 0.2656, norm(output): 0.0464, norm(x): 0.0467, norm(y): 0.9879, norm:8.8874, tok/sec: 109402.03, flops:42.62, batch-reuse:1
@ 605 train 6.6271 , allloss: 7.5778, dt: 1192.37ms, fracRes: 0.0051, norm(attn): 0.2598, norm(output): 0.0452, norm(x): 0.0460, norm(y): 0.9879, norm:5.9620, tok/sec: 109925.44, flops:42.83, batch-reuse:1
@ 606 train 6.6429 , allloss: 7.5458, dt: 1190.19ms, fracRes: 0.0052, norm(attn): 0.2676, norm(output): 0.0435, norm(x): 0.0447, norm(y): 0.9880, norm:7.3149, tok/sec: 110127.08, flops:42.91, batch-reuse:1
@ 607 train 6.6310 , allloss: 7.5095, dt: 1194.10ms, fracRes: 0.0049, norm(attn): 0.2891, norm(output): 0.0422, norm(x): 0.0430, norm(y): 0.9878, norm:6.9536, tok/sec: 109766.23, flops:42.76, batch-reuse:1
@ 608 train 6.5426 , allloss: 7.4761, dt: 1221.43ms, fracRes: 0.0046, norm(attn): 0.2793, norm(output): 0.0430, norm(x): 0.0441, norm(y): 0.9876, norm:6.0726, tok/sec: 107309.99, flops:41.81, batch-reuse:1
@ 609 train 6.6296 , allloss: 7.5929, dt: 1232.28ms, fracRes: 0.0046, norm(attn): 0.2695, norm(output): 0.0439, norm(x): 0.0451, norm(y): 0.9876, norm:10.3818, tok/sec: 106365.11, flops:41.44, batch-reuse:1
@ 610 train 6.7815 , allloss: 7.7414, dt: 1199.04ms, fracRes: 0.0047, norm(attn): 0.2715, norm(output): 0.0432, norm(x): 0.0450, norm(y): 0.9877, norm:10.4306, tok/sec: 109313.80, flops:42.59, batch-reuse:1
@ 611 train 6.6831 , allloss: 7.6467, dt: 1213.81ms, fracRes: 0.0047, norm(attn): 0.2539, norm(output): 0.0454, norm(x): 0.0464, norm(y): 0.9877, norm:9.2201, tok/sec: 107983.53, flops:42.07, batch-reuse:1
@ 612 train 6.7212 , allloss: 7.6425, dt: 1183.78ms, fracRes: 0.0048, norm(attn): 0.2617, norm(output): 0.0447, norm(x): 0.0456, norm(y): 0.9877, norm:7.7147, tok/sec: 110722.97, flops:43.14, batch-reuse:1
@ 613 train 6.7833 , allloss: 7.6933, dt: 1203.52ms, fracRes: 0.0049, norm(attn): 0.2598, norm(output): 0.0444, norm(x): 0.0454, norm(y): 0.9877, norm:7.7070, tok/sec: 108907.37, flops:42.43, batch-reuse:1
@ 614 train 6.7147 , allloss: 7.6431, dt: 1194.72ms, fracRes: 0.0049, norm(attn): 0.2676, norm(output): 0.0437, norm(x): 0.0451, norm(y): 0.9877, norm:9.9048, tok/sec: 109709.14, flops:42.74, batch-reuse:1
@ 615 train 6.6819 , allloss: 7.6111, dt: 1189.59ms, fracRes: 0.0048, norm(attn): 0.2676, norm(output): 0.0435, norm(x): 0.0448, norm(y): 0.9876, norm:5.8903, tok/sec: 110182.92, flops:42.93, batch-reuse:1
@ 616 train 6.7137 , allloss: 7.6610, dt: 1220.10ms, fracRes: 0.0046, norm(attn): 0.2754, norm(output): 0.0432, norm(x): 0.0444, norm(y): 0.9875, norm:6.0912, tok/sec: 107427.56, flops:41.85, batch-reuse:1
@ 617 train 6.5083 , allloss: 7.4807, dt: 1185.34ms, fracRes: 0.0046, norm(attn): 0.2734, norm(output): 0.0449, norm(x): 0.0454, norm(y): 0.9874, norm:6.9273, tok/sec: 110577.76, flops:43.08, batch-reuse:1
@ 618 train 6.6543 , allloss: 7.6127, dt: 1185.73ms, fracRes: 0.0046, norm(attn): 0.2734, norm(output): 0.0442, norm(x): 0.0451, norm(y): 0.9874, norm:7.3660, tok/sec: 110541.17, flops:43.07, batch-reuse:1
@ 619 train 6.6167 , allloss: 7.5574, dt: 1202.77ms, fracRes: 0.0047, norm(attn): 0.2598, norm(output): 0.0444, norm(x): 0.0455, norm(y): 0.9874, norm:8.1630, tok/sec: 108974.71, flops:42.46, batch-reuse:1
@ 620 train 6.6109 , allloss: 7.5647, dt: 1196.09ms, fracRes: 0.0047, norm(attn): 0.2734, norm(output): 0.0439, norm(x): 0.0450, norm(y): 0.9874, norm:6.8612, tok/sec: 109583.34, flops:42.69, batch-reuse:1
@ 621 train 6.6213 , allloss: 7.5919, dt: 1208.64ms, fracRes: 0.0046, norm(attn): 0.2715, norm(output): 0.0444, norm(x): 0.0457, norm(y): 0.9873, norm:7.1732, tok/sec: 108446.30, flops:42.25, batch-reuse:1
@ 622 train 6.5443 , allloss: 7.4639, dt: 1237.01ms, fracRes: 0.0049, norm(attn): 0.2754, norm(output): 0.0437, norm(x): 0.0450, norm(y): 0.9873, norm:5.3595, tok/sec: 105958.91, flops:41.28, batch-reuse:1
@ 623 train 6.5739 , allloss: 7.4492, dt: 1201.73ms, fracRes: 0.0048, norm(attn): 0.2852, norm(output): 0.0430, norm(x): 0.0437, norm(y): 0.9872, norm:6.9491, tok/sec: 109069.16, flops:42.49, batch-reuse:1
@ 624 train 6.6740 , allloss: 7.5849, dt: 1192.87ms, fracRes: 0.0046, norm(attn): 0.2637, norm(output): 0.0442, norm(x): 0.0450, norm(y): 0.9873, norm:8.5187, tok/sec: 109879.57, flops:42.81, batch-reuse:1
@ 625 train 6.7358 , allloss: 7.6712, dt: 1197.33ms, fracRes: 0.0045, norm(attn): 0.2715, norm(output): 0.0435, norm(x): 0.0448, norm(y): 0.9872, norm:9.7250, tok/sec: 109469.89, flops:42.65, batch-reuse:1
@ 626 train 6.6237 , allloss: 7.5729, dt: 1200.94ms, fracRes: 0.0046, norm(attn): 0.2656, norm(output): 0.0452, norm(x): 0.0456, norm(y): 0.9872, norm:7.4674, tok/sec: 109141.10, flops:42.52, batch-reuse:1
@ 627 train 6.6296 , allloss: 7.5685, dt: 1182.09ms, fracRes: 0.0049, norm(attn): 0.2656, norm(output): 0.0444, norm(x): 0.0456, norm(y): 0.9872, norm:8.1519, tok/sec: 110881.15, flops:43.20, batch-reuse:1
@ 628 train 6.6619 , allloss: 7.5794, dt: 1222.89ms, fracRes: 0.0050, norm(attn): 0.2695, norm(output): 0.0435, norm(x): 0.0449, norm(y): 0.9872, norm:7.5709, tok/sec: 107181.78, flops:41.76, batch-reuse:1
@ 629 train 6.7003 , allloss: 7.6187, dt: 1204.91ms, fracRes: 0.0049, norm(attn): 0.2715, norm(output): 0.0437, norm(x): 0.0451, norm(y): 0.9871, norm:8.5102, tok/sec: 108781.57, flops:42.38, batch-reuse:1
@ 630 train 6.7839 , allloss: 7.7069, dt: 1203.79ms, fracRes: 0.0047, norm(attn): 0.2637, norm(output): 0.0444, norm(x): 0.0456, norm(y): 0.9872, norm:6.6963, tok/sec: 108882.72, flops:42.42, batch-reuse:1
@ 631 train 6.6865 , allloss: 7.6162, dt: 1185.61ms, fracRes: 0.0046, norm(attn): 0.2715, norm(output): 0.0442, norm(x): 0.0450, norm(y): 0.9871, norm:7.3077, tok/sec: 110552.04, flops:43.07, batch-reuse:1
@ 632 train 6.8227 , allloss: 7.7190, dt: 1174.32ms, fracRes: 0.0046, norm(attn): 0.2695, norm(output): 0.0435, norm(x): 0.0446, norm(y): 0.9870, norm:11.2319, tok/sec: 111615.66, flops:43.49, batch-reuse:1
@ 633 train 6.7491 , allloss: 7.6558, dt: 1195.28ms, fracRes: 0.0046, norm(attn): 0.2793, norm(output): 0.0435, norm(x): 0.0442, norm(y): 0.9870, norm:6.8980, tok/sec: 109657.92, flops:42.72, batch-reuse:1
@ 634 train 6.5417 , allloss: 7.4593, dt: 1184.96ms, fracRes: 0.0045, norm(attn): 0.2773, norm(output): 0.0432, norm(x): 0.0442, norm(y): 0.9869, norm:6.6717, tok/sec: 110612.87, flops:43.09, batch-reuse:1
@ 635 train 6.6923 , allloss: 7.6432, dt: 1199.62ms, fracRes: 0.0044, norm(attn): 0.2715, norm(output): 0.0442, norm(x): 0.0451, norm(y): 0.9868, norm:6.3136, tok/sec: 109260.98, flops:42.57, batch-reuse:1
@ 636 train 6.7318 , allloss: 7.6801, dt: 1183.76ms, fracRes: 0.0044, norm(attn): 0.2773, norm(output): 0.0439, norm(x): 0.0449, norm(y): 0.9867, norm:9.1725, tok/sec: 110724.93, flops:43.14, batch-reuse:1
@ 637 train 6.5549 , allloss: 7.4646, dt: 1185.89ms, fracRes: 0.0044, norm(attn): 0.2754, norm(output): 0.0430, norm(x): 0.0441, norm(y): 0.9868, norm:6.5498, tok/sec: 110526.39, flops:43.06, batch-reuse:1
@ 638 train 6.5436 , allloss: 7.4359, dt: 1173.45ms, fracRes: 0.0044, norm(attn): 0.2832, norm(output): 0.0427, norm(x): 0.0436, norm(y): 0.9868, norm:7.4418, tok/sec: 111698.10, flops:43.52, batch-reuse:1
@ 639 train 6.6589 , allloss: 7.5736, dt: 1177.58ms, fracRes: 0.0046, norm(attn): 0.2695, norm(output): 0.0439, norm(x): 0.0448, norm(y): 0.9867, norm:8.0094, tok/sec: 111305.87, flops:43.36, batch-reuse:1
@ 640 train 6.5755 , allloss: 7.4746, dt: 1205.15ms, fracRes: 0.0043, norm(attn): 0.2832, norm(output): 0.0430, norm(x): 0.0435, norm(y): 0.9867, norm:8.1399, tok/sec: 108760.09, flops:42.37, batch-reuse:1
@ 641 train 6.6467 , allloss: 7.5219, dt: 1207.41ms, fracRes: 0.0042, norm(attn): 0.2812, norm(output): 0.0425, norm(x): 0.0434, norm(y): 0.9867, norm:8.0616, tok/sec: 108556.28, flops:42.29, batch-reuse:1
@ 642 train 6.5140 , allloss: 7.3979, dt: 1178.15ms, fracRes: 0.0041, norm(attn): 0.2734, norm(output): 0.0430, norm(x): 0.0440, norm(y): 0.9867, norm:7.2556, tok/sec: 111252.55, flops:43.34, batch-reuse:1
@ 643 train 6.5464 , allloss: 7.4607, dt: 1230.16ms, fracRes: 0.0040, norm(attn): 0.2832, norm(output): 0.0432, norm(x): 0.0441, norm(y): 0.9865, norm:9.0130, tok/sec: 106548.78, flops:41.51, batch-reuse:1
@ 644 train 6.7375 , allloss: 7.6373, dt: 1199.60ms, fracRes: 0.0039, norm(attn): 0.2715, norm(output): 0.0437, norm(x): 0.0445, norm(y): 0.9865, norm:5.2945, tok/sec: 109263.48, flops:42.57, batch-reuse:1
@ 645 train 6.6784 , allloss: 7.5490, dt: 1195.62ms, fracRes: 0.0040, norm(attn): 0.2598, norm(output): 0.0432, norm(x): 0.0442, norm(y): 0.9867, norm:8.7360, tok/sec: 109626.91, flops:42.71, batch-reuse:1
@ 646 train 6.5660 , allloss: 7.4394, dt: 1188.36ms, fracRes: 0.0040, norm(attn): 0.2734, norm(output): 0.0430, norm(x): 0.0435, norm(y): 0.9867, norm:9.0407, tok/sec: 110296.74, flops:42.97, batch-reuse:1
@ 647 train 6.5917 , allloss: 7.4693, dt: 1183.34ms, fracRes: 0.0039, norm(attn): 0.2871, norm(output): 0.0425, norm(x): 0.0430, norm(y): 0.9865, norm:5.1996, tok/sec: 110764.86, flops:43.15, batch-reuse:1
@ 648 train 6.5005 , allloss: 7.3957, dt: 1192.25ms, fracRes: 0.0041, norm(attn): 0.2793, norm(output): 0.0430, norm(x): 0.0438, norm(y): 0.9865, norm:7.3351, tok/sec: 109936.61, flops:42.83, batch-reuse:1
@ 649 train 6.6417 , allloss: 7.5526, dt: 1205.53ms, fracRes: 0.0040, norm(attn): 0.2773, norm(output): 0.0435, norm(x): 0.0442, norm(y): 0.9864, norm:11.5671, tok/sec: 108725.95, flops:42.36, batch-reuse:1
@ 650 train 6.4948 , allloss: 7.3944, dt: 1234.09ms, fracRes: 0.0042, norm(attn): 0.2734, norm(output): 0.0435, norm(x): 0.0447, norm(y): 0.9864, norm:6.1795, tok/sec: 106209.53, flops:41.38, batch-reuse:1
@ 651 train 6.5925 , allloss: 7.4826, dt: 1232.20ms, fracRes: 0.0041, norm(attn): 0.2852, norm(output): 0.0430, norm(x): 0.0437, norm(y): 0.9863, norm:7.5647, tok/sec: 106372.66, flops:41.44, batch-reuse:1
@ 652 train 6.4670 , allloss: 7.3591, dt: 1212.05ms, fracRes: 0.0039, norm(attn): 0.2930, norm(output): 0.0422, norm(x): 0.0429, norm(y): 0.9863, norm:6.9842, tok/sec: 108140.59, flops:42.13, batch-reuse:1
@ 653 train 6.4796 , allloss: 7.3501, dt: 1208.53ms, fracRes: 0.0040, norm(attn): 0.2773, norm(output): 0.0430, norm(x): 0.0435, norm(y): 0.9864, norm:5.4845, tok/sec: 108455.54, flops:42.25, batch-reuse:1
@ 654 train 6.5414 , allloss: 7.4243, dt: 1196.50ms, fracRes: 0.0039, norm(attn): 0.2695, norm(output): 0.0430, norm(x): 0.0438, norm(y): 0.9864, norm:7.4760, tok/sec: 109546.45, flops:42.68, batch-reuse:1
@ 655 train 6.5470 , allloss: 7.4298, dt: 1188.95ms, fracRes: 0.0039, norm(attn): 0.2773, norm(output): 0.0430, norm(x): 0.0437, norm(y): 0.9863, norm:5.3055, tok/sec: 110241.36, flops:42.95, batch-reuse:1
@ 656 train 6.4955 , allloss: 7.3688, dt: 1195.77ms, fracRes: 0.0039, norm(attn): 0.2773, norm(output): 0.0432, norm(x): 0.0435, norm(y): 0.9862, norm:7.0741, tok/sec: 109613.47, flops:42.71, batch-reuse:1
@ 657 train 6.5245 , allloss: 7.3788, dt: 1209.70ms, fracRes: 0.0041, norm(attn): 0.2832, norm(output): 0.0430, norm(x): 0.0435, norm(y): 0.9862, norm:8.8692, tok/sec: 108350.82, flops:42.21, batch-reuse:1
@ 658 train 6.6247 , allloss: 7.4747, dt: 1188.42ms, fracRes: 0.0041, norm(attn): 0.2812, norm(output): 0.0430, norm(x): 0.0434, norm(y): 0.9862, norm:9.1739, tok/sec: 110290.86, flops:42.97, batch-reuse:1
@ 659 train 6.5694 , allloss: 7.4455, dt: 1204.08ms, fracRes: 0.0041, norm(attn): 0.2891, norm(output): 0.0427, norm(x): 0.0434, norm(y): 0.9861, norm:7.3141, tok/sec: 108856.50, flops:42.41, batch-reuse:1
@ 660 train 6.5944 , allloss: 7.4783, dt: 1190.20ms, fracRes: 0.0042, norm(attn): 0.2773, norm(output): 0.0435, norm(x): 0.0441, norm(y): 0.9861, norm:7.0366, tok/sec: 110126.13, flops:42.91, batch-reuse:1
@ 661 train 6.5619 , allloss: 7.4309, dt: 1209.14ms, fracRes: 0.0041, norm(attn): 0.2793, norm(output): 0.0427, norm(x): 0.0434, norm(y): 0.9861, norm:9.8508, tok/sec: 108401.07, flops:42.23, batch-reuse:1
@ 662 train 6.5924 , allloss: 7.4764, dt: 1208.07ms, fracRes: 0.0042, norm(attn): 0.2734, norm(output): 0.0435, norm(x): 0.0441, norm(y): 0.9860, norm:7.3842, tok/sec: 108496.66, flops:42.27, batch-reuse:1
@ 663 train 6.5634 , allloss: 7.4611, dt: 1197.17ms, fracRes: 0.0041, norm(attn): 0.2793, norm(output): 0.0432, norm(x): 0.0437, norm(y): 0.9860, norm:6.7801, tok/sec: 109484.93, flops:42.66, batch-reuse:1
@ 664 train 6.5028 , allloss: 7.3909, dt: 1221.06ms, fracRes: 0.0040, norm(attn): 0.2793, norm(output): 0.0430, norm(x): 0.0436, norm(y): 0.9860, norm:7.1019, tok/sec: 107343.03, flops:41.82, batch-reuse:1
@ 665 train 6.5574 , allloss: 7.4288, dt: 1218.12ms, fracRes: 0.0039, norm(attn): 0.2871, norm(output): 0.0430, norm(x): 0.0431, norm(y): 0.9859, norm:9.5413, tok/sec: 107602.06, flops:41.92, batch-reuse:1
@ 666 train 6.3823 , allloss: 7.2344, dt: 1202.51ms, fracRes: 0.0040, norm(attn): 0.2734, norm(output): 0.0430, norm(x): 0.0436, norm(y): 0.9859, norm:9.7325, tok/sec: 108998.60, flops:42.47, batch-reuse:1
@ 667 train 6.3438 , allloss: 7.1716, dt: 1174.68ms, fracRes: 0.0039, norm(attn): 0.2793, norm(output): 0.0427, norm(x): 0.0430, norm(y): 0.9859, norm:6.9973, tok/sec: 111581.00, flops:43.47, batch-reuse:1
@ 668 train 6.5796 , allloss: 7.3951, dt: 1173.46ms, fracRes: 0.0040, norm(attn): 0.2969, norm(output): 0.0415, norm(x): 0.0425, norm(y): 0.9859, norm:11.1382, tok/sec: 111697.08, flops:43.52, batch-reuse:1
@ 669 train 6.5201 , allloss: 7.3621, dt: 1204.24ms, fracRes: 0.0040, norm(attn): 0.2793, norm(output): 0.0427, norm(x): 0.0435, norm(y): 0.9858, norm:7.5762, tok/sec: 108841.95, flops:42.40, batch-reuse:1
@ 670 train 6.6190 , allloss: 7.4855, dt: 1184.39ms, fracRes: 0.0039, norm(attn): 0.2773, norm(output): 0.0430, norm(x): 0.0437, norm(y): 0.9857, norm:7.2643, tok/sec: 110666.62, flops:43.12, batch-reuse:1
@ 671 train 6.4812 , allloss: 7.3477, dt: 1204.67ms, fracRes: 0.0038, norm(attn): 0.2793, norm(output): 0.0430, norm(x): 0.0434, norm(y): 0.9857, norm:6.5502, tok/sec: 108803.40, flops:42.39, batch-reuse:1
@ 672 train 6.5102 , allloss: 7.3536, dt: 1236.90ms, fracRes: 0.0038, norm(attn): 0.2871, norm(output): 0.0422, norm(x): 0.0426, norm(y): 0.9856, norm:5.9030, tok/sec: 105967.79, flops:41.29, batch-reuse:1
@ 673 train 6.5378 , allloss: 7.3954, dt: 1213.42ms, fracRes: 0.0039, norm(attn): 0.2832, norm(output): 0.0430, norm(x): 0.0433, norm(y): 0.9857, norm:7.0577, tok/sec: 108019.05, flops:42.08, batch-reuse:1
@ 674 train 6.5456 , allloss: 7.3932, dt: 1191.06ms, fracRes: 0.0041, norm(attn): 0.2832, norm(output): 0.0427, norm(x): 0.0435, norm(y): 0.9858, norm:6.2096, tok/sec: 110046.20, flops:42.87, batch-reuse:1
@ 675 train 6.4287 , allloss: 7.2919, dt: 1214.80ms, fracRes: 0.0039, norm(attn): 0.2832, norm(output): 0.0430, norm(x): 0.0431, norm(y): 0.9857, norm:8.4314, tok/sec: 107896.30, flops:42.04, batch-reuse:1
@ 676 train 6.5165 , allloss: 7.3905, dt: 1213.32ms, fracRes: 0.0040, norm(attn): 0.2891, norm(output): 0.0427, norm(x): 0.0431, norm(y): 0.9856, norm:6.6373, tok/sec: 108027.94, flops:42.09, batch-reuse:1
@ 677 train 6.6450 , allloss: 7.5037, dt: 1197.95ms, fracRes: 0.0041, norm(attn): 0.2773, norm(output): 0.0435, norm(x): 0.0442, norm(y): 0.9857, norm:8.2530, tok/sec: 109413.88, flops:42.63, batch-reuse:1
@ 678 train 6.4582 , allloss: 7.2857, dt: 1209.01ms, fracRes: 0.0039, norm(attn): 0.2871, norm(output): 0.0427, norm(x): 0.0431, norm(y): 0.9856, norm:8.9639, tok/sec: 108412.96, flops:42.24, batch-reuse:1
@ 679 train 6.5437 , allloss: 7.3547, dt: 1179.74ms, fracRes: 0.0043, norm(attn): 0.2930, norm(output): 0.0425, norm(x): 0.0430, norm(y): 0.9856, norm:10.3664, tok/sec: 111102.29, flops:43.29, batch-reuse:1
@ 680 train 6.4935 , allloss: 7.3266, dt: 1201.09ms, fracRes: 0.0040, norm(attn): 0.2852, norm(output): 0.0427, norm(x): 0.0431, norm(y): 0.9855, norm:5.8670, tok/sec: 109127.62, flops:42.52, batch-reuse:1
@ 681 train 6.5301 , allloss: 7.3932, dt: 1193.70ms, fracRes: 0.0039, norm(attn): 0.2832, norm(output): 0.0425, norm(x): 0.0431, norm(y): 0.9854, norm:10.0843, tok/sec: 109802.97, flops:42.78, batch-reuse:1
@ 682 train 6.5499 , allloss: 7.4291, dt: 1180.83ms, fracRes: 0.0040, norm(attn): 0.2812, norm(output): 0.0430, norm(x): 0.0436, norm(y): 0.9853, norm:7.1465, tok/sec: 110999.49, flops:43.25, batch-reuse:1
@ 683 train 6.5004 , allloss: 7.3819, dt: 1198.48ms, fracRes: 0.0038, norm(attn): 0.2871, norm(output): 0.0427, norm(x): 0.0433, norm(y): 0.9852, norm:8.6291, tok/sec: 109365.31, flops:42.61, batch-reuse:1
@ 684 train 6.4583 , allloss: 7.3030, dt: 1191.24ms, fracRes: 0.0039, norm(attn): 0.2812, norm(output): 0.0427, norm(x): 0.0433, norm(y): 0.9853, norm:7.0478, tok/sec: 110029.70, flops:42.87, batch-reuse:1
@ 685 train 6.5444 , allloss: 7.3709, dt: 1209.03ms, fracRes: 0.0039, norm(attn): 0.2793, norm(output): 0.0427, norm(x): 0.0432, norm(y): 0.9854, norm:6.2077, tok/sec: 108410.95, flops:42.24, batch-reuse:1
@ 686 train 6.6190 , allloss: 7.4476, dt: 1241.03ms, fracRes: 0.0039, norm(attn): 0.2676, norm(output): 0.0432, norm(x): 0.0440, norm(y): 0.9854, norm:6.2225, tok/sec: 105615.40, flops:41.15, batch-reuse:1
@ 687 train 6.5302 , allloss: 7.3598, dt: 1202.38ms, fracRes: 0.0040, norm(attn): 0.2715, norm(output): 0.0430, norm(x): 0.0436, norm(y): 0.9853, norm:7.4652, tok/sec: 109010.62, flops:42.47, batch-reuse:1
@ 688 train 6.5685 , allloss: 7.4081, dt: 1178.79ms, fracRes: 0.0041, norm(attn): 0.2812, norm(output): 0.0430, norm(x): 0.0436, norm(y): 0.9852, norm:10.1780, tok/sec: 111191.98, flops:43.32, batch-reuse:1
@ 689 train 6.5171 , allloss: 7.3605, dt: 1208.30ms, fracRes: 0.0042, norm(attn): 0.2773, norm(output): 0.0432, norm(x): 0.0440, norm(y): 0.9851, norm:5.8953, tok/sec: 108476.40, flops:42.26, batch-reuse:1
@ 690 train 6.5194 , allloss: 7.3481, dt: 1222.73ms, fracRes: 0.0038, norm(attn): 0.2910, norm(output): 0.0425, norm(x): 0.0427, norm(y): 0.9850, norm:9.3267, tok/sec: 107195.93, flops:41.76, batch-reuse:1
@ 691 train 6.5201 , allloss: 7.3437, dt: 1206.82ms, fracRes: 0.0041, norm(attn): 0.2793, norm(output): 0.0430, norm(x): 0.0437, norm(y): 0.9851, norm:9.9977, tok/sec: 108609.25, flops:42.31, batch-reuse:1
@ 692 train 6.4587 , allloss: 7.2844, dt: 1214.49ms, fracRes: 0.0041, norm(attn): 0.2754, norm(output): 0.0432, norm(x): 0.0439, norm(y): 0.9852, norm:5.8275, tok/sec: 107923.41, flops:42.05, batch-reuse:1
@ 693 train 6.5130 , allloss: 7.3352, dt: 1236.81ms, fracRes: 0.0041, norm(attn): 0.2773, norm(output): 0.0430, norm(x): 0.0436, norm(y): 0.9852, norm:8.2748, tok/sec: 105975.53, flops:41.29, batch-reuse:1
@ 694 train 6.4320 , allloss: 7.2489, dt: 1232.15ms, fracRes: 0.0040, norm(attn): 0.2812, norm(output): 0.0427, norm(x): 0.0431, norm(y): 0.9851, norm:6.2784, tok/sec: 106376.82, flops:41.44, batch-reuse:1
@ 695 train 6.5109 , allloss: 7.3422, dt: 1213.58ms, fracRes: 0.0042, norm(attn): 0.2773, norm(output): 0.0430, norm(x): 0.0438, norm(y): 0.9850, norm:6.6580, tok/sec: 108004.64, flops:42.08, batch-reuse:1
@ 696 train 6.3781 , allloss: 7.2098, dt: 1240.97ms, fracRes: 0.0043, norm(attn): 0.2773, norm(output): 0.0430, norm(x): 0.0438, norm(y): 0.9850, norm:6.7615, tok/sec: 105620.55, flops:41.15, batch-reuse:1
@ 697 train 6.3970 , allloss: 7.2162, dt: 1210.59ms, fracRes: 0.0044, norm(attn): 0.2773, norm(output): 0.0427, norm(x): 0.0436, norm(y): 0.9850, norm:5.2198, tok/sec: 108270.89, flops:42.18, batch-reuse:1
@ 698 train 6.5112 , allloss: 7.3311, dt: 1212.96ms, fracRes: 0.0037, norm(attn): 0.2891, norm(output): 0.0415, norm(x): 0.0422, norm(y): 0.9848, norm:8.1542, tok/sec: 108059.94, flops:42.10, batch-reuse:1
@ 699 train 6.5383 , allloss: 7.3376, dt: 1237.05ms, fracRes: 0.0036, norm(attn): 0.2910, norm(output): 0.0410, norm(x): 0.0417, norm(y): 0.9847, norm:10.6800, tok/sec: 105954.99, flops:41.28, batch-reuse:1
@ 700 train 6.4770 , allloss: 7.2917, dt: 1181.69ms, fracRes: 0.0039, norm(attn): 0.2734, norm(output): 0.0430, norm(x): 0.0436, norm(y): 0.9848, norm:6.4490, tok/sec: 110919.13, flops:43.21, batch-reuse:1
@ 701 train 6.5712 , allloss: 7.3824, dt: 1198.40ms, fracRes: 0.0043, norm(attn): 0.2754, norm(output): 0.0430, norm(x): 0.0439, norm(y): 0.9849, norm:6.3810, tok/sec: 109372.95, flops:42.61, batch-reuse:1
@ 702 train 6.5697 , allloss: 7.3827, dt: 1205.77ms, fracRes: 0.0041, norm(attn): 0.2793, norm(output): 0.0430, norm(x): 0.0437, norm(y): 0.9847, norm:11.1778, tok/sec: 108704.22, flops:42.35, batch-reuse:1
@ 703 train 6.4921 , allloss: 7.2993, dt: 1209.12ms, fracRes: 0.0041, norm(attn): 0.2812, norm(output): 0.0427, norm(x): 0.0434, norm(y): 0.9847, norm:7.1239, tok/sec: 108403.04, flops:42.23, batch-reuse:1
@ 704 train 6.4174 , allloss: 7.2182, dt: 1192.69ms, fracRes: 0.0040, norm(attn): 0.2852, norm(output): 0.0425, norm(x): 0.0430, norm(y): 0.9846, norm:6.5706, tok/sec: 109896.08, flops:42.82, batch-reuse:1
@ 705 train 6.4662 , allloss: 7.2725, dt: 1192.59ms, fracRes: 0.0040, norm(attn): 0.2891, norm(output): 0.0427, norm(x): 0.0431, norm(y): 0.9845, norm:6.2048, tok/sec: 109905.16, flops:42.82, batch-reuse:1
@ 706 train 6.4729 , allloss: 7.2645, dt: 1195.02ms, fracRes: 0.0040, norm(attn): 0.2812, norm(output): 0.0425, norm(x): 0.0430, norm(y): 0.9845, norm:6.4670, tok/sec: 109682.20, flops:42.73, batch-reuse:1
@ 707 train 6.4937 , allloss: 7.2766, dt: 1204.13ms, fracRes: 0.0040, norm(attn): 0.2871, norm(output): 0.0420, norm(x): 0.0427, norm(y): 0.9846, norm:8.1817, tok/sec: 108852.43, flops:42.41, batch-reuse:1
@ 708 train 6.4877 , allloss: 7.2750, dt: 1206.48ms, fracRes: 0.0038, norm(attn): 0.2812, norm(output): 0.0427, norm(x): 0.0430, norm(y): 0.9845, norm:6.1373, tok/sec: 108640.35, flops:42.33, batch-reuse:1
@ 709 train 6.4617 , allloss: 7.2640, dt: 1212.39ms, fracRes: 0.0037, norm(attn): 0.2812, norm(output): 0.0430, norm(x): 0.0431, norm(y): 0.9844, norm:6.7682, tok/sec: 108110.11, flops:42.12, batch-reuse:1
@ 710 train 6.5565 , allloss: 7.3656, dt: 1232.97ms, fracRes: 0.0040, norm(attn): 0.2656, norm(output): 0.0430, norm(x): 0.0439, norm(y): 0.9844, norm:9.2465, tok/sec: 106305.99, flops:41.42, batch-reuse:1
@ 711 train 6.5626 , allloss: 7.3668, dt: 1222.13ms, fracRes: 0.0040, norm(attn): 0.2754, norm(output): 0.0427, norm(x): 0.0433, norm(y): 0.9844, norm:10.2364, tok/sec: 107248.84, flops:41.78, batch-reuse:1
@ 712 train 6.4240 , allloss: 7.2335, dt: 1196.02ms, fracRes: 0.0039, norm(attn): 0.2852, norm(output): 0.0427, norm(x): 0.0429, norm(y): 0.9843, norm:5.7954, tok/sec: 109589.69, flops:42.70, batch-reuse:1
@ 713 train 6.5279 , allloss: 7.3402, dt: 1185.72ms, fracRes: 0.0039, norm(attn): 0.2852, norm(output): 0.0427, norm(x): 0.0433, norm(y): 0.9842, norm:10.1578, tok/sec: 110542.17, flops:43.07, batch-reuse:1
@ 714 train 6.3971 , allloss: 7.2120, dt: 1187.70ms, fracRes: 0.0039, norm(attn): 0.2852, norm(output): 0.0430, norm(x): 0.0431, norm(y): 0.9842, norm:7.8638, tok/sec: 110358.19, flops:43.00, batch-reuse:1
@ 715 train 6.4291 , allloss: 7.2470, dt: 1206.87ms, fracRes: 0.0043, norm(attn): 0.2832, norm(output): 0.0427, norm(x): 0.0435, norm(y): 0.9843, norm:7.2084, tok/sec: 108605.07, flops:42.31, batch-reuse:1
@ 716 train 6.4960 , allloss: 7.3181, dt: 1193.18ms, fracRes: 0.0044, norm(attn): 0.2773, norm(output): 0.0430, norm(x): 0.0441, norm(y): 0.9842, norm:9.0013, tok/sec: 109851.24, flops:42.80, batch-reuse:1
@ 717 train 6.3090 , allloss: 7.1258, dt: 1201.90ms, fracRes: 0.0040, norm(attn): 0.2793, norm(output): 0.0430, norm(x): 0.0435, norm(y): 0.9842, norm:5.2655, tok/sec: 109053.85, flops:42.49, batch-reuse:1
@ 718 train 6.5059 , allloss: 7.3112, dt: 1185.61ms, fracRes: 0.0038, norm(attn): 0.2910, norm(output): 0.0425, norm(x): 0.0427, norm(y): 0.9841, norm:9.6103, tok/sec: 110552.10, flops:43.07, batch-reuse:1
@ 719 train 6.4522 , allloss: 7.2350, dt: 1199.79ms, fracRes: 0.0040, norm(attn): 0.2812, norm(output): 0.0422, norm(x): 0.0427, norm(y): 0.9841, norm:9.2356, tok/sec: 109245.42, flops:42.56, batch-reuse:1
@ 720 train 6.4137 , allloss: 7.2034, dt: 1205.16ms, fracRes: 0.0039, norm(attn): 0.2812, norm(output): 0.0425, norm(x): 0.0428, norm(y): 0.9841, norm:6.5257, tok/sec: 108759.44, flops:42.37, batch-reuse:1
@ 721 train 6.3769 , allloss: 7.1692, dt: 1212.35ms, fracRes: 0.0039, norm(attn): 0.2949, norm(output): 0.0422, norm(x): 0.0425, norm(y): 0.9839, norm:9.8844, tok/sec: 108114.39, flops:42.12, batch-reuse:1
@ 722 train 6.4337 , allloss: 7.2375, dt: 1209.20ms, fracRes: 0.0040, norm(attn): 0.2930, norm(output): 0.0427, norm(x): 0.0429, norm(y): 0.9839, norm:6.1428, tok/sec: 108395.92, flops:42.23, batch-reuse:1
@ 723 train 6.4921 , allloss: 7.2903, dt: 1187.67ms, fracRes: 0.0039, norm(attn): 0.2793, norm(output): 0.0427, norm(x): 0.0432, norm(y): 0.9840, norm:9.8204, tok/sec: 110360.69, flops:43.00, batch-reuse:1
@ 724 train 6.4544 , allloss: 7.2414, dt: 1232.21ms, fracRes: 0.0040, norm(attn): 0.2812, norm(output): 0.0422, norm(x): 0.0428, norm(y): 0.9840, norm:5.8095, tok/sec: 106371.61, flops:41.44, batch-reuse:1
@ 725 train 6.4502 , allloss: 7.2314, dt: 1221.63ms, fracRes: 0.0037, norm(attn): 0.2832, norm(output): 0.0422, norm(x): 0.0424, norm(y): 0.9839, norm:9.9550, tok/sec: 107292.90, flops:41.80, batch-reuse:1
@ 726 train 6.4689 , allloss: 7.2497, dt: 1226.95ms, fracRes: 0.0036, norm(attn): 0.2832, norm(output): 0.0422, norm(x): 0.0424, norm(y): 0.9838, norm:6.6721, tok/sec: 106827.55, flops:41.62, batch-reuse:1
@ 727 train 6.4639 , allloss: 7.2412, dt: 1221.55ms, fracRes: 0.0038, norm(attn): 0.2773, norm(output): 0.0427, norm(x): 0.0429, norm(y): 0.9839, norm:6.7242, tok/sec: 107299.99, flops:41.80, batch-reuse:1
@ 728 train 6.4649 , allloss: 7.2471, dt: 1194.81ms, fracRes: 0.0041, norm(attn): 0.2773, norm(output): 0.0427, norm(x): 0.0429, norm(y): 0.9839, norm:6.6174, tok/sec: 109701.55, flops:42.74, batch-reuse:1
@ 729 train 6.4165 , allloss: 7.2137, dt: 1182.67ms, fracRes: 0.0042, norm(attn): 0.2891, norm(output): 0.0420, norm(x): 0.0426, norm(y): 0.9838, norm:6.6353, tok/sec: 110827.32, flops:43.18, batch-reuse:1
@ 730 train 6.4244 , allloss: 7.2429, dt: 1220.04ms, fracRes: 0.0038, norm(attn): 0.2930, norm(output): 0.0417, norm(x): 0.0421, norm(y): 0.9835, norm:6.8250, tok/sec: 107432.96, flops:41.86, batch-reuse:1
@ 731 train 6.4781 , allloss: 7.2779, dt: 1237.49ms, fracRes: 0.0038, norm(attn): 0.2969, norm(output): 0.0410, norm(x): 0.0417, norm(y): 0.9835, norm:7.7490, tok/sec: 105917.91, flops:41.27, batch-reuse:1
@ 732 train 6.4038 , allloss: 7.1987, dt: 1202.79ms, fracRes: 0.0036, norm(attn): 0.2988, norm(output): 0.0408, norm(x): 0.0415, norm(y): 0.9834, norm:6.5467, tok/sec: 108973.34, flops:42.46, batch-reuse:1
@ 733 train 6.4522 , allloss: 7.2391, dt: 1190.38ms, fracRes: 0.0035, norm(attn): 0.3008, norm(output): 0.0405, norm(x): 0.0413, norm(y): 0.9834, norm:9.4899, tok/sec: 110109.79, flops:42.90, batch-reuse:1
@ 734 train 6.4511 , allloss: 7.2365, dt: 1179.83ms, fracRes: 0.0037, norm(attn): 0.2910, norm(output): 0.0405, norm(x): 0.0416, norm(y): 0.9834, norm:7.7152, tok/sec: 111093.90, flops:43.28, batch-reuse:1
@ 735 train 6.4608 , allloss: 7.2699, dt: 1173.62ms, fracRes: 0.0037, norm(attn): 0.2715, norm(output): 0.0422, norm(x): 0.0426, norm(y): 0.9835, norm:7.0588, tok/sec: 111681.58, flops:43.51, batch-reuse:1
@ 736 train 6.5073 , allloss: 7.3186, dt: 1203.04ms, fracRes: 0.0038, norm(attn): 0.2656, norm(output): 0.0425, norm(x): 0.0428, norm(y): 0.9835, norm:6.7054, tok/sec: 108950.24, flops:42.45, batch-reuse:1
@ 737 train 6.4184 , allloss: 7.2209, dt: 1194.48ms, fracRes: 0.0039, norm(attn): 0.2754, norm(output): 0.0425, norm(x): 0.0425, norm(y): 0.9835, norm:6.5657, tok/sec: 109731.15, flops:42.75, batch-reuse:1
@ 738 train 6.4748 , allloss: 7.2697, dt: 1187.44ms, fracRes: 0.0038, norm(attn): 0.2891, norm(output): 0.0415, norm(x): 0.0421, norm(y): 0.9834, norm:8.8395, tok/sec: 110381.94, flops:43.00, batch-reuse:1
@ 739 train 6.4724 , allloss: 7.2684, dt: 1184.78ms, fracRes: 0.0036, norm(attn): 0.2910, norm(output): 0.0415, norm(x): 0.0418, norm(y): 0.9832, norm:7.8808, tok/sec: 110629.68, flops:43.10, batch-reuse:1
@ 740 train 6.4132 , allloss: 7.2244, dt: 1193.26ms, fracRes: 0.0036, norm(attn): 0.2871, norm(output): 0.0422, norm(x): 0.0422, norm(y): 0.9832, norm:7.4872, tok/sec: 109843.93, flops:42.80, batch-reuse:1
@ 741 train 6.5229 , allloss: 7.3227, dt: 1204.55ms, fracRes: 0.0037, norm(attn): 0.2852, norm(output): 0.0413, norm(x): 0.0416, norm(y): 0.9831, norm:6.7508, tok/sec: 108814.36, flops:42.39, batch-reuse:1
@ 742 train 6.5930 , allloss: 7.3913, dt: 1192.58ms, fracRes: 0.0040, norm(attn): 0.2812, norm(output): 0.0408, norm(x): 0.0418, norm(y): 0.9832, norm:7.0550, tok/sec: 109906.21, flops:42.82, batch-reuse:1
@ 743 train 6.5521 , allloss: 7.3603, dt: 1211.84ms, fracRes: 0.0037, norm(attn): 0.2773, norm(output): 0.0415, norm(x): 0.0420, norm(y): 0.9831, norm:6.2240, tok/sec: 108159.63, flops:42.14, batch-reuse:1
@ 744 train 6.5712 , allloss: 7.3715, dt: 1179.39ms, fracRes: 0.0035, norm(attn): 0.2871, norm(output): 0.0408, norm(x): 0.0415, norm(y): 0.9829, norm:14.2396, tok/sec: 111135.06, flops:43.30, batch-reuse:1
@ 745 train 6.5350 , allloss: 7.3229, dt: 1176.59ms, fracRes: 0.0034, norm(attn): 0.2871, norm(output): 0.0415, norm(x): 0.0416, norm(y): 0.9830, norm:7.7256, tok/sec: 111399.78, flops:43.40, batch-reuse:1
@ 746 train 6.5694 , allloss: 7.3660, dt: 1190.40ms, fracRes: 0.0036, norm(attn): 0.2773, norm(output): 0.0427, norm(x): 0.0425, norm(y): 0.9831, norm:6.6362, tok/sec: 110107.87, flops:42.90, batch-reuse:1
@ 747 train 6.5450 , allloss: 7.3323, dt: 1171.83ms, fracRes: 0.0037, norm(attn): 0.2832, norm(output): 0.0417, norm(x): 0.0421, norm(y): 0.9831, norm:7.0228, tok/sec: 111852.70, flops:43.58, batch-reuse:1
@ 748 train 6.5729 , allloss: 7.3726, dt: 1203.62ms, fracRes: 0.0035, norm(attn): 0.2812, norm(output): 0.0420, norm(x): 0.0423, norm(y): 0.9830, norm:6.3403, tok/sec: 108898.55, flops:42.43, batch-reuse:1
@ 749 train 6.6820 , allloss: 7.4836, dt: 1196.25ms, fracRes: 0.0035, norm(attn): 0.2754, norm(output): 0.0427, norm(x): 0.0427, norm(y): 0.9830, norm:7.3065, tok/sec: 109569.07, flops:42.69, batch-reuse:1
@ 750 train 6.6111 , allloss: 7.4056, dt: 1200.59ms, fracRes: 0.0034, norm(attn): 0.2793, norm(output): 0.0417, norm(x): 0.0423, norm(y): 0.9829, norm:6.4692, tok/sec: 109173.02, flops:42.53, batch-reuse:1
@ 751 train 6.5485 , allloss: 7.3416, dt: 1207.37ms, fracRes: 0.0034, norm(attn): 0.2852, norm(output): 0.0415, norm(x): 0.0418, norm(y): 0.9829, norm:7.2141, tok/sec: 108559.58, flops:42.29, batch-reuse:1
@ 752 train 6.5414 , allloss: 7.3239, dt: 1194.65ms, fracRes: 0.0036, norm(attn): 0.2773, norm(output): 0.0417, norm(x): 0.0420, norm(y): 0.9829, norm:6.9244, tok/sec: 109716.13, flops:42.75, batch-reuse:1
@ 753 train 6.5394 , allloss: 7.3150, dt: 1184.60ms, fracRes: 0.0036, norm(attn): 0.2773, norm(output): 0.0422, norm(x): 0.0423, norm(y): 0.9829, norm:5.8231, tok/sec: 110646.35, flops:43.11, batch-reuse:1
@ 754 train 6.5174 , allloss: 7.2950, dt: 1177.19ms, fracRes: 0.0033, norm(attn): 0.2871, norm(output): 0.0415, norm(x): 0.0415, norm(y): 0.9828, norm:7.7220, tok/sec: 111343.56, flops:43.38, batch-reuse:1
@ 755 train 6.6210 , allloss: 7.4241, dt: 1193.54ms, fracRes: 0.0035, norm(attn): 0.2832, norm(output): 0.0425, norm(x): 0.0423, norm(y): 0.9828, norm:6.9696, tok/sec: 109818.15, flops:42.79, batch-reuse:1
@ 756 train 6.4957 , allloss: 7.2858, dt: 1208.88ms, fracRes: 0.0035, norm(attn): 0.2852, norm(output): 0.0417, norm(x): 0.0421, norm(y): 0.9828, norm:5.2924, tok/sec: 108424.50, flops:42.24, batch-reuse:1
@ 757 train 6.5458 , allloss: 7.3512, dt: 1205.68ms, fracRes: 0.0036, norm(attn): 0.2871, norm(output): 0.0420, norm(x): 0.0422, norm(y): 0.9827, norm:6.7002, tok/sec: 108711.80, flops:42.35, batch-reuse:1
@ 758 train 6.4815 , allloss: 7.2478, dt: 1202.73ms, fracRes: 0.0031, norm(attn): 0.3008, norm(output): 0.0405, norm(x): 0.0406, norm(y): 0.9825, norm:9.0138, tok/sec: 108978.68, flops:42.46, batch-reuse:1
@ 759 train 6.5643 , allloss: 7.3422, dt: 1222.00ms, fracRes: 0.0034, norm(attn): 0.2891, norm(output): 0.0410, norm(x): 0.0414, norm(y): 0.9826, norm:9.5833, tok/sec: 107260.57, flops:41.79, batch-reuse:1
@ 760 train 6.5587 , allloss: 7.3628, dt: 1227.92ms, fracRes: 0.0037, norm(attn): 0.2812, norm(output): 0.0422, norm(x): 0.0424, norm(y): 0.9827, norm:7.8567, tok/sec: 106743.13, flops:41.59, batch-reuse:1
@ 761 train 6.5537 , allloss: 7.3650, dt: 1225.08ms, fracRes: 0.0036, norm(attn): 0.2793, norm(output): 0.0422, norm(x): 0.0424, norm(y): 0.9826, norm:5.5142, tok/sec: 106990.27, flops:41.68, batch-reuse:1
@ 762 train 6.5538 , allloss: 7.3403, dt: 1244.72ms, fracRes: 0.0034, norm(attn): 0.2793, norm(output): 0.0417, norm(x): 0.0420, norm(y): 0.9825, norm:8.7192, tok/sec: 105302.02, flops:41.03, batch-reuse:1
@ 763 train 6.5974 , allloss: 7.3871, dt: 1183.24ms, fracRes: 0.0035, norm(attn): 0.2812, norm(output): 0.0417, norm(x): 0.0418, norm(y): 0.9825, norm:7.1947, tok/sec: 110773.63, flops:43.16, batch-reuse:1
@ 764 train 6.5529 , allloss: 7.3503, dt: 1178.32ms, fracRes: 0.0037, norm(attn): 0.2793, norm(output): 0.0417, norm(x): 0.0420, norm(y): 0.9825, norm:6.3071, tok/sec: 111236.75, flops:43.34, batch-reuse:1
@ 765 train 6.5371 , allloss: 7.3301, dt: 1175.82ms, fracRes: 0.0036, norm(attn): 0.2812, norm(output): 0.0415, norm(x): 0.0420, norm(y): 0.9825, norm:8.5630, tok/sec: 111473.04, flops:43.43, batch-reuse:1
@ 766 train 6.4590 , allloss: 7.2520, dt: 1182.66ms, fracRes: 0.0033, norm(attn): 0.2832, norm(output): 0.0415, norm(x): 0.0417, norm(y): 0.9823, norm:6.0360, tok/sec: 110827.83, flops:43.18, batch-reuse:1
@ 767 train 6.5540 , allloss: 7.3561, dt: 1196.23ms, fracRes: 0.0033, norm(attn): 0.2793, norm(output): 0.0417, norm(x): 0.0419, norm(y): 0.9823, norm:6.6455, tok/sec: 109571.30, flops:42.69, batch-reuse:1
@ 768 train 6.6443 , allloss: 7.4491, dt: 1204.55ms, fracRes: 0.0034, norm(attn): 0.2754, norm(output): 0.0415, norm(x): 0.0418, norm(y): 0.9823, norm:6.5079, tok/sec: 108814.27, flops:42.39, batch-reuse:1
@ 769 train 6.5064 , allloss: 7.3205, dt: 1215.20ms, fracRes: 0.0033, norm(attn): 0.2695, norm(output): 0.0420, norm(x): 0.0421, norm(y): 0.9823, norm:8.5452, tok/sec: 107860.31, flops:42.02, batch-reuse:1
@ 770 train 6.5056 , allloss: 7.3050, dt: 1178.67ms, fracRes: 0.0032, norm(attn): 0.2754, norm(output): 0.0415, norm(x): 0.0418, norm(y): 0.9823, norm:8.5701, tok/sec: 111203.45, flops:43.32, batch-reuse:1
@ 771 train 6.4450 , allloss: 7.2434, dt: 1192.58ms, fracRes: 0.0034, norm(attn): 0.2812, norm(output): 0.0417, norm(x): 0.0418, norm(y): 0.9822, norm:5.2655, tok/sec: 109906.61, flops:42.82, batch-reuse:1
@ 772 train 6.5137 , allloss: 7.2937, dt: 1207.32ms, fracRes: 0.0033, norm(attn): 0.2832, norm(output): 0.0405, norm(x): 0.0413, norm(y): 0.9821, norm:8.9055, tok/sec: 108564.25, flops:42.30, batch-reuse:1
@ 773 train 6.5956 , allloss: 7.3880, dt: 1202.72ms, fracRes: 0.0037, norm(attn): 0.2734, norm(output): 0.0422, norm(x): 0.0423, norm(y): 0.9822, norm:7.2929, tok/sec: 108979.93, flops:42.46, batch-reuse:1
@ 774 train 6.4680 , allloss: 7.2518, dt: 1209.40ms, fracRes: 0.0034, norm(attn): 0.2773, norm(output): 0.0417, norm(x): 0.0421, norm(y): 0.9821, norm:6.3145, tok/sec: 108377.61, flops:42.22, batch-reuse:1
@ 775 train 6.6122 , allloss: 7.3834, dt: 1220.22ms, fracRes: 0.0034, norm(attn): 0.2793, norm(output): 0.0413, norm(x): 0.0416, norm(y): 0.9821, norm:9.1880, tok/sec: 107416.35, flops:41.85, batch-reuse:1
@ 776 train 6.3979 , allloss: 7.1665, dt: 1222.18ms, fracRes: 0.0034, norm(attn): 0.2832, norm(output): 0.0415, norm(x): 0.0416, norm(y): 0.9821, norm:6.7914, tok/sec: 107244.65, flops:41.78, batch-reuse:1
@ 777 train 6.4715 , allloss: 7.2622, dt: 1198.27ms, fracRes: 0.0033, norm(attn): 0.2715, norm(output): 0.0420, norm(x): 0.0423, norm(y): 0.9821, norm:6.9354, tok/sec: 109384.38, flops:42.62, batch-reuse:1
@ 778 train 6.4636 , allloss: 7.2596, dt: 1202.69ms, fracRes: 0.0033, norm(attn): 0.2754, norm(output): 0.0417, norm(x): 0.0420, norm(y): 0.9820, norm:4.9033, tok/sec: 108982.44, flops:42.46, batch-reuse:1
@ 779 train 6.5184 , allloss: 7.3064, dt: 1179.48ms, fracRes: 0.0036, norm(attn): 0.2734, norm(output): 0.0417, norm(x): 0.0422, norm(y): 0.9820, norm:8.2154, tok/sec: 111126.84, flops:43.30, batch-reuse:1
@ 780 train 6.4846 , allloss: 7.2942, dt: 1181.37ms, fracRes: 0.0038, norm(attn): 0.2754, norm(output): 0.0425, norm(x): 0.0427, norm(y): 0.9821, norm:8.4356, tok/sec: 110949.04, flops:43.23, batch-reuse:1
@ 781 train 6.4793 , allloss: 7.3204, dt: 1205.44ms, fracRes: 0.0040, norm(attn): 0.2637, norm(output): 0.0432, norm(x): 0.0437, norm(y): 0.9821, norm:9.7630, tok/sec: 108733.99, flops:42.36, batch-reuse:1
@ 782 train 6.4666 , allloss: 7.2682, dt: 1195.84ms, fracRes: 0.0035, norm(attn): 0.2734, norm(output): 0.0415, norm(x): 0.0419, norm(y): 0.9818, norm:4.6858, tok/sec: 109606.19, flops:42.70, batch-reuse:1
@ 783 train 6.4564 , allloss: 7.2420, dt: 1192.86ms, fracRes: 0.0033, norm(attn): 0.2812, norm(output): 0.0400, norm(x): 0.0409, norm(y): 0.9816, norm:7.1111, tok/sec: 109880.40, flops:42.81, batch-reuse:1
@ 784 train 6.4672 , allloss: 7.2613, dt: 1204.15ms, fracRes: 0.0034, norm(attn): 0.2773, norm(output): 0.0413, norm(x): 0.0416, norm(y): 0.9817, norm:5.1250, tok/sec: 108850.19, flops:42.41, batch-reuse:1
@ 785 train 6.4650 , allloss: 7.2664, dt: 1208.32ms, fracRes: 0.0034, norm(attn): 0.2754, norm(output): 0.0415, norm(x): 0.0418, norm(y): 0.9818, norm:6.4591, tok/sec: 108474.63, flops:42.26, batch-reuse:1
@ 786 train 6.4509 , allloss: 7.2622, dt: 1186.47ms, fracRes: 0.0033, norm(attn): 0.2773, norm(output): 0.0420, norm(x): 0.0423, norm(y): 0.9818, norm:9.6602, tok/sec: 110472.35, flops:43.04, batch-reuse:1
@ 787 train 6.4698 , allloss: 7.2824, dt: 1192.82ms, fracRes: 0.0036, norm(attn): 0.2695, norm(output): 0.0425, norm(x): 0.0426, norm(y): 0.9819, norm:5.1614, tok/sec: 109884.11, flops:42.81, batch-reuse:1
@ 788 train 6.5390 , allloss: 7.3411, dt: 1193.01ms, fracRes: 0.0038, norm(attn): 0.2676, norm(output): 0.0422, norm(x): 0.0427, norm(y): 0.9819, norm:7.7399, tok/sec: 109866.28, flops:42.80, batch-reuse:1
@ 789 train 6.4308 , allloss: 7.2267, dt: 1181.02ms, fracRes: 0.0038, norm(attn): 0.2754, norm(output): 0.0417, norm(x): 0.0425, norm(y): 0.9818, norm:7.4945, tok/sec: 110981.74, flops:43.24, batch-reuse:1
@ 790 train 6.4359 , allloss: 7.2471, dt: 1187.73ms, fracRes: 0.0037, norm(attn): 0.2793, norm(output): 0.0417, norm(x): 0.0424, norm(y): 0.9817, norm:6.3607, tok/sec: 110354.77, flops:42.99, batch-reuse:1
@ 791 train 6.5755 , allloss: 7.3602, dt: 1206.09ms, fracRes: 0.0035, norm(attn): 0.2773, norm(output): 0.0415, norm(x): 0.0419, norm(y): 0.9815, norm:6.8307, tok/sec: 108674.95, flops:42.34, batch-reuse:1
@ 792 train 6.5150 , allloss: 7.2623, dt: 1227.52ms, fracRes: 0.0033, norm(attn): 0.2832, norm(output): 0.0408, norm(x): 0.0410, norm(y): 0.9814, norm:7.5445, tok/sec: 106777.85, flops:41.60, batch-reuse:1
@ 793 train 6.5383 , allloss: 7.3042, dt: 1216.17ms, fracRes: 0.0036, norm(attn): 0.2637, norm(output): 0.0420, norm(x): 0.0424, norm(y): 0.9816, norm:11.5807, tok/sec: 107774.63, flops:41.99, batch-reuse:1
@ 794 train 6.6053 , allloss: 7.3951, dt: 1188.56ms, fracRes: 0.0034, norm(attn): 0.2637, norm(output): 0.0420, norm(x): 0.0425, norm(y): 0.9815, norm:6.6882, tok/sec: 110277.72, flops:42.96, batch-reuse:1
@ 795 train 6.4265 , allloss: 7.2224, dt: 1211.15ms, fracRes: 0.0033, norm(attn): 0.2578, norm(output): 0.0425, norm(x): 0.0425, norm(y): 0.9814, norm:6.8617, tok/sec: 108221.18, flops:42.16, batch-reuse:1
@ 796 train 6.3876 , allloss: 7.1729, dt: 1190.15ms, fracRes: 0.0034, norm(attn): 0.2656, norm(output): 0.0422, norm(x): 0.0426, norm(y): 0.9815, norm:7.8011, tok/sec: 110130.72, flops:42.91, batch-reuse:1
@ 797 train 6.4908 , allloss: 7.2903, dt: 1192.35ms, fracRes: 0.0037, norm(attn): 0.2695, norm(output): 0.0415, norm(x): 0.0423, norm(y): 0.9815, norm:6.4941, tok/sec: 109927.09, flops:42.83, batch-reuse:1
@ 798 train 6.4954 , allloss: 7.2899, dt: 1188.73ms, fracRes: 0.0036, norm(attn): 0.2637, norm(output): 0.0417, norm(x): 0.0424, norm(y): 0.9813, norm:5.3115, tok/sec: 110262.30, flops:42.96, batch-reuse:1
@ 799 train 6.4959 , allloss: 7.2677, dt: 1178.70ms, fracRes: 0.0035, norm(attn): 0.2676, norm(output): 0.0417, norm(x): 0.0422, norm(y): 0.9813, norm:5.1749, tok/sec: 111200.84, flops:43.32, batch-reuse:1
@ 800 train 6.4158 , allloss: 7.1742, dt: 1194.45ms, fracRes: 0.0033, norm(attn): 0.2832, norm(output): 0.0405, norm(x): 0.0413, norm(y): 0.9812, norm:6.4938, tok/sec: 109734.52, flops:42.75, batch-reuse:1
@ 801 train 6.4580 , allloss: 7.2448, dt: 1204.26ms, fracRes: 0.0037, norm(attn): 0.2676, norm(output): 0.0417, norm(x): 0.0424, norm(y): 0.9812, norm:9.9122, tok/sec: 108840.23, flops:42.40, batch-reuse:1
@ 802 train 6.4967 , allloss: 7.2871, dt: 1208.11ms, fracRes: 0.0038, norm(attn): 0.2676, norm(output): 0.0417, norm(x): 0.0423, norm(y): 0.9813, norm:7.1327, tok/sec: 108493.77, flops:42.27, batch-reuse:1
@ 803 train 6.5315 , allloss: 7.3277, dt: 1204.25ms, fracRes: 0.0038, norm(attn): 0.2695, norm(output): 0.0417, norm(x): 0.0423, norm(y): 0.9811, norm:6.0813, tok/sec: 108840.90, flops:42.40, batch-reuse:1
@ 804 train 6.4123 , allloss: 7.1976, dt: 1210.88ms, fracRes: 0.0033, norm(attn): 0.2812, norm(output): 0.0415, norm(x): 0.0417, norm(y): 0.9810, norm:5.5849, tok/sec: 108245.26, flops:42.17, batch-reuse:1
@ 805 train 6.5199 , allloss: 7.2941, dt: 1179.53ms, fracRes: 0.0032, norm(attn): 0.2754, norm(output): 0.0405, norm(x): 0.0414, norm(y): 0.9809, norm:8.7542, tok/sec: 111122.30, flops:43.29, batch-reuse:1
@ 806 train 6.4073 , allloss: 7.1867, dt: 1185.07ms, fracRes: 0.0032, norm(attn): 0.2871, norm(output): 0.0403, norm(x): 0.0411, norm(y): 0.9808, norm:6.7521, tok/sec: 110602.43, flops:43.09, batch-reuse:1
@ 807 train 6.4659 , allloss: 7.2487, dt: 1179.72ms, fracRes: 0.0035, norm(attn): 0.2773, norm(output): 0.0410, norm(x): 0.0415, norm(y): 0.9808, norm:9.3726, tok/sec: 111103.98, flops:43.29, batch-reuse:1
@ 808 train 6.4315 , allloss: 7.2052, dt: 1180.77ms, fracRes: 0.0036, norm(attn): 0.2754, norm(output): 0.0415, norm(x): 0.0418, norm(y): 0.9809, norm:6.6971, tok/sec: 111005.90, flops:43.25, batch-reuse:1
@ 809 train 6.4402 , allloss: 7.2084, dt: 1196.46ms, fracRes: 0.0036, norm(attn): 0.2656, norm(output): 0.0413, norm(x): 0.0419, norm(y): 0.9809, norm:5.7274, tok/sec: 109550.19, flops:42.68, batch-reuse:1
@ 810 train 6.5021 , allloss: 7.2692, dt: 1191.06ms, fracRes: 0.0032, norm(attn): 0.2715, norm(output): 0.0405, norm(x): 0.0411, norm(y): 0.9807, norm:10.7289, tok/sec: 110046.66, flops:42.87, batch-reuse:1
@ 811 train 6.5049 , allloss: 7.2862, dt: 1183.30ms, fracRes: 0.0034, norm(attn): 0.2695, norm(output): 0.0425, norm(x): 0.0423, norm(y): 0.9806, norm:6.6767, tok/sec: 110768.23, flops:43.16, batch-reuse:1
@ 812 train 6.3497 , allloss: 7.0956, dt: 1189.71ms, fracRes: 0.0033, norm(attn): 0.2715, norm(output): 0.0408, norm(x): 0.0413, norm(y): 0.9806, norm:6.2731, tok/sec: 110171.06, flops:42.92, batch-reuse:1
@ 813 train 6.6074 , allloss: 7.3600, dt: 1162.84ms, fracRes: 0.0031, norm(attn): 0.2812, norm(output): 0.0398, norm(x): 0.0404, norm(y): 0.9805, norm:11.6870, tok/sec: 112716.90, flops:43.91, batch-reuse:1
@ 814 train 6.5300 , allloss: 7.2984, dt: 1199.75ms, fracRes: 0.0033, norm(attn): 0.2715, norm(output): 0.0405, norm(x): 0.0412, norm(y): 0.9806, norm:7.1861, tok/sec: 109249.69, flops:42.56, batch-reuse:1
@ 815 train 6.4022 , allloss: 7.1784, dt: 1182.00ms, fracRes: 0.0036, norm(attn): 0.2695, norm(output): 0.0413, norm(x): 0.0418, norm(y): 0.9806, norm:8.3444, tok/sec: 110890.38, flops:43.20, batch-reuse:1
@ 816 train 6.4537 , allloss: 7.2404, dt: 1188.54ms, fracRes: 0.0037, norm(attn): 0.2695, norm(output): 0.0405, norm(x): 0.0417, norm(y): 0.9805, norm:7.4466, tok/sec: 110279.93, flops:42.97, batch-reuse:1
@ 817 train 6.3984 , allloss: 7.2019, dt: 1185.71ms, fracRes: 0.0036, norm(attn): 0.2695, norm(output): 0.0417, norm(x): 0.0420, norm(y): 0.9804, norm:8.8977, tok/sec: 110543.21, flops:43.07, batch-reuse:1
@ 818 train 6.4177 , allloss: 7.2052, dt: 1187.73ms, fracRes: 0.0033, norm(attn): 0.2754, norm(output): 0.0417, norm(x): 0.0418, norm(y): 0.9803, norm:7.4950, tok/sec: 110354.64, flops:42.99, batch-reuse:1
@ 819 train 6.5186 , allloss: 7.3188, dt: 1197.24ms, fracRes: 0.0034, norm(attn): 0.2676, norm(output): 0.0425, norm(x): 0.0424, norm(y): 0.9803, norm:9.0195, tok/sec: 109478.33, flops:42.65, batch-reuse:1
@ 820 train 6.5626 , allloss: 7.3346, dt: 1193.36ms, fracRes: 0.0033, norm(attn): 0.2656, norm(output): 0.0415, norm(x): 0.0418, norm(y): 0.9804, norm:6.2854, tok/sec: 109834.45, flops:42.79, batch-reuse:1
@ 821 train 6.4948 , allloss: 7.2413, dt: 1201.64ms, fracRes: 0.0033, norm(attn): 0.2773, norm(output): 0.0408, norm(x): 0.0413, norm(y): 0.9804, norm:9.3956, tok/sec: 109077.60, flops:42.50, batch-reuse:1
@ 822 train 6.5803 , allloss: 7.3417, dt: 1199.95ms, fracRes: 0.0034, norm(attn): 0.2637, norm(output): 0.0417, norm(x): 0.0419, norm(y): 0.9804, norm:6.5752, tok/sec: 109230.83, flops:42.56, batch-reuse:1
@ 823 train 6.4095 , allloss: 7.1795, dt: 1241.38ms, fracRes: 0.0033, norm(attn): 0.2578, norm(output): 0.0420, norm(x): 0.0419, norm(y): 0.9803, norm:6.9619, tok/sec: 105585.64, flops:41.14, batch-reuse:1
@ 824 train 6.5827 , allloss: 7.3698, dt: 1214.55ms, fracRes: 0.0033, norm(attn): 0.2539, norm(output): 0.0420, norm(x): 0.0424, norm(y): 0.9803, norm:7.6642, tok/sec: 107917.99, flops:42.04, batch-reuse:1
@ 825 train 6.4604 , allloss: 7.2728, dt: 1185.34ms, fracRes: 0.0034, norm(attn): 0.2578, norm(output): 0.0425, norm(x): 0.0426, norm(y): 0.9802, norm:7.4489, tok/sec: 110577.54, flops:43.08, batch-reuse:1
@ 826 train 6.4243 , allloss: 7.2447, dt: 1204.44ms, fracRes: 0.0034, norm(attn): 0.2812, norm(output): 0.0410, norm(x): 0.0416, norm(y): 0.9799, norm:5.9618, tok/sec: 108823.68, flops:42.40, batch-reuse:1
@ 827 train 6.5245 , allloss: 7.3075, dt: 1212.67ms, fracRes: 0.0034, norm(attn): 0.2695, norm(output): 0.0420, norm(x): 0.0419, norm(y): 0.9800, norm:8.3135, tok/sec: 108085.07, flops:42.11, batch-reuse:1
@ 828 train 6.4354 , allloss: 7.2152, dt: 1177.84ms, fracRes: 0.0037, norm(attn): 0.2676, norm(output): 0.0422, norm(x): 0.0424, norm(y): 0.9800, norm:7.1193, tok/sec: 111281.44, flops:43.36, batch-reuse:1
@ 829 train 6.4515 , allloss: 7.2191, dt: 1200.47ms, fracRes: 0.0035, norm(attn): 0.2793, norm(output): 0.0417, norm(x): 0.0417, norm(y): 0.9799, norm:5.9369, tok/sec: 109183.49, flops:42.54, batch-reuse:1
@ 830 train 6.4589 , allloss: 7.2113, dt: 1172.03ms, fracRes: 0.0034, norm(attn): 0.2754, norm(output): 0.0415, norm(x): 0.0416, norm(y): 0.9799, norm:7.1076, tok/sec: 111833.52, flops:43.57, batch-reuse:1
@ 831 train 6.4971 , allloss: 7.2524, dt: 1189.00ms, fracRes: 0.0032, norm(attn): 0.2793, norm(output): 0.0405, norm(x): 0.0411, norm(y): 0.9798, norm:6.7847, tok/sec: 110236.85, flops:42.95, batch-reuse:1
@ 832 train 6.4836 , allloss: 7.2380, dt: 1175.93ms, fracRes: 0.0030, norm(attn): 0.2773, norm(output): 0.0405, norm(x): 0.0411, norm(y): 0.9798, norm:4.9650, tok/sec: 111462.84, flops:43.43, batch-reuse:1
@ 833 train 6.3542 , allloss: 7.1146, dt: 1200.50ms, fracRes: 0.0031, norm(attn): 0.2715, norm(output): 0.0413, norm(x): 0.0414, norm(y): 0.9798, norm:4.6527, tok/sec: 109181.09, flops:42.54, batch-reuse:1
@ 834 train 6.3973 , allloss: 7.1497, dt: 1170.76ms, fracRes: 0.0030, norm(attn): 0.2695, norm(output): 0.0408, norm(x): 0.0412, norm(y): 0.9798, norm:6.4040, tok/sec: 111954.91, flops:43.62, batch-reuse:1
@ 835 train 6.3314 , allloss: 7.0788, dt: 1188.48ms, fracRes: 0.0031, norm(attn): 0.2656, norm(output): 0.0415, norm(x): 0.0414, norm(y): 0.9798, norm:7.9353, tok/sec: 110285.00, flops:42.97, batch-reuse:1
@ 836 train 6.3686 , allloss: 7.1091, dt: 1206.16ms, fracRes: 0.0029, norm(attn): 0.2754, norm(output): 0.0403, norm(x): 0.0406, norm(y): 0.9796, norm:5.6814, tok/sec: 108668.81, flops:42.34, batch-reuse:1
@ 837 train 6.4058 , allloss: 7.1606, dt: 1187.73ms, fracRes: 0.0030, norm(attn): 0.2598, norm(output): 0.0417, norm(x): 0.0416, norm(y): 0.9797, norm:7.1053, tok/sec: 110354.91, flops:42.99, batch-reuse:1
@ 838 train 6.3513 , allloss: 7.1029, dt: 1193.67ms, fracRes: 0.0029, norm(attn): 0.2695, norm(output): 0.0403, norm(x): 0.0408, norm(y): 0.9795, norm:4.6229, tok/sec: 109805.82, flops:42.78, batch-reuse:1
@ 839 train 6.2519 , allloss: 6.9780, dt: 1206.53ms, fracRes: 0.0026, norm(attn): 0.2891, norm(output): 0.0391, norm(x): 0.0393, norm(y): 0.9794, norm:9.2671, tok/sec: 108635.16, flops:42.32, batch-reuse:1
@ 840 train 6.3620 , allloss: 7.1047, dt: 1226.23ms, fracRes: 0.0028, norm(attn): 0.2754, norm(output): 0.0400, norm(x): 0.0404, norm(y): 0.9794, norm:6.8680, tok/sec: 106890.40, flops:41.64, batch-reuse:1
@ 841 train 6.2923 , allloss: 7.0595, dt: 1227.05ms, fracRes: 0.0028, norm(attn): 0.2715, norm(output): 0.0405, norm(x): 0.0410, norm(y): 0.9793, norm:7.9903, tok/sec: 106818.64, flops:41.62, batch-reuse:1
@ 842 train 6.4112 , allloss: 7.1883, dt: 1232.45ms, fracRes: 0.0029, norm(attn): 0.2754, norm(output): 0.0405, norm(x): 0.0410, norm(y): 0.9793, norm:6.9077, tok/sec: 106351.20, flops:41.43, batch-reuse:1
@ 843 train 6.4292 , allloss: 7.2064, dt: 1219.27ms, fracRes: 0.0032, norm(attn): 0.2637, norm(output): 0.0415, norm(x): 0.0416, norm(y): 0.9793, norm:6.2942, tok/sec: 107500.31, flops:41.88, batch-reuse:1
@ 844 train 6.4412 , allloss: 7.1954, dt: 1207.61ms, fracRes: 0.0029, norm(attn): 0.2617, norm(output): 0.0415, norm(x): 0.0413, norm(y): 0.9794, norm:6.0118, tok/sec: 108538.32, flops:42.29, batch-reuse:1
@ 845 train 6.4225 , allloss: 7.1635, dt: 1217.19ms, fracRes: 0.0028, norm(attn): 0.2637, norm(output): 0.0408, norm(x): 0.0410, norm(y): 0.9794, norm:5.7980, tok/sec: 107684.22, flops:41.95, batch-reuse:1
@ 846 train 6.3823 , allloss: 7.1313, dt: 1198.79ms, fracRes: 0.0026, norm(attn): 0.2695, norm(output): 0.0405, norm(x): 0.0407, norm(y): 0.9792, norm:6.4377, tok/sec: 109336.95, flops:42.60, batch-reuse:1
@ 847 train 6.4654 , allloss: 7.2199, dt: 1194.99ms, fracRes: 0.0026, norm(attn): 0.2754, norm(output): 0.0403, norm(x): 0.0404, norm(y): 0.9791, norm:8.1741, tok/sec: 109685.02, flops:42.73, batch-reuse:1
@ 848 train 6.4650 , allloss: 7.2222, dt: 1218.31ms, fracRes: 0.0029, norm(attn): 0.2637, norm(output): 0.0417, norm(x): 0.0413, norm(y): 0.9792, norm:11.4272, tok/sec: 107584.79, flops:41.92, batch-reuse:1
@ 849 train 6.3905 , allloss: 7.1456, dt: 1174.11ms, fracRes: 0.0028, norm(attn): 0.2695, norm(output): 0.0410, norm(x): 0.0410, norm(y): 0.9791, norm:7.1000, tok/sec: 111635.00, flops:43.49, batch-reuse:1
@ 850 train 6.3554 , allloss: 7.1117, dt: 1209.78ms, fracRes: 0.0028, norm(attn): 0.2656, norm(output): 0.0410, norm(x): 0.0411, norm(y): 0.9791, norm:5.9468, tok/sec: 108343.26, flops:42.21, batch-reuse:1
@ 851 train 6.6132 , allloss: 7.3783, dt: 1226.08ms, fracRes: 0.0030, norm(attn): 0.2598, norm(output): 0.0417, norm(x): 0.0417, norm(y): 0.9791, norm:9.5420, tok/sec: 106903.58, flops:41.65, batch-reuse:1
@ 852 train 6.4600 , allloss: 7.2158, dt: 1188.86ms, fracRes: 0.0029, norm(attn): 0.2637, norm(output): 0.0410, norm(x): 0.0411, norm(y): 0.9790, norm:7.0566, tok/sec: 110249.83, flops:42.95, batch-reuse:1
@ 853 train 6.3860 , allloss: 7.1198, dt: 1189.40ms, fracRes: 0.0027, norm(attn): 0.2637, norm(output): 0.0410, norm(x): 0.0407, norm(y): 0.9791, norm:6.6845, tok/sec: 110200.02, flops:42.93, batch-reuse:1
@ 854 train 6.4168 , allloss: 7.1449, dt: 1190.18ms, fracRes: 0.0028, norm(attn): 0.2637, norm(output): 0.0413, norm(x): 0.0409, norm(y): 0.9790, norm:6.8090, tok/sec: 110128.29, flops:42.91, batch-reuse:1
@ 855 train 6.4484 , allloss: 7.1822, dt: 1185.18ms, fracRes: 0.0029, norm(attn): 0.2637, norm(output): 0.0405, norm(x): 0.0410, norm(y): 0.9790, norm:5.4462, tok/sec: 110592.91, flops:43.09, batch-reuse:1
@ 856 train 6.4170 , allloss: 7.1640, dt: 1185.14ms, fracRes: 0.0030, norm(attn): 0.2617, norm(output): 0.0415, norm(x): 0.0413, norm(y): 0.9790, norm:6.4768, tok/sec: 110595.83, flops:43.09, batch-reuse:1
@ 857 train 6.4064 , allloss: 7.1758, dt: 1203.87ms, fracRes: 0.0029, norm(attn): 0.2715, norm(output): 0.0405, norm(x): 0.0408, norm(y): 0.9788, norm:5.7634, tok/sec: 108875.34, flops:42.42, batch-reuse:1
@ 858 train 6.4629 , allloss: 7.2440, dt: 1190.53ms, fracRes: 0.0027, norm(attn): 0.2637, norm(output): 0.0413, norm(x): 0.0412, norm(y): 0.9787, norm:7.4992, tok/sec: 110095.65, flops:42.89, batch-reuse:1
@ 859 train 6.3725 , allloss: 7.1425, dt: 1200.50ms, fracRes: 0.0026, norm(attn): 0.2656, norm(output): 0.0410, norm(x): 0.0410, norm(y): 0.9787, norm:6.7563, tok/sec: 109180.96, flops:42.54, batch-reuse:1
@ 860 train 6.4110 , allloss: 7.1802, dt: 1205.35ms, fracRes: 0.0026, norm(attn): 0.2598, norm(output): 0.0415, norm(x): 0.0411, norm(y): 0.9786, norm:6.8181, tok/sec: 108741.54, flops:42.37, batch-reuse:1
@ 861 train 6.4177 , allloss: 7.1638, dt: 1209.15ms, fracRes: 0.0026, norm(attn): 0.2656, norm(output): 0.0398, norm(x): 0.0402, norm(y): 0.9785, norm:8.2525, tok/sec: 108400.15, flops:42.23, batch-reuse:1
@ 862 train 6.4797 , allloss: 7.2198, dt: 1188.88ms, fracRes: 0.0027, norm(attn): 0.2520, norm(output): 0.0410, norm(x): 0.0410, norm(y): 0.9787, norm:4.9690, tok/sec: 110248.06, flops:42.95, batch-reuse:1
@ 863 train 6.4093 , allloss: 7.1408, dt: 1177.32ms, fracRes: 0.0028, norm(attn): 0.2637, norm(output): 0.0410, norm(x): 0.0409, norm(y): 0.9786, norm:6.7770, tok/sec: 111330.53, flops:43.37, batch-reuse:1
@ 864 train 6.4403 , allloss: 7.1858, dt: 1209.06ms, fracRes: 0.0028, norm(attn): 0.2617, norm(output): 0.0408, norm(x): 0.0409, norm(y): 0.9785, norm:7.0131, tok/sec: 108407.87, flops:42.24, batch-reuse:1
@ 865 train 6.3381 , allloss: 7.0702, dt: 1240.98ms, fracRes: 0.0026, norm(attn): 0.2793, norm(output): 0.0393, norm(x): 0.0395, norm(y): 0.9782, norm:6.2555, tok/sec: 105620.04, flops:41.15, batch-reuse:1
@ 866 train 6.3292 , allloss: 7.0631, dt: 1217.93ms, fracRes: 0.0029, norm(attn): 0.2793, norm(output): 0.0396, norm(x): 0.0400, norm(y): 0.9783, norm:8.6038, tok/sec: 107618.66, flops:41.93, batch-reuse:1
@ 867 train 6.3854 , allloss: 7.1364, dt: 1201.84ms, fracRes: 0.0029, norm(attn): 0.2695, norm(output): 0.0403, norm(x): 0.0405, norm(y): 0.9783, norm:5.2622, tok/sec: 109059.08, flops:42.49, batch-reuse:1
@ 868 train 6.3475 , allloss: 7.0902, dt: 1232.86ms, fracRes: 0.0027, norm(attn): 0.2676, norm(output): 0.0400, norm(x): 0.0402, norm(y): 0.9782, norm:5.1839, tok/sec: 106315.08, flops:41.42, batch-reuse:1
@ 869 train 6.3917 , allloss: 7.1308, dt: 1211.93ms, fracRes: 0.0026, norm(attn): 0.2754, norm(output): 0.0393, norm(x): 0.0398, norm(y): 0.9781, norm:7.6164, tok/sec: 108151.88, flops:42.14, batch-reuse:1
@ 870 train 6.3790 , allloss: 7.1343, dt: 1186.45ms, fracRes: 0.0027, norm(attn): 0.2520, norm(output): 0.0405, norm(x): 0.0405, norm(y): 0.9782, norm:8.3059, tok/sec: 110473.70, flops:43.04, batch-reuse:1
@ 871 train 6.4016 , allloss: 7.1581, dt: 1208.95ms, fracRes: 0.0027, norm(attn): 0.2559, norm(output): 0.0405, norm(x): 0.0406, norm(y): 0.9782, norm:7.1106, tok/sec: 108418.28, flops:42.24, batch-reuse:1
@ 872 train 6.3444 , allloss: 7.1020, dt: 1204.91ms, fracRes: 0.0027, norm(attn): 0.2598, norm(output): 0.0405, norm(x): 0.0404, norm(y): 0.9780, norm:5.8929, tok/sec: 108781.31, flops:42.38, batch-reuse:1
@ 873 train 6.4332 , allloss: 7.1806, dt: 1192.08ms, fracRes: 0.0027, norm(attn): 0.2676, norm(output): 0.0405, norm(x): 0.0405, norm(y): 0.9781, norm:8.5005, tok/sec: 109952.02, flops:42.84, batch-reuse:1
@ 874 train 6.3365 , allloss: 7.1063, dt: 1172.04ms, fracRes: 0.0029, norm(attn): 0.2656, norm(output): 0.0405, norm(x): 0.0408, norm(y): 0.9780, norm:8.6259, tok/sec: 111832.82, flops:43.57, batch-reuse:1
@ 875 train 6.3565 , allloss: 7.1291, dt: 1173.24ms, fracRes: 0.0029, norm(attn): 0.2754, norm(output): 0.0408, norm(x): 0.0408, norm(y): 0.9780, norm:6.1843, tok/sec: 111718.19, flops:43.53, batch-reuse:1
@ 876 train 6.3489 , allloss: 7.0985, dt: 1212.12ms, fracRes: 0.0027, norm(attn): 0.2793, norm(output): 0.0400, norm(x): 0.0401, norm(y): 0.9778, norm:6.1444, tok/sec: 108134.84, flops:42.13, batch-reuse:1
@ 877 train 6.3981 , allloss: 7.1486, dt: 1194.21ms, fracRes: 0.0028, norm(attn): 0.2656, norm(output): 0.0410, norm(x): 0.0407, norm(y): 0.9779, norm:8.7217, tok/sec: 109755.80, flops:42.76, batch-reuse:1
@ 878 train 6.3447 , allloss: 7.1083, dt: 1235.75ms, fracRes: 0.0027, norm(attn): 0.2637, norm(output): 0.0403, norm(x): 0.0405, norm(y): 0.9778, norm:5.9878, tok/sec: 106066.44, flops:41.32, batch-reuse:1
@ 879 train 6.3339 , allloss: 7.1112, dt: 1222.12ms, fracRes: 0.0029, norm(attn): 0.2617, norm(output): 0.0410, norm(x): 0.0411, norm(y): 0.9779, norm:7.2115, tok/sec: 107249.46, flops:41.78, batch-reuse:1
@ 880 train 6.4000 , allloss: 7.1708, dt: 1198.07ms, fracRes: 0.0029, norm(attn): 0.2539, norm(output): 0.0417, norm(x): 0.0416, norm(y): 0.9779, norm:6.1950, tok/sec: 109402.53, flops:42.62, batch-reuse:1
@ 881 train 6.3062 , allloss: 7.0399, dt: 1202.82ms, fracRes: 0.0026, norm(attn): 0.2676, norm(output): 0.0403, norm(x): 0.0401, norm(y): 0.9777, norm:8.0201, tok/sec: 108970.97, flops:42.46, batch-reuse:1
@ 882 train 6.3068 , allloss: 7.0379, dt: 1188.75ms, fracRes: 0.0026, norm(attn): 0.2656, norm(output): 0.0400, norm(x): 0.0402, norm(y): 0.9777, norm:6.6059, tok/sec: 110260.78, flops:42.96, batch-reuse:1
@ 883 train 6.2716 , allloss: 7.0251, dt: 1191.34ms, fracRes: 0.0027, norm(attn): 0.2637, norm(output): 0.0408, norm(x): 0.0409, norm(y): 0.9777, norm:6.6303, tok/sec: 110020.34, flops:42.86, batch-reuse:1
@ 884 train 6.2581 , allloss: 7.0037, dt: 1174.48ms, fracRes: 0.0029, norm(attn): 0.2715, norm(output): 0.0405, norm(x): 0.0406, norm(y): 0.9777, norm:5.1791, tok/sec: 111600.21, flops:43.48, batch-reuse:1
@ 885 train 6.3198 , allloss: 7.0636, dt: 1193.59ms, fracRes: 0.0025, norm(attn): 0.2715, norm(output): 0.0400, norm(x): 0.0401, norm(y): 0.9776, norm:6.8355, tok/sec: 109813.06, flops:42.78, batch-reuse:1
@ 886 train 6.3721 , allloss: 7.1290, dt: 1200.97ms, fracRes: 0.0025, norm(attn): 0.2695, norm(output): 0.0400, norm(x): 0.0402, norm(y): 0.9775, norm:7.4627, tok/sec: 109138.78, flops:42.52, batch-reuse:1
@ 887 train 6.2996 , allloss: 7.0552, dt: 1230.26ms, fracRes: 0.0025, norm(attn): 0.2676, norm(output): 0.0396, norm(x): 0.0399, norm(y): 0.9776, norm:5.8119, tok/sec: 106540.50, flops:41.51, batch-reuse:1
@ 888 train 6.3225 , allloss: 7.0905, dt: 1212.22ms, fracRes: 0.0026, norm(attn): 0.2490, norm(output): 0.0413, norm(x): 0.0411, norm(y): 0.9777, norm:7.9003, tok/sec: 108125.49, flops:42.13, batch-reuse:1
@ 889 train 6.3384 , allloss: 7.0832, dt: 1206.50ms, fracRes: 0.0026, norm(attn): 0.2656, norm(output): 0.0403, norm(x): 0.0402, norm(y): 0.9775, norm:5.4248, tok/sec: 108638.03, flops:42.33, batch-reuse:1
@ 890 train 6.4128 , allloss: 7.1733, dt: 1208.96ms, fracRes: 0.0026, norm(attn): 0.2598, norm(output): 0.0410, norm(x): 0.0407, norm(y): 0.9774, norm:5.7662, tok/sec: 108417.47, flops:42.24, batch-reuse:1
@ 891 train 6.3280 , allloss: 7.0819, dt: 1216.58ms, fracRes: 0.0027, norm(attn): 0.2637, norm(output): 0.0408, norm(x): 0.0405, norm(y): 0.9774, norm:6.1280, tok/sec: 107737.90, flops:41.97, batch-reuse:1
@ 892 train 6.2716 , allloss: 7.0393, dt: 1180.45ms, fracRes: 0.0028, norm(attn): 0.2637, norm(output): 0.0403, norm(x): 0.0405, norm(y): 0.9774, norm:5.5489, tok/sec: 111035.96, flops:43.26, batch-reuse:1
@ 893 train 6.1840 , allloss: 6.9480, dt: 1188.82ms, fracRes: 0.0027, norm(attn): 0.2656, norm(output): 0.0396, norm(x): 0.0400, norm(y): 0.9773, norm:6.2970, tok/sec: 110254.14, flops:42.96, batch-reuse:1
@ 894 train 6.3496 , allloss: 7.0764, dt: 1198.73ms, fracRes: 0.0025, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0395, norm(y): 0.9772, norm:10.5554, tok/sec: 109342.82, flops:42.60, batch-reuse:1
@ 895 train 6.3382 , allloss: 7.0786, dt: 1199.77ms, fracRes: 0.0026, norm(attn): 0.2500, norm(output): 0.0403, norm(x): 0.0403, norm(y): 0.9773, norm:6.4536, tok/sec: 109247.56, flops:42.56, batch-reuse:1
@ 896 train 6.2222 , allloss: 6.9705, dt: 1181.55ms, fracRes: 0.0028, norm(attn): 0.2578, norm(output): 0.0400, norm(x): 0.0401, norm(y): 0.9772, norm:7.7383, tok/sec: 110932.09, flops:43.22, batch-reuse:1
@ 897 train 6.3277 , allloss: 7.0904, dt: 1215.60ms, fracRes: 0.0031, norm(attn): 0.2578, norm(output): 0.0400, norm(x): 0.0404, norm(y): 0.9772, norm:6.6889, tok/sec: 107825.05, flops:42.01, batch-reuse:1
@ 898 train 6.3488 , allloss: 7.0933, dt: 1206.75ms, fracRes: 0.0027, norm(attn): 0.2520, norm(output): 0.0403, norm(x): 0.0404, norm(y): 0.9772, norm:6.3090, tok/sec: 108615.63, flops:42.32, batch-reuse:1
@ 899 train 6.2949 , allloss: 7.0444, dt: 1205.52ms, fracRes: 0.0025, norm(attn): 0.2617, norm(output): 0.0403, norm(x): 0.0402, norm(y): 0.9771, norm:5.6457, tok/sec: 108726.79, flops:42.36, batch-reuse:1
@ 900 train 6.3510 , allloss: 7.1022, dt: 1211.80ms, fracRes: 0.0025, norm(attn): 0.2598, norm(output): 0.0400, norm(x): 0.0403, norm(y): 0.9770, norm:6.6937, tok/sec: 108162.63, flops:42.14, batch-reuse:1
@ 901 train 6.2718 , allloss: 7.0339, dt: 1243.98ms, fracRes: 0.0026, norm(attn): 0.2617, norm(output): 0.0408, norm(x): 0.0406, norm(y): 0.9770, norm:6.7793, tok/sec: 105365.45, flops:41.05, batch-reuse:1
@ 902 train 6.2495 , allloss: 7.0175, dt: 1213.59ms, fracRes: 0.0026, norm(attn): 0.2500, norm(output): 0.0410, norm(x): 0.0409, norm(y): 0.9769, norm:5.9451, tok/sec: 108003.54, flops:42.08, batch-reuse:1
@ 903 train 6.2657 , allloss: 7.0249, dt: 1206.82ms, fracRes: 0.0028, norm(attn): 0.2539, norm(output): 0.0405, norm(x): 0.0405, norm(y): 0.9769, norm:5.1693, tok/sec: 108609.23, flops:42.31, batch-reuse:1
@ 904 train 6.2525 , allloss: 7.0104, dt: 1209.45ms, fracRes: 0.0029, norm(attn): 0.2559, norm(output): 0.0400, norm(x): 0.0404, norm(y): 0.9769, norm:7.5702, tok/sec: 108372.91, flops:42.22, batch-reuse:1
@ 905 train 6.3360 , allloss: 7.0775, dt: 1186.07ms, fracRes: 0.0027, norm(attn): 0.2715, norm(output): 0.0393, norm(x): 0.0395, norm(y): 0.9768, norm:8.1408, tok/sec: 110509.12, flops:43.05, batch-reuse:1
@ 906 train 6.3182 , allloss: 7.0807, dt: 1196.60ms, fracRes: 0.0030, norm(attn): 0.2520, norm(output): 0.0410, norm(x): 0.0409, norm(y): 0.9770, norm:11.0511, tok/sec: 109536.92, flops:42.68, batch-reuse:1
@ 907 train 6.1583 , allloss: 6.9236, dt: 1209.49ms, fracRes: 0.0029, norm(attn): 0.2520, norm(output): 0.0405, norm(x): 0.0408, norm(y): 0.9769, norm:6.4916, tok/sec: 108370.00, flops:42.22, batch-reuse:1
@ 908 train 6.2977 , allloss: 7.0674, dt: 1237.28ms, fracRes: 0.0026, norm(attn): 0.2559, norm(output): 0.0405, norm(x): 0.0405, norm(y): 0.9766, norm:7.6075, tok/sec: 105935.30, flops:41.27, batch-reuse:1
@ 909 train 6.5080 , allloss: 7.3001, dt: 1203.88ms, fracRes: 0.0027, norm(attn): 0.2500, norm(output): 0.0413, norm(x): 0.0413, norm(y): 0.9766, norm:7.0632, tok/sec: 108874.87, flops:42.42, batch-reuse:1
@ 910 train 6.3166 , allloss: 7.0980, dt: 1205.50ms, fracRes: 0.0028, norm(attn): 0.2559, norm(output): 0.0405, norm(x): 0.0410, norm(y): 0.9765, norm:8.9906, tok/sec: 108728.45, flops:42.36, batch-reuse:1
@ 911 train 6.4018 , allloss: 7.1541, dt: 1215.93ms, fracRes: 0.0029, norm(attn): 0.2520, norm(output): 0.0410, norm(x): 0.0412, norm(y): 0.9767, norm:6.5525, tok/sec: 107795.57, flops:42.00, batch-reuse:1
@ 912 train 6.3075 , allloss: 7.0463, dt: 1203.83ms, fracRes: 0.0030, norm(attn): 0.2402, norm(output): 0.0415, norm(x): 0.0413, norm(y): 0.9767, norm:9.9287, tok/sec: 108879.59, flops:42.42, batch-reuse:1
@ 913 train 6.2788 , allloss: 7.0205, dt: 1206.24ms, fracRes: 0.0029, norm(attn): 0.2471, norm(output): 0.0415, norm(x): 0.0412, norm(y): 0.9768, norm:6.9089, tok/sec: 108661.40, flops:42.33, batch-reuse:1
@ 914 train 6.3151 , allloss: 7.0579, dt: 1219.74ms, fracRes: 0.0029, norm(attn): 0.2656, norm(output): 0.0400, norm(x): 0.0405, norm(y): 0.9766, norm:6.2645, tok/sec: 107459.21, flops:41.87, batch-reuse:1
@ 915 train 6.3188 , allloss: 7.1138, dt: 1179.88ms, fracRes: 0.0029, norm(attn): 0.2637, norm(output): 0.0408, norm(x): 0.0410, norm(y): 0.9764, norm:6.0293, tok/sec: 111089.16, flops:43.28, batch-reuse:1
@ 916 train 6.2380 , allloss: 7.0080, dt: 1213.83ms, fracRes: 0.0027, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0397, norm(y): 0.9763, norm:6.5652, tok/sec: 107982.28, flops:42.07, batch-reuse:1
@ 917 train 6.2942 , allloss: 7.0719, dt: 1191.25ms, fracRes: 0.0028, norm(attn): 0.2559, norm(output): 0.0403, norm(x): 0.0406, norm(y): 0.9765, norm:5.9200, tok/sec: 110028.76, flops:42.87, batch-reuse:1
@ 918 train 6.3175 , allloss: 7.0927, dt: 1180.44ms, fracRes: 0.0028, norm(attn): 0.2451, norm(output): 0.0417, norm(x): 0.0414, norm(y): 0.9765, norm:5.7607, tok/sec: 111036.93, flops:43.26, batch-reuse:1
@ 919 train 6.2709 , allloss: 7.0231, dt: 1207.66ms, fracRes: 0.0026, norm(attn): 0.2539, norm(output): 0.0410, norm(x): 0.0408, norm(y): 0.9764, norm:5.5159, tok/sec: 108533.56, flops:42.28, batch-reuse:1
@ 920 train 6.3087 , allloss: 7.0589, dt: 1230.57ms, fracRes: 0.0027, norm(attn): 0.2559, norm(output): 0.0413, norm(x): 0.0411, norm(y): 0.9765, norm:5.2539, tok/sec: 106513.42, flops:41.50, batch-reuse:1
@ 921 train 6.2794 , allloss: 7.0474, dt: 1194.56ms, fracRes: 0.0027, norm(attn): 0.2559, norm(output): 0.0417, norm(x): 0.0412, norm(y): 0.9763, norm:5.8797, tok/sec: 109724.34, flops:42.75, batch-reuse:1
@ 922 train 6.3110 , allloss: 7.0619, dt: 1225.22ms, fracRes: 0.0027, norm(attn): 0.2637, norm(output): 0.0408, norm(x): 0.0407, norm(y): 0.9762, norm:5.4867, tok/sec: 106978.45, flops:41.68, batch-reuse:1
@ 923 train 6.2940 , allloss: 7.0498, dt: 1209.78ms, fracRes: 0.0028, norm(attn): 0.2656, norm(output): 0.0400, norm(x): 0.0403, norm(y): 0.9761, norm:9.1768, tok/sec: 108343.80, flops:42.21, batch-reuse:1
@ 924 train 6.2461 , allloss: 6.9993, dt: 1181.56ms, fracRes: 0.0029, norm(attn): 0.2754, norm(output): 0.0393, norm(x): 0.0400, norm(y): 0.9760, norm:5.8196, tok/sec: 110930.95, flops:43.22, batch-reuse:1
@ 925 train 6.3117 , allloss: 7.0630, dt: 1200.50ms, fracRes: 0.0029, norm(attn): 0.2656, norm(output): 0.0403, norm(x): 0.0405, norm(y): 0.9760, norm:6.7772, tok/sec: 109181.43, flops:42.54, batch-reuse:1
@ 926 train 6.2727 , allloss: 7.0282, dt: 1187.19ms, fracRes: 0.0027, norm(attn): 0.2520, norm(output): 0.0410, norm(x): 0.0407, norm(y): 0.9760, norm:5.6961, tok/sec: 110405.02, flops:43.01, batch-reuse:1
@ 927 train 6.2244 , allloss: 6.9892, dt: 1238.32ms, fracRes: 0.0025, norm(attn): 0.2520, norm(output): 0.0408, norm(x): 0.0404, norm(y): 0.9760, norm:6.9863, tok/sec: 105846.30, flops:41.24, batch-reuse:1
@ 928 train 6.4297 , allloss: 7.1803, dt: 1240.96ms, fracRes: 0.0025, norm(attn): 0.2598, norm(output): 0.0393, norm(x): 0.0397, norm(y): 0.9758, norm:9.5540, tok/sec: 105621.16, flops:41.15, batch-reuse:1
@ 929 train 6.4657 , allloss: 7.2661, dt: 1195.58ms, fracRes: 0.0029, norm(attn): 0.2500, norm(output): 0.0417, norm(x): 0.0414, norm(y): 0.9760, norm:6.7194, tok/sec: 109630.76, flops:42.71, batch-reuse:1
@ 930 train 6.4024 , allloss: 7.2181, dt: 1205.56ms, fracRes: 0.0031, norm(attn): 0.2520, norm(output): 0.0417, norm(x): 0.0418, norm(y): 0.9759, norm:9.0756, tok/sec: 108723.31, flops:42.36, batch-reuse:1
@ 931 train 6.5275 , allloss: 7.3363, dt: 1206.43ms, fracRes: 0.0030, norm(attn): 0.2500, norm(output): 0.0422, norm(x): 0.0421, norm(y): 0.9759, norm:6.5738, tok/sec: 108644.41, flops:42.33, batch-reuse:1
@ 932 train 6.4636 , allloss: 7.2761, dt: 1180.89ms, fracRes: 0.0029, norm(attn): 0.2480, norm(output): 0.0427, norm(x): 0.0424, norm(y): 0.9759, norm:9.5304, tok/sec: 110994.38, flops:43.24, batch-reuse:1
@ 933 train 6.4661 , allloss: 7.2461, dt: 1176.04ms, fracRes: 0.0029, norm(attn): 0.2617, norm(output): 0.0405, norm(x): 0.0411, norm(y): 0.9757, norm:6.1218, tok/sec: 111452.31, flops:43.42, batch-reuse:1
@ 934 train 6.4485 , allloss: 7.2011, dt: 1164.76ms, fracRes: 0.0028, norm(attn): 0.2598, norm(output): 0.0403, norm(x): 0.0405, norm(y): 0.9757, norm:6.2036, tok/sec: 112531.58, flops:43.84, batch-reuse:1
@ 935 train 6.4122 , allloss: 7.1505, dt: 1192.23ms, fracRes: 0.0027, norm(attn): 0.2578, norm(output): 0.0398, norm(x): 0.0401, norm(y): 0.9756, norm:6.3704, tok/sec: 109938.63, flops:42.83, batch-reuse:1
@ 936 train 6.4377 , allloss: 7.1907, dt: 1181.00ms, fracRes: 0.0027, norm(attn): 0.2559, norm(output): 0.0396, norm(x): 0.0399, norm(y): 0.9756, norm:6.4831, tok/sec: 110984.18, flops:43.24, batch-reuse:1
@ 937 train 6.4467 , allloss: 7.2229, dt: 1181.83ms, fracRes: 0.0027, norm(attn): 0.2539, norm(output): 0.0403, norm(x): 0.0406, norm(y): 0.9755, norm:5.7557, tok/sec: 110905.91, flops:43.21, batch-reuse:1
@ 938 train 6.3863 , allloss: 7.1651, dt: 1188.03ms, fracRes: 0.0027, norm(attn): 0.2471, norm(output): 0.0405, norm(x): 0.0410, norm(y): 0.9755, norm:5.9357, tok/sec: 110327.27, flops:42.98, batch-reuse:1
@ 939 train 6.4423 , allloss: 7.2232, dt: 1174.19ms, fracRes: 0.0027, norm(attn): 0.2500, norm(output): 0.0408, norm(x): 0.0409, norm(y): 0.9754, norm:5.2044, tok/sec: 111627.29, flops:43.49, batch-reuse:1
@ 940 train 6.4477 , allloss: 7.2103, dt: 1193.24ms, fracRes: 0.0028, norm(attn): 0.2539, norm(output): 0.0405, norm(x): 0.0406, norm(y): 0.9753, norm:5.8190, tok/sec: 109845.71, flops:42.80, batch-reuse:1
@ 941 train 6.4449 , allloss: 7.2128, dt: 1184.66ms, fracRes: 0.0031, norm(attn): 0.2598, norm(output): 0.0403, norm(x): 0.0407, norm(y): 0.9753, norm:6.3658, tok/sec: 110641.12, flops:43.11, batch-reuse:1
@ 942 train 6.4339 , allloss: 7.1958, dt: 1186.60ms, fracRes: 0.0029, norm(attn): 0.2598, norm(output): 0.0403, norm(x): 0.0405, norm(y): 0.9752, norm:7.5578, tok/sec: 110459.81, flops:43.04, batch-reuse:1
@ 943 train 6.4323 , allloss: 7.1788, dt: 1221.87ms, fracRes: 0.0026, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0394, norm(y): 0.9750, norm:7.8384, tok/sec: 107271.48, flops:41.79, batch-reuse:1
@ 944 train 6.4368 , allloss: 7.2035, dt: 1202.79ms, fracRes: 0.0026, norm(attn): 0.2715, norm(output): 0.0396, norm(x): 0.0400, norm(y): 0.9749, norm:6.4126, tok/sec: 108973.41, flops:42.46, batch-reuse:1
@ 945 train 6.5186 , allloss: 7.2973, dt: 1194.15ms, fracRes: 0.0027, norm(attn): 0.2637, norm(output): 0.0410, norm(x): 0.0411, norm(y): 0.9750, norm:6.4013, tok/sec: 109761.45, flops:42.76, batch-reuse:1
@ 946 train 6.4526 , allloss: 7.2142, dt: 1179.53ms, fracRes: 0.0030, norm(attn): 0.2578, norm(output): 0.0410, norm(x): 0.0410, norm(y): 0.9750, norm:6.8294, tok/sec: 111122.59, flops:43.29, batch-reuse:1
@ 947 train 6.4065 , allloss: 7.1514, dt: 1214.39ms, fracRes: 0.0030, norm(attn): 0.2578, norm(output): 0.0403, norm(x): 0.0405, norm(y): 0.9751, norm:6.5575, tok/sec: 107932.69, flops:42.05, batch-reuse:1
@ 948 train 6.4088 , allloss: 7.1679, dt: 1186.52ms, fracRes: 0.0028, norm(attn): 0.2500, norm(output): 0.0410, norm(x): 0.0408, norm(y): 0.9751, norm:7.0893, tok/sec: 110467.82, flops:43.04, batch-reuse:1
@ 949 train 6.4678 , allloss: 7.2246, dt: 1208.19ms, fracRes: 0.0026, norm(attn): 0.2578, norm(output): 0.0400, norm(x): 0.0401, norm(y): 0.9749, norm:5.5746, tok/sec: 108486.08, flops:42.27, batch-reuse:1
@ 950 train 6.4122 , allloss: 7.1722, dt: 1223.73ms, fracRes: 0.0026, norm(attn): 0.2637, norm(output): 0.0398, norm(x): 0.0398, norm(y): 0.9748, norm:5.8841, tok/sec: 107108.82, flops:41.73, batch-reuse:1
@ 951 train 6.4893 , allloss: 7.2747, dt: 1227.02ms, fracRes: 0.0026, norm(attn): 0.2617, norm(output): 0.0403, norm(x): 0.0402, norm(y): 0.9746, norm:6.5108, tok/sec: 106821.22, flops:41.62, batch-reuse:1
@ 952 train 6.4076 , allloss: 7.1802, dt: 1211.17ms, fracRes: 0.0023, norm(attn): 0.2656, norm(output): 0.0396, norm(x): 0.0397, norm(y): 0.9745, norm:5.4014, tok/sec: 108219.05, flops:42.16, batch-reuse:1
@ 953 train 6.3956 , allloss: 7.1454, dt: 1234.53ms, fracRes: 0.0023, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0396, norm(y): 0.9746, norm:5.3747, tok/sec: 106171.46, flops:41.36, batch-reuse:1
@ 954 train 6.3567 , allloss: 7.1037, dt: 1201.23ms, fracRes: 0.0025, norm(attn): 0.2598, norm(output): 0.0396, norm(x): 0.0398, norm(y): 0.9746, norm:8.4900, tok/sec: 109114.41, flops:42.51, batch-reuse:1
@ 955 train 6.4376 , allloss: 7.2004, dt: 1187.74ms, fracRes: 0.0024, norm(attn): 0.2617, norm(output): 0.0398, norm(x): 0.0399, norm(y): 0.9747, norm:6.7819, tok/sec: 110353.78, flops:42.99, batch-reuse:1
@ 956 train 6.3781 , allloss: 7.1376, dt: 1208.04ms, fracRes: 0.0023, norm(attn): 0.2539, norm(output): 0.0403, norm(x): 0.0402, norm(y): 0.9746, norm:6.7833, tok/sec: 108499.95, flops:42.27, batch-reuse:1
@ 957 train 6.4229 , allloss: 7.1717, dt: 1170.89ms, fracRes: 0.0024, norm(attn): 0.2617, norm(output): 0.0398, norm(x): 0.0398, norm(y): 0.9745, norm:6.2497, tok/sec: 111942.21, flops:43.61, batch-reuse:1
@ 958 train 6.4299 , allloss: 7.1698, dt: 1203.91ms, fracRes: 0.0026, norm(attn): 0.2637, norm(output): 0.0398, norm(x): 0.0397, norm(y): 0.9744, norm:8.2453, tok/sec: 108872.30, flops:42.42, batch-reuse:1
@ 959 train 6.3428 , allloss: 7.1067, dt: 1199.16ms, fracRes: 0.0024, norm(attn): 0.2578, norm(output): 0.0398, norm(x): 0.0400, norm(y): 0.9743, norm:6.9188, tok/sec: 109303.28, flops:42.58, batch-reuse:1
@ 960 train 6.4416 , allloss: 7.1973, dt: 1186.19ms, fracRes: 0.0024, norm(attn): 0.2637, norm(output): 0.0400, norm(x): 0.0396, norm(y): 0.9742, norm:6.4556, tok/sec: 110498.15, flops:43.05, batch-reuse:1
@ 961 train 6.4059 , allloss: 7.1834, dt: 1190.37ms, fracRes: 0.0025, norm(attn): 0.2539, norm(output): 0.0403, norm(x): 0.0401, norm(y): 0.9742, norm:9.9585, tok/sec: 110110.56, flops:42.90, batch-reuse:1
@ 962 train 6.4017 , allloss: 7.1808, dt: 1208.69ms, fracRes: 0.0024, norm(attn): 0.2539, norm(output): 0.0405, norm(x): 0.0402, norm(y): 0.9742, norm:5.7241, tok/sec: 108440.97, flops:42.25, batch-reuse:1
@ 963 train 6.4410 , allloss: 7.2069, dt: 1201.40ms, fracRes: 0.0024, norm(attn): 0.2539, norm(output): 0.0410, norm(x): 0.0404, norm(y): 0.9743, norm:7.3346, tok/sec: 109099.25, flops:42.51, batch-reuse:1
@ 964 train 6.4470 , allloss: 7.2087, dt: 1172.60ms, fracRes: 0.0023, norm(attn): 0.2500, norm(output): 0.0410, norm(x): 0.0406, norm(y): 0.9742, norm:10.6261, tok/sec: 111778.52, flops:43.55, batch-reuse:1
@ 965 train 6.4091 , allloss: 7.1569, dt: 1172.34ms, fracRes: 0.0023, norm(attn): 0.2500, norm(output): 0.0403, norm(x): 0.0401, norm(y): 0.9743, norm:5.7951, tok/sec: 111803.66, flops:43.56, batch-reuse:1
@ 966 train 6.3928 , allloss: 7.1370, dt: 1203.92ms, fracRes: 0.0025, norm(attn): 0.2598, norm(output): 0.0396, norm(x): 0.0399, norm(y): 0.9742, norm:7.4950, tok/sec: 108871.14, flops:42.42, batch-reuse:1
@ 967 train 6.4953 , allloss: 7.2593, dt: 1192.82ms, fracRes: 0.0026, norm(attn): 0.2500, norm(output): 0.0415, norm(x): 0.0411, norm(y): 0.9743, norm:7.1569, tok/sec: 109884.31, flops:42.81, batch-reuse:1
@ 968 train 6.4657 , allloss: 7.2240, dt: 1192.86ms, fracRes: 0.0025, norm(attn): 0.2539, norm(output): 0.0405, norm(x): 0.0405, norm(y): 0.9742, norm:7.3446, tok/sec: 109880.51, flops:42.81, batch-reuse:1
@ 969 train 6.3760 , allloss: 7.1586, dt: 1197.76ms, fracRes: 0.0024, norm(attn): 0.2471, norm(output): 0.0415, norm(x): 0.0412, norm(y): 0.9741, norm:6.3633, tok/sec: 109431.02, flops:42.63, batch-reuse:1
@ 970 train 6.4172 , allloss: 7.1932, dt: 1228.44ms, fracRes: 0.0024, norm(attn): 0.2500, norm(output): 0.0415, norm(x): 0.0410, norm(y): 0.9739, norm:8.1110, tok/sec: 106697.69, flops:41.57, batch-reuse:1
@ 971 train 6.4415 , allloss: 7.1920, dt: 1203.57ms, fracRes: 0.0024, norm(attn): 0.2656, norm(output): 0.0398, norm(x): 0.0399, norm(y): 0.9739, norm:8.6099, tok/sec: 108902.26, flops:42.43, batch-reuse:1
@ 972 train 6.4079 , allloss: 7.1672, dt: 1205.56ms, fracRes: 0.0023, norm(attn): 0.2773, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9739, norm:6.5058, tok/sec: 108722.49, flops:42.36, batch-reuse:1
@ 973 train 6.4112 , allloss: 7.1966, dt: 1182.02ms, fracRes: 0.0024, norm(attn): 0.2637, norm(output): 0.0408, norm(x): 0.0404, norm(y): 0.9738, norm:7.1237, tok/sec: 110887.79, flops:43.20, batch-reuse:1
@ 974 train 6.4211 , allloss: 7.1898, dt: 1192.14ms, fracRes: 0.0024, norm(attn): 0.2637, norm(output): 0.0405, norm(x): 0.0399, norm(y): 0.9738, norm:6.3319, tok/sec: 109947.07, flops:42.84, batch-reuse:1
@ 975 train 6.4246 , allloss: 7.2069, dt: 1178.84ms, fracRes: 0.0024, norm(attn): 0.2598, norm(output): 0.0403, norm(x): 0.0401, norm(y): 0.9737, norm:6.2068, tok/sec: 111187.21, flops:43.32, batch-reuse:1
@ 976 train 6.3488 , allloss: 7.1148, dt: 1182.62ms, fracRes: 0.0026, norm(attn): 0.2656, norm(output): 0.0398, norm(x): 0.0401, norm(y): 0.9738, norm:5.7458, tok/sec: 110832.35, flops:43.18, batch-reuse:1
@ 977 train 6.3392 , allloss: 7.1149, dt: 1178.36ms, fracRes: 0.0023, norm(attn): 0.2656, norm(output): 0.0403, norm(x): 0.0400, norm(y): 0.9737, norm:5.3510, tok/sec: 111232.31, flops:43.34, batch-reuse:1
@ 978 train 6.3719 , allloss: 7.1501, dt: 1209.76ms, fracRes: 0.0023, norm(attn): 0.2598, norm(output): 0.0400, norm(x): 0.0401, norm(y): 0.9736, norm:6.8092, tok/sec: 108345.21, flops:42.21, batch-reuse:1
@ 979 train 6.3268 , allloss: 7.0946, dt: 1233.59ms, fracRes: 0.0023, norm(attn): 0.2656, norm(output): 0.0396, norm(x): 0.0398, norm(y): 0.9735, norm:5.7421, tok/sec: 106252.25, flops:41.40, batch-reuse:1
@ 980 train 6.2521 , allloss: 7.0013, dt: 1245.46ms, fracRes: 0.0024, norm(attn): 0.2637, norm(output): 0.0403, norm(x): 0.0399, norm(y): 0.9735, norm:6.1380, tok/sec: 105239.83, flops:41.00, batch-reuse:1
@ 981 train 6.3305 , allloss: 7.0901, dt: 1196.74ms, fracRes: 0.0025, norm(attn): 0.2617, norm(output): 0.0410, norm(x): 0.0405, norm(y): 0.9736, norm:7.4370, tok/sec: 109524.08, flops:42.67, batch-reuse:1
@ 982 train 6.2913 , allloss: 7.0438, dt: 1200.91ms, fracRes: 0.0025, norm(attn): 0.2578, norm(output): 0.0413, norm(x): 0.0406, norm(y): 0.9735, norm:5.0161, tok/sec: 109143.93, flops:42.52, batch-reuse:1
@ 983 train 6.4212 , allloss: 7.1551, dt: 1195.52ms, fracRes: 0.0023, norm(attn): 0.2656, norm(output): 0.0403, norm(x): 0.0400, norm(y): 0.9735, norm:9.7134, tok/sec: 109635.85, flops:42.71, batch-reuse:1
@ 984 train 6.3340 , allloss: 7.0853, dt: 1190.75ms, fracRes: 0.0022, norm(attn): 0.2676, norm(output): 0.0398, norm(x): 0.0397, norm(y): 0.9734, norm:7.0767, tok/sec: 110074.78, flops:42.89, batch-reuse:1
@ 985 train 6.3459 , allloss: 7.1160, dt: 1201.85ms, fracRes: 0.0023, norm(attn): 0.2637, norm(output): 0.0410, norm(x): 0.0404, norm(y): 0.9733, norm:7.4569, tok/sec: 109058.37, flops:42.49, batch-reuse:1
@ 986 train 6.4021 , allloss: 7.1446, dt: 1205.46ms, fracRes: 0.0023, norm(attn): 0.2715, norm(output): 0.0398, norm(x): 0.0397, norm(y): 0.9732, norm:5.8776, tok/sec: 108731.76, flops:42.36, batch-reuse:1
@ 987 train 6.3085 , allloss: 7.0413, dt: 1196.48ms, fracRes: 0.0022, norm(attn): 0.2734, norm(output): 0.0393, norm(x): 0.0391, norm(y): 0.9731, norm:5.9597, tok/sec: 109547.81, flops:42.68, batch-reuse:1
@ 988 train 6.4166 , allloss: 7.1734, dt: 1198.41ms, fracRes: 0.0023, norm(attn): 0.2656, norm(output): 0.0398, norm(x): 0.0398, norm(y): 0.9732, norm:5.2857, tok/sec: 109371.89, flops:42.61, batch-reuse:1
@ 989 train 6.4857 , allloss: 7.2468, dt: 1193.50ms, fracRes: 0.0023, norm(attn): 0.2617, norm(output): 0.0400, norm(x): 0.0399, norm(y): 0.9731, norm:5.5853, tok/sec: 109821.92, flops:42.79, batch-reuse:1
@ 990 train 6.3229 , allloss: 7.0705, dt: 1186.07ms, fracRes: 0.0022, norm(attn): 0.2676, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9729, norm:5.0051, tok/sec: 110509.50, flops:43.05, batch-reuse:1
@ 991 train 6.3561 , allloss: 7.0980, dt: 1185.48ms, fracRes: 0.0021, norm(attn): 0.2734, norm(output): 0.0391, norm(x): 0.0389, norm(y): 0.9728, norm:5.2590, tok/sec: 110564.60, flops:43.08, batch-reuse:1
@ 992 train 6.4244 , allloss: 7.1650, dt: 1185.59ms, fracRes: 0.0022, norm(attn): 0.2676, norm(output): 0.0396, norm(x): 0.0395, norm(y): 0.9727, norm:6.9485, tok/sec: 110554.68, flops:43.07, batch-reuse:1
@ 993 train 6.3261 , allloss: 7.0482, dt: 1199.66ms, fracRes: 0.0020, norm(attn): 0.2793, norm(output): 0.0388, norm(x): 0.0384, norm(y): 0.9727, norm:9.0938, tok/sec: 109257.53, flops:42.57, batch-reuse:1
@ 994 train 6.4306 , allloss: 7.1770, dt: 1207.73ms, fracRes: 0.0023, norm(attn): 0.2637, norm(output): 0.0396, norm(x): 0.0397, norm(y): 0.9727, norm:8.7647, tok/sec: 108527.28, flops:42.28, batch-reuse:1
@ 995 train 6.3650 , allloss: 7.1066, dt: 1195.39ms, fracRes: 0.0022, norm(attn): 0.2598, norm(output): 0.0398, norm(x): 0.0399, norm(y): 0.9728, norm:5.9960, tok/sec: 109647.50, flops:42.72, batch-reuse:1
@ 996 train 6.2895 , allloss: 7.0494, dt: 1176.43ms, fracRes: 0.0023, norm(attn): 0.2578, norm(output): 0.0400, norm(x): 0.0402, norm(y): 0.9727, norm:7.1111, tok/sec: 111415.09, flops:43.41, batch-reuse:1
@ 997 train 6.3014 , allloss: 7.0522, dt: 1180.29ms, fracRes: 0.0022, norm(attn): 0.2637, norm(output): 0.0400, norm(x): 0.0399, norm(y): 0.9725, norm:7.1687, tok/sec: 111050.79, flops:43.27, batch-reuse:1
@ 998 train 6.4636 , allloss: 7.1936, dt: 1211.50ms, fracRes: 0.0021, norm(attn): 0.2754, norm(output): 0.0396, norm(x): 0.0392, norm(y): 0.9724, norm:7.0661, tok/sec: 108189.68, flops:42.15, batch-reuse:1
@ 999 train 6.3138 , allloss: 7.0496, dt: 1191.55ms, fracRes: 0.0020, norm(attn): 0.2656, norm(output): 0.0398, norm(x): 0.0395, norm(y): 0.9724, norm:7.4851, tok/sec: 110001.04, flops:42.86, batch-reuse:1
@ 1000 train 6.4247 , allloss: 7.1614, dt: 1187.50ms, fracRes: 0.0021, norm(attn): 0.2656, norm(output): 0.0405, norm(x): 0.0400, norm(y): 0.9725, norm:6.7341, tok/sec: 110376.33, flops:43.00, batch-reuse:1
@ 1001 train 6.3936 , allloss: 7.1324, dt: 1201.30ms, fracRes: 0.0023, norm(attn): 0.2637, norm(output): 0.0400, norm(x): 0.0400, norm(y): 0.9724, norm:5.0832, tok/sec: 109108.43, flops:42.51, batch-reuse:1
@ 1002 train 6.2633 , allloss: 7.0076, dt: 1204.98ms, fracRes: 0.0023, norm(attn): 0.2695, norm(output): 0.0396, norm(x): 0.0394, norm(y): 0.9723, norm:5.5375, tok/sec: 108774.81, flops:42.38, batch-reuse:1
@ 1003 train 6.4193 , allloss: 7.1849, dt: 1182.04ms, fracRes: 0.0024, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0395, norm(y): 0.9722, norm:6.0637, tok/sec: 110886.69, flops:43.20, batch-reuse:1
@ 1004 train 6.2709 , allloss: 7.0137, dt: 1187.55ms, fracRes: 0.0024, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9722, norm:6.2478, tok/sec: 110371.52, flops:43.00, batch-reuse:1
@ 1005 train 6.3396 , allloss: 7.0731, dt: 1201.27ms, fracRes: 0.0022, norm(attn): 0.2754, norm(output): 0.0396, norm(x): 0.0391, norm(y): 0.9722, norm:7.6287, tok/sec: 109111.57, flops:42.51, batch-reuse:1
@ 1006 train 6.3532 , allloss: 7.0983, dt: 1216.92ms, fracRes: 0.0023, norm(attn): 0.2637, norm(output): 0.0403, norm(x): 0.0400, norm(y): 0.9721, norm:7.1810, tok/sec: 107707.76, flops:41.96, batch-reuse:1
@ 1007 train 6.3116 , allloss: 7.0305, dt: 1176.33ms, fracRes: 0.0024, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9720, norm:5.2692, tok/sec: 111424.19, flops:43.41, batch-reuse:1
@ 1008 train 6.3679 , allloss: 7.0967, dt: 1203.11ms, fracRes: 0.0024, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9720, norm:9.5102, tok/sec: 108943.95, flops:42.44, batch-reuse:1
@ 1009 train 6.4146 , allloss: 7.2187, dt: 1189.06ms, fracRes: 0.0025, norm(attn): 0.2656, norm(output): 0.0405, norm(x): 0.0407, norm(y): 0.9718, norm:6.8918, tok/sec: 110232.03, flops:42.95, batch-reuse:1
@ 1010 train 6.4373 , allloss: 7.1891, dt: 1187.99ms, fracRes: 0.0023, norm(attn): 0.2598, norm(output): 0.0398, norm(x): 0.0399, norm(y): 0.9718, norm:6.1504, tok/sec: 110331.05, flops:42.98, batch-reuse:1
@ 1011 train 6.3277 , allloss: 7.0423, dt: 1186.24ms, fracRes: 0.0021, norm(attn): 0.2695, norm(output): 0.0391, norm(x): 0.0389, norm(y): 0.9718, norm:7.5379, tok/sec: 110493.46, flops:43.05, batch-reuse:1
@ 1012 train 6.4034 , allloss: 7.1197, dt: 1196.56ms, fracRes: 0.0021, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0392, norm(y): 0.9718, norm:4.9224, tok/sec: 109540.32, flops:42.68, batch-reuse:1
@ 1013 train 6.3898 , allloss: 7.1084, dt: 1199.99ms, fracRes: 0.0020, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0390, norm(y): 0.9717, norm:10.8739, tok/sec: 109227.75, flops:42.56, batch-reuse:1
@ 1014 train 6.2711 , allloss: 7.0155, dt: 1208.16ms, fracRes: 0.0023, norm(attn): 0.2617, norm(output): 0.0396, norm(x): 0.0396, norm(y): 0.9717, norm:5.8257, tok/sec: 108488.80, flops:42.27, batch-reuse:1
@ 1015 train 6.3692 , allloss: 7.1421, dt: 1195.40ms, fracRes: 0.0024, norm(attn): 0.2656, norm(output): 0.0400, norm(x): 0.0398, norm(y): 0.9715, norm:7.6122, tok/sec: 109647.18, flops:42.72, batch-reuse:1
@ 1016 train 6.4181 , allloss: 7.2037, dt: 1211.68ms, fracRes: 0.0025, norm(attn): 0.2656, norm(output): 0.0398, norm(x): 0.0399, norm(y): 0.9714, norm:8.1314, tok/sec: 108174.04, flops:42.14, batch-reuse:1
@ 1017 train 6.2741 , allloss: 7.0432, dt: 1196.05ms, fracRes: 0.0024, norm(attn): 0.2715, norm(output): 0.0393, norm(x): 0.0394, norm(y): 0.9715, norm:5.9045, tok/sec: 109587.55, flops:42.70, batch-reuse:1
@ 1018 train 6.3733 , allloss: 7.1153, dt: 1199.81ms, fracRes: 0.0021, norm(attn): 0.2734, norm(output): 0.0393, norm(x): 0.0389, norm(y): 0.9715, norm:5.4455, tok/sec: 109244.03, flops:42.56, batch-reuse:1
@ 1019 train 6.3834 , allloss: 7.1234, dt: 1197.35ms, fracRes: 0.0022, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9715, norm:5.9534, tok/sec: 109468.52, flops:42.65, batch-reuse:1
@ 1020 train 6.2920 , allloss: 7.0222, dt: 1200.87ms, fracRes: 0.0026, norm(attn): 0.2695, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9715, norm:6.3659, tok/sec: 109147.62, flops:42.52, batch-reuse:1
@ 1021 train 6.2963 , allloss: 7.0272, dt: 1203.43ms, fracRes: 0.0024, norm(attn): 0.2676, norm(output): 0.0396, norm(x): 0.0392, norm(y): 0.9713, norm:6.3329, tok/sec: 108914.95, flops:42.43, batch-reuse:1
@ 1022 train 6.2303 , allloss: 6.9489, dt: 1223.36ms, fracRes: 0.0022, norm(attn): 0.2793, norm(output): 0.0388, norm(x): 0.0384, norm(y): 0.9711, norm:4.5936, tok/sec: 107140.63, flops:41.74, batch-reuse:1
@ 1023 train 6.2616 , allloss: 7.0009, dt: 1182.58ms, fracRes: 0.0023, norm(attn): 0.2695, norm(output): 0.0393, norm(x): 0.0392, norm(y): 0.9711, norm:5.1321, tok/sec: 110835.77, flops:43.18, batch-reuse:1
@ 1024 train 6.2372 , allloss: 6.9778, dt: 1169.71ms, fracRes: 0.0023, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0390, norm(y): 0.9709, norm:6.3468, tok/sec: 112055.29, flops:43.66, batch-reuse:1
@ 1025 train 6.2948 , allloss: 7.0111, dt: 1171.80ms, fracRes: 0.0021, norm(attn): 0.2754, norm(output): 0.0388, norm(x): 0.0386, norm(y): 0.9708, norm:5.8207, tok/sec: 111855.12, flops:43.58, batch-reuse:1
@ 1026 train 6.3726 , allloss: 7.0771, dt: 1207.69ms, fracRes: 0.0021, norm(attn): 0.2715, norm(output): 0.0393, norm(x): 0.0388, norm(y): 0.9708, norm:8.3726, tok/sec: 108531.21, flops:42.28, batch-reuse:1
@ 1027 train 6.3379 , allloss: 7.0641, dt: 1181.35ms, fracRes: 0.0023, norm(attn): 0.2500, norm(output): 0.0403, norm(x): 0.0401, norm(y): 0.9709, norm:7.4107, tok/sec: 110951.41, flops:43.23, batch-reuse:1
@ 1028 train 6.2639 , allloss: 7.0133, dt: 1180.49ms, fracRes: 0.0025, norm(attn): 0.2656, norm(output): 0.0396, norm(x): 0.0396, norm(y): 0.9708, norm:5.9503, tok/sec: 111031.66, flops:43.26, batch-reuse:1
@ 1029 train 6.2685 , allloss: 7.0079, dt: 1197.24ms, fracRes: 0.0025, norm(attn): 0.2617, norm(output): 0.0398, norm(x): 0.0395, norm(y): 0.9708, norm:5.8492, tok/sec: 109478.04, flops:42.65, batch-reuse:1
@ 1030 train 6.3283 , allloss: 7.0409, dt: 1233.61ms, fracRes: 0.0023, norm(attn): 0.2715, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9708, norm:7.1597, tok/sec: 106250.77, flops:41.40, batch-reuse:1
@ 1031 train 6.3509 , allloss: 7.0590, dt: 1230.20ms, fracRes: 0.0022, norm(attn): 0.2793, norm(output): 0.0388, norm(x): 0.0384, norm(y): 0.9706, norm:7.1494, tok/sec: 106545.07, flops:41.51, batch-reuse:1
@ 1032 train 6.2582 , allloss: 6.9944, dt: 1204.32ms, fracRes: 0.0024, norm(attn): 0.2695, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9706, norm:5.2204, tok/sec: 108834.46, flops:42.40, batch-reuse:1
@ 1033 train 6.2534 , allloss: 6.9866, dt: 1203.60ms, fracRes: 0.0022, norm(attn): 0.2715, norm(output): 0.0391, norm(x): 0.0390, norm(y): 0.9705, norm:5.0285, tok/sec: 108900.40, flops:42.43, batch-reuse:1
@ 1034 train 6.2514 , allloss: 6.9967, dt: 1212.50ms, fracRes: 0.0022, norm(attn): 0.2695, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9704, norm:5.9846, tok/sec: 108100.33, flops:42.12, batch-reuse:1
@ 1035 train 6.2918 , allloss: 7.0275, dt: 1180.35ms, fracRes: 0.0020, norm(attn): 0.2773, norm(output): 0.0391, norm(x): 0.0386, norm(y): 0.9703, norm:5.7653, tok/sec: 111044.98, flops:43.26, batch-reuse:1
@ 1036 train 6.3255 , allloss: 7.0834, dt: 1198.96ms, fracRes: 0.0021, norm(attn): 0.2715, norm(output): 0.0396, norm(x): 0.0392, norm(y): 0.9703, norm:6.1825, tok/sec: 109320.99, flops:42.59, batch-reuse:1
@ 1037 train 6.3550 , allloss: 7.1026, dt: 1194.32ms, fracRes: 0.0021, norm(attn): 0.2773, norm(output): 0.0393, norm(x): 0.0388, norm(y): 0.9702, norm:8.3449, tok/sec: 109745.70, flops:42.76, batch-reuse:1
@ 1038 train 6.2744 , allloss: 7.0230, dt: 1205.95ms, fracRes: 0.0023, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9700, norm:6.7343, tok/sec: 108687.63, flops:42.34, batch-reuse:1
@ 1039 train 6.2544 , allloss: 6.9875, dt: 1207.31ms, fracRes: 0.0021, norm(attn): 0.2754, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9701, norm:6.2633, tok/sec: 108564.88, flops:42.30, batch-reuse:1
@ 1040 train 6.1037 , allloss: 6.8163, dt: 1223.88ms, fracRes: 0.0022, norm(attn): 0.2812, norm(output): 0.0381, norm(x): 0.0378, norm(y): 0.9700, norm:6.9202, tok/sec: 107095.50, flops:41.72, batch-reuse:1
@ 1041 train 6.2537 , allloss: 6.9658, dt: 1198.38ms, fracRes: 0.0022, norm(attn): 0.2812, norm(output): 0.0383, norm(x): 0.0380, norm(y): 0.9699, norm:7.5998, tok/sec: 109374.74, flops:42.61, batch-reuse:1
@ 1042 train 6.2209 , allloss: 6.9561, dt: 1199.71ms, fracRes: 0.0021, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0390, norm(y): 0.9700, norm:5.2465, tok/sec: 109252.67, flops:42.56, batch-reuse:1
@ 1043 train 6.3007 , allloss: 7.0355, dt: 1208.63ms, fracRes: 0.0020, norm(attn): 0.2715, norm(output): 0.0391, norm(x): 0.0385, norm(y): 0.9700, norm:5.5740, tok/sec: 108447.13, flops:42.25, batch-reuse:1
@ 1044 train 6.3481 , allloss: 7.0916, dt: 1207.02ms, fracRes: 0.0022, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0389, norm(y): 0.9699, norm:9.7702, tok/sec: 108591.85, flops:42.31, batch-reuse:1
@ 1045 train 6.3218 , allloss: 7.0114, dt: 1202.65ms, fracRes: 0.0021, norm(attn): 0.2812, norm(output): 0.0376, norm(x): 0.0375, norm(y): 0.9699, norm:9.0095, tok/sec: 108986.33, flops:42.46, batch-reuse:1
@ 1046 train 6.2591 , allloss: 6.9796, dt: 1227.72ms, fracRes: 0.0021, norm(attn): 0.2539, norm(output): 0.0396, norm(x): 0.0392, norm(y): 0.9700, norm:6.2600, tok/sec: 106760.27, flops:41.59, batch-reuse:1
@ 1047 train 6.2231 , allloss: 6.9636, dt: 1224.45ms, fracRes: 0.0020, norm(attn): 0.2539, norm(output): 0.0398, norm(x): 0.0395, norm(y): 0.9699, norm:5.9272, tok/sec: 107045.54, flops:41.70, batch-reuse:1
@ 1048 train 6.2618 , allloss: 7.0175, dt: 1200.45ms, fracRes: 0.0020, norm(attn): 0.2637, norm(output): 0.0396, norm(x): 0.0392, norm(y): 0.9697, norm:5.3596, tok/sec: 109185.79, flops:42.54, batch-reuse:1
@ 1049 train 6.2196 , allloss: 6.9748, dt: 1166.70ms, fracRes: 0.0021, norm(attn): 0.2773, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9697, norm:5.8042, tok/sec: 112343.77, flops:43.77, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0142,     0.9023,     0.0830,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0361,     0.8164,     0.0703,     0.0762,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0085,     0.9688,     0.0116,     0.0066,     0.0060,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0315,     0.1133,     0.0332,     0.0354,     0.6836,     0.1016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0859,     0.2178,     0.0674,     0.1543,     0.3223,     0.1055,     0.0479,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0156,     0.0007,     0.0491,     0.1182,     0.7773,     0.0255,     0.0110,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0417,     0.1230,     0.0302,     0.0388,     0.3887,     0.1201,     0.1162,     0.0135,     0.1279,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0228,     0.1846,     0.0243,     0.0498,     0.5078,     0.1016,     0.0422,     0.0049,     0.0356,     0.0280,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0081,     0.7773,     0.0028,     0.0057,     0.0081,     0.0205,     0.0277,     0.0264,     0.0535,     0.0593,     0.0116,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0225,     0.0383,     0.0581,     0.1250,     0.5742,     0.0515,     0.0299,     0.0066,     0.0181,     0.0081,     0.0571,     0.0097,     0.0000,     0.0000,     0.0000],
        [    0.0222,     0.0008,     0.0457,     0.1934,     0.6133,     0.0284,     0.0154,     0.0039,     0.0036,     0.0022,     0.0562,     0.0104,     0.0041,     0.0000,     0.0000],
        [    0.0141,     0.3711,     0.0143,     0.0121,     0.0938,     0.0894,     0.0664,     0.0058,     0.0747,     0.0610,     0.0947,     0.0114,     0.0066,     0.0854,     0.0000],
        [    0.0164,     0.3770,     0.0723,     0.0339,     0.0879,     0.1069,     0.0439,     0.0135,     0.0378,     0.0579,     0.0386,     0.0327,     0.0061,     0.0320,     0.0437]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0023, -0.0301,  0.0235,  ..., -0.0146, -0.0069,  0.0271],
        [ 0.0087,  0.0058,  0.0230,  ..., -0.0026, -0.0353,  0.0106],
        [-0.0020, -0.0008, -0.0100,  ..., -0.0128, -0.0048, -0.0361],
        ...,
        [ 0.0189, -0.0031, -0.0035,  ...,  0.0123,  0.0199, -0.0576],
        [ 0.0154,  0.0078, -0.0252,  ...,  0.0220, -0.0215, -0.0054],
        [-0.0431, -0.0102, -0.0106,  ..., -0.0063, -0.0287, -0.0050]], device='cuda:0', requires_grad=True)
K: tensor([-0.2734,  0.2539, -0.9023, -0.2002, -0.4629,  1.2422, -0.1699, -0.2129, -0.3105,  0.9023, -0.3320, -0.1523,  0.3320,  1.0156,  0.4141, -1.5469, -0.1680,  0.7656,  0.6016,  0.0262, -0.6953, -0.4180,  0.6523,  0.0510, -0.4180, -1.1953, -0.0898, -0.8281,  0.0996,  0.2715,  1.2578, -1.3672,
         0.3965,  0.0840,  0.5547, -0.4980,  0.4102,  0.8008,  0.1650, -0.0378, -0.3047, -0.8438, -1.0234, -0.8438,  0.4453, -0.4375,  0.1680,  0.4062,  0.6211, -0.0547,  0.4824,  0.1729,  0.0344,  0.9336,  0.6680, -0.8359, -1.6250,  0.2793, -1.0547, -1.1328, -0.0859, -0.1001, -0.4863, -0.9336],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0092, -0.0271, -0.0182,  ..., -0.0103,  0.0400,  0.0158],
        [ 0.0023, -0.0249, -0.0014,  ..., -0.0129, -0.0042,  0.0085],
        [-0.0451, -0.0347,  0.0072,  ...,  0.0033,  0.0002,  0.0008],
        ...,
        [ 0.0065,  0.0198, -0.0041,  ..., -0.0395, -0.0233, -0.0117],
        [-0.0240,  0.0043,  0.0074,  ..., -0.0211,  0.0093,  0.0176],
        [ 0.0315,  0.0242, -0.0224,  ...,  0.0102,  0.0043, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0664, -0.5703, -1.0703, -1.4844, -0.6172,  0.9062, -0.7109,  0.4902,  0.7188,  0.4355, -1.0625, -0.7734, -1.5625,  1.2109, -0.2285,  0.0053, -0.4277,  1.6328,  0.1680, -0.9844, -0.8086, -0.2031,  0.2676, -1.0859,  0.1973, -0.2227, -0.7969, -0.7734, -0.1045, -0.4434,  0.1133, -0.2695,
         0.4707, -0.8906,  0.0708, -0.2617,  0.6172,  0.5977, -0.7422,  0.0625, -0.1152,  0.0073,  0.1943, -0.8320,  1.6953, -0.0427, -0.2637, -0.3164,  0.3672, -0.6328, -0.4375, -0.3203, -0.5703, -0.6328,  0.3984, -0.0728,  0.4941, -0.6328, -0.0459, -0.1108, -0.3945, -0.3672,  0.2354,  0.3223],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     13.6250,     -0.8125,      0.4043,     -1.8594,      2.4688,      2.7344,      3.3438,      3.6250,      5.8750,      0.2637,      1.2812,      0.2754,      2.5000,      3.2344],
        [     0.0000,      4.1562,      1.7578,      1.1016,      2.0625,      1.3125,      1.4609,     -0.5938,      0.7539,      0.9688,      0.8086,     -0.2285,     -1.1484,      0.5664,      1.2344],
        [     0.0000,      3.1250,      0.6680,      0.7461,      2.2500,      1.6953,      0.7031,     -0.6953,      0.6445,      0.5859,      1.0469,      0.0361,     -0.9219,      0.6953,      1.2031],
        [     0.0000,      4.7188,      0.3086,     -0.2578,     -0.3457,      0.6406,      1.3438,      1.8516,      1.8672,      2.4531,     -0.0011,      0.3867,      0.6328,      1.2812,      1.1328],
        [     0.0000,      1.2812,      0.0510,      0.1138,      3.0781,      1.1641,      0.8906,     -0.8047,      1.1016,      0.5859,      0.9961,     -0.9336,     -1.1562,      0.8281,      0.2168],
        [     0.0000,      0.9297,     -0.2422,      0.5859,      1.3203,      0.2041,     -0.5859,     -0.5703,     -0.0889,     -0.1621,     -0.2080,     -1.1797,     -0.2275,      0.1426,     -0.2432],
        [     0.0000,     -3.1094,      1.1406,      2.0156,      3.9062,      0.4863,     -0.3516,     -2.0156,     -1.5703,     -1.9062,      1.5156,     -0.9531,     -2.4219,     -0.9258,     -0.1045],
        [     0.0000,      1.0781,     -0.3242,     -0.0732,      2.2344,      1.0547,      1.0234,     -1.1250,      1.1250,      0.5469,      1.6641,     -0.7656,     -1.1719,      1.2969,     -0.4297],
        [     0.0000,      2.0938,      0.0649,      0.7852,      3.0938,      1.4922,      0.6172,     -1.5391,      0.4492,      0.2051,      1.7422,     -1.1641,     -1.9922,      0.9414,      0.1094],
        [     0.0000,      4.5625,     -1.0703,     -0.3477,     -0.0093,      0.9219,      1.2266,      1.1797,      1.8828,      1.9922,      0.3555,      0.3301,      0.4336,      1.2734,     -0.0613],
        [     0.0000,      0.5352,      0.9492,      1.7188,      3.2500,      0.8320,      0.2871,     -1.2266,     -0.2188,     -1.0234,      0.9336,     -0.8398,     -2.0781,      0.1484,      0.4512],
        [     0.0000,     -3.2656,      0.7188,      2.1719,      3.3125,      0.2480,     -0.3652,     -1.7500,     -1.8125,     -2.3125,      0.9297,     -0.7578,     -1.6953,     -0.9297,      0.3477],
        [     0.0000,      3.2656,      0.0148,     -0.1514,      1.8984,      1.8438,      1.5547,     -0.8945,      1.6719,      1.4688,      1.9062,     -0.2158,     -0.7656,      1.8047,      0.2373],
        [     0.0000,      3.1250,      1.4844,      0.7227,      1.6797,      1.8750,      0.9844,     -0.1914,      0.8398,      1.2578,      0.8516,      0.6914,     -0.9961,      0.6680,      0.9805]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0140],
        [0.0371],
        [0.0404],
        [0.0116],
        [0.0115],
        [0.0204],
        [0.0212],
        [0.0150],
        [0.0166],
        [0.0026],
        [0.0170],
        [0.0150],
        [0.0107],
        [0.0175]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.9961,     0.0033,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0032,     0.9414,     0.0237,     0.0299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0005,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0118,     0.1963,     0.0659,     0.0898,     0.5703,     0.0679,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0039,     0.8086,     0.0131,     0.0170,     0.0317,     0.0815,     0.0459,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0192,     0.0009,     0.0630,     0.1338,     0.7773,     0.0019,     0.0043,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0122,     0.2139,     0.0503,     0.0723,     0.4297,     0.0737,     0.1147,     0.0037,     0.0286,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0211,     0.0322,     0.0669,     0.1094,     0.6992,     0.0193,     0.0383,     0.0025,     0.0057,     0.0051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.7734,     0.0249,     0.0175,     0.0189,     0.0562,     0.0520,     0.0060,     0.0164,     0.0304,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0123,     0.0388,     0.1621,     0.1216,     0.5938,     0.0193,     0.0349,     0.0024,     0.0036,     0.0045,     0.0050,     0.0030,     0.0000,     0.0000,     0.0000],
        [    0.0396,     0.0286,     0.1875,     0.2656,     0.4043,     0.0204,     0.0311,     0.0044,     0.0034,     0.0039,     0.0065,     0.0043,     0.0008,     0.0000,     0.0000],
        [    0.0025,     0.6367,     0.0221,     0.0295,     0.0957,     0.0684,     0.0845,     0.0021,     0.0177,     0.0170,     0.0068,     0.0053,     0.0009,     0.0104,     0.0000],
        [    0.0009,     0.6758,     0.0334,     0.0171,     0.0583,     0.0771,     0.0488,     0.0032,     0.0099,     0.0287,     0.0032,     0.0143,     0.0012,     0.0085,     0.0216]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0023, -0.0301,  0.0235,  ..., -0.0146, -0.0069,  0.0271],
        [ 0.0087,  0.0058,  0.0230,  ..., -0.0026, -0.0353,  0.0106],
        [-0.0020, -0.0008, -0.0100,  ..., -0.0128, -0.0048, -0.0361],
        ...,
        [ 0.0189, -0.0031, -0.0035,  ...,  0.0123,  0.0199, -0.0576],
        [ 0.0154,  0.0078, -0.0252,  ...,  0.0220, -0.0215, -0.0054],
        [-0.0431, -0.0102, -0.0106,  ..., -0.0063, -0.0287, -0.0050]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1196, -0.2891,  0.0796, -0.2305, -0.3633,  0.8906, -0.5195,  0.2412,  0.4824,  0.6992, -1.9219, -0.1309,  0.6367,  1.3203,  1.0312, -2.2031, -1.1328,  1.5469,  1.4453, -0.1367,  1.2578, -0.7852, -0.1699, -0.5703, -1.1094, -2.0000,  0.1768, -1.6797,  0.8164, -0.9648,  0.2598, -0.6953,
        -0.3848,  0.4297,  0.8750,  0.6328,  2.0625,  0.2773,  0.1426,  0.7969, -0.7578, -1.5703, -1.3438,  0.0266,  1.2266, -0.3574,  0.0054,  0.1943,  0.3750,  0.0413,  1.2656,  0.3438, -0.3945,  1.5156,  0.0105, -1.2344, -1.1875, -1.3047, -1.2031, -0.9531, -0.9414, -0.5859, -1.3359,  0.0320],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0092, -0.0271, -0.0182,  ..., -0.0103,  0.0400,  0.0158],
        [ 0.0023, -0.0249, -0.0014,  ..., -0.0129, -0.0042,  0.0085],
        [-0.0451, -0.0347,  0.0072,  ...,  0.0033,  0.0002,  0.0008],
        ...,
        [ 0.0065,  0.0198, -0.0041,  ..., -0.0395, -0.0233, -0.0117],
        [-0.0240,  0.0043,  0.0074,  ..., -0.0211,  0.0093,  0.0176],
        [ 0.0315,  0.0242, -0.0224,  ...,  0.0102,  0.0043, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5195, -0.4004, -1.7500, -1.0859, -0.8516,  2.1875, -1.1328,  1.0000, -0.7070,  0.2852, -1.4219, -0.7305, -1.6797,  1.8281, -0.4258, -0.4648, -1.1250,  2.3594,  0.1602, -1.4922, -0.8750, -0.0537, -0.2578, -0.7812,  0.4004, -0.5234, -0.3242, -1.1406,  1.0625, -0.9023,  0.5938, -0.3008,
         0.5977, -0.5391,  0.1250,  0.0859,  1.1250,  1.4688, -1.0469,  0.5898,  1.2656, -0.7969, -0.5117, -0.1895,  2.2500,  0.4844, -0.7578, -0.4590,  0.0840, -0.5703, -0.4199,  0.4336, -0.6016, -0.4219,  0.9414, -1.3750,  0.2012, -0.7422,  0.6719,  0.1406, -0.3340, -1.0156, -0.4199,  1.5781],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 12.0000,  0.7070,  1.3438, -0.2344,  5.5312,  4.8438,  4.0938,  4.8438,  5.4375,  2.2500,  4.5312,  3.2500,  4.8750,  5.1562],
        [ 0.0000,  7.8125,  2.0938,  1.7266,  1.7891,  4.4688,  4.1875,  1.6406,  2.7344,  3.3281,  1.5156,  2.2969,  1.2734,  2.5469,  3.9219],
        [ 0.0000,  5.6875,  2.0000,  2.2344,  2.4688,  3.3906,  3.0469,  0.7383,  1.6719,  2.2031,  0.9492,  1.5000, -0.2500,  1.3203,  2.7969],
        [ 0.0000,  9.5625,  1.8906,  1.7266,  0.4746,  6.0312,  5.0938,  4.3125,  4.7500,  5.4688,  2.1250,  4.3438,  2.8906,  4.6562,  4.8750],
        [ 0.0000,  2.8125,  1.7109,  2.0312,  3.8750,  1.7422,  2.0312, -1.1328,  0.3984,  0.6758, -0.2432, -0.3457, -1.4297, -0.1777,  1.3125],
        [ 0.0000,  5.3438,  1.2188,  1.4766,  2.1094,  3.0469,  2.4688, -0.0178,  1.8047,  1.9141,  0.8086,  0.7695, -0.5742,  1.4297,  2.5312],
        [ 0.0000, -3.0781,  1.1875,  1.9453,  3.7031, -2.3281, -1.5000, -3.6406, -3.7500, -3.5781, -2.4375, -3.5938, -4.4375, -4.4062, -1.6484],
        [ 0.0000,  2.8594,  1.4141,  1.7734,  3.5625,  1.7969,  2.2344, -1.1875,  0.8516,  0.5508,  0.0391, -0.6992, -1.3906,  0.2910,  1.0859],
        [ 0.0000,  0.4180,  1.1562,  1.6406,  3.5000, -0.0933,  0.5977, -2.1250, -1.3125, -1.4219, -1.3203, -2.5625, -3.0781, -1.9141,  0.0596],
        [ 0.0000,  6.3750,  2.9375,  2.5781,  2.6562,  3.7500,  3.6719,  1.5078,  2.5156,  3.1406,  1.1484,  2.7500,  0.4082,  2.2812,  3.1094],
        [ 0.0000,  1.1484,  2.5781,  2.2969,  3.8750,  0.4512,  1.0391, -1.6406, -1.2422, -1.0156, -0.8984, -1.4062, -2.6250, -1.7188,  0.7188],
        [ 0.0000, -0.3242,  1.5547,  1.9062,  2.3281, -0.6602, -0.2383, -2.2031, -2.4375, -2.3125, -1.8125, -2.2031, -3.9531, -2.9844, -0.5664],
        [ 0.0000,  5.5312,  2.1875,  2.4688,  3.6562,  3.3125,  3.5312, -0.1816,  1.9609,  1.9219,  1.0078,  0.7578, -0.9805,  1.4297,  2.7500],
        [ 0.0000,  6.6562,  3.6562,  2.9844,  4.2188,  4.5000,  4.0312,  1.3125,  2.4375,  3.5156,  1.3203,  2.8125,  0.3203,  2.2812,  3.2188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0065],
        [0.0193],
        [0.0106],
        [0.0121],
        [0.0069],
        [0.0088],
        [0.0066],
        [0.0038],
        [0.0097],
        [0.0121],
        [0.0104],
        [0.0112],
        [0.0032],
        [0.0067]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.9844,     0.0036,     0.0106,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.9727,     0.0075,     0.0144,     0.0045,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.8828,     0.0151,     0.0298,     0.0242,     0.0474,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8750,     0.0028,     0.0078,     0.0043,     0.0315,     0.0776,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0613,     0.4492,     0.0613,     0.0806,     0.1445,     0.0674,     0.1196,     0.0148,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.6328,     0.0154,     0.0366,     0.0371,     0.0620,     0.1631,     0.0320,     0.0216,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0325,     0.3750,     0.0767,     0.0854,     0.1680,     0.0535,     0.1436,     0.0337,     0.0177,     0.0148,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.4336,     0.0277,     0.0496,     0.0166,     0.0767,     0.1768,     0.0957,     0.0219,     0.0918,     0.0082,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0120,     0.5195,     0.0569,     0.0684,     0.0430,     0.0742,     0.1357,     0.0371,     0.0159,     0.0156,     0.0098,     0.0114,     0.0000,     0.0000,     0.0000],
        [    0.1089,     0.2930,     0.1196,     0.1318,     0.1191,     0.0432,     0.0977,     0.0266,     0.0159,     0.0098,     0.0118,     0.0137,     0.0081,     0.0000,     0.0000],
        [    0.0003,     0.6758,     0.0088,     0.0201,     0.0094,     0.0479,     0.1484,     0.0219,     0.0161,     0.0203,     0.0045,     0.0072,     0.0069,     0.0106,     0.0000],
        [    0.0000,     0.7656,     0.0051,     0.0096,     0.0018,     0.0408,     0.0898,     0.0260,     0.0065,     0.0334,     0.0011,     0.0067,     0.0048,     0.0050,     0.0052]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0023, -0.0301,  0.0235,  ..., -0.0146, -0.0069,  0.0271],
        [ 0.0087,  0.0058,  0.0230,  ..., -0.0026, -0.0353,  0.0106],
        [-0.0020, -0.0008, -0.0100,  ..., -0.0128, -0.0048, -0.0361],
        ...,
        [ 0.0189, -0.0031, -0.0035,  ...,  0.0123,  0.0199, -0.0576],
        [ 0.0154,  0.0078, -0.0252,  ...,  0.0220, -0.0215, -0.0054],
        [-0.0431, -0.0102, -0.0106,  ..., -0.0063, -0.0287, -0.0050]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4531, -1.3516,  0.6250, -0.8359, -0.6016,  1.1328, -0.7148,  1.1797,  0.5078,  0.7070, -2.7344, -0.2832,  0.2100,  0.6445,  1.1719, -1.6562, -1.2422,  1.2969,  1.1484,  0.0057,  1.5703, -1.2266, -0.5859, -1.0078, -0.4238, -1.7109,  0.3770, -1.2578,  1.0156, -1.2656, -0.7930, -0.2930,
        -0.4902,  0.4746, -0.0483,  1.8750,  1.9844, -0.4102,  0.3008,  0.8633, -0.6914, -1.4766, -1.3438,  0.3750,  1.3672,  0.0623, -0.6602, -0.2148,  0.7383, -0.5078,  1.3594,  0.3008, -0.4355,  1.2812,  0.5664, -0.8008, -0.5547, -2.0156, -0.2246, -0.4805, -1.5391, -0.7695, -0.4238,  1.1641],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0092, -0.0271, -0.0182,  ..., -0.0103,  0.0400,  0.0158],
        [ 0.0023, -0.0249, -0.0014,  ..., -0.0129, -0.0042,  0.0085],
        [-0.0451, -0.0347,  0.0072,  ...,  0.0033,  0.0002,  0.0008],
        ...,
        [ 0.0065,  0.0198, -0.0041,  ..., -0.0395, -0.0233, -0.0117],
        [-0.0240,  0.0043,  0.0074,  ..., -0.0211,  0.0093,  0.0176],
        [ 0.0315,  0.0242, -0.0224,  ...,  0.0102,  0.0043, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9375,  0.2002, -1.1094, -1.3125, -0.3594,  3.0156, -0.5938,  0.8828,  0.1934,  0.5234, -1.7656, -0.0500, -1.2344,  1.8359,  0.2070, -0.7148, -1.5391,  2.0938,  0.5312, -0.9062, -0.0540, -0.1118,  0.1807, -0.3301, -0.1777, -1.2578,  0.1108, -1.2344,  2.3281, -1.3281, -0.2695, -0.5547,
         0.0562, -0.2734,  0.3047,  0.6953,  1.1250,  1.7578, -0.6523,  0.7656,  1.9609, -0.5078, -1.4375,  0.5898,  2.0938,  0.9688, -1.2344, -0.0737, -0.9531,  0.4746, -0.1348,  0.0786, -1.0938, -0.5000,  1.5078, -1.6484, -0.0344, -0.8750,  1.2656,  0.4160, -0.5977, -2.0312, -0.8828,  1.6953],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     10.8125,      1.7969,      3.5938,      1.1328,      6.4062,      6.5000,      5.2812,      5.1562,      4.9062,      2.5469,      4.0938,      4.1875,      4.5938,      4.9688],
        [     0.0000,     10.8125,      3.5625,      4.5000,      1.8047,      7.4688,      7.8750,      6.0938,      5.5312,      5.6562,      2.9531,      4.5000,      4.5312,      4.9375,      5.5312],
        [     0.0000,      8.7500,      3.1406,      4.2188,      2.4844,      5.9062,      6.2500,      4.8438,      4.0625,      4.3438,      2.1875,      3.3438,      3.5312,      3.4688,      4.2812],
        [     0.0000,      8.3125,      3.4375,      4.0938,      2.9219,      6.0938,      6.3750,      6.5938,      5.0312,      6.0625,      3.0469,      4.8438,      5.3750,      4.7812,      4.4062],
        [     0.0000,      7.6875,      3.6094,      4.2812,      4.0938,      4.7500,      5.8438,      3.9844,      3.0938,      3.9688,      1.9531,      2.7812,      2.9688,      2.7656,      3.6406],
        [     0.0000,      8.8125,      3.0469,      4.0625,      3.4844,      5.4688,      6.3750,      4.3750,      4.3125,      4.6562,      2.7656,      3.1719,      3.2969,      3.8281,      4.3750],
        [     0.0000,      1.9922,      0.0005,      0.2695,      0.8555,      0.0967,      0.6680,     -1.4219,     -1.2969,     -2.1562,     -1.5703,     -2.1094,     -2.0312,     -1.8203,      0.4258],
        [     0.0000,      6.8438,      3.1406,      4.0000,      4.0000,      4.5312,      5.5000,      3.8594,      3.4688,      3.8281,      2.4375,      2.7812,      3.2344,      3.0938,      3.2031],
        [     0.0000,      2.4375,      0.8555,      0.9688,      1.6406,      0.4961,      1.4844,      0.0349,     -0.6094,     -0.7852,     -0.8438,     -1.0703,     -0.7070,     -0.7500,      0.4902],
        [     0.0000,      6.5938,      3.8438,      4.4375,      3.3438,      4.8750,      5.6875,      5.0938,      3.6094,      5.0312,      2.6406,      3.8750,      3.9844,      3.3594,      3.6562],
        [     0.0000,      3.7656,      1.5547,      1.7344,      1.2734,      1.8203,      2.4219,      1.1250,      0.2812,      0.2617,     -0.2021,     -0.0552,     -0.1953,     -0.1475,      1.5312],
        [     0.0000,      0.9922,      0.0962,      0.1914,      0.0903,     -0.9258,     -0.1099,     -1.4062,     -1.9219,     -2.4062,     -2.2188,     -2.0781,     -2.5938,     -2.4375,     -0.4961],
        [     0.0000,      7.8125,      3.4688,      4.3125,      3.5312,      5.1562,      6.2812,      4.3750,      4.0938,      4.3125,      2.7969,      3.2656,      3.2344,      3.6562,      3.8281],
        [     0.0000,     10.3125,      5.3125,      5.9375,      4.2812,      7.3750,      8.1875,      6.9375,      5.5625,      7.1875,      3.7188,      5.5938,      5.2500,      5.2812,      5.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0013],
        [0.0105],
        [0.0040],
        [0.0046],
        [0.0032],
        [0.0019],
        [0.0075],
        [0.0016],
        [0.0059],
        [0.0013],
        [0.0060],
        [0.0111],
        [0.0021],
        [0.0032]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0361,     0.7852,     0.1797,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0065,     0.9297,     0.0432,     0.0200,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0170,     0.8789,     0.0576,     0.0447,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0215,     0.2197,     0.0242,     0.0220,     0.0034,     0.7109,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.4512,     0.0006,     0.0004,     0.0000,     0.4160,     0.1318,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0757,     0.2266,     0.0659,     0.0427,     0.0079,     0.5156,     0.0432,     0.0229,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0091,     0.3262,     0.0072,     0.0046,     0.0004,     0.6055,     0.0334,     0.0099,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0420,     0.1436,     0.0654,     0.0175,     0.0021,     0.6797,     0.0308,     0.0076,     0.0095,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.2656,     0.0055,     0.0032,     0.0001,     0.6719,     0.0500,     0.0006,     0.0003,     0.0001,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1289,     0.0815,     0.1201,     0.0845,     0.0271,     0.2305,     0.0588,     0.0306,     0.0464,     0.0216,     0.0264,     0.1436,     0.0000,     0.0000,     0.0000],
        [    0.0303,     0.2539,     0.0286,     0.0167,     0.0020,     0.5000,     0.0669,     0.0123,     0.0119,     0.0020,     0.0123,     0.0405,     0.0211,     0.0000,     0.0000],
        [    0.0109,     0.3496,     0.0089,     0.0069,     0.0009,     0.5039,     0.0469,     0.0146,     0.0020,     0.0020,     0.0176,     0.0144,     0.0217,     0.0010,     0.0000],
        [    0.0001,     0.3457,     0.0011,     0.0005,     0.0000,     0.5352,     0.0845,     0.0000,     0.0001,     0.0000,     0.0002,     0.0002,     0.0002,     0.0000,     0.0320]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0023, -0.0301,  0.0235,  ..., -0.0146, -0.0069,  0.0271],
        [ 0.0087,  0.0058,  0.0230,  ..., -0.0026, -0.0353,  0.0106],
        [-0.0020, -0.0008, -0.0100,  ..., -0.0128, -0.0048, -0.0361],
        ...,
        [ 0.0189, -0.0031, -0.0035,  ...,  0.0123,  0.0199, -0.0576],
        [ 0.0154,  0.0078, -0.0252,  ...,  0.0220, -0.0215, -0.0054],
        [-0.0431, -0.0102, -0.0106,  ..., -0.0063, -0.0287, -0.0050]], device='cuda:0', requires_grad=True)
K: tensor([-0.3926,  0.5312, -0.3730, -0.5156, -0.1816,  0.7266,  0.3281, -0.4727,  0.3926,  1.3594, -1.2109, -0.4883, -0.6523,  0.8750,  1.5391, -0.6641,  0.2617,  2.0625,  2.0000,  0.1030, -0.5703, -3.1562, -0.1240, -0.4609, -0.4746, -0.8125,  0.5664, -1.5000,  0.6211, -1.8672,  0.3496, -0.0349,
         0.1504,  0.9375, -0.8398,  1.7344,  1.3828, -0.7578, -0.4863,  1.7109,  0.4824, -0.3105, -1.8047,  0.6719,  0.0603, -0.2598, -0.2812,  0.6992,  0.5078, -0.1025, -0.7070,  0.3945,  0.2119,  1.0234,  0.6406, -2.1406, -1.2500,  0.5078, -0.9219, -0.3730, -1.0938, -0.5156,  0.0588,  1.2500],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0092, -0.0271, -0.0182,  ..., -0.0103,  0.0400,  0.0158],
        [ 0.0023, -0.0249, -0.0014,  ..., -0.0129, -0.0042,  0.0085],
        [-0.0451, -0.0347,  0.0072,  ...,  0.0033,  0.0002,  0.0008],
        ...,
        [ 0.0065,  0.0198, -0.0041,  ..., -0.0395, -0.0233, -0.0117],
        [-0.0240,  0.0043,  0.0074,  ..., -0.0211,  0.0093,  0.0176],
        [ 0.0315,  0.0242, -0.0224,  ...,  0.0102,  0.0043, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.5391,      0.5938,      0.4082,     -1.7812,      0.1797,      2.3125,     -0.7852,      0.0127,      1.2266,      1.2578,     -0.7148,      0.6953,     -0.1982,      0.2393,      2.1875,     -2.2656,     -1.7031,      1.4453,      0.7422,     -0.5547,      0.4844,     -1.6094,
             0.7227,     -0.2773,     -1.5781,     -1.3125,      0.7891,     -1.2031,      2.5625,     -0.9180,     -0.6562,     -2.2344,      0.2559,     -0.0845,     -0.1602,      0.2432,      1.0000,     -0.7969,     -0.7812,      1.3750,      0.1123,     -0.7188,     -1.4141,      2.0625,
             2.3594,      0.0004,     -0.9648,     -0.9180,     -1.6641,      0.8203,      0.1650,      0.8359,     -2.6562,      2.7188,      0.8789,     -0.7734,     -0.3047,     -1.1172,     -0.1631,     -0.7188,     -0.2910,     -2.3594,     -2.2500,      1.3438], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  5.9062,  2.1406,  1.9297, -1.7656,  7.1250,  4.6250,  0.3281,  0.2021, -2.4062,  0.1797,  1.8672,  2.2500, -0.5000,  3.4688],
        [ 0.0000,  3.0781,  1.6094,  1.0469, -1.3438,  3.7031,  2.4531, -1.2812, -0.2334, -2.0156, -0.4746,  0.8008,  0.3164, -0.2559,  1.6328],
        [ 0.0000,  4.9688,  1.8984,  1.1250, -2.5000,  6.1875,  3.5156, -1.8125, -1.2109, -3.3750, -0.9297,  1.0000,  0.3008, -1.6016,  3.0156],
        [ 0.0000,  3.9531,  1.2266,  0.9688, -1.6641,  4.7188,  2.4062,  0.2676, -0.7188, -0.5352,  0.3457,  1.3047,  1.1641, -1.0391,  2.2344],
        [ 0.0000,  2.3281,  0.1182,  0.0215, -1.8281,  3.5000,  1.6016,  0.2539, -0.2012, -2.0781, -0.4473,  0.6172,  1.0391, -0.7773,  0.9062],
        [ 0.0000,  8.6875,  2.1250,  1.5547, -2.5781,  8.6250,  7.4375, -1.1484, -1.4062, -3.9531,  1.1328,  0.5195,  1.1797, -2.5469,  6.1562],
        [ 0.0000,  1.1016, -0.1387, -0.5703, -2.2656,  1.9219, -0.5586, -1.1953, -0.5820, -2.1719, -0.8477,  0.1670, -0.5859, -0.9805, -0.0830],
        [ 0.0000,  3.5781, -0.2402, -0.6758, -3.0156,  4.1875,  1.2969,  0.0825, -1.8672, -2.2500,  0.0952,  0.3594,  0.5039, -2.5156,  1.3828],
        [ 0.0000,  1.2266,  0.4414, -0.8789, -3.0156,  2.7812, -0.3125, -1.7109, -1.4844, -3.0312, -2.5781,  0.4238, -0.7500, -1.2109,  0.2090],
        [ 0.0000,  6.1875,  2.3125,  1.7812, -1.3438,  7.1250,  4.5312,  0.0645, -0.6211, -1.8359,  0.1035,  1.2422,  1.7422, -1.0859,  4.0938],
        [ 0.0000, -0.4570, -0.0713, -0.4258, -1.5625,  0.5781, -0.7852, -1.4375, -1.0234, -1.7891, -1.5859,  0.1025, -0.8594, -0.8750, -0.5859],
        [ 0.0000,  2.1250, -0.0596, -0.5898, -2.7188,  2.8125,  0.7969, -0.9023, -0.9336, -2.7031, -0.8984,  0.2891, -0.3574, -1.4453,  0.7891],
        [ 0.0000,  3.4688, -0.2070, -0.4551, -2.4688,  3.8281,  1.4609,  0.2910, -1.6875, -1.7188,  0.4766,  0.2793,  0.6875, -2.3438,  1.5000],
        [ 0.0000,  7.7500,  2.0000,  1.2031, -3.0469,  8.1875,  6.3438, -1.7500, -1.0312, -4.1250,  0.4863,  0.4297,  0.4473, -2.1406,  5.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0543],
        [0.0614],
        [0.0391],
        [0.0698],
        [0.0255],
        [0.0509],
        [0.0330],
        [0.0159],
        [0.0438],
        [0.0251],
        [0.0319],
        [0.0396],
        [0.0211],
        [0.0189]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0040,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0542,     0.7344,     0.2100,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0181,     0.8789,     0.0708,     0.0309,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0262,     0.8516,     0.0723,     0.0464,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0200,     0.1338,     0.0182,     0.0152,     0.0020,     0.8125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1309,     0.0004,     0.0002,     0.0000,     0.7188,     0.1484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0684,     0.1738,     0.0537,     0.0284,     0.0043,     0.6211,     0.0371,     0.0131,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0125,     0.1777,     0.0066,     0.0033,     0.0004,     0.7539,     0.0339,     0.0089,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0439,     0.0806,     0.0491,     0.0124,     0.0014,     0.7734,     0.0248,     0.0052,     0.0063,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0825,     0.0023,     0.0012,     0.0000,     0.8906,     0.0233,     0.0002,     0.0002,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1348,     0.0820,     0.1260,     0.0776,     0.0212,     0.2676,     0.0562,     0.0201,     0.0374,     0.0132,     0.0262,     0.1377,     0.0000,     0.0000,     0.0000],
        [    0.0254,     0.1611,     0.0209,     0.0098,     0.0010,     0.6680,     0.0571,     0.0053,     0.0081,     0.0007,     0.0084,     0.0215,     0.0140,     0.0000,     0.0000],
        [    0.0124,     0.1816,     0.0069,     0.0040,     0.0006,     0.7031,     0.0369,     0.0112,     0.0022,     0.0011,     0.0120,     0.0095,     0.0192,     0.0011,     0.0000],
        [    0.0001,     0.0991,     0.0006,     0.0002,     0.0000,     0.7891,     0.0942,     0.0000,     0.0000,     0.0000,     0.0002,     0.0001,     0.0002,     0.0000,     0.0165]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0023, -0.0301,  0.0235,  ..., -0.0146, -0.0069,  0.0271],
        [ 0.0087,  0.0058,  0.0230,  ..., -0.0026, -0.0353,  0.0106],
        [-0.0020, -0.0008, -0.0100,  ..., -0.0128, -0.0048, -0.0361],
        ...,
        [ 0.0189, -0.0031, -0.0035,  ...,  0.0123,  0.0199, -0.0576],
        [ 0.0154,  0.0078, -0.0252,  ...,  0.0220, -0.0215, -0.0054],
        [-0.0431, -0.0102, -0.0106,  ..., -0.0063, -0.0287, -0.0050]], device='cuda:0', requires_grad=True)
K: tensor([-0.3809,  0.4160, -0.4238, -0.3496, -0.2031,  0.6836,  0.4492, -0.3613,  0.4141,  1.1641, -1.0781, -0.3926, -0.7266,  0.8320,  1.3359, -0.6484,  0.4395,  2.1875,  2.0938,  0.3047, -0.6406, -2.8750, -0.2617, -0.5000, -0.5273, -0.8047,  0.3730, -1.3750,  0.6992, -1.9062,  0.0991,  0.0347,
         0.0352,  0.8711, -0.8164,  1.8906,  1.2266, -0.6445, -0.1885,  1.3594,  0.3809, -0.3066, -1.7734,  0.5156, -0.1226, -0.2363, -0.5039,  0.7617,  0.5195, -0.2383, -0.8047,  0.3164, -0.0047,  0.8398,  0.8750, -1.9688, -1.0703,  0.3320, -0.7227, -0.3340, -0.8789, -0.2734,  0.2285,  1.2344],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0092, -0.0271, -0.0182,  ..., -0.0103,  0.0400,  0.0158],
        [ 0.0023, -0.0249, -0.0014,  ..., -0.0129, -0.0042,  0.0085],
        [-0.0451, -0.0347,  0.0072,  ...,  0.0033,  0.0002,  0.0008],
        ...,
        [ 0.0065,  0.0198, -0.0041,  ..., -0.0395, -0.0233, -0.0117],
        [-0.0240,  0.0043,  0.0074,  ..., -0.0211,  0.0093,  0.0176],
        [ 0.0315,  0.0242, -0.0224,  ...,  0.0102,  0.0043, -0.0181]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5117,  0.6758,  0.4473, -1.9922,  0.3398,  2.3750, -0.8359, -0.0825,  1.1875,  1.4531, -0.9922,  0.6914, -0.1768,  0.0737,  2.0781, -2.2344, -1.6719,  1.3984,  0.7383, -0.4512,  0.4707, -1.6484,  0.7695, -0.5898, -1.8516, -1.3516,  0.6836, -1.0859,  2.3750, -0.8320, -0.4941, -2.2188,
         0.3027, -0.0305, -0.1494,  0.2910,  0.7969, -0.9062, -0.7344,  1.4453,  0.0393, -1.0156, -1.3828,  2.0781,  2.6250,  0.0299, -1.0156, -0.9766, -1.6562,  0.7617, -0.0264,  1.0547, -2.6562,  2.8438,  0.8633, -0.8555, -0.5000, -1.1562, -0.0674, -0.7109, -0.3379, -2.4844, -2.3750,  1.1406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  5.5312,  2.0000,  1.8125, -2.2188,  8.0000,  4.7500, -0.1055,  0.1709, -3.0312,  0.3750,  1.5781,  2.5469, -0.5625,  3.4219],
        [ 0.0000,  2.6094,  1.3516,  0.6992, -1.8516,  3.8125,  2.3750, -1.8984, -0.5508, -2.8281, -0.6875,  0.4688,  0.0586, -0.5664,  1.3438],
        [ 0.0000,  3.8906,  1.3672,  0.5352, -3.0625,  6.0938,  3.1875, -2.5000, -1.5000, -4.3125, -1.0234,  0.4219,  0.0525, -1.8516,  2.3125],
        [ 0.0000,  3.4844,  1.0156,  0.5703, -2.1719,  5.1250,  2.3281, -0.1807, -0.9141, -1.2109,  0.0889,  0.8789,  1.1641, -1.2188,  1.9453],
        [ 0.0000,  1.8984, -0.0977, -0.2773, -2.2812,  3.7031,  1.4844, -0.3418, -0.3008, -2.7188, -0.7344,  0.2578,  0.7812, -0.7227,  0.5781],
        [ 0.0000,  7.4062,  1.6094,  0.9180, -3.2656,  9.1250,  7.5625, -1.8359, -1.3750, -5.0000,  1.1328, -0.3145,  1.2891, -2.5000,  5.5312],
        [ 0.0000,  0.9297, -0.2432, -0.8828, -2.7656,  2.2031, -0.6172, -1.6562, -0.7852, -2.7812, -0.9375, -0.1475, -0.8125, -1.1484, -0.1553],
        [ 0.0000,  2.6562, -0.6289, -1.3438, -3.4844,  4.0938,  1.0078, -0.3359, -1.9062, -2.9375, -0.3418, -0.2930,  0.1973, -2.5469,  1.0156],
        [ 0.0000,  0.6016,  0.1069, -1.2656, -3.4844,  2.8750, -0.5742, -2.1406, -1.9375, -3.8438, -2.6562,  0.0596, -0.9297, -1.6797, -0.2373],
        [ 0.0000,  5.7812,  2.2031,  1.5312, -2.0312,  8.1250,  4.5000, -0.3633, -0.4473, -2.7188,  0.1885,  0.9844,  2.0781, -0.9570,  3.7188],
        [ 0.0000, -0.5000, -0.0679, -0.5547, -1.8516,  0.6836, -0.8789, -1.9062, -1.2891, -2.3281, -1.6406,  0.0227, -1.1953, -1.1484, -0.6211],
        [ 0.0000,  1.8516, -0.1953, -0.9492, -3.2812,  3.2656,  0.8125, -1.5547, -1.1406, -3.5938, -1.1016, -0.1660, -0.5977, -1.6016,  0.6367],
        [ 0.0000,  2.6875, -0.5859, -1.1406, -3.0781,  4.0312,  1.0859, -0.1055, -1.7578, -2.4531, -0.0292, -0.2676,  0.4375, -2.4219,  1.1016],
        [ 0.0000,  6.6562,  1.4688,  0.5078, -3.8281,  8.7500,  6.5938, -2.7031, -1.1719, -5.4375,  0.6133, -0.5156,  0.3262, -2.2344,  4.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0553],
        [0.0634],
        [0.0422],
        [0.0840],
        [0.0248],
        [0.0567],
        [0.0359],
        [0.0178],
        [0.0558],
        [0.0204],
        [0.0334],
        [0.0408],
        [0.0201],
        [0.0205]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0815 the:0.0225,:0.0303 and:0.0493.:0.0109,:0.1147 in:0.0165
:0.1089)


------
		( the:0.0225,:0.0303 and:0.0493.:0.0109,:0.1147 in:0.0165
:0.1089The:0.0854)
The first.
The first time.
The first time.
The
@ 1050 train 6.2735 , allloss: 7.0284, dt: 1579.42ms, fracRes: 0.0023, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0386, norm(y): 0.9694, norm:9.8098, tok/sec: 82987.23, flops:32.33, batch-reuse:1
@ 1051 train 6.2152 , allloss: 6.9621, dt: 1196.32ms, fracRes: 0.0022, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0391, norm(y): 0.9696, norm:5.8115, tok/sec: 109562.22, flops:42.69, batch-reuse:1
@ 1052 train 6.1994 , allloss: 6.9254, dt: 1179.97ms, fracRes: 0.0020, norm(attn): 0.2812, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9695, norm:5.6310, tok/sec: 111080.88, flops:43.28, batch-reuse:1
@ 1053 train 6.2508 , allloss: 6.9809, dt: 1191.50ms, fracRes: 0.0020, norm(attn): 0.2715, norm(output): 0.0393, norm(x): 0.0391, norm(y): 0.9695, norm:6.1851, tok/sec: 110005.66, flops:42.86, batch-reuse:1
@ 1054 train 6.2340 , allloss: 6.9581, dt: 1235.73ms, fracRes: 0.0019, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9695, norm:7.8763, tok/sec: 106068.32, flops:41.32, batch-reuse:1
@ 1055 train 6.2212 , allloss: 6.9388, dt: 1232.69ms, fracRes: 0.0019, norm(attn): 0.2793, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9695, norm:7.4197, tok/sec: 106330.05, flops:41.43, batch-reuse:1
@ 1056 train 6.2168 , allloss: 6.9338, dt: 1232.94ms, fracRes: 0.0020, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0390, norm(y): 0.9695, norm:5.3784, tok/sec: 106308.30, flops:41.42, batch-reuse:1
@ 1057 train 6.2590 , allloss: 6.9844, dt: 1190.35ms, fracRes: 0.0021, norm(attn): 0.2656, norm(output): 0.0396, norm(x): 0.0394, norm(y): 0.9694, norm:4.8519, tok/sec: 110112.52, flops:42.90, batch-reuse:1
@ 1058 train 6.2552 , allloss: 6.9780, dt: 1186.76ms, fracRes: 0.0020, norm(attn): 0.2734, norm(output): 0.0393, norm(x): 0.0389, norm(y): 0.9693, norm:4.8431, tok/sec: 110444.94, flops:43.03, batch-reuse:1
@ 1059 train 6.2296 , allloss: 6.9438, dt: 1182.15ms, fracRes: 0.0020, norm(attn): 0.2773, norm(output): 0.0391, norm(x): 0.0385, norm(y): 0.9692, norm:6.4465, tok/sec: 110875.69, flops:43.20, batch-reuse:1
@ 1060 train 6.2586 , allloss: 6.9634, dt: 1195.64ms, fracRes: 0.0019, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0383, norm(y): 0.9692, norm:5.0611, tok/sec: 109624.57, flops:42.71, batch-reuse:1
@ 1061 train 6.3021 , allloss: 7.0196, dt: 1206.39ms, fracRes: 0.0019, norm(attn): 0.2793, norm(output): 0.0393, norm(x): 0.0387, norm(y): 0.9690, norm:7.2322, tok/sec: 108648.19, flops:42.33, batch-reuse:1
@ 1062 train 6.2546 , allloss: 6.9524, dt: 1232.41ms, fracRes: 0.0019, norm(attn): 0.2852, norm(output): 0.0383, norm(x): 0.0379, norm(y): 0.9690, norm:7.6950, tok/sec: 106354.47, flops:41.44, batch-reuse:1
@ 1063 train 6.2630 , allloss: 6.9853, dt: 1231.46ms, fracRes: 0.0020, norm(attn): 0.2656, norm(output): 0.0398, norm(x): 0.0395, norm(y): 0.9691, norm:7.6459, tok/sec: 106436.63, flops:41.47, batch-reuse:1
@ 1064 train 6.3088 , allloss: 7.0286, dt: 1217.00ms, fracRes: 0.0020, norm(attn): 0.2656, norm(output): 0.0396, norm(x): 0.0393, norm(y): 0.9691, norm:7.2834, tok/sec: 107701.14, flops:41.96, batch-reuse:1
@ 1065 train 6.2947 , allloss: 7.0007, dt: 1213.65ms, fracRes: 0.0021, norm(attn): 0.2793, norm(output): 0.0388, norm(x): 0.0385, norm(y): 0.9690, norm:5.6731, tok/sec: 107998.08, flops:42.08, batch-reuse:1
@ 1066 train 6.3027 , allloss: 7.0075, dt: 1211.28ms, fracRes: 0.0020, norm(attn): 0.2773, norm(output): 0.0391, norm(x): 0.0385, norm(y): 0.9689, norm:8.3040, tok/sec: 108209.40, flops:42.16, batch-reuse:1
@ 1067 train 6.3059 , allloss: 7.0368, dt: 1200.04ms, fracRes: 0.0020, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0389, norm(y): 0.9689, norm:6.6323, tok/sec: 109223.04, flops:42.55, batch-reuse:1
@ 1068 train 6.2594 , allloss: 7.0064, dt: 1211.87ms, fracRes: 0.0021, norm(attn): 0.2812, norm(output): 0.0393, norm(x): 0.0391, norm(y): 0.9689, norm:6.8089, tok/sec: 108156.80, flops:42.14, batch-reuse:1
@ 1069 train 6.2061 , allloss: 6.9399, dt: 1202.05ms, fracRes: 0.0020, norm(attn): 0.2754, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9688, norm:7.0431, tok/sec: 109039.94, flops:42.48, batch-reuse:1
@ 1070 train 6.2390 , allloss: 6.9472, dt: 1208.85ms, fracRes: 0.0019, norm(attn): 0.2793, norm(output): 0.0386, norm(x): 0.0381, norm(y): 0.9688, norm:6.3697, tok/sec: 108426.75, flops:42.24, batch-reuse:1
@ 1071 train 6.1563 , allloss: 6.8517, dt: 1201.26ms, fracRes: 0.0021, norm(attn): 0.2773, norm(output): 0.0388, norm(x): 0.0384, norm(y): 0.9686, norm:7.1559, tok/sec: 109111.81, flops:42.51, batch-reuse:1
@ 1072 train 6.2599 , allloss: 6.9605, dt: 1194.71ms, fracRes: 0.0020, norm(attn): 0.2812, norm(output): 0.0383, norm(x): 0.0381, norm(y): 0.9685, norm:6.6008, tok/sec: 109710.17, flops:42.74, batch-reuse:1
@ 1073 train 6.1808 , allloss: 6.8901, dt: 1192.75ms, fracRes: 0.0020, norm(attn): 0.2754, norm(output): 0.0391, norm(x): 0.0386, norm(y): 0.9685, norm:6.1990, tok/sec: 109890.61, flops:42.81, batch-reuse:1
@ 1074 train 6.1597 , allloss: 6.8779, dt: 1231.34ms, fracRes: 0.0019, norm(attn): 0.2715, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9685, norm:4.3959, tok/sec: 106446.62, flops:41.47, batch-reuse:1
@ 1075 train 6.2127 , allloss: 6.9328, dt: 1218.39ms, fracRes: 0.0018, norm(attn): 0.2832, norm(output): 0.0391, norm(x): 0.0383, norm(y): 0.9683, norm:5.4604, tok/sec: 107578.31, flops:41.91, batch-reuse:1
@ 1076 train 6.2416 , allloss: 6.9562, dt: 1213.67ms, fracRes: 0.0019, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0385, norm(y): 0.9684, norm:4.5657, tok/sec: 107996.70, flops:42.08, batch-reuse:1
@ 1077 train 6.1722 , allloss: 6.8548, dt: 1207.33ms, fracRes: 0.0020, norm(attn): 0.2852, norm(output): 0.0386, norm(x): 0.0377, norm(y): 0.9683, norm:4.8823, tok/sec: 108563.91, flops:42.30, batch-reuse:1
@ 1078 train 6.4924 , allloss: 7.1806, dt: 1194.01ms, fracRes: 0.0021, norm(attn): 0.2852, norm(output): 0.0383, norm(x): 0.0379, norm(y): 0.9682, norm:6.2214, tok/sec: 109774.49, flops:42.77, batch-reuse:1
@ 1079 train 6.1631 , allloss: 6.8602, dt: 1218.33ms, fracRes: 0.0023, norm(attn): 0.2812, norm(output): 0.0386, norm(x): 0.0383, norm(y): 0.9682, norm:7.1281, tok/sec: 107583.76, flops:41.91, batch-reuse:1
@ 1080 train 6.2202 , allloss: 6.9322, dt: 1202.59ms, fracRes: 0.0020, norm(attn): 0.2793, norm(output): 0.0388, norm(x): 0.0385, norm(y): 0.9683, norm:5.9235, tok/sec: 108991.80, flops:42.46, batch-reuse:1
@ 1081 train 6.2141 , allloss: 6.9288, dt: 1178.44ms, fracRes: 0.0019, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0381, norm(y): 0.9680, norm:5.9357, tok/sec: 111224.69, flops:43.33, batch-reuse:1
@ 1082 train 6.3678 , allloss: 7.0909, dt: 1204.11ms, fracRes: 0.0020, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0381, norm(y): 0.9678, norm:7.3780, tok/sec: 108853.79, flops:42.41, batch-reuse:1
@ 1083 train 6.2011 , allloss: 6.9251, dt: 1233.22ms, fracRes: 0.0022, norm(attn): 0.2715, norm(output): 0.0391, norm(x): 0.0389, norm(y): 0.9679, norm:7.5591, tok/sec: 106284.06, flops:41.41, batch-reuse:1
@ 1084 train 6.1274 , allloss: 6.8356, dt: 1232.43ms, fracRes: 0.0022, norm(attn): 0.2715, norm(output): 0.0388, norm(x): 0.0387, norm(y): 0.9680, norm:7.8732, tok/sec: 106352.20, flops:41.43, batch-reuse:1
@ 1085 train 6.3307 , allloss: 7.0621, dt: 1227.03ms, fracRes: 0.0021, norm(attn): 0.2695, norm(output): 0.0403, norm(x): 0.0399, norm(y): 0.9682, norm:8.6682, tok/sec: 106820.61, flops:41.62, batch-reuse:1
@ 1086 train 6.2271 , allloss: 6.9493, dt: 1197.55ms, fracRes: 0.0024, norm(attn): 0.2773, norm(output): 0.0391, norm(x): 0.0390, norm(y): 0.9681, norm:9.4736, tok/sec: 109449.75, flops:42.64, batch-reuse:1
@ 1087 train 6.1464 , allloss: 6.8556, dt: 1195.14ms, fracRes: 0.0023, norm(attn): 0.2754, norm(output): 0.0391, norm(x): 0.0389, norm(y): 0.9680, norm:6.0428, tok/sec: 109671.08, flops:42.73, batch-reuse:1
@ 1088 train 6.2555 , allloss: 6.9700, dt: 1246.81ms, fracRes: 0.0022, norm(attn): 0.2734, norm(output): 0.0388, norm(x): 0.0388, norm(y): 0.9679, norm:6.0447, tok/sec: 105125.99, flops:40.96, batch-reuse:1
@ 1089 train 6.1604 , allloss: 6.8781, dt: 1242.15ms, fracRes: 0.0021, norm(attn): 0.2773, norm(output): 0.0388, norm(x): 0.0387, norm(y): 0.9678, norm:6.1089, tok/sec: 105520.32, flops:41.11, batch-reuse:1
@ 1090 train 6.1695 , allloss: 6.8704, dt: 1208.79ms, fracRes: 0.0020, norm(attn): 0.2832, norm(output): 0.0388, norm(x): 0.0383, norm(y): 0.9679, norm:5.8174, tok/sec: 108432.03, flops:42.25, batch-reuse:1
@ 1091 train 6.1971 , allloss: 6.9119, dt: 1191.67ms, fracRes: 0.0021, norm(attn): 0.2734, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9678, norm:5.9344, tok/sec: 109989.77, flops:42.85, batch-reuse:1
@ 1092 train 6.3137 , allloss: 7.0102, dt: 1199.61ms, fracRes: 0.0021, norm(attn): 0.2891, norm(output): 0.0386, norm(x): 0.0383, norm(y): 0.9678, norm:8.3013, tok/sec: 109261.81, flops:42.57, batch-reuse:1
@ 1093 train 6.1684 , allloss: 6.8800, dt: 1194.61ms, fracRes: 0.0022, norm(attn): 0.2773, norm(output): 0.0396, norm(x): 0.0393, norm(y): 0.9677, norm:8.6435, tok/sec: 109719.33, flops:42.75, batch-reuse:1
@ 1094 train 6.1613 , allloss: 6.8775, dt: 1202.38ms, fracRes: 0.0022, norm(attn): 0.2754, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9677, norm:6.5037, tok/sec: 109010.58, flops:42.47, batch-reuse:1
@ 1095 train 6.1506 , allloss: 6.8700, dt: 1228.13ms, fracRes: 0.0023, norm(attn): 0.2773, norm(output): 0.0388, norm(x): 0.0388, norm(y): 0.9674, norm:5.7366, tok/sec: 106724.87, flops:41.58, batch-reuse:1
@ 1096 train 6.1942 , allloss: 6.9272, dt: 1215.63ms, fracRes: 0.0021, norm(attn): 0.2695, norm(output): 0.0391, norm(x): 0.0391, norm(y): 0.9675, norm:5.6492, tok/sec: 107822.42, flops:42.01, batch-reuse:1
@ 1097 train 6.1015 , allloss: 6.8248, dt: 1197.33ms, fracRes: 0.0020, norm(attn): 0.2695, norm(output): 0.0393, norm(x): 0.0390, norm(y): 0.9676, norm:4.5678, tok/sec: 109470.65, flops:42.65, batch-reuse:1
@ 1098 train 6.1328 , allloss: 6.8383, dt: 1202.34ms, fracRes: 0.0019, norm(attn): 0.2754, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9675, norm:5.7185, tok/sec: 109014.03, flops:42.47, batch-reuse:1
@ 1099 train 6.1899 , allloss: 6.8836, dt: 1233.27ms, fracRes: 0.0021, norm(attn): 0.2754, norm(output): 0.0393, norm(x): 0.0391, norm(y): 0.9674, norm:5.1527, tok/sec: 106280.14, flops:41.41, batch-reuse:1
@ 1100 train 6.1784 , allloss: 6.8562, dt: 1219.92ms, fracRes: 0.0020, norm(attn): 0.2852, norm(output): 0.0386, norm(x): 0.0383, norm(y): 0.9673, norm:4.6997, tok/sec: 107442.74, flops:41.86, batch-reuse:1
@ 1101 train 6.2553 , allloss: 6.9521, dt: 1203.00ms, fracRes: 0.0020, norm(attn): 0.2812, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9672, norm:5.8983, tok/sec: 108954.21, flops:42.45, batch-reuse:1
@ 1102 train 6.2112 , allloss: 6.8997, dt: 1212.31ms, fracRes: 0.0022, norm(attn): 0.2832, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9672, norm:6.8198, tok/sec: 108117.58, flops:42.12, batch-reuse:1
@ 1103 train 6.2802 , allloss: 6.9764, dt: 1178.79ms, fracRes: 0.0022, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0391, norm(y): 0.9670, norm:7.2727, tok/sec: 111191.91, flops:43.32, batch-reuse:1
@ 1104 train 6.3750 , allloss: 7.0651, dt: 1203.14ms, fracRes: 0.0022, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9672, norm:7.1873, tok/sec: 108941.54, flops:42.44, batch-reuse:1
@ 1105 train 6.2259 , allloss: 6.9050, dt: 1201.42ms, fracRes: 0.0020, norm(attn): 0.2773, norm(output): 0.0388, norm(x): 0.0385, norm(y): 0.9670, norm:6.7429, tok/sec: 109097.95, flops:42.50, batch-reuse:1
@ 1106 train 6.1802 , allloss: 6.8557, dt: 1190.49ms, fracRes: 0.0021, norm(attn): 0.2891, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9669, norm:8.5098, tok/sec: 110099.18, flops:42.89, batch-reuse:1
@ 1107 train 6.3084 , allloss: 7.0138, dt: 1190.46ms, fracRes: 0.0021, norm(attn): 0.2695, norm(output): 0.0400, norm(x): 0.0397, norm(y): 0.9669, norm:9.1518, tok/sec: 110101.72, flops:42.90, batch-reuse:1
@ 1108 train 6.1914 , allloss: 6.9108, dt: 1189.56ms, fracRes: 0.0022, norm(attn): 0.2754, norm(output): 0.0396, norm(x): 0.0394, norm(y): 0.9669, norm:6.8068, tok/sec: 110185.66, flops:42.93, batch-reuse:1
@ 1109 train 6.1884 , allloss: 6.9079, dt: 1199.17ms, fracRes: 0.0022, norm(attn): 0.2832, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9667, norm:6.3055, tok/sec: 109301.97, flops:42.58, batch-reuse:1
@ 1110 train 6.2018 , allloss: 6.9372, dt: 1195.44ms, fracRes: 0.0023, norm(attn): 0.2793, norm(output): 0.0393, norm(x): 0.0392, norm(y): 0.9666, norm:5.1217, tok/sec: 109643.44, flops:42.72, batch-reuse:1
@ 1111 train 6.1559 , allloss: 6.8695, dt: 1174.62ms, fracRes: 0.0021, norm(attn): 0.2832, norm(output): 0.0388, norm(x): 0.0385, norm(y): 0.9666, norm:4.6224, tok/sec: 111586.58, flops:43.47, batch-reuse:1
@ 1112 train 6.3322 , allloss: 7.0261, dt: 1192.05ms, fracRes: 0.0020, norm(attn): 0.2832, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9665, norm:5.6589, tok/sec: 109955.03, flops:42.84, batch-reuse:1
@ 1113 train 6.3317 , allloss: 7.0162, dt: 1191.08ms, fracRes: 0.0020, norm(attn): 0.2832, norm(output): 0.0386, norm(x): 0.0381, norm(y): 0.9666, norm:7.0583, tok/sec: 110044.70, flops:42.87, batch-reuse:1
@ 1114 train 6.3920 , allloss: 7.0739, dt: 1182.21ms, fracRes: 0.0021, norm(attn): 0.2793, norm(output): 0.0388, norm(x): 0.0384, norm(y): 0.9665, norm:6.5687, tok/sec: 110869.90, flops:43.19, batch-reuse:1
@ 1115 train 6.3542 , allloss: 7.0522, dt: 1194.00ms, fracRes: 0.0021, norm(attn): 0.2793, norm(output): 0.0388, norm(x): 0.0386, norm(y): 0.9665, norm:8.7186, tok/sec: 109775.50, flops:42.77, batch-reuse:1
@ 1116 train 6.2552 , allloss: 6.9832, dt: 1194.20ms, fracRes: 0.0021, norm(attn): 0.2754, norm(output): 0.0391, norm(x): 0.0391, norm(y): 0.9663, norm:6.4466, tok/sec: 109757.38, flops:42.76, batch-reuse:1
@ 1117 train 6.2693 , allloss: 6.9727, dt: 1194.59ms, fracRes: 0.0019, norm(attn): 0.2773, norm(output): 0.0391, norm(x): 0.0385, norm(y): 0.9665, norm:5.8359, tok/sec: 109721.34, flops:42.75, batch-reuse:1
@ 1118 train 6.3633 , allloss: 7.0674, dt: 1207.76ms, fracRes: 0.0020, norm(attn): 0.2676, norm(output): 0.0393, norm(x): 0.0393, norm(y): 0.9663, norm:7.8330, tok/sec: 108524.50, flops:42.28, batch-reuse:1
@ 1119 train 6.3077 , allloss: 7.0160, dt: 1185.15ms, fracRes: 0.0020, norm(attn): 0.2734, norm(output): 0.0393, norm(x): 0.0391, norm(y): 0.9664, norm:5.6061, tok/sec: 110595.02, flops:43.09, batch-reuse:1
@ 1120 train 6.3240 , allloss: 7.0288, dt: 1219.30ms, fracRes: 0.0021, norm(attn): 0.2695, norm(output): 0.0391, norm(x): 0.0390, norm(y): 0.9661, norm:6.9752, tok/sec: 107497.68, flops:41.88, batch-reuse:1
@ 1121 train 6.3826 , allloss: 7.0902, dt: 1214.10ms, fracRes: 0.0020, norm(attn): 0.2715, norm(output): 0.0391, norm(x): 0.0390, norm(y): 0.9662, norm:5.5397, tok/sec: 107957.89, flops:42.06, batch-reuse:1
@ 1122 train 6.3204 , allloss: 7.0293, dt: 1191.88ms, fracRes: 0.0020, norm(attn): 0.2754, norm(output): 0.0393, norm(x): 0.0389, norm(y): 0.9661, norm:5.5889, tok/sec: 109970.83, flops:42.84, batch-reuse:1
@ 1123 train 6.2630 , allloss: 6.9623, dt: 1210.07ms, fracRes: 0.0019, norm(attn): 0.2812, norm(output): 0.0391, norm(x): 0.0385, norm(y): 0.9662, norm:5.6901, tok/sec: 108317.41, flops:42.20, batch-reuse:1
@ 1124 train 6.2859 , allloss: 6.9636, dt: 1240.25ms, fracRes: 0.0019, norm(attn): 0.2871, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9661, norm:5.1604, tok/sec: 105681.60, flops:41.17, batch-reuse:1
@ 1125 train 6.3555 , allloss: 7.0270, dt: 1224.33ms, fracRes: 0.0020, norm(attn): 0.2930, norm(output): 0.0381, norm(x): 0.0379, norm(y): 0.9660, norm:8.8194, tok/sec: 107055.90, flops:41.71, batch-reuse:1
@ 1126 train 6.2998 , allloss: 7.0134, dt: 1237.18ms, fracRes: 0.0019, norm(attn): 0.2852, norm(output): 0.0391, norm(x): 0.0386, norm(y): 0.9659, norm:7.4882, tok/sec: 105944.18, flops:41.28, batch-reuse:1
@ 1127 train 6.2943 , allloss: 7.0233, dt: 1216.86ms, fracRes: 0.0020, norm(attn): 0.2832, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9659, norm:6.0880, tok/sec: 107713.08, flops:41.97, batch-reuse:1
@ 1128 train 6.2956 , allloss: 7.0127, dt: 1236.14ms, fracRes: 0.0022, norm(attn): 0.2695, norm(output): 0.0396, norm(x): 0.0395, norm(y): 0.9659, norm:6.7248, tok/sec: 106033.62, flops:41.31, batch-reuse:1
@ 1129 train 6.2970 , allloss: 6.9809, dt: 1207.82ms, fracRes: 0.0020, norm(attn): 0.2754, norm(output): 0.0386, norm(x): 0.0382, norm(y): 0.9659, norm:5.6626, tok/sec: 108519.66, flops:42.28, batch-reuse:1
@ 1130 train 6.2730 , allloss: 6.9556, dt: 1203.28ms, fracRes: 0.0019, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9658, norm:6.1271, tok/sec: 108929.02, flops:42.44, batch-reuse:1
@ 1131 train 6.3272 , allloss: 7.0224, dt: 1226.02ms, fracRes: 0.0019, norm(attn): 0.2773, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9658, norm:5.9986, tok/sec: 106908.25, flops:41.65, batch-reuse:1
@ 1132 train 6.3356 , allloss: 7.0493, dt: 1218.13ms, fracRes: 0.0019, norm(attn): 0.2656, norm(output): 0.0398, norm(x): 0.0395, norm(y): 0.9656, norm:6.5932, tok/sec: 107600.94, flops:41.92, batch-reuse:1
@ 1133 train 6.3503 , allloss: 7.0730, dt: 1222.04ms, fracRes: 0.0019, norm(attn): 0.2715, norm(output): 0.0393, norm(x): 0.0391, norm(y): 0.9655, norm:6.5656, tok/sec: 107257.06, flops:41.79, batch-reuse:1
@ 1134 train 6.2785 , allloss: 7.0070, dt: 1198.92ms, fracRes: 0.0019, norm(attn): 0.2734, norm(output): 0.0391, norm(x): 0.0389, norm(y): 0.9655, norm:5.4313, tok/sec: 109325.51, flops:42.59, batch-reuse:1
@ 1135 train 6.2699 , allloss: 6.9761, dt: 1208.34ms, fracRes: 0.0019, norm(attn): 0.2754, norm(output): 0.0388, norm(x): 0.0385, norm(y): 0.9653, norm:5.2513, tok/sec: 108472.89, flops:42.26, batch-reuse:1
@ 1136 train 6.3194 , allloss: 7.0151, dt: 1239.61ms, fracRes: 0.0019, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0383, norm(y): 0.9653, norm:5.0069, tok/sec: 105736.87, flops:41.20, batch-reuse:1
@ 1137 train 6.2987 , allloss: 6.9914, dt: 1228.86ms, fracRes: 0.0020, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0386, norm(y): 0.9652, norm:4.9963, tok/sec: 106661.30, flops:41.56, batch-reuse:1
@ 1138 train 6.4420 , allloss: 7.1356, dt: 1197.93ms, fracRes: 0.0019, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0384, norm(y): 0.9652, norm:6.0003, tok/sec: 109415.53, flops:42.63, batch-reuse:1
@ 1139 train 6.2949 , allloss: 6.9980, dt: 1193.84ms, fracRes: 0.0019, norm(attn): 0.2793, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9652, norm:10.0665, tok/sec: 109790.12, flops:42.77, batch-reuse:1
@ 1140 train 6.3271 , allloss: 7.0276, dt: 1209.86ms, fracRes: 0.0018, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9652, norm:6.0780, tok/sec: 108336.66, flops:42.21, batch-reuse:1
@ 1141 train 6.2215 , allloss: 6.8985, dt: 1200.06ms, fracRes: 0.0018, norm(attn): 0.2812, norm(output): 0.0383, norm(x): 0.0378, norm(y): 0.9651, norm:5.0579, tok/sec: 109220.80, flops:42.55, batch-reuse:1
@ 1142 train 6.2504 , allloss: 6.9299, dt: 1184.98ms, fracRes: 0.0019, norm(attn): 0.2715, norm(output): 0.0391, norm(x): 0.0384, norm(y): 0.9651, norm:6.2811, tok/sec: 110610.80, flops:43.09, batch-reuse:1
@ 1143 train 6.2899 , allloss: 6.9760, dt: 1194.17ms, fracRes: 0.0018, norm(attn): 0.2676, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9652, norm:9.7752, tok/sec: 109759.74, flops:42.76, batch-reuse:1
@ 1144 train 6.2894 , allloss: 7.0036, dt: 1191.19ms, fracRes: 0.0020, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9650, norm:7.1265, tok/sec: 110034.81, flops:42.87, batch-reuse:1
@ 1145 train 6.3664 , allloss: 7.1161, dt: 1185.84ms, fracRes: 0.0020, norm(attn): 0.2637, norm(output): 0.0396, norm(x): 0.0392, norm(y): 0.9649, norm:8.1116, tok/sec: 110530.65, flops:43.06, batch-reuse:1
@ 1146 train 6.3345 , allloss: 7.0488, dt: 1193.71ms, fracRes: 0.0019, norm(attn): 0.2812, norm(output): 0.0386, norm(x): 0.0381, norm(y): 0.9648, norm:6.6548, tok/sec: 109802.10, flops:42.78, batch-reuse:1
@ 1147 train 6.3197 , allloss: 7.0024, dt: 1196.56ms, fracRes: 0.0018, norm(attn): 0.2891, norm(output): 0.0376, norm(x): 0.0375, norm(y): 0.9647, norm:7.1187, tok/sec: 109540.93, flops:42.68, batch-reuse:1
@ 1148 train 6.2623 , allloss: 6.9373, dt: 1211.57ms, fracRes: 0.0018, norm(attn): 0.2832, norm(output): 0.0381, norm(x): 0.0376, norm(y): 0.9648, norm:7.5002, tok/sec: 108183.36, flops:42.15, batch-reuse:1
@ 1149 train 6.2812 , allloss: 6.9633, dt: 1224.54ms, fracRes: 0.0019, norm(attn): 0.2617, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9646, norm:8.7319, tok/sec: 107037.72, flops:41.70, batch-reuse:1
@ 1150 train 6.2749 , allloss: 6.9679, dt: 1210.37ms, fracRes: 0.0020, norm(attn): 0.2578, norm(output): 0.0391, norm(x): 0.0392, norm(y): 0.9648, norm:5.0933, tok/sec: 108290.48, flops:42.19, batch-reuse:1
@ 1151 train 6.3681 , allloss: 7.0719, dt: 1205.35ms, fracRes: 0.0021, norm(attn): 0.2656, norm(output): 0.0393, norm(x): 0.0391, norm(y): 0.9647, norm:6.9132, tok/sec: 108741.50, flops:42.37, batch-reuse:1
@ 1152 train 6.2841 , allloss: 6.9709, dt: 1204.75ms, fracRes: 0.0021, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0384, norm(y): 0.9645, norm:7.1314, tok/sec: 108796.12, flops:42.39, batch-reuse:1
@ 1153 train 6.3065 , allloss: 6.9930, dt: 1175.81ms, fracRes: 0.0019, norm(attn): 0.2812, norm(output): 0.0388, norm(x): 0.0384, norm(y): 0.9645, norm:7.3611, tok/sec: 111473.85, flops:43.43, batch-reuse:1
@ 1154 train 6.2726 , allloss: 6.9709, dt: 1214.43ms, fracRes: 0.0019, norm(attn): 0.2676, norm(output): 0.0393, norm(x): 0.0390, norm(y): 0.9645, norm:7.4097, tok/sec: 107929.15, flops:42.05, batch-reuse:1
@ 1155 train 6.1888 , allloss: 6.9139, dt: 1186.58ms, fracRes: 0.0019, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9645, norm:5.1413, tok/sec: 110461.76, flops:43.04, batch-reuse:1
@ 1156 train 6.3196 , allloss: 7.0472, dt: 1186.29ms, fracRes: 0.0018, norm(attn): 0.2598, norm(output): 0.0393, norm(x): 0.0391, norm(y): 0.9645, norm:5.4804, tok/sec: 110489.09, flops:43.05, batch-reuse:1
@ 1157 train 6.2660 , allloss: 6.9700, dt: 1192.46ms, fracRes: 0.0017, norm(attn): 0.2598, norm(output): 0.0393, norm(x): 0.0388, norm(y): 0.9645, norm:6.1322, tok/sec: 109917.07, flops:42.82, batch-reuse:1
@ 1158 train 6.2543 , allloss: 6.9685, dt: 1192.11ms, fracRes: 0.0019, norm(attn): 0.2539, norm(output): 0.0396, norm(x): 0.0392, norm(y): 0.9644, norm:5.8882, tok/sec: 109949.16, flops:42.84, batch-reuse:1
@ 1159 train 6.2994 , allloss: 7.0151, dt: 1183.48ms, fracRes: 0.0019, norm(attn): 0.2598, norm(output): 0.0393, norm(x): 0.0389, norm(y): 0.9643, norm:6.5339, tok/sec: 110751.14, flops:43.15, batch-reuse:1
@ 1160 train 6.2831 , allloss: 6.9624, dt: 1192.90ms, fracRes: 0.0018, norm(attn): 0.2734, norm(output): 0.0388, norm(x): 0.0381, norm(y): 0.9642, norm:6.3902, tok/sec: 109877.00, flops:42.81, batch-reuse:1
@ 1161 train 6.1627 , allloss: 6.8403, dt: 1209.32ms, fracRes: 0.0019, norm(attn): 0.2676, norm(output): 0.0391, norm(x): 0.0384, norm(y): 0.9642, norm:5.4891, tok/sec: 108384.76, flops:42.23, batch-reuse:1
@ 1162 train 6.1282 , allloss: 6.8001, dt: 1179.86ms, fracRes: 0.0019, norm(attn): 0.2656, norm(output): 0.0386, norm(x): 0.0383, norm(y): 0.9642, norm:6.1722, tok/sec: 111090.91, flops:43.28, batch-reuse:1
@ 1163 train 6.2987 , allloss: 6.9673, dt: 1184.02ms, fracRes: 0.0019, norm(attn): 0.2754, norm(output): 0.0386, norm(x): 0.0380, norm(y): 0.9641, norm:6.4185, tok/sec: 110700.52, flops:43.13, batch-reuse:1
@ 1164 train 6.2355 , allloss: 6.9318, dt: 1203.28ms, fracRes: 0.0019, norm(attn): 0.2598, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9640, norm:7.0762, tok/sec: 108928.80, flops:42.44, batch-reuse:1
@ 1165 train 6.3132 , allloss: 7.0011, dt: 1231.49ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0384, norm(y): 0.9641, norm:6.3801, tok/sec: 106433.35, flops:41.47, batch-reuse:1
@ 1166 train 6.2445 , allloss: 6.9316, dt: 1234.56ms, fracRes: 0.0018, norm(attn): 0.2598, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9641, norm:6.4996, tok/sec: 106169.08, flops:41.36, batch-reuse:1
@ 1167 train 6.2063 , allloss: 6.8819, dt: 1198.45ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0391, norm(x): 0.0383, norm(y): 0.9641, norm:5.8723, tok/sec: 109367.49, flops:42.61, batch-reuse:1
@ 1168 train 6.1251 , allloss: 6.7988, dt: 1204.92ms, fracRes: 0.0017, norm(attn): 0.2598, norm(output): 0.0391, norm(x): 0.0384, norm(y): 0.9641, norm:5.4773, tok/sec: 108780.90, flops:42.38, batch-reuse:1
@ 1169 train 6.2488 , allloss: 6.9240, dt: 1198.96ms, fracRes: 0.0018, norm(attn): 0.2637, norm(output): 0.0388, norm(x): 0.0384, norm(y): 0.9640, norm:5.9810, tok/sec: 109321.78, flops:42.59, batch-reuse:1
@ 1170 train 6.1814 , allloss: 6.8636, dt: 1232.12ms, fracRes: 0.0018, norm(attn): 0.2676, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9638, norm:5.2706, tok/sec: 106378.92, flops:41.45, batch-reuse:1
@ 1171 train 6.1406 , allloss: 6.8134, dt: 1176.10ms, fracRes: 0.0016, norm(attn): 0.2793, norm(output): 0.0386, norm(x): 0.0377, norm(y): 0.9638, norm:6.3507, tok/sec: 111446.35, flops:43.42, batch-reuse:1
@ 1172 train 6.3037 , allloss: 6.9996, dt: 1228.24ms, fracRes: 0.0018, norm(attn): 0.2539, norm(output): 0.0393, norm(x): 0.0390, norm(y): 0.9639, norm:7.3808, tok/sec: 106715.32, flops:41.58, batch-reuse:1
@ 1173 train 6.2096 , allloss: 6.8799, dt: 1204.42ms, fracRes: 0.0018, norm(attn): 0.2637, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9638, norm:6.1397, tok/sec: 108825.49, flops:42.40, batch-reuse:1
@ 1174 train 6.1338 , allloss: 6.7922, dt: 1187.56ms, fracRes: 0.0017, norm(attn): 0.2617, norm(output): 0.0388, norm(x): 0.0380, norm(y): 0.9639, norm:6.1413, tok/sec: 110371.21, flops:43.00, batch-reuse:1
@ 1175 train 6.2760 , allloss: 6.9493, dt: 1201.75ms, fracRes: 0.0018, norm(attn): 0.2539, norm(output): 0.0391, norm(x): 0.0386, norm(y): 0.9636, norm:6.0845, tok/sec: 109067.65, flops:42.49, batch-reuse:1
@ 1176 train 6.2989 , allloss: 6.9854, dt: 1195.52ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0385, norm(y): 0.9636, norm:5.6638, tok/sec: 109635.70, flops:42.71, batch-reuse:1
@ 1177 train 6.2646 , allloss: 6.9473, dt: 1195.16ms, fracRes: 0.0016, norm(attn): 0.2676, norm(output): 0.0388, norm(x): 0.0379, norm(y): 0.9635, norm:5.7085, tok/sec: 109668.83, flops:42.73, batch-reuse:1
@ 1178 train 6.3635 , allloss: 7.0364, dt: 1209.46ms, fracRes: 0.0017, norm(attn): 0.2715, norm(output): 0.0388, norm(x): 0.0378, norm(y): 0.9634, norm:7.0092, tok/sec: 108372.29, flops:42.22, batch-reuse:1
@ 1179 train 6.3082 , allloss: 6.9773, dt: 1245.96ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0382, norm(y): 0.9633, norm:8.0652, tok/sec: 105197.70, flops:40.99, batch-reuse:1
@ 1180 train 6.2463 , allloss: 6.9160, dt: 1229.96ms, fracRes: 0.0017, norm(attn): 0.2773, norm(output): 0.0383, norm(x): 0.0378, norm(y): 0.9633, norm:5.9604, tok/sec: 106566.44, flops:41.52, batch-reuse:1
@ 1181 train 6.2060 , allloss: 6.8882, dt: 1235.52ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0388, norm(x): 0.0381, norm(y): 0.9632, norm:6.9666, tok/sec: 106086.56, flops:41.33, batch-reuse:1
@ 1182 train 6.2859 , allloss: 6.9750, dt: 1240.31ms, fracRes: 0.0017, norm(attn): 0.2578, norm(output): 0.0391, norm(x): 0.0386, norm(y): 0.9632, norm:5.5885, tok/sec: 105676.83, flops:41.17, batch-reuse:1
@ 1183 train 6.2592 , allloss: 6.9297, dt: 1214.44ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9632, norm:6.3088, tok/sec: 107927.78, flops:42.05, batch-reuse:1
@ 1184 train 6.1974 , allloss: 6.8631, dt: 1189.10ms, fracRes: 0.0018, norm(attn): 0.2637, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9632, norm:7.3625, tok/sec: 110228.34, flops:42.94, batch-reuse:1
@ 1185 train 6.2726 , allloss: 6.9373, dt: 1202.82ms, fracRes: 0.0018, norm(attn): 0.2695, norm(output): 0.0383, norm(x): 0.0377, norm(y): 0.9630, norm:6.7185, tok/sec: 108970.88, flops:42.46, batch-reuse:1
@ 1186 train 6.2490 , allloss: 6.9356, dt: 1236.92ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0383, norm(x): 0.0380, norm(y): 0.9628, norm:5.3635, tok/sec: 105966.69, flops:41.28, batch-reuse:1
@ 1187 train 6.2498 , allloss: 6.9238, dt: 1226.27ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0381, norm(y): 0.9629, norm:6.2543, tok/sec: 106886.97, flops:41.64, batch-reuse:1
@ 1188 train 6.1531 , allloss: 6.8264, dt: 1224.67ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0386, norm(x): 0.0379, norm(y): 0.9629, norm:6.1837, tok/sec: 107026.49, flops:41.70, batch-reuse:1
@ 1189 train 6.1924 , allloss: 6.8611, dt: 1229.08ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9627, norm:5.9275, tok/sec: 106642.70, flops:41.55, batch-reuse:1
@ 1190 train 6.3130 , allloss: 6.9869, dt: 1230.60ms, fracRes: 0.0017, norm(attn): 0.2793, norm(output): 0.0381, norm(x): 0.0376, norm(y): 0.9626, norm:7.6168, tok/sec: 106510.28, flops:41.50, batch-reuse:1
@ 1191 train 6.3535 , allloss: 7.0222, dt: 1186.71ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0381, norm(x): 0.0378, norm(y): 0.9625, norm:5.9540, tok/sec: 110450.07, flops:43.03, batch-reuse:1
@ 1192 train 6.1700 , allloss: 6.8466, dt: 1179.18ms, fracRes: 0.0018, norm(attn): 0.2578, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9625, norm:4.9989, tok/sec: 111154.84, flops:43.31, batch-reuse:1
@ 1193 train 6.2334 , allloss: 6.9016, dt: 1206.56ms, fracRes: 0.0016, norm(attn): 0.2656, norm(output): 0.0383, norm(x): 0.0377, norm(y): 0.9626, norm:6.3269, tok/sec: 108633.18, flops:42.32, batch-reuse:1
@ 1194 train 6.2382 , allloss: 6.9067, dt: 1188.31ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0383, norm(x): 0.0377, norm(y): 0.9626, norm:4.9276, tok/sec: 110300.90, flops:42.97, batch-reuse:1
@ 1195 train 6.1692 , allloss: 6.8508, dt: 1208.08ms, fracRes: 0.0018, norm(attn): 0.2539, norm(output): 0.0391, norm(x): 0.0386, norm(y): 0.9627, norm:5.5886, tok/sec: 108496.38, flops:42.27, batch-reuse:1
@ 1196 train 6.2814 , allloss: 6.9510, dt: 1186.42ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0382, norm(y): 0.9627, norm:7.7745, tok/sec: 110476.46, flops:43.04, batch-reuse:1
@ 1197 train 6.2205 , allloss: 6.8958, dt: 1193.35ms, fracRes: 0.0020, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0381, norm(y): 0.9624, norm:5.6206, tok/sec: 109835.62, flops:42.79, batch-reuse:1
@ 1198 train 6.2247 , allloss: 6.9032, dt: 1189.31ms, fracRes: 0.0019, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0378, norm(y): 0.9623, norm:8.9216, tok/sec: 110208.34, flops:42.94, batch-reuse:1
@ 1199 train 6.2426 , allloss: 6.9171, dt: 1202.89ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0376, norm(x): 0.0374, norm(y): 0.9622, norm:5.7008, tok/sec: 108964.12, flops:42.45, batch-reuse:1
@ 1200 train 6.2526 , allloss: 6.9361, dt: 1189.21ms, fracRes: 0.0018, norm(attn): 0.2637, norm(output): 0.0381, norm(x): 0.0378, norm(y): 0.9622, norm:6.9910, tok/sec: 110218.00, flops:42.94, batch-reuse:1
@ 1201 train 6.2374 , allloss: 6.9036, dt: 1188.28ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0383, norm(x): 0.0377, norm(y): 0.9622, norm:5.4277, tok/sec: 110304.29, flops:42.97, batch-reuse:1
@ 1202 train 6.2748 , allloss: 6.9524, dt: 1187.50ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0381, norm(x): 0.0378, norm(y): 0.9621, norm:5.7474, tok/sec: 110376.69, flops:43.00, batch-reuse:1
@ 1203 train 6.5281 , allloss: 7.2247, dt: 1178.43ms, fracRes: 0.0020, norm(attn): 0.2656, norm(output): 0.0383, norm(x): 0.0384, norm(y): 0.9618, norm:8.0669, tok/sec: 111225.92, flops:43.33, batch-reuse:1
@ 1204 train 6.2349 , allloss: 6.9161, dt: 1183.51ms, fracRes: 0.0019, norm(attn): 0.2734, norm(output): 0.0378, norm(x): 0.0377, norm(y): 0.9618, norm:10.1562, tok/sec: 110748.20, flops:43.15, batch-reuse:1
@ 1205 train 6.1570 , allloss: 6.8533, dt: 1210.12ms, fracRes: 0.0018, norm(attn): 0.2617, norm(output): 0.0388, norm(x): 0.0383, norm(y): 0.9618, norm:6.0706, tok/sec: 108313.34, flops:42.20, batch-reuse:1
@ 1206 train 6.1802 , allloss: 6.8904, dt: 1197.17ms, fracRes: 0.0019, norm(attn): 0.2500, norm(output): 0.0391, norm(x): 0.0387, norm(y): 0.9619, norm:6.8676, tok/sec: 109485.32, flops:42.66, batch-reuse:1
@ 1207 train 6.2133 , allloss: 6.9434, dt: 1186.61ms, fracRes: 0.0019, norm(attn): 0.2559, norm(output): 0.0391, norm(x): 0.0388, norm(y): 0.9619, norm:7.0378, tok/sec: 110459.59, flops:43.04, batch-reuse:1
@ 1208 train 6.1425 , allloss: 6.8120, dt: 1208.48ms, fracRes: 0.0017, norm(attn): 0.2598, norm(output): 0.0386, norm(x): 0.0378, norm(y): 0.9617, norm:5.5545, tok/sec: 108459.80, flops:42.26, batch-reuse:1
@ 1209 train 6.1794 , allloss: 6.8318, dt: 1216.05ms, fracRes: 0.0016, norm(attn): 0.2676, norm(output): 0.0381, norm(x): 0.0374, norm(y): 0.9616, norm:6.2861, tok/sec: 107784.80, flops:41.99, batch-reuse:1
@ 1210 train 6.1724 , allloss: 6.8335, dt: 1203.29ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0386, norm(x): 0.0377, norm(y): 0.9615, norm:5.8836, tok/sec: 108928.20, flops:42.44, batch-reuse:1
@ 1211 train 6.2200 , allloss: 6.8845, dt: 1203.16ms, fracRes: 0.0018, norm(attn): 0.2676, norm(output): 0.0378, norm(x): 0.0377, norm(y): 0.9615, norm:5.6612, tok/sec: 108939.85, flops:42.44, batch-reuse:1
@ 1212 train 6.2723 , allloss: 6.9590, dt: 1177.68ms, fracRes: 0.0018, norm(attn): 0.2578, norm(output): 0.0388, norm(x): 0.0385, norm(y): 0.9615, norm:6.1634, tok/sec: 111296.47, flops:43.36, batch-reuse:1
@ 1213 train 6.1535 , allloss: 6.8399, dt: 1191.77ms, fracRes: 0.0018, norm(attn): 0.2676, norm(output): 0.0388, norm(x): 0.0380, norm(y): 0.9613, norm:5.4663, tok/sec: 109981.14, flops:42.85, batch-reuse:1
@ 1214 train 6.1795 , allloss: 6.8670, dt: 1180.21ms, fracRes: 0.0017, norm(attn): 0.2715, norm(output): 0.0388, norm(x): 0.0380, norm(y): 0.9612, norm:5.1561, tok/sec: 111058.59, flops:43.27, batch-reuse:1
@ 1215 train 6.1960 , allloss: 6.8771, dt: 1175.09ms, fracRes: 0.0018, norm(attn): 0.2734, norm(output): 0.0381, norm(x): 0.0379, norm(y): 0.9611, norm:5.8068, tok/sec: 111541.79, flops:43.46, batch-reuse:1
@ 1216 train 6.1853 , allloss: 6.8442, dt: 1203.84ms, fracRes: 0.0017, norm(attn): 0.2754, norm(output): 0.0376, norm(x): 0.0374, norm(y): 0.9610, norm:5.3058, tok/sec: 108878.13, flops:42.42, batch-reuse:1
@ 1217 train 6.2153 , allloss: 6.8773, dt: 1181.76ms, fracRes: 0.0018, norm(attn): 0.2617, norm(output): 0.0391, norm(x): 0.0384, norm(y): 0.9610, norm:7.0619, tok/sec: 110912.69, flops:43.21, batch-reuse:1
@ 1218 train 6.1631 , allloss: 6.8270, dt: 1199.50ms, fracRes: 0.0017, norm(attn): 0.2598, norm(output): 0.0396, norm(x): 0.0385, norm(y): 0.9611, norm:7.1188, tok/sec: 109271.84, flops:42.57, batch-reuse:1
@ 1219 train 6.1297 , allloss: 6.7903, dt: 1224.06ms, fracRes: 0.0017, norm(attn): 0.2520, norm(output): 0.0391, norm(x): 0.0383, norm(y): 0.9611, norm:5.0361, tok/sec: 107079.75, flops:41.72, batch-reuse:1
@ 1220 train 6.1936 , allloss: 6.8624, dt: 1189.54ms, fracRes: 0.0017, norm(attn): 0.2520, norm(output): 0.0388, norm(x): 0.0381, norm(y): 0.9610, norm:5.7187, tok/sec: 110187.25, flops:42.93, batch-reuse:1
@ 1221 train 6.1258 , allloss: 6.8047, dt: 1204.72ms, fracRes: 0.0019, norm(attn): 0.2617, norm(output): 0.0386, norm(x): 0.0383, norm(y): 0.9610, norm:5.8347, tok/sec: 108799.07, flops:42.39, batch-reuse:1
@ 1222 train 6.1783 , allloss: 6.8271, dt: 1215.16ms, fracRes: 0.0016, norm(attn): 0.2812, norm(output): 0.0371, norm(x): 0.0365, norm(y): 0.9607, norm:7.3923, tok/sec: 107864.35, flops:42.02, batch-reuse:1
@ 1223 train 6.1673 , allloss: 6.8408, dt: 1218.45ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0383, norm(x): 0.0380, norm(y): 0.9608, norm:6.4281, tok/sec: 107572.50, flops:41.91, batch-reuse:1
@ 1224 train 6.1133 , allloss: 6.7887, dt: 1206.88ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0379, norm(y): 0.9611, norm:5.9522, tok/sec: 108603.80, flops:42.31, batch-reuse:1
@ 1225 train 6.1439 , allloss: 6.8318, dt: 1184.74ms, fracRes: 0.0017, norm(attn): 0.2715, norm(output): 0.0388, norm(x): 0.0378, norm(y): 0.9610, norm:7.5930, tok/sec: 110633.33, flops:43.10, batch-reuse:1
@ 1226 train 6.2195 , allloss: 6.8901, dt: 1191.00ms, fracRes: 0.0017, norm(attn): 0.2676, norm(output): 0.0381, norm(x): 0.0374, norm(y): 0.9609, norm:6.0146, tok/sec: 110052.08, flops:42.88, batch-reuse:1
@ 1227 train 6.1509 , allloss: 6.8227, dt: 1183.60ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0378, norm(x): 0.0374, norm(y): 0.9609, norm:4.2690, tok/sec: 110740.32, flops:43.14, batch-reuse:1
@ 1228 train 6.1238 , allloss: 6.7813, dt: 1188.43ms, fracRes: 0.0016, norm(attn): 0.2734, norm(output): 0.0376, norm(x): 0.0370, norm(y): 0.9609, norm:5.8767, tok/sec: 110290.00, flops:42.97, batch-reuse:1
@ 1229 train 6.1456 , allloss: 6.8203, dt: 1207.00ms, fracRes: 0.0017, norm(attn): 0.2676, norm(output): 0.0376, norm(x): 0.0373, norm(y): 0.9608, norm:4.7797, tok/sec: 108593.10, flops:42.31, batch-reuse:1
@ 1230 train 6.1401 , allloss: 6.8039, dt: 1243.58ms, fracRes: 0.0017, norm(attn): 0.2676, norm(output): 0.0376, norm(x): 0.0369, norm(y): 0.9606, norm:6.1988, tok/sec: 105398.76, flops:41.06, batch-reuse:1
@ 1231 train 6.1709 , allloss: 6.8427, dt: 1200.56ms, fracRes: 0.0016, norm(attn): 0.2656, norm(output): 0.0376, norm(x): 0.0370, norm(y): 0.9605, norm:6.5443, tok/sec: 109175.38, flops:42.53, batch-reuse:1
@ 1232 train 6.1213 , allloss: 6.8281, dt: 1208.16ms, fracRes: 0.0018, norm(attn): 0.2637, norm(output): 0.0378, norm(x): 0.0376, norm(y): 0.9603, norm:5.9883, tok/sec: 108489.03, flops:42.27, batch-reuse:1
@ 1233 train 6.1166 , allloss: 6.8088, dt: 1203.67ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0376, norm(x): 0.0374, norm(y): 0.9604, norm:4.0445, tok/sec: 108893.55, flops:42.42, batch-reuse:1
@ 1234 train 6.1393 , allloss: 6.8058, dt: 1179.85ms, fracRes: 0.0016, norm(attn): 0.2656, norm(output): 0.0376, norm(x): 0.0371, norm(y): 0.9604, norm:5.5280, tok/sec: 111091.99, flops:43.28, batch-reuse:1
@ 1235 train 6.1717 , allloss: 6.8110, dt: 1196.91ms, fracRes: 0.0015, norm(attn): 0.2695, norm(output): 0.0369, norm(x): 0.0364, norm(y): 0.9604, norm:6.1206, tok/sec: 109508.68, flops:42.66, batch-reuse:1
@ 1236 train 6.1915 , allloss: 6.8528, dt: 1223.95ms, fracRes: 0.0017, norm(attn): 0.2539, norm(output): 0.0378, norm(x): 0.0374, norm(y): 0.9605, norm:6.6544, tok/sec: 107089.14, flops:41.72, batch-reuse:1
@ 1237 train 6.1717 , allloss: 6.8442, dt: 1201.72ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0376, norm(x): 0.0373, norm(y): 0.9603, norm:6.5878, tok/sec: 109070.57, flops:42.49, batch-reuse:1
@ 1238 train 6.1348 , allloss: 6.8069, dt: 1202.52ms, fracRes: 0.0018, norm(attn): 0.2598, norm(output): 0.0376, norm(x): 0.0371, norm(y): 0.9603, norm:5.5971, tok/sec: 108997.91, flops:42.47, batch-reuse:1
@ 1239 train 6.1058 , allloss: 6.7687, dt: 1241.49ms, fracRes: 0.0018, norm(attn): 0.2520, norm(output): 0.0378, norm(x): 0.0375, norm(y): 0.9602, norm:5.6224, tok/sec: 105576.15, flops:41.13, batch-reuse:1
@ 1240 train 6.1141 , allloss: 6.7646, dt: 1227.63ms, fracRes: 0.0016, norm(attn): 0.2559, norm(output): 0.0374, norm(x): 0.0371, norm(y): 0.9602, norm:5.3828, tok/sec: 106768.42, flops:41.60, batch-reuse:1
@ 1241 train 6.0846 , allloss: 6.7327, dt: 1190.01ms, fracRes: 0.0017, norm(attn): 0.2539, norm(output): 0.0376, norm(x): 0.0371, norm(y): 0.9600, norm:4.5819, tok/sec: 110143.83, flops:42.91, batch-reuse:1
@ 1242 train 6.1295 , allloss: 6.7930, dt: 1190.31ms, fracRes: 0.0016, norm(attn): 0.2578, norm(output): 0.0376, norm(x): 0.0372, norm(y): 0.9599, norm:4.7407, tok/sec: 110115.46, flops:42.90, batch-reuse:1
@ 1243 train 6.1737 , allloss: 6.8216, dt: 1216.13ms, fracRes: 0.0015, norm(attn): 0.2812, norm(output): 0.0354, norm(x): 0.0353, norm(y): 0.9598, norm:8.5278, tok/sec: 107778.39, flops:41.99, batch-reuse:1
@ 1244 train 6.1608 , allloss: 6.8464, dt: 1223.28ms, fracRes: 0.0019, norm(attn): 0.2539, norm(output): 0.0381, norm(x): 0.0376, norm(y): 0.9598, norm:5.8182, tok/sec: 107147.90, flops:41.74, batch-reuse:1
@ 1245 train 6.1141 , allloss: 6.7753, dt: 1191.69ms, fracRes: 0.0018, norm(attn): 0.2598, norm(output): 0.0376, norm(x): 0.0371, norm(y): 0.9598, norm:6.7668, tok/sec: 109988.18, flops:42.85, batch-reuse:1
@ 1246 train 6.1295 , allloss: 6.7679, dt: 1204.50ms, fracRes: 0.0017, norm(attn): 0.2617, norm(output): 0.0371, norm(x): 0.0368, norm(y): 0.9597, norm:6.0167, tok/sec: 108818.47, flops:42.40, batch-reuse:1
@ 1247 train 6.0640 , allloss: 6.6908, dt: 1230.89ms, fracRes: 0.0015, norm(attn): 0.2656, norm(output): 0.0371, norm(x): 0.0365, norm(y): 0.9599, norm:6.0321, tok/sec: 106485.71, flops:41.49, batch-reuse:1
@ 1248 train 6.1687 , allloss: 6.8049, dt: 1233.80ms, fracRes: 0.0015, norm(attn): 0.2656, norm(output): 0.0366, norm(x): 0.0364, norm(y): 0.9598, norm:7.3385, tok/sec: 106233.99, flops:41.39, batch-reuse:1
@ 1249 train 6.0644 , allloss: 6.7301, dt: 1232.48ms, fracRes: 0.0017, norm(attn): 0.2559, norm(output): 0.0376, norm(x): 0.0371, norm(y): 0.9598, norm:6.4874, tok/sec: 106347.86, flops:41.43, batch-reuse:1
@ 1250 train 6.1889 , allloss: 6.8658, dt: 1230.08ms, fracRes: 0.0017, norm(attn): 0.2617, norm(output): 0.0376, norm(x): 0.0371, norm(y): 0.9595, norm:4.8199, tok/sec: 106555.76, flops:41.51, batch-reuse:1
@ 1251 train 6.1206 , allloss: 6.7850, dt: 1237.93ms, fracRes: 0.0016, norm(attn): 0.2656, norm(output): 0.0371, norm(x): 0.0367, norm(y): 0.9593, norm:6.4429, tok/sec: 105880.16, flops:41.25, batch-reuse:1
@ 1252 train 6.1772 , allloss: 6.8615, dt: 1215.90ms, fracRes: 0.0016, norm(attn): 0.2695, norm(output): 0.0371, norm(x): 0.0366, norm(y): 0.9591, norm:7.7235, tok/sec: 107798.41, flops:42.00, batch-reuse:1
@ 1253 train 6.0680 , allloss: 6.7408, dt: 1229.63ms, fracRes: 0.0017, norm(attn): 0.2676, norm(output): 0.0371, norm(x): 0.0367, norm(y): 0.9592, norm:6.1769, tok/sec: 106594.81, flops:41.53, batch-reuse:1
@ 1254 train 6.1278 , allloss: 6.7874, dt: 1221.14ms, fracRes: 0.0018, norm(attn): 0.2656, norm(output): 0.0371, norm(x): 0.0368, norm(y): 0.9592, norm:4.6401, tok/sec: 107335.44, flops:41.82, batch-reuse:1
@ 1255 train 6.1396 , allloss: 6.7929, dt: 1207.95ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0371, norm(x): 0.0368, norm(y): 0.9590, norm:4.5274, tok/sec: 108507.51, flops:42.27, batch-reuse:1
@ 1256 train 6.0944 , allloss: 6.7401, dt: 1197.23ms, fracRes: 0.0016, norm(attn): 0.2676, norm(output): 0.0369, norm(x): 0.0365, norm(y): 0.9589, norm:6.3975, tok/sec: 109479.52, flops:42.65, batch-reuse:1
@ 1257 train 6.1478 , allloss: 6.7817, dt: 1190.39ms, fracRes: 0.0015, norm(attn): 0.2793, norm(output): 0.0356, norm(x): 0.0356, norm(y): 0.9589, norm:7.1461, tok/sec: 110108.18, flops:42.90, batch-reuse:1
@ 1258 train 6.0782 , allloss: 6.7420, dt: 1193.69ms, fracRes: 0.0016, norm(attn): 0.2656, norm(output): 0.0369, norm(x): 0.0366, norm(y): 0.9589, norm:5.6764, tok/sec: 109803.96, flops:42.78, batch-reuse:1
@ 1259 train 6.1191 , allloss: 6.7840, dt: 1196.65ms, fracRes: 0.0017, norm(attn): 0.2773, norm(output): 0.0364, norm(x): 0.0362, norm(y): 0.9589, norm:6.4674, tok/sec: 109532.27, flops:42.67, batch-reuse:1
@ 1260 train 6.0748 , allloss: 6.7260, dt: 1188.93ms, fracRes: 0.0016, norm(attn): 0.2715, norm(output): 0.0366, norm(x): 0.0363, norm(y): 0.9588, norm:6.1851, tok/sec: 110244.08, flops:42.95, batch-reuse:1
@ 1261 train 6.0790 , allloss: 6.7348, dt: 1208.22ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0371, norm(x): 0.0367, norm(y): 0.9589, norm:5.7239, tok/sec: 108483.34, flops:42.27, batch-reuse:1
@ 1262 train 6.1023 , allloss: 6.7814, dt: 1234.24ms, fracRes: 0.0018, norm(attn): 0.2578, norm(output): 0.0371, norm(x): 0.0370, norm(y): 0.9588, norm:5.8203, tok/sec: 106196.60, flops:41.37, batch-reuse:1
@ 1263 train 6.0605 , allloss: 6.7343, dt: 1207.63ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0369, norm(x): 0.0368, norm(y): 0.9588, norm:6.0386, tok/sec: 108536.35, flops:42.29, batch-reuse:1
@ 1264 train 6.1852 , allloss: 6.8376, dt: 1208.64ms, fracRes: 0.0016, norm(attn): 0.2637, norm(output): 0.0376, norm(x): 0.0369, norm(y): 0.9587, norm:5.9433, tok/sec: 108446.28, flops:42.25, batch-reuse:1
@ 1265 train 6.0836 , allloss: 6.7211, dt: 1224.63ms, fracRes: 0.0016, norm(attn): 0.2637, norm(output): 0.0371, norm(x): 0.0366, norm(y): 0.9587, norm:5.1962, tok/sec: 107029.93, flops:41.70, batch-reuse:1
@ 1266 train 6.1106 , allloss: 6.7463, dt: 1205.07ms, fracRes: 0.0015, norm(attn): 0.2715, norm(output): 0.0361, norm(x): 0.0360, norm(y): 0.9586, norm:6.4028, tok/sec: 108767.08, flops:42.38, batch-reuse:1
@ 1267 train 6.1288 , allloss: 6.7835, dt: 1188.55ms, fracRes: 0.0016, norm(attn): 0.2637, norm(output): 0.0371, norm(x): 0.0366, norm(y): 0.9583, norm:5.3597, tok/sec: 110279.29, flops:42.96, batch-reuse:1
@ 1268 train 6.1539 , allloss: 6.8242, dt: 1179.70ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0371, norm(x): 0.0369, norm(y): 0.9584, norm:5.3438, tok/sec: 111106.04, flops:43.29, batch-reuse:1
@ 1269 train 6.1297 , allloss: 6.7930, dt: 1179.68ms, fracRes: 0.0016, norm(attn): 0.2656, norm(output): 0.0371, norm(x): 0.0369, norm(y): 0.9586, norm:7.7407, tok/sec: 111107.79, flops:43.29, batch-reuse:1
@ 1270 train 6.0834 , allloss: 6.7455, dt: 1190.04ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0369, norm(x): 0.0368, norm(y): 0.9585, norm:8.0580, tok/sec: 110141.09, flops:42.91, batch-reuse:1
@ 1271 train 6.0628 , allloss: 6.7377, dt: 1199.98ms, fracRes: 0.0016, norm(attn): 0.2598, norm(output): 0.0376, norm(x): 0.0372, norm(y): 0.9587, norm:5.5960, tok/sec: 109228.18, flops:42.56, batch-reuse:1
@ 1272 train 6.0849 , allloss: 6.7672, dt: 1197.18ms, fracRes: 0.0017, norm(attn): 0.2539, norm(output): 0.0376, norm(x): 0.0375, norm(y): 0.9585, norm:6.0867, tok/sec: 109483.82, flops:42.65, batch-reuse:1
@ 1273 train 6.1482 , allloss: 6.8006, dt: 1207.80ms, fracRes: 0.0016, norm(attn): 0.2637, norm(output): 0.0366, norm(x): 0.0366, norm(y): 0.9584, norm:7.1766, tok/sec: 108520.94, flops:42.28, batch-reuse:1
@ 1274 train 6.1236 , allloss: 6.7752, dt: 1200.23ms, fracRes: 0.0016, norm(attn): 0.2520, norm(output): 0.0376, norm(x): 0.0369, norm(y): 0.9582, norm:8.0560, tok/sec: 109205.70, flops:42.55, batch-reuse:1
@ 1275 train 6.2356 , allloss: 6.8951, dt: 1186.02ms, fracRes: 0.0016, norm(attn): 0.2539, norm(output): 0.0376, norm(x): 0.0371, norm(y): 0.9582, norm:7.1024, tok/sec: 110514.12, flops:43.06, batch-reuse:1
@ 1276 train 6.0446 , allloss: 6.7021, dt: 1204.73ms, fracRes: 0.0017, norm(attn): 0.2539, norm(output): 0.0371, norm(x): 0.0370, norm(y): 0.9581, norm:6.3930, tok/sec: 108797.71, flops:42.39, batch-reuse:1
@ 1277 train 6.0280 , allloss: 6.6725, dt: 1205.94ms, fracRes: 0.0016, norm(attn): 0.2637, norm(output): 0.0366, norm(x): 0.0365, norm(y): 0.9580, norm:6.4914, tok/sec: 108688.23, flops:42.34, batch-reuse:1
@ 1278 train 6.1301 , allloss: 6.7740, dt: 1172.28ms, fracRes: 0.0015, norm(attn): 0.2656, norm(output): 0.0376, norm(x): 0.0366, norm(y): 0.9580, norm:4.7204, tok/sec: 111809.82, flops:43.56, batch-reuse:1
@ 1279 train 6.2004 , allloss: 6.8467, dt: 1204.50ms, fracRes: 0.0016, norm(attn): 0.2656, norm(output): 0.0376, norm(x): 0.0368, norm(y): 0.9579, norm:5.1797, tok/sec: 108818.99, flops:42.40, batch-reuse:1
@ 1280 train 6.0567 , allloss: 6.7128, dt: 1216.89ms, fracRes: 0.0017, norm(attn): 0.2617, norm(output): 0.0371, norm(x): 0.0368, norm(y): 0.9578, norm:8.3328, tok/sec: 107710.21, flops:41.96, batch-reuse:1
@ 1281 train 6.0435 , allloss: 6.6907, dt: 1240.06ms, fracRes: 0.0017, norm(attn): 0.2695, norm(output): 0.0364, norm(x): 0.0362, norm(y): 0.9577, norm:4.9638, tok/sec: 105698.18, flops:41.18, batch-reuse:1
@ 1282 train 6.0457 , allloss: 6.6899, dt: 1230.97ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0366, norm(x): 0.0365, norm(y): 0.9577, norm:5.6615, tok/sec: 106478.27, flops:41.48, batch-reuse:1
@ 1283 train 6.0918 , allloss: 6.7555, dt: 1196.12ms, fracRes: 0.0016, norm(attn): 0.2637, norm(output): 0.0371, norm(x): 0.0366, norm(y): 0.9578, norm:7.3703, tok/sec: 109580.69, flops:42.69, batch-reuse:1
@ 1284 train 6.0509 , allloss: 6.7339, dt: 1230.73ms, fracRes: 0.0018, norm(attn): 0.2598, norm(output): 0.0371, norm(x): 0.0370, norm(y): 0.9575, norm:6.6847, tok/sec: 106499.37, flops:41.49, batch-reuse:1
@ 1285 train 5.9950 , allloss: 6.6651, dt: 1200.69ms, fracRes: 0.0016, norm(attn): 0.2715, norm(output): 0.0366, norm(x): 0.0364, norm(y): 0.9575, norm:6.4446, tok/sec: 109164.07, flops:42.53, batch-reuse:1
@ 1286 train 6.1811 , allloss: 6.8490, dt: 1205.49ms, fracRes: 0.0016, norm(attn): 0.2617, norm(output): 0.0376, norm(x): 0.0370, norm(y): 0.9575, norm:4.9942, tok/sec: 108729.39, flops:42.36, batch-reuse:1
@ 1287 train 6.1358 , allloss: 6.7769, dt: 1226.44ms, fracRes: 0.0016, norm(attn): 0.2598, norm(output): 0.0376, norm(x): 0.0370, norm(y): 0.9574, norm:7.9137, tok/sec: 106871.57, flops:41.64, batch-reuse:1
@ 1288 train 6.1196 , allloss: 6.7485, dt: 1191.91ms, fracRes: 0.0015, norm(attn): 0.2559, norm(output): 0.0371, norm(x): 0.0368, norm(y): 0.9576, norm:6.7782, tok/sec: 109967.66, flops:42.84, batch-reuse:1
@ 1289 train 6.0233 , allloss: 6.6561, dt: 1194.39ms, fracRes: 0.0016, norm(attn): 0.2617, norm(output): 0.0366, norm(x): 0.0364, norm(y): 0.9574, norm:7.4745, tok/sec: 109739.85, flops:42.75, batch-reuse:1
@ 1290 train 6.0264 , allloss: 6.6739, dt: 1223.01ms, fracRes: 0.0016, norm(attn): 0.2656, norm(output): 0.0364, norm(x): 0.0361, norm(y): 0.9573, norm:6.6233, tok/sec: 107171.33, flops:41.75, batch-reuse:1
@ 1291 train 6.0973 , allloss: 6.7589, dt: 1212.98ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0366, norm(x): 0.0362, norm(y): 0.9572, norm:7.4946, tok/sec: 108058.28, flops:42.10, batch-reuse:1
@ 1292 train 6.0705 , allloss: 6.7519, dt: 1206.35ms, fracRes: 0.0018, norm(attn): 0.2578, norm(output): 0.0374, norm(x): 0.0370, norm(y): 0.9572, norm:5.7202, tok/sec: 108651.39, flops:42.33, batch-reuse:1
@ 1293 train 6.0858 , allloss: 6.7456, dt: 1217.56ms, fracRes: 0.0018, norm(attn): 0.2617, norm(output): 0.0371, norm(x): 0.0368, norm(y): 0.9573, norm:5.4168, tok/sec: 107651.28, flops:41.94, batch-reuse:1
@ 1294 train 6.0028 , allloss: 6.6559, dt: 1211.70ms, fracRes: 0.0016, norm(attn): 0.2617, norm(output): 0.0371, norm(x): 0.0366, norm(y): 0.9573, norm:5.2800, tok/sec: 108171.87, flops:42.14, batch-reuse:1
@ 1295 train 6.1593 , allloss: 6.8155, dt: 1241.60ms, fracRes: 0.0016, norm(attn): 0.2637, norm(output): 0.0369, norm(x): 0.0362, norm(y): 0.9570, norm:7.3218, tok/sec: 105567.43, flops:41.13, batch-reuse:1
@ 1296 train 6.1403 , allloss: 6.7927, dt: 1215.49ms, fracRes: 0.0016, norm(attn): 0.2676, norm(output): 0.0361, norm(x): 0.0360, norm(y): 0.9570, norm:6.8916, tok/sec: 107834.92, flops:42.01, batch-reuse:1
@ 1297 train 6.1864 , allloss: 6.8365, dt: 1202.11ms, fracRes: 0.0017, norm(attn): 0.2617, norm(output): 0.0369, norm(x): 0.0365, norm(y): 0.9569, norm:6.8507, tok/sec: 109034.75, flops:42.48, batch-reuse:1
@ 1298 train 6.2661 , allloss: 6.9299, dt: 1194.83ms, fracRes: 0.0017, norm(attn): 0.2617, norm(output): 0.0376, norm(x): 0.0370, norm(y): 0.9569, norm:5.6247, tok/sec: 109699.16, flops:42.74, batch-reuse:1
@ 1299 train 6.2392 , allloss: 6.9086, dt: 1178.88ms, fracRes: 0.0017, norm(attn): 0.2539, norm(output): 0.0376, norm(x): 0.0373, norm(y): 0.9569, norm:5.3504, tok/sec: 111183.41, flops:43.32, batch-reuse:1
@ 1300 train 6.2103 , allloss: 6.8836, dt: 1210.13ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0374, norm(x): 0.0370, norm(y): 0.9566, norm:8.0791, tok/sec: 108312.76, flops:42.20, batch-reuse:1
@ 1301 train 6.2736 , allloss: 6.9344, dt: 1205.10ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0369, norm(x): 0.0366, norm(y): 0.9566, norm:6.0685, tok/sec: 108764.35, flops:42.37, batch-reuse:1
@ 1302 train 6.2481 , allloss: 6.9054, dt: 1192.90ms, fracRes: 0.0018, norm(attn): 0.2559, norm(output): 0.0376, norm(x): 0.0369, norm(y): 0.9569, norm:5.5331, tok/sec: 109876.47, flops:42.81, batch-reuse:1
@ 1303 train 6.3072 , allloss: 6.9768, dt: 1174.39ms, fracRes: 0.0018, norm(attn): 0.2461, norm(output): 0.0381, norm(x): 0.0376, norm(y): 0.9569, norm:6.0337, tok/sec: 111608.50, flops:43.48, batch-reuse:1
@ 1304 train 6.2437 , allloss: 6.9142, dt: 1200.91ms, fracRes: 0.0018, norm(attn): 0.2412, norm(output): 0.0381, norm(x): 0.0377, norm(y): 0.9568, norm:5.4667, tok/sec: 109143.61, flops:42.52, batch-reuse:1
@ 1305 train 6.2476 , allloss: 6.9112, dt: 1234.09ms, fracRes: 0.0018, norm(attn): 0.2490, norm(output): 0.0376, norm(x): 0.0372, norm(y): 0.9565, norm:7.2368, tok/sec: 106209.16, flops:41.38, batch-reuse:1
@ 1306 train 6.1834 , allloss: 6.8344, dt: 1209.47ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0361, norm(x): 0.0362, norm(y): 0.9563, norm:5.3656, tok/sec: 108371.35, flops:42.22, batch-reuse:1
@ 1307 train 6.3051 , allloss: 6.9412, dt: 1173.75ms, fracRes: 0.0017, norm(attn): 0.2773, norm(output): 0.0356, norm(x): 0.0357, norm(y): 0.9562, norm:6.3229, tok/sec: 111669.90, flops:43.51, batch-reuse:1
@ 1308 train 6.2735 , allloss: 6.9217, dt: 1199.07ms, fracRes: 0.0017, norm(attn): 0.2598, norm(output): 0.0371, norm(x): 0.0367, norm(y): 0.9562, norm:6.1872, tok/sec: 109311.80, flops:42.59, batch-reuse:1
@ 1309 train 6.2444 , allloss: 6.8845, dt: 1197.77ms, fracRes: 0.0017, norm(attn): 0.2539, norm(output): 0.0369, norm(x): 0.0365, norm(y): 0.9563, norm:7.7634, tok/sec: 109429.69, flops:42.63, batch-reuse:1
@ 1310 train 6.2325 , allloss: 6.8691, dt: 1196.60ms, fracRes: 0.0018, norm(attn): 0.2490, norm(output): 0.0371, norm(x): 0.0369, norm(y): 0.9563, norm:6.8879, tok/sec: 109536.70, flops:42.68, batch-reuse:1
@ 1311 train 6.2874 , allloss: 6.9357, dt: 1186.88ms, fracRes: 0.0018, norm(attn): 0.2480, norm(output): 0.0376, norm(x): 0.0373, norm(y): 0.9562, norm:4.9962, tok/sec: 110433.85, flops:43.03, batch-reuse:1
@ 1312 train 6.2235 , allloss: 6.8727, dt: 1175.70ms, fracRes: 0.0018, norm(attn): 0.2520, norm(output): 0.0376, norm(x): 0.0370, norm(y): 0.9561, norm:5.1308, tok/sec: 111484.34, flops:43.43, batch-reuse:1
@ 1313 train 6.2582 , allloss: 6.9122, dt: 1207.12ms, fracRes: 0.0018, norm(attn): 0.2617, norm(output): 0.0366, norm(x): 0.0364, norm(y): 0.9559, norm:5.5405, tok/sec: 108582.39, flops:42.30, batch-reuse:1
@ 1314 train 6.2360 , allloss: 6.8960, dt: 1233.21ms, fracRes: 0.0017, norm(attn): 0.2656, norm(output): 0.0366, norm(x): 0.0363, norm(y): 0.9559, norm:5.9373, tok/sec: 106285.40, flops:41.41, batch-reuse:1
@ 1315 train 6.2012 , allloss: 6.8453, dt: 1238.28ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0364, norm(x): 0.0361, norm(y): 0.9561, norm:8.0640, tok/sec: 105849.74, flops:41.24, batch-reuse:1
@ 1316 train 6.1744 , allloss: 6.8242, dt: 1234.28ms, fracRes: 0.0017, norm(attn): 0.2578, norm(output): 0.0371, norm(x): 0.0367, norm(y): 0.9561, norm:7.1174, tok/sec: 106193.05, flops:41.37, batch-reuse:1
@ 1317 train 6.2963 , allloss: 6.9718, dt: 1243.43ms, fracRes: 0.0018, norm(attn): 0.2500, norm(output): 0.0378, norm(x): 0.0375, norm(y): 0.9560, norm:6.7850, tok/sec: 105411.31, flops:41.07, batch-reuse:1
@ 1318 train 6.1464 , allloss: 6.7988, dt: 1203.19ms, fracRes: 0.0016, norm(attn): 0.2578, norm(output): 0.0366, norm(x): 0.0364, norm(y): 0.9558, norm:5.2339, tok/sec: 108937.43, flops:42.44, batch-reuse:1
@ 1319 train 6.2501 , allloss: 6.8727, dt: 1178.78ms, fracRes: 0.0015, norm(attn): 0.2676, norm(output): 0.0356, norm(x): 0.0355, norm(y): 0.9557, norm:5.9932, tok/sec: 111192.58, flops:43.32, batch-reuse:1
@ 1320 train 6.2588 , allloss: 6.8809, dt: 1206.45ms, fracRes: 0.0015, norm(attn): 0.2559, norm(output): 0.0364, norm(x): 0.0361, norm(y): 0.9559, norm:6.2375, tok/sec: 108642.82, flops:42.33, batch-reuse:1
@ 1321 train 6.2372 , allloss: 6.8654, dt: 1189.30ms, fracRes: 0.0016, norm(attn): 0.2578, norm(output): 0.0364, norm(x): 0.0362, norm(y): 0.9557, norm:5.7208, tok/sec: 110209.21, flops:42.94, batch-reuse:1
@ 1322 train 6.2166 , allloss: 6.8625, dt: 1196.15ms, fracRes: 0.0017, norm(attn): 0.2520, norm(output): 0.0366, norm(x): 0.0366, norm(y): 0.9556, norm:6.4057, tok/sec: 109578.57, flops:42.69, batch-reuse:1
@ 1323 train 6.2428 , allloss: 6.8876, dt: 1204.98ms, fracRes: 0.0016, norm(attn): 0.2559, norm(output): 0.0366, norm(x): 0.0364, norm(y): 0.9555, norm:7.6635, tok/sec: 108775.17, flops:42.38, batch-reuse:1
@ 1324 train 6.2763 , allloss: 6.9228, dt: 1201.83ms, fracRes: 0.0017, norm(attn): 0.2490, norm(output): 0.0374, norm(x): 0.0370, norm(y): 0.9555, norm:5.8623, tok/sec: 109060.03, flops:42.49, batch-reuse:1
@ 1325 train 6.1787 , allloss: 6.8124, dt: 1211.29ms, fracRes: 0.0017, norm(attn): 0.2559, norm(output): 0.0366, norm(x): 0.0364, norm(y): 0.9554, norm:5.5639, tok/sec: 108208.53, flops:42.16, batch-reuse:1
@ 1326 train 6.1370 , allloss: 6.7679, dt: 1196.26ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0359, norm(x): 0.0357, norm(y): 0.9554, norm:5.9285, tok/sec: 109567.79, flops:42.69, batch-reuse:1
@ 1327 train 6.2633 , allloss: 6.8892, dt: 1207.23ms, fracRes: 0.0017, norm(attn): 0.2637, norm(output): 0.0366, norm(x): 0.0362, norm(y): 0.9554, norm:6.9641, tok/sec: 108572.14, flops:42.30, batch-reuse:1
@ 1328 train 6.1987 , allloss: 6.8234, dt: 1213.00ms, fracRes: 0.0018, norm(attn): 0.2500, norm(output): 0.0366, norm(x): 0.0366, norm(y): 0.9556, norm:5.5882, tok/sec: 108055.63, flops:42.10, batch-reuse:1
@ 1329 train 6.1962 , allloss: 6.8185, dt: 1193.81ms, fracRes: 0.0017, norm(attn): 0.2520, norm(output): 0.0361, norm(x): 0.0361, norm(y): 0.9553, norm:4.9585, tok/sec: 109792.97, flops:42.78, batch-reuse:1
@ 1330 train 6.2752 , allloss: 6.8940, dt: 1206.86ms, fracRes: 0.0016, norm(attn): 0.2578, norm(output): 0.0359, norm(x): 0.0357, norm(y): 0.9551, norm:6.0255, tok/sec: 108606.03, flops:42.31, batch-reuse:1
@ 1331 train 6.2404 , allloss: 6.8681, dt: 1196.28ms, fracRes: 0.0015, norm(attn): 0.2637, norm(output): 0.0356, norm(x): 0.0355, norm(y): 0.9551, norm:5.8905, tok/sec: 109566.76, flops:42.69, batch-reuse:1
@ 1332 train 6.2014 , allloss: 6.8512, dt: 1248.12ms, fracRes: 0.0016, norm(attn): 0.2539, norm(output): 0.0364, norm(x): 0.0361, norm(y): 0.9549, norm:5.8491, tok/sec: 105015.58, flops:40.91, batch-reuse:1
@ 1333 train 6.1769 , allloss: 6.8168, dt: 1235.38ms, fracRes: 0.0016, norm(attn): 0.2598, norm(output): 0.0359, norm(x): 0.0359, norm(y): 0.9548, norm:7.4829, tok/sec: 106098.64, flops:41.34, batch-reuse:1
@ 1334 train 6.1908 , allloss: 6.8328, dt: 1218.36ms, fracRes: 0.0016, norm(attn): 0.2520, norm(output): 0.0361, norm(x): 0.0361, norm(y): 0.9546, norm:7.0858, tok/sec: 107580.64, flops:41.91, batch-reuse:1
@ 1335 train 6.2288 , allloss: 6.8739, dt: 1208.61ms, fracRes: 0.0016, norm(attn): 0.2520, norm(output): 0.0361, norm(x): 0.0359, norm(y): 0.9545, norm:6.3785, tok/sec: 108448.35, flops:42.25, batch-reuse:1
@ 1336 train 6.2712 , allloss: 6.9068, dt: 1196.86ms, fracRes: 0.0017, norm(attn): 0.2520, norm(output): 0.0359, norm(x): 0.0359, norm(y): 0.9546, norm:7.1965, tok/sec: 109513.11, flops:42.67, batch-reuse:1
@ 1337 train 6.2447 , allloss: 6.8871, dt: 1205.77ms, fracRes: 0.0018, norm(attn): 0.2383, norm(output): 0.0376, norm(x): 0.0370, norm(y): 0.9546, norm:7.2354, tok/sec: 108704.41, flops:42.35, batch-reuse:1
@ 1338 train 6.2293 , allloss: 6.8672, dt: 1183.34ms, fracRes: 0.0018, norm(attn): 0.2363, norm(output): 0.0366, norm(x): 0.0365, norm(y): 0.9547, norm:5.1411, tok/sec: 110764.06, flops:43.15, batch-reuse:1
@ 1339 train 6.2552 , allloss: 6.8816, dt: 1199.87ms, fracRes: 0.0017, norm(attn): 0.2520, norm(output): 0.0359, norm(x): 0.0357, norm(y): 0.9545, norm:6.6247, tok/sec: 109238.43, flops:42.56, batch-reuse:1
@ 1340 train 6.1943 , allloss: 6.8174, dt: 1217.07ms, fracRes: 0.0017, norm(attn): 0.2617, norm(output): 0.0354, norm(x): 0.0355, norm(y): 0.9544, norm:6.3186, tok/sec: 107694.66, flops:41.96, batch-reuse:1
@ 1341 train 6.2227 , allloss: 6.8437, dt: 1226.64ms, fracRes: 0.0017, norm(attn): 0.2500, norm(output): 0.0361, norm(x): 0.0360, norm(y): 0.9543, norm:5.8284, tok/sec: 106854.41, flops:41.63, batch-reuse:1
@ 1342 train 6.3337 , allloss: 6.9569, dt: 1241.04ms, fracRes: 0.0017, norm(attn): 0.2480, norm(output): 0.0364, norm(x): 0.0363, norm(y): 0.9544, norm:7.1969, tok/sec: 105614.69, flops:41.15, batch-reuse:1
@ 1343 train 6.1643 , allloss: 6.7833, dt: 1197.00ms, fracRes: 0.0016, norm(attn): 0.2441, norm(output): 0.0361, norm(x): 0.0361, norm(y): 0.9543, norm:6.0466, tok/sec: 109500.48, flops:42.66, batch-reuse:1
@ 1344 train 6.1792 , allloss: 6.7977, dt: 1182.04ms, fracRes: 0.0016, norm(attn): 0.2500, norm(output): 0.0356, norm(x): 0.0359, norm(y): 0.9542, norm:5.4834, tok/sec: 110886.67, flops:43.20, batch-reuse:1
@ 1345 train 6.0821 , allloss: 6.6891, dt: 1213.12ms, fracRes: 0.0015, norm(attn): 0.2520, norm(output): 0.0354, norm(x): 0.0353, norm(y): 0.9542, norm:8.2587, tok/sec: 108045.31, flops:42.09, batch-reuse:1
@ 1346 train 6.1857 , allloss: 6.8147, dt: 1222.94ms, fracRes: 0.0017, norm(attn): 0.2500, norm(output): 0.0359, norm(x): 0.0359, norm(y): 0.9538, norm:6.5073, tok/sec: 107177.43, flops:41.76, batch-reuse:1
@ 1347 train 6.1361 , allloss: 6.7764, dt: 1185.11ms, fracRes: 0.0018, norm(attn): 0.2500, norm(output): 0.0359, norm(x): 0.0361, norm(y): 0.9539, norm:5.5599, tok/sec: 110599.21, flops:43.09, batch-reuse:1
@ 1348 train 6.1879 , allloss: 6.8148, dt: 1207.76ms, fracRes: 0.0018, norm(attn): 0.2500, norm(output): 0.0361, norm(x): 0.0360, norm(y): 0.9539, norm:6.7116, tok/sec: 108525.19, flops:42.28, batch-reuse:1
